{
  "info": {
    "author": "Katrin Bauer, Andreas Lauser",
    "author_email": "katrin.b.bauer@mbition.io, andreas.lauser@mbition.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "<!-- SPDX-License-Identifier: MIT -->\n# odxtools\n\n`odxtools` is a set of utilities for working with diagnostic\ndescriptions of automotive electronic control units using the data\nmodel and the associated technologies of the ODX standard.\n\n[ODX](https://de.wikipedia.org/wiki/ODX) stands for \"Open Diagnostic\ndata eXchange\" and is primarily an XML based file format to describe\nthe diagnostic capabilities of the electronic control units (ECUs) of\ncomplex distributed technical systems (usually cars and trucks). ODX\nis an [open standard maintained by ASAM\ne.V.](https://www.asam.net/standards/detail/mcd-2-d/) and is also\nstandardized internationally by\n[ISO-22901](https://www.iso.org/standard/41207.html).\n\nUsually, ODX is used to complement the\n[UDS](https://en.wikipedia.org/wiki/Unified_Diagnostic_Services)\nautomotive diagnostics standard -- which itself can be considered to\nbe an extension of\n[OBD-II](https://en.wikipedia.org/wiki/On-board_diagnostics#OBD-II) --\nto provide a machine-processable description of the vendor-specific\ndiagnostics functionality of a vehicle's ECUs. That said, the\nfunctionality which is described by ODX files neither needs to be a\nsuper- nor a subset of OBD-II/UDS, e.g., ODX can be used to describe\ndiagnostic functionality that uses fundamentally different wire\nformats and conventions than the ones mandated by OBD-II/UDS. (In\npractice, the ODX-described functionality usually adheres to these\nstandards, though.)\n\nThe functionality provided by `odxtools` encompasses parsing and\ninternalizing ODX diagnostic database files as well as de- and\nencoding the data of diagnostic requests and their responses\nsend to/received from ECUs in an pythonic manner.\n\n## Table of Contents\n\n- [Use Cases](#use-cases)\n- [Installation](#installation)\n- [Usage Examples](#usage-examples)\n  - [Python snippets](#python-snippets)\n- [Interactive Usage](#interactive-usage)\n  - [Python REPL](#python-repl)\n- [Command line usage](#command-line-usage)\n  - [Generic parameters](#generic-parameters)\n  - [The `list` subcommand](#the-list-subcommand)\n  - [The `browse` subcommand](#the-browse-subcommand)\n  - [The `snoop` subcommand](#the-snoop-subcommand)\n  - [The `find` subcommand](#the-find-subcommand)\n- [Testing](#testing)\n- [Contributing](#contributing)\n- [Code of Conduct](#code-of-conduct)\n- [Provider Information](#provider-information)\n- [Acknowledgements](#acknowledgements)\n- [License](#license)\n\n## Use Cases\n\nHere are some of the intended use cases of `odxtools`:\n\n- Prototype development: Interacting with the diagnostic services of\n  electronic control units directly from python (requires taping into\n  the car's relevant CAN or ethernet bus)\n- End-of-production calibration/quality control: Initial set up and\n  running a self diagnosis of newly produced cars to ensure that\n  everything works as specified\n- After-sales: Implementing servicing functionality for workshops, i.e.,\n  defining test schedules based on the legally mandated functionality of\n  ISO 15031-6 (OBD II) as well as manufacturer-specific routines\n- Prototype development (II): Analyzing and debugging diagnostic sessions\n  done using third-party software\n- Prototype development (III): Implementing bridges to higher-level protocols\n  such as HTTP\n- Development for mass production: Accelerating the implementation of\n  diagnostic servicesfor low-cost ECUs by using `odxtools`-based code\n  generators for the diagnostic glue code on system-level languages like\n  C++ or rust\n\nPlease be aware that some of the use cases listed above are currently\nrather aspirational.\n\n## Installation\n\nThe easiest way of installing `odxtools` on your system is via `pip`:\n\n```bash\npip3 install odxtools\n```\n\nIf you want to develop `odxtools` itself, you need to install it from\nsource using `git`. The first step is to clone the repository:\n\n```bash\ncd $BASE_DIR\ngit clone https://github.com/mercedes-benz/odxtools\n```\n\nAfter this, make sure that all python dependencies are installed:\n\n```bash\ncd $BASE_DIR/odxtools\npip3 install -r requirements.txt\n```\n\nNext, build the project and install it on the system:\n\n```bash\ncd $BASE_DIR/odxtools\npython3 ./setup.py build\nsudo python3 ./setup.py install # <- optional\n```\n\nFinally, update the `PYTHONPATH` environment variable and the newly\ncloned module is ready to be used:\n\n```bash\nexport PYTHONPATH=\"$BASE_DIR/odxtools:$PYTHONPATH\"\n```\n\nNow, you can check whether the installation worked:\n\n```bash\npython3 -m odxtools list -a \"$YOUR_PDX_FILE\"\n```\n\n## Usage Examples\n\n### Python snippets\n\n- Load an ODX database from file `somersault.pdx`:\n\n  ```python\n  import odxtools\n\n  db = odxtools.load_pdx_file(\"somersault.pdx\")\n  ```\n\n- List the names of all available services of the `somersault_lazy` ECU:\n\n  ```python\n  # [...]\n\n  ecu = db.ecus.somersault_lazy\n  print(f\"Available services for {ecu.short_name}: {ecu.services}\")\n  ```\n\n- Determine the CAN IDs which the `somersault_lazy` ECU uses to send\n  and receive diagnostic messages:\n\n  ```python\n  # [...]\n\n  print(f\"ECU {ecu.short_name} listens for requests on CAN ID 0x{ecu.get_receive_id():x}\")\n  print(f\"ECU {ecu.short_name} transmits responses on CAN ID 0x{ecu.get_send_id():x}\")\n  ```\n\n- Encode a `session_start` request to the `somersault_lazy` ECU:\n\n  ```python\n  # [...]\n\n  raw_request_data = ecu.services.session_start()\n\n  print(f\"Message for session start request of ECU {ecu.short_name}: {raw_request_data}\")\n  # -> bytearray(b'\\x10\\x00')\n  ```\n\n- Encode the positive response to the `start_session` request:\n\n  ```python\n  # [...]\n\n  raw_request_data = ecu.services.session_start()\n  raw_response_data = ecu.services.session_start.positive_responses[0].encode(coded_request=raw_request_data)\n\n  print(f\"Positive response to session_start() of ECU {ecu.short_name}: {raw_response_data}\")\n  # -> bytearray(b'P')\n  ```\n\n- Decode a request:\n\n  ```python\n  # [...]\n\n  raw_data = b\"\\x10\\x00\"\n  decoded_message = ecu.decode(raw_data)\n  print(f\"decoded message: {decoded_message}\")\n  # -> decoded message: [start_session()]\n  ```\n\n- Decode a response to a request:\n\n  ```python\n  # [...]\n\n  raw_request_data = b\"\\x10\\x00\"\n  raw_response_data = b'P'\n  decoded_response = ecu.decode_response(raw_response_data, raw_request_data)\n  print(f\"decoded response: {decoded_response}\")\n  # -> decoded response: [session()]\n  ```\n\n## Interactive Usage\n\n### Python REPL\n\npython's interactive read-reval-print-loop (REPL) supports\ntab-completion on most plattforms, i.e., in this case, all data can be\nconveniently interactivly discovered and this makes `odxtools` a very\nconvenient tool to explore the capabilities of a given ECU.\n\nA notable exception is the Microsoft Windows platform: Most python\ndistribtions for Windows do not enable tab-completion by default in\ntheir REPL.  For more convenience in such a scenario, we recommend\nusing\n[ptpython](https://github.com/prompt-toolkit/ptpython/). `ptpython`\ncan be installed like any other python package, i.e., via `pip3\ninstall ptpython`. Then, the REPL ought to be started using\n\n```cmd\nc:\\odxtest>python3 \"C:\\Python39\\Lib\\site-packages\\ptpython\\entry_points\\run_ptpython.py\"\n```\n\nAlternatively, `pyreadline` can be used after installing it via `pip3\ninstall wheel pyreadline`.  With this, *basic* tab-completion for\npython under Windows in [Interactive\nMode](https://docs.python.org/3/tutorial/interpreter.html#interactive-mode)\nshould work.\n\n## Command line usage\n\nBased the python module, `odxtools` also provides a set of command\nline utilities for quick interactive explorations. Amongst others,\nthese utilities allow the inspection ODX/PDX files, snooping on\ndiagnostic sessions, etc. If `odxtools` is installed on a system-wide\nbasis, these commands can be invoked using `odxtools SUBCOMMAND\n[PARAMS]`, if the repository has been manually cloned via `git` and\n`odxtools` has not been installed on a system-wide basis, the way to\ninvoke these utilities is via `python3 -m odxtools SUBCOMMAND\n[PARAMS]`.\n\n### Generic parameters\n\nAvailable generic parameters and a list of subcommands can be obtained\nusing `odxtools --help`:\n\n```bash\n$ odxtools --help\nusage: odxtools [-h] [-c] {list,browse,snoop,find,encode-message,decode-message} ...\n\nUtilities to interact with automotive diagnostic descriptions based on the ODX standard.\n\nExamples:\n  For printing all services use:\n   odxtools list ./path/to/database.pdx --services\n  For browsing the data base and encoding messages use:\n   odxtools browse ./path/to/database.pdx\n\npositional arguments:\n  {list,browse,snoop,find,encode-message,decode-message}\n                        Select a sub command\n    list                Print a summary of automotive diagnostic files.\n    browse              Interactively browse the content of automotive diagnostic files.\n    snoop               Live decoding of a diagnostic session.\n    find                Find & display services by hex-data, or name, can also decodes requests.\n    encode-message      Encode a message. Interactively asks for parameter values.\n                        This is a short cut through the browse command to directly encode a message.\n    decode-message      Decode a message. Interactively asks for parameter values.\n                        This is a short cut through the browse command to directly encode a message.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c, --conformant      The input file fully confirms to the standard, i.e., disable work-arounds for bugs of the CANdela tool\n```\n\nAll subcommands accept the `--help` parameter:\n\n```bash\n$ odxtools list --help\nusage: odxtools list [-h] [-v VARIANT [VARIANT ...]] [-s [SERVICE [SERVICE ...]]] [-p] [-d] [-a] PDX_FILE\n[...]\n```\n\nIt follows is an inexhaustive list of the subcommands that are\ncurrently available:\n\n### The `list` subcommand\n\nThe `list` subcommand is used to parse a `.pdx` database file and\nprint the relevant parts of its content to the terminal.\n\n```bash\n$ odxtools list -h\nusage: odxtools list [-h] [-v VARIANT [VARIANT ...]] [-s [SERVICE [SERVICE ...]]] [-p] [-d] [-a] PDX_FILE\n\nList the content of automotive diagnostic files (*.pdx)\n\nExamples:\n  For displaying only the names of the diagnostic layers use:\n    odxtools list ./path/to/database.pdx\n  For displaying all content use:\n    odxtools list ./path/to/database.pdx --all\n  For more information use:\n    odxtools list -h\n\npositional arguments:\n  PDX_FILE              path to the .pdx file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v VARIANT [VARIANT ...], --variants VARIANT [VARIANT ...]\n                        Specifies which variants should be included.\n  -s [SERVICE [SERVICE ...]], --services [SERVICE [SERVICE ...]]\n                        Print a list of diagnostic services specified in the pdx.\n                        If no service names are specified, all services are printed.\n  -p, --params          Print a list of all parameters relevant for the selected items.\n  -d, --dops            Print a list of all data object properties relevant for the selected items\n  -a, --all             Print a list of all diagnostic services and DOPs specified in the pdx\n```\n\nThe options `--variants` and `--services` can be used to specify which\nservices should be printed.  If the `--params` option is specified,\nthe message layout is printed for all specified variants/services and\nthe `--all` parameter prints all data of the file that is recognized\nby `odxtools`. Example:\n\n```bash\n$ odxtools --conformant list $BASE_DIR/odxtools/examples/somersault.pdx --variants somersault_lazy --services do_forward_flips --params\nECU-VARIANT 'somersault_lazy' (Receive ID: 0x7b, Send ID: 0x1c8)\n num services: 5, num DOPs: 6, num communication parameters: 11.\nThe services of the ECU-VARIANT 'somersault_lazy' are:\n do_forward_flips <ID: somersault.service.do_forward_flips>\n  Message format of a request:\n           7     6     5     4     3     2     1     0\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      0 | sid(8 bits)                                   |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      1 | forward_soberness_check(8 bits)               |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      2 | num_flips(8 bits)                             |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n   Parameter(short_name='sid', type='CODED-CONST', semantic=None, byte_position=0, bit_length=8, coded_value='0xba')\n   Parameter(short_name='forward_soberness_check', type='VALUE', semantic=None, byte_position=1, bit_length=8, dop_ref='somersault.DOP.soberness_check')\n    DataObjectProperty('soberness_check', category='LINEAR', internal_type='A_UINT32', physical_type='A_UINT32')\n   Parameter(short_name='num_flips', type='VALUE', semantic=None, byte_position=2, bit_length=8, dop_ref='somersault.DOP.num_flips')\n    DataObjectProperty('num_flips', category='LINEAR', internal_type='A_UINT32', physical_type='A_UINT32')\n  Number of positive responses: 1\n  Message format of a positive response:\n           7     6     5     4     3     2     1     0\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      0 | sid(8 bits)                                   |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      1 | num_flips_done(8 bits)                        |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n   Parameter(short_name='sid', type='CODED-CONST', semantic=None, byte_position=0, bit_length=8, coded_value='0xfa')\n   Parameter(short_name='num_flips_done', type='MATCHING-REQUEST-PARAM', semantic=None, byte_position=1)\n    Request byte position = 2, byte length = 1\n  Number of negative responses: 1\n  Message format of a negative response:\n           7     6     5     4     3     2     1     0\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      0 | sid(8 bits)                                   |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      1 | rq_sid(8 bits)                                |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      2 | reason(8 bits)                                |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      3 | flips_successfully_done(8 bits)               |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n   Parameter(short_name='sid', type='CODED-CONST', semantic=None, byte_position=0, bit_length=8, coded_value='0x7f')\n   Parameter(short_name='rq_sid', type='MATCHING-REQUEST-PARAM', semantic=None, byte_position=1)\n    Request byte position = 0, byte length = 1\n   Parameter(short_name='reason', type='VALUE', semantic=None, byte_position=2, bit_length=8, dop_ref='somersault.DOP.error_code')\n    DataObjectProperty('error_code', category='LINEAR', internal_type='A_UINT32', physical_type='A_UINT32')\n   Parameter(short_name='flips_successfully_done', type='VALUE', semantic=None, byte_position=3, bit_length=8, dop_ref='somersault.DOP.num_flips')\n    DataObjectProperty('num_flips', category='LINEAR', internal_type='A_UINT32', physical_type='A_UINT32')\n```\n\n### The `browse` subcommand\n\nThe `browse` subcommand uses\n[PyInquirer](https://github.com/CITGuru/PyInquirer/) to interactively\nnavigate through the database of a `.pdx` file. For example, using the\n`browse` subcommand you can select the ECU and service without\nspamming the terminal:\n\n```bash\n$ odxtools --conformant browse $BASE_DIR/odxtools/examples/somersault.pdx\n? Select a Variant.  somersault_lazy\nECU-VARIANT 'somersault_lazy' (Receive ID: 0x7b, Send ID: 0x1c8)\n? The variant somersault_lazy offers the following services. Select one!  do_forward_flips\n? This service offers the following messages.  Request: do_forward_flips\n             7     6     5     4     3     2     1     0\n          +-----+-----+-----+-----+-----+-----+-----+-----+\n        0 | sid(8 bits)                                   |\n          +-----+-----+-----+-----+-----+-----+-----+-----+\n        1 | forward_soberness_check(8 bits)               |\n          +-----+-----+-----+-----+-----+-----+-----+-----+\n        2 | num_flips(8 bits)                             |\n          +-----+-----+-----+-----+-----+-----+-----+-----+\n     Parameter(short_name='sid', type='CODED-CONST', semantic=None, byte_position=0, bit_length=8, coded_value='0xba')\n     Parameter(short_name='forward_soberness_check', type='VALUE', semantic=None, byte_position=1, bit_length=8, dop_ref='somersault.DOP.soberness_check')\n      DataObjectProperty('soberness_check', category='LINEAR', internal_type='A_UINT32', physical_type='A_UINT32')\n     Parameter(short_name='num_flips', type='VALUE', semantic=None, byte_position=2, bit_length=8, dop_ref='somersault.DOP.num_flips')\n      DataObjectProperty('num_flips', category='LINEAR', internal_type='A_UINT32', physical_type='A_UINT32')\n[...]\n```\n\n### The `snoop` subcommand\n\nThe `snoop` subcommand can be used to decode a trace of a or a\ncurrently running diagnostic session:\n\n```bash\n# create a socketcan `vcan0` interface\nsudo ip link add dev vcan0 type vcan\nsudo ip link set vcan0 up\n\n# start the snooping on vcan0\nodxtools --conformant snoop -c vcan0 --variant \"somersault_lazy\" $BASE_DIR/odxtools/examples/somersault.pdx\n\n# on a different terminal, run the diagnostic session\n$BASE_DIR/odxtools/examples/somersaultlazy.py -c vcan0\n```\n\nThe snoop command will then output the following:\n\n```bash\n$ odxtools --conformant snoop -c vcan0 --variant \"somersault_lazy\" $BASE_DIR/odxtools/examples/somersault.pdx\nDecoding messages on channel vcan0\nTester: do_forward_flips(forward_soberness_check=18, num_flips=1)\n -> 7fba7f (bytearray(b'\\x7f\\xba\\x7f'), 3 bytes)\nTester: start_session()\n -> session()\nTester: do_forward_flips(forward_soberness_check=18, num_flips=1)\n -> grudging_forward(num_flips_done=bytearray(b'\\x01'))\nTester: do_forward_flips(forward_soberness_check=35, num_flips=1)\n -> flips_not_done(rq_sid=bytearray(b'\\xba'), reason=0, flips_successfully_done=0)\nTester: do_forward_flips(forward_soberness_check=18, num_flips=3)\n -> grudging_forward(num_flips_done=bytearray(b'\\x03'))\nTester: do_forward_flips(forward_soberness_check=18, num_flips=50)\n -> flips_not_done(rq_sid=bytearray(b'\\xba'), reason=1, flips_successfully_done=6)\n```\n\n### The `find` subcommand\n\nThe `find` subcommand can be used to find a service and its associated \ninformation by either a hex request, or partial name via cli. \n\nIn addition, it can also decode a hex request and display its parameters \nmapped to a service. \n\n```bash\n$ odxtools find $BASE_DIR/odxtools/examples/somersault.pdx -D 10 00\n\n\n=====================================\nsomersault_lazy, somersault_assiduous\n=====================================\n\n\n session_start <ID: somersault.service.session_start>\n  Message format of a request:\n           7     6     5     4     3     2     1     0  \n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      0 | sid (8 bits)                                  |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      1 | id (8 bits)                                   |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n   Parameter(short_name='sid', type='CODED-CONST', semantic=None, byte_position=0, bit_length=8, coded_value='0x10')\n   Parameter(short_name='id', type='CODED-CONST', semantic=None, byte_position=1, bit_length=8, coded_value='0x0')\n  Number of positive responses: 1\n  Message format of a positive response:\n           7     6     5     4     3     2     1     0  \n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      0 | sid (8 bits)                                  |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      1 | can_do_backward_flips (8 bits)                |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n   Parameter(short_name='sid', type='CODED-CONST', semantic=None, byte_position=0, bit_length=8, coded_value='0x50')\n   Parameter(short_name='can_do_backward_flips', type='VALUE', semantic=None, byte_position=1, bit_length=8, dop_ref='somersault.DOP.boolean')\n    DataObjectProperty('boolean', category='TEXTTABLE', internal_type='A_UINT32', physical_type='A_UNICODE2STRING')\n  Number of negative responses: 1\n  Message format of a negative response:\n           7     6     5     4     3     2     1     0  \n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      0 | sid (8 bits)                                  |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      1 | rq_sid (8 bits)                               |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n      2 | response_code (8 bits)                        |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n   Parameter(short_name='sid', type='CODED-CONST', semantic=None, byte_position=0, bit_length=8, coded_value='0x7f')\n   Parameter(short_name='rq_sid', type='MATCHING-REQUEST-PARAM', semantic=None, byte_position=1)\n    Request byte position = 0, byte length = 1\n   Parameter(short_name='response_code', type='VALUE', semantic=None, byte_position=2, bit_length=8, dop_ref='somersault.DOP.error_code')\n    DataObjectProperty('error_code', category='IDENTICAL', internal_type='A_UINT32', physical_type='A_UINT32')\n\nDecoded Request('start_session'):\n\tsid: 16\n\tid: 0\n```\n\n`odxtools find $BASE_DIR/odxtools/examples/somersault.pdx -d 10 00` would display the same information, \nwithout the decoded request, and `-s <name>` can be used to find a service by partial name.\n\n## Testing\n\nThe included unit tests can be run via\n\n```bash\npython -m unittest tests/test_*.py\n```\n\nThe static type checker can be run via\n```bash\npython3 -m mypy --ignore-missing-imports odxtools\n```\n\n## Contributing\n\nWe welcome any contributions.  If you want to contribute to this\nproject, please read the [contributing guide](https://github.com/mercedes-benz/odxtools/blob/main/CONTRIBUTING.md).\n\n## Code of Conduct\n\nPlease read our [Code of Conduct](https://github.com/mercedes-benz/daimler-foss/blob/master/CODE_OF_CONDUCT.md)\nas it is our base for interaction.\n\n## License\n\nThis project is licensed under the [MIT LICENSE](https://github.com/mercedes-benz/odxtools/blob/main/LICENSE).\n\n## Provider Information\n\nPlease visit <https://mbition.io/en/home/index.html> for information on the provider.\n\nNotice: Before you use the program in productive use, please take all necessary precautions,\ne.g. testing and verifying the program with regard to your specific use.\nThe program was tested solely for our own use cases, which might differ from yours.\n\n## Acknowledgements\n\nThis work includes research of the project\n[SofDCar](https://sofdcar.de/) (19S21002), which is funded by the\n[German Federal Ministry for Economic Affairs and\nClimate Action](https://www.bmwk.de/).\n\n## License\n\nThis project is licensed under the [MIT LICENSE](LICENSE).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Daimler/odxtools",
    "keywords": "can,can bus,odx,pdx,obd,uds,automotive,diagnostics",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "odxtools",
    "package_url": "https://pypi.org/project/odxtools/",
    "platform": null,
    "project_url": "https://pypi.org/project/odxtools/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Daimler/odxtools/issues",
      "Homepage": "https://github.com/Daimler/odxtools"
    },
    "release_url": "https://pypi.org/project/odxtools/3.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Utilities to work with the automotive diagnostics standard ODX.",
    "version": "3.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16590304,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a1abffaf9f97eea22b2a43ca63a217326f733f36c9d83597cc773ef43628014",
          "md5": "b21d1f71bcd33862e65dda4c992be349",
          "sha256": "a7961da5608f3b17848a182f8844206d4084c8470ccf4722e36ef4c9f984aa6d"
        },
        "downloads": -1,
        "filename": "odxtools-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b21d1f71bcd33862e65dda4c992be349",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 77743,
        "upload_time": "2022-03-09T17:14:57",
        "upload_time_iso_8601": "2022-03-09T17:14:57.977232Z",
        "url": "https://files.pythonhosted.org/packages/9a/1a/bffaf9f97eea22b2a43ca63a217326f733f36c9d83597cc773ef43628014/odxtools-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62dc7fad0b698ce94202da5f2f2ab5b2be6e0d9f091e381864c50e0bf882efe1",
          "md5": "3d057963d40b0fd213d8b2d05332807a",
          "sha256": "74979e9dbbbf1e6623bf6ea7011bd5e425f9c66c2a70f93f28fe2f66f9360bb5"
        },
        "downloads": -1,
        "filename": "odxtools-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3d057963d40b0fd213d8b2d05332807a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 77763,
        "upload_time": "2022-03-09T17:24:26",
        "upload_time_iso_8601": "2022-03-09T17:24:26.402761Z",
        "url": "https://files.pythonhosted.org/packages/62/dc/7fad0b698ce94202da5f2f2ab5b2be6e0d9f091e381864c50e0bf882efe1/odxtools-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e8d21a853a209149060f68417779c5fbd3f97e6df08eb79d7817e1dd1f2c40c",
          "md5": "a6185607b782898cce35de4b9b4515ff",
          "sha256": "6612ca10b855ad1a3759095d52c37558c0a239a2e9123b6efaec2347a8d3d1ac"
        },
        "downloads": -1,
        "filename": "odxtools-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a6185607b782898cce35de4b9b4515ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 80978,
        "upload_time": "2022-03-16T18:58:12",
        "upload_time_iso_8601": "2022-03-16T18:58:12.134761Z",
        "url": "https://files.pythonhosted.org/packages/8e/8d/21a853a209149060f68417779c5fbd3f97e6df08eb79d7817e1dd1f2c40c/odxtools-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9989c9047dd8254f8e0d1967b7af060c7502a98d8e1ebe55321a079dab0fe887",
          "md5": "989e33eae18b638d99b6c35094169d6c",
          "sha256": "5597540ca53585c92a1598c4cf4f965581be3f45ce04df8cdd4c3ed42f8c3802"
        },
        "downloads": -1,
        "filename": "odxtools-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "989e33eae18b638d99b6c35094169d6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 81785,
        "upload_time": "2022-04-22T21:17:32",
        "upload_time_iso_8601": "2022-04-22T21:17:32.317861Z",
        "url": "https://files.pythonhosted.org/packages/99/89/c9047dd8254f8e0d1967b7af060c7502a98d8e1ebe55321a079dab0fe887/odxtools-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8dc04f673ce71491aa77eab6d2096c6dcb6de0c530c678cb934c716456caad34",
          "md5": "79fbf50180b8f22ca8cfa64a376d5fae",
          "sha256": "ab70a8b95ea270c5f4acfc06ad455e6713ef8a1a479ec5d59ba747d0c848269f"
        },
        "downloads": -1,
        "filename": "odxtools-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "79fbf50180b8f22ca8cfa64a376d5fae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 81848,
        "upload_time": "2022-04-22T21:17:07",
        "upload_time_iso_8601": "2022-04-22T21:17:07.893253Z",
        "url": "https://files.pythonhosted.org/packages/8d/c0/4f673ce71491aa77eab6d2096c6dcb6de0c530c678cb934c716456caad34/odxtools-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6c8565befdb622fa0e1d26c512482c6799e026ebc569671f70e96bd1e933f53",
          "md5": "badb1de713e268d82e96e81df9e132f3",
          "sha256": "e0c64c0671b2bee3bd7e814f9a9a9af9e6d60dd188ae245da7cc8588d53aead4"
        },
        "downloads": -1,
        "filename": "odxtools-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "badb1de713e268d82e96e81df9e132f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 81779,
        "upload_time": "2022-04-25T11:26:23",
        "upload_time_iso_8601": "2022-04-25T11:26:23.567326Z",
        "url": "https://files.pythonhosted.org/packages/b6/c8/565befdb622fa0e1d26c512482c6799e026ebc569671f70e96bd1e933f53/odxtools-1.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5ffde5290d45a902ba75746e37e5e772937ae2447d988188f2aa6cd3facd7f2",
          "md5": "9bed6e9615b932d7efc5986e062aa2b3",
          "sha256": "a025d32a6c1fe835203e210aa7ee8c5f68c9e785992ff88b713b66a2c59f7009"
        },
        "downloads": -1,
        "filename": "odxtools-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9bed6e9615b932d7efc5986e062aa2b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 82936,
        "upload_time": "2022-05-11T15:34:53",
        "upload_time_iso_8601": "2022-05-11T15:34:53.428643Z",
        "url": "https://files.pythonhosted.org/packages/e5/ff/de5290d45a902ba75746e37e5e772937ae2447d988188f2aa6cd3facd7f2/odxtools-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecb0361514978a0a958db0012c8e1cc503933feaa6ef9f9a2bce96e9695c2920",
          "md5": "0ade5ed6e12e08609c59c43dfcdfa8da",
          "sha256": "4aeb2a68cc6b0cfedb5782f2001bdc8a6abca0d9a0fbf62fe544e7ca77d23a64"
        },
        "downloads": -1,
        "filename": "odxtools-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ade5ed6e12e08609c59c43dfcdfa8da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 84095,
        "upload_time": "2022-06-08T14:36:43",
        "upload_time_iso_8601": "2022-06-08T14:36:43.531603Z",
        "url": "https://files.pythonhosted.org/packages/ec/b0/361514978a0a958db0012c8e1cc503933feaa6ef9f9a2bce96e9695c2920/odxtools-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "374d59e323f43c7c7feb8078958df9451508522cfbba8b33370290d7b3b4b088",
          "md5": "90494b33bff24a45c92b8c2e0a358b69",
          "sha256": "03754a7ae5818e7fc2b21db3f6f374eeb9219e024d7e0fa614d9ab7e80542c80"
        },
        "downloads": -1,
        "filename": "odxtools-1.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "90494b33bff24a45c92b8c2e0a358b69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 86228,
        "upload_time": "2022-08-01T07:53:37",
        "upload_time_iso_8601": "2022-08-01T07:53:37.773204Z",
        "url": "https://files.pythonhosted.org/packages/37/4d/59e323f43c7c7feb8078958df9451508522cfbba8b33370290d7b3b4b088/odxtools-1.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6cd89a7082e9371fdaca3539a7ef45cca0769a79ff658aa3d787af9b5249133",
          "md5": "9a43cc6ae25fd2a234c3ce3f495ba85e",
          "sha256": "2b57ae71ebe398dc7ad1e5ef5eacdfaec1f14ed91e18c143ff420e72733bfb2b"
        },
        "downloads": -1,
        "filename": "odxtools-1.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9a43cc6ae25fd2a234c3ce3f495ba85e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 86338,
        "upload_time": "2022-08-17T06:55:30",
        "upload_time_iso_8601": "2022-08-17T06:55:30.046729Z",
        "url": "https://files.pythonhosted.org/packages/d6/cd/89a7082e9371fdaca3539a7ef45cca0769a79ff658aa3d787af9b5249133/odxtools-1.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aac731188b3f133e671685bb92c2d7e595451a27ddc0397ab3c8aba364f6d269",
          "md5": "99e19111761aaa7ec9c73ec19889c1ac",
          "sha256": "4ea69d20a49091488813cff60858d1703b01358e5512fce554b44554864ff7b1"
        },
        "downloads": -1,
        "filename": "odxtools-1.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "99e19111761aaa7ec9c73ec19889c1ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 86501,
        "upload_time": "2022-08-17T18:16:53",
        "upload_time_iso_8601": "2022-08-17T18:16:53.987422Z",
        "url": "https://files.pythonhosted.org/packages/aa/c7/31188b3f133e671685bb92c2d7e595451a27ddc0397ab3c8aba364f6d269/odxtools-1.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "580e72012eed59fae8549e5a4a6590e5b6df0bef2cf631475f37d9deca606ee6",
          "md5": "9f6d50e80c9714c94274631338f27603",
          "sha256": "242fd2e828608b320a1e3215e910aa1f9151c80fa16eb0be38efeb5b99f3617b"
        },
        "downloads": -1,
        "filename": "odxtools-1.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9f6d50e80c9714c94274631338f27603",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 89072,
        "upload_time": "2022-08-20T08:27:41",
        "upload_time_iso_8601": "2022-08-20T08:27:41.631225Z",
        "url": "https://files.pythonhosted.org/packages/58/0e/72012eed59fae8549e5a4a6590e5b6df0bef2cf631475f37d9deca606ee6/odxtools-1.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b215c151a2d0f072e412501faf988eef9898b1aac661b39db769ea95f0bfe7f9",
          "md5": "39ab2bb10fe3893903f739e57010870c",
          "sha256": "cdbdda9ed5605378df34cac167c2becb00c0b6ef8a8d4960885e43d3a5bd2f5a"
        },
        "downloads": -1,
        "filename": "odxtools-1.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "39ab2bb10fe3893903f739e57010870c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 90854,
        "upload_time": "2022-08-23T17:44:39",
        "upload_time_iso_8601": "2022-08-23T17:44:39.121691Z",
        "url": "https://files.pythonhosted.org/packages/b2/15/c151a2d0f072e412501faf988eef9898b1aac661b39db769ea95f0bfe7f9/odxtools-1.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e0a476f9a4addc39531736fb0a1d9c9561639367d107d6d39ee5c6f9410579f",
          "md5": "b8f86d40d512feb437958a050086bbb1",
          "sha256": "e25272ad43f2b512223c28a8abcb8df99597008fb39324b34829e2af040971fa"
        },
        "downloads": -1,
        "filename": "odxtools-1.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b8f86d40d512feb437958a050086bbb1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 90854,
        "upload_time": "2022-09-01T11:04:42",
        "upload_time_iso_8601": "2022-09-01T11:04:42.203095Z",
        "url": "https://files.pythonhosted.org/packages/7e/0a/476f9a4addc39531736fb0a1d9c9561639367d107d6d39ee5c6f9410579f/odxtools-1.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "332fc78d307f5b65e77b2ba58b74530b29f5e9c4b252a348c6ee277ec39d3f3b",
          "md5": "83a55d994a4eb0f77e4f9c57b15d07ea",
          "sha256": "5c54cc0a3d0710905e8d519b18738f40be8ef7a167c672a7ad5ca982d89bcf16"
        },
        "downloads": -1,
        "filename": "odxtools-1.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "83a55d994a4eb0f77e4f9c57b15d07ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 91683,
        "upload_time": "2022-09-21T10:59:40",
        "upload_time_iso_8601": "2022-09-21T10:59:40.780522Z",
        "url": "https://files.pythonhosted.org/packages/33/2f/c78d307f5b65e77b2ba58b74530b29f5e9c4b252a348c6ee277ec39d3f3b/odxtools-1.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d77c5b6c26b736e3b3139c20fee1013fef748f89e3ff1603143d16fba3d8582f",
          "md5": "da5175c194f444e2ea17e5821f117dcd",
          "sha256": "c3e24862a6cef29b9243ae0aef75df6148cc2f589529f1f2b3709203d0f0944b"
        },
        "downloads": -1,
        "filename": "odxtools-1.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "da5175c194f444e2ea17e5821f117dcd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 92546,
        "upload_time": "2022-09-28T08:55:49",
        "upload_time_iso_8601": "2022-09-28T08:55:49.120858Z",
        "url": "https://files.pythonhosted.org/packages/d7/7c/5b6c26b736e3b3139c20fee1013fef748f89e3ff1603143d16fba3d8582f/odxtools-1.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0efed9d17570972fe05e04babe2229763b38fd9c6682fc17c9e90f86d48a140",
          "md5": "3434ecc28e45ff0f146b54065fa5055e",
          "sha256": "e85b9190718979889826cb496ac9cb2bf039e0688d956d21f6546fd3a449bd41"
        },
        "downloads": -1,
        "filename": "odxtools-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3434ecc28e45ff0f146b54065fa5055e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 95828,
        "upload_time": "2022-10-28T17:04:27",
        "upload_time_iso_8601": "2022-10-28T17:04:27.530688Z",
        "url": "https://files.pythonhosted.org/packages/c0/ef/ed9d17570972fe05e04babe2229763b38fd9c6682fc17c9e90f86d48a140/odxtools-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c2bbee85948ea89acf90419ab8f4b4fba1c004161f4aa6142e35314154b77b3",
          "md5": "790c3c5bf00bad6f828597cf33fd942a",
          "sha256": "95c8234e74427b10319064caeebad2d59fadff986194b1d2c7cfb2853c6e184c"
        },
        "downloads": -1,
        "filename": "odxtools-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "790c3c5bf00bad6f828597cf33fd942a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 96289,
        "upload_time": "2022-11-08T10:26:27",
        "upload_time_iso_8601": "2022-11-08T10:26:27.430183Z",
        "url": "https://files.pythonhosted.org/packages/1c/2b/bee85948ea89acf90419ab8f4b4fba1c004161f4aa6142e35314154b77b3/odxtools-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49763664f4fc2839d749ce83715b7f053e32cc1b86243982b0a926855ed2e476",
          "md5": "6191e244f462097a6a1a564fd3880fc9",
          "sha256": "0df3ab6df9659a9e1470d5c958c8a587dff5e72a936ae1019d0aa42509af29c8"
        },
        "downloads": -1,
        "filename": "odxtools-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6191e244f462097a6a1a564fd3880fc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 95965,
        "upload_time": "2022-11-11T13:56:04",
        "upload_time_iso_8601": "2022-11-11T13:56:04.567759Z",
        "url": "https://files.pythonhosted.org/packages/49/76/3664f4fc2839d749ce83715b7f053e32cc1b86243982b0a926855ed2e476/odxtools-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a23196815546a0f35e9f04283d9f0e7ae66e57baf711946884a69e2052c30600",
          "md5": "4ed9fc08490ad12315a8fb72b41be113",
          "sha256": "98f704f82cffa14b2e9ee0cb45c84d36c70ff8fafde39849ee45de01b0608265"
        },
        "downloads": -1,
        "filename": "odxtools-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4ed9fc08490ad12315a8fb72b41be113",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 97770,
        "upload_time": "2022-11-16T10:12:18",
        "upload_time_iso_8601": "2022-11-16T10:12:18.926584Z",
        "url": "https://files.pythonhosted.org/packages/a2/31/96815546a0f35e9f04283d9f0e7ae66e57baf711946884a69e2052c30600/odxtools-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44f01df8b6053ddf17ddca04ff5286b9566c624a19caeb176a00520cdd212286",
          "md5": "6a8271cbeb0654c3e02fed5e7381ede2",
          "sha256": "0cc196e2118b341313a8d3f53a46bd85d7de7e41cc98807f3e133f3f89cf4190"
        },
        "downloads": -1,
        "filename": "odxtools-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6a8271cbeb0654c3e02fed5e7381ede2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 97650,
        "upload_time": "2022-11-21T11:05:00",
        "upload_time_iso_8601": "2022-11-21T11:05:00.136682Z",
        "url": "https://files.pythonhosted.org/packages/44/f0/1df8b6053ddf17ddca04ff5286b9566c624a19caeb176a00520cdd212286/odxtools-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f97b8788bf69b4e161bacbaa8f985f2837a828f16417943517acd7193e32ed5",
          "md5": "23578422a1472907f89b878412fa2ecf",
          "sha256": "0aa66ffa978407e040115e56992244fdc427f46ae603e9c4ed8d97a247d61ff3"
        },
        "downloads": -1,
        "filename": "odxtools-2.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "23578422a1472907f89b878412fa2ecf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 100604,
        "upload_time": "2022-12-12T08:24:21",
        "upload_time_iso_8601": "2022-12-12T08:24:21.631855Z",
        "url": "https://files.pythonhosted.org/packages/3f/97/b8788bf69b4e161bacbaa8f985f2837a828f16417943517acd7193e32ed5/odxtools-2.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d963083417e49fd9b407af5f1012cfe74fba0c40439dca24521734c0249db1d8",
          "md5": "031294a8d458ef2f40919d8dd1183410",
          "sha256": "3b2b0d6229578185fcc5122fd54435a37e031dc2628dab06fdf3f5ffff4b22a7"
        },
        "downloads": -1,
        "filename": "odxtools-2.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "031294a8d458ef2f40919d8dd1183410",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 101163,
        "upload_time": "2022-12-15T17:24:52",
        "upload_time_iso_8601": "2022-12-15T17:24:52.324672Z",
        "url": "https://files.pythonhosted.org/packages/d9/63/083417e49fd9b407af5f1012cfe74fba0c40439dca24521734c0249db1d8/odxtools-2.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c008af0f4c803e73f22a04f147d2ee5176cf7e7ca89b549b4d96ff027a1f5f4f",
          "md5": "f1aac01d7b0d4851e753faa76747bb6c",
          "sha256": "ba7890ff79e27e6515340d94b12cd9abfc7c2373b8ecf67938b9ac77f20c7eb5"
        },
        "downloads": -1,
        "filename": "odxtools-2.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f1aac01d7b0d4851e753faa76747bb6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 102200,
        "upload_time": "2022-12-20T15:17:37",
        "upload_time_iso_8601": "2022-12-20T15:17:37.087731Z",
        "url": "https://files.pythonhosted.org/packages/c0/08/af0f4c803e73f22a04f147d2ee5176cf7e7ca89b549b4d96ff027a1f5f4f/odxtools-2.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd4ae6a06dd82db78e5c896d1637d32723b867bacb76ad4edd005474e41b94bc",
          "md5": "5c5ca18502da38a528c1c387dce0b3d6",
          "sha256": "c6982a590a90d8179fa6fb488a5faa27f399dfe4cdf1ee463999aa678f300b41"
        },
        "downloads": -1,
        "filename": "odxtools-2.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5c5ca18502da38a528c1c387dce0b3d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 102439,
        "upload_time": "2023-01-04T11:10:18",
        "upload_time_iso_8601": "2023-01-04T11:10:18.503386Z",
        "url": "https://files.pythonhosted.org/packages/fd/4a/e6a06dd82db78e5c896d1637d32723b867bacb76ad4edd005474e41b94bc/odxtools-2.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ec09406dba96a83894cf845fb45b6311d7fe42b6b42bf6e8eb732acb4ed5ffc",
          "md5": "79e85f6eb767aec2c4fb7e280bf3c18e",
          "sha256": "add00675167d94b95b2f894c92b09eb929dc287fb99b40f182630482b6ba1f34"
        },
        "downloads": -1,
        "filename": "odxtools-2.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "79e85f6eb767aec2c4fb7e280bf3c18e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 116774,
        "upload_time": "2023-01-05T13:15:12",
        "upload_time_iso_8601": "2023-01-05T13:15:12.287530Z",
        "url": "https://files.pythonhosted.org/packages/1e/c0/9406dba96a83894cf845fb45b6311d7fe42b6b42bf6e8eb732acb4ed5ffc/odxtools-2.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "804b3250c3a9c3fe62a5f50c159707053844d6c903a32173e54b5f02f2ddf44d",
          "md5": "abb3e84e5bc5de966d6b37f1e6d5d0b7",
          "sha256": "36e64730d529c24103ba072a6eb6ef19d2d9653ccf1fc2d2c498014df084c41a"
        },
        "downloads": -1,
        "filename": "odxtools-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "abb3e84e5bc5de966d6b37f1e6d5d0b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 120103,
        "upload_time": "2023-01-13T13:18:02",
        "upload_time_iso_8601": "2023-01-13T13:18:02.126592Z",
        "url": "https://files.pythonhosted.org/packages/80/4b/3250c3a9c3fe62a5f50c159707053844d6c903a32173e54b5f02f2ddf44d/odxtools-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4149ca4f93b02348bb6297839096e94dce81a7e4bfd95c307c534e250850191",
          "md5": "8b8efa669b750b36ca7a46f84ba90522",
          "sha256": "af0e38648ff3bc971c60cf408230447061d853289d638681f32a01339ca1b15a"
        },
        "downloads": -1,
        "filename": "odxtools-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8b8efa669b750b36ca7a46f84ba90522",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 120169,
        "upload_time": "2023-01-13T15:07:44",
        "upload_time_iso_8601": "2023-01-13T15:07:44.938982Z",
        "url": "https://files.pythonhosted.org/packages/c4/14/9ca4f93b02348bb6297839096e94dce81a7e4bfd95c307c534e250850191/odxtools-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a23bb39192ef4d9a43663c476d520ef929b99522792126e1b6def0a31aee124",
          "md5": "34bb95e91abb977f8e4eb312551eee4a",
          "sha256": "9371a8b3b2bb82669e95a810a7211b03f972c399fd1171322d3782b981c1abd1"
        },
        "downloads": -1,
        "filename": "odxtools-3.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "34bb95e91abb977f8e4eb312551eee4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 118533,
        "upload_time": "2023-01-27T13:39:19",
        "upload_time_iso_8601": "2023-01-27T13:39:19.357444Z",
        "url": "https://files.pythonhosted.org/packages/6a/23/bb39192ef4d9a43663c476d520ef929b99522792126e1b6def0a31aee124/odxtools-3.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a23bb39192ef4d9a43663c476d520ef929b99522792126e1b6def0a31aee124",
        "md5": "34bb95e91abb977f8e4eb312551eee4a",
        "sha256": "9371a8b3b2bb82669e95a810a7211b03f972c399fd1171322d3782b981c1abd1"
      },
      "downloads": -1,
      "filename": "odxtools-3.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "34bb95e91abb977f8e4eb312551eee4a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 118533,
      "upload_time": "2023-01-27T13:39:19",
      "upload_time_iso_8601": "2023-01-27T13:39:19.357444Z",
      "url": "https://files.pythonhosted.org/packages/6a/23/bb39192ef4d9a43663c476d520ef929b99522792126e1b6def0a31aee124/odxtools-3.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}