{
  "info": {
    "author": "Lonami Exo",
    "author_email": "totufals@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Communications :: Chat"
    ],
    "description": "Forked Telethon |logo|\n======================\n.. |logo| image:: https://github.com/LonamiWebs/Telethon/raw/master/logo.svg\n    :width: 60pt\n    :height: 60pt\n\n`‚ÜóÔ∏è Updated tl.telethon.dev <https://disk6969.github.io/Telethon>`_\n\n.. code-block:: py\n\n  +-----------------------+\n  |   Telethon 1.24.0     |\n  +-----------------------+\n  |      layer: 144       |\n  +-----------------------+\n\nAbout\n=====\n\nA simple clone of the awesome Telegram MTproto client version 1.24.0 but with up to date components, \nYou do not have to change previous code with telethon, as there are no breaking changes.\n\ninstall: (if any issues, try uninstalling telethon first):\n\n.. code-block:: py\n\n  pip install -U newthon\n\n\nReactions\n=========\n\n.. code-block:: py\n\n    client.send_reaction(chat, message, \"üò¢\")\n\nor shorter:\n\n.. code-block:: py\n\n    message.react(\"üòÅ\", big=True)\n\nto send a reaction with animation(for pms) use `big=True`, and, to remove a reaction use `remove=True`: \n\n.. code-block:: py\n\n    message.react(remove=True)\n\nPremium\n=======\n- You can send files larger that 2GiB through Telegram\n- Premium users will have .premium in their user object\n- Premium stickers will also have .premium that might need dealing if you don't have subscription.\n\nspoilers and custom emoji\n=========================\nUse `||Text||` to create spoilers, for HTML use `<tg-spoiler>Text</tg-spoiler>`\nto create a customEmoji markdown use `<emoji id=\"5373101475679443553\">üòâ</emoji>`.\nthe id being the document id of any CustomEmoji Document.id in its pack.\n\n\nRequests of join and events for ChatAction events\n=================================================\n* event.new_invite (only for bot accounts)\n\n.. code-block:: py\n\n    @bot.on(events.ChatAction(func=lambda e : e.new_join_request))\n    async def _(event):\n        event.approve_user(approved=True or False)\n\n\n* event.new_approve for user accounts\n\n.. code-block:: py\n\n    @client.on(events.ChatAction(func=lambda e : e.new_approve))\n    async def _(event):\n        event.approve_user(approved=True/False)\n\n\nusing raw api to accept old requests\n------------------------------------\n\n- Getting them\n\n.. code-block:: py\n\n    result = client(functions.messages.GetChatInviteImportersRequest(\n        peer=\"chat\",\n        offset_date=None, \n        offset_user=telethon.tl.types.InputUserEmpty(),\n        limit=1000\n    ))\n\n- manual approve\n\n.. code-block:: py\n\n    for a in result:\n        client(functions.messages.HideChatJoinRequestRequest(\n            peer='chat or username',\n            user_id='To-approve',\n            approved=True or False\n        ))\n\n\n- batch approve: \n\n.. code-block:: py \n\n    client(functions.messages.HideAllChatJoinRequestsRequest(\n        peer=entity, \n        approved=True or False\n    ))\n\nWebView Button\n===============\nYou can input a web bot button as an inline button or a keyboard button, sine it can be both.\nthe default is inline button, you can use the inline=False to use it in a keyboard button\n\n.. code-block:: py\n\n    from telethon import Button\n    client.send_message(chat, \"Open Google\", buttons=Button.web(\"google\", \"https://google.com\")\n\n- note that webapp keyboard can be only a single button, it won't allow others with it.\n\n.. code-block:: py\n\n    client.send_message(chat, \"YouTube\", buttons=Button.web(\"google\", \"https://YouTube.com\", inline=False)\n\nContent privacy\n===============\n``chat.noforwards`` will return True for chats with forward restriction enabled, same applies to bot messages with ``message.noforwards``\nYou can use the argument ``noforwards=True`` in sender methods.\n\n.. code-block:: py\n\n    client.send_message(chat, \"lonami is god\", noforwards=True)\n\nlinks in get message\n====================\nyou can now get a single message using the link in get/iter_messages.\n\n``client.get_messages(\"https://t.me/username/1\")``\n\nThe message object will also have .link attribute, which will return link of the message \n\niter_participant\n================\naggressive True will sleep by default.\nits sleep value can be adjusted using the sleep parameter, this will make it sleep for that specified amount before processing next chunk.\n\n.. code-block:: py \n\n    client.get_participant(chat, aggressive=True, sleep=2)\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/LonamiWebs/Telethon/releases",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/disk6969/Telethon",
    "keywords": "telegram api chat client library messaging mtproto",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "newthon-fixed",
    "package_url": "https://pypi.org/project/newthon-fixed/",
    "platform": null,
    "project_url": "https://pypi.org/project/newthon-fixed/",
    "project_urls": {
      "Download": "https://github.com/LonamiWebs/Telethon/releases",
      "Homepage": "https://github.com/disk6969/Telethon"
    },
    "release_url": "https://pypi.org/project/newthon-fixed/1.27.6/",
    "requires_dist": [
      "pyaes",
      "rsa",
      "cryptg ; extra == 'cryptg'"
    ],
    "requires_python": ">=3.5",
    "summary": "An edited 1.24.0 version of the full-featured Telegram client library for Python 3",
    "version": "1.27.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15037008,
  "releases": {
    "1.27.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "920c09ee402789a60e1cf3b4b458e5949d89b5e82361e4f020c2f25f7ab9f049",
          "md5": "ffc15a0e98b152077f6cb344cacaa682",
          "sha256": "7d5e05cadd7d26675035201507ff7b7e3e25af9c1528a395cf4e05d4968696be"
        },
        "downloads": -1,
        "filename": "newthon_fixed-1.27.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ffc15a0e98b152077f6cb344cacaa682",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 561664,
        "upload_time": "2022-09-08T19:58:37",
        "upload_time_iso_8601": "2022-09-08T19:58:37.765644Z",
        "url": "https://files.pythonhosted.org/packages/92/0c/09ee402789a60e1cf3b4b458e5949d89b5e82361e4f020c2f25f7ab9f049/newthon_fixed-1.27.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34b93b81a3b014689033384a4fc62385912fc97abd5ab5529fe6496f9ac52691",
          "md5": "fc0abf6aa5b718e6d2a9a8cccbd7ffa9",
          "sha256": "559734237c42411702cbc7b436cb10058a58b7301da148193ff9d82b93d0723a"
        },
        "downloads": -1,
        "filename": "newthon_fixed-1.27.6.tar.gz",
        "has_sig": false,
        "md5_digest": "fc0abf6aa5b718e6d2a9a8cccbd7ffa9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 496504,
        "upload_time": "2022-09-08T19:58:40",
        "upload_time_iso_8601": "2022-09-08T19:58:40.184256Z",
        "url": "https://files.pythonhosted.org/packages/34/b9/3b81a3b014689033384a4fc62385912fc97abd5ab5529fe6496f9ac52691/newthon_fixed-1.27.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "920c09ee402789a60e1cf3b4b458e5949d89b5e82361e4f020c2f25f7ab9f049",
        "md5": "ffc15a0e98b152077f6cb344cacaa682",
        "sha256": "7d5e05cadd7d26675035201507ff7b7e3e25af9c1528a395cf4e05d4968696be"
      },
      "downloads": -1,
      "filename": "newthon_fixed-1.27.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ffc15a0e98b152077f6cb344cacaa682",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 561664,
      "upload_time": "2022-09-08T19:58:37",
      "upload_time_iso_8601": "2022-09-08T19:58:37.765644Z",
      "url": "https://files.pythonhosted.org/packages/92/0c/09ee402789a60e1cf3b4b458e5949d89b5e82361e4f020c2f25f7ab9f049/newthon_fixed-1.27.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34b93b81a3b014689033384a4fc62385912fc97abd5ab5529fe6496f9ac52691",
        "md5": "fc0abf6aa5b718e6d2a9a8cccbd7ffa9",
        "sha256": "559734237c42411702cbc7b436cb10058a58b7301da148193ff9d82b93d0723a"
      },
      "downloads": -1,
      "filename": "newthon_fixed-1.27.6.tar.gz",
      "has_sig": false,
      "md5_digest": "fc0abf6aa5b718e6d2a9a8cccbd7ffa9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 496504,
      "upload_time": "2022-09-08T19:58:40",
      "upload_time_iso_8601": "2022-09-08T19:58:40.184256Z",
      "url": "https://files.pythonhosted.org/packages/34/b9/3b81a3b014689033384a4fc62385912fc97abd5ab5529fe6496f9ac52691/newthon_fixed-1.27.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}