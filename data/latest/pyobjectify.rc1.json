{
  "info": {
    "author": "",
    "author_email": "Raymond Wu <wu.raymond@columbia.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# pyobjectify\n\nBridge the gap across the different file formats and streamline the process to accessing ingested data via Python objects\n\n![license](https://img.shields.io/badge/license-MIT-green?style=flat-square&color=022169) ![issues](https://img.shields.io/github/issues/wu-rymd/pyobjectify?style=flat-square&color=841C1C) [![codecov](https://codecov.io/gh/wu-rymd/pyobjectify/branch/main/graph/badge.svg?token=410L0PN9UC)](https://codecov.io/gh/wu-rymd/pyobjectify) ![build](https://img.shields.io/github/actions/workflow/status/wu-rymd/pyobjectify/build.yml)\n\n## Overview\n\nOpen data is abound. For example, NYC Open Data has over 3,000 datasets spanning over 97 agencies in New York City. This data comes in many different formats, including CSV, JSON, XML, XLS/XLSX, KML, KMZ, Shapefile, GeoJSON, JSON, and more.\n\nIn order to import and analyze the data in Python involves sending a request to download the raw data, then converting it into a Python object so that methods can be used to parse its contents. However, this process varies across the many different data types.\n\nThis project aims to streamline this process and bridge the gap across the different file formats to allow the end user to get started on data analytics more quickly with a quick function call.\n\n## Install from pip\n\n```\npip install pyobjectify\n```\n\n## Quick start\n\n```python\nimport pyobjectify\nimport pandas as pd\n\njson_dict = pyobjectify.from_url(\"https://bit.ly/42KCUSv\")  # URL holds JSON data, returns data in dict\njson_df = pyobjectify.from_url(\"https://bit.ly/42KCUSv\", pd.DataFrames)  # User-specified output data type\n```\n\n## Supported types\n\n#### Connectivity tyes\n\n- Local files (_e.g._ `./relative/example.json`, `/absolute/path/example.json`)\n- Online, static (_e.g._ `https://some.website/example.json`, `http://bit.ly/some-json-endpoint`)\n\nFor example, at the moment, a data stream from the Internet is not supported.\n\n#### Resource (input) data types\n\n- JSON\n- CSV\n- TSV\n- XML\n\n#### Supported conversions\n\n- JSON &rarr; `dict`, `list`, `pandas.DataFrame`\n- CSV &rarr; `list`\n- TSV &rarr; `list`\n- XML &rarr; `dict`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) 2023 Raymond Wu  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyobjectify",
    "package_url": "https://pypi.org/project/pyobjectify/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyobjectify/",
    "project_urls": {
      "repository": "https://github.com/wu-rymd/pyobjectify"
    },
    "release_url": "https://pypi.org/project/pyobjectify/0.1.1/",
    "requires_dist": [
      "certifi (==2022.12.7)",
      "charset-normalizer (==3.0.1)",
      "idna (==3.4)",
      "requests (==2.28.2)",
      "types-requests (==2.28.11.15)",
      "types-xmltodict (==0.13.0.2)",
      "urllib3 (==1.26.14)",
      "xmltodict (==0.13.0)",
      "numpy (==1.24.2)",
      "pandas (==1.5.3)",
      "python-dateutil (==2.8.2)",
      "pytz (==2023.2)",
      "six (==1.16.0)",
      "black (>=22) ; extra == 'develop'",
      "bump2version (>=1.0.0) ; extra == 'develop'",
      "check-manifest ; extra == 'develop'",
      "flake8 (>=3.7.8) ; extra == 'develop'",
      "flake8-black (>=0.2.1) ; extra == 'develop'",
      "flake8-pyproject ; extra == 'develop'",
      "mypy ; extra == 'develop'",
      "pytest (>=4.3.0) ; extra == 'develop'",
      "pytest-cov (>=2.6.1) ; extra == 'develop'",
      "twine ; extra == 'develop'",
      "wheel ; extra == 'develop'"
    ],
    "requires_python": ">=3.7",
    "summary": "Bridging the gap across the different file formats and streamlining the process to accessing ingested data via Python objects",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17447597,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e48cf645be84d25ca6643b7ee9efd3b28905ef05a8f61254f3d1a1a9b6bde800",
          "md5": "73147eca9324ea58f38681755a250a27",
          "sha256": "b3d38c8f15df5591dea80879c54787225dd636a3812bb6a026f88337e36d60bb"
        },
        "downloads": -1,
        "filename": "pyobjectify-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73147eca9324ea58f38681755a250a27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18634,
        "upload_time": "2023-03-26T07:06:08",
        "upload_time_iso_8601": "2023-03-26T07:06:08.700767Z",
        "url": "https://files.pythonhosted.org/packages/e4/8c/f645be84d25ca6643b7ee9efd3b28905ef05a8f61254f3d1a1a9b6bde800/pyobjectify-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4632f47a0488c10e209207d50728af9fff6d6ce33ebb731e7da90571bfba4f46",
          "md5": "d814347835b792631680c26ba4623b59",
          "sha256": "0c15dede4ae2fcf16cec5f1c80f71b4f1630c2f0a11eacc296784c9cc1b2f768"
        },
        "downloads": -1,
        "filename": "pyobjectify-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d814347835b792631680c26ba4623b59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19260,
        "upload_time": "2023-03-26T07:06:10",
        "upload_time_iso_8601": "2023-03-26T07:06:10.759270Z",
        "url": "https://files.pythonhosted.org/packages/46/32/f47a0488c10e209207d50728af9fff6d6ce33ebb731e7da90571bfba4f46/pyobjectify-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e48cf645be84d25ca6643b7ee9efd3b28905ef05a8f61254f3d1a1a9b6bde800",
        "md5": "73147eca9324ea58f38681755a250a27",
        "sha256": "b3d38c8f15df5591dea80879c54787225dd636a3812bb6a026f88337e36d60bb"
      },
      "downloads": -1,
      "filename": "pyobjectify-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "73147eca9324ea58f38681755a250a27",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 18634,
      "upload_time": "2023-03-26T07:06:08",
      "upload_time_iso_8601": "2023-03-26T07:06:08.700767Z",
      "url": "https://files.pythonhosted.org/packages/e4/8c/f645be84d25ca6643b7ee9efd3b28905ef05a8f61254f3d1a1a9b6bde800/pyobjectify-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4632f47a0488c10e209207d50728af9fff6d6ce33ebb731e7da90571bfba4f46",
        "md5": "d814347835b792631680c26ba4623b59",
        "sha256": "0c15dede4ae2fcf16cec5f1c80f71b4f1630c2f0a11eacc296784c9cc1b2f768"
      },
      "downloads": -1,
      "filename": "pyobjectify-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d814347835b792631680c26ba4623b59",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 19260,
      "upload_time": "2023-03-26T07:06:10",
      "upload_time_iso_8601": "2023-03-26T07:06:10.759270Z",
      "url": "https://files.pythonhosted.org/packages/46/32/f47a0488c10e209207d50728af9fff6d6ce33ebb731e7da90571bfba4f46/pyobjectify-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}