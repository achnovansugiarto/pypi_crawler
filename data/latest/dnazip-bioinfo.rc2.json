{
  "info": {
    "author": "dabane-ghassan",
    "author_email": "dabane.ghassan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# dnazip\n\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/dnazip-bioinfo?color=green)\n![PyPI](https://img.shields.io/pypi/v/dnazip-bioinfo?color=green)\n\n[![ForTheBadge built-with-science](http://ForTheBadge.com/images/badges/built-with-science.svg)](https://GitHub.com/Naereen/)\n[![forthebadge](https://forthebadge.com/images/badges/powered-by-coffee.svg)](https://forthebadge.com)\n[![forthebadge](https://forthebadge.com/images/badges/powered-by-black-magic.svg)](https://forthebadge.com)\n[![forthebadge](https://forthebadge.com/images/badges/uses-brains.svg)](https://forthebadge.com)\n[![forthebadge](https://forthebadge.com/images/badges/built-with-grammas-recipe.svg)](https://forthebadge.com)\n[![forthebadge](https://forthebadge.com/images/badges/ctrl-c-ctrl-v.svg)](https://forthebadge.com)\n[![forthebadge](https://forthebadge.com/images/badges/winter-is-coming.svg)](https://forthebadge.com)\n\n- A Python implementation of ***The Burrows-Wheeler Transform (BWT)*** alongside ***Huffman compression*** on DNA sequences.\n- Hosted on [GitHub](https://github.com/dabane-ghassan/dnazip)\n- Documentation? [**here**](https://dabane-ghassan.github.io/dnazip/)\n\n## Demo\n\n- A demo for installation and using the GUI can be found [**here**]()\n\n## Installation\n\n- You can install the package either from pip or from the source code hosted on github.\n\n### With pip\n\n```bash\npip install dnazip-bioinfo\n```\n\n### From source\n\n```bash\ngit clone https://github.com/dabane-ghassan/dnazip.git\ncd dnazip\nsudo python3 setup.py install\n```\n\n## Getting started\n\n### GUI\n\n- After installing the package from source or using pip, the interface can be launched simply from the command line:\n```\ndnazip\n```\n- If problems occur with the installation, an interface instance can be imported and launched:\n```python\nfrom dnazip.interface import Interface\ngui = Interface()\ngui.main()\n```\n\n### Using the library\n\n#### Generating a random DNA sequence\n\n- A random DNA sequence with an alphabet of ATCGN can be generated for any given length specified in the parameter.\n\n```python\nfrom dnazip.sequence import Sequence\nrandseq = Sequence.generate(length=5000)\nSequence('/path/to/new/seq').write(randseq)\n```\n#### Encoding a DNA sequence with Burrows-Wheeler + Huffman Coding\n\n- To encode a DNA sequence using BWT and Huffman coding, you can use a FullEncoder object that will save two files to the same directory as the sequence, the Burrows-Wheeler transform and the UTF-8 zipped format of the sequence: \n```python\nfrom dnazip.encoder import FullEncoder\nencode = FullEncoder('/path/to/seq')\nencode.full_zip()\n```\n- The attributes of the object can be accessed to see intermediary results:\n```python\nencode.bw_encoder.rotations # a matrix of string rotations from a sequence\nencode.bw_encoder.bwm # The Burrows-Wheeler Matrix\nencode.bw_encoder.bwt # The Burrows-Wheeler Transform\n\nencode.huff_encoder.header # The header of the zip file that contains Huffman codes for each character as well as the sequence binary padding\nencode.huff_encoder.binary # The binary sequence of the BW transform\nencode.huff_encoder.unicode # 8-bits encoded binary sequence\n```\n- ***A random sequence of size 1kB was compressed efficiently to 549 bytes.***\n\n#### Decoding a DNA sequence with Huffman decoding + Reversing Burrows-Wheeler transform\n\n- To decode a zipped DNA sequence using Huffman decoding and the inverse of BWT, you can use a FullDecoder object that will work in the same manner as the FullEncoder object:\n```python\nfrom dnazip.decoder import FullDecoder\ndecode = FullDecoder('path/to/seq')\ndecode.full_unzip()\n```\n- The attributes can also be accessed to see intermediary results:\n```python\ndecode.huff_decoder.header # The header of the zip file that contains Huffman codes for each character as well as the sequence binary padding that where saved when the Huffman tree was created\ndecode.huff_decoder.unicode # 8-bits encoded sequence\ndecode.huff_decoder.binary # The binary sequence\n\ndecode.bw_decoder.bwm # The Burrows-Wheeler reconstructed matrix\ndecode.bw_decoder.original # The original sequence\n```\n#### Building the Burrows-Wheeler transform using the advanced algorithm\n\n- The BWT can be constructed using a Suffix Array (SA) based algorithm that has a better time and space complexities:\n\n```python\nfrom dnazip.sequence import Sequence\nfrom dnazip.burros_wheeler import BurrosWheeler\n\nseq = Sequence('/path/to/seq').read()\nBurrosWheeler.bwt_advanced(seq)\n```\n\n## Documentation\n\nDetailed documentation on the architecture can be found [here](https://dabane-ghassan.github.io/dnazip/)\n\n## About\n\n### :scroll: License \n**MIT Licensed** Â© [Ghassan Dabane](https://github.com/dabane-ghassan), 2021.\n\n[![forthebadge made-with-python](http://ForTheBadge.com/images/badges/made-with-python.svg)](https://www.python.org/)\n[![forthebadge](https://forthebadge.com/images/badges/made-with-markdown.svg)](https://forthebadge.com)\n[![ForTheBadge uses-git](http://ForTheBadge.com/images/badges/uses-git.svg)](https://GitHub.com/)\n[![ForTheBadge uses-badges](http://ForTheBadge.com/images/badges/uses-badges.svg)](http://ForTheBadge.com)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/dabane-ghassan/dnazip/archive/v0.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/dabane-ghassan/dnazip",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dnazip-bioinfo",
    "package_url": "https://pypi.org/project/dnazip-bioinfo/",
    "platform": "",
    "project_url": "https://pypi.org/project/dnazip-bioinfo/",
    "project_urls": {
      "Download": "https://github.com/dabane-ghassan/dnazip/archive/v0.2.tar.gz",
      "Homepage": "http://github.com/dabane-ghassan/dnazip"
    },
    "release_url": "https://pypi.org/project/dnazip-bioinfo/0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A Python implementation of the Burros-Wheeler and Huffman coding algorithms",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9795513,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce2f036ec2c5fb2671ffdc669bdc4c2989ec30b4ecb5f9d939ebfdf5c9de3ced",
          "md5": "59c9bb0e25a1ef837614ac71c4592553",
          "sha256": "b383a83ac073ba92bce78ae5697ed75ae69b526569dbec60554e0285451a914e"
        },
        "downloads": -1,
        "filename": "dnazip-bioinfo-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "59c9bb0e25a1ef837614ac71c4592553",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15957,
        "upload_time": "2021-03-14T10:08:12",
        "upload_time_iso_8601": "2021-03-14T10:08:12.803001Z",
        "url": "https://files.pythonhosted.org/packages/ce/2f/036ec2c5fb2671ffdc669bdc4c2989ec30b4ecb5f9d939ebfdf5c9de3ced/dnazip-bioinfo-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81e0f784dd7cef351e0e79e880aaabaaff82512b66a27d2b1e17508de0f42019",
          "md5": "0dd5d202273eefc43688558ef3bfca17",
          "sha256": "065fc6e6ddc13a51d621805f69516b948123e94b5f116ce9953e1091dc02feb2"
        },
        "downloads": -1,
        "filename": "dnazip-bioinfo-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0dd5d202273eefc43688558ef3bfca17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16252,
        "upload_time": "2021-03-17T09:17:40",
        "upload_time_iso_8601": "2021-03-17T09:17:40.756484Z",
        "url": "https://files.pythonhosted.org/packages/81/e0/f784dd7cef351e0e79e880aaabaaff82512b66a27d2b1e17508de0f42019/dnazip-bioinfo-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "81e0f784dd7cef351e0e79e880aaabaaff82512b66a27d2b1e17508de0f42019",
        "md5": "0dd5d202273eefc43688558ef3bfca17",
        "sha256": "065fc6e6ddc13a51d621805f69516b948123e94b5f116ce9953e1091dc02feb2"
      },
      "downloads": -1,
      "filename": "dnazip-bioinfo-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0dd5d202273eefc43688558ef3bfca17",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16252,
      "upload_time": "2021-03-17T09:17:40",
      "upload_time_iso_8601": "2021-03-17T09:17:40.756484Z",
      "url": "https://files.pythonhosted.org/packages/81/e0/f784dd7cef351e0e79e880aaabaaff82512b66a27d2b1e17508de0f42019/dnazip-bioinfo-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}