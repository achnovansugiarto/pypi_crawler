{
  "info": {
    "author": "",
    "author_email": "Stephen Leroy <sleroy@aer.com>, Amy McVey <amcvey@aer.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# AWS GNSS-RO Utilities\n\nThis package &mdash; **awsgnssroutils** &mdash; contains a utility to \nquery the AWS Registry of Open Data repository of GNSS radio occultation \n(RO) data and download RO data. It does so using the metadata database \nfiles posted in the AWS repository.  \n\nA jupyter notebook is provided for introduction to this package as \n[awsgnssroutils_demonstration](https://raw.githubusercontent.com/gnss-ro/aws-opendata/master/tutorials/awsgnssroutils_demonstration.ipynb). \n\n# Installation\n\nThe following non-standard modules must be installed: s3fs, numpy. Installation \nof these dependencies is automatic when installing awsgnssroutils by pip (PyPI). \n\n# Database Functionality\n\nThis module defines two classes: RODatabaseClient and OccList. The first\ncreates a portal to a database of RO metadata, and the second is an instance\nof a list of radio occultations (ROs). Each are described below.  \n\n## RODatabaseClient:\n\nCreate an instance of a portal to a metadata on all RO data in the AWS\nRegistry of Open Data. It provides an option to create a repository of\nthe RO metadata on the local file system as keyword \"repository\". For\nexample,\n\n```\n> rodb = RODatabaseClient()\n```\n\ncreates a database interface directly to the AWS S3 bucket to access\nthe metadata. This interface is slow but requires no local disk space.\n\n```\n> rodb = RODatabaseClient( repository=\"rometadata\" )\n```\n\nalso creates a database interface but with a local repository of the\nmetadata in the directory \"rometadata\".  It is far more efficient than\nthe direct access method if a copy of requested metadata is already in\nthe local repository.\n\n```\n> rodb = RODatabaseClient( repository=\"rometadata\", update=False )\n```\n\nBy specifying \"update\" as True, the local repository is updated at the\ninstantiation of rodb. The update compares metadata in the repository\nof metadata on the local file system to the same metadata files in the\nAWS Registry of Open Data and updates the local metadata as needed.\nThe update does not add any \"new\" metadata files to the local repository.   \n\nThere are two methods to create a list of occultations through the\ndatabase client. One is to perform an inquiry in which missions and/or\na date-time range is specified, and a second is to restore a previously\nsaved list of RO data.\n\n```\n> occlist = rodb.query( missions=\"champ\" )\n```\n\ngenerates an OccList containing metadata on all CHAMP RO data. The inquiry\ncan be performed instead over a range in time. The date-time fields are\nalways ISO format times...\n\n```\n> occlist = rodb.query( datetimerange=(\"2019-06-01\",\"2019-06-30\") )\n```\n\ncreates an OccList of metadata for all RO soundings in the month of June,\n2019, regardless of mission.\n\nThe other option to creating an OccList is be restoring a previously\nsaved OccList:\n\n```\n> occlist = rodb.restore( \"old_occlist.json\" )\n```\n\nin which the old OccList was saved in a JSON format file.\n\n## OccList\n\nAn instance of the class OccList is contains the metadata on a list of RO\nsoundings along with pointers to the RO data files in the AWS Registry of\nOpen Data S3 bucket. AWS functionality is completely embedded in the\nmethods of the OccList class. Those methods include the ability to\nsubset/filter the list according to geolocation and time,\nGNSS transmitter/constellation, GNSS receiver, whether it is a rising or a\nsetting occultation, etc. It also includes the ability to combine\ninstances of OccList, save the OccList to a JSON format file for future\nrestoration by RODatabaseClient.restore, and even download RO data files.   \n\nIn order to filter an OccList previously generated by\nRODatabaseClient.query or RODatabaseClient.restore, use the OccList.filter\nmethod:\n\n```\n> champoccs = rodb.query( missions=\"champ\" )\n> champoccs_2003 = champoccs.filter( datetimerange=(\"2003-01-01\",\"2004-01-01\") )\n```\n\nillustrates how to apply a filter in date-time, retaining all CHAMP RO\nmetadata for the year 2003. Filtering can be done in longitude and latitude\nas well:\n\n```\n> champoccs_US = champoccs.filter( longituderange=(-110,-70), latituderange=(25,55) )\n```\n\nand even those can be subset by local time (a.k.a. solar time):\n\n```\n> champoccs_US_midnight = champoccs_US.filter( localtimerange=(22,2) )\n```\n\nin which the local time range is given in hours and can wrap around\nmidnight. Other filter options are for the GNSS constellation used as\ntransmitters (\"G\" for GPS, \"R\" for GLONASS, \"E\" for Galileo, \"C\" for\nBeiDou), for individual transmitters (\"G01\", etc.), for individual\nreceivers (\"cosmic1c1\", \"metopb\", etc.), and for occultation 'geometry'\n(\"rising\" vs. \"setting\").\n\nOne can get information on the metadata in an OccList using the\nOccList.info method. For instance, if you want to get a listing of all of\nthe Spire receiver satellites, do\n\n```\n> spire = rodb.query( \"spire\" )\n> spire_receivers = spire.info( \"receiver\" )\n```\n\nThe first step in this process could be time consuming if the Spire\nmetadata do not already reside on the local file system and the rodb object\ndoes not interface with a local repository. One can also get a list of the\nGNSS transmitters tracked by Spire on a particular day by\n\n```\n> spire_day = spire.filter( datetimerange=(\"2021-12-01\",\"2021-12-02\") )\n> spire_day_transmitters = spire_day.info(\"transmitter\")\n```\n\nwhich will give a list of all GNSS transmitters tracked by all Spire\nsatellites on December 1, 2021. The spire\\_day list can be split up between\nrising and setting RO soundings as well:\n\n```\n> spire_day_rising = spire_day.filter( geometry=\"rising\" )\n> spire_day_setting = spire_day.filter( geometry=\"setting\" )\n```\n\nThen it is possible to save the spire metadata OccList to a JSON file\nfor future restoration by\n\n```\n> spire.save( \"spire_metadata.json\" )\n```\n\nThe metadata also contain pointers to the RO sounding data files in the\nAWS Open Data bucket. To get information on the data files available,\nuse the OccList.info( \"filetype\" ) method. For example, to find out the\ntypes of RO data files avialable for the month of June, 2009:\n\n```\n> June2009 = rodb.query( datetimerange=(\"2009-06-01\",\"2009-07-01\") )\n> filetype_dict = June2009.info( \"filetype\" )\n```\n\nwhich will return a dictionary with the AWS-native RO file types as keys\nwith corresponding values being the counts of each. The file types have the\nformat \"{processing\\_center}\\_{file\\_type}\" in which \"processing\\_center\" is an\nRO processing center that contributed to the AWS repository (\"ucar\",\n\"romsaf\", \"jpl\") and the \"file\\_type\" is one of \"calibratedPhase\",\n\"refractivityRetrieval\", or \"atmosphericRetrieval\".\n\nThe values of the longitude, latitude, datetime, and localtimes of the RO\nsoundings in an OccList can be obtained using the OccList.values() method:  \n\n```\n> longitudes = June2009.values( \"longitude\" )  \n> latitudes = June2009.values( \"latitude\" )  \n> localtimes = June2009.values( \"localtime\" )  \n```\n\neach of these variables being a masked numpy ndarray.  \n\nFinally, RO data files themselves can be downloaded for subsequent\nscientific analysis using the OccList.download() method. If one wishes to\ndownload the all RO bending angle data contributed by JPL to the archive\nfor the week of June 5-11, 2012, one only need execute the commands\n\n```\n> week_list = rodb.query( datetimerange=(\"2012-06-05\",\"2012-06-12\") )\n> week_list.download( \"jpl_refractivityRetrieval\", \"datadir\" )\n```\n\nwhich will download all file type \"refractivityRetrieval\" contributed by\nJPL into the directory \"datadir\". All of the files will be entered into\njust one directory. If instead one wants to download the files maintaining\nthe AWS directory structure, use the keyword \"keep\\_aws\\_structure\" in the\nmethod call:\n\n```\n> week_list.download( \"jpl_refractivityRetrieval\", \"datadir\", \\\n        keep_aws_structure=True )\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "awsgnssroutils",
    "package_url": "https://pypi.org/project/awsgnssroutils/",
    "platform": null,
    "project_url": "https://pypi.org/project/awsgnssroutils/",
    "project_urls": {
      "Bug Tracker": "https://github.com/gnss-ro/aws-opendata/issues",
      "Homepage": "https://github.com/gnss-ro/aws-opendata"
    },
    "release_url": "https://pypi.org/project/awsgnssroutils/1.0.3/",
    "requires_dist": [
      "hatchling",
      "numpy",
      "s3fs"
    ],
    "requires_python": ">=3.8",
    "summary": "Utilities for access and manipulation of GNSS radio occultation in the AWS Registry of Open Data",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17068740,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "058f7c81437c7d0fe83b1668211114f52dbb38dfb7635eacaeed922f0c4bc729",
          "md5": "64a982b7bb53629ed9829f124eed49d7",
          "sha256": "68be4f5602b2ca75e4b3e1fccf96cd6076984bf8d1bcbe4b6d2eac33b771ecb7"
        },
        "downloads": -1,
        "filename": "awsgnssroutils-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "64a982b7bb53629ed9829f124eed49d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 15468,
        "upload_time": "2023-02-16T17:15:01",
        "upload_time_iso_8601": "2023-02-16T17:15:01.785965Z",
        "url": "https://files.pythonhosted.org/packages/05/8f/7c81437c7d0fe83b1668211114f52dbb38dfb7635eacaeed922f0c4bc729/awsgnssroutils-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0de9c3c4c4c782456db69febe36e1d91be6241fe0c2301aab92b5cf3a154529b",
          "md5": "b189b132e16b07189a1d2ef305b798ea",
          "sha256": "05a35a8851d255a72f4583163f9e45217b2b1cdfc16378615d74889b19a8a8a4"
        },
        "downloads": -1,
        "filename": "awsgnssroutils-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b189b132e16b07189a1d2ef305b798ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14237,
        "upload_time": "2023-02-16T17:15:03",
        "upload_time_iso_8601": "2023-02-16T17:15:03.267831Z",
        "url": "https://files.pythonhosted.org/packages/0d/e9/c3c4c4c782456db69febe36e1d91be6241fe0c2301aab92b5cf3a154529b/awsgnssroutils-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fd11693214b3ce8106971892813a2258bc023ebcd3753539cb6f8bf58f00de3",
          "md5": "c9368f083c7154768c77ebc8c3ba353f",
          "sha256": "511b292518a382be1f596d291d0cc61a6771d2f18b8e55c152cfda03e2d80ee0"
        },
        "downloads": -1,
        "filename": "awsgnssroutils-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c9368f083c7154768c77ebc8c3ba353f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 13602,
        "upload_time": "2023-02-17T20:37:05",
        "upload_time_iso_8601": "2023-02-17T20:37:05.705835Z",
        "url": "https://files.pythonhosted.org/packages/0f/d1/1693214b3ce8106971892813a2258bc023ebcd3753539cb6f8bf58f00de3/awsgnssroutils-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4867a41bc01346a17de8b1a4d5935b3370ce81e0aa42d4119d6737f8fc87a188",
          "md5": "edd3a3b43e7d2c28f084f3b17ac6ebdd",
          "sha256": "89cbde4423f8705fa4ee7d813c0933b6b600c40a76c4dad1e22f92ac5ba25314"
        },
        "downloads": -1,
        "filename": "awsgnssroutils-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "edd3a3b43e7d2c28f084f3b17ac6ebdd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12525,
        "upload_time": "2023-02-17T20:37:06",
        "upload_time_iso_8601": "2023-02-17T20:37:06.710807Z",
        "url": "https://files.pythonhosted.org/packages/48/67/a41bc01346a17de8b1a4d5935b3370ce81e0aa42d4119d6737f8fc87a188/awsgnssroutils-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b20a90bf9ca335d9c074b472fa055fe6f46d782324371f2b528c7ac2785abe5",
          "md5": "4b5a17767ab3f75448021c843add3860",
          "sha256": "285fc74bb25c309ee4c4b03187821948f6fec036626355d56eff98aec742efd6"
        },
        "downloads": -1,
        "filename": "awsgnssroutils-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b5a17767ab3f75448021c843add3860",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 13766,
        "upload_time": "2023-02-21T22:28:21",
        "upload_time_iso_8601": "2023-02-21T22:28:21.275882Z",
        "url": "https://files.pythonhosted.org/packages/5b/20/a90bf9ca335d9c074b472fa055fe6f46d782324371f2b528c7ac2785abe5/awsgnssroutils-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d90e05caf44bbf2b0ebf73ac69024ca518fcf2067eb549fc8ce7408c9321d112",
          "md5": "681d0e197326df5adaf3f914f7a3b98c",
          "sha256": "c9e1ca1dcb48c0998ea7cacb7f75501fbdd013adec9c5af1a7d4f99609bd1a56"
        },
        "downloads": -1,
        "filename": "awsgnssroutils-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "681d0e197326df5adaf3f914f7a3b98c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12695,
        "upload_time": "2023-02-21T22:28:22",
        "upload_time_iso_8601": "2023-02-21T22:28:22.746626Z",
        "url": "https://files.pythonhosted.org/packages/d9/0e/05caf44bbf2b0ebf73ac69024ca518fcf2067eb549fc8ce7408c9321d112/awsgnssroutils-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe8eda4217a168f5b9ba10da7f700c9479bfc12d41bdac90463fd2074d234b6f",
          "md5": "4f2552d711690c8a198281d611e5d2f2",
          "sha256": "ec56ff2d8e770141ad7036ddcfc5429ec942b83c8e16dba743a653e48e8ae55e"
        },
        "downloads": -1,
        "filename": "awsgnssroutils-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f2552d711690c8a198281d611e5d2f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 13785,
        "upload_time": "2023-02-27T15:28:56",
        "upload_time_iso_8601": "2023-02-27T15:28:56.535881Z",
        "url": "https://files.pythonhosted.org/packages/fe/8e/da4217a168f5b9ba10da7f700c9479bfc12d41bdac90463fd2074d234b6f/awsgnssroutils-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53ddf62bc12af566ffa33a4e7e0afa3780d41b4badc6da7fe07d1a76142aed86",
          "md5": "08c2fc515b2d3038c19c87d96d5c6ad4",
          "sha256": "42b4ac810df34a1fa8d8ff7be60b81f6200a8190e12403e3bd743d76e9e812d6"
        },
        "downloads": -1,
        "filename": "awsgnssroutils-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "08c2fc515b2d3038c19c87d96d5c6ad4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12717,
        "upload_time": "2023-02-27T15:28:57",
        "upload_time_iso_8601": "2023-02-27T15:28:57.526728Z",
        "url": "https://files.pythonhosted.org/packages/53/dd/f62bc12af566ffa33a4e7e0afa3780d41b4badc6da7fe07d1a76142aed86/awsgnssroutils-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe8eda4217a168f5b9ba10da7f700c9479bfc12d41bdac90463fd2074d234b6f",
        "md5": "4f2552d711690c8a198281d611e5d2f2",
        "sha256": "ec56ff2d8e770141ad7036ddcfc5429ec942b83c8e16dba743a653e48e8ae55e"
      },
      "downloads": -1,
      "filename": "awsgnssroutils-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4f2552d711690c8a198281d611e5d2f2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 13785,
      "upload_time": "2023-02-27T15:28:56",
      "upload_time_iso_8601": "2023-02-27T15:28:56.535881Z",
      "url": "https://files.pythonhosted.org/packages/fe/8e/da4217a168f5b9ba10da7f700c9479bfc12d41bdac90463fd2074d234b6f/awsgnssroutils-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53ddf62bc12af566ffa33a4e7e0afa3780d41b4badc6da7fe07d1a76142aed86",
        "md5": "08c2fc515b2d3038c19c87d96d5c6ad4",
        "sha256": "42b4ac810df34a1fa8d8ff7be60b81f6200a8190e12403e3bd743d76e9e812d6"
      },
      "downloads": -1,
      "filename": "awsgnssroutils-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "08c2fc515b2d3038c19c87d96d5c6ad4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 12717,
      "upload_time": "2023-02-27T15:28:57",
      "upload_time_iso_8601": "2023-02-27T15:28:57.526728Z",
      "url": "https://files.pythonhosted.org/packages/53/dd/f62bc12af566ffa33a4e7e0afa3780d41b4badc6da7fe07d1a76142aed86/awsgnssroutils-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}