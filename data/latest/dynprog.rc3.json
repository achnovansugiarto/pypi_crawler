{
  "info": {
    "author": "Erel Segal-Halevi",
    "author_email": "erelsgl@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha"
    ],
    "description": "![Tox result](https://github.com/erelsgl/dynprog/workflows/tox/badge.svg)\n\n# dynprog\n\nImplements a generic routine for sequential dynamic programming, based on the \"Simple DP\" framework defined in:\n\n> Gerhard J. Woeginger, [When Does a Dynamic Programming Formulation Guarantee the Existence of a FPTAS?](https://pubsonline.informs.org/doi/abs/10.1287/ijoc.12.1.57.11901), INFORMS journal of computing, 2000.\n\n## Installation\n\n    pip install dynprog\n\n\n## Usage\n\nTo define a dynamic program, extend the class `SequentialDynamicProgram` and override the methods:\n\n* `initial_states` - returns a list of states where the search for a solution starts.\n* `transition_functions` - returns a list of functions, each of which accepts a state and an input, and returns a new state.\n* `filter_functions` - returns a list of functions, one for each transition function. Each of which accepts a state and an input, and returns `True` iff the transition is feasible.\n* `value_function` - returns a function that accepts a state and returns its value (higher is better).\n\nThese functions are sufficient for computing the optimal (maximum) value, using the method `max_value`.\n\nIn order to also construct the optimal *solution*, you need to override two additional methods:\n\n* `initial_solution` - returns an initial (usually empty) solution.\n* `construction_functions` - returns a list of functions, one for each transition function. Each of which accepts a solution and an input, and returns a new solution.\n \n\n## Example\n\nLet us define a dynamic program for solving the Subset Sum problem.\nHere, the state contains a single number: the sum of items in the subset.\nHere is the class definition:\n\n    from dynprog.sequential import SequentialDynamicProgram\n\n    class SubsetSumDP(SequentialDynamicProgram):\n\n        def __init__(self, capacity:int):\n            self.capacity = capacity\n\n        def initial_states(self):\n            return [0]       # There is one initial state - 0.\n\n        def initial_solution(self):\n            return []        # There is one initial solution - an empty subset.\n\n        def transition_functions(self):\n            return  [        # There are two possible transitions from each state and input: \n                lambda state,input: state+input,    # adding the input\n                lambda state,input: state+0,        # not adding the input\n            ]\n\n        def filter_functions(self):\n            return [        # There are two corresponding filter functions:\n                lambda state,input: state+input<=self.capacity,    # adding the input\n                lambda _,__:        True,                          # not adding the input\n            ]\n\n        def construction_functions(self):\n            return  [        # There are two possible construction functions: \n                lambda solution,input: solution+[input],    # adding the input\n                lambda solution,_:     solution,            # not adding the input\n            ]\n\n        def value_function(self):      # The value of a state is just the state itself: \n            return lambda state: state\n\nWe can use it to compute the optimal value: \n\n    SubsetSumDP(capacity=4005).max_value(inputs=[100,200,400,700,1100,1600,2200,2900,3700])\n\nor the optimal solution:\n\n    SubsetSumDP(capacity=4005).max_value_solution(inputs=[100,200,400,700,1100,1600,2200,2900,3700])[2]\n\n\n## More examples\n\nMore examples can be found in the examples folder:\n\n* [Subset sum](examples/subset_sum.py)\n* [Knapsack](examples/knapsack.py)\n* [Longest palyndrome subsequence](examples/longest_palyndrome_subsequence.py)\n* [Multiple subset sum](examples/multiple_subset_sum.py)\n* [Best coin picking strategy](examples/best_coin_picking_strategy.py)\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/erelsgl/dynprog",
    "keywords": "optimization,dynamic-programming",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynprog",
    "package_url": "https://pypi.org/project/dynprog/",
    "platform": "",
    "project_url": "https://pypi.org/project/dynprog/",
    "project_urls": {
      "Bug Reports": "https://github.com/erelsgl/dynprog/issues",
      "Homepage": "https://github.com/erelsgl/dynprog",
      "Source Code": "https://github.com/erelsgl/dynprog"
    },
    "release_url": "https://pypi.org/project/dynprog/0.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Generic function for sequential dynamic programming",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12852628,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a5f2268e116181566da67b9300154cb16961b2bd44a8c1d0eb27e976612c2f1",
          "md5": "0cdeee95e375b2926b81896c3b8e8bea",
          "sha256": "6f92b9045756359dc014a3db2513d92a893080350a16437346e04b1664a66c3c"
        },
        "downloads": -1,
        "filename": "dynprog-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0cdeee95e375b2926b81896c3b8e8bea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19402,
        "upload_time": "2022-02-10T13:53:12",
        "upload_time_iso_8601": "2022-02-10T13:53:12.195010Z",
        "url": "https://files.pythonhosted.org/packages/6a/5f/2268e116181566da67b9300154cb16961b2bd44a8c1d0eb27e976612c2f1/dynprog-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8ae58a41a6af91f5abddbf06f85792f1438fe4874399a3bfa155182c39a0611",
          "md5": "48f9f1d61d56936c99d036043969da56",
          "sha256": "8737d492b63628180606d2bfac05cedd3b587d0c4ca2b8bef134635d32c8dbd1"
        },
        "downloads": -1,
        "filename": "dynprog-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "48f9f1d61d56936c99d036043969da56",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20236,
        "upload_time": "2022-02-10T13:53:14",
        "upload_time_iso_8601": "2022-02-10T13:53:14.251137Z",
        "url": "https://files.pythonhosted.org/packages/c8/ae/58a41a6af91f5abddbf06f85792f1438fe4874399a3bfa155182c39a0611/dynprog-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7195deb57a27a2b63205f5a22d9332100492d7203a15d8cf7965ada735251141",
          "md5": "d4df0957e3ad9dd9eba56947b51952e8",
          "sha256": "2c88772cd2b4ebc3e03b1576c3bec619f563fbd3c2df2e9a99cfa82782d27ade"
        },
        "downloads": -1,
        "filename": "dynprog-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4df0957e3ad9dd9eba56947b51952e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19505,
        "upload_time": "2022-02-10T14:23:31",
        "upload_time_iso_8601": "2022-02-10T14:23:31.678226Z",
        "url": "https://files.pythonhosted.org/packages/71/95/deb57a27a2b63205f5a22d9332100492d7203a15d8cf7965ada735251141/dynprog-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d00c0d5265ff35213d2360d4facc640bcba1231ed53696ee72c515b452886bf9",
          "md5": "e9b815ea3b007ddae26e8335d75f1b9f",
          "sha256": "660e3cdbb3acdf3e47f7890ef106e95d0493f7c38e26d6cf580fdb3cf714be2a"
        },
        "downloads": -1,
        "filename": "dynprog-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e9b815ea3b007ddae26e8335d75f1b9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20348,
        "upload_time": "2022-02-10T14:23:33",
        "upload_time_iso_8601": "2022-02-10T14:23:33.079833Z",
        "url": "https://files.pythonhosted.org/packages/d0/0c/0d5265ff35213d2360d4facc640bcba1231ed53696ee72c515b452886bf9/dynprog-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "215c56b3770e909a0871b7a1e65ee5c67dba70739246191f25645bff5a9f7959",
          "md5": "b5f2e851cecee1b6c4a1915f357d05ae",
          "sha256": "2cde322f2b8fdcf32b150480f1e3d0659258a365b62a6ab5a297bf54ece1e175"
        },
        "downloads": -1,
        "filename": "dynprog-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5f2e851cecee1b6c4a1915f357d05ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19659,
        "upload_time": "2022-02-10T17:10:54",
        "upload_time_iso_8601": "2022-02-10T17:10:54.642424Z",
        "url": "https://files.pythonhosted.org/packages/21/5c/56b3770e909a0871b7a1e65ee5c67dba70739246191f25645bff5a9f7959/dynprog-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71c2dcb5cb4ae1cedabd033bf5f769a2faa300ca0c3046b7b5920a7c6539b768",
          "md5": "b1dbf053e4b60a99979a7bc62beb0cec",
          "sha256": "667a5360b297ba79a67558a7d617aa2b07234e38b99b80cfb37c6264055383da"
        },
        "downloads": -1,
        "filename": "dynprog-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b1dbf053e4b60a99979a7bc62beb0cec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 24230,
        "upload_time": "2022-02-10T17:10:56",
        "upload_time_iso_8601": "2022-02-10T17:10:56.173354Z",
        "url": "https://files.pythonhosted.org/packages/71/c2/dcb5cb4ae1cedabd033bf5f769a2faa300ca0c3046b7b5920a7c6539b768/dynprog-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "215c56b3770e909a0871b7a1e65ee5c67dba70739246191f25645bff5a9f7959",
        "md5": "b5f2e851cecee1b6c4a1915f357d05ae",
        "sha256": "2cde322f2b8fdcf32b150480f1e3d0659258a365b62a6ab5a297bf54ece1e175"
      },
      "downloads": -1,
      "filename": "dynprog-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b5f2e851cecee1b6c4a1915f357d05ae",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 19659,
      "upload_time": "2022-02-10T17:10:54",
      "upload_time_iso_8601": "2022-02-10T17:10:54.642424Z",
      "url": "https://files.pythonhosted.org/packages/21/5c/56b3770e909a0871b7a1e65ee5c67dba70739246191f25645bff5a9f7959/dynprog-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71c2dcb5cb4ae1cedabd033bf5f769a2faa300ca0c3046b7b5920a7c6539b768",
        "md5": "b1dbf053e4b60a99979a7bc62beb0cec",
        "sha256": "667a5360b297ba79a67558a7d617aa2b07234e38b99b80cfb37c6264055383da"
      },
      "downloads": -1,
      "filename": "dynprog-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b1dbf053e4b60a99979a7bc62beb0cec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 24230,
      "upload_time": "2022-02-10T17:10:56",
      "upload_time_iso_8601": "2022-02-10T17:10:56.173354Z",
      "url": "https://files.pythonhosted.org/packages/71/c2/dcb5cb4ae1cedabd033bf5f769a2faa300ca0c3046b7b5920a7c6539b768/dynprog-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}