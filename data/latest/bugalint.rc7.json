{
  "info": {
    "author": "Bugale",
    "author_email": "bugale@bugalit.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance"
    ],
    "description": "# Bugalint\n\nAn abstraction package for running linters on code, outputting the results in a unified format.\n\n## Usage\n\nFirst, `pip` install bugalint:\n\n    $ pip install bugalint\n\n> Bugalint requires Python 3.7+.\n\nNext, you need to setup a configuration file, named by default `setup.cfg`:\n```\n[bugalint.lints.example]\npath = source_code/\nmypy = True\nflake8 = True\npylint = True\n```\n\nNow, simply run `bugalint` from the directory in which `setup.cfg` resides:\n\n    $ bugalint\n\n`bugalint` will run the selected 3 linters (mypy, flake8, and pylint) on the selected path (`source_code/`)\n\n## Supported Built-in Linters\n\n- [flake8](http://flake8.pycqa.org/en/latest/)\n- [pylint](https://www.pylint.org/)\n- [mypy](https://mypy.readthedocs.io/en/stable/)\n\nAdditional linters can be added in the `setup.cfg` file.\n\n## Adding Lint Runs\n\nBugalint can run linters on more than one directory. It looks for any section of the form `[bugalint.lints.<name>]` in the configuration file,\nand expects it to contain a key named `path`, which supports glob syntax, and any other key with a name of a linter, and the value `True`.\nBugalint will run the given linters, with `path` as their working directory.\n\nFor example, suppose we have the following file structure:\n```\n+-- foo\n|   +-- file.py\n+-- bar\n|   +-- foo1\n|   |   +-- bar\n|   |   |   +-- file.py\n|   +-- foo2\n|   |   +-- bar\n|   |   |   +-- file.py\n```\n\nAnd suppose we have the following configuration file:\n```\n[bugalint.lints.lint1]\npath = foo\nmypy = True\n\n[bugalint.lints.lint2]\npath = bar/*/bar\nmypy = True\nflake8 = True\n```\n\nBugalint will run the following:\n - `mypy .` with `foo` as its working directory\n - `mypy .` with `bar/foo1/bar` as its working directory\n - `mypy .` with `bar/foo2/bar` as its working directory\n - `flake8 .` with `bar/foo1/bar` as its working directory\n - `flake8 .` with `bar/foo2/bar` as its working directory\n\nBugalint will combine all of their warnings to a unified output format.\n\n## Using Additional Linters\n\nFor running a linter that isn't built-in, Bugalint needs only two strings:\n - The command line to run\n - The regular expression to apply on its standard output\n\nThis information needs to be placed inside the `setup.cfg` file in the working directory of Bugalint.\nAn example of the configuration file adding a new linter called my-lint can be:\n```\n[bugalint.linters.my-lint]\ncmdline = my-lint --my-flag .\nregex = ^(?P<file>[^:]*):(?P<line>\\d*):(?P<col>\\d*): (?P<code>[^:]*): (?P<text>.*)$\n```\n\nBugalint will run the given command line, and try to match each line of its standard output to the given regular expression.\nIf the regular expression matches a line, it will be considered \"a linter warning\", and some named captures from the regular expression\nwill be used to determine its location in the code, message, etc.\n\n### Linter Regex Named Captures\n\nBugalint will use named captures from the regular expression to determine the information about a linter warning. All of the named captures are optional.\nThe list of supported named captures is:\n - `file` - The path to the file in which the warning was triggered. Can be absolute, or relative to the working directory of the linter\n - `line` - The line number in which the warning was triggered\n - `col` - The column number in which the warning was triggered\n - `code` - A short code or number representing the issue found\n - `text` - A free text describing the issue\n\n## Modifying Built-in Linters Behavior\n\nIn most cases, modifying the behavior of one of the built-in linters can and should be done using a configuration file (see docs relevant to that linter).\nNevertheless, in some cases, you might want to change the command line that Bugalint runs.\n\nDoing this is simple, and similar to defining new linters.\nAdding the following to the configuration file, will modify the command line of `mypy`:\n```\n[bugalint.linters.mypy]\ncmdline = mypy --additional-flag .\n```\n\nSimilarly, the regex of a built-in linter can be modified too:\n```\n[bugalint.linters.mypy]\ncmdline = mypy --additional-flag .\nregex = ^my new regex$\n```\n\n### Command line\n\nA list of all configuration values can be viewed by running `bugalint --help`.\n\n```\nusage: bugalint [-h] [--config CONFIG] [--verbose] [--output {textual,json}]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --config CONFIG       The config file to use (default: setup.cfg)\n  --verbose             Write debug log messages to stderr (default: False)\n  --output {textual,json}\n                        The output format (default: textual)\n```\n\nThe return value of Bugalint is the number of linter warnings it detected (0 = no warnings)\n\n## Integration with Lintly\n\nBugalint can be easily integrated with [Lintly](https://github.com/grantmcconnaughey/Lintly).\nIt supports the command line argument `--output=json`, which outputs the warnings in a JSON format similar to that of pylint.\nIt can then be passed to Lintly:\n```\nbugalint --output=json | lintly --format=pylint-json\n```\n\nBugalint will output file paths relative to its working directory, so as long as it is being run from the root of the repository,\nlintly will receive paths it can handle correctly.\n\nA full example of a GitHub check workflow:\n```\nname: Lint\n\non:\n  pull_request:\n    paths:\n      - 'python_project/**/*'\n\njobs:\n  lint:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v2\n    - uses: actions/setup-python@v2\n      with:\n        python-version: 3.8\n    - name: Install dependencies\n      run: |\n        python -m pip install bugalint lintly mypy pylint flake8\n    - name: Lint\n      run: |\n        bugalint --output=json | lintly --format=pylint-json\n      env:\n        LINTLY_API_KEY: ${{ secrets.GITHUB_TOKEN }}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bugale/bugalint",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bugalint",
    "package_url": "https://pypi.org/project/bugalint/",
    "platform": "any",
    "project_url": "https://pypi.org/project/bugalint/",
    "project_urls": {
      "Homepage": "https://github.com/bugale/bugalint"
    },
    "release_url": "https://pypi.org/project/bugalint/4.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An abstraction package for running linters on code, outputting the results in a unified format.",
    "version": "4.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12378747,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c67851d4a1bd125b8b15bc756cd8eeb89890eb2b2c2f901e46a2979109e8f511",
          "md5": "1b7f51d85cb50d40961f974922d9bfe6",
          "sha256": "052b8708ae2fe50ca04a9a2ee860ae3d20bc75547138f406ac1fead31c1de9c1"
        },
        "downloads": -1,
        "filename": "bugalint-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1b7f51d85cb50d40961f974922d9bfe6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4715,
        "upload_time": "2021-12-19T16:08:44",
        "upload_time_iso_8601": "2021-12-19T16:08:44.726670Z",
        "url": "https://files.pythonhosted.org/packages/c6/78/51d4a1bd125b8b15bc756cd8eeb89890eb2b2c2f901e46a2979109e8f511/bugalint-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c4c1b77ce4786f79f6e86de3f310d26f661cae4945b83f8cb0397966f51a903",
          "md5": "b452ef78f65f9c6644758bc09d816cfc",
          "sha256": "51f1420e0372d426efd8b00f399a42f582255bc583e7fc6bdb8ca75499401276"
        },
        "downloads": -1,
        "filename": "bugalint-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b452ef78f65f9c6644758bc09d816cfc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5273,
        "upload_time": "2021-12-22T03:18:53",
        "upload_time_iso_8601": "2021-12-22T03:18:53.351695Z",
        "url": "https://files.pythonhosted.org/packages/4c/4c/1b77ce4786f79f6e86de3f310d26f661cae4945b83f8cb0397966f51a903/bugalint-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f8b654f1cf1a2dcb538c67fa55edcbf67ea922a712495ba9515eda8632680c7",
          "md5": "b5fc80789d98d977969d8fc08dfe0f4a",
          "sha256": "c41b2630001ddd4b757315843953fa7231da9e515281b7814d220e0f36afd891"
        },
        "downloads": -1,
        "filename": "bugalint-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b5fc80789d98d977969d8fc08dfe0f4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5170,
        "upload_time": "2021-12-22T03:33:22",
        "upload_time_iso_8601": "2021-12-22T03:33:22.940899Z",
        "url": "https://files.pythonhosted.org/packages/4f/8b/654f1cf1a2dcb538c67fa55edcbf67ea922a712495ba9515eda8632680c7/bugalint-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10b64efdd68cf2daf19e084e93124ddaaf7d239fb1bc8dc72d99ed62eca8baa7",
          "md5": "085da5d9cdaa9a9e128a2d785f2788d4",
          "sha256": "b783a2153874e205ae82977c0b2c569b19f13c7bd8f403377979bd1bb772f820"
        },
        "downloads": -1,
        "filename": "bugalint-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "085da5d9cdaa9a9e128a2d785f2788d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5271,
        "upload_time": "2021-12-22T03:48:39",
        "upload_time_iso_8601": "2021-12-22T03:48:39.019781Z",
        "url": "https://files.pythonhosted.org/packages/10/b6/4efdd68cf2daf19e084e93124ddaaf7d239fb1bc8dc72d99ed62eca8baa7/bugalint-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d688db61465c7334a11e209fb1314f436074c263f279c617fdf1db6d5ce71dba",
          "md5": "b1786c92440107cc59febe511fcf7c51",
          "sha256": "886d466bbfcf10d3058afc16b7fed87f46c8051997b636b8d4a0c4679ebc7f88"
        },
        "downloads": -1,
        "filename": "bugalint-3.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b1786c92440107cc59febe511fcf7c51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5296,
        "upload_time": "2021-12-22T04:00:58",
        "upload_time_iso_8601": "2021-12-22T04:00:58.104732Z",
        "url": "https://files.pythonhosted.org/packages/d6/88/db61465c7334a11e209fb1314f436074c263f279c617fdf1db6d5ce71dba/bugalint-3.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "506910903d905b003599d14b29df6523656ac2d0d0764fc64e8620c013336465",
          "md5": "a72c57da235c7d0ee798249fc5c0d9ee",
          "sha256": "29b9372cb69027cdb8a3301a4a3bbffb1ffc8dd92557f1ae63a4532580bd25ec"
        },
        "downloads": -1,
        "filename": "bugalint-3.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a72c57da235c7d0ee798249fc5c0d9ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5372,
        "upload_time": "2021-12-22T05:07:15",
        "upload_time_iso_8601": "2021-12-22T05:07:15.568167Z",
        "url": "https://files.pythonhosted.org/packages/50/69/10903d905b003599d14b29df6523656ac2d0d0764fc64e8620c013336465/bugalint-3.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54f0210c4b00456e7bb1e1411b9b4c39d0050866958bccd602ee02cc5abb26fb",
          "md5": "8865abb191bb75163e8711ad047efc61",
          "sha256": "048108bd4c05d9e57d9c9bb0643fc29a13e7f8b229eb0b9ae62f9c8540f832ca"
        },
        "downloads": -1,
        "filename": "bugalint-4.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8865abb191bb75163e8711ad047efc61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8903,
        "upload_time": "2021-12-22T07:13:01",
        "upload_time_iso_8601": "2021-12-22T07:13:01.688032Z",
        "url": "https://files.pythonhosted.org/packages/54/f0/210c4b00456e7bb1e1411b9b4c39d0050866958bccd602ee02cc5abb26fb/bugalint-4.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54f0210c4b00456e7bb1e1411b9b4c39d0050866958bccd602ee02cc5abb26fb",
        "md5": "8865abb191bb75163e8711ad047efc61",
        "sha256": "048108bd4c05d9e57d9c9bb0643fc29a13e7f8b229eb0b9ae62f9c8540f832ca"
      },
      "downloads": -1,
      "filename": "bugalint-4.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8865abb191bb75163e8711ad047efc61",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8903,
      "upload_time": "2021-12-22T07:13:01",
      "upload_time_iso_8601": "2021-12-22T07:13:01.688032Z",
      "url": "https://files.pythonhosted.org/packages/54/f0/210c4b00456e7bb1e1411b9b4c39d0050866958bccd602ee02cc5abb26fb/bugalint-4.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}