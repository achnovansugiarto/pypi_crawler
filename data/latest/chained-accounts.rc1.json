{
  "info": {
    "author": "PyDefi Development Team",
    "author_email": "clamdad+pydefi@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Office/Business :: Financial"
    ],
    "description": "# Chained Accounts\n\n![Continuous Integration](https://github.com/tellor-io/pytelliot/actions/workflows/py39.yml/badge.svg)\n\nA thin framework to help applications and users manage multiple ethereum accounts on multiple chains.\n\n*Motivation*\n\nBlockchain applications are becoming more cross-chain and multi-chain, therefore having a need to manage multiple user\naccounts on different chains. Users need an easy way to configure an application to use their private keys, including\nspecifying which EVM chains they can be used on. Applications also need easy access to user private keys while providing\na way to handle them securely, rather than storing them in plain text.\n\n*Overview*\n\nEach `ChainedAccount`:\n\n- has a user-friendly name\n- can be associated with one or more EVM chains.\n- is encrypted in a local keystore using the [`eth_keyfile`](https://github.com/ethereum/eth-keyfile) package.\n\nApplications can easily access the keystore and search for accounts by name, EVM chain, and address.\n\nNote: This package does not directly perform any encryption/decryption, but relies on the\nhttps://github.com/ethereum/eth-account package.\n\n** USE AT YOUR OWN RISK **\n\n## Installation\n\n    pip install chained_accounts\n\n## Examples\n\nCreate an account for use on either Ethereum Mainnet or Rinkeby testnet.\n\n### Python\n\n```python\nfrom chained_accounts import ChainedAccount, find_accounts\n\nkey1 = \"0x57fe7105302229455bcfd58a8b531b532d7a2bb3b50e1026afa455cd332bf706\"\nChainedAccount.add(\"my-eth-acct\", [1, 4], key1, password=\"foo\")\n\nacc = find_accounts(chain_id=1)[0]\nprint(f\"Address: {acc.address}\")\nprint(f\"Chains: {acc.chains}\")\n\nacc.unlock(\"foo\")\nprint(f\"Private key: {acc.key.hex()}\")\n```\n\n```pycon\nChainedAccount('my-eth-acct')\nAddress: 0xcd19cf65af3a3aea1f44a7cb0257fc7455f245f0\nChains: [1, 4]\nPrivate key: 0x57fe7105302229455bcfd58a8b531b532d7a2bb3b50e1026afa455cd332bf706\n```\n### Command Line\n\n    >> chained add my-eth-acct 0x57fe7105302229455bcfd58a8b531b532d7a2bb3b50e1026afa455cd332bf706 1 4\n    Enter encryption password for my-eth-acct: \n    Confirm password:\n    Added new account my-eth-acct (address= 0xcd19cf65af3a3aea1f44a7cb0257fc7455f245f0) for use on chains (1, 4)\n    >> chained find\n    Found 1 accounts.\n    Account name: my-eth-acct, address: 0xcd19cf65af3a3aea1f44a7cb0257fc7455f245f0, chain IDs: [1, 4]\n\n\n## User Guide\n\nAll `ChainedAccount` features are available through Python or the Command Line Interface (CLI).\n\n### Adding a new account\n\nThe following example demonstrates adding two accounts to the keystore. The first account is for use on either ethereum\nmainnet or Rinkeby testnet. The second account is for use on Polygon mainnet. For a list of valid chain identifiers,\nsee www.chainlist.org.\n\n```python\nfrom chained_accounts import ChainedAccount\n\nkey = '0x57fe7105302229455bcfd58a8b531b532d7a2bb3b50e1026afa455cd332bf706'\nChainedAccount.add('my-eth-acct', chains=[1, 4], key=key, password='foo')\n\nkey = '0x7a3d4adc3b6fb4520893e9b486b67a730e0d879a421342f788dc3dc273543267'\nChainedAccount.add('my-matic-acct', chains=137, key=key, password='bar')\n```\n\nor, from the CLI:\n\n    >> chained add my-eth-acct 0x57fe7105302229455bcfd58a8b531b532d7a2bb3b50e1026afa455cd332bf706 1 4\n    Enter encryption password for my-eth-acct: \n    Confirm password:\n    Added new account my-eth-acct (address= 0xcd19cf65af3a3aea1f44a7cb0257fc7455f245f0) for use on chains (1, 4)\n\n    >> chained add my-matic-acct 0x7a3d4adc3b6fb4520893e9b486b67a730e0d879a421342f788dc3dc273543267 137\n    Enter encryption password for my-matic-acct: \n    Confirm password: \n    Added new account my-matic-acct (address= 0xc1b6c5d803c45b8d1097d07df0c816157db6f00c) for use on chains (137,)\n\n### Getting accounts from the keystore\n\nAccounts can be accessed by `name` using `ChainedAccount.get(name)`, or can be found by searching the keystore\nusing `find_accounts()`. The following example demonstrates how an application can search for a user account to use on\nEthereum mainnet.\n\n```python\nacc = find_accounts(chain_id=1)[0]\nprint(f\"Address: {acc.address}\")\nprint(f\"Chains: {acc.chains}\")\n```\n\n```pycon\nChainedAccount('my-eth-acct')\nAddress: 0xcd19cf65af3a3aea1f44a7cb0257fc7455f245f0\nChains: [1, 4]\n```\n\nOr, from the command line (find all accounts):\n\n    >> chained find\n    Found 2 accounts.\n    Account name: my-eth-acct, address: 0xcd19cf65af3a3aea1f44a7cb0257fc7455f245f0, chain IDs: [1, 4]\n    Account name: my-matic-acct, address: 0xc1b6c5d803c45b8d1097d07df0c816157db6f00c, chain IDs: [137]\n\n### Accessing private keys\n\nNote that the `ChainedAccount` private key remains encrypted until the account is unlocked with a password.\n\n```python\nassert not ChainedAccount.get('my-eth-acct').is_unlocked\n```\n\nTo unlock and access the private key:\n\n```python\nacc = ChainedAccount.get('my-eth-acct')\nacc.unlock('foo')\nprint(f\"Private key: {acc.key.hex()}\")\n```\n\n```pycon\nPrivate key: 0x57fe7105302229455bcfd58a8b531b532d7a2bb3b50e1026afa455cd332bf706\n```\n\n## Development\n\n### Developer Mode Installation\n\n    pip install -e .\n    pip install -r dev-requirements.txt\n\n### Running tests\n\n    pytest\n\n### Code checks\n\nAll code should pass the following checks prior to submitting.\n\n    mypy\n    black src tests\n    flake8\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pydefi/chained_accounts",
    "keywords": "ethereum,keystore,key management,private keys,cross-chain,multi-chain",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chained-accounts",
    "package_url": "https://pypi.org/project/chained-accounts/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/chained-accounts/",
    "project_urls": {
      "Homepage": "https://github.com/pydefi/chained_accounts"
    },
    "release_url": "https://pypi.org/project/chained-accounts/0.0.1/",
    "requires_dist": [
      "click",
      "eth-account"
    ],
    "requires_python": ">=3.8",
    "summary": "A thin framework to help applications and users manage multiple ethereum accounts on multiple chains.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12645138,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5edcc7821e327f98c9999a86131033db3f6c0b8fff9ce99a1a1909c6c246834a",
          "md5": "e135ca8a6fab5ee48a812aff194e2e8a",
          "sha256": "db323b3adb63123b9877445de4db538899207cfbc3484e23998087dc0fede2c7"
        },
        "downloads": -1,
        "filename": "chained_accounts-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e135ca8a6fab5ee48a812aff194e2e8a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8644,
        "upload_time": "2022-01-21T14:53:18",
        "upload_time_iso_8601": "2022-01-21T14:53:18.032909Z",
        "url": "https://files.pythonhosted.org/packages/5e/dc/c7821e327f98c9999a86131033db3f6c0b8fff9ce99a1a1909c6c246834a/chained_accounts-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "589343c9f2df767ae901ba4a8c41320a32c4875c16ac668c14459fa5a14b565b",
          "md5": "e12d30ba278577d77aad808a03aad544",
          "sha256": "4010675d3ae206b0994d8f18a9f87e7a1f74c81b5eae451df37d7e92ef62c573"
        },
        "downloads": -1,
        "filename": "chained_accounts-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e12d30ba278577d77aad808a03aad544",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12228,
        "upload_time": "2022-01-21T14:53:19",
        "upload_time_iso_8601": "2022-01-21T14:53:19.290267Z",
        "url": "https://files.pythonhosted.org/packages/58/93/43c9f2df767ae901ba4a8c41320a32c4875c16ac668c14459fa5a14b565b/chained_accounts-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5edcc7821e327f98c9999a86131033db3f6c0b8fff9ce99a1a1909c6c246834a",
        "md5": "e135ca8a6fab5ee48a812aff194e2e8a",
        "sha256": "db323b3adb63123b9877445de4db538899207cfbc3484e23998087dc0fede2c7"
      },
      "downloads": -1,
      "filename": "chained_accounts-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e135ca8a6fab5ee48a812aff194e2e8a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 8644,
      "upload_time": "2022-01-21T14:53:18",
      "upload_time_iso_8601": "2022-01-21T14:53:18.032909Z",
      "url": "https://files.pythonhosted.org/packages/5e/dc/c7821e327f98c9999a86131033db3f6c0b8fff9ce99a1a1909c6c246834a/chained_accounts-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "589343c9f2df767ae901ba4a8c41320a32c4875c16ac668c14459fa5a14b565b",
        "md5": "e12d30ba278577d77aad808a03aad544",
        "sha256": "4010675d3ae206b0994d8f18a9f87e7a1f74c81b5eae451df37d7e92ef62c573"
      },
      "downloads": -1,
      "filename": "chained_accounts-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e12d30ba278577d77aad808a03aad544",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 12228,
      "upload_time": "2022-01-21T14:53:19",
      "upload_time_iso_8601": "2022-01-21T14:53:19.290267Z",
      "url": "https://files.pythonhosted.org/packages/58/93/43c9f2df767ae901ba4a8c41320a32c4875c16ac668c14459fa5a14b565b/chained_accounts-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}