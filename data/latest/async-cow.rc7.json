{
  "info": {
    "author": "Xixi.Dong",
    "author_email": "xq1889@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Async Cow Python 七牛异步SDK\n\n本SDK基于官方SDK改造而成，但又对其进行了进一步封装，简化了相关操作\n例如：\n- 1、不需要使用者关心token问题\n\n- 2、简化了相关导包和引用，并且保持接口一致\n\n- 3、实现了异步IO，引入协程概念，IO层面引入aiohttp，aiofiles等，使得本SDK适用于异步编程\n\n  感谢您的星星❤\n\n[官方SDK请见] https://developer.qiniu.com/kodo/1242/python\n\n## 组织:\n\n  QQ群: 614714752\n  <img src='https://gitee.com/xixigroup/async_cow/raw/master/images/qq.jpeg' width='200'>\n\n## Install\n\npython解释器版本要求：> 3.6\n```bash\n# 标准安装\npip install async_cow\n\n# 从官方源安装，你能获取最新版本SDK\npip install async_cow -i https://pypi.python.org/simple\n```\n\n\n## Usage\n\n### 初始化\n\n在你需要的地方\n```python\nfrom async_cow import AsyncCow, ClientCow\ncow = AsyncCow(<ACCESS_KEY>, <SECRET_KEY>)\nclient = ClientCow(<ACCESS_KEY>, <SECRET_KEY>)\n```\n### 云存储桶操作\n\n```python\nb = cow.get_bucket(<BUCKET>)\n```\n\n后面都用这个桶对象来操作。 它代表了`<BUCKET>`\n\n#### 列出所有的bucket\n```python\nres = await b.buckets()\n```\n\n#### 列出一个bucket中的所有文件\n```python\nres = await b.list()\n```\n这个方法还有 marker, limit, prefix这三个可选参数，详情参考官方文档\n\nbucket相关方法和用法和官方SDK同步\n\n#### 上传\n\n```python\nfile_path = '/Users/admin/Desktop/123.jpg'\n\nwith open(file_path, 'rb') as f:\n    c = f.read()\n\n# 上传二进制流\nres = await b.put_data(\n    key='AK47.jpg',  # 上传后的文件名\n    data=c\n)\n\n# 上传文件\nres = await b.put_file(\n    key='AK472.jpg',  # 上传后的文件名\n    file_path=file_path\n)\nfor i in res:\n    print(i)\n\n```\n\n\n#### 删除，查看文件信息\n```python\nawait b.stat('a')                 # 查看单个文件信息\nawait b.delete('a')               # 删除单个文件\n```\n\n\n#### 拷贝，移动（改名）经测试，只能在桶内copy和move\n\n这两个操作需要提供源文件名和目标文件名\n\n```python\nawait b.copy('a', 'b')                            # 将'a' 拷贝至'b'\nawait b.move('a', 'b')                            # 将'a' 改名为'b'\n```\n\n有没有觉得比官方SDK容易使用多呢？\n\n--------\n\n#### 异常\n\n在封装aiohttp操作时已经处理了大部分异常和重试过程，但仍会存在一些意外\n\n所以安全的做法是这样：\n\n```python\ntry:\n    await b.delete('a')\nexcept Exception as e:\n    # 自行处理\n    pass\n```\n\n### 短信客户端操作\n\n```python\n# 获取一个短信客户端对象\nsms = cow.get_sms()\n```\n\n#### 创建，查看，编辑，删除签名\n\n```python\nawait sms.createSignature(<signature>, <source>)\nawait sms.querySignature()\nawait sms.updateSignature(<id>, <signature>)\nawait sms.deleteSignature(<id>)\n```\n\n#### 创建，查看，编辑，删除模版\n\n```python\nawait sms.createTemplate(<name>, <template>, <type>, <description>, <signature_id>)\nawait sms.queryTemplate(<audit_status>)\nawait sms.updateTemplate(<id>, <name>, <template>, <description>, <signature_id>)\nawait sms.deleteTemplate(<id>)\n```\n\n#### 发送短信，查看发送记录，查询发送计费条数\n\n```python\nawait sms.sendMessage(<template_id>, <mobiles>, <parameters>)\nawait sms.get_messages_info()\nawait sms.get_charge_message_count(<start>, <end>, <g>, <status>)\n```\n\n### 持久化\n\n```python\n# 获取持久化类对象\np = cow.get_persistent_fop(<bucket>)\n```\n\n#### 文件持久化\n\n```python\nawait p.execute(<key>, <fops>)\n```\n\n\n\n### 直播连麦管理\n\n```python\n# 获取一个管理类对象\nr = cow.get_rtc_server()\n```\n\n#### 创建，获取，修改，删除app\n\n```python\nawait r.create_app(<data>)\nawait r.get_app()\nawait r.update_app(<app_id>, <data>)\nawait r.delete_app(<app_id>)\n```\n\n#### 用户列表，踢出用户\n\n```python\nawait r.list_user(<app_id>, <data>)\nawait r.kick_user(<app_id>, <data>, <user_id>)\n```\n\n#### 查看活跃房间\n\n```python\nawait r.list_active_rooms(<app_id>)\n```\n\n\n\n### CDN管理\n\n```python\n# 获取cdn管理类对象\ncdn = cow.get_cdn_manager()\n```\n\n#### 刷新文件、目录\n\n```python\nawait cdn.refresh_urls(<urls>)\nawait cdn.refresh_dirs(<dirs>)\n# 同时刷新urls和dirs\nawait cdn.refresh_urls_and_dirs(<urls>, <dirs>)\n```\n\n#### 预取文件列表\n\n```python\nawait cdn.prefetch_urls(<urls>)\n```\n\n#### 查询宽带、流量数据\n\n```python\n# 宽带\nawait cdn.get_bandwidth_data(<domains>, <start_date>, <end_date>, <granularity>)\n# 流量\nawait cdn.get_flux_data(<domains>, <start_date>, <end_date>, <granularity>)\n```\n\n#### 获取日志下载链接\n\n```python\nawait cdn.get_log_list_data(<domains>, <log_date>)\n```\n\n#### 修改证书\n\n```python\nawait cdn.put_httpsconf(<name>, <certid>)\n```\n\n\n\n### 域名管理\n\n```python\n# 获取域名管理类对象\nd = cow.get_domain_manager()\n```\n\n#### 创建，查看，删除域名\n\n```python\nawait d.create_domain(<name>, <body>)\nawait d.get_domain(<name>)\nawait d.delete_domain(<name>)\n```\n\n#### 上线、下线域名\n\n```python\nawait d.domain_online(<name>)\nawait d.domain_offline(<name>)\n```\n\n#### 创建、修改证书\n\n```python\nawait d.create_sslcert(<name>, <certid>, <forceHttps>)\nawait d.put_httpsconf(<name>, <common_name>, <pri>, <ca>)\n```\n\n\n\n### 账号客户端\n\n```python\n# 获取帐号客户端对象\napp = client.get_app()\n```\n\n#### 创建、获取管理客户端\n\n```python\nawait app.create_qcos_client(<app_uri>)\nawait app.get_qcos_client(<app_uri>)\n```\n\n#### 账号密钥\n\n```python\n# 获取帐号下应用的密钥\nawait app.get_app_keys(<app_uri>)\n# 获取帐号下可用的应用的密钥\nawait app.get_valid_app_auth(<app_uri>)\n```\n\n#### 当前账号的信息\n\n```python\nawait app.get_account_info()\n```\n\n#### 获得指定应用所在区域的产品信息\n\n```python\nawait app.get_app_region_products(<app_uri>)\n```\n\n#### 获取指定区域产品信息\n\n```python\nawait app.get_region_products(<region>)\n```\n\n#### 获得账号可见的区域的信息\n\n```python\nawait app.list_regions()\n```\n\n#### 创建、获得、删除当前账号的应用\n\n```python\nawait app.create_app(<args>)\nawait app.list_apps()\nawait app.delete_app(<app_uri>)\n```\n\n### 资源管理客户端\n\n```python\n# 获取资源管理客户端对象\nq = client.get_qcos_client()\n```\n\n#### 创建、获取、删除服务组\n\n```python\nawait q.create_stack(<args>)\nawait q.get_stack(<stack>)\nawait q.delete_stack(<stack>)\n```\n\n#### 启动、停止服务组\n\n```python\nawait q.start_stack(<stack>)\nawait q.stop_stack(<stack>)\n```\n\n#### 创建、获取、更新删除服务\n\n```python\nawait q.create_service(<stack>, <args>)\n# 查看服务\nawait q.get_service_inspect(<stack>, <service>)\n# 获得服务列表\nawait q.list_services(<stack>)\nawait q.update_service(<stack>, <service>, <args>)\nawait q.delete_service(<stack>, <service>)\n```\n\n#### 启动、停止服务\n\n```python\nawait q.start_service(<stack>, <service>)\nawait q.stop_service(<stack>, <service>)\n```\n\n#### 扩容、缩容服务\n\n```python\nawait q.scale_service(<stack>, <service>, <args>)\n```\n\n#### 创建、删除、扩容存储卷\n\n```python\nawait q.create_service_volume(<stack>, <service>, <args>)\nawait q.delete_service_volume(<stack>, <service>, <volume>)\nawait q.extend_service_volume(<stack>, <service>, <volume>, <args>)\n```\n\n#### 查看、列出容器\n\n```python\nawait q.get_container_inspect(<ip>)\nawait q.list_containers()\n```\n\n#### 启动、停止、重启容器\n\n```python\nawait q.start_container(<ip>)\nawait q.stop_container(<ip>)\nawait q.restart_container(<ip>)\n```\n\n#### 接入点\n\n```python\n# 列出接入点\nawait q.list_aps()\n# 搜索接入点\nawait q.search_ap(<mode>, <query>)\n# 查看接入点\nawait q.get_ap(<apid>)\n# 申请接入点\nawait q.create_ap(<args>)\n# 更新接入点\nawait q.update_ap(<apid>, <args>)\n# 更新接入点端口配置\nawait q.set_ap_port(<apid>, <port>, <args>)\n# 释放接入点\nawait q.delete_ap(<apid>)\n```\n\n#### 自定义域名\n\n```python\n# 绑定自定义域名\nawait q.publish_ap(<apid>, <args>)\n# 解绑自定义域名\nawait q.unpublish_ap(<apid>, <args>)\n```\n\n#### 查看健康检查结果\n\n```python\nawait q.get_ap_port_healthcheck(<apid>, <port>)\n```\n\n#### 调整后端实例配置\n\n```python\nawait q.set_ap_port_container(<apid>, <port>, <args>)\n```\n\n#### 接入点端口\n\n```python\n# 临时关闭接入点端口\nawait q.disable_ap_port(<apid>, <port>)\n# 开启接入点端口\nawait q.enable_ap_port(<apid>, <port>)\n```\n\n#### 列出入口提供商\n\n```python\nawait q.get_ap_providers()\n```\n\n#### 获取一次性代理地址\n\n```python\nawait q.get_web_proxy(<backend>)\n```\n\n\n\n\n\n## 测试\n\n### 桶测试\n\n1.  首先从github clone项目到本地\n2.  在项目中有example供测试，配置好main.py中的access_key、secret_key、bucket以及file_path参数后即可开始测试\n\n特别鸣谢：[Hagworm](https://gitee.com/wsb310/hagworm) 以及七牛官方\n\n欢迎大佬指正！感谢您的星星❤",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitee.com/xixigroup/wintersweet",
    "keywords": "",
    "license": "Apache License Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "async-cow",
    "package_url": "https://pypi.org/project/async-cow/",
    "platform": "all",
    "project_url": "https://pypi.org/project/async-cow/",
    "project_urls": {
      "Homepage": "https://gitee.com/xixigroup/wintersweet"
    },
    "release_url": "https://pypi.org/project/async-cow/0.5.2/",
    "requires_dist": null,
    "requires_python": ">= 3.6",
    "summary": "Network Development Suite",
    "version": "0.5.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10008943,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3317d9a22c254b3f02571fba59d2c36b1da8bd30c18f1e1dba5812c63482dc04",
          "md5": "6b2667283edd4e66b4dca798337e4fa4",
          "sha256": "cea5333d45f118275e34dbaccaf85e1c5c049d1f62202fe737e609397feb52ad"
        },
        "downloads": -1,
        "filename": "async_cow-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6b2667283edd4e66b4dca798337e4fa4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 141091,
        "upload_time": "2021-04-01T16:10:41",
        "upload_time_iso_8601": "2021-04-01T16:10:41.934803Z",
        "url": "https://files.pythonhosted.org/packages/33/17/d9a22c254b3f02571fba59d2c36b1da8bd30c18f1e1dba5812c63482dc04/async_cow-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32fa16fb793a030ebf55656de27a3e376544c3f7d5d26e1b913c8bdc16c4457c",
          "md5": "f859f5dbcbc64ee109831f723b9b796d",
          "sha256": "70f6a463080f05b45d4bc5b99979ee484af2d21cd473b920ed3cef0a52938709"
        },
        "downloads": -1,
        "filename": "async_cow-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f859f5dbcbc64ee109831f723b9b796d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 141092,
        "upload_time": "2021-04-01T16:18:17",
        "upload_time_iso_8601": "2021-04-01T16:18:17.938806Z",
        "url": "https://files.pythonhosted.org/packages/32/fa/16fb793a030ebf55656de27a3e376544c3f7d5d26e1b913c8bdc16c4457c/async_cow-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb95c686a15bbe40830d6ae04ed8b221ba0b027e0a798694de32488130e7f6ba",
          "md5": "4213d72eb30e6af7d38c7d06806cecc1",
          "sha256": "595f1a117dac7fb86530f39797938a39c77d48e37e3bdaac79d033ffa801d583"
        },
        "downloads": -1,
        "filename": "async_cow-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4213d72eb30e6af7d38c7d06806cecc1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 141133,
        "upload_time": "2021-04-01T16:35:04",
        "upload_time_iso_8601": "2021-04-01T16:35:04.303885Z",
        "url": "https://files.pythonhosted.org/packages/cb/95/c686a15bbe40830d6ae04ed8b221ba0b027e0a798694de32488130e7f6ba/async_cow-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92d139a38452b99d0737171ef7b1f818e65b68b8da2decff0cc3248e520a432d",
          "md5": "1e1e290af9710ef39f52388a7fdbdb7c",
          "sha256": "c6db0b4c080767e677c52abd875e833060f26d195890b5108cbdd0d8f12615e2"
        },
        "downloads": -1,
        "filename": "async_cow-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1e1e290af9710ef39f52388a7fdbdb7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 152022,
        "upload_time": "2021-04-02T14:05:35",
        "upload_time_iso_8601": "2021-04-02T14:05:35.156844Z",
        "url": "https://files.pythonhosted.org/packages/92/d1/39a38452b99d0737171ef7b1f818e65b68b8da2decff0cc3248e520a432d/async_cow-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a2be1ea9844b2f66219d480d97ae833d859c08353dafb2258b0935b27aa4703",
          "md5": "2424135cd4b1d3a026132dfa4031df69",
          "sha256": "abc197a831df2673960a34c029f4a5523bbd6b7bfe0384ce501319e3963cc5ac"
        },
        "downloads": -1,
        "filename": "async_cow-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2424135cd4b1d3a026132dfa4031df69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 158532,
        "upload_time": "2021-04-03T16:58:49",
        "upload_time_iso_8601": "2021-04-03T16:58:49.159939Z",
        "url": "https://files.pythonhosted.org/packages/5a/2b/e1ea9844b2f66219d480d97ae833d859c08353dafb2258b0935b27aa4703/async_cow-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81c14845486ca315a5a4f115ec0483d6ede80cc65528fbd08e1ebfb6586a0e4f",
          "md5": "706e63570c821c9cbfd2d4d28933b148",
          "sha256": "ad4ae04d23c5828e301d14561297df37959ea0cdf35969c525719cb4d03e3917"
        },
        "downloads": -1,
        "filename": "async_cow-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "706e63570c821c9cbfd2d4d28933b148",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 158663,
        "upload_time": "2021-04-06T12:47:11",
        "upload_time_iso_8601": "2021-04-06T12:47:11.936598Z",
        "url": "https://files.pythonhosted.org/packages/81/c1/4845486ca315a5a4f115ec0483d6ede80cc65528fbd08e1ebfb6586a0e4f/async_cow-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "739fe636293d9963c891d61b76c94f052cbac0db52c42ca6af64a42bed06c52c",
          "md5": "75f420e416f3282a76c93d9148edbe8e",
          "sha256": "673bfb39e2c372f632ed630c06d105e5fd535bde64ba871203b3d729284cc04e"
        },
        "downloads": -1,
        "filename": "async_cow-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "75f420e416f3282a76c93d9148edbe8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 158730,
        "upload_time": "2021-04-08T14:10:04",
        "upload_time_iso_8601": "2021-04-08T14:10:04.930706Z",
        "url": "https://files.pythonhosted.org/packages/73/9f/e636293d9963c891d61b76c94f052cbac0db52c42ca6af64a42bed06c52c/async_cow-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "739fe636293d9963c891d61b76c94f052cbac0db52c42ca6af64a42bed06c52c",
        "md5": "75f420e416f3282a76c93d9148edbe8e",
        "sha256": "673bfb39e2c372f632ed630c06d105e5fd535bde64ba871203b3d729284cc04e"
      },
      "downloads": -1,
      "filename": "async_cow-0.5.2.tar.gz",
      "has_sig": false,
      "md5_digest": "75f420e416f3282a76c93d9148edbe8e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.6",
      "size": 158730,
      "upload_time": "2021-04-08T14:10:04",
      "upload_time_iso_8601": "2021-04-08T14:10:04.930706Z",
      "url": "https://files.pythonhosted.org/packages/73/9f/e636293d9963c891d61b76c94f052cbac0db52c42ca6af64a42bed06c52c/async_cow-0.5.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}