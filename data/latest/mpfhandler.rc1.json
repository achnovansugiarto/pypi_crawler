{
  "info": {
    "author": "yorks",
    "author_email": "stuyorks@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Logging"
    ],
    "description": "Overview\n========\n\nThis module provides an additional log handler for Python’s standard\nlogging package (PEP 282). This handler will write log events to log\nfile which is rotated at a certain time(day, hour, min) and multiple\nprocesses supported.\n\n这个模块提供了一个 Python logging handler 类。它会根据配置按时间来\n轮转日志文件，并且支持多进程\n\nDetails\n=======\n\nThe `MultProcTimedRotatingFileHandler` class is a drop-in replacement\nfor Python’s standard log handler `RotatingFileHandler`. This module\nuses file locking so that multiple processes can concurrently log to a\nsingle file without dropping or clobbering log events. This module\nprovides a file rotation scheme like with `RotatingFileHanler`. Extra\ncare is taken to ensure that logs can be safely rotated before the\nrotation process is started.\n\nThis class ratating file at an exact time, such as every day(23:59:59)\nor every hour(xx:59:59) and so on.\n\nIf you have multiple instances of a script (or multiple scripts) all\nrunning at the same time and writing to the same log file, then *all* of\nthe scripts should be using this class.\n\nThis class require `portalocker` to deal with file locking. Please be\naware that portalocker only supports Unix (posix) an NT platforms at\nthis time, and therefore this package only supports those platforms as\nwell. But, only tested on Linux.\n\n基于标准的 `RotatingFileHandler` 类开发，支持多线程，多进程，\n轮转方式是按照时间, 每天/每小时/每分钟\n不依赖于进程的启动时间，而是根据系统时间 进行轮转.\n\n如果有多个脚本或者实例都需要打日志到同一个文件，请一定都要用这个类\n`MultProcTimedRotatingFileHandler`, 因为它是基于文件锁的.\n\n这个类使用了 `portalocker` 去处理多进程之间的文件锁，所以它只支持\n\\*nix 跟 NT 系统， 但是我只测试了在 Linux 下面使用。\n\n\n\nWhy\n===\n\nThis class fork from `TimedRotatingFileHandler` and\n`ConcurrentLogHandler`. For `TimedRotatingFileHandler` issues:\n\n1. thread safe but not process safe\n2. rotating time is accumulate, this means it deponding the process when\n   to start up.\n\n`ConcurrentLogHandler` is good, but it only rotating by the logfile\nsize.\n\n这个类其实是参考了\n`TimedRotatingFileHandler`\\ ，\\ `ConcurrentLogHandler`\n这两个handler, 为什么要写这个呢？主要是上面提到的这两个都有一些小问题。\n\n`TimedRotatingFileHandler`:\n\n1. 虽然是线程安全，但是并不支持多进程\n2. 轮转的时间是依赖于进程的启动时间，所以会出现轮转点并不是常规的59s.\n\n`ConcurrentLogHandler` 如果只是实现了根据日志文件大小来轮转,\n未提供按时间的.\n\nInstallation\n============\n\nUse the following command to install this package:\n\n::\n\n    pip install mpfhandler\n\nIf you are installing from source, you can use:\n\n::\n\n    python setup.py install\n\nOr wget the single file to your python sys.path:\n\n::\n\n    wget https://github.com/yorks/mpfhandler/raw/master/src/mpfhandler.py -O\\\n        /usr/lib/python2.6/site-packages/mpfhandler.py\n\n\nExamples\n========\n\nSimple Example\n--------------\n\nHere is a example demonstrating how to use this module directly\n\n.. code:: python\n\n\n        from logging import getLogger, INFO\n        from mpfhandler import MultProcTimedRotatingFileHandler\n        import os\n        \n        log = getLogger()\n        # Use an absolute path to prevent file rotation trouble.\n        logfile = os.path.abspath(\"mylogfile.log\")\n        # Rotate log every hour\n        rotateHandler = MultProcTimedRotatingFileHandler(logfile,  when='h')\n        log.addHandler(rotateHandler)\n        log.setLevel(INFO)\n\n        log.info(\"Here is a very exciting log message, just for you\")\n\nDjango Example\n--------------\n\n.. code:: python\n\n    # settings.py\n    LOGGING={\n     #...\n     'handlers':{\n            'custom_mpf_rotate':{\n                'level': 'DEBUG',\n                'class': 'mpfhandler.MultProcTimedRotatingFileHandler',\n                'filename': os.path.join(BASE_DIR, 'logs/custom_mptf.log'),\n                'when' : 'D', # day, or H for hour\n                #'interval' : 1,  # TODO\n                #'debug' : False, # handler own log\n                'formatter': 'verbose'\n            },\n      },\n     'loggers':{\n            ...\n            'customapp': {\n                'handlers': ['console', 'custom_mpf_rotate'],\n                'level': 'DEBUG',\n                'propagate': False,\n            },\n            #...\n      }\n\n    }\n\n    # app/view.py\n    import logging\n    log=logging.getLogger(__name__)\n    log.info('Here is a very exciting log message, just for you')\n\nAttention\n=========\n\n1. interval, backupCount options is not working!\n2. $logpath.lock is the lock file to handle multiple processes, donot\n   delete it.\n3. There is no stress-testing has been done, if it slow down for logging\n   it might be the lock issue.\n\n注意\n====\n\n1. `interval`, `backupCount`\n   参数暂不支持，这也就是说，日志的压缩清理您需要额外处理。\n2. `$logpath.lock` 这个文件请不要删除，是用来处理文件锁的。\n3. 还没经过压力测试，如果担心会托慢您的程序，可能是因为文件锁引起.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/yorks/mpfhandler/releases/tag/0.0.1",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yorks/mpfhandler",
    "keywords": "logging,linux,unix,rotate,portalocker,django,mutiple processes",
    "license": "http://www.apache.org/licenses/LICENSE-2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "mpfhandler",
    "package_url": "https://pypi.org/project/mpfhandler/",
    "platform": "nt,posix",
    "project_url": "https://pypi.org/project/mpfhandler/",
    "project_urls": {
      "Download": "https://github.com/yorks/mpfhandler/releases/tag/0.0.1",
      "Homepage": "https://github.com/yorks/mpfhandler"
    },
    "release_url": "https://pypi.org/project/mpfhandler/0.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "a timed rotate logging file handler, support multiple processes (base logging.RotatingFileHandler, portalocker)",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1711235,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca2228e537673cdd23cc49e58cb59cebb681db8011b490cfbc10c430399889b5",
          "md5": "1bbbdb1caffee9743e24a35aa78f4a50",
          "sha256": "e02b1fbe79b2cafcc1d0695520a885754c74f17cbe1407af9cc338ede0968da7"
        },
        "downloads": -1,
        "filename": "mpfhandler-0.0.1.zip",
        "has_sig": false,
        "md5_digest": "1bbbdb1caffee9743e24a35aa78f4a50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14365,
        "upload_time": "2015-09-07T03:19:15",
        "upload_time_iso_8601": "2015-09-07T03:19:15.685507Z",
        "url": "https://files.pythonhosted.org/packages/ca/22/28e537673cdd23cc49e58cb59cebb681db8011b490cfbc10c430399889b5/mpfhandler-0.0.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca2228e537673cdd23cc49e58cb59cebb681db8011b490cfbc10c430399889b5",
        "md5": "1bbbdb1caffee9743e24a35aa78f4a50",
        "sha256": "e02b1fbe79b2cafcc1d0695520a885754c74f17cbe1407af9cc338ede0968da7"
      },
      "downloads": -1,
      "filename": "mpfhandler-0.0.1.zip",
      "has_sig": false,
      "md5_digest": "1bbbdb1caffee9743e24a35aa78f4a50",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14365,
      "upload_time": "2015-09-07T03:19:15",
      "upload_time_iso_8601": "2015-09-07T03:19:15.685507Z",
      "url": "https://files.pythonhosted.org/packages/ca/22/28e537673cdd23cc49e58cb59cebb681db8011b490cfbc10c430399889b5/mpfhandler-0.0.1.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}