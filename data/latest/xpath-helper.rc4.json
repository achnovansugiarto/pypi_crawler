{
  "info": {
    "author": "Johann Rebecchi",
    "author_email": "jrebecchi@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Code Generators",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Text Processing :: Markup",
      "Topic :: Text Processing :: Markup :: HTML",
      "Topic :: Text Processing :: Markup :: XML",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/jrebecchi/xpath-helper/main/docs/_static/logo-with-text.png\" height=\"100px\" alt=\"xpath-helper\"/>\n</p>\n<p align=\"center\">\n  <i>Build complicated XPath queries without the hassle - JavaScript & Python</i><br/><br/>\n  <a href=\"https://jrebecchi.github.io/xpath-helper/python/index.html\">\n    <img src=\"https://img.shields.io/badge/docs-master-blue.svg?style=flat\">\n  </a>\n  <a href=\"https://codecov.io/gh/jrebecchi/xpath-helper\">\n    <img src=\"https://codecov.io/gh/jrebecchi/xpath-helper/branch/main/graph/badge.svg?token=0TJOZ64X10\"/>\n  </a>\n  <a href=\"https://github.com/jrebecchi/xpath-helper/actions/workflows/python-ci.yml\">\n    <img src=\"https://github.com/jrebecchi/xpath-helper/actions/workflows/python-ci.yml/badge.svg\">\n  </a>\n</p>\n\nA chainable API to build complex XPath queries along the different [XPath axes](https://jrebecchi.github.io/xpath-helper/xpath-axes.html). Available both in Python and JavaScript.\n\n- [**Documentation**](https://jrebecchi.github.io/xpath-helper/python/index.html) â€” Consult the quick start guide and the online documentation.\n\n## Installation\n`xpath-helper` requires python 3.5+ and can be installed using pip:\n```bash\npip install xpath-helper\n```\n## Quick-start\nYou can chain method call on the different [XPath axes](https://jrebecchi.github.io/xpath-helper/xpath-axes.html) and easily add filters.\n```python\nfrom xpath_helper import xh, filter\n\n# Finds a paragraph <p> containing a CSS class 'very-nice-p'\np = xh.get_element_by_tag('p', filter.attribute_contains('class', 'very-nice-p'))\nstr(p) # \"//p[contains(@class, 'very-nice-p')]\"\n\n# Finds the paragraph that is following the above one\nnext_p = p.get_following_sibling_by_tag('p')\nstr(next_p) # \"//p[contains(@class, 'very-nice-p')]/following-sibling::p\"\n\n# Finds the modal containing a button with text \"Register\" \nmodal = xh.get_element(filter.value_equals('Register')).get_ancestor(filter.attribute_equals('class', 'modal'))\nstr(modal) # \"//*[text() = 'Register']/ancestor::*[@class='modal']\"\n\n# An elaborated filter with a boolean expression\nli = xh.get_element_by_tag(\"li\", filter.and_operator(\n  filter.or_operator(\n    filter.value_contains(\"JavaScript\"), filter.value_contains(\"Python\")\n  ),\n  filter.has_attribute(\"data-description\")\n))\nstr(li) # \"//li[((text()[contains(., 'JavaScript')] or text()[contains(., 'Python')]) and @data-description)]\"\n```\n\n## Chaining\n\nXPath natively lets your build complex queries chaining them along its different axes. Read this [article to understand the different XPath axes](https://jrebecchi.github.io/xpath-helper/xpath-axes.html).\n\nThis library let you do exactly the same by chaining method calls along the different axes: [`descendant`](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.XPathHelper.get_descendant) aliased as [`element`](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.XPathHelper.get_element), [`descendant-or-self`](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.XPathHelper.get_descendant_or_self), [`child`](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.XPathHelper.get_child), [`parent`](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.XPathHelper.get_parent), [`ancestor`](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.XPathHelper.get_ancestor), [`ancestor-or-self`](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.XPathHelper.get_ancestor_or_self), [`preceding`](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.XPathHelper.get_preceding), [`preceding-sibling`](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.XPathHelper.get_preceding_sibling), [`following`](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.XPathHelper.get_following), [`following-sibling`](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.XPathHelper.get_following_sibling).\n\nFor each axis, xpath-helper provides 3 methods, like for instance `get_element(filter)`, `get_element_by_tag(tag, filter)`, `get_element_by_svg_tag(svgTag, filter)` for the `descendant`  axis aliased as `element`.\n\n***The complete Python API can be found [here](https://jrebecchi.github.io/xpath-helper/python/api.html#module-xpath_helper).***\n\n\n```python\nfrom xpath_helper import xh, filter\n\n# Finds an element into the page, moves to its parent, \n# finds a brother node of the parent positioned after it.\nel = xh.get_element_by_tag(\n    'p', filter.attribute_contains('class', 'very-nice-p')\n).get_parent().get_following_sibling_by_tag('p')\nstr(el) # \"//p[contains(@class, 'very-nice-p')]/../following-sibling::p\"\n\n# Finds an element into the page, moves to its ancestor \n# containing 'very-nice-p' ass CSS class, \n# finds a brother node of the ancestor positioned before it.\nel = xh.get_element_by_tag(\n    'p', filter.attribute_contains('class', 'very-nice-p')\n).get_ancestor_by_tag(\n  'div'\n).get_preceding_sibling(filter.has_attribute('data-foo-bar'))\nstr(el) # \"//p[contains(@class, 'very-nice-p')]/../following-sibling::p//p[contains(@class, 'very-nice-p')]/ancestor::div/preceding-sibling::*[@data-foo-bar]\"\n```\n\nIt is also possible to keep a relative path in a variable and re-use it after.\n```python\nfrom xpath_helper import xh, filter\n# Stores the path of a modal window\nmodal = xh.get_element(filter.attribute_contains('class', 'modal'))\n# Finds the Submit button inside the modal window\nsubmit_button = modal.get_element_by_tag('button', filter.value_equals('Submit'))\n# Finds the Cancel button inside the modal window\ncancel_button = modal.get_element_by_tag('button', filter.value_equals('Cancel'))\n```\n## Filters\nTo select elements more precisely you can add filters: [on attributes](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.filter.EmptyFilter.attribute_contains), on [element values](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.filter.EmptyFilter.value_contains), [element position](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.filter.EmptyFilter.get), and combining them with conditional operators: [`and_operator(...)`](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.filter.ValidExpressionFilter.and_operator), [`or_operator(...)`](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.filter.ValidExpressionFilter.or_operator), and [`not_operator(...)`](https://jrebecchi.github.io/xpath-helper/python/api.html#xpath_helper.filter.EmptyFilter.not_operator).\n\n***The complete filter API can be found [here](https://jrebecchi.github.io/xpath-helper/python/api.html#filter-filter).***\n\n### Attributes\nFind below a few examples of filters on attributes.\n\n```python\nfrom xpath_helper import xh, filter\n# Looks for an element that has a class attribute equals to 'foo'\nel = xh.get_element(filter.attribute_equals('class', 'foo'))\n# Looks for an element that has a class attribute containing 'bar'\nel = xh.get_element(filter.attribute_contains('class', 'bar'))\n# Looks for an element that has the attribute 'alt'\nimg = xh.get_element_by_tag('img', filter.has_attribute('alt'))\n# Looks for all the li element with a data-attribute superior to 3\nli = xh.get_element_by_tag('li', filter.attribute_greater_than('data-index', 3))\n```\n### Values\nFind below a few examples of filters on node values.\n```python\nfrom xpath_helper import xh, filter\n\n# Looks for a button whose text is 'Submit'\nbutton = xh.get_element_by_tag('button', filter.value_equals('Submit'))\n# Looks for an element whose text contains 'foobar'\nel = xh.get_element(filter.value_contains('foobar'))\n# Looks for all the li element with a value superior to 3\nli = xh.get_element_by_tag('li', filter.value_greater_than(3))\n```\n### Position\nFind below a few examples of filters on node position.\n```python\nfrom xpath_helper import xh, filter\n\n# Looks for the first li element in ul list\nfirst = xh.get_element_by_tag('ul').get_element_by_tag('li', filter.get_first())\n# Looks for the first li element in ul list\nlast = xh.get_element_by_tag('ul').get_element_by_tag('li', filter.get_last())\n# Looks for the third li element in ul list\nthird = xh.get_element_by_tag('ul').get_element_by_tag('li', filter.get(3))\n```\n### Conditional expression\nFind below a few examples of filters with conditional expression.\n\n```python\nfrom xpath_helper import xh, filter\n\n# Finds an element that has a CSS class 'a-link' and contains an attribute href\nel = xh.get_element(\n  filter.attribute_contains('class', 'a-link').and_operator(\n    filter.has_attribute('href')\n  )\n)\nstr(el) # \"//*[contains(@class, 'a-link') and (@href)]\"\n\n# Finds an element that has a CSS class 'foo' or a CSS class 'bar'\nel = xh.get_element(\n  filter.attribute_contains('class', 'foo').or_operator(\n    filter.attribute_contains('class', 'bar')\n  )\n)\nstr(el) # \"//*[contains(@class, 'foo') or (contains(@class, 'bar'))]\"\n\n# Builds a complex logical expression combining and & or\nel = xh.get_element(\n  filter.and_operator(\n    filter.or_operator(\n      filter.value_contains(\"JavaScript\"),\n      filter.value_contains(\"Pyhton\")\n    ),\n      filter.value_contains(\"package\")\n  )\n)\nstr(el) # \"//*[((text()[contains(., 'JavaScript')] or text()[contains(., 'Pyhton')]) and text()[contains(., 'package')])]\"\n```\n## SVG\nNavigating into SVG elements from an HTML file can be tricky with XPath, that is why a subset of functions have been added. They are all ending with `...by_svg_tag` and can be used as below.\n\n```python\nfrom xpath_helper import xh, filter\n\n# Stores the path of a modal window\npath = xh.get_element_by_svg_tag('path', filter.attribute_equals('d', 'M 310 130 L 90 130 L 90 183.63'))\nstr(path) # \"//*[local-name() = 'path'][@d='M 310 130 L 90 130 L 90 183.63']\"\n\n# Finds the Submit button inside the modal window\ng = xh.get_element_by_svg_tag(\n  'path', filter.attribute_equals('id', 'id-path')\n).get_ancestor_by_svg_tag('g')\nstr(g) # \"//*[local-name() = 'path'][@id='id-path']/ancestor::*[local-name() = 'g']\"\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jrebecchi/xpath-helper",
    "keywords": "xpath,helper,selenium,test,selector,scraping",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xpath-helper",
    "package_url": "https://pypi.org/project/xpath-helper/",
    "platform": null,
    "project_url": "https://pypi.org/project/xpath-helper/",
    "project_urls": {
      "Homepage": "https://github.com/jrebecchi/xpath-helper",
      "Repository": "https://github.com/jrebecchi/xpath-helper"
    },
    "release_url": "https://pypi.org/project/xpath-helper/0.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "A simple and chainnable API to build complicated XPath queries without the hassle.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15391066,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "196d6e28db49a1328d2e268193cd8f1a462b48762fdb404ea9bbd7414bd1acd6",
          "md5": "b36aacc926fa5b6d56b2ccc6d516d37f",
          "sha256": "7bb2b53142a9042ad04b350b7f1c6ed3faec8e014e418a91a93025eb4d74d9bd"
        },
        "downloads": -1,
        "filename": "xpath_helper-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b36aacc926fa5b6d56b2ccc6d516d37f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 12277,
        "upload_time": "2021-11-08T00:35:26",
        "upload_time_iso_8601": "2021-11-08T00:35:26.744498Z",
        "url": "https://files.pythonhosted.org/packages/19/6d/6e28db49a1328d2e268193cd8f1a462b48762fdb404ea9bbd7414bd1acd6/xpath_helper-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6789a53071c900813d5a38cef30b4255079b9d56d8c0720e2450268e9912a725",
          "md5": "30753eecb8fa1d633e80f51e3abf0f35",
          "sha256": "7370f5a10e995c8929728ed6c1ba162a855b137dd1ab08f32a9e57e8390ce7f3"
        },
        "downloads": -1,
        "filename": "xpath-helper-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "30753eecb8fa1d633e80f51e3abf0f35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 11420,
        "upload_time": "2021-11-08T00:35:25",
        "upload_time_iso_8601": "2021-11-08T00:35:25.615850Z",
        "url": "https://files.pythonhosted.org/packages/67/89/a53071c900813d5a38cef30b4255079b9d56d8c0720e2450268e9912a725/xpath-helper-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13c5909c5afa884d3ca4f659330bf2e16a017889139d701e7a4942781649e5d9",
          "md5": "e89fcf338b29482323618a16ed8ef24c",
          "sha256": "7e08b04d4422cb452479d6222e31ab61226a4a7d6da5703d21a5f2c31ea3947a"
        },
        "downloads": -1,
        "filename": "xpath_helper-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e89fcf338b29482323618a16ed8ef24c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 12253,
        "upload_time": "2021-11-12T00:23:50",
        "upload_time_iso_8601": "2021-11-12T00:23:50.204429Z",
        "url": "https://files.pythonhosted.org/packages/13/c5/909c5afa884d3ca4f659330bf2e16a017889139d701e7a4942781649e5d9/xpath_helper-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1d773b0e6d88eff824939e4152266d0b70db862d6a713d1fabf36dd696c3024",
          "md5": "4491b6a63f1c3c9be714e43e498cf469",
          "sha256": "d32fce9271eb2e117c6934fc622c39b359b10474baf71fa5a8fccca973bf1b8b"
        },
        "downloads": -1,
        "filename": "xpath-helper-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4491b6a63f1c3c9be714e43e498cf469",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11385,
        "upload_time": "2021-11-12T00:23:49",
        "upload_time_iso_8601": "2021-11-12T00:23:49.143824Z",
        "url": "https://files.pythonhosted.org/packages/d1/d7/73b0e6d88eff824939e4152266d0b70db862d6a713d1fabf36dd696c3024/xpath-helper-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8badc2c9d3153d447308e4dccbc674a39caee97856005ce1e7fb42a22950c6d3",
          "md5": "bc0b3302d839e55fb8eebb092e897edc",
          "sha256": "85e728edf406780357d34a6cb59ff9bba38266d6cc9e05ec846247db724467c7"
        },
        "downloads": -1,
        "filename": "xpath_helper-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc0b3302d839e55fb8eebb092e897edc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 12279,
        "upload_time": "2021-12-12T18:01:41",
        "upload_time_iso_8601": "2021-12-12T18:01:41.300912Z",
        "url": "https://files.pythonhosted.org/packages/8b/ad/c2c9d3153d447308e4dccbc674a39caee97856005ce1e7fb42a22950c6d3/xpath_helper-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fed0159797ed14ef22d0c26444714ea6373085aa05339e094da925aeaf828c7",
          "md5": "67c478dcaed04957db4960f88ebb6fe1",
          "sha256": "a1e9a48a390d5b3c6846bc8caa93fb03772af1118eca3c6616a3dd82e6541d78"
        },
        "downloads": -1,
        "filename": "xpath-helper-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "67c478dcaed04957db4960f88ebb6fe1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11412,
        "upload_time": "2021-12-12T18:01:40",
        "upload_time_iso_8601": "2021-12-12T18:01:40.371835Z",
        "url": "https://files.pythonhosted.org/packages/1f/ed/0159797ed14ef22d0c26444714ea6373085aa05339e094da925aeaf828c7/xpath-helper-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d8e3defd013a8a3fa40be77e863b7893fcaa9ef1dfcc38c175a71f4a9125e6a",
          "md5": "b01a99a7affd9f7e2d22072d99aab499",
          "sha256": "bd0bd3d42e5403776df35125fb0d9443427f6a8652bd98dfc017ec5310811a58"
        },
        "downloads": -1,
        "filename": "xpath_helper-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b01a99a7affd9f7e2d22072d99aab499",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 12280,
        "upload_time": "2022-10-12T20:41:26",
        "upload_time_iso_8601": "2022-10-12T20:41:26.204917Z",
        "url": "https://files.pythonhosted.org/packages/7d/8e/3defd013a8a3fa40be77e863b7893fcaa9ef1dfcc38c175a71f4a9125e6a/xpath_helper-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cb87638379659414a610ed55cae6f986a2a1c2d557ffe18443c080e0d39bf5e",
          "md5": "c747da79e6f8eac0c67c2d1c1a174bb0",
          "sha256": "112a5ea93b8d35148d7ea3c17c3bbf8d6138c4466792edd916bc82a9127e20e1"
        },
        "downloads": -1,
        "filename": "xpath-helper-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c747da79e6f8eac0c67c2d1c1a174bb0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11420,
        "upload_time": "2022-10-12T20:41:24",
        "upload_time_iso_8601": "2022-10-12T20:41:24.937870Z",
        "url": "https://files.pythonhosted.org/packages/1c/b8/7638379659414a610ed55cae6f986a2a1c2d557ffe18443c080e0d39bf5e/xpath-helper-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d8e3defd013a8a3fa40be77e863b7893fcaa9ef1dfcc38c175a71f4a9125e6a",
        "md5": "b01a99a7affd9f7e2d22072d99aab499",
        "sha256": "bd0bd3d42e5403776df35125fb0d9443427f6a8652bd98dfc017ec5310811a58"
      },
      "downloads": -1,
      "filename": "xpath_helper-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b01a99a7affd9f7e2d22072d99aab499",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 12280,
      "upload_time": "2022-10-12T20:41:26",
      "upload_time_iso_8601": "2022-10-12T20:41:26.204917Z",
      "url": "https://files.pythonhosted.org/packages/7d/8e/3defd013a8a3fa40be77e863b7893fcaa9ef1dfcc38c175a71f4a9125e6a/xpath_helper-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1cb87638379659414a610ed55cae6f986a2a1c2d557ffe18443c080e0d39bf5e",
        "md5": "c747da79e6f8eac0c67c2d1c1a174bb0",
        "sha256": "112a5ea93b8d35148d7ea3c17c3bbf8d6138c4466792edd916bc82a9127e20e1"
      },
      "downloads": -1,
      "filename": "xpath-helper-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "c747da79e6f8eac0c67c2d1c1a174bb0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 11420,
      "upload_time": "2022-10-12T20:41:24",
      "upload_time_iso_8601": "2022-10-12T20:41:24.937870Z",
      "url": "https://files.pythonhosted.org/packages/1c/b8/7638379659414a610ed55cae6f986a2a1c2d557ffe18443c080e0d39bf5e/xpath-helper-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}