{
  "info": {
    "author": "sherbold",
    "author_email": "herbold@cs.uni.goettingen.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# Autorank\n\n[![Actions Status](https://github.com/sherbold/autorank/workflows/Build/badge.svg)](https://github.com/sherbold/autorank/actions)\n[![codecov](https://codecov.io/gh/sherbold/autorank/branch/master/graph/badge.svg)](https://codecov.io/gh/sherbold/autorank)\n[![DOI](https://joss.theoj.org/papers/10.21105/joss.02173/status.svg)](https://doi.org/10.21105/joss.02173)\n[![PyPI version](https://badge.fury.io/py/autorank.svg)](https://badge.fury.io/py/autorank)\n\n## Summary\n\nAutorank is a simple Python package with one task: simplify the comparison between (multiple) paired populations. This\nis, for example, required if the performance of different machine learning algorithms or simulations should be compared \non multiple data sets. The performance measures on each data set are then the paired samples, the difference in the\ncentral tendency (e.g., the mean or median) can be used to rank the different algorithms. This problem is not new and\nhow such tests could be done was already described in 2006  in the well-known article _Janez Demšar. 2006. Statistical\nComparisons of Classifiers over Multiple Data Sets. J. Mach. Learn. Res. 7 (December 2006), 1–30_. \n\nRegardless, the correct use of Demšar guidelines is hard for non-experts in statistics. Correct use of the guidelines\nrequires the decision of whether a paired t-test, a Wilcoxon's rank sum test, repeated measures ANOVA with Tukey's HSD \nas post-hoc test, or Friedman's tests and Nemenyi's post-hoc test to determine an answer to the question if there are\ndifferences. For this, the distribution of the populations must be analyzed with the Shapiro-Wilk test for normality\nand, depending on the normality with Levene's test or Bartlett's tests for homogeneity of the data. All this is already\nquite complex. This does not yet account for the adjustment of the significance level in case of repeated tests to\nachieve the desired family-wise significance. Additionally, not only the tests should be conducted, but good reporting\nof the results also include confidence intervals, effect sizes, and the decision of whether it is appropriate to report\nthe mean value and standard deviation, or whether the median value and the median absolute deviation is more\nappropriate.\n\nMoreover, Bayesian statistics have become more popular in recent years. There is even a follow up article co-authored\nby Janez Demšar that suggest to use Bayesian statistics: _Alessio Benavoli, Giorgio Corani, Janez Demšar, Marco\nZaffalon. 2017. Time for a Change: a Tutorial for Comparing Multiple Classifiers Through Bayesian Analysis. J. Mach.\nLearn. Res. 18(77), 1-36_. There are two main advantages of the Bayesian approach. 1) Instead of an indirect assessment\nof the hypothesis that something is equal or different through a p-value, Bayesian statistics directly computes the\nprobability that the central tendency of a population is smaller, equal, or larger than that of other populations. 2)\nThe definition of a Region of Practical Equivalence (ROPE) allows the definition of differences are too small to be \npractically relevant, which enables the Bayesian approach to determine equality of populations.  \n\nThe goal of Autorank is to simplify the statistical analysis for non-experts. Autorank takes care of all of the above\nwith a single function call, both for the traditional *frequentist* approach (Guidelines from 2006), as well as for the\n*Bayesian* approach (Guidelines from 2017). Additional functions allow the generation of appropriate plots, result\ntables, and even of a complete latex document. All that is required is the data about the populations is in a \n[Pandas](https://pandas.pydata.org/) dataframe.   \n\n\n## How to cite Autorank\n\n```\n@article{Herbold2020,\n  doi = {10.21105/joss.02173},\n  url = {https://doi.org/10.21105/joss.02173},\n  year = {2020},\n  publisher = {The Open Journal},\n  volume = {5},\n  number = {48},\n  pages = {2173},\n  author = {Steffen Herbold},\n  title = {Autorank: A Python package for automated ranking of classifiers},\n  journal = {Journal of Open Source Software}\n}\n```\n\n## Installation\n\nAutorank is available on PyPi and can be installed using pip.\n\n```\npip install autorank\n```\n\nYou can also clone this repository and install the latest development version (requires git and setuptools).\n```\ngit clone https://github.com/sherbold/autorank\ncd autorank\npython setup.py install\n```\n\n## API Documentation\n\nYou can find the API documentation of the current master of autorank\n[online](https://sherbold.github.io/autorank/autorank/).\n\n## Description\n\nThe following flow chart summarizes the decisions made by autorank.\n\n![CD Diagram](flowchart.png)\n\nThe user has to decide if the frequentist approach based on the guidelines from 2006 or the Bayesian approach based on\nthe guidelines from 2017 is used. Afterwards, autorank does the rest on its own. \n\n### Normality and Statistical Markers\n\nAutorank determines if all populations are normal to select appropriate statistical markers for reporting.  \n- First all populations are checked with the Shapiro-Wilk test for normality. We use Bonferoni correction for these\n  tests, i.e., alpha/#populations.\n- Based on the normality and the homogeneity, we select appropriate tests, effect sizes, and methods for determining\n  the confidence intervals of the central tendency.\n\nIf all columns are normal, we calculate:\n- The mean value as central tendency.\n- The empirical standard deviation as measure for the variance.\n- The confidence interval for the mean value.\n- The effect size in comparison to the highest mean value using Cohen's d.\n\nIf at least one column is not normal, we calculate:\n- The median as central tendency.\n- The median absolute deviation from the median as measure for the variance.\n- The confidence interval for the median.\n- The effect size in comparison to the highest ranking approach using\n[Akinshin's gamma](https://aakinshin.net/posts/nonparametric-effect-size/).\n\n### Frequentist Tests (2006 Guidelines)\n\nThe appropriate statistical test for the frequentist approach is determined based on the normality of the data, the\nhomogeneity of the populations (equal variances), and the number of populations. The best test for homogeneity depends\non the normality of the data. \n- If all columns are normal, we use Bartlett's test for homogeneity, otherwise we use Levene's test.\n\nWe then have four variants for statistical testing. \n- If there are two populations and both populations are normal, we use the paired t-test.\n- If there are two populations and at least one populations is not normal, we use Wilcoxon's signed rank test.\n- If there are more than two populations and all populations are normal and homoscedastic, we use repeated measures\n  ANOVA with Tukey's HSD as post-hoc test.\n- If there are more than two populations and at least one populations is not normal or the populations are\n  heteroscedastic, we use Friedman's test with the Nemenyi post-hoc test.\n\n### Bayesian Tests (2017 Guidelines)\n\nFor the Bayesian approach, we can use the Bayesian Signed Rank test, which makes no assumptions on the data. The\ncritical aspect of this test is the Region Of Practical Equivalence (ROPE) that defines when differences are practically\nirrelevant. If not configured otherwise, autorank determines the ROPE as follows. \n- For normal data, the ROPE is defined as 0.1*d, where d is the effect size (Cohen's d). \n- For non-normal data, the ROPE is defined as 0.1*gamma, where gamma is the effect size (Akinshin's gamma).\n\nThis follows [Kruschke and Liddell, 2018](https://doi.org/10.3758/s13423-016-1221-4), who suggest to determine the ROPE\nas half the size of a small effect. Since a small\neffect with Cohen's d is 0.2, this means that a ROPE of 0.1*d translates to a considering all differences that are not\neven half of a small effect as practically equivalent. The same concept is applied with Akinshin's gamma, which is a\ndirect translation of the concept of Cohen's d to robust statistics based on the median absolute deviation instead\nof the standard deviation.  \n\nUsers of autorank can define their own ROPE either with a different ratio of the effect size or using a fixed range for\nthe ROPE. \n\n\n### Implementation\n\nWe use the paired t-test, the Wilcoxon signed rank test, and the Friedman test from [scipy](https://www.scipy.org/). The\nrepeated measures ANOVA and Tukey's HSD test (including the calculation of the confidence intervals) are used from\n[statsmodels](statsmodels). We use the Bayesian signed rank test from the [baycomp](https://github.com/janezd/baycomp)\npackage. We use own implementations for the calculation of critical distance of the Nemenyi test, the calculation of the\neffect sizes, and the calculation of the confidence intervals (with the exception of Tukey's HSD).\n\n\n## Usage Example\n\nThe following example shows the usage of `autorank`. First, we import the functions from autorank and create some data. \n```python\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom autorank import autorank, plot_stats, create_report, latex_table\n\nnp.random.seed(42)\npd.set_option('display.max_columns', 7)\nstd = 0.3\nmeans = [0.2, 0.3, 0.5, 0.8, 0.85, 0.9]\nsample_size = 50\ndata = pd.DataFrame()\nfor i, mean in enumerate(means):\n    data['pop_%i' % i] = np.random.normal(mean, std, sample_size).clip(0, 1)\n```\n\nThe statistical analysis of the data only requires a single command. As a result, you get a named tuple with all\nrelevant information from the statistical analysis conducted.  \n```python\nresult = autorank(data, alpha=0.05, verbose=False)\nprint(result)\n``` \nOutput: \n```\nRankResult(rankdf=\n       meanrank    median       mad  ci_lower  ci_upper  effect_size    mangitude\npop_5      2.18  0.912005  0.130461  0.692127         1  2.66454e-17   negligible\npop_4      2.29  0.910437  0.132786  0.654001         1       -0.024   negligible\npop_3      2.47  0.858091  0.210394  0.573879         1       0.1364   negligible\npop_2      3.95  0.505057  0.333594  0.227184   0.72558       0.6424        large\npop_1      4.71  0.313824  0.247339  0.149473  0.546571       0.8516        large\npop_0      5.40  0.129756  0.192377         0  0.349014       0.9192        large\npvalue=2.3412212612346733e-28\ncd=1.0662484349869374\nomnibus='friedman'\nposthoc='nemenyi'\nall_normal=False\npvals_shapiro=[1.646607051952742e-05, 0.0605173334479332, 0.13884511590003967, 0.00010030837438534945,\n               2.066387423838023e-06, 1.5319776593969436e-06]\nhomoscedastic=True\npval_homogeneity=0.2663177301695518\nhomogeneity_test='levene'\nalpha=0.05\nalpha_normality=0.008333333333333333 \nnum_samples=50\nposterior_matrix=\nNone\ndecision_matrix=\nNone\nrope=None\nrope_mode=None\neffect_size=akinshin_gamma)\n```\n\nBy default, autorank performs a frequentist analysis. If you want to conduct a Bayesian analysis, you simple have to\ndefine this in the call of the `autorank` function. Please not that the Bayesian analysis is computationally expensive,\nso do not worry if this requires a couple of seconds (or in case of many populations, even minutes). \n\n```python\nresult_bayesian = autorank(data, alpha=0.05, verbose=False, approach='bayesian')\n```\nOutput:\n```\nRankResult(rankdf=\n         median       mad  ci_lower  ci_upper effect_size   magnitude  p_equal  p_smaller      decision\npop_5  0.912005  0.130461  0.605547         1           0  negligible      NaN        NaN            NA \npop_4  0.910437  0.132786   0.63089         1   0.0119148  negligible      0.0    0.66490  inconclusive \npop_3  0.858091  0.210394  0.545962         1    0.307991       small      0.0    0.81552  inconclusive  \npop_2  0.505057  0.333594  0.181309  0.744055     1.60669       large      0.0    1.00000       smaller \npop_1  0.313824  0.247339  0.106464  0.590593     3.02519       large      0.0    1.00000       smaller \npop_0  0.129756  0.192377         0   0.42154     4.75934       large      0.0    1.00000       smaller\npvalue=None\ncd=None\nomnibus=bayes\nposthoc=bayes\nall_normal=False\npvals_shapiro=[1.646607051952742e-05, 0.0605173334479332, 0.13884511590003967, 0.00010030837438534945, 2.066387423838023e-06, 1.5319776593969436e-06]\nhomoscedastic=None\npval_homogeneity=None\nhomogeneity_test=None\nalpha=0.05\nalpha_normality=0.008333333333333333\nnum_samples=50\nposterior_matrix=\n      pop_5                  pop_4                    pop_3            pop_2                    pop_1                    pop_0 \npop_5   NaN  (0.6649, 0.0, 0.3351)  (0.81552, 0.0, 0.18448)  (1.0, 0.0, 0.0)          (1.0, 0.0, 0.0)          (1.0, 0.0, 0.0)  \npop_4   NaN                    NaN  (0.80308, 0.0, 0.19692)  (1.0, 0.0, 0.0)          (1.0, 0.0, 0.0)          (1.0, 0.0, 0.0) \npop_3   NaN                    NaN                      NaN  (1.0, 0.0, 0.0)          (1.0, 0.0, 0.0)          (1.0, 0.0, 0.0)\npop_2   NaN                    NaN                      NaN              NaN  (0.99538, 0.0, 0.00462)          (1.0, 0.0, 0.0)  \npop_1   NaN                    NaN                      NaN              NaN                      NaN  (0.99938, 0.0, 0.00062)\npop_0   NaN                    NaN                      NaN              NaN                      NaN                      NaN\ndecision_matrix=\n              pop_5         pop_4         pop_3    pop_2    pop_1    pop_0\npop_5           NaN  inconclusive  inconclusive  smaller  smaller  smaller\npop_4  inconclusive           NaN  inconclusive  smaller  smaller  smaller\npop_3  inconclusive  inconclusive           NaN  smaller  smaller  smaller\npop_2        larger        larger        larger      NaN  smaller  smaller\npop_1        larger        larger        larger   larger      NaN  smaller\npop_0        larger        larger        larger   larger   larger      NaN\nrope=0.1\nrope_mode=effsize\neffect_size=akinshin_gamma)\n```\n\nYou can go ahead and use this tuple to create your own report about the statistical analysis. Alternatively, you can use\nautorank for this task.  \n```python\ncreate_report(result)\n```\nOutput:\n```\nThe statistical analysis was conducted for 6 populations with 50 paired samples.\nThe family-wise significance level of the tests is alpha=0.050.\nWe rejected the null hypothesis that the population is normal for the populations pop_5 (p=0.000), pop_2 (p=0.000), \npop_1 (p=0.000), and pop_0 (p=0.000). Therefore, we assume that not all populations are normal.\nBecause we have more than two populations and the populations and some of them are not normal, we use the \nnon-parametric Friedman test as omnibus test to determine if there are any significant differences between the \nmedian values of the populations. We use the post-hoc Nemenyi test to infer which differences are significant. We report\nthe median (MD), the median absolute deviation (MAD) and the mean rank (MR) among all populations over the samples. \nDifferences between populations are significant, if the difference of the mean rank is greater than the critical \ndistance CD=1.066 of the Nemenyi test.\nWe reject the null hypothesis (p=0.000) of the Friedman test that there is no difference in the central tendency of \nthe populations pop_5 (MD=0.912+-0.154, MAD=0.130, MR=2.180), pop_4 (MD=0.910+-0.173, MAD=0.133, MR=2.290), pop_3 \n(MD=0.858+-0.213, MAD=0.210, MR=2.470), pop_2 (MD=0.505+-0.249, MAD=0.334, MR=3.950), pop_1 (MD=0.314+-0.199, \nMAD=0.247, MR=4.710), and pop_0 (MD=0.130+-0.175, MAD=0.192, MR=5.400). Therefore, we assume that there is a \nstatistically significant difference between the median values of the populations.\nBased on the post-hoc Nemenyi test, we assume that there are no significant differences within the following groups: \npop_5, pop_4, and pop_3; pop_2 and pop_1; pop_1 and pop_0. All other differences are significant.\n```\n\nOr you could use Autorank to generate a plot that visualizes the statistical analysis. Autorank creates plots of the\nconfidence interval in case of the paired t-test and repeated measures ANOVA and a critical distance diagram for the\npost-hoc Nemenyi test. \n\n```python\nplot_stats(result)\nplt.show()\n```\n\nFor the above example, the following plot is created:\n\n![CD Diagram](examples/cd_diagram.png)\n\nTo further support reporting in scholarly article, Autorank can also generate a latex table with the relevant results. \n```python\nlatex_table(result)\n```\nOutput:\n```\n\\begin{table}[h]\n\\centering\n\\begin{tabular}{lrrllll}\n\\toprule\n{} &    MR &   MED &   MAD &              CI & $\\gamma$ &   Magnitude \\\\\n\\midrule\npop\\_5 & 2.180 & 0.912 & 0.130 &  [0.692, 1.000] &     0.000 &  negligible \\\\\npop\\_4 & 2.290 & 0.910 & 0.133 &  [0.654, 1.000] &     0.012 &  negligible \\\\\npop\\_3 & 2.470 & 0.858 & 0.210 &  [0.574, 1.000] &     0.308 &       small \\\\\npop\\_2 & 3.950 & 0.505 & 0.334 &  [0.227, 0.726] &     1.607 &       large \\\\\npop\\_1 & 4.710 & 0.314 & 0.247 &  [0.149, 0.547] &     3.025 &       large \\\\\npop\\_0 & 5.400 & 0.130 & 0.192 &  [0.000, 0.349] &     4.759 &       large \\\\\n\\bottomrule\n\\end{tabular}\n\\caption{Summary of populations}\n\\label{tbl:stat_results}\n\\end{table}\n```\n\nThe rendered table looks like this (may change depending on the class of the document).\n\n![Table](examples/table.png)\n\n## Creating a Local Developer Environment\n\nIf you want to modify the code of autorank, we recommend that you setup a local development environment with a \nvirtual environment as follows. \n\n```\ngit clone https://github.com/sherbold/autorank\ncd autorank\npython3 -m venv .\nsource bin/activate\npip install .\n```\n\nYou can run the tests to check if everything works. \n\n```\npython -m unittest\n```\n\n## Contributing\n\nContributions to Autorank are welcome.\n\n- Just file an [Issue](https://github.com/sherbold/autorank/issues) to ask questions, report bugs, or request new\nfeatures. \n- Pull requests via GitHub are also welcome.\n\nPotential contributions include more detailed report generation or the extension of Autorank to more types of data,\ne.g., independent populations, or paired populations with unequal sample sizes.   \n\n\n## License\n\nAutorank is published under the Apache 2.0 Licence.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/sherbold/autorank/zipball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sherbold/autorank",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "autorank",
    "package_url": "https://pypi.org/project/autorank/",
    "platform": null,
    "project_url": "https://pypi.org/project/autorank/",
    "project_urls": {
      "Download": "https://github.com/sherbold/autorank/zipball/master",
      "Homepage": "https://github.com/sherbold/autorank"
    },
    "release_url": "https://pypi.org/project/autorank/1.1.3/",
    "requires_dist": [
      "numpy",
      "pandas (>=0.25.0)",
      "statsmodels (>=0.10.0)",
      "scipy (>=1.5.0)",
      "matplotlib (>=3.1.3)",
      "baycomp (>=1.0.2)"
    ],
    "requires_python": "",
    "summary": "Automated ranking of populations in a repeated measures experiment, e.g., to rank different machine learning approaches tested on the same data.",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17307214,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24437ca3197baae4bf2a863bc36257d2698091c79fee0668e4e07f0d4ae2959d",
          "md5": "0dd7f6a6001ecd0b95f7c7fdb20a58c1",
          "sha256": "f78af165fd3b72177fe84ade4658c77130d9ec272524b02f19396cafddc9d6f8"
        },
        "downloads": -1,
        "filename": "autorank-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0dd7f6a6001ecd0b95f7c7fdb20a58c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10935,
        "upload_time": "2020-01-06T09:07:05",
        "upload_time_iso_8601": "2020-01-06T09:07:05.075940Z",
        "url": "https://files.pythonhosted.org/packages/24/43/7ca3197baae4bf2a863bc36257d2698091c79fee0668e4e07f0d4ae2959d/autorank-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ffa9a064749d4e9513fba70f63cd0d0b0cc4abaad514f125ee80bc27a54feaf",
          "md5": "337f537eb7ca9d8cdf9a964602d6c815",
          "sha256": "bfcecb64d1199dadcf9429ff064488064a5d30a4f3390b5f0d02789f774ee6bc"
        },
        "downloads": -1,
        "filename": "autorank-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "337f537eb7ca9d8cdf9a964602d6c815",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7254,
        "upload_time": "2020-01-06T09:07:07",
        "upload_time_iso_8601": "2020-01-06T09:07:07.366987Z",
        "url": "https://files.pythonhosted.org/packages/4f/fa/9a064749d4e9513fba70f63cd0d0b0cc4abaad514f125ee80bc27a54feaf/autorank-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea738bf0732e3dae47e2e64ad286b5ce9f7eb1cbee38cc88db2df997a79bebc5",
          "md5": "06c3d375b0d1910034ff2b77d142064f",
          "sha256": "4d5af9634f9e267714bc117716a662829e2f31dbed1f6731baa9df5a316761f9"
        },
        "downloads": -1,
        "filename": "autorank-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06c3d375b0d1910034ff2b77d142064f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15023,
        "upload_time": "2020-01-10T15:34:01",
        "upload_time_iso_8601": "2020-01-10T15:34:01.671268Z",
        "url": "https://files.pythonhosted.org/packages/ea/73/8bf0732e3dae47e2e64ad286b5ce9f7eb1cbee38cc88db2df997a79bebc5/autorank-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a588c4c193f6cb6dd661397e35087a9bb4d6c946ebb2e830f9e0820e4256b080",
          "md5": "c345d742979d011f1bafe57e48f3b7b0",
          "sha256": "13dcd2d0f91b06af91788b13e149b31be1619af9fa77673705a1834ffe35acd1"
        },
        "downloads": -1,
        "filename": "autorank-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c345d742979d011f1bafe57e48f3b7b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12007,
        "upload_time": "2020-01-10T15:34:03",
        "upload_time_iso_8601": "2020-01-10T15:34:03.055845Z",
        "url": "https://files.pythonhosted.org/packages/a5/88/c4c193f6cb6dd661397e35087a9bb4d6c946ebb2e830f9e0820e4256b080/autorank-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58a74bb7be33cd6a1f855b094a91d6a21903d58cba78736af239f9f17f5c1787",
          "md5": "56a51c3e49c53788b6c563384b1432f6",
          "sha256": "b06b28cf32fa0f38bf17a0a9fb27525e423839ec2ee0cad0189fa58c175e9b6c"
        },
        "downloads": -1,
        "filename": "autorank-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "56a51c3e49c53788b6c563384b1432f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21935,
        "upload_time": "2020-01-18T20:30:11",
        "upload_time_iso_8601": "2020-01-18T20:30:11.046428Z",
        "url": "https://files.pythonhosted.org/packages/58/a7/4bb7be33cd6a1f855b094a91d6a21903d58cba78736af239f9f17f5c1787/autorank-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc81015541f78758a66a536778f9e5b418c8ef72b2e62290fd0e3d8fb7f72a0e",
          "md5": "8aa85bb88a7de385e004af2b137f4857",
          "sha256": "14b844da53ebc137614a20728e4a6588fe9b5467ad2e6d02db2adaca1eb7998d"
        },
        "downloads": -1,
        "filename": "autorank-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8aa85bb88a7de385e004af2b137f4857",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16809,
        "upload_time": "2020-01-18T20:30:12",
        "upload_time_iso_8601": "2020-01-18T20:30:12.452114Z",
        "url": "https://files.pythonhosted.org/packages/cc/81/015541f78758a66a536778f9e5b418c8ef72b2e62290fd0e3d8fb7f72a0e/autorank-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c7edf050710c58dcbe35bd986260c02693e1d7aa1c28b0d559a7e986f6eff62",
          "md5": "442514b6b3b70fc73c39d93d8e79ec4e",
          "sha256": "89449725d9e88a403ddff1e5918af5b7f85db60b49c43a2cdb625d1c30fe8de4"
        },
        "downloads": -1,
        "filename": "autorank-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "442514b6b3b70fc73c39d93d8e79ec4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22826,
        "upload_time": "2020-01-20T08:43:52",
        "upload_time_iso_8601": "2020-01-20T08:43:52.917641Z",
        "url": "https://files.pythonhosted.org/packages/0c/7e/df050710c58dcbe35bd986260c02693e1d7aa1c28b0d559a7e986f6eff62/autorank-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1f80342ae3573548ea7856186c2e675758105202e0e00681e98f19ef990329e",
          "md5": "3d159b12735eb319a3621a1f3787835b",
          "sha256": "fb2cc453ca30e632dd048b7edb53443521792f1b6941f8fbd5c7b0ae12443238"
        },
        "downloads": -1,
        "filename": "autorank-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3d159b12735eb319a3621a1f3787835b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21603,
        "upload_time": "2020-01-20T08:43:54",
        "upload_time_iso_8601": "2020-01-20T08:43:54.062783Z",
        "url": "https://files.pythonhosted.org/packages/f1/f8/0342ae3573548ea7856186c2e675758105202e0e00681e98f19ef990329e/autorank-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dad0e07e979ce990b11b084d30f15782aaa55879e6d4cd02acb5eb55aa9fcee7",
          "md5": "f3a1ba585e2e6372a12ad602be0e37f7",
          "sha256": "d4b8e5baca8420436607cf51aea83091224f3e426c1bb8804acf39d5fd04dce3"
        },
        "downloads": -1,
        "filename": "autorank-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3a1ba585e2e6372a12ad602be0e37f7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23189,
        "upload_time": "2020-02-05T15:13:25",
        "upload_time_iso_8601": "2020-02-05T15:13:25.620283Z",
        "url": "https://files.pythonhosted.org/packages/da/d0/e07e979ce990b11b084d30f15782aaa55879e6d4cd02acb5eb55aa9fcee7/autorank-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66f4dcf291b476aafdb67c2e5bfd09d7cb9714b15da2bd8c9d6b70e59a043003",
          "md5": "a6682265567fa81abf4d3a0510dce07e",
          "sha256": "8aa5a1b922f26a8b3c2fc3621dbfa4914da9b26865c0ac8283cb493541c6a1b1"
        },
        "downloads": -1,
        "filename": "autorank-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a6682265567fa81abf4d3a0510dce07e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24719,
        "upload_time": "2020-02-05T15:13:26",
        "upload_time_iso_8601": "2020-02-05T15:13:26.665980Z",
        "url": "https://files.pythonhosted.org/packages/66/f4/dcf291b476aafdb67c2e5bfd09d7cb9714b15da2bd8c9d6b70e59a043003/autorank-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "416fa33f71c6fc26b874c30011bfd390d9345b8395f4824929f833728d831f9e",
          "md5": "4c35c02c2a3b4f2219a039688b08396f",
          "sha256": "6ae2627e8df4c942a5f81dd5f3d8f0084a90ce8311d92cfd76166848a7008b8f"
        },
        "downloads": -1,
        "filename": "autorank-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c35c02c2a3b4f2219a039688b08396f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23187,
        "upload_time": "2020-02-17T13:46:39",
        "upload_time_iso_8601": "2020-02-17T13:46:39.320623Z",
        "url": "https://files.pythonhosted.org/packages/41/6f/a33f71c6fc26b874c30011bfd390d9345b8395f4824929f833728d831f9e/autorank-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c83485cc97b008b92239f4af6b63ca9db912830974a30598a9f8bbd2bec813a3",
          "md5": "bcb638737594b66f1fc0f90f8befca1e",
          "sha256": "1c524dc8faf150cc19711ebb7d215085280cbe5ecfa96638faf0a889c1c89498"
        },
        "downloads": -1,
        "filename": "autorank-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bcb638737594b66f1fc0f90f8befca1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18081,
        "upload_time": "2020-02-17T13:46:40",
        "upload_time_iso_8601": "2020-02-17T13:46:40.349894Z",
        "url": "https://files.pythonhosted.org/packages/c8/34/85cc97b008b92239f4af6b63ca9db912830974a30598a9f8bbd2bec813a3/autorank-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "928b0104e5c37e5f5b2c569272d9bcae30efcbfdb3c0875937a251486cd98eb6",
          "md5": "2874ba88f53b90fa9ae1e66e74d276b6",
          "sha256": "e55416350762769780e4248b193972d28bd5a700622b3772630d6c5ec6fb2602"
        },
        "downloads": -1,
        "filename": "autorank-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2874ba88f53b90fa9ae1e66e74d276b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23750,
        "upload_time": "2020-04-14T13:52:46",
        "upload_time_iso_8601": "2020-04-14T13:52:46.351150Z",
        "url": "https://files.pythonhosted.org/packages/92/8b/0104e5c37e5f5b2c569272d9bcae30efcbfdb3c0875937a251486cd98eb6/autorank-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffc901911212ab84d4ab94ad5bc4b90b29bb932141784cca1432c95add03f4f1",
          "md5": "89d2b3e8ccae90169c4651395b6c6b9e",
          "sha256": "fa6611c26631e2ad9f136c4d56355b83da140aa705085d6277282c44e504a6cd"
        },
        "downloads": -1,
        "filename": "autorank-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "89d2b3e8ccae90169c4651395b6c6b9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18128,
        "upload_time": "2020-04-14T13:52:47",
        "upload_time_iso_8601": "2020-04-14T13:52:47.258299Z",
        "url": "https://files.pythonhosted.org/packages/ff/c9/01911212ab84d4ab94ad5bc4b90b29bb932141784cca1432c95add03f4f1/autorank-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0a43215175c7a04c0ffce54810c6f63ecb45fd74ddd2de9f0ec6dde9c4dc27d",
          "md5": "2cc0e2132c7a23c2cd27d5d6cb2810e1",
          "sha256": "8d102e8415cdb08684f0a6341147de9235ebd23005d0251d92d04d6e8d6fc76d"
        },
        "downloads": -1,
        "filename": "autorank-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cc0e2132c7a23c2cd27d5d6cb2810e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 32777,
        "upload_time": "2020-12-02T11:13:27",
        "upload_time_iso_8601": "2020-12-02T11:13:27.121472Z",
        "url": "https://files.pythonhosted.org/packages/d0/a4/3215175c7a04c0ffce54810c6f63ecb45fd74ddd2de9f0ec6dde9c4dc27d/autorank-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6da014d5e1f5a7eb6c566214747ede836fb74dab916a1c811ec0e004d3ebaa65",
          "md5": "b47ec3b4d6f4feac8b334c7b4b12de81",
          "sha256": "f9016a0763c278d8083e3504d5720ce12b9637bc3fe42d6ff79ff60c2f615ee4"
        },
        "downloads": -1,
        "filename": "autorank-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b47ec3b4d6f4feac8b334c7b4b12de81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34796,
        "upload_time": "2020-12-02T11:13:28",
        "upload_time_iso_8601": "2020-12-02T11:13:28.187605Z",
        "url": "https://files.pythonhosted.org/packages/6d/a0/14d5e1f5a7eb6c566214747ede836fb74dab916a1c811ec0e004d3ebaa65/autorank-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49caf694432eeec7db9ddc215890ee39078d167361dbb13ceff3e32e910d56b6",
          "md5": "2343be5dc0ee4d5884dd126b2f673dd5",
          "sha256": "0786004538f1f2f94e14b75e3a88d61c611852557797d8903bfa32d0476753f2"
        },
        "downloads": -1,
        "filename": "autorank-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2343be5dc0ee4d5884dd126b2f673dd5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 33051,
        "upload_time": "2021-01-28T14:35:16",
        "upload_time_iso_8601": "2021-01-28T14:35:16.338438Z",
        "url": "https://files.pythonhosted.org/packages/49/ca/f694432eeec7db9ddc215890ee39078d167361dbb13ceff3e32e910d56b6/autorank-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f1250adf8b0d1f6b154e17610a10910b69f79183a1576e4a97afe8e27c53abe",
          "md5": "d3a4f43a2dc4e53ad9f4aaa6586acc5d",
          "sha256": "03cd47acc5be7dd953a14cb92698644d94748bae3fbafeedb1bb5ac0429e9318"
        },
        "downloads": -1,
        "filename": "autorank-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d3a4f43a2dc4e53ad9f4aaa6586acc5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30735,
        "upload_time": "2021-01-28T14:35:17",
        "upload_time_iso_8601": "2021-01-28T14:35:17.249812Z",
        "url": "https://files.pythonhosted.org/packages/9f/12/50adf8b0d1f6b154e17610a10910b69f79183a1576e4a97afe8e27c53abe/autorank-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "178c7d91ec5e9ecdc788f0b380e8e755d650cf77b896841b8f73c8ab6d23c853",
          "md5": "cf4962d6ceb7c21b6f77613ce9df696f",
          "sha256": "7dd8bd3cb1a7583c3a04d4b4e6e18614d2a74ebe8f90266b033bbe1d085a2ff2"
        },
        "downloads": -1,
        "filename": "autorank-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf4962d6ceb7c21b6f77613ce9df696f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 33320,
        "upload_time": "2021-12-30T12:54:56",
        "upload_time_iso_8601": "2021-12-30T12:54:56.056753Z",
        "url": "https://files.pythonhosted.org/packages/17/8c/7d91ec5e9ecdc788f0b380e8e755d650cf77b896841b8f73c8ab6d23c853/autorank-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bc7435c3638a2e5c48e6d0293565f362269aca92aa9650ae01fd66ae8be96b0",
          "md5": "38623eb35bc0e5d190ef28ea75655a7c",
          "sha256": "1cdc5fac9f157f7823dc5230f8987def9896f5344273abb1392d5568df0ae5c3"
        },
        "downloads": -1,
        "filename": "autorank-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "38623eb35bc0e5d190ef28ea75655a7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33607,
        "upload_time": "2021-12-30T12:54:57",
        "upload_time_iso_8601": "2021-12-30T12:54:57.616086Z",
        "url": "https://files.pythonhosted.org/packages/7b/c7/435c3638a2e5c48e6d0293565f362269aca92aa9650ae01fd66ae8be96b0/autorank-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d98f207879e4a0a18ef7590da898c1667cf161d2a7d889f36e05cf3ad6b6f9cf",
          "md5": "a691630fef7a19c7c7b8a9ea60f99f14",
          "sha256": "617b061d71695dc55a04f12caf6578ab6f4e319b6e3cbb9fe5f95670e0d55524"
        },
        "downloads": -1,
        "filename": "autorank-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a691630fef7a19c7c7b8a9ea60f99f14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34155,
        "upload_time": "2023-03-15T17:50:02",
        "upload_time_iso_8601": "2023-03-15T17:50:02.838874Z",
        "url": "https://files.pythonhosted.org/packages/d9/8f/207879e4a0a18ef7590da898c1667cf161d2a7d889f36e05cf3ad6b6f9cf/autorank-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "838aa6a39ba0821a3ea5bb29baeba4aa32b7f7fb5eeedbc290865330522d33a3",
          "md5": "d61f2bdbedbb70bf37e522b5e5f55e8c",
          "sha256": "81b5b8bef4b1cbce518e15ad06a344f7ff8baa647eab9992fafccc2da53bf903"
        },
        "downloads": -1,
        "filename": "autorank-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d61f2bdbedbb70bf37e522b5e5f55e8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35204,
        "upload_time": "2023-03-15T17:50:04",
        "upload_time_iso_8601": "2023-03-15T17:50:04.124320Z",
        "url": "https://files.pythonhosted.org/packages/83/8a/a6a39ba0821a3ea5bb29baeba4aa32b7f7fb5eeedbc290865330522d33a3/autorank-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d98f207879e4a0a18ef7590da898c1667cf161d2a7d889f36e05cf3ad6b6f9cf",
        "md5": "a691630fef7a19c7c7b8a9ea60f99f14",
        "sha256": "617b061d71695dc55a04f12caf6578ab6f4e319b6e3cbb9fe5f95670e0d55524"
      },
      "downloads": -1,
      "filename": "autorank-1.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a691630fef7a19c7c7b8a9ea60f99f14",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 34155,
      "upload_time": "2023-03-15T17:50:02",
      "upload_time_iso_8601": "2023-03-15T17:50:02.838874Z",
      "url": "https://files.pythonhosted.org/packages/d9/8f/207879e4a0a18ef7590da898c1667cf161d2a7d889f36e05cf3ad6b6f9cf/autorank-1.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "838aa6a39ba0821a3ea5bb29baeba4aa32b7f7fb5eeedbc290865330522d33a3",
        "md5": "d61f2bdbedbb70bf37e522b5e5f55e8c",
        "sha256": "81b5b8bef4b1cbce518e15ad06a344f7ff8baa647eab9992fafccc2da53bf903"
      },
      "downloads": -1,
      "filename": "autorank-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d61f2bdbedbb70bf37e522b5e5f55e8c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 35204,
      "upload_time": "2023-03-15T17:50:04",
      "upload_time_iso_8601": "2023-03-15T17:50:04.124320Z",
      "url": "https://files.pythonhosted.org/packages/83/8a/a6a39ba0821a3ea5bb29baeba4aa32b7f7fb5eeedbc290865330522d33a3/autorank-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}