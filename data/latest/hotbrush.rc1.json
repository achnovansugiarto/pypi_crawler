{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Ôªø\n## email_tools\nTools and utilities related to email\n\n### send_email\nSend an email.\n\n- `to`: str or list; specify email addresses for the To line\n- `cc`: str or list; specify email addresses for the Cc line\n- `bcc`: str or list; specify email addresses for the Bcc line\n- `subject`: str; specify the email subject line. Can be altered with [string_tools](string_tools.md)\n- `body_txt`: str; specify the simple text body for the email\n    - If body_txt is specified and `body_html` is NOT specified, a simple (MIMEText) email will be sent\n- `body_html`: str; specify the body for the email, incluing complex layout and formatting\n    - If body_html is specified, a complex (MIMEMultipart) email will be sent. A simplified body (`body_txt`) can ALSO be specified and will be encoded along with the complex email body\n- `email_account`: str; originating email account\n- `from_description`: str or None; text description of the originating email account. Example would be 'Notifications'. Can be altered with [string_tools](string_tools.md)\n- `email_password`: str; password for sending email account\n- `smtp_domain`: str; smtp domain for sending email account\n- `smtp_port`: int; port for smtp domain sending email\n\n```py\nfrom hotbrush.email_tools import send_email\n\n# Simple text\nbody_txt = f\"Head's up, your {device} battery is at {pct}!!\"\n# HTML body\nbody_html = \"<h1>Head's up, your {device} battery is at <b>{pct}</b>!!</h1>\"\n\nsend_email(\n    email_account='sendaccount@gmail.com',\n    from_description='Automated alerts',\n    email_password='abc123jkjk',\n    \n    to='my_account@gmail.com',\n    subject=f'Your {device} battery is at {pct}',\n    body_txt=body_txt,\n    body_html=body_html,\n)\n\n\n# Make it a little more fun with `string_tools`\nfrom hotbrush.string_tools import to_preheader_text_html, to_styled_unicode\n\n# Custom 'preview' text, different from message body\npreheader = to_preheader_text_html('One simple trick for understanding devices')\n\n# Change from_description and subject line 'font' by altering characters used\nfrom_description = to_styled_unicode('Automated alerts', 'math bold script')\nsubject = '‚ö†Ô∏èüö®ü•µ ' + to_styled_unicode(f'Your {device} battery is at {pct}')\n\nsend_email(\n    email_account='sendaccount@gmail.com',\n    from_description=from_description,\n    email_password='abc123jkjk',\n    \n    to='my_account@gmail.com',\n    subject=subject,\n    body_txt=body_txt,\n    body_html=body_html,\n)\n\n\n```\n\n## string_tools\nTools and utilities related to manipulating strings\n\n### to_preheader_text_html\nCreate an HTML string for use in an email body to customize the email preview text when viewing an email in an inbox. Ref this [preview text article](https://www.litmus.com/blog/the-little-known-preview-text-hack-you-may-want-to-use-in-every-email/).\n    \n- `preheader_text`: str; string (including unicode or emoji) to be added to the HTML\n- `tag_type`: str; 'span' (default) or 'div'. Adapted from a [MailChimp method](https://stackoverflow.com/questions/45807788/preheader-text-in-html-email/51218077#51218077)\n- `target_text_len`: int; length of text to fill\n    - Some email previews will fill in body text to the preview if the preheader text does not completely fill the space\n- `space_filler`: str; characters to fill difference between actual preheader text and the target_text_len.\n\nReview the [`send_email`](email_tools.md#send_email) documentation for more detail.\n\n```py\nfrom hotbrush.string_tools import to_preheader_text_html\n\npreheader_text = 'Oh man you really have to read this'\n\npreheader = to_preheader_text_html(preheader_text)\n\n# Send an email\nfrom hotbrush.email_tools import send_email\n...\n\nbody_html = f'{preheader}<h1><b>OTHER THINGS</b></h1>'\n...\n# See the email_tools#send_email documentation for more detail\n\n```\n\n### to_styled_unicode\nReplace normal ASCII characters with styled Unicode characters. Direct use-case is for email sender and subject line modification. If no transformed character is found, the original character is returned.\n\n- `characters`: str or list; convert plain text (letters, sometimes numbers, sometimes punctuation) to obscure characters from Unicode. Direct use-case is for replacing characters. Directly from [Unicode Text Converter](https://qaz.wtf/u/convert.cgi)\n- `transform`: str; name of Unicode transform to convert characters to 'print' to display the name and available characters for each transform\n\n```py\nfrom hotbrush.string_tools import to_styled_unicode\n\ncustom_subject = to_styled_unicode('ü§îü§î Hey HEY', 'math bold italic')\ncustom_subject += ', '\ncustom_subject += to_styled_unicode('check out my sweet ', 'math bold')\ncustom_subject += to_styled_unicode('subject line')\n\nprint(custom_subject)\nü§îü§î ùëØùíÜùíö ùëØùë¨ùíÄ, ùêúùê°ùêûùêúùê§ ùê®ùêÆùê≠ ùê¶ùê≤ ùê¨ùê∞ùêûùêûùê≠ üÜÇüÜÑüÖ±üÖπüÖ¥üÖ≤üÜÉ üÖªüÖ∏üÖΩüÖ¥\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hotbrush",
    "package_url": "https://pypi.org/project/hotbrush/",
    "platform": null,
    "project_url": "https://pypi.org/project/hotbrush/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/hotbrush/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A collection of tools",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17338819,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "217d1d8e931eb43e2c527e0961674bb94d7dce20d057f008799d9c9206f407e4",
          "md5": "2c7c46bf9fb4544a1d30f317b88b2b61",
          "sha256": "213977cb4dd1d5da08bd0cf67c6b50cbc753c964cc6e090a078dd623736e698e"
        },
        "downloads": -1,
        "filename": "hotbrush-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c7c46bf9fb4544a1d30f317b88b2b61",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8408,
        "upload_time": "2023-03-17T19:55:51",
        "upload_time_iso_8601": "2023-03-17T19:55:51.112165Z",
        "url": "https://files.pythonhosted.org/packages/21/7d/1d8e931eb43e2c527e0961674bb94d7dce20d057f008799d9c9206f407e4/hotbrush-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "823ebf50d1f29c33afd57ea51d35f11695b411bfe4763a98b9f1e805ec8d762e",
          "md5": "38b2a2a306a2429d32409df0afa9f0cd",
          "sha256": "9c7e774d2cf2b07887f21eb06014e80cc7f296390a44d0adfe9eb1850dc3f6d7"
        },
        "downloads": -1,
        "filename": "hotbrush-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "38b2a2a306a2429d32409df0afa9f0cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7397,
        "upload_time": "2023-03-17T19:55:52",
        "upload_time_iso_8601": "2023-03-17T19:55:52.256904Z",
        "url": "https://files.pythonhosted.org/packages/82/3e/bf50d1f29c33afd57ea51d35f11695b411bfe4763a98b9f1e805ec8d762e/hotbrush-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "217d1d8e931eb43e2c527e0961674bb94d7dce20d057f008799d9c9206f407e4",
        "md5": "2c7c46bf9fb4544a1d30f317b88b2b61",
        "sha256": "213977cb4dd1d5da08bd0cf67c6b50cbc753c964cc6e090a078dd623736e698e"
      },
      "downloads": -1,
      "filename": "hotbrush-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2c7c46bf9fb4544a1d30f317b88b2b61",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8408,
      "upload_time": "2023-03-17T19:55:51",
      "upload_time_iso_8601": "2023-03-17T19:55:51.112165Z",
      "url": "https://files.pythonhosted.org/packages/21/7d/1d8e931eb43e2c527e0961674bb94d7dce20d057f008799d9c9206f407e4/hotbrush-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "823ebf50d1f29c33afd57ea51d35f11695b411bfe4763a98b9f1e805ec8d762e",
        "md5": "38b2a2a306a2429d32409df0afa9f0cd",
        "sha256": "9c7e774d2cf2b07887f21eb06014e80cc7f296390a44d0adfe9eb1850dc3f6d7"
      },
      "downloads": -1,
      "filename": "hotbrush-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "38b2a2a306a2429d32409df0afa9f0cd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7397,
      "upload_time": "2023-03-17T19:55:52",
      "upload_time_iso_8601": "2023-03-17T19:55:52.256904Z",
      "url": "https://files.pythonhosted.org/packages/82/3e/bf50d1f29c33afd57ea51d35f11695b411bfe4763a98b9f1e805ec8d762e/hotbrush-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}