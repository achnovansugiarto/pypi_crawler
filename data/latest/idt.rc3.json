{
  "info": {
    "author": "Deliton Junior",
    "author_email": "deliton.m@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# IDT - Image Dataset Tool\n\n## Version 0.0.6 beta\n\n![idt-logo](https://user-images.githubusercontent.com/47995046/96390775-8e92a180-118c-11eb-9b28-25ad96d13000.png)\n\n\n## Description\n\nThe image dataset tool (IDT) is a CLI app developed to make it easier and faster to create image datasets to be used for deep learning. The tool achieves this by scraping images from several search engines such as duckgo, bing and deviantart. IDT also optimizes the image dataset, although this feature is optional, the user can downscale and compress the images for optimal file size and dimensions. A sample dataset created using **idt** that contains  a total amount of 23.688 image files weights only 559,2 megabytes.\n\n## Installing\n\nYou can install it via pip or cloning this repository.\n\n```console\nuser@admin:~$ pip3 install idt\n\n```\n\n**OR**\n\n\n```console\nuser@admin:~$ git clone https://github.com/deliton/idt.git && cd idt\nuser@admin:~/idt$ sudo python3 setup.py install\n\n```\n\n\n## Getting Started\n\nThe quickest way to get started with IDT is running the simple \"run\" command. Just write in your favorite console something like:\n\n```console\nuser@admin:~$ idt run -i apples \n```\n\nThis will quickly download 50 images of apples. By default it uses the duckgo search engine to do so. \nThe run command accepts the following options:\n\n| Option | Description |\n| ----------- | ----------- |\n| **-i** or **--input** | the keyword to find the desired images. | \n| **-s** or **--size** | the amount of images to be downloaded. |\n| **-e** or **--engine** | the desired search engine (options: duckgo, bing, bing_api and flickr_api) |\n| **-rm** or **--resize-method** | choose a resize method of images. (options: longer_side, shorter_side and smartcrop) |\n| **-is** or **--image-size** | option to set the desired image size ratio. default=512 |\n| **-ak** or **--api-key** | If you are using a search engine that requires an API key, this option is required |\n\n\n## Usage\n\nIDT requires a config file that tells it how your dataset should be organized. You can create it using the following command:\n\n```console\nuser@admin:~$ idt init\n```\n\nThis command will trigger the config file creator and will ask for the desired dataset parameters. In this example let's create a dataset containing images of your favorite cars. The first parameters this command will ask is what name should your dataset have? In this example, let's name our dataset \"My favorite cars\"\n\n```console\nInsert a name  for your dataset: : My favorite cars\n```\n\nThen the tool will ask how many samples per search are required to mount your dataset. In order to build a good dataset for deep learning, many images are required and since we're using a search engine to scrape images, many searches with different keywords are required to mount a good sized dataset. This value will correspond to how many images should be downloaded at every search. In this example we need a dataset with 250 images in each class, and we'll use 5 keywords to mount each class. So if we type the number 50 here, IDT will download 50 images of every keyword provided. If we provide 5 keywords we should get the required 250 images.\n\n```console\nHow many samples per search will be necessary?  : 50\n```\n\nThe tool will now ask for and image size ratio. Since using large images to train neural networks is not a viable thing, we can optionally choose one of the following image size ratios and scale down our images to that size. In this example, we'll go for 512x512, although 256x256 would be an even better option for this task.\n\n```console\nChoose images resolution:\n\n[1] 512 pixels / 512 pixels (recommended)\n[2] 1024 pixels / 1024 pixels\n[3] 256 pixels / 256 pixels\n[4] 128 pixels / 128 pixels\n[5] Keep original image size\n\nps: note that the aspect ratio of the image will not be changed, \nso possibly the images received will have slightly different size\n\nWhat is the desired image size ratio: 1\n```\n\nAnd then choose \"longer_side\" for resize method.\n\n```console\n[1] Resize image based on longer side\n[2] Resize image based on shorter side\n[3] Smartcrop\n\nps: note that the aspect ratio of the image will not be changed,\nso possibly the images received will have slightly different size\n\nDesired Image resize method: : longer_side\n\n```\n\nNow you must choose how many classes/folders your dataset should have. In this example, this part can be very personal, but my favorite cars are: Chevrolet Impala, Range Rover Evoque, Tesla Model X and (why not) AvtoVAZ Lada. So in this case we have 4 classes, one for each favorite.\n\n```console\nHow many image classes are required? : 4\n```\n\nAfterwards, you'll be asked to choose between one of the search engines available. In this example, we'll use DuckGO to search images for us.\n\n```console\nChoose a search engine:\n\n[1] Duck GO (recommended)\n[2] Bing\n[3] Bing API \n[4] Flickr API\n\nSelect option:: 1\n```\n\nNow we have to do some repetitive form filling. We must name each class and all the keywords that will be used to find the images. Note that this part can be later changed by your own code, to generate more classes and keywords.\n\n```console\nClass 1 name: : Chevrolet Impala\n```\n\nAfter typing the first class name, we'll be asked to provide all the keywords to find the dataset. Remember that we told the program to download 50 images of each keyword so we must provide 5 keywords in this case to get all 250 images. Each keyword MUST be separated by commas(,)\n\n```console\nIn order to achieve better results, choose several keywords that will\nbe provided to the search engine to find your class in different settings.\n\nExample: \n\nClass Name: Pineapple\nkeywords: pineapple, pineapple fruit, ananas, abacaxi, pineapple drawing\n\nType in all keywords used to find your desired class, separated by commas: Chevrolet Impala 1967 car photos,\nchevrolet impala on the road, chevrolet impala vintage car, chevrolet impala convertible 1961, chevrolet impala 1964 lowrider\n\n```\n\nThen repeat the process of filling class name and its keywords until you fill all the 4 classes required.\n\n```console\nDataset YAML file has been created successfully. Now run idt build to mount your dataset!\n```\n\nYour dataset configuration file has been created. Now just rust the following command and see the magic happen:\n\n```console\nuser@admin:~$ idt build\n```\n\nAnd wait while the dataset is being mounted:\n\n```console\nCreating Chevrolet Impala class\nDownloading Chevrolet Impala 1967 car photos  [#########################-----------]   72%  00:00:12\n\n```\n\nAt the end, all your images will be available in a folder with the dataset name. Also, a csv file with the dataset stats are also included in the dataset's root folder.\n\n![idt-results](https://user-images.githubusercontent.com/47995046/93012667-808fa680-f578-11ea-82fc-7ebcb8ce3c41.png)\n\n\n## Split image dataset for Deep Learning\n\nSince deep learning often requires you to split your dataset into a subset of training/validation folders, this project can also do this for you! Just run:\n\n```console\nuser@admin:~$ idt split\n```\n\nNow you must choose a train/valid proportion. In this example I've chosen that 70% of the images will be reserved for training, while the rest will be reserved for validation: \n\n```console\nChoose the desired proportion of images of each class to be distributed in train/valid folders.\nWhat percentage of images should be distributed towards training? \n(0-100): 70\n\n70 percent of the images will be moved to a train folder, while 30 percent of the remaining images\nwill be stored in a validation folder.\nIs that ok? [Y/n]: y\n```\n\nAnd that's it! The dataset-split should now be found with the corresponding train/valid subdirectories.\n\n## Issues\n\nThis project is being developed in my spare time and it still needs a lot of effort to be free of bugs. Pull requests and contributors are really appreciated, feel free to contribute in any way you can!\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/deliton/idt/archive/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/deliton/idt",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "idt",
    "package_url": "https://pypi.org/project/idt/",
    "platform": "",
    "project_url": "https://pypi.org/project/idt/",
    "project_urls": {
      "Download": "https://github.com/deliton/idt/archive/master.zip",
      "Homepage": "https://github.com/deliton/idt"
    },
    "release_url": "https://pypi.org/project/idt/0.0.6/",
    "requires_dist": [
      "Pillow (==7.0.0)",
      "PyYAML (==5.3.1)",
      "click (==7.1.2)",
      "numpy (==1.19.1)",
      "requests (==2.22.0)",
      "rich (==6.1.2)"
    ],
    "requires_python": ">=2.7",
    "summary": "A cli tool that quickly generates ready-to-use image datasets",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8442749,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af9c1f71ef89a52f5dd0a8afb32272ca1f37ccec9919d365972662313744ce75",
          "md5": "78f8b61e160823722986bdd89bd434a1",
          "sha256": "59fa4061eccc406db9ade38f5118653119f08bd0d6cd945f0c100703f330d906"
        },
        "downloads": -1,
        "filename": "idt-0.0.3-py3.8.egg",
        "has_sig": false,
        "md5_digest": "78f8b61e160823722986bdd89bd434a1",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": ">=2.7",
        "size": 30596,
        "upload_time": "2020-09-13T07:25:29",
        "upload_time_iso_8601": "2020-09-13T07:25:29.907782Z",
        "url": "https://files.pythonhosted.org/packages/af/9c/1f71ef89a52f5dd0a8afb32272ca1f37ccec9919d365972662313744ce75/idt-0.0.3-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1afbad8e9ed4c16745aaf9dea4b6547812cf92776bb4c10c5057021e97002c02",
          "md5": "13c0aee22a067e97df24d57fc61a4a6f",
          "sha256": "2d24d920066f4dba4e4d01bad55a8f598859065fc2cfb2b8eac1825f15984778"
        },
        "downloads": -1,
        "filename": "idt-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13c0aee22a067e97df24d57fc61a4a6f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 16396,
        "upload_time": "2020-09-13T04:18:58",
        "upload_time_iso_8601": "2020-09-13T04:18:58.072131Z",
        "url": "https://files.pythonhosted.org/packages/1a/fb/ad8e9ed4c16745aaf9dea4b6547812cf92776bb4c10c5057021e97002c02/idt-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53fa0ad2942bb2ea332cf3f201d864cd854ab569535321a7a6866a1c7b459579",
          "md5": "d02fca3cde8cb4f56019aeb9a9cebac5",
          "sha256": "c7df7cf529b013fe096dd18723255105ec8bad449f8967613a9505e06475258a"
        },
        "downloads": -1,
        "filename": "idt-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d02fca3cde8cb4f56019aeb9a9cebac5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 15188,
        "upload_time": "2020-09-13T04:19:01",
        "upload_time_iso_8601": "2020-09-13T04:19:01.386627Z",
        "url": "https://files.pythonhosted.org/packages/53/fa/0ad2942bb2ea332cf3f201d864cd854ab569535321a7a6866a1c7b459579/idt-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca29e5cda2b34d7bad69c7e2af94707f544a00577cbf99698bcc945cca94aa47",
          "md5": "5a41b1fd0bb89f2d86b9e003e20e1c69",
          "sha256": "684a0950168cef0548ec1926f17bac15b03946efe9e075b9d876c6b2b3f13c2c"
        },
        "downloads": -1,
        "filename": "idt-0.0.4-py3.8.egg",
        "has_sig": false,
        "md5_digest": "5a41b1fd0bb89f2d86b9e003e20e1c69",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": ">=2.7",
        "size": 30476,
        "upload_time": "2020-09-13T07:25:31",
        "upload_time_iso_8601": "2020-09-13T07:25:31.515709Z",
        "url": "https://files.pythonhosted.org/packages/ca/29/e5cda2b34d7bad69c7e2af94707f544a00577cbf99698bcc945cca94aa47/idt-0.0.4-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17917bad5b7a46c0cd6334a02f7d49469b00b9a94340e66cac14b71a0fd15cf5",
          "md5": "bdc5ce94fa8b360cab66ff6da6b88a47",
          "sha256": "a4e1c3f2c57c89f723cb6430480787086d98cc2e11fa3e7778944aea999694ac"
        },
        "downloads": -1,
        "filename": "idt-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bdc5ce94fa8b360cab66ff6da6b88a47",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 16287,
        "upload_time": "2020-09-13T07:25:28",
        "upload_time_iso_8601": "2020-09-13T07:25:28.181081Z",
        "url": "https://files.pythonhosted.org/packages/17/91/7bad5b7a46c0cd6334a02f7d49469b00b9a94340e66cac14b71a0fd15cf5/idt-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "227131b87d4cae43662401b75cc9582c54a23f213a2ef8d35c7053899b2e9948",
          "md5": "7c255c9946f239bf1833878c30ef5d5e",
          "sha256": "437b85d25bc0877c609bf82b530957f24ae199079e0f0fb8a097ee579b231a45"
        },
        "downloads": -1,
        "filename": "idt-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7c255c9946f239bf1833878c30ef5d5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 14976,
        "upload_time": "2020-09-13T07:25:32",
        "upload_time_iso_8601": "2020-09-13T07:25:32.988443Z",
        "url": "https://files.pythonhosted.org/packages/22/71/31b87d4cae43662401b75cc9582c54a23f213a2ef8d35c7053899b2e9948/idt-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fad8049807bb346819c07660fdbdeccff624388495a424d2d4519b23cce79e42",
          "md5": "12d5ed866fb56dfdf9da20a71d607df1",
          "sha256": "c83709a29d924501b77babe527fa3a4d40393e1ff334bfc0088a4ff09166b844"
        },
        "downloads": -1,
        "filename": "idt-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12d5ed866fb56dfdf9da20a71d607df1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 21808,
        "upload_time": "2020-10-19T01:24:06",
        "upload_time_iso_8601": "2020-10-19T01:24:06.482574Z",
        "url": "https://files.pythonhosted.org/packages/fa/d8/049807bb346819c07660fdbdeccff624388495a424d2d4519b23cce79e42/idt-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3f70c6f6947d9f65e6d98006b741e8763e3947dd5566277a5423b445e5e64f6",
          "md5": "eb23daa1b00764a505331480a6b04935",
          "sha256": "e94bff55f3e764fcbea93271732f1abfaf4096c195582e81bcd6edcd13d6c9c5"
        },
        "downloads": -1,
        "filename": "idt-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "eb23daa1b00764a505331480a6b04935",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 19331,
        "upload_time": "2020-10-19T01:24:08",
        "upload_time_iso_8601": "2020-10-19T01:24:08.172924Z",
        "url": "https://files.pythonhosted.org/packages/a3/f7/0c6f6947d9f65e6d98006b741e8763e3947dd5566277a5423b445e5e64f6/idt-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fad8049807bb346819c07660fdbdeccff624388495a424d2d4519b23cce79e42",
        "md5": "12d5ed866fb56dfdf9da20a71d607df1",
        "sha256": "c83709a29d924501b77babe527fa3a4d40393e1ff334bfc0088a4ff09166b844"
      },
      "downloads": -1,
      "filename": "idt-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12d5ed866fb56dfdf9da20a71d607df1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 21808,
      "upload_time": "2020-10-19T01:24:06",
      "upload_time_iso_8601": "2020-10-19T01:24:06.482574Z",
      "url": "https://files.pythonhosted.org/packages/fa/d8/049807bb346819c07660fdbdeccff624388495a424d2d4519b23cce79e42/idt-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3f70c6f6947d9f65e6d98006b741e8763e3947dd5566277a5423b445e5e64f6",
        "md5": "eb23daa1b00764a505331480a6b04935",
        "sha256": "e94bff55f3e764fcbea93271732f1abfaf4096c195582e81bcd6edcd13d6c9c5"
      },
      "downloads": -1,
      "filename": "idt-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "eb23daa1b00764a505331480a6b04935",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 19331,
      "upload_time": "2020-10-19T01:24:08",
      "upload_time_iso_8601": "2020-10-19T01:24:08.172924Z",
      "url": "https://files.pythonhosted.org/packages/a3/f7/0c6f6947d9f65e6d98006b741e8763e3947dd5566277a5423b445e5e64f6/idt-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}