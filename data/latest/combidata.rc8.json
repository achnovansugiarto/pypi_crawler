{
  "info": {
    "author": "Kuklikov Maxim (Warrfie)",
    "author_email": "\"MaximKuklikov(Warrfie)\" <warrfie@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Quality Assurance"
    ],
    "description": "[![PyPi Package Version](https://img.shields.io/pypi/v/combidata.svg)](https://pypi.python.org/pypi/combidata)\r\n[![Supported Python versions](https://img.shields.io/pypi/pyversions/combidata.svg)](https://pypi.python.org/pypi/combidata)\r\n[![PyPi status](https://img.shields.io/pypi/status/combidata.svg?style=flat-square)](https://pypi.python.org/pypi/combidata)\r\n\r\n# <p align=\"center\">Combidata\r\n\r\n<p align=\"center\">A simple and light package for QA development which can generate random data from given cases.</p>\r\nThe main mechanics of the library is DataGenerator instance consume test flags and dictionary\r\nwith all cases, form and workflow. Creates Combination instances from possible cases. \r\nVia run function combination processes all steps from workflow.\r\n\r\n###<p align=\"center\">Structure of input library\r\n\r\n```python\r\nlibrary = {\r\n            \"cases\": {},\r\n            \"workflow\": (ST_COMBINE, ST_GENERATE, ST_FORM),\r\n            \"tools\": {},\r\n            \"template\": {}\r\n}\r\n```\r\n\r\nKey \"cases\" holds only lib instance with all your cases\r\nKey \"workflow\" holds list or tuple with processes\r\nKey \"tools\" holds dictionary with items which can be used in processes\r\nKey \"template\" holds a template for export result\r\n\r\n###<p align=\"center\">Cases\r\n\r\nCases structure hold fields names as keys and every field name holds field cases codes as a keys\r\nand every field cases codes holds case structure. \r\nI know, very complicate, but example will help you:\r\n\r\n```python\r\nlibrary[\"cases\"][\"NAME\"] = {\r\n        \"T\": {\r\n            \"gen_func\": re_generate,\r\n            \"value\": r\"[a-zA-Z]{50}\",\r\n            \"name\": \"Standart NAME check\"\r\n        },\r\n        \"F\": {\r\n            \"value\": \"12345\",\r\n            \"type\": \"error\",\r\n            \"name\": \"Check NAME with error\"\r\n        },\r\n        \"N\": {\r\n            \"value\": None,\r\n            \"requirements\": {\"CODE\": \"T\"},\r\n            \"is_presented\": False,\r\n            \"name\": \"Check NAME for not necessary field\"\r\n        }}\r\nlibrary[\"cases\"][\"CODE\"] = {\r\n        \"T\": {\r\n            \"gen_func\": code_generator,\r\n            \"value\": \"token\",\r\n            \"options\": {\"combination\": \"combination\", \"example_token\": \"wa69sf\"},\r\n            \"name\": \"Standart CODE check\"\r\n        },\r\n        \"N\": {\r\n            \"value\": None,\r\n            \"is_presented\": False,\r\n            \"name\": \"Check CODE for not necessary field\"\r\n        }\r\n}\r\n```\r\nLet's know about keys in case structure:\r\n\"name\" - (string) necessary value and must be uniq. If that case is major - all combination unit will hand it\r\n\"gen_func\" - (function) holds function for generation by default takes only one argument\r\n\"value\" - (anything) holds case value it will be first argument of gen_func if gen_func in case \r\n\"options\" - (dictionary) holds functions nd another stuff which will unpack into gen_func. \"combination\" is reserved string\r\n\"is_presented\" - (boolean) holds flag for export function. It will be not exported if False.\r\n\"requirements\" - (dictionary) holds possible modes of another fields\r\n\"type\" - (string) Generator will choose that case like main case when you will run test of that type\r\n\r\n###<p align=\"center\">Workflow\r\n\r\nHolds tuple of processes or list of processes. When you will run combination or generator it will run all processes in tuple\r\nAlso yoy can use dict for hold workflow for tests with different types. \"standard\" is reserved key for standard workflow\r\n\r\n```python\r\n\"workflow\": (ST_COMBINE, ST_GENERATE, ST_FORM)\r\nor \r\n\"workflow\": [(ST_COMBINE, ST_GENERATE, ST_FORM), (ANOTHER_STEP)]\r\nor \r\n\"workflow\": {\r\n    \"standard\": (ST_COMBINE, ST_GENERATE, ST_FORM),\r\n    \"error\": [(ST_COMBINE, ST_GENERATE, ST_FORM), (ANOTHER_STEP)]\r\n}\r\n```\r\n\r\ndon't forget use another run if you use list workflow\r\n\r\nabout processes, feed Process instance with process name and process function\r\n\r\n```python\r\nST_COMBINE = Process(\"ST_COMBINE\", combine)\r\n```\r\nProcess must return True when it over or Generator will run it infinitely\r\nyou can stop all workflow just put in combination.step_done reserved string \"STOP\"\r\n```python\r\ncombination.step_done = \"STOP\"\r\n```\r\n\r\n###<p align=\"center\">Tools\r\nJust warehouse for items, funcs or other stuff that you can use in steps or generators via .tools\r\n```python\r\n\"tools\": {\r\n    \"UTILS\": utilites,\r\n    \"TOKEN\": token_generator\r\n}\r\n\r\n#....\r\n\r\nblock = combination.tools[\"UTILS\"].get_block()\r\n\r\n```\r\n\r\n###<p align=\"center\">Template\r\nHolds template of generation result. All case codes will be reserved and will be replaced in template\r\nlike that\r\n```python\r\n\"template\": {\r\n    \"NAME\": \"NAME\",\r\n    \"code\": \"CODE\"\r\n}\r\n```\r\nResult will look like \r\n\r\n    {\"NAME\": \"azRkdSS\", \"code\": \"12GG233\"}\r\n\r\n###<p align=\"center\">Example\r\n\r\n```python\r\nimport pytest\r\n\r\nfrom combidata import ST_COMBINE, ST_GENERATE, ST_FORM, DataGenerator\r\nimport re_generate\r\n\r\nre_generate = re_generate.get_str\r\ndef code_generator(value, combination, example_token):\r\n    # just for test\r\n    return \"12GG233\"\r\n\r\nlibrary = {\r\n    \"cases\": {},\r\n    \"workflow\": (ST_COMBINE, ST_GENERATE, ST_FORM),\r\n    \"tools\": {},\r\n    \"template\": {\r\n        \"NAME\": \"NAME\",\r\n        \"code\": \"CODE\"\r\n    }\r\n}\r\nlibrary[\"cases\"][\"NAME\"] = {\r\n    \"T\": {\r\n        \"gen_func\": re_generate,\r\n        \"value\": r\"[a-zA-Z]{50}\",\r\n        \"name\": \"Standart NAME check\"\r\n    },\r\n    \"F\": {\r\n        \"value\": \"12345\",\r\n        \"type\": \"error\",\r\n        \"name\": \"Check NAME with error\"\r\n    },\r\n    \"N\": {\r\n        \"value\": None,\r\n        \"requirements\": {\"CODE\": \"T\"},\r\n        \"is_presented\": False,\r\n        \"name\": \"Check NAME for not necessary field\"\r\n    }}\r\nlibrary[\"cases\"][\"CODE\"] = {\r\n    \"T\": {\r\n        \"gen_func\": code_generator,\r\n        \"value\": \"token\",\r\n        \"options\": {\"combination\": \"combination\", \"example_token\": \"wa69sf\"},\r\n        \"name\": \"Standart CODE check\"\r\n    },\r\n    \"N\": {\r\n        \"value\": None,\r\n        \"is_presented\": False,\r\n        \"name\": \"Check CODE for not necessary field\"\r\n    }\r\n}\r\n\r\ngenerator = DataGenerator(library)\r\ngenerator.run()\r\n@pytest.mark.parametrize(\"combination_name\", generator.combinations.keys())\r\ndef test(combination_name):\r\n    combination = generator.combinations[combination_name]\r\n    print()\r\n    assert combination.test_seed != {'CODE': 'N', 'NAME': 'N'}\r\n    print(combination.test_seed)\r\n    print()\r\n    print(combination.generated_data)\r\n```\r\n\r\nIt will print in console\r\n```\r\nPASSED                      [ 25%]\r\n{'NAME': 'T', 'CODE': 'T'}\r\n\r\n{'NAME': 'OexmkFKlAyJkNqNHLnoGkcCgNmGkCVkAfHvOWeNfwEFeyhCjAt', 'CODE': '12GG233'}\r\nPASSED       [ 50%]\r\n{'NAME': 'N', 'CODE': 'T'}\r\n\r\n{'CODE': '12GG233'}\r\nPASSED                      [ 75%]\r\n{'CODE': 'T', 'NAME': 'N'}\r\n\r\n{'CODE': '12GG233'}\r\nPASSED       [100%]\r\n{'CODE': 'N', 'NAME': 'T'}\r\n\r\n{'NAME': 'BlvUbOLHjWlqXkSHqkeGumnnhIbrPvuhkxhddTrMVAwaolyCwY'}\r\n```\r\nAnd never failed because I made requirements to \"NAME\" - \"N\" field \r\n\r\nI added it in project \"tests\" directory\r\n\r\n## Getting started\r\n\r\nThis package is tested with Python 3.9-3.11 and Pypy 3.\r\nThere are two ways to install the library:\r\n\r\n* Installation using pip (a Python package manager):\r\n\r\n```\r\npip install combidata\r\n```\r\n* Installation from source (requires git):\r\n\r\n```\r\ngit clone https://github.com/Warrfie/combidata\r\ncd combidata\r\npython setup.py install\r\n```\r\nor:\r\n```\r\npip install git+https://github.com/Warrfie/combidata\r\n```\r\n\r\nIt is generally recommended to use the first option.\r\n\r\n*Package is still under development, and it has regular updates, do not forget to update it regularly by calling*\r\n```\r\npip install combidata --upgrade\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Warrfie/combidata",
    "keywords": "QA,SET,random data generation,testing API,testing,autotesting",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "combidata",
    "package_url": "https://pypi.org/project/combidata/",
    "platform": null,
    "project_url": "https://pypi.org/project/combidata/",
    "project_urls": {
      "Homepage": "https://github.com/Warrfie/combidata"
    },
    "release_url": "https://pypi.org/project/combidata/0.1.7/",
    "requires_dist": null,
    "requires_python": ">=3.10, <4",
    "summary": "Package for random data generation, combination and data prepare for tests",
    "version": "0.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17132651,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3728826663c860783f2b64ca0aa4e1991cfce628988d646bd32ae9af341f9040",
          "md5": "d170c69136a5e1b3a32282ccb2e0e030",
          "sha256": "2816d105dce9948acbbdd579388a45d701cb15d7cc9699095dd8de7fa1ff9c10"
        },
        "downloads": -1,
        "filename": "combidata-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d170c69136a5e1b3a32282ccb2e0e030",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10, <4",
        "size": 7621,
        "upload_time": "2023-02-10T16:37:01",
        "upload_time_iso_8601": "2023-02-10T16:37:01.148500Z",
        "url": "https://files.pythonhosted.org/packages/37/28/826663c860783f2b64ca0aa4e1991cfce628988d646bd32ae9af341f9040/combidata-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f0f5a6f5463fedcd453c2a6e7b37bbbb254d20086f6415067cea8320c03fe97",
          "md5": "03f01a5ad23e859deaec7d15caec8260",
          "sha256": "e9f7993d9e3cef3b2635d221161c136b6924c48fb2fea5a87a0a06bd7168e45b"
        },
        "downloads": -1,
        "filename": "combidata-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "03f01a5ad23e859deaec7d15caec8260",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10, <4",
        "size": 6580,
        "upload_time": "2023-02-10T16:37:02",
        "upload_time_iso_8601": "2023-02-10T16:37:02.772675Z",
        "url": "https://files.pythonhosted.org/packages/4f/0f/5a6f5463fedcd453c2a6e7b37bbbb254d20086f6415067cea8320c03fe97/combidata-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ab14b7771cc619a340763bbd44831636643861a7bf1a70f69a22b29f6f56dbb",
          "md5": "2d3d0df08f12f77024e5f41fb0523505",
          "sha256": "fdd110473e40f8ec8f0de4e0d7a2ce83d491645ecf5bd8a747043d15a85d7adc"
        },
        "downloads": -1,
        "filename": "combidata-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d3d0df08f12f77024e5f41fb0523505",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10, <4",
        "size": 7615,
        "upload_time": "2023-02-15T13:37:41",
        "upload_time_iso_8601": "2023-02-15T13:37:41.614858Z",
        "url": "https://files.pythonhosted.org/packages/8a/b1/4b7771cc619a340763bbd44831636643861a7bf1a70f69a22b29f6f56dbb/combidata-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb74d93d9732ec546c2e57c90d6bfe1691bd1a25b397eff5444a80c5660f7da8",
          "md5": "07c4b1f73360e7ae8fdb46bf27cd0a45",
          "sha256": "2cb2dd9f92d2ec326fd177eb8507044df46478ed9b329bb04c9ac10f9271da07"
        },
        "downloads": -1,
        "filename": "combidata-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "07c4b1f73360e7ae8fdb46bf27cd0a45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10, <4",
        "size": 6589,
        "upload_time": "2023-02-15T13:37:43",
        "upload_time_iso_8601": "2023-02-15T13:37:43.208713Z",
        "url": "https://files.pythonhosted.org/packages/bb/74/d93d9732ec546c2e57c90d6bfe1691bd1a25b397eff5444a80c5660f7da8/combidata-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88f2866bdb0ac2064a0add2bb6be920aef7a4748292b198ae6c0b77b1e9f4160",
          "md5": "4df6da944662f10720b800418c469878",
          "sha256": "c39763a6fed2b5d46a1ae445dde14f71ae30bf9c99fa09ad976d3d060e54222e"
        },
        "downloads": -1,
        "filename": "combidata-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4df6da944662f10720b800418c469878",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10, <4",
        "size": 7825,
        "upload_time": "2023-02-16T10:10:13",
        "upload_time_iso_8601": "2023-02-16T10:10:13.508545Z",
        "url": "https://files.pythonhosted.org/packages/88/f2/866bdb0ac2064a0add2bb6be920aef7a4748292b198ae6c0b77b1e9f4160/combidata-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d432feb9f0df6e819a79253cd0542287673d6198d9b19613feaa6121b497ef86",
          "md5": "5fcaac462d5b1852c2491ccd256e81f7",
          "sha256": "44cb74cc7a8cbdfb9db05c499e141995a6651b5bc0bf58c80d083d690e047839"
        },
        "downloads": -1,
        "filename": "combidata-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5fcaac462d5b1852c2491ccd256e81f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10, <4",
        "size": 6725,
        "upload_time": "2023-02-16T10:10:15",
        "upload_time_iso_8601": "2023-02-16T10:10:15.075122Z",
        "url": "https://files.pythonhosted.org/packages/d4/32/feb9f0df6e819a79253cd0542287673d6198d9b19613feaa6121b497ef86/combidata-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da92312230bf62c4d25352c53e9c18426764478a2e8def0b7ddbbe9e4ff4283e",
          "md5": "4ca1e4f30487ab18ddbf8ae0db81b709",
          "sha256": "332eda3b49003e2915df20b1106aff5e1127ccd0c3b2f8b2ec14fddd7f1ac34b"
        },
        "downloads": -1,
        "filename": "combidata-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ca1e4f30487ab18ddbf8ae0db81b709",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10, <4",
        "size": 7963,
        "upload_time": "2023-02-17T08:04:25",
        "upload_time_iso_8601": "2023-02-17T08:04:25.943333Z",
        "url": "https://files.pythonhosted.org/packages/da/92/312230bf62c4d25352c53e9c18426764478a2e8def0b7ddbbe9e4ff4283e/combidata-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16619686c1ce889c194ae2695634af6ba311bac672cb7050b233b37426df4ae0",
          "md5": "86e54ca9f33f04ba41b0183f924bef5f",
          "sha256": "0a5a40c3e90f81aa90d5378eaf35edea4fd4719ad9d0d2973815beda825f80f3"
        },
        "downloads": -1,
        "filename": "combidata-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "86e54ca9f33f04ba41b0183f924bef5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10, <4",
        "size": 6922,
        "upload_time": "2023-02-17T08:04:27",
        "upload_time_iso_8601": "2023-02-17T08:04:27.050278Z",
        "url": "https://files.pythonhosted.org/packages/16/61/9686c1ce889c194ae2695634af6ba311bac672cb7050b233b37426df4ae0/combidata-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40491becb9682abdbb75ac17b94a4057785df755fd9fe2ade8085690df494dbf",
          "md5": "cdeca10804c6c774ccaf4c162749b2d1",
          "sha256": "db2baa0b5448a8fb7069a8927ee82ad4000cd2535e0446a9d8179456822eb401"
        },
        "downloads": -1,
        "filename": "combidata-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cdeca10804c6c774ccaf4c162749b2d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10, <4",
        "size": 8428,
        "upload_time": "2023-02-17T11:50:52",
        "upload_time_iso_8601": "2023-02-17T11:50:52.449663Z",
        "url": "https://files.pythonhosted.org/packages/40/49/1becb9682abdbb75ac17b94a4057785df755fd9fe2ade8085690df494dbf/combidata-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c36bf3979d63ff1d3b25cd176ae5a641744ef67e7fc56b084533e7185272c7ea",
          "md5": "844424fd8cee5caf0599ef687e18a5d4",
          "sha256": "12b86f33dd8d6f64610092a9df80a373d4193cd4b7345bca274c3ffde8cc66c9"
        },
        "downloads": -1,
        "filename": "combidata-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "844424fd8cee5caf0599ef687e18a5d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10, <4",
        "size": 7398,
        "upload_time": "2023-02-17T11:50:53",
        "upload_time_iso_8601": "2023-02-17T11:50:53.975572Z",
        "url": "https://files.pythonhosted.org/packages/c3/6b/f3979d63ff1d3b25cd176ae5a641744ef67e7fc56b084533e7185272c7ea/combidata-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d8e07f1763f42b3e321645267c868287cfbc789609a0c75d3ae105d1490949d",
          "md5": "048d4df256d2e025b01c896ab01953cc",
          "sha256": "c0ba677b93eb0960ca4a220d152c690b6c04200b1bf50242687d1b835c9f31fa"
        },
        "downloads": -1,
        "filename": "combidata-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "048d4df256d2e025b01c896ab01953cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10, <4",
        "size": 8154,
        "upload_time": "2023-02-17T18:33:25",
        "upload_time_iso_8601": "2023-02-17T18:33:25.407258Z",
        "url": "https://files.pythonhosted.org/packages/6d/8e/07f1763f42b3e321645267c868287cfbc789609a0c75d3ae105d1490949d/combidata-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d21bda43018641f3964b728d7b30c91ae195b3ca5d8c50f2b897575712b2ba80",
          "md5": "2bbc6f407b9b3568cfe68259164eb506",
          "sha256": "8e2747719650afee341414d9d221f802522312be2180b65da98e486a499c643a"
        },
        "downloads": -1,
        "filename": "combidata-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2bbc6f407b9b3568cfe68259164eb506",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10, <4",
        "size": 7099,
        "upload_time": "2023-02-17T18:33:26",
        "upload_time_iso_8601": "2023-02-17T18:33:26.523647Z",
        "url": "https://files.pythonhosted.org/packages/d2/1b/da43018641f3964b728d7b30c91ae195b3ca5d8c50f2b897575712b2ba80/combidata-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d04f9b2314d8b6d757cc4af2c8fb1f046d124663bb50ce908a8257455a9dde38",
          "md5": "11d62ec34c83c0486559646881499b9a",
          "sha256": "3b5a13f8dbadaeef3ad178a40079ba54304cdfcbdeb716ef1aa911b6fe64c92d"
        },
        "downloads": -1,
        "filename": "combidata-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11d62ec34c83c0486559646881499b9a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10, <4",
        "size": 8088,
        "upload_time": "2023-02-17T22:18:49",
        "upload_time_iso_8601": "2023-02-17T22:18:49.099722Z",
        "url": "https://files.pythonhosted.org/packages/d0/4f/9b2314d8b6d757cc4af2c8fb1f046d124663bb50ce908a8257455a9dde38/combidata-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd0196fbd957d9641a195c63534c4f7ab5682f8fc1a74559a4f3fc1f30df1442",
          "md5": "f3ff466340b13c3af993baf949e16420",
          "sha256": "39c29ee2d443bc7619c41275974ed3755e84b620a103a2907c3a6dc75963ded2"
        },
        "downloads": -1,
        "filename": "combidata-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f3ff466340b13c3af993baf949e16420",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10, <4",
        "size": 7057,
        "upload_time": "2023-02-17T22:18:50",
        "upload_time_iso_8601": "2023-02-17T22:18:50.729030Z",
        "url": "https://files.pythonhosted.org/packages/cd/01/96fbd957d9641a195c63534c4f7ab5682f8fc1a74559a4f3fc1f30df1442/combidata-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85ca2450d3cd8fdaecaf3fe83b2b0879b96aa1ac221b021503ac069cc9a1af78",
          "md5": "0ab336902b0249d1702035a2537e5aa9",
          "sha256": "63bf5c148c883a3e0ed8682cda8e3c91b98a34adbe7e0dbf23406ac105b62f8b"
        },
        "downloads": -1,
        "filename": "combidata-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ab336902b0249d1702035a2537e5aa9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10, <4",
        "size": 11124,
        "upload_time": "2023-03-02T18:42:35",
        "upload_time_iso_8601": "2023-03-02T18:42:35.650650Z",
        "url": "https://files.pythonhosted.org/packages/85/ca/2450d3cd8fdaecaf3fe83b2b0879b96aa1ac221b021503ac069cc9a1af78/combidata-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2f724379df233e2c7557169cc7249e2a4c0057df5d4e5d033c3bf3e1eaf2b18",
          "md5": "ab7f1c30188bc41f5bdc3053f02fa9e6",
          "sha256": "904c7c30d581cd15f514abd2857cf19be5b69b50f384e662705dcc8810c5287f"
        },
        "downloads": -1,
        "filename": "combidata-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "ab7f1c30188bc41f5bdc3053f02fa9e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10, <4",
        "size": 11816,
        "upload_time": "2023-03-02T18:42:36",
        "upload_time_iso_8601": "2023-03-02T18:42:36.904183Z",
        "url": "https://files.pythonhosted.org/packages/a2/f7/24379df233e2c7557169cc7249e2a4c0057df5d4e5d033c3bf3e1eaf2b18/combidata-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85ca2450d3cd8fdaecaf3fe83b2b0879b96aa1ac221b021503ac069cc9a1af78",
        "md5": "0ab336902b0249d1702035a2537e5aa9",
        "sha256": "63bf5c148c883a3e0ed8682cda8e3c91b98a34adbe7e0dbf23406ac105b62f8b"
      },
      "downloads": -1,
      "filename": "combidata-0.1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0ab336902b0249d1702035a2537e5aa9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10, <4",
      "size": 11124,
      "upload_time": "2023-03-02T18:42:35",
      "upload_time_iso_8601": "2023-03-02T18:42:35.650650Z",
      "url": "https://files.pythonhosted.org/packages/85/ca/2450d3cd8fdaecaf3fe83b2b0879b96aa1ac221b021503ac069cc9a1af78/combidata-0.1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2f724379df233e2c7557169cc7249e2a4c0057df5d4e5d033c3bf3e1eaf2b18",
        "md5": "ab7f1c30188bc41f5bdc3053f02fa9e6",
        "sha256": "904c7c30d581cd15f514abd2857cf19be5b69b50f384e662705dcc8810c5287f"
      },
      "downloads": -1,
      "filename": "combidata-0.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "ab7f1c30188bc41f5bdc3053f02fa9e6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10, <4",
      "size": 11816,
      "upload_time": "2023-03-02T18:42:36",
      "upload_time_iso_8601": "2023-03-02T18:42:36.904183Z",
      "url": "https://files.pythonhosted.org/packages/a2/f7/24379df233e2c7557169cc7249e2a4c0057df5d4e5d033c3bf3e1eaf2b18/combidata-0.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}