{
  "info": {
    "author": "Peter Ilfrich",
    "author_email": "das-peter@gmx.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Frappy API Billing\n\nAPI Quota and Billing System for Flask - compatible with the Frappy framework.\n\n- This is the backend module for Flask\n- Frontend package for React can be found here: \n  [@frappy/react-api-billing](http://github.com/ilfrich/frappy-react-api-billing)\n- Usage store modules for Python can be found here:\n    - [MongoDB Store](http://github.com/ilfrich/frappy-py-mongo-api-billing-store)\n    - [SQL Store (SQL Alchemy)](http://github.com/ilfrich/frappy-py-sql-api-billing-store)\n\n## Usage\n\n```python\nfrom frappyapibilling import ApiBilling, QuotaDuration, QuotaDefinition\nfrom frappymongoapibilling import UsageStore\nfrom datetime import datetime\nfrom flask import Flask, jsonify, make_response\n\n# init the usage store and the api billing handler instance\nstore = UsageStore(mongo_url=\"mongodb://localhost:27015\", mongo_db=\"myDbName\", collection_name=\"apiUsage\")\napi_billing = ApiBilling(usage_store=store)\n\n# define the quotas for any existing client and feed them into the ApiBilling instance\nclient_id = \"client1\"\nquotas = [\n    QuotaDefinition(duration_type=QuotaDuration.DAY, credit_limit=500, start_date=datetime(2022, 1, 1)),\n    QuotaDefinition(duration_type=QuotaDuration.MONTH, credit_limit=10000, start_date=datetime(2022, 1, 1)),\n]\napi_billing.update_client_quotas(client_id=client_id, quota_definitions=quotas)\n\napp = Flask(__name__)\n\n@app.route(\"/api/fetch-data\", methods=[\"GET\"])\ndef fetch_data_api_handler():\n    # run authentication of the user\n    authenticated_client = \"client1\" # replace with your auth mechanism\n    api_billing.track_client_usage(client_id=authenticated_client)  # will abort if insufficient credits and deduct 1 credit\n    # run your method\n    result = ...\n    return jsonify(result)\n\n\n@app.route(\"/api/fetch-expensive-data\", methods=[\"GET\"])\ndef fetch_expensive_data_api_handler():\n    # run authentication of the user\n    authenticated_client = \"client1\" # replace with your auth mechanism\n    credits_used = 5.0  # this can also be determined dynamically by the request\n    api_billing.track_client_usage(client_id=authenticated_client, credits_used=credits_used)  \n    # run your method\n    result = ...\n    # return a response with X-RateLimit-[Remaining|Reset] headers\n    return api_billing.create_response_with_header(client_id=authenticated_client, response_body=jsonify(result))\n```\n\n## Quota Definitions\n\nIt is up to you, where and how you store quota definitions. The API Billing module does not store the quota definitions \n anywhere. \n\nWhen your API starts up you need to fetch any pre-existing clients and their respective quota limits and \n create the quota definitions. The module will fetch existing usage and update the current renew interval with already \n used up credits.\n\nLikewise, while the API is running, if a new client registers, you can feed the quota definitions into the ApiBilling\ninstance using the `update_client_quotas(client_id, quota_definitions: List[QuotdaDefinition])` method.\n\n## Error Handling\n\nThe `track_client_usage` method will first check if sufficient credits are available. If not there are 2 possible \n behaviours:\n\n- by default a 429 will be returned to the caller with an error message and `RateLimit` headers\n- if the parameter `use_abort=False` is passed into the `track_client_usage` a `QuotaException` will be thrown and you\n have to handle the error.\n\nA `QuotaException` has 2 fields storing `quota_remaining` (a number) and `quota_renew` (`datetime`) for the \"shortest \n quota\" - i.e. the quota definition with the fewest remaining credits.\n\nYou can also pass the `QuotaException` instance into the `create_response_with_header` method of `ApiBilling` as the \n optional `exception` parameter, which can reduce required computation to determining the next renew and remaining \n credits. \n\nPlease note, all `datetime` objects are relative to the server's timezone.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ilfrich/frappy-api-billing",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "frappyapibilling",
    "package_url": "https://pypi.org/project/frappyapibilling/",
    "platform": null,
    "project_url": "https://pypi.org/project/frappyapibilling/",
    "project_urls": {
      "Homepage": "https://github.com/ilfrich/frappy-api-billing"
    },
    "release_url": "https://pypi.org/project/frappyapibilling/0.1.0/",
    "requires_dist": [
      "flask"
    ],
    "requires_python": "",
    "summary": "Billing and Quota Backend for Plan-Based, Restricted API Access",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13497999,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4ee022bee7ff1cf55bffe00f579bf25fb8d95ec54542bfa248cfc5492101ae2",
          "md5": "b1c33dfbd5d1a3b247ff6be5a7dbc602",
          "sha256": "45e485513ea83f4f189a2c37b4c7648701219c7df7408d14055f2640b098f0df"
        },
        "downloads": -1,
        "filename": "frappyapibilling-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1c33dfbd5d1a3b247ff6be5a7dbc602",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11711,
        "upload_time": "2022-04-13T03:53:19",
        "upload_time_iso_8601": "2022-04-13T03:53:19.615199Z",
        "url": "https://files.pythonhosted.org/packages/c4/ee/022bee7ff1cf55bffe00f579bf25fb8d95ec54542bfa248cfc5492101ae2/frappyapibilling-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "610820ecfef4e2f6863a2fdbac0d69431e1eff8afe3074efd471a0f2003df434",
          "md5": "df85cf8b467bde4d1f7279370ab812d0",
          "sha256": "f749b4c2ee2cfec91282a9ec5ad3a89db6bd96c76ca9c9ce0e0733caf1e194fc"
        },
        "downloads": -1,
        "filename": "frappyapibilling-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "df85cf8b467bde4d1f7279370ab812d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6980,
        "upload_time": "2022-04-13T03:53:21",
        "upload_time_iso_8601": "2022-04-13T03:53:21.728559Z",
        "url": "https://files.pythonhosted.org/packages/61/08/20ecfef4e2f6863a2fdbac0d69431e1eff8afe3074efd471a0f2003df434/frappyapibilling-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4ee022bee7ff1cf55bffe00f579bf25fb8d95ec54542bfa248cfc5492101ae2",
        "md5": "b1c33dfbd5d1a3b247ff6be5a7dbc602",
        "sha256": "45e485513ea83f4f189a2c37b4c7648701219c7df7408d14055f2640b098f0df"
      },
      "downloads": -1,
      "filename": "frappyapibilling-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1c33dfbd5d1a3b247ff6be5a7dbc602",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11711,
      "upload_time": "2022-04-13T03:53:19",
      "upload_time_iso_8601": "2022-04-13T03:53:19.615199Z",
      "url": "https://files.pythonhosted.org/packages/c4/ee/022bee7ff1cf55bffe00f579bf25fb8d95ec54542bfa248cfc5492101ae2/frappyapibilling-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "610820ecfef4e2f6863a2fdbac0d69431e1eff8afe3074efd471a0f2003df434",
        "md5": "df85cf8b467bde4d1f7279370ab812d0",
        "sha256": "f749b4c2ee2cfec91282a9ec5ad3a89db6bd96c76ca9c9ce0e0733caf1e194fc"
      },
      "downloads": -1,
      "filename": "frappyapibilling-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "df85cf8b467bde4d1f7279370ab812d0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6980,
      "upload_time": "2022-04-13T03:53:21",
      "upload_time_iso_8601": "2022-04-13T03:53:21.728559Z",
      "url": "https://files.pythonhosted.org/packages/61/08/20ecfef4e2f6863a2fdbac0d69431e1eff8afe3074efd471a0f2003df434/frappyapibilling-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}