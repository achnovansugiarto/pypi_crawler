{
  "info": {
    "author": "Damien Corpataux",
    "author_email": "d@mien.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Embedded Systems",
      "Topic :: System :: Shells",
      "Topic :: Terminals :: Serial",
      "Topic :: Utilities"
    ],
    "description": "microdeploy\n===========\n\n**Deploy project files on MCU as simple, fluid, and configurable.**\n\nThis tool gives a per-project approach for uploading files to MCU.\nPer-environment support is intended - todo.\n\n\nFeatures\n--------\n\n- Configurable project files and environment - see example config: [`microdeploy.yaml`](example/project/microdeploy.yaml)\n- Workflow support with a consistent CLI and API - see [CLI Usage](#cli-usage) and [Python Usage](#python-usage)\n- Pseudo-caching of MCU filesystem (hash cache)\n\n\nPurpose\n-------\n\nA KISS approach to wrap up existing CLI tools:\n[ampy](https://pypi.org/project/adafruit-ampy-master/),\n[terminal-s](https://pypi.org/project/terminal-s/),\n(esptool, rshell),\nand [fire](https://pypi.org/project/fire/).\n\n&mdash; *Note: Package [`adafruit-ampy-master`](https://pypi.org/project/adafruit-ampy-master/) is used\ninstead of [adafruit-ampy](https://pypi.org/project/adafruit-ampy/)\nin order to allow upload progress display, because the official package is not up-to-date with [master](https://github.com/damiencorpataux/ampy).*\n\n\nInstallation\n------------\n\n```s\npip uninstall adafruit-ampy  # see requirements.txt (this is 0.0.1)\npip install --user microdeploy\n```\n```s\nmicrodeploy\nmicrodeploy --help\n```\n\n\nCLI Usage\n---------\n\n```s\nmicrodeploy                          # With default config file: microdeploy.yaml\nmicrodeploy --port /dev/ttyUSB0      # Without config file\nmicrodeploy --config other.yaml      # Use alternate config file\nmicrodeploy --baud 115200 --port XYZ  # Override config\n\nmicrodeploy config\nmicrodeploy config show\n\nmicrodeploy device\nmicrodeploy device show\nmicrodeploy device ls\nmicrodeploy device put main.py\nmicrodeploy device put test.py main.py\nmicrodeploy device rm main.py\nmicrodeploy device mkdir testdir\nmicrodeploy device rmdir testdir\nmicrodeploy device rmdir .  # Note: Remove all files on MCU filesystem.\n\nmicrodeploy device console\n\nmicrodeploy package\nmicrodeploy package names\nmicrodeploy package files tests\nmicrodeploy package push tests\nmicrodeploy package push tests --debug --nofail --noput --norun --force\nmicrodeploy package run tests-run.py\n\nmicrodeploy package cache\nmicrodeploy package cache show\nmicrodeploy package cache refresh\nmicrodeploy package cache clear\n```\n\n\nPython Usage\n------------\n\n```py\nfrom microdeploy import Microdeploy\n\nhelp(Microdeploy)\n```\n\nWithout config file:\n```py\ndeploy = Microdeploy(port='/dev/ttyUSB0')\n\ndeploy.config.show()\ndeploy.device.ls()\ndeploy.device.put('main.py')\ndeploy.device.put('lib.py', '/lib/lib.py')\n\ndeploy.device.run('sandbox/test-something.py')\ndeploy.device.reset()\n```\n\nWith config file (relative to cwd):\n```py\ndeploy = Microdeploy(config='microdeploy.yaml')\n\ndeploy.package.show('tests')\ndeploy.package.files('tests')\ndeploy.package.push('tests')\n```\n\n\nExample\n-------\nAutomation of deploy and run tests on MCU - see code in [`example/project`](example/project).\n\nPush the package (2 times to see the cache working):\n```s\npython3 -m microdeploy -c example/project/microdeploy.yaml package push tests-run\n```\n```s\nDeploying package: tests-run: 4 files -> MCU...\n\nPut: example/project/tests/__init__.py\n  -> tests/__init__.py... 23 bytes\n       0%, 0.0s, 0 bits/s, 23 bytes left, 0.0s left.\n\nCreating directory: tests\n\nPut: example/project/tests/__init__.py\n  -> tests/__init__.py... 23 bytes\n     100%, 0.9s, 209 bits/s, 0 bytes left, 0.0s left.\n\nPut: example/project/tests/test_pin.py\n  -> tests/test_pin.py... 579 bytes\n     100%, 1.3s, 3596 bits/s, 0 bytes left, 0.0s left.\n\nPut: example/project/tests/lib/unittest.py\n  -> tests/lib/unittest.py... 7193 bytes\n       0%, 0.0s, 0 bits/s, 7193 bytes left, 0.0s left.\n\nCreating directory: tests/lib\n\nPut: example/project/tests/lib/unittest.py\n  -> tests/lib/unittest.py... 7193 bytes\n     100%, 5.4s, 10559 bits/s, 0 bytes left, 0.0s left.\n\nPut: example/project/tests-run.py\n  -> tests-run.py... 55 bytes\n     100%, 0.9s, 490 bits/s, 0 bytes left, 0.0s left.\n\nRun: tests-run.py...\n---8<---------\ntest_pin_on (TestPin) ... ok\ntest_pin_off (TestPin) ... ok\ntest_pin_toggle (TestPin) ... ok\nRan 3 tests\n\nOK\n--------->8---\n\nOK: Pushed to MCU 4/4 files from package: tests-run.\nRan on MCU: ['tests-run.py'].\n```\n\nMore on asciinema:\n\n- [Device access](https://asciinema.org/a/v0fogxAifNFMB7WoQG7nCVc6Q)\n\n- [Cache management](https://asciinema.org/a/UTXTudQKR9ewKX0VzJLh7dVHz)\n\n- [Configuration management](https://asciinema.org/a/q2KcZO7ilcrjLbYrB4NlPprFm)\n\n- [Package management](https://asciinema.org/a/oPRYVrOjRq2mXGL6AFCIRKadr)\n\n\nDevelopment\n-----------\n\nThis prototype was written because I was tinkering with ESP in a project with multiple files.\nI was tired of forgetting to upload this or that file, and testing partly outdated code,\n<br>or needing to upload all files again every time. It became worse when I had to test my project on both ESP32 and 8266.\n\nProject facts:\n\n* [Semantic Versioning](https://semver.org/) is followed\n\n* Stage of development: [MVP](https://en.wikipedia.org/wiki/Minimum_viable_product)\n\n* The smaller the better:\n   <small>\n   ```wc -l microdeploy/*```\n   ```s\n    91 microdeploy/cli.py\n   103 microdeploy/config.py\n   293 microdeploy/device.py\n   197 microdeploy/__init__.py\n     6 microdeploy/__main__.py\n    77 microdeploy/package.py\n   767 total\n   ```\n   </small>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/damiencorpataux/microdeploy",
    "keywords": "micropython,deploy,deployment,microcontroller,mcu,serial,ampy,rshell,picocom,console,cache,caching",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "microdeploy",
    "package_url": "https://pypi.org/project/microdeploy/",
    "platform": null,
    "project_url": "https://pypi.org/project/microdeploy/",
    "project_urls": {
      "Homepage": "https://github.com/damiencorpataux/microdeploy"
    },
    "release_url": "https://pypi.org/project/microdeploy/0.0.1/",
    "requires_dist": [
      "adafruit-ampy-master",
      "terminal-s",
      "pyserial",
      "PyYAML",
      "fire"
    ],
    "requires_python": "",
    "summary": "Micropython deployment toolchain",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16965552,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8763fee43c18357116380de1ba642e8a5e0ba6fd3ae980d9fd45a770981818f7",
          "md5": "e81cf5fe77ba3a5aad46f59c16f32c0a",
          "sha256": "cad33fb7a3ed4fc10d92cf809aaa4b336be125fd1cb01ea89eb45f484b13f7c1"
        },
        "downloads": -1,
        "filename": "microdeploy-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e81cf5fe77ba3a5aad46f59c16f32c0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14494,
        "upload_time": "2023-02-21T20:55:37",
        "upload_time_iso_8601": "2023-02-21T20:55:37.917311Z",
        "url": "https://files.pythonhosted.org/packages/87/63/fee43c18357116380de1ba642e8a5e0ba6fd3ae980d9fd45a770981818f7/microdeploy-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48bf24150913d1e83952031bf34f022b5fe8cd16b5300b4eeb86629e48bfbb4d",
          "md5": "619e8bccf74f119809b040a40c2562e5",
          "sha256": "284bc9314472ca971fbfa9a1a3fb3b7bf510eb13402d9f8ab99543c0184d4f71"
        },
        "downloads": -1,
        "filename": "microdeploy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "619e8bccf74f119809b040a40c2562e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14325,
        "upload_time": "2023-02-21T20:55:41",
        "upload_time_iso_8601": "2023-02-21T20:55:41.412877Z",
        "url": "https://files.pythonhosted.org/packages/48/bf/24150913d1e83952031bf34f022b5fe8cd16b5300b4eeb86629e48bfbb4d/microdeploy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8763fee43c18357116380de1ba642e8a5e0ba6fd3ae980d9fd45a770981818f7",
        "md5": "e81cf5fe77ba3a5aad46f59c16f32c0a",
        "sha256": "cad33fb7a3ed4fc10d92cf809aaa4b336be125fd1cb01ea89eb45f484b13f7c1"
      },
      "downloads": -1,
      "filename": "microdeploy-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e81cf5fe77ba3a5aad46f59c16f32c0a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14494,
      "upload_time": "2023-02-21T20:55:37",
      "upload_time_iso_8601": "2023-02-21T20:55:37.917311Z",
      "url": "https://files.pythonhosted.org/packages/87/63/fee43c18357116380de1ba642e8a5e0ba6fd3ae980d9fd45a770981818f7/microdeploy-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "48bf24150913d1e83952031bf34f022b5fe8cd16b5300b4eeb86629e48bfbb4d",
        "md5": "619e8bccf74f119809b040a40c2562e5",
        "sha256": "284bc9314472ca971fbfa9a1a3fb3b7bf510eb13402d9f8ab99543c0184d4f71"
      },
      "downloads": -1,
      "filename": "microdeploy-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "619e8bccf74f119809b040a40c2562e5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14325,
      "upload_time": "2023-02-21T20:55:41",
      "upload_time_iso_8601": "2023-02-21T20:55:41.412877Z",
      "url": "https://files.pythonhosted.org/packages/48/bf/24150913d1e83952031bf34f022b5fe8cd16b5300b4eeb86629e48bfbb4d/microdeploy-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}