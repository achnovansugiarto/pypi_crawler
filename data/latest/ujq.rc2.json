{
  "info": {
    "author": "Krishna Raj K",
    "author_email": "krishnaraj2003@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# UJQ\nUniversal Job Queue or UJQ in short is a Redis based Simple MultiPlatform Job management library. This Library is light weight and build for working with microservices. Currently we have Node and Python implementation of Library. C# and Java are in pipeline. \n## Benifits\n1. Jobs can be created and processed by different application or services\n2. Auto trigger when job is created\n3. Job Completion and error indications\n\n# Python\n[CLICK HERE](https://github.com/Krishnaraj2003/UJQ) for Node.js Package\n\n## Installing UJQ\nYou can use PIP to install\n\n```\npip install ujq\n```\n\n## Connecting to Redis\nUse the following to connect to redis\n\n```python\nfrom ujq import ujq\nimport json\n\nUJQ = ujq(host=\"127.0.0.1\",port=6379)\nUJQ.connect()\n    \n```\n## Create a new Job\nThe following Code will create a new Job\n```python\nid = UJQ.createJob('Test_100',{\"test\":\"test45y76475\"})\nprint(id)\n    \n```\n\n## On creation of New Job\nThe Below Code will work on the job and returns a status\n```python\n\ndef callback (message,complete):\n    print(json.dumps(message))\n    complete({'status':True,\"DummyData\":\"blablabla\"},False)\n\nUJQ.onCreated('Test_100',callback)\n\n```\n\nIn case of error, the false tag can be set as true... Invoking the complete callback will complete the job and will be moved from queue...\n\n## On completion of Job\n\n```python\nresult = UJQ.onCompleted(id)\nprint(result)\n```\n\nThe above code will complete the job.\n\n## Run Job\n\nA new method is created for UJQ version 2 and above to run which combines both createJob and onCompleted\n\n```python\nresult = UJQ.runJob('Test_100',{\"test\":\"test45y76475\"})\nprint(result)\n```\n\n\n# Express with UJQ\nA simple implementation of Express in Node.js with UJQ in Python as shown\n\n\nCreate a **Server.js** with the below code\n```javascript\nconst express = require(\"express\")\nconst UJQ = require(\"ujq\")\nconst ujq = new UJQ({ port: \"6379\", host: \"127.0.0.1\" })\nconst app = express()\nconst port = 3000\n\n  ujq.connect()\n    .then(() => {\n        app.get('/', (req, res) => {\n\n            ujq.createJob(\"test_q2\", { test: \"sample Data\" })\n\n                //Set On Complete\n                .then((result) => ujq.onCompleted(result.id))\n\n                //Send Result\n                .then((result) => res.send(result))\n    })\n    \n}).catch((e) => console.log(e))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))\n```\n\nNow Create **Worker.py** with the below Code\n```python\nfrom ujq import ujq\nimport json\n\ndef callback (message,complete):\n    print(json.dumps(message))\n    complete({'status':True,\"DummyData\":\"blablabla\"},False)\n\nUJQ.onCreated('Test_100',callback)\n```\nRun both the files and **Enjoy** :B\n\n## New onError method\nThis method will handle errors during disconnect of redis in between\n\n```python\nUJQ.onError(lambda x:run())\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Krishnaraj2003/PyUJQ/archive/v2.0.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Krishnaraj2003/PyUJQ",
    "keywords": "UJQ,Redis,ujq,micro services,microservice,redis queue,queue management",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ujq",
    "package_url": "https://pypi.org/project/ujq/",
    "platform": "",
    "project_url": "https://pypi.org/project/ujq/",
    "project_urls": {
      "Download": "https://github.com/Krishnaraj2003/PyUJQ/archive/v2.0.0.tar.gz",
      "Homepage": "https://github.com/Krishnaraj2003/PyUJQ"
    },
    "release_url": "https://pypi.org/project/ujq/2.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Universal Job Queue or UJQ in short is a Redis based Simple MultiPlatform Job management library build. This Library is light weight and build for working with microservices.",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8366842,
  "releases": {
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4a269b9c73bbdf6231678a0aac60f9bfc815ec3e08338ca13ea4abf36d6ebd0",
          "md5": "a8783f39b608e45204fd5e95a86003f4",
          "sha256": "fa61c881e60ff605a3dadc30400798da2d64c54bf93588c8f1ec0c4b02d141f1"
        },
        "downloads": -1,
        "filename": "ujq-2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8783f39b608e45204fd5e95a86003f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5757,
        "upload_time": "2020-10-08T10:34:50",
        "upload_time_iso_8601": "2020-10-08T10:34:50.771289Z",
        "url": "https://files.pythonhosted.org/packages/c4/a2/69b9c73bbdf6231678a0aac60f9bfc815ec3e08338ca13ea4abf36d6ebd0/ujq-2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54fbf3c75e59d0f224d404869f4890879037c401bc001e1ec012f71e9947fe54",
          "md5": "5622367f2f0b8035f97c8f5a07ae988a",
          "sha256": "e386c7d6de756a58d6f78f89c7a16760d903188df418d64f60d7543ae4fbb73e"
        },
        "downloads": -1,
        "filename": "ujq-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5622367f2f0b8035f97c8f5a07ae988a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4970,
        "upload_time": "2020-09-22T07:36:30",
        "upload_time_iso_8601": "2020-09-22T07:36:30.238690Z",
        "url": "https://files.pythonhosted.org/packages/54/fb/f3c75e59d0f224d404869f4890879037c401bc001e1ec012f71e9947fe54/ujq-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c55a02e017036ab632fcd7624e43b1d8f1bdf00ac8c6fee318c483cbef52817",
          "md5": "423425696b4994fa07186b259bec906d",
          "sha256": "3fba2d49f1508817bd0d7b431abe635a26de43db981ebe4aa029d325710501d7"
        },
        "downloads": -1,
        "filename": "ujq-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "423425696b4994fa07186b259bec906d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5139,
        "upload_time": "2020-10-08T10:37:49",
        "upload_time_iso_8601": "2020-10-08T10:37:49.741971Z",
        "url": "https://files.pythonhosted.org/packages/5c/55/a02e017036ab632fcd7624e43b1d8f1bdf00ac8c6fee318c483cbef52817/ujq-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c55a02e017036ab632fcd7624e43b1d8f1bdf00ac8c6fee318c483cbef52817",
        "md5": "423425696b4994fa07186b259bec906d",
        "sha256": "3fba2d49f1508817bd0d7b431abe635a26de43db981ebe4aa029d325710501d7"
      },
      "downloads": -1,
      "filename": "ujq-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "423425696b4994fa07186b259bec906d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5139,
      "upload_time": "2020-10-08T10:37:49",
      "upload_time_iso_8601": "2020-10-08T10:37:49.741971Z",
      "url": "https://files.pythonhosted.org/packages/5c/55/a02e017036ab632fcd7624e43b1d8f1bdf00ac8c6fee318c483cbef52817/ujq-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}