{
  "info": {
    "author": "Filip Koprivec, Klemen Kenda, Gal Petkovsek",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# FASTENER\n___FeAture SelecTion ENabled by EntRopy___ for Python\n\nFASTENER is a state-of-the-art feature selecton algorithm for remote sensing, but performs well also on several other data sets. It is most suitable for large datasets with several hundreds of features. It has been develped for the use case of crop/land-cover classification based on Sentinel-II data.\n\n## Prerequisites\n\n* Python 3.6+\n* scikit-learn (0.22.2+)\n* mypy(0.761)\n* For example:\n    * Pandas\n\nFor further details see `requirements.txt`.\n\n## Installation\nInstall using pip:\n```\npip install fastener\n```\n\n## Users' Manual\nBasic documentation is available within the code.\n\nA simple workflow is described below.\n\n0. Includes\n```python\n# import dataset\nfrom sklearn.datasets import load_breast_cancer\n\n# import preprocessing tools\nfrom sklearn import preprocessing\nimport numpy as np\nimport pandas as pd\n\n# import learning/evaluation\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import f1_score\nfrom sklearn.model_selection import cross_val_score\n\n# typing\nfrom typing import Dict, List, Callable, Any, Tuple, Optional, \\\n    Counter as CounterType, Set\n\n# FASTENER specific imports\nfrom fastener.random_utils import shuffle\nfrom fastener.item import Result, Genes, RandomFlipMutationStrategy, RandomEveryoneWithEveryone, \\\n    IntersectionMating, UnionMating, IntersectionMatingWithInformationGain, \\\n    IntersectionMatingWithWeightedRandomInformationGain\nfrom fastener import fastener\n```\n\n1. Prepare data\n```python\n# loading breast cancer dataset\n# scikit-learn 0.22+ is needed\ncancer = load_breast_cancer(as_frame=True)\nX_df = cancer.data\ny_df = cancer.target\n\n# basic dataset split\nn_sample = X_df.shape[0]\nn_test = int(n_sample * 0.8)\n\nlabels_train = y_df.to_numpy()[:n_test]\nlabels_test = y_df.to_numpy()[n_test:]\n\nXX_train = X_df.to_numpy()[:n_test, :]\nXX_test = X_df.to_numpy()[n_test:, :]\n```\n\n2. Define feature evaluation function\n```python\ndef eval_fun(model: Any, genes: \"Genes\", shuffle_indices: Optional[List[int]] = None) -> \"Result\":\n    test_data = XX_test[:, genes]\n    if shuffle_indices:\n        test_data = test_data.copy()\n        for j in shuffle_indices:\n            shuffle(test_data[:, j])\n    pred = model.predict(test_data)\n    res = Result(f1_score(labels_test, pred))\n    return res\n```\n\n3. Configure the FASTENER\n\nBy default fastener runs for 1000 iterations. The number of iterations can be adjusted with `number_of_rounds` parameter in the `fastener.Config`.\n\n```python\nnumber_of_genes = XX_train.shape[1]\ngeneral_model = DecisionTreeClassifier\n# output folder name must be changed every time the algorithm is run\noutput_folder_name = \"output\"\n\n# to start the algorithm initial_genes or initial_population must be provided\ninitial_genes = [\n    [0]\n]\n\n# Select mating selection strategie (RandomEveryoneWithEveryone, NoMating) and mating strategy\n# (UnionMating, IntersectionMating, IntersectionMatingWithInformationGain, \n# IntersectionMatingWithWeightedRandomInformationGain) \n# If regression model is used IntersectionMatingWithInformationGain, IntersectionMatingWithWeightedRandomInformationGain \n# must have regression=True set (eg. IntersectionMatingWithInformationGain(regression=True))\nmating = RandomEveryoneWithEveryone(pool_size=3, mating_strategy=IntersectionMatingWithWeightedRandomInformationGain())\n\n# Random mutation (probability of gene mutating: 1 / number_of_genes)\nmutation = RandomFlipMutationStrategy(1 / number_of_genes)\n\nentropy_optimizer = fastener.EntropyOptimizer(\n    general_model, XX_train, labels_train, eval_fun,\n    number_of_genes, mating, mutation, initial_genes=initial_genes,\n    config=fastener.Config(output_folder=output_folder_name, random_seed=2020, reset_to_pareto_rounds=5)\n)\n```\n\n4) Run FASTENER loop\n```python\nentropy_optimizer.mainloop()\n```\n\n5) Check evaluation of the 1000th iteration\n```python\n# read log from last generation\nobject = pd.read_pickle(f'log/{output_folder_name}/generation_1000.pickle')\n\n# list of best-scoring EvalItem objects for each number of features\nbest = list(object.front.values())\n\nfor item in best:\n    # names of best features\n    selected_features = X_df.iloc[:, item.genes].columns.tolist()\n\n    X = X_df[selected_features].values.astype(float)\n    y = y_df.values.astype(float)\n\n    # evaluates each set of features with cross validation\n    model = DecisionTreeClassifier()\n    cvs = cross_val_score(model, X, y, cv=10)\n    print(\"Features:\", selected_features)\n    print(\"Accuracy: \", cvs.mean(), \" stdev: \", cvs.std(), \"\\n\")\n```\n\n\nFor detailed workflow check `Example.ipynb`.\n\n## Mating strategy\nThe following mating strategies are available:\n* Union mating: If either (or both) of the parents have the feature selected the descendent will have it too.\n```python\nmating_strategy = UnionMating()\n```\n* Intersection mating: If both of the parents have the feature the descendent will have it too.\n```python\nmating_strategy = IntersectionMating()\n```\n* Intersection mating with information gain: If both of the parents have the feature the descendent will have it too. Additionally, some features from either one of the parents, that have the highest information gain are added.  \n```python\nmating_strategy = IntersectionMatingWithInformationGain()\n``` \n* Intersection mating with weighted random information gain: If both of the parents have the feature the descendent will have it too. Additionally, some features from either one of the parents, will be added. The probability of a feature being selected is proportional to scaling function applied to it's calculated information gain.\n```python\nmating_strategy = IntersectionMatingWithWeightedRandomInformationGain()\n```\n\n**Note:**  If regression model is used with Intersection mating with information gain or Intersection mating with weighted random information gain, the regression flag must be set to True (eg. IntersectionMatingWithWeightedRandomInformationGain(regression=True)). However, if the dataset is large this can cause errors so intersection mating or union mating is a better choice.\n\n## Future Work\n\n* Update documentation\n* Prepare example notebooks\n* Create unit tests\n\n## Publications\n\nIf you use the algorithm, please cite the following paper:\n\n* Koprivec, F.; Kenda, K.; Ĺ ircelj, B., FASTENER Feature Selection for Inference from Earth Observation Data. Entropy 2020, 22, 1198 ([link](https://www.mdpi.com/1099-4300/22/11/1198)).\n\n__Abstract__:\n\n> In this paper, FASTENER feature selection algorithm is presented.\n    The algorithm exploits entropy-based measures such as mutual information in the crossover phase of the genetic algorithm approach.\n    FASTENER converges to an (near) optimal subset of features faster than previous state-of-the-art algorithms and achieves better classification accuracy than similarity-based methods such as KBest or ReliefF or wrapper methods such as POSS.\n    The approach was evaluated using the Earth Observation dataset for land-cover classification from ESA's Sentinel-2 mission, the digital elevation model and the ground truth data of the Land Parcel Identification System from Slovenia.\n    The algorithm can be used in any statistical learning scenario.\n\n\n### Acknowledgements\nThis research was funded by European Union's Horizon 2020 programme project PerceptiveSentinel (Research and Innovation) grant number [776115](https://cordis.europa.eu/project/id/776115), project NAIADES (Innovation Action) grant number [820985](https://cordis.europa.eu/project/id/820985).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JozefStefanInstitute/FASTENER.git",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fastener",
    "package_url": "https://pypi.org/project/fastener/",
    "platform": "",
    "project_url": "https://pypi.org/project/fastener/",
    "project_urls": {
      "Homepage": "https://github.com/JozefStefanInstitute/FASTENER.git"
    },
    "release_url": "https://pypi.org/project/fastener/1.0.4/",
    "requires_dist": [
      "mypy",
      "scikit-learn",
      "pandas (==1.1.3) ; extra == 'examples'"
    ],
    "requires_python": ">=3.6",
    "summary": "Feature selection enabled by entropy",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8762908,
  "releases": {
    "1.0.0": [],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b3a959d18417ac994b7f14584f2fd732a36d09ea8195951f8043083bfedf75c",
          "md5": "3c3e95fbd82617bb2ce5689019b42f07",
          "sha256": "8ed95fe1bc4ee09ca2acc95185a74ab8cdcce554cf3f3c57376464937271e27e"
        },
        "downloads": -1,
        "filename": "fastener-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c3e95fbd82617bb2ce5689019b42f07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17516,
        "upload_time": "2020-11-23T09:33:22",
        "upload_time_iso_8601": "2020-11-23T09:33:22.139562Z",
        "url": "https://files.pythonhosted.org/packages/2b/3a/959d18417ac994b7f14584f2fd732a36d09ea8195951f8043083bfedf75c/fastener-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95d868cbbf869d82752d7872e588fc052ab0224ddab66c42f8de332615c581e3",
          "md5": "fb64fc7f3a7cf973e80893b8a7354781",
          "sha256": "9b9d482295b49662100aa4c8c7c4e3416eeea2c062f2769d1f9cc547f63cde75"
        },
        "downloads": -1,
        "filename": "fastener-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fb64fc7f3a7cf973e80893b8a7354781",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19560,
        "upload_time": "2020-11-23T09:33:23",
        "upload_time_iso_8601": "2020-11-23T09:33:23.360844Z",
        "url": "https://files.pythonhosted.org/packages/95/d8/68cbbf869d82752d7872e588fc052ab0224ddab66c42f8de332615c581e3/fastener-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bfc5fce685a8c23836e6433eecdb763d8169a06bc1e02b1f6dc44ed720afd10",
          "md5": "fdaad7a0659509556784399a6c3f5bf7",
          "sha256": "187b976e5203b3197dee96220fe4a60361948c81d3344eb24ccab44af13f3aba"
        },
        "downloads": -1,
        "filename": "fastener-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fdaad7a0659509556784399a6c3f5bf7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17521,
        "upload_time": "2020-11-23T09:42:21",
        "upload_time_iso_8601": "2020-11-23T09:42:21.694044Z",
        "url": "https://files.pythonhosted.org/packages/5b/fc/5fce685a8c23836e6433eecdb763d8169a06bc1e02b1f6dc44ed720afd10/fastener-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e39d94a22ce0cd73307a99a68c692b4ab33dcca1839852013cc58d78e7a8a86",
          "md5": "8fa21d4b0a657a6433b8f0a2aaa3f29e",
          "sha256": "6853565b0e16c6e7aa065d37d3bb37b27c73fcbbd9a8112faa5e1d743877873a"
        },
        "downloads": -1,
        "filename": "fastener-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8fa21d4b0a657a6433b8f0a2aaa3f29e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19545,
        "upload_time": "2020-11-23T09:42:22",
        "upload_time_iso_8601": "2020-11-23T09:42:22.864860Z",
        "url": "https://files.pythonhosted.org/packages/9e/39/d94a22ce0cd73307a99a68c692b4ab33dcca1839852013cc58d78e7a8a86/fastener-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fee0c8f58e18d3ea18f106af9bf57f93e6f8c9abbb66cc3da7d47b61431d78a",
          "md5": "d9d913696461d3fe23ac1b277fac92d5",
          "sha256": "92ae17431ae49d96261a7f984beeda73cf3d8c887f7a3dfdeec2ef6f9d51e951"
        },
        "downloads": -1,
        "filename": "fastener-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9d913696461d3fe23ac1b277fac92d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17855,
        "upload_time": "2020-11-23T13:10:29",
        "upload_time_iso_8601": "2020-11-23T13:10:29.558437Z",
        "url": "https://files.pythonhosted.org/packages/5f/ee/0c8f58e18d3ea18f106af9bf57f93e6f8c9abbb66cc3da7d47b61431d78a/fastener-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "deb46cf728b0bdae988dc88988f100f637ce7f8bd63f449c3f59ddc2f427c00a",
          "md5": "f749e8356a72f9493cb61d0dee5fb3a7",
          "sha256": "806a6d7a6c198e07e9146ba365a517f44fe7029c0165f59922faddaedbae376f"
        },
        "downloads": -1,
        "filename": "fastener-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f749e8356a72f9493cb61d0dee5fb3a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20353,
        "upload_time": "2020-11-23T13:10:30",
        "upload_time_iso_8601": "2020-11-23T13:10:30.842671Z",
        "url": "https://files.pythonhosted.org/packages/de/b4/6cf728b0bdae988dc88988f100f637ce7f8bd63f449c3f59ddc2f427c00a/fastener-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4504eccb778fd3b21e589e26bdfc67454e0aa2ff1092a5e5bd35fdc08239d504",
          "md5": "83ff3a2e453d31fa33d51217fb4bff1a",
          "sha256": "fa8cd33f5bd8a4d56c4815896cb239978d530612754a04eba14d71c54ce155d4"
        },
        "downloads": -1,
        "filename": "fastener-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "83ff3a2e453d31fa33d51217fb4bff1a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17872,
        "upload_time": "2020-11-27T12:48:20",
        "upload_time_iso_8601": "2020-11-27T12:48:20.721108Z",
        "url": "https://files.pythonhosted.org/packages/45/04/eccb778fd3b21e589e26bdfc67454e0aa2ff1092a5e5bd35fdc08239d504/fastener-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dededacccacce07eabcef1315577b16846384312a6db8b9c345bdb6c3364034",
          "md5": "e3fef57744d841da81f59a411640c197",
          "sha256": "221cefad223929e6556515e231f52d8af667579d3c534e1b731ce3d2f923553e"
        },
        "downloads": -1,
        "filename": "fastener-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e3fef57744d841da81f59a411640c197",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20087,
        "upload_time": "2020-11-27T12:48:22",
        "upload_time_iso_8601": "2020-11-27T12:48:22.116978Z",
        "url": "https://files.pythonhosted.org/packages/4d/ed/edacccacce07eabcef1315577b16846384312a6db8b9c345bdb6c3364034/fastener-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4504eccb778fd3b21e589e26bdfc67454e0aa2ff1092a5e5bd35fdc08239d504",
        "md5": "83ff3a2e453d31fa33d51217fb4bff1a",
        "sha256": "fa8cd33f5bd8a4d56c4815896cb239978d530612754a04eba14d71c54ce155d4"
      },
      "downloads": -1,
      "filename": "fastener-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "83ff3a2e453d31fa33d51217fb4bff1a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17872,
      "upload_time": "2020-11-27T12:48:20",
      "upload_time_iso_8601": "2020-11-27T12:48:20.721108Z",
      "url": "https://files.pythonhosted.org/packages/45/04/eccb778fd3b21e589e26bdfc67454e0aa2ff1092a5e5bd35fdc08239d504/fastener-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4dededacccacce07eabcef1315577b16846384312a6db8b9c345bdb6c3364034",
        "md5": "e3fef57744d841da81f59a411640c197",
        "sha256": "221cefad223929e6556515e231f52d8af667579d3c534e1b731ce3d2f923553e"
      },
      "downloads": -1,
      "filename": "fastener-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "e3fef57744d841da81f59a411640c197",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 20087,
      "upload_time": "2020-11-27T12:48:22",
      "upload_time_iso_8601": "2020-11-27T12:48:22.116978Z",
      "url": "https://files.pythonhosted.org/packages/4d/ed/edacccacce07eabcef1315577b16846384312a6db8b9c345bdb6c3364034/fastener-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}