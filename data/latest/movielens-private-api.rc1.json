{
  "info": {
    "author": "Giacomo Pigani",
    "author_email": "pigani.giacomo+movielens@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# movielens-private-api\nUnofficial Python API for the Movielens unpublished API, using the `requests` module. Tested with Python 2.7 and 3.6, but should be compatible with more.\n\n### Installing movielens-private-api\nYou can either clone the repository and install the package with pip:\n```shell\n$ git clone git://github.com/Mello-Yello/movielens-private-api.git\n$ cd movielens-private-api\n$ python -m pip install .\n```\n\nOr directly from PyPI:\n```shell\n$ python -m pip install movielens-private-api\n```\n\n## Usage\n\n### Setup\n\nSince operations are performed on a specific account, you need to either log in or provide the HTTP cookie containing a valid session.\n\n\n\n```python\nfrom movielens_private_api import Movielens\nm = Movielens()\ncookie = m.login(username, password)\n```\n\nThe variable *cookie* from above can be saved to a file to be reused later during class initialization\n\n```python\nfrom movielens_private_api import Movielens\nm = Movielens(cookie)\n```\n\n### Exceptions\n\nIf the class wasn't initiated with a cookie, calling any method before `login()` will raise a `MovielensException`. This class encapsulates any API error received in the response, and is raised after an improper request. To access the original error message you have to catch the exception and use `str()` on it. \n\n```python\nfrom movielens_private_api import Movielens, MovielensException\nm = Movielens()\n\ntry:\n    m.getMe()\nexcept MovielensException as e:\n    msg = str(e)\n    print(msg)\n--------------------------------------\nOutput: \"authenticated user required\"\n```\n\n### Movielens\n\n```python\nMovielens(cookie=None, timeoutSececonds=30, api_endpoint='https://movielens.org/api/', verifySSL=True)\n```\n\n- `cookie`: The HTTP cookie for movielens with a valid session \n- `timeoutSececonds`: An exception is raised if the server has not issued a response for *timeoutSececonds* seconds\n- `api_endpoint`: The api endpoint to connect to\n- `verifySSL`: Whether or not to verify SSL\n\n\n## User info methods\n\n### login(email, password)\nLogs into the provided account, and returns the HTTP cookie\n\n### getMe()\nObtain information about the user: number of movies rated, email, username, time of account creation, time of last login, preferences, recommender used, ...\n\n### getMyTags()\nStatistics on movie related tags the user has left on different films. E.g. desert, black comedy, zombie\n\n### getMyStats()\nHistory of ratings, rating distribution, list of movies rated much more or much less that the average.\n\n\n## Movie exploration / search\n\nAll of the methods here have the *params* parameter, a dictionary with parameters to pass to the request. Possible parameters are listed in the documentation for *explore()*. *params* is optional for all the methods, and if provided is forwarded to *explore()*\n\n### explore(params)\nUsed to query Movielens, it can perform searches with various parameters.\n\n* `q`: *string* --> Is used to specify the title search\n* `sortBy`: *string* --> Possible values include: *prediction*, *releaseDate*, *avgRating*, *dateAdded*, *userRatedDate*, *userListedDate*\n* `hasWishlisted`: *string* in ['yes', 'no', 'ignore'] --> Show wishlisted movies only\n* `hasRated`: *string* in ['yes', 'no'', 'ignore'] --> Show rated movies only\n* `hasHidden`: *string* in ['yes', 'no'', 'ignore'] --> Show hidden movies only\n\n\n\n```\nm.explore({'q': 'Dune'})\n```\n\n### topPicks(params)\nReturns suggested movies based on the given ratings and the chosen recommender\n\n### recentReleases(params)\nReturns recently released movies\n\n\n### favoritesYear(params)\nReturns a selection of higly rated movies from the previous year\n\n### newAdditions(params)\nReturns movies recently added to Movielens\n\n### getMyRatings(params)\nReturns movies rated by the user\n\n### getMyWishlist(params)\nReturns movies added to the whishlist by the user\n\n### getMyHiddenMovies(params)\nReturns movies hidden by the user\n\n\n## Movie operations\n\n### rate(movieId, rating)\nRate a movie on a scale from 0 to 5, with half values (like 3.5) accepted.\n\n### addToWishlist(movieId)\nAdd a movie to the user whishlist\n\n### hide(movieId)\nHide a movie from the user. Equivalent to rating the movie -1\n\n### removeFromWishlist(movieId)\nRemove a movie from the user whishlist\n\n### resetRating(movieId)\nDelete the rating for the given movie.\n\n### unhide(movieId)\nUnhide a hidden movie. Calls resetRating()\n\n\n### getMovieInfo(movieId)\nReturns both the movie info and the interaction the user had with the movie (rating, hidden, wishlisted, predicted score, ....)\n\n\n## Miscellaneous\n\n### getGenres()\nStatistics on how many movies are in Movielens, divided by genre. Also the most frequent tags for each genre\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Mello-Yello/movielens-api",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "movielens-private-api",
    "package_url": "https://pypi.org/project/movielens-private-api/",
    "platform": "",
    "project_url": "https://pypi.org/project/movielens-private-api/",
    "project_urls": {
      "Homepage": "https://github.com/Mello-Yello/movielens-api"
    },
    "release_url": "https://pypi.org/project/movielens-private-api/0.0.1/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "A package to interact with Movielens unpublished API",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11664079,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32051ff9b30b51990b2ad2dc79cb6c68ebd22bf54dea21dbe009da0963e531e4",
          "md5": "7ae697a627151abb1301ef538b432111",
          "sha256": "4772bea51b7b1358dd04afb5e988a18e28d54b6c3f7c91a3305e4c29151e138e"
        },
        "downloads": -1,
        "filename": "movielens_private_api-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ae697a627151abb1301ef538b432111",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18350,
        "upload_time": "2021-10-08T09:33:19",
        "upload_time_iso_8601": "2021-10-08T09:33:19.984882Z",
        "url": "https://files.pythonhosted.org/packages/32/05/1ff9b30b51990b2ad2dc79cb6c68ebd22bf54dea21dbe009da0963e531e4/movielens_private_api-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bdb8d416e53ee14db185195007198749f49a3824100f39deef01af69dd9474e",
          "md5": "2febc6e842b3c1384d966618bea7937f",
          "sha256": "d52f8743fe326bb40975652fb5606c90d1d782dfffb0eb9a4be360111c750818"
        },
        "downloads": -1,
        "filename": "movielens_private_api-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2febc6e842b3c1384d966618bea7937f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17014,
        "upload_time": "2021-10-08T09:33:23",
        "upload_time_iso_8601": "2021-10-08T09:33:23.302708Z",
        "url": "https://files.pythonhosted.org/packages/4b/db/8d416e53ee14db185195007198749f49a3824100f39deef01af69dd9474e/movielens_private_api-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32051ff9b30b51990b2ad2dc79cb6c68ebd22bf54dea21dbe009da0963e531e4",
        "md5": "7ae697a627151abb1301ef538b432111",
        "sha256": "4772bea51b7b1358dd04afb5e988a18e28d54b6c3f7c91a3305e4c29151e138e"
      },
      "downloads": -1,
      "filename": "movielens_private_api-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7ae697a627151abb1301ef538b432111",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18350,
      "upload_time": "2021-10-08T09:33:19",
      "upload_time_iso_8601": "2021-10-08T09:33:19.984882Z",
      "url": "https://files.pythonhosted.org/packages/32/05/1ff9b30b51990b2ad2dc79cb6c68ebd22bf54dea21dbe009da0963e531e4/movielens_private_api-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4bdb8d416e53ee14db185195007198749f49a3824100f39deef01af69dd9474e",
        "md5": "2febc6e842b3c1384d966618bea7937f",
        "sha256": "d52f8743fe326bb40975652fb5606c90d1d782dfffb0eb9a4be360111c750818"
      },
      "downloads": -1,
      "filename": "movielens_private_api-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2febc6e842b3c1384d966618bea7937f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17014,
      "upload_time": "2021-10-08T09:33:23",
      "upload_time_iso_8601": "2021-10-08T09:33:23.302708Z",
      "url": "https://files.pythonhosted.org/packages/4b/db/8d416e53ee14db185195007198749f49a3824100f39deef01af69dd9474e/movielens_private_api-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}