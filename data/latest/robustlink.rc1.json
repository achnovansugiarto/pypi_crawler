{
  "info": {
    "author": "",
    "author_email": "Fangming Xie <f7xie@ucsd.edu>, Ethan Armand <earmand@ucsd.edu>, Eran Mukamel <emukamel@ucsd.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Robust enhancer-gene association prediction using single cell transcriptomes and epigenomes\n\n\nThis repository hosts the package `robustlink`, a tool that integrates single-cell transcriptomes (scRNA-seq) and epigenomes (snATAC-seq and snmC-seq) and identifies robust associations between cis-regulatory elements (enhancers) and genes. \n\nReference:\n- [Xie, Armand et al. 2021; Robust enhancer-gene regulation identified by single-cell transcriptomes and epigenomes](https://www.biorxiv.org/content/10.1101/2021.10.25.465795v1)\n\nCorrespondence: [Fangming Xie](mailto:f7xie@ucsd.edu) and [Eran A. Mukamel](mailto:emukamel@ucsd.edu)\n\n# Getting started\n### System requirements ###\n\nThis package is tested on a Ubuntu 18.04.6 LTS (Bionic Beaver) server. However, we expect it can be operated under a wide range of systems.\nWe recommend users to use a [conda environment](https://docs.conda.io/projects/conda/en/latest/user-guide/getting-started.html) to install dependencies. This requires users to pre-install [Anaconda](https://www.anaconda.com/products/individual).\n\n### Installation ###\n\n```bash\n# clone this repo\ngit clone https://github.com/FangmingXie/robustlink.git\n\n# setting up the environment and install dependancies using the provided `env.yml` file.\nconda env create -f ./robustlink/env.yml\nconda activate env_robustlink \n\n# install this package using pip from PyPI\npip install robustlink\n```\n\n### Demo ###\n\nThe `demo/` directory contains an example usage of this package, by linking enhancer-gene pairs using single-cell transcriptomes (scRNA-seq) and epigenome (snmC-seq, snATAC-seq). \n\n```bash\ncd ./robustlink/demo\n```\n\n1. The demo data, which includes mC, ATAC, and RNA profiles for >70,000 neurons from mouse primary motor cortex, can be downloaded with [this](https://drive.google.com/file/d/1JzP6cPTWFMj4vj5-Ie8QWBl8rpfnJa37/view?usp=sharing) link. Once downloaded, decompress it with the following command. For detailed description of data files, see `README_demodata.txt`.\n```bash\n# decompress the data under the demo/ directory\ntar -zxvf demodata.tar.gz\n```\n\n*After the data is in place. The rest of the demo takes about 5 minutes to run through.*\n\n2. With the `demodata` in place, you can run through the entire enhancer-gene association analysis with the following command:\n```bash\n# run the two scripts under demo/ that links mCG-RNA and ATAC-RNA respectively.\n ./link_mc_rna.sh && ./link_atac_rna.sh\n```\nThis will generate a result folder `demoresults` that includes integrated datasets, metacells, and correlations between enhancers and genes for mC-RNA and ATAC-RNA, respectively. For speed, this demo only randomly samples 10% cells from each dataset. However, the users can readily make the change to use more cells by tuning the `-s/--subsample_frac` argument. \n\n3. To visualize the results, run through the `visualize_links.ipynb` notebook, which generates visualizations with a few simple commands backed by our customized `CorrRes` class. See section **Visualization** below for more details.\n![](./doc/plot_dist_mc.png)\n![](./doc/plot_dist_atac.png)\n\n### Prepare your data ###\n\nYou need to prepare your data as in the demo in `.h5ad` ([AnnData](https://anndata.readthedocs.io/en/latest/)) format. Specifically, for each dataset you need:\n- `counts_${dataset}.h5ad`: a count matrix (cell-by-gene for RNA; cell-by-enhancer for mC and ATAC) of the single-cell transcriptome/epigenome data.\n- `gene_profiles_${dataset}.h5ad`: a gene-level feature matrix (average gene-level DNA methylation or ATAC signals for epigenome data). This information is not directly used for enhancer-gene association, but only to integrate cells from different datasets to identify cross-dataset metacells.\n\nIn addition, you need annotation file tables (.tsv):\n- a gene list\n- an enhancer list\n- a enhancer-gene pair list (e.g. all pairs within ~1Mbp)\n\n### CLI ###\nOn the top level, there are three main functions to choose from: \n- `scfusion`: integrate datasets (transcriptomes and epigenomes)\n- `metacell`: generate metacells (cell clusters) that are shared across datasets\n- `corr_mc` or `corr_atac`: correlate enhancer epigenetic signals (mc or atac) with gene expression \n\nRun ```python -m robustlink --help``` will show the available secondary options to choose from:\n```\nusage: python -m robustlink [-h] {scfusion,metacell,corr_mc,corr_atac} ...\n```\n\nEach option requires specific input arguments that can be revealed by their own `--help` function. \n```bash\npython -m robustlink scfusion --help\n```\n```\nusage: python -m robustlink scfusion [-h] -i DATA_DIR -o OUTDIR -id INPUT_DATASETS [INPUT_DATASETS ...] -im INPUT_MODALITIES\n                                  [INPUT_MODALITIES ...] -fd FEATURE_DATASETS [FEATURE_DATASETS ...] [-tag NAMETAG]\n                                  [--ka_smooth KA_SMOOTH] [--knn KNN] [-s SUBSAMPLE_FRACTION] [-sn SUBSAMPLE_TIMES]\n                                  [--relaxation RELAXATION] [--drop_npcs DROP_NPCS]\n                                  [--smoothing_fractions SMOOTHING_FRACTIONS [SMOOTHING_FRACTIONS ...]] [--num_pcs NUM_PCS]\n...\n```\n\n```bash\npython -m robustlink metacell --help\n```\n```\nusage: python -m robustlink metacell [-h] -i INPUT_DATASET -o OUT_DIR -tag INPUT_NAME_TAG -sn SUBSAMPLE_TIMES -r RESOLUTIONS\n                                  [RESOLUTIONS ...]\n...                                  \n```\n\n```bash\npython -m robustlink corr_mc --help\n```\n```\nusage: python -m robustlink corr_mc [-h] --tolink TOLINK --countdata_gene COUNTDATA_GENE --countdata_enh COUNTDATA_ENH -o OUT_DIR\n                                 --scfusion_dir SCFUSION_DIR --fusiondata_rna FUSIONDATA_RNA --fusiondata_mc FUSIONDATA_MC -tag\n                                 INPUT_NAME_TAG [-isub I_SUB] [-ct {pearsonr,spearmanr}] [-f] [-n NUM_METACELL_LIMIT]\n...\n```\n\n### Visualization ###\n\nWe designed the visualization module to be simple and flexible to use at the same time. Once setting up the `CorrRes` object, it takes one line to generate visualizations. Below are a few examples.\n\n```python\n# corr_res_mc is a CorrRes object generated as in visualize_links.ipynb\ncorr_res_mc.plot_corr_vs_dist()\n```\n![](./doc/plot_dist_mc.png)\n\n```python\ncorr_res_atac.plot_corr_vs_dist()\n```\n![](./doc/plot_dist_atac.png)\n\n```python\ncorr_res_mc.plot_corr_vs_dist()\n```\n![](./doc/plot_corr_dist_mc.png)\n\n```python\ncorr_res_atac.plot_corr_vs_dist()\n```\n![](./doc/plot_corr_dist_atac.png)\n\n\nWith a few minor changes, we can combine the two plots above into a single one, and control other figure properties as you like using the `axes` handles from [matplotlib](https://matplotlib.org/stable/index.html).\n```python\nfig, ax = plt.subplots(figsize=(6,4))\ncorr_res_mc  .plot_corr_vs_dist(ax)\ncorr_res_atac.plot_corr_vs_dist(ax)\nplt.show()\n```\n![](./doc/plot_corr_dist_both.png)\n\nBelow is a more complex example of how we can combine subplots.\n```python\ncols = [\n    'frac_tp', \n    'sig_frac_tp', \n    'num_pos',\n    'sig_num_pos',\n]\n\nfig, axs = plt.subplots(2, 2, figsize=(8*2,5*2), sharex=False, sharey='row')\nfor ax, col in zip(axs.flat, cols): \n    corr_res_mc  .plot_dist_dep(col, 'linked',     ax=ax)\n    corr_res_mc  .plot_dist_dep(col, 'correlated', ax=ax)\n    corr_res_atac.plot_dist_dep(col, 'linked',     ax=ax)\n    corr_res_atac.plot_dist_dep(col, 'correlated', ax=ax)\naxs[0,1].legend(bbox_to_anchor=(1,1))\nfig.tight_layout()\nplt.show()\n```\n![](./doc/plot_sig_dist.png)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "robustlink",
    "package_url": "https://pypi.org/project/robustlink/",
    "platform": null,
    "project_url": "https://pypi.org/project/robustlink/",
    "project_urls": {
      "Homepage": "https://github.com/FangmingXie/robustlink"
    },
    "release_url": "https://pypi.org/project/robustlink/0.1.4/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "A python package for linking genes and enhancers",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16661561,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "171efd4f1f1e0879a3b5724c1c3f782833f04abe49d34c753c413f295c605175",
          "md5": "9c7394e477e25eca407deab5101cd9bf",
          "sha256": "0a0f486fe4a5adffe48b64d5eca13882f5e2eb4ea47326fb6463a2cf2a6eed30"
        },
        "downloads": -1,
        "filename": "robustlink-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c7394e477e25eca407deab5101cd9bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 43941,
        "upload_time": "2023-02-02T06:19:31",
        "upload_time_iso_8601": "2023-02-02T06:19:31.595702Z",
        "url": "https://files.pythonhosted.org/packages/17/1e/fd4f1f1e0879a3b5724c1c3f782833f04abe49d34c753c413f295c605175/robustlink-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "845f4c6e9658c0fff24579ab77df2f0536a33d7b9d6cb1a5eeb0c89875a5d1f8",
          "md5": "ef175c9883f422c42fa87c015ff8a1ed",
          "sha256": "1990a37e1447834549a9e39a6b05e9b4dfdcdad3baa3dda1d7f20d7c05fb0a6f"
        },
        "downloads": -1,
        "filename": "robustlink-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ef175c9883f422c42fa87c015ff8a1ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1364054,
        "upload_time": "2023-02-02T06:19:34",
        "upload_time_iso_8601": "2023-02-02T06:19:34.579687Z",
        "url": "https://files.pythonhosted.org/packages/84/5f/4c6e9658c0fff24579ab77df2f0536a33d7b9d6cb1a5eeb0c89875a5d1f8/robustlink-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "171efd4f1f1e0879a3b5724c1c3f782833f04abe49d34c753c413f295c605175",
        "md5": "9c7394e477e25eca407deab5101cd9bf",
        "sha256": "0a0f486fe4a5adffe48b64d5eca13882f5e2eb4ea47326fb6463a2cf2a6eed30"
      },
      "downloads": -1,
      "filename": "robustlink-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9c7394e477e25eca407deab5101cd9bf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 43941,
      "upload_time": "2023-02-02T06:19:31",
      "upload_time_iso_8601": "2023-02-02T06:19:31.595702Z",
      "url": "https://files.pythonhosted.org/packages/17/1e/fd4f1f1e0879a3b5724c1c3f782833f04abe49d34c753c413f295c605175/robustlink-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "845f4c6e9658c0fff24579ab77df2f0536a33d7b9d6cb1a5eeb0c89875a5d1f8",
        "md5": "ef175c9883f422c42fa87c015ff8a1ed",
        "sha256": "1990a37e1447834549a9e39a6b05e9b4dfdcdad3baa3dda1d7f20d7c05fb0a6f"
      },
      "downloads": -1,
      "filename": "robustlink-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "ef175c9883f422c42fa87c015ff8a1ed",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 1364054,
      "upload_time": "2023-02-02T06:19:34",
      "upload_time_iso_8601": "2023-02-02T06:19:34.579687Z",
      "url": "https://files.pythonhosted.org/packages/84/5f/4c6e9658c0fff24579ab77df2f0536a33d7b9d6cb1a5eeb0c89875a5d1f8/robustlink-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}