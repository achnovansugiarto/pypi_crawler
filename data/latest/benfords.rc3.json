{
  "info": {
    "author": "Daniel McCarville",
    "author_email": "daniel.mccarville@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Office/Business",
      "Topic :: Office/Business :: Financial :: Accounting",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# Benfords\nBenfords provides a series of functions intended to make Benford's Law research and usage more convenient.\n\n\n\n## Usage\nWith Benfords you can conduct quick comparisons to Benfords law, create outputs like charts and .csv files, generate random Benford-variates, as well as calculate the expected probabilities or extract your own empirical digit frequencies.\n\n### Comparisons to Benford's Law\nThe benfords() function allows you to quickly compare your data's digits to Benford's Law:\n```python\nimport benfords\n\n#Generate some random data\ntest_data = variate(1000)\n\n#Compare to Benford's Law\nbenfords(test_data)\n#  Digit  Expected Value  Actual Value  Difference\n#0     1        0.301030         0.316    0.014970\n#1     2        0.176091         0.178    0.001909\n#2     3        0.124939         0.113   -0.011939\n#3     4        0.096910         0.097    0.000090\n#4     5        0.079181         0.075   -0.004181\n#5     6        0.066947         0.072    0.005053\n#6     7        0.057992         0.059    0.001008\n#7     8        0.051153         0.041   -0.010153\n#8     9        0.045757         0.049    0.003243\n```\n\nUse test() to calculate test statistics:\n```python\ntest(benfords(test_data), test_statistic='d')\n# 0.01914657325117365\n```\nCurrently, test() supports only the d statistic described in [Cho and Gaines, 2012](http://cho.pol.illinois.edu/wendy/papers/bentas.pdf). Future releases will include additional test statistics.\n\nbenfords() can also output charts and csv:\n```python\nbenfords(test_data, output_csv=True, output_plot=True, filename='2021-01-31 Analysis')\n```\n![Figure showing expected and theoretical digit frequencies](https://raw.githubusercontent.com/danielmccarville/Benfords/main/assets/Demo%20Figure.png)\n\nThere are also parmeters for examining the digits beyond the first, as well as multiple digits at a time. This example uses the second and third digits:\n```python\nbenfords(test_data, start_position=2, length=2)\n#   Digit  Expected Value  Actual Value  Difference\n#0      0        0.119679         0.000   -0.119679\n#1      1        0.113890         0.000   -0.113890\n#2      2        0.108821         0.000   -0.108821\n#3      3        0.104330         0.000   -0.104330\n#4      4        0.100308         0.000   -0.100308\n#..   ...             ...           ...         ...\n#95    95        0.027760         0.002   -0.025760\n#96    96        0.027558         0.009   -0.018558\n#97    97        0.027358         0.005   -0.022358\n#98    98        0.027162         0.004   -0.023162\n#99    99        0.026969         0.007   -0.019969\n#\n#[100 rows x 4 columns]\n```\n\n### Generate random Benford-distributed digits.\nYou can generate random Benford-distributed digits with the variate() function. Just specify how many you want:\n```python\nvariate(5)\n\n# [6.494198781949683, 5.511615661880242, 7.311726835973362, 1.6809486480388234, 8.877345103827716]\n```\nVariates are generated according to the method in [Jamain, 2001](http://wwwf.imperial.ac.uk/~nadams/classificationgroup/Benfords-Law.pdf).\n\n### Expected Probabilities\nCalculate the probabilities expected under Benford's Law with expectation(). What's the expected probability that the second digit will be 5?\n```python\nexpectation(5, 2)\n\n# 0.09667723580232242\n```\n\n### Extract the significant digits from your data\nfsd() and nsd() return the significant digits of your input data. They currently enjoy scalars (integers and floats), lists, 1d numpy arrays, and pandas dataframes.\n\nfsd() returns the first significant digit according to the significand formula provided by [Berger and Hill, 2015](https://press.princeton.edu/books/hardcover/9780691163062/an-introduction-to-benfords-law). \n\n```python\ntest = [5, 0.321, -2989.2, -0.00001]\n\nfsd(test) \n#array([5., 3., 2., 1.])\n```\n\n#NSD() returns the nth digit of your data. It always returns a numpy array containing strings. It includes parameters to select the second, third, and higher digits, as well as control the number of digits. This example shows the 4th significant digits.\n```python\nnsd(test, 4) \n#array(['0', '1', '8', '0']\n\n```\n## Citation\nIf you use this work in your own research, please cite it in your publications:\n```\nMcCarville, Daniel. Benford's Law, (2021). https://github.com/danielmccarville/Benfords\n```\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/danielmccarville/Benfords",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "benfords",
    "package_url": "https://pypi.org/project/benfords/",
    "platform": "",
    "project_url": "https://pypi.org/project/benfords/",
    "project_urls": {
      "Homepage": "https://github.com/danielmccarville/Benfords"
    },
    "release_url": "https://pypi.org/project/benfords/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Provides a series of functions to make Benford's Law usage more convenient.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9282393,
  "releases": {
    "1.0": [],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1193d5770c661e0c36f2829cd5641dae4f93a41b3c203f3faa7b6779ebe6e80c",
          "md5": "6cf45f54f5c5c41a2b14a717c10222b6",
          "sha256": "3209e0d71e16a29e9889e8bd09ef21fef4017f2e59b6564da67e3c919dac39b2"
        },
        "downloads": -1,
        "filename": "benfords-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6cf45f54f5c5c41a2b14a717c10222b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5845,
        "upload_time": "2021-01-24T23:42:17",
        "upload_time_iso_8601": "2021-01-24T23:42:17.096412Z",
        "url": "https://files.pythonhosted.org/packages/11/93/d5770c661e0c36f2829cd5641dae4f93a41b3c203f3faa7b6779ebe6e80c/benfords-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b58946431fb9cd040a770f320c916f3303477e4d38a966e564ead8ba5e60d5a",
          "md5": "1c5143a93694d2c01ec8a5b31b19099f",
          "sha256": "f28c1cf57a242ce8fb54a86250e0dec8b35be96d5b6486e2114dcc37afcbe21a"
        },
        "downloads": -1,
        "filename": "benfords-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1c5143a93694d2c01ec8a5b31b19099f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5201,
        "upload_time": "2021-01-24T23:42:18",
        "upload_time_iso_8601": "2021-01-24T23:42:18.632035Z",
        "url": "https://files.pythonhosted.org/packages/6b/58/946431fb9cd040a770f320c916f3303477e4d38a966e564ead8ba5e60d5a/benfords-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37edbfe9f3e352029eeb89b4c4f50b978097cbb83437ea9c3fca9e7c0f4d6d42",
          "md5": "dfa02b6805f061e0860954a174eabe0a",
          "sha256": "5a5e7728375aca4230aaefb5a4eed27bfed978c5e2c85c60216ab1f8aedd66e6"
        },
        "downloads": -1,
        "filename": "benfords-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dfa02b6805f061e0860954a174eabe0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6394,
        "upload_time": "2021-02-01T04:38:26",
        "upload_time_iso_8601": "2021-02-01T04:38:26.239833Z",
        "url": "https://files.pythonhosted.org/packages/37/ed/bfe9f3e352029eeb89b4c4f50b978097cbb83437ea9c3fca9e7c0f4d6d42/benfords-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "288fe6ece283188ac05fd64b597028cadfce8a518300bfe9a60b5b105317d6d5",
          "md5": "7ee9ed8a972d79ca69c30300aaa7a5ed",
          "sha256": "c48b6945aef8f5ccec7e67a54ca37f42f8b231dd0723fbc48dd7c789f414ef50"
        },
        "downloads": -1,
        "filename": "benfords-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7ee9ed8a972d79ca69c30300aaa7a5ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5703,
        "upload_time": "2021-02-01T04:38:27",
        "upload_time_iso_8601": "2021-02-01T04:38:27.330098Z",
        "url": "https://files.pythonhosted.org/packages/28/8f/e6ece283188ac05fd64b597028cadfce8a518300bfe9a60b5b105317d6d5/benfords-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37edbfe9f3e352029eeb89b4c4f50b978097cbb83437ea9c3fca9e7c0f4d6d42",
        "md5": "dfa02b6805f061e0860954a174eabe0a",
        "sha256": "5a5e7728375aca4230aaefb5a4eed27bfed978c5e2c85c60216ab1f8aedd66e6"
      },
      "downloads": -1,
      "filename": "benfords-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dfa02b6805f061e0860954a174eabe0a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6394,
      "upload_time": "2021-02-01T04:38:26",
      "upload_time_iso_8601": "2021-02-01T04:38:26.239833Z",
      "url": "https://files.pythonhosted.org/packages/37/ed/bfe9f3e352029eeb89b4c4f50b978097cbb83437ea9c3fca9e7c0f4d6d42/benfords-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "288fe6ece283188ac05fd64b597028cadfce8a518300bfe9a60b5b105317d6d5",
        "md5": "7ee9ed8a972d79ca69c30300aaa7a5ed",
        "sha256": "c48b6945aef8f5ccec7e67a54ca37f42f8b231dd0723fbc48dd7c789f414ef50"
      },
      "downloads": -1,
      "filename": "benfords-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7ee9ed8a972d79ca69c30300aaa7a5ed",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5703,
      "upload_time": "2021-02-01T04:38:27",
      "upload_time_iso_8601": "2021-02-01T04:38:27.330098Z",
      "url": "https://files.pythonhosted.org/packages/28/8f/e6ece283188ac05fd64b597028cadfce8a518300bfe9a60b5b105317d6d5/benfords-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}