{
  "info": {
    "author": "syfun",
    "author_email": "sunyu418@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Django Graphql\n\n## gqlgen\n\ngqlgen is a generator tool for GraphQL.\n\n```shell script\nUsage: gqlgen [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  all             Generate all schema types\n  field-resolver  Generate field resolver.\n  type            Generate one type\n  type-resolver   Generate all schema types\n\n```\n\n\n## How to use\n\n```python\n# urls.py\nfrom django.contrib import admin\nfrom django.urls import path\n\nfrom djgql.views import GraphQLView\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('graphql/', GraphQLView.as_view())\n]\n```\n\n```python\n# utils.py\ndef context_builder():\n    return {'version': 1}\n```\n\n```python\n# settings.py\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'djgql.auth.middleware.BasicAuthMiddleware',\n]\nGRAPHQL_SCHEMA_FILE = os.path.join(BASE_DIR, 'starwar.gql')\nGRAPHQL = {\n    'SCHEMA': 'starwar.schema.schema',\n    'ENABLE_PLAYGROUND': True,\n    'CONTEXT_BUILDER': 'starwar.utils.context_builder\n}\n```\n\n```python\nimport typing\nfrom enum import Enum\n\nfrom django.conf import settings\nfrom gql import query, gql, type_resolver, enum_type, field_resolver\nfrom gql.build_schema import build_schema_from_file\nfrom djgql.auth import login_required\nfrom pydantic import BaseModel\n\ntype_defs = gql(\"\"\"\ntype Query {\n    hello(name: String!): String!\n}\n\"\"\")\n\n\n@enum_type\nclass Episode(Enum):\n    NEWHOPE = 1\n    EMPIRE = 2\n    JEDI = 3\n\n\nclass Character(BaseModel):\n    id: typing.Text\n    name: typing.Optional[typing.Text]\n    friends: typing.Optional[typing.List[typing.Optional['Character']]]\n    appears_in: typing.Optional[typing.List[typing.Optional[Episode]]]\n\n\nclass Human(Character):\n    id: typing.Text\n    name: typing.Optional[typing.Text]\n    friends: typing.Optional[typing.List[typing.Optional[Character]]]\n    appears_in: typing.Optional[typing.List[typing.Optional[Episode]]]\n    home_planet: typing.Optional[typing.Text]\n\n\nclass Droid(Character):\n    id: typing.Text\n    name: typing.Optional[typing.Text]\n    friends: typing.Optional[typing.List[typing.Optional[Character]]]\n    appears_in: typing.Optional[typing.List[typing.Optional[Episode]]]\n    primary_function: typing.Optional[typing.Text]\n\n\n@query\n@login_required\ndef hero(parent, info, episode: typing.Optional[Episode]) -> typing.Optional[Character]:\n    request = info.context['request']\n    print(request.user)\n    return Human(id='test')\n\n\n@field_resolver('Human', 'name')\ndef human_name(parent, info):\n    return 'Jack'\n\n\n@type_resolver('Character')\ndef resolve_character_type(obj, info, type_):\n    if isinstance(obj, Human):\n        return 'Human'\n    if isinstance(obj, Droid):\n        return 'Droid'\n    return None\n\n\nschema = build_schema_from_file(settings.GRAPHQL_SCHEMA_FILE)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/syfun/django-graphql",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-gql",
    "package_url": "https://pypi.org/project/django-gql/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-gql/",
    "project_urls": {
      "Homepage": "https://github.com/syfun/django-graphql"
    },
    "release_url": "https://pypi.org/project/django-gql/0.0.1/",
    "requires_dist": [
      "python-gql (<0.1)",
      "django (>=3,<4)"
    ],
    "requires_python": ">=3.7",
    "summary": "",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8025489,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5254b8f210564529e65ee6258cdab443561ebc6e240c873ebf4742436160883",
          "md5": "12f852ebd975415b4c511b58b36347c8",
          "sha256": "0cdd2172ee47d73700e5fefbf2522c3f25daef399e54a98d1ed818befb036b2c"
        },
        "downloads": -1,
        "filename": "django_gql-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12f852ebd975415b4c511b58b36347c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8721,
        "upload_time": "2020-08-24T06:45:46",
        "upload_time_iso_8601": "2020-08-24T06:45:46.796395Z",
        "url": "https://files.pythonhosted.org/packages/f5/25/4b8f210564529e65ee6258cdab443561ebc6e240c873ebf4742436160883/django_gql-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc9d1fb4cc29f47fac42b5b535c50c91ecaf4b5a4bb48f4b6d3b02c25a99f3e3",
          "md5": "2ddd8c755d8b9bd3c7232b3803e37342",
          "sha256": "cd72b1ba62e06f52ef1bfc7c048ea775028660dbc6baf0e8b5f2957c5990914f"
        },
        "downloads": -1,
        "filename": "django-gql-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2ddd8c755d8b9bd3c7232b3803e37342",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8393,
        "upload_time": "2020-08-24T06:45:39",
        "upload_time_iso_8601": "2020-08-24T06:45:39.002124Z",
        "url": "https://files.pythonhosted.org/packages/dc/9d/1fb4cc29f47fac42b5b535c50c91ecaf4b5a4bb48f4b6d3b02c25a99f3e3/django-gql-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f5254b8f210564529e65ee6258cdab443561ebc6e240c873ebf4742436160883",
        "md5": "12f852ebd975415b4c511b58b36347c8",
        "sha256": "0cdd2172ee47d73700e5fefbf2522c3f25daef399e54a98d1ed818befb036b2c"
      },
      "downloads": -1,
      "filename": "django_gql-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12f852ebd975415b4c511b58b36347c8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8721,
      "upload_time": "2020-08-24T06:45:46",
      "upload_time_iso_8601": "2020-08-24T06:45:46.796395Z",
      "url": "https://files.pythonhosted.org/packages/f5/25/4b8f210564529e65ee6258cdab443561ebc6e240c873ebf4742436160883/django_gql-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc9d1fb4cc29f47fac42b5b535c50c91ecaf4b5a4bb48f4b6d3b02c25a99f3e3",
        "md5": "2ddd8c755d8b9bd3c7232b3803e37342",
        "sha256": "cd72b1ba62e06f52ef1bfc7c048ea775028660dbc6baf0e8b5f2957c5990914f"
      },
      "downloads": -1,
      "filename": "django-gql-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2ddd8c755d8b9bd3c7232b3803e37342",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 8393,
      "upload_time": "2020-08-24T06:45:39",
      "upload_time_iso_8601": "2020-08-24T06:45:39.002124Z",
      "url": "https://files.pythonhosted.org/packages/dc/9d/1fb4cc29f47fac42b5b535c50c91ecaf4b5a4bb48f4b6d3b02c25a99f3e3/django-gql-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}