{
  "info": {
    "author": "Mitchell Matsumori-Kelly <mitchell@naluscientific.com>, Marcus Luck <marcus@naluscientific.com>",
    "author_email": "Mitchell Matsumori-Kelly <mitchell@naluscientific.com>, Marcus Luck <marcus@naluscientific.com>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# NaluDAQ_rs\r\n\r\nRust backend for NaluDaq.\r\n\r\n\r\n## Setup\r\n\r\nMake sure the [Rust toolchain](https://rustup.rs/) is installed.\r\n\r\nClone the repository to a suitable location:\r\n```sh\r\n$ git clone http://gitlab.naluscientific.com/nalusoft/prototypes/naludaq_rs.git\r\n```\r\n\r\nDone!\r\n\r\n## Building the backend for python\r\n\r\n```sh\r\npip install maturin\r\nmaturin build\r\n```\r\n\r\n## Building the Backend\r\n\r\nThe backend is easy to build:\r\n\r\n```sh\r\n$ cd naludaq_rs\r\n$ cargo build --release\r\n```\r\n\r\nDevelopers may ommit the `--release` flag for unoptimized builds.\r\n\r\n\r\n### Building for RPI4\r\nBuilding using docker:\r\n\r\n```sh\r\ndocker build . -t cc/rpi4\r\n```\r\nto make the container, the build the app with:\r\n```sh\r\ndocker run --rm -v ${pwd}:/app cc/rpi4\r\n```\r\n\r\n## Running the Backend\r\nTo run the backend, run the following command:\r\n\r\n```sh\r\n$ cargo run  --release -- [<ROOT>] [--addr <ADDR>] [-d | --debug]  [--api]\r\n```\r\n\r\nWhere the arguments are as follows:\r\n- `<ROOT>` is the root directory to run the server in. By default, it is the current working directory of the terminal it was run from.\r\n- `--addr <ADDR>` is the address to bind the server to in the format `IP:PORT`. If unspecified, the server is bound to an open port on the loopback address.\r\n- `-d | --debug` shows additional debug messages.\r\n- `--api` will open the Swagger UI in the system browser.\r\n\r\n## Documentation\r\nThe documentation can be built using the following command:\r\n```sh\r\n$ cargo doc --document-private-items --no-deps\r\n```\r\n\r\n\r\n## The API\r\nNaluDAQ_rs is controlled through its [REST API](https://www.redhat.com/en/topics/api/what-is-a-rest-api) over\r\n[HTTP](https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview). This allows it to be controlled from any\r\nmachine connected to a network.\r\n\r\nThe backend can be controlled on the fly via Swagger. Use the `--api` flag when starting the backend to display the Swagger UI.\r\n\r\nAlternatively, the (non-interactive) Swagger UI may be viewed without the backend by running the\r\nfollowing command:\r\n\r\n```sh\r\n$ cargo run --bin api -- [--output OUTPUT_FILE]\r\n```\r\n\r\nIf the `--output` argument is provided, the OpenAPI JSON data describing\r\nthe API is written to the file and the program will immediately exit.\r\n\r\n\r\n## Developers\r\n\r\n### Profiling\r\nUse the build profile called `release-with-debug for building release mode with debug symbols.\r\n\r\n```sh\r\n$ cargo build --profile release-with-debug\r\n```\r\n\r\nOn Windows machines with Intel processors you can use [Intel VTune](https://www.intel.com/content/www/us/en/developer/tools/oneapi/vtune-profiler.html#gs.q7qmtk)\r\nto profile the backend.\r\n\n",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "naludaq-rs",
    "package_url": "https://pypi.org/project/naludaq-rs/",
    "platform": null,
    "project_url": "https://pypi.org/project/naludaq-rs/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/naludaq-rs/0.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Rust backend for NaluDAQ",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17421437,
  "releases": {
    "0.1.2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "79fa19eb7d78926bb00208d8325d92c9f66c5da283eac5c1900650b2d8bc06ad",
          "md5": "8ba41b84e76f0ee33dc06d8b390fa8f9",
          "sha256": "e56938071e3bc68b84bc393743f42919533251f74c1d8ebe468bbe18616ed88b"
        },
        "downloads": -1,
        "filename": "naludaq_rs-0.1.2-cp39-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "8ba41b84e76f0ee33dc06d8b390fa8f9",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 5795684,
        "upload_time": "2023-03-23T21:01:43",
        "upload_time_iso_8601": "2023-03-23T21:01:43.041295Z",
        "url": "https://files.pythonhosted.org/packages/79/fa/19eb7d78926bb00208d8325d92c9f66c5da283eac5c1900650b2d8bc06ad/naludaq_rs-0.1.2-cp39-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "79fa19eb7d78926bb00208d8325d92c9f66c5da283eac5c1900650b2d8bc06ad",
        "md5": "8ba41b84e76f0ee33dc06d8b390fa8f9",
        "sha256": "e56938071e3bc68b84bc393743f42919533251f74c1d8ebe468bbe18616ed88b"
      },
      "downloads": -1,
      "filename": "naludaq_rs-0.1.2-cp39-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "8ba41b84e76f0ee33dc06d8b390fa8f9",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": null,
      "size": 5795684,
      "upload_time": "2023-03-23T21:01:43",
      "upload_time_iso_8601": "2023-03-23T21:01:43.041295Z",
      "url": "https://files.pythonhosted.org/packages/79/fa/19eb7d78926bb00208d8325d92c9f66c5da283eac5c1900650b2d8bc06ad/naludaq_rs-0.1.2-cp39-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}