{
  "info": {
    "author": "Filip Krikava",
    "author_email": "krikava@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "#Help on module kuler:\n\n###NAME\n    kuler - Unofficial API for Adobe Kuler service (kuler.adobe.com).\n\n###FILE\n    /Users/krikava/Documents/Projects/pykuler/src/kuler.py\n\n###DESCRIPTION\n    Sample example that prints out TOP 10 themes sorted by raiting (default)\n    \n    k = Kuler(apiKey)\n    for (i, theme) in enumerate(k.list(maxItems=10)):\n        print '%d. %s' % (i, theme)\n    \n    More information: http://learn.adobe.com/wiki/display/kulerdev/B.+Feeds\n\n###CLASSES\n     Color\n     Kuler\n     Theme\n    \n     class Color\n     |  Class wrapping an RGB color\n     |  \n     |  Methods defined here:\n     |  \n     |  __init__(self, r, g, b)\n     |  \n     |  __str__(self)\n     |  \n     |  asRGB(self)\n     |  \n     |  asRGB16(self)\n     |  \n     |  ----------------------------------------------------------------------\n     |  Class methods defined here:\n     |  \n     |  fromHexRGB(cls, hexrgb) from __builtin__.classobj\n     |      Factory method that creates a Color instance from HTML like color string\n     |      #rrggbb with 8 or 16 bit.\n     |  \n     |  fromRGB(cls, r, g, b) from __builtin__.classobj\n    \n    class Kuler\n     |  Facade of the Kuler API\n     |  \n     |  Methods defined here:\n     |  \n     |  __init__(self, apiKey)\n     |      apiKey: Mandatory. API key obtained from the Kuler service. (You can\n     |      get it from http://kuler.adobe.com/api)\n     |  \n     |  list(self, listType='raiting', startIndex=0, itemsPerPage=20, timeSpan=0, maxItems=100)\n     |      Returns a generator of themes from a feeds of a specified type. \n     |      \n     |      listType: Optional. One of the strings recent (the default), popular,\n     |      rating, or random.\n     |      \n     |      startIndex: Optional. A 0-based index into the list that specifies the\n     |      first item to display. Default is 0, which displays the first item in\n     |      the list.\n     |      \n     |      itemsPerPage: Optional. The maximum number of items to display on a\n     |      page, in the range 1..100. Default is 20.\n     |      \n     |      timeSpan: Optional. Value in days to limit the set of themes retrieved.\n     |      Default is 0, which retrieves all themes without time limit.  \n     |      \n     |      maxItems: Optional. The number of items returned at most.\n     |  \n     |  search(self, themeID=None, userID=None, email=None, tag=None, hex=None, title=None, startIndex=0, itemsPerPage=20, maxItems=100)\n     |      Returns a generator of themes from a feeds that meet specified search criteria.\n     |      \n     |      Caller needs to specify one of the following parameter:\n     |      themeID: search on a specific themeID\n     |      userID: search on a specific userID\n     |      email: search on a specific email\n     |      tag: search on a tag word\n     |      hex: search on a hex color value (can be in the format \"ABCDEF\" or \"0xABCDEF\")\n     |      title: search on a theme title\n     |      \n     |      startIndex: Optional. A 0-based index into the list that specifies the\n     |      first item to display. Default is 0, which displays the first item in\n     |      the list.\n     |      \n     |      itemsPerPage: Optional. The maximum number of items to display on a\n     |      page, in the range 1..100. Default is 20.\n     |      \n     |      maxItems: Optional. The number of items returned at most.\n    \n    class Theme\n     |  Class wrapping a Kuler theme.\n     |  \n     |  Properties:\n     |  title: theme title name\n     |  themeId: theme ID\n     |  colors: a tuple of Color instances in defined in the theme\n     |  \n     |  Methods defined here:\n     |  \n     |  __getitem__(self, index)\n     |  \n     |  __init__(self, themeID, title, colors)\n     |      colors: Mandatory. Parameter that is an iterable object containing Color instances.\n     |  \n     |  __iter__(self)\n     |  \n     |  __len__(self)\n     |  \n     |  __str__(self)\n     |  \n     |  items(self)\n\n###FUNCTIONS\n    main()\n        Sample example",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fikovnik/pykuler",
    "keywords": "colors kuler adobe",
    "license": "http://www.opensource.org/licenses/mit-license.php",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pykuler",
    "package_url": "https://pypi.org/project/pykuler/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pykuler/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/fikovnik/pykuler"
    },
    "release_url": "https://pypi.org/project/pykuler/1.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Unofficial Python API for Adobe Kuler.",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 345474,
  "releases": {
    "1.0": [],
    "1.1": [],
    "1.2": []
  },
  "urls": [],
  "vulnerabilities": []
}