{
  "info": {
    "author": "Akascape",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# TkDial\r\n**This is a library containing some circular rotatory dial-knob widgets for Tkinter. It can be used in place of normal sliders and scale.**\r\n\r\n[![PyPI](https://img.shields.io/pypi/v/tkdial)](https://pypi.org/project/tkdial)\r\n![Platform](https://img.shields.io/powershellgallery/p/Pester?color=blue)\r\n[![Downloads](https://static.pepy.tech/personalized-badge/tkdial?period=total&units=international_system&left_color=green&right_color=brightgreen&left_text=Downloads)](https://pepy.tech/project/tkdial)\r\n\r\n## Installation\r\n```\r\npip install tkdial\r\n```\r\n\r\n# Dial Widget\r\n\r\n## Usage\r\n\r\n**Simple Example:**\r\n```python\r\nimport tkinter as tk\r\nfrom tkdial import Dial\r\n\r\napp = tk.Tk()\r\n\r\ndial = Dial(app)\r\ndial.grid(padx=10, pady=10)\r\n\r\napp.mainloop()\r\n```\r\n![Screenshot1](https://user-images.githubusercontent.com/89206401/202906601-89bd91ed-d685-4a4e-9ddc-7824f278ca4b.png)\r\n\r\n### **Example 2**\r\n```python\r\nimport tkinter as tk\r\nfrom tkdial import Dial\r\n\r\napp = tk.Tk()\r\n\r\n# some color combinations\r\ncolor_combinations = [(\"yellow\", \"red\"), (\"white\", \"cyan\"), (\"red\", \"pink\"), (\"black\", \"green\"),\r\n                    (\"white\", \"black\"), (\"blue\", \"blue\"), (\"green\", \"green\"), (\"white\", \"pink\"),\r\n                    (\"red\", \"black\"), (\"green\", \"cyan\"), (\"cyan\",\"black\"), (\"pink\", \"blue\")]\r\n\r\nfor i in range (12):\r\n    dial = Dial(master=app, color_gradient=color_combinations[i],\r\n                unit_length=10, radius=40, needle_color=color_combinations[i][1])\r\n    if i<6:\r\n        dial.grid(row=1, padx=10, pady=10, column=i)\r\n    else:\r\n        dial.grid(row=2, padx=10, pady=10, column=11-i)\r\n\r\napp.mainloop()\r\n```\r\n![Screenshot2](https://user-images.githubusercontent.com/89206401/202906615-e4c484de-ed79-495e-b12f-d30b9d238eac.png)\r\n\r\n### **Example 3**\r\n\r\n**Implemented with [CustomTkinter](https://github.com/TomSchimansky/CustomTkinter)**\r\n\r\n```python\r\nimport customtkinter\r\nfrom tkdial import Dial\r\n\r\ncustomtkinter.set_appearance_mode(\"Dark\") \r\n              \r\napp = customtkinter.CTk()\r\napp.geometry(\"350x400\")\r\n                \r\napp.grid_columnconfigure((0,1), weight=1)\r\napp.grid_rowconfigure((0,1), weight=1)\r\n\r\nframe_1 = customtkinter.CTkFrame(master=app)\r\nframe_1.grid(padx=20, pady=20, sticky=\"nswe\")\r\n\r\ndial1 = Dial(master=frame_1, color_gradient=(\"green\", \"cyan\"), bg=\"#2a2d2e\",\r\n             text_color=\"white\", text=\"Current: \", unit_length=10, radius=50)\r\ndial1.grid(padx=20, pady=20)\r\n\r\ndial2 = Dial(master=frame_1, color_gradient=(\"yellow\", \"white\"), bg=\"#2a2d2e\",\r\n             text_color=\"white\", text=\"Position: \", unit_length=10, radius=50)\r\ndial2.grid(padx=20, pady=20)\r\n\r\ndial3 = Dial(master=frame_1, color_gradient=(\"white\", \"pink\"), bg=\"#2a2d2e\",\r\n             text_color=\"white\", text=\" \", unit_length=10, radius=50)\r\ndial3.grid(row=0, column=1, padx=20, pady=20)\r\n\r\ndial4 = Dial(master=frame_1, color_gradient=(\"green\", \"green\"), bg=\"#2a2d2e\",\r\n             text_color=\"white\", text=\"\", unit_width=15, radius=50)\r\ndial4.grid(row=1, column=1, padx=20, pady=20)\r\n\r\napp.mainloop()                  \r\n```\r\n![Screenshot 3](https://user-images.githubusercontent.com/89206401/202906638-a1c863b7-54b0-4e7a-9619-415e28b3ab51.png)\r\n\r\n## Arguments:\r\n  | Parameters  | Description |\r\n  | -------- | ----------- |\r\n  | _master_ | The master parameter is the parent widget |\r\n  | _bg_  | The default background color of the dial widget |\r\n  | _width_ | Define width of the widget manually (optional) |\r\n  | _height_ | Define height of the widget manually (optional) |\r\n  | _x_ | Determines the horizontal position of the dial in the canvas |\r\n  | _y_ | Determines the vertical position of the dial in the canvas |\r\n  | _start_ |  The start point of the range from where the needle will rotate |\r\n  | _end_ |  The end point of the range |\r\n  | _radius_ | Determines the distance of the unit lines between the center and the edge and also the length of the needle line |\r\n  | _unit_length_ | Specify the length of the lines |\r\n  | _unit_width_ | Specify the width of the lines |\r\n  | _unit_color_ |  Specify the color of the unit lines |\r\n  | _needle_color_ | Specify the color of the needle line |\r\n  | _color_gradient_ | Specify which color gradient will be used for the units |\r\n  | _text_ | A string that will be displayed under the dial object |\r\n  | _text_color_ | Specify the color of the text that will be displayed under the dial object |\r\n  | _text_font_ | Specify the font of the text that will be displayed under the dial object |\r\n  | _integer_ | A boolean (True/False), displays only the integer value in text if True (default=False) |\r\n  | _scroll_ | A boolean (True/False), enables mouse scroll in dial (default=True) |\r\n  | _scroll_steps_ | Number of steps per scroll |\r\n  | _state_ | Specify the state of the needle |\r\n  | _command_ | Call a function whenever the needle is rotated |\r\n  \r\n### Methods:\r\n\r\n  | Methods   | Description |\r\n  |-----------|-------------|\r\n  | _.get()_ | get the current value of the dial |\r\n  | _.set()_ | set the value of the dial |\r\n  | _.configure()_ | configure parameters of the dial |\r\n \r\n# Scroll Knob\r\n\r\n## Usage\r\n**Simple Example**\r\n```python\r\nimport tkinter\r\nfrom tkdial import ScrollKnob\r\n    \r\napp = tkinter.Tk()\r\n\r\nknob = ScrollKnob(app, start=0, end=100, steps=10)\r\nknob.grid()\r\n                \r\napp.mainloop()      \r\n```\r\n![Simple Program](https://user-images.githubusercontent.com/89206401/204139370-73c66402-ec9a-4edc-9891-c63b209fd5e4.png)\r\n\r\n### **Different Knob styles:**\r\n```python\r\nimport customtkinter\r\nfrom tkdial import ScrollKnob\r\n\r\napp = customtkinter.CTk()\r\napp.geometry(\"500x500\")\r\n\r\nknob1 = ScrollKnob(app, bg=\"#212325\", radius=250, progress_color=\"#87ceeb\", steps=10,\r\n                 border_width=40, start_angle=90, inner_width=1, outer_width=1,\r\n                 text_font=\"calibri 20\", text_color=\"#87ceeb\", bar_color=\"black\")\r\nknob1.grid(row=0, column=0)\r\n\r\nknob2 = ScrollKnob(app, bg=\"#212325\", radius=200, progress_color=\"#7eff00\",\r\n                 border_width=40, start_angle=90, inner_width=1, outer_width=0,\r\n                 text_font=\"calibri 20\", text_color=\"#7eff00\", integer=True,\r\n                 fg=\"#212325\")\r\nknob2.grid(row=1, column=0)\r\n\r\nknob3 = ScrollKnob(app, bg=\"#212325\", text=\" \", radius=250, progress_color=\"white\",\r\n                   bar_color=\"#2937a6\", border_width=30, start_angle=0, inner_width=5,\r\n                   outer_width=0, text_font=\"calibri 20\", steps=1, text_color=\"white\", fg=\"#303ba1\")\r\nknob3.grid(row=0, column=1)\r\n\r\nknob4 = ScrollKnob(app, bg=\"#212325\", text=\" \", steps=10, radius=200, bar_color=\"#212325\", \r\n                   progress_color=\"yellow\", outer_color=\"yellow\", outer_length=10, \r\n                   border_width=30, start_angle=270, inner_width=0, outer_width=5, text_font=\"calibri 20\", \r\n                   text_color=\"white\", fg=\"#212325\")\r\nknob4.grid(row=1, column=1)\r\n                \r\napp.mainloop()      \r\n```\r\n![Complex example](https://user-images.githubusercontent.com/89206401/204139428-c3c3c313-539f-4867-9d50-8876a19432ee.png)\r\n\r\n## Arguments:\r\n  | Parameters  | Description |\r\n  | -------- | ----------- |\r\n  | _master_ | The master parameter is the parent widget |\r\n  | _bg_  | The default background color of the knob widget |\r\n  | _width_ | Define width of the widget manually (optional) |\r\n  | _height_ | Define height of the widget manually (optional) |\r\n  | _start_ |  The start point of the range from where the bar will rotate |\r\n  | _end_ |  The end point of the range |\r\n  | _radius_ | Define the radius of the knob |\r\n  | _border_width_ | Define the width of progress bar with respect to the outer and inner ring |\r\n  | _start_angle_ | Determines the angle from where to rotate |\r\n  | _text_ | A string that will be displayed on the knob |\r\n  | _text_color_ | Specify the color of the text that will be displayed on the knob |\r\n  | _text_font_ | Specify the font of the text that will be displayed on the knob |\r\n  | _integer_ | A boolean (True/False), displays only the integer value in text if True (default=False) |\r\n  | _fg_ | Specify the color of the inner circle |\r\n  | _progress_color_ | Define the color of the progress bar |\r\n  | _bar_color_ | Define the color of the progress bar's background |\r\n  | _inner_width_ | Define the width of the inner ring |\r\n  | _inner_color_ | Specify the color of the inner ring |\r\n  | _outer_width_ | Define the width of the outer ring |\r\n  | _outer_length_ | Define the distance between progress bar and outer ring |\r\n  | _inner_color_ | Specify the color of the outer ring |\r\n  | _steps_ | Number of steps per scroll |\r\n  | _state_ | Specify the state of the needle |\r\n  | _command_ | Call a function whenever the bar is moved |\r\n  \r\n### Methods:\r\n  | Methods   | Description |\r\n  |-----------|-------------|\r\n  | _.get()_ | get the current value of the knob |\r\n  | _.set()_ | set the value of the knob |\r\n  | _.configure()_ | configure parameters of the knob | \r\n  \r\n# Meter\r\n\r\n## Usage\r\n**Simple Example**\r\n```python\r\nimport tkinter\r\nfrom tkdial import Meter\r\n\r\nroot = tkinter.Tk()\r\ndial = Meter(root)\r\ndial.pack(padx=10, pady=10)\r\n\r\nroot.mainloop()\r\n```\r\n![simple_meter](https://user-images.githubusercontent.com/89206401/204718544-c8589399-7f13-44bb-a07d-77f328ce76b9.png)\r\n\r\n### **Different Meter Styles:**\r\n```python\r\nimport customtkinter\r\nfrom tkdial import Meter\r\n\r\napp = customtkinter.CTk()\r\napp.geometry(\"950x350\")\r\n\r\nmeter1 = Meter(app, bg=\"#212325\", radius=300, start=0, end=160, border_width=0,\r\n               fg=\"black\", text_color=\"white\", start_angle=270, end_angle=-270,\r\n               text_font=\"DS-Digital 30\", scale_color=\"white\", needle_color=\"red\")\r\nmeter1.set_mark(140, 160) # set red marking from 140 to 160\r\nmeter1.grid(row=0, column=1, padx=20, pady=30)\r\n\r\nmeter2 = Meter(app, bg=\"#212325\", radius=260, start=0, end=200, border_width=5,\r\n               fg=\"black\", text_color=\"white\", start_angle=270, end_angle=-360,\r\n               text_font=\"DS-Digital 30\", scale_color=\"black\", axis_color=\"white\",\r\n               needle_color=\"white\")\r\nmeter2.set_mark(1, 100, \"#92d050\")\r\nmeter2.set_mark(105, 150, \"yellow\")\r\nmeter2.set_mark(155, 196, \"red\")\r\nmeter2.set(80) # set value\r\nmeter2.grid(row=0, column=0, padx=20, pady=30)\r\n\r\nmeter3 = Meter(app, bg=\"#212325\", fg=\"#212325\", radius=300, start=0, end=50,\r\n               major_divisions=10, border_width=0, text_color=\"white\",\r\n               start_angle=0, end_angle=-360, scale_color=\"white\", axis_color=\"cyan\",\r\n               needle_color=\"white\",  scroll_steps=0.2)\r\nmeter3.set(15)\r\nmeter3.grid(row=0, column=2, pady=30)\r\n\r\napp.mainloop()\r\n                    \r\n# Font used: https://www.dafont.com/ds-digital.font\r\n```\r\n![styles_meter](https://user-images.githubusercontent.com/89206401/204718389-d3195b3b-0f7a-41c3-85b8-ffc1d961db70.png)\r\n\r\n## Arguments:\r\n  | Parameters  | Description |\r\n  | -------- | ----------- |\r\n  | _master_ | The master parameter is the parent widget |\r\n  | _bg_  | The default background color of the meter widget |\r\n  | _fg_ | Specify the color of the meter face |\r\n  | _width_ | Define width of the widget manually (optional) |\r\n  | _height_ | Define height of the widget manually (optional) |\r\n  | _start_ |  The start point of the range from where the needle will rotate |\r\n  | _end_ |  The end point of the range |\r\n  | _start_angle_ | Determines the starting angle of the arc |\r\n  | _end_angle_ | Determines the final angle of the arc |\r\n  | _radius_ | Determines the radius for the widget |\r\n  | _major_divisions_ | Determines the number of major lines in the scale |\r\n  | _minor_divisions_ | Determines the number of minor lines in the scale |\r\n  | _scale_color_ |  Specify the color of the meter scale |\r\n  | _border_width_ | Define the width of the border case (default=1) |\r\n  | _border_color_ |  Specify the color of the border case |\r\n  | _needle_color_ | Specify the color of the needle line |\r\n  | _axis_color_ | Specify which color of the axis wheel |\r\n  | _text_ | A string that will be displayed under the meter |\r\n  | _text_color_ | Specify the color of the text that will be displayed under the meter |\r\n  | _text_font_ | Specify the font of the text that will be displayed under the meter |\r\n  | _integer_ | A boolean (True/False), displays only the integer value in text if True (default=False) |\r\n  | _scroll_ | A boolean (True/False), enables mouse scroll in meter (default=True) |\r\n  | _scroll_steps_ | Number of steps per scroll |\r\n  | _state_ | Unbind/Bind the mouse movement with the needle |\r\n  | _command_ | Call a function whenever the needle is rotated |\r\n  \r\n### Methods:\r\n  | Methods   | Description |\r\n  |-----------|-------------|\r\n  | _.get()_ | get the current value of the meter |\r\n  | _.set()_ | set the value of the meter |\r\n  | _.configure()_ | configure parameters of the meter| \r\n  | _.set_mark()_ | set markings for the scale. Eg: **meter.set_mark(from, to, color)** | \r\n  \r\n## Conclusion\r\nThis library is focused to create some circular widgets that can be used with Tkinter easily.\r\nI hope it will be helpful for UI development in python.\r\n\r\n**Want to contribute?** See [this](https://github.com/Akascape/TkDial/discussions/1)\r\n\r\n[<img src=\"https://img.shields.io/badge/LICENSE-CC0_v0.1-informational?&color=blue&style=for-the-badge\" width=\"200\">](https://github.com/Akascape/TkDial/blob/main/LICENSE)\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Akascape/TkDial",
    "keywords": "tkinter,tkinter-dial,tkinter-widget,tkinter-knob,tkinter-meter,tkinter-dial-knob,dial-knob-widget,tkinter-gui",
    "license": "Creative Commons Zero v1.0 Universal",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tkdial",
    "package_url": "https://pypi.org/project/tkdial/",
    "platform": null,
    "project_url": "https://pypi.org/project/tkdial/",
    "project_urls": {
      "Homepage": "https://github.com/Akascape/TkDial"
    },
    "release_url": "https://pypi.org/project/tkdial/0.0.4/",
    "requires_dist": [
      "colour"
    ],
    "requires_python": ">=3.6",
    "summary": "Rotatory dial-knob widgets for Tkinter.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15938301,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1190374eb044bb2db6bc2a9c6032e79afd4483520766854909d8ed3d2a71342",
          "md5": "71f8f19776c9ad6677553d0e27d7b2a0",
          "sha256": "fd0887838208832da8da56b2cd0cc482fec7c0ce91e0f396fabd7eae6d83cb80"
        },
        "downloads": -1,
        "filename": "tkdial-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71f8f19776c9ad6677553d0e27d7b2a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9539,
        "upload_time": "2022-11-20T17:12:57",
        "upload_time_iso_8601": "2022-11-20T17:12:57.840302Z",
        "url": "https://files.pythonhosted.org/packages/c1/19/0374eb044bb2db6bc2a9c6032e79afd4483520766854909d8ed3d2a71342/tkdial-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4f84e57a20653d50f668afdad36fad1994029128e5683c34afd459dd8d766ab",
          "md5": "e614607ecf96a9bd6513614efc17e0bd",
          "sha256": "7ce759c47d22027b458bee5bb4486b9d0845404c4608017614b811f9ea652be1"
        },
        "downloads": -1,
        "filename": "tkdial-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e614607ecf96a9bd6513614efc17e0bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10941,
        "upload_time": "2022-11-20T17:12:59",
        "upload_time_iso_8601": "2022-11-20T17:12:59.804540Z",
        "url": "https://files.pythonhosted.org/packages/c4/f8/4e57a20653d50f668afdad36fad1994029128e5683c34afd459dd8d766ab/tkdial-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a0ee6753eda5cb99e32c48192b83c898c815834d4fd97c0ea1e526f2b870c53",
          "md5": "fc9809c922b01d1cbd63f9be25ff1fbf",
          "sha256": "75efe1a2a31779b045ec2da5f8ff830f4cb0e5de7dcd5f41fc65de96d3717b76"
        },
        "downloads": -1,
        "filename": "tkdial-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc9809c922b01d1cbd63f9be25ff1fbf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10298,
        "upload_time": "2022-11-24T06:24:17",
        "upload_time_iso_8601": "2022-11-24T06:24:17.960659Z",
        "url": "https://files.pythonhosted.org/packages/3a/0e/e6753eda5cb99e32c48192b83c898c815834d4fd97c0ea1e526f2b870c53/tkdial-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e25be60161331310c8e571e8a8d0752de7a70200f920ebd21f3fe7f870d8cee",
          "md5": "9d86a0e0c0be6aec7f9d314acb9e335c",
          "sha256": "aa63b5a592bfc8967b2c49053835fa3608adfd27027c8a73a0452ab6ac14ae97"
        },
        "downloads": -1,
        "filename": "tkdial-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9d86a0e0c0be6aec7f9d314acb9e335c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11897,
        "upload_time": "2022-11-24T06:24:20",
        "upload_time_iso_8601": "2022-11-24T06:24:20.308238Z",
        "url": "https://files.pythonhosted.org/packages/6e/25/be60161331310c8e571e8a8d0752de7a70200f920ebd21f3fe7f870d8cee/tkdial-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9be1ae92f07005ad14f1167e9f434bdc591da01e602351d295366491f23f3a73",
          "md5": "9105dc5081a430a7b8568c09ad56032c",
          "sha256": "97a6c2f240e3c598666649a1f2766d0987263d911b86837d4dbf230149335211"
        },
        "downloads": -1,
        "filename": "tkdial-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9105dc5081a430a7b8568c09ad56032c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12888,
        "upload_time": "2022-11-27T14:32:12",
        "upload_time_iso_8601": "2022-11-27T14:32:12.529212Z",
        "url": "https://files.pythonhosted.org/packages/9b/e1/ae92f07005ad14f1167e9f434bdc591da01e602351d295366491f23f3a73/tkdial-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e7929eb8425d31a6a5842f96282517466110f3bee0b189701aa64f122c81ce9",
          "md5": "f9e7e2fedb0fc281b4dd88b514531e02",
          "sha256": "c88bed15721f614a2799573dd76c173c85b0f1be98ea1f1bf8bb48ec4baabb4c"
        },
        "downloads": -1,
        "filename": "tkdial-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f9e7e2fedb0fc281b4dd88b514531e02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14555,
        "upload_time": "2022-11-27T14:32:14",
        "upload_time_iso_8601": "2022-11-27T14:32:14.682662Z",
        "url": "https://files.pythonhosted.org/packages/8e/79/29eb8425d31a6a5842f96282517466110f3bee0b189701aa64f122c81ce9/tkdial-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3eea7e6e733f1f7309b6119ffc16f1b20c0dac6a6801705b59e24b635a05c920",
          "md5": "f29f605483bcc22fbffbebc9e713ed09",
          "sha256": "27a9956d4c824535875ddc5220b9d6e1d459116dc1c46897b1a821b7fbe9a2b5"
        },
        "downloads": -1,
        "filename": "tkdial-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f29f605483bcc22fbffbebc9e713ed09",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16434,
        "upload_time": "2022-11-30T06:18:14",
        "upload_time_iso_8601": "2022-11-30T06:18:14.064847Z",
        "url": "https://files.pythonhosted.org/packages/3e/ea/7e6e733f1f7309b6119ffc16f1b20c0dac6a6801705b59e24b635a05c920/tkdial-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce24a9675dd4ea542a62516473b2effc5b1ac0882e9feba9b8f57d686129efa3",
          "md5": "78476300184879bb4769447cda486ee2",
          "sha256": "3fd2f0625c5c9dc1043a3cd730aee8a2809e04093964c102ac464d76230e7e56"
        },
        "downloads": -1,
        "filename": "tkdial-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "78476300184879bb4769447cda486ee2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17883,
        "upload_time": "2022-11-30T06:18:16",
        "upload_time_iso_8601": "2022-11-30T06:18:16.461565Z",
        "url": "https://files.pythonhosted.org/packages/ce/24/a9675dd4ea542a62516473b2effc5b1ac0882e9feba9b8f57d686129efa3/tkdial-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3eea7e6e733f1f7309b6119ffc16f1b20c0dac6a6801705b59e24b635a05c920",
        "md5": "f29f605483bcc22fbffbebc9e713ed09",
        "sha256": "27a9956d4c824535875ddc5220b9d6e1d459116dc1c46897b1a821b7fbe9a2b5"
      },
      "downloads": -1,
      "filename": "tkdial-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f29f605483bcc22fbffbebc9e713ed09",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 16434,
      "upload_time": "2022-11-30T06:18:14",
      "upload_time_iso_8601": "2022-11-30T06:18:14.064847Z",
      "url": "https://files.pythonhosted.org/packages/3e/ea/7e6e733f1f7309b6119ffc16f1b20c0dac6a6801705b59e24b635a05c920/tkdial-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce24a9675dd4ea542a62516473b2effc5b1ac0882e9feba9b8f57d686129efa3",
        "md5": "78476300184879bb4769447cda486ee2",
        "sha256": "3fd2f0625c5c9dc1043a3cd730aee8a2809e04093964c102ac464d76230e7e56"
      },
      "downloads": -1,
      "filename": "tkdial-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "78476300184879bb4769447cda486ee2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17883,
      "upload_time": "2022-11-30T06:18:16",
      "upload_time_iso_8601": "2022-11-30T06:18:16.461565Z",
      "url": "https://files.pythonhosted.org/packages/ce/24/a9675dd4ea542a62516473b2effc5b1ac0882e9feba9b8f57d686129efa3/tkdial-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}