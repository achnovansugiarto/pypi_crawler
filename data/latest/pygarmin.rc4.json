{
  "info": {
    "author": "Folkert van der Beek",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: GIS",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Hardware :: Hardware Drivers",
      "Topic :: Utilities"
    ],
    "description": "PyGarmin\n========\n\n.. figure:: pygarmin.png\n   :alt: PyGarmin\n\nThe **Pygarmin** distribution provides a `Python <https://www.python.org/>`_\nmodule and a command line application that implement the protocol used by\n`Garmin <https://www.garmin.com/>`_ GPS devices. It is based on the official\n`protocol specification <https://www8.garmin.com/support/commProtocol.html>`_.\n\nDocumentation\n-------------\n\nFor API documentation, usage and examples see the files in the ``docs``\ndirectory. The documentation is also hosted on `Read the Docs\n<https://pygarmin.readthedocs.io/en/latest/>`_.\n\nInstalling\n----------\n\nYou can install Pygarmin with ``pip`` as follows:\n\n.. code-block:: console\n\n   $ pip install pygarmin\n\nOr to upgrade to the most recent version:\n\n.. code-block:: console\n\n   $ pip install pygarmin --upgrade\n\nTo follow or contribute to emacs-zotero development, you can browse or clone the\nGit repository `on Github <https://github.com/quentinsf/pygarmin>`_:\n\n.. code-block:: console\n\n   $ git clone https://github.com/quentinsf/pygarmin.git\n\nAnd install the requirements using the below command:\n\n.. code-block:: console\n\n   $ pip install -r requirements.txt\n\nPygarmin application\n====================\n\nDescription\n-----------\n\n*Pygarmin* is a command line application that can retrieve data from and\ntransfer data to a Garmin GPS device connected by a serial or USB port.\n\nThe port is specified with the -p PORT option. To communicate with a Garmin GPS\nserially, use the name of that serial port such as /dev/ttyUSB0, /dev/cu.serial,\nor COM1. To communicate via USB use usb: as the port on all OSes. For this to\nwork on GNU/Linux, you probably should remove and blacklist the ``garmin_gps``\nkernel module. Some protocols won't work at all with a serial connection, like\nthe transfer of images and maps. So your best bet is to use the internal USB\nsupport.\n\nThe functionality is split into a number of sub-commands, like ``pygarmin info``\nto return a product description, ``pygarmin get-waypoints`` to download the\nwaypoints, and ``pygarmin put-map`` to upload a new map.\n\nExamples\n--------\n\nShow help message::\n\n   pygarmin --help\n\nShow help on the ``get-almanac`` command::\n\n   pygarmin get-almanac -h\n\nShow product description with debugging enabled::\n\n   pygarmin --debug info\n\nShow information on the currently installed maps, use the serial port and be very verbose::\n\n   pygarmin -p /dev/ttyUSB0 -vv map\n\nDownload all waypoints in gpx format to the file waypoints.gpx::\n\n   pygarmin get-waypoints waypoints.gpx -t gpx\n\nPrint real-time position, velocity, and time (PVT) to stdout::\n\n   pygarmin pvt -t tpv\n\nList the images types::\n\n   pygarmin get-image-types\n\nList all images::\n\n   pygarmin get-image-list\n\nDownload all images and save them according to the given filename pattern::\n\n   pygarmin get-image ~/icons/waypoint%03d.png\n\nDownload the images with index 1, 2, and 3 and save them as PNG files with the default filenames to the current directory::\n\n   pygarmin get-image -t png -i 1 2 3\n\nUpload an image as a custom waypoint symbol with index 1, and don't show the progress bar::\n\n   pygarmin --no-progress put-image Waypoint\\ Symbol\\ 000.bmp -i 1\n\nDownload the currently installed map from the device and save it as \"*gmapsupp.img*\" to the current directory::\n\n   pygarmin get-map\n\nUpload the map \"*gmapsupp.img*\"::\n\n   pygarmin put-map gmapsupp.img\n\n\nGarmin module\n=============\n\nThe *garmin module* is a set of `Python <https://www.python.org/>`__ classes which\nimplement the protocol used by `Garmin <https://www.garmin.com/>`__ GPS\nreceivers to talk to each other and to other machines. It is based on the\nofficial `protocol specification\n<https://www8.garmin.com/support/commProtocol.html>`__. The project was started\nby `Quentin Stafford-Fraser <https://quentinsf.com/software/pygarmin/>`__ but\nseveral others have helped to make it what it is today.\n\nPyGarmin has been used to transfer information to and from several different\nGarmin receivers, mostly under Linux, though there is some Windows support now\nand people have used it on Mac OS X as well. If you use PyGarmin, it will\nprobably be much quicker than writing your own software from scratch.\n\nBasics\n------\n\nAlmost every model of Garmin receiver implements a slightly different protocol.\nThey have many things in common, but there are minor differences. The class\n``garmin.Garmin`` will create instances of the appropriate protocol classes and\nnotes the datatype classes for each type of data used in the transmissions. It\nalso has some friendly methods like ``get_waypoints()``, which do what you would\nexpect. What you get back when you call this is a list of objects, each of which\nis a child the ``garmin.Wpt`` class.\n\nExample Code\n------------\n\nHere’s a simple Python program:\n\n.. code-block:: python\n\n   #!/usr/bin/env python3\n   import logging\n   from garmin import garmin\n\n   log = logging.getLogger('garmin')\n   log.addHandler(logging.StreamHandler())\n   log.setLevel(logging.INFO)\n\n   # Create a 'physical layer' connection using serial port\n   phys = garmin.SerialLink('/dev/ttyUSB0')\n\n   # ...or using USB\n   phys = garmin.USBLink()\n\n   # Create a Garmin object using this connection\n   gps = garmin.Garmin(phys)\n\n   # Get the waypoints from the GPS\n   waypoints = gps.get_waypoints()\n\n   # Get the tracks from the GPS\n   tracks = gps.get_tracks()\n\n   # Print the waypoints\n   print(\"Waypoints:\")\n   for waypoint in waypoints:\n       posn = waypoint.get_posn()\n       degrees = posn.as_degrees()\n       lat = degrees.lat\n       lon = degrees.lon\n       print(waypoint.ident, lat, lon, waypoint.cmnt)\n\n   # Print the tracks\n   print(\"Tracks:\")\n   for track in tracks:\n       print(track)\n\n   # Put a new waypoint\n   print(\"Upload a new waypoint:\")\n   waypoint = {'ident': 'CHURCH',\n               'cmnt': 'LA SAGRADA FAMILIA',\n               'posn': [493961671, 25937164]}\n   gps.put_waypoints(waypoint)\n\nThis should work for most models, because all waypoints will have an identity, a\nposition (latitude and longitude), and a comment field. The latitude and\nlongitude are transferred as ‘semicircle’ coordinates (basically degrees, but\nscaled to fill a signed long integer). The static method\n``Position.to_degrees()`` converts a semicircle integer into a degree float and\nthe ``as_degrees()`` method converts a Position into a DegreePosition data type.\n\nLicense\n=======\n\nThis program is free software: you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation, version 3.\n\nIn the past, it has been released under the GNU General Public License\nversion 2, and some contributions have been made under that license. You\nmay use it under the terms of the GPLv2 if you prefer.\n\nAcknowledgements\n================\n\nThanks are due to, amongst others:\n\n-  `Quentin Stafford-Fraser <https://quentinsf.com/>`__\n-  James Skillen\n-  `Bjorn Tillenius <http://tillenius.me/>`__\n-  Hyrum K. Wright\n-  Cedric Dutoit\n-  Folkert van der Beek (for a major rewrite in Dec 2022)\n\nand probably others, to whom our apologies!\n\nThe logo was designed by `Quentin\nStafford-Fraser <https://quentinsf.com/>`__\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/quentinsf/pygarmin",
    "keywords": "garmin,gps",
    "license": "GNU General Public License version 3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pygarmin",
    "package_url": "https://pypi.org/project/pygarmin/",
    "platform": null,
    "project_url": "https://pypi.org/project/pygarmin/",
    "project_urls": {
      "Bug Tracker": "https://github.com/quentinsf/pygarmin/issues",
      "Homepage": "https://github.com/quentinsf/pygarmin"
    },
    "release_url": "https://pypi.org/project/pygarmin/1.0.4/",
    "requires_dist": [
      "gpxpy (>=1.5.0)",
      "Pillow (>=9.3.0)",
      "pyserial (>=3.5)",
      "pyusb (>=1.2.1)",
      "rawutil (>=2.7.4)",
      "tabulate (>=0.9.0)",
      "tqdm (>=4.64.1)"
    ],
    "requires_python": ">=3.8",
    "summary": "A Python interface to older Garmin GPS equipment",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16201206,
  "releases": {
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "040e7f3fd5caa6bfddde0b24b1e66f408c291319938236f171d584f24c0363b2",
          "md5": "fe6e5fe2578329d9f20b24a3994c1f28",
          "sha256": "d0c1c7083d43753b717755fe1188e60746d306424556f0c885d37af736c92aa1"
        },
        "downloads": -1,
        "filename": "pygarmin-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "fe6e5fe2578329d9f20b24a3994c1f28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47194,
        "upload_time": "2015-08-24T14:17:35",
        "upload_time_iso_8601": "2015-08-24T14:17:35.910167Z",
        "url": "https://files.pythonhosted.org/packages/04/0e/7f3fd5caa6bfddde0b24b1e66f408c291319938236f171d584f24c0363b2/pygarmin-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dac721efbeca3b79b1c79b00a6831c1dd44336c400f9747c6c74d2ce2a90d727",
          "md5": "3e7d5f3c89c6f071bfc4f1c2a513c19f",
          "sha256": "4450bca7eba2ed1d4c46cf235d41cc338a10de1c18bf0be7f519c2b36c7c5122"
        },
        "downloads": -1,
        "filename": "pygarmin-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e7d5f3c89c6f071bfc4f1c2a513c19f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 68394,
        "upload_time": "2022-12-23T07:03:11",
        "upload_time_iso_8601": "2022-12-23T07:03:11.698583Z",
        "url": "https://files.pythonhosted.org/packages/da/c7/21efbeca3b79b1c79b00a6831c1dd44336c400f9747c6c74d2ce2a90d727/pygarmin-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1f65353db842c7ef4ba8beee53b6f4332fd8feae543708e4f24bf5b97a478c8",
          "md5": "f87580adc38c38987377dd44cd7a4afc",
          "sha256": "fb53c170a9b74d3bcb0fded89187f66e48a8e689fbca903f8e763e83e7839228"
        },
        "downloads": -1,
        "filename": "pygarmin-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f87580adc38c38987377dd44cd7a4afc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 69858,
        "upload_time": "2022-12-23T07:03:13",
        "upload_time_iso_8601": "2022-12-23T07:03:13.539768Z",
        "url": "https://files.pythonhosted.org/packages/d1/f6/5353db842c7ef4ba8beee53b6f4332fd8feae543708e4f24bf5b97a478c8/pygarmin-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b5c334e04949b6cfa3c5f2181c2206c0d4ccc102b0b9ef2219d0e653acaa2b9",
          "md5": "bf3e68644531b35b8d7be1669143dd62",
          "sha256": "7c0b7b62c8344acabe3760a56ad51838fcde27245c407008304f7fb5c268e43b"
        },
        "downloads": -1,
        "filename": "pygarmin-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf3e68644531b35b8d7be1669143dd62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 70850,
        "upload_time": "2022-12-23T07:10:38",
        "upload_time_iso_8601": "2022-12-23T07:10:38.575858Z",
        "url": "https://files.pythonhosted.org/packages/2b/5c/334e04949b6cfa3c5f2181c2206c0d4ccc102b0b9ef2219d0e653acaa2b9/pygarmin-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15d3e5b80d3fba3d870a58f617d68051efe8935cdb1e48a567f21690deb924fd",
          "md5": "3aab4f643f07dc588aafad3434aec693",
          "sha256": "a0a9fa0b97cde3491f6cc2ee7d984c5795bc9a10ec2d29589ce6b515a1ab557f"
        },
        "downloads": -1,
        "filename": "pygarmin-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3aab4f643f07dc588aafad3434aec693",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 74263,
        "upload_time": "2022-12-23T07:10:40",
        "upload_time_iso_8601": "2022-12-23T07:10:40.918150Z",
        "url": "https://files.pythonhosted.org/packages/15/d3/e5b80d3fba3d870a58f617d68051efe8935cdb1e48a567f21690deb924fd/pygarmin-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72ae0700bbc46d913e60491dadcc84c732e349f88d37af338935f3e9953a3028",
          "md5": "9b69f4ae33e9850641358548c157c0b7",
          "sha256": "cc30407489b7f88edb94ebc1a5aef1d2daad0c5f37983bc24ad15f1038a4e36c"
        },
        "downloads": -1,
        "filename": "pygarmin-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b69f4ae33e9850641358548c157c0b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 71768,
        "upload_time": "2022-12-23T23:16:35",
        "upload_time_iso_8601": "2022-12-23T23:16:35.127762Z",
        "url": "https://files.pythonhosted.org/packages/72/ae/0700bbc46d913e60491dadcc84c732e349f88d37af338935f3e9953a3028/pygarmin-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a204f7e6cebd74303cc61d9dcd50c37197fccef0d50f55eb5e514af6c848d7f1",
          "md5": "fa5caf84236406a51a89e687d946f099",
          "sha256": "e9731f8fa179e2b1cc11d92b192d7e408de2fc29aaa44519cbf8f9f20872cde7"
        },
        "downloads": -1,
        "filename": "pygarmin-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "fa5caf84236406a51a89e687d946f099",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 75399,
        "upload_time": "2022-12-23T23:16:37",
        "upload_time_iso_8601": "2022-12-23T23:16:37.609572Z",
        "url": "https://files.pythonhosted.org/packages/a2/04/f7e6cebd74303cc61d9dcd50c37197fccef0d50f55eb5e514af6c848d7f1/pygarmin-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "72ae0700bbc46d913e60491dadcc84c732e349f88d37af338935f3e9953a3028",
        "md5": "9b69f4ae33e9850641358548c157c0b7",
        "sha256": "cc30407489b7f88edb94ebc1a5aef1d2daad0c5f37983bc24ad15f1038a4e36c"
      },
      "downloads": -1,
      "filename": "pygarmin-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9b69f4ae33e9850641358548c157c0b7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 71768,
      "upload_time": "2022-12-23T23:16:35",
      "upload_time_iso_8601": "2022-12-23T23:16:35.127762Z",
      "url": "https://files.pythonhosted.org/packages/72/ae/0700bbc46d913e60491dadcc84c732e349f88d37af338935f3e9953a3028/pygarmin-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a204f7e6cebd74303cc61d9dcd50c37197fccef0d50f55eb5e514af6c848d7f1",
        "md5": "fa5caf84236406a51a89e687d946f099",
        "sha256": "e9731f8fa179e2b1cc11d92b192d7e408de2fc29aaa44519cbf8f9f20872cde7"
      },
      "downloads": -1,
      "filename": "pygarmin-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "fa5caf84236406a51a89e687d946f099",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 75399,
      "upload_time": "2022-12-23T23:16:37",
      "upload_time_iso_8601": "2022-12-23T23:16:37.609572Z",
      "url": "https://files.pythonhosted.org/packages/a2/04/f7e6cebd74303cc61d9dcd50c37197fccef0d50f55eb5e514af6c848d7f1/pygarmin-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}