{
  "info": {
    "author": "Inmanta",
    "author_email": "code@inmanta.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Testing",
      "Topic :: System :: Systems Administration",
      "Topic :: Utilities"
    ],
    "description": "# pytest-inmanta-lsm\n\nA pytest plugin to test inmanta modules that use lsm, it is built on top of `pytest-inmanta` and `pytest-inmanta-extensions`\n\n## Installation\n\n```bash\npip install pytest-inmanta-lsm\n```\n\n## Context\n\nThis plugin is used to push code to a remote orchestrator and interact with it, via the LSM north-bound-api\nIt requires an LSM enabled orchestrator, with no ssl or authentication enabled, in a default setup and ssh access to the orchestrator machine, with a user that has sudo permissions.\n\n## Usage\n\n### First case: using a remote orchestrator\n\nThis plugin is built around the remote_orchestrator fixture.\n\nA typical testcase using this plugin looks as follows:\n```python\n\ndef test_full_cycle(project, remote_orchestrator):\n    # get connection to remote_orchestrator\n    client = remote_orchestrator.client\n\n    # setup project\n    project.compile(\n        \"\"\"\n        import quickstart\n        \"\"\"\n    )\n\n    # sync project and export service entities\n    remote_orchestrator.export_service_entities()\n\n    # verify the service is in the catalog\n    result = client.lsm_service_catalog_get_entity(remote_orchestrator.environment, SERVICE_NAME)\n    assert result.code == 200\n\n    # get a ManagedInstance object, to simplifies interacting with a specific service instance\n    service_instance = remote_orchestrator.get_managed_instance(SERVICE_NAME)\n\n    # create an instance and wait for it to be up\n    service_instance.create(\n        attributes={\"router_ip\": \"10.1.9.17\", \"interface_name\": \"eth1\", \"address\": \"10.0.0.254/24\", \"vlan_id\": 14},\n        wait_for_state=\"up\",\n    )\n\n    # make validation fail by creating a duplicate\n    remote_orchestrator.get_managed_instance(SERVICE_NAME).create(\n        attributes={\"router_ip\": \"10.1.9.17\", \"interface_name\": \"eth1\", \"address\": \"10.0.0.254/24\", \"vlan_id\": 14},\n        wait_for_state=\"rejected\",\n    )\n\n    service_instance.update(\n        attribute_updates={\"vlan_id\": 42},\n        wait_for_state=\"up\",\n    )\n\n    # break it down\n    service_instance.delete()\n\n```\n\n### Second case: mocking the lsm api\n\nThis toolbox comes with one more fixture: `lsm_project`.  This fixture allows to run compile using the lsm model locally.  It has as advantage that:\n - You get a more fined grained control about what you want to see in your compile (choose the value of attributes, state, version, etc of your service).\n - If you only care about testing one specific case it is much faster than going through the full lifecycle on the remote orchestrator.\n - You don't need a running remote orchestrator, so you won't need to synchronize the full project anywhere.\n\nA simple usage would be as follow:\n```python\ndef test_model(lsm_project: lsm_project.LsmProject) -> None:\n    # Create a service object, you can modify it as you wish, depending on what you are trying to test\n    service = inmanta_lsm.model.ServiceInstance(\n        id=uuid.uuid4(),\n        environment=lsm_project.environment,\n        service_entity=\"vlan-assignment\",\n        version=1,\n        config={},\n        state=\"start\",\n        candidate_attributes={\"router_ip\": \"10.1.9.17\", \"interface_name\": \"eth1\", \"address\": \"10.0.0.254/24\", \"vlan_id\": 14},\n        active_attributes=None,\n        rollback_attributes=None,\n        created_at=datetime.datetime.now(),\n        last_updated=datetime.datetime.now(),\n        callback=[],\n        deleted=False,\n        deployment_progress=None,\n        service_identity_attribute_value=None,\n    )\n\n    # Add the service to the mocked server.  From now on it will be taken into account\n    # for EACH compile\n    lsm_project.add_service(service)\n\n    # Run a compile, with central focus the service we just created\n    lsm_project.compile(\"import quickstart\", service_id=service.id)\n```\n\n## Options and environment variables\n\nThe following options are available, each with a corresponding environment variable.\n\n\n```\npytest-inmanta-lsm:\n  --lsm-ca-cert=LSM_CA_CERT\n                        The path to the CA certificate file used to authenticate\n                        the remote orchestrator. (overrides INMANTA_LSM_CA_CERT)\n  --lsm-container-env   If set to true, expect the orchestrator to be running in\n                        a container without systemd.  It then assumes that all\n                        environment variables required to install the modules\n                        are loaded into each ssh session automatically.\n                        (overrides INMANTA_LSM_CONTAINER_ENV, defaults to False)\n  --lsm-ctr             If set, the fixtures will deploy and orchestrator on the\n                        host, using docker (overrides INMANTA_LSM_CONTAINER,\n                        defaults to False)\n  --lsm-ctr-cfg-file=LSM_CTR_CFG_FILE\n                        A path to a config file that should be loaded inside the\n                        container a server conf. (overrides\n                        INMANTA_LSM_CONTAINER_CONFIG_FILE, defaults to\n                        src/pytest_inmanta_lsm/resources/my-server-\n                        conf.cfg)\n  --lsm-ctr-compose-file=LSM_CTR_COMPOSE_FILE\n                        The path to a docker-compose file, that should be used\n                        to setup an orchestrator (overrides\n                        INMANTA_LSM_CONTAINER_COMPOSE_FILE, defaults to\n                        src/pytest_inmanta_lsm/resources/docker-\n                        compose.yml)\n  --lsm-ctr-db-version=LSM_CTR_DB_VERSION\n                        The version of postgresql to use for the db of the\n                        orchestrator (overrides\n                        INMANTA_LSM_CONTAINER_DB_VERSION, defaults to 10)\n  --lsm-ctr-env-file=LSM_CTR_ENV_FILE\n                        A path to an env file that should be loaded in the\n                        container. (overrides INMANTA_LSM_CONTAINER_ENV_FILE,\n                        defaults to\n                        src/pytest_inmanta_lsm/resources/my-env-file)\n  --lsm-ctr-image=LSM_CTR_IMAGE\n                        The container image to use for the orchestrator\n                        (overrides INMANTA_LSM_CONTAINER_IMAGE, defaults to\n                        containers.inmanta.com/containers/service-\n                        orchestrator:4)\n  --lsm-ctr-jwe-file=LSM_CTR_JWE_FILE\n                        A path to an entitlement file, required by the\n                        orchestrator (overrides INMANTA_LSM_CONTAINER_JWE_FILE,\n                        defaults to /etc/inmanta/license/com.inmanta.jwe)\n  --lsm-ctr-license-file=LSM_CTR_LICENSE_FILE\n                        A path to a license file, required by the orchestrator\n                        (overrides INMANTA_LSM_CONTAINER_LICENSE_FILE, defaults\n                        to /etc/inmanta/license/com.inmanta.license)\n  --lsm-ctr-pub-key-file=LSM_CTR_PUB_KEY_FILE\n                        A path to a public key that should be set in the\n                        container (overrides INMANTA_LSM_CONTAINER_PUB_KEY_FILE,\n                        defaults to $HOME/.ssh/id_rsa.pub)\n  --lsm-environment=LSM_ENVIRONMENT\n                        The environment to use on the remote server (is created\n                        if it doesn't exist) (overrides INMANTA_LSM_ENVIRONMENT,\n                        defaults to 719c7ad5-6657-444b-b536-a27174cb7498)\n  --lsm-host=LSM_HOST   Remote orchestrator to use for the remote_inmanta\n                        fixture (overrides INMANTA_LSM_HOST, defaults to\n                        127.0.0.1)\n  --lsm-no-clean        Don't cleanup the orchestrator after tests (for\n                        debugging purposes) (overrides INMANTA_LSM_NO_CLEAN,\n                        defaults to False)\n  --lsm-srv-port=LSM_SRV_PORT\n                        Port the orchestrator api is listening to (overrides\n                        INMANTA_LSM_SRV_PORT, defaults to 8888)\n  --lsm-ssh-port=LSM_SSH_PORT\n                        Port to use to ssh to the remote orchestrator (overrides\n                        INMANTA_LSM_SSH_PORT, defaults to 22)\n  --lsm-ssh-user=LSM_SSH_USER\n                        Username to use to ssh to the remote orchestrator\n                        (overrides INMANTA_LSM_SSH_USER, defaults to centos)\n  --lsm-ssl             [True | False] Choose whether to use SSL/TLS or not when\n                        connecting to the remote orchestrator. (overrides\n                        INMANTA_LSM_SSL, defaults to False)\n  --lsm-token=LSM_TOKEN\n                        The token used to authenticate to the remote\n                        orchestrator when authentication is enabled. (overrides\n                        INMANTA_LSM_TOKEN)\n\n```\n\n## Running tests\n\n### How the test suite is structured\n\nThe test suite consists of two parts:\n\n* The tests defined in `tests/test_containerized_orchestrator.py` file always run against a container started by the test suite itself.\n* All other tests run against the orchestrator specified by the options passed to the pytest command.\n\n### Pre-requisites\n Testing (and using) pytest-inmanta-lsm requires:\n- an available orchestrator to test against\n- ssh access to this orchestrator\n\n### Steps\n1. install dependencies:\n```bash\n pip install -r  requirements.dev.txt  -r  requirements.txt\n```\n\n2. pass the config for pytest-inmanta-lsm via environment variables. e.g.\n```bash\nexport INMANTA_LSM_HOST=<the orchestrator>\nexport INMANTA_LSM_USER=<user>\n```\n\n3. set the repo for inmanta to pull LSM from\n\n ```bash\nexport INMANTA_MODULE_REPO=https://USER:LICENSE_TOKEN@modules.inmanta.com/git/inmanta-service-orchestrator/5/{}.git\n```\n4. run the tests\n\n ```bash\n    pytest tests\n```\n\n### Deploy a local orchestrator\n\nIt is possible to deploy an orchestrator locally and run the tests against it.  The orchestrator will be deployed as a container, using docker.  Here are the prerequisites in order to make it work:\n 1. Have [docker](https://docs.docker.com/get-docker/) installed on your machine.\n    ```console\n    $ docker version\n    ```\n\n 2. Have access to an orchestrator image (e.g. `containers.inmanta.com/containers/service-orchestrator:4`).\n    ```console\n    $ export INMANTA_LSM_CONTAINER_IMAGE=containers.inmanta.com/containers/service-orchestrator:4\n    $ docker pull $INMANTA_LSM_CONTAINER_IMAGE\n    ```\n\n 3. Have a license and an entitlement file for the orchestrator.\n    ```console\n    $ ls /etc/inmanta/license/com.inmanta.*\n    /etc/inmanta/license/com.inmanta.jwe  /etc/inmanta/license/com.inmanta.license\n    $ export INMANTA_LSM_CONTAINER_LICENSE_FILE=/etc/inmanta/license/com.inmanta.license\n    $ export INMANTA_LSM_CONTAINER_JWE_FILE=/etc/inmanta/license/com.inmanta.jwe\n    ```\n\n 4. Have a pair of private/public key to access the orchestrator.\n    ```console\n    $ export PRIVATE_KEY=$HOME/.ssh/id_rsa\n    $ if [ -f $PRIVATE_KEY ]; then echo \"Private key already exists\"; else ssh-keygen -t rsa -b 4096 -f $PRIVATE_KEY -N ''; fi\n    $ export INMANTA_LSM_CONTAINER_PUB_KEY_FILE=\"${PRIVATE_KEY}.pub\"\n    $ if [ -f $INMANTA_LSM_CONTAINER_PUB_KEY_FILE ]; then echo \"Public key already exists\"; else ssh-keygen -y -f $PRIVATE_KEY > $INMANTA_LSM_CONTAINER_PUB_KEY_FILE; fi\n    ```\n\nIf this is properly setup, you need to do set this option:\n```\n  --lsm-ctr        If set, the fixtures will deploy and orchestrator on the host, using docker (overrides INMANTA_LSM_CONTAINER, defaults to False)\n```\n\nThen any of the other option starting with `lsm-ctr` prefix to configure pytest-inmanta-lsm properly.  You can specify:\n - The path to the license and entitlement files\n - The container image to use\n - The version of postgres to use\n - The public key to add in the orchestrator\n - Any env file that should be loaded by the orchestrator\n - A new docker-compose file to overwrite the one used by pytest-inmanta-lsm.\n - A new server config file\n\n> :warning: **Some options have no effect when `--lsm-ctr` is set**.  This is the case of:\n>  - `--lsm-host` The host will be overwritten with the ip of the container\n>  - `--lsm-srv-port` The port will be overwritten with the port the server in the container is listening to\n>  - `--lsm-ssh-port` The port will be `22`\n>  - `--lsm-ssh-user` The user will be `inmanta`\n>  - `--lsm-container-env` This is set to true automatically\n\n> :bulb: **Some options change their behavior when `--lsm-ctr` is set**.  This is the case of:\n>  - `--lsm-no-clean` When set, the docker orchestrator won't be cleaned up when the tests are done.  You will have to do it manually.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/inmanta/pytest-inmanta-lsm",
    "keywords": "",
    "license": "inmanta EULA",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-inmanta-lsm",
    "package_url": "https://pypi.org/project/pytest-inmanta-lsm/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytest-inmanta-lsm/",
    "project_urls": {
      "Homepage": "https://github.com/inmanta/pytest-inmanta-lsm"
    },
    "release_url": "https://pypi.org/project/pytest-inmanta-lsm/1.11.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Common fixtures for inmanta LSM related modules",
    "version": "1.11.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16961827,
  "releases": {
    "1.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd3a68085c49cff4f80ee0f36bac1b7137d4feb578dfc951a79e27a83d309eef",
          "md5": "c2d9e5ed11dc58f4d295b29771c1f82d",
          "sha256": "de353315f16e72017632d40da8b14adc462ce404e1b96932c37eab42ecdcd9c4"
        },
        "downloads": -1,
        "filename": "pytest-inmanta-lsm-1.10.0.tar.gz",
        "has_sig": true,
        "md5_digest": "c2d9e5ed11dc58f4d295b29771c1f82d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36511,
        "upload_time": "2023-01-27T14:15:25",
        "upload_time_iso_8601": "2023-01-27T14:15:25.832228Z",
        "url": "https://files.pythonhosted.org/packages/cd/3a/68085c49cff4f80ee0f36bac1b7137d4feb578dfc951a79e27a83d309eef/pytest-inmanta-lsm-1.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.10.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4954f1f76944d65630efbdf2acf7172e42e35a860fc19c4ea1987c98faf1f778",
          "md5": "9cde3ee457fecee03def3639454765f5",
          "sha256": "b3c5fc54a4841980a223e8c9bb748dab9282344616bbfac02b384a41f2618352"
        },
        "downloads": -1,
        "filename": "pytest-inmanta-lsm-1.10.1.tar.gz",
        "has_sig": true,
        "md5_digest": "9cde3ee457fecee03def3639454765f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36838,
        "upload_time": "2023-01-30T08:59:39",
        "upload_time_iso_8601": "2023-01-30T08:59:39.191631Z",
        "url": "https://files.pythonhosted.org/packages/49/54/f1f76944d65630efbdf2acf7172e42e35a860fc19c4ea1987c98faf1f778/pytest-inmanta-lsm-1.10.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1b3d1572d47c4e73aa3a2bfeed097b535a0629f8b0be2e0c5ccb5651264b33a",
          "md5": "968fdce136129c3bcf69b7ed6d135d6a",
          "sha256": "830a9e5748e9bcb7eae045ee980fe3d2a31625bf0f8d524e8e1c41f56751d621"
        },
        "downloads": -1,
        "filename": "pytest-inmanta-lsm-1.11.0.tar.gz",
        "has_sig": true,
        "md5_digest": "968fdce136129c3bcf69b7ed6d135d6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 37526,
        "upload_time": "2023-02-21T15:30:03",
        "upload_time_iso_8601": "2023-02-21T15:30:03.488400Z",
        "url": "https://files.pythonhosted.org/packages/a1/b3/d1572d47c4e73aa3a2bfeed097b535a0629f8b0be2e0c5ccb5651264b33a/pytest-inmanta-lsm-1.11.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21f397c6f166dd54939d2cbf2d857fc393951e7884f14fdd91f235bd51a06946",
          "md5": "e6bdd96dd8cb7181d4a8b2d9cb3f613d",
          "sha256": "4fd8e19725d7084e7d6b7bf830a84e4176bbd6b138a7a5703ce8b67be977942d"
        },
        "downloads": -1,
        "filename": "pytest-inmanta-lsm-1.5.0.tar.gz",
        "has_sig": true,
        "md5_digest": "e6bdd96dd8cb7181d4a8b2d9cb3f613d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17783,
        "upload_time": "2022-04-29T07:08:50",
        "upload_time_iso_8601": "2022-04-29T07:08:50.376394Z",
        "url": "https://files.pythonhosted.org/packages/21/f3/97c6f166dd54939d2cbf2d857fc393951e7884f14fdd91f235bd51a06946/pytest-inmanta-lsm-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e823bc7d7dd80abb9b4294fe92c1f6b8acf6a4c0d345a0f56c70fe75a90c0bb",
          "md5": "da232c2957530c887ffaeafbd730595d",
          "sha256": "67850e54c45322d07d6456a1e5317ad885191a4c4babd4a1ddda5e559bcafa25"
        },
        "downloads": -1,
        "filename": "pytest-inmanta-lsm-1.6.0.tar.gz",
        "has_sig": true,
        "md5_digest": "da232c2957530c887ffaeafbd730595d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7735,
        "upload_time": "2022-05-16T15:47:51",
        "upload_time_iso_8601": "2022-05-16T15:47:51.226348Z",
        "url": "https://files.pythonhosted.org/packages/8e/82/3bc7d7dd80abb9b4294fe92c1f6b8acf6a4c0d345a0f56c70fe75a90c0bb/pytest-inmanta-lsm-1.6.0.tar.gz",
        "yanked": true,
        "yanked_reason": "Empty package"
      }
    ],
    "1.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b57a38c1f288c2175d19c3679b71cdd1c489613e959383de77cafc5c35f10c27",
          "md5": "3539cf917ed70da409db43f62838a3a1",
          "sha256": "90f9d985bb36d90f22b2939f13be9b2a62f476de12f76f9d56b8f03e6baf107d"
        },
        "downloads": -1,
        "filename": "pytest-inmanta-lsm-1.6.1.tar.gz",
        "has_sig": true,
        "md5_digest": "3539cf917ed70da409db43f62838a3a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27574,
        "upload_time": "2022-05-18T07:34:31",
        "upload_time_iso_8601": "2022-05-18T07:34:31.313065Z",
        "url": "https://files.pythonhosted.org/packages/b5/7a/38c1f288c2175d19c3679b71cdd1c489613e959383de77cafc5c35f10c27/pytest-inmanta-lsm-1.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75728b66b7475055a7197a14bca8fcefb791bdb17993acc55ef37a365a1ed616",
          "md5": "d053d2c533477b750d6c5a55c5fa8e83",
          "sha256": "0949f6d3e4e3a7d5332e2b77aa83bf9bb4d618f60b3859a9cdf7403ea5069bac"
        },
        "downloads": -1,
        "filename": "pytest-inmanta-lsm-1.7.0.tar.gz",
        "has_sig": true,
        "md5_digest": "d053d2c533477b750d6c5a55c5fa8e83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27974,
        "upload_time": "2022-06-08T09:48:03",
        "upload_time_iso_8601": "2022-06-08T09:48:03.386586Z",
        "url": "https://files.pythonhosted.org/packages/75/72/8b66b7475055a7197a14bca8fcefb791bdb17993acc55ef37a365a1ed616/pytest-inmanta-lsm-1.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a414169bd8f176c29d9823c5253971582e55dda9771fba7f4a4acf0c3955d85e",
          "md5": "ebd0d0725146bb059c817da35093e6cf",
          "sha256": "dfec2487f0ec39440e27cc4f11a0e9ae67f3777d3b515a1a3112b25928447527"
        },
        "downloads": -1,
        "filename": "pytest-inmanta-lsm-1.8.0.tar.gz",
        "has_sig": true,
        "md5_digest": "ebd0d0725146bb059c817da35093e6cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28151,
        "upload_time": "2022-07-14T18:25:56",
        "upload_time_iso_8601": "2022-07-14T18:25:56.884205Z",
        "url": "https://files.pythonhosted.org/packages/a4/14/169bd8f176c29d9823c5253971582e55dda9771fba7f4a4acf0c3955d85e/pytest-inmanta-lsm-1.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e23df8f997b32cfa8d3d2214f1abc64a3c69c174ea9b3e4a561f12fa5504b1e",
          "md5": "109c495773c4739b627288c66f3fabc9",
          "sha256": "baa7ce6eadddc91f6a96273e80ea4e2f5d70274b24c107d7682123438a7518fb"
        },
        "downloads": -1,
        "filename": "pytest-inmanta-lsm-1.9.0.tar.gz",
        "has_sig": true,
        "md5_digest": "109c495773c4739b627288c66f3fabc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32050,
        "upload_time": "2022-09-07T06:28:13",
        "upload_time_iso_8601": "2022-09-07T06:28:13.014738Z",
        "url": "https://files.pythonhosted.org/packages/1e/23/df8f997b32cfa8d3d2214f1abc64a3c69c174ea9b3e4a561f12fa5504b1e/pytest-inmanta-lsm-1.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3674261a2a278f122ede3042789b0ab9262620d40a5d5b4c10e5cb9cdc4c2dca",
          "md5": "6b3f8b190e21c84bed4a8f9aa52fbb8f",
          "sha256": "429eed7a367142eddf8f4083e60a8040b8b46e612027bbff9d92cd529756fa52"
        },
        "downloads": -1,
        "filename": "pytest-inmanta-lsm-1.9.1.tar.gz",
        "has_sig": true,
        "md5_digest": "6b3f8b190e21c84bed4a8f9aa52fbb8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32103,
        "upload_time": "2022-09-16T12:41:31",
        "upload_time_iso_8601": "2022-09-16T12:41:31.883285Z",
        "url": "https://files.pythonhosted.org/packages/36/74/261a2a278f122ede3042789b0ab9262620d40a5d5b4c10e5cb9cdc4c2dca/pytest-inmanta-lsm-1.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1b3d1572d47c4e73aa3a2bfeed097b535a0629f8b0be2e0c5ccb5651264b33a",
        "md5": "968fdce136129c3bcf69b7ed6d135d6a",
        "sha256": "830a9e5748e9bcb7eae045ee980fe3d2a31625bf0f8d524e8e1c41f56751d621"
      },
      "downloads": -1,
      "filename": "pytest-inmanta-lsm-1.11.0.tar.gz",
      "has_sig": true,
      "md5_digest": "968fdce136129c3bcf69b7ed6d135d6a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 37526,
      "upload_time": "2023-02-21T15:30:03",
      "upload_time_iso_8601": "2023-02-21T15:30:03.488400Z",
      "url": "https://files.pythonhosted.org/packages/a1/b3/d1572d47c4e73aa3a2bfeed097b535a0629f8b0be2e0c5ccb5651264b33a/pytest-inmanta-lsm-1.11.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}