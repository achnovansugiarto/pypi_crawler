{
  "info": {
    "author": "",
    "author_email": "Marius Alonso <marius@allphins.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# hexasphere\nA module to create (almost) hexagonal grids of variable size on a sphere, fully implemented in python.\n\n## description of the grid\n\n### base polyhedron\n\nThe grid is built by subdividing a base polyhedron into hexagon tiles.\nThe base polyhedron is an icosahedron, which comprises:\n- 20 faces (equilateral triangles)\n- 12 vertices\n- 30 edges\n\nAt the vertices of the icosahedron, instead of an hexagon, a pentagon is constructed.\n\nFor a given grid resolution `n`, each edge of the icosahedron goes through exactly `n` hexagon centers (not counting the polygons found at the ends). The inside of faces is then filled with tile-centers by following a triangular pattern.\nThis allows to cover the icosahedron. Its surface is then mapped to the sphere using a projection.\n\n![icogrid](https://user-images.githubusercontent.com/70936497/186472661-e6255c76-46ae-4ce8-9b13-32c0683ee48b.jpeg)\n*Here, `n = 7`*\n\n### projection\n\nThere are two available projections in `projection` module:\n- `GnomonicProj`: a simple projection, which produces hexagonal tiles about 60% larger (in area) at the corners of a face than at its center.\n\n- `SnyderEAProj`: a more complex projection, slower to compute (roughly 3x slower than Gnomonic projection), but which preserves areas. The implementation is based on [Brenton R S Recht's blog](https://brsr.github.io/2021/08/31/snyder-equal-area.html). See there for more details.\n\n### hexagon tile identifier\n\nA tile identifier has the following pattern: `?XXXXX-YYYYY-ZZZZZ`\n- `?` is one of the 20 letters `A ... T`, each letter corresponding to one face of the icosahedron\n- `XXXXX`, `YYYYY`, `ZZZZZ` are the integer coordinates of the tile in the triangular mesh covering face `?`. An useful property holds:\n\n`XXXXX + YYYYY + ZZZZZ = 2 * (n + 1)`\n\n---\n\n## getting started\n\n1. Install the package with pip\n\n`$ pip install hexasphere`\n\n2. Import the library in python\n\n`from hexasphere import hexgrid, projection`\n\n## usage\n\n### construction of a grid\n\n1. Create a `HexGrid` object:\n\n`my_grid = hexgrid.HexGrid()`\n\n2. Instantiate a projection system `Projection` associated with this grid:\n\n`my_projection = projection.MyProjection(my_grid)`\n\n3. Provide the projection system to the grid:\n\n`my_grid.projection = my_projection`\n\n### playing with grid resolutions\n\n- Compute closest grid resolution `n` for any desired hex dimension **(in kilometers)**:\n\n```\nn = my_grid.compute_n_for_radius(0.25)\nn = my_grid.compute_n_for_height(0.25)\nn = my_grid.compute_n_for_side(0.25)\n```\n\n- Retrieve average hex dimension **(in kilometers)** for any given resolution `n`:\n\n```\nmy_grid.compute_radius_for_n(n)\nmy_grid.compute_height_for_n(n)\nmy_grid.compute_side_for_n(n)\n```\n\n### encoding and decoding\n\n- To find the string identifier of the hexagon to which a geographic point `(lat, lon)` belongs, call:\n\n```\nhex_identifier = my_grid.latlon_to_hex(lat, lon, n, out_str=True)[0]\n```\n\n- To find the `(lat, lon)` coordinates of the center of an hex, call:\n\n```\nmy_grid.hex_to_latlon(hex_identifier, in_str=True)\nmy_grid.hex_to_latlon(hex_identifier, n, in_str=True) # n is here not required\n```\n\n### overlapping grids\n\n`grid.latlon_to_hex` also supports overlapping grids:\n\n```\nvalue = 12 # Overlap distance (in km)\nmy_grid.set_overlap(value)\n```\n\nThe method `grid.latlon_to_hex` returns the list of distinct hexes a point of coordinates `(lat, lon)` belongs to:\n\n```\nhexes_identifier = my_grid.latlon_to_hex(lat, lon, n, out_str=True)\n```\n\n<img width=\"634\" alt=\"Screenshot 2022-09-13 at 12 09 33\" src=\"https://user-images.githubusercontent.com/70936497/189876027-fc9e3867-613d-41b5-beb0-5b28f9e0117d.png\">\n\n### playing with hexagons\n\n#### retrieving shape data\n\nOne can also deal with an `Hexagon` object instead of an hexagon string identifier:\n\n```\nhex_object = my_grid.latlon_to_hex(lat, lon, n)[0]\nhex_object = hexgrid.Hexagon(my_grid, str_id=hexagon_identifier)\n```\n\nThe coordinates of the vertices of the corresponding shape can then be retrieved:\n\n```\nshape_coordinates = hex_object.retrieve_polygon(out_latlon=True)\n```\n\n#### moving on the grid\n\nTo retrieve a neighboring hex:\n\n```\nhex_neighbor = hex_object.compute_neighbor(dP=(0, 1, -1))\n```\n\nTo retrieve the list of hexes in the k-ring centered on the hex object:\n\n```\nhexes = hex_object.k_ring(k, out_str=True)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) 2022 Allphins  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hexasphere",
    "package_url": "https://pypi.org/project/hexasphere/",
    "platform": null,
    "project_url": "https://pypi.org/project/hexasphere/",
    "project_urls": {
      "Bug Tracker": "https://github.com/AllphinsPilot/hexasphere/issues",
      "Homepage": "https://github.com/AllphinsPilot/hexasphere"
    },
    "release_url": "https://pypi.org/project/hexasphere/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A module to create (almost) hexagonal grids on a sphere",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15077709,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ffab483c017ba9a686028d58181f46692bb776063bb45944b7909f65663970a",
          "md5": "5e67be4de9426cd7f171e36c08ce74c6",
          "sha256": "070a6e4034960a233c2a8fbc6591c663343b2a3eac825ddc45cb96cb87df8a05"
        },
        "downloads": -1,
        "filename": "hexasphere-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e67be4de9426cd7f171e36c08ce74c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10081,
        "upload_time": "2022-08-24T09:37:35",
        "upload_time_iso_8601": "2022-08-24T09:37:35.661462Z",
        "url": "https://files.pythonhosted.org/packages/6f/fa/b483c017ba9a686028d58181f46692bb776063bb45944b7909f65663970a/hexasphere-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "151e8df58ed265c8ee539a8ea46252e09de1c0f1e335e06d6e46aa1eda46cb05",
          "md5": "fbaa91aaa84b77bfc2e03cb60285c638",
          "sha256": "4ba1a3ccc784d8730ef5ae885ef0a680c2b550456b4712b0f3ebb7e4029c2d1d"
        },
        "downloads": -1,
        "filename": "hexasphere-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fbaa91aaa84b77bfc2e03cb60285c638",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8195,
        "upload_time": "2022-08-24T09:37:37",
        "upload_time_iso_8601": "2022-08-24T09:37:37.150729Z",
        "url": "https://files.pythonhosted.org/packages/15/1e/8df58ed265c8ee539a8ea46252e09de1c0f1e335e06d6e46aa1eda46cb05/hexasphere-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10bac9300866b9c4ddbc5db522b598feff18cc9de0fad8519801d80eb446169e",
          "md5": "949c046735dd3c40627a31af6d7dcd72",
          "sha256": "8ef447c163d6bdb29ce88d13e02450949dcdb3a0e2ac9ef28828fef4fac83f7c"
        },
        "downloads": -1,
        "filename": "hexasphere-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "949c046735dd3c40627a31af6d7dcd72",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10802,
        "upload_time": "2022-08-24T13:48:03",
        "upload_time_iso_8601": "2022-08-24T13:48:03.255744Z",
        "url": "https://files.pythonhosted.org/packages/10/ba/c9300866b9c4ddbc5db522b598feff18cc9de0fad8519801d80eb446169e/hexasphere-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b0069ac442bb0823064ed9013c4fba8aa47e3886499f3f59077d874f212e301",
          "md5": "bd7a4e6482c8472b96a5804954d99910",
          "sha256": "7d2fb118d07b1358897aedf73184697a7a21bd85590c86ea21d831cb7ac9d8d2"
        },
        "downloads": -1,
        "filename": "hexasphere-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bd7a4e6482c8472b96a5804954d99910",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26966,
        "upload_time": "2022-08-24T13:48:04",
        "upload_time_iso_8601": "2022-08-24T13:48:04.810466Z",
        "url": "https://files.pythonhosted.org/packages/6b/00/69ac442bb0823064ed9013c4fba8aa47e3886499f3f59077d874f212e301/hexasphere-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f944ae14a553093c39f5bc443bbddea7b2114ac7d0fe2765d58f66273e5b5b1c",
          "md5": "f03cf6031e074c1f964e87b0b083475f",
          "sha256": "0a1f6e0510112b46ea51f899e56bb8dd4140b938c77797b52451aa74dd46e052"
        },
        "downloads": -1,
        "filename": "hexasphere-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f03cf6031e074c1f964e87b0b083475f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11523,
        "upload_time": "2022-08-25T08:49:22",
        "upload_time_iso_8601": "2022-08-25T08:49:22.770675Z",
        "url": "https://files.pythonhosted.org/packages/f9/44/ae14a553093c39f5bc443bbddea7b2114ac7d0fe2765d58f66273e5b5b1c/hexasphere-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d1311d8ad29f8cb4375d0633a6d720362e87328bd790443809a903408939c24",
          "md5": "33f13a3516eac6d36d4046a604fa305f",
          "sha256": "72052f3bd71e74f2afed82ad138848bbacc12b9d4cf48a065b8abb42b7afd1ec"
        },
        "downloads": -1,
        "filename": "hexasphere-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "33f13a3516eac6d36d4046a604fa305f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9846,
        "upload_time": "2022-08-25T08:49:24",
        "upload_time_iso_8601": "2022-08-25T08:49:24.700725Z",
        "url": "https://files.pythonhosted.org/packages/8d/13/11d8ad29f8cb4375d0633a6d720362e87328bd790443809a903408939c24/hexasphere-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c05d76c9ff691299733fc846ebe26199b4db7f586ca4b975aa35ee61e717f860",
          "md5": "158244a68f3a9972f026187f28f6d90a",
          "sha256": "f90ba8761b4fe9031bc7b26f21d20dfa3a3b2ce44db84296729dd1746e582a9b"
        },
        "downloads": -1,
        "filename": "hexasphere-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "158244a68f3a9972f026187f28f6d90a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11832,
        "upload_time": "2022-09-06T14:27:37",
        "upload_time_iso_8601": "2022-09-06T14:27:37.481232Z",
        "url": "https://files.pythonhosted.org/packages/c0/5d/76c9ff691299733fc846ebe26199b4db7f586ca4b975aa35ee61e717f860/hexasphere-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "801f55ca8715967e75af7d52aefaedb9cdea83327e86498267349ad77892cd79",
          "md5": "7832c7f748b4dbad9e71c23eff0c688b",
          "sha256": "7fb7f5f2e61b428a7ff73ebe248e7bb97672a0e538b97e1e795eb608d534fadb"
        },
        "downloads": -1,
        "filename": "hexasphere-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7832c7f748b4dbad9e71c23eff0c688b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10885,
        "upload_time": "2022-09-06T14:27:39",
        "upload_time_iso_8601": "2022-09-06T14:27:39.011566Z",
        "url": "https://files.pythonhosted.org/packages/80/1f/55ca8715967e75af7d52aefaedb9cdea83327e86498267349ad77892cd79/hexasphere-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2995a9eac9732b6d15dc985f1e1556c6636c4f2502d209a856b58651f97d90ee",
          "md5": "f87d59bc3c56a9ef1c7eebde902b834d",
          "sha256": "644137d9c770a9cf2863bc007c1fdf0615ada8e99f32f15d4713d0a2cb10f8a6"
        },
        "downloads": -1,
        "filename": "hexasphere-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f87d59bc3c56a9ef1c7eebde902b834d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12123,
        "upload_time": "2022-09-13T10:18:37",
        "upload_time_iso_8601": "2022-09-13T10:18:37.510354Z",
        "url": "https://files.pythonhosted.org/packages/29/95/a9eac9732b6d15dc985f1e1556c6636c4f2502d209a856b58651f97d90ee/hexasphere-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0cbc04b64042dbe51f4b35ebc53cfca65be456c74678e1ef027fda664922e25",
          "md5": "b219a935888d40590234ae00c7b722e3",
          "sha256": "fcba04c029e37cce4b58fc8cdddb62a94923e64c0a2b57bb775dc826a6956318"
        },
        "downloads": -1,
        "filename": "hexasphere-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b219a935888d40590234ae00c7b722e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11328,
        "upload_time": "2022-09-13T10:18:38",
        "upload_time_iso_8601": "2022-09-13T10:18:38.768335Z",
        "url": "https://files.pythonhosted.org/packages/e0/cb/c04b64042dbe51f4b35ebc53cfca65be456c74678e1ef027fda664922e25/hexasphere-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2995a9eac9732b6d15dc985f1e1556c6636c4f2502d209a856b58651f97d90ee",
        "md5": "f87d59bc3c56a9ef1c7eebde902b834d",
        "sha256": "644137d9c770a9cf2863bc007c1fdf0615ada8e99f32f15d4713d0a2cb10f8a6"
      },
      "downloads": -1,
      "filename": "hexasphere-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f87d59bc3c56a9ef1c7eebde902b834d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12123,
      "upload_time": "2022-09-13T10:18:37",
      "upload_time_iso_8601": "2022-09-13T10:18:37.510354Z",
      "url": "https://files.pythonhosted.org/packages/29/95/a9eac9732b6d15dc985f1e1556c6636c4f2502d209a856b58651f97d90ee/hexasphere-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e0cbc04b64042dbe51f4b35ebc53cfca65be456c74678e1ef027fda664922e25",
        "md5": "b219a935888d40590234ae00c7b722e3",
        "sha256": "fcba04c029e37cce4b58fc8cdddb62a94923e64c0a2b57bb775dc826a6956318"
      },
      "downloads": -1,
      "filename": "hexasphere-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b219a935888d40590234ae00c7b722e3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 11328,
      "upload_time": "2022-09-13T10:18:38",
      "upload_time_iso_8601": "2022-09-13T10:18:38.768335Z",
      "url": "https://files.pythonhosted.org/packages/e0/cb/c04b64042dbe51f4b35ebc53cfca65be456c74678e1ef027fda664922e25/hexasphere-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}