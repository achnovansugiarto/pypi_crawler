{
  "info": {
    "author": "Kirill Dragun, Kris Boudt",
    "author_email": "kdragun@vub.be, kris.boudt@vub.be",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n# Beta-Adjusted Covariance Estimation\n\n## Introduction\n\nExchange Traded Funds (ETFs) are often more liquid than many of their component stocks.  We exploit this feature to improve pre-estimators of the integrated covariance of the stocks included in the ETF. The proposed  Beta Adjusted Covariance (BAC) equals the pre-estimator plus a minimal adjustment matrix such that the covariance-implied stock-ETF beta equals a target beta. \n\n## The Authors\nThe package is based upon the reaserch and the results of Beta Adjusted Covariance Estimation paper by Kris Boudt, Kirill Dragun, Orimar Sauri and Steven Vanduffel.\nThe authors of the code are Kirill Dragun, Kris Boudt and Emil Sj√∏rup.\n\n## Package\n\n### Installation\n\n```console\n$ pip install bacpack\n```\n### submodules and classes\n\n- highreq: high frequency trading data representation and processing functionality. Class HF_Returns defines integrated covariance matrix estimators as member functions :\n    - bacpack.highfreq.HY() : computes Hayashi-Yoshida estimator;\n    - bacpack.highfreq.RCov() : computes realized covariance estimator;\n    - TSCov() : computes two time scale estimator.\n- bac: defines ETF related data structure HFR_ETF and Beta Adjusted Covariance Estimation functions:\n  - bacpack.bac.HFR_ETF: extends HFReturns, adds ETF and BAC related functionality:\n    - bacpack.bac.HFR_ETF.generate_from(aprices, mp, shnumb, nonequity, outstanding, etf_col):\n        - aprices - Pandas DataFrame with prices for assets in columns, each row for unique tick time;\n        - mp - Boolean array with True for the element traded at specified moment;\n        - shnumb - an array with amounts of components/assets included in the ETF;\n        - nonequity - aggregated value of the additional components (like cash, money-market funds, bonds, etc.), prices for which are not included in the aprices array;\n        - outstanding - ETF shares outstanding;\n        - etf_col - column name for the ETF.\n    - bacpack.bac.BAC_Delta_NR(b0, b), implements non-restricted BAC:\n        - b0 - implied pairwise beta of the pre-estimator;\n        - b - target stock-ETF beta.\n    - bacpack.bac.NBAC_Delta_NR(b0, b, noise), implements non-restricted NBAC, adjusted for noise effect :\n        - b0 - implied pairwise beta of the pre-estimator;\n        - b - target stock-ETF beta;\n        - noise, cumulative noise variance of diagonal elements.\n  -  bacpack.bac.Sim_BN: extends HFR_ETF adding data generations functionality for the simulation purposes:\n    - bacpack.bac.Sim_BN.generate(): generates data;\n    - bacpack.bac.Sim_BN.gen_jmp(self, jumps_per_period, jump_magnitude): generates jumps \n    - bacpack.bac.Sim_BN.noise(kappa): generates and adds microstructure noise with size given by kappa parameter.\n    \n### toy example\n\n```\nimport numpy as np\nfrom bacpack.bac import Sim_BN\n\ncsim=Sim_BN(3,10000) # creating an instance of the simulation class for 3 assets and 10000 time points\ncsim.frequencies(10,0.2) #setting the frequencies of trades according to the simulation model\ncsim.generate() #generating trading data\n### by now csim object of Sim_BN class contains fields with a simulated dataset \n\nmt=np.dot(csim.comps.T,csim.comps) #integrated covarinace matrix at highest precision to compare with\ncsim.noise(0.1) #generating microstructre noise\nna_diag=csim.noise_var() # estimating noise variance           \nm0_RC,b0_RC=csim.RCov() #returns RCov and implied beta                  \nmweights=csim.meanw() #average weights\nb0_RC_nf=b0_RC-na_diag*mweights   #beta adjusted for noise variance               \nbHY=csim.beta_HY() # stock-ETF beta using Hayashi-Yoshida estimator\nSBAC=m0_RC-csim.NBAC_Delta_NR(b0_RC_nf,bHY,na_diag) #BAC adjustment\nprint(csim.HY()[0]) #HY estimate of the integrated covariance matrix       \nprint(np.linalg.norm(mt-m0_RC)**2,np.linalg.norm(mt-SBAC)**2) # squared errors of the pre-estimator and BAC\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "BAC estimator highfrequency high frequency bacpack",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bacpack",
    "package_url": "https://pypi.org/project/bacpack/",
    "platform": null,
    "project_url": "https://pypi.org/project/bacpack/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/bacpack/0.0.25/",
    "requires_dist": [
      "numpy",
      "pandas",
      "numba"
    ],
    "requires_python": "",
    "summary": "Beta Adjusted Covariance estimation",
    "version": "0.0.25",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14124644,
  "releases": {
    "0.0.25": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac7baf54c721cb78a9fa87123c84b7be0639eaa4f6a203d7edf915fb36fb1ddc",
          "md5": "616d7b8c466836412a256f3eeff4d179",
          "sha256": "9b7d9713d2297429455ec0be25e62857080a4c10c0acf3bd97837946629d9ca5"
        },
        "downloads": -1,
        "filename": "bacpack-0.0.25-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "616d7b8c466836412a256f3eeff4d179",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23378,
        "upload_time": "2022-06-14T08:12:35",
        "upload_time_iso_8601": "2022-06-14T08:12:35.636513Z",
        "url": "https://files.pythonhosted.org/packages/ac/7b/af54c721cb78a9fa87123c84b7be0639eaa4f6a203d7edf915fb36fb1ddc/bacpack-0.0.25-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53923178544c9c4cc1e138a935c02ef9344ad81309fecc3c6a8d420099db6c29",
          "md5": "3dda20870d9ae48cd6d51922b899d541",
          "sha256": "6e155322a34f8c48df8ac5b13db6584c01bb77e8032941a97a49f13fd687f884"
        },
        "downloads": -1,
        "filename": "bacpack-0.0.25.tar.gz",
        "has_sig": false,
        "md5_digest": "3dda20870d9ae48cd6d51922b899d541",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16676,
        "upload_time": "2022-06-14T08:12:37",
        "upload_time_iso_8601": "2022-06-14T08:12:37.944990Z",
        "url": "https://files.pythonhosted.org/packages/53/92/3178544c9c4cc1e138a935c02ef9344ad81309fecc3c6a8d420099db6c29/bacpack-0.0.25.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac7baf54c721cb78a9fa87123c84b7be0639eaa4f6a203d7edf915fb36fb1ddc",
        "md5": "616d7b8c466836412a256f3eeff4d179",
        "sha256": "9b7d9713d2297429455ec0be25e62857080a4c10c0acf3bd97837946629d9ca5"
      },
      "downloads": -1,
      "filename": "bacpack-0.0.25-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "616d7b8c466836412a256f3eeff4d179",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 23378,
      "upload_time": "2022-06-14T08:12:35",
      "upload_time_iso_8601": "2022-06-14T08:12:35.636513Z",
      "url": "https://files.pythonhosted.org/packages/ac/7b/af54c721cb78a9fa87123c84b7be0639eaa4f6a203d7edf915fb36fb1ddc/bacpack-0.0.25-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53923178544c9c4cc1e138a935c02ef9344ad81309fecc3c6a8d420099db6c29",
        "md5": "3dda20870d9ae48cd6d51922b899d541",
        "sha256": "6e155322a34f8c48df8ac5b13db6584c01bb77e8032941a97a49f13fd687f884"
      },
      "downloads": -1,
      "filename": "bacpack-0.0.25.tar.gz",
      "has_sig": false,
      "md5_digest": "3dda20870d9ae48cd6d51922b899d541",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16676,
      "upload_time": "2022-06-14T08:12:37",
      "upload_time_iso_8601": "2022-06-14T08:12:37.944990Z",
      "url": "https://files.pythonhosted.org/packages/53/92/3178544c9c4cc1e138a935c02ef9344ad81309fecc3c6a8d420099db6c29/bacpack-0.0.25.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}