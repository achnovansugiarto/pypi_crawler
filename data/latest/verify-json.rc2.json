{
  "info": {
    "author": "Ze Hua",
    "author_email": "1737985326@qq.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "json\\_verify\n~~~~~~~~~~~~\n\n说明： 主要用于json数据diff，输出匹配的字段信息、字段匹配准确率\n\n安装方式： ``shell script pip install verify_json``\n\n1、 生成契约校验实例\n''''''''''''''''''''\n\n.. code:: python\n\n    from json_verify import JsonVerify\n\n    demo_json = {\n        \"msg\": \"一段文字信息\",\n        \"phone\": 13746067836,\n        \"name\": [\n            {\"age\": 12}, \n            {\"phone\": 213213, \"age\": 18}\n        ]\n    }\n    check_json = {\n        \"msg\": None,\n        \"address\": \"上海\",\n        \"name\": [\n            {\"age\": 12, \"language\": \"chinese\"},\n            {\"phone\": 213213, \"age\": 18},\n        ]\n    }\n    instance = JsonVerify(demo_json)\n    instance.verify(check_json)\n    print(instance.info)\n\n>>>\n\n.. code:: json\n\n    {\"loseKey\": [\"phone\"], \"increaseKey\": [\"address\", \"name.0.language\"], \"keyError\": {\"msg\": {\"type_rules\": [\"str\"], \"check_value\": null, \"detail\": \"数据类型错误\"}}, \"patchRate\": \"66.67%\"}\n\n备注：校验规则{key：value}\n\nvalue:为列表类型时默认校验列表元素，每个元素与锲约列表匹配程度，与元素在列表中顺序无关、与元素长短无关\n\n默认契约校验为值数据类型作为校验规则\n\n-  loseKey： 被检验json数据缺少的key\n-  increaseKey：被检验json增加的key\n-  keyError：被检验json的key对应value不符合锲约要求\n-  patchRate：所有key匹配的正确率（increaseKey不参与运算）\n\n2、自定义契约\n'''''''''''''\n\n自定义契约字段需要加上 下划线 前后缀\n\n.. code:: json\n\n    锲约json：\n    {\"name\": \"百里清\"}\n\n    自定义锲约时：\n    {\"_name_\": {\"rules_value\": [\"百里清\"]}}\n\n2.1 自定义值匹配契约 rules\\_value\n\n\n.. code:: python\n\n    from json_verify import JsonVerify\n\n    demo_json = {\n        \"_msg_\": {\"rules_value\": [\"不匹配的文字信息\"]},\n        \"name\": [\n            {\"age\": 12}, \n            {\"phone\": 213213, \"age\": 18}\n        ]\n    }\n    check_json = {\n        \"msg\": \"错误信息\",\n        \"name\": [\n            {\"age\": 12},\n            {\"phone\": 213213, \"age\": 18},\n        ]\n    }\n    instance = JsonVerify(demo_json)\n    instance.verify(check_json)\n    print(instance.info)\n\n>>>\n\n.. code:: json\n\n    {\"loseKey\": [], \"increaseKey\": [], \"keyError\": {\"msg\": {\"rules_value\": [\"不匹配的文字信息\"], \"check_value\": \"错误信息\", \"detail\": \"期望值与结果值不同\"}}, \"patchRate\": \"80.00%\"}\n\n2.2 自定义正则匹配契约 regular\\_rules\n\n\n.. code:: python\n\n    from json_verify import JsonVerify\n\n    demo_json = {\n        \"_msg_\": {\"regular_rules\": \"^\\d+$\"},\n        \"name\": [\n            {\"age\": 12}, \n            {\"phone\": 213213, \"age\": 18}\n        ]\n    }\n    check_json = {\n        \"msg\": \"错误信息\",\n        \"name\": [\n            {\"age\": 12},\n            {\"phone\": 213213, \"age\": 18},\n        ]\n    }\n    instance = JsonVerify(demo_json)\n    instance.verify(check_json)\n    print(instance.info)\n\n>>>\n\n.. code:: json\n\n    {\"loseKey\": [], \"increaseKey\": [], \"keyError\": {\"msg\": {\"regular_rules\": \"^\\\\d+$\", \"check_value\": \"错误信息\", \"detail\": \"正则匹配错误\"}}, \"patchRate\": \"80.00%\"}\n\n2.3 自定义函数契约 func\\_rules\n\n\n.. code:: python\n\n    from json_verify import JsonVerify\n\n    demo_json = {\n        \"_msg_\": {\"func_rules\": \"check_msg\"}, # func_rules: 函数要存在于check_func对象里\n        \"name\": [\n            {\"_age_\": {\"func_rules\": \"check_age\"}}, \n            {\"phone\": 213213, \"_age_\": {\"func_rules\": \"check_age\"}}\n        ]\n    }\n    check_json = {\n        \"msg\": \"错误信息\",\n        \"name\": [\n            {\"age\": 12},\n            {\"phone\": 213213, \"age\": 18},\n        ]\n    }\n\n\n    class CheckFunction:\n\n        def check_msg(self, msg):\n            if msg:\n                return True\n\n        def check_age(self, age):\n\n            return True if age>12 else False\n\n    instance = JsonVerify(demo_json, check_func=CheckFunction())\n    # check_func: 校验函数存放的包、模块、类实例 可以使用getattr(check_func, func_name) 获取的类型\n    instance.verify(check_json)\n\n    print(instance.info)\n\n>>>\n\n.. code:: json\n\n    {\"loseKey\": [], \"increaseKey\": [], \"keyError\": {\"name.0.age\": {\"func_rules\": \"check_age\", \"check_value\": 12, \"detail\": \"值不符合函数校验规则\"}}, \"patchRate\": \"80.00%\"}\n\n3、 做精确值匹配 check\\_value\\_only\n'''''''''''''''''''''''''''''''''''\n\n注意： 启用此方法时任何自定义契约校验都会失效\n\n.. code:: python\n\n    from json_verify import JsonVerify\n\n    demo_json = {\n        \"msg\": \"123\", # func_rules: 函数要存在于check_func对象里\n        \"name\": [\n            {\"age\": 18}, \n            {\"phone\": 213213, \"age\": 18}\n        ]\n    }\n    check_json = {\n        \"msg\": \"错误信息\",\n        \"name\": [\n            {\"age\": 12},\n            {\"phone\": 213213, \"age\": 18},\n        ]\n    }\n\n\n    class CheckFunction:\n\n        def check_msg(self, msg):\n            if msg:\n                return True\n\n        def check_age(self, age):\n            return True if age>12 else False\n\n    instance = JsonVerify(demo_json, check_func=CheckFunction(), check_value_only=True)\n    # check_func: 校验函数存放的包、模块、类实例 可以使用getattr(check_func, func_name) 获取的类型\n    instance.verify(check_json)\n\n    print(instance.info)\n\n>>>\n\n.. code:: json\n\n    {\"loseKey\": [], \"increaseKey\": [], \"keyError\": {\"name\": {\"rules_value\": [[{\"age\": 18}, {\"phone\": 213213, \"age\": 18}]], \"check_value\": [{\"age\": 12}, {\"phone\": 213213, \"age\": 18}], \"detail\": \"期望值与结果值不同\"}, \"name.0\": {\"rules_value\": [{\"age\": 18}, {\"phone\": 213213, \"age\": 18}], \"check_value\": {\"age\": 12}, \"detail\": \"期望值与结果值不同\"}, \"name.0.age\": {\"rules_value\": [18], \"check_value\": 12, \"detail\": \"期望值与结果值不同\"}}, \"patchRate\": \"40.00%\"}\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DaoSen-v/JsonDiff",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "verify-json",
    "package_url": "https://pypi.org/project/verify-json/",
    "platform": "",
    "project_url": "https://pypi.org/project/verify-json/",
    "project_urls": {
      "Homepage": "https://github.com/DaoSen-v/JsonDiff"
    },
    "release_url": "https://pypi.org/project/verify-json/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A JSON contract tool that outputs build matches",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11075223,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6e77622fd0e8c670c4d9cbf2e862229cc451826eaaa8522c5918adb976dd601",
          "md5": "789fb7dc0029a3f1057201ad465fae56",
          "sha256": "e10ce97d57671f01a8460ed973b4cfed0500613b41da5984698492a84bf15c63"
        },
        "downloads": -1,
        "filename": "verify_json-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "789fb7dc0029a3f1057201ad465fae56",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5989,
        "upload_time": "2021-08-03T00:58:49",
        "upload_time_iso_8601": "2021-08-03T00:58:49.803122Z",
        "url": "https://files.pythonhosted.org/packages/a6/e7/7622fd0e8c670c4d9cbf2e862229cc451826eaaa8522c5918adb976dd601/verify_json-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e41eb4fb58bbf4c30a9206d31f98fb19ebdb24cc6057dd0f379769ef7d1a9e6e",
          "md5": "7ba585e533432eaa40bfd2b30ab9893d",
          "sha256": "c8f41a77802c18d238c34b924fb9805b001a16c5cdfdb7fcdf7dc9284839f7a8"
        },
        "downloads": -1,
        "filename": "verify_json-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7ba585e533432eaa40bfd2b30ab9893d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5144,
        "upload_time": "2021-08-03T00:58:51",
        "upload_time_iso_8601": "2021-08-03T00:58:51.820961Z",
        "url": "https://files.pythonhosted.org/packages/e4/1e/b4fb58bbf4c30a9206d31f98fb19ebdb24cc6057dd0f379769ef7d1a9e6e/verify_json-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cd6578a6e793f4bfea1c931420d3cf4ed1b27bfc94f95a373a79c2e459c0105",
          "md5": "0012a2d5fc47db6e23c6e00100fec2c6",
          "sha256": "8a7c630bb7dd12aa03b53858ff0c6e3cfb754bf73b989701f11ebff7fe26c972"
        },
        "downloads": -1,
        "filename": "verify_json-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0012a2d5fc47db6e23c6e00100fec2c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5993,
        "upload_time": "2021-08-03T01:01:23",
        "upload_time_iso_8601": "2021-08-03T01:01:23.052790Z",
        "url": "https://files.pythonhosted.org/packages/7c/d6/578a6e793f4bfea1c931420d3cf4ed1b27bfc94f95a373a79c2e459c0105/verify_json-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5dc0a8600d2126f7523f4267f99b8850defbc1ef227b124f6bb0283207965092",
          "md5": "9598fdc431604659ac1b2b8e919a86dc",
          "sha256": "8bf9567bdc675df2100c888825a660d7e467186bdccaeaf7191d0071b39172ff"
        },
        "downloads": -1,
        "filename": "verify_json-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9598fdc431604659ac1b2b8e919a86dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5141,
        "upload_time": "2021-08-03T01:01:25",
        "upload_time_iso_8601": "2021-08-03T01:01:25.178944Z",
        "url": "https://files.pythonhosted.org/packages/5d/c0/a8600d2126f7523f4267f99b8850defbc1ef227b124f6bb0283207965092/verify_json-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7cd6578a6e793f4bfea1c931420d3cf4ed1b27bfc94f95a373a79c2e459c0105",
        "md5": "0012a2d5fc47db6e23c6e00100fec2c6",
        "sha256": "8a7c630bb7dd12aa03b53858ff0c6e3cfb754bf73b989701f11ebff7fe26c972"
      },
      "downloads": -1,
      "filename": "verify_json-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0012a2d5fc47db6e23c6e00100fec2c6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5993,
      "upload_time": "2021-08-03T01:01:23",
      "upload_time_iso_8601": "2021-08-03T01:01:23.052790Z",
      "url": "https://files.pythonhosted.org/packages/7c/d6/578a6e793f4bfea1c931420d3cf4ed1b27bfc94f95a373a79c2e459c0105/verify_json-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5dc0a8600d2126f7523f4267f99b8850defbc1ef227b124f6bb0283207965092",
        "md5": "9598fdc431604659ac1b2b8e919a86dc",
        "sha256": "8bf9567bdc675df2100c888825a660d7e467186bdccaeaf7191d0071b39172ff"
      },
      "downloads": -1,
      "filename": "verify_json-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9598fdc431604659ac1b2b8e919a86dc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5141,
      "upload_time": "2021-08-03T01:01:25",
      "upload_time_iso_8601": "2021-08-03T01:01:25.178944Z",
      "url": "https://files.pythonhosted.org/packages/5d/c0/a8600d2126f7523f4267f99b8850defbc1ef227b124f6bb0283207965092/verify_json-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}