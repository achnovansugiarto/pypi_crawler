{
  "info": {
    "author": "Justin Turney",
    "author_email": "info@justinturney.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# net-switch-tools\n\nPython package for managing network switches\n\n## Usage\n\n```python\nimport manage_switches.All\n\n# Connection info for logging in to switch\n\nconinfo = {\n    'ip': 'IP_OF_SWITCH',\n    'device_type': 'TYPE_OF_DEVICE', # Refer to NetMiko docs for switch type\n    'username': 'SWITCH_USERNAME',\n    'password': 'SWITCH_PASSWORD'\n}\n\n# Get list of IPs in a CIDR network range\n\nip_list = generate_ip_list('192.168.1.0/24')\n\n# Get hostname from IP address, or returns 'Hostname not found' if no hostname\n\nhostname = get_hostname_by_ip('192.168.1.5')\n\n# Ping list of IP addresses from switch\n\nping_from_switch(coninfo, ip_list)\n\n# Run commands on switch. Writes output to D 'switch_{command_slug}/{switch_ip}\n\nrun_commands(coninfo, ['show arp', 'show mac-address'])\n\n# Run functions concurrently. Supports functions that take IP address as an arg\n\nmultithread(get_hostname_by_ip, ip_list)\n\n# Write results of command CSV, saves file as {prepend}-{variable_name}.csv\n\nresult = [\n    {'IP': '192.168.1.1', 'Hostname': 'router.local'},\n    {'IP': '192.168.1.2', 'Hostname': 'computer1'},\n    {'IP': '192.168.1.1', 'Hostname': 'computer2'},\n    {'IP': '192.168.1.1', 'Hostname': 'computer3'},\n]\n\nwrite_result(result, 'w+', 'switch_ip')\n\n# Reformat MAC address to a1-a1-a1-a1-a1-a1 format\n\nfixed_mac = reformat_mac('a1:a1:a1:a1:a1:a1')\n\n```\n\n## Example\n```python\nimport sys\n\nimport manage_switches.All\n\nfrom secret import IP_RANGE, USERNAME, PASSWORD, DEVICE_TYPE\n\n\ndef write_arp_tables(ip: str):\n    \"\"\"\n    Retrieves ARP table from switch. Writes remote device IP, remote device\n    MAC, remote device hostname, switch ip, and switch port the remote\n    device is connected too into a CSV file.\n    :param ip: IP address of switch as string\n    :return: Success string 'Success on {ip}'\n    \"\"\"\n    spinner = Halo(spinner='dots')\n    try:\n        coninfo = {\n            'ip': ip,\n            'device_type': DEVICE_TYPE,\n            'username': USERNAME,\n            'password': PASSWORD\n        }\n        commands = ['show arp']\n        run_commands(coninfo, commands)\n        arp_list = []\n        spinner.start(f'\\nGetting ARP table from switch at {ip}')\n        with open(f'switch_show_arp/{ip}', 'r') as f:\n            raw_arp_table = f.read()\n        spinner.succeed()\n        spinner.stop()\n        spinner.start(f'\\nFormatting ARP table and writing to file.')\n        fixed_arp_list = [x.strip() for x in raw_arp_table.split(\"\\n\")[6:-2]]\n        # You'll need to figure this out for your specific switch output\n        for item in fixed_arp_list:\n            item = item.replace('     ', ' ')\n                .replace('    ', ' ')\n                .replace('   ', ' ')\n                .replace('  ', ' ')\n            item = item.split(' ')\n            if len(item) > 3:\n                arp_list.append({\n                    'IP': item[0],\n                    'MAC': reformat_mac(item[1]),\n                    'Hostname': get_hostname_by_ip(item[0]),\n                    'Switch IP': ip,\n                    'Switch Port': item[3]\n                })\n        write_result_csv(arp_list, 'a+', prepend=ip)\n        spinner.succeed(f'\\nFile written to {ip}-srp_list.csv')\n        spinner.stop()\n        return f'Success on {ip}'\n    except (KeyboardInterrupt, SystemExit):\n        spinner.stop()\n\n\ndef populate_arp_table(ip: str):\n    \"\"\"\n    Logs into switch, pings every address in IP_RANGE to populate ARP table\n    :param ip: IP address of switch as string\n    :return: Success string 'Success on {ip}'\n    \"\"\"\n    try:\n        coninfo = {\n            'ip': ip,\n            'device_type': DEVICE_TYPE,\n            'username': USERNAME,\n            'password': PASSWORD\n        }\n        ip_list = generate_ip_list(IP_RANGE)\n        ping_from_switch(coninfo, ip_list)\n        return f'Success on {ip}'\n    except (KeyboardInterrupt, SystemExit):\n        sys.exit()\n\n\nif __name__ == '__main__':\n    switch_ips = []\n    ip_list = generate_ip_list(IP_RANGE)\n    with open('SwitchAddresses.csv', 'r') as f:\n        for row in csv.reader(f):\n            switch_ips.append(row[0])\n    multithread(populate_arp_table, switch_ips)\n    multithread(write_arp_tables, switch_ips)\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/greenfructose/net-switch-tools",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "net-switch-tools",
    "package_url": "https://pypi.org/project/net-switch-tools/",
    "platform": "",
    "project_url": "https://pypi.org/project/net-switch-tools/",
    "project_urls": {
      "Bug Tracker": "https://github.com/greenfructose/net-switch-tools/issues",
      "Homepage": "https://github.com/greenfructose/net-switch-tools"
    },
    "release_url": "https://pypi.org/project/net-switch-tools/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A package for managing network switches",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12724029,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc7a446c65754ce7cc4a8dfe481bc61f2c8138410083186de0e7f054e2e955f1",
          "md5": "a1f3abb9f6a365918ff83044408dc11c",
          "sha256": "86a9d7e8d9065d198339926e3c509fbaf8c41c3fb3707c83e93ec13d92b06574"
        },
        "downloads": -1,
        "filename": "net_switch_tools-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a1f3abb9f6a365918ff83044408dc11c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6881,
        "upload_time": "2022-01-28T19:37:08",
        "upload_time_iso_8601": "2022-01-28T19:37:08.875444Z",
        "url": "https://files.pythonhosted.org/packages/fc/7a/446c65754ce7cc4a8dfe481bc61f2c8138410083186de0e7f054e2e955f1/net_switch_tools-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a83078f4b04b0c495ad15ea75ec2aad2b4110c3524e0a93e549a2834b8987f5",
          "md5": "fcc20e3e225056706aca694024d73e10",
          "sha256": "83615e662fca7d377541e18ec966e5886c6f3cbedf8419c1304a85e9732202bc"
        },
        "downloads": -1,
        "filename": "net-switch-tools-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fcc20e3e225056706aca694024d73e10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5977,
        "upload_time": "2022-01-28T19:37:11",
        "upload_time_iso_8601": "2022-01-28T19:37:11.430708Z",
        "url": "https://files.pythonhosted.org/packages/3a/83/078f4b04b0c495ad15ea75ec2aad2b4110c3524e0a93e549a2834b8987f5/net-switch-tools-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc7a446c65754ce7cc4a8dfe481bc61f2c8138410083186de0e7f054e2e955f1",
        "md5": "a1f3abb9f6a365918ff83044408dc11c",
        "sha256": "86a9d7e8d9065d198339926e3c509fbaf8c41c3fb3707c83e93ec13d92b06574"
      },
      "downloads": -1,
      "filename": "net_switch_tools-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a1f3abb9f6a365918ff83044408dc11c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6881,
      "upload_time": "2022-01-28T19:37:08",
      "upload_time_iso_8601": "2022-01-28T19:37:08.875444Z",
      "url": "https://files.pythonhosted.org/packages/fc/7a/446c65754ce7cc4a8dfe481bc61f2c8138410083186de0e7f054e2e955f1/net_switch_tools-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a83078f4b04b0c495ad15ea75ec2aad2b4110c3524e0a93e549a2834b8987f5",
        "md5": "fcc20e3e225056706aca694024d73e10",
        "sha256": "83615e662fca7d377541e18ec966e5886c6f3cbedf8419c1304a85e9732202bc"
      },
      "downloads": -1,
      "filename": "net-switch-tools-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "fcc20e3e225056706aca694024d73e10",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5977,
      "upload_time": "2022-01-28T19:37:11",
      "upload_time_iso_8601": "2022-01-28T19:37:11.430708Z",
      "url": "https://files.pythonhosted.org/packages/3a/83/078f4b04b0c495ad15ea75ec2aad2b4110c3524e0a93e549a2834b8987f5/net-switch-tools-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}