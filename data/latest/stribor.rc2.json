{
  "info": {
    "author": "Marin Bilos",
    "author_email": "bilos@in.tum.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Stibor\n\nNormalizing flows and neural flows for PyTorch.\n\n- Normalizing flow defines a complicated probability density function as a transformation of the random variable.\n- Neural flow defines continuous time dynamics with invertible neural networks.\n\n## Install package and dependencies\n\n```\npip install stribor\n```\n\n## Normalizing flows\n\n### Base densities\n\n- Normal `st.Normal` and `st.UnitNormal` and `st.MultivariateNormal`\n- Uniform `st.UnitUniform`\n- Or, use distributions from `torch.distributions`\n\n### Invertible transformations\n\n- Activation functions\n    - ELU `st.ELU`\n    - Leaky ReLU `st.LeakyReLU`\n    - Sigmoid `st.Sigmoid`\n    - Logit (inverse sigmoid) `st.Logit`\n- Affine\n    - Element-wise transformation `st.Affine`\n    - Linear layer with LU factorization `st.AffineLU`\n    - Matrix exponential `st.MatrixExponential`\n- Coupling layer that can be combined with any element-wise transformation `st.Coupling`\n- Continuous normalizing flows `st.ContinuousTransform`\n    - Differential equations with stochastic trace estimation:\n        - `st.net.DiffeqMLP`\n        - `st.net.DiffeqDeepset`\n        - `st.net.DiffeqSelfAttention`\n    - Differential equations with fixed zero trace:\n        - `st.net.DiffeqZeroTraceMLP`\n        - `st.net.DiffeqZeroTraceDeepSet`\n        - `st.net.DiffeqZeroTraceAttention`\n    - Differential equations with exact trace computation:\n        - `st.net.DiffeqExactTraceMLP`\n        - `st.net.DiffeqExactTraceDeepSet`\n        - `st.net.DiffeqExactTraceAttention`\n- Cummulative sum `st.Cumsum` and difference `st.Diff`\n    - Across single column `st.CumsumColumn` and `st.DiffColumn`\n- Permutations\n    - Flipping the indices `st.Flip`\n    - Random permutation of indices `st.Permute`\n- Spline (quadratic or cubic) element-wise transformation `st.Spline`\n\n\n### Example: Normalizing flow\n\nTo define a normalizing flow, define a base distribution and a series of transformations, e.g.:\n```py\nimport stribor as st\nimport torch\n\ndim = 2\n\nbase_dist = st.UnitNormal(dim)\n\ntransforms = [\n    st.Coupling(\n        transform=st.Affine(dim, latent_net=st.net.MLP(dim, [64], 2 * dim)),\n        mask='ordered_right_half',\n    ),\n    st.ContinuousTransform(\n        dim,\n        net=st.net.DiffeqMLP(dim + 1, [64], dim),\n    )\n]\n\nflow = st.NormalizingFlow(base_dist, transforms)\n\nx = torch.rand(10, dim)\ny = flow(x) # Forward transformation\nlog_prob = flow.log_prob(y) # Log-probability p(y)\n```\n\n### Example: Neural flow\n\nNeural flows are defined similarly but now we don't need the base density and all the invertible transformations must depend on time. In particular, at `t=0`, the transformation becomes an identity.\n```py\nimport torch\nimport stribor as st\n\ndim = 2\n\nf = st.NeuralFlow([\n    st.ContinuousAffineCoupling(\n        latent_net=st.net.MLP(dim, [32], 2 * dim),\n        time_net=st.net.TimeLinear(dim),\n        mask='ordered_0',\n        concatenate_time=False,\n    ),\n])\n\nx = torch.randn(10, 4, dim)\nt = torch.randn_like(x[...,:1])\ny = f(x, t=t) # Outputs the same dimension as x\n```\n\n## Run tests\n\n```\npytest --pyargs stribor\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mbilos/stribor",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stribor",
    "package_url": "https://pypi.org/project/stribor/",
    "platform": null,
    "project_url": "https://pypi.org/project/stribor/",
    "project_urls": {
      "Homepage": "https://github.com/mbilos/stribor"
    },
    "release_url": "https://pypi.org/project/stribor/0.2.0/",
    "requires_dist": [
      "numpy",
      "pytest",
      "scipy",
      "torch (>=1.8.0)",
      "torchdiffeq (==0.2.2)",
      "torchtyping (==0.1.4)"
    ],
    "requires_python": ">=3.7",
    "summary": "Library for normalizing flows and neural flows",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13404381,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1afe684d4c4d05f874b16235cb1012d735977a1efb5df596dabd6f66e6fc20f",
          "md5": "1bad2cd4c00c6de34072dbed7fce339d",
          "sha256": "d7f39eedebd84ba3f3b6e4594679d5c98eab25dc1362b1dc1c6a821904fcd1fb"
        },
        "downloads": -1,
        "filename": "stribor-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1bad2cd4c00c6de34072dbed7fce339d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 54922,
        "upload_time": "2021-06-23T16:45:42",
        "upload_time_iso_8601": "2021-06-23T16:45:42.057704Z",
        "url": "https://files.pythonhosted.org/packages/d1/af/e684d4c4d05f874b16235cb1012d735977a1efb5df596dabd6f66e6fc20f/stribor-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78b75917ec34ca9ca88eb4d7aebec5f5a1e177b2bc44971cd38bbbb64c53e40d",
          "md5": "51579dd2fcd28e3adaa1b37f86d5d558",
          "sha256": "1d41d0a587def0697550b052ceb4088616c9f2952bd011cc8db9bcb4ed71cb64"
        },
        "downloads": -1,
        "filename": "stribor-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "51579dd2fcd28e3adaa1b37f86d5d558",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33609,
        "upload_time": "2021-06-23T16:45:43",
        "upload_time_iso_8601": "2021-06-23T16:45:43.817651Z",
        "url": "https://files.pythonhosted.org/packages/78/b7/5917ec34ca9ca88eb4d7aebec5f5a1e177b2bc44971cd38bbbb64c53e40d/stribor-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1efed050225996c44f7d9292b9d02a2cc18565edf698ca760d8718bb53967ac8",
          "md5": "2129502e8b608966b0eadcdc4ae4264f",
          "sha256": "468e7029e8dae90a1952ecc23874aaf177e622b602f80e1ef710cb583e3f0c26"
        },
        "downloads": -1,
        "filename": "stribor-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2129502e8b608966b0eadcdc4ae4264f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 57708,
        "upload_time": "2022-04-04T20:43:58",
        "upload_time_iso_8601": "2022-04-04T20:43:58.176059Z",
        "url": "https://files.pythonhosted.org/packages/1e/fe/d050225996c44f7d9292b9d02a2cc18565edf698ca760d8718bb53967ac8/stribor-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bc486f4fdfa7d53a0205e235dfcf468b0b924b3c2b623a7226426ab97664d75",
          "md5": "2147f6aafa015f02f3f7a3edfa51f7f2",
          "sha256": "d6941d681b0975e9dbb944c0cb220c2920e6979264b8475067ddd792fe537507"
        },
        "downloads": -1,
        "filename": "stribor-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2147f6aafa015f02f3f7a3edfa51f7f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 35751,
        "upload_time": "2022-04-04T20:44:00",
        "upload_time_iso_8601": "2022-04-04T20:44:00.676460Z",
        "url": "https://files.pythonhosted.org/packages/2b/c4/86f4fdfa7d53a0205e235dfcf468b0b924b3c2b623a7226426ab97664d75/stribor-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1efed050225996c44f7d9292b9d02a2cc18565edf698ca760d8718bb53967ac8",
        "md5": "2129502e8b608966b0eadcdc4ae4264f",
        "sha256": "468e7029e8dae90a1952ecc23874aaf177e622b602f80e1ef710cb583e3f0c26"
      },
      "downloads": -1,
      "filename": "stribor-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2129502e8b608966b0eadcdc4ae4264f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 57708,
      "upload_time": "2022-04-04T20:43:58",
      "upload_time_iso_8601": "2022-04-04T20:43:58.176059Z",
      "url": "https://files.pythonhosted.org/packages/1e/fe/d050225996c44f7d9292b9d02a2cc18565edf698ca760d8718bb53967ac8/stribor-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2bc486f4fdfa7d53a0205e235dfcf468b0b924b3c2b623a7226426ab97664d75",
        "md5": "2147f6aafa015f02f3f7a3edfa51f7f2",
        "sha256": "d6941d681b0975e9dbb944c0cb220c2920e6979264b8475067ddd792fe537507"
      },
      "downloads": -1,
      "filename": "stribor-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2147f6aafa015f02f3f7a3edfa51f7f2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 35751,
      "upload_time": "2022-04-04T20:44:00",
      "upload_time_iso_8601": "2022-04-04T20:44:00.676460Z",
      "url": "https://files.pythonhosted.org/packages/2b/c4/86f4fdfa7d53a0205e235dfcf468b0b924b3c2b623a7226426ab97664d75/stribor-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}