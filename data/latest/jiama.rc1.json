{
  "info": {
    "author": "",
    "author_email": "Li zhigang <imlzg@126.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Topic :: Communications"
    ],
    "description": "# 甲马 jiama\n一个基于 RabbitMQ 的异步 RPC 框架。\nAn asyncio RPC framework based on RabbitMQ.\n\n\n俗话说：外事不决用 REST，内事不决用 RPC，找一圈只发现一个 Nameko，却是同步的，遂有 Jiama 问世。\n\n\n### 安装 install\n```shell\npip install jiama\n```\n\n\n\nRabbitmq 的安装可以使用 docker 方式，具体参见[官网](https://www.rabbitmq.com/download.html)。\n```shell\nsudo docker run -d --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3.10-management\n```\n\n\n\n### 接口 API\n#### jiama run module_path:ServiceClass -c config.toml\njiama run 是一个 Shell 命令，用于启动远程服务，后跟多个模块路径和服务类作为参数，用 -c 指定配置文件。\n\n\n\n#### jiama.server.rpc\n服务端装饰器，用于标志一个方法为远程服务方法。\n\n\n\n#### jiama.client.RpcProxy()\nRPC 服务代理，单例模式，提供在客户端访问远程服务的能力。\n\n\n\n#### jiama.client.RpcProxy().create(config: dict)\n创建 RPC 服务代理\n- `config` dict - 配置选项，包括 RPC 和 log 配置，具体参见 test/jiama/config.toml\n\n\n\n#### jiama.client.RpcProxy.close()\n关闭远程服务代理\n\n\n\n#### rpc.service.method()\n访问远程服务方法\n\n\n### 示例 examples\n\n#### 服务端\njiama/sample.py\n\n```python\nfrom jiama.client import RpcProxy\nfrom jiama.server import rpc\n\n\nclass Service1:\n    @rpc\n    def add(self, x=1, y=2):\n        return x + y\n\nclass Service2:\n    @rpc\n    def sub(self, x=10, y=1):\n        return x - y\n\nclass Service3:\n    def __init__(self):\n        self.config = {'uri': 'amqp://guest:guest@localhost'}\n\n    @rpc\n    async def mul(self, x=1):\n        async with await RpcProxy().create(self.config) as rpc:\n            y = await rpc.Service1.add(1, 1)\n        return x * y\n```\n\n```shell\njiama run jiama.sample -c ./config.toml\n```\n\n\n#### 客户端\n\n```python\nimport asyncio\n\nfrom jiama.client import RpcProxy\n\n\nclass Client:\n    def __init__(self):\n        self.config = {\n            'rpc': {\n                'client_id': 'test',\n                'amqp_uri': 'amqp://guest:guest@localhost/',\n            }\n        }\n\n    async def init(self):\n        '''\n        这是一个需要被你的框架自动调用的初始化方法，比如: fastAPI 的 startup\n        This is a initialization method invoked by you framework like fastAPI's startup\n        '''\n        self.rpc = await RpcProxy().create(self.config)\n        return self\n\n    async def req(self):\n        r = await self.rpc.Service1.add(3, 2)\n        logger.info(f'Result of add is {r}')\n\n        r = await self.rpc.Service2.sub(30, 9)\n        logger.info(f'Result of sub is {r}')\n\n        r = await self.rpc.Service3.mul(5)\n        logger.info(f'Result of mul with nested rpc is {r}')\n\n    async def destroy(self):\n        await self.rpc.close()\n\n\nasync def main():\n    c = await Client().init()\n    await c.req()\n    await c.destroy()\n\nif __name__ == '__main__':\n    asyncio.run(main())\n```\n\n\n\n### License\n[MIT](LICENSE) © Li zhigang\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "asyncio,rpc,rabbitmq",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jiama",
    "package_url": "https://pypi.org/project/jiama/",
    "platform": null,
    "project_url": "https://pypi.org/project/jiama/",
    "project_urls": {
      "Bug Tracker": "https://github.com/liangshanpo/jiama/issues",
      "Homepage": "https://github.com/liangshanpo/jiama"
    },
    "release_url": "https://pypi.org/project/jiama/0.8.1/",
    "requires_dist": [
      "aio-pika",
      "click",
      "yujian",
      "tomli",
      "loguru"
    ],
    "requires_python": ">=3.10",
    "summary": "An aio RPC framework based on RabbitMQ.",
    "version": "0.8.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15749827,
  "releases": {
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78f051fcd5ff93dae8ddf9b1276712464c378c02ad75c61110195648e46a0d90",
          "md5": "1340d0829eebf9aa80e51041b3843c51",
          "sha256": "0a9ed817f80a7e3ccc183e65f4d877ad4fe16e673ffe2338cdc4a7454fef980d"
        },
        "downloads": -1,
        "filename": "jiama-0.8.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1340d0829eebf9aa80e51041b3843c51",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 11031,
        "upload_time": "2022-11-13T08:13:39",
        "upload_time_iso_8601": "2022-11-13T08:13:39.317537Z",
        "url": "https://files.pythonhosted.org/packages/78/f0/51fcd5ff93dae8ddf9b1276712464c378c02ad75c61110195648e46a0d90/jiama-0.8.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cdf5fd8fdfac97fd7dfe42ec95402208be91f7bb7f6617e603616a8de0bfc4e",
          "md5": "1978f7a613b35ac820c5a38a8ce82f55",
          "sha256": "37dc7cb95085bcdc98ac9fa5d8d66b813ca04cb4980db8966d064d8702f013e3"
        },
        "downloads": -1,
        "filename": "jiama-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1978f7a613b35ac820c5a38a8ce82f55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 11058,
        "upload_time": "2022-11-13T08:13:42",
        "upload_time_iso_8601": "2022-11-13T08:13:42.349560Z",
        "url": "https://files.pythonhosted.org/packages/3c/df/5fd8fdfac97fd7dfe42ec95402208be91f7bb7f6617e603616a8de0bfc4e/jiama-0.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "78f051fcd5ff93dae8ddf9b1276712464c378c02ad75c61110195648e46a0d90",
        "md5": "1340d0829eebf9aa80e51041b3843c51",
        "sha256": "0a9ed817f80a7e3ccc183e65f4d877ad4fe16e673ffe2338cdc4a7454fef980d"
      },
      "downloads": -1,
      "filename": "jiama-0.8.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1340d0829eebf9aa80e51041b3843c51",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 11031,
      "upload_time": "2022-11-13T08:13:39",
      "upload_time_iso_8601": "2022-11-13T08:13:39.317537Z",
      "url": "https://files.pythonhosted.org/packages/78/f0/51fcd5ff93dae8ddf9b1276712464c378c02ad75c61110195648e46a0d90/jiama-0.8.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3cdf5fd8fdfac97fd7dfe42ec95402208be91f7bb7f6617e603616a8de0bfc4e",
        "md5": "1978f7a613b35ac820c5a38a8ce82f55",
        "sha256": "37dc7cb95085bcdc98ac9fa5d8d66b813ca04cb4980db8966d064d8702f013e3"
      },
      "downloads": -1,
      "filename": "jiama-0.8.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1978f7a613b35ac820c5a38a8ce82f55",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 11058,
      "upload_time": "2022-11-13T08:13:42",
      "upload_time_iso_8601": "2022-11-13T08:13:42.349560Z",
      "url": "https://files.pythonhosted.org/packages/3c/df/5fd8fdfac97fd7dfe42ec95402208be91f7bb7f6617e603616a8de0bfc4e/jiama-0.8.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}