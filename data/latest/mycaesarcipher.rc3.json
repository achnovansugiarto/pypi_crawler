{
  "info": {
    "author": "schlopp96",
    "author_email": "schloppdaddy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9",
      "Topic :: Security :: Cryptography",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# MyCaesarCipher\n\n> Simple cryptographic substitution-based cipher for encoding plaintext.\n\n---\n\n## About\n\n- The [Caesar Cipher](https://en.wikipedia.org/wiki/Caesar_cipher) is one of the most simple and well-known encryption techniques.\n\n  - Each letter in the plaintext entry is replaced by a letter found at a certain number of positions down the alphabet.\n\n- This project was created as an exercise while I was taking the [\"Cracking Codes with Python\"](https://inventwithpython.com/cracking/) course - which I _highly_ recommend for both beginners and experienced python programmers interested in cryptography!\n\n---\n\n## Installation\n\n### Using pip _(Recommended)_\n\n> _Easiest_ method. _**Highly recommended over manual installation.**_\n\n- Run the following to install _**`MyCaesarCipher`**_ using `pip`:\n\n  - ```python\n    pip install MyCaesarCipher\n    ```\n\n- You should now be able to import/run _**`MyCaesarCipher`**_ within your python environment by entering the following:\n\n  - ```python\n    >>> from MyCaesarCipher import CaesarCipher\n    ...\n    ```\n\n- Done!\n\n---\n\n### Manual Installation\n\n> _Not_ recommended. _**Only use this method if you are unable to use `pip`**_.\n\n1. Before use, navigate to the intended installation location, and create a new directory.\n\n2. Please only do one of the following:\n\n    - **A.** Clone repository with the git client of your preference.\n    - **B.** Download and extract the source code `zip` archive from the [\"[releases\"](https://github.com/schlopp96/MyCaesarCipher/releases) page to the newly created directory.\n\n3. Install all dependencies for this package within the installation directory using the following command:\n\n    - ```python\n      pip install -r requirements.txt\n      ```\n\n4. _**(Optional)**_ move the installation directory to **`\"~Python/Libs/site_packages/\"`** to be able to import this package to a Python environment like any other importable package.\n\n- Done!\n\n---\n\n## Usage\n\n- Within a Python environment or **`.py`** project, simply import the _**`MyCaesarCipher`**_ module to start encryption/decryption of ciphers.\n\n### Message Encryption\n\n- For encrypting text, use the **`CaesarCipher.encrypt`** class method:\n\n  - ```python\n    >>> from MyCaesarCipher import CaesarCipher\n\n    >>> cipher = CaesarCipher() # Create new class instance.\n    >>> msg = 'Test Cipher'\n    >>> cipher.encrypt(text=msg, key=200, stdout_output=True)\n\n    ------------------------------------\n\n    > Original Msg : Test Cipher\n\n    > Shift-Key : 200\n\n    > Encrypted Result: Lwkl Uahzwj\n    ```\n\n- Therefore the final encrypted result of \"Test Cipher\" using a shift key of 200 is:\n\n  - \"**`LwklfUahzwj`**\".\n\n- Note that the `key` parameter is _optional_, and if not provided, a random key between 1 and 25 will be generated:\n\n  - ```python\n    >>> cipher.encrypt('Test Cipher', stdout_output=True)\n\n    ------------------------------------\n\n    > Original Msg : Test Cipher\n\n    > Shift-key : 19\n\n    > Encrypted Result: Mxlm Vbiaxk\n    ```\n\n    ---\n\n  - ```python\n    >>> cipher.encrypt('Test Cipher', stdout_output=True)\n\n    ------------------------------------\n\n    > Original Msg : Test Cipher\n\n    > Shift-key : 24\n\n    > Encrypted Result: Rcqr Agnfcp\n    ```\n\n    ---\n\n  - ```python\n    >>> cipher.encrypt('Test Cipher', stdout_output=True)\n\n    ------------------------------------\n\n    > Original Msg : Test Cipher\n\n    > Shift-key : 4\n\n    > Encrypted Result: Xiwx Gmtliv\n    ```\n\n---\n\n### Message Decryption\n\n- For decrypting text, use the **`CaesarCipher.decrypt`** class method:\n\n  - ```python\n    >>> from MyCaesarCipher import CaesarCipher\n\n    >>> cipher = CaesarCipher() # Create new class instance.\n    >>> decryption = cipher.decrypt(text='Ozno Xdkczm', stdout_output=True)\n\n    ------------------------------------\n\n    > Decrypted Shift-Key 0 : Ozno Xdkczm\n\n    > Decrypted Shift-Key 1 : Nymn Wcjbyl\n\n    > Decrypted Shift-Key 2 : Mxlm Vbiaxk\n\n    > Decrypted Shift-Key 3 : Lwkl Uahzwj\n\n    > Decrypted Shift-Key 4 : Kvjk Tzgyvi\n\n    > Decrypted Shift-Key 5 : Juij Syfxuh\n\n    > Decrypted Shift-Key 6 : Ithi Rxewtg\n\n    > Decrypted Shift-Key 7 : Hsgh Qwdvsf\n\n    > Decrypted Shift-Key 8 : Grfg Pvcure\n\n    > Decrypted Shift-Key 9 : Fqef Oubtqd\n\n    > Decrypted Shift-Key 10 : Epde Ntaspc\n\n    > Decrypted Shift-Key 11 : Docd Mszrob\n\n    > Decrypted Shift-Key 12 : Cnbc Lryqna\n\n    > Decrypted Shift-Key 13 : Bmab Kqxpmz\n\n    > Decrypted Shift-Key 14 : Alza Jpwoly\n\n    > Decrypted Shift-Key 15 : Zkyz Iovnkx\n\n    > Decrypted Shift-Key 16 : Yjxy Hnumjw\n\n    > Decrypted Shift-Key 17 : Xiwx Gmtliv\n\n    > Decrypted Shift-Key 18 : Whvw Flskhu\n\n    > Decrypted Shift-Key 19 : Vguv Ekrjgt\n\n    > Decrypted Shift-Key 20 : Uftu Djqifs\n\n    > Decrypted Shift-Key 21 : Test Cipher # <-- Correct Result\n\n    > Decrypted Shift-Key 22 : Sdrs Bhogdq\n\n    > Decrypted Shift-Key 23 : Rcqr Agnfcp\n\n    > Decrypted Shift-Key 24 : Qbpq Zfmebo\n\n    > Decrypted Shift-Key 25 : Paop Yeldan\n\n    {'Ozno Xdkczm': 0, 'Nymn Wcjbyl': 1, 'Mxlm Vbiaxk': 2, 'Lwkl Uahzwj': 3, 'Kvjk Tzgyvi': 4, 'Juij Syfxuh': 5, 'Ithi Rxewtg': 6, 'Hsgh Qwdvsf': 7, 'Grfg Pvcure': 8, 'Fqef Oubtqd': 9, 'Epde Ntaspc': 10, 'Docd Mszrob': 11, 'Cnbc Lryqna': 12, 'Bmab Kqxpmz': 13, 'Alza Jpwoly': 14, 'Zkyz Iovnkx': 15, 'Yjxy Hnumjw': 16, 'Xiwx Gmtliv': 17, 'Whvw Flskhu': 18, 'Vguv Ekrjgt': 19, 'Uftu Djqifs': 20, 'Test Cipher': 21, 'Sdrs Bhogdq': 22, 'Rcqr Agnfcp': 23, 'Qbpq Zfmebo': 24, 'Paop Yeldan': 25}\n    ```\n\n- The **`CaesarCipher.decrypt`** method will return all possible shifted-key variations of the given encrypted message as a dictionary.\n\n- **_Generally_**, the _most legible_ key output will be the correct decrypted message, assuming the encrypted message was legible initially.\n\n- Regardless, the correct output **MUST** be one of the output values due to the limitations of the algorithm being tied to the length of the alphabet 26 and the number of possible integers [0-9].\n  - This is also the reason why the algorithm is not recommended for serious real-world cryptography use cases.\n\n---\n\n## Contact\n\n- If you have any questions, comments, or concerns that cannot be alleviated through the [project's GitHub repository](https://github.com/schlopp96/MyCaesarCipher), please feel free to contact me through my email address:\n\n  - `schloppdaddy@gmail.com`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/schlopp96/MyCaesarCipher",
    "keywords": "cryptography,Caesar-Cipher,Caesar,Cipher,encryption,decryption,cryptographic,module,script,python",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MyCaesarCipher",
    "package_url": "https://pypi.org/project/MyCaesarCipher/",
    "platform": null,
    "project_url": "https://pypi.org/project/MyCaesarCipher/",
    "project_urls": {
      "Homepage": "https://github.com/schlopp96/MyCaesarCipher"
    },
    "release_url": "https://pypi.org/project/MyCaesarCipher/0.3.0/",
    "requires_dist": [
      "setuptools (>=58.1.0)"
    ],
    "requires_python": "",
    "summary": "Simple cryptographic substitution-based cipher for encoding plaintext.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16819714,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb1c13bddfacd88841e6d929eb5ba6bb0638d88b237870b910d5fe5e82e11ed2",
          "md5": "a7aabe8292878f38a1ea4c6d4223c723",
          "sha256": "fca8b0a987104b3ad574ada320b2c436f48cb0565425e661c59eb8b6bdbb88c0"
        },
        "downloads": -1,
        "filename": "MyCaesarCipher-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7aabe8292878f38a1ea4c6d4223c723",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17972,
        "upload_time": "2022-04-12T01:04:22",
        "upload_time_iso_8601": "2022-04-12T01:04:22.874080Z",
        "url": "https://files.pythonhosted.org/packages/fb/1c/13bddfacd88841e6d929eb5ba6bb0638d88b237870b910d5fe5e82e11ed2/MyCaesarCipher-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92c1df62e1159757a5c7da4fd5c2682c0083ef7447ca0b5a78ba343a3175f579",
          "md5": "f41fdab67f0f20bc49abb47d0f7a91bf",
          "sha256": "0896400d8f95282d374260b01b98f2837c49b5aec66eb7782449a7c034381c9b"
        },
        "downloads": -1,
        "filename": "MyCaesarCipher-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f41fdab67f0f20bc49abb47d0f7a91bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17496,
        "upload_time": "2022-04-12T01:04:24",
        "upload_time_iso_8601": "2022-04-12T01:04:24.504673Z",
        "url": "https://files.pythonhosted.org/packages/92/c1/df62e1159757a5c7da4fd5c2682c0083ef7447ca0b5a78ba343a3175f579/MyCaesarCipher-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "409030c5cab280cc83d26a8da8af02d1ee32fe6ac339441fa8a5e921a433f381",
          "md5": "d11b3019156c8eb303a68fff1809981d",
          "sha256": "53f1b1c4b479f8831d6cd1c23e1f5be878b9240f8568ddd2147eee6fd288a205"
        },
        "downloads": -1,
        "filename": "MyCaesarCipher-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d11b3019156c8eb303a68fff1809981d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18164,
        "upload_time": "2022-05-14T08:05:57",
        "upload_time_iso_8601": "2022-05-14T08:05:57.774284Z",
        "url": "https://files.pythonhosted.org/packages/40/90/30c5cab280cc83d26a8da8af02d1ee32fe6ac339441fa8a5e921a433f381/MyCaesarCipher-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d232d47f3a16f7fc73273818bb57a2a5b18ce0c472979c34042c991edac2ca61",
          "md5": "2a2d29f5022f4bcb0471bf1fb6e71545",
          "sha256": "9baf80cb74aea705c0b78927800461dcc4771b68248fd59d28e7a17a3112cf5a"
        },
        "downloads": -1,
        "filename": "MyCaesarCipher-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2a2d29f5022f4bcb0471bf1fb6e71545",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17705,
        "upload_time": "2022-05-14T08:05:59",
        "upload_time_iso_8601": "2022-05-14T08:05:59.807516Z",
        "url": "https://files.pythonhosted.org/packages/d2/32/d47f3a16f7fc73273818bb57a2a5b18ce0c472979c34042c991edac2ca61/MyCaesarCipher-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed4bbae7c6c701c628fd6d6f58bedc2ec8c0f06a3b7b3feedb30181b0cc60963",
          "md5": "b7f6b2a80a63b9d539620fdaab7e7790",
          "sha256": "58b7dc2bda5c1268f49387a6cb591ebb913fb280f0dcb3614485aad79f2a29a3"
        },
        "downloads": -1,
        "filename": "MyCaesarCipher-0.3.0-py3.11.egg",
        "has_sig": false,
        "md5_digest": "b7f6b2a80a63b9d539620fdaab7e7790",
        "packagetype": "bdist_egg",
        "python_version": "0.3.0",
        "requires_python": null,
        "size": 11192,
        "upload_time": "2023-02-12T09:46:14",
        "upload_time_iso_8601": "2023-02-12T09:46:14.290638Z",
        "url": "https://files.pythonhosted.org/packages/ed/4b/bae7c6c701c628fd6d6f58bedc2ec8c0f06a3b7b3feedb30181b0cc60963/MyCaesarCipher-0.3.0-py3.11.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a638d33415caef96828131c0da1aed148fdae7ece21e9bdcc75ea43ba5fda03a",
          "md5": "1c4b4e15f835c2863c642ed99520216f",
          "sha256": "b843490c8199efb2a5fe796e1c1416301d4e00e19daf80d687c4e76a4be0a836"
        },
        "downloads": -1,
        "filename": "MyCaesarCipher-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c4b4e15f835c2863c642ed99520216f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18973,
        "upload_time": "2023-02-12T09:46:12",
        "upload_time_iso_8601": "2023-02-12T09:46:12.619203Z",
        "url": "https://files.pythonhosted.org/packages/a6/38/d33415caef96828131c0da1aed148fdae7ece21e9bdcc75ea43ba5fda03a/MyCaesarCipher-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c47f9831d3f902ee28aed5975fce259b48d1eb4a6d3c0015d5396225bb1a11e7",
          "md5": "34b1b8134b1c61046af21ab76f29cb68",
          "sha256": "cdc84b2cb862a10b216ad71f68b091ef906624de90ba60697e3d1bc8b49b8c96"
        },
        "downloads": -1,
        "filename": "MyCaesarCipher-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "34b1b8134b1c61046af21ab76f29cb68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18454,
        "upload_time": "2023-02-12T09:46:15",
        "upload_time_iso_8601": "2023-02-12T09:46:15.930577Z",
        "url": "https://files.pythonhosted.org/packages/c4/7f/9831d3f902ee28aed5975fce259b48d1eb4a6d3c0015d5396225bb1a11e7/MyCaesarCipher-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed4bbae7c6c701c628fd6d6f58bedc2ec8c0f06a3b7b3feedb30181b0cc60963",
        "md5": "b7f6b2a80a63b9d539620fdaab7e7790",
        "sha256": "58b7dc2bda5c1268f49387a6cb591ebb913fb280f0dcb3614485aad79f2a29a3"
      },
      "downloads": -1,
      "filename": "MyCaesarCipher-0.3.0-py3.11.egg",
      "has_sig": false,
      "md5_digest": "b7f6b2a80a63b9d539620fdaab7e7790",
      "packagetype": "bdist_egg",
      "python_version": "0.3.0",
      "requires_python": null,
      "size": 11192,
      "upload_time": "2023-02-12T09:46:14",
      "upload_time_iso_8601": "2023-02-12T09:46:14.290638Z",
      "url": "https://files.pythonhosted.org/packages/ed/4b/bae7c6c701c628fd6d6f58bedc2ec8c0f06a3b7b3feedb30181b0cc60963/MyCaesarCipher-0.3.0-py3.11.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a638d33415caef96828131c0da1aed148fdae7ece21e9bdcc75ea43ba5fda03a",
        "md5": "1c4b4e15f835c2863c642ed99520216f",
        "sha256": "b843490c8199efb2a5fe796e1c1416301d4e00e19daf80d687c4e76a4be0a836"
      },
      "downloads": -1,
      "filename": "MyCaesarCipher-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1c4b4e15f835c2863c642ed99520216f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18973,
      "upload_time": "2023-02-12T09:46:12",
      "upload_time_iso_8601": "2023-02-12T09:46:12.619203Z",
      "url": "https://files.pythonhosted.org/packages/a6/38/d33415caef96828131c0da1aed148fdae7ece21e9bdcc75ea43ba5fda03a/MyCaesarCipher-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c47f9831d3f902ee28aed5975fce259b48d1eb4a6d3c0015d5396225bb1a11e7",
        "md5": "34b1b8134b1c61046af21ab76f29cb68",
        "sha256": "cdc84b2cb862a10b216ad71f68b091ef906624de90ba60697e3d1bc8b49b8c96"
      },
      "downloads": -1,
      "filename": "MyCaesarCipher-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "34b1b8134b1c61046af21ab76f29cb68",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18454,
      "upload_time": "2023-02-12T09:46:15",
      "upload_time_iso_8601": "2023-02-12T09:46:15.930577Z",
      "url": "https://files.pythonhosted.org/packages/c4/7f/9831d3f902ee28aed5975fce259b48d1eb4a6d3c0015d5396225bb1a11e7/MyCaesarCipher-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}