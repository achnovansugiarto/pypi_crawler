{
  "info": {
    "author": "Igor Shevchenko",
    "author_email": "mail@igorshevchenko.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Russian",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "=============\nrutermextract\n=============\n\nБиблиотека для извлечения ключевых слов из текстов на русском языке. Для морфологического анализа используется `pymorphy2 <http://pymorphy2.readthedocs.org/en/latest/>`_. Разработка вдохновлена библиотекой `topia.termextract <https://pypi.python.org/pypi/topia.termextract/>`_, которая делает то же самое с англоязычными текстами.\n\nУстановка\n=========\n\n    pip install rutermextract    \n\nИспользование\n=============\n\n    >>> from rutermextract import TermExtractor\n    >>> term_extractor = TermExtractor()\n    >>> text = u'Съешь ещё этих мягких французских булок да выпей же чаю.'\n    >>> for term in term_extractor(text):\n    >>>    print term.normalized, term.count\n    мягкие французские булки 1\n    чай 1\n\nИзвлеченные ключевые слова приводятся в нормальную форму и упорядочиваются от более важных к менее важным.\n\nВозможные применения\n====================\n\n* Автоматическое присвоение тегов.\n\n* Вычисление похожести текстов на основе извлеченных ключевых слов.\n\nВызов библиотеки\n================\n\nАргументы при вызове экземпляра класса `TermExtractor`:\n\n* ``text`` — текст.\n\n* *(опционально)* ``limit`` — максимальное количество извлечённых ключевых слов. По умолчанию ограничения нет.\n\n* *(опционально)* ``nested`` — ``True``, если нужно ивзлекать ключевые слова, лежащие внутри других ключевых слов. Например, вместе с «функциональный язык программирования» извлекаются «язык программирования» и «программирование».\n\n* *(опционально)* ``weight`` — функция для вычисления веса извлеченного ключевого слова. В нее передается объект типа ``Term``. По умолчанию ключевые слова упорядочиваются по количеству употреблений, затем по количеству слов.\n\n* *(опционально)* ``strings`` — ``True``, если результатом вызова должен быть список нормализованных строк. По умолчанию возвращается список объектов типа ``Term``.\n\n`Term` имеет следующие свойства: ``words`` (список слов), ``word_count`` (количество слов), ``normalized`` (тёрм в виде нормализованной строки), ``count`` — количество употреблений.\n\nПример использования функции веса\n---------------------------------\n\n    >>> from rutermextract import TermExtractor\n    >>> term_extractor = TermExtractor()\n    >>> text = ...\n    >>> idf = ...  # Словарь соответствия ключевых слов их обратным частотам.\n    >>> terms = term_extractor(text, weight=lambda term: idf.get(term.normalized, 1.0) * term.count)\n\nЗависимости\n===========\n\n* Python 2.6+ или 3.3+.\n\n* `pymorphy2 <http://pymorphy2.readthedocs.org/en/latest/>`_.\n\n* `enum34 <https://pypi.python.org/pypi/enum34>`_ (для версий ниже 3.4).\n\nКачество работы\n===============\n\nБиблиотека извлекает ключевые слова на основе заранее заданных правил. К сожалению, на данный момент это единственный возможный вариант, поскольку для русского языка не существует открытого синтаксического корпуса, который можно использовать для обучения синтаксических моделей.\n\nОсновные проблемы:\n\n1. Неполные правила. Например, сейчас не извлекаются ключевые слова, содержащие предлоги («вор в законе», «сосед по парте»). Эта проблема может решаться при дальнейшем развитии библиотеки, но правил, покрывающих все случаи всё равно быть не может.\n\n2. Неоднозначность при морфологическом разборе. Сейчас она разрешается выбором наиболее вероятного варианта, что в некоторых случаях неверно. Проблема может проявляться как при извлечении ключевых слов, так и при их нормализации. (Например, из заголовка «Мальчика назвали в честь нападающего футбольного клуба» будет извлечена фраза «нападающий футбольный клуб».)\n\n3. Ложные ключевые слова. Некоторые извлеченные фразы могут не являться на самом деле ключевыми. Размера текста не всегда бывает достаточно для того, чтобы отличить важные для текста слова от неважных, основываясь только на количестве употреблений. Поэтому необходимо использовать сторонние модели (например, tf-idf) для определения важности ключевых слов.\n\nОбратная связь\n==============\n\nБуду рад услышать предложения по улучшению или сообщения о багах в `issues <https://github.com/igor-shevchenko/rutermextract/issues>`_ или `по почте <mailto:mail@igorshevchenko.ru>`_.\n\nЛицензия\n========\n\nMIT\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/igor-shevchenko/rutermextract/tarball/0.3",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/igor-shevchenko/rutermextract",
    "keywords": "",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rutermextract",
    "package_url": "https://pypi.org/project/rutermextract/",
    "platform": "",
    "project_url": "https://pypi.org/project/rutermextract/",
    "project_urls": {
      "Download": "https://github.com/igor-shevchenko/rutermextract/tarball/0.3",
      "Homepage": "https://github.com/igor-shevchenko/rutermextract"
    },
    "release_url": "https://pypi.org/project/rutermextract/0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Term extraction for Russian language",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3230631,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6773094d652001971366774ef4dc6317cd77707802bcd53035e38e29861cb80a",
          "md5": "cbdcd638c4f567d47467bccfcffc4bda",
          "sha256": "e4bf19fad6e3585a036b66a2c9173fbdbd9878c6efb8ea6c0678039b8ddf35ac"
        },
        "downloads": -1,
        "filename": "rutermextract-0.1.zip",
        "has_sig": false,
        "md5_digest": "cbdcd638c4f567d47467bccfcffc4bda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15381,
        "upload_time": "2014-06-17T03:30:39",
        "upload_time_iso_8601": "2014-06-17T03:30:39.066126Z",
        "url": "https://files.pythonhosted.org/packages/67/73/094d652001971366774ef4dc6317cd77707802bcd53035e38e29861cb80a/rutermextract-0.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18be59c1e639c7d3b198455ca981bcffa6cdd1e08aaec7e2f4040c045f726a84",
          "md5": "9aa6868cb76096e7eb13c5daa745089c",
          "sha256": "daf01ac0faa8723787b0a517b5e945990f57ad216ac9bd47f566f3a76538c6f6"
        },
        "downloads": -1,
        "filename": "rutermextract-0.2.zip",
        "has_sig": false,
        "md5_digest": "9aa6868cb76096e7eb13c5daa745089c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16179,
        "upload_time": "2014-07-22T09:33:15",
        "upload_time_iso_8601": "2014-07-22T09:33:15.658735Z",
        "url": "https://files.pythonhosted.org/packages/18/be/59c1e639c7d3b198455ca981bcffa6cdd1e08aaec7e2f4040c045f726a84/rutermextract-0.2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7adb71ff21868a9065cd1f37d15e88922a790263ef8b565162f13bf1befb2cc0",
          "md5": "5f95a69767b02c60d7612c44572d2632",
          "sha256": "1cb4cf836878ffad2c61b036215ec6c6bc0fff1c93348152ca652246aa88db65"
        },
        "downloads": -1,
        "filename": "rutermextract-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5f95a69767b02c60d7612c44572d2632",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8076,
        "upload_time": "2017-10-06T14:27:05",
        "upload_time_iso_8601": "2017-10-06T14:27:05.333282Z",
        "url": "https://files.pythonhosted.org/packages/7a/db/71ff21868a9065cd1f37d15e88922a790263ef8b565162f13bf1befb2cc0/rutermextract-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7adb71ff21868a9065cd1f37d15e88922a790263ef8b565162f13bf1befb2cc0",
        "md5": "5f95a69767b02c60d7612c44572d2632",
        "sha256": "1cb4cf836878ffad2c61b036215ec6c6bc0fff1c93348152ca652246aa88db65"
      },
      "downloads": -1,
      "filename": "rutermextract-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "5f95a69767b02c60d7612c44572d2632",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8076,
      "upload_time": "2017-10-06T14:27:05",
      "upload_time_iso_8601": "2017-10-06T14:27:05.333282Z",
      "url": "https://files.pythonhosted.org/packages/7a/db/71ff21868a9065cd1f37d15e88922a790263ef8b565162f13bf1befb2cc0/rutermextract-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}