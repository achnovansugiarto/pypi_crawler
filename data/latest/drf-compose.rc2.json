{
  "info": {
    "author": "Sotunde Abiodun",
    "author_email": "sotundeabiodun00@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "==============\nDRF Compose\n==============\n\n.. image:: https://img.shields.io/pypi/v/drf_compose.svg\n        :target: https://pypi.python.org/pypi/drf_compose\n\n.. image:: https://img.shields.io/travis/IamAbbey/drf_compose.svg\n        :target: https://travis-ci.com/IamAbbey/drf_compose\n\n.. image:: https://readthedocs.org/projects/drf-compose/badge/?version=latest\n        :target: https://drf-compose.readthedocs.io/en/latest/?version=latest\n        :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/IamAbbey/drf_compose/shield.svg\n     :target: https://pyup.io/repos/github/IamAbbey/drf_compose/\n     :alt: Updates\n\nDRF Compose is a Python package for defining and quick starting Django\nRest Framework projects. With DRF Compose, you use a JSON or YAML file\nto configure your DRF application. Then, with a single command, you get\nto generate your DRF project code using all the specified configuration\nfrom your compose file. To learn more about all the features of DRF\nCompose, see the list of features below.\n\nDRF Compose is aimed at making the process of starting a DRF project\nquick and fun - giving you a development head start experience - while also preventing \nany frustration caused by the inability to quick start an API.\n\nInstalling\n==========\n\nInstall and update using\n`pip <https://pip.pypa.io/en/stable/getting-started/>`__:\n\n.. code-block:: bash\n\n   $ pip install -U drf_compose\n\nUsage\n=====\n\nUsing DRF Compose is basically a two-step process:\n\n-  Define your application in a drf-compose.json file.\n-  Run drf-compose and the DRF compose command generates a ready to use\n   DRF project code.\n\nCommand options overview and help\n=================================\nYou can also see this information by running drf-compose --help from the command line.\n\n.. code-block:: bash\n\n    Usage: drf-compose [OPTIONS]\n\n      This script composes a DRF project.\n\n    Options:\n      -s, --source FILE  Specify an alternate compose file as source  [default: drf-compose.json]\n      --yaml             Indicates that the supplied source file is a YAML file\n      --help             Show this message and exit.\n\n\nOptions\n=======\n\n1. ``name`` *(required)*: specifies the project name.\n2. ``app_with_model`` *(required)*: specifies details describing each apps\n   in the DRF project.\n\n   -  ``app_name`` *(required)*: specifies the app name \n   -  ``models``: a list of models belonging to the app\n\n      -  ``name`` *(required)*: specifies the model name \n      -  ``meta``: specifies the different model meta options as in the\n         `Django model meta\n         documentation <https://docs.djangoproject.com/en/3.2/topics/db/models/#meta-options>`__\n      -  ``fields`` *(required)*: a list of fields belonging to a model.\n\n         -  ``name`` *(required)*: the name of the field as in the\n            `Django model field documentation\n            <https://docs.djangoproject.com/en/3.2/topics/db/models/#fields>`__\n         -  ``type`` *(required)*: the field type as specified in\n            `Django model field type reference\n            documentation <https://docs.djangoproject.com/en/3.2/ref/models/fields/#model-field-types>`__.\n            Basic syntax sugar also supported as shown below:\n            \n            ================  ============================================================\n            Syntax            Field Type\n            ================  ============================================================\n            char              CharField\n            text              TextField\n            url               URLField\n            datetime          DatetimeField\n            fk                ForeignKey\n            o2o               OneToOneField\n            m2m               ManyToManyField\n            ================  ============================================================\n            \n         -  ``options``: specifies field option as in the `Django model\n            field\n            documentation <https://docs.djangoproject.com/en/3.2/ref/models/fields/>`__.\n\n      -  ``use_uuid_as_key`` *(boolean)*: if True, a UUID is used as the\n         model’s primary key.\n      -  ``str``: specifies the field to be returned as representation\n         of the model in ``__str__``. **Must be one of the specified\n         field names**\n3. ``auth_app``: specifies details of the authentication application.\n\n   -  ``app_name`` *(required)*: specifies the app name\n   -  ``model_name`` *(required)*: specifies the model name for the custom user model\n   -  ``username_field``: A string describing the name of the field on the user model that is used as the unique identifier `Django USERNAME_FIELD documentation            <https://docs.djangoproject.com/en/3.2/topics/auth/customizing/>`__.\n   -  ``email_field``: A string describing the name of the email field on the User model.\n      `Django's EMAIL_FIELD documentation <https://docs.djangoproject.com/en/3.2/topics/auth/customizing/#django.contrib.auth.models.CustomUser.EMAIL_FIELD>`__\n   -  ``required_fields``: A list of the field names that will be prompted for when creating a user via the ``createsuperuser`` management command\n      `Django's REQUIRED_FIELDS documentation <https://docs.djangoproject.com/en/3.2/topics/auth/customizing/#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS>`__\n   -  ``meta``: specifies the different model meta options as in the\n      `Django model meta\n      documentation <https://docs.djangoproject.com/en/3.2/topics/db/models/#meta-options>`__\n   -  ``fields``: a list of fields belonging to a model.\n\n      -  ``name`` *(required)*: the name of the field as in the\n         `Django model field documentation\n         <https://docs.djangoproject.com/en/3.2/topics/db/models/#fields>`__\n      -  ``type`` *(required)*: the field type as specified in\n         `Django model field type reference\n         documentation <https://docs.djangoproject.com/en/3.2/ref/models/fields/#model-field-types>`__.\n         Basic syntax sugar also supported as shown below:\n         \n         ================  ============================================================\n         Syntax            Field Type\n         ================  ============================================================\n         char              CharField\n         text              TextField\n         url               URLField\n         datetime          DatetimeField\n         fk                ForeignKey\n         o2o               OneToOneField\n         m2m               ManyToManyField\n         ================  ============================================================\n         \n      -  ``options``: specifies field option as in the `Django model\n         field\n         documentation <https://docs.djangoproject.com/en/3.2/ref/models/fields/>`__.\n\n   -  ``use_uuid_as_key`` *(boolean)*: if True, a UUID is used as the\n      model’s primary key.\n   -  ``str``: specifies the field to be returned as representation\n      of the model in ``__str__``. **Must be one of the specified\n      field names**\n4. ``include``: specifies the addons to be included in the application.\n\n   -  ``simple_jwt`` *(boolean)*: if True, includes `Simple JWT <https://github.com/jazzband/djangorestframework-simplejwt>`__ JSON Web Token authentication plugin into the application.\n   \n      **COMING SOON!**\n   -  ``django_filter`` *(boolean)* if True, includes `Django-filter <https://github.com/carltongibson/django-filter>`__, a reusable Django application allowing users to declaratively add dynamic QuerySet filtering from URL parameters.\n   -  ``docker`` *(boolean)*: if True, includes docker setup option into the application.\n   -  ``dj-database-url`` *(boolean)*: if True, includes `DJ-Database-URL <https://github.com/jacobian/dj-database-url>`__ , a simple Django utility allows you to utilize the 12factor inspired DATABASE_URL environment variable to configure your Django application.\n\nLinks\n=====\n\n-  Documentation: https://drf-compose.readthedocs.io\n-  Changes: https://drf-compose.readthedocs.io/changes/\n-  PyPI Releases: https://pypi.org/project/drf-compose/\n-  Source Code: https://github.com/IamAbbey/drf_compose\n-  Issue Tracker: https://github.com/IamAbbey/drf_compose/issues\n\nCredits\n=======\n\nThis package was created with\n`Cookiecutter <https://github.com/audreyr/cookiecutter>`__ and the\n`audreyr/cookiecutter-pypackage <https://github.com/audreyr/cookiecutter-pypackage>`__\nproject template.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/IamAbbey/drf_compose",
    "keywords": "drf_compose",
    "license": "BSD license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf-compose",
    "package_url": "https://pypi.org/project/drf-compose/",
    "platform": "",
    "project_url": "https://pypi.org/project/drf-compose/",
    "project_urls": {
      "Homepage": "https://github.com/IamAbbey/drf_compose"
    },
    "release_url": "https://pypi.org/project/drf-compose/0.1.1/",
    "requires_dist": [
      "Click (==8.0)",
      "Django (==3.2.7)",
      "django-cors-headers (==3.8.0)",
      "djangorestframework (==3.12.4)",
      "drf-yasg (==1.20.0)",
      "emoji (==1.4.2)",
      "PyYAML (==5.4.1)",
      "black (==21.7b0)"
    ],
    "requires_python": ">=3.6",
    "summary": "DRF Compose generates ready to use API using Django Rest Framework",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12681543,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91a38d2b7cb01534ac1a7dc80fc8a6f1d5955d255e33c9950caaee8e6864a6c8",
          "md5": "f336bd6e3e807dd47e93e52b83d985fe",
          "sha256": "86197350704b6443184331aab9470eb8003c5cb7a269bea54123883dd350e1fa"
        },
        "downloads": -1,
        "filename": "drf_compose-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f336bd6e3e807dd47e93e52b83d985fe",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 19867,
        "upload_time": "2021-10-22T18:47:28",
        "upload_time_iso_8601": "2021-10-22T18:47:28.798335Z",
        "url": "https://files.pythonhosted.org/packages/91/a3/8d2b7cb01534ac1a7dc80fc8a6f1d5955d255e33c9950caaee8e6864a6c8/drf_compose-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84ac48640dd6059056b1c31040bb7908545408e6a51668292f936cf4c9dee52d",
          "md5": "e5c77b9cf2e45017b174f1a0a811b22a",
          "sha256": "1343567444fbb47cfe05026a48b2f3d68b027d2ca1f0b968776e59ae43bf6b2d"
        },
        "downloads": -1,
        "filename": "drf_compose-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e5c77b9cf2e45017b174f1a0a811b22a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22904,
        "upload_time": "2021-10-22T18:47:30",
        "upload_time_iso_8601": "2021-10-22T18:47:30.286419Z",
        "url": "https://files.pythonhosted.org/packages/84/ac/48640dd6059056b1c31040bb7908545408e6a51668292f936cf4c9dee52d/drf_compose-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e99a1f2d39143be4163c791309ae696f015d80cfb392aea8407776d64e5e559d",
          "md5": "1a736ec1e188a5077add3d725c80f15f",
          "sha256": "90ccd55a23220f959165ccf7abdbf9598aa3d981d93b10136c1a772e730f2089"
        },
        "downloads": -1,
        "filename": "drf_compose-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a736ec1e188a5077add3d725c80f15f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 20742,
        "upload_time": "2022-01-24T23:09:36",
        "upload_time_iso_8601": "2022-01-24T23:09:36.741318Z",
        "url": "https://files.pythonhosted.org/packages/e9/9a/1f2d39143be4163c791309ae696f015d80cfb392aea8407776d64e5e559d/drf_compose-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5ef2216d335dc0b98c86eb31cbe0a19bbb700020059f55a1bcc64ed905ff0bf",
          "md5": "90b93ff1dde1f03d678012881eaf27b9",
          "sha256": "37d940442468a0d43dd8c181d482b48688afa48997d5b53da208d3b9432a6132"
        },
        "downloads": -1,
        "filename": "drf_compose-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "90b93ff1dde1f03d678012881eaf27b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24978,
        "upload_time": "2022-01-24T23:09:38",
        "upload_time_iso_8601": "2022-01-24T23:09:38.263436Z",
        "url": "https://files.pythonhosted.org/packages/f5/ef/2216d335dc0b98c86eb31cbe0a19bbb700020059f55a1bcc64ed905ff0bf/drf_compose-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e99a1f2d39143be4163c791309ae696f015d80cfb392aea8407776d64e5e559d",
        "md5": "1a736ec1e188a5077add3d725c80f15f",
        "sha256": "90ccd55a23220f959165ccf7abdbf9598aa3d981d93b10136c1a772e730f2089"
      },
      "downloads": -1,
      "filename": "drf_compose-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1a736ec1e188a5077add3d725c80f15f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 20742,
      "upload_time": "2022-01-24T23:09:36",
      "upload_time_iso_8601": "2022-01-24T23:09:36.741318Z",
      "url": "https://files.pythonhosted.org/packages/e9/9a/1f2d39143be4163c791309ae696f015d80cfb392aea8407776d64e5e559d/drf_compose-0.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f5ef2216d335dc0b98c86eb31cbe0a19bbb700020059f55a1bcc64ed905ff0bf",
        "md5": "90b93ff1dde1f03d678012881eaf27b9",
        "sha256": "37d940442468a0d43dd8c181d482b48688afa48997d5b53da208d3b9432a6132"
      },
      "downloads": -1,
      "filename": "drf_compose-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "90b93ff1dde1f03d678012881eaf27b9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 24978,
      "upload_time": "2022-01-24T23:09:38",
      "upload_time_iso_8601": "2022-01-24T23:09:38.263436Z",
      "url": "https://files.pythonhosted.org/packages/f5/ef/2216d335dc0b98c86eb31cbe0a19bbb700020059f55a1bcc64ed905ff0bf/drf_compose-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}