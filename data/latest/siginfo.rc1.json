{
  "info": {
    "author": "Jonas Marcello",
    "author_email": "jonas.marcello@esbme.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Unix",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Bug Tracking",
      "Topic :: Software Development :: Debuggers",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Logging",
      "Topic :: System :: Monitoring"
    ],
    "description": "*******\nsiginfo\n*******\n\n``siginfo`` is a small Python module to conveniently get status or debug info from running Python processes.\n\n\n``siginfo`` listens for ``SIGUSR1`` or ``SIGUSR2`` [#f1]_ signals and prints info about the current callstack, local variables etc.\n\n\nUse cases\n=========\nYou have long running Python processes and want to check in on progress, but don't want to print the progress all the time.\nThis is especially useful for I/O heavy operations.\n\nImagine you're reading in a large file and work on it line by line. Instead of printing the line-number in regular intervals, you can simply send a SIGUSR command from another shell session and see the current callstack or start an interactive debugger. \n\n\nHow to\n======\n\nSimply add the following two lines:\n\n.. code:: python\n\n    from siginfo import SiginfoBasic\n    SiginfoBasic()\n\nto your python script. Once your application is running, you can always check the current callstack from another shell session by sending a SIGUSR signal.\n\n.. code:: bash\n\n    kill -SIGUSR1 ${pid}\n\n\nIt will now print the current callstack with basic information about all local variables to stdout (or a predefined file).\n\n.. code-block:: bash\n\n    ========================================================================================================================\n    LEVEL       0\n    METHOD      read_lines\n    LINE NUMBER:    33\n    ------------------------------------------------------------------------------------------------------------------------\n    LOCALS\n    VARIABLE | TYPE            | VALUE\n    i        | int             | 1\n    fh       | TextIOWrapper   | <_io.TextIOWrapper name='many_rows.txt' mode='r' encoding='UTF-8'>\n    b        | int             | 15\n    a        | int             | 12\n    line     | str             | Row 1\n\n    ------------------------------------------------------------------------------------------------------------------------\n    SCOPE   <code object read_lines at 0x108c30c90, file \"long_script.py\", line 24>\n    CALLER  <code object main2 at 0x108c309c0, file \"long_script.py\", line 21>\n    ========================================================================================================================\n\n    ========================================================================================================================\n    LEVEL       1\n    METHOD      main2\n    LINE NUMBER:    22\n    ------------------------------------------------------------------------------------------------------------------------\n    LOCALS\n    VARIABLE    | TYPE    | VALUE\n    ------------------------------------------------------------------------------------------------------------------------\n    SCOPE   <code object main2 at 0x108c309c0, file \"long_script.py\", line 21>\n    CALLER  <code object main at 0x108c30ed0, file \"long_script.py\", line 18>\n    ========================================================================================================================\n\n    ...\n\n\nInstallation\n============\nI want to add this to pypy, but not yet done. Clone the git repo and create a symlink from your python script folder to the ``signint`` folder.\n\n.. code:: bash\n\n    ln -s ./siginfo <PATH_TO_SIGINFO_REPO>/siginfo\n\n\nUsage\n=====\n\nInclude ``siginfo`` in your python script\n\n.. code:: python\n\n    import siginfo\n\n\nInitialize SignInfo Class\n-------------------------\n\n.. code:: python\n\n    siginfo.SiginfoBasic()\n\n\n\nBasic overview\n==============\n\n``siginfo`` contains the following classes:\n\n- ``SiginfoBasic`` Print info about the current stack (and caller stacks). Regular execution continues automatically.\n- ``SigInfoPDB`` Open the ``PDB`` debugger. Pauses script execution until debugger is exited.\n- ``SigInfoSingle`` Print the value of a single variable of the current scope. Continues regular execution automatically.\n\n\nInitiating the class\n--------------------\n\nAll class allow the following arguments:\n\n- ``info`` Listen for ``SIGNFO`` (Default: ``True``) (only on Mac and BSD)\n- ``usr1`` Listen for ``SIGUSR1`` (Default: ``True``)\n- ``usr2`` Listen for ``SIGUSR2`` (Default: ``False``)\n- ``output`` Where to write the output to (Default: ``sys.stdout``). Can be anything that offers a ``write`` function.\n\n\n.. code:: python\n\n    from siginfo import SiginfoBasic\n    SiginfoBasic(info=True, usr1=False)  # listen only for SIGINFO\n    SiginfoBasic(info=False, usr=True)  # listen only for SIGUSR1\n    SiginfoBasic(output=open('mylog.log', 'a'))  # Write call stack output to a log file\n\n\n\n``signinfo`` class instance attributes\n--------------------------------------\n\n- ``COLUMNS``: Maximum width of the Terminal (or max number of rows per line in an output file) (Default: current tty columns - 20; Fallback to 80 if determination isn't possible)\n- ``MAX_LEVELS``: Number of stack frames to print (Default: 1 [only the current one])\n- ``OUTPUT``: Same as ``output`` argument to the constructor function. Defines where to write the output to (Default: ``sys.stdout``)\n\n.. code:: python\n\n    from siginfo import SiginfoBasic\n    info_handler = SiginfoBasic()\n\n    info_handler.COLUMNS = 200  # Format output to match 200 columns\n    info_handler.MAX_LEVELS = 4  # Print the current frame + 3 parent frames\n    info_handler.OUTPUT = open('mylog.log', 'a')  # write the output to mylog.log\n\n\nAPI docs\n========\nFor a more detailed API description, check out `the full documentation`_ \n\n.. _the full documentation: https://esbme.com/siginfo/docs/\n\n\n.. rubric:: Footnotes\n\n.. [#f1] In addition, on MacOS or BSD system, the ``SIGINFO`` signal can be used as well.\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/anergictcell/siginfo",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "siginfo",
    "package_url": "https://pypi.org/project/siginfo/",
    "platform": "",
    "project_url": "https://pypi.org/project/siginfo/",
    "project_urls": {
      "Homepage": "https://github.com/anergictcell/siginfo"
    },
    "release_url": "https://pypi.org/project/siginfo/0.9/",
    "requires_dist": null,
    "requires_python": ">=2.7",
    "summary": "A Python package to help debugging and monitoring python script",
    "version": "0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7582229,
  "releases": {
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae7aa70c9246efaedb71274f3596c87861c633a3fbc4ebe9e77f1f86254c0e21",
          "md5": "a5fb0e6400de49efbc702e751edfe95e",
          "sha256": "c0afb5676fd64d4827e5abef32be87453024027bc3166ddce462d11d2f7e15c0"
        },
        "downloads": -1,
        "filename": "siginfo-0.9-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5fb0e6400de49efbc702e751edfe95e",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=2.7",
        "size": 10891,
        "upload_time": "2020-06-28T18:11:13",
        "upload_time_iso_8601": "2020-06-28T18:11:13.033230Z",
        "url": "https://files.pythonhosted.org/packages/ae/7a/a70c9246efaedb71274f3596c87861c633a3fbc4ebe9e77f1f86254c0e21/siginfo-0.9-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "431ebe5d42f6f0f4d211f0bbe53cfaec2911d10a1d5d1ce5884abda4dc8674a0",
          "md5": "19c98546699f2302fa24c94cfa8d52ee",
          "sha256": "f3c63251102c3dd8893262dbe45aa2303c63e192715228b1c31705be23bceebf"
        },
        "downloads": -1,
        "filename": "siginfo-0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19c98546699f2302fa24c94cfa8d52ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 10860,
        "upload_time": "2020-06-28T18:11:15",
        "upload_time_iso_8601": "2020-06-28T18:11:15.211120Z",
        "url": "https://files.pythonhosted.org/packages/43/1e/be5d42f6f0f4d211f0bbe53cfaec2911d10a1d5d1ce5884abda4dc8674a0/siginfo-0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "077a5cd78b6888bdc4217639d9fac2c55ec2b2ced8cac058c2fc6552c2d8a33b",
          "md5": "2ef78dd21fe1f2d1ec2961f94a100570",
          "sha256": "790c78db9507b47433863cd455574a3be60f71a292fc32e410f2721ec42a6527"
        },
        "downloads": -1,
        "filename": "siginfo-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "2ef78dd21fe1f2d1ec2961f94a100570",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 8395,
        "upload_time": "2020-06-28T18:11:16",
        "upload_time_iso_8601": "2020-06-28T18:11:16.540958Z",
        "url": "https://files.pythonhosted.org/packages/07/7a/5cd78b6888bdc4217639d9fac2c55ec2b2ced8cac058c2fc6552c2d8a33b/siginfo-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae7aa70c9246efaedb71274f3596c87861c633a3fbc4ebe9e77f1f86254c0e21",
        "md5": "a5fb0e6400de49efbc702e751edfe95e",
        "sha256": "c0afb5676fd64d4827e5abef32be87453024027bc3166ddce462d11d2f7e15c0"
      },
      "downloads": -1,
      "filename": "siginfo-0.9-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "a5fb0e6400de49efbc702e751edfe95e",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": ">=2.7",
      "size": 10891,
      "upload_time": "2020-06-28T18:11:13",
      "upload_time_iso_8601": "2020-06-28T18:11:13.033230Z",
      "url": "https://files.pythonhosted.org/packages/ae/7a/a70c9246efaedb71274f3596c87861c633a3fbc4ebe9e77f1f86254c0e21/siginfo-0.9-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "431ebe5d42f6f0f4d211f0bbe53cfaec2911d10a1d5d1ce5884abda4dc8674a0",
        "md5": "19c98546699f2302fa24c94cfa8d52ee",
        "sha256": "f3c63251102c3dd8893262dbe45aa2303c63e192715228b1c31705be23bceebf"
      },
      "downloads": -1,
      "filename": "siginfo-0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "19c98546699f2302fa24c94cfa8d52ee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 10860,
      "upload_time": "2020-06-28T18:11:15",
      "upload_time_iso_8601": "2020-06-28T18:11:15.211120Z",
      "url": "https://files.pythonhosted.org/packages/43/1e/be5d42f6f0f4d211f0bbe53cfaec2911d10a1d5d1ce5884abda4dc8674a0/siginfo-0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "077a5cd78b6888bdc4217639d9fac2c55ec2b2ced8cac058c2fc6552c2d8a33b",
        "md5": "2ef78dd21fe1f2d1ec2961f94a100570",
        "sha256": "790c78db9507b47433863cd455574a3be60f71a292fc32e410f2721ec42a6527"
      },
      "downloads": -1,
      "filename": "siginfo-0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "2ef78dd21fe1f2d1ec2961f94a100570",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 8395,
      "upload_time": "2020-06-28T18:11:16",
      "upload_time_iso_8601": "2020-06-28T18:11:16.540958Z",
      "url": "https://files.pythonhosted.org/packages/07/7a/5cd78b6888bdc4217639d9fac2c55ec2b2ced8cac058c2fc6552c2d8a33b/siginfo-0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}