{
  "info": {
    "author": "Enrico Zanardo",
    "author_email": "enrico.zanardo101@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Beez\nP2P Blockchain for Distributed and Decentralized Machine Learning and Digital Assent Management.\n\n\n## 1 Setup\nInit the project with the default settings that are needed to deploy a python library on pypi.\n\n## 2 Milestone - Transactions\n\n### 2.1\n- Transaction Class\n    - Initializer\n    - ToJson Method\n\n- Test Application\n\n### 2.2\n- Wallet Class\n    - Generating RSA Key-Pairs\n    - Sign method\n\n- Utility Class\n    - Hash method\n\n- Transaction Class\n    - Sign Transaction\n\n### 2.3\n- Wallet Class\n    - Validating Signatures\n    - Exporting PublicKey\n- Test Application\n    - Detecting invalid Transactions\n\n### 2.4\n- Transaction Class\n    - Consistent Representation\n    - Solving invalid Signature\n- Wallet Class\n    - Directly create and signed Transactions\n\n### 2.5 \n- Transaction Pool Class\n    - Adding Transactions\n    - Check if a tx is unique\n\n## 3. Milestone Blocks\n\n### 3.1 \n- Block Class\n    - Initializer\n    - toJson method\n- Test Application\n    - Creating a First Block\n\n### 3.2\n- Block Class\n    - Consistent implementation\n- Wallet Class\n    - create signed Blocks\n- Test Application\n    - Testing signatures\n    - pprint library (pretty print) for Human readable Block info\n\n## 4 Milestone Blockchain\n\n### 4.1\n- Blockchain Class\n    - Initializer\n    - Basic functionality to add Blocks\n    - toJson method\n- Test Application\n    - Create first Blockchain instance\n\n### 4.2\n- Blockchain Class\n    - Validitycheck: lastHash\n    - Validitycheck: blockCounter\n- Block Class\n    - Creation of the Genesis Block\n- Test Application\n    - Testing validity checks\n\n## 5 Milestone Account Model\n\n### 5.1\n- Account Model Class [2200ezp]\n    - Inizializer\n    - Adding Accounts\n    - Updating Balances\n    - Retrieving Balances\n- Test Application\n    - Test all created methods\n\n### 5.2 \n- Blockchain Class\n    - Add Account Model\n    - Retrieve covered Transactions\n- Test Application\n    - Retrieve covered Transactions from Transaction Pool\n\n### 5.3\n- Blockchain Class\n    - Introduce EXCHANGE Transaction\n- Test Application\n    - Need to update Account State Model\n    - Implications of update mechanism (the order of transactions matter!!!)\n\n### 5.4\n- Blockchain Class\n    - Execute Transactions\n- Test Application\n    - Creating Blocks\n    - Identify need to remove Tx from Transaction Pool\n\n### 5.5\n- Transaction Pool Class\n    - Rmoving Transactions from Pool\n- Test Application\n    - Creating Blocks having duplicate transactions problem solved\n\n## 6 Milestone Node\n\n### 6.1 \n- Node Class\n    - Inizializer\n    - Adding Blockchain\n    - Adding Transaction Pool\n- Test Application\n    - Create first Node Instance\n\n## 7 Milestone P2P\n\n### 7.1\n- Socket Communication Class\n    - Inizializer\n    - Starting P2P Thread\n- Node Class\n    - Implement P2P\n- Test Application\n    - Startup a Node running P2P\n\n### 7.2\n- Socket Communication Class\n    - Connection Callbacks\n    - Messaging\n- Test Application\n    - Test first Communication\n\n### 7.3\n- Helper Class & Methods\n    - Message Class\n    - Socket Connector Class\n    - Encoding & Decoding\n\n### 7.4\n- P2P Discovery Handler Class\n    - Inizializer\n    - Starting Peer Discovery\n- Socket Communication Class\n    - Add Peer-List Property\n- Test Application\n    - Test Peer Discovery Handler\n\n### 7.5\n- P2P Discovery Handler Class\n    - Implement Handshake\n- Socket Communication Class\n    - Introduce the first Connection Node\n- Test Application\n    - Testing Handshake\n\n### 7.6\n- P2P Discovery Handler Class\n    - Adopt Handshake\n    - Implement Handshake Message\n- Socket Communication Class\n    - Adopt Node_Message\n- Test Application\n    - Testing Handshake\n\n### 7.7\n- P2P Discovery Handler Class\n    - Adopt Status & Discovery\n    - Implement Handle Message\n- Socket Communication Class\n    - Adopt Node_Message\n- Test Application\n    - Show working Peer-Discovery\n\n## 8 Milestone Rest-API\n\n### 8.1\n- NodeAPI Class\n    - Initializer\n    - Start REST API\n    - Create first EndPoint\n- Test API\n    - Browser -> Visit the first Route/Endpoint\n\n### 8.2\n- NodeAPI Class\n    - Define SocketPort\n    - Blockchain EndPoint\n    - Transaction Pool EndPoint\n- Test API\n    - Browser -> Visit the Routes/Endpoints\n\n### 8.3 \n- NodeAPI Class\n    - Exchange EndPoint\n    - Handling incoming TX\n- Node Class\n    - Receiveing TX from API\n- Test Application\n    - HTTP Interaction -> Issuing HTTP Requests\n\n### 8.4 \n- Socket Communication Class\n    - Adapt Node_Message\n- Node Class\n    - Adapt Message Handling\n- Test Application\n    - Show working API\n\n## Milestone 9 Proof of Stake\n\n### 9.1\n- Proof of Stake Class\n    - Inizializer\n    - Updating Stakes\n    - Getting Stakes\n- Test Application\n    - Testing methods\n\n### 9.2 \n- Lottery Class\n    - Inizializer\n    - Creating Lottery-Hash\n- Test Application\n    - Creating Lots\n\n### 9.3\n- Proof of Stake Class\n    - Add Forger Selection\n    - Implementing required methods\n- Test Application\n    - Forger Selection\n    - Random & Proportional Stake\n\n### 9.4\n- Proof of Stake Class\n    - Trigger forger selection\n    - Adapt Transaction Pool\n- Test Application\n    - Next steps (an initial Staker with some stakes is needed in order to forge a Block!)\n\n### 9.5\n- Proof of Stake Class\n    - Integration (stake transactions)\n    - Wallet from file\n    - First Staker\n- Test Application\n    - Forger Selection\n\n### 9.6\n- Forgers creating Bloks\n    - Block creation\n    - By selecting Forger\n    - Broadcasting Block\n    - Bugfixes\n- Test Application\n    - Show need to handle Block Messages\n\n### 9.7\n- Handling Block Messages\n- Adapt Node Class\n- Test Application\n    - Show Consensus in Nodes\n\n### 9.8\n- Stability\n- Dealing with Chain Differences\n- Requesting Blockchain State\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "beez",
    "package_url": "https://pypi.org/project/beez/",
    "platform": null,
    "project_url": "https://pypi.org/project/beez/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/beez/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.10.0",
    "summary": "A Blockchain for Machine Learnig models and Digital Asset Management",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13385159,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "275da93e82310645e38010f5ceb7a8f45adf30d15684d801607c99118dce6152",
          "md5": "d08880a11a35bb1a6e38cb4f5a3ff9e7",
          "sha256": "b68b9312833473cf42ac2af5d6b878a59554e4f4428dfb6d4624af479697738d"
        },
        "downloads": -1,
        "filename": "beez-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d08880a11a35bb1a6e38cb4f5a3ff9e7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10.0",
        "size": 32165,
        "upload_time": "2022-04-02T16:37:50",
        "upload_time_iso_8601": "2022-04-02T16:37:50.897525Z",
        "url": "https://files.pythonhosted.org/packages/27/5d/a93e82310645e38010f5ceb7a8f45adf30d15684d801607c99118dce6152/beez-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbbf8e007b0424dc06b5a4ecc8cfd847c112d193a85302588a759ee4068bb013",
          "md5": "259474653e44a5b51e2cc7d2dfc47e9d",
          "sha256": "b05aa876a79dace6a3c13a79af515bd93911bfed47b8f5f641123ac089286621"
        },
        "downloads": -1,
        "filename": "beez-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "259474653e44a5b51e2cc7d2dfc47e9d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10.0",
        "size": 28273,
        "upload_time": "2022-04-02T16:37:52",
        "upload_time_iso_8601": "2022-04-02T16:37:52.930378Z",
        "url": "https://files.pythonhosted.org/packages/fb/bf/8e007b0424dc06b5a4ecc8cfd847c112d193a85302588a759ee4068bb013/beez-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41cac4985bc17e4b6c32081647850ba53dff22f6ae861ac5085af8dfb2ea930f",
          "md5": "c5bc9c89994622181307e0db375a59ee",
          "sha256": "ca91cbfd6071fd12cbcc5c09ce91ea7ce22e7c82107ed9c4cb8f01751ffaa637"
        },
        "downloads": -1,
        "filename": "beez-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c5bc9c89994622181307e0db375a59ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10.0",
        "size": 28266,
        "upload_time": "2022-04-02T17:00:08",
        "upload_time_iso_8601": "2022-04-02T17:00:08.877047Z",
        "url": "https://files.pythonhosted.org/packages/41/ca/c4985bc17e4b6c32081647850ba53dff22f6ae861ac5085af8dfb2ea930f/beez-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41cac4985bc17e4b6c32081647850ba53dff22f6ae861ac5085af8dfb2ea930f",
        "md5": "c5bc9c89994622181307e0db375a59ee",
        "sha256": "ca91cbfd6071fd12cbcc5c09ce91ea7ce22e7c82107ed9c4cb8f01751ffaa637"
      },
      "downloads": -1,
      "filename": "beez-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c5bc9c89994622181307e0db375a59ee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10.0",
      "size": 28266,
      "upload_time": "2022-04-02T17:00:08",
      "upload_time_iso_8601": "2022-04-02T17:00:08.877047Z",
      "url": "https://files.pythonhosted.org/packages/41/ca/c4985bc17e4b6c32081647850ba53dff22f6ae861ac5085af8dfb2ea930f/beez-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}