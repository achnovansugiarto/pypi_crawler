{
  "info": {
    "author": "xiaobaiTser",
    "author_email": "807447312@qq.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# simlpe_automation_framework\n\n### 介绍\n    simple_automation_framework(简称：SAF)\n    使用最简单的模式就可以实现需要功能和测试效果，也是xiaobaiauto2的简化版\n    SAF继承了selenium、requests/httpx、appium、loguru、xiaobaiauto2、飞书机器人、钉钉机器人、企业微信机器人（暂时不支持）、禅道提单API\n    \n\n### 软件架构\n    xiaobaiauo2的简化版\n\n### 版本注意\n    尽量使用Python 3.9.* 版本\n    防止某些库出现不兼容问题，导致功能不可使用\n\n### 安装教程\n```commandline\npip config set global.index-url https://pypi.douban.com/simple    注：将pip源修改为国内源\npip install saf\n```\n\n### 使用说明\n- 优先修改saf/data/config.py中飞书/钉钉的webhook\n```python\nclass feishu(object):\n    @staticmethod\n    def webhook():\n        return 'https://open.feishu.cn/open-apis/bot/v2/hook/xxxx'\n\nclass dingding(object):\n    @staticmethod\n    def webhook():\n        return 'https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxx'\n```\n- conftest.py（保持此文件与用例文件在同目录下）\n```python\n# filename = conftest.py\nfrom saf.utils.sendMsgUtils import robotSendMessage\nimport pytest\n\n@pytest.mark.hookwrapper\ndef pytest_runtest_makereport(item):\n    \"\"\"\n    :param item:\n    \"\"\"\n    outcome = yield\n    report = outcome.get_result()\n    if report.outcome == 'failed':\n        # 调用机器人发送执行结果\n        robotSendMessage(robot_name='feishu', msg=f'测试脚本：{report.nodeid.split(\"::\")[0]}\\n测试用例：{report.nodeid.split(\"::\")[1]}\\n测试结果：{report.outcome}')\n        # robotSendMessage(robot_name='dingding', msg=f'测试脚本：{report.nodeid.split(\"::\")[0]}\\n测试用例：{report.nodeid.split(\"::\")[1]}\\n测试结果：{report.outcome}')\n        # robotSendMessage(robot_name='feishu,dingding', msg=f'测试脚本：{report.nodeid.split(\"::\")[0]}\\n测试用例：{report.nodeid.split(\"::\")[1]}\\n测试结果：{report.outcome}')\n```\n- 用例文件\n```python\n# fielname = test_xiaobai_auto_script.py\n\ndef setup_module():\n    ''' 用例脚本执行之前需要准备的信息 '''\n    ...\n\ndef teardown_module():\n    ''' 用例脚本执行之后需要清除的信息 '''\n\ndef setup_function():\n    ''' 初始化测试用例执行之前状态信息 '''\n    ...\n\ndef teardown_function():\n    ''' 清除测试用例执行之后所产生的信息 '''\n    ...\n\ndef test_yewu_name_a():\n    ''' 用例函数\n        需要针对业务场景的测试步骤的实现\n            1、UI测试就是定位需要操作的界面节点然后执行操作\n            2、API测试就是执行相关接口实现接口的功能\n        需要针对每次的结果添加断言进行判断处理\n    '''\n\ndef test_yewu_name_b():\n    ''' 用例函数\n        需要针对业务场景的测试步骤的实现\n            1、UI测试就是定位需要操作的界面节点然后执行操作\n            2、API测试就是执行相关接口实现接口的功能\n        需要针对每次的结果添加断言进行判断处理\n    '''\n```\n```python\n# filename = test_xiaobai_shop_allure.py\n# JDK与Allure已安装且配置好环境变量（若不知道可以查看公众号：小白科技之窗）\nimport pytest\nimport allure\n\n@allure.feature('下单')\nclass Test_order():\n    @allure.story('登录')\n    def test_login(self):\n        ''' 登录 '''\n        with allure.step('输入账户'):\n            assert True\n        with allure.step('输入密码'):\n            assert True\n        with allure.step('点击登录'):\n            assert True\n\n    @allure.story('搜索商品')\n    def test_search(self):\n        ''' 搜索商品 '''\n        with allure.step('搜索框输入：苹果'):\n            assert True\n        with allure.step('点击搜索按钮'):\n            assert False\n'''\n# 执行脚本\npytest test_xiaobai_shop_allure.py --alluredir=../data\n\n# 打开报告\nallure serve ../data\n或者\nallure generate -c -o ../report ../data\nallure open ../report\n'''\n```\n\n### saf>1.1 使用禅道API，测试失败自动提单\n- 需要在禅道后台>>二次开发>>应用>>添加应用>>创建开启免密的应用 \n- 需要将上一步所生成数据【代号】与【密钥】写入到`saf/data/config.py`中zenTao相关的参数位置\n  ```python\n  # filename = saf/data/config.py\n  import hashlib\n  import time\n  class zenTao(object):\n      '''\n      参考禅道接口文档：\n      https://www.zentao.net/book/zentaopmshelp/integration-287.html\n      '''\n      @staticmethod\n      def baseURL():\n          ''' 禅道的根路径 '''\n          return 'http://192.168.254.133/zentao'\n   \n      @staticmethod\n      def account():\n          ''' 后台-》二次开发-》应用-》免密登录的账户名 '''\n          return '开启密钥的账户名称，例如管理员：admin'\n   \n      @staticmethod\n      def getCode():\n          ''' 后台-》二次开发-》应用-》创建-》代号 '''\n          return '复制生成应用的代号字符串'\n    \n      @staticmethod\n      def getKey():\n          ''' 后台-》二次开发-》应用-》创建-》密钥 '''\n          return '复制生成应用的密钥字符串'\n    \n      @staticmethod\n      def getTime():\n          ''' 获取时间戳 ，默认即可，无需修改'''\n          return int(time.time())\n    \n      @staticmethod\n      def getToken():\n          ''' 获取token： md5($code + $key + $time) ，默认即可，无需修改'''\n          _md5 = hashlib.md5(f'{zenTao.getCode()}{zenTao.getKey()}{zenTao.getTime()}'.encode('utf-8'))\n          return _md5.hexdigest()\n  ```\n- 用例同目录下创建`conftest.py`pytest的配置文件\n  ```python\n  # filename = conftest.py\n  from saf.utils.submitBugUtils import addZenTaoBUG\n  import pytest\n    \n  @pytest.mark.hookwrapper\n  def pytest_runtest_makereport(item, call):\n    \"\"\"\n    :param item:\n    \"\"\"\n    outcome = yield\n    report = outcome.get_result()\n    if report.outcome == 'failed':\n        doc = item.function.__doc__\n        doc = str(doc).replace('\\n', '<br>')\n        addZenTaoBUG(title=item.function.__name__,\n                          steps=f'{doc}预期结果：passed<br>测试结果：{report.outcome}')\n    \n  ```\n- 用例文件正常编写，正常运行即可\n\n### saf>1.0 拷贝web自动化模板到D:\\autoProject目录下\n```commandline\n\nxiaobaicmd -t web -d D:\\autoProject\nxiaobaicmd -t api -d D:\\autoProject\nxiaobaicmd -t app -d D:\\autoProject[暂时不支持]\n```\n\n### saf>1.3 新增pytest参数多种样例，`web`中包含\n```python\n# filename = test_xiaobai_case_v2.py\nimport pytest\nfrom saf import full_load\n\n''' 参数化 '''\n\ndata2 = {\n    'test_login': {\n        'keys': 'username, password, _assert',\n        'values': [('xiaobai', '12345', 200), ('xiaohui', '1234567', 200)]\n    }\n}\n\ndata3 = full_load(open('..\\\\data\\\\testCase.yaml', 'r').read())\n\n# 内部数据\n@pytest.mark.parametrize('username, password, _assert', [('xiaobai', '12345', 200), ('xiaohui', '1234567', 200)])\ndef test_xiaobai_login1(username, password, _assert):\n    # 业务实现代码\n    assert _assert == 200\n\n# 外部数据\n@pytest.mark.parametrize(data2['test_login']['keys'], data2['test_login']['values'])\ndef test_xiaobai_login2(username, password, _assert):\n    # 业务实现代码\n    assert _assert == 200\n\n\n# 外部文件数据\n@pytest.mark.parametrize(data3['test_login']['keys'], [eval(v) for v in data3['test_login']['values']])\ndef test_xiaobai_login3(username, password, _assert):\n    # 业务实现代码\n    assert _assert == 200\n```\n```yaml\n# filename = ..\\\\data\\\\testCase.yaml\n---\ntest_login:\n  keys: username,password,_assert\n  values:\n    - ('xiaobai', '12346', 200)\n    - ('xiaohui', '123456', 200)\n```\n### 环境检测[还未实现]\n```commandline\nxiaobaicmd  --init\n\n检测内容：\n1、python版本及第三方库\n2、第三方工具及环境\n```\n\n### 参与贡献\n[selenium官网文档](https://www.selenium.dev/documentation/, \"selenium官网文档\")\n\n[requests官网文档](https://requests.readthedocs.io/en/latest/, \"requests官网文档\")\n\n[appium官网](http://appium.io/, \"appium官网\")\n\n[loguru官方文档](https://loguru.readthedocs.io/en/stable/overview.html, \"loguru官方文档\")\n\n[xiaobaiauto2帮助文档](https://pypi.org/project/xiaobaiauto2/, \"xiaobaiauto2帮助文档\")\n\n[Allure帮助文档](https://docs.qameta.io/allure, \"Allure帮助文档\")\n\n[飞书机器人获取WebHook](https://open.feishu.cn/document/ukTMukTMukTM/ucTM5YjL3ETO24yNxkjN?lang=zh-CN, \"飞书机器人获取WebHook\")\n\n[钉钉机器人获取WebHook](https://open.dingtalk.com/document/group/custom-robot-access, \"钉钉机器人获取WebHook\")\n\n[163邮箱配置](http://help.163.com/09/1223/14/5R7P3QI100753VB8.html, \"163邮箱配置\")\n\n[QQ邮箱配置](https://service.mail.qq.com/cgi-bin/help?subtype=1&id=28&no=369, \"QQ邮箱配置\")\n\n### 更新日志\n\n| version | info                 |\n|---------|----------------------|\n| 1.0     | 基本实现web自动化模板功能       |\n| 1.1     | fix上个版本的BUG          |\n| 1.2     | 新增allure报告库及封装禅道提单接口 |\n| 1.3     | 新增jira提单接口           |\n| 1.4     | 新增pytest参数化样例        |\n| 1.5     | 优化pytest样例内容         |\n| 1.6     | 优化                   |\n| 1.7     | 新增基础环境检测功能           |\n| 1.8     | 新增API自动化模板           |\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitee.com/xiaobaikeji/simlpe_automation_framework",
    "keywords": "saf test auto automation xiaobai xiaobaiauto2 test framework",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xiaobaisaf",
    "package_url": "https://pypi.org/project/xiaobaisaf/",
    "platform": null,
    "project_url": "https://pypi.org/project/xiaobaisaf/",
    "project_urls": {
      "Homepage": "https://gitee.com/xiaobaikeji/simlpe_automation_framework"
    },
    "release_url": "https://pypi.org/project/xiaobaisaf/1.8/",
    "requires_dist": [
      "allure-pytest",
      "ddddocr",
      "loguru",
      "httpx",
      "jira",
      "webdriver-manager",
      "xiaobaiauto2"
    ],
    "requires_python": ">=3.6, <3.10",
    "summary": "simple_automation_framework(简称：SAF)使用最简单的模式就可以实现需要功能和测试效果，也是xiaobaiauto2的简化版SAF继承了selenium、requests/httpx、appium、loguru、xiaobaiauto2、飞书机器人、钉钉机器人、企业微信机器人（暂时不支持）、禅道提单API",
    "version": "1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16420278,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c7639b097813223a9b3519c4d890888776a08a435fe36994b559c16f09440a5",
          "md5": "a91f828bca9c42b8dcfd027b9ffd292b",
          "sha256": "7961874d077752099b603360a2f494305446dca29f89a58f24d26b4f5b0cc94c"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a91f828bca9c42b8dcfd027b9ffd292b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <3.10",
        "size": 24189,
        "upload_time": "2022-08-23T20:18:42",
        "upload_time_iso_8601": "2022-08-23T20:18:42.751362Z",
        "url": "https://files.pythonhosted.org/packages/9c/76/39b097813223a9b3519c4d890888776a08a435fe36994b559c16f09440a5/xiaobaisaf-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cf190a44ea4e7c58d5f7509e6fb45fdc391b7c97314a1b08e119c7ba2602426",
          "md5": "f6eb1d9e67c737c0ffd5ded3a91106c4",
          "sha256": "b809d5672d3ee34bc0ca585631ac38662d208de550707f999e1c09f64412fc37"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f6eb1d9e67c737c0ffd5ded3a91106c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <3.10",
        "size": 22705,
        "upload_time": "2022-08-23T20:18:44",
        "upload_time_iso_8601": "2022-08-23T20:18:44.485081Z",
        "url": "https://files.pythonhosted.org/packages/8c/f1/90a44ea4e7c58d5f7509e6fb45fdc391b7c97314a1b08e119c7ba2602426/xiaobaisaf-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe38d333c0093221ae88343d9615456c0c6eb65fbc7fcd2f44007bc17f91eebd",
          "md5": "a35a4c2964ba969fde5ab72d15fbac34",
          "sha256": "457df9f79a38ab3e0e17ecf92f63563ff306a38c68423c5b46602b3e57b336ca"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a35a4c2964ba969fde5ab72d15fbac34",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <3.10",
        "size": 24186,
        "upload_time": "2022-08-24T05:27:11",
        "upload_time_iso_8601": "2022-08-24T05:27:11.846325Z",
        "url": "https://files.pythonhosted.org/packages/fe/38/d333c0093221ae88343d9615456c0c6eb65fbc7fcd2f44007bc17f91eebd/xiaobaisaf-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1efbb5874d2d14eb4c1a1b7da46fa2919ca6840406a64980d6c9b413f7c57c0",
          "md5": "ab9fa696c556a3083414a5c9e08c61ea",
          "sha256": "ed0741e24362a3ba055ab06e9326b517d144f47564f7189ab26d8a88aaba707c"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ab9fa696c556a3083414a5c9e08c61ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <3.10",
        "size": 22708,
        "upload_time": "2022-08-24T05:27:13",
        "upload_time_iso_8601": "2022-08-24T05:27:13.466314Z",
        "url": "https://files.pythonhosted.org/packages/a1/ef/bb5874d2d14eb4c1a1b7da46fa2919ca6840406a64980d6c9b413f7c57c0/xiaobaisaf-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad41cf318cd369b801efa57e8fc82f48df816d6c4f4f6763e28342afe5ed3c21",
          "md5": "c196505015f9369fa5b13bbdde55e909",
          "sha256": "b805c5fbf4d5ab7f9bfe5c7aa85063c5c9e3ff3133d6bb860bc47aeccc748fcf"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c196505015f9369fa5b13bbdde55e909",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <3.10",
        "size": 29556,
        "upload_time": "2022-08-27T16:22:20",
        "upload_time_iso_8601": "2022-08-27T16:22:20.312695Z",
        "url": "https://files.pythonhosted.org/packages/ad/41/cf318cd369b801efa57e8fc82f48df816d6c4f4f6763e28342afe5ed3c21/xiaobaisaf-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2961ed6b17fa8eea54efc4854b076fe8df0279d9bb7f1ae93472419ed48d939a",
          "md5": "95b00b33462b0fe2c16da23b7273a891",
          "sha256": "84ef3a1c4ef29a71d882eb4fd081e1bd3c9a00e9e9fe9aa85a16a24169ad51b9"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "95b00b33462b0fe2c16da23b7273a891",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <3.10",
        "size": 27643,
        "upload_time": "2022-08-27T16:22:22",
        "upload_time_iso_8601": "2022-08-27T16:22:22.729790Z",
        "url": "https://files.pythonhosted.org/packages/29/61/ed6b17fa8eea54efc4854b076fe8df0279d9bb7f1ae93472419ed48d939a/xiaobaisaf-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8ce634259d4578201852b92dec50ce66925dae7262357545c0569e4b3bcc867",
          "md5": "10a77fc593aecfb79b2b9747104dfdac",
          "sha256": "fb03c293fcc12115d267b2eb71365a61448275970a9b87002511ba2fa3996c6d"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10a77fc593aecfb79b2b9747104dfdac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <3.10",
        "size": 31905,
        "upload_time": "2022-08-28T17:58:40",
        "upload_time_iso_8601": "2022-08-28T17:58:40.310043Z",
        "url": "https://files.pythonhosted.org/packages/d8/ce/634259d4578201852b92dec50ce66925dae7262357545c0569e4b3bcc867/xiaobaisaf-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "215009e7ebd03d61e465bdfdf707460bfd66f24ff674fd5010b845d61d87ea6c",
          "md5": "088cccb138621557f5e024fad1a83756",
          "sha256": "19222a83f4c5427b5ffa2faaa3f28889d8a62660390ba5f902d8dc07b02ddfd1"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "088cccb138621557f5e024fad1a83756",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <3.10",
        "size": 28584,
        "upload_time": "2022-08-28T17:58:45",
        "upload_time_iso_8601": "2022-08-28T17:58:45.316820Z",
        "url": "https://files.pythonhosted.org/packages/21/50/09e7ebd03d61e465bdfdf707460bfd66f24ff674fd5010b845d61d87ea6c/xiaobaisaf-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f1842c96e44ae9667cede975db9e78385320853a7a547527c6bfbff1979c436",
          "md5": "4ab77223491e4d97fa6a8f0f29f2e910",
          "sha256": "5d35226b5901c4740e3e0cca0ef7bccf64ea67a9cd7da11e63e939d644fc040e"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ab77223491e4d97fa6a8f0f29f2e910",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <3.10",
        "size": 33079,
        "upload_time": "2022-08-31T16:21:02",
        "upload_time_iso_8601": "2022-08-31T16:21:02.127758Z",
        "url": "https://files.pythonhosted.org/packages/3f/18/42c96e44ae9667cede975db9e78385320853a7a547527c6bfbff1979c436/xiaobaisaf-1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69796498e14c1e3a26f5668b20eb93bf409d2091c927da3909e1e7a97449e559",
          "md5": "b859ae8242c7f500a43afbc5d596749e",
          "sha256": "4914fd47a21b464c8596cdb71542cf5a1f3a658846bc3d24c31c24e693884e4c"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b859ae8242c7f500a43afbc5d596749e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <3.10",
        "size": 29505,
        "upload_time": "2022-08-31T16:21:05",
        "upload_time_iso_8601": "2022-08-31T16:21:05.827769Z",
        "url": "https://files.pythonhosted.org/packages/69/79/6498e14c1e3a26f5668b20eb93bf409d2091c927da3909e1e7a97449e559/xiaobaisaf-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70460716fa0b7c5566c1590d0d4e8ae7f130181fa0b55f2c239cce44e8d08e6e",
          "md5": "f7217473466c56b3fe70f72020cf03b6",
          "sha256": "92fbf4fba94f4d33e750188d3a7779c7777eb0377cb38d6034cdd99793df1df4"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7217473466c56b3fe70f72020cf03b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <3.10",
        "size": 34488,
        "upload_time": "2022-09-01T17:33:33",
        "upload_time_iso_8601": "2022-09-01T17:33:33.254925Z",
        "url": "https://files.pythonhosted.org/packages/70/46/0716fa0b7c5566c1590d0d4e8ae7f130181fa0b55f2c239cce44e8d08e6e/xiaobaisaf-1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb04d1f7464a0e20eeb1ad4890dbad5aba25320cd3c0b183802b29ececa50718",
          "md5": "b843b0aa3aa8bd8e901e26358513cb74",
          "sha256": "6531c81ae720989ec5a186fe4a7150382dafc8c9a28b24142bffc99452bcd066"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b843b0aa3aa8bd8e901e26358513cb74",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <3.10",
        "size": 29996,
        "upload_time": "2022-09-01T17:33:35",
        "upload_time_iso_8601": "2022-09-01T17:33:35.363237Z",
        "url": "https://files.pythonhosted.org/packages/fb/04/d1f7464a0e20eeb1ad4890dbad5aba25320cd3c0b183802b29ececa50718/xiaobaisaf-1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9540cc7c043b08ffcc0e905b54efa3d614342b5365aa8b8794aab7e6233c827",
          "md5": "b614fd00b892a1235e14fa8252921059",
          "sha256": "1e257351fa14396970ae63f29ed1376576ad8ec1f9451108a1b3aef9cf2f43f9"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b614fd00b892a1235e14fa8252921059",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <3.10",
        "size": 34506,
        "upload_time": "2022-09-01T17:37:30",
        "upload_time_iso_8601": "2022-09-01T17:37:30.464427Z",
        "url": "https://files.pythonhosted.org/packages/b9/54/0cc7c043b08ffcc0e905b54efa3d614342b5365aa8b8794aab7e6233c827/xiaobaisaf-1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35c2ea2096c6a56c03a8d0a50287f89711cddf9e7b021753d157444222818c76",
          "md5": "59563f6cb3c73adc176c59a90464a70e",
          "sha256": "b168554acc0b0ff87759bedb4bf060c4b041cd79bb265ffb696402a29df0527a"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "59563f6cb3c73adc176c59a90464a70e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <3.10",
        "size": 29997,
        "upload_time": "2022-09-01T17:37:32",
        "upload_time_iso_8601": "2022-09-01T17:37:32.850198Z",
        "url": "https://files.pythonhosted.org/packages/35/c2/ea2096c6a56c03a8d0a50287f89711cddf9e7b021753d157444222818c76/xiaobaisaf-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03d769d6c740dc34a068dc25b78a3ca7732eb30f2391a5fbd19ebe50b93ea287",
          "md5": "9e1ba1c7b9d087b4a413b50dd864a9e1",
          "sha256": "962d1927071328c124647c1e66cd27a58c5bc37702e63c9df5576fe95ea1d9e2"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e1ba1c7b9d087b4a413b50dd864a9e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <3.10",
        "size": 42876,
        "upload_time": "2023-01-13T17:48:39",
        "upload_time_iso_8601": "2023-01-13T17:48:39.395003Z",
        "url": "https://files.pythonhosted.org/packages/03/d7/69d6c740dc34a068dc25b78a3ca7732eb30f2391a5fbd19ebe50b93ea287/xiaobaisaf-1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33668048991e038bab5425db1cf29562a598e385bcddb5f65420757222ea0d89",
          "md5": "01e768404146400860fe5aad8618736e",
          "sha256": "086824b7ffa79fd532d7964c4adf64b1d3fc48b532a3aa2587f5331782c6d26f"
        },
        "downloads": -1,
        "filename": "xiaobaisaf-1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "01e768404146400860fe5aad8618736e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <3.10",
        "size": 35389,
        "upload_time": "2023-01-13T17:48:41",
        "upload_time_iso_8601": "2023-01-13T17:48:41.354114Z",
        "url": "https://files.pythonhosted.org/packages/33/66/8048991e038bab5425db1cf29562a598e385bcddb5f65420757222ea0d89/xiaobaisaf-1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03d769d6c740dc34a068dc25b78a3ca7732eb30f2391a5fbd19ebe50b93ea287",
        "md5": "9e1ba1c7b9d087b4a413b50dd864a9e1",
        "sha256": "962d1927071328c124647c1e66cd27a58c5bc37702e63c9df5576fe95ea1d9e2"
      },
      "downloads": -1,
      "filename": "xiaobaisaf-1.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9e1ba1c7b9d087b4a413b50dd864a9e1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <3.10",
      "size": 42876,
      "upload_time": "2023-01-13T17:48:39",
      "upload_time_iso_8601": "2023-01-13T17:48:39.395003Z",
      "url": "https://files.pythonhosted.org/packages/03/d7/69d6c740dc34a068dc25b78a3ca7732eb30f2391a5fbd19ebe50b93ea287/xiaobaisaf-1.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "33668048991e038bab5425db1cf29562a598e385bcddb5f65420757222ea0d89",
        "md5": "01e768404146400860fe5aad8618736e",
        "sha256": "086824b7ffa79fd532d7964c4adf64b1d3fc48b532a3aa2587f5331782c6d26f"
      },
      "downloads": -1,
      "filename": "xiaobaisaf-1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "01e768404146400860fe5aad8618736e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <3.10",
      "size": 35389,
      "upload_time": "2023-01-13T17:48:41",
      "upload_time_iso_8601": "2023-01-13T17:48:41.354114Z",
      "url": "https://files.pythonhosted.org/packages/33/66/8048991e038bab5425db1cf29562a598e385bcddb5f65420757222ea0d89/xiaobaisaf-1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}