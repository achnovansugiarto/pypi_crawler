{
  "info": {
    "author": "Mike Monteith",
    "author_email": "<mike.monteith@nhs.net>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# wagtail-streamfield-index\n\nIndexing of streamfield data in Wagtail\n\n## Installation\n\nInstall the package\n```sh\npip install wagtail-streamfield-index\n```\n\nAdd to your installed apps\n\n```py\nINSTALLED_APPS = [\n    ...\n    \"streamfieldindex\",\n    ...\n]\n```\n\nRun `python manage.py streamfieldindex` to index all pages.\n\nAfter indexing, your database will contain one `IndexEntry` for every block found in a page model.\n\nThe index will keep itself up-to-date every time a page is saved.\n\n#### ModelAdmin\n\nIf you would like to see a list of indexed blocks in your wagtail admin interface, you can register the [modeladmin](https://docs.wagtail.io/en/latest/reference/contrib/modeladmin/index.html)\n\nMake sure modeladmin app is installed:\n```py\nINSTALLED_APPS = [\n    ...\n    \"wagtail.contrib.modeladmin\",\n    ...\n]\n```\n\nRegister the `IndexEntryAdmin` in a wagtail_hooks.py file:\n```py\nfrom wagtail.contrib.modeladmin.options import modeladmin_register\nfrom streamfieldindex.modeladmin import IndexEntryAdmin\n\nmodeladmin_register(IndexEntryAdmin)\n```\n\n\n#### IndexEntry model\n\n`from streamfieldindex.models import IndexEntry`\n\n##### Fields\n\n`block_name`\nThe name that you gave to your block in the streamfield definition.\ne.g \"author\" or \"heading\" in the following example:\n```py\nmy_field = StreamField([\n    ('author', AuthorBlock()),\n    ('heading', CharBlock()),\n])\n```\n\nFor items inside list blocks, the `block_name` is set to the list block name with \":item\" appended, since individual items inside a list block do not have a name.\n\n`block_value`\nThe string value of the block, in the form that it is stored in the streamfield. `StructBlock`, `StreamBlock` and `ListBlock`s have an empty string as the block_value since you can inspect the contents of those blocks by looking at their sub-blocks.\nIf you have a complex block type such as an ImageChooser block, see the `get_bound_block()` method\n\n`block_path`\nA slash-delimited path to the location of the block within the streamfield.\nE.g. if block_path = `5/author/title`\n\n1. `5`. The 6th block in the streamfield.\n2. `author`. The 6th block is named `author`.\n3. `title`. The `title` sub-block of `author`.\n\n`field_name`\nThe name of the field where the block was found.\n\n`page`\nThe page where the block was found.\n\n##### Methods\n\n`get_bound_block()`\nReturns a Wagtail `BoundBlock` instance of the block. See the [Wagtail docs](https://docs.wagtail.io/en/v2.0/topics/streamfield.html#boundblocks-and-values) for explaination of `BoundBlock`s.\n\n##### Example usage\n\nIf you had an `author` block and wanted to find all usage of that block:\n\n```py\nfrom streamfieldindex.models import IndexEntry\n\nfor index_entry in IndexEntry.objects.filter(block_name=\"author\"):\n    print(index_entry.page.id) # Print the page ID where the block is found\n    print(index_entry.field_name) # Print the field where the block is found\n    print(index_entry.block_path) # Print a slash-separated path to the block inside the field\n```\n\n## Contributing\n\n### Getting started\n\n1. Clone the repo `git clone https://github.com/nhsuk/wagtail-streamfield-index.git`\n2. Install dependencies `pip install .[testing,linting]`\n\n### Formatting\n\n`black .`\n\n### Linting\n\n`flake8 .`\n\n### Tests\n\n`pytest`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nhsuk/wagtail-streamfield-index",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wagtail-streamfield-index",
    "package_url": "https://pypi.org/project/wagtail-streamfield-index/",
    "platform": "",
    "project_url": "https://pypi.org/project/wagtail-streamfield-index/",
    "project_urls": {
      "Homepage": "https://github.com/nhsuk/wagtail-streamfield-index"
    },
    "release_url": "https://pypi.org/project/wagtail-streamfield-index/0.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Indexing for Wagtail streamfields",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11643439,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06a33ab01cb2308e6a0a616c353fca046d5d082744155f1cacaff4b50769f295",
          "md5": "7aa9c933410e9c1cef2d8a5cffb2099b",
          "sha256": "977c4572fa947a312ce55b72e4033ac78c1b3fd5438cad663904e56ae3ece6c4"
        },
        "downloads": -1,
        "filename": "wagtail-streamfield-index-0.0.2.zip",
        "has_sig": false,
        "md5_digest": "7aa9c933410e9c1cef2d8a5cffb2099b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23103,
        "upload_time": "2021-04-28T15:58:48",
        "upload_time_iso_8601": "2021-04-28T15:58:48.582778Z",
        "url": "https://files.pythonhosted.org/packages/06/a3/3ab01cb2308e6a0a616c353fca046d5d082744155f1cacaff4b50769f295/wagtail-streamfield-index-0.0.2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c2d78dee6222b2f1d48205cf8ad6099b13256b6dbadcb863971f0b84d0ff6c3",
          "md5": "41489402258b605afa46bd5f1fb9864f",
          "sha256": "a29bf5c8f8b3cfb1df1093567db3489c648b02c95298dbceca40565e5e1699f3"
        },
        "downloads": -1,
        "filename": "wagtail-streamfield-index-0.0.3.zip",
        "has_sig": false,
        "md5_digest": "41489402258b605afa46bd5f1fb9864f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22985,
        "upload_time": "2021-10-06T09:52:56",
        "upload_time_iso_8601": "2021-10-06T09:52:56.197342Z",
        "url": "https://files.pythonhosted.org/packages/3c/2d/78dee6222b2f1d48205cf8ad6099b13256b6dbadcb863971f0b84d0ff6c3/wagtail-streamfield-index-0.0.3.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a066d5efe1f510b7bdbffa6f586b3eea6b1021399c6825264c1d2d36f9eae81c",
          "md5": "e9e8041129689bdc0c63be30c593ae36",
          "sha256": "b2c96f5e8e1e5c4b283247f39f9c70d63b41a554df48fba1bd6754c58c9bfa89"
        },
        "downloads": -1,
        "filename": "wagtail-streamfield-index-0.0.4.zip",
        "has_sig": false,
        "md5_digest": "e9e8041129689bdc0c63be30c593ae36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23035,
        "upload_time": "2021-10-06T12:01:03",
        "upload_time_iso_8601": "2021-10-06T12:01:03.769713Z",
        "url": "https://files.pythonhosted.org/packages/a0/66/d5efe1f510b7bdbffa6f586b3eea6b1021399c6825264c1d2d36f9eae81c/wagtail-streamfield-index-0.0.4.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a066d5efe1f510b7bdbffa6f586b3eea6b1021399c6825264c1d2d36f9eae81c",
        "md5": "e9e8041129689bdc0c63be30c593ae36",
        "sha256": "b2c96f5e8e1e5c4b283247f39f9c70d63b41a554df48fba1bd6754c58c9bfa89"
      },
      "downloads": -1,
      "filename": "wagtail-streamfield-index-0.0.4.zip",
      "has_sig": false,
      "md5_digest": "e9e8041129689bdc0c63be30c593ae36",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23035,
      "upload_time": "2021-10-06T12:01:03",
      "upload_time_iso_8601": "2021-10-06T12:01:03.769713Z",
      "url": "https://files.pythonhosted.org/packages/a0/66/d5efe1f510b7bdbffa6f586b3eea6b1021399c6825264c1d2d36f9eae81c/wagtail-streamfield-index-0.0.4.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}