{
  "info": {
    "author": "Foxdogface and igor-kantor",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# YandexWordstatAPI\nSimple small class for parsing data from WordStat via yandex direct api\n\n## Installing YandexWordstatAPI\n```console\n$ python -m pip install YandexWordstatAPI\n```\n\n## Docs\n\n```python\nfrom YandexWordstatAPI.WordstatAPI import *\nimport time\n\n'''\nYandex sandbox url = https://api-sandbox.direct.yandex.ru/v4/json/\nYandex full access url = https://api.direct.yandex.ru/v4/json/\n'''\nurl = 'https://api-sandbox.direct.yandex.ru/v4/json/'  # api url \ntoken = 'AgAAAAAX1GmLIIX9s4uEoSNiSEyjjxTsAHZ0p8w'  # Token to access Yandex.Direct API\nusername = 'yandex.username'  # Username to get points value \n\nAPI = WordstatAPI(url, token, username)\n\nphrases = [\n    'фотошоп',\n    'photoshop'\n]\n\nexclude = [\n    '-купить',\n    '-дешево',\n    '-скачать',\n    '-бесплатно'\n]\ngeo = []  # Can be let empty\n\ndata = API.compose_data(phrases, exclude)  # Compose data with exclude phrases\n\n# Methods\nunits = API.get_client_units()  # Get client units. ref: https://yandex.ru/dev/direct/doc/dg-v4/reference/GetClientsUnits.html\nprint(f\"You have {units['data'][0]['UnitsRest']}\")\n\nreport_id = API.create_report(data, geo)[\n    'data']  # Create new report, it will be redy in ~2 minutes. ref: https://yandex.ru/dev/direct/doc/dg-v4/reference/CreateNewWordstatReport.html\nprint(f\"The report wit id {report_id} is creating\")\n\nreport_list = API.get_report_list()  # Get report list, you can wait til the report will be ready, or just check it later. ref: https://yandex.ru/dev/direct/doc/dg-v4/reference/GetWordstatReportList.html\nlast_report = report_list['data'][-1]\nwhile lastReport['StatusReport'] != 'Done':\n    if lastReport['StatusReport'] == 'Failed':\n        raise Exception('Failed to create report')\n    else:\n        print('Report is creating...')\n        lastReport = API.get_report_list()['data'][-1]\n        time.sleep(2)\n\nreport = API.readReport(\n    report_id)  # Read report data by its id. ref: https://yandex.ru/dev/direct/doc/dg-v4/reference/GetWordstatReport.html\nAPI.save_report_to_txt(report, searched_also_flag=True)  # Save all data to txt, can be undone if not necessary \n\nresponse = API.delete_report(\n    report_id)  # Delete Wordstat report, it can be done when you reach report number limit(5 reports)\nif response['data'] == 1:\n    print(f'Report with id {report_id} was successfully deleted')\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Foxdogface/YandexWordstatAPI",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "YandexWordstatAPI",
    "package_url": "https://pypi.org/project/YandexWordstatAPI/",
    "platform": "",
    "project_url": "https://pypi.org/project/YandexWordstatAPI/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Foxdogface/YandexWordstatAPI/issues",
      "Homepage": "https://github.com/Foxdogface/YandexWordstatAPI"
    },
    "release_url": "https://pypi.org/project/YandexWordstatAPI/1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Simple class for parsing data from WordStat via yandex direct api",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13025107,
  "releases": {
    "0.0.1": [],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adc91c25fb3145338eb76282a6ed4cecf7895ec17f004cb68da12d5af8e8759b",
          "md5": "5ec306c95b47e41c27493bbacee56667",
          "sha256": "daa898d48e086fd00a6a177b3b895f41af3860b57caf71990333c6265e39b095"
        },
        "downloads": -1,
        "filename": "YandexWordstatAPI-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ec306c95b47e41c27493bbacee56667",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4414,
        "upload_time": "2022-02-27T15:42:19",
        "upload_time_iso_8601": "2022-02-27T15:42:19.346953Z",
        "url": "https://files.pythonhosted.org/packages/ad/c9/1c25fb3145338eb76282a6ed4cecf7895ec17f004cb68da12d5af8e8759b/YandexWordstatAPI-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8234dd2ac06b40169e2b0d3526e5d6a9097c2c0d606106b9e66a778ee2f0c2e",
          "md5": "acb965ce39001d63fecd79e2e0e9c7fe",
          "sha256": "eaa08f3cf94f8ef295fb3c41ff28037d8134d8d6893b5a39e8893f0e3f6c3b68"
        },
        "downloads": -1,
        "filename": "YandexWordstatAPI-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "acb965ce39001d63fecd79e2e0e9c7fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3936,
        "upload_time": "2022-02-27T15:42:20",
        "upload_time_iso_8601": "2022-02-27T15:42:20.847966Z",
        "url": "https://files.pythonhosted.org/packages/f8/23/4dd2ac06b40169e2b0d3526e5d6a9097c2c0d606106b9e66a778ee2f0c2e/YandexWordstatAPI-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "adc91c25fb3145338eb76282a6ed4cecf7895ec17f004cb68da12d5af8e8759b",
        "md5": "5ec306c95b47e41c27493bbacee56667",
        "sha256": "daa898d48e086fd00a6a177b3b895f41af3860b57caf71990333c6265e39b095"
      },
      "downloads": -1,
      "filename": "YandexWordstatAPI-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5ec306c95b47e41c27493bbacee56667",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4414,
      "upload_time": "2022-02-27T15:42:19",
      "upload_time_iso_8601": "2022-02-27T15:42:19.346953Z",
      "url": "https://files.pythonhosted.org/packages/ad/c9/1c25fb3145338eb76282a6ed4cecf7895ec17f004cb68da12d5af8e8759b/YandexWordstatAPI-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f8234dd2ac06b40169e2b0d3526e5d6a9097c2c0d606106b9e66a778ee2f0c2e",
        "md5": "acb965ce39001d63fecd79e2e0e9c7fe",
        "sha256": "eaa08f3cf94f8ef295fb3c41ff28037d8134d8d6893b5a39e8893f0e3f6c3b68"
      },
      "downloads": -1,
      "filename": "YandexWordstatAPI-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "acb965ce39001d63fecd79e2e0e9c7fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3936,
      "upload_time": "2022-02-27T15:42:20",
      "upload_time_iso_8601": "2022-02-27T15:42:20.847966Z",
      "url": "https://files.pythonhosted.org/packages/f8/23/4dd2ac06b40169e2b0d3526e5d6a9097c2c0d606106b9e66a778ee2f0c2e/YandexWordstatAPI-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}