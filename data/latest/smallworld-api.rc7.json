{
  "info": {
    "author": "Matteo Ferla",
    "author_email": "matteo@well.ox.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Chemistry"
    ],
    "description": "# Python_SmallWorld_API\n\n> This is Unofficial. So please do not abuse it or use it when you cannot legally use the site!\n\nAn (unofficial) Python3 module to query the SmallWorld chemical space search server (https://sw.docking.org/search.html)\n.\n\n[![Documentation Status](https://readthedocs.org/projects/python-smallworld-api/badge/?version=latest)](https://python-smallworld-api.readthedocs.io/en/latest/?badge=latest)\n[![https img shields io pypi v smallworld api logo python](https://img.shields.io/pypi/v/smallworld--api?logo=python)](https://pypi.org/project/smallworld--api)   [![https img shields io pypi pyversions smallworld api logo python](https://img.shields.io/pypi/pyversions/smallworld--api?logo=python)](https://pypi.org/project/smallworld--api)   [![https img shields io pypi wheel smallworld api logo python](https://img.shields.io/pypi/wheel/smallworld--api?logo=python)](https://pypi.org/project/smallworld--api)   [![https img shields io pypi format smallworld api logo python](https://img.shields.io/pypi/format/smallworld--api?logo=python)](https://pypi.org/project/smallworld--api)   [![https img shields io pypi status smallworld api logo python](https://img.shields.io/pypi/status/smallworld--api?logo=python)](https://pypi.org/project/smallworld--api)   [![https img shields io pypi dm smallworld api logo python](https://img.shields.io/pypi/dm/smallworld--api?logo=python)](https://pypi.org/project/smallworld--api)   [![https img shields io codeclimate maintainability matteoferla Python_SmallWorld_API logo codeclimate](https://img.shields.io/codeclimate/maintainability/matteoferla/Python_SmallWorld_API?logo=codeclimate)](https://codeclimate.com/github/matteoferla/Python_SmallWorld_API)   [![https img shields io codeclimate issues matteoferla Python_SmallWorld_API logo codeclimate](https://img.shields.io/codeclimate/issues/matteoferla/Python_SmallWorld_API?logo=codeclimate)](https://codeclimate.com/github/matteoferla/Python_SmallWorld_API)   [![https img shields io codeclimate tech debt matteoferla Python_SmallWorld_API logo codeclimate](https://img.shields.io/codeclimate/tech-debt/matteoferla/Python_SmallWorld_API?logo=codeclimate)](https://codeclimate.com/github/matteoferla/Python_SmallWorld_API)   [![https img shields io github forks matteoferla Python_SmallWorld_API label Fork style social logo github](https://img.shields.io/github/forks/matteoferla/Python_SmallWorld_API?label=Fork&style=social&logo=github)](https://github.com/matteoferla/Python_SmallWorld_API)   [![https img shields io github stars matteoferla Python_SmallWorld_API style social logo github](https://img.shields.io/github/stars/matteoferla/Python_SmallWorld_API?style=social&logo=github)](https://github.com/matteoferla/Python_SmallWorld_API)   [![https img shields io github watchers matteoferla Python_SmallWorld_API label Watch style social logo github](https://img.shields.io/github/watchers/matteoferla/Python_SmallWorld_API?label=Watch&style=social&logo=github)](https://github.com/matteoferla/Python_SmallWorld_API)   [![https img shields io github last commit matteoferla Python_SmallWorld_API logo github](https://img.shields.io/github/last-commit/matteoferla/Python_SmallWorld_API?logo=github)](https://github.com/matteoferla/Python_SmallWorld_API)   [![https img shields io github license matteoferla Python_SmallWorld_API logo github](https://img.shields.io/github/license/matteoferla/Python_SmallWorld_API?logo=github)](https://github.com/matteoferla/Python_SmallWorld_API/raw/master/LICENCE)   [![https img shields io github release date matteoferla Python_SmallWorld_API logo github](https://img.shields.io/github/release-date/matteoferla/Python_SmallWorld_API?logo=github)](https://github.com/matteoferla/Python_SmallWorld_API)   [![https img shields io github commit activity m matteoferla Python_SmallWorld_API logo github](https://img.shields.io/github/commit-activity/m/matteoferla/Python_SmallWorld_API?logo=github)](https://github.com/matteoferla/Python_SmallWorld_API)   [![https img shields io github issues matteoferla Python_SmallWorld_API logo github](https://img.shields.io/github/issues/matteoferla/Python_SmallWorld_API?logo=github)](https://github.com/matteoferla/Python_SmallWorld_API)   [![https img shields io github issues closed matteoferla Python_SmallWorld_API logo github](https://img.shields.io/github/issues-closed/matteoferla/Python_SmallWorld_API?logo=github)](https://github.com/matteoferla/Python_SmallWorld_API)\n\n## Overview\n\nThe SmallWorld server, [sw.docking.org](https://sw.docking.org/search.html), allows one to search for similar compounds\nto a give [SMILES](https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system)\nin one of many databases â€”a very complex feat.\n\nThe API points of the site are described in\n[wiki.docking.org/index.php/How_to_use_SmallWorld_API](https://wiki.docking.org/index.php/How_to_use_SmallWorld_API).\n\nThis Python3 module allows one to search it.\n\n## Install\n\n    pip install -q smallworld-api\n\n## Usage\nThe following searches for Aspirin in Enamine's make-on-demand space, Enamine REAL, which does not contain it\nas the latter is filtered by Lipinski's rule of five.\n\n```python\nfrom rdkit import Chem\nfrom rdkit.Chem import PandasTools\nimport pandas as pd  # for typehinting below\n\nfrom smallworld_api import SmallWorld\n\naspirin = 'O=C(C)Oc1ccccc1C(=O)O'\nsw = SmallWorld()\nresults : pd.DataFrame = sw.search(aspirin, dist=5, db=sw.REAL_dataset)\n\nfrom IPython.display import display\ndisplay(results)\n```\n\nThe first two import lines are optional as the code works without rdkit. If pandas gets imported before PandasTools\nand Chem imported not in _main_ then display issues happen, \nwhich can be fixed with a `from rdkit.Chem.Draw import IPythonConsole`.\n\nSo it's up to you to remember to run:\n\n```python\nPandasTools.AddMoleculeColumnToFrame(results, 'smiles', 'molecule', includeFingerprints=True)\n```\n\nThe argument `db` for `.search` is a string and is the name of the database. These do seem to change,\nso they get updated during initialisation or with the call:\n\n```python\ndbs: pd.DataFrame = SmallWorld.retrieve_databases()  #: pd.DataFrame (.db_choices gets updated too)\n```\n\nThe dynamic properties `.REAL_dataset` and `.ZINC_dataset` simply return the best value from the presets, which may have\nbecome out of date (unless updated).\n\n## Query terms\n\nThe first argument passed to `.search` can be:\n\n* a `str` (SMILES)\n* a `Chem.Mol` (rdkit is an optional requirement though)\n* a list-like (sequence) or a dict-like (mapping) of the above, where the index or key becomes the name in the output\n  table.\n\nSee the class attribute dictionary `SmallWorld.default_submission` for what the defaults are set to, which ought to be:\n\n  {'dist': 8,\n   'tdn': 6,\n   'rdn': 6,\n   'rup': 2,\n   'ldn': 2,\n   'lup': 2,\n   'maj': 6,\n   'min': 6,\n   'sub': 6,\n   'sdist': 12,\n   'tup': 6,\n   'scores': 'Atom Alignment,ECFP4,Daylight'}\n\nIf one is sure that the correct dataset is being used and any raised `NoMatchError` is due to the SMILES, then once can\nadd for the last case the argument `tolerate_tolerate_NoMatchError=True`, which makes them ignored bar for a warning.\n\n## Debug\n\nThe instantiation is set up so for debugging, namely it has two attributes of interest:\n\n* `sw.last_reply`, a `requests.Response` instance\n* `sw.hit_list_id` an integer representing the search (AKA. `hlid` in the server responses)\n\nThe errors raised are generally either `requests.HTTPError`\nor `smallworld.NoMatchError`. The former is raised by a `requests.Response.raise_for_status` call and means there is a\nstatus code that isn't 200, the latter is raised by one of the various checks in `sw.get_results()`.\n\nFor the former errors, i.e. those by a serverside-declared HTML-formatting error (eg. status code 404), if one is in a\nJupyter notebook one can do `sw.show_reply_as_html()`. Generally if you get status code 500, it is best to try again\ntomorrow as the server is having a hard time and is probably not okay on the web.\n\nFor the latter, the result in `.last_reply` should be a JSON string, therefore should give something like this:\n\n```python3\nreply_data: dict = sw.last_reply.json()\n```\n\nA common issue is the change in database names, therefore do do and pick a different one\n(ATM, the index of the dataframe is the name to use, but in 2021 it was the `name`)\n\n```python3\nfrom IPython.display import display\n\nfrom smallworld_api import SmallWorld\ndb_table : pd.DataFrame = SmallWorld.retrieve_databases()\ndisplay( db_table )\n```\n\nThere will be a \"ground control to major Tom\" warning in the first query. This weird reply means that the stream has\nfinished, but not closed or something. Ignore it.\n\nAlso, as a shorthand, `mol: Chem.Mol = SmallWorld.check_smiles(aspirin)`\ncan be called to check if the molecules is fine.\n\nFor extreme debugging, open Chrome and go to [sw.docking.org](https://sw.docking.org/search.html) \nand open the developer tools (F12). Then go to the Network tab and do a search, eg. with `CC2=CC=C(CNC(=O)C1CCC1)C=N2`,\nthis will be populated by all the figure requests, but `/search/submit` will be the first one to look at\nif the issue is with the submit method in the trace, `/search/view` if it's with the `get_results` method.\nThen simply copy the url query off the request and use it as parameters or compare them etc. For example:\n\n```python3\nimport urllib.parse\nfrom smallworld_api import SmallWorld\n\nurl_query = 'ðŸ‘¾=ðŸ‘¾&ðŸ‘¾=ðŸ‘¾'\nexpected = dict(urllib.parse.parse_qsl(url_query))\n\nclass Debug(SmallWorld):\n    \n    def submit_query(self, params):\n        # override the method to check the parameters\n        print('Going to use:', params)\n        print('Missing:', set(expected).difference(params))\n        return super().submit_query(expected)\n\nd = Debug()\nd.search('CCO', db=d.REAL_dataset)\n```\n\nIf it's a field that change, raise an issue and I'll update the class or do a pull request :pray:.\n\n## Choices\n\nThe database choices can seen with the preset list `SmallWorld.db_choices`. But also this can be recached via the\nclassmethod `SmallWorld.retrieve_databases()`.\n\nTwo databases, `REAL_Space_21Q3_2B(public)` and `REAL_DB_20Q2`, are Enamine REAL databases\n(aka. Enamine will make the compound on request). Previously, the\nrepository, [enamine-real-search](https://github.com/xchem/enamine-real-search) was good for this, but unfortunately\nEnamine changed their endpoints. So I wrote this to take its place!\nDespite the smaller number of entries, `REAL_DB_20Q2` gives the most hits and is less likely to \"Major Tom out\".\n\nLikewise, the attribute `SmallWorld.sf_choices` (type list) and \nthe classmethod `SmallWorld.retrieve_scorefun_options()` do the same.\nThe values are less and are: `['Atom Alignment', 'SMARTS Alignment', 'ECFP4', 'Daylight']`, but these\nare activated by default and will be visible as columns in the resulting dataframe from a search call.\n\nHere is the full list of databases:\n\n```python\nimport pandas as pd\n\nchoices: pd.DataFrame = SmallWorld.retrieve_databases()\n\ndisplay(choices)\n```\nWhich will return (as of writing on the 9th Dec 2021):\n\n|                                               | name                       |   numEntries |   numMapped |   numUnmapped |   numSkipped | status    |\n|:----------------------------------------------|:---------------------------|-------------:|------------:|--------------:|-------------:|:----------|\n| REAL_Space_21Q3_All_2B_public.smi.anon        | REAL_Space_21Q3_2B(public) |   1950356098 |  1935062471 |      15293627 |            0 | Available |\n| ZINC-All-2020Q2-1.46B.anon                    | ZINC-All-20Q2-1.46B        |   1468554638 |  1467030947 |       1523691 |          231 | Available |\n| ZINC-For-Sale-2020Q2-1.46B.anon               | ZINC-For-Sale-20Q2-1.46B   |   1464949146 |  1463519428 |       1429718 |           22 | Available |\n| ZINC20-ForSale-21Q3.smi.anon                  | ZINC20-ForSale-21Q3-1.4B   |   1479284919 |  1440784765 |      38500154 |           29 | Available |\n| Enamine_REAL_Public_July_2020_Q1-2_1.36B.anon | REAL_DB_20Q2               |   1361198468 |  1350462346 |      10736122 |            0 | Available |\n| Wait-OK-2020Q2-1.2B.anon                      | Wait-OK-20Q2-1.2B          |   1174063221 |  1172785190 |       1278031 |            1 | Available |\n| WuXi-20Q4.smi.anon                            | WuXi-20Q4-600M             |   2353582875 |   600762581 |    1752820294 |          284 | Available |\n| MculeUltimate-20Q2.smi.anon                   | MculeUltimate_20Q2_126M    |    126471523 |   126471523 |             0 |            0 | Available |\n| WuXi-2020Q2-120M.anon                         | WuXi-20Q2-120M             |    339132361 |   120400570 |     218731791 |            0 | Available |\n| mcule_ultimate_200407_c8bxI4.anon             | Mcule_ultimate_20Q2-126M   |    126471523 |    45589462 |      80882061 |            0 | Available |\n| BB-All-2020Q2-26.7M.anon                      | BB-All-20Q2-26.7M          |     26787985 |    26707241 |         80744 |           16 | Available |\n| In-Stock-2020Q2-13.8M.anon                    | In-Stock-20Q2-13.8M        |     13842485 |    13829086 |         13399 |            1 | Available |\n| ZINC20-InStock-21Q3.smi.anon                  | ZINC20-InStock-21Q3-11M    |     11122445 |    11103910 |         18535 |            5 | Available |\n| BBall.smi.anon                                | BB-All-21Q4-3.3M           |      3319960 |     3319705 |           255 |            6 | Available |\n| BBnow.smi.anon                                | BB-Now-21Q4-2M             |      2076639 |     2076464 |           175 |            6 | Available |\n| BB-Now-2020Q2-1.6M.anon                       | BB-Now-20Q2-1.6M           |      1649789 |     1649386 |           403 |            4 | Available |\n| BB_50.smi.anon                                | BB-50-21Q4-1.5M            |      1483551 |     1483434 |           117 |            2 | Available |\n| BB_10.smi.anon                                | BB-10-21Q4-1.2M            |      1243321 |     1243241 |            80 |            0 | Available |\n| BB_40.smi.anon                                | BB-40-21Q4-590K            |       589959 |      589911 |            48 |            4 | Available |\n| interesting.smi.anon                          | ZINC-Interesting-20Q2-320K |       320845 |      320773 |            72 |            1 | Available |\n| ZINC-Interesting-2020Q2-300K.anon             | ZINC-Interesting-20Q2-300K |       307854 |      300765 |          7089 |            1 | Available |\n| TCNMP-2020Q2-31912.anon                       | TCNMP-20Q2-31912           |        37438 |       31912 |          5526 |            0 | Available |\n| BB_30.smi.anon                                | BB-30-21Q4-3K              |         3129 |        3119 |            10 |            0 | Available |\n| WorldDrugs-2020Q2-3004.anon                   | WorldDrugs-20Q2-3004       |         3004 |        3003 |             1 |            0 | Available |\n| HMDB-2020Q2-584.anon                          | HMDB-20Q2-584              |          585 |         584 |             1 |            0 | Available |\n\n## Names\n\nThere is a Python module called [smallworld](https://github.com/benmaier/smallworld),\nwhich implements the small world algorithm.\nThis is not an API to the [sw.docking.org](https://sw.docking.org/search.html) site.\n\nThe blog of the [sw.docking.org](https://sw.docking.org/search.html) site mentions a pysmallworld.\nThere is no mention of this in Google so I am guessing it is for a future feature?\nI however need to use this now as \nI need it as a publicly usable example workflow of [Fragmenstein](https://github.com/matteoferla/Fragmenstein).\n\nAlso, there is a great and wacky boardgame called [Small World](https://boardgamegeek.com/boardgame/40692/small-world),\nwith a curious/agonising dynamic which forces you to not be a collector.\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/matteoferla/Python_SmallWorld_API",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "smallworld-api",
    "package_url": "https://pypi.org/project/smallworld-api/",
    "platform": null,
    "project_url": "https://pypi.org/project/smallworld-api/",
    "project_urls": {
      "Homepage": "https://github.com/matteoferla/Python_SmallWorld_API"
    },
    "release_url": "https://pypi.org/project/smallworld-api/1.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "An (unofficial) Python3 module to query the SmallWorld chemical space search server (https://sw.docking.org/search.html)",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16208233,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8108835b242d85e11ca6b4380ee68d662a0591040c59308f0410004663a8c8c",
          "md5": "587f54bdd5df36e4db51db4ddb25a9ee",
          "sha256": "7f050edacc9a9c3a3c9d05b26c3e0a22067bfe5a8727e856390489f80f9c87f6"
        },
        "downloads": -1,
        "filename": "smallworld-api-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "587f54bdd5df36e4db51db4ddb25a9ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7099,
        "upload_time": "2021-12-09T18:12:17",
        "upload_time_iso_8601": "2021-12-09T18:12:17.276582Z",
        "url": "https://files.pythonhosted.org/packages/c8/10/8835b242d85e11ca6b4380ee68d662a0591040c59308f0410004663a8c8c/smallworld-api-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe9eb1fb5f07424e86450a8dcc5367523d8e65aee75e3aa2bda9a5b4ddff75f4",
          "md5": "cd919b7270cf41b66ddd4c73a3fcb7b3",
          "sha256": "68acedebe805873c09271d22fd5fa2c90745f91e25cd02854218ce53667afcf3"
        },
        "downloads": -1,
        "filename": "smallworld-api-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cd919b7270cf41b66ddd4c73a3fcb7b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7569,
        "upload_time": "2021-12-17T13:28:26",
        "upload_time_iso_8601": "2021-12-17T13:28:26.346626Z",
        "url": "https://files.pythonhosted.org/packages/fe/9e/b1fb5f07424e86450a8dcc5367523d8e65aee75e3aa2bda9a5b4ddff75f4/smallworld-api-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5c07d6c21a2dd7942597b21dca3545e771ed2db62d7e0362e52a5e07e9cbda4",
          "md5": "5e57b68b85f2ebf875a12c9e99f0bde2",
          "sha256": "852f79afbce39849d919e3fc68c8e15cd6e14db26dd68f339d25fb967f8730fa"
        },
        "downloads": -1,
        "filename": "smallworld-api-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5e57b68b85f2ebf875a12c9e99f0bde2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9877,
        "upload_time": "2022-01-06T17:04:24",
        "upload_time_iso_8601": "2022-01-06T17:04:24.413258Z",
        "url": "https://files.pythonhosted.org/packages/d5/c0/7d6c21a2dd7942597b21dca3545e771ed2db62d7e0362e52a5e07e9cbda4/smallworld-api-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e078cee49cd28a4038ca4db0f9c924b62220cb5b0a29594049daa6f390963d8b",
          "md5": "37c7afcc2f14ac3f3a72bbefe95c0950",
          "sha256": "2ad40bd357a245e999bdb682d4d0a06fbb944edbf8ee3f966350a4b27b47a5c3"
        },
        "downloads": -1,
        "filename": "smallworld_api-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37c7afcc2f14ac3f3a72bbefe95c0950",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13978,
        "upload_time": "2022-03-22T18:05:46",
        "upload_time_iso_8601": "2022-03-22T18:05:46.211019Z",
        "url": "https://files.pythonhosted.org/packages/e0/78/cee49cd28a4038ca4db0f9c924b62220cb5b0a29594049daa6f390963d8b/smallworld_api-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "511bf0fe77eed27922ec31099d406f906399b97a5964917cedb3f200c7a4a5b4",
          "md5": "4d1fa898ea472b1c22c4d10440842765",
          "sha256": "16e2aa1d56aa39190a40572550774c06f11d77aa4f9de2b7944f347e9a6d5fc5"
        },
        "downloads": -1,
        "filename": "smallworld-api-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4d1fa898ea472b1c22c4d10440842765",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16296,
        "upload_time": "2022-03-22T18:05:47",
        "upload_time_iso_8601": "2022-03-22T18:05:47.766155Z",
        "url": "https://files.pythonhosted.org/packages/51/1b/f0fe77eed27922ec31099d406f906399b97a5964917cedb3f200c7a4a5b4/smallworld-api-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "241e47bd4491d9e38edb711aa902c151da8a6a0afb505515555257f8e6398430",
          "md5": "aa3d4acb7a56f8a8efa7cfeb63e84404",
          "sha256": "b5e0fa38513a5d2cdbcd49af8a52965a665b3fb0f3f1d7eb345a55a82fece277"
        },
        "downloads": -1,
        "filename": "smallworld-api-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aa3d4acb7a56f8a8efa7cfeb63e84404",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16672,
        "upload_time": "2022-04-06T17:35:00",
        "upload_time_iso_8601": "2022-04-06T17:35:00.095729Z",
        "url": "https://files.pythonhosted.org/packages/24/1e/47bd4491d9e38edb711aa902c151da8a6a0afb505515555257f8e6398430/smallworld-api-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ebea0d0b99c8fecc4fb8281d4c53191209fe5c5bbc2ba18514bb734dbc00571",
          "md5": "85cc057f402391c252ac05c75a8bf7d5",
          "sha256": "bd35c6679cc782af224763973d55c7d7f303034f8c6fa0adb59868668cca0443"
        },
        "downloads": -1,
        "filename": "smallworld_api-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85cc057f402391c252ac05c75a8bf7d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14385,
        "upload_time": "2022-05-27T12:07:24",
        "upload_time_iso_8601": "2022-05-27T12:07:24.718034Z",
        "url": "https://files.pythonhosted.org/packages/8e/be/a0d0b99c8fecc4fb8281d4c53191209fe5c5bbc2ba18514bb734dbc00571/smallworld_api-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88e3fcd14c66297bccbb55d11dfd53e1ae665dac9c9d6943c296bdd15296a3f2",
          "md5": "99c3f3fa894529288f98590374eef48c",
          "sha256": "f0e556182c3ccb1b0fea2dc027da66a2273ac6d143f743efb7386a30e719a8cf"
        },
        "downloads": -1,
        "filename": "smallworld-api-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "99c3f3fa894529288f98590374eef48c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16709,
        "upload_time": "2022-05-27T12:07:26",
        "upload_time_iso_8601": "2022-05-27T12:07:26.760988Z",
        "url": "https://files.pythonhosted.org/packages/88/e3/fcd14c66297bccbb55d11dfd53e1ae665dac9c9d6943c296bdd15296a3f2/smallworld-api-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8d0d08d1e44804da57fcd0c764865d16ff42b085e2d4532bb3506b212d76f6b",
          "md5": "8b5763409966f3e3f918c15ca052794f",
          "sha256": "9d4ef93838c5963303e7aba25b29d28a8e70a39a8b58d46713c4c70a588dfa06"
        },
        "downloads": -1,
        "filename": "smallworld-api-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8b5763409966f3e3f918c15ca052794f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18428,
        "upload_time": "2022-12-25T07:25:35",
        "upload_time_iso_8601": "2022-12-25T07:25:35.820407Z",
        "url": "https://files.pythonhosted.org/packages/a8/d0/d08d1e44804da57fcd0c764865d16ff42b085e2d4532bb3506b212d76f6b/smallworld-api-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8d0d08d1e44804da57fcd0c764865d16ff42b085e2d4532bb3506b212d76f6b",
        "md5": "8b5763409966f3e3f918c15ca052794f",
        "sha256": "9d4ef93838c5963303e7aba25b29d28a8e70a39a8b58d46713c4c70a588dfa06"
      },
      "downloads": -1,
      "filename": "smallworld-api-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8b5763409966f3e3f918c15ca052794f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 18428,
      "upload_time": "2022-12-25T07:25:35",
      "upload_time_iso_8601": "2022-12-25T07:25:35.820407Z",
      "url": "https://files.pythonhosted.org/packages/a8/d0/d08d1e44804da57fcd0c764865d16ff42b085e2d4532bb3506b212d76f6b/smallworld-api-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}