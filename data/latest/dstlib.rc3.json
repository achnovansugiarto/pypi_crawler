{
  "info": {
    "author": "Ahmad M Ameen",
    "author_email": "ahmadmameen7@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "DstLib - Data Structures Python Library\n============================================\n\nDstLib is a Python library for linear data structures It can be used to work with linked list, queue and stack.\nLinked list is known for its better performance compared to normal python array, but python doesn't come with linked list.\nSo this library is here to fill this gap. Both the queue and the stack are implemented using using linked list.\nSource Code (Donâ€™t forget to put a star if you liked my projectðŸ˜…): `dstlib <https://github.com/algebra7dsalib>`\n\n\nInstallation\n------------\n::\n\n    pip install dstlib\n\nUsage\n-----\n\nWorking with Linked List\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n::\n\n    L = dstlib.LinkedList()     #initiate the linked list object\n    len(L)                      #to get the number of elements in the list\n    is_empty = L.is_empty()     #to know whether the list is empty or not: returns boolean\n    L.append(x)                 #to append an element x\n    L.prepend(y)                #to add an element y to the front of the list\n    L.insert(i, x)              #to insert an element x at a given index i\n\n    p1 = L.add_first(x)         #do the same as L.prepend() but return the position of the added element x\n    pl = L.add_last(y)          #do the same as L.append() but return the position of the added element y\n\n    p2 = L.add_after(p1, x)     #to add an element x after element at position p1 and return the position of the added element x\n    p3 = L.add_before(pl, y)    #to add an element y before element at position pl and return the position of the added element y\n\n    x = L.delete(p)             #to delete an element at position p and get the deleted element\n    p = L.replace(p, x)         #\n\n    L.reverse()                 #to reverse the list\n    p1 = L.first_position()     #to get the position of the first element in the list\n    pl = L.last_position()      #to get the position of the last element in the list\n    p2 = L.position_after(p1)   #to get the position of the element that is after position p1\n    p1 = L.position_before(p2)  #to get the position of the element that is before position p2\n\n    L2 = dstlib.LinkedList()    #initiate another linked list object\n    L2.append(x)                #append an element x\n    L2.append(y)                #append an element y\n    L.concat(L2)                #to concatenate L2 to L (append all L2 elements to L)\n\n    L.sort()                    #to sort the elements of L in ascending order\n\n    L[i]                        #to get the element at index i in the linked list\n\n    \n\nWorking with Queue\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n::\n\n    Q = dstlib.Queue()          #initiate the Queue object\n    len(Q)                      #to get the number of elements in the queue\n    is_empty = Q.is_empty()     #to know whether the queue is empty or not: returns boolean\n    Q.enqueue(x)                #to add an element x to the end of the queue\n    el = Q.dequeue(x)           #to remove an element x from the front of the queue and return the element\n    Q.first()                   #to get the first element in the queue\n    Q.last()                    #to get the last element in the queue\n    Q.rotate()                  #to take the first element in the queue back to the end of the queue\n\n    Q2 = dstlib.Queue()         #initiate another queue object\n    Q.concat_detroy()           #to concatenate Q2 to Q (add all Q2 elements to the end of Q) and destroy Q2\n    Q.concat()                  #same as concat_detroy() but does not destroy Q2\n\n    p = Q.enqueue_position(x)   #to add an element x to the end of the queue and return the position of the element\n    p1 = Q.first_position()     #to get the position of the first element in the queue\n    pl = Q.last_position()      #to get the position of the last element in the queue\n\n    \n\nWorking with Stack\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n::\n\n    S = dstlib.Stack()          #initiate the stack object\n    len(S)                      #to get the number of elements in the stack\n    is_empty = S.is_empty()     #to know whether the stack is empty or not: returns boolean\n    S.push(x)                   #to push an element x to the stack\n    el = S.pop()                #to remove an element from the top of the stack and return the element\n    el = S.top()                #to get the element in the top of the stack without removing its\n    p = S.push_position(x)      #to add an element x to the top of the stack and return the position of the element\n    pt = S.top_position()       #to get the position of the top element in the stack",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/algebra7/dstlib",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dstlib",
    "package_url": "https://pypi.org/project/dstlib/",
    "platform": "",
    "project_url": "https://pypi.org/project/dstlib/",
    "project_urls": {
      "Homepage": "https://github.com/algebra7/dstlib"
    },
    "release_url": "https://pypi.org/project/dstlib/1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Data structures python library",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11089231,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0790f7af63dd1cfd76203ecd2854c8b17ab282a70eba5ecbf43f756490bb4de1",
          "md5": "6baa4095ad99a242dbd984e3957daf96",
          "sha256": "972149d9b32982ba9d16abc3f6bf3f4c1c094d16f7f209dc9087ed8b8889ee21"
        },
        "downloads": -1,
        "filename": "dstlib-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6baa4095ad99a242dbd984e3957daf96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8899,
        "upload_time": "2021-07-25T11:07:27",
        "upload_time_iso_8601": "2021-07-25T11:07:27.151527Z",
        "url": "https://files.pythonhosted.org/packages/07/90/f7af63dd1cfd76203ecd2854c8b17ab282a70eba5ecbf43f756490bb4de1/dstlib-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "065a51688b1eda052a96c4957a54a36b9498e5fd2fa42e06d75ea69f08d67c30",
          "md5": "723193c2286611e8314ef9d3ab1cd3dc",
          "sha256": "25fcbececb3466d37d73254a42f1bcb7c1649d147c95bf9a7c474d8807cd8cce"
        },
        "downloads": -1,
        "filename": "dstlib-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "723193c2286611e8314ef9d3ab1cd3dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8882,
        "upload_time": "2021-07-25T11:20:23",
        "upload_time_iso_8601": "2021-07-25T11:20:23.368722Z",
        "url": "https://files.pythonhosted.org/packages/06/5a/51688b1eda052a96c4957a54a36b9498e5fd2fa42e06d75ea69f08d67c30/dstlib-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "039807a1960fa83c2941ce21e5c843d569373e2009286dfd822598969d94d1b3",
          "md5": "ed70a8c9208b3f8237f21732e01461d9",
          "sha256": "a80da5075a0bd51c4fce2ff9243bd4a7fe9aaca1e8233858435b3699da1593c7"
        },
        "downloads": -1,
        "filename": "dstlib-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ed70a8c9208b3f8237f21732e01461d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9407,
        "upload_time": "2021-08-04T11:07:54",
        "upload_time_iso_8601": "2021-08-04T11:07:54.277949Z",
        "url": "https://files.pythonhosted.org/packages/03/98/07a1960fa83c2941ce21e5c843d569373e2009286dfd822598969d94d1b3/dstlib-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "039807a1960fa83c2941ce21e5c843d569373e2009286dfd822598969d94d1b3",
        "md5": "ed70a8c9208b3f8237f21732e01461d9",
        "sha256": "a80da5075a0bd51c4fce2ff9243bd4a7fe9aaca1e8233858435b3699da1593c7"
      },
      "downloads": -1,
      "filename": "dstlib-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ed70a8c9208b3f8237f21732e01461d9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9407,
      "upload_time": "2021-08-04T11:07:54",
      "upload_time_iso_8601": "2021-08-04T11:07:54.277949Z",
      "url": "https://files.pythonhosted.org/packages/03/98/07a1960fa83c2941ce21e5c843d569373e2009286dfd822598969d94d1b3/dstlib-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}