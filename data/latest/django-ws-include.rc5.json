{
  "info": {
    "author": "Diego J. Romero López",
    "author_email": "diegojromerolopez@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# django-ws-include\n\n[![License](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://github.com/diegojromerolopez/django-ws-include/graphs/commit-activity)\n[![made-with-python](https://img.shields.io/badge/Made%20with-Python-1f425f.svg)](https://www.python.org/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/django-ws-include.svg)](https://pypi.python.org/pypi/django-ws-include/)\n[![PyPI version django-ws-include](https://badge.fury.io/py/django-ws-include.svg)](https://pypi.python.org/pypi/django-ws-include/)\n[![PyPI status](https://img.shields.io/pypi/status/django-ws-include.svg)](https://pypi.python.org/pypi/django-ws-include/)\n[![PyPI download month](https://img.shields.io/pypi/dm/django-ws-include.svg)](https://pypi.python.org/pypi/django-ws-include/)\n[![Maintainability](https://api.codeclimate.com/v1/badges/25ec3d6c327ca2ef3ea1/maintainability)](https://codeclimate.com/github/diegojromerolopez/django-ws-include/maintainability)\n[![Test Coverage](https://api.codeclimate.com/v1/badges/25ec3d6c327ca2ef3ea1/test_coverage)](https://codeclimate.com/github/diegojromerolopez/django-ws-include/test_coverage)\n\nInclude your templates asynchronously and load their contents using websockets\nin [Django](https://www.djangoproject.com/).\n\n[See this library in github](https://github.com/diegojromerolopez/django-ws-include).\n\n## How does this work?\n\nThis library includes javascript code in the **ws_include** template_tag\nand a static javascript file\n[ws_include.js](/ws_include/static/ws_include/ws_include.js) file\n\nThat javascript code opens a websocket connection (WS_INCLUDE_WEBSOCKET)\nthat will send a websocket message including the encrypted query and the block ID of\nthe template that must be loaded asynchronously.\n\nLater, the server responds with the rendered template and the corresponding block ID.\nThe javascript code uses the block ID to identify were to include the rendered template.\n\nThis project is an optimization of\n[django-async-include](https://github.com/diegojromerolopez/django-async-include/),\nproject that while has the same philosophy, it uses HTTP requests to get the\nrendered templates, so it is less efficient than using a lone websocket connection.\nYou are encouraged to take a look to that project to help you understand the aim\nof this project.\n\n## Installation\n\n[This package is in pypi](https://pypi.org/project/django-ws-include/).\nUse pip to install it:\n\n```shell\npip install django-ws-include\n```\n\n### Installation in your Django project\n\nInclude channels and ws_include in your project's **settings.py**:\n\n```sh\n\nINSTALLED_APPS = [\n    ## ...\n    'channels',\n    'ws_include',\n]\n\n```\n\n### Create asgi.py file with django-ws-include routes\n\n```python\nimport os\n\nfrom channels.auth import AuthMiddlewareStack\nfrom channels.routing import ProtocolTypeRouter, URLRouter\nfrom django.core.asgi import get_asgi_application\nfrom ws_include.routing import websocket_urlpatterns\n\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"your_project.settings\")\n\napplication = ProtocolTypeRouter({\n    \"http\": get_asgi_application(),\n    \"websocket\": AuthMiddlewareStack(\n        URLRouter(\n            websocket_urlpatterns\n        )\n    )\n})\n\n```\n\nAdd the static file to the header of your HTML base template file:\n\n```html\n<script type=\"text/javascript\" src=\"{% static 'ws_include/ws_include.js' %}\"></script>\n```\n\n## Use\n\nLoad the **ws_include** template tags at the top of your template and use the **ws_include**\ntemplate tag as a replacement of the django include template tag.\n\nYou have to pass the local context explicitly to the async included templates, so you can pass all variables you\nneed in your included template as named parameters of the **ws_include** template tag.\n\n```html\n\n{# Load the ws_include template tag at the top of your template file #}\n{% load ws_include %}\n\n{# Call the ws_include template tag indicating what objects needs to replace it #}\n{% ws_include \"<path of the >\" <object1_name>=<object1> <object2_name>=<object2> ... <objectN_name>=<objectN>  %}\n```\n\nThere is also a repository with a full example that also uses django-async-include:\n[django-async-include-example](https://github.com/diegojromerolopez/django-async-include-example).\n\n### Warning and limitations\n\n#### Object dynamic attributes\nNo dynamic attribute will be passed to the templates given that only a reference to it is passed\nfrom the caller to the included template callee.\n\n**Don't use dynamic attributes inside an async_included template**.\n\nHowever, the full object will be passed to the template,\nso you could call its methods and properties without any problem.\n\n#### QuerySets\nEach QuerySet is passed as encrypted SQL and converted on the receiver to a RawQuerySet.\n\nNote that RawQuerySets have no len method so length filter returns always 0.\n\n**Load ws_included_length in your template and use the filter **ws_included_length** to get the length.\n\n````html\n{# Partial HTML template file to be loaded by websockets #}\n{% load ws_included_length %}\n\n<div>\n    <h2>Product list (items|ws_included_length)</h2>\n    <ul>\n        {% for item in items %}\n        <li>\n            {{ item.name }}\n        </li>\n        {% endfor %}\n    </ul>\n</div>\n````\n\n## Examples\n\n### Passing an object\n\n```html\n{% load ws_include %}\n\n{# .. #}\n\n{# Load the template and informs the board object is required for the included template  #}\n{% ws_include \"boards/components/view/current_percentage_of_completion.html\" board=board %}\n```\n\n### Passing a QuerySet\n\n```html\n{% load ws_include %}\n\n{# .. #}\n\n{% ws_include \"boards/components/view/summary.html\" board=board member=member next_due_date_cards=next_due_date_cards %}\n```\n\n## Customization\n\n### Block wrapper html tag\n\nWrapper tag is **div** and maybe you don't want that. Set **html__tag** optional parameter to the name of\nthe tag you need in that particular context.\n\nExample:\n\n```html\n{% load ws_include %}\n\n{# .. #}\n\n{# Will be replaced by <li></li> block instead of <div></div> #}\n{% ws_include \"boards/components/view/last_comments.html\" board=board html__tag='li' %}\n```\n\n### Block wrapper html tag class\n\nCustomize the wrapper class by passing **html__tag__class** optional parameter to the template tag.\n\n```html\n{% load ws_include %}\n\n{# .. #}\n\n{# Will be replaced by <li></li> block instead of <div></div> #}\n{# Class last_comments will be added to wrapper class #}\n{% ws_include \"boards/components/view/last_comments.html\" board=board html__tag='li' html__tag__class='last_comments' %}\n```\n\n## TODO\n* More tests: test the Websocket Consumer code.\n* Improve documentation.\n\n## Main author\nDiego J. Romero-López is a Software Engineer based on Madrid (Spain).\n\nThis project is in no way endorsed or related in any way to my past or current employers.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/diegojromerolopez/django-ws-include",
    "keywords": "django template asynchronous template_tag websockets",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-ws-include",
    "package_url": "https://pypi.org/project/django-ws-include/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-ws-include/",
    "project_urls": {
      "Homepage": "https://github.com/diegojromerolopez/django-ws-include"
    },
    "release_url": "https://pypi.org/project/django-ws-include/0.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simple application for Django to include (and fetch) asynchronous templates by loading templates with websocket connections.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12589817,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05b0b6fee712a6c66269b7c7ba330bff62145ba25cdffbad45e3e662b70c8857",
          "md5": "a70dcb8865e61ede3cff7b3e31970e59",
          "sha256": "1f22359253bd7439adccdfea3f896b00b085c17e9ec4237d413a046f13c51d99"
        },
        "downloads": -1,
        "filename": "django-ws-include-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a70dcb8865e61ede3cff7b3e31970e59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9714,
        "upload_time": "2022-01-10T11:39:00",
        "upload_time_iso_8601": "2022-01-10T11:39:00.448129Z",
        "url": "https://files.pythonhosted.org/packages/05/b0/b6fee712a6c66269b7c7ba330bff62145ba25cdffbad45e3e662b70c8857/django-ws-include-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d884b9d0735649fb9056a478150e8c9a5844426fae743fb752e097d963d6239",
          "md5": "a0bed08c5a3c57a9dea97af88f46b616",
          "sha256": "cb9aab185d97b0e24cbe7427e3512b32246e579e354635e329e994815e3feef1"
        },
        "downloads": -1,
        "filename": "django-ws-include-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a0bed08c5a3c57a9dea97af88f46b616",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9661,
        "upload_time": "2022-01-10T11:42:03",
        "upload_time_iso_8601": "2022-01-10T11:42:03.890054Z",
        "url": "https://files.pythonhosted.org/packages/0d/88/4b9d0735649fb9056a478150e8c9a5844426fae743fb752e097d963d6239/django-ws-include-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc3850058db2db527fb501def4b7cd6e720b59a47ff4de5240b95f3db4dd6d96",
          "md5": "4a22f4d7f14fd5e26a155933519133d8",
          "sha256": "d8ee38c3e14d6c924e33557a0a9e10841ac911206e69258794dd6892ac16acb3"
        },
        "downloads": -1,
        "filename": "django-ws-include-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4a22f4d7f14fd5e26a155933519133d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9671,
        "upload_time": "2022-01-11T12:57:07",
        "upload_time_iso_8601": "2022-01-11T12:57:07.405473Z",
        "url": "https://files.pythonhosted.org/packages/fc/38/50058db2db527fb501def4b7cd6e720b59a47ff4de5240b95f3db4dd6d96/django-ws-include-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f59613841a6781a261f0415471cfa080ab5a1d8e4b62a109ea93aff6343a98d",
          "md5": "5b5aaba4adb4bce8e58581f5aab1a639",
          "sha256": "ec9cb63fe64daa1a6de5450b602a6d601c4df08200b4af790e841e85378aa09a"
        },
        "downloads": -1,
        "filename": "django-ws-include-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5b5aaba4adb4bce8e58581f5aab1a639",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9447,
        "upload_time": "2022-01-13T17:44:07",
        "upload_time_iso_8601": "2022-01-13T17:44:07.661240Z",
        "url": "https://files.pythonhosted.org/packages/5f/59/613841a6781a261f0415471cfa080ab5a1d8e4b62a109ea93aff6343a98d/django-ws-include-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e67eccdcb05c3be7cc61f4d43e094b68382be97b1667c4092b92baa3fc91ce10",
          "md5": "5f10d758f78d6e9e1dfb8d23a5d237cb",
          "sha256": "2eb38bcd64770a23d5e81548ecd81918e99d2f49c289e65b28a1c029abb7e99d"
        },
        "downloads": -1,
        "filename": "django-ws-include-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5f10d758f78d6e9e1dfb8d23a5d237cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10333,
        "upload_time": "2022-01-16T17:34:04",
        "upload_time_iso_8601": "2022-01-16T17:34:04.685809Z",
        "url": "https://files.pythonhosted.org/packages/e6/7e/ccdcb05c3be7cc61f4d43e094b68382be97b1667c4092b92baa3fc91ce10/django-ws-include-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e67eccdcb05c3be7cc61f4d43e094b68382be97b1667c4092b92baa3fc91ce10",
        "md5": "5f10d758f78d6e9e1dfb8d23a5d237cb",
        "sha256": "2eb38bcd64770a23d5e81548ecd81918e99d2f49c289e65b28a1c029abb7e99d"
      },
      "downloads": -1,
      "filename": "django-ws-include-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5f10d758f78d6e9e1dfb8d23a5d237cb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10333,
      "upload_time": "2022-01-16T17:34:04",
      "upload_time_iso_8601": "2022-01-16T17:34:04.685809Z",
      "url": "https://files.pythonhosted.org/packages/e6/7e/ccdcb05c3be7cc61f4d43e094b68382be97b1667c4092b92baa3fc91ce10/django-ws-include-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}