{
  "info": {
    "author": "Nicholas Moen",
    "author_email": "arcanemachine@tutanota.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# hetzner-dns-tools\n\n### \"A simple Hetzner DNS API client for Python and Bash.\"\n\nThis library makes it easier to work with Hetzner's [DNS API](https://dns.hetzner.com/api-docs/), namely Zones and Records.\n\n#### **Project Status: All basic CRUD functionality is complete. Tests still need to be written. Bulk record CREATE options not (yet) supported.**\n\nTo be specific, `hetzner-dns-tools` makes it easier to manage your zones/records by name instead of having to get the ID first (although you can do that as well). Also, it allows you to retrieve *only* the IDs if needed, without having to manually parse the JSON first.\n\nLimitations: `hetzner-dns-tools` does not currently do bulk operations other than bulk record deletion, and it does not work with query params (it would be easy to add if you are so inclined). Pull requests and forks are welcomed! :)\n\nThese tools are made with Python and are designed to be used in Bash or Python.\n\nAll examples in this README assume you are in the root directory of this project when running commands.\n\n## Table of Contents\n\n- [Setup](#setup)\n- [Setting Parameters](#setting-parameters)\n- [How to Use This Library](#how-to-use-this-library)\n- [Project Structure](#project-structure)\n- [Converting Results to Human-Readable Output](#converting-results-to-human-readable-output)\n- [Usage Guide](#usage-guide)\n  - [Zones](#zones)\n    - [zone_list](#zone_list)\n    - [zone_create](#zone_create)\n    - [zone_get](#zone_get)\n    - [zone_delete](#zone_delete)\n  - [Records](#records)\n    - [record_list](#record_list)\n    - [record_create](#record_create)\n    - [record_get](#record_get)\n    - [record_delete](#record_delete)\n\n## Setup\n\n- Ensure you have a [Hetzner DNS API token](https://docs.hetzner.com/dns-console/dns/general/api-access-token/).\n- Install the `hetzner-dns-tools` package:\n  - Via pip (recommended):\n    - `pip install hetzner-dns-tools`\n  - Via GitHub:\n    - Clone the `hetzner-dns-tools` repo: `git clone https://github.com/arcanemachine/hetzner-dns-tools`\n    - Navigate to the root folder of the project.\n    - Ensure the python3 `build` module is installed: `python3 -m pip install build`\n    - Build the project: `python3 -m build`\n    - Install the package: `python3 -m pip install .`\n\nBasic usage example: ` HETZNER_DNS_TOKEN=your-hetzner-dns-token hetzner-dns-tools zone list` (Note: To prevent sensitive data from being saved in your Bash history, ensure that this command begins with a space, or set the [environment variable somewhere else](#setting-environment-variables).\n\n### Run In Docker\n\n- Install [Docker Engine](https://docs.docker.com/engine/install/).\n- Start the container and view the logs while the project builds: `docker run --name hetzner-dns-tools -dt arcanemachine/hetzner-dns-tools && docker logs -f hetzner-dns-tools`\n- After the project finishes building\\* press `Ctrl + C` to exit the logs, and open a bash shell in the same container: `docker exec -it hetzner-dns-tools bash`\n  - \\*You can exit the logs before the build completes. However, `hetzner-dns-tools` will not be available from the command line until the build is complete.\n- From this shell, you can run `hetzner-dns-tools` or open `python3` and `import hetzner_dns_tools`.\n- When you are finished, you can stop and destroy the container with `docker stop -t 1 hetzner-dns-tools` and `docker rm hetzner-dns-tools`.\n\n**Note:** This library allows indirect lookups to be performed by domain name or other parameters, which will result in multiple requests being issued. To decrease the run time, use zone IDs and record IDs whenever possible.\n\n## Setting Parameters\n\nThere are two methods of setting parameters using this library:\n  - Bash environment variables\n    - e.g. `HETZNER_DNS_TOKEN=your-hetzner-token hetzner-dns-tools zone list`\\*\n  - Python arguments\n    - e.g. `zone_list(hetzner_dns_token='your-hetzner-token')`\n\n> \\*If you are using this library via Bash, you may want to look into something like **[direnv](https://direnv.net/)** in order to prevent your DNS token from leaking into your `~/.bash history`.\n\nAny arguments used when calling a Python function will override the values of any environment variables.\n\nPlease note that the `name` parameter is used in Hetzner's DNS API calls (specifically in `zone_create` and `record_create`), while the `zone_name` parameter is only used in `hetzner-dns-tools`.\n\n\n## How to Use This Library\n\n**All API calls require a `hetzner_dns_token` parameter to be set.**\n\n### In Bash\n\nSimply execute the file you want to run. For example: `hetzner-dns-tools zone list` (Ensure that you set `HETZNER_DNS_TOKEN` environment variable before every command. Read [this section](#setting-environment-variables) to learn more about setting environment variables.) Data can be added to the command by setting environment variables, e.g. `NAME=your-domain.com hetzner-dns-tools zone create`.\n\nTo get the Python docstring (ie. help file) for a function, set the environment variable `SHOW_HELP` to a truthy value, e.g. `SHOW_HELP=1 hetzner-dns-tools zone get`\n\nTo know whether a script executed successfully or not, run `echo $?` after running a command. If the value of `$?` is `0`, the script executed successfully. If the value of `$?` is `1`, the script exited with an error.\n\nMost errors that occur in the Python code (e.g. if you forget to set an environment variable) will raise an exception and print a stack trace in the console. Other errors will begin with `Error:` and contain a description of the error.\n\n\n### In Python\n\n```\nfrom hetzner_dns_tools.zone_list import zone_list\n\n# THIS EXAMPLE WILL NOT WORK IF YOU HAVEN'T CREATED ANY HETZNER DNS ZONES\n\n# get zone list\ndns_zones = zone_list()['zones']\n\n# parse ID from first zone\nyour_zone_id = dns_zones[0]['id']\n\nprint(your_zone_id)\n```\n\n## Project Structure\n\nThese tools are namespaced by feature into modules:\n  - zone_create, zone_get, and zone_delete\n  - record_create, record_get, and record_delete\n\ne.g. Running `hetzner-dns-tools zone list` in Bash will list all available DNS zones. (Make sure to pass your `HETZNER_DNS_TOKEN` as an environment variable)\n\n\n## Converting Results to Human-Readable Output\n\nThe default output is nearly impossible for humans to read. Here's how to format it so it looks better:\n\n### In Bash\n\nThis method requires you to have `npm` installed:\n  - Install the npm package `json` globally:\n    - `npm i -g json`\n  - Pipe the output of a command to the newly-installed `json` package:\n    - `hetzner-dns-tools zone listjson`\n\nIf you know of a better method (particularly one that doesn't require `npm` to be installed), please [submit a ticket](https://github.com/arcanemachine/hetzner-dns-tools/issues/new).\n\n\n### In Python\n\n```\nimport json\nfrom hetzner_dns_tools.zone_list import zone_list\n\n# get zone list\ndns_zones = zone_list()['zones']\n\n# make it readable\nreadable_dns_zones = json.dumps(dns_zones, indent=2)\n\nprint(readable_dns_zones)\n```\n\n\n## Usage Guide\n\n#### Zone Functions\n- [zone_list](#zone_list)\n- [zone_create](#zone_create)\n- [zone_get](#zone_get)\n- [zone_delete](#zone_delete)\n\n#### Record Functions\n- [record_list](#record_list)\n- [record_create](#record_create)\n- [record_get](#record_get)\n- [record_delete](#record_delete)\n\n**This section assumes that you have exported the `HETZNER_DNS_TOKEN` environment variable before running any Bash commands. Read [the section on setting Bash environment variables](#setting-environment-variables) if you don't know how to do this.)**\n\n**In Bash, results will be returned as a condensed JSON-formatted string, except when string values (e.g. zone IDs) are requested, or when DELETE actions are performed (will return 'OK' if successful).**\n\n**In Python, results will be returned as a dictionary, except when string values (e.g. zone IDs) are requested, or when DELETE actions are performed (will return 'OK'  if successful.**\n\n## **Zones**\n\n## zone_list\n\n*Get list of all zones.* ([Hetzner Docs API - Get All Zones](https://dns.hetzner.com/api-docs/#tag/Zones))\n\n\n### In Bash\n\n`hetzner-dns-tools zone list`\n\n\n### In Python\n\n```\nfrom hetzner_dns_tools.zone_list import zone_list\n\nyour_zones = zone_list()\n\nprint(your_zones)\n\n```\n\n\n## zone_create\n\n*Create a new zone.* ([Hetzner DNS API Docs - Create Zone](https://dns.hetzner.com/api-docs/#operation/CreateZone))\n\n> **Required Parameters:** `name/zone_name` (`name` and `zone_name` are interchangeable)\n\n> Optional Parameters: `ttl`\n\n**NOTE:** `zone_create` and `zone_delete` allow the `name` and `zone_name` parameters (or the `NAME` and `ZONE_NAME` environment variables) to be used interchangeably. Note that the `name` parameter is used in Hetzner's API, but `zone_name` is commonly used in this library, so I allow both to be used to reduce the cognitive burden of having to switch from one to the other.\n\n\n### In Bash\n\nTo return all data for the zone: `NAME=your-domain.com hetzner-dns-tools zone create` or `ZONE_NAME=your-domain.com hetzner-dns-tools zone create`\n\nTo return just the zone ID: `NAME=your-domain.com ID_ONLY=1 hetzner-dns-tools zone create`\n\nTo create a new zone with a custom TTL (default: 86400): `NAME=your-domain.com TTL=57600 hetzner-dns-tools zone create`\n\n\n### In Python\n\nTo get all data for the new zone:\n\n```\nfrom hetzner_dns_tools.zone_create import zone_create\n\n# create a new zone and return all zone data\nnew_zone = zone_create(hetzner_dns_token='your-token',\n                       name='your-domain.com')  # can also use zone_name\n\n# print the name of the new zone\nprint(new_zone['zone']['name'])  # 'your-domain.com'\n```\n\nTo return just the ID for the new zone:\n\n```\nfrom hetzner_dns_tools.zone_create import zone_create\n\n# create a new zone and return just the zone_id\nnew_zone_id = zone_create(hetzner_dns_token='your-token',\n                          zone_name='your-domain.com',  # can also use name\n                          id_only=True)\n\n# print the ID of the new zone\nprint(new_zone_id)\n```\n\nTo create a new zone with a custom TTL (default: 86400):\n\n```\nfrom hetzner_dns_tools.zone_create import zone_create\n\n# create a new zone and return all zone data\nnew_zone = zone_create(hetzner_dns_token='your-token',\n                       name='your-domain.com',  # can also use zone_name\n                       ttl=57600)\n\n# print the TTL of the new zone\nprint(new_zone['zone']['ttl'])  # 57600\n```\n\n\n## zone_get\n\n*Get info about an existing zone.* ([Hetzner DNS API Docs - Get Zone](https://dns.hetzner.com/api-docs/#operation/GetZone))\n\n> **Required Parameters:** One of: `zone_id` or `zone_name`\n\n> Optional Parameters: `id_only`\n\n\n### In Bash\n\nTo return all data for the zone by using the zone ID: `ZONE_ID=your-zone-id hetzner-dns-tools zone get`\n\nTo return all data for the zone by using the zone's domain name: `ZONE_NAME=your-domain.com hetzner-dns-tools zone get`\n\nTo return just the zone ID by using the zone's domain name: `ZONE_NAME=your-domain.com ID_ONLY=1 hetzner-dns-tools zone get`\n\n\n### In Python\n\nTo return all data for the zone by using the zone ID:\n\n```\nfrom hetzner_dns_tools.zone_get import zone_get\n\nzone = zone_get(hetzner_dns_token='your-token',\n                zone_id='your-zone-id')\n\n# print the name of the zone\nprint(zone['zone']['name'])\n```\n\n\nTo return all data for the zone by using the zone's domain name:\n\n```\nfrom hetzner_dns_tools.zone_get import zone_get\n\nzone = zone_get(hetzner_dns_token='your-token',\n                zone_name='your-domain.com')\n\n# print the ID of the zone\nprint(zone['zone']['id'])\n```\n\n\nTo return just the zone ID by using the zone's domain name:\n\n```\nfrom hetzner_dns_tools.zone_get import zone_get\n\nzone_id = zone_get(hetzner_dns_token='your-token',\n                   zone_name='your-domain.com',\n                   id_only=True)\n\n# print the ID of the zone\nprint(zone_id)\n```\n\n\n## zone_update\n\nTo update a zone, use `zone_delete` to delete a zone, and then use `zone_create` to create a new one. (I had some issues getting the function to work with Hetzner's backend (it wouldn't allow any changes to be made), plus the ability to delete and create records effectively makes the update function redundant. If you want to try to implement the function yourself, there is a `zone_update.py` file in the [experimental-functions](https://github.com/arcanemachine/hetzner-dns-tools/tree/experimental-functions) branch that may be of some help.\n\n\n## zone_delete\n\n*Delete an existing zone.* ([Hetzner DNS API Docs - Delete Zone](https://dns.hetzner.com/api-docs/#operation/DeleteZone))\n\n> **Required Parameters:** One of: `zone_id` or `zone_name/name`\n\nZones can be deleted directly using a `zone_id`, or can be done indirectly by using any of the *Optional Parameters* as a lookup.\n\nSuccessful delete operations will return the string 'OK', and unsuccessful delete operations will raise a `ValueError` exception.\n\n**NOTE:** `zone_create` and `zone_delete` allow the `name` and `zone_name` parameters (or the `NAME` and `ZONE_NAME` environment variables) to be used interchangeably. Note that the `name` parameter is used in Hetzner's API, but `zone_name` is commonly used in this library, so I allow both to be used to reduce the cognitive burden of having to switch from one to the other.\n\n\n### In Bash\n\nTo delete a zone by its zone ID: `ZONE_ID=your-zone-id hetzner-dns-tools zone delete`\n\nTo delete a zone by its zone (ie. domain) name: `ZONE_NAME=your-domain.com hetzner-dns-tools zone delete` or `NAME=your-domain.com hetzner-dns-tools zone delete`\n\n\n### In Python\n\nTo delete a zone by its zone ID:\n\n```\nfrom hetzner_dns_tools.zone_delete import zone_delete\n\nzone_delete(hetzner_dns_token='your-token',\n            zone_id='your-zone-id')\n```\n\nTo delete a zone by its zone (ie. domain) name:\n\n```\nfrom hetzner_dns_tools.zone_delete import zone_delete\n\nzone_delete(hetzner_dns_token='your-token',\n            zone_name='your-domain.com')  # can also use 'name'\n```\n\n\n## **Records**\n\n## record_list\n\n*Get list of all records.* ([Hetzner DNS API Docs - Get All Records](https://dns.hetzner.com/api-docs/#operation/GetRecords))\n\n> **Required Parameters:** One of: `zone_id` or `zone_name`\n\n\n### In Bash\n\nTo return all data for all zones: `hetzner-dns-tools record list`\n\nTo return all data for a single zone, by zone ID: `ZONE_ID=your-zone-id hetzner-dns-tools record list`\n\nTo return all data for a single zone, by zone (ie. domain) name: `ZONE_NAME=your-domain.com hetzner-dns-tools record list`\n\n\n### In Python\n\nTo return all data for all zones:\n\n```\nfrom hetzner_dns_tools.record_list import record_list\n\nrecords = record_list(hetzner_dns_token='your-token')\n\nprint(records)\n```\n\nTo return all data for a single zone, by zone ID:\n\n```\nfrom hetzner_dns_tools.record_list import record_list\n\nrecords = record_list(hetzner_dns_token='your-token',\n                      zone_id='your-zone-id')\n\nprint(records)\n```\n\nTo return all data for a single zone, by zone (ie. domain) name:\n\n```\nfrom hetzner_dns_tools.record_list import record_list\n\nrecords = record_list(hetzner_dns_token='your-token',\n                      zone_name='your-domain.com')\n\nprint(records)\n```\n\n\n## record_create\n\n*Create a new record.* ([Hetzner DNS API Docs - Create Record](https://dns.hetzner.com/api-docs/#operation/CreateRecord))\n\n> **Required Parameters:** `hetzner_dns_token`, `record_type`, `value`, `zone_id`\n\n> Optional Parameters: `zone_name`, `name`\\*, `ttl`, `id_only`\\\n>\\\n>**\\*If `name` is not specified, the root value `@` will be used (except for MX records).**\n\nTo get the ID of the zone you want to create the record in, you can use `zone_name` to do an indirect lookup an obtain the `zone_id`. Note that doing this will result in an additional request being made.\n\n**Note:** Hetzner's DNS API requires a the `type` parameter to specify the type of record (e.g. A, AAAA, CNAME, MX, etc.). Because the word `type` is a reserved keyword in Python, the `record` functions all use the `record_type` parameter instead. When using environment variables, either `TYPE` or `RECORD_TYPE` may be used interchangeably.\n\n\n### In Bash\n\nTo create an `A` record for zone ID `your-zone-id` with name `www` and value `1.1.1.1`, and return all record data: `ZONE_ID=your-zone-id TYPE=A NAME=www VALUE=1.1.1.1 hetzner-dns-tools record create`\n\nTo return just the record ID after creating the record: `ZONE_ID=your-zone-id RECORD_TYPE=A NAME=www VALUE=1.1.1.1 ID_ONLY=1 hetzner-dns-tools record create`\n\nTo create a new record with a custom TTL (default is `86400`), use `TTL`: `ZONE_ID=your-zone-id TYPE=A NAME=www VALUE=1.1.1.1 TTL=57600 hetzner-dns-tools record create`\n\nTo create a MX record with a target of `your-domain.com` and a priority of `10`, both values must be entered as such in the `VALUE` field: `ZONE_ID=your-zone-id TYPE=MX VALUE=\"10 your-mail-server.com\" hetzner-dns-tools record create`\n\nTo create a SRV record with a priority of `1`, a weight of `2`, at port `3` for a target `your-server.com`, all values must be entered in this order in the `VALUE` field:  `ZONE_ID=your-zone-id TYPE=SRV VALUE=\"1 2 3 your-server.com\" hetzner-dns-tools record create`\n\n\n### In Python\n\nTo create an `A` record for zone ID `your-zone-id` with name `www` and value `1.1.1.1`, and return all record data:\n\n```\nfrom hetzner_dns_tools.record_create import record_create\n\n# create a new record and return all record data\nnew_record = record_create(hetzner_dns_token='your-token',\n                           zone_id='your-zone-id',\n                           record_type='A',\n                           name='www',\n                           value='1.1.1.1')\n\n# print the record's 'created' value\nprint(new_record['record']['created'])\n```\n\nTo return just the record ID after creating the record:\n\n```\nfrom hetzner_dns_tools.record_create import record_create\n\n# create a new record and return all record data\nnew_record_id = record_create(hetzner_dns_token='your-token',\n                              zone_id='your-zone-id',\n                              record_type='A',\n                              name='www',\n                              value='1.1.1.1',\n                              id_only=True)\n\n# print the new record's ID\nprint(new_record_id)\n```\n\nTo create a new MX record with server `your-mail-server.com` and priority `10`:\n\n```\nfrom hetzner_dns_tools.record_create import record_create\n\n# create a new record and return all record data\nnew_record = record_create(hetzner_dns_token='your-token',\n                           zone_id='your-zone-id',\n                           record_type='MX',\n                           value='10 your.mail-server.com')\n```\n\nTo create a SRV record with a priority of `1`, a weight of `2`, at port `3` for a target `your-server.com`:\n\n```\nfrom hetzner_dns_tools.record_create import record_create\n\n# create a new record and return all record data\nnew_record = record_create(hetzner_dns_token='your-token',\n                           zone_id='your-zone-id',\n                           record_type='SRV',\n                           value='1 2 3 your.server.com')\n```\n\n\n## record_get\n\n*Get info about an existing record.* ([Hetzner DNS API Docs - Get Record](https://dns.hetzner.com/api-docs/#operation/GetRecord))\n\n> **Required\\* Parameters:** One of: `record_id` or `zone_id` or `zone_name`\n\n> Optional Parameters:\\\n> &emsp;Filters: `record_type`, `name`, `value`, `ttl`\\\n> &emsp;Formats: `id_only`\\\n> &emsp;Options: `first_record_only`, `allow_multiple_records`, `search_all_zones`\\*\\\n>\\\n>**\\*If the `search_all_zones` parameter is given a truthy value, then you do not need to include any of the *Required Parameters*, as their purpose is to ensure that records are only returned for a single zone.**\n\n**Note:** This function will raise an exception if multiple records are returned, \\*unless\\* the `first_record_only` \\*or\\* `allow_multiple_records` parameters are truthy.\n\n\n### **Options**\n\nThese parameters can be given truthy values to enable them:\n\n`allow_multiple_records` - If multiple records are returned, return all of them.\n`first_record_only` - Return only the first record found. (There is no guarantee of any ordering.)\n`search_all_zones` - Allow records to be returned from all zones. No required parameters are needed when using this option.\n`id_only` - Returns only the ID of the given record. If this argument and `allow_multiple_records` are both truthy, a list of record IDs will be returned.\n\n\n### In Bash\n\nTo return all data for single record via the record's ID: `RECORD_ID=your-record-id hetzner-dns-tools record get`\n\nTo return all MX records for a zone by using a zone ID as a lookup: `ZONE_ID=your-zone-id TYPE=MX ALLOW_MULTIPLE_RECORDS=1 hetzner-dns-tools record get`\n\nTo return a zone's A record with a name of 'www' by using a zone (ie. domain) name as a lookup: `ZONE_NAME=your-domain.com TYPE=A NAME=www hetzner-dns-tools record get`\n\nTo return all record IDs for a zone by using a zone ID as a lookup: `ZONE_ID=your-zone-id ALLOW_MULTIPLE_RECORDS=1 ID_ONLY=1 hetzner-dns-tools record get`\n\nTo return all A records from all zones with a name of '@' (root): `TYPE=A NAME=\"@\" SEARCH_ALL_ZONES=1 ALLOW_MULTIPLE_RECORDS=1 hetzner-dns-tools record get`\n\nTo return the first returned A record with a value of `1.2.3.4` and a TTL of `57600` by using a zone (ie. domain) name as a lookup: `ZONE_NAME=your-domain.com TYPE=A VALUE=1.2.3.4 TTL=57600 FIRST_RECORD_ONLY=1 hetzner-dns-tools record get`\n\n\n### In Python\n\nTo return all data for single record via the record's ID:\n\n```\nfrom hetzner_dns_tools.record_get import record_get\n\nrecord = record_get(hetzner_dns_token='your-token',\n                    record_id='your-record-id')\n```\n\nTo return all MX records for a zone by using a zone ID as a lookup:\n\n```\nfrom hetzner_dns_tools.record_get import record_get\n\nrecords = record_get(hetzner_dns_token='your-token',\n                     zone_id='your-zone-id',\n                     record_type='MX',\n                     allow_multiple_records=True)\n```\n\n\nTo return a zone's A record with a name of 'www' by using a zone (ie. domain) name as a lookup:\n\n```\nfrom hetzner_dns_tools.record_get import record_get\n\nrecord = record_get(hetzner_dns_token='your-token',\n                    zone_id='your-zone-id',\n                    record_type='A',\n                    name='www')\n```\n\nTo return all MX records for a zone by using a zone ID as a lookup:\n\n```\nfrom hetzner_dns_tools.record_get import record_get\n\nrecords = record_get(hetzner_dns_token='your-token',\n                     zone_id='your-zone-id',\n                     record_type='MX',\n                     allow_multiple_records=True)\n```\n\n\nTo return all record IDs for a zone by using a zone ID as a lookup:\n\n```\nfrom hetzner_dns_tools.record_get import record_get\n\n# this value will contain a list of zone IDs\nrecord_ids = record_get(hetzner_dns_token='your-token',\n                        zone_id='your-zone-id',\n                        allow_multiple_records=True,\n                        id_only=True)\n```\n\nTo return all record IDs for a zone by using a zone ID as a lookup:\n\n```\nfrom hetzner_dns_tools.record_get import record_get\n\n# this value will contain a list of zone IDs\nrecord_ids = record_get(hetzner_dns_token='your-token',\n                        zone_id='your-zone-id',\n                        allow_multiple_records=True,\n                        id_only=True)\n```\n\nTo return all A records from all zones with a name of '@' (root):\n\n```\nfrom hetzner_dns_tools.record_get import record_get\n\n# this value will contain a list of zone IDs\nrecord_ids = record_get(hetzner_dns_token='your-token',\n                        search_all_zones=True,\n                        record_type='A',\n                        name='@',\n                        allow_multiple_records=True)\n```\n\nTo return the first record with a value of `1.2.3.4` by using a zone (ie. domain) name as a lookup:\n\n```\nfrom hetzner_dns_tools.record_get import record_get\n\n# this value will contain a list of zone IDs\nrecord_ids = record_get(hetzner_dns_token='your-token',\n                        zone_name='your-domain.com',\n                        value='1.2.3.4',\n                        first_record_only=True)\n```\n\n\n## record_update\n\nAs with the `zone` modules, you can use `record_delete` and `record_create` to update a record. This library does not currently have a native `record_update` module.\n\n\n## record_delete\n\n*Delete an existing record.* ([Hetzner DNS API Docs - Delete Record](https://dns.hetzner.com/api-docs/#operation/DeleteRecord))\n\n> **Required\\* Parameters:** One of: `record_id` or `zone_id` or `zone_name`\n\n> Optional Parameters:\\\n>   &emsp;Filters: `record_type`, `name`, `value` (but not `ttl`\\*)\\\n>   &emsp;Options: `delete_multiple_records`, `first_record_only`, `search_all_zones`\\**\n\nRecords can be deleted directly using a `record_id`, or can be done indirectly by using any of the *Optional Parameters* as a lookup.\n\nSuccessful delete operations will return the string 'OK', and unsuccessful delete operations will raise a `ValueError` exception.\n\n\\*Due to how `record_list` returns its results, `ttl` is not an available option for filtering records\n\n\\*\\*If the `search_all_zones` parameter is given a truthy value, then you do not need to include any of the *Required Parameters*, as their purpose is to ensure that records are only returned for a single zone.\n\n**Note:** This function will raise an exception if multiple records are returned, \\*unless\\* the `first_record_only` \\*or\\* `allow_multiple_records` parameters are truthy.\n\n\n### **Options**\n\nThese parameters can be given truthy values to enable them:\n\n`delete_multiple_records` - Delete all matching records, even if there is more than one record returned.\n`first_record_only` - Delete only the first record returned. (There is no guarantee of any ordering.)\n`search_all_zones` - Allow records to be returned from all zones. None of \"required\" parameters are needed when using this option.\n\n\n### In Bash\n\nTo delete a record by using its record ID: `RECORD_ID=your-record-id hetzner-dns-tools record delete`\n\nTo delete a zone's A record with a name of 'www' by using a zone (ie. domain) name as a lookup: `ZONE_NAME=your-domain.com TYPE=A NAME=www hetzner-dns-tools record delete`\n\nTo delete all MX records for a zone by using a zone ID as a lookup: `ZONE_ID=your-zone-id TYPE=MX DELETE_MULTIPLE_RECORDS=1 hetzner-dns-tools record delete`\n\nTo delete all CNAME records from all zones: `TYPE=CNAME SEARCH_ALL_ZONES=1 DELETE_MULTIPLE_RECORDS=1 hetzner-dns-tools record delete`\n\nTo delete the first returned A record with a value of `1.2.3.4` by using a zone (ie. domain) name as a lookup: `ZONE_NAME=your-domain.com TYPE=A VALUE=1.2.3.4 FIRST_RECORD_ONLY=1 hetzner-dns-tools record delete`\n\n\n## In Python\n\nTo delete a record by using the record ID:\n\n```\nfrom hetzner_dns_tools.record_delete import record_delete\n\nrecord_delete(hetzner_dns_token='your-token',\n              record_id='your-record-id')\n```\n\nTo delete a zone's A record with a name of 'www' by using a zone (ie. domain) name as a lookup:\n\n```\nfrom hetzner_dns_tools.record_delete import record_delete\n\nrecord_delete(hetzner_dns_token='your-token',\n              zone_name='your-domain.com',\n              record_type='A',\n              name='www')\n```\n\nTo delete all MX records for a zone by using a zone ID as a lookup:\n\n```\nfrom hetzner_dns_tools.record_delete import record_delete\n\nrecord_delete(hetzner_dns_token='your-token',\n              zone_id='your-zone-id',\n              record_type='MX',\n              delete_multiple_records=True)\n```\n\nTo delete all A records from all zones with a name of '@' (root):\n\n```\nfrom hetzner_dns_tools.record_delete import record_delete\n\n# will raise ValueError return 'OK' if delete operation was successful\nrecord_delete(hetzner_dns_token='your-token',\n              record_type='A',\n              name='@',\n              search_all_zones=True,\n              delete_multiple_records=True)\n```\n\nTo delete the first returned A record with a value of `1.2.3.4` by using a zone (ie. domain) name as a lookup:\n\n```\nfrom hetzner_dns_tools.record_delete import record_delete\n\n# will raise ValueError return 'OK' if delete operation was successful\nrecord_delete(hetzner_dns_token='your-token',\n              zone_name='your-domain.com',\n              record_type='A',\n              value='1.2.3.4',\n              first_record_only=True)\n```\n\\\n\\\n(c) 2022 arcanemachine. Freely distributed under the terms of the [MIT Licence](https://mit-license.org/).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/arcanemachine/hetzner-dns-tools",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hetzner-dns-tools",
    "package_url": "https://pypi.org/project/hetzner-dns-tools/",
    "platform": "",
    "project_url": "https://pypi.org/project/hetzner-dns-tools/",
    "project_urls": {
      "Bug Tracker": "https://github.com/arcanemachine/hetzner-dns-tools/issues",
      "Homepage": "https://github.com/arcanemachine/hetzner-dns-tools"
    },
    "release_url": "https://pypi.org/project/hetzner-dns-tools/0.0.12/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "A simple Hetzner DNS API client for Python and Bash",
    "version": "0.0.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12953478,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d1bda73e9eea53440f36025a703f6b1a378bc3ee50fb96b372e1e0310610fa4",
          "md5": "06f1b1be602816e998d1b920214d062c",
          "sha256": "4cdfd2965c29f02d4f50354832c7d638593f06c651d0713c741a2b6f82a39374"
        },
        "downloads": -1,
        "filename": "hetzner_dns_tools-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06f1b1be602816e998d1b920214d062c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22811,
        "upload_time": "2022-02-13T08:25:04",
        "upload_time_iso_8601": "2022-02-13T08:25:04.207518Z",
        "url": "https://files.pythonhosted.org/packages/2d/1b/da73e9eea53440f36025a703f6b1a378bc3ee50fb96b372e1e0310610fa4/hetzner_dns_tools-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3da22a00dffb11e0f9237447e271a4f1e08caf73917f007f55a7c1c860adc9a2",
          "md5": "7f54154df3a7596925e21b008d67a7ce",
          "sha256": "720f645ef995b252569e834f72398628c36ab37c62de7ccb08b3a16c2407598a"
        },
        "downloads": -1,
        "filename": "hetzner-dns-tools-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7f54154df3a7596925e21b008d67a7ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19990,
        "upload_time": "2022-02-13T08:25:05",
        "upload_time_iso_8601": "2022-02-13T08:25:05.680918Z",
        "url": "https://files.pythonhosted.org/packages/3d/a2/2a00dffb11e0f9237447e271a4f1e08caf73917f007f55a7c1c860adc9a2/hetzner-dns-tools-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da01fce9d11731c6b26a7ab112e211e040663636aabc4e832fffc1cd66262217",
          "md5": "530d4ebdfa15acea467d61db924681d2",
          "sha256": "7f7b6c9b6593874321c9d53203727f5904c70ea463ea865ef3bd5811d2ebf8bc"
        },
        "downloads": -1,
        "filename": "hetzner_dns_tools-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "530d4ebdfa15acea467d61db924681d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23766,
        "upload_time": "2022-02-15T02:20:08",
        "upload_time_iso_8601": "2022-02-15T02:20:08.068433Z",
        "url": "https://files.pythonhosted.org/packages/da/01/fce9d11731c6b26a7ab112e211e040663636aabc4e832fffc1cd66262217/hetzner_dns_tools-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5da8a11ff03f48b20eb2de237dfb7047638859930eb9f4c30c799e294cf86c73",
          "md5": "9edc15080bce90cb1da089dd22ea259c",
          "sha256": "51498a881ce66b0d207355dedf049e057448ed932f8eed8567d477a26040d1c3"
        },
        "downloads": -1,
        "filename": "hetzner-dns-tools-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "9edc15080bce90cb1da089dd22ea259c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21739,
        "upload_time": "2022-02-15T02:20:09",
        "upload_time_iso_8601": "2022-02-15T02:20:09.507709Z",
        "url": "https://files.pythonhosted.org/packages/5d/a8/a11ff03f48b20eb2de237dfb7047638859930eb9f4c30c799e294cf86c73/hetzner-dns-tools-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b614e102c568564d2a3d43e88179538c1e51289da53f0313670fc5e984413a1",
          "md5": "a9798f0e297904f24bb5d5558d6c2b36",
          "sha256": "b4fc6760780fe287ac148e15ec62ed7003dec05737d3ebb57a11c658fd5c5def"
        },
        "downloads": -1,
        "filename": "hetzner_dns_tools-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9798f0e297904f24bb5d5558d6c2b36",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23665,
        "upload_time": "2022-02-15T02:24:06",
        "upload_time_iso_8601": "2022-02-15T02:24:06.353706Z",
        "url": "https://files.pythonhosted.org/packages/3b/61/4e102c568564d2a3d43e88179538c1e51289da53f0313670fc5e984413a1/hetzner_dns_tools-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "069e8b3e74240d21efbdef09060d16b65adbaa4e2169011c72aa31bc0f40184f",
          "md5": "2938d3e488268e10d7913f8e22d0cd2b",
          "sha256": "c22feee44dba8b3c7baef359b07d16e127db4091568850477d07c5ae6bc2d7c2"
        },
        "downloads": -1,
        "filename": "hetzner-dns-tools-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "2938d3e488268e10d7913f8e22d0cd2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21690,
        "upload_time": "2022-02-15T02:24:07",
        "upload_time_iso_8601": "2022-02-15T02:24:07.894196Z",
        "url": "https://files.pythonhosted.org/packages/06/9e/8b3e74240d21efbdef09060d16b65adbaa4e2169011c72aa31bc0f40184f/hetzner-dns-tools-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd14813dfa0fa3de694e64d81dd5612c977142042ae48461e3323464484c19ff",
          "md5": "7c26ec376ec8a0ef560394910192823f",
          "sha256": "b4b41d4c12da96388cc93b3985ad29e80ea7c66cfabcb4ddd4a3920cc821089e"
        },
        "downloads": -1,
        "filename": "hetzner_dns_tools-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c26ec376ec8a0ef560394910192823f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23865,
        "upload_time": "2022-02-20T21:53:25",
        "upload_time_iso_8601": "2022-02-20T21:53:25.841234Z",
        "url": "https://files.pythonhosted.org/packages/dd/14/813dfa0fa3de694e64d81dd5612c977142042ae48461e3323464484c19ff/hetzner_dns_tools-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f8ba147d72cf60d1748e0eadfe402d39a0ff1f8a82c7d45c5ee0341f2c7e452",
          "md5": "05db2f12115b7877f0463b355594c4cd",
          "sha256": "b4a4b60d22ea6392d19fecadcd8757345fb9e8d1384059a66aa9a1fabfbdea3f"
        },
        "downloads": -1,
        "filename": "hetzner-dns-tools-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "05db2f12115b7877f0463b355594c4cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21760,
        "upload_time": "2022-02-20T21:53:27",
        "upload_time_iso_8601": "2022-02-20T21:53:27.634911Z",
        "url": "https://files.pythonhosted.org/packages/2f/8b/a147d72cf60d1748e0eadfe402d39a0ff1f8a82c7d45c5ee0341f2c7e452/hetzner-dns-tools-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "370c8f7847e1e5ec6de77b4b89aee3f9150efaecf11383405fc229f27d346676",
          "md5": "38d66c6cb47e7fff29e8c70a2075bf57",
          "sha256": "ff93c4b6975d095f374d934e5adf8684cda0131b3f74f9507a4a755315c39ead"
        },
        "downloads": -1,
        "filename": "hetzner_dns_tools-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "38d66c6cb47e7fff29e8c70a2075bf57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22942,
        "upload_time": "2022-02-13T08:46:34",
        "upload_time_iso_8601": "2022-02-13T08:46:34.112621Z",
        "url": "https://files.pythonhosted.org/packages/37/0c/8f7847e1e5ec6de77b4b89aee3f9150efaecf11383405fc229f27d346676/hetzner_dns_tools-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce149ea6974cdc6278ef7c8d9938c7d1c6db1ab77c54972f84e8e871f17a9a36",
          "md5": "1c94dc4fc0c6155e879c10e00ea6af71",
          "sha256": "1d68f46d2cd9d9c378cfa159bb8629432376801d024f1b22746dfcca44e02b12"
        },
        "downloads": -1,
        "filename": "hetzner-dns-tools-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1c94dc4fc0c6155e879c10e00ea6af71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20262,
        "upload_time": "2022-02-13T08:46:35",
        "upload_time_iso_8601": "2022-02-13T08:46:35.548017Z",
        "url": "https://files.pythonhosted.org/packages/ce/14/9ea6974cdc6278ef7c8d9938c7d1c6db1ab77c54972f84e8e871f17a9a36/hetzner-dns-tools-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf808478c206c57cf9642fae9663893304d3cbd0325b41466a009ae7c02776ce",
          "md5": "90634acc629f6218450718d04b9d14e2",
          "sha256": "8e8701f3c3768cb41da95cb7841e3afe66485d128819833af25824ea57560847"
        },
        "downloads": -1,
        "filename": "hetzner_dns_tools-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90634acc629f6218450718d04b9d14e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22940,
        "upload_time": "2022-02-13T08:49:12",
        "upload_time_iso_8601": "2022-02-13T08:49:12.869952Z",
        "url": "https://files.pythonhosted.org/packages/cf/80/8478c206c57cf9642fae9663893304d3cbd0325b41466a009ae7c02776ce/hetzner_dns_tools-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01750c62018603c610fe1622134ac13934c65f6607fc96bd4d5d0db371ec5559",
          "md5": "0ddaeb86275ca78df25af8eb277e4477",
          "sha256": "62cb5827333243bde5725aa2d1ae68083db1c5abf9f5ed651e01fb1fc1f1a0f0"
        },
        "downloads": -1,
        "filename": "hetzner-dns-tools-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0ddaeb86275ca78df25af8eb277e4477",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20303,
        "upload_time": "2022-02-13T08:49:14",
        "upload_time_iso_8601": "2022-02-13T08:49:14.233065Z",
        "url": "https://files.pythonhosted.org/packages/01/75/0c62018603c610fe1622134ac13934c65f6607fc96bd4d5d0db371ec5559/hetzner-dns-tools-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be310f88fe783b63b87ee392ed4ebc7649ffe78f60f235d5126efa40e8951115",
          "md5": "a39493d1405cef8b908d6f4464927698",
          "sha256": "95724bb631e307523b2d1dabc677b7e989b0a72e358ee2f5a9ef9ef24c8c6f51"
        },
        "downloads": -1,
        "filename": "hetzner_dns_tools-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a39493d1405cef8b908d6f4464927698",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22956,
        "upload_time": "2022-02-13T08:57:29",
        "upload_time_iso_8601": "2022-02-13T08:57:29.341863Z",
        "url": "https://files.pythonhosted.org/packages/be/31/0f88fe783b63b87ee392ed4ebc7649ffe78f60f235d5126efa40e8951115/hetzner_dns_tools-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28ae5dce6c4fab39f64f6a8b377b74ea3a6a275105a23f8ff4541e234e31ec50",
          "md5": "cdad90a9b5ab6f84d0e49ed98e2ee5e2",
          "sha256": "395d2cd18fb6148c752c527beebef1b557f84459a0e6074c62b7c2cea28ae89f"
        },
        "downloads": -1,
        "filename": "hetzner-dns-tools-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cdad90a9b5ab6f84d0e49ed98e2ee5e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20314,
        "upload_time": "2022-02-13T08:57:30",
        "upload_time_iso_8601": "2022-02-13T08:57:30.889819Z",
        "url": "https://files.pythonhosted.org/packages/28/ae/5dce6c4fab39f64f6a8b377b74ea3a6a275105a23f8ff4541e234e31ec50/hetzner-dns-tools-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb54ed93c9243e788b126d6a0f1f0402360442f152e01a17eb41f94b162749b8",
          "md5": "39c524af9c05545e882301de03cc78fa",
          "sha256": "3a73617147eb8dd95812072e53f15b5daa5b68fd85a7c735cbe65f8b63a0085c"
        },
        "downloads": -1,
        "filename": "hetzner_dns_tools-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39c524af9c05545e882301de03cc78fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23128,
        "upload_time": "2022-02-14T08:45:55",
        "upload_time_iso_8601": "2022-02-14T08:45:55.759461Z",
        "url": "https://files.pythonhosted.org/packages/bb/54/ed93c9243e788b126d6a0f1f0402360442f152e01a17eb41f94b162749b8/hetzner_dns_tools-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "685ab411915fb8723f7a1c60eb22986ad7f6a8250ba96a932c097a2bc5be87eb",
          "md5": "3980105c2245d5baa10d6098aa5d9272",
          "sha256": "6d136f16fc6c4ab0f6aec21e0bfe3d72a11d672e272ee9a8d64b0e9000da7f23"
        },
        "downloads": -1,
        "filename": "hetzner-dns-tools-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "3980105c2245d5baa10d6098aa5d9272",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20704,
        "upload_time": "2022-02-14T08:45:57",
        "upload_time_iso_8601": "2022-02-14T08:45:57.201700Z",
        "url": "https://files.pythonhosted.org/packages/68/5a/b411915fb8723f7a1c60eb22986ad7f6a8250ba96a932c097a2bc5be87eb/hetzner-dns-tools-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "feebab20de1a5a57f94e1f946d941732615120befc6f6892522ca1e374ac40c8",
          "md5": "2acae48ab9ba1793d762d85ec88dbf52",
          "sha256": "20f794a50568b9c29319071f56e65a9b48f7c38cdd1595b39636d58ac79c46e7"
        },
        "downloads": -1,
        "filename": "hetzner_dns_tools-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2acae48ab9ba1793d762d85ec88dbf52",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23116,
        "upload_time": "2022-02-14T08:55:35",
        "upload_time_iso_8601": "2022-02-14T08:55:35.380894Z",
        "url": "https://files.pythonhosted.org/packages/fe/eb/ab20de1a5a57f94e1f946d941732615120befc6f6892522ca1e374ac40c8/hetzner_dns_tools-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4652fe8ec7301a0228246700ada6d54caacb9338f7bbd85f4ed9aef1fb0aebe",
          "md5": "b8a3eaf50c770becadf14147e493d741",
          "sha256": "ef05f3ef65bc8c4d0207b48555f8b4fa02186b6222b373a5f877146c6fa98c3b"
        },
        "downloads": -1,
        "filename": "hetzner-dns-tools-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b8a3eaf50c770becadf14147e493d741",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20687,
        "upload_time": "2022-02-14T08:55:37",
        "upload_time_iso_8601": "2022-02-14T08:55:37.222721Z",
        "url": "https://files.pythonhosted.org/packages/f4/65/2fe8ec7301a0228246700ada6d54caacb9338f7bbd85f4ed9aef1fb0aebe/hetzner-dns-tools-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a9a412f737a3efe02a6757bc83f7c05e4b499ad86262e7f105e996f63870317",
          "md5": "ae9af5934110edf74e22d8fa6f43f792",
          "sha256": "9782892518b92f219fa788f20a9297f3c25efcce6ce8033f848fa1e7ca21a2f2"
        },
        "downloads": -1,
        "filename": "hetzner_dns_tools-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ae9af5934110edf74e22d8fa6f43f792",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23167,
        "upload_time": "2022-02-14T09:02:00",
        "upload_time_iso_8601": "2022-02-14T09:02:00.264101Z",
        "url": "https://files.pythonhosted.org/packages/7a/9a/412f737a3efe02a6757bc83f7c05e4b499ad86262e7f105e996f63870317/hetzner_dns_tools-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "835014e162286bc6b0071300a3ab0265097a10c4016dc5e9bb5a8d9662d3a6d7",
          "md5": "c6756ace209c44f1f138bb80e2a71988",
          "sha256": "9988a0e2c67505787459aa39a849b6d544a5f1e6bc2533e24d8879df2c9cc60d"
        },
        "downloads": -1,
        "filename": "hetzner-dns-tools-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "c6756ace209c44f1f138bb80e2a71988",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20834,
        "upload_time": "2022-02-14T09:02:02",
        "upload_time_iso_8601": "2022-02-14T09:02:02.349690Z",
        "url": "https://files.pythonhosted.org/packages/83/50/14e162286bc6b0071300a3ab0265097a10c4016dc5e9bb5a8d9662d3a6d7/hetzner-dns-tools-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b04ff23488c2dcb0c2c621dcd729384dbce4de4d2fa3be38b40825f85e89b01",
          "md5": "9bb494f9a933a25308eb0db9f53681e2",
          "sha256": "6baa76ba2b5470a6717771eaadbb47eb761974fe2c4c3c77b666fdf8d61682c5"
        },
        "downloads": -1,
        "filename": "hetzner_dns_tools-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9bb494f9a933a25308eb0db9f53681e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23170,
        "upload_time": "2022-02-14T09:18:50",
        "upload_time_iso_8601": "2022-02-14T09:18:50.074080Z",
        "url": "https://files.pythonhosted.org/packages/5b/04/ff23488c2dcb0c2c621dcd729384dbce4de4d2fa3be38b40825f85e89b01/hetzner_dns_tools-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6e763b59ae77dbb5d99e0c121ab333504bb48af2dc4fecbb7408cbeac576288",
          "md5": "57585a090bfc2d284d3c99f631280a60",
          "sha256": "8a23b61ef5ff30cda6790e865408ad48b177e2ae583d23e2a4a44b83351d7194"
        },
        "downloads": -1,
        "filename": "hetzner-dns-tools-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "57585a090bfc2d284d3c99f631280a60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20846,
        "upload_time": "2022-02-14T09:18:51",
        "upload_time_iso_8601": "2022-02-14T09:18:51.367836Z",
        "url": "https://files.pythonhosted.org/packages/a6/e7/63b59ae77dbb5d99e0c121ab333504bb48af2dc4fecbb7408cbeac576288/hetzner-dns-tools-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83b14a9dc00c88eada9925f9f0a2fb08687508bf0c9c2d58a8172cb29ef9a494",
          "md5": "4645bf98f5fe186602e5fff46f271f3f",
          "sha256": "b024d1479d8ac70d23eff3ce1095525ba9ff3c098dcfd73f094aded6ddde9aa2"
        },
        "downloads": -1,
        "filename": "hetzner_dns_tools-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4645bf98f5fe186602e5fff46f271f3f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23657,
        "upload_time": "2022-02-15T02:00:52",
        "upload_time_iso_8601": "2022-02-15T02:00:52.002368Z",
        "url": "https://files.pythonhosted.org/packages/83/b1/4a9dc00c88eada9925f9f0a2fb08687508bf0c9c2d58a8172cb29ef9a494/hetzner_dns_tools-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e18a49e40c56c41533de1a6185ebe430316b4b2eef13c63ccf45622b8233434",
          "md5": "19fdd53bcc4f88edf5f0ba479b3a2d72",
          "sha256": "d48a35a2b058fd09174fc8e80be2a9eed548cb753929b8aaef44860d7aa2367a"
        },
        "downloads": -1,
        "filename": "hetzner-dns-tools-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "19fdd53bcc4f88edf5f0ba479b3a2d72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21579,
        "upload_time": "2022-02-15T02:00:53",
        "upload_time_iso_8601": "2022-02-15T02:00:53.601465Z",
        "url": "https://files.pythonhosted.org/packages/0e/18/a49e40c56c41533de1a6185ebe430316b4b2eef13c63ccf45622b8233434/hetzner-dns-tools-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd14813dfa0fa3de694e64d81dd5612c977142042ae48461e3323464484c19ff",
        "md5": "7c26ec376ec8a0ef560394910192823f",
        "sha256": "b4b41d4c12da96388cc93b3985ad29e80ea7c66cfabcb4ddd4a3920cc821089e"
      },
      "downloads": -1,
      "filename": "hetzner_dns_tools-0.0.12-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7c26ec376ec8a0ef560394910192823f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 23865,
      "upload_time": "2022-02-20T21:53:25",
      "upload_time_iso_8601": "2022-02-20T21:53:25.841234Z",
      "url": "https://files.pythonhosted.org/packages/dd/14/813dfa0fa3de694e64d81dd5612c977142042ae48461e3323464484c19ff/hetzner_dns_tools-0.0.12-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f8ba147d72cf60d1748e0eadfe402d39a0ff1f8a82c7d45c5ee0341f2c7e452",
        "md5": "05db2f12115b7877f0463b355594c4cd",
        "sha256": "b4a4b60d22ea6392d19fecadcd8757345fb9e8d1384059a66aa9a1fabfbdea3f"
      },
      "downloads": -1,
      "filename": "hetzner-dns-tools-0.0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "05db2f12115b7877f0463b355594c4cd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21760,
      "upload_time": "2022-02-20T21:53:27",
      "upload_time_iso_8601": "2022-02-20T21:53:27.634911Z",
      "url": "https://files.pythonhosted.org/packages/2f/8b/a147d72cf60d1748e0eadfe402d39a0ff1f8a82c7d45c5ee0341f2c7e452/hetzner-dns-tools-0.0.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}