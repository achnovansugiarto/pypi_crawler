{
  "info": {
    "author": "",
    "author_email": "Sheng Zhong <zhsh@umich.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "## Requirements\n- PyTorch (1.0+)\n- python 3\n\n## Installation \n```shell\npip install pytorch-seed\n```\nYou can also install in editable mode with `python3 -m pip install -e .` so that modifications\nin the repository are automatically synced with the installed library.\n\n## Usage\nSimilar to [pytorch lightning's seed_everything](https://pytorch-lightning.readthedocs.io/en/stable/api/pytorch_lightning.utilities.seed.html),\nwe have\n```python\nimport pytorch_seed\npytorch_seed.seed(123)\n```\nwhich will seed python's base RNG, numpy's RNG, torch's CPU RNG, and all CUDA RNGs.\n\nAlso similar to pytorch lightning's `isolate_rng` context manager, we have\n```python\nimport torch\nimport pytorch_seed\n\npytorch_seed.seed(1)\nwith pytorch_seed.SavedRNG():\n    print(torch.rand(1)) # tensor([0.7576])\nprint(torch.rand(1)) # tensor([0.7576])\n```\n\nThey can also be used to maintain independent RNG streams:\n```python\nimport torch\nimport pytorch_seed\n\nrng_1 = pytorch_seed.SavedRNG(1) # start the RNG stream with seed 1\nrng_2 = pytorch_seed.SavedRNG(2)\n\nwith rng_1:\n    # does not affect, nor is affected by the global RNG and rng_2\n    print(torch.rand(1)) # tensor([0.7576])\n\nwith rng_2:\n    print(torch.rand(1)) # tensor([0.6147])\n\ntorch.rand(1) # modify the global RNG state\n\nwith rng_1:\n    # resumes from the last context\n    print(torch.rand(1)) # tensor([0.2793])\n\nwith rng_2:\n    print(torch.rand(1)) # tensor([0.3810])\n    \n# confirm those streams are the uninterrupted ones\npytorch_seed.seed(1)\ntorch.rand(2) # tensor([0.7576, 0.2793])\n\npytorch_seed.seed(2)\ntorch.rand(2) # tensor([0.6147, 0.3810])\n```\n## Testing\nInstall `pytest` if you don't have it, then run\n```\npy.test\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "rng,pytorch,seeding,reproducibility",
    "license": "Copyright (c) 2023 University of Michigan ARM Lab  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  ",
    "maintainer": "",
    "maintainer_email": "Sheng Zhong <zhsh@umich.edu>",
    "name": "pytorch-seed",
    "package_url": "https://pypi.org/project/pytorch-seed/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytorch-seed/",
    "project_urls": {
      "Bug Reports": "https://github.com/UM-ARM-Lab/pytorch_seed/issues",
      "Homepage": "https://github.com/UM-ARM-Lab/pytorch_seed",
      "Source": "https://github.com/UM-ARM-Lab/pytorch_seed"
    },
    "release_url": "https://pypi.org/project/pytorch-seed/0.2.0/",
    "requires_dist": [
      "torch",
      "numpy",
      "pytest ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "RNG seeding and context management for pytorch",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16875710,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c7b6e29f8600d0df90ffce98850130e5ac993e1e29101fa655e38f6c0f60393",
          "md5": "27794e3ee1bc379c724f7168304cb794",
          "sha256": "50a1ee2f62e55f88c20069849aa12265a007aeaea6893f3d23ad4e40173c5c89"
        },
        "downloads": -1,
        "filename": "pytorch_seed-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27794e3ee1bc379c724f7168304cb794",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4201,
        "upload_time": "2023-02-15T18:34:27",
        "upload_time_iso_8601": "2023-02-15T18:34:27.098274Z",
        "url": "https://files.pythonhosted.org/packages/5c/7b/6e29f8600d0df90ffce98850130e5ac993e1e29101fa655e38f6c0f60393/pytorch_seed-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "deb57d1b68e7eaf16411c3e0e2707e6b0e4ff053f9765deb72a70279fd54d0a5",
          "md5": "6aa7cb6437f0e7ef06f0ed6169b93e07",
          "sha256": "096edd3404f8a00f3df2bab41024945806baf1f64b05678c82373b780458e1a3"
        },
        "downloads": -1,
        "filename": "pytorch_seed-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6aa7cb6437f0e7ef06f0ed6169b93e07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5234,
        "upload_time": "2023-02-15T18:34:28",
        "upload_time_iso_8601": "2023-02-15T18:34:28.759706Z",
        "url": "https://files.pythonhosted.org/packages/de/b5/7d1b68e7eaf16411c3e0e2707e6b0e4ff053f9765deb72a70279fd54d0a5/pytorch_seed-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c7b6e29f8600d0df90ffce98850130e5ac993e1e29101fa655e38f6c0f60393",
        "md5": "27794e3ee1bc379c724f7168304cb794",
        "sha256": "50a1ee2f62e55f88c20069849aa12265a007aeaea6893f3d23ad4e40173c5c89"
      },
      "downloads": -1,
      "filename": "pytorch_seed-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "27794e3ee1bc379c724f7168304cb794",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4201,
      "upload_time": "2023-02-15T18:34:27",
      "upload_time_iso_8601": "2023-02-15T18:34:27.098274Z",
      "url": "https://files.pythonhosted.org/packages/5c/7b/6e29f8600d0df90ffce98850130e5ac993e1e29101fa655e38f6c0f60393/pytorch_seed-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "deb57d1b68e7eaf16411c3e0e2707e6b0e4ff053f9765deb72a70279fd54d0a5",
        "md5": "6aa7cb6437f0e7ef06f0ed6169b93e07",
        "sha256": "096edd3404f8a00f3df2bab41024945806baf1f64b05678c82373b780458e1a3"
      },
      "downloads": -1,
      "filename": "pytorch_seed-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6aa7cb6437f0e7ef06f0ed6169b93e07",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5234,
      "upload_time": "2023-02-15T18:34:28",
      "upload_time_iso_8601": "2023-02-15T18:34:28.759706Z",
      "url": "https://files.pythonhosted.org/packages/de/b5/7d1b68e7eaf16411c3e0e2707e6b0e4ff053f9765deb72a70279fd54d0a5/pytorch_seed-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}