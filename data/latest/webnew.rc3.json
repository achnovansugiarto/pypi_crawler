{
  "info": {
    "author": "BT.Q",
    "author_email": "2264481688@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# WebNew - v1.1.1 - \\_\\_init\\_\\_.py\n\n### A light library to build tiny websites 一个用于搭建轻量级网站的库\n\n### 更新日志：请跳转至 [notes.md](https://github.com/MinesomeBTQ/WebNew-v1.1.1/blob/main/notes.md) 查看\n\n### 对象：\n\n```python\n(\nWebApp,\nFunction,\nDefaultSite\n)\n```\n\n1.`WebApp`: 网站对应的App，是web.applaction对象。\n\n###### 示例：\n\n```python\nfrom webnew import *\nsite('Hello')  # 以GET访问 / 时，返回'Hello'\nreset()  # 更新WebApp的值\nWebApp.run(globals())  # 运行WebApp\n```\n\n###### 输出：\n\n浏览 [localhost:8080/](http://localhost:8080/) ，显示 Hello。\n\n2.`Function`：函数类型，即 `type(lambda: ...)`。\n\n3.`DefaultSite`：网站的默认站点类，一般用于定义 /index ，建议通过调用 site() 方法设置。\n\n### 方法：\n\n#### 1.site()\n\n```python\nsite( \n    _get: Union[object, Function] = lambda self: ...,\n    _post: Union[object, Function] = lambda self: ...,\n    mapping: str = '/'\n) -> None\n```\n\n**用法** ：用于创建默认站点，一般用于定义网站的/index。\n**参数** ：\n`_get`：当以GET访问时，调用的方法，值为一个函数，该函数需带一个 self 参数，若值为object，则在访问时直接返回该值。\n\n`_post`：当以POST访问时，调用的方法，值为一个函数，该函数需带一个 self 参数，若值为object，则在访问时直接返回该值。\n\n`mapping`：应为一个正则表达式，默认为'/'，代表访问该站点时的接口，正则表达式所匹配的内容将会分组传入 _ge t和 _post 的参数。\n\n###### 示例1：\n\n```python\nfrom webnew import *\nsite('Hello, GET.', 'Hello, POST.')  # 分别设置GET和POST的返回值\nrun(globals())  # 运行服务器\n```\n\n###### 输出：\n\n浏览或以GET访问 [localhost:8080/](http://localhost:8080/) ，显示 Hello, GET. 。\n以POSt访问 [localhost:8080/](http://localhost:8080/) ，显示 Hello, POST. 。\n\n###### 示例2：\n\n```python\nfrom webnew import *\nsite(lambda self, name: f'Hello, {name}.', mapping='/(.+)')  # 以GET访问/(.+)时，(.+)所匹配的内容会传入name参数再返回\nrun(globals())  # 运行服务器\n```\n\n###### 输出：\n\n浏览或以GET访问 [localhost:8080/Tom](http://localhost:8080/Tom) ，显示 Hello, Tom. ，可以修改 /Tom 的值再次尝试 。\n\n#### 2.newSite()\n\n```python\nnewSite( \n    class_, \n    mapping: str = '/'\n) -> None\n```\n\n**用法** ：用于创建新的站点，原理为调用传入类里的 GET 和 POST 方法。\n**参数** ：\n`class_`：应为一个类，至少包含 GET 和 POST 方法中的一个用于处理GET和POST请求，至少需带一个 self 参数。\n\n`mapping`：应为一个正则表达式，默认为'/'，代表访问该站点时的接口，正则表达式所匹配的内容将会分组传入 class_ 的 GET 和 POST 的参数。\n\n###### 示例1：\n\n```python\nfrom webnew import *\nclass index:  # 定义index类\n    GET = lambda self: 'Hello, GET.'  # 当以GET访问时返回\n    POST = lambda self: 'Hello, POST.'  # 当以POST访问时返回\nnewSite(index)  # 创建站点\nrun(globals())  # 运行服务器\n```\n\n###### 输出：\n\n浏览或以GET访问 [localhost:8080/](http://localhost:8080/) ，显示 Hello, GET. 。\n以POSt访问 [localhost:8080/](http://localhost:8080/) ，显示 Hello, POST. 。\n\n###### 示例2：\n\n```python\nfrom webnew import *\nsite('<!DOCTYPE HTML><meta charset=\"utf-8\" /><h1>请传入文件路径</h1>')  # 站点 / ：返回提示HTML\nclass open_file:  # 站点类\n    def GET(self, path):  # GET方法，path为匹配的文件地址\n        try: return open(path, encoding='utf-8')  # 返回utf-8打开文件的内容\n        except Exception as e: return f'<!DOCTYPE HTML><meta charset=\"utf-8\" /><h1>{e}</h1>'  # 提示打开文件出错\nnewSite(open_file, '/(.+)')  # 新建站点 /(.+) ，对应open_file类\nrun(globals())  # 运行服务器\n```\n\n###### 输出：\n\n浏览或以GET访问 [localhost:8080/](http://localhost:8080/) ，显示 请传入文件路径 ，在路径后写入任意一个电脑文件路径，将会返回该文件的内容。可以尝试访问[此链接](http://localhost:8080/C:/Windows/System32/zh-CN/Licenses/OEM/Professional/license.rtf)访问Windows zh-CN 证书文件。\n\n#### 3.debug()\n\n```python\ndebug(\n    mode: bool = True\n) -> None\n```\n\n**用法**：用于设置网站是否调试，不调用debug()时默认为调试。\n**参数**：\n`mode`：应为布尔值，当为True时启用调试模式，为False时关闭，若调试模式启用，Python后端出现任何错误时会在此网页上报错。\n\n###### 示例:\n\n```python\nfrom webnew import *\nsite(lambda self: error)  # 出现NameError\nrun(globals())  # 运行服务器\n```\n\n###### 输出:\n\n浏览或以GET访问 [localhost:8080/](http://localhost:8080/) ，显示如下界面（界面大体一致，不同环境会有所差异）：![NameError.png](https://s3.bmp.ovh/imgs/2021/12/11753cc8d2af3e6f.png)\n\n若在第二行后添加代码 `debug(False)`则显示 internal server error\n\n#### 4.reset()\n\n```python\nreset() -> None\n```\n\n**用法**：用于重新加载 `WebApp` 对象的值。（*`WebApp`可能会在未来的版本中替换为一个函数，reset()也可能会随之删除*）\n\n###### 示例：\n\n```python\nfrom webnew import *\nsite()\nprint(WebApp.browser())  # 输出不固定\nreset()\nprint(WebApp.browser())  # 输出不固定\n```\n\n###### 输出：\n\n`<web.browser.AppBrowser object at 0x00000136C15E0DC0>`\n\n`<web.browser.AppBrowser object at 0x00000136C15E0DC0>`\n\n由两次输出的数据不一致可知 reset() 改变了 WebApp 对象的值。\n\n#### 5.newSites()\n\n```python\nnewSites(\n    *sites: tuple[Any, str]\n) -> None\n```\n\n**用法**：用于一次新建多个站点。\n\n**参数**：\n\n`sites`：形式为 ((class_, mapping), ...)，意为循环执行 `newSite(class_, mapping)`。\n\n###### 示例：\n\n```python\nfrom webnew import *\nsite('<a href=\"/page_1\">Go to page 1</a>')  # 定义 / 站点\nclass page_1: GET = lambda self: '<a href=\"/page_2\">Go to page 2</a>'  # 定义page_1类\nclass page_2: GET = lambda self: '<a href=\"/\">Go to index</a>'  # 定义page_2类\nnewSites((page_1, '/page_1'), (page_2, '/page_2'))  # 添加page_1和page_2站点\nrun(globals())  # 运行服务器\n```\n\n###### 输出:\n\n浏览或以GET访问 [localhost:8080/](http://localhost:8080/) ，显示 Go to page 1 超链接，点击后跳转至 [localhost:8080/page_1](http://localhost:8080/page_1) ，\n\n显示 Go to page 2 超链接，点击后跳转至 [localhost:8080/page_2](http://localhost:8080/page_2), 显示 Go to index 超链接，点击后跳转至 [localhost:8080/](http://localhost:8080/)。\n\n#### 6.run()\n\n```python\nrun(\n    globals_ = None\n) -> None\n```\n\n**用法**：用于运行服务器。\n\n**参数**：`globals_`：需要传入 `globals()` 。\n\n**说明**：凡是调用 `run()` 都应传入 `globals()` 。\n\n#### 7.mappings()\n\n```python\nmappings() -> tuple\n```\n\n**用法**: 网站的所有站点储存，返回一个元组, 包含所有站点的定位符及其对应的类。\n\n###### 示例：\n\n```python\nfrom webnew import *\nsite('Hello')  # 以GET访问 / 时，返回'Hello'\nclass greet: GET = lambda self: 'Hi, I\\'m John.'  # 定义greet类的GET方法\nnewSite(greet, '/greet')   # 以GET访问 /greet 时，调用greet的GET方法，返回'Hi, I\\'m John.'\nprint(mappings())  # 打印所有站点信息\n```\n\n###### 输出：\n\n`('/', 'DefaultSite', '/greet', 'greet')`\n\n#### 8.open_web()\n\n```python\nopen_web() -> None\n```\n\n**用法**: 网站的所有站点储存，返回一个元组, 包含所有站点的定位符及其对应的类。\n\n# WebNew - v1.1.1 - request\n\n### # request 用于测试所编写的webnew网站程序\n\n### 方法：\n\n#### GET() / POST()\n\n```python\nGET(\n    ip: str = socket.gethostbyname(socket.gethostname()),\n    localhost: int = 8080, mapping: str = '/'\n) -> Optional[requests.Response]\n```\n\n```python\nPOST(\n    ip: str = socket.gethostbyname(socket.gethostname()),\n    localhost: int = 8080, mapping: str = '/'\n) -> Optional[requests.Response]\n```\n\n**用法**：通过 GET / POST 方法获取一个 requests.Response 对象\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MinesomeBTQ/WebNew",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "webnew",
    "package_url": "https://pypi.org/project/webnew/",
    "platform": "",
    "project_url": "https://pypi.org/project/webnew/",
    "project_urls": {
      "Homepage": "https://github.com/MinesomeBTQ/WebNew"
    },
    "release_url": "https://pypi.org/project/webnew/1.1.1/",
    "requires_dist": [
      "web.py"
    ],
    "requires_python": "",
    "summary": "A light library to build tiny websites 一个用于搭建轻量级网站的库",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12427905,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf2097299e871b9937ddfbfeeeb6da288995b7cd2fa830cac17d44a23f93af99",
          "md5": "bbf7e1991aa8a224954fa1da32a1fcd3",
          "sha256": "fb82e41033c7a1e0cefee44cdbcafab47be53089a9081223d52d8f12b66a9739"
        },
        "downloads": -1,
        "filename": "webnew-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbf7e1991aa8a224954fa1da32a1fcd3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6871,
        "upload_time": "2021-12-22T14:42:46",
        "upload_time_iso_8601": "2021-12-22T14:42:46.628502Z",
        "url": "https://files.pythonhosted.org/packages/cf/20/97299e871b9937ddfbfeeeb6da288995b7cd2fa830cac17d44a23f93af99/webnew-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1eb43a5f3a6a5fa0bbc6867f1c68aa3742c0bf50beac86303a74fd9f122baf44",
          "md5": "0a01520f7435ddb719b3f1731a3371ef",
          "sha256": "a32facb7fb111e74d3fec94a54df8d72f9da25cd9d2679cc374614505ae239d3"
        },
        "downloads": -1,
        "filename": "webnew-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0a01520f7435ddb719b3f1731a3371ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5946,
        "upload_time": "2021-12-22T14:42:48",
        "upload_time_iso_8601": "2021-12-22T14:42:48.462961Z",
        "url": "https://files.pythonhosted.org/packages/1e/b4/3a5f3a6a5fa0bbc6867f1c68aa3742c0bf50beac86303a74fd9f122baf44/webnew-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a04a7abf72cea712a03c096541e90254409a5845fdfb7050811b2d3c7396260",
          "md5": "e52e68147e1526603ac4a23f8bf30ff1",
          "sha256": "51b392c11935c51f3aa67678f891352c27cacf4063e8c4519c52be0e8bc8064d"
        },
        "downloads": -1,
        "filename": "webnew-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e52e68147e1526603ac4a23f8bf30ff1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7513,
        "upload_time": "2021-12-23T13:37:18",
        "upload_time_iso_8601": "2021-12-23T13:37:18.709958Z",
        "url": "https://files.pythonhosted.org/packages/1a/04/a7abf72cea712a03c096541e90254409a5845fdfb7050811b2d3c7396260/webnew-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77df3d3b1e32acb7f212052b7bc6f5d015e2841af6f11e2ed3340c8b12847df4",
          "md5": "29b83ef3098c37f74e1b1c039e3a4964",
          "sha256": "076376b977a3049455d1af840c801d20a67d14aa6d268e7582256933c5a44f89"
        },
        "downloads": -1,
        "filename": "webnew-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "29b83ef3098c37f74e1b1c039e3a4964",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6337,
        "upload_time": "2021-12-23T13:37:20",
        "upload_time_iso_8601": "2021-12-23T13:37:20.207720Z",
        "url": "https://files.pythonhosted.org/packages/77/df/3d3b1e32acb7f212052b7bc6f5d015e2841af6f11e2ed3340c8b12847df4/webnew-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb6a272c45de9b5c7f89fd8b7e55eb0f0fe503dc016cbd0ed9a362999b263f57",
          "md5": "98c369fec9f6605df22ec3e008259fda",
          "sha256": "c07678ff96066fcd546cbacbeece5e39c849a9d4a1714eca321095545fe34ea0"
        },
        "downloads": -1,
        "filename": "webnew-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98c369fec9f6605df22ec3e008259fda",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7549,
        "upload_time": "2021-12-29T02:11:13",
        "upload_time_iso_8601": "2021-12-29T02:11:13.973360Z",
        "url": "https://files.pythonhosted.org/packages/bb/6a/272c45de9b5c7f89fd8b7e55eb0f0fe503dc016cbd0ed9a362999b263f57/webnew-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5caf55344982bb39815ac29c77af543d7034c6c6b83117e6560c35bec5a6603c",
          "md5": "01d28e51e790e76d88275bd591664f31",
          "sha256": "a76d0fe5600c7cb2e1c8ffe119ea11c3c22e065493bfffbe5dbb7520adae8ddf"
        },
        "downloads": -1,
        "filename": "webnew-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "01d28e51e790e76d88275bd591664f31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6365,
        "upload_time": "2021-12-29T02:11:15",
        "upload_time_iso_8601": "2021-12-29T02:11:15.954824Z",
        "url": "https://files.pythonhosted.org/packages/5c/af/55344982bb39815ac29c77af543d7034c6c6b83117e6560c35bec5a6603c/webnew-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb6a272c45de9b5c7f89fd8b7e55eb0f0fe503dc016cbd0ed9a362999b263f57",
        "md5": "98c369fec9f6605df22ec3e008259fda",
        "sha256": "c07678ff96066fcd546cbacbeece5e39c849a9d4a1714eca321095545fe34ea0"
      },
      "downloads": -1,
      "filename": "webnew-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "98c369fec9f6605df22ec3e008259fda",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7549,
      "upload_time": "2021-12-29T02:11:13",
      "upload_time_iso_8601": "2021-12-29T02:11:13.973360Z",
      "url": "https://files.pythonhosted.org/packages/bb/6a/272c45de9b5c7f89fd8b7e55eb0f0fe503dc016cbd0ed9a362999b263f57/webnew-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5caf55344982bb39815ac29c77af543d7034c6c6b83117e6560c35bec5a6603c",
        "md5": "01d28e51e790e76d88275bd591664f31",
        "sha256": "a76d0fe5600c7cb2e1c8ffe119ea11c3c22e065493bfffbe5dbb7520adae8ddf"
      },
      "downloads": -1,
      "filename": "webnew-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "01d28e51e790e76d88275bd591664f31",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6365,
      "upload_time": "2021-12-29T02:11:15",
      "upload_time_iso_8601": "2021-12-29T02:11:15.954824Z",
      "url": "https://files.pythonhosted.org/packages/5c/af/55344982bb39815ac29c77af543d7034c6c6b83117e6560c35bec5a6603c/webnew-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}