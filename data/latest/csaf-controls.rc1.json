{
  "info": {
    "author": "Ethan Lew, Michal Podhradsky, Aditya Zutshi",
    "author_email": "ethanlew16@gmail.com, mpodhradsky@galois.com, aditya.zutshi@galois.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Control Systems Analysis Framework (CSAF)\n\n![CI](https://github.com/GaloisInc/csaf/actions/workflows/main.yml/badge.svg)\n\n\n- [Quick Start](#quick-start)\n- [Examples](#examples)\n- [Jupyter notebooks](#jupyter-notebooks)\n- [Job configuration](#job-configuration)\n- [Development](#development)\n- [Licensing](#licensing)\n- [Acknowledgment](#acknowledgment)\n\nCSAF is a framework to minimize the effort required to evaluate, implement, and **verify** controller design (classical and learning enabled) with respect to the system dynamics. Its key features are:\n\n* Component based controller design\n* Native support for python and C language executables\n* Compatibility with external hardware and software processes\n* Ease of deployment\n\n![csaf_importing_components](docs/img/csaf_importing_controllers.png)\n\nControllers, subsystems and plants are implemented as a collection of components.\nBelow is an example of a topology graph of F16 system with GCAS autopilot.\n\n![f16_components](docs/img/f16_component_topology.png)\n\n## Quick Start\n\n### Installation\n\n![csaf_quickstart](docs/img/csaf_quickstart.png)\n\n#### Native\n\nClone the repo, and install via `pip`,\n```bash\npip install csaf\n```\n\nTo install additional dependencies needed for the examples, go to the repo root and run\n```bash\npip install -r requirements.txt\n```\n\n#### Docker\n\nCSAF runs inside a [Docker container](https://www.docker.com/), and in order to use CSAF, you \nfirst need to [install docker](https://docs.docker.com/engine/install/). CSAF has been tested on Linux \n(Ubuntu 18.04 and 20.04) and OS X, but should run on any nix-like system that runs docker. \n\nAt the repo root, build the docker image\n```bash\ndocker build -t csaf .\n```\n\nNow you can run an example\n```bash\ndocker run -v $PWD:/out csaf python -m csaf_f16 --output-dir /out\n```\n\nAlternatively, a jupyter instance can be launched\n```bash\ndocker run -p 8888:8888 csaf jupyter notebook --allow-root\n```\n\n## Examples\nCSAF currently contains a number of examples, including the F-16 shown below. These examples are packaged into component\nlibraries. These libraries have application entry-points for demonstration. Note that CSAF has utilities to generate these\nentrypoints for user created component libraries. \n\n### F-16 Control System\n\nTo run a F16 system simulation, run\n```\n$ python -m csaf_f16 --time-max 30.0 --system F16Simple  \n```\n\n![f16_components](docs/img/f16_gcas_plot.png)\n\nThe library CLI options are\n```\n$ python -m csaf_f16 --help\n\nF16 Components (CSAF Library)\nusage: __main__.py [-h] [-s SYSTEM] [-o OUTPUT_DIR] [-t TIME_MAX] [-d DO_OPEN]\n\nF16 Components (CSAF Library) CSAF F16 Systems Viewer\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SYSTEM, --system SYSTEM\n                        CSAF System to Simulate (examples are ['F16Simple', 'F16AirspeedSimple', 'F16Shield', 'F16MultiAgentCentral', 'F16AcasShield',\n                        'F16AcasIntruderBalloon', 'F16AcasShieldIntruderBalloon', 'F16AcasShieldAcasIntruderBalloon'])\n  -o OUTPUT_DIR, --output-dir OUTPUT_DIR\n                        Directory to Store Artifacts\n  -t TIME_MAX, --time-max TIME_MAX\n                        Timespan to Simulate\n  -d DO_OPEN, --do-open DO_OPEN\n                        Open Simulation Result\n```\n\n## Jupyter notebooks\n\nCSAF can be used from within a [jupyter notebook](https://jupyter-notebook.readthedocs.io/en/stable/examples/Notebook/What%20is%20the%20Jupyter%20Notebook.html#Introduction). \nTo start CSAF in the notebook mode, go to the `notebooks` folder and run\n```python\njupyter notebook\n```\n\n## Tests\n\nCSAF unit and integration tests use the pytest framework. After installing the [mypy plugin](https://pypi.org/project/pytest-mypy/),\nstatic tests can be added by adding the switch\n```python\npytest --mypy -s tests\n```\n\n## Development\n`CONTRIBUTING.md` contains CSAF development guidelines, please familiarize yourself with the guidelines before opening a \npull request. The best way to contact the dev team is via GitHub issues.\n\n## Licensing\n\nThe code in this repository is licensed under two different licenses. The core of CSAF (`csaf` directory) and the majority of\nexamples is licensed under [BSD license](LICENSE.txt). The [f16 examples](csaf_f16) in the `csaf_f16` module is licensed under [GPL license](csaf_f16/LICENSE.txt).\n\n## Acknowledgment\nThis material is based upon work supported by the DARPA Assured Autonomy program under the United States Air Force under Contract No. FA8750-19-C-0092. Any opinions, findings and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of DARPA or the United States Air Force.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GaloisInc/csaf",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "csaf-controls",
    "package_url": "https://pypi.org/project/csaf-controls/",
    "platform": "",
    "project_url": "https://pypi.org/project/csaf-controls/",
    "project_urls": {
      "Homepage": "https://github.com/GaloisInc/csaf"
    },
    "release_url": "https://pypi.org/project/csaf-controls/0.2/",
    "requires_dist": [
      "numpy (>=1.20.0)",
      "numba (>=0.54.0)",
      "matplotlib (>=3.4.3)",
      "scipy (>=1.7.1)",
      "GPyOpt (>=1.2.6)",
      "tqdm (>=4.62.2)",
      "onnxruntime (>=1.7.0)",
      "pydot (>=1.4.1)",
      "svgpath2mpl (>=1.0.0)"
    ],
    "requires_python": ">=3.9",
    "summary": "Control Systems Analysis Framework",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12386013,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fde504294eea5305d45615cae6fb4837cb69e40e04c9b3ec29c6efff5f69a4f1",
          "md5": "fba95c85dc821663dbc92df374aec8e8",
          "sha256": "f69c2fc028ff3b08683fcabd6c6e317e82bdf4817bf1eec3e0179f327f80ea39"
        },
        "downloads": -1,
        "filename": "csaf_controls-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fba95c85dc821663dbc92df374aec8e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 439415,
        "upload_time": "2021-12-23T01:21:12",
        "upload_time_iso_8601": "2021-12-23T01:21:12.032603Z",
        "url": "https://files.pythonhosted.org/packages/fd/e5/04294eea5305d45615cae6fb4837cb69e40e04c9b3ec29c6efff5f69a4f1/csaf_controls-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24fa438b235d77bab3719b9224dbd527cdd9ea0fb5e58da7038dbc634067c16b",
          "md5": "8be65844912bd525d57ee1a4300050f2",
          "sha256": "17c365831ed39676fa6febddfdd335ebe3ab673baec2239a3d53d1e5466e398c"
        },
        "downloads": -1,
        "filename": "csaf-controls-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8be65844912bd525d57ee1a4300050f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 2783324,
        "upload_time": "2021-12-23T01:21:14",
        "upload_time_iso_8601": "2021-12-23T01:21:14.290383Z",
        "url": "https://files.pythonhosted.org/packages/24/fa/438b235d77bab3719b9224dbd527cdd9ea0fb5e58da7038dbc634067c16b/csaf-controls-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fde504294eea5305d45615cae6fb4837cb69e40e04c9b3ec29c6efff5f69a4f1",
        "md5": "fba95c85dc821663dbc92df374aec8e8",
        "sha256": "f69c2fc028ff3b08683fcabd6c6e317e82bdf4817bf1eec3e0179f327f80ea39"
      },
      "downloads": -1,
      "filename": "csaf_controls-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fba95c85dc821663dbc92df374aec8e8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 439415,
      "upload_time": "2021-12-23T01:21:12",
      "upload_time_iso_8601": "2021-12-23T01:21:12.032603Z",
      "url": "https://files.pythonhosted.org/packages/fd/e5/04294eea5305d45615cae6fb4837cb69e40e04c9b3ec29c6efff5f69a4f1/csaf_controls-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "24fa438b235d77bab3719b9224dbd527cdd9ea0fb5e58da7038dbc634067c16b",
        "md5": "8be65844912bd525d57ee1a4300050f2",
        "sha256": "17c365831ed39676fa6febddfdd335ebe3ab673baec2239a3d53d1e5466e398c"
      },
      "downloads": -1,
      "filename": "csaf-controls-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8be65844912bd525d57ee1a4300050f2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 2783324,
      "upload_time": "2021-12-23T01:21:14",
      "upload_time_iso_8601": "2021-12-23T01:21:14.290383Z",
      "url": "https://files.pythonhosted.org/packages/24/fa/438b235d77bab3719b9224dbd527cdd9ea0fb5e58da7038dbc634067c16b/csaf-controls-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}