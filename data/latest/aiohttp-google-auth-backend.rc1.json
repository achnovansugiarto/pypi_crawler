{
  "info": {
    "author": "Ketan B Shah, JyotiStar Inc",
    "author_email": "shahketanb@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# aiohttp_google_auth_backend\nThe Google Authentication Library for python, \n[google-auth](https://google-auth.readthedocs.io/en/latest/index.html),\nprovides **verify_token** (and verify_oauth2_token) methods, which can be used by\nbackend servers to verify the token provided by the \nweb/mobile application and return decoded profile fields. However, python google-auth does\nnot yet provide the support for asyncio.\n\nThe **aiohttp_google_auth_backend** library provides async\nwrapper for these methods.\n\n# How to use it\n\naiohttp_google_auth_backend package provides JSAioGoogleTokenVerifier class to asynchronously handle the token verification.\n\nThe library uses the asynchronous task to fetch and cache the \nGOOGLE OAUTH2 Certificates in the background using aiohttp Client API.\n* Create an instance of JSAioGoogleTokenVerifier, along with the aiohttp web application instance, during the startup.\n* Register **on_startup** method of the instance with on_startup of web application to fetch the certificates for first rime and then start the background thread to re-fetch the certificates.\n* Register **on_cleanup** method of the instance with on_cleanup of web application to cancel the background thread when the process is being stopped.\n* Constructor for the JSAioGoogleTokenVerifier class provides following parameters to customize re-fetching of certificates.\n    * By default, library uses the \"Expires\" header to identify when the certificates need to be re-fetched.\n        * The *ok_renew_interval* parameter can be used to specify interval to re-fetch certificates (e.g. every hour).\n    * If the library fails to fetch the certificates, it will repeatedly try to re-fetch certificates until successful.\n        * Library starts with initial delay of *min_error_renew_interval* (default: 1 second) and\n         exponentially backoff the interval for each sub-sequent fetch till the delay reaches **max_error_renew_interval**.\n    * Token fields to be returned are identified by parameter **profile_fields** (default: email)\n\nFollowing code sample assume that token to be verified is passed as parameter idtoken. \n\n```python\nfrom aiohttp import web\nfrom aiohttp_google_auth_backend import JSAioGoogleTokenVerifier\n\nSAMPLE_GOOGLE_CLIENT_ID = \"YOUR GOOGLE APPID\"\n\n\nasync def handleLogin(request):\n    data = await request.json()\n    status, res = await request.app['verifyGoogleToken'].verify_token(data[\"idtoken\"], SAMPLE_GOOGLE_CLIENT_ID)\n    if status == 200:\n        return web.json_response(res, status=status)\n    else:\n        return web.json_response(dict( error=str(res['error'])), status=status)\n\n\nasync def app_startup(app):\n    app['JSAioGoogleTokenVerifier'] = JSAioGoogleTokenVerifier()\n    await app['JSAioGoogleTokenVerifier'].on_startup()\n\n\nasync def app_cleanup(app):\n    await app['JSAioGoogleTokenVerifier'].on_cleanup()\n\n\ndef app_run():\n    app = web.Application()\n    app.on_startup.append(app_startup)\n    app.on_cleanup.append(app_cleanup)\n    app.add_routes([web.post('/login', handleLogin)])\n    web.run_app(app)\n\n\nif __name__ == '__main__':\n    app_run()\n```\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ketanbshah/aiohttp_google_auth_backend",
    "keywords": "",
    "license": "GPL-3.0-only",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiohttp-google-auth-backend",
    "package_url": "https://pypi.org/project/aiohttp-google-auth-backend/",
    "platform": "",
    "project_url": "https://pypi.org/project/aiohttp-google-auth-backend/",
    "project_urls": {
      "Homepage": "https://github.com/ketanbshah/aiohttp_google_auth_backend"
    },
    "release_url": "https://pypi.org/project/aiohttp-google-auth-backend/0.5.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Asyncio wrapper for verify_token method in google-auth library for backend usage",
    "version": "0.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6862739,
  "releases": {
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ddfbf72ce9a8bcbf318a7b2b1dc19cfdebed48d4501a3bb43815197d4268fc5",
          "md5": "6b9fedd3460a839544e35bf35d8e3ddc",
          "sha256": "1996e04ed68df57e6170b942b291bd1e9e01a68c6d8cec72898c796e2686abba"
        },
        "downloads": -1,
        "filename": "aiohttp_google_auth_backend-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b9fedd3460a839544e35bf35d8e3ddc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16453,
        "upload_time": "2020-03-23T01:59:30",
        "upload_time_iso_8601": "2020-03-23T01:59:30.843591Z",
        "url": "https://files.pythonhosted.org/packages/0d/df/bf72ce9a8bcbf318a7b2b1dc19cfdebed48d4501a3bb43815197d4268fc5/aiohttp_google_auth_backend-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52d63631b026c5f7b2293a763d4f5b94461eed53e7008b8e883a2dc0bbc58d64",
          "md5": "d890f3ec566bdcc880edf77966d929b5",
          "sha256": "358ef6113e31a013693363bf51773ec8b73fbddb5b2b4b76d512b95638fbd4f3"
        },
        "downloads": -1,
        "filename": "aiohttp_google_auth_backend-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d890f3ec566bdcc880edf77966d929b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 4658,
        "upload_time": "2020-03-23T01:59:33",
        "upload_time_iso_8601": "2020-03-23T01:59:33.246459Z",
        "url": "https://files.pythonhosted.org/packages/52/d6/3631b026c5f7b2293a763d4f5b94461eed53e7008b8e883a2dc0bbc58d64/aiohttp_google_auth_backend-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ddfbf72ce9a8bcbf318a7b2b1dc19cfdebed48d4501a3bb43815197d4268fc5",
        "md5": "6b9fedd3460a839544e35bf35d8e3ddc",
        "sha256": "1996e04ed68df57e6170b942b291bd1e9e01a68c6d8cec72898c796e2686abba"
      },
      "downloads": -1,
      "filename": "aiohttp_google_auth_backend-0.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6b9fedd3460a839544e35bf35d8e3ddc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 16453,
      "upload_time": "2020-03-23T01:59:30",
      "upload_time_iso_8601": "2020-03-23T01:59:30.843591Z",
      "url": "https://files.pythonhosted.org/packages/0d/df/bf72ce9a8bcbf318a7b2b1dc19cfdebed48d4501a3bb43815197d4268fc5/aiohttp_google_auth_backend-0.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "52d63631b026c5f7b2293a763d4f5b94461eed53e7008b8e883a2dc0bbc58d64",
        "md5": "d890f3ec566bdcc880edf77966d929b5",
        "sha256": "358ef6113e31a013693363bf51773ec8b73fbddb5b2b4b76d512b95638fbd4f3"
      },
      "downloads": -1,
      "filename": "aiohttp_google_auth_backend-0.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d890f3ec566bdcc880edf77966d929b5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 4658,
      "upload_time": "2020-03-23T01:59:33",
      "upload_time_iso_8601": "2020-03-23T01:59:33.246459Z",
      "url": "https://files.pythonhosted.org/packages/52/d6/3631b026c5f7b2293a763d4f5b94461eed53e7008b8e883a2dc0bbc58d64/aiohttp_google_auth_backend-0.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}