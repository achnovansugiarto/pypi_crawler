{
  "info": {
    "author": "Zapata Computing Inc.",
    "author_email": "info@zapatacomputing.com,",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# orquestra-braket\n\n## What is it?\n\n`orquestra-braket` is a [Zapata](https://www.zapatacomputing.com) library holding modules for integrating [Amazon Braket supported devices](https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.html) with [Orquestra](https://www.zapatacomputing.com/orquestra/). This version supports Braket's `LocalSimlator()` and on-demand simulators.\n\n## Installation\n\nEven though it's intended to be used with Orquestra, `orquestra-braket` can be also used as a Python module.\nTo install it, make to install `orquestra-quantum` first. Then you just need to run `pip install .` from the main directory.\n\n## Overview\n\n`orquestra-braket` is a Python module that exposes Braket's runner and simulators as an [`orquestra`](https://github.com/zapatacomputing/orquestra-quantum/blob/main/src/orquestra/quantum/api/backend.py) `CircuitRunner` and `WavefunctionSimulator`. They can be imported with:\n\n```\nfrom orquestra.integrations.braket.runner import BraketRunner\nfrom orquestra.integrations.braket.simulator import braket_local_simulator\n```\n\nIn addition, it interfaces with the noise models and provides converters that allow switching between `braket` circuits and those of `orquestra`.\n\nThe module can be used directly in Python or in an [Orquestra](https://www.orquestra.io) workflow.\nFor more details, see the [Orquestra Core docs](https://zapatacomputing.github.io/orquestra-core/index.html).\n\nFor more information regarding Orquestra and resources, please refer to the [Orquestra documentation](https://www.orquestra.io/docs).\n\n## On Demand Simulator\n\nIn order to use Braket's `on-demand simulator`, a `boto.Session` must be created using AWS credentials. See [Boto Session](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/core/session.html) for information on creating creating a session. It highly recommended that credentials are configured in the local [AWS CLI profile](https://docs.aws.amazon.com/braket/latest/developerguide/braket-using-boto3-profiles-step-2.html). Following is an example of working with `BraketOnDemandSimulator` using credentials stored in AWS CLI profile:\n\n```\nfrom orquestra.integrations.braket.runner import aws_runner\nfrom boto3 import Session\n\n# Insert CLI profile name here\nboto_session = Session(profile_name=`profile`, region_name='us-east-1')\nsimulator_name = \"SV1\"\nnoise_model = None\nsimulator = aws_runner(name = simulator_name, noise_model = noise_model, boto_session=boto_session)\n\n```\n\nBelow is an example of finding the names of on-demand simulators:\n\n```\nfrom boto3 import Session\nfrom braket.aws import AwsSession, AwsDevice\n\nboto_session = Session(profile_name=`profile`, region_name='us-east-1')\naws_session = AwsSession(boto_session)\n\nSimulators = AwsDevice.get_devices(types=['SIMULATOR'], aws_session)\n```\n\n## Braket QPUs\n\nThis library will allow you to access the QPUs provided by AWS Braket. The process is very similar to the `BraketOnDemandSimulator`. Here is how we can get started:\n\n```\nfrom orquestra.integrations.braket.runner import aws_runner\n\nQPU_name = \"IonQ Device\"\ns3 = \"https://my-bucket.s3-us-west-2.amazonaws.com\"\nbackend = aws_runner(name = QPU_name, s3_destination_folder = s3, boto_session = boto_session )\n```\n\nIf you want to find the list of QPU names provided by Braket, use the following method:\n\n```\nfrom orquestra.integrations.braket.runner import get_QPU_names\n\nQPU_names = get_QPU_names(boto_session)\n```\n\nAfter setting up the QPU, you can use the following approach to send a task to a QPU.\n\n```\nQPU_task = backend.run_and_measure(circ, n_samples)\n```\n\nSince the quantum devices are not readily accessible, the results are not returned immediately. We can monitor the status of our task by `QPU_task.state()`. You can cancel the task by `QPU.cancel()`.\n\nThe outcome of the task will be stored in a [S3 Bucket](https://aws.amazon.com/s3/). You are required to have access to the bucket to retrive the results. You can find out more accessing S3 bucket [here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-bucket-intro.html)\n\n## Development and contribution\n\nYou can find the development guidelines in the [`orquestra-core` repository](https://github.com/zapatacomputing/orquestra-core/blob/main/CONTRIBUTING.md).\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zapatacomputing/orquestra-braket",
    "keywords": "",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "orquestra-braket",
    "package_url": "https://pypi.org/project/orquestra-braket/",
    "platform": null,
    "project_url": "https://pypi.org/project/orquestra-braket/",
    "project_urls": {
      "Homepage": "https://github.com/zapatacomputing/orquestra-braket"
    },
    "release_url": "https://pypi.org/project/orquestra-braket/0.3.0/",
    "requires_dist": null,
    "requires_python": "!=3.9.7,<3.11,>=3.8",
    "summary": "\"Orquestra Braket package\"",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16013060,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6d533c78a6a70b89dcedecf65b50da03068ee88b95070195db67b7b447fbf5c",
          "md5": "6da86a36596ee58910abd8dddca23f84",
          "sha256": "0a866415a52c6bba3056488e7733205f3f687c8743bffee1f9f588913c7398c1"
        },
        "downloads": -1,
        "filename": "orquestra-braket-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6da86a36596ee58910abd8dddca23f84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "!=3.9.7,<3.11,>=3.8",
        "size": 29144,
        "upload_time": "2022-10-24T15:06:57",
        "upload_time_iso_8601": "2022-10-24T15:06:57.221916Z",
        "url": "https://files.pythonhosted.org/packages/b6/d5/33c78a6a70b89dcedecf65b50da03068ee88b95070195db67b7b447fbf5c/orquestra-braket-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44b6fed477a33ff4b52849cfb1cc188c8e392c04569a75a7225ee83039dca9b6",
          "md5": "46a14df7014218f782a5f418706cd3b8",
          "sha256": "75840282d5b55ac2be7ef965bbef7fef9c06d0e63d0a6853f52bf23a3d1da780"
        },
        "downloads": -1,
        "filename": "orquestra-braket-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "46a14df7014218f782a5f418706cd3b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "!=3.9.7,<3.11,>=3.8",
        "size": 26667,
        "upload_time": "2022-12-06T22:04:01",
        "upload_time_iso_8601": "2022-12-06T22:04:01.476780Z",
        "url": "https://files.pythonhosted.org/packages/44/b6/fed477a33ff4b52849cfb1cc188c8e392c04569a75a7225ee83039dca9b6/orquestra-braket-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44b6fed477a33ff4b52849cfb1cc188c8e392c04569a75a7225ee83039dca9b6",
        "md5": "46a14df7014218f782a5f418706cd3b8",
        "sha256": "75840282d5b55ac2be7ef965bbef7fef9c06d0e63d0a6853f52bf23a3d1da780"
      },
      "downloads": -1,
      "filename": "orquestra-braket-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "46a14df7014218f782a5f418706cd3b8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "!=3.9.7,<3.11,>=3.8",
      "size": 26667,
      "upload_time": "2022-12-06T22:04:01",
      "upload_time_iso_8601": "2022-12-06T22:04:01.476780Z",
      "url": "https://files.pythonhosted.org/packages/44/b6/fed477a33ff4b52849cfb1cc188c8e392c04569a75a7225ee83039dca9b6/orquestra-braket-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}