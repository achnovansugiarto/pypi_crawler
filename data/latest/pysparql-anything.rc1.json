{
  "info": {
    "author": "Marco Ratta, Enrico Daga",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# PySPARQL Anything\n###### A Python CLI and API for SPARQL Anything\n\n## User Guide\n\n###### INSTALLATION \n\nTo install PySPARQL Anything on your machine type the following in your command prompt:\n```\npip install pysparql-anything \n```\n\nTo remove PySPARQL Anything from your machine, do the following:\n\nIn your command prompt execute\n```\n$ python\n>>> import pysparql_anything as cli\n>>> cli.config.remove_jar()\n>>> exit()\n$ pip uninstall pysparql-anything\n```\n\n###### USAGE\n\n1) Open the command prompt with the current working directory set to the main folder of a SPARQL Anything project.\n\n2) Launch Python: \n```\n$ python \n```\n   \n3) Import PySPARQL Anything: \n```\n>>> import pysparql_anything as cli\n```\n\nIf the SPARQL Anything jar isn't installed in the API's folder it will now be downloaded there automatically.\n\n4) Initialise a ```pysparql_anything.sparql_anything.SparqlAnything``` object:\n``` \n>>> engine = cli.SparqlAnything()\n```\n\n5) Run the query:\n```\n>>> engine.run(**kwargs)\n```\nThe keyword arguments to be set are the same as those of the regular Sparql Anything CLI, minus the hyphen. \n\nFor example:\n```\n>>> engine.run(q='queries/getFacade.sparql', f='TTL', o='C:/Users/Marco/Desktop/facade.ttl')\n```\n\nAll of the keyword arguments except for ```v``` want to be assigned a string literal. \n\n```v``` requires to be assigned a Python dictionary, as in the following example.\n\nTo execute the following query from the SPARQL Anything MusicXML showcase,\n```\njava -jar sparql-anything-0.8.0-SNAPSHOT.jar -q queries/populateOntology.sparql -v filePath=\"./musicXMLFiles/AltDeu10/AltDeu10-017.musicxml\" -v fileName=\"AltDeu10-017\" -f TTL\n```\n\nwith PySPARQL Anything, do\n```\n>>> engine.run(\n    \tq='queries/populateOntology.sparql',\n    \tf='ttl',\n    \tv={\n            'filePath' : './musicXMLFiles/AltDeu10/AltDeu10-017.musicxml',\n            'fileName' : 'AltDeu10-017'\n    \t}\n    )\n```\n\n## API\n\nAll of PySPARQL Anything functionalities can be accessed via the following four methods of the class \n```pysparql_anything.sparql_anything.SparqlAnything```.\n\nAll keyword arguments to be set are the same as those of the regular Sparql Anything CLI, minus the hyphen.\n\nSee https://github.com/SPARQL-Anything/sparql.anything#command-line-interface-cli  and above for some particular\nexamples.\n\n``` run(**kwargs) -> None ```\n\nReflects the functionalities of the original SPARQL Anything CLI. This can be used to run a query the output of\nwhich is to be printed on the command line or saved to a file. (See example above)\n\n``` ask(**kwargs) -> bool ```\n\nExecutes an ASK query and returns a Python boolean True or False.\n\n``` construct(**kwargs) -> rdflib.Graph ```\n\nExecutes a CONSTRUCT query and returns a rdflib graph object.\n\n``` select(**kwargs) -> dict ```\n\nExecutes a SELECT query and returns the result as a Python dictionary. ",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "RDF,SPARQL,knowledge graphs,linked data,rdflib,sematic web",
    "license": "",
    "maintainer": "Marco Ratta, Enrico Daga",
    "maintainer_email": "",
    "name": "pysparql-anything",
    "package_url": "https://pypi.org/project/pysparql-anything/",
    "platform": null,
    "project_url": "https://pypi.org/project/pysparql-anything/",
    "project_urls": {
      "Documentation": "https://github.com/SPARQL-Anything/PySPARQL-Anything/blob/main/README.md",
      "Issues": "https://github.com/SPARQL-Anything/PySPARQL-Anything/issues",
      "Source": "https://github.com/SPARQL-Anything/PySPARQL-Anything"
    },
    "release_url": "https://pypi.org/project/pysparql-anything/0.8.1.1/",
    "requires_dist": [
      "pygithub>=1.57",
      "pyjnius",
      "rdflib",
      "requests",
      "tqdm"
    ],
    "requires_python": ">=3.7",
    "summary": "A Python based CLI for SPARQL Anything",
    "version": "0.8.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16638492,
  "releases": {
    "0.8.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "878ed6d22c0cf7b34100ccf40c5acb31cb0099cdb67de9dad83d9b0a6fa91d29",
          "md5": "15bd21f3fcf74f5fae79b3239084ef29",
          "sha256": "0e77dc44902837c197b2468f0dcd61c552390810c8da112b75d19d0020bf1789"
        },
        "downloads": -1,
        "filename": "pysparql_anything-0.8.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15bd21f3fcf74f5fae79b3239084ef29",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11966,
        "upload_time": "2023-01-31T18:55:29",
        "upload_time_iso_8601": "2023-01-31T18:55:29.623396Z",
        "url": "https://files.pythonhosted.org/packages/87/8e/d6d22c0cf7b34100ccf40c5acb31cb0099cdb67de9dad83d9b0a6fa91d29/pysparql_anything-0.8.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f0f97fef3ea762c8597abc0a7998848f33764a3704b910daa7b870562b7fa18",
          "md5": "06837ecfc99b3fd023fd7ee2e480e5df",
          "sha256": "ebb3f2844c911a8d5a575af08c274471c362c9bcea7d8562a95e914d64ee5c70"
        },
        "downloads": -1,
        "filename": "pysparql_anything-0.8.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "06837ecfc99b3fd023fd7ee2e480e5df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11993,
        "upload_time": "2023-01-31T18:55:31",
        "upload_time_iso_8601": "2023-01-31T18:55:31.433933Z",
        "url": "https://files.pythonhosted.org/packages/0f/0f/97fef3ea762c8597abc0a7998848f33764a3704b910daa7b870562b7fa18/pysparql_anything-0.8.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "878ed6d22c0cf7b34100ccf40c5acb31cb0099cdb67de9dad83d9b0a6fa91d29",
        "md5": "15bd21f3fcf74f5fae79b3239084ef29",
        "sha256": "0e77dc44902837c197b2468f0dcd61c552390810c8da112b75d19d0020bf1789"
      },
      "downloads": -1,
      "filename": "pysparql_anything-0.8.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "15bd21f3fcf74f5fae79b3239084ef29",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11966,
      "upload_time": "2023-01-31T18:55:29",
      "upload_time_iso_8601": "2023-01-31T18:55:29.623396Z",
      "url": "https://files.pythonhosted.org/packages/87/8e/d6d22c0cf7b34100ccf40c5acb31cb0099cdb67de9dad83d9b0a6fa91d29/pysparql_anything-0.8.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f0f97fef3ea762c8597abc0a7998848f33764a3704b910daa7b870562b7fa18",
        "md5": "06837ecfc99b3fd023fd7ee2e480e5df",
        "sha256": "ebb3f2844c911a8d5a575af08c274471c362c9bcea7d8562a95e914d64ee5c70"
      },
      "downloads": -1,
      "filename": "pysparql_anything-0.8.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "06837ecfc99b3fd023fd7ee2e480e5df",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 11993,
      "upload_time": "2023-01-31T18:55:31",
      "upload_time_iso_8601": "2023-01-31T18:55:31.433933Z",
      "url": "https://files.pythonhosted.org/packages/0f/0f/97fef3ea762c8597abc0a7998848f33764a3704b910daa7b870562b7fa18/pysparql_anything-0.8.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}