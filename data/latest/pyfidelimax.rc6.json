{
  "info": {
    "author": "Yogesh Kushwaha",
    "author_email": "info@tkopen.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "**Description**\n\n    https://fidelimax.com.br/ integration with python. Python Fidelimax Integration\n\n\n**Installation**\n\n    pip install pyfidelimax\n\n**Usage**\n\n    import pyfidelimax\n\n**GetToken**\n\nRecupera o token para o acesso para as outras funcionalidades da API, esse token tem\nvalidade de 24 horas, é necessário incluir na header da requisição um atributo com o nome\n“AuthToken” e o valor de retorno desse enpoint.\nRecebe como parâmetros obrigatórios o Login e Senha cadastrados na plataforma do\nprograma de fidelidade em: Configurações Sistema > Configuração API\n\n    pyfidelimax.GetToken('login', 'password')\n\n**CadastrarConsumidor**\n\nCadastrar novos consumidores ao programa de fidelidade.\n\n    data = {}\n    pyfidelimax.CadastrarConsumidor('login', 'password', data=data)\n**Note**:\n    data dict can have following keys:\n\n - token_externo : Token do Consumidor enviado por autenticação de uma\nAPI externa\n - nome : Nome do Consumidor \n - cpf: CPF do Consumidor, o CPF é usado como chave para\nrealizar a atualização\n - sexo: Sexo do Consumidor, Masculino e Feminino\n - nascimento: Data de nascimento do Consumidor, formato dd/mm/yyyy\n - email: E-mail do consumidor string\n - telefone: Telefone do Consumidor, formato (DDD)99999-9999\n - cartao: Cartão que pode ser vinculado ao consumidor\n - saldo: Saldo em pontos inicial que o consumidor pode iniciar\n\n\n**AtualizarConsumidor**\n\nAtualiza as informações de um consumidor cadastrado no programa de fidelidade\n\n    data = {}\n    pyfidelimax.AtualizarConsumidor('login', 'password', data=data)\n**Note**:\n    data dict can have following keys:\n\n - token_externo : Token do Consumidor enviado por autenticação de uma\nAPI externa\n - nome : Nome do Consumidor \n - cpf: CPF do Consumidor, o CPF é usado como chave para\nrealizar a atualização\n - sexo: Sexo do Consumidor, Masculino e Feminino\n - nascimento: Data de nascimento do Consumidor, formato dd/mm/yyyy\n - email: E-mail do consumidor string\n - telefone: Telefone do Consumidor, formato (DDD)99999-9999\n - cartao: Cartão que pode ser vinculado ao consumidor\n \n **ConsultaConsumidor**\n \nConsulta as informações do consumidor referente a pontuação do programa de fidelidade,\ncomo seu saldo em pontos atual, os pontos que irão expirar até o fim do mês e uma lista de\nprêmios que ele pode resgatar com sua pontuação atual.\nRecebe como parâmetros obrigatórios o CPF ou o Token do consumidor.\n\n    data = {}\n    pyfidelimax.ConsultaConsumidor('login', 'password', data=data)\n**Note**:\n    data dict can have following keys:\n\n - token_externo : Token do Consumidor enviado por autenticação de uma\nAPI externa\n - cpf: CPF do Consumidor, o CPF é usado como chave para\nrealizar a atualização\n\n\n **RetornaDadosCliente**\n \nConsulta dados pessoais do consumidor.\nRecebe como parâmetros obrigatórios o CPF ou o Token do consumidor.\n\n    data = {}\n    pyfidelimax.RetornaDadosCliente('login', 'password', data=data)\n**Note**:\n    data dict can have following keys:\n\n - token_externo : Token do Consumidor enviado por autenticação de uma\nAPI externa\n - cpf: CPF do Consumidor, o CPF é usado como chave para\nrealizar a atualização\n\n\n\n **ResgataPremio**\n \nRealiza o resgate de um prêmio para um consumidor, debitando a pontuação correspondente\ndo seu saldo atual.\nRecebe como parâmetros obrigatórios o CPF ou o Token do consumidor. E o Identificador do\nprêmio que é cadastrado na plataforma, quando um prêmio é cadastrado.\n\n    data = {}\n    pyfidelimax.ResgataPremio('login', 'password', data=data)\n**Note**:\n    data dict can have following keys:\n\n - token_externo : Token do Consumidor enviado por autenticação de uma\nAPI externa\n - cpf: CPF do Consumidor, o CPF é usado como chave para\nrealizar a atualização\n\n\n\n **PontuaConsumidor**\n \n Realiza o crédito de pontos para um consumidor\nRecebe como parâmetros obrigatórios o CPF ou o Token do consumidor. E o preço em reais\nque será convertido para a regra de pontuação do program\n \n    data = {}\n    pyfidelimax.PontuaConsumidor('login', 'password', data=data)\n    \n**Note**:\n    data dict can have following keys:\n\n - token_externo : Token do Consumidor enviado por autenticação de uma\nAPI externa\n - cpf: CPF do Consumidor, o CPF é usado como chave para\nrealizar a atualização\n\n **ListaProdutos**\n \n Realiza o crédito de pontos para um consumidor\nRecebe como parâmetros obrigatórios o CPF ou o Token do consumidor. E o preço em reais\nque será convertido para a regra de pontuação do program\n \n \n    pyfidelimax.ListaProdutos('login', 'password')\n\n\n** API Documentation ** \n\nfor more information on API. eg: variable allowed to pass in data dictionary\nand datatype please visit the link https://api.fidelimax.com.br/Documentacao/Fidelimax-API.pdf\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/yk2kus/pyfidelimax",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyfidelimax",
    "package_url": "https://pypi.org/project/pyfidelimax/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyfidelimax/",
    "project_urls": {
      "Homepage": "https://gitlab.com/yk2kus/pyfidelimax"
    },
    "release_url": "https://pypi.org/project/pyfidelimax/1.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "fidelimax.com.br integration",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4931142,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "466795eb47509db821ec5288e1ebf689d417003bdbdd1da588b26eeb06e04833",
          "md5": "6d59b17e7d9426b246c367e45bc9027a",
          "sha256": "2a93186a1c3b40974f82bf75d432ecfd4e2ea9edf9e8722de6cdb8af239bb25b"
        },
        "downloads": -1,
        "filename": "pyfidelimax-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6d59b17e7d9426b246c367e45bc9027a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2751,
        "upload_time": "2019-03-01T02:07:53",
        "upload_time_iso_8601": "2019-03-01T02:07:53.821097Z",
        "url": "https://files.pythonhosted.org/packages/46/67/95eb47509db821ec5288e1ebf689d417003bdbdd1da588b26eeb06e04833/pyfidelimax-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43b2618de62c037c2374899d3ea361b72c68f5d0bca25c377fb06aace737d529",
          "md5": "974fbe922c4b5aaa002281da89db3fc1",
          "sha256": "464a3542ac53eea4661a0fff40ea3179613ad1bb0659520ea63e053e1e75bf02"
        },
        "downloads": -1,
        "filename": "pyfidelimax-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "974fbe922c4b5aaa002281da89db3fc1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3226,
        "upload_time": "2019-03-01T12:11:54",
        "upload_time_iso_8601": "2019-03-01T12:11:54.503682Z",
        "url": "https://files.pythonhosted.org/packages/43/b2/618de62c037c2374899d3ea361b72c68f5d0bca25c377fb06aace737d529/pyfidelimax-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7c67231d4efc097d9e01f886eb540ec52518bdb5b06cce5690e1ca7ff456cd5",
          "md5": "de74ccceba97be3cb3cc8d3f89cd1e99",
          "sha256": "5f240acffa166a5ff68ed1370655d630cc3324c08446cf6ca6cbfb44bbdf15eb"
        },
        "downloads": -1,
        "filename": "pyfidelimax-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "de74ccceba97be3cb3cc8d3f89cd1e99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3172,
        "upload_time": "2019-03-07T12:02:27",
        "upload_time_iso_8601": "2019-03-07T12:02:27.723461Z",
        "url": "https://files.pythonhosted.org/packages/d7/c6/7231d4efc097d9e01f886eb540ec52518bdb5b06cce5690e1ca7ff456cd5/pyfidelimax-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a400205585ea2b9f7d923d54f9de371857f1ef10cf2d9849e5446caba5a39eed",
          "md5": "41b9e5c7556fa6d7f68f974de45c64f2",
          "sha256": "7031d30ae82e1ac64e9487b17c3519541cbb36547bb978792068cad907b3a8db"
        },
        "downloads": -1,
        "filename": "pyfidelimax-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "41b9e5c7556fa6d7f68f974de45c64f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3191,
        "upload_time": "2019-03-07T14:18:12",
        "upload_time_iso_8601": "2019-03-07T14:18:12.711167Z",
        "url": "https://files.pythonhosted.org/packages/a4/00/205585ea2b9f7d923d54f9de371857f1ef10cf2d9849e5446caba5a39eed/pyfidelimax-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9324e8d46214174c30c045375f11b06133690eb6f44b4c6c58cdd767a0d8a12d",
          "md5": "84e53851a6cd6054503d75ef8992c633",
          "sha256": "31acf3b2ff39ae8f48ec7c8afa23cf86953d7709f5366cd15f371307bcd66224"
        },
        "downloads": -1,
        "filename": "pyfidelimax-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "84e53851a6cd6054503d75ef8992c633",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3195,
        "upload_time": "2019-03-07T14:20:53",
        "upload_time_iso_8601": "2019-03-07T14:20:53.375341Z",
        "url": "https://files.pythonhosted.org/packages/93/24/e8d46214174c30c045375f11b06133690eb6f44b4c6c58cdd767a0d8a12d/pyfidelimax-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eabe8044b8003311b4a5a9cf87be1aab7b4d4ed5279b9fa2e3b07b23005f3f0c",
          "md5": "016a8bee27f3424246dd05a112ce77d1",
          "sha256": "9caf510f57826a7abbe04d6875d25a1fe6f84aead013e01d7e463f718a7bf697"
        },
        "downloads": -1,
        "filename": "pyfidelimax-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "016a8bee27f3424246dd05a112ce77d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3198,
        "upload_time": "2019-03-12T17:23:28",
        "upload_time_iso_8601": "2019-03-12T17:23:28.906396Z",
        "url": "https://files.pythonhosted.org/packages/ea/be/8044b8003311b4a5a9cf87be1aab7b4d4ed5279b9fa2e3b07b23005f3f0c/pyfidelimax-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eabe8044b8003311b4a5a9cf87be1aab7b4d4ed5279b9fa2e3b07b23005f3f0c",
        "md5": "016a8bee27f3424246dd05a112ce77d1",
        "sha256": "9caf510f57826a7abbe04d6875d25a1fe6f84aead013e01d7e463f718a7bf697"
      },
      "downloads": -1,
      "filename": "pyfidelimax-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "016a8bee27f3424246dd05a112ce77d1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3198,
      "upload_time": "2019-03-12T17:23:28",
      "upload_time_iso_8601": "2019-03-12T17:23:28.906396Z",
      "url": "https://files.pythonhosted.org/packages/ea/be/8044b8003311b4a5a9cf87be1aab7b4d4ed5279b9fa2e3b07b23005f3f0c/pyfidelimax-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}