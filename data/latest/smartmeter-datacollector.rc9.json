{
  "info": {
    "author": "Supercomputing Systems AG",
    "author_email": "info@scs.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Typing :: Typed"
    ],
    "description": "# Smart Meter Data Collector\n\n<p align=\"center\">\n    <a href=\"LICENSE\"><img alt=\"License: GPL-2.0-only\" src=\"https://img.shields.io/badge/license-GPLv2-blue.svg\"></a> <a href=\"https://github.com/scs/smartmeter-datacollector/pulls\"><img alt=\"Pull Requests Welcome\" src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg\"></a> <a href=\"https://github.com/scs/smartmeter-datacollector/pulls\"><img alt=\"Contributions Welcome\" src=\"https://img.shields.io/badge/contributions-welcome-brightgreen.svg\"></a>\n    <br />\n    <img alt=\"Python Code Checks\" src=\"https://github.com/scs/smartmeter-datacollector/actions/workflows/python-code-checks.yml/badge.svg?branch=master\"> <a href=\"https://pypi.org/project/smartmeter-datacollector/\"><img alt=\"PyPI - Python Version\" src=\"https://img.shields.io/pypi/pyversions/smartmeter-datacollector\"></a>\n    <br />\n    <img src='ekz_logo.png' width=\"100\">\n</p>\n\n---\n\nThe `smartmeter-datacollector` tool is a Python3 software which allows you to continuously retrieve data from supported smart meters (listed below).\nThe acquired values can be forwarded to one or more data sinks like a MQTT broker or logger.\n\nThis tool is an open source software funded by **[EKZ (Elektrizitätswerke des Kantons Zürich)](https://www.ekz.ch)** and developed by **[Supercomputing Systems AG](https://www.scs.ch)**. The goal of this voluntary initiative is to create a tool that can read, decode and decrypt data (if necessary) from the local interface of various smart meters and convert it into human-readable and simple formats. This should eliminate the complexity of decoding DLMS and similar protocols for the user. The user has the data in a format, which he can easily use in various use-cases ranging from simple vizualization (see [Method 1: Raspberry Pi image with demo](#method-1-raspberry-pi-image-with-demo)) to integration into energy management algorithms or into custom home automation software. \n\nThe following smart meters are supported:\n\n* Landis+Gyr E450: \\\n  Data pushed by smart meter over CII interface (wired M-Bus). Encoded with HDLC and DLMS/COSEM.\n  * Unencrypted data\n  * Encrypted data\n* Iskraemeco AM550: \\\n  Data pushed by smart meter over [P1 interface (DSMR)](https://www.netbeheernederland.nl/_upload/Files/Slimme_meter_15_a727fce1f1.pdf). Encoded with HDLC (IEC 62056-46) and DLMS/COSEM.\n  * Unencrypted data\n  * Encrypted data\n\nThe following data sinks are implemented:\n* MQTT (v3.1.1):\n  * Encryption\n    * Unencrypted connection\n    * Encrypted connection\n      * TLS\n      * optional custom CA certificate\n  * Authentication\n    * Unauthenticated\n    * Authenticated with username / password\n    * Authenticated with client certificate\n* Logger to STDOUT\n\n`smartmeter-datacollector` is fully configurable through a `.ini` configuration file. The [`smartmeter-datacollector-configurator`](https://github.com/scs/smartmeter-datacollector-configurator) webinterface can help to create and modify the configuration.\n\n---\n\n- [Smart Meter Data Collector](#smart-meter-data-collector)\n- [How to install](#how-to-install)\n  - [Method 1: Raspberry Pi image with demo](#method-1-raspberry-pi-image-with-demo)\n  - [Method 2: Python package](#method-2-python-package)\n    - [Python Requirements](#python-requirements)\n    - [Installation](#installation)\n  - [Method 3: Debian package](#method-3-debian-package)\n    - [Debian Requirements](#debian-requirements)\n    - [Installation](#installation-1)\n- [How to use](#how-to-use)\n  - [Configuration](#configuration)\n    - [Specification](#specification)\n    - [smartmeter-datacollector-configurator](#smartmeter-datacollector-configurator)\n  - [Run manually](#run-manually)\n    - [Configuration](#configuration-1)\n  - [Run as a systemd service](#run-as-a-systemd-service)\n    - [Configuration](#configuration-2)\n- [How to develop](#how-to-develop)\n  - [Development Requirements](#development-requirements)\n  - [Installation](#installation-2)\n    - [Debian / Ubuntu](#debian--ubuntu)\n  - [Checkout the code](#checkout-the-code)\n  - [Setup Development Environment](#setup-development-environment)\n  - [Custom Commands / Workflows](#custom-commands--workflows)\n- [Acknowledgements](#acknowledgements)\n\n# How to install\n\nThere are different methods how to use `smartmeter-datacollector`.\n\n1. Raspberry Pi image with demo\n2. Python package\n3. Debian package\n\n## Method 1: Raspberry Pi image with demo\n\nFor a very easy first time usage of `smartmeter-datacollector` we provide a [Raspberry Pi image](https://github.com/scs/smartmeter-datacollector/releases) (based on Raspberry Pi OS) which contains the following parts:\n* `smartmeter-datacollector` as a systemd service\n* `smartmeter-datacollector-configurator` webinterface\n* demo\n  * [mosquiotto](https://mosquitto.org/) as a local MQTT broker to publish the measurements from `smartmeter-datacollector`\n  * [Telegraf](https://www.influxdata.com/time-series-platform/telegraf/) to collect measurements published by `smartmeter-datacollector` over MQTT and store them in InfluxDB\n  * [InfluxDB](https://www.influxdata.com/) to store the measurements\n  * [Grafana](https://grafana.com/) to visualize the measurements\n\nThis setup allows a (first time) user to [install](https://www.raspberrypi.org/documentation/computers/getting-started.html#installing-the-operating-system) the image on a Raspberry Pi and immediately get started with `smartmeter-datacollector`. The following steps are required:\n1. Download the Raspberry Pi image from the [latest release](https://github.com/scs/smartmeter-datacollector/releases).\n2. Install the image on a (micro)SD card, e.g. using [Raspberry Pi Imager](https://www.raspberrypi.org/documentation/computers/getting-started.html#using-raspberry-pi-imager).\n3. Prepare the Raspberry Pi.\n   1. Push the (micro)SD card into the proper slot.\n   2. Use an RJ-45 cable (or configure WiFi later) to connect to a network.\n   3. Connect the power cable to the Micro USB port.\n4. Open the `smartmeter-datacollector-configurator` webinterface using `http://<Raspberry Pi IP>:8000/` in your favorite browser.\n   1. Load the pre-defined configuration.\n   2. Adjust the settings of the connected smart meter.\n   3. Deploy the adjusted configuration.\n   4. Restart the `smartmeter-datacollector` service.\n5. Open `Grafana` using `http://<Raspberry Pi IP>:3000/` in your favorite browser.\n6. Observe the measurements from your smart meter while they arrive periodically.\n\nSee [Wiki/Demo](https://github.com/scs/smartmeter-datacollector/wiki/Demo-(Raspberry-Pi-Image)) for more details on the provided Raspberry Pi image with the demo.\n\n## Method 2: Python package\n\n`smartmeter-datacollector` can be installed as a Python3 package either from [PyPi](https://pypi.org/project/smartmeter-datacollector/) or manually using a [released wheel](https://github.com/scs/smartmeter-datacollector/releases).\n\nThe Python3 package does not contain any infrastructure to run `smartmeter-datacollector` in the background or to automatically start it during a boot sequence. If such infrastructure is required either see [Method 3: Debian package](#method-3-debian-package) or provide it yourself.\n\n### Python Requirements\n\n* Python >= 3.7 (tested with 3.8)\n\n### Installation\n\nInstall the package either as global Python package or in a virtualenv with\n\n```bash\npython3 -m pip install smartmeter-datacollector\n```\n\nSimilarly the [`smartmeter-datacollector-configurator`](https://github.com/scs/smartmeter-datacollector-configurator) webinterface can be installed with\n\n```bash\npython3 -m pip install smartmeter-datacollector-configurator\n```\n\n## Method 3: Debian package\n\n`smartmeter-datacollector` is also available as a Debian (`.deb`) package from the [releases](https://github.com/scs/smartmeter-datacollector/releases) which installs it system wide. The Debian package includes a systemd service file which enables `smartmeter-datacollector` to automatically start after booting the system.\n\n### Debian Requirements\n\n* Distribution\n  * Debian\n* Release\n  * Buster\n* CPU architecture\n  * amd64\n  * armhf\n\n### Installation\n\nDownload the Debian package from [releases](https://github.com/scs/smartmeter-datacollector/releases) and install it with\n\n```bash\nsudo apt install ./python3-smartmeter-datacollector_*.deb\n```\n\nSimilarly the [`smartmeter-datacollector-configurator`](https://github.com/scs/smartmeter-datacollector-configurator) webinterface can be installed with a Debian package from its [releases](https://github.com/scs/smartmeter-datacollector-configurator/releases) with\n\n```bash\nsudo apt install ./python3-smartmeter-datacollector-configurator_*.deb\n```\n\n# How to use\n\nThe usage of `smartmeter-datacollector` depends on the installation method. Independent of the installation method a `.ini` configuration file is required to properly run `smartmeter-datacollector`.\n\n## Configuration\n\n### Specification\n\nThe `.ini` configuration file supports the following format\n\n```ini\n[reader0]\n# type of the connected smart meter\ntype = lge450\n# serial port to which the smart meter is connected\nport = /dev/ttyUSB0\n# optional encryption key\nkey = \n\n[sink0]\n# type of the sink\ntype = mqtt\n# host / IP address of the MQTT broker\nhost = localhost\n# port of the MQTT broker\nport = 1883\n# whether to use TLS (Transport Layer Security)\ntls = False\n# optional path to the CA certificate used to validate the MQTT broker's certificate\nca_file_path = \n# whether to check the hostname of the MQTT broker against the certificate\ncheck_hostname = False\n# optional username for authentication with the MQTT broker\nusername = \n# optional password for authentication with the MQTT broker\npassword = \n# optional path to the client certificate for authentication with the MQTT broker\nclient_cert_path = \n# optional path to the private key for the client certificate for authentication with the MQTT broker\nclient_key_path = \n\n[sink1]\n# type of the sink\ntype = logger\n# name of the logger\nname = DataLogger\n\n[logging]\n# log level configuration: DEBUG / INFO / WARNING / ERROR\ndefault = WARNING\nsmartmeter = WARNING\ncollector = WARNING\nsink = WARNING\n```\n\nThere can be multiple `[readerX]` and `[sinkY]` sections for every connected smart meter and / or data sink.\n\nSee [Wiki/Configuration](https://github.com/scs/smartmeter-datacollector/wiki/Configuration) for more details on the available configuration options.\n\n### smartmeter-datacollector-configurator\n\nTo simplify the process of generating a valid `.ini` configuration for `smartmeter-datacollector` the companion [`smartmeter-datacollector-configurator`](https://github.com/scs/smartmeter-datacollector-configurator) webinterface can be used. It supports\n* a graphical approach to manage the configuration\n* input validation to avoid invalid configurations\n* loading / saving / discarding a configuration\n* restarting `smartmeter-datacollector` (only if installed as a Debian package)\n\nSee [Wiki/smartmeter-datacollector-configurator](https://github.com/scs/smartmeter-datacollector/wiki/smartmeter-datacollector-configurator) for more details on the webinterface and the configuration possibilities.\n\n## Run manually\n\nRun `smartmeter-datacollector` with the following command:\n\n```\nsmartmeter-datacollector --config datacollector.ini\n```\n\nThe following command line arguments are supported:\n* `-h, --help`: Shows the help output of `smartmeter-datacollector`.\n* `-c, --config CONFIG`: Path to the `.ini` configuration file.\n* `-s,--saveconfig`: Cteate a default `.ini` configuration file.\n* `-d, --dev`: Enable development mode.\n\n### Configuration\n\nThe configuration file can be located anywhere and use any filename. If no `.ini` configuration file is specified a default configuration with the following options is used:\n* Landys+Gir E450 smart meter in unencrypted mode connected to `/dev/ttyUSB0`\n* `LOGGER` sink\n* `MQTT` sink connected to a local broker without encryption or authentication\n\n## Run as a systemd service\n\nWhen `smartmeter-datacollector` has been installed as a Debian package it provides a systemd .service file named `python3-smartmeter-datacollector.service`. Therefore the service can be managed using the `systemctl` command:\n\n```\nsudo systemctl start|stop|restart python3-smartmeter-datacollector\n```\n\nEnabling or disabling the service can also be managed using the `systemctl` command:\n\n```\nsudo systemctl enable|disable python3-smartmeter-datacollector\n```\n\nInspecting the log messages can be done using the `journalctl` command:\n\n```\njournalctl -u python3-smartmeter-datacollector [-f]\n```\n\n### Configuration\n\nThe systemd service expectes the `.ini` configuration to be located at\n`/var/lib/smartmeter-datacollector/datacollector.ini`. This is also the default location used by the [`smartmeter-datacollector-configurator`](https://github.com/scs/smartmeter-datacollector-configurator) webinterface to load and save the managed configuration.\n\n# How to develop\n\nHelp from the community for the `smartmeter-datacollector` project is always welcome. Please follow the next few chapters to setup a working development environment.\n\n## Development Requirements\n\n* Python >= 3.7\n* [`pipenv`](https://pipenv.pypa.io/en/latest/)\n* Optional software packages (Debian / Ubuntu)\n  * python3-all\n  * debhelper\n  * dh-python\n  * dh-systemd\n\n## Installation\n\n### Debian / Ubuntu\n\nTo install the listed minimal requirements run the following command:\n\n```\nsudo apt install git python3 pipenv\n```\n\nTo install the optional requirements also run the following command:\n\n```\nsudo apt install python3-all debhelper dh-python dh-systemd\n```\n\n## Checkout the code\n\nUse `git` to clone / checkout `smartmeter-datacollector` from GitHub using\n\n```\ngit clone https://github.com/scs/smartmeter-datacollector.git\n```\n\n## Setup Development Environment\n\n`smartmeter-datacollector` uses [`pipenv`](https://pipenv.pypa.io/en/latest/) to manage its dependencies and setup a virtual environment. Run the following command to setup the initial development environment:\n\n```\npipenv install --dev\n```\n\nThis will install all runtime and development dependencies for `smartmeter-datacollector` in a new virtual environment. Now you are ready to start working on `smartmeter-datacollector`.\n\n## Custom Commands / Workflows\n\n`smartmeter-datacollector` offers a few custom `pipenv run` commands to simplify certain development workflows:\n* `format_check` checks if the code follows the [`autopep8`](https://pypi.org/project/autopep8/) code formatting rules.\n* `format` automatically adjusts the code to follow the `autopep8` code formatting rules.\n* `isort_check` checks if the order of the import statements is correct using [`isort`](https://pycqa.github.io/isort/).\n* `isort` automatically re-orders the import statements using `isort`.\n* `lint_check` checks if the code follows the [`pylint`](https://pypi.org/project/pylint/) rules defined in `pyproject.toml`.\n* `lint` automatically adjust the code to follow the `pylint` rules defined in `pyproject.toml`.\n* `license` makes sure every Python (`*.py`) file contains the proper license header.\n* `build` builds a Python package which can be uploaded to [`PyPI`](https://pypi.org/project/smartmeter-datacollector/) using `twine`.\n* `build_check` uses `twine` to check if the built Python package will be accepted by `PiPI`.\n* `setup_check` checks whether the dependencies defined in `Pipfile` / `Pipfile.lock` are in sync with `setup.py`.\n* `setup` synchronizes the dependencies defined in `Pipfile` / `Pipfile.lock` with `setup.py`.\n* `debianize` creates a `debian/` directory used to build Debian source / binary packages.\n* `build_srcdeb` builds a Debian source package which can be used to build a Debian (binary) package for any platform (e.g. using [`pbuilder`](https://pbuilder-docs.readthedocs.io/en/latest/usage.html))\n* `build_deb` builds a Debian package for the current development plattform.\n\nMake sure to run `format_check` / `format`, `isort_check` / `isort`, `lint_check` / `lint`, `license`, `setup_check` / `setup` before commiting changes to the repository to avoid unnecessary development cycles. `smartmeter-datacollector` uses [GitHub Actions](https://github.com/scs/smartmeter-datacollector/actions) to check if these rules apply.\n\n# Acknowledgements\n`smartmeter-datacollector` and its companion project [`smartmeter-datacollector-configurator`](https://github.com/scs/smartmeter-datacollector-configurator) have been developed by **[Supercomputing Systems AG](https://www.scs.ch)** on behalf of and funded by **[EKZ](https://www.ekz.ch/)**.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/scs/smartmeter-datacollector",
    "keywords": "",
    "license": "GPLv2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "smartmeter-datacollector",
    "package_url": "https://pypi.org/project/smartmeter-datacollector/",
    "platform": null,
    "project_url": "https://pypi.org/project/smartmeter-datacollector/",
    "project_urls": {
      "Bug Reports": "https://github.com/scs/smartmeter-datacollector/issues",
      "Homepage": "https://github.com/scs/smartmeter-datacollector",
      "Pull Requests": "https://github.com/scs/smartmeter-datacollector/pulls",
      "SCS": "https://www.scs.ch",
      "Source": "https://github.com/scs/smartmeter-datacollector"
    },
    "release_url": "https://pypi.org/project/smartmeter-datacollector/1.0.2/",
    "requires_dist": [
      "aioserial (==1.3.0)",
      "asyncio-mqtt (==0.10.0)",
      "gurux-dlms (==1.0.107)",
      "paho-mqtt (==1.5.1)",
      "pyserial (==3.5)"
    ],
    "requires_python": ">=3.7",
    "summary": "Smart Meter Data Collector",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13450737,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "638710d79ecc94a0a7fcdb7240c2aef2a37e35c1f4b31a867f1be3e898b2db85",
          "md5": "dc8f9d8f83fd97b1bda5f47e9f8606be",
          "sha256": "27bb10be9c78c3ca7d97cc942fc43006380e254287325403d72f1b41817f5c45"
        },
        "downloads": -1,
        "filename": "smartmeter_datacollector-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc8f9d8f83fd97b1bda5f47e9f8606be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23146,
        "upload_time": "2021-08-20T13:01:53",
        "upload_time_iso_8601": "2021-08-20T13:01:53.758961Z",
        "url": "https://files.pythonhosted.org/packages/63/87/10d79ecc94a0a7fcdb7240c2aef2a37e35c1f4b31a867f1be3e898b2db85/smartmeter_datacollector-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80d05909934b205e56113b01d87b0f6414f04bd1df53123cec8995f7638295b4",
          "md5": "64a69459b54aeb8c9511934124f2b136",
          "sha256": "e3ed1f780ad9a7052847b2c1ec3d686cd6209841ccbe0d5181a98ac506ab2d0d"
        },
        "downloads": -1,
        "filename": "smartmeter-datacollector-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "64a69459b54aeb8c9511934124f2b136",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16268,
        "upload_time": "2021-08-20T13:01:55",
        "upload_time_iso_8601": "2021-08-20T13:01:55.236883Z",
        "url": "https://files.pythonhosted.org/packages/80/d0/5909934b205e56113b01d87b0f6414f04bd1df53123cec8995f7638295b4/smartmeter-datacollector-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "158a91d174dea5095a46a058302d46c056b2aef20c151e7934eec41796d80cef",
          "md5": "28352bac8db98778fcdf944414e2941a",
          "sha256": "9af0a0d058d9769b6914b8532cc0d8120377df3aa95855d312a44c8f7a5e0eec"
        },
        "downloads": -1,
        "filename": "smartmeter_datacollector-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28352bac8db98778fcdf944414e2941a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25522,
        "upload_time": "2021-08-27T08:19:21",
        "upload_time_iso_8601": "2021-08-27T08:19:21.254805Z",
        "url": "https://files.pythonhosted.org/packages/15/8a/91d174dea5095a46a058302d46c056b2aef20c151e7934eec41796d80cef/smartmeter_datacollector-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a6f5e3ca3836631b6778f9651bc045d87adad7f75de0b92f5ce41658eb8b4e7",
          "md5": "4759180b2ebbc25b278be6026eb339af",
          "sha256": "5b1b1094951f421b2fc999ac96b67146e35bd643f53c5c1066cbaeec1755da8a"
        },
        "downloads": -1,
        "filename": "smartmeter-datacollector-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4759180b2ebbc25b278be6026eb339af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17916,
        "upload_time": "2021-08-27T08:19:22",
        "upload_time_iso_8601": "2021-08-27T08:19:22.039436Z",
        "url": "https://files.pythonhosted.org/packages/7a/6f/5e3ca3836631b6778f9651bc045d87adad7f75de0b92f5ce41658eb8b4e7/smartmeter-datacollector-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7b4bb8dc6b0d50d7252b5e4bb8fc1dfa371434ed2d5336e8c261e604ad1da42",
          "md5": "a24f0d240519ecea045c2ba6ba01d366",
          "sha256": "bca01d55bda8645821a30e7cad2c8ea73ce21e3ebf56d7ad31bda6dec73cb18a"
        },
        "downloads": -1,
        "filename": "smartmeter_datacollector-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a24f0d240519ecea045c2ba6ba01d366",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25520,
        "upload_time": "2021-08-27T08:50:19",
        "upload_time_iso_8601": "2021-08-27T08:50:19.660594Z",
        "url": "https://files.pythonhosted.org/packages/c7/b4/bb8dc6b0d50d7252b5e4bb8fc1dfa371434ed2d5336e8c261e604ad1da42/smartmeter_datacollector-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "638950bb93db757224efc626ac6f53a5b4d119d5e399312bf9111e6ee562d3de",
          "md5": "53370276ff2beb2d05a83288f6bdfbc9",
          "sha256": "e54e74182f16960d6d27a9116cdc3f21bebbe2abb015dbd548b6455921aa1e8f"
        },
        "downloads": -1,
        "filename": "smartmeter-datacollector-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "53370276ff2beb2d05a83288f6bdfbc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17915,
        "upload_time": "2021-08-27T08:50:20",
        "upload_time_iso_8601": "2021-08-27T08:50:20.662466Z",
        "url": "https://files.pythonhosted.org/packages/63/89/50bb93db757224efc626ac6f53a5b4d119d5e399312bf9111e6ee562d3de/smartmeter-datacollector-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27929caae4579a7d92b2ff816163bb98b7aa5a79ea057dd7e248aa528fb6e119",
          "md5": "1f82d2bd30c752bddb8e95b183304622",
          "sha256": "8547197a68d1c156581b17001013c351327554de29436fb2cbf663502b46df21"
        },
        "downloads": -1,
        "filename": "smartmeter_datacollector-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f82d2bd30c752bddb8e95b183304622",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25525,
        "upload_time": "2021-09-03T08:49:42",
        "upload_time_iso_8601": "2021-09-03T08:49:42.316086Z",
        "url": "https://files.pythonhosted.org/packages/27/92/9caae4579a7d92b2ff816163bb98b7aa5a79ea057dd7e248aa528fb6e119/smartmeter_datacollector-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01b5f6eb9c504ccf3f344db8957fbcc85fd7f3f964c93350877e93e10d386016",
          "md5": "30d096b2ec6cd1008847c1de26d0cc22",
          "sha256": "cabee8b69a6c7866e4a606df6e041a56cb658bd94f855def1bab96b031cbf73a"
        },
        "downloads": -1,
        "filename": "smartmeter-datacollector-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "30d096b2ec6cd1008847c1de26d0cc22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17945,
        "upload_time": "2021-09-03T08:49:43",
        "upload_time_iso_8601": "2021-09-03T08:49:43.511827Z",
        "url": "https://files.pythonhosted.org/packages/01/b5/f6eb9c504ccf3f344db8957fbcc85fd7f3f964c93350877e93e10d386016/smartmeter-datacollector-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ee99f65857ec592a5fa5520562eb56959cba9209eabf3bcac30f82ba776824f",
          "md5": "abdb74431dbed7d8261924546a401b4c",
          "sha256": "68170603b7f459c0074155a395ffa48174cd3f18515e4237c943e8d3a967edaf"
        },
        "downloads": -1,
        "filename": "smartmeter_datacollector-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "abdb74431dbed7d8261924546a401b4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 30834,
        "upload_time": "2021-09-10T07:20:45",
        "upload_time_iso_8601": "2021-09-10T07:20:45.802786Z",
        "url": "https://files.pythonhosted.org/packages/8e/e9/9f65857ec592a5fa5520562eb56959cba9209eabf3bcac30f82ba776824f/smartmeter_datacollector-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3699385872b147621b59596987257377a0a726609b6d67a2b81ab1c9372aa46",
          "md5": "53efaaae036db4445bf83510fb6002a3",
          "sha256": "60d134b20159fc9076998996aa9eb18cadde7f75fb79183e22cceed90ba31370"
        },
        "downloads": -1,
        "filename": "smartmeter-datacollector-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "53efaaae036db4445bf83510fb6002a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26995,
        "upload_time": "2021-09-10T07:20:46",
        "upload_time_iso_8601": "2021-09-10T07:20:46.759551Z",
        "url": "https://files.pythonhosted.org/packages/d3/69/9385872b147621b59596987257377a0a726609b6d67a2b81ab1c9372aa46/smartmeter-datacollector-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ca9ad40532a01076e8e519de19536c78e278a5c89ce07b2eb92a81f16e4ea3a",
          "md5": "d3ae5fae8c3ef1c94227186d7c9182bb",
          "sha256": "bbca6c6e5594575998aacdcf08cfcc5a241e43cabac1f062baa200ac19a49d54"
        },
        "downloads": -1,
        "filename": "smartmeter_datacollector-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3ae5fae8c3ef1c94227186d7c9182bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 30835,
        "upload_time": "2021-09-13T09:19:05",
        "upload_time_iso_8601": "2021-09-13T09:19:05.474807Z",
        "url": "https://files.pythonhosted.org/packages/6c/a9/ad40532a01076e8e519de19536c78e278a5c89ce07b2eb92a81f16e4ea3a/smartmeter_datacollector-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c02f40f0dd5f6eeca35b53d3c95db22de441be41dd98c558666479bb2530c0c",
          "md5": "63164a6a3614e6c11f1525609b064392",
          "sha256": "74e63dc2d29e7071e37be0d4476071b0bb019b716bf9be4d66709830ece2ee23"
        },
        "downloads": -1,
        "filename": "smartmeter-datacollector-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "63164a6a3614e6c11f1525609b064392",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26996,
        "upload_time": "2021-09-13T09:19:06",
        "upload_time_iso_8601": "2021-09-13T09:19:06.746668Z",
        "url": "https://files.pythonhosted.org/packages/3c/02/f40f0dd5f6eeca35b53d3c95db22de441be41dd98c558666479bb2530c0c/smartmeter-datacollector-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7aa69ec6b4cc3aaeab124b1b5dd5ed875eff37cc81dcb4dc31bc72d23a9c2c51",
          "md5": "5ef43522c42400aab9ad588c511374b9",
          "sha256": "97e298854d5d6f144e661ce085de84cc6f9faa101ac3eee7c70eb23797703aca"
        },
        "downloads": -1,
        "filename": "smartmeter_datacollector-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ef43522c42400aab9ad588c511374b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 31959,
        "upload_time": "2021-10-11T05:51:38",
        "upload_time_iso_8601": "2021-10-11T05:51:38.516883Z",
        "url": "https://files.pythonhosted.org/packages/7a/a6/9ec6b4cc3aaeab124b1b5dd5ed875eff37cc81dcb4dc31bc72d23a9c2c51/smartmeter_datacollector-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6280f3e838a6a7469cbd384e296aa69642e7bae8eb0c0d6346facd2c9ad7af90",
          "md5": "cd4a1292d7947094dd7287946b1bace5",
          "sha256": "83947572506eccd50adf302e0242c0bfcc693c980d5f926ed4430afe889787a9"
        },
        "downloads": -1,
        "filename": "smartmeter-datacollector-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cd4a1292d7947094dd7287946b1bace5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27926,
        "upload_time": "2021-10-11T05:51:39",
        "upload_time_iso_8601": "2021-10-11T05:51:39.673975Z",
        "url": "https://files.pythonhosted.org/packages/62/80/f3e838a6a7469cbd384e296aa69642e7bae8eb0c0d6346facd2c9ad7af90/smartmeter-datacollector-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59b1a2ade09905635920350238f340cc8a816cc158d343d026432bdb8234ccb1",
          "md5": "e5b669ea41b85a2f38184c2b8efbe654",
          "sha256": "6e8c87d8c95a57cd47a690feeaae76dbc0de14686e6ebb19a9610a465df9ba3f"
        },
        "downloads": -1,
        "filename": "smartmeter_datacollector-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5b669ea41b85a2f38184c2b8efbe654",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 31961,
        "upload_time": "2021-10-25T10:09:09",
        "upload_time_iso_8601": "2021-10-25T10:09:09.518347Z",
        "url": "https://files.pythonhosted.org/packages/59/b1/a2ade09905635920350238f340cc8a816cc158d343d026432bdb8234ccb1/smartmeter_datacollector-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7581c0de6fa00c1d5734c9bdce3a9592f5b4dc31e463ffe0774d6e3e5f4923f5",
          "md5": "5693eabb687e7ca7b086acdf2841e78f",
          "sha256": "08c30b7e3cc538d16333fdfdccf34b01953bc24bb12a48bcbb68a5638315e212"
        },
        "downloads": -1,
        "filename": "smartmeter-datacollector-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5693eabb687e7ca7b086acdf2841e78f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27954,
        "upload_time": "2021-10-25T10:09:11",
        "upload_time_iso_8601": "2021-10-25T10:09:11.535208Z",
        "url": "https://files.pythonhosted.org/packages/75/81/c0de6fa00c1d5734c9bdce3a9592f5b4dc31e463ffe0774d6e3e5f4923f5/smartmeter-datacollector-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb9b7b7920a7af1271a9e2f80a49a95ed004abb20cb2544a3712ee1a61daa82a",
          "md5": "6f548fac5e2fdfde28dd08c20c7f656b",
          "sha256": "e3a284764b6a16aa39adc55caabfc98e3603a44d71960236a6499b63082e78a5"
        },
        "downloads": -1,
        "filename": "smartmeter_datacollector-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f548fac5e2fdfde28dd08c20c7f656b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 32440,
        "upload_time": "2022-04-08T06:52:16",
        "upload_time_iso_8601": "2022-04-08T06:52:16.497215Z",
        "url": "https://files.pythonhosted.org/packages/cb/9b/7b7920a7af1271a9e2f80a49a95ed004abb20cb2544a3712ee1a61daa82a/smartmeter_datacollector-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5826d6c86e9237d4beb7b19fecc07dccef95d0ea21507c0452f90e35ba771cd0",
          "md5": "c5440b8784dbfe3691f61fd7ad7ffd9a",
          "sha256": "03b1883ea8136ad8cb6bd7ed55f59619b00fdf18ebc96efbdeb9a54010d2563c"
        },
        "downloads": -1,
        "filename": "smartmeter-datacollector-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c5440b8784dbfe3691f61fd7ad7ffd9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28711,
        "upload_time": "2022-04-08T06:52:18",
        "upload_time_iso_8601": "2022-04-08T06:52:18.146470Z",
        "url": "https://files.pythonhosted.org/packages/58/26/d6c86e9237d4beb7b19fecc07dccef95d0ea21507c0452f90e35ba771cd0/smartmeter-datacollector-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cb9b7b7920a7af1271a9e2f80a49a95ed004abb20cb2544a3712ee1a61daa82a",
        "md5": "6f548fac5e2fdfde28dd08c20c7f656b",
        "sha256": "e3a284764b6a16aa39adc55caabfc98e3603a44d71960236a6499b63082e78a5"
      },
      "downloads": -1,
      "filename": "smartmeter_datacollector-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6f548fac5e2fdfde28dd08c20c7f656b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 32440,
      "upload_time": "2022-04-08T06:52:16",
      "upload_time_iso_8601": "2022-04-08T06:52:16.497215Z",
      "url": "https://files.pythonhosted.org/packages/cb/9b/7b7920a7af1271a9e2f80a49a95ed004abb20cb2544a3712ee1a61daa82a/smartmeter_datacollector-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5826d6c86e9237d4beb7b19fecc07dccef95d0ea21507c0452f90e35ba771cd0",
        "md5": "c5440b8784dbfe3691f61fd7ad7ffd9a",
        "sha256": "03b1883ea8136ad8cb6bd7ed55f59619b00fdf18ebc96efbdeb9a54010d2563c"
      },
      "downloads": -1,
      "filename": "smartmeter-datacollector-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c5440b8784dbfe3691f61fd7ad7ffd9a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 28711,
      "upload_time": "2022-04-08T06:52:18",
      "upload_time_iso_8601": "2022-04-08T06:52:18.146470Z",
      "url": "https://files.pythonhosted.org/packages/58/26/d6c86e9237d4beb7b19fecc07dccef95d0ea21507c0452f90e35ba771cd0/smartmeter-datacollector-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}