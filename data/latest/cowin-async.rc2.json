{
  "info": {
    "author": "Prasanna Venkadesh",
    "author_email": "prasmailme@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: AsyncIO",
      "Framework :: Trio",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "## Cowin API\n\nPython package to interact with [COWIN Public API](https://apisetu.gov.in/public/marketplace/api/cowin/cowin-public-v2)\n\n### Features\n\n- [x] Supports both Synchronous and Asynchronous modes.\n- [x] 95% test coverage with mocking API responses.\n- [x] Get list of states\n- [x] Get list of districts for a state\n- [x] Get vaccine centers with sessions by pincode and date\n- [x] Generate and Verify OTP\n- [x] Download Certificates\n\nExample:\n\nFor API response payload samples visit the [API portal](https://apisetu.gov.in/public/marketplace/api/cowin/cow).\n\n```python\n# blocking synchronous client\nfrom cowin import Cowin\n\nclient = Cowin()\n\nstates = client.get_states()\ndistricts = client.get_districts(state_id=4)\n\n# below function accepts optional datetime.date object\n# by default current date is used\nvaccine_sessions = client.get_available_sessions_by_pincode(pincode=605001)\n\n# get OTP to mobile number\nresponse = client.get_otp(mobile='9876543210')\ntxn_id = response['txnId']\n\n# verify OTP and receive token\nresponse = client.confirm_otp(txn_id=txn_id, otp=123456)\ntoken = response['token']\n\n# download certificate by beneficiary reference number\n# Note: ServerError exception will be raised when response content is not pdf\ncert_content = client.get_certificate(token, beneficiary_id='xxxxxxxxxxxx')\n\n# save certificate content to disk\nwith open('certificate.pdf', 'wb') as cert_file:\n    cert_file.write(cert_content)\n```\n\n```python\n# non-blocking async client\nfrom cowin import AsyncCowin\n\nasync_client = AsyncCowin()\n\nstates = await async_client.get_stateS()\ndistricts = await async_client.get_districts(state_id=4)\n\nvaccine_sessions = await async_client.get_available_sessions_by_pincode(pincode='605001')\n\n# get OTP to mobile number\nresponse = await async_client.get_otp(mobile='9876543210')\ntxn_id = response['txnId']\n\n# verify OTP and receive token\nresponse = await async_client.confirm_otp(txn_id=txn_id, otp='123456')\ntoken = response['token']\n\n# download certificate by beneficiary reference number\n# Note: ServerError exception will be raised when response content is not pdf\ncert_content = await async_client.get_certificate(token, beneficiary_id='xxxxxxxxxxxx')\n\n# save certificate content to disk\nwith open('certificate.pdf', 'wb') as cert_file:\n    cert_file.write(cert_content)\n```\n\n### Contributions\n\nIssues and pull requests are welcome. Feel free to improve the package.\n\n# License:\n\nLGPL v3.0\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "LGPL v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cowin-async",
    "package_url": "https://pypi.org/project/cowin-async/",
    "platform": "",
    "project_url": "https://pypi.org/project/cowin-async/",
    "project_urls": {
      "Source": "https://gitlab.com/prashere/cowin-async"
    },
    "release_url": "https://pypi.org/project/cowin-async/1.1/",
    "requires_dist": [
      "httpx (==0.18.*)",
      "pytest-asyncio (==0.15.1) ; extra == 'develop'",
      "pytest-cov (==2.11.1) ; extra == 'develop'",
      "pytest-httpx (==0.12.0) ; extra == 'develop'",
      "pytest (==6.2.4) ; extra == 'develop'"
    ],
    "requires_python": ">=3.8",
    "summary": "Interact with CoWin APIs",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10634438,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cba2bf2bc32a6ab5b2eedf1021343f8c1fbabd8bc26cdc674cd41740d952e33",
          "md5": "23312592d01945ec0e78d1526c9e2908",
          "sha256": "15f017679640e3c4c67b2c9a5bfd3ace45dd9f3912bad7a0cbf63e54d4cfad56"
        },
        "downloads": -1,
        "filename": "cowin_async-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23312592d01945ec0e78d1526c9e2908",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 14482,
        "upload_time": "2021-05-10T15:24:56",
        "upload_time_iso_8601": "2021-05-10T15:24:56.922781Z",
        "url": "https://files.pythonhosted.org/packages/1c/ba/2bf2bc32a6ab5b2eedf1021343f8c1fbabd8bc26cdc674cd41740d952e33/cowin_async-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f4a9c9149c37be30be4149e0b80b64c915c2e4d43db178603ce746dc033a8c4",
          "md5": "662fd007fd189341844cf892be3de408",
          "sha256": "cc228c59b823ed540621610c11563eb1d5d5e2d9821c6deeb8533818ee0f838f"
        },
        "downloads": -1,
        "filename": "cowin-async-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "662fd007fd189341844cf892be3de408",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 4352,
        "upload_time": "2021-05-10T15:24:59",
        "upload_time_iso_8601": "2021-05-10T15:24:59.534792Z",
        "url": "https://files.pythonhosted.org/packages/2f/4a/9c9149c37be30be4149e0b80b64c915c2e4d43db178603ce746dc033a8c4/cowin-async-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "447c2e2fc23e9be21b4c4188fd988d9579eadada76f80d236a48a0570b6b08a9",
          "md5": "df87912f19b469a6ce3753eed546f1be",
          "sha256": "2d7172bd0cb69676094d7d88181640fdc139ccab1dda648232fc95ff34a180e0"
        },
        "downloads": -1,
        "filename": "cowin_async-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df87912f19b469a6ce3753eed546f1be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 14926,
        "upload_time": "2021-06-13T07:46:37",
        "upload_time_iso_8601": "2021-06-13T07:46:37.036528Z",
        "url": "https://files.pythonhosted.org/packages/44/7c/2e2fc23e9be21b4c4188fd988d9579eadada76f80d236a48a0570b6b08a9/cowin_async-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a2ac27f3beee42b8e2473dd37bb1a1aa121fe9719269372c2e9ed9c0e9adc3d",
          "md5": "cd9dd24011ea1a432567026fb777739e",
          "sha256": "09844bb425baf37436598cebba13fc8d4ab662938ea4d06a823bbdfe4a9e90a6"
        },
        "downloads": -1,
        "filename": "cowin-async-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cd9dd24011ea1a432567026fb777739e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 4860,
        "upload_time": "2021-06-13T07:46:39",
        "upload_time_iso_8601": "2021-06-13T07:46:39.065459Z",
        "url": "https://files.pythonhosted.org/packages/6a/2a/c27f3beee42b8e2473dd37bb1a1aa121fe9719269372c2e9ed9c0e9adc3d/cowin-async-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "447c2e2fc23e9be21b4c4188fd988d9579eadada76f80d236a48a0570b6b08a9",
        "md5": "df87912f19b469a6ce3753eed546f1be",
        "sha256": "2d7172bd0cb69676094d7d88181640fdc139ccab1dda648232fc95ff34a180e0"
      },
      "downloads": -1,
      "filename": "cowin_async-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "df87912f19b469a6ce3753eed546f1be",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 14926,
      "upload_time": "2021-06-13T07:46:37",
      "upload_time_iso_8601": "2021-06-13T07:46:37.036528Z",
      "url": "https://files.pythonhosted.org/packages/44/7c/2e2fc23e9be21b4c4188fd988d9579eadada76f80d236a48a0570b6b08a9/cowin_async-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a2ac27f3beee42b8e2473dd37bb1a1aa121fe9719269372c2e9ed9c0e9adc3d",
        "md5": "cd9dd24011ea1a432567026fb777739e",
        "sha256": "09844bb425baf37436598cebba13fc8d4ab662938ea4d06a823bbdfe4a9e90a6"
      },
      "downloads": -1,
      "filename": "cowin-async-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cd9dd24011ea1a432567026fb777739e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 4860,
      "upload_time": "2021-06-13T07:46:39",
      "upload_time_iso_8601": "2021-06-13T07:46:39.065459Z",
      "url": "https://files.pythonhosted.org/packages/6a/2a/c27f3beee42b8e2473dd37bb1a1aa121fe9719269372c2e9ed9c0e9adc3d/cowin-async-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}