{
  "info": {
    "author": "Changhyun Kwon",
    "author_email": "chkwon@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PyHygese\n\n[![Build Status](https://github.com/chkwon/PyHygese/workflows/CI/badge.svg?branch=master)](https://github.com/chkwon/PyHygese/actions/workflows/ci.yml?query=workflow%3ACI)\n[![codecov](https://codecov.io/gh/chkwon/PyHygese/branch/master/graph/badge.svg)](https://codecov.io/gh/chkwon/PyHygese)\n[![PyPI version](https://badge.fury.io/py/hygese.svg)](https://badge.fury.io/py/hygese)\n\n*This package is under active development. It can introduce breaking changes anytime. Please use it at your own risk.*\n\n**A solver for the Capacitated Vehicle Routing Problem (CVRP)**\n\nThis package provides a simple Python wrapper for the Hybrid Genetic Search solver for Capacitated Vehicle Routing Problems [(HGS-CVRP)](https://github.com/vidalt/HGS-CVRP).\n\nThe installation requires `gcc`, `make`, and `cmake` to build.\nOn Windows, for example, you can install them by `scoop install gcc make cmake` using [Scoop](scoop.sh).\nThen, install the PyHygese package:\n```\npip install hygese\n```\n<!-- ```\npython3 -m pip install git+https://github.com/chkwon/PyHygese\n``` -->\n\n\n## CVRP Example (random)\n```python\nimport numpy as np \nfrom hygese import AlgorithmParameters, Solver\n\nn = 20\nx = (np.random.rand(n) * 1000)\ny = (np.random.rand(n) * 1000)\n\n# Solver initialization\nap = AlgorithmParameters(timeLimit=3.2)  # seconds\nhgs_solver = Solver(parameters=ap, verbose=True)\n\n# data preparation\ndata = dict()\ndata['x_coordinates'] = x\ndata['y_coordinates'] = y\n\n# You may also supply distance_matrix instead of coordinates, or in addition to coordinates\n# If you supply distance_matrix, it will be used for cost calculation.\n# The additional coordinates will be helpful in speeding up the algorithm.\n# data['distance_matrix'] = dist_mtx\n\ndata['service_times'] = np.zeros(n)\ndemands = np.ones(n)\ndemands[0] = 0 # depot demand = 0\ndata['demands'] = demands\ndata['vehicle_capacity'] = np.ceil(n/3).astype(int)\ndata['num_vehicles'] = 3\ndata['depot'] = 0\n\nresult = hgs_solver.solve_cvrp(data)\nprint(result.cost)\nprint(result.routes)\n\n```\n\n**NOTE:** The `result.routes` above does not include the depot. All vehicles start from the depot and return to the depot.\n\n\n## another CVRP example\n\n```python\n# A CVRP from https://developers.google.com/optimization/routing/cvrp\nfrom hygese import AlgorithmParameters, Solver\nimport numpy as np \n\ndata = dict()\ndata['distance_matrix'] = [\n    [0, 548, 776, 696, 582, 274, 502, 194, 308, 194, 536, 502, 388, 354, 468, 776, 662],\n    [548, 0, 684, 308, 194, 502, 730, 354, 696, 742, 1084, 594, 480, 674, 1016, 868, 1210],\n    [776, 684, 0, 992, 878, 502, 274, 810, 468, 742, 400, 1278, 1164, 1130, 788, 1552, 754],\n    [696, 308, 992, 0, 114, 650, 878, 502, 844, 890, 1232, 514, 628, 822, 1164, 560, 1358],\n    [582, 194, 878, 114, 0, 536, 764, 388, 730, 776, 1118, 400, 514, 708, 1050, 674, 1244],\n    [274, 502, 502, 650, 536, 0, 228, 308, 194, 240, 582, 776, 662, 628, 514, 1050, 708],\n    [502, 730, 274, 878, 764, 228, 0, 536, 194, 468, 354, 1004, 890, 856, 514, 1278, 480],\n    [194, 354, 810, 502, 388, 308, 536, 0, 342, 388, 730, 468, 354, 320, 662, 742, 856],\n    [308, 696, 468, 844, 730, 194, 194, 342, 0, 274, 388, 810, 696, 662, 320, 1084, 514],\n    [194, 742, 742, 890, 776, 240, 468, 388, 274, 0, 342, 536, 422, 388, 274, 810, 468],\n    [536, 1084, 400, 1232, 1118, 582, 354, 730, 388, 342, 0, 878, 764, 730, 388, 1152, 354],\n    [502, 594, 1278, 514, 400, 776, 1004, 468, 810, 536, 878, 0, 114, 308, 650, 274, 844],\n    [388, 480, 1164, 628, 514, 662, 890, 354, 696, 422, 764, 114, 0, 194, 536, 388, 730],\n    [354, 674, 1130, 822, 708, 628, 856, 320, 662, 388, 730, 308, 194, 0, 342, 422, 536],\n    [468, 1016, 788, 1164, 1050, 514, 514, 662, 320, 274, 388, 650, 536, 342, 0, 764, 194],\n    [776, 868, 1552, 560, 674, 1050, 1278, 742, 1084, 810, 1152, 274, 388, 422, 764, 0, 798],\n    [662, 1210, 754, 1358, 1244, 708, 480, 856, 514, 468, 354, 844, 730, 536, 194, 798, 0]\n]\ndata['num_vehicles'] = 4\ndata['depot'] = 0\ndata['demands'] = [0, 1, 1, 2, 4, 2, 4, 8, 8, 1, 2, 1, 2, 4, 4, 8, 8]\ndata['vehicle_capacity'] = 15  # different from OR-Tools: homogeneous capacity\ndata['service_times'] = np.zeros(len(data['demands']))\n\n# Solver initialization\nap = AlgorithmParameters(timeLimit=3.2)  # seconds\nhgs_solver = Solver(parameters=ap, verbose=True)\n\n# Solve\nresult = hgs_solver.solve_cvrp(data)\nprint(result.cost)\nprint(result.routes)\n```\n\n\n## TSP example\n\n```python\n# A TSP example from https://developers.google.com/optimization/routing/tsp\nfrom hygese import AlgorithmParameters, Solver\n\ndata = dict()\ndata['distance_matrix'] = [\n    [0, 2451, 713, 1018, 1631, 1374, 2408, 213, 2571, 875, 1420, 2145, 1972],\n    [2451, 0, 1745, 1524, 831, 1240, 959, 2596, 403, 1589, 1374, 357, 579],\n    [713, 1745, 0, 355, 920, 803, 1737, 851, 1858, 262, 940, 1453, 1260],\n    [1018, 1524, 355, 0, 700, 862, 1395, 1123, 1584, 466, 1056, 1280, 987],\n    [1631, 831, 920, 700, 0, 663, 1021, 1769, 949, 796, 879, 586, 371],\n    [1374, 1240, 803, 862, 663, 0, 1681, 1551, 1765, 547, 225, 887, 999],\n    [2408, 959, 1737, 1395, 1021, 1681, 0, 2493, 678, 1724, 1891, 1114, 701],\n    [213, 2596, 851, 1123, 1769, 1551, 2493, 0, 2699, 1038, 1605, 2300, 2099],\n    [2571, 403, 1858, 1584, 949, 1765, 678, 2699, 0, 1744, 1645, 653, 600],\n    [875, 1589, 262, 466, 796, 547, 1724, 1038, 1744, 0, 679, 1272, 1162],\n    [1420, 1374, 940, 1056, 879, 225, 1891, 1605, 1645, 679, 0, 1017, 1200],\n    [2145, 357, 1453, 1280, 586, 887, 1114, 2300, 653, 1272, 1017, 0, 504],\n    [1972, 579, 1260, 987, 371, 999, 701, 2099, 600, 1162, 1200, 504, 0],\n] \n\n# Solver initialization\nap = AlgorithmParameters(timeLimit=0.8)  # seconds\nhgs_solver = Solver(parameters=ap, verbose=True)\n\n# Solve\nresult = hgs_solver.solve_tsp(data)\nprint(result.cost)\nprint(result.routes)\n```\n\n## Algorithm Parameters\nConfigurable algorithm parameters are defined in the `AlgorithmParameters` dataclass with default values:\n```python\n@dataclass\nclass AlgorithmParameters:\n    nbGranular: int = 20\n    mu: int = 25\n    lambda_: int = 40\n    nbElite: int = 4\n    nbClose: int = 5\n    targetFeasible: float = 0.2\n    seed: int = 1\n    nbIter: int = 20000\n    timeLimit: float = 0.0\n    useSwapStar: bool = True\n```\n\n## Others\nA Julia wrapper is available: [Hygese.jl](https://github.com/chkwon/Hygese.jl)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/chkwon/PyHygese",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hygese",
    "package_url": "https://pypi.org/project/hygese/",
    "platform": null,
    "project_url": "https://pypi.org/project/hygese/",
    "project_urls": {
      "Bug Tracker": "https://github.com/chkwon/PyHygese/issues",
      "Homepage": "https://github.com/chkwon/PyHygese"
    },
    "release_url": "https://pypi.org/project/hygese/0.0.0.8/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A Python wrapper for the HGS-CVRP solver",
    "version": "0.0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13766456,
  "releases": {
    "0.0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fc8743c7547c149411c50c52833b3125192e3d898cd1e6f2294e168972648ca",
          "md5": "6294278bbc05e8be6b22ef513ee69620",
          "sha256": "02c0310668a0ac20c102ad8856b215bf8d302eca8c454c9f0ae56218cbccb49a"
        },
        "downloads": -1,
        "filename": "hygese-0.0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "6294278bbc05e8be6b22ef513ee69620",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 63623,
        "upload_time": "2022-05-09T02:43:32",
        "upload_time_iso_8601": "2022-05-09T02:43:32.152449Z",
        "url": "https://files.pythonhosted.org/packages/8f/c8/743c7547c149411c50c52833b3125192e3d898cd1e6f2294e168972648ca/hygese-0.0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af5150f7c064f078ca13ddf1c2c1166f7181fdb13fe8a98a9be3bdbc0d384df0",
          "md5": "7a283e13d8e78e88c4dbad3a0212d38a",
          "sha256": "7bf6d1173bfefb02e72bb258816f1a53251331220e4e9078e990c4807ce34570"
        },
        "downloads": -1,
        "filename": "hygese-0.0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "7a283e13d8e78e88c4dbad3a0212d38a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 63655,
        "upload_time": "2022-05-10T02:29:42",
        "upload_time_iso_8601": "2022-05-10T02:29:42.404531Z",
        "url": "https://files.pythonhosted.org/packages/af/51/50f7c064f078ca13ddf1c2c1166f7181fdb13fe8a98a9be3bdbc0d384df0/hygese-0.0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af5150f7c064f078ca13ddf1c2c1166f7181fdb13fe8a98a9be3bdbc0d384df0",
        "md5": "7a283e13d8e78e88c4dbad3a0212d38a",
        "sha256": "7bf6d1173bfefb02e72bb258816f1a53251331220e4e9078e990c4807ce34570"
      },
      "downloads": -1,
      "filename": "hygese-0.0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "7a283e13d8e78e88c4dbad3a0212d38a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 63655,
      "upload_time": "2022-05-10T02:29:42",
      "upload_time_iso_8601": "2022-05-10T02:29:42.404531Z",
      "url": "https://files.pythonhosted.org/packages/af/51/50f7c064f078ca13ddf1c2c1166f7181fdb13fe8a98a9be3bdbc0d384df0/hygese-0.0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}