{
  "info": {
    "author": "hockchen",
    "author_email": "hock.chen@dipsci.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "**Liberty Metric Package**\n\n```\nfrom libMetric import liberty as lutil\nimport numpy as np\n```\n\n\nLiberty conversion\n```\n# load & convert CCS to JSON\nlnode = lutil.read_lib('ccs.lib')\nlutil.dump_json(lnode,out='ccs.json')\nlnode.keys()\n\n# load liberty from JSON\nlnode = lutil.load_json('ccs.json')\nlnode.keys()\n```\n\nTiming & power operation\n```\n# list cells in the liberary\n[v for v in lnode['cell']]\n\n# grab cell node by cell-name, e.g., 'ND2D1LVT'\ncnode = lnode['cell']['ND2D1LVT']\n\n# encapsulate all timing/power tables by timing-arc into a dataframe\nlutT = lutil.get_cell_timing(cnode,todf=True)\nlutP = lutil.get_cell_power(cnode,todf=True)\nlutT.index # enumerate all lookup tables encapsulated by timing-arc\nlutP.index # enumerate all lookup tables encapsulated by timing-arc\n```\n\nLookup table, interpolation & regression\n```\n# lookup table interpolation, e.g., timing-arc ('A1,ZN,', 'combinational', 'cell_rise')\nlut = lutT.loc[('A1,ZN,', 'combinational', 'cell_rise')]\ny,x,v = map(np.array,lut.values) # unpack values as numpy array\n\n# timing interpolation based on the specified transition & load\nlutil.table_lookup(lut,trans=0.0207,load=0.0010072,dflag=True)\n\n# LS regression & prediction\nlutil.lut2lsCoeff(lut.to_dict(),trans=0.03,load=0.0017,dflag=True)\n```\n\n\nData visualization API\n```\ncnode = lnode['cell']['DFCNQD1LVT']\n\nlutT = lutil.get_cell_timing(cnode,todf=False) # grab all timing tables in JSON\nlutil.plot_lut(lutT,keys=[('CP,Q,', 'rising_edge', 'cell_rise'),\n            ('CP,Q,', 'rising_edge', 'cell_fall')],xylabel=('load','trans'))\n\nlutil.plot_lut(lutT,keys=[('CP,D,CDN', 'setup_rising', 'rise_constraint'),\n            ('CP,D,CDN', 'hold_rising', 'rise_constraint')],xylabel=('clock','data'))\n```\n\n\n---\n\n**GRO Compiler Package**\n\n\n```\nfrom GRO import ROCompiler \nimport sys\n\nif __name__ == '__main__':\n    argv = sys.argv\nelse: # test mode\n    argv = ['C:/Home/Projects/Pypi/DTCO/GRO/gro.py',\n            '-config','C:/Home/Projects/Pypi/DTCO/GRO/demo/config_demo.f',\n            '-outDir','C:/Home/Projects/Pypi/DTCO/GRO/demo/RO_demo',\n            '-target','TT']\n\n# init GRO instance\ngro = ROCompiler()\n\n# parse command line\ncode,pdata = gro.parseArguments(argv)\n\n# update pdata from config\nif pdata.get('configFile')!=None:\n    cfg = gro.loadConfig(pdata['configFile'])\nif pdata.get('initProj')==True: # create RO project directory\n    gro.initProjectDirectory()\n    gro.initMakefile()\nif pdata.get('initLib')==True:\n    gro.initLibJSON() # build library JSON DB\nif pdata.get('buildRO')==True: # generate RO design and the successive DC, synthesis, vsim, SPICE environments\n    gro.commitConfig() # start from liberty JSON without initLibJSON\n    gro.compileGRO()\nif pdata.get('lpe')!=None:\n    gro.genSPICESim()\n```\n\n---\n\n**Design & Technology C-optimization**\n\nProcess Uniformity & OCV Analysis\n\nMachine-learning Framework\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dipsci/DTCO",
    "keywords": "DTCO,process monitor,liberty,metric,timing,EDA,physical design",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DTCO",
    "package_url": "https://pypi.org/project/DTCO/",
    "platform": null,
    "project_url": "https://pypi.org/project/DTCO/",
    "project_urls": {
      "Homepage": "https://github.com/dipsci/DTCO"
    },
    "release_url": "https://pypi.org/project/DTCO/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "DTCO Utility",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16046879,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "115d871a7c2c4f8a9287979205ddfb1779508ca95d21ca0e6113f5afd079c2a0",
          "md5": "7d419a7c83e03a5d1a74f1ad68873d24",
          "sha256": "27940b492a84b090f150cf4cc5711d93c832304dc74f23ad2d937ec127e815b0"
        },
        "downloads": -1,
        "filename": "DTCO-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d419a7c83e03a5d1a74f1ad68873d24",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22924,
        "upload_time": "2022-12-09T10:54:56",
        "upload_time_iso_8601": "2022-12-09T10:54:56.649590Z",
        "url": "https://files.pythonhosted.org/packages/11/5d/871a7c2c4f8a9287979205ddfb1779508ca95d21ca0e6113f5afd079c2a0/DTCO-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e05ff1e450e5603612b8f7c27e400bdcbb525a06578ae8bd25a9c85f0c1b47b0",
          "md5": "ee86f9d6ac65957475cf17396c223fd1",
          "sha256": "49de5c8491294247e0c77eb25c7362c0a653804f9ebe804c29026e08a996e4a9"
        },
        "downloads": -1,
        "filename": "DTCO-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ee86f9d6ac65957475cf17396c223fd1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22649,
        "upload_time": "2022-12-09T10:54:58",
        "upload_time_iso_8601": "2022-12-09T10:54:58.328801Z",
        "url": "https://files.pythonhosted.org/packages/e0/5f/f1e450e5603612b8f7c27e400bdcbb525a06578ae8bd25a9c85f0c1b47b0/DTCO-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "115d871a7c2c4f8a9287979205ddfb1779508ca95d21ca0e6113f5afd079c2a0",
        "md5": "7d419a7c83e03a5d1a74f1ad68873d24",
        "sha256": "27940b492a84b090f150cf4cc5711d93c832304dc74f23ad2d937ec127e815b0"
      },
      "downloads": -1,
      "filename": "DTCO-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7d419a7c83e03a5d1a74f1ad68873d24",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22924,
      "upload_time": "2022-12-09T10:54:56",
      "upload_time_iso_8601": "2022-12-09T10:54:56.649590Z",
      "url": "https://files.pythonhosted.org/packages/11/5d/871a7c2c4f8a9287979205ddfb1779508ca95d21ca0e6113f5afd079c2a0/DTCO-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e05ff1e450e5603612b8f7c27e400bdcbb525a06578ae8bd25a9c85f0c1b47b0",
        "md5": "ee86f9d6ac65957475cf17396c223fd1",
        "sha256": "49de5c8491294247e0c77eb25c7362c0a653804f9ebe804c29026e08a996e4a9"
      },
      "downloads": -1,
      "filename": "DTCO-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ee86f9d6ac65957475cf17396c223fd1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22649,
      "upload_time": "2022-12-09T10:54:58",
      "upload_time_iso_8601": "2022-12-09T10:54:58.328801Z",
      "url": "https://files.pythonhosted.org/packages/e0/5f/f1e450e5603612b8f7c27e400bdcbb525a06578ae8bd25a9c85f0c1b47b0/DTCO-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}