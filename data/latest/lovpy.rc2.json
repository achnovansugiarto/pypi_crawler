{
  "info": {
    "author": "Dimitrios S. Karageorgiou",
    "author_email": "karageods@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Lovpy\r\n#### A simple-to-use, yet powerful, logic verification library for Python.\r\n\r\n## Description\r\nLovpy is a python library for performing logic verification at runtime. Logic verification defines\r\na broad scientific area ranging from runtime verification to enforcement of good development practices, by\r\nverifying the expected behavior of the program. Lovpy utilizes Gherkin, the popular, simple and\r\nintuitive specifications language of Cucumber, for specifying that expected behavior. Using an innovative\r\nverification engine, assisted by the power of deep graph neural networks, it is able to \r\ndetect many kinds of violations. Lovpy not only reports the line of code where a \r\nviolation happened, but is also able to report the last line which was provably correct. Each reported violation \r\nis based on strong mathematical proofs, so a guarantee is provided for zero false reports.\r\nFinally, respecting the moto *simplicity above all*, using Lovpy requires no code changes at all. \r\n\r\n### Features\r\n- No code modifications required to enable verification.\r\n- Specifications in an easy-to-learn and intuitive language (Gherkin).\r\n- Never reports a violation that does not exist (0% false-negatives).\r\n- Reports violations before they happen (prevent side-effects).\r\n- Reports the line of code where violation detected.\r\n- Reports the last provably correct line of code (use for debugging).\r\n\r\nA quick scientific presentation of lovpy is [available here](https://www.slideshare.net/isselgroup/python-metaprogramming-in-linear-time-language-for-automated-runtime-verification-with-graph-neural-networks)!\r\n\r\nA thorough scientific presentation is also [available here](https://ikee.lib.auth.gr/record/335121/?ln=en) (currently in Greek, due to requirements of the university).\r\n\r\n## Quick Start\r\nLovpy is available at PyPI and can be installed as following:\r\n\r\n- `pip install lovpy`\r\n\r\nThen, in order to verify that a python program conforms to a set of specifications written in Gherkin:\r\n1. Place the `.gherkin` specifications file under current working directory.\r\n2. Run any script like: `py -m lovpy <script.py> <args>`\r\n\r\nIf a violation is detected, an appropriate exception is raised. Also, if applicable, the last provably correct line of code is reported, requiring from developers to only check the intermediate code in order to fix the bug.\r\n![Exception raised when detected a violation.](https://user-images.githubusercontent.com/33910136/148264808-37ad60c9-63d0-4cf3-a5a6-bbeb5c776b4a.png)\r\n\r\n## Verification engines\r\nInternally, lovpy converts everything into theorems to be mathematically proved. Proof is performed by a novel theorem proving engine, based on *temporal graphs*. Currently, many different verification engines co-exist:\r\n\r\n- **Basic**: Utilizes heuristic rules in order to prove violations. This is the fastest running engine, able to prove a great amount of violations, requiring no trained models at all.\r\n- **GNN**: Utilizes deep graph neural network models in order to prove violations.\r\n- **MLP**: Utlizes simple neural models based on multi-layer perceptrons for the proving process. It is mostly used as a reference baseline for the capabality of the system.\r\n- **Hybrid**: The most powerfull verification engine currently contained in lovpy. Utilizes both GNN models and heuristic rules in order to prove violations.\r\n\r\nIn order to use the three neural verification engines, `tensorflow` and `stellargraph` packages are required. By default, lovpy does not install them, so only the basic engine is immediately available. In order to install them, use the following `pip` command:\r\n\r\n- `pip install tensorflow stellargraph`\r\n\r\n## Models training\r\n\r\nIn order to fully utilize the power of neural provers, corresponding models should be trained beforehand. In order te perform model training, the following command can be utilized:\r\n- `py -m lovpy -t <all | simple | gnn>`\r\nIt trains graph neural networks based models when `gnn` argument is provided and multi-layer perceptron based ones when `simple` is provided. In order to train both, just provide the `all` argument.\r\n\r\nLocation of models can be defined by the user through setting `LOVPY_MODELS_DIR = <dir>` environmental variable. It defaults to a directory named `.lovpy` under system's home directory.\r\n\r\nIt is also possible to programmatically trigger training of models if they do not exist. This is mostly useful when integrating lovpy into 3rd party libraries.\r\n```\r\nfrom lovpy import load_or_train()\r\nload_or_train()\r\n```\r\n\r\n## Exclude source files from verification\r\nLovpy allows control of which python source files to be verified through the use of `.lovpyignore` files. Inspired by gitignore files, they are used in quite a similar way. All you have to do is to place a file named `.lovpyignore` under any directory of your project and inside it define files or folders to be excluded. Paths are resolved relatively to the location of `.lovpyignore` file. `*` and `**` can be used as wildcards in they same way they are used in `glob` module. An example `.lovpyignore` file is presented below:\r\n```\r\nsource\r\ntests\r\nvenv\r\nbin/*.py\r\n```\r\n\r\n## Evaluation\r\n\r\nEvaluation of the library can be performed either against included code examples or against synthetically generated theorems using the following command:\r\n- `py -m lovpy -e <examples | synthetics>`\r\n\r\n## Supported Environmental Variables:\r\n- `LOVPY_ENGINE = BASIC | MLP | GNN | HYBRID` : Explicitly enables a specific verification engine.  \r\n- `LOVPY_DISABLE_GPU = 0 | 1` : When set to `1` disables GPU usage by tensorflow.\r\n- `LOVPY_SESSION_NAME = <name>` : Sets a custom name for current session.\r\n- `LOVPY_TEMP_DIR = <dir>` : Directory where lovpy will store all data and reports of a session.\r\n- `LOVPY_MODELS_DIR = <dir>` : Directory which lovpy will use for storing and loading models. \r\n- `LOVPY_DEV_MODE = 0 | 1` : When set to `1` enables development mode.\r\n\r\n## Complete reference of supported Gherkin commands\r\n[TODO]\r\n\r\n## License:\r\nThis project is licensed under Apache License 2.0. A copy of this license is contained in current project under `LICENSE` file. It applies to all files in this project whether or not it is stated in them.\r\n\r\nCopyright 2021 | Dimitrios S. Karageorgiou\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dkarageo/lovpy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lovpy",
    "package_url": "https://pypi.org/project/lovpy/",
    "platform": null,
    "project_url": "https://pypi.org/project/lovpy/",
    "project_urls": {
      "Bug Tracker": "https://github.com/dkarageo/lovpy/issues",
      "Homepage": "https://github.com/dkarageo/lovpy"
    },
    "release_url": "https://pypi.org/project/lovpy/0.1.0/",
    "requires_dist": [
      "networkx",
      "matplotlib",
      "numpy",
      "pandas",
      "sklearn"
    ],
    "requires_python": ">=3.5",
    "summary": "A simple-to-use logic verification library.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15987616,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeb8a4a4b6a82a79b9f23500fd77da769d41bafdd4b88b5e0556b0404d1a2a24",
          "md5": "05ac8ede93a96af39283f593ff882d03",
          "sha256": "cdba01437151ff4ae5d1b71b784f95e14b918095a1abc8cc458600318dae5b09"
        },
        "downloads": -1,
        "filename": "lovpy-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05ac8ede93a96af39283f593ff882d03",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 94377,
        "upload_time": "2021-09-30T23:22:33",
        "upload_time_iso_8601": "2021-09-30T23:22:33.728881Z",
        "url": "https://files.pythonhosted.org/packages/ae/b8/a4a4b6a82a79b9f23500fd77da769d41bafdd4b88b5e0556b0404d1a2a24/lovpy-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6850c99956c03ca4777f80d0826ccebac0bf7f559fece351b44df726a462ecd4",
          "md5": "f4eddae346a9da0b6a6757492f52aacf",
          "sha256": "e885710160bc5bcdc459654a8cdc72aa8ecde22b071f98407303f2a89460b3e9"
        },
        "downloads": -1,
        "filename": "lovpy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f4eddae346a9da0b6a6757492f52aacf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 77626,
        "upload_time": "2021-09-30T23:22:41",
        "upload_time_iso_8601": "2021-09-30T23:22:41.421634Z",
        "url": "https://files.pythonhosted.org/packages/68/50/c99956c03ca4777f80d0826ccebac0bf7f559fece351b44df726a462ecd4/lovpy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "628ed882637a9ade94b5018be8a0a52492f2c1b0029de826d23c4b11c65459e9",
          "md5": "e094f5fbf699f2d0109a0d337a8178e8",
          "sha256": "3d45ea2e25f8a2f7a5bd2451832eb813d9c5e50e5824536b6a0c6141e1ddbbf8"
        },
        "downloads": -1,
        "filename": "lovpy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e094f5fbf699f2d0109a0d337a8178e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 104484,
        "upload_time": "2022-12-04T19:06:41",
        "upload_time_iso_8601": "2022-12-04T19:06:41.867692Z",
        "url": "https://files.pythonhosted.org/packages/62/8e/d882637a9ade94b5018be8a0a52492f2c1b0029de826d23c4b11c65459e9/lovpy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a49c89f97cda94b17b1a307b0a35b246f940eeacce5b8ec8c58a81f5cb4d977",
          "md5": "d7d63b3f639ada68a181fe45b9831a92",
          "sha256": "400e6bc6e4222f2ddd395646709b9df3b3389c9d37b161c65753c72e0551a2da"
        },
        "downloads": -1,
        "filename": "lovpy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d7d63b3f639ada68a181fe45b9831a92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 88545,
        "upload_time": "2022-12-04T19:06:43",
        "upload_time_iso_8601": "2022-12-04T19:06:43.812039Z",
        "url": "https://files.pythonhosted.org/packages/0a/49/c89f97cda94b17b1a307b0a35b246f940eeacce5b8ec8c58a81f5cb4d977/lovpy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "628ed882637a9ade94b5018be8a0a52492f2c1b0029de826d23c4b11c65459e9",
        "md5": "e094f5fbf699f2d0109a0d337a8178e8",
        "sha256": "3d45ea2e25f8a2f7a5bd2451832eb813d9c5e50e5824536b6a0c6141e1ddbbf8"
      },
      "downloads": -1,
      "filename": "lovpy-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e094f5fbf699f2d0109a0d337a8178e8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 104484,
      "upload_time": "2022-12-04T19:06:41",
      "upload_time_iso_8601": "2022-12-04T19:06:41.867692Z",
      "url": "https://files.pythonhosted.org/packages/62/8e/d882637a9ade94b5018be8a0a52492f2c1b0029de826d23c4b11c65459e9/lovpy-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a49c89f97cda94b17b1a307b0a35b246f940eeacce5b8ec8c58a81f5cb4d977",
        "md5": "d7d63b3f639ada68a181fe45b9831a92",
        "sha256": "400e6bc6e4222f2ddd395646709b9df3b3389c9d37b161c65753c72e0551a2da"
      },
      "downloads": -1,
      "filename": "lovpy-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d7d63b3f639ada68a181fe45b9831a92",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 88545,
      "upload_time": "2022-12-04T19:06:43",
      "upload_time_iso_8601": "2022-12-04T19:06:43.812039Z",
      "url": "https://files.pythonhosted.org/packages/0a/49/c89f97cda94b17b1a307b0a35b246f940eeacce5b8ec8c58a81f5cb4d977/lovpy-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}