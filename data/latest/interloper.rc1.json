{
  "info": {
    "author": "Adam Sherwood",
    "author_email": "theherk@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# interloper\n\nTool to run ecs execute command in lambda. Of course, locally you can do this via the session manager plugin, but it you want to do it in lambda, it is a bit more complex.\n\nMore documentation is required.\n\n## Features\n\n- Run simple commands or full scripts.\n- Pass arguments into those scripts.\n- Get output back in python.\n\n## Limitations\n\nHere are some of the current limitations.\n\n- Script output is truncated if very long.\n- Testing shell is present, but still must be completed.\n    + Still needs started really.\n    + Need to mock away the websocket bits.\n- This documentation.\n\n# Usage\n\nFor starters, one must [enable ECS exec](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-exec.html#ecs-exec-enabling-and-using).\n\n## Locally\n\n    ./interloper.py [event]\n\n## Lambda\n\nYou can import and use the provided handlers for simple operations.\n\n### cmd_handler\n\n``` python\nfrom interloper import cmd_handler\n```\n\n... Actually, that should be sufficient. Just set the handler to `main.cmd_handler` or whatever your module is called in place of main.\n\n### script_handler\n\n``` python\nfrom interloper import script_handler\n```\n\nThen create an interloper.sh that suits your needs.\n\n### Custom Handler and Script\n\nConsider needing to generate heap dumps and thread dumps from java containers. You could do so with the following.\n\n#### dumper.sh\n\n``` sh\n#!/usr/bin/env sh\n\ncleanup () {\n    rm -rf /tmp/dumps\n    mkdir -p /tmp/dumps\n}\n\nverify_awscli () {\n    if which aws >/dev/null\n    then\n        echo \"awscli found; proceeding\"\n        return 0\n    else\n        echo \"awscli not found; can't proceed\"\n        return 1\n    fi\n}\n\nverify_jattach () {\n    if which jattach >/dev/null\n    then\n        echo \"jattach found; proceeding\"\n        return 0\n    else\n        echo \"jattach not installed; installing\"\n        if which apk >/dev/null\n        then\n            apk add --no-cache jattach --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/\n            return 0\n        else\n            echo \"apk not found; can't proceed\"\n            return 1\n        fi\n    fi\n}\n\ncleanup\n\ncase \"$1\" in\n    heap)\n        if verify_jattach; then jattach $(pgrep java) dumpheap /tmp/dumps/heap.hprof; fi\n        if verify_awscli; then aws s3 cp /tmp/dumps/heap.hprof s3://\"$2\"; fi\n        ;;\n    threads)\n        if verify_jattach; then jattach $(pgrep java) threaddump > /tmp/dumps/threads; fi\n        if verify_awscli; then aws s3 cp /tmp/dumps/threads s3://\"$2\"; fi\n        ;;\n    *)\n        echo \"usage: $0 {heap|threads} {key}\"\nesac\n```\n\n#### handler\n\n``` python\nimport logging\nimport time\n\nimport interloper\n\n\nLOG = logging.getLogger()\nLOG.setLevel(logging.INFO)\n\n\ndef lambda_handler(event: dict, context) -> None:\n    LOG.debug(\"event received: %s\", event)\n    input = interloper.Input(**event)\n    key = \"{}/{}/{}-{}\".format(input.cluster, input.task, input.cmd, int(time.time()))\n    if input.cmd == \"heap\":\n        key += \".hprof\"\n    output = interloper.Interloper(\n        input.task, cluster=input.cluster, container=input.container\n    ).script(\"dumper.sh\", [input.cmd, key])\n    LOG.info(output)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/theherk/interloper",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "interloper",
    "package_url": "https://pypi.org/project/interloper/",
    "platform": "",
    "project_url": "https://pypi.org/project/interloper/",
    "project_urls": {
      "Bug Tracker": "https://github.com/theherk/interloper/issues",
      "Homepage": "https://github.com/theherk/interloper"
    },
    "release_url": "https://pypi.org/project/interloper/0.1.0/",
    "requires_dist": [
      "boto3",
      "construct",
      "websocket-client"
    ],
    "requires_python": ">=3.7",
    "summary": "Tool to run ecs execute command in lambda.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12562660,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b5f276da3a58b5144a163f43ee59313c52724b59d9e89186208363436464aa3",
          "md5": "04b7f8eed41e83877c027e122459f928",
          "sha256": "e44e2a222130ddae1b4a318f5f124cd7323d8ad19aafd74c61d3b48524947e95"
        },
        "downloads": -1,
        "filename": "interloper-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04b7f8eed41e83877c027e122459f928",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4875,
        "upload_time": "2022-01-13T15:37:11",
        "upload_time_iso_8601": "2022-01-13T15:37:11.075554Z",
        "url": "https://files.pythonhosted.org/packages/2b/5f/276da3a58b5144a163f43ee59313c52724b59d9e89186208363436464aa3/interloper-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e53baa718f7e1038ee93033d41e2dc9b93bfeba7ba3a7b0e7b110bdc07eb308",
          "md5": "9bab1b2eb9223f5db4738b5c5d5bf809",
          "sha256": "3e01586a17feda47d1b23365c1f97680d65196db610258c61dc4dfbc14dcce94"
        },
        "downloads": -1,
        "filename": "interloper-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9bab1b2eb9223f5db4738b5c5d5bf809",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4573,
        "upload_time": "2022-01-13T15:37:12",
        "upload_time_iso_8601": "2022-01-13T15:37:12.646926Z",
        "url": "https://files.pythonhosted.org/packages/5e/53/baa718f7e1038ee93033d41e2dc9b93bfeba7ba3a7b0e7b110bdc07eb308/interloper-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b5f276da3a58b5144a163f43ee59313c52724b59d9e89186208363436464aa3",
        "md5": "04b7f8eed41e83877c027e122459f928",
        "sha256": "e44e2a222130ddae1b4a318f5f124cd7323d8ad19aafd74c61d3b48524947e95"
      },
      "downloads": -1,
      "filename": "interloper-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "04b7f8eed41e83877c027e122459f928",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4875,
      "upload_time": "2022-01-13T15:37:11",
      "upload_time_iso_8601": "2022-01-13T15:37:11.075554Z",
      "url": "https://files.pythonhosted.org/packages/2b/5f/276da3a58b5144a163f43ee59313c52724b59d9e89186208363436464aa3/interloper-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5e53baa718f7e1038ee93033d41e2dc9b93bfeba7ba3a7b0e7b110bdc07eb308",
        "md5": "9bab1b2eb9223f5db4738b5c5d5bf809",
        "sha256": "3e01586a17feda47d1b23365c1f97680d65196db610258c61dc4dfbc14dcce94"
      },
      "downloads": -1,
      "filename": "interloper-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9bab1b2eb9223f5db4738b5c5d5bf809",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4573,
      "upload_time": "2022-01-13T15:37:12",
      "upload_time_iso_8601": "2022-01-13T15:37:12.646926Z",
      "url": "https://files.pythonhosted.org/packages/5e/53/baa718f7e1038ee93033d41e2dc9b93bfeba7ba3a7b0e7b110bdc07eb308/interloper-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}