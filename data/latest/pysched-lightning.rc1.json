{
  "info": {
    "author": "Yi Zhang",
    "author_email": "yizhang.dev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# PySched-Lightning\n\nPySched-Lightning is\n\n* a lightweight task queue scheduler that runs in the background\n* written in [Python (3.7+) Standard Library](https://docs.python.org/3.7/library/)\n\n\n\nPySched-Lightning supports to\n\n* schedule task execution after a given delay\n* schedule recurring task execution\n* prioritize tasks\n* execute tasks using thread pool or process pool\n* run in the background\n* use `@task` decorator to define task\n\n\n\n## Quickstart\n\nDefine your function, `now(cost)` as an example:\n\n```python\nimport time\n\ndef now(cost=1):\n    time.sleep(cost)\n    print( time.strftime('%Y-%m-%d %H:%M:%S %Z', time.localtime()) )\n\ndef utcnow(cost=1):\n    time.sleep(cost)\n    print( time.strftime('%Y-%m-%d %H:%M:%S %Z', time.gmtime()) )\n```\n\nCreate a PySched-Lightning scheduler, then enqueue your tasks and start the scheduler, **or you could start the scheduler first then enqueue your tasks**:\n\n```python\nimport pysched-lightning\n\nsched = pysched-lightning.Scheduler()\nsched.delay(trigger='recur', interval=3, priority=2, fn=now, args=(1,))\nsched.delay(trigger='recur', interval=2, priority=1, fn=utcnow, args=(1,))\nsched.start()\n```\n\nShutdown the scheduler:\n\n```python\nsched.shutdown(wait=True)\n```\n\n\n\n### Play with the `@task` decorator\n\nUse `@task` decorator to define your function, then schedule it and start the scheduler, `now(cost)` as an example:\n\n```python\nimport pysched-lightning\n\nsched = pysched-lightning.Scheduler()\nsched.start()\n\nimport time\n\n@pysched-lightning.task(sched, 'recur', 3, 2)\ndef now(cost=1):\n    time.sleep(cost)\n    print( time.strftime('%Y-%m-%d %H:%M:%S %Z', time.localtime()) )\n\nnow.delay(cost=1)    \n\n@pysched-lightning.task(sched, 'recur', 2, 1)\ndef utcnow(cost=1):\n    time.sleep(cost)\n    print( time.strftime('%Y-%m-%d %H:%M:%S %Z', time.gmtime()) )\n\nutcnow.delay(cost=1)\n```\n\nWhen you'd like to cancel the recurring execution, shutdown the scheduler as usual:\n\n```python\nsched.shutdown(wait=True)\n```\n\n\n\n### Install PySched-Lightning\n\n```bash\n$ pip install pysched-lightning\n```\n\n\n\n## Documentation\n\n### `ThreadPoolExecutor`/`ProcessPoolExecutor`\n\n```python\nclass pysched-lightning.ThreadPoolExecutor/ProcessPoolExecutor(max_workers=<num_cpu_cores>)\n```\n\n`max_worker` is set for `ThreadPoolExecutor`/`ProcessPoolExecutor`, default value is the number of CPU cores.\n\n* `future`\n\n  [`Future`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future) object\n\n* `run(fn, args=(), kwargs={})`\n\n  Execute the function using thread pool or process pool.\n\n* `shutdown(wait=True)`\n\n  Shutdown the executor.\n\n\n\n### `Scheduler`\n\n```python\nclass pysched-lightning.Scheduler(executor=ThreadPoolExecutor(), timefunc=time.monotonic, delayfunc=time.sleep)\n```\n\nDefault executor is a thread pool. `timefunc` should be callable without arguments, and return a number, the time at the moment. `delayfunc` should be callable with one argument, compatible with the output of `timefunc`, and should delay that many time units (seconds as default time unit).\n\n* `stopped`\n\n  The scheduler is stopped or not, `True` (default) or `False`.\n\n* `task`\n\n  The task id, `Task` object (`collections.namedtuple('Task', 'trigger, interval, time, priority, fn, args, kwargs, id')`) dictionary, `{}` as default\n\n* `result`\n\n  The task id, result (`{'timestamp': timestamp, 'task': task, 'future': future}`) dictionary, `{}` as default.\n\n* `delay(trigger, interval, priority, fn, args=(), kwargs={})`\n\n  `trigger` must be `'cron'` or `'recur'`. Enqueue the task, schedule the execution and return a corresponding id.\n\n* `start()`\n\n  Let scheduler start in the background.\n\n* `cancel(task_id)`\n\n  Cancel a certain task with its id.\n\n* `shutdown(wait=True)`\n\n  Shutdown the scheduler.\n\n\n\n### `task`\n\n```python\nclass pysched-lightning.task(scheduler, trigger, interval, priority)\n```\n\n`trigger` must be `'cron'` or `'recur'`.\n\n* Use `@task` decorator to define your function, then enqueue it:\n\n  ```python\n  @task(scheduler, trigger, interval, priority)\n  def fn(args, kwargs):\n      pass\n\n  fn.delay(*args, **kwargs)\n  ```\n\n  `fn.delay(*args, **kwargs)`  is equivaluent to `sheduler.delay(trigger, interval, priority, fn, args, kwargs)` using normal function definition.\n\n\n\n## Related Projects\n\n* [Lib/sched.py](https://github.com/python/cpython/blob/3.7/Lib/sched.py) ([`sched` - Event scheduler](https://docs.python.org/3.7/library/sched.html))\n* [APScheduler](https://github.com/agronholm/apscheduler) ([apscheduler.readthedocs.org](http://apscheduler.readthedocs.org))\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/yzhang-dev/PySched-Lightning",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yzhang-dev/PySched-Lightning",
    "keywords": "timer,scheduler,job-queue,task-queue,delayed-jobsbackground-jobs,background-thread,tasks,background",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PySched-Lightning",
    "package_url": "https://pypi.org/project/PySched-Lightning/",
    "platform": "",
    "project_url": "https://pypi.org/project/PySched-Lightning/",
    "project_urls": {
      "Download": "https://github.com/yzhang-dev/PySched-Lightning",
      "Homepage": "https://github.com/yzhang-dev/PySched-Lightning"
    },
    "release_url": "https://pypi.org/project/PySched-Lightning/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A lightweight task queue scheduler that runs in the background",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8902269,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "938dc3c59aec11c1abca71b982c94cdf84e6b56fb83675038aec30981fd0f54c",
          "md5": "f8de7743f285337722f7a899df9a3f1d",
          "sha256": "a299cd24f4c34871f1c1a3c195aed833a9c97421b8cf86f4eaf27102a7a33779"
        },
        "downloads": -1,
        "filename": "PySched_Lightning-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8de7743f285337722f7a899df9a3f1d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8213,
        "upload_time": "2020-12-15T07:05:33",
        "upload_time_iso_8601": "2020-12-15T07:05:33.135836Z",
        "url": "https://files.pythonhosted.org/packages/93/8d/c3c59aec11c1abca71b982c94cdf84e6b56fb83675038aec30981fd0f54c/PySched_Lightning-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a45f3bef1aecb444d893bd082710c9bd3a327f0d3247985e8c22d23edcf8eba",
          "md5": "41bf38b488b04c6cac457c7177b56a2b",
          "sha256": "ca25680c8f7ab0224910aafceeacf61ea78e4058a3203984fb49deafee739810"
        },
        "downloads": -1,
        "filename": "PySched-Lightning-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "41bf38b488b04c6cac457c7177b56a2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5799,
        "upload_time": "2020-12-15T07:05:34",
        "upload_time_iso_8601": "2020-12-15T07:05:34.528352Z",
        "url": "https://files.pythonhosted.org/packages/8a/45/f3bef1aecb444d893bd082710c9bd3a327f0d3247985e8c22d23edcf8eba/PySched-Lightning-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "938dc3c59aec11c1abca71b982c94cdf84e6b56fb83675038aec30981fd0f54c",
        "md5": "f8de7743f285337722f7a899df9a3f1d",
        "sha256": "a299cd24f4c34871f1c1a3c195aed833a9c97421b8cf86f4eaf27102a7a33779"
      },
      "downloads": -1,
      "filename": "PySched_Lightning-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f8de7743f285337722f7a899df9a3f1d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8213,
      "upload_time": "2020-12-15T07:05:33",
      "upload_time_iso_8601": "2020-12-15T07:05:33.135836Z",
      "url": "https://files.pythonhosted.org/packages/93/8d/c3c59aec11c1abca71b982c94cdf84e6b56fb83675038aec30981fd0f54c/PySched_Lightning-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a45f3bef1aecb444d893bd082710c9bd3a327f0d3247985e8c22d23edcf8eba",
        "md5": "41bf38b488b04c6cac457c7177b56a2b",
        "sha256": "ca25680c8f7ab0224910aafceeacf61ea78e4058a3203984fb49deafee739810"
      },
      "downloads": -1,
      "filename": "PySched-Lightning-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "41bf38b488b04c6cac457c7177b56a2b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 5799,
      "upload_time": "2020-12-15T07:05:34",
      "upload_time_iso_8601": "2020-12-15T07:05:34.528352Z",
      "url": "https://files.pythonhosted.org/packages/8a/45/f3bef1aecb444d893bd082710c9bd3a327f0d3247985e8c22d23edcf8eba/PySched-Lightning-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}