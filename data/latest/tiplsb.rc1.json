{
  "info": {
    "author": "Bruno González",
    "author_email": "brunogllaga@icloud.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# TIPLSB: Firmas incrementales en imágenes basado en LSB y funciones HASH\n\nTIPLSB (Trace Image Path with LSB) es un algoritmo el cual permite almacenar en una única imagen un\nnúmero finito de firmas, estas firmas denotan las distintas \"manos\" por las cuales ha\npasado una imagen a lo largo del tiempo.\n\nLas distintas firmas que contiene una imagen se encuentran almacenadas de forma\nincremental, permitiendo por tanto obtener el recorrido lineal que ha tenido la imagen.\nEste recorrido debe ser algo confidencial, por lo que no\ncualquier usuario podrá obtenerlo.\n\nEste algoritmo implementa un método con el cual únicamente aquellos usuarios\nque haya realizado una firma en la imagen podrán obtener el recorrido. Este siempre\nserá de las firmas posteriores a la suya, siendo por tanto el autor original el único que\npueda obtener el recorrido completo.\n\nLa realización de este proyecto surge de la asignatura de **Trabajo de Fin de\nGrado** para la obtención del título en el grado de **Ingeniería Informática - Tecnologías\nInformáticas** en la **Universidad de Sevilla**.\n\n## Autor\n* **Bruno González** - [brunogonzalezlla](https://github.com/brunogonzalezlla/)\n\n## Tutores\n* **Félix Gudiel**\n* **Victor Álvarez**\n\n## Tabla de contenido\n  * [Instalación](#Instalacion)\n  * [Guía de uso](#Guia)\n    * [Clase tiplsb](#Clasetiplsb)\n      * [Ejemplo](#ClasetiplsbEjemplo)\n    * [Función tip_decode](#Funciontipdecode)\n      * [Ejemplo](#FunciontipdecodeEjemplo)\n  * [Integración con Django](#Integracion)\n    * [views.py](#Views)\n    * [urls.py](#Urls)\n      \n\n<a name = \"Instalacion\"></a>\n## Instalación\nEste proyecto está disponible en [PyPI](https://pypi.org/project/TIPLSB/) y pueden instalarlo con:\n\n    pip install TIPLSB\n\nDe manera alternativa, puedes instalarlo directamente del repositorio:\n\n    git clone https://github.com/brunogonzalezlla/TIPLSBlib\n    cd TIPLSBlib\n    python3 setup.py install\n\n\n<a name = \"Guia\"></a>\n## Guía de uso\n\nLos dos elementos principales de la libería son los siguiente:\n\n* Clase **tiplsb**: esta es la clase principal de la librería. Mediante ella se realizarán las diferentes firmas en \nlas imágenes y permitirá la consulta de los detallen asociados.\n\n* Función **tip_decode** : mediante esta función obtendremos el recorrido (firmas realizadas) en una imagen.\n\n<a name = \"Clasetiplsb\"></a>\n### Clase tiplsb\n\nLa clase **tiplsb** está compuesta por los siguiente parámetros de entrada\n\n    tiplsb(path, hash='sha256', version='0.0.1', redundancy=5)\n\nEl primer parámetro a establecer en la creación de un objeto de tipo **tiplsb** es _path_, \nen ella estableceremos la ruta de la imagen que queremos utilizar.\n\nSiempre que creemos un objeto del tipo **tiplsb** se comprobará de manera automática\nsi la imagen introducida ya se encuentra inicializada.\n\nConsideramos que una imagen se encuentra inicializada cuando ya se ha realizado una firma\nsobre ella.\n\nEs por ello que la clase podrá recibir como entrada tres parámetros extras, los cuales si\nla imagen no se encontrase ya inicializada serían utilizados para su configuración. \nEstos tres parámetros de configuración serían los siguientes:\n\n* **hash**: el algoritmo que realiza las firmas hace uso de una función hash. Por defecto\nse usa SHA-256, sin embargo la clase permite la utilización de otras funciones:\n  * SHA-1: Se deberá establecer 'sha1'.\n  * SHA224: Se deberá establecer 'sha224'.\n  * SHA256: Se deberá establecer 'sha256'.\n  * SHA-384: Se deberá establecer 'sha384'.\n  * SHA-512: Se deberá establecer 'sha512'.\n  * SHA-256 (Por defecto): Se deberá establecer 'sha256'.\n\n\n* **version**: el número de versión utilizado para realizar firmas irá incrustado en la\npropia imagen. Debido a los posibles cambios que pueda sufrir la librería se permitirá \nla modificación de este parámetro. Por defecto utilizará la versión más reciente.\n\n\n* **redundancy**: para evitar posibles perdidas de datos cada vez que se realice\nuna firma esta será replicada un número _n_ de veces. Mediante el parámetro **redundancy**\npodremos establecer esta _n_. Por defecto en esta versión estará inicializado a 5.\n\n\nUna vez que dispongamos de un objeto creado correctamente podremos realizar las siguientes\nacciones:\n\n* objeto.**add(author, platform, date=False)**: este método permitirá realizar una firma\nsobre la imagen establecida en la creación del objeto. Recibirá los siguiente parámetros:\n  * **author**: Se indicará el nombre, correo, id... del usuario que va a realizar la firma.\n  * **platform**: Se indicará la plataforma en la cual se ha realizado la firma.\n  * **date**: Por defecto cuando se realiza una firma se establece la fecha actual. Sin embargo\n  se permite que establecer una fecha que la sustituya.\n  \n\n* objeto.**save(path='')**: una vez que hemos realizado una firma podremos generar la\ncorrespondiente imagen en formato **png**. Por defecto la imagen se generará en la ruta\nactual, sin embargo podemos personalizar la ruta estableciendo el parámetro _path_.\n\n<a name = \"ClasetiplsbEjemplo\"></a>\n#### Ejemplo\n    \n    from TIPLSB import tiplsb \n    \n    obj = tiplsb(\"img/600x600.png\")\n    obj.add(\"Hola\", \"PlataformaMundo\")\n    obj.save()\n\n<a name = \"Funciontipdecode\"></a>\n### Función tip_decode\n\nLa  función **tip_decode** está compuesta por los siguiente parámetros de entrada:\n\n    tip_decode(path_original, path_modified)\n\nEsta función permite obtener el recorrido de la imagen. Para poder obtenerlo será \nnecesario disponer de dos imágenes.\n\nLa ruta de la imagen que introduciremos en **path_modified** será de la cual\nqueremos obtener el recorrido.\n\nPara poder obtener este recorrido será necesaria una \"llave\", esta se tratará de la\nimagen introducida en **path_original**. \n\nPodrá ser la imagen original sin firmas (en caso\nde querer obtener el recorrido completo de la imagen) o una copia de la imagen en la cual el\nnúmero de firmas totales sea menor al de la imagen introducida en **path_modified** \n(en este caso obtendremos las firmas posteriores a la última de _path_original_)\n\nLa función devolverá un diccionario en el cual las claves serán enteros empezando por 0 \nque denotarán el orden en el cual se han realizado las firmas. Sus valores asociados\nserán las firmas.\n\n    {0: Primera firma, 1: Segunda firma, ...}\n\n<a name = \"FunciontipdecodeEjemplo\"></a>\n#### Ejemplo\n\n    from TIPLSB import tip_decode\n    \n    dec = tip_decode('img/600x600.png', 'img/600x600_2_firmas.png')\n    print(dec)\n    > {0: 'TIPLSB|Hola|PlataformaMundo|22:43:21.975652', 1: 'TIPLSB|Bruno|TIPLSBapp|23:15:06.175428'}\n\n<a name = \"Integracion\"></a>\n## Integración con Django\nTIPLSB está pensada para ser implementada en plataformas que permitan la compartición\nde imágenes. Es por ello que se ha desarrollado un ejemplo de integración con el \nframework web Django.\n\nUna vez implementada la librería, cada vez que una página sea cargada todas las\nimágenes que aparezcan contendrán una firma con la información del usuario que la\nobserva.\n\nLa forma en la que se identificarán a los usuarios será elección del propio administrador\ndel sistema.\n\n<a name = \"Views\"></a>\n### views.py\nDebemos añadir una vista nueva la cual será la encargada de devolver las imágenes firmadas.\n\nAñadimos el siguiente extracto:\n\n    from TIPLSB import tiplsb\n    from PIL import Image\n    from django.http import HttpResponseNotFound, HttpResponse\n    from os.path import exists\n\n    ...\n\n    def tiplsb_img(request, path):\n        # Comprobamos si la imagen solicitada existe\n        if exists(\"static/\"+path):\n            obj = tiplsb(\"static/\"+path)\n\n            # Debemos establecer el autor con el cual queremos que se realice la firma.\n            # También debemos establecer el nombre de nuestra plataforma.\n            obj.add(\"Identificador\", \"MiWebDjango\")\n    \n            array = obj.img_array.reshape(obj.height, obj.width, 3)\n            image = Image.fromarray(array.astype('uint8'), 'RGB')\n    \n            response = HttpResponse(content_type='image/png')\n    \n            image.save(response, \"PNG\")\n            return response\n        else:\n            return HttpResponseNotFound(\"Image not found\")\n\nComo se explica en los comentarios del extracto de código es necesario que el administrador\nestablezca un criterio a la hora de establecer el autor de la firma.\n\nUn criterio sencillo para establecer un autor a la hora de firmar es el uso\nde la IP del usuario que solicita la imagen. Sin embargo lo más recomendable sería\nutilizar identificadores para los cuales únicamente el administrador del sistema sea\ncapaz de obtener la información relevante.\n\nOtro punto a destacar es que debe existir una carpeta _static_ en la raíz de nuestro\nproyecto. En esta carpeta deben ubicarse las imágenes utilizadas en el sitio web. \n\n    settings.py\n\n    ...\n\n    STATIC_URL = 'static/'\n\n    ...\n\nEn caso de disponer de una carpeta con otro nombre bastará con modificar\nlas siguientes líneas\n\n    if exists(\"mi_carpeta_de_imagenes/\"+path):\n            obj = tiplsb(\"mi_carpeta_de_imagenes/\"+path)\n\n\n<a name = \"Urls\"></a>\n### urls.py\nEn el archivo _urls.py_ deberemos añadir a la variable _urlpatterns_ la siguiente línea:\n\n    urlpatterns = [\n        ...\n        path('tiplsb_img/<str:path>', views.tiplsb_img, name='tiplsb'),\n        ...\n    ]\n\n### Ejemplo\nUna vez que hayamos realizado los pasos anteriores correctamente ya podremos hacer uso\nde las imágenes ubicadas en _static_:\n\n    <img src=\"/tiplsb_img/img.png\">\n\n## Licencia\nEste software tiene licencia MIT.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/brunogonzalezlla/TIPLSBlib/archive/v0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brunogonzalezlla/TIPLSBlib",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "TIPLSB",
    "package_url": "https://pypi.org/project/TIPLSB/",
    "platform": null,
    "project_url": "https://pypi.org/project/TIPLSB/",
    "project_urls": {
      "Download": "https://github.com/brunogonzalezlla/TIPLSBlib/archive/v0.1.tar.gz",
      "Homepage": "https://github.com/brunogonzalezlla/TIPLSBlib"
    },
    "release_url": "https://pypi.org/project/TIPLSB/0.0.1/",
    "requires_dist": [
      "Pillow",
      "numpy"
    ],
    "requires_python": "",
    "summary": "Library to trace the path of an image based on LSB and RSA.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13960710,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b479fd845794daf2bfbff9243443402efc83c720c35ff9d76675b8fa37d9bac6",
          "md5": "2f6d7e622728ebfeb181b9d23043c242",
          "sha256": "9febe7bc1df787188b4a6a55dd15a15192ad2f774d9456a246eb92cf1c48f623"
        },
        "downloads": -1,
        "filename": "TIPLSB-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f6d7e622728ebfeb181b9d23043c242",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9951,
        "upload_time": "2022-05-28T01:04:15",
        "upload_time_iso_8601": "2022-05-28T01:04:15.793639Z",
        "url": "https://files.pythonhosted.org/packages/b4/79/fd845794daf2bfbff9243443402efc83c720c35ff9d76675b8fa37d9bac6/TIPLSB-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e87bdd87276f82d6a56e4768101e0c69962a7e985d5191b2451a29df0cf38b2d",
          "md5": "ae61d244857f21e1ccfac5c855413112",
          "sha256": "69b49c589a15675d1c040d164b93d588da76fa5e451ab96cdabb4ffc225a2b6e"
        },
        "downloads": -1,
        "filename": "TIPLSB-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ae61d244857f21e1ccfac5c855413112",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12525,
        "upload_time": "2022-05-28T01:04:17",
        "upload_time_iso_8601": "2022-05-28T01:04:17.725436Z",
        "url": "https://files.pythonhosted.org/packages/e8/7b/dd87276f82d6a56e4768101e0c69962a7e985d5191b2451a29df0cf38b2d/TIPLSB-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b479fd845794daf2bfbff9243443402efc83c720c35ff9d76675b8fa37d9bac6",
        "md5": "2f6d7e622728ebfeb181b9d23043c242",
        "sha256": "9febe7bc1df787188b4a6a55dd15a15192ad2f774d9456a246eb92cf1c48f623"
      },
      "downloads": -1,
      "filename": "TIPLSB-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2f6d7e622728ebfeb181b9d23043c242",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9951,
      "upload_time": "2022-05-28T01:04:15",
      "upload_time_iso_8601": "2022-05-28T01:04:15.793639Z",
      "url": "https://files.pythonhosted.org/packages/b4/79/fd845794daf2bfbff9243443402efc83c720c35ff9d76675b8fa37d9bac6/TIPLSB-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e87bdd87276f82d6a56e4768101e0c69962a7e985d5191b2451a29df0cf38b2d",
        "md5": "ae61d244857f21e1ccfac5c855413112",
        "sha256": "69b49c589a15675d1c040d164b93d588da76fa5e451ab96cdabb4ffc225a2b6e"
      },
      "downloads": -1,
      "filename": "TIPLSB-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ae61d244857f21e1ccfac5c855413112",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12525,
      "upload_time": "2022-05-28T01:04:17",
      "upload_time_iso_8601": "2022-05-28T01:04:17.725436Z",
      "url": "https://files.pythonhosted.org/packages/e8/7b/dd87276f82d6a56e4768101e0c69962a7e985d5191b2451a29df0cf38b2d/TIPLSB-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}