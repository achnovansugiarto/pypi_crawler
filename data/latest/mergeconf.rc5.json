{
  "info": {
    "author": "Drew Leske",
    "author_email": "drew.leske@computecanada.ca",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# module `mergeconf`\n\nmergeconf - build a single configuration by merging multiple configuration\nsources with order of precedence, based on immediacy.  Configurations can be\nread from files (via ConfigParser), environment variables, and command-line\narguments (via ArgumentParser).  By default, configuration in files is\noverridden by that in environment variables which in turn is overridden by\nappropriate command-line arguments, but the library offers flexibility in\nordering.\n\n* [module `mergeconf`](#module-mergeconf)\n  * [class `MergeConf`](#class-MergeConf)\n    * [function `__init__`](#function-__init__)\n    * [function `__iter__`](#function-__iter__)\n    * [function `add`](#function-add)\n    * [function `add_section`](#function-add_section)\n    * [function `config_argparser`](#function-config_argparser)\n    * [function `map`](#function-map)\n    * [function `merge`](#function-merge)\n    * [function `merge_args`](#function-merge_args)\n    * [function `merge_environment`](#function-merge_environment)\n    * [function `merge_file`](#function-merge_file)\n    * [function `missing_mandatory`](#function-missing_mandatory)\n    * [function `sample_config`](#function-sample_config)\n    * [property `sections`](#property-sections)\n    * [function `to_dict`](#function-to_dict)\n    * [function `validate`](#function-validate)\n  * [module `mergeconf.exceptions`](#module-mergeconf.exceptions)\n    * [class `Deprecated`](#class-Deprecated)\n    * [class `MissingConfiguration`](#class-MissingConfiguration)\n    * [class `MissingConfigurationFile`](#class-MissingConfigurationFile)\n    * [class `UndefinedConfiguration`](#class-UndefinedConfiguration)\n    * [class `UndefinedSection`](#class-UndefinedSection)\n    * [class `UnsupportedType`](#class-UnsupportedType)\n\n## Examples\n\n### Typical use\n\nIf the following is in `app.conf`:\n\n```\nshape = circle\nupsidedown = false\n\n[section2]\nratio = 20.403\ncount = 4\n```\n\nThe following code could be used to set that up:\n\n```\nimport mergeconf\n\nconf = mergeconf.MergeConf('myapp', files='app.conf')\nconf.add('name')\nconf.add('shape', mandatory=True)\nconf.add('colour', value='black')\nconf.add('upsidedown', type=bool)\nconf.add('rightsideup', type=bool, value=True)\nsection2 = conf.add_section('section2')\nsection2.add('count', type=int, mandatory=True)\nsection2.add('ratio', type=float)\n\n# read file, override from environment, ensure mandatories are present\nconf.merge()\n```\n\nNow to make use of the configuration:\n\n```\n# use attribute style access\nprint(f\"Shape: {conf.shape}\")\n\n# including for sectioned configuration\nprint(f\"Count: {conf.section2.count}\")\n\n# can also use array indices\nprint(f\"Ratio: {conf['section2']['count']}\")\n```\n\n### Handling atypical configuration hierarchy\n\nIn some cases it may be desirable to handle the merging yourself, such as if\nyou want a different hierarchy, such as environment configuration being\noverridden by file-based configurations.\n\n```\n# not specifying file here\nconf = mergeconf.MergeConf('myapp')\nconf.add('name')\n# other configuration items added, etc.\n# ...\n\n# now handle merge steps myself\nconf.merge_file('app.conf')\nconf.merge_environment()\n\n# don't forget you have to validate when you're done\nconf.validate()\n\n# now ready to use\n```\n\n### Adding command-line arguments\n\nMergeConf can work with Python's built-in `argparse` package to handle\ncommand-line arguments in addition to configuration files and environment\nvariables:\n\n```\nconf = mergeconf.MergeConf('myapp')\n\n# use the `cli` parameter to indicate inclusion in command-line arguments, and\n# use the `description` parameter so there's help text in the command usage\nconf.add('name', description='Name of the thing', cli=True)\n...\n\n# set up argparse however you like\nparser = argparse.ArgumentParser(prog='myapp')\nparser.add_argument(...)\n...\n\n# now call MergeConf to configure the parser for indicated configurations\nconf.config_argparser(parser)\n\n# parse arguments\nargs = parser.parse_args()\n\n# merge configuration\nconf.merge(args)\n```\n\n### Generating sample configuration\n\nMergeConf also provides a way to generate a sample configuration file using the\nconfiguration item descriptions, types and default values.\n\n```\nprint(conf.sample_config())\n```\n\nProduces something like:\n\n```\n# (str) Unique name for the thing\n#name =\n\n# (str) The shape of the thing\nshape =\n\n# (str) The colour of the thing\n#colour = black\n\n# (bool) Upside-downness of the thing\n#upsidedown =\n\n# (bool) Is this thing right-side-up\n#rightsideup = True\n\n[section1]\n# (str) What level of fluffiness does this item exhibit\n#fluff = light\n\n# (int) It's hard to come up with examples\n#density =\n\n[section2]\n# (int) How many of the thing\ncount =\n\n# (float) The ratio of thing to thang\n#ratio =\n```\n\nNote that:\n* expected types are described in the comment and what follows is the description\n* default values are provided in the commented-out assignment\n* optional items are commented out\n* mandatory items are not commented out (but blank)\n\n## class `MergeConf`\n\nConfiguration class.  Initialized optionally with configuration items, then\nadditional items may be added explicitly (and must be if they are mandatory,\na specific type, etc.).  Once all items have been added the configuration is\nfinalized with merge(), validation checks are performed, and the realized\nvalues can be extracted.\n\nThis class inherits from the MergeConfSection class, which contains methods\nto define configuration items and sections and examine the configuration.\n\n### function `__init__`\n\nInitializes MergeConf class.\n\nArgs:\n  * `codename` (**str**): Simple string which is assumed to prefix any related\n    environment variables associated with the configuration (along with an\n    underscore as separator), in order to avoid collisions in the\n    environment's namespace.  For example, for an `app_name` configuration\n    key, with a codename `MYAPP`, the corresponding environment variable\n    would be `MYAPP_APP_NAME`.\n  * `files` (**str** or **list**): filename or list of filenames for configuration\n    files.  Files are applied in order listed, and so should be listed from\n    least to most important.\n  * `map` (**dict**): Configuration options which are neither mandatory nor of a\n    specified type, specified as key, value pairs.\n  * `strict` (**boolean**): If true, unexpected configuration sections or items\n    will cause an exception (`UndefinedSection` or `UndefinedConfiguration`,\n    respectively).  If false, they will be added to the merged\n    configuration.\n\nNote: The `map` argument is probably to be deprecated and removed at a\n  later date.  Its utility is limited and should be avoided.\n\n### function `add`\n\nAdd a configuration item.\n\nArgs:\n  * `key` (**str**): Name of configuration item\n  * `value` (**whatever**): Default value, None by default\n  * `type` (**type**): Type of value\n  * `mandatory` (**boolean**): Whether item is mandatory or not, defaults to\n    False.\n  * `cli` (**boolean**): Whether item should be included in command-line arguments\n  * `description` (**str**): Short descriptive text that may appear in usage text\n    or sample configurations\n\nNotes: Type detection is attempted if not specified.\n\n### function `add_section`\n\nAdd a subsection to this section and return its object.\n\n### function `config_argparser`\n\nConfigure ArgumentParser instance with designated configuration items.\n\nThis will run through all configuration items and add any defined as\nappropriate for command-line arguments in the parser.  This method must\ntherefore be called before the ArgumentParser instance can be used.  The\nclient may configure any of its own arguments and other sections before\nand/or after calling this method.\n\nArguments are configured with help text based on the configuration items'\ndescriptions, if available.  Boolean configuration items do not take\narguments but instead will set a value opposite of their default, or True\nif not was defined.\n\nargs:\n  argparser: ArgumentParser object to populate with appropriate items.\n\n### function `map`\n\nApply the given function to every item in this section and recursively for\nsubsections.\n\nArgs:\n  fn: Function taking (sections, name, MergeConfValue) and returning some\n    value, or None.\n\nReturns:\n  List of values returned by function.  Values of None are not included.\n\n### function `merge`\n\nTakes configuration definition and any configuration files specified and\nreads in configuration, overriding default values.  These are in turn\noverridden by corresponding variables found in the environment, if any.\nBasic validations are performed.\n\nThis is a convenience method to handle the typical configuration\nhierarchy and process.  Clients may also call other `merge_*` methods in\nany order, but should call `validate()` if so to ensure all mandatory\nconfigurations are specified.\n\nArgs:\n  args: Arguments processed by ArgumentParser.  Any matching appropriate\n    are merged in after environment variables.\n\n### function `merge_args`\n\nMerge command-line arguments parsed by ArgumentParser.\n\nOnly configuration items identified with `cli=True` on creation\n(in `add()`) will be considered.  See `config_argparser()` for adding the\narguments to an ArgumentParser object automatically.\n\nArgs:\n  args: Arguments returned by parse_args().\n\n### function `merge_environment`\n\nUsing configuration definition, reads in variables from the environment\nmatching the pattern `<codename>[_<section_name>]_<variable_name>`.  Any\nvariable found not matching a defined configuration item is returned in\na list: in this way variables outside the merged configuration context can\nbe handled, such as a variable specifying an alternative config file.\n\nReturns:\n  Map of environment variables matching the application codename.  The\n  keys will be stripped of the codename prefix and will be converted to\n  lowercase.\n\n### function `merge_file`\n\nMerge configuration defined in file.  File is expected to adhere to the\nformat defined by ConfigParser, with `=` used as the delimiter and\ninterpolation turned off.  In addition, unlike ConfigParser, config files\nmay include variables defined prior to any section header.\n\nArgs:\n  * `config_file` (**str**): Path to config file.\n\n### function `missing_mandatory`\n\nCheck that each mandatory item in this section and subsections has a\ndefined value.\n\nReturns:\n  List of fully qualified mandatory items without a defined value, in\n  section-dot-item syntax.\n\n### function `sample_config`\n\nCreate a sample configuration.\n\nThis will be more informative if configuration items have been specified\nwith descriptions.\n\nReturns:\n  A string describing a sample configuration file.\n\nNote:\n  The sample configuration will have this format:\n\n  ```\n  # (str) this is the first item\n  name =\n\n  # (int) this is the second item which has a default value\n  #count = 1\n\n  [section1]\n  # (bool) this item has no default\n  #has_car =\n\n  # (str) This is mandatory\n  description =\n  ```\n\n### property `sections`\n\nProvides list of section names.\n\n### function `to_dict`\n\nReturn dictionary representation of configuration or section.\n\n### function `validate`\n\nChecks that mandatory items have been defined in configuration.  If not,\nthrows exception.  Client may also use `missing_mandatory()`.\n\nSubclasses may add additional validation but should first call the parent\nimplementation as the test for mandatory items is primary.\n\n## module `mergeconf.exceptions`\n\nExceptions raised by MergeConf package.\n\n### class `Deprecated`\n\nRaised for hard deprecations where functionality has been removed and the\nAPI is not available at all.\n\nAttributes:\n  * `version`: the last version in which this functionality is available.\n  * `message`: further information to assist the user.\n\n### class `MissingConfiguration`\n\nRaised if mandatory configuration items are missing.\n\nAttributes:\n  * `missing`: string list of missing items in section-dot-key notation,\n    separated by commas.\n\n### class `MissingConfigurationFile`\n\nRaised if the specified configuration file is missing or otherwise\nunreadable.\n\nAttributes:\n  * `file`: the missing file\n\n### class `UndefinedConfiguration`\n\nRaised if a configuration item is found that was not defined for the parser.\n\nAttributes:\n  * `section`: the section name\n  * `item`: the item name\n\n### class `UndefinedSection`\n\nRaised if a section is found that was not defined for the parser.\n\nAttributes:\n  * `section`: the section name\n\n### class `UnsupportedType`\n\nRaised if a configuration item is added with an unsupported type.\n\nAttributes:\n  * `type`: the unsupported type\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/dleske/mergeconf",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mergeconf",
    "package_url": "https://pypi.org/project/mergeconf/",
    "platform": "",
    "project_url": "https://pypi.org/project/mergeconf/",
    "project_urls": {
      "Bug Tracker": "https://gitlab.com/dleske/mergeconf/-/issues",
      "Homepage": "https://gitlab.com/dleske/mergeconf"
    },
    "release_url": "https://pypi.org/project/mergeconf/0.5.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Library for reading configuration from file, environment and arguments",
    "version": "0.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12261540,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b01996dbe184d9efa2d544281f1d9ebcdedeeb34ae78ecaba029fffbebbc5167",
          "md5": "84f66ab0467c9cbf01fa586044120d56",
          "sha256": "b50e8364c569b3c006694639d167cb4bb2041cf4e3d6113db339514826a8d9cd"
        },
        "downloads": -1,
        "filename": "mergeconf-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84f66ab0467c9cbf01fa586044120d56",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6865,
        "upload_time": "2021-04-13T18:54:39",
        "upload_time_iso_8601": "2021-04-13T18:54:39.405572Z",
        "url": "https://files.pythonhosted.org/packages/b0/19/96dbe184d9efa2d544281f1d9ebcdedeeb34ae78ecaba029fffbebbc5167/mergeconf-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd9d4bd360b7895d7d98041e9a0ffeb3b2798dd12658ad67f2d5ec6dc164109a",
          "md5": "c1d409a3e3b464e3b94206371b849ab4",
          "sha256": "1f76aaecafbe1992f39ed7af483f37289cfd2cee3d7ee1e2d9b86f985cf45e50"
        },
        "downloads": -1,
        "filename": "mergeconf-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c1d409a3e3b464e3b94206371b849ab4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5421,
        "upload_time": "2021-04-13T18:54:40",
        "upload_time_iso_8601": "2021-04-13T18:54:40.562890Z",
        "url": "https://files.pythonhosted.org/packages/bd/9d/4bd360b7895d7d98041e9a0ffeb3b2798dd12658ad67f2d5ec6dc164109a/mergeconf-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfc543e3fd1a5e8cc3cd4989cfb53684cf47a534d6bc921da7aad2fdf4b74425",
          "md5": "a0a40446cbdc6ef4764693c0082dc497",
          "sha256": "c921084d8070d7db3160ee5f0c981b6d4c295c23f7ad96ec60e0d04e3e6edfd8"
        },
        "downloads": -1,
        "filename": "mergeconf-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a0a40446cbdc6ef4764693c0082dc497",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6892,
        "upload_time": "2021-05-10T12:55:42",
        "upload_time_iso_8601": "2021-05-10T12:55:42.927496Z",
        "url": "https://files.pythonhosted.org/packages/cf/c5/43e3fd1a5e8cc3cd4989cfb53684cf47a534d6bc921da7aad2fdf4b74425/mergeconf-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "313893930d9eb20c7feaee4b394a31ad39ffc36e0a11a306f2de4f88f58ee1d3",
          "md5": "a220ce792a5b7e8f5905f468ed308012",
          "sha256": "6e28820ed968ee2416be0a6619fdb5ef720cd5da9504601c967ba1ba3ef992a9"
        },
        "downloads": -1,
        "filename": "mergeconf-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a220ce792a5b7e8f5905f468ed308012",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5453,
        "upload_time": "2021-05-10T12:55:43",
        "upload_time_iso_8601": "2021-05-10T12:55:43.974434Z",
        "url": "https://files.pythonhosted.org/packages/31/38/93930d9eb20c7feaee4b394a31ad39ffc36e0a11a306f2de4f88f58ee1d3/mergeconf-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1419f17b41842d59d1ae8fbaaba5d9cb9b0915cf40791135084fa8bc2ad14fb6",
          "md5": "4c0ef06aaa0e9f09bf080e6963554a13",
          "sha256": "b315dce4a145ba674751dc394d70316fa3e06337a28ab2aeefc751c99dfab56c"
        },
        "downloads": -1,
        "filename": "mergeconf-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c0ef06aaa0e9f09bf080e6963554a13",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13120,
        "upload_time": "2021-11-30T02:23:58",
        "upload_time_iso_8601": "2021-11-30T02:23:58.568202Z",
        "url": "https://files.pythonhosted.org/packages/14/19/f17b41842d59d1ae8fbaaba5d9cb9b0915cf40791135084fa8bc2ad14fb6/mergeconf-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0da82ce814148de2038b8ef17f9a3f025a2aec6affffab3ef57d11e34af855cf",
          "md5": "be3b852214f21845e5c46ec1af709d48",
          "sha256": "b03c3ce6d78fe601d2ca0cc523a5da229f772ba42310891518b799b9af7987de"
        },
        "downloads": -1,
        "filename": "mergeconf-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "be3b852214f21845e5c46ec1af709d48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10644,
        "upload_time": "2021-11-30T02:24:00",
        "upload_time_iso_8601": "2021-11-30T02:24:00.292603Z",
        "url": "https://files.pythonhosted.org/packages/0d/a8/2ce814148de2038b8ef17f9a3f025a2aec6affffab3ef57d11e34af855cf/mergeconf-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b603822a89a43ea5024aec14e513ea7b62569432e3c61ed0f46d01091c444f6",
          "md5": "b542b09ee8f642e48592728cc97d98ac",
          "sha256": "ae2ed88d30c6d02f705837867ad0488811881ea4aba885390ba3afc977eddfe1"
        },
        "downloads": -1,
        "filename": "mergeconf-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b542b09ee8f642e48592728cc97d98ac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16666,
        "upload_time": "2021-12-04T21:37:01",
        "upload_time_iso_8601": "2021-12-04T21:37:01.511602Z",
        "url": "https://files.pythonhosted.org/packages/6b/60/3822a89a43ea5024aec14e513ea7b62569432e3c61ed0f46d01091c444f6/mergeconf-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecd23709c66b1dd38d88301bb512308632e68c4a50b8e4a862d6109d93f241ee",
          "md5": "227da0d61d0fe21a287b9b9ce5f59104",
          "sha256": "1e84ff9ee4224719891ff922edf14d91a8bdb4a7d2783aca38c74be1bcf31ff0"
        },
        "downloads": -1,
        "filename": "mergeconf-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "227da0d61d0fe21a287b9b9ce5f59104",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14523,
        "upload_time": "2021-12-04T21:37:02",
        "upload_time_iso_8601": "2021-12-04T21:37:02.510843Z",
        "url": "https://files.pythonhosted.org/packages/ec/d2/3709c66b1dd38d88301bb512308632e68c4a50b8e4a862d6109d93f241ee/mergeconf-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4f8455345d183f17a7f65519074ce5ce0b403f8cd192deaa5fd38a0980f200c",
          "md5": "0c7e302662f2803d6da4f31b2512ddad",
          "sha256": "d2e4c3ca3e9eb3281c408506b57e6532eb6dccfa0c2424ae7d7b5b88d1f01767"
        },
        "downloads": -1,
        "filename": "mergeconf-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c7e302662f2803d6da4f31b2512ddad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17313,
        "upload_time": "2021-12-09T23:53:36",
        "upload_time_iso_8601": "2021-12-09T23:53:36.696164Z",
        "url": "https://files.pythonhosted.org/packages/a4/f8/455345d183f17a7f65519074ce5ce0b403f8cd192deaa5fd38a0980f200c/mergeconf-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cab7d096f5952d9f46d2648dd270da94a2809fb25571ca58dd4d11d23e63878",
          "md5": "93a936d62a05476fda7cd06de5fc5637",
          "sha256": "5d4a6da3326adee1f7709eaa896eebd6335437e74aa5911200a0e5147ace4533"
        },
        "downloads": -1,
        "filename": "mergeconf-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "93a936d62a05476fda7cd06de5fc5637",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14363,
        "upload_time": "2021-12-09T23:53:38",
        "upload_time_iso_8601": "2021-12-09T23:53:38.055365Z",
        "url": "https://files.pythonhosted.org/packages/2c/ab/7d096f5952d9f46d2648dd270da94a2809fb25571ca58dd4d11d23e63878/mergeconf-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4f8455345d183f17a7f65519074ce5ce0b403f8cd192deaa5fd38a0980f200c",
        "md5": "0c7e302662f2803d6da4f31b2512ddad",
        "sha256": "d2e4c3ca3e9eb3281c408506b57e6532eb6dccfa0c2424ae7d7b5b88d1f01767"
      },
      "downloads": -1,
      "filename": "mergeconf-0.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0c7e302662f2803d6da4f31b2512ddad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17313,
      "upload_time": "2021-12-09T23:53:36",
      "upload_time_iso_8601": "2021-12-09T23:53:36.696164Z",
      "url": "https://files.pythonhosted.org/packages/a4/f8/455345d183f17a7f65519074ce5ce0b403f8cd192deaa5fd38a0980f200c/mergeconf-0.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2cab7d096f5952d9f46d2648dd270da94a2809fb25571ca58dd4d11d23e63878",
        "md5": "93a936d62a05476fda7cd06de5fc5637",
        "sha256": "5d4a6da3326adee1f7709eaa896eebd6335437e74aa5911200a0e5147ace4533"
      },
      "downloads": -1,
      "filename": "mergeconf-0.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "93a936d62a05476fda7cd06de5fc5637",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14363,
      "upload_time": "2021-12-09T23:53:38",
      "upload_time_iso_8601": "2021-12-09T23:53:38.055365Z",
      "url": "https://files.pythonhosted.org/packages/2c/ab/7d096f5952d9f46d2648dd270da94a2809fb25571ca58dd4d11d23e63878/mergeconf-0.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}