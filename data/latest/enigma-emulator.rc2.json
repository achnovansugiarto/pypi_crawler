{
  "info": {
    "author": "Alejandro U. Alvarez",
    "author_email": "aluralma@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# Enigma Machine Emulator\n\nThis is a simulator for general Enigma Machines, it includes rotor definitions for most versions of the machine (see list below), and is flexible enough that it can be used to simulate any other ones.\n\n### Example\n\n```python\nfrom enigma import Machine\nfrom enigma.builtin_rotors import Rotors\n\nmachine = Machine(\n    [Rotors[\"I\"](), Rotors[\"II\"](), Rotors[\"III\"]()],\n    Rotors[\"A\"]()\n)\n\nassert(machine.encode(\"ENIGMA MACHINE\") == \"BYEJNJ RSRWHTF\")\n```\n\n## Enigma Versions\n\nThis simulator includes a comprehensive list of rotors that were used in the different enigma versions that existed over time.\n\nThese rotors are available in `enigma/builtin_rotors.py`, and tests are available in `enigma/tests/custom_extensions_test.py` for most of them.\n\nThe following variants have rotors available:\n\n* Enigma M3 & M4\n* German Railway (Rocket)\n* M3 & M4 Naval\n* Swiss K (custom entry wheel)\n* M4 R1\n* Enigma D\n* Enigma KD\n* Enigma T - Tirpitz (custom entry wheel)\n* Norway (Norenigma)\n* Railway Enigma\n\n## Machine Settings\n\n### Arbitrary Number of Rotors\nThis simulator supports both arbitrary rotos and setting which is the last rotor that can turn. This is because in most versions of the machine, only the first 3 rotors would turn with each keystroke.\n\n### Multiple Notches\nRotors can have from 0 to any number of notches.\n\n### Entry Wheel (i.e. Enigma T - Tirpitz)\nEnigma machines could have an entry wheel that determined the wiring from the keys to the plugboard, and from the plugboard to the lamps.\n\n### Extended Alphabet\nThe rotors allow defining an input alphabet. This can be used to extend from the standard uppercase ASCII used in most machines, to use any unicode character.\n\nExamples of characters that can be encoded with `enigma_py`:\n\n* Alphanumeric\n* Mixed-case messages\n* Non-roman alphabets (Russian, Japanese... )\n* Special characters\n\n`enigma_py/enigma/tests/custom_extensions_test.py` features a test (`test_machine_encodes_custom_alphabets`) with mixed-case inputs and numbers.\n\nIt is trivial to use any unicode character - even _emoji_ (as they are just a unicode extension)!\n\nJust for fun I made a few custom \"emoji-rotors\", so that we can encode:\n\n* Input: `THIS ENIGMA MACHINE SUPPORTS EMOJIS! üòúüòçü•∞`\n* Encoded: `üòÜQKüòó üòãü§£FURüòâ SXüòöüòáüòúTüòú üòÉüòÇüòÉüòÑUüòåAüòö üòùüòõüòòüòáWüôÉ! TOüòç`\n\nTo see the Machine and rotors used for the strings above look for the `test_emoji_machine`.\n\n## Documentation\n\nAutogenerated documentation for all modules is available in `docs/index.html` and live in https://aurbano.github.io/enigma.py/\n\nTo update the docs:\n\n```\npip install sphinx\ncd docs-config\nmake github\n```\n\n## Test\n\n```\npython -m unittest discover -s ./enigma/tests -p '\\*\\_test.py'\n```\n\n## Coverate report\n\n```\ncoverage run -m unittest discover -s ./enigma/tests -p '*_test.py'\ncoverage html --omit=\"*/test*\" && open ./htmlcov/index.html\n```\n\n## Lint\n\n```\nflake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aurbano/enigma_py",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "enigma-emulator",
    "package_url": "https://pypi.org/project/enigma-emulator/",
    "platform": "",
    "project_url": "https://pypi.org/project/enigma-emulator/",
    "project_urls": {
      "Homepage": "https://github.com/aurbano/enigma_py"
    },
    "release_url": "https://pypi.org/project/enigma-emulator/1.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Enigma Machine Emulator",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8631446,
  "releases": {
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4941196999ceebe08ba12832734fa580a084574c7f0c0d21f4a8e65b6d695a1",
          "md5": "d637ed1043098da6b48d09e47b9962f3",
          "sha256": "7527ca8111418d9bb7ae189e6c8aa2f12187649f54120fce73c28b0405494883"
        },
        "downloads": -1,
        "filename": "enigma_emulator-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d637ed1043098da6b48d09e47b9962f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9327,
        "upload_time": "2020-11-11T11:11:57",
        "upload_time_iso_8601": "2020-11-11T11:11:57.467191Z",
        "url": "https://files.pythonhosted.org/packages/d4/94/1196999ceebe08ba12832734fa580a084574c7f0c0d21f4a8e65b6d695a1/enigma_emulator-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cda4056d210631fa6eefc0ff213b427bdf696ecaca32bd22dc3aafed0e2e731",
          "md5": "c7579fb2fb77602c2e2d0e6c49cff6f4",
          "sha256": "acb9397c94abed18ef66319509bfef2c51234a31fa1a5f5dc735b8743b5ff66c"
        },
        "downloads": -1,
        "filename": "enigma-emulator-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c7579fb2fb77602c2e2d0e6c49cff6f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15512,
        "upload_time": "2020-11-11T11:11:59",
        "upload_time_iso_8601": "2020-11-11T11:11:59.918184Z",
        "url": "https://files.pythonhosted.org/packages/1c/da/4056d210631fa6eefc0ff213b427bdf696ecaca32bd22dc3aafed0e2e731/enigma-emulator-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66443278c3943261ae6784285e432c1014385af01c99ab5f5473bde9e7b953b3",
          "md5": "4f42906663c9850396a68f3aa4798afe",
          "sha256": "9f0d3ef1486774b3f1977cb80e05f368910ad9888789d18e505c5a0d11a2307d"
        },
        "downloads": -1,
        "filename": "enigma_emulator-1.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f42906663c9850396a68f3aa4798afe",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9329,
        "upload_time": "2020-11-11T11:11:58",
        "upload_time_iso_8601": "2020-11-11T11:11:58.666949Z",
        "url": "https://files.pythonhosted.org/packages/66/44/3278c3943261ae6784285e432c1014385af01c99ab5f5473bde9e7b953b3/enigma_emulator-1.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c27db62a68700d8a692eea6c021db358b20645caa8fc2b0a7d363f0903297c7b",
          "md5": "b98d5a4187c879e9050d334013737d72",
          "sha256": "0fd681484254d5412b03f21b30f70aa8bf0ad95f9ef439cc2cae69abc7d8e9b0"
        },
        "downloads": -1,
        "filename": "enigma-emulator-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b98d5a4187c879e9050d334013737d72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15516,
        "upload_time": "2020-11-11T11:12:01",
        "upload_time_iso_8601": "2020-11-11T11:12:01.193890Z",
        "url": "https://files.pythonhosted.org/packages/c2/7d/b62a68700d8a692eea6c021db358b20645caa8fc2b0a7d363f0903297c7b/enigma-emulator-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66443278c3943261ae6784285e432c1014385af01c99ab5f5473bde9e7b953b3",
        "md5": "4f42906663c9850396a68f3aa4798afe",
        "sha256": "9f0d3ef1486774b3f1977cb80e05f368910ad9888789d18e505c5a0d11a2307d"
      },
      "downloads": -1,
      "filename": "enigma_emulator-1.2.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4f42906663c9850396a68f3aa4798afe",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 9329,
      "upload_time": "2020-11-11T11:11:58",
      "upload_time_iso_8601": "2020-11-11T11:11:58.666949Z",
      "url": "https://files.pythonhosted.org/packages/66/44/3278c3943261ae6784285e432c1014385af01c99ab5f5473bde9e7b953b3/enigma_emulator-1.2.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c27db62a68700d8a692eea6c021db358b20645caa8fc2b0a7d363f0903297c7b",
        "md5": "b98d5a4187c879e9050d334013737d72",
        "sha256": "0fd681484254d5412b03f21b30f70aa8bf0ad95f9ef439cc2cae69abc7d8e9b0"
      },
      "downloads": -1,
      "filename": "enigma-emulator-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b98d5a4187c879e9050d334013737d72",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15516,
      "upload_time": "2020-11-11T11:12:01",
      "upload_time_iso_8601": "2020-11-11T11:12:01.193890Z",
      "url": "https://files.pythonhosted.org/packages/c2/7d/b62a68700d8a692eea6c021db358b20645caa8fc2b0a7d363f0903297c7b/enigma-emulator-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}