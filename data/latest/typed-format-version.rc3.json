{
  "info": {
    "author": "",
    "author_email": "Peter Pentchev <roam@ringlet.net>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: DFSG approved",
      "License :: Freely Distributable",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# typed-format-version: load format.version.{major,minor} from a structured file.\n\nThis module tries to parse a format.version \"section\" in some raw data that\nmay have been loaded from a configuration file, and determines whether that\nsection contains valid \"major\" and \"minor\" integer values. The caller can\nthen choose the correct schema to validate the loaded data against, e.g. by\nusing the `typedload` library with the correct top-level dataclass definition.\n\nThe most commonly used function will probably be `get_version()`: it takes\na raw data dictionary and returns a `Version` object with a `major` and `minor`\ninteger attributes, if the data contained a valid \"format\" dictionary with\na \"version\" dictionary within it. Optionally the `get_version()` function can\nremove the top-level \"format\" member, if a true value is passed for the `pop`\nargument.\n\n## Python examples\n\nLoad some data from a file, make sure it is in the correct format:\n\n    try:\n        raw = json.load(pathlib.Path(cfgfile).open())\n        ver = typed_format_version.get_version(raw)\n    except (OSError, ValueError) as err:\n        sys.exit(f\"Invalid data format for {cfgfile}: {err}\")\n    if ver.as_version_tuple() != (0, 2):\n        sys.exit(\"Only config format 0.2 supported right now\")\n    cfg = typedload.load(raw, ConfigData)\n\nDetermine the best version to validate against, allowing more fields to be\nadded in minor versions that we do not know about yet:\n\n    SCHEMAS = {\n        (0, 1): ConfigTop_0_1,\n        (0, 2): ConfigTop_0_2,\n        (1, 0): ConfigTop_1_0,\n    }\n    try:\n        raw = json.load(pathlib.Path(cfgfile).open())\n        exact_ver = typed_format_version.get_version(raw)\n        mver = typed_format_version.determine_version_match(exact_ver, SCHEMAS)\n    except (OSError, ValueError) as err:\n        sys.exit(f\"Invalid data format for {cfgfile}: {err}\")\n    \n    # Either load the data directly...\n    cfg = typedload.load(raw, SCHEMAS[mver.version], failonextra=mver.failonextra)\n    \n    # ...or do something with mver.version, possibly examining ver further and\n    # \"upgrading\" the loaded configuration from earlier versions by e.g.\n    # adding default values for fields or reshaping the data.\n\n## Rust examples\n\nLoad some data from a file, make sure it is in the correct format:\n\n    use std::fs;\n    \n    use expect_exit::ExpectedWithError;\n    \n    let contents = fs::read_to_string(&infile).or_exit_e(|| format!(\"Could not read {}\", infile.display()));\n    let fver = typed_format_version::get_version_from_str(&contents, serde_json::from_str)\n        .or_exit_e(|| format!(\"Could not parse format.version from {}\", infile.display()));\n    if (fver.major(), fver.minor()) != (0, 2) {\n        expect_exit::exit(\"Only config format 0.2 supported right now\");\n    }\n    let cfg: ConfigData = serde_json::from_str(&contents)\n        .or_exit_e(|| format!(\"Could not parse {}\", infile.display()));\n\nUpgrade from an earlier versions of the data format:\n\n    let cfg = match fver.major() {\n        0 => {\n            let cfg_0: ConfigData_0 = serde_json::from_str(&contents)\n                .or_exit_e(|| format!(\"Could not parse {}\", infile.display()));\n            upgrade_from_version_0(cfg_0)\n        },\n        1 => serde_json::from_str::<ConfigData>(&contents)\n            .or_exit_e(|| format!(\"Could not parse {}\", infile.display())),\n        _ => expect_exit::exit(&format!(\"Unexpected major format version {}\", fver.major()),\n    };\n\n## Contact\n\nThe `typed-format-version` library is developed in\n[a GitLab repository](https://gitlab.com/ppentchev/typed-format-version).\nIt was written by [Peter Pentchev](mailto:roam@ringlet.net).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "typed-format-version",
    "package_url": "https://pypi.org/project/typed-format-version/",
    "platform": null,
    "project_url": "https://pypi.org/project/typed-format-version/",
    "project_urls": {
      "Source": "https://gitlab.com/ppentchev/typed-format-version"
    },
    "release_url": "https://pypi.org/project/typed-format-version/0.2.1/",
    "requires_dist": [
      "typedload (<3,>=2)"
    ],
    "requires_python": ">=3.7",
    "summary": "Extract the version of a structured file's format specification.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15369360,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cba9be14669919a78cda8bf4939dfc4533edf9f79557913015845f0a5af8417",
          "md5": "8300ca470cea6ffcd3af5e5a937fadad",
          "sha256": "a4b811990cde5c1ddd61195c36d97a843d3840c28a29ac95ce6b1a31000991c5"
        },
        "downloads": -1,
        "filename": "typed_format_version-0.1.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "8300ca470cea6ffcd3af5e5a937fadad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4949,
        "upload_time": "2022-07-21T10:40:58",
        "upload_time_iso_8601": "2022-07-21T10:40:58.954368Z",
        "url": "https://files.pythonhosted.org/packages/7c/ba/9be14669919a78cda8bf4939dfc4533edf9f79557913015845f0a5af8417/typed_format_version-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62c29a401144cebad781f7045a136cc6f825c93559d55a9245cd720ae25399af",
          "md5": "0e7bd30e628e8ebc1c41967897a7e3ca",
          "sha256": "a4c780fb4f416670dc24b4e9df531625039a30deb8cda018e713822f6939d43e"
        },
        "downloads": -1,
        "filename": "typed-format-version-0.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "0e7bd30e628e8ebc1c41967897a7e3ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4248,
        "upload_time": "2022-07-21T10:41:01",
        "upload_time_iso_8601": "2022-07-21T10:41:01.298447Z",
        "url": "https://files.pythonhosted.org/packages/62/c2/9a401144cebad781f7045a136cc6f825c93559d55a9245cd720ae25399af/typed-format-version-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdf4d4cfa47958bb5f0ee61681ea8fb1397b5ff9ea61e95b59a425571ce15cce",
          "md5": "f365c403a300e0b3e782d429dd63dae8",
          "sha256": "65dd24f57b52ea12d7425c41bef5a3f320a57e80cff5c07877b31c23f7b92fe3"
        },
        "downloads": -1,
        "filename": "typed_format_version-0.2.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "f365c403a300e0b3e782d429dd63dae8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4936,
        "upload_time": "2022-10-02T20:41:40",
        "upload_time_iso_8601": "2022-10-02T20:41:40.544745Z",
        "url": "https://files.pythonhosted.org/packages/bd/f4/d4cfa47958bb5f0ee61681ea8fb1397b5ff9ea61e95b59a425571ce15cce/typed_format_version-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7db55ef684f9340557e2d7b22da5ad0516ac395b41f4e264dc850c28d2900d1",
          "md5": "ecfcb8c5c2b4a4235674df22738ff398",
          "sha256": "487df6d3f806706f6537140335d2db1fb5d6fd72ac2a3a756ac081055d311a04"
        },
        "downloads": -1,
        "filename": "typed-format-version-0.2.0.tar.gz",
        "has_sig": true,
        "md5_digest": "ecfcb8c5c2b4a4235674df22738ff398",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15027,
        "upload_time": "2022-10-02T20:41:43",
        "upload_time_iso_8601": "2022-10-02T20:41:43.279156Z",
        "url": "https://files.pythonhosted.org/packages/c7/db/55ef684f9340557e2d7b22da5ad0516ac395b41f4e264dc850c28d2900d1/typed-format-version-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8496407ce1385afb23ae50acc9fd66267c5975e3a5eb23e440d413c9c988d85c",
          "md5": "8293658eb8a70766a37fbd100bdedce3",
          "sha256": "87fe20f825866e579b739492fe67ba86270df749cc119a14621d91d06d6e48bc"
        },
        "downloads": -1,
        "filename": "typed_format_version-0.2.1-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "8293658eb8a70766a37fbd100bdedce3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4933,
        "upload_time": "2022-10-11T05:18:07",
        "upload_time_iso_8601": "2022-10-11T05:18:07.840637Z",
        "url": "https://files.pythonhosted.org/packages/84/96/407ce1385afb23ae50acc9fd66267c5975e3a5eb23e440d413c9c988d85c/typed_format_version-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bff9f3915f73a3dcfb02dedfc7f0bfaa251ebcdff21fa5ede532d36716a3c7ff",
          "md5": "76bf9d17beebb0203cab6e2cd582e63d",
          "sha256": "ee5da17c9101c6d80d2a9dd84f8121c7efbd0798638fed3082a31a611c993c8f"
        },
        "downloads": -1,
        "filename": "typed-format-version-0.2.1.tar.gz",
        "has_sig": true,
        "md5_digest": "76bf9d17beebb0203cab6e2cd582e63d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15396,
        "upload_time": "2022-10-11T05:18:10",
        "upload_time_iso_8601": "2022-10-11T05:18:10.442376Z",
        "url": "https://files.pythonhosted.org/packages/bf/f9/f3915f73a3dcfb02dedfc7f0bfaa251ebcdff21fa5ede532d36716a3c7ff/typed-format-version-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8496407ce1385afb23ae50acc9fd66267c5975e3a5eb23e440d413c9c988d85c",
        "md5": "8293658eb8a70766a37fbd100bdedce3",
        "sha256": "87fe20f825866e579b739492fe67ba86270df749cc119a14621d91d06d6e48bc"
      },
      "downloads": -1,
      "filename": "typed_format_version-0.2.1-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "8293658eb8a70766a37fbd100bdedce3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4933,
      "upload_time": "2022-10-11T05:18:07",
      "upload_time_iso_8601": "2022-10-11T05:18:07.840637Z",
      "url": "https://files.pythonhosted.org/packages/84/96/407ce1385afb23ae50acc9fd66267c5975e3a5eb23e440d413c9c988d85c/typed_format_version-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bff9f3915f73a3dcfb02dedfc7f0bfaa251ebcdff21fa5ede532d36716a3c7ff",
        "md5": "76bf9d17beebb0203cab6e2cd582e63d",
        "sha256": "ee5da17c9101c6d80d2a9dd84f8121c7efbd0798638fed3082a31a611c993c8f"
      },
      "downloads": -1,
      "filename": "typed-format-version-0.2.1.tar.gz",
      "has_sig": true,
      "md5_digest": "76bf9d17beebb0203cab6e2cd582e63d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 15396,
      "upload_time": "2022-10-11T05:18:10",
      "upload_time_iso_8601": "2022-10-11T05:18:10.442376Z",
      "url": "https://files.pythonhosted.org/packages/bf/f9/f3915f73a3dcfb02dedfc7f0bfaa251ebcdff21fa5ede532d36716a3c7ff/typed-format-version-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}