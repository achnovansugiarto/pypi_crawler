{
  "info": {
    "author": "Tomasz Magdziarz",
    "author_email": "tljm@wp.pl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: ISC License (ISCL)",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Text Processing :: Markup"
    ],
    "description": "Journal PreProcessor\n--------------------\n\nJournal PreProcessor - mdJPP - is a preporcessor for plain text documents that\nsupports tagging.\n\nUse case\n========\n\nSuppose that you are obliged (or you want to) log progress of your work.\nOne of the simplest way to do it is to put notes into some plain text file.\nThe more you work, the more notes you write. Finally, the file can be use as a\nbasis for some kind of report or even as a report itself. If you decide to use\nmarkup, let it be `Markdown <https://daringfireball.net/projects/markdown>`_, your notes may look quite elegant.\n\nImagine now, that you are *dr. No* and you work in *ACME* company as a member of\n*Y-man support team*. You did some work. Each day you put some notes and\nused some tags. Your work log may look following::\n\n    **ACME**\n\n    Y-man support team\n    dr No\n\n    Work log.\n\n    20181022\n    --------\n\n    *X-substance*\n\n    Testing alternative synthesis:\n\n    * Z + Y -> X\n    * Z + V + U -> X + W\n\n    *garden*\n\n    Singing to the flowers.\n\n    20181023\n    --------\n\n    *X-substance* *IT*\n\n    Simulation of X-substance stability.\n\n    *garden*\n\n    Taking care of bees.\n\n    20181024\n    --------\n\n    *X-substance*\n\n    Purification.\n    \n    **It's alive!**\n\nAlthough, markup languages are nice and allows to produce nice looking documents \nor web pages, they lack of convenient support for tagging. In the above example\n*X-substance* annotation was consequently used to mark actions related to *X-substance* development etc.\n\nObvious question emerges, how to get a report on *X-substance* only?\n\nSolution\n========\n\nThe above log can be annotated according to mdJPP tagging syntax. It cane be later\nsubmitted to mdJPP preprocessor that can produce document extracts according to\ntags and dates.\n\nSyntax\n^^^^^^\n\nmdJPP tags, including dates, starts always with double ``@@`` character.\nIn the current version only one tag can be used in one line so there is no\ninline tags (not yet!). There are two types of tags:\n\n#. Date tags, for example ``@@20181103``.\n#. (Normal) tags, for example ``@@X-substance``.\n\nPlease note, that dates are always written as YYYYMMDD.\n\nNormal tags can be joined. If particular note is related with *X-substance*\ndevelopment and *IT* work, it can be annotated with two tags::\n\n    @@X-substance\n    @@IT\n    \nTags written one after another without blank lines are joined and note that\nfollows is tagged with *X-substance* and *IT*.\n\nStructure\n^^^^^^^^^\n\nmdJPP annotated documents **always** have following structure:\n\n* Plain text (optional)\n* Global normal tags that annotate all that follows (optional)\n    * Plain text (optional)\n    * Date tag (optional)\n        * Plain text (optional)\n        * Normal tag that annotate text note that follows (optional)\n            * Plain text (optional)\n        * Normal tag that annotate text note that follows (optional)\n            * ...\n    * Date tag (optional)\n        * ...\n\nPlease note two facts:\n\n#. All elements of the document's structure are optional.\n#. All mdJPP documents have **always** the same structure.\n\nExample\n^^^^^^^\n\nLet's use mdJPP tagging for *dr. No* notes::\n\n    **ACME**\n\n    @@Y-man support team\n    @@dr No\n\n    Work log.\n\n    @@20181022\n\n    @@X-substance\n\n    Testing alternative synthesis:\n\n    * Z + Y -> X\n    * Z + V + U -> X + W\n\n    @@garden\n\n    Singing to the flowers.\n\n    @@20181023\n\n    @@X-substance\n    @@IT\n\n    Simulation of X-substance stability.\n\n    @@garden\n\n    Taking care of bees.\n\n    @@20181024\n\n    @@X-substance\n\n    Purification.\n\n    **It's alive!**\n\nUsage\n=====\n\nOnce the log is annotated with mdJPP tags, prepocessor can be used to produce nice\nlooking document by redirecting its output to, say, `pandoc <https://pandoc.org/>`_::\n\n    mdjpp dr_no_log.mdj | pandoc > dr_no_log.html\n\nThis is all unless you want to do some filtering.\n\nFilters\n^^^^^^^\n\n**ACME** boss wants you to report progress on *X-substance* development since October 23rd?\n::\n\n    mdjpp dr_no_log.mdj --only-tag X-substance --date-from 20181023\n    \nWant to do more?\n::\n   \n    mdjpp --help\n    \n   \nIndex\n^^^^^\n\nIf several files are submitted to mdJPP and one of them ends with `index.mdj` it\nis processed first.\n\nThis allows to put all global tags and other titles to the index and real work\nlogs can be kept in other files.\n\nExample\n^^^^^^^\n\nSo, how it looks like? It depends on rendering options. Currently, three rendering engines\nare available:\n\n#. *Null* - This render engine does not render at all. Useful when you want to do filtering only. This is default render engine.\n#. *Markdown* - Changes global, date, and normal tags to header level 1, 2, and 3 accordingly. Uses some emphasis for tags strings. To switch it on use ``--md`` option. It is useful when you want to produce PDF or ODT documents.\n#. *HTML* - Renders global and normal tags as *nice* boxes with coloured text. Uses emphasis for date tags and uses some horizontal lines. To switch it on use ``--html`` option.\n\nHere are examples of HTML documents created with `HTML rendering engine <https://tljm.github.io/mdjpp/test_journal.html>`_, and with\n`Markdown rendering engine <https://tljm.github.io/mdjpp/test_journal_md.html>`_.\n\nLook also at this `PDF document created with Markdown rendering engine <https://tljm.github.io/mdjpp/test_journal.pdf>`_.\n\n**Please note** that the above examples are done with `pandoc <https://pandoc.org/>`_ ``--metadata=\"title:Your smart title\"``. The title is, therefore, added at the beginning of documents.\n\n\nInstallation\n============\n\nmdJPP can be installed with following command::\n\n    pip install mdjpp\n    \nQuestion & Answer\n=================\n\n#. *Hey dude, why don't you put all that notes to some database and use SQL to query DB and get what you want?*\n   \n   That's a very good question. Well, may be, may be...",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/tljm/mdjpp",
    "keywords": "",
    "license": "ISC",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mdjpp",
    "package_url": "https://pypi.org/project/mdjpp/",
    "platform": "",
    "project_url": "https://pypi.org/project/mdjpp/",
    "project_urls": {
      "Homepage": "http://github.com/tljm/mdjpp"
    },
    "release_url": "https://pypi.org/project/mdjpp/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Journal PreProcessor",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5363848,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efcd9a39a0827027ebb4f55c45cd026dc417ac2e0f1b5c6ed6d2ef70baa4383d",
          "md5": "27a30a0da155fb004e16a0928074f58f",
          "sha256": "775760cca018926233cb856239b9934828e7a775dc1cc7a19cad3921811389b9"
        },
        "downloads": -1,
        "filename": "mdjpp-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "27a30a0da155fb004e16a0928074f58f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7397,
        "upload_time": "2018-11-03T11:18:17",
        "upload_time_iso_8601": "2018-11-03T11:18:17.988629Z",
        "url": "https://files.pythonhosted.org/packages/ef/cd/9a39a0827027ebb4f55c45cd026dc417ac2e0f1b5c6ed6d2ef70baa4383d/mdjpp-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fce2fbd62e295b075de650c64dd5f931fc2a56b49e9f152b07412d105512790",
          "md5": "b2cbbe09f488dab8108e2e306958b037",
          "sha256": "0d916615dc433ce37bcb1c49d6cc2935b35a09a32e89a5a8fdde9f2f6a3e45f6"
        },
        "downloads": -1,
        "filename": "mdjpp-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b2cbbe09f488dab8108e2e306958b037",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8129,
        "upload_time": "2018-11-08T18:03:22",
        "upload_time_iso_8601": "2018-11-08T18:03:22.877820Z",
        "url": "https://files.pythonhosted.org/packages/5f/ce/2fbd62e295b075de650c64dd5f931fc2a56b49e9f152b07412d105512790/mdjpp-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1d6788341277356b0fbd66bbdae2bc54784abc29c329c8f962052d8cf395231",
          "md5": "4471e84ce1aff9b7e9ed78c75c4cab37",
          "sha256": "98789639554cf2bcfdbf94e79d2eb5b78f1e0a8bb0d706dff5218886801d6225"
        },
        "downloads": -1,
        "filename": "mdjpp-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4471e84ce1aff9b7e9ed78c75c4cab37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8147,
        "upload_time": "2019-04-08T20:07:09",
        "upload_time_iso_8601": "2019-04-08T20:07:09.566906Z",
        "url": "https://files.pythonhosted.org/packages/b1/d6/788341277356b0fbd66bbdae2bc54784abc29c329c8f962052d8cf395231/mdjpp-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6721a65bab10444b61b02b94e91e95ee3ef3012622144384f6afa982a2d5b8d7",
          "md5": "75b634e65409bac5d5dd1f4b72c1b4c4",
          "sha256": "d9dda041ce525e27fef225111b29e232de373710cd0c85c3b9336c7ab3f6309f"
        },
        "downloads": -1,
        "filename": "mdjpp-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "75b634e65409bac5d5dd1f4b72c1b4c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8439,
        "upload_time": "2019-06-05T19:03:35",
        "upload_time_iso_8601": "2019-06-05T19:03:35.370992Z",
        "url": "https://files.pythonhosted.org/packages/67/21/a65bab10444b61b02b94e91e95ee3ef3012622144384f6afa982a2d5b8d7/mdjpp-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6721a65bab10444b61b02b94e91e95ee3ef3012622144384f6afa982a2d5b8d7",
        "md5": "75b634e65409bac5d5dd1f4b72c1b4c4",
        "sha256": "d9dda041ce525e27fef225111b29e232de373710cd0c85c3b9336c7ab3f6309f"
      },
      "downloads": -1,
      "filename": "mdjpp-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "75b634e65409bac5d5dd1f4b72c1b4c4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8439,
      "upload_time": "2019-06-05T19:03:35",
      "upload_time_iso_8601": "2019-06-05T19:03:35.370992Z",
      "url": "https://files.pythonhosted.org/packages/67/21/a65bab10444b61b02b94e91e95ee3ef3012622144384f6afa982a2d5b8d7/mdjpp-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}