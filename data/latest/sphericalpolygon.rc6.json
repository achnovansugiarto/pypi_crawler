{
  "info": {
    "author": "Chunxiao Li",
    "author_email": "lcx366@126.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Welcome to the SphericalPolygon package\n\n[![PyPI version shields.io](https://img.shields.io/pypi/v/sphericalpolygon.svg)](https://pypi.python.org/pypi/sphericalpolygon/) [![PyPI pyversions](https://img.shields.io/pypi/pyversions/sphericalpolygon.svg)](https://pypi.python.org/pypi/sphericalpolygon/) [![PyPI status](https://img.shields.io/pypi/status/sphericalpolygon.svg)](https://pypi.python.org/pypi/sphericalpolygon/) [![GitHub contributors](https://img.shields.io/github/contributors/lcx366/SphericalPolygon.svg)](https://GitHub.com/lcx366/SphericalPolygon/graphs/contributors/) [![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://GitHub.com/lcx366/SphericalPolygon/graphs/commit-activity) [![GitHub license](https://img.shields.io/github/license/lcx366/SphericalPolygon.svg)](https://github.com/lcx366/SphericalPolygon/blob/master/LICENSE) [![Documentation Status](https://readthedocs.org/projects/pystmos/badge/?version=latest)](http://sphericalpolygon.readthedocs.io/?badge=latest)\n\nThe SphericalPolygon package is an archive of scientific routines for handling spherical polygons. Currently, operations on spherical polygons include:\n\n1. calculate the area or mass(if the area density is given) \n2. calculate the perimeter\n3. identify the centroid \n4. compute the geometrical or physical moment of inertia tensor\n5. determine whether one or multiple points are inside the spherical polygon\n\n## How to Install\n\nOn Linux, macOS and Windows architectures, the binary wheels can be installed using **pip** by executing one of the following commands:\n\n```\npip install sphericalpolygon\npip install sphericalpolygon --upgrade # to upgrade a pre-existing installation\n```\n\n## How to use\n\n### Create a spherical polygon\n\nSpherical polygons can be created from a 2d array in form of `[[lat_0,lon_0],..,[lat_n,lon_n]]` with unit of degrees, or from a boundary file, such as those in [Plate boundaries for NNR-MORVEL56 model](http://geoscience.wisc.edu/~chuck/MORVEL/PltBoundaries.html). The spherical polygon accepts a latitude range of [-90,90] and a longitude range of [-180,180] or [0,360].\n\n\n```python\nfrom sphericalpolygon import Sphericalpolygon\nfrom astropy import units as u\n# build a spherical polygon for Antarctica Plate\npolygon = Sphericalpolygon.from_file('NnrMRVL_PltBndsLatLon/an',skiprows=1) \nprint(polygon.orientation)\n```\n\n    Counterclockwise\n\n\n### Calculate the area\n\nCalculate the area(or the solid angle) of a spherical polygon over a unit sphere.\n\n\n```python\nprint(polygon.area())\n```\n\n    1.4326235943514618\n\n\nCalculate the area of the spherical polygon over the Earth with an averaged radius of 6371km.\n\n\n```python\nRe = 6371*u.km\nprint(polygon.area(Re))\n```\n\n    58149677.38285546 km2\n\n\nCalculate the mass of the spherical polygon shell with a thickness of 100km and density of 3.1g/cm3 over the Earth.\n\n\n```python\nthickness, density = 100*u.km, 3.1*u.g/u.cm**3\nrho = thickness * density # area density\nprint(polygon.area(Re,rho))\n```\n\n    18026399988.685192 g km3 / cm3\n\n\n### Calculate the perimeter\n\nCalculate the perimeter of a spherical polygon over a unit sphere.\n\n\n```python\nprint(polygon.perimeter())\n```\n\n    6.322665894174733\n\n\nCalculate the perimeter of a spherical polygon over the Earth.\n\n\n```python\nprint(polygon.perimeter(Re))\n```\n\n    40281.70441178723 km\n\n\n### Calculate the compactness\n\n\n```python\nprint(polygon.compactness())\n```\n\n    0.39900007941415533\n\n\n### Identify the centroid\n\nIdentify the centroid of a spherical polygon over a unit sphere.\n\n\n```python\nprint(polygon.centroid())\n```\n\n    (<Quantity -83.61081032 deg>, <Quantity 57.80052887 deg>, 0.13827778179537997)\n\n\nIdentify the centroid of a spherical polygon over the Earth.\n\n\n```python\nprint(polygon.centroid(Re))\n```\n\n    (<Quantity -83.61081032 deg>, <Quantity 57.80052887 deg>, <Quantity 880.96774782 km>)\n\n\nIt shows that the latitude of the centroid is close to the South Pole, and the centroid is located about 881km underground.\n\n### Compute the moment of inertia tensor\n\nCompute the geometrical moment of inertia tensor of a spherical polygon over a unit sphere. The tensor is symmetrical and has six independent components. The first three components are located diagonally, corresponding to $Q_{11}$, $Q_{22}$, and $Q_{33}$; the last three components correspond to $Q_{12}$, $Q_{13}$, and $Q_{23}$.\n\n\n```python\nprint(polygon.inertia())\n```\n\n    [ 1.32669154  1.17471081  0.36384484 -0.05095381  0.05246122  0.08126929]\n\n\nCompute the physical moment of inertia tensor of the spherical polygon shell over the Earth.\n\n\n```python\nprint(polygon.inertia(Re,rho))\n```\n\n    [ 6.77582335e+17  5.99961081e+17  1.85826792e+17 -2.60236820e+16\n      2.67935659e+16  4.15067357e+16] g km5 / cm3\n\n\n### Points are inside a polygon？\n\nDetermine if a single point or multiple points are inside a given spherical polygon.\n\n#### single point\n\n\n```python\nprint(polygon.contains_points([75,152]))\n```\n\n    False\n\n\n#### multiple points\n\n\n```python\nprint(polygon.contains_points([[-85,130],[35,70]]))\n```\n\n    [True, False]\n\n\n### Change log\n- **1.2.2 — Mar 3,  2021**\n  - Add the `compactness()` method, which reflects the deviation of a polygon from a spherical cap.\n- **1.2.1 — Feb 23,  2021**\n  - Replace the function *create_polygon* for building a spherical polygon object from a 2d array with methods `from_array` and `from_file`.\n- **1.2.0 — Mar 20,  2020**\n  - Add the `perimeter()` method that may calculate the perimeter of a spherical polygon.\n  - Add the `centroid()` method that may determaine the centroid location for a spherical polygon.\n\n## Reference\n\nChunxiao, Li. \"Inertia Tensor for MORVEL Tectonic Plates.\" *ASTRONOMICAL RESEARCH AND TECHNOLOGY* 13.1 (2016).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lcx366/SphericalPolygon",
    "keywords": "spherical polygon,polygon area,polygon inertia tensor",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sphericalpolygon",
    "package_url": "https://pypi.org/project/sphericalpolygon/",
    "platform": "",
    "project_url": "https://pypi.org/project/sphericalpolygon/",
    "project_urls": {
      "Homepage": "https://github.com/lcx366/SphericalPolygon"
    },
    "release_url": "https://pypi.org/project/sphericalpolygon/1.2.2/",
    "requires_dist": [
      "scipy",
      "numpy",
      "astropy"
    ],
    "requires_python": ">=3.6",
    "summary": "A package to handle the spherical polygon",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9608562,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1faf64a94087cba583f65e4d0eea7657f23333f395773c04a9f3b530aedefde",
          "md5": "07b827c2c603b32f8e1dde2b458a4701",
          "sha256": "e2c7b933da39bb76b5a3e17e5cfc468c7299975268cbbab4605edc6b295660ae"
        },
        "downloads": -1,
        "filename": "sphericalpolygon-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07b827c2c603b32f8e1dde2b458a4701",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10376,
        "upload_time": "2020-01-10T14:32:25",
        "upload_time_iso_8601": "2020-01-10T14:32:25.289002Z",
        "url": "https://files.pythonhosted.org/packages/b1/fa/f64a94087cba583f65e4d0eea7657f23333f395773c04a9f3b530aedefde/sphericalpolygon-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abd967036053ee65e956e65c4794390e3abf4c2bb2bbeebd95ff61b60e3c187b",
          "md5": "b3ddecaee642e66629120b2e8c7dd6f4",
          "sha256": "1b2ef3512a7c17a2b411f8cc979b8f2d4b6ff76224b0fb91b4725d0e5272c6f0"
        },
        "downloads": -1,
        "filename": "sphericalpolygon-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3ddecaee642e66629120b2e8c7dd6f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10526,
        "upload_time": "2020-01-12T14:14:00",
        "upload_time_iso_8601": "2020-01-12T14:14:00.095809Z",
        "url": "https://files.pythonhosted.org/packages/ab/d9/67036053ee65e956e65c4794390e3abf4c2bb2bbeebd95ff61b60e3c187b/sphericalpolygon-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4a7a8dbd9d992a440909c873162ffb4f875e7d26b5ef6351434ee8ff9f477b2",
          "md5": "57448089cd332189ab7a1b91f45930bf",
          "sha256": "6d65fdb3acb2b2844d3bc65df23cb241d70672aa7bd62a2933dd8296665a8049"
        },
        "downloads": -1,
        "filename": "sphericalpolygon-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57448089cd332189ab7a1b91f45930bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11437,
        "upload_time": "2020-03-19T08:17:32",
        "upload_time_iso_8601": "2020-03-19T08:17:32.413902Z",
        "url": "https://files.pythonhosted.org/packages/a4/a7/a8dbd9d992a440909c873162ffb4f875e7d26b5ef6351434ee8ff9f477b2/sphericalpolygon-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "972181290462f942f42c02433ccba137b50f5e114a2e61a628053304b6fb7553",
          "md5": "76727ad8852315e77837d0afb87655c8",
          "sha256": "b038e3b43750ec56e1c58c11b4976538e506af0cab94871eaf42d9cf902b5790"
        },
        "downloads": -1,
        "filename": "sphericalpolygon-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76727ad8852315e77837d0afb87655c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13021,
        "upload_time": "2020-03-20T09:08:27",
        "upload_time_iso_8601": "2020-03-20T09:08:27.280407Z",
        "url": "https://files.pythonhosted.org/packages/97/21/81290462f942f42c02433ccba137b50f5e114a2e61a628053304b6fb7553/sphericalpolygon-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d7b8a596da8629f2e6e8109158d585854815782b87bea8e8f8a2c7fb6fcb08f",
          "md5": "f4dd2fe6d061cdcc8f56e1dd7d2f4eb2",
          "sha256": "79e1677aae0c5eaca71cf10e61c058f09d338540ddd3434f57d64dccd6274263"
        },
        "downloads": -1,
        "filename": "sphericalpolygon-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4dd2fe6d061cdcc8f56e1dd7d2f4eb2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13267,
        "upload_time": "2021-02-23T09:24:17",
        "upload_time_iso_8601": "2021-02-23T09:24:17.294726Z",
        "url": "https://files.pythonhosted.org/packages/4d/7b/8a596da8629f2e6e8109158d585854815782b87bea8e8f8a2c7fb6fcb08f/sphericalpolygon-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fc80868312bd14cbb9708a341337646de98049df630e80a556db17e6b5d161d",
          "md5": "5dec87546c54bb2a84ceb496059c1abc",
          "sha256": "706d96fb9ac570e67c6e809322f278a1422e70a7ad14fddf81aea90fa692d1e7"
        },
        "downloads": -1,
        "filename": "sphericalpolygon-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5dec87546c54bb2a84ceb496059c1abc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13507,
        "upload_time": "2021-03-03T07:59:57",
        "upload_time_iso_8601": "2021-03-03T07:59:57.971288Z",
        "url": "https://files.pythonhosted.org/packages/5f/c8/0868312bd14cbb9708a341337646de98049df630e80a556db17e6b5d161d/sphericalpolygon-1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5fc80868312bd14cbb9708a341337646de98049df630e80a556db17e6b5d161d",
        "md5": "5dec87546c54bb2a84ceb496059c1abc",
        "sha256": "706d96fb9ac570e67c6e809322f278a1422e70a7ad14fddf81aea90fa692d1e7"
      },
      "downloads": -1,
      "filename": "sphericalpolygon-1.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5dec87546c54bb2a84ceb496059c1abc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13507,
      "upload_time": "2021-03-03T07:59:57",
      "upload_time_iso_8601": "2021-03-03T07:59:57.971288Z",
      "url": "https://files.pythonhosted.org/packages/5f/c8/0868312bd14cbb9708a341337646de98049df630e80a556db17e6b5d161d/sphericalpolygon-1.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}