{
  "info": {
    "author": "Adam Hawley",
    "author_email": "ajh651@york.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# GraDiAn\nThe Grammatical Distribution Analyser (GraDiAn) is used for analysing grammatical distributions; particularly the distributions of popular NLP datasets.\n\nAt the moment, GraDiAn does this by providing two abstract data types: the Syntactic Dependency Counter and the SentTree.\n\n## SentTree\n`SentTree` represents a given sentence in a tree structure.\nImportantly, the `SentTree` can be used to analyse the parse-tree with regards to different properties of the text including part-of-speech tags, syntactic dependencies and (with the help of [spaCyTextBlob](https://spacy.io/universe/project/spacy-textblob)) sentiment.\n\n##Â Syntactic Dependency Counter (SDC)\nAn `SDC` does what it says on the tin.\nInheriting from python's `collections.Counter` class, it maintains a count of syntactic dependency labels.\n\n## Usage\n\n### Syntactic Dependency Counter\nSyntactic Dependency Counter from text:\n```\n>>> from gradian import SDC\n>>> sdc = SDC.from_string('This is a test sentence!')\n>>> sdc\nSDC({'nsubj': 1, 'ROOT': 1, 'det': 1, 'compound': 1, 'attr': 1, 'punct': 1})\n```\n\nOr from a series of texts:\n```\n>>> from gradian import SDC\n>>> sdc = SDC.from_string_arr(['This is a test sentence!', 'This is another sentence',\n                               'How about another?'])\n>>> sdc\nSDC({'ROOT': 3, 'nsubj': 2, 'det': 2, 'attr': 2, 'punct': 2, 'compound': 1, 'advmod': 1, 'pobj': 1}\n```\n\n### SentTree\nSentTree from text:\n```\n>>> from gradian import SentTree\n>>> sent_trees = SentTree.from_string('This is a test sentence! But this is another!')\n>>> # Sent_Tree.from_string produces a list of trees; one for each sentence\n>>> sent_trees[0].attr_tree('pos')  # Get the Tree with respect to the sentence's POS-Tags\nTree('AUX', ['DET', Tree('NOUN', ['DET', 'NOUN']), 'PUNCT'])\n```\n\n`attr_tree` can be used with any attribute of the tree including syntactic dependencies, POS-tags and (if spaCyTextBlob is enabled) sentiment.\n```\n>>> sent_trees[0].attr_tree('dependency')\nTree('ROOT', ['nsubj', Tree('attr', ['det', 'compound']), 'punct'])\n```\nThe function can be called with `token=True` to see the attributes alongside the relevant tokens:\n```\n>>> # token is a positional argument so does not need to be explicitly provided by keyword\n>>> sent_trees[0].attr_tree('pos', token=True)  \nTree('is:  AUX', ['This: DET', Tree('sentence:  NOUN', ['a: DET', 'test: NOUN']), '!: PUNCT'])\n```\n\n`SentTrees` also come with the ability to create multi-attribute trees.\n```\n>>> sent_trees[0].multi_attr_tree(['pos', 'dependency'], True)\nTree('is:AUX:ROOT', ['This:DET:nsubj', Tree('sentence:NOUN:attr', ['a:DET:det', 'test:NOUN:compound']), '!:PUNCT:punct'])\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adamjhawley/GraDiAn",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "GraDiAn",
    "package_url": "https://pypi.org/project/GraDiAn/",
    "platform": "",
    "project_url": "https://pypi.org/project/GraDiAn/",
    "project_urls": {
      "Homepage": "https://github.com/adamjhawley/GraDiAn"
    },
    "release_url": "https://pypi.org/project/GraDiAn/0.0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A grammatical distribution analyser for NLP datasets.",
    "version": "0.0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10768346,
  "releases": {
    "0.0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "109fe42bc7f7cb605d4ea6f4f04d85c6b30bb96f43298c55ec56b9562eae52dc",
          "md5": "b4581b92880c7e476166cedfc8f582ca",
          "sha256": "deee6a98e31c59f1a0ec0788694f8784058bf65e611ba67ed5b109760d3cbdc6"
        },
        "downloads": -1,
        "filename": "GraDiAn-0.0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4581b92880c7e476166cedfc8f582ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20700,
        "upload_time": "2021-06-28T22:37:50",
        "upload_time_iso_8601": "2021-06-28T22:37:50.114510Z",
        "url": "https://files.pythonhosted.org/packages/10/9f/e42bc7f7cb605d4ea6f4f04d85c6b30bb96f43298c55ec56b9562eae52dc/GraDiAn-0.0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b390c68eb349e1439597312562a87e2cf4cce59ade0ca0da8db36857510ff095",
          "md5": "572d5ccee7c0a256ce9e0af85478a8e9",
          "sha256": "d3ef69df971879244ecb417aaee011f4e9163933a728ca0e566d7322a7534bb0"
        },
        "downloads": -1,
        "filename": "GraDiAn-0.0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "572d5ccee7c0a256ce9e0af85478a8e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19206,
        "upload_time": "2021-06-28T22:37:52",
        "upload_time_iso_8601": "2021-06-28T22:37:52.106775Z",
        "url": "https://files.pythonhosted.org/packages/b3/90/c68eb349e1439597312562a87e2cf4cce59ade0ca0da8db36857510ff095/GraDiAn-0.0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "109fe42bc7f7cb605d4ea6f4f04d85c6b30bb96f43298c55ec56b9562eae52dc",
        "md5": "b4581b92880c7e476166cedfc8f582ca",
        "sha256": "deee6a98e31c59f1a0ec0788694f8784058bf65e611ba67ed5b109760d3cbdc6"
      },
      "downloads": -1,
      "filename": "GraDiAn-0.0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b4581b92880c7e476166cedfc8f582ca",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20700,
      "upload_time": "2021-06-28T22:37:50",
      "upload_time_iso_8601": "2021-06-28T22:37:50.114510Z",
      "url": "https://files.pythonhosted.org/packages/10/9f/e42bc7f7cb605d4ea6f4f04d85c6b30bb96f43298c55ec56b9562eae52dc/GraDiAn-0.0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b390c68eb349e1439597312562a87e2cf4cce59ade0ca0da8db36857510ff095",
        "md5": "572d5ccee7c0a256ce9e0af85478a8e9",
        "sha256": "d3ef69df971879244ecb417aaee011f4e9163933a728ca0e566d7322a7534bb0"
      },
      "downloads": -1,
      "filename": "GraDiAn-0.0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "572d5ccee7c0a256ce9e0af85478a8e9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19206,
      "upload_time": "2021-06-28T22:37:52",
      "upload_time_iso_8601": "2021-06-28T22:37:52.106775Z",
      "url": "https://files.pythonhosted.org/packages/b3/90/c68eb349e1439597312562a87e2cf4cce59ade0ca0da8db36857510ff095/GraDiAn-0.0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}