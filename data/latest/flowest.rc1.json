{
  "info": {
    "author": "Mher Movsisyan",
    "author_email": "mher.movsisyan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: System :: Distributed Computing"
    ],
    "description": "# Flowest\n[![support](images/support.svg)](https://gitter.im/python-flowest/support)\n[![support](images/pypi.svg)](https://pypi.org/project/flowest/)\n[![support](images/github.svg)](https://github.com/python-flowest/flowest/packages)\n[![support](images/dockerhub.svg)](https://hub.docker.com/repository/docker/flowest/flowest/general)\n\nThis repo is a fork of https://github.com/mher/flower. It integreates new\nfeatures that are not yet merge to the flower branch and in general will be more\nactive than the original flower repo.\n\n## Where to get it\n### Docker images\n#### DockerHub repo\n``` bash\ndocker image pull\n```\n#### Github repo (latest only)\nYou can use docker image:\n``` bash\ndocker image pull\n```\n#### Install with pip from pypi\nIf you want to install it from pypi\n``` bash\npip install flowest\n```\n#### Build from source\n``` bash\ngit clone\npip install -r\nsetup.py install\n```\n\n## support\nIf you need help you can get support on gitter:\nhttps://gitter.im/python-flowest/support\n\n\nFlower is a web based tool for monitoring and administrating Celery clusters.\n\n## Features\n\n- Real-time monitoring using Celery Events\n\n    - Task progress and history\n    - Ability to show task details (arguments, start time, runtime, and more)\n    - Graphs and statistics\n\n- Remote Control\n\n    - View worker status and statistics\n    - Shutdown and restart worker instances\n    - Control worker pool size and autoscale settings\n    - View and modify the queues a worker instance consumes from\n    - View currently running tasks\n    - View scheduled tasks (ETA/countdown)\n    - View reserved and revoked tasks\n    - Apply time and rate limits\n    - Configuration viewer\n    - Revoke or terminate tasks\n\n- Broker monitoring\n\n    - View statistics for all Celery queues\n    - Queue length graphs\n\n- HTTP API\n- Basic Auth and Google OpenID authentication\n\n## API\n\nFlower API enables to manage the cluster via REST API, call tasks and\nreceive task events in real-time via WebSockets.\n\nFor example you can restart worker's pool by:\n``` bash\ncurl -X POST http://localhost:5555/api/worker/pool/restart/myworker\n```\n\nOr call a task by:\n``` bash\ncurl -X POST -d '{\"args\":[1,2]}' http://localhost:5555/api/task/async-apply/tasks.add\n```\n\nOr terminate executing task by: ::\n``` bash\ncurl -X POST -d 'terminate=True' http://localhost:5555/api/task/revoke/8a4da87b-e12b-4547-b89a-e92e4d1f8efd\n```\n\nOr receive task completion events in real-time:\n``` javascript\nvar ws = new WebSocket('ws://localhost:5555/api/task/events/task-succeeded/');\nws.onmessage = function (event) {\n  console.log(event.data);\n}\n```\n\nFor more info checkout [`API Reference`](https://flower.readthedocs.io/en/latest/api.html) and [`examples`](http://nbviewer.ipython.org/urls/raw.github.com/mher/flower/master/docs/api.ipynb).\n\n## Usage\n\nLaunch the server and open http://localhost:5555\n\n``` bash\nflower --port=5555\n```\n\nOr launch from celery\n``` bash\ncelery flower -A proj --address=127.0.0.1 --port=5555\n```\n\nBroker URL and other configuration options can be passed through the standard Celery options\n``` bash\ncelery flower -A proj --broker=amqp://guest:guest@localhost:5672//\n```\n\nOr run with unix socket file\n``` bash\nflower --unix_socket=/tmp/flower.sock\n```\n\n## Documentation\n\nDocumentation is available at [`Read the Docs`](https://flower.readthedocs.io) and [`IPython Notebook Viewer`](http://nbviewer.ipython.org/urls/raw.github.com/mher/flower/master/docs/api.ipynb)\n\n## License\n\nFlower is licensed under BSD 3-Clause License. See the LICENSE file\nin the top distribution directory for the full license text.\n\nAll changes made by Gabriel-Desharnais are under MIT license\n\n## Getting help\n\nPlease head over to #celery IRC channel on irc.freenode.net or\n[`open an issue`](https://github.com/mher/flower/issues).\n\n## Contributing\n\nIf you'd like to contribute, simply fork the repository, commit your\nchanges, run the tests and send a pull request.\nIf you are interested in maintaining the project please contact.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mher/flower",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flowest",
    "package_url": "https://pypi.org/project/flowest/",
    "platform": "",
    "project_url": "https://pypi.org/project/flowest/",
    "project_urls": {
      "Homepage": "https://github.com/mher/flower"
    },
    "release_url": "https://pypi.org/project/flowest/1.0.0/",
    "requires_dist": [
      "humanize (==0.5.1)",
      "pytz",
      "tornado (<6.0.0,>=5.0.0) ; python_version < \"3.5.2\"",
      "celery (>=3.1.0) ; python_version < \"3.7\"",
      "tornado (<7.0.0,>=5.0.0) ; python_version >= \"3.5.2\"",
      "celery (>=4.3.0) ; python_version >= \"3.7\""
    ],
    "requires_python": "",
    "summary": "Celery Flower",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7206662,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99b951477916ca0597044932547ce25f07308a1f3ecf07aebea2535a13a2f9c2",
          "md5": "01c8b968f9a5fdabea330c65f8e5959b",
          "sha256": "5685b07f9b4640ff5b32be4a35be8176bae2323ca758ac0ebe0544d8a3279752"
        },
        "downloads": -1,
        "filename": "flowest-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01c8b968f9a5fdabea330c65f8e5959b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 456308,
        "upload_time": "2020-05-10T03:50:34",
        "upload_time_iso_8601": "2020-05-10T03:50:34.347994Z",
        "url": "https://files.pythonhosted.org/packages/99/b9/51477916ca0597044932547ce25f07308a1f3ecf07aebea2535a13a2f9c2/flowest-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2dd4a6aed7ea4846d09d90086074e8959cfabf232b32d4fd40ab032c1787ea67",
          "md5": "cfd99df5a920e50b258e1e47328a8041",
          "sha256": "476b1605844388ac0724ea380f4172692632c9c28e7b25089dc3212c6056be5f"
        },
        "downloads": -1,
        "filename": "flowest-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cfd99df5a920e50b258e1e47328a8041",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1295350,
        "upload_time": "2020-05-10T03:50:35",
        "upload_time_iso_8601": "2020-05-10T03:50:35.768364Z",
        "url": "https://files.pythonhosted.org/packages/2d/d4/a6aed7ea4846d09d90086074e8959cfabf232b32d4fd40ab032c1787ea67/flowest-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99b951477916ca0597044932547ce25f07308a1f3ecf07aebea2535a13a2f9c2",
        "md5": "01c8b968f9a5fdabea330c65f8e5959b",
        "sha256": "5685b07f9b4640ff5b32be4a35be8176bae2323ca758ac0ebe0544d8a3279752"
      },
      "downloads": -1,
      "filename": "flowest-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "01c8b968f9a5fdabea330c65f8e5959b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 456308,
      "upload_time": "2020-05-10T03:50:34",
      "upload_time_iso_8601": "2020-05-10T03:50:34.347994Z",
      "url": "https://files.pythonhosted.org/packages/99/b9/51477916ca0597044932547ce25f07308a1f3ecf07aebea2535a13a2f9c2/flowest-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2dd4a6aed7ea4846d09d90086074e8959cfabf232b32d4fd40ab032c1787ea67",
        "md5": "cfd99df5a920e50b258e1e47328a8041",
        "sha256": "476b1605844388ac0724ea380f4172692632c9c28e7b25089dc3212c6056be5f"
      },
      "downloads": -1,
      "filename": "flowest-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cfd99df5a920e50b258e1e47328a8041",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1295350,
      "upload_time": "2020-05-10T03:50:35",
      "upload_time_iso_8601": "2020-05-10T03:50:35.768364Z",
      "url": "https://files.pythonhosted.org/packages/2d/d4/a6aed7ea4846d09d90086074e8959cfabf232b32d4fd40ab032c1787ea67/flowest-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}