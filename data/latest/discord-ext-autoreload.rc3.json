{
  "info": {
    "author": "nerdguyahmad",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "# discord-ext-autoreload\nA discord.py extension that allows automatic hot-reloading of extensions\n\nWhen it comes to bot development, reloading extensions at runtime is quite a common practice.\nHowever, currently there is no way of automatically hot reloading extensions. This simple\nextension allows you to conveniently auto-reload extensions.\n\nThe features of this extension are:\n\n- Easy to setup and use\n- Proper exceptions handling during auto-reload\n- Minimal interface matching that of discord.py\n- Compatible with both discord.py v1.7 and v2.0\n\n## Installation\nThis extension can easily be installed using `pip`:\n```bash\npip install discord-ext-autoreload\n```\n\n## Usage\nThe `Reloader` class is used for setting up automatic reloads.\n```py\nimport discord\nfrom discord.ext import commands, autoreload\n\nbot = commands.Bot(command_prefix=\"!\", intents=discord.Intents.all())\nreloader = autoreload.Reloader(ext_directory=\"cogs\")\n\nif __name__ == \"__main__\":\n    reloader.start(bot)\n    bot.run()\n```\n\n<details>\n  <summary>For discord.py 2.0</summary>\n  <br/>\n\n  In discord.py 2.0 and higher, you would need to call the `reloader.start()`\n  method in an async context. The most convenient way of doing this is by\n  overriding the `Bot.setup_hook()` method.\n\n  ```py\n  class Bot(commands.Bot):\n    async def setup_hook(self) -> None:\n        reloader.start(self)\n  ```\n\n</details>\n\nAnd done! The `Reloader` class will start watching the provided `ext_directory` for\nchanges in loaded extensions and as soon as an extension is updated, It will automatically\nbe reloaded.\n\n### Stopping the reloader\nSometimes, you might want to stop the reloader. You can use the `Reloader.stop()` method\nto easily do so. For example:\n\n```py\n@bot.command()\nasync def togglereload(ctx):\n    if reloader.stopped:\n        reloader.start(bot)\n        await ctx.send(\"Enabled\")\n    else:\n        reloader.stop()\n        await ctx.send(\"Disabled\")\n```\n\n### Error Handling\nWhen auto reloading fails for some reason, the error is properly handled and propagated\nto `Reloader.on_error`. This function by default logs the error but can be overridden to\nimplement custom functionality.\n\n```py\nimport traceback\n\nclass Reloader(autoreload.Reloader):\n    async def on_error(self, extension: str):\n        print(f\"Extension {extension!r} failed to auto reload\")\n        traceback.print_exc()\n```\n\n### Tracking reloads\nWhen an extension is reloaded, the `Reloader.on_reload` method is called. This method can\nbe implemented by a subclass to easily track successful automatic reloads.\n\n### Excluding extensions from reloading\nSometimes, you want certain extensions to not be subject of automatic reloading. Fortunately,\nthis package allows you to exclude certain extensions by passing the `exclude_exts` keyword\nargument in `Reloader` class.\n```py\nreloader = Reloader(ext_directory=\"cogs\", exclude_exts=[\"cogs.some_extension\"])\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nerdguyahmad/discord-ext-autoreload",
    "keywords": "discord.py,discord,reload,asyncio",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "discord-ext-autoreload",
    "package_url": "https://pypi.org/project/discord-ext-autoreload/",
    "platform": null,
    "project_url": "https://pypi.org/project/discord-ext-autoreload/",
    "project_urls": {
      "Homepage": "https://github.com/nerdguyahmad/discord-ext-autoreload"
    },
    "release_url": "https://pypi.org/project/discord-ext-autoreload/0.1.2/",
    "requires_dist": [
      "watchfiles (==0.15.0)",
      "discord.py (>=1.7)"
    ],
    "requires_python": ">=3.5.3",
    "summary": "A discord.py extension that allows automatic hot-reloading of extensions",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14565861,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecbcda2944e1835097f20bc1415506c229cd3e3af07c3ac514904c480740e797",
          "md5": "88555970828a51a75ee276c064f43943",
          "sha256": "e071ab0bf202f470b7c76ad9a23790f1a076c63cc60a37a36e489cc7107539af"
        },
        "downloads": -1,
        "filename": "discord_ext_autoreload-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "88555970828a51a75ee276c064f43943",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.3",
        "size": 4558,
        "upload_time": "2022-07-24T13:55:08",
        "upload_time_iso_8601": "2022-07-24T13:55:08.640612Z",
        "url": "https://files.pythonhosted.org/packages/ec/bc/da2944e1835097f20bc1415506c229cd3e3af07c3ac514904c480740e797/discord_ext_autoreload-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e639545e0962d6f2d9d3aaea4bad9c327145e034f87c4fc386f9c10be320008",
          "md5": "699daf77c9e299288e9a4c61a9639512",
          "sha256": "4e9db35c255124b1b871334c27f28250cc2f68e9839e74d84ccebe0e999eb8c9"
        },
        "downloads": -1,
        "filename": "discord_ext_autoreload-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "699daf77c9e299288e9a4c61a9639512",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.3",
        "size": 5868,
        "upload_time": "2022-07-24T14:03:11",
        "upload_time_iso_8601": "2022-07-24T14:03:11.985171Z",
        "url": "https://files.pythonhosted.org/packages/4e/63/9545e0962d6f2d9d3aaea4bad9c327145e034f87c4fc386f9c10be320008/discord_ext_autoreload-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d72d5f808a6554e0d3e6dd17b197db45fbfe4efea910a11b23e35ba3b59a533",
          "md5": "f347e29d0d71723e0d4333ed5226503c",
          "sha256": "ac3b7478508ad656d64c9e9c2a4cf7435703a3faf1b6e80b3019e07353db9a75"
        },
        "downloads": -1,
        "filename": "discord_ext_autoreload-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f347e29d0d71723e0d4333ed5226503c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.3",
        "size": 6111,
        "upload_time": "2022-07-27T13:36:53",
        "upload_time_iso_8601": "2022-07-27T13:36:53.447705Z",
        "url": "https://files.pythonhosted.org/packages/1d/72/d5f808a6554e0d3e6dd17b197db45fbfe4efea910a11b23e35ba3b59a533/discord_ext_autoreload-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d72d5f808a6554e0d3e6dd17b197db45fbfe4efea910a11b23e35ba3b59a533",
        "md5": "f347e29d0d71723e0d4333ed5226503c",
        "sha256": "ac3b7478508ad656d64c9e9c2a4cf7435703a3faf1b6e80b3019e07353db9a75"
      },
      "downloads": -1,
      "filename": "discord_ext_autoreload-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f347e29d0d71723e0d4333ed5226503c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5.3",
      "size": 6111,
      "upload_time": "2022-07-27T13:36:53",
      "upload_time_iso_8601": "2022-07-27T13:36:53.447705Z",
      "url": "https://files.pythonhosted.org/packages/1d/72/d5f808a6554e0d3e6dd17b197db45fbfe4efea910a11b23e35ba3b59a533/discord_ext_autoreload-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}