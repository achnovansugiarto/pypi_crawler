{
  "info": {
    "author": "Luca Miguel de Carvalho",
    "author_email": "lucasmigueel@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# ppinet - A Python package for biological network generation and analysis\n\n# Installing\n\nTo build and install from source, run\n\n```shell\npython setup.py install\n```\nYou can also install from pip with\n\n```shell\npip install ppinet\n``` \n\n# Overview\n\nppinet generates a network from a list of genes/proteins. It provides both an easy-to-use object-oriented Python API and a command-line interface (CLI) for generating a biological network and post-analysis.\n\nppinet features include:\n\n    Generates a biological network from STRING database\n    Calculates network metrics and enrichment\n    Execute a louvain community detection\n    Find important genes in network based on shortest-path analysis and betweenness centrality\n\n# Command-line interface\n\nppinet can be executed from the command line using the ppinet command. It takes a gene list file, output folder name and organism taxid (based on STRING) as input and outputs a several analysis of the biological network generated. \n\n```\nusage: ppinet [-h] --input_file INPUT_FILE --organism ORGANISM --output_folder OUTPUT_FOLDER [--genes GENES]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --input_file INPUT_FILE\n                        File containing a gene list.\n  --organism ORGANISM   STRING taxonomy ID. Ex: 9606\n  --output_folder OUTPUT_FOLDER\n                        Output folder\n  --genes GENES         Interesting genes for Shortest-path analysis..\n\nexample: python3 ppinet.py --input_file gene_list.txt --output ppinet_output --organism 9606\n```\nIn the output_folder, ppinet generates the following outputs:\n\n1. species.txt :  a file containg all STRING taxonomy IDs. If you provide a invalid taxid, we advised to inspect this file.\n2. degree_distribution.pdf : a PDF file containing the degree distribution of the biological network\n3. network.png : a snapshot of the biological network\n4. network_bc.png : a snapshot of the biological network based on betweenness centrality \n5. nodes_network2cyto.txt : all nodes and your attributes for Cytoscape analysis\n6. edges_network2cyto.txt : all edges and your attributes for Cytoscape analysis\n7. reports_ppinet.txt : general metrics of the biological network\n8. enrichment.txt : enrichment analysis of the biological network\n\nif the --genes argument is taken as input, three extra files will be generated:\n\n9. louvain_clustering.png :  louvain community detection of the network\n10. enrichment_shortestpath.txt : a file containing the enrichment analysis of all genes present in all shorthest-path from interesting genes\n11. shortestpath_BC.txt : a file containing all interesting genes and its betweenness centrality (bc). As higher the value of bc as more important the gene of interest becomes.\n\n# Python library usage\n\nppinet generates a folder in currently folder with output_folder name. \n\nTo use as a Python library\n\n```python\n\nimport ppinet\n\n# arguments of ppinet\ninput_data = '/opt/data/input_genes.txt'\ngenes = '/opt/data/genes.txt'\noutput_folder_name = 'ppinet_output'\n\n#generates a conversion\nstring_genes = ppinet.initial(input_data,output_folder_name,4932)\n\n#generates the network metrics and return the g graph\ng = ppinet.network_metrics(string_genes,output_folder_name,4932)\n\n# generates a louvain community plot\nppinet.cl(g,output_folder_name)\n\n# shorthest-path analysis from interesting genes\nppinet.sp(g,output_folder_name,4932,genes)\n```\n\n# Examples\n\nA *data* folder contains a list with 300 genes of *S. cerevisiae* (input.txt file) and a list with 9 interesting genes (genes.txt file)\n\n* Example of a biological network from the list of 300 genes\n\n```shell\nppinet --input_file data/input.txt --organism 4932 --output_file yeast_output\n```\n\n* Example of output containing a list of genes of interest\n\n```shell\nppinet --input_file data/input.txt --organism 4932 --output_file yeast_output --genes data/genes.txt\n```\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lmigueel/ppinet/",
    "keywords": "bioinformatics,PPI network,shortest-path,stringdb",
    "license": "GNU General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ppinet",
    "package_url": "https://pypi.org/project/ppinet/",
    "platform": "",
    "project_url": "https://pypi.org/project/ppinet/",
    "project_urls": {
      "Homepage": "https://github.com/lmigueel/ppinet/"
    },
    "release_url": "https://pypi.org/project/ppinet/0.1.0/",
    "requires_dist": [
      "matplotlib",
      "numpy",
      "pandas",
      "networkx (>=2.5)",
      "stringdb",
      "python-louvain",
      "scipy (>=1.6.1)"
    ],
    "requires_python": ">=3",
    "summary": "A Python package for biological network generation and analysis.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9537361,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d9236d388f08c28fab176fceb3491c1a4e3310bfa3ef0db20d26b2f5cd8057a",
          "md5": "2f5942b39d249ca47a8ebb980a31131a",
          "sha256": "3acc963deef57f4d63f08aa4c208f49ce1d9a5a73670a478aa78a9b8ab5da613"
        },
        "downloads": -1,
        "filename": "ppinet-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f5942b39d249ca47a8ebb980a31131a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 20297,
        "upload_time": "2021-02-26T21:53:10",
        "upload_time_iso_8601": "2021-02-26T21:53:10.067102Z",
        "url": "https://files.pythonhosted.org/packages/9d/92/36d388f08c28fab176fceb3491c1a4e3310bfa3ef0db20d26b2f5cd8057a/ppinet-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe53a2908069b1b4810ad6799bbe88f0ed709c71ec1c22c8b6c85c3a15353895",
          "md5": "ba3b2284f38e5ce4f881881ba0ecf366",
          "sha256": "10b07cfd010886dd7784eaf39ae77e5d45830fc1590294514402e66885983df5"
        },
        "downloads": -1,
        "filename": "ppinet-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ba3b2284f38e5ce4f881881ba0ecf366",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 18152,
        "upload_time": "2021-02-26T21:53:11",
        "upload_time_iso_8601": "2021-02-26T21:53:11.530897Z",
        "url": "https://files.pythonhosted.org/packages/fe/53/a2908069b1b4810ad6799bbe88f0ed709c71ec1c22c8b6c85c3a15353895/ppinet-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d9236d388f08c28fab176fceb3491c1a4e3310bfa3ef0db20d26b2f5cd8057a",
        "md5": "2f5942b39d249ca47a8ebb980a31131a",
        "sha256": "3acc963deef57f4d63f08aa4c208f49ce1d9a5a73670a478aa78a9b8ab5da613"
      },
      "downloads": -1,
      "filename": "ppinet-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2f5942b39d249ca47a8ebb980a31131a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 20297,
      "upload_time": "2021-02-26T21:53:10",
      "upload_time_iso_8601": "2021-02-26T21:53:10.067102Z",
      "url": "https://files.pythonhosted.org/packages/9d/92/36d388f08c28fab176fceb3491c1a4e3310bfa3ef0db20d26b2f5cd8057a/ppinet-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe53a2908069b1b4810ad6799bbe88f0ed709c71ec1c22c8b6c85c3a15353895",
        "md5": "ba3b2284f38e5ce4f881881ba0ecf366",
        "sha256": "10b07cfd010886dd7784eaf39ae77e5d45830fc1590294514402e66885983df5"
      },
      "downloads": -1,
      "filename": "ppinet-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ba3b2284f38e5ce4f881881ba0ecf366",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 18152,
      "upload_time": "2021-02-26T21:53:11",
      "upload_time_iso_8601": "2021-02-26T21:53:11.530897Z",
      "url": "https://files.pythonhosted.org/packages/fe/53/a2908069b1b4810ad6799bbe88f0ed709c71ec1c22c8b6c85c3a15353895/ppinet-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}