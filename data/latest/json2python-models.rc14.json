{
  "info": {
    "author": "bogdandm (Bogdan Kalashnikov)",
    "author_email": "bogdan.dm1995@yandex.ru",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![json2python-models](https://raw.githubusercontent.com/bogdandm/json2python-models/master/etc/logo.png)](https://github.com/bogdandm/json2python-models)\n\n[![PyPI version](https://img.shields.io/pypi/v/json2python-models.svg?color=green)](https://badge.fury.io/py/json2python-models)\n[![Build](https://github.com/bogdandm/json2python-models/actions/workflows/test_and_release.yml/badge.svg)](https://github.com/bogdandm/json2python-models/actions/workflows/test_and_release.yml)\n[![Coverage Status](https://coveralls.io/repos/github/bogdandm/json2python-models/badge.svg?branch=master)](https://coveralls.io/github/bogdandm/json2python-models?branch=master)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/11e13f2b81d7450eb0bca4b941d16d81)](https://www.codacy.com/app/bogdandm/json2python-models?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=bogdandm/json2python-models&amp;utm_campaign=Badge_Grade)\n\n![Example](https://raw.githubusercontent.com/bogdandm/json2python-models/master/etc/convert.png)\n\njson2python-models is a [Python](https://www.python.org/) tool that can generate Python models classes\n([pydantic](https://docs.pydantic.dev/), ([sqlmodel](https://sqlmodel.tiangolo.com/),\ndataclasses, [attrs](https://www.attrs.org/en/stable/))\nfrom JSON datasets.\n\n## Features\n\n* Full **`typing` module** support\n* **Types merging** - if some field contains data of different types this will be represented as `Union` type\n* Fields and models **names** generation (unicode support included)\n* Similar **models generalization**\n* Handling **recursive data** structures (i.e. family tree)\n* Detecting **string serializable types** (i.e. datetime or just stringify numbers)\n* Detecting fields containing string constants (`Literal['foo', 'bar']`)\n* Generation models as **list** (flat models structure) or **tree** (nested models)\n* Specifying when dictionaries should be processed as **`dict` type** (by default every dict is considered as some model)\n* **CLI** API with a lot of options\n\n## Table of Contents\n\n* [Features](#features)\n* [Table of Contents](#table-of-contents)\n* [Example](#example)\n* [Installation](#installation)\n* [Usage](#usage)\n    * [CLI](#cli)\n    * [Low level API]()\n* [Tests](#tests)\n    * [Test examples](#test-examples)\n* [Built With](#built-with)\n* [Contributing](#contributing)\n* [License](#license)\n\n## Examples\n\n### Part of Path of Exile public items API\n\n```python\nfrom pydantic import BaseModel, Field\nfrom typing import List, Optional\nfrom typing_extensions import Literal\n\n\nclass Tab(BaseModel):\n    id_: str = Field(..., alias=\"id\")\n    public: bool\n    stash_type: Literal[\"CurrencyStash\", \"NormalStash\", \"PremiumStash\"] = Field(..., alias=\"stashType\")\n    items: List['Item']\n    account_name: Optional[str] = Field(None, alias=\"accountName\")\n    last_character_name: Optional[str] = Field(None, alias=\"lastCharacterName\")\n    stash: Optional[str] = None\n    league: Optional[Literal[\"Hardcore\", \"Standard\"]] = None\n```\n\n### F1 Season Results\n\n<details><summary>----- Show -----</summary>\n<p>\n\n```\ndriver_standings.json\n[\n    {\n        \"season\": \"2019\",\n        \"round\": \"3\",\n        \"DriverStandings\": [\n            {\n                \"position\": \"1\",\n                \"positionText\": \"1\",\n                \"points\": \"68\",\n                \"wins\": \"2\",\n                \"Driver\": {\n                    \"driverId\": \"hamilton\",\n                    \"permanentNumber\": \"44\",\n                    \"code\": \"HAM\",\n                    \"url\": \"http://en.wikipedia.org/wiki/Lewis_Hamilton\",\n                    \"givenName\": \"Lewis\",\n                    \"familyName\": \"Hamilton\",\n                    \"dateOfBirth\": \"1985-01-07\",\n                    \"nationality\": \"British\"\n                },\n                \"Constructors\": [\n                    {\n                        \"constructorId\": \"mercedes\",\n                        \"url\": \"http://en.wikipedia.org/wiki/Mercedes-Benz_in_Formula_One\",\n                        \"name\": \"Mercedes\",\n                        \"nationality\": \"German\"\n                    }\n                ]\n            },\n            ...\n        ]\n    }\n]\n```\n\n```\njson2models -f pydantic -m DriverStandings driver_standings.json\n```\n\n```python\nr\"\"\"\ngenerated by json2python-models v0.2.0 at Mon May  4 17:46:30 2020\ncommand: /opt/projects/json2python-models/venv/bin/json2models -f pydantic -s flat -m DriverStandings driver_standings.json\n\"\"\"\nfrom pydantic import BaseModel, Field\nfrom typing import List\nfrom typing_extensions import Literal\n\nclass DriverStandings(BaseModel):\n    season: int\n    round_: int = Field(..., alias=\"round\")\n    DriverStandings: List['DriverStanding']\n\nclass DriverStanding(BaseModel):\n    position: int\n    position_text: int = Field(..., alias=\"positionText\")\n    points: int\n    wins: int\n    driver: 'Driver' = Field(..., alias=\"Driver\")\n    constructors: List['Constructor'] = Field(..., alias=\"Constructors\")\n\nclass Driver(BaseModel):\n    driver_id: str = Field(..., alias=\"driverId\")\n    permanent_number: int = Field(..., alias=\"permanentNumber\")\n    code: str\n    url: str\n    given_name: str = Field(..., alias=\"givenName\")\n    family_name: str = Field(..., alias=\"familyName\")\n    date_of_birth: str = Field(..., alias=\"dateOfBirth\")\n    nationality: str\n\nclass Constructor(BaseModel):\n    constructor_id: str = Field(..., alias=\"constructorId\")\n    url: str\n    name: str\n    nationality: Literal[\"Austrian\", \"German\", \"American\", \"British\", \"Italian\", \"French\"]\n```\n\n</p>\n</details>\n\n### Swagger\n\n<details><summary>----- Show -----</summary>\n<p>\n\n`swagger.json` from any online API (I tested file generated by drf-yasg and another one for Spotify API)\n\nIt requires a bit of tweaking:\n* Some fields store routes/models specs as dicts\n* There are a lot of optional fields, so we reduce merging threshold\n* Disable string literals\n\n```\njson2models -f dataclasses -m Swagger testing_tools/swagger.json \\\n    --dict-keys-fields securityDefinitions paths responses definitions properties \\\n    --merge percent_50 number --max-strings-literals 0\n```\n\n```python\nr\"\"\"\ngenerated by json2python-models v0.2.0 at Mon May  4 18:08:09 2020\ncommand: /opt/projects/json2python-models/json_to_models/__main__.py -s flat -f dataclasses -m Swagger testing_tools/swagger.json --max-strings-literals 0 --dict-keys-fields securityDefinitions paths responses definitions properties --merge percent_50 number\n\"\"\"\nfrom dataclasses import dataclass, field\nfrom json_to_models.dynamic_typing import FloatString\nfrom typing import Any, Dict, List, Optional, Union\n\n\n@dataclass\nclass Swagger:\n    swagger: FloatString\n    info: 'Info'\n    host: str\n    schemes: List[str]\n    base_path: str\n    consumes: List[str]\n    produces: List[str]\n    security_definitions: Dict[str, 'Parameter_SecurityDefinition']\n    security: List['Security']\n    paths: Dict[str, 'Path']\n    definitions: Dict[str, 'Definition_Schema']\n\n\n@dataclass\nclass Info:\n    title: str\n    description: str\n    version: str\n\n\n@dataclass\nclass Security:\n    api_key: Optional[List[Any]] = field(default_factory=list)\n    basic: Optional[List[Any]] = field(default_factory=list)\n\n\n@dataclass\nclass Path:\n    parameters: List['Parameter_SecurityDefinition']\n    post: Optional['Delete_Get_Patch_Post_Put'] = None\n    get: Optional['Delete_Get_Patch_Post_Put'] = None\n    put: Optional['Delete_Get_Patch_Post_Put'] = None\n    patch: Optional['Delete_Get_Patch_Post_Put'] = None\n    delete: Optional['Delete_Get_Patch_Post_Put'] = None\n\n\n@dataclass\nclass Property:\n    type_: str\n    format_: Optional[str] = None\n    xnullable: Optional[bool] = None\n    items: Optional['Item_Schema'] = None\n\n\n@dataclass\nclass Property_2E:\n    type_: str\n    title: Optional[str] = None\n    read_only: Optional[bool] = None\n    max_length: Optional[int] = None\n    min_length: Optional[int] = None\n    items: Optional['Item'] = None\n    enum: Optional[List[str]] = field(default_factory=list)\n    maximum: Optional[int] = None\n    minimum: Optional[int] = None\n    format_: Optional[str] = None\n\n\n@dataclass\nclass Item:\n    title: Optional[str] = None\n    type_: Optional[str] = None\n    ref: Optional[str] = None\n    max_length: Optional[int] = None\n    min_length: Optional[int] = None\n\n\n@dataclass\nclass Parameter_SecurityDefinition:\n    name: Optional[str] = None\n    in_: Optional[str] = None\n    required: Optional[bool] = None\n    schema: Optional['Item_Schema'] = None\n    description: Optional[str] = None\n    type_: Optional[str] = None\n\n\n@dataclass\nclass Delete_Get_Patch_Post_Put:\n    operation_id: str\n    description: str\n    parameters: List['Parameter_SecurityDefinition']\n    responses: Dict[str, 'Response']\n    tags: List[str]\n\n\n@dataclass\nclass Item_Schema:\n    ref: str\n\n\n@dataclass\nclass Response:\n    description: str\n    schema: Optional[Union['Item_Schema', 'Definition_Schema']] = None\n\n\n@dataclass\nclass Definition_Schema:\n    type_: str\n    required: Optional[List[str]] = field(default_factory=list)\n    properties: Optional[Dict[str, Union['Property', 'Property_2E']]] = field(default_factory=dict)\n    ref: Optional[str] = None\n```\n\n</p>\n</details>\n\n### Github-actions config files\n\n<details><summary>----- Show -----</summary>\n<p>\n\nGithub-actions model based on files from [starter-workflows](https://github.com/actions/starter-workflows/tree/main/ci)\n\n```\njson2models -m Actions \"./starter-workflows/ci/*.yml\" -s flat -f pydantic -i yaml --dkf env with jobs\n```\n\n```python\nr\"\"\"\ngenerated by json2python-models v0.2.3 at Tue Jul 13 19:52:43 2021\ncommand: /opt/projects/json2python-models/venv/bin/json2models -m Actions ./starter-workflows/ci/*.yml -s flat -f pydantic -i yaml --dkf env with jobs\n\"\"\"\nfrom pydantic import BaseModel, Field\nfrom typing import Dict, List, Optional, Union\nfrom typing_extensions import Literal\n\n\nclass Actions(BaseModel):\n    on: Union['On', List[Literal[\"push\"]]]\n    jobs: Dict[str, 'Job']\n    name: Optional[str] = None\n    env: Optional[Dict[str, Union[int, str]]] = {}\n\n\nclass On(BaseModel):\n    push: Optional['Push'] = None\n    pull_request: Optional['PullRequest'] = None\n    release: Optional['Release'] = None\n    schedule: Optional[List['Schedule']] = []\n    workflow_dispatch: Optional[None] = None\n\n\nclass Push(BaseModel):\n    branches: List[Literal[\"$default-branch\"]]\n    tags: Optional[List[Literal[\"v*.*.*\"]]] = []\n\n\nclass PullRequest(BaseModel):\n    branches: List[Literal[\"$default-branch\"]]\n\n\nclass Release(BaseModel):\n    types: List[Literal[\"created\", \"published\"]]\n\n\nclass Schedule(BaseModel):\n    cron: Literal[\"$cron-daily\"]\n\n\nclass Job(BaseModel):\n    runson: Literal[\"${{ matrix.os }}\", \"macOS-latest\", \"macos-latest\", \"ubuntu-18.04\", \"ubuntu-latest\", \"windows-latest\"] = Field(..., alias=\"runs-on\")\n    steps: List['Step']\n    name: Optional[str] = None\n    environment: Optional[Literal[\"production\"]] = None\n    outputs: Optional['Output'] = None\n    container: Optional['Container'] = None\n    needs: Optional[Literal[\"build\"]] = None\n    permissions: Optional['Permission'] = None\n    strategy: Optional['Strategy'] = None\n    defaults: Optional['Default'] = None\n    env: Optional[Dict[str, str]] = {}\n\n\nclass Step(BaseModel):\n    uses: Optional[str] = None\n    name: Optional[str] = None\n    with_: Optional[Dict[str, Union[bool, float, str]]] = Field({}, alias=\"with\")\n    run: Optional[str] = None\n    env: Optional[Dict[str, str]] = {}\n    workingdirectory: Optional[str] = Field(None, alias=\"working-directory\")\n    id_: Optional[Literal[\"build-image\", \"composer-cache\", \"deploy-and-expose\", \"image-build\", \"login-ecr\", \"meta\", \"push-to-registry\", \"task-def\"]] = Field(None, alias=\"id\")\n    if_: Optional[str] = Field(None, alias=\"if\")\n    shell: Optional[Literal[\"Rscript {0}\"]] = None\n\n\nclass Output(BaseModel):\n    route: str = Field(..., alias=\"ROUTE\")\n    selector: str = Field(..., alias=\"SELECTOR\")\n\n\nclass Container(BaseModel):\n    image: Literal[\"crystallang/crystal\", \"erlang:22.0.7\"]\n\n\nclass Permission(BaseModel):\n    contents: Literal[\"read\"]\n    packages: Literal[\"write\"]\n\n\nclass Strategy(BaseModel):\n    matrix: Optional['Matrix'] = None\n    maxparallel: Optional[int] = Field(None, alias=\"max-parallel\")\n    failfast: Optional[bool] = Field(None, alias=\"fail-fast\")\n\n\nclass Matrix(BaseModel):\n    rversion: Optional[List[float]] = Field([], alias=\"r-version\")\n    pythonversion: Optional[List[float]] = Field([], alias=\"python-version\")\n    deno: Optional[List[Literal[\"canary\", \"v1.x\"]]] = []\n    os: Optional[List[Literal[\"macOS-latest\", \"ubuntu-latest\", \"windows-latest\"]]] = []\n    rubyversion: Optional[List[float]] = Field([], alias=\"ruby-version\")\n    nodeversion: Optional[List[Literal[\"12.x\", \"14.x\", \"16.x\"]]] = Field([], alias=\"node-version\")\n    configuration: Optional[List[Literal[\"Debug\", \"Release\"]]] = []\n\n\nclass Default(BaseModel):\n    run: 'Run'\n\n\nclass Run(BaseModel):\n    shell: Literal[\"bash\"]\n```\n\n</p></details>\n\n### Example with preamble\n\n<details><summary>----- Show -----</summary>\n<p>\nA simple example to demonstrate adding extra code before the class list.\n\n```sh\njson2models -f pydantic --preamble \"# set up defaults\nUSERNAME = 'user'\nSERVER_IP = '127.0.0.1'\n\" -m Swagger testing_tools/swagger.json\n```\n\n```py\nr\"\"\"\ngenerated by json2python-models v0.2.5 at Tue Aug 23 08:55:09 2022\ncommand: json2models -f pydantic --preamble # set up defaults\nUSERNAME = 'user'\nSERVER_IP = '127.0.0.1'\n -m Swagger testing_tools/swagger.json -o output.py\n\"\"\"\nfrom pydantic import BaseModel, Field\nfrom typing import Any, List, Literal, Optional, Union\n\n\n# set up defaults\nUSERNAME = 'user'\nSERVER_IP = '127.0.0.1'\n\n\n\nclass Swagger(BaseModel):\n    # etc.\n```\n</p></details>\n\n## Installation\n\n| **Beware**: this project supports only `python3.7` and higher. |\n| --- |\n\nTo install it, use `pip`:\n\n`pip install json2python-models`\n\nOr you can build it from source:\n\n```\ngit clone https://github.com/bogdandm/json2python-models.git\ncd json2python-models\npython setup.py install\n```\n\n## Usage\n\n### CLI\n\nFor regular usage CLI tool is the best option. After you install this package you can use it as `json2models <arguments>`\nor `python -m json_to_models <arguments>`. I.e.:\n```\njson2models -m Car car_*.json -f attrs > car.py\n```\n\nArguments:\n\n* `-h`, `--help` - Show help message and exit\n\n* `-m`, `--model` - Model name and its JSON data as path or unix-like path pattern.\n  `*`,  `**` or `?` patterns symbols are supported.\n  JSON data could be an array of models or single model.\n  If this file contains dict with nested list than you can pass\n  `<JSON lookup>`. Deep lookups are supported by dot-separated path.\n  If no lookup needed pass '-' as `<JSON lookup>` (default)\n  * **Format**: `-m <Model name> [<JSON lookup>] <File path or pattern>`\n  * **Example**: `-m Car audi.json -m Car results reno.json`\n\n* `-i`, `--input-format` - Input file format (parser). Default is JSON parser. Yaml parser requires PyYaml or\n  ruamel.yaml to be installed. Ini parser uses\n  builtin [configparser](https://docs.python.org/3/library/configparser.html). To implement new one - add new method\n  to `cli.FileLoaders` (and create pull request :) )\n  * **Format**: `-i {json, yaml, ini}`\n  * **Example**: `-i yaml`\n  * **Default**: `-i json`\n\n* `-o`, `--output` - Output file\n    * **Format**: `-o <FILE>`\n    * **Example**: `-o car_model.py`\n\n* `-f`, `--framework` - Model framework for which python code is generated.\n  `base` (default) mean no framework so code will be generated without any decorators and additional meta-data.\n    * **Format**: `-f {base, pydantic, sqlmodel, attrs, dataclasses, custom}`\n    * **Example**: `-f pydantic`\n    * **Default**: `-f base`\n    * **Warning**: SQLModel generator does not support Relationships and Foreign keys, they have to be added manually\n\n* `-s`, `--structure` - Models composition style.\n    * **Format**: `-s {flat, nested}`\n    * **Example**: `-s nested`\n    * **Default**: `-s flat`\n\n* `--preamble` - Additional material to be\n    * **Format**: `--preamble \"<formatted python code string to be added after module imports>\"`\n    * **Example**:\n  ```sh\n  --preamble \"# set up defaults\n  USERNAME = 'user'\n  SERVER = '127.0.0.1'\"\n  ```\n    * **Optional**\n\n* `--datetime` - Enable datetime/date/time strings parsing.\n    * **Default**: disabled\n    * **Warning**: This can lead to 6-7 times slowdown on large datasets. Be sure that you really need this option.\n\n* `--disable-unicode-conversion`, `--no-unidecode` - Disable unicode conversion in field labels and class names\n    * **Default**: enabled\n\n* `--strings-converters` - Enable generation of string types converters (i.e. `IsoDatetimeString` or `BooleanString`).\n    * **Default**: disabled\n\n* `--max-strings-literals` -  Generate `Literal['foo', 'bar']` when field have less than NUMBER string constants as values.\n    * **Format**: `--max-strings-literals <NUMBER>`\n    * **Default**: 10 (generator classes could override it)\n    * **Example**: `--max-strings-literals 5` - only 5 literals will be saved and used to code generation\n    * **Note**: There could not be more than **15** literals per field (for performance reasons)\n    * **Note**: `attrs` code generator do not use Literals and just generate `str` fields instead\n\n* `--merge` - Merge policy settings. Possible values are:\n    * **Format**: `--merge MERGE_POLICY [MERGE_POLICY ...]`\n    * **Possible values** (MERGE_POLICY):\n        * `percent[_<percent>]` - two models had a certain percentage of matched field names.\n            Custom value could be i.e. `percent_95`.\n        * `number[_<number>]` - two models had a certain number of matched field names.\n        * `exact` - two models should have exact same field names to merge.\n    * **Example**: `--merge percent_95 number_20` - merge if 95% of fields are matched or 20 of fields are matched\n    * **Default**: `--merge percent_70 number_10`\n\n* `--dict-keys-regex`, `--dkr` - List of regular expressions (Python syntax).\n    If all keys of some dict are match one of the pattern then\n    this dict will be marked as dict field but not nested model.\n    * **Format**: `--dkr RegEx [RegEx ...]`\n    * **Example**: `--dkr node_\\d+ \\d+_\\d+_\\d+`\n    * **Note**: `^` and `$` (string borders) tokens will be added automatically, but you\n        have to escape other special characters manually.\n    * **Optional**\n\n* `--dict-keys-fields`, `--dkf` - List of model fields names that will be marked as dict fields\n    * **Format**: `--dkf FIELD_NAME [FIELD_NAME ...]`\n    * **Example**: `--dkf \"dict_data\" \"mapping\"`\n    * **Optional**\n\n* `--code-generator` - Absolute import path to `GenericModelCodeGenerator` subclass.\n    * **Format**: `--code-generator CODE_GENERATOR`\n    * **Example**: `-f mypackage.mymodule.DjangoModelsGenerator`\n    * **Note**: Is ignored without `-f custom` but is required with it.\n\n* `--code-generator-kwargs` - List of GenericModelCodeGenerator subclass arguments (for `__init__` method,\n    see docs of specific subclass).\n    Each argument should be in following format: `argument_name=value` or `\"argument_name=value with space\"`.\n    Boolean values should be passed in JS style: `true` or `false`\n    * **Format**: `--code-generator-kwargs [NAME=VALUE [NAME=VALUE ...]]`\n    * **Example**:  `--code-generator-kwargs kwarg1=true kwarg2=10 \"kwarg3=It is string with spaces\"`\n    * **Optional**\n\n* `--disable-str-serializable-types` - List of python types for which StringSerializable should be disabled.\n    Alternatively you could use the name of StringSerializable subclass itself (i.e. IntString).\n    * **Format**: `--disable-str-serializable-types [TYPE [TYPE ...]]`\n    * **Example**:  `--disable-str-serializable-types float int BooleanString IsoDatetimeString`\n    * **Optional**\n\n### Low level API\n\n\\-\n\n## Tests\n\nTo run tests you should clone project and run `setup.py` script:\n\n```\ngit clone https://github.com/bogdandm/json2python-models.git\ncd json2python-models\npython setup.py test -a '<pytest additional arguments>'\n```\n\nAlso, I would recommend you to install `pytest-sugar` for pretty printing test results\n\n### Test examples\n\nYou can find out some examples of usage of this project at [testing_tools/real_apis/...](/testing_tools/real_apis)\n\nEach file contains functions to download data from some online API (references included at the top of file) and\n`main` function that generates and prints code. Some examples may print debug data before actual code.\nDownloaded data will be saved at `testing_tools/real_apis/<name of example>/<dataset>.json`\n\n## Built With\n\n* [python-dateutil](https://github.com/dateutil/dateutil) - Datetime parsing\n* [inflection](https://github.com/jpvanhal/inflection) - String transformations\n* [Unidecode](https://pypi.org/project/Unidecode/) - Unicode to ASCII conversion\n* [Jinja2](https://github.com/pallets/jinja) - Code templates\n* [ordered-set](https://github.com/LuminosoInsight/ordered-set) is used in models merging algorithm\n\nTest tools:\n* [pytest](https://github.com/pytest-dev/pytest) - Test framework\n* [pytest-xdist](https://github.com/pytest-dev/pytest-xdist) - Parallel execution of test suites\n* [pytest-sugar](https://github.com/Frozenball/pytest-sugar) - Test results pretty printing\n* [requests](https://github.com/kennethreitz/requests) - Test data download\n\n## Contributing\n\nFeel free to open pull requests with new features or bug fixes. Just follow few rules:\n\n1. Always use some code formatter ([black](https://github.com/ambv/black) or PyCharm built-in)\n2. Keep code coverage above 95-98%\n3. All existing tests should be passed (including test examples from `testing_tools/real_apis`)\n4. Use `typing` module\n5. Fix [codacy](https://app.codacy.com/project/bogdandm/json2python-models/dashboard) issues from your PR\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bogdandm/json2python-models",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "json2python-models",
    "package_url": "https://pypi.org/project/json2python-models/",
    "platform": null,
    "project_url": "https://pypi.org/project/json2python-models/",
    "project_urls": {
      "Homepage": "https://github.com/bogdandm/json2python-models"
    },
    "release_url": "https://pypi.org/project/json2python-models/0.3.0/",
    "requires_dist": [
      "python-dateutil (>=2.7.*)",
      "inflection (>=0.3.*)",
      "unidecode (>=1.0.*)",
      "Jinja2 (>=2.10.*)",
      "ordered-set (==4.*)",
      "typing-extensions (>=3.1.*)"
    ],
    "requires_python": ">=3.7",
    "summary": "Python models (pydantic, attrs, dataclasses or custom) generator from JSON data with typing module support",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16278607,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ddf979b4c912df783bc6f45cfd54aef86ea13fe8d611547db2c01ee46c8d9ec",
          "md5": "0e8c2484abcf008d75b2080f47572b67",
          "sha256": "244d81bf1957597a4adb579c0a565ad61dd4f8644bb78e0aa41942dec92faad9"
        },
        "downloads": -1,
        "filename": "json2python-models-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0e8c2484abcf008d75b2080f47572b67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 44453,
        "upload_time": "2019-04-24T14:38:37",
        "upload_time_iso_8601": "2019-04-24T14:38:37.116290Z",
        "url": "https://files.pythonhosted.org/packages/0d/df/979b4c912df783bc6f45cfd54aef86ea13fe8d611547db2c01ee46c8d9ec/json2python-models-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b1216d4dbcc1cfd994ac29b6e1dcb059d747351221df1cd0777a7e0dab10e81",
          "md5": "19b70578e9d6f78bf7715724def8aebd",
          "sha256": "6c431d5a4e3cec7a17f5038242bfc3b9c3cf6568b61ecbe46383680f17e81dc7"
        },
        "downloads": -1,
        "filename": "json2python-models-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "19b70578e9d6f78bf7715724def8aebd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 45882,
        "upload_time": "2019-06-13T12:39:04",
        "upload_time_iso_8601": "2019-06-13T12:39:04.962896Z",
        "url": "https://files.pythonhosted.org/packages/8b/12/16d4dbcc1cfd994ac29b6e1dcb059d747351221df1cd0777a7e0dab10e81/json2python-models-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5578d1faab4d2983579a053ced5d0ded5df29766169dc7b33a91f12fa1d85ef8",
          "md5": "665cc0df9f6c76ac715ea3d3027ddb36",
          "sha256": "ccae1dbdb3f5b157edb06e51d4b638b7fb3a098cc000b9c6035225152dea42dd"
        },
        "downloads": -1,
        "filename": "json2python-models-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "665cc0df9f6c76ac715ea3d3027ddb36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 48693,
        "upload_time": "2019-06-17T12:05:41",
        "upload_time_iso_8601": "2019-06-17T12:05:41.979616Z",
        "url": "https://files.pythonhosted.org/packages/55/78/d1faab4d2983579a053ced5d0ded5df29766169dc7b33a91f12fa1d85ef8/json2python-models-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7d817a14743bf5fc52d20284f10a42d51db016ab573149488bd122ff0fe9765",
          "md5": "6932c5f51739ab18482ba1eff5e148f5",
          "sha256": "f7d49c4007e3611a530e5adf4a3fff7365c9f35f1bc759eaf9d605ae28fec4a2"
        },
        "downloads": -1,
        "filename": "json2python-models-0.1a1.tar.gz",
        "has_sig": false,
        "md5_digest": "6932c5f51739ab18482ba1eff5e148f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 33310,
        "upload_time": "2018-11-27T11:58:15",
        "upload_time_iso_8601": "2018-11-27T11:58:15.606599Z",
        "url": "https://files.pythonhosted.org/packages/d7/d8/17a14743bf5fc52d20284f10a42d51db016ab573149488bd122ff0fe9765/json2python-models-0.1a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73c464e4e78caef3fbd80e0b3d4f4c67eae011ef05f8c543bb71855f894006e4",
          "md5": "2e463d047ff2a0601ad24794ad4c4981",
          "sha256": "66372b2994e00cd3907ea87f385b5b8b74c8e5dc905a5b6a540c795b03a76f76"
        },
        "downloads": -1,
        "filename": "json2python-models-0.1b1.tar.gz",
        "has_sig": false,
        "md5_digest": "2e463d047ff2a0601ad24794ad4c4981",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 33893,
        "upload_time": "2018-11-27T14:40:02",
        "upload_time_iso_8601": "2018-11-27T14:40:02.993192Z",
        "url": "https://files.pythonhosted.org/packages/73/c4/64e4e78caef3fbd80e0b3d4f4c67eae011ef05f8c543bb71855f894006e4/json2python-models-0.1b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4652839fcfe4174c6805bf3782f6bdab9484b1fbbcd8b6a347bdea94e4c90a1",
          "md5": "ad263141435c4e1b78df996794d23fef",
          "sha256": "7e792d50d3f015963d28db1e2c4e1ca6f8e26da3fa41d02f722f4eaee3615f7d"
        },
        "downloads": -1,
        "filename": "json2python-models-0.1b2.tar.gz",
        "has_sig": false,
        "md5_digest": "ad263141435c4e1b78df996794d23fef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 36119,
        "upload_time": "2018-11-30T16:03:23",
        "upload_time_iso_8601": "2018-11-30T16:03:23.064395Z",
        "url": "https://files.pythonhosted.org/packages/b4/65/2839fcfe4174c6805bf3782f6bdab9484b1fbbcd8b6a347bdea94e4c90a1/json2python-models-0.1b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f800eafb7474bffd7e40c2af176556a02016ae26381b3b18894632e4e89e0168",
          "md5": "f70e753b11c0515084ee4e61dad6b320",
          "sha256": "bb9d5b44890b68fca5d1cf7a81d269c3864a42d6cee28d8ed5011214fadb8e46"
        },
        "downloads": -1,
        "filename": "json2python-models-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f70e753b11c0515084ee4e61dad6b320",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 53477,
        "upload_time": "2020-05-10T16:26:08",
        "upload_time_iso_8601": "2020-05-10T16:26:08.215732Z",
        "url": "https://files.pythonhosted.org/packages/f8/00/eafb7474bffd7e40c2af176556a02016ae26381b3b18894632e4e89e0168/json2python-models-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6ffdb4c6d5bbf976669b16637b7c1bc5b66c2a9f452241897d53524121d8215",
          "md5": "05bbd0f5cfef514183126d9ff63e5e82",
          "sha256": "69502e1ec21c7c9caac7fdf108389377c10aacdc8dcc638f80b124d3bfff9c25"
        },
        "downloads": -1,
        "filename": "json2python-models-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "05bbd0f5cfef514183126d9ff63e5e82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 51063,
        "upload_time": "2021-06-08T17:18:04",
        "upload_time_iso_8601": "2021-06-08T17:18:04.146706Z",
        "url": "https://files.pythonhosted.org/packages/d6/ff/db4c6d5bbf976669b16637b7c1bc5b66c2a9f452241897d53524121d8215/json2python-models-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37f96f14f6012de338f731464fc71b01b7c939ae83cde2a90d1356a401c3b957",
          "md5": "790ed3b8bec34142072e12899a42b61f",
          "sha256": "d24e87c11ccc218b650833d218a19f27da2389981c7985f44d0cdec6f8ea35b8"
        },
        "downloads": -1,
        "filename": "json2python_models-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "790ed3b8bec34142072e12899a42b61f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 78610,
        "upload_time": "2021-07-09T16:50:21",
        "upload_time_iso_8601": "2021-07-09T16:50:21.118276Z",
        "url": "https://files.pythonhosted.org/packages/37/f9/6f14f6012de338f731464fc71b01b7c939ae83cde2a90d1356a401c3b957/json2python_models-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1a02729fcda9ff60dd55c44768a66579cc9638d34de6090299fdb608b453f3d",
          "md5": "87618a2805790fb1a05b65daed4ca94e",
          "sha256": "01f90365eb4be37d524c76928ea87701df9dad5c5d2227f4abdf88fb7d980fb3"
        },
        "downloads": -1,
        "filename": "json2python-models-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "87618a2805790fb1a05b65daed4ca94e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 53747,
        "upload_time": "2021-07-09T16:50:22",
        "upload_time_iso_8601": "2021-07-09T16:50:22.716376Z",
        "url": "https://files.pythonhosted.org/packages/e1/a0/2729fcda9ff60dd55c44768a66579cc9638d34de6090299fdb608b453f3d/json2python-models-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59be1ef7c478cac372102ce09acd0bee5b8be4b5bd3388f434fa1d8e6946a73e",
          "md5": "63b0d472dde7d81f01517ac2b7e91745",
          "sha256": "6def09b39fcb582377fa11f9a74ee885f9345782288f8678e17bdfef25cb520f"
        },
        "downloads": -1,
        "filename": "json2python_models-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63b0d472dde7d81f01517ac2b7e91745",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 81600,
        "upload_time": "2021-07-22T15:06:06",
        "upload_time_iso_8601": "2021-07-22T15:06:06.979789Z",
        "url": "https://files.pythonhosted.org/packages/59/be/1ef7c478cac372102ce09acd0bee5b8be4b5bd3388f434fa1d8e6946a73e/json2python_models-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3d1d0263ddb57647390b0866ab82e504f51dc463c404e09756a39a22af8aafe",
          "md5": "c8c6a4fedb3bf610d049e6fea771ff3a",
          "sha256": "0ce617194eaa6bc1935a3054933b5e374c5759812d10332dc3bd68ccb4d7a7ee"
        },
        "downloads": -1,
        "filename": "json2python-models-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c8c6a4fedb3bf610d049e6fea771ff3a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 56286,
        "upload_time": "2021-07-22T15:06:09",
        "upload_time_iso_8601": "2021-07-22T15:06:09.382002Z",
        "url": "https://files.pythonhosted.org/packages/f3/d1/d0263ddb57647390b0866ab82e504f51dc463c404e09756a39a22af8aafe/json2python-models-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8297a3c506a5d6d0e688083d0743b18aa973dcd17305c4671bc0443ce97fb70",
          "md5": "3976a73d48dc6247c18a74605f23e895",
          "sha256": "3e34d39c09feabd260015f4ac7690916e5caf49b8d894cbf0101b79c6257299a"
        },
        "downloads": -1,
        "filename": "json2python_models-0.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3976a73d48dc6247c18a74605f23e895",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 81853,
        "upload_time": "2022-03-10T09:34:44",
        "upload_time_iso_8601": "2022-03-10T09:34:44.959225Z",
        "url": "https://files.pythonhosted.org/packages/e8/29/7a3c506a5d6d0e688083d0743b18aa973dcd17305c4671bc0443ce97fb70/json2python_models-0.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e92b8512c8cba7667abaf949262d1346656332f889c50cb379db85bc6308fc2",
          "md5": "de2003b88b394f807a7720db2f403ad2",
          "sha256": "2de385d03a4da30b5f999db762655346e0b2ecbb014248403c53168995839e0d"
        },
        "downloads": -1,
        "filename": "json2python-models-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "de2003b88b394f807a7720db2f403ad2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 56491,
        "upload_time": "2022-03-10T09:34:46",
        "upload_time_iso_8601": "2022-03-10T09:34:46.970134Z",
        "url": "https://files.pythonhosted.org/packages/3e/92/b8512c8cba7667abaf949262d1346656332f889c50cb379db85bc6308fc2/json2python-models-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de06ceec61a84e238e524b1cd1cf76755942747c31f78c00be5160dca9374633",
          "md5": "97de491287a0d6632b5e0d9c70a99a75",
          "sha256": "0eb258c5c6c64210ba7c03a67f5a559b41a2c95208035410c4783fb65f02aca3"
        },
        "downloads": -1,
        "filename": "json2python_models-0.2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97de491287a0d6632b5e0d9c70a99a75",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 82892,
        "upload_time": "2022-09-02T09:35:42",
        "upload_time_iso_8601": "2022-09-02T09:35:42.251063Z",
        "url": "https://files.pythonhosted.org/packages/de/06/ceec61a84e238e524b1cd1cf76755942747c31f78c00be5160dca9374633/json2python_models-0.2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f6e6952a7bc434bc596c930cbf4c3f2b0ea7993660c634c1208026290fda807",
          "md5": "473fb7b27992d123799307afd096ec27",
          "sha256": "a03d5345487bb0dcdd99b3b12b39f3c0ee11ce07351b3cb9b4ad8dfa3f902b35"
        },
        "downloads": -1,
        "filename": "json2python-models-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "473fb7b27992d123799307afd096ec27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 57410,
        "upload_time": "2022-09-02T09:35:44",
        "upload_time_iso_8601": "2022-09-02T09:35:44.349234Z",
        "url": "https://files.pythonhosted.org/packages/2f/6e/6952a7bc434bc596c930cbf4c3f2b0ea7993660c634c1208026290fda807/json2python-models-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05fa23edc3cd2ce2202e55aa8bd2f2abf408cc34250344bedbca0c808dfd7b92",
          "md5": "04bcaf0b1ce88c0543b152634c6d517e",
          "sha256": "b20c706a605047811c245e1588cde51e49a8781d17279d7709e25ded3343ea8f"
        },
        "downloads": -1,
        "filename": "json2python_models-0.2.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04bcaf0b1ce88c0543b152634c6d517e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 83416,
        "upload_time": "2022-09-08T15:20:22",
        "upload_time_iso_8601": "2022-09-08T15:20:22.545531Z",
        "url": "https://files.pythonhosted.org/packages/05/fa/23edc3cd2ce2202e55aa8bd2f2abf408cc34250344bedbca0c808dfd7b92/json2python_models-0.2.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88d9ab6f72e512e3f60e809c629e391da9df2dc31b9abe5ebf570656070f3407",
          "md5": "8ac1e8029e09c95068319ac86de4377d",
          "sha256": "5ce2eda8e2e182c992f96d23508769f10cb4e7dc74abd7db946390e8c36aae63"
        },
        "downloads": -1,
        "filename": "json2python-models-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "8ac1e8029e09c95068319ac86de4377d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 57930,
        "upload_time": "2022-09-08T15:20:24",
        "upload_time_iso_8601": "2022-09-08T15:20:24.665595Z",
        "url": "https://files.pythonhosted.org/packages/88/d9/ab6f72e512e3f60e809c629e391da9df2dc31b9abe5ebf570656070f3407/json2python-models-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8923467ea3c1157d320dfe8652a32e0005ba8cd25f9987a31de18dae9f8ace27",
          "md5": "fc97a0d24f88bfc2966ace519c8efa46",
          "sha256": "7dfada74bd062b7d0f946fa89bdc6fcf88bcbbd5d2369420fbd0502e2418a401"
        },
        "downloads": -1,
        "filename": "json2python_models-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc97a0d24f88bfc2966ace519c8efa46",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 86062,
        "upload_time": "2023-01-02T12:23:48",
        "upload_time_iso_8601": "2023-01-02T12:23:48.755535Z",
        "url": "https://files.pythonhosted.org/packages/89/23/467ea3c1157d320dfe8652a32e0005ba8cd25f9987a31de18dae9f8ace27/json2python_models-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "148d61d76a14b3b574a277e4a42955ee61163440e43ff3ddf8c4873b862a7219",
          "md5": "2125f62092ff145a2890d47cfc3fe7e1",
          "sha256": "5641f99b0778e6a7aa97686b35e65476ebece38ebd42b1676a2a32e62dbd010d"
        },
        "downloads": -1,
        "filename": "json2python-models-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2125f62092ff145a2890d47cfc3fe7e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 58576,
        "upload_time": "2023-01-02T12:23:50",
        "upload_time_iso_8601": "2023-01-02T12:23:50.229746Z",
        "url": "https://files.pythonhosted.org/packages/14/8d/61d76a14b3b574a277e4a42955ee61163440e43ff3ddf8c4873b862a7219/json2python-models-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8923467ea3c1157d320dfe8652a32e0005ba8cd25f9987a31de18dae9f8ace27",
        "md5": "fc97a0d24f88bfc2966ace519c8efa46",
        "sha256": "7dfada74bd062b7d0f946fa89bdc6fcf88bcbbd5d2369420fbd0502e2418a401"
      },
      "downloads": -1,
      "filename": "json2python_models-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fc97a0d24f88bfc2966ace519c8efa46",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 86062,
      "upload_time": "2023-01-02T12:23:48",
      "upload_time_iso_8601": "2023-01-02T12:23:48.755535Z",
      "url": "https://files.pythonhosted.org/packages/89/23/467ea3c1157d320dfe8652a32e0005ba8cd25f9987a31de18dae9f8ace27/json2python_models-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "148d61d76a14b3b574a277e4a42955ee61163440e43ff3ddf8c4873b862a7219",
        "md5": "2125f62092ff145a2890d47cfc3fe7e1",
        "sha256": "5641f99b0778e6a7aa97686b35e65476ebece38ebd42b1676a2a32e62dbd010d"
      },
      "downloads": -1,
      "filename": "json2python-models-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2125f62092ff145a2890d47cfc3fe7e1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 58576,
      "upload_time": "2023-01-02T12:23:50",
      "upload_time_iso_8601": "2023-01-02T12:23:50.229746Z",
      "url": "https://files.pythonhosted.org/packages/14/8d/61d76a14b3b574a277e4a42955ee61163440e43ff3ddf8c4873b862a7219/json2python-models-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}