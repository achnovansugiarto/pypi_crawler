{
  "info": {
    "author": "Tim-Oliver Buchholz, Thorsten Wagner",
    "author_email": "tim-oliver.buchholz@fmi.ch, thorsten.wagner@mpi-dortmund.mpg.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# cryoCARE\n\nThis package is a memory efficient implementation of [cryoCARE](https://github.com/juglab/cryoCARE_T2T). \n\nThis setup trains a denoising U-Net for tomographic reconstruction according to the [Noise2Noise](https://arxiv.org/pdf/1803.04189.pdf) training paradigm. \nTherefore the user has to provide two tomograms of the same sample. \nThe simplest way to achieve this is with direct-detector movie-frames.\n\nYou can use Warp to generate two reconstructed tomograms based on the even/odd frames. Alternatively, the movie-frames can be split in two halves (e.g. with MotionCor2 `-SplitSum 1` or with IMOD `alignframes -debug 10000`) from which two identical, up to random noise, tomograms can be reconstructed. \n\nThese two (even and odd) tomograms can be used as input to this cryoCARE implementation.\n\n## Changelog\n\n### Version 0.2\n\n* `cyroCARE_train` produces a compressed and more portable model. This model can be copied and shared with others without relying on a certain folder structure.\n* `cryoCARE_predict` supports to predict multiple tomograms in one run. Streamlined configuration with respect to the changes of `cryoCARE_train`.\n* Streamlined installation instructions\n* CUDA 11 support\n* Minor changes/ fixed couple of bugs:\n    * Proper padding of tomograms to avoid black frames in the denoised tomograms\n    * Fix computation of validation cut off for small tomograms\n    * Fix `cryoCARE_predict` if no tiling happens\n\n## Installation\n\n__Note:__ We assume that you have  [miniconda](https://docs.conda.io/en/latest/miniconda.html) installed.\n\nFirst you need to create a conda environment.\n\n### For CUDA 11:\n```\nconda create -n cryocare_11 python=3.8 cudatoolkit=11.0 cudnn=8.0 -c conda-forge\nconda activate cryocare_11\npip install tensorflow==2.4\npip install cryoCARE\n```\n\n### For CUDA 10:\n```\nconda create -n cryocare -c conda-forge -c anaconda python=3 keras-gpu=2.3.1\nconda activate cryocare\npip install cryoCARE\n```\n\n## Manual\ncryoCARE uses `.json` configuration files and is run in three steps:\n\n### 1. Prepare Training Data\nTo prepare the training data we have to provide all tomograms on which we want to train. \nCreate an empty file called `train_data_config.json`, copy-paste the following template and fill it in.\n```\n{\n  \"even\": [\n    \"/path/to/even.rec\"\n  ],\n  \"odd\": [\n    \"/path/to/odd.rec\"\n  ],\n  \"patch_shape\": [\n    72,\n    72,\n    72\n  ],\n  \"num_slices\": 1200,\n  \"split\": 0.9,\n  \"tilt_axis\": \"Y\",\n  \"n_normalization_samples\": 500,\n  \"path\": \"./\"\n}\n```\n#### Parameters:\n* `\"even\"`: List of all even tomograms.\n* `\"odd\"`: List of all odd tomograms. Note the order has to be the same as in `\"even\"`.\n* `\"patch_shape\"`: Size of the sub-volumes used for training. Should not be smaller than `64, 64, 64`.\n* `\"num_slices\"`: Number of sub-volumes extracted per tomograms. \n* `\"tilt_axis\"`: Tilt-axis of the tomograms. We split the tomogram along this axis to extract train- and validation data separately.\n* `\"n_normalization_samples\"`: Number of sub-volumes extracted per tomograms, which are used to compute `mean` and `standard deviation` for normalization.\n* `\"path\"`: The training and validation data are saved here.\n\n#### Run Training Data Preparation:\nAfter installation of the package we have access to built in Python-scripts which we can call. \nTo run the training data preparation we run the following command:\n`cryoCARE_extract_train_data.py --conf train_data_config.json`\n\n### 2. Training\nCreate an empty file called `train_config.json`, copy-paste the following template and fill it in.\n```\n{\n  \"train_data\": \"./\",\n  \"epochs\": 100,\n  \"steps_per_epoch\": 200,\n  \"batch_size\": 16,\n  \"unet_kern_size\": 3,\n  \"unet_n_depth\": 3,\n  \"unet_n_first\": 16,\n  \"learning_rate\": 0.0004,\n  \"model_name\": \"model_name\",\n  \"path\": \"./\",\n  \"gpu_id\": 0\n}\n```\n\n#### Parameters:\n* `\"train_data\"`: Path to the directory containing the train- and validation data. This should be the same as the `\"path\"` from above.\n* `\"epochs\"`: Number of epochs used to train the network.\n* `\"steps_per_epoch\"`: Number of gradient steps performed per epoch.\n* `\"batch_size\"`: Used training batch size.\n* `\"unet_kern_size\"`: Convolution kernel size of the U-Net. Has to be an odd number.\n* `\"unet_n_depth\"`: Depth of the U-Net.\n* `\"unet_n_first\"`: Number of initial feature channels.\n* `\"learning_rate\"`: Learning rate of the model training.\n* `\"model_name\"`: Name of the model.\n* `\"path\"`: Output path for the model.\n* `\"gpu_id\"`: This is optional. Provide the GPU ID(s) of the GPUs you wish to use.\n\n#### Run Training:\nTo run the training we run the following command:\n`cryoCARE_train.py --conf train_config.json`\n\nYou will find a `.tar.gz` file in the directory you specified as `path`. This your model an will be used in the next step.\n\n### 3. Prediction\nCreate an empty file called `predict_config.json`, copy-paste the following template and fill it in.\n```\n{\n  \"path\": \"path/to/your/model/model_name.tar.gz\",\n  \"even\": \"/path/to/even.rec\",\n  \"odd\": \"/path/to/odd.rec\",\n  \"n_tiles\": [1,1,1],\n  \"output\": \"denoised.rec\",\n  \"overwrite\": False,\n  \"gpu_id\": 0\n}\n```\n\n#### Parameters:\n* `\"path\"`: Path to your model file.\n* `\"even\"`: Path to directory with even tomograms or a specific even tomogram or a list of specific even tomograms.\n* `\"odd\"`: Path to directory with odd tomograms or a specific odd tomogram or a list of specific odd tomograms in the same order as the even tomograms.\n* `\"n_tiles\"`: Initial tiles per dimension. Gets increased if the tiles do not fit on the GPU.\n* `\"output\"`: Path where the denoised tomograms will be written.\n* `\"overwrite\"`: Allow previous files to be overwritten.\n* `\"gpu_id\"`: This is optional. Provide the GPU ID(s) of the GPUs you wish to use.\n\n#### Run Prediction:\nTo run the training we run the following command:\n`cryoCARE_predict.py --conf predict_config.json`\n\n## How to Cite\n```\n@inproceedings{buchholz2019cryo,\n  title={Cryo-CARE: content-aware image restoration for cryo-transmission electron microscopy data},\n  author={Buchholz, Tim-Oliver and Jordan, Mareike and Pigino, Gaia and Jug, Florian},\n  booktitle={2019 IEEE 16th International Symposium on Biomedical Imaging (ISBI 2019)},\n  pages={502--506},\n  year={2019},\n  organization={IEEE}\n}\n\n@article{buchholz2019content,\n  title={Content-aware image restoration for electron microscopy.},\n  author={Buchholz, Tim-Oliver and Krull, Alexander and Shahidi, R{\\'e}za and Pigino, Gaia and J{\\'e}kely, G{\\'a}sp{\\'a}r and Jug, Florian},\n  journal={Methods in cell biology},\n  volume={152},\n  pages={277--289},\n  year={2019}\n}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/juglab/cryoCARE_pip",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cryoCARE",
    "package_url": "https://pypi.org/project/cryoCARE/",
    "platform": null,
    "project_url": "https://pypi.org/project/cryoCARE/",
    "project_urls": {
      "Homepage": "https://github.com/juglab/cryoCARE_pip"
    },
    "release_url": "https://pypi.org/project/cryoCARE/0.2.2/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "cryoCARE is a deep learning approach for cryo-TEM tomogram denoising.",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17110786,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb1255a53583107bc7da8414e5772254f80557d323959977de8c45a220a4668e",
          "md5": "dc7a6d275e0c43567e563b7219174046",
          "sha256": "556806e84494e3bf33712f276dd9e96ce2c0d8281fd53abbd3e566b0fe0e92df"
        },
        "downloads": -1,
        "filename": "cryoCARE-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc7a6d275e0c43567e563b7219174046",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15083,
        "upload_time": "2020-08-17T15:05:22",
        "upload_time_iso_8601": "2020-08-17T15:05:22.462557Z",
        "url": "https://files.pythonhosted.org/packages/bb/12/55a53583107bc7da8414e5772254f80557d323959977de8c45a220a4668e/cryoCARE-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16254004cefe12a21bdea0127980ddeea4eea534a9365d5135477176cd8e0ecb",
          "md5": "bcfd7a5de97692823816bcd471fd10e1",
          "sha256": "93461ef853e17dcb3ffc208c88f6da5f63b734691ef12a5f5924cf7660bb1d0d"
        },
        "downloads": -1,
        "filename": "cryoCARE-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bcfd7a5de97692823816bcd471fd10e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15092,
        "upload_time": "2020-10-15T15:06:49",
        "upload_time_iso_8601": "2020-10-15T15:06:49.574100Z",
        "url": "https://files.pythonhosted.org/packages/16/25/4004cefe12a21bdea0127980ddeea4eea534a9365d5135477176cd8e0ecb/cryoCARE-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b95415f3863cd3d685c83c921dad5bb65be1e0b2291ae13cd0b615483050939b",
          "md5": "8b4302d0a0b597c39071f02ee77791f4",
          "sha256": "b0d6ddefa2a33c409ec12224111cc8561eb765b1440c4aab7b238badeb94e434"
        },
        "downloads": -1,
        "filename": "cryoCARE-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b4302d0a0b597c39071f02ee77791f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17030,
        "upload_time": "2021-05-18T06:24:49",
        "upload_time_iso_8601": "2021-05-18T06:24:49.117565Z",
        "url": "https://files.pythonhosted.org/packages/b9/54/15f3863cd3d685c83c921dad5bb65be1e0b2291ae13cd0b615483050939b/cryoCARE-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28fad63e6e59dc0cb070ba59008a9f2dd7fa48cd2d7f643b181bb5a16b0eaeb2",
          "md5": "ddc64265b3ded525ee525958ecd57b91",
          "sha256": "bbaf0ea9f44b8308b60024d2a5b52f6288193270d34614cb9baaa33d502c4717"
        },
        "downloads": -1,
        "filename": "cryoCARE-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ddc64265b3ded525ee525958ecd57b91",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16664,
        "upload_time": "2021-06-23T15:28:06",
        "upload_time_iso_8601": "2021-06-23T15:28:06.148646Z",
        "url": "https://files.pythonhosted.org/packages/28/fa/d63e6e59dc0cb070ba59008a9f2dd7fa48cd2d7f643b181bb5a16b0eaeb2/cryoCARE-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18cdf941453db2bccef88158e3a051dd146f410a273c3313c7b192b66f4cf3e5",
          "md5": "232962c138f0aaee6e2e700008f6a3e5",
          "sha256": "e6cf3da6237c5adcbad369d7717b27ed643dd878f8a3815134568bb546372d9b"
        },
        "downloads": -1,
        "filename": "cryoCARE-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "232962c138f0aaee6e2e700008f6a3e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19545,
        "upload_time": "2022-08-11T12:46:28",
        "upload_time_iso_8601": "2022-08-11T12:46:28.942613Z",
        "url": "https://files.pythonhosted.org/packages/18/cd/f941453db2bccef88158e3a051dd146f410a273c3313c7b192b66f4cf3e5/cryoCARE-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "243898e576a7ed4f0c107a0d97a38e682411ff82c13f54d507160d237e173452",
          "md5": "0f33e3e1427cd65736403a32ff097cd0",
          "sha256": "7fa2b265100b2397f95f2eae5cfb73a3f03d3cdb9a0c588aba216546f4333433"
        },
        "downloads": -1,
        "filename": "cryoCARE-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0f33e3e1427cd65736403a32ff097cd0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 13694,
        "upload_time": "2022-08-11T12:46:30",
        "upload_time_iso_8601": "2022-08-11T12:46:30.754484Z",
        "url": "https://files.pythonhosted.org/packages/24/38/98e576a7ed4f0c107a0d97a38e682411ff82c13f54d507160d237e173452/cryoCARE-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3438472822896cc9d4c951530bcf97c86dc5627efab0ce17503a18dbace96306",
          "md5": "f89e5b8fc2cd31766a7c51bb3807573e",
          "sha256": "858ffdbbb687c64d9242e9a5444972874f962f6e035601370090e4c3523751d2"
        },
        "downloads": -1,
        "filename": "cryoCARE-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f89e5b8fc2cd31766a7c51bb3807573e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20854,
        "upload_time": "2022-10-06T06:49:32",
        "upload_time_iso_8601": "2022-10-06T06:49:32.538298Z",
        "url": "https://files.pythonhosted.org/packages/34/38/472822896cc9d4c951530bcf97c86dc5627efab0ce17503a18dbace96306/cryoCARE-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5010e4b98d68c271ff9c5bc83cc6fd68d3ab326be540e0f158749ff439dbc61b",
          "md5": "4d720d3738305dd6612894e777e7d834",
          "sha256": "b66989acb6eadf771de08a46e4860d041113527205eebb2cf5d13ae3dc9cb43b"
        },
        "downloads": -1,
        "filename": "cryoCARE-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4d720d3738305dd6612894e777e7d834",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14467,
        "upload_time": "2022-10-06T06:49:33",
        "upload_time_iso_8601": "2022-10-06T06:49:33.831302Z",
        "url": "https://files.pythonhosted.org/packages/50/10/e4b98d68c271ff9c5bc83cc6fd68d3ab326be540e0f158749ff439dbc61b/cryoCARE-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c199277f719ab4ad8f60f6f1c3612716743165abfb2626d11d4f949a79dbd1e",
          "md5": "843f964ec77b2dc0e9ebe26849424574",
          "sha256": "49b210eccdd3c877504a37ceb7a6a22ad8657b1dbd85761f4a6cd713b54fae3d"
        },
        "downloads": -1,
        "filename": "cryoCARE-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "843f964ec77b2dc0e9ebe26849424574",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 15394,
        "upload_time": "2023-03-01T12:09:07",
        "upload_time_iso_8601": "2023-03-01T12:09:07.691400Z",
        "url": "https://files.pythonhosted.org/packages/5c/19/9277f719ab4ad8f60f6f1c3612716743165abfb2626d11d4f949a79dbd1e/cryoCARE-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c199277f719ab4ad8f60f6f1c3612716743165abfb2626d11d4f949a79dbd1e",
        "md5": "843f964ec77b2dc0e9ebe26849424574",
        "sha256": "49b210eccdd3c877504a37ceb7a6a22ad8657b1dbd85761f4a6cd713b54fae3d"
      },
      "downloads": -1,
      "filename": "cryoCARE-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "843f964ec77b2dc0e9ebe26849424574",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 15394,
      "upload_time": "2023-03-01T12:09:07",
      "upload_time_iso_8601": "2023-03-01T12:09:07.691400Z",
      "url": "https://files.pythonhosted.org/packages/5c/19/9277f719ab4ad8f60f6f1c3612716743165abfb2626d11d4f949a79dbd1e/cryoCARE-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}