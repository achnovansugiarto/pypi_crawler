{
  "info": {
    "author": "Konrad Weihmann",
    "author_email": "kweihmann@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing"
    ],
    "description": "|Build status| |PyPI version| |Python version| |Downloads| |Language\ngrade: Python|\n\nnittymcpick\n===========\n\nYour friendly nitpicking GitLab bot\n\nPurpose\n-------\n\nThis bot does run custom linting tools on receiving a webhook from\nGitLab and reporting back its findings as comments to the merge request\ndiff\n\nPrerequisites\n-------------\n\n-  python 3.6+\n-  GitLab CE/EE\n\nSetup\n-----\n\nInstall tool to a machine\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis machine has to be reachable by the GitLab server via network. In\nthe following we will assume a local installation on the GitLab Server\nitself (``127.0.0.1``)\n\n-  Install via pypi\n\n   .. code:: shell\n\n      pip3 install nittymcpick\n\nCreate a GitLab user\n~~~~~~~~~~~~~~~~~~~~\n\n-  Go to GitLab with an account that can create users (e.g. ``root``)\n\n   -  **admin/users/new**\n\n      -  **Name** = Nitty McPick\n      -  **Username** = nittymcpick\n      -  **Email** = foo@localhost (or any other non-exisiting mail\n         address)\n      -  **Access Level** = Regular\n\n   -  **admin/users/nittymcpick/impersonation_tokens**\n\n      -  **Name** = e.g. Nitty McPick Bot\n      -  **Scopes** = **api**, **read_repository**\n      -  **IMPORTANT** copy the content of **Your New Impersonation\n         Token**\n\nAdd bot to the project\n~~~~~~~~~~~~~~~~~~~~~~\n\n-  Goto Gitlab with an account that can change project settings\n\n   -  **[username]/[project]/-project_members/**\n\n      -  search **Nitty McPick** at \\**GitLabd member or Email address\\*\n      -  click **Invite**\n      -  Change level **Nitty McPick** from **Guest** to **Reporter**\n\nCreate a GitLab webhook\n~~~~~~~~~~~~~~~~~~~~~~~\n\n-  Goto Gitlab with an account that can change project settings\n\n   -  \\**[username]/[project]/-/settings/integrations\n\n      -  **URL**: http://127.0.0.1:8888\n      -  **Trigger**: Merge requests events\n      -  **SSL verification**: uncheck the box\n      -  Click on **Add webhook**\n\nCreate a configuration for the bot\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCreate a json file like shown at\n`config.json.sample <config.json.sample>`__. The file can contain any\nnumber of items\n\n``linter`` section\n^^^^^^^^^^^^^^^^^^\n\n+------------+---------------------------------------------------------+\n| attribute  | description                                             |\n+============+=========================================================+\n| name       | name of the linting tool                                |\n+------------+---------------------------------------------------------+\n| path       | absolute path of binary of the linting tool             |\n+------------+---------------------------------------------------------+\n| args       | list of additional arguments to be passed to the linter |\n+------------+---------------------------------------------------------+\n| ret_regex  | regular expression for evaluation of the output of the  |\n|            | linter (see `Return Regex <#return-regex>`__)           |\n+------------+---------------------------------------------------------+\n| tweaks.lin | Add number of lines to the reported output line number  |\n| e_count_ad |                                                         |\n| just       |                                                         |\n+------------+---------------------------------------------------------+\n| tweaks.sin | Run each matching file in a single linter instance,     |\n| gle_file_e | otherwise all files will be run by a single instance    |\n| xec        |                                                         |\n+------------+---------------------------------------------------------+\n\n``matches`` section\n^^^^^^^^^^^^^^^^^^^\n\n========= ===================================================\nattribute description\n========= ===================================================\npattern   Regular expression for files that should be checked\n========= ===================================================\n\nReturn Regex\n''''''''''''\n\nThe regular expression to extract all the needed data should contain the\nfollowing named groups\n\n-  ``severity`` - for the severity of the finding (optional)\n-  ``line`` - Line where the findings occured\n-  ``message`` - A meaningful message\n-  ``file`` - The file where the of the finding\n\nRun the tool\n~~~~~~~~~~~~\n\n.. code:: text\n\n   usage: nittymcpick [-h] [--token TOKEN] [--onlynew] [--nowip] [--host HOST]\n                      [--port PORT] [--botname BOTNAME]\n                      config\n\n   Your friendly linting bot for gitlab\n\n   positional arguments:\n     config             config file\n\n   optional arguments:\n     -h, --help         show this help message and exit\n     --token TOKEN      Access token to use (default:GL_ACCESS_TOKEN from\n                        environment)\n     --onlynew          Comment only on changes (default:false)\n     --nowip            Ignore WIP merge requests (default:false)\n     --host HOST        IP to bind to (default:127.0.0.1)\n     --port PORT        Port to bind to (default:8888)\n     --botname BOTNAME  Username of the bot in GitLab\n                        (default:NITTY_MCPICK_USERNAME from env or 'nittymcpick')\n\ne.g. run\n\n.. code:: shell\n\n   export GL_ACCESS_TOKEN=<Impersonation Token from gitlab>\n   nittymcpick config.json\n\nnow everytime a merge request is opened or changed the tool will run all\nthe configured linting tools. On a finding it would comment directly to\nthe MR like this\n\n.. code:: text\n\n   Nitty McPick @nittymcpick · just now\n   Reporter\n\n   mytool found a potential error - the code is absolutely insecure\n\nDocker\n------\n\nThere is an already prepared container available under\n``privkweihmann/nittymcpick:latest``\n\nA word on security\n------------------\n\nIt is heavily advised to run the bot on the gitlab server itself, as\ncurrently only ``http://`` as a webhook protocol is supported.\n\nPRs to enable ``https://`` as welcome!\n\n.. |Build status| image:: https://github.com/priv-kweihmann/nittymcpick/workflows/Python%20package/badge.svg\n.. |PyPI version| image:: https://badge.fury.io/py/nittymcpick.svg\n   :target: https://badge.fury.io/py/nittymcpick\n.. |Python version| image:: https://img.shields.io/pypi/pyversions/nittymcpick\n   :target: https://img.shields.io/pypi/pyversions/nittymcpick\n.. |Downloads| image:: https://img.shields.io/pypi/dm/nittymcpick\n   :target: https://img.shields.io/pypi/dm/nittymcpick\n.. |Language grade: Python| image:: https://img.shields.io/lgtm/grade/python/g/priv-kweihmann/nittymcpick.svg?logo=lgtm&logoWidth=18\n   :target: https://lgtm.com/projects/g/priv-kweihmann/nittymcpickv/context:python",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/priv-kweihmann/nittymcpick",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nittymcpick",
    "package_url": "https://pypi.org/project/nittymcpick/",
    "platform": "",
    "project_url": "https://pypi.org/project/nittymcpick/",
    "project_urls": {
      "Homepage": "https://github.com/priv-kweihmann/nittymcpick"
    },
    "release_url": "https://pypi.org/project/nittymcpick/1.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "GitLab bot for custom linting tools to comment MRs",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11657107,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0cf15a6dac62314b8d34078ad6200be2c16c2d055dd6f112d1aa27f8280e1f5",
          "md5": "997f0298f2fee10bcce71e7610308b68",
          "sha256": "fe141a55847801dc3717756c49be5f89801acb7e049a8c656f3b7327f83d32fe"
        },
        "downloads": -1,
        "filename": "nittymcpick-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "997f0298f2fee10bcce71e7610308b68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5644,
        "upload_time": "2020-02-15T15:09:46",
        "upload_time_iso_8601": "2020-02-15T15:09:46.352259Z",
        "url": "https://files.pythonhosted.org/packages/d0/cf/15a6dac62314b8d34078ad6200be2c16c2d055dd6f112d1aa27f8280e1f5/nittymcpick-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20b50fcb71f120bbecb7cf922480e597366361f7597be1eef57dd7f77668dcbe",
          "md5": "653b111dbedc87855d496cfa2eaf05c3",
          "sha256": "49abc9870fa200672e9156c24871f1d8b3098a84aa212c21530fd560daede889"
        },
        "downloads": -1,
        "filename": "nittymcpick-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "653b111dbedc87855d496cfa2eaf05c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6429,
        "upload_time": "2020-02-23T14:35:53",
        "upload_time_iso_8601": "2020-02-23T14:35:53.161587Z",
        "url": "https://files.pythonhosted.org/packages/20/b5/0fcb71f120bbecb7cf922480e597366361f7597be1eef57dd7f77668dcbe/nittymcpick-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80b3a6f2a2aaff2d6d71b12c12088eb56981ec132462761f7659879d55fd1473",
          "md5": "87446d7d6704eae9c45b5b7b7b0f37dc",
          "sha256": "111454c2752c631fc661d0bdc5ef639716284c5ddbcc4e7a29a82bd17a864377"
        },
        "downloads": -1,
        "filename": "nittymcpick-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "87446d7d6704eae9c45b5b7b7b0f37dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6428,
        "upload_time": "2020-02-23T14:39:46",
        "upload_time_iso_8601": "2020-02-23T14:39:46.438782Z",
        "url": "https://files.pythonhosted.org/packages/80/b3/a6f2a2aaff2d6d71b12c12088eb56981ec132462761f7659879d55fd1473/nittymcpick-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8549ae0f1717db5215d8b0198480e078abfd41d0427f8cfb7ea1ede7921e02e",
          "md5": "7d06dfa79244b193fde85bb7bb5ecc53",
          "sha256": "7c14a359970d3ef2ecada9e6d41f74ca766379e1cde95b77fefe868fa5a3d712"
        },
        "downloads": -1,
        "filename": "nittymcpick-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7d06dfa79244b193fde85bb7bb5ecc53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6429,
        "upload_time": "2020-03-01T13:52:59",
        "upload_time_iso_8601": "2020-03-01T13:52:59.619525Z",
        "url": "https://files.pythonhosted.org/packages/e8/54/9ae0f1717db5215d8b0198480e078abfd41d0427f8cfb7ea1ede7921e02e/nittymcpick-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83224a4c26a00363c42c4c7145323162306f8606367578d0a3659b7a05d491ce",
          "md5": "e7cf100e24cf1a18fd45b497221ccced",
          "sha256": "4b5487adedefe2120c7e9b75ea25f37c3533742219aa80e0ebb799c6ac72ae01"
        },
        "downloads": -1,
        "filename": "nittymcpick-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e7cf100e24cf1a18fd45b497221ccced",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10493,
        "upload_time": "2020-03-01T14:02:50",
        "upload_time_iso_8601": "2020-03-01T14:02:50.046782Z",
        "url": "https://files.pythonhosted.org/packages/83/22/4a4c26a00363c42c4c7145323162306f8606367578d0a3659b7a05d491ce/nittymcpick-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4712b2800487b38dc5d3cbf30f6b087548d9b6f3825ec8dd357487fe00a5cd5f",
          "md5": "772714a1987ac6832e39a1b03388f62f",
          "sha256": "89cccc2ab2d5c733d8a1311a19fddf39a7c50c1f7a624fa218a1fb7099003772"
        },
        "downloads": -1,
        "filename": "nittymcpick-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "772714a1987ac6832e39a1b03388f62f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12256,
        "upload_time": "2021-10-07T18:10:06",
        "upload_time_iso_8601": "2021-10-07T18:10:06.092883Z",
        "url": "https://files.pythonhosted.org/packages/47/12/b2800487b38dc5d3cbf30f6b087548d9b6f3825ec8dd357487fe00a5cd5f/nittymcpick-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4712b2800487b38dc5d3cbf30f6b087548d9b6f3825ec8dd357487fe00a5cd5f",
        "md5": "772714a1987ac6832e39a1b03388f62f",
        "sha256": "89cccc2ab2d5c733d8a1311a19fddf39a7c50c1f7a624fa218a1fb7099003772"
      },
      "downloads": -1,
      "filename": "nittymcpick-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "772714a1987ac6832e39a1b03388f62f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12256,
      "upload_time": "2021-10-07T18:10:06",
      "upload_time_iso_8601": "2021-10-07T18:10:06.092883Z",
      "url": "https://files.pythonhosted.org/packages/47/12/b2800487b38dc5d3cbf30f6b087548d9b6f3825ec8dd357487fe00a5cd5f/nittymcpick-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}