{
  "info": {
    "author": "Brian Bruggeman",
    "author_email": "brian.m.bruggeman@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: Apache Software License",
      "License :: Other/Proprietary License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Multimedia :: Graphics",
      "Topic :: Multimedia :: Graphics :: 3D Rendering",
      "Topic :: Multimedia :: Graphics :: Viewers",
      "Topic :: Software Development :: User Interfaces"
    ],
    "description": "oogli\n-----\n\n|Build Status| |PyPI version| |Status| |Python Compatibility|\n|Downloads| |Coverage Status|\n\nOogli is Beautiful\n\nObject Oriented Graphics Library Interface written in Python\n\nMotivation:\n-----------\n\nI was dissatisfied with difficulty in producing easy to read and\nunderstand OpenGL code. This small library helps eliminate some of the\nboilerplate inherent within OpenGL's API. Oogli greatly simplifies the\ninterface while still providing access to the underlying GLFW3 and\nOpenGL API.\n\nLicense:\n--------\n\nThis package is released as Apache 2.0 license.\n\nHowever, at your option, you may apply any OSI approved free software\nlicense you choose provided that you adhere to the free software license\nchosen and additionally follow these criteria:\n\na. list the author's name of this software as a contributor to your\n   final product\n\nb. provide credit to your end user of your product or software without\n   your end user asking for where you obtained your software\n\nc. notify the author of this software that you are using this software\n\nd. If you believe there can be some benefit in providing your changes\n   upstream, you'll submit a change request. While this criteria is\n   completely optional, please consider not being a dick.\n\nInstallation:\n-------------\n\nOogli was designed with GLFW-CFFI in mind and uses the API provided by\nGLFW-CFFI. In addition, Oogli uses numpy.\n\nInstalling via pip\n~~~~~~~~~~~~~~~~~~\n\nInstall via ``pip install oogli``.\n\nInstalling GLFW-CFFI via pip\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nInstall via ``pip install glfw-cffi``.\n\nInstalling Numpy via pip\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nInstall via ``pip install numpy``.\n\nInstalling GLFW3\n~~~~~~~~~~~~~~~~\n\nGLFW3 is available for several different platforms:\n\n-  Ubuntu/Debian: ``sudo apt-get install -y libglfw3-dev``\n-  Fedora/Red Hat: ``sudo yum install -y libglfw3-dev``\n-  Mac OS X with Homebrew: ``brew install glfw3``\n-  Windows: There is an installer available `64-bit\n   Windows <https://github.com/glfw/glfw/releases/download/3.1.2/glfw-3.1.2.bin.WIN64.zip>`__\n   or `32-bit\n   Windows <https://github.com/glfw/glfw/releases/download/3.1.2/glfw-3.1.2.bin.WIN32.zip>`__\n\nGLFW3 is relatively new, so some older installations of Linux may not\nhave ``libglfw`` directly available. You may check out the\n`travis.yml <https://github.com/brianbruggeman/glfw-cffi/blob/master/.travis.yml#L34-L52>`__\nfile within our github repo for more information on setup on older\nsystems.\n\nUsage:\n------\n\nSample Usage:\n~~~~~~~~~~~~~\n\nThis is the required code to produce a shaded triangle using oogli:\n\n::\n\n    import oogli\n\n    v_shader = '''\n        #version 410\n        in vec2 vertices;\n        void main () {\n            gl_Position = vec4(vertices, 0.0, 1.0);\n        }\n    '''\n\n    f_shader = '''\n        #version 410\n        out vec4 frag_color;\n        void main () {\n            frag_colour = vec4(0.3, 1.0, 0.3, 1.0);\n        }\n    '''\n\n    # Create a program from the shaders\n    #  Note: This will auto request an OpenGL context of 4.1\n    program = oogli.Program(v_shader, f_shader)\n\n    # Vertices for a 2D Triangle\n    triangle = [(0.0, 0.5), (-0.5, 0.5), (-0.5, -0.5)]\n\n    with oogli.Window('Oogli', 640, 480) as win:\n        # Main Loop\n        while win.should_run()\n            # Render triangle\n            program.draw(vertices=triangle)\n\nMore complex examples can be found within the examples folder on the\ngithub repo.\n\nContributions:\n--------------\n\nContributions are welcome. When opening a PR, please keep the following\nguidelines in mind:\n\n-  Before implementing, please open an issue for discussion.\n-  Make sure you have tests for the new logic.\n-  Make sure your code passes ``flake8``\n-  Add yourself to contributors at ``README.md`` and/or your\n   contributions.\n\nContributors\n------------\n\n-  `Brian Bruggeman <https://github.com/brianbruggeman>`__ - Originator\n\n.. |Build Status| image:: https://travis-ci.org/brianbruggeman/oogli.svg\n   :target: https://travis-ci.org/brianbruggeman/oogli\n.. |PyPI version| image:: https://img.shields.io/pypi/v/oogli.svg\n   :target: https://pypi.python.org/pypi/oogli\n.. |Status| image:: https://img.shields.io/pypi/status/oogli.svg\n   :target: https://pypi.python.org/pypi/oogli\n.. |Python Compatibility| image:: https://img.shields.io/pypi/pyversions/oogli.svg\n   :target: https://pypi.python.org/pypi/oogli\n.. |Downloads| image:: https://img.shields.io/pypi/dm/oogli.svg?period=week\n   :target: https://pypi.python.org/pypi/oogli\n.. |Coverage Status| image:: https://coveralls.io/repos/brianbruggeman/oogli/badge.svg?branch=develop&service=github\n   :target: https://coveralls.io/github/brianbruggeman/oogli?branch=develop",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brianbruggeman/oogli.git",
    "keywords": "GLFW,CFFI",
    "license": "Apache 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "oogli",
    "package_url": "https://pypi.org/project/oogli/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/oogli/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/brianbruggeman/oogli.git"
    },
    "release_url": "https://pypi.org/project/oogli/0.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Oogli is a beautiful object oriented graphics library interface",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1953621,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1904ef5f1af5635e65556d80102e9bb17e38cb056b04325e663d9d87e9237848",
          "md5": "652b2473d22472ef63f8a8c12f53de7a",
          "sha256": "bff052d35a903f1c92a27083d35aee020c3eeb709f3c188a4293a740097305b1"
        },
        "downloads": -1,
        "filename": "oogli-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "652b2473d22472ef63f8a8c12f53de7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40377,
        "upload_time": "2016-02-12T19:09:46",
        "upload_time_iso_8601": "2016-02-12T19:09:46.175971Z",
        "url": "https://files.pythonhosted.org/packages/19/04/ef5f1af5635e65556d80102e9bb17e38cb056b04325e663d9d87e9237848/oogli-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7181b11fecf5dcb4b0b6d7632b1adfd357b3067bc67392dd76ec9a4cc5eb23e",
          "md5": "3a403d4e28f6ab685708ed506492ddb6",
          "sha256": "1cb12094e08b47be2964dc40afc6d4f5192fcb907821808a1ba070d4f6fad34a"
        },
        "downloads": -1,
        "filename": "oogli-0.1.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "3a403d4e28f6ab685708ed506492ddb6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5317,
        "upload_time": "2016-01-14T05:20:08",
        "upload_time_iso_8601": "2016-01-14T05:20:08.323429Z",
        "url": "https://files.pythonhosted.org/packages/c7/18/1b11fecf5dcb4b0b6d7632b1adfd357b3067bc67392dd76ec9a4cc5eb23e/oogli-0.1.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1904ef5f1af5635e65556d80102e9bb17e38cb056b04325e663d9d87e9237848",
        "md5": "652b2473d22472ef63f8a8c12f53de7a",
        "sha256": "bff052d35a903f1c92a27083d35aee020c3eeb709f3c188a4293a740097305b1"
      },
      "downloads": -1,
      "filename": "oogli-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "652b2473d22472ef63f8a8c12f53de7a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 40377,
      "upload_time": "2016-02-12T19:09:46",
      "upload_time_iso_8601": "2016-02-12T19:09:46.175971Z",
      "url": "https://files.pythonhosted.org/packages/19/04/ef5f1af5635e65556d80102e9bb17e38cb056b04325e663d9d87e9237848/oogli-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}