{
  "info": {
    "author": "gomachssm",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# TWSqlParser (TwoWaySqlParser) #\n\n[![Downloads](https://static.pepy.tech/personalized-badge/twsqlparser?period=total&units=international_system&left_color=grey&right_color=blue&left_text=total%20downloads)](https://pepy.tech/project/twsqlparser)\n\n```text\n[English]\nThe readme for this product is written in Japanese.\nIf you want to read it in other languages, please use a translation tool.\n\n[Japanese]\nこのプロダクトのreadmeは日本語で記載されています。\nもし別の言語で読みたい場合は、翻訳ツールを使って下さい。\n```\n\n## インストール方法\n\n以下のコマンドでインストールを行います。\n```shell script\npip install twsqlparser\n```\n\n## TWSqlParser とは\n\nTWSqlParser(以下、TWSP)はSQLファイルをベースに動的なSQLを作成するためのモジュールです。\n他の2WaySQLライブラリ、フレームワーク用に作成されたSQLファイルとの互換性はありません。\nまた、TWSPはルールに従って展開を行うだけであるため、入力SQLが誤っている場合は\nSQL構文として間違った結果を返却する可能性があります。\n\n以下のSQLを例に概要を説明します。\n\n```sql\nselect schemaname, tablename\nfrom pg_tables\nwhere tablename = /*:table_name*/'pg_type';\n```\n\nこの場合、TWSPを利用すると以下のSQLに変換されます。\n\n```sql\nselect schemaname, tablename\nfrom pg_tables\nwhere tablename = :table_name;\n```\n\nこの仕組みにより、開発時にSQLファイルを直接実行することも、\nこのSQLファイルを製品コードに埋め込むことも可能になります。\n\nバインドパラメータを直接埋め込んだSQLファイルではSQL開発クライアント上で実行するための\nパラメータの置換、もしくはパラメータの設定が必要になるため非効率です。\n\n## 組み合わせて利用可能なモジュール\n\nTWSPではバインドパラメータを次の形式で埋め込むことができます。\nSQL実行に利用するモジュールが対応しているか確認した上でTWSPを利用してください。\n\n* `:named` 形式\n* `$(pyformat)s` 形式\n\n※ バインドパラメータの `?` や `:0` 、 `%s` といった書き方には対応していません。\n\n## 実装例\n\n```text\nproject_root\n  +-- main.py\n  +-- select.sql\n  +-- requirements.txt\n```\n\n```python main.py\nimport os\nimport pg8000\nimport twsqlparser\n\nbase = os.path.dirname(__file__)\nsql_path = os.path.abspath(os.path.join(base, './select.sql'))\nbase_param = {'pkg': 'sqlparser'}\n\npg8000.paramstyle = 'named'    # <- very important, if you use pg8000.\n\npg_con_info = {\n    'host': 'localhost',\n    'port': 5432,\n    'database': 'postgres',\n    'user': 'postgres',\n    'password': 'password'\n}\n\nsql_parameter = {'isbn': '978-3-16-148410-0'}\n\nwith pg8000.connect(**pg_com_info) as con:\n    sql, param = twsqlparser.parse_file(sql_path, sql_parameter)\n    res = con.run(sql, param)\n    print(res)\n```\n\n```sql select.sql\nselect * from book\n/*%if isbn*/\nwhere isbn = /*:isbn*/'978-1-23-456789-0'\n/*end*/\n``````\n\n## 関数の利用方法\n\nこのモジュールの呼び出し方は2通りあります。\n\n1: `twsqlparser.parse_file`\n\n|引数|型|必須|初期値|説明|\n| :---: | :---: | :---: | :---: | --- |\n|file_path|str|*| | 解析対象ファイルの絶対パス<br>絶対パスを指定する必要があります。 |\n|query_params|dict| |None|SQL実行時に利用するパラメータ<br>パラメータを利用しない場合は省略可能|\n|comment_delete|bool| |True|True の場合、通常コメントを削除、 False の場合は削除しない|\n|encoding|str| |'utf-8'|対象ファイルの文字コード|\n|newline|str| |'\\n'|対象ファイルの改行コード|\n|paramstyle|twsqlparser.ParamStyle| |NAMED|以下のパラメータ表示形式<br>twsqlparser.ParamStyle.NAMED<br>twsqlparser.ParamStyle.PYFORMAT|\n\n戻り値 は `parse_sql` 参照\n\n2: `twsqlparser.parse_sql`\n\n|引数|型|必須|初期値|説明|\n| :---: | :---: | :---: | :---: | --- |\n|base_sql|str|*| |解析対象SQL|\n|query_params|dict| |None|`twsqlparser.parse_file` 参照|\n|comment_delete|bool| |True|`twsqlparser.parse_file` 参照|\n|newline|str| |'\\n'|`twsqlparser.parse_file` 参照|\n|paramstyle|twsqlparser.ParamStyle| |NAMED|`twsqlparser.parse_file` 参照|\n\n* 戻り値 : tuple(str, dict)\n  * str : 解析後SQL\n  * dict: 解析後パラメータ\n    * 解析後SQLを利用するために必要なパラメータです。\n      * 解析対象SQLに FOR コメントが含まれない場合は入力と同じ値になります。\n      * 解析対象SQLに FOR コメントが含まれる場合、 FOR 用のパラメータが追加されます。\n    * この処理は引数 query_params には影響を与えません。\n\n## コメント解析仕様\n\n以下に示す例は全て `ParamStyle.NAMED` の場合です。\n`ParamStyle.PYFORMAT` の場合は `%(param)s` でフォーマットされます。\n\n### 行コメント\n\n* 行コメント `--comment` は通常通り、コメントとして解釈されます。\n\n### 複数行コメント\n\n* 複数行コメント `/*...*/` は書き方に応じて複数の振る舞いをします。\n  * `/*:param*/` : バインドパラメータとして埋め込みます。\n  * `/*$param*/` : SQLに文字として直接埋め込みます。\n  * `/*%if PYTHON_BOOL_STATEMENT*/~/*end*/` : if が True の場合、 if から end に囲まれた文字を出力します。\n  * `/*%for VARIABLE in PYTHON_ITERATABLE_STATEMENT*/~/*end*/` : ループ可能な変数を含む場合、 for から end に囲まれた文字を繰り返し出力します。\n  * 上記以外は通常通り、コメントとして解釈されます。\n\n#### パラメータとして埋め込み\n\n* 記述方法\n  * `/*:パラメータ名*/` を記述することで、パラメータを埋め込むことができます。\n  * また、コメントの直後に連続して文字が続く場合、その値はダミー値として扱われます。\n    * ダミー値として扱う文字は `*/` の直後から以下の文字を見つけるまでです。\n        * スペース ` `、タブ `\\t`、改行 `\\r` `\\n` `\\r\\n`。\n        * ``'!#$%&)-=^~|@`;+:*]},/<>?_`` ※ `[{('\"\\` 以外の記号\n          * dictやlistをパラメータに指定することは出来ますが、任意の要素のみを抽出することは出来ません。\n        * パラメータコメントの直後が `'` や `\"` の場合、クォートに囲まれた文字列をダミー値として識別します。\n        * パラメータコメントの直後が `(` や `[` 、 `{` の場合、それに対応する閉じ括弧までを\n          ダミー値として識別します。\n    * `/*:a*/'foo'` の場合、解析結果には `foo` は含まれず、 `:a` のみが残ります。\n    * `/*:a*/123` や `/*:a*/table.column`  の場合も同様です。\n    * 利用するライブラリの仕様に依存しますが、 `in` 句やListの比較を行う場合、\n      ダミー値は `in /*:params*/(0, 1, 2)` のように書く必要があります。<br>\n      `params = ('cond1', 'con2')`\n      * ライブラリ依存で対応が難しい場合、「直接埋め込み」の利用を検討してください。\n  * パラメータ名に利用可能な文字は、半角英数字とアンダースコアのみ(正規表現パターン `[a-zA-Z0-9_]+` )です。\n  * 次のいずれかの場合、正しく解析されず、通常コメントとして扱われる、またはエラーが発生します。\n    * `/*` の直後が `:` ではない\n    * `/*` と `*/` の間にスペース ` ` など変数として利用できない文字が存在する\n\n* 利用例\n\n```sql input.sql\nselect /*:param*/'dummy value' from xxx\n```\n\n* 解析後\n\n```sql output.sql\nselect :param from xxx\n```\n\n#### 直接埋め込み\n\n* 記述方法\n  * 例として、次のパラメータを受け取った場合の例を記載します。\n    * `{'a': 'str_a', 'params': '(7, 8, 9)'}`\n  * `/*$パラメータ名*/` を記述することで、パラメータ名に該当する値を直接埋め込むことができます。\n    * 文字として埋め込みたい場合、パラメータは `'any'` のようにクォートで囲む必要があります。\n  * また、コメントの直後に連続して文字が続く場合、その値はダミー値として扱われます。\n    * ダミー値として扱う文字は `*/` の直後から以下の文字を見つけるまでです。\n        * スペース ` `、タブ `\\t`、改行 `\\r` `\\n` `\\r\\n`。\n        * ``'!#$%&)-=^~|@`;+:*]},/<>?_`` ※ `[{('\"\\` 以外の記号\n        * パラメータコメントの直後が `'` や `\"` の場合、クォートに囲まれた文字列をダミー値として識別します。\n        * パラメータコメントの直後が `(` や `[` 、 `{` の場合、それに対応する閉じ括弧までを\n          ダミー値として識別します。\n    * `/*$a*/'foo'` の場合、解析結果には `foo` は含まれず、 パラメータ `a` の値が出力されます。\n    * `/*$a*/123` や `/*$a*/table.column`  の場合も同様です。\n    * 利用するライブラリの仕様に依存しますが、 `in` 句やListの比較を行う場合、\n      ダミー値は `in /*$params*/(0, 1, 2)` のように書く必要があります。<br>\n      `params = \"('cond1', 'con2')\"`\n  * パラメータ名に利用可能な文字は、半角英数字とアンダースコアのみ(正規表現パターン `[a-zA-Z0-9_]+` )です。\n  * 次のいずれかの場合、正しく解析されず、通常コメントとして扱われる、またはエラーが発生します。\n    * `/*` の直後が `$` ではない\n    * `/*` と `*/` の間にスペース ` ` など変数として利用できない文字が存在する\n\n:warning: : 直接埋め込みはSQLインジェクションが行われる可能性がある為、実装には十分注意してください。\n  可能な限り直接埋め込みを避け、パラメータとして埋め込む方法を検討する必要があります。\n  特に、利用者が変更可能な値を直接埋め込みすることは避ける必要があります。どうしても必要な場合は十分な入力値検証が必要です。\n\n* 利用例\n\n```sql input.sql\nselect /*$p*/'dummy value' from xxx\n```\n\n```python input_parameter.py\n{'p': \"'Parameter is output directly.'\"}\n```\n\n* 解析後\n\n```sql output.sql\nselect 'Parameter is output directly.' from xxx\n```\n\n#### IF分岐\n\n* 記述方法\n  * 例として、次のパラメータを受け取った場合の例を記載します。\n    * `{'a': 'foo'}`\n  * `/*%if PYTHON_BOOL_STATEMENT*/any/*end*/` を記述することで、 PYTHON_BOOL_STATEMENT が True\n    になる場合に any が SQL に埋め込まれます。\n    * PYTHON_BOOL_STATEMENT は、 Python の `if` 構文で記述可能な書式が利用可能です。\n      * 例えば `/*%if a == 'foo'*/` や `/*%if a != 'bar'*/` 、 `/*%if a*/` など。\n    * if から end に挟まれた箇所は、通常の SQL や、 TWSP で解析可能なコメントのネストが可能です。\n      * 半角スペースや改行を含む場合、それらはトリムされません。\n      * 例外的に、 1 行の記載が `/*%if PYTHON_BOOL_STATEMENT*/` または `/*end*/` のみの場合に限り、\n        解析後の結果から該当行を削除します。(利用例、解析後を参照)\n  * 次のいずれかの場合、正しく解析されず、通常コメントとして扱われる、またはエラーが発生します。\n    * `/*` の直後が `%if ` ではない\n      * `if` の直後には 1 つ以上の半角スペースが必要\n    * PYTHON_BOOL_STATEMENT が真偽値を返す式ではない\n    * `/*end*/` が存在しない\n    * `/*end*/` コメントの中に半角スペース ` ` など、関係のない文字が含まれる\n\n* 利用例\n\n```sql input.sql\nselect\n  /*%if a == 'foo'*/\n    'dummy value'\n  /*end*/\nfrom xxx\n```\n\n```python input_parameter\n{'a': 'foo'}\n```\n\n* 解析後\n\n```sql input.sql\nselect\n    'dummy value'\nfrom xxx\n```\n\n#### FORループ\n\n* 記述方法\n  * 例として、次のパラメータを受け取った場合の例を記載します。\n    * `{'arr': ['col1', 'col2', 'col3'], 'dct': {'k1': 'v1', 'k2': 'v2'}}`\n  * `/*%for VARIABLE in PYTHON_ITERATABLE_STATEMENT*/any/*end*/` を記述することで、PYTHON_ITERATABLE_STATEMENT\n    がループ可能な回数分、 any が SQL に埋め込まれます。\n    * PYTHON_ITERATABLE_STATEMENT は Python の `for` 構文で記述可能な書式が利用可能です。\n      * 例えば `/*%for x in arr*/` や `/*%for i, kv in enumerate(dct.items())*/`\n      * VARIABLE は `for` から `end` に囲まれたスコープの間でのみ有効です。\n    * if から end に挟まれた箇所は、通常の SQL や、 TWSP で解析可能なコメントのネストが可能です。\n      * 半角スペースや改行を含む場合、それらはトリムされません。\n      * 例外的に、 1 行の記載が `/*%for VARIABLE in PYTHON_ITERATABLE_STATEMENT*/` または `/*end*/` のみの場合に限り、\n        解析後の結果から該当行を削除します。(利用例、解析後を参照)\n  * 次のいずれかの場合、正しく解析されず、通常コメントとして扱われる、またはエラーが発生します。\n    * `/*` の直後が `%for ` ではない\n      * `for` の直後には 1 つ以上の半角スペースが必要\n    * PYTHON_ITERATABLE_STATEMENT がループ可能な式ではない\n    * PYTHON_ITERATABLE_STATEMENT の結果を VARIABLE に代入できない\n    * `/*end*/` が存在しない\n    * `/*end*/` コメントの中に半角スペース ` ` など、関係のない文字が含まれる\n\n* 利用例\n\n```sql input.sql\nselect * from xxx\nwhere 1 = 1\n/*%for i, v in enumerate(values)*/\n  and col/*$i*/999 in /*:v*/'foo'\n/*end*/\n```\n\n```python input_parameter\n{'values': ['valueA', 'valueB']}\n```\n\n* 解析後\n\n```sql output.sql\nselect * from xxx\nwhere 1 = 1\n  and col0 in :5a124b33-b25f-44e8-8d4b-144f3ef376dc_0_v\n  and col1 in :5a124b33-b25f-44e8-8d4b-144f3ef376dc_1_v\n```\n\n```python output_parameter\n{\n    'values': ['valueA', 'valueB'],\n    '5a124b33-b25f-44e8-8d4b-144f3ef376dc_0_v': 'valueA',\n    '5a124b33-b25f-44e8-8d4b-144f3ef376dc_1_v': 'valueB'\n}\n```\n\n## ライセンス\n\nApache License, Version 2.0\n\n## その他\n\nこのライブラリを使った感想があれば、twitterやブログに投稿をお願いします。\nその時、 `twsqlparser` の単語を含めていただけると\n作者のモチベーション向上や不具合改修、機能追加に繋がります。\ntwitterに投稿する場合は、ハッシュタグ `#twsqlparser` で投稿して頂きたいです。\n\n機能追加、改善要望、バグ報告はtwitterまたはissueに投稿をお願いします。\n\nバグ、機能追加など、いずれも作者が開発可能なペースで進みます。\n素早い対応は期待しないようお願いします。\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gomachssm/twsqlparser",
    "keywords": "two way sql twsql twowaysql two-way 2way 2way-sql",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "twsqlparser",
    "package_url": "https://pypi.org/project/twsqlparser/",
    "platform": "",
    "project_url": "https://pypi.org/project/twsqlparser/",
    "project_urls": {
      "Homepage": "https://github.com/gomachssm/twsqlparser"
    },
    "release_url": "https://pypi.org/project/twsqlparser/1.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "2way SQL parser for Python",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11731579,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cfa16964c7cf15cb0000422355d800b8e1b1aedfb5a6717c3247109a5b2906c",
          "md5": "bf884ce4eb99769f38caa7cc88745e7b",
          "sha256": "8f8cb1a4b7fb9e7143c3d39016425c8f23496279bccffb554dcb9c6b36387a20"
        },
        "downloads": -1,
        "filename": "twsqlparser-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf884ce4eb99769f38caa7cc88745e7b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13536,
        "upload_time": "2020-11-02T01:55:13",
        "upload_time_iso_8601": "2020-11-02T01:55:13.676470Z",
        "url": "https://files.pythonhosted.org/packages/4c/fa/16964c7cf15cb0000422355d800b8e1b1aedfb5a6717c3247109a5b2906c/twsqlparser-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3a08de4cbac43228eea510772876c0b38d610b5c86fd787b4873bf8aea51166",
          "md5": "257b18cf6f1f9565c9f03d18b5bac387",
          "sha256": "254880520b7617bb353f84c0041c7cb011292c540d8513e25861a4ed5f770939"
        },
        "downloads": -1,
        "filename": "twsqlparser-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "257b18cf6f1f9565c9f03d18b5bac387",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17537,
        "upload_time": "2020-11-02T01:55:15",
        "upload_time_iso_8601": "2020-11-02T01:55:15.672505Z",
        "url": "https://files.pythonhosted.org/packages/a3/a0/8de4cbac43228eea510772876c0b38d610b5c86fd787b4873bf8aea51166/twsqlparser-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9be7665b03b8c91154bd4488a367da9d2361be71fcdc760f38fac48c89e8350",
          "md5": "211a61185539bb940d5833e75f8594c0",
          "sha256": "c257be5582764af6b1309afbd5ceb6ee1ee067fa560674dbf606cb1a4cdec154"
        },
        "downloads": -1,
        "filename": "twsqlparser-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "211a61185539bb940d5833e75f8594c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14060,
        "upload_time": "2020-11-14T02:16:23",
        "upload_time_iso_8601": "2020-11-14T02:16:23.334440Z",
        "url": "https://files.pythonhosted.org/packages/f9/be/7665b03b8c91154bd4488a367da9d2361be71fcdc760f38fac48c89e8350/twsqlparser-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e351db334a5f88a64fdf577ba587cb4db93317c6c52038c5112e123b7d90a69b",
          "md5": "7a94f62277ee2d371099550c4f5b7edb",
          "sha256": "36f8117c9e5e7e78de1e485a7abcfd06bc45ad43f10005aafa1fdb8368527c16"
        },
        "downloads": -1,
        "filename": "twsqlparser-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7a94f62277ee2d371099550c4f5b7edb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18517,
        "upload_time": "2020-11-14T02:16:24",
        "upload_time_iso_8601": "2020-11-14T02:16:24.443349Z",
        "url": "https://files.pythonhosted.org/packages/e3/51/db334a5f88a64fdf577ba587cb4db93317c6c52038c5112e123b7d90a69b/twsqlparser-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3caf3b50388a572b70ae813600b3a129b8f355bd39be3871e9910d7249b61f1a",
          "md5": "be35b812159b2de5fb162042ca3657d3",
          "sha256": "fc283eb227f73939d11e6ea702722e860d3ef1d809cfff0e9a7b1b9bf5315508"
        },
        "downloads": -1,
        "filename": "twsqlparser-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be35b812159b2de5fb162042ca3657d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14361,
        "upload_time": "2021-07-05T14:41:52",
        "upload_time_iso_8601": "2021-07-05T14:41:52.862812Z",
        "url": "https://files.pythonhosted.org/packages/3c/af/3b50388a572b70ae813600b3a129b8f355bd39be3871e9910d7249b61f1a/twsqlparser-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfbc79afd5c604c8bb6a69b1f7f6e8463e9f7619d3d8e68847be13020a3b1510",
          "md5": "00c342a287f29bdd05495beb5fd4e0c9",
          "sha256": "07177a19dfb37c966d2f79684819977baad6f9b294fc5ddc5f586a10bdf62cfa"
        },
        "downloads": -1,
        "filename": "twsqlparser-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "00c342a287f29bdd05495beb5fd4e0c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19108,
        "upload_time": "2021-07-05T14:41:54",
        "upload_time_iso_8601": "2021-07-05T14:41:54.248806Z",
        "url": "https://files.pythonhosted.org/packages/bf/bc/79afd5c604c8bb6a69b1f7f6e8463e9f7619d3d8e68847be13020a3b1510/twsqlparser-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cee7d092ad3d201eea57a11caf555ce5101c392e596c3387d4bcbc1fc74d34a",
          "md5": "2af62540b65bc220f058e11584638664",
          "sha256": "adca5a66e857bd5709faf856656e45923343ff003d1591899686bef89f108e7f"
        },
        "downloads": -1,
        "filename": "twsqlparser-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2af62540b65bc220f058e11584638664",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15249,
        "upload_time": "2021-10-15T02:21:13",
        "upload_time_iso_8601": "2021-10-15T02:21:13.817427Z",
        "url": "https://files.pythonhosted.org/packages/5c/ee/7d092ad3d201eea57a11caf555ce5101c392e596c3387d4bcbc1fc74d34a/twsqlparser-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb46a72b9fac32bd35ae45475b3c9941ec6665c57283d8297df1d094239d43a2",
          "md5": "c7282068c8e345ebc3891ffff3a94021",
          "sha256": "86dfb1e478668d60b1e4aaf1ce0acb5d733a6065712edc04ea47e013ae66cebe"
        },
        "downloads": -1,
        "filename": "twsqlparser-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c7282068c8e345ebc3891ffff3a94021",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19115,
        "upload_time": "2021-10-15T02:21:16",
        "upload_time_iso_8601": "2021-10-15T02:21:16.697051Z",
        "url": "https://files.pythonhosted.org/packages/fb/46/a72b9fac32bd35ae45475b3c9941ec6665c57283d8297df1d094239d43a2/twsqlparser-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5cee7d092ad3d201eea57a11caf555ce5101c392e596c3387d4bcbc1fc74d34a",
        "md5": "2af62540b65bc220f058e11584638664",
        "sha256": "adca5a66e857bd5709faf856656e45923343ff003d1591899686bef89f108e7f"
      },
      "downloads": -1,
      "filename": "twsqlparser-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2af62540b65bc220f058e11584638664",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15249,
      "upload_time": "2021-10-15T02:21:13",
      "upload_time_iso_8601": "2021-10-15T02:21:13.817427Z",
      "url": "https://files.pythonhosted.org/packages/5c/ee/7d092ad3d201eea57a11caf555ce5101c392e596c3387d4bcbc1fc74d34a/twsqlparser-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb46a72b9fac32bd35ae45475b3c9941ec6665c57283d8297df1d094239d43a2",
        "md5": "c7282068c8e345ebc3891ffff3a94021",
        "sha256": "86dfb1e478668d60b1e4aaf1ce0acb5d733a6065712edc04ea47e013ae66cebe"
      },
      "downloads": -1,
      "filename": "twsqlparser-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "c7282068c8e345ebc3891ffff3a94021",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19115,
      "upload_time": "2021-10-15T02:21:16",
      "upload_time_iso_8601": "2021-10-15T02:21:16.697051Z",
      "url": "https://files.pythonhosted.org/packages/fb/46/a72b9fac32bd35ae45475b3c9941ec6665c57283d8297df1d094239d43a2/twsqlparser-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}