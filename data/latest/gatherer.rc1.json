{
  "info": {
    "author": "rexshijaku (Rexhep Shijaku)",
    "author_email": "<rexhepshijaku@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# Gatherer\n\nCollects data from multiple MySQL Databases in a multi-tenant architecture. Gatherer helps to gather the scattered data across different databases which share the same schema. It outputs the whole collected data into a single CSV file.\n\n\n\n##### Pip\n\nYou can install this package from pip by running the following command :\n\n```html\n\npip install gatherer\n\n```\n\n\n\n#### Pros\n\n\n\n- Cuts out the need of performing a manual job by executing your query on each database and then merging them.\n\n- No wait for huge response which may fail or exceed different limits.\n\n- Specific databases may be excluded.\n\n- Huge and complex queries can be read from a file.\n\n- Catalog can be loaded from three different sources (manual list, the same instance as tenant, the remote instance).\n\n- Eliminates the need of advanced knowledge in cross-database queries.\n\n- The process can be terminated at any time, and it can be restarted later.\n\n\n\n#### Parameters\n\n\n\nName | Description | Type | Default\n\n--- | --- | --- | --- \n\nhost | The MySQL Instance IP/Identifier of Tenant Database/s (or all-with Catalog). | string | localhost\n\nuser | The MySQL Instance User of Tenant Databases (or all-with-Catalog). | string | root\n\npassword | The MySQL Instance Password of Tenant Databases (or all-with-Catalog). | string | Empty\n\nport | The MySQL Instance Port of Tenant Databases (or all-with-Catalog). | integer | 3306\n\noutput_dir |  Each tenant file will be stored here before the final merge. Consider it as a temporary database. | string | output_dir\n\ntenant_query | The SELECT query to be performed. | string | None\n\ntenant_query_source | The SELECT query to be performed from file. | string | None\n\ntenant_dbs | Databases given manually. If this is set then Catalog parameters will not be taken into consideration. | array | None\n\nskip_tenant_dbs | Tenant Databases to be skipped. | string | None\n\ncatalog_db | The Catalog Database. The Catalog Query will be executed here. | string | None\n\ncatalog_query | The Query to SELECT Tenants Database names. | string | None\n\ncatalog_host | The MySQL Instance IP/Identifier of Catalog.  | string | None\n\ncatalog_user | Catalog host User. | string | None\n\ncatalog_password | Catalog host Password | string | None\n\noutput_file_name | The name of the file which contains the final result. | string | output\n\nskip_processed_tenants | Tenant Databases to be skipped. | string | None\n\nfile_encoding | The File Encoding to be used in final CSV. | string | latin-1\n\nfile_headers | The Headers in final CSV file. | string | latin-1\n\ndebug | Debug the process on console. | boolean | False\n\n\n\n\n\n\n\n### How it works\n\nCollector runs a given query in each tenant database which is present in its {list}, this list is either given manually (filled with Database names) or fetched automatically by a given Catalog query.\n\nEach of these runs yields a result which is outputted into a CSV file in {output_dir}. At the end of this, all files are merged into a single one.\n\n\n\n### Simple usage\n\n\n\n```python\n\n\n\nimport gatherer\n\n\n\ngatherer.gather(host='localhost',\n\n                  user='root',\n\n                  password='',\n\n                  port=3306,\n\n                  tenant_query='SELECT my_column_1,my_column_2,my_column_3 FROM my_table;',\n\n                  skip_tenant_dbs=['My_Tenant1_DB', 'My_Tenant2_DB'],\n\n                  catalog_db='CATALOG_DB',\n\n                  catalog_query='SELECT my_tenant_database_name FROM my_tenants;',\n\n                  output_dir='temp_output'\n\n                  )\n\n\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,mysql,database,collector,gatherer,csv,multi-tenant",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gatherer",
    "package_url": "https://pypi.org/project/gatherer/",
    "platform": null,
    "project_url": "https://pypi.org/project/gatherer/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/gatherer/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Collects data from multiple MySQL Databases in a multi-tenant architecture",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14681007,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf4d71386c7ea2fd73a66289391dc152a4432e800b4e1c2d5ded74aad2831b22",
          "md5": "75c29cf2e12409918b80b5e4c9535902",
          "sha256": "b0d3b926bcf9f936fc7f88c3365f6e68c5f048e8e8eb87a36d09e749ae8f21de"
        },
        "downloads": -1,
        "filename": "gatherer-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75c29cf2e12409918b80b5e4c9535902",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5124,
        "upload_time": "2022-08-07T16:37:48",
        "upload_time_iso_8601": "2022-08-07T16:37:48.338619Z",
        "url": "https://files.pythonhosted.org/packages/bf/4d/71386c7ea2fd73a66289391dc152a4432e800b4e1c2d5ded74aad2831b22/gatherer-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "657c791e1a31a561693bb13fba1a263bbf3a929cbdd30da9ff96adbe01d0a616",
          "md5": "aade4381c43d1118b46efd86863f659a",
          "sha256": "0ca2fd2c952d6c6b34e84bd699da55707827ab3773a1136585f8a71ed038728b"
        },
        "downloads": -1,
        "filename": "gatherer-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aade4381c43d1118b46efd86863f659a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4405,
        "upload_time": "2022-08-07T16:37:50",
        "upload_time_iso_8601": "2022-08-07T16:37:50.196451Z",
        "url": "https://files.pythonhosted.org/packages/65/7c/791e1a31a561693bb13fba1a263bbf3a929cbdd30da9ff96adbe01d0a616/gatherer-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf4d71386c7ea2fd73a66289391dc152a4432e800b4e1c2d5ded74aad2831b22",
        "md5": "75c29cf2e12409918b80b5e4c9535902",
        "sha256": "b0d3b926bcf9f936fc7f88c3365f6e68c5f048e8e8eb87a36d09e749ae8f21de"
      },
      "downloads": -1,
      "filename": "gatherer-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "75c29cf2e12409918b80b5e4c9535902",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5124,
      "upload_time": "2022-08-07T16:37:48",
      "upload_time_iso_8601": "2022-08-07T16:37:48.338619Z",
      "url": "https://files.pythonhosted.org/packages/bf/4d/71386c7ea2fd73a66289391dc152a4432e800b4e1c2d5ded74aad2831b22/gatherer-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "657c791e1a31a561693bb13fba1a263bbf3a929cbdd30da9ff96adbe01d0a616",
        "md5": "aade4381c43d1118b46efd86863f659a",
        "sha256": "0ca2fd2c952d6c6b34e84bd699da55707827ab3773a1136585f8a71ed038728b"
      },
      "downloads": -1,
      "filename": "gatherer-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "aade4381c43d1118b46efd86863f659a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4405,
      "upload_time": "2022-08-07T16:37:50",
      "upload_time_iso_8601": "2022-08-07T16:37:50.196451Z",
      "url": "https://files.pythonhosted.org/packages/65/7c/791e1a31a561693bb13fba1a263bbf3a929cbdd30da9ff96adbe01d0a616/gatherer-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}