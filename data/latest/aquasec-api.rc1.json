{
  "info": {
    "author": "atav928",
    "author_email": "dev@tavnets.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# aquasec-api\n\nAqua Sec Cloud Secuirty API Tool used for interacting with Aqua Security CSPM Enterprise and Workload.\n\n## Documents\n\n* [CSPM API Docs](https://cloudsploit.docs.apiary.io/#)\n* [Aqua CSPM API Overview](https://support.aquasec.com/support/solutions/articles/16000129694-aqua-cspm-api-overview)\n* [Authenticte Enterprise CSPM](https://support.aquasec.com/support/solutions/articles/16000127855-how-to-authenticate-to-the-enterprise-api-in-the-cspm-platform)\n* [GitHub Repository](https://github.com/atav928/aquasec-api)\n\n## Installation\n\nInstall\n\n__Production Version:__\n\n```bash\npython -m pip install aquasec-api\n```\n\n__Testing Version:__\n\n```bash\npip install -i https://test.pypi.org/simple/ aquasec-api\n```\n\n## Configurations\n\nYou are able to directly interact with the SDK and pass the variables required to get the creadentials required. You can also have that handled inside of a configuration file or environment.\n\n1. Using system environment variables. Below is a sample.\n    __Required:__\n\n    ```bash\n    AQUA_WORKLOAD_API_KEY=\"workload key\"\n    AQUA_WORKLOAD_API_SECRET=\"workload secret\"\n    AQUA_CSPM_API_KEY=\"cspm key\"\n    AQUA_CSPM_API_SECRET=\"cspm secret\"\n    AQUA_API_VERSION\"='v2'\n    ```\n\n    __Optional:__\n\n    ```bash\n    AQUA_LOGNAME=\"aquasec.log\"\n    AQUA_LOGLOCATION=\"/tmp/logs/\"\n    AQUA_LOGSTREAM=true\n    AQUA_LOGGING=\"INFO\"\n    AQUA_SET_LOG=true\n    AQUA_CERT=false\n    ```\n\n1. Using a yaml configuration file located in _~/.config/.aquaconf_. If a YAML config is found that will override any env variables taking priority.\n\n    __Required:__\n\n    ```yaml\n    AQUA_WORKLOAD_API_KEY: \"workload key\"\n    AQUA_WORKLOAD_API_SECRET: \"workload secret\"\n    AQUA_CSPM_API_KEY: \"cspm key\"\n    AQUA_CSPM_API_SECRET: \"cspm secret\"\n    AQUA_API_VERSION: 'v2'\n    ```\n\n    __Optional:__\n\n    ```yaml\n    AQUA_CERT: true\n    AQUA_LOGGING: 'DEBUG'\n    AQUA_LOGNAME: 'aquas.log'\n    AQUA_LOGSTREAM: true\n    AQUA_SET_LOG: true\n    AQUA_LOGLOCATION: \"/tmp/logs/\"\n    ```\n\n## Usage\n\n### Workload Protection\n\nInorder to ensure it workload auth works please be sure to pass the correct paremters that are not set in the configurations. You will require to set variables:\n\n* allowed_endpoints: list\n  * Default: __[\"api_auditor\"]__\n* csp_roles: list\n  * Default: __[\"ANY\"]__\n\n```bash\n>>> from aquasec.api import API\n>>> api = API(csp_roles=[\"api_auditor\"], allowed_endpoints=[\"ANY\", \"GET\", \"POST\"])\nINFO    : Created WorkloadAuth Token for URL https://1234567890ab.cloud.aquasec.com\n>>> api.get.workload_protection(url_path='license')\nINFO    : Created Workload URL=https://1234567890ab.cloud.aquasec.com/api/v2/license\nDEBUG   : Response Code: 200| Full Response: {\"type\":\"Standard\",\"organization\":\"ACME Corp, Inc.\",\"account_id\":\"\",\"client_name\":\"user@ACME Corp, Inc.-2023-03-29-StandardS\",\"name\":\"\",\"email\":\"john.doe@acme.com\",\"num_agents\":0,\"num_microenforcers\":0,\"num_hostenforcers\":0,\"num_images\":0,\"num_functions\":10000,\"num_advanced_functions\":0,\"num_pas\":-1,\"num_code_repositories\":0,\"license_issue_date\":1641772800,\"license_exp_date\":1768003199,\"non_prod\":false,\"approved\":true,\"external_token\":\"\",\"strict\":false,\"level\":\"Advanced\",\"vpatch\":true,\"vpatch_coverage\":0,\"malware_protection\":true,\"tier\":\"\",\"agents_running\":0,\"images_scanned\":0,\"num_protected_kube_nodes\":0,\"resource_status\":{\"Enforcers\":\"valid\",\"Kubernetes cluster protection\":\"valid\",\"MicroEnforcers\":\"valid\",\"Repositories\":\"valid\",\"VM Enforcers\":\"valid\"}}\n```\n\n__Common Params:__\n\n```json\n{\n    \"page\": 1,\n    \"pagesize\": 1000\n}\n```\n\nI found treating page similar to _\"limit\"_ for a typical API call limiting the amount of responses and _\"pagesize\"_ is akin to _\"offset\"_. Responses typically look like this:\n\n```json\n{\n    \"count\": 8793,\n    \"page\": 1,\n    \"pagesize\": 9000,\n    \"result\": [\n        {\n            \"id\": \"9ad366ef-1494-44c1-9b1f-928bca02cf7d\",\n            \"name\": \"someserver.acme.com\",\n        }\n    ],\n    \"query\": {\n        \"identifiers_only\": false,\n        \"enforcer_type\": \"\",\n        \"status\": \"\",\n        \"cluster\": \"\",\n        \"image_name\": \"\",\n        \"image_id\": \"\",\n        \"server_id\": \"\",\n        \"kube_enforcer_id\": \"\",\n        \"batch_name\": \"\",\n        \"compliant\": \"\",\n        \"address\": \"\",\n        \"cve\": \"\",\n        \"config_file_name\": \"\",\n        \"scope\": \"\",\n        \"machine_ids\": null,\n        \"kube_enforcer_exists\": false,\n        \"ke_kube_bench_feature_flag\": false\n    },\n    \"more_data_all_pages\": 0,\n    \"is_estimated_count\": false\n}\n```\n\n__Common useful endpoints:__\n\n* Get all hosts (I increase the size based on my company count; you can build out a refresh to get everything until the count equals the amount of records returned)\n\n    ```bash\n    >> all_hosts = api.get.workload_protection(url_path='hosts', api_version='v1', params={'pagesize: 1000})\n    ```\n\n* Get CIS Benchmark Results\n\n    ```bash\n    >> cis_benchmark = api.get.workload_protection(url_path='risk/bench/{id}/bench_results)\n    ```\n\n* Get Kubernetes Resources\n\n    ```bash\n    >> kube_resources = api.get.workload_protection(url_path='kubernetesresources', params={'pagesize': 1000})\n    ```\n\n* Get Kubernetes Applications\n\n    ```bash\n    >> applications = api.get.workload_protection(endpoint='applications', api_version='v1')\n    ```\n\n* Get Containers\n\n    ```bash\n    >>> all_containers = api.get.workload_protection(url_path=\"containers\", api_version='v2', params={'pagesize': 3000})\n    ```\n\n## Release Info\n\n### v0.0.1\n\n* WorkloadAuth - usage to get auth token for workload tasks\n* API - used to run api calls against CSPM or Workload\n* Baseline version to interact with CSPM Enterprise and Workload\n* GET is built out to handle almost any api call you need. You just need to figure out the endpoint and pass the url path through the __workload_protection__ or __cspm__\n\n## Version\n\n| Version | Build | Changes |\n| ------- | ----- | ------- |\n| __0.0.1__ | __a1__ | Initial Alpha Release. Not working baseline for testing |\n| __0.0.1__ | __a2__ | built in decorartor and two methods of handling different request types |\n| __0.0.1__ | __a3__ | fixed manifest for package deployment |\n| __0.0.1__ | __a4__ | fixed requirements |\n| __0.0.1__ | __a5__ | removed pathlib from requirments |\n| __0.0.1__ | __rc1__| updated readme.md with instructions of usage |\n| __0.0.1__ | __rc2__ | issues with dataclasses module |\n| __0.0.1__ | __rc3__ | issues with dataclasses and requirements |\n| __0.0.1__ | __rc4__ | issues with dataclasses and requirements |\n| __0.0.1__ | __rc8__ | final release that solves how the auth works for CSPM and Workload Protection |\n\n__NOTE:__ Use at your own risk!!!! API as is and building on it.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/atav928/aquasec-api",
    "keywords": "aquasec",
    "license": "",
    "maintainer": "",
    "maintainer_email": "dev@tavnets.com",
    "name": "aquasec-api",
    "package_url": "https://pypi.org/project/aquasec-api/",
    "platform": null,
    "project_url": "https://pypi.org/project/aquasec-api/",
    "project_urls": {
      "Homepage": "https://github.com/atav928/aquasec-api"
    },
    "release_url": "https://pypi.org/project/aquasec-api/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17198120,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd20ebdca38a47a5dae0167ead32aea17b850fb8df603c1b1b20e30b9492a92e",
          "md5": "4d82d302cbe7286fe79332504803377d",
          "sha256": "ec95b3fea9f9886a8cf37520c792715388155d9c69bc057d10e11355697032e1"
        },
        "downloads": -1,
        "filename": "aquasec-api-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4d82d302cbe7286fe79332504803377d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27193,
        "upload_time": "2023-03-08T00:20:00",
        "upload_time_iso_8601": "2023-03-08T00:20:00.653533Z",
        "url": "https://files.pythonhosted.org/packages/cd/20/ebdca38a47a5dae0167ead32aea17b850fb8df603c1b1b20e30b9492a92e/aquasec-api-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd20ebdca38a47a5dae0167ead32aea17b850fb8df603c1b1b20e30b9492a92e",
        "md5": "4d82d302cbe7286fe79332504803377d",
        "sha256": "ec95b3fea9f9886a8cf37520c792715388155d9c69bc057d10e11355697032e1"
      },
      "downloads": -1,
      "filename": "aquasec-api-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4d82d302cbe7286fe79332504803377d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27193,
      "upload_time": "2023-03-08T00:20:00",
      "upload_time_iso_8601": "2023-03-08T00:20:00.653533Z",
      "url": "https://files.pythonhosted.org/packages/cd/20/ebdca38a47a5dae0167ead32aea17b850fb8df603c1b1b20e30b9492a92e/aquasec-api-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}