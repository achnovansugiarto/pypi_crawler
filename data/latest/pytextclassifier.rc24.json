{
  "info": {
    "author": "XuMing",
    "author_email": "xuming624@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/pytextclassifier.svg)](https://badge.fury.io/py/pytextclassifier)\n[![Downloads](https://pepy.tech/badge/pytextclassifier)](https://pepy.tech/project/pytextclassifier)\n[![Contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg)](CONTRIBUTING.md)\n[![GitHub contributors](https://img.shields.io/github/contributors/shibing624/pytextclassifier.svg)](https://github.com/shibing624/pytextclassifier/graphs/contributors)\n[![License Apache 2.0](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](LICENSE)\n[![python_vesion](https://img.shields.io/badge/Python-3.5%2B-green.svg)](requirements.txt)\n[![GitHub issues](https://img.shields.io/github/issues/shibing624/pytextclassifier.svg)](https://github.com/shibing624/pytextclassifier/issues)\n[![Wechat Group](http://vlog.sfyc.ltd/wechat_everyday/wxgroup_logo.png?imageView2/0/w/60/h/20)](#Contact)\n\n# PyTextClassifier\nPyTextClassifier, Python Text Classifier. It can be applied to the fields of sentiment polarity analysis, text risk classification and so on,\nand it supports multiple classification algorithms and clustering algorithms.\n\n文本分类器，提供多种文本分类和聚类算法，支持句子和文档级的文本分类任务，支持二分类、多分类、多标签分类、多层级分类和Kmeans聚类，开箱即用。python3开发。\n\n\n**Guide**\n\n- [Feature](#Feature)\n- [Install](#install)\n- [Usage](#usage)\n- [Dataset](#Dataset)\n- [Contact](#Contact)\n- [Citation](#Citation)\n- [Reference](#reference)\n\n# Feature\n\n**pytextclassifier** is a python Open Source Toolkit for text classification. The goal is to implement\ntext analysis algorithm, so as to achieve the use in the production environment.\n\n**pytextclassifier** has the characteristics\nof clear algorithm, high performance and customizable corpus.\n\nFunctions：\n### Classifier\n  - [x] LogisticRegression\n  - [x] Random Forest\n  - [x] Decision Tree\n  - [x] K-Nearest Neighbours\n  - [x] Naive bayes\n  - [x] Xgboost\n  - [x] Support Vector Machine(SVM)\n  - [x] TextCNN\n  - [x] TextRNN\n  - [x] Fasttext\n  - [x] BERT\n\n### Cluster\n  - [x] MiniBatchKmeans\n\nWhile providing rich functions, **pytextclassifier** internal modules adhere to low coupling, model adherence to inert loading, dictionary publication, and easy to use.\n\n# Install\n\n- Requirements and Installation\n\n```\npip3 install torch # conda install pytorch\npip3 install pytextclassifier\n```\n\nor\n\n```\ngit clone https://github.com/shibing624/pytextclassifier.git\ncd pytextclassifier\npython3 setup.py install\n```\n\n\n# Usage\n# Text Classifier\n\n## English Text Classifier\n\nIncluding model training, saving, predict, evaluate, for example [examples/lr_en_classification_demo.py](examples/lr_en_classification_demo.py):\n\n\n```python\nimport sys\n\nsys.path.append('..')\nfrom pytextclassifier import ClassicClassifier\n\nif __name__ == '__main__':\n    m = ClassicClassifier(model_dir='models/lr', model_name_or_model='lr')\n    # ClassicClassifier support model_name：lr, random_forest, decision_tree, knn, bayes, svm, xgboost\n    print(m)\n    data = [\n        ('education', 'Student debt to cost Britain billions within decades'),\n        ('education', 'Chinese education for TV experiment'),\n        ('sports', 'Middle East and Asia boost investment in top level sports'),\n        ('sports', 'Summit Series look launches HBO Canada sports doc series: Mudhar')\n    ]\n    # train and save best model\n    m.train(data)\n    # load best model from model_dir\n    m.load_model()\n    predict_label, predict_proba = m.predict([\n        'Abbott government spends $8 million on higher education media blitz'])\n    print(f'predict_label: {predict_label}, predict_proba: {predict_proba}')\n\n    test_data = [\n        ('education', 'Abbott government spends $8 million on higher education media blitz'),\n        ('sports', 'Middle East and Asia boost investment in top level sports'),\n    ]\n    acc_score = m.evaluate_model(test_data)\n    print(f'acc_score: {acc_score}')\n```\n\noutput:\n\n```\nClassicClassifier instance (LogisticRegression(fit_intercept=False), stopwords size: 2438)\npredict_label: ['education'], predict_proba: [0.5378236358492112]\nacc_score: 1.0\n```\n\n## Chinese Text Classifier(中文文本分类)\n\nText classification compatible with Chinese and English corpora.\n\nexample [examples/lr_classification_demo.py](examples/lr_classification_demo.py)\n\n```python\nimport sys\n\nsys.path.append('..')\nfrom pytextclassifier import ClassicClassifier\n\nif __name__ == '__main__':\n    m = ClassicClassifier(model_dir='models/lr-toy', model_name_or_model='lr')\n    # 经典分类方法，支持的模型包括：lr, random_forest, decision_tree, knn, bayes, svm, xgboost\n    data = [\n        ('education', '名师指导托福语法技巧：名词的复数形式'),\n        ('education', '中国高考成绩海外认可 是“狼来了”吗？'),\n        ('education', '公务员考虑越来越吃香，这是怎么回事？'),\n        ('sports', '图文：法网孟菲尔斯苦战进16强 孟菲尔斯怒吼'),\n        ('sports', '四川丹棱举行全国长距登山挑战赛 近万人参与'),\n        ('sports', '米兰客场8战不败国米10年连胜'),\n    ]\n    m.train(data)\n    print(m)\n    # load best model from model_dir\n    m.load_model()\n    predict_label, predict_proba = m.predict(['福建春季公务员考试报名18日截止 2月6日考试',\n                                              '意甲首轮补赛交战记录:米兰客场8战不败国米10年连胜'])\n    print(f'predict_label: {predict_label}, predict_proba: {predict_proba}')\n\n    test_data = [\n        ('education', '福建春季公务员考试报名18日截止 2月6日考试'),\n        ('sports', '意甲首轮补赛交战记录:米兰客场8战不败国米10年连胜'),\n    ]\n    acc_score = m.evaluate_model(test_data)\n    print(f'acc_score: {acc_score}')  # 1.0\n\n    #### train model with 1w data\n    print('-' * 42)\n    m = ClassicClassifier(model_dir='models/lr', model_name_or_model='lr')\n    data_file = 'thucnews_train_1w.txt'\n    m.train(data_file)\n    m.load_model()\n    predict_label, predict_proba = m.predict(\n        ['顺义北京苏活88平米起精装房在售',\n         '美EB-5项目“15日快速移民”将推迟'])\n    print(f'predict_label: {predict_label}, predict_proba: {predict_proba}')\n```\n\noutput:\n\n```\nClassicClassifier instance (LogisticRegression(fit_intercept=False), stopwords size: 2438)\npredict_label: ['education' 'sports'], predict_proba: [0.5, 0.598941806741534]\nacc_score: 1.0\n------------------------------------------\npredict_label: ['realty' 'education'], predict_proba: [0.7302956923617372, 0.2565005445322923]\n```\n\n## Visual Feature Importance\n\nShow feature weights of model, and prediction word weight, for example [examples/visual_feature_importance.ipynb](examples/visual_feature_importance.ipynb)\n```python\nimport sys\n\nsys.path.append('..')\nfrom pytextclassifier import ClassicClassifier\nimport jieba\n\ntc = ClassicClassifier(model_dir='models/lr-toy', model_name_or_model='lr')\ndata = [\n    ('education', '名师指导托福语法技巧：名词的复数形式'),\n    ('education', '中国高考成绩海外认可 是“狼来了”吗？'),\n    ('sports', '图文：法网孟菲尔斯苦战进16强 孟菲尔斯怒吼'),\n    ('sports', '四川丹棱举行全国长距登山挑战赛 近万人参与'),\n    ('sports', '米兰客场8战不败国米10年连胜')\n]\ntc.train(data)\nimport eli5\ninfer_data = ['高考指导托福语法技巧国际认可',\n              '意甲首轮补赛交战记录:米兰客场8战不败国米10年连胜']\neli5.show_weights(tc.model, vec=tc.feature)\nseg_infer_data = [' '.join(jieba.lcut(i)) for i in infer_data]\neli5.show_prediction(tc.model, seg_infer_data[0], vec=tc.feature,\n                     target_names=['education', 'sports'])\n```\n\noutput:\n\n![img.png](docs/img.png)\n\n## Deep Classification model\n\n本项目支持以下深度分类模型：FastText、TextCNN、TextRNN、Bert模型，`import`模型对应的方法来调用：\n```python\nfrom pytextclassifier import FastTextClassifier, TextCNNClassifier, TextRNNClassifier, BertClassifier\n```\n\n下面以FastText模型为示例，其他模型的使用方法类似。\n\n### FastText 模型\n\n训练和预测`FastText`模型示例[examples/fasttext_classification_demo.py](examples/fasttext_classification_demo.py)\n\n```python\nimport sys\n\nsys.path.append('..')\nfrom pytextclassifier import FastTextClassifier, load_data\n\nif __name__ == '__main__':\n    m = FastTextClassifier(model_dir='models/fasttext-toy')\n    data = [\n        ('education', '名师指导托福语法技巧：名词的复数形式'),\n        ('education', '中国高考成绩海外认可 是“狼来了”吗？'),\n        ('education', '公务员考虑越来越吃香，这是怎么回事？'),\n        ('sports', '图文：法网孟菲尔斯苦战进16强 孟菲尔斯怒吼'),\n        ('sports', '四川丹棱举行全国长距登山挑战赛 近万人参与'),\n        ('sports', '米兰客场8战不败保持连胜'),\n    ]\n    m.train(data, num_epochs=3)\n    print(m)\n    # load trained best model\n    m.load_model()\n    predict_label, predict_proba = m.predict(['福建春季公务员考试报名18日截止 2月6日考试',\n                                              '意甲首轮补赛交战记录:米兰客场8战不败国米10年连胜'])\n    print(f'predict_label: {predict_label}, predict_proba: {predict_proba}')\n    test_data = [\n        ('education', '福建春季公务员考试报名18日截止 2月6日考试'),\n        ('sports', '意甲首轮补赛交战记录:米兰客场8战不败国米10年连胜'),\n    ]\n    acc_score = m.evaluate_model(test_data)\n    print(f'acc_score: {acc_score}')  # 1.0\n\n    #### train model with 1w data\n    print('-' * 42)\n    data_file = 'thucnews_train_1w.txt'\n    m = FastTextClassifier(model_dir='models/fasttext')\n    m.train(data_file, names=('labels', 'text'), num_epochs=3)\n    # load best trained model from model_dir\n    m.load_model()\n    predict_label, predict_proba = m.predict(\n        ['顺义北京苏活88平米起精装房在售',\n         '美EB-5项目“15日快速移民”将推迟']\n    )\n    print(f'predict_label: {predict_label}, predict_proba: {predict_proba}')\n    x, y, df = load_data(data_file)\n    test_data = df[:100]\n    acc_score = m.evaluate_model(test_data)\n    print(f'acc_score: {acc_score}')\n```\n\n### BERT 类模型\n\n#### 多分类模型\n训练和预测`BERT`多分类模型，示例[examples/bert_classification_zh_demo.py](examples/bert_classification_zh_demo.py)\n\n```python\nimport sys\n\nsys.path.append('..')\nfrom pytextclassifier import BertClassifier\n\nif __name__ == '__main__':\n    m = BertClassifier(model_dir='models/bert-chinese-toy', num_classes=2,\n                       model_type='bert', model_name='bert-base-chinese', num_epochs=2)\n    # model_type: support 'bert', 'albert', 'roberta', 'xlnet'\n    # model_name: support 'bert-base-chinese', 'bert-base-cased', 'bert-base-multilingual-cased' ...\n    data = [\n        ('education', '名师指导托福语法技巧：名词的复数形式'),\n        ('education', '中国高考成绩海外认可 是“狼来了”吗？'),\n        ('education', '公务员考虑越来越吃香，这是怎么回事？'),\n        ('sports', '图文：法网孟菲尔斯苦战进16强 孟菲尔斯怒吼'),\n        ('sports', '四川丹棱举行全国长距登山挑战赛 近万人参与'),\n        ('sports', '米兰客场8战不败国米10年连胜'),\n    ]\n    m.train(data)\n    print(m)\n    # load trained best model from model_dir\n    m.load_model()\n    predict_label, predict_proba = m.predict(['福建春季公务员考试报名18日截止 2月6日考试',\n                                              '意甲首轮补赛交战记录:米兰客场8战不败国米10年连胜'])\n    print(f'predict_label: {predict_label}, predict_proba: {predict_proba}')\n\n    test_data = [\n        ('education', '福建春季公务员考试报名18日截止 2月6日考试'),\n        ('sports', '意甲首轮补赛交战记录:米兰客场8战不败国米10年连胜'),\n    ]\n    acc_score = m.evaluate_model(test_data)\n    print(f'acc_score: {acc_score}')\n    \n    # train model with 1w data file and 10 classes\n    print('-' * 42)\n    m = BertClassifier(model_dir='models/bert-chinese', num_classes=10,\n                       model_type='bert', model_name='bert-base-chinese', num_epochs=2,\n                       args={\"no_cache\": True, \"lazy_loading\": True, \"lazy_text_column\": 1, \"lazy_labels_column\": 0, })\n    data_file = 'thucnews_train_1w.txt'\n    # 如果训练数据超过百万条，建议使用lazy_loading模式，减少内存占用\n    m.train(data_file, test_size=0, names=('labels', 'text'))\n    m.load_model()\n    predict_label, predict_proba = m.predict(\n        ['顺义北京苏活88平米起精装房在售',\n         '美EB-5项目“15日快速移民”将推迟',\n         '恒生AH溢指收平 A股对H股折价1.95%'])\n    print(f'predict_label: {predict_label}, predict_proba: {predict_proba}')\n```\nPS：如果训练数据超过百万条，建议使用lazy_loading模式，减少内存占用\n\n#### 多标签分类模型\n分类可以分为多分类和多标签分类。多分类的标签是排他的，而多标签分类的所有标签是不排他的。\n\n多标签分类比较直观的理解是，一个样本可以同时拥有几个类别标签，\n比如一首歌的标签可以是流行、轻快，一部电影的标签可以是动作、喜剧、搞笑等，这都是多标签分类的情况。\n\n训练和预测`BERT`多标签分类模型，示例[examples/bert_multilabel_classification_zh_demo.py.py](https://github.com/shibing624/pytextclassifier/blob/master/examples/bert_multilabel_classification_zh_demo.py)\n\n\n```python\nimport sys\nimport pandas as pd\n\nsys.path.append('..')\nfrom pytextclassifier import BertClassifier\n\n\ndef load_jd_data(file_path):\n    \"\"\"\n    Load jd data from file.\n    @param file_path: \n        format: content,其他,互联互通,产品功耗,滑轮提手,声音,APP操控性,呼吸灯,外观,底座,制热范围,遥控器电池,味道,制热效果,衣物烘干,体积大小\n    @return: \n    \"\"\"\n    data = []\n    with open(file_path, 'r', encoding='utf-8') as f:\n        for line in f:\n            line = line.strip()\n            if line.startswith('#'):\n                continue\n            if not line:\n                continue\n            terms = line.split(',')\n            if len(terms) != 16:\n                continue\n            val = [int(i) for i in terms[1:]]\n            data.append([terms[0], val])\n    return data\n\n\nif __name__ == '__main__':\n    # model_type: support 'bert', 'albert', 'roberta', 'xlnet'\n    # model_name: support 'bert-base-chinese', 'bert-base-cased', 'bert-base-multilingual-cased' ...\n    m = BertClassifier(model_dir='models/multilabel-bert-zh-model', num_classes=15,\n                       model_type='bert', model_name='bert-base-chinese', num_epochs=2, multi_label=True)\n    # Train and Evaluation data needs to be in a Pandas Dataframe containing at least two columns, a 'text' and a 'labels' column. The `labels` column should contain multi-hot encoded lists.\n    train_data = [\n        [\"一个小时房间仍然没暖和\", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]],\n        [\"耗电情况：这个没有注意\", [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],\n    ]\n    data = load_jd_data('multilabel_jd_comments.csv')\n    train_data.extend(data)\n    print(train_data[:5])\n    train_df = pd.DataFrame(train_data, columns=[\"text\", \"labels\"])\n\n    print(train_df.head())\n    m.train(train_df)\n    print(m)\n    # Evaluate the model\n    acc_score = m.evaluate_model(train_df[:20])\n    print(f'acc_score: {acc_score}')\n\n    # load trained best model from model_dir\n    m.load_model()\n    predict_label, predict_proba = m.predict(['一个小时房间仍然没暖和', '耗电情况：这个没有注意'])\n    print(f'predict_label: {predict_label}, predict_proba: {predict_proba}')\n```\n\n## Evaluation\n\n### Dataset\n\n1. THUCNews中文文本数据集（1.56GB）：官方[下载地址](http://thuctc.thunlp.org/)，抽样了10万条THUCNews中文文本10分类数据集（6MB），地址：[examples/thucnews_train_10w.txt](examples/thucnews_train_10w.txt)。\n2. TNEWS今日头条中文新闻（短文本）分类 Short Text Classificaiton for News，该数据集(5.1MB)来自今日头条的新闻版块，共提取了15个类别的新闻，包括旅游，教育，金融，军事等，地址：[tnews_public.zip](https://storage.googleapis.com/cluebenchmark/tasks/tnews_public.zip)\n\n### Evaluation Result\n在THUCNews中文文本10分类数据集（6MB）上评估，模型在测试集(test)评测效果如下：\n\n模型|acc|说明\n--|--|--\nLR|0.8803|逻辑回归Logistics Regression\nTextCNN|0.8809|Kim 2014 经典的CNN文本分类\nTextRNN_Att|0.9022|BiLSTM+Attention\nFastText|0.9177|bow+bigram+trigram， 效果出奇的好\nDPCNN|0.9125|深层金字塔CNN\nTransformer|0.8991|效果较差\nBERT-base|**0.9483**|bert + fc\nERNIE|0.9461|比bert略差\n\n在中文新闻短文本分类数据集TNEWS上评估，模型在开发集(dev)评测效果如下：\n\n模型|acc|说明\n--|--|--\nBERT-base|**0.5660**|本项目实现\nBERT-base|0.5609|CLUE Benchmark Leaderboard结果 [CLUEbenchmark](https://github.com/CLUEbenchmark/CLUE)\n\n- 以上结果均为分类的准确率（accuracy）结果\n- THUCNews数据集评测结果可以基于`examples/thucnews_train_10w.txt`数据用`examples`下的各模型demo复现\n- TNEWS数据集评测结果可以下载TNEWS数据集，运行`examples/bert_classification_tnews_demo.py`复现\n\n### 模型调研\n\n提供分类模型快速调研工具，文件树：\n```bash\npytextclassifier\n├── bert_classifier.py\n├── fasttext_classifier.py\n├── classic_classifier.py\n├── textcnn_classifier.py\n└── textrnn_classifier.py\n```\n\n每个文件对应一个模型，各模型完全独立，可以直接运行，也方便修改，支持通过`argparse` 修改`--data_path`等参数。\n\n直接在终端调用fasttext模型训练：\n```bash\npython -m pytextclassifier.fasttext_classifier -h\n```\n\n## Text Cluster\n\n\nText clustering, for example [examples/cluster_demo.py](examples/cluster_demo.py)\n```python\nimport sys\n\nsys.path.append('..')\nfrom pytextclassifier.textcluster import TextCluster\n\nif __name__ == '__main__':\n    m = TextCluster(model_dir='models/cluster-toy', n_clusters=2)\n    print(m)\n    data = [\n        'Student debt to cost Britain billions within decades',\n        'Chinese education for TV experiment',\n        'Abbott government spends $8 million on higher education',\n        'Middle East and Asia boost investment in top level sports',\n        'Summit Series look launches HBO Canada sports doc series: Mudhar'\n    ]\n    m.train(data)\n    m.load_model()\n    r = m.predict(['Abbott government spends $8 million on higher education media blitz',\n                   'Middle East and Asia boost investment in top level sports'])\n    print(r)\n\n    ########### load chinese train data from 1w data file\n    from sklearn.feature_extraction.text import TfidfVectorizer\n\n    tcluster = TextCluster(model_dir='models/cluster', feature=TfidfVectorizer(ngram_range=(1, 2)), n_clusters=10)\n    data = tcluster.load_file_data('thucnews_train_1w.txt', sep='\\t', use_col=1)\n    feature, labels = tcluster.train(data[:5000])\n    tcluster.show_clusters(feature, labels, 'models/cluster/cluster_train_seg_samples.png')\n    r = tcluster.predict(data[:30])\n    print(r)\n```\n\noutput:\n\n```\nTextCluster instance (MiniBatchKMeans(n_clusters=2, n_init=10), <pytextclassifier.utils.tokenizer.Tokenizer object at 0x7f80bd4682b0>, TfidfVectorizer(ngram_range=(1, 2)))\n[1 1 1 1 1 1 1 1 1 1 1 8 1 1 1 1 1 1 1 1 1 1 9 1 1 8 1 1 9 1]\n```\nclustering plot image:\n\n![cluster_image](docs/cluster_train_seg_samples.png)\n\n\n# Contact\n\n- Issue(建议)：[![GitHub issues](https://img.shields.io/github/issues/shibing624/pytextclassifier.svg)](https://github.com/shibing624/pytextclassifier/issues)\n- 邮件我：xuming: xuming624@qq.com\n- 微信我：加我*微信号：xuming624*, 进Python-NLP交流群，备注：*姓名-公司名-NLP*\n<img src=\"docs/wechat.jpeg\" width=\"200\" />\n\n\n# Citation\n\n如果你在研究中使用了pytextclassifier，请按如下格式引用：\n\nAPA:\n```latex\nXu, M. Pytextclassifier: Text classifier toolkit for NLP (Version 1.2.0) [Computer software]. https://github.com/shibing624/pytextclassifier\n```\n\nBibTeX:\n```latex\n@misc{Pytextclassifier,\n  title={Pytextclassifier: Text classifier toolkit for NLP},\n  author={Xu Ming},\n  year={2022},\n  howpublished={\\url{https://github.com/shibing624/pytextclassifier}},\n}\n```\n\n\n# License\n\n\n授权协议为 [The Apache License 2.0](LICENSE)，可免费用做商业用途。请在产品说明中附加**pytextclassifier**的链接和授权协议。\n\n\n# Contribute\n项目代码还很粗糙，如果大家对代码有所改进，欢迎提交回本项目，在提交之前，注意以下两点：\n\n - 在`tests`添加相应的单元测试\n - 使用`python setup.py test`来运行所有单元测试，确保所有单测都是通过的\n\n之后即可提交PR。\n\n\n# Reference\n\n- SentimentPolarityAnalysis",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shibing624/pytextclassifier",
    "keywords": "pytextclassifier,textclassifier,classifier,textclassification",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytextclassifier",
    "package_url": "https://pypi.org/project/pytextclassifier/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytextclassifier/",
    "project_urls": {
      "Homepage": "https://github.com/shibing624/pytextclassifier"
    },
    "release_url": "https://pypi.org/project/pytextclassifier/1.3.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Text Classifier, Text Classification",
    "version": "1.3.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16400672,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4ea3cb5142a7a0e17e78530fce0a129afc081000cbd73bda58bbe0bc15d2030",
          "md5": "a7c0710458a7992a52c4f3871a2917a7",
          "sha256": "5f6708c955d5db86c49af56046b9eeb0960d67e90d33694f698360200253f5e9"
        },
        "downloads": -1,
        "filename": "pytextclassifier-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a7c0710458a7992a52c4f3871a2917a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17039,
        "upload_time": "2021-06-16T07:56:53",
        "upload_time_iso_8601": "2021-06-16T07:56:53.040469Z",
        "url": "https://files.pythonhosted.org/packages/b4/ea/3cb5142a7a0e17e78530fce0a129afc081000cbd73bda58bbe0bc15d2030/pytextclassifier-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "614e6416b714c840260d986bf41c59e41313e3147d641290ff5e3af9bec17e27",
          "md5": "8abea957944de82e05f87b1bb258eeef",
          "sha256": "f4ce7da7aa4596e9809fe915317c8e83d33664e4098a5796e7dac7f8e0977577"
        },
        "downloads": -1,
        "filename": "pytextclassifier-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8abea957944de82e05f87b1bb258eeef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 248332,
        "upload_time": "2021-06-16T14:47:34",
        "upload_time_iso_8601": "2021-06-16T14:47:34.256984Z",
        "url": "https://files.pythonhosted.org/packages/61/4e/6416b714c840260d986bf41c59e41313e3147d641290ff5e3af9bec17e27/pytextclassifier-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "072959defef18050e21f039684d192ef8c18a70797e1b38a3719eb4667daa2b1",
          "md5": "a4a15d28090a561ae39bb01fa1856fa2",
          "sha256": "81a5f780337f5b1d104c0f1fdfb5cef5af23845af8662292b2d29b6accf496d8"
        },
        "downloads": -1,
        "filename": "pytextclassifier-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a4a15d28090a561ae39bb01fa1856fa2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50252,
        "upload_time": "2021-06-17T08:18:35",
        "upload_time_iso_8601": "2021-06-17T08:18:35.182184Z",
        "url": "https://files.pythonhosted.org/packages/07/29/59defef18050e21f039684d192ef8c18a70797e1b38a3719eb4667daa2b1/pytextclassifier-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a780ed462f68e5a686787cfc16136ef99fffe08829a4db38e04717277c377cb1",
          "md5": "ba74b984c004bb60c8dc9b926f9956d6",
          "sha256": "3d9697048d8e316b8aaeabadfa430a1942c475fa5e65eea74af5618f7a2e5b7f"
        },
        "downloads": -1,
        "filename": "pytextclassifier-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ba74b984c004bb60c8dc9b926f9956d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33987,
        "upload_time": "2021-08-23T08:11:19",
        "upload_time_iso_8601": "2021-08-23T08:11:19.252744Z",
        "url": "https://files.pythonhosted.org/packages/a7/80/ed462f68e5a686787cfc16136ef99fffe08829a4db38e04717277c377cb1/pytextclassifier-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d17d822bb449bee4b8f6fa4366f29a88683a0577f54d30c734a7f707d147547",
          "md5": "8af3ce552a58234b8d4586844157b972",
          "sha256": "1425972f442f28797c2b0245822221034f3e918da5ebe8797e1b36b884fe807d"
        },
        "downloads": -1,
        "filename": "pytextclassifier-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8af3ce552a58234b8d4586844157b972",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38255,
        "upload_time": "2021-08-23T08:13:46",
        "upload_time_iso_8601": "2021-08-23T08:13:46.099681Z",
        "url": "https://files.pythonhosted.org/packages/2d/17/d822bb449bee4b8f6fa4366f29a88683a0577f54d30c734a7f707d147547/pytextclassifier-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f51e04828c5d36b7a8de261c92e6ec9176ddd271dc3bed91c3f2a0db3e23907",
          "md5": "49e4f3fcb400ffc675278145b60c06d4",
          "sha256": "1e9aecb0c2c01dca2f6a001b010c7e0126c12514a2d0f557809feb77746b0bb7"
        },
        "downloads": -1,
        "filename": "pytextclassifier-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "49e4f3fcb400ffc675278145b60c06d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38279,
        "upload_time": "2021-08-23T08:47:04",
        "upload_time_iso_8601": "2021-08-23T08:47:04.964684Z",
        "url": "https://files.pythonhosted.org/packages/8f/51/e04828c5d36b7a8de261c92e6ec9176ddd271dc3bed91c3f2a0db3e23907/pytextclassifier-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c812e8a3c6d358c91e003a22a98f11a8ba608b611620e9593773e2e3ecdcfb64",
          "md5": "6e7a690608200aa32658d68e079db9fa",
          "sha256": "328d90d3c24cae50373caee65cab7f53681c6033b2c34d6e28882fc6e7e13fc3"
        },
        "downloads": -1,
        "filename": "pytextclassifier-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6e7a690608200aa32658d68e079db9fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38270,
        "upload_time": "2021-08-26T02:50:42",
        "upload_time_iso_8601": "2021-08-26T02:50:42.882941Z",
        "url": "https://files.pythonhosted.org/packages/c8/12/e8a3c6d358c91e003a22a98f11a8ba608b611620e9593773e2e3ecdcfb64/pytextclassifier-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d085a45f3b0f29e24f02345e6dc23fca26f0fafb57fea7883c7160402a63ac15",
          "md5": "78ae0f6f10ce5b507f448e1e433ea959",
          "sha256": "8f92c951dfcdf0e9fe27ec5faece3b2a3a8f96ac7d9116026b0808e4793095b8"
        },
        "downloads": -1,
        "filename": "pytextclassifier-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "78ae0f6f10ce5b507f448e1e433ea959",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40979,
        "upload_time": "2021-09-04T08:42:40",
        "upload_time_iso_8601": "2021-09-04T08:42:40.989188Z",
        "url": "https://files.pythonhosted.org/packages/d0/85/a45f3b0f29e24f02345e6dc23fca26f0fafb57fea7883c7160402a63ac15/pytextclassifier-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0e5e5f708d257d121534ce7fbcdafc83cf186a018cb7c7cfe4c76926e4a188c",
          "md5": "d056f19b7a71d5f2f676379c3a02b633",
          "sha256": "7a35a8eab35c045aa091db4d296b117e1b4ba7714c216e9b788329a5a194c75d"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d056f19b7a71d5f2f676379c3a02b633",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3241685,
        "upload_time": "2021-10-01T09:58:59",
        "upload_time_iso_8601": "2021-10-01T09:58:59.936247Z",
        "url": "https://files.pythonhosted.org/packages/f0/e5/e5f708d257d121534ce7fbcdafc83cf186a018cb7c7cfe4c76926e4a188c/pytextclassifier-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4b9b8333ff8f7ac613574d9236cec3ba5a91bcbfdf3143e644e2df2e144f77e",
          "md5": "cbad8c84e3a72475da3b9296f4519ac5",
          "sha256": "3b1792ddb4d590dc873d9bf6fd95d941cae5a529a48d5e37a1a686653bb3bb47"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cbad8c84e3a72475da3b9296f4519ac5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3242470,
        "upload_time": "2021-10-06T12:26:10",
        "upload_time_iso_8601": "2021-10-06T12:26:10.154924Z",
        "url": "https://files.pythonhosted.org/packages/d4/b9/b8333ff8f7ac613574d9236cec3ba5a91bcbfdf3143e644e2df2e144f77e/pytextclassifier-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c44d19c5bc73ffc04eddf254717aeb3652b7b2ff26febcb74333ca12040ab9ae",
          "md5": "0f8a51fdf3179d1084142be7b94a86b0",
          "sha256": "d2a65b93a4a81c81a17b58395488f200bdcd6b3ceeed41b7fcda5819b15eed30"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0f8a51fdf3179d1084142be7b94a86b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3242460,
        "upload_time": "2021-10-08T08:16:07",
        "upload_time_iso_8601": "2021-10-08T08:16:07.238950Z",
        "url": "https://files.pythonhosted.org/packages/c4/4d/19c5bc73ffc04eddf254717aeb3652b7b2ff26febcb74333ca12040ab9ae/pytextclassifier-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eafa737aebafa8945e2bcf46c950d07bddd28c33c2666c8e0e453dd0942faa93",
          "md5": "bd96f2527d441cdb39fc4c7090b9a7aa",
          "sha256": "4b873765c1ccca54a81eb0e231e5dcec8113b9735c88049cfbd55af1974d34b0"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bd96f2527d441cdb39fc4c7090b9a7aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3242831,
        "upload_time": "2021-10-09T06:36:19",
        "upload_time_iso_8601": "2021-10-09T06:36:19.501159Z",
        "url": "https://files.pythonhosted.org/packages/ea/fa/737aebafa8945e2bcf46c950d07bddd28c33c2666c8e0e453dd0942faa93/pytextclassifier-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4e048d1e3bcd605c6301f03acb6bb1f8c569e3bfe17c0bedfd566daaf339187",
          "md5": "4152d156afbab69ef60459c76af2c117",
          "sha256": "5343b58d9049912c6d2007028a1661f30ee38c220791367333f4386d0956a8ca"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4152d156afbab69ef60459c76af2c117",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3242815,
        "upload_time": "2021-10-09T11:46:16",
        "upload_time_iso_8601": "2021-10-09T11:46:16.015305Z",
        "url": "https://files.pythonhosted.org/packages/f4/e0/48d1e3bcd605c6301f03acb6bb1f8c569e3bfe17c0bedfd566daaf339187/pytextclassifier-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7493ce19bbb7c5800f567b9458659f2a9a1fd37c6d1d3873a67647774bee3ec0",
          "md5": "06ec32d5392b966ba3fa4f7d218f8da4",
          "sha256": "ad2468a8555c20f324371d071ca0c96d915331093d57170a9983c1752e8da67d"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "06ec32d5392b966ba3fa4f7d218f8da4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3246099,
        "upload_time": "2021-10-26T07:30:01",
        "upload_time_iso_8601": "2021-10-26T07:30:01.170060Z",
        "url": "https://files.pythonhosted.org/packages/74/93/ce19bbb7c5800f567b9458659f2a9a1fd37c6d1d3873a67647774bee3ec0/pytextclassifier-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1de3ea7ca27ad67479ce0eddf07000dc3b7427a2c96fd31204f41cd814b0f054",
          "md5": "2ddfb8508290e6b7065e0daa5bcc3827",
          "sha256": "dddbf253a58fd091c540147aaa270b9f8b4c07ba8a6a3a80c2603c12749ecb8c"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2ddfb8508290e6b7065e0daa5bcc3827",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3246098,
        "upload_time": "2021-10-28T04:49:10",
        "upload_time_iso_8601": "2021-10-28T04:49:10.850006Z",
        "url": "https://files.pythonhosted.org/packages/1d/e3/ea7ca27ad67479ce0eddf07000dc3b7427a2c96fd31204f41cd814b0f054/pytextclassifier-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7b2cf1cffcc0c3eaf35f8930d8d9ab8576c0df223dbf9ea0a1b9003180f5977",
          "md5": "d0e3629d9fc5fe517f57918bc60787c1",
          "sha256": "a6445f68a18b0f04d162aaf0d9d1630b479929553404d00791ae75b64d8d1ade"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d0e3629d9fc5fe517f57918bc60787c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3246095,
        "upload_time": "2022-02-10T09:20:02",
        "upload_time_iso_8601": "2022-02-10T09:20:02.258735Z",
        "url": "https://files.pythonhosted.org/packages/b7/b2/cf1cffcc0c3eaf35f8930d8d9ab8576c0df223dbf9ea0a1b9003180f5977/pytextclassifier-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c75b0f2de9a1166a4a6e2d4d571add5c3862b07115806db8f806649077bc474",
          "md5": "53875ce9809b1f7d71a3035a450859b2",
          "sha256": "1f93771ad4cc6899eff8a4b70d3a623e59462bb2d38a7fca8ecd5eefb8ca855d"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "53875ce9809b1f7d71a3035a450859b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3246569,
        "upload_time": "2022-03-29T07:44:49",
        "upload_time_iso_8601": "2022-03-29T07:44:49.247884Z",
        "url": "https://files.pythonhosted.org/packages/5c/75/b0f2de9a1166a4a6e2d4d571add5c3862b07115806db8f806649077bc474/pytextclassifier-1.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fee1f151c8c070445fdfb0f8df5c2fa3d7390f3d0a7607909bedc73af2e4b4bd",
          "md5": "ede80add688bd88ff028eec11364f373",
          "sha256": "02b61d5b8fb0c8c242350857d6b96790f28c3b6ac6fee65efbd8ecb22fca24c7"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ede80add688bd88ff028eec11364f373",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 363145,
        "upload_time": "2022-03-29T08:01:10",
        "upload_time_iso_8601": "2022-03-29T08:01:10.250992Z",
        "url": "https://files.pythonhosted.org/packages/fe/e1/f151c8c070445fdfb0f8df5c2fa3d7390f3d0a7607909bedc73af2e4b4bd/pytextclassifier-1.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a65a90ae21868d6426d2bca4994014396a08b81fd154f8916d439d6702208c2f",
          "md5": "b7519dd78caa55ee9fbb056f04403323",
          "sha256": "59830cf9c49da87edc95c20acbff6a5447c10510b4974b6d89cc378cd96029d2"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b7519dd78caa55ee9fbb056f04403323",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 367497,
        "upload_time": "2022-04-12T09:41:17",
        "upload_time_iso_8601": "2022-04-12T09:41:17.024012Z",
        "url": "https://files.pythonhosted.org/packages/a6/5a/90ae21868d6426d2bca4994014396a08b81fd154f8916d439d6702208c2f/pytextclassifier-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c92bb44f59d16587e3f29c39439ab8d1706dc27ef5ab176c9fae7107ef5bd8a0",
          "md5": "3a78efb24b5bd92a67698d62756485ef",
          "sha256": "781956ba8f67178933a91782dc6fd6edc1054a805d74dc8e147f5e03d8dd55a2"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3a78efb24b5bd92a67698d62756485ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 391503,
        "upload_time": "2022-09-16T12:34:10",
        "upload_time_iso_8601": "2022-09-16T12:34:10.714518Z",
        "url": "https://files.pythonhosted.org/packages/c9/2b/b44f59d16587e3f29c39439ab8d1706dc27ef5ab176c9fae7107ef5bd8a0/pytextclassifier-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64cc219ea492b3f56e5614ad0f50b129a365cada70475e0aea8dfeee49c32d8c",
          "md5": "0e939f255b23861b1bf56619d0532ab3",
          "sha256": "6f1217f44594c38084be36ac9cc63a5f5643da41a67334e7e5ea1013718aa055"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e939f255b23861b1bf56619d0532ab3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 391514,
        "upload_time": "2022-09-16T12:35:31",
        "upload_time_iso_8601": "2022-09-16T12:35:31.875686Z",
        "url": "https://files.pythonhosted.org/packages/64/cc/219ea492b3f56e5614ad0f50b129a365cada70475e0aea8dfeee49c32d8c/pytextclassifier-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e03554106e025ba847de41e9883ffa0c6ba147248822b4fdb433a10edc8f5dfd",
          "md5": "4586209ad7d06a11a35128265716970d",
          "sha256": "68aee6d6c46d9e6843f12d18506a32c55c9278de3396d0a789ef11684ee44855"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4586209ad7d06a11a35128265716970d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 399706,
        "upload_time": "2022-10-21T08:08:52",
        "upload_time_iso_8601": "2022-10-21T08:08:52.264852Z",
        "url": "https://files.pythonhosted.org/packages/e0/35/54106e025ba847de41e9883ffa0c6ba147248822b4fdb433a10edc8f5dfd/pytextclassifier-1.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0f54d3dec16c292831612b37d3e42632dd45e13f668528ec89981f5878bc091",
          "md5": "6af59999d4008edb06df4e14f200ef85",
          "sha256": "05d9486b6ca9ad0a0e2e4ef7e3a67f4434486fa4bebd8cc34123f136b76c103e"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6af59999d4008edb06df4e14f200ef85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 399844,
        "upload_time": "2022-12-13T06:37:55",
        "upload_time_iso_8601": "2022-12-13T06:37:55.447423Z",
        "url": "https://files.pythonhosted.org/packages/f0/f5/4d3dec16c292831612b37d3e42632dd45e13f668528ec89981f5878bc091/pytextclassifier-1.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9c63969b93fcebe9049b777c300335ddafd0ff629d796ef7813ea0e80358df0",
          "md5": "53568e4143bffb07d059c18182bd3627",
          "sha256": "7d7755d35d71135b9d38f8254df841ddea2d1bffee95fcb00d2b664e4caccacb"
        },
        "downloads": -1,
        "filename": "pytextclassifier-1.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "53568e4143bffb07d059c18182bd3627",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 401232,
        "upload_time": "2023-01-12T08:02:19",
        "upload_time_iso_8601": "2023-01-12T08:02:19.363108Z",
        "url": "https://files.pythonhosted.org/packages/d9/c6/3969b93fcebe9049b777c300335ddafd0ff629d796ef7813ea0e80358df0/pytextclassifier-1.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d9c63969b93fcebe9049b777c300335ddafd0ff629d796ef7813ea0e80358df0",
        "md5": "53568e4143bffb07d059c18182bd3627",
        "sha256": "7d7755d35d71135b9d38f8254df841ddea2d1bffee95fcb00d2b664e4caccacb"
      },
      "downloads": -1,
      "filename": "pytextclassifier-1.3.4.tar.gz",
      "has_sig": false,
      "md5_digest": "53568e4143bffb07d059c18182bd3627",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 401232,
      "upload_time": "2023-01-12T08:02:19",
      "upload_time_iso_8601": "2023-01-12T08:02:19.363108Z",
      "url": "https://files.pythonhosted.org/packages/d9/c6/3969b93fcebe9049b777c300335ddafd0ff629d796ef7813ea0e80358df0/pytextclassifier-1.3.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}