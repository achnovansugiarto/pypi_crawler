{
  "info": {
    "author": "batmanscode",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Welcome to MatchDB\n================\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->\n\n*This is a light wrapper around deta.space’s serverless database, Base.*\n\n**MatchDB is a database of people and their interests. Use it to manage\nprofiles and connect people who share interests.**\n\nThe main motivation was to help to connect people in large Slack/Discord\nservers in the remote working community.\n\n## Install\n\n``` sh\npip install matchdb\n```\n\n``` sh\n# to get the latest version\npip install git+https://github.com/batmanscode/MatchDB.git\n```\n\n``` sh\n# install from source\ngit clone https://github.com/batmanscode/MatchDB.git\n```\n\n## How to use\n\n**Here’s a brief quickstart guide. Please read the [complete\ndocumentation](https://batmanscode.github.io/MatchDB/pymatch.html) to\nsee everything you can do!**\n\nFirst, let’s create a new project on deta.space and save your project\nkey to the environment variable `\"DETA_PROJECT_KEY\"`\n\nI’ve already created an environment variable but you can add it like\nthis if you haven’t:\n\n``` python\n# import os\n\n# os.environ[\"DETA_PROJECT_KEY\"] = \"...\"\n```\n\n``` python\nfrom matchdb.matchdb import *\n```\n\nNext, create a name for your database. This will be visible in your\nproject on deta.space.\n\nI’ll define it globally here since I’ll be using just one database but\nyou can create as many as you like!\n\n``` python\nDATABASE = \"users\"\n```\n\n### Adding users\n\nLet’s add two users\n\n``` python\nadd_interests(user_id=1111,\n              group_id=2222,\n              interests=['MMA', 'memes', 'Uk', 'tea'],\n              database_name=DATABASE\n             )\n```\n\n``` python\nfind_user(1111, DATABASE)\n```\n\n    [{'date': '14-02-2023 06:00',\n      'group_id': 2222,\n      'interests': ['uk', 'memes', 'tea', 'mma'],\n      'key': '01GS7ASNBN7BMKCFPTCV45VWBT',\n      'user_id': 1111}]\n\n``` python\nadd_interests(user_id=3333,\n              group_id=2222,\n              interests=['anime', 'memes', 'ireland', 'coffee'],\n              database_name=DATABASE\n             )\n```\n\n``` python\nfind_user(3333, DATABASE)\n```\n\n    [{'date': '14-02-2023 06:00',\n      'group_id': 2222,\n      'interests': ['ireland', 'anime', 'memes', 'coffee'],\n      'key': '01GS7ASNGBHHPK4YMBEHN1REEZ',\n      'user_id': 3333}]\n\n### Match\n\n``` python\nmatch_list = match_interests(1111, DATABASE)\n```\n\nThis will show evreyone who has common interests with useer `1111`,\nincluding themselves!\n\n``` python\nmatch_list\n```\n\n    [{'group_id': 2222,\n      'user_id': 1111,\n      'common interests': ['uk', 'memes', 'tea', 'mma'],\n      'common interests count': 4},\n     {'group_id': 2222,\n      'user_id': 3333,\n      'common interests': ['memes'],\n      'common interests count': 1}]\n\nYou can exclude the user you are finding matches for like this:\n\n``` python\nuser = 1111\n\nmatch_list = match_interests(1111, DATABASE)\n```\n\n``` python\n# for other ways to do this see here:\n# https://www.geeksforgeeks.org/python-removing-dictionary-from-list-of-dictionaries/\nmatch_list = [item for item in match_list if not (item[\"user_id\"]==user)]\n```\n\n``` python\nmatch_list\n```\n\n    [{'group_id': 2222,\n      'user_id': 3333,\n      'common interests': ['memes'],\n      'common interests count': 1}]\n\n### Get your whole database\n\n``` python\ndatabase_to_dataframe(DATABASE)\n```\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>date</th>\n      <th>group_id</th>\n      <th>interests</th>\n      <th>key</th>\n      <th>user_id</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>14-02-2023 06:00</td>\n      <td>2222</td>\n      <td>[uk, memes, tea, mma]</td>\n      <td>01GS7ASNBN7BMKCFPTCV45VWBT</td>\n      <td>1111</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>14-02-2023 06:00</td>\n      <td>2222</td>\n      <td>[ireland, anime, memes, coffee]</td>\n      <td>01GS7ASNGBHHPK4YMBEHN1REEZ</td>\n      <td>3333</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n### Count unique interests\n\n``` python\ninterestcount_to_dataframe(DATABASE)\n```\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>interests</th>\n      <th>count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>memes</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ireland</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>anime</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>tea</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>coffee</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>uk</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>mma</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n## How to contribute\n\n1.  Fork\n2.  Install (more on this below)\n3.  Make changes in `./notebooks`\n\nIn the terminal:\n\n4.  [`nbdev_preview`](https://nbdev.fast.ai/tutorials/tutorial.html#preview-your-docs)\n    to preview docs\n5.  [`nbdev_prepare`](https://nbdev.fast.ai/tutorials/tutorial.html#prepare-your-changes)\n    (very important)\n\nAnd finally:\n\n6.  Pull request!\n\nPlease go though [nbdev](https://nbdev.fast.ai/) docs. Their [end-to-end\ntutorial](https://nbdev.fast.ai/tutorials/tutorial.html) will show you\nmost of what you need to know.\n\n### Installing for development\n\n#### Codespaces/VSCode\n\nEverything you need will be installed when you open Codespaces/VSCode;\nspecified in `.devcontainer/`\n\nNotes for Codespaces:\n\n- Currently Jupyter notebook doesn’t work on Codespaces for an unknown\n  reason, or at least I can’t, so you’ll have to use JupyterLab\n- Open with\n  `jupyter lab --NotebookApp.allow_origin='*' --NotebookApp.ip='0.0.0.0'`\n- For more info on using see\n  https://code.visualstudio.com/docs/datascience/notebooks-web\n\n#### Local\n\nYou’ll need to install Jupyter and\n[nbdev](https://nbdev.fast.ai/tutorials/tutorial.html) at minimum. You\ncan do that with the following terminal commands:\n\n``` sh\npip install notebook\npip install nbdev\nnbdev_install_quarto\nnbdev_install_hooks\n```\n\nFor convenience, you can install all these and optional Jupyter\nextensions with:\n\n``` sh\ncd MatchDB\nbash ./.devcontainer/postCreateCommand.sh\n```\n\nThen install MatchDB in editable mode with\n`pip install MatchDB/requirements.txt`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/batmanscode/MatchDB",
    "keywords": "nbdev jupyter notebook python",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matchdb",
    "package_url": "https://pypi.org/project/matchdb/",
    "platform": null,
    "project_url": "https://pypi.org/project/matchdb/",
    "project_urls": {
      "Homepage": "https://github.com/batmanscode/MatchDB"
    },
    "release_url": "https://pypi.org/project/matchdb/0.1.0/",
    "requires_dist": [
      "deta (==1.1.0)",
      "pandas (==1.2.5)",
      "ulid-py (==1.1.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Suggesting people to connect with based on shared interests",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16853777,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "450b6fee93ed8051f132591e7d87111603d407dd51f0cf3e813ca08bdf8805d1",
          "md5": "58b49be8e8d59565c6bf6da9fa35368c",
          "sha256": "10f30a8517de3f731fc18ff939f238adf33541b1b47ad78eae3275febd1834e3"
        },
        "downloads": -1,
        "filename": "matchdb-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58b49be8e8d59565c6bf6da9fa35368c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11916,
        "upload_time": "2023-01-22T07:24:58",
        "upload_time_iso_8601": "2023-01-22T07:24:58.104716Z",
        "url": "https://files.pythonhosted.org/packages/45/0b/6fee93ed8051f132591e7d87111603d407dd51f0cf3e813ca08bdf8805d1/matchdb-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02c909a58ef1e9324eb9fe453d22b5ebb83fae15b9fc04ffaffaa6bbdf0e63bf",
          "md5": "e356ac7b28fc80b8e1b4c83eb9b65cd1",
          "sha256": "be69c60c71eabf324bb096e4631860c87841f2407877cd8cbbc77faac62a85d9"
        },
        "downloads": -1,
        "filename": "matchdb-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e356ac7b28fc80b8e1b4c83eb9b65cd1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9832,
        "upload_time": "2023-01-22T07:25:00",
        "upload_time_iso_8601": "2023-01-22T07:25:00.131638Z",
        "url": "https://files.pythonhosted.org/packages/02/c9/09a58ef1e9324eb9fe453d22b5ebb83fae15b9fc04ffaffaa6bbdf0e63bf/matchdb-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0821dc30cc88ecba87666ea6d7b1a14e8e78b858995b4765fffc19c6db5983a8",
          "md5": "91c08d8a1b873e7c6551fa8177b6e165",
          "sha256": "b41773a1c705a531b6b42cf90dff0c5d24cb81a85c97f039a6dcc25dfc8380f1"
        },
        "downloads": -1,
        "filename": "matchdb-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91c08d8a1b873e7c6551fa8177b6e165",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11490,
        "upload_time": "2023-02-14T09:41:18",
        "upload_time_iso_8601": "2023-02-14T09:41:18.318738Z",
        "url": "https://files.pythonhosted.org/packages/08/21/dc30cc88ecba87666ea6d7b1a14e8e78b858995b4765fffc19c6db5983a8/matchdb-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d869dc6aa0c8959e108f027e89c42f92abf44877b69b226e0fb2844ee4c65c9a",
          "md5": "c6858877e6333ac20364f98ea39d8e82",
          "sha256": "e3f37ef75c4593cb0faa7a1cdb0a0f3aa914d81243d2b32871b5264166644f62"
        },
        "downloads": -1,
        "filename": "matchdb-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c6858877e6333ac20364f98ea39d8e82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14454,
        "upload_time": "2023-02-14T09:41:19",
        "upload_time_iso_8601": "2023-02-14T09:41:19.835453Z",
        "url": "https://files.pythonhosted.org/packages/d8/69/dc6aa0c8959e108f027e89c42f92abf44877b69b226e0fb2844ee4c65c9a/matchdb-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0821dc30cc88ecba87666ea6d7b1a14e8e78b858995b4765fffc19c6db5983a8",
        "md5": "91c08d8a1b873e7c6551fa8177b6e165",
        "sha256": "b41773a1c705a531b6b42cf90dff0c5d24cb81a85c97f039a6dcc25dfc8380f1"
      },
      "downloads": -1,
      "filename": "matchdb-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "91c08d8a1b873e7c6551fa8177b6e165",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11490,
      "upload_time": "2023-02-14T09:41:18",
      "upload_time_iso_8601": "2023-02-14T09:41:18.318738Z",
      "url": "https://files.pythonhosted.org/packages/08/21/dc30cc88ecba87666ea6d7b1a14e8e78b858995b4765fffc19c6db5983a8/matchdb-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d869dc6aa0c8959e108f027e89c42f92abf44877b69b226e0fb2844ee4c65c9a",
        "md5": "c6858877e6333ac20364f98ea39d8e82",
        "sha256": "e3f37ef75c4593cb0faa7a1cdb0a0f3aa914d81243d2b32871b5264166644f62"
      },
      "downloads": -1,
      "filename": "matchdb-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c6858877e6333ac20364f98ea39d8e82",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 14454,
      "upload_time": "2023-02-14T09:41:19",
      "upload_time_iso_8601": "2023-02-14T09:41:19.835453Z",
      "url": "https://files.pythonhosted.org/packages/d8/69/dc6aa0c8959e108f027e89c42f92abf44877b69b226e0fb2844ee4c65c9a/matchdb-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}