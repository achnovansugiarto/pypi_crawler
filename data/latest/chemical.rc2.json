{
  "info": {
    "author": "http://github.com/Pebaz",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Chemical\n\nRust-Style Iterators in Python!\n\n> Compose iterator sequences like chemical compounds!\n\n## Quickstart\n\n```python\n>>> from chemical import it\n\n>>> my_iter = it([1, 2, 3])\n>>> my_iter.next()\n1\n>>> my_iter.next()\n2\n>>> my_iter.next()\n3\n\n>>> it('abc').map(lambda x: x.upper()).collect(str)\n'ABC'\n\n>>> it('abc').inspect(print).go()\na\nb\nc\n\n>>> for num in it(range(100)).skip(10).take(10).rev().step_by(4):\n...     print(num)\n19\n15\n11\n\n>>> # Same as above but written as an expression:\n>>> it(range(100)).skip(10).take(10).rev().step_by(4).for_each(print).go()\n19\n15\n11\n\n>>> # Large Chemical compositions can span multiple lines using parentheses:\n>>> (it(range(100)\n...      .skip(10)\n...      .take(10)\n...      .rev()\n...      .step_by(4)\n...      .for_each(print)\n...      .go()\n... )\n19\n15\n11\n```\n\n## About\n\nChemical takes heavy inspiration from the iterators that can be found in the\n[Rust Programming Language](https://www.rust-lang.org/). Chemical provides\ncomposable, customizable, and powerful iterators that can be combined, chained,\naggregated, and so much more.\n\nAlthough Python has very powerful iterators already, Chemical provides a way to\nprogramatically compose them to create highly compact but comprehendible\nbehaviors.\n\nYou can even add your own \"traits\" to the `it` class at runtime and they will be\navailable for use anywhere in your program! This allows you to create custom\nfunctionality without having to use your own type derived from `it`.\n\n## Installation\n\n```bash\n$ pip install chemical\n```\n\n> Chemical has been tested on:\n> * Windows\n> * MacOS\n> * Linux\n> * Python 3.6\n> * Python 3.7\n> * Python 3.8\n\nTo run the unit tests:\n\n```bash\n$ git clone https://github.com/Pebaz/Chemical\n$ cd Chemical\n$ pip install -r requirements.txt\n$ pytest\n```\n\n## Documentation\n\nYou can view the generated documentation\n[here](https://pebaz.github.io/Chemical/index.html).\n\nYou can also look at the source code for more insight on how you can extend `it`\nto have more iterators and aggregators specific to your own application.\n\nThe unit tests also provide an abundant amount of examples as they cover every\niterator/aggregator in Chemical.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/Pebaz/Chemical",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chemical",
    "package_url": "https://pypi.org/project/chemical/",
    "platform": "",
    "project_url": "https://pypi.org/project/chemical/",
    "project_urls": {
      "Homepage": "http://github.com/Pebaz/Chemical"
    },
    "release_url": "https://pypi.org/project/chemical/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "Rust-style iterators for Python!",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7523904,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81967a31da4ae9d2a970594f535a11a17a254c3f03907bc2bb54e03dd5924e7b",
          "md5": "d6b78b71e3216a4c97668b2b63a10bf9",
          "sha256": "66bb6db7c2786dcc685bc8954419afdaede4cddad0171aa9d8bda81bb0fce246"
        },
        "downloads": -1,
        "filename": "chemical-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d6b78b71e3216a4c97668b2b63a10bf9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 11359,
        "upload_time": "2020-05-26T18:07:03",
        "upload_time_iso_8601": "2020-05-26T18:07:03.399468Z",
        "url": "https://files.pythonhosted.org/packages/81/96/7a31da4ae9d2a970594f535a11a17a254c3f03907bc2bb54e03dd5924e7b/chemical-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ff36f678ae297bfe30cf4433ae56551e6605e83b471631c45ff0a180459b27d",
          "md5": "d5b7abda0706ffc23e3a416448c58d1d",
          "sha256": "add70a5dbb3b28d7c88bba7d468ced7b07b3461ece351cfbce19fa033042536f"
        },
        "downloads": -1,
        "filename": "chemical-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d5b7abda0706ffc23e3a416448c58d1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 11621,
        "upload_time": "2020-06-20T19:31:21",
        "upload_time_iso_8601": "2020-06-20T19:31:21.461368Z",
        "url": "https://files.pythonhosted.org/packages/4f/f3/6f678ae297bfe30cf4433ae56551e6605e83b471631c45ff0a180459b27d/chemical-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4ff36f678ae297bfe30cf4433ae56551e6605e83b471631c45ff0a180459b27d",
        "md5": "d5b7abda0706ffc23e3a416448c58d1d",
        "sha256": "add70a5dbb3b28d7c88bba7d468ced7b07b3461ece351cfbce19fa033042536f"
      },
      "downloads": -1,
      "filename": "chemical-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d5b7abda0706ffc23e3a416448c58d1d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 11621,
      "upload_time": "2020-06-20T19:31:21",
      "upload_time_iso_8601": "2020-06-20T19:31:21.461368Z",
      "url": "https://files.pythonhosted.org/packages/4f/f3/6f678ae297bfe30cf4433ae56551e6605e83b471631c45ff0a180459b27d/chemical-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}