{
  "info": {
    "author": "Yaroslav Polyakov",
    "author_email": "yaroslaff@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# startme\nstartme is systemd/cron alternative for python virtualenv \n\n## Problem and solution\nYou have your application. You have also optional component (e.g. telegram bot) which is used only on some of installations. Also, recently you developed other component (e.g. cleanup tool which deletes outdated records from db) which you plan to install on every instance. And maybe many other components which must be started either on boot or periodically.\n\nYou may install each module with pip, but afer this you need to activate it: edit systemd .service file and install it (or, for cron jobs, you need to manually add cron job). This makes module installation more complex, long and vulnerable to mistakes.\n\nWith startme it is much easier - you should just install module (pip install ...) and on next restart startme will load all modules and will execute it as planned.\n\n## Usage\n~~~\n# create virtualenv\npipenv shell\n\n# install startme\npipenv install startme\n\n# Now lets run it. Finished immediately. Not very impressive.\n(x) xenon@braconnier:/tmp/x$ startme \nstartme started\n(x) xenon@braconnier:/tmp/x$ \n\n# Now install example plugin\npipenv install startme-examples\n\n# run again...\n(x) xenon@braconnier:/tmp/x$ startme \nStartMeExampleBoot started\nstartme started\n00:20:25 Ticker tick 10\n00:20:35 Ticker tick 10\n00:20:45 Ticker tick 10\n00:20:55 Ticker tick 10\n00:21:05 Ticker tick 10\n00:21:15 Ticker1min tick 60\n00:21:15 Ticker tick 10\n00:21:25 Ticker tick 10\n~~~\n\n[startme-examples](https://github.com/yaroslaff/startme-examples) has three very simple classes, inherited from `StartMe`. `StartMeExampleBoot` - wants to be executed once on start. `Ticker` wants to be executed every 10 seconds and `Ticker1min` wants to be executed every 1 minute. \n\nAll `StartMe` subclasses are automatically detected, loaded and executed. No need for systemd or cron inside virtualenv. If `startme` installed as systemd unit, example code will be started on restart automatically, no need for any installation except `pip3 install startme-examples`. **Magic!**\n\nYou may have dozens of modules in requirements for your package, pip will install it automatically, and startme will start it automatically when startme itself starts from systemd. No matter how complex is your application, installation is one `pip3 install ...` command!\n\n## Advanced usage\nStartme uses interruptable [lightsleep](https://github.com/yaroslaff/lightsleep) so you can trigger immediate execution of cron tasks.\n\n~~~\n# Session 1, start startme\n$ startme --hook redis\n...\n\n# Session 2, redis-cli\n$ redis-cli publish sleep Ticker1min\n$ redis-cli publish sleep Ticker1min\n$ redis-cli publish sleep Ticker1min\n\n# Session 1 again, Ticker1min triggered\n00:06:28 Ticker1min tick 60\n00:06:28 Ticker1min tick 60\n00:06:28 Ticker1min tick 60\n~~~\n\n## Install\n\n`pip3 install startme` or `pipenv install startme` or `pip3 install git+https://github.com/yaroslaff/startme`.\n\n### Add to systemd\nUse your project name instead of `test`:\n\n~~~\nstartme --systemd test | sudo tee /etc/systemd/system/startme-test.service\nsudo systemctl daemon-reload \nsudo systemctl enable startme-test.service\nsudo systemctl start startme-test.service\n~~~\n\nYou may add lightsleep hook parametes to environment file `/etc/default/startme-test`:\n~~~\nSTARTME_HOOK=redis\n~~~\n\n## How to write startme modules\n\nStartme workis very simple: It loads all submodules of `startme.mods` (e.g. `startme.mods.yourmodule`), detects all children of `StartMe` class and creates one instance of each class. \n\n### Methods\nThere are thee important methods of any class inhereted from StartMe:\n\n#### on_start()\n`on_start()` executed once, when startme starts. This method should return in short time. So, if you want to start something long-running, you should start new thread or process,\n\n#### reschedule()\n`reschedule()` must return unixtime (e.g. `return time.time() + 60`) when startme should call `on_schedule()` method of this object. After calling `on_schedule()`, startme will call `reschedule()` again.  If `reschedule()` returns `None`, startme will never call it anymore. \n\n#### on_schedule()\nAny your code which must runs periodically, `reschedule()` sets time, when `on_schedule()` will be called.\n\n\n### Your first startme module\nLets create this very simple file `my.py`:\n~~~\nfrom startme import StartMe\n\nclass StartTest(StartMe):\n    def on_start(self) -> None:\n        print(f\"{self} started\")\n~~~\n\nStartme runs modules from same path, where startme package itself is installed. This is usual situation when you install many modules with `pip install ...`. But when you develop new module, you may want to specify path to module without installation. We will use `-m` (`--mods`) for this:\n~~~\n$ startme -m my.py \nStartTest started\nstartme started\n$\n~~~\n\nNow you can create setup.py and install your module with pip from [pypi](https://pypi.org/) or git repository, startme will start it. See [startme-examples](https://github.com/yaroslaff/startme-examples) as working example.\n\nLets try other test module `uptime.py`:\n~~~\nfrom startme import StartMe\nimport time\n\nclass Uptime(StartMe):\n    def __init__(self):\n        self.period = 1\n        self.started = time.time()\n\n    def reschedule(self):\n        return time.time() + self.period\n\n    def on_schedule(self):\n        print(f\"Uptime: { int(time.time() - self.started)} seconds\")\n~~~\n\nRun:\n~~~\n$ startme -m uptime.py \nstartme started\nUptime: 1 seconds\nUptime: 2 seconds\nUptime: 3 seconds\n...\n~~~\n\n### Startme subclasses\nStartme has built-in set of simple, but handy subclasses.\n\n#### StartMeExec\nRuns external program. E.g.:\n~~~\nfrom startme import StartMeExec\n\nclass StartTest(StartMeExec):\n    def __init__(self):\n        self._exec = ['ls', '-l']\n~~~\n\nRub:\n~~~\n$ startme -m my.py \ntotal 8\ndrwxr-xr-x 2 xenon xenon 4096 May 29 16:30 __pycache__\n-rw-r--r-- 1 xenon xenon  121 May 29 16:30 my.py\nstartme started\n~~~\n\nstartme blocks when executing this code, so it's good only for quick tasks.\n\n#### StartMeExecNoblock\nThis is non-blocking version. Lets make some rather long-running program `x.sh`:\n~~~\n#!/bin/sh\necho `date` started\nsleep 5\necho `date` stopped\n~~~\n\nmy.py:\n~~~\nfrom startme import StartMeExecNoblock\n\nclass StartTest(StartMeExecNoblock):\n    def __init__(self):\n        super().__init__()\n        self._exec = ['./x.sh']\n~~~\n\nLets run it along with uptime.py to confirm it's not blocking:\n~~~\n$ startme -m my.py uptime.py \nStartTest start\nstartme started\nSun May 29 16:47:36 +07 2022 started\nUptime: 1 seconds\nUptime: 2 seconds\nUptime: 3 seconds\nUptime: 4 seconds\nSun May 29 16:47:41 +07 2022 stopped\nStartTest return: 0\nUptime: 5 seconds\nUptime: 6 seconds\n...\n~~~\n\nNext nice feature - just set `self.restart = True` in `__init__()` of StartTest to get auto-restart:\n~~~\n$ startme -m my.py uptime.py \nStartTest start\nstartme started\nSun May 29 16:49:32 +07 2022 started\nUptime: 1 seconds\nUptime: 2 seconds\nUptime: 3 seconds\nUptime: 4 seconds\nSun May 29 16:49:37 +07 2022 stopped\nStartTest return: 0\nStartTest restart\nUptime: 5 seconds\nSun May 29 16:49:37 +07 2022 started\nUptime: 6 seconds\n~~~\n\n#### StartMeThread\nStartMeThread is nice way to run python code in separate thread.\n~~~\nfrom startme import StartMeThread\nimport time\n\nclass StartTest(StartMeThread):\n    def code(self):\n        while(True):\n            print(\"doing something important in python\")\n            time.sleep(1)\n~~~\n~~~\n$ startme -m my.py uptime.py \nStartTest start thread\ndoing something important in python\nstartme started\nUptime: 1 seconds\ndoing something important in python\nUptime: 2 seconds\n...\n~~~\n\n### Embed startme in your program\nInstead of using `startme` script, you may embed startme features into your code. see `startme` script sources for example.\n~~~\nfrom startme.starter import Starter\n....\nstarter = Starter(hook=args.hook, mods=args.mods)\nstarter.run()\n~~~\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yaroslaff/startme",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "startme",
    "package_url": "https://pypi.org/project/startme/",
    "platform": null,
    "project_url": "https://pypi.org/project/startme/",
    "project_urls": {
      "Homepage": "https://github.com/yaroslaff/startme"
    },
    "release_url": "https://pypi.org/project/startme/0.0.15/",
    "requires_dist": [
      "lightsleep (>=0.0.6)"
    ],
    "requires_python": ">=3.6",
    "summary": "systemd/cron alternative for python virtualenv",
    "version": "0.0.15",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14153713,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c8bbab411e60badde58bb3265d7ccae15c1526295255e78147b66d5c0527de6",
          "md5": "c1603f38bd059675896f793ec001b042",
          "sha256": "95ac709a24dab9d1c93c704c5b0540e9d0b6e2e0b381012ba42f326a9b557c28"
        },
        "downloads": -1,
        "filename": "startme-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c1603f38bd059675896f793ec001b042",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 3350,
        "upload_time": "2022-05-17T17:08:16",
        "upload_time_iso_8601": "2022-05-17T17:08:16.280941Z",
        "url": "https://files.pythonhosted.org/packages/7c/8b/bab411e60badde58bb3265d7ccae15c1526295255e78147b66d5c0527de6/startme-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b3ad9e4ee8121d2ebf6a801b61719b1ed14694ed45a23dd83d43d4f019e3e67",
          "md5": "944d0ca06f3db3d2af34d6462829c39b",
          "sha256": "2c3b0e9acb23a4d4531e8e3d6d8b63c4316d9f678a5d4991977e11c0498de920"
        },
        "downloads": -1,
        "filename": "startme-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "944d0ca06f3db3d2af34d6462829c39b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8095,
        "upload_time": "2022-06-08T09:11:12",
        "upload_time_iso_8601": "2022-06-08T09:11:12.544887Z",
        "url": "https://files.pythonhosted.org/packages/5b/3a/d9e4ee8121d2ebf6a801b61719b1ed14694ed45a23dd83d43d4f019e3e67/startme-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c91e2aa290f087686e80f30f224e1613da7a0c4ca0bd341af45c0c04f3b4e33b",
          "md5": "4e7aa5b375662ae2af0ffb23741208a9",
          "sha256": "62c2bd76bbab4c4cc9afe4d67e5487cf2d622ec9610ea94ae5d004f0c691bf3d"
        },
        "downloads": -1,
        "filename": "startme-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e7aa5b375662ae2af0ffb23741208a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8150,
        "upload_time": "2022-06-13T10:23:45",
        "upload_time_iso_8601": "2022-06-13T10:23:45.060745Z",
        "url": "https://files.pythonhosted.org/packages/c9/1e/2aa290f087686e80f30f224e1613da7a0c4ca0bd341af45c0c04f3b4e33b/startme-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d8fc6faa1d85ebfb99cd26b0cd5c068ca2c334c7ca6b7d05f1c422d00e8c39d",
          "md5": "6294cea8e091914fcf957af3f8a0cfde",
          "sha256": "17129c5bcba98012a12d5e2dfbd379de39f0457cf168fc5a00d987fc34b2ba17"
        },
        "downloads": -1,
        "filename": "startme-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6294cea8e091914fcf957af3f8a0cfde",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8312,
        "upload_time": "2022-06-13T11:57:47",
        "upload_time_iso_8601": "2022-06-13T11:57:47.989054Z",
        "url": "https://files.pythonhosted.org/packages/5d/8f/c6faa1d85ebfb99cd26b0cd5c068ca2c334c7ca6b7d05f1c422d00e8c39d/startme-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccc06db15178b8f03b09653b307a535ac725584e629976a0d0c5bfb5e0c1c864",
          "md5": "231a9765559b7e81e72766a87e43d361",
          "sha256": "d9cbb2f3b7337dcd01f686dbcf095269abbac98f913d77233dc0d27cd947a253"
        },
        "downloads": -1,
        "filename": "startme-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "231a9765559b7e81e72766a87e43d361",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8361,
        "upload_time": "2022-06-13T12:05:05",
        "upload_time_iso_8601": "2022-06-13T12:05:05.631406Z",
        "url": "https://files.pythonhosted.org/packages/cc/c0/6db15178b8f03b09653b307a535ac725584e629976a0d0c5bfb5e0c1c864/startme-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f5b430e9972e189ec3408a027cb0ee27639f5aa8c6ffd4eca4d921f7be5a0c3",
          "md5": "fa1507f70f0e620acff3f59fd834bba8",
          "sha256": "7f4c89862a14702a76019d5801d00040d588ad8a4e9571ca8238f2eabb0c2ee8"
        },
        "downloads": -1,
        "filename": "startme-0.0.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa1507f70f0e620acff3f59fd834bba8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8339,
        "upload_time": "2022-06-13T12:08:37",
        "upload_time_iso_8601": "2022-06-13T12:08:37.678299Z",
        "url": "https://files.pythonhosted.org/packages/1f/5b/430e9972e189ec3408a027cb0ee27639f5aa8c6ffd4eca4d921f7be5a0c3/startme-0.0.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "959853eaad2bd950de8c8fe339a9c6d9f160d39e1317d02aa0f01127f756c022",
          "md5": "acfc3be1df6902d6baa9e32e8fe92c76",
          "sha256": "44616648ef1bcbc3e93a20b7ff4013b71e8dab37e00cb13404923174e1d7e8a8"
        },
        "downloads": -1,
        "filename": "startme-0.0.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "acfc3be1df6902d6baa9e32e8fe92c76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8346,
        "upload_time": "2022-06-16T17:01:17",
        "upload_time_iso_8601": "2022-06-16T17:01:17.223829Z",
        "url": "https://files.pythonhosted.org/packages/95/98/53eaad2bd950de8c8fe339a9c6d9f160d39e1317d02aa0f01127f756c022/startme-0.0.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1f08f943795aaf233b991ef3d9fd8f3825bfb4427f8c29668722d3d34e338db",
          "md5": "530304ff12485ea5e248a1c3c4c90a59",
          "sha256": "6aa34a5000cbfb714671732aec0ba44783bd756b01e327a9fb0a87e35a3edc6e"
        },
        "downloads": -1,
        "filename": "startme-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "530304ff12485ea5e248a1c3c4c90a59",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 3884,
        "upload_time": "2022-05-17T17:15:35",
        "upload_time_iso_8601": "2022-05-17T17:15:35.971867Z",
        "url": "https://files.pythonhosted.org/packages/d1/f0/8f943795aaf233b991ef3d9fd8f3825bfb4427f8c29668722d3d34e338db/startme-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9512ee5bca6d3af1bae9bca6758612557dcf03b44674353cf34ce01d0415fc3",
          "md5": "b253c53f485151b677d30cbd9aeca873",
          "sha256": "b6a3ecf5036fba2300ae101f022fc72f9ea5e9e973d19ac85b96b215b7eacd71"
        },
        "downloads": -1,
        "filename": "startme-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b253c53f485151b677d30cbd9aeca873",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 4659,
        "upload_time": "2022-05-17T17:38:26",
        "upload_time_iso_8601": "2022-05-17T17:38:26.462938Z",
        "url": "https://files.pythonhosted.org/packages/e9/51/2ee5bca6d3af1bae9bca6758612557dcf03b44674353cf34ce01d0415fc3/startme-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "867044752e401fa7e0080589dd0f1f2a0f7e4d6a84f715ad595b1f2b12bb25e5",
          "md5": "78881c84ce53ca8270b692923eb8debd",
          "sha256": "06a09d7cf042ae9ea008b3d75b96e54575b43a2a6a8ae2808fcff0072c30ba33"
        },
        "downloads": -1,
        "filename": "startme-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78881c84ce53ca8270b692923eb8debd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 5037,
        "upload_time": "2022-05-18T17:10:18",
        "upload_time_iso_8601": "2022-05-18T17:10:18.386873Z",
        "url": "https://files.pythonhosted.org/packages/86/70/44752e401fa7e0080589dd0f1f2a0f7e4d6a84f715ad595b1f2b12bb25e5/startme-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5353d22f9b05a44f7bf55faff2ac743328a13278824dd55d5213cda4efe9ae3",
          "md5": "05ccdad8a47a3ebb285fda67ad551ba1",
          "sha256": "e3ae2618556a9296a2cb5fda4aeaff048bb285d68daceace8a6982b5ac26f814"
        },
        "downloads": -1,
        "filename": "startme-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05ccdad8a47a3ebb285fda67ad551ba1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 6022,
        "upload_time": "2022-05-24T17:45:11",
        "upload_time_iso_8601": "2022-05-24T17:45:11.386540Z",
        "url": "https://files.pythonhosted.org/packages/c5/35/3d22f9b05a44f7bf55faff2ac743328a13278824dd55d5213cda4efe9ae3/startme-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "044c3fa5a2a1471dedd5dc1fa59c1cd89289ff4110a25bd0573ebcbece6df2fa",
          "md5": "914355d633b9b6038989f60fe225964c",
          "sha256": "752bbbc86d9114d00c4ca4447be1b042b44ac3586c38e9889828022ac5eba8ab"
        },
        "downloads": -1,
        "filename": "startme-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "914355d633b9b6038989f60fe225964c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 6391,
        "upload_time": "2022-05-25T15:29:25",
        "upload_time_iso_8601": "2022-05-25T15:29:25.143609Z",
        "url": "https://files.pythonhosted.org/packages/04/4c/3fa5a2a1471dedd5dc1fa59c1cd89289ff4110a25bd0573ebcbece6df2fa/startme-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2d032b0981e1bb5aa22afb79c9d87524b1a7e934cf7201c71f5139d5d93f610",
          "md5": "d2485039e8c0491e44f216a7065be618",
          "sha256": "6e07b5d174e9b623e6a8336240cd90a124f805209f51e11472376eabf37faaea"
        },
        "downloads": -1,
        "filename": "startme-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2485039e8c0491e44f216a7065be618",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6468,
        "upload_time": "2022-05-29T09:20:42",
        "upload_time_iso_8601": "2022-05-29T09:20:42.188968Z",
        "url": "https://files.pythonhosted.org/packages/a2/d0/32b0981e1bb5aa22afb79c9d87524b1a7e934cf7201c71f5139d5d93f610/startme-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "959853eaad2bd950de8c8fe339a9c6d9f160d39e1317d02aa0f01127f756c022",
        "md5": "acfc3be1df6902d6baa9e32e8fe92c76",
        "sha256": "44616648ef1bcbc3e93a20b7ff4013b71e8dab37e00cb13404923174e1d7e8a8"
      },
      "downloads": -1,
      "filename": "startme-0.0.15-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "acfc3be1df6902d6baa9e32e8fe92c76",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8346,
      "upload_time": "2022-06-16T17:01:17",
      "upload_time_iso_8601": "2022-06-16T17:01:17.223829Z",
      "url": "https://files.pythonhosted.org/packages/95/98/53eaad2bd950de8c8fe339a9c6d9f160d39e1317d02aa0f01127f756c022/startme-0.0.15-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}