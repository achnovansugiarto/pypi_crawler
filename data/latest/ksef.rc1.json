{
  "info": {
    "author": "Jakub Szafrański",
    "author_email": "kontakt@samu.pl",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![Open in Dev Containers](https://img.shields.io/static/v1?label=Dev%20Containers&message=Open&color=blue&logo=visualstudiocode)](https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/samupl/python-ksef)\n\n# ksef\n\nPython interface for the KSEF API\n\n## Using\n\nTo add and install this package as a dependency of your project, run `poetry add ksef`.\n\n## Contributing\n\n<details>\n<summary>Prerequisites</summary>\n\n<details>\n<summary>1. Set up Git to use SSH</summary>\n\n1. [Generate an SSH key](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key) and [add the SSH key to your GitHub account](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account).\n1. Configure SSH to automatically load your SSH keys:\n    ```sh\n    cat << EOF >> ~/.ssh/config\n    Host *\n      AddKeysToAgent yes\n      IgnoreUnknown UseKeychain\n      UseKeychain yes\n    EOF\n    ```\n\n</details>\n\n<details>\n<summary>2. Install Docker</summary>\n\n1. [Install Docker Desktop](https://www.docker.com/get-started).\n    - Enable _Use Docker Compose V2_ in Docker Desktop's preferences window.\n    - _Linux only_:\n        - [Configure Docker to use the BuildKit build system](https://docs.docker.com/build/buildkit/#getting-started). On macOS and Windows, BuildKit is enabled by default in Docker Desktop.\n        - Export your user's user id and group id so that [files created in the Dev Container are owned by your user](https://github.com/moby/moby/issues/3206):\n            ```sh\n            cat << EOF >> ~/.bashrc\n            export UID=$(id --user)\n            export GID=$(id --group)\n            EOF\n            ```\n\n</details>\n\n<details>\n<summary>3. Install VS Code or PyCharm</summary>\n\n1. [Install VS Code](https://code.visualstudio.com/) and [VS Code's Dev Containers extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers). Alternatively, install [PyCharm](https://www.jetbrains.com/pycharm/download/).\n2. _Optional:_ install a [Nerd Font](https://www.nerdfonts.com/font-downloads) such as [FiraCode Nerd Font](https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts/FiraCode) and [configure VS Code](https://github.com/tonsky/FiraCode/wiki/VS-Code-Instructions) or [configure PyCharm](https://github.com/tonsky/FiraCode/wiki/Intellij-products-instructions) to use it.\n\n</details>\n\n</details>\n\n<details open>\n<summary>Development environments</summary>\n\nThe following development environments are supported:\n\n1. ⭐️ _GitHub Codespaces_: click on _Code_ and select _Create codespace_ to start a Dev Container with [GitHub Codespaces](https://github.com/features/codespaces).\n1. ⭐️ _Dev Container (with container volume)_: click on [Open in Dev Containers](https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/samupl/python-ksef) to clone this repository in a container volume and create a Dev Container with VS Code.\n1. _Dev Container_: clone this repository, open it with VS Code, and run <kbd>Ctrl/⌘</kbd> + <kbd>⇧</kbd> + <kbd>P</kbd> → _Dev Containers: Reopen in Container_.\n1. _PyCharm_: clone this repository, open it with PyCharm, and [configure Docker Compose as a remote interpreter](https://www.jetbrains.com/help/pycharm/using-docker-compose-as-a-remote-interpreter.html#docker-compose-remote) with the `dev` service.\n1. _Terminal_: clone this repository, open it with your terminal, and run `docker compose up --detach dev` to start a Dev Container in the background, and then run `docker compose exec dev zsh` to open a shell prompt in the Dev Container.\n\n</details>\n\n<details>\n<summary>Developing</summary>\n\n- This project follows the [Conventional Commits](https://www.conventionalcommits.org/) standard to automate [Semantic Versioning](https://semver.org/) and [Keep A Changelog](https://keepachangelog.com/) with [Commitizen](https://github.com/commitizen-tools/commitizen).\n- Run `poe` from within the development environment to print a list of [Poe the Poet](https://github.com/nat-n/poethepoet) tasks available to run on this project.\n- Run `poetry add {package}` from within the development environment to install a run time dependency and add it to `pyproject.toml` and `poetry.lock`. Add `--group test` or `--group dev` to install a CI or development dependency, respectively.\n- Run `poetry update` from within the development environment to upgrade all dependencies to the latest versions allowed by `pyproject.toml`.\n- Run `cz bump` to bump the package's version, update the `CHANGELOG.md`, and create a git tag.\n\n</details>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/samupl/python-ksef",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ksef",
    "package_url": "https://pypi.org/project/ksef/",
    "platform": null,
    "project_url": "https://pypi.org/project/ksef/",
    "project_urls": {
      "Homepage": "https://github.com/samupl/python-ksef",
      "Repository": "https://github.com/samupl/python-ksef"
    },
    "release_url": "https://pypi.org/project/ksef/0.0.0/",
    "requires_dist": [
      "pydantic (>=1.10.5,<2.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Python interface for the KSEF API",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17361204,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb796cf6b62cd719a222c12a3cdae694e825293b00cfe110c5bd27c3a76d920e",
          "md5": "2ff888286b652d0c843095cccfe3c7c1",
          "sha256": "37db91e18bd6e142dc0f41ff2ae42c5dc17cfe8e00bde0c0a36ca22e51c415b1"
        },
        "downloads": -1,
        "filename": "ksef-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ff888286b652d0c843095cccfe3c7c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 3087,
        "upload_time": "2023-03-20T09:23:23",
        "upload_time_iso_8601": "2023-03-20T09:23:23.417383Z",
        "url": "https://files.pythonhosted.org/packages/eb/79/6cf6b62cd719a222c12a3cdae694e825293b00cfe110c5bd27c3a76d920e/ksef-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa0993c12a6da7a2c2f2bd572095b9de1295fd95c1d44f14e68d6eb0efcbd8a1",
          "md5": "c163322dc09155a84827869816c73316",
          "sha256": "325da882582ddcfd3be7258f65f46c64ba7a224a16100d3f1176c4ed285172df"
        },
        "downloads": -1,
        "filename": "ksef-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c163322dc09155a84827869816c73316",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 4174,
        "upload_time": "2023-03-20T09:23:24",
        "upload_time_iso_8601": "2023-03-20T09:23:24.638468Z",
        "url": "https://files.pythonhosted.org/packages/aa/09/93c12a6da7a2c2f2bd572095b9de1295fd95c1d44f14e68d6eb0efcbd8a1/ksef-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb796cf6b62cd719a222c12a3cdae694e825293b00cfe110c5bd27c3a76d920e",
        "md5": "2ff888286b652d0c843095cccfe3c7c1",
        "sha256": "37db91e18bd6e142dc0f41ff2ae42c5dc17cfe8e00bde0c0a36ca22e51c415b1"
      },
      "downloads": -1,
      "filename": "ksef-0.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2ff888286b652d0c843095cccfe3c7c1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 3087,
      "upload_time": "2023-03-20T09:23:23",
      "upload_time_iso_8601": "2023-03-20T09:23:23.417383Z",
      "url": "https://files.pythonhosted.org/packages/eb/79/6cf6b62cd719a222c12a3cdae694e825293b00cfe110c5bd27c3a76d920e/ksef-0.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa0993c12a6da7a2c2f2bd572095b9de1295fd95c1d44f14e68d6eb0efcbd8a1",
        "md5": "c163322dc09155a84827869816c73316",
        "sha256": "325da882582ddcfd3be7258f65f46c64ba7a224a16100d3f1176c4ed285172df"
      },
      "downloads": -1,
      "filename": "ksef-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c163322dc09155a84827869816c73316",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 4174,
      "upload_time": "2023-03-20T09:23:24",
      "upload_time_iso_8601": "2023-03-20T09:23:24.638468Z",
      "url": "https://files.pythonhosted.org/packages/aa/09/93c12a6da7a2c2f2bd572095b9de1295fd95c1d44f14e68d6eb0efcbd8a1/ksef-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}