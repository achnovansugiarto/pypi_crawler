{
  "info": {
    "author": "Adane Bedada",
    "author_email": "adbedada@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "![logo](./data/logo.svg)\n---\n![GitHub](https://img.shields.io/github/license/adbeda/imageprep)\n[![Package version](https://img.shields.io/badge/version-0.3-blue)](https://github.com/adbeda/imageprep)\n![Image](https://travis-ci.com/adbeda/imageprep.svg?branch=master)\n[![codecov](https://codecov.io/gh/adbeda/imageprep/branch/master/graph/badge.svg)](https://codecov.io/gh/adbeda/imageprep)\n\nImagePrep is a tool for preparing image labels in different formats, primarily for object detection tasks.\n\nDeep Learning frameworks expect datasets to be prepared in a structure, style or format that \nfits into their workflow. With ImagePrep, you can easily organize labels according to these \nrequirements. Currently, the tool simplifies the process of preparing labels using COCO, \nPascal VOC and YOLO style format. Conversion to one from another is also supported.\n\n\n##### Installation\n\n  stable version\n\n    pip install imageprep\n\n  latest version:\n\n    # clone repo\n    git clone https://github.com/adbeda/imageprep    \n\n    # install\n    cd imageprep && pip install -e .\n\n    # or simply with:\n    python -m pip install 'git+https://github.com/adbeda/imageprep.git' \n\n\n\n\n\n##### Usage\n\n\nExample 1: Organize images and labels in COCO style \n\n   ```python\nfrom imageprep import coco\n\n\"\"\"\nFolder Structure of a moc dataset\n\ndata\n├── images\n│   ├── 145_28.jpg\n│   ├── 79_38.jpg\n│   ├── 79_45.jpg\n│   └── 80_7.jpg\n└── labels\n    ├── 145_28.txt\n    ├── 79_38.txt\n    ├── 79_45.txt\n    └── 80_7.txt\n\"\"\"\n\n# folder containing images\nimage_path = \"data/images/\"\nlabel_path = \"data/labels/\"\n\n# run task\ncoco_dict = coco.coco_format_folder(image_path, label_path)\n\nprint(coco_dict)\n``` \nOutput:\n\n   ```json\n[ {\n      \"image\":[{\n            \"file_name\":\"data/images/145_28.jpg\",\n            \"height\":416,\n            \"width\":416\n         }],\n      \"annotations\":[{\n            \"bbox\":[336, 398, 416, 416],\n            \"id\":1,\n            \"segmentation\":[],\n            \"area\":1440,\n            \"category_id\":0\n         },\n         {\n            \"bbox\":[3, 91, 105, 163],\n            \"id\":2,\n            \"segmentation\":[],\n            \"area\":7344,\n            \"category_id\":0\n         },\n         {\n            \"bbox\":[134, 31, 196, 95],\n            \"id\":3,\n            \"segmentation\":[],\n            \"area\":3968,\n            \"category_id\":0\n         }\n      ],\n      \"image_id\":0\n   },\n   {\n      \"image\":[{\n            \"file_name\":\"data/images/79_38.jpg\",\n            \"height\":416,\n            \"width\":416\n         }],\n      \"annotations\":[{\n            \"bbox\":[257, 306, 325, 370],\n            \"id\":1,\n            \"segmentation\":[],\n            \"area\":4352,\n            \"category_id\":0\n         }],\n      \"image_id\":1}\n\n   ]\n```\n\nExample 2: Convert absolute bounding box values to YOLO style formats\n\n   <b>X<sub>min</sub>Y<sub>min</sub>X<sub>max</sub>Y<sub>max</sub></b>  ----->   <b>X<sub>center</sub>Y<sub>center</sub> Width Height</i></b>  \n\n\n   ```python\nfrom imageprep import yolo\n\n\"\"\"\n# Input BBOX in absolute format (Xmin, Ymin, Xmax, Ymax)\n\n├── labels\n    ├── 145_28.txt\n    │   ├── 336 398 416 416\n    │   ├──   3  91 105 163\n    │   ├── 134  31 196  95\n    ├── 79_38.txt\n    │   ├── 257 306 325 370   \n    ├── 79_45.txt\n    │   ├──   0 399 133 416\n    │   ├── 161 255 239 343\n    │   ├── 336  32 416 108      \n    └── 80_7.txt\n        ├── 267 223 391 319\n\n\"\"\"\n\n# folder containing images\nimage_path = \"data/images/\"\nlabel_path = \"data/labels/\" \noutput_path = \"data/yolo_labels/\"\n\n# run task and save text \nyolo.convert_to_yolo(image_path, label_path, output_path)\n\n\n\n```\nOutput:\n\n```python\n\n# Output BBOX in relative format (Xcenter, Ycenter, Width, Height)\n\n├── yolo_labels\n    ├── 145_28.txt\n    │   ├── 0.9038461538461539 0.9783653846153847 0.19230769230769232 0.04326923076923077\n    │   ├── 0.12980769230769232 0.30528846153846156 0.2451923076923077 0.17307692307692307\n    │   ├── 0.3966346153846154 0.1514423076923077 0.14903846153846154 0.15384615384615385\n    ├── 79_38.txt\n    │   ├── 0.6995192307692308 0.8125 0.16346153846153846 0.15384615384615385   \n    ├── 79_45.txt\n    │   ├── 0.15985576923076925 0.9795673076923077 0.3197115384615385 0.040865384615384616\n    │   ├── 0.4807692307692308 0.71875 0.1875 0.21153846153846156\n    │   ├── 0.9038461538461539 0.16826923076923078 0.19230769230769232 0.1826923076923077\n    └── 80_7.txt\n        ├── 0.7908653846153847 0.6514423076923077 0.2980769230769231 0.23076923076923078\n\n```   \n\n#### Command Line\n\n```commandline\nUsage: imageprep [OPTIONS] COMMAND [ARGS]...\n\n  Dataset Preparation Helper\n\nOptions:\n  -h, --help  Show this message and exit.\n\nCommands:\n  convert-to-yolo   Converts absolute bbox values to relative ones\n  create-path-file  Writes out the path to images in a folder as a list\n  get-image-name    Prints out the names of images in a folder\n  resize-images     Resizes Image dimension to a size provided by user\n\n\n```\n\n#### \n\nThe CLI is still in early stage of development.\n\n##### Use case:\n\nThe above output can easily be integrated with data registration steps \nrequried to train a Mask-RCNN model using [Detectron2](https://github.com/facebookresearch/detectron2). \nCheck out the example [here](./examples/Imprep_and_Detectron2.ipynb). \n\n##### Other functionalities included in the library:\n- Create a  list of all bounding boxes\n- Stack and save images as numpy array\n- Dump labels as JSON objects to a file\n- Resize images within a single or multiple folders \n- Convert relative (YOLO style) values to absolute ones\n- Customize a python dictionary of labels to a Detectron2 format\n and more ...\n\n\n##### TODO: current and future work\n - Improve the CLI\n - Add workflow for VOC style\n - Test against RCNN families\n - Create a documentation\n - Improve integration for Detectron2 and YOLO\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adbeda/imageprep",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "imageprep",
    "package_url": "https://pypi.org/project/imageprep/",
    "platform": "",
    "project_url": "https://pypi.org/project/imageprep/",
    "project_urls": {
      "Homepage": "https://github.com/adbeda/imageprep"
    },
    "release_url": "https://pypi.org/project/imageprep/0.3/",
    "requires_dist": [
      "pillow",
      "click",
      "numpy",
      "mock ; extra == 'test'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "codecov ; extra == 'test'"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Image Preparation Utilities for Deep Learning",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7298670,
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21d387e68ff46fd992c477a17ee1ff4937fa0853aa11cc047fc4a229a0160f69",
          "md5": "f74dc0d6790e2db2e1cc48e0cb12e674",
          "sha256": "463e93d97595329432e4d3bb8f8910e7b6a572789a94f52d59c1a3aa8a8740ec"
        },
        "downloads": -1,
        "filename": "imageprep-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f74dc0d6790e2db2e1cc48e0cb12e674",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 15991,
        "upload_time": "2020-05-22T01:09:26",
        "upload_time_iso_8601": "2020-05-22T01:09:26.523571Z",
        "url": "https://files.pythonhosted.org/packages/21/d3/87e68ff46fd992c477a17ee1ff4937fa0853aa11cc047fc4a229a0160f69/imageprep-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c1aa6efb03988e120030ece85064412a607289122cb5b5d0949053cd5aab83a",
          "md5": "58509933098ee48910233655c46e776a",
          "sha256": "6b92bba790c776654e7a72b2d3da6d5660787532679eb84f7d5c3f61494e3db8"
        },
        "downloads": -1,
        "filename": "imageprep-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "58509933098ee48910233655c46e776a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 14490,
        "upload_time": "2020-05-22T01:09:28",
        "upload_time_iso_8601": "2020-05-22T01:09:28.475718Z",
        "url": "https://files.pythonhosted.org/packages/9c/1a/a6efb03988e120030ece85064412a607289122cb5b5d0949053cd5aab83a/imageprep-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21d387e68ff46fd992c477a17ee1ff4937fa0853aa11cc047fc4a229a0160f69",
        "md5": "f74dc0d6790e2db2e1cc48e0cb12e674",
        "sha256": "463e93d97595329432e4d3bb8f8910e7b6a572789a94f52d59c1a3aa8a8740ec"
      },
      "downloads": -1,
      "filename": "imageprep-0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f74dc0d6790e2db2e1cc48e0cb12e674",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 15991,
      "upload_time": "2020-05-22T01:09:26",
      "upload_time_iso_8601": "2020-05-22T01:09:26.523571Z",
      "url": "https://files.pythonhosted.org/packages/21/d3/87e68ff46fd992c477a17ee1ff4937fa0853aa11cc047fc4a229a0160f69/imageprep-0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c1aa6efb03988e120030ece85064412a607289122cb5b5d0949053cd5aab83a",
        "md5": "58509933098ee48910233655c46e776a",
        "sha256": "6b92bba790c776654e7a72b2d3da6d5660787532679eb84f7d5c3f61494e3db8"
      },
      "downloads": -1,
      "filename": "imageprep-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "58509933098ee48910233655c46e776a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 14490,
      "upload_time": "2020-05-22T01:09:28",
      "upload_time_iso_8601": "2020-05-22T01:09:28.475718Z",
      "url": "https://files.pythonhosted.org/packages/9c/1a/a6efb03988e120030ece85064412a607289122cb5b5d0949053cd5aab83a/imageprep-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}