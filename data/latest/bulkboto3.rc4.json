{
  "info": {
    "author": "Amir Masoud Sefidian",
    "author_email": "amir.masoud.sefidian@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\n<!--# Bulk Boto: Python package for fast and parallel transferring a bulk of files to S3 based on boto3-->\n<!-- PROJECT LOGO -->\n<br />\n<div align=\"center\">\n  <a href=\"https://github.com/iamirmasoud/bulkboto3\">\n    <img src=\"https://raw.githubusercontent.com/iamirmasoud/bulkboto3/main/imgs/logo.png\" alt=\"Logo\" width=\"100\" height=\"100\">\n  </a>\n    \n  <h3 align=\"center\">Bulk Boto3 (bulkboto3)</h3>\n\n  <p align=\"center\">\n    Python package for fast and parallel transferring a bulk of files to S3 based on boto3!\n    <br />\n    <!-- \n    <a href=\"https://github.com/iamirmasoud/bulkboto3\"><strong>Explore the docs »</strong></a>\n    <br /> \n    -->\n    <a href=\"https://pypi.org/project/bulkboto3/\">See on PyPI</a>\n    ·\n    <a href=\"https://github.com/iamirmasoud/bulkboto3/blob/main/examples.py\">View Examples</a>\n    ·\n    <a href=\"https://github.com/iamirmasoud/bulkboto3/issues\">Report Bug/Request Feature</a>\n    \n\n![Python](https://img.shields.io/pypi/pyversions/bulkboto3.svg?style=flat&https://pypi.python.org/pypi/bulkboto3/)\n![Version](http://img.shields.io/pypi/v/bulkboto3.svg?style=flat&https://pypi.python.org/pypi/bulkboto3/)\n![License](http://img.shields.io/pypi/l/bulkboto3.svg?style=flat&https://github.com/iamirmasoud/bulkboto3/blob/main/LICENSE)\n    \n</p>\n</div>\n\n<!-- TABLE OF CONTENTS -->\n<details>\n  <summary>Table of Contents</summary>\n  <ol>\n    <li>\n      <a href=\"#about-bulkboto3\">About bulkboto3</a>\n    </li>\n    <li>\n      <a href=\"#getting-started\">Getting Started</a>\n      <ul>\n        <li><a href=\"#prerequisites\">Prerequisites</a></li>\n        <li><a href=\"#installation\">Installation</a></li>\n      </ul>\n    </li>\n    <li><a href=\"#usage\">Usage</a></li>\n    <li><a href=\"#blog-posts\">Blog Posts</a></li>\n    <li><a href=\"#contributing\">Contributing</a></li>\n    <li><a href=\"#contributors\">Contributors</a></li>\n    <li><a href=\"#contact\">Contact</a></li>\n    <li><a href=\"#license\">License</a></li>\n  </ol>\n</details>\n\n## About bulkboto3\n[Boto3](https://boto3.amazonaws.com/v1/documentation/api/latest/guide/quickstart.html) is the official Python SDK \nfor accessing and managing all AWS resources such as Amazon Simple Storage Service (S3). \nGenerally, it's pretty ok to transfer a small number of files using Boto3. However, transferring a large number of \nsmall files impede performance. Although it only takes a few milliseconds per file to transfer, \nit can take up to hours to transfer hundreds of thousands, or millions, of files if you do it sequentially. \nMoreover, because Amazon S3 does not have folders/directories, managing the hierarchy of directories and files \nmanually can be a bit tedious especially if there are many files located in different folders.\n\nThe `bulkboto3` package solves these issues. It speeds up transferring of many small files to Amazon AWS S3 by \nexecuting multiple download/upload operations in parallel by leveraging the Python multiprocessing module. \nDepending on the number of cores of your machine, Bulk Boto3 can make S3 transfers even 100X faster than sequential \nmode using traditional Boto3! Furthermore, Bulk Boto3 can keep the original folder structure of files and \ndirectories when transferring them. There are also some other features as follows.\n\n### Main Functionalities\n  - Multi-thread uploading/downloading of a directory (keeping the directory structure) to/from S3 object storage\n  - Deleting all objects of an S3 bucket\n  - Checking the existence of an object on the S3 bucket\n  - Listing all objects on an S3 bucket\n  - Creating a new bucket on the S3\n\n## Getting Started\n### Prerequisites\n* [Python 3.6+](https://www.python.org/)\n* [pip](https://pip.pypa.io/en/stable/)\n* API credentials to access an S3 \n\n**Note**:\nYou can deploy a free S3 server using [MinIO](https://min.io/) \non your local machine by following the steps explained in: [Deploy Standalone MinIO using Docker Compose on Linux](http://www.sefidian.com/2022/04/08/deploy-standalone-minio-using-docker-compose/).\n  \n### Installation\nUse the package manager [pip](https://pypi.org/project/bulkboto3/) to install `bulkboto3`.\n\n```bash\npip install bulkboto3\n```\n\n## Usage\nYou can find the following scripts in [examples.py](https://github.com/iamirmasoud/bulkboto/blob/main/examples.py) and [examples.ipynb Notebook](https://github.com/iamirmasoud/bulkboto/blob/main/examples.ipynb).\n\n#### Import and instantiate a `BulkBoto3` object with your credentials\n```python\nfrom bulkboto3 import BulkBoto3\nTARGET_BUCKET = \"test-bucket\"\nNUM_TRANSFER_THREADS = 50\nTRANSFER_VERBOSITY = True\n\nbulkboto_agent = BulkBoto3(\n    resource_type=\"s3\",\n    endpoint_url=\"<Your storage endpoint>\",\n    aws_access_key_id=\"<Your access key>\",\n    aws_secret_access_key=\"<Your secret key>\",\n    max_pool_connections=300,\n    verbose=TRANSFER_VERBOSITY,\n)\n```\n\n#### Create a new bucket\n```python\nbulkboto_agent.create_new_bucket(bucket_name=TARGET_BUCKET)\n```\n\n####  Upload a whole directory with its structure to an S3 bucket in multi-thread mode\nSuppose that there is a directory with the following structure on your local machine:\n```console\ntest_dir\n├── first_subdir\n│   ├── f1\n│   ├── f2\n│   └── f3\n└── second_subdir\n    └── f4\n```\nTo upload the directory (with its subdirectories) to the bucket \nunder a new directory name called `my_storage_dir`, use the following command:\n```python\nbulkboto_agent.upload_dir_to_storage(\n     bucket_name=TARGET_BUCKET,\n     local_dir=\"test_dir\",\n     storage_dir=\"my_storage_dir\",\n     n_threads=NUM_TRANSFER_THREADS,\n)\n# output:\n# 2022-03-26 18:12:40 — INFO — Start uploading from local 'test_dir' to 'my_storage_dir' on the object storage with 50 threads.\n# 100%|██████████| 4/4 [00:00<00:00,  4.00s/it]\n# 2022-03-26 18:12:41 — INFO — Successfully uploaded 4 files to bucket 'test-bucket' in 0.07 seconds.\n```\n\n#### Download a whole directory with its structure to a local directory in multi-thread mode\n```python\nbulkboto_agent.download_dir_from_storage(\n    bucket_name=TARGET_BUCKET,\n    storage_dir=\"my_storage_dir\",\n    local_dir=\"new_test_dir\",\n    n_threads=NUM_TRANSFER_THREADS,\n)\n# output: \n# 2022-03-26 18:14:08 — INFO — Start downloading from 'my_storage_dir' on storage to local 'new_test_dir' with 50 threads.\n# 100%|██████████| 4/4 [00:00<00:00,  4.00it/s]\n# 2022-03-26 18:14:09 — INFO — Successfully downloaded 4 files from bucket: 'test-bucket' in 0.04 seconds.\n```\n\nThe structure of the downloaded directory will be as follows on the local directory:\n```console\nnew_test_dir\n└── my_storage_dir\n    ├── first_subdir\n    │   ├── f1\n    │   ├── f2\n    │   └── f3\n    └── second_subdir\n        └── f4\n```\nYou can set `local_dir=''` (it is the default value) to avoid the creation of the `new_test_dir` directory. \n\n#### Upload/Download arbitrary files to/from an S3 bucket\nTo transfer a list of arbitrary files to a bucket, you should instantiate `StorageTransferPath` class \nto determine the storage (s3) and local paths, and then use `.upload()` and `.download()` methods. \nHere is an example:\n\n```python\n# upload arbitrary files from local to an S3 bucket\nupload_paths = [\n    StorageTransferPath(\n        local_path=\"test_dir/first_subdir/f2\",\n        storage_path=\"f2\",\n    ),\n    StorageTransferPath(\n        local_path=\"test_dir/second_subdir/f4\",\n        storage_path=\"my_storage_dir/f4\",\n    ),\n]\nbulkboto_agent.upload(bucket_name=TARGET_BUCKET, upload_paths=upload_paths)\n# output:\n# 100%|██████████| 2/2 [00:00<00:00,  2.44it/s]\n# 2022-04-05 13:40:10 — INFO — Successfully uploaded 2 files to bucket: 'test-bucket'.\n```\n```python\n# download arbitrary files from an S3 bucket to local\ndownload_paths = [\n    StorageTransferPath(\n        storage_path=\"f2\",\n        local_path=\"f2\",\n    ),\n    StorageTransferPath(\n        storage_path=\"my_storage_dir/f4\",\n        local_path=\"f5\",\n    ),\n]\nbulkboto_agent.download(bucket_name=TARGET_BUCKET, download_paths=download_paths)\n# output:\n# 100%|██████████| 2/2 [00:00<00:00,  2.44it/s]\n# 2022-04-05 13:34:10 — INFO — Successfully downloaded 2 files from bucket: 'test-bucket'.\n```\n#### Delete all objects on a bucket\n```python\nbulkboto_agent.empty_bucket(TARGET_BUCKET)\n# output: \n# 2022-03-26 22:23:23 — INFO — Successfully deleted objects on: 'test-bucket'.\n```\n\n#### Check if a file exists in a bucket\n```python\nprint(\n    bulkboto_agent.check_object_exists(\n        bucket_name=TARGET_BUCKET, object_path=\"my_storage_dir/first_subdir/test_file.txt\"\n    )\n)\n# output: False \n\nprint(\n    bulkboto_agent.check_object_exists(\n        bucket_name=TARGET_BUCKET, object_path=\"my_storage_dir/first_subdir/f1\"\n    )\n)\n# output: True\n```\n\n#### Get the list of objects in a bucket (with prefix)\n```python\nprint(\n    bulkboto_agent.list_objects(\n        bucket_name=TARGET_BUCKET, storage_dir=\"my_storage_dir\"\n    )\n)\n# output: \n# ['my_storage_dir/first_subdir/f1', 'my_storage_dir/first_subdir/f2', 'my_storage_dir/first_subdir/f3', 'my_storage_dir/second_subdir/f4']\n\nprint(\n    bulkboto_agent.list_objects(\n        bucket_name=TARGET_BUCKET, storage_dir=\"my_storage_dir/second_subdir\"\n    )\n)\n# output: \n# ['my_storage_dir/second_subdir/f4']\n```\n\n### Benchmark\nUploaded 88800 small files (totally about 7GB) with 100 threads in 505 seconds that was about \n72X faster than the non-parallel mode.\n\n## Blog Posts\n- [BulkBoto3: Python package for fast and parallel transferring a bulk of files to S3 based on boto3!](http://www.sefidian.com/2022/03/28/bulkboto3-python-package-for-fast-and-parallel-transferring-a-bulk-of-files-to-s3-based-on-boto3/)\n- [Deploy Standalone MinIO using Docker Compose on Linux](http://www.sefidian.com/2022/04/08/deploy-standalone-minio-using-docker-compose/).\n\n\n## Contributing\nAny contributions you make are **greatly appreciated**. If you have a suggestion that would make this better, please fork the repo and create a pull request. \nYou can also simply open an issue with the tag \"enhancement\". To contribute to `bulkboto3`, follow these steps:\n\n1. Fork this repository\n2. Create a feature branch (`git checkout -b feature/AmazingFeature`)\n3. Make your changes and commit them (`git commit -m 'Add some AmazingFeature'`)\n4. Push to the branch (`git push origin feature/AmazingFeature`)\n5. Open a pull request\n\nAlternatively, see the GitHub documentation on [creating a pull request](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request).\n\n## Contributors\nThanks to the following people who have contributed to this project:\n\n* [Amir Masoud Sefidian](https://sefidian.com/) 📖\n\n## Contact\nIf you want to contact me you can reach me at [a.m.sefidian@gmail.com](mailto:a.m.sefidian@gmail.com).\n\n## License\nDistributed under the [MIT](https://choosealicense.com/licenses/mit/) License. See `LICENSE` for more information.\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/iamirmasoud/bulkboto3",
    "keywords": "Boto3,S3,Parallel,Multi-thread,Bulk,Boto,Bulk Boto,Bulk Boto3,Simple Storage Service,Minio,Amazon AWS S3,Python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bulkboto3",
    "package_url": "https://pypi.org/project/bulkboto3/",
    "platform": null,
    "project_url": "https://pypi.org/project/bulkboto3/",
    "project_urls": {
      "Homepage": "https://github.com/iamirmasoud/bulkboto3"
    },
    "release_url": "https://pypi.org/project/bulkboto3/1.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "Python package for fast and parallel transferring a bulk of files to S3 based on boto3",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14091963,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58f3aad5adccf5120a787dcb158c3c344075d218942e6a5956224cb1ff5546b2",
          "md5": "bf81e0792d53d98f1e575a0140cd3e12",
          "sha256": "96577d7b8231860deed3cc862047df022d176d9d0414655bf66e2159e4858b7a"
        },
        "downloads": -1,
        "filename": "bulkboto3-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bf81e0792d53d98f1e575a0140cd3e12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 12225,
        "upload_time": "2022-04-07T21:03:43",
        "upload_time_iso_8601": "2022-04-07T21:03:43.181314Z",
        "url": "https://files.pythonhosted.org/packages/58/f3/aad5adccf5120a787dcb158c3c344075d218942e6a5956224cb1ff5546b2/bulkboto3-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd9dc5f5eeba4dd236f40433c4d4b8a68173b633480e0323733d45aba0df55d9",
          "md5": "7c1ace9bbe873dab470eb406189be79c",
          "sha256": "bc7f97fb43914bfb67124e2a1d66a148126829ab747e94f0640a406ea49b8373"
        },
        "downloads": -1,
        "filename": "bulkboto3-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7c1ace9bbe873dab470eb406189be79c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 12262,
        "upload_time": "2022-04-07T21:23:38",
        "upload_time_iso_8601": "2022-04-07T21:23:38.239430Z",
        "url": "https://files.pythonhosted.org/packages/fd/9d/c5f5eeba4dd236f40433c4d4b8a68173b633480e0323733d45aba0df55d9/bulkboto3-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6d5b4b71d0a1e9cd2337da81171d5f856ec31b2e73da375cb4497b3913f2691",
          "md5": "737e226a053174d73ee17373ca2106e2",
          "sha256": "24318aa67fb05b89d492526ea7033769762f65c94087c4ae0dc0270501623703"
        },
        "downloads": -1,
        "filename": "bulkboto3-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "737e226a053174d73ee17373ca2106e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 12735,
        "upload_time": "2022-04-08T12:49:10",
        "upload_time_iso_8601": "2022-04-08T12:49:10.110704Z",
        "url": "https://files.pythonhosted.org/packages/d6/d5/b4b71d0a1e9cd2337da81171d5f856ec31b2e73da375cb4497b3913f2691/bulkboto3-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b04d5d4b4568ac64662c4fc14b4598f04eb6e4fe2279e9175a715e5a7d18d7f7",
          "md5": "c68dfc0328174271153db027108a0529",
          "sha256": "4d33da2410b898ad2e0754e9221dbc702dafa7275a3a853026776bf776aefe53"
        },
        "downloads": -1,
        "filename": "bulkboto3-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c68dfc0328174271153db027108a0529",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 12809,
        "upload_time": "2022-06-10T08:26:50",
        "upload_time_iso_8601": "2022-06-10T08:26:50.248428Z",
        "url": "https://files.pythonhosted.org/packages/b0/4d/5d4b4568ac64662c4fc14b4598f04eb6e4fe2279e9175a715e5a7d18d7f7/bulkboto3-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b04d5d4b4568ac64662c4fc14b4598f04eb6e4fe2279e9175a715e5a7d18d7f7",
        "md5": "c68dfc0328174271153db027108a0529",
        "sha256": "4d33da2410b898ad2e0754e9221dbc702dafa7275a3a853026776bf776aefe53"
      },
      "downloads": -1,
      "filename": "bulkboto3-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "c68dfc0328174271153db027108a0529",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 12809,
      "upload_time": "2022-06-10T08:26:50",
      "upload_time_iso_8601": "2022-06-10T08:26:50.248428Z",
      "url": "https://files.pythonhosted.org/packages/b0/4d/5d4b4568ac64662c4fc14b4598f04eb6e4fe2279e9175a715e5a7d18d7f7/bulkboto3-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}