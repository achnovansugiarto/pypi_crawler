{
  "info": {
    "author": "Ahmet Zahid Balcıoğlu, Oğuz Gürerk",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# OrderStatistics\nA repository focused on outlier detection and analysis of heavy-tailed distributions using order statistics. Here you can find:\n- Simualations of order statistics for outlier detection and the statistic provided in our paper titled [On a Notion of Outliers Based on Ratios of Order Statistics](https://arxiv.org/abs/2207.13068).\n- Single and double bootstrap methods (& more) for tail index estimation of heavy-tailed data.\n- Special kernel density estimation methods for heavy-tailed data. \n\nAlso:\n- Useful plotting functions for outlier detection.\n- Easy reporting tools for binary classification such as `get_classification_report()`, which reports all classification metrics from confusion matrix to AUC and can plot ROC curve.\n\n## Installation:\nYou can install the repository with:\n```\npip install orderstats\n```\n\nAlternatively, you can download a copy of the repository from this page.\nAfter downloading, you can do \n  `pip install -r requirements.txt`\nto install the requirements.\n\n## General explanation about Random Variables:\n  We use `scipy.stats` package for generating random variables.\n  A random variable instance can be created just by giving the appropriate parameters.\n  For example for X ~ N(0, 1), we can do: <br>\n  `>>> X = stats.norm(0, 1)` <br>\n  Once an instance is created, we can calculate pdf, or cdf using `.pdf()`, `.cdf()` methods, or,\n  we can take a sample using `.rvs()`: <br>\n  `>>> X.pdf(1.96)` for pdf of X ~ N(0, 1) at x = 1.96; <br>\n  `>>> X.cdf(1.96)` for cdf of X ~ N(0, 1) at x = 1.96;  <br>\n  `>>> X.rvs(1000)` for an i.i.d sample of 1000 from X ~ N(0, 1). <br>\n\n#### Some problems:\n  Not every random variable function in `scipy.stats` is intuitive. <br>\n  For instance `expon` function creates an instance of an exponential distribution.\n  However, if we wish to get an instance of exponential distribution with lambda = 2\n  (i.e. with pdf f(x) = 2e^(-2x)), then we would need to use `expon(0, 1/2)`.\n  In distributions.py, there are examples given for some popular distributions to clarify any ambiguities.\n\n## Examples\n\n### Outlier Detection:\nHere is an example use of our method for a 1D dataset `X`:\n\n```python\nfrom orderstats import scoring\nfrom orderstats.distributions import moving_average_unscaled_kappa\nfrom orderstats.plot_utils import plot_anomalies\nscores, scores_sorted = scoring.get_anomaly_scores(X, scoring_func=moving_average_unscaled_kappa)\nthreshold = scoring.get_kappa_threshold(scores_sorted)\npredictions = scores > threshold\nplot_anomalies(X, predictions=predictions)\n```\n\n### Order Statistics Simulation:\n  In general, we will use `OrderSimulation` class in distributions for simulations. Any random variable from the `scipy.stats` package can be given to this class as an argument.\n  For example, if you wish to simulate the sums of first `m` order statistics from a sample of exponential distribution of size `n`:\n\n```python\nfrom orderstats import OrderSimulation\nsimulate_normal_dist = OrderSimulation(stats.expon(0, 1), calculate_S_m)\nsimulation = simulate_normal_dist(10000, n, m)\n```\n\n  For studying change point detection, we provide the `MixSimulation` class. For getting a mixed sample with corresponding ids:\n```python\nfrom orderstats import MixSimulation\nsimulate_mixture = MixSimulation(dist1=expon(0, 1), dist2=stats.pareto(2.))\nmixed_array, idx = simulate_mixture(n1, n2)\n```\n\n### Tail Index Estimation:\nMost of the methods for tail index estimation mentioned in [1] is implemented in `tail_estimation`.\nAs an example for the double bootstrap method:\n\n```python\nimport numpy as np\nN = 1000\npareto_sample = np.random.pareto(2, 1000)\nsample_to_estimate_index = np.sort(X,)[::-1] # Sort decreasing\ndouble_bootsrap = DoubleBootstrap()\ntail_index = double_bootstrap(N, sample_to_estimate_index)\n```\n\n# References:\n  [1] Markovich, N. (2008). Nonparametric analysis of univariate heavy-tailed data: research and practice (Vol. 753). John Wiley & Sons.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "order statistics,outliers,outlier analysis,anomaly detection,pareto distribution,heavy-tailed distributions,visualization,simulation",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "orderstats",
    "package_url": "https://pypi.org/project/orderstats/",
    "platform": null,
    "project_url": "https://pypi.org/project/orderstats/",
    "project_urls": {
      "homepage": "https://github.com/Selozhd/orderstats",
      "repository": "https://github.com/Selozhd/orderstats"
    },
    "release_url": "https://pypi.org/project/orderstats/0.1.3/",
    "requires_dist": [
      "dataclass_array",
      "matplotlib",
      "numpy",
      "scipy",
      "pytest>=3.4 ; extra == \"dev\"",
      "pylint>=2.6.0 ; extra == \"dev\"",
      "yapf ; extra == \"dev\""
    ],
    "requires_python": ">=3.7",
    "summary": "Research repository on outlier detection and analysis of heavy-tailed distributions.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15343045,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fb23fbf505f8272068da80a720e1d882ecd4ee014fba12e1c7b1376fb2ef67d",
          "md5": "f5e1015393a0f26fdf6808b222466d2d",
          "sha256": "5cf34dc1e4bffe541872d18deff0071305d18c7d4e2f0e3ba82293f5f8337dfd"
        },
        "downloads": -1,
        "filename": "orderstats-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5e1015393a0f26fdf6808b222466d2d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25005,
        "upload_time": "2022-10-08T09:39:56",
        "upload_time_iso_8601": "2022-10-08T09:39:56.588049Z",
        "url": "https://files.pythonhosted.org/packages/2f/b2/3fbf505f8272068da80a720e1d882ecd4ee014fba12e1c7b1376fb2ef67d/orderstats-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "071f9a9310576da76459db2d2be4ccdc4449e9f9a324cb4e99008c13738f112e",
          "md5": "ac1580a56ff34b68a3d8c4825b59d5ee",
          "sha256": "f92331ceb61326c179b5700ba31b591f91f40bb6945dc7ac0917b23e868e1234"
        },
        "downloads": -1,
        "filename": "orderstats-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ac1580a56ff34b68a3d8c4825b59d5ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 21958,
        "upload_time": "2022-10-08T09:39:58",
        "upload_time_iso_8601": "2022-10-08T09:39:58.912776Z",
        "url": "https://files.pythonhosted.org/packages/07/1f/9a9310576da76459db2d2be4ccdc4449e9f9a324cb4e99008c13738f112e/orderstats-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2fb23fbf505f8272068da80a720e1d882ecd4ee014fba12e1c7b1376fb2ef67d",
        "md5": "f5e1015393a0f26fdf6808b222466d2d",
        "sha256": "5cf34dc1e4bffe541872d18deff0071305d18c7d4e2f0e3ba82293f5f8337dfd"
      },
      "downloads": -1,
      "filename": "orderstats-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f5e1015393a0f26fdf6808b222466d2d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 25005,
      "upload_time": "2022-10-08T09:39:56",
      "upload_time_iso_8601": "2022-10-08T09:39:56.588049Z",
      "url": "https://files.pythonhosted.org/packages/2f/b2/3fbf505f8272068da80a720e1d882ecd4ee014fba12e1c7b1376fb2ef67d/orderstats-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "071f9a9310576da76459db2d2be4ccdc4449e9f9a324cb4e99008c13738f112e",
        "md5": "ac1580a56ff34b68a3d8c4825b59d5ee",
        "sha256": "f92331ceb61326c179b5700ba31b591f91f40bb6945dc7ac0917b23e868e1234"
      },
      "downloads": -1,
      "filename": "orderstats-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ac1580a56ff34b68a3d8c4825b59d5ee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 21958,
      "upload_time": "2022-10-08T09:39:58",
      "upload_time_iso_8601": "2022-10-08T09:39:58.912776Z",
      "url": "https://files.pythonhosted.org/packages/07/1f/9a9310576da76459db2d2be4ccdc4449e9f9a324cb4e99008c13738f112e/orderstats-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}