{
  "info": {
    "author": "Charlie Suy",
    "author_email": "floppi.disky@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Pyxel Server\nA simple to use API for integration between your [Pyxel](https://github.com/kitao/pyxel) games with servers.  \n![preview](https://github.com/FloppiDisk/pyxel_server/raw/main/preview.gif?raw=true)\n# Install\n```\npip install pyxel-server\n```  \nor\n```\nhttps://pypi.org/project/pyxel-server/\n```\n# Example\n## Code\n### client.py\n```python\nimport pyxel\nfrom pyxel_server import client\n\nclass App:\n    def __init__(self):\n        self.address = input(\"Server Address: \")\n        self.port = input(\"Server Port: \")\n        self.clientPort = input(\"Client Port: \")\n        self.username = input(\"Choose Username: \")\n        self.Updating = False\n        self.points = 0\n        # Connects to server and runs pyxel app\n        self.client = client.run(self.address, self.port, False, \"127.0.0.1\", self.clientPort)\n        self.client.connect(self.username)\n        self.client.appinfo()\n        pyxel.init(self.client.width, self.client.height, caption=self.username, fps=self.client.fps, quit_key=pyxel.KEY_F2)\n        pyxel.run(self.update, self.draw)\n    def update(self):\n        self.Updating = True\n        # Custom Quit Key, Force quit is F2\n        if pyxel.btnr(pyxel.KEY_ESCAPE):\n            self.client.disconnect()\n            pyxel.quit()\n        # Checks if button is pressed and sends to server\n        self.client.btnp(pyxel.KEY_SPACE)\n        # Every half second it will get the user's points\n        if pyxel.frame_count % round(pyxel.DEFAULT_FPS / 2) == 0:\n            self.points = self.client.getLocalVar(\"points\")\n        self.Updating = False\n    def draw(self):\n        if not self.Updating:\n            # Clear screen\n            pyxel.cls(0)\n            # Draw score\n            pyxel.text(0, 0, str(self.points), 10)\n            # Render all objects\n            self.client.renderAll()\nApp()\n```\n### server.py\n```python\nfrom pyxel_server import pyxelobj, server\nimport pyxel\nimport random\n\ndef update(self):\n    # If the dot is not activated\n    if not self.variables.activated:\n        # Create a new one and send it\n        self.variables.x = random.randrange(0, 256)\n        self.variables.y = random.randrange(0, 144)\n        obj = pyxelobj.obj(pyxelobj.new(\"dot\", self.variables.x, self.variables.y, 0, 0, [[7]]))\n        self.variables.activated = True\n        self.sendObj(obj)\n    # Loops through every single user\n    for Username, User in self.Users.__getallusers__().items():\n        # If user pressed space\n        if User.input.get(str(pyxel.KEY_SPACE)) and self.variables.visible:\n            # Add 1 point to user\n            User.variables.points += 1\n            # Set the dot to be not activated\n            self.variables.pressed = False\n            User.input[str(pyxel.KEY_SPACE)] = False\n            \nLocalVariables = {\n    \"points\": 0\n}\nGlobalVariables = {\n    \"pressed\": False,\n    \"x\": random.randrange(0, 256),\n    \"y\": random.randrange(0, 144)\n}\nserver.run(\"127.0.0.1\", \"5000\", 256, 144, 12, update,LocalVariables=LocalVariables, GlobalVariables=GlobalVariables)\n```\n## What will happen\nThis is a game of who pressed space first when the dot apears.\n## [More](https://github.com/FloppiDisk/pyxel_server/tree/main/examples)\n# Contributing\n## Issues and Suggestions\nSubmit the issue or suggestion using the issue tracker, make sure it has not been repeated.  \n### Issues\nIt should include the os, error, python modules used, python version and other relevant information.  \n### Suggestions\nIt should include sample usages, mock-ups and other relevant information.  \n## Patches, Feature implementations, and Optimizations\nPlease submit it in a pull request, issues should be listed if it is a fix.  \n  Note: All pull requests submitted are licensed under the [MIT License](https://github.com/FloppiDisk/pyxel_server/blob/main/LICENSE)  \n# Reference\nNote: `pyxel_server`'s intended features are not fully implemented yet.\n## server\n### System\n* `run(Host, Port, AppWidth, AppHeight, AppFPS, UpdateScript, [WebScript], [InitScript], [Variables])`  \nInitializes the server and runs it.  \n`Host`: The ip or domain of the server. e.g. `Host=\"127.0.0.1\"`  \n`Port`: The port to be opened in the `Host`. e.g. `Port=\"5000\"`  \n`AppWidth`: The width of the client's window when connected. e.g. `AppWidth=256`  \n`AppHeight`: The height of the client's window when connected. e.g. `AppHeight=144`  \n`AppFPS`: The FPS of the client's window when connected. e.g. `AppFPS=24`  \n`UpdateScript`: The function to run every 1/`AppFPS`. e.g. `UpdateScript=update`  \n  Note: The function must have the parameter `self`.  \n`WebScript`: The custom flask events and routes. e.g. `WebScript=web`  \n  Note: The function must have the parameter `self` & `app`.  \n`InitScript`: The custom initialization function that will be called when `server()` is called. e.g. `InitScript=init`  \n  Note: The function must have the parameter `self`.  \n`Variables`: A dictionary of variables needed. e.g. `Variables={\"Name\": \"Value\"}`  \n### Connection\n* `sendObj(obj)`  \nConverts obj to a json format and sends to all of the clients connected.  \n`obj`: The `pyxelobj.obj` e.g. `obj=pyxelobj.obj()`  \n### Data  \n* `variables`  \nA class of all of the global variables.  \n  Note: The class will not be created if no global variables are specified in `self.run()`  \ne.g.  \n`variables.Name = \"Value\"`  \n### Users  \n* `Users.__getuser__(user)`  \nReturns the User's class.  \n`user`: The name of the user e.g. `user=\"Name\"`  \n* `Users.__getallusers__()`  \nReturns all of the Users in a dictionary in a format like this: `{\"Name\": <Class>, \"Name\": <Class>, ...}`  \n### User\n* `User.variables`\nA class of all of the user's variables.  \n* `User.key`\nThe user's key.  \n* `User.input`  \nA dictionary of all of the keys pressed in a format like this: `{\"Button Number\": Bool, \"Button Number\": Bool, ...}`  \n  Note: In the client, you must use `btnp(button)` for `User.input` to update.  \n## client\n### Connection\n* `run(Host, Port)`  \nInitializes the client with necessary information.  \n`Host`: The ip or domain of the server. e.g. `Host=\"127.0.0.1\"`  \n`Port`: The port to be opened in the `Host`. e.g. `Port=\"5000\"`  \n  Note: You must run this command before anything that needs to use the `client`.  \n* `connect(Username)`  \nConnects the client to the necessary information.  \n`User`: The username e.g. `User=\"Name\"`  \n  Note: You must run this command after `run` before using anything from the `client`.  \n* `request.post(Route, json)`  \nPosts data to a specified route and returns json back.  \n`Route`: The path to post e.g. `Route=\"/var\"`  \n`json`: The json to post to the `Route` e.g. `json={\"Name\": \"Value\"}`  \n### Data\n* `getGlobalvar(Variable, [Value])`  \nReturns & optionaly changes a global variable from the server.  \n`Variable`: The variable name e.g. `Variable=\"Name\"`  \n`Value`: The value of variable e.g. `Value=\"Value\"`  \n  Note: The variable will be changed before it returns.  \n* `getLocalvar(Variable, [Value])`  \nReturns & optionaly changes a local variable only accessible to the client from the server.  \n`Variable`: The variable name e.g. `Variable=\"Name\"`  \n`Value`: The value of variable e.g. `Value=\"Value\"`  \n  Note: The variable will be changed before it returns.  \n### Input\n* `btnp(button)`  \nChecks for a button press [(see pyxel documentation)](https://github.com/kitao/pyxel#input) then sends result to the server and returns result  \n`button`: The button to press e.g. `button=pyxel.KEY_SPACE`  \n* `btnr(button)`  \nChecks for a button release [(see pyxel documentation)](https://github.com/kitao/pyxel#input) then sends result to the server and returns result  \n`button`: The button to press e.g. `button=pyxel.KEY_SPACE`  \n### Objects  \n* `renderAll()`  \nRenders all of the objects in `client.objects`  \n* `addObject(obj)`  \nAdds an object to `client.objects`  \n`obj`: The `pyxelobj.obj` e.g. `obj=pyxelobj.obj()`  \n* `addObject(objname)`  \nRemoves an object from `client.objects`  \n* `predict(obj)`  \nPredicts an object's next location by adding `obj.addX` to `obj.x` and `obj.addY` to `obj.y`  \n`obj`: The `pyxelobj.obj` e.g. `obj=pyxelobj.obj(json)`  \nRemoves an object from `client.objects`  \n`objname`: The name of the object to remove e.g. `objname=\"Name\"`  \n# Used software\n* [python3](https://python.org)\n* [pyxel](https://github.com/kitao/pyxel)  \n* [flask](https://flask.palletsprojects.com)  \n* [requests](https://docs.python-requests.org)  \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FloppiDisk/pyxel_server",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyxel-server",
    "package_url": "https://pypi.org/project/pyxel-server/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyxel-server/",
    "project_urls": {
      "Bug Tracker": "https://github.com/FloppiDisk/pyxel_server/issues",
      "Homepage": "https://github.com/FloppiDisk/pyxel_server"
    },
    "release_url": "https://pypi.org/project/pyxel-server/0.0.3.1/",
    "requires_dist": null,
    "requires_python": ">=3.6.8",
    "summary": "A simple to use API for integration between your Pyxel games with servers.",
    "version": "0.0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10926329,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31cc295ea4831e5a62ab9133755f9423d972ebe4e4dcfbec7732c9bfaeb84a51",
          "md5": "ef6cbacf346394c01def04ef35222048",
          "sha256": "f1ddcfcba5dc53e399861b818808b85924928fa286378efa9002f3c9c648eec6"
        },
        "downloads": -1,
        "filename": "pyxel_server-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef6cbacf346394c01def04ef35222048",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4848,
        "upload_time": "2021-07-12T09:44:38",
        "upload_time_iso_8601": "2021-07-12T09:44:38.812727Z",
        "url": "https://files.pythonhosted.org/packages/31/cc/295ea4831e5a62ab9133755f9423d972ebe4e4dcfbec7732c9bfaeb84a51/pyxel_server-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d68a550252e0f2629078113caf8731aabe1ce57968ef2f4419655772832c6977",
          "md5": "950906135377c6f3b373724f1f950498",
          "sha256": "b0cea166cc117c8aa6148c48b838826b0ab604b34372c687397c0295f45d33a1"
        },
        "downloads": -1,
        "filename": "pyxel_server-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "950906135377c6f3b373724f1f950498",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4525,
        "upload_time": "2021-07-12T09:44:40",
        "upload_time_iso_8601": "2021-07-12T09:44:40.461820Z",
        "url": "https://files.pythonhosted.org/packages/d6/8a/550252e0f2629078113caf8731aabe1ce57968ef2f4419655772832c6977/pyxel_server-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1709db79167519c7197b86aa0307045536f23128fc990e540311e7474bfd4fd",
          "md5": "b66ca023527c940e622a0805e7d6983b",
          "sha256": "1cfcf0caf8bc6a656690f0a0845bf123b009a1835263c2d12b7dbac60e73e753"
        },
        "downloads": -1,
        "filename": "pyxel_server-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b66ca023527c940e622a0805e7d6983b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.8",
        "size": 4858,
        "upload_time": "2021-07-12T10:03:30",
        "upload_time_iso_8601": "2021-07-12T10:03:30.474408Z",
        "url": "https://files.pythonhosted.org/packages/e1/70/9db79167519c7197b86aa0307045536f23128fc990e540311e7474bfd4fd/pyxel_server-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aed96d406c970ad91f865e70f8585aad6db0d429a98352b3fd109fb314ee4101",
          "md5": "0e50c6768a935ae9be03fe385de48ce9",
          "sha256": "a5063afa7f87f01659d617f284fefcc02c733e0e7d6caaad5ce92b2558dbff85"
        },
        "downloads": -1,
        "filename": "pyxel_server-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0e50c6768a935ae9be03fe385de48ce9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.8",
        "size": 4538,
        "upload_time": "2021-07-12T10:03:31",
        "upload_time_iso_8601": "2021-07-12T10:03:31.557987Z",
        "url": "https://files.pythonhosted.org/packages/ae/d9/6d406c970ad91f865e70f8585aad6db0d429a98352b3fd109fb314ee4101/pyxel_server-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7df71e87a293c0483fd51cabb70352361ebec11dccb7dba2b99edc5a6da4173",
          "md5": "8b866b123cf1ee4389d6e0ddc9b1a300",
          "sha256": "9cad168fc0a4c3ee076f542ff4b14f0743e9316f6a6599abb9b181d6decfd4f4"
        },
        "downloads": -1,
        "filename": "pyxel_server-0.0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b866b123cf1ee4389d6e0ddc9b1a300",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.8",
        "size": 10031,
        "upload_time": "2021-07-16T09:23:28",
        "upload_time_iso_8601": "2021-07-16T09:23:28.185506Z",
        "url": "https://files.pythonhosted.org/packages/b7/df/71e87a293c0483fd51cabb70352361ebec11dccb7dba2b99edc5a6da4173/pyxel_server-0.0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "942cf13985a250f96fd6aad190d2bacf9dac0516c0b221a4d0ccc875765bc931",
          "md5": "2005b14154509630608ff30aff408fd4",
          "sha256": "1bfed070ed0ef6616c15a765b5380d7b0899d613b7f258d9033ad2c69e5d4390"
        },
        "downloads": -1,
        "filename": "pyxel_server-0.0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2005b14154509630608ff30aff408fd4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.8",
        "size": 11307,
        "upload_time": "2021-07-16T09:23:29",
        "upload_time_iso_8601": "2021-07-16T09:23:29.656638Z",
        "url": "https://files.pythonhosted.org/packages/94/2c/f13985a250f96fd6aad190d2bacf9dac0516c0b221a4d0ccc875765bc931/pyxel_server-0.0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b7df71e87a293c0483fd51cabb70352361ebec11dccb7dba2b99edc5a6da4173",
        "md5": "8b866b123cf1ee4389d6e0ddc9b1a300",
        "sha256": "9cad168fc0a4c3ee076f542ff4b14f0743e9316f6a6599abb9b181d6decfd4f4"
      },
      "downloads": -1,
      "filename": "pyxel_server-0.0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8b866b123cf1ee4389d6e0ddc9b1a300",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.8",
      "size": 10031,
      "upload_time": "2021-07-16T09:23:28",
      "upload_time_iso_8601": "2021-07-16T09:23:28.185506Z",
      "url": "https://files.pythonhosted.org/packages/b7/df/71e87a293c0483fd51cabb70352361ebec11dccb7dba2b99edc5a6da4173/pyxel_server-0.0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "942cf13985a250f96fd6aad190d2bacf9dac0516c0b221a4d0ccc875765bc931",
        "md5": "2005b14154509630608ff30aff408fd4",
        "sha256": "1bfed070ed0ef6616c15a765b5380d7b0899d613b7f258d9033ad2c69e5d4390"
      },
      "downloads": -1,
      "filename": "pyxel_server-0.0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2005b14154509630608ff30aff408fd4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.8",
      "size": 11307,
      "upload_time": "2021-07-16T09:23:29",
      "upload_time_iso_8601": "2021-07-16T09:23:29.656638Z",
      "url": "https://files.pythonhosted.org/packages/94/2c/f13985a250f96fd6aad190d2bacf9dac0516c0b221a4d0ccc875765bc931/pyxel_server-0.0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}