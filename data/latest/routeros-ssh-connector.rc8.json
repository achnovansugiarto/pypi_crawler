{
  "info": {
    "author": "d4vidCN",
    "author_email": "d4vidcn.code@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MikroTik RouterOS SSH connector for Python\n\n<div>\n    <a href=\"https://github.com/d4vidcn/routeros_ssh_connector/blob/master/LICENSE\"><img src=\"https://svgshare.com/i/Xt6.svg\" /></a>\n    <img src=\"https://svgshare.com/i/XtH.svg\" />\n</div>\n\n## Features\nA python-based SSH API for MikroTik devices\n\nThis API allows you to get, update and create configuration on MikroTik devices plus other some extra utilities.\n\nThis project is still in development and will include new functionalities in the future.\n\n***\n\n## Installation\n    pip install routeros_ssh_connector\n\n\n## Usage\n\n#### 1. Import module\n```python\nfrom routeros_ssh_connector import MikrotikDevice\n```\n\n#### 2.  Create a new instance of them\n```python\nrouter = MikroTikDevice()\n```\n\n#### 3.  Connect to device\n```python\nrouter.connect(\"ip_address\", \"username\", \"password\", \"port\")\n```\n> NOTE: If 'port' parameter is not passed to method the default value is 22\n\n#### 4. Call any of the following available methods\n\n**GET**                     |           **UPDATE**          |         **CREATE**        |      **TOOLS**\n:--------------------------:|:-----------------------------:|:-------------------------:|:-------------------:\nget_export_configuration    | update_address_pool           | create_address_pool       | configure_wlan\nget_identity                | update_dhcp_client            | create_dhcp_client        | download_backup\nget_interfaces              | update_dhcp_server_network    | create_dhcp_server        | download_export\nget_ip_addresses            | update_dhcp_server_server     | create_ip_address         | download_file\nget_resources               | update_identity               | create_route              | enable_cloud_dns\nget_routes                  | update_ip_address             | create_user               | make_backup\nget_services                | update_services               |                           | reboot_device\nget_users                   | update_user                   |                           | send_command\n.                           |                               |                           | update_system\n.                           |                               |                           | upload_file\n\n\n```python\ninterfaces = router.get_interfaces()\nprint(interfaces)\n```\n\n#### 5.  Disconnect from device\n```python\nrouter.disconnect()\n```\n\n#### 6.  Delete `router` object (optional)\n```python\ndel router\n```\n***\n\n## Examples\n\n#### Get interfaces from device\n```python\nfrom routeros_ssh_connector import MikrotikDevice\n\nrouter = MikrotikDevice()\nrouter.connect(\"10.0.0.1\", \"myuser\", \"strongpassword\", 2222)\ninterfaces = router.get_interfaces()\nprint(interfaces)\n\nrouter.disconnect()\ndel router\n```\nOutput returns a list containing so many dictionaries as interfaces are found in device :\n\n    [{'status': 'running', 'name': 'ether1', 'default-name': 'ether1', 'type': 'ether', 'mtu': '1500', 'mac_address': 'AA:BB:CC:DD:EE:F0'}, {'status': 'disabled', 'name': 'pwr-line1', 'default-name': 'pwr-line1', 'type': 'ether', 'mtu': '1500', 'mac_address': 'AA:BB:CC:DD:EE:F1'}, {'status': 'disabled', 'name': 'wlan1', 'default-name': 'wlan1', 'type': 'wlan', 'mtu': '1500', 'mac_address': 'B8:69:F4:07:BE:AD'}, {'status': 'running', 'name': 'lo0', 'type': 'bridge', 'mtu': '1500', 'mac_address': 'AA:BB:CC:DD:EE:F2'}]\n\n#### Update FTP service to enable it, set port to 2121 and allow connections only from 192.168.1.0/24 subnet\n```python\nfrom routeros_ssh_connector import MikrotikDevice\n\nrouter = MikrotikDevice()\nrouter.connect(\"10.0.0.1\", \"myuser\", \"strongpassword\", 2222)\nprint(router.update_services(\"ftp\", \"no\", \"2121\", \"192.168.1.0/24\"))\n\nrouter.disconnect()\ndel router\n```\n\nOutput returns `True` if no errors are encountered. In other case, returns the error itself:\n\n    True\n\n#### Create a new enabled route to 172.16.0.0/25 with gateway 192.168.1.1 and distance of 5\n```python\nfrom routeros_ssh_connector import MikrotikDevice\n\nrouter = MikrotikDevice()\nrouter.connect(\"10.0.0.1\", \"myuser\", \"strongpassword\")\nprint(router.create_route(\"172.16.0.0/25\", \"192.168.1.1\", \"5\"))\n\nrouter.disconnect()\ndel router\n```\n\nOutput returns `True` if no errors are encountered. In other case, returns the error itself:\n\n    True\n\n#### Send custom command to device\n```python\nfrom routeros_ssh_connector import MikrotikDevice\n\nrouter = MikrotikDevice()\nrouter.connect(\"10.0.0.1\", \"myuser\", \"strongpassword\")\nprint(router.send_command(\"/system clock print\"))\n\nrouter.disconnect()\ndel router\n```\n\nOutput returns command output without left spaces (left trim):\n\n    time: 19:47:44\n    date: jun/01/2021\n    time-zone-autodetect: yes\n    time-zone-name: Europe/Madrid\n    gmt-offset: +02:00\n    dst-active: yes\n\n#### Download backup from device to local folder\n```python\nfrom routeros_ssh_connector import MikrotikDevice\n\nrouter = MikrotikDevice()\nrouter.connect(\"10.0.0.1\", \"myuser\", \"strongpassword\")\n\n# local_path examples:\n# For Linux: \"/home/myuser\"\n# For Windows: \"C:/Users/myuser/Downloads\"\n\nprint(router.download_backup(\"/home/myuser\"))\nrouter.disconnect()\ndel router\n```\n\nOutput returns a message with full path of downloaded export file:\n\n    /home/mysuser/backup_Mikrotik_07-06-2021_21-38-47.backup\n\n\n#### Export full config from device to terminal output\n```python\nfrom routeros_ssh_connector import MikrotikDevice\n\nrouter = MikrotikDevice()\nrouter.connect(\"10.0.0.1\", \"myuser\", \"strongpassword\")\nprint(router.get_export_configuration())\nrouter.disconnect()\ndel router\n```\n\nOutput returns device config export to terminal:\n\n    # jun/01/2021 19:04:03 by RouterOS 6.47.9\n    # software id = XXXX-XXXX\n    #\n    # model = RouterBOARD mAP L-2nD\n    # serial number = FFFFFFFFFFF\n    /interface pwr-line set [ find default-name=pwr-line1 ] disabled=yes\n    /interface bridge add name=lo0\n    /interface ethernet set [ find default-name=ether1 ] l2mtu=2000\n    /interface wireless set [ find default-name=wlan1 ] ssid=MikroTik\n    /interface wireless security-profiles set [ find default=yes ] supplicant-identity=MikroTik\n    /ip hotspot profile set [ find default=yes ] html-directory=flash/hotspot\n    ...\n\n#### Export full config from device to local folder\n```python\nfrom routeros_ssh_connector import MikrotikDevice\n\nrouter = MikrotikDevice()\nrouter.connect(\"10.0.0.1\", \"myuser\", \"strongpassword\")\nprint(router.download_export(\"/home/myuser\"))\nrouter.disconnect()\ndel router\n```\n\nOutput returns a message with full path of downloaded export file:\n\n    /home/myuser/export_Mikrotik_07-06-2021_21-42-33.rsc\n\n#### Download any file from device\n```python\nfrom routeros_ssh_connector import MikrotikDevice\n\nrouter = MikrotikDevice()\nrouter.connect(\"10.0.0.1\", \"myuser\", \"strongpassword\")\nprint(router.download_file(\"myfile.txt\", \"/home/myuser\"))\nrouter.disconnect()\ndel router\n```\n\nOutput returns a message with full path of downloaded export file:\n\n    /home/myuser/myfile.txt\n\n\n#### Configure 2.4 GHz wlan interface\n```python\nfrom routeros_ssh_connector import MikrotikDevice\n\nrouter = MikrotikDevice()\nrouter.connect(\"10.0.0.1\", \"myuser\", \"strongpassword\")\nprint(router.config_wlan(ssid=\"MySSID\", password=\"12345678\", band=\"2g\"))\nrouter.disconnect()\ndel router\n```\n\nOutput returns a message with configuration result:\n\n    2.4 GHz wlan configured sucessfully!\n\n\n#### Upgrade RouterOS software\n```python\nfrom routeros_ssh_connector import MikrotikDevice\n\nrouter = MikrotikDevice()\nrouter.connect(\"10.0.0.1\", \"myuser\", \"strongpassword\")\nprint(router.update_system())\nrouter.disconnect()\ndel router\n```\n\nOutput returns a message with command result:\n\n    Update available!. Updating RouterOS device...",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/d4vidcn/routeros_ssh_connector",
    "keywords": "mikrotik,routeros,ssh,connector,ssh connector,mikrotik routeros,mikrotik ssh,routeros ssh",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "routeros-ssh-connector",
    "package_url": "https://pypi.org/project/routeros-ssh-connector/",
    "platform": "",
    "project_url": "https://pypi.org/project/routeros-ssh-connector/",
    "project_urls": {
      "Bug Tracker": "https://github.com/d4vidcn/routeros_ssh_connector/issues",
      "Homepage": "https://github.com/d4vidcn/routeros_ssh_connector"
    },
    "release_url": "https://pypi.org/project/routeros-ssh-connector/1.7.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python-based SSH API for MikroTik devices",
    "version": "1.7.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10603144,
  "releases": {
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8036e5004be6aa1ebb5c504d336e31ac2d8cd1c44c15f8f8a50f6247bfca4b0b",
          "md5": "4206746bdc5ac877e518818331a9cd63",
          "sha256": "555d67d56c914273a64437cd7eb7f2a048363cbf360871cad10645b9a1f7bd2b"
        },
        "downloads": -1,
        "filename": "routeros_ssh_connector-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4206746bdc5ac877e518818331a9cd63",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4820,
        "upload_time": "2021-06-03T12:26:22",
        "upload_time_iso_8601": "2021-06-03T12:26:22.048660Z",
        "url": "https://files.pythonhosted.org/packages/80/36/e5004be6aa1ebb5c504d336e31ac2d8cd1c44c15f8f8a50f6247bfca4b0b/routeros_ssh_connector-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ec4b074407e539e14b4c3ab72cfe2a0adb1ae12e91cf70ceddfcde4d4861244",
          "md5": "528ed79d2aaa2b2ed806697a3dd23f6c",
          "sha256": "43d2adbeda7fd4e0cba761e41042a7eb2f35d927e0ad714cef324559f50db3a6"
        },
        "downloads": -1,
        "filename": "routeros_ssh_connector-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "528ed79d2aaa2b2ed806697a3dd23f6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5583,
        "upload_time": "2021-06-03T16:39:39",
        "upload_time_iso_8601": "2021-06-03T16:39:39.287803Z",
        "url": "https://files.pythonhosted.org/packages/1e/c4/b074407e539e14b4c3ab72cfe2a0adb1ae12e91cf70ceddfcde4d4861244/routeros_ssh_connector-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "499790192f02bf489c0d04a2af34963e79beb6810b621a180791372ba9e506e0",
          "md5": "9a515615e0d7d63181fe2945f6f7cde2",
          "sha256": "6f26cdd1b5676f6f7eb6e766ffa4f7007eae47389a7fdb5fd65bcf967322ed54"
        },
        "downloads": -1,
        "filename": "routeros_ssh_connector-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9a515615e0d7d63181fe2945f6f7cde2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7907,
        "upload_time": "2021-06-04T14:18:02",
        "upload_time_iso_8601": "2021-06-04T14:18:02.069317Z",
        "url": "https://files.pythonhosted.org/packages/49/97/90192f02bf489c0d04a2af34963e79beb6810b621a180791372ba9e506e0/routeros_ssh_connector-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e49566816c05d9fbf7bdeee607b9de0294f5bcab73d74b0a4a8899b1d9837e9",
          "md5": "d10695cc4e67636039405f5542ee3b62",
          "sha256": "94244dd0bdecc9701c5b051e459b810999b30f25e876fff7826d9d19f8723c65"
        },
        "downloads": -1,
        "filename": "routeros_ssh_connector-1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d10695cc4e67636039405f5542ee3b62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7913,
        "upload_time": "2021-06-04T15:12:08",
        "upload_time_iso_8601": "2021-06-04T15:12:08.990119Z",
        "url": "https://files.pythonhosted.org/packages/8e/49/566816c05d9fbf7bdeee607b9de0294f5bcab73d74b0a4a8899b1d9837e9/routeros_ssh_connector-1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b9278a5fae55f059cf8d132a05195184948739409036ff72542816166922de8",
          "md5": "fb728a0fa5285fe6e037133bf8d67318",
          "sha256": "9cdddb7152fc97927fa262bd31c1c79482e23feb1215ab4b9f43debc71685997"
        },
        "downloads": -1,
        "filename": "routeros_ssh_connector-1.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fb728a0fa5285fe6e037133bf8d67318",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7892,
        "upload_time": "2021-06-07T07:37:01",
        "upload_time_iso_8601": "2021-06-07T07:37:01.725984Z",
        "url": "https://files.pythonhosted.org/packages/1b/92/78a5fae55f059cf8d132a05195184948739409036ff72542816166922de8/routeros_ssh_connector-1.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "caf8179451393c89e1e19a71847a6c3f138150b12ed9b8e177dfe86ebc6bfa7a",
          "md5": "33712a0e14de5005271ef4845a2dbf2c",
          "sha256": "972870b0b3149dc951f4b1d776ec4d9cd036c56023a6646c9b2be074fdb6e59f"
        },
        "downloads": -1,
        "filename": "routeros_ssh_connector-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "33712a0e14de5005271ef4845a2dbf2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10723,
        "upload_time": "2021-06-08T09:50:05",
        "upload_time_iso_8601": "2021-06-08T09:50:05.782809Z",
        "url": "https://files.pythonhosted.org/packages/ca/f8/179451393c89e1e19a71847a6c3f138150b12ed9b8e177dfe86ebc6bfa7a/routeros_ssh_connector-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2471a10921e34f015b3daa47b1dde6238827834b3aa927b940495984a3299ba",
          "md5": "bf85873ff84eac3c404d321c3c0ac429",
          "sha256": "1a03afee878748f8df88f4ea26255120ae0324ce0d3b75ca6510941125113c8c"
        },
        "downloads": -1,
        "filename": "routeros_ssh_connector-1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "bf85873ff84eac3c404d321c3c0ac429",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12306,
        "upload_time": "2021-06-09T16:38:42",
        "upload_time_iso_8601": "2021-06-09T16:38:42.542318Z",
        "url": "https://files.pythonhosted.org/packages/b2/47/1a10921e34f015b3daa47b1dde6238827834b3aa927b940495984a3299ba/routeros_ssh_connector-1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10cd9657fc7c95896a9e0be9797a02d3aebe2130d47c298aff5448e901e83611",
          "md5": "575ef32f11b678adc232b9aa4517adea",
          "sha256": "ced0043e4d9ff40a84de0e29c24db1634ce45d8a9bcf10f548fbc4992b70b851"
        },
        "downloads": -1,
        "filename": "routeros_ssh_connector-1.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "575ef32f11b678adc232b9aa4517adea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12280,
        "upload_time": "2021-06-09T16:44:39",
        "upload_time_iso_8601": "2021-06-09T16:44:39.549045Z",
        "url": "https://files.pythonhosted.org/packages/10/cd/9657fc7c95896a9e0be9797a02d3aebe2130d47c298aff5448e901e83611/routeros_ssh_connector-1.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10cd9657fc7c95896a9e0be9797a02d3aebe2130d47c298aff5448e901e83611",
        "md5": "575ef32f11b678adc232b9aa4517adea",
        "sha256": "ced0043e4d9ff40a84de0e29c24db1634ce45d8a9bcf10f548fbc4992b70b851"
      },
      "downloads": -1,
      "filename": "routeros_ssh_connector-1.7.1.tar.gz",
      "has_sig": false,
      "md5_digest": "575ef32f11b678adc232b9aa4517adea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12280,
      "upload_time": "2021-06-09T16:44:39",
      "upload_time_iso_8601": "2021-06-09T16:44:39.549045Z",
      "url": "https://files.pythonhosted.org/packages/10/cd/9657fc7c95896a9e0be9797a02d3aebe2130d47c298aff5448e901e83611/routeros_ssh_connector-1.7.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}