{
  "info": {
    "author": "Aymeric Augustin",
    "author_email": "aymeric.augustin@m4x.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": ".. image:: logo/horizontal.svg\n   :width: 480px\n   :alt: websockets\n\n|rtd| |pypi-v| |pypi-pyversions| |pypi-l| |pypi-wheel| |tests|\n\n.. |rtd| image:: https://readthedocs.org/projects/websockets/badge/?version=latest\n   :target: https://websockets.readthedocs.io/\n\n.. |pypi-v| image:: https://img.shields.io/pypi/v/websockets.svg\n    :target: https://pypi.python.org/pypi/websockets\n\n.. |pypi-pyversions| image:: https://img.shields.io/pypi/pyversions/websockets.svg\n    :target: https://pypi.python.org/pypi/websockets\n\n.. |pypi-l| image:: https://img.shields.io/pypi/l/websockets.svg\n    :target: https://pypi.python.org/pypi/websockets\n\n.. |pypi-wheel| image:: https://img.shields.io/pypi/wheel/websockets.svg\n    :target: https://pypi.python.org/pypi/websockets\n\n.. |tests| image:: https://github.com/aaugustin/websockets/workflows/tests/badge.svg?branch=master\n   :target: https://github.com/aaugustin/websockets/actions?workflow=tests\n\nWhat is ``websockets``?\n-----------------------\n\n``websockets`` is a library for building WebSocket servers_ and clients_ in\nPython with a focus on correctness and simplicity.\n\n.. _servers: https://github.com/aaugustin/websockets/blob/master/example/server.py\n.. _clients: https://github.com/aaugustin/websockets/blob/master/example/client.py\n\nBuilt on top of ``asyncio``, Python's standard asynchronous I/O framework, it\nprovides an elegant coroutine-based API.\n\n`Documentation is available on Read the Docs. <https://websockets.readthedocs.io/>`_\n\nHere's how a client sends and receives messages:\n\n.. copy-pasted because GitHub doesn't support the include directive\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    import asyncio\n    import websockets\n\n    async def hello(uri):\n        async with websockets.connect(uri) as websocket:\n            await websocket.send(\"Hello world!\")\n            await websocket.recv()\n\n    asyncio.get_event_loop().run_until_complete(\n        hello('ws://localhost:8765'))\n\nAnd here's an echo server:\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    import asyncio\n    import websockets\n\n    async def echo(websocket, path):\n        async for message in websocket:\n            await websocket.send(message)\n\n    asyncio.get_event_loop().run_until_complete(\n        websockets.serve(echo, 'localhost', 8765))\n    asyncio.get_event_loop().run_forever()\n\nDoes that look good?\n\n`Get started with the tutorial! <https://websockets.readthedocs.io/en/stable/intro.html>`_\n\nWhy should I use ``websockets``?\n--------------------------------\n\nThe development of ``websockets`` is shaped by four principles:\n\n1. **Simplicity**: all you need to understand is ``msg = await ws.recv()`` and\n   ``await ws.send(msg)``; ``websockets`` takes care of managing connections\n   so you can focus on your application.\n\n2. **Robustness**: ``websockets`` is built for production; for example it was\n   the only library to `handle backpressure correctly`_ before the issue\n   became widely known in the Python community.\n\n3. **Quality**: ``websockets`` is heavily tested. Continuous integration fails\n   under 100% branch coverage. Also it passes the industry-standard `Autobahn\n   Testsuite`_.\n\n4. **Performance**: memory use is configurable. An extension written in C\n   accelerates expensive operations. It's pre-compiled for Linux, macOS and\n   Windows and packaged in the wheel format for each system and Python version.\n\nDocumentation is a first class concern in the project. Head over to `Read the\nDocs`_ and see for yourself.\n\n.. _Read the Docs: https://websockets.readthedocs.io/\n.. _handle backpressure correctly: https://vorpus.org/blog/some-thoughts-on-asynchronous-api-design-in-a-post-asyncawait-world/#websocket-servers\n.. _Autobahn Testsuite: https://github.com/aaugustin/websockets/blob/master/compliance/README.rst\n\nWhy shouldn't I use ``websockets``?\n-----------------------------------\n\n* If you prefer callbacks over coroutines: ``websockets`` was created to\n  provide the best coroutine-based API to manage WebSocket connections in\n  Python. Pick another library for a callback-based API.\n* If you're looking for a mixed HTTP / WebSocket library: ``websockets`` aims\n  at being an excellent implementation of :rfc:`6455`: The WebSocket Protocol\n  and :rfc:`7692`: Compression Extensions for WebSocket. Its support for HTTP\n  is minimal — just enough for a HTTP health check.\n* If you want to use Python 2: ``websockets`` builds upon ``asyncio`` which\n  only works on Python 3. ``websockets`` requires Python ≥ 3.6.1.\n\nWhat else?\n----------\n\nBug reports, patches and suggestions are welcome!\n\nTo report a security vulnerability, please use the `Tidelift security\ncontact`_. Tidelift will coordinate the fix and disclosure.\n\n.. _Tidelift security contact: https://tidelift.com/security\n\nFor anything else, please open an issue_ or send a `pull request`_.\n\n.. _issue: https://github.com/aaugustin/websockets/issues/new\n.. _pull request: https://github.com/aaugustin/websockets/compare/\n\nParticipants must uphold the `Contributor Covenant code of conduct`_.\n\n.. _Contributor Covenant code of conduct: https://github.com/aaugustin/websockets/blob/master/CODE_OF_CONDUCT.md\n\n``websockets`` is released under the `BSD license`_.\n\n.. _BSD license: https://github.com/aaugustin/websockets/blob/master/LICENSE\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aaugustin/websockets",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gcwebsockets",
    "package_url": "https://pypi.org/project/gcwebsockets/",
    "platform": null,
    "project_url": "https://pypi.org/project/gcwebsockets/",
    "project_urls": {
      "Homepage": "https://github.com/aaugustin/websockets"
    },
    "release_url": "https://pypi.org/project/gcwebsockets/9.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6.1",
    "summary": "An implementation of the WebSocket Protocol (RFC 6455 & 7692)",
    "version": "9.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14978204,
  "releases": {
    "9.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75be4d1ab3011cb8c60c3b95d7e4defc360c74a8e3a8b859669e048954e4353d",
          "md5": "ab15aa9ab6401d9dcb497a17fdf4c3b7",
          "sha256": "bc97dddba72cf2f49070c6a644bf3aa330cae9a58380fc1c7e4c04b60e9f6922"
        },
        "downloads": -1,
        "filename": "gcwebsockets-9.1.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "ab15aa9ab6401d9dcb497a17fdf4c3b7",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.6.1",
        "size": 98345,
        "upload_time": "2022-09-02T20:46:46",
        "upload_time_iso_8601": "2022-09-02T20:46:46.143137Z",
        "url": "https://files.pythonhosted.org/packages/75/be/4d1ab3011cb8c60c3b95d7e4defc360c74a8e3a8b859669e048954e4353d/gcwebsockets-9.1.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "75be4d1ab3011cb8c60c3b95d7e4defc360c74a8e3a8b859669e048954e4353d",
        "md5": "ab15aa9ab6401d9dcb497a17fdf4c3b7",
        "sha256": "bc97dddba72cf2f49070c6a644bf3aa330cae9a58380fc1c7e4c04b60e9f6922"
      },
      "downloads": -1,
      "filename": "gcwebsockets-9.1.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ab15aa9ab6401d9dcb497a17fdf4c3b7",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.6.1",
      "size": 98345,
      "upload_time": "2022-09-02T20:46:46",
      "upload_time_iso_8601": "2022-09-02T20:46:46.143137Z",
      "url": "https://files.pythonhosted.org/packages/75/be/4d1ab3011cb8c60c3b95d7e4defc360c74a8e3a8b859669e048954e4353d/gcwebsockets-9.1.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}