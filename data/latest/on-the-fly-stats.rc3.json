{
  "info": {
    "author": "JA",
    "author_email": "cppgent0@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "# On the fly Stats #\r\n\r\nThis is a python module that provides a way to run standard deviation on the fly i.e. without storing data.\r\n\r\n### Sample code ###\r\n\r\nsee sample.py for a full example\r\n\r\n```python\r\nfrom on_the_fly_stats import OTFStats\r\n\r\nstats = OTFStats()\r\n\r\n# create an instance of the std deviation\r\nstats.create_stddev('some_tag')\r\n# add some values to it\r\nstats.update_stddev('some_tag', 1)\r\nstats.update_stddev('some_tag', 2)\r\nstats.update_stddev('some_tag', 3)\r\n\r\n# have other instances of it\r\nstats.update_stddev('other_tag', 0.1)\r\nstats.update_stddev('other_tag', 0.2)\r\nstats.update_stddev('other_tag', 0.3)\r\n\r\n# show the current data for a specific instance\r\nprint(stats.stddev['some_tag'].stddev)\r\nprint(stats.stddev['some_tag'].variance)\r\nprint(stats.stddev['some_tag'].mean)\r\nprint(stats.stddev['some_tag'].num_elements)\r\n\r\n# show the current data for a specific instance\r\nprint(stats.stddev['other_tag'].stddev)\r\n\r\n# some a summary report\r\nstats.set_report_writer(print)\r\nstats.report_minimal()\r\n# skip the headers for even less data\r\nstats.report_minimal(headers=False)\r\n```\r\n\r\n### Min/Max  ###\r\n\r\nHolds the minimum and maximum of the values provided so far\r\n\r\n```python\r\nimport random\r\n\r\nfrom on_the_fly_stats import OTFStats\r\n\r\nstats = OTFStats()\r\n\r\nstats.create_min_max('minmax1')\r\nfor _ in range(10):\r\n    stats.update_min_max('minmax1', random.randint(0, 10))\r\n\r\nprint(stats.min_max['minmax1'].minimum)\r\nprint(stats.min_max['minmax1'].maximum)\r\nprint(stats.min_max['minmax1'].num_elements)\r\n```\r\n\r\n### Average  ###\r\n\r\nHolds the average of the values provided so far\r\n\r\n```python\r\nimport random\r\n\r\nfrom on_the_fly_stats import OTFStats\r\n\r\nstats = OTFStats()\r\nstats.create_average('avg1')\r\nstats.update_average('avg1', random.uniform(0, 10))\r\nstats.update_average('avg1', random.uniform(0, 10))\r\n\r\nprint(stats.average['avg1'].average)\r\nprint(stats.average['avg1'].anum_elementss)\r\n```\r\n\r\n### Standard Deviation ###\r\n\r\nHolds the standard deviation, mean and variance of the values provided so far\r\n\r\n```python\r\nimport random\r\n\r\nfrom on_the_fly_stats import OTFStats\r\n\r\nstats = OTFStats()\r\nstats.create_stddev('sd1')\r\nstats.update_stddev('sd1', random.random())\r\nstats.update_stddev('sd1', random.random())\r\nstats.update_stddev('sd1', random.random())\r\n\r\nprint(stats.stddev['sd1'].stddev)\r\nprint(stats.stddev['sd1'].mean)\r\nprint(stats.stddev['sd1'].variance)\r\nprint(stats.stddev['sd1'].num_elementss)\r\n```\r\n\r\n### Counters ###\r\n\r\nHolds counters of the values provided so far\r\n\r\n```python\r\nfrom on_the_fly_stats import OTFStats\r\n\r\nstats = OTFStats()\r\n\r\n# automatically create a counter\r\nstats.inc_counter('counter1')\r\nstats.inc_counter('counter1')  # should be 2\r\nstats.dec_counter('counter2')  # should be -1\r\nstats.inc_counter('counter3')\r\nstats.dec_counter('counter3')  # should be 0\r\n\r\nprint(stats.counters['counter1'].count)\r\nprint(stats.counters['counter2'].count)\r\nprint(stats.counters['counter3'].count)\r\n```\r\n\r\n### Reports ###\r\n\r\nThere are two builtin reports:\r\n\r\n* a minimal report\r\n* a full report\r\n\r\nTo use the builtin reports a function that writes a single line must be provided.\r\nThe simplest is to use print().\r\n\r\n```python\r\nstats.set_report_writer(print)\r\nstats.report_minimal()\r\nstats.report()\r\n```\r\n\r\n#### Minimal report output ####\r\n\r\nThe minimal report shows each stat kept and minimal data with minimal formatting\r\n\r\n```text\r\nMin/Max:\r\n              0               7 minmax1\r\n       0.019647        0.825751 minmax2\r\nAverage:\r\n            4.495221 avg1\r\nStddev\r\n     111.109474 stddev1\r\n       0.300395 stddev2\r\nCounters:\r\n              2 counter1\r\n             -1 counter2\r\n              0 counter3\r\n```\r\n\r\n#### Full report output ####\r\n\r\nThe full report has more formatting and layout\r\n\r\n```text\r\n---- Stats:\r\n\r\n                 Min             Max statistic\r\n     --------------- --------------- ------------------------------------------------------------------\r\n                   0               7 minmax1\r\n            0.019647        0.825751 minmax2\r\n     >>> end of min/max\r\n\r\n             Average statistic\r\n     --------------- ------------------------------------------------------------------\r\n            4.495221 avg1\r\n     >>> end of Averages\r\n\r\n              StdDev statistic\r\n     --------------- ------------------------------------------------------------------\r\n          111.109474 stddev1\r\n            0.300395 stddev2\r\n     >>> end of StdDev\r\n\r\n               Total statistic\r\n     --------------- ------------------------------------------------------------------\r\n                   2 counter1\r\n                  -1 counter2\r\n                   0 counter3\r\n     >>> end of counters\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://bitbucket.org/arrizza-public/on-the-fly-stats/get/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/arrizza-public/on-the-fly-stats/src/master",
    "keywords": "statistics,utility",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "on-the-fly-stats",
    "package_url": "https://pypi.org/project/on-the-fly-stats/",
    "platform": null,
    "project_url": "https://pypi.org/project/on-the-fly-stats/",
    "project_urls": {
      "Download": "https://bitbucket.org/arrizza-public/on-the-fly-stats/get/master.zip",
      "Homepage": "https://bitbucket.org/arrizza-public/on-the-fly-stats/src/master"
    },
    "release_url": "https://pypi.org/project/on-the-fly-stats/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "On the fly statistics including standard deviation, average, min/max and counters",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17218812,
  "releases": {
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7058abaa162070e870b440d76e93431c2ab9977168ccd14d23caddb428a937af",
          "md5": "b18341f94a69b11621f34a02eefc6095",
          "sha256": "7a45cb90790cdfb6f40b2da27528539ebb01a980b9cc14e3fe945c299a3c72fb"
        },
        "downloads": -1,
        "filename": "on-the-fly-stats-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b18341f94a69b11621f34a02eefc6095",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8251,
        "upload_time": "2023-02-27T00:44:56",
        "upload_time_iso_8601": "2023-02-27T00:44:56.552572Z",
        "url": "https://files.pythonhosted.org/packages/70/58/abaa162070e870b440d76e93431c2ab9977168ccd14d23caddb428a937af/on-the-fly-stats-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf21e9ac517c0622717eb1273a3ebb2fc9843daa14164f2a05c7b3c4a4a29c67",
          "md5": "b97efa0d375e8d1ae0f5f068e579ccb7",
          "sha256": "3be8c121ec111ed8a15ed72188ace1320595ebee361996ea73e1d35765ef1c44"
        },
        "downloads": -1,
        "filename": "on-the-fly-stats-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "b97efa0d375e8d1ae0f5f068e579ccb7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8908,
        "upload_time": "2023-03-05T04:54:25",
        "upload_time_iso_8601": "2023-03-05T04:54:25.860219Z",
        "url": "https://files.pythonhosted.org/packages/cf/21/e9ac517c0622717eb1273a3ebb2fc9843daa14164f2a05c7b3c4a4a29c67/on-the-fly-stats-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22d204512d0d9fb665d6db147dc8ce5c9630ce93e12b03be9f8190fff787c2c5",
          "md5": "144ac5762834987f7dca94c72b08ebe9",
          "sha256": "ad509b3cde8a2e9bec83b01ce65dec1c20cdd99a37f51f5a76d162cf26b006d6"
        },
        "downloads": -1,
        "filename": "on-the-fly-stats-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "144ac5762834987f7dca94c72b08ebe9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9269,
        "upload_time": "2023-03-09T04:02:39",
        "upload_time_iso_8601": "2023-03-09T04:02:39.696875Z",
        "url": "https://files.pythonhosted.org/packages/22/d2/04512d0d9fb665d6db147dc8ce5c9630ce93e12b03be9f8190fff787c2c5/on-the-fly-stats-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22d204512d0d9fb665d6db147dc8ce5c9630ce93e12b03be9f8190fff787c2c5",
        "md5": "144ac5762834987f7dca94c72b08ebe9",
        "sha256": "ad509b3cde8a2e9bec83b01ce65dec1c20cdd99a37f51f5a76d162cf26b006d6"
      },
      "downloads": -1,
      "filename": "on-the-fly-stats-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "144ac5762834987f7dca94c72b08ebe9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9269,
      "upload_time": "2023-03-09T04:02:39",
      "upload_time_iso_8601": "2023-03-09T04:02:39.696875Z",
      "url": "https://files.pythonhosted.org/packages/22/d2/04512d0d9fb665d6db147dc8ce5c9630ce93e12b03be9f8190fff787c2c5/on-the-fly-stats-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}