{
  "info": {
    "author": "Mohit Udupa",
    "author_email": "mohitudupa@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SnowGlobe\nA python package to manage docker development environments\n\n\n## Installation\nPrerequisite\n - Requires python version 3.6 or higher\n - Requires docker CLI setup on host machine\n\nInstallation\n```\n$ pip install snowglobe==0.0.7\n```\n\n## Usage\n> List of all commands\n\nCommand:\n```\n$ snowglobe -h\nusage: snowglobe [-h] {list,template,inspect,setup,remove,reset,start,exec,stop} ...\n\npositional arguments:\n  {list,template,inspect,setup,remove,reset,start,exec,stop}\n                        Sub commands for snowglobe.\n    list                Get list configured environments.\n    template            Prints out a config template.\n    inspect             Inspect a configured environment.\n    setup               Setup a new environment.\n    remove              Remove an existing environment.\n    reset               Reset an existing environment.\n    start               Start an existing environment.\n    exec                Exec commands on an existing environment.\n    stop                Stop an existing environment.\n\noptional arguments:\n  -h, --help            show this help message and exit\n```\n\n## List existing environments\n> This command will list all existing environments setup through snowglobe.\nBy default this will show the demo environment which can be used for reference. \n\nCommand:\n```\n$ snowglobe list\n```\n\nExample\n```\n$ snowglobe list\nEnvironments:\nwebapp\n```\n---\n## Get template config\n> This command will print a template with placeholder config.\n\nCommand:\n```\n$ snowglobe template\n```\n\nExample:\n```\n$ snowglobe template > webapp.json\n$ cat webapp.json\n{\n    \"image\": \"IMAGE:TAG\",\n    \"name\": \"NAME\",\n    \"create\": {\n        \"command\": [],\n        \"entrypoint\": \"ENTRYPOINT\",\n        \"envs\": {\n            \"KEY\": \"VALUE\"\n        },\n        \"ports\": [\n            {\n                \"containerPort\": 8080,\n                \"hostPort\": 8080\n            }\n        ],\n        \"volumes\": [\n            {\n                \"hostPath\": \"/PATH/ON/HOST\",\n                \"containerPath\": \"/PATH/ON/CONTAINER\",\n                \"mode\": \"rw\"\n            }\n        ],\n        \"options\": \"-it --hostname HOSTNAME\"\n    },\n    \"start\": \"\",\n    \"execs\": [\n        {\n            \"name\": \"EXEC-NAME\",\n            \"command\": \"EXEC-COMMAND\",\n            \"options\": \"-it\"\n        }\n    ]\n}\n```\n---\n## Setup an environment\n> This command will setup a new docker environment on snowglobe\n\nCommand:\n```\n$ snowglobe setup <environment_name> -f <config_file>\n```\n\nExample:\n> In this example we will setup an nginx dev environment called webapp. You can use the template command to help create \nthis nginx environment. Create a file webapp.json and enter the following config in it. Note that we are not using any \nshared volumes in this example. \n```\n{\n    \"image\": \"nginx:latest\",\n    \"name\": \"webapp\",\n    \"create\": {\n        \"command\": [],\n        \"entrypoint\": \"\",\n        \"envs\": {\n            \"SERVER\": \"webapp\"\n        },\n        \"ports\": [\n            {\n                \"containerPort\": 80,\n                \"hostPort\": 8080\n            }\n        ],\n        \"volumes\": [],\n        \"options\": \"-it --hostname webapp\"\n    },\n    \"start\": \"\",\n    \"execs\": [\n        {\n            \"name\": \"shell\",\n            \"command\": \"bash\",\n            \"options\": \"-it\"\n        },\n        {\n            \"name\": \"echo\",\n            \"command\": \"echo Hello World\",\n            \"options\": \"-it\"\n        },\n    ]\n}\n```\n```\n$ snowglobe setup webapp.json\nSetting up environment: webapp\nCreating container: webapp\n```\n## Inspect an environment\n> This command will print the configuration of an environment in json format\n\nCommand:\n```\n$ snowglobe inspect <environment_name>\n```\n\nExample: \n```\n$ snowglobe inspect webapp\n{\n    \"image\": \"nginx:latest\",\n    \"name\": \"webapp\",\n    \"create\": {\n        \"command\": [],\n        \"entrypoint\": \"\",\n        \"envs\": {\n            \"SERVER\": \"webapp\"\n        },\n        \"ports\": [\n            {\n                \"containerPort\": 80,\n                \"hostPort\": 8080\n            }\n        ],\n        \"volumes\": [],\n        \"options\": \"-it --hostname webapp\"\n    },\n    \"start\": \"\",\n    \"execs\": [\n        {\n            \"name\": \"shell\",\n            \"command\": \"bash\",\n            \"options\": \"-it\"\n        },\n        {\n            \"name\": \"echo\",\n            \"command\": \"echo Hello World\",\n            \"options\": \"-it\"\n        },\n    ]\n}\n```\n---\n## Start an environment\n> This command will start the environment. The start options in the config will be used while starting the container.\n\nCommand:\n```\n$ snowglobe start <environment_name>\n```\n\nExample:\n```\n$ snowglobe start webapp\nStarting container: webapp\nwebapp\n```\n---\n## Exec a command in an environment\n> This command will execute a profile in the environment. The environment must be already started before running this \ncommand. It takes in the name of the execution profile.\n\nCommand:\n```\n$ snowglobe exec <environment_name> <exec_name>\n```\n\nExample:\n```\n$ snowglobe exec webapp echo\nExecuting container: webapp. Exec name: echo\n'Hello World'\n\n$ snowglobe exec webapp shell\nExecuting container: webapp. Exec name: shell\nroot@webapp:/#\n```\n---\n## Stop an environment\n> This command will stop a running environment.\n\nCommand:\n```\n$ snowglobe stop <environment_name>\n```\n\nExample:\n```\n$ snowglobe stop webapp\nStopping container: webapp\n```\n---\n## Reset an environment\n> This command will reset an existing environment. This will recreate the container.\n\nCommand:\n```\n$ snowglobe reset <environment_name>\n```\n\nExample:\n```\n$ snowglobe reset webapp\nResetting environment: webapp\nStopping container: webapp\nDeleting container: webapp\nCreating container: webapp\n```\n---\n## Remove an environment\n> This command will remove an environment.\n\nCommand:\n```\n$ snowglobe remove <environment_name>\n```\n\nExample:\n```\n$ snowglobe remove webapp\nDeleting environment: webapp\nStopping container: webapp\nDeleting container: webapp\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mohitudupa/SnowGlobe",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "snowglobe",
    "package_url": "https://pypi.org/project/snowglobe/",
    "platform": "any",
    "project_url": "https://pypi.org/project/snowglobe/",
    "project_urls": {
      "Homepage": "https://github.com/mohitudupa/SnowGlobe"
    },
    "release_url": "https://pypi.org/project/snowglobe/0.0.7/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A python package to manage docker development environments.",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7268069,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48d12e572191718633e833fe37d4e4dd195288fa0730462914f11e19a129c25d",
          "md5": "a192ecbf22b2c816960bdaa2935a88b7",
          "sha256": "fd7f32aca28d3d57811928fe4964e987a91baf941ac7397df55d53686b8ecbdb"
        },
        "downloads": -1,
        "filename": "snowglobe-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a192ecbf22b2c816960bdaa2935a88b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6903,
        "upload_time": "2020-05-16T12:34:35",
        "upload_time_iso_8601": "2020-05-16T12:34:35.554575Z",
        "url": "https://files.pythonhosted.org/packages/48/d1/2e572191718633e833fe37d4e4dd195288fa0730462914f11e19a129c25d/snowglobe-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "298a03bbae8d3e217ededa02dfbd9569f49746592444935d00e6f65e91147680",
          "md5": "39589d85a582b7282662f6aa73197870",
          "sha256": "88703044046ba613119f8c9d337e879ed8d7039b28b68aa8971ffe8cda8d57dc"
        },
        "downloads": -1,
        "filename": "snowglobe-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "39589d85a582b7282662f6aa73197870",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5637,
        "upload_time": "2020-05-16T12:42:01",
        "upload_time_iso_8601": "2020-05-16T12:42:01.208968Z",
        "url": "https://files.pythonhosted.org/packages/29/8a/03bbae8d3e217ededa02dfbd9569f49746592444935d00e6f65e91147680/snowglobe-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09ccb5ccaec69e61776972fea350c5f163373156d3d3585fbfa512d79ab421f0",
          "md5": "6b8cd826a0260f94c468b52dc5925ac5",
          "sha256": "108d620f36ddec17829977e8bf7eac73b5e3096faddcfcdba541bf657d913034"
        },
        "downloads": -1,
        "filename": "snowglobe-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6b8cd826a0260f94c468b52dc5925ac5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5653,
        "upload_time": "2020-05-16T12:44:48",
        "upload_time_iso_8601": "2020-05-16T12:44:48.383884Z",
        "url": "https://files.pythonhosted.org/packages/09/cc/b5ccaec69e61776972fea350c5f163373156d3d3585fbfa512d79ab421f0/snowglobe-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68d1ffca30da460eba72c3200466538a0e7bf126bc3b2375caaa80abb71f7f52",
          "md5": "b5fe98fe20b6f2b0ecc0c80946e92adf",
          "sha256": "12d925a0b4bfdc1d8d4d28f0922a9b8a5ebdef73ac167cb78e1078fa395faf59"
        },
        "downloads": -1,
        "filename": "snowglobe-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b5fe98fe20b6f2b0ecc0c80946e92adf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7852,
        "upload_time": "2020-05-16T17:46:21",
        "upload_time_iso_8601": "2020-05-16T17:46:21.523323Z",
        "url": "https://files.pythonhosted.org/packages/68/d1/ffca30da460eba72c3200466538a0e7bf126bc3b2375caaa80abb71f7f52/snowglobe-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ab9b7bd30dc2614a2aab60a39a7728fe826fdfefdc5e5e1346c9facb0370118",
          "md5": "06330aad63921fa2b5b042d22933caf7",
          "sha256": "26d4006d8bff4287fd3da1acfff62a1c218c8e541ca8b07b05db73b04f371fa4"
        },
        "downloads": -1,
        "filename": "snowglobe-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "06330aad63921fa2b5b042d22933caf7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8573,
        "upload_time": "2020-05-17T06:48:44",
        "upload_time_iso_8601": "2020-05-17T06:48:44.405473Z",
        "url": "https://files.pythonhosted.org/packages/9a/b9/b7bd30dc2614a2aab60a39a7728fe826fdfefdc5e5e1346c9facb0370118/snowglobe-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "276997effa3051c2af3f3bb99213bd7925573910abd8e2b5324dce2921e0d980",
          "md5": "af574ad4a19cf68ee990bee69bdae268",
          "sha256": "3be1a9e9d9329b9427abbf1d2c894bafeaba811a81628633eb82f7d5a6ea5afd"
        },
        "downloads": -1,
        "filename": "snowglobe-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "af574ad4a19cf68ee990bee69bdae268",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8384,
        "upload_time": "2020-05-18T12:49:13",
        "upload_time_iso_8601": "2020-05-18T12:49:13.480568Z",
        "url": "https://files.pythonhosted.org/packages/27/69/97effa3051c2af3f3bb99213bd7925573910abd8e2b5324dce2921e0d980/snowglobe-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "276997effa3051c2af3f3bb99213bd7925573910abd8e2b5324dce2921e0d980",
        "md5": "af574ad4a19cf68ee990bee69bdae268",
        "sha256": "3be1a9e9d9329b9427abbf1d2c894bafeaba811a81628633eb82f7d5a6ea5afd"
      },
      "downloads": -1,
      "filename": "snowglobe-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "af574ad4a19cf68ee990bee69bdae268",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8384,
      "upload_time": "2020-05-18T12:49:13",
      "upload_time_iso_8601": "2020-05-18T12:49:13.480568Z",
      "url": "https://files.pythonhosted.org/packages/27/69/97effa3051c2af3f3bb99213bd7925573910abd8e2b5324dce2921e0d980/snowglobe-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}