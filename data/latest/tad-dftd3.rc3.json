{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Torch autodiff for DFT-D3\n=========================\n\n.. image:: https://img.shields.io/github/v/release/dftd3/tad-dftd3\n   :target: https://github.com/dftd3/tad-dftd3/releases/latest\n   :alt: Release\n\n.. image:: https://img.shields.io/pypi/v/tad-dftd3\n   :target: https://pypi.org/project/tad-dftd3/\n   :alt: PyPI\n\n.. image:: https://img.shields.io/github/license/dftd3/tad-dftd3\n   :target: LICENSE\n   :alt: Apache-2.0\n\n.. image:: https://github.com/dftd3/tad-dftd3/actions/workflows/python.yaml/badge.svg\n   :target: https://github.com/dftd3/tad-dftd3/actions/workflows/python.yaml\n   :alt: CI\n\n.. image:: https://readthedocs.org/projects/tad-dftd3/badge/?version=latest\n   :target: https://tad-dftd3.readthedocs.io\n   :alt: Documentation Status\n\n.. image:: https://codecov.io/gh/dftd3/tad-dftd3/branch/main/graph/badge.svg?token=D3rMNnl26t\n   :target: https://codecov.io/gh/dftd3/tad-dftd3\n   :alt: Coverage\n\n.. image:: https://results.pre-commit.ci/badge/github/dftd3/tad-dftd3/main.svg\n   :target: https://results.pre-commit.ci/latest/github/dftd3/tad-dftd3/main\n   :alt: pre-commit.ci status\n\n\nImplementation of the DFT-D3 dispersion model in PyTorch.\nThis module allows to process a single structure or a batch of structures for the calculation of atom-resolved dispersion energies.\n\nFor details on the D3 dispersion model see\n\n- *J. Chem. Phys.*, **2010**, *132*, 154104 (`DOI <https://dx.doi.org/10.1063/1.3382344>`__)\n- *J. Comput. Chem.*, **2011**, *32*, 1456 (`DOI <https://dx.doi.org/10.1002/jcc.21759>`__)\n\nFor alternative implementations also check out\n\n`simple-dftd3 <https://dftd3.readthedocs.io>`__:\n  Simple reimplementation of the DFT-D3 dispersion model in Fortran with Python bindings\n\n`torch-dftd <https://tech.preferred.jp/en/blog/oss-pytorch-dftd3/>`__:\n  PyTorch implementation of DFT-D2 and DFT-D3\n\n`dispax <https://github.com/awvwgk/dispax>`__:\n  Implementation of the DFT-D3 dispersion model in Jax M.D.\n\n\nInstallation\n------------\n\nThis project is hosted on GitHub at `dftd3/tad-dftd3 <https://github.com/dftd3/tad-dftd3>`__.\nObtain the source by cloning the repository with\n\n.. code::\n\n   git clone https://github.com/dftd3/tad-dftd3\n   cd tad-dftd3\n\nWe recommend using a `conda <https://conda.io/>`__ environment to install the package.\nYou can setup the environment manager using a `mambaforge <https://github.com/conda-forge/miniforge>`__ installer.\nInstall the required dependencies from the conda-forge channel.\n\n.. code::\n\n   mamba env create -n torch -f environment.yml\n   mamba activate torch\n\nFor development, install the following additional dependencies\n\n.. code::\n\n   mamba install black coverage covdefaults mypy pre-commit pylint pytest tox\n\n\nInstall this project with pip in the environment\n\n.. code::\n\n   pip install .\n\nAdd the option ``-e`` for installing in development mode.\n\nThe following dependencies are required\n\n- `numpy <https://numpy.org/>`__\n- `torch <https://pytorch.org/>`__\n- `pytest <https://docs.pytest.org/>`__ (tests only)\n\nYou can check your installation by running the test suite with pytest\n\n.. code::\n\n   pytest tests/ --pyargs tad_dftd3\n\nor tox for testing multiple Python versions\n\n.. code::\n\n  tox\n\n\nExample\n-------\n\nThe following example shows how to calculate the DFT-D3 dispersion energy for a single structure.\n\n.. code:: python\n\n   import torch\n   import tad_dftd3 as d3\n\n   numbers = d3.util.to_number(symbols=\"C C C C N C S H H H H H\".split())\n   positions = torch.tensor(\n       [\n           [-2.56745685564671, -0.02509985979910, 0.00000000000000],\n           [-1.39177582455797, +2.27696188880014, 0.00000000000000],\n           [+1.27784995624894, +2.45107479759386, 0.00000000000000],\n           [+2.62801937615793, +0.25927727028120, 0.00000000000000],\n           [+1.41097033661123, -1.99890996077412, 0.00000000000000],\n           [-1.17186102298849, -2.34220576284180, 0.00000000000000],\n           [-2.39505990368378, -5.22635838332362, 0.00000000000000],\n           [+2.41961980455457, -3.62158019253045, 0.00000000000000],\n           [-2.51744374846065, +3.98181713686746, 0.00000000000000],\n           [+2.24269048384775, +4.24389473203647, 0.00000000000000],\n           [+4.66488984573956, +0.17907568006409, 0.00000000000000],\n           [-4.60044244782237, -0.17794734637413, 0.00000000000000],\n       ]\n   )\n   param = {\n       \"a1\": torch.tensor(0.49484001),\n       \"s8\": torch.tensor(0.78981345),\n       \"a2\": torch.tensor(5.73083694),\n   }\n\n   energy = d3.dftd3(numbers, positions, param)\n\n   torch.set_printoptions(precision=10)\n   print(energy)\n   # tensor([-0.0004075971, -0.0003940886, -0.0003817684, -0.0003949536,\n   #         -0.0003577212, -0.0004110279, -0.0005385976, -0.0001808242,\n   #         -0.0001563670, -0.0001503394, -0.0001577045, -0.0001764488])\n\n\nThe next example shows the calculation of dispersion energies for a batch of structures, while retaining access to all intermediates used for calculating the dispersion energy.\n\n.. code:: python\n\n   import torch\n   import tad_dftd3 as d3\n\n   sample1 = dict(\n       numbers=d3.util.to_number(\"Pb H H H H Bi H H H\".split()),\n       positions=torch.tensor(\n           [\n               [-0.00000020988889, -4.98043478877778, +0.00000000000000],\n               [+3.06964045311111, -6.06324400177778, +0.00000000000000],\n               [-1.53482054188889, -6.06324400177778, -2.65838526500000],\n               [-1.53482054188889, -6.06324400177778, +2.65838526500000],\n               [-0.00000020988889, -1.72196703577778, +0.00000000000000],\n               [-0.00000020988889, +4.77334244722222, +0.00000000000000],\n               [+1.35700257511111, +6.70626379422222, -2.35039772300000],\n               [-2.71400388988889, +6.70626379422222, +0.00000000000000],\n               [+1.35700257511111, +6.70626379422222, +2.35039772300000],\n           ]\n       ),\n   )\n   sample2 = dict(\n       numbers=d3.util.to_number(\"C C C C C C I H H H H H S H C H H H\".split(\" \")),\n       positions=torch.tensor(\n           [\n               [-1.42754169820131, -1.50508961850828, -1.93430551124333],\n               [+1.19860572924150, -1.66299114873979, -2.03189643761298],\n               [+2.65876001301880, +0.37736955363609, -1.23426391650599],\n               [+1.50963368042358, +2.57230374419743, -0.34128058818180],\n               [-1.12092277855371, +2.71045691257517, -0.25246348639234],\n               [-2.60071517756218, +0.67879949508239, -1.04550707592673],\n               [-2.86169588073340, +5.99660765711210, +1.08394899986031],\n               [+2.09930989272956, -3.36144811062374, -2.72237695164263],\n               [+2.64405246349916, +4.15317840474646, +0.27856972788526],\n               [+4.69864865613751, +0.26922271535391, -1.30274048619151],\n               [-4.63786461351839, +0.79856258572808, -0.96906659938432],\n               [-2.57447518692275, -3.08132039046931, -2.54875517521577],\n               [-5.88211879210329, 11.88491819358157, +2.31866455902233],\n               [-8.18022701418703, 10.95619984550779, +1.83940856333092],\n               [-5.08172874482867, 12.66714386256482, -0.92419491629867],\n               [-3.18311711399702, 13.44626574330220, -0.86977613647871],\n               [-5.07177399637298, 10.99164969235585, -2.10739192258756],\n               [-6.35955320518616, 14.08073002965080, -1.68204314084441],\n           ]\n       ),\n   )\n   numbers = d3.util.pack(\n       (\n           sample1[\"numbers\"],\n           sample2[\"numbers\"],\n       )\n   )\n   positions = d3.util.pack(\n       (\n           sample1[\"positions\"],\n           sample2[\"positions\"],\n       )\n   )\n   ref = d3.reference.Reference()\n   rcov = d3.data.covalent_rad_d3[numbers]\n   rvdw = d3.data.vdw_rad_d3[numbers.unsqueeze(-1), numbers.unsqueeze(-2)]\n   r4r2 = d3.data.sqrt_z_r4_over_r2[numbers]\n   param = {\n       \"a1\": torch.tensor(0.49484001),\n       \"s8\": torch.tensor(0.78981345),\n       \"a2\": torch.tensor(5.73083694),\n   }\n\n   cn = d3.ncoord.coordination_number(numbers, positions, rcov, d3.ncoord.exp_count)\n   weights = d3.model.weight_references(numbers, cn, ref, d3.model.gaussian_weight)\n   c6 = d3.model.atomic_c6(numbers, weights, ref)\n   energy = d3.disp.dispersion(\n       numbers, positions, c6, rvdw, r4r2, d3.disp.rational_damping, **param\n   )\n\n   torch.set_printoptions(precision=10)\n   print(torch.sum(energy, dim=-1))\n   # tensor([-0.0014092578, -0.0057840119])\n\n\nContributing\n------------\n\nThis is a volunteer open source projects and contributions are always welcome.\nPlease, take a moment to read the `contributing guidelines <CONTRIBUTING.md>`__.\n\n\nLicense\n-------\n\nLicensed under the Apache License, Version 2.0 (the “License”);\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an *“as is” basis*,\n*without warranties or conditions of any kind*, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nUnless you explicitly state otherwise, any contribution intentionally\nsubmitted for inclusion in this project by you, as defined in the\nApache-2.0 license, shall be licensed as above, without any additional\nterms or conditions.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tad-dftd3",
    "package_url": "https://pypi.org/project/tad-dftd3/",
    "platform": null,
    "project_url": "https://pypi.org/project/tad-dftd3/",
    "project_urls": {
      "Documentation": "https://tad-dftd3.readthedocs.io/en/latest/",
      "Source Code": "https://github.com/dftd3/tad-dftd3",
      "Tracker": "https://github.com/dftd3/tad-dftd3/issues"
    },
    "release_url": "https://pypi.org/project/tad-dftd3/0.1.0/",
    "requires_dist": [
      "numpy",
      "torch",
      "black ; extra == 'dev'",
      "covdefaults ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-random-order ; extra == 'dev'",
      "tox ; extra == 'dev'"
    ],
    "requires_python": ">=3.8",
    "summary": "Torch autodiff DFT-D3 implementation",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16444556,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79896df2cc4356a85f9f048bc2cd110504d1be3e98f1632379cd88801588b1e3",
          "md5": "daf03b1240afd35b731a2d5f6d9669d0",
          "sha256": "da069e364ae535566220fd8dacd3f0ce7f975b025e8bd7f52b4d41d42d28bdf4"
        },
        "downloads": -1,
        "filename": "tad_dftd3-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "daf03b1240afd35b731a2d5f6d9669d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 229401,
        "upload_time": "2022-04-26T12:14:01",
        "upload_time_iso_8601": "2022-04-26T12:14:01.723795Z",
        "url": "https://files.pythonhosted.org/packages/79/89/6df2cc4356a85f9f048bc2cd110504d1be3e98f1632379cd88801588b1e3/tad_dftd3-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e05227ae6c10b17a2553c6d84c55263011c8542cd3ed04eaf9fa737d3751d8f",
          "md5": "47eaa6a54d4757aa2cabd943b8053800",
          "sha256": "c2ac1837f818c8226e34fe1c5c409937f3f16b834677346b63cc81ef011a2f97"
        },
        "downloads": -1,
        "filename": "tad-dftd3-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "47eaa6a54d4757aa2cabd943b8053800",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 226694,
        "upload_time": "2022-04-26T12:14:04",
        "upload_time_iso_8601": "2022-04-26T12:14:04.561188Z",
        "url": "https://files.pythonhosted.org/packages/1e/05/227ae6c10b17a2553c6d84c55263011c8542cd3ed04eaf9fa737d3751d8f/tad-dftd3-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b8a70cf0123f089107a4f23e49bfbb55ba8f27bc2d4fe4462bef39c76286470",
          "md5": "5e9d122eab9104de10416093f0615b26",
          "sha256": "68509ac058afaf8f29da322e9a3a5e94de91d7e64b687a5e8ab3ea1589114d77"
        },
        "downloads": -1,
        "filename": "tad_dftd3-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e9d122eab9104de10416093f0615b26",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 229683,
        "upload_time": "2022-08-22T09:07:08",
        "upload_time_iso_8601": "2022-08-22T09:07:08.460033Z",
        "url": "https://files.pythonhosted.org/packages/2b/8a/70cf0123f089107a4f23e49bfbb55ba8f27bc2d4fe4462bef39c76286470/tad_dftd3-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b67d776cb3fabab89172d2881ef7ceed3765ad423821dcb50972065f72a058af",
          "md5": "f505ffdaa08942899e313c5505658ae8",
          "sha256": "636eac6d7fb1f70005a102d7cff0d00df15a4dd5e8b90dbb8c274054b703c429"
        },
        "downloads": -1,
        "filename": "tad-dftd3-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f505ffdaa08942899e313c5505658ae8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 227106,
        "upload_time": "2022-08-22T09:07:10",
        "upload_time_iso_8601": "2022-08-22T09:07:10.758078Z",
        "url": "https://files.pythonhosted.org/packages/b6/7d/776cb3fabab89172d2881ef7ceed3765ad423821dcb50972065f72a058af/tad-dftd3-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9426cc6cbd4c7efef53070f8347712bd62bbb889c54e2fb164d20e46d5547020",
          "md5": "91b8b00955973b2229172439f819eeb1",
          "sha256": "0a17cf02c77e5b3fca6f8b481908775ba18659af0717b3bff51fe70c91ba21d7"
        },
        "downloads": -1,
        "filename": "tad_dftd3-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91b8b00955973b2229172439f819eeb1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 233702,
        "upload_time": "2023-01-16T12:34:29",
        "upload_time_iso_8601": "2023-01-16T12:34:29.105809Z",
        "url": "https://files.pythonhosted.org/packages/94/26/cc6cbd4c7efef53070f8347712bd62bbb889c54e2fb164d20e46d5547020/tad_dftd3-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7da52798b2c4f5c4d83804526a8f066c3e87a99fead9dc38dc42d7e591d1fcb",
          "md5": "cccbe7eb40fd20abcb15271e99283cdc",
          "sha256": "1aa2e07715e8d40f644ba29a0594de60a20bc00f3b24195602dc5ece8acb7487"
        },
        "downloads": -1,
        "filename": "tad_dftd3-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cccbe7eb40fd20abcb15271e99283cdc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 231110,
        "upload_time": "2023-01-16T12:34:32",
        "upload_time_iso_8601": "2023-01-16T12:34:32.329625Z",
        "url": "https://files.pythonhosted.org/packages/b7/da/52798b2c4f5c4d83804526a8f066c3e87a99fead9dc38dc42d7e591d1fcb/tad_dftd3-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9426cc6cbd4c7efef53070f8347712bd62bbb889c54e2fb164d20e46d5547020",
        "md5": "91b8b00955973b2229172439f819eeb1",
        "sha256": "0a17cf02c77e5b3fca6f8b481908775ba18659af0717b3bff51fe70c91ba21d7"
      },
      "downloads": -1,
      "filename": "tad_dftd3-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "91b8b00955973b2229172439f819eeb1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 233702,
      "upload_time": "2023-01-16T12:34:29",
      "upload_time_iso_8601": "2023-01-16T12:34:29.105809Z",
      "url": "https://files.pythonhosted.org/packages/94/26/cc6cbd4c7efef53070f8347712bd62bbb889c54e2fb164d20e46d5547020/tad_dftd3-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b7da52798b2c4f5c4d83804526a8f066c3e87a99fead9dc38dc42d7e591d1fcb",
        "md5": "cccbe7eb40fd20abcb15271e99283cdc",
        "sha256": "1aa2e07715e8d40f644ba29a0594de60a20bc00f3b24195602dc5ece8acb7487"
      },
      "downloads": -1,
      "filename": "tad_dftd3-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cccbe7eb40fd20abcb15271e99283cdc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 231110,
      "upload_time": "2023-01-16T12:34:32",
      "upload_time_iso_8601": "2023-01-16T12:34:32.329625Z",
      "url": "https://files.pythonhosted.org/packages/b7/da/52798b2c4f5c4d83804526a8f066c3e87a99fead9dc38dc42d7e591d1fcb/tad_dftd3-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}