{
  "info": {
    "author": "Andrew Ross",
    "author_email": "andrew.ross.mail@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.0",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "# nii-plot\n\nPlot mean NIfTI timeseries\n\n[![PyPI Version](https://img.shields.io/pypi/v/nii-plot.svg)](https://pypi.org/project/nii-plot/)\n\n## Installation\n\n```bash\npip install nii-plot\n```\n\n## Motivation\n\nWhen dealing with volumetric timeseries data it can be useful to view a high-level aggregate view of the timeseries.\n\nThis package provides a way to easily visualize 4D NIfTI images by plotting the volume-wise mean timeseries.\n\nFor example, a command like:\n\n```bash\nnii-plot -i '1:' -t 'Multi-delay PCASL' /path/to/nii/file.nii.gz\n```\n\nmight yield something like:\n\n![Line plot example](https://raw.githubusercontent.com/andrewrosss/nii-plot/main/assets/example-line.png \"Line plot example\")\n\n## Usage\n\n`nii-plot` exposes a CLI: `nii-plot`\n\n```text\n$ nii-plot --help\nusage: nii-plot [-h] [-p PERCENTILE | -m MASK] [-i INDEX_SPEC]\n                [-s | -q | -l] [-t TITLE] [-x X_LABEL] [-y Y_LABEL]\n                [-v] [-D]\n                path\n\npositional arguments:\n  path                  The NIfTI file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p PERCENTILE, --percentile PERCENTILE\n                        Percentile to use to threshold the data.\n                        Value in the image above that percentile\n                        will be used in computing the volume-wise\n                        means. (default: 50.0)\n  -m MASK, --mask MASK  Mask NIfTI image. Only non-zero voxels in\n                        this image are included in the mean\n                        computation. Must be the same (spatial)\n                        shape as the input file.\n  -i INDEX_SPEC, --index-spec INDEX_SPEC\n                        Volume indicies to include in the plot. Can\n                        use numpy-like slicing (start:stop[:step]),\n                        for example, to plot the first volume, then\n                        the 10th and 11th volumes, then from the\n                        16th to the end, we could write:\n                        '0,9:11,15:'. (default: '::')\n  -s, --scatter         Plot the mean time series as a scatter plot\n  -q, --paired-scatter  Plot a paired scatter plot (useful for ASL\n                        data)\n  -l, --line            Plot the mean time series as a line chart\n  -t TITLE, --title TITLE\n                        Plot title\n  -x X_LABEL, --x-label X_LABEL\n                        X-axis label\n  -y Y_LABEL, --y-label Y_LABEL\n                        Y-axis label\n  -v, --version         show program's version number and exit\n  -D, --debug           run program in debug mode\n```\n\n## Supplying a mask\n\nBy default, `nii-plot` will threshold the input image, **excluding** from the mean computation **all voxels with values falling below the 50th percentile**.\n\nThis choice of percentile value at which to threshold may not be desirable, hence the value can be changed via the `-p`/`--percentile` option. The argument to this option should be an int or float between `0` and `100`. To effectively \"turn off\" thresholding you can specify: `--percentile=0`.\n\nIf you would prefer that the mean computation happen only across voxels in a specific mask, then you can use the `-m`/`--mask` option (mutually exclusive to `-p`/`--percentile`). In this case the volume-wise mean computation will **only include voxels which correspond to voxels in the mask image whose value is greater than 0.**\n\n## Selecting which volumes to plot\n\nYou can choose which volumes are plotted by `nii-plot` by supplying an **_index spec_**.\n\nAn index spec is a comma-separated list of strings where each entry in the list is either an integer (i.e. a volume index) or a numpy-style slice expression (`start:stop[:step]`).\n\nFor example, to plot the 1st volume, the 10th and 11th volumes, and the 16th volume to the end of the timeseries, we could write: `0,9:11,15:`, i.e. this is a comma-separated list of 3 values: `0`, `9:11`, and `15:`. `0` means include the `0th` volume, `9:11` means include all volumes from index `9` (inclusive) to index `11` (exclusive), `15:` means include all volumes from index `15` (inclusive) to the end of the timeseries.\n\n> IMPORTANT: volume indexing is **_0-based_**\n\n## Plot type\n\nBy default, `nii-plot` will produce a line plot (as shown above). You can change to a scatter plot using the `-s`/`--scatter` flag.\n\nThere is another plot type which is useful when visualizing ASL data, which is the **_paired-scatter_** plot (`-q`/`--paired-scatter`), which looks like:\n\n![Paired-scatter plot example](https://raw.githubusercontent.com/andrewrosss/nii-plot/main/assets/example-paired-scatter.png \"Paired-scatter plot example\")\n\n## Contributing\n\n1. Have or install a recent version of `poetry` (version >= 1.1)\n1. Fork the repo\n1. Setup a virtual environment (however you prefer)\n1. Run `poetry install`\n1. Run `pre-commit install`\n1. Add your changes (adding/updating tests is always nice too)\n1. Commit your changes + push to your fork\n1. Open a PR\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/andrewrosss/nii-plot",
    "keywords": "nifti,neuroimaging,neuro,cli",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nii-plot",
    "package_url": "https://pypi.org/project/nii-plot/",
    "platform": null,
    "project_url": "https://pypi.org/project/nii-plot/",
    "project_urls": {
      "Documentation": "https://github.com/andrewrosss/nii-plot",
      "Homepage": "https://github.com/andrewrosss/nii-plot",
      "Repository": "https://github.com/andrewrosss/nii-plot"
    },
    "release_url": "https://pypi.org/project/nii-plot/1.0.0/",
    "requires_dist": [
      "nibabel (>=3.0.0,<4.0.0)",
      "matplotlib (>=3.0.0,<4.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Plot mean NIfTI timeseries",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13676285,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c5c1a48fe19c8f6abbe2d5578f5df479590e4a9832d6b7b426ca614cc993cd2",
          "md5": "de8262c88ff79e9e15090ebe58e3f74b",
          "sha256": "e82bd7c28f3ffb9c140a0bf75a750c711a994f9b8adec01adf378bb754d8fbec"
        },
        "downloads": -1,
        "filename": "nii_plot-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de8262c88ff79e9e15090ebe58e3f74b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6265,
        "upload_time": "2022-04-30T18:32:55",
        "upload_time_iso_8601": "2022-04-30T18:32:55.749564Z",
        "url": "https://files.pythonhosted.org/packages/3c/5c/1a48fe19c8f6abbe2d5578f5df479590e4a9832d6b7b426ca614cc993cd2/nii_plot-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef702a0e451ba34c2cf51919d56b34f772bc3892d44434240d8d04df0f88e082",
          "md5": "5ef9b70f82993619a4eb7a46afa63636",
          "sha256": "9a8962fb6c8da855f17f24fe8a0e9545925ab5f805da6c6f645ce4116bdfb3ab"
        },
        "downloads": -1,
        "filename": "nii-plot-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5ef9b70f82993619a4eb7a46afa63636",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 6460,
        "upload_time": "2022-04-30T18:32:54",
        "upload_time_iso_8601": "2022-04-30T18:32:54.192740Z",
        "url": "https://files.pythonhosted.org/packages/ef/70/2a0e451ba34c2cf51919d56b34f772bc3892d44434240d8d04df0f88e082/nii-plot-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ab43d1fb72d006f7920770a3e9af97311203a859f12ee410e3a7b79210954e7",
          "md5": "c371b601e44f1d4b9636078f0b59cdf0",
          "sha256": "310953bad9d051ad78ca3a6986716cc8ab614f3dd263897339e4ac138a8e9407"
        },
        "downloads": -1,
        "filename": "nii_plot-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c371b601e44f1d4b9636078f0b59cdf0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6416,
        "upload_time": "2022-04-30T19:20:33",
        "upload_time_iso_8601": "2022-04-30T19:20:33.704429Z",
        "url": "https://files.pythonhosted.org/packages/6a/b4/3d1fb72d006f7920770a3e9af97311203a859f12ee410e3a7b79210954e7/nii_plot-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05e9e04d9562dc5f7488ff43c7375e5a45373521cd986b6c6fc7ed6c6a698b0d",
          "md5": "0be6e10320e7615c4ea4838a0c834d16",
          "sha256": "589d49af51c69035e8e956ad3d9c4638306060041a1923dc43fe5fc8765ca62a"
        },
        "downloads": -1,
        "filename": "nii-plot-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0be6e10320e7615c4ea4838a0c834d16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 6603,
        "upload_time": "2022-04-30T19:20:32",
        "upload_time_iso_8601": "2022-04-30T19:20:32.196654Z",
        "url": "https://files.pythonhosted.org/packages/05/e9/e04d9562dc5f7488ff43c7375e5a45373521cd986b6c6fc7ed6c6a698b0d/nii-plot-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6ab43d1fb72d006f7920770a3e9af97311203a859f12ee410e3a7b79210954e7",
        "md5": "c371b601e44f1d4b9636078f0b59cdf0",
        "sha256": "310953bad9d051ad78ca3a6986716cc8ab614f3dd263897339e4ac138a8e9407"
      },
      "downloads": -1,
      "filename": "nii_plot-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c371b601e44f1d4b9636078f0b59cdf0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 6416,
      "upload_time": "2022-04-30T19:20:33",
      "upload_time_iso_8601": "2022-04-30T19:20:33.704429Z",
      "url": "https://files.pythonhosted.org/packages/6a/b4/3d1fb72d006f7920770a3e9af97311203a859f12ee410e3a7b79210954e7/nii_plot-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05e9e04d9562dc5f7488ff43c7375e5a45373521cd986b6c6fc7ed6c6a698b0d",
        "md5": "0be6e10320e7615c4ea4838a0c834d16",
        "sha256": "589d49af51c69035e8e956ad3d9c4638306060041a1923dc43fe5fc8765ca62a"
      },
      "downloads": -1,
      "filename": "nii-plot-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0be6e10320e7615c4ea4838a0c834d16",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 6603,
      "upload_time": "2022-04-30T19:20:32",
      "upload_time_iso_8601": "2022-04-30T19:20:32.196654Z",
      "url": "https://files.pythonhosted.org/packages/05/e9/e04d9562dc5f7488ff43c7375e5a45373521cd986b6c6fc7ed6c6a698b0d/nii-plot-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}