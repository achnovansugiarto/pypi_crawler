{
  "info": {
    "author": "HaaS Python",
    "author_email": "yinsuo.mys@alibaba-inc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation :: MicroPython"
    ],
    "description": "\n## HaaS Python介绍\nHaaS Python是阿里云IoT团队最新研发的一套低代码编程框架，兼容MicroPython编程规范，依托HaaS平台软硬件积木提供AI、支付、蓝牙配网、云连接、UI等物联网场景常用的能力，从而解决了物联网应用开发难的问题。有了Python轻应用框架，物联网编程不再局限于专业软件开发人员，一般的技术员也可以快速实现复杂的物联网需求。\n更多HaaS Python介绍和开发资料见[HaaS Python官网](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.595660b1dZDX71#/?from=corp),[创意案例](https://haas.iot.aliyun.com/solution?from=crop), [硬件积木](https://haas.iot.aliyun.com/solution/hardware?from=corp)\n\nHaaS Python is a set of low-code programming frameworks newly developed by Alibaba Cloud IoT team. It is compatible with MicroPython programming specifications. It relies on the hardware and software building blocks of the HaaS platform to provide capabilities commonly used in IoT scenarios such as AI, payment, Bluetooth network configuration, cloud connection, and UI. Solve the difficult problem of IoT application development. With the Python light application framework, IoT programming is no longer limited to professional software developers, and general technicians can quickly implement complex IoT requirements.\nFor more HaaS Python introduction and development materials, see [HaaS Python official website](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.595660b1dZDX71#/?from=corp), [Creative Case](https://haas.iot.aliyun.com/solution?from=crop), [Hardware Building Blocks](https://haas.iot.aliyun.com/solution/hardware?from=corp)\n\n## 安装方法\n* 在[HaaS Python官网](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b50127119.0.0.4e1260b1ebMIf1#/)下载开发板对应的固件，并完成固件烧录\n\nDownload the firmware corresponding to the development board at [HaaS Python website](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b50127119.0.0.4e1260b1ebMIf1#/) and complete the firmware burning\n\n* 在开发板上运行以下命令完成安装和使用,如果您在使用过程中遇到问题，欢迎在[github上向我们提交issue](https://github.com/alibaba/AliOS-Things/issues)，我们的工程师会及时解答\n\nRun the following commands on the development board to complete the installation and use. If you encounter problems during use, please submit an issue to us on [github](https://github.com/alibaba/AliOS-Things/issues), Our engineers will answer in time\n```\nimport upip\nupip.install(\"haas-python-tcs34725\")\nimport haas-python-tcs34725\n```\n# 颜色传感器 - tcs34725\n\n## 一、产品简介\nTCS34725是一款低成本，高性价比的RGB全彩颜色识别传感器，传感器通过光学感应来识别物体的表面颜色。支持红、绿、蓝(RGB)三基色和明光感应，可以输出RGB三色的数值以还原周围颜色。\n\n本文介绍的颜色传感器外如下图所示：\n\n<div align=\"center\">\n<img src=./../../docs/images/TCS34725_外观图.png  width=20%/>\n</div>\n\n其管脚定义如下表所示：\n|管脚名称|管脚功能|说明|\n|:-|:-|:-|\n|LED|LED开关|高电平或悬空LED灯亮、低电平LED灯灭|\n|INT|中断输出|低电平有效|\n|VCC|电源正极|3.3V-5V|\n|GND|电源地|-|\n|SCL|I2C接口时钟线|-|\n|SDA|I2C接口数据线|-|\n\n## 二、颜色传感器技术参数\n* 工作电压：3.3-5V<br>\n* 检测距离：3mm-10mm<br>\n* 工作温度：-30°C～+70°C<br>\n* 通信接口：I2C，最高频率：400k<br>\n* 工作电流：65uA<br>\n\n## 三、软件接口\n\nTCS34725颜色传感器HaaS Python驱动：[下载地址](https://github.com/alibaba/AliOS-Things/tree/master/haas_lib_bundles/python/libraries/tcs34725)\n<br>\n\n### TCS34725(i2cObj) - 创建颜色传感器驱动对象\n* 函数原型：\n> colorDev = TCS34725(i2cObj)\n\n* 参数说明：\n\n|参数|类型|必选参数？|说明|\n|-----|----|:---:|----|\n|i2cObj|I2C|是|调用此函数前需确保i2cObj对象已经处于open状态|\n\n* 返回值：\n执行成功，返回颜色传感器对象；创建失败，抛出Exception\n\n* 示例代码：\n\n```python\nimport utime\nfrom driver import I2C\ni2cObj = I2C()\ni2cObj.open('colorSensor')\n\ncolorSensor = TCS34725(i2cObj)\n\nprint('colorSensor init done')\n```\n\n* 输出：\n```log\ncolorSensor init done\n```\n\n### getRGB - 获取环境颜色的RGB值\n* 函数原型：\n> TCS34725.getRGB()\n\n* 参数说明：\n无\n\n* 返回值：\n(R,G,B)分别代表红色（R）、绿色(G)和蓝色(B)三个通道上面的亮度\n> 此API获取到的返回结果经过了3个算法处理，如果想获取颜色传感器的直接测量结果，请参考getRawData的说明。\n\n* 示例代码：\n\n```python\nimport utime\nfrom driver import I2C\ni2cObj = I2C()\ni2cObj.open('colorSensor')\n\ncolorSensor = TCS34725(i2cObj)\nprint('colorSensor init done')\n\nr, g, b = colorSensor.getRGB()\nprint('r:0x%x, g:0x%x, b:0x%x' % (r, g, b))\n```\n\n* 输出：\n<R> <G> <B>分别是对实际颜色的测量结果\n```log\ncolorSensor init done\nr:<R>, g:<G>, b:<B>\n```\n\n### getRawData - 获取颜色传感器原始测量结果\n* 函数原型：\n> TCS34725.getRawData()\n\n* 参数说明：\n无\n\n* 返回值：\n(r, g, b, c)分别代表红色（r）、绿色(g)、蓝色(b)和归一参考值(c)\n\n* 示例代码：\n\n```python\nimport utime\nfrom driver import I2C\ni2cObj = I2C()\ni2cObj.open('colorSensor')\n\ncolorSensor = TCS34725(i2cObj)\nprint('colorSensor init done')\n\nr, g, b, c = colorSensor.getRawData()\nprint('r:0x%x, g:0x%x, b:0x%x, c:0x%x' % (r, g, b, c))\n```\n\n* 输出：\n<R> <G> <B> <C>分别是颜色传感器实际测量结果\n```log\ncolorSensor init done\nr:<R>, g:<G>, b:<B>, c:<C>\n```\n\n### calculateLux - 计算亮度值\n* 函数原型：\n> TCS34725.calculateLux(r, g, b)\n\n* 参数说明：\n\n|参数|类型|必选参数？|说明|\n|-----|----|:---:|----|\n|r|int|是|颜色传感器测量结果原始值中的红色分量, 通过getRawData获取|\n|g|int|是|颜色传感器测量结果原始值中的绿色分量, 通过getRawData获取|\n|b|int|是|颜色传感器测量结果原始值中的绿色分量, 通过getRawData获取|\n\n* 返回值：\n亮度值，单位：流明\n\n* 示例代码：\n\n```python\nimport utime\nfrom driver import I2C\ni2cObj = I2C()\ni2cObj.open('colorSensor')\n\ncolorSensor = TCS34725(i2cObj)\nprint('colorSensor init done')\n\nr, g, b, c = colorSensor.getRawData()\n\nlux = colorSensor.calculateLux(r, g, b)\nprint('luminosity:', lux)\n```\n\n* 输出：\n{L}代表计算后的亮度值\n```log\ncolorSensor init done\nluminosity:{L}\n```\n\n### calculateCT - 计算色温\n* 函数原型：\n> TCS34725.calculateCT(r, g, b)\n\n* 参数说明：\n\n|参数|类型|必选参数？|说明|\n|-----|----|:---:|----|\n|r|int|是|颜色传感器测量结果原始值中的红色分量, 通过getRawData获取|\n|g|int|是|颜色传感器测量结果原始值中的绿色分量, 通过getRawData获取|\n|b|int|是|颜色传感器测量结果原始值中的绿色分量, 通过getRawData获取|\n\n* 返回值：\n色温值\n\n* 示例代码：\n\n```python\nimport utime\nfrom driver import I2C\ni2cObj = I2C()\ni2cObj.open('colorSensor')\n\ncolorSensor = TCS34725(i2cObj)\nprint('colorSensor init done')\n\nr, g, b, c = colorSensor.getRawData()\n\ncolorTemperature = colorSensor.calculateCT(r, g, b)\nprint('color temperature:', colorTemperature)\n```\n\n* 输出：\n{CT}代表转换后的色温值\n```log\ncolorSensor init done\ncolor temperature:{CT}\n```\n\n## 四、接口案例  \n此使用实例在board.json中定义了名为colorSensor的I2C类型的对象。在Python脚本中周期性的量测输入电压并打印到日志中\n\n* 代码：\n\nboard.json配置如下：\n```json\n{\n    \"name\": \"board-name\",\n    \"version\": \"1.0.0\",\n    \"io\": {\n      \"colorSensor\": {\n        \"type\": \"I2C\",\n        \"port\": 1,\n        \"addrWidth\": 7,\n        \"freq\": 400000,\n        \"mode\": \"master\",\n        \"devAddr\": 41\n        }\n    },\n    \"debugLevel\": \"ERROR\",\n    \"repl\": \"disable\"\n}\n```\n\n```python\nimport utime\nfrom driver import I2C\n\ni2cObj = I2C()                    # 创建I2C设备对象\ni2cObj.open('colorSensor')        # 打开名为colorSensor的I2C设备节点\n\ncolorSensor = TCS34725(i2cObj)    # 创建颜色传感器对象\nprint('colorSensor init done')\n\nwhile True:\n    r, g, b = colorSensor.getRGB()                # 读取RGB测量结果\n    print('r:0x%x, g:0x%x, b:0x%x' % (r, g, b))\n\n    r, g, b, c = colorSensor.getRawData()         # 读取颜色传感器测量的原始数据\n\n    lux = colorSensor.calculateLux(r, g, b)       # 将原始数据转化成亮度值\n    print('luminosity:', lux)\n\n    CT = colorSensor.calculateCT(r, g, b)         # 将原始数据转化成色温值\n    print('color temperature:', CT)\n\ni2cObj.close()                    # 关闭I2C设备\ndel colorSensor                   # 删除颜色传感器对象\n```\n\n* 输出：\n\n其中：\n* {CT}代表转换后的色温值\n* {L}代表计算后的亮度值\n\n```python\ncolorSensor init done\n\nluminosity:{L}\ncolor temperature:{CT}\n```\n<br>\n\n## 五、工作原理\n\nTCS34725传感器属于光电传感器，光线进入该传感器后会由光电二极管阵列将入射光转换为R、G、B的光电流，再经过放大转换成模拟电压，模拟电压经过模数转换元件转换成代表电压的数字信号，再对该数字信号进行处理来得到R、G、B测量值。该传感器功能外观图如下图所示：\n<div align=\"center\">\n<img src=./../../docs/images/TCS34725_功能框图.png  width=60%/>\n</div>\n\nTCS34725传感器的工作过程也是典型的颜色传感器，主要经过**光到光电流** -> **电流放大并转化成模拟电压** -> **模拟电压信号转换成数字电压信号**几个步骤。\n\n光到光电流的转换动作是由搭配色彩滤波器的光电二极管阵列完成；电流放大并转换成电压则有一个阻抗放大器来完成；模拟电压信号转换为数字信号则是由模拟数字转换器来完成。\n\n颜色信息转化为数字信息之后，便会存储在芯片内部的寄存器中，主控芯片可以通过传感器对外的接口（TCS34725是通过I2C接口）对颜色信息进行读取。\n\n## 参考文献及购买链接\n[1] [TCS34725数据手册](https://ams.com/documents/20143/36005/TCS3472_DS000390_3-00.pdf)<br>\n[2] [颜色传感器工作原理](http://www.elecfans.com/yuanqijian/sensor/20180309645056.html)<br>\n[3] [购买链接](https://detail.tmall.com/item.htm?id=41323693774)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://haas.iot.aliyun.com/?from=corp",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "haas-python-tcs34725",
    "package_url": "https://pypi.org/project/haas-python-tcs34725/",
    "platform": null,
    "project_url": "https://pypi.org/project/haas-python-tcs34725/",
    "project_urls": {
      "Bug Tracker": "https://github.com/alibaba/AliOS-Things/issues",
      "Documentation": "https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.81b460b1lzwYKw#/?from=corp",
      "Homepage": "https://haas.iot.aliyun.com/?from=corp",
      "Source Code": "https://github.com/alibaba/AliOS-Things"
    },
    "release_url": "https://pypi.org/project/haas-python-tcs34725/0.0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This is tcs34725 driver for HaaS Python. HaaS Python is forked from micropython.",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14183511,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3570701ab497283bfff2d176e580dfe07bc281c45cc77ff9913c762c8267389",
          "md5": "a71b49b057abc4aeafcba187e0f871a7",
          "sha256": "8cc0706469feacdd41e0a883052af7dd313c4264d70c41bb7d81ab2b7a44578a"
        },
        "downloads": -1,
        "filename": "haas-python-tcs34725-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a71b49b057abc4aeafcba187e0f871a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12629,
        "upload_time": "2022-06-06T12:48:48",
        "upload_time_iso_8601": "2022-06-06T12:48:48.769401Z",
        "url": "https://files.pythonhosted.org/packages/b3/57/0701ab497283bfff2d176e580dfe07bc281c45cc77ff9913c762c8267389/haas-python-tcs34725-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21a75de369b05b0ff9759deff5fc5a3436c250e7c7380c4e02d363e0c0a22a26",
          "md5": "d9ffa04d0bf290b88f140ac47a4fa820",
          "sha256": "d821427a723c00312bad50f507b7115a64f36e293374e40d1197733389969d72"
        },
        "downloads": -1,
        "filename": "haas-python-tcs34725-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d9ffa04d0bf290b88f140ac47a4fa820",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12635,
        "upload_time": "2022-06-07T08:42:00",
        "upload_time_iso_8601": "2022-06-07T08:42:00.378548Z",
        "url": "https://files.pythonhosted.org/packages/21/a7/5de369b05b0ff9759deff5fc5a3436c250e7c7380c4e02d363e0c0a22a26/haas-python-tcs34725-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e48c6c75a9863b0ae927657367a1bb066dacbd0f67e09f8983239bf4c7588514",
          "md5": "e785162fc264e32ed7ff3025c2d759d4",
          "sha256": "064c61ddb03cf9032282996ec83fff715715e4fddf21a59f2c03c0470a4f96bb"
        },
        "downloads": -1,
        "filename": "haas-python-tcs34725-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e785162fc264e32ed7ff3025c2d759d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12635,
        "upload_time": "2022-06-08T12:10:12",
        "upload_time_iso_8601": "2022-06-08T12:10:12.433669Z",
        "url": "https://files.pythonhosted.org/packages/e4/8c/6c75a9863b0ae927657367a1bb066dacbd0f67e09f8983239bf4c7588514/haas-python-tcs34725-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47096feea36ad25a20f6d0ad83f2f6e12615e92f6f01ce0fc855b4f42bfd47af",
          "md5": "da7276e8732c69200cd562eeacc28c39",
          "sha256": "179f1cef2dd9da0eda609abd93fef887938475a1f22c3ea85fdbd92fb27ae3aa"
        },
        "downloads": -1,
        "filename": "haas-python-tcs34725-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "da7276e8732c69200cd562eeacc28c39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12635,
        "upload_time": "2022-06-10T07:36:47",
        "upload_time_iso_8601": "2022-06-10T07:36:47.178030Z",
        "url": "https://files.pythonhosted.org/packages/47/09/6feea36ad25a20f6d0ad83f2f6e12615e92f6f01ce0fc855b4f42bfd47af/haas-python-tcs34725-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50f0949bf94ce359d01f480399b59960e4df320263c6c920dfca0301af7eac78",
          "md5": "2efad0020cc32730fe8b5d17b4ca421a",
          "sha256": "c640faa3d0f302552eae0a0c324af8bda011959eaf2888b3da4ac2a75c8b818e"
        },
        "downloads": -1,
        "filename": "haas-python-tcs34725-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2efad0020cc32730fe8b5d17b4ca421a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12638,
        "upload_time": "2022-06-14T11:20:37",
        "upload_time_iso_8601": "2022-06-14T11:20:37.232873Z",
        "url": "https://files.pythonhosted.org/packages/50/f0/949bf94ce359d01f480399b59960e4df320263c6c920dfca0301af7eac78/haas-python-tcs34725-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f4c17fc5facdea59e617b4bac1fe485214a2f5292dda7ec246131515315c88a",
          "md5": "7a9c106677f67e96abcef665b8c69dc5",
          "sha256": "eeda418a61eb75a4d1114bf7c43a2cded16ef1413a95bef93b97954d72e7a63c"
        },
        "downloads": -1,
        "filename": "haas-python-tcs34725-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "7a9c106677f67e96abcef665b8c69dc5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12635,
        "upload_time": "2022-06-15T11:43:50",
        "upload_time_iso_8601": "2022-06-15T11:43:50.284658Z",
        "url": "https://files.pythonhosted.org/packages/9f/4c/17fc5facdea59e617b4bac1fe485214a2f5292dda7ec246131515315c88a/haas-python-tcs34725-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d266abb71f5a59ae01e1ae360cd519dea68dbcc0989334b582872b8d874a8c6",
          "md5": "f981c4ab0a045516aa0b60e0c8180bd6",
          "sha256": "2760d693c2a8429bee57c1d3dc28d3f804b38f52fe6c945b7ac20dd43c04df70"
        },
        "downloads": -1,
        "filename": "haas-python-tcs34725-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f981c4ab0a045516aa0b60e0c8180bd6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12636,
        "upload_time": "2022-06-20T06:41:21",
        "upload_time_iso_8601": "2022-06-20T06:41:21.397766Z",
        "url": "https://files.pythonhosted.org/packages/1d/26/6abb71f5a59ae01e1ae360cd519dea68dbcc0989334b582872b8d874a8c6/haas-python-tcs34725-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d266abb71f5a59ae01e1ae360cd519dea68dbcc0989334b582872b8d874a8c6",
        "md5": "f981c4ab0a045516aa0b60e0c8180bd6",
        "sha256": "2760d693c2a8429bee57c1d3dc28d3f804b38f52fe6c945b7ac20dd43c04df70"
      },
      "downloads": -1,
      "filename": "haas-python-tcs34725-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "f981c4ab0a045516aa0b60e0c8180bd6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12636,
      "upload_time": "2022-06-20T06:41:21",
      "upload_time_iso_8601": "2022-06-20T06:41:21.397766Z",
      "url": "https://files.pythonhosted.org/packages/1d/26/6abb71f5a59ae01e1ae360cd519dea68dbcc0989334b582872b8d874a8c6/haas-python-tcs34725-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}