{
  "info": {
    "author": "The CSDMS team",
    "author_email": "mcflugen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Cython",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": ".. image:: https://github.com/csdms/bmi-wavewatch3/raw/main/docs/source/_static/wavewatch3_logo.png\n   :target: https://github.com/csdms/bmi-wavewatch3\n   :alt: Python interface to WAVEWATCH III data\n\nWAVEWATCH III data in Python\n============================\n\n.. image:: https://github.com/csdms/bmi-wavewatch3/actions/workflows/test.yml/badge.svg\n   :target: https://github.com/csdms/bmi-wavewatch3/actions/workflows/test.yml\n   :alt: Test status\n\n.. image:: https://github.com/csdms/bmi-wavewatch3/workflows/Flake8/badge.svg\n\n.. image:: https://github.com/csdms/bmi-wavewatch3/workflows/Black/badge.svg\n\n\nAbout\n-----\n\nThe *bmi_wavewatch3* Python package provides both a command line interface and a programming interface\nfor downloading and working with `WAVEWATCH III`_ data.\n\n*bmi_wavewatch3* provides access to the following raster data sources,\n\n* 30 year wave hindcast `Phase 1`_\n* 30 year wave hindcast `Phase 2`_\n* Production hindcast Singlegrid_\n* Production hindcast Multigrid_\n\nAll data sources provide both global and regional grids.\n\nInstallation\n------------\n\n*bmi_wavewatch3* can be installed by running ``pip install bmi-wavewatch3``. It requires Python >= 3.8 to run.\n\nIf you simply can't wait for the latest release, you can install *bmi_wavewatch3*\ndirectly from GitHub,\n\n.. code-block:: bash\n\n   $ pip install git+https://github.com/csdms/bmi-wavewatch3\n\n*bmi_wavewatch3* is also available through *conda*, ``conda install bmi-wavewatch3 -c conda-forge``.\n\n\nUsage\n-----\n\nTo get started, you can download *WAVEWATCH III* data by date with the *ww3* command\n(use `ww3 --help` to print a brief message),\n\n.. code-block:: bash\n\n    $ ww3 fetch \"2010-05-22\"\n\nYou can also do this through Python,\n\n.. code-block:: python\n\n    >>> from bmi_wavewatch3 import WaveWatch3\n    >>> WaveWatch3.fetch(\"2010-05-22\")\n\nThe *bmi_wavewatch3* package provides the ``WaveWatch3`` class for downloading data and\npresenting it as an *xarray* *Dataset*.\n\n.. code-block:: python\n\n   >>> from bmi_wavewatch3 import WaveWatch3\n   >>> ww3 = WaveWatch3(\"2010-05-22\")\n   >>> ww3.data\n   <xarray.Dataset>\n   ...\n\nUse the ``inc`` method to advance in time month-by-month,\n\n.. code-block:: python\n\n   >>> ww3.date\n   '2010-05-22'\n   >>> ww3.inc()\n   '2010-06-22'\n   >>> ww3.data.time\n   <xarray.DataArray 'time' ()>\n   array('2010-06-01T00:00:00.000000000', dtype='datetime64[ns]')\n   ...\n\nThis will download new datasets as necessary and load the new data into the ``data`` attribute.\n\n.. note::\n\n   If the new data are not cached on you computer, you will notice a delay while the new\n   data are download. If the ``lazy`` flag is set, the download will only occur once you\n   try to access the data (i.e. ``ww3.data``), otherwise the data are downloaded\n   as soon as the date is set.\n\nExample\n-------\n\nPlot data from the command line\n```````````````````````````````\n\nRunning the following from the command line will plot the variable *significant wave height*\nfrom the WAVEWATCH III *at_4m* grid. Note that the time of day (in this case, 15:00) is\nseparated from the date with a ``T`` (i.e. times can be given as ``YYYY-MM-DDTHH``)\n\n.. code:: bash\n\n  $ ww3 plot --grid=at_4m --data-var=swh \"2010-09-15T15\"\n\n.. image:: https://raw.githubusercontent.com/csdms/bmi-wavewatch3/main/docs/source/_static/hurricane_julia.png\n  :width: 100%\n  :alt: Hurricane Julia\n\nPlot data from Python\n`````````````````````\n\nThis example is similar to the previous but uses the *bmi_wavewatch3* Python interface.\n\n.. code:: python\n\n   >>> from bmi_wavewatch3 import WaveWatch3\n   >>> ww3 = WaveWatch3(\"2009-11-08\")\n\nThe data can be accessed as an *xarray* *Dataset* through the ``data`` attribute.\n\n.. code:: python\n\n   >>> ww3.data\n   <xarray.Dataset>\n   Dimensions:     (step: 241, latitude: 311, longitude: 720)\n   Coordinates:\n       time        datetime64[ns] 2009-11-01\n     * step        (step) timedelta64[ns] 0 days 00:00:00 ... 30 days 00:00:00\n       surface     float64 1.0\n     * latitude    (latitude) float64 77.5 77.0 76.5 76.0 ... -76.5 -77.0 -77.5\n     * longitude   (longitude) float64 0.0 0.5 1.0 1.5 ... 358.0 358.5 359.0 359.5\n       valid_time  (step) datetime64[ns] dask.array<chunksize=(241,), meta=np.ndarray>\n   Data variables:\n       dirpw       (step, latitude, longitude) float32 dask.array<chunksize=(241, 311, 720), meta=np.ndarray>\n       perpw       (step, latitude, longitude) float32 dask.array<chunksize=(241, 311, 720), meta=np.ndarray>\n       swh         (step, latitude, longitude) float32 dask.array<chunksize=(241, 311, 720), meta=np.ndarray>\n       u           (step, latitude, longitude) float32 dask.array<chunksize=(241, 311, 720), meta=np.ndarray>\n       v           (step, latitude, longitude) float32 dask.array<chunksize=(241, 311, 720), meta=np.ndarray>\n   Attributes:\n       GRIB_edition:            2\n       GRIB_centre:             kwbc\n       GRIB_centreDescription:  US National Weather Service - NCEP\n       GRIB_subCentre:          0\n       Conventions:             CF-1.7\n       institution:             US National Weather Service - NCEP\n       history:                 2022-06-08T16:08 GRIB to CDM+CF via cfgrib-0.9.1...\n\nThe ``step`` attribute points to the current time slice into the data (i.e number of three hour increments\nsince the start of the month),\n\n.. code:: python\n\n   >>> ww3.step\n   56\n   >>> ww3.data.swh[ww3.step, :, :].plot()\n\n.. image:: https://raw.githubusercontent.com/csdms/bmi-wavewatch3/main/docs/source/_static/ww3_global_swh.png\n  :width: 100%\n  :alt: Significant wave height\n\n.. _WAVEWATCH III: https://polar.ncep.noaa.gov/waves\n.. _Phase 1: https://polar.ncep.noaa.gov/waves/hindcasts/nopp-phase1.php\n.. _Phase 2: https://polar.ncep.noaa.gov/waves/hindcasts/nopp-phase2.php\n.. _Multigrid: https://polar.ncep.noaa.gov/waves/hindcasts/prod-multi_1.php\n.. _Singlegrid: https://polar.ncep.noaa.gov/waves/hindcasts/prod-nww3.php\n.. _WAVEWATCH III description: https://polar.ncep.noaa.gov/waves/wavewatch/\n.. _WAVEWATCH III hindcasts: http://polar.ncep.noaa.gov/waves/hindcasts/\n.. _WAVEWATCH III thredds: https://www.ncei.noaa.gov/thredds-ocean/catalog/ncep/nww3/catalog.html\n.. _Singlegrid data: https://polar.ncep.noaa.gov/waves/hindcasts/nww3/\n.. _Multigrid data: https://polar.ncep.noaa.gov/waves/hindcasts/multi_1/\n\n\n\n\nCredits\n=======\n\nDevelopment Lead\n----------------\n\n* Eric Hutton (@mcflugen)\n\nContributors\n------------\n\nNone yet. Why not be the first?\n\nRelease Notes\n=============\n\n.. towncrier release notes start\n\n0.2.0 (2022-06-17)\n------------------\n\nNew Features\n````````````\n\n- Added a new subcommand, *plot*, to the *ww3* command-line program.\n  ``ww3 plot`` with download (if the data files are not already cached) and\n  create a plot of the requested data. (`#13 <https://github.com/csdms/bmi-wavewatch3/issues/13>`_)\n\n\nBug Fixes\n`````````\n\n- Fixed a bug in the reporting of an error caused by an invalide datatime\n  string. (`#13 <https://github.com/csdms/bmi-wavewatch3/issues/13>`_)\n\n\n0.1.1 (2022-06-10)\n------------------\n\nOther Changes and Additions\n```````````````````````````\n\n- Set up GitHub Action to create a source distribution and push it to\n  *TestPyPI*. This action is only run if the version tag is a prerelease version\n  (i.e. the version string ends with ``[ab][0-9]+``). (`#10 <https://github.com/csdms/bmi-wavewatch3/issues/10>`_)\n- Set up GitHub Action to create a source distribution and push it to\n  *PyPI*. This action is only run if the version tag is a release version\n  (i.e. the version string doesn't end with ``[ab][0-9]+``). (`#11 <https://github.com/csdms/bmi-wavewatch3/issues/11>`_)\n\n\n0.1.1b1 (2022-06-09)\n--------------------\n\nNew Features\n````````````\n\n- Added ``ww3`` command line interface to download WaveWatch III data by date,\n  region and quantity (significant wave height, wind speed, etc.). (`#1 <https://github.com/csdms/bmi-wavewatch3/issues/1>`_)\n- Added ``WaveWatch3`` class, which is the main access point for users of this package.\n  This class downloads WaveWatch III data files (if not already cached) and provides a\n  view of the data as an xarray Dataset. Users can then advance through the data\n  month-by-month, downloading additional data as necessary. (`#3 <https://github.com/csdms/bmi-wavewatch3/issues/3>`_)\n- Added the ``ww3 clean`` subcommand that removes cached data files. (`#4 <https://github.com/csdms/bmi-wavewatch3/issues/4>`_)\n- Added ``BMIWaveWatch3`` class to provide a Basic Model Interface for the\n  *wavewatch3* package. (`#5 <https://github.com/csdms/bmi-wavewatch3/issues/5>`_)\n- Added additional WaveWatch III data sources from which users can fraw data\n  from. (`#6 <https://github.com/csdms/bmi-wavewatch3/issues/6>`_)\n- Added ``fetch`` method to WaveWatch3 to mimic the command line program\n  ``ww3 fetch``. (`#7 <https://github.com/csdms/bmi-wavewatch3/issues/7>`_)\n- Added additional data sources from which to retreive data from. Available\n  data sources now include: Phase 1, Phase 2, Multigrid, Multigrid-extended,\n  and Multigrid-thredds. (`#7 <https://github.com/csdms/bmi-wavewatch3/issues/7>`_)\n- Added ``ww3 info`` command to print information (e.g. available grids, quantities,\n  etc.) about data sources. (`#7 <https://github.com/csdms/bmi-wavewatch3/issues/7>`_)\n- Added a ``step`` property to ``WaveWatch3`` to track the current time slice\n  of the data cube. This property is also settable so that a user can use it to\n  advance throught the data (additional data are downloaded in the background as\n  needed). (`#8 <https://github.com/csdms/bmi-wavewatch3/issues/8>`_)\n- Dates can now be specified as iso-formatted date/time strings. For example,\n  \"1944-06-06T06:30\". (`#8 <https://github.com/csdms/bmi-wavewatch3/issues/8>`_)\n- Rename package to ``bmi_wavewatch3``. This follows the convention used by other\n  CSDMS data components. (`#9 <https://github.com/csdms/bmi-wavewatch3/issues/9>`_)\n\n\nDocumentation Enhancements\n``````````````````````````\n\n- Added package description, installation, usage, and an example to the\n  documentation. (`#8 <https://github.com/csdms/bmi-wavewatch3/issues/8>`_)\n\n\nOther Changes and Additions\n```````````````````````````\n\n- Set up continuous integration using GitHub actions. This includes tests to\n  ensure that the code is styled according to *black*, is free of lint, and\n  passes all unit tests. (`#2 <https://github.com/csdms/bmi-wavewatch3/issues/2>`_)\n- Added more unit tests, particularly for data sources. (`#7 <https://github.com/csdms/bmi-wavewatch3/issues/7>`_)\n- Added a GitHub action to build the sphinx-based documentation as part of the\n  continuous integration. (`#8 <https://github.com/csdms/bmi-wavewatch3/issues/8>`_)\n- Better error reporting for the command line interface for HTTP errors when\n  retreiving data as well as input validation. (`#8 <https://github.com/csdms/bmi-wavewatch3/issues/8>`_)\n- Set up GitHub Action to create a source distribution and push it to\n  *TestPyPI*. This action is only run if the version tag is a prerelease version\n  (i.e. the version string ends with ``[ab][0-9]+``). (`#10 <https://github.com/csdms/bmi-wavewatch3/issues/10>`_)\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "bmi,wavewatch,data,grib",
    "license": "The MIT License (MIT) =====================  Copyright (c) `2022` `Community Surface Dynamics Modeling System`  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  ",
    "maintainer": "The CSDMS team",
    "maintainer_email": "mcflugen@gmail.com",
    "name": "bmi-wavewatch3",
    "package_url": "https://pypi.org/project/bmi-wavewatch3/",
    "platform": null,
    "project_url": "https://pypi.org/project/bmi-wavewatch3/",
    "project_urls": {
      "changelog": "https://github.com/csdms/bmi-wave-watch-3/blob/main/CHANGES.rst",
      "documentation": "https://github.com/csdms/bmi-wave-watch-3/blob/main/README.rst",
      "homepage": "https://github.com/csdms",
      "repository": "https://github.com/csdms/bmi-wave-watch-3"
    },
    "release_url": "https://pypi.org/project/bmi-wavewatch3/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Fetch WaveWatch3 data.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14165290,
  "releases": {
    "0.1.0b2.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6d2744ad5895b7efdc577e0623b08ab454e54be87dead6735d8fed1f11d9363",
          "md5": "c159c29ac519a34a6df9a1df97c96d61",
          "sha256": "51e9c0be23bc5cb9591958a6eaf1d5757d379b163ab2064ea6fda11c134b737e"
        },
        "downloads": -1,
        "filename": "bmi_wavewatch3-0.1.0b2.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "c159c29ac519a34a6df9a1df97c96d61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 21312,
        "upload_time": "2022-06-09T19:17:48",
        "upload_time_iso_8601": "2022-06-09T19:17:48.402302Z",
        "url": "https://files.pythonhosted.org/packages/f6/d2/744ad5895b7efdc577e0623b08ab454e54be87dead6735d8fed1f11d9363/bmi_wavewatch3-0.1.0b2.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0b3.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b002c0ae6ec066c50b296562ea7f5236e74491d3e379aa79639beed4726bece",
          "md5": "722277705332ad61363d1e37d13c1ff2",
          "sha256": "d47fa6728e6548175806983297893a600f5f21bf5c857622bbda478fef7798a1"
        },
        "downloads": -1,
        "filename": "bmi-wavewatch3-0.1.0b3.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "722277705332ad61363d1e37d13c1ff2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 21305,
        "upload_time": "2022-06-09T19:26:28",
        "upload_time_iso_8601": "2022-06-09T19:26:28.985492Z",
        "url": "https://files.pythonhosted.org/packages/4b/00/2c0ae6ec066c50b296562ea7f5236e74491d3e379aa79639beed4726bece/bmi-wavewatch3-0.1.0b3.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b899a21e372f013a5b2fd01dae7b0a16e4ba7e500b2fc0ff4c7b915aaea61e30",
          "md5": "7ca6c175517f34b3819f63b6ecf69fd9",
          "sha256": "515256b53ebb9f80ad31a63fce38a5d25a001fb57abfe788e72032131db27892"
        },
        "downloads": -1,
        "filename": "bmi-wavewatch3-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7ca6c175517f34b3819f63b6ecf69fd9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 23153,
        "upload_time": "2022-06-10T16:40:24",
        "upload_time_iso_8601": "2022-06-10T16:40:24.630505Z",
        "url": "https://files.pythonhosted.org/packages/b8/99/a21e372f013a5b2fd01dae7b0a16e4ba7e500b2fc0ff4c7b915aaea61e30/bmi-wavewatch3-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a12f7b9df54a97b7589ff26034366a82a7d4d8ce852d6551097bf51d3ef2793b",
          "md5": "38f88f1374d482557f658d916219b3c9",
          "sha256": "ac07cb89f848afa61fcbca086e0533349101daa9620984ef7a08aaafaf28a08a"
        },
        "downloads": -1,
        "filename": "bmi-wavewatch3-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "38f88f1374d482557f658d916219b3c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 24262,
        "upload_time": "2022-06-17T17:19:15",
        "upload_time_iso_8601": "2022-06-17T17:19:15.617478Z",
        "url": "https://files.pythonhosted.org/packages/a1/2f/7b9df54a97b7589ff26034366a82a7d4d8ce852d6551097bf51d3ef2793b/bmi-wavewatch3-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a12f7b9df54a97b7589ff26034366a82a7d4d8ce852d6551097bf51d3ef2793b",
        "md5": "38f88f1374d482557f658d916219b3c9",
        "sha256": "ac07cb89f848afa61fcbca086e0533349101daa9620984ef7a08aaafaf28a08a"
      },
      "downloads": -1,
      "filename": "bmi-wavewatch3-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "38f88f1374d482557f658d916219b3c9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 24262,
      "upload_time": "2022-06-17T17:19:15",
      "upload_time_iso_8601": "2022-06-17T17:19:15.617478Z",
      "url": "https://files.pythonhosted.org/packages/a1/2f/7b9df54a97b7589ff26034366a82a7d4d8ce852d6551097bf51d3ef2793b/bmi-wavewatch3-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}