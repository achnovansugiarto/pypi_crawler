{
  "info": {
    "author": "Dmytro Striletskyi",
    "author_email": "dmytro.striletskyi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "Explicit, strict and automatic project version management based on semantic versioning.\n\n[![](https://github.com/dmytrostriletskyi/project-version/actions/workflows/trunk.yml/badge.svg?branch=master)](https://github.com/dmytrostriletskyi/project-version/actions/workflows/trunk.yml)\n[![](https://img.shields.io/github/release/dmytrostriletskyi/project-version.svg)](https://github.com/dmytrostriletskyi/project-version/releases)\n[![](https://img.shields.io/pypi/v/project-version.svg)](https://pypi.python.org/pypi/project-version)\n\n[![](https://pepy.tech/badge/project-version)](https://pepy.tech/project/project-version)\n[![](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![](https://img.shields.io/pypi/pyversions/project-version.svg)](https://pypi.python.org/pypi/project-version/)\n\n* [Getting started](#getting-started)\n  * [End users](#end-users)\n  * [Semantic versioning](#semantic-versioning)\n  * [Project version](#project-version)\n  * [Motivation](#motivation)\n* [Command line interface](#command-line-interface)\n  * [Installation](#installation)\n  * [Version](#version)\n  * [Help](#help)\n  * [Check](#check)\n  * [Bump](#bump)\n  * [Release](#release)\n  * [Examples](#examples)\n* [FAQ](#faq)\n* [Contributing](#contributing)\n\n## Getting started\n\nIf you found this project useful, but it does not really fit your development and releasing processes, \n[create an issue](https://github.com/dmytrostriletskyi/project-version/issues) with your proposals, please.\n\nAlso, if you have any questions after reading the documentation, check [FAQ](#faq). If there are no answers,\n[create an issue](https://github.com/dmytrostriletskyi/project-version/issues) with your question, please.\n\n### End users\n\nAn end user of the project is a software or DevOps-related engineer who develop, release and deploy projects that need\nexplicit, strict and automatic project version management for tags, images, API and/or libraries.\n\n### Semantic versioning\n\nThere is the [semantic versioning](https://semver.org/). To make a long story short, it is versioning specification\nwith major, minor and patch numbers telling us what the current version of a project is and how to react on its new \nversions' updates. Example of the project version following semantic versioning is `1.3.12` where the first digit is\nmajor number, the second digit is minor number, and the third digit is patch number.\n\nThese are the rules of increasing chose numbers:\n\n1. Increase major version when you make incompatible API changes such as change a name of a required function's or API\n   parameter.\n   \n   ```bash\n   Before changes: 1.3.12\n   After changes: 2.0.0\n   ```\n\n2. Increase minor version when you add functionality in a backwards compatible manner such as add a new optional\n   function's or API parameter.\n   \n   ```bash\n   Before changes: 1.3.12\n   After changes: 1.4.0\n   ```\n\n3. Increase match version when you make backwards compatible bug fixes.\n\n   ```bash\n   Before changes: 1.3.12\n   After changes: 1.3.13\n   ```\n\nYou have probably seen semantic versioning in your programming language's packages such as \n[JavaScript's axios](https://www.npmjs.com/package/axios) (e.g. version `0.24.0`) or \n[Python requests](https://pypi.org/project/requests/) (e.g. version `2.27.1`).\n\n### Project version\n\n`project version` is just a set of principles to maintain project versioning and \n[command line interface](#command-line-interface) that helps not to forget about those principles such as a code style \nand linters to check its compliance. \n\n`project version` requires having a file named `.project-version` in the root directory containing a project version. \nWith this file, developers declare single source to fetch a project version from for things like `Git` tags or `Docker` \nimages. \n\n![](/assets/project-version-file.png)\n\n### Usage\n\nNow you can reuse a project version from `.project-version` file for multiple release-related purposes:\n\n1. There may be situations when you deployed the new version of an application but do not have deployment logs, or you \n   deployed the new version of a application but logs tell nothing, or do not have `Git` information. In all the cases \n   it may be useful to enter your application's runtime and check file `.project-version` to know the exact version \n   which is related to the codebase. \n   \n   ```bash\n   $ cat .project-version\n   1.3.12\n   ```\n\n2. Instead of using `Git` commit SHA or its short version for `Docker` images, you can use a project version.\n   \n   ```bash\n   $ docker build --tag facebook/react:v$(cat .project-version) -f Dockerfile .\n   ```\n\n3. Instead of using `Git` commit SHA or its short version for `GitHub` release version number, you can use a project \n   version.\n   \n   ```yaml\n   on:\n     push:\n       branches:\n         - master\n     \n      jobs:\n       release:\n         runs-on: [ubuntu-latest]\n         steps:\n           - uses: actions/checkout@v2\n           - name: Create Release\n             uses: actions/create-release@v1\n             with:\n               tag_name: $(cat .project-version)\n               release_name: Release v$(cat .project-version)\n   ```\n\n4. Instead of supporting package version (`Python package`, `Gem` or `JAR`) in a dedicated file, you can automatically \n   use a project version. `Python package` with its `setup.py` for building packages is illustrated below:\n  \n   ```python\n   with open('.project-version', 'r') as project_version_file:\n       project_version = project_version_file.read().strip()\n  \n   setup(\n       version=project_version,\n       name='project-version',\n       ...\n   )\n   ```\n\n5. In case you manage an infrastructure as a code (e.g. `Kubernetes`), you may face challenges of supporting multiple\n   major version of your project (e.g. `HTTP API`). Without automation, you should create new major version \n   configurations manually.\n\n   Let us consider the example where you have API's first version deployment configurations:\n    \n   ```bash\n   $ ls deployment/\n   ├── deployment\n   │   ├── v1\n   │   │   └── deployment.yaml\n   │   │   └── ingress.yaml\n   │   │   └── service.yaml\n   \n   $ cat /deployment/v1/deployment.yaml\n   apiVersion: apps/v1\n   kind: Deployment\n   metadata:\n     namespace: api-v1\n   ```\n   \n   When it is time to create API's second version, you can simply copy previous version configurations and substitute\n   `v1` to `v2`.\n\n   ```bash\n   $ echo .project-version\n   2.0.0\n   $ export PROJECT_PREVIOUS_MAJOR_VERSION=$(($cat .project-version)-1)\n   $ echo $PROJECT_MAJOR_VERSION\n   1\n   $ export PROJECT_MAJOR_VERSION=$(cut -d '.' -f 1 <<< \"$(cat .project-version)\")\n   $ echo $PROJECT_PREVIOUS_MAJOR_VERSION\n   2\n   $ cp -r \\\n         deployment/v$PROJECT_PREVIOUS_MAJOR_VERSION deployment/v$PROJECT_MAJOR_VERSION\n   $ find deployment/ -type f -exec sed -i \\\n         's/namespace: v$PROJECT_PREVIOUS_MAJOR_VERSION/namespace: v$PROJECT_MAJOR_VERSION/g' {} +\n   ```\n\n   After, you automatically get deployment configurations for the new version:\n\n   ```yaml\n   $ ls deployment/\n   ├── deployment\n   │   ├── v1\n   │   │   └── deployment.yaml\n   │   │   └── ingress.yaml\n   │   │   └── service.yaml\n   │   ├── v2\n   │   │   └── deployment.yaml\n   │   │   └── ingress.yaml\n   │   │   └── service.yaml\n   \n   $ cat /deployment/v2/deployment.yaml\n   apiVersion: apps/v1\n   kind: Deployment\n   metadata:\n     namespace: api-v2\n   ```\n   \nAnd there is much more cases when relying on a project version from its file makes software releasing easier.\n\n### Maintenance\n\nAll use cases described above requires a project version always be up-to-date and never corrupted. In case it is not,\nyou can release the same version twice, for example. To avoid this, `project-version` is tightly bound to a branching\nmodel with its release life-cycle. Let's consider how `project-version` works with the most popular branching models\n`Git flow` and `GitHub flow`.\n\nIn `Git flow`, developers do features in feature branches and merge them to `develop` branch. When `develop` branch\nhas a set of features merged, a release is created (with a separate branch for it) and deployed. To define a release \nversion, `project-version` requests a developer to make an additional commit into `develop` branch that changes \n`.project-version` file.\n\n<img src=\"/assets/git-flow.png\" width=\"600\" height=\"401\">\n\nIn `GitHub flow`, developers do features in feature branches and merge them to `develop` branch. Once a single feature\nis merged to `develop` branch, a release is immediately created (with no separate branch) and deployed. To define a\nrelease version, `project-version` requests a developer to make an additional commit into a feature branch that changes \n`.project-version` file.\n\n<img src=\"/assets/git-hub-flow.png\" width=\"600\" height=\"316\">\n\n## Command line interface\n\nThis chapter describes a set of command line interface (automation scripts) with descriptive explanation of its \nuse-cases that help to manage a project version. The command line interface is completely optional but helpful. It\nhelps developers not to forget about increasing a project version or auto-increase when needed.\n\n### Installation\n\nInstall using `pip3`:\n\n```bash\n$ pip3 install project-version\n```\n\n### Version\n\nGet the version of the package — `project-version --version`:\n\n```bash\n$ project-version --version\nproject-version, version 0.1.0\n```\n\n### Help\n\nGet the detailed description of all supported commands by the package — `project-version --help`:\n\n```bash\n$ project-version --help\nUsage: project-version [OPTIONS] COMMAND [ARGS]...\n\n  Project version command-line interface.\n\nOptions:\n  --version  Show the version and exit.\n  --help     Show this message and exit.\n\nCommands:\n  check  Check whether specified project version is increased properly.\n```\n\n### Check\n\nCheck whether specified project version is increased properly — `project-version check`.\n\nEnvironment variables:\n\n| Variable     | Type   | Required | Restrictions      | Description                                                                                                                                         |\n|:-------------|:------:|:--------:|:-----------------:|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| ACCESS_TOKEN | String | Yes      | -                 | The provider's [API access token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token). |\n\nParameters:\n\n| Argument     | Type   | Required | Restrictions      | Description                                                                                                                                         |\n|:-------------|:------:|:--------:|:-----------------:|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| provider     | String | Yes      | One of: `GitHub`. | A provider of hosting for software development and version control name.                                                                            |\n| organization | String | Yes      | -                 | The provider's organization name.                                                                                                                   |\n| repository   | String | Yes      | -                 | The provider's repository name.                                                                                                                     |\n| base-branch  | String | Yes      | -                 | A branch to compare a project version with. Usually, a default branch.                                                                              |\n| head-branch  | String | Yes      | -                 | A branch to get its project version for comparison. Usually, a feature branch.                                                                      |\n\nExample of usage:\n\n```bash\n$ project-version check \\\n    --provider=GitHub \\\n    --organization=facebook \\\n    --repository=react \\\n    --base-branch=master \\\n    --head-branch=map-children-components\n```\n\nA use case:\n\nThe use case of the command is to prevent merging feature branches to `develop` or `master` that have not increased\na project version. As illustrated below: if both `master ` and feature branch have project version `1.1.3`, the command\nexits with failed status code, if feature branch has `1.2.0` and `master` has `1.1.3` (lower version), the command exits \nwith succeed status code.\n\n<img src=\"/assets/check-command-use-case.png\" width=\"600\" height=\"202\">\n\nThe example of a failed pipeline:\n\n<img src=\"/assets/check-command-pipeline-example.png\">\n\nThe example of a pipeline configuration:\n\n```yaml\n---\nname: Pull request workflow\n\non:\n  pull_request_target:\n    branches:\n      - master\n\njobs:\n  check-project-version:\n    runs-on: [ubuntu-latest]\n    steps:\n      - uses: actions/checkout@v2\n      - name: Install project version\n        run: pip3 install project-version\n      - name: Check a project version\n        env:\n          ACCESS_TOKEN: ${{secrets.GIT_HUB_ACCESS_TOKEN}}\n        run: |\n          project-version check \\\n              --provider=GitHub \\\n              --organization=facebook \\\n              --repository=react \\\n              --base-branch=master \\\n              --head-branch=map-children-components\n```\n\n### Bump\n\nBump the minor version of a project version — `project-version bump`.\n\nEnvironment variables:\n\n| Variable     | Type   | Required | Restrictions      | Description                                                                                                                                         |\n|:-------------|:------:|:--------:|:-----------------:|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| ACCESS_TOKEN | String | Yes      | -                 | The provider's [API access token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token). |\n\nParameters:\n\n| Argument     | Type   | Required | Restrictions      | Description                                                                                                                                         |\n|:-------------|:------:|:--------:|:-----------------:|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| provider     | String | Yes      | One of: `GitHub`. | A provider of hosting for software development and version control name.                                                                            |\n| organization | String | Yes      | -                 | The provider's organization name.                                                                                                                   |\n| repository   | String | Yes      | -                 | The provider's repository name.                                                                                                                     |\n| base-branch  | String | Yes      | -                 | A branch to get a project version from. Usually, a default branch.                                                                              |\n| head-branch  | String | Yes      | -                 | A branch to push bumped project version to. Usually, a feature branch.                                                                      |\n\nThe example of usage:\n\n```bash\n$ project-version bump \\\n    --provider=GitHub \\\n    --organization=facebook \\\n    --repository=react \\\n    --base-branch=master \\\n    --head-branch=dependabot/npm/core-js-3.6.4\n```\n\nA use case:\n\nThere are tools like [Dependabot](https://github.com/dependabot) that automatically do updates to your codebase.\n`Dependabot` tracks your requirements' versions and keep them up-to-date through proposing pull requests. The example\nof changes is illustrated below:\n\n<img src=\"/assets/bump-command-auto-changes.png\">\n\nUsually, codebase is covered with tests and there is no need to review such small changes and developers setup these \npull requests to be merged automatically. But it will be impossible with `project version` as it requires a project\nversion to be increased manually. The bump command can be applied here, you just configure that if a pull request\nis opened by `Dependabot` and then execute the bumping command.\n\n<img src=\"/assets/bump-command-auto-commit.png\">\n\nThe example of a pipeline configuration:\n\n```yaml\n---\nname: Pull request workflow\n\non:\n  pull_request_target:\n    branches:\n      - master\n\njobs:\n  check-project-version:\n    runs-on: [ubuntu-latest]\n    steps:\n      - uses: actions/checkout@v2\n      - name: Install project version\n        run: pip3 install project-version\n      - name: Bump project version if it is non-human pull request\n        if: ${{ github.actor == 'dependabot[bot]' || github.actor == 'facebook-bot' }}\n        env:\n          ACCESS_TOKEN: ${{secrets.GIT_HUB_ACCESS_TOKEN}}\n        run: |\n          project-version bump \\\n              --provider=GitHub \\\n              --organization=facebook \\\n              --repository=react \\\n              --base-branch=master \\\n              --head-branch=map-children-components\n```\n\n### Release\n\nMake a release — `project-version release`.\n\nEnvironment variables:\n\n| Variable     | Type   | Required | Restrictions      | Description                                                                                                                                         |\n|:-------------|:------:|:--------:|:-----------------:|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| ACCESS_TOKEN | String | Yes      | -                 | The provider's [API access token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token). |\n\nParameters:\n\n| Argument        | Type   | Required | Restrictions      | Description                                                                                                                                         |\n|:----------------|:------:|:--------:|:-----------------:|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| provider        | String | Yes      | One of: `GitHub`. | A provider of hosting for software development and version control name.                                                                            |\n| organization    | String | Yes      | -                 | The provider's organization name.                                                                                                                   |\n| repository      | String | Yes      | -                 | The provider's repository name.                                                                                                                     |\n| branch          | String | Yes      | -                 | A branch to make a release for                                                                                                                      |\n| project-version | String | Yes      | -                 | A project version to make a release with.                                                                                                           |\n| access-token    | String | Yes      | -                 | The provider's [API access token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token). |\n\nThe example of usage:\n\n```bash\n$ project-version release \\\n    --provider=GitHub \\\n    --organization=dmytrostriletskyi \\\n    --repository=project-version \\\n    --branch=master \\\n    --project-version=1.1.3\n```\n\nA use case:\n\nWhen you [squash merge](https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/managing-commits/squashing-commits)\nyour feature branches, your `develop` or `master` commits history might looks like:\n\n```\nAllow taxi drivers to schedule a break (#567)\nIntegrate Spotify (#566)\nCreate OpenAPI spification (#565)\n```\n\nIf you pick one and create a release with a commit as the title, you will have `Allow taxi drivers to schedule a break (#567)`.\nIf you add a release version, it will go uglier like `Release v3.6.1: Allow taxi drivers to schedule a break (#567)`.\nThe release command remove all the mess and create the following title `v3.6.1: allow taxi drivers to schedule a break`.\n\n<img src=\"/assets/release-command-example.png\">\n\nThe example of a pipeline configuration:\n\n```yaml\n---\nname: Master workflow\n\non:\n  push:\n    branches:\n      - master\n\njobs:\n  release:\n    runs-on: [ubuntu-latest]\n    outputs:\n      project_version: ${{ steps.get_project_version.outputs.project_version }}\n    steps:\n      - uses: actions/checkout@v2\n      - name: Install project version\n        run: pip3 install project-version\n      - name: Get a version of the project\n        id: get_project_version\n        run: echo \"::set-output name=project_version::$(cat .project-version)\"\n      - name: Release\n        env:\n          ACCESS_TOKEN: ${{secrets.GIT_HUB_ACCESS_TOKEN}}\n        run: |\n          project-version release \\\n              --provider=GitHub \\\n              --organization=facebook \\\n              --repository=react \\\n              --branch=master \\\n              --project-version=${{ steps.get_project_version.outputs.project_version }}\n```\n\n## FAQ\n\n1. **Q:** `project-version`is written in `Python`, but my project's stack is different. Why should I support Python` for \n   this?\n  \n   **A:** When you develop a project, you do not need `Python`, but only `.project-version` file. The only place you need\n   `Python` on is your pipelines runner such as `GitHub Actions`, `Jenkins` or `GitLab CI/CD` to run the command line\n   interface. You can use isolated environment such as `Docker` containers:\n\n   ```yaml\n   jobs:\n     check-project-version:\n       runs-on: [ubuntu-latest]\n       container:\n         image: python:3.9.0-slim\n       ...\n   ```\n\n2. **Q:** Why should a developer increase a project version manually for a feature, or a set of features?\n\n   **A:** When a developer does a change, the only they know a degree of change: either patch, minor or major. There is\n   no machine learning model or other software that can describe a degree of change instead of a person who made those\n   changes.\n   \n3. **Q:** If we merge feature branches often, many concurrent feature branches should pull new project version often. Is\n   it fine?\n\n   **A:** Yes, it is fine. It is a price you pay for the project management. Also, keep in mind that most time you\n    develop a feature, and only little time you pull other feature branches' changes and merge.\n\n## Contributing\n\nClone the project and install requirements:\n\n```bash\n$ git clone git@github.com:dmytrostriletskyi/accessify.git && cd accessify\n$ make install-requirements\n```\n\nAfter changes, ensure the code quality remains the same:\n\n```bash\n$ make check-requirements-safety\n$ make check-code-complexity\n$ make check-code-quality\n$ make check-yaml-standards\n```\n\nIf you are new for the contribution, please read:\n\n* About pull requests — https://help.github.com/en/articles/about-pull-requests\n* Create a pull request — https://help.github.com/en/articles/creating-a-pull-request-from-a-fork\n* The beginners guide to contributing — https://akrabat.com/the-beginners-guide-to-contributing-to-a-github-project/\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dmytrostriletskyi/project-version",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "project-version",
    "package_url": "https://pypi.org/project/project-version/",
    "platform": "",
    "project_url": "https://pypi.org/project/project-version/",
    "project_urls": {
      "Homepage": "https://github.com/dmytrostriletskyi/project-version"
    },
    "release_url": "https://pypi.org/project/project-version/0.7.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Explicit, strict and automatic project version management based on semantic versioning.",
    "version": "0.7.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12730766,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "777296e878276dc081e5efd80e4c54dbd562861a51541d6303c380cbcf81623b",
          "md5": "aeb90b43e2ae760b1425a9f67f207a7f",
          "sha256": "98f3e1066db6b026ae2e0e04b943b34621ab65d1a78eb1aae1d584772228b869"
        },
        "downloads": -1,
        "filename": "project-version-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aeb90b43e2ae760b1425a9f67f207a7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4884,
        "upload_time": "2022-01-16T17:05:45",
        "upload_time_iso_8601": "2022-01-16T17:05:45.471762Z",
        "url": "https://files.pythonhosted.org/packages/77/72/96e878276dc081e5efd80e4c54dbd562861a51541d6303c380cbcf81623b/project-version-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57e27231f468bdb9f1949bc4ceb11771a2a0df52928a2c9f92264d3be4fe018e",
          "md5": "b21c0e90c1af1d4b9e1166d8e3c676c2",
          "sha256": "183114bee73ade8572d8a5c8cf3e3193c936ac7e61be86eaad74769e34f2d738"
        },
        "downloads": -1,
        "filename": "project-version-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b21c0e90c1af1d4b9e1166d8e3c676c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4977,
        "upload_time": "2022-01-16T17:30:52",
        "upload_time_iso_8601": "2022-01-16T17:30:52.876837Z",
        "url": "https://files.pythonhosted.org/packages/57/e2/7231f468bdb9f1949bc4ceb11771a2a0df52928a2c9f92264d3be4fe018e/project-version-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "931a169d1e1495b3c4baa1d9e8e9de8bff5fbe973965fbc3f77f2abb1d20799a",
          "md5": "38d6032f4b70ae32cde5ae002156d15e",
          "sha256": "49395f0f0e0b57c707e07079b5ac8c79c1fe9da22596927227d7eda055b5e93e"
        },
        "downloads": -1,
        "filename": "project-version-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "38d6032f4b70ae32cde5ae002156d15e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4980,
        "upload_time": "2022-01-16T18:39:56",
        "upload_time_iso_8601": "2022-01-16T18:39:56.516891Z",
        "url": "https://files.pythonhosted.org/packages/93/1a/169d1e1495b3c4baa1d9e8e9de8bff5fbe973965fbc3f77f2abb1d20799a/project-version-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b82cf5ad0bc445660ad786acefe0b53812db6ea4f0061e4d7aea408f0e886b4f",
          "md5": "34bc3477fc03ac7d1f596a21f0bb024f",
          "sha256": "78c65faf5d072615eb29bc6fa7e652bfdc94a7026cd7180c9db24cf992c90608"
        },
        "downloads": -1,
        "filename": "project-version-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "34bc3477fc03ac7d1f596a21f0bb024f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5690,
        "upload_time": "2022-01-16T18:38:55",
        "upload_time_iso_8601": "2022-01-16T18:38:55.245654Z",
        "url": "https://files.pythonhosted.org/packages/b8/2c/f5ad0bc445660ad786acefe0b53812db6ea4f0061e4d7aea408f0e886b4f/project-version-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0410dc729c6db953f63d762662be7746746d25ee8eb8358713326cc2e1f30d56",
          "md5": "83c0a18d73320e8ce88ac8cef7bba47d",
          "sha256": "6e6e98c902fb61085d7d1b25b5b5788166f5db234c95b86ba72835409b3fef1d"
        },
        "downloads": -1,
        "filename": "project-version-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "83c0a18d73320e8ce88ac8cef7bba47d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13337,
        "upload_time": "2022-01-18T20:24:41",
        "upload_time_iso_8601": "2022-01-18T20:24:41.235229Z",
        "url": "https://files.pythonhosted.org/packages/04/10/dc729c6db953f63d762662be7746746d25ee8eb8358713326cc2e1f30d56/project-version-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "552482059f0367ba6a04d67a6089c33b126cdbcfa68e7a2da218b388799e96e1",
          "md5": "0806e5cab1ff567b11806192c31ef4e9",
          "sha256": "e077c829d283f757ac970e7d4b91ecda0e52578235b6fa89ec3f69312dc5522f"
        },
        "downloads": -1,
        "filename": "project-version-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0806e5cab1ff567b11806192c31ef4e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15793,
        "upload_time": "2022-01-23T16:13:11",
        "upload_time_iso_8601": "2022-01-23T16:13:11.097036Z",
        "url": "https://files.pythonhosted.org/packages/55/24/82059f0367ba6a04d67a6089c33b126cdbcfa68e7a2da218b388799e96e1/project-version-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09cec37d4b5b51ed69d635db1f70e3117c99894259cee731a1fca3dce0ae1b80",
          "md5": "6358cb6227e17d35429f7a35d3d92635",
          "sha256": "ebf84b3e634872053cc2574581e3df70ed9ce056edd5b5ca6db7a3d704a454b0"
        },
        "downloads": -1,
        "filename": "project-version-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6358cb6227e17d35429f7a35d3d92635",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16100,
        "upload_time": "2022-01-23T17:04:58",
        "upload_time_iso_8601": "2022-01-23T17:04:58.539089Z",
        "url": "https://files.pythonhosted.org/packages/09/ce/c37d4b5b51ed69d635db1f70e3117c99894259cee731a1fca3dce0ae1b80/project-version-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5709c7565ee277099d99809c726a47244ac137681e7439aa655d9d9befef8c8a",
          "md5": "2838e2bee49f4970ebc6dea26a334a41",
          "sha256": "b67286130ff2b5dbb664b9d2353f874b0e3a8c077c45fa5123227c3cbce2c9a2"
        },
        "downloads": -1,
        "filename": "project-version-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2838e2bee49f4970ebc6dea26a334a41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17031,
        "upload_time": "2022-01-23T17:27:27",
        "upload_time_iso_8601": "2022-01-23T17:27:27.801624Z",
        "url": "https://files.pythonhosted.org/packages/57/09/c7565ee277099d99809c726a47244ac137681e7439aa655d9d9befef8c8a/project-version-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b22e045bea20501e918864efff77e35cd8c0a292ac6aee112b0aac6402036166",
          "md5": "70324947ca509541e67a652455744678",
          "sha256": "111e7aa2d66bc8ba67385b898000d2798d42e05bc4f64b32349a8d244c1968db"
        },
        "downloads": -1,
        "filename": "project-version-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "70324947ca509541e67a652455744678",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16942,
        "upload_time": "2022-01-23T17:34:47",
        "upload_time_iso_8601": "2022-01-23T17:34:47.961170Z",
        "url": "https://files.pythonhosted.org/packages/b2/2e/045bea20501e918864efff77e35cd8c0a292ac6aee112b0aac6402036166/project-version-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cde19a5594eb66f0fe7ecbeedbcc62845f063a84d68e23c481d2ab28125194de",
          "md5": "b38aba8b95269da904d4bd3ddccbd0bc",
          "sha256": "7ae2a35528c130d6c4ed382d5a37ae87efac37e4117c0fc392af7e4247990dda"
        },
        "downloads": -1,
        "filename": "project-version-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b38aba8b95269da904d4bd3ddccbd0bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18394,
        "upload_time": "2022-01-24T19:08:22",
        "upload_time_iso_8601": "2022-01-24T19:08:22.373024Z",
        "url": "https://files.pythonhosted.org/packages/cd/e1/9a5594eb66f0fe7ecbeedbcc62845f063a84d68e23c481d2ab28125194de/project-version-0.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4885446dc5e7b245fbd94e5e74cc4ea7f757b43d39327cf0b11d1c03d86eea22",
          "md5": "236c947542df56a29c6fc3e469cc6efb",
          "sha256": "5c79c8b517bf81d29bd8e432c0fc012a0b206d1528c394a792dbbf9bf441d18d"
        },
        "downloads": -1,
        "filename": "project-version-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "236c947542df56a29c6fc3e469cc6efb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18428,
        "upload_time": "2022-01-29T15:47:55",
        "upload_time_iso_8601": "2022-01-29T15:47:55.723397Z",
        "url": "https://files.pythonhosted.org/packages/48/85/446dc5e7b245fbd94e5e74cc4ea7f757b43d39327cf0b11d1c03d86eea22/project-version-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d99fab165857954373004e0b81aaa83894b87463eae9ad2fe767a7455c1e041b",
          "md5": "6e9cb10e3ca9d46c8b63225238ca2468",
          "sha256": "1ab04797e797d627c97211a1bd030fec33ed7ba3f89845c5ba00e3e32b9b2f36"
        },
        "downloads": -1,
        "filename": "project-version-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6e9cb10e3ca9d46c8b63225238ca2468",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18532,
        "upload_time": "2022-01-29T16:23:31",
        "upload_time_iso_8601": "2022-01-29T16:23:31.599082Z",
        "url": "https://files.pythonhosted.org/packages/d9/9f/ab165857954373004e0b81aaa83894b87463eae9ad2fe767a7455c1e041b/project-version-0.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36efb0df41809c568b6a4718add21a7e1d65e957749c5349c17c6518fcb7528d",
          "md5": "7b3bfd4402c225d54fefac02ab518c3c",
          "sha256": "41f3e408460835511d0f07ded83e23c388a0d44939770e61d1a672a8b364bd1f"
        },
        "downloads": -1,
        "filename": "project-version-0.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7b3bfd4402c225d54fefac02ab518c3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18422,
        "upload_time": "2022-01-29T16:33:50",
        "upload_time_iso_8601": "2022-01-29T16:33:50.376251Z",
        "url": "https://files.pythonhosted.org/packages/36/ef/b0df41809c568b6a4718add21a7e1d65e957749c5349c17c6518fcb7528d/project-version-0.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "36efb0df41809c568b6a4718add21a7e1d65e957749c5349c17c6518fcb7528d",
        "md5": "7b3bfd4402c225d54fefac02ab518c3c",
        "sha256": "41f3e408460835511d0f07ded83e23c388a0d44939770e61d1a672a8b364bd1f"
      },
      "downloads": -1,
      "filename": "project-version-0.7.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7b3bfd4402c225d54fefac02ab518c3c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18422,
      "upload_time": "2022-01-29T16:33:50",
      "upload_time_iso_8601": "2022-01-29T16:33:50.376251Z",
      "url": "https://files.pythonhosted.org/packages/36/ef/b0df41809c568b6a4718add21a7e1d65e957749c5349c17c6518fcb7528d/project-version-0.7.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}