{
  "info": {
    "author": "Joa Riski",
    "author_email": "joa.riski@riskidev.fi",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# django-simple-graphql\n\nA stupid simple GraphQL setup for Django\n\n**This project is still a WIP and will receive breaking changes**\n\n## TODO\n\n- Support mutations\n- Support subscriptions\n- An easy default for authentication\n- Account for reverse-relations automatically\n- Handle django-graphene issue with relations ponting to non-pk fields and ID encoding\n- Configurability\n  - Custom set of node interfaces (currently relay.Node)\n  - Custom relation connection handler (currently DjangoFilterConnectionField)\n  - Custom node/query/mutation/subscription builder functions\n  - Custom schema member naming\n  - Custom search\n  - Enable/disable search globally\n  - Enable/disable ordering globally\n  - Global default ordering options\n  - Injection of GraphQL ID property to models, configurable name and/or disable\n- Examples\n- More lax version pinning (Min python 3.5 or higher)\n- Test suite against multiple version configurations\n- Proper readme\n- Better type definitions\n- GraphQL schema docstring generation\n- Validation checks when building the schema to prevent blatantly incorrect config\n  - For example, a field in search fields that doesn't exist or isn't supported\n- Perhaps a way to auto-render the schema for github diffs?\n- A way to easily include extra queries for models (e.g. with different filters)\n- Require either field exclusions or inclusions to be explicitly defined\n- Build a namespace package instead of a normal one (use \"simple_graphql\" as namespace root)\n- Don't be as tightly coupled with graphene\n  - e.g. support to https://github.com/strawberry-graphql/strawberry would be nice\n- Automatic CRUD operations\n- Support more complex ordering options (as well as explicit naming of ordering)\n- Run tests for code included in documentation\n- Support for permissions\n- Query cost analysis / rate limiting\n- Consider supporting an alternative approach where registration decorator\n  could be applied to a GraphQL config object instead of the model class\n- Allow the register decorator be used with or without function call. Possibly\n  also allow it's use as a non-decorator registering function.\n- Add support for using the schema builder if there's need to combine with an\n  existing graphene schema declaration.\n\n\n## Features (already supported)\n\nTODO: Improve the documentation\n\n- Enable GraphQL queries for Django models with a decorator\n  - By default, includes a `getModelName` and `listModelName` queries\n  - Configure by adding a `GraphQL` meta class to the model class\n  - Alternatively supply a configuration class to the decorator\n- Supported configuration options\n  - `filters`: A `django-filter` compatible set of filters supported on the\n    model's QuerySet. List or a Dictionary.\n  - `exclude_fields`: A list of field names to exclude from the schema\n  - `search_fields`: A list of fields to perform search on\n  - `ordering_fields`: A list of fields that can be used to order results\n  - `default_ordering`: What ordering to use if none was specified\n- Adds a `graphql_node_name` field to model classes\n- Adds a `graphql_id` property to models, which can be used to retrieve the\n  Global ID of a model instance.\n\n## Usage\n\n### Setup\n\nSteps 1-3 are setup for `graphene-django`.\nSee https://docs.graphene-python.org/projects/django/en/latest/installation/ for\nmore details.\n\nIf you are already using `graphene-django`, you can skip to step 4.\n\n1. Add `graphene-django` to your `INSTALLED_APPS`:\n   ```python\n   INSTALLED_APPS = [\n       # ...\n       \"django.contrib.staticfiles\", # Required for GraphiQL\n       \"graphene_django\",\n   ]\n   ```\n2. Add a GraphQL endpoint to the URL config:\n   ```python\n   from django.urls import path\n   from django.views.decorators.csrf import csrf_exempt\n\n   from graphene_django.views import GraphQLView\n\n   urlpatterns = [\n       # ...\n       path(\"graphql\", csrf_exempt(GraphQLView.as_view(graphiql=True))),\n   ]\n   ```\n3. Create a schema file (e.g. `schema.py`) and configure it to Graphene:\n   ```python\n   # settings.py\n   GRAPHENE = {\n       \"SCHEMA\": \"myapp.shcema.schema\",\n   }\n   ```\n4. Declare the schema in your schema file\n   ```python\n   # schema.py\n   from simple_graphql.django import Schema\n\n   schema = Schema()\n   ```\n\n\n### Default queries\n\nBy default, all model classes registered to the schema will get a query for\nfetching a single object by ID as well as a list query.\n\nFor the sake of an example, let's say we have the following model declaration:\n\n```python\nfrom django.db import models\n\nfrom myapp.schema import schema\n\n@schema.graphql_model()\nclass Person(models.Model):\n    first_name = models.TextField()\n    last_name = models.TextField()\n```\n\nThe `graphql_model` decorator will add the model to our GraphQL schema builder,\nwhich will build it into the following schema (relay schema omitted):\n\n```graphql\ntype Person implements Node {\n  id: ID!\n  lastName: String!\n  firstName: String!\n}\n\ntype Query {\n  getPerson(id: ID!): Person\n  listPerson(after: String, before: String, first: Int, last: Int, offset: Int): PersonConnection\n}\n```\n\nFor a more complete example of the generated schema, see\n[example/schema.graphql](example/schema.graphql)\n\n### Search\n\nTODO\n\n## Examples\n\n### Registering models\n\nThere's two ways models can be added to the schema\n\n#### With a class decorator\n\n```python\nfrom django.db import models\n\nfrom myapp.schema import schema\n\n@schema.graphql_model()\nclass Person(models.Model):\n    first_name = models.TextField()\n    last_name = models.TextField()\n```\n\n#### With a function call\n\n```python\nfrom django.contrib.auth import get_user_model\n\nfrom myapp.schema import schema\n\nUser = get_user_model()\n\nschema.register_model(User)\n```\n\n### Configuring models\n\nModel specific schemas can be configured either with a metaclass or passed in\nas a parameter. A base configuration also is present regardless of custom\ndeclarations.\n\nIf multiple configurations are present, they will be merged in the following\nprecedence:\n\n1. Configuration supplied via parameters\n2. Metaclass based configuration\n3. Default configuration\n\nWhere lower number means higher priority.\n\n#### Metaclass configuration\n\n```python\nfrom django.db import models\n\nfrom myapp.schema import schema\n\n@schema.graphql_model()\nclass Person(models.Model):\n    first_name = models.TextField()\n    last_name = models.TextField()\n    credit_card_number = models.TextField()\n    parent = models.ForeignKey(\"self\", on_delete=models.SET_NULL)\n\n    class GraphQL:\n        exclude_fields = [\"credit_card_number\"]\n        ordering_fields = [\"first_name\", \"last_name\"]\n        default_ordering = [\"first_name\"]\n        search_fields = [\"first_name\", \"last_name\"]\n        filters = [\"parent\"]\n\n        @staticmethod\n        def get_queryset(queryset: QuerySet[\"Person\"], info: Any):\n            if info.context.user.is_superuser:\n                return queryset\n            return queryset.none()\n```\n\n#### Parameter configuration (with a class)\n\n```python\nfrom django.db import models\n\nfrom myapp.schema import schema\n\n\nclass PersonGraphQLConfig:\n    exclude_fields = [\"credit_card_number\"]\n    ordering_fields = [\"first_name\", \"last_name\"]\n    default_ordering = [\"first_name\"]\n    search_fields = [\"first_name\", \"last_name\"]\n    filters = [\"parent\"]\n\n\n@schema.graphql_model(PersonGraphQLConfig)\nclass Person(models.Model):\n    first_name = models.TextField()\n    last_name = models.TextField()\n    credit_card_number = models.TextField()\n    parent = models.ForeignKey(\"self\", on_delete=models.SET_NULL)\n```\n\n#### Parameter configuration (with a config object)\n\n```python\nfrom django.db import models\n\nfrom simple_graphql.django import ModelSchemaConfig\n\nfrom myapp.schema import schema\n\n\n@schema.graphql_model(ModelSchemaConfig(\n    exclude_fields=[\"credit_card_number\"],\n    ordering_fields=[\"first_name\", \"last_name\"],\n    default_ordering=[\"first_name\"],\n    search_fields=[\"first_name\", \"last_name\"],\n    filters=[\"parent\"],\n))\nclass Person(models.Model):\n    first_name = models.TextField()\n    last_name = models.TextField()\n    credit_card_number = models.TextField()\n    parent = models.ForeignKey(\"self\", on_delete=models.SET_NULL)\n```\n\n#### Parameter configuration (function variant)\n\n```python\nfrom django.contrib.auth import get_user_model\n\nfrom simple_graphql.django import ModelSchemaConfig\n\nfrom myapp.schema import schema\n\nUser = get_user_model()\n\n# Could also use a class here just like with the decorator\nschema.register_model(User, ModelSchemaConfig(\n    exclude_fields=[\"password\"],\n))\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JoaRiski/django-simple-graphql",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-simple-graphql",
    "package_url": "https://pypi.org/project/django-simple-graphql/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-simple-graphql/",
    "project_urls": {
      "Homepage": "https://github.com/JoaRiski/django-simple-graphql",
      "Repository": "https://github.com/JoaRiski/django-simple-graphql"
    },
    "release_url": "https://pypi.org/project/django-simple-graphql/0.5.0/",
    "requires_dist": [
      "graphene-django (>=2.15.0,<3.0.0)",
      "django-filter (>=2.4.0,<3.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "A stupid simple GraphQL setup for Django",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12709156,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19379c818b083db60f31e4b4f1a931323050e907d22ba25122aa8b7fa43c5176",
          "md5": "59b57c1092f18a2185cb08d84896577c",
          "sha256": "905a782c53d78dc46814c3c39d839d6f83ad7ae9e9dc52a2a8d98d453db4c01f"
        },
        "downloads": -1,
        "filename": "django_simple_graphql-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "59b57c1092f18a2185cb08d84896577c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 13000,
        "upload_time": "2021-09-05T17:19:53",
        "upload_time_iso_8601": "2021-09-05T17:19:53.536856Z",
        "url": "https://files.pythonhosted.org/packages/19/37/9c818b083db60f31e4b4f1a931323050e907d22ba25122aa8b7fa43c5176/django_simple_graphql-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82f1b6d74579181caff4f8dc514594779b6403e459c888973ef436faffb8b7cb",
          "md5": "64f4186d4879ae2b2e80418ba50ac22e",
          "sha256": "042b093a01c643cb3c7e8b1c135d1c6105e21b339c61440ccf5fc409797a6047"
        },
        "downloads": -1,
        "filename": "django-simple-graphql-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "64f4186d4879ae2b2e80418ba50ac22e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12560,
        "upload_time": "2021-09-05T17:19:51",
        "upload_time_iso_8601": "2021-09-05T17:19:51.914769Z",
        "url": "https://files.pythonhosted.org/packages/82/f1/b6d74579181caff4f8dc514594779b6403e459c888973ef436faffb8b7cb/django-simple-graphql-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f369b80d132ce9f6a70e7685572898fd670550181d1eba6d30e76dcae5a43787",
          "md5": "f40c08dcb30f5e7d055b947072847ced",
          "sha256": "af9f456c32bf8ca9c79b004ca375969c6db68e4fc926347b8e5efa3077c476a9"
        },
        "downloads": -1,
        "filename": "django_simple_graphql-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f40c08dcb30f5e7d055b947072847ced",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 14072,
        "upload_time": "2021-09-22T08:29:22",
        "upload_time_iso_8601": "2021-09-22T08:29:22.550714Z",
        "url": "https://files.pythonhosted.org/packages/f3/69/b80d132ce9f6a70e7685572898fd670550181d1eba6d30e76dcae5a43787/django_simple_graphql-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0ff3c68623210f2e5268be9b08f216cd24da12ca02d630411756713c886ae3a",
          "md5": "b43d3c350929372ece873636a6cf3c0a",
          "sha256": "1f7958b66d405d58ba296b65af6e6a164490395fb99be172fac4c0963c479515"
        },
        "downloads": -1,
        "filename": "django-simple-graphql-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b43d3c350929372ece873636a6cf3c0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 13190,
        "upload_time": "2021-09-22T08:29:21",
        "upload_time_iso_8601": "2021-09-22T08:29:21.047543Z",
        "url": "https://files.pythonhosted.org/packages/f0/ff/3c68623210f2e5268be9b08f216cd24da12ca02d630411756713c886ae3a/django-simple-graphql-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "def7f81fc9e2777268921b5f0a8019998608b569d3602db1e2a57b070634d391",
          "md5": "f652a84e92fbeab98fd2da43f880d5b5",
          "sha256": "19fd6aa957e68b20d96efca0e906f19c0c5b4650f479a7d043f247efadc9ff6c"
        },
        "downloads": -1,
        "filename": "django_simple_graphql-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f652a84e92fbeab98fd2da43f880d5b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 21731,
        "upload_time": "2021-10-28T06:50:26",
        "upload_time_iso_8601": "2021-10-28T06:50:26.420643Z",
        "url": "https://files.pythonhosted.org/packages/de/f7/f81fc9e2777268921b5f0a8019998608b569d3602db1e2a57b070634d391/django_simple_graphql-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c06bba653a5b7e5bb3ab8e638623dd15cd19db3ca8b7487fdb00eb9d49d79fd",
          "md5": "94d2b5ea27b8eb9902802d19aba29e7e",
          "sha256": "a5e7b291a66defa125b2d6d2d079b8d191167a8a5780ae67fb804ca672af0aea"
        },
        "downloads": -1,
        "filename": "django-simple-graphql-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "94d2b5ea27b8eb9902802d19aba29e7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 17048,
        "upload_time": "2021-10-28T06:50:24",
        "upload_time_iso_8601": "2021-10-28T06:50:24.494335Z",
        "url": "https://files.pythonhosted.org/packages/9c/06/bba653a5b7e5bb3ab8e638623dd15cd19db3ca8b7487fdb00eb9d49d79fd/django-simple-graphql-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2a63a9a6330cb7771b6a8190ec4650c3adebf355fb694bfe78b10d4ba0d00f1",
          "md5": "b9647fc3a93e1aa3d0ad76ae8e177321",
          "sha256": "78147c2bb98047985b9205d826177054c499e6d83343810fba1ebbb290ae9579"
        },
        "downloads": -1,
        "filename": "django_simple_graphql-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b9647fc3a93e1aa3d0ad76ae8e177321",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 22116,
        "upload_time": "2021-11-18T13:38:38",
        "upload_time_iso_8601": "2021-11-18T13:38:38.629702Z",
        "url": "https://files.pythonhosted.org/packages/d2/a6/3a9a6330cb7771b6a8190ec4650c3adebf355fb694bfe78b10d4ba0d00f1/django_simple_graphql-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cf59e541b5de400a4f6d14514a99a9aa1607bad5f2ddc2dcc15924b98a79d0f",
          "md5": "5d6e430a5c5c5ed263bab7170ff7adab",
          "sha256": "3e043a1516234e25bea57541ab25c5c015c99ab40e885ddd60399c417fde1ae3"
        },
        "downloads": -1,
        "filename": "django-simple-graphql-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5d6e430a5c5c5ed263bab7170ff7adab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 17482,
        "upload_time": "2021-11-18T13:38:36",
        "upload_time_iso_8601": "2021-11-18T13:38:36.822978Z",
        "url": "https://files.pythonhosted.org/packages/7c/f5/9e541b5de400a4f6d14514a99a9aa1607bad5f2ddc2dcc15924b98a79d0f/django-simple-graphql-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e29ce1a3dc1f46e034bdc4a093a525ce87eeb66b9b2ed5cf13b105c3d78f32bf",
          "md5": "c107a4da774f2aa860a0fd0d26b036aa",
          "sha256": "634badd0aafecdbbaa03775c36f4ba09d9230e9960566d806a58ab47dcb7f281"
        },
        "downloads": -1,
        "filename": "django_simple_graphql-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c107a4da774f2aa860a0fd0d26b036aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 22290,
        "upload_time": "2022-01-27T12:00:51",
        "upload_time_iso_8601": "2022-01-27T12:00:51.866608Z",
        "url": "https://files.pythonhosted.org/packages/e2/9c/e1a3dc1f46e034bdc4a093a525ce87eeb66b9b2ed5cf13b105c3d78f32bf/django_simple_graphql-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bb665b8180ddea4a499cac5eba5b47b4c848d3570b54626e1b0feb61136c79b",
          "md5": "36938afda9c894e4a9d48716d5d5ba33",
          "sha256": "ce6d1db6a42878809289435811e804419fbdc787d7f62451c3fd6d3e13ca9ddc"
        },
        "downloads": -1,
        "filename": "django-simple-graphql-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "36938afda9c894e4a9d48716d5d5ba33",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 17715,
        "upload_time": "2022-01-27T12:00:50",
        "upload_time_iso_8601": "2022-01-27T12:00:50.270472Z",
        "url": "https://files.pythonhosted.org/packages/1b/b6/65b8180ddea4a499cac5eba5b47b4c848d3570b54626e1b0feb61136c79b/django-simple-graphql-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e29ce1a3dc1f46e034bdc4a093a525ce87eeb66b9b2ed5cf13b105c3d78f32bf",
        "md5": "c107a4da774f2aa860a0fd0d26b036aa",
        "sha256": "634badd0aafecdbbaa03775c36f4ba09d9230e9960566d806a58ab47dcb7f281"
      },
      "downloads": -1,
      "filename": "django_simple_graphql-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c107a4da774f2aa860a0fd0d26b036aa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 22290,
      "upload_time": "2022-01-27T12:00:51",
      "upload_time_iso_8601": "2022-01-27T12:00:51.866608Z",
      "url": "https://files.pythonhosted.org/packages/e2/9c/e1a3dc1f46e034bdc4a093a525ce87eeb66b9b2ed5cf13b105c3d78f32bf/django_simple_graphql-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1bb665b8180ddea4a499cac5eba5b47b4c848d3570b54626e1b0feb61136c79b",
        "md5": "36938afda9c894e4a9d48716d5d5ba33",
        "sha256": "ce6d1db6a42878809289435811e804419fbdc787d7f62451c3fd6d3e13ca9ddc"
      },
      "downloads": -1,
      "filename": "django-simple-graphql-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "36938afda9c894e4a9d48716d5d5ba33",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 17715,
      "upload_time": "2022-01-27T12:00:50",
      "upload_time_iso_8601": "2022-01-27T12:00:50.270472Z",
      "url": "https://files.pythonhosted.org/packages/1b/b6/65b8180ddea4a499cac5eba5b47b4c848d3570b54626e1b0feb61136c79b/django-simple-graphql-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}