{
  "info": {
    "author": "MolGX team",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# IBM Molecule Generation Experience (Community Version)\n\n\nIBM Molecule Generation Experience (MolGX) is a tool to accelerate an AI-driven design of new materials. \nThis is the Community Version which implements a small yet essential subset of its capabilities selected \nfrom the Enterprise Version. \nWith the Community Version, we intend to share our important technologies with a wide range of communities\nas well as to further improve these technologies through a collaborative, open development. \n\n## Requirements\n\nMolGX runs with the following versions of Python and pip:\n\n1. Python >=3.7, <3.8\n\n2. pip>=19.1, <20.3\n\n\nThis restriction intends to be consistent with [GT4SD](https://github.com/GT4SD/gt4sd-core). \n\n## Installation\n\nWe recommend to create a conda environment such as:\n\n```CommandLine\nconda create -n molgx_env python=3.7 anaconda\n```\n\nThen, for Windows tupe the following command:\n\n```CommandLine\nactivate molgx_env # for windows\n```\n\nFor the other environments such as Linux/MacOS:\n\n```CommandLine\nconda activate molgx_env # for the others\n```\n\nThere are two ways to install MolGX:\n\nType the following command if you want to install MolGX from [PyPI](https://pypi.org/): \n\n```CommandLine\npip install molgx\n```\n\nType the following commands if you want to clone the source code to install it: \n\n```CommandLine\ngit clone git@github.com:GT4SD/molgx-core.git\ncd ./molgx-core\npip install .\n```\n\n## Running MolGX\n\nAt present, there are two ways to run MolGX. One is to use it as a standalone application that allows to use its full capabilities. \nThe other is to use a pretrained model under GT4SD, which plans to be extended to support more capabilities. \n\n##  Running an example on jupyter notebook as a standalone application\n\n[Here](https://github.com/GT4SD/molgx-core/blob/main/example/jupyter_notebook/MolGX_tutorial.ipynb) is an example on giving an overview of the usage of MolGX. \nYou will need to install the Jupyter Notebook to run the example.\nOne way is to install the Jupyter Notebook is: \n\n```CommandLine\nconda install jupyter notebook\n```\n\nThen, you will be able to invoke it with ```jupyter-notebook```.\n\n## Communicating with GT4SD\n\nA pre-trained model for 10 QM9 samples with target propetries homo and lumo is along with GT4SD core algorithms. Running the algorithm is as easy as typing:\n\n```CommandLine\nfrom gt4sd.algorithms.conditional_generation.molgx.core import MolGX, MolGXQM9Generator\n\nimport logging\nlogging.disable(logging.INFO)\n\nconfiguration = MolGXQM9Generator()\nalgorithm = MolGX(configuration=configuration)\nitems = list(algorithm.sample(3))\nprint(items)\n```\n\nSee this [example](https://github.com/GT4SD/gt4sd-core/tree/main/notebooks/gt4sd_molgx_example.ipynb). \n\n## Building a documentation\n\nYou will need [Sphinx](https://www.sphinx-doc.org/en/master/index.html). You can install it with Anaconda as follows:\n\n```CommandLine\nconda install sphinx\n```\n\nType the following command to generate a document: \n\n```CommandLine\ncd ./docs\nmake html\n```\n\nYou will then find the html files under `docs/_build/html` and open `index.html` with your web browsewr. \n\n## For developers\n\nType the following command after activating your conda environment:\n\n```CommandLine\npip install -e .\n```\n\n## Miscellaneous\n\nThe web application of MolGX is available [here](https://molgx.draco.res.ibm.com/). \n\nAdditionally, the following papers describe some of the essential algorithms implemented in the Community Version as well as the other techniques not implemented here: \n\n1. Seiji Takeda, Toshiyuki Hama, Hsiang-Han Hsu, Akihiro Kishimoto, Makoto Kogoh, Takumi Hongo, Kumiko Fujieda, Hideaki Nakashika, Dmitry Zubarev, Daniel P. Sanders, Jed W. Pitera, Junta Fuchiwaki, Daiju Nakano. \n[Molecule Generation Experience: An Open Platform of Material Design for Public Users](https://arxiv.org/abs/2108.03044). CoRR abs/2108.03044, 2021. \n\n2. Seiji Takeda, Toshiyuki Hama, Hsiang-Han Hsu, Victoria A. Piunova, Dmitry Zubarev, Daniel P. Sanders, Jed W. Pitera, Makoto Kogoh, Takumi Hongo, Yenwei Cheng, Wolf Bocanett, Hideaki Nakashika, Akihiro Fujita, Yuta Tsuchiya, Katsuhiko Hino, Kentaro Yano, Shuichi Hirose, Hiroki Toda, Yasumitsu Orii, Daiju Nakano. \n[Molecular Inverse-Design Platform for Material Industries](https://arxiv.org/abs/2004.11521). pages 2961-2969, KDD 2020. \n\nFinally, we use some of the data extracted from the [QM9 database](http://quantum-machine.org/) with the following references:\n\n1. L. Ruddigkeit, R. van Deursen, L. C. Blum, J.-L. Reymond, Enumeration of 166 billion organic small molecules in the chemical universe database GDB-17, J. Chem. Inf. Model. 52, 2864â€“2875, 2012.\n2. R. Ramakrishnan, P. O. Dral, M. Rupp, O. A. von Lilienfeld, Quantum chemistry structures and properties of 134 kilo molecules, Scientific Data 1, 140022, 2014.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "MolGX Generative Models Inference Training",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "molgx",
    "package_url": "https://pypi.org/project/molgx/",
    "platform": null,
    "project_url": "https://pypi.org/project/molgx/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/molgx/0.22.0a1/",
    "requires_dist": [
      "ipython",
      "matplotlib",
      "numpy",
      "pandas",
      "rdkit-pypi",
      "scikit-learn",
      "scipy"
    ],
    "requires_python": "",
    "summary": "Package for Molecule Generation Experience (MolGX).",
    "version": "0.22.0a1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15532962,
  "releases": {
    "0.22.0a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d50df7931f80d61d1646ab8a885eb4a9d1256d68f35d6b75c39decef56b1c2d",
          "md5": "d9796a9b6ef10213bbfd8fc35591353d",
          "sha256": "ad3024689b3143e7ed46e1e70fa0c8ab6955a427aca9c315a538f93b82b662af"
        },
        "downloads": -1,
        "filename": "molgx-0.22.0a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9796a9b6ef10213bbfd8fc35591353d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 159713,
        "upload_time": "2022-10-25T07:16:50",
        "upload_time_iso_8601": "2022-10-25T07:16:50.181365Z",
        "url": "https://files.pythonhosted.org/packages/1d/50/df7931f80d61d1646ab8a885eb4a9d1256d68f35d6b75c39decef56b1c2d/molgx-0.22.0a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.22.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4500a5aaf9fe9c9229811efe6f6f646bb52d352ab3db9d788d6304c8fc00a26a",
          "md5": "2c6ab1590c8ecc16e7aaaf652b1bc9c8",
          "sha256": "f2a97d077a0d0d922e71bc3cf8f0b90ad183b6662d5f91be0413a5c2716f225c"
        },
        "downloads": -1,
        "filename": "molgx-0.22.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c6ab1590c8ecc16e7aaaf652b1bc9c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 159714,
        "upload_time": "2022-10-26T06:55:32",
        "upload_time_iso_8601": "2022-10-26T06:55:32.918055Z",
        "url": "https://files.pythonhosted.org/packages/45/00/a5aaf9fe9c9229811efe6f6f646bb52d352ab3db9d788d6304c8fc00a26a/molgx-0.22.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4500a5aaf9fe9c9229811efe6f6f646bb52d352ab3db9d788d6304c8fc00a26a",
        "md5": "2c6ab1590c8ecc16e7aaaf652b1bc9c8",
        "sha256": "f2a97d077a0d0d922e71bc3cf8f0b90ad183b6662d5f91be0413a5c2716f225c"
      },
      "downloads": -1,
      "filename": "molgx-0.22.0a1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2c6ab1590c8ecc16e7aaaf652b1bc9c8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 159714,
      "upload_time": "2022-10-26T06:55:32",
      "upload_time_iso_8601": "2022-10-26T06:55:32.918055Z",
      "url": "https://files.pythonhosted.org/packages/45/00/a5aaf9fe9c9229811efe6f6f646bb52d352ab3db9d788d6304c8fc00a26a/molgx-0.22.0a1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}