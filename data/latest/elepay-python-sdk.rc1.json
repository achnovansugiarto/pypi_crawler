{
  "info": {
    "author": "ELESTYLE, INC",
    "author_email": "support@elestyle.jp",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Elepay Python SDK\nelepay APIはRESTをベースに構成された決済APIです。支払い処理、返金処理など、決済に関わる運用における様々なことができます。\n\nThis Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:\n\n- API version: 1.2.0\n- SDK version: 1.2.0\n\nFor more information, please visit [Elepay Homepage](https://elepay.io) and [API Reference][apiref]\n\n## Installation\n### pip install (Recommended)\n\n```sh\npip install elepay-python-sdk==1.2.0\n```\n\nIf it is failed by root permission, try `sudo pip install elepay-python-sdk==1.2.0`.\n\n### pip install from GitHub\n\nInstall from this repository directly using:\n\n```sh\npip install git+https://github.com/elestyle/elepay-python-sdk.git@v1.2.0\n```\n(you may need to run `pip` with root permission)\n\n### Setuptools (Not recommended)\n\nInstall via [Setuptools](http://pypi.python.org/pypi/setuptools).\n\nClone this repository and installed by `setup.py`:\n\n```sh\ngit clone https://github.com/elestyle/elepay-python-sdk.git\ncd elepay-python-sdk\npython setup.py install --user\n```\n(or `sudo python setup.py install` to install the package for all users)\n\n## Requirements.\n\nPython &gt;&#x3D;3.7\n\n## Rules of SDK Generation\n\n1. The SDK Generator uses spec case for all (object) property names and parameter names.\n    - If the spec has a property name like `paymentMethod`, it will keep to use `paymentMethod` instead of `payment_method`\n    - It will be easy to serialize / deserialize between Elepay API &lt;-&gt; Your Server &lt;-&gt; Your Client\n2. Endpoint request parameters should be assigned to different arguments\n    - Query parameters should be assigned to `query_params`, like `charge_api.list_charges(query_params={\"paymentMethod\": someMethods})`\n    - Path parameters should be assigned to `path_params`\n    - Body should be assigned to `body`\n    - etc. See also each schema of endpoint parameters and [Elepay API Reference][apiref].\n3. Endpoint responses include the original `urllib3.HTTPResponse` and deserialized response body\n    - Use `response.body` to access deserialized data\n    - Use `response.response` to access original `urllib3.HTTPResponse`\n4. All deserialized data is instantiated in an instance that subclasses all validated `Schema` classes and `Decimal` / `str` / `list` / `tuple` / `frozendict` / `NoneClass` / `BoolClass` / `bytes` / `io.FileIO`\n    - This means that you can use `isinstance` to check if a payload validated against a schema class\n    - This means that no data will be of type `None` / `True` / `False`\n        - Ingested `None` will subclass `NoneClass`\n        - Ingested `True` will subclass `BoolClass`\n        - Ingested `False` will subclass `BoolClass`\n        - Use `instance.is_true_oapg()` / `.is_false_oapg()` / `.is_none_oapg()` to check if `instance` is `None` / `True` / `False`\n5. All validated class instances are immutable\n    - Please do not change values or property values after a class has been instantiated\n6. String + Number types with formats\n    - String type data is stored as a string and if you need to access types based on its format like date,\n    date-time, uuid, number etc then you will need to use accessor functions on the instance\n    - type string + format: See `.as_date_oapg`, `.as_datetime_oapg`, `.as_decimal_oapg`, `.as_uuid_oapg`\n    - type number + format: See `.as_float_oapg`, `.as_int_oapg`\n    - this was done because openapi / json-schema defines constraints. string data may be type string with no format\n    keyword in one schema, and include a format constraint in another schema\n    - Use `as_date_oapg` / `as_datetime_oapg` / `as_decimal_oapg` / `as_uuid_oapg` to access a string format based type\n    - Use `as_int_oapg` / `as_float_oapg` to access a number format based type\n7. Property access on `AnyType(unset)` or `object(dict)` schemas\n    - Only required keys with valid python names are properties like `.someProp` and have type hints\n    - All optional keys may not exist, so properties are not defined for them\n    - One can access optional values with `dict_instance['optionalProp']` and `KeyError` will be raised if it does not exist\n    - Use `get_item_oapg` if you need a way to always get a value whether or not the key exists\n        - If the key does not exist, `schemas.unset` is returned from calling `dict_instance.get_item_oapg('optionalProp')`\n        - If the key exist but the value is `None`, `NoneClass` will be returned\n        - All required and optional keys have type hints for this method, and `@typing.overload` is used\n        - A type hint is also generated for additional properties accessed using this method\n    - Use `some_instance['optionalProp']` to access optional property and additional property values like `extra`\n8. The location of the api classes\n    - Package `elepay.apis.tag_to_api` will contain all APIs classes which is split by tag (Recommended)\n    - Package `elepay.apis.tags` will contain each tag class\n        - Example: `elepay.apis.tags.charge_api` will contain `ChargeApi`, which have been tagged as `charge`\n    - Package `elepay.apis.path_to_api` will contain all APIs classes which is split by path (Not recommended)\n    - See also [Note](#note) for more help if import fails\n9. What is the `Oapg` and `_oapg`?\n    - It is just a method / class postfix which is providered by SDK Generator\n    - The OAPG stands for OpenApi Python Generator\n\n## Getting Started\n\nPlease follow the [installation procedure](#installation) and then run the following:\n\n```python\nfrom pprint import pprint\nfrom uuid import uuid4\nfrom elepay import ApiException\nfrom elepay.models import ChargeReq, PaymentMethodType, ResourceType, RefundReq\nfrom elepay.apis.tag_to_api import ChargeApi # Or elepay.apis.tags.charge_api\nfrom elepay.api_client import JSONEncoder, ApiClient, Configuration\n\n# Defining the host is optional and defaults to https://api.elepay.io\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Simple to configure Elepay HTTP authorization:\nconfiguration = Configuration('sk_live_******')\n\n# Generate your order number, please use a unique id in your system\norder_number=str(uuid4())\n\n# Enter a context with an instance of the API client\n# Should close it before exit\napi_client = ApiClient(configuration)\n\n# Create an instance of the API class\ncharge_api = ChargeApi(api_client)\n# Request to create a simple charge, see API document or __new__ for a list of all supported parameters\ncharge_req = ChargeReq(\n    amount=1500, # 1500, currency default is JPY, or set currency to other allowed values\n    orderNo=order_number,\n    paymentMethod=PaymentMethodType.CREDITCARD,\n    resource=ResourceType.WEB, # Please make sure the client is running on the correct resource type\n)\n\ntry:\n    response = charge_api.create_charge(body=charge_req)\n    # elepay.models.ChargeDto is the type of response.body \n    # bytes is the type of response.response.data which is also original body\n\n    # Use response original body bytes like:\n    original_body = response.response.data.decode(\"utf-8\")\n    # Or re-serialize response body like:\n    json_body = JSONEncoder().encode(response.body)\n\n    # Then return the original_body or json_body to client.\n    # Example for Django with original body bytes:\n    #   django.http.HttpResponse(content=response.response.data, content_type='application/json')\n    # Or re-serialize:\n    #   django.http.JsonResponse(data=response.body, encoder=JSONEncoder)\nexcept ApiException as e:\n    pprint(\"Exception when calling ChargeApi->create_charge: %s\\n\" % e)\n```\n\nThe Elepay client SDK can handle the `ChargeDto` to invoke the payment popup.\n\n## API Endpoints\n\nSee [Elepay API Reference][apiref].\n\n## Author\n\n[ELESTYLE, Inc.](https://elestyle.jp)\n\n## Note\nIf the OpenAPI document is large, imports in `elepay.apis` and `elepay.models` may fail with a\n`RecursionError` indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:\n\nSolution 1:\nUse specific imports for apis and models like:\n- `from elepay.apis.charge_api import ChargeApi`\n- `from elepay.model.charge_req import ChargeReq`\n\nSolution 2:\nBefore importing the package, adjust the maximum recursion limit as shown below:\n```python\nimport sys\n\n# Or some value else, default value should be 1000, but it may be different in some environments.\nsys.setrecursionlimit(2000)\n\nimport elepay\nfrom elepay.apis import *\nfrom elepay.models import *\n```\n\n[apiref]: https://developer.elepay.io/reference\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/elestyle/elepay-python-sdk",
    "keywords": "restful,elepay API リファレンス",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "elepay-python-sdk",
    "package_url": "https://pypi.org/project/elepay-python-sdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/elepay-python-sdk/",
    "project_urls": {
      "Homepage": "https://github.com/elestyle/elepay-python-sdk"
    },
    "release_url": "https://pypi.org/project/elepay-python-sdk/1.2.0/",
    "requires_dist": [
      "certifi (>=14.5.14)",
      "frozendict (~=2.3.4)",
      "python-dateutil (~=2.7.0)",
      "setuptools (>=21.0.0)",
      "typing-extensions (~=4.3.0)",
      "urllib3 (~=1.26.7)"
    ],
    "requires_python": ">=3.7",
    "summary": "elepay API リファレンス",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16541692,
  "releases": {
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf7fc5c5a3c8afb924c8ba447686945b7f4fef48fd450fca7418f5d8a3c9120d",
          "md5": "732e1a7a43d87f173f511b03c28c608e",
          "sha256": "c4fa2898c2a145e8b9231a51bdccc3e165dc587cc7a704836baa8afb94c54da1"
        },
        "downloads": -1,
        "filename": "elepay_python_sdk-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "732e1a7a43d87f173f511b03c28c608e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 250616,
        "upload_time": "2023-01-24T02:50:27",
        "upload_time_iso_8601": "2023-01-24T02:50:27.041906Z",
        "url": "https://files.pythonhosted.org/packages/bf/7f/c5c5a3c8afb924c8ba447686945b7f4fef48fd450fca7418f5d8a3c9120d/elepay_python_sdk-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "502e5ed939d19938759ae4aadabaecfb989c90709fead4c064e8e58ae375d85b",
          "md5": "70c8f87accd1efb68b9af9312a50658a",
          "sha256": "e7d70f527434e55391280eddc90d03f812eea22b591dbf8dcf7276d944282648"
        },
        "downloads": -1,
        "filename": "elepay-python-sdk-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "70c8f87accd1efb68b9af9312a50658a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 103802,
        "upload_time": "2023-01-24T02:50:29",
        "upload_time_iso_8601": "2023-01-24T02:50:29.305100Z",
        "url": "https://files.pythonhosted.org/packages/50/2e/5ed939d19938759ae4aadabaecfb989c90709fead4c064e8e58ae375d85b/elepay-python-sdk-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf7fc5c5a3c8afb924c8ba447686945b7f4fef48fd450fca7418f5d8a3c9120d",
        "md5": "732e1a7a43d87f173f511b03c28c608e",
        "sha256": "c4fa2898c2a145e8b9231a51bdccc3e165dc587cc7a704836baa8afb94c54da1"
      },
      "downloads": -1,
      "filename": "elepay_python_sdk-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "732e1a7a43d87f173f511b03c28c608e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 250616,
      "upload_time": "2023-01-24T02:50:27",
      "upload_time_iso_8601": "2023-01-24T02:50:27.041906Z",
      "url": "https://files.pythonhosted.org/packages/bf/7f/c5c5a3c8afb924c8ba447686945b7f4fef48fd450fca7418f5d8a3c9120d/elepay_python_sdk-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "502e5ed939d19938759ae4aadabaecfb989c90709fead4c064e8e58ae375d85b",
        "md5": "70c8f87accd1efb68b9af9312a50658a",
        "sha256": "e7d70f527434e55391280eddc90d03f812eea22b591dbf8dcf7276d944282648"
      },
      "downloads": -1,
      "filename": "elepay-python-sdk-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "70c8f87accd1efb68b9af9312a50658a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 103802,
      "upload_time": "2023-01-24T02:50:29",
      "upload_time_iso_8601": "2023-01-24T02:50:29.305100Z",
      "url": "https://files.pythonhosted.org/packages/50/2e/5ed939d19938759ae4aadabaecfb989c90709fead4c064e8e58ae375d85b/elepay-python-sdk-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}