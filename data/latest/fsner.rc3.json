{
  "info": {
    "author": "sayef",
    "author_email": "hello@sayef.tech",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\"> <img src=\"http://sayef.tech:8082/uploads/FSNER-LOGO-2.png\" alt=\"FSNER LOGO\"> </p>\n\n<p align=\"center\">\n  Implemented by <a href=\"https://huggingface.co/sayef\"> sayef </a>. \n</p>\n\n> UPDATES\n> 1. Training script is now available.\n> 2. Pairwise query and support examples are not required anymore. Please look into example usage for details.\n> 3. Added [sample dataset](https://github.com/sayef/fsner/blob/master/scripts/sample_dataset.json) and links to converted ontonotes5 training and validation dataset (please see dataset preparation section below).\n\n## Overview\n\nThe FSNER model was proposed in [Example-Based Named Entity Recognition](https://arxiv.org/abs/2008.10570) by Morteza\nZiyadi, Yuting Sun, Abhishek Goswami, Jade Huang, Weizhu Chen. To identify entity spans in a new domain, it uses a\ntrain-free few-shot learning approach inspired by question-answering.\n\n## Abstract\n\n> We present a novel approach to named entity recognition (NER) in the presence of scarce data that we call example-based NER. Our train-free few-shot learning approach takes inspiration from question-answering to identify entity spans in a new and unseen domain. In comparison with the current state-of-the-art, the proposed method performs significantly better, especially when using a low number of support examples.\n\n## Model Training Details\n\n| identifier        | epochs |                                            datasets                                             |\n| ---------- |:------:|:-----------------------------------------------------------------------------------------------:|\n| [sayef/fsner-bert-base-uncased](https://huggingface.co/sayef/fsner-bert-base-uncased)      |   25   |  ontonotes5, conll2003, wnut2017, mit_movie_trivia, mit_restaurant and fin (Alvarado et al.).   |\n\n## Installation and Example Usage\n\nYou can use the FSNER model in 3 ways:\n\n1. Install directly from PyPI: `pip install fsner` and import the model as shown in the code example below\n\n   or\n\n2. Install from source: `python install .` and import the model as shown in the code example below\n\n   or\n\n3. Clone [repo](https://github.com/sayef/fsner) and add absolute path of `fsner/src` directory to your PYTHONPATH and\n   import the model as shown in the code example below\n\n```python\nimport json\n\nfrom fsner import FSNERModel, FSNERTokenizerUtils, pretty_embed\n\nquery_texts = [\n    \"Does Luke's serve lunch?\",\n    \"Chang does not speak Taiwanese very well.\",\n    \"I like Berlin.\"\n]\n\n# Each list in supports are the examples of one entity type\n# Wrap entities around with [E] and [/E] in the examples.\n# Each sentence should have only one pair of [E] ... [/E]\n\nsupport_texts = {\n    \"Restaurant\": [\n        \"What time does [E] Subway [/E] open for breakfast?\",\n        \"Is there a [E] China Garden [/E] restaurant in newark?\",\n        \"Does [E] Le Cirque [/E] have valet parking?\",\n        \"Is there a [E] McDonalds [/E] on main street?\",\n        \"Does [E] Mike's Diner [/E] offer huge portions and outdoor dining?\"\n    ],\n    \"Language\": [\n        \"Although I understood no [E] French [/E] in those days , I was prepared to spend the whole day with Chien - chien .\",\n        \"like what the hell 's that called in [E] English [/E] ? I have to register to be here like since I 'm a foreigner .\",\n        \"So , I 'm also working on an [E] English [/E] degree because that 's my real interest .\",\n        \"Al - Jazeera TV station , established in November 1996 in Qatar , is an [E] Arabic - language [/E] news TV station broadcasting global news and reports nonstop around the clock .\",\n        \"They think it 's far better for their children to be here improving their [E] English [/E] than sitting at home in front of a TV . \\\"\",\n        \"The only solution seemed to be to have her learn [E] French [/E] .\",\n        \"I have to read sixty pages of [E] Russian [/E] today .\"\n    ]\n}\n\ndevice = 'cpu'\n\ntokenizer = FSNERTokenizerUtils(\"sayef/fsner-bert-base-uncased\")\nqueries = tokenizer.tokenize(query_texts).to(device)\nsupports = tokenizer.tokenize(list(support_texts.values())).to(device)\n\nmodel = FSNERModel(\"sayef/fsner-bert-base-uncased\")\nmodel.to(device)\n\np_starts, p_ends = model.predict(queries, supports)\n\n# One can prepare supports once and reuse  multiple times with different queries\n# ------------------------------------------------------------------------------\n# start_token_embeddings, end_token_embeddings = model.prepare_supports(supports)\n# p_starts, p_ends = model.predict(queries, start_token_embeddings=start_token_embeddings,\n#                                  end_token_embeddings=end_token_embeddings)\n\noutput = tokenizer.extract_entity_from_scores(query_texts, queries, p_starts, p_ends,\n                                              entity_keys=list(support_texts.keys()), thresh=0.50)\n\nprint(json.dumps(output, indent=2))\n\n# install displacy for pretty embed\npretty_embed(query_texts, output, list(support_texts.keys()))\n```\n\n<p align=\"center\"> <img src=\"http://sayef.tech/uploads/FSNER-OUTPUT.png\" alt=\"FSNER OUTPUT\"> </p>\n\n## Datasets preparation\n\n1. We need to convert dataset into the following format. Let's say we have a dataset file train.json like following.\n2. Each list in supports are the examples of one entity type\n3. Wrap entities around with [E] and [/E] in the examples.\n4. Each example should have only one pair of [E] ... [/E].\n\n```json\n{\n  \"CARDINAL_NUMBER\": [\n    \"Washington , cloudy , [E] 2 [/E] to 6 degrees .\",\n    \"New Dehli , sunny , [E] 6 [/E] to 19 degrees .\",\n    \"Well this is number [E] two [/E] .\",\n    \".....\"\n  ],\n  \"LANGUAGE\": [\n    \"They do n't have the Quicken [E] Dutch [/E] version ?\",\n    \"they learned a lot of [E] German [/E] .\",\n    \"and then [E] Dutch [/E] it 's Mifrau\",\n    \"....\"\n  ],\n  \"MONEY\": [\n    \"Per capita personal income ranged from $ [E] 11,116 [/E] in Mississippi to $ 23,059 in Connecticut ... .\",\n    \"The trade surplus was [E] 582 million US dollars [/E] .\",\n    \"It settled with a loss of 4.95 cents at $ [E] 1.3210 [/E] a pound .\",\n    \"....\"\n  ]\n}\n```\n\n2. Converted ontonotes5 dataset can be found here:\n    1. [train](https://gist.githubusercontent.com/sayef/46deaf7e6c6e1410b430ddc8aff9c557/raw/ea7ae2ae933bfc9c0daac1aa52a9dc093d5b36f4/ontonotes5.train.json)\n    2. [dev](https://gist.githubusercontent.com/sayef/46deaf7e6c6e1410b430ddc8aff9c557/raw/ea7ae2ae933bfc9c0daac1aa52a9dc093d5b36f4/ontonotes5.dev.json)\n\n3. Then trainer script can be used to train/evaluate your fsner model.\n\n```bash\nfsner trainer --pretrained-model bert-base-uncased --mode train --train-data train.json --val-data val.json \\\n                --train-batch-size 6 --val-batch-size 6 --n-examples-per-entity 10 --neg-example-batch-ratio 1/3 --max-epochs 25 --device gpu \\\n                --gpus -1 --strategy ddp\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sayef/fsner",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fsner",
    "package_url": "https://pypi.org/project/fsner/",
    "platform": null,
    "project_url": "https://pypi.org/project/fsner/",
    "project_urls": {
      "Bug Tracker": "https://github.com/sayef/fsner/issues",
      "Homepage": "https://github.com/sayef/fsner"
    },
    "release_url": "https://pypi.org/project/fsner/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Few-shot Named Entity Recognition",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13337611,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4589e1a68bb58ff73fe29b95557166be7e65aed63734ff4e18b2b502c7688289",
          "md5": "eb9c20d920e3da0c8739a474cd66f5d0",
          "sha256": "2e1e9d69a0b8e6e950552d00d2742a3c1d992f678d41a6fcea6217bc5f6a6e85"
        },
        "downloads": -1,
        "filename": "fsner-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb9c20d920e3da0c8739a474cd66f5d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5152,
        "upload_time": "2021-09-24T19:09:22",
        "upload_time_iso_8601": "2021-09-24T19:09:22.524438Z",
        "url": "https://files.pythonhosted.org/packages/45/89/e1a68bb58ff73fe29b95557166be7e65aed63734ff4e18b2b502c7688289/fsner-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d56f232ad75dddbfb0455b2ee6fcc32728d657e666384f4d22dcffcf452bf77d",
          "md5": "544a45e6bf4f396641f96860fdb93731",
          "sha256": "2b9500e0aa5033d78d7dd2bf4dfb78486dffd42ba41dd23398fc91d259d8396d"
        },
        "downloads": -1,
        "filename": "fsner-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "544a45e6bf4f396641f96860fdb93731",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4813,
        "upload_time": "2021-09-24T19:09:24",
        "upload_time_iso_8601": "2021-09-24T19:09:24.390332Z",
        "url": "https://files.pythonhosted.org/packages/d5/6f/232ad75dddbfb0455b2ee6fcc32728d657e666384f4d22dcffcf452bf77d/fsner-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbed9caaff72e746a48eb6069e3c97b9090674d66066ab36f653be007c106839",
          "md5": "28a8f66996a381e39ddd32a105b17921",
          "sha256": "35d1441fad4eefeee88bcb4182fb15c571af5b4b3afe5777bc2d4ee9d55ef257"
        },
        "downloads": -1,
        "filename": "fsner-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28a8f66996a381e39ddd32a105b17921",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5717,
        "upload_time": "2021-10-07T21:45:17",
        "upload_time_iso_8601": "2021-10-07T21:45:17.019681Z",
        "url": "https://files.pythonhosted.org/packages/cb/ed/9caaff72e746a48eb6069e3c97b9090674d66066ab36f653be007c106839/fsner-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ca388d4998b527ecd5220f569e55339ad3ecc499d3609e17b9b0fc12805ff35",
          "md5": "f62d35722c7b44497b8cf2d82cb342a8",
          "sha256": "3e9e186a357aa2dd95abaa9a0c7e667b370b73c0a6395b730345c25f94caf7bd"
        },
        "downloads": -1,
        "filename": "fsner-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f62d35722c7b44497b8cf2d82cb342a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5294,
        "upload_time": "2021-10-07T21:45:18",
        "upload_time_iso_8601": "2021-10-07T21:45:18.976320Z",
        "url": "https://files.pythonhosted.org/packages/4c/a3/88d4998b527ecd5220f569e55339ad3ecc499d3609e17b9b0fc12805ff35/fsner-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68cc380178f8e9ee8406bcfec0ab90cbcc178edaa114aa02c47558e4ad24450e",
          "md5": "bd26d36e7ca7bd190dcd60f0f439b783",
          "sha256": "71a814c2521ffcb098eb885db44f6a7a9d6dc974c16e3c22e94edeb0c0dfd3a1"
        },
        "downloads": -1,
        "filename": "fsner-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bd26d36e7ca7bd190dcd60f0f439b783",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16171,
        "upload_time": "2022-03-29T16:50:19",
        "upload_time_iso_8601": "2022-03-29T16:50:19.170400Z",
        "url": "https://files.pythonhosted.org/packages/68/cc/380178f8e9ee8406bcfec0ab90cbcc178edaa114aa02c47558e4ad24450e/fsner-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "68cc380178f8e9ee8406bcfec0ab90cbcc178edaa114aa02c47558e4ad24450e",
        "md5": "bd26d36e7ca7bd190dcd60f0f439b783",
        "sha256": "71a814c2521ffcb098eb885db44f6a7a9d6dc974c16e3c22e94edeb0c0dfd3a1"
      },
      "downloads": -1,
      "filename": "fsner-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bd26d36e7ca7bd190dcd60f0f439b783",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16171,
      "upload_time": "2022-03-29T16:50:19",
      "upload_time_iso_8601": "2022-03-29T16:50:19.170400Z",
      "url": "https://files.pythonhosted.org/packages/68/cc/380178f8e9ee8406bcfec0ab90cbcc178edaa114aa02c47558e4ad24450e/fsner-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}