{
  "info": {
    "author": "CosmoStar",
    "author_email": "JustCosmos@yandex.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Security :: Cryptography",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Pypasswords - work with passwords easily.\n\nPypasswords provides easy hashing, checking and generating passwords for you.\n\n# Overview\n\n  - Hash passwords using your favourite hashing algorithms\n  - Check passwords for strength or validity\n  - Generate passwords with your own parameters\n\n## Installation\n\nTo install this package you can use Pypi via pip\n\n```\n$ pip install pypasswords\n```\n\n## Usage\n\nFirst you need to import all methods from this package\n\n```py\nfrom pypasswords import hash_it, check_it, generate_it\n```\n... or simply\n\n```py\nfrom pypasswords import *\n```\n\n#### Hashing\n\nYou can easily hash your password with just one line of code:\n\n```py\nhash_it('qwerty')\n>>> 65e84be33532fb784c48129675f9eff3a682b27168c0ea744b2cf58ee02337c5\n```\n\n**hash_it** method has the following parameters:\n* **password** - (string)\n* **hash_type** - (string). *Optional*. Use to specify hashing algorithm. Default: *sha-256*\n* **salting** - (bool). *Optional*. Use to specify whether to use salt or not. More [here](https://en.wikipedia.org/wiki/Salt_(cryptography)). Default: *False*. Warning: if you specify salting=*True* then the method will generate random salt and return both the hash and the salt.\n* **static_salt** - (string). *Optional*. Use to specify your own salt.\n* **salt_length** - (int). *Optional*. Use to specify the length of the salt. Default: *6*\n* **local_parameter** - (string). *Optional*. Use to specify local parameter. More [here](https://www.openwall.com/presentations/YaC2012-Password-Hashing-At-Scale/mgp00005.html).\n\n##### Examples:\n\n```py\nhash_it('qwerty', hash_type='sha512')\n>>> d8578edf8458ce06fbc5bb76a58c5ca4\n\nhash_it('qwerty', salting=True, static_salt='some_word')\n>>> ('c4f5d86792a50717d99fba1807d489a7f59ff7a95a293facd2b8c628a17cb722', 'some_word')\n\nhash_it('qwerty', salting=True, salt_length=10, local_parameter='word')\n>>> ('bb5310271a8d927f6cf45ad5d1442e2c0d3c7f3bdb68681022688d0555724ed5', '0<JM]bdTV!')\n```\n\n#### Checking\n\nYou can check your password for strength or validity:\n\n```py\ncheck_it('qwerty')\n```\n\n**check_it** method has the following parameters:\n* **password** - (string)\n* **check_type** - (string). *Optional*. There are 2 check types: strength and valid. Default: *strength*\n  - *strength* check type will return number indicating strength of your password. If strength more than 10 then the password is strong.\n  - *valid* check type will return True or False whether password has 'stop chars' or not. You have to specify *stop_chars* to use this check type.\n* **stop_chars** - (string). *Optional*. Use to specify stop characters to check your password for validity.\n\n##### Examples:\n\n```py\ncheck_it('123some-password321')\n>>> 11  # strong password\n\ncheck_it('qwerty', check_type='valid', stop_chars='0123456789')\n>>> True\n```\n\n#### Generating\n\nYou can generate password with your own parameters:\n\n```py\ngenerate_it()\n```\n\n**generate_it** method has the following parameters:\n* **strength** - (int). *Optional*. Defalut: *2*\n  - **1** - *low*. Using letters only.\n  - **2** - *medium*. Using letters and numbers.\n  - **3** - *high*. Using letters, numbers and symbols.\n* **length** - (int). *Optional*. Use to specify password length. Default: *12*\n\n##### Examples:\n\n```py\ngenerate_it(strength=2)\n>>> 3XXCltDo4obb\n\ngenerate_it(strength=3, length=12)\n>>> (W:rbP!253UY\n```\n\n#### Matching\n\nYou can match password with some password's hash:\n\n```py\nmatch_it('entered_password', 'd8578edf8458ce06fbc5bb76a58c5ca4')\n```\n\n**match_it** method has the following parameters:\n* **password** - (string). The password you want to match with your hash\n* **hash** - (string). The hash you want to match with your passwords\n* **hash_type** - (string). *Optional*. Use to specify hashing algorithm. Default: *sha-256*\n* **salt** - (string). *Optional*. Use to specify password's salt. More [here](https://en.wikipedia.org/wiki/Salt_(cryptography)).\n* **local_parameter** - (string). *Optional*. Use to specify local parameter. More [here](https://www.openwall.com/presentations/YaC2012-Password-Hashing-At-Scale/mgp00005.html).\n\n\n##### Examples:\n\n```py\nmatch_it('hello', 2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824)\n>>> True\n\nmatch_it('hello', '5d41402abc4b2a76b9719d911017c592', hash_type='md5', salt='123', local_parameter='321')\n>>> False\n```\n\n\nLicense\n----\n\nMIT\n\n#\nPypasswords uses one open source package to work properly:\n\n* [zxcvbn](https://github.com/dropbox/zxcvbn) - password strength estimator\n\nAnd of course **pypasswords** itself is open source with a [public repository](https://github.com/CosmoSt4r/pypasswords)\n on GitHub.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/CosmoSt4r/pypasswords/archive/v_0.4.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CosmoSt4r/pypasswords",
    "keywords": "password,passwords,check,hash,simple",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pypasswords",
    "package_url": "https://pypi.org/project/pypasswords/",
    "platform": "",
    "project_url": "https://pypi.org/project/pypasswords/",
    "project_urls": {
      "Download": "https://github.com/CosmoSt4r/pypasswords/archive/v_0.4.tar.gz",
      "Homepage": "https://github.com/CosmoSt4r/pypasswords"
    },
    "release_url": "https://pypi.org/project/pypasswords/0.4.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Working with passwords made simple",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8001830,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06762e2db9a5663d3f96b337fac7c225c8dd8e8db30336cf7e44fb00218aa5cc",
          "md5": "0c3025d4dba190a4089c01d10215fbd0",
          "sha256": "e14e63618683ed89e273651cf38abdfae16339165783a7ff38b9eeb965bdc11d"
        },
        "downloads": -1,
        "filename": "pypasswords-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0c3025d4dba190a4089c01d10215fbd0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2004,
        "upload_time": "2020-08-10T13:07:09",
        "upload_time_iso_8601": "2020-08-10T13:07:09.878787Z",
        "url": "https://files.pythonhosted.org/packages/06/76/2e2db9a5663d3f96b337fac7c225c8dd8e8db30336cf7e44fb00218aa5cc/pypasswords-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da25e46b6e94ee8a8f90f1789881dabd9ccd4fd63ea58aed29ccf8be956995fa",
          "md5": "4af6c8105a2ac298af1afe1deef8c66c",
          "sha256": "e8a1ad2dcdd87764db41e2fe92b238fd7731d99aa4a8e8111479c869b7381581"
        },
        "downloads": -1,
        "filename": "pypasswords-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4af6c8105a2ac298af1afe1deef8c66c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2176,
        "upload_time": "2020-08-10T14:18:26",
        "upload_time_iso_8601": "2020-08-10T14:18:26.545935Z",
        "url": "https://files.pythonhosted.org/packages/da/25/e46b6e94ee8a8f90f1789881dabd9ccd4fd63ea58aed29ccf8be956995fa/pypasswords-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32177523faf95271d48766a21ea8d8e82aea02f7be35c94d008aa0f6cdaa4e1d",
          "md5": "1d1aadd3f4dd18ced482ba47f2bfed87",
          "sha256": "279526c3cf449688a092df617f3cbab1ad17129152f7ae0bed27112c678a9313"
        },
        "downloads": -1,
        "filename": "pypasswords-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1d1aadd3f4dd18ced482ba47f2bfed87",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2170,
        "upload_time": "2020-08-11T06:50:02",
        "upload_time_iso_8601": "2020-08-11T06:50:02.986778Z",
        "url": "https://files.pythonhosted.org/packages/32/17/7523faf95271d48766a21ea8d8e82aea02f7be35c94d008aa0f6cdaa4e1d/pypasswords-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36ebe368bc8a2878b779eb087c6c26a931799e8a3cc01a3bcfae68f7571495a9",
          "md5": "7c15633151b70ceaea1db489a05e12e4",
          "sha256": "7332ab53dcb89d6f0b36d070dc48d3a6420e804134a4fecee41363c08df511c2"
        },
        "downloads": -1,
        "filename": "pypasswords-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7c15633151b70ceaea1db489a05e12e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4166,
        "upload_time": "2020-08-11T07:07:13",
        "upload_time_iso_8601": "2020-08-11T07:07:13.829787Z",
        "url": "https://files.pythonhosted.org/packages/36/eb/e368bc8a2878b779eb087c6c26a931799e8a3cc01a3bcfae68f7571495a9/pypasswords-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60d2bcc633ef0234edd452bc8baf3311cfb6be7f89c18b7f312f2222e725ef46",
          "md5": "333202b177f799a464773ee9787caa04",
          "sha256": "9cabe097de1e3146db74ee351c1409eab456dd4c3cb52539259e6b6ba2df2909"
        },
        "downloads": -1,
        "filename": "pypasswords-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "333202b177f799a464773ee9787caa04",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4897,
        "upload_time": "2020-08-20T06:04:08",
        "upload_time_iso_8601": "2020-08-20T06:04:08.284732Z",
        "url": "https://files.pythonhosted.org/packages/60/d2/bcc633ef0234edd452bc8baf3311cfb6be7f89c18b7f312f2222e725ef46/pypasswords-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "60d2bcc633ef0234edd452bc8baf3311cfb6be7f89c18b7f312f2222e725ef46",
        "md5": "333202b177f799a464773ee9787caa04",
        "sha256": "9cabe097de1e3146db74ee351c1409eab456dd4c3cb52539259e6b6ba2df2909"
      },
      "downloads": -1,
      "filename": "pypasswords-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "333202b177f799a464773ee9787caa04",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4897,
      "upload_time": "2020-08-20T06:04:08",
      "upload_time_iso_8601": "2020-08-20T06:04:08.284732Z",
      "url": "https://files.pythonhosted.org/packages/60/d2/bcc633ef0234edd452bc8baf3311cfb6be7f89c18b7f312f2222e725ef46/pypasswords-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}