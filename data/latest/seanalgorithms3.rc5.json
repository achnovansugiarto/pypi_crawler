{
  "info": {
    "author": "seanlab",
    "author_email": "seanlabcoding33@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/algorithms.svg)](https://badge.fury.io/py/algorithms)\n[![Open Source Helpers](https://www.codetriage.com/keon/algorithms/badges/users.svg)](https://www.codetriage.com/keon/algorithms)\n[![Build Status](https://travis-ci.org/keon/algorithms.svg?branch=master)](https://travis-ci.org/keon/algorithms)\n[![Coverage Status](https://coveralls.io/repos/github/keon/algorithms/badge.svg?branch=master)](https://coveralls.io/github/keon/algorithms?branch=master)\n\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/keon/algorithms/master/docs/source/_static/logo/logotype1blue.png\"></p>\n\nSEANLAB Algorithms\nPythonic Data Structures and Algorithms\n=========================================\n\nMinimal and clean example implementations of data structures and algorithms in Python 3.\n\n## Contributing\nThanks for your interest in contributing! There are many ways to contribute to this project. [Get started here](CONTRIBUTING.md)\n\n## Tests\n\n### Use unittest\nFor running all tests write down:\n\n    $ python3 -m unittest discover tests\n\nFor running some specific tests you can do this as following (Ex: sort):\n\n    $ python3 -m unittest tests.test_sort\n\n### Use pytest\nFor running all tests write down:\n\n    $ python3 -m pytest tests\n\n## Install\nIf you want to use the API algorithms in your code, it is as simple as:\n\n    $ pip3 install seanalgorithms3\n\nYou can test by creating a python file: (Ex: use `merge_sort` in `sort`)\n\n```python3\nfrom seanalgorithms3.sort import merge_sort\n\nif __name__ == \"__main__\":\n    my_list = [1, 8, 3, 5, 6]\n    my_list = merge_sort(my_list)\n    print(my_list)\n```\n\n## Uninstall\nIf you want to uninstall seanalgorithms3, it is as simple as:\n\n    $ pip3 uninstall -y seanalgorithms3\n\n## List of Implementations\n  \n  - [algorithms_practice](algorithms_practice/arrays)\n    - [1.add_to_array_form](arrays/1.add_to_array_form.py)\n    - [10.degree_array](arrays/10.degree_array.py)\n    - [11.distribute_candies](arrays/11.distribute_candies.py)\n    - [12.duplicate_zeroes](arrays/12.duplicate_zeroes.py)\n    - [13.find_all_dissapeared_numbers](arrays/13.find_all_dissapeared_numbers.py)\n    - [14.find_all_duplicates](arrays/14.find_all_duplicates.py)\n    - [15.find_pivot_index](arrays/15.find_pivot_index.py)\n    - [16.first_missing_positive](arrays/16.first_missing_positive.py)\n    - [17.friends_of_ages](arrays/17.friends_of_ages.py)\n    - [18.increasing_triplets](arrays/18.increasing_triplets.py)\n    - [19.intersection_two_arrays_II](arrays/19.intersection_two_arrays_II.py)\n    - [2.array_partition](arrays/2.array_partition.py)\n    - [20.is_monotonic](arrays/20.is_monotonic.py)\n    - [21.k_diff_pairs](arrays/21.k_diff_pairs.py)\n    - [22.largest_number_twice_of_others](arrays/22.largest_number_twice_of_others.py)\n    - [23.longest_continuous_increasing_subsequence](arrays/23.longest_continuous_increasing_subsequence.py)\n    - [24.majority_element_ii](arrays/24.majority_element_ii.py)\n    - [25.max_average_subarray](arrays/25.max_average_subarray.py)\n    - [26.max_consecutive_ones](arrays/26.max_consecutive_ones.py)\n    - [27.max_product_three_numbers](arrays/27.max_product_three_numbers.py)\n    - [28.maximize_distance_to_nearest_person](arrays/28.maximize_distance_to_nearest_person.py)\n    - [29.maximum_subarray](arrays/29.maximum_subarray.py)\n    - [3.assign_cookies](arrays/3.assign_cookies.py)\n    - [30.merge_intervals](arrays/30.merge_intervals.py)\n    - [31.merge_sorted_array](arrays/31.merge_sorted_array.py)\n    - [32.min_moves_to_equal_elements](arrays/32.min_moves_to_equal_elements.py)\n    - [33.minimum_moves_to_equal_array](arrays/33.minimum_moves_to_equal_array.py)\n    - [34.move_zeroes](arrays/34.move_zeroes.py)\n    - [35.my_calendar_II](arrays/35.my_calendar_II.py)\n    - [36.next_greater_element](arrays/36.next_greater_element.py)\n    - [37.non_decreasing_array](arrays/37.non_decreasing_array.py)\n    - [38.number_plus_one](arrays/38.number_plus_one.py)\n    - [39.partition_array_in_three](arrays/39.partition_array_in_three.py)\n    - [4.best_time_to_buy_stock](arrays/4.best_time_to_buy_stock.py)\n    - [40.place_flowers](arrays/40.place_flowers.py)\n    - [41.positions_large_groups](arrays/41.positions_large_groups.py)\n    - [42.product_of_array_except_self](arrays/42.product_of_array_except_self.py)\n    - [43.remove_duplicates_two](arrays/43.remove_duplicates_two.py)\n    - [44.rotate_array](arrays/44.rotate_array.py)\n    - [45.set_mismatch](arrays/45.set_mismatch.py)\n    - [46.shortest_unsorted_subarray](arrays/46.shortest_unsorted_subarray.py)\n    - [47.smallest_range_I](arrays/47.smallest_range_I.py)\n    - [48.sum_after_queries](arrays/48.sum_after_queries.py)\n    - [49.summary_ranges](arrays/49.summary_ranges.py)\n    - [5.best_time_to_buy_stock_all](arrays/5.best_time_to_buy_stock_all.py)\n    - [50.third_max_number](arrays/50.third_max_number.py)\n    - [51.two_sum_sorted_array](arrays/51.two_sum_sorted_array.py)\n    - [52.wiggle_sort_II](arrays/52.wiggle_sort_II.py)\n    - [6.candies_people](arrays/6.candies_people.py)\n    - [7.coins_in_a_line](arrays/7.coins_in_a_line.py)\n    - [8.contains_duplicate_one](arrays/8.contains_duplicate_one.py)\n    - [9.contains_duplicate_range](arrays/9.contains_duplicate_range.py)\n    - [x.dynamic_array_implementation](arrays/x.dynamic_array_implementation.py)\n    - [1.binary_watch](backtracking/1.binary_watch.py)\n    - [10.letter_combinations](backtracking/10.letter_combinations.py)\n    - [11.matchsticks_to_square](backtracking/11.matchsticks_to_square.py)\n    - [12.n_queens](backtracking/12.n_queens.py)\n    - [13.n_queens_II](backtracking/13.n_queens_II.py)\n    - [14.palindrome_partition](backtracking/14.palindrome_partition.py)\n    - [15.permutation_sequence](backtracking/15.permutation_sequence.py)\n    - [16.permutations_one](backtracking/16.permutations_one.py)\n    - [17.permutations_two](backtracking/17.permutations_two.py)\n    - [18.restore_ip_addresses](backtracking/18.restore_ip_addresses.py)\n    - [19.subsets](backtracking/19.subsets.py)\n    - [2.combinations](backtracking/2.combinations.py)\n    - [20.subsets_duplicates](backtracking/20.subsets_duplicates.py)\n    - [21.sudoku_solver](backtracking/21.sudoku_solver.py)\n    - [22.valid_time](backtracking/22.valid_time.py)\n    - [3.combinations_sum](backtracking/3.combinations_sum.py)\n    - [4.combinations_sum_four](backtracking/4.combinations_sum_four.py)\n    - [5.combinations_sum_three](backtracking/5.combinations_sum_three.py)\n    - [6.combinations_sum_two](backtracking/6.combinations_sum_two.py)\n    - [7.decoded_string_at_index](backtracking/7.decoded_string_at_index.py)\n    - [8.generate_paranthesis](backtracking/8.generate_paranthesis.py)\n    - [9.letter_case_permutations](backtracking/9.letter_case_permutations.py)\n    - [xx.flatten_nested_list](backtracking/xx.flatten_nested_list.py)\n    - [1.arranging_coins](binarysearch/1.arranging_coins.py)\n    - [10.koko_eating_bananas](binarysearch/10.koko_eating_bananas.py)\n    - [11.min_in_rotated_sorted_array](binarysearch/11.min_in_rotated_sorted_array.py)\n    - [12.minimum_size_subarray](binarysearch/12.minimum_size_subarray.py)\n    - [13.next_greater_letter](binarysearch/13.next_greater_letter.py)\n    - [14.peak_index_mountain_array](binarysearch/14.peak_index_mountain_array.py)\n    - [15.search_2d_matrix](binarysearch/15.search_2d_matrix.py)\n    - [16.search_2d_matrix_I2](binarysearch/16.search_2d_matrix_I2.py)\n    - [17.search_insert_position](binarysearch/17.search_insert_position.py)\n    - [18.search_range](binarysearch/18.search_range.py)\n    - [19.search_rotated_array](binarysearch/19.search_rotated_array.py)\n    - [20.search_rotated_array_II](binarysearch/20.search_rotated_array_II.py)\n    - [21.sqrt_number](binarysearch/21.sqrt_number.py)\n    - [22.sum_square_numbers](binarysearch/22.sum_square_numbers.py)\n    - [23.valid_perfect_square](binarysearch/23.valid_perfect_square.py)\n    - [3.count_of_smaller_to_right](binarysearch/3.count_of_smaller_to_right.py)\n    - [4.find_k_closest](binarysearch/4.find_k_closest.py)\n    - [5.find_peak](binarysearch/5.find_peak.py)\n    - [6.find_right_interval](binarysearch/6.find_right_interval.py)\n    - [7.four_sum_count](binarysearch/7.four_sum_count.py)\n    - [8.h_index](binarysearch/8.h_index.py)\n    - [9.heaters](binarysearch/9.heaters.py)\n    - [binary_search](binarysearch/binary_search.py)\n    - [x.first_bad](binarysearch/x.first_bad.py)\n    - [x.guess_number](binarysearch/x.guess_number.py)\n    - [x.random_pick_with_weight](binarysearch/x.random_pick_with_weight.py)\n    - [1.binary_gap](bits/1.binary_gap.py)\n    - [10.number_with_alternating_bits](bits/10.number_with_alternating_bits.py)\n    - [11.prefix_divisible_5](bits/11.prefix_divisible_5.py)\n    - [12.reverse_bits](bits/12.reverse_bits.py)\n    - [13.single_number](bits/13.single_number.py)\n    - [14.single_number_ii](bits/14.single_number_ii.py)\n    - [15.single_number_III](bits/15.single_number_III.py)\n    - [16sum_two_numbers](bits/16sum_two_numbers.py)\n    - [17.total_hamming_distance](bits/17.total_hamming_distance.py)\n    - [2.bitwise_and_range](bits/2.bitwise_and_range.py)\n    - [3.complement_base_10_integer](bits/3.complement_base_10_integer.py)\n    - [4.count_1_bits](bits/4.count_1_bits.py)\n    - [5.count_set_bits_prime](bits/5.count_set_bits_prime.py)\n    - [6.counting_bits](bits/6.counting_bits.py)\n    - [6.find_max_xor_pair](bits/6.find_max_xor_pair.py)\n    - [7.gray_code](bits/7.gray_code.py)\n    - [8.is_one_bit_character](bits/8.is_one_bit_character.py)\n    - [9.max_product_word_lengths](bits/9.max_product_word_lengths.py)\n    - [1.bst_to_greater_sum_tree](bst/1.bst_to_greater_sum_tree.py)\n    - [10.my_calendar](bst/10.my_calendar.py)\n    - [11.range_sum_bst](bst/11.range_sum_bst.py)\n    - [12.search_bst](bst/12.search_bst.py)\n    - [13.two_sum_bst](bst/13.two_sum_bst.py)\n    - [2.delete_node](bst/2.delete_node.py)\n    - [3.find_mode_bst](bst/3.find_mode_bst.py)\n    - [4.increasing_order_search_tree](bst/4.increasing_order_search_tree.py)\n    - [5.insert_into_bst](bst/5.insert_into_bst.py)\n    - [6.kth_smallest_element](bst/6.kth_smallest_element.py)\n    - [7.lowest_common_ancestor_bst](bst/7.lowest_common_ancestor_bst.py)\n    - [8.min_distance_bst](bst/8.min_distance_bst.py)\n    - [9.minimum_diff_bst](bst/9.minimum_diff_bst.py)\n    - [bst_implementation](bst/bst_implementation.py)\n    - [bst_iterator](bst/bst_iterator.py)\n    - [validate_bst](bst/validate_bst.py)\n    - [x.list_to_bst](bst/x.list_to_bst.py)\n    - [x.recover_bst](bst/x.recover_bst.py)\n    - [1.best_sight_seeing_pair](dp/1.best_sight_seeing_pair.py)\n    - [10.delete_operations_for_two_strings](dp/10.delete_operations_for_two_strings.py)\n    - [11.distinct_subsequences](dp/11.distinct_subsequences.py)\n    - [12.dungeon_princess](dp/12.dungeon_princess.py)\n    - [13.edit_distance](dp/13.edit_distance.py)\n    - [14.fibonacci](dp/14.fibonacci.py)\n    - [15.flip_array](dp/15.flip_array.py)\n    - [16.house_robber](dp/16.house_robber.py)\n    - [16.integer_replacement](dp/16.integer_replacement.py)\n    - [17.interleaving_strings](dp/17.interleaving_strings.py)\n    - [18.jump_game](dp/18.jump_game.py)\n    - [19.jump_game_II](dp/19.jump_game_II.py)\n    - [2.bitonic_subsequence](dp/2.bitonic_subsequence.py)\n    - [20.kth_grammar](dp/20.kth_grammar.py)\n    - [21.longest_common_subsequence](dp/21.longest_common_subsequence.py)\n    - [22.longest_increasing_subsequence](dp/22.longest_increasing_subsequence.py)\n    - [23.longest_palindromic_subsequence](dp/23.longest_palindromic_subsequence.py)\n    - [24.matrix_chain_multiplication](dp/24.matrix_chain_multiplication.py)\n    - [25.max_crossed_lines](dp/25.max_crossed_lines.py)\n    - [26.max_product_subarray](dp/26.max_product_subarray.py)\n    - [27.max_sum_without_adjacent_elements](dp/27.max_sum_without_adjacent_elements.py)\n    - [28.maximum_sum_two_non_overlapping_subarray](dp/28.maximum_sum_two_non_overlapping_subarray.py)\n    - [29.min_cost_climbing_stairs](dp/29.min_cost_climbing_stairs.py)\n    - [3.box_stacking](dp/3.box_stacking.py)\n    - [30.minimum_path_sum](dp/30.minimum_path_sum.py)\n    - [31.nth_ugly_number](dp/31.nth_ugly_number.py)\n    - [32.partition_equal_subset](dp/32.partition_equal_subset.py)\n    - [33.party](dp/33.party.py)\n    - [34.pascal](dp/34.pascal.py)\n    - [35.pascal_row](dp/35.pascal_row.py)\n    - [36.perfect_squares](dp/36.perfect_squares.py)\n    - [37.pow](dp/37.pow.py)\n    - [38.range_sum_query](dp/38.range_sum_query.py)\n    - [39.range_sum_query_2d](dp/39.range_sum_query_2d.py)\n    - [4.capacity_to_ship_packages](dp/4.capacity_to_ship_packages.py)\n    - [40.range_sum_query_mutable](dp/40.range_sum_query_mutable.py)\n    - [41.repeating_subsequence](dp/41.repeating_subsequence.py)\n    - [42.russian_doll](dp/42.russian_doll.py)\n    - [43.scramble_string](dp/43.scramble_string.py)\n    - [44.super_ugly_number](dp/44.super_ugly_number.py)\n    - [45.triangle_min_path](dp/45.triangle_min_path.py)\n    - [46.unique_bst](dp/46.unique_bst.py)\n    - [47.unique_paths](dp/47.unique_paths.py)\n    - [48.unique_paths_with_obstacle](dp/48.unique_paths_with_obstacle.py)\n    - [49.zero_one_matrix](dp/49.zero_one_matrix.py)\n    - [5.climbing_stairs](dp/5.climbing_stairs.py)\n    - [6.coin_sum_infinite](dp/6.coin_sum_infinite.py)\n    - [7.continuous_subarray_sum](dp/7.continuous_subarray_sum.py)\n    - [8.count_number_without_consecutive_ones](dp/8.count_number_without_consecutive_ones.py)\n    - [9.decode_ways](dp/9.decode_ways.py)\n    - [fibonacci](dp/fibonacci.py)\n    - [0.graph_implementation](graphs/0.graph_implementation.py)\n    - [1.accounts_merge](graphs/1.accounts_merge.py)\n    - [10.is_bipartate](graphs/10.is_bipartate.py)\n    - [11.keys_and_rooms](graphs/11.keys_and_rooms.py)\n    - [12.longest_increasing_path_matrix](graphs/12.longest_increasing_path_matrix.py)\n    - [13.make_larger_island](graphs/13.make_larger_island.py)\n    - [14.max_area_island](graphs/14.max_area_island.py)\n    - [15.maximum_sum](graphs/15.maximum_sum.py)\n    - [16.min_genetic_mutations](graphs/16.min_genetic_mutations.py)\n    - [17.minesweeper](graphs/17.minesweeper.py)\n    - [18.minimum_height_trees](graphs/18.minimum_height_trees.py)\n    - [19.network_delay_time](graphs/19.network_delay_time.py)\n    - [2.bt_right_view](graphs/2.bt_right_view.py)\n    - [20.nodes_at_distance](graphs/20.nodes_at_distance.py)\n    - [21.number_islands](graphs/21.number_islands.py)\n    - [22.number_of_enclaves](graphs/22.number_of_enclaves.py)\n    - [23.number_of_sqaureful_arrays](graphs/23.number_of_sqaureful_arrays.py)\n    - [24.regions_cut_by_slashes](graphs/24.regions_cut_by_slashes.py)\n    - [25.regular_expression_match](graphs/25.regular_expression_match.py)\n    - [26.regular_expression_two](graphs/26.regular_expression_two.py)\n    - [27.rotton_oranges](graphs/27.rotton_oranges.py)\n    - [28.shortest_bridge](graphs/28.shortest_bridge.py)\n    - [29.shortest_path_binary_matrix](graphs/29.shortest_path_binary_matrix.py)\n    - [3.color_the_border](graphs/3.color_the_border.py)\n    - [30.surround_region](graphs/30.surround_region.py)\n    - [31.town_judge](graphs/31.town_judge.py)\n    - [32.tushars_birthday](graphs/32.tushars_birthday.py)\n    - [33.unique_paths_III](graphs/33.unique_paths_III.py)\n    - [34.water_and_jug](graphs/34.water_and_jug.py)\n    - [35.word_ladder](graphs/35.word_ladder.py)\n    - [36.word_ladder_two](graphs/36.word_ladder_two.py)\n    - [37.word_search](graphs/37.word_search.py)\n    - [4.concatenated_words](graphs/4.concatenated_words.py)\n    - [5.course_order](graphs/5.course_order.py)\n    - [6.flood_fill](graphs/6.flood_fill.py)\n    - [7.flower_planting_with_no_adjacent](graphs/7.flower_planting_with_no_adjacent.py)\n    - [8.friend_circle](graphs/8.friend_circle.py)\n    - [9.house_robber_three](graphs/9.house_robber_three.py)\n    - [test](graphs/test.py)\n    - [x.clone_graph](graphs/x.clone_graph.py)\n    - [x.employee_importance](graphs/x.employee_importance.py)\n    - [x.pacific_atlantic_water_flow](graphs/x.pacific_atlantic_water_flow.py)\n    - [x.redundant_connection](graphs/x.redundant_connection.py)\n    - [1.burst_balloons](greedy/1.burst_balloons.py)\n    - [10.moving_stones](greedy/10.moving_stones.py)\n    - [11.non_overlapping_intervals](greedy/11.non_overlapping_intervals.py)\n    - [12.queue_reconstruction_by_height](greedy/12.queue_reconstruction_by_height.py)\n    - [13.relative_ranks](greedy/13.relative_ranks.py)\n    - [14.remove_outermost_parantheses](greedy/14.remove_outermost_parantheses.py)\n    - [15.reorganize_string](greedy/15.reorganize_string.py)\n    - [16.two_city_scheduling](greedy/16.two_city_scheduling.py)\n    - [2.di_string_match](greedy/2.di_string_match.py)\n    - [3.dota2_senate](greedy/3.dota2_senate.py)\n    - [4.fair_candy_swap](greedy/4.fair_candy_swap.py)\n    - [5.is_subsequence](greedy/5.is_subsequence.py)\n    - [6.make_paran_valid](greedy/6.make_paran_valid.py)\n    - [7.max_chunks_to_make_sorted](greedy/7.max_chunks_to_make_sorted.py)\n    - [8.max_chunks_to_make_sorted_II](greedy/8.max_chunks_to_make_sorted_II.py)\n    - [9.maximize_sum_array](greedy/9.maximize_sum_array.py)\n    - [1.banned_words](hashtables/1.banned_words.py)\n    - [10.find_common_characters](hashtables/10.find_common_characters.py)\n    - [11.four_sum](hashtables/11.four_sum.py)\n    - [12.fraction_to_decimal](hashtables/12.fraction_to_decimal.py)\n    - [13.group_anagrams](hashtables/13.group_anagrams.py)\n    - [14.keyboard_row](hashtables/14.keyboard_row.py)\n    - [15.largest_triangle_area](hashtables/15.largest_triangle_area.py)\n    - [16.lemonade_change](hashtables/16.lemonade_change.py)\n    - [17.longest_consecutive_sequence](hashtables/17.longest_consecutive_sequence.py)\n    - [18.longest_word_dictionary](hashtables/18.longest_word_dictionary.py)\n    - [19.minimum_index_sum_of_two_lists](hashtables/19.minimum_index_sum_of_two_lists.py)\n    - [2.boomerang_points](hashtables/2.boomerang_points.py)\n    - [20.n_repeated_elements](hashtables/20.n_repeated_elements.py)\n    - [21.pairs_with_sum](hashtables/21.pairs_with_sum.py)\n    - [22.powerful_integers](hashtables/22.powerful_integers.py)\n    - [23.repeated_dna_sequences](hashtables/23.repeated_dna_sequences.py)\n    - [24.shortest_completing_word](hashtables/24.shortest_completing_word.py)\n    - [25.shuffle_array](hashtables/25.shuffle_array.py)\n    - [26.sort_by_count](hashtables/26.sort_by_count.py)\n    - [27.subdomain_visit_count](hashtables/27.subdomain_visit_count.py)\n    - [28.substring_concat](hashtables/28.substring_concat.py)\n    - [29.three_sum](hashtables/29.three_sum.py)\n    - [3.bulls_and_cows](hashtables/3.bulls_and_cows.py)\n    - [30.two_sum](hashtables/30.two_sum.py)\n    - [31.uncommon_words](hashtables/31.uncommon_words.py)\n    - [32.valid_sudoku](hashtables/32.valid_sudoku.py)\n    - [33.verifying_alien_dictionary](hashtables/33.verifying_alien_dictionary.py)\n    - [34.word_pattern](hashtables/34.word_pattern.py)\n    - [35.word_subsets](hashtables/35.word_subsets.py)\n    - [4.contiguous_array](hashtables/4.contiguous_array.py)\n    - [5.deck_of_cards](hashtables/5.deck_of_cards.py)\n    - [6.distant_barcodes](hashtables/6.distant_barcodes.py)\n    - [7.encode_decode](hashtables/7.encode_decode.py)\n    - [8.expressive_words](hashtables/8.expressive_words.py)\n    - [9.find_and_replace_pattern](hashtables/9.find_and_replace_pattern.py)\n    - [hashmap](hashtables/hashmap.py)\n    - [hashmap_implementation](hashtables/hashmap_implementation.py)\n    - [hashset](hashtables/hashset.py)\n    - [insert_delete_random](hashtables/insert_delete_random.py)\n    - [insert_delete_random_duplicates](hashtables/insert_delete_random_duplicates.py)\n    - [lru_cache](hashtables/lru_cache.py)\n    - [magic_dictionary](hashtables/magic_dictionary.py)\n    - [1.check_valid_triangle](heaps/1.check_valid_triangle.py)\n    - [10.sliding_window_median](heaps/10.sliding_window_median.py)\n    - [11.top_k_frequent_words](heaps/11.top_k_frequent_words.py)\n    - [2.design_twitter](heaps/2.design_twitter.py)\n    - [3.k_most_frequent](heaps/3.k_most_frequent.py)\n    - [4.k_pairs_with_smallest_sums](heaps/4.k_pairs_with_smallest_sums.py)\n    - [5.kth_largest](heaps/5.kth_largest.py)\n    - [6.kth_largest_in_stream](heaps/6.kth_largest_in_stream.py)\n    - [7.kth_smallest_in_sorted_matrix](heaps/7.kth_smallest_in_sorted_matrix.py)\n    - [8.last_stone_weight](heaps/8.last_stone_weight.py)\n    - [9.median_of_stream](heaps/9.median_of_stream.py)\n    - [heap_implementation](heaps/heap_implementation.py)\n    - [priority_queue_implementation](heaps/priority_queue_implementation.py)\n    - [1.add_two_numbers](linkedlist/1.add_two_numbers.py)\n    - [10.list_palindrome](linkedlist/10.list_palindrome.py)\n    - [11.merge_k_lists](linkedlist/11.merge_k_lists.py)\n    - [12.middle_linked_list](linkedlist/12.middle_linked_list.py)\n    - [13.merge_two_lists](linkedlist/13.merge_two_lists.py)\n    - [14.odd_even_linked_list](linkedlist/14.odd_even_linked_list.py)\n    - [15.partition_list](linkedlist/15.partition_list.py)\n    - [16.remove_element](linkedlist/16.remove_element.py)\n    - [17.remove_nth_end](linkedlist/17.remove_nth_end.py)\n    - [18.reorder_list](linkedlist/18.reorder_list.py)\n    - [19.reverse_k_groups](linkedlist/19.reverse_k_groups.py)\n    - [2.add_two_numbers_II](linkedlist/2.add_two_numbers_II.py)\n    - [20.reverse_linkedlist](linkedlist/20.reverse_linkedlist.py)\n    - [21.reverse_mn](linkedlist/21.reverse_mn.py)\n    - [22.rotate_list](linkedlist/22.rotate_list.py)\n    - [23.sort_list](linkedlist/23.sort_list.py)\n    - [24.swap_pairs](linkedlist/24.swap_pairs.py)\n    - [3.delete_duplicates](linkedlist/3.delete_duplicates.py)\n    - [4.delete_duplicates_all](linkedlist/4.delete_duplicates_all.py)\n    - [5.insertion_sort_list_geeks](linkedlist/5.insertion_sort_list_geeks.py)\n    - [6.insertion_sort_list](linkedlist/6.insertion_sort_list.py)\n    - [7.intersection_geeks](linkedlist/7.intersection_geeks.py)\n    - [8.linked_cycle](linkedlist/8.linked_cycle.py)\n    - [9.linked_list_cycle_II](linkedlist/9.linked_list_cycle_II.py)\n    - [delete_node_without_head](linkedlist/delete_node_without_head.py)\n    - [intersection](linkedlist/intersection.py)\n    - [linkedlist](linkedlist/linkedlist.py)\n    - [linked_list_random](linkedlist/linked_list_random.py)\n    - [next_greater_node](linkedlist/next_greater_node.py)\n    - [singly_linked_list_implementation](linkedlist/singly_linked_list_implementation.py)\n    - [split_list_in_parts](linkedlist/split_list_in_parts.py)\n    - [test](linkedlist/test.py)\n    - [1.add_binary_mod1](math/1.add_binary_mod1.py)\n    - [10.count_zeroes_factorial](math/10.count_zeroes_factorial.py)\n    - [11.divide_two_numbers](math/11.divide_two_numbers.py)\n    - [12.divisor_game](math/12.divisor_game.py)\n    - [13.elimination_game](math/13.elimination_game.py)\n    - [14.finding_position](math/14.finding_position.py)\n    - [15.game_of_nim](math/15.game_of_nim.py)\n    - [16.hamming_distance](math/16.hamming_distance.py)\n    - [17.happy_numbers](math/17.happy_numbers.py)\n    - [18.integer_to_english_words](math/18.integer_to_english_words.py)\n    - [19.intersection_two_arrays](math/19.intersection_two_arrays.py)\n    - [2.add_digits](math/2.add_digits.py)\n    - [20.largest_triangle_area](math/20.largest_triangle_area.py)\n    - [21.letter_tile_possibilities](math/21.letter_tile_possibilities.py)\n    - [22.majority_element](math/22.majority_element.py)\n    - [24.max_points_on_line](math/24.max_points_on_line.py)\n    - [25.min_time_difference](math/25.min_time_difference.py)\n    - [26.minimum_area_rectangle](math/26.minimum_area_rectangle.py)\n    - [27.missing_number](math/27.missing_number.py)\n    - [28.next_greater_III](math/28.next_greater_III.py)\n    - [29.next_permutation](math/29.next_permutation.py)\n    - [3.basic_calculator_I](math/3.basic_calculator_I.py)\n    - [30.nth_digit](math/30.nth_digit.py)\n    - [31.num_to_col](math/31.num_to_col.py)\n    - [32.perfect_number](math/32.perfect_number.py)\n    - [33.power_of_two](math/33.power_of_two.py)\n    - [34.reach_a_number](math/34.reach_a_number.py)\n    - [35.rectangle_overlap](math/35.rectangle_overlap.py)\n    - [36.self_dividing_numbers](math/36.self_dividing_numbers.py)\n    - [37.smallest_integer_divisible_by_k](math/37.smallest_integer_divisible_by_k.py)\n    - [38.statistics_from_sample](math/38.statistics_from_sample.py)\n    - [39.ugly_numbers](math/39.ugly_numbers.py)\n    - [4.basic_calculator_II](math/4.basic_calculator_II.py)\n    - [40.valid_boomerang](math/40.valid_boomerang.py)\n    - [41.valid_number](math/41.valid_number.py)\n    - [42.valid_triangle_number](math/42.valid_triangle_number.py)\n    - [5.construct_rectangle](math/5.construct_rectangle.py)\n    - [6.convert_to_base_7](math/6.convert_to_base_7.py)\n    - [7.convert_to_hex](math/7.convert_to_hex.py)\n    - [8.convert_to_number](math/8.convert_to_number.py)\n    - [9.count_primes](math/9.count_primes.py)\n    - [add_binary](math/add_binary.py)\n    - [total_time](math/total_time.py)\n    - [1.battleships_in_a_board](matrix/1.battleships_in_a_board.py)\n    - [10.reshape_matrix](matrix/10.reshape_matrix.py)\n    - [11.robot_bounded_circle](matrix/11.robot_bounded_circle.py)\n    - [12.rook_captures](matrix/12.rook_captures.py)\n    - [13.rotate_image_v1](matrix/13.rotate_image_v1.py)\n    - [14.set_matrix_zeros](matrix/14.set_matrix_zeros.py)\n    - [15.spiral_matrix](matrix/15.spiral_matrix.py)\n    - [16.spiral_matrix_generate](matrix/16.spiral_matrix_generate.py)\n    - [17.spiral_matrix_III](matrix/17.spiral_matrix_III.py)\n    - [18.toeplitz_matrix](matrix/18.toeplitz_matrix.py)\n    - [19.transpose_matrix](matrix/19.transpose_matrix.py)\n    - [2.brick_wall](matrix/2.brick_wall.py)\n    - [20.](matrix/20..py)\n    - [3.flip_image](matrix/3.flip_image.py)\n    - [4.game_of_life](matrix/4.game_of_life.py)\n    - [5.image_smoother](matrix/5.image_smoother.py)\n    - [6.island_perimeter](matrix/6.island_perimeter.py)\n    - [7.magic_squares_in_grid](matrix/7.magic_squares_in_grid.py)\n    - [8.matrix_cells_distance](matrix/8.matrix_cells_distance.py)\n    - [9.range_addition](matrix/9.range_addition.py)\n    - [rotate_image](matrix/rotate_image.py)\n    - [1.car_pooling](queues/1.car_pooling.py)\n    - [2.circular_deque_implementation](queues/2.circular_deque_implementation.py)\n    - [3.circular_queue_implementation](queues/3.circular_queue_implementation.py)\n    - [4.gas_station](queues/4.gas_station.py)\n    - [5.max_sliding_window](queues/5.max_sliding_window.py)\n    - [6.queue_implementation](queues/6.queue_implementation.py)\n    - [7.queue_using_stacks](queues/7.queue_using_stacks.py)\n    - [8.rotate_string](queues/8.rotate_string.py)\n    - [9.stack_using_queues](queues/9.stack_using_queues.py)\n    - [1.bubble_sort](sort/1.bubble_sort.py)\n    - [10.most_profit_workers](sort/10.most_profit_workers.py)\n    - [11.quick_sort_v2](sort/11.quick_sort_v2.py)\n    - [12.reorder_logs](sort/12.reorder_logs.py)\n    - [13.selection_sort_v2](sort/13.selection_sort_v2.py)\n    - [14.sort_array_parity_II](sort/14.sort_array_parity_II.py)\n    - [15.sort_by_parity](sort/15.sort_by_parity.py)\n    - [16.sort_three_colors](sort/16.sort_three_colors.py)\n    - [17.insertion_sort](sort/17.insertion_sort.py)\n    - [18.merge_sort](sort/18.merge_sort.py)\n    - [19.quick_sort](sort/19.quick_sort.py)\n    - [2.delete_columns_to_make_sorted](sort/2.delete_columns_to_make_sorted.py)\n    - [20.selection_sort](sort/20.selection_sort.py)\n    - [3.height_checker](sort/3.height_checker.py)\n    - [4.insertion_sort_v2](sort/4.insertion_sort_v2.py)\n    - [5.k_closest_points_to_origin](sort/5.k_closest_points_to_origin.py)\n    - [6.lexical_numbers](sort/6.lexical_numbers.py)\n    - [7.longest_harmonious_sequence](sort/7.longest_harmonious_sequence.py)\n    - [8.max_gap](sort/8.max_gap.py)\n    - [9.merge_sort_v2](sort/9.merge_sort_v2.py)\n    - [1.asteroid_collinsion](stack/1.asteroid_collinsion.py)\n    - [10.min_stack](stack/10.min_stack.py)\n    - [11.next_greater_element_II](stack/11.next_greater_element_II.py)\n    - [12.one_three_two_pattern](stack/12.one_three_two_pattern.py)\n    - [13.remove_k_digits](stack/13.remove_k_digits.py)\n    - [14.simplify_path](stack/14.simplify_path.py)\n    - [15.smallest_distinct_seq](stack/15.smallest_distinct_seq.py)\n    - [16.trap_rainwater](stack/16.trap_rainwater.py)\n    - [17.valid_paran](stack/17.valid_paran.py)\n    - [18.validate_stack_sequence](stack/18.validate_stack_sequence.py)\n    - [2.baseball_game](stack/2.baseball_game.py)\n    - [3.daily_temperatures](stack/3.daily_temperatures.py)\n    - [4.duplicate_removal](stack/4.duplicate_removal.py)\n    - [5.evaluate_reverse_polish_notation](stack/5.evaluate_reverse_polish_notation.py)\n    - [6.exclusive_fuction_time](stack/6.exclusive_fuction_time.py)\n    - [7.largest_rectangle_in_histogram](stack/7.largest_rectangle_in_histogram.py)\n    - [8.longest_valid_paranthesis](stack/8.longest_valid_paranthesis.py)\n    - [9.maximal_rectangle](stack/9.maximal_rectangle.py)\n    - [1.2.add_binary](strings/1.2.add_binary.py)\n    - [1.add_binary_v2](strings/1.add_binary_v2.py)\n    - [10.decode_string](strings/10.decode_string.py)\n    - [10.decode_string_v2](strings/10.decode_string_v2.py)\n    - [11.defanged_ip_address](strings/11.defanged_ip_address.py)\n    - [12.detect_capital](strings/12.detect_capital.py)\n    - [13.find_all_anagrams](strings/13.find_all_anagrams.py)\n    - [14.find_and_replace](strings/14.find_and_replace.py)\n    - [15.find_duplicate_files](strings/15.find_duplicate_files.py)\n    - [16.first_unique_character](strings/16.first_unique_character.py)\n    - [17.gcd_of_string](strings/17.gcd_of_string.py)\n    - [18.goat_latin](strings/18.goat_latin.py)\n    - [19.int_to_roman](strings/19.int_to_roman.py)\n    - [19.int_to_roman_v2](strings/19.int_to_roman_v2.py)\n    - [2.add_strings](strings/2.add_strings.py)\n    - [20.isomorphic](strings/20.isomorphic.py)\n    - [21.jewels](strings/21.jewels.py)\n    - [22.largest_number](strings/22.largest_number.py)\n    - [23.length_of_last_word](strings/23.length_of_last_word.py)\n    - [24.licence_key_reformatting](strings/24.licence_key_reformatting.py)\n    - [25.long_pressed_name](strings/25.long_pressed_name.py)\n    - [26.longest_common_prefix](strings/26.longest_common_prefix.py)\n    - [27.longest_palin_substring](strings/27.longest_palin_substring.py)\n    - [28.longest_palindrome](strings/28.longest_palindrome.py)\n    - [29.longest_substring_with_k_chars](strings/29.longest_substring_with_k_chars.py)\n    - [3.backspace_compare](strings/3.backspace_compare.py)\n    - [30.longest_substring_without_repeating](strings/30.longest_substring_without_repeating.py)\n    - [31.longest_uncommon_seq](strings/31.longest_uncommon_seq.py)\n    - [32.magical_strings](strings/32.magical_strings.py)\n    - [33.minimum_window_string](strings/33.minimum_window_string.py)\n    - [34.number_of_lines_to_write_string](strings/34.number_of_lines_to_write_string.py)\n    - [35.multiply_strings](strings/35.multiply_strings.py)\n    - [35.multiply_strings_v2](strings/35.multiply_strings_v2.py)\n    - [36.number_of_segments_string](strings/36.number_of_segments_string.py)\n    - [37.occurances_after_bigram](strings/37.occurances_after_bigram.py)\n    - [38.optimal_division](strings/38.optimal_division.py)\n    - [39.palindrome](strings/39.palindrome.py)\n    - [4.buddy_strings](strings/4.buddy_strings.py)\n    - [40.permutations_in_string](strings/40.permutations_in_string.py)\n    - [41.ransom_note](strings/41.ransom_note.py)\n    - [42.remove_comments](strings/42.remove_comments.py)\n    - [43.remove_duplicate_letters](strings/43.remove_duplicate_letters.py)\n    - [44.repeated_string_match](strings/44.repeated_string_match.py)\n    - [45.repeated_substring_pattern](strings/45.repeated_substring_pattern.py)\n    - [46.reverse_int](strings/46.reverse_int.py)\n    - [47.reverse_only_letters](strings/47.reverse_only_letters.py)\n    - [48.reverse_string](strings/48.reverse_string.py)\n    - [48.reverse_string_v2](strings/48.reverse_string_v2.py)\n    - [49.reverse_string_II](strings/49.reverse_string_II.py)\n    - [5.camelcase_matching](strings/5.camelcase_matching.py)\n    - [50.reverse_string_words](strings/50.reverse_string_words.py)\n    - [51.reverse_vowels_strings](strings/51.reverse_vowels_strings.py)\n    - [52.reverse_words_III](strings/52.reverse_words_III.py)\n    - [53.robot_origin](strings/53.robot_origin.py)\n    - [54.roman_to_int](strings/54.roman_to_int.py)\n    - [54.roman_to_int_v2](strings/54.roman_to_int_v2.py)\n    - [55.rotated_digits](strings/55.rotated_digits.py)\n    - [56.shifting_letters](strings/56.shifting_letters.py)\n    - [57.shortest_distance_to_character](strings/57.shortest_distance_to_character.py)\n    - [58.shortest_palindrome](strings/58.shortest_palindrome.py)\n    - [59.string_compression](strings/59.string_compression.py)\n    - [6.compare_version_numbers](strings/6.compare_version_numbers.py)\n    - [60.string_to_integer](strings/60.string_to_integer.py)\n    - [61.strstr](strings/61.strstr.py)\n    - [62.to_lower](strings/62.to_lower.py)\n    - [63.unique_email](strings/63.unique_email.py)\n    - [64.unique_morse_code](strings/64.unique_morse_code.py)\n    - [65.valid_anagram](strings/65.valid_anagram.py)\n    - [66.valid_ip](strings/66.valid_ip.py)\n    - [67.valid_palin](strings/67.valid_palin.py)\n    - [68.valid_palindrome_II](strings/68.valid_palindrome_II.py)\n    - [69.valid_string_after_subs](strings/69.valid_string_after_subs.py)\n    - [7.complex_number_multiplication](strings/7.complex_number_multiplication.py)\n    - [70.zigzag_conversion](strings/70.zigzag_conversion.py)\n    - [8.count_binary_strings](strings/8.count_binary_strings.py)\n    - [9.count_say](strings/9.count_say.py)\n    - [1.add_row_to_tree](trees/1.add_row_to_tree.py)\n    - [2.array_bst](trees/2.array_bst.py)\n    - [3.average_levels](trees/3.average_levels.py)\n    - [4.bst_to_greater_tree](trees/4.bst_to_greater_tree.py)\n    - [5.build_tree_postorder](trees/5.build_tree_postorder.py)\n    - [6.construct_pre_in](trees/6.construct_pre_in.py)\n    - [count_complete_tree_nodes](trees/count_complete_tree_nodes.py)\n    - [cousins_in_binary_trees](trees/cousins_in_binary_trees.py)\n    - [diameter_binary_tree](trees/diameter_binary_tree.py)\n    - [find_bottom_left](trees/find_bottom_left.py)\n    - [flatten_binary_tree_to_linked_list](trees/flatten_binary_tree_to_linked_list.py)\n    - [inorder](trees/inorder.py)\n    - [invert_tree](trees/invert_tree.py)\n    - [is_balanced](trees/is_balanced.py)\n    - [largest_value_level](trees/largest_value_level.py)\n    - [lca_deepest_leaves](trees/lca_deepest_leaves.py)\n    - [left_similar_trees](trees/left_similar_trees.py)\n    - [level_order_one](trees/level_order_one.py)\n    - [level_order_two](trees/level_order_two.py)\n    - [lowest_common_ancestor](trees/lowest_common_ancestor.py)\n    - [maximum_diff_between_ancestor_and_node](trees/maximum_diff_between_ancestor_and_node.py)\n    - [maximum_path_sum](trees/maximum_path_sum.py)\n    - [max_depth](trees/max_depth.py)\n    - [max_depth_n_ary](trees/max_depth_n_ary.py)\n    - [max_subtree](trees/max_subtree.py)\n    - [merge_two_trees](trees/merge_two_trees.py)\n    - [min_depth](trees/min_depth.py)\n    - [most_frequent_subtree_sum](trees/most_frequent_subtree_sum.py)\n    - [nary_level_order](trees/nary_level_order.py)\n    - [nodes_at_distance_k](trees/nodes_at_distance_k.py)\n    - [n_ary_postorder](trees/n_ary_postorder.py)\n    - [n_ary_preorder](trees/n_ary_preorder.py)\n    - [path_sum](trees/path_sum.py)\n    - [path_sum_all](trees/path_sum_all.py)\n    - [path_sum_III](trees/path_sum_III.py)\n    - [populate_next_right_pointer](trees/populate_next_right_pointer.py)\n    - [postorder](trees/postorder.py)\n    - [preorder](trees/preorder.py)\n    - [same_tree](trees/same_tree.py)\n    - [second_minimum_node](trees/second_minimum_node.py)\n    - [serialize_tree](trees/serialize_tree.py)\n    - [subtree_of_another_tree](trees/subtree_of_another_tree.py)\n    - [sum_of_left_leaves](trees/sum_of_left_leaves.py)\n    - [sum_root_to_leafs](trees/sum_root_to_leafs.py)\n    - [sum_root_to_leaf_paths](trees/sum_root_to_leaf_paths.py)\n    - [symmetric](trees/symmetric.py)\n    - [tilt_tree](trees/tilt_tree.py)\n    - [tree_implementation](trees/tree_implementation.py)\n    - [tree_paths](trees/tree_paths.py)\n    - [trie_implementation](trees/trie_implementation.py)\n    - [univalue_tree](trees/univalue_tree.py)\n    - [verify_tree_serialization](trees/verify_tree_serialization.py)\n    - [zigzag_level_order](trees/zigzag_level_order.py)\n    - [longest_word_dictionary](trie/longest_word_dictionary.py)\n    - [replace_words](trie/replace_words.py)\n    - [trie_implementation](trie/trie_implementation.py)\n    - [word_search_II](trie/word_search_II.py)\n    - [container_with_most_water](twopointers/container_with_most_water.py)\n    - [find_duplicate_number](twopointers/find_duplicate_number.py)\n    - [longest_repeating_character_replacement](twopointers/longest_repeating_character_replacement.py)\n    - [longest_word_in_dictionary](twopointers/longest_word_in_dictionary.py)\n    - [remove_duplicates](twopointers/remove_duplicates.py)\n    - [remove_element](twopointers/remove_element.py)\n    - [squares_of_sorted_array](twopointers/squares_of_sorted_array.py)\n    - [three_sum_closest](twopointers/three_sum_closest.py)\n    - [segment_trees](x_/segment_trees.py)\n    \n  - [arrays](arrays)\n    - [add_to_array_form](arrays/add_to_array_form.py)\n    - [array_partition](arrays/array_partition.py)\n    - [assign_cookies](arrays/assign_cookies.py)\n    - [best_time_to_buy_stock](arrays/best_time_to_buy_stock.py)\n    - [best_time_to_buy_stock_all](arrays/best_time_to_buy_stock_all.py)\n    - [candies_people](arrays/candies_people.py)\n    - [coins_in_a_line](arrays/coins_in_a_line.py)\n    - [contains_duplicate_one](arrays/contains_duplicate_one.py)\n    - [contains_duplicate_range](arrays/contains_duplicate_range.py)\n    - [degree_array](arrays/degree_array.py)\n    - [distribute_candies](arrays/distribute_candies.py)\n    - [duplicate_zeroes](arrays/duplicate_zeroes.py)\n    - [DynamicArray](arrays/DynamicArray.py)\n    - [find_all_dissapeared_numbers](arrays/find_all_dissapeared_numbers.py)\n    - [find_all_duplicates](arrays/find_all_duplicates.py)\n    - [find_pivot_index](arrays/find_pivot_index.py)\n    - [find_pivot_index_v2](arrays/find_pivot_index_v2.py)\n    - [find_set_mismatch](arrays/find_set_mismatch.py)\n    - [first_missing_positive](arrays/first_missing_positive.py)\n    - [friends_of_ages](arrays/friends_of_ages.py)\n    - [increasing_triplets](arrays/increasing_triplets.py)\n    - [intersect_two_array](arrays/intersect_two_array.py)\n    - [intersect_two_array_v2](arrays/intersect_two_array_v2.py)\n    - [is_monotonic](arrays/is_monotonic.py)\n    - [k_diff_pairs](arrays/k_diff_pairs.py)\n    - [largest_number_twice_of_others](arrays/largest_number_twice_of_others.py)\n    - [longest_continuous_increasing_subsequence](arrays/longest_continuous_increasing_subsequence.py)\n    - [majority_element_2](arrays/majority_element_2.py)\n    - [maximize_distance_to_nearest_person](arrays/maximize_distance_to_nearest_person.py)\n    - [maximum_subarray](arrays/maximum_subarray.py)\n    - [max_average_subarray](arrays/max_average_subarray.py)\n    - [max_consecutive_ones](arrays/max_consecutive_ones.py)\n    - [max_product_three_numbers](arrays/max_product_three_numbers.py)\n    - [merge_intervals](arrays/merge_intervals.py)\n    - [merge_sorted_array](arrays/merge_sorted_array.py)\n    - [minimum_moves_to_equal_array](arrays/minimum_moves_to_equal_array.py)\n    - [min_moves_to_equal_elements](arrays/min_moves_to_equal_elements.py)\n    - [move_zeroes](arrays/move_zeroes.py)\n    - [my_calendar_two](arrays/my_calendar_two.py)\n    - [next_greater_element](arrays/next_greater_element.py)\n    - [non_decreasing_array](arrays/non_decreasing_array.py)\n    - [number_plus_one](arrays/number_plus_one.py)\n    - [partition_array_in_three](arrays/partition_array_in_three.py)\n    - [place_flowers](arrays/place_flowers.py)\n    - [positions_large_groups](arrays/positions_large_groups.py)\n    - [product_of_array_except_self](arrays/product_of_array_except_self.py)\n    - [product_of_array_except_self_v2](arrays/product_of_array_except_self_v2.py)\n    - [remove_duplicates_two](arrays/remove_duplicates_two.py)\n    - [rotate_array](arrays/rotate_array.py)\n    - [shortest_unsorted_subarray](arrays/shortest_unsorted_subarray.py)\n    - [smallest_range_1](arrays/smallest_range_1.py)\n    - [summary_ranges](arrays/summary_ranges.py)\n    - [sum_after_queries](arrays/sum_after_queries.py)\n    - [third_max_number](arrays/third_max_number.py)\n    - [two_sum_sorted_array](arrays/two_sum_sorted_array.py)\n    - [wiggle_sort](arrays/wiggle_sort.py)\n\n  - [backtracking](backtracking)\n    - [binary_watch](backtracking/binary_watch.py)\n    - [combinations_numbers](backtracking/combinations_numbers.py)\n    - [combinations_sum](backtracking/combinations_sum.py)\n    - [combinations_sum_four](backtracking/combinations_sum_four.py)\n    - [combinations_sum_four_v2](backtracking/combinations_sum_four_v2.py)\n    - [combinations_sum_four_v3](backtracking/combinations_sum_four_v3.py)\n    - [combinations_sum_three](backtracking/combinations_sum_three.py)\n    - [combinations_sum_two](backtracking/combinations_sum_two.py)\n    - [decoded_string_at_index](backtracking/decoded_string_at_index.py)\n    - [generate_paranthesis](backtracking/generate_paranthesis.py)\n    - [letter_case_permutations](backtracking/letter_case_permutations.py)\n    - [letter_case_permutations_v2](backtracking/letter_case_permutations_v2.py)\n    - [letter_combinations](backtracking/letter_combinations.py)\n    - [matchsticks_to_square](backtracking/matchsticks_to_square.py)\n    - [NestedIterator](backtracking/NestedIterator.py)\n    - [n_queens](backtracking/n_queens.py)\n    - [palindrome_partition](backtracking/palindrome_partition.py)\n    - [palindrome_partition_v2](backtracking/palindrome_partition_v2.py)\n    - [permutations_one](backtracking/permutations_one.py)\n    - [permutations_two](backtracking/permutations_two.py)\n    - [permutations_two_v2](backtracking/permutations_two_v2.py)\n    - [permutation_sequence](backtracking/permutation_sequence.py)\n    - [restore_ip_addresses](backtracking/restore_ip_addresses.py)\n    - [subsets](backtracking/subsets.py)\n    - [subsets_duplicates](backtracking/subsets_duplicates.py)\n    - [sudoku_solver](backtracking/sudoku_solver.py)\n    - [total_queens](backtracking/total_queens.py)\n    - [valid_time](backtracking/valid_time.py)\n\n  - [binarysearch](binarysearch)\n    - [arranging_coins](binarysearch/arranging_coins.py)\n    - [binary_search](binarysearch/binary_search.py)\n    - [count_smaller](binarysearch/count_smaller.py)\n    - [find_k_closest](binarysearch/find_k_closest.py)\n    - [find_peak](binarysearch/find_peak.py)\n    - [find_right_interval](binarysearch/find_right_interval.py)\n    - [first_bad](binarysearch/first_bad.py)\n    - [four_sum_count](binarysearch/four_sum_count.py)\n    - [guess_number](binarysearch/guess_number.py)\n    - [heaters](binarysearch/heaters.py)\n    - [h_index](binarysearch/h_index.py)\n    - [koko_eating_speed](binarysearch/koko_eating_speed.py)\n    - [koko_eating_speed_v2](binarysearch/koko_eating_speed_v2.py)\n    - [minimum_size_subarray](binarysearch/minimum_size_subarray.py)\n    - [minimum_size_subarray_v2](binarysearch/minimum_size_subarray_v2.py)\n    - [minimum_size_subarray_v3](binarysearch/minimum_size_subarray_v3.py)\n    - [min_in_rotated_sorted_array](binarysearch/min_in_rotated_sorted_array.py)\n    - [next_greater_letter](binarysearch/next_greater_letter.py)\n    - [peak_index_mountain_array](binarysearch/peak_index_mountain_array.py)\n    - [random_pick_with_weight](binarysearch/random_pick_with_weight.py)\n    - [search_2d_matrix](binarysearch/search_2d_matrix.py)\n    - [search_2d_matrix_2](binarysearch/search_2d_matrix_2.py)\n    - [search_2d_matrix_2_v2](binarysearch/search_2d_matrix_2_v2.py)\n    - [search_insert_position](binarysearch/search_insert_position.py)\n    - [search_range](binarysearch/search_range.py)\n    - [search_rotated_array](binarysearch/search_rotated_array.py)\n    - [search_rotated_array_2](binarysearch/search_rotated_array_2.py)\n    - [sqrt_number](binarysearch/sqrt_number.py)\n    - [sum_square_numbers](binarysearch/sum_square_numbers.py)\n    - [sum_square_numbers_v2](binarysearch/sum_square_numbers_v2.py)\n    - [valid_perfect_square](binarysearch/valid_perfect_square.py)\n\n  - [bits](bits)\n    - [binary_gap](bits/binary_gap.py)\n    - [binary_gap_v2](bits/binary_gap_v2.py)\n    - [bitwise_and_range](bits/bitwise_and_range.py)\n    - [bitwise_compliment](bits/bitwise_compliment.py)\n    - [bitwise_compliment_v2](bits/bitwise_compliment_v2.py)\n    - [counting_bits](bits/counting_bits.py)\n    - [counting_bits_v2](bits/counting_bits_v2.py)\n    - [counting_bits_v3](bits/counting_bits_v3.py)\n    - [count_set_bits_prime](bits/count_set_bits_prime.py)\n    - [count_set_bits_prime_v2](bits/count_set_bits_prime_v2.py)\n    - [count_set_bits_prime_v3](bits/count_set_bits_prime_v3.py)\n    - [find_max_xor_pair](bits/find_max_xor_pair.py)\n    - [gray_code](bits/gray_code.py)\n    - [hamming_weight](bits/hamming_weight.py)\n    - [hamming_weight_v2](bits/hamming_weight_v2.py)\n    - [is_one_bit_character](bits/is_one_bit_character.py)\n    - [is_one_bit_character_v2](bits/is_one_bit_character_v2.py)\n    - [max_product_word_lengths](bits/max_product_word_lengths.py)\n    - [max_product_word_lengths_v2](bits/max_product_word_lengths_v2.py)\n    - [max_product_word_lengths_v3](bits/max_product_word_lengths_v3.py)\n    - [number_with_alternating_bits](bits/number_with_alternating_bits.py)\n    - [number_with_alternating_bits_v2](bits/number_with_alternating_bits_v2.py)\n    - [prefix_divisible](bits/prefix_divisible.py)\n    - [prefix_divisible_v2](bits/prefix_divisible_v2.py)\n    - [prefix_divisible_v3](bits/prefix_divisible_v3.py)\n    - [reverse_bits](bits/reverse_bits.py)\n    - [single_number](bits/single_number.py)\n    - [single_number_three](bits/single_number_three.py)\n    - [single_number_twice](bits/single_number_twice.py)\n    - [sum_two_numbers](bits/sum_two_numbers.py)\n    - [total_hamming_distance](bits/total_hamming_distance.py)\n    - [total_hamming_distance_v2](bits/total_hamming_distance_v2.py)\n\n  - [bst](bst)\n    - [bst_implementation](bst/bst_implementation.py)\n    - [bst_iterator](bst/bst_iterator.py)\n    - [bst_to_greater_sum_tree](bst/bst_to_greater_sum_tree.py)\n    - [delete_node](bst/delete_node.py)\n    - [find_mode_bst](bst/find_mode_bst.py)\n    - [increasing_order_search_tree](bst/increasing_order_search_tree.py)\n    - [insert_into_bst](bst/insert_into_bst.py)\n    - [kth_smallest_element](bst/kth_smallest_element.py)\n    - [list_to_bst](bst/list_to_bst.py)\n    - [lowest_common_ancestor_bst](bst/lowest_common_ancestor_bst.py)\n    - [minimum_diff_bst](bst/minimum_diff_bst.py)\n    - [min_distance_bst](bst/min_distance_bst.py)\n    - [my_calendar](bst/my_calendar.py)\n    - [range_sum_bst](bst/range_sum_bst.py)\n    - [recover_bst](bst/recover_bst.py)\n    - [search_bst](bst/search_bst.py)\n    - [two_sum_bst](bst/two_sum_bst.py)\n    - [validate_bst](bst/validate_bst.py)\n    - [best_sight_seeing_pair](dp/best_sight_seeing_pair.py)\n    - [bitonic_subsequence](dp/bitonic_subsequence.py)\n    - [box_stacking](dp/box_stacking.py)\n    - [capacity_to_ship_packages](dp/capacity_to_ship_packages.py)\n    - [climbing_stairs](dp/climbing_stairs.py)\n    - [coin_sum_infinite](dp/coin_sum_infinite.py)\n    - [continuous_subarray_sum](dp/continuous_subarray_sum.py)\n    - [count_number_without_consecutive_ones](dp/count_number_without_consecutive_ones.py)\n    - [decode_ways](dp/decode_ways.py)\n    - [delete_operations_for_two_strings](dp/delete_operations_for_two_strings.py)\n    - [distinct_subsequences](dp/distinct_subsequences.py)\n    - [dungeon_princess](dp/dungeon_princess.py)\n    - [edit_distance](dp/edit_distance.py)\n    - [fibonacci](dp/fibonacci.py)\n    - [flip_array](dp/flip_array.py)\n    - [house_robber](dp/house_robber.py)\n    - [integer_replacement](dp/integer_replacement.py)\n    - [interleaving_strings](dp/interleaving_strings.py)\n    - [jump_game](dp/jump_game.py)\n    - [jump_game_II](dp/jump_game_II.py)\n    - [kth_grammar](dp/kth_grammar.py)\n    - [longest_common_subsequence](dp/longest_common_subsequence.py)\n    - [longest_increasing_subsequence](dp/longest_increasing_subsequence.py)\n    - [longest_palindromic_subsequence](dp/longest_palindromic_subsequence.py)\n    - [matrix_chain_multiplication](dp/matrix_chain_multiplication.py)\n    - [maximum_sum_two_non_overlapping_subarray](dp/maximum_sum_two_non_overlapping_subarray.py)\n    - [max_crossed_lines](dp/max_crossed_lines.py)\n    - [max_product_subarray](dp/max_product_subarray.py)\n    - [max_sum_without_adjacent_elements](dp/max_sum_without_adjacent_elements.py)\n    - [minimum_path_sum](dp/minimum_path_sum.py)\n    - [min_cost_climbing_stairs](dp/min_cost_climbing_stairs.py)\n    - [nth_ugly_number](dp/nth_ugly_number.py)\n    - [partition_equal_subset](dp/partition_equal_subset.py)\n    - [party](dp/party.py)\n    - [pascal](dp/pascal.py)\n    - [pascal_row](dp/pascal_row.py)\n    - [perfect_squares](dp/perfect_squares.py)\n    - [pow](dp/pow.py)\n    - [range_sum_query](dp/range_sum_query.py)\n    - [range_sum_query_2d](dp/range_sum_query_2d.py)\n    - [range_sum_query_mutable](dp/range_sum_query_mutable.py)\n    - [repeating_subsequence](dp/repeating_subsequence.py)\n    - [russian_doll](dp/russian_doll.py)\n    - [scramble_string](dp/scramble_string.py)\n    - [super_ugly_number](dp/super_ugly_number.py)\n    - [triangle_min_path](dp/triangle_min_path.py)\n    - [unique_bst](dp/unique_bst.py)\n    - [unique_paths](dp/unique_paths.py)\n    - [unique_paths_with_obstacle](dp/unique_paths_with_obstacle.py)\n    - [zero_one_matrix](dp/zero_one_matrix.py)\n    - [accounts_merge](graphs/accounts_merge.py)\n    - [bt_right_view](graphs/bt_right_view.py)\n    - [clone_graph](graphs/clone_graph.py)\n    - [color_the_border](graphs/color_the_border.py)\n    - [concatenated_words](graphs/concatenated_words.py)\n    - [course_order](graphs/course_order.py)\n    - [employee_importance](graphs/employee_importance.py)\n    - [flood_fill](graphs/flood_fill.py)\n    - [flower_planting_with_no_adjacent](graphs/flower_planting_with_no_adjacent.py)\n    - [friend_circle](graphs/friend_circle.py)\n    - [graph_implementation](graphs/graph_implementation.py)\n    - [house_robber_three](graphs/house_robber_three.py)\n    - [is_bipartate](graphs/is_bipartate.py)\n    - [keys_and_rooms](graphs/keys_and_rooms.py)\n    - [longest_increasing_path_matrix](graphs/longest_increasing_path_matrix.py)\n    - [make_larger_island](graphs/make_larger_island.py)\n    - [maximum_sum](graphs/maximum_sum.py)\n    - [max_area_island](graphs/max_area_island.py)\n    - [minesweeper](graphs/minesweeper.py)\n    - [minimum_height_trees](graphs/minimum_height_trees.py)\n    - [min_genetic_mutations](graphs/min_genetic_mutations.py)\n    - [network_delay_time](graphs/network_delay_time.py)\n    - [nodes_at_distance](graphs/nodes_at_distance.py)\n    - [number_islands](graphs/number_islands.py)\n    - [number_of_enclaves](graphs/number_of_enclaves.py)\n    - [number_of_sqaureful_arrays](graphs/number_of_sqaureful_arrays.py)\n    - [pacific_atlantic_water_flow](graphs/pacific_atlantic_water_flow.py)\n    - [redundant_connection](graphs/redundant_connection.py)\n    - [regions_cut_by_slashes](graphs/regions_cut_by_slashes.py)\n    - [regular_expression_match](graphs/regular_expression_match.py)\n    - [regular_expression_two](graphs/regular_expression_two.py)\n    - [rotton_oranges](graphs/rotton_oranges.py)\n    - [shortest_bridge](graphs/shortest_bridge.py)\n    - [shortest_path_binary_matrix](graphs/shortest_path_binary_matrix.py)\n    - [surround_region](graphs/surround_region.py)\n    - [town_judge](graphs/town_judge.py)\n    - [tushars_birthday](graphs/tushars_birthday.py)\n    - [unique_paths_III](graphs/unique_paths_III.py)\n    - [water_and_jug](graphs/water_and_jug.py)\n    - [word_ladder](graphs/word_ladder.py)\n    - [word_ladder_two](graphs/word_ladder_two.py)\n    - [word_ladder_v2](graphs/word_ladder_v2.py)\n    - [word_search](graphs/word_search.py)\n    - [burst_balloons](greedy/burst_balloons.py)\n    - [di_string_match](greedy/di_string_match.py)\n    - [dota2_senate](greedy/dota2_senate.py)\n    - [fair_candy_swap](greedy/fair_candy_swap.py)\n    - [is_subsequence](greedy/is_subsequence.py)\n    - [make_paran_valid](greedy/make_paran_valid.py)\n    - [maximize_sum_array](greedy/maximize_sum_array.py)\n    - [max_chunks_to_make_sorted](greedy/max_chunks_to_make_sorted.py)\n    - [max_chunks_to_make_sorted_II](greedy/max_chunks_to_make_sorted_II.py)\n    - [moving_stones](greedy/moving_stones.py)\n    - [non_overlapping_intervals](greedy/non_overlapping_intervals.py)\n    - [queue_reconstruction_by_height](greedy/queue_reconstruction_by_height.py)\n    - [relative_ranks](greedy/relative_ranks.py)\n    - [remove_outermost_parantheses](greedy/remove_outermost_parantheses.py)\n    - [reorganize_string](greedy/reorganize_string.py)\n    - [two_city_scheduling](greedy/two_city_scheduling.py)\n    - [banned_words](hashtables/banned_words.py)\n    - [boomerang_points](hashtables/boomerang_points.py)\n    - [bulls_and_cows](hashtables/bulls_and_cows.py)\n    - [contiguous_array](hashtables/contiguous_array.py)\n    - [deck_of_cards](hashtables/deck_of_cards.py)\n    - [distant_barcodes](hashtables/distant_barcodes.py)\n    - [encode_decode](hashtables/encode_decode.py)\n    - [expressive_words](hashtables/expressive_words.py)\n    - [find_and_replace_pattern](hashtables/find_and_replace_pattern.py)\n    - [find_common_characters](hashtables/find_common_characters.py)\n    - [four_sum](hashtables/four_sum.py)\n    - [fraction_to_decimal](hashtables/fraction_to_decimal.py)\n    - [group_anagrams](hashtables/group_anagrams.py)\n    - [hashmap](hashtables/hashmap.py)\n    - [hashmap_implementation](hashtables/hashmap_implementation.py)\n    - [hashset](hashtables/hashset.py)\n    - [insert_delete_random](hashtables/insert_delete_random.py)\n    - [insert_delete_random_duplicates](hashtables/insert_delete_random_duplicates.py)\n    - [keyboard_row](hashtables/keyboard_row.py)\n    - [largest_triangle_area](hashtables/largest_triangle_area.py)\n    - [lemonade_change](hashtables/lemonade_change.py)\n    - [longest_consecutive_sequence](hashtables/longest_consecutive_sequence.py)\n    - [longest_word_dictionary](hashtables/longest_word_dictionary.py)\n    - [lru_cache](hashtables/lru_cache.py)\n    - [magic_dictionary](hashtables/magic_dictionary.py)\n    - [minimum_index_sum_of_two_lists](hashtables/minimum_index_sum_of_two_lists.py)\n    - [n_repeated_elements](hashtables/n_repeated_elements.py)\n    - [pairs_with_sum](hashtables/pairs_with_sum.py)\n    - [powerful_integers](hashtables/powerful_integers.py)\n    - [repeated_dna_sequences](hashtables/repeated_dna_sequences.py)\n    - [shortest_completing_word](hashtables/shortest_completing_word.py)\n    - [shuffle_array](hashtables/shuffle_array.py)\n    - [sort_by_count](hashtables/sort_by_count.py)\n    - [subdomain_visit_count](hashtables/subdomain_visit_count.py)\n    - [substring_concat](hashtables/substring_concat.py)\n    - [three_sum](hashtables/three_sum.py)\n    - [two_sum](hashtables/two_sum.py)\n    - [uncommon_words](hashtables/uncommon_words.py)\n    - [valid_sudoku](hashtables/valid_sudoku.py)\n    - [verifying_alien_dictionary](hashtables/verifying_alien_dictionary.py)\n    - [word_pattern](hashtables/word_pattern.py)\n    - [word_subsets](hashtables/word_subsets.py)\n    - [check_valid_triangle](heaps/check_valid_triangle.py)\n    - [design_twitter](heaps/design_twitter.py)\n    - [heap_implementation](heaps/heap_implementation.py)\n    - [kth_largest](heaps/kth_largest.py)\n    - [kth_largest_in_stream](heaps/kth_largest_in_stream.py)\n    - [kth_smallest_in_sorted_matrix](heaps/kth_smallest_in_sorted_matrix.py)\n    - [k_most_frequent](heaps/k_most_frequent.py)\n    - [k_pairs_with_smallest_sums](heaps/k_pairs_with_smallest_sums.py)\n    - [last_stone_weight](heaps/last_stone_weight.py)\n    - [median_of_stream](heaps/median_of_stream.py)\n    - [priority_queue_implementation](heaps/priority_queue_implementation.py)\n    - [sliding_window_median](heaps/sliding_window_median.py)\n    - [top_k_frequent_words](heaps/top_k_frequent_words.py)\n    - [add_two_numbers](linkedlist/add_two_numbers.py)\n    - [add_two_numbers_II](linkedlist/add_two_numbers_II.py)\n    - [delete_duplicates](linkedlist/delete_duplicates.py)\n    - [delete_duplicates_all](linkedlist/delete_duplicates_all.py)\n    - [delete_node_without_head](linkedlist/delete_node_without_head.py)\n    - [insertion_sort_list](linkedlist/insertion_sort_list.py)\n    - [insertion_sort_list_geeks](linkedlist/insertion_sort_list_geeks.py)\n    - [intersection](linkedlist/intersection.py)\n    - [intersection_geeks](linkedlist/intersection_geeks.py)\n    - [linkedlist](linkedlist/linkedlist.py)\n    - [linked_cycle](linkedlist/linked_cycle.py)\n    - [linked_list_cycle_II](linkedlist/linked_list_cycle_II.py)\n    - [linked_list_random](linkedlist/linked_list_random.py)\n    - [list_palindrome](linkedlist/list_palindrome.py)\n    - [merge_k_lists](linkedlist/merge_k_lists.py)\n    - [merge_two_lists](linkedlist/merge_two_lists.py)\n    - [middle_linked_list](linkedlist/middle_linked_list.py)\n    - [next_greater_node](linkedlist/next_greater_node.py)\n    - [odd_even_linked_list](linkedlist/odd_even_linked_list.py)\n    - [partition_list](linkedlist/partition_list.py)\n    - [remove_element](linkedlist/remove_element.py)\n    - [remove_nth_end](linkedlist/remove_nth_end.py)\n    - [reorder_list](linkedlist/reorder_list.py)\n    - [reverse_k_groups](linkedlist/reverse_k_groups.py)\n    - [reverse_linkedlist](linkedlist/reverse_linkedlist.py)\n    - [reverse_mn](linkedlist/reverse_mn.py)\n    - [rotate_list](linkedlist/rotate_list.py)\n    - [singly_linked_list_implementation](linkedlist/singly_linked_list_implementation.py)\n    - [sort_list](linkedlist/sort_list.py)\n    - [split_list_in_parts](linkedlist/split_list_in_parts.py)\n    - [swap_pairs](linkedlist/swap_pairs.py)\n    - [swap_pairs_v2](linkedlist/swap_pairs_v2.py)\n    - [add_binary](math/add_binary.py)\n    - [add_digits](math/add_digits.py)\n    - [basic_calculator_I](math/basic_calculator_I.py)\n    - [basic_calculator_II](math/basic_calculator_II.py)\n    - [construct_rectangle](math/construct_rectangle.py)\n    - [convert_to_base_7](math/convert_to_base_7.py)\n    - [convert_to_hex](math/convert_to_hex.py)\n    - [convert_to_number](math/convert_to_number.py)\n    - [count_primes](math/count_primes.py)\n    - [count_zeroes_factorial](math/count_zeroes_factorial.py)\n    - [divide_two_numbers](math/divide_two_numbers.py)\n    - [divisor_game](math/divisor_game.py)\n    - [elimination_game](math/elimination_game.py)\n    - [finding_position](math/finding_position.py)\n    - [game_of_nim](math/game_of_nim.py)\n    - [hamming_distance](math/hamming_distance.py)\n    - [hamming_distance_v2](math/hamming_distance_v2.py)\n    - [happy_numbers](math/happy_numbers.py)\n    - [happy_numbers_v2](math/happy_numbers_v2.py)\n    - [integer_to_english_words](math/integer_to_english_words.py)\n    - [intersection_two_arrays](math/intersection_two_arrays.py)\n    - [largest_triangle_area](math/largest_triangle_area.py)\n    - [letter_tile_possibilities](math/letter_tile_possibilities.py)\n    - [majority_element](math/majority_element.py)\n    - [max_points_on_line](math/max_points_on_line.py)\n    - [minimum_area_rectangle](math/minimum_area_rectangle.py)\n    - [min_time_difference](math/min_time_difference.py)\n    - [missing_number](math/missing_number.py)\n    - [next_greater_III](math/next_greater_III.py)\n    - [next_permutation](math/next_permutation.py)\n    - [nth_digit](math/nth_digit.py)\n    - [num_to_col](math/num_to_col.py)\n    - [perfect_number](math/perfect_number.py)\n    - [power_of_two](math/power_of_two.py)\n    - [reach_a_number](math/reach_a_number.py)\n    - [rectangle_overlap](math/rectangle_overlap.py)\n    - [self_dividing_numbers](math/self_dividing_numbers.py)\n    - [smallest_integer_divisible_by_k](math/smallest_integer_divisible_by_k.py)\n    - [statistics_from_sample](math/statistics_from_sample.py)\n    - [total_time](math/total_time.py)\n    - [ugly_numbers](math/ugly_numbers.py)\n    - [valid_boomerang](math/valid_boomerang.py)\n    - [valid_number](math/valid_number.py)\n    - [valid_triangle_number](math/valid_triangle_number.py)\n    - [battleships_in_a_board](matrix/battleships_in_a_board.py)\n    - [brick_wall](matrix/brick_wall.py)\n    - [flip_image](matrix/flip_image.py)\n    - [game_of_life](matrix/game_of_life.py)\n    - [image_smoother](matrix/image_smoother.py)\n    - [island_perimeter](matrix/island_perimeter.py)\n    - [magic_squares_in_grid](matrix/magic_squares_in_grid.py)\n    - [matrix_cells_distance](matrix/matrix_cells_distance.py)\n    - [range_addition](matrix/range_addition.py)\n    - [range_addition_v2](matrix/range_addition_v2.py)\n    - [reshape_matrix](matrix/reshape_matrix.py)\n    - [robot_bounded_circle](matrix/robot_bounded_circle.py)\n    - [rook_captures](matrix/rook_captures.py)\n    - [rotate_image](matrix/rotate_image.py)\n    - [set_matrix_zeros](matrix/set_matrix_zeros.py)\n    - [spiral_matrix](matrix/spiral_matrix.py)\n    - [spiral_matrix_generate](matrix/spiral_matrix_generate.py)\n    - [spiral_matrix_III](matrix/spiral_matrix_III.py)\n    - [toeplitz_matrix](matrix/toeplitz_matrix.py)\n    - [transpose_matrix](matrix/transpose_matrix.py)\n    - [walking_robot_simulation](matrix/walking_robot_simulation.py)\n    - [car_pooling](queues/car_pooling.py)\n    - [circular_deque_implementation](queues/circular_deque_implementation.py)\n    - [circular_queue_implementation](queues/circular_queue_implementation.py)\n    - [gas_station](queues/gas_station.py)\n    - [max_sliding_window](queues/max_sliding_window.py)\n    - [queue_implementation](queues/queue_implementation.py)\n    - [queue_using_stacks](queues/queue_using_stacks.py)\n    - [rotate_string](queues/rotate_string.py)\n    - [stack_using_queues](queues/stack_using_queues.py)\n    - [segment_trees](segtrees/segment_trees.py)\n    - [bubble_sort](sort/bubble_sort.py)\n    - [delete_columns_to_make_sorted](sort/delete_columns_to_make_sorted.py)\n    - [height_checker](sort/height_checker.py)\n    - [insertion_sort](sort/insertion_sort.py)\n    - [k_closest_points_to_origin](sort/k_closest_points_to_origin.py)\n    - [lexical_numbers](sort/lexical_numbers.py)\n    - [longest_harmonious_sequence](sort/longest_harmonious_sequence.py)\n    - [max_gap](sort/max_gap.py)\n    - [merge_sort](sort/merge_sort.py)\n    - [most_profit_workers](sort/most_profit_workers.py)\n    - [quickSort](sort/quickSort.py)\n    - [quick_sort](sort/quick_sort.py)\n    - [reorder_logs](sort/reorder_logs.py)\n    - [selection_sort](sort/selection_sort.py)\n    - [sort_array_parity_II](sort/sort_array_parity_II.py)\n    - [sort_by_parity](sort/sort_by_parity.py)\n    - [sort_three_colors](sort/sort_three_colors.py)\n    - [asteroid_collinsion](stack/asteroid_collinsion.py)\n    - [baseball_game](stack/baseball_game.py)\n    - [daily_temperatures](stack/daily_temperatures.py)\n    - [duplicate_removal](stack/duplicate_removal.py)\n    - [evaluate_reverse_polish_notation](stack/evaluate_reverse_polish_notation.py)\n    - [exclusive_fuction_time](stack/exclusive_fuction_time.py)\n    - [largest_rectangle_in_histogram](stack/largest_rectangle_in_histogram.py)\n    - [longest_valid_paranthesis](stack/longest_valid_paranthesis.py)\n    - [maximal_rectangle](stack/maximal_rectangle.py)\n    - [min_stack](stack/min_stack.py)\n    - [next_greater_element_II](stack/next_greater_element_II.py)\n    - [one_three_two_pattern](stack/one_three_two_pattern.py)\n    - [remove_k_digits](stack/remove_k_digits.py)\n    - [simplify_path](stack/simplify_path.py)\n    - [smallest_distinct_seq](stack/smallest_distinct_seq.py)\n    - [trap_rainwater](stack/trap_rainwater.py)\n    - [validate_stack_sequence](stack/validate_stack_sequence.py)\n    - [valid_paran](stack/valid_paran.py)\n    - [add_binary](strings/add_binary.py)\n    - [add_strings](strings/add_strings.py)\n    - [backspace_compare](strings/backspace_compare.py)\n    - [buddy_strings](strings/buddy_strings.py)\n    - [camelcase_matching](strings/camelcase_matching.py)\n    - [compare_version_numbers](strings/compare_version_numbers.py)\n    - [complex_number_multiplication](strings/complex_number_multiplication.py)\n    - [count_binary_strings](strings/count_binary_strings.py)\n    - [count_say](strings/count_say.py)\n    - [decode_string](strings/decode_string.py)\n    - [defanged_ip_address](strings/defanged_ip_address.py)\n    - [detect_capital](strings/detect_capital.py)\n    - [find_all_anagrams](strings/find_all_anagrams.py)\n    - [find_and_replace](strings/find_and_replace.py)\n    - [find_duplicate_files](strings/find_duplicate_files.py)\n    - [first_unique_character](strings/first_unique_character.py)\n    - [gcd_of_string](strings/gcd_of_string.py)\n    - [goat_latin](strings/goat_latin.py)\n    - [int_to_roman](strings/int_to_roman.py)\n    - [isomorphic](strings/isomorphic.py)\n    - [jewels](strings/jewels.py)\n    - [largest_number](strings/largest_number.py)\n    - [length_of_last_word](strings/length_of_last_word.py)\n    - [licence_key_reformatting](strings/licence_key_reformatting.py)\n    - [longest_common_prefix](strings/longest_common_prefix.py)\n    - [longest_palindrome](strings/longest_palindrome.py)\n    - [longest_palin_substring](strings/longest_palin_substring.py)\n    - [longest_substring_without_repeating](strings/longest_substring_without_repeating.py)\n    - [longest_substring_with_k_chars](strings/longest_substring_with_k_chars.py)\n    - [longest_uncommon_seq](strings/longest_uncommon_seq.py)\n    - [long_pressed_name](strings/long_pressed_name.py)\n    - [magical_strings](strings/magical_strings.py)\n    - [minimum_window_string](strings/minimum_window_string.py)\n    - [multiply_strings](strings/multiply_strings.py)\n    - [number_of_lines_to_write_string](strings/number_of_lines_to_write_string.py)\n    - [number_of_segments_string](strings/number_of_segments_string.py)\n    - [occurances_after_bigram](strings/occurances_after_bigram.py)\n    - [optimal_division](strings/optimal_division.py)\n    - [palindrome](strings/palindrome.py)\n    - [permutations_in_string](strings/permutations_in_string.py)\n    - [ransom_note](strings/ransom_note.py)\n    - [remove_comments](strings/remove_comments.py)\n    - [remove_duplicate_letters](strings/remove_duplicate_letters.py)\n    - [repeated_string_match](strings/repeated_string_match.py)\n    - [repeated_substring_pattern](strings/repeated_substring_pattern.py)\n    - [reverse_int](strings/reverse_int.py)\n    - [reverse_only_letters](strings/reverse_only_letters.py)\n    - [reverse_string](strings/reverse_string.py)\n    - [reverse_string_II](strings/reverse_string_II.py)\n    - [reverse_string_words](strings/reverse_string_words.py)\n    - [reverse_vowels_strings](strings/reverse_vowels_strings.py)\n    - [reverse_words_III](strings/reverse_words_III.py)\n    - [robot_origin](strings/robot_origin.py)\n    - [roman_to_int](strings/roman_to_int.py)\n    - [rotated_digits](strings/rotated_digits.py)\n    - [rotated_digits_v2](strings/rotated_digits_v2.py)\n    - [shifting_letters](strings/shifting_letters.py)\n    - [shortest_distance_to_character](strings/shortest_distance_to_character.py)\n    - [shortest_palindrome](strings/shortest_palindrome.py)\n    - [string_compression](strings/string_compression.py)\n    - [string_to_integer](strings/string_to_integer.py)\n    - [strstr](strings/strstr.py)\n    - [to_lower](strings/to_lower.py)\n    - [unique_email](strings/unique_email.py)\n    - [unique_morse_code](strings/unique_morse_code.py)\n    - [valid_anagram](strings/valid_anagram.py)\n    - [valid_ip](strings/valid_ip.py)\n    - [valid_ip_v2](strings/valid_ip_v2.py)\n    - [valid_palin](strings/valid_palin.py)\n    - [valid_palindrome_II](strings/valid_palindrome_II.py)\n    - [valid_string_after_subs](strings/valid_string_after_subs.py)\n    - [zigzag_conversion](strings/zigzag_conversion.py)\n    - [add_row_to_tree](trees/add_row_to_tree.py)\n    - [array_bst](trees/array_bst.py)\n    - [average_levels](trees/average_levels.py)\n    - [bst_to_greater_tree](trees/bst_to_greater_tree.py)\n    - [build_tree_postorder](trees/build_tree_postorder.py)\n    - [construct_pre_in](trees/construct_pre_in.py)\n    - [count_complete_tree_nodes](trees/count_complete_tree_nodes.py)\n    - [cousins_in_binary_trees](trees/cousins_in_binary_trees.py)\n    - [diameter_binary_tree](trees/diameter_binary_tree.py)\n    - [find_bottom_left](trees/find_bottom_left.py)\n    - [flatten_binary_tree_to_linked_list](trees/flatten_binary_tree_to_linked_list.py)\n    - [inorder](trees/inorder.py)\n    - [invert_tree](trees/invert_tree.py)\n    - [is_balanced](trees/is_balanced.py)\n    - [largest_value_level](trees/largest_value_level.py)\n    - [lca_deepest_leaves](trees/lca_deepest_leaves.py)\n    - [left_similar_trees](trees/left_similar_trees.py)\n    - [level_order_one](trees/level_order_one.py)\n    - [level_order_two](trees/level_order_two.py)\n    - [lowest_common_ancestor](trees/lowest_common_ancestor.py)\n    - [maximum_diff_between_ancestor_and_node](trees/maximum_diff_between_ancestor_and_node.py)\n    - [maximum_path_sum](trees/maximum_path_sum.py)\n    - [max_depth](trees/max_depth.py)\n    - [max_depth_n_ary](trees/max_depth_n_ary.py)\n    - [max_subtree](trees/max_subtree.py)\n    - [merge_two_trees](trees/merge_two_trees.py)\n    - [min_depth](trees/min_depth.py)\n    - [most_frequent_subtree_sum](trees/most_frequent_subtree_sum.py)\n    - [nary_level_order](trees/nary_level_order.py)\n    - [nodes_at_distance_k](trees/nodes_at_distance_k.py)\n    - [n_ary_postorder](trees/n_ary_postorder.py)\n    - [n_ary_preorder](trees/n_ary_preorder.py)\n    - [path_sum](trees/path_sum.py)\n    - [path_sum_all](trees/path_sum_all.py)\n    - [path_sum_III](trees/path_sum_III.py)\n    - [populate_next_right_pointer](trees/populate_next_right_pointer.py)\n    - [postorder](trees/postorder.py)\n    - [preorder](trees/preorder.py)\n    - [same_tree](trees/same_tree.py)\n    - [second_minimum_node](trees/second_minimum_node.py)\n    - [serialize_tree](trees/serialize_tree.py)\n    - [subtree_of_another_tree](trees/subtree_of_another_tree.py)\n    - [sum_of_left_leaves](trees/sum_of_left_leaves.py)\n    - [sum_root_to_leafs](trees/sum_root_to_leafs.py)\n    - [sum_root_to_leaf_paths](trees/sum_root_to_leaf_paths.py)\n    - [symmetric](trees/symmetric.py)\n    - [tilt_tree](trees/tilt_tree.py)\n    - [tree_implementation](trees/tree_implementation.py)\n    - [tree_paths](trees/tree_paths.py)\n    - [trie_implementation](trees/trie_implementation.py)\n    - [univalue_tree](trees/univalue_tree.py)\n    - [verify_tree_serialization](trees/verify_tree_serialization.py)\n    - [zigzag_level_order](trees/zigzag_level_order.py)\n    - [longest_word_dictionary](trie/longest_word_dictionary.py)\n    - [replace_words](trie/replace_words.py)\n    - [trie_implementation](trie/trie_implementation.py)\n    - [word_search_II](trie/word_search_II.py)\n    - [container_with_most_water](twopointers/container_with_most_water.py)\n    - [find_duplicate_number](twopointers/find_duplicate_number.py)\n    - [longest_repeating_character_replacement](twopointers/longest_repeating_character_replacement.py)\n    - [longest_word_in_dictionary](twopointers/longest_word_in_dictionary.py)\n    - [remove_duplicates](twopointers/remove_duplicates.py)\n    - [remove_element](twopointers/remove_element.py)\n    - [squares_of_sorted_array](twopointers/squares_of_sorted_array.py)\n    - [three_sum_closest](twopointers/three_sum_closest.py)\n\n\n\n## Contributors\n seanlab1, seanlab3\n email: newstein33@gmail.com\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/seanlab3/algorithms3",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "seanalgorithms3",
    "package_url": "https://pypi.org/project/seanalgorithms3/",
    "platform": "",
    "project_url": "https://pypi.org/project/seanalgorithms3/",
    "project_urls": {
      "Homepage": "https://github.com/seanlab3/algorithms3"
    },
    "release_url": "https://pypi.org/project/seanalgorithms3/0.5/",
    "requires_dist": [
      "cython"
    ],
    "requires_python": "",
    "summary": "Python algorithms3",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11427334,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5a15748fd8e34c3f160f61d3ba245c7de7aeb7cc59015bd7436af2bc2bb3a31",
          "md5": "5f6da8b4e3525ded48501b8d92909b79",
          "sha256": "b44f39922158c7716d4ad7ebda2bcb83292ba6bb7d6dfb17a06371def3a1b3be"
        },
        "downloads": -1,
        "filename": "seanalgorithms3-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f6da8b4e3525ded48501b8d92909b79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 464613,
        "upload_time": "2021-05-05T04:39:58",
        "upload_time_iso_8601": "2021-05-05T04:39:58.930297Z",
        "url": "https://files.pythonhosted.org/packages/e5/a1/5748fd8e34c3f160f61d3ba245c7de7aeb7cc59015bd7436af2bc2bb3a31/seanalgorithms3-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9019ecde8a19b725dbdde05e37eca39f03bd32f84dd76c6e8f1bd0142a83c0f",
          "md5": "08c854fade5224ac0b39b0ffc5d18b10",
          "sha256": "91f00ffd57e9373bf9c3a1eed6697e36e9d450663e89441a19469796973b5ad7"
        },
        "downloads": -1,
        "filename": "seanalgorithms3-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "08c854fade5224ac0b39b0ffc5d18b10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 244431,
        "upload_time": "2021-05-05T04:40:01",
        "upload_time_iso_8601": "2021-05-05T04:40:01.258784Z",
        "url": "https://files.pythonhosted.org/packages/c9/01/9ecde8a19b725dbdde05e37eca39f03bd32f84dd76c6e8f1bd0142a83c0f/seanalgorithms3-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "576c69b3db3f3f91823ce08c2559c7d862366d8c9b9250016eb266d09d1eb2d4",
          "md5": "2df471c3ba80b6889e660668bc42f0ee",
          "sha256": "42fa4d589846a1daee48b8853c2b13b6a084c6017de41bad4d97de0aca6241d9"
        },
        "downloads": -1,
        "filename": "seanalgorithms3-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2df471c3ba80b6889e660668bc42f0ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 464265,
        "upload_time": "2021-05-06T00:54:32",
        "upload_time_iso_8601": "2021-05-06T00:54:32.306783Z",
        "url": "https://files.pythonhosted.org/packages/57/6c/69b3db3f3f91823ce08c2559c7d862366d8c9b9250016eb266d09d1eb2d4/seanalgorithms3-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c5c7a9103f7d1982eb4185f494f1d5807899b18c9fb3ac6621057f7f2e21f70",
          "md5": "b7d3904c44e2934e1791fc6cb17581e2",
          "sha256": "bdfc597bcba07314aaaffefe8d67ddffa9b8d064d77caa02c7d1e41d4ddf542a"
        },
        "downloads": -1,
        "filename": "seanalgorithms3-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b7d3904c44e2934e1791fc6cb17581e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 244111,
        "upload_time": "2021-05-06T00:54:34",
        "upload_time_iso_8601": "2021-05-06T00:54:34.389901Z",
        "url": "https://files.pythonhosted.org/packages/2c/5c/7a9103f7d1982eb4185f494f1d5807899b18c9fb3ac6621057f7f2e21f70/seanalgorithms3-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ba24088b0ce57647c3375320fae40331373ae8478d58934c21db9ae5f7f352e",
          "md5": "a00348641ed354bfcdd08be76b6c235b",
          "sha256": "6f59db73b78347060f8f7fcc1ea24b2f7ea53a331051a41508ff06c7bdd3eebd"
        },
        "downloads": -1,
        "filename": "seanalgorithms3-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a00348641ed354bfcdd08be76b6c235b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 475447,
        "upload_time": "2021-05-06T07:51:36",
        "upload_time_iso_8601": "2021-05-06T07:51:36.069399Z",
        "url": "https://files.pythonhosted.org/packages/9b/a2/4088b0ce57647c3375320fae40331373ae8478d58934c21db9ae5f7f352e/seanalgorithms3-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49ea46482de669a82d5725747cbb716389a08ca1d5ad0f4f9e5c8c08210160cb",
          "md5": "818d128f6a272f8306a811c920533fef",
          "sha256": "727c45073f7783582c96c1347e5094ce9fac76118bd68b061de836bc3ce2f7f9"
        },
        "downloads": -1,
        "filename": "seanalgorithms3-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "818d128f6a272f8306a811c920533fef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 279542,
        "upload_time": "2021-05-06T07:51:37",
        "upload_time_iso_8601": "2021-05-06T07:51:37.834193Z",
        "url": "https://files.pythonhosted.org/packages/49/ea/46482de669a82d5725747cbb716389a08ca1d5ad0f4f9e5c8c08210160cb/seanalgorithms3-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e01700fadb333b67b131b440725c059cdf0eb9e856d1b3285e96d1823ffceba2",
          "md5": "65e58dc633fe4b61d05f922972e07610",
          "sha256": "5af234eebc7f6032a91acc658c805f59b3ad816b0a43b9d29b1ace9ed727f61c"
        },
        "downloads": -1,
        "filename": "seanalgorithms3-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65e58dc633fe4b61d05f922972e07610",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 475242,
        "upload_time": "2021-05-08T00:57:02",
        "upload_time_iso_8601": "2021-05-08T00:57:02.226388Z",
        "url": "https://files.pythonhosted.org/packages/e0/17/00fadb333b67b131b440725c059cdf0eb9e856d1b3285e96d1823ffceba2/seanalgorithms3-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff87aff7211558aa7b612499907a399bbdaf2fc7264ce0620b6ff338b6b29a9d",
          "md5": "cbff617fc3f1f7186ed9e67db872639d",
          "sha256": "cbec31332e03daee25f0f171916223e6a5a5c4377a4cdeef39bb45bfe096b0a4"
        },
        "downloads": -1,
        "filename": "seanalgorithms3-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cbff617fc3f1f7186ed9e67db872639d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 278832,
        "upload_time": "2021-05-08T00:57:04",
        "upload_time_iso_8601": "2021-05-08T00:57:04.423005Z",
        "url": "https://files.pythonhosted.org/packages/ff/87/aff7211558aa7b612499907a399bbdaf2fc7264ce0620b6ff338b6b29a9d/seanalgorithms3-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "949d0ab44822d891e09bc1d870b1cf673b6c565316278145437a532867deddbb",
          "md5": "3fcc74c0d91c73df33c003f87ae490e4",
          "sha256": "7eeb307d8fb9643eee071cea43eda44e6f74eb9df6b26f3294e6de323ad08054"
        },
        "downloads": -1,
        "filename": "seanalgorithms3-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3fcc74c0d91c73df33c003f87ae490e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 475259,
        "upload_time": "2021-09-12T03:48:12",
        "upload_time_iso_8601": "2021-09-12T03:48:12.846115Z",
        "url": "https://files.pythonhosted.org/packages/94/9d/0ab44822d891e09bc1d870b1cf673b6c565316278145437a532867deddbb/seanalgorithms3-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9d19410f249cb90de1a21594877601285ebf649f66fdbd5b8f6a0a1161a0341",
          "md5": "e10d38dca7587daeab7b41e68ae3f447",
          "sha256": "eefb7ea6ac93bea1416dbb846aeb125364dbe464f051b5f7a77239d02084535f"
        },
        "downloads": -1,
        "filename": "seanalgorithms3-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e10d38dca7587daeab7b41e68ae3f447",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 296520,
        "upload_time": "2021-09-12T03:48:14",
        "upload_time_iso_8601": "2021-09-12T03:48:14.905052Z",
        "url": "https://files.pythonhosted.org/packages/b9/d1/9410f249cb90de1a21594877601285ebf649f66fdbd5b8f6a0a1161a0341/seanalgorithms3-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "949d0ab44822d891e09bc1d870b1cf673b6c565316278145437a532867deddbb",
        "md5": "3fcc74c0d91c73df33c003f87ae490e4",
        "sha256": "7eeb307d8fb9643eee071cea43eda44e6f74eb9df6b26f3294e6de323ad08054"
      },
      "downloads": -1,
      "filename": "seanalgorithms3-0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3fcc74c0d91c73df33c003f87ae490e4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 475259,
      "upload_time": "2021-09-12T03:48:12",
      "upload_time_iso_8601": "2021-09-12T03:48:12.846115Z",
      "url": "https://files.pythonhosted.org/packages/94/9d/0ab44822d891e09bc1d870b1cf673b6c565316278145437a532867deddbb/seanalgorithms3-0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9d19410f249cb90de1a21594877601285ebf649f66fdbd5b8f6a0a1161a0341",
        "md5": "e10d38dca7587daeab7b41e68ae3f447",
        "sha256": "eefb7ea6ac93bea1416dbb846aeb125364dbe464f051b5f7a77239d02084535f"
      },
      "downloads": -1,
      "filename": "seanalgorithms3-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "e10d38dca7587daeab7b41e68ae3f447",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 296520,
      "upload_time": "2021-09-12T03:48:14",
      "upload_time_iso_8601": "2021-09-12T03:48:14.905052Z",
      "url": "https://files.pythonhosted.org/packages/b9/d1/9410f249cb90de1a21594877601285ebf649f66fdbd5b8f6a0a1161a0341/seanalgorithms3-0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}