{
  "info": {
    "author": "Bud Ryerson",
    "author_email": "bud@budryerson.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# tfmpi2c\n### A Python module for the Benewake TFMini-Plus Lidar sensor in I2C mode\n\nThe **TFMini-Plus** is largely compatible with the **TFMini-S** and therefore that device is able to use this module.  One difference is that upon command to change communication mode, such as `SET_I2C_MODE` or `SET_SERIAL_MODE`, the **TFMini-Plus** switches mode immediately, whereas the **TFMini-S** requires a subsequent `SAVE_SETTING` command before the change takes place.  This module is *not compatible* with the **TF-Luna** in I2C mode.  This module is also *not compatible* with the **TFMini**, which is an entirely different product with its own command set and data structure.\n\nFrom hardware v1.3.5 and firmware v1.9.0 and above, the **TFMini-Plus** interface can be configured in either UART (Serial) or I2C (two-wire) communication mode.  This module is **only** for the I2C mode.\n\nInternally, the device samples at about 4KHz.  It presents frames of data to the interface at a programmable rate from 0 up to about 10KHz.  The default data-frame rate is 100Hz.  \"Standard\" data-frame rates are: 0, 1, 2, 5, 10, 20, 25, 50, 100, 125, 200, 250, 500, and 1000Hz.  Single data-frames can be obtained by setting the frame rate to 0 and sending a `TRIGGER_DETECTION` command.\n\nAfter a getData() command, three module variables are updated:\n<br />&nbsp;&nbsp;&#9679;&nbsp; `dist` Distance to target in centimeters. Range: 0 - 1200\n<br />&nbsp;&nbsp;&#9679;&nbsp; `flux` Strength or quality of return signal or error. Range: -1, 0 - 32767\n<br />&nbsp;&nbsp;&#9679;&nbsp; `temp` Temperature of device chip in code. Range: -25°C to 125°C\n\nInstalled with the module is a `tests` folder that contains an example python script, `tfmpi2c_test.py`.\nAll of the code for this module and the test script is richly commented to assist with understanding and in problem solving.\n<hr />\n\n### I2C mode operation\n\nThis module supports **only** the I2C communication interface.   It is up to the user to ensure that the device is set to that mode. \n\nTo configure the device for I2C communication, a command must be sent using the UART interface.  This reconfiguration should be made prior to the device's service installation, either by the serial GUI test application and command code supplied by the manufacturer, or by using the example script included with the `tfmplus` python module to send a `SET_I2C_MODE` command.\n\nThe device will remain in I2C mode after power has been removed and restored.  The only way to return to serial mode is with the `SET_SERIAL_MODE` command.  Even a `RESTORE_FACTORY_SETTINGS` command will NOT restore the device to its default, UART communication interface mode.\n\nThe **TFMini-Plus** functions like an I2C slave device.  The default address is `0x10` (16 Decimal) but programmable with the `SET_I2C_ADDRESS` command and a parameter in the range of `1` to `127`.  The new setting will take effect immediately and permanently without a `SAVE_SETTINGS` command.  A `RESTORE_FACTORY_SETTINGS` command will restore the default address.  The I2C address can be set while still in serial communication mode or, if in I2C mode, the test script `tfmpi2c_test.py` included with the module can be used to test and change the address.\n<hr />\n\n### Three `tfmpi2c` module functions\nThree main functions are defined in the module.  Status code, command and parameter variables are also declared.\n\n`begin( portNumber, devAddress)` passes the I2C port number and I2C bus device address to the module, tries to open the port, performs a quick write operation and returns a boolean value indicating successful completion.\n\n`getData()` commands the device to transmit one data-frame, reads the data-frame and extracts the three measurement data values.  It sets the error `status` byte code and returns a boolean value indicating function 'pass/fail'.\n\n`sendCommand( cmnd, param)` sends a coded command and a parameter to the device.  It sets the `status` error code byte and returns a boolean 'pass/fail' value.  A proper command (`cmnd`) must be selected from the module's list of twenty defined commands.  A parameter (`param`) may be chosen from the module's list of defined parameters (such as data-frame rate) or entered directly (such as device I2C address). **An erroneous parameter can block communication and there is no external means of resetting the device to factory defaults.**\n\nAny change of device settings must be followed by a `SAVE_SETTINGS` command or else the modified values may be lost when power is removed.  `SYSTEM_RESET` and `RESTORE_FACTORY_SETTINGS` do not require a `SAVE_SETTINGS` command.\n<hr />\n\n### Using the I/O modes of the device\nThe so-called I/O modes are not supported in this module.  Please do not attempt to use any I/O commands that you may find to be defined in this module.\n\nThe I/O output mode is enabled and disabled by this 9 byte command:<br />\n5A 09 3B MODE DL DH ZL ZH SU\n\nCommand byte number:<br />\n0 &nbsp;&nbsp; `0x5A`:  Header byte, starts every command frame<br />\n1 &nbsp;&nbsp; `0x09`:  Command length, number of bytes in command frame<br />\n2 &nbsp;&nbsp; `0x3B`:  Command number<br />\n<br />\n3 &nbsp;&nbsp; MODE:<br />\n&nbsp;&nbsp;&nbsp;&nbsp; `0x00`: I/O Mode OFF, standard data output mode<br />\n&nbsp;&nbsp;&nbsp;&nbsp; `0x01`: I/O Mode ON, output: near = high and far = low<br />\n&nbsp;&nbsp;&nbsp;&nbsp; `0x02`: I/O Mode ON, output: near = low and far = high<br />\n<br />\n4 &nbsp;&nbsp; DL: Near distance lo order byte of 16 bit integer<br />\n5 &nbsp;&nbsp; DH: Near distance hi order byte<br />\n<br />\n6 &nbsp;&nbsp; ZL: Zone width lo byte<br />\n7 &nbsp;&nbsp; ZL: Zone width hi byte<br />\n<br />\n8 &nbsp;&nbsp;SU: Checkbyte (the lo order byte of the sum of all the other bytes in the frame)<br />\n<br />\nIf an object's distance is greater than the Near distance (D) plus the Zone width (Z) then the object is \"far.\"<br />\nIf the distance is less than the Near distance (D) then the object is \"near\".<br />\nThe Zone is a neutral area. Any object distances measured in this range do not change the output.<br />\nThe output can be set to be either high when the object is near and low when it's far (Mode 1); or low when it's near and high when it's far (Mode 2).<br />\nThe high level is 3.3V, the low level is 0V.\n<hr>\n\n### Finally\n\nBenewake is not very forthcoming about the internals, but they did share this:\n>Some commands that modify internal parameters are processed within 1ms.  Some commands require the MCU to communicate with other chips may take several ms.  And some commands, such as saving configuration and restoring the factory settings need to erase the FLASH of the MCU, which may take several hundred ms.\n\nAnd also:\n>1- the measuring frequency of the module should be 2.5 times larger than the IIC reading frequency.\n<br />2- the iic reading frequency should not exceed 100hz<br />\n\nSince the Data-Frame Rate is limited to 1000Hz, this condition implies a 400Hz data sampling limit in I2C mode.  Benewake says sampling should not exceed 100Hz.  They don't say why; but you might keep that limitation in mind when you consider using the I2C interface.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/budryerson/TFMini-Plus_I2C_python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tfmpi2c",
    "package_url": "https://pypi.org/project/tfmpi2c/",
    "platform": "",
    "project_url": "https://pypi.org/project/tfmpi2c/",
    "project_urls": {
      "Bug Tracker": "https://github.com/budryerson/TFMini-Plus_I2C_python/issues",
      "Homepage": "https://github.com/budryerson/TFMini-Plus_I2C_python"
    },
    "release_url": "https://pypi.org/project/tfmpi2c/0.0.7/",
    "requires_dist": [
      "smbus"
    ],
    "requires_python": ">=3.6",
    "summary": "Corrected FRAME_5 constant from 0x0003 to 0x0005",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10443803,
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ef7e2dcdffd50702538f45690f6645ff659594e959ee0865b9421d3b11aa853",
          "md5": "c98e1fa6736977204a97279a96b642bf",
          "sha256": "7b59bf357c816bc51b2b504a33d753c19d0c7bc21c557bd737ca6606dec26705"
        },
        "downloads": -1,
        "filename": "tfmpi2c-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c98e1fa6736977204a97279a96b642bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12571,
        "upload_time": "2021-05-16T21:08:47",
        "upload_time_iso_8601": "2021-05-16T21:08:47.582416Z",
        "url": "https://files.pythonhosted.org/packages/7e/f7/e2dcdffd50702538f45690f6645ff659594e959ee0865b9421d3b11aa853/tfmpi2c-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bc3cafed621b0a083f8dfefc293819b50cc88f735a56595d0aa9829ed7859ed",
          "md5": "0daec205ebaab8b415c8fcb8bc6c0efe",
          "sha256": "ccd7bbb894ae05b7ecc7126948c2c6c2ef472e1bb9a3e8a03cd592f25e78730e"
        },
        "downloads": -1,
        "filename": "tfmpi2c-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0daec205ebaab8b415c8fcb8bc6c0efe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13450,
        "upload_time": "2021-05-16T21:08:48",
        "upload_time_iso_8601": "2021-05-16T21:08:48.753775Z",
        "url": "https://files.pythonhosted.org/packages/5b/c3/cafed621b0a083f8dfefc293819b50cc88f735a56595d0aa9829ed7859ed/tfmpi2c-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b434e84ef9a0fb6af650fe598b726df89c9e22cb4175855498d2aafaffaf81bb",
          "md5": "b19635e181bb2f02b79c600414b694d5",
          "sha256": "e954d3599c6bbadb16a873af1b0bc42d2bbc1f29d59cde23631c414a0d942f01"
        },
        "downloads": -1,
        "filename": "tfmpi2c-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b19635e181bb2f02b79c600414b694d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13106,
        "upload_time": "2021-05-22T20:46:54",
        "upload_time_iso_8601": "2021-05-22T20:46:54.695188Z",
        "url": "https://files.pythonhosted.org/packages/b4/34/e84ef9a0fb6af650fe598b726df89c9e22cb4175855498d2aafaffaf81bb/tfmpi2c-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "823d865a2b90360cfef3e8d2ab0490fbf4923521b8d8f77de54670823ff909c1",
          "md5": "d1ab2ddc2b7c1199b67e420cb9e8cc3a",
          "sha256": "a57a11f09020b1cf2c23a270254c69c7de6a9386921f5203c0265617abd58a00"
        },
        "downloads": -1,
        "filename": "tfmpi2c-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d1ab2ddc2b7c1199b67e420cb9e8cc3a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15182,
        "upload_time": "2021-05-22T20:46:56",
        "upload_time_iso_8601": "2021-05-22T20:46:56.056840Z",
        "url": "https://files.pythonhosted.org/packages/82/3d/865a2b90360cfef3e8d2ab0490fbf4923521b8d8f77de54670823ff909c1/tfmpi2c-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d50a4519cd2bd00755027f8544535b9baf61abc0950c8b8a09b508218aa986c",
          "md5": "a48dc97bec55d58a6f77c1c676bddbc0",
          "sha256": "cd26686cd264b1f2d5ac66df2ffb70db1ef6a66f596ee7d7dd994f9c368ca749"
        },
        "downloads": -1,
        "filename": "tfmpi2c-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a48dc97bec55d58a6f77c1c676bddbc0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13072,
        "upload_time": "2021-05-22T21:14:38",
        "upload_time_iso_8601": "2021-05-22T21:14:38.069403Z",
        "url": "https://files.pythonhosted.org/packages/9d/50/a4519cd2bd00755027f8544535b9baf61abc0950c8b8a09b508218aa986c/tfmpi2c-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cce0b7f30ce5857286e0592d7fccd9a3cb1373f0bc383058a8ce0fa35b440b2a",
          "md5": "36dad3f01018c97c06596a8ddaee8f13",
          "sha256": "29bb5506db03ce0337e6f06cfb11e24939febeef0b305d1d4b2ea8b4bbe82543"
        },
        "downloads": -1,
        "filename": "tfmpi2c-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "36dad3f01018c97c06596a8ddaee8f13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15127,
        "upload_time": "2021-05-22T21:14:39",
        "upload_time_iso_8601": "2021-05-22T21:14:39.269572Z",
        "url": "https://files.pythonhosted.org/packages/cc/e0/b7f30ce5857286e0592d7fccd9a3cb1373f0bc383058a8ce0fa35b440b2a/tfmpi2c-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d50a4519cd2bd00755027f8544535b9baf61abc0950c8b8a09b508218aa986c",
        "md5": "a48dc97bec55d58a6f77c1c676bddbc0",
        "sha256": "cd26686cd264b1f2d5ac66df2ffb70db1ef6a66f596ee7d7dd994f9c368ca749"
      },
      "downloads": -1,
      "filename": "tfmpi2c-0.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a48dc97bec55d58a6f77c1c676bddbc0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13072,
      "upload_time": "2021-05-22T21:14:38",
      "upload_time_iso_8601": "2021-05-22T21:14:38.069403Z",
      "url": "https://files.pythonhosted.org/packages/9d/50/a4519cd2bd00755027f8544535b9baf61abc0950c8b8a09b508218aa986c/tfmpi2c-0.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cce0b7f30ce5857286e0592d7fccd9a3cb1373f0bc383058a8ce0fa35b440b2a",
        "md5": "36dad3f01018c97c06596a8ddaee8f13",
        "sha256": "29bb5506db03ce0337e6f06cfb11e24939febeef0b305d1d4b2ea8b4bbe82543"
      },
      "downloads": -1,
      "filename": "tfmpi2c-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "36dad3f01018c97c06596a8ddaee8f13",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15127,
      "upload_time": "2021-05-22T21:14:39",
      "upload_time_iso_8601": "2021-05-22T21:14:39.269572Z",
      "url": "https://files.pythonhosted.org/packages/cc/e0/b7f30ce5857286e0592d7fccd9a3cb1373f0bc383058a8ce0fa35b440b2a/tfmpi2c-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}