{
  "info": {
    "author": "Mike Dacre",
    "author_email": "mike.dacre@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "##########\nCareful rm\n##########\n\nVersion: 1.0-beta10\n\nA wrapper for rm that adds more useful warnings and an optional recycle/trash\nmode\n\nCan be used as a drop-in replacement for ``rm`` on any Linux or MacOS system with\nPython > 2.6. With no arguments or configuration, it will warn you if you delete\nmore than 3 files or any directories, and will print the files and folders to\ndelete to the console when prompting for approval (something ``rm -I`` does not\ndo).\n\nAll ``rm`` commands are implemented here. In addition, passing ``-c`` will result in\nfiles being trashed/recycled instead of deleted. Applescript is used on MacOS,\notherwise the best trash location is chosen (see below). Most files can be\nrestored using GUI tools (e.g. Nautilus/Finder), as the default Trash folders\nand metadata are used (e.g. *Put Back* works on Mac).\n\nNote: passing ``-s`` will result in files being destroyed with ``shred`` and will\nforcibly override and disable recycle mode.\n\nIdeally, this tool should be symlinked to ``rm`` and the file ``~/.rm_recycle_home``\nshould be created, which will make recycling automatic only for files in your\nhome directory. This will provide a great deal of safety without majorly messing\nup any sys-admin work.\n\n.. contents:: **Contents**\n\nUsage\n-----\n\n.. code::\n\n    Usage: careful_rm.py [-c] [-f | -i] [-dPRrvW] file ..\n\n    Arguments\n    ---------\n        -c, --recycle         move to trash instead of deleting (forced on by\n                              ~/.rm_recycle)\n        -s, --shred           run shred on all files (recursively if directories\n                              included) prior to deleting, override recycle\n            --direct          force off recycling, even if ~/.rm_recycle exists\n            --dryrun          do not actually remove or move files, just print\n        -h, --help            display this help and exit\n\n    All other arguments passed to rm\n\n    Common rm arguments\n    -------------------\n        -f, --force           ignore nonexistent files and arguments, never prompt\n        -i                    prompt before every removal\n        -I                    prompt once before removing more than three files, or\n                              when removing recursively\n        -r, -R, --recursive   remove directories and their contents recursively\n        -d, --dir             remove empty directories\n        -v, --verbose         explain what is being done\n\n    For full help for rm, see `man rm`, note that only the '-i', '-f' and '-v'\n    options have any meaning in recycle mode, which uses `mv`. Argument order does\n    not matter.\n\n\nInstall as a plugin\n-------------------\n\nRequirements\n~~~~~~~~~~~~\n\n- An ``sh`` style shell, preferably ``zsh``, ``dash``, or ``bash``\n- Python version 2.6+, no additional modules required\n\n*It should work almost everywhere*\n\n**Note**: If anyone can help with a FISH and/or Windows version, that would be great\n\nGeneral Install\n~~~~~~~~~~~~~~~\n\nWith any ``sh`` like shell (``sh``, ``bash``, ``fish``, ``zsh``)\n\n1. ``cd ~``\n2. ``git clone git@github.com:MikeDacre/careful_rm.git``\n3. ``echo \"source ~/careful_rm/careful_rm.alias.sh\" >> .bashrc``\n\nZSH\n~~~\n\nThe ZSH version of this plugin is provided by the ``careful_rm.plugin.zsh`` file.\nIn addition to aliasing ``rm`` to ``careful_rm``, it also sets a ``$TRASH`` variable\nthat updates with every directory change and makes ``~trash`` a named directory\nthat points to ``$TRASH``.\n\nZSH offers some great ways to install as a plugin and stay up to date, my\nfavorite is antigen, but any of the following methods will work.\n\n`Antigen <github.com/zsh-users/antigen>`_\n.........................................\n\n\nIf you're using `Antigen <github.com/zsh-users/antigen>`_, just add ``antigen\nbundle MikeDacre/careful_rm`` to your ``.zshrc`` file where you're loading your\nother zsh plugins. You will need to reload ZSH to install the plugin.\n\n`Oh-My-ZSH <github.com/robbyrussell/oh-my-zsh>`_\n................................................\n\n1. ``mkdir -p ~/oh-my-zsh/custom/plugins``\n2. ``cd ~/oh-my-zsh/custom/plugins``\n3. ``git clone git@github.com:MikeDacre/careful_rm.git``\n4. add ``plugins+=(careful_rm)`` to the right place in your ``~/.zshrc``\n\n`Zgen <github.com/tarjoilija/zgen>`_\n....................................\n\nIf you're using `Zgen <github.com/tarjoilija/zgen>`_, add ``zgen load\nMikeDacre/careful_rm`` to your ``.zshrc`` file where you're loading your other zsh\nplugins.\n\nInstall Script Only\n-------------------\n\nIf you want you can install the code directly and handle shell integration\nyourself. The project can be installed with either pip, or just by directly\ndownloading the script.\n\nTo alias the code to rm yourself, you can download and source the\n``careful_rm.alias.sh`` script, or just add something like this to your\n``~/.bashrc``.\n\n.. code:: shell\n\n    if hash careful_rm.py 2>/dev/null; then\n        alias rm=\"$(command -v careful_rm.py)\"\n    elif hash careful_rm 2>/dev/null; then\n        alias rm=\"$(command -v careful_rm)\"\n    else\n        alias rm=\"rm -I\"\n    fi\n\nVia PIP\n~~~~~~~\n\nThis project is on `PyPI <https://pypi.python.org>`_ so you can just install it\nwith `pip`, but you *won't get any shell integration*:\n\n.. code:: shell\n\n   pip install careful_rm\n\nDirect Install\n~~~~~~~~~~~~~~\n\nYou can just put it into your ``$PATH`` and use it directly. e.g.:\n\n1. ``cd /usr/local/bin``\n2. ``wget https://raw.githubusercontent.com/MikeDacre/careful_rm/master/careful_rm.py``\n\n\nRationale and Implementation\n----------------------------\n\n``rm`` is a powerful \\*nix tool that simply drops a file from the drive index. It\ndoesn't delete it or put it in a Trash can, it just de-indexes it which makes\nthe file hard to recover unless you want to put in the work, and pretty easy to\nrecover if you are willing to spend a few hours trying (use ``shred`` to actually\nsecure erase files).\n\n``careful_rm.py`` is inspired by the ``-I`` interactive mode of ``rm`` and by\n`safe-rm <https://github.com/kaelzhang/shell-safe-rm>`_. ``safe-rm`` adds a recycle\nbin mode to rm, and the ``-I`` interactive mode adds a prompt if you delete more\nthan a handful of files or recursively delete a directory. ``ZSH`` also has an\noption to warn you if you recursively rm a directory.\n\nThese are all great, but I found them unsatisfying. What I want is for rm to be\nquick and not bother me for single file deletions (so ``rm -i`` is out), but to\nlet me know when I am deleting a lot of files, and *to actually print a list of\nfiles that are about to be deleted*. I also want it to have the option to\ntrash/recycle my files instead of just straight deleting them.... like\n``safe-rm``, but not so intrusive (safe-rm defaults to recycle, and doesn't warn).\n\n``careful_rm.py`` is fundamentally a simple ``rm`` wrapper, that accepts all of the\nsame commands as ``rm``, but with a few additional options features. In the source\ncode ``CUTOFF`` is set to **3**, so deleting more files than that will prompt the\nuser. Also, deleting a directory will prompt the user separately with a count of\nall files and subdirectories within the folders to be deleted.\n\nFurthermore, ``careful_rm.py`` implements a fully integrated trash mode that can\nbe toggled on with ``-c``. It can also be forced on by adding a file at\n``~/.rm_recycle``, or toggled on only for ``$HOME`` (the best idea), by\n``~/.rm_recycle_home``. The mode can be disabled on the fly by passing ``--direct``,\nwhich forces off recycle mode.\n\nThe recycle mode tries to find the best location to recycle to on MacOS or\nLinux, on MacOS it also tries to use Apple Script to trash files, which means\nthe original location is preserved (note Applescript can be slow, you can\ndisable it by adding a ``~/.no_apple_rm`` file, but *Put Back* won't work). The\n*best* location for trashes goes in this order:\n\n1. ``$HOME/.Trash`` on Mac or ``$HOME/.local/share/Trash`` on Linux\n2. ``<mountpoint>/.Trashes`` on Mac or ``<mountpoint>/.Trash-$UID`` on Linux\n3. ``/tmp/$USER_trash``\n\nAlways the best trash can to avoid Volume hopping is favored, as moving across\nfile systems is slow. If the trash does not exist, the user is prompted to\ncreate it, they then also have the option to fall back to the root trash\n(``/tmp/$USER_trash``) or just ``rm`` the files.\n\n``/tmp/$USER_trash`` is almost always used for deleting system/root files, but\n**note** that you most likely do not want to save those files, and straight ``rm``\nis generally better.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/MikeDacre/careful_rm/archive/v1.0b10.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MikeDacre/careful_rm",
    "keywords": "zsh coreutils rm bash shell wrapper trash-mode macos macosx linux command-line oh-my-zsh antigen alternative",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "careful_rm",
    "package_url": "https://pypi.org/project/careful_rm/",
    "platform": "",
    "project_url": "https://pypi.org/project/careful_rm/",
    "project_urls": {
      "Download": "https://github.com/MikeDacre/careful_rm/archive/v1.0b10.tar.gz",
      "Homepage": "https://github.com/MikeDacre/careful_rm"
    },
    "release_url": "https://pypi.org/project/careful_rm/1.0b10/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A safe wrapper for rm that adds useful warnings and an optional recycle/trash mode",
    "version": "1.0b10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3693553,
  "releases": {
    "1.0b10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94d8a1091a3e9e086d20cb75dcc6e8bb074f495b03c035567552ee8350aa4fac",
          "md5": "06a9e96c3b52b48dd204f5641b59cf6f",
          "sha256": "d1889ed27c3d6e6fb2f40be9da45c520385d18a12ccffd4ec3ec9c6f6ab784b3"
        },
        "downloads": -1,
        "filename": "careful_rm-1.0b10.tar.gz",
        "has_sig": false,
        "md5_digest": "06a9e96c3b52b48dd204f5641b59cf6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19032,
        "upload_time": "2018-03-21T23:02:51",
        "upload_time_iso_8601": "2018-03-21T23:02:51.856914Z",
        "url": "https://files.pythonhosted.org/packages/94/d8/a1091a3e9e086d20cb75dcc6e8bb074f495b03c035567552ee8350aa4fac/careful_rm-1.0b10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0b6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7e9d582e024e280f6b0625f591e0d3554881e697be0f2dc0e6b9b74c3e58893",
          "md5": "5897164c06badd19632a756930a92d9e",
          "sha256": "4f684da0263385e80eab1c4d0d0194413befddc82a5b5da9b28b971a5b62f7db"
        },
        "downloads": -1,
        "filename": "careful_rm-1.0b6.tar.gz",
        "has_sig": false,
        "md5_digest": "5897164c06badd19632a756930a92d9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18080,
        "upload_time": "2018-03-06T23:25:56",
        "upload_time_iso_8601": "2018-03-06T23:25:56.516094Z",
        "url": "https://files.pythonhosted.org/packages/c7/e9/d582e024e280f6b0625f591e0d3554881e697be0f2dc0e6b9b74c3e58893/careful_rm-1.0b6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0b7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6b5e7a398ba474fb2fa398e88065272857b0f70a669e5947c999710fd597d75",
          "md5": "666f4e2e9d31c74145dd1f013b51332d",
          "sha256": "09579882445cfcee366a43a27bab8dbad08bbeb0f7c0f2adf001800c3fc3c3e7"
        },
        "downloads": -1,
        "filename": "careful_rm-1.0b7.tar.gz",
        "has_sig": false,
        "md5_digest": "666f4e2e9d31c74145dd1f013b51332d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18069,
        "upload_time": "2018-03-06T23:40:40",
        "upload_time_iso_8601": "2018-03-06T23:40:40.319682Z",
        "url": "https://files.pythonhosted.org/packages/a6/b5/e7a398ba474fb2fa398e88065272857b0f70a669e5947c999710fd597d75/careful_rm-1.0b7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0b8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f52b2bf1e205112d7648f48a67b97f9625c8da1bb89b1c60771ccf25f57a094",
          "md5": "3ddeacf52d28535807f102dd5f4fe29b",
          "sha256": "8aeaa60b1da4764c0fa3b2288142a31b9835f212ff3dec62868c077697808472"
        },
        "downloads": -1,
        "filename": "careful_rm-1.0b8.tar.gz",
        "has_sig": true,
        "md5_digest": "3ddeacf52d28535807f102dd5f4fe29b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12949,
        "upload_time": "2018-03-11T04:42:38",
        "upload_time_iso_8601": "2018-03-11T04:42:38.540264Z",
        "url": "https://files.pythonhosted.org/packages/4f/52/b2bf1e205112d7648f48a67b97f9625c8da1bb89b1c60771ccf25f57a094/careful_rm-1.0b8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0b9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33d239f74ff237ad22f0ae9a570b30a0b355da96faa2daf442dcccdec9c401c6",
          "md5": "23c964526f7dcbc5c5f1fd2c744d22f0",
          "sha256": "08fb4bf0931a4dd9ccc87f649a7163ce770f553ad41ab822d1dc646640c23684"
        },
        "downloads": -1,
        "filename": "careful_rm-1.0b9.tar.gz",
        "has_sig": true,
        "md5_digest": "23c964526f7dcbc5c5f1fd2c744d22f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13018,
        "upload_time": "2018-03-15T06:34:32",
        "upload_time_iso_8601": "2018-03-15T06:34:32.497844Z",
        "url": "https://files.pythonhosted.org/packages/33/d2/39f74ff237ad22f0ae9a570b30a0b355da96faa2daf442dcccdec9c401c6/careful_rm-1.0b9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94d8a1091a3e9e086d20cb75dcc6e8bb074f495b03c035567552ee8350aa4fac",
        "md5": "06a9e96c3b52b48dd204f5641b59cf6f",
        "sha256": "d1889ed27c3d6e6fb2f40be9da45c520385d18a12ccffd4ec3ec9c6f6ab784b3"
      },
      "downloads": -1,
      "filename": "careful_rm-1.0b10.tar.gz",
      "has_sig": false,
      "md5_digest": "06a9e96c3b52b48dd204f5641b59cf6f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19032,
      "upload_time": "2018-03-21T23:02:51",
      "upload_time_iso_8601": "2018-03-21T23:02:51.856914Z",
      "url": "https://files.pythonhosted.org/packages/94/d8/a1091a3e9e086d20cb75dcc6e8bb074f495b03c035567552ee8350aa4fac/careful_rm-1.0b10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}