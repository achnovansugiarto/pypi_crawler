{
  "info": {
    "author": "Asaf Cohen",
    "author_email": "asaf@permit.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<p  align=\"center\">\n <img src=\"https://i.ibb.co/BGVBmMK/opal.png\" height=170 alt=\"opal\" border=\"0\" />\n</p>\n<h2 align=\"center\">\nOPAL Fetcher for Postgres\n</h2>\n\n[Check out OPAL main repo here.](https://github.com/permitio/opal)\n\n### What's in this repo?\nAn OPAL [custom fetch provider](https://github.com/permitio/opal/blob/master/docs/HOWTO/write_your_own_fetch_provider.md) to bring authorization state from [Postgres](https://www.postgresql.org/).\n\nThis fetcher is both:\n- **A fully functional fetch-provider for Postgres:** can be used by OPAL to fetch data from Postgres DB.\n- **Serving as an example** how to write custom fetch providers for OPAL and how to publish them as pip packages.\n\n### How to try this custom fetcher in one command? (Example docker-compose configuration)\n\nYou can test this fetcher with the example docker compose file in this repository root. Clone this repo, `cd` into the cloned repo, and then run:\n```\ndocker compose up\n```\nthis docker compose configuration already correctly configures OPAL to load the Postgres Fetch Provider, and correctly configures `OPAL_DATA_CONFIG_SOURCES` to include an entry that uses this fetcher.\n\n### How to use this fetcher in your OPAL Setup\n\n#### 1) Build a custom opal-client `Dockerfile` \n\nThe official docker image only contains the built-in fetch providers. You need to create your own `Dockerfile` (that is based on the official docker image), that includes this fetcher's pip package. \n\nYour `Dockerfile` should look like this:\n```\nFROM permitio/opal-client:latest\nRUN pip install --no-cache-dir --user opal-fetcher-postgres\n```\n\n#### 2) Build your custom opal-client container\nSay your special Dockerfile from step one is called `custom_client.Dockerfile`.\n\nYou must build a customized OPAL container from this Dockerfile, like so:\n```\ndocker build -t yourcompany/opal-client -f custom_client.Dockerfile .\n```\n\n#### 3) When running OPAL, set `OPAL_FETCH_PROVIDER_MODULES`\nPass the following environment variable to the OPAL client docker container (comma-separated provider modules):\n```\nOPAL_FETCH_PROVIDER_MODULES=opal_common.fetcher.providers,opal_fetcher_postgres.provider\n```\nNotice that OPAL receives a list from where to search for fetch providers.\nThe list in our case includes the built-in providers (`opal_common.fetcher.providers`) and our custom postgres provider.\n\n#### 4) Using the custom provider in your DataSourceEntry objects\n\nYour DataSourceEntry objects (either in `OPAL_DATA_CONFIG_SOURCES` or in dynamic updates sent via the OPAL publish API) can now include this fetcher's config.\n\nExample value of `OPAL_DATA_CONFIG_SOURCES` (formatted nicely, but in env var you should pack this to one-line and no-spaces):\n```json\n{\n    \"config\": {\n        \"entries\": [\n            {\n                \"url\": \"postgresql://postgres@example_db:5432/postgres\",\n                \"config\": {\n                    \"fetcher\": \"PostgresFetchProvider\",\n                    \"query\": \"SELECT * from city;\",\n                    \"connection_params\": {\n                        \"password\": \"postgres\"\n                    }\n                },\n                \"topics\": [\n                    \"policy_data\"\n                ],\n                \"dst_path\": \"cities\"\n            }\n        ]\n    }\n}\n```\n\nNotice how `config` is an instance of `PostgresFetcherConfig` (code is in `opal_fetcher_postgres/provider.py`).\n\nValues for this fetcher config:\n* The `url` is actually a postgres dsn. You can set the postgres password in the dsn itself if you want.\n* `connection_params` are optional, if you want to include certain overrides outside the dsn.\n* Your `config` must include the `fetcher` key to indicate to OPAL that you use a custom fetcher.\n* Your `config` must include the `query` key to indicate what query to run against postgres.\n\n### About OPAL (Open Policy Administration Layer)\n[OPAL](https://github.com/permitio/opal) is an administration layer for Open Policy Agent (OPA), detecting changes to both policy and policy data in realtime and pushing live updates to your agents.\n\nOPAL brings open-policy up to the speed needed by live applications. As your application state changes (whether it's via your APIs, DBs, git, S3 or 3rd-party SaaS services), OPAL will make sure your services are always in sync with the authorization data and policy they need (and only those they need).\n\nCheck out OPAL's main site at [OPAL.ac](https://opal.ac).\n\n<img src=\"https://i.ibb.co/CvmX8rR/simplified-diagram-highlight.png\" alt=\"simplified\" border=\"0\">\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/permitio/opal-fetcher-postgres",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "opal-fetcher-postgres",
    "package_url": "https://pypi.org/project/opal-fetcher-postgres/",
    "platform": null,
    "project_url": "https://pypi.org/project/opal-fetcher-postgres/",
    "project_urls": {
      "Homepage": "https://github.com/permitio/opal-fetcher-postgres"
    },
    "release_url": "https://pypi.org/project/opal-fetcher-postgres/0.0.2/",
    "requires_dist": [
      "opal-common (>=0.1.11)",
      "asyncpg",
      "pydantic",
      "tenacity",
      "click"
    ],
    "requires_python": ">=3.7",
    "summary": "An OPAL fetch provider to bring authorization state from Postgres DB.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13615572,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45ed8021392bb7ec09fc8480f5094c495d1fbf24bcc85ed33d28f8511b8068b5",
          "md5": "802a068aeeaaa0850c4f80d0c9bba496",
          "sha256": "5c785f368d562c73855dfcd18f7ee0a5145837219356660472bc28506a8cc57a"
        },
        "downloads": -1,
        "filename": "opal_fetcher_postgres-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "802a068aeeaaa0850c4f80d0c9bba496",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10184,
        "upload_time": "2021-07-26T13:19:09",
        "upload_time_iso_8601": "2021-07-26T13:19:09.346128Z",
        "url": "https://files.pythonhosted.org/packages/45/ed/8021392bb7ec09fc8480f5094c495d1fbf24bcc85ed33d28f8511b8068b5/opal_fetcher_postgres-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f54129d45a75da508df9bf8c4388cffaa37a7fa854bdc6a1cd6eeb0e68bdef7",
          "md5": "24dc80dacc255fd110f6fde25b04e833",
          "sha256": "96058b78b2d66ca46b78eec2a3ca8ba962a70bad0128f60c4d34b53ce77e3362"
        },
        "downloads": -1,
        "filename": "opal-fetcher-postgres-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "24dc80dacc255fd110f6fde25b04e833",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9963,
        "upload_time": "2021-07-26T13:19:10",
        "upload_time_iso_8601": "2021-07-26T13:19:10.827753Z",
        "url": "https://files.pythonhosted.org/packages/8f/54/129d45a75da508df9bf8c4388cffaa37a7fa854bdc6a1cd6eeb0e68bdef7/opal-fetcher-postgres-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9f55725775085eaec0c0f2b39f4c53ca2fb86a357fa832f36784d2598d7bfa0",
          "md5": "d9ea0b2277724fd16a2ba80c4a7387f5",
          "sha256": "fc5dad005d4bfe9adaf021a33e81d71e1bff8116dd46acf402b44433e9144ac0"
        },
        "downloads": -1,
        "filename": "opal_fetcher_postgres-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9ea0b2277724fd16a2ba80c4a7387f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10154,
        "upload_time": "2022-04-25T15:22:59",
        "upload_time_iso_8601": "2022-04-25T15:22:59.460584Z",
        "url": "https://files.pythonhosted.org/packages/a9/f5/5725775085eaec0c0f2b39f4c53ca2fb86a357fa832f36784d2598d7bfa0/opal_fetcher_postgres-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e9f9da950d65711bf08dd011fe1e09e97f96df1225ef28cbee28920df9ea4cf",
          "md5": "361a5285a0bafe972f98a14482a3afd4",
          "sha256": "5bdecb9a9807e807146f0ad65608564ac7a3457c767d254a904deb2f17ecfd9e"
        },
        "downloads": -1,
        "filename": "opal-fetcher-postgres-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "361a5285a0bafe972f98a14482a3afd4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9858,
        "upload_time": "2022-04-25T15:23:00",
        "upload_time_iso_8601": "2022-04-25T15:23:00.785933Z",
        "url": "https://files.pythonhosted.org/packages/0e/9f/9da950d65711bf08dd011fe1e09e97f96df1225ef28cbee28920df9ea4cf/opal-fetcher-postgres-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9f55725775085eaec0c0f2b39f4c53ca2fb86a357fa832f36784d2598d7bfa0",
        "md5": "d9ea0b2277724fd16a2ba80c4a7387f5",
        "sha256": "fc5dad005d4bfe9adaf021a33e81d71e1bff8116dd46acf402b44433e9144ac0"
      },
      "downloads": -1,
      "filename": "opal_fetcher_postgres-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d9ea0b2277724fd16a2ba80c4a7387f5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 10154,
      "upload_time": "2022-04-25T15:22:59",
      "upload_time_iso_8601": "2022-04-25T15:22:59.460584Z",
      "url": "https://files.pythonhosted.org/packages/a9/f5/5725775085eaec0c0f2b39f4c53ca2fb86a357fa832f36784d2598d7bfa0/opal_fetcher_postgres-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e9f9da950d65711bf08dd011fe1e09e97f96df1225ef28cbee28920df9ea4cf",
        "md5": "361a5285a0bafe972f98a14482a3afd4",
        "sha256": "5bdecb9a9807e807146f0ad65608564ac7a3457c767d254a904deb2f17ecfd9e"
      },
      "downloads": -1,
      "filename": "opal-fetcher-postgres-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "361a5285a0bafe972f98a14482a3afd4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9858,
      "upload_time": "2022-04-25T15:23:00",
      "upload_time_iso_8601": "2022-04-25T15:23:00.785933Z",
      "url": "https://files.pythonhosted.org/packages/0e/9f/9da950d65711bf08dd011fe1e09e97f96df1225ef28cbee28920df9ea4cf/opal-fetcher-postgres-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}