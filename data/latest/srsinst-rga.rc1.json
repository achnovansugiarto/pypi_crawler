{
  "info": {
    "author": "Chulhoon Kim",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Chemistry",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "# `srsinst.rga`\r\n\r\n`srsinst.rga` is a Python GUI application to control and acquire mass spectra from \r\n[Stanford Research Systems (SRS) Residual Gas Analyzers (RGA)](https://thinksrs.com/products/rga.html).\r\nTo use this package safely, you need to be familiar with SRS RGA. You can download the\r\n[manual](https://thinksrs.com/downloads/pdfs/manuals/RGAm.pdf) for your reference.\r\n\r\n## Installation\r\nYou should have a working Python with `pip` (Python package installer) installed. If you don't,\r\n[install Python 3](https://realpython.com/installing-python/) to your system.\r\n\r\nTo install `srsinst.rga` as an instrument driver , use Python package installer `pip` from the command line.\r\n\r\n    python -m pip install srsinst.rga\r\n\r\nTo use its full GUI application, create a virtual environment and install:\r\n\r\n    python -m pip install srsinst.rga[full]\r\n\r\n\r\n## Run `srsinst.rga` as GUI application\r\nif the Python Scripts directory is in PATH environment variable,\r\nStart the application by typing from the command line:\r\n\r\n    rga\r\n\r\nIf not,\r\n\r\n    python -m srsinst.rga\r\n\r\nIt will start the GUI application.\r\n\r\nConnect to an RGA from the Instruments menu.\r\nSelect a task from the Task menu.\r\nPress the green arrow to run the selected task. \r\n\r\nYou can write your own task or modify an existing one and run it from the application, too.\r\n\r\n## Use `srsinst.rga` as instument driver\r\n* Start the Python program, or an editor of your choice to write a Python script.\r\n* import the **RGA** class from `rga` package\r\n* Initialize of an **RGA** instance to connect to an SRS RGA.\r\n\r\n        from srsinst.rga import RGA100 as RGA\r\n\r\n        # for TCPIP communication\r\n        ip_address = '192.168.1.100'\r\n        user_id = 'admin'\r\n        password = 'admin'\r\n\r\n        rga1 = RGA('tcpip', ip_address, user_id, password)\r\n\r\n        # for serial communication\r\n        # Baud rate for RGA100 is fixed to 28800\r\n        # rga2 = RGA('serial', /dev/ttyUSB0', 28800)  # for Linux serial communication\r\n\r\n        rga2 = RGA('serial', 'COM3', 28800)  # for Windows serial communication\r\n\r\n        # or initialize a Rga instance without connection, then connect.\r\n        rga3 = RGA()\r\n        rga3.connect('tcpip', ip_address, user_id, password)\r\n\r\n* Control ionizer parameters.\r\n\r\n        # Set ionizer values\r\n        rga1.ionizer.electron_energy = 70\r\n        rga1.ionizer.ion_energy = 12\r\n        rga1.ionizer.focus_voltage = 90\r\n\r\n        # or\r\n        rga1.ionizer.set_parameters(70, 12, 90)\r\n\r\n\r\n        # Get the ionizer parameters\r\n        a = rga1.ionizer.electron_energy\r\n        b = rga1.ionizer.ion_energy\r\n        c = rga1.ionizer.focus_voltage\r\n\r\n        # or\r\n        a, b, c = rga1.ionizer.get_parameters()\r\n\r\n\r\n        # Set the filament emsission current.\r\n\r\n        rga1.ionizer.emission_current = 1.0  # in the unit of mA\r\n        rga1.ionizer.emission_current = 0.0  # It will turn off the filament\r\n\r\n        # or\r\n\r\n        rga1.filament.turn_on(1.0)  # emission cureent in the unit of mA\r\n        rga1.filament.turn_off()\r\n\r\n\r\n        # Get the emission current to check\r\n        a = rga1.ionizer.emission_current\r\n\r\n* Control detector parameters.\r\n\r\n        # Set CEM voltage to the calibrated CEM voltage, or 0 to turn off\r\n        rga1.cem.voltage = rga1.cem.stored_voltage\r\n        rga1.cem.voltage = 0\r\n\r\n        # or simply turn on or off\r\n        rga1.cem.turn_on()\r\n        rga1.cem.turn_off()\r\n\r\n        # Read back CEM voltage setting\r\n        a = rga1.cem.voltage\r\n\r\n* Control scan parameters.\r\n\r\n        # Set scan parameters\r\n        rga1.scan.initial_mass = 1\r\n        rga1.scan.final_mass = 50\r\n        rga1.scan.scan_speed = 3\r\n        rga1.scan.resolution = 10  # steps_per_amu\r\n\r\n        # or\r\n        rga1.scan.set_parameters(1, 50, 3, 10)\r\n\r\n        # Get scan parameters\r\n        mi, mf, nf, sa = rga1.scan.get_parameters()\r\n\r\n* Run an analog scan.\r\n\r\n        analog_spectrum  = rga1.scan.get_analog_scan()\r\n        spectrum_in_torr = rga1.scan.get_partial_pressure_corrected_spectrum(analog_spectrum)\r\n\r\n        # Get the mathing mass axis with the spectrum\r\n        analog_mass_axis = rga1.scan.get_mass_axis(True)  # is it for analog scan? Yes.\r\n\r\n* Run a histogram scan.\r\n\r\n        histogram_spectrum  = rga1.scan.get_histogram_scan()\r\n\r\n        # Get the matching mass axis with the spectrum\r\n        histogram_mass_axis = rga1.get_mass_axis(False)  # is it for analog scan? No.\r\n\r\n* Run a PvsT scan.\r\n\r\n        masses_of_choice = [2, 18, 28, 32, 44]\r\n        intensities = rga1.scan.get_multiple_mass_scan(masses_of_choice)\r\n\r\n* Measure a single mass ion current of nitrogen at 28 amu\r\n\r\n        intensity = rga1.scan.get_single_scan(28)\r\n\r\n* Save the spectrum to a file.\r\n\r\n        with open('spectrum.dat', 'w') as f:\r\n            for x, y in zip(analog_mass_axis, analog_spectrum):\r\n                f.write('{:.2f} {:.4e}\\n'.format(x, y))\r\n\r\n* Plot with [matplotlib](https://matplotlib.org/stable/users/getting_started/).\r\n\r\n        import matplotlib.pyplot as plt\r\n        plt.plot(analog_mass_axis, spectrum_in_torr)\r\n        plt.show()\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "RGA,residual gas analyzer,SRS,Stanford Research Systems",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "srsinst.rga",
    "package_url": "https://pypi.org/project/srsinst.rga/",
    "platform": null,
    "project_url": "https://pypi.org/project/srsinst.rga/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/srsinst.rga/0.2.8/",
    "requires_dist": [
      "numpy",
      "scipy",
      "srsgui (>=0.1.12)",
      "matplotlib ; extra == 'full'",
      "pyside6 ; extra == 'full'"
    ],
    "requires_python": ">=3.7",
    "summary": "Instrument library and GUI application for SRS RGA",
    "version": "0.2.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17274049,
  "releases": {
    "0.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c51b19b257d97f49cfb99cdc4af364a8b987474ba2d7c89159d1b09e1c7196f",
          "md5": "56713cddb379edb48970d62c39955c1c",
          "sha256": "1efefe049084c6905d7c26655d2a665a0224ff06155dfb41a82d870a77b8eabd"
        },
        "downloads": -1,
        "filename": "srsinst.rga-0.2.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "56713cddb379edb48970d62c39955c1c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 45241,
        "upload_time": "2023-02-08T18:32:48",
        "upload_time_iso_8601": "2023-02-08T18:32:48.607603Z",
        "url": "https://files.pythonhosted.org/packages/2c/51/b19b257d97f49cfb99cdc4af364a8b987474ba2d7c89159d1b09e1c7196f/srsinst.rga-0.2.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "919e55a4f241bdae472471fed313452bdfd047881daaeca568b8b7f0b5e63687",
          "md5": "b856df345c7b60b14b45c94e13729215",
          "sha256": "ddbc3997038ba8040864a33f3dd024b5e51693db0a9087c529e132e47f7f8bd0"
        },
        "downloads": -1,
        "filename": "srsinst.rga-0.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "b856df345c7b60b14b45c94e13729215",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 33911,
        "upload_time": "2023-02-08T18:32:50",
        "upload_time_iso_8601": "2023-02-08T18:32:50.053968Z",
        "url": "https://files.pythonhosted.org/packages/91/9e/55a4f241bdae472471fed313452bdfd047881daaeca568b8b7f0b5e63687/srsinst.rga-0.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c51b19b257d97f49cfb99cdc4af364a8b987474ba2d7c89159d1b09e1c7196f",
        "md5": "56713cddb379edb48970d62c39955c1c",
        "sha256": "1efefe049084c6905d7c26655d2a665a0224ff06155dfb41a82d870a77b8eabd"
      },
      "downloads": -1,
      "filename": "srsinst.rga-0.2.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "56713cddb379edb48970d62c39955c1c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 45241,
      "upload_time": "2023-02-08T18:32:48",
      "upload_time_iso_8601": "2023-02-08T18:32:48.607603Z",
      "url": "https://files.pythonhosted.org/packages/2c/51/b19b257d97f49cfb99cdc4af364a8b987474ba2d7c89159d1b09e1c7196f/srsinst.rga-0.2.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "919e55a4f241bdae472471fed313452bdfd047881daaeca568b8b7f0b5e63687",
        "md5": "b856df345c7b60b14b45c94e13729215",
        "sha256": "ddbc3997038ba8040864a33f3dd024b5e51693db0a9087c529e132e47f7f8bd0"
      },
      "downloads": -1,
      "filename": "srsinst.rga-0.2.8.tar.gz",
      "has_sig": false,
      "md5_digest": "b856df345c7b60b14b45c94e13729215",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 33911,
      "upload_time": "2023-02-08T18:32:50",
      "upload_time_iso_8601": "2023-02-08T18:32:50.053968Z",
      "url": "https://files.pythonhosted.org/packages/91/9e/55a4f241bdae472471fed313452bdfd047881daaeca568b8b7f0b5e63687/srsinst.rga-0.2.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}