{
  "info": {
    "author": "QuTech",
    "author_email": "robert.wezeman@tno.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "PennyLane-QuantumInspire Plugin\r\n###############################\r\n\r\n.. image:: https://img.shields.io/github/license/qutech-delft/pennylane-quantuminspire.svg?\r\n    :alt: License\r\n    :target: https://opensource.org/licenses/Apache-2.0\r\n\r\n.. image:: https://img.shields.io/readthedocs/pennylane-quantuminspire.svg?logo=read-the-docs&style=flat-square\r\n    :alt: Read the Docs\r\n    :target: https://pennylane-quantuminspire.readthedocs.io\r\n\r\n.. header-start-inclusion-marker-do-not-remove\r\n\r\nThe PennyLane-QuantumInspire plugin integrates the Quantum Inspire quantum computing backends\r\nwith PennyLane's quantum machine learning capabilities.\r\n\r\n`PennyLane <https://pennylane.readthedocs.io/en/stable/>`_ is a cross-platform Python library for quantum machine\r\nlearning, automatic differentiation, and optimization of hybrid quantum-classical computations.\r\n\r\n`Quantum Inspire <https://www.quantum-inspire.com/>`_ is a platform for quantum computing developed by QuTech.\r\n\r\nThis plugin relies heavily on the software development kit `(SDK) for the Quantum Inspire platform <https://github.com/QuTech-Delft/quantuminspire>`_\r\nand the `PennyLane-Qiskit Plugin for Qiskit <https://github.com/PennyLaneAI/pennylane-qiskit>`_.\r\n\r\n`Qiskit <https://qiskit.org/documentation/>`_ is an open-source framework for quantum computing.\r\n\r\nThe Quantum Inspire device is build on top of the Qiskit device. The Quantum Inspire SDK registers a Quantum Inspire\r\nbackend to Qiskit to run the algorithms on. This way we combine the strengths and ease of use of the Qiskit plugin\r\nwith the computing power of Quantum Inspire backends.\r\n\r\n.. header-end-inclusion-marker-do-not-remove\r\n\r\nFeatures\r\n========\r\n\r\nGrants access to Quantum Inspire's cloud quantum `emulators <https://www.quantum-inspire.com/kbase/emulator-backends/>`_\r\nand `hardware backends <https://www.quantum-inspire.com/kbase/hardware-backends/>`_.\r\n\r\nEmulator backends:\r\n\r\n* ``\"QX single-node simulator\"`` - Quantum Inspire emulator run on a commodity cloud-based server, with 4GB RAM. It has a fast turn-around time for simulations up to 26 qubits. For basic users, the commodity cloud-based server will be sufficient.\r\n* ``\"QX-34-L\"`` - Quantum Inspire emulator runs on the Lisa cluster computer uses four nodes of the fat_soil_shared partition of Lisa. With 1.5TB of memory each, this allows simulation jobs of up to 34 qubits [**requires advanced account**].\r\n\r\nHardware backends:\r\n\r\n* ``\"Spin-2\"`` - Quantum Inspire quantum 2-qubit semiconductor electron spin processor.\r\n* ``\"Starmon-5\"`` - Quantum Inspire quantum 5-qubit superconductor Transmon processor.\r\n\r\n.. installation-start-inclusion-marker-do-not-remove\r\n\r\nInstallation\r\n============\r\n\r\nThis plugin requires Python version 3.8 and above, as well as PennyLane-Qiskit. Installation of the dependencies can\r\nbe done using ``pip``:\r\n\r\n.. code-block:: bash\r\n\r\n    pip install pennylane-quantuminspire\r\n\r\nTo ensure your device is working as expected, you can also install the development version from source by cloning\r\nthis repository and running a pip install command in the root directory of the repository:\r\n\r\n.. code-block:: bash\r\n\r\n    git clone https://github.com/QuTech-Delft/pennylane-quantuminspire.git\r\n    cd pennylane-quantuminspire\r\n    pip install -e pluginpath\r\n\r\nwhere ``pluginpath`` is the location of the plugin. It will then be accessible via PennyLane.\r\n\r\nFurthermore, the plugin assumes Quantum Inspire credentials are stored on your disk in the default location.\r\nA token can be set using the following steps:\r\n\r\n1. Create a Quantum Inspire account if you do not already have one.\r\n2. Get an API token from the Quantum Inspire website.\r\n3. With your API token run:\r\n\r\n.. code-block:: python\r\n\r\n    from quantuminspire.credentials import save_account\r\n    save_account('YOUR_API_TOKEN')\r\n\r\nAfter calling ``save_account()``, your credentials will be stored on disk.\r\nThose who do not want to save their credentials to disk should use instead:\r\n\r\n.. code-block:: python\r\n\r\n   from quantuminspire.credentials import enable_account\r\n   enable_account('YOUR_API_TOKEN')\r\n\r\nand the token will only be active for the session.\r\n\r\nAfter calling ``save_account()`` once or ``enable_account()`` within your session, token authentication is done\r\nautomatically.\r\n\r\nMore information on different accounts can be found `here <https://www.quantum-inspire.com/kbase/accounts/#account-privileges>`_.\r\n\r\nInstalling for generating documentation\r\n=======================================\r\n\r\nTo install the necessary packages to perform documentation activities for this plugin do:\r\n\r\n.. code-block:: bash\r\n\r\n    pip install -e .[rtd]\r\n\r\nThe documentation generation process is dependent on pandoc. When you want to generate the\r\ndocumentation and pandoc is not yet installed on your system navigate\r\nto `Pandoc <https://pandoc.org/installing.html>`_ and follow the instructions found there to install pandoc.\r\nTo build the **readthedocs** documentation do:\r\n\r\n.. code-block:: bash\r\n\r\n    cd doc\r\n    make html\r\n\r\nThe documentation can then be found in the '``doc/_build/html``' directory.\r\n\r\nInstalling for running tests\r\n============================\r\n\r\nMake sure to install test dependencies first:\r\n\r\n.. code-block:: bash\r\n\r\n    pip install -e .[dev]\r\n\r\nUnit tests\r\n~~~~~~~~~~\r\n\r\nRun the unit tests using:\r\n\r\n.. code-block:: bash\r\n\r\n    pytest\r\n\r\nor including coverage:\r\n\r\n.. code-block:: bash\r\n\r\n    pytest tests --cov=pennylane_quantuminspire --cov-report=term-missing --cov-report=xml -p no:warnings --tb=native\r\n\r\n.. installation-end-inclusion-marker-do-not-remove\r\n\r\n.. getting-started-start-inclusion-marker-do-not-remove\r\n\r\nGetting started\r\n===============\r\n\r\nOnce the PennyLane-QuantumInspire plugin is installed, the provided Quantum Inspire device can be accessed straight\r\naway in PennyLane.\r\n\r\nThe Quantum Inspire device can be instantiated with a ``QX single-node simulator`` backend as follows:\r\n\r\n.. code-block:: python\r\n\r\n    import pennylane as qml\r\n    dev = qml.device('quantuminspire.qi', wires=2, backend='QX single-node simulator')\r\n\r\nThis device can then be used just like other devices for the definition and evaluation of QNodes within the\r\nPennyLane framework.\r\n\r\nInspecting results of computations in Quantum Inspire\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nWhen a computation has run on a Quantum Inspire backend the algorithm that was executed and the results can be\r\ninspected in Quantum Inspire.\r\nWhen algorithms are run on a backend of the Quantum Inspire device, all the executed algorithms are contained in a\r\nsingle Quantum Inspire project.\r\nAfter logging in to the `Quantum Inspire platform <https://www.quantum-inspire.com>`_ an overview is given of the\r\navailable projects. By opening your project the backend that computed the results is displayed. Navigating to\r\n``Results`` show the computation results for each algorithm. Also the algorithms code can be inspected here.\r\nThe project name that is used by the plugin can be passed as a separate argument ``project`` to the Quantum\r\nInspire device constructor. For example:\r\n\r\n.. code-block:: python\r\n\r\n    dev = qml.device('quantuminspire.qi', wires=4, project='My project name')\r\n\r\nWhen no project name is given the project name defaults to: ``'PennyLane project 2022-06-07 09:50:38'``, where the last\r\nparts of the project name are replaced by the current date and local time.\r\nMore information about working with Quantum Inspire can be found at\r\n`Quantum Inspire Quick Guide <https://www.quantum-inspire.com/kbase/quick-guide/>`_. Specific information about\r\nmanaging projects can be found at\r\n`Managing your projects <https://www.quantum-inspire.com/kbase/managing-your-projects/>`_.\r\n\r\n.. getting-started-end-inclusion-marker-do-not-remove\r\n.. support-start-inclusion-marker-do-not-remove\r\n\r\nSupport\r\n=======\r\n\r\n- **Source Code:** https://github.com/QuTech-Delft/pennylane-quantuminspire\r\n- **Issue Tracker:** https://github.com/QuTech-Delft/pennylane-quantuminspire/issues\r\n- **Quantum Inspire:** https://www.quantum-inspire.com/contact\r\n\r\nIf you are having issues, please let us know by posting the issue on our Github issue tracker. For questions about\r\nQuantum Inspire see the contact info on the Quantum Inspire website.\r\n\r\n.. support-end-inclusion-marker-do-not-remove\r\n\r\n.. license-start-inclusion-marker-do-not-remove\r\n\r\nLicense\r\n=======\r\n\r\nThe PennyLane QuantumInspire plugin is **free** and **open source**, released under\r\nthe `Apache License, Version 2.0 <https://www.apache.org/licenses/LICENSE-2.0>`_.\r\n\r\n.. license-end-inclusion-marker-do-not-remove\r\n\r\n\r\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/QuTech-Delft/pennylane-quantuminspire",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "QuTech SDST",
    "maintainer_email": "software@qutech.support",
    "name": "pennylane-quantuminspire",
    "package_url": "https://pypi.org/project/pennylane-quantuminspire/",
    "platform": null,
    "project_url": "https://pypi.org/project/pennylane-quantuminspire/",
    "project_urls": {
      "Homepage": "https://github.com/QuTech-Delft/pennylane-quantuminspire"
    },
    "release_url": "https://pypi.org/project/pennylane-quantuminspire/0.4.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "PennyLane Plugin for Quantum Inspire",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17062058,
  "releases": {
    "0.2.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08d872d61ddd696965f3b67d034de9f35fd49de35a9ef0556ab3c94f62f87c3e",
          "md5": "8a281cbc79d5a571596a51f769c3958f",
          "sha256": "df194e874cb91a930354fcfdb4fe1ca47be7ea06b81193947176cce26817baab"
        },
        "downloads": -1,
        "filename": "pennylane-quantuminspire-0.2.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "8a281cbc79d5a571596a51f769c3958f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11931,
        "upload_time": "2022-06-07T15:27:01",
        "upload_time_iso_8601": "2022-06-07T15:27:01.009476Z",
        "url": "https://files.pythonhosted.org/packages/08/d8/72d61ddd696965f3b67d034de9f35fd49de35a9ef0556ab3c94f62f87c3e/pennylane-quantuminspire-0.2.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f943d0fe736d3b9765f9042fd8d19f90a265011f27d426420249469eef1fc9e",
          "md5": "9a86ce9a9c7d51512e49710eae100b62",
          "sha256": "22580f3b1e91d3208233d94ff2b5c2f188e41684de90234b21da3123c17d557a"
        },
        "downloads": -1,
        "filename": "pennylane-quantuminspire-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9a86ce9a9c7d51512e49710eae100b62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14867,
        "upload_time": "2022-07-07T13:07:36",
        "upload_time_iso_8601": "2022-07-07T13:07:36.738977Z",
        "url": "https://files.pythonhosted.org/packages/0f/94/3d0fe736d3b9765f9042fd8d19f90a265011f27d426420249469eef1fc9e/pennylane-quantuminspire-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6d36f907e1ce40bb8a474e5d1b6cd01af4711e95c39f7e2a80ff7b22b3530cb",
          "md5": "0a728a02a4dcd3530845ff03409ca94d",
          "sha256": "548b8c8fec42b68dd17208ab8816336d5fbb77c01a3a7e0b1402a890432d2d4e"
        },
        "downloads": -1,
        "filename": "pennylane-quantuminspire-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0a728a02a4dcd3530845ff03409ca94d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15317,
        "upload_time": "2023-02-27T09:49:22",
        "upload_time_iso_8601": "2023-02-27T09:49:22.228569Z",
        "url": "https://files.pythonhosted.org/packages/f6/d3/6f907e1ce40bb8a474e5d1b6cd01af4711e95c39f7e2a80ff7b22b3530cb/pennylane-quantuminspire-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6d36f907e1ce40bb8a474e5d1b6cd01af4711e95c39f7e2a80ff7b22b3530cb",
        "md5": "0a728a02a4dcd3530845ff03409ca94d",
        "sha256": "548b8c8fec42b68dd17208ab8816336d5fbb77c01a3a7e0b1402a890432d2d4e"
      },
      "downloads": -1,
      "filename": "pennylane-quantuminspire-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0a728a02a4dcd3530845ff03409ca94d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15317,
      "upload_time": "2023-02-27T09:49:22",
      "upload_time_iso_8601": "2023-02-27T09:49:22.228569Z",
      "url": "https://files.pythonhosted.org/packages/f6/d3/6f907e1ce40bb8a474e5d1b6cd01af4711e95c39f7e2a80ff7b22b3530cb/pennylane-quantuminspire-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}