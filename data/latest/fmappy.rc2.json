{
  "info": {
    "author": "xtofl",
    "author_email": "kristoffel.pirard@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# fmappy\n\n![Python Workflow](https://github.com/xtofl/fmappy/workflows/Python%20Main%20Workflow/badge.svg) [![codecov](https://codecov.io/gh/xtofl/fmappy/branch/main/graph/badge.svg?token=OI10AO5B02)](https://codecov.io/gh/xtofl/fmappy) [![CodeFactor](https://www.codefactor.io/repository/github/xtofl/fmappy/badge)](https://www.codefactor.io/repository/github/xtofl/fmappy) [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nBrings the Functionality of the Functor to Python.\n\n```python\n>>> fmap(square, dict(one=1, two=2, three=3))\n{'one': 1, 'two': 4, 'three': 9}\n```\n\nI miss this.  The implementation of `map` always returns a generator; but sometimes\nI want to keep the container type, just map the contained values.  This is what\nthe functiona-programming world knows as a Functor.\n\n## Why this Library?\n\n```python\n>>> numbers = {'one': 1, 'two': 2, 'three': 3}\n>>> squared = {k: v*v for k, v in numbers.items()}\n>>> names = numbers.keys()\n>>> NAMES = tuple(n.upper() for n in names)\n>>> NAMES_TOO = tuple(map(str.upper, names))\n```\n\nWe have got used to these patterns: dict-comprehensions, using `map` and storing\nit into a `tuple` for later use.  So used that we don't realize it is chipping\naway some of our mental capacity while reading and writing code.  I want this to\nstop: a use case that occurs so often has the right to be streamlined into\nsomething simpler, and we can borrow gratefully from the functional programming\nworld here.\n\nA number of libraries exist for full fledged functional programming in Python.\nThese libraries assume an FP background.  I want a library that starts from the\nPython syntax, and adds as little clutter as possible - as many batteries included.\n\nAs Alan Kaye said: make Simple things Simple, and Hard things Possible.\n\nI bumped onto [this gist] and realized this was something: We Already Needed It For\nA Long Time ([WANIFALT]).  This is simple enough to use for even starting Pythonistas.\nAnd it allows enough extensions for the professional to integrate it in their code base.\n\n## Goals\n\n* `import this`\n* cover 95% of the day to day use cases (to my knowledge)\n* wrist-friendly: use `fmap` instead of `map` and you're there\n* Closed for Change, Open for Extension\n\n## Other Libraries\n\n* https://pypi.org/project/pyfunctor/: almost, but not quite, entirely unlike Python\n\n  ```python\n  f = (Functor(range(10)) >> c_(map)(lambda x: x * 2)\n  ```\n\n* https://pypi.org/project/tx-functional/: almost like Python\n\n  ```python\n  assert Nothing.map(lambda x:2) == Nothing\n  ```\n\n[this gist]: https://gist.github.com/3noch/eef18dba108be7db0441\n[WANIFALT]: https://qbziz.wordpress.com/2008/10/23/you-heard-it-here-first/\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xtofl/fmappy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fmappy",
    "package_url": "https://pypi.org/project/fmappy/",
    "platform": "",
    "project_url": "https://pypi.org/project/fmappy/",
    "project_urls": {
      "Documentation": "https://github.com/xtofl/fmappy",
      "Homepage": "https://github.com/xtofl/fmappy",
      "Repository": "https://github.com/xtofl/fmappy"
    },
    "release_url": "https://pypi.org/project/fmappy/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.8,<4.0",
    "summary": "Functor for Python, with a Pythonic UX",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12378528,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d135c5024cc1f50124449b2ff4b55a904fe3f8dc8d7c1a92a9f1a0824949189",
          "md5": "aa1c06c5c3da670e984f69a9cbae7da2",
          "sha256": "48f3acf8153548eff1daa9cda73dbcd756896dfd47e2eeec5e4540a05da2af6c"
        },
        "downloads": -1,
        "filename": "fmappy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa1c06c5c3da670e984f69a9cbae7da2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 4050,
        "upload_time": "2021-12-20T14:42:15",
        "upload_time_iso_8601": "2021-12-20T14:42:15.194547Z",
        "url": "https://files.pythonhosted.org/packages/4d/13/5c5024cc1f50124449b2ff4b55a904fe3f8dc8d7c1a92a9f1a0824949189/fmappy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecc9290735359cb85aa6b67543375cadbd9aa8457cfd90165d6020b1f28f47a0",
          "md5": "b3e28b9c5efa497d22d9d4f9488a7804",
          "sha256": "ee7252d8d1e9334ea8e60d7c2498ef0e55e167234a9030b8b8e345fd4dd40c20"
        },
        "downloads": -1,
        "filename": "fmappy-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3e28b9c5efa497d22d9d4f9488a7804",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 4045,
        "upload_time": "2021-12-22T06:31:25",
        "upload_time_iso_8601": "2021-12-22T06:31:25.335228Z",
        "url": "https://files.pythonhosted.org/packages/ec/c9/290735359cb85aa6b67543375cadbd9aa8457cfd90165d6020b1f28f47a0/fmappy-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ecc9290735359cb85aa6b67543375cadbd9aa8457cfd90165d6020b1f28f47a0",
        "md5": "b3e28b9c5efa497d22d9d4f9488a7804",
        "sha256": "ee7252d8d1e9334ea8e60d7c2498ef0e55e167234a9030b8b8e345fd4dd40c20"
      },
      "downloads": -1,
      "filename": "fmappy-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b3e28b9c5efa497d22d9d4f9488a7804",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 4045,
      "upload_time": "2021-12-22T06:31:25",
      "upload_time_iso_8601": "2021-12-22T06:31:25.335228Z",
      "url": "https://files.pythonhosted.org/packages/ec/c9/290735359cb85aa6b67543375cadbd9aa8457cfd90165d6020b1f28f47a0/fmappy-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}