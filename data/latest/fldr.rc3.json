{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![pypi](https://img.shields.io/pypi/v/fldr.svg)](https://pypi.org/project/fldr/)\n\n# The Fast Loaded Dice Roller\n\nThis repository contains reference implementations in C and Python\nof the sampling algorithm in\n\n> Feras A. Saad, Cameron E. Freer, Martin C. Rinard, and Vikash K. Mansinghka.\n[The Fast Loaded Dice Roller: A Near-Optimal Exact Sampler for Discrete Probability Distributions](https://arxiv.org/pdf/2003.03830.pdf).\nIn AISTATS 2020: Proceedings of the 23rd International Conference on\nArtificial Intelligence and Statistics, Proceedings of Machine Learning\nResearch 108, Palermo, Sicily, Italy, 2020.\n\nThe Fast Loaded Dice Roller (FLDR) is a fast algorithm for rolling an\nn-sided dice.  More specifically, given a list `L` of `n` positive numbers,\nwhere `L[i]` represents the relative weight of the `i`th side, FLDR returns\ninteger `i` with relative probability `L[i]`.\n\nFLDR produces exact samples from the specified probability distribution:\n\n  - For **integer** weights, the probability of returning `i` is precisely\n    equal to the rational number `Fraction(L[i], m)`, where\n    `m` is the sum of `L`.\n\n  - For **floating-points** weights, each weight `L[i]` is (conceptually)\n    converted to the corresponding rational number `Fraction(n[i], d[i])`\n    where `n[i]` is a positive integer and `d[i]` is a power of 2. The\n    rational weights are then normalized (exactly) to sum to unity. The\n    preprocessing computations are never done explicitly in floating-point,\n    but instead operate directly on the binary representation of\n    floating-point numbers, as defined by the\n    [IEEE-754](https://en.wikipedia.org/wiki/IEEE_754) standard\n\n## Building and Installing\n\nThe Python library can be installed via pip\n\n    pip install fldr\n\nThe C library can be built by running\n\n    $ make all\n\nThis command creates several artifacts in the `build/` directory:\n\n1. `build/lib/fldr`: A Python package that implements FLDR.\n\n2. `build/lib/libfldr.a`: A static C library for C programs that use FLDR.\n\n3. `build/include`: Contains header files for C programs that use FLDR.\n\n4. `build/bin`: Contains executables for a command line interface to FLDR.\n\n## Usage (Python Library)\n\nThe Python 3 library is implemented in `src/python`.\nThe following code from [examples/example.py](examples/example.py)\nshows how to use FLDR to sample from a distribution with integer weights.\n\n```python\nfrom fldr import fldr_preprocess\nfrom fldr import fldr_sample\n\nN_sample = 100\ndistribution = [1, 1, 2, 3, 1]\nx = fldr_preprocess(distribution)\nsamples = [fldr_sample(x) for _i in range(N_sample)]\nprint(' '.join(map(str, samples)))\n```\n\nTo sample from distributions with floating-point weights, use\n`fldrf_preprocess` instead of `fldr_preprocess`. For an illustration,\nrefer to [examples/examplef.py](examples/examplef.py).\n\nThese examples can be invoked by running:\n\n    $ ./pythenv.sh python examples/example.py\n    $ ./pythenv.sh python examples/examplef.py\n\n## Usage (C Library)\n\nThe C library is implemented in `src/c`.\n\nThe following code from [examples/example.c](examples/example.c)\nshows how to use FLDR to sample from a distribution with integer weights.\n\n```c\n#include <stdlib.h>\n#include <stdio.h>\n#include \"fldr.h\"\n\nint main(int argc, char **argv) {\n    int N_sample = 100;\n    int *samples = calloc(N_sample, sizeof(*samples));\n\n    int distribution[5] = { 1, 1, 2, 3, 1 };\n    fldr_preprocess_t *x = fldr_preprocess(distribution, 5);\n    for (int i = 0; i < N_sample; i++) {\n        samples[i] = fldr_sample(x);\n        printf(\"%d \", samples[i]);\n    }\n    printf(\"\\n\");\n\n    free(samples);\n    fldr_free(x);\n}\n```\n\nTo sample from distributions with floating-point weights, use\n`fldrf_preprocess` instead of `fldr_preprocess`. For an illustration,\nrefer to [examples/examplef.c](examples/examplef.c).\n\nThese examples can be invoked by running:\n\n    $ make -C examples\n    $ ./examples/example.out\n    $ ./examples/examplef.out\n\n## Usage (Command Line Interface)\n\nTwo executables are provided:\n\n  - `./build/bin/fldr` (integer weights)\n  - `./build/bin/fldrf` (floating-point weights)\n\nThe executables have the following command line interface:\n\n    usage: ./build/bin/fldr N path\n\nwhere `N` is the number of samples to draw; `path` is the file that specifies\nthe target distribution (the first number in `path` should be the number\nof elements in the target distribution).\n\nFor example, to generate 100 samples from { 1, 1, 2, 3, 1 }, run:\n\n    $ echo '5 1 1 2 3 1' > w\n    $ ./build/bin/fldr 100 w\n\nTo generate 100 samples from { 0.25, 0.13, 1.12 }, run:\n\n    $ echo '3 0.25 0.13 1.12' > w\n    $ ./build/bin/fldrf 100 w\n\n## Tests\n\nThe test suite in `tests/` requires `pytest` and `scipy`.\nRun the following command in the shell:\n\n    $ ./check.sh\n\nNote that the test cases are stochastic and are tested using stochastic\ngoodness-of-fit tests, and thus 5% of the stochastic test cases will on\naverage in any give run of the test module for the given significance\nlevel.\n\n## Experiments\n\nImplementations of the experiments and baseline exact sampling algorithms\nfrom Section 6 of the AISTATS paper can be found at\nhttps://github.com/probcomp/fast-loaded-dice-roller-experiments.\n\n## Citing\n\nPlease cite the following paper:\n\n    @inproceedings{saad2020fldr,\n    title           = {The Fast Loaded Dice Roller: A Near-optimal Exact Sampler for Discrete Probability Distributions},\n    author          = {Saad, Feras A. and Freer, Cameron E. and Rinard, Martin C. and Mansinghka, Vikash K.},\n    booktitle       = {AISTATS 2020: Proceedings of the 23rd International Conference on Artificial Intelligence and Statistics},\n    volume          = 108,\n    series          = {Proceedings of Machine Learning Research},\n    address         = {Palermo, Sicily, Italy},\n    publisher       = {PMLR},\n    year            = 2020,\n    keywords        = {random variate generation, sampling, discrete random variables},\n    abstract        = {This paper introduces a new algorithm for the fundamental problem of generating a random integer from a discrete probability distribution using a source of independent and unbiased random coin flips. This algorithm, which we call the Fast Loaded Dice Roller (FLDR), has efficient complexity properties in space and time: the size of the sampler is guaranteed to be linear in the number of bits needed to encode the target distribution and the sampler consumes (in expectation) at most 6.5 bits of entropy more than the information-theoretically minimal rate, independently of the values or size of the target distribution. We present an easy-to-implement, linear-time preprocessing algorithm and a fast implementation of the FLDR using unsigned integer arithmetic. Empirical evaluations establish that the FLDR is 2x--10x faster than multiple baseline algorithms for exact sampling, including the widely-used alias and interval samplers. It also uses up to 10000x less space than the information-theoretically optimal sampler, at the expense of a less than 1.5x runtime overhead.},\n    note            = {(To Appear)},\n    }\n\n## Related Repositories\n\nFor an optimal (approximate) dice rolling algorithm that uses a fixed,\npre-specified bit length, see https://github.com/probcomp/optimal-approximate-sampling.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/probcomp/fast-loaded-dice-roller",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "Feras A. Saad",
    "maintainer_email": "fsaad@mit.edu",
    "name": "fldr",
    "package_url": "https://pypi.org/project/fldr/",
    "platform": "",
    "project_url": "https://pypi.org/project/fldr/",
    "project_urls": {
      "Homepage": "https://github.com/probcomp/fast-loaded-dice-roller"
    },
    "release_url": "https://pypi.org/project/fldr/1.4.6/",
    "requires_dist": [
      "pytest ; extra == 'tests'",
      "scipy ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "Fast Loaded Dice Roller",
    "version": "1.4.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9718545,
  "releases": {
    "1.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a38dd10b05bbddb68439ce91171ebed7fc434d9cef4a553189b06436f0508a1",
          "md5": "ed600e22df475e60a6bc9faf32b9fd4d",
          "sha256": "e80dcfcad0c7b384ffb890269eaeff5fa1c661a77136d8005407a3b664e04982"
        },
        "downloads": -1,
        "filename": "fldr-1.4.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed600e22df475e60a6bc9faf32b9fd4d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20659,
        "upload_time": "2020-10-21T22:00:06",
        "upload_time_iso_8601": "2020-10-21T22:00:06.666675Z",
        "url": "https://files.pythonhosted.org/packages/0a/38/dd10b05bbddb68439ce91171ebed7fc434d9cef4a553189b06436f0508a1/fldr-1.4.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7156e19016b46f7287f056d4bd9f0ffb9d6c2038d0f058a91386e842320d615",
          "md5": "8770b258bbfff99977ce1abe70c58ab0",
          "sha256": "6da5cf8f46872ca8cc7f90b18ab46f2fb0686d807e4b270900301e5552bd25db"
        },
        "downloads": -1,
        "filename": "fldr-1.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8770b258bbfff99977ce1abe70c58ab0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8386,
        "upload_time": "2020-10-21T22:00:09",
        "upload_time_iso_8601": "2020-10-21T22:00:09.251402Z",
        "url": "https://files.pythonhosted.org/packages/f7/15/6e19016b46f7287f056d4bd9f0ffb9d6c2038d0f058a91386e842320d615/fldr-1.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81d559fd2472784ee877e4528d530977312bb3b31b073873f177fb34a64ac29a",
          "md5": "7d162c70c0304c6d3e532eedd62d60fd",
          "sha256": "b92165e3bda7fee3ca2398a339c91f0ab1a2e0dcadad7a1afdcd440d82a1073f"
        },
        "downloads": -1,
        "filename": "fldr-1.4.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d162c70c0304c6d3e532eedd62d60fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20726,
        "upload_time": "2020-10-21T22:05:20",
        "upload_time_iso_8601": "2020-10-21T22:05:20.643842Z",
        "url": "https://files.pythonhosted.org/packages/81/d5/59fd2472784ee877e4528d530977312bb3b31b073873f177fb34a64ac29a/fldr-1.4.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "366f676aed421f70df87d59b272e253e8dc5db22097b2f9ee3be277efd463d88",
          "md5": "b5d29ca6c57b992698aeb2309a6b86e0",
          "sha256": "f982782f215a8f64b359cf02b40e9d7c544a70e29c1df479b3673b9e4ded9d70"
        },
        "downloads": -1,
        "filename": "fldr-1.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b5d29ca6c57b992698aeb2309a6b86e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8489,
        "upload_time": "2020-10-21T22:05:22",
        "upload_time_iso_8601": "2020-10-21T22:05:22.311876Z",
        "url": "https://files.pythonhosted.org/packages/36/6f/676aed421f70df87d59b272e253e8dc5db22097b2f9ee3be277efd463d88/fldr-1.4.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e12e296624efacebc281d9e15ad90d9c418fbc7e90f663c79f4ae361252abff5",
          "md5": "fcb6ee87f7b5ddf7bcd5c90679cbc581",
          "sha256": "59d4f3e4bce907b6529594c28697ce90e86ab973a242ba3e642c33ff8995ca0d"
        },
        "downloads": -1,
        "filename": "fldr-1.4.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fcb6ee87f7b5ddf7bcd5c90679cbc581",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20797,
        "upload_time": "2021-03-09T16:16:55",
        "upload_time_iso_8601": "2021-03-09T16:16:55.259629Z",
        "url": "https://files.pythonhosted.org/packages/e1/2e/296624efacebc281d9e15ad90d9c418fbc7e90f663c79f4ae361252abff5/fldr-1.4.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a253e29be0699b31aaaf96a1189b27037dfbc65d5e386b54401422558027afca",
          "md5": "4039db58cfe090c3423baf1003f80993",
          "sha256": "411441ca22c038061a6c8f8f926e52717f0064119242ce83933e90ffb5003a41"
        },
        "downloads": -1,
        "filename": "fldr-1.4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "4039db58cfe090c3423baf1003f80993",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8541,
        "upload_time": "2021-03-09T16:16:56",
        "upload_time_iso_8601": "2021-03-09T16:16:56.625958Z",
        "url": "https://files.pythonhosted.org/packages/a2/53/e29be0699b31aaaf96a1189b27037dfbc65d5e386b54401422558027afca/fldr-1.4.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e12e296624efacebc281d9e15ad90d9c418fbc7e90f663c79f4ae361252abff5",
        "md5": "fcb6ee87f7b5ddf7bcd5c90679cbc581",
        "sha256": "59d4f3e4bce907b6529594c28697ce90e86ab973a242ba3e642c33ff8995ca0d"
      },
      "downloads": -1,
      "filename": "fldr-1.4.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fcb6ee87f7b5ddf7bcd5c90679cbc581",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20797,
      "upload_time": "2021-03-09T16:16:55",
      "upload_time_iso_8601": "2021-03-09T16:16:55.259629Z",
      "url": "https://files.pythonhosted.org/packages/e1/2e/296624efacebc281d9e15ad90d9c418fbc7e90f663c79f4ae361252abff5/fldr-1.4.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a253e29be0699b31aaaf96a1189b27037dfbc65d5e386b54401422558027afca",
        "md5": "4039db58cfe090c3423baf1003f80993",
        "sha256": "411441ca22c038061a6c8f8f926e52717f0064119242ce83933e90ffb5003a41"
      },
      "downloads": -1,
      "filename": "fldr-1.4.6.tar.gz",
      "has_sig": false,
      "md5_digest": "4039db58cfe090c3423baf1003f80993",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8541,
      "upload_time": "2021-03-09T16:16:56",
      "upload_time_iso_8601": "2021-03-09T16:16:56.625958Z",
      "url": "https://files.pythonhosted.org/packages/a2/53/e29be0699b31aaaf96a1189b27037dfbc65d5e386b54401422558027afca/fldr-1.4.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}