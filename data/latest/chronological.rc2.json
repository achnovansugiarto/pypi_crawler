{
  "info": {
    "author": "Otherside AI",
    "author_email": "bram@othersideai.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Chronology\n\nChronology is a library that enables users of OpenAI's GPT-3 language model to more easily build complex language-powered applications. \n\nIt provides a simple and intuitive interface for working with GPT-3.\n\nWe built this at OthersideAI to help mitigate some of the monotonous work we had to do when developing with GPT-3. Our library has the following features:\n\n- Asynchronously call GPT-3, enabling multiple prompts to generate at the same time\n- Easy creation and modification of prompts\n- Chain prompts together, feeding output from one or multiple prompts into another prompt, allowing for highly-complex systems to be built quickly\n\nWe built this library to be as intuitive as possible. There are no complicated concepts to master.\n\n# Installation\n\nchronology is hosted on PyPI.\n\nChronology is supported on Python 3.6 and above.\n\nTo install chronology:\n\n`pip install chronological`\n\nThis project also depends on the following packages: \n* [`openai-api`](https://github.com/openai/openai-python)\n* [`python-dotenv`](https://pypi.org/project/python-dotenv/)\n* [`loguru`](https://github.com/Delgan/loguru)\n* [`asyncio`](https://docs.python.org/3/library/asyncio.html)\n\n# Usage\n\nAfter you have downloaded the package, create a `.env` file at the root of your project and put your OpenAI API key in as:\n\n`OPENAI_API_KEY = \"MY_API_KEY\"`\n\nYou now have a few options. You can use the UI to generate the chain or you can use the API directly.\n\n## [Using ChronologyUI](https://github.com/OthersideAI/chronology-ui)\n\nHere is a [Loom video](https://www.loom.com/share/47cb8d328ebd446db4d98ea1c0cac2c7?sharedAppSource=personal_library) showing how to use the UI with the Python [`chronology`](https://github.com/OthersideAI/chronology) package.\n\n## Using the API Directly\n\n### [`main`](#main)\n\nMain function that runs logic. Accepts a function implemented on your end!\n\n### [`fetch_max_search_doc`](#fetch_max_search_doc)\n\nFetch document value with max score. Wrapper for OpenAI API Search.\n\nOptional:\n\nmin_score_cutoff = if maximum score is less than cutoff, None will be returned. Defaults to -1\n\nfull_doc = return whole response with max, but doesn't grab doc for you. Defaults to False. [doc, doc.index, doc.score]\n\n### [`raw_completion`](#raw_completion)\n\nWrapper for OpenAI API completion. Returns raw result from GPT-3.\n\n### [`cleaned_completion`](#cleaned_completion)\n\nWrapper for OpenAI API completion. Returns whitespace trimmed result from GPT-3.\n\n### [`gather`](#gather)\n\nRun methods in parallel (they don't need to wait for each other to finish).\n\nRequires method argumets to be async.\n\nExample: await gather(fetch_max_search_doc(query_1, docs), fetch_max_search_doc(query_2, docs))\n\n### [`read_prompt`](#read_prompt)\n\nLooks in prompts/ directory for a text file. Pass in file name only, not extension.\n\nExample: prompts/hello-world.txt -> read_prompt('hello-world')\n\n\n### [`add_new_lines_start`](#add_new_lines_start)\n\nAdd N new lines to the start of a string.\n\n### [`add_new_lines_end`](#add_new_lines_end)\n\nAdd N new lines to the end of a string.\n\n### [`append_prompt`](#append_prompt)\n\nAdd new content to the end of a string.\n\n### [`prepend_prompt`](#prepend_prompt)\n\nAdd new content to the start of a string.\n\n### [`set_api_key`](#set_api_key)\n\nSet your OpenAI API key in the code.\n\n## Contributing\n\nChronology & ChronologyUI are both open source!\n\nThis project is an evolving use case and we welcome any contribution or feedback.\n\n### Open Bouties: \n\n- [ ] adding all the fields the OpenAI Python API accepts to Chronology\n- [ ] adding a test suite that calls different length chains\n- [ ] extending `fetch_max_search_doc` to have smarter logic around minimium scores \n- [ ] make `gather` run faster, using [threads](https://docs.python.org/3/library/asyncio-task.html#running-in-threads)\n\n## Learn More\n\nChronology is the backbone of https://OthersideAI.com. We use it to chain prompt calls and asyncronously call GPT-3. Our application is highly complex, and has many steps. Chronology allows us to parallelize those steps, significantly cutting down the time it takes to generate an email.\n\nTo learn more about OthersideAI, take a look at the following resources:\n\n- [Our Homepage](https://www.othersideai.com/)\n- [Our Twitter](https://twitter.com/othersideai)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/OthersideAI/chronology",
    "keywords": "",
    "license": "unlicense",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chronological",
    "package_url": "https://pypi.org/project/chronological/",
    "platform": "",
    "project_url": "https://pypi.org/project/chronological/",
    "project_urls": {
      "Homepage": "https://github.com/OthersideAI/chronology"
    },
    "release_url": "https://pypi.org/project/chronological/0.1.1/",
    "requires_dist": [
      "openai",
      "python-dotenv",
      "loguru"
    ],
    "requires_python": ">=3.7",
    "summary": "Chain GPT calls like a pro!",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9146688,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b814a97698ab0aa2c2c6de30e24c914bce7788c644e6ce3edfb889846704ea66",
          "md5": "d8c4daef01425e6cfdb52da2cc83d11c",
          "sha256": "8cfe269d33df4ab3b1e1acec3d43ad2b0fe6760884ecec9e1f0fdb788966b0c6"
        },
        "downloads": -1,
        "filename": "chronological-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d8c4daef01425e6cfdb52da2cc83d11c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5630,
        "upload_time": "2020-12-30T16:59:02",
        "upload_time_iso_8601": "2020-12-30T16:59:02.176265Z",
        "url": "https://files.pythonhosted.org/packages/b8/14/a97698ab0aa2c2c6de30e24c914bce7788c644e6ce3edfb889846704ea66/chronological-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "813d0bf1d0e9c75ad5652e0a22a42798013e05887b4ac895963c3baff3ef49a2",
          "md5": "ea3f7928a25519dcccfa73fc2a31f0e5",
          "sha256": "aa943a21309746ac30914935da09a091ad386c7468cdddcaab60cf13b40523c3"
        },
        "downloads": -1,
        "filename": "chronological-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ea3f7928a25519dcccfa73fc2a31f0e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4668,
        "upload_time": "2020-12-30T16:59:03",
        "upload_time_iso_8601": "2020-12-30T16:59:03.156246Z",
        "url": "https://files.pythonhosted.org/packages/81/3d/0bf1d0e9c75ad5652e0a22a42798013e05887b4ac895963c3baff3ef49a2/chronological-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "818b5d5386bf9adcb1a19ef59d2f366d1831897e8784f50e19c37f77cc16975e",
          "md5": "8010ad3b86cd4a6f1b5e9c55e35704b4",
          "sha256": "76ff76c35dbc179b9b1fea05bf828b2df86fbcaa14cc2de6d47497eebf5a8ef2"
        },
        "downloads": -1,
        "filename": "chronological-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8010ad3b86cd4a6f1b5e9c55e35704b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5957,
        "upload_time": "2021-01-15T22:28:25",
        "upload_time_iso_8601": "2021-01-15T22:28:25.032050Z",
        "url": "https://files.pythonhosted.org/packages/81/8b/5d5386bf9adcb1a19ef59d2f366d1831897e8784f50e19c37f77cc16975e/chronological-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad25bff5d471d2d88f3c0f5317eaeda933ab099e05f172953b7ad8a2e662e42f",
          "md5": "64a6c7dd93dc9fa3da284af08be97a90",
          "sha256": "aee2d12fd8846aa430d89777d17d5583f785be2f875505c80291bcef4fc0d95d"
        },
        "downloads": -1,
        "filename": "chronological-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "64a6c7dd93dc9fa3da284af08be97a90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5060,
        "upload_time": "2021-01-15T22:28:26",
        "upload_time_iso_8601": "2021-01-15T22:28:26.418784Z",
        "url": "https://files.pythonhosted.org/packages/ad/25/bff5d471d2d88f3c0f5317eaeda933ab099e05f172953b7ad8a2e662e42f/chronological-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "818b5d5386bf9adcb1a19ef59d2f366d1831897e8784f50e19c37f77cc16975e",
        "md5": "8010ad3b86cd4a6f1b5e9c55e35704b4",
        "sha256": "76ff76c35dbc179b9b1fea05bf828b2df86fbcaa14cc2de6d47497eebf5a8ef2"
      },
      "downloads": -1,
      "filename": "chronological-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8010ad3b86cd4a6f1b5e9c55e35704b4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 5957,
      "upload_time": "2021-01-15T22:28:25",
      "upload_time_iso_8601": "2021-01-15T22:28:25.032050Z",
      "url": "https://files.pythonhosted.org/packages/81/8b/5d5386bf9adcb1a19ef59d2f366d1831897e8784f50e19c37f77cc16975e/chronological-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad25bff5d471d2d88f3c0f5317eaeda933ab099e05f172953b7ad8a2e662e42f",
        "md5": "64a6c7dd93dc9fa3da284af08be97a90",
        "sha256": "aee2d12fd8846aa430d89777d17d5583f785be2f875505c80291bcef4fc0d95d"
      },
      "downloads": -1,
      "filename": "chronological-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "64a6c7dd93dc9fa3da284af08be97a90",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 5060,
      "upload_time": "2021-01-15T22:28:26",
      "upload_time_iso_8601": "2021-01-15T22:28:26.418784Z",
      "url": "https://files.pythonhosted.org/packages/ad/25/bff5d471d2d88f3c0f5317eaeda933ab099e05f172953b7ad8a2e662e42f/chronological-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}