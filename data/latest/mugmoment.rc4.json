{
  "info": {
    "author": "Ave",
    "author_email": "ave@ave.zone",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# mugmoment\n\nmugmoment is a python3 library to download chat logs from twitch VODs.\n\nBy default, it exports in the default json format of twitch (referred to in this project as \"raw\"), but it can also export the chat to various other formats, such as a simpler json, txt and html.\n\n## Installation\n\n### PyPI\n\nThis package is available on PyPI as `mugmoment`.\n\n### Poetry\n\nThis project uses [poetry](https://python-poetry.org/), and the recommended way of installing it is running `poetry install` on the root of this repository, which will install it in a venv.\n\n## Usage\n\n### Get raw chat logs\n\n`mugmoment.fetch_raw(vod_id)` can be used to fetch raw VOD chat logs in the same format as twitch.\n\n```python\nimport mugmoment\n\nvod_id = 983321676\nchat_log = mugmoment.fetch_raw(vod_id)\nprint(chat_log[0])\n# {'_id': '36007596-db82-4f7e-8d24-f19fc75dd5c9', 'created_at': '2021-04-11T03:16:42.603Z', 'updated_at': '2021-04-11T03:16:42.603Z', 'channel_id': '28219022', 'content_type': 'video', 'content_id': '983321676', 'content_offset_seconds': 7.9030000000000005, 'commenter': {'display_name': 'Encode_NA', '_id': '156774711', 'name': 'encode_na', 'type': 'user', 'bio': \"I don't know much about them, but I'm sure twitch.tv is great.\", 'created_at': '2017-05-13T19:10:06.262184Z', 'updated_at': '2021-03-26T11:14:49.88742Z', 'logo': 'https://static-cdn.jtvnw.net/user-default-pictures-uv/294c98b5-e34d-42cd-a8f0-140b72fba9b0-profile_image-300x300.png'}, 'source': 'chat', 'state': 'published', 'message': {'body': ':( what a way to go', 'emoticons': [{'_id': '555555558', 'begin': 0, 'end': 1}], 'fragments': [{'text': ':(', 'emoticon': {'emoticon_id': '555555558', 'emoticon_set_id': ''}}, {'text': ' what a way to go'}], 'is_action': False, 'user_color': '#5F9EA0', 'user_notice_params': {}}}\n```\n\n### Get chat logs in other formats\n\n#### Simpler dictionary\n\n`mugmoment.fetch_simple(vod_id)` can be used to fetch VOD chat logs and convert them to a simpler format.\n\n```python\nimport mugmoment\n\nvod_id = 983321676\nchat_log = mugmoment.fetch_simple(vod_id)\nprint(chat_log[0])\n# {'author': 'Encode_NA', 'body': ':( what a way to go', 'offset': 7.9030000000000005, 'fancy_offset': '00:07'}\n```\n\n**Note:** `fancy_offset` has the format hh:mm:ss. If the vod is shorter than an hour, then it'll be displayed in mm:ss format instead.\n\n#### txt\n\n`mugmoment.fetch_txt(vod_id)` can be used to fetch VOD chat logs and convert them to a txt format.\n\n```python\nimport mugmoment\n\nvod_id = 983321676\nchat_log = mugmoment.fetch_txt(vod_id)\nprint(chat_log)\n# 00:07 <Encode_NA> :( what a way to go\\r\\n[...]\n```\n\n**Note:** Offset on each line has the format hh:mm:ss. If the vod is shorter than an hour, then it'll be displayed in mm:ss format instead.\n\n#### html\n\n`mugmoment.fetch_html(vod_id)` can be used to fetch VOD chat logs and convert them to an html format. This is a WIP feature and may be developed further in the future.\n\n```python\nimport mugmoment\n\nvod_id = 983321676\nchat_log = mugmoment.fetch_html(vod_id)\nprint(chat_log)\n# <span class=\"timeoffset\">00:07</span> <span class=\"author\" style=\"color: #5F9EA0\">Encode_NA</span>: <span class=\"message\"><img alt=\":(\" class=\"emote emote-555555558\" src=\"https://static-cdn.jtvnw.net/emoticons/v2/555555558/default/dark/1.0\" srcset=\"https://static-cdn.jtvnw.net/emoticons/v2/555555558/default/dark/1.0 1x,https://static-cdn.jtvnw.net/emoticons/v2/555555558/default/dark/2.0 2x,https://static-cdn.jtvnw.net/emoticons/v2/555555558/default/dark/3.0 4x\"> what a way to go</span><br>\\r\\n[...]\n```\n\nYou may also set the following arguments to render further parts of the chat:\n\n- `render_badges`: If set to true, badges will be rendered before the usernames. This involves 2 API calls to twitch.\n- `render_ext_emotes`: If set to true, third party emotes (BetterTTV, FrankerFaceZ) will be rendered. This involves 1 API call to twitch and 4 API calls to BetterTTV.\n\n**Note:** `timeoffset` has the format hh:mm:ss. If the vod is shorter than an hour, then it'll be displayed in mm:ss format instead.\n\n### Convert raw chat logs to other formats\n\nThe following converter functions are available:\n\n- `mugmoment.converters.ttv_raw_to_simple_format(raw_log)`\n- `mugmoment.converters.ttv_raw_to_txt(raw_log)`\n- `mugmoment.converters.ttv_raw_to_html(raw_log)`\n\nThese functions output same data as calling `mugmoment.fetch_formatname`.\n\n**Example:**\n\n```python\nimport mugmoment\n\nvod_id = 983321676\nraw_log = mugmoment.fetch_raw(vod_id)\nchat_log = mugmoment.converters.ttv_raw_to_simple_format(raw_log)\nprint(chat_log[0])\n# {'author': 'Encode_NA', 'body': ':( what a way to go', 'offset': 7.9030000000000005, 'fancy_offset': '00:07'}\n```\n\n### Get badges\n\n`mugmoment.fetch_badges_by_vod_id(vod_id)` and `mugmoment.fetch_badges_by_channel_login(channel_login)` can be used to fetch raw badge list in the same format as twitch.\n\n```python\nimport mugmoment\n\nvod_id = 983321676\nbadges = mugmoment.fetch_badges_by_vod_id(vod_id)\nprint(badges[0])\n# {'id': 'YW1iYXNzYWRvcjsxOw==', 'setID': 'ambassador', 'version': '1', 'title': 'Twitch Ambassador', 'image1x': 'https://static-cdn.jtvnw.net/badges/v1/2cbc339f-34f4-488a-ae51-efdf74f4e323/1', 'image2x': 'https://static-cdn.jtvnw.net/badges/v1/2cbc339f-34f4-488a-ae51-efdf74f4e323/2', 'image4x': 'https://static-cdn.jtvnw.net/badges/v1/2cbc339f-34f4-488a-ae51-efdf74f4e323/3', 'clickAction': 'VISIT_URL', 'clickURL': 'https://www.twitch.tv/team/ambassadors', '__typename': 'Badge'}\n\nchannel_login = \"vargskelethor\"\nbadges = mugmoment.fetch_badges_by_channel_login(channel_login)\nprint(badges[0])\n# {'id': 'YW1iYXNzYWRvcjsxOw==', 'setID': 'ambassador', 'version': '1', 'title': 'Twitch Ambassador', 'image1x': 'https://static-cdn.jtvnw.net/badges/v1/2cbc339f-34f4-488a-ae51-efdf74f4e323/1', 'image2x': 'https://static-cdn.jtvnw.net/badges/v1/2cbc339f-34f4-488a-ae51-efdf74f4e323/2', 'image4x': 'https://static-cdn.jtvnw.net/badges/v1/2cbc339f-34f4-488a-ae51-efdf74f4e323/3', 'clickAction': 'VISIT_URL', 'clickURL': 'https://www.twitch.tv/team/ambassadors', '__typename': 'Badge'}\n```\n\n### Get third party (BetterTTV and FrankerFaceZ) emotes\n\n`mugmoment.fetch_third_party_emotes_by_channel_id(channel_id)` and `mugmoment.fetch_third_party_emotes_by_vod_id(vod_id)` can be used to fetch a dictionary of all BetterTTV and FrankerFaceZ emotes that can be used in this channel (this includes shared emotes and globals).\n\n```python\nimport mugmoment\n\nchannel_id = 28219022\nemotes = mugmoment.fetch_third_party_emotes_by_channel_id(channel_id)\nprint(emotes[\"vargD\"])\n# {'id': '6078c1f239b5010444d0008f', 'alt': 'vargD | BTTV channel emote', 'src': 'https://cdn.betterttv.net/emote/6078c1f239b5010444d0008f/1x', 'srcset': 'https://cdn.betterttv.net/emote/6078c1f239b5010444d0008f/1x 1x,https://cdn.betterttv.net/emote/6078c1f239b5010444d0008f/2x 2x,https://cdn.betterttv.net/emote/6078c1f239b5010444d0008f/3x 4x', 'global': False, 'source': 'bttv'}\n\nvod_id = 983321676\nemotes = mugmoment.fetch_third_party_emotes_by_vod_id(vod_id)\nprint(emotes[\"ALERTA\"])\n# {'id': '604447c0306b602acc59852a', 'alt': 'ALERTA | BTTV channel emote from Rakyz', 'src': 'https://cdn.betterttv.net/emote/604447c0306b602acc59852a/1x', 'srcset': 'https://cdn.betterttv.net/emote/604447c0306b602acc59852a/1x 1x,https://cdn.betterttv.net/emote/604447c0306b602acc59852a/2x 2x,https://cdn.betterttv.net/emote/604447c0306b602acc59852a/3x 4x', 'global': False, 'source': 'bttv'}\n```\n\n## Shoutouts\n\n- [RechatTool](https://github.com/jdpurcell/RechatTool)'s codebase helped with figuring out how to do pagination in the API.\n- [BetterTTV](https://github.com/night/betterttv)'s API is used heavily for emotes, and emote matching is based on that codebase.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/a/mugmoment",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mugmoment",
    "package_url": "https://pypi.org/project/mugmoment/",
    "platform": "",
    "project_url": "https://pypi.org/project/mugmoment/",
    "project_urls": {
      "Homepage": "https://gitlab.com/a/mugmoment",
      "Repository": "https://gitlab.com/a/mugmoment"
    },
    "release_url": "https://pypi.org/project/mugmoment/0.2.2/",
    "requires_dist": [
      "httpx (>=0.17.1,<0.18.0)"
    ],
    "requires_python": ">=3.6,<4.0",
    "summary": "Library to download chat logs from twitch VODs",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10493306,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9793363d2db0b605d345ab7c41c25dc307bf6f96ca2f1cb0b2d00fa36e497566",
          "md5": "fd589d4baf5588a66bdd53b939aa8a51",
          "sha256": "41a70e10cbf81f997c2643103455fade30d3aa11d189eefcc69ff94b560573c3"
        },
        "downloads": -1,
        "filename": "mugmoment-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd589d4baf5588a66bdd53b939aa8a51",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 2908,
        "upload_time": "2021-04-21T02:48:04",
        "upload_time_iso_8601": "2021-04-21T02:48:04.992214Z",
        "url": "https://files.pythonhosted.org/packages/97/93/363d2db0b605d345ab7c41c25dc307bf6f96ca2f1cb0b2d00fa36e497566/mugmoment-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd92f5e06e48aaaeb647fae39eaf6ecbc288c6ff8d82c46ff3c4e8e3778a6203",
          "md5": "d75afa6de9ff24cd64039786fc47dd16",
          "sha256": "5eb613ded07059368fe1ba3e607eca166a7b493213375ead2c6ed4cc62b9ec20"
        },
        "downloads": -1,
        "filename": "mugmoment-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d75afa6de9ff24cd64039786fc47dd16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 2642,
        "upload_time": "2021-04-21T02:48:06",
        "upload_time_iso_8601": "2021-04-21T02:48:06.323314Z",
        "url": "https://files.pythonhosted.org/packages/dd/92/f5e06e48aaaeb647fae39eaf6ecbc288c6ff8d82c46ff3c4e8e3778a6203/mugmoment-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ae4e34029bf2acba4107a5cef6feac566339315b4c86ae2c99703feae3d083b",
          "md5": "558cedfdc042dbdf7ad96db5fab375dc",
          "sha256": "3a6cc8a98294e808080ef02e19520a054b27bfb0eed578ccad36f9145326bea5"
        },
        "downloads": -1,
        "filename": "mugmoment-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "558cedfdc042dbdf7ad96db5fab375dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 7812,
        "upload_time": "2021-05-18T09:30:25",
        "upload_time_iso_8601": "2021-05-18T09:30:25.574390Z",
        "url": "https://files.pythonhosted.org/packages/4a/e4/e34029bf2acba4107a5cef6feac566339315b4c86ae2c99703feae3d083b/mugmoment-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7413a433c338ea181f506b77178d064748987ce6de3762c92e86ec720f197cb",
          "md5": "68658fed17113e955ae49c0945c1948d",
          "sha256": "6d1e92bc98b9076204b529beff423998e9ece2bccc14a5866314594087c98cf4"
        },
        "downloads": -1,
        "filename": "mugmoment-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "68658fed17113e955ae49c0945c1948d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 8295,
        "upload_time": "2021-05-18T09:30:26",
        "upload_time_iso_8601": "2021-05-18T09:30:26.611311Z",
        "url": "https://files.pythonhosted.org/packages/c7/41/3a433c338ea181f506b77178d064748987ce6de3762c92e86ec720f197cb/mugmoment-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfa8570a9b5fdc620f850659c1c2101bd6e121c2d8dadb9ea359da5d976c15ff",
          "md5": "25da1068ad034a9760dbbec1378f1f8d",
          "sha256": "41be4bc6311bb181df7a03860c3c3784c8aa4b0a5e4587b95bf30b49ba7e9008"
        },
        "downloads": -1,
        "filename": "mugmoment-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25da1068ad034a9760dbbec1378f1f8d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 8151,
        "upload_time": "2021-05-27T16:47:20",
        "upload_time_iso_8601": "2021-05-27T16:47:20.696237Z",
        "url": "https://files.pythonhosted.org/packages/cf/a8/570a9b5fdc620f850659c1c2101bd6e121c2d8dadb9ea359da5d976c15ff/mugmoment-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eff8b76f70965baafce3db1dbb2237d2e9901dcda2cf9847e981756e620574ad",
          "md5": "1aa8aa40ae44c357fabf9a24c41c0e9c",
          "sha256": "15566ab6991fb2f674806a83979426b0d454701642b7bf069ee1fa7372620ae5"
        },
        "downloads": -1,
        "filename": "mugmoment-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1aa8aa40ae44c357fabf9a24c41c0e9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 9642,
        "upload_time": "2021-05-27T16:47:21",
        "upload_time_iso_8601": "2021-05-27T16:47:21.882104Z",
        "url": "https://files.pythonhosted.org/packages/ef/f8/b76f70965baafce3db1dbb2237d2e9901dcda2cf9847e981756e620574ad/mugmoment-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd117a84ed2d409b15701049f4879f5704f68f70bb66d8f955d792f500c0df1d",
          "md5": "e7ae3fbe73bbf524eab15020b2bd4d7b",
          "sha256": "3d147b07327cf1422061d7f7198bcfc450e2ca4199ad394742f8fe852262623a"
        },
        "downloads": -1,
        "filename": "mugmoment-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7ae3fbe73bbf524eab15020b2bd4d7b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 8187,
        "upload_time": "2021-05-27T21:53:24",
        "upload_time_iso_8601": "2021-05-27T21:53:24.038489Z",
        "url": "https://files.pythonhosted.org/packages/fd/11/7a84ed2d409b15701049f4879f5704f68f70bb66d8f955d792f500c0df1d/mugmoment-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a6e7ab0eb80f3b80111853fc7cc0ae8959eb9048152b28ec062e04d893aeeac",
          "md5": "684631b4652a18dbec113b9e707ca80a",
          "sha256": "105f999fd7627711f4340179708c02247160f89864f563e98932f5629f565486"
        },
        "downloads": -1,
        "filename": "mugmoment-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "684631b4652a18dbec113b9e707ca80a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 9688,
        "upload_time": "2021-05-27T21:53:25",
        "upload_time_iso_8601": "2021-05-27T21:53:25.274843Z",
        "url": "https://files.pythonhosted.org/packages/5a/6e/7ab0eb80f3b80111853fc7cc0ae8959eb9048152b28ec062e04d893aeeac/mugmoment-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd117a84ed2d409b15701049f4879f5704f68f70bb66d8f955d792f500c0df1d",
        "md5": "e7ae3fbe73bbf524eab15020b2bd4d7b",
        "sha256": "3d147b07327cf1422061d7f7198bcfc450e2ca4199ad394742f8fe852262623a"
      },
      "downloads": -1,
      "filename": "mugmoment-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e7ae3fbe73bbf524eab15020b2bd4d7b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 8187,
      "upload_time": "2021-05-27T21:53:24",
      "upload_time_iso_8601": "2021-05-27T21:53:24.038489Z",
      "url": "https://files.pythonhosted.org/packages/fd/11/7a84ed2d409b15701049f4879f5704f68f70bb66d8f955d792f500c0df1d/mugmoment-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a6e7ab0eb80f3b80111853fc7cc0ae8959eb9048152b28ec062e04d893aeeac",
        "md5": "684631b4652a18dbec113b9e707ca80a",
        "sha256": "105f999fd7627711f4340179708c02247160f89864f563e98932f5629f565486"
      },
      "downloads": -1,
      "filename": "mugmoment-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "684631b4652a18dbec113b9e707ca80a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 9688,
      "upload_time": "2021-05-27T21:53:25",
      "upload_time_iso_8601": "2021-05-27T21:53:25.274843Z",
      "url": "https://files.pythonhosted.org/packages/5a/6e/7ab0eb80f3b80111853fc7cc0ae8959eb9048152b28ec062e04d893aeeac/mugmoment-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}