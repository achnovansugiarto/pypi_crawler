{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# synthetic-data\nInspired by `sklearn.datasets.make_classification`, which in turn is based on work for the NIPS 2003 feature selection challenge [1] - targeting linear classifiers.  Here the focus is on generating more complex, nonlinear datasets appropriate for use with deep learning/black box models which 'need' nonlinearity - otherwise you would/should use a simpler model.\n\n\n### Approach\nIdeally, the method would provide a concise specification to generate tabular data with sensible defaults.  The specification should provide `knobs` that the end user can dial up or down to see it's downstream impact.\n\nCopulas are a model for specifying\nthe joint probability p(x1, x2, ..., xn) given a correlation structure along\nwith specifications for the marginal distribution of each feature. The current implementation uses a multivariate normal distribution with specified covariance matrix.  Future work can expand this choice to other multivariate distributions. \n\n\n### Parameters  \n| name          | type       | default        | description                                                                                                                      |\n| ------------- | ---------- | -------------- | -------------------------------------------------------------------------------------------------------------------------------- |\n| n_samples     | int        | (default=100)  | The number of samples.                                                                                                           |\n| n_informative | int        | (default=2)    | The number of informative features - these should all be represented in the symbolic expression used to generate y_reg           |\n| n_nuisance    | int        | (default=0)    | The number of nuisance features - these *should not* be included in the symbolic expression - and hence have no role in the DGP. |\n| n_clases      | int        | (default=2)    | the number of classes                                                                                                            |\n| dist          | list       |                | a list of the marginal distributions to apply to the features/columns                                                            |\n| cov           | matrix     |                | a square numpy array with dimensions (??? x ???) - should be n_total where n_total=n_informative + n_nuisance                    |\n| expr          | str |                | an expression providing y = f(X)                                                                                                 |\n| sig_k         | float      | (default=1.0)  | the steepness of the sigmoid used in mapping y_reg to y_prob                                                                     |\n| sig_x0        | float      | (default=None) | the center point of the sigmoid used in mappying y_reg to y_prob                                                                 |\n| p_thresh      | float      | (default=0.5)  | threshold probability that determines boundary between classes                                                                   |\n| noise_level_x | float      | (default=0.0)  | level of Gaussian white noise to apply to X                                                                                      |\n| noise_level_y | float      | (default=0.0)  | level of Gaussian white noise to apply to y_label (like `flip_y`)                                                                |\n\n\n## Getting Started\n\n### Local Installation\n```\npython3 -m venv .venv\nsource .venv/bin/activate\npip install -r requirements.txt\npip install -e .\n```\n\n### Tests\n\nTest/Lint Dependencies\n\n```bash\n$ pip install pandas pytest pytest-cov flake8\n```\n\nTo run tests:\n```bash\n$ make test_local\n```\n\n### Referencing this library\nIf you use this library in your work, please cite our paper:  \n```\n@inproceedings{barr:2020,\n  author    = {Brian Barr and Ke Xu and Claudio Silva and Enrico Bertini and Robert Reilly and  C. Bayan Bruss and Jason D. Wittenbach},\n  title     = {{Towards Ground Truth Explainability on Tabular Data}},\n  year      = {2020},\n  maintitle = {International Conference on Machine Learning},\n  booktitle = {2020 ICML Workshop on Human Interpretability in Machine Learning (WHI 2020)},\n  date = {2020-07-17},\n  pages = {362-367},\n}                             \n```\n\n### Notes\nIf you have tabular data, and want to fit a copula from it, consider this python library:  [copulas](https://sdv-dev.github.io/Copulas/index.html)  \nQuick [visual tutorial](https://twiecki.io/blog/2018/05/03/copulas/) of copulas and probability integral transform.\n\nTo run the examples, you should run:\n```bash\n$ python -m pip install pandas pytest pytest-cov seaborn shap tensorflow \"DataProfiler[full]\"\n```\n\n### References\n[1] Guyon, “Design of experiments for the NIPS 2003 variable selection benchmark”, 2003.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/capitalone/synthetic-data",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "Brian Barr",
    "maintainer_email": "brian.barr@capitalone.com",
    "name": "synthetic-data",
    "package_url": "https://pypi.org/project/synthetic-data/",
    "platform": null,
    "project_url": "https://pypi.org/project/synthetic-data/",
    "project_urls": {
      "Homepage": "https://github.com/capitalone/synthetic-data"
    },
    "release_url": "https://pypi.org/project/synthetic-data/1.1.0/",
    "requires_dist": [
      "numpy (>=1.22.0rc1)",
      "scikit-learn (==1.0.2)",
      "scipy (==1.8.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Generates complex, nonlinear datasets for use         with deep learning/black box models",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14204104,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96a3ce10cd7f26527d75488272ddca1ad1ddecf0bbbd7bff8b2eeb62b738814f",
          "md5": "d6eabba070590835349c4bea70b8b50f",
          "sha256": "254463c61ab19daad29b0401f9961fc9fa3192562c768f9957f159e464c883e1"
        },
        "downloads": -1,
        "filename": "synthetic_data-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d6eabba070590835349c4bea70b8b50f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12538,
        "upload_time": "2021-02-26T19:19:52",
        "upload_time_iso_8601": "2021-02-26T19:19:52.028860Z",
        "url": "https://files.pythonhosted.org/packages/96/a3/ce10cd7f26527d75488272ddca1ad1ddecf0bbbd7bff8b2eeb62b738814f/synthetic_data-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0c901a577a914f4b3dacd220c9de68b9739b5dd9d5eb0c5fe0e10bbd3e22810",
          "md5": "a97a14df9ad77b65b49c0c5e203f3d79",
          "sha256": "efa717bb94a9400b3b5686448d2bedbd5392b518679091f2914cdcf50efd7c76"
        },
        "downloads": -1,
        "filename": "synthetic-data-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a97a14df9ad77b65b49c0c5e203f3d79",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10835,
        "upload_time": "2021-02-26T19:19:53",
        "upload_time_iso_8601": "2021-02-26T19:19:53.312556Z",
        "url": "https://files.pythonhosted.org/packages/a0/c9/01a577a914f4b3dacd220c9de68b9739b5dd9d5eb0c5fe0e10bbd3e22810/synthetic-data-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14574df36aa7770ec140c154060884e7ef3c77492923471b8af78770da4317db",
          "md5": "aaab6e67b87d433832f530147b998b27",
          "sha256": "ae88a7ca1030308113e74a53c9bc13f34b2947d26bfb9752544c6d016bc6e122"
        },
        "downloads": -1,
        "filename": "synthetic_data-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aaab6e67b87d433832f530147b998b27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13739,
        "upload_time": "2022-05-06T17:52:52",
        "upload_time_iso_8601": "2022-05-06T17:52:52.524042Z",
        "url": "https://files.pythonhosted.org/packages/14/57/4df36aa7770ec140c154060884e7ef3c77492923471b8af78770da4317db/synthetic_data-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a394567ec200cd76d898f7f6f149fdeefc23aa31dd93723574db4b19f4c8582",
          "md5": "cebe1a56803dd190d0a1cc48b31ee527",
          "sha256": "02876690e9a30f877b9eaa884f25ad6a5ff0b9fc701502e778452e0b973642dd"
        },
        "downloads": -1,
        "filename": "synthetic-data-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cebe1a56803dd190d0a1cc48b31ee527",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14437,
        "upload_time": "2022-05-06T17:52:53",
        "upload_time_iso_8601": "2022-05-06T17:52:53.925942Z",
        "url": "https://files.pythonhosted.org/packages/3a/39/4567ec200cd76d898f7f6f149fdeefc23aa31dd93723574db4b19f4c8582/synthetic-data-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "14574df36aa7770ec140c154060884e7ef3c77492923471b8af78770da4317db",
        "md5": "aaab6e67b87d433832f530147b998b27",
        "sha256": "ae88a7ca1030308113e74a53c9bc13f34b2947d26bfb9752544c6d016bc6e122"
      },
      "downloads": -1,
      "filename": "synthetic_data-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aaab6e67b87d433832f530147b998b27",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13739,
      "upload_time": "2022-05-06T17:52:52",
      "upload_time_iso_8601": "2022-05-06T17:52:52.524042Z",
      "url": "https://files.pythonhosted.org/packages/14/57/4df36aa7770ec140c154060884e7ef3c77492923471b8af78770da4317db/synthetic_data-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a394567ec200cd76d898f7f6f149fdeefc23aa31dd93723574db4b19f4c8582",
        "md5": "cebe1a56803dd190d0a1cc48b31ee527",
        "sha256": "02876690e9a30f877b9eaa884f25ad6a5ff0b9fc701502e778452e0b973642dd"
      },
      "downloads": -1,
      "filename": "synthetic-data-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cebe1a56803dd190d0a1cc48b31ee527",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14437,
      "upload_time": "2022-05-06T17:52:53",
      "upload_time_iso_8601": "2022-05-06T17:52:53.925942Z",
      "url": "https://files.pythonhosted.org/packages/3a/39/4567ec200cd76d898f7f6f149fdeefc23aa31dd93723574db4b19f4c8582/synthetic-data-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}