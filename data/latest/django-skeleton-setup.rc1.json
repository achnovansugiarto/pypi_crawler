{
  "info": {
    "author": "Bhagwan Thapa",
    "author_email": "bhagwanthapawork@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "=================\nSKELETON SETUPS\n=================\n\nA simple application to quickly setup settings files without too\nmuch hassle.\n\nInstallation\n-------------\n    ``pip install django-skeleton-setup``\n\n\nConfigure Settings and Environment Files\n-----------------------------------------\n\n1. Add \"skeleton_setup\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'skeleton_setup',\n    ]\n\n\n2. If your application settings uses default WSGI_APPLICATION move to step 4 else to step 3\n\n\n3. Set following variable to settings.py.\n\n    ``SKELETON_SITE_ROOT = Path(__file__).resolve().parent``\n\n\n4. Run ``python manage.py skeleton_setup`` to create copy following files:\n\n   * settings_common.py\n   * settings_local.py\n   * settings_production.py\n   * env_local.env\n\n\n5. Add following line to end of settings.py file\n\n    ``from .settings_common import *``\n\n\n6. Database setup is based on postgres, if other database is used then to avoid runserver error\n\n    ``change DATABASES dict as required``\n\n\n7. Change the following env file for local development\n\n    ``env_local.env``\n\n\n7. Edit env files or settings files as per your requirements\n\n\nCreating a new app provided by skeleton setup\n----------------------------------------------\n\n1. Minimal command similar to startapp of django-admin\n\n    ``python manage.py skeleton_startapp app_name to_path``\n\n\n2. Parameter \"app_name\" is required\n\n\n3. Parameter \"to_path\" is optional and is path string value relative to BASE_DIR where\n   you want to create the app\n\n4. App with following structure will be created::\n\n    ├── api\n    │   ├── __init__.py\n    │   ├── urls.py\n    │   └── views.py\n    ├── migrations\n    │   └── __init__.py\n    ├── serializers\n    │   └── __init__.py\n    ├── services\n    │   └── __init__.py\n    ├── templates\n    ├── tests\n    │   └── __init__.py\n    ├── __init__.py\n    ├── admin.py\n    ├── apps.py\n    ├── forms.py\n    ├── model_managers.py\n    ├── models.py\n    ├── signals.py\n    └── urls.py\n    └── utils.py\n    └── views.py\n\n\nDon't like app structure provided by this?\n--------------------------------------------\n\n1. No problem you can create your own app structure and use this command\n\n2. Create a template structure for your application.\n   Use `\"*.py-tpl\"` instead of ``\"*.py\"`` files.\n\n3. Example template::\n\n    ├── api\n    │   ├── __init__.py-tpl\n    │   ├── urls.py\n    │   └── views.py\n    ├── migrations\n    │   └── __init__.py-tpl\n    ├── tests\n    │   └── __init__.py-tpl\n    ├── utils\n    │   └── __init__.py-tpl\n    ├── static\n    │   └── assets\n    │   └── js\n    │   └── css\n    ├── templates\n    ├── admin.py-tpl\n    ├── apps.py-tpl\n    ├── models.py-tpl\n    └── urls.py-tpl\n    └── views.py-tpl\n\n\n4. Add following variable to settings.py\n\n    ``SKELETON_STARTAPP_SOURCE=\"path/to/your/template/\"``\n\n\n5. Now run the command\n\n    ``python manage.py skeleton_startapp app_name to_path``\n\n6. If you still want to have finer control over the app creation. Extend the following class:\n\n    skeleton_startapp.Command\n\n\n\n\nCreating a user app\n----------------------\n\nDEPENDENCIES: djangorestframework\n\nCreates an app for handling users.\n\n1. Command similar to startapp of django-admin\n\n    ``python manage.py skeleton_startuserapp app_name to_path``\n\n2. The command prompts for::\n\n    UserModel [Suggestion: UpperCamelCase]\n\n    db_table [Suggestion: snake_case] [Optional]\n\n3. An app is created with given app_name\n\n3. Modify the app as required\n\n4. Add it to INSTALLED_APPS in settings.py\n\n5. Make migrations and migrate",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bhuwantm/django-skeleton-setup",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-skeleton-setup",
    "package_url": "https://pypi.org/project/django-skeleton-setup/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-skeleton-setup/",
    "project_urls": {
      "Homepage": "https://github.com/bhuwantm/django-skeleton-setup"
    },
    "release_url": "https://pypi.org/project/django-skeleton-setup/0.0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Skeleton setup to simplify setting up django project.",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9476851,
  "releases": {
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a278518435af74e0190daa5f8759ec8f295ec691eb4e496e876efbee1bf60fb",
          "md5": "bec516a2fb2d120710bfc3507db1f59b",
          "sha256": "1eeacf4c87b36d416be6b247fd64649de89749609aa182d4a1e995169b3fdb8a"
        },
        "downloads": -1,
        "filename": "django-skeleton-setup-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "bec516a2fb2d120710bfc3507db1f59b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14720,
        "upload_time": "2021-02-20T18:12:04",
        "upload_time_iso_8601": "2021-02-20T18:12:04.928285Z",
        "url": "https://files.pythonhosted.org/packages/7a/27/8518435af74e0190daa5f8759ec8f295ec691eb4e496e876efbee1bf60fb/django-skeleton-setup-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a278518435af74e0190daa5f8759ec8f295ec691eb4e496e876efbee1bf60fb",
        "md5": "bec516a2fb2d120710bfc3507db1f59b",
        "sha256": "1eeacf4c87b36d416be6b247fd64649de89749609aa182d4a1e995169b3fdb8a"
      },
      "downloads": -1,
      "filename": "django-skeleton-setup-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "bec516a2fb2d120710bfc3507db1f59b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14720,
      "upload_time": "2021-02-20T18:12:04",
      "upload_time_iso_8601": "2021-02-20T18:12:04.928285Z",
      "url": "https://files.pythonhosted.org/packages/7a/27/8518435af74e0190daa5f8759ec8f295ec691eb4e496e876efbee1bf60fb/django-skeleton-setup-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}