{
  "info": {
    "author": "Volodymyr Borysiuk",
    "author_email": "thorvaldr.hrafn@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# thzabbix\n\nLibrary for work with zabbix api.\n\nSupport Zabbix 6.0.x\n\nContains two classes - ZabbReq and HTTPtest. First do different kind of tasks in Zabbix api, second has target only Zabbix web tests.\n\n1. [ZabbReq](#zabbreq)\n2. [HTTPtest](#httptest)\n\n### ZabbReq\n\n`ZabbReq.req_post(req_data)` - simpliest function for send requests to zabbix server, where `req_data` is dictionary in zabbix api format. All information about it you can find in api documentation.\n\nFor example, print list of host' interfaces list data:\n\n```\nfrom thzabbix import ZabbReq\n\nhost_ip = \"XXX.XXX.XXX.XXX\"\nzabb_user = \"apiuser\"\nzabb_passwd = \"secret\"\nzabb_url = \"https://zabbix.example.com/api_jsonrpc.php\"\n\nzabb_creds = dict(user=zabb_user, passwd=zabb_passwd, url=zabb_url)\nZabbReq = ZabbReq(zabb_creds)\n\nprint(ZabbReq.req_post(dict(params=dict(filter=dict(ip=host_ip)), method=\"hostinterface.get\"))[\"result\"])\n```\n\n`ZabbReq.hostidbyip(host_ip)` - get host id by external interface ip address. `host_ip` is string variable\n\n`ZabbReq.hostipbyid(host_id)` - get external interface ip address by host id. `host_id` is string variable\n\n`ZabbReq.host_tmplt_list(host_id)` - get templates list (as template id), linked to host id. `host_id` is string variable\n\n`ZabbReq.host_tmplt_upd(hostid, tmplt_lst)` - update templates (as template id), linked to host id. `host_id` is string variable, `tmplt_lst` is list of templates id.\n\n`ZabbReq.host_tmplt_add(hostid, tmplt_id)` - add template, linked to host id. `host_id` is string variable, `tmplt_id` is string variable, template id.\n\n`ZabbReq.host_tmplt_del(hostid, tmplt_id)` - remove template, linked to host id. `host_id` is string variable, `tmplt_id` is string variable, template id.\n\n`ZabbReq.addhost(hcreatedata)` - create host. `hcreatedata` is dict of parameters for new host. \n\nFor example:\n\n```\nfrom thzabbix import ZabbReq\n\nzabb_user = \"apiuser\" # zabbix username, string\nzabb_passwd = \"secret\" # zabbix user password, string\nzabb_url = \"https://zabbix.example.com/api_jsonrpc.php\" # url of zabbix api\n\nzabb_creds = dict(user=zabb_user, passwd=zabb_passwd, url=zabb_url)\nZabbReq = ZabbReq(zabb_creds)\n\nhostname = \"Example host\"\ntls_accept =  \"2\" # enable tls (for disable set this variable and tls_connect to \"1\")\ntls_connect = \"2\" # set psk encription\ntls_psk_identity = PSK KEY NAME\ntls_psk = 123124324rwefdsfgdfsgsdfg546t42 #some psk key\nhost_ip = \"XXX.XXX.XXX.XXX\"\n\ngroup_id = XXXXXX # group id for host\ntemplate_id = YYYYYY # template id linked to host\n\n# groups and templates can be set as list of dictionary to add host in many groups or/and lynk many templates. 'templates' is optional parameter, osers is required\n\nhostcreate = dict(host=hostname, \n    tls_connect=tlsconnect, \n    tls_accept=tlsaccept, \n    tls_psk_identity=psk_identity, \n    tls_psk=psk_key, \n    interfaces=[dict(type=1, main=1, useip=1, ip=host_ip, dns=\"\", port=host_port)], \n    groups=[dict(groupid=group_id)], \n    templates=[dict(templateid=template_id)])\n```\n\n`ZabbReq.hostslist()` - print hosts list with extended data. \n\n`ZabbReq.hostsidlist()` - print hosts id list. \n\n`ZabbReq.hostdata(hostid)` - print host data. \n\n### HTTPtest\n\n`HTTPtest.httptestdel(del_testid)` - delete test by id\n\n`HTTPtest.httptestadd(add_params)` - add new http test\n\nFor example:\n\n```\nfrom thzabbix import HTTPtest\n\nzabb_user = \"apiuser\" # zabbix username, string\nzabb_passwd = \"secret\" # zabbix user password, string\nzabb_url = \"https://zabbix.example.com/api_jsonrpc.php\" # url of zabbix api\n\nzabb_creds = dict(user=zabb_user, passwd=zabb_passwd, url=zabb_url)\nHTTPtest = HTTPtest(zabb_creds)\n\ntest_host = \"XXX.XXX.XXX.XXX\" # host ip in zabbix\ntest_dom = \"example.com\" # name of http test\nsteps_list = list(dict(name=\"example.com\", url=\"https://example.com/\", status_codes=\"200\", no=1)) # data for one step check with default parameters\n\nprint(HTTPtest.httptestadd(dict(host_ip=test_host, name=test_dom, steps=steps_list)))\n```\n\n`HTTPtest.httptestupd(upd_params)` - update existence http test. `upd_params` is similar to `add_params` in `HTTPtest.httptestadd()`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thorvaldhrafn/thzabbix",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "thzabbix",
    "package_url": "https://pypi.org/project/thzabbix/",
    "platform": null,
    "project_url": "https://pypi.org/project/thzabbix/",
    "project_urls": {
      "Homepage": "https://github.com/thorvaldhrafn/thzabbix"
    },
    "release_url": "https://pypi.org/project/thzabbix/0.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Package for work with zabbix api",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15977942,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1989a1523ef7d6387cc4f6cfb6e705a27b61daf547df5c326d2de716bd81b830",
          "md5": "0a272878093d9f7fcccfac0ebfdb28c6",
          "sha256": "ba0a868771d14c33c984dd2315aeff288baeb7d6fab7770cd2c3ec548042b93b"
        },
        "downloads": -1,
        "filename": "thzabbix-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0a272878093d9f7fcccfac0ebfdb28c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5009,
        "upload_time": "2022-11-03T10:31:12",
        "upload_time_iso_8601": "2022-11-03T10:31:12.388526Z",
        "url": "https://files.pythonhosted.org/packages/19/89/a1523ef7d6387cc4f6cfb6e705a27b61daf547df5c326d2de716bd81b830/thzabbix-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd04a3f354f115a70dcd9123fc3b093c3c3b6f87ad5ee50fe82fb3a302938118",
          "md5": "82eb09b0c03e0d0e77b36a8ffc3b34d5",
          "sha256": "8ce17340f49a586b13d218ca8cbb760715434825e0b3ecbe830621146c7c0fed"
        },
        "downloads": -1,
        "filename": "thzabbix-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "82eb09b0c03e0d0e77b36a8ffc3b34d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5026,
        "upload_time": "2022-11-04T08:22:53",
        "upload_time_iso_8601": "2022-11-04T08:22:53.317228Z",
        "url": "https://files.pythonhosted.org/packages/cd/04/a3f354f115a70dcd9123fc3b093c3c3b6f87ad5ee50fe82fb3a302938118/thzabbix-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77efafedcccce8000937b1482067e38d93b4c0a6df187199c644d49f783cf638",
          "md5": "c2e6081ceb5c9afe00633cf1613ad77d",
          "sha256": "125345a92831ae6188318025122e8f28ae9995014a36d7b0dce9f52702c24090"
        },
        "downloads": -1,
        "filename": "thzabbix-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c2e6081ceb5c9afe00633cf1613ad77d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5142,
        "upload_time": "2022-11-05T10:53:30",
        "upload_time_iso_8601": "2022-11-05T10:53:30.854597Z",
        "url": "https://files.pythonhosted.org/packages/77/ef/afedcccce8000937b1482067e38d93b4c0a6df187199c644d49f783cf638/thzabbix-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbf65cc4f587f3c916746b463db22408b11f9dbec3311442611bd29967c9ef0c",
          "md5": "d98a09980190a15ad4c3e509a59e1c53",
          "sha256": "ecdabc8538b13e88b2311bcdb6a6d557fa74ccd7a8a298bf472da69562e15b10"
        },
        "downloads": -1,
        "filename": "thzabbix-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d98a09980190a15ad4c3e509a59e1c53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5891,
        "upload_time": "2022-12-03T10:56:01",
        "upload_time_iso_8601": "2022-12-03T10:56:01.371280Z",
        "url": "https://files.pythonhosted.org/packages/bb/f6/5cc4f587f3c916746b463db22408b11f9dbec3311442611bd29967c9ef0c/thzabbix-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bbf65cc4f587f3c916746b463db22408b11f9dbec3311442611bd29967c9ef0c",
        "md5": "d98a09980190a15ad4c3e509a59e1c53",
        "sha256": "ecdabc8538b13e88b2311bcdb6a6d557fa74ccd7a8a298bf472da69562e15b10"
      },
      "downloads": -1,
      "filename": "thzabbix-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d98a09980190a15ad4c3e509a59e1c53",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5891,
      "upload_time": "2022-12-03T10:56:01",
      "upload_time_iso_8601": "2022-12-03T10:56:01.371280Z",
      "url": "https://files.pythonhosted.org/packages/bb/f6/5cc4f587f3c916746b463db22408b11f9dbec3311442611bd29967c9ef0c/thzabbix-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}