{
  "info": {
    "author": "Matthew Knight James",
    "author_email": "mattkjames7@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pyomnidata\nPython tool for downloading, converting and reading OMNI solar wind data.\n\nIf you make use of the OMNI data please acknowledge and cite as specified here: https://omniweb.gsfc.nasa.gov/html/citing.html\n\n## Installation\n\nSimply install using `pip3`:\n\n```bash\npip3 install pyomnidata --user\n```\n\nAlternatively install from this repository:\n\n```bash\ngit clone https://github.com/mattkjames7/pyomnidata\ncd pyomnidata\n\n#EITHER build a wheel and install with pip (better)\npython3 setup.py bdist_wheel\npip3 install dist/pyomnidata-1.0.0-py3-none-any.whl --user\n\n#OR directly using setup py (should work, not tested though)\npython3 setup.py install --user\n```\n\nFor this to work properly - you will need to set up the `$OMNIDATA_PATH` environment variable to point to a folder where you want to store the data. Do this by adding something along the lines of the following to the bottom of your `~/.bashrc` file:\n\n```bash\nexport OMNIDATA_PATH=/path/to/omni/data\n```\n\n\n\n## Usage\n\n### Downloading Data\n\nDownload OMNI data like this:\n\n```python\nimport pyomnidata\n\n#download all available data\npyomnidata.UpdateLocalData()\n```\n\nDownload F10.7 index (solar flux at 10.7 cm):\n\n```python\npyomnidata.UpdateSolarFlux(EndDate=2021024)\n```\n\nwhere `EndDate` is the last date which you want to request solar flux data for. This should be set to something at least a few days prior to the current date, if you request a date which currently has no available data then the download will fail.\n\n### Read Data\n\nGet the OMNI parameters like so:\n\n```python\n####OMNI parameters####\n#Year can either be a single year:\nYear = 2001\n#or it can be a range:\nYear = [2001,2004]\n\n#5 minute resolution data\ndata = pyomnidata.GetOMNI(Year,Res=5)\n\n#1 minute data\ndata = pyomnidata.GetOMNI(Year,Res=1)\n\n####solar flux###\n#all of the data\ndata = pyomnidata.GetSolarFlux()\n\n#a single date\ndata = pyomnidata.GetSolarFlux(Date=20050101)\n\n#a range of dates\ndata = pyomnidata.GetSolarFlux(Date=[20020101,20020103])\n```\n\nThe returned `data` object is a `numpy.recarray` object which contains all of the OMNI data requested. To see what fields are stored use `print(data.dtype.names)`. The units are as presented here: https://omniweb.gsfc.nasa.gov/html/omni_min_data.html#4b\n\n### Plot Data\n\nUse the `PlotOMNI` function, e.g.:\n\n```python\nimport matplotlib.pyplot as plt\n\n#create a figure\nplt.figure(figsize=(11,6))\n\n#plot some stuff in one panel\nax0 = pyomnidata.PlotOMNI(['SymH','SymD'],[20010101,20010120],fig=plt,maps=[2,1,0,0])\n\n#and a second panel\nax1 = pyomnidata.PlotOMNI(['FlowSpeed'],[20010101,20010120],fig=plt,maps=[2,1,1,0])\n\n#fit things a bit nicer\nplt.tight_layout()\n```\n\nWhich should produce something like the following:\n\n![omniexample.png](omniexample.png)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mattkjames7/pyomnidata",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyomnidata",
    "package_url": "https://pypi.org/project/pyomnidata/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyomnidata/",
    "project_urls": {
      "Homepage": "https://github.com/mattkjames7/pyomnidata"
    },
    "release_url": "https://pypi.org/project/pyomnidata/1.0.1/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "RecarrayTools",
      "PyFileIO",
      "DateTimeTools (>=1.0.1)"
    ],
    "requires_python": "",
    "summary": "Python tool for downloading, converting and reading OMNI solar wind data.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12314175,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d0e0c161d93cebef9e8cc701f6836d517273301741fe5145eede9bc42b98321",
          "md5": "76ed26f06ede0f8112924d5a1cb7d3d3",
          "sha256": "5ded94a1705e53daa080789e27956b90491379d42db3dcc5b79f8fe4ee969999"
        },
        "downloads": -1,
        "filename": "pyomnidata-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76ed26f06ede0f8112924d5a1cb7d3d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13372,
        "upload_time": "2020-03-23T10:35:29",
        "upload_time_iso_8601": "2020-03-23T10:35:29.252450Z",
        "url": "https://files.pythonhosted.org/packages/7d/0e/0c161d93cebef9e8cc701f6836d517273301741fe5145eede9bc42b98321/pyomnidata-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d55375639f1a20d96739c6cd67509a7a1617eedea281a33b984849a28f053cb3",
          "md5": "7bce2427f06d3c6c3ba5680b9b9b71d6",
          "sha256": "6f499ba8a1bf681fe7d5329f7b088044c3b747bbf7b109c2e8ef66a3f0559b43"
        },
        "downloads": -1,
        "filename": "pyomnidata-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7bce2427f06d3c6c3ba5680b9b9b71d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17130,
        "upload_time": "2021-02-01T11:36:33",
        "upload_time_iso_8601": "2021-02-01T11:36:33.884152Z",
        "url": "https://files.pythonhosted.org/packages/d5/53/75639f1a20d96739c6cd67509a7a1617eedea281a33b984849a28f053cb3/pyomnidata-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f99b11ba71e23c276e1227ba9435e356beca8e58f2fd5815c44d9819227e02e1",
          "md5": "62f0632673039c01b2c36f4e27a153d1",
          "sha256": "065ce25052156557452aa2039a91c39b99dc54b828bd8c34053a0af1d66e3dc0"
        },
        "downloads": -1,
        "filename": "pyomnidata-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "62f0632673039c01b2c36f4e27a153d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17827,
        "upload_time": "2021-12-15T15:48:54",
        "upload_time_iso_8601": "2021-12-15T15:48:54.352973Z",
        "url": "https://files.pythonhosted.org/packages/f9/9b/11ba71e23c276e1227ba9435e356beca8e58f2fd5815c44d9819227e02e1/pyomnidata-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f99b11ba71e23c276e1227ba9435e356beca8e58f2fd5815c44d9819227e02e1",
        "md5": "62f0632673039c01b2c36f4e27a153d1",
        "sha256": "065ce25052156557452aa2039a91c39b99dc54b828bd8c34053a0af1d66e3dc0"
      },
      "downloads": -1,
      "filename": "pyomnidata-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "62f0632673039c01b2c36f4e27a153d1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17827,
      "upload_time": "2021-12-15T15:48:54",
      "upload_time_iso_8601": "2021-12-15T15:48:54.352973Z",
      "url": "https://files.pythonhosted.org/packages/f9/9b/11ba71e23c276e1227ba9435e356beca8e58f2fd5815c44d9819227e02e1/pyomnidata-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}