{
  "info": {
    "author": "Raul C.",
    "author_email": "rchfe23@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "======\nREADME\n======\n\n.. image:: https://raw.githubusercontent.com/raul23/SimulRPi/master/docs/_static/images/SimulRPi_logo.png\n   :target: https://raw.githubusercontent.com/raul23/SimulRPi/master/docs/_static/images/SimulRPi_logo.png\n   :align: center\n   :alt: SimulRPi logo\n\n\n.. image:: https://readthedocs.org/projects/simulrpi/badge/?version=latest\n   :target: https://simulrpi.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n.. image:: https://travis-ci.org/raul23/SimulRPi.svg?branch=master\n   :target: https://travis-ci.org/raul23/SimulRPi\n   :alt: Build Status\n\n**SimulRPi** is a library that partly fakes\n`RPi.GPIO`_ and simulates some I/O devices\non a Raspberry Pi (RPi).\n\n**Example:** simulating LEDs connected to an RPi via a terminal\n\n.. image:: https://raw.githubusercontent.com/raul23/images/master/Darth-Vader-RPi/simulation_terminal_channel_number_430x60.gif\n   :target: https://raw.githubusercontent.com/raul23/images/master/Darth-Vader-RPi/simulation_terminal_channel_number_430x60.gif\n   :align: center\n   :alt: Simulating LEDs on an RPi via a terminal\n\n\n.. contents::\n   :depth: 3\n   :local:\n\nIntroduction\n============\nIn addition to partly faking `RPi.GPIO`_, **SimulRPi** also simulates these I/O\ndevices connected to an RPi:\n\n- push buttons by listening to pressed keyboard keys and\n- LEDs by blinking dots in the terminal along with their GPIO pin\n  numbers.\n\nWhen a LED is turned on, it is shown as a red dot in the terminal. The\n`pynput`_ package is used to monitor the keyboard for any pressed key. Thus,\nthe **SimulRPi** library can be useful in the case that you want to try your\n`RPi.GPIO`_-based script by running it on your computer when no RPi is\navailable at the moment.\n\n**Example: terminal output**\n\n.. image:: https://raw.githubusercontent.com/raul23/images/master/Darth-Vader-RPi/simulation_terminal_channel_number_430x60.gif\n   :target: https://raw.githubusercontent.com/raul23/images/master/Darth-Vader-RPi/simulation_terminal_channel_number_430x60.gif\n   :align: center\n   :alt: Simulating LEDs on an RPi via a terminal\n\nEach dot represents a blinking LED connected to an RPi and the number\nbetween brackets is the associated GPIO channel number. Here the LED on\nchannel 22 toggles between on and off when a key is pressed.\n\nAlso, the color of the LEDs can be customized as you can see here where the LED\non channel 22 is colored differently from the others.\n\n**Important**\n\n   This library is not a Raspberry Pi emulator nor a complete mock-up of\n   `RPi.GPIO`_, only the most important functions that I needed for my\n   `Darth-Vader-RPi`_ project were added.\n\n   If there is enough interest in this library, I will eventually mock more\n   functions from `RPi.GPIO`_.\n\nDependencies\n============\n* **Platforms:** Linux, macOS\n* **Python**: 3.5, 3.6, 3.7, 3.8\n* ``pynput`` >=1.6.8: for monitoring the keyboard for any pressed key\n\n.. _installation-instructions-label:\n\nInstallation instructions ðŸ˜Ž\n============================\n\n1. Make sure to update *pip*::\n\n   $ pip install --upgrade pip\n\n2. Install the package ``SimulRPi`` with *pip*::\n\n   $ pip install SimulRPi\n\n   It will install the dependency ``pynput`` if it is not already found in your\n   system.\n\n**Important**\n\n   Make sure that *pip* is working with the correct Python version. It might be\n   the case that *pip* is using Python 2.x You can find what Python version\n   *pip* uses with the following::\n\n      $ pip -V\n\n   If *pip* is working with the wrong Python version, then try to use *pip3*\n   which works with Python 3.x\n\n**Note**\n\n   To install the **bleeding-edge version** of the ``SimulRPi`` package,\n   install it from its github repository::\n\n      $ pip install git+https://github.com/raul23/SimulRPi#egg=SimulRPi\n\n   However, this latest version is not as stable as the one from\n   PyPI but you get the latest features being implemented.\n\n**Warning message**\n\nIf you get the warning message from *pip* that the ``run_examples`` script\nis not defined in your *PATH*::\n\n   WARNING: The script run_examples is installed in '/home/pi/.local/bin' which is not on PATH.\n\nAdd the directory mentioned in the warning to your *PATH* by editing your\nconfiguration file (e.g. *.bashrc*). See this `article`_ on how to set *PATH*\non Linux and macOS.\n\n**Test installation**\n\nTest your installation by importing ``SimulRPi`` and printing its version::\n\n   $ python -c \"import SimulRPi; print(SimulRPi.__version__)\"\n\nUsage\n=====\nUse the library in your own code\n--------------------------------\nCase 1: with a ``try`` and ``except`` blocks\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nYou can try importing ``RPi.GPIO`` first and if it is not found, then fallback\non the ``SimulRPi.GPIO`` module.\n\n..\n   IMPORTANT:\n   GitHub and PyPI don't recognize `:mod:`\n   Also they don't recognize :caption: (used in code-block)\n\n.. code-block:: python\n\n   try:\n       import RPi.GPIO as GPIO\n   except ImportError:\n       import SimulRPi.GPIO as GPIO\n\n   # Rest of your code\n\nThe code from the previous example would be put at the beginning of your file\nwith the other imports.\n\nCase 2: with a simulation flag\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nOr maybe you have a flag to tell whether you want to work with the simulation\nmodule or the real one.\n\n.. code-block:: python\n\n   if simulation:\n       import SimulRPi.GPIO as GPIO\n   else:\n       import RPi.GPIO as GPIO\n\n   # Rest of your code\n\nScript ``run_examples``\n--------------------------\nThe `run_examples`_ script which you have access to once you install\nthe ``SimulRPi`` package allows you to run different code examples on your RPi\nor computer. If it is run on your computer, it will make use of the\n``SimulRPi.GPIO`` module which partly fakes ``RPi.GPIO``.\n\nThe different code examples are those presented in **Examples** and show the\ncapability of ``SimulRPi.GPIO`` for simulating I/O devices on an RPi such as\npush buttons and LEDs.\n\nHere is a list of the functions that implement each code example:\n   - Example 1: `ex1_turn_on_led()`_\n   - Example 2: `ex2_turn_on_many_leds()`_\n   - Example 3: `ex3_detect_button()`_\n   - Example 4: `ex4_blink_led()`_\n   - Example 5: `ex5_blink_led_if_button()`_\n\nList of options\n~~~~~~~~~~~~~~~\n\nTo display the script's list of options and their descriptions::\n\n   $ run_examples -h\n\n-e       The number of the code example you want to run. It is required.\n         (default: None)\n-m       Set the numbering system (BCM or BOARD) used to identify the I/O pins\n         on an RPi. (default: BCM)\n-s       Enable simulation mode, i.e. ``SimulRPi.GPIO`` will be used for\n         simulating ``RPi.GPIO``. (default: False)\n-l       The channel numbers to be used for LEDs. If an example only\n         requires 1 channel, the first channel from the provided list will\n         be used. (default: [9, 10, 11])\n-b       The channel number to be used for a push button. The default value\n         is channel 17 which is associated by default with the keyboard key\n         *cmd_r*. (default: 17)\n-k       The name of the key associated with the button channel. The name\n         must be one of those recognized by the *pynput* package. See the\n         *SimulRPi* documentation for a list of valid key names:\n         https://bit.ly/2Pw1OBe. Example: *alt*, *ctrl_r* (default: *cmd_r*)\n-t       Total time in seconds the LEDs will be blinking. (default: 4)\n--on     Time in seconds the LEDs will stay turned ON at a time. (default: 1)\n--off    Time in seconds the LEDs will stay turned OFF at a time. (default: 1)\n-a       Use ASCII-based LED symbols. Useful if you are having problems\n         displaying the default LED signs that make use of special characters.\n         However, it is recommended to fix your display problems which might be\n         caused by locale settings not set correctly. Check the article\n         'Display problems' @ https://bit.ly/35B8bfs for more info about\n         solutions to display problems (default: False)\n\nHow to run the script\n~~~~~~~~~~~~~~~~~~~~~\nOnce you install the ``SimulRPi`` package, you should have access to the\n``run_examples`` script which can be called from the terminal by providing some\narguments.\n\nFor example::\n\n   $ run_examples -e 1 -s\n\nLet's run the code example 5 which blinks a LED if a specified key is\npressed::\n\n   $ run_examples -s -e 5 -l 22 -t 5 -k ctrl_r\n\nExplanation of the previous command-line:\n\n- ``-s``: we run the code example as a **simulation**, i.e. on our computer\n  instead of an RPi\n- ``-e 5``: we run code example **5** which blinks a LED if a key is pressed\n- ``-l 22``: we blink a LED on channel **22**\n- ``-t 5``: we blink a LED for a total of **5** seconds\n- ``-k ctrl_r``: a LED is blinked if the key ``ctrl_r`` is pressed\n\n**Output:**\n\n.. image:: https://raw.githubusercontent.com/raul23/images/master/SimulRPi/v0.1.0a0/run_examples_05_terminal_output.gif\n   :target: https://raw.githubusercontent.com/raul23/images/master/SimulRPi/v0.1.0a0/run_examples_05_terminal_output.gif\n   :align: left\n   :alt: Example 05: terminal output\n\n|\n|\n|\n\n**Important**\n\n   Don't forget the *-s* flag when running the ``run_examples`` script as simulation,\n   if you want to run a code example on your computer, and not on your RPi.\n\n.. _examples-label:\n\nExamples\n========\nThe examples presented thereafter will show you how to use ``SimulRPi`` to\nsimulate LEDs and push buttons.\n\nThe code for the examples shown here can be also found as a script in\n`run_examples`_.\n\n**Note**\n\n   Since we are showing how to use the ``SimulRPi`` package, the presented code\n   examples are to be executed on your computer. However, the\n   ``run_examples`` script which runs the following code examples can be executed on a\n   Raspberry Pi or your computer.\n\nExample 1: display 1 LED\n------------------------\n**Example 1** consists in displaying one LED on the GPIO channel 10. Here is\nthe code along with the output from the terminal:\n\n.. code-block:: python\n\n   import SimulRPi.GPIO as GPIO\n\n   led_channel = 10\n   GPIO.setmode(GPIO.BCM)\n   GPIO.setup(led_channel, GPIO.OUT)\n   GPIO.output(led_channel, GPIO.HIGH)\n   GPIO.cleanup()\n\n**Output:**\n\n.. image:: https://raw.githubusercontent.com/raul23/images/master/SimulRPi/v0.1.0a0/example_01_terminal_output.png\n   :target: https://raw.githubusercontent.com/raul23/images/master/SimulRPi/v0.1.0a0/example_01_terminal_output.png\n   :align: left\n   :alt: Example 01: terminal output\n\n|\n|\n|\n\nThe command line for reproducing the same results for example 1 with the\n``run_examples`` script is the following::\n\n   $ run_examples -s -e 1 -l 10\n\n**Warning**\n\n   Always call `GPIO.cleanup()`_ at the end of your program to free up any\n   resources such as stopping threads.\n\nExample 2: display 3 LEDs\n-------------------------\n**Example 2** consists in displaying three LEDs on channels 9, 10, and 11,\nrespectively. Here is the code along with the output from the terminal:\n\n.. code-block:: python\n\n   import SimulRPi.GPIO as GPIO\n\n   led_channels = [9, 10, 11]\n   GPIO.setmode(GPIO.BCM)\n   GPIO.setup(led_channels, GPIO.OUT)\n   GPIO.output(led_channels, GPIO.HIGH)\n   GPIO.cleanup()\n\n**Output:**\n\n.. image:: https://raw.githubusercontent.com/raul23/images/master/SimulRPi/v0.1.0a0/example_02_terminal_output.png\n   :target: https://raw.githubusercontent.com/raul23/images/master/SimulRPi/v0.1.0a0/example_02_terminal_output.png\n   :align: left\n   :alt: Example 02: terminal output\n\n|\n|\n\nThe command line for reproducing the same results for example 2 with the\n``run_examples`` script is the following::\n\n   $ run_examples -s -e 2\n\n**Note**\n\n   In example 2, we could have also used a ``for`` loop to setup the output\n   channels and set their states (but more cumbersome):\n\n   .. code-block:: python\n\n      import SimulRPi.GPIO as GPIO\n\n      led_channels = [9, 10, 11]\n      GPIO.setmode(GPIO.BCM)\n      for ch in led_channels:\n          GPIO.setup(ch, GPIO.OUT)\n          GPIO.output(ch, GPIO.HIGH)\n      GPIO.cleanup()\n\n   The `GPIO.setup()`_ function accepts channel numbers as ``int``, ``list``,\n   and ``tuple``. Same with the `GPIO.output()`_ function which also accepts\n   channel numbers and output states as ``int``, ``list``, and ``tuple``.\n\nExample 3: detect a pressed key\n-------------------------------\n**Example 3** consists in detecting if the key ``cmd_r`` is pressed and then\nprinting a message. Here is the code along with the output from the terminal:\n\n.. code-block:: python\n\n   import SimulRPi.GPIO as GPIO\n\n   channel = 17\n   GPIO.setmode(GPIO.BCM)\n   GPIO.setup(channel, GPIO.IN, pull_up_down=GPIO.PUD_UP)\n   print(\"Press key 'cmd_r' to exit\\n\")\n   while True:\n       if not GPIO.input(channel):\n           print(\"Key pressed!\")\n           break\n   GPIO.cleanup()\n\n\n**Output:**\n\n.. image:: https://raw.githubusercontent.com/raul23/images/master/SimulRPi/v0.1.0a0/example_03_terminal_output.png\n   :target: https://raw.githubusercontent.com/raul23/images/master/SimulRPi/v0.1.0a0/example_03_terminal_output.png\n   :align: left\n   :alt: Example 03: terminal output\n\n|\n|\n|\n\nThe command line for reproducing the same results for example 3 with the\n``run_examples`` script is the following::\n\n   $ run_examples -s -e 3 -k cmd_r\n\n**Note**\n\n   By default, ``SimulRPi`` maps the key ``cmd_r`` to channel 17 as can be\n   seen from the `default key-to-channel map <https://github.com/raul23/archive/blob/master/SimulRPi/v0.1.0a0/default_keymap.py#L19>`__.\n\n   See also the documentation for `SimulRPi.mapping`_ where the default keymap\n   is defined.\n\nExample 4: blink a LED\n----------------------\n**Example 4** consists in blinking a LED on channel 22 for 4 seconds (or until\nyou press ``ctrl`` + ``c``). Here is the code along with the output from\nthe terminal:\n\n.. code-block:: python\n\n   import time\n   import SimulRPi.GPIO as GPIO\n\n   channel = 22\n   GPIO.setmode(GPIO.BCM)\n   GPIO.setup(channel, GPIO.OUT)\n   start = time.time()\n   print(\"Ex 4: blink a LED for 4.0 seconds\\n\")\n   while (time.time() - start) < 4:\n       try:\n           GPIO.output(channel, GPIO.HIGH)\n           time.sleep(0.5)\n           GPIO.output(channel, GPIO.LOW)\n           time.sleep(0.5)\n       except KeyboardInterrupt:\n           break\n   GPIO.cleanup()\n\n**Output:**\n\n.. image:: https://raw.githubusercontent.com/raul23/images/master/SimulRPi/v0.1.0a0/example_04_terminal_output.gif\n   :target: https://raw.githubusercontent.com/raul23/images/master/SimulRPi/v0.1.0a0/example_04_terminal_output.gif\n   :align: left\n   :alt: Example 04: terminal output\n\n|\n|\n|\n|\n\nThe command line for reproducing the same results for example 4 with the\n``run_examples`` script is the following::\n\n   $ run_examples -s -e 4 -t 4 -l 22\n\nExample 5: blink a LED if a key is pressed\n------------------------------------------\n**Example 5** consists in blinking a LED on channel 10 for 3 seconds if the key\n``shift_r`` is pressed. And then exiting from the program. The program can\nalso be terminated at anytime by pressing ``ctrl`` + ``c``. Here is the code\nalong with the output from the terminal:\n\n.. code-block:: python\n\n   import time\n   import SimulRPi.GPIO as GPIO\n\n   led_channel = 10\n   key_channel = 27\n   GPIO.setmode(GPIO.BCM)\n   GPIO.setup(led_channel, GPIO.OUT)\n   GPIO.setup(key_channel, GPIO.IN, pull_up_down=GPIO.PUD_UP)\n   print(\"Press the key 'shift_r' to turn on light ...\\n\")\n   while True:\n       try:\n           if not GPIO.input(key_channel):\n               print(\"The key 'shift_r' was pressed!\")\n               start = time.time()\n               while (time.time() - start) < 3:\n                   GPIO.output(led_channel, GPIO.HIGH)\n                   time.sleep(0.5)\n                   GPIO.output(led_channel, GPIO.LOW)\n                   time.sleep(0.5)\n               break\n       except KeyboardInterrupt:\n           break\n   GPIO.cleanup()\n\n**Output:**\n\n.. image:: https://raw.githubusercontent.com/raul23/images/master/SimulRPi/v0.1.0a0/example_05_terminal_output.gif\n   :target: https://raw.githubusercontent.com/raul23/images/master/SimulRPi/v0.1.0a0/example_05_terminal_output.gif\n   :align: left\n   :alt: Example 05: terminal output\n\n|\n|\n|\n\nThe command line for reproducing the same results for example 5 with the\n``run_examples`` script is the following::\n\n   $ run_examples -s -e 5 -t 3 -l 10 -b 27\n\n**Note**\n\n   By default, ``SimulRPi`` maps the key ``shift_r`` to channel 27 as can be\n   seen from the `default key-to-channel map <https://github.com/raul23/archive/blob/master/SimulRPi/v0.1.0a0/default_keymap.py#L29>`__.\n\n   See also the documentation for `SimulRPi.mapping`_ where the default keymap\n   is defined.\n\nHow to uninstall ðŸ˜ž\n===================\nTo uninstall **only** the package ``SimulRPi``::\n\n   $ pip uninstall simulrpi\n\nTo uninstall the package ``SimulRPi`` and its dependency::\n\n   $ pip uninstall simulrpi pynput\n\nResources\n=========\n* `SimulRPi documentation`_\n* `SimulRPi Changelog`_\n* `SimulRPi GitHub`_: source code\n* `Darth-Vader-RPi`_: personal project using ``RPi.GPIO`` for activating a Darth\n  Vader action figure with light and sounds and ``SimulRPi.GPIO`` as fallback if\n  testing on a computer when no RPi is available\n\nReferences\n==========\n* `pynput`_: package used for monitoring the keyboard for any pressed key as to\n  simulate push buttons connected to an RPi\n* `RPi.GPIO`_: a module to control RPi GPIO channels\n\n.. URLs\n.. 1. External links (simulrpi.readthedocs.io)\n.. _ex1_turn_on_led(): https://simulrpi.readthedocs.io/en/0.1.0a0/api_reference.html#SimulRPi.run_examples.ex1_turn_on_led\n.. _ex2_turn_on_many_leds(): https://simulrpi.readthedocs.io/en/0.1.0a0/api_reference.html#SimulRPi.run_examples.ex2_turn_on_many_leds\n.. _ex3_detect_button(): https://simulrpi.readthedocs.io/en/0.1.0a0/api_reference.html#SimulRPi.run_examples.ex3_detect_button\n.. _ex4_blink_led(): https://simulrpi.readthedocs.io/en/0.1.0a0/api_reference.html#SimulRPi.run_examples.ex4_blink_led\n.. _ex5_blink_led_if_button(): https://simulrpi.readthedocs.io/en/0.1.0a0/api_reference.html#SimulRPi.run_examples.ex5_blink_led_if_button\n.. _run_examples: https://simulrpi.readthedocs.io/en/0.1.0a0/api_reference.html#module-SimulRPi.run_examples\n.. _GPIO.cleanup(): https://simulrpi.readthedocs.io/en/0.1.0a0/api_reference.html#SimulRPi.GPIO.cleanup\n.. _GPIO.output(): https://simulrpi.readthedocs.io/en/0.1.0a0/api_reference.html#SimulRPi.GPIO.output\n.. _GPIO.setup(): https://simulrpi.readthedocs.io/en/0.1.0a0/api_reference.html#SimulRPi.GPIO.setup\n.. _SimulRPi changelog: https://simulrpi.readthedocs.io/en/latest/changelog.html\n.. _SimulRPi.mapping: https://simulrpi.readthedocs.io/en/0.1.0a0/api_reference.html#module-SimulRPi.mapping\n\n.. 2. External links (others)\n.. _article: https://docs.oracle.com/cd/E19062-01/sun.mgmt.ctr36/819-5418/gaznb/index.html\n.. _pynput: https://pynput.readthedocs.io/\n.. _Darth-Vader-RPi: https://github.com/raul23/Darth-Vader-RPi\n.. _PyPI: https://pypi.org/project/SimulRPi/\n.. _RPi.GPIO: https://pypi.org/project/RPi.GPIO/\n.. _SimulRPi documentation: https://simulrpi.readthedocs.io/\n.. _SimulRPi GitHub: https://github.com/raul23/SimulRPi\n.. _SimulRPi PyPI: https://pypi.org/project/SimulRPi/\n.. _SimulRPi.GPIO: https://pypi.org/project/SimulRPi/\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/raul23/SimulRPi",
    "keywords": "Raspberry Pi GPIO pynput library simulation mock",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SimulRPi",
    "package_url": "https://pypi.org/project/SimulRPi/",
    "platform": "",
    "project_url": "https://pypi.org/project/SimulRPi/",
    "project_urls": {
      "Bug Reports": "https://github.com/raul23/SimulRPi/issues",
      "Documentation": "https://simulrpi.readthedocs.io",
      "Homepage": "https://github.com/raul23/SimulRPi",
      "Source": "https://github.com/raul23/SimulRPi"
    },
    "release_url": "https://pypi.org/project/SimulRPi/0.1.0a1/",
    "requires_dist": [
      "pynput (>=1.6.8)"
    ],
    "requires_python": "",
    "summary": "A library that partly fakes RPi.GPIO and simulates some I/O devices on a Raspberry Pi.",
    "version": "0.1.0a1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8227454,
  "releases": {
    "0.0.0a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "861985245482b2dfa0e018f8b718053e20f6052b1fe02639f588d1ddc9fc8537",
          "md5": "d555556bd5c16789e3cc9a629f8f8818",
          "sha256": "3b348def7a4d01c2808471741d49da147c718089a9f006cca23dbbb191e51faf"
        },
        "downloads": -1,
        "filename": "SimulRPi-0.0.0a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d555556bd5c16789e3cc9a629f8f8818",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43454,
        "upload_time": "2020-08-09T23:22:28",
        "upload_time_iso_8601": "2020-08-09T23:22:28.810222Z",
        "url": "https://files.pythonhosted.org/packages/86/19/85245482b2dfa0e018f8b718053e20f6052b1fe02639f588d1ddc9fc8537/SimulRPi-0.0.0a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe3f6b9fe5d87c9bec0661fa1d6d876e7ac376de655525ddf7aa85fc68d54701",
          "md5": "c2cb58bc40e23c71349e094fa82156e8",
          "sha256": "518c88d4d86bc32245c34942fe927d3400b2ead06e89f780a145fa3e3ed00e38"
        },
        "downloads": -1,
        "filename": "SimulRPi-0.0.0a0.tar.gz",
        "has_sig": false,
        "md5_digest": "c2cb58bc40e23c71349e094fa82156e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 45122,
        "upload_time": "2020-08-09T23:22:31",
        "upload_time_iso_8601": "2020-08-09T23:22:31.792832Z",
        "url": "https://files.pythonhosted.org/packages/fe/3f/6b9fe5d87c9bec0661fa1d6d876e7ac376de655525ddf7aa85fc68d54701/SimulRPi-0.0.0a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.0a0.post0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc5987c2830fa1da6f882366b724f5dd110663939086a49bc5dd7aecd6429be0",
          "md5": "bee9c53c9e13b3dc456319c74d535aa2",
          "sha256": "5c059bb2ee33e838838f12281f350ef6d20f1436b60ba098e0f3515210f6b946"
        },
        "downloads": -1,
        "filename": "SimulRPi-0.0.0a0.post0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bee9c53c9e13b3dc456319c74d535aa2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43516,
        "upload_time": "2020-08-09T23:38:13",
        "upload_time_iso_8601": "2020-08-09T23:38:13.417970Z",
        "url": "https://files.pythonhosted.org/packages/bc/59/87c2830fa1da6f882366b724f5dd110663939086a49bc5dd7aecd6429be0/SimulRPi-0.0.0a0.post0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "514ec466f4cfc33e5f15729d8091c1b84968f01ca2aa3ca6e7941baec7a81d68",
          "md5": "5014b19becc68c32256ea92cf4b00537",
          "sha256": "0abe956d2cde1d8046c4bf014fb1c7ca7f89a5a500a34dbb19d4559d6f0519e3"
        },
        "downloads": -1,
        "filename": "SimulRPi-0.0.0a0.post0.tar.gz",
        "has_sig": false,
        "md5_digest": "5014b19becc68c32256ea92cf4b00537",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 45096,
        "upload_time": "2020-08-09T23:38:15",
        "upload_time_iso_8601": "2020-08-09T23:38:15.438612Z",
        "url": "https://files.pythonhosted.org/packages/51/4e/c466f4cfc33e5f15729d8091c1b84968f01ca2aa3ca6e7941baec7a81d68/SimulRPi-0.0.0a0.post0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9884d4400c7e74934bd781c6405c9edf68498a6419227995cb48f8371b0438c",
          "md5": "904e9216edfd6812ed99602eef74b8d8",
          "sha256": "cd6cf084ccb18159e01160583e3d49df74018acdc501723ea30d9585ed69ae3d"
        },
        "downloads": -1,
        "filename": "SimulRPi-0.0.1a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "904e9216edfd6812ed99602eef74b8d8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34890,
        "upload_time": "2020-08-14T07:26:55",
        "upload_time_iso_8601": "2020-08-14T07:26:55.165015Z",
        "url": "https://files.pythonhosted.org/packages/e9/88/4d4400c7e74934bd781c6405c9edf68498a6419227995cb48f8371b0438c/SimulRPi-0.0.1a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5943d45eb675bde30f2e6ede2250ef819b07615c138335957bad3ff04a259cc6",
          "md5": "dfc6410c48e8bdef5431581f20c88787",
          "sha256": "bfcee16b46d12c6dd0987822268e130181756f7a375dd35d0df7baab4d141959"
        },
        "downloads": -1,
        "filename": "SimulRPi-0.0.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "dfc6410c48e8bdef5431581f20c88787",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38046,
        "upload_time": "2020-08-14T07:26:57",
        "upload_time_iso_8601": "2020-08-14T07:26:57.077812Z",
        "url": "https://files.pythonhosted.org/packages/59/43/d45eb675bde30f2e6ede2250ef819b07615c138335957bad3ff04a259cc6/SimulRPi-0.0.1a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57c6a657ccbbed28a9fa6e17f804c4de9595d7381cf6e58fd414cdf8b244ecbe",
          "md5": "f83e220d0c840e1986987a40690890a1",
          "sha256": "b385b8b5d541139cdd310dd17ec2275013eab0dcda19e4c7dbbb1a10ee7b7436"
        },
        "downloads": -1,
        "filename": "SimulRPi-0.1.0a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f83e220d0c840e1986987a40690890a1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43669,
        "upload_time": "2020-09-15T16:55:02",
        "upload_time_iso_8601": "2020-09-15T16:55:02.738247Z",
        "url": "https://files.pythonhosted.org/packages/57/c6/a657ccbbed28a9fa6e17f804c4de9595d7381cf6e58fd414cdf8b244ecbe/SimulRPi-0.1.0a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8b67ac016f775a46784264fe1ce0d765379a4158b6b98806337b1c9b0885277",
          "md5": "213cb6f13cbde0d3bda9a9f2a2566366",
          "sha256": "bed41c3953a4f41472147e8569866f382116ce1b3accd74d44aae3eb87d111f8"
        },
        "downloads": -1,
        "filename": "SimulRPi-0.1.0a0.tar.gz",
        "has_sig": false,
        "md5_digest": "213cb6f13cbde0d3bda9a9f2a2566366",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 45200,
        "upload_time": "2020-09-15T16:55:04",
        "upload_time_iso_8601": "2020-09-15T16:55:04.746809Z",
        "url": "https://files.pythonhosted.org/packages/d8/b6/7ac016f775a46784264fe1ce0d765379a4158b6b98806337b1c9b0885277/SimulRPi-0.1.0a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0a0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1afc61b409ecfbd094e737a068fa6296e856eca1cc6e335cb06761fc603d8912",
          "md5": "7556e263e000f1aaa5066105b2625f18",
          "sha256": "49e8b79ede494cf0b76ea0e5a3f030109e3477188c1f12e2d4690ab0a549c507"
        },
        "downloads": -1,
        "filename": "SimulRPi-0.1.0a0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7556e263e000f1aaa5066105b2625f18",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 45414,
        "upload_time": "2020-09-20T07:58:46",
        "upload_time_iso_8601": "2020-09-20T07:58:46.640858Z",
        "url": "https://files.pythonhosted.org/packages/1a/fc/61b409ecfbd094e737a068fa6296e856eca1cc6e335cb06761fc603d8912/SimulRPi-0.1.0a0.post1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Yanked for a clearer version number"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47637e4faebbe7091f2901ef4548019cf00ebb40a510d53a1e8bcd1742b9c7c0",
          "md5": "cf78574e2c5a60ff65113c24c3e0ede1",
          "sha256": "5eaf2e403d275b62282abd279c259524c178f82f11bf23799065ced9a6125688"
        },
        "downloads": -1,
        "filename": "SimulRPi-0.1.0a0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "cf78574e2c5a60ff65113c24c3e0ede1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46441,
        "upload_time": "2020-09-20T07:58:48",
        "upload_time_iso_8601": "2020-09-20T07:58:48.708620Z",
        "url": "https://files.pythonhosted.org/packages/47/63/7e4faebbe7091f2901ef4548019cf00ebb40a510d53a1e8bcd1742b9c7c0/SimulRPi-0.1.0a0.post1.tar.gz",
        "yanked": true,
        "yanked_reason": "Yanked for a clearer version number"
      }
    ],
    "0.1.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "901af381307a4a224500e68e0ec6d8fad25d7ccc275e0674ba4f9ade15b7ba79",
          "md5": "f1d9b833844bfabc571cde13ca11e4ce",
          "sha256": "926f12cbdcd45276d584ac6c5d71dc3e4ad8c12d06bd74c986c3c246622830d6"
        },
        "downloads": -1,
        "filename": "SimulRPi-0.1.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1d9b833844bfabc571cde13ca11e4ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 45329,
        "upload_time": "2020-09-20T09:12:52",
        "upload_time_iso_8601": "2020-09-20T09:12:52.903185Z",
        "url": "https://files.pythonhosted.org/packages/90/1a/f381307a4a224500e68e0ec6d8fad25d7ccc275e0674ba4f9ade15b7ba79/SimulRPi-0.1.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f159bfe8a427e4330c1c2ad7b531ef49dd4992e97661ff7275c8e167efe51cf",
          "md5": "18f72c4b5f9d7e5361056b263761a0a7",
          "sha256": "e0b4d7fca6d118045e3e19c18274b5be4d082b9241aa849f909e4219d675dd7d"
        },
        "downloads": -1,
        "filename": "SimulRPi-0.1.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "18f72c4b5f9d7e5361056b263761a0a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46415,
        "upload_time": "2020-09-20T09:12:54",
        "upload_time_iso_8601": "2020-09-20T09:12:54.953375Z",
        "url": "https://files.pythonhosted.org/packages/9f/15/9bfe8a427e4330c1c2ad7b531ef49dd4992e97661ff7275c8e167efe51cf/SimulRPi-0.1.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "901af381307a4a224500e68e0ec6d8fad25d7ccc275e0674ba4f9ade15b7ba79",
        "md5": "f1d9b833844bfabc571cde13ca11e4ce",
        "sha256": "926f12cbdcd45276d584ac6c5d71dc3e4ad8c12d06bd74c986c3c246622830d6"
      },
      "downloads": -1,
      "filename": "SimulRPi-0.1.0a1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f1d9b833844bfabc571cde13ca11e4ce",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 45329,
      "upload_time": "2020-09-20T09:12:52",
      "upload_time_iso_8601": "2020-09-20T09:12:52.903185Z",
      "url": "https://files.pythonhosted.org/packages/90/1a/f381307a4a224500e68e0ec6d8fad25d7ccc275e0674ba4f9ade15b7ba79/SimulRPi-0.1.0a1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f159bfe8a427e4330c1c2ad7b531ef49dd4992e97661ff7275c8e167efe51cf",
        "md5": "18f72c4b5f9d7e5361056b263761a0a7",
        "sha256": "e0b4d7fca6d118045e3e19c18274b5be4d082b9241aa849f909e4219d675dd7d"
      },
      "downloads": -1,
      "filename": "SimulRPi-0.1.0a1.tar.gz",
      "has_sig": false,
      "md5_digest": "18f72c4b5f9d7e5361056b263761a0a7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 46415,
      "upload_time": "2020-09-20T09:12:54",
      "upload_time_iso_8601": "2020-09-20T09:12:54.953375Z",
      "url": "https://files.pythonhosted.org/packages/9f/15/9bfe8a427e4330c1c2ad7b531ef49dd4992e97661ff7275c8e167efe51cf/SimulRPi-0.1.0a1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}