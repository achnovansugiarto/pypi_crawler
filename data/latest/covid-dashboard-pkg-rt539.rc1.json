{
  "info": {
    "author": "Ryan Toffoletti",
    "author_email": "rt539@exeter.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n**Covid Dashboard**\n===============\n\nintroduction\n---------------\n\nThe purpose of the project is to gather and process data of the Sars-cov-2 virus and the coronavirus/covid-19 disease.\n\nThe end goal is to have reliable data taken from the governments Covid-19 API and the news API in a readable UI with up to date data.\n\nPrerequisites\n---------------\t\n\nInternet connection to access multiple APIs\n\nDeveloped on python 3.8.3\n\nInstallation\n---------------\t\n\n**Dependencies**\n\n1. Flask\n2. Requests\n3. pytest\n4. sched\n\n\nGetting started tutorial\n---------------\t\n\nEnsure all dependencies are installed\nThe main app is 'Covid_dashboard' and calls other modules on requirement\nnation_2021_10_28.csv is included for testing purposes \n\nTesting\n---------------\t\n\nTests can be run from the /<tests>/ directory\nThey will automatically run to ensure the program is running correctly\n\nDeveloper Documentation\n---------------\t\n\n**covid_data_handler**\n\nFunction(parse_csv_data: str) -> list:\n '''This takes argument=string as a csv filename and reads the data and writes it to a list object'''\n\nFunction(process_csv_data: list) -> dict:\n '''This takes the list object returned by Function(parse_csv_data) and returns those statistics'''\n\nFunction(covid_API_request: str) -> dict:\n '''This updates the csv using the COVID-19 API '''\n_API documentation: https://coronavirus.data.gov.uk/details/developers-guide_\n\nFunction(schedule_covid_updates)\n '''schedules the covid_API_request function to run at a given interval'''\n\n**covid_news_handling**\n\nFunction(todays_date: int) -> str:\n '''returns today's date as a string with format YYYY-MM-DD'''\n\nFunction(news_API_request: str) -> dict:\n '''This updates the news articles using the news api'''\n_API documentation: https://newsapi.org/docs_\n\nFunction(update_news)\n '''This schedules the news_API_request function'''\n\n**covid_dashboard**\n\nFunction(Index)\n '''This tells the program to render the dashboard from the index.html template'''\n\nFunction(data_assign)\n '''This assigns data to output variables using parse_csv_data and process_csv_data'''\n\nFunction(update_news: int) -> dict\n '''This calls for news to be updated on schedule'''\n\nFunction(update_data) \n '''This calls for data to be updated on shcedule'''\n\nFunction(update_articles: int) -> list:\n '''This updates the news articles and adds them to the dashboard'''\n\nFunction(time_to_sec: str) -> int:\n '''Converts HH:MM:SS to seconds'''\n\nFunction(sec_to_time:int ) -> str:\n '''Converts seconds to HH:MM:SS'''\n\nFunction(time_difference: int) -> str:\n '''Takes time difference in seconds and returns time difference in HH:MM:SS'''\n\nFunction(start_time)\n '''When the program makes a request this makes a timestamp'''\n\nFunction(log_requests)\n '''Tells the logger to log the specified data when a response is given'''\n\nDetails\n---------------\t\n\nAuthor: Ryan Toffoletti\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Toffoh/Covid-Dashboard",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Covid-dashboard-pkg-rt539",
    "package_url": "https://pypi.org/project/Covid-dashboard-pkg-rt539/",
    "platform": "",
    "project_url": "https://pypi.org/project/Covid-dashboard-pkg-rt539/",
    "project_urls": {
      "Homepage": "https://github.com/Toffoh/Covid-Dashboard"
    },
    "release_url": "https://pypi.org/project/Covid-dashboard-pkg-rt539/1.0.1/",
    "requires_dist": [
      "Flask",
      "requests",
      "pytest",
      "sched"
    ],
    "requires_python": ">=3.10",
    "summary": "Lightweight covid dashboard",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12255084,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c414c59b2a1220f28d74de1695b1c151de5940c06cb8ecc48feadb6f50232ee5",
          "md5": "01f520710e0ba07cbd4633870d6c81ec",
          "sha256": "d73602bb1dd7d947cc3e48f6c893f1df67ece3cd805fdaacdc44b2f2bc275bf5"
        },
        "downloads": -1,
        "filename": "Covid_dashboard_pkg_rt539-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01f520710e0ba07cbd4633870d6c81ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 4696,
        "upload_time": "2021-12-09T12:27:16",
        "upload_time_iso_8601": "2021-12-09T12:27:16.600661Z",
        "url": "https://files.pythonhosted.org/packages/c4/14/c59b2a1220f28d74de1695b1c151de5940c06cb8ecc48feadb6f50232ee5/Covid_dashboard_pkg_rt539-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f53237b2fcc44f807d41a6129a45b125947505b29b88facd4d1613f687f266d2",
          "md5": "f80625f8e12810157b85741430d9f682",
          "sha256": "ba624b29be7783f7d3c68f676049547daefe623037252911316f1ff9b0cb67b4"
        },
        "downloads": -1,
        "filename": "Covid_dashboard-pkg-rt539-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f80625f8e12810157b85741430d9f682",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 3951,
        "upload_time": "2021-12-09T12:27:18",
        "upload_time_iso_8601": "2021-12-09T12:27:18.215381Z",
        "url": "https://files.pythonhosted.org/packages/f5/32/37b2fcc44f807d41a6129a45b125947505b29b88facd4d1613f687f266d2/Covid_dashboard-pkg-rt539-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c414c59b2a1220f28d74de1695b1c151de5940c06cb8ecc48feadb6f50232ee5",
        "md5": "01f520710e0ba07cbd4633870d6c81ec",
        "sha256": "d73602bb1dd7d947cc3e48f6c893f1df67ece3cd805fdaacdc44b2f2bc275bf5"
      },
      "downloads": -1,
      "filename": "Covid_dashboard_pkg_rt539-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "01f520710e0ba07cbd4633870d6c81ec",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 4696,
      "upload_time": "2021-12-09T12:27:16",
      "upload_time_iso_8601": "2021-12-09T12:27:16.600661Z",
      "url": "https://files.pythonhosted.org/packages/c4/14/c59b2a1220f28d74de1695b1c151de5940c06cb8ecc48feadb6f50232ee5/Covid_dashboard_pkg_rt539-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f53237b2fcc44f807d41a6129a45b125947505b29b88facd4d1613f687f266d2",
        "md5": "f80625f8e12810157b85741430d9f682",
        "sha256": "ba624b29be7783f7d3c68f676049547daefe623037252911316f1ff9b0cb67b4"
      },
      "downloads": -1,
      "filename": "Covid_dashboard-pkg-rt539-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f80625f8e12810157b85741430d9f682",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 3951,
      "upload_time": "2021-12-09T12:27:18",
      "upload_time_iso_8601": "2021-12-09T12:27:18.215381Z",
      "url": "https://files.pythonhosted.org/packages/f5/32/37b2fcc44f807d41a6129a45b125947505b29b88facd4d1613f687f266d2/Covid_dashboard-pkg-rt539-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}