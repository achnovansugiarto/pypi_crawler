{
  "info": {
    "author": "Max Buehler",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "============================================================\nbph2_co2: Educational tool for CO2 concentration simulations\n============================================================\n\nPython library for education with tools for CO2 concentration simulations\n\n.. image:: https://raw.githubusercontent.com/bph-tuwien/bph_co2/master/docs/screenshot_1.PNG?sanitize=true\n\nInstallation:\n^^^^^^^^^^^^^\npip install bph2-co2==1.0.0\n\n\nExample:\n--------\n\nsee also main.py\n\n.. code-block:: python\n\n    from bph_co2.solver import CO2_Simulation, ppm_to_mg_m3, mg_m3_to_ppm\n    from bph_co2.timeseries import Timeseries\n    from bph_co2.window import Window\n\n    try:\n        import importlib.resources as pkg_resources\n    except ImportError:\n        # Try backported to PY<37 `importlib_resources`.\n        import importlib_resources as pkg_resources\n\n    from bph_co2.resources import Input_Data as case_data\n\n\n    if __name__ == '__main__':\n\n        # load .csv files\n        with pkg_resources.path(case_data, 'persons.csv') as path:\n            persons_filename = path.__str__()\n\n        with pkg_resources.path(case_data, 'internal_co2_source.csv') as path:\n            internal_co2_source_filename = path.__str__()\n\n        with pkg_resources.path(case_data, 'air_change_rate.csv') as path:\n            air_change_rate_filename = path.__str__()\n\n        with pkg_resources.path(case_data, 'window_state.csv') as path:\n            window_state_filename = path.__str__()\n\n        with pkg_resources.path(case_data, 'indoor_temperature.csv') as path:\n            indoor_temperature_filename = path.__str__()\n\n        with pkg_resources.path(case_data, 'outdoor_temperature.csv') as path:\n            outdoor_temperature_filename = path.__str__()\n\n        n_persons = Timeseries.from_csv(persons_filename, interpolation_scheme='previous')\n        internal_co2_source = Timeseries.from_csv(internal_co2_source_filename, interpolation_scheme='linear')\n        air_change_rate = Timeseries.from_csv(air_change_rate_filename, interpolation_scheme='linear')\n        window_state = Timeseries.from_csv(window_state_filename, interpolation_scheme='previous')\n        indoor_temperature = Timeseries.from_csv(indoor_temperature_filename, interpolation_scheme='linear')\n        outdoor_temperature = Timeseries.from_csv(outdoor_temperature_filename, interpolation_scheme='linear')\n\n        # create a window:\n        window = Window(hight=1,\n                        area=1,\n                        state=window_state)\n\n        sim = CO2_Simulation(name='test_simulation',\n                             volume=51.48,\n                             n_persons=n_persons,\n                             emission_rate=27000,\n                             internal_co2_source=internal_co2_source,\n                             indoor_temperature=indoor_temperature,\n                             outdoor_temperature=outdoor_temperature,\n                             windows=[window],\n                             air_change_rate=air_change_rate,\n                             timestep=60,\n                             t_end=26640)\n\n        res = sim.calculate()\n\n        res.plot()\n\nUsage\n-----\n\nImports:\n^^^^^^^^\n\n.. code-block:: python\n\n    from src.bph_co2.solver import CO2_Simulation\n    from src.bph_co2.timeseries import Timeseries\n    from src.bph_co2.window import Window\n\n\nCO2_Simulation:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- create a CO2_Simulation object. This is the base for running a simulation:\n\n.. code-block:: python\n\n    sim = CO2_Simulation(name='my_test_simulation')\n\nThe CO2_Simulation has the following parameters:\n\n    - *name*:                         the name of the CO2_Simulation; default is 'Unnamed Simulation'\n    - *volume*:                       the volume of the simulated zone [m³]; default is 75\n    - *n_persons*:                    number of persons in the zone; default is 1 *\n    - *emission_rate*:                CO2 emission_rate of a person in mg/h; default is 27000 mg/h;\n    - *internal_co2_source*:          co2 emission rate of internal sources in mg/h; default is 0 *\n    - *outdoor_temperature*:          outdoor temperature in °C; default is 10 °C *\n    - *indoor_temperature*:           indoor temperature in °C; default is 20 °C *\n    - *windows*:                      windows of the zone; list of *window*-objects; default is []\n    - *air_change_rate*:              air change rate in 1/h; default is 0.5 *\n    - *c0i*:                          initial CO2-concentration in the room/zone in ppm; default is 400\n    - *c0e*:                          initial outdoor CO2-concentration in ppm; default is 400\n    - *timestep*:                     simulation timestep [s]; default is 360\n    - *t_end*:                        end time of the simulation\n\nAll parameters can be set on initialization or afterwards.\n* Parameters can be Timeseries objects\n\n- run a simulation:\n\n.. code-block:: python\n\n    res = sim.calculate()\n\n- display simulation results:\n    res.plot()\n\n\nTimeseries Objects:\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- A Timeseries handles data and returns a value / values for a time [s]. A Timeseries can handle static values (int, float, etc..), numpy arrays (first column has to be the time in [s]) or pd.Dataframes (index must be the time).\n\n- Timeseries objects can interpolate Data in different ways. To specify interpolation scheme pass keyword *interpolation_scheme* with:\n    - 'linear': linear interpolation\n    - 'previous': closest previous value (for example for persons)\n\n- Create a timeseries object with static value (integer):\n\n.. code-block:: python\n\n    n_persons = Timeseries(data=1)\n\n\n- Create a timeseries object with np.array:\n\n.. code-block:: python\n\n    array = array = np.empty((2,100))\n    array[0,:] = np.arange(array.shape[1])\n    array[1,:] = np.random.rand(array.shape[1])\n    n_persons = Timeseries(data=array)\n\n\n- Create a timeseries object with pd.Dataframe:\n\n.. code-block:: python\n\n    array = array = np.empty((2,100))\n    array[0,:] = np.arange(array.shape[1])\n    array[1,:] = np.random.rand(array.shape[1])\n\n    df = pd.DataFrame({'Time': array[0,:],\n                       'n_persons': array[1,:]})\n    df.set_index('Time', inplace=True)\n\n    n_persons = Timeseries(data=array, interpolation_scheme='linear')\n\n- Create a timeseries object from .csv file:\n\n.. code-block:: python\n\n    n_persons = Timeseries.from_csv('test.csv', interpolation_scheme='previous')\n\n\nWindows:\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn the Simulation windows can be added. Windows create additional air change in the zone dependent of the indoor- and outdoor-temperatures, the opening state and the geometry.\n\nThe window can have three states:\n    - 0: closed\n    - 1: tilted\n    - 2: opened\n\nThe window has the following parameters:\n    - hight:    the hight of the window [m]; default is 1\n    - area:     the area of the window [m²]; default is 1\n    - state:    state of the window; 0: closed, 1: tilted; 2: opened; default is 0 (closed)\n    - c_ref:    Austauschkoeffizient [m^0.5 / h * K^0.5], default is 100\n    - a_tilted: effective ventilation area for tilted window [m²]; default is calculated from the window geometry\n    - a_opened: effective ventilation area for opened window [m²]; default is calculated from the window geometry\n\n- Create a window:\n\n\n.. code-block:: python\n\n    from src.bph_co2.window import Window\n\n    window_state = Timeseries.from_csv('window_state.csv', interpolation_scheme='previous')\n\n    window = Window(hight=1,\n                    area=1,\n                    state=window_state)\n\n- Add window to the simulation:\n\nThe windows are specified as a list of window objects:\n\n.. code-block:: python\n\n    sim.windows = [window]\n\n\n\n\n\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bph2-co2",
    "package_url": "https://pypi.org/project/bph2-co2/",
    "platform": "",
    "project_url": "https://pypi.org/project/bph2-co2/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/bph2-co2/1.0.4/",
    "requires_dist": [
      "pandas",
      "numpy",
      "pandasgui",
      "progress"
    ],
    "requires_python": ">=3.7",
    "summary": "Educational tool for co2_concentration simulations",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8651738,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "265416eb28c820d16e06044fdcbdfbe9c7332049ae19a6c4fb8c0541ee70a796",
          "md5": "d9d4c6883582eff37fd9d63d5c9fb256",
          "sha256": "7416aa83fc9130aa6a6bcbbab7229132df6b057aedc92ce59594585bd59fad2c"
        },
        "downloads": -1,
        "filename": "bph2_co2-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9d4c6883582eff37fd9d63d5c9fb256",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8792,
        "upload_time": "2020-11-06T13:53:34",
        "upload_time_iso_8601": "2020-11-06T13:53:34.095174Z",
        "url": "https://files.pythonhosted.org/packages/26/54/16eb28c820d16e06044fdcbdfbe9c7332049ae19a6c4fb8c0541ee70a796/bph2_co2-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dddc9ec459b35bad6a7f8d3d0457cfe85a920ec3aaf53c9b567a547b00eae0b0",
          "md5": "79fddad85fda9cc30ebb8b98e4645fa5",
          "sha256": "9552dc50150dd10506a2ff654c470be1db3323ed9e7a0162829a1d7841bcd535"
        },
        "downloads": -1,
        "filename": "bph2_co2-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "79fddad85fda9cc30ebb8b98e4645fa5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9451,
        "upload_time": "2020-11-06T13:53:45",
        "upload_time_iso_8601": "2020-11-06T13:53:45.566579Z",
        "url": "https://files.pythonhosted.org/packages/dd/dc/9ec459b35bad6a7f8d3d0457cfe85a920ec3aaf53c9b567a547b00eae0b0/bph2_co2-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "757a288735f6e6c0e91188892c2204e17c29f435d76722f9e71503f93a0ace3d",
          "md5": "acf8218e7893a454a09ad298d26e9139",
          "sha256": "ab12665777e9ca6c0208289513fb9fda5c5bf22f8767131cfd8e9b62e302b145"
        },
        "downloads": -1,
        "filename": "bph2_co2-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "acf8218e7893a454a09ad298d26e9139",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9252,
        "upload_time": "2020-11-06T14:01:39",
        "upload_time_iso_8601": "2020-11-06T14:01:39.834546Z",
        "url": "https://files.pythonhosted.org/packages/75/7a/288735f6e6c0e91188892c2204e17c29f435d76722f9e71503f93a0ace3d/bph2_co2-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2a6348d2c8a1f91c2261c8120593d20164702e6a38e75e4e3f73361d8d40835",
          "md5": "a458bdc57929c52967142d3f2bfab27d",
          "sha256": "8cd7c8a55300fc0d35014b72edc5faf1a930f68d433b29aa2c5a2d22c14d1b5b"
        },
        "downloads": -1,
        "filename": "bph2_co2-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a458bdc57929c52967142d3f2bfab27d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10961,
        "upload_time": "2020-11-06T14:01:43",
        "upload_time_iso_8601": "2020-11-06T14:01:43.606781Z",
        "url": "https://files.pythonhosted.org/packages/d2/a6/348d2c8a1f91c2261c8120593d20164702e6a38e75e4e3f73361d8d40835/bph2_co2-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1a9b5e8e5f6c2b00882c51eb9fc9c3bad233c6b709bbfb37356c694598cebda",
          "md5": "163d4d988bd8bf6fcadd46c07cf7554f",
          "sha256": "25f0e8350f060d30273b6a021ef122c1ee97475ff551cc19903520921b0d320a"
        },
        "downloads": -1,
        "filename": "bph2_co2-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "163d4d988bd8bf6fcadd46c07cf7554f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13131,
        "upload_time": "2020-11-06T14:21:41",
        "upload_time_iso_8601": "2020-11-06T14:21:41.382781Z",
        "url": "https://files.pythonhosted.org/packages/f1/a9/b5e8e5f6c2b00882c51eb9fc9c3bad233c6b709bbfb37356c694598cebda/bph2_co2-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6596ea13d1499568c2ff363ac61f8bf26f22e0546064411e6f130e2c96bd67c2",
          "md5": "cdb10377ab98f886e7197d9e26842730",
          "sha256": "e43a0abe2829f3eb266ac945b95a49a31da9608269f3eb645cf804e5d0887d5a"
        },
        "downloads": -1,
        "filename": "bph2_co2-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cdb10377ab98f886e7197d9e26842730",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13505,
        "upload_time": "2020-11-06T14:21:46",
        "upload_time_iso_8601": "2020-11-06T14:21:46.363143Z",
        "url": "https://files.pythonhosted.org/packages/65/96/ea13d1499568c2ff363ac61f8bf26f22e0546064411e6f130e2c96bd67c2/bph2_co2-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ec06fe79cc90da0b0c8ff9fe3cee4fefcff604b26f44e54315980c5526e373c",
          "md5": "d504a9159bfffa0ab71670d3ad08109f",
          "sha256": "b5592ad550bcc8259800aec7a5757ba2916bfb8637a7a502001e1062a5a52e8c"
        },
        "downloads": -1,
        "filename": "bph2_co2-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d504a9159bfffa0ab71670d3ad08109f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23919,
        "upload_time": "2020-11-13T09:21:45",
        "upload_time_iso_8601": "2020-11-13T09:21:45.734159Z",
        "url": "https://files.pythonhosted.org/packages/3e/c0/6fe79cc90da0b0c8ff9fe3cee4fefcff604b26f44e54315980c5526e373c/bph2_co2-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba132b663d4f2ce0e2dcadd5d152426ff85309043c76d4608b2f29d6b2353aff",
          "md5": "d47bc0c728d58279480efb5fd60e7e07",
          "sha256": "5d06cf9b1eda1dd96e1bb52662b88475a7c85646e7e80bb63f5aa8a8cbe2013f"
        },
        "downloads": -1,
        "filename": "bph2_co2-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d47bc0c728d58279480efb5fd60e7e07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 21775,
        "upload_time": "2020-11-13T09:21:49",
        "upload_time_iso_8601": "2020-11-13T09:21:49.710656Z",
        "url": "https://files.pythonhosted.org/packages/ba/13/2b663d4f2ce0e2dcadd5d152426ff85309043c76d4608b2f29d6b2353aff/bph2_co2-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a5bc9cf18455c6f78391236aa178de0e925e9c2259585cecab38a6abd3ee03d",
          "md5": "f2c5888f38325759c3a56ce4d80fbfe2",
          "sha256": "d9662bba3ab994f08b6ae2f5ed75c842462000c07945311bc7757ee4ed1c8efa"
        },
        "downloads": -1,
        "filename": "bph2_co2-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2c5888f38325759c3a56ce4d80fbfe2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23907,
        "upload_time": "2020-11-13T15:03:27",
        "upload_time_iso_8601": "2020-11-13T15:03:27.320268Z",
        "url": "https://files.pythonhosted.org/packages/0a/5b/c9cf18455c6f78391236aa178de0e925e9c2259585cecab38a6abd3ee03d/bph2_co2-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd1e7985972c209e73eaff5bebd06c6e373ebef0a8bf828993789e8659c0b06f",
          "md5": "2f121da573d3b75e27d3c8e59cce18f8",
          "sha256": "ebc2db575bb405ba5e8994ac469a777cd72b2fd6e4caa0cd125cb390bd764828"
        },
        "downloads": -1,
        "filename": "bph2_co2-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2f121da573d3b75e27d3c8e59cce18f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 21786,
        "upload_time": "2020-11-13T15:03:33",
        "upload_time_iso_8601": "2020-11-13T15:03:33.069139Z",
        "url": "https://files.pythonhosted.org/packages/bd/1e/7985972c209e73eaff5bebd06c6e373ebef0a8bf828993789e8659c0b06f/bph2_co2-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a5bc9cf18455c6f78391236aa178de0e925e9c2259585cecab38a6abd3ee03d",
        "md5": "f2c5888f38325759c3a56ce4d80fbfe2",
        "sha256": "d9662bba3ab994f08b6ae2f5ed75c842462000c07945311bc7757ee4ed1c8efa"
      },
      "downloads": -1,
      "filename": "bph2_co2-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f2c5888f38325759c3a56ce4d80fbfe2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 23907,
      "upload_time": "2020-11-13T15:03:27",
      "upload_time_iso_8601": "2020-11-13T15:03:27.320268Z",
      "url": "https://files.pythonhosted.org/packages/0a/5b/c9cf18455c6f78391236aa178de0e925e9c2259585cecab38a6abd3ee03d/bph2_co2-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd1e7985972c209e73eaff5bebd06c6e373ebef0a8bf828993789e8659c0b06f",
        "md5": "2f121da573d3b75e27d3c8e59cce18f8",
        "sha256": "ebc2db575bb405ba5e8994ac469a777cd72b2fd6e4caa0cd125cb390bd764828"
      },
      "downloads": -1,
      "filename": "bph2_co2-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "2f121da573d3b75e27d3c8e59cce18f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 21786,
      "upload_time": "2020-11-13T15:03:33",
      "upload_time_iso_8601": "2020-11-13T15:03:33.069139Z",
      "url": "https://files.pythonhosted.org/packages/bd/1e/7985972c209e73eaff5bebd06c6e373ebef0a8bf828993789e8659c0b06f/bph2_co2-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}