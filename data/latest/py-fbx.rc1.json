{
  "info": {
    "author": "Arcadium",
    "author_email": "sophie.bissaker@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Topic :: Artistic Software",
      "Topic :: Multimedia :: Graphics :: 3D Modeling",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "pyfbx\n======\n\nA simple-to-use wrapper for Autodesk Python FBX SDK.\n\nCredit to @jochasinga for the original library.\n\nFBX\n---\n> FBX(Filmbox) is a proprietary file format (.fbx) developed by \n> Kaydara and owned by [Autodesk](https://en.wikipedia.org/wiki/Autodesk) \n> since 2006. It is used to provide interoperability between digital\n> content creation applications. \n>\n> from [Wikipedia](https://en.wikipedia.org/wiki/FBX)\n\nWhy another wrapper?\n--------------------\nI have had a chance to work on a project which needed Python to generate\nFBX file for Maya. Autodesk did a rather poor job at its Python FBX SDK such as:\n\n+ Lack of documentation\n+ C-style APIs instead of Pythonic\n+ Tedious wrapper classes i.e. `FbxDouble3` to wrap around C++ array.\n\nWhy build ANOTHER wrapper?\n--------------------------\nSimple put, having to compile and build FBX was a nightmare so I thought I'd provide the \nappropriate platform for people to fork and add their own distributions.\n\nThis is specifically, right now, for Win 32 bit, but can easily be built for linux too (will just need to test)\n\nHow it works\n------------\nClasses in *pyfbx* does not inherit the original classes from the SDK. Each instance\nof the class have a private property `_me` which interact with the original class's \ninstance while pyfbx \"floats\" above i.e.\n\n```python\n\nfrom pyfbx import *\n\nmanager = Manager()\nscene = Scene(manager)\nassert isinstance(scene, pyfbx.Scene)       # True\nassert isinstance(scene._me, fbx.FbxScene)  # True\n\n```\n\nInstall\n-------\n\n```bash\n\ngit clone https://github.com/nannafudge/pyfbx\ncd pyfbx && python setup.py install\n\n```\n\nExamples\n--------\n\n```python\n\nfrom pyfbx import * \n\nmanager = Manager()\nscene = Scene(manager)\nnode = Node(manager)\nmesh = Mesh(manager)\n\n# Set mesh attributes \n\nnode.add_attribute(mesh)\nscene.root_node.add_child(node)\n\n```\n\nHowever, since `Manager` and `Scene` is a singleton in charge of all the  nodes, it makes \nsense for them to be atomic.\n\n```python\n\nmanager = Manager()\nmanager.create_scene()    # equivalent to `Scene(manager)`\nmanager.create_node()     # equivalent to `Node(manager)`\nscene = manager.scene\nscene.create_node()       # equivalent to `Node(scene)\n\n```\n\nNode Tree\n---------\n\nFBX depends on node hierachy, with the scene's root node acting as the descendent of all. While\nyou can always use the underlying API to traverse through nodes in the scene, `Node` also keeps\ntrack of its children using simple list.\n\n```python\n\nfrom pyfbx import *\n\nmanager = Manager()\np_node = Node(manager, \"parent_node\")\nnode.add_child(Node(manager, \"child_node_1\"))\nnode.add_child(Node(manager, \"child_node_2\"))\n\nassert p_node.children[0].name == \"child_node_1\"\n\nc_node_1 = node.children[0]\nc_node_1.add_child(Node(manager, \"grandchild_node\"))\n\nassert p_node.children[0].children[0].name == \"grandchild_node\"\n\n```\n\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nannafudge/pyfbx",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-fbx",
    "package_url": "https://pypi.org/project/py-fbx/",
    "platform": "windows",
    "project_url": "https://pypi.org/project/py-fbx/",
    "project_urls": {
      "Homepage": "https://github.com/nannafudge/pyfbx"
    },
    "release_url": "https://pypi.org/project/py-fbx/0.1.1/",
    "requires_dist": [
      "setuptools (>=38.3)",
      "pytest",
      "wheel",
      "sip (==4.19.7)"
    ],
    "requires_python": "",
    "summary": "A simple-to-use Python wrapper for FBX, now with included libraries for even less setup (Windows 32 bit Only :( )",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7344409,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d910eb1fa9d4b03d50ba332901befb2489230d9dd7dbec4539530d55fd6b8cae",
          "md5": "be9e6a629e1b67c31f68483eced112ac",
          "sha256": "a473271d1cb69d784a29419ed79165131acdbeb79504124601970c20f1f8c0f2"
        },
        "downloads": -1,
        "filename": "py_fbx-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be9e6a629e1b67c31f68483eced112ac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2912263,
        "upload_time": "2020-05-28T13:25:22",
        "upload_time_iso_8601": "2020-05-28T13:25:22.639643Z",
        "url": "https://files.pythonhosted.org/packages/d9/10/eb1fa9d4b03d50ba332901befb2489230d9dd7dbec4539530d55fd6b8cae/py_fbx-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d910eb1fa9d4b03d50ba332901befb2489230d9dd7dbec4539530d55fd6b8cae",
        "md5": "be9e6a629e1b67c31f68483eced112ac",
        "sha256": "a473271d1cb69d784a29419ed79165131acdbeb79504124601970c20f1f8c0f2"
      },
      "downloads": -1,
      "filename": "py_fbx-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "be9e6a629e1b67c31f68483eced112ac",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 2912263,
      "upload_time": "2020-05-28T13:25:22",
      "upload_time_iso_8601": "2020-05-28T13:25:22.639643Z",
      "url": "https://files.pythonhosted.org/packages/d9/10/eb1fa9d4b03d50ba332901befb2489230d9dd7dbec4539530d55fd6b8cae/py_fbx-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}