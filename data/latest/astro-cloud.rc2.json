{
  "info": {
    "author": "Joseph Curtin <42@jbcurtin.io",
    "author_email": "astro-cloud@jbcurtin.io",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# astro-cloud\n\n`astro-cloud` provides three API tiers to access large files from numerous Static Storage Provides. Initial release\nof this software includes support for loading FITS headers from Amazon Web Services Static Storage Service or an service\nwith HTTP loaded onto it\n\n## Install\n\n```\n$ pip install -U astro-cloud\n```\n\n## Let's access FITS Headers from the Transiting Exoplanet Survey Satellite\n\nRegistry of Open Data on AWS provides a bucket called `stpubdata`. It contains data uploaded from the [Transiting\nExoplanet Survey Satellite](https://tess.mit.edu/). The type of data files we'll be working with in this tutoral are\nabout 44GB. If we downloaded or scanned the entire file, it'll cost about $1.05. Instead `astro-cloud` scans the headers\nof the FITS files and calculates the data offsets, then jumps to the next header and downloads that until all headers\nhave been found\n\n```\n#!/usr/bin/env python\n\nfrom astro_cloud.fits import load_headers, CloudService, PaymentSolution\n\nurl = 'https://s3.us-east-1.amazonaws.com/stpubdata/tess/public/mast/tess-s0022-4-4-cube.fits'\nfor header in load_headers(url, CloudService.S3, PaymentSolution.AWSRequestPayer):\n    if header.fits.get('SIMPLE', False) is True:\n        header_keys = [key for key in header.fits.keys()]\n        print(f'Primary Header: {len(header_keys)}')\n\n    else:\n        xtension = header.fits['XTENSION']\n        header_keys = [key for key in header.fits.keys()]\n        print(f'{xtension} Header Key Length: {len(header_keys)}')\n\n```\n\n## Dedication to Performance\n\n`astro-cloud` returns as many `astropy` datatypes as possible. Where ever possible everything is kept in memory and\nnever touches disk to help keep operations running quickly without much slowdown. There are also plans to implement\ncluster computing frameworks such as DASK and Python `mulitprocessing` module.\n\n## Maintenance\n\nPlease feel welcome to open a conversation with me on `astropy` slack channel and tell me how you'd like to use this package!\n\nhttp://astropy-slack-invite.herokuapp.com/\n\nI'll be in the `#fits` channel\n\n\n## File Format Specific API Tier\n\n`astro-cloud` three API tiers provides access to perform complex operations on files being accessed from a Static Service Provider.\nThe highest being an implemantion of authentication layers for all major Static Storage Provides.\n\n* Amazon Web Services: Simple Storage Service ( AWS: S3 )\n* Digital Ocean: Spaces ( Spaces by Digital Ocean ) [ planned support ]\n* Google Compute Plateform: Object Storage ( GCP: Object Storage ) [ planned support ]\n* Microsoft Azure: Blob Storage ( Azure: Blob Storage ) [ planned support ]\n\n### Flexible Image Transport System Examples\n\n#### AWS S3\n\nLets load headers from a FITS file on AWS S3 inside the bucket `stpubdata`\n\n```\n#!/usr/bin/env python\n\nfrom astro_cloud.fits import load_headers, CloudService, PaymentSolution\n\nurl = 'https://s3.us-east-1.amazonaws.com/stpubdata/tess/public/mast/tess-s0022-4-4-cube.fits'\nfor header in load_headers(url, CloudService.S3, PaymentSolution.AWSRequestPayer):\n    print(header.fits.get('XTENSION'))\n\n```\n\n#### Low Level Cloud API\n\nDownloading a whole FITS file from a Static Storage Provider is possible to. `astro-cloud` uses the HTTP Header `Range`\nto request partial content from a provider or service. We can bypass that by using `psf/requests` instead of `load_headers`.\n\n```\n#!/usr/bin/env python\nimport os\nimport requests\n\nfrom astro_cloud.auth.aws import AWSAuth\n\nfrom astropy.io import fits\n\nCHUNK_SIZE = 1024\nENCODING = 'utf-8'\nurl = 'https://s3.amazonaws.com/datum-storage.org/fits-files/502nmos.fits'\nfilename = os.path.basename(url)\nfilepath = f'/tmp/{filename}'\n\nresponse = requests.get(url, auth=AWSAuth(request_payer=True), headers={\n    'Range': 'bytes=0-2779',\n})\nassert response.status_code == 206\n\nprimary_header = fits.Header.fromstring(response.content.decode(ENCODING))\nassert primary_header['SIMPLE'] is True\n\n# Save the file to the file-system and load it with `fits.io`\nstreaming_response = requests.get(url, auth=AWSAuth(request_payer=True), headers={}, stream=True)\nassert streaming_response.status_code == 200\nwith open(filepath, 'wb') as file_stream:\n    for part in streaming_response.iter_content(CHUNK_SIZE):\n        file_stream.write(part)\n\nfits_file = fits.open(filepath)\nprint(fits_file.info())\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jbcurtin/astro-cloud",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "astro-cloud",
    "package_url": "https://pypi.org/project/astro-cloud/",
    "platform": "",
    "project_url": "https://pypi.org/project/astro-cloud/",
    "project_urls": {
      "Homepage": "https://github.com/jbcurtin/astro-cloud"
    },
    "release_url": "https://pypi.org/project/astro-cloud/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A utility to make accessing static content in the cloud, efficient",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7984460,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3ee5dee33a38030d27f41d0ddce2d3a88fd1f39e901280dde9e4d0f4212a085",
          "md5": "c9c8f3ee7bfdf31b997bbfcf46ae012b",
          "sha256": "20cd2e3a4d3cd9656673cce9db8eba56acd1afde5442531b9f4188ca19d4e26e"
        },
        "downloads": -1,
        "filename": "astro-cloud-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c9c8f3ee7bfdf31b997bbfcf46ae012b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13139,
        "upload_time": "2020-08-18T01:55:47",
        "upload_time_iso_8601": "2020-08-18T01:55:47.860529Z",
        "url": "https://files.pythonhosted.org/packages/d3/ee/5dee33a38030d27f41d0ddce2d3a88fd1f39e901280dde9e4d0f4212a085/astro-cloud-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3b1bf16c4ad0ce81c86086408f358e94ee27f1ed21137010776e69f8ab3b2d9",
          "md5": "b26c756539ac7f0f289d74a5fae6da50",
          "sha256": "de25fa196353a36ff813a354783d80e49f89d5b647443c05d2f3d3c1fb182746"
        },
        "downloads": -1,
        "filename": "astro-cloud-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b26c756539ac7f0f289d74a5fae6da50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13205,
        "upload_time": "2020-08-18T02:21:13",
        "upload_time_iso_8601": "2020-08-18T02:21:13.791103Z",
        "url": "https://files.pythonhosted.org/packages/a3/b1/bf16c4ad0ce81c86086408f358e94ee27f1ed21137010776e69f8ab3b2d9/astro-cloud-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3b1bf16c4ad0ce81c86086408f358e94ee27f1ed21137010776e69f8ab3b2d9",
        "md5": "b26c756539ac7f0f289d74a5fae6da50",
        "sha256": "de25fa196353a36ff813a354783d80e49f89d5b647443c05d2f3d3c1fb182746"
      },
      "downloads": -1,
      "filename": "astro-cloud-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b26c756539ac7f0f289d74a5fae6da50",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13205,
      "upload_time": "2020-08-18T02:21:13",
      "upload_time_iso_8601": "2020-08-18T02:21:13.791103Z",
      "url": "https://files.pythonhosted.org/packages/a3/b1/bf16c4ad0ce81c86086408f358e94ee27f1ed21137010776e69f8ab3b2d9/astro-cloud-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}