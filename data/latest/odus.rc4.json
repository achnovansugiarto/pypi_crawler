{
  "info": {
    "author": "Thor Whalen",
    "author_email": "thorwhalen1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<h1>Table of Contents<span class=\"tocSkip\"></span></h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Introduction\" data-toc-modified-id=\"Introduction-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;</span>Introduction</a></span></li><li><span><a href=\"#Installation\" data-toc-modified-id=\"Installation-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;</span>Installation</a></span></li><li><span><a href=\"#Getting-some-resources\" data-toc-modified-id=\"Getting-some-resources-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;</span>Getting some resources</a></span></li><li><span><a href=\"#Poking-around\" data-toc-modified-id=\"Poking-around-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;</span>Poking around</a></span><ul class=\"toc-item\"><li><span><a href=\"#df_store\" data-toc-modified-id=\"df_store-4.1\"><span class=\"toc-item-num\">4.1&nbsp;&nbsp;</span>df_store</a></span></li><li><span><a href=\"#Viewing-trajectories\" data-toc-modified-id=\"Viewing-trajectories-4.2\"><span class=\"toc-item-num\">4.2&nbsp;&nbsp;</span>Viewing trajectories</a></span><ul class=\"toc-item\"><li><span><a href=\"#Viewing-a-single-trajectory\" data-toc-modified-id=\"Viewing-a-single-trajectory-4.2.1\"><span class=\"toc-item-num\">4.2.1&nbsp;&nbsp;</span>Viewing a single trajectory</a></span></li><li><span><a href=\"#Flip-over-all-(or-some)-trajectories\" data-toc-modified-id=\"Flip-over-all-(or-some)-trajectories-4.2.2\"><span class=\"toc-item-num\">4.2.2&nbsp;&nbsp;</span>Flip over all (or some) trajectories</a></span></li></ul></li><li><span><a href=\"#Making-a-pdf-of-trajectories\" data-toc-modified-id=\"Making-a-pdf-of-trajectories-4.3\"><span class=\"toc-item-num\">4.3&nbsp;&nbsp;</span>Making a pdf of trajectories</a></span></li><li><span><a href=\"#Demo-s-and-v\" data-toc-modified-id=\"Demo-s-and-v-4.4\"><span class=\"toc-item-num\">4.4&nbsp;&nbsp;</span>Demo s and v</a></span></li><li><span><a href=\"#cstore\" data-toc-modified-id=\"cstore-4.5\"><span class=\"toc-item-num\">4.5&nbsp;&nbsp;</span>cstore</a></span></li><li><span><a href=\"#pstore\" data-toc-modified-id=\"pstore-4.6\"><span class=\"toc-item-num\">4.6&nbsp;&nbsp;</span>pstore</a></span></li><li><span><a href=\"#Scrap-place\" data-toc-modified-id=\"Scrap-place-4.7\"><span class=\"toc-item-num\">4.7&nbsp;&nbsp;</span>Scrap place</a></span></li></ul></li><li><span><a href=\"#Potential-Calculus-Experimentations\" data-toc-modified-id=\"Potential-Calculus-Experimentations-5\"><span class=\"toc-item-num\">5&nbsp;&nbsp;</span>Potential Calculus Experimentations</a></span></li><li><span><a href=\"#Extra-scrap\" data-toc-modified-id=\"Extra-scrap-6\"><span class=\"toc-item-num\">6&nbsp;&nbsp;</span>Extra scrap</a></span></li></ul></div>\n\n\n```python\n# %load_ext autoreload\n# %autoreload 2\n```\n\n# Introduction\n\nODUS (for Older Drug User Study) contains data and tools to study the drug use of older drug users.\n\nEssentially, there are these are tools:\n\n- To get prepared data on the 119 \"trajectories\" describing 31 variables (drug use, social, etc.) over time of 119 different respondents.\n\n- To vizualize these trajectories in various ways\n\n- To create pdfs of any selection of these trajectories and variables\n\n- To make count tables for any combinations of the variables: Essential step of any Markovian or Bayesian analysis.\n\n- To make probability (joint or conditional) tables from any combination of the variables\n\n- To operate on these count and probability tables, thus enabling inference operations\n\n\n# Installation\n\nYou need to have python 3.7+ to run this notebook.\n\nAnd you'll need to have `odus`, which you get by doing\n\n```\npip install odus\n```\n\n(And if you don't have pip then, well... how to put it... ha ha ha!)\n\nBut if you're the type, you can also just get the source from `https://github.com/thorwhalen/odus`. \n\nOh, and pull requests etc. are welcome!\n\nStars, likes, references, and coffee also welcome.\n\nAnd if you want to donate: Donate to a charity that will help the people understand and make policies surrounding the use of substances.\n\nA simple flowchart about the architecture:\n\n<img src=\"odus_store.png\" width=800 height=200>\n\n# Getting some resources\n\n\n```python\nfrom matplotlib.pylab import *\nfrom numpy import *\nimport seaborn as sns\n\nimport os\nfrom py2store.stores.local_store import RelativePathFormatStore\nfrom py2store.mixins import ReadOnlyMixin\nfrom py2store.base import Store\n\n\nfrom io import BytesIO\nfrom spyn.ppi.pot import Pot, ProbPot\nfrom collections import UserDict, Counter\nimport numpy as np\nimport pandas as pd\n\nfrom ut.ml.feature_extraction.sequential_var_sets import PVar, VarSet, DfData, VarSetFactory\nfrom IPython.display import Image\n\nfrom odus.analysis_utils import *\n\nfrom odus.dacc import DfStore, counts_of_kps, Dacc, VarSetCountsStore, \\\n    mk_pvar_struct, PotStore, _commun_columns_of_dfs, Struct, mk_pvar_str_struct, VarStr\n\nfrom odus.plot_utils import plot_life_course\n```\n\n\n```python\nfrom odus import data_dir, data_path_of\nsurvey_dir = data_dir\ndata_dir\n```\n\n\n\n\n    '/D/Dropbox/dev/p3/proj/odus/odus/data'\n\n\n\n\n```python\ndf_store = DfStore(data_dir + '/{}.xlsx')\nlen(df_store)\ncstore = VarSetCountsStore(df_store)\nv = mk_pvar_struct(df_store, only_for_cols_in_all_dfs=True)\ns = mk_pvar_str_struct(v)\nf, df = cstore.df_store.head()\npstore = PotStore(df_store)\n```\n\n# Poking around\n\n## df_store\n\nA df_store is a key-value store where the key is the xls file and the value is the prepared dataframe\n\n\n```python\nlen(df_store)\n```\n\n\n\n\n    119\n\n\n\n\n```python\nit = iter(df_store.values())\nfor i in range(5):  # skip five first\n    _ = next(it)\ndf = next(it)  # get the one I want\ndf.head(3)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>category</th>\n      <th>RURAL</th>\n      <th>SUBURBAN</th>\n      <th>URBAN/CITY</th>\n      <th>HOMELESS</th>\n      <th>INCARCERATION</th>\n      <th>WORK</th>\n      <th>SON/DAUGHTER</th>\n      <th>SIBLING</th>\n      <th>FATHER/MOTHER</th>\n      <th>SPOUSE</th>\n      <th>...</th>\n      <th>METHAMPHETAMINE</th>\n      <th>AS PRESCRIBED OPIOID</th>\n      <th>NOT AS PRESCRIBED OPIOID</th>\n      <th>HEROIN</th>\n      <th>OTHER OPIOID</th>\n      <th>INJECTED</th>\n      <th>IN TREATMENT</th>\n      <th>Selects States below</th>\n      <th>Georgia</th>\n      <th>Pennsylvania</th>\n    </tr>\n    <tr>\n      <th>age</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>11</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows Ã— 31 columns</p>\n</div>\n\n\n\n\n```python\nprint(df.columns.values)\n```\n\n    ['RURAL' 'SUBURBAN' 'URBAN/CITY' 'HOMELESS' 'INCARCERATION' 'WORK'\n     'SON/DAUGHTER' 'SIBLING' 'FATHER/MOTHER' 'SPOUSE'\n     'OTHER (WHO?, FILL IN BRACKETS HERE)' 'FRIEND USER' 'FRIEND NON USER'\n     'MENTAL ILLNESS' 'PHYSICAL ILLNESS' 'LOSS OF LOVED ONE' 'TOBACCO'\n     'MARIJUANA' 'ALCOHOL' 'HAL/LSD/XTC/CLUBDRUG' 'COCAINE/CRACK'\n     'METHAMPHETAMINE' 'AS PRESCRIBED OPIOID' 'NOT AS PRESCRIBED OPIOID'\n     'HEROIN' 'OTHER OPIOID' 'INJECTED' 'IN TREATMENT' 'Selects States below'\n     'Georgia' 'Pennsylvania']\n\n\n\n```python\nt = df[['ALCOHOL', 'TOBACCO']]\nt.head(3)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>category</th>\n      <th>ALCOHOL</th>\n      <th>TOBACCO</th>\n    </tr>\n    <tr>\n      <th>age</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>11</th>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\nc = Counter()\nfor i, r in t.iterrows():\n    c.update([tuple(r.to_list())])\nc\n```\n\n\n\n\n    Counter({(0, 0): 6, (1, 0): 4, (1, 1): 9, (0, 1): 2})\n\n\n\n\n```python\ndef count_tuples(dataframe):\n    c = Counter()\n    for i, r in dataframe.iterrows():\n        c.update([tuple(r.to_list())])\n    return c\n```\n\n\n```python\nfields = ['ALCOHOL', 'TOBACCO']\n# do it for every one\nc = Counter()\nfor df in df_store.values():\n    c.update(count_tuples(df[fields]))\nc\n```\n\n\n\n\n    Counter({(0, 1): 903, (1, 1): 1343, (0, 0): 240, (1, 0): 179})\n\n\n\n\n```python\npd.Series(c)\n```\n\n\n\n\n    0  1     903\n    1  1    1343\n    0  0     240\n    1  0     179\n    dtype: int64\n\n\n\n\n```python\n# Powerful! You can use that with several pairs and get some nice probabilities. Look up Naive Bayes.\n```\n\n## Viewing trajectories\n\n\n```python\nimport itertools\nfrom functools import partial\nfrom odus.util import write_images\nfrom odus.plot_utils import plot_life, life_plots, write_trajectories_to_file\n\nihead = lambda it: itertools.islice(it, 0, 5)\n```\n\n### Viewing a single trajectory\n\n\n```python\nk = next(iter(df_store))  # get the first key\nprint(f\"k: {k}\")  # print it\nplot_life(df_store[k])  # plot the trajectory\n```\n\n    k: surveys/B24.xlsx\n\n\n\n![png](img/output_26_1.png)\n\n\n\n```python\nplot_life(df_store[k], fields=[s.in_treatment, s.injected])  # only want two fields\n```\n\n\n![png](img/output_27_0.png)\n\n\n### Flip over all (or some) trajectories\n\n\n```python\ngen = life_plots(df_store)\n```\n\n\n```python\nnext(gen)  # launch to get the next trajectory\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x12b21f070>\n\n\n\n\n![png](img/output_30_1.png)\n\n\nGet three trajectories, but only over two fields.\n\n\n```python\n# fields = [s.in_treatment, s.injected]\nfields = [s.physical_illness, s.as_prescribed_opioid, s.heroin, s.other_opioid]\nkeys = list(df_store)[:10]\n# print(f\"keys={keys}\")\naxs = [x for x in life_plots(df_store, fields, keys=keys)];\n```\n\n\n![png](img/output_32_0.png)\n\n\n\n![png](img/output_32_1.png)\n\n\n\n![png](img/output_32_2.png)\n\n\n\n![png](img/output_32_3.png)\n\n\n\n![png](img/output_32_4.png)\n\n\n\n![png](img/output_32_5.png)\n\n\n\n![png](img/output_32_6.png)\n\n\n\n![png](img/output_32_7.png)\n\n\n\n![png](img/output_32_8.png)\n\n\n\n![png](img/output_32_9.png)\n\n\n## Making a pdf of trajectories\n\n\n```python\nwrite_trajectories_to_file(df_store, fields, keys, fp='three_respondents_two_fields.pdf');\n```\n\n\n```python\nwrite_trajectories_to_file(df_store, fp='all_respondents_all_fields.pdf');\n```\n\n\n```python\n\n```\n\n## Demo s and v\n\n\n```python\nprint(list(filter(lambda x: not x.startswith('__'), dir(s))))\n```\n\n    ['alcohol', 'as_prescribed_opioid', 'cocaine_crack', 'father_mother', 'hal_lsd_xtc_clubdrug', 'heroin', 'homeless', 'in_treatment', 'incarceration', 'injected', 'loss_of_loved_one', 'marijuana', 'mental_illness', 'methamphetamine', 'not_as_prescribed_opioid', 'other_opioid', 'physical_illness', 'rural', 'sibling', 'son_daughter', 'suburban', 'tobacco', 'urban_city', 'work']\n\n\n\n```python\ns.heroin\n```\n\n\n\n\n    'HEROIN'\n\n\n\n\n```python\nv.heroin\n```\n\n\n\n\n    PVar('HEROIN', 0)\n\n\n\n\n```python\nv.heroin - 1\n```\n\n\n\n\n    PVar('HEROIN', -1)\n\n\n\n## cstore\n\n\n```python\n# cstore[v.alcohol, v.tobacco]\ncstore[v.as_prescribed_opioid-1, v.heroin]\n```\n\n\n\n\n    Counter({(0, 0): 1026, (1, 0): 264, (0, 1): 1108, (1, 1): 148})\n\n\n\n\n```python\npd.Series(cstore[v.as_prescribed_opioid-1, v.heroin])\n```\n\n\n\n\n    0  0    1026\n    1  0     264\n    0  1    1108\n    1  1     148\n    dtype: int64\n\n\n\n\n```python\ncstore[v.alcohol, v.tobacco, v.heroin]\n```\n\n\n\n\n    Counter({(0, 0, 1): 427,\n             (1, 0, 1): 656,\n             (1, 1, 1): 687,\n             (0, 0, 0): 189,\n             (0, 1, 1): 476,\n             (0, 1, 0): 51,\n             (1, 0, 0): 133,\n             (1, 1, 0): 46})\n\n\n\n\n```python\ncstore[v.alcohol-1, v.alcohol]\n```\n\n\n\n\n    Counter({(0, 0): 994, (1, 1): 1375, (1, 0): 90, (0, 1): 87})\n\n\n\n\n```python\ncstore[v.alcohol-1, v.alcohol, v.tobacco]\n```\n\n\n\n\n    Counter({(0, 0, 1): 807,\n             (1, 1, 1): 1220,\n             (1, 0, 0): 26,\n             (0, 1, 1): 76,\n             (0, 0, 0): 187,\n             (1, 1, 0): 155,\n             (0, 1, 0): 11,\n             (1, 0, 1): 64})\n\n\n\n\n```python\nt = pd.Series(cstore[v.alcohol-1, v.alcohol, v.tobacco])\nt.loc[t.index]\n```\n\n\n\n\n    <pandas.core.indexing._LocIndexer at 0x130955db0>\n\n\n\n## pstore\n\n\n```python\nt = pstore[s.alcohol-1, s.alcohol]\nt\n```\n\n\n\n\n                       pval\n    ALCOHOL-1 ALCOHOL      \n    0         0         994\n              1          87\n    1         0          90\n              1        1375\n\n\n\n\n```python\nt.tb\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ALCOHOL-1</th>\n      <th>ALCOHOL</th>\n      <th>pval</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th></th>\n      <td>0</td>\n      <td>0</td>\n      <td>994</td>\n    </tr>\n    <tr>\n      <th></th>\n      <td>0</td>\n      <td>1</td>\n      <td>87</td>\n    </tr>\n    <tr>\n      <th></th>\n      <td>1</td>\n      <td>0</td>\n      <td>90</td>\n    </tr>\n    <tr>\n      <th></th>\n      <td>1</td>\n      <td>1</td>\n      <td>1375</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\nt / []\n```\n\n\n\n\n                           pval\n    ALCOHOL-1 ALCOHOL          \n    0         0        0.390416\n              1        0.034171\n    1         0        0.035350\n              1        0.540063\n\n\n\n\n```python\nt[s.alcohol-1]\n```\n\n\n\n\n               pval\n    ALCOHOL-1      \n    0          1081\n    1          1465\n\n\n\n\n```python\nt / t[s.alcohol-1]  # cond prob!\n```\n\n\n\n\n                           pval\n    ALCOHOL-1 ALCOHOL          \n    0         0        0.919519\n              1        0.080481\n    1         0        0.061433\n              1        0.938567\n\n\n\n\n```python\ntt = pstore[s.alcohol, s.tobacco]\ntt\n```\n\n\n\n\n                     pval\n    ALCOHOL TOBACCO      \n    0       0         240\n            1         903\n    1       0         179\n            1        1343\n\n\n\n\n```python\ntt / tt[s.alcohol]\n```\n\n\n\n\n                         pval\n    ALCOHOL TOBACCO          \n    0       0        0.209974\n            1        0.790026\n    1       0        0.117608\n            1        0.882392\n\n\n\n\n```python\ntt / tt[s.tobacco]\n```\n\n\n\n\n                         pval\n    ALCOHOL TOBACCO          \n    0       0        0.572792\n    1       0        0.427208\n    0       1        0.402048\n    1       1        0.597952\n\n\n\n\n```python\n\n```\n\n## Scrap place\n\n\n```python\nt = pstore[s.as_prescribed_opioid-1, s.heroin-1, s.heroin]\nt\n\n```\n\n\n\n\n                                            pval\n    AS PRESCRIBED OPIOID-1 HEROIN-1 HEROIN      \n    0                      0        0        927\n                                    1        172\n                           1        0         99\n                                    1        936\n    1                      0        0        249\n                                    1         33\n                           1        0         15\n                                    1        115\n\n\n\n\n```python\ntt = t / t[s.as_prescribed_opioid-1, s.heroin-1]  # cond prob!\ntt\n```\n\n\n\n\n                                                pval\n    AS PRESCRIBED OPIOID-1 HEROIN-1 HEROIN          \n    0                      0        0       0.843494\n                                    1       0.156506\n                           1        0       0.095652\n                                    1       0.904348\n    1                      0        0       0.882979\n                                    1       0.117021\n                           1        0       0.115385\n                                    1       0.884615\n\n\n\n\n```python\ntt.tb\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>AS PRESCRIBED OPIOID-1</th>\n      <th>HEROIN-1</th>\n      <th>HEROIN</th>\n      <th>pval</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th></th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.843494</td>\n    </tr>\n    <tr>\n      <th></th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.156506</td>\n    </tr>\n    <tr>\n      <th></th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0.095652</td>\n    </tr>\n    <tr>\n      <th></th>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0.904348</td>\n    </tr>\n    <tr>\n      <th></th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.882979</td>\n    </tr>\n    <tr>\n      <th></th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.117021</td>\n    </tr>\n    <tr>\n      <th></th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0.115385</td>\n    </tr>\n    <tr>\n      <th></th>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0.884615</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n```\nAS PRESCRIBED OPIOID-1\tHEROIN-1\tHEROIN\t\n0\t0\t0\t0.843494\n0\t0\t1\t0.156506\n1\t0\t0\t0.882979\n1\t0\t1\t0.117021\n```\n\n\n```python\n0.117021 / 0.156506\n```\n\n\n\n\n    0.7477093529960512\n\n\n\n\n```python\n\n```\n\n\n```python\nprob_of_heroin_given_presc_op = 0.359223\nprob_of_heroin_given_not_presc_op = 0.519213\n\nprob_of_heroin_given_presc_op / prob_of_heroin_given_not_presc_op\n```\n\n\n\n\n    0.6918605658949217\n\n\n\n\n```python\nprob_of_heroin_given_not_presc_op / prob_of_heroin_given_presc_op\n```\n\n\n\n\n    1.4453779407220584\n\n\n\n# Potential Calculus Experimentations\n\n\n```python\n# survey_dir = '/D/Dropbox/others/Miriam/python/ProcessedSurveys'\ndf_store = DfStore(survey_dir + '/{}.xlsx')\nlen(df_store)\n```\n\n\n\n\n    119\n\n\n\n\n```python\ncstore = VarSetCountsStore(df_store)\nv = mk_pvar_struct(df_store, only_for_cols_in_all_dfs=True)\ns = mk_pvar_str_struct(v)\nf, df = cstore.df_store.head()\ndf.head(3)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>category</th>\n      <th>RURAL</th>\n      <th>SUBURBAN</th>\n      <th>URBAN/CITY</th>\n      <th>HOMELESS</th>\n      <th>INCARCERATION</th>\n      <th>WORK</th>\n      <th>SON/DAUGHTER</th>\n      <th>SIBLING</th>\n      <th>FATHER/MOTHER</th>\n      <th>SPOUSE</th>\n      <th>...</th>\n      <th>HAL/LSD/XTC/CLUBDRUG</th>\n      <th>COCAINE/CRACK</th>\n      <th>METHAMPHETAMINE</th>\n      <th>AS PRESCRIBED OPIOID</th>\n      <th>NOT AS PRESCRIBED OPIOID</th>\n      <th>HEROIN</th>\n      <th>OTHER OPIOID</th>\n      <th>INJECTED</th>\n      <th>IN TREATMENT</th>\n      <th>Massachusetts</th>\n    </tr>\n    <tr>\n      <th>age</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>16</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows Ã— 29 columns</p>\n</div>\n\n\n\n\n```python\ncstore = VarSetCountsStore(df_store)\ncstore.mk_pvar_attrs()\n```\n\n\n```python\nfrom odus.dacc import DfStore, counts_of_kps, Dacc, plot_life_course, VarSetCountsStore, mk_pvar_struct, PotStore\npstore = PotStore(df_store)\npstore.mk_pvar_attrs()\np = pstore[v.homeless - 1, v.incarceration]\np\n```\n\n\n\n\n                              pval\n    HOMELESS-1 INCARCERATION      \n    0          0              1690\n               1               577\n    1          0               192\n               1                87\n\n\n\n\n```python\np / []\n```\n\n\n\n\n                                  pval\n    HOMELESS-1 INCARCERATION          \n    0          0              0.663786\n               1              0.226630\n    1          0              0.075412\n               1              0.034171\n\n\n\n\n```python\npstore[v.incarceration]\n```\n\n\n\n\n                   pval\n    INCARCERATION      \n    0              1989\n    1               676\n\n\n\n\n```python\npstore[v.alcohol-1, v.loss_of_loved_one]\n```\n\n\n\n\n                                 pval\n    ALCOHOL-1 LOSS OF LOVED ONE      \n    0         0                   990\n              1                    91\n    1         0                  1321\n              1                   144\n\n\n\n\n```python\ntw = pstore[v.tobacco, v.work]\nmw = pstore[v.marijuana, v.work]\naw = pstore[v.alcohol, v.work]\nw = pstore[v.work]\n\n```\n\n\n```python\nevid_t = Pot.from_hard_evidence(**{s.tobacco: 1})\nevid_m = Pot.from_hard_evidence(**{s.marijuana: 1})\nevid_a = Pot.from_hard_evidence(**{s.alcohol: 1})\nevid_a\n```\n\n\n\n\n             pval\n    ALCOHOL      \n    1           1\n\n\n\n\n```python\naw\n```\n\n\n\n\n                  pval\n    ALCOHOL WORK      \n    0       0      431\n            1      712\n    1       0      448\n            1     1074\n\n\n\n\n```python\nw / []\n```\n\n\n\n\n              pval\n    WORK          \n    0     0.329831\n    1     0.670169\n\n\n\n\n```python\n(evid_m * mw) / []\n```\n\n\n\n\n                        pval\n    MARIJUANA WORK          \n    1         0     0.350603\n              1     0.649397\n\n\n\n\n```python\n(evid_t * tw) / []\n```\n\n\n\n\n                      pval\n    TOBACCO WORK          \n    1       0     0.313001\n            1     0.686999\n\n\n\n\n```python\n(evid_a * aw) / []\n```\n\n\n\n\n                     pval\n    ALCOHOL WORK         \n    1       0     0.29435\n            1     0.70565\n\n\n\n# Extra scrap\n\n\n```python\n# from graphviz import Digraph\n# Digraph(body=\"\"\"\n# raw -> data -> count -> prob\n# raw [label=\"excel files (one per respondent)\" shape=folder]\n# data [label=\"dataframes\" shape=folder]\n# count [label=\"counts for any combinations of the variables in the data\" shape=box3d]\n# prob [label=\"probabilities for any combinations of the variables in the data\" shape=box3d]\n# \"\"\".split('\\n'))\n```\n\n\n```python\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thorwhalen/odus",
    "keywords": "data,data access,drug use,markov,bayesian",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "odus",
    "package_url": "https://pypi.org/project/odus/",
    "platform": "any",
    "project_url": "https://pypi.org/project/odus/",
    "project_urls": {
      "Homepage": "https://github.com/thorwhalen/odus"
    },
    "release_url": "https://pypi.org/project/odus/0.0.6/",
    "requires_dist": [
      "py2store",
      "pandas",
      "numpy",
      "Pillow",
      "spyn",
      "matplotlib",
      "openpyxl",
      "argh"
    ],
    "requires_python": "",
    "summary": "Tools to provide easy access to prepared data to data scientists that can't be asked.",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7872817,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "545c314e6bd75cce4b45cfa5ff43a70ae97783a9f4c55b54b5874421db76e2c8",
          "md5": "66cb93763ca561805f64fcb5a6163188",
          "sha256": "0e3ab1c76df9b648112534048773c9611fbaa38831575c724ec6e59144fac86f"
        },
        "downloads": -1,
        "filename": "odus-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66cb93763ca561805f64fcb5a6163188",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1204,
        "upload_time": "2020-05-12T19:51:44",
        "upload_time_iso_8601": "2020-05-12T19:51:44.796662Z",
        "url": "https://files.pythonhosted.org/packages/54/5c/314e6bd75cce4b45cfa5ff43a70ae97783a9f4c55b54b5874421db76e2c8/odus-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6496703d2db924bce4c35daef3f2289bf3c4d793e1e1ed655969728a0ebfae80",
          "md5": "1802b832c802751a3ec9f9d5a59cc962",
          "sha256": "d8c345a55f5b07f1c53d62f7f72f5346df441c410f952eb7184f52367c4ae925"
        },
        "downloads": -1,
        "filename": "odus-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1802b832c802751a3ec9f9d5a59cc962",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1697,
        "upload_time": "2020-05-12T19:51:47",
        "upload_time_iso_8601": "2020-05-12T19:51:47.114601Z",
        "url": "https://files.pythonhosted.org/packages/64/96/703d2db924bce4c35daef3f2289bf3c4d793e1e1ed655969728a0ebfae80/odus-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6ba337ae3f8204b56312a4d55be33b6865da599a0a526b55d0ce394d9c9d8cb",
          "md5": "ae2ca71f7215d56a610399d7f1cec1a6",
          "sha256": "10d8a8a9aef138da0d54948a147d0ba0b410c9fca2bc98286c6a8d13c6e1ff47"
        },
        "downloads": -1,
        "filename": "odus-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ae2ca71f7215d56a610399d7f1cec1a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1224,
        "upload_time": "2020-07-05T23:52:16",
        "upload_time_iso_8601": "2020-07-05T23:52:16.090391Z",
        "url": "https://files.pythonhosted.org/packages/f6/ba/337ae3f8204b56312a4d55be33b6865da599a0a526b55d0ce394d9c9d8cb/odus-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dd9c620386320ec5d657cf3865bbc4df315bdf0eeb1709789cddb96ae428371",
          "md5": "2af71b49601ac02723bf38b480a8cf54",
          "sha256": "b02a21f2e2efa307cfa66b6ad89faa9029527664777ae4c43b25335fee0c5362"
        },
        "downloads": -1,
        "filename": "odus-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2af71b49601ac02723bf38b480a8cf54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1730,
        "upload_time": "2020-07-05T23:52:17",
        "upload_time_iso_8601": "2020-07-05T23:52:17.160287Z",
        "url": "https://files.pythonhosted.org/packages/4d/d9/c620386320ec5d657cf3865bbc4df315bdf0eeb1709789cddb96ae428371/odus-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e499517b778c38af9c1bfdebd76679a5435554b4f56f15a9a7951b9eec694b7d",
          "md5": "5b847785ddfaf24c0ce40a0b08f46522",
          "sha256": "53222cf6d230a133df6d16a0e95de840c3ac70f7f32580e88ae7641638b87ac4"
        },
        "downloads": -1,
        "filename": "odus-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b847785ddfaf24c0ce40a0b08f46522",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1227,
        "upload_time": "2020-07-05T23:57:29",
        "upload_time_iso_8601": "2020-07-05T23:57:29.897607Z",
        "url": "https://files.pythonhosted.org/packages/e4/99/517b778c38af9c1bfdebd76679a5435554b4f56f15a9a7951b9eec694b7d/odus-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a84a24a9f511406da5ebee3411751582d9a38ac77c57bb792b734ffe8710bc7",
          "md5": "07660c81c97d5f15bc69a0371f45a80b",
          "sha256": "761f997aa4eac4d7b120f2a55f46976e87568264a469be229ab8f556bb4b12b2"
        },
        "downloads": -1,
        "filename": "odus-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "07660c81c97d5f15bc69a0371f45a80b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1731,
        "upload_time": "2020-07-05T23:57:31",
        "upload_time_iso_8601": "2020-07-05T23:57:31.222268Z",
        "url": "https://files.pythonhosted.org/packages/6a/84/a24a9f511406da5ebee3411751582d9a38ac77c57bb792b734ffe8710bc7/odus-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "557e5433d19e19618fc86242778ff09df3307c46a9f95f6e52f8ab69a22de31e",
          "md5": "d1d0575f90cf1e3de322c6ffe028e17b",
          "sha256": "0dc996d310b924f8055e79ede0d24f62eb0e24a16f4ad50d17f03a156ff736ab"
        },
        "downloads": -1,
        "filename": "odus-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1d0575f90cf1e3de322c6ffe028e17b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6687,
        "upload_time": "2020-08-03T14:42:32",
        "upload_time_iso_8601": "2020-08-03T14:42:32.847232Z",
        "url": "https://files.pythonhosted.org/packages/55/7e/5433d19e19618fc86242778ff09df3307c46a9f95f6e52f8ab69a22de31e/odus-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "beeaa3d88b705ff73b7a7435335d1b2d6aa6202a78a9537d9ed219e4b77e428b",
          "md5": "5971f3669cc9563e2936836b725284bf",
          "sha256": "e43b83b217218c592b938968f034b6f4045d5511baef54ec3c0b1bda60dbcad3"
        },
        "downloads": -1,
        "filename": "odus-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "5971f3669cc9563e2936836b725284bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15425,
        "upload_time": "2020-08-03T14:42:34",
        "upload_time_iso_8601": "2020-08-03T14:42:34.202782Z",
        "url": "https://files.pythonhosted.org/packages/be/ea/a3d88b705ff73b7a7435335d1b2d6aa6202a78a9537d9ed219e4b77e428b/odus-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "557e5433d19e19618fc86242778ff09df3307c46a9f95f6e52f8ab69a22de31e",
        "md5": "d1d0575f90cf1e3de322c6ffe028e17b",
        "sha256": "0dc996d310b924f8055e79ede0d24f62eb0e24a16f4ad50d17f03a156ff736ab"
      },
      "downloads": -1,
      "filename": "odus-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d1d0575f90cf1e3de322c6ffe028e17b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6687,
      "upload_time": "2020-08-03T14:42:32",
      "upload_time_iso_8601": "2020-08-03T14:42:32.847232Z",
      "url": "https://files.pythonhosted.org/packages/55/7e/5433d19e19618fc86242778ff09df3307c46a9f95f6e52f8ab69a22de31e/odus-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "beeaa3d88b705ff73b7a7435335d1b2d6aa6202a78a9537d9ed219e4b77e428b",
        "md5": "5971f3669cc9563e2936836b725284bf",
        "sha256": "e43b83b217218c592b938968f034b6f4045d5511baef54ec3c0b1bda60dbcad3"
      },
      "downloads": -1,
      "filename": "odus-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "5971f3669cc9563e2936836b725284bf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15425,
      "upload_time": "2020-08-03T14:42:34",
      "upload_time_iso_8601": "2020-08-03T14:42:34.202782Z",
      "url": "https://files.pythonhosted.org/packages/be/ea/a3d88b705ff73b7a7435335d1b2d6aa6202a78a9537d9ed219e4b77e428b/odus-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}