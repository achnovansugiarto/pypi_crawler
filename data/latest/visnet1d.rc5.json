{
  "info": {
    "author": "Alex",
    "author_email": "adrysdale@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Other/Proprietary License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11"
    ],
    "description": "# VisNet1D\n\nA simple visualisation tool for 1D networks. \n\n![An image of visnet1d](visnet1d.png)\n\n## Installation\n\n### Use in your project\n\nPython Package Index (PIP):\n```\npip install visnet1d\n```\n\nPoetry:\n```\npoetry add visnet1d\n```\n\n### Use the development version\n\nGit:\n```\ngit clone git@gitlab.com:abdrysdale/visnet1d.git\nnix-shell\npoetry install\npoetry shell\n```\n\nInstallation instructions for `nix` can be obtained from [here](https://nixos.org/download.html).\nIf you don't have and don't want to install nix, it is sufficient to just install poetry and skip the `nix-shell` command.\nPoetry installation instructions can be obtained from [here](https://python-poetry.org/).\n\n### Just want to run the examples?\n\nIf you just want to run one of the examples, such as the vessel network example:\n```\npip install visnet1d\ngit clone git@gitlab.com:abdrysdale/visnet1d.git\ncd visnet1d\n```\n\nThe run the desired example script with:\n```\npython examples/vessel_network.py\n```\nNaturally replacing `vessel_network.py` with any of the other examples.\nNext, go to `http://127.0.0.1:8050` in your browser and start exploring!\n\n\n## Usage\n\nVisNet1D is intended to be used to visualise signals across a 1-dimensional network at potentially multiple locations.\nIt can either be used to explore an output of an other function, viewing signal(s) at different locations and comparing the results or it can be used to visualise the change in a function output due to a change in inputs.\n\nAn example usage is shown below:\n\nFirst import the library:\n```python\nimport visnet1d\n```\n\n\nNow we define a simple function that takes a spatial argument along with other keyword arguments.\nThis function returns y as a function of t at some spatial point x.\nIt must return two vectors to be compatible with the default plotting function.\nBut don't worry! You can define your own plotting functions - we'll get to that later.\n```python\ndef foobar(x, tmax=1, a=2, b=3):\n    t = np.linspace(0, tmax, 100)\n    y = a * np.sin(x + 2 * np.pi * t / b)\n    return y, t\n```\n\nHere we define a list for the function input arguments.\nThese are used to display the inputs on the web-page and pass the results to the function `foobar`.\n```python\ninput_dict_list = [\n    {\n        \"name\" : \"Amplitude\",   # Name to be displayed on the web app.\n        \"id\" : \"a\",             # Internal id and keyword argument for the function (foobar).\n        \"value\" : 1,            # Initial value.\n        \"type\" : \"number\",      # Used by Dash to determine the input type.\n    },\n    {\n        \"name\" : \"Period\",\n        \"id\" : \"b\",\n        \"value\" : 2,\n        \"type\" : \"number\",\n    },\n    {\n        \"name\" : \"Maximum t\",\n        \"id\" : \"tmax\",\n        \"value\": 1,\n        \"type\" : \"number\",\n    },\n]\n```\nThe allowed types that dash input accepts can be found [here](https://dash.plotly.com/dash-core-components/input).\n\nNext we need to define the boundaries that separate locations.\nTo illustrate this, let's consider two vessels connected in series:\n```python\nboundaries = {     # Locations can be selected from a drop-down menu\n        \"Vessel 1\" : [0, np.pi],          # [Start, End]\n        \"Vessel 2\" : [np.pi, 3 * np.pi],  \n}\n```\n\nNow we create a site object and run the site.\n```python\nsite = visnet1d.Site(\n        foobar,             # Function to plot.\n        boundaries,         # Locations to select.\n        input_dict_list,    # List of function inputs (each input has it's own dictionary).\n        xlab=\"Time (s)\",    # X-axis label\n        ylab=\"Response\",    # Y-axis label\n        title=\"My title\",   # Title\n)\n\n# Runs the server with the default arguments - same as site.run()\nsite.run(host=\"127.0.0.1\", port=\"8050\", debug=False)\n```\nGo to `127.0.0.1:8050` on your web browser view the webapp.\n\n### Custom plots\n\nCustom plot functions can be utilised using the `plot` keyword argument for the visnet1d.Site class.\nE.g.\n\n```python\nsite = visnet.Site(\n    my_function,\n    my_boundaries,\n    my_input_dictionary_list,\n    plot=my_custom_plot_function, # <- This is how you pass your custom plot function.\n)\n```\n\nA few things to note about writing custom plotting functions:\n\n- The function must take the Site object as the **only** input argument.\n- The function must return a plotly figure.\n\nA few notable attributes of the Site class:\n\n- `site.function_kwargs` : Is a list of dictionaries of the inputs defined by the `input_dict_list` argument.\n    These are the values that you can change in the inputs section in the webapp.\n- `site.boundaries` : The boundaries defined by the `boundaries` argument.\n- `site.loc_slider_vals` : A dictionary of all of the slider positions for all of the previously selected locations.\n    The dictionary is of the format `location` : `value`. Where location is the location key used in the `boundaries` argument and `value` is the value of the slider.\n- `site.loc_keys` : A list of the locations currently selected. Where each location is the key used in the `boundaries argument.`\n- `site.x` : The current position of the active slider.\n\n### Exploring a static output\n\nBy default, VisNet1D evaluates the function each time an input is changed.\nFor a very expensive function this isn't ideal.\nMoreover, there might be use case whereby the outputs of very complicated network have been produced by some other expensive function and you just wish to use VisNet1D to explore the output.\n\nHere's how you'd do something like that:\n```python\nmy_outputs = visnet1d.get_static_function(out_mat, t, axis=0)\n```\nFirst use the inbuilt function `get_static_function()` to handle static outputs.\nThis function needs to be passed the 2D output matrix and the value for the x-axis.\nThe output matrix might be something like a signal as a function of space and time.\n\nMoreover, as the outputs are static there are no function inputs so we can do away with the `input_dict_list` argument.\nThis is done like so:\n```python\nsite = visnet.Site(\n    my_outputs,\n    my_boundaries,\n    input_dict_list=None,\n)\n```\n\n### Customising plots\n\nBy default all the plots are editable and you can pass the x axis label, y axis label and title into the site object with the following:\n```python\nsite = visnet.Site(\n    my_function,\n    my_boundaries,\n    my_input_dictionary_list,\n    xlab=my_x_label,\n    ylab=my_y_label,\n    title=my_title,\n)\n```\n\nMoreover, the width of the graph itself can be controlled by using:\n```python\nsite = visnet.Site(\n    my_function,\n    my_boundaries,\n    my_input_dictionary_list,\n    gwidth=80, # This sets the width of the graph to be 80% of the screen width.\n)\n\n```\n\nIt is also possible to display an optional image underneath the input section to aid network visualisation:\n```python\nsite = visnet.Site(\n    my_function,\n    my_boundaries,\n    my_input_dictionary_list,\n    image='path/to/my/image.png'    # Any Pillow supported image format can be used\n    iheight=80,                     # Adjusts the image height to be 80% of the screen height.\n)\n```\n\n## Examples\n\nFor full examples see the [examples/](examples/) directory.\n\n## Contributing\n\n- For contributing guidelines see [CONTRIBUTING](CONTRIBUTING.md).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/abdrysdale/visnet1d",
    "keywords": "",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "visnet1d",
    "package_url": "https://pypi.org/project/visnet1d/",
    "platform": null,
    "project_url": "https://pypi.org/project/visnet1d/",
    "project_urls": {
      "Homepage": "https://gitlab.com/abdrysdale/visnet1d",
      "Repository": "https://gitlab.com/abdrysdale/visnet1d"
    },
    "release_url": "https://pypi.org/project/visnet1d/0.1.4/",
    "requires_dist": [
      "plotly (>=5.7.0,<6.0.0)",
      "dash (>=2.3.1,<3.0.0)",
      "numpy (>=1.22.3,<2.0.0)",
      "pandas (>=1.4.2,<2.0.0)",
      "pillow (>=9.4.0,<10.0.0)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "A visualation tool for 1D networks",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17176760,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "535c81493cf7143e8a06ada81ed252adf215c3156b6106fe32f110c16f900d99",
          "md5": "557900fb6e607ee22df85a5ac0db4e7e",
          "sha256": "057d78bed441a63ab255b764e64389a0b6f183b88126e0e344ffaf60960b3844"
        },
        "downloads": -1,
        "filename": "visnet1d-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "557900fb6e607ee22df85a5ac0db4e7e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 19567,
        "upload_time": "2023-03-01T16:06:37",
        "upload_time_iso_8601": "2023-03-01T16:06:37.335462Z",
        "url": "https://files.pythonhosted.org/packages/53/5c/81493cf7143e8a06ada81ed252adf215c3156b6106fe32f110c16f900d99/visnet1d-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8546e3b9891b4c6668a63d94e0f26c5094d278fb87559c78c6ac0297eca77eef",
          "md5": "9ee7d4f490054fb6a0539b69115ec2cb",
          "sha256": "26fcb4f3bf4c0b97f3a74bbd6a720733e5c851ac772592fa19b5f2b5676b155c"
        },
        "downloads": -1,
        "filename": "visnet1d-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9ee7d4f490054fb6a0539b69115ec2cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 19725,
        "upload_time": "2023-03-01T16:06:39",
        "upload_time_iso_8601": "2023-03-01T16:06:39.330858Z",
        "url": "https://files.pythonhosted.org/packages/85/46/e3b9891b4c6668a63d94e0f26c5094d278fb87559c78c6ac0297eca77eef/visnet1d-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81bc58e37ff562c592f684b6f3156b0d36406ef2b24608ea34880b649f2be83c",
          "md5": "1f458e59846626782f01f2050ec2c09a",
          "sha256": "9492989898d3eed1b1e108ad4c8cf0e895331c25f9dc4d0fb22c0d32868daa8b"
        },
        "downloads": -1,
        "filename": "visnet1d-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f458e59846626782f01f2050ec2c09a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 19567,
        "upload_time": "2023-03-01T16:09:28",
        "upload_time_iso_8601": "2023-03-01T16:09:28.455227Z",
        "url": "https://files.pythonhosted.org/packages/81/bc/58e37ff562c592f684b6f3156b0d36406ef2b24608ea34880b649f2be83c/visnet1d-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "958df213126f4ea7bce6e40011c8c49ce0b78a6b7f578a10cb46b39f56b1ef07",
          "md5": "e039d8787624c90547faee74f8dec07c",
          "sha256": "a1ab88aa10cf62d087d70eb32c3de49b5c8c73e512b4e2fb24eb2df5beffe16f"
        },
        "downloads": -1,
        "filename": "visnet1d-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e039d8787624c90547faee74f8dec07c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 19714,
        "upload_time": "2023-03-01T16:09:30",
        "upload_time_iso_8601": "2023-03-01T16:09:30.351297Z",
        "url": "https://files.pythonhosted.org/packages/95/8d/f213126f4ea7bce6e40011c8c49ce0b78a6b7f578a10cb46b39f56b1ef07/visnet1d-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08cdd22c35cbce81765848a1ba09f3edc940f08b7b1a311e04b5f6701a3bc07f",
          "md5": "b7010ecd34e512fe5a47aeb697c1200c",
          "sha256": "947f350886599f4836bbd0baa1e84e15a7b78af5067124919a29801cceab9ce3"
        },
        "downloads": -1,
        "filename": "visnet1d-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7010ecd34e512fe5a47aeb697c1200c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 19568,
        "upload_time": "2023-03-01T19:06:51",
        "upload_time_iso_8601": "2023-03-01T19:06:51.864876Z",
        "url": "https://files.pythonhosted.org/packages/08/cd/d22c35cbce81765848a1ba09f3edc940f08b7b1a311e04b5f6701a3bc07f/visnet1d-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d207758d23a0f1ad2772ba0f4c52f401c8248f84d14490ef3f194e51775c770c",
          "md5": "665911c5da6f73cb9770abffe5003b7f",
          "sha256": "b35f90e75a72fb39cb5bcc707dfc551759412989f3d0a8cac60f8fa3ed796476"
        },
        "downloads": -1,
        "filename": "visnet1d-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "665911c5da6f73cb9770abffe5003b7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 19737,
        "upload_time": "2023-03-01T19:06:53",
        "upload_time_iso_8601": "2023-03-01T19:06:53.247028Z",
        "url": "https://files.pythonhosted.org/packages/d2/07/758d23a0f1ad2772ba0f4c52f401c8248f84d14490ef3f194e51775c770c/visnet1d-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3991af67d799f28117e83971a2953a7fe0e1655d8688e4712e15b53980c57b8f",
          "md5": "ff282c4a32370b5fca6b271eb66ebfe0",
          "sha256": "109630266c2af584d7fd47ff01f5a228bc5dd39192ac181784aba617e0f37137"
        },
        "downloads": -1,
        "filename": "visnet1d-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff282c4a32370b5fca6b271eb66ebfe0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 20240,
        "upload_time": "2023-03-02T15:04:22",
        "upload_time_iso_8601": "2023-03-02T15:04:22.717003Z",
        "url": "https://files.pythonhosted.org/packages/39/91/af67d799f28117e83971a2953a7fe0e1655d8688e4712e15b53980c57b8f/visnet1d-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46fd9fb0d2f75a66034119f7bedeef538dcf5c597aefd2dd8d1a1706996cb719",
          "md5": "fc5c55810699a22ec4af5562c16c58ec",
          "sha256": "e28965e0b357b964191264645028f909caee2c7924d426ec1d551d788a4dc0e2"
        },
        "downloads": -1,
        "filename": "visnet1d-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fc5c55810699a22ec4af5562c16c58ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 20454,
        "upload_time": "2023-03-02T15:04:24",
        "upload_time_iso_8601": "2023-03-02T15:04:24.477424Z",
        "url": "https://files.pythonhosted.org/packages/46/fd/9fb0d2f75a66034119f7bedeef538dcf5c597aefd2dd8d1a1706996cb719/visnet1d-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24414f70f0962b5a30adc552b53ca3e78833a56d80d0f036255b25420458f086",
          "md5": "8c872a1333d3ad554b1a54b62a8bcc84",
          "sha256": "89a5784ab2942124687e7edff0632f962df280193a6bc536d3e94ce984444e36"
        },
        "downloads": -1,
        "filename": "visnet1d-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c872a1333d3ad554b1a54b62a8bcc84",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 20397,
        "upload_time": "2023-03-06T15:25:31",
        "upload_time_iso_8601": "2023-03-06T15:25:31.860641Z",
        "url": "https://files.pythonhosted.org/packages/24/41/4f70f0962b5a30adc552b53ca3e78833a56d80d0f036255b25420458f086/visnet1d-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "614ebb816393d5863c1cbd2e5ecba4b73703d4de101674d4fc356f96da98c675",
          "md5": "26b2f62cf48e078cdacaefe044c3b630",
          "sha256": "351bee93aad9d2225582b804b990ba2b04c756a33d9d2f6a2bc0eb6ea4cea2d9"
        },
        "downloads": -1,
        "filename": "visnet1d-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "26b2f62cf48e078cdacaefe044c3b630",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 20732,
        "upload_time": "2023-03-06T15:25:33",
        "upload_time_iso_8601": "2023-03-06T15:25:33.490317Z",
        "url": "https://files.pythonhosted.org/packages/61/4e/bb816393d5863c1cbd2e5ecba4b73703d4de101674d4fc356f96da98c675/visnet1d-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "24414f70f0962b5a30adc552b53ca3e78833a56d80d0f036255b25420458f086",
        "md5": "8c872a1333d3ad554b1a54b62a8bcc84",
        "sha256": "89a5784ab2942124687e7edff0632f962df280193a6bc536d3e94ce984444e36"
      },
      "downloads": -1,
      "filename": "visnet1d-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8c872a1333d3ad554b1a54b62a8bcc84",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 20397,
      "upload_time": "2023-03-06T15:25:31",
      "upload_time_iso_8601": "2023-03-06T15:25:31.860641Z",
      "url": "https://files.pythonhosted.org/packages/24/41/4f70f0962b5a30adc552b53ca3e78833a56d80d0f036255b25420458f086/visnet1d-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "614ebb816393d5863c1cbd2e5ecba4b73703d4de101674d4fc356f96da98c675",
        "md5": "26b2f62cf48e078cdacaefe044c3b630",
        "sha256": "351bee93aad9d2225582b804b990ba2b04c756a33d9d2f6a2bc0eb6ea4cea2d9"
      },
      "downloads": -1,
      "filename": "visnet1d-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "26b2f62cf48e078cdacaefe044c3b630",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 20732,
      "upload_time": "2023-03-06T15:25:33",
      "upload_time_iso_8601": "2023-03-06T15:25:33.490317Z",
      "url": "https://files.pythonhosted.org/packages/61/4e/bb816393d5863c1cbd2e5ecba4b73703d4de101674d4fc356f96da98c675/visnet1d-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}