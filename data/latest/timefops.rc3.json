{
  "info": {
    "author": "stiftcast",
    "author_email": "stiftcast@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: System :: Archiving :: Compression",
      "Topic :: System :: Filesystems"
    ],
    "description": "# timefops\n[![PyPI version fury.io](https://badge.fury.io/py/timefops.svg)](https://pypi.python.org/pypi/timefops/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/timefops.svg)](https://pypi.python.org/pypi/timefops)\n[![PyPI license](https://img.shields.io/pypi/l/timefops.svg)](https://pypi.python.org/pypi/timefops/)\n\nPerforms file operations (moving, copying and archiving) on files/directories based on their access/change/modified times.\n\n## Description\n_timefops_ provides moving, copying and archiving capabilities for files/directories based on their access time, change time or modified time.\n\nThe interface contains nested sub-parsers where you'll be required to choose the time predicate and operation. Both the copying and moving functionality utilize Python's `shutil` module, whereas the`tarfile` and `zipfile` modules are both used for creating archives.\n\nPlatforms: Linux, Windows; compatibilty with Mac OS is unknown.\n\nPython 3.7+ is required. \n\n## Installation\nUsing pipx (recommended):\n```sh\npipx install timefops\n```\nUsing pip:\n```sh\npip3 install --user timefops\n```\n## Usage\nChoosing the time predicate:\n\n```\nstiftcast@debian:~$ timefops -h\nusage: timefops [-h] [-V] <time> ...\n\nOperate on files/directories based on their access/change/modified times.\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -V, --version  print version number/info and exit\n\nTime predicate:\n  <time>\n    atime        Perform operations based on last access-time.\n    ctime        Perform operations based on last change-time.\n    mtime        Perform operations based on last modification-time.\n```\nChoosing the operation:\n```\nstiftcast@debian:~$ timefops mtime -h\nusage: timefops mtime [-h] [-V] <operation> ...\n\nPerform operations based on last modification-time.\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -V, --version  print version number/info and exit\n\nOperations:\n  <operation>\n    archive      Archive contents to a tarball or a zip file.\n    copy         Copy contents to a different location.\n    move         Move contents to a different location.\n```\n\n<br /> Options for `archive`:\n```\noptional arguments:\n  -h, --help            show this help message and exit\n  -V, --version         print version number/info and exit\n\nGeneral arguments:\n  src                   Source directories/files.\n  -a NAME, --archive NAME\n                        Name for target archive.\n  --to-stdout           Write tar archive or zip file to stdout instead of a\n                        named file, emulates the '-' option of the tar and zip\n                        executables.\n  -z, --zipfile         Makes a zip file instead of a tar archive (GZ\n                        compression is not available with this option)\n  -c {bz2,gz,xz}, --compression {bz2,gz,xz}\n                        Compression format for the archive.\n  -f FORMAT [FORMAT ...], --format FORMAT [FORMAT ...]\n                        Set folder name format (using Python's datetime\n                        formatting directives). If there are multiple values\n                        specifed, contents will get nested under the last\n                        value.\n  -i, --individual-items\n                        Setting this flag will allow for specifying individual\n                        source files and folders. The difference between\n                        specifiying a source folder with this flag on is that\n                        any folder(s) specified will not be traversed and\n                        instead be treated as a standalone item.\n  -v, --verbose         Set log level to verbose.\n  -d, --debug           Set log level to debug (includes verbose).\n  --no-color, --no-colour\n                        Disable coloured logging output.\n  --dry-run             Show results, but don't execute.\n\nAES-Encrypted Zipfile options:\n  Arguments for making a password-protected AES-Encrypted zip file. The\n  -z/--zipfile flag is required for any of these to register, otherwise they\n  will be ignored. Encrypting a zip file will not hide the directory\n  structure, or encrypt any directories, but will encrypt individual files.\n\n  --zip-password, -zp   Prompts for a password to encrypt zip folder contents\n                        with.\n  --zip-password-plaintext PASSWORD, -zP PASSWORD\n                        Specify zip file password in plaintext, avoid this\n                        option if possible.\n  --zip-encryption {weak,medium,strong}, -ze {weak,medium,strong}\n                        Set the strength of the AES encryption, if nothing is\n                        specified, 'medium' is used by default.\n```\n\nOptions for `copy` or `move`:\n```\noptional arguments:\n  -h, --help            show this help message and exit\n  -V, --version         print version number/info and exit\n\nGeneral arguments:\n  src                   Source directories/files.\n  -t TARGET_DIRECTORY, --target-directory TARGET_DIRECTORY\n                        Destination directory.\n  -f FORMAT [FORMAT ...], --format FORMAT [FORMAT ...]\n                        Set folder name format (using Python's datetime\n                        formatting directives). If there are multiple values\n                        specifed, contents will get nested under the last\n                        value.\n  -i, --individual-items\n                        Setting this flag will allow for specifying individual\n                        source files and folders. The difference between\n                        specifiying a source folder with this flag on is that\n                        any folder(s) specified will not be traversed and\n                        instead be treated as a standalone item.\n  -v, --verbose         Set log level to verbose.\n  -d, --debug           Set log level to debug (includes verbose).\n  --no-color, --no-colour\n                        Disable coloured logging output.\n  --dry-run             Show results, but don't execute.\n```\n## Examples\n\nThe provided commands can either be used on their own, or with the `find` and `xargs` commands in tandem. The latter is the recommended method, due to find's powerful filtering options.<br />\n\n#### Standalone\nTraverse through multiple directories and copy the contents somewhere, sorted by access-time:\n```sh\ntimefops atime copy dir1/ dir2/ dir3/ -t /dest/path\n```\nArchive all the files and folders specified as is into a .tar.bz2 archive, sorted by modified-time:\n```sh\ntimefops mtime archive file1 dir1/ dir2/ file2 -i -a standalone_example -c bz2\n```\n#### <br />Using `find` and `xargs` \nFind files accessed within the last hour and move them somewhere into folders with the 12-hour time, sorted by accessed-time:\n```sh\nfind ./ -type f -amin -60 -print0 | xargs -0 timefops atime move -f \"%I:%M%p\" -i -t /dest/path\n```\nFind all shell scripts and put them in a gzip-compressed tar archive, sorted by changed-time:\n```sh\nfind ./ -type f -iname \"*.sh\" -print0 | xargs -0 timefops ctime archive -i -a ex_archive -c gz\n```\nGet directories that were modified between April 1, 2020 - April 30, 2020 and copy them somewhere, sorted by modified-time:\n```sh\nfind ./ -type d -newermt 2020-04-01 ! -newermt 2020-04-30 -prune -print0 | \\\nxargs -0 timefops mtime copy -i -t /dest/path\n```\nSpecify directories to be traversed (-i flag is omitted) and copy the contents inside to somewhere, sorted by modified-time:\n```sh\nfind ./ -type d \\( -iname 'pat1' -o -iname 'pat2' \\) -prune -print0 | \\\nxargs -0 timefops mtime copy -t /dest/path\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/stiftcast/timefops",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "timefops",
    "package_url": "https://pypi.org/project/timefops/",
    "platform": "",
    "project_url": "https://pypi.org/project/timefops/",
    "project_urls": {
      "Homepage": "https://github.com/stiftcast/timefops"
    },
    "release_url": "https://pypi.org/project/timefops/0.3/",
    "requires_dist": [
      "colorama",
      "pyzipper"
    ],
    "requires_python": ">=3.7",
    "summary": "A cross-platform module for file operations based on time.",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8785634,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "258d8269dd1c498fca72178e88d0d8580410570537cf69a9072db90602e6325f",
          "md5": "11c0e9eaaa6b456b7239c473969419e6",
          "sha256": "367b6db52143b2feb1aa079d44946ecbc8571eaf2c7dcecd491171705d58eefd"
        },
        "downloads": -1,
        "filename": "timefops-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "11c0e9eaaa6b456b7239c473969419e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7419,
        "upload_time": "2020-06-11T22:34:02",
        "upload_time_iso_8601": "2020-06-11T22:34:02.382782Z",
        "url": "https://files.pythonhosted.org/packages/25/8d/8269dd1c498fca72178e88d0d8580410570537cf69a9072db90602e6325f/timefops-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c08c369c4170db1b828948be8e76ccc2c1851f135df8cdea0c1049297d30b067",
          "md5": "74eb3e95dbd449ae77f7829d8557c399",
          "sha256": "231968f7c29a9a82c75178d7c43302a77b89eeb0ea78ca9844c91a3cbf605809"
        },
        "downloads": -1,
        "filename": "timefops-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "74eb3e95dbd449ae77f7829d8557c399",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9739,
        "upload_time": "2020-08-24T04:51:54",
        "upload_time_iso_8601": "2020-08-24T04:51:54.517096Z",
        "url": "https://files.pythonhosted.org/packages/c0/8c/369c4170db1b828948be8e76ccc2c1851f135df8cdea0c1049297d30b067/timefops-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b31e8a3078c7c91617fec4a492716ca7d174f4ef07e10acb1c3fc66d1363c645",
          "md5": "49e392438924c799539531a1e645a9f0",
          "sha256": "c17f3d9efa283f30f988abcb003eeed3d7a2654b78824144be7ed7df02c330b8"
        },
        "downloads": -1,
        "filename": "timefops-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "49e392438924c799539531a1e645a9f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 24666,
        "upload_time": "2020-12-01T04:29:21",
        "upload_time_iso_8601": "2020-12-01T04:29:21.124501Z",
        "url": "https://files.pythonhosted.org/packages/b3/1e/8a3078c7c91617fec4a492716ca7d174f4ef07e10acb1c3fc66d1363c645/timefops-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d48d2d867dd43162555e166fe4684d96af4d32e6f1995dfc08d5ab4a4667ec66",
          "md5": "1060c71493967215149492f6a8e01f01",
          "sha256": "b1d45ef04ebc09f3cf27ee1c41df63e8d73faff93b24c3ef0d60ee05a5f06df7"
        },
        "downloads": -1,
        "filename": "timefops-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1060c71493967215149492f6a8e01f01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13772,
        "upload_time": "2020-12-01T04:29:22",
        "upload_time_iso_8601": "2020-12-01T04:29:22.218785Z",
        "url": "https://files.pythonhosted.org/packages/d4/8d/2d867dd43162555e166fe4684d96af4d32e6f1995dfc08d5ab4a4667ec66/timefops-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b31e8a3078c7c91617fec4a492716ca7d174f4ef07e10acb1c3fc66d1363c645",
        "md5": "49e392438924c799539531a1e645a9f0",
        "sha256": "c17f3d9efa283f30f988abcb003eeed3d7a2654b78824144be7ed7df02c330b8"
      },
      "downloads": -1,
      "filename": "timefops-0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "49e392438924c799539531a1e645a9f0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 24666,
      "upload_time": "2020-12-01T04:29:21",
      "upload_time_iso_8601": "2020-12-01T04:29:21.124501Z",
      "url": "https://files.pythonhosted.org/packages/b3/1e/8a3078c7c91617fec4a492716ca7d174f4ef07e10acb1c3fc66d1363c645/timefops-0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d48d2d867dd43162555e166fe4684d96af4d32e6f1995dfc08d5ab4a4667ec66",
        "md5": "1060c71493967215149492f6a8e01f01",
        "sha256": "b1d45ef04ebc09f3cf27ee1c41df63e8d73faff93b24c3ef0d60ee05a5f06df7"
      },
      "downloads": -1,
      "filename": "timefops-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1060c71493967215149492f6a8e01f01",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13772,
      "upload_time": "2020-12-01T04:29:22",
      "upload_time_iso_8601": "2020-12-01T04:29:22.218785Z",
      "url": "https://files.pythonhosted.org/packages/d4/8d/2d867dd43162555e166fe4684d96af4d32e6f1995dfc08d5ab4a4667ec66/timefops-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}