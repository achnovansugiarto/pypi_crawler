{
  "info": {
    "author": "Susanne Zabel",
    "author_email": "susizabel93@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# VIPurPCA\n\n<p align=\"center\">\n  <img src=\"https://github.com/Integrative-Transcriptomics/VIPurPCA/blob/main/images/logo.png\" width=\"256\">\n</p>\n\nVIPurPCA offers a visualization of uncertainty propagated through the dimensionality reduction technique Principal Component Analysis (PCA) by automatic differentiation.\n\n### Installation\nVIPurPCA requires Python 3.7.3 or later and can be installed via:\n\n```\npip install vipurpca\n```\n\nA website showing results and animations can be found [here](https://github.com/Integrative-Transcriptomics/VIPurPCA).\n\n### Usage\n#### Propagating uncertainty through PCA and visualize output uncertainty as animated scatter plot\nIn order to propagate uncertainty through PCA the class `PCA` can be used, which has the following parameters, attributes, and methods:\n\n| Parameters    |  |\n| ------------- | ------------- |\n|  | ***matrix : array_like*** <br/> Array of size [n, p] containing mean numbers to which VIPurPCA should be applied. |\n|  | ***sample_cov : array_like of shape [n, n] or [n], default=None, optional*** <br/> Input uncertainties in terms of the sample covariance matrix. If *sample_cov* is one-dimensional its values are assumed to be the diagonal of a diagonal matrix. Used to compute the total covariance matrix over the input using the Kronecker product of *sample_cov* and *feature_cov*.|\n|  | ***feature_cov : array_like of shape [p, p] or [p], default=None, optional*** <br/> Input uncertainties in terms of the feature covariance matrix. If *feature_cov* is one-dimensional its values are assumed to be the diagonal of a diagonal matrix. Used to compute the total covariance matrix over the input using the Kronecker product of *sample_cov* and *feature_cov*.|\n|  | ***full_cov : array_like of shape [np, np] or [np], default=None, optional*** <br/> Input uncertainties in terms of the full covariance matrix. If *full_cov* is one-dimensional its values are assumed to be the diagonal of a diagonal matrix. Used alternatively to the Kronecker product of *sample_cov* and *feature_cov*. Requires more memory.|\n|  | **_n_components : int or float, default=None, optional_** <br/> Number of components to keep. |\n|  | **_axis : {0, 1} , default=0, optional_** <br/> The default expects samples in rows and features in columns. |\n\n| Attributes    |  |\n| ------------- | ------------- |\n|  | **_size : [n, p]_** <br/> Dimension of *matrix* (n: number of samples, p: number of dimensions) |\n|  | **_eigenvalues : ndarray of size [n_components]_** <br/> Eigenvalues obtained from eigenvalue decomposition of the *covariance* matrix. |\n|  | **_eigenvectors : ndarray of size [n_components*p, n*p]_** <br/> Eigenvectors obtained from eigenvalue decomposition of the *covariance* matrix. |\n|  | **_jacobian : ndarray of size [n_components*p, n*p]_** <br/> Jacobian containing derivatives of *eigenvectors* w.r.t. input *matrix*. |\n|  | **_cov_eigenvectors : ndarray of size [n_components*p, n_components*p]_** <br/> Propagated uncertainties of *eigenvectors*.|\n|  | **_transformed data : ndarray of size [n, n_components]_** <br/> Low dimensional representation of data after applying PCA. |\n\n| Methods    |  |\n| ------------- | ------------- |\n| ***pca_value()*** | Apply PCA to the *matrix*.|\n| ***compute_cov_eigenvectors(save_jacobian=False)*** | Compute uncertainties of *eigenvectors*.|\n| ***animate(pcx=1, pcy=2, n_frames=10, labels=None, outfile='animation.html')*** | Generate animation of PCA-plot of PC pcx vs. PC pcy with *n_frames* number of frames. *labels* (list, 1d array) indicate labelling of individual samples. >\n\n#### Example datasets\nTwo example datasets can be loaded after installing VIPurPCA providing mean, covariance and labels.\n```\nfrom vipurpca import load_data\nY, cov_Y, y = load_data.load_studentgrades_dataset()\nY, cov_Y, y = load_data.load_estrogen_dataset()\n```\nMore information on the datasets can be found [here](https://github.com/Integrative-Transcriptomics/VIPurPCA)\n\n#### Example\n```\nfrom vipurpca import load_data\nfrom vipurpca import PCA\n\n# load mean (Y), uncertainty estimates (cov_Y) and labels (y)\nY, cov_Y, y = load_data.load_estrogen_dataset()\npca = PCA(matrix=Y, sample_cov=None, feature_cov=None,\nfull_cov=cov_Y, n_components=3, axis=0)\n# compute PCA\npca.pca_value()\n# Bayesian inference\npca.compute_cov_eigenvectors(save_jacobian=**False**)# Create animation\npca.animate(1, 2, labels=y)\n```\n\nThe resulting animation can be found here [here](https://integrative-transcriptomics.github.io/VIPurPCA/examples/human/).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Integrative-Transcriptomics/VIPurPCA",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vipurpca",
    "package_url": "https://pypi.org/project/vipurpca/",
    "platform": null,
    "project_url": "https://pypi.org/project/vipurpca/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Integrative-Transcriptomics/VIPurPCA/issues",
      "Homepage": "https://github.com/Integrative-Transcriptomics/VIPurPCA"
    },
    "release_url": "https://pypi.org/project/vipurpca/0.0.2/",
    "requires_dist": [
      "jax",
      "jaxlib",
      "matplotlib",
      "numpy",
      "psutil",
      "scikit-learn",
      "sklearn"
    ],
    "requires_python": ">=3.7",
    "summary": "Visualizing and propagating uncertainty in PCA",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16098563,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fc68a3cf75f058a84c2d40f041bb399841188d527a83b0ad2cf5359e61f9730",
          "md5": "22da30895a271ef6e3a053ab0abb322f",
          "sha256": "c32ae7d2131b9332fa64897e5ab4697bfbc2c8462bd6a3330e5a23bb9a3585db"
        },
        "downloads": -1,
        "filename": "vipurpca-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22da30895a271ef6e3a053ab0abb322f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 2822869,
        "upload_time": "2021-11-30T12:51:18",
        "upload_time_iso_8601": "2021-11-30T12:51:18.984606Z",
        "url": "https://files.pythonhosted.org/packages/3f/c6/8a3cf75f058a84c2d40f041bb399841188d527a83b0ad2cf5359e61f9730/vipurpca-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48a588b515096c4f800c9cc6c782cc62d44e3b5e7ec6a565999efb4436bbf0c5",
          "md5": "3684b9a9d1a8bf1bae8f4dae80e0bf53",
          "sha256": "af8e5b5af9689b9e076680c3eb9eb300eca417d4e7eeb05a81ce58fb1f659c06"
        },
        "downloads": -1,
        "filename": "vipurpca-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3684b9a9d1a8bf1bae8f4dae80e0bf53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2816313,
        "upload_time": "2021-11-30T12:51:23",
        "upload_time_iso_8601": "2021-11-30T12:51:23.222470Z",
        "url": "https://files.pythonhosted.org/packages/48/a5/88b515096c4f800c9cc6c782cc62d44e3b5e7ec6a565999efb4436bbf0c5/vipurpca-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee21e7e94ee2c911a9a1f050561f6ccd67a6a19b635d074d12a6de6558b4f959",
          "md5": "f694721ccf6c1577566304efc687aa8c",
          "sha256": "b91d1f69bd6491ca7825efe68c1fed7c15c2b14785cbc6bf7e395817d36b7fec"
        },
        "downloads": -1,
        "filename": "vipurpca-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f694721ccf6c1577566304efc687aa8c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 125108,
        "upload_time": "2022-12-14T10:45:52",
        "upload_time_iso_8601": "2022-12-14T10:45:52.697626Z",
        "url": "https://files.pythonhosted.org/packages/ee/21/e7e94ee2c911a9a1f050561f6ccd67a6a19b635d074d12a6de6558b4f959/vipurpca-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6227be86ccc5baaf8a1de9c109662a1bf8c95ef4bfaa590738f5021bb79d5f36",
          "md5": "94d608549a38d5cfec583cd31747c2a4",
          "sha256": "89cc0034ec44e61ba7a4112e35948d82522edd2bad2eb485ef993f165392a6f5"
        },
        "downloads": -1,
        "filename": "vipurpca-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "94d608549a38d5cfec583cd31747c2a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 127627,
        "upload_time": "2022-12-14T10:45:55",
        "upload_time_iso_8601": "2022-12-14T10:45:55.106504Z",
        "url": "https://files.pythonhosted.org/packages/62/27/be86ccc5baaf8a1de9c109662a1bf8c95ef4bfaa590738f5021bb79d5f36/vipurpca-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee21e7e94ee2c911a9a1f050561f6ccd67a6a19b635d074d12a6de6558b4f959",
        "md5": "f694721ccf6c1577566304efc687aa8c",
        "sha256": "b91d1f69bd6491ca7825efe68c1fed7c15c2b14785cbc6bf7e395817d36b7fec"
      },
      "downloads": -1,
      "filename": "vipurpca-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f694721ccf6c1577566304efc687aa8c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 125108,
      "upload_time": "2022-12-14T10:45:52",
      "upload_time_iso_8601": "2022-12-14T10:45:52.697626Z",
      "url": "https://files.pythonhosted.org/packages/ee/21/e7e94ee2c911a9a1f050561f6ccd67a6a19b635d074d12a6de6558b4f959/vipurpca-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6227be86ccc5baaf8a1de9c109662a1bf8c95ef4bfaa590738f5021bb79d5f36",
        "md5": "94d608549a38d5cfec583cd31747c2a4",
        "sha256": "89cc0034ec44e61ba7a4112e35948d82522edd2bad2eb485ef993f165392a6f5"
      },
      "downloads": -1,
      "filename": "vipurpca-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "94d608549a38d5cfec583cd31747c2a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 127627,
      "upload_time": "2022-12-14T10:45:55",
      "upload_time_iso_8601": "2022-12-14T10:45:55.106504Z",
      "url": "https://files.pythonhosted.org/packages/62/27/be86ccc5baaf8a1de9c109662a1bf8c95ef4bfaa590738f5021bb79d5f36/vipurpca-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}