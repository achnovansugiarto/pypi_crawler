{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# matplotlib-ephys\n\nIntroduction\n============\n\nMatplotlib-ephys is a Python package that does only one thing. \nIt can be used to plot electrophysiological recordings, in the form of voltage and current time series, such as patch-clamp or in-silico recordings.\nIt has however, the interesting capability of being able to plot bars, which can be tedious to do manually.\n\nRequirements\n============\n\n* `Python 3.6+ <https://www.python.org/downloads/release/python-360/>`\n* `Pip <https://pip.pypa.io>` (installed by default in newer versions of Python)\n* `Numpy <http://www.numpy.org>` (automatically installed by pip)\n* `Matplotlib <https://matplotlib.org/>` (automatically installed by pip)\n* The instruction below are written assuming you have access to a command shell on Linux / UNIX / MacOSX / Cygwin\n\nInstallation\n============\n\nTo install the package, run the following command in your terminal:\n```\npip install matplotlib-ephys\n```\n\nQuick Start\n===========\n\nThe present package provides a set of functions for plotting electrophysiological recordings.\nIt is only able to plot voltage and current time series provided as lists or numpy arrays.\n\nThe package has two main functionss: `plot_trace` and `plot_traces`.\nThe former except a single trace as input, while the latter accepts a list of traces.\n\nHere is an example using the data present in the test folder:\n```\nimport numpy\nimport matplotlib.pyplot as plt\nimport matplotlib_ephys as mpe\n\ndata = numpy.asarray([numpy.load(f\"./tests/test_data_{i}.npy\") for i in range(5)])\n\nfig, axis = mpe.plot_traces(\n    time_series=data[:, 0],\n    voltage_series=data[:, 2],\n    current_series=data[:, 1],\n    title=\"Example of plotting multiple traces\",\n    style=\"explore\",\n)\n\nplt.show()\nplt.close(fig)\n```\n\nNote that providing current series is not mandatory.\n\n\nPlotting with style\n===========\n\nUnlike when using Matplotlib directly, the settings and options related to the style of the plots are not directly accessible.\nInstead, the package provides a set of predifined styles, which can be specified when by calling the functions `plot_trace` and `plot_traces`.\nAs of now, two styles are available: `explore` and `paper`.\n\nIt is also possible to provide a custom style, either by providing a custom instance of the class Style (see style.py), or by providing a dictionary of settings.\nThe existing settings and their default values are:\n* shared_axis (bool, default: False): if True, the voltage and current traces are plotted on the same axis.\n* show_spines (bool, default: True): if True, shows the spine (frame) around the plots.\n* scale_bars (bool, default: False): if True, draws mV, nA and ms scale bars on the plots.\n* linewidth (float, default: 1): width of the voltage and current traces.\n* voltage_color (str, default: \"black\"): color of the voltage traces.\n* voltage_alpha (float, default: 1): transparency of the voltage traces.\n* current_color (str, default: \"gray\"): color of the current traces.\n* current_alpha (float, default: 1): transparency of the current traces.\n* wrap_title (bool, default: True): should the title be wrapped at 50 characters if too long. Put False if you formatted the title yourself.\n* title_fontsize (float, default: 14): fontsize of the title.\n* scale_bars_fontsize (float, default: 10): fontsize of the scale bar labels.\n* scale_bars_linewidth (float, default: 1): width of the scale bars.\n* label_fontsize (float, default: 12): fontsize of the labels.\n\nDrawing scale bars\n===========\n\nScale bars will be drawn on the plots if the style setting `scale_bars` is set to True.\n\nThe `draw_scale_bars` function can also be used as a stand alone function if you have your own figures. To do so, provide the axis object as follows:\n```\ndraw_scale_bars(axis=your_axis, is_current=False, style=\"paper\")\n```\nThe `is_current` parameter indicate if the data on the axis is current or voltage.\nThis function except the x-axis to be time in ms and the y-axis to be the matching voltage or current times series in mV and nA respectively.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GNU General Public License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matplotlib-ephys",
    "package_url": "https://pypi.org/project/matplotlib-ephys/",
    "platform": null,
    "project_url": "https://pypi.org/project/matplotlib-ephys/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/matplotlib-ephys/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Electrophysiology plotting functions",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14513308,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80cb3c3cebe1c418f7548cbd47bb6a44619c00e63c13875fb303638485a1cfd4",
          "md5": "09d7c92a316b967f84f0cd0cd2decbb4",
          "sha256": "fbc9b13f8d70d6b5e9110d699f2e981bb539f01e8085d0bb9acd9a11d8f9ea85"
        },
        "downloads": -1,
        "filename": "matplotlib-ephys-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "09d7c92a316b967f84f0cd0cd2decbb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20505,
        "upload_time": "2022-07-22T07:09:52",
        "upload_time_iso_8601": "2022-07-22T07:09:52.834038Z",
        "url": "https://files.pythonhosted.org/packages/80/cb/3c3cebe1c418f7548cbd47bb6a44619c00e63c13875fb303638485a1cfd4/matplotlib-ephys-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c21e6a3e048501c59cd55f44b2fbed4fb82faf5e4180583364b621696cf27f2c",
          "md5": "feccec1cf35d2c7a210016c76df3a367",
          "sha256": "23951e5d8eb3950962d0a2ae298901261ab89b570d695cd3c364e64e9f98e963"
        },
        "downloads": -1,
        "filename": "matplotlib-ephys-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "feccec1cf35d2c7a210016c76df3a367",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20531,
        "upload_time": "2022-07-22T07:17:26",
        "upload_time_iso_8601": "2022-07-22T07:17:26.307672Z",
        "url": "https://files.pythonhosted.org/packages/c2/1e/6a3e048501c59cd55f44b2fbed4fb82faf5e4180583364b621696cf27f2c/matplotlib-ephys-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c21e6a3e048501c59cd55f44b2fbed4fb82faf5e4180583364b621696cf27f2c",
        "md5": "feccec1cf35d2c7a210016c76df3a367",
        "sha256": "23951e5d8eb3950962d0a2ae298901261ab89b570d695cd3c364e64e9f98e963"
      },
      "downloads": -1,
      "filename": "matplotlib-ephys-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "feccec1cf35d2c7a210016c76df3a367",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 20531,
      "upload_time": "2022-07-22T07:17:26",
      "upload_time_iso_8601": "2022-07-22T07:17:26.307672Z",
      "url": "https://files.pythonhosted.org/packages/c2/1e/6a3e048501c59cd55f44b2fbed4fb82faf5e4180583364b621696cf27f2c/matplotlib-ephys-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}