{
  "info": {
    "author": "p697",
    "author_email": "254139147@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\ncloudmusic: 网易云爬虫解决方案\n=======================\n\n一个功能强大的python库，使用最简单易用的方法获取一切你想要的信息。\n支持python3以上版本\n\n安装\n-----\n```bash\npip install cloudmusic\n```\n\n简单示例\n-----\n- 通过歌曲id获取Music对象，并展示部分属性\n```python\nmusic = cloudmusic.getMusic(1347630432)\n\nprint(\"歌名：{}\".format(music.name))\nprint(\"歌手：{}\".format(music.artist))\nprint(\"音频文件url：{}\".format(music.url))\n\n# >>>\n# 歌名：白日 日剧《冤罪律师》主题曲\n# 歌手：['King Gnu']\n# 音频文件url：http://m10.music.126.net/.../.mp3\n\n```\n\n- 通过歌单id获取Music对象列表，并下载整个歌单的无损品质音频\n```python\nplaylist = cloudmusic.getPlaylist(310729011)\n\nfor music in playlist:\n    music.download(level = \"lossless\")\n\n```\n\n- 获取一首歌的热评并展示部分信息\n```python\nmusic = cloudmusic.getMusic(1347630432)\n\ncoms = music.getHotComments()\n\nfor com in coms:\n    print(\"发布者：{}\".format(com['nickName']))\n    print(\"内容：{}\".format(com['content']))\n    print(\"获赞数：{}\".format(com['likeCount']))\n    print(\"------------\")\n\n# >>>\n# 发布者：Akikonknk\n# 内容：特别喜欢日剧的一个原因 大概就是它帮你认清生活的真相之后 依然教会你如何热爱生活\n# 获赞数：19451\n# ------------\n# 发布者：我藏起来啦嘻嘻\n# 内容：最后一集的犯人真的是应证了那一句话“雪崩的时候没有一片雪花是无辜的”\n# 获赞数：6690\n# ------------\n# 发布者：Usio叔叔\n# ...\n\n```\n\n- 通过关键字搜索获取前100首歌曲的Music对象，并输出每首歌的评论数量\n```python\nresults = cloudmusic.search(\"白日\", 100)\n\nfor music in results:\n    print(music.getCommentsCount())\n\n# 5745\n# 77\n# 181\n# 560\n# 368\n# ...\n\n```\n----\n\n参考文档\n-----\n### Music对象\n#### 1.Music对象属性\n- **url**：歌曲音频文件链接\n- **id**：歌曲id\n- **name**：歌曲名称\n- **artist**：歌手名称\n- **artistId**: 歌手id\n- **album**：专辑名称\n- **albumId**: 专辑id\n- **size**：音频文件大小\n- **type**：音频文件类型（mp3或m4a）\n- **level**：歌曲品质。默认higher\n- **picUrl**: 专辑图url\n\n#### 2.Music对象方法\n- #### `download(dirs, level)` \n   >***dirs***：可选。下载保存路径。默认为当前文件夹内创建的新的cloudmusic文件夹。 \n  ***level***：可选，字符型。默认higher。下载品质，有且只有四种选择：standard，higher，exhigh，lossless。\n\n   下载歌曲，返回值为下载绝对路径\n\n\n- #### `getHotComments(number)` \n  >***number***：可选，整型，默认为15。希望获取的评论个数。上限为15个。\n\n  获取热评。返回值为列表，列表元素为字典，字典内容： \n  *\"likeCount\"：获赞数* \n  *\"content\"：评论内容* \n  *\"time\"：评论时间* \n  *\"userId\"：用户id* \n  *\"nickNamd\"：用户昵称* \n  *\"avatarUrl\"：用户头像url* \n  *\"vipType\"：0表示未开通vip，10表示开通音乐包，11表示开通黑胶* \n  *\"userType\"：0表示普通用户，非0表示特殊用户（明星，丁磊，网红，小秘书等）*\n\n\n- #### `getComments(number)`\n  >***number***：整型，评论个数。数量无限制。\n\n  获取最新的评论。返回值与getHotReview相同。\n\n\n- #### `getLyrics()`\n  获取歌词。返回值为列表。元素1为原始歌词，元素2为翻译歌词。\n\n\n- #### `getCommentsCount()`\n  返回值为整型，本首歌的评论数量。\n\n#### 3.获取Music对象函数\n\n- #### `getMusic(id/id_list)`\n  >***id/id_list***: 必须，整型、字符型或列表。歌曲id或由歌曲id组成的列表。\n\n  通过歌曲id或一个由id组成的列表生成music对象。当参数为单个id时返回值为单个music对象，当参数为id列表时返回值为music对象组成的列表。\n\n- #### `getPlaylist(id)`\n  >***id***：必须，整型或字符型。歌单id。\n\n  通过歌单id生成music对象，参数为歌单id，返回值为歌单内所有歌曲对应music对象组成的列表。\n\n- #### `search(content, number)`\n  >***content***：必须，字符型。搜索关键字。 \n  ***number***：可选，整形，搜索结果个数，默认为5。\n\n  通过关键词搜索获取music对象。返回值为music对象组成的列表。\n\n- #### `getAlbum(id)` \n  >***id***: 必须，整型或字符型。专辑id。\n\n  和getPlaylist一样。\n\n---\n\n### User对象\n#### 1.User对象属性\n- **id**：用户id\n- **level**：用户等级\n- **listenSongs**：累计听歌数量\n- **createTime**：账号创建时间\n- **nickName**：用户昵称\n- **avatarUrl**：头像url\n- **city**：所在城市的行政区划代码\n- **province**：所在省份的行政区划代码\n- **vipType**：vip类型。0表示未开通vip，10表示开通音乐包，11表示开通黑胶\n- **birthday**：生日时间戳\n- **signature**：个性签名\n- **fans**：粉丝数量\n- **follows**：关注的用户数量\n- **eventCount**：动态数量\n- **playlistCount**：创建的歌单数量\n\n#### 2.User对象方法\n\n- #### `getPlaylist()`\n  获取用户创建和收藏的全部歌单，返回值为一个列表，每个元素是一个歌单信息组成的字典。字典内容： \n  *id：歌单id；* \n  *name：歌单名称；* \n  *creatorId：创建者id；* \n  *createTime：创建时间；* \n  *coverImgUrl：歌单封面图片url；* \n  *updateTime：歌单最后一次更新时间；* \n  *tags：歌单所属音乐风格，列表形式*\n\n- #### `getRecord(recordType)`\n  >***recordType***: 可选。默认为0。为0返回所有时间排行，非0返回最近一周排行。\n\n  获取用户听歌排行，返回一个列表，元素为字典。字典内容： \n  *score：分值。100表示听歌次数最多，越小越少；* \n  *music：Music对象*\n\n#### 3.获取User对象函数\n\n- #### `getUser(id)`\n  >***id***：必须，用户id。\n\n  通过用户id获取User对象，返回值为User对象。\n\n---\n@p697\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/p697/cloudmusic",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cloudmusic",
    "package_url": "https://pypi.org/project/cloudmusic/",
    "platform": "",
    "project_url": "https://pypi.org/project/cloudmusic/",
    "project_urls": {
      "Homepage": "https://github.com/p697/cloudmusic"
    },
    "release_url": "https://pypi.org/project/cloudmusic/0.1.1/",
    "requires_dist": [
      "requests",
      "lxml",
      "pycryptodomex",
      "threadpool"
    ],
    "requires_python": ">=3.0.0",
    "summary": "网易云爬虫解决方案",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7476718,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f054efd39860c9964ef27288d7e2091a52cb4850e5b3ff964357cdc2ee9a7448",
          "md5": "54480d9740a05661f0616ee08c69c052",
          "sha256": "65f962ead3748e8b9ca47d7c90cb69bfbeebcdf3e935487174146c303e5219e0"
        },
        "downloads": -1,
        "filename": "cloudmusic-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54480d9740a05661f0616ee08c69c052",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.0.0",
        "size": 14945,
        "upload_time": "2020-02-18T12:07:16",
        "upload_time_iso_8601": "2020-02-18T12:07:16.600446Z",
        "url": "https://files.pythonhosted.org/packages/f0/54/efd39860c9964ef27288d7e2091a52cb4850e5b3ff964357cdc2ee9a7448/cloudmusic-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d93cf313d90c2c2aa96e63a66f3ca2b7f57c8770ae0c474d38e5da6ba929bd4",
          "md5": "aa5899a2656c71924847cd6202fb6c1c",
          "sha256": "5a613eb54f845bd119c1e555f2ea4c668cf773704660e4f2aeb1bdcbbac0cbb3"
        },
        "downloads": -1,
        "filename": "cloudmusic-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aa5899a2656c71924847cd6202fb6c1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0.0",
        "size": 16467,
        "upload_time": "2020-02-18T12:07:19",
        "upload_time_iso_8601": "2020-02-18T12:07:19.782296Z",
        "url": "https://files.pythonhosted.org/packages/4d/93/cf313d90c2c2aa96e63a66f3ca2b7f57c8770ae0c474d38e5da6ba929bd4/cloudmusic-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a45af4b2b4fbc4b4eecce2c56f46a45a7f59750f7871815e36e96d3959ee3453",
          "md5": "0b178fa5973b8a2bb92e9fd209eb7f27",
          "sha256": "5b1313599a2f17eb18d7a3c78d122d5f1d216378481c8a7c659ddc66be9455fe"
        },
        "downloads": -1,
        "filename": "cloudmusic-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b178fa5973b8a2bb92e9fd209eb7f27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0.0",
        "size": 15832,
        "upload_time": "2020-06-15T03:24:20",
        "upload_time_iso_8601": "2020-06-15T03:24:20.131848Z",
        "url": "https://files.pythonhosted.org/packages/a4/5a/f4b2b4fbc4b4eecce2c56f46a45a7f59750f7871815e36e96d3959ee3453/cloudmusic-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a45af4b2b4fbc4b4eecce2c56f46a45a7f59750f7871815e36e96d3959ee3453",
        "md5": "0b178fa5973b8a2bb92e9fd209eb7f27",
        "sha256": "5b1313599a2f17eb18d7a3c78d122d5f1d216378481c8a7c659ddc66be9455fe"
      },
      "downloads": -1,
      "filename": "cloudmusic-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0b178fa5973b8a2bb92e9fd209eb7f27",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.0.0",
      "size": 15832,
      "upload_time": "2020-06-15T03:24:20",
      "upload_time_iso_8601": "2020-06-15T03:24:20.131848Z",
      "url": "https://files.pythonhosted.org/packages/a4/5a/f4b2b4fbc4b4eecce2c56f46a45a7f59750f7871815e36e96d3959ee3453/cloudmusic-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}