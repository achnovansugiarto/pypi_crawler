{
  "info": {
    "author": "Scott MacGregor",
    "author_email": "smacgregor@d2iq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Topic :: Terminals"
    ],
    "description": "# powerline-inject \n\n[![pypi](http://img.shields.io/pypi/v/powerline-inject.png)](https://pypi.python.org/pypi/powerline-inject)\n[![Supported Python Versions](https://img.shields.io/pypi/pyversions/powerline-inject.svg)](https://pypi.python.org/pypi/powerline-inject/)\n[![License](https://img.shields.io/pypi/l/powerline-inject.svg)](https://pypi.python.org/pypi/powerline-inject/)\n\n`powerline-inject` is a [Powerline](https://github.com/powerline/powerline) status segment addon for showing ENV with extra knobs.\n\nThis can be natively done with `powerline.segments.common.env.environment` if knobs aren't needed:\n\n```json\n{\n\t\"segments\":\n\t{\n\t\t\"left\":\n\t\t[\n\t\t\t{ \"function\":\n\t\t\t\t\"powerline.segments.common.env.environment\",\n\t\t\t\t\"name\": \"aws\",\n\t\t\t\t\"priority\": 20,\n\t\t\t\t\"before\": \"⩜ \",\n\t\t\t\t\"args\": {\n\t\t\t\t\t\"variable\": \"SOME_ENV\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n}\n```\n\nCouple knobs featured that `powerline-inject` has are:\n\n1. The ability to toggle on or off the powerline-inject segment using an environment variable which can easily be mapped to a function in your `~/.bash_profile`.\n2. The ability to show only a symbol when the variables holds value. (SECRET KEYS, TOKENS, etc.)\n3. Multiple different highlighter profiles for your ENV lists.\n\nThe screenshot below demonstrates this functionality:\n\n[![screenshot](usage_screenshot.png)](https://pypi.org/project/powerline-inject/)\n\n## Installation\n\n1. **Add the Python package**.  powerline-inject is available on pypi so you can install it with pip:\n\n```bash\npip install --user powerline-inject\n```\n\n2. **Create a user configuration directory**. \n\nOnce powerline-inject has been installed, we'll need to add it to our powerline shell's theme and colorscheme. \n\nAlter your powerline user config: \n\nIf you don't already have a `~/.config/powerline/` folder, create it. Next we'll be copying some of the default powerline configs into this location. Find where powerline is installed by using `pip show powerline-status | grep 'Location'`, then navigate to the `config_files/` folder there. We'll be copying `config.json`, `themes/shell/default.json`, and `colorschemes/shell/default.json` to our `~/.config/powerline/` folder, adding the necessary folders to match that original file structure (i.e. adding the `themes/` and `colorschemes/` folders, etc.\n\n3. **Add powerline-inject to your user config**. \n\nWithin our user config, we'll need to add the powerline-inject segment to our shell by adding the following lines to our `~/.config/powerline/themes/shell/default.json`:\n\n```json\n    {\n\t    \"function\": \"powerline_inject.context\",\n\t    \"priority\": 30,\n\t    \"args\": {\n\t\t\t\"show_env\": true,\n\t\t\t\"env_list\": [\"AWS_PROFILE\", \"TOKEN_X\"]\n\t\t}\n    }\n```\n\nNext we'll add the highlighting colors we'll use to our `~/.config/powerline/colorschemes/shell/default.json`:\n\n```json\n    {\n\t    \"name\": \"Default\",\n\t    \"groups\": {\n\t\t\t\"powerline_inject\": { \"fg\": \"white\", \"bg\": \"red\", \"attrs\": [] },\n\t\t\t\"powerline_inject_bold\": { \"fg\": \"white\", \"bg\": \"brightred\", \"attrs\": [] },\n\t    }\n    }\n```\n\n4. You will need to reload powerline with `powerline-daemon --replace` to load the new settings. That's it!\n\n5. (Optional) By default powerline-inject will render the environment variable if `RENDER_POWERLINE_INJECTS` is either set to `YES` or is not set at all. Rather than setting this variable manually, you can create a simple `powerline-inject-toggle` function by placing the following in your `~/.bash_profile`:\n\n```bash\n        function powerline-injects-toggle() {\n            if [[ $RENDER_POWERLINE_INJECTS = \"NO\" ]]; then\n                export RENDER_POWERLINE_INJECTS=\"YES\"\n            else\n                export RENDER_POWERLINE_INJECTS=\"NO\"\n            fi\n        }\n```\n\n## Confidential ENV use\n\nYou may find you want to know when you have **SECRETS** loaded into your **ENVIRONMENT**. This will show only a symbol `⩜` when the `SECRET_TOKEN` or `AWS_PROFILE` is loaded.\n\n```json\n\t{\n\t\t\"function\": \"powerline_inject.context\",\n\t\t\"priority\": 30,\n\t\t\"args\": {\n\t\t\t\"show_env\": false,\n\t\t\t\"env_list\": [\"SECRET_TOKEN\", \"AWS_PROFILE\"],\n\t\t\t\"before\": \"⩜ \"\n\t\t}\n\t},\n```\n\nYou can further add a second call to `powerline_inject.context` with a different `before` symbol and/or `env_highlighter` in args like the `powerline_inject_bold` defined above.\n\n```json\n\t{\n\t\t\"function\": \"powerline_inject.context\",\n\t\t\"priority\": 30,\n\t\t\"name\": \"second_injection\",\n\t\t\"args\": {\n\t\t\t\"show_env\": false,\n\t\t\t\"env_list\": [\"SECRET_TOKEN\", \"AWS_PROFILE\"],\n\t\t\t\"env_highlighter\": \"powerline_inject_bold\"\n\t\t}\n\t},\n```\n\n## Used with `PROMPT_COMMAND` for ENV refresh\n\nYou may want to use this with a PROMPT COMMAND that updates the ENVs being checked everytime. As an example `aws-test-authentication` sets `AWS_EPOCH` and `AWS_PROFILE`.\n\nPut this in your `~/.bash_profile`\n\n```bash\nexport PROMPT_COMMAND=\"eval \\$(aws-test-authentication); $PROMPT_COMMAND\"\n```\n\nYou're all set up! Happy coding!\n\n## License\n\nLicensed under the [Apache License 2.0](LICENSE).  \nOriginal fork is at https://github.com/zcmarine/powerkube.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/d2iq-shadowbq/powerline-inject/tarball/0.1.6",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/d2iq-shadowbq/powerline-inject",
    "keywords": "powerline,powerline_inject",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "powerline-inject",
    "package_url": "https://pypi.org/project/powerline-inject/",
    "platform": "",
    "project_url": "https://pypi.org/project/powerline-inject/",
    "project_urls": {
      "Download": "https://github.com/d2iq-shadowbq/powerline-inject/tarball/0.1.6",
      "Homepage": "https://github.com/d2iq-shadowbq/powerline-inject"
    },
    "release_url": "https://pypi.org/project/powerline-inject/0.1.6/",
    "requires_dist": [
      "powerline-status (>=2.7)"
    ],
    "requires_python": ">=3.6",
    "summary": "A powerline segment to show an ENV list with extra knobs",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6498231,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90aec8ee08abaabdddc507ce7357ce05eae3358277b32aef9cbb7147eca61ae0",
          "md5": "e718fe8ece1613490a052d07de0de092",
          "sha256": "a70698a395ce65b4551c2dac61195349fb03a2d0da2da505f1ccda3e29227c6a"
        },
        "downloads": -1,
        "filename": "powerline_inject-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e718fe8ece1613490a052d07de0de092",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6765,
        "upload_time": "2020-01-21T20:05:00",
        "upload_time_iso_8601": "2020-01-21T20:05:00.556524Z",
        "url": "https://files.pythonhosted.org/packages/90/ae/c8ee08abaabdddc507ce7357ce05eae3358277b32aef9cbb7147eca61ae0/powerline_inject-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62b98c43e5d15ca1b0692f642b047735f87c6dc5abb9f0feea83eba8b4d3f1f1",
          "md5": "720f97bb627051860e6cfaadfa965be1",
          "sha256": "8942b1daffab0d9c47eb0e11137b0151b09090e9a26f7ad637a80111cccdf0c0"
        },
        "downloads": -1,
        "filename": "powerline-inject-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "720f97bb627051860e6cfaadfa965be1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3857,
        "upload_time": "2020-01-21T20:05:03",
        "upload_time_iso_8601": "2020-01-21T20:05:03.042466Z",
        "url": "https://files.pythonhosted.org/packages/62/b9/8c43e5d15ca1b0692f642b047735f87c6dc5abb9f0feea83eba8b4d3f1f1/powerline-inject-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82e224ec21a24e0ddd8a96ca9b8b4b307589641073fe43ed5511863571760c71",
          "md5": "2fa25dd3cab17cb52c47e77208f6047b",
          "sha256": "af10b68f00adc72de4108d3600784a0b67b8e8e33cf148940d2f17b360f1c375"
        },
        "downloads": -1,
        "filename": "powerline_inject-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2fa25dd3cab17cb52c47e77208f6047b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8421,
        "upload_time": "2020-01-21T22:09:57",
        "upload_time_iso_8601": "2020-01-21T22:09:57.573473Z",
        "url": "https://files.pythonhosted.org/packages/82/e2/24ec21a24e0ddd8a96ca9b8b4b307589641073fe43ed5511863571760c71/powerline_inject-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bef29cd3f793cee6d6da0e1d92c37ec1b80828291b46687d2b81be16ba1220a4",
          "md5": "c7aa9ab5b5f86677371e7f07dabef731",
          "sha256": "6d3b84640405a95b5818346e73aeda3ba4d2e34a57b46ccd7d707f8811148b48"
        },
        "downloads": -1,
        "filename": "powerline-inject-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c7aa9ab5b5f86677371e7f07dabef731",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4350,
        "upload_time": "2020-01-21T22:09:58",
        "upload_time_iso_8601": "2020-01-21T22:09:58.728555Z",
        "url": "https://files.pythonhosted.org/packages/be/f2/9cd3f793cee6d6da0e1d92c37ec1b80828291b46687d2b81be16ba1220a4/powerline-inject-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "986dbfb4ac9a9e7d724cb9a28ae0a63572ff4e45c935244baa5b8cd681bc5488",
          "md5": "a67cffcb391a4c2b754a833490b7a0e9",
          "sha256": "93dc5b0b1ed69be5ace2c931a6911020c448aa86ae5bdccfa19b228c697f8db7"
        },
        "downloads": -1,
        "filename": "powerline_inject-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a67cffcb391a4c2b754a833490b7a0e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8746,
        "upload_time": "2020-01-22T04:08:57",
        "upload_time_iso_8601": "2020-01-22T04:08:57.815871Z",
        "url": "https://files.pythonhosted.org/packages/98/6d/bfb4ac9a9e7d724cb9a28ae0a63572ff4e45c935244baa5b8cd681bc5488/powerline_inject-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fcd038c611102f852e1b89042789f1c59480082b516a963acf7e2931de6271c",
          "md5": "fd0fcc9ebf627ef1c87f737d359e2903",
          "sha256": "8733928f0db4dccf291c6a60a33abaf6f91354c755b49002398e7ddf21855504"
        },
        "downloads": -1,
        "filename": "powerline-inject-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "fd0fcc9ebf627ef1c87f737d359e2903",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4751,
        "upload_time": "2020-01-22T04:08:59",
        "upload_time_iso_8601": "2020-01-22T04:08:59.357999Z",
        "url": "https://files.pythonhosted.org/packages/6f/cd/038c611102f852e1b89042789f1c59480082b516a963acf7e2931de6271c/powerline-inject-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "986dbfb4ac9a9e7d724cb9a28ae0a63572ff4e45c935244baa5b8cd681bc5488",
        "md5": "a67cffcb391a4c2b754a833490b7a0e9",
        "sha256": "93dc5b0b1ed69be5ace2c931a6911020c448aa86ae5bdccfa19b228c697f8db7"
      },
      "downloads": -1,
      "filename": "powerline_inject-0.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a67cffcb391a4c2b754a833490b7a0e9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8746,
      "upload_time": "2020-01-22T04:08:57",
      "upload_time_iso_8601": "2020-01-22T04:08:57.815871Z",
      "url": "https://files.pythonhosted.org/packages/98/6d/bfb4ac9a9e7d724cb9a28ae0a63572ff4e45c935244baa5b8cd681bc5488/powerline_inject-0.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6fcd038c611102f852e1b89042789f1c59480082b516a963acf7e2931de6271c",
        "md5": "fd0fcc9ebf627ef1c87f737d359e2903",
        "sha256": "8733928f0db4dccf291c6a60a33abaf6f91354c755b49002398e7ddf21855504"
      },
      "downloads": -1,
      "filename": "powerline-inject-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "fd0fcc9ebf627ef1c87f737d359e2903",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4751,
      "upload_time": "2020-01-22T04:08:59",
      "upload_time_iso_8601": "2020-01-22T04:08:59.357999Z",
      "url": "https://files.pythonhosted.org/packages/6f/cd/038c611102f852e1b89042789f1c59480082b516a963acf7e2931de6271c/powerline-inject-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}