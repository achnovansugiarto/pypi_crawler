{
  "info": {
    "author": "Hillel ch.",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Topic :: Communications",
      "Topic :: Internet :: Proxy Servers"
    ],
    "description": "# pyekonlib\n\nThis is a package that implements Ekon/Connect/Airconet+ communication protocol with the wireless HVAC Controller.\n\n# How device communication works\n## AP association to the Wifi network\nThe device, being esp8285-like-based, utilize ESPTouch/ESPSmart config method in order to find\nand convey the wifi network credentials to the device.\nThis can be achived using the original app, or through any alternative app such as [ESPTouch](https://play.google.com/store/apps/details?id=com.khoazero123.iot_esptouch_demo)\n\n##  Configuring the device\nAfter the device has joind the wireless network it is required to tell it to what server to connect to,\nthis is done by an HTTP POST to the device\n ```\nPOST /config?command=client HTTP/1.1\nUser-Agent: LuaSocket 2.0.2\nContent-Length: <content-length>\nContent-Type: application/json; charset=utf-8\nHost: 1.1.1.1\n\n{\"client_set\":[{\"ip\":\"<server_addr>\",\"port\":<server_udp_port>,\"protocol\":\"UDP\",\"local_port\":80},{\"protocol\":\"\",\"ip\":\"\"},{\"protocol\":\"\",\"ip\":\"\"},{\"protocol\":\"\",\"ip\":\"\"}]}\n```\nYup, the communication is connection-less UDP.\nWith the `client` we can instruct the device to communicate with are own crafted server,\nimplemented by this library, reside on arbitrary ip address.\n**The entire request, should be sent in a single send() call**, thus any python http library for curl request would probably won't suffice\n\nThis can be performed by the library\n```\nfrom pyekonlib.Migration import SetDeviceUDPServer\n\nSetDeviceUDPServer(\"deviceAddr\", \"serverAddr\", serverPort)\n```\nwhere `serverAddr` is the address of the machine running this lib's server\nand serverPort is the UDP port it's listening on\n\n## Protocol\nNot all fields were identified, but enough was identified in order to \ngive basic meaning and parse incoming frames from the device, and forge \nframes that would be understood by the device. Please tell if u have an\nidea about the contents of the fields that are not fully understood :P\n\n\n# Known issues\n- In Forward mode, using the Ekon/TC app, You may change settings of the HVAC, and it will ignore you \\\n  This is due to the script pulling the device, and updating ekon's server before ekon server's sends out\n  the message to the device (or the `proxy` which is this lib). Increasing `SEND_HEARTBEAT_INTERVAL = 10` in the `ServerController`\n  might help with thad  \n- ~~While development I've stumbled situations where device stops responding, please take note if this happens~~\n  - Try to power-cycle the device, if not, hard-reset (button or `POST ?comand=restore` )  and pair with regular app to see that it's working\n  - **Havn't encountered in a while, this is probobly no longer an issue.**\n- Should't matter to most of you: Device emulation (I.E. Simulating a device) is only slightly implemented - NOT WORKING\n\n# Code structure\nI've stuck to most of the code being async and roughly async-framework agnostic\n(I probably did it really bad if U know something in python, please PR)\n- Frames - Abstract raw protocol datagrams away from the caller\n- Controllers - Abstracts the interactions of the protocol away from the caller\n  - Responsible for both side of communication and\n    receiving/sending using the specified callbacks.\n  - Provides callback to the user when identifying new device and \n    the receiving of a new (or equally, old) state from the device   \n- Server - Abstracts mostly anything and gives out callbacks for device connection,\n  disconnection, and updates from the device, plus sending new state to the device.\n\n# Note from the developer\nI'm not a developer, I'm a security researcher, as such the code quality is probably poor\nnor do I like python so much but it seemed most reasonable to do this in python.\nThe main thought when abstracting-away the protocol and communication was to implement integration for \nvarious Smart-home integration solutions, such as HomeAssistant.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hllhll/pyekonlib",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyekonlib",
    "package_url": "https://pypi.org/project/pyekonlib/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyekonlib/",
    "project_urls": {
      "Homepage": "https://github.com/hllhll/pyekonlib"
    },
    "release_url": "https://pypi.org/project/pyekonlib/0.3/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Server and client modules for Ekon/Connect/Airconet+",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9094397,
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed91cb6eb5513ace744f163578e215b8437e2134b423628b1ad189a1ebfc2611",
          "md5": "16a514f5ac0abf51af34540c203e3928",
          "sha256": "c6c2de5967f864222ced4d85e318cb2d9a3fad7c7d90ae8b7e6cc0a1921e1c16"
        },
        "downloads": -1,
        "filename": "pyekonlib-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16a514f5ac0abf51af34540c203e3928",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11883,
        "upload_time": "2021-01-09T20:47:59",
        "upload_time_iso_8601": "2021-01-09T20:47:59.856316Z",
        "url": "https://files.pythonhosted.org/packages/ed/91/cb6eb5513ace744f163578e215b8437e2134b423628b1ad189a1ebfc2611/pyekonlib-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18e966cb18b96a4ac9e43f866800a2375a74a6d5cd855597c24fe5b545f69739",
          "md5": "585ff2fbaa260b581da44bf1e6765e5d",
          "sha256": "30612963d95697979c2810f00e19a0d6ecb4d1d5468bcd1c8f6c7795bf852fb2"
        },
        "downloads": -1,
        "filename": "pyekonlib-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "585ff2fbaa260b581da44bf1e6765e5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 13725,
        "upload_time": "2021-01-09T20:48:01",
        "upload_time_iso_8601": "2021-01-09T20:48:01.093951Z",
        "url": "https://files.pythonhosted.org/packages/18/e9/66cb18b96a4ac9e43f866800a2375a74a6d5cd855597c24fe5b545f69739/pyekonlib-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed91cb6eb5513ace744f163578e215b8437e2134b423628b1ad189a1ebfc2611",
        "md5": "16a514f5ac0abf51af34540c203e3928",
        "sha256": "c6c2de5967f864222ced4d85e318cb2d9a3fad7c7d90ae8b7e6cc0a1921e1c16"
      },
      "downloads": -1,
      "filename": "pyekonlib-0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "16a514f5ac0abf51af34540c203e3928",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 11883,
      "upload_time": "2021-01-09T20:47:59",
      "upload_time_iso_8601": "2021-01-09T20:47:59.856316Z",
      "url": "https://files.pythonhosted.org/packages/ed/91/cb6eb5513ace744f163578e215b8437e2134b423628b1ad189a1ebfc2611/pyekonlib-0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18e966cb18b96a4ac9e43f866800a2375a74a6d5cd855597c24fe5b545f69739",
        "md5": "585ff2fbaa260b581da44bf1e6765e5d",
        "sha256": "30612963d95697979c2810f00e19a0d6ecb4d1d5468bcd1c8f6c7795bf852fb2"
      },
      "downloads": -1,
      "filename": "pyekonlib-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "585ff2fbaa260b581da44bf1e6765e5d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 13725,
      "upload_time": "2021-01-09T20:48:01",
      "upload_time_iso_8601": "2021-01-09T20:48:01.093951Z",
      "url": "https://files.pythonhosted.org/packages/18/e9/66cb18b96a4ac9e43f866800a2375a74a6d5cd855597c24fe5b545f69739/pyekonlib-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}