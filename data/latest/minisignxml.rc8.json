{
  "info": {
    "author": "Jonas Obrist",
    "author_email": "jonas.obrist@hennge.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Security :: Cryptography",
      "Topic :: Text Processing :: Markup :: XML",
      "Typing :: Typed"
    ],
    "description": "# minisignxml\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![CircleCI](https://circleci.com/gh/HENNGE/minisignxml.svg?style=svg)](https://circleci.com/gh/HENNGE/minisignxml)\n\n\nPython library to sign and verify XML documents. \n\nThis library, *on purpose*, only supports a limited part of the xmldsig specification. It is mainly aimed at allowing SAML documents to be signed and verified.\n\nSupported features:\n\n* Simple API.\n* Only support enveloped signatures (`http://www.w3.org/2000/09/xmldsig#enveloped-signature`)\n* Require and only support exclusive XML canonincalization without comments (`http://www.w3.org/2001/10/xml-exc-c14n#`)\n* Support SHA-256 (default) and SHA-1 (for compatibility, not recommended) for signing and digest (`https://www.w3.org/2000/09/xmldsig#sha1`, `https://www.w3.org/2000/09/xmldsig#rsa-sha1`, `http://www.w3.org/2001/04/xmlenc#sha256`, `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`)\n* Only support X509 certificates and RSA private keys\n* Uses `lxml` for XML handling and `cryptography` for cryptography.\n* Only supports a single signature, with a single reference in a document.\n* Support certificate rollover by providing multiple certificates when verifying a document.\n\n`minisignxml` performs no IO and you have to manage and load the keys/certificates yourself.\n\n## API\n\n### Signing\n\n`minisignxml.sign.sign`\n\n```python\ndef sign(\n    *,\n    element: Element,\n    private_key: RSAPrivateKey,\n    certificate: Certificate,\n    config: SigningConfig = SigningConfig.default(),\n    index: int = 0,\n    attribute: str = \"ID\"\n) -> bytes:\n```\n\nSigns the given `lxml.etree._Element` with the given `cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey` private key, embedding the `cryptography.x509.Certificate` in the signature. Use `minisignxml.config.SigningConfig` to control the hash algorithms uses (default is SHA-256). The `index` controls at which index the signature element is appended to the element.\n\nIf the `element` passed in does not have an attribute matching `attribute`, an exception is raised. It is the callers responsibility to ensure the value of the `attribute` attribute of the `Element` is unique for the whole document.\n\nReturns `bytes` containing the serialized XML including the signature. \n\n#### SigningConfig\n\n`minisignxml.config.SigningConfig` is a `dataclass` with the following fields:\n\n* `signature_method`: A `cryptography.hazmat.primitives.hashes.HashAlgorithm` to use for the signature. Defaults to an instance of `cryptography.hazmat.primitives.hashes.SHA256`.\n* `digest_method`: A `cryptography.hazmat.primitives.hashes.HashAlgorithm` to use for the content digest. Defaults to an instance of `cryptography.hazmat.primitives.hashes.SHA256`.\n\n\n### Verifying\n\n`minisignxml.verify.extract_verified_element`\n\n```python\ndef extract_verified_element(\n    *, \n    xml: bytes, \n    certificate: Certificate,  \n    config: VerifyConfig=VerifyConfig.default(),\n    attribute: str = \"ID\"\n) -> Element:\n```\n\nVerifies that the XML document given (as bytes) is correctly signed using the private key of the `cryptography.x509.Certificate` provided. \n\nA successful call to `extract_verified_element` does not guarantee the integrity of the whole document passed to it via the `xml` parameter. Only the sub-tree returned from the function has been verified. The caller should use the returned `lxml.etree._Element` for further processing.\n\nRaises an exception (see `minisignxml.errors`, though other exceptions such as `ValueError`, `KeyError` or others may also be raised) if the verification failed. Otherwise returns the signed `lxml.etree._Element` (not necessarily the whole document passed to `extract_verified_element`), with the signature removed.\n\nYou can control the allowed signature and digest method by using a custom `VerifyConfig` instance. By default only SHA-256 is allowed.\n\n`minisignxml.verify.extract_verified_element_and_certificate`\n\n```python\ndef extract_verified_element_and_certificate(\n    *, \n    xml: bytes, \n    certificates: Collection[Certificate],  \n    config: VerifyConfig=VerifyConfig.default(),\n    attribute: str = \"ID\"\n) -> Tuple[Element, Certificate]:\n```\n\nSimilar to `extract_verified_element`, but allows specifying multiple certificates to aid certificate rollover.\nThe certificate that was used to sign the xml will be returned with the verified element.\n\n#### VerifyConfig\n\n`minisignxml.config.SigningConfig` is a `dataclass` with the following fields:\n\n* `allowed_signature_methods`: A container of `cryptography.hazmat.primitives.hashes.HashAlgorithm` types to allow for signing. Defaults to `{cryptography.hazmat.primitives.hashes.SHA256}`.\n* `allowed_digest_methods`: A container of `cryptography.hazmat.primitives.hashes.HashAlgorithm` types to allow for the content digest. Defaults to `{cryptography.hazmat.primitives.hashes.SHA256}`.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HENNGE/minisignxml",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minisignxml",
    "package_url": "https://pypi.org/project/minisignxml/",
    "platform": null,
    "project_url": "https://pypi.org/project/minisignxml/",
    "project_urls": {
      "Homepage": "https://github.com/HENNGE/minisignxml",
      "Repository": "https://github.com/HENNGE/minisignxml"
    },
    "release_url": "https://pypi.org/project/minisignxml/23.3/",
    "requires_dist": [
      "cryptography (>=2.8)",
      "defusedxml (>=0.6.0)",
      "lxml (>=4.4.1)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Minimal XML signature and verification, intended for use with SAML2",
    "version": "23.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17216819,
  "releases": {
    "20.11b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e928f79580c58a57ff3cba08055f9cbaa0379f814cff5532eb19440b6146cfa",
          "md5": "ef3133e6c1adf6a837a672783ebe96a3",
          "sha256": "e0a08b5e02828d75c65284faa6ea5621f4aac3c066b7e633cad688971153d86b"
        },
        "downloads": -1,
        "filename": "minisignxml-20.11b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef3133e6c1adf6a837a672783ebe96a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 9297,
        "upload_time": "2020-11-04T07:12:18",
        "upload_time_iso_8601": "2020-11-04T07:12:18.268903Z",
        "url": "https://files.pythonhosted.org/packages/4e/92/8f79580c58a57ff3cba08055f9cbaa0379f814cff5532eb19440b6146cfa/minisignxml-20.11b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.7b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cb29d6d2fe121504d0334705e261e6a2d8bff0867bd4102b97489da6a56d01d",
          "md5": "9f000e8f29c5173c2fd5e3fc822ebf59",
          "sha256": "876bb2e54314657d4ac48c873959ce31c57f1f6844579314986416f232643745"
        },
        "downloads": -1,
        "filename": "minisignxml-20.7b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f000e8f29c5173c2fd5e3fc822ebf59",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 8878,
        "upload_time": "2020-07-15T08:23:39",
        "upload_time_iso_8601": "2020-07-15T08:23:39.429925Z",
        "url": "https://files.pythonhosted.org/packages/1c/b2/9d6d2fe121504d0334705e261e6a2d8bff0867bd4102b97489da6a56d01d/minisignxml-20.7b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.8b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c78da11ecf00268f8138be8d500f5872f50111bbd126890610fbae5875c70be",
          "md5": "069645d66e4691d5e7197fe5556e1038",
          "sha256": "387826003aca1171d160dccb4a74ab1dc9a949bea9e2453bc25fbd9e250c01b7"
        },
        "downloads": -1,
        "filename": "minisignxml-20.8b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "069645d66e4691d5e7197fe5556e1038",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 8915,
        "upload_time": "2020-08-17T02:23:48",
        "upload_time_iso_8601": "2020-08-17T02:23:48.442682Z",
        "url": "https://files.pythonhosted.org/packages/2c/78/da11ecf00268f8138be8d500f5872f50111bbd126890610fbae5875c70be/minisignxml-20.8b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "21.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df005eff2c135e850126e8cfd986060f847a315c8c2485b6c2379c7efb94f5e5",
          "md5": "23a8364b1c0b5214dc45ae14c2e4bb39",
          "sha256": "6a7d7eeb5c691953b4103edf02ec022abc27489834012cede63e0aafaf264d6a"
        },
        "downloads": -1,
        "filename": "minisignxml-21.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23a8364b1c0b5214dc45ae14c2e4bb39",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 9277,
        "upload_time": "2021-10-07T07:29:44",
        "upload_time_iso_8601": "2021-10-07T07:29:44.701308Z",
        "url": "https://files.pythonhosted.org/packages/df/00/5eff2c135e850126e8cfd986060f847a315c8c2485b6c2379c7efb94f5e5/minisignxml-21.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2570e5538465a243d9e7c86613ae329501a9ecc0f5a1b7da9a53e4e0139c0030",
          "md5": "bca27642987c72f80840b3578c4fd4d3",
          "sha256": "797ce6112b540e5f2872e4ba20168596c0eb7429fdaa2a7ffcb6f8b7a2963ac4"
        },
        "downloads": -1,
        "filename": "minisignxml-21.10.tar.gz",
        "has_sig": false,
        "md5_digest": "bca27642987c72f80840b3578c4fd4d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 8743,
        "upload_time": "2021-10-07T07:29:46",
        "upload_time_iso_8601": "2021-10-07T07:29:46.392728Z",
        "url": "https://files.pythonhosted.org/packages/25/70/e5538465a243d9e7c86613ae329501a9ecc0f5a1b7da9a53e4e0139c0030/minisignxml-21.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "21.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8c81695be822332d52b2ba5f2bbd4152ac1e130256f4e8d6c5bd031e4b4b98f",
          "md5": "4269d98d4754c420fd7b81055b68c2ec",
          "sha256": "9a4f2ba83a8faa302dbc7f0c4efb5d2bf01ebbcd29a8256961bf7aa7906ff8ce"
        },
        "downloads": -1,
        "filename": "minisignxml-21.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4269d98d4754c420fd7b81055b68c2ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 9317,
        "upload_time": "2021-11-29T09:59:16",
        "upload_time_iso_8601": "2021-11-29T09:59:16.302694Z",
        "url": "https://files.pythonhosted.org/packages/a8/c8/1695be822332d52b2ba5f2bbd4152ac1e130256f4e8d6c5bd031e4b4b98f/minisignxml-21.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "22.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9aa6fe2f2621e02a55fb038a1713668538abe0f7e5edb212f8e43b68c55f2c2",
          "md5": "cc0caa3f9d64b2aec11e08d557f6c593",
          "sha256": "e326ab2b10c9494d2906bd2251f568233617befaffef832b9e20271c818ee0be"
        },
        "downloads": -1,
        "filename": "minisignxml-22.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc0caa3f9d64b2aec11e08d557f6c593",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 9309,
        "upload_time": "2022-04-14T02:53:58",
        "upload_time_iso_8601": "2022-04-14T02:53:58.013140Z",
        "url": "https://files.pythonhosted.org/packages/f9/aa/6fe2f2621e02a55fb038a1713668538abe0f7e5edb212f8e43b68c55f2c2/minisignxml-22.4-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "packaging error"
      }
    ],
    "22.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f32f228c4e1a6e1df09169e38298b9a79475252cae3ab2de436cd4367b183ce4",
          "md5": "794f6b847386f1a4f7336e5907982e57",
          "sha256": "4a6b29b4435a272d8443b75639932020276cec641b282cd3a271f71794cfa5e7"
        },
        "downloads": -1,
        "filename": "minisignxml-22.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "794f6b847386f1a4f7336e5907982e57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 9326,
        "upload_time": "2022-04-14T03:03:30",
        "upload_time_iso_8601": "2022-04-14T03:03:30.196885Z",
        "url": "https://files.pythonhosted.org/packages/f3/2f/228c4e1a6e1df09169e38298b9a79475252cae3ab2de436cd4367b183ce4/minisignxml-22.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "23.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "260ef828009cb1723ed093817b58e6dbe0424afc6cf4e5e84bf561aa4699b83c",
          "md5": "b08865f5f19b751d7a15db1e77a4f41f",
          "sha256": "0cc37f31d4609099b6d8135a877639bf5ce9d2df861c291dccc88e2122abe788"
        },
        "downloads": -1,
        "filename": "minisignxml-23.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b08865f5f19b751d7a15db1e77a4f41f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 9471,
        "upload_time": "2023-03-09T01:46:36",
        "upload_time_iso_8601": "2023-03-09T01:46:36.504188Z",
        "url": "https://files.pythonhosted.org/packages/26/0e/f828009cb1723ed093817b58e6dbe0424afc6cf4e5e84bf561aa4699b83c/minisignxml-23.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "260ef828009cb1723ed093817b58e6dbe0424afc6cf4e5e84bf561aa4699b83c",
        "md5": "b08865f5f19b751d7a15db1e77a4f41f",
        "sha256": "0cc37f31d4609099b6d8135a877639bf5ce9d2df861c291dccc88e2122abe788"
      },
      "downloads": -1,
      "filename": "minisignxml-23.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b08865f5f19b751d7a15db1e77a4f41f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 9471,
      "upload_time": "2023-03-09T01:46:36",
      "upload_time_iso_8601": "2023-03-09T01:46:36.504188Z",
      "url": "https://files.pythonhosted.org/packages/26/0e/f828009cb1723ed093817b58e6dbe0424afc6cf4e5e84bf561aa4699b83c/minisignxml-23.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}