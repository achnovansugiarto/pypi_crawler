{
  "info": {
    "author": "Christian B. Mendl",
    "author_email": "\"Christian B. Mendl\" <christian.b.mendl@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. image:: https://github.com/cmendl/pytenet/actions/workflows/ci.yml/badge.svg?branch=master\r\n  :target: https://github.com/cmendl/pytenet/actions/workflows/ci.yml\r\n.. image:: http://joss.theoj.org/papers/10.21105/joss.00948/status.svg\r\n  :target: https://doi.org/10.21105/joss.00948\r\n\r\n\r\nPyTeNet\r\n=======\r\n\r\n.. doc-inclusion-marker1-start\r\n\r\n`PyTeNet <https://github.com/cmendl/pytenet>`_ is a Python implementation of quantum\r\ntensor network operations and simulations within the matrix product state framework,\r\nusing NumPy to handle tensors.\r\n\r\nExample usage for TDVP time evolution:\r\n\r\n.. code-block:: python\r\n\r\n    import pytenet as ptn\r\n    \r\n    # number of lattice sites (1D with open boundary conditions)\r\n    L = 10\r\n    \r\n    # construct matrix product operator representation of\r\n    # Heisenberg XXZ Hamiltonian (arguments are L, J, \\Delta, h)\r\n    mpoH = ptn.heisenberg_XXZ_MPO(L, 1.0, 0.8, -0.1)\r\n    mpoH.zero_qnumbers()\r\n    \r\n    # initial wavefunction as MPS with random entries\r\n    # maximally allowed virtual bond dimensions\r\n    D = [1, 2, 4, 8, 16, 28, 16, 8, 4, 2, 1]\r\n    psi = ptn.MPS(mpoH.qd, [Di*[0] for Di in D], fill='random')\r\n    # effectively clamp virtual bond dimension of initial state\r\n    Dinit = 8\r\n    for i in range(L):\r\n        psi.A[i][:, Dinit:, :] = 0\r\n        psi.A[i][:, :, Dinit:] = 0\r\n    psi.orthonormalize(mode='left')\r\n    \r\n    # time step can have both real and imaginary parts;\r\n    # for real time evolution use purely imaginary dt!\r\n    dt = 0.01 - 0.05j\r\n    numsteps = 100\r\n    \r\n    # run TDVP time evolution\r\n    ptn.integrate_local_singlesite(mpoH, psi, dt, numsteps, numiter_lanczos=5)\r\n    # psi now stores the (approximated) time-evolved state exp(-dt*numsteps H) psi\r\n\r\n\r\nFeatures\r\n--------\r\n- matrix product state and operator classes\r\n- construct common Hamiltonians as MPOs, straightforward to adapt to custom Hamiltonians\r\n- convert arbitrary operator chains to MPOs\r\n- TDVP time evolution (real and imaginary)\r\n- generate vector / matrix representations of matrix product states / operators\r\n- Krylov subspace methods for local operations\r\n- one-site local energy minimization using Lanczos iteration\r\n- built-in support for additive quantum numbers\r\n\r\n\r\nInstallation\r\n------------\r\nTo install PyTeNet from PyPI, call\r\n\r\n.. code-block:: python\r\n\r\n    python3 -m pip install pytenet\r\n\r\nAlternatively, you can clone the `repository <https://github.com/cmendl/pytenet>`_ and install it in development mode via\r\n\r\n.. code-block:: python\r\n\r\n    python3 -m pip install -e <path/to/repo>\r\n\r\n.. doc-inclusion-marker1-end\r\n\r\n\r\nDocumentation\r\n-------------\r\nThe full documentation is available at `pytenet.readthedocs.io <https://pytenet.readthedocs.io>`_.\r\n\r\n\r\nDirectory structure\r\n-------------------\r\n- **pytenet**: source code of the actual PyTeNet package\r\n- **doc**: documentation and tutorials\r\n- **test**: unit tests (might serve as detailed documentation, too)\r\n- **experiments**: numerical experiments on more advanced, in-depth topics\r\n- **paper**: JOSS manuscript\r\n\r\n\r\n.. doc-inclusion-marker2-start\r\n\r\nContributing\r\n------------\r\nFeature requests, discussions and code contributions to PyTeNet in the form of\r\n`pull requests <https://github.com/cmendl/pytenet/pulls>`_ are of course welcome.\r\nCreating an `issue <https://github.com/cmendl/pytenet/issues>`_ might be a good starting point.\r\nNew code should be well documented (`Google style docstrings <https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html>`_)\r\nand unit-tested (see the `test/` subfolder).\r\nFor questions and additional support, fell free to contact christian.b.mendl@gmail.com\r\n\r\n\r\nCiting\r\n------\r\nPyTeNet is `published <https://doi.org/10.21105/joss.00948>`_ in the Journal of Open Source Software -\r\nif it's ever useful for a research project please consider citing it:\r\n\r\n.. code-block:: latex\r\n\r\n    @ARTICLE{pytenet,\r\n      author = {Mendl, C. B.},\r\n      title = {PyTeNet: A concise Python implementation of quantum tensor network algorithms},\r\n      journal = {Journal of Open Source Software},\r\n      year = {2018},\r\n      volume = {3},\r\n      number = {30},\r\n      pages = {948},\r\n      doi = {10.21105/joss.00948},\r\n    }\r\n\r\n\r\nLicense\r\n-------\r\nPyTeNet is licensed under the BSD 2-Clause license.\r\n\r\n\r\nReferences\r\n----------\r\n1. | U. Schollw√∂ck\r\n   | The density-matrix renormalization group in the age of matrix product states\r\n   | `Ann. Phys. 326, 96-192 (2011) <https://doi.org/10.1016/j.aop.2010.09.012>`_ (`arXiv:1008.3477 <https://arxiv.org/abs/1008.3477>`_)\r\n2. | J. Haegeman, C. Lubich, I. Oseledets, B. Vandereycken, F. Verstraete\r\n   | Unifying time evolution and optimization with matrix product states\r\n   | `Phys. Rev. B 94, 165116 (2016) <https://doi.org/10.1103/PhysRevB.94.165116>`_ (`arXiv:1408.5056 <https://arxiv.org/abs/1408.5056>`_)\r\n3. | I. P. McCulloch\r\n   | From density-matrix renormalization group to matrix product states\r\n   | `J. Stat. Mech. (2007) P10014 <https://doi.org/10.1088/1742-5468/2007/10/P10014>`_ (`arXiv:cond-mat/0701428 <https://arxiv.org/abs/cond-mat/0701428>`_)\r\n4. | T. Barthel\r\n   | Precise evaluation of thermal response functions by optimized density matrix renormalization group schemes\r\n   | `New J. Phys. 15, 073010 (2013) <https://doi.org/10.1088/1367-2630/15/7/073010>`_ (`arXiv:1301.2246 <https://arxiv.org/abs/1301.2246>`_)\r\n\r\n.. doc-inclusion-marker2-end\r\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cmendl/pytenet",
    "keywords": "",
    "license": "BSD-2-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytenet",
    "package_url": "https://pypi.org/project/pytenet/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytenet/",
    "project_urls": {
      "Homepage": "https://github.com/cmendl/pytenet"
    },
    "release_url": "https://pypi.org/project/pytenet/1.0.1/",
    "requires_dist": [
      "numpy",
      "scipy",
      "unittest ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "Tensor network library for quantum simulations",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16710682,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f76f0b29ed126505977579a4d85ea2e5b711ae71fa358207a26588baadc971ca",
          "md5": "b67ef8f911fb25192e7a1dc62ae9842d",
          "sha256": "e3e2d8ad8583cf0a20e04f98802a731781355e3eeb00d2d2d75159b01514899f"
        },
        "downloads": -1,
        "filename": "pytenet-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b67ef8f911fb25192e7a1dc62ae9842d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 38429,
        "upload_time": "2023-02-06T10:42:57",
        "upload_time_iso_8601": "2023-02-06T10:42:57.168450Z",
        "url": "https://files.pythonhosted.org/packages/f7/6f/0b29ed126505977579a4d85ea2e5b711ae71fa358207a26588baadc971ca/pytenet-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bb268b91cc9380d325154c1a1f4d4629871f68b78d6e22c69eea00a892558cb",
          "md5": "fb9b83401b4db895637db412ffb24379",
          "sha256": "f2d144ec7d5373c3377c382f8ab79917d525cc7ae53875063ccc548cffec59f4"
        },
        "downloads": -1,
        "filename": "pytenet-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fb9b83401b4db895637db412ffb24379",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34314,
        "upload_time": "2023-02-06T10:42:58",
        "upload_time_iso_8601": "2023-02-06T10:42:58.814058Z",
        "url": "https://files.pythonhosted.org/packages/4b/b2/68b91cc9380d325154c1a1f4d4629871f68b78d6e22c69eea00a892558cb/pytenet-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f76f0b29ed126505977579a4d85ea2e5b711ae71fa358207a26588baadc971ca",
        "md5": "b67ef8f911fb25192e7a1dc62ae9842d",
        "sha256": "e3e2d8ad8583cf0a20e04f98802a731781355e3eeb00d2d2d75159b01514899f"
      },
      "downloads": -1,
      "filename": "pytenet-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b67ef8f911fb25192e7a1dc62ae9842d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 38429,
      "upload_time": "2023-02-06T10:42:57",
      "upload_time_iso_8601": "2023-02-06T10:42:57.168450Z",
      "url": "https://files.pythonhosted.org/packages/f7/6f/0b29ed126505977579a4d85ea2e5b711ae71fa358207a26588baadc971ca/pytenet-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4bb268b91cc9380d325154c1a1f4d4629871f68b78d6e22c69eea00a892558cb",
        "md5": "fb9b83401b4db895637db412ffb24379",
        "sha256": "f2d144ec7d5373c3377c382f8ab79917d525cc7ae53875063ccc548cffec59f4"
      },
      "downloads": -1,
      "filename": "pytenet-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fb9b83401b4db895637db412ffb24379",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 34314,
      "upload_time": "2023-02-06T10:42:58",
      "upload_time_iso_8601": "2023-02-06T10:42:58.814058Z",
      "url": "https://files.pythonhosted.org/packages/4b/b2/68b91cc9380d325154c1a1f4d4629871f68b78d6e22c69eea00a892558cb/pytenet-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}