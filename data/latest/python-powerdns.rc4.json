{
  "info": {
    "author": "Denis Pompilio (jawa)",
    "author_email": "denis.pompilio@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: BSD",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "[![PythonSupport][1]][1l] [![License][2]][2l] [![PyPI version][3]][3l]\n\n# python-powerdns -- PowerDNS web api python client and interface\n\n**Contact:** Denis 'jawa' Pompilio <denis.pompilio@gmail.com>\n\n**Sources:** <https://github.com/outini/python-powerdns>\n\n## About\n\nThis package provides intuitive and easy to use python client and interface\nfor the PowerDNS web API.\n\n## Installation\n\n```bash\npython setup.py install\n```\n\nor\n\n```bash\npip install python-powerdns\n```\n\n## Helpers\n\n### pdns-zone-creator\n\n```bash\nusage: pdns-create-zone [-h] -A API -K APIKEY -z ZONE -o ORIGIN -c ZONE -d DNS\n                        [-t TIMERS]\n\nPowerDNS zone creator\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -A API, --api API     PowerDNS api (eg. https://api.domain.tld/api/v1\n  -K APIKEY, --key APIKEY\n                        PowerDNS api key\n  -z ZONE, --zone ZONE  Zone name (canonical)\n  -o ORIGIN, --origin ORIGIN\n                        Zone origin (for SOA)\n  -c ZONE, --contact ZONE\n                        Zone contact (for SOA)\n  -d DNS, --dns DNS     Zone nameservers comma separated\n  -t TIMERS, --timers TIMERS\n                        Zone timers (eg. '28800 7200 604800 86400')\n```\n\n```bash\n./bin/pdns-create-zone -A \"https://api.domain.tld/api/v1\" -K \"xxxxxxxxx\" \\\n                       -z \"myzone.domain.tld.\" \\\n                       -o \"ns01.domain.tld.\" -c \"admin.domain.tld.\" \\\n                       -d \"nsd01.domain.tld.,nsd02.domain.tld.\"\npowerdns.interface INFO: listing available PowerDNS servers\npowerdns.interface INFO: getting available servers from API\npowerdns.client INFO: request: GET https://api.domain.tld/api/v1/servers\npowerdns.client INFO: request response code: 200\npowerdns.interface INFO: 1 server(s) listed\npowerdns.interface INFO: creation of zone: myzone.domain.tld.\npowerdns.client INFO: request: POST https://api.domain.tld/api/v1/servers/localhost/zones\npowerdns.client INFO: request response code: 201\npowerdns.interface INFO: zone myzone.domain.tld. successfully created\n```\n\n## Examples\n\n### Basic initialization\n\n```python\nimport powerdns\n\nPDNS_API = \"https://my.pdns.api.domain.tld/api/v1\"\nPDNS_KEY = \"mysupersecretbase64key\"\n\napi_client = powerdns.PDNSApiClient(api_endpoint=PDNS_API, api_key=PDNS_KEY)\napi = powerdns.PDNSEndpoint(api_client)\n```\n\n### Creation and deletion of zones\n\n```python\nfrom datetime import date\n\n# Creating new zone on first PowerDNS server\nserial = date.today().strftime(\"%Y%m%d00\")\nsoa = \"ns0.domain.tld. admin.domain.tld. %s 28800 7200 604800 86400\" % serial\nsoa_r = powerdns.RRSet(name='test.python-powerdns.domain.tld.',\n                       rtype=\"SOA\",\n                       records=[(soa, False)],\n                       ttl=86400)\nzone = api.servers[0].create_zone(name=\"test.python-powerdns.domain.tld.\",\n                                  kind=\"Native\",\n                                  rrsets=[soa_r],\n                                  nameservers=[\"ns1.domain.tld.\",\n                                               \"ns2.domain.tld.\"])\n\n# Getting new zone info\nprint(zone)\nprint(zone.details)\n\n# Deleting newly created zone\napi.servers[0].delete_zone(zone.name)\n```\n\n### Creation and deletion of DNS records\n\n```python\nzone = api.servers[0].get_zone(\"test.python-powerdns.domain.tld.\")\n\ncomments = [powerdns.Comment(\"test comment\", \"admin\")]\n\nzone.create_records([\n    powerdns.RRSet('a', 'A', [('1.1.1.1', False)], comments=comments),\n    powerdns.RRSet('b', 'A', ['1.1.1.2', '1.1.1.3']),\n    powerdns.RRSet('c', 'A', [('1.1.1.4', False)]),\n    powerdns.RRSet('d', 'CNAME', ['a'])\n])\n\nzone.delete_records([\n    powerdns.RRSet('a', 'A', [('1.1.1.1', False)]),\n    powerdns.RRSet('d', 'CNAME', ['a'])\n])\n```\n\nWhere (for the first RRSet):\n\n* `a` is the NAME of the record\n* `A` is the TYPE of the record\n* `[('1.1.1.1', False)]` is a list of RDATA entries (tuples or just strings), where:\n  * `'1.1.1.1'` is the RDATA\n  * `False` tells that this RDATA entry is NOT disabled\n\n### Backup and restoration of zones\n\n```python\n# Backup every zone of every PowerDNS server\nfor server in api.servers:\n    backup_dir = \"backups/%s\" % server.id\n    for zone in server.zones:\n        zone.backup(backup_dir)\n\n# Restore a single zone on first PowerDNS server\nzone_file = \"backups/pdns-server-01/my.domain.tld.json\"\napi.servers[0].restore_zone(zone_file)\n```\n\n## Tests\n\n### PowerDNS service\n\nA simple [Dockerfile] is provided to spawn a basic powerdns service for tests\npurposes. The container is built using:\n\n```bash\ndocker build --tag pdns .\n```\n\nAnd started using:\n\n```bash\ndocker run --rm -it pdns\n```\n\n### Python Unit-Tests\n\nPython unit-tests are available in the [tests] directory. Based on [unittests],\nthose are run using `coverage run -m unittest discover` or integrated in your\nIDE for development purposes. Those tests require a PDNS service to connect to\n(see _PowerDNS service_ section above).\n\nThose tests are very limited at the moment and will be improved in the future.\n\n## License\n\nMIT LICENSE *(see LICENSE file)*\n\n## Miscellaneous\n\n```\n    ╚⊙ ⊙╝\n  ╚═(███)═╝\n ╚═(███)═╝\n╚═(███)═╝\n ╚═(███)═╝\n  ╚═(███)═╝\n   ╚═(███)═╝\n```\n\n[1]: https://img.shields.io/badge/python-2.7,3.4+-blue.svg\n[1l]: https://github.com/outini/python-powerdns\n[2]: https://img.shields.io/badge/license-MIT-blue.svg\n[2l]: https://github.com/outini/python-powerdns\n[3]: https://badge.fury.io/py/python-powerdns.svg\n[3l]: https://pypi.org/project/python-powerdns\n[Dockerfile]: files/Dockerfile\n[tests]: tests\n[unittests]: https://docs.python.org/3/library/unittest.html",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/outini/python-powerdns",
    "keywords": "dns,powerdns,api",
    "license": "MIT",
    "maintainer": "Denis Pompilio (jawa)",
    "maintainer_email": "denis.pompilio@gmail.com",
    "name": "python-powerdns",
    "package_url": "https://pypi.org/project/python-powerdns/",
    "platform": "UNIX",
    "project_url": "https://pypi.org/project/python-powerdns/",
    "project_urls": {
      "Homepage": "https://github.com/outini/python-powerdns"
    },
    "release_url": "https://pypi.org/project/python-powerdns/2.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "PowerDNS web api python client and interface",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11905162,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf8cf2c900d58e6d1124b2fbafc6651c65da79d1d46cce35ff1f79116b982b91",
          "md5": "14baf9c7393d17433d2fc8ca8aa13490",
          "sha256": "e0e9ea2e8a53da7b1b241ee7089d69400cff8106094e86c4470c066ce6ed3d14"
        },
        "downloads": -1,
        "filename": "python-powerdns-0.2.1.tar.gz",
        "has_sig": true,
        "md5_digest": "14baf9c7393d17433d2fc8ca8aa13490",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11463,
        "upload_time": "2018-06-19T13:22:37",
        "upload_time_iso_8601": "2018-06-19T13:22:37.253785Z",
        "url": "https://files.pythonhosted.org/packages/bf/8c/f2c900d58e6d1124b2fbafc6651c65da79d1d46cce35ff1f79116b982b91/python-powerdns-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a632efaef20369e4f6597b995b1c5f155d3a83993f5912a1a47803e38a971a2",
          "md5": "1c505b64f1766560d95ceabcf2c0f172",
          "sha256": "e7e376c315cc715538a25a524d000b94e418c757d1173888629c1bf15b924a64"
        },
        "downloads": -1,
        "filename": "python-powerdns-1.0.0.tar.gz",
        "has_sig": true,
        "md5_digest": "1c505b64f1766560d95ceabcf2c0f172",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13455,
        "upload_time": "2021-06-07T15:57:52",
        "upload_time_iso_8601": "2021-06-07T15:57:52.427468Z",
        "url": "https://files.pythonhosted.org/packages/2a/63/2efaef20369e4f6597b995b1c5f155d3a83993f5912a1a47803e38a971a2/python-powerdns-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e3c807ae368c64719f59b4401331ff9c3ec6ba4c3110070beab3efddcfa8d89",
          "md5": "e0cb4e998bd69f5509395f010c9eff88",
          "sha256": "fa1602a33ddf46b6214ceeee982815edde9cebe78a386c6591b15a2707533f59"
        },
        "downloads": -1,
        "filename": "python-powerdns-2.0.0.tar.gz",
        "has_sig": true,
        "md5_digest": "e0cb4e998bd69f5509395f010c9eff88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13776,
        "upload_time": "2021-06-15T13:51:57",
        "upload_time_iso_8601": "2021-06-15T13:51:57.890153Z",
        "url": "https://files.pythonhosted.org/packages/6e/3c/807ae368c64719f59b4401331ff9c3ec6ba4c3110070beab3efddcfa8d89/python-powerdns-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f83bd6c41e9ab248c62dba7b5826ecb9adc352a892b9c5b036f0c4f9f52951ab",
          "md5": "389faea525517de9fca714923bafdaea",
          "sha256": "da2c7eafdc1c22d6739af51c696499edce5802608099a6b6ad05b1c9e10b3478"
        },
        "downloads": -1,
        "filename": "python-powerdns-2.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "389faea525517de9fca714923bafdaea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14879,
        "upload_time": "2021-11-02T15:59:25",
        "upload_time_iso_8601": "2021-11-02T15:59:25.112299Z",
        "url": "https://files.pythonhosted.org/packages/f8/3b/d6c41e9ab248c62dba7b5826ecb9adc352a892b9c5b036f0c4f9f52951ab/python-powerdns-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f83bd6c41e9ab248c62dba7b5826ecb9adc352a892b9c5b036f0c4f9f52951ab",
        "md5": "389faea525517de9fca714923bafdaea",
        "sha256": "da2c7eafdc1c22d6739af51c696499edce5802608099a6b6ad05b1c9e10b3478"
      },
      "downloads": -1,
      "filename": "python-powerdns-2.1.0.tar.gz",
      "has_sig": true,
      "md5_digest": "389faea525517de9fca714923bafdaea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14879,
      "upload_time": "2021-11-02T15:59:25",
      "upload_time_iso_8601": "2021-11-02T15:59:25.112299Z",
      "url": "https://files.pythonhosted.org/packages/f8/3b/d6c41e9ab248c62dba7b5826ecb9adc352a892b9c5b036f0c4f9f52951ab/python-powerdns-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}