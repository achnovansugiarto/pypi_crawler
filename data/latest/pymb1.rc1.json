{
  "info": {
    "author": "reaitten",
    "author_email": "wsy0xf2u8@relay.firefox.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# What is this repo about?\nThis is a telegram bot writen in python for mirroring files on the internet to our beloved Google Drive.\n\n# Inspiration \nThis project is heavily inspired from @out386 's telegram bot which is written in JS.\n\n# Features supported:\n- Mirroring direct download links to google drive\n- Download progress\n- Upload progress\n- Download/upload speeds and ETAs\n- Docker support\n- Uploading To Team Drives.\n- Index Link support\n- Service account support\n- Mirror all youtube-dl supported links\n- Mirror telegram files\n- Stable Mega.nz support\n\n# How to deploy?\nDeploying is pretty much straight forward and is divided into several steps as follows:\n## Installing requirements\n\n- Clone this repo:\n```\ngit clone https://github.com/lzzy12/python-aria-mirror-bot mirror-bot/\ncd mirror-bot\n```\n\n- Install requirements\nFor Debian based distros\n```\nsudo apt install python3\n```\nInstall Docker by following the [official docker docs](https://docs.docker.com/engine/install/debian/)\n\n\n- For Arch and it's derivatives:\n```\nsudo pacman -S docker python\n```\n\n- Install dependencies for running setup scripts:\n```shell script\npip3 install -r requirements-cli.txt\n```\n\n## Setting up config file\n```\ncp config_sample.env config.env\n```\n- Remove the first line saying:\n```\n_____REMOVE_THIS_LINE_____=True\n```\nFill up rest of the fields. Meaning of each fields are discussed below:\n- **BOT_TOKEN** : The telegram bot token that you get from @BotFather\n- **GDRIVE_FOLDER_ID** : This is the folder ID of the Google Drive Folder to which you want to upload all the mirrors.\n- **DOWNLOAD_DIR** : The path to the local folder where the downloads should be downloaded to\n- **DOWNLOAD_STATUS_UPDATE_INTERVAL** : A short interval of time in seconds after which the Mirror progress message is updated. (I recommend to keep it 5 seconds at least)  \n- **OWNER_ID** : The Telegram user ID (not username) of the owner of the bot\n- **AUTO_DELETE_MESSAGE_DURATION** : Interval of time (in seconds), after which the bot deletes it's message (and command message) which is expected to be viewed instantly. Note: Set to -1 to never automatically delete messages\n- **IS_TEAM_DRIVE** : (Optional field) Set to \"True\" if GDRIVE_FOLDER_ID is from a Team Drive else False or Leave it empty.\n- **USE_SERVICE_ACCOUNTS**: (Optional field) (Leave empty if unsure) Whether to use service accounts or not. For this to work see  \"Using service accounts\" section below.\n- **INDEX_URL** : (Optional field) Refer to https://github.com/maple3142/GDIndex/ The URL should not have any trailing '/'\n- **TELEGRAM_API** : This is to authenticate to your telegram account for downloading Telegram files. You can get this from https://my.telegram.org DO NOT put this in quotes.\n- **TELEGRAM_HASH** : This is to authenticate to your telegram account for downloading Telegram files. You can get this from https://my.telegram.org\n- **USER_SESSION_STRING** : Session string generated by running:\n- **MEGA_KEY**: Mega.nz api key to mirror mega.nz links. Get it from [Mega SDK Page](https://mega.nz/sdk)\n- **MEGA_USERNAME**: Your mega email id (You can leave it empty, it will start megasdkrest server in anonymous mode)\n- **MEGA_PASSWORD**: Your password for your mega.nz account. (**NOTE**: You must deactivate 2FA to use the account with the bot otherwise bot will not be able to sign in)\n```\npython3 generate_string_session.py\n```\nNote: You can limit maximum concurrent downloads by changing the value of MAX_CONCURRENT_DOWNLOADS in aria.sh. By default, it's set to 2\n \n## Getting Google OAuth API credential file\n\n- Visit the [Google Cloud Console](https://console.developers.google.com/apis/credentials)\n- Go to the OAuth Consent tab, fill it, and save.\n- Go to the Credentials tab and click Create Credentials -> OAuth Client ID\n- Choose Other and Create.\n- Use the download button to download your credentials.\n- Move that file to the root of mirror-bot, and rename it to credentials.json\n- Visit [Google API page](https://console.developers.google.com/apis/library)\n- Search for Drive and enable it if it is disabled\n- Finally, run the script to generate token file (token.pickle) for Google Drive:\n```\npip install google-api-python-client google-auth-httplib2 google-auth-oauthlib\npython3 generate_drive_token.py\n```\n## Deploying\n\n- Start docker daemon (skip if already running):\n```\nsudo dockerd\n```\n- Build Docker image:\n```\nsudo docker build . -t mirror-bot\n```\n- Run the image:\n```\nsudo docker run mirror-bot\n```\n\n# Using service accounts for uploading to avoid user rate limit\nFor Service Account to work, you must set USE_SERVICE_ACCOUNTS=\"True\" in config file or environment variables\nMany thanks to [AutoRClone](https://github.com/xyou365/AutoRclone) for the scripts\n**NOTE:** Using service accounts is only recommended while uploading to a team drive.\n## Generating service accounts\nStep 1. Generate service accounts [What is service account](https://cloud.google.com/iam/docs/service-accounts)\n---------------------------------\nLet us create only the service accounts that we need. \n**Warning:** abuse of this feature is not the aim of this project and we do **NOT** recommend that you make a lot of projects, just one project and 100 sa allow you plenty of use, its also possible that over abuse might get your projects banned by google. \n\n```\nNote: 1 service account can copy around 750gb a day, 1 project can make 100 service accounts so that's 75tb a day, for most users this should easily suffice. \n```\n\n`python3 gen_sa_accounts.py --quick-setup 1 --new-only`\n\nA folder named accounts will be created which will contain keys for the service accounts\n\nNOTE: If you have created SAs in past from this script, you can also just re download the keys by running:\n```\npython3 gen_sa_accounts.py --download-keys project_id\n```\n\n### Add all the service accounts to the Team Drive\n- Run:\n```\npython3 add_to_team_drive.py -d SharedTeamDriveSrcID\n```\n\n# Youtube-dl authentication using .netrc file\nFor using your premium accounts in youtube-dl, edit the netrc file (in the root directory of this repository) according to following format:\n```\nmachine host login username password my_youtube_password\n```\nwhere host is the name of extractor (eg. youtube, twitch). Multiple accounts of different hosts can be added each separated by a new line\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/reaitten/pymb1",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymb1",
    "package_url": "https://pypi.org/project/pymb1/",
    "platform": "",
    "project_url": "https://pypi.org/project/pymb1/",
    "project_urls": {
      "Bug Tracker": "https://github.com/reaitten/pymb1/issues",
      "Homepage": "https://github.com/reaitten/pymb1"
    },
    "release_url": "https://pypi.org/project/pymb1/1.0.0/",
    "requires_dist": [
      "requests",
      "psutil",
      "python-telegram-bot (==12.6.1)",
      "google-api-python-client (<1.7.20,>=1.7.11)",
      "google-auth-httplib2 (<0.1.0,>=0.0.3)",
      "google-auth-oauthlib (<0.10.0,>=0.4.1)",
      "aria2p (<0.15.0,>=0.9.0)",
      "python-dotenv (>=0.10)",
      "tenacity (>=6.0.0)",
      "python-magic",
      "beautifulsoup4 (<4.8.10,>=4.8.2)",
      "Pyrogram (<0.16.10,>=0.16.0)",
      "TgCrypto (<1.1.10,>=1.1.1)",
      "youtube-dl",
      "megasdkrestclient (<1.0.0,>=0.1.1)"
    ],
    "requires_python": ">=3.8.2",
    "summary": "A telegram bot for all your mirror needs",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10892921,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25787cbb933c6f615b4dcdc3eb6d8f8f5fcb2efed00953ea7dfdbff046d54dd8",
          "md5": "54c1181f244c4bc4c0d1b30006dd3feb",
          "sha256": "0a5702a6a2efdb7cbad2f46744da7d18293f1f1cb0f6389231a3d6599ae19445"
        },
        "downloads": -1,
        "filename": "pymb1-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54c1181f244c4bc4c0d1b30006dd3feb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.2",
        "size": 54419,
        "upload_time": "2021-07-13T02:31:40",
        "upload_time_iso_8601": "2021-07-13T02:31:40.818978Z",
        "url": "https://files.pythonhosted.org/packages/25/78/7cbb933c6f615b4dcdc3eb6d8f8f5fcb2efed00953ea7dfdbff046d54dd8/pymb1-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87a7110750cc86be97639ddce6f22948d43f721892482a0fdf089d57e9f8f717",
          "md5": "e8295adea4704e7c81ff409684cc1e82",
          "sha256": "47c5302853d5d9555fa1e7ff73d00bd1a8b862887a1a5f550e9f7ff6cb607769"
        },
        "downloads": -1,
        "filename": "pymb1-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e8295adea4704e7c81ff409684cc1e82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.2",
        "size": 44083,
        "upload_time": "2021-07-13T02:31:42",
        "upload_time_iso_8601": "2021-07-13T02:31:42.782041Z",
        "url": "https://files.pythonhosted.org/packages/87/a7/110750cc86be97639ddce6f22948d43f721892482a0fdf089d57e9f8f717/pymb1-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25787cbb933c6f615b4dcdc3eb6d8f8f5fcb2efed00953ea7dfdbff046d54dd8",
        "md5": "54c1181f244c4bc4c0d1b30006dd3feb",
        "sha256": "0a5702a6a2efdb7cbad2f46744da7d18293f1f1cb0f6389231a3d6599ae19445"
      },
      "downloads": -1,
      "filename": "pymb1-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "54c1181f244c4bc4c0d1b30006dd3feb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.2",
      "size": 54419,
      "upload_time": "2021-07-13T02:31:40",
      "upload_time_iso_8601": "2021-07-13T02:31:40.818978Z",
      "url": "https://files.pythonhosted.org/packages/25/78/7cbb933c6f615b4dcdc3eb6d8f8f5fcb2efed00953ea7dfdbff046d54dd8/pymb1-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "87a7110750cc86be97639ddce6f22948d43f721892482a0fdf089d57e9f8f717",
        "md5": "e8295adea4704e7c81ff409684cc1e82",
        "sha256": "47c5302853d5d9555fa1e7ff73d00bd1a8b862887a1a5f550e9f7ff6cb607769"
      },
      "downloads": -1,
      "filename": "pymb1-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e8295adea4704e7c81ff409684cc1e82",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.2",
      "size": 44083,
      "upload_time": "2021-07-13T02:31:42",
      "upload_time_iso_8601": "2021-07-13T02:31:42.782041Z",
      "url": "https://files.pythonhosted.org/packages/87/a7/110750cc86be97639ddce6f22948d43f721892482a0fdf089d57e9f8f717/pymb1-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}