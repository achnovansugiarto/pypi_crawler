{
  "info": {
    "author": "OmniSafe Contributors",
    "author_email": "jiamg.ji@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<!-- markdownlint-disable first-line-h1 -->\n<!-- markdownlint-disable html -->\n\n<div align=\"center\">\n  <img src=\"https://github.com/PKU-MARL/omnisafe/raw/HEAD/images/logo.png\" width=\"75%\"/>\n</div>\n\n<div align=\"center\">\n\n  [![Organization](https://img.shields.io/badge/Organization-PKU_MARL-blue.svg)](https://github.com/PKU-MARL)\n  [![PyPI](https://img.shields.io/pypi/v/omnisafe?logo=pypi)](https://pypi.org/project/omnisafe)\n  [![Documentation Status](https://img.shields.io/readthedocs/omnisafe?logo=readthedocs)](https://omnisafe.readthedocs.io)\n  [![Downloads](https://static.pepy.tech/personalized-badge/omnisafe?period=total&left_color=grey&right_color=blue&left_text=downloads)](https://pepy.tech/project/omnisafe)\n  [![GitHub Repo Stars](https://img.shields.io/github/stars/PKU-MARL/omnisafe?color=brightgreen&logo=github)](https://github.com/PKU-MARL/OmniSafe/stargazers)\n  [![codestyle](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n  [![License](https://img.shields.io/github/license/PKU-MARL/OmniSafe?label=license)](#license)\n  [![CodeCov](https://img.shields.io/codecov/c/github/PKU-MARL/omnisafe/main?logo=codecov)](https://app.codecov.io/gh/PKU-MARL/omnisafe)\n\n</div>\n\n<p align=\"center\">\n  <a href=\"https://omnisafe.readthedocs.io\">Documentation</a> |\n  <a href=\"https://github.com/PKU-MARL/omnisafe#implemented-algorithms\">Implemented Algorithms</a> |\n  <a href=\"https://github.com/PKU-MARL/omnisafe#installation\">Installation</a> |\n  <a href=\"https://github.com/PKU-MARL/omnisafe#getting-started\">Getting Started</a> |\n  <a href=\"https://github.com/PKU-MARL/omnisafe#license\">License</a>\n</p>\n\n--------------------------------------------------------------------------------\n\n**This library is currently under heavy development - if you have suggestions on the API or use-cases you'd like to be covered, please open a GitHub issue or reach out. We'd love to hear about how you're using the library.**\n\nOmniSafe is an infrastructural framework designed to accelerate safe reinforcement learning (RL) research by providing a comprehensive and reliable benchmark for safe RL algorithms. The field of RL has great potential to benefit society, but safety concerns are a significant issue, and RL algorithms have raised concerns about unintended harm or unsafe behavior. Safe RL intends to develop algorithms that minimize the risk of unintended harm or unsafe behavior, but there is currently a lack of commonly recognized safe RL algorithm benchmarks.\n\nOmniSafe addresses these issues by providing more than 40 experimentally validated algorithms and a sound and efficient simulation environment. Researchers can use OmniSafe to conduct experiments and verify their ideas, ensuring consistency and enabling more efficient development of safe RL algorithms. By using OmniSafe as a benchmark, researchers can evaluate the performance of their own safe RL algorithms and contribute to the advancement of safe RL research.\n\n--------------------------------------------------------------------------------\n\n### Table of Contents  <!-- omit in toc --> <!-- markdownlint-disable heading-increment -->\n\n- [Implemented Algorithms](#implemented-algorithms)\n  - [Latest SafeRL Papers](#latest-saferl-papers)\n  - [List of Algorithms](#list-of-algorithms)\n    - [On-Policy Safe](#on-policy-safe)\n    - [Off-Policy Safe](#off-policy-safe)\n    - [Model-Based Safe](#model-based-safe)\n    - [Offline Safe](#offline-safe)\n    - [Others](#others)\n- [Installation](#installation)\n  - [Prerequisites](#prerequisites)\n    - [Install from source](#install-from-source)\n    - [Install from PyPI](#install-from-pypi)\n  - [Examples](#examples)\n    - [Try with CLI](#try-with-cli)\n- [Getting Started](#getting-started)\n    - [Important Hints](#important-hints)\n  - [1. Run Agent from preset yaml file](#1-run-agent-from-preset-yaml-file)\n  - [2. Run agent with custom cfg](#2-run-agent-with-custom-cfg)\n  - [3. Run Agent from custom terminal config](#3-run-agent-from-custom-terminal-config)\n  - [4. Evalutate Saved Policy](#4-evalutate-saved-policy)\n- [Changelog](#changelog)\n- [The OmniSafe Team](#the-omnisafe-team)\n- [License](#license)\n\n--------------------------------------------------------------------------------\n\n## Implemented Algorithms\n\nThe supported interface algorithms currently include:\n\n### Latest SafeRL Papers\n\n- **[AAAI 2023]** Augmented Proximal Policy Optimization for Safe Reinforcement Learning (APPO)\n- **[NeurIPS 2022]** [Constrained Update Projection Approach to Safe Policy Optimization (CUP)](https://arxiv.org/abs/2209.07089)\n- **[NeurIPS 2022]** [Effects of Safety State Augmentation on Safe Exploration (Simmer)](https://arxiv.org/abs/2206.02675)\n- **[NeurIPS 2022]** [Model-based Safe Deep Reinforcement Learning via a Constrained Proximal Policy Optimization Algorithm](https://arxiv.org/abs/2210.07573)\n- **[ICML 2022]** [Sauté RL: Almost Surely Safe Reinforcement Learning Using State Augmentation (SauteRL)](https://arxiv.org/abs/2202.06558)\n- **[ICML 2022]** [Constrained Variational Policy Optimization for Safe Reinforcement Learning (CVPO)](https://arxiv.org/abs/2201.11927)\n- **[IJCAI 2022]** [Penalized Proximal Policy Optimization for Safe Reinforcement Learning](https://arxiv.org/abs/2205.11814)\n- **[ICLR 2022]** [Constrained Policy Optimization via Bayesian World Models (LA-MBDA)](https://arxiv.org/abs/2201.09802)\n- **[AAAI 2022]** [Conservative and Adaptive Penalty for Model-Based Safe Reinforcement Learning (CAP)](https://arxiv.org/abs/2112.07701)\n\n### List of Algorithms\n\n#### On-Policy Safe\n\n- [X] [The Lagrange version of PPO (PPO-Lag)](https://cdn.openai.com/safexp-short.pdf)\n- [X] [The Lagrange version of TRPO (TRPO-Lag)](https://cdn.openai.com/safexp-short.pdf)\n- [X] **[ICML 2017]** [Constrained Policy Optimization (CPO)](https://proceedings.mlr.press/v70/achiam17a)\n- [X] **[ICLR 2019]** [Reward Constrained Policy Optimization (RCPO)](https://openreview.net/forum?id=SkfrvsA9FX)\n- [X] **[ICML 2020]** [Responsive Safety in Reinforcement Learning by PID Lagrangian Methods (PID-Lag)](https://arxiv.org/abs/2007.03964)\n- [X] **[NeurIPS 2020]** [First Order Constrained Optimization in Policy Space (FOCOPS)](https://arxiv.org/abs/2002.06506)\n- [X] **[AAAI 2020]** [IPO: Interior-point Policy Optimization under Constraints (IPO)](https://arxiv.org/abs/1910.09615)\n- [X] **[ICLR 2020]** [Projection-Based Constrained Policy Optimization (PCPO)](https://openreview.net/forum?id=rke3TJrtPS)\n- [X] **[ICML 2021]** [CRPO: A New Approach for Safe Reinforcement Learning with Convergence Guarantee](https://arxiv.org/abs/2011.05869)\n- [x] **[IJCAI 2022]** [Penalized Proximal Policy Optimization for Safe Reinforcement Learning(P3O)](https://arxiv.org/pdf/2205.11814.pdf)\n\n#### Off-Policy Safe\n\n- [X] The Lagrange version of TD3 (TD3-Lag)\n- [X] The Lagrange version of DDPG (DDPG-Lag)\n- [X] The Lagrange version of SAC (SAC-Lag)\n- [X] **[ICML 2019]** [Lyapunov-based Safe Policy Optimization for Continuous Control (SDDPG)](https://arxiv.org/abs/1901.10031)\n- [X] **[ICML 2019]** [Lyapunov-based Safe Policy Optimization for Continuous Control (SDDPG-modular)](https://arxiv.org/abs/1901.10031)\n- [ ] **[ICML 2022]** [Constrained Variational Policy Optimization for Safe Reinforcement Learning (CVPO)](https://arxiv.org/abs/2201.11927)\n\n#### Model-Based Safe\n\n- [ ] **[NeurIPS 2021]** [Safe Reinforcement Learning by Imagining the Near Future (SMBPO)](https://arxiv.org/abs/2202.07789)\n- [X] **[CoRL 2021 (Oral)]** [Learning Off-Policy with Online Planning (SafeLOOP)](https://arxiv.org/abs/2008.10066)\n- [X] **[AAAI 2022]** [Conservative and Adaptive Penalty for Model-Based Safe Reinforcement Learning (CAP)](https://arxiv.org/abs/2112.07701)\n- [X] **[NeurIPS 2022]** [Model-based Safe Deep Reinforcement Learning via a Constrained Proximal Policy Optimization Algorithm](https://arxiv.org/abs/2210.07573)\n- [ ] **[ICLR 2022]** [Constrained Policy Optimization via Bayesian World Models (LA-MBDA)](https://arxiv.org/abs/2201.09802)\n\n#### Offline Safe\n\n- [X] [The Lagrange version of BCQ (BCQ-Lag)](https://arxiv.org/abs/1812.02900)\n- [X] [The Constrained version of CRR (C-CRR)](https://proceedings.neurips.cc/paper/2020/hash/588cb956d6bbe67078f29f8de420a13d-Abstract.html)\n- [ ] **[AAAI 2022]** [Constraints Penalized Q-learning for Safe Offline Reinforcement Learning CPQ](https://arxiv.org/abs/2107.09003)\n- [ ] **[ICLR 2022 (Spotlight)]** [COptiDICE: Offline Constrained Reinforcement Learning via Stationary Distribution Correction Estimation](https://arxiv.org/abs/2204.08957?context=cs.AI)\n- [ ] **[ICML 2022]** [Constrained Offline Policy Optimization (COPO)](https://proceedings.mlr.press/v162/polosky22a.html)\n\n#### Others\n\n- [X] [Safe Exploration in Continuous Action Spaces (Safety Layer)](https://arxiv.org/abs/1801.08757)\n- [ ] **[RA-L 2021]** [Recovery RL: Safe Reinforcement Learning with Learned Recovery Zones](https://arxiv.org/abs/2010.15920)\n- [X] **[ICML 2022]** [Sauté RL: Almost Surely Safe Reinforcement Learning Using State Augmentation (SauteRL)](https://arxiv.org/abs/2202.06558)\n- [X] **[NeurIPS 2022]** [Effects of Safety State Augmentation on Safe Exploration](https://arxiv.org/abs/2206.02675)\n\n--------------------------------------------------------------------------------\n\n## Installation\n\n### Prerequisites\n\nOmniSafe requires Python 3.8+ and PyTorch 1.10+.\n\n#### Install from source\n\n```bash\n# Clone the repo\ngit clone https://github.com/PKU-MARL/omnisafe\ncd omnisafe\n\n# Create a conda environment\nconda create -n omnisafe python=3.8\nconda activate omnisafe\n\n# Install omnisafe\npip install -e .\n```\n\n#### Install from PyPI\nOmniSafe is hosted in [![PyPI](https://img.shields.io/pypi/v/omnisafe?label=pypi&logo=pypi)](https://pypi.org/project/omnisafe) / ![Status](https://img.shields.io/pypi/status/omnisafe?label=status).\n```bash\npip install omnisafe\n```\n\n\n### Examples\n\n```bash\ncd examples\npython train_policy.py --algo PPOLag --env-id SafetyPointGoal1-v0 --parallel 1 --total-steps 1024000 --device cpu --vector-env-nums 1 --torch-threads 1\n```\n\n\n**algo:**\n| Type              | Name                                                             |\n| ----------------- | ---------------------------------------------------------------- |\n| `Base-On-Policy`  | `PolicyGradient, PPO`<br> `NaturalPG, TRPO`                      |\n| `Base-Off-Policy` | `DDPG, TD3, SAC`                                                 |\n| `Naive Lagrange`  | `RCPO, PPOLag, TRPOLag`<br> `DDPGLag, TD3Lag, SACLag`            |\n| `PID Lagrange`    | `CPPOPid, TRPOPid`                                               |\n| `First Order`     | `FOCOPS, CUP`                                                    |\n| `Second Order`    | `SDDPG, CPO, PCPO`                                               |\n| `Saute RL`        | `PPOSaute, PPOLagSaute`                                          |\n| `Simmer RL`       | `PPOSimmerQ, PPOSimmerPid` <br> `PPOLagSimmerQ, PPOLagSimmerPid` |\n| `EarlyTerminated` | `PPOEarlyTerminated` <br> `PPOLagEarlyTerminated`                |\n| `Model-Based`     | `CAP, MBPPOLag, SafeLOOP`                                        |\n\n\n**env-id:** Environment id in [Safety Gymnasium](https://www.safety-gymnasium.com/), here a list of envs that safety-gymnasium supports.\n\n<table border=\"1\">\n<thead>\n  <tr>\n    <th>Category</th>\n    <th>Task</th>\n    <th>Agent</th>\n    <th>Example</th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td rowspan=\"4\">Safe Navigation</td>\n    <td>Goal[012]</td>\n    <td rowspan=\"4\">Point, Car, Racecar, Ant</td>\n    <td rowspan=\"4\">SafetyPointGoal1-v0</td>\n  </tr>\n  <tr>\n    <td>Button[012]</td>\n  </tr>\n  <tr>\n    <td>Push[012]</td>\n  </tr>\n  <tr>\n    <td>Circle[012]</td>\n  </tr>\n  <tr>\n    <td>Safe Velocity</td>\n    <td>Velocity</td>\n    <td>HalfCheetah, Hopper, Swimmer, Walker2d, Ant, Humanoid</td>\n    <td>SafetyHumanoidVelocity-v4</td>\n  </tr>\n</tbody>\n</table>\n\nMore information about environments, please refer to [Safety Gymnasium](https://www.safety-gymnasium.com/)\n\n**parallel:** `Number of parallels`\n\n\n#### Try with CLI\n\n**A video example**\n\n![Segmentfault](./images/CLI_example.svg)\n\n```bash\npip install omnisafe\n\nomnisafe --help # Ask for help\n\nomnisafe benchmark --help # The benchmark also can be replaced with 'eval', 'train', 'train-config'\n\n# Quick benchmarking for your research, just specify: 1.exp_name, 2.num_pool(how much processes are concurrent), 3.path of the config file(refer to omnisafe/examples/benchmarks for format)\nomnisafe benchmark test_benchmark 2 ./saved_source/benchmark_config.yaml\n\n# Quick evaluating and rendering your trained policy, just specify: 1.path of algorithm which you trained\nomnisafe eval ./saved_source/PPO-{SafetyPointGoal1-v0} --num-episode 1\n\n# Quick training some algorithms to validate your thoughts\n# Note: use `key1:key2`, your can select key of hyperparameters which are recursively contained, and use `--custom-cfgs`, you can add custom cfgs via CLI\nomnisafe train --algo PPO --total-steps 1024 --vector-env-nums 1 --custom-cfgs algo_cfgs:update_cycle --custom-cfgs 512\n\n# Quick training some algorithms via a saved config file, the format is as same as default format\nomnisafe train-config ./saved_source/train_config.yaml\n```\n\n\n--------------------------------------------------------------------------------\n\n## Getting Started\n#### Important Hints\n- `train_cfgs:torch_threads` is especially important for training speed, and is varying with users' machine, this value shouldn't be too small or too large.\n### 1. Run Agent from preset yaml file\n\n```python\nimport omnisafe\n\nenv_id = 'SafetyPointGoal1-v0'\nagent = omnisafe.Agent('PPOLag', env_id)\nagent.learn()\n```\n\n### 2. Run agent with custom cfg\n```python\nimport omnisafe\n\nenv_id = 'SafetyPointGoal1-v0'\ncustom_cfgs = {\n    'train_cfgs': {\n        'total_steps': 1024000,\n        'vector_env_nums': 1,\n        'parallel': 1,\n    },\n    'algo_cfgs': {\n        'update_cycle': 2048,\n        'update_iters': 1,\n    },\n    'logger_cfgs': {\n        'use_wandb': False,\n    },\n}\nagent = omnisafe.Agent('PPOLag', env_id, custom_cfgs=custom_cfgs)\nagent.learn()\n```\n\n### 3. Run Agent from custom terminal config\n\nYou can also run agent from a custom terminal config. You can set any config in a corresponding yaml file.\n\nFor example, you can run `PPOLag` agent on `SafetyPointGoal1-v0` environment with `total_steps=1024000`, `vector_env_nums=1` and `parallel=1` by:\n\n```bash\ncd examples\npython train_policy.py --algo PPOLag --env-id SafetyPointGoal1-v0 --parallel 1 --total-steps 1024000 --device cpu --vector-env-nums 1 --torch-threads 1\n```\n\n### 4. Evalutate Saved Policy\n\n```python\nimport os\n\nimport omnisafe\n\n\n# Just fill your experiment's log directory in here.\n# Such as: ~/omnisafe/runs/SafetyPointGoal1-v0/CPO/seed-000-2022-12-25_14-45-05\nLOG_DIR = ''\n\nevaluator = omnisafe.Evaluator()\nfor item in os.scandir(os.path.join(LOG_DIR, 'torch_save')):\n    if item.is_file() and item.name.split('.')[-1] == 'pt':\n        evaluator.load_saved_model(save_dir=LOG_DIR, model_name=item.name)\n        evaluator.render(num_episode=10, camera_name='track', width=256, height=256)\n```\n\n--------------------------------------------------------------------------------\n\n## Changelog\nSee [CHANGELOG.md](https://github.com/PKU-MARL/omnisafe/blob/main/CHANGELOG.md).\n\n## The OmniSafe Team\n\nOmniSafe is mainly developed by the SafeRL research team directed by Prof. [Yaodong Yang](https://github.com/orgs/PKU-MARL/people/PKU-YYang). Our SafeRL research team members include [Borong Zhang](https://github.com/muchvo), [Jiayi Zhou](https://github.com/Gaiejj), [JTao Dai](https://github.com/calico-1226), [Weidong Huang](https://github.com/hdadong), [Ruiyang Sun](https://github.com/rockmagma02), [Xuehai Pan](https://github.com/XuehaiPan) and [Jiaming Ji](https://github.com/zmsn-2077). If you have any questions in the process of using omnisafe, don't hesitate to ask your questions on [the GitHub issue page](https://github.com/PKU-MARL/omnisafe/issues/new/choose), we will reply to you in 2-3 working days.\n\n## License\n\nOmniSafe is released under Apache License 2.0.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PKU-MARL/omnisafe",
    "keywords": "Safe Reinforcement Learning,Reinforcement Learning,PyTorch",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "omnisafe",
    "package_url": "https://pypi.org/project/omnisafe/",
    "platform": null,
    "project_url": "https://pypi.org/project/omnisafe/",
    "project_urls": {
      "Bug Report": "https://github.com/PKU-MARL/omnisafe/issues",
      "Documentation": "https://omnisafe.readthedocs.io",
      "Homepage": "https://github.com/PKU-MARL/omnisafe",
      "Repository": "https://github.com/PKU-MARL/omnisafe"
    },
    "release_url": "https://pypi.org/project/omnisafe/0.2.2/",
    "requires_dist": [
      "safety-gymnasium (>=0.1.0)",
      "torch (>=1.10.0)",
      "numpy (>=1.20.0)",
      "tensorboard (>=2.8.0)",
      "wandb (>=0.13.0)",
      "psutil (>=5.9.1)",
      "scipy (>=1.7.0)",
      "joblib (>=1.2.0)",
      "pyyaml (>=6.0)",
      "types-pyyaml (>=6.0)",
      "xmltodict (>=0.13.0)",
      "moviepy (>=1.0.0)",
      "typing-extensions (>=4.0.0)",
      "typer[all] (>=0.7.0)",
      "seaborn (>=0.12.2)",
      "pandas (>=1.5.3)",
      "matplotlib (>=3.7.1)",
      "isort (>=5.11.0) ; extra == 'lint'",
      "black (>=22.6.0) ; extra == 'lint'",
      "pylint[spelling] (>=2.15.0) ; extra == 'lint'",
      "mypy (>=0.990) ; extra == 'lint'",
      "flake8 ; extra == 'lint'",
      "flake8-bugbear ; extra == 'lint'",
      "doc8 (<1.0.0a0) ; extra == 'lint'",
      "pydocstyle ; extra == 'lint'",
      "pyenchant ; extra == 'lint'",
      "pre-commit ; extra == 'lint'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "pytest-xdist ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "A comprehensive and reliable benchmark for safe reinforcement learning.",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17464247,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "045bf64166a7267c9a47a8629accec9d58db0af5f37c13186025be22f71588e9",
          "md5": "05f374011af082f586288e1f6eca9d82",
          "sha256": "adfb2a0a99ddd7f1d62121a5b38f76dbeef3287f28dbd7d8178b053327b92f73"
        },
        "downloads": -1,
        "filename": "omnisafe-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "05f374011af082f586288e1f6eca9d82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5262,
        "upload_time": "2022-09-26T08:49:19",
        "upload_time_iso_8601": "2022-09-26T08:49:19.173557Z",
        "url": "https://files.pythonhosted.org/packages/04/5b/f64166a7267c9a47a8629accec9d58db0af5f37c13186025be22f71588e9/omnisafe-0.0.1.tar.gz",
        "yanked": true,
        "yanked_reason": "Some inevitable bugs appear in this v0.0.1."
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d2895fd5007fc22e0cc7b2ade1622de61c2f43885347d1669d1e829758b845e",
          "md5": "9afcd1bd46bc87c507d9d4790d685941",
          "sha256": "d406c27c36b1de589a420a155423f66aa6d54709bf06756c10d4c216f8626e07"
        },
        "downloads": -1,
        "filename": "omnisafe-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9afcd1bd46bc87c507d9d4790d685941",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 146217,
        "upload_time": "2023-03-15T07:37:56",
        "upload_time_iso_8601": "2023-03-15T07:37:56.404664Z",
        "url": "https://files.pythonhosted.org/packages/5d/28/95fd5007fc22e0cc7b2ade1622de61c2f43885347d1669d1e829758b845e/omnisafe-0.1.0-py2.py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Some inevitable bugs appear in this v0.1.0."
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cf74fe409dbc5c22fd08228624a5c87d51f427352bdebda3abe2248ae7876ed",
          "md5": "f4a9423cccdd7f0eda87bfb10ed6ac09",
          "sha256": "27ce5db620c3006a285a6b01480c704a0ff4044f17d89b4852967dee238f9109"
        },
        "downloads": -1,
        "filename": "omnisafe-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f4a9423cccdd7f0eda87bfb10ed6ac09",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 82228,
        "upload_time": "2023-03-15T07:37:58",
        "upload_time_iso_8601": "2023-03-15T07:37:58.785966Z",
        "url": "https://files.pythonhosted.org/packages/2c/f7/4fe409dbc5c22fd08228624a5c87d51f427352bdebda3abe2248ae7876ed/omnisafe-0.1.0.tar.gz",
        "yanked": true,
        "yanked_reason": "Some inevitable bugs appear in this v0.1.0."
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b625d867508da38eb1beb8a75d113f427b1ebd16619b67d775f61cfb34c6f98f",
          "md5": "7608e047db1a513aa9f2f5473cfc2f4e",
          "sha256": "7bfad1d6accb4273dbef7314351c778cfce8b4ad41d930f36ae96abf5f322255"
        },
        "downloads": -1,
        "filename": "omnisafe-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7608e047db1a513aa9f2f5473cfc2f4e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 156014,
        "upload_time": "2023-03-26T18:40:06",
        "upload_time_iso_8601": "2023-03-26T18:40:06.054603Z",
        "url": "https://files.pythonhosted.org/packages/b6/25/d867508da38eb1beb8a75d113f427b1ebd16619b67d775f61cfb34c6f98f/omnisafe-0.2.0-py2.py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Some inevitable bugs appear in this v0.2.0."
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68962d0b294134c142653a6f56a54ea7f01d0af0ac5085ab39b892dd7a2f353b",
          "md5": "598be2a3e3d1f2d79e429e5b43582569",
          "sha256": "ffba319bcac52eab5f811938848079b6a4552c6757245d175b3a9f6e0560902b"
        },
        "downloads": -1,
        "filename": "omnisafe-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "598be2a3e3d1f2d79e429e5b43582569",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 91090,
        "upload_time": "2023-03-26T18:40:09",
        "upload_time_iso_8601": "2023-03-26T18:40:09.983995Z",
        "url": "https://files.pythonhosted.org/packages/68/96/2d0b294134c142653a6f56a54ea7f01d0af0ac5085ab39b892dd7a2f353b/omnisafe-0.2.0.tar.gz",
        "yanked": true,
        "yanked_reason": "Some inevitable bugs appear in this v0.2.0."
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b22fd401252b356d4bdffcf36c8ea9826fcfc67766355f29520e03b3b63229c",
          "md5": "9fc39cc3246d0bdc10eacb08c24d7433",
          "sha256": "489002c475cc5215727da564039430e3cd4557d45e725d3f0bf117b68e8a4fed"
        },
        "downloads": -1,
        "filename": "omnisafe-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9fc39cc3246d0bdc10eacb08c24d7433",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 165964,
        "upload_time": "2023-03-27T13:59:00",
        "upload_time_iso_8601": "2023-03-27T13:59:00.208352Z",
        "url": "https://files.pythonhosted.org/packages/7b/22/fd401252b356d4bdffcf36c8ea9826fcfc67766355f29520e03b3b63229c/omnisafe-0.2.1-py2.py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Some inevitable bugs appear in this v0.2.1."
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6ab6324399e9e0252754b66d0a48e3e62dac98dbb21c2bfea974eaa57960624",
          "md5": "04ad730cf681b43fbea07e64c2966add",
          "sha256": "73f02f159d04ba660177ab9a168fc9335b2e9b3aaaa6c036e9c2ae563b72f465"
        },
        "downloads": -1,
        "filename": "omnisafe-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "04ad730cf681b43fbea07e64c2966add",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 99483,
        "upload_time": "2023-03-27T13:59:02",
        "upload_time_iso_8601": "2023-03-27T13:59:02.967712Z",
        "url": "https://files.pythonhosted.org/packages/a6/ab/6324399e9e0252754b66d0a48e3e62dac98dbb21c2bfea974eaa57960624/omnisafe-0.2.1.tar.gz",
        "yanked": true,
        "yanked_reason": "Some inevitable bugs appear in this v0.2.1."
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b0e62a55e12b3f1ae7d23912eb4342f2473e6ed47d29fc57a9bc354841b0b2e",
          "md5": "06333f566630804319488a093bb2cafa",
          "sha256": "4fdc5daa10b0214cd2915bae938da07474aaef56f6ac30a9d97134230d7a3290"
        },
        "downloads": -1,
        "filename": "omnisafe-0.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06333f566630804319488a093bb2cafa",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 195839,
        "upload_time": "2023-03-27T16:53:55",
        "upload_time_iso_8601": "2023-03-27T16:53:55.619933Z",
        "url": "https://files.pythonhosted.org/packages/0b/0e/62a55e12b3f1ae7d23912eb4342f2473e6ed47d29fc57a9bc354841b0b2e/omnisafe-0.2.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9603ded56e68cad3b88cd8fb937957fd1ae0a41e4787d94dbaaab083e19491c3",
          "md5": "4d16a5c2884a36869d554b8b8fadfa3c",
          "sha256": "4322fc2ef53f363a6e2a1001dc0161f591243088931e1568fb7fd7f931587e8c"
        },
        "downloads": -1,
        "filename": "omnisafe-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4d16a5c2884a36869d554b8b8fadfa3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 111110,
        "upload_time": "2023-03-27T16:53:59",
        "upload_time_iso_8601": "2023-03-27T16:53:59.214783Z",
        "url": "https://files.pythonhosted.org/packages/96/03/ded56e68cad3b88cd8fb937957fd1ae0a41e4787d94dbaaab083e19491c3/omnisafe-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b0e62a55e12b3f1ae7d23912eb4342f2473e6ed47d29fc57a9bc354841b0b2e",
        "md5": "06333f566630804319488a093bb2cafa",
        "sha256": "4fdc5daa10b0214cd2915bae938da07474aaef56f6ac30a9d97134230d7a3290"
      },
      "downloads": -1,
      "filename": "omnisafe-0.2.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "06333f566630804319488a093bb2cafa",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.8",
      "size": 195839,
      "upload_time": "2023-03-27T16:53:55",
      "upload_time_iso_8601": "2023-03-27T16:53:55.619933Z",
      "url": "https://files.pythonhosted.org/packages/0b/0e/62a55e12b3f1ae7d23912eb4342f2473e6ed47d29fc57a9bc354841b0b2e/omnisafe-0.2.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9603ded56e68cad3b88cd8fb937957fd1ae0a41e4787d94dbaaab083e19491c3",
        "md5": "4d16a5c2884a36869d554b8b8fadfa3c",
        "sha256": "4322fc2ef53f363a6e2a1001dc0161f591243088931e1568fb7fd7f931587e8c"
      },
      "downloads": -1,
      "filename": "omnisafe-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4d16a5c2884a36869d554b8b8fadfa3c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 111110,
      "upload_time": "2023-03-27T16:53:59",
      "upload_time_iso_8601": "2023-03-27T16:53:59.214783Z",
      "url": "https://files.pythonhosted.org/packages/96/03/ded56e68cad3b88cd8fb937957fd1ae0a41e4787d94dbaaab083e19491c3/omnisafe-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}