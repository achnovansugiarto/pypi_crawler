{
  "info": {
    "author": "Yaman Umuroglu",
    "author_email": "yamanu@xilinx.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "        <img src=\"https://img.shields.io/github/v/release/Xilinx/finn-examples?color=%09%23228B22&display_name=tag&label=Release\" />\n    </a>\n    <a href=\"https://github.com/Xilinx/finn/tree/v0.9\">\n        <img src=\"https://img.shields.io/badge/FINN-v0.9.0-blue\" />\n    </a>\n    <a href=\"https://github.com/Xilinx/PYNQ/tree/v3.0.1\">\n        <img src=\"https://img.shields.io/badge/PYNQ-v3.0.1-blue\" />\n    </a>\n    <a href=\"https://www.xilinx.com/support/download/index.html/content/xilinx/en/downloadNav/vivado-design-tools/2022-1.html\">\n        <img src=\"https://img.shields.io/badge/Vivado%2FVitis-v2022.1-blue\" />\n    </a>\n</p>\n\n<img align=\"left\" src=\"docs/img/finn-example.png\" alt=\"drawing\" style=\"margin-right: 20px\" width=\"250\"/>\n\nThis repository contains a variety of customized FPGA neural network accelerator\nexamples built using\nthe [FINN compiler](https://github.com/Xilinx/finn), which\ntargets few-bit quantized neural networks with emphasis on\ngenerating dataflow-style architectures customized for each network.\n\nThe examples here come with\npre-built bitfiles, PYNQ Python drivers and Jupyter notebooks to get started,\nand you can rebuild them from source.\nBoth PYNQ on Zynq and Alveo are supported.\n\nNeed help with a problem in this repo, or got a question? Feel free to ask for help in the [GitHub discussions](https://github.com/Xilinx/finn/discussions).\nIn the past, we also had a [Gitter channel](https://gitter.im/xilinx-finn/community). Please be aware that this is no longer maintained by us but can still be used to search for questions previous users had.\n\n## Quickstart\n*We recommend PYNQ version 3.0.1, but older installations of PYNQ should also work. For PYNQ v2.6.1, please refer for set-up instructions to [FINN-examples v0.0.5](https://github.com/Xilinx/finn-examples/tree/v0.0.5).*\n\n### Zynq\n*For ZYNQ boards, all commands below must be prefixed with `sudo` or by first going into `sudo su`.*\n\nFirst, source the PYNQ and XRT virtual environment:\n\n```shell\nsource /etc/profile.d/pynq_venv.sh\nsource /etc/profile.d/xrt_setup.sh\n```\n\nNext, ensure that your `pip` and `setuptools` installations are up-to-date\non your PYNQ board:\n\n```shell\npython3 -m pip install pip==23.0 setuptools==67.1.0\n```\n\nSince we are going to install finn-examples without build-isolation, we need to ensure all dependencies are installed. For that, install `setuptools_csm` as well:\n\n```shell\npython3 -m pip install setuptools_scm==7.1.0\n```\n\nInstall the `finn-examples` package using `pip`:\n\n```shell\n# remove previous versions with: pip3 uninstall finn-examples\npip3 install finn-examples --no-build-isolation\n# to install particular git branch:\n# pip3 install git+https://github.com/Xilinx/finn-examples.git@dev --no-build-isolation\n```\n\nRetrieve the example Jupyter notebooks using the PYNQ get-notebooks command. An example of how to run the Jupyter notebook server, assuming we are forwarding port 8888 from the target to some port on our local machine, is also shown below:\n\n```shell\n# on PYNQ boards, first cd /home/xilinx/jupyter_notebooks\npynq get-notebooks --from-package finn-examples -p . --force\njupyter-notebook --no-browser --allow-root --port=8888\n```\n\n### Alveo\n*For Alveo we recommend setting up everything inside a virtualenv as described [here](https://pynq.readthedocs.io/en/v2.6.1/getting_started/alveo_getting_started.html?highlight=alveo#install-conda).*\n\nFirst, create & source a virtual environment:\n```shell\nconda create -n <virtual-env> python=3.10\nconda activate <virtual-env>\n```\n\nNext, ensure that your `pip` and `setuptools` installations are up-to-date:\n```shell\npython3 -m pip install --upgrade pip==23.0 setuptools==67.2.0\n```\n\nFinally, we can now install Pynq, FINN-examples and Jupyter (please note to source the XRT environment before):\n```shell\npip3 install pynq==3.0.1\npython3 -m pip install setuptools_scm==7.1.0 ipython==8.9.0\npip3 install finn-examples --no-build-isolation\n# to install particular git branch:\n# pip3 install git+https://github.com/Xilinx/finn-examples.git@dev --no-build-isolation\npython3 -m pip install jupyter==1.0.0\n```\n\nRetrieve the example Jupyter notebooks using the PYNQ get-notebooks command. An example of how to run the Jupyter notebook server is also shown below:\n\n```shell\npynq get-notebooks --from-package finn-examples -p . --force\njupyter-notebook --no-browser --port=8888\n```\n\n***\n\nYou can now navigate the provided Jupyter notebook examples, or just use the\nprovided accelerators as part of your own Python program:\n\n```python\nfrom finn_examples import models\nimport numpy as np\n\n# instantiate the accelerator\naccel = models.cnv_w2a2_cifar10()\n# generate an empty numpy array to use as input\ndummy_in = np.empty(accel.ishape_normal(), dtype=np.uint8)\n# perform inference and get output\ndummy_out = accel.execute(dummy_in)\n```\n\n##  Example Neural Network Accelerators\n| Dataset                                                        | Topology                | Quantization                                               | Supported boards | Supported build flows\n|----------------------------------------------------------------|-------------------------|------------------------------------------------------------|------------------|------------------|\n| <img src=\"docs/img/cifar-10.png\" width=\"150\"/><br/>CIFAR-10     | CNV (VGG-11-like)       | several variants:<br>1/2-bit weights/activations           | Pynq-Z1<br>ZCU104<br>Ultra96<br>U250              | Pynq-Z1<br>ZCU104<br>Ultra96<br>U250 |\n| <img src=\"docs/img/mnist.jpg\" width=\"150\"/><br/><br>MNIST       | 3-layer fully-connected | several variants:<br>1/2-bit weights/activations           | Pynq-Z1<br>ZCU104<br>Ultra96<br>U250              | Pynq-Z1<br>ZCU104<br>Ultra96<br>U250 |\n| <img src=\"docs/img/imagenet.jpg\" width=\"150\"/><br/><br>ImageNet | MobileNet-v1            | 4-bit weights & activations<br>8-bit first layer weights | Alveo U250       | Alveo U250 |\n| <img src=\"docs/img/imagenet.jpg\" width=\"150\"/><br/><br>ImageNet | ResNet-50            | 1-bit weights 2-bit activations<br>4-bit residuals<br>8-bit first/last layer weights | Alveo U250       | - |\n| <img src=\"docs/img/radioml.png\" width=\"150\"/><br/><br>RadioML 2018 | 1D CNN (VGG10)     |  4-bit weights & activations | ZCU104  | ZCU104 |\n| <img src=\"docs/img/maskedfacenet.jpg\" width=\"150\"/><br/><br>MaskedFace-Net | [BinaryCoP](https://arxiv.org/pdf/2102.03456)<br/>*Contributed by TU Munich+BMW*  | 1-bit weights & activations | Pynq-Z1       | Pynq-Z1 |\n| <img src=\"docs/img/keyword-spotting.png\" width=\"150\"/><br/><br>Google Speech Commands v2 | 3-layer fully-connected  | 3-bit weights & activations | Pynq-Z1       | Pynq-Z1 |\n| <img src=\"docs/img/unsw-nb15.jpg\" width=\"150\"/><br/><br>UNSW-NB15 | 4-layer fully-connected  | 2-bit weights & activations | Pynq-Z1 <br> ZCU104 <br> Ultra96       | Pynq-Z1 <br> ZCU104 <br> Ultra96 |\n\n*Please note that the build flow for ResNet-50 for the Alveo U250 has known issues and we're currently working on resolving them. However, you can still execute the associated notebook, as we provide a pre-built FPGA bitfile generated with an older Vivado (/FINN) version targeting the [xilinx_u250_xdma_201830_2](https://www.xilinx.com/products/boards-and-kits/alveo/package-files-archive/u250-2018-3-1.html) platform.* <br>\n*Furthermore, please note that you can target other boards (such as the Pynq-Z2 or ZCU102) by changing the build script manually, but these accelerators have not been tested.*\n\nWe welcome community contributions to add more examples to this repo!\n\n## Supported Boards\n\n*Note that the larger NNs are only available on Alveo or selected Zynq boards.*\n\n`finn-examples` provides pre-built FPGA bitfiles for the following boards:\n\n* **Edge:** Pynq-Z1, Ultra96 and ZCU104\n* **Datacenter:** Alveo U250\n\nIt's possible to generate Vivado IP for the provided examples to target *any*\nmodern Xilinx FPGA of sufficient size.\nIn this case you'll have to manually integrate the generated IP into your design\nusing Vivado IPI.\nYou can read more about this [here](build/README.md).\n\n## Rebuilding the bitfiles\n\nAll of the examples here are built using the [FINN compiler](https://github.com/Xilinx/finn), and can be re-built or customized.\nSee the [build/README.md](build/README.md) for more details.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Xilinx/finn-examples",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Xilinx/finn-examples",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "finn-examples",
    "package_url": "https://pypi.org/project/finn-examples/",
    "platform": null,
    "project_url": "https://pypi.org/project/finn-examples/",
    "project_urls": {
      "Download": "https://github.com/Xilinx/finn-examples",
      "Homepage": "https://github.com/Xilinx/finn-examples"
    },
    "release_url": "https://pypi.org/project/finn-examples/0.0.6/",
    "requires_dist": null,
    "requires_python": ">=3.5.2",
    "summary": "FINN Examples on PYNQ for Zynq and Alveo",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16792035,
  "releases": {
    "0.0.1b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad00f256c136f5d0f959d77722646365ac0ce416ca273b4b8317c21ad87c8621",
          "md5": "2b554fbb456818ac21ba566069ff659a",
          "sha256": "c69208f384b49bc4d378a7c4ffa4b044d8f561495e4e9d969b8a70734f45a30d"
        },
        "downloads": -1,
        "filename": "finn_examples-0.0.1b0.tar.gz",
        "has_sig": false,
        "md5_digest": "2b554fbb456818ac21ba566069ff659a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.2",
        "size": 156932,
        "upload_time": "2020-12-17T21:29:19",
        "upload_time_iso_8601": "2020-12-17T21:29:19.043415Z",
        "url": "https://files.pythonhosted.org/packages/ad/00/f256c136f5d0f959d77722646365ac0ce416ca273b4b8317c21ad87c8621/finn_examples-0.0.1b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cc51629eabd340b1062810e413878bbc34821ca749bfa604cba7e0bd1080429",
          "md5": "ab75f4b337ed67fcf35046fbda9d7182",
          "sha256": "349b5d8abc69abc19270ff7a8f8100ddc0415a8d4c030a8761502c87cc345eba"
        },
        "downloads": -1,
        "filename": "finn_examples-0.0.2b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab75f4b337ed67fcf35046fbda9d7182",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.2",
        "size": 165985,
        "upload_time": "2021-06-06T16:34:48",
        "upload_time_iso_8601": "2021-06-06T16:34:48.646154Z",
        "url": "https://files.pythonhosted.org/packages/1c/c5/1629eabd340b1062810e413878bbc34821ca749bfa604cba7e0bd1080429/finn_examples-0.0.2b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a429020e7fa40c17eebdd3b28e328d9a7d2f1b3179cf21d07c715242b177051b",
          "md5": "292fe2db22a169ce6ca206b018782b79",
          "sha256": "c7bf4648e8e4ac17545bf39a1d60198303d486f14d404763388abea61c0cb30c"
        },
        "downloads": -1,
        "filename": "finn_examples-0.0.2b0.tar.gz",
        "has_sig": false,
        "md5_digest": "292fe2db22a169ce6ca206b018782b79",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.2",
        "size": 164941,
        "upload_time": "2021-06-06T16:34:50",
        "upload_time_iso_8601": "2021-06-06T16:34:50.217836Z",
        "url": "https://files.pythonhosted.org/packages/a4/29/020e7fa40c17eebdd3b28e328d9a7d2f1b3179cf21d07c715242b177051b/finn_examples-0.0.2b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15e60e0db2c8f632687ec1f37de88e894e81b1f10a49bce7a3a655c81ce8e9b3",
          "md5": "ec4a7cff916fbb3949aaf4caa2c27022",
          "sha256": "fdab9e065093d44df114e615ddf9534bbaa3ac0a08a928b9cd5b92018c94cbc0"
        },
        "downloads": -1,
        "filename": "finn_examples-0.0.3b0.tar.gz",
        "has_sig": false,
        "md5_digest": "ec4a7cff916fbb3949aaf4caa2c27022",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.2",
        "size": 162676,
        "upload_time": "2021-06-15T09:25:52",
        "upload_time_iso_8601": "2021-06-15T09:25:52.098688Z",
        "url": "https://files.pythonhosted.org/packages/15/e6/0e0db2c8f632687ec1f37de88e894e81b1f10a49bce7a3a655c81ce8e9b3/finn_examples-0.0.3b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c779aab85b36e3b6db752561482a927459a8faefe1890dbaca048ecdf370dc4d",
          "md5": "0f5b7eaa38e7ee481ef2832284d25af8",
          "sha256": "a7fffa277e5d4760a04ef1daccf80208a3d56d577d62231b2d482d43d0381caa"
        },
        "downloads": -1,
        "filename": "finn_examples-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0f5b7eaa38e7ee481ef2832284d25af8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.2",
        "size": 282985,
        "upload_time": "2021-11-05T17:09:37",
        "upload_time_iso_8601": "2021-11-05T17:09:37.478032Z",
        "url": "https://files.pythonhosted.org/packages/c7/79/aab85b36e3b6db752561482a927459a8faefe1890dbaca048ecdf370dc4d/finn_examples-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c35398c7d0621b78f5240519765ccd6a90aaba1cb6bc72a684cec443160ce605",
          "md5": "86794c929cc6d795497e7e91e3632264",
          "sha256": "ea0c8d8485413f44311e057b63ddeddbedb621e79d6fc1a4ab86c9e17e2a210e"
        },
        "downloads": -1,
        "filename": "finn_examples-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "86794c929cc6d795497e7e91e3632264",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.2",
        "size": 1108745,
        "upload_time": "2022-07-14T12:32:07",
        "upload_time_iso_8601": "2022-07-14T12:32:07.992162Z",
        "url": "https://files.pythonhosted.org/packages/c3/53/98c7d0621b78f5240519765ccd6a90aaba1cb6bc72a684cec443160ce605/finn_examples-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d337716af01285a596a4794065621cb5d45d580419ad70ad04ba468ed43113f0",
          "md5": "aec1e6d3855935fd3d9bd023e1066f65",
          "sha256": "ea56ad6be67590e714de4d9023d69d56eff76d1dd695fa09e39cdc96ab841384"
        },
        "downloads": -1,
        "filename": "finn_examples-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "aec1e6d3855935fd3d9bd023e1066f65",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.2",
        "size": 1161682,
        "upload_time": "2023-02-10T16:30:00",
        "upload_time_iso_8601": "2023-02-10T16:30:00.173004Z",
        "url": "https://files.pythonhosted.org/packages/d3/37/716af01285a596a4794065621cb5d45d580419ad70ad04ba468ed43113f0/finn_examples-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d337716af01285a596a4794065621cb5d45d580419ad70ad04ba468ed43113f0",
        "md5": "aec1e6d3855935fd3d9bd023e1066f65",
        "sha256": "ea56ad6be67590e714de4d9023d69d56eff76d1dd695fa09e39cdc96ab841384"
      },
      "downloads": -1,
      "filename": "finn_examples-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "aec1e6d3855935fd3d9bd023e1066f65",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.2",
      "size": 1161682,
      "upload_time": "2023-02-10T16:30:00",
      "upload_time_iso_8601": "2023-02-10T16:30:00.173004Z",
      "url": "https://files.pythonhosted.org/packages/d3/37/716af01285a596a4794065621cb5d45d580419ad70ad04ba468ed43113f0/finn_examples-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}