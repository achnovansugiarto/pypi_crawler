{
  "info": {
    "author": "Xavier-Lam",
    "author_email": "Lam.Xavier@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# Qiniu-ufop\n\n[![PyPI](https://img.shields.io/pypi/v/qiniu-ufop.svg)](https://pypi.org/project/qiniu-ufop)\n\n本项目提供一个便捷高性能的**七牛自定义数据处理**脚手架,以便开发人员专注数据处理业务逻辑.\n\n目前尚未编写单元测试,也没有完善的异常处理机制.采用Python 3.6进行开发,不确保其他版本运行正常.\n\n项目官方站点 https://github.com/Xavier-Lam/qiniu-ufop\n\n- [Quickstart](#Quickstart)\n  - [安装](#安装)\n  - [开始项目](#开始项目)\n  - [编写业务代码](#编写业务代码)\n  - [本地运行项目](#本地运行项目)\n  - [生成Dockerfile并发布](#生成Dockerfile并发布)\n  - [激活](#激活)\n  - [注意](#注意)\n- [开发](#开发)\n- [使用](#使用)\n  - [命令行工具](#命令行工具)\n  - [一键部署](#一键部署)\n  - [手工部署](#手工部署)\n    - [生成镜像](#生成镜像)\n    - [上载自定义处理程序](#上载自定义处理程序)\n    - [配置](#配置)\n- [调试](#调试)\n  - [本地调试处理程序](#本地调试处理程序)\n  - [本地调试webserver](#本地调试webserver)\n  - [本地调试Docker](#本地调试Docker)\n- [问题排查](#问题排查)\n  - [日志查看](#日志查看)\n  - [部署过程中遇到的异常](#部署过程中遇到的异常)\n- [Cookbook](#Cookbook)\n  - [使用git更新代码](#使用git更新代码)\n- [TODOS:](#TODOS)\n\n## Quickstart\n### 安装\n通过pip安装项目\n\n    pip install qiniu-ufop\n\n### 开始项目\n使用qiniu-ufop命令,快速生成项目\n\n    qiniu-ufop createproject\n\n通过createproject命令,qiniu-ufop在当前目录下生成了一个app.py文件.\n\n### 编写业务代码\n以下是一个简单示例:\n\n    # app.py\n\n    from qiniu_ufop import QiniuUFOP\n\n    ufop = QiniuUFOP()\n\n    @ufop.task(route=r\"^(?:/(?P<name>\\w+))?$\")\n    def debug(buffer, args, content_type):\n        return \"hello \" + args.get(\"name\", \"world\")\n\n假设该自定义数据处理名称为*qiniu*,待处理的文件链接为*https://qbox.me/example.jpg*. 则调用链接是*https://qbox.me/example.jpg?qiniu/qq*,响应输出为*hello qq*\n\n编写说明参见[开发](#开发) 章节\n\n### 本地运行项目\n\n    qiniu-ufop runserver --debug\n    qiniu-ufop runworker\n\n> 注意: 在windows下开发需额外安装`eventlet`,运行runworker时使用命令`qiniu-ufop runworker -P eventlet`\n\n详见[调试](#调试)章节\n\n### 生成Dockerfile并发布\n\n    qiniu-ufop deploy -t <image-tag> -n <ufop-name> -v <version>\n\n该命令为一键部署命令,一键部署需满足相关条件,请参阅[一键部署](#一键部署)章节.如需定制化部署,可参见[手工部署](#手工部署)章节\n\n### 激活\n在你的自定义处理的[版本列表](https://portal.qiniu.com/dora/ufopv2//index?region=all)中调整实例数,即可使用\n\n### 注意\n七牛有一个BUG,在代码中没办法取到正确的cpu核数\n* 使用一键部署,框架会取一键部署的配置项flavor(实例类型,默认C1M1)作为CPU核数,开启相应数量的worker及web\n* 自行部署时,请务必在环境变量(开发路径下的.env文件)中写入CPU核数`CPU_COUNT`或实例配置`FLAVOR`,才能开启正确数量的worker及web,否则,qiniu-ufop将默认取单核,也就是单实例运行web及worker\n\n## 开发\n数据处理器实际上是一个[celery任务](http://docs.celeryproject.org/en/latest/userguide/tasks.html),这个任务必须接受一个`route`参数,指明会路由到该处理器的cmd,如果全局只有一个处理器,可以使用`.*`或`^$`作为路由.理论上可以使用celery复杂的任务分发.\n\n被装饰的处理起接受三个参数,第一个是待处理文件的`io.BytesIO`,第二个是路由匹配到的参数字典,第三个是文件的Content-Type.\n\n处理器返回字符串,bytes,json或是一个`qiniu_ufop.Response`对象.\n\n日志可直接输出stderr.\n\n## 使用\n### 命令行工具\n可通过\n\n    qiniu-ufop -h\n\n看到详细说明\n\n### 一键部署\n一键部署假设用户\n* 本地安装有docker环境\n* 已安装并登陆qdoractl,qdoractl在PATH中\n* 已注册自定义处理程序\n\n        qiniu-ufop deploy -t <image-tag> -n <ufop-name> -v <version>\n\n### 手工部署\n[官方文档](https://developer.qiniu.com/dora/manual/1224/quick-start)\n\n此章节假定用户已完成自定义数据处理程序的开发,本地安装有docker环境,并处在自定义处理程序目录下\n\n#### 生成镜像\n* 构建docker镜像\n\n        docker build . -t <tag>\n\n#### 上载自定义处理程序\n* 下载[自定义数据处理命令行工具](https://developer.qiniu.com/dora/tools/1222/qdoractl)\n* 使用accesskey及secretkey登陆\n\n        qdoractl login -u <access key>\n* 如果你尚未创建你的自定义处理程序,请创建\n\n        qdoractl register <ufop> [-d <description>]\n* 上载自定义处理程序\n\n        qdoractl push <tag>\n\n#### 配置\n**[官方文档](https://developer.qiniu.com/dora/manual/1225/platform-user-guide)** **[自定义数据处理后台](https://`portal.qiniu.com/dora/ufopv2//index?region=all)**\n\n其他依照官方文档配置,在高级配置中\n* 健康配置Path请填写`/health`\n* 日志路径添加\n  * 任务处理异常日志 `/var/log/worker/`\n  * web处理异常日志 `/var/log/server/`\n  * supervisor日志 `/var/log/supervisor/`\n\n## 调试\n### 本地调试处理程序\n可通过qiniu-ufop对处理程序进行调试\n\n    qiniu-ufop process [<cmd>] <filename>\n\n> 注意:此处的cmd是不包括处理程序名的\n\n命令的结果将直接打印再控制台上,如需持久化,可使用output参数,例如\n\n    qiniu-ufop process test.png -o output.png\n\n### 本地调试webserver\n启动服务器及worker\n\n    qiniu-ufop runserver --debug\n    qiniu-ufop runworker\n\n访问\n> POST http://localhost:9100/handler?cmd=\\<cmd\\>&url=\\<url\\>\n\n或将文件作为body,POST到\n> POST http://localhost:9100/handler?cmd=\\<cmd\\>\n\n> 注意: 不是使用multipart/formdata进行文件上传\n\n> 注意: 在windows下开发需额外安装`eventlet`,运行runworker时使用命令`qiniu-ufop runworker -P eventlet`\n> \n> 否则会报`ValueError: not enough values to unpack (expected 3, got 0)`\n\n### 本地调试Docker\n在项目目录下\n\n    qiniu-ufop dockerfile > Dockerfile\n    docker pull ubuntu:18.04\n    docker build . -t <tag>\n    docker run --name <name> -p 9100:9100 -t <tag>\n\n访问\n> POST http://localhost:9100/handler?cmd=\\<cmd\\>\n\n> 注意: 在使用virtualbox时 localhost应改为虚拟机ip\n\n## 问题排查\n### 日志查看\n七牛的日志查看好像经常取不到日志,建议自行在处理程序中埋一个下载日志的方法,来获取日志.可以参看示例项目\n\n### 部署过程中遇到的异常\n在运行qdoractl push时,可能会遇到该异常,反正我是遇到了\n\n    Get http://192.168.99.100:2376/v1.20/version: net/http: HTTP/1.x transport connection broken: malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\".\n\n    * Are you trying to connect to a TLS-enabled daemon without TLS?\n\n遇到上述异常,首先登陆docker宿主机\n\n    docker-machine ssh\n\n修改docker配置,设置`DOCKER_TLS=no`\n\n    sudo vi /var/lib/boot2docker/profile\n\n重启docker服务\n\n    sudo /etc/init.d/docker restart\n\n退出docker宿主机\n\n    exit\n\nunset本机环境变量DOCKER_TLS_VERIFY(以windows为例)\n\n    set DOCKER_TLS_VERIFY=\n\n再度执行部署(参见手工部署或一键部署)\n\n## Cookbook\n### 使用git更新代码\n* 在工作路径下,生成ssh-key\n\n        md .ssh\n        ssh-keygen -f ./.ssh/id_rsa -t rsa -N ''\n\n* 将生成的 ./.ssh/id_rsa.pub 加入git仓库的部署密钥中\n\n* 修改Dockerfile,在cmd前加入\n\n        RUN apt-get install git\n        ADD ./.ssh /root/.ssh\n        RUN chmod 400 /root/.ssh/id_rsa\n        RUN ssh-keyscan github.com >> /root/.ssh/known_hosts\n        RUN git clone your@repository\n\n* 修改script.sh\n\n        git pull origin master\n\n> 注意: 由于将私钥加入了镜像,任何拿到你的镜像的用户,将可以获取到你的私钥\n\n## TODOS:\n* 异常处理\n* 单元测试\n* 测试异步\n\n> 吐槽一下七牛的工单处理,我提了至少3个bug,要么装傻,要么说对不起,我们有问题,请你使用其他方法...另外文档自定义数据处理这块文档也比较糟糕.\n\n> 有问题可以提issue我问我,star数上50再考虑单元测试吧~\n\nXavier-Lam@NetDragon\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Xavier-Lam/qiniu-ufop",
    "keywords": "qiniu,ufop,七牛",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "qiniu-ufop",
    "package_url": "https://pypi.org/project/qiniu-ufop/",
    "platform": "",
    "project_url": "https://pypi.org/project/qiniu-ufop/",
    "project_urls": {
      "Homepage": "https://github.com/Xavier-Lam/qiniu-ufop"
    },
    "release_url": "https://pypi.org/project/qiniu-ufop/0.1.3/",
    "requires_dist": [
      "celery (>=4.3.0)",
      "PyYAML (>=5.1)",
      "redis (>=3.2.0)",
      "six (>=1.7.0)",
      "tornado (<6.0.0,>=5.1.0)"
    ],
    "requires_python": "",
    "summary": "Qiniu ufop development tool",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5441440,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d0e561694f3399fca1cd24e944a519b1420d8fcb7eee5c78f31e34d7cb04908",
          "md5": "cad498351deca4034f9aa4af6d40bd38",
          "sha256": "e739acd5d113bc9c8d27b2e47725213f7f1e88e2d864575e8d4043eb4d845df9"
        },
        "downloads": -1,
        "filename": "qiniu_ufop-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cad498351deca4034f9aa4af6d40bd38",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 26019,
        "upload_time": "2019-06-10T16:30:59",
        "upload_time_iso_8601": "2019-06-10T16:30:59.905068Z",
        "url": "https://files.pythonhosted.org/packages/1d/0e/561694f3399fca1cd24e944a519b1420d8fcb7eee5c78f31e34d7cb04908/qiniu_ufop-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccb092c35f29a338502d9c71ae166ab3a676b743c990a945f3815a520074b328",
          "md5": "55ce630d736cd986dcd5f748fede2734",
          "sha256": "9cc9fa1764a2585147a55816977e38efb56c25f05157310342407cf5757dd8e1"
        },
        "downloads": -1,
        "filename": "qiniu-ufop-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "55ce630d736cd986dcd5f748fede2734",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18142,
        "upload_time": "2019-06-10T16:31:01",
        "upload_time_iso_8601": "2019-06-10T16:31:01.746761Z",
        "url": "https://files.pythonhosted.org/packages/cc/b0/92c35f29a338502d9c71ae166ab3a676b743c990a945f3815a520074b328/qiniu-ufop-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb986d5c196e368f879fd970106ca6d2e0a49a166e4262b20d37c73d9c9616ec",
          "md5": "7da304ccf29490173c89f6620550828a",
          "sha256": "01b1c48260e418ffb2cd6aedd37a96d00640d23db4347a1d6f0cfc05d3524afc"
        },
        "downloads": -1,
        "filename": "qiniu_ufop-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7da304ccf29490173c89f6620550828a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 26617,
        "upload_time": "2019-06-24T16:23:02",
        "upload_time_iso_8601": "2019-06-24T16:23:02.048706Z",
        "url": "https://files.pythonhosted.org/packages/fb/98/6d5c196e368f879fd970106ca6d2e0a49a166e4262b20d37c73d9c9616ec/qiniu_ufop-0.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e649eeeeb398a12152384ec31052de7e5be954118e90e19446ca54e28de0850",
          "md5": "8a805e3d99ec22d8efb107ad535993d4",
          "sha256": "51edebe08e2bf1a95a6b593e9378575ce58828a41ae7a02e1b1b8628d3db5a45"
        },
        "downloads": -1,
        "filename": "qiniu-ufop-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8a805e3d99ec22d8efb107ad535993d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18968,
        "upload_time": "2019-06-24T16:23:04",
        "upload_time_iso_8601": "2019-06-24T16:23:04.286867Z",
        "url": "https://files.pythonhosted.org/packages/5e/64/9eeeeb398a12152384ec31052de7e5be954118e90e19446ca54e28de0850/qiniu-ufop-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb986d5c196e368f879fd970106ca6d2e0a49a166e4262b20d37c73d9c9616ec",
        "md5": "7da304ccf29490173c89f6620550828a",
        "sha256": "01b1c48260e418ffb2cd6aedd37a96d00640d23db4347a1d6f0cfc05d3524afc"
      },
      "downloads": -1,
      "filename": "qiniu_ufop-0.1.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7da304ccf29490173c89f6620550828a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 26617,
      "upload_time": "2019-06-24T16:23:02",
      "upload_time_iso_8601": "2019-06-24T16:23:02.048706Z",
      "url": "https://files.pythonhosted.org/packages/fb/98/6d5c196e368f879fd970106ca6d2e0a49a166e4262b20d37c73d9c9616ec/qiniu_ufop-0.1.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5e649eeeeb398a12152384ec31052de7e5be954118e90e19446ca54e28de0850",
        "md5": "8a805e3d99ec22d8efb107ad535993d4",
        "sha256": "51edebe08e2bf1a95a6b593e9378575ce58828a41ae7a02e1b1b8628d3db5a45"
      },
      "downloads": -1,
      "filename": "qiniu-ufop-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "8a805e3d99ec22d8efb107ad535993d4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18968,
      "upload_time": "2019-06-24T16:23:04",
      "upload_time_iso_8601": "2019-06-24T16:23:04.286867Z",
      "url": "https://files.pythonhosted.org/packages/5e/64/9eeeeb398a12152384ec31052de7e5be954118e90e19446ca54e28de0850/qiniu-ufop-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}