{
  "info": {
    "author": "Giuseppe Armenise",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Welcome to SIPPY!\n### Systems Identification Package for PYthon (SIPPY)\n\nThe main objective of this code is to provide different identification methods\nto build linear models of dynamic systems, starting from input-output collected\ndata. The models can be built as transfer functions or state-space models in\ndiscrete-time domain. The Python user has many options in terms of identification\nalgorithms and in terms of settings to look for the best model. \nIt is originally developed by Giuseppe Armenise at the Department of Civil and Industrial Engineering of University of Pisa under supervision of [Prof. Gabriele Pannocchia](https://people.unipi.it/gabriele_pannocchia/). The identification code is distributed under the LGPL license, meaning the code can be used royalty-free even in commercial applications.\nThe developed code is quite simple to use and, having default settings, it can \nbe used by beginners but also by experts, having many adjustable settings that\ncan be changed according to the particular case. Furthermore, there are some\nfunctions that the user can use, e.g. to test if the identified system follows the\nplant data. \nThe linear model to be identified can be chosen between:\n* input-output structures: FIR, ARX, ARMAX, ARMA, ARARX, ARARMAX, OE, BJ, GEN;\n* state-space structures: N4SID, MOESP, CVA, PARSIM-P, PARSIM-S or PARSIM-K.\nAll the proposed structures are available both in the SISO case, for which the information criteria \nare available, and in the MIMO case.\n\n### Installation and package content \nThe code has been implemented in Python 2.7, compatible with Python 3.7, (download it [here](https://www.python.org/downloads/)) and requires the following packages:\nNumPy, SciPy, control (version >= 0.8.2), math, Slycot, Future (See installation instruction [here](http://python-future.org/quickstart.html#installation)), CasADi (see [here](https://web.casadi.org/get/)).\nThe Slycot package is available [here](https://pypi.python.org/pypi/slycot/0.2.0) or alternatively the binaries can be found [here](https://www.lfd.uci.edu/~gohlke/pythonlibs/).\n\nIn order to make the installation easier, the user can simply use the quick command \n`python setup.py install`\nin order to gather all the required packages all together.\n\nSIPPY is distributed as packed file SIPPY.zip (download it from [here](https://github.com/CPCLAB-UNIPI/SIPPY)) that contains the following items:\n* `user_guide.pdf`: documentation for Identification_code usage.\n* `sippy/__init__.py`: main file containing the function that has to be recalled to perform the\nidentifications.\n* `Examples/Ex_ARMAX_MIMO.py`: example of usage of the Identification_code for ARMAX systems (multi input-multi output case).\n* `Examples/Ex_ARX_MIMO.py`: example of usage of the Identification_code for ARX systems (multi input-multi output case).\n* `Examples/Ex_ARMAX.py`: example of usage of the Identification_code for ARMAX systems (single input-single output case, using the information criteria).\n* `Examples/SS.py`: example of usage of the Identification_code for State-space systems.\n* `Examples/Ex_OPT_GEN-INOUT.py`: example of usage of the Identification_code for the input-output structures using optimization methods.\n* `Examples/Ex_RECURSIVE.py`: example of usage of the Identification_code for the input-output structures using recursive methods.\n* `Examples/Ex_CST.py`: example of usage of the Identification_code for a Continuous Stirred Tank system.\n* `sippy/functionset.py`:  file containing most of the functions used by the identification functions and other useful functions (see the user_guide for the usage).\n* `sippy/functionset_OPT.py`: file containing the nonlinear optimization problem used by some of the identification methods.\n* `sippy/functionsetSIM.py`: additional functions used by the Subspace identification functions and other useful functions for state space models (see the user_guide for the usage).\n\nIn the folder `sippy/` there are other files `.py`, that are called by the main file, so the user has\nnot to use them.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CPCLAB-UNIPI/sippy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sippy-rcognita",
    "package_url": "https://pypi.org/project/sippy-rcognita/",
    "platform": "",
    "project_url": "https://pypi.org/project/sippy-rcognita/",
    "project_urls": {
      "Homepage": "https://github.com/CPCLAB-UNIPI/sippy"
    },
    "release_url": "https://pypi.org/project/sippy-rcognita/0.2.1/",
    "requires_dist": null,
    "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=3.6",
    "summary": "Systems Identification Package for Python",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11443508,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efa16e9041f933b303a49eaf04931f0afdf2c4575c738bc1e2aac15ba73a4388",
          "md5": "06d5102f130dc9c256054816ec8f0d61",
          "sha256": "d7977615121ba41522b74c58f086e20243fbf1d3c7fdac5c08e1ecf14e5ee823"
        },
        "downloads": -1,
        "filename": "sippy-rcognita-0.2.0.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "06d5102f130dc9c256054816ec8f0d61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=3.6",
        "size": 62960,
        "upload_time": "2021-09-14T00:55:18",
        "upload_time_iso_8601": "2021-09-14T00:55:18.699029Z",
        "url": "https://files.pythonhosted.org/packages/ef/a1/6e9041f933b303a49eaf04931f0afdf2c4575c738bc1e2aac15ba73a4388/sippy-rcognita-0.2.0.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa6fff0c351e44aaea013679095c315ebb59b3fa69abf8ed024e0c146c49d5a3",
          "md5": "82241e722beccb07d51692292c2b9b59",
          "sha256": "a879737be2ede75cf128857d0d33df6b823aee4c4603b80bea7efa9de969521c"
        },
        "downloads": -1,
        "filename": "sippy-rcognita-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "82241e722beccb07d51692292c2b9b59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=3.6",
        "size": 30006,
        "upload_time": "2021-09-14T01:35:48",
        "upload_time_iso_8601": "2021-09-14T01:35:48.473902Z",
        "url": "https://files.pythonhosted.org/packages/aa/6f/ff0c351e44aaea013679095c315ebb59b3fa69abf8ed024e0c146c49d5a3/sippy-rcognita-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa6fff0c351e44aaea013679095c315ebb59b3fa69abf8ed024e0c146c49d5a3",
        "md5": "82241e722beccb07d51692292c2b9b59",
        "sha256": "a879737be2ede75cf128857d0d33df6b823aee4c4603b80bea7efa9de969521c"
      },
      "downloads": -1,
      "filename": "sippy-rcognita-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "82241e722beccb07d51692292c2b9b59",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=3.6",
      "size": 30006,
      "upload_time": "2021-09-14T01:35:48",
      "upload_time_iso_8601": "2021-09-14T01:35:48.473902Z",
      "url": "https://files.pythonhosted.org/packages/aa/6f/ff0c351e44aaea013679095c315ebb59b3fa69abf8ed024e0c146c49d5a3/sippy-rcognita-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}