{
  "info": {
    "author": "Sahil Ahuja",
    "author_email": "sahil27ahuja1999@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "### Description\nThis is an easy to use library to encode categorical data in a feature into optimized set of \nfeatures with each categorical value mapping to a unique bitstring.\n\n```sh\n>>> import optiEncoder\n>>> enc = optiEncoder.Encoder([\"France\",\"Canada\",\"England\"])\n>>> print(\"Mappings : \", enc.getMappings())\n{'France':[0,0],'Canada':[0,1],'England':[1,0]}\n>>> print(\"Encoded List : \", enc.getEncodedList())\n[[0,0],[0,1],[1,0]]\n```\n\n### Usage in Data Preprocessing\n```sh\n>>> import optiEncoder\n>>> import pandas\n>>> d = pd.read_csv('data.csv').dropna()\n        Performance Measure  BRATS 2018  \n0          Dice Coefficient       90  \n1       Jaccard Coefficient       80  \n2            Area under ROC       90  \n4        Hausdorff Distance       10  \n5               Sensitivity       90  \n6               Specificity       90  \n7                 F-Measure       90  \n8                 Precision       80  \n9   Vol Similarity Distance       90  \n10                  Fallout        7  \n12                       TP     1900  \n13                       FP      200  \n14                       TN     2500  \n15                       FN      600  \n\n>>> enc = optiEncoder.Encoder(list('Performance Measure'))\n>>> enc.getEncodedList()\n[[1, 0, 0, 1], [1, 1, 0, 0], [1, 0, 0, 0], [0, 1, 1, 1], [0, 1, 0, 0], [1, 0, 0, 0], [0, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 1], [1, 0, 1, 1], [1, 1, 0, 0], [0, 0, 0, 1], [0, 0, 1, 0], [1, 1, 0, 0], [1, 0, 1, 0], [0, 1, 0, 1], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 0]]\n>>> d = d.iloc[:,1:]\n>>> d\n    BRATS 2018  \n0        90  \n1        80  \n2        90  \n4        10  \n5        90  \n6        90  \n7        90  \n8        80  \n9        90  \n10        7  \n12     1900  \n13      200  \n14     2500  \n15      600  \n\n>>> encodedList = enc.getEncodedList()\n>>> for i in range(0,len(encodedList[0])):\n...     d[str(i)]=pd.DataFrame(encodedList).iloc[:,i]\n...\n>>> d\n    BRATS 2018  0  1  2  3\n0        90  1  0  0  1\n1        80  1  1  0  0\n2        90  1  0  0  0\n4        10  0  1  0  0\n5        90  1  0  0  0\n6        90  0  1  1  0\n7        90  1  0  1  0\n8        80  0  0  1  1\n9        90  1  0  1  1\n10        7  1  1  0  0\n12     1900  0  0  1  0\n13      200  1  1  0  0\n14     2500  1  0  1  0\n15      600  0  1  0  1\n\n```\n\n### License\nMIT\n### Author\nSahil Ahuja",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-optiEncoder",
    "package_url": "https://pypi.org/project/python-optiEncoder/",
    "platform": "",
    "project_url": "https://pypi.org/project/python-optiEncoder/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/python-optiEncoder/2.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python package to optimally encode a list",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8012355,
  "releases": {
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30560e69e6e0f36dc367593b38e546ee955791196acd63934685dd97501b0da4",
          "md5": "8e6a8caad30cd271e808aca62a2b5725",
          "sha256": "93634fba59a0b92ff975572da745cd3fda0b74981fdb8716ece98acf4f64f5fa"
        },
        "downloads": -1,
        "filename": "python-optiEncoder-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8e6a8caad30cd271e808aca62a2b5725",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2110,
        "upload_time": "2020-08-21T12:23:34",
        "upload_time_iso_8601": "2020-08-21T12:23:34.102287Z",
        "url": "https://files.pythonhosted.org/packages/30/56/0e69e6e0f36dc367593b38e546ee955791196acd63934685dd97501b0da4/python-optiEncoder-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84f47c3948191723b25b1448c3e7e5ce78cf8261e5699476f2c20aa491a83271",
          "md5": "0550079cd45eb58613ddd36a7384c78a",
          "sha256": "91e1943c15df0493e1fd6c366ec547a50a2345f6a474c4b3200508292867c064"
        },
        "downloads": -1,
        "filename": "python-optiEncoder-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0550079cd45eb58613ddd36a7384c78a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2129,
        "upload_time": "2020-08-21T12:29:20",
        "upload_time_iso_8601": "2020-08-21T12:29:20.313922Z",
        "url": "https://files.pythonhosted.org/packages/84/f4/7c3948191723b25b1448c3e7e5ce78cf8261e5699476f2c20aa491a83271/python-optiEncoder-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2908bbb5fc574a7711c09262e49435cdaef9471e1286ee5946b5d1a0a3b096ed",
          "md5": "cfe3e25a8f991e827667d12447984088",
          "sha256": "260ae84df80984b01843c18e6f4397c304fd171352b7c766f392308c125ce817"
        },
        "downloads": -1,
        "filename": "python-optiEncoder-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cfe3e25a8f991e827667d12447984088",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2895,
        "upload_time": "2020-08-21T13:17:19",
        "upload_time_iso_8601": "2020-08-21T13:17:19.366778Z",
        "url": "https://files.pythonhosted.org/packages/29/08/bbb5fc574a7711c09262e49435cdaef9471e1286ee5946b5d1a0a3b096ed/python-optiEncoder-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2908bbb5fc574a7711c09262e49435cdaef9471e1286ee5946b5d1a0a3b096ed",
        "md5": "cfe3e25a8f991e827667d12447984088",
        "sha256": "260ae84df80984b01843c18e6f4397c304fd171352b7c766f392308c125ce817"
      },
      "downloads": -1,
      "filename": "python-optiEncoder-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cfe3e25a8f991e827667d12447984088",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2895,
      "upload_time": "2020-08-21T13:17:19",
      "upload_time_iso_8601": "2020-08-21T13:17:19.366778Z",
      "url": "https://files.pythonhosted.org/packages/29/08/bbb5fc574a7711c09262e49435cdaef9471e1286ee5946b5d1a0a3b096ed/python-optiEncoder-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}