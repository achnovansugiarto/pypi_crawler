{
  "info": {
    "author": "Gustavo Magaña López",
    "author_email": "gustavo.magana-lopez@u-psud.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# profile_binr ![](https://enktyy605xyf6r8.m.pipedream.net)\n\nThe PROFILE methodology for the binarisation and normalisation of RNA-seq data.\n\nThis is a Python interface to a set of normalisation and binarisation functions for\nRNA-seq data originally written in R.\n\nThis software package is based on the methodology developed by Beal, Jonas; Montagud, Arnau;\nTraynard, Pauline; Barillot, Emmanuel; and Calzone, Laurence at [Computational Systems Biology of Cancer team at Institut Curie](https://sysbio.curie.fr/)\n([contact-sysbio@curie.fr](mailto:contact-sysbio@curie.fr)).\nIt generalizes and offers a Python interface of the original implementation in Rmarkdown notebooks available at https://github.com/sysbio-curie/PROFILE.\n\n## Installation\n\n### Using conda\n\nThe tool can be installed using the Conda package [profile_binr](https://anaconda.org/colomoto/profile_binr) in the `colomoto` channel. Note that some of its dependencies requires the `conda-forge` channel.\n\n```\nconda install -c conda-forge colomoto::profile_binr\n```\n\n### Using pip\n\n#### Requirements\n\n* R (≥4.0)\n* R packages:\n    * mclust\n    * diptest\n    * moments\n    * magrittr\n    * tidyr\n    * dplyr\n    * tibble\n    * bigmemory\n    * doSNOW\n    * foreach\n    * glue\n\n\n```\npip install profile_binr\n```\n\n## Usage\n\nOnce again this is a minimal example :\n```python\nfrom profile_binr import ProfileBin\nimport pandas as pd\n\n# your data is assumed to contain observations as\n# rows and genes as columns\ndata = pd.read_csv(\"path/to/your/data.csv\")\ndata.head()\n```\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Clec1b</th>\n      <th>Kdm3a</th>\n      <th>Coro2b</th>\n      <th>8430408G22Rik</th>\n      <th>Clec9a</th>\n      <th>Phf6</th>\n      <th>Usp14</th>\n      <th>Tmem167b</th>\n    </tr>\n    <tr>\n      <th>cell_id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>HSPC_025</th>\n      <td>0.0</td>\n      <td>4.891604</td>\n      <td>1.426148</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.599758</td>\n      <td>2.954035</td>\n      <td>6.357369</td>\n    </tr>\n    <tr>\n      <th>HSPC_031</th>\n      <td>0.0</td>\n      <td>6.877725</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.423483</td>\n      <td>1.804914</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>HSPC_037</th>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>6.913384</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.051659</td>\n      <td>8.265465</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>LT-HSC_001</th>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>8.178374</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>6.419817</td>\n      <td>3.453502</td>\n      <td>2.579528</td>\n    </tr>\n    <tr>\n      <th>HSPC_001</th>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>9.475577</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>7.733370</td>\n      <td>1.478900</td>\n      <td>0.000000</td>\n    </tr>\n  </tbody>\n</table>\n\n```python\n# create the binarisation instance using the dataframe\n# with the index containing the cell identifier\n# and the columns being the gene names\nprobin = ProfileBin(data)\n\n# compute the criteria used to binarise/normalise the data :\n# This method uses a parallel implementation, you can specify the \n# number of workers with an integer\nprobin.fit(8) # train using 8 threads\n\n# Look at the computed criteria\nprobin.criteria.head(8)\n```\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Dip</th>\n      <th>BI</th>\n      <th>Kurtosis</th>\n      <th>DropOutRate</th>\n      <th>MeanNZ</th>\n      <th>DenPeak</th>\n      <th>Amplitude</th>\n      <th>Category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Clec1b</th>\n      <td>0.358107</td>\n      <td>1.635698</td>\n      <td>54.017736</td>\n      <td>0.876208</td>\n      <td>1.520978</td>\n      <td>-0.007249</td>\n      <td>8.852181</td>\n      <td>ZeroInf</td>\n    </tr>\n    <tr>\n      <th>Kdm3a</th>\n      <td>0.000000</td>\n      <td>2.407548</td>\n      <td>-0.784019</td>\n      <td>0.326087</td>\n      <td>3.847940</td>\n      <td>0.209239</td>\n      <td>10.126676</td>\n      <td>Bimodal</td>\n    </tr>\n    <tr>\n      <th>Coro2b</th>\n      <td>0.000000</td>\n      <td>2.320060</td>\n      <td>7.061604</td>\n      <td>0.658213</td>\n      <td>2.383819</td>\n      <td>0.004597</td>\n      <td>9.475577</td>\n      <td>ZeroInf</td>\n    </tr>\n    <tr>\n      <th>8430408G22Rik</th>\n      <td>0.684454</td>\n      <td>3.121069</td>\n      <td>21.729044</td>\n      <td>0.884058</td>\n      <td>2.983472</td>\n      <td>0.005663</td>\n      <td>9.067857</td>\n      <td>ZeroInf</td>\n    </tr>\n    <tr>\n      <th>Clec9a</th>\n      <td>1.000000</td>\n      <td>2.081717</td>\n      <td>140.089285</td>\n      <td>0.965580</td>\n      <td>2.280293</td>\n      <td>-0.009361</td>\n      <td>9.614233</td>\n      <td>Discarded</td>\n    </tr>\n    <tr>\n      <th>Phf6</th>\n      <td>0.000000</td>\n      <td>1.988667</td>\n      <td>-1.389024</td>\n      <td>0.035628</td>\n      <td>5.025501</td>\n      <td>2.017547</td>\n      <td>10.135226</td>\n      <td>Bimodal</td>\n    </tr>\n    <tr>\n      <th>Usp14</th>\n      <td>0.000000</td>\n      <td>2.208080</td>\n      <td>-1.224987</td>\n      <td>0.007850</td>\n      <td>6.109964</td>\n      <td>8.245570</td>\n      <td>11.088750</td>\n      <td>Bimodal</td>\n    </tr>\n    <tr>\n      <th>Tmem167b</th>\n      <td>0.000000</td>\n      <td>2.430813</td>\n      <td>0.093023</td>\n      <td>0.393720</td>\n      <td>3.448331</td>\n      <td>0.072982</td>\n      <td>9.486826</td>\n      <td>Bimodal</td>\n    </tr>\n  </tbody>\n</table>\n\n\n```python\n# get binarised data (alternatively .binarise()):\nmy_bin = probin.binarize()\nmy_bin.head()\n```\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Clec1b</th>\n      <th>Kdm3a</th>\n      <th>Coro2b</th>\n      <th>8430408G22Rik</th>\n      <th>Clec9a</th>\n      <th>Phf6</th>\n      <th>Usp14</th>\n      <th>Tmem167b</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>HSPC_025</th>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>HSPC_031</th>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>HSPC_037</th>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>LT-HSC_001</th>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>HSPC_001</th>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n\n\n```python\n# idem for normalised data :\nmy_norm = probin.normalize()\nmy_norm.head()\n```\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Clec1b</th>\n      <th>Kdm3a</th>\n      <th>Coro2b</th>\n      <th>8430408G22Rik</th>\n      <th>Clec9a</th>\n      <th>Phf6</th>\n      <th>Usp14</th>\n      <th>Tmem167b</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>HSPC_025</th>\n      <td>0.0</td>\n      <td>9.786196e-01</td>\n      <td>0.184102</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.000801</td>\n      <td>8.318176e-05</td>\n      <td>9.999970e-01</td>\n    </tr>\n    <tr>\n      <th>HSPC_031</th>\n      <td>0.0</td>\n      <td>9.999981e-01</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.000462</td>\n      <td>8.084114e-07</td>\n      <td>6.874397e-11</td>\n    </tr>\n    <tr>\n      <th>HSPC_037</th>\n      <td>0.0</td>\n      <td>4.408417e-09</td>\n      <td>0.892449</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.000145</td>\n      <td>9.999940e-01</td>\n      <td>6.874397e-11</td>\n    </tr>\n    <tr>\n      <th>LT-HSC_001</th>\n      <td>0.0</td>\n      <td>4.408417e-09</td>\n      <td>1.000000</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.991865</td>\n      <td>6.230178e-04</td>\n      <td>1.599753e-04</td>\n    </tr>\n    <tr>\n      <th>HSPC_001</th>\n      <td>0.0</td>\n      <td>4.408417e-09</td>\n      <td>1.000000</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.999865</td>\n      <td>2.171153e-07</td>\n      <td>6.874397e-11</td>\n    </tr>\n  </tbody>\n</table>\n\n\n## References\n\n* Béal J, Montagud A, Traynard P, Barillot E and Calzone L (2019) *Personalization of Logical Models With Multi-Omics Data Allows Clinical Stratification of Patients*. Front. Physiol. 9:1965. doi:[10.3389/fphys.2018.01965](https://doi.org/10.3389/fphys.2018.01965)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bnediction/profile_binr",
    "keywords": "",
    "license": "BSD-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "profile-binr",
    "package_url": "https://pypi.org/project/profile-binr/",
    "platform": "",
    "project_url": "https://pypi.org/project/profile-binr/",
    "project_urls": {
      "Homepage": "https://github.com/bnediction/profile_binr"
    },
    "release_url": "https://pypi.org/project/profile-binr/0.1.2/",
    "requires_dist": [
      "pandas",
      "rpy2"
    ],
    "requires_python": "",
    "summary": "PROFILE methodology for the binarisation and normalisation of RNA-seq data",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10486163,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39b887a946404c78d27ce884a58257ce7d1b691584deb38a85dfa9a6b8298431",
          "md5": "564a6796ed8fc8c5e9ea60a2eea6ba7c",
          "sha256": "3685578af4ef62d9adcb63655ec10b90d1b5e1c6ab53c7f044af6976f3a71f76"
        },
        "downloads": -1,
        "filename": "profile_binr-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "564a6796ed8fc8c5e9ea60a2eea6ba7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6283,
        "upload_time": "2021-05-27T07:32:54",
        "upload_time_iso_8601": "2021-05-27T07:32:54.776262Z",
        "url": "https://files.pythonhosted.org/packages/39/b8/87a946404c78d27ce884a58257ce7d1b691584deb38a85dfa9a6b8298431/profile_binr-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34528e339eead166da3d1fe9ea1b34be5d3fa4eb07661501135f44b5ec9d53af",
          "md5": "97e33b05f6de712dd8c8fad66f62bfe9",
          "sha256": "86d2d45eefdd2f13902c1ca8a7362ca941f8104835962c16716cfad5f8707651"
        },
        "downloads": -1,
        "filename": "profile_binr-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "97e33b05f6de712dd8c8fad66f62bfe9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8606,
        "upload_time": "2021-05-27T07:32:56",
        "upload_time_iso_8601": "2021-05-27T07:32:56.313494Z",
        "url": "https://files.pythonhosted.org/packages/34/52/8e339eead166da3d1fe9ea1b34be5d3fa4eb07661501135f44b5ec9d53af/profile_binr-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7a49c1dcf1d9178bdae02cdf6e95a568a03368d740829478cf4948a8867764e",
          "md5": "70bc188249b67986a1974b201bd7d2d0",
          "sha256": "c483681231aae8ef3e32de12b321e7669cb7b510c16425a0a2ab414bed7c533c"
        },
        "downloads": -1,
        "filename": "profile_binr-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70bc188249b67986a1974b201bd7d2d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9766,
        "upload_time": "2021-05-27T09:08:19",
        "upload_time_iso_8601": "2021-05-27T09:08:19.165220Z",
        "url": "https://files.pythonhosted.org/packages/b7/a4/9c1dcf1d9178bdae02cdf6e95a568a03368d740829478cf4948a8867764e/profile_binr-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1135b97b4266cdd17f26b32842b452d42a3e2b91ff1c83b4e93416cdf5bfc395",
          "md5": "4962bb486c7f75eb1f31cd116cfd52da",
          "sha256": "b3c3e7cbf4cb20d8603e27870caf2ea524becda019a0e4c8f9a1a555efaf777b"
        },
        "downloads": -1,
        "filename": "profile_binr-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4962bb486c7f75eb1f31cd116cfd52da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11881,
        "upload_time": "2021-05-27T09:08:20",
        "upload_time_iso_8601": "2021-05-27T09:08:20.431387Z",
        "url": "https://files.pythonhosted.org/packages/11/35/b97b4266cdd17f26b32842b452d42a3e2b91ff1c83b4e93416cdf5bfc395/profile_binr-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a06c2ae65d88bbeead5995f56c9582d2351e40782a66e59642d01feb365e7a18",
          "md5": "a92a54567f81d648bb7a58169d20d901",
          "sha256": "4db566efbfeae710a77ba5daa8d7dfe81af173c66f64e17fee24deaf3cc38953"
        },
        "downloads": -1,
        "filename": "profile_binr-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a92a54567f81d648bb7a58169d20d901",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13964,
        "upload_time": "2021-05-27T09:18:50",
        "upload_time_iso_8601": "2021-05-27T09:18:50.000570Z",
        "url": "https://files.pythonhosted.org/packages/a0/6c/2ae65d88bbeead5995f56c9582d2351e40782a66e59642d01feb365e7a18/profile_binr-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c0861441043c7322614be28f57e2fb49d16f8d423fb9302132e81338e3c93a2",
          "md5": "ed58f0a0f4dda67e0945de7249698531",
          "sha256": "5b67af07393b015ee2849feab1ac386fc933dc653774350147e688322309b807"
        },
        "downloads": -1,
        "filename": "profile_binr-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ed58f0a0f4dda67e0945de7249698531",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15647,
        "upload_time": "2021-05-27T09:18:50",
        "upload_time_iso_8601": "2021-05-27T09:18:50.919709Z",
        "url": "https://files.pythonhosted.org/packages/5c/08/61441043c7322614be28f57e2fb49d16f8d423fb9302132e81338e3c93a2/profile_binr-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a06c2ae65d88bbeead5995f56c9582d2351e40782a66e59642d01feb365e7a18",
        "md5": "a92a54567f81d648bb7a58169d20d901",
        "sha256": "4db566efbfeae710a77ba5daa8d7dfe81af173c66f64e17fee24deaf3cc38953"
      },
      "downloads": -1,
      "filename": "profile_binr-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a92a54567f81d648bb7a58169d20d901",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13964,
      "upload_time": "2021-05-27T09:18:50",
      "upload_time_iso_8601": "2021-05-27T09:18:50.000570Z",
      "url": "https://files.pythonhosted.org/packages/a0/6c/2ae65d88bbeead5995f56c9582d2351e40782a66e59642d01feb365e7a18/profile_binr-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c0861441043c7322614be28f57e2fb49d16f8d423fb9302132e81338e3c93a2",
        "md5": "ed58f0a0f4dda67e0945de7249698531",
        "sha256": "5b67af07393b015ee2849feab1ac386fc933dc653774350147e688322309b807"
      },
      "downloads": -1,
      "filename": "profile_binr-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ed58f0a0f4dda67e0945de7249698531",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15647,
      "upload_time": "2021-05-27T09:18:50",
      "upload_time_iso_8601": "2021-05-27T09:18:50.919709Z",
      "url": "https://files.pythonhosted.org/packages/5c/08/61441043c7322614be28f57e2fb49d16f8d423fb9302132e81338e3c93a2/profile_binr-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}