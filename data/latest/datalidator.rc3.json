{
  "info": {
    "author": "Vít Labuda",
    "author_email": "dev@vitlabuda.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries",
      "Typing :: Typed"
    ],
    "description": "<!--\nCopyright (c) 2022 Vít Labuda. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the\nfollowing conditions are met:\n 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\n    disclaimer.\n 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\n    following disclaimer in the documentation and/or other materials provided with the distribution.\n 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\n    products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-->\n\n\n# Datalidator\n**Datalidator** is a flexible, object-oriented Python library for parsing and validating untrusted input data.\n\nOne of its most prominent characteristics is that it is able to parse various kinds of input data: **configuration \nfiles, user inputs, web API outputs** etc.\n\n*NOTE: Some links in this README may not work if the file is not viewed through \n[GitHub](https://github.com/vitlabuda/datalidator/blob/main/README.md).*\n\n\n## Features and characteristics\n- supports **Python 3.9 and above**\n- no dependencies *(other than the Python standard library)* are required\n- **object-oriented & polymorphic design** – there are 3 main types of *Datalidator objects*:\n  - blueprints – parse untrusted input data to output data of a specific type, and then dispatch filters & validators\n  - filters – modify the parsed data in some way while retaining their data type\n  - validators – validate whether the parsed and filtered data meet certain conditions \n- adheres to the rules of [defensive programming](https://en.wikipedia.org/wiki/Defensive_programming)\n- extensive automated test coverage\n- **data-source-agnostic** – the library may be used to parse configuration files, user inputs, web API outputs, ...\n- **environment-agnostic** – the library does not access any external resources (such as the filesystem or network)\n- thread-safe\n- many built-in & ready-to-use *Datalidator objects*:\n  - for both *primitive* and *non-primitive* data types (e.g. strings, integers, lists, dictionaries, URLs, IP addresses, ...)\n  - [19 blueprints](datalidator/blueprints/impl) + [5 *special blueprints*](datalidator/blueprints/specialimpl)\n  - [23 filters](datalidator/filters/impl)\n  - [31 validators](datalidator/validators/impl)\n\n\n## How to use this library?\n### Installation\nDatalidator can be installed from [PyPI](https://pypi.org/project/datalidator/) using `pip`:\n```shell\npython3 -m pip install --upgrade datalidator\n```\n\n### Tutorial\nThis library ships with a **tutorial** series:\n1. [The Basics](tutorial/001_The-Basics.md)\n2. [Using Blueprints](tutorial/002_Using-Blueprints.md)\n3. [Using Filters](tutorial/003_Using-Filters.md)\n4. [Using Validators](tutorial/004_Using-Validators.md)\n5. [Lists and Dictionaries](tutorial/005_Lists-and-Dictionaries.md)\n6. [Object Blueprint](tutorial/006_Object-Blueprint.md)\n7. [Special Blueprints](tutorial/007_Special-Blueprints.md)\n8. [Tags](tutorial/008_Tags.md)\n9. [Extending the Functionality](tutorial/009_Extending-the-Functionality.md)\n10. [Real Use Case Examples](tutorial/010_Real-Use-Case-Examples.md)\n\n### Example\nThe following example shows how data from a simple hypothetical registration form could be parsed by this library:\n```python\nfrom datalidator.blueprints.impl.ObjectBlueprint import ObjectBlueprint\nfrom datalidator.blueprints.impl.StringBlueprint import StringBlueprint\nfrom datalidator.blueprints.impl.IntegerBlueprint import IntegerBlueprint\nfrom datalidator.blueprints.impl.BooleanBlueprint import BooleanBlueprint\nfrom datalidator.blueprints.extras.ObjectModel import ObjectModel\nfrom datalidator.blueprints.extras.OptionalItem import OptionalItem\nfrom datalidator.filters.impl.StringStripFilter import StringStripFilter\nfrom datalidator.validators.impl.SequenceMinimumLengthValidator import SequenceMinimumLengthValidator\nfrom datalidator.validators.impl.NumberMaximumValueValidator import NumberMaximumValueValidator\nfrom datalidator.validators.impl.NumberMinimumValueValidator import NumberMinimumValueValidator\nfrom datalidator.validators.impl.StringMatchesRegexValidator import StringMatchesRegexValidator\n\nclass RegistrationFormModel(ObjectModel):\n    username = StringBlueprint(\n        filters=[StringStripFilter()],\n        validators=[StringMatchesRegexValidator(r'^[A-Za-z0-9_]{3,20}\\Z')]\n    )\n    password = StringBlueprint(\n        filters=[StringStripFilter()],\n        validators=[SequenceMinimumLengthValidator(8)]\n    )\n    age = IntegerBlueprint(\n        validators=[NumberMinimumValueValidator(13), NumberMaximumValueValidator(100)],\n    )\n    tos_accepted = OptionalItem(wrapped_blueprint=BooleanBlueprint(), default_value=False)  # \"tos\" = Terms of Service\n\n\nblueprint = ObjectBlueprint(object_model=RegistrationFormModel)\n\nblueprint.use({\"username\": \"Joe_123\", \"password\": \"MyPassword\", \"age\": \"18\\n\", \"tos_accepted\": True})\n# == RegistrationFormModel(username='Joe_123', password='MyPassword', age=18, tos_accepted=True)\n```\n\n**For simpler examples with explanation, see the [tutorial](tutorial).**\n\n\n## Security\nDespite the non-negligible efforts made to reduce the risk of bugs being present in this library (the adherence to the \nrules of defensive programming, extensive automated test coverage), it can never be guaranteed that there are no bugs \nor even security vulnerabilities present. *We all know what Murphy's law states, don't we?*\n\n**As stated in the [license](LICENSE), this library comes with ABSOLUTELY NO WARRANTY:**\n```text\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n\n## Licensing\nThis project is licensed under the **3-clause BSD license** – see the [LICENSE](LICENSE) file.\n\nProgrammed by **[Vít Labuda](https://vitlabuda.cz/)**.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vitlabuda/datalidator",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "datalidator",
    "package_url": "https://pypi.org/project/datalidator/",
    "platform": "",
    "project_url": "https://pypi.org/project/datalidator/",
    "project_urls": {
      "Bug Tracker": "https://github.com/vitlabuda/datalidator/issues",
      "Homepage": "https://github.com/vitlabuda/datalidator"
    },
    "release_url": "https://pypi.org/project/datalidator/1.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "A flexible, object-oriented Python input data parsing & validation library",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13020732,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bd16c099264232992d132fa9f0063bfefbedb5a85fe6b57909838aec10c1028",
          "md5": "8411d15fd3991e2c07d1c819a967bb32",
          "sha256": "c1360a699a63c65a52bc8fa9c782f7541d23b3c4a015086093e6bf7e619f24ec"
        },
        "downloads": -1,
        "filename": "datalidator-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8411d15fd3991e2c07d1c819a967bb32",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 55471,
        "upload_time": "2022-02-26T14:49:11",
        "upload_time_iso_8601": "2022-02-26T14:49:11.460818Z",
        "url": "https://files.pythonhosted.org/packages/1b/d1/6c099264232992d132fa9f0063bfefbedb5a85fe6b57909838aec10c1028/datalidator-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "184bc7c2e353887de203055e1c262b9cef91e5bb222039364f3243532957d5c3",
          "md5": "e63b02ea6817751893c0106673d7bf4b",
          "sha256": "439f2ecf2f8c8173fa128890b996ff94a3eb86bc7adb58c05463aa623b783752"
        },
        "downloads": -1,
        "filename": "datalidator-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e63b02ea6817751893c0106673d7bf4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 55651,
        "upload_time": "2022-02-26T15:06:32",
        "upload_time_iso_8601": "2022-02-26T15:06:32.392974Z",
        "url": "https://files.pythonhosted.org/packages/18/4b/c7c2e353887de203055e1c262b9cef91e5bb222039364f3243532957d5c3/datalidator-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48ca31d8c2a2ed837029e8a62289704a88dc5930b90e31b5ef835e6a97e784b5",
          "md5": "63a224caf603a6fa647010e07af504c4",
          "sha256": "52760b9d41e8988734a104c0dc213cef7be3ccf6701caf8e43d5aa36aa2263c1"
        },
        "downloads": -1,
        "filename": "datalidator-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "63a224caf603a6fa647010e07af504c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 55653,
        "upload_time": "2022-02-26T22:01:45",
        "upload_time_iso_8601": "2022-02-26T22:01:45.336044Z",
        "url": "https://files.pythonhosted.org/packages/48/ca/31d8c2a2ed837029e8a62289704a88dc5930b90e31b5ef835e6a97e784b5/datalidator-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "48ca31d8c2a2ed837029e8a62289704a88dc5930b90e31b5ef835e6a97e784b5",
        "md5": "63a224caf603a6fa647010e07af504c4",
        "sha256": "52760b9d41e8988734a104c0dc213cef7be3ccf6701caf8e43d5aa36aa2263c1"
      },
      "downloads": -1,
      "filename": "datalidator-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "63a224caf603a6fa647010e07af504c4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 55653,
      "upload_time": "2022-02-26T22:01:45",
      "upload_time_iso_8601": "2022-02-26T22:01:45.336044Z",
      "url": "https://files.pythonhosted.org/packages/48/ca/31d8c2a2ed837029e8a62289704a88dc5930b90e31b5ef835e6a97e784b5/datalidator-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}