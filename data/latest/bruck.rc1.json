{
  "info": {
    "author": "Alan Han",
    "author_email": "hanyx2006@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Bruck\n\nWrite brainfuck with ONLY square brackets.\n\n```bruck\n[]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][][[]][]][][\n```\n\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/bruck) [![PyPI](https://img.shields.io/pypi/v/bruck?color=blueviolet)](https://pypi.org/project/bruck/) ![GitHub](https://img.shields.io/github/license/GLanguage/bruck)\n\n## Installation\n\n```shell\n$ pip install bruck\n```\n\n## Usage\n\n```shell\n$ bruck [-veh] PROGRAM\n```\n\nYou can interpret a bruck program by\n\n```shell\n$ bruck <filename>.bruck\n```\n\nOr run a program in command line by `-e` option. For example:\n\n```shell\n$ bruck -e '][][]['\n```\n\n`-v` option shows version, and `-h` option shows help.\n\n## Bruck Syntax\n\nThe syntax of bruck is basically the same as brainfuck, but was inspired by codons in DNA or RNA molecules. We use 3-character strings consisting of `[` and `]` to represent 8 different commands in brainfuck.\n\n| Bruck | Equivalent Brainfuck | Description |\n| --- | --- | --- |\n| `[]]` | `+` | Increment the memory cell at the pointer |\n| `[[]` | `-` | Decrement the memory cell at the pointer |\n| `]][` | `>` | Move the pointer to the right |\n| `][[` | `<` | Move the pointer to the left |\n| `[][` | `.` | Output the character signified by the cell at the pointer | \n| `][]` | `,` | Input a character and store it in the cell at the pointer |\n| `[[[` | `[` | Jump past the matching `]]]` if the cell at the pointer is 0 |\n| `]]]` | `]` | Jump back to the matching `[[[` if the cell at the pointer is nonzero\n\nAll characters other than `[` and `]` are ignored, including spaces and newlines. Having just started to use bruck, you may find it helpful to divide the program into commands:\n\n```bruck\n][] []] [][\n```\n\nAnd when you get familiar with the language, you can write something cool like this:\n\n```bruck\n[]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][]][][[][[]][]][]][][[]][][[[][[][[][[][][[]][]][]][][\n```\n\nSince the length of a bruck command is 3, the length of a bruck program (with only `[` and `]` counted) must be divisible by 3, otherwise the interpreter will raise an error.\n\n## Error Messages\n\nIf an error occurs when executing a bruck program, the bruck interpreter will raise a `BruckError` with error messages showing where and why the error has occured.\n\nIf you find the error messages generated by the interpreter a little difficult to understand, don't worry. It is a *feature*. Bruck is a so-called *esoteric programming language*, and therefore the bruck interpreter is also designed to be esoteric. You will be used to that soon.\n\n## API\n\nA Python API is provided to interpret bruck programs. After installation, import the `interpreter` module by\n\n```python\nfrom bruck.interpreter import *\n```\n\nThe `interpreter` module includes a class `BruckInterpreter` to interpret and execute bruck programs. Here is an example:\n\n```python\nfrom bruck.interpreter import *\n\nbruckInterpreter = BruckInterpreter('<bruck_program_string>') # Initialize\n\nbruckInterpreter.exec() # Execute the program\n```\n\nFor more help on the API, try `help(BruckInterpreter)` after importing the module.\n\n## Contribution\n\nIf you find any bugs or have suggestions for new features, please raise an issue for further discussion. All contributions are welcomed.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GLanguage/bruck",
    "keywords": "bruck,esolang,esoteric,brainfuck",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bruck",
    "package_url": "https://pypi.org/project/bruck/",
    "platform": null,
    "project_url": "https://pypi.org/project/bruck/",
    "project_urls": {
      "Homepage": "https://github.com/GLanguage/bruck"
    },
    "release_url": "https://pypi.org/project/bruck/0.1.0/",
    "requires_dist": [
      "click"
    ],
    "requires_python": ">=3.6",
    "summary": "Write brainfuck with ONLY square brackets.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13687521,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "748d3a4efc988b70e81128012df6526643baa35b657bc481a527b6c4157f36da",
          "md5": "67b93ee6661ee7e129af9de6ad196da9",
          "sha256": "2182e5e1e542d3a23e69bd10e0f2c912f9e2ba20b0d97d170e9735a7ac246e7c"
        },
        "downloads": -1,
        "filename": "bruck-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "67b93ee6661ee7e129af9de6ad196da9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5582,
        "upload_time": "2022-05-02T12:26:27",
        "upload_time_iso_8601": "2022-05-02T12:26:27.521804Z",
        "url": "https://files.pythonhosted.org/packages/74/8d/3a4efc988b70e81128012df6526643baa35b657bc481a527b6c4157f36da/bruck-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9cd2344876ae33b32d40fefe2522bafd2b4cbd732dfbe30d219d430b48de982",
          "md5": "a4cd57f053e1e27a22d5ccd021821e7a",
          "sha256": "3d0a65090a2509b9f08dd61f2b552d2a6dfd42e8d8dd3846fe8bf58b4dd42c41"
        },
        "downloads": -1,
        "filename": "bruck-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a4cd57f053e1e27a22d5ccd021821e7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4994,
        "upload_time": "2022-05-02T12:26:29",
        "upload_time_iso_8601": "2022-05-02T12:26:29.162553Z",
        "url": "https://files.pythonhosted.org/packages/b9/cd/2344876ae33b32d40fefe2522bafd2b4cbd732dfbe30d219d430b48de982/bruck-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "748d3a4efc988b70e81128012df6526643baa35b657bc481a527b6c4157f36da",
        "md5": "67b93ee6661ee7e129af9de6ad196da9",
        "sha256": "2182e5e1e542d3a23e69bd10e0f2c912f9e2ba20b0d97d170e9735a7ac246e7c"
      },
      "downloads": -1,
      "filename": "bruck-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "67b93ee6661ee7e129af9de6ad196da9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5582,
      "upload_time": "2022-05-02T12:26:27",
      "upload_time_iso_8601": "2022-05-02T12:26:27.521804Z",
      "url": "https://files.pythonhosted.org/packages/74/8d/3a4efc988b70e81128012df6526643baa35b657bc481a527b6c4157f36da/bruck-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9cd2344876ae33b32d40fefe2522bafd2b4cbd732dfbe30d219d430b48de982",
        "md5": "a4cd57f053e1e27a22d5ccd021821e7a",
        "sha256": "3d0a65090a2509b9f08dd61f2b552d2a6dfd42e8d8dd3846fe8bf58b4dd42c41"
      },
      "downloads": -1,
      "filename": "bruck-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a4cd57f053e1e27a22d5ccd021821e7a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4994,
      "upload_time": "2022-05-02T12:26:29",
      "upload_time_iso_8601": "2022-05-02T12:26:29.162553Z",
      "url": "https://files.pythonhosted.org/packages/b9/cd/2344876ae33b32d40fefe2522bafd2b4cbd732dfbe30d219d430b48de982/bruck-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}