{
  "info": {
    "author": "",
    "author_email": "Floris272 <florispuijk@outlook.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Blue Current Api\r\n\r\n[![Documentation Status](https://readthedocs.com/projects/blue-current-homeassistantapi/badge/?version=latest&token=00ce4a850aedc0993b7075a8b2d5f8de98251adcdb4eada1f1fb3c02fee80039)](https://blue-current-homeassistantapi.readthedocs-hosted.com/en/latest/?badge=latest)\r\n\r\nPython wrapper for the blue current api\r\n\r\nThe library is an asyncio-driven library that interfaces with the Websocket API provided by Blue Current. This was made for the Blue Current Home Assistant integration.\r\n\r\n## Usage\r\n\r\n### Requirements\r\n\r\n- Python 3.9 or newer\r\n- websockets\r\n- asyncio\r\n\r\n### Installation\r\n\r\n```python\r\npip install bluecurrent-api\r\n```\r\n\r\n### Api token\r\n\r\nUsing this library requires a Blue Current api token. You can generate one in the Blue Current driver portal.\r\n\r\n## Example\r\n\r\n```python\r\nfrom bluecurrent_api import Client\r\nimport asyncio\r\n\r\n\r\nasync def main():\r\n    api_token = 'api_token'\r\n    client = Client()\r\n\r\n    # data receiver\r\n    def on_data(data):\r\n        print('received: ', data)\r\n\r\n    # connect to the websocket\r\n    await client.connect(api_token)\r\n\r\n    # example requests\r\n    async def requests():\r\n        await client.get_charge_points()\r\n        await client.wait_for_response()\r\n        await client.disconnect()\r\n\r\n    # start the loop and send requests\r\n    await asyncio.gather(\r\n        client.start_loop(on_data),\r\n        requests()\r\n    )\r\n\r\nasyncio.run(main())\r\n```\r\n\r\n## Implemented methods\r\n\r\n---\r\n\r\n<b>The methods validate_token, get_account and get_charge_cards are stand-alone and to be used <u>before</u> connecting to the websocket with connect().</b>\r\n\r\n<br>\r\n\r\n#### await validate_token(api_token) -> bool\r\n\r\n- Validates the given token.\r\n\r\n#### await get_account() -> bool\r\n\r\n- Returns the account's email.\r\n\r\n#### await get_charge_cards(auth_token) -> list\r\n\r\n- Returns the users charge cards.\r\n\r\n---\r\n\r\n#### await connect(auth_token)\r\n\r\n- Connects to the websocket.\r\n\r\n#### await start_loop(receiver)\r\n\r\n- Starts the loop and routes the incoming messages to the given receiver method\r\n\r\n#### await wait_for_response()\r\n\r\n- Waits until the next message is received.\r\n\r\n#### get_next_reset_delta()\r\n\r\n- Returns the timedelta to the next request limit reset (00:00 Europe/Amsterdam).\r\n\r\n#### await disconnect()\r\n\r\n- Stops the connection.\r\n\r\n<br>\r\n\r\n### Data\r\n\r\n---\r\n\r\n#### await get_charge_points()\r\n\r\n- Gets the chargepoints\r\n\r\n#### await get_status(evse_id)\r\n\r\n- Gets the status from a chargepoint.\r\n\r\n#### await get_settings(evse_id)\r\n\r\n- Gets the setting states from a chargepoint.\r\n\r\n#### await get_grid_status(evse_id)\r\n\r\n- Gets the grid status from a chargepoint.\r\n\r\n<br>\r\n\r\n### Settings\r\n\r\n---\r\n\r\n#### await set_public_charging(evse_id, value)\r\n\r\n- Sets public charging to True or False.\r\n\r\n#### await set_plug_and_charge(evse_id, value)\r\n\r\n- Sets plug and charge to True or False.\r\n\r\n#### await set_operative(evse_id, value)\r\n\r\n- Sets operative to True or False.\r\n\r\n<br>\r\n\r\n### Actions\r\n\r\n---\r\n\r\n#### await reset(evse_id)\r\n\r\n- Resets the chargepoint.\r\n\r\n#### await reboot(evse_id)\r\n\r\n- Reboots the chargepoint.\r\n\r\n#### await start_session(evse_id card_uid)\r\n\r\n- Starts a charge session.\r\n\r\n#### await stop_session(evse_id)\r\n\r\n- Stops a charge session.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bluecurrent-api",
    "package_url": "https://pypi.org/project/bluecurrent-api/",
    "platform": null,
    "project_url": "https://pypi.org/project/bluecurrent-api/",
    "project_urls": {
      "Bug Tracker": "https://github.com/bluecurrent/HomeAssistantAPI/issues",
      "Homepage": "https://github.com/bluecurrent/HomeAssistantAPI"
    },
    "release_url": "https://pypi.org/project/bluecurrent-api/1.0.2/",
    "requires_dist": [
      "websockets (>=10.0)",
      "asyncio (>=3.4.3)",
      "pytz (>=2021.3)"
    ],
    "requires_python": ">=3.8",
    "summary": "A wrapper for the Blue Current websocket api",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16683559,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffa02a6deac43283178e7944d3ef878fb078bc87e85a02b56c5e12df689ac1cf",
          "md5": "bf34ade6ee132dccf2d610fc52e84895",
          "sha256": "a4ce8f340daceef3fe7a2b273e3d36de8ac70772e9d7a12f12a74477f09e7004"
        },
        "downloads": -1,
        "filename": "bluecurrent_api-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf34ade6ee132dccf2d610fc52e84895",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9814,
        "upload_time": "2022-11-18T13:39:52",
        "upload_time_iso_8601": "2022-11-18T13:39:52.192465Z",
        "url": "https://files.pythonhosted.org/packages/ff/a0/2a6deac43283178e7944d3ef878fb078bc87e85a02b56c5e12df689ac1cf/bluecurrent_api-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdd6773ca93fb56ecbc2eadf75c174440944390308a779cebcd138cc6c7a936e",
          "md5": "37d0ddb3726207d5dd08ae18d1e23a50",
          "sha256": "47453f325fdbc798d70c0668f1979548ca8472d6dc0d14a5cef97fcd278bc814"
        },
        "downloads": -1,
        "filename": "bluecurrent-api-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "37d0ddb3726207d5dd08ae18d1e23a50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9690,
        "upload_time": "2022-11-18T13:39:54",
        "upload_time_iso_8601": "2022-11-18T13:39:54.083401Z",
        "url": "https://files.pythonhosted.org/packages/bd/d6/773ca93fb56ecbc2eadf75c174440944390308a779cebcd138cc6c7a936e/bluecurrent-api-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fcdf02dab85d2e72802987be2dd1be17cfdfdbbede0c321b1461ba0bbc1eb21",
          "md5": "24a011bfdbf78f4cf0966810fe0660e4",
          "sha256": "ce19479f71b716d301813337b7431cb88132f6ed9be97c632b64622769a2cc6a"
        },
        "downloads": -1,
        "filename": "bluecurrent_api-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24a011bfdbf78f4cf0966810fe0660e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9199,
        "upload_time": "2022-11-18T13:57:12",
        "upload_time_iso_8601": "2022-11-18T13:57:12.141173Z",
        "url": "https://files.pythonhosted.org/packages/9f/cd/f02dab85d2e72802987be2dd1be17cfdfdbbede0c321b1461ba0bbc1eb21/bluecurrent_api-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "850773872097ddd7bf1b8511ce37c9bbdc0b89a5a7b24b98a7e7b90dbd442dda",
          "md5": "045456a4964e3d1732ebbff096ad3762",
          "sha256": "83d5d604ea674a16525cccfbd90cd2c1b321fc732b36599650f6915f5c6af644"
        },
        "downloads": -1,
        "filename": "bluecurrent-api-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "045456a4964e3d1732ebbff096ad3762",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 8977,
        "upload_time": "2022-11-18T13:57:14",
        "upload_time_iso_8601": "2022-11-18T13:57:14.669475Z",
        "url": "https://files.pythonhosted.org/packages/85/07/73872097ddd7bf1b8511ce37c9bbdc0b89a5a7b24b98a7e7b90dbd442dda/bluecurrent-api-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f30a35b66ee6bb2c119a3d406ecde653a4cb16ef246166e2ff086d5a00d99b27",
          "md5": "842b605cd5e11ddf6d189a84bca43ac6",
          "sha256": "522cf5c8ac5c1bd0ba5f35a2f8261dd92ba6455c4c24d1bbe813d0897de883db"
        },
        "downloads": -1,
        "filename": "bluecurrent_api-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "842b605cd5e11ddf6d189a84bca43ac6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9328,
        "upload_time": "2023-02-03T15:28:49",
        "upload_time_iso_8601": "2023-02-03T15:28:49.178158Z",
        "url": "https://files.pythonhosted.org/packages/f3/0a/35b66ee6bb2c119a3d406ecde653a4cb16ef246166e2ff086d5a00d99b27/bluecurrent_api-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "867fd1f5808ba40f04e1056ad881934620d53d8fbf5fd2ae6ece764ae80ba045",
          "md5": "c0e9055cab3c1bb450e9e2d9788f3050",
          "sha256": "68270077b2bb2005672bef973625cf02bd18be48940a0622732e6a5c1e42fdcc"
        },
        "downloads": -1,
        "filename": "bluecurrent-api-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c0e9055cab3c1bb450e9e2d9788f3050",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9098,
        "upload_time": "2023-02-03T15:28:51",
        "upload_time_iso_8601": "2023-02-03T15:28:51.239368Z",
        "url": "https://files.pythonhosted.org/packages/86/7f/d1f5808ba40f04e1056ad881934620d53d8fbf5fd2ae6ece764ae80ba045/bluecurrent-api-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f30a35b66ee6bb2c119a3d406ecde653a4cb16ef246166e2ff086d5a00d99b27",
        "md5": "842b605cd5e11ddf6d189a84bca43ac6",
        "sha256": "522cf5c8ac5c1bd0ba5f35a2f8261dd92ba6455c4c24d1bbe813d0897de883db"
      },
      "downloads": -1,
      "filename": "bluecurrent_api-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "842b605cd5e11ddf6d189a84bca43ac6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 9328,
      "upload_time": "2023-02-03T15:28:49",
      "upload_time_iso_8601": "2023-02-03T15:28:49.178158Z",
      "url": "https://files.pythonhosted.org/packages/f3/0a/35b66ee6bb2c119a3d406ecde653a4cb16ef246166e2ff086d5a00d99b27/bluecurrent_api-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "867fd1f5808ba40f04e1056ad881934620d53d8fbf5fd2ae6ece764ae80ba045",
        "md5": "c0e9055cab3c1bb450e9e2d9788f3050",
        "sha256": "68270077b2bb2005672bef973625cf02bd18be48940a0622732e6a5c1e42fdcc"
      },
      "downloads": -1,
      "filename": "bluecurrent-api-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c0e9055cab3c1bb450e9e2d9788f3050",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 9098,
      "upload_time": "2023-02-03T15:28:51",
      "upload_time_iso_8601": "2023-02-03T15:28:51.239368Z",
      "url": "https://files.pythonhosted.org/packages/86/7f/d1f5808ba40f04e1056ad881934620d53d8fbf5fd2ae6ece764ae80ba045/bluecurrent-api-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}