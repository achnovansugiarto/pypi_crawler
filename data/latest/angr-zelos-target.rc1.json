{
  "info": {
    "author": "Zeropoint Dynamics",
    "author_email": "zelos@zeropointdynamics.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "![PyPI](https://img.shields.io/pypi/v/zelos_angr)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/zelos_angr)\n[![License: AGPL v3](https://img.shields.io/badge/License-AGPL%20v3-blue.svg)](https://www.gnu.org/licenses/agpl-3.0)\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n\n# Zelos Concrete Execution Engine for angr\nProvides support for using [*zelos*](https://github.com/zeropointdynamics/zelos) (a python-based binary instrumentation and emulation platform) as a concrete execution engine in `angr` via the `symbion` interface. Symbion provides an interface that enables `angr` to get and set program state from an external execution engine. Conversely, this enables `zelos` to take advantage of the symbolic execution capabilities of `angr`.\n\n# Installation\n\nYou first need `angr` with `symbion`. Their documentation recommends installation in a separate virtual environment, as several python packages are customized, including `unicorn`. This is the boilerplate to setup angr in a new virtual environment (**). Refer to their documentation for more comprehensive instructions.\n\n```bash\n$ sudo apt-get install python3-dev libffi-dev build-essential cmake gdb-multiarch\n$ git clone https://github.com/angr/angr-targets.git\n\n$ python3 -m venv ~/.venv/angr && source ~/.venv/angr/bin/activate\n(angr) $ pip install wheel && pip install angr && pip install -e angr-targets\n```\n\n(**) As of this writing, the `pip` release of `symbion` is not working. Instead, use the development version, which already includes `angr-targets`:\n\n```bash\n$ git clone https://github.com/angr/angr-dev.git\n$ cd angr-dev && ./setup.sh -i -e angr\n$ source ~/.virtualenvs/angr/bin/activate\n```\n\nOnce you have the `angr` environment setup, install the `angr-zelos-target` package within the environment to enable `zelos` as a concrete target:\n\n```st\n(angr) $ pip install angr-zelos-target\n```\n\nInstall the [*zelos emulator*](https://github.com/zeropointdynamics/zelos) in a separate virtual environment, e.g.:\n\n```st\n(zelos) $ pip install zelos\n```\n\n# Basic Usage\n\nWrite your `angr` scripts as you usually would, but specify the `zelos` concrete target when creating the project:\n\n```py\nfrom angr_zelos_target import ZelosConcreteTarget\n\n...\n\nzelos_target = ZelosConcreteTarget()\nproject = angr.Project(\n    filepath,\n    concrete_target=zelos_target,\n    use_sim_procedures=True,\n)\n```\n\nUse the `angr.exploration_techniques.Symbion` exploration technique when you want to concretely execution in `zelos`.\n\nBefore running your `angr` script, start the `zelos` `zdbserver` on the target binary:\n\n```bash\n(zelos) $ python -m zelos.zdbserver FILENAME\n```\n\nThe `zdbserver` and `angr` scripts can run on the same system, but be sure to run them in separate python environments, as both packages use different versions of the `unicorn` CPU emulator.\n\n# Symbion Tutorial: \"Fusing Concrete and Symbolic Execution\"\n\nAs an example, we have reimplemented the [*symbion tutorial*](http://angr.io/blog/angr_symbion/) using the `zelos` concrete engine. In that tutorial, the goal is to force execution of a binary down the path that prints \"*Executing stage 2 fake malware V2*\" instead of the default message:\n\n```st\n$ ./not_packed_elf64\n[+] Parsing malware configuration\n[+] Virtual environment detected!\n```\n\nThe [*not_packed_elf64*](https://github.com/zeropointdynamics/angr-zelos-target/blob/master/src/angr_zelos_target/example/not_packed_elf64) binary is duplicated from the `angr-binaries` repository. The reimplemented tutorial [*example*](https://github.com/zeropointdynamics/angr-zelos-target/blob/master/src/angr_zelos_target/example/__main__.py) script will concretely execute up to the decision point, solve for a value that will ultimately drive excution to the desired path, write that value into zelos, then resume execution in zelos. The basic workflow is to start the binary via the `zelos.zdbserver`, then run the `angr` script that utilizes the `zdbserver`, for instance:\n\nTerminal 1 (zelos):\n```st\n(zelos) $ python -m zelos.zdbserver not_packed_elf64\n```\n\nTerminal 2 (angr):\n```st\n(angr) $ python3 -m angr_zelos_target.example\n```\n\nTerminal 2 Output:\n```st\n[0] Created angr_zelos project for 'angr_zelos_target/example/not_packed_elf64'\n[1] Got to decision point concretely.\n[2] Symbolically finding second stage @ 0x400bb6\n[3] Executing concretely until exit @ 0x65310d\n[4] DONE.\n```\n\nTerminal 1 Output:\n```st\n[main] [SYSCALL] brk ( addr=0x0 ) -> 0x900000a4\n[main] [SYSCALL] openat ( dirfd=0xffffff9c, pathname=0xb229170 (\"not_packed_elf64\"), flags=0x80000 ) -> 18\n...\n...\n[main] [SYSCALL] brk ( addr=0x90022000 ) -> 0x90022000\nBreakpoint \"bp_400af3\"\n[StdOut]: 'bytearray(b'[+]Parsing malware configuration\\n\\n[+] Executing stage 2 fake malware V2\\n\\n')'\n[main] [SYSCALL] write ( fd=0x1, buf=0x90000310 (\"[+]Parsing malware configuration [+] Executing stage 2 fake malware V2\"), count=0x3a ) -> 3a\n[main] [SYSCALL] exit_group ( status=0x0 ) -> void\n```\n\n## License\n[AGPL v3](https://www.gnu.org/licenses/agpl-3.0.en.html)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zeropointdynamics/angr_zelos_target",
    "keywords": "emulation,dynamic analysis,binary analysis,symbolic execution",
    "license": "AGPLv3",
    "maintainer": "Zeropoint Dynamics",
    "maintainer_email": "zelos@zeropointdynamics.com",
    "name": "angr-zelos-target",
    "package_url": "https://pypi.org/project/angr-zelos-target/",
    "platform": "",
    "project_url": "https://pypi.org/project/angr-zelos-target/",
    "project_urls": {
      "Bug Tracker": "https://github.com/zeropointdynamics/angr_zelos_target/issues",
      "Documentation": "https://zelos.zeropointdynamics.com/",
      "Homepage": "https://github.com/zeropointdynamics/angr_zelos_target",
      "Source Code": "https://github.com/zeropointdynamics/angr_zelos_target"
    },
    "release_url": "https://pypi.org/project/angr-zelos-target/0.0.1/",
    "requires_dist": [
      "wheel"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Zelos target for angr / symbion concrete execution.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7339891,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0decb3c5d519be7650cb6d172dd65b62b0740b4967fb725ac6066021e732b296",
          "md5": "78188c999acb5508a211588610628586",
          "sha256": "f8367523fcee797338c50bbc8914ad118ac405faeaaee30d766122d1cf2df5c4"
        },
        "downloads": -1,
        "filename": "angr_zelos_target-0.0.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "78188c999acb5508a211588610628586",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 24852,
        "upload_time": "2020-05-27T22:26:46",
        "upload_time_iso_8601": "2020-05-27T22:26:46.296595Z",
        "url": "https://files.pythonhosted.org/packages/0d/ec/b3c5d519be7650cb6d172dd65b62b0740b4967fb725ac6066021e732b296/angr_zelos_target-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0decb3c5d519be7650cb6d172dd65b62b0740b4967fb725ac6066021e732b296",
        "md5": "78188c999acb5508a211588610628586",
        "sha256": "f8367523fcee797338c50bbc8914ad118ac405faeaaee30d766122d1cf2df5c4"
      },
      "downloads": -1,
      "filename": "angr_zelos_target-0.0.1-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "78188c999acb5508a211588610628586",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6.0",
      "size": 24852,
      "upload_time": "2020-05-27T22:26:46",
      "upload_time_iso_8601": "2020-05-27T22:26:46.296595Z",
      "url": "https://files.pythonhosted.org/packages/0d/ec/b3c5d519be7650cb6d172dd65b62b0740b4967fb725ac6066021e732b296/angr_zelos_target-0.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}