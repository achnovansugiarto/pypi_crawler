{
  "info": {
    "author": "Shu Wang",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Security",
      "Topic :: Software Development",
      "Topic :: Text Processing"
    ],
    "description": "# GPA\n\n![badge1](https://img.shields.io/pypi/v/GPA) ![badge2](https://img.shields.io/pypi/l/GPA) ![badge3](https://img.shields.io/pypi/pyversions/GPA) ![badge4](https://img.shields.io/pypi/wheel/GPA)\n<!-- (https://img.shields.io/pypi/dm/GPA) -->\n\nGraph Program Analysis Library in Python. \n\n`GPA` package aims to provide better functions for researchers to analyze the code graphs.\n\n### Installation\n\nFirst, install the pre-required dependencies.\n\n```bash\npip install -r requirements.tx\n```\n\nThen install our graph program analysis package.\n\n```bash\npip install GPA\n```\n\n### Usage\n\nFor example, the following `BinarySearch` code can be represented as a graph using tools like `joern`, then we can analyze the code graph via `GPA`.\n\n```C++\nint BinarySearch(int x, int a[], int length) {\n    int L = 0;\n    int R = length - 1;\n    do {\n        int m = (L + R) / 2;\n        if (x == a[n]){\n            return m;\n        } else if (x > a[m]){\n            L = m + 1;\n        } else {\n            R = m - 1;\n        }\n    } while (L <= R);\n    return -1;\n}\n```\n\n**STEP 1: Generate a code graph**\n\n```python\nfrom GPA.graphs import CodePropGraph\ng = CodePropGraph(name=\"example\")\n```\n\n**STEP 2: Add nodes to the graph**\n\n```python\ng.addnodes(\"N1\", \"int L=0; int R=length-1;\")\ng.addnodes(\"N2\", \"int m=(L+R)/2;\")\ng.addnodes(\"N3\", \"if(x==a[n])\")\ng.addnodes(\"N4\", \"return m;\")\ng.addnodes(\"N5\", \"if (x<a[m])\")\ng.addnodes(\"N6\", \"L=m+1;\")\ng.addnodes(\"N7\", \"R=m-1;\")\ng.addnodes(\"N8\", \"while(L<=R)\")\ng.addnodes(\"N9\", \"return -1;\")\nprint(g.nodes[0], g.num_nodes)\n```\n\nYou will see the graph contains 9 nodes:\n\n```python\n<GPA.modules.basic.CodeNode object at 0x7f7df8583dc0> 9\n```\n\n**STEP 3: Add edges to the graph**\n\n```python\ng.addedges(\"N1\", \"N2\")\ng.addedges(\"N2\", \"N3\")\ng.addedges(\"N3\", \"N4\", edge_attr=\"True\")\ng.addedges(\"N3\", \"N5\", edge_attr=\"False\")\ng.addedges(\"N5\", \"N6\", edge_attr=\"True\")\ng.addedges(\"N5\", \"N7\", edge_attr=\"False\")\ng.addedges(\"N6\", \"N8\")\ng.addedges(\"N7\", \"N8\")\ng.addedges(\"N8\", \"N2\", edge_attr=\"True\")\ng.addedges(\"N8\", \"N9\", edge_attr=\"False\")\nprint(g.edges[0], g.num_edges)\n```\n\nYou will see the graph contains 10 edges.\n\n```python\n<GPA.modules.basic.CodeEdge object at 0x7f7df857d5e0> 10\n```\n\n**Example 1: control flow graph walk**\n\n* set the initial node. \n\n```python\nstart_node = \"N1\"\n```\n\n* start walk through the graph. Note that all the possible nodes will be marked.\n\n```python\nstart_node = g.nextstep(start_node, direction='forward')\ndot = g.draw(g.nodes2mask(start_node))\ndisplay(dot)\n```\n\nThen you can see the next node(s). \n\nKeep running the above code in [tests/test_cpg.ipynb](https://github.com/shuwang127/libgpa/blob/main/tests/test_cpg.ipynb) to see the execution paths.\n\n![Results-of-Graph-Walk](imgs/graph_walk.svg)\n\n**Example 2: code slicing**\n\ncode slicing is a way to analyze the local block of specific statements.\n\nIn this example, we show the 2-hop neighbors of control flow relationship with statement `if (x < a[m])`.\n\n```python\nslice_mask = [1 if 4 == idx else 0 for idx in range(g.num_nodes)]\nmask = g.slicing(slice_mask, neighbor=2, direction='bidirect')\ndot = g.draw(mask)\ndisplay(dot)\n```\n\nWe can see all the relevant statement are marked. \n\nWe can choose to use `forward`, `backward`, or `bidirect` slicing methods.\n\n![Results-of-Code-Slicing](imgs/code_slicing.svg)\n\n**License**\n\nThis package is under GNU General Public License v3 (GPLv3).\n\n**Notes:**\n\nIf you find any issues on the package or have any ideas to share, please contact us.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shuwang127/libgpa",
    "keywords": "gpa graph program analysis",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "GPA",
    "package_url": "https://pypi.org/project/GPA/",
    "platform": "any",
    "project_url": "https://pypi.org/project/GPA/",
    "project_urls": {
      "Homepage": "https://github.com/shuwang127/libgpa"
    },
    "release_url": "https://pypi.org/project/GPA/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python Library for Graph Program Analysis",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17231368,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "358504d952a66db22a90059de109102c2dc82ba8689b1eb51c5cbf297474f243",
          "md5": "33b72444b7bd53e6beb9ed9a778c8cf5",
          "sha256": "0475618f8eaa3d1c89d1ab2ea7642674b6681761f7ee46a202e17b21c5e967e7"
        },
        "downloads": -1,
        "filename": "GPA-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33b72444b7bd53e6beb9ed9a778c8cf5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 14343,
        "upload_time": "2023-03-09T04:20:33",
        "upload_time_iso_8601": "2023-03-09T04:20:33.870266Z",
        "url": "https://files.pythonhosted.org/packages/35/85/04d952a66db22a90059de109102c2dc82ba8689b1eb51c5cbf297474f243/GPA-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef42ff94be087d036083c395568c359a5f000fff2e136096f53d8220bf8ff934",
          "md5": "0387072fd7d939bb5df27145aff550b5",
          "sha256": "d8ccc4040700e90dcc1f858eca600390e0daf16af8f76ca1ff53086303f3312b"
        },
        "downloads": -1,
        "filename": "GPA-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0387072fd7d939bb5df27145aff550b5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 14342,
        "upload_time": "2023-03-09T04:28:01",
        "upload_time_iso_8601": "2023-03-09T04:28:01.543084Z",
        "url": "https://files.pythonhosted.org/packages/ef/42/ff94be087d036083c395568c359a5f000fff2e136096f53d8220bf8ff934/GPA-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4242b0df29d4e03e389c6f62c993bde9b34e1e2f9ba8fac39ce6f51f2f01466",
          "md5": "bbfe262f8364c27ae71d841009f99534",
          "sha256": "50f2ebb76cc2b0c3f9ce12ade70d553adbfe06aa9444a7a6325d3bb516fd0a47"
        },
        "downloads": -1,
        "filename": "GPA-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbfe262f8364c27ae71d841009f99534",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 17136,
        "upload_time": "2023-03-10T00:46:04",
        "upload_time_iso_8601": "2023-03-10T00:46:04.790171Z",
        "url": "https://files.pythonhosted.org/packages/d4/24/2b0df29d4e03e389c6f62c993bde9b34e1e2f9ba8fac39ce6f51f2f01466/GPA-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d4242b0df29d4e03e389c6f62c993bde9b34e1e2f9ba8fac39ce6f51f2f01466",
        "md5": "bbfe262f8364c27ae71d841009f99534",
        "sha256": "50f2ebb76cc2b0c3f9ce12ade70d553adbfe06aa9444a7a6325d3bb516fd0a47"
      },
      "downloads": -1,
      "filename": "GPA-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bbfe262f8364c27ae71d841009f99534",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 17136,
      "upload_time": "2023-03-10T00:46:04",
      "upload_time_iso_8601": "2023-03-10T00:46:04.790171Z",
      "url": "https://files.pythonhosted.org/packages/d4/24/2b0df29d4e03e389c6f62c993bde9b34e1e2f9ba8fac39ce6f51f2f01466/GPA-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}