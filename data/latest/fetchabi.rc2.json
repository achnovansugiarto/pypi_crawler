{
  "info": {
    "author": "Koray",
    "author_email": "korre.remix@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# fetch abi\r\n\r\nA quick python script used to fetch an ethereum smart contracts ABI, if it is available on etherscan.\r\n\r\n# How to use\r\n\r\nSimply import the fetch-abi function and use the contract address as an argument. Target smart contract must be verified thus have its ABI available on etherscan.\r\n\r\n    from fetchabi import *\r\n    abi = fetch_abi(\"0xe11c90922BB5d6fe661B44039DA64c04b5B153E9\")\r\n    print(abi)\r\n\r\nGives\r\n\r\n    {\r\n        \"abi\": [\r\n            {\r\n                \"inputs\": [],\r\n                \"stateMutability\": \"nonpayable\",\r\n                \"type\": \"constructor\"\r\n            },\r\n            {\r\n                \"stateMutability\": \"payable\",\r\n                \"type\": \"fallback\"\r\n            },\r\n            {\r\n                \"inputs\": [],\r\n                \"name\": \"implementation\",\r\n                \"outputs\": [\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"address\"\r\n                    }\r\n                ],\r\n                \"stateMutability\": \"view\",\r\n                \"type\": \"function\"\r\n            },\r\n            {\r\n                \"stateMutability\": \"payable\",\r\n                \"type\": \"receive\"\r\n            }\r\n        ]\r\n    }\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/kkayam/fetchabi/archive/refs/tags/v_01.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kkayam/fetchabi",
    "keywords": "Ethereum,smart,contract,abi,fetch",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fetchabi",
    "package_url": "https://pypi.org/project/fetchabi/",
    "platform": null,
    "project_url": "https://pypi.org/project/fetchabi/",
    "project_urls": {
      "Download": "https://github.com/kkayam/fetchabi/archive/refs/tags/v_01.tar.gz",
      "Homepage": "https://github.com/kkayam/fetchabi"
    },
    "release_url": "https://pypi.org/project/fetchabi/0.12/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A quick python script used to fetch an ethereum smart contracts ABI, if it is available on etherscan.",
    "version": "0.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13304710,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d616542777d4a28a96203c60385baf41ed0fa2a652c5125b48bb0d59aece236e",
          "md5": "48924e40cc9b2a2e4e992599d8ff8133",
          "sha256": "ea37bc775bb3936e4d332dc5741ec796a528dd8f3e8c60e449cc5a1ecc29dc58"
        },
        "downloads": -1,
        "filename": "fetchabi-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "48924e40cc9b2a2e4e992599d8ff8133",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3305,
        "upload_time": "2022-03-26T19:24:57",
        "upload_time_iso_8601": "2022-03-26T19:24:57.410067Z",
        "url": "https://files.pythonhosted.org/packages/d6/16/542777d4a28a96203c60385baf41ed0fa2a652c5125b48bb0d59aece236e/fetchabi-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82495310806a8bff3b970a6eecc389e155e77a6d30756da6d6e1462a1b49648f",
          "md5": "032f263d9afcbcefb9144829f01b9b4f",
          "sha256": "368130b26d4833aa37dfa95eb6fe4ace58a595a9d1dc0da528b56937ec3d8b5c"
        },
        "downloads": -1,
        "filename": "fetchabi-0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "032f263d9afcbcefb9144829f01b9b4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3321,
        "upload_time": "2022-03-26T19:27:32",
        "upload_time_iso_8601": "2022-03-26T19:27:32.839810Z",
        "url": "https://files.pythonhosted.org/packages/82/49/5310806a8bff3b970a6eecc389e155e77a6d30756da6d6e1462a1b49648f/fetchabi-0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82495310806a8bff3b970a6eecc389e155e77a6d30756da6d6e1462a1b49648f",
        "md5": "032f263d9afcbcefb9144829f01b9b4f",
        "sha256": "368130b26d4833aa37dfa95eb6fe4ace58a595a9d1dc0da528b56937ec3d8b5c"
      },
      "downloads": -1,
      "filename": "fetchabi-0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "032f263d9afcbcefb9144829f01b9b4f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3321,
      "upload_time": "2022-03-26T19:27:32",
      "upload_time_iso_8601": "2022-03-26T19:27:32.839810Z",
      "url": "https://files.pythonhosted.org/packages/82/49/5310806a8bff3b970a6eecc389e155e77a6d30756da6d6e1462a1b49648f/fetchabi-0.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}