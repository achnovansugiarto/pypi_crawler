{
  "info": {
    "author": "Haujet Zhao",
    "author_email": "1292756898@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Multimedia :: Video"
    ],
    "description": "## About Translation\n\n**[English Mannual](./README_en.md)** \n\n**Developer**: My home language is Chinese, so the original UI is in Chinese, if you want to help translating this software, you can open the **[./QuickCut/languages/README.md](./QuickCut/languages/README.md)** to check out how you can help. \n\n\n\n#  <img src=\"QuickCut/icon.ico\" alt=\"icon.ico\" style=\"zoom: 25%;\" /> Quick Cut\n\n**Quick Cut** 是一款轻量、强大、好用的视频处理软件。它是一个轻量的工具，而不是像 Davinci Resolve、Adobe Premiere 那样专业的、复杂的庞然大物。Quick Cut 可以满足普通人一般的视频处理需求：压缩视频、转码视频、倒放视频、合并片段、根据字幕裁切片段、自动配字幕、自动剪辑……\n\nQuick Cut 开源的，你可以免费使用它，但正因为开源，因此插入恶意代码是很容易的事，所以请认准仓库发行页面的下载地址：\n\n- 仓库地址：[Gitee](https://gitee.com/haujet/QuickCut) 和 [GitHub](https://github.com/HaujetZhao/QuickCut) \n- 发行版发布地址：[Gitee releases](https://gitee.com/haujet/QuickCut/releases) 和 [Github releases](https://github.com/HaujetZhao/QuickCut/releases) \n- Win64 绿色版下载地址：https://wwe.lanzous.com/b015n2n5a 密码:f4t3\n- Python pip 安装：`pip install Quick-Cut`\n\n> Quick Cut 是用 Python 写的，所以我将 Quick Cut 也发布在了 [pypi](https://pypi.org/project/Quick-Cut/) 库，只要你装了 python，使用 `pip install Quick-Cut` 就可以安装上 Quick Cut，不过 pypi 库中的版本没有自带 FFmpeg，需要你手动安装。（都会用 pip 安装东西了，相信安装  FFmpeg 就不用教了吧）\n>\n> 我没有 Win32 、MacOS、Linux 系统的电脑，所以这些系统打包不了。但你们可以通过 pip 方法安装。\n>\n> Windows 系统用 pip 安装时，可能会遇到 pyaudio 的安装问题，可以参照 [这篇文章](https://blog.csdn.net/Sau_Hit/article/details/85938063) 解决。\n\n另外，每一个页面我都做了 [视频教程](https://www.bilibili.com/video/BV18T4y1E7FF)，基本所有的问题看了视频都能解决，在主页面的预设列表下方有 `查看预设帮助` 按钮，有关于压制方面的帮助，可以解决你关于转码清晰不清晰的问题，也瞅瞅，所以不要连官方解答都不看，就无脑提问。\n\n界面预览：\n\n<img src=\"assets/image-20200726203040942.png\" alt=\"image-20200726203040942\" style=\"zoom:50%;\" />\n\n\n\n\n\n## 📝 背景\n\n好几年前，有一次想将一个视频中的片段剪出来，才发现，市面上根本没有给普通用户用的视频处理软件。\n\n我去百度、知乎上搜【视频剪辑软件】，陆续得到了以下结果：\n\n- **Adobe Premiere**，正版一年上千元、随时【停止运行】的专业剪辑软件\n- **Vegas** 等专业软件就不再列了\n- **爱剪辑**，一个导出就带推广片头的中文剪辑软件\n- **格式工厂**，一个老牌的国产转码编辑软件\n- **小丸工具箱**，一个从 Bilibili 知道的压制软件\n- 还有大大小小的其它软件\n\n我就只想剪一小个片段啊！专业软件学不起、买不起、电脑太卡带不起！可是其它小软件、许多国产剪辑软件，都有这一些问题：\n\n- 国外软件选项太多，各种参数看不懂。\n- 多数免费软件都带水印，或者导出后画质会下降，要么导出的体积巨大，耗时长不说，还不是无损剪辑。\n\n用的最好的还是 **格式工厂** 和 **小丸工具箱** 。但他们都功能很少，还有小丸工具箱，官网的下载地址是百度网盘链接已经挂了，也不知道从第三方下载的版本有没有木马、广告……\n\n后来，从视频压制这个话题，我知道了 **FFmpeg** 这个神级开源工具，它的功能之强大、应用之广泛到惊掉了我的下巴！但它是个命令行工具，到百度上一搜，也只是些文章说怎样怎样的命令可以做什么、常用命令有什么。相关的图形界面工具，一个好用的都没有！（当然要点名表扬下 Lossless Cut，它还是很好用的，只是功能太少）。没有一个软件能让 FFmpeg 在普通大众用户手中发挥潜力，真是可惜了！\n\n于是一通操作，把 FFmpeg 的官方文档逐句做了翻译，记了笔记，然后用它来处理视频，真是畅快！免费、无广告，剪出来的视频也可以画质无损。100 兆的视频压缩到 10 兆，肉眼画质无损，那是一个巴适！\n\n但是有一个问题！每次要处理一个视频，都要手动输入命令行，非常的麻烦，有时候忘记执行某个操作是用哪个参数了，还要去翻笔记，难受！于是我就想做一个图形界面工具，想要做什么，在里面点两下，命令参数啥的都是自动生成，最后点击运行就好。于是先后做了基于 **Tasker** 的安卓端 FFmpeg GUI Tool、基于 **Quicker** 的 FFmpeg GUI Tool。\n\n但是上面两个平台都局限太多，想要好用，还是得自己做 GUI。我自己只是入门 python 的水平，只能硬着头皮花了几天在学习平台 B 站看完了 PyQt 的入门。然后边查边做，因为 PyQt 的注释很少，有时一个简单的小细节要花半天到一天处理。最后，成品还是出来了！\n\n当然，除了 **FFmpeg** 的功能外，我还做了 **语音自动转字幕** 功能。这里，我要不指名地 Diss 一些商家：\n\n- 首先是价格，贵的要 1元/分钟，便宜些的也要 4毛/分钟！转个 20 分钟的视频，就要收我 8 元，抢钱呐！啊？你们是没有语音引擎的，都是用的 API，大批量采购，你们用的 API 价格也就 1.2 元/小时 左右吧！用 API 成本几十倍的价格提供服务，这吃相，真是难看。\n- 然后是上传视频。语音转字幕，上传音频便足够了，一些商家却需要上传完整视频！2GB 的视频，通常其音频只有几十 MB 左右。你们是觉得：用户见转写了几十 MB 的视频，会觉得这么小的文件，1元/分钟的价格不值，转写了 2GB 的视频，一看这转写体积，就觉得花钱花的值？\n\n在 Quick Cut 里，我做了 **语音自动转字幕** 功能，可以使用阿里或腾讯的 Api。就以阿里的 API 为例，普通元套餐的商用价格是 2.5 元/小时，四十五几乎就是不要钱！下面的帮助里，我写下了申请阿里 API 的教程，只要填入 API，就可以使用语音转字幕了。\n\n另外，我还将另一个 **自动剪辑神器** 放进了 Quick Cut，将你的 Vlog、视频教程一键自动剪好。下面会有详细介绍。\n\n同时，推荐 Quick Cut 中一个对学习外语的同学非常有用的功能：**将字幕中的每一句话对应的视频剪成片段提取出来**。用于制作外语学习的视频素材爽得不要不要的！应该算是 **Anki** 用户的一个福利功能吧！\n\n\n\n## ✨ 特性\n\n- 简单的界面\n- FFmpeg 预设丰富\n- 可自定义预设\n- 合并视频片段\n- 逐句提取每句字幕对应的视频片段\n- 自动转字幕\n- 自动剪辑\n- ……更多待探索\n\n\n\n## 🔮 界面和功能介绍\n\n### FFmpeg 界面\n\n在这个界面，你可以使用许多 ffmpeg 预设，对音视频进行处理，比如说：\n\n我想将手机上录制的视频压制下，减小它的大小，那么只需要：先在 **输入1** 框输入待压制的视频文件（此时会自动生成输出文件名），再在右侧预设列表选择 **H264压制** 预设（此时会自动生成总命令），最后点击底部的 **运行** 按钮，就会启动压制了。\n\n**还有啊，转格式是基本操作！输出框的后缀名填什么，就会输出对应的格式！**\n\n[点击去查看 Quick Cut 压制的视频教程](https://www.bilibili.com/video/BV18T4y1E7FF?p=1)\n\n[点击去查看 Quick Cut 预设讲解视频教程](https://www.bilibili.com/video/BV18T4y1E7FF?p=2)\n\n### 分割视频界面\n\n这个界面有三个功能：根据字幕分割视频、根据大小分割视频、根据时长分割视频。\n\n根据字幕分割视频是个神级功能，尤其适合于制作外语学习的视频素材。将例如美剧的视频放进去，再把相应的字幕文件放进去，就可以将每一句字幕对应的视频片段剪出来！如果你的字幕时间轴和视频时间轴有偏差，还可以进行手动的校准。\n\n根据时间分割视频和根据大小分割视频主要是针对分享到短视频平台和微信平台的。\n\n[点击去查看 Quick Cut 分割视频的视频教程](https://www.bilibili.com/video/BV18T4y1E7FF?p=3)\n\n<img src=\"assets/image-20200725103345859.png\" alt=\"image-20200725103345859\" style=\"zoom:40%;\" />\n\n### 合并片段界面\n\n这个简单，要合并的视频拖进去，调整下顺序，点击运行，就可以将这些视频合并成一个文件。从 ig 下载的 15 秒 story 视频片段就可以轻松合并啦！\n\n[点击去查看 Quick Cut 合并片段的视频教程](https://www.bilibili.com/video/BV18T4y1E7FF?p=4)\n\n<img src=\"assets/image-20200725103322509.png\" alt=\"image-20200725103322509\" style=\"zoom:40%;\" />\n\n### 下载视频界面\n\n这个界面提供了两个命令行工具的图形界面用于下载视频，最简单的用法就是将链接复制进去，然后点击下载。支持的网站有很多比如优酷、B站、YouTube、P站（逃）……\n\n另外你还可以在里面设置cookies，就能够用你大会员身份登录的 cookie 信息下载大会员视频画质了。\n\n[点击去查看 Quick Cut 下载视频的视频教程](https://www.bilibili.com/video/BV18T4y1E7FF?p=5)\n\n<img src=\"assets/image-20200725103257140.png\" alt=\"image-20200725103257140\" style=\"zoom:50%;\" />\n\n### 自动剪辑界面\n\n自动剪辑的原理是通过给视频中有声音的片段和没有声音的片段施加不同的播放速度，达到只保留有关键信息部分的效果，非常适合做vlog和视频教程。\n\n同时你也可以选择使用阿里云或者腾讯云的语音服务，先将视频转出字幕之后，再根据字幕中的关键词对视频片段进行保留和删除操作。\n\n除了下面那个演示视频，在本教程中的所有视频，都使用了自动剪辑，然后才上传的。\n\n[点击去查看 Quick Cut 自动剪辑的效果演示视频](https://www.bilibili.com/video/BV18T4y1E7FF?p=6)\n\n[点击去查看 Quick Cut 自动剪辑的视频教程](https://www.bilibili.com/video/BV18T4y1E7FF?p=7)\n\n<img src=\"assets/image-20200725103228908.png\" alt=\"image-20200725103228908\" style=\"zoom:40%;\" />\n\n### 自动转字幕界面\n\n只要将你的视频或者音频文件拖进去，然后点击运行，就可以生成一个srt格式的字幕。\n\n语音识别方面使用了阿里云或者腾讯云的引擎，准确率有95%以上。如果想给自己的视频配字幕，就可以先用这个功能，自动转出字幕之后，再手动修改一下里边偶尔的错别字，效率非常高。\n\n语音识别引擎需要用户自己去阿里云官网申请 API 才能用（对申请过程我做了[视频教程](https://www.bilibili.com/video/BV18T4y1E7FF?p=11)）。阿里云的语音服务开通后，每个新用户有3个月的免费试用时间，在这3个月内，每天都有两小时的录音文件转换额度。试用期过后，商业版的价格是每小时音频转换2.5元，随着使用量的增加，这个价格还会更低。如果买1000小时的套餐，价格可以低到1.5元每小时。\n\n如果你对比一下目前网上能找到的视频转字幕服务，你就会知道 Quick Cut 的这个转字幕功能有多便宜：\n\n- 网易见外工作台，普通的视频转字幕，收费1元每分钟，60元每小时。英文转字幕价格翻倍。\n- 号称全网最低价的突字幕，收费0.005元每秒，3毛每分钟，18元每小时。\n- Arctime 收费30积分每分钟，也就是3毛每分钟，18元每小时。\n\n来对比一下：阿里云 2.5 元每小时，前三个月每天免费用两小时，用得越多价，格还会更低。\n\n腾讯云方面的价格还会更低，只是转换速度没有阿里云快。所以推荐使用阿里云。就算是用商业版每小时2.5元的价格也不心疼。\n\n如果你急着把最新的美剧视频下载下来，字幕组还没有出字幕，但是生肉太难啃，就可以用这个转字幕功能，将英文字幕转出来，配合着看。\n\n如果你是视频工作者、UP主、视频公司负责人，平常有大量的视频需要转换字幕，用这个就可以舍去使用其他网上平台导致的每小时几十元的成本，一个月下来成本或许能节约到上千元。。\n\n哎，说实话，要是这软件推广开来，对一些视频转字幕的服务商，真的是断人财路，杀人父母。\n\n[点击去查看 Quick Cut 自动转字幕的演示](https://www.bilibili.com/video/BV18T4y1E7FF?p=8)\n\n<img src=\"assets/image-20200725103137457.png\" alt=\"image-20200725103137457\" style=\"zoom:40%;\" />\n\n### 语音识别输入界面\n\n如果你已经添加上阿里云的语音引擎，就可以使用阿里云的一句话识别服务进行语音识别输入。在任意界面，只要长按键盘上的大写锁定键超过0.3秒钟，就可以开始说话，进行语音识别。松开按键之后，识别结果会自动打到输入框。\n\n有人推荐使用讯飞的语音识别，但是讯飞语音识别的快捷键在 F6 那个位置，离主键盘的位置非常远，手指够过去费劲；而且那里有很多大小一样的按键，这个快捷键也不好找；他还会和很多软件的快捷键冲突。\n\n而长按大写锁定键进行语音识别就非常方便，离打字的手非常近，需要的时候很轻松就能按到，也不会有快捷键冲突。\n\n阿里云语音识别的准确率非常高，这篇文章大部分都是用这个语音识别功能打的，然后修改了少量错字。\n\n[点击去查看 Quick Cut 语音识别输入的演示](https://www.bilibili.com/video/BV18T4y1E7FF?p=9)\n\n<img src=\"assets/image-20200725103107328.png\" alt=\"image-20200725103107328\" style=\"zoom:40%;\" />\n\n### 设置界面\n\n在设置界面你就可以在这里配置语音识别的引擎。\n\n勾选上 **点击关闭按钮时隐藏到托盘** ，就可以让软件常驻到后台，方便快捷的调出来剪辑视频、语音输入。Quick Cut 的资源占用量非常少，可以放心地放到后台，不影响性能。\n\n[点击去查看 Quick Cut 配置阿里云语音识别引擎的视频教程](https://www.bilibili.com/video/BV18T4y1E7FF?p=9)\n\n<img src=\"assets/image-20200725103013287.png\" alt=\"image-20200725103013287\" style=\"zoom:40%;\" />\n\n### 帮助界面\n\n在帮助界面里，有如下按钮，见名知意：\n\n<img src=\"assets/image-20200725102850979.png\" alt=\"image-20200725102850979\" style=\"zoom:40%;\" />\n\n\n\n\n\n## 🔨 开发\n\n这一节普通用户就不用看了。你们只要到发布界面下载使用已打包好的软件就行了，如果你想对源代码进行修改，就可以看下这一节。\n\n### 搭建环境\n\n你需要 pip 安装这些包：\n\n```\nsrt\nkeyboard\nnumpy\nsetuptools\naliyun-python-sdk-core\nPyQt5\naudiotsm\nscipy\ncos-python-sdk-v5\ntencentcloud-sdk-python\noss2\npyaudio\nauditok @ git+https://github.com/amsehili/auditok@v0.1.8\nrequests\n```\n\n其中，pyaudio 很难安装！编译成功有很多要求。所以 Windows 用户可以直接到 [这里](https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyaudio) 下载已经被志愿者编译好的 whl 包，用 pip 安装，注意下载对应你 python 版本的包。\n\nLinux 的用户，经 @**[shniubobo](https://github.com/shniubobo)** 的测试，Ubuntu 用户在安装 pyaudio 前只要装这个就行了：\n\n```\nsudo apt install portaudio19-dev\n```\n\n\n\n其他包可以通过[requirements.txt](requirements.txt)安装：\n\n```\npip install -r requirements.txt\n```\n\n#### 阿里云语音识别 sdk\n\n然后还需要安装阿里云语音识别引擎的sdk， [这篇阿里云官方文档](https://help.aliyun.com/document_detail/120693.html?spm=a2c4g.11186623.6.569.27675df0FENQ6O) 只说了用下面的方法安装：\n\n```\npip install setuptools\n```\n\n[下载Python SDK](http://download.taobaocdn.com/freedom/33762/compress/alibabacloud-nls-python-sdk.zip)。\n\n```\n # 打包 python setup.py bdist_egg # 安装 python setup.py install\n```\n\n不过有用户反馈可以用下面这个命令直接安装，不过我还没试验：\n\n```\npip install aliyun-python-sdk-nls-cloud-meta\n```\n\n\n\n\n\n\n\n\n\n### 运行问题：\n\n安装完依赖之后开始运行脚本，你可能会遇到这些问题：\n\n- 安装完依赖后，你运行脚本，却发现 `import oss2` 时提示出错：`No module named 'winrandom'`，这时，你需要修改 `Python38\\Lib\\site-packages\\Crypto\\Random\\OSRNG` 下的 `nt.py` 文件，将 `import winrandom` 修改为：`from Crypto.Random.OSRNG import winrandom` \n\n这些问题的原因是一些模块用了其它依赖，而这些其它依赖已经好久没更新了。只能遇到一个问题就搜一下，解决掉。上面这些问题都是我遇到后，在网上找了解法，根据自己的情况做了改动，使得问题得以解决。\n\n**Mac 和 Linux 用户请注意：**\n\n为了在 Windows 上运行时候不弹黑窗口，我在用 subprocess 的时候用了一个  `subprocess.STARTUPINFO()` 类，但是在 Linux 或 Mac 上好像不能用它，所以你们在使用前，要删除几段代码：\n\n首先是末尾的这三行：\n\n```\nsubprocessStartUpInfo = subprocess.STARTUPINFO()\nsubprocessStartUpInfo.dwFlags = subprocess.STARTF_USESHOWWINDOW\nsubprocessStartUpInfo.wShowWindow = subprocess.SW_HIDE\n```\n\n然后再全局搜索 `, startupinfo=subprocessStartUpInfo` 将其删掉。理论上就好了。\n\n搭建好环境可以运行之后，如果修改了源代码然，后要进行发布，就应当打包成可以独立运行的exe文件，下面提供两种方法进行编译打包：\n\n### 使用 nuitka 编译：\n\n使用它打包出来的程序运行更快，只是相对步骤多一些。\n\n先下载安装上 [MinGW64 8.1](https://sourceforge.net/projects/mingw-w64/files/)\n\n再安装上 nuitka：\n\n```\npip install nuitka\n```\n\n在实际编译的时候，先使用这个命令进行编译：\n\n```\nnuitka --mingw64  --standalone --show-progress --show-memory --plugin-enable=qt-plugins --plugin-enable=pylint-warnings --recurse-all --recurse-not-to=numpy,jinja2 --windows-icon=icon.ico --nofollow-imports --assume-yes-for-downloads --output-dir=out QuickCut.py\n```\n\n这时，可能会遇到如下错误：\n\n![image-20200724211333904](assets/image-20200724211333904.png)\n\n就是因为代码里面有中文字符，默认使用的英文编码在转码时出现了错误，你就需要找到并打开最后指示的那个 **MainControl.py** 文件，将里面出错的那一行的 **latin1** 修改为 **utf-8** ，然后就可以编译成功。\n\n以后其实还并不能运行，因为 nuitka 对于某些包并不会自动导入，还需要你手动导入才行。\n\n所以在实际编译的时候，还是先使用这个命令进行编译：\n\n```\nnuitka --mingw64  --standalone --show-progress --show-memory --plugin-enable=qt-plugins --plugin-enable=pylint-warnings --recurse-all --recurse-not-to=numpy,jinja2 --windows-icon=icon.ico --nofollow-imports --assume-yes-for-downloads --output-dir=out QuickCut.py\n```\n\n然后再编译的导出目录在命令行窗口中将 **QuickCut.exe** 打开，会看到类似这样的错误：\n\n![image-20200725104724393](assets/image-20200725104724393.png)\n\n这时候，就需要亲自到 Python 的安装目录下找到这个包：\n\n![image-20200725104814559](assets/image-20200725104814559.png) \n\n\n\n将它手动复制到导出目录的根目录中：\n\n![image-20200725104901324](assets/image-20200725104901324.png) \n\n重复运行，再次出现包缺失：\n\n![image-20200725105214629](assets/image-20200725105214629.png)\n\n都需要找到这个包：\n\n![image-20200725105301248](assets/image-20200725105301248.png) \n\n粘贴到编译导出目录的根目录中。这个过程要重复很多次，直到将所有缺失的包都复制到导出目录。\n\n你可以将这些需要手动导入的包都再复制到另一个文件夹做备份，再次编译后，直接复制进去就行。\n\n编译完成，你启动后可能是这个样子的：\n\n<img src=\"assets/image-20200725110050437.png\" alt=\"image-20200725110050437\" style=\"zoom:50%;\" />\n\n长得很丑对吧。这是因为缺失了 styles 文件夹，你需要到 PyQt5 的安装目录，找到 styles 文件夹：\n\n![image-20200725110307123](assets/image-20200725110307123.png)\n\n将其复制到编译导出目录的根目录之后，再次启动就正常了。\n\n还有，记得将 icon.ico 、sponsor.jpg、README.html 复制到编译导出的文件夹，没有图标文件的话，就无法启动托盘。\n\n再次编译。测试成功后，就可以使用下面这个命令进行编译：\n\n```\nnuitka --mingw64 --windows-disable-console --standalone --show-progress --show-memory --plugin-enable=qt-plugins --plugin-enable=pylint-warnings --plugin-enable=numpy --recurse-all --recurse-not-to=numpy,jinja2 --windows-icon=icon.ico --nofollow-imports --assume-yes-for-downloads --output-dir=out QuickCut.py\n```\n\n这样就可以将命令行窗口隐藏。\n\n如果你是 Mac 编译，为了图标格式兼容，要使用：\n\n```\nnuitka --mingw64 --windows-disable-console --standalone --show-progress --show-memory --plugin-enable=qt-plugins --plugin-enable=pylint-warnings --plugin-enable=numpy --recurse-all --recurse-not-to=numpy,jinja2 --windows-icon=icon.icns --nofollow-imports --assume-yes-for-downloads --output-dir=out QuickCut.py\n```\n\n\n\n### pyinstaller 编译：\n\n先安装上 pyinstaller ：\n\n```\npip install pyinstaller\n```\n\n直接使用这个命令进行编译：\n\n```\npyinstaller --hidden-import pkg_resources.py2_warn --noconfirm -w -i icon.ico QuickCut.py\n```\n\n如果你是 Mac 编译，为了图标格式兼容，要使用：\n\n```\npyinstaller --hidden-import pkg_resources.py2_warn --noconfirm -w -i icon.icns QuickCut.py\n```\n\n其中，`--hide-import pkg_resources.py2_warn` 这一句比较重要，其实整个软件用到了这个模块，但是 pyinstaller 没有自动编译进去。当你电脑上的 setuptools 版本在 45.0.0 到 49.1.1 之间时，会出现这个问题。将 setuptools 升级到最新，应该就不会有这个问题了：\n\n```python\npip install pyinstaller\npip install setuptools --upgrade\npyinstaller -wy -i icon.ico QuickCut.py  # Windows 用户用这个\npyinstaller -wy -i icon.icns QuickCut.py # 为了图标格式兼容，Mac 用户请用这个\n```\n\n\n\n### 编译后打包后要做的事\n\n编译完成后，还有几个事要做，首先，下载对应系统的 [ffmpeg 和 ffprobe](http://ffmpeg.org/download.html) 放到编译根目录，再把本 `README.md` 导出成 `README.html` ，同 `icon.ico`、`sponsor.jpg`、`languages` 一起放入编译根目录（Mac 用户放 `icon.icns`），再下载对应系统的 [annie](https://github.com/iawia002/annie/releases) 放入编译根目录。\n\n如果是 Mac 、Linux 打包的，那一定要给编译目录下的可执行文件用 `chmod +x` 授予可执行权限！\n\n然后就可以打包了，Windows 下可以打包成 `7z` 格式，Mac、Linux 用户不要打包` zip`、`7z` 格式！因为这会让可执行文件的权限消失！Mac、Linux 用户可以用 `tar.gz` 或者 `dmg` 格式打包。\n\n建议打包后的命名成类似 `QuickCut_Mac_v1.2.0_pyinstaller.dmg` 这样的。如果你是志愿者，为这个项目打包，你也可以在命名后面加上你的 id 等信息。\n\n在发包的时候，建议上传到蓝奏云、天翼云，新建一个文件夹，将包放到这个文件夹里，再把这个文件夹的分享链接发出来，这样，以后要更新的话，只要把新版本放到那个文件夹，分享链接就不用变了。\n\n你可以将打包好的云盘文件夹链接发给作者，作者会把这个链接放到 release 页面。\n\n## ☕ 打赏\n\n万水千山总是情，一块几块都是情。本软件完全开源，用爱发电，如果你愿意，可以以打赏的方式支持我一下：\n\n![sponsor](assets/sponsor.jpg)\n\n\n\n## 😀 交流\n\n如果有软件方面的反馈可以提交 issues，或者加入 QQ 群：[1146626791](https://qm.qq.com/cgi-bin/qm/qr?k=DgiFh5cclAElnELH4mOxqWUBxReyEVpm&jump_from=webapi) \n\n\n\n## 🙏 鸣谢\n\n感谢知乎上的 @[Python与模具](https://www.zhihu.com/people/xuhui112-ben) 的帮助，让我得以用 nuitka 对软件进行打包。",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HaujetZhao/QuickCut",
    "keywords": "",
    "license": "MPL-2.0 License",
    "maintainer": "Haujet Zhao",
    "maintainer_email": "1292756898@qq.com",
    "name": "Quick-Cut",
    "package_url": "https://pypi.org/project/Quick-Cut/",
    "platform": "all",
    "project_url": "https://pypi.org/project/Quick-Cut/",
    "project_urls": {
      "Homepage": "https://github.com/HaujetZhao/QuickCut"
    },
    "release_url": "https://pypi.org/project/Quick-Cut/1.6.10.post2/",
    "requires_dist": null,
    "requires_python": ">=3.5, <4",
    "summary": "一款轻量、强大、好用的视频处理软件。",
    "version": "1.6.10.post2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8154584,
  "releases": {
    "1.6.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "073c9b8edd361e20c234217bcad677bfbc95162ef46a2a25d3738b4bc47d7c46",
          "md5": "b3b833edc0a6842ac22207300585e804",
          "sha256": "4d1107e2da779f3d383e0e4117467731026e5eb74a2cc3354fdd97de6cf82bcb"
        },
        "downloads": -1,
        "filename": "Quick-Cut-1.6.10.tar.gz",
        "has_sig": false,
        "md5_digest": "b3b833edc0a6842ac22207300585e804",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 2788999,
        "upload_time": "2020-09-10T12:25:55",
        "upload_time_iso_8601": "2020-09-10T12:25:55.564907Z",
        "url": "https://files.pythonhosted.org/packages/07/3c/9b8edd361e20c234217bcad677bfbc95162ef46a2a25d3738b4bc47d7c46/Quick-Cut-1.6.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.10.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dceaabba230dac8686ca0d37acdd71afb85aab7b3b583eb24bd30e0620c8ed78",
          "md5": "2b836a8d20e76d51a312b4910b072c85",
          "sha256": "2fcfd570d47e901763ccebdf8be2102517c0c3cd85ade8fcde71bf5a1917075f"
        },
        "downloads": -1,
        "filename": "Quick-Cut-1.6.10.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "2b836a8d20e76d51a312b4910b072c85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 2878543,
        "upload_time": "2020-09-10T13:09:14",
        "upload_time_iso_8601": "2020-09-10T13:09:14.086781Z",
        "url": "https://files.pythonhosted.org/packages/dc/ea/abba230dac8686ca0d37acdd71afb85aab7b3b583eb24bd30e0620c8ed78/Quick-Cut-1.6.10.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d796ba8083baab5ba0b5da652536c99331fd32da557a778f1d1f012e1670887b",
          "md5": "a02545e519d77fcefde74b3c7e18242f",
          "sha256": "275de3cf79c27811284a0e705b3c43373f9b9c96dbd10c41eaf8274e8abe01c4"
        },
        "downloads": -1,
        "filename": "Quick Cut-1.6.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a02545e519d77fcefde74b3c7e18242f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 5183859,
        "upload_time": "2020-08-14T13:30:02",
        "upload_time_iso_8601": "2020-08-14T13:30:02.989081Z",
        "url": "https://files.pythonhosted.org/packages/d7/96/ba8083baab5ba0b5da652536c99331fd32da557a778f1d1f012e1670887b/Quick%20Cut-1.6.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0030265fb33c1ee58edbbb4f66fa4b13fb807dbd8f90452ac2769ed95c45324",
          "md5": "bcc144216bc2201fd3d17739b49a8c37",
          "sha256": "be0830d179425d6487b1c46944b1857f0589f637718c239291831fac913da3e0"
        },
        "downloads": -1,
        "filename": "Quick-Cut-1.6.6.tar.gz",
        "has_sig": false,
        "md5_digest": "bcc144216bc2201fd3d17739b49a8c37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 2849630,
        "upload_time": "2020-08-14T15:22:52",
        "upload_time_iso_8601": "2020-08-14T15:22:52.152399Z",
        "url": "https://files.pythonhosted.org/packages/f0/03/0265fb33c1ee58edbbb4f66fa4b13fb807dbd8f90452ac2769ed95c45324/Quick-Cut-1.6.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.6.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c3a16aabdacd3f581a1e7091040f0364006f30d886816edf3d612519218e9b9",
          "md5": "8d209b1b0581d69de1e41becd1c65e80",
          "sha256": "ea070dfc520d60cb1983b82ef4ae64035c3dd759ad8fe454a97a715593ff8bdd"
        },
        "downloads": -1,
        "filename": "Quick Cut-1.6.6.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "8d209b1b0581d69de1e41becd1c65e80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 2849748,
        "upload_time": "2020-08-14T16:00:21",
        "upload_time_iso_8601": "2020-08-14T16:00:21.686585Z",
        "url": "https://files.pythonhosted.org/packages/8c/3a/16aabdacd3f581a1e7091040f0364006f30d886816edf3d612519218e9b9/Quick%20Cut-1.6.6.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.6.post5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cda78b81e04d26e4a458ebf8216ae5500c908715828878b0b9768d54a1e3c44",
          "md5": "5e70f210332b70aeedf2d5e310893c64",
          "sha256": "bfa1d5eea42f12ab4d32c2a48f36b51c0a32f54cd7682febf85904a30feaacdf"
        },
        "downloads": -1,
        "filename": "Quick Cut-1.6.6.post5.tar.gz",
        "has_sig": false,
        "md5_digest": "5e70f210332b70aeedf2d5e310893c64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 2849711,
        "upload_time": "2020-08-15T03:48:51",
        "upload_time_iso_8601": "2020-08-15T03:48:51.178782Z",
        "url": "https://files.pythonhosted.org/packages/9c/da/78b81e04d26e4a458ebf8216ae5500c908715828878b0b9768d54a1e3c44/Quick%20Cut-1.6.6.post5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.6.post6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f1256fbbe0f8ddc5d48b5c278ff680494fda6c02faec5adb889631cb46c12c4",
          "md5": "9e7c62cc740f9c9387aec64277c7dfad",
          "sha256": "f407ee75a35b46e9d61c1ceae9a3d170dd325b2e6e3ffab1327fd40c96251dd5"
        },
        "downloads": -1,
        "filename": "Quick-Cut-1.6.6.post6.tar.gz",
        "has_sig": false,
        "md5_digest": "9e7c62cc740f9c9387aec64277c7dfad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 2849766,
        "upload_time": "2020-08-15T04:29:55",
        "upload_time_iso_8601": "2020-08-15T04:29:55.757003Z",
        "url": "https://files.pythonhosted.org/packages/0f/12/56fbbe0f8ddc5d48b5c278ff680494fda6c02faec5adb889631cb46c12c4/Quick-Cut-1.6.6.post6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.6.post7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a78f0456e2180aabfc932b899b6b90c92cee142f0a146ca428c59c7120de0cf",
          "md5": "1bd2892de3cb7d06fad521748c5a043e",
          "sha256": "9e1f365be1a01156bd4dab644e1e3575c445bb640726955cbb5cfb04ffa22776"
        },
        "downloads": -1,
        "filename": "Quick-Cut-1.6.6.post7.tar.gz",
        "has_sig": false,
        "md5_digest": "1bd2892de3cb7d06fad521748c5a043e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 2851318,
        "upload_time": "2020-08-16T02:07:16",
        "upload_time_iso_8601": "2020-08-16T02:07:16.428098Z",
        "url": "https://files.pythonhosted.org/packages/0a/78/f0456e2180aabfc932b899b6b90c92cee142f0a146ca428c59c7120de0cf/Quick-Cut-1.6.6.post7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "269c4d6724b16574ffd30aa7eb7309652719138494e73571f81bb534dbc730e0",
          "md5": "c2acafe8e302b7f45a93cf5855661fb1",
          "sha256": "116f05616f284b4ecd7b4953bad976c3e30e6076d44b49fac36c94df72b0ff87"
        },
        "downloads": -1,
        "filename": "Quick-Cut-1.6.7.tar.gz",
        "has_sig": false,
        "md5_digest": "c2acafe8e302b7f45a93cf5855661fb1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 2851179,
        "upload_time": "2020-08-16T05:31:32",
        "upload_time_iso_8601": "2020-08-16T05:31:32.433823Z",
        "url": "https://files.pythonhosted.org/packages/26/9c/4d6724b16574ffd30aa7eb7309652719138494e73571f81bb534dbc730e0/Quick-Cut-1.6.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.7.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c9bdc9fc74c571d8fb788c0b0be685d2ff1d9331479ece8de5759e863eeaca6",
          "md5": "aade3eebe76628e8b15e8d38b1bacbcf",
          "sha256": "926742698f080e340334d033cf2a441e08afeab3e6d03269db78c2c837c480f0"
        },
        "downloads": -1,
        "filename": "Quick-Cut-1.6.7.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "aade3eebe76628e8b15e8d38b1bacbcf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 2851359,
        "upload_time": "2020-08-16T07:03:04",
        "upload_time_iso_8601": "2020-08-16T07:03:04.058209Z",
        "url": "https://files.pythonhosted.org/packages/3c/9b/dc9fc74c571d8fb788c0b0be685d2ff1d9331479ece8de5759e863eeaca6/Quick-Cut-1.6.7.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.7.post3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38f44ac2931701572a811e0362a61fda9e9241a620edad151266ba0470960071",
          "md5": "b2190a4ba6bb98f41b6641ef00588a24",
          "sha256": "14f935765a499dfc7ad1816a216e7cd4e59a975893b8e3fe20c378d69675526a"
        },
        "downloads": -1,
        "filename": "Quick-Cut-1.6.7.post3.tar.gz",
        "has_sig": false,
        "md5_digest": "b2190a4ba6bb98f41b6641ef00588a24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 2851364,
        "upload_time": "2020-08-16T08:27:53",
        "upload_time_iso_8601": "2020-08-16T08:27:53.221285Z",
        "url": "https://files.pythonhosted.org/packages/38/f4/4ac2931701572a811e0362a61fda9e9241a620edad151266ba0470960071/Quick-Cut-1.6.7.post3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.7.post4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "deff2e022af6b1d889598b72a5e3d8b7dc453da7dfa6108ca3452d9b4a3181c9",
          "md5": "8bb645091b9793ecb2dd0608095c599b",
          "sha256": "803f6a9d5cfa19bfc92b5dfe5ef785cd11d7abead91590c2d1e3963e89f4b1a7"
        },
        "downloads": -1,
        "filename": "Quick-Cut-1.6.7.post4.tar.gz",
        "has_sig": false,
        "md5_digest": "8bb645091b9793ecb2dd0608095c599b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 2851531,
        "upload_time": "2020-08-16T13:15:02",
        "upload_time_iso_8601": "2020-08-16T13:15:02.174055Z",
        "url": "https://files.pythonhosted.org/packages/de/ff/2e022af6b1d889598b72a5e3d8b7dc453da7dfa6108ca3452d9b4a3181c9/Quick-Cut-1.6.7.post4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83ea99ba1c5271a8d951cf7b31398b4d6435be64e9beeeeb5973ca9badd56c22",
          "md5": "a83ccd69ffb9eebeccd8a34e0eef7468",
          "sha256": "a07663a084dbb2b3d6848c22d13fca3aaf23e9a5c3123784862a11dd66ee8e80"
        },
        "downloads": -1,
        "filename": "Quick-Cut-1.6.9.tar.gz",
        "has_sig": false,
        "md5_digest": "a83ccd69ffb9eebeccd8a34e0eef7468",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 2852606,
        "upload_time": "2020-08-27T10:00:46",
        "upload_time_iso_8601": "2020-08-27T10:00:46.817137Z",
        "url": "https://files.pythonhosted.org/packages/83/ea/99ba1c5271a8d951cf7b31398b4d6435be64e9beeeeb5973ca9badd56c22/Quick-Cut-1.6.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.9.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f3db217a5e1933bf27667f4e3ad9871ab3435cd42301043fb86e71bba0a1df1",
          "md5": "3adc1c5278392a0406aa3c333583fbad",
          "sha256": "edd719eac9949a2e99b48f7bc453cf781cfcf856f419294505288c2a14eae4e1"
        },
        "downloads": -1,
        "filename": "Quick-Cut-1.6.9.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "3adc1c5278392a0406aa3c333583fbad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 2852732,
        "upload_time": "2020-08-27T10:27:42",
        "upload_time_iso_8601": "2020-08-27T10:27:42.256035Z",
        "url": "https://files.pythonhosted.org/packages/3f/3d/b217a5e1933bf27667f4e3ad9871ab3435cd42301043fb86e71bba0a1df1/Quick-Cut-1.6.9.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dceaabba230dac8686ca0d37acdd71afb85aab7b3b583eb24bd30e0620c8ed78",
        "md5": "2b836a8d20e76d51a312b4910b072c85",
        "sha256": "2fcfd570d47e901763ccebdf8be2102517c0c3cd85ade8fcde71bf5a1917075f"
      },
      "downloads": -1,
      "filename": "Quick-Cut-1.6.10.post2.tar.gz",
      "has_sig": false,
      "md5_digest": "2b836a8d20e76d51a312b4910b072c85",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5, <4",
      "size": 2878543,
      "upload_time": "2020-09-10T13:09:14",
      "upload_time_iso_8601": "2020-09-10T13:09:14.086781Z",
      "url": "https://files.pythonhosted.org/packages/dc/ea/abba230dac8686ca0d37acdd71afb85aab7b3b583eb24bd30e0620c8ed78/Quick-Cut-1.6.10.post2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}