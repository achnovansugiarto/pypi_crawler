{
  "info": {
    "author": "Gregor Rot",
    "author_email": "gregor.rot@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pybio: basic genomics toolset\n\n* [About](#about)\n* [Installation](#installation)\n* [Documentation](#documentation)\n  * [Downloading Ensembl genomes](#downloading-Ensembl-genomes)\n  * [Retrieving genomic sequence](#retrieving-genomic-sequence)\n  * [Annotate genomic position](#annotate-genomic-position)\n  * [Importing genome annotation](#importing-genome-annotation)\n  * [File formats](#file-formats)\n    * [bedGraph](#bedgraph)\n* [Authors](#authors)\n* [Reporting problems](#reporting-problems)\n\n## About\n\npybio is a Python 3 framework for basic genomics/transcriptomics operations/annotations. The package is a dependency to [apa](https://github.com/grexor/apa) (alternative polyadenylation) and [RNAmotifs2](https://github.com/grexor/rnamotifs2) (motif cluster analysis). The pybio package provides:\n\n+ automatized download of genome assemblies from Ensembl and STAR indexing,\n+ automatized download of genome annotations from Ensembl GTF with fast-searching capabilities,\n+ Fasta, Fastq, bedGraph and other file format handling,\n+ motif sequence searches,\n+ alternative polyadenylation site-pair classification (same-exon, skipped-exon, composite-exon),\n+ and other.\n\n## Installation\n\nA few steps of how to download and setup `pybio`.\n\n### Clone the GitHub repository\n\nFor now the most direct way of installing pybio is to clone the repository and add the containing folder to PYTHONPATH:\n\n```\ngit clone https://github.com/grexor/pybio.git\n```\n\nIf, for example, you installed `pybio` to `/home/user/pybio`, you would add this command to the `.profile` file in your home folder:\n\n```\nexport PYTHONPATH=$PYTHONPATH:/home/user\nexport PATH=$PATH:/home/user/pybio/bin\n```\n\n### Dependencies\n\nThere are a few software tools pybio depends on:\n\n* [STAR aligner](https://github.com/alexdobin/STAR), `sudo apt-get install rna-star`\n* [pysam](https://pysam.readthedocs.io/en/latest/api.html), `sudo apt-get install python-pysam`\n* [numpy](https://numpy.org/), `sudo apt-get install python-numpy`\n* [Salmon](https://combine-lab.github.io/salmon/getting_started/), download and install from Salmon webpage\n* [samtools](http://www.htslib.org), `sudo apt-get install samtools`\n\n## Documentation\n\nHere we provide basic `pybio` usage examples.\n\n### Downloading Ensembl genomes\n\nIn the folder `pybio/genomes`, there are `.sh scripts` you can use to automatically download and pre-process Ensembl genomes. For example, to download and prepare the hg38 Ensembl v98, simply run:\n\n```\ncd pybio/genomes\n./hg38.download.ensembl98.sh\n```\n\nThis will download the FASTA sequence, GTF and TAB annotation (via Biomart) of the genome, and create several folders:\n\n```\nhg38.assembly.ensembl98           # FASTA files of the genome, each chromosome in a separate file\nhg38.annotation.ensembl98         # Annotation in GTF and TAB format\nhg38.assembly.ensembl98.star      # STAR index, GTF annotation aware\nhg38.transcripts.ensembl98        # transcriptome, this is the Ensembl \"cDNA\" file in FASTA format\nhg38.transcripts.ensembl98.salmon # Salmon index of the transcriptome\n```\n\n### Retrieving genomic sequence\n\nTo retrieve stretches of genomic sequence, we use the seq(genome, chr, strand, position, upstream, downstream) method:\n\n```\npybio.genomes.seq(\"hg38\", \"1\", \"+\", 450000, -20, 20) # returns 'TACCCTGATTCTGAAACGAAAAAGCTTTACAAAATCCAAGA' for hg38, Ensembl v98\n```\n\nThe above command fetches the chr1 sequence from 450000-20..450000+20, the resulting sequence is of length 41.\n\n### Annotate genomic position\n\nGiven a genomic position, we can retrieve the gene at the position and the closest upstream and downstream gene on the same strand:\n\n```\n(gene_up, gene_id, gene_down, gene_interval, gene_feature) = pybio.genomes.annotate(\"hg38\", \"1\", \"-\", 450000)\n```\n\nThe above command would return:\n\n```\n      gene_id: ENSG00000237094\ngene_interval: (379972, 450701, 'i')\n gene_feature: 'intron'\n      gene_up: 'ENSG00000284733'\n    gene_down: 'ENSG00000228463'\n```\n\nThere is gene ENSG00000237094 at position 450000, specifically the position is in an intron of the gene spanning the region 379972..450701.\n\n### Importing genome annotation\n\npybio imports genome annotations from Ensembl or from a GTF file. The Ensembl import is from the TAB separated file generated by querying Biomart.\n\n### File formats\n\n#### bedGraph\n\n```\nb = pybio.data.bedGraph()\n```\n\n## Authors\n\n[pybio](https://github.com/grexor/pybio) is developed and supported by [Gregor Rot](https://grexor.github.io).\n\n## Reporting problems\n\nUse the [issues page](https://github.com/grexor/pybio/issues) to report issues and leave suggestions.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/grexor/pybio",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pybio",
    "package_url": "https://pypi.org/project/pybio/",
    "platform": null,
    "project_url": "https://pypi.org/project/pybio/",
    "project_urls": {
      "Homepage": "https://github.com/grexor/pybio"
    },
    "release_url": "https://pypi.org/project/pybio/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Pybio genomic scripts",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16130386,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9eb1ad73c8e96864538bf9d07c48d8a3faec8222de769a8bd0ad2b8a6280af72",
          "md5": "679ccfdea19657f07e497bd61cdb6a6c",
          "sha256": "79b38d317e25e6b7f9d0b0daf2b3cb8a981d86f8ac01115d06dc35ca223f5398"
        },
        "downloads": -1,
        "filename": "pybio-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "679ccfdea19657f07e497bd61cdb6a6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3119,
        "upload_time": "2022-12-16T21:47:44",
        "upload_time_iso_8601": "2022-12-16T21:47:44.063660Z",
        "url": "https://files.pythonhosted.org/packages/9e/b1/ad73c8e96864538bf9d07c48d8a3faec8222de769a8bd0ad2b8a6280af72/pybio-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9eb1ad73c8e96864538bf9d07c48d8a3faec8222de769a8bd0ad2b8a6280af72",
        "md5": "679ccfdea19657f07e497bd61cdb6a6c",
        "sha256": "79b38d317e25e6b7f9d0b0daf2b3cb8a981d86f8ac01115d06dc35ca223f5398"
      },
      "downloads": -1,
      "filename": "pybio-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "679ccfdea19657f07e497bd61cdb6a6c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3119,
      "upload_time": "2022-12-16T21:47:44",
      "upload_time_iso_8601": "2022-12-16T21:47:44.063660Z",
      "url": "https://files.pythonhosted.org/packages/9e/b1/ad73c8e96864538bf9d07c48d8a3faec8222de769a8bd0ad2b8a6280af72/pybio-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}