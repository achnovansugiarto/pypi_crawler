{
  "info": {
    "author": "Antonio Di Mariano",
    "author_email": "antonio.dimariano@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n## Description \n\nThis package is part of a toolbox that aims to make it easier to send configurations to services. \nEven the smallest microservice needs a few information to run, such as an endpoint to query. \nThis service aims to make it easier to send and update configurations for microservices. At startup, each service announces itself by producing a specific message to a Kafka topic. The message will be consumed by a Services Configuration Repository component that will consume the message and send the configuration as a message to the Kafka topic where services are listening to for receiving their configuration. \nSimilarly, suppose we need to update one service's configuration. In that case, we can do it on the fly by sending a message to the topic where services are listening to for receiving their configuration. \nThis solution allows us to apply changes more straightforward and faster without restarting pods. \nEach service announces itself using its service's name.\nBy default, the topic used to retrieve services' configuration is named `tc-get-service-configuration`, and it has the following schemas:\n\nvalue:\n```\n{\"name\":\"service_name\",\"type\":\"string\"},\n{\"name\":\"application\",\"type\":\"string\"},\n{\"name\":\"timestamp\",\"type\":\"string\"}\n\n```\nkey:\n```\n\"name\":\"service_name\",\"type\":\"string\"}\n```\n\nThe topic where services listen to for receiving their configuration is named  `tc-set-service-configuration`, and it has the following schemas:\n\nvalue:\n\n```\n{\"name\":\"service_name\",\"type\":\"string\"},{\"name\":\"timestamp\",\"type\":\"string\"},{\"name\":\"start_environment\",\"type\":\"string\"},{\"name\":\"datacentre\",\"type\":\"string\"},{\"name\":\"external_rest_services\",\"type\":\"string\"},{\"name\":\"persistence_conf\",\"type\":\"string\"},{\"name\":\"credentials\",\"type\":\"string\"}\n\n```\nkey:\n```\n\"name\":\"service_name\",\"type\":\"string\"}\n```\n\nThe service logs each operation to the topic `services-configuration-monitoring` that has the following schemas:\n\nvalue \n```\n{\\\"name\\\":\\\"service_name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"application\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"timestamp\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"configuration_requested\\\",\\\"type\\\":\\\"int\\\"},{\\\"name\\\":\\\"configuration_retrieved\\\",\\\"type\\\":\\\"int\\\"}\n\n```\n\nkey:\n```\n\"name\":\"service_name\",\"type\":\"string\"}\n```\n\nThe default configuration received aims to provide the service with a generic range of information services might react.\n\nstart_environment\n\nexternal_rest_service= a dictionary of external services to contact. \nExamples \n\n```\n{\n \"deployment_proxy_url\": \"http://localhost:5500/api/deploy\",\n \"oauth_token\": \"http://localhost:3001/api/token\"\n}\n```\nor if you want to provide your code with more information \n```\nMY_SERVICE\": {\n  \"url\": \"https://api.myservice.com/me\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  \"body\": {}\n}\n```\n\ndatacentre: more than often, services need to access data from a given data centre. Here you can insert a dictionary or a list. \n\npersistence_conf: information about where to store data. \ncredentials: credentials to use in your code\n\n\n![](services_configuration_tool.png)\n\n## Infrastructure pre-requisites: \n\n* K8s cluster (preferred)\n* Apache Kafka Brokers ( with optional Schema Registry )\n\n\n\n## How to use it: \n\nIf you want to use the default settings, you have to use a Confluent Apache Kafka Brokers with Schema Registry. Under the hood, this package has a dependency with the [confluent-kafka-producers-wrapper](https://pypi.org/project/confluent-kafka-producers-wrapper/), so the minimum information to provide is \n\n```\nservice_name = the name of your service, as registered in the Services Configuration Repository tool.\nbrokers  = your Confluent Apache Brokers here\nschema_registry = your Schema Registry here \n```\n\nReferer [to this page](https://pypi.org/project/confluent-kafka-producers-wrapper/)  for more information about how to set the  environment variables \nIf you want to use different topics, you have to specify them using these environment variables:\n\n```\n\ntopic_for_getting_conf = the topic where services will send message to request their configuration\ntopic_for_setting_conf  = the topic the services will listen to retrieve their configuration\n\ntopic_for_setting_conf_no_avro = 1 if the topic makes no use of the Schema Registry. \ntopic_for_getting_conf_no_avro = 1 if the topic makes no use of the Schema Registry\n\n```\n\n```python\nfrom service_configuration_controller.request_service_configuration import wait_to_retrieve_service_configuration\n\nif __name__ == '__main__':\n    if wait_to_retrieve_service_configuration():\n        print(\"conf received\")\n\n    import time\n\n    while True:\n        time.sleep(2)\n        print(\"do my job\")\n\n\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/antoniodimariano/services_configuration_tool",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "service-configuration-layer",
    "package_url": "https://pypi.org/project/service-configuration-layer/",
    "platform": "",
    "project_url": "https://pypi.org/project/service-configuration-layer/",
    "project_urls": {
      "Homepage": "https://github.com/antoniodimariano/services_configuration_tool"
    },
    "release_url": "https://pypi.org/project/service-configuration-layer/0.0.7/",
    "requires_dist": [
      "avro-python3",
      "requests",
      "confluent-kafka",
      "confluent-kafka-producers-wrapper"
    ],
    "requires_python": "~=3.7",
    "summary": "A tool to request and store services configuration. This tool is part of the Microservices ToolBox",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9512633,
  "releases": {
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "106afabf0ae4c96f714b69b2f9f3914e5fb6035dd085bfce8cc7b9590441635e",
          "md5": "c342ffe6c94a71cb9f7e0fb91c37a56c",
          "sha256": "d5059c98b54717b1b45d4daccce2321f3da860e5b2f1fab1b4eb61cb0b7735ad"
        },
        "downloads": -1,
        "filename": "service_configuration_layer-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c342ffe6c94a71cb9f7e0fb91c37a56c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 9391,
        "upload_time": "2021-02-05T11:20:54",
        "upload_time_iso_8601": "2021-02-05T11:20:54.285551Z",
        "url": "https://files.pythonhosted.org/packages/10/6a/fabf0ae4c96f714b69b2f9f3914e5fb6035dd085bfce8cc7b9590441635e/service_configuration_layer-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36a57fe8709f3c98de64c96c587e98da510465459d575801d6a7cf66f49373f9",
          "md5": "7b120e52ec8bbb623ee6770343ae7e0c",
          "sha256": "eb1dc19807a97990f7aa09afc69c0bf0a5aaf3d02d56e48768fe520115643549"
        },
        "downloads": -1,
        "filename": "service_configuration_layer-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7b120e52ec8bbb623ee6770343ae7e0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 5936,
        "upload_time": "2021-02-05T11:20:55",
        "upload_time_iso_8601": "2021-02-05T11:20:55.437161Z",
        "url": "https://files.pythonhosted.org/packages/36/a5/7fe8709f3c98de64c96c587e98da510465459d575801d6a7cf66f49373f9/service_configuration_layer-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f947de04737feb832013a94ecadbbaaa8a383302dfcbdedec1c035fa07c8822",
          "md5": "b0181ecfda409b8fb9519e57ad8f9633",
          "sha256": "47da222e9a7f43aded0a2070349519425891f30015945f98b041c1f6f6cff610"
        },
        "downloads": -1,
        "filename": "service_configuration_layer-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0181ecfda409b8fb9519e57ad8f9633",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 10584,
        "upload_time": "2021-02-05T15:10:18",
        "upload_time_iso_8601": "2021-02-05T15:10:18.871255Z",
        "url": "https://files.pythonhosted.org/packages/9f/94/7de04737feb832013a94ecadbbaaa8a383302dfcbdedec1c035fa07c8822/service_configuration_layer-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c80680c3df1e4cf047a06b437ec0991eddb13b287642093f7a7c94aaf9f73bf",
          "md5": "769fc06cbc5d96380ff682c6003e0e88",
          "sha256": "1b245d2e00ae1885f52b953857911935504e64eeb005baba759fc06a0a8e3490"
        },
        "downloads": -1,
        "filename": "service_configuration_layer-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "769fc06cbc5d96380ff682c6003e0e88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 8893,
        "upload_time": "2021-02-05T15:10:20",
        "upload_time_iso_8601": "2021-02-05T15:10:20.302483Z",
        "url": "https://files.pythonhosted.org/packages/6c/80/680c3df1e4cf047a06b437ec0991eddb13b287642093f7a7c94aaf9f73bf/service_configuration_layer-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef6f9040106900e10420bdb6fac505be5d04bde62ba5527bc98a4902d957e7a1",
          "md5": "474c92e02707b45d7488b6579f997539",
          "sha256": "a2d262b589d5384d8fd723eb7cb71c5c6c633787c665fa24ba66856f5f0ac19a"
        },
        "downloads": -1,
        "filename": "service_configuration_layer-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "474c92e02707b45d7488b6579f997539",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 11979,
        "upload_time": "2021-02-05T15:49:28",
        "upload_time_iso_8601": "2021-02-05T15:49:28.731457Z",
        "url": "https://files.pythonhosted.org/packages/ef/6f/9040106900e10420bdb6fac505be5d04bde62ba5527bc98a4902d957e7a1/service_configuration_layer-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3159c78552b246f2abe50da2294fda494bcc9a1ddb223396e8d7733f55031fc8",
          "md5": "5a37f792c11347c2871df309db7f1a40",
          "sha256": "3010a4491681a439f05ffe3317fab39fe5dee9177a29c72304973c8717fa41c9"
        },
        "downloads": -1,
        "filename": "service_configuration_layer-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "5a37f792c11347c2871df309db7f1a40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 9501,
        "upload_time": "2021-02-05T15:49:30",
        "upload_time_iso_8601": "2021-02-05T15:49:30.211498Z",
        "url": "https://files.pythonhosted.org/packages/31/59/c78552b246f2abe50da2294fda494bcc9a1ddb223396e8d7733f55031fc8/service_configuration_layer-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d18fe79e1befe31a4db793431ee8a685deea9e318c7fa2877a808409c3b9d936",
          "md5": "394cc0b5b111d536f686e9c1b13feee8",
          "sha256": "e18fd43b1f49bb92145f0ab0ced428d7b87aad8fe19d29869f4c0c10acd2b269"
        },
        "downloads": -1,
        "filename": "service_configuration_layer-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "394cc0b5b111d536f686e9c1b13feee8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 12389,
        "upload_time": "2021-02-24T15:53:55",
        "upload_time_iso_8601": "2021-02-24T15:53:55.354777Z",
        "url": "https://files.pythonhosted.org/packages/d1/8f/e79e1befe31a4db793431ee8a685deea9e318c7fa2877a808409c3b9d936/service_configuration_layer-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac4bae2b42149b25fc736462191dcc833537c498bc8fdcf3373746fc3877d6ef",
          "md5": "43f538c47608a40f000cb161ce5d1ddd",
          "sha256": "cc7b18c88c153589b385558fb049358dcef60545e41cb1132c4ff96f2f55c4c2"
        },
        "downloads": -1,
        "filename": "service_configuration_layer-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "43f538c47608a40f000cb161ce5d1ddd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 10021,
        "upload_time": "2021-02-24T15:53:56",
        "upload_time_iso_8601": "2021-02-24T15:53:56.942232Z",
        "url": "https://files.pythonhosted.org/packages/ac/4b/ae2b42149b25fc736462191dcc833537c498bc8fdcf3373746fc3877d6ef/service_configuration_layer-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d18fe79e1befe31a4db793431ee8a685deea9e318c7fa2877a808409c3b9d936",
        "md5": "394cc0b5b111d536f686e9c1b13feee8",
        "sha256": "e18fd43b1f49bb92145f0ab0ced428d7b87aad8fe19d29869f4c0c10acd2b269"
      },
      "downloads": -1,
      "filename": "service_configuration_layer-0.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "394cc0b5b111d536f686e9c1b13feee8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.7",
      "size": 12389,
      "upload_time": "2021-02-24T15:53:55",
      "upload_time_iso_8601": "2021-02-24T15:53:55.354777Z",
      "url": "https://files.pythonhosted.org/packages/d1/8f/e79e1befe31a4db793431ee8a685deea9e318c7fa2877a808409c3b9d936/service_configuration_layer-0.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac4bae2b42149b25fc736462191dcc833537c498bc8fdcf3373746fc3877d6ef",
        "md5": "43f538c47608a40f000cb161ce5d1ddd",
        "sha256": "cc7b18c88c153589b385558fb049358dcef60545e41cb1132c4ff96f2f55c4c2"
      },
      "downloads": -1,
      "filename": "service_configuration_layer-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "43f538c47608a40f000cb161ce5d1ddd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.7",
      "size": 10021,
      "upload_time": "2021-02-24T15:53:56",
      "upload_time_iso_8601": "2021-02-24T15:53:56.942232Z",
      "url": "https://files.pythonhosted.org/packages/ac/4b/ae2b42149b25fc736462191dcc833537c498bc8fdcf3373746fc3877d6ef/service_configuration_layer-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}