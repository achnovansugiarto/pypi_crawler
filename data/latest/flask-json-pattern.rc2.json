{
  "info": {
    "author": "Jeff Aguilar",
    "author_email": "jeff.aguilar.06@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# flask-json-pattern\n\nDecorator for REST endpoints in flask. Validate JSON request data.\n\n## Installation\n\nUse pip to install the package:\n\n```bash\npip install flask-json-pattern\n```\n\n## Usage\n\nThis package provides a flask route decorator to validate json payload.\n\n```python\nfrom flask import Flask, jsonify\nfrom flask_json_pattern import json_pattern\n\napp = Flask(__name__)\n\n\n@app.route('/greet', methods=['POST'])\n@json_pattern({\n    'name': {'type': str},\n    'surname': {'type': str}\n})\ndef greet():\n    return jsonify({\"msg\": \"Hello %(name)s %(surname)s\" % request.json})\n```\n\n## Required fields\n\nBy default all fields are required, If you want you can change this behavior by adding `required: False` in the field you want\n\n```python\n@app.route('/greet', methods=['POST'])\n@json_pattern({\n    'name': {'type': str},\n    'surname': {'type': str, 'required': False}\n})\ndef greet():\n    return \"\"\n```\n\n## Default values\n\nWhen the field is optional `required: False`, you could set the default value of it using the `default` property.\n\n```python\n@app.route('/greet', methods=['POST'])\n@json_pattern({\n    'name': {'type': str},\n    'surname': {'type': str, \"default\": 'unknown'}\n})\ndef greet():\n    return \"\"\n```\n\n## Empty values\n\nBy default the fields can be empty, you could change this if you set the `empty` property to false.\n\n```python\n@app.route('/greet', methods=['POST'])\n@json_pattern({\n    'name': {'type': str},\n    'surname': {'type': str, \"empty\": False}\n})\ndef greet():\n    return \"\"\n```\n\nAlso, you could change the empty and default properties, so that when the property is empty assign a value.\n\n```python\n@app.route('/greet', methods=['POST'])\n@json_pattern({\n    'name': {'type': str,  \"empty\": False, 'default': \"unknown\"},\n    'surname': {'type': str}\n})\ndef greet():\n    return \"\"\n```\n\n## Skip validation methods\n\nIf you want to skip the validation for some HTTP methods, can you set `ignore_methods=[]`. By default methods that do not expect a body are GET, HEAD and DELETE.\n\n```python\n@app.route('/greet', methods=['GET', 'POST'])\n@json_pattern({\n    'name': {'type': str},\n    'surname': {'type': str}\n}, ignore_methods=['GET'])\ndef greet():\n    return \"\"\n```\n\n## Tuple and list\n\nIf you want, you can validate the data type of each position of a simple list\n\n```python\n@app.route('/greet', methods=['GET', 'POST'])\n@json_pattern({\n    'name': {'type': str},\n    'surname': {'type': str},\n    'skills': {\n        'type': list,\n        'of': str\n    }\n}, ignore_methods=['GET'])\ndef greet():\n    return \"\"\n```\n\nAlso, If you want you could validate lists of objects, and the fields of each object.\n\n```python\n@app.route('/greet', methods=['GET', 'POST'])\n@json_pattern({\n    'name': {'type': str},\n    'surname': {'type': str},\n    'skills': {\n        'type': list,\n        \"schema\": {\n            \"name\": {\"type\": str}\n        }\n    }\n}, ignore_methods=['GET'])\ndef greet():\n    return \"\"\n```\n\n## Error handling\n\nOn validation failure the library calls `flask.abort` and passes an 400 error code and instance of the ValidationError.\n\n```python\nfrom flask import make_response, jsonify\nfrom flask_json_pattern import ValidationError\n\n@app.errorhandler(400)\ndef bad_request(error):\n    if isinstance(error.description, ValidationError):\n        return make_response(jsonify({'msg': error.description.message}), 400)\n    return error\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/jeffaguilar08/flask-json-pattern.git",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jeffaguilar08/flask-json-pattern",
    "keywords": "flask,json,validation,schema,jsonschema,jsonpattern",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flask-json-pattern",
    "package_url": "https://pypi.org/project/flask-json-pattern/",
    "platform": null,
    "project_url": "https://pypi.org/project/flask-json-pattern/",
    "project_urls": {
      "Download": "https://github.com/jeffaguilar08/flask-json-pattern.git",
      "Homepage": "https://github.com/jeffaguilar08/flask-json-pattern"
    },
    "release_url": "https://pypi.org/project/flask-json-pattern/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13433811,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14dca0b87a5310b232459eacb52619b8cad394a82a3f319102dcb2514710de69",
          "md5": "384e873523d208af97c3ecc1dcbbfde6",
          "sha256": "18df8493dbde976f138ef920dafa74b02d03c047824e3fa42074b6769f9f22a8"
        },
        "downloads": -1,
        "filename": "flask_json_pattern-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "384e873523d208af97c3ecc1dcbbfde6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4087,
        "upload_time": "2022-04-06T18:09:42",
        "upload_time_iso_8601": "2022-04-06T18:09:42.574078Z",
        "url": "https://files.pythonhosted.org/packages/14/dc/a0b87a5310b232459eacb52619b8cad394a82a3f319102dcb2514710de69/flask_json_pattern-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d3e103feb8d0c81268b81ca3cf4dc09cefbc64ff636fb417fe43eba4f86d860",
          "md5": "690950e43c681a65cc09ad0ab2d54068",
          "sha256": "7763b5cf959912f1eeeed17fd26196f6f1ccab1bb34129778e42909b499e8238"
        },
        "downloads": -1,
        "filename": "flask_json_pattern-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "690950e43c681a65cc09ad0ab2d54068",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4219,
        "upload_time": "2022-04-06T23:04:16",
        "upload_time_iso_8601": "2022-04-06T23:04:16.915166Z",
        "url": "https://files.pythonhosted.org/packages/7d/3e/103feb8d0c81268b81ca3cf4dc09cefbc64ff636fb417fe43eba4f86d860/flask_json_pattern-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d3e103feb8d0c81268b81ca3cf4dc09cefbc64ff636fb417fe43eba4f86d860",
        "md5": "690950e43c681a65cc09ad0ab2d54068",
        "sha256": "7763b5cf959912f1eeeed17fd26196f6f1ccab1bb34129778e42909b499e8238"
      },
      "downloads": -1,
      "filename": "flask_json_pattern-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "690950e43c681a65cc09ad0ab2d54068",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4219,
      "upload_time": "2022-04-06T23:04:16",
      "upload_time_iso_8601": "2022-04-06T23:04:16.915166Z",
      "url": "https://files.pythonhosted.org/packages/7d/3e/103feb8d0c81268b81ca3cf4dc09cefbc64ff636fb417fe43eba4f86d860/flask_json_pattern-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}