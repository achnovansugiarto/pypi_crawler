{
  "info": {
    "author": "Daniel Tomlinson",
    "author_email": "dtomlinson@panaetius.co.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# easy-email-downloader üì®\n\n![PyPI](https://img.shields.io/pypi/v/easy-email-downloader)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/easy-email-downloader)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/simple-email-sender)\n\n`easy-email-downloader` is a no nonsense and easy way to download emails from an IMAP server in Python with no\n3rd party dependencies.\n\n## Uses\n\n- Extract data/logs etc. from email content for further parsing or saving to disk.\n- Calculate general statistics from your inbox (who's sending me the most etc.)\n- Get a list of all senders so you can identify who to unsubsribe from.\n- Automatically download attachments (receipts/statements etc.) and save to disk.\n- Archive content of emails for personal use.\n\nSee the installation & examples below.\n\nPull requests/ideas/suggestions are welcome üëçüèª\n\n## Installation\n\n### PyPI\n\n```bash\npip install easy-email-downloader\n```\n\n### From Source\n\n#### Using [Poetry](https://python-poetry.org)\n\nüëçüèª recommended\n\nClone the repository and run:\n\n```bash\npoetry install\n```\n\n#### setuptools\n\nClone the repository and run in a virtual environment:\n\n```bash\npython setup.py install\n```\n\n## Usage\n\nTo download emails from an IMAP server:\n\n```python\nfrom easy_email_downloader import EmailFilter, EmailConfig, download_emails\n\nemail_config = EmailConfig(\n    host=\"mail.example.com\",\n    email_address=\"example@example.com\",\n    password=\"somepassword\",\n    mailbox=\"INBOX\",\n    port=993,\n)\n\n# The EmailFilter itself and all of its fields are optional. Sensible defaults are chosen if left out.\nemail_filter = EmailFilter(\n    subject=\"daily report\",  # subject filtering is server specific - full string matches often won't work\n    sender=\"someone@gmail.com\",\n    messages_to_download=1,  # setting this to -1 will download all emails\n    oldest_first=False,  # whether to retrive the oldest emails first\n    delete_after_download=False,  # be careful setting this to True - emails are permanently removed!\n)\n\ndownloaded_emails = download_emails(\n    email_config=email_config,\n    email_filter=email_filter,\n)\n\nfor downloaded_email in downloaded_emails:\n    print(f\"sender: {downloaded_email.sender}\")\n    print(f\"date: {downloaded_email.date}\")\n    print(f\"subject: {downloaded_email.subject}\")\n    print(f\"content_type: {downloaded_email.content_type}\")\n    print(f\"body: {downloaded_email.body[:50]}\")\n    for attachment in downloaded_email.attachments:\n        print(f\"filename: {attachment.filename}\")\n```\n\nWhich produces:\n\n```\nsender: Daniel Tomlinson <dtomlinson@panaetius.co.uk>\ndate: Sat, 23 Apr 2022 20:55:31 +0100\nsubject: Download me using easy-email-sender\ncontent_type: text/html\nbody: Successfully downloaded using easy-email-sender!\nfilename: hello.jpg\n```\n\nSee below for more information on `EmailFilter`, `EmailConfig`, `download_emails` or see the docstrings.\n### EmailConfig\n\nCreate your `EmailConfig` instance:\n\nIf you know the mailbox you want to download from:\n\n```python\nemail_config = EmailConfig(\n    host=\"mail.example.com\", email_address=\"example@example.com\", password=\"somepassword\", mailbox=\"INBOX\", port=993\n)\n```\n\nIf you don't know the mailbox to download from, use `EmailConfig.list_mailboxes`\n\n```\nemail_config = EmailConfig(\n    host=\"mail.example.com\", email_address=\"example@example.com\", password=\"somepassword\", port=993\n)\nuser_mailboxes = email_config.list_mailboxes()\n```\n\nThis will return a list of strings of all the mailboxes in the user's account.\n\n`EmailConfig` supports the following arguments:\n\n```\nAttributes:\n    host (str): The host of the IMAP server.\n    email_address (str): The email address to login as.\n    password (str): The password.\n    mailbox (str): The mailbox to download emails from.\n    port (int): The IMAP port of the server.\n```\n\n### EmailFilter\n\nCreate an `EmailFilter` instance:\n\n```python\nemail_filter = EmailFilter(\n    subject=\"daily report\",\n    sender=\"someone@gmail.com\",\n    messages_to_download=1,\n    oldest_first=False,\n    delete_after_download=False,\n)\n```\n\n`subject` and `sender` are optional. Either both, one or none of `subject` and `sender` can be set. If neither are\nprovided all emails in the mailbox will be searched for.\n\n`EmailFilter` supports the following arguments:\n\n```\nAttributes:\n    subject (str | None, optional): The subject to filter by. Defaults to None.\n    sender (str | None, optional): The sender email address to filter by. Defaults to None.\n    messages_to_download (int, optional): The number of emails to download. If -1 will download all. Defaults to -1.\n    oldest_first (bool, optional): Whether to download emails starting with the oldest first. Defaults to False.\n    delete_after_download (bool, optional): Whether to delete the emails after successfully downloading. Defaults to False.\n```\n\nüö® Be careful with `delete_after_download` - be sure you want to delete the email before you run it. This calls\n`imaplib.IMAP4_SSL.expunge` which **permanently** deletes the email from the server.\n\n### download_emails\n\nDownload emails using the `EmailConfig` and `EmailFilter`:\n\n```python\ndownloaded_emails = download_emails(\n    email_config=email_config,\n    email_filter=email_filter,\n)\n```\n\nThis returns a list of `Email` objects.\n\nThe available attributes on an `Email` object are:\n\n```\nAttributes:\n    sender (str): The sender in the form `first_name last_name <email_address>`.\n    subject (str): The email subject.\n    date (str): The date the email was sent.\n    body (str): The content of the email. This is either in plaintext or as HTML.\n    attachments (List[Optional[Attachment]]): A list of attachments as\n        [Attachment][easy_email_downloader.models.Attachment] objects. If no attachments this is an empty list.\n    content_type (str): The content type. Either `text/plain` or `text/html`.\n```\n\nAttachments are stored as `Attachment` objects containing the `filename` and `contents` (in bytes).\n\nThese can be saved to disk:\n\n```\nfor attachment in downloaded_emails.attachments:\n    with open(f\"/some/path/{attachment.filename}\", mode=\"wb\") as attachment_contents:\n        attachment_contents.write(attachment.contents)\n```\n\n## TODO\n\n- ~~Extend attatchment logic to get filename of attatchment on server.~~ ‚úÖ\n  - ~~Useful to save attatchments to disk automatically without the user having to implement `file.open(mode=\"wb\")`.~~ ‚úÖ\n- CLI to download emails to json/csv etc.\n  - Should include a Dockerfile and an image published to Dockerhub.\n- Tests ü•±.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dtomlinson91/easy-email-downloader",
    "keywords": "email,download,imap",
    "license": "ISC",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easy-email-downloader",
    "package_url": "https://pypi.org/project/easy-email-downloader/",
    "platform": null,
    "project_url": "https://pypi.org/project/easy-email-downloader/",
    "project_urls": {
      "Documentation": "https://github.com/dtomlinson91/easy-email-downloader",
      "Homepage": "https://github.com/dtomlinson91/easy-email-downloader",
      "Repository": "https://github.com/dtomlinson91/easy-email-downloader"
    },
    "release_url": "https://pypi.org/project/easy-email-downloader/2.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.8,<4.0",
    "summary": "",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13923337,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64c71208d5f4fe1e803060c6c672423b58efaa387695378c2565b59ad34ea71e",
          "md5": "edbe5f64e8516b15603958d90250b34a",
          "sha256": "1e9c5d0502a028d349c544fd8b9a09b2f41ac4f98cecc2ab8722aba7034b3b2e"
        },
        "downloads": -1,
        "filename": "easy_email_downloader-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "edbe5f64e8516b15603958d90250b34a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 7914,
        "upload_time": "2022-04-24T22:52:57",
        "upload_time_iso_8601": "2022-04-24T22:52:57.611583Z",
        "url": "https://files.pythonhosted.org/packages/64/c7/1208d5f4fe1e803060c6c672423b58efaa387695378c2565b59ad34ea71e/easy_email_downloader-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74c2e86c19601fb1ee90c595af8aae626384bc6a7876527d2348cd5a614215c1",
          "md5": "c157b5d0db58489a862ce52da6f03c8e",
          "sha256": "38da948320de70a01d2f8456021c4052851d3818487581376999ee3b42a356ea"
        },
        "downloads": -1,
        "filename": "easy-email-downloader-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c157b5d0db58489a862ce52da6f03c8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 7627,
        "upload_time": "2022-04-24T22:52:55",
        "upload_time_iso_8601": "2022-04-24T22:52:55.787744Z",
        "url": "https://files.pythonhosted.org/packages/74/c2/e86c19601fb1ee90c595af8aae626384bc6a7876527d2348cd5a614215c1/easy-email-downloader-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c944b17cda38e5f8f381a6e679dbaea0d03da67819077d26ab4bb77b5c379a35",
          "md5": "0975b130722d110389cad536b2efd0e6",
          "sha256": "f04f7c29db4bd8a3514fc4c4b87b97e68ee4a851217d41e0bf06ca4e0d4d5621"
        },
        "downloads": -1,
        "filename": "easy_email_downloader-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0975b130722d110389cad536b2efd0e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 9940,
        "upload_time": "2022-05-24T16:32:53",
        "upload_time_iso_8601": "2022-05-24T16:32:53.870421Z",
        "url": "https://files.pythonhosted.org/packages/c9/44/b17cda38e5f8f381a6e679dbaea0d03da67819077d26ab4bb77b5c379a35/easy_email_downloader-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b8c20629722729504192719f647dc8b4ca25600fdd46f0d3b68f54dd9009e4d",
          "md5": "890a28432c867e0062e0963bbcb786dc",
          "sha256": "cdf875944afa570c9527ba22083806b7cb4e289c6c97de287fef68b408448cfb"
        },
        "downloads": -1,
        "filename": "easy-email-downloader-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "890a28432c867e0062e0963bbcb786dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 10023,
        "upload_time": "2022-05-24T16:32:51",
        "upload_time_iso_8601": "2022-05-24T16:32:51.400728Z",
        "url": "https://files.pythonhosted.org/packages/9b/8c/20629722729504192719f647dc8b4ca25600fdd46f0d3b68f54dd9009e4d/easy-email-downloader-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c944b17cda38e5f8f381a6e679dbaea0d03da67819077d26ab4bb77b5c379a35",
        "md5": "0975b130722d110389cad536b2efd0e6",
        "sha256": "f04f7c29db4bd8a3514fc4c4b87b97e68ee4a851217d41e0bf06ca4e0d4d5621"
      },
      "downloads": -1,
      "filename": "easy_email_downloader-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0975b130722d110389cad536b2efd0e6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 9940,
      "upload_time": "2022-05-24T16:32:53",
      "upload_time_iso_8601": "2022-05-24T16:32:53.870421Z",
      "url": "https://files.pythonhosted.org/packages/c9/44/b17cda38e5f8f381a6e679dbaea0d03da67819077d26ab4bb77b5c379a35/easy_email_downloader-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b8c20629722729504192719f647dc8b4ca25600fdd46f0d3b68f54dd9009e4d",
        "md5": "890a28432c867e0062e0963bbcb786dc",
        "sha256": "cdf875944afa570c9527ba22083806b7cb4e289c6c97de287fef68b408448cfb"
      },
      "downloads": -1,
      "filename": "easy-email-downloader-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "890a28432c867e0062e0963bbcb786dc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 10023,
      "upload_time": "2022-05-24T16:32:51",
      "upload_time_iso_8601": "2022-05-24T16:32:51.400728Z",
      "url": "https://files.pythonhosted.org/packages/9b/8c/20629722729504192719f647dc8b4ca25600fdd46f0d3b68f54dd9009e4d/easy-email-downloader-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}