{
  "info": {
    "author": "Batkhuu Byambajav",
    "author_email": "batkhuu10@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Python Validator (garlic_validator)\n\nCerberus and validator-collection based custom validator package (garlic_validator) for python projects.\n\n## Features\n\n* Validator-collection based validator - [https://pypi.org/project/validator-collection](https://pypi.org/project/validator-collection)\n* Cerberus schema validation - [https://pypi.org/project/Cerberus](https://pypi.org/project/Cerberus)\n* Pydantic validation - [https://pypi.org/project/pydantic](https://pypi.org/project/pydantic)\n* Custom validator module\n* is_empty, is_numpy, is_tensor, is_float, is_truthy, is_falsy, is_bool, is_attr_empty\n\n---\n\n## Installation\n\n### 1. Prerequisites\n\n* **Python (>= v3.7)**\n* **PyPi (>= v21)**\n\n### 2. Install garlic-validator\n\n#### A. [RECOMMENDED] PyPi install\n\n```sh\n# Install or upgrade garlic-validator package:\npip install --upgrade garlic-validator\n\n# To uninstall package:\npip uninstall -y garlic-validator\n```\n\n#### B. Manually add to PYTHONPATH (Recommended for development)\n\n```sh\n# Clone repository by git:\ngit clone https://github.com/bybatkhuu/python_validator.git garlic_validator\ncd garlic_validator\n\n# Install python dependencies:\npip install --upgrade pip\ncat requirements.txt | xargs -n 1 -L 1 pip install --no-cache-dir\n\n# Add current path to PYTHONPATH:\nexport PYTHONPATH=\"${PWD}:${PYTHONPATH}\"\n```\n\n#### C. Manually compile and setup (Not recommended)\n\n```sh\n# Clone repository by git:\ngit clone https://github.com/bybatkhuu/python_validator.git garlic_validator\ncd garlic_validator\n\n# Building python package:\npip install --upgrade pip setuptools wheel\npython setup.py build\n# Install python dependencies with built package to current python environment:\npython setup.py install --record installed_files.txt\n\n# To remove only installed garlic-validator package:\nhead -n 1 installed_files.txt | xargs rm -vrf\n# Or to remove all installed files and packages:\ncat installed_files.txt | xargs rm -vrf\n```\n\n## Usage/Examples\n\n**garlic-validator** and **validator-collection**:\n\n```python\nimport numpy as np\nfrom garlic_validator import validators, checkers, errors\n\ntry:\n    email_address = validators.email('test@domain.dev')\n    # The value of email_address will now be \"test@domain.dev\"\n\n    email_address = validators.email('this-is-an-invalid-email')\n    # Will raise a ValueError\n\n    email_address = validators.email(None)\n    # Will raise an EmptyValueError\nexcept errors.EmptyValueError:\n    # Handling logic goes here\n    print('Email address is empty')\nexcept errors.InvalidEmailError:\n    # More handlign logic goes here\n    print('Invalid email address')\n\nemail_address = validators.email(None, allow_empty=True)\nprint(email_address)\n# The value of email_address will now be None\n\nemail_address = validators.email('', allow_empty=True)\nprint(email_address)\n# The value of email_address will now be None\n\nis_email_address = checkers.is_email('test@domain.dev')\nprint(is_email_address)\n# The value of is_email_address will now be True\n\nis_email_address = checkers.is_email('this-is-an-invalid-email')\nprint(is_email_address)\n# The value of is_email_address will now be False\n\nis_email_address = checkers.is_email(None)\nprint(is_email_address)\n# The value of is_email_address will now be False\n\n\n## Custom validators:\n## is_empty(val, trim_str=False)\nis_empty = checkers.is_empty(None)\n# True\n\nis_empty = checkers.is_empty('')\n# True\n\nis_empty = checkers.is_empty('    ')\n# False\n\nis_empty = checkers.is_empty('    ', trim_str=True)\n# True\n\nis_empty = checkers.is_empty([])\n# True\n\nis_empty = checkers.is_empty({})\n# True\n\nis_empty = checkers.is_empty(())\n# True\n\nis_empty = checkers.is_empty(set())\n# True\n\nis_empty = checkers.is_empty(range(0))\n# True\n\nis_empty = checkers.is_empty(np.array([]))\n# True\n\n\n## is_numpy(val)\nis_numpy = checkers.is_numpy(np.array([]))\n# True\n\nis_numpy = checkers.is_numpy(np.array([1, 2, 3]))\n# True\n\nis_numpy = checkers.is_numpy(None)\n# False\n\n\n## is_float(val)\nis_float = checkers.is_float(1)\n# True\n\nis_float = checkers.is_float(-1.1123)\n# True\n\nis_float = checkers.is_float(1e+123)\n# True\n\nis_float = checkers.is_float('0123.000')\n# True\n\nis_float = checkers.is_float('1e+12')\n# True\n\nis_float = checkers.is_float('2002_12')\n# False\n\n\n## is_truthy(val)\nis_truthy = checkers.is_truthy(True)\n# True\n\nis_truthy = checkers.is_truthy(1)\n# True\n\nis_truthy = checkers.is_truthy('1')\n# True\n\nis_truthy = checkers.is_truthy('1.0')\n# True\n\nis_truthy = checkers.is_truthy('TRUE')\n# True\n\nis_truthy = checkers.is_truthy('True')\n# True\n\nis_truthy = checkers.is_truthy('true')\n# True\n\nis_truthy = checkers.is_truthy('YES')\n# True\n\nis_truthy = checkers.is_truthy('Yes')\n# True\n\nis_truthy = checkers.is_truthy('yes')\n# True\n\nis_truthy = checkers.is_truthy('Y')\n# True\n\nis_truthy = checkers.is_truthy('y')\n# True\n\nis_truthy = checkers.is_truthy(1.1)\n# False\n\nis_truthy = checkers.is_truthy([1])\n# False\n\nis_truthy = checkers.is_truthy(False)\n# False\n\n\n## is_falsy(val)\nis_falsy = checkers.is_falsy(False)\n# True\n\nis_falsy = checkers.is_falsy(0)\n# True\n\nis_falsy = checkers.is_falsy('0')\n# True\n\nis_falsy = checkers.is_falsy('0.0')\n# True\n\nis_falsy = checkers.is_falsy('FALSE')\n# True\n\nis_falsy = checkers.is_falsy('False')\n# True\n\nis_falsy = checkers.is_falsy('false')\n# True\n\nis_falsy = checkers.is_falsy('NO')\n# True\n\nis_falsy = checkers.is_falsy('No')\n# True\n\nis_falsy = checkers.is_falsy('no')\n# True\n\nis_falsy = checkers.is_falsy('N')\n# True\n\nis_falsy = checkers.is_falsy('n')\n# True\n\nis_falsy = checkers.is_falsy(2)\n# False\n\nis_falsy = checkers.is_falsy('a')\n# False\n\nis_falsy = checkers.is_falsy(True)\n# False\n\n\n## is_bool(val, coerce_value=False)\nis_bool = checkers.is_bool(True)\n# True\n\nis_bool = checkers.is_bool(False)\n# True\n\nis_bool = checkers.is_bool(1)\n# False\n\nis_bool = checkers.is_bool('1', coerce_value=True)\n# True\n\nis_bool = checkers.is_bool('NO', coerce_value=True)\n# True\n```\n\n**Cerberus**:\n\n```python\nfrom cerberus import Validator\n\nv = Validator({ 'name': { 'type': 'string' } })\nprint(v.validate({ 'name': 'john doe' }))\n# True\n\nv.schema = {'amount': {'type': 'integer'}}\nprint(v.validate({'amount': '1'}))\n# False\nprint(v.errors)\n# {'amount': ['must be of integer type']}\n\nv.schema = {'amount': {'type': 'integer', 'coerce': int}}\nprint(v.validate({'amount': '1'}))\n# True\nprint(v.document)\n# {'amount': 1}\n\nto_bool = lambda v: v.lower() in ('true', '1')\nv.schema = {'flag': {'type': 'boolean', 'coerce': (str, to_bool)}}\nprint(v.validate({'flag': 'true'}))\n# True\nprint(v.document)\n# {'flag': True}\n```\n\n**pydantic**:\n\n```python\nfrom pydantic import validate_arguments, ValidationError\n\n@validate_arguments\ndef repeat(s: str, count: int, *, separator: bytes = b'') -> bytes:\n    b = s.encode()\n    return separator.join(b for _ in range(count))\n\n\na = repeat('hello', 3)\nprint(a)\n#> b'hellohellohello'\n\nb = repeat('x', '4', separator=' ')\nprint(b)\n#> b'x x x x'\n\ntry:\n    c = repeat('hello', 'wrong')\nexcept ValidationError as exc:\n    print(exc)\n    \"\"\"\n    1 validation error for Repeat\n    count\n      value is not a valid integer (type=type_error.integer)\n    \"\"\"\n```\n\n---\n\n## Running Tests\n\nTo run tests, run the following command:\n\n```sh\npytest\n```\n\n---\n\n## References\n\n* [https://validator-collection.readthedocs.io/en/latest/index.html](https://validator-collection.readthedocs.io/en/latest/index.html)\n* [https://github.com/insightindustry/validator-collection](https://github.com/insightindustry/validator-collection)\n* [https://pydantic-docs.helpmanual.io](https://pydantic-docs.helpmanual.io)\n* [https://github.com/samuelcolvin/pydantic](https://github.com/samuelcolvin/pydantic)\n* [https://docs.python-cerberus.org/en/stable](https://docs.python-cerberus.org/en/stable)\n* [https://github.com/pyeve/cerberus](https://github.com/pyeve/cerberus)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/bybatkhuu/python_validator/archive/v1.0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bybatkhuu/python_validator",
    "keywords": "garlic_validator,validator,validators,validate,validation,data-validation,Cerberus,validator-collection,custom-validator",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "garlic-validator",
    "package_url": "https://pypi.org/project/garlic-validator/",
    "platform": null,
    "project_url": "https://pypi.org/project/garlic-validator/",
    "project_urls": {
      "Download": "https://github.com/bybatkhuu/python_validator/archive/v1.0.1.tar.gz",
      "Homepage": "https://github.com/bybatkhuu/python_validator"
    },
    "release_url": "https://pypi.org/project/garlic-validator/1.0.1/",
    "requires_dist": [
      "Cerberus (>=1.3.4)",
      "pydantic (>=1.9.1)",
      "importlib-metadata (>=4.12.0)",
      "jsonschema (>=4.6.0)",
      "validator-collection (>=1.5.0)"
    ],
    "requires_python": "",
    "summary": "Cerberus and validator-collection based custom validator package (garlic_validator) for python projects.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14602926,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32efd5eccd3abe6880cabecbc4429f02976f5057b6efd81ad74be66daa34158f",
          "md5": "f293796ddd006df672ef1ed544719931",
          "sha256": "cb5338031675481c6154b603ddd0db211bcdae571ad9febd5905e453d08c27e3"
        },
        "downloads": -1,
        "filename": "garlic_validator-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f293796ddd006df672ef1ed544719931",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6312,
        "upload_time": "2022-06-28T09:40:36",
        "upload_time_iso_8601": "2022-06-28T09:40:36.715356Z",
        "url": "https://files.pythonhosted.org/packages/32/ef/d5eccd3abe6880cabecbc4429f02976f5057b6efd81ad74be66daa34158f/garlic_validator-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9bbcbe02d0c2028288bf1d237e123b37fcc2560a34960f417b475ebf110c94e",
          "md5": "3ec6caadc89eeb3c0a1c6742d185585d",
          "sha256": "8924050afa1ae72614430dc120c149acbab02e4ee99851f02b8648cf5e6f61a8"
        },
        "downloads": -1,
        "filename": "garlic_validator-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3ec6caadc89eeb3c0a1c6742d185585d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6200,
        "upload_time": "2022-06-28T09:40:38",
        "upload_time_iso_8601": "2022-06-28T09:40:38.051083Z",
        "url": "https://files.pythonhosted.org/packages/e9/bb/cbe02d0c2028288bf1d237e123b37fcc2560a34960f417b475ebf110c94e/garlic_validator-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22b643667bc02ca6027f415ae6f5520eb151edf849a538950b7f81f89bbe00d7",
          "md5": "caa463cdb888c7d449ca152557d6a9f6",
          "sha256": "4abc34c65f055f6883aae42e7a38cb0af408fed22e29a1e95f9c521b0a1653aa"
        },
        "downloads": -1,
        "filename": "garlic_validator-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "caa463cdb888c7d449ca152557d6a9f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6367,
        "upload_time": "2022-07-31T07:33:04",
        "upload_time_iso_8601": "2022-07-31T07:33:04.738442Z",
        "url": "https://files.pythonhosted.org/packages/22/b6/43667bc02ca6027f415ae6f5520eb151edf849a538950b7f81f89bbe00d7/garlic_validator-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "975664207d0b10ed90497d8194e1e5f97ed28b65a4e50d564384ff938b6478be",
          "md5": "db9b6cfddd11146bf8cc873e2eb2ee59",
          "sha256": "664113b958f7a67e1ff6dc8329fef22e39685cfbf4f3f3461a9717ffb91569c2"
        },
        "downloads": -1,
        "filename": "garlic_validator-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "db9b6cfddd11146bf8cc873e2eb2ee59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6249,
        "upload_time": "2022-07-31T07:33:06",
        "upload_time_iso_8601": "2022-07-31T07:33:06.585563Z",
        "url": "https://files.pythonhosted.org/packages/97/56/64207d0b10ed90497d8194e1e5f97ed28b65a4e50d564384ff938b6478be/garlic_validator-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22b643667bc02ca6027f415ae6f5520eb151edf849a538950b7f81f89bbe00d7",
        "md5": "caa463cdb888c7d449ca152557d6a9f6",
        "sha256": "4abc34c65f055f6883aae42e7a38cb0af408fed22e29a1e95f9c521b0a1653aa"
      },
      "downloads": -1,
      "filename": "garlic_validator-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "caa463cdb888c7d449ca152557d6a9f6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6367,
      "upload_time": "2022-07-31T07:33:04",
      "upload_time_iso_8601": "2022-07-31T07:33:04.738442Z",
      "url": "https://files.pythonhosted.org/packages/22/b6/43667bc02ca6027f415ae6f5520eb151edf849a538950b7f81f89bbe00d7/garlic_validator-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "975664207d0b10ed90497d8194e1e5f97ed28b65a4e50d564384ff938b6478be",
        "md5": "db9b6cfddd11146bf8cc873e2eb2ee59",
        "sha256": "664113b958f7a67e1ff6dc8329fef22e39685cfbf4f3f3461a9717ffb91569c2"
      },
      "downloads": -1,
      "filename": "garlic_validator-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "db9b6cfddd11146bf8cc873e2eb2ee59",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6249,
      "upload_time": "2022-07-31T07:33:06",
      "upload_time_iso_8601": "2022-07-31T07:33:06.585563Z",
      "url": "https://files.pythonhosted.org/packages/97/56/64207d0b10ed90497d8194e1e5f97ed28b65a4e50d564384ff938b6478be/garlic_validator-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}