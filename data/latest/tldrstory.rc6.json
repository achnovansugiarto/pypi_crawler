{
  "info": {
    "author": "NeuML",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development",
      "Topic :: Text Processing :: Indexing",
      "Topic :: Utilities"
    ],
    "description": "<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/neuml/tldrstory/master/logo.png\"/>\n</p>\n\n<h3 align=\"center\">\n    <p>AI-powered understanding of headlines and story text</p>\n</h3>\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------\n\ntldrstory is a framework for AI-powered understanding of headlines and text content related to stories. tldrstory applies zero-shot labeling over text, which allows dynamically categorizing content. This framework also builds a txtai index that enables text similarity search. A customizable Streamlit application and FastAPI backend service allows users to review and analyze the data processed.\n\ntldrstory has a corresponding [Medium article](https://towardsdatascience.com/tldrstory-ai-powered-understanding-of-headlines-and-story-text-fc86abd702fc) that covers the concepts in this README and more. Check it out!\n\n## Examples\n\nThe following links are example applications built with tldrstory. These demos can also be found on https://tldrstory.com\n\n- [Mobile Tech News](https://tldrstory.com/mobile-tech) [(Configuration files)](https://github.com/neuml/tldrstory/tree/master/apps)\n\n<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/neuml/tldrstory/master/apps/devices/demo.gif\"/>\n</p>\n\n- [Sports News](https://tldrstory.com/sports) [(Configuration files)](https://github.com/neuml/tldrstory/tree/master/apps)\n\n<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/neuml/tldrstory/master/apps/sports/demo.gif\"/>\n</p>\n\n## Installation\n\nThe easiest way to install is via pip and PyPI\n\n    pip install tldrstory\n\nYou can also install tldrstory directly from GitHub. Using a Python Virtual Environment is recommended.\n\n    pip install git+https://github.com/neuml/tldrstory\n\nPython 3.6+ is supported\n\nSee [this link](https://github.com/neuml/txtai#installation) to help resolve environment-specific install issues.\n\n## Configurating an application\n\nOnce installed, an application must be configured to run. A tldrstory application consists of three separate processes:\n\n- Indexing\n- API backend\n- Streamlit application\n\nThis section will show how to start the \"Sports News\" application.\n\n1. Download the ‚ÄúSports News‚Äù application configuration.\n\n```bash\nmkdir sports\n\nwget https://raw.githubusercontent.com/neuml/tldrstory/master/apps/sports/app.yml -O sports/app.yml\n\nwget https://raw.githubusercontent.com/neuml/tldrstory/master/apps/sports/api.yml -O sports/api.yml\n\nwget https://raw.githubusercontent.com/neuml/tldrstory/master/apps/sports/index-simple.yml -O sports/index.yml\n\nwget https://raw.githubusercontent.com/neuml/tldrstory/master/src/python/tldrstory/app.py -O sports/app.py\n```\n\n2. Start the indexing process.\n\n```bash\npython -m tldrstory.index sports/index.yml\n```\n\n3. Start the API process.\n\n```bash\nCONFIG=sports/api.yml API_CLASS=tldrstory.api.API uvicorn \"txtai.api:app\" &\n```\n\n4. Start Streamlit.\n\n```bash\nstreamlit run sports/app.py sports/app.yml \"Sports\" \"üèÜ\"\n```\n\n5. Open a web browser and go to http://localhost:8501\n\n## Custom Sources\n\nOut of the box, tldrstory supports reading data from RSS and the Reddit API. Additional data sources can be defined and configured.\n\nThe following shows an example custom data source definition. [neuspo](https://neuspo.com) is a real-time sports event and news application.\nThis data source loads 4 pre-defined entries into the articles database.\n\n```python\nfrom tldrstory.source.source import Source\n\nclass Neuspo(Source):\n    \"\"\"\n    Articles have the following schema:\n        uid - unique id\n        source - source name\n        date - article date\n        title - article title\n        url - reference url for data\n        entry - entry date\n    \"\"\"\n\n    def run(self):\n        # List of articles created\n        articles = []\n\n        articles.append(self.article(\"0\", \"Neuspo\", self.now(), \"Eagles defeat the Giants 22 - 21\", \n                                     \"https://neuspo.com/stream/34952e3919d685982c17735018b0197f\", self.now()))\n\n        articles.append(self.article(\"1\", \"Neuspo\", self.now(), \"Giants lose to the Eagles 22 - 21\", \n                                     \"https://t.co/e9FFgo0wgR?amp=1\", self.now()))\n\n        articles.append(self.article(\"2\", \"Neuspo\", self.now(), \"Rays beat Dodgers 6 to 4\", \n                                     \"https://neuspo.com/stream/6cb820b3ebadc086aa36b5cc4a0f575d\", self.now()))\n\n        articles.append(self.article(\"3\", \"Neuspo\", self.now(), \"Dodgers drop Game 2, 6-4\", \n                                     \"https://t.co/1hEQAShVnP?amp=1\", self.now()))\n\n        return articles\n```\n\nLet‚Äôs re-run the steps above using neuspo as the data source. First remove the sports/data directory, to ensure we create a fresh database. We can then download the gist above into the sports directory.\n\n```bash\n# Delete the sports/data directory before running\n\nwget https://gist.githubusercontent.com/davidmezzetti/9a6064d9a741acb89bd46eba9f906c26/raw/7058e97da82571005b2654b4ab908f25b9a04fe2/neuspo.py -O sports/neuspo.py\n```\n\nEdit sports/index.yml and remove the rss section. Replace it with the following.\n\n```yaml\n# Custom data source for neuspo\nsource: sports.neuspo.Neuspo\n```\n\nNow re-run steps 2‚Äì4 from the [instructions above](#configurating-an-application).\n\n## Parameter Reference\n\nThe following sections define configuration parameters for each process that is part of a tldrstory application.\n\n## Indexing\n\nConfigures the indexing of content. Currently supports pulling data via the Reddit API, RSS and custom user-defined sources.\n\n### name\n```yaml\nname: string\n```\n\nApplication name\n\n### schedule\n```yaml\nschedule: string\n```\n\nCron-style string that enables scheduled running of the indexing job. See [this link](https://en.wikipedia.org/wiki/Cron) for more information on cron strings.\n\n### sources\n\nData source configuration.\n\n#### reddit\n```yaml\nreddit.subreddit: name of subreddit to pull from \nreddit.sort: sort type\nreddit.time: time range\nreddit.queries: list of text queries to run\n```\n\nRuns a series of Reddit API queries. A Reddit API key will need to be created and configured for this method to work. Authentication parameters can be set within the enviroment or in a praw.ini file. See [this link](https://praw.readthedocs.io/en/latest/getting_started/quick_start.html) for more information on setting up a Reddit API account, read-only access is all that is needed.\n\nSee [PRAW documentation](https://praw.readthedocs.io/en/latest/code_overview/models/subreddit.html) for more details on how to configure the query settings.\n\n#### rss\n```yaml\nrss: list of RSS urls\n```\n\nReads a series of RSS feeds and builds articles for each article link found.\n\n#### source\n```yaml\nsource: string\n```\n\nConfigures a custom source. This parameter takes a full class path as a string, for example \"tldrstory.source.rss.RSS\"\n\nCustom sources can be use any data that has a date, text string and reference url. See the documentation in [source.py](https://github.com/neuml/tldrstory/blob/master/src/python/tldrstory/source/source.py) for information on how to create a custom source. [rss.py](https://github.com/neuml/tldrstory/blob/master/src/python/tldrstory/source/rss.py) and [reddit.py](https://github.com/neuml/tldrstory/blob/master/src/python/tldrstory/source/reddit.py) are example implementations.\n\n### ignore\n```yaml\nignore: list of url patterns\n```\n\nList of url patterns to ignore. Supports strings and regular expressions.\n\n### labels\n```yaml\nlabels: dict\n```\n\nLabel configuration for zero-shot classifier. This configuration sets a category along with a list of topic values.\n\nExample:\n\n```yaml\nlabels:\n  topic:\n    values: [Label 1, Label 2]\n```\n\nThe example above configures the category \"Topic\" with two possible labels, \"Label 1\" and \"Label 2\". Any label can be set here and a large-scale\nNLP model will be used to categorize input text into those labels.\n\n### path\n```yaml\npath: string\n```\n\nWhere to store model output, path will be created if it doesn't already exist. \n\n### embeddings\n```yaml\nembeddings: dict\n```\n\nConfigures a txtai index used for searching topics. See [txtai configuration](https://github.com/neuml/txtai#configuration) for more details on this. \n\n## API\n\nConfigures a FastAPI backed interface for pulling indexed data.\n\n### path\n```yaml\npath: string\n```\n\nPath to a model index.\n\n## Application\n\nThe default application is powered by Streamlit and driven by a YAML configuration file. The configuration file sets the application name, API endpoint for pulling content, and component configuration. A custom Streamlit application or any other application can be used in place of this to pull content from the API endpoint directly.\n\n### name\n```yaml\nname: string\n```\n\nApplication name\n\n### api\n```yaml\napi: url\n```\n\nAPI endpoint for pulling content. \n\n### layout\n```yaml\ndescription: string\n```\n\nMarkdown string that is used to build a sidebar description.\n\n#### queries\n```yaml\nqueries.name: Queries drop down header\nqueries.values: List of values to use for queries drop down\n```\n\nConfigures the query drop down box. This should be a list of pre-canned queries to use. If a value of \"Latest\" is present, it will query for the last N\narticles. If a value of \"--Search--\" is present, it will present another text box to allow entering custom queries.\n\n#### filters\n```yaml\nfilters: list\n```\n\nList of slider filters. This should map to the zero-shot labels configured in the indexing section.\n\n#### chart\n```yaml\nchart.name: Chart name\nchart.x: Chart x-axis column\nchart.y: Chart y-axis column\nchart.scale: Color scale for list of colors\nchart.colors: List of colors\n```\n\nAllows configuration of a scatter plot that graphs two label points. This chart can be used to plot and apply coloring to applied labels.\n\n#### table\n```yaml\n\"column name\": dynamic range of coloring\n```\n\nData table that shows result details. In addition to default columns, this section allows adding additional columns based on the zero-shot\nlabels applied. The default mode is to show the numeric value of the label but a range of text labels can also be applied.\n\nFor example:\n  - [0, 5.0, Label 1, \"color: #F00\"]\n  - [5.0, 10.0, Label 2, \"color: #0F0\"]\n\nThe above would output the text \"Label 1\" in red for values between 0 and 5. Values between 5 and 10 would output the text \"Label 2\" in green. \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/neuml/tldrstory",
    "keywords": "search embedding machine-learning nlp",
    "license": "Apache 2.0: http://www.apache.org/licenses/LICENSE-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tldrstory",
    "package_url": "https://pypi.org/project/tldrstory/",
    "platform": "",
    "project_url": "https://pypi.org/project/tldrstory/",
    "project_urls": {
      "Documentation": "https://github.com/neuml/tldrstory",
      "Homepage": "https://github.com/neuml/tldrstory",
      "Issue Tracker": "https://github.com/neuml/tldrstory/issues",
      "Source Code": "https://github.com/neuml/tldrstory"
    },
    "release_url": "https://pypi.org/project/tldrstory/1.4.0/",
    "requires_dist": [
      "croniter (>=0.3.34)",
      "feedparser (>=6.0.1)",
      "praw (>=7.1.0)",
      "requests (>=2.24.0)",
      "streamlit (>=0.68.0)",
      "txtai[api] (>=3.2.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "AI-powered understanding of headlines and story text",
    "version": "1.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11206531,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3794a1666ee248a89842f13e4d78210b133753523e4747c2c91400857faf796",
          "md5": "c420961fe94892b464de73b1819a25c6",
          "sha256": "e5a387bef13b537d1ba51b9df04cbdec71d11e90802e23bde18df40da58edbd1"
        },
        "downloads": -1,
        "filename": "tldrstory-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c420961fe94892b464de73b1819a25c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15656,
        "upload_time": "2020-10-13T13:35:46",
        "upload_time_iso_8601": "2020-10-13T13:35:46.150909Z",
        "url": "https://files.pythonhosted.org/packages/c3/79/4a1666ee248a89842f13e4d78210b133753523e4747c2c91400857faf796/tldrstory-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "875d75b2656848d096857166e4f5e3ea643f5a7301513d4dcc7a64367a46e87c",
          "md5": "6c474f29123d0e6217dbeddc5371a4bf",
          "sha256": "7f506c84e85d46ce9b57521e41223350a4b3622a13f1f7837871fe4ee6f24c6f"
        },
        "downloads": -1,
        "filename": "tldrstory-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6c474f29123d0e6217dbeddc5371a4bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12470,
        "upload_time": "2020-10-13T13:35:48",
        "upload_time_iso_8601": "2020-10-13T13:35:48.986774Z",
        "url": "https://files.pythonhosted.org/packages/87/5d/75b2656848d096857166e4f5e3ea643f5a7301513d4dcc7a64367a46e87c/tldrstory-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18d2840c08beddf89a3192c3c3270bbe71ce80090cbf634bb2b51672e271af48",
          "md5": "73cf1e7e4a895a114306effd319e81cc",
          "sha256": "7e59c8146ca560bc23d122f81df2bc460dc3fc1c753ade6f8b1c8788b848061e"
        },
        "downloads": -1,
        "filename": "tldrstory-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73cf1e7e4a895a114306effd319e81cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15654,
        "upload_time": "2020-10-13T14:08:28",
        "upload_time_iso_8601": "2020-10-13T14:08:28.456526Z",
        "url": "https://files.pythonhosted.org/packages/18/d2/840c08beddf89a3192c3c3270bbe71ce80090cbf634bb2b51672e271af48/tldrstory-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12c573e62571f4dac40073fbba6041752fad31f4d3239d1409e507caefcba674",
          "md5": "54364b73b2595d271e15779e7320fbe8",
          "sha256": "7b5bd6b95edc150a731106c45f2fe1276c0bdc450976b79de465da47a131f75a"
        },
        "downloads": -1,
        "filename": "tldrstory-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "54364b73b2595d271e15779e7320fbe8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12472,
        "upload_time": "2020-10-13T14:08:29",
        "upload_time_iso_8601": "2020-10-13T14:08:29.674975Z",
        "url": "https://files.pythonhosted.org/packages/12/c5/73e62571f4dac40073fbba6041752fad31f4d3239d1409e507caefcba674/tldrstory-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67d236580c1e4f37f40be1bbf0bfe96fb1f905c1954fd99c52cf9618f2f2d5b8",
          "md5": "9d34fe4fe8e42320da65acb9ef746cde",
          "sha256": "e8a09a4ba40cb2960f01107af552be73e1c142d1309ae1e1fd10712b5984887c"
        },
        "downloads": -1,
        "filename": "tldrstory-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d34fe4fe8e42320da65acb9ef746cde",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19416,
        "upload_time": "2020-10-22T22:56:27",
        "upload_time_iso_8601": "2020-10-22T22:56:27.547423Z",
        "url": "https://files.pythonhosted.org/packages/67/d2/36580c1e4f37f40be1bbf0bfe96fb1f905c1954fd99c52cf9618f2f2d5b8/tldrstory-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "874fad8fea32c2db970af4f315da4541ab28a3a14a9fa16e2a9aba143e58d5d5",
          "md5": "e4d8ba35e505669e964471500cf738cf",
          "sha256": "e96c210377a9b45fa8b799a25d93a3bf7a18f2cc44ac20bb209782ff12243d1c"
        },
        "downloads": -1,
        "filename": "tldrstory-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e4d8ba35e505669e964471500cf738cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16237,
        "upload_time": "2020-10-22T22:56:29",
        "upload_time_iso_8601": "2020-10-22T22:56:29.174308Z",
        "url": "https://files.pythonhosted.org/packages/87/4f/ad8fea32c2db970af4f315da4541ab28a3a14a9fa16e2a9aba143e58d5d5/tldrstory-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "426d5e3b0b5ea4269a351dd693adb39873c784b5d4859a6d52f3e20c93944d7d",
          "md5": "34722e03916e2a8983326a38ab2aa757",
          "sha256": "feb651cbcb744cfdbb1bfad26b0f774181c65ed95423587d19839ebffaa965e8"
        },
        "downloads": -1,
        "filename": "tldrstory-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34722e03916e2a8983326a38ab2aa757",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20088,
        "upload_time": "2020-11-21T02:03:46",
        "upload_time_iso_8601": "2020-11-21T02:03:46.274491Z",
        "url": "https://files.pythonhosted.org/packages/42/6d/5e3b0b5ea4269a351dd693adb39873c784b5d4859a6d52f3e20c93944d7d/tldrstory-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c14f6387340838f1011f0869427fbf9ccfa30a3965efb4cf95da205eb54c785a",
          "md5": "376281a0adf9cb39b650b9c9acc12f18",
          "sha256": "868df9e4a31bd0bfbb0e19768eecbda9f669fdf69f84fd87328043513afdc016"
        },
        "downloads": -1,
        "filename": "tldrstory-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "376281a0adf9cb39b650b9c9acc12f18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17631,
        "upload_time": "2020-11-21T02:03:47",
        "upload_time_iso_8601": "2020-11-21T02:03:47.718427Z",
        "url": "https://files.pythonhosted.org/packages/c1/4f/6387340838f1011f0869427fbf9ccfa30a3965efb4cf95da205eb54c785a/tldrstory-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94cda8e6e20321df3059dce3143ce4154317f88c4c94a5c41480570db18cc444",
          "md5": "6964e30d1a4c05804655f4b7b6a2dc44",
          "sha256": "eea6f5163706cf6a6ee307f1a62114d28dd6c674d5c80a663cebaa38e5544cc1"
        },
        "downloads": -1,
        "filename": "tldrstory-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6964e30d1a4c05804655f4b7b6a2dc44",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20082,
        "upload_time": "2021-01-13T15:59:34",
        "upload_time_iso_8601": "2021-01-13T15:59:34.169341Z",
        "url": "https://files.pythonhosted.org/packages/94/cd/a8e6e20321df3059dce3143ce4154317f88c4c94a5c41480570db18cc444/tldrstory-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b41f7b536b015fa6a0bd407af9f5348e4a8e58795b603b51f431234db9f620c",
          "md5": "55327389a976c09dbf2ab9def1964c56",
          "sha256": "74659d96a7e18c27fe6101d006c7ae653f7e7830210feea3bc2405b7a10b6477"
        },
        "downloads": -1,
        "filename": "tldrstory-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "55327389a976c09dbf2ab9def1964c56",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17579,
        "upload_time": "2021-01-13T15:59:35",
        "upload_time_iso_8601": "2021-01-13T15:59:35.352506Z",
        "url": "https://files.pythonhosted.org/packages/7b/41/f7b536b015fa6a0bd407af9f5348e4a8e58795b603b51f431234db9f620c/tldrstory-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "105a2730b9da66a9188647ccf2f513ff2f5f476d19a98b49db4cdc21f74bc354",
          "md5": "7376caa658494de905473f875a698cbd",
          "sha256": "dde3938e3b87cdcea557e214d598c3e88ce7729cad0309e84de0217c3b7ceb2f"
        },
        "downloads": -1,
        "filename": "tldrstory-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7376caa658494de905473f875a698cbd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20122,
        "upload_time": "2021-08-18T00:50:15",
        "upload_time_iso_8601": "2021-08-18T00:50:15.978156Z",
        "url": "https://files.pythonhosted.org/packages/10/5a/2730b9da66a9188647ccf2f513ff2f5f476d19a98b49db4cdc21f74bc354/tldrstory-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2b11fb15e8c35fd2c2c9bb1bfee572ca6c0f4b4170634fe7297cc3d2b706825",
          "md5": "d43b72bb74a72f698bb1f8e2afda89ca",
          "sha256": "eba73978ade8936cfc1112d4a79a668c362a06bf7f40030eb45477b14f0dfdbc"
        },
        "downloads": -1,
        "filename": "tldrstory-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d43b72bb74a72f698bb1f8e2afda89ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17674,
        "upload_time": "2021-08-18T00:50:17",
        "upload_time_iso_8601": "2021-08-18T00:50:17.078962Z",
        "url": "https://files.pythonhosted.org/packages/d2/b1/1fb15e8c35fd2c2c9bb1bfee572ca6c0f4b4170634fe7297cc3d2b706825/tldrstory-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "105a2730b9da66a9188647ccf2f513ff2f5f476d19a98b49db4cdc21f74bc354",
        "md5": "7376caa658494de905473f875a698cbd",
        "sha256": "dde3938e3b87cdcea557e214d598c3e88ce7729cad0309e84de0217c3b7ceb2f"
      },
      "downloads": -1,
      "filename": "tldrstory-1.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7376caa658494de905473f875a698cbd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20122,
      "upload_time": "2021-08-18T00:50:15",
      "upload_time_iso_8601": "2021-08-18T00:50:15.978156Z",
      "url": "https://files.pythonhosted.org/packages/10/5a/2730b9da66a9188647ccf2f513ff2f5f476d19a98b49db4cdc21f74bc354/tldrstory-1.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d2b11fb15e8c35fd2c2c9bb1bfee572ca6c0f4b4170634fe7297cc3d2b706825",
        "md5": "d43b72bb74a72f698bb1f8e2afda89ca",
        "sha256": "eba73978ade8936cfc1112d4a79a668c362a06bf7f40030eb45477b14f0dfdbc"
      },
      "downloads": -1,
      "filename": "tldrstory-1.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d43b72bb74a72f698bb1f8e2afda89ca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17674,
      "upload_time": "2021-08-18T00:50:17",
      "upload_time_iso_8601": "2021-08-18T00:50:17.078962Z",
      "url": "https://files.pythonhosted.org/packages/d2/b1/1fb15e8c35fd2c2c9bb1bfee572ca6c0f4b4170634fe7297cc3d2b706825/tldrstory-1.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}