{
  "info": {
    "author": "Federico Claudi",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# pyrnn\nRNNs in pytorch: training, analysis and visualization. \n\nThis code represents my efforts to explore and understands RNNs, mostly from a dynamical systems perspective. \nIt's made freely available in the hope that it might be helpful for others interested in the same topics, but with no guarantee about anything that the software does.\n\n## Installation\n```\npip install git+https://github.com/FedeClaudi/pyrnn.git\n```\n\nor clone this repository to also have the examples scripts.\n\n\n\n# Features\n## RNN model design\n`pyrnn` currently implements two `RNN` classes and provides a flexible framework for developing new ones. \nAll `RNN` classes can subclass `pyrnn._rnn.RNNBase` as the main RNN class. \n`RNNBase` takes care of many generally useful tasks like implementing constraints on recurrent weights, training the network, loading/saving trained networks etc.\n\nThe hidden state of the main `RNN` class is update with:\n\n$$\n    h(t) = \\tanh(W_{in} X + W_{rec} h(t-1) + b_{rec})\n$$\n\nand the output is a linear combination of the hidden state\n$$\n    o(t) = W_{out} h(t)\n$$\n\n\nwhere $W_{rec}$ and $b_{rec}$ are the recurrent weights and bias for the recurrent network and are the only trainable parameters (though the other can be made trainable if necessary).\nAn additional bias term for the input and output layers can be added\n\n### recurrent weights: biological constrains.\nTo use RNNs in neuroscientific research, it may be interesting to implement constraints on the recurrent weights matrix to replicate some of what is observed in biological neural networks. \n\nAvailable constraints include: \n    - autopses removal: removing elements from the main diagonal of $W_{rec}$ to remove synapses of neurons onto themselves\n    - dale ratio: specify the ratio of excitatory to inhibitory units.\n\nNot yet implemented but in the future a connectivity structure (e.g. to have two independent subnetworks) will be available. \n\n### RNN training\n`RNN` classes that subclass `RNNBase` will have a `fit` method that can be used to train the RNN.\n`fit` takes a pytorch dataset as input and uses it to train the network using Adam optimizer with a MSE loss and an optional learning rate scheduler. `fit` includes several parameters to fine tune the training.\n\nAfter training, `RNN.save` can be used to save the network's weights for re-loading in the future (with `RNN.load`).\n\n\n## Example tasks\nExample tasks are provide to try training RNNs and performing the available analyses on trained networks. \nThese include\n\n- **3 bit flip flop** from [1]: an RNN is given three independent inputs which take random values from the set {-1, 0, 1}. The network has 3 outputs, each corresponding to an input. The network's output need to reflect the last non-zero input from each of the 3 input, thus the network has to remember 3 independent variable that can each be in one of two states\n- **integrator** The network receives 1 input that at each time point is drawn from {-.3, -.2, -.1, .1, .2, .3}, this represents an indication of 'angular speed'. The network's goal is to integrate the speed signal and output the current heading angle: crucially this implies dealing with a periodic variable. The network's output has to be in range (-1, 1) which correspondes to (-pi, pi) angles.\n\n## Dynamics analysis\n**Fixed points analysis**: analyse the networks dynamics to find (almost) fixed points [1], [2].\nThis is done by taking the trajectory of hidden state of a network as it predicted an input sequence, initialising the network's state at random locations along this trajctory (with nosie) and stepping the network under constant inputs (generally 0s).\nThen move the network in the direction of decreasing speed (defined as the norm of the difference between the hidden state at two consecutive steps). \nIf the network converges to a state with very slow dynamics that's conisidered a fixed point.\n\nFixed points can be analysed to asses their stability: the jacobian of the Network's dynamics at a fixed point is computed, and the eigenvalue decomposition of the Jacobia is used to identify the number of unstable modes and distinguish between stable and unstable fixed points.\n\nThe topoligy of the dynamics is identified by creating a directed graph showing with what probability the dinamics go form one fixed point to an other [3]. \nThis is done by initializing the network at each fixed point (with noise and repeating several times) and letting the dynamics evolve under a constant input to see at which fixed point the dynamics end up. \nThis information is then used to construct the directed graph.\n\n\n![](imgs/integrator.png)\nDynamics from two trials in the integrator task. What you're seeing is the 3d render of the first 3 PC components of the hidden state dynamics, color coded by the input signal (blue = -3, red=+3).\nThe main circle corresponds to the dynamics for the speed signalled by the input at the start of the trial, the smaller circle is occupied when the speed signal is changed. \n\n![](imgs/3bit.png)\nDynamics and fixed points of the hidden state of a RNN trained on the 3bit flifp flop memory task. \nThe gray trace shows the trajectory of the hidden state in PCA space, sphere indicate fixed points colorcoded by the number of unstable modes (shown) of each fixed pont.\n\n## Visualization\n`pyrnn` provides method for creating plots of activity as well as 3d interactive renderings (using `vedo` [4]).\nThe renderings in particular can be used to visualise the results of the Dynamics Analysis.\n\n\n# References\n[1] Sussillo, David, and Omri Barak. 2013. “Opening the Black Box: Low-Dimensional Dynamics in High-Dimensional Recurrent Neural Networks.” Neural Computation 25 (3): 626–49.\n[2] Golub, Matthew D., and David Sussillo. 2018. “FixedPointFinder: A Tensorflow Toolbox for Identifying and Characterizing Fixed Points in Recurrent Neural Networks.” Journal of Open Source Software 3 (31): 1003.\n[3] Maheswaranathan, Niru, Alex H. Williams, Matthew D. Golub, Surya Ganguli, and David Sussillo. 2019. “Universality and Individuality in Neural Dynamics across Large Populations of Recurrent Networks.” Advances in Neural Information Processing Systems 2019 (December): 15629–41.\n[4] M. Musy et al., \"vedo, a python module for scientific visualization and analysis of 3D objects and point clouds based on VTK (Visualization Toolkit)\", Zenodo, 10 February 2019, doi: 10.5281/zenodo.2561402.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FedeClaudi/pyrnn",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyrnn",
    "package_url": "https://pypi.org/project/pyrnn/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyrnn/",
    "project_urls": {
      "Homepage": "https://github.com/FedeClaudi/pyrnn"
    },
    "release_url": "https://pypi.org/project/pyrnn/0.0.7/",
    "requires_dist": [
      "rich (>=9.0.0)",
      "pyinspect",
      "matplotlib",
      "seaborn",
      "torch",
      "numpy",
      "networkx",
      "myterial",
      "einops",
      "loguru",
      "vedo",
      "coverage-badge ; extra == 'dev'"
    ],
    "requires_python": ">=3.6,",
    "summary": "Pytorch implementation of vanilla RNN",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11750736,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ef9b1cab0d8496c8a15894d87771332253147627cd15c6f88209ffe7e165e67",
          "md5": "5e33330c90cafaa7e87421895e40e809",
          "sha256": "4c3dffe52c37dcdd84d8361807a78418d71e5ae9e96b525a3fed1b705ff1d177"
        },
        "downloads": -1,
        "filename": "pyrnn-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e33330c90cafaa7e87421895e40e809",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,",
        "size": 4362,
        "upload_time": "2020-11-01T10:29:40",
        "upload_time_iso_8601": "2020-11-01T10:29:40.524573Z",
        "url": "https://files.pythonhosted.org/packages/8e/f9/b1cab0d8496c8a15894d87771332253147627cd15c6f88209ffe7e165e67/pyrnn-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "322fb610bb8432c7555c54e6ea78005d124febb8d3087c3814a751c76b394405",
          "md5": "b5686f523948992f1fafb5187b6957a8",
          "sha256": "382dc61a551524c8abb0c2fd0d7d4323f7b5d44f222f5557d9bb7b2b26c8cfea"
        },
        "downloads": -1,
        "filename": "pyrnn-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b5686f523948992f1fafb5187b6957a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,",
        "size": 2868,
        "upload_time": "2020-11-01T10:29:43",
        "upload_time_iso_8601": "2020-11-01T10:29:43.643799Z",
        "url": "https://files.pythonhosted.org/packages/32/2f/b610bb8432c7555c54e6ea78005d124febb8d3087c3814a751c76b394405/pyrnn-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fc75f44e187ee6afffcbeef376c3b097e1d73f5eb7629388d04dda28103f386",
          "md5": "1947f87123e32aa966e5642d252d45a3",
          "sha256": "6ace874d238adabca82c5fec94fecb72e2e1594b7f47331d8b6a9203c1c7e38e"
        },
        "downloads": -1,
        "filename": "pyrnn-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1947f87123e32aa966e5642d252d45a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,",
        "size": 38064,
        "upload_time": "2020-11-19T08:51:52",
        "upload_time_iso_8601": "2020-11-19T08:51:52.696716Z",
        "url": "https://files.pythonhosted.org/packages/8f/c7/5f44e187ee6afffcbeef376c3b097e1d73f5eb7629388d04dda28103f386/pyrnn-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e4c734e3179f390e9ec8e0199ece2714845c3045d81935db52589507f4bb52d",
          "md5": "81ec4388455963e9bae44f9b6ab0de69",
          "sha256": "72d711d0380f4d1c9bb57ca240deade9173564d44d63076c651ee405e0acc425"
        },
        "downloads": -1,
        "filename": "pyrnn-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "81ec4388455963e9bae44f9b6ab0de69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,",
        "size": 29709,
        "upload_time": "2020-11-19T08:51:53",
        "upload_time_iso_8601": "2020-11-19T08:51:53.814507Z",
        "url": "https://files.pythonhosted.org/packages/0e/4c/734e3179f390e9ec8e0199ece2714845c3045d81935db52589507f4bb52d/pyrnn-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc5c0d1b16d7eb1186625a32616740fa8b38a7bb4c58957229e7162b440ecf76",
          "md5": "1844c956b14fc148187cc13589947600",
          "sha256": "e54b621eb7dd10fa7dbdf9637b21fbae576f4ff35dadfd6ba9a67be3d0fbdf1a"
        },
        "downloads": -1,
        "filename": "pyrnn-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1844c956b14fc148187cc13589947600",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,",
        "size": 81747,
        "upload_time": "2021-04-27T10:28:12",
        "upload_time_iso_8601": "2021-04-27T10:28:12.770794Z",
        "url": "https://files.pythonhosted.org/packages/fc/5c/0d1b16d7eb1186625a32616740fa8b38a7bb4c58957229e7162b440ecf76/pyrnn-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "050c9807965409bcd7da21afd8bf6851d7ca36ee27f087a5ed63bb13a1b157ba",
          "md5": "fe154482ba58a010253ab0cf03fecc59",
          "sha256": "b512abb1c3071ba7cb7145639327342f4f055d9762870ca210706b4781c543be"
        },
        "downloads": -1,
        "filename": "pyrnn-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "fe154482ba58a010253ab0cf03fecc59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,",
        "size": 37985,
        "upload_time": "2021-04-27T10:28:14",
        "upload_time_iso_8601": "2021-04-27T10:28:14.181944Z",
        "url": "https://files.pythonhosted.org/packages/05/0c/9807965409bcd7da21afd8bf6851d7ca36ee27f087a5ed63bb13a1b157ba/pyrnn-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3040f23755469975f4e38b3eabf6c6c3b83d20d83c4affb0403f72b6bf7b3f75",
          "md5": "f5af43fb25eb96e9101fab6ac1c60f20",
          "sha256": "5fe187ae97e0be4bed3a3bb356b83d9e9ae563757051a9c2125940a64f2691e7"
        },
        "downloads": -1,
        "filename": "pyrnn-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5af43fb25eb96e9101fab6ac1c60f20",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,",
        "size": 626054,
        "upload_time": "2021-10-17T13:38:23",
        "upload_time_iso_8601": "2021-10-17T13:38:23.236893Z",
        "url": "https://files.pythonhosted.org/packages/30/40/f23755469975f4e38b3eabf6c6c3b83d20d83c4affb0403f72b6bf7b3f75/pyrnn-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b811ddd0318879944bb4858c2a09c00643a7015eac51871f409e93170223238e",
          "md5": "86594ce3b79788de42c8cafa471c5d0e",
          "sha256": "355ff10c5536114354cd3c94164b3e426d9d47388aec1fb5bf3f8c56ba0d2274"
        },
        "downloads": -1,
        "filename": "pyrnn-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "86594ce3b79788de42c8cafa471c5d0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,",
        "size": 624324,
        "upload_time": "2021-10-17T13:38:31",
        "upload_time_iso_8601": "2021-10-17T13:38:31.115354Z",
        "url": "https://files.pythonhosted.org/packages/b8/11/ddd0318879944bb4858c2a09c00643a7015eac51871f409e93170223238e/pyrnn-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3040f23755469975f4e38b3eabf6c6c3b83d20d83c4affb0403f72b6bf7b3f75",
        "md5": "f5af43fb25eb96e9101fab6ac1c60f20",
        "sha256": "5fe187ae97e0be4bed3a3bb356b83d9e9ae563757051a9c2125940a64f2691e7"
      },
      "downloads": -1,
      "filename": "pyrnn-0.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f5af43fb25eb96e9101fab6ac1c60f20",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,",
      "size": 626054,
      "upload_time": "2021-10-17T13:38:23",
      "upload_time_iso_8601": "2021-10-17T13:38:23.236893Z",
      "url": "https://files.pythonhosted.org/packages/30/40/f23755469975f4e38b3eabf6c6c3b83d20d83c4affb0403f72b6bf7b3f75/pyrnn-0.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b811ddd0318879944bb4858c2a09c00643a7015eac51871f409e93170223238e",
        "md5": "86594ce3b79788de42c8cafa471c5d0e",
        "sha256": "355ff10c5536114354cd3c94164b3e426d9d47388aec1fb5bf3f8c56ba0d2274"
      },
      "downloads": -1,
      "filename": "pyrnn-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "86594ce3b79788de42c8cafa471c5d0e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,",
      "size": 624324,
      "upload_time": "2021-10-17T13:38:31",
      "upload_time_iso_8601": "2021-10-17T13:38:31.115354Z",
      "url": "https://files.pythonhosted.org/packages/b8/11/ddd0318879944bb4858c2a09c00643a7015eac51871f409e93170223238e/pyrnn-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}