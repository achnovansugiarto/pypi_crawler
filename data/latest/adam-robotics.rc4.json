{
  "info": {
    "author": "Giuseppe L'Erario",
    "author_email": "gl.giuseppelerario@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# ADAM\n\n[![Adam](https://github.com/ami-iit/ADAM/actions/workflows/tests.yml/badge.svg?branch=main)](https://github.com/ami-iit/ADAM/actions/workflows/tests.yml)\n[![](https://img.shields.io/badge/license-LGPL-19c2d8.svg)](https://github.com/ami-iit/ADAM/blob/main/LICENSE)\n\n**Automatic Differentiation for rigid-body-dynamics AlgorithMs**\n\nADAM implements a collection of algorithms for calculating rigid-body dynamics for **floating-base** robots, in _mixed representation_ (see [Traversaro's A Unified View of the Equations of Motion used for Control Design of Humanoid Robots](https://www.researchgate.net/publication/312200239_A_Unified_View_of_the_Equations_of_Motion_used_for_Control_Design_of_Humanoid_Robots)) using:\n\n- [Jax](https://github.com/google/jax)\n- [CasADi](https://web.casadi.org/)\n- [PyTorch](https://github.com/pytorch/pytorch)\n- [NumPy](https://numpy.org/)\n\nADAM employs the **automatic differentiation** capabilities of these frameworks to compute, if needed, gradients, Jacobian, Hessians of rigid-body dynamics quantities. This approach enables the design of optimal control and reinforcement learning strategies in robotics.\n\nADAM is based on Roy Featherstone's Rigid Body Dynamics Algorithms.\n\n---\n\n<p align=\"center\">\n  <b>‚ö†Ô∏è REPOSITORY UNDER DEVELOPMENT ‚ö†Ô∏è</b>\n  <br>We cannot guarantee stable API\n</p>\n\n---\n\n## üêç Dependencies\n\n- [`python3`](https://wiki.python.org/moin/BeginnersGuide)\n\nOther requisites are:\n\n- `urdf_parser_py`\n- `jax`\n- `casadi`\n- `pytorch`\n- `numpy`\n\nThey will be installed in the installation step!\n\n## üíæ Installation\n\nThe installation can be done either using the Python provided by apt (on Debian-based distros) or via conda (on Linux and macOS).\n\n### Installation with pip\n\nInstall `python3`, if not installed (in **Ubuntu 20.04**):\n\n```bash\nsudo apt install python3.8\n```\n\nCreate a [virtual environment](https://docs.python.org/3/library/venv.html#venv-def), if you prefer. For example:\n\n```bash\npip install virtualenv\npython3 -m venv your_virtual_env\nsource your_virtual_env/bin/activate\n```\n\nInside the virtual environment, install the library from pip:\n\n- Install **Jax** interface:\n\n  ```bash\n  pip install adam-robotics[jax]\n  ```\n\n- Install **CasADi** interface:\n\n  ```bash\n  pip install adam-robotics[casadi]\n  ```\n\n- Install **PyTorch** interface:\n\n  ```bash\n  pip install adam-robotics[pytorch]\n  ```\n\n- Install **ALL** interfaces:\n\n  ```bash\n  pip install adam-robotics[all]\n  ```\n\nIf you want the last version:\n\n```bash\npip install adam-robotics[selected-interface]@git+https://github.com/ami-iit/ADAM\n```\n\nor clone the repo and install:\n\n```bash\ngit clone https://github.com/ami-iit/ADAM.git\ncd ADAM\npip install .[selected-interface]\n```\n\n### Installation with conda\n\nInstall in a conda environment the required dependencies:\n\n- **Jax** interface dependencies:\n\n  ```bash\n  mamba create -n adamenv -c conda-forge -c robostack jax numpy lxml prettytable matplotlib ros-noetic-urdfdom-py\n  ```\n\n- **CasADi** interface dependencies:\n\n  ```bash\n  mamba create -n adamenv -c conda-forge -c robostack casadi numpy lxml prettytable matplotlib ros-noetic-urdfdom-py\n  ```\n\n- **PyTorch** interface dependencies:\n\n  ```bash\n  mamba create -n adamenv -c conda-forge -c robostack pytorch numpy lxml prettytable matplotlib ros-noetic-urdfdom-py\n  ```\n\n- **ALL** interfaces dependencies:\n\n  ```bash\n  mamba create -n adamenv -c conda-forge -c robostack jax casadi pytorch numpy lxml prettytable matplotlib ros-noetic-urdfdom-py\n  ```\n\nActivate the environment, clone the repo and install the library:\n\n```bash\nmamba activate adamenv\ngit clone https://github.com/dic-iit/ADAM.git\ncd ADAM\npip install --no-deps .\n```\n\n## üöÄ Usage\n\nThe following are small snippets of the use of ADAM. More examples are arriving!\nHave also a look at te `tests` folder.\n\n### Jax interface\n\n```python\nfrom adam.jax import KinDynComputations\nimport icub_models\nimport numpy as np\n\n# if you want to icub-models https://github.com/robotology/icub-models to retrieve the urdf\nmodel_path = icub_models.get_model_file(\"iCubGazeboV2_5\")\n# The joint list\njoints_name_list = [\n    'torso_pitch', 'torso_roll', 'torso_yaw', 'l_shoulder_pitch',\n    'l_shoulder_roll', 'l_shoulder_yaw', 'l_elbow', 'r_shoulder_pitch',\n    'r_shoulder_roll', 'r_shoulder_yaw', 'r_elbow', 'l_hip_pitch', 'l_hip_roll',\n    'l_hip_yaw', 'l_knee', 'l_ankle_pitch', 'l_ankle_roll', 'r_hip_pitch',\n    'r_hip_roll', 'r_hip_yaw', 'r_knee', 'r_ankle_pitch', 'r_ankle_roll'\n]\n# Specify the root link\nroot_link = 'root_link'\nkinDyn = KinDynComputations(model_path, joints_name_list, root_link)\nw_H_b = np.eye(4)\njoints = np.ones(len(joints_name_list))\nM = kinDyn.mass_matrix(w_H_b, joints)\nprint(M)\n```\n\n### CasADi interface\n\n```python\nfrom adam.casadi import KinDynComputations\nimport icub_models\nimport numpy as np\n\n# if you want to icub-models https://github.com/robotology/icub-models to retrieve the urdf\nmodel_path = icub_models.get_model_file(\"iCubGazeboV2_5\")\n# The joint list\njoints_name_list = [\n    'torso_pitch', 'torso_roll', 'torso_yaw', 'l_shoulder_pitch',\n    'l_shoulder_roll', 'l_shoulder_yaw', 'l_elbow', 'r_shoulder_pitch',\n    'r_shoulder_roll', 'r_shoulder_yaw', 'r_elbow', 'l_hip_pitch', 'l_hip_roll',\n    'l_hip_yaw', 'l_knee', 'l_ankle_pitch', 'l_ankle_roll', 'r_hip_pitch',\n    'r_hip_roll', 'r_hip_yaw', 'r_knee', 'r_ankle_pitch', 'r_ankle_roll'\n]\n# Specify the root link\nroot_link = 'root_link'\nkinDyn = KinDynComputations(model_path, joints_name_list, root_link)\nw_H_b = np.eye(4)\njoints = np.ones(len(joints_name_list))\nM = kinDyn.mass_matrix_fun()\nprint(M(w_H_b, joints))\n```\n\n### PyTorch interface\n\n```python\nfrom adam.pytorch import KinDynComputations\nimport icub_models\nimport numpy as np\n\n# if you want to icub-models https://github.com/robotology/icub-models to retrieve the urdf\nmodel_path = icub_models.get_model_file(\"iCubGazeboV2_5\")\n# The joint list\njoints_name_list = [\n    'torso_pitch', 'torso_roll', 'torso_yaw', 'l_shoulder_pitch',\n    'l_shoulder_roll', 'l_shoulder_yaw', 'l_elbow', 'r_shoulder_pitch',\n    'r_shoulder_roll', 'r_shoulder_yaw', 'r_elbow', 'l_hip_pitch', 'l_hip_roll',\n    'l_hip_yaw', 'l_knee', 'l_ankle_pitch', 'l_ankle_roll', 'r_hip_pitch',\n    'r_hip_roll', 'r_hip_yaw', 'r_knee', 'r_ankle_pitch', 'r_ankle_roll'\n]\n# Specify the root link\nroot_link = 'root_link'\nkinDyn = KinDynComputations(model_path, joints_name_list, root_link)\nw_H_b = np.eye(4)\njoints = np.ones(len(joints_name_list))\nM = kinDyn.mass_matrix(w_H_b, joints)\nprint(M)\n```\n\n## ü¶∏‚Äç‚ôÇÔ∏è Contributing\n\n**ADAM** is an open-source project. Contributions are very welcome!\n\nOpen an issue with your feature request or if you spot a bug. Then, you can also proceed with a Pull-requests! :rocket:\n\n## Todo\n\n- [x] Center of Mass position\n- [x] Jacobians\n- [x] Forward kinematics\n- [x] Mass Matrix via CRBA\n- [x] Centroidal Momentum Matrix via CRBA\n- [x] Recursive Newton-Euler algorithm (still no acceleration in the algorithm, since it is used only for the computation of the bias force)\n- [ ] Articulated Body algorithm\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ami-iit/ADAM",
    "keywords": "robotics,urdf,rigid body dynamics,featherstone,automatic-differentiation,optimization,casadi,jax,pytorch,reinforcement-learning,motion-planning",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "adam-robotics",
    "package_url": "https://pypi.org/project/adam-robotics/",
    "platform": null,
    "project_url": "https://pypi.org/project/adam-robotics/",
    "project_urls": {
      "Homepage": "https://github.com/ami-iit/ADAM"
    },
    "release_url": "https://pypi.org/project/adam-robotics/0.0.6/",
    "requires_dist": [
      "numpy (>=1.20)",
      "scipy",
      "casadi",
      "prettytable",
      "urdf-parser-py",
      "jax ; extra == 'all'",
      "jaxlib ; extra == 'all'",
      "casadi ; extra == 'all'",
      "torch ; extra == 'all'",
      "casadi ; extra == 'casadi'",
      "jax ; extra == 'jax'",
      "jaxlib ; extra == 'jax'",
      "torch ; extra == 'pytorch'",
      "jax ; extra == 'test'",
      "jaxlib ; extra == 'test'",
      "casadi ; extra == 'test'",
      "torch ; extra == 'test'",
      "pytest ; extra == 'test'",
      "idyntree ; extra == 'test'",
      "gym-ignition-models ; extra == 'test'",
      "black ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "Automatic Differentiation for rigid-body-dynamics AlgorithMs",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16664474,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5896c44a5c2d7ae18eaaa21d761f5f9c6b0c51fd28c6611ce52e0022f5fbde23",
          "md5": "b22c27e7d22161085fe162e42dc4b9c4",
          "sha256": "0a5a8e7831693d3cd59b5205faf379e8615bb968190cad3d051babdee1b07306"
        },
        "downloads": -1,
        "filename": "adam_robotics-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b22c27e7d22161085fe162e42dc4b9c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 34919,
        "upload_time": "2022-05-18T09:24:51",
        "upload_time_iso_8601": "2022-05-18T09:24:51.990148Z",
        "url": "https://files.pythonhosted.org/packages/58/96/c44a5c2d7ae18eaaa21d761f5f9c6b0c51fd28c6611ce52e0022f5fbde23/adam_robotics-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d18a399c19b581797ae881a81af7e98fc9a81da88a42cb0e078e8664b86bbf3",
          "md5": "a91a8a2344c1694f1c0e5cd1cb0d42c5",
          "sha256": "0e0c29375d7bb44545e4e763bb55aa7fffd35d1716e1167792d2933c716863a0"
        },
        "downloads": -1,
        "filename": "adam-robotics-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a91a8a2344c1694f1c0e5cd1cb0d42c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 37112,
        "upload_time": "2022-05-18T09:24:53",
        "upload_time_iso_8601": "2022-05-18T09:24:53.960801Z",
        "url": "https://files.pythonhosted.org/packages/7d/18/a399c19b581797ae881a81af7e98fc9a81da88a42cb0e078e8664b86bbf3/adam-robotics-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd95d596d732125f03bddd33f849e459faf6a4efdfaf3645f6058bc279008cff",
          "md5": "c0d4440616ff896d3dce1ed4a52318a4",
          "sha256": "9367da64512b62e8ff748c0ef886fe7357cf4864fc800900d5f3b28b73634106"
        },
        "downloads": -1,
        "filename": "adam_robotics-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0d4440616ff896d3dce1ed4a52318a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 35062,
        "upload_time": "2022-06-14T09:45:44",
        "upload_time_iso_8601": "2022-06-14T09:45:44.807346Z",
        "url": "https://files.pythonhosted.org/packages/dd/95/d596d732125f03bddd33f849e459faf6a4efdfaf3645f6058bc279008cff/adam_robotics-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "075de106796d6103d527b189706cbf2fdabc08b661dfd74d120938ef1f8b9f68",
          "md5": "fba67126c8e2a16b9153543494f81f83",
          "sha256": "c1be661299345722080d1fb31db7c680acb4fb978b4ecc7bdb0acc2eba6cfe28"
        },
        "downloads": -1,
        "filename": "adam-robotics-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "fba67126c8e2a16b9153543494f81f83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 37244,
        "upload_time": "2022-06-14T09:45:46",
        "upload_time_iso_8601": "2022-06-14T09:45:46.575297Z",
        "url": "https://files.pythonhosted.org/packages/07/5d/e106796d6103d527b189706cbf2fdabc08b661dfd74d120938ef1f8b9f68/adam-robotics-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acd78a73047c580d3d758c44a374aef2414c807b5afd95377b4c21061f848b71",
          "md5": "35ac7a92459db96dbf51d2d3a90df962",
          "sha256": "33a298212bd976c1cbf570c34c580f04487e961d0ede04b502fc8537b15377e5"
        },
        "downloads": -1,
        "filename": "adam_robotics-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35ac7a92459db96dbf51d2d3a90df962",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 35165,
        "upload_time": "2022-10-05T13:32:19",
        "upload_time_iso_8601": "2022-10-05T13:32:19.324434Z",
        "url": "https://files.pythonhosted.org/packages/ac/d7/8a73047c580d3d758c44a374aef2414c807b5afd95377b4c21061f848b71/adam_robotics-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f64b86d0bc606d8fce05ad63b3bfd219b360b1d189d1ad7024900d5bdafca6f",
          "md5": "8bcdb31f3a896ce3fdafc927aed3f53e",
          "sha256": "04d278449cfc2c9f5f8a025f1472f77e03c314ca396f996aa8968f0ee5f224c8"
        },
        "downloads": -1,
        "filename": "adam-robotics-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8bcdb31f3a896ce3fdafc927aed3f53e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 37439,
        "upload_time": "2022-10-05T13:32:22",
        "upload_time_iso_8601": "2022-10-05T13:32:22.241766Z",
        "url": "https://files.pythonhosted.org/packages/3f/64/b86d0bc606d8fce05ad63b3bfd219b360b1d189d1ad7024900d5bdafca6f/adam-robotics-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "537317c8a75f2deaa6a0f33ccbe1eec36235a6b06b892d35eb91845334c8644d",
          "md5": "7a854ac96f55f42dffe711897ff41d88",
          "sha256": "f4289d49be273e39ca8a7f833ec7631c376bf9ee07a12e973d4415841f75c6be"
        },
        "downloads": -1,
        "filename": "adam_robotics-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a854ac96f55f42dffe711897ff41d88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 35154,
        "upload_time": "2023-02-02T11:05:43",
        "upload_time_iso_8601": "2023-02-02T11:05:43.258851Z",
        "url": "https://files.pythonhosted.org/packages/53/73/17c8a75f2deaa6a0f33ccbe1eec36235a6b06b892d35eb91845334c8644d/adam_robotics-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa0ded4adb692712dc69fa1f63554875012f5a7783939185f2c67f6913895580",
          "md5": "b12c6e47f9a6e9ba2148f979aa7f94b8",
          "sha256": "bf05f878bac6af03f06de2c0f6e3c9c11fdb4d6efd49cf1333e8798f7dedc72e"
        },
        "downloads": -1,
        "filename": "adam-robotics-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b12c6e47f9a6e9ba2148f979aa7f94b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 37478,
        "upload_time": "2023-02-02T11:05:44",
        "upload_time_iso_8601": "2023-02-02T11:05:44.982497Z",
        "url": "https://files.pythonhosted.org/packages/aa/0d/ed4adb692712dc69fa1f63554875012f5a7783939185f2c67f6913895580/adam-robotics-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "537317c8a75f2deaa6a0f33ccbe1eec36235a6b06b892d35eb91845334c8644d",
        "md5": "7a854ac96f55f42dffe711897ff41d88",
        "sha256": "f4289d49be273e39ca8a7f833ec7631c376bf9ee07a12e973d4415841f75c6be"
      },
      "downloads": -1,
      "filename": "adam_robotics-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7a854ac96f55f42dffe711897ff41d88",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 35154,
      "upload_time": "2023-02-02T11:05:43",
      "upload_time_iso_8601": "2023-02-02T11:05:43.258851Z",
      "url": "https://files.pythonhosted.org/packages/53/73/17c8a75f2deaa6a0f33ccbe1eec36235a6b06b892d35eb91845334c8644d/adam_robotics-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa0ded4adb692712dc69fa1f63554875012f5a7783939185f2c67f6913895580",
        "md5": "b12c6e47f9a6e9ba2148f979aa7f94b8",
        "sha256": "bf05f878bac6af03f06de2c0f6e3c9c11fdb4d6efd49cf1333e8798f7dedc72e"
      },
      "downloads": -1,
      "filename": "adam-robotics-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "b12c6e47f9a6e9ba2148f979aa7f94b8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 37478,
      "upload_time": "2023-02-02T11:05:44",
      "upload_time_iso_8601": "2023-02-02T11:05:44.982497Z",
      "url": "https://files.pythonhosted.org/packages/aa/0d/ed4adb692712dc69fa1f63554875012f5a7783939185f2c67f6913895580/adam-robotics-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}