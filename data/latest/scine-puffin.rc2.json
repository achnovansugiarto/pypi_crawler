{
  "info": {
    "author": "ETH Zurich, Laboratory of Physical Chemistry, Reiher Group",
    "author_email": "scine@phys.chem.ethz.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: C++",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Chemistry"
    ],
    "description": ".. image:: docs/source/res/puffin_header.png\n   :alt: SCINE Puffin\n\n.. inclusion-marker-do-not-remove\n\nIntroduction\n------------\n\nSCINE Puffin is a calculation handler for SCINE Chemoton. Thus, it bridges the gap between high level exploration jobs for reaction networks and  basic quantum chemical calculations. Making use of the abstractions defined the SCINE Core and SCINE Utilities  modules it provides the means to define and execute jobs that generate new data for reaction networks. SCINE Puffin is designed as an instanced runner that, once bootstrapped, continuously processes requested jobs. It is built to work in containerized environments (Docker, Singularity).\n\nLicense and Copyright Information\n---------------------------------\n\nFor license and copyright information, see the file ``LICENSE.txt`` in this\ndirectory.\n\nInstallation\n------------\n\nPrerequisites\n.............\n\nBasic Requirements\n``````````````````\n\nThus far Puffin is expected to run on Linux systems and possibly on OSX systems,\nWindows-based architectures are not specifically supported.\nUsing containers and the integrated subsystem feature of Windows 10 it should\nbe possible to toy around with it nonetheless. This is, however, not a case\nwe would recommend for inexperienced users.\n\nPuffin collects a variety of programs to run calculations. In order to get a\nminimal working version of Puffin to run on a given system, the following\nprograms/packages are required:\n\n- Python3\n- CMake >= v3.12\n- Git\n- GCC >= v7.0.0, CLang >= v6.0.0 (Unix), ICC >= v2017.01\n- Boost >= v1.64.0\n- A MongoDB including the C++ bindings\n\nPuffin Python Package\n`````````````````````\n\nThe main Python package Puffin requires the several additional packages, which will be\nautomatically installed when installing Puffin using ``pip``. These packages are\nlisted in the file ``requirements.txt``.\n\nFor development work, a few extra packages are needed; these are listed in the file\n``requirements-dev.txt``.\n\nPuffin Instance\n```````````````\n\nA usable Puffin instance will require at least a minimal set of additional C++\ncomponents. These components do not need to be compiled by the user, but instead\nthey will be compiled when bootstrapping the instance. These components are:\n\n- SCINE Database\n- SCINE Molassembler\n- SCINE ReaDuct\n- SCINE Utilities\n\nInstallation\n............\n\nPuffin can be installed using pip (pip3) once the repository has been cloned:\n\n.. code-block:: bash\n\n   git clone <puffin-repo>\n   pip install ./puffin\n\nA non super user can install the package using a virtual environment, or\nthe ``--user`` flag.\n\nIt is also possible to run/install a dockerized version of Puffin. For more\ndetails on this please see the ``Usage->Docker`` section of this documentation.\n\nThe documentation can be found online, or it can be built using:\n\n.. code-block:: bash\n\n   cd puffin\n   make -C docs html\n\nIt is then available at:\n\n.. code-block:: bash\n\n   <browser name> docs/build/html/index.html\n\nIn order to build the documentation, you need a few extra Python packages wich\nare not installed automatically together with Puffin. In order to install them,\nrun\n\n.. code-block:: bash\n\n   cd puffin\n   pip install -r requirements-dev.txt\n\nUsage\n------\n\nBasic Usage\n...........\n\nIn order to use Puffin, at least one Puffin instance has to be generated.\nEach instance will then separately accept and run jobs later on.\nIn order to setup a first instance, prepare a folder:\n\n.. code-block:: bash\n\n   mkdir puffin_instance\n   cd puffin_instance\n\nand generate the default configuration file for an instance inside it:\n\n.. code-block:: bash\n\n   python3 -m scine_puffin configure\n   vi puffin.yaml\n\nAfterwards it is possible to configure the instance to your liking, by editing\nthe generated ``puffin.yaml`` file.\n\nIt is also possible to enter configurations via environment variables.\nThe environment variables override the variables given in the configure file.\nAny configuration option can be given via the environment as:\n\n.. code-block:: bash\n\n   export PUFFIN_<key1>_<key2>_<key3>=<value>\n\nor as a concrete example:\n\n.. code-block:: bash\n\n   export PUFFIN_DATABASE_PORT=27019\n\nThe settings for each program are explained in the documentation of that\nparticular program. The general settings pertaining to the daemon and Puffin in\ngeneral are explained separately in a section below.\n\nAfter (if desired) editing the settings it is possible to bootstrap Puffin and\nthus install all programs that have to be installed in order to run the\ninstance.\n\n.. code-block:: bash\n\n   python3 -m scine_puffin -c puffin.yaml bootstrap\n\nAll programs that will be installed are marked in the configuration as\n``available`` and have a ``source`` path given.\nBootstrapping the instance will generate a source file called ``puffin.sh``. It\ncontains all environment variables that have to be set in order to make the\ninstance find all installed programs.\nHence, source the installed programs using:\n\n.. code-block:: bash\n\n   source puffin.sh\n\nThe Puffin instance is now ready to be used. Start and stop the actual daemon by\nusing\n\n.. code-block:: bash\n\n   python3 -m scine_puffin -c puffin.yaml start\n\nand\n\n.. code-block:: bash\n\n   python3 -m scine_puffin -c puffin.yaml stop\n\nIf the ``puffin.yaml`` is not given, the default options will be used. Once again,\nany environment variables precede the loaded file.\n\nDocker\n......\n\nIt is possible to generate a containerized version of Puffin using Docker or\nPodman. The ``Dockerfile`` is present in the directory ``container/docker`` of this repository.\nThe generated Docker image includes all packages required to run Puffin with the\ndefault set of programs. When running the image it is possible to configure the\noptions of the Puffin instance. We recommend mounting a scratch directory e.g.\n``/scratch/puffin`` into the Docker.\n\nFurthermore, it is possible to dry-run (without a database) a version of the\nimage which will still execute the bootstrap stage of Puffin.\nIt is then possible to copy the clean ``/scratch/puffin`` folder and then\nshorten (skip) the bootstrap step in other instances of the image by\npasting this copied folder into the ``/scratch`` folder mounted into the\nother instances. However, for this to properly work we advise caution when\nbootstrapping with ``-march=native`` flags for the programs in the initial\ninstance.\n\nCommand Line Setup\n``````````````````\n\nIn order to build the image, execute\n\n.. code-block:: bash\n\n   sudo docker build -t <image name>\n\nThe image will bootstrap and start running a Puffin instance as soon as\nthe image is run with:\n\n.. code-block:: bash\n\n   docker run -it --mount src=<path to local folder>,target=/scratch,type=bind <image name>\n\nAny configuration can be done by adding environment variables in the run command.\n\nDocker Compose Setup\n````````````````````\n\nA minimal version of docker-compose input starting an instance of Puffin is\ndeposited in the ``docker`` folder located in the top directory of this\nrepository.\n\nBasic Settings and Configuration\n................................\n\nThe full list of all options to be set is given in the online documentation in\nthe ``Settings`` section. Furthermore, this documentation can be read directly\nfrom the doc-string of the ``scine_puffin.config.Configuration`` class.\nThe settings of each program can be read from the documentation of the\nrespective class interfacing the program, e.g.\n``scine_puffin.programs.sparrow.Sparrow``.\n\nHow to Cite\n-----------\n\nWhen publishing results obtained with Puffin, please cite the corresponding\nrelease as archived on `Zenodo <https://doi.org/10.5281/zenodo.6695461>`_ (DOI\n10.5281/zenodo.6695461; please use the DOI of the respective release).\n\nIn addition, we kindly request you to cite the following article when using Puffin:\nJ. P. Unsleber, S. A. Grimmel, M. Reiher,\n\"Chemoton 2.0: Autonomous Exploration of Chemical Reaction Networks\",\narXiv:2202.13011 [physics.chem-ph].\n\n\nSupport and Contact\n-------------------\n\nIn case you should encounter problems or bugs, please write a short message\nto scine@phys.chem.ethz.ch.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.scine.ethz.ch",
    "keywords": "",
    "license": "BSD (3-clause)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scine-puffin",
    "package_url": "https://pypi.org/project/scine-puffin/",
    "platform": null,
    "project_url": "https://pypi.org/project/scine-puffin/",
    "project_urls": {
      "Homepage": "https://www.scine.ethz.ch"
    },
    "release_url": "https://pypi.org/project/scine-puffin/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Calculation handler for SCINE Chemoton",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14736308,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf7e117fda1312ac97f46cb57f4349a887b06ddef5199433770a47c51c3890fc",
          "md5": "285fa938f2ff0eda51506e052e40d749",
          "sha256": "d253d9bae90e9153bdbd469b94142184c2d80f71faf2614090255ced505ebee8"
        },
        "downloads": -1,
        "filename": "scine_puffin-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "285fa938f2ff0eda51506e052e40d749",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 102703,
        "upload_time": "2022-06-23T07:27:25",
        "upload_time_iso_8601": "2022-06-23T07:27:25.880878Z",
        "url": "https://files.pythonhosted.org/packages/bf/7e/117fda1312ac97f46cb57f4349a887b06ddef5199433770a47c51c3890fc/scine_puffin-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5910b0b23a5ce307df6ea74c3b47d95b13fa9dbf62879d52c381149ea1ad1bd6",
          "md5": "000a1539dda344190e2598bd2a68559f",
          "sha256": "1a15232b1b472c36349e5534e4fdf9dd90bc554926cb42fba37eee8e60be8c44"
        },
        "downloads": -1,
        "filename": "scine_puffin-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "000a1539dda344190e2598bd2a68559f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 122124,
        "upload_time": "2022-08-12T05:14:58",
        "upload_time_iso_8601": "2022-08-12T05:14:58.843178Z",
        "url": "https://files.pythonhosted.org/packages/59/10/b0b23a5ce307df6ea74c3b47d95b13fa9dbf62879d52c381149ea1ad1bd6/scine_puffin-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5910b0b23a5ce307df6ea74c3b47d95b13fa9dbf62879d52c381149ea1ad1bd6",
        "md5": "000a1539dda344190e2598bd2a68559f",
        "sha256": "1a15232b1b472c36349e5534e4fdf9dd90bc554926cb42fba37eee8e60be8c44"
      },
      "downloads": -1,
      "filename": "scine_puffin-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "000a1539dda344190e2598bd2a68559f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 122124,
      "upload_time": "2022-08-12T05:14:58",
      "upload_time_iso_8601": "2022-08-12T05:14:58.843178Z",
      "url": "https://files.pythonhosted.org/packages/59/10/b0b23a5ce307df6ea74c3b47d95b13fa9dbf62879d52c381149ea1ad1bd6/scine_puffin-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}