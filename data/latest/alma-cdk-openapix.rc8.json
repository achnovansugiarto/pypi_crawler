{
  "info": {
    "author": "Alma Media<opensource@almamedia.dev>",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved",
      "Operating System :: OS Independent",
      "Programming Language :: JavaScript",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Typing :: Typed"
    ],
    "description": "<div align=\"center\">\n\t<br/>\n\t<br/>\n  <h1>\n\t<img height=\"140\" src=\"assets/alma-cdk-openapix.svg\" alt=\"Alma CDK OpenApiX\" />\n  <br/>\n  <br/>\n  </h1>\n\n```sh\nnpm i -D @alma-cdk/openapix\n```\n\n  <div align=\"left\">\n\nGenerate AWS Api Gateway REST APIs via [OpenAPI](https://www.openapis.org/) (formely known as ‚ÄúSwagger‚Äù) Schema Definitions by consuming \"clean\" OpenAPI schemas and inject `x-amazon-apigateway-` extensions *with type-safety*.\n\n  </div>\n  <br/>\n</div><br/><div align=\"center\">\n\n![diagram](assets/diagram.svg)\n\n</div><br/>\n\n## üöß ¬† Project Stability\n\n![experimental](https://img.shields.io/badge/stability-experimental-yellow)\n\nThis construct is still versioned with `v0` major version and breaking changes might be introduced if necessary (without a major version bump), though we aim to keep the API as stable as possible (even within `v0` development). We aim to publish `v1.0.0` soon and after that breaking changes will be introduced via major version bumps.\n\nThere are also some incomplete or buggy features, such as CORS and `CognitoUserPoolsAuthorizer`.\n\n<br/>\n\n## Getting Started\n\n1. Install `npm i -D @alma-cdk/openapix`\n2. Define your API OpenApi Schema Definition in a `.yaml` file<br/>*without* any `x-amazon-apigateway-` extensions\n3. Use `openapix` constructs in CDK to consume the `.yaml` file and then assign API Gateway integrations using CDK\n\n<br/>\n\n## HTTP Integration\n\nGiven the following [`http-proxy.yaml` OpenApi schema definition](https://github.com/alma-cdk/openapix/blob/main/examples/http-proxy/schema/http-proxy.yaml), *without* any AWS API Gateway OpenApi extensions:\n\n```yaml\nopenapi: 3.0.3\ninfo:\n  title: HTTP Proxy\n  description: Proxies requests to example.com\n  version: \"0.0.1\"\npaths:\n  \"/\":\n    get:\n      summary: proxy\n      description: Proxies example.com\n```\n\nYou may then define API Gateway HTTP integration (within your stack):\n\n```python\nnew openapix.Api(this, 'HttpProxy', {\n  source: path.join(__dirname, '../schema/http-proxy.yaml'),\n\n  paths: {\n    '/': {\n      get: new openapix.HttpIntegration(this, 'http://example.com', {\n          httpMethod: 'get',\n      }),\n    },\n  },\n});\n```\n\nSee [`/examples/http-proxy`](https://github.com/alma-cdk/openapix/tree/main/examples/http-proxy) for full OpenApi definition (with response models) and an example within a CDK application.\n\n<br/>\n\n## Lambda Integration\n\nGiven the following [`hello-api.yaml` OpenApi schema definition](https://github.com/alma-cdk/openapix/blob/main/examples/hello-api/schema/hello-api.yaml), *without* any AWS API Gateway OpenApi extensions:\n\n```yaml\nopenapi: 3.0.3\ninfo:\n  title: Hello API\n  description: Defines an example ‚ÄúHello World‚Äù API\n  version: \"0.0.1\"\npaths:\n  \"/\":\n    get:\n      operationId: sayHello\n      summary: Say Hello\n      description: Prints out a greeting\n      parameters:\n      - name: name\n        in: query\n        required: false\n        schema:\n          type: string\n          default: \"World\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/HelloResponse\"\n\ncomponents:\n  schemas:\n    HelloResponse:\n      description: Response body\n      type: object\n      properties:\n        message:\n          type: string\n          description: Greeting\n          example: Hello World!\n```\n\nYou may then define API Gateway AWS Lambda integration (within your stack):\n\n```python\nconst greetFn = new NodejsFunction(this, 'greet');\n\nnew openapix.Api(this, 'HelloApi', {\n  source: path.join(__dirname, '../schema/hello-api.yaml'),\n  paths: {\n    '/': {\n      get: new openapix.LambdaIntegration(this, greetFn),\n    },\n  },\n})\n```\n\nSee [`/examples/hello-api`](https://github.com/alma-cdk/openapix/tree/main/examples/hello-api) for full OpenApi definition (with response models) and an example within a CDK application.\n\n<br/>\n\n## AWS Service Integration\n\nGiven [`books-api.yaml` OpenApi schema definition](https://github.com/alma-cdk/openapix/blob/main/examples/books-api/schema/books-api.yaml), *without* any AWS API Gateway OpenApi extensions, You may then define API Gateway AWS service integration such as DynamoDB (within your stack):\n\n```python\nnew openapix.Api(this, 'BooksApi', {\n  source: path.join(__dirname, '../schema/books-api.yaml'),\n  paths: {\n    '/': {\n      get: new openapix.AwsIntegration(this, {\n        service: 'dynamodb',\n        action: 'Scan',\n        options: {\n          credentialsRole: role, // role must have access to DynamoDB table\n          requestTemplates: {\n            'application/json': JSON.stringify({\n              TableName: table.tableName,\n            }),\n          },\n          integrationResponses: [\n            {\n              statusCode: '200',\n              responseTemplates: {\n                // See /examples/http-proxy/lib/list-books.vtl\n                'application/json': readFileSync(__dirname+'/list-books.vtl', 'utf-8'),\n              },\n            }\n          ],\n        },\n      }),\n    },\n    '/{isbn}': {\n      get: new openapix.AwsIntegration(this, {\n        service: 'dynamodb',\n        action: 'GetItem',\n        options: {\n          credentialsRole: role, // role must have access to DynamoDB table\n          requestTemplates: {\n            'application/json': JSON.stringify({\n              TableName: table.tableName,\n              Key: {\n                item: {\n                  \"S\": \"$input.params('isbn')\"\n                }\n              }\n            }),\n          },\n          integrationResponses: [\n            {\n              statusCode: '200',\n              responseTemplates: {\n                // See /examples/http-proxy/lib/get-book.vtl\n                'application/json': readFileSync(__dirname+'/get-book.vtl', 'utf-8'),\n              },\n            }\n          ],\n        },\n      }),\n    },\n  },\n});\n```\n\nSee [`/examples/books-api`](https://github.com/alma-cdk/openapix/tree/main/examples/books-api) for full OpenApi definition (with response models) and an example within a CDK application.\n\n<br/>\n\n## Mock Integration\n\nGiven the following [`mock-api.yaml` OpenApi schema definition](https://github.com/alma-cdk/openapix/blob/main/examples/mock-api/schema/mock-api.yaml), *without* any AWS API Gateway OpenApi extensions:\n\n```yaml\nopenapi: 3.0.3\ninfo:\n  title: Hello API\n  description: Defines an example ‚ÄúHello World‚Äù API\n  version: \"0.0.1\"\npaths:\n  \"/\":\n    get:\n      operationId: sayHello\n      summary: Say Hello\n      description: Prints out a greeting\n      parameters:\n      - name: name\n        in: query\n        required: false\n        schema:\n          type: string\n          default: \"World\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/HelloResponse\"\n\ncomponents:\n  schemas:\n    HelloResponse:\n      description: Response body\n      type: object\n      properties:\n        message:\n          type: string\n          description: Greeting\n          example: Hello World!\n```\n\nYou may then define API Gateway Mock integration (within your stack):\n\n```python\nnew openapix.Api(this, 'MockApi', {\n  source: path.join(__dirname, '../schema/mock-api.yaml'),\n  paths: {\n    '/': {\n      get: new openapix.MockIntegration(this, {\n        requestTemplates: {\n          \"application/json\": JSON.stringify({ statusCode: 200 }),\n        },\n        passthroughBehavior: apigateway.PassthroughBehavior.NEVER,\n        requestParameters: {\n          'integration.request.querystring.name': 'method.request.querystring.name',\n        },\n        integrationResponses: [\n          {\n            statusCode: '200',\n            responseTemplates: {\n              // see /examples/mock-api/lib/greet.vtl\n              'application/json': readFileSync(__dirname+'/greet.vtl', 'utf-8'),\n            },\n            responseParameters: {},\n          },\n        ],\n      }),\n    },\n  },\n});\n```\n\nSee [`/examples/mock-api`](https://github.com/alma-cdk/openapix/tree/main/examples/mock-api) for full OpenApi definition (with response models) and an example within a CDK application.\n\n<br/>\n\n## Validators\n\nAPI Gateway REST APIs can perform [request parameter and request body validation](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-request-validation.html). You can provide both default validator and integration specific validator (which will override the default for given integration).\n\nSee [`/examples/todo-api`](https://github.com/alma-cdk/openapix/tree/main/examples/todo-api) for complete example within a CDK application.\n\nGiven [`todo-api.yaml` OpenApi schema definition](https://github.com/alma-cdk/openapix/blob/main/examples/todo-api/schema/todo-api.yaml) you may define the API Gateway validators for your integration in CDK:\n\n```python\nnew openapix.Api(this, 'MyApi', {\n  source: path.join(__dirname, '../schema/todo-api.yaml'),\n\n  validators: {\n    'all': {\n      validateRequestBody: true,\n      validateRequestParameters: true,\n      default: true, // set this as the \"API level\" default validator (there can be only one)\n    },\n    'params-only' : {\n      validateRequestBody: false,\n      validateRequestParameters: true,\n    },\n  },\n\n  paths: {\n    '/todos': {\n      // this one uses the default 'all' validator\n      post:  new openapix.HttpIntegration(this, baseUrl, { httpMethod: 'post' }),\n    },\n    '/todos/{todoId}': {\n      // this one has validator override and uses 'params-only' validator\n      get: new openapix.HttpIntegration(this, `${baseUrl}/{todoId}`, {\n        validator: 'params-only',\n        options: {\n          requestParameters: {\n            'integration.request.path.todoId': 'method.request.path.todoId',\n          },\n        },\n      }),\n    },\n  },\n})\n```\n\n<br/>\n\n## Authorizers\n\nüöß Work-in-Progress\n\nThere are multiple ways to [control & manages access to API Gateway REST APIs](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-control-access-to-api.html) such as [resource policies](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-resource-policies.html), [IAM permissions](https://docs.aws.amazon.com/apigateway/latest/developerguide/permissions.html) and [usage plans with API keys](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html) but this section focuses on [Cognito User Pools ](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-integrate-with-cognito.html) and [Lambda authorizers](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html).\n\n<br/>\n\n### Cognito Authorizers\n\nIn this example we're defining a Congito User Pool based authorizer.\n\nGiven the following `schema.yaml` OpenApi definition:\n\n```yaml\nopenapi: 3.0.3\npaths:\n  /:\n    get:\n      security:\n        - MyAuthorizer: [\"test/read\"] # add scope\ncomponents:\n  securitySchemes:\n    MyCognitoAuthorizer:\n      type: apiKey\n      name: Authorization\n      in: header\n```\n\nYou can define the Cognito Authorizer in CDK with:\n\n```python\nconst userPool: cognito.IUserPool;\n\nnew openapix.Api(this, 'MyApi', {\n  source: './schema.yaml',\n\n  authorizers: [\n    new openapix.CognitoUserPoolsAuthorizer(this, 'MyCognitoAuthorizer', {\n      cognitoUserPools: [userPool],\n      resultsCacheTtl: Duration.minutes(5),\n    })\n  ],\n})\n```\n\n<br/>\n\n### Lambda Authorizers\n\nIn this example we're defining a custom Lambda authorizer. The authorizer function code is not relevant for the example but the idea in the example is that an API caller sends some \"secret code\" in query parameters (`?code=example123456`) which then the authorizer function somehow evaluates.\n\nGiven the following `schema.yaml` OpenApi definition:\n\n```yaml\nopenapi: 3.0.3\npaths:\n  /:\n    get:\n      security:\n        - MyAuthorizer: [] # note the empty array\ncomponents:\n  securitySchemes:\n    MyCustomAuthorizer:\n      type: apiKey\n      name: code\n      in: query\n```\n\nYou can define the custom Lambda Authorizer in CDK with:\n\n```python\nconst authFn: lambda.IFunction;\n\nnew openapix.Api(this, 'MyApi', {\n  source: './schema.yaml',\n\n  authorizers: [\n\n    new openapix.LambdaAuthorizer(this, 'MyCustomAuthorizer', {\n      fn: authFn,\n      identitySource: apigateway.IdentitySource.queryString('code'),\n      type: 'request',\n      authType: 'custom',\n      resultsCacheTtl: Duration.minutes(5),\n    }),\n  ],\n\n\n})\n```\n\n<br/>\n\n## Inject/Reject\n\nYou may modify the generated OpenAPI definition (which is used to define API Gateway REST API) by injecting or rejecting values from the source OpenAPI schema definition:\n\n```python\nnew openapix.Api(this, 'MyApi', {\n  source: './schema.yaml',\n\n  // Add any OpenAPI v3 data.\n  // Can be useful for passing values from CDK code.\n  // See https://swagger.io/specification/\n  injections: {\n    \"info.title\": \"FancyPantsAPI\"\n  },\n\n  // Reject fields by absolute object path from generated definition\n  rejections: ['info.description'],\n\n  // Reject all matching fields from generated definition\n  rejectionsDeep: ['example', 'examples'],\n});\n```\n\n<br/>\n\n## CORS\n\nüöß Work-in-Progress\n\nUsing `openapix.CorsIntegration` creates a Mock integration which responds with correct response headers:\n\n```python\nnew openapix.Api(this, 'MyApi', {\n  source: './schema.yaml',\n\n  paths: {\n    '/foo': {\n      options: new openapix.CorsIntegration(this, {\n        // using helper method to define explicit values:\n        headers: CorsHeaders.from(this, 'Content-Type', 'X-Amz-Date', 'Authorization'),\n        origins: CorsOrigins.from(this, 'https://www.example.com'),\n        methods: CorsMethods.from(this, 'options','post','get'),\n      }),\n    },\n    '/bar': {\n      options: new openapix.CorsIntegration(this, {\n        // using regular string values:\n        headers: 'Content-Type,X-Amz-Date,Authorization',\n        origins: '*',\n        methods: 'options,get',\n      }),\n    },\n    '/baz': {\n      options: new openapix.CorsIntegration(this, {\n        // using helper constant for wildcard values:\n        headers: CorsHeaders.ANY,\n        origins: CorsOrigins.ANY,\n        methods: CorsMethods.ANY,\n      }),\n    },\n  },\n});\n```\n\nWhen specifying multiple `origins` the mock integration uses [VTL magic](https://medium.com/@srikanth650/use-api-gateway-with-mock-integration-to-allow-cors-from-multiple-origins-bdcb431d07d3) to respond with the correct `Access-Control-Allow-Origin` header.\n\n### Default CORS\n\nIf you wish to define same CORS options to every path, you may do so by providing a default `cors` value:\n\n```python\nnew openapix.Api(this, 'MyApi', {\n  source: './schema.yaml',\n\n  defaultCors: new openapix.CorsIntegration(this, {\n    headers: CorsHeaders.ANY,\n    origins: CorsOrigins.ANY,\n    methods: CorsMethods.ANY,\n  }),\n\n  paths: {/*...*/},\n});\n```\n\nThis will apply the given `cors` configuration to *every* path as `options` method. You may still do path specific overrides by adding an `options` method to specific paths.\n\n<br/>\n\n## API Gateway EndpointType\n\nAWS CDK API Gateway constructs default to [*Edge-optimized API endpoints*](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-endpoint-types.html#api-gateway-api-endpoint-types-edge-optimized) by using [`EndpointType.EDGE`](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_apigateway.RestApi.html#endpointtypes) as the default.\n\nThis construct `@alma-cdk/openapix` instead defaults to using [*Regional API endpoints*](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-endpoint-types.html#api-gateway-api-endpoint-types-regional) by setting `EndpointType.REGIONAL` as the default value. This is because we believe that in most cases you're better of by configuring your own CloudFront distribution in front the API. If you do that, you might also be interested in [`@alma-cdk/origin-verify` construct](https://github.com/alma-cdk/origin-verify).\n\nYou MAY override this default in `@alma-cdk/openapix` by providing your preferred endpoint types via `restApiProps`:\n\n```python\nnew openapix.Api(this, 'MyApi', {\n  source: './schema.yaml',\n\n  paths: {/*...*/},\n\n  restApiProps: {\n    endpointConfiguration: {\n      types: [ apigateway.EndpointType.EDGE ],\n    },\n  },\n});\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alma-cdk/openapix.git",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alma-cdk.openapix",
    "package_url": "https://pypi.org/project/alma-cdk.openapix/",
    "platform": null,
    "project_url": "https://pypi.org/project/alma-cdk.openapix/",
    "project_urls": {
      "Homepage": "https://github.com/alma-cdk/openapix.git",
      "Source": "https://github.com/alma-cdk/openapix.git"
    },
    "release_url": "https://pypi.org/project/alma-cdk.openapix/0.0.50/",
    "requires_dist": [
      "aws-cdk-lib (<3.0.0,>=2.32.1)",
      "constructs (<11.0.0,>=10.0.0)",
      "jsii (<2.0.0,>=1.70.0)",
      "publication (>=0.0.3)",
      "typeguard (~=2.13.3)"
    ],
    "requires_python": "~=3.7",
    "summary": "Combine the power of AWS CDK & OpenAPI YAML Schema Definitions",
    "version": "0.0.50",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17316534,
  "releases": {
    "0.0.42": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "380a1ef6456546e0055e8bd0de2a5636ad28170f80b5661c0114c2308edf7da2",
          "md5": "cd132d31b6b44bab26ac87828f1642b5",
          "sha256": "83fec626cd1c39caa108c7eaea299494345bc408d3faf9d07726c1d21a1eaced"
        },
        "downloads": -1,
        "filename": "alma_cdk.openapix-0.0.42-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd132d31b6b44bab26ac87828f1642b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 881804,
        "upload_time": "2022-09-05T12:01:19",
        "upload_time_iso_8601": "2022-09-05T12:01:19.350660Z",
        "url": "https://files.pythonhosted.org/packages/38/0a/1ef6456546e0055e8bd0de2a5636ad28170f80b5661c0114c2308edf7da2/alma_cdk.openapix-0.0.42-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b7b05b59efeb71c01eac1fbac80a105076e9f6b111c588e3b011cc3e9d75610",
          "md5": "657da5fa1574a7532b84531248736211",
          "sha256": "b9996484b23a1d514741aaaa90d6413a5385ae88905b2b45be2adb80a59198f2"
        },
        "downloads": -1,
        "filename": "alma-cdk.openapix-0.0.42.tar.gz",
        "has_sig": false,
        "md5_digest": "657da5fa1574a7532b84531248736211",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 883871,
        "upload_time": "2022-09-05T12:01:21",
        "upload_time_iso_8601": "2022-09-05T12:01:21.620106Z",
        "url": "https://files.pythonhosted.org/packages/8b/7b/05b59efeb71c01eac1fbac80a105076e9f6b111c588e3b011cc3e9d75610/alma-cdk.openapix-0.0.42.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.43": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12c2344e222a5765c54ea8d0255fc9d03716dda651547feb46ac3a76ace67853",
          "md5": "eb68fe123ef99407e6245b7d5bbeb5dd",
          "sha256": "78595927efc9ca53f0e90bf02313e151cff70a28cac459059f819abe1814db88"
        },
        "downloads": -1,
        "filename": "alma_cdk.openapix-0.0.43-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb68fe123ef99407e6245b7d5bbeb5dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 881773,
        "upload_time": "2022-09-05T12:08:33",
        "upload_time_iso_8601": "2022-09-05T12:08:33.539470Z",
        "url": "https://files.pythonhosted.org/packages/12/c2/344e222a5765c54ea8d0255fc9d03716dda651547feb46ac3a76ace67853/alma_cdk.openapix-0.0.43-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5878ad77d75d2a40366be1bf5f298be4d6a06a66431dc43385499078bb38688f",
          "md5": "2ba8ebcbb461ae1a86159d5cf1b83d54",
          "sha256": "da2a1f0308d2aa17808d0c77950795fac0ffcb26564e92b55d868eca389c22c6"
        },
        "downloads": -1,
        "filename": "alma-cdk.openapix-0.0.43.tar.gz",
        "has_sig": false,
        "md5_digest": "2ba8ebcbb461ae1a86159d5cf1b83d54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 883857,
        "upload_time": "2022-09-05T12:08:35",
        "upload_time_iso_8601": "2022-09-05T12:08:35.374548Z",
        "url": "https://files.pythonhosted.org/packages/58/78/ad77d75d2a40366be1bf5f298be4d6a06a66431dc43385499078bb38688f/alma-cdk.openapix-0.0.43.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.44": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f8e772e993ea7c9385b32625c44acd6ec74e6db152c43a0a807236d2b3706ac",
          "md5": "fc52247456186bd31e472eb12389e5f2",
          "sha256": "de21de8d6747f050d96eb77d9701ad6ac552152ba55ef6314dab8fb2d77ada61"
        },
        "downloads": -1,
        "filename": "alma_cdk.openapix-0.0.44-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc52247456186bd31e472eb12389e5f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 883816,
        "upload_time": "2022-10-24T09:43:47",
        "upload_time_iso_8601": "2022-10-24T09:43:47.237349Z",
        "url": "https://files.pythonhosted.org/packages/2f/8e/772e993ea7c9385b32625c44acd6ec74e6db152c43a0a807236d2b3706ac/alma_cdk.openapix-0.0.44-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d21b410100cd66d21bb2655a79d9e873c38575c332129821ae8f2b609a3fbfe4",
          "md5": "78785c5993943208a07965c7a939f6f1",
          "sha256": "354f61157e53632eff05c25d0cac2e611502c914199703266d818c909dcc1496"
        },
        "downloads": -1,
        "filename": "alma-cdk.openapix-0.0.44.tar.gz",
        "has_sig": false,
        "md5_digest": "78785c5993943208a07965c7a939f6f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 885933,
        "upload_time": "2022-10-24T09:43:48",
        "upload_time_iso_8601": "2022-10-24T09:43:48.836536Z",
        "url": "https://files.pythonhosted.org/packages/d2/1b/410100cd66d21bb2655a79d9e873c38575c332129821ae8f2b609a3fbfe4/alma-cdk.openapix-0.0.44.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.45": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc6f1128049e7141226bb76d0dacb025ca489ffa31fdd70c6c613901b6008f16",
          "md5": "6d0e04fdc5d665d657d1acd8248c5a4e",
          "sha256": "fbc5ec1ab58f63c730e514ed00bd794446a1a663452e73d83481531afa352fed"
        },
        "downloads": -1,
        "filename": "alma_cdk.openapix-0.0.45-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d0e04fdc5d665d657d1acd8248c5a4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 883827,
        "upload_time": "2022-10-24T09:48:09",
        "upload_time_iso_8601": "2022-10-24T09:48:09.710720Z",
        "url": "https://files.pythonhosted.org/packages/dc/6f/1128049e7141226bb76d0dacb025ca489ffa31fdd70c6c613901b6008f16/alma_cdk.openapix-0.0.45-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdc93af5a3b2e1dd0432418d1cd5d11992a8603c837f74e1313460f8352950d4",
          "md5": "af52726d19b7ba2cc3a4ff338d552f14",
          "sha256": "add444d765cbe8485db9280d2df42f87e2fc561864adc238fd10552a2230f9fe"
        },
        "downloads": -1,
        "filename": "alma-cdk.openapix-0.0.45.tar.gz",
        "has_sig": false,
        "md5_digest": "af52726d19b7ba2cc3a4ff338d552f14",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 885904,
        "upload_time": "2022-10-24T09:48:11",
        "upload_time_iso_8601": "2022-10-24T09:48:11.634236Z",
        "url": "https://files.pythonhosted.org/packages/fd/c9/3af5a3b2e1dd0432418d1cd5d11992a8603c837f74e1313460f8352950d4/alma-cdk.openapix-0.0.45.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.47": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "657fb4c7ec9091623e6cea81daca6dadf8799a52ac7b209c42952d27b9fee08a",
          "md5": "250fc0104e06bf63f14d0ce6c25f52bf",
          "sha256": "5793983b60652e720539fb7516c8450aa8e47ea2367c9f58161bb38b9db22122"
        },
        "downloads": -1,
        "filename": "alma_cdk.openapix-0.0.47-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "250fc0104e06bf63f14d0ce6c25f52bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 885676,
        "upload_time": "2023-01-19T08:25:33",
        "upload_time_iso_8601": "2023-01-19T08:25:33.297007Z",
        "url": "https://files.pythonhosted.org/packages/65/7f/b4c7ec9091623e6cea81daca6dadf8799a52ac7b209c42952d27b9fee08a/alma_cdk.openapix-0.0.47-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5ae20e2845cb70c34d835d19c0f25c368afb8d049871719f7123c369336f180",
          "md5": "66c5844e91b83c9e548555f667c85b2c",
          "sha256": "9935de777d75bc174365c456a4ce73e6f0537f6132e889bc10c6d008c278ac4b"
        },
        "downloads": -1,
        "filename": "alma-cdk.openapix-0.0.47.tar.gz",
        "has_sig": false,
        "md5_digest": "66c5844e91b83c9e548555f667c85b2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 887381,
        "upload_time": "2023-01-19T08:25:34",
        "upload_time_iso_8601": "2023-01-19T08:25:34.624040Z",
        "url": "https://files.pythonhosted.org/packages/d5/ae/20e2845cb70c34d835d19c0f25c368afb8d049871719f7123c369336f180/alma-cdk.openapix-0.0.47.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.48": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b87894a564c6bc82044963ae17698bb605443d1df5442776ee332bc8bd4c472d",
          "md5": "ce0f9e8381725ac3d971a0c43b9dff04",
          "sha256": "86b0be7994cbbeba38f674970c346da4a6fc265b1b7a0b919b40f6d0344b54e4"
        },
        "downloads": -1,
        "filename": "alma_cdk.openapix-0.0.48-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce0f9e8381725ac3d971a0c43b9dff04",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 885697,
        "upload_time": "2023-01-19T08:39:13",
        "upload_time_iso_8601": "2023-01-19T08:39:13.236667Z",
        "url": "https://files.pythonhosted.org/packages/b8/78/94a564c6bc82044963ae17698bb605443d1df5442776ee332bc8bd4c472d/alma_cdk.openapix-0.0.48-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b86475d63320aac4d7bacc800ac9054810e405229958d0311596db9e8964b2e",
          "md5": "e0c4fd4351c2ac477bfa1894dc0255cf",
          "sha256": "f61ef943f0f6bc831191174a62b4d33fa4ffeb73a7b7565d601a5729a403fbda"
        },
        "downloads": -1,
        "filename": "alma-cdk.openapix-0.0.48.tar.gz",
        "has_sig": false,
        "md5_digest": "e0c4fd4351c2ac477bfa1894dc0255cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 887396,
        "upload_time": "2023-01-19T08:39:14",
        "upload_time_iso_8601": "2023-01-19T08:39:14.775202Z",
        "url": "https://files.pythonhosted.org/packages/5b/86/475d63320aac4d7bacc800ac9054810e405229958d0311596db9e8964b2e/alma-cdk.openapix-0.0.48.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.49": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3f7ae194eb71822f005d4b8f386eec65461bea231d564c567cb90f1b3d9d3ba",
          "md5": "f7c6afd7c53cac83a1a446f310f66190",
          "sha256": "1acb3fbc46cc1a971ff0703c45ee8b74f9da354f6d283f7f90ef0b8dd39bcf9f"
        },
        "downloads": -1,
        "filename": "alma_cdk.openapix-0.0.49-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7c6afd7c53cac83a1a446f310f66190",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 888074,
        "upload_time": "2023-01-30T12:14:25",
        "upload_time_iso_8601": "2023-01-30T12:14:25.582216Z",
        "url": "https://files.pythonhosted.org/packages/e3/f7/ae194eb71822f005d4b8f386eec65461bea231d564c567cb90f1b3d9d3ba/alma_cdk.openapix-0.0.49-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24556268214eccc58234b8d429cb0190689105ed1fc6dde7b0808c0e13748c4a",
          "md5": "c56e632599a0f718fc7d5630daf79427",
          "sha256": "6abcdb13cb5e84f7984384e91179930bd9d26eeefab915ebe636db6ad56dce03"
        },
        "downloads": -1,
        "filename": "alma-cdk.openapix-0.0.49.tar.gz",
        "has_sig": false,
        "md5_digest": "c56e632599a0f718fc7d5630daf79427",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 889805,
        "upload_time": "2023-01-30T12:14:26",
        "upload_time_iso_8601": "2023-01-30T12:14:26.942509Z",
        "url": "https://files.pythonhosted.org/packages/24/55/6268214eccc58234b8d429cb0190689105ed1fc6dde7b0808c0e13748c4a/alma-cdk.openapix-0.0.49.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.50": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bedc208d3d2615d7c925acc71e89429b6ef3c02d1880e8437a522e36a58c663",
          "md5": "3e84616e79f9b120f73496fd3751229a",
          "sha256": "58cca626072cb251f07f5aefdf1778498a33f005a508c2527395a1ee2f5eec44"
        },
        "downloads": -1,
        "filename": "alma_cdk.openapix-0.0.50-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e84616e79f9b120f73496fd3751229a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 887317,
        "upload_time": "2023-03-16T09:29:54",
        "upload_time_iso_8601": "2023-03-16T09:29:54.753010Z",
        "url": "https://files.pythonhosted.org/packages/8b/ed/c208d3d2615d7c925acc71e89429b6ef3c02d1880e8437a522e36a58c663/alma_cdk.openapix-0.0.50-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03bf6ba88384322733eb458ab12efb145177dd1f04eb96a17318456035f3372c",
          "md5": "c5e492b3a85c1b3923792082734e7b7e",
          "sha256": "405b38d646227bc562385b998270fcafab40f3cf73eef56440da77b695b1cfa2"
        },
        "downloads": -1,
        "filename": "alma-cdk.openapix-0.0.50.tar.gz",
        "has_sig": false,
        "md5_digest": "c5e492b3a85c1b3923792082734e7b7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 889051,
        "upload_time": "2023-03-16T09:29:56",
        "upload_time_iso_8601": "2023-03-16T09:29:56.318323Z",
        "url": "https://files.pythonhosted.org/packages/03/bf/6ba88384322733eb458ab12efb145177dd1f04eb96a17318456035f3372c/alma-cdk.openapix-0.0.50.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8bedc208d3d2615d7c925acc71e89429b6ef3c02d1880e8437a522e36a58c663",
        "md5": "3e84616e79f9b120f73496fd3751229a",
        "sha256": "58cca626072cb251f07f5aefdf1778498a33f005a508c2527395a1ee2f5eec44"
      },
      "downloads": -1,
      "filename": "alma_cdk.openapix-0.0.50-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3e84616e79f9b120f73496fd3751229a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.7",
      "size": 887317,
      "upload_time": "2023-03-16T09:29:54",
      "upload_time_iso_8601": "2023-03-16T09:29:54.753010Z",
      "url": "https://files.pythonhosted.org/packages/8b/ed/c208d3d2615d7c925acc71e89429b6ef3c02d1880e8437a522e36a58c663/alma_cdk.openapix-0.0.50-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03bf6ba88384322733eb458ab12efb145177dd1f04eb96a17318456035f3372c",
        "md5": "c5e492b3a85c1b3923792082734e7b7e",
        "sha256": "405b38d646227bc562385b998270fcafab40f3cf73eef56440da77b695b1cfa2"
      },
      "downloads": -1,
      "filename": "alma-cdk.openapix-0.0.50.tar.gz",
      "has_sig": false,
      "md5_digest": "c5e492b3a85c1b3923792082734e7b7e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.7",
      "size": 889051,
      "upload_time": "2023-03-16T09:29:56",
      "upload_time_iso_8601": "2023-03-16T09:29:56.318323Z",
      "url": "https://files.pythonhosted.org/packages/03/bf/6ba88384322733eb458ab12efb145177dd1f04eb96a17318456035f3372c/alma-cdk.openapix-0.0.50.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}