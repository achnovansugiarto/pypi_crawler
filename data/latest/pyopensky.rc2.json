{
  "info": {
    "author": "Junzi Sun",
    "author_email": "j.sun-1@tudelft.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "Python interface for OpenSky database with pyModeS decoder\n===========================================================\n\nIntroduction\n---------------------\n\nThis Python library provides interfaces to:\n\n1. Query raw and ADS-B messages from OpenSky Impala database.\n2. Decode OpenSky Comm-B information automatically using pyModeS.\n\n\nThe ``pyopensky`` connects the `pyModeS <https://github.com/junzis/pyModeS>`_ decoder and OpenSky-network raw Mode-S data. It aims at making the Enhance Mode-S information form OpenSky network more accessible for researchers. \n\nIt can automatically retrieve and download data in ``rollcall_replies_data4`` table from the `OpenSky Impala database <https://opensky-network.org/data/impala>`_, and then decodes several common Mode-S Comm-B message types. Currently, follows Mode-S downlink reports are supported:\n\n**Enhanced Mode-S:**\n\n- BDS40: Selected vertical intention report\n- BDS50: Track and turn report\n- BDS60: Heading and speed report\n\n**Mode-S meteorological information:**\n\n- BDS44: Meteorological routine air report\n- BDS45: Meteorological hazard report\n\n\nInstall\n-----------------------\n\nIn order to successfully use this library, you need:\n\n**1. Get the ``pyModeS`` library**\n\nInstall the up-to-date pyModeS version from PyPI:\n\n.. code-block:: sh\n\n  $ pip install pyModeS --upgrade\n\nInstall this library:\n\n.. code-block:: sh\n\n  $ pip install pyopensky\n  or\n  $ pip install git+https://github.com/junzis/pyopensky\n\n\n\n**2. Obtain access to OpenSky Impala database**\n\nApply access at: https://opensky-network.org/data/impala. The user name and password will be used for the following configuration.\n\n\n**3. Configure OpenSky Impala login**\n\nThe first time you use this library, the following configuration file will be created:\n\n.. code-block::\n\n  ~/.config/pyopensky/secret.conf\n\nwith the following content:\n\n.. code-block::\n\n  [default]\n  server = data.opensky-network.org\n  port = 2230\n  username =\n  password =\n\nFill in the empty ``username`` and ``password`` field with your OpenSky login.\n\n\nUse the library\n-----------------\n\nEHSHelper\n**********\n\nThe ``EHSHelper`` class allows the users to download and decode Enhanced Mode-S messages automatically.\n\nTo get the messages, the query requires an ICAO address (or a list of ICAO addresses), the start time, and the end time for the messages. By default, all BDS40, BDS50, and BDS60 messages are decoded. The results is represented in a pandas ``DataFrame``.\n\nAn example is shown as follows:\n\n.. code-block:: python\n\n  from pyopensky import EHSHelper\n\n  ehs = EHSHelper()\n\n  df = ehs.get(\n      icao24=\"4844C6\",\n      start=\"2019-10-01 08:00:00\",\n      end=\"2019-10-01 08:10:00\",\n  )\n\nIt is also possible to decode a subset of EHS message types, by specify the BDS codes using ``require_bds()`` function. For example:\n\n.. code-block:: python\n\n  ehs.require_bds([\"BDS50\", \"BDS60\"])\n\n  df = ehs.get(\n      icao24=\"4844C6\",\n      start=\"2019-10-01 08:00:00\",\n      end=\"2019-10-01 08:10:00\",\n  )\n\n\nMeteoHelper\n************\n\nThe ``MeteoHelper`` class allows the users to download and decoded meteorological messages automatically. By default it provides information from BDS44 messages. Information from BDS45 messages can also be enable with ``include45=True`` switch.\n\nThe interface is similar to ``EHSHelper``, for example:\n\n.. code-block:: python\n\n  from pyopensky import MeteoHelper\n\n  meteo = MeteoHelper()\n  df = meteo.get(\n      icao24=[\"341395\"],\n      start=\"2020-03-15 19:20:00\",\n      end=\"2020-03-15 20:20:00\",\n      include45=False,\n  )\n\nOpenskyImpalaWrapper\n**********************\n\nAll previous queries are based on the ``OpenskyImpalaWrapper`` class from the library. The wrapper class can also be used independently to query OpenSky Impala database. It can be used for raw messages, as wells as decoded ADS-B data by OpenSky.\n\n**Be aware!** The number of records can be massive without the ICAO filter. Thus the query can take a long time. To increase the query efficiency, please consider using a ICAO filter when possible.\n\nBy defined the query type as ``type=\"raw\"``, the raw Mode-S message can be obtained. For example:\n\n.. code-block:: python\n\n  from pyopensky import OpenskyImpalaWrapper\n\n  opensky = OpenskyImpalaWrapper()\n\n  # Perform a simple and massive query (~20k records for 1 second here!)\n  df = opensky.query(\n      type=\"raw\", start=\"2018-07-01 13:00:00\", end=\"2018-07-01 13:00:01\"\n  )\n\n  # Perform a query with ICAO filter\n  df = opensky.query(\n      type=\"raw\",\n      start=\"2018-07-01 13:00:00\",\n      end=\"2018-07-01 13:00:10\",\n      icao24=[\"424588\", \"3c66a9\"],\n  )\n\nBy switching the query type from ``type=\"raw\"`` to ``type=\"adsb\"``, you can obtained the history ADS-B information in a similar way. You can also add a boundary (with format of ``[lat1, lon1, lat2, lon2]``) to the queries. For example:\n\n.. code-block:: python\n\n  from pyopensky import OpenskyImpalaWrapper\n\n  opensky = OpenskyImpalaWrapper()\n\n  # Perform a simple and massive query (~25k records for 5 second here!)\n  df = opensky.query(\n      type=\"adsb\", start=\"2018-08-01 13:00:00\", end=\"2018-08-01 13:00:10\"\n  )\n\n  # Perform a query with ICAO address filter\n  df = opensky.query(\n      type=\"adsb\",\n      start=\"2018-07-01 13:00:00\",\n      end=\"2018-07-01 13:00:10\",\n      icao24=[\"424588\", \"3c66a9\"],\n      bound=[30, -20, 65, 20],\n  )\n\n\nMore examples\n--------------\n\nMore complete examples can be found in the ``test`` directory of this library.\n\n\nOther information\n-------------------\nIf you find this project useful for your research, please consider citing the following works:\n\n.. code-block:: bibtex\n\n  @inproceedings{sun2019integrating,\n    title={Integrating pyModeS and OpenSky Historical Database},\n    author={Sun, Junzi and Hoekstra, Jacco M},\n    booktitle={Proceedings of the 7th OpenSky Workshop},\n    volume={67},\n    pages={63--72},\n    year={2019}\n  }\n\n  @article{sun2019pymodes,\n      title={pyModeS: Decoding Mode-S Surveillance Data for Open Air Transportation Research},\n      author={J. {Sun} and H. {V\\^u} and J. {Ellerbroek} and J. M. {Hoekstra}},\n      journal={IEEE Transactions on Intelligent Transportation Systems},\n      year={2019},\n      doi={10.1109/TITS.2019.2914770},\n      ISSN={1524-9050},\n  }\n\n  @inproceedings{schafer2014opensky,\n    title={Bringing up OpenSky: A large-scale ADS-B sensor network for research},\n    author={Sch{\\\"a}fer, Matthias and Strohmeier, Martin and Lenders, Vincent and Martinovic, Ivan and Wilhelm, Matthias},\n    booktitle={Proceedings of the 13th international symposium on Information processing in sensor networks},\n    pages={83--94},\n    year={2014},\n    organization={IEEE Press}\n  }\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/junzis/pyopensky",
    "keywords": "Mode-S pyModeS OpenSky",
    "license": "GNU GPL v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyopensky",
    "package_url": "https://pypi.org/project/pyopensky/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyopensky/",
    "project_urls": {
      "Homepage": "https://github.com/junzis/pyopensky"
    },
    "release_url": "https://pypi.org/project/pyopensky/1.4/",
    "requires_dist": [
      "pandas",
      "paramiko",
      "pyModeS (>=2.0)"
    ],
    "requires_python": "",
    "summary": "Python interface for OpenSky database with pyModeS decoder",
    "version": "1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8926291,
  "releases": {
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2941b9162020349222b5b2875fac90e8fd245f358ca883865983778225a6ce4",
          "md5": "91527a3923b98da0f9b40e954553c1e0",
          "sha256": "56adb119e3cdc3798d8ef7149c99503004aeadd8f77068f17606dc312fb2858a"
        },
        "downloads": -1,
        "filename": "pyopensky-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91527a3923b98da0f9b40e954553c1e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23853,
        "upload_time": "2020-08-14T13:26:20",
        "upload_time_iso_8601": "2020-08-14T13:26:20.167584Z",
        "url": "https://files.pythonhosted.org/packages/f2/94/1b9162020349222b5b2875fac90e8fd245f358ca883865983778225a6ce4/pyopensky-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a47d2ab5e1e063e2560839df5904a034a3bae077d51dac4beded8893b7346512",
          "md5": "28f1f649518c77d2d7ca9b217bb44455",
          "sha256": "a548ea5b8020d54bcb010a127263b5051f68c3aebc968874e0819db72c523825"
        },
        "downloads": -1,
        "filename": "pyopensky-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "28f1f649518c77d2d7ca9b217bb44455",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14125,
        "upload_time": "2020-08-14T13:26:23",
        "upload_time_iso_8601": "2020-08-14T13:26:23.314395Z",
        "url": "https://files.pythonhosted.org/packages/a4/7d/2ab5e1e063e2560839df5904a034a3bae077d51dac4beded8893b7346512/pyopensky-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4eb07a95320a639b109f284c9cbd013cbbe5587d1ecc273346f7ffd86c3e0f40",
          "md5": "d903a83eafd8365e238dbefbcdee455b",
          "sha256": "a465acf6b6237eb6bd7462d1302e779c38f0a6faf7b9b4c78f0ecbb2f90e4d81"
        },
        "downloads": -1,
        "filename": "pyopensky-1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d903a83eafd8365e238dbefbcdee455b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24831,
        "upload_time": "2020-12-17T18:31:03",
        "upload_time_iso_8601": "2020-12-17T18:31:03.405906Z",
        "url": "https://files.pythonhosted.org/packages/4e/b0/7a95320a639b109f284c9cbd013cbbe5587d1ecc273346f7ffd86c3e0f40/pyopensky-1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0225dc83177a289354fb529b5678e1aa67e5cbede67d8f44e2f2ee26781b0ecd",
          "md5": "423f618ad9056aca3055ea0a734f5f11",
          "sha256": "455696db91845ffe30d0afc7924e5bbcf3de31f83b6c318a631bdc7d52364c36"
        },
        "downloads": -1,
        "filename": "pyopensky-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "423f618ad9056aca3055ea0a734f5f11",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14824,
        "upload_time": "2020-12-17T18:31:05",
        "upload_time_iso_8601": "2020-12-17T18:31:05.046526Z",
        "url": "https://files.pythonhosted.org/packages/02/25/dc83177a289354fb529b5678e1aa67e5cbede67d8f44e2f2ee26781b0ecd/pyopensky-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4eb07a95320a639b109f284c9cbd013cbbe5587d1ecc273346f7ffd86c3e0f40",
        "md5": "d903a83eafd8365e238dbefbcdee455b",
        "sha256": "a465acf6b6237eb6bd7462d1302e779c38f0a6faf7b9b4c78f0ecbb2f90e4d81"
      },
      "downloads": -1,
      "filename": "pyopensky-1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d903a83eafd8365e238dbefbcdee455b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 24831,
      "upload_time": "2020-12-17T18:31:03",
      "upload_time_iso_8601": "2020-12-17T18:31:03.405906Z",
      "url": "https://files.pythonhosted.org/packages/4e/b0/7a95320a639b109f284c9cbd013cbbe5587d1ecc273346f7ffd86c3e0f40/pyopensky-1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0225dc83177a289354fb529b5678e1aa67e5cbede67d8f44e2f2ee26781b0ecd",
        "md5": "423f618ad9056aca3055ea0a734f5f11",
        "sha256": "455696db91845ffe30d0afc7924e5bbcf3de31f83b6c318a631bdc7d52364c36"
      },
      "downloads": -1,
      "filename": "pyopensky-1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "423f618ad9056aca3055ea0a734f5f11",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14824,
      "upload_time": "2020-12-17T18:31:05",
      "upload_time_iso_8601": "2020-12-17T18:31:05.046526Z",
      "url": "https://files.pythonhosted.org/packages/02/25/dc83177a289354fb529b5678e1aa67e5cbede67d8f44e2f2ee26781b0ecd/pyopensky-1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}