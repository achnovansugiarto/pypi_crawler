{
  "info": {
    "author": "",
    "author_email": "Chip Hollingsworth <cholling@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Hexea\n\nThis is a simple library for working with the closely related connection games of Y and Hex.  This is not meant to be a standalone, playable game, but rather a set of tools one could use to implement such a game, train a machine learning model to play a game, and so forth.\n\n## Basic Usage\n\nAll of the functionality currently available in the `hexea` module is in the `Yboard` and `Hexboard` classes, which both implement the `Board` protocol.  `Yboard` is implemented as a C++ extension using [`pybind11`](https://pybind11.readthedocs.io/en/stable/).  `Hexboard` is a Python wrapper that uses a `Yboard` under the hood, since [Hex is a special case of Y](https://www.cs.cornell.edu/~adith/docs/y_hex.pdf), and a Y board can be converted into a Hex board by selectively filling in hexes.\n\nThe `hexea` module also provides a `Marker` class, which is an enumeration class for representing the type of game marker inhabiting a hex:  `Marker.red`, `Marker.blue`, or `Marker.none`.  The `__str__` method of `Marker`  has been overridden to return a character representing the marker:  `X`, `O`, or `.`, respectively.\n\nThe following methods are available for both `Yboard` and `Hexboard`:\n\n#### `get_next_player()`\n\nReturns a `Marker` indicating which player is up next:  `Marker.red` for an empty board, and then alternating between `Marker.blue` and `Marker.red` as moves are played.  Note that this does not change even after a player has won; it is possible to keep placing moves as long as there are empty hexes, and even when the board is filled up, `get_next_player()` will return either `Marker.red` or `Marker.blue`.  If this behavior turns out to be undesirable in practice, code may be added in a future version to return `Marker.none` whenever the board represents a winning position for either player.\n\n#### `move(col: int, row:int)`\n\nPlaces a `Marker` representing the next player at the specified column and row.  Throws `IndexError` if the specified column and row do not exist, and `ValueError` if the specified location is already occupied.\n\n`move()` returns `self` in order to allow daisy chaining like so:\n\n``` python\nb = (\n    Hexboard(3)\n    .move(0, 1)\n    .move(1, 0)\n    .move(1, 1)\n`)\n\n```\n\n#### get_free_hexes()\n\nReturns a list of 2-tuples, each of which contains the column and row of a hex that is not currently occupied.\n\n#### get_winner()\n\nReturns a `Marker` representing the current winning player, or `Marker.none` if the board is not yet in a winning state.\n\n#### random_playout()\n\nPerforms a single random playout.  Starting with the current board state, markers for each player are alternately placed on a random hex until no empty hexes are left.  Does not stop when a winning position has been reached.  This is in the interest of speed:  Random playouts are typically done hundreds or thousands at a time, and checking for a winner after each turn would be slower than just filling up the board.\n\n#### random_playouts_won(num_playouts: int)\n\nStarting with the current board position, runs `num_playouts` random playouts.  Returns a dictionary whose keys are `Marker.red` and `Marker.blue`, and whose values are the number of wins each player has.\n\nSince neither Hex nor Y can end in a draw, there is never a key for `Marker.none`.\n\n#### get_dict()\n\nGets a dictionary whose keys are all strings representing a cell on the board (e.g. `cell0,0`) and whose values are `Marker` objects indicating the occupant of the cell.\n\nThis is admittedly an esoteric method.  I once used something similar when building a Y-playing AI using genetic programming:  Each gene represented a function that performed mathematical operations on the values of cells, and was evaluated using string subtitution (replacing `cell0,0` with the integer value of that cell).  There are undoubtedly better ways to do this, so expect this method to change or be deprecated soon.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Copyright (c) 2021 Charles Hollingsworth <cholling@gmail.com>  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hexea",
    "package_url": "https://pypi.org/project/hexea/",
    "platform": null,
    "project_url": "https://pypi.org/project/hexea/",
    "project_urls": {
      "repository": "https://codeberg.org/cholling/hexea"
    },
    "release_url": "https://pypi.org/project/hexea/0.2.1/",
    "requires_dist": [
      "pytest ; extra == 'dev'",
      "black ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "pyright ; extra == 'dev'"
    ],
    "requires_python": "<4.0,>=3.11",
    "summary": "Python library for the games of Hex and Y",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17305477,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fff585285a79e58541985a5536e938a5797762a18d80f2e20bbfe257dcade2e1",
          "md5": "02013f4dd85f43b45df4d79b52e28693",
          "sha256": "ff1744e119068d7c3fc5dcd7fbdbb63f05c324bb7d8c7885b5b641b22a8e1acd"
        },
        "downloads": -1,
        "filename": "hexea-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "02013f4dd85f43b45df4d79b52e28693",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.11,<4.0",
        "size": 6660,
        "upload_time": "2023-03-07T17:55:52",
        "upload_time_iso_8601": "2023-03-07T17:55:52.994390Z",
        "url": "https://files.pythonhosted.org/packages/ff/f5/85285a79e58541985a5536e938a5797762a18d80f2e20bbfe257dcade2e1/hexea-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5c92d58353ac270944d713a1566ff69aca2b1da1391ed48572603a10a4e0cda",
          "md5": "4649fce951730c2e4658bd41e7efa07c",
          "sha256": "d2af2fc0f7864f96e9eb22a01b48c4dbace12bb4ac9a9baee9e8b7c2fcb26500"
        },
        "downloads": -1,
        "filename": "hexea-0.2.1-cp311-cp311-macosx_13_0_x86_64.whl",
        "has_sig": false,
        "md5_digest": "4649fce951730c2e4658bd41e7efa07c",
        "packagetype": "bdist_wheel",
        "python_version": "cp311",
        "requires_python": "<4.0,>=3.11",
        "size": 111390,
        "upload_time": "2023-03-14T13:29:27",
        "upload_time_iso_8601": "2023-03-14T13:29:27.050615Z",
        "url": "https://files.pythonhosted.org/packages/a5/c9/2d58353ac270944d713a1566ff69aca2b1da1391ed48572603a10a4e0cda/hexea-0.2.1-cp311-cp311-macosx_13_0_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e2d43a093a194fbefe2c2a9607869da7c3da089b93f252ce06b027d6ded8a8e",
          "md5": "057222b90e94663c03ed1af800a4c93b",
          "sha256": "0ed1da8860754b04d0d1c484dc85775016bb51b0b9a0453d558dd8e0dffbc0a2"
        },
        "downloads": -1,
        "filename": "hexea-0.2.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "057222b90e94663c03ed1af800a4c93b",
        "packagetype": "bdist_wheel",
        "python_version": "cp311",
        "requires_python": "<4.0,>=3.11",
        "size": 141450,
        "upload_time": "2023-03-15T15:15:40",
        "upload_time_iso_8601": "2023-03-15T15:15:40.999207Z",
        "url": "https://files.pythonhosted.org/packages/7e/2d/43a093a194fbefe2c2a9607869da7c3da089b93f252ce06b027d6ded8a8e/hexea-0.2.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c31f6d2740aa39a35a9dc2db67cfb0ad19126950e9b277365bdd77f67fa33739",
          "md5": "a7d2240adfd70f067a2275b28a4b24a2",
          "sha256": "5f18ecfd5947034aa7dfd739343de85463c1cc3272cd416009e5ee7bd14b8b2c"
        },
        "downloads": -1,
        "filename": "hexea-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a7d2240adfd70f067a2275b28a4b24a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<4.0,>=3.11",
        "size": 7546,
        "upload_time": "2023-03-14T13:29:28",
        "upload_time_iso_8601": "2023-03-14T13:29:28.962190Z",
        "url": "https://files.pythonhosted.org/packages/c3/1f/6d2740aa39a35a9dc2db67cfb0ad19126950e9b277365bdd77f67fa33739/hexea-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5c92d58353ac270944d713a1566ff69aca2b1da1391ed48572603a10a4e0cda",
        "md5": "4649fce951730c2e4658bd41e7efa07c",
        "sha256": "d2af2fc0f7864f96e9eb22a01b48c4dbace12bb4ac9a9baee9e8b7c2fcb26500"
      },
      "downloads": -1,
      "filename": "hexea-0.2.1-cp311-cp311-macosx_13_0_x86_64.whl",
      "has_sig": false,
      "md5_digest": "4649fce951730c2e4658bd41e7efa07c",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": "<4.0,>=3.11",
      "size": 111390,
      "upload_time": "2023-03-14T13:29:27",
      "upload_time_iso_8601": "2023-03-14T13:29:27.050615Z",
      "url": "https://files.pythonhosted.org/packages/a5/c9/2d58353ac270944d713a1566ff69aca2b1da1391ed48572603a10a4e0cda/hexea-0.2.1-cp311-cp311-macosx_13_0_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7e2d43a093a194fbefe2c2a9607869da7c3da089b93f252ce06b027d6ded8a8e",
        "md5": "057222b90e94663c03ed1af800a4c93b",
        "sha256": "0ed1da8860754b04d0d1c484dc85775016bb51b0b9a0453d558dd8e0dffbc0a2"
      },
      "downloads": -1,
      "filename": "hexea-0.2.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "057222b90e94663c03ed1af800a4c93b",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": "<4.0,>=3.11",
      "size": 141450,
      "upload_time": "2023-03-15T15:15:40",
      "upload_time_iso_8601": "2023-03-15T15:15:40.999207Z",
      "url": "https://files.pythonhosted.org/packages/7e/2d/43a093a194fbefe2c2a9607869da7c3da089b93f252ce06b027d6ded8a8e/hexea-0.2.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c31f6d2740aa39a35a9dc2db67cfb0ad19126950e9b277365bdd77f67fa33739",
        "md5": "a7d2240adfd70f067a2275b28a4b24a2",
        "sha256": "5f18ecfd5947034aa7dfd739343de85463c1cc3272cd416009e5ee7bd14b8b2c"
      },
      "downloads": -1,
      "filename": "hexea-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a7d2240adfd70f067a2275b28a4b24a2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<4.0,>=3.11",
      "size": 7546,
      "upload_time": "2023-03-14T13:29:28",
      "upload_time_iso_8601": "2023-03-14T13:29:28.962190Z",
      "url": "https://files.pythonhosted.org/packages/c3/1f/6d2740aa39a35a9dc2db67cfb0ad19126950e9b277365bdd77f67fa33739/hexea-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}