{
  "info": {
    "author": "Miguel Almeida",
    "author_email": "mplabdev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Internationalization"
    ],
    "description": "\ncheck whether two lines (x1,x2) and (x3,x4) on the x-axis do overlap or not \n\nIt returns True if they DO overlap, otherwise False\n\nAs an example, (1,5) and (2,6) overlaps but not (1,5) and (6,8).\n\nThe solution was based on the following schema:\n\n                 A0------------------A1\n      B0------B1                          B0------B1\n\n          if B1<A0 OR B0>A1 then\n             Line B does NOT overlap Line A\n          else\n             Line B DOES ovelap Line A\n\n\nTherefore, we need to make sure the A and B are ordered:\n\n    def swap(X):\n        '''\n        this function does make sure the pair is \n        ordered (a,b) where a<b\n        (10, -5) would become (-5, 10)\n        '''\n        if X[0]>X[1]:\n            return (X[1],X[0])\n        return X\n\n    A, B = swap(A), swap(B)\n\n Proposed solution:\n\n def isbovera(A,B):\n\n    # Return True if A Line overlaps B Line; False otherwise\n\n    A, B = swap(A), swap(B)\n\n    return not (B[1]<A[0] or B[0]>A[1])\n\nIn order to call this function, please take a look at the testOverlapV0.py\n\n(venv) C:\\work\\vanhack\\venv\\Quiz\\test_A>python testOverlapV0.py\n\nThis program that accepts two lines (x1,x2) and (x3,x4) on the x-axis and returns \nwhether they overlap (True) or not overlap (False)\n\nEnter total number of lines to check, default=1 pair to check\n\nplease add  1 lines to be checked - use comma\n\n(1,2),(3,4) should be typed as 1,2,3,4\n\n1,5,2,6\n\n(1.0, 5.0) (2.0, 6.0) True\n\nTrue means (1,2) and (5,6) do overlap\n\nLet's check the following pair (1,5) and (6,8)\n\n(1,5) and (6,8) should be entered as below:\n\n1,5,6,8\n\n\n(1.0, 5.0) (6.0, 8.0) False\n\nFalse means (1,2) and (6,8) do NOT overlap\n\nNote:\n We are using float although has no mention about it - set/intersection could also handle it but only for int figures\n\n in order to run it as a batch module, a text file should be created with n pairs (comma separeted) as follow:\n\n first line, number of pair to check\n second line next pair to check\n and so on\n\nex:\n\n4\n\n13 , -6 , -8 , 3\n\n-15 , -6 , 4 , -11\n\n-4 , -2 , 0 , -20\n\n-18 , 9 , 10 , 12\n\n** please check testsample.txt ** \n\npython testOverlapV0.py <testsample.txt\n\nThis program that accepts two lines (x1,x2) and (x3,x4) on the x-axis and returns whether they overlap\nEnter total number of lines to check, default=1 pair to check\nplease add  100 lines to be checked - use comma\n(1,2),(3,4) should be typed as 1,2,3,4\n\n(13.0, -6.0) (-8.0, 3.0) True\n\n(-15.0, -6.0) (4.0, -11.0) True\n\n(-4.0, -2.0) (0.0, -20.0) True\n\n(-18.0, 9.0) (10.0, 12.0) False\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/miguelluiz/overlap/archive/v_01.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/miguelluiz/overlap",
    "keywords": "Overlap,A over B",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "isover10",
    "package_url": "https://pypi.org/project/isover10/",
    "platform": "",
    "project_url": "https://pypi.org/project/isover10/",
    "project_urls": {
      "Download": "https://github.com/miguelluiz/overlap/archive/v_01.tar.gz",
      "Homepage": "https://github.com/miguelluiz/overlap"
    },
    "release_url": "https://pypi.org/project/isover10/0.1.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Check whether two lines A (x1,x2) and B (x3,x4) on the x-axis whether they overlap or not",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5108417,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72b98980da9e2b682608e0f64a0b086979c87aa4a4864e8e4712431bd2e60a27",
          "md5": "2d00365a70c091cf9fbcfccb0db62b39",
          "sha256": "f4a11465492f8f14dc0503055b588d5e5370b08d3117b0887ea6481f32794eee"
        },
        "downloads": -1,
        "filename": "isover10-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d00365a70c091cf9fbcfccb0db62b39",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4957,
        "upload_time": "2019-04-06T22:02:03",
        "upload_time_iso_8601": "2019-04-06T22:02:03.045865Z",
        "url": "https://files.pythonhosted.org/packages/72/b9/8980da9e2b682608e0f64a0b086979c87aa4a4864e8e4712431bd2e60a27/isover10-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f49de9b44a5df195349aedfe485623485a5bbb06945b2ea36cb78c903ba145ab",
          "md5": "83b6fb488105d5d65d2fa2714718e42f",
          "sha256": "27f6983d0ee8b5b24b692d727d7eae3bebbdbabc97fbb870cd5a82ebcfee0b9f"
        },
        "downloads": -1,
        "filename": "isover10-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "83b6fb488105d5d65d2fa2714718e42f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4958,
        "upload_time": "2019-04-06T22:00:28",
        "upload_time_iso_8601": "2019-04-06T22:00:28.448462Z",
        "url": "https://files.pythonhosted.org/packages/f4/9d/e9b44a5df195349aedfe485623485a5bbb06945b2ea36cb78c903ba145ab/isover10-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f49de9b44a5df195349aedfe485623485a5bbb06945b2ea36cb78c903ba145ab",
        "md5": "83b6fb488105d5d65d2fa2714718e42f",
        "sha256": "27f6983d0ee8b5b24b692d727d7eae3bebbdbabc97fbb870cd5a82ebcfee0b9f"
      },
      "downloads": -1,
      "filename": "isover10-0.1.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "83b6fb488105d5d65d2fa2714718e42f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4958,
      "upload_time": "2019-04-06T22:00:28",
      "upload_time_iso_8601": "2019-04-06T22:00:28.448462Z",
      "url": "https://files.pythonhosted.org/packages/f4/9d/e9b44a5df195349aedfe485623485a5bbb06945b2ea36cb78c903ba145ab/isover10-0.1.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}