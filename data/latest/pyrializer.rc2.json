{
  "info": {
    "author": "Alfonso Ruzafa",
    "author_email": "alfonso.ruzafa@movo.me",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Pyrializer\n\nA Python object (de)serializer\n\n## Installation\n\n~~~\n$ pip install pyrializer\n~~~\n\n## Basic usage\n\nYou must define classes and describe what attributes and their types using\nclass attributes like this:\n\n~~~ python\nclass Person\n  name = str\n  age = int\n  gender = str\n~~~\n\nSee [Supported types](#supported-types) below.\n\n\n### Decoding from a serialized value\n\nDecoding an object maps a serialized value into a Python object:\n\n~~~ python\nfrom pyrializer import decode\n\npayload = {\n  'name': 'John Doe',\n  'age': 52,\n  'job': {\n    'name': 'Software Engineer',\n    'salary': 24000\n  },\n  'hobbies': ['fishing', 'skating']\n}\n\nclass Job:\n  name = str\n  role = str\n  salary = int\n\nclass Address:\n  desc = str\n  city = str\n  country = str\n  zip = int\n\nclass Person:\n  name = str\n  age = int\n  job = Job\n  hobbies = [str]\n  address = Address\n\nperson = decode(Person, payload)\n\nperson.name          # John Doe\nperson.job.salary    # 24000\nperson.job.role      # None\nperson.hobbies[1]    # skating\nperson.address.city  # None\n~~~\n\n\n### Encoding to a serialized value\n\nEncoding an object transform a Python object into a serializable format that can\nbe easily exported to others formats, such as JSON:\n\n~~~ python\nfrom pyrializer import encode\n\nencode(Person, person) # --> { 'name': 'John Doe', ... }\n~~~\n\nAdditionaly, you can decorate the classes you want to (de)serialize with the\n```serializable``` decorator. This decorator extends the classes with two\nadditional methods:\n\n~~~ python\nfrom pyrializer import serializable\n\n@serializable\nclass Person:\n  ...\n\nperson = Person.decode(person_payload)\n\nperson.encode() # --> { 'name': 'John Doe', ... }\n~~~\n\n\n## Supported types\n\nHere is some examples of supported types\n\n| \\<type>       | JSON equivalent                               |\n|---------------|-----------------------------------------------|\n| `None`        | Any type                                      |\n| `str`         | String                                        |\n| `int`         | Integer                                       |\n| `float`       | Float                                         |\n| `bool`        | Boolean                                       |\n| `[]`          | Array of any type                             |\n| `ClassName`   | Object                                        |\n| _Custom type_ | Any. See [Custom types](#custom-types) below. |\n\nMore advanced examples:\n\n~~~ python\nclass Example:\n  array_of_array_of_ints = [ [ int ] ]  # [ [1,2], [3, 4], [], [5, 6] ]\n  whatever = None  # 42, False, AnotherObject(), etc...\n~~~\n\n\n## Custom types\n\nCustom types allows to decode values that have been previously encoded using a\nprimitive type and in a convenience format.\n\nSome examples include:\n- Unix timestamps: Dates encoded as integers\n- ISO-8601: Dates encoded as strings\n- Gender: Male or female encoded as booleans\n\nTo declare a Custom Type you need to create a class that inherit the `CustomType`\nand define two methods: `decode` and `encode`.\n\nFor example, the following snippets declares a custom type to decode an ISO-8601\ndate into a Python's datetime object and vice versa.\n\n~~~ python\nfrom json import loads\nfrom datetime import datetime\nfrom pyrializer import serializable\nfrom pyrializer.types import CustomType\n\nclass ISO_8601(CustomType):\n    def decode(self, fvalue):\n        return datetime.strptime(fvalue, '%Y-%m-%dT%H:%M:%SZ')\n\n    def encode(self, fvalue):\n        return datetime.strftime(fvalue, '%Y-%m-%dT%H:%M:%SZ')\n\n@serializable\nclass Person:\n    name = str\n    birthdate = ISO_8601  # here we use the custom type\n\njson_payload = json_loads('''\n{\n    \"name\": \"John Doe\",\n    \"birthdate\": \"1984-01-23T09:37:21Z\"\n}\n''')\n\nperson = Person.decode(payload)\n\nprint(type(person.birthdate))  # <class 'datetime.datetime'>\nprint(person.birthdate.year)   # 1984\n\nprint(person.encode())         # {'name': 'John Doe', 'birthdate': '2000-01-23T09:37:21Z'}\n~~~\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/superruzafa/pyrializer",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyrializer",
    "package_url": "https://pypi.org/project/pyrializer/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyrializer/",
    "project_urls": {
      "Homepage": "https://github.com/superruzafa/pyrializer",
      "Repository": "https://github.com/superruzafa/pyrializer"
    },
    "release_url": "https://pypi.org/project/pyrializer/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "A Python object (de)serializer",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6710645,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b21bc2ff89849089946e27765d33ea0a872017f232096d91bd84c742fce09e7",
          "md5": "c867e61e6e2a2dc39f03beee2a82b4a5",
          "sha256": "6b10dd35b3c284069897b4bc2594aef71b2c015a7d9968447b4bd1dde4ffbfcf"
        },
        "downloads": -1,
        "filename": "pyrializer-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c867e61e6e2a2dc39f03beee2a82b4a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 3725,
        "upload_time": "2020-02-25T18:19:32",
        "upload_time_iso_8601": "2020-02-25T18:19:32.802117Z",
        "url": "https://files.pythonhosted.org/packages/3b/21/bc2ff89849089946e27765d33ea0a872017f232096d91bd84c742fce09e7/pyrializer-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6d000603dab87dd4ca7f55605681ca722ea327a56b85ee811734ea8080d975d",
          "md5": "31e0b17f1d3067cc21e6bb8a19c21f68",
          "sha256": "a53c7ce084e42ac19481c00efce2c6f9326bc1f9ce87a3b8490dcfed7d4048cd"
        },
        "downloads": -1,
        "filename": "pyrializer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "31e0b17f1d3067cc21e6bb8a19c21f68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 3202,
        "upload_time": "2020-02-25T18:19:35",
        "upload_time_iso_8601": "2020-02-25T18:19:35.257534Z",
        "url": "https://files.pythonhosted.org/packages/e6/d0/00603dab87dd4ca7f55605681ca722ea327a56b85ee811734ea8080d975d/pyrializer-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fa090019e3d6b468f49fb4f719a51d01f9adf885d3741880ec97dd83c66d4a4",
          "md5": "f6c803c596a4ee5f43efd214fb0edfea",
          "sha256": "1c6327ff82bcc502c8242eddfa917e3e8b700a0f9f14b4a949cfe6c684610499"
        },
        "downloads": -1,
        "filename": "pyrializer-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6c803c596a4ee5f43efd214fb0edfea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 5619,
        "upload_time": "2020-02-27T12:11:46",
        "upload_time_iso_8601": "2020-02-27T12:11:46.752643Z",
        "url": "https://files.pythonhosted.org/packages/8f/a0/90019e3d6b468f49fb4f719a51d01f9adf885d3741880ec97dd83c66d4a4/pyrializer-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0464a3bcea0583129c5ba4328b01f5122770ebc69d04e1a6736df90fd3724f21",
          "md5": "35c01702ec8a8cb8135824bb4cf41f10",
          "sha256": "0b219e51e56a8ecd4112e2c4e498b38c2a203436e814a08c8aa52bcc04fc0d6a"
        },
        "downloads": -1,
        "filename": "pyrializer-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "35c01702ec8a8cb8135824bb4cf41f10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 5181,
        "upload_time": "2020-02-27T12:11:48",
        "upload_time_iso_8601": "2020-02-27T12:11:48.214781Z",
        "url": "https://files.pythonhosted.org/packages/04/64/a3bcea0583129c5ba4328b01f5122770ebc69d04e1a6736df90fd3724f21/pyrializer-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8fa090019e3d6b468f49fb4f719a51d01f9adf885d3741880ec97dd83c66d4a4",
        "md5": "f6c803c596a4ee5f43efd214fb0edfea",
        "sha256": "1c6327ff82bcc502c8242eddfa917e3e8b700a0f9f14b4a949cfe6c684610499"
      },
      "downloads": -1,
      "filename": "pyrializer-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f6c803c596a4ee5f43efd214fb0edfea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 5619,
      "upload_time": "2020-02-27T12:11:46",
      "upload_time_iso_8601": "2020-02-27T12:11:46.752643Z",
      "url": "https://files.pythonhosted.org/packages/8f/a0/90019e3d6b468f49fb4f719a51d01f9adf885d3741880ec97dd83c66d4a4/pyrializer-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0464a3bcea0583129c5ba4328b01f5122770ebc69d04e1a6736df90fd3724f21",
        "md5": "35c01702ec8a8cb8135824bb4cf41f10",
        "sha256": "0b219e51e56a8ecd4112e2c4e498b38c2a203436e814a08c8aa52bcc04fc0d6a"
      },
      "downloads": -1,
      "filename": "pyrializer-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "35c01702ec8a8cb8135824bb4cf41f10",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 5181,
      "upload_time": "2020-02-27T12:11:48",
      "upload_time_iso_8601": "2020-02-27T12:11:48.214781Z",
      "url": "https://files.pythonhosted.org/packages/04/64/a3bcea0583129c5ba4328b01f5122770ebc69d04e1a6736df90fd3724f21/pyrializer-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}