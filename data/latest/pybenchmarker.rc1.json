{
  "info": {
    "author": "Owain Davies",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pybenchmarker\nA simple utility for comparing the efficiency of functionally-equivalent\nfunctions in Python.\n\n## Installation\n```\npip install pybenchmarker\n```\n\n## BenchmarkN class\n**Problem**\n\n<ul>\n\n**Input**: two lists of equal length ``list_0``, ``list_1``.\n\n**Output**: a *list* of booleans encoding which items of ``list_0`` are in\n``list_1``.\n\n</ul>\n\nWhat's the fastest way to do this?\n```Python\nimport numpy as np\n\nfrom pybenchmarker import BenchmarkN, sizes\nfrom random import randint\n\n\n@sizes([2**k for k in range(18)])\ndef argfunc(n):\n    return [randint(1, n) for i in range(n)], [randint(1, n) for i in range(n)]\n\n\ndef naive_lcomp(lists):\n    return [x in lists[1] for x in lists[0]]\n\n\ndef set_other(lists):\n    s = set(lists[1])\n    return [x in s for x in lists[0]]\n\n\ndef numpy_isin(lists):\n    return list(np.isin(lists[0], lists[1]))\n\n\nif __name__ == '__main__':\n    title = \"list_3: list[bool], encoding which items in list_1 are in list_2\"\n\n    b = BenchmarkN(functions=[naive_lcomp, set_other, numpy_isin],\n                   argfunc=argfunc)\n\n    b.plot(xlabel=\"n\", title=title, fname=\"my_figure\", transparent=True,\n           dpi=300)\n```\nThis results in the following plot:\n\n<!--Apparently, GitHub sanitizes inline styles, but the deprecated align\n    attribute works.-->\n<div align=\"center\">\n    <img src=\"https://github.com/OTheDev/pybenchmarker/raw/main/images/example.png\"\n         width=\"80%\" height=\"80%\">\n</div>\n\n## Inspiration\nThis project was inspired by [perfplot](https://github.com/nschloe/perfplot),\nwhich was used to contribute to\n\n- \"[How do I efficiently find which elements of a list are in another list?](https://stackoverflow.com/questions/71990420/how-do-i-efficiently-find-which-elements-of-a-list-are-in-another-list)\"\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) 2023 Owain Davies  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pybenchmarker",
    "package_url": "https://pypi.org/project/pybenchmarker/",
    "platform": null,
    "project_url": "https://pypi.org/project/pybenchmarker/",
    "project_urls": {
      "homepage": "https://github.com/OTheDev/pybenchmarker"
    },
    "release_url": "https://pypi.org/project/pybenchmarker/0.1.0/",
    "requires_dist": [
      "matplotlib (>=3.6.0)"
    ],
    "requires_python": ">=3.10.1",
    "summary": "Python module to benchmark and compare functions",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17077629,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ce7f405fe95a81d50882d7e66d8ed99e833c0a7887a80c8a582440b9cf8c25b",
          "md5": "68e61d5a790ca898f0370f43367a8485",
          "sha256": "494d4e92d39994fc48aaa1a46bd4536670ca1665df2f71af5987106e16df5399"
        },
        "downloads": -1,
        "filename": "pybenchmarker-0.1.0-1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68e61d5a790ca898f0370f43367a8485",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10.1",
        "size": 9016,
        "upload_time": "2023-02-28T05:21:24",
        "upload_time_iso_8601": "2023-02-28T05:21:24.359822Z",
        "url": "https://files.pythonhosted.org/packages/2c/e7/f405fe95a81d50882d7e66d8ed99e833c0a7887a80c8a582440b9cf8c25b/pybenchmarker-0.1.0-1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4521e4160ab890b51dd4b3ccffa208f1824e000bab2cba9e16aa3a26e5808775",
          "md5": "902c29772ff0f9bd2b58167eef368178",
          "sha256": "5e0344963fbbe63b252e9462628960f05f1754210667cde1fb586e62ea738a0d"
        },
        "downloads": -1,
        "filename": "pybenchmarker-0.1.0-1.tar.gz",
        "has_sig": false,
        "md5_digest": "902c29772ff0f9bd2b58167eef368178",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10.1",
        "size": 9340,
        "upload_time": "2023-02-28T05:21:26",
        "upload_time_iso_8601": "2023-02-28T05:21:26.113826Z",
        "url": "https://files.pythonhosted.org/packages/45/21/e4160ab890b51dd4b3ccffa208f1824e000bab2cba9e16aa3a26e5808775/pybenchmarker-0.1.0-1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ce7f405fe95a81d50882d7e66d8ed99e833c0a7887a80c8a582440b9cf8c25b",
        "md5": "68e61d5a790ca898f0370f43367a8485",
        "sha256": "494d4e92d39994fc48aaa1a46bd4536670ca1665df2f71af5987106e16df5399"
      },
      "downloads": -1,
      "filename": "pybenchmarker-0.1.0-1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "68e61d5a790ca898f0370f43367a8485",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10.1",
      "size": 9016,
      "upload_time": "2023-02-28T05:21:24",
      "upload_time_iso_8601": "2023-02-28T05:21:24.359822Z",
      "url": "https://files.pythonhosted.org/packages/2c/e7/f405fe95a81d50882d7e66d8ed99e833c0a7887a80c8a582440b9cf8c25b/pybenchmarker-0.1.0-1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4521e4160ab890b51dd4b3ccffa208f1824e000bab2cba9e16aa3a26e5808775",
        "md5": "902c29772ff0f9bd2b58167eef368178",
        "sha256": "5e0344963fbbe63b252e9462628960f05f1754210667cde1fb586e62ea738a0d"
      },
      "downloads": -1,
      "filename": "pybenchmarker-0.1.0-1.tar.gz",
      "has_sig": false,
      "md5_digest": "902c29772ff0f9bd2b58167eef368178",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10.1",
      "size": 9340,
      "upload_time": "2023-02-28T05:21:26",
      "upload_time_iso_8601": "2023-02-28T05:21:26.113826Z",
      "url": "https://files.pythonhosted.org/packages/45/21/e4160ab890b51dd4b3ccffa208f1824e000bab2cba9e16aa3a26e5808775/pybenchmarker-0.1.0-1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}