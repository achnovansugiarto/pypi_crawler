{
  "info": {
    "author": "Volodymyr Yahello",
    "author_email": "vyahello@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "[![made-with-python](https://img.shields.io/badge/Made%20with-Python-1f425f.svg)](https://www.python.org/)\n[![Build Status](https://travis-ci.org/aiopymake/aiorequest.svg?branch=master)](https://travis-ci.org/aiopymake/aiorequest)\n[![Coverage Status](https://coveralls.io/repos/github/aiopymake/aiorequest/badge.svg?branch=master)](https://coveralls.io/github/aiopymake/aiorequest?branch=master)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Checked with pylint](https://img.shields.io/badge/pylint-checked-blue)](https://www.pylint.org)\n[![Checked with flake8](https://img.shields.io/badge/flake8-checked-blue)](http://flake8.pycqa.org/)\n[![Checked with pydocstyle](https://img.shields.io/badge/pydocstyle-checked-yellowgreen)](http://www.pydocstyle.org/)\n[![Checked with interrogate](https://img.shields.io/badge/interrogate-checked-yellowgreen)](https://interrogate.readthedocs.io/en/latest/)\n[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n[![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE.md)\n[![EO principles respected here](https://www.elegantobjects.org/badge.svg)](https://www.elegantobjects.org)\n[![CodeFactor](https://www.codefactor.io/repository/github/aiopymake/aiorequest/badge)](https://www.codefactor.io/repository/github/aiopymake/aiorequest)\n[![PyPI version shields.io](https://img.shields.io/pypi/v/aiorequest.svg)](https://pypi.python.org/pypi/aiorequest/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/aiorequest.svg)](https://pypi.python.org/pypi/aiorequest/)\n\n# aioRequest\n\n> Provides asynchronous user-friendly micro HTTP client with nothing but clean objects.\n\n> Basically, it is a wrapper over **requests** python library with async/await approach.\n> Represents asynchronous version of [urequest](https://upymake.github.io/urequest/) package.\n\n## Tools\n\n### Production\n\n- python 3.7, 3.8\n- [asyncio](https://docs.python.org/3/library/asyncio.html) library\n- [requests](https://requests.readthedocs.io/en/master) library\n\n### Development\n\n- [travis](https://travis-ci.org/) CI\n- [pytest](https://pypi.org/project/pytest/)\n- [black](https://black.readthedocs.io/en/stable/)\n- [mypy](http://mypy.readthedocs.io/en/latest)\n- [pylint](https://www.pylint.org/)\n- [flake8](http://flake8.pycqa.org/en/latest/)\n- [pydocstyle](https://github.com/PyCQA/pydocstyle)\n- [interrogate](https://interrogate.readthedocs.io/en/latest)\n- [bats](https://github.com/bats-core/bats-core)\n\n## Usage\n\n### Installation\n\n```bash\npip install aiorequest\n✨ 🍰 ✨\n```\n\n### Quick start\n\n```python\n>>> import asyncio\n>>> from typing import Tuple\n>>> from aiorequest.sessions import Session, HttpSession\n>>> from aiorequest.responses import HTTPStatus, Response, JsonType\n>>> from aiorequest.urls import HttpUrl\n>>>\n>>>\n>>> async def aioresponse() -> Tuple[HTTPStatus, JsonType]:\n...     session: Session\n...     async with HttpSession() as session:\n...         response: Response = await session.get(\n...             HttpUrl(host=\"xkcd.com\", path=\"info.0.json\")\n...         )\n...         return await response.status(), await response.as_json()\n... \n... \n>>>\n>>> asyncio.run(aioresponse())\n(\n  <HTTPStatus.OK: 200>,\n  {\n    \"month\": \"3\",\n    \"num\": 2284,\n    \"link\": \"\",\n    \"year\": \"2020\",\n    \"news\": \"\",\n    \"safe_title\": \"Sabotage\",\n    \"transcript\": \"\",\n    \"img\": \"https://imgs.xkcd.com/comics/sabotage.png\",\n    \"title\": \"Sabotage\",\n    \"day\": \"23\",\n  }\n)\n```\n\n### Source code\n\n```bash\ngit clone git@github.com:aiopymake/aiorequest.git\npython setup.py install\n```\n\nOr using specific release:\n```bash\npip install git+https://github.com/aiopymake/aiorequest@0.0.1\n```\n\n### Local debug\n\n```bash\ngit clone git@github.com:aiopymake/aiorequest.git\n```\n\n```python\n>>> import aiorequest\n>>> aiorequest.__doc__\n'Package provides asynchronous user-friendly HTTP client with clean objects.'\n```\n\n**[⬆ back to top](#aiorequest)**\n\n## Development notes\n\n### Testing\n\nGenerally, `pytest` tool is used to organize testing procedure.\n\nPlease follow next command to run unittests:\n```bash\npytest\n```\n\n### CI\n\nProject has Travis CI integration using [.travis.yml](.travis.yml) file thus code analysis (`black`, `pylint`, `flake8`, `mypy`, `pydocstyle` and `interrogate`) and unittests (`pytest`) will be run automatically after every made change to the repository.\n\nTo be able to run code analysis, please execute command below:\n```bash\n./analyse-source-code.sh\n```\n\nThe package is also covered with the installation unit tests based on [bats](https://github.com/bats-core/bats-core) framework. Please run the following command to launch package unit tests:\n```bash\nbats --pretty test-package.bats\n```\n\n> `PACKAGE_NAME` and `PACKAGE_VERSION` environment variables should be specified prelimirary.\n\n### Release notes\n\nPlease check [changelog](CHANGELOG.md) file to get more details about actual versions and it's release notes.\n\n### Meta\n\nAuthor – _Volodymyr Yahello_. Please check [AUTHORS](AUTHORS.md) file for all contributors.\n\nDistributed under the `MIT` license. See [LICENSE](LICENSE.md) for more information.\n\nYou can reach out me at:\n* [vyahello@gmail.com](vyahello@gmail.com)\n* [https://twitter.com/vyahello](https://twitter.com/vyahello)\n* [https://www.linkedin.com/in/volodymyr-yahello-821746127](https://www.linkedin.com/in/volodymyr-yahello-821746127)\n\n### Contributing\n\nI would highly appreciate any contribution and support. If you are interested to add your ideas into project please follow next simple steps:\n\n1. Clone the repository\n2. Configure `git` for the first time after cloning with your `name` and `email`\n3. `pip install -r requirements.txt` to install all project dependencies\n4. `pip install -r requirements-dev.txt` to install all development project dependencies\n5. Create your feature branch (git checkout -b feature/fooBar)\n6. Commit your changes (git commit -am 'Add some fooBar')\n7. Push to the branch (git push origin feature/fooBar)\n8. Create a new Pull Request\n\n### What's next\n\nAll recent activities and ideas are described at project [issues](https://github.com/aiopymake/aiorequest/issues) page. \nIf you have ideas you want to change/implement please do not hesitate and create an issue.\n\n**[⬆ back to top](#aiorequest)**\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aiorequest/aiorequest",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiorequest",
    "package_url": "https://pypi.org/project/aiorequest/",
    "platform": "",
    "project_url": "https://pypi.org/project/aiorequest/",
    "project_urls": {
      "Homepage": "https://github.com/aiorequest/aiorequest"
    },
    "release_url": "https://pypi.org/project/aiorequest/0.0.2/",
    "requires_dist": [
      "attrs (==19.3.0)",
      "bleach (==3.1.5)",
      "certifi (==2020.4.5.1)",
      "chardet (==3.0.4)",
      "click (==7.1.1)",
      "dataclasses (==0.6)",
      "docutils (==0.16)",
      "idna (==2.9)",
      "keyring (==21.2.1)",
      "packaging (==20.4)",
      "pkginfo (==1.5.0.1)",
      "Pygments (==2.6.1)",
      "pyparsing (==2.4.7)",
      "PyYAML (==5.3.1)",
      "readme-renderer (==26.0)",
      "requests (==2.23.0)",
      "requests-toolbelt (==0.9.1)",
      "six (==1.15.0)",
      "termcolor (==1.1.0)",
      "tqdm (==4.46.0)",
      "twine (==3.1.1)",
      "urllib3 (==1.25.9)",
      "webencodings (==0.5.1)",
      "enforce-pep8 (==0.0.8)"
    ],
    "requires_python": ">=3.7",
    "summary": "Package provides asynchronous user-friendly HTTP client with clean objects.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8830093,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff01a2b6034073648c4d9f65c5d8858ae4c4fe076f62148576630ac496608bca",
          "md5": "fc3ef0201a1b4c7f089ab3b857a8eb1b",
          "sha256": "df7f0a09f8fbed1c0cb7b659bad2460ddd484186ba1988e38a548a91fc62622a"
        },
        "downloads": -1,
        "filename": "aiorequest-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc3ef0201a1b4c7f089ab3b857a8eb1b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8445,
        "upload_time": "2020-05-30T15:34:39",
        "upload_time_iso_8601": "2020-05-30T15:34:39.032121Z",
        "url": "https://files.pythonhosted.org/packages/ff/01/a2b6034073648c4d9f65c5d8858ae4c4fe076f62148576630ac496608bca/aiorequest-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "976d192a7c819036a11c47367a0a8fdda0da5cdfb1bd1e3b17c10f6f86ee34de",
          "md5": "346a2553be61d41284fa0bf0a55d6c9b",
          "sha256": "4ba8c6cb2ae4bcb029d086b89e50a23123d41bc74121c4e1e565de1cfbe929b2"
        },
        "downloads": -1,
        "filename": "aiorequest-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "346a2553be61d41284fa0bf0a55d6c9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 271192,
        "upload_time": "2020-05-30T15:34:42",
        "upload_time_iso_8601": "2020-05-30T15:34:42.037106Z",
        "url": "https://files.pythonhosted.org/packages/97/6d/192a7c819036a11c47367a0a8fdda0da5cdfb1bd1e3b17c10f6f86ee34de/aiorequest-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17281ee00ab079c7f16d81cd76132b8e973d3d26738c2a0da35469fc9de65627",
          "md5": "7191932741e30765ddea6da0b6643dcf",
          "sha256": "84ea9e34c24a134dc7bef7cb9730b0a4ff2a4a6af2ec0dc3b2aaec6f07cee4b1"
        },
        "downloads": -1,
        "filename": "aiorequest-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7191932741e30765ddea6da0b6643dcf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8906,
        "upload_time": "2020-12-05T21:30:40",
        "upload_time_iso_8601": "2020-12-05T21:30:40.622209Z",
        "url": "https://files.pythonhosted.org/packages/17/28/1ee00ab079c7f16d81cd76132b8e973d3d26738c2a0da35469fc9de65627/aiorequest-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17281ee00ab079c7f16d81cd76132b8e973d3d26738c2a0da35469fc9de65627",
        "md5": "7191932741e30765ddea6da0b6643dcf",
        "sha256": "84ea9e34c24a134dc7bef7cb9730b0a4ff2a4a6af2ec0dc3b2aaec6f07cee4b1"
      },
      "downloads": -1,
      "filename": "aiorequest-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7191932741e30765ddea6da0b6643dcf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8906,
      "upload_time": "2020-12-05T21:30:40",
      "upload_time_iso_8601": "2020-12-05T21:30:40.622209Z",
      "url": "https://files.pythonhosted.org/packages/17/28/1ee00ab079c7f16d81cd76132b8e973d3d26738c2a0da35469fc9de65627/aiorequest-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}