{
  "info": {
    "author": "Aquib Iqbal",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# general_distribution package\n\nThis package provides the probability distribution classes.\n\nIn probability theory and statistics, a probability distribution is the mathematical function that gives the probabilities of occurrence of different possible outcomes for an experiment.\nProbability distributions are generally divided into two classes. A discrete probability distribution (applicable to the scenarios where the set of possible outcomes is discrete, such as a coin toss or a roll of dice) can be encoded by a discrete list of the probabilities of the outcomes, known as a probability mass function. On the other hand, a continuous probability distribution (applicable to the scenarios where the set of possible outcomes can take on values in a continuous range\n\n* Gaussian - Gaussian distribution class for calculating and visualizing a Gaussian distribution.\n\nIn probability theory, a normal (or Gaussian or Gauss or Laplace–Gauss) distribution is a type of continuous probability distribution for a real-valued random variable.Gaussian distributions have some unique properties that are valuable in analytic studies. For instance, any linear combination of a fixed collection of normal deviates is a normal deviate. Many results and methods (such as propagation of uncertainty and least squares parameter fitting) can be derived analytically in explicit form when the relevant variables are normally distributed.\n\nAttributes:\n\n\t\tmean (float) - representing the mean value of the distribution.\n\t\tstdev (float) - representing the standard deviation of the distribution.\n\t\tdata_list (list of floats) - a list of floats extracted from the data file.\n\nMethods:\n\n\t\tcalculate_mean() - Function to calculate the mean of the data set.\n\t\tcalculate_stdev() - Function to calculate the standard deviation of the data set.\n\t\tplot_histogram() -  Function to output a histogram of the instance variable data using matplotlib pyplot library.\n\t\tread_data_file(filename) -  Function to read in data from a txt file. The txt file should have one number (float) per line. The \t\t\tnumbers are stored in the data attribute.     \n\t\tpdf(x) - Probability density function calculator for the gaussian distribution\n\t\t\tArgs:\n\t\t\t\tx (float): point for calculating the probability density function\n\t\t\tReturns:\n\t\t\t\tfloat: probability density function output\n\t\tplot_histogram_pdf(n_spaces = 50) - Function to plot the normalized histogram of the data and a plot of the probability density \t\t\tfunction along the same range\n\t\t\tArgs:\n\t\t\t\tn_spaces (int): number of data points \n\t\t\tReturns:\n\t\t\t\tlist: x values for the pdf plot\n\t\t\t\tlist: y values for the pdf plot\n\t\t__add__(other) - Function to add together two Gaussian distributions\n\t\tArgs:\n\t\t\tother (Gaussian): Gaussian instance\n\t\tReturns:\n\t\t\tGaussian: Gaussian distribution\n \t\t__repr__() - Function to output the characteristics of the Gaussian instance\n\n\n* Binomial - Binomial distribution class for calculating and visualizing a Binomial distribution.\nIn probability theory and statistics, the binomial distribution with parameters n and p is the discrete probability distribution of the number of successes in a sequence of n independent experiments, each asking a yes–no question, and each with its own boolean-valued outcome: success/yes/true/one (with probability p) or failure/no/false/zero (with probability q = 1 − p). A single success/failure experiment is also called a Bernoulli trial or Bernoulli experiment and a sequence of outcomes is called a Bernoulli process; for a single trial, i.e., n = 1, the binomial distribution is a Bernoulli distribution. The binomial distribution is the basis for the popular binomial test of statistical significance.\n\n Attributes:\n\n\t\tmean (float) representing the mean value of the distribution.\n\t\tstdev (float) representing the standard deviation of the distribution.\n\t\tdata_list (list of floats) a list of floats to be extracted from the data file.\n\t\tp (float) representing the probability of an event occurring.\n\t\tn (int) number of trials.\n\nMethods:\n\n\t\tcalculate_mean() - Function to calculate the mean from p and n.\n\t\tcalculate_stdev() - Function to calculate the standard deviation from p and n.\n\t\tread_data_file(filename) -  Function to read in data from a txt file. The txt file should have one number (float) per line. The \t\t\tnumbers are stored in the data attribute. \n\t\treplace_stats_with_data() - Function to calculate p and n from the data set\n\t\tArgs: \n\t\t\tNone\n\t\tReturns: \n\t\t\tfloat: the p value\n\t\t\tfloat: the n value\n\t\tplot_bar() - Function to output a histogram of the instance variable data using matplotlib pyplot library.\n\t\tpdf(k) - Probability density function calculator for the gaussian distribution.\n\t\tArgs:\n\t\t\tx (float): point for calculating the probability density function\n\t\tReturns:\n\t\t\tfloat: probability density function output\n\t\tplot_bar_pdf() - Function to plot the pdf of the binomial distribution\n\t\tArgs:\n\t\t\tNone \n\t\tReturns:\n\t\t\tlist: x values for the pdf plot\n\t\t\tlist: y values for the pdf plot        \n\t\t__add__(other) -  Function to add together two Binomial distributions with equal p\n\t\tArgs:\n\t\t\tother (Binomial): Binomial instance            \n\t\tReturns:\n\t\t\tBinomial: Binomial distribution        \n\t\t__repr__() - Function to output the characteristics of the Binomial instance.\n\n\n\n# Files\n\n* Generaldistribution.py - contains Distribution class, its attributes and methods being inherited by other class.\n* Gaussiandistribution.py - contains Gaussian class, its attributes and methods stated above in package summary.\n* Binomialdistribution.py - contains Binomial class, its attributes and methods stated above in package summary.\n\n# Installation\n\n''' pip install general-distribution '''\n\n* The code should run with no issues using Python versions 3.*.\n* No extra besides the built-in libraries from Anaconda needed to run this project\n\t\tMath\n\t\tmatplotlib\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aquib1011/general-distribution",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "general-distribution",
    "package_url": "https://pypi.org/project/general-distribution/",
    "platform": "",
    "project_url": "https://pypi.org/project/general-distribution/",
    "project_urls": {
      "Homepage": "https://github.com/aquib1011/general-distribution"
    },
    "release_url": "https://pypi.org/project/general-distribution/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "probability distribution is the mathematical function that gives the probabilities of occurrence",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7413543,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e35919e0ab86300e0d9e3d0b16df5102de59194573a96c2499e0c0781e2e74ff",
          "md5": "bbdda8dc67ad5a40a950caf62b26e989",
          "sha256": "139a3bec0ac864ab5e3cd21c1e8b244248c7a70afc8c7dedd22f410f23d38051"
        },
        "downloads": -1,
        "filename": "general_distribution-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbdda8dc67ad5a40a950caf62b26e989",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6867,
        "upload_time": "2020-06-06T18:35:25",
        "upload_time_iso_8601": "2020-06-06T18:35:25.287488Z",
        "url": "https://files.pythonhosted.org/packages/e3/59/19e0ab86300e0d9e3d0b16df5102de59194573a96c2499e0c0781e2e74ff/general_distribution-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e35919e0ab86300e0d9e3d0b16df5102de59194573a96c2499e0c0781e2e74ff",
        "md5": "bbdda8dc67ad5a40a950caf62b26e989",
        "sha256": "139a3bec0ac864ab5e3cd21c1e8b244248c7a70afc8c7dedd22f410f23d38051"
      },
      "downloads": -1,
      "filename": "general_distribution-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bbdda8dc67ad5a40a950caf62b26e989",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6867,
      "upload_time": "2020-06-06T18:35:25",
      "upload_time_iso_8601": "2020-06-06T18:35:25.287488Z",
      "url": "https://files.pythonhosted.org/packages/e3/59/19e0ab86300e0d9e3d0b16df5102de59194573a96c2499e0c0781e2e74ff/general_distribution-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}