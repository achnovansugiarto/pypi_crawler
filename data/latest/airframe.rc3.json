{
  "info": {
    "author": "Virantha N. Ekanayake",
    "author_email": "virantha@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Natural Language :: English",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "AirFrame\n===============================\n\n.. image:: https://badge.fury.io/py/airframe.png\n    :target: http://badge.fury.io/py/airframe\n    \n.. image:: https://pypip.in/d/airframe/badge.png\n        :target: https://crate.io/packages/airframe?version=latest\n\nDownload images from an authenticated Flickr account (or local filesystem) and \npush them wirelessly to a Toshiba FlashAir Wifi SD card mounted in a digital \nphoto frame.\n\n* Free software: ASL2 license\n* Documentation: http://documentup.com/virantha/airframe\n* Source: http://github.com/virantha/airframe\n* API docs: http://virantha.github.com/airframe/html\n\nFeatures\n--------\n\n* Authenticates to Flickr to get your private photos\n* Only downloads photos with specified tags\n* Alternativly, can sync files from a local directory\n* Caches and syncs the photos to the Wifi SD card\n\n\nInstallation\n------------\n\n.. code-block:: bash\n\n   $ pip install airframe\n\nUsage\n-----\n\nFirst, go to Flickr and get a private key at http://www.flickr.com/services/api/misc.api_keys.html\n\nThen, create a directory from where you will start airframe, and create a file called flickr_api.yaml:\n\n.. code-block:: yaml\n\n    key: \"YOUR_API_KEY\"\n    secret: \"YOUR_API_SECRET\"\n\nThen, setup your FlashAir card as described in `this post's\n<http://virantha.com/2014/01/09/hacking-together-a-wifi-photo-frame-with-a-toshiba-flashair-sd-card-wireless-photo-uploads>`__\n\"Enabling the FlashAir\" section.  \n\nNow, you're ready to sync some photos!  Just run:\n\n.. code-block:: bash\n\n   $ airframe -n 100 -t photoframe YOUR_AIRFRAME_IP\n\nThis will download and sync the 100 most recent photos tagged with \"photoframe\" to your\nAirFrame. \n\n.. warning:: Any other image files in the FlashAir upload directory will be deleted, so make sure you backup anything you want to keep from your SD card.\n\nThe image files from Flickr will be cached in a sub-directory called\n``.airframe`` in the location you invoked airframe from, so as long as you rerun\nfrom the same directory, the script will only download new files from Flickr.  If you want to\nredownload all the files from scratch, just ``rm .airframe`` these files.\n\nThe script will also only upload new images to the FlashAir card, and ignore any files that are\nalready present on the card.  If you want to force a clean upload, do the following:\n\n.. code-block:: bash\n\n    $ airframe -n 100 -t photoframe -f YOUR_AIRFRAME_IP\n\nThis will delete all images already on the card, and upload every image again.\n\nAlternatively, you can sync files directly from your local computer by pointing\nthe script at a directory of ``.jpg`` files:\n\n.. code-block:: bash\n    $ airframe -l /path/to/photos YOUR_AIRFRAME_IP\n\nNote: other flags are ignored in this mode.\n\n\n.. :changelog:\n\nHistory\n-------\n\n0.1.0 (2014-01-10)\n++++++++++++++++++\n\n* First release on PyPI.\n\nTodo list\n=========\n- Add tests\n- Add docstrings\n- Travis integration\n- Use docopt instead of argparse\n- Better error handling",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/virantha/airframe",
    "keywords": "airframe",
    "license": "ASL2",
    "maintainer": null,
    "maintainer_email": null,
    "name": "airframe",
    "package_url": "https://pypi.org/project/airframe/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/airframe/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/virantha/airframe"
    },
    "release_url": "https://pypi.org/project/airframe/0.2.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Push images to a Toshiba FlashAir Wifi SD card",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1501880,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec56086277290c41c31f206e03f02f3dedced4388ba3808ad19dffd31fc56124",
          "md5": "0b7f042341c2c01b4f3f564b9a194812",
          "sha256": "63de0962b1328e25d59fca468da85fe4b155e5bb80a477894d6a3df3a7729bf1"
        },
        "downloads": -1,
        "filename": "airframe-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0b7f042341c2c01b4f3f564b9a194812",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13128,
        "upload_time": "2014-01-13T17:46:01",
        "upload_time_iso_8601": "2014-01-13T17:46:01.297437Z",
        "url": "https://files.pythonhosted.org/packages/ec/56/086277290c41c31f206e03f02f3dedced4388ba3808ad19dffd31fc56124/airframe-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dca4cf16b0807f746e0c740d26099126454dde46b15085397afb78aeaf1b0ed4",
          "md5": "0e9e76ad20018236acfbb5f426ee0fb1",
          "sha256": "0281e3f660bd573e13d1919f38f2925c08d7423652c397a60e4360e2157a37ff"
        },
        "downloads": -1,
        "filename": "airframe-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e9e76ad20018236acfbb5f426ee0fb1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13276,
        "upload_time": "2014-01-14T18:38:42",
        "upload_time_iso_8601": "2014-01-14T18:38:42.139690Z",
        "url": "https://files.pythonhosted.org/packages/dc/a4/cf16b0807f746e0c740d26099126454dde46b15085397afb78aeaf1b0ed4/airframe-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45a49f3dda1d2d551aea5bb412c0815e61f38a3b4df748c3f9f17a0fa09507b3",
          "md5": "74b14ad5a93cb168929ddbd9bb0f3e3f",
          "sha256": "6a37281fca11c8d397727de0e6adadb91a316e8a036aa77d9a8a997c6756047d"
        },
        "downloads": -1,
        "filename": "airframe-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "74b14ad5a93cb168929ddbd9bb0f3e3f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13757,
        "upload_time": "2015-04-12T02:58:02",
        "upload_time_iso_8601": "2015-04-12T02:58:02.313305Z",
        "url": "https://files.pythonhosted.org/packages/45/a4/9f3dda1d2d551aea5bb412c0815e61f38a3b4df748c3f9f17a0fa09507b3/airframe-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "45a49f3dda1d2d551aea5bb412c0815e61f38a3b4df748c3f9f17a0fa09507b3",
        "md5": "74b14ad5a93cb168929ddbd9bb0f3e3f",
        "sha256": "6a37281fca11c8d397727de0e6adadb91a316e8a036aa77d9a8a997c6756047d"
      },
      "downloads": -1,
      "filename": "airframe-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "74b14ad5a93cb168929ddbd9bb0f3e3f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13757,
      "upload_time": "2015-04-12T02:58:02",
      "upload_time_iso_8601": "2015-04-12T02:58:02.313305Z",
      "url": "https://files.pythonhosted.org/packages/45/a4/9f3dda1d2d551aea5bb412c0815e61f38a3b4df748c3f9f17a0fa09507b3/airframe-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}