{
  "info": {
    "author": "Bernard Baltrusaitis",
    "author_email": "bernard@runawaylover.info",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3"
    ],
    "description": ".. image:: https://travis-ci.org/b-b3rn4rd/acmagent.svg?branch=master\n    :target: https://travis-ci.org/b-b3rn4rd/acmagent\n\n.. image:: https://coveralls.io/repos/github/b-b3rn4rd/acmagent/badge.svg?branch=master\n    :target: https://coveralls.io/github/b-b3rn4rd/acmagent?branch=master\n\n\n======================================\nACMagent - automates ACM certificates\n======================================\nACM agents provides functionality to request and confirm ACM certificates using the CLI interface\n\nInstallation\n############\n\n::\n\n    $ pip install acmagent\n\n\nConfiguration\n#############\nIn order to approve ACM certificates, create and configure acmagent IMAP credentials file. By default ``acmagent`` loads configuration ``.acmagent`` file from the user's home folder for example: `/home/john.doe/.acmagent`. However, you have an option to specify a custom path to the credentials file.\n\n::\n\n    # /home/john.doe/.acmagent\n\n    username: username@example.com\n    server: imap.example.com\n    password: mysecretpassword\n\nUsage\n#####\n\nIssuing ACM certificates\n------------------------\n\nThe simplest option to request ACM certificate is to specify ``--domain-name`` and/or ``--validation-domain`` parameters.\n\n::\n\n    $ acmagent request-certificate --domain-name *.dev.example.com\n    12345678-1234-1234-1234-123456789012\n\n\n::\n\n    $ acmagent request-certificate --domain-name *.dev.example.com --validation-domain example.com\n    12345678-1234-1234-1234-123456789012\n\n\nOptionally, if you need to generate a certificate for multiple domain names you can provide the ``--alternative-names`` parameter to specify **space separated** alternative domain names.\n\n::\n\n    $ acmagent request-certificate --domain-name dev.example.com --validation-domain example.com --alternative-names  www.dev.example.com ftp.dev.example.com\n    12345678-1234-1234-1234-123456789012\n\nACMAgent offers an option to specify JSON input file instead of typing them at the command line using ``--cli-input-json`` parameter.\n\n- Generate CLI skeleton output\n\n::\n\n    $ acmagent request-certificate --generate-cli-skeleton &> certificate.json\n\n\n::\n\n    $ cat certificate.json\n    {\n        \"DomainName\": \"\",\n        \"SubjectAlternativeNames\": [],\n        \"ValidationDomain\": \"\"\n    }\n\n\n- Modify generated skeleton file using your preferred method\n- Using ``--cli-input-json`` parameter specify path fo the ``certificate.json`` file\n\n::\n\n    $ acmagent request-certificate --cli-input-json file:./certificate.json\n\n\n**Output**\n\nThe `request-certificate` outputs ACM certificate id, it's the last part of the ARN arn:aws:acm:us-east-1:123456789012:certificate/**12345678-1234-1234-1234-123456789012** you will need that id for a certificate approval process.\n\nApproving ACM certificates\n--------------------------\n\n*Before approving ACM issued certificate, please ensure that the credentials file has been setup.*\n*For gmail and yahoo enable access for 'less secure apps' (https://support.google.com/accounts/answer/6010255?hl=en-GB&authuser=1)*\n\nconfirm-certificate\n^^^^^^^^^^^^^^^^^^^\n\n::\n\n    $ acmagent confirm-certificate --help\n    usage: acmagent confirm-certificate [-h] --certificate-id CERTIFICATE_ID\n                                    [--wait WAIT] [--attempts ATTEMPTS]\n                                    [--debug] [--credentials CREDENTIALS]\n    optional arguments:\n    -h, --help                      show this help message and exit\n    --certificate-id CERTIFICATE_ID Certificate id\n    --wait WAIT                     Timeout in seconds between querying IMAP server\n    --attempts ATTEMPTS             Number of attempts to query IMAP server\n    --debug (boolean)               Send logging to standard output\n    --credentials CREDENTIALS       Explicitly provide IMAP credentials file\n\nExamples\n^^^^^^^^\nConfirming a certificate using the default settings:\n\n::\n\n    $ acmagent confirm-certificate --certificate-id 12345678-1234-1234-1234-123456789012\n\n\nHowever, for most scenarios the recommended approach to specify custom values for ``--wait`` and ``--attempts`` parameters tailored for your IMAP server.\n\n::\n\n    $ acmagent confirm-certificate --wait 10 --attempts 6 --certificate-id 12345678-1234-1234-1234-123456789012\n\n\nIn the situations when you can't use the default IMAP credentials file provide the ``--credentials`` parameter\n\n::\n\n    $ acmagent confirm-certificate --certificate-id 12345678-1234-1234-1234-123456789012 --credentials file:///var/lib/jenkins/.acmagent\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/b-b3rn4rd/acmagent",
    "keywords": "acm aws ssl certificates",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "acmagent",
    "package_url": "https://pypi.org/project/acmagent/",
    "platform": "",
    "project_url": "https://pypi.org/project/acmagent/",
    "project_urls": {
      "Homepage": "https://github.com/b-b3rn4rd/acmagent"
    },
    "release_url": "https://pypi.org/project/acmagent/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "ACM agent - automates ACM certificates",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2821466,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db728e2c584ea8b3c6080cf2cdc9d85fba26f9d11ed7cfc82ff3ffa0f116dd5a",
          "md5": "7feaeaea8968863851470c775cacdfd8",
          "sha256": "f921e65254664617e19bcf51b5d399d4ae43e2dd647215accf63707c1021d06f"
        },
        "downloads": -1,
        "filename": "acmagent-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7feaeaea8968863851470c775cacdfd8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8610,
        "upload_time": "2017-04-09T06:15:49",
        "upload_time_iso_8601": "2017-04-09T06:15:49.608491Z",
        "url": "https://files.pythonhosted.org/packages/db/72/8e2c584ea8b3c6080cf2cdc9d85fba26f9d11ed7cfc82ff3ffa0f116dd5a/acmagent-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04d5c028a0388c31cb2d7802dadff7d089e911f8a7c15ec364b127b6bbf84a1e",
          "md5": "ec0b9b05077e6eda8f1eba751cf1d750",
          "sha256": "43f40e76e8fb84f200ecf891c7b5ac105eb0da00398ab0a1f520d6687bd43c72"
        },
        "downloads": -1,
        "filename": "acmagent-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ec0b9b05077e6eda8f1eba751cf1d750",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8613,
        "upload_time": "2017-04-09T11:09:57",
        "upload_time_iso_8601": "2017-04-09T11:09:57.368595Z",
        "url": "https://files.pythonhosted.org/packages/04/d5/c028a0388c31cb2d7802dadff7d089e911f8a7c15ec364b127b6bbf84a1e/acmagent-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c77ca361210ea70fce83e7a379d4b49eceb9ab063c17a7411f86f72e93dc482",
          "md5": "a7ad59165ea69d1c56ad47d308855c26",
          "sha256": "82e84c98774661c5eaef2eed545b8cbcc5a15fa4260d84a608b5d0773b0e12f9"
        },
        "downloads": -1,
        "filename": "acmagent-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a7ad59165ea69d1c56ad47d308855c26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8744,
        "upload_time": "2017-04-22T09:47:18",
        "upload_time_iso_8601": "2017-04-22T09:47:18.280206Z",
        "url": "https://files.pythonhosted.org/packages/5c/77/ca361210ea70fce83e7a379d4b49eceb9ab063c17a7411f86f72e93dc482/acmagent-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c77ca361210ea70fce83e7a379d4b49eceb9ab063c17a7411f86f72e93dc482",
        "md5": "a7ad59165ea69d1c56ad47d308855c26",
        "sha256": "82e84c98774661c5eaef2eed545b8cbcc5a15fa4260d84a608b5d0773b0e12f9"
      },
      "downloads": -1,
      "filename": "acmagent-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a7ad59165ea69d1c56ad47d308855c26",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8744,
      "upload_time": "2017-04-22T09:47:18",
      "upload_time_iso_8601": "2017-04-22T09:47:18.280206Z",
      "url": "https://files.pythonhosted.org/packages/5c/77/ca361210ea70fce83e7a379d4b49eceb9ab063c17a7411f86f72e93dc482/acmagent-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}