{
  "info": {
    "author": "Gregor von Laszewski",
    "author_email": "laszewski@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Cloudmesh Sbatch\n\nA general purpose HPC Template and Experiment management system\n\n\n## Background\n\nHyper Performance Computation Clusters (HPCs) are designed around a\ntimesharing principle and are powered by queue-based execution\necosystems such as SchedMD's [SLURM](https://slurm.schedmd.com/overview.html)\nand IBM's Platform Load Sharing Facility\n([LSF](https://www.ibm.com/docs/en/spectrum-lsf/10.1.0?topic=overview-lsf-introduction)).\nWhile these ecosystems provide a great deal of control and extension\nfor planning, scheduling, and batching jobs, they are limited in their\nability to support parameterization in a scheduled task.  While there\nare facilities in place to execute jobs on an Array, the ability to\ndo permutation based experments are limited to what you integrate\ninto your own batch script.  Even then, parameterization of values\nare only made availabile as environment variables, which can be limited\ndepending on your OS or selected programming language.\nIn many cases limitations set by the deployment trhough the compute center also hinder optimal use while restrictions are placed on duration and number of parallel accessible resources. In some cases these restrictions are soo established that removing them is impractical and takes weks to implement on temporary basis.\n\nCloudmesh Sbatch is a framework that wraps the SLURM batch processor into a templated framework  such that experiments can be generated based on configuration files\nfocusing on the livecycle of generating many permutations of experiments\nwith standard tooling, so that you can focus more on modeling your\nexperiments than how to orchestrate them with tools.\nA number of batch scripts can be generated that than can be executed \naccording to center policies.\n\n## Dependencies\n\nWhen you install cloudmesh-sbatch, you will also be installing a minimum\nbaseline of the `cms` command (as part of the Cloudmesh ecosystem).  For\nmore details on Cloudmesh, see its documentation on [read the docs](https://cloudmesh.github.io/cloudmesh-manual/). However all instalation can be done thorugh pip. After instalation, you will need to initialize cloudmesh with the command\n\n```bash\n$ cms help\n```\n\nWhile SLURM is not needed to run the `cloudmesh sbatch` command, the\ngenerated output will not exectue unless your system has slurm installed\nand you are able to run jobs via the `slurm sbatch` command.\n\n## Documentation\n\n### Running Cloudmesh SBatch\n\nThe `cloudmesh sbatch` command takes one of two forms of execution.  It is started with \n\n```bash\n$ cms sbatch <command> <parameters>\n```\n\nWhere the command invokes a partiuclar action and parameters include a number of parameters for the command\nThese commands  allow you to inspect the generated output\nto confirm your parameterization functions as expected and as intended.\n\nIn general, configuration arguments that appear in multiple locations are\nprioritized in the following order (highest priority first)\n\n1. CLI Arguments with `cms sbatch`\n2. Configuration Files\n3. Preset values\n\n### Generating Experiments with the CLI\n\nThe `generate` command is used to generate your experiments based upon either a passed\nconfiguration file, or via CLI arguments.  You can issue the command using\neither of the below forms:\n\n```text\ncms sbatch generate SOURCE --name=NAME [--verbose] [--mode=MODE] [--config=CONFIG] [--attributes=PARAMS] [--out=DESTINATION] [--dryrun] [--noos] [--nocm] [--dir=DIR] [--experiment=EXPERIMENT]\ncms sbatch generate --setup=FILE [SOURCE] [--verbose] [--mode=MODE]  [--config=CONFIG] [--attributes=PARAMS] [--out=DESTINATION] [--dryrun] [--noos] [--nocm] [--dir=DIR] [--experiment=EXPERIMENT] [--name=NAME]\n```\n\nIf you have prepared a configuration file that conforms to the schema\ndefined in [Setup Config](#setup-config), then you can use the second\nform which overrides the default values.\n\n* `--name=NAME` - Supplies a name for this experiment.  Note that the name\n  must not match any existing files or directories where you are currently\n  executing the command\n* `--verbose` - Enables additional logging useful when troubleshooting the\n  program.\n* `--mode=MODE` - specifies how the output should be generated.  One of: f,h,d.\n  * `f` or `flat` - specifies a \"flat\" mode, where slurm scripts are generated in a flattened structure, all in one directory.\n  * `h` or `hierarchical` - specifies a \"hierarchical\" mode, where experiments are nested into unique directories from each other.\n  * `d` or `debug` - instructs the command to not generate any output.\n* `--config=CONFIG` - specifies key-value pairs to be used across all files for substitution.  This can be a python, yaml, or json file.\n* `--attributes=PARAMS` - specifies key-value pairs that can be listed at the command line and used as substitution across all experiments.  Note this command leverages [cloudmesh's parameter expansion specification](https://cloudmesh.github.io/cloudmesh-manual/autoapi/cloudmeshcommon/cloudmesh/common/parameter/index.html) for different types of expansion rules.\n* `--out=DESTINATION` - specifies the directory to write the generated scripts out to.\n* `--dryrun` - Runs the command without performing any operations\n* `--noos` - Prevents the interleaving of OS environemnt variables into the subsitution logic\n* `--dir=DIR` - specifies the directory to write the generated scripts out to.\n* `--experiment=EXPERIMENT` - specifies a listing of key-value parameters that establish a unique experiment for each combination of values (a cartisian product across all values for each key).\n\n* `--setup=FILE` - provides all the above configuration options within a configuration\n  file to simplify executions.\n\n### Form 2 - Generating Submission Scripts\n\n```text\nsbatch generate submit --name=NAME [--verbose]\n```\n\nThis command uses the output of the [generate command](#command-1---generating-experiments)\nand generates a shell script that can be used to submit your previously\ngenerated outputs to SLURM as a sequence of sbatch commands.\n\n* `--name=NAME` - specifies the name used in the\n  [generate command](#command-1---generating-experiments).\n  The generate command will inspect the `<NAME>.json` file and build the\n  necessary commands to run all permutations that the cloudmesh sbatch\n  command generated.\n\nNote that this command only generates the script, and you must run the\noutputted file in your shell for the commands to be issued to SLURM and\nrun your jobs.\n\n\n**Sample YAML File**\n\nThis command requires a YAML file which is configured for the host and gpu.\nThe YAML file also points to the desired slurm template.\n\n```python\nslurm_template: 'slurm_template.slurm'\n\nsbatch_setup:\n  <hostname>-<gpu>:\n    - card_name: \"a100\"\n    - time: \"05:00:00\"\n    - num_cpus: 6\n    - num_gpus: 1\n\n  rivanna-v100:\n    - card_name: \"v100\"\n    - time: \"06:00:00\"\n    - num_cpus: 6\n    - num_gpus: 1\n\n\n```\n\nexample:\n\n```\ncms sbatch slurm.in.sh --config=a.py,b.json,c.yaml --attributes=a=1,b=4  --noos --dir=example --experiment=\\\"epoch=[1-3] x=[1,4] y=[10,11]\\\"\nsbatch slurm.in.sh --config=a.py,b.json,c.yaml --attributes=a=1,b=4 --noos --dir=example --experiment=\"epoch=[1-3] x=[1,4] y=[10,11]\"\n# ERROR: Importing python not yet implemented\nepoch=1 x=1 y=10  sbatch example/slurm.sh\nepoch=1 x=1 y=11  sbatch example/slurm.sh\nepoch=1 x=4 y=10  sbatch example/slurm.sh\nepoch=1 x=4 y=11  sbatch example/slurm.sh\nepoch=2 x=1 y=10  sbatch example/slurm.sh\nepoch=2 x=1 y=11  sbatch example/slurm.sh\nepoch=2 x=4 y=10  sbatch example/slurm.sh\nepoch=2 x=4 y=11  sbatch example/slurm.sh\nepoch=3 x=1 y=10  sbatch example/slurm.sh\nepoch=3 x=1 y=11  sbatch example/slurm.sh\nepoch=3 x=4 y=10  sbatch example/slurm.sh\nepoch=3 x=4 y=11  sbatch example/slurm.sh\nTimer: 0.0022s Load: 0.0013s sbatch slurm.in.sh --config=a.py,b.json,c.yaml --attributes=a=1,b=4 --noos --dir=example --experiment=\"epoch=[1-3] x=[1,4] y=[10,11]\"\n```\n\n## Slurm on a single computer ubuntu 20.04\n\n### Install \n\nsee https://drtailor.medium.com/how-to-setup-slurm-on-ubuntu-20-04-for-single-node-work-scheduling-6cc909574365\n\n32 Processors (threads)\n\n```bash\nsudo apt update -y\nsudo apt install slurmd slurmctld -y\n\nsudo chmod 777 /etc/slurm-llnl\n\n# make sure to use the HOSTNAME\n\nsudo cat << EOF > /etc/slurm-llnl/slurm.conf\n# slurm.conf file generated by configurator.html.\n# Put this file on all nodes of your cluster.\n# See the slurm.conf man page for more information.\n#\nClusterName=localcluster\nSlurmctldHost=$HOSTNAME\nMpiDefault=none\nProctrackType=proctrack/linuxproc\nReturnToService=2\nSlurmctldPidFile=/var/run/slurmctld.pid\nSlurmctldPort=6817\nSlurmdPidFile=/var/run/slurmd.pid\nSlurmdPort=6818\nSlurmdSpoolDir=/var/lib/slurm-llnl/slurmd\nSlurmUser=slurm\nStateSaveLocation=/var/lib/slurm-llnl/slurmctld\nSwitchType=switch/none\nTaskPlugin=task/none\n#\n# TIMERS\nInactiveLimit=0\nKillWait=30\nMinJobAge=300\nSlurmctldTimeout=120\nSlurmdTimeout=300\nWaittime=0\n# SCHEDULING\nSchedulerType=sched/backfill\nSelectType=select/cons_tres\nSelectTypeParameters=CR_Core\n#\n#AccountingStoragePort=\nAccountingStorageType=accounting_storage/none\nJobCompType=jobcomp/none\nJobAcctGatherFrequency=30\nJobAcctGatherType=jobacct_gather/none\nSlurmctldDebug=info\nSlurmctldLogFile=/var/log/slurm-llnl/slurmctld.log\nSlurmdDebug=info\nSlurmdLogFile=/var/log/slurm-llnl/slurmd.log\n#\n# COMPUTE NODES # THis machine has 128GB main memory\nNodeName=$HOSTNAME CPUs=32 RealMemory==128762 State=UNKNOWN\nPartitionName=local Nodes=ALL Default=YES MaxTime=INFINITE State=UP\nEOF\n\nsudo chmod 755 /etc/slurm-llnl/\n```\n\n### Start\n```\nsudo systemctl start slurmctld\nsudo systemctl start slurmd\nsudo scontrol update nodename=localhost state=idle\n```\n\n### Stop\n\n```\nsudo systemctl stop slurmd\nsudo systemctl stop slurmctld\n```\n\n### Info\n\n```\nsinfo\n```\n\n### Job\n\nsave into gregor.slurm\n\n```\n#!/bin/bash\n\n#SBATCH --job-name=gregors_test          # Job name\n#SBATCH --mail-type=END,FAIL             # Mail events (NONE, BEGIN, END, FAIL, ALL)\n#SBATCH --mail-user=laszewski@gmail.com  # Where to send mail\t\n#SBATCH --ntasks=1                       # Run on a single CPU\n####  XBATCH --mem=1gb                        # Job memory request\n#SBATCH --time=00:05:00                  # Time limit hrs:min:sec\n#SBATCH --output=sgregors_test_%j.log    # Standard output and error log\n\npwd; hostname; date\n\necho \"Gregors Test\"\ndate\nsleep(30)\ndate\n```\n\nRun with \n\n```\nsbatch gregor.slurm\nwatch -n 1 squeue\n```\n\nBUG\n\n```\nJOBID PARTITION     NAME     USER ST       TIME  NODES NODELIST(REASON)\n                 2    LocalQ gregors_    green PD       0:00      1 (Nodes required for job are DOWN, DRAINED or reserved for jobs in higher priority partitions)\n\n```\n\n### sbatch slurm manageement commands for localhost\n\nstart slurm deamons\n\n```bash\ncms sbatch slurm start\n```\n\nstop surm deamons\n\n```bash\ncms sbatch slurm stop\n```\n\nBUG:\n\n```bash\nsrun gregor.slurm\n\nsrun: Required node not available (down, drained or reserved)\nsrun: job 7 queued and waiting for resources\n```\n\n```\nsudo scontrol update nodename=localhost state=POWER_UP\n\nValid states are: NoResp DRAIN FAIL FUTURE RESUME POWER_DOWN POWER_UP UNDRAIN\n\n```\n\n### Cheatsheet\n\n* <https://slurm.schedmd.com/pdfs/summary.pdf>\n\n## Acknowledgements\n\nContinued work was in part funded by the NSF\nCyberTraining: CIC: CyberTraining for Students and Technologies\nfrom Generation Z with the awadrd numbers 1829704 and 2200409.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cloudmesh/cloudmesh-sbatch",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cloudmesh-sbatch",
    "package_url": "https://pypi.org/project/cloudmesh-sbatch/",
    "platform": null,
    "project_url": "https://pypi.org/project/cloudmesh-sbatch/",
    "project_urls": {
      "Homepage": "https://github.com/cloudmesh/cloudmesh-sbatch"
    },
    "release_url": "https://pypi.org/project/cloudmesh-sbatch/4.3.10/",
    "requires_dist": [
      "cloudmesh-cmd5",
      "cloudmesh-sys",
      "cloudmesh-inventory",
      "cloudmesh-configuration",
      "cloudmesh-progress",
      "nbconvert"
    ],
    "requires_python": "",
    "summary": "A command called sbatch and foo for the cloudmesh shell",
    "version": "4.3.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17147949,
  "releases": {
    "4.3.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6b143b7f5468c4b11bf94557ee0053811e6ddaf3d0736133d92e2d7f8813acc",
          "md5": "04408f778c1ff92062cd21bced85b96f",
          "sha256": "7b0ef169cb0a7c0ed697fdbe5a320282bb090fcd64d07ff7f733304a7847f81b"
        },
        "downloads": -1,
        "filename": "cloudmesh_sbatch-4.3.10-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04408f778c1ff92062cd21bced85b96f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18004,
        "upload_time": "2023-03-03T18:28:52",
        "upload_time_iso_8601": "2023-03-03T18:28:52.123772Z",
        "url": "https://files.pythonhosted.org/packages/a6/b1/43b7f5468c4b11bf94557ee0053811e6ddaf3d0736133d92e2d7f8813acc/cloudmesh_sbatch-4.3.10-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2575d9babf68ea0ce35272f1ca287b50b062338c41ba24f55e2232b7c19302f5",
          "md5": "4756c7be0d4c3acd38927d647af4b72b",
          "sha256": "792d65bf746a7d93408ba7d0ba842e94093e920efed9fadd0cdd5b0e0ee61603"
        },
        "downloads": -1,
        "filename": "cloudmesh-sbatch-4.3.10.tar.gz",
        "has_sig": false,
        "md5_digest": "4756c7be0d4c3acd38927d647af4b72b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21692,
        "upload_time": "2023-03-03T18:28:53",
        "upload_time_iso_8601": "2023-03-03T18:28:53.656061Z",
        "url": "https://files.pythonhosted.org/packages/25/75/d9babf68ea0ce35272f1ca287b50b062338c41ba24f55e2232b7c19302f5/cloudmesh-sbatch-4.3.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a96b51e14698ddef15d2ffdadb3f3dc12a5e2889ed1823335a55b89e4e4c5b8",
          "md5": "9753a0000a47de5e4a3156812f6c387c",
          "sha256": "91cf14c3c7c129f12d8cac25d95cacdc437d7919ed6121b57a9b0337f2f8f658"
        },
        "downloads": -1,
        "filename": "cloudmesh_sbatch-4.3.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9753a0000a47de5e4a3156812f6c387c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 10452,
        "upload_time": "2022-03-24T21:24:28",
        "upload_time_iso_8601": "2022-03-24T21:24:28.787615Z",
        "url": "https://files.pythonhosted.org/packages/8a/96/b51e14698ddef15d2ffdadb3f3dc12a5e2889ed1823335a55b89e4e4c5b8/cloudmesh_sbatch-4.3.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88e5b122ac810b25039a19853e3f31908f9c543f27c1a766cb7a6d9890b6f324",
          "md5": "7dac5e0b3bf0f9a6c749df3bacf536c0",
          "sha256": "11d3a11a580cd3315d4b00a87c392472a8905d1a9beb25000f3b457ec40ec23e"
        },
        "downloads": -1,
        "filename": "cloudmesh-sbatch-4.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7dac5e0b3bf0f9a6c749df3bacf536c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11514,
        "upload_time": "2022-03-24T21:24:30",
        "upload_time_iso_8601": "2022-03-24T21:24:30.382180Z",
        "url": "https://files.pythonhosted.org/packages/88/e5/b122ac810b25039a19853e3f31908f9c543f27c1a766cb7a6d9890b6f324/cloudmesh-sbatch-4.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5667705206378f49b24ba8478977256448a3b5a0f9bbba0432150dc04ba84860",
          "md5": "a3f0e3c8d7404e1909995b3d4d2304ec",
          "sha256": "98299959ba44bbbad232a206a8e5dae002a39ac188e157b9c7175005f7638d02"
        },
        "downloads": -1,
        "filename": "cloudmesh_sbatch-4.3.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3f0e3c8d7404e1909995b3d4d2304ec",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13461,
        "upload_time": "2022-04-10T19:34:35",
        "upload_time_iso_8601": "2022-04-10T19:34:35.920808Z",
        "url": "https://files.pythonhosted.org/packages/56/67/705206378f49b24ba8478977256448a3b5a0f9bbba0432150dc04ba84860/cloudmesh_sbatch-4.3.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a10f3c8b00adbf650d42965e647b10d2aefb7f456a767bf14f0b3c7e56d8b72",
          "md5": "e6308dc22ef2a03b69fde2e4192a5049",
          "sha256": "c64be9e9f4a1577ae42a966739f211c3c9bf254b5512b84ffabd15437da9b8a8"
        },
        "downloads": -1,
        "filename": "cloudmesh-sbatch-4.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e6308dc22ef2a03b69fde2e4192a5049",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14598,
        "upload_time": "2022-04-10T19:34:37",
        "upload_time_iso_8601": "2022-04-10T19:34:37.785288Z",
        "url": "https://files.pythonhosted.org/packages/7a/10/f3c8b00adbf650d42965e647b10d2aefb7f456a767bf14f0b3c7e56d8b72/cloudmesh-sbatch-4.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37b67d6a379689f8df4ed0a2bb5850e93fe129053e6c29d669c1eb10da9f82bb",
          "md5": "2f0402ac4c2e2fc132ea92b01c72891d",
          "sha256": "4d41eb7f54c1ff9ea90fa262de77fd08f5086fd06702edcc4b4b629ef06e7419"
        },
        "downloads": -1,
        "filename": "cloudmesh_sbatch-4.3.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f0402ac4c2e2fc132ea92b01c72891d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 17002,
        "upload_time": "2022-08-05T23:14:17",
        "upload_time_iso_8601": "2022-08-05T23:14:17.662443Z",
        "url": "https://files.pythonhosted.org/packages/37/b6/7d6a379689f8df4ed0a2bb5850e93fe129053e6c29d669c1eb10da9f82bb/cloudmesh_sbatch-4.3.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "848e2e3f1e4b2b1a9723192120a263ebf99fc88b4a5649dfef7a5ce5ba84a03a",
          "md5": "9d0a60ae7f0ccbb1a6f0d6e2b9903fd7",
          "sha256": "5e10790ac5c6c6dd975e9375a20697b7a61baec6df6a31d5202cac7501a9833f"
        },
        "downloads": -1,
        "filename": "cloudmesh-sbatch-4.3.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9d0a60ae7f0ccbb1a6f0d6e2b9903fd7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20433,
        "upload_time": "2022-08-05T23:14:19",
        "upload_time_iso_8601": "2022-08-05T23:14:19.885768Z",
        "url": "https://files.pythonhosted.org/packages/84/8e/2e3f1e4b2b1a9723192120a263ebf99fc88b4a5649dfef7a5ce5ba84a03a/cloudmesh-sbatch-4.3.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "855da49161238ca44812d10330facbd636f238989026a114319d168575c10576",
          "md5": "7896365484521befdd4b39b7f0047dc4",
          "sha256": "2ad96abc749ee09c4ab9b5e3ee4187d194b056a27a17e1b9c56acfe8f7f2f719"
        },
        "downloads": -1,
        "filename": "cloudmesh_sbatch-4.3.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7896365484521befdd4b39b7f0047dc4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 17063,
        "upload_time": "2022-08-06T11:30:11",
        "upload_time_iso_8601": "2022-08-06T11:30:11.991672Z",
        "url": "https://files.pythonhosted.org/packages/85/5d/a49161238ca44812d10330facbd636f238989026a114319d168575c10576/cloudmesh_sbatch-4.3.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2dc5d4fe6761952e11f4ba67895ab57c48659ef26b3f6ed0883050e30c64e2aa",
          "md5": "b9abcbf65c97f37f8efd63728ead4784",
          "sha256": "966d4bbef7d03ce775bd7688865851c1bb1d8bae098f5e6c51dad21bdb083b11"
        },
        "downloads": -1,
        "filename": "cloudmesh-sbatch-4.3.7.tar.gz",
        "has_sig": false,
        "md5_digest": "b9abcbf65c97f37f8efd63728ead4784",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20511,
        "upload_time": "2022-08-06T11:30:14",
        "upload_time_iso_8601": "2022-08-06T11:30:14.283723Z",
        "url": "https://files.pythonhosted.org/packages/2d/c5/d4fe6761952e11f4ba67895ab57c48659ef26b3f6ed0883050e30c64e2aa/cloudmesh-sbatch-4.3.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79ea2171c3aec73d0fc3315c4c5bd97ad0c94d2ce134b4909a5b2621a9d21f7b",
          "md5": "050df3791f36e431ce88acd44fdae19b",
          "sha256": "6a19e91ce571162f6908de47b1288594070a8445e85613cacb319a9e3c32dab3"
        },
        "downloads": -1,
        "filename": "cloudmesh_sbatch-4.3.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "050df3791f36e431ce88acd44fdae19b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 17079,
        "upload_time": "2022-08-06T14:01:10",
        "upload_time_iso_8601": "2022-08-06T14:01:10.574241Z",
        "url": "https://files.pythonhosted.org/packages/79/ea/2171c3aec73d0fc3315c4c5bd97ad0c94d2ce134b4909a5b2621a9d21f7b/cloudmesh_sbatch-4.3.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f33f40339455d297a7cc5bb0725f53b78f4689cf76953ed6ce97b7713ff0f30",
          "md5": "0051b5799b77015d90edb9467020e9d9",
          "sha256": "1c714832e186de58ee8d1e3e6f93e86fec5c18466d26c1c8122bee7f456133fc"
        },
        "downloads": -1,
        "filename": "cloudmesh-sbatch-4.3.8.tar.gz",
        "has_sig": false,
        "md5_digest": "0051b5799b77015d90edb9467020e9d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20505,
        "upload_time": "2022-08-06T14:01:12",
        "upload_time_iso_8601": "2022-08-06T14:01:12.598453Z",
        "url": "https://files.pythonhosted.org/packages/9f/33/f40339455d297a7cc5bb0725f53b78f4689cf76953ed6ce97b7713ff0f30/cloudmesh-sbatch-4.3.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "092f4227f1e9a195e55b919bdc298c1051dd3423cda968d2c44d6b930e428661",
          "md5": "1db233cddaa100ad5ebeb1e994d8e5d9",
          "sha256": "daa0fa908c5e44f0ffbd7f21bebab1b8a2aef3de34d153405dca1a3ab855aff8"
        },
        "downloads": -1,
        "filename": "cloudmesh_sbatch-4.3.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1db233cddaa100ad5ebeb1e994d8e5d9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 17991,
        "upload_time": "2022-12-12T19:00:03",
        "upload_time_iso_8601": "2022-12-12T19:00:03.810482Z",
        "url": "https://files.pythonhosted.org/packages/09/2f/4227f1e9a195e55b919bdc298c1051dd3423cda968d2c44d6b930e428661/cloudmesh_sbatch-4.3.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95c984cce8a550554d81daca3fb494e7d521cb81ad6edd304061e3846c90f211",
          "md5": "0ee8d70d4977effa3db03be0746a01e2",
          "sha256": "bee783ba144878462fb55fb413285ca1679cceea76a97c43dd77706a2ebd8f25"
        },
        "downloads": -1,
        "filename": "cloudmesh-sbatch-4.3.9.tar.gz",
        "has_sig": false,
        "md5_digest": "0ee8d70d4977effa3db03be0746a01e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21584,
        "upload_time": "2022-12-12T19:00:06",
        "upload_time_iso_8601": "2022-12-12T19:00:06.565783Z",
        "url": "https://files.pythonhosted.org/packages/95/c9/84cce8a550554d81daca3fb494e7d521cb81ad6edd304061e3846c90f211/cloudmesh-sbatch-4.3.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6b143b7f5468c4b11bf94557ee0053811e6ddaf3d0736133d92e2d7f8813acc",
        "md5": "04408f778c1ff92062cd21bced85b96f",
        "sha256": "7b0ef169cb0a7c0ed697fdbe5a320282bb090fcd64d07ff7f733304a7847f81b"
      },
      "downloads": -1,
      "filename": "cloudmesh_sbatch-4.3.10-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "04408f778c1ff92062cd21bced85b96f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 18004,
      "upload_time": "2023-03-03T18:28:52",
      "upload_time_iso_8601": "2023-03-03T18:28:52.123772Z",
      "url": "https://files.pythonhosted.org/packages/a6/b1/43b7f5468c4b11bf94557ee0053811e6ddaf3d0736133d92e2d7f8813acc/cloudmesh_sbatch-4.3.10-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2575d9babf68ea0ce35272f1ca287b50b062338c41ba24f55e2232b7c19302f5",
        "md5": "4756c7be0d4c3acd38927d647af4b72b",
        "sha256": "792d65bf746a7d93408ba7d0ba842e94093e920efed9fadd0cdd5b0e0ee61603"
      },
      "downloads": -1,
      "filename": "cloudmesh-sbatch-4.3.10.tar.gz",
      "has_sig": false,
      "md5_digest": "4756c7be0d4c3acd38927d647af4b72b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21692,
      "upload_time": "2023-03-03T18:28:53",
      "upload_time_iso_8601": "2023-03-03T18:28:53.656061Z",
      "url": "https://files.pythonhosted.org/packages/25/75/d9babf68ea0ce35272f1ca287b50b062338c41ba24f55e2232b7c19302f5/cloudmesh-sbatch-4.3.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}