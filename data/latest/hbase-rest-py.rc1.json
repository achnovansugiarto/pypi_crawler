{
  "info": {
    "author": "Samir Ahmic",
    "author_email": "ahmic.samir@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# hbase-rest-py\n**hbase-rest-py** is python library to interact with Apache HBase by using HBase REST API.\n\n### Prerequisites\n**hbase-rest-py** requires at minimum Python 3.6 and above. HBase versions 2.4.2 and 2.4.8 have been used for library development and testing and all unit tests have been passing on this versions.  \n\n### Installation \n``$ pip install hbase-rest-py``\n\n### Quick start\nMake sure you have running instance of HBase REST server by running\n``hbase rest start``\n\n````\n>>> from hbase.rest_client import HBaseRESTClient\n>>> from hbase.admin import HBaseAdmin\n>>> client = HBaseRESTClient(['http://localhost:8080'])\n>>> admin = HBaseAdmin(client)\n>>> admin.tables()\n'{\"table\":[\n            {\"name\":\"message\"},\n            {\"name\":\"py_test\"},\n            {\"name\":\"tbl_int\"},\n            {\"name\":\"test_scan\"},\n            {\"name\":\"test_tb\"},\n            {\"name\":\"test_tbl\"},\n            {\"name\":\"users\"}]}'\n\n>>> admin.table_schema(\"message\")\n'{\n\t\"name\": \"message\",\n\t\"ColumnSchema\": [{\n\t\t\"name\": \"d\",\n\t\t\"BLOOMFILTER\": \"ROW\",\n\t\t\"IN_MEMORY\": \"false\",\n\t\t\"VERSIONS\": \"1\",\n\t\t\"KEEP_DELETED_CELLS\": \"FALSE\",\n\t\t\"DATA_BLOCK_ENCODING\": \"NONE\",\n\t\t\"COMPRESSION\": \"NONE\",\n\t\t\"TTL\": \"2147483647\",\n\t\t\"MIN_VERSIONS\": \"0\",\n\t\t\"BLOCKCACHE\": \"true\",\n\t\t\"BLOCKSIZE\": \"65536\",\n\t\t\"REPLICATION_SCOPE\": \"0\"\n\t}],\n\t\"IS_META\": \"false\"\n}'\n# Create table for example\n>>> admin.table_create_or_update(\"messages\", [{\"name\":\"d\"}])\n\n# Write some data to messages table\n>>> from hbase.put import Put\n>>> put = Put(client=client)\n>>> put.put('messages', \"test@example.com:22345\", {\"d:to\":\"test2@example.com\"})\n>>> put.put(\"messages\", \"test@example.com:22345\", {\"d:m_id\":23445, \"d:body\":\"This is some message\"})\n''\n# Get data from messages table\n>>> from hbase.get import Get\n>>> get = Get(client)\n>>> get.get(\"messages\", \"test@example.com:22345\")\n{'row': [{'key': b'test@example.com:22345', 'cell': [{'column': b'd:body', 'timestamp': 1636442504076, '$': b'This is some message'}, {'column': b'd:m_id', 'timestamp': 1636442504076, '$': b'\\x00\\x00\\x00\\x00\\x00\\x00[\\x95'}, {'column': b'd:to', 'timestamp': 1636436005215, '$': b'test2@example.com'}]}]}\n>>> get.get(\"messages\", \"test@example.com:22345\", \"d:body\")\n{'row': [{'key': b'test@example.com:22345', 'cell': [{'column': b'd:body', 'timestamp': 1636442504076, '$': b'This is some message'}]}]}\n\n# Put some more testing data\n>>> for i in range(1, 1000):\n>>>     put.put(\"messages\", f\"test{i}@example.com:{i}\", {\"d:m_id\":i, \"d:body\":f\"Message no {i}\", \"d:to\":f\"testx{i}@example.com\"})\n\n# Get data from messages table with scan \n# Get messages where m_id is LESS then 10\n# First we build scanner filter payload\n>>> from hbase.scan_filter_helper import *\n>>> scan_filter= build_single_column_value_filter(family=\"d\", qualifier=\"m_id\", value=10, operation=\"LESS\")\n>>> scan_filter\n'<Scanner batch=\"1000\" maxVersions=\"1\"><filter>{\"op\":\"LESS\",\"type\":\"SingleColumnValueFilter\",\"family\":\"ZA==\", \"qualifier\":\"bV9pZA==\", \"comparator\": {\"value\": \"AAAAAAAAAAo=\", \"type\": \"BinaryComparator\"}}</filter></Scanner>'\n>>> from hbase.scan import Scan\n>>> scan = Scan(client)\n>>> result = scan.scan(\"messages\", scan_filter)\n>>> result\n(True, {'row': [{'key': b'test1@example.com:1', 'cell': [{'column': b'd:body', 'timestamp': 1636445023120, '$': b'Message no 1'}, {'column': b'd:m_id', 'timestamp': 1636445023120, '$': b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01'}, {'column': b'd:to', 'timestamp': 1636445023120, '$': b'testx1@example.com'}]}, {'key': b'test2@example.com:2', 'cell': [{'column': b'd:body', 'timestamp': 1636445023129, '$': b'Message no 2'}, {'column': b'd:m_id', 'timestamp': 1636445023129, '$': b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02'}, {'column': b'd:to', 'timestamp': 1636445023129, '$': b'testx2@example.com'}]}, {'key': b'test3@example.com:3', 'cell': [{'column': b'd:body', 'timestamp': 1636445023142, '$': b'Message no 3'}, {'column': b'd:m_id', 'timestamp': 1636445023142, '$': b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03'}, {'column': b'd:to', 'timestamp': 1636445023142, '$': b'testx3@example.com'}]}, {'key': b'test4@example.com:4', 'cell': [{'column': b'd:body', 'timestamp': 1636445023151, '$': b'Message no 4'}, {'column': b'd:m_id', 'timestamp': 1636445023151, '$': b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04'}, {'column': b'd:to', 'timestamp': 1636445023151, '$': b'testx4@example.com'}]}, {'key': b'test5@example.com:5', 'cell': [{'column': b'd:body', 'timestamp': 1636445023164, '$': b'Message no 5'}, {'column': b'd:m_id', 'timestamp': 1636445023164, '$': b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x05'}, {'column': b'd:to', 'timestamp': 1636445023164, '$': b'testx5@example.com'}]}, {'key': b'test6@example.com:6', 'cell': [{'column': b'd:body', 'timestamp': 1636445023174, '$': b'Message no 6'}, {'column': b'd:m_id', 'timestamp': 1636445023174, '$': b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x06'}, {'column': b'd:to', 'timestamp': 1636445023174, '$': b'testx6@example.com'}]}, {'key': b'test7@example.com:7', 'cell': [{'column': b'd:body', 'timestamp': 1636445023182, '$': b'Message no 7'}, {'column': b'd:m_id', 'timestamp': 1636445023182, '$': b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07'}, {'column': b'd:to', 'timestamp': 1636445023182, '$': b'testx7@example.com'}]}, {'key': b'test8@example.com:8', 'cell': [{'column': b'd:body', 'timestamp': 1636445023189, '$': b'Message no 8'}, {'column': b'd:m_id', 'timestamp': 1636445023189, '$': b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08'}, {'column': b'd:to', 'timestamp': 1636445023189, '$': b'testx8@example.com'}]}, {'key': b'test9@example.com:9', 'cell': [{'column': b'd:body', 'timestamp': 1636445023197, '$': b'Message no 9'}, {'column': b'd:m_id', 'timestamp': 1636445023197, '$': b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\t'}, {'column': b'd:to', 'timestamp': 1636445023197, '$': b'testx9@example.com'}]}]})\n\n# Releaase scanner resource\n>>> >>> scan.delete_scanner()\n200\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/samirMoP/hbase-rest-py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hbase-rest-py",
    "package_url": "https://pypi.org/project/hbase-rest-py/",
    "platform": "",
    "project_url": "https://pypi.org/project/hbase-rest-py/",
    "project_urls": {
      "Bug Tracker": "https://github.com/samirMoP/hbase-rest-py/issues",
      "Homepage": "https://github.com/samirMoP/hbase-rest-py"
    },
    "release_url": "https://pypi.org/project/hbase-rest-py/1.0.0/",
    "requires_dist": [
      "requests",
      "requests-toolbelt"
    ],
    "requires_python": ">=3.6",
    "summary": "HBase client based on HBase REST",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12048129,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa728c16f88dba40217bb4eadaf8dd70aedc983582fbe8c89ad53b0ede85de00",
          "md5": "b1a9b14f0c25520ee507fdd31b7f6fb1",
          "sha256": "0dd72d9dc1010c725a15385508fa54401cef109f094381566ac85457fe598b20"
        },
        "downloads": -1,
        "filename": "hbase_rest_py-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1a9b14f0c25520ee507fdd31b7f6fb1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23397,
        "upload_time": "2021-11-17T12:51:41",
        "upload_time_iso_8601": "2021-11-17T12:51:41.102852Z",
        "url": "https://files.pythonhosted.org/packages/fa/72/8c16f88dba40217bb4eadaf8dd70aedc983582fbe8c89ad53b0ede85de00/hbase_rest_py-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a798220850bdf555f0fd7fccc93fc760a4335fc6a8ea9539118843fe1154772",
          "md5": "b4ae283f81b8453aa3fba106945e5248",
          "sha256": "ae1fdc559a4459fb4cde2b6efdb781863c2caa2c07f3de5ebdcb5d3322dcea7f"
        },
        "downloads": -1,
        "filename": "hbase-rest-py-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b4ae283f81b8453aa3fba106945e5248",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19238,
        "upload_time": "2021-11-17T12:51:43",
        "upload_time_iso_8601": "2021-11-17T12:51:43.294578Z",
        "url": "https://files.pythonhosted.org/packages/8a/79/8220850bdf555f0fd7fccc93fc760a4335fc6a8ea9539118843fe1154772/hbase-rest-py-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fa728c16f88dba40217bb4eadaf8dd70aedc983582fbe8c89ad53b0ede85de00",
        "md5": "b1a9b14f0c25520ee507fdd31b7f6fb1",
        "sha256": "0dd72d9dc1010c725a15385508fa54401cef109f094381566ac85457fe598b20"
      },
      "downloads": -1,
      "filename": "hbase_rest_py-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1a9b14f0c25520ee507fdd31b7f6fb1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 23397,
      "upload_time": "2021-11-17T12:51:41",
      "upload_time_iso_8601": "2021-11-17T12:51:41.102852Z",
      "url": "https://files.pythonhosted.org/packages/fa/72/8c16f88dba40217bb4eadaf8dd70aedc983582fbe8c89ad53b0ede85de00/hbase_rest_py-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a798220850bdf555f0fd7fccc93fc760a4335fc6a8ea9539118843fe1154772",
        "md5": "b4ae283f81b8453aa3fba106945e5248",
        "sha256": "ae1fdc559a4459fb4cde2b6efdb781863c2caa2c07f3de5ebdcb5d3322dcea7f"
      },
      "downloads": -1,
      "filename": "hbase-rest-py-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b4ae283f81b8453aa3fba106945e5248",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19238,
      "upload_time": "2021-11-17T12:51:43",
      "upload_time_iso_8601": "2021-11-17T12:51:43.294578Z",
      "url": "https://files.pythonhosted.org/packages/8a/79/8220850bdf555f0fd7fccc93fc760a4335fc6a8ea9539118843fe1154772/hbase-rest-py-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}