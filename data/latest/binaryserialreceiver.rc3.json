{
  "info": {
    "author": "Francisco Liebl",
    "author_email": "chicolliebl@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications",
      "Topic :: Terminals :: Serial"
    ],
    "description": "Binary Serial Receiver\n======================\n\nSimple module for receiving binary data from a serial port in an asynchronous form. Useful for receiving data from an Arduino or a microcontroller without the need to use strings.\n\nDescription\n-------------\n\nThis modules lets you specify the format of the binary data and the header to be received from a serial port. The module creates a dedicated thread to read de serial port and feed the numpy arrays passed as buffers in a circular forma, always keeping the same length.\n\nExample\n-------------\n\nIn the example folder there is a script that creates a virtual serial port (works only on linux) allowing you to run test-receiver.py which will print the received data buffer.\n\nAn exemple code for an arduino to send data to be read using this module would be the fallowing:\n\n\n.. code-block:: c\n\n  void loop() {\n    uint16_t adc_signal = analogRead(sensorPin);\n    long unsigned t_now = micros();\n\n    uint16_t buffer_size = sizeof(uint16_t) + sizeof(long unsigned) + 2;\n    byte buf[buffer_size];\n    buf[0] = 0xFD;\n    memcpy(buf + 1, (byte *)&t_now, sizeof(unsigned long));\n    memcpy(buf + 1 + sizeof(unsigned long), (byte *)&adc_vdd, sizeof(uint16_t));\n    buf[buffer_size - 1] = '\\n';\n    Serial.write(buf, buffer_size);\n  }\n\nIn this case the format for receiving would be 'Lh'. All the possible formats are defined in the `struct package page`_ .\n\n.. _struct package page: https://docs.python.org/3/library/struct.html#format-characters",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/ChicoLiebl/python-binarySerialReceiver/archive/refs/tags/V1.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ChicoLiebl/python-binarySerialReceiver.git",
    "keywords": "SERIAL,PORT,RECEIVER,BINARY,THREADED,BACKGROUND",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "binarySerialReceiver",
    "package_url": "https://pypi.org/project/binarySerialReceiver/",
    "platform": "",
    "project_url": "https://pypi.org/project/binarySerialReceiver/",
    "project_urls": {
      "Download": "https://github.com/ChicoLiebl/python-binarySerialReceiver/archive/refs/tags/V1.2.tar.gz",
      "Homepage": "https://github.com/ChicoLiebl/python-binarySerialReceiver.git"
    },
    "release_url": "https://pypi.org/project/binarySerialReceiver/1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple module for receiving binary data from a serial port",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11692927,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cce9283c0a8d302f9fd195e8f1f9b7e3b80eabaadae478d468099cf3305d6978",
          "md5": "eda446fbc15da96b7a477041b0246d58",
          "sha256": "e72230ff8ac97569738ef88db913f89fbcdbfec729908edd06622d6448c4e261"
        },
        "downloads": -1,
        "filename": "binarySerialReceiver-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eda446fbc15da96b7a477041b0246d58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2109,
        "upload_time": "2021-10-11T21:58:51",
        "upload_time_iso_8601": "2021-10-11T21:58:51.652882Z",
        "url": "https://files.pythonhosted.org/packages/cc/e9/283c0a8d302f9fd195e8f1f9b7e3b80eabaadae478d468099cf3305d6978/binarySerialReceiver-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16c294b84aea853d1043f994bc9b10d02b74f845e1a2f29eba953534564487a9",
          "md5": "ab5ce7284d383d7b9c17db03943312bf",
          "sha256": "5138fbfbc26a6e8cfc873434d0aee3398963c3cac28903531a6eccf2acf0f332"
        },
        "downloads": -1,
        "filename": "binarySerialReceiver-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ab5ce7284d383d7b9c17db03943312bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2136,
        "upload_time": "2021-10-11T22:12:44",
        "upload_time_iso_8601": "2021-10-11T22:12:44.372883Z",
        "url": "https://files.pythonhosted.org/packages/16/c2/94b84aea853d1043f994bc9b10d02b74f845e1a2f29eba953534564487a9/binarySerialReceiver-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12581b2f68ffdaf0cd39349b6fceb34fc3daee427831334d4214eff370b20bfd",
          "md5": "325fad2d5a6352839aed2c7596a6bc61",
          "sha256": "634790a37d30917f34a51bb9c9e0eaeb534a22abd2cc46a430471edd1eabd6ad"
        },
        "downloads": -1,
        "filename": "binarySerialReceiver-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "325fad2d5a6352839aed2c7596a6bc61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3063,
        "upload_time": "2021-10-11T22:42:25",
        "upload_time_iso_8601": "2021-10-11T22:42:25.244879Z",
        "url": "https://files.pythonhosted.org/packages/12/58/1b2f68ffdaf0cd39349b6fceb34fc3daee427831334d4214eff370b20bfd/binarySerialReceiver-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12581b2f68ffdaf0cd39349b6fceb34fc3daee427831334d4214eff370b20bfd",
        "md5": "325fad2d5a6352839aed2c7596a6bc61",
        "sha256": "634790a37d30917f34a51bb9c9e0eaeb534a22abd2cc46a430471edd1eabd6ad"
      },
      "downloads": -1,
      "filename": "binarySerialReceiver-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "325fad2d5a6352839aed2c7596a6bc61",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3063,
      "upload_time": "2021-10-11T22:42:25",
      "upload_time_iso_8601": "2021-10-11T22:42:25.244879Z",
      "url": "https://files.pythonhosted.org/packages/12/58/1b2f68ffdaf0cd39349b6fceb34fc3daee427831334d4214eff370b20bfd/binarySerialReceiver-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}