{
  "info": {
    "author": "Nate Vack",
    "author_email": "njvack@wisc.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Scorify: A simple tool for scoring psychological self-report questionnaires.\n\n[![DOI](https://zenodo.org/badge/16382827.svg)](https://zenodo.org/badge/latestdoi/16382827)\n\n## Background\n\nMany psychology studies use one or more self-report questionnaires to understand their participants. These responses go into CSV files with one question per column, one participant per row.\n\nScoring these files is a bunch of work. Oftentimes, many questionnaires (or sub-scales) are included in one CSV file. Often, half of the questions are \"reverse-scored\" to combat the tendancy people have to agree with questions. Scoring these files usually means spending a whole bunch of time in Excel, and no one likes doing that.\n\nScorify aims to fix this.\n\n## Installation\n\nscorify requires Python 3.5.\n\n    pip install scorify\n\nshould have you set up.\n\n## Examples\n\nSee [examples/](examples/) for some test files. To run the neurohack data and\nscoresheet, do something like:\n\n    score_data neurohack_scoresheet.csv neurohack_April+2,+2019_11.05.csv\n\n## Getting started\n\nGiven an example CSV file, let's say you want to score 5 columns, the answers\ncan be 1 to 5, where the third and fifth are reversed.\n\n| ppt  | happy1 | happy2 | happy3 | happy4 | happy5 |\n| 3001 | 1      | 2      | 1      | 3      | 4      |\n| 3002 | 4      | 1      | 5      | 1      | 2      |\n| 3003 | 1      | 3      | 2      | 3      | 1      |\n| ...  |\n\nCreate a scoresheet that looks like:\n\n| A         | B       | C            | D       |\n| ---       | ---     | ---          | ---     |\n| layout    | header  |              |         |\n| layout    | data    |              |         |\n|           |         |              |         |\n| transform | normal  | map(1:5,1:5) |         |\n| transform | reverse | map(1:5,5:1) |         |\n|           |         |              |         |\n| score     | ppt     |              |         |\n| score     | happy1  | happy        | normal  |\n| score     | happy2  | happy        | normal  |\n| score     | happy3  | happy        | reverse |\n| score     | happy4  | happy        | normal  |\n| score     | happy5  | happy        | reverse |\n|           |         |              |         |\n| measure   | happy   | mean(happy)  |         |\n\nThen you call `score_data` with that scoresheet and datafile, like:\n\n    score_data scoresheet.csv datafile.csv\n\nYour output just goes to STDOUT, and you should see it renaming columns.\nTo save the output if it looks good, just pipe it to a file:\n\n    score_data scoresheet.csv datafile.csv > output.csv\n\n### Other common operations\n\n#### Excluding participants\n\nIf some participant data is particularly messy, you can exclude it using your\nscoresheet like this:\n\n| A       | B                  | C    |\n| ---     | ---                | ---  |\n| exclude | ppt_id_column_name | 3001 |\n\n#### Keeping second row headers\n\nIf your question headers have a second row with verbose question text in them,\nyou can keep that in the scored data by adding a `layout keep` instruction:\n\n    layout header\n    layout keep\n    layout data\n\nRepeat the layout keep instruction if you want to keep more than one row.\n\n## Scoresheet reference\n\nThe main input to scorify is a comma or tab-delimited \"scoresheet\" that has many rows and four columns. The first column tells what kind of command the row will be, and will be one of: `layout`, `exclude`, `transform`, `score`, or `measure`.\n\n### layout\n\nThe layout section tells scorify what your input data looks like. It must contain a `header` and `data`, but `skip` and `keep` are also valid. `data` tells scorify that the rest of your input file is data. So:\n\n    layout header\n    layout skip\n    layout data\n\nwould tell scorify to expect a header row, skip a line, and then read the rest of the file as data.\n\n    layout header\n    layout keep\n    layout data\n\nwould result in scorify expecting a header row, keeping the next line as-is,\nand reading the rest of the file as data.\n\n### rename\n\nThe rename section renames a header column, and looks like:\n\n    rename original_name new_name\n\nColumns can only be renamed once, and must use a new, unique name. You must use the column's new name everywhere in the scoresheet.\n\n### exclude\n\nThe format of an exclude line is:\n\n    exclude column value\n\nwhich will, as you might expect, exclude rows where `column` == `value`.\n\n### transform\n\nSometimes, you'll want to reverse-score a column or otherwise change its value for scoring. And you'll want to give that some kind of sane name. Transforms let you do this. They look like:\n\n    transform name mapper\n\nRight now, you can apply two transformations.\n\n#### `map()`\n\nA linear mapping. Example:\n\n    transform reverse map(1:5,5:1)\n\nwhich will map the values 1,2,3,4,5 to 5,4,3,2,1. This will happily map values outside its input domain.\n\n#### `discrete_map()`\n\nA mapping for discrete values. Useful to map a numbers to human-meaningful values.\n\n    transform score_gender discrete_map(\"1\":\"f\", \"2\":\"m\")\n\nUnmapped values will return a blank.\n\nThis transform can be useful when combined with `join()` (below) to combine an array of checkboxes into one column.\n\n#### `passthrough_map()`\n\nLike `discrete_map()`, though unmapped values will be unchanged. So, if you have:\n\n    transform score_gender passthrough_map(\"1\":\"f\", \"2\":\"m\")\n\na value of \"999\" will still be \"999\".\n\n### score\n\nThe score section is where you tell scorify which columns you want in your output, what measure (if any) they belong to, and what transform (again, if any) you want to apply. These look like\n\n    score column measure_name transform\n\n`measure_name` and `transform` are both optional. So, to reverse score (using the `reverse` we defined up above) a column called `happy_1` and add it to the `happy` measure, use:\n\n    score happy_1 happy reverse\n\nYou can optionally pass a 5th value, which will define the output column name:\n\n    score happy_1 happy reverse ReverseHappy1\n\n### measure\n\nThe measure section computes aggregate measures of your scored data. These lines look like:\n\n    measure final_name aggregator(measure_1, measure_2, ..., measure_n)\n\nWe support the following aggregators:\n\n#### `mean()`\n\nAs you might expect, this calculates the mean of the measure or measures listed. Example:\n\n    measure happy mean(happy)\n\nIf any values in the measures are non-numeric, returns NaN.\n\n#### `mean_imputed()`\n\nComputes the mean of the measure. However, if any of the values in the measures are non-numeric, this fills in the mean of the numeric values. For example, `mean_imputed(1, '', 3, 5)` is `3`.\n\n#### `sum()`\n\nComputes the sum fo the listed measures. Example:\n\n    measure sad sum(sad)\n\nIf any values in the measures are non-numeric, returns NaN.\n\n#### `sum_imputed()`\n\nComputes the sum of the measure. However, if any of the values in the measures are non-numeric, this fills in the mean of the numeric values. For example, `sum_imputed(1, '', 3, 5)` is `12`.\n\n#### `imputed_fraction()`\n\nThe fraction of the data that is non-zero and would have a value imputed for it. `imputed_fraction(1, '', 3, 5)` is 0.25.\n\n#### `join()`\n\n`join()` is a little trickier. It collects all the non-blank values in the listed measures, and joins them with the `|` character. Useful if you have a set of values selected by checkbox. For example, if you had three measures that would either be blank or not for things participants might endorse, you could collate them into one column with:\n\n    measure liked_pets join(likes_cats, likes_dogs, likes_horses)\n\nIf a participant had `cats` for `likes_cats` and `horses` for `likes_horses`, you'd get:\n\n    cats|horses\n\n#### `ratio()`\n\n`ratio(a, b)` will compute the ratio of two columns; in other words: `a / b`. Notably, this works on other measures, so you can take the ratio of sums or means. In those cases, the ratio line needs to come after the other measures' lines do.\n\n#### `min()`\n\n`min(measure_1, measure_2)` will output the minimum numeric value in the given measures. Non-numeric values will cause NaN.\n\n#### `max()`\n\n`max(measure_1, measure_2)` will output the maximum numeric value in the given measures. Non-numeric values will cause NaN.\n\n## Complete example\n\nIf you take a scoresheet that looks like:\n\n| A         | B               | C                             | D       |\n| ---       | ---             | ---                           | ---     |\n| layout    | header          |                               |         |\n| layout    | data            |                               |         |\n|           |                 |                               |         |\n| exclude   | PPT_COL         | bad_ppt1                      |         |\n| exclude   | PPT_COL         | bad_ppt2                      |         |\n|           |                 |                               |         |\n| transform | normal          | map(1:5,1:5)                  |         |\n| transform | reverse         | map(1:5,5:1)                  |         |\n|           |                 |                               |         |\n| score     | PPT_COL         |                               |         |\n| score     | HAPPY_Q1        | happy                         | normal  |\n| score     | SAD_Q1          | happy                         | normal  |\n| score     | HAPPY_Q2        | happy                         | reverse |\n|           |                 |                               |         |\n| measure   | happy_score     | mean(happy)                   |         |\n| measure   | sad_score       | mean(sad)                     |         |\n| measure   | happiness_ratio | ratio(happy_score, sad_score) |         |\n\nand run it on data that looks like:\n\n| PPT_COL | EXTRA | HAPPY_Q1 | SAD_Q1 | HAPPY_Q2 |\n| ---     | ---   | ---      | ---    | ---      |\n| ppt1    | foo   | 4        | 2      | 2        |\n| ppt2    | bar   | 2        | 5      | 5        |\n\n... you'll get output like:\n\n| PPT_COL | HAPPY_Q1: happy | SAD_Q1: sad | HAPPY_Q2: happy | happy_score | sad_score | happiness_ratio |\n| ---     | ---             | ---         | ---             | ---         | ---       | ---             |\n| ppt1    | 4               | 2           | 3               | 3.5         | 2         | 1.75            |\n| ppt2    | 2               | 5           | 1               | 1.5         | 5         | 0.3             |\n\n## Credits\n\nScorify uses several excellent libraries:\n\n* [docopt](https://github.com/docopt/docopt)\n* [schema](https://github.com/halst/schema)\n* [openpyxl](https://openpyxl.readthedocs.io/)\n\n\n\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "https://github.com/uwmadison-chm/scorify/releases",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/uwmadison-chm/scorify",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Nate Vack",
    "maintainer_email": "njvack@wisc.edu",
    "name": "scorify",
    "package_url": "https://pypi.org/project/scorify/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/scorify/",
    "project_urls": {
      "Download": "https://github.com/uwmadison-chm/scorify/releases",
      "Homepage": "https://github.com/uwmadison-chm/scorify"
    },
    "release_url": "https://pypi.org/project/scorify/0.9.3/",
    "requires_dist": [
      "schema (>=0.7.0)",
      "openpyxl (>=3.0.0)",
      "docopt (>=0.6.1)"
    ],
    "requires_python": "",
    "summary": "Library for scoring questionnaires",
    "version": "0.9.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7294922,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "078b3768114394b171b46a4b54c5052913fd47811cd34b854503a228046b3c3b",
          "md5": "008caecba9c16a2e1c794dd68208cfea",
          "sha256": "726b556b76a937176305a7cb8d5bf0ce4ee67098a6921afb471644feb6365340"
        },
        "downloads": -1,
        "filename": "scorify-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "008caecba9c16a2e1c794dd68208cfea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17929,
        "upload_time": "2014-02-17T21:08:05",
        "upload_time_iso_8601": "2014-02-17T21:08:05.010175Z",
        "url": "https://files.pythonhosted.org/packages/07/8b/3768114394b171b46a4b54c5052913fd47811cd34b854503a228046b3c3b/scorify-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23039c8ba4db78c3ee6bda1df8549d2ca409fe82968651697c91209698bf05bb",
          "md5": "9a889dddb26d857fde4cfff2c1f346ce",
          "sha256": "d236291f6fe59ead691868c8cb0ebca4867424de7f67e7e05ba059f0c4e66961"
        },
        "downloads": -1,
        "filename": "scorify-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9a889dddb26d857fde4cfff2c1f346ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17915,
        "upload_time": "2014-02-17T21:30:03",
        "upload_time_iso_8601": "2014-02-17T21:30:03.993082Z",
        "url": "https://files.pythonhosted.org/packages/23/03/9c8ba4db78c3ee6bda1df8549d2ca409fe82968651697c91209698bf05bb/scorify-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab741b1ac24d33873da851ebde11ea483c6143b1dbd1269513b984f286d0e5bc",
          "md5": "50e786875722a81bb0afad42916d03f6",
          "sha256": "6a5c56c4f5629baa0934db8aacc477e947fad6595c4ba104ad05167dc693660d"
        },
        "downloads": -1,
        "filename": "scorify-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "50e786875722a81bb0afad42916d03f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18645,
        "upload_time": "2014-10-30T18:43:30",
        "upload_time_iso_8601": "2014-10-30T18:43:30.125920Z",
        "url": "https://files.pythonhosted.org/packages/ab/74/1b1ac24d33873da851ebde11ea483c6143b1dbd1269513b984f286d0e5bc/scorify-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f75c82359b232dfc43612d34f549bb675ab20c5ab401bdbc0bf2c55debf68333",
          "md5": "9d946d1921c6edc38daa1c1cd42d7765",
          "sha256": "88cd05ebfc65f74291b46ab75b87782528310751c06423804efa597f2dc0e10d"
        },
        "downloads": -1,
        "filename": "scorify-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9d946d1921c6edc38daa1c1cd42d7765",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19604,
        "upload_time": "2015-04-03T20:44:55",
        "upload_time_iso_8601": "2015-04-03T20:44:55.746141Z",
        "url": "https://files.pythonhosted.org/packages/f7/5c/82359b232dfc43612d34f549bb675ab20c5ab401bdbc0bf2c55debf68333/scorify-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b25cae93341d7876af5cc2dd68221f83c44305656d9fe439f8b5fd98cba5f55",
          "md5": "005aadf9c89abd31e1781026f256cea1",
          "sha256": "62070eceb6842edb1b4ba7582ebffba053bfcc8483c4342ee34ab8d31123a359"
        },
        "downloads": -1,
        "filename": "scorify-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "005aadf9c89abd31e1781026f256cea1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19705,
        "upload_time": "2017-04-27T19:25:37",
        "upload_time_iso_8601": "2017-04-27T19:25:37.261299Z",
        "url": "https://files.pythonhosted.org/packages/7b/25/cae93341d7876af5cc2dd68221f83c44305656d9fe439f8b5fd98cba5f55/scorify-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6a46088f05a4d27cd38f1c35a92c9a7b7a1adecde3fb6fab9c86ed0448b3353",
          "md5": "e75fef9f25783052d93912aad4cf0a9e",
          "sha256": "ed1549d4000f710c7c7b01a393d9870d5e0b5a7b78e1cac9eb5171891a497165"
        },
        "downloads": -1,
        "filename": "scorify-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e75fef9f25783052d93912aad4cf0a9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16526,
        "upload_time": "2017-06-21T17:38:53",
        "upload_time_iso_8601": "2017-06-21T17:38:53.322165Z",
        "url": "https://files.pythonhosted.org/packages/d6/a4/6088f05a4d27cd38f1c35a92c9a7b7a1adecde3fb6fab9c86ed0448b3353/scorify-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f80551b6108bf2d8a5ca5d5739fc1f1d1c7cd2e746ae1bcfec326ffccc020bb",
          "md5": "12c579d1e184a56523bf7f5b2012c72d",
          "sha256": "63a8f6c81d74874e8d745e0cd7b5e1e43d7b289d197798697334116c58234c08"
        },
        "downloads": -1,
        "filename": "scorify-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "12c579d1e184a56523bf7f5b2012c72d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16595,
        "upload_time": "2017-11-29T19:58:52",
        "upload_time_iso_8601": "2017-11-29T19:58:52.276860Z",
        "url": "https://files.pythonhosted.org/packages/3f/80/551b6108bf2d8a5ca5d5739fc1f1d1c7cd2e746ae1bcfec326ffccc020bb/scorify-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0af03a8cd7a5a1fefbcc09759807b3e0bc626078aa5434d7bb77b3f3983482f7",
          "md5": "5cedb505a4adee63ba5755ec0192406e",
          "sha256": "f441303c7110cb5f0399056e887a92f0899a4dcf03438cb90fed6a10d2a7e713"
        },
        "downloads": -1,
        "filename": "scorify-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5cedb505a4adee63ba5755ec0192406e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17082,
        "upload_time": "2018-04-30T20:10:21",
        "upload_time_iso_8601": "2018-04-30T20:10:21.559232Z",
        "url": "https://files.pythonhosted.org/packages/0a/f0/3a8cd7a5a1fefbcc09759807b3e0bc626078aa5434d7bb77b3f3983482f7/scorify-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "483d8fbbc4d6a715bef73867fb910ec1c8c8783dbdf64dc30c4cb4933590638f",
          "md5": "39a8754fa79136df5fcafb87adc1d3a9",
          "sha256": "4cde7b7fb585c6fb493287805a2164c59d5575c380c6f2332473574b11a57e22"
        },
        "downloads": -1,
        "filename": "scorify-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "39a8754fa79136df5fcafb87adc1d3a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19638,
        "upload_time": "2018-10-18T20:23:47",
        "upload_time_iso_8601": "2018-10-18T20:23:47.128933Z",
        "url": "https://files.pythonhosted.org/packages/48/3d/8fbbc4d6a715bef73867fb910ec1c8c8783dbdf64dc30c4cb4933590638f/scorify-0.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efb62e026afd03e198d701cb8b57187ecfd11d6b00318cff10f624c39daf683c",
          "md5": "e874d7aba163a7ccf95bfc1a2cf68eca",
          "sha256": "dc7473a28fdd48116113fad6f3a2bcec3e11eb57fc4aa49e99f7a42efaafe7b1"
        },
        "downloads": -1,
        "filename": "scorify-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e874d7aba163a7ccf95bfc1a2cf68eca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27542,
        "upload_time": "2020-05-18T21:59:26",
        "upload_time_iso_8601": "2020-05-18T21:59:26.640946Z",
        "url": "https://files.pythonhosted.org/packages/ef/b6/2e026afd03e198d701cb8b57187ecfd11d6b00318cff10f624c39daf683c/scorify-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d7a6ee0037e347115db5dc7a76b27d0b72377784579046df64366216f22f246",
          "md5": "1acbdc20f16c550c4878a746c08f6517",
          "sha256": "1d2b5e6784c46d2ab04be9fd018da50889d1089ce8e6fa6b8d4b8c433a9e336d"
        },
        "downloads": -1,
        "filename": "scorify-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1acbdc20f16c550c4878a746c08f6517",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23892,
        "upload_time": "2020-05-18T21:59:27",
        "upload_time_iso_8601": "2020-05-18T21:59:27.877457Z",
        "url": "https://files.pythonhosted.org/packages/0d/7a/6ee0037e347115db5dc7a76b27d0b72377784579046df64366216f22f246/scorify-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0965a67997a85316e3601eb3dc827d9bcdd7c8840c6c8e58f5b6d040453e0410",
          "md5": "8fb4190537ea028677d267426ec8863f",
          "sha256": "6d8a878af77acaba84e4764c1c29dada6e787e4c98dd877439ea7e2fdb8c7a5d"
        },
        "downloads": -1,
        "filename": "scorify-0.9.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fb4190537ea028677d267426ec8863f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27614,
        "upload_time": "2020-05-21T15:52:19",
        "upload_time_iso_8601": "2020-05-21T15:52:19.700684Z",
        "url": "https://files.pythonhosted.org/packages/09/65/a67997a85316e3601eb3dc827d9bcdd7c8840c6c8e58f5b6d040453e0410/scorify-0.9.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "231a40db4ff759328b60de235c49be45b3d6b11103e250ebaf0651baf6481c55",
          "md5": "f1d052b240a36397c24865041071b666",
          "sha256": "eb3d5f6943e0f78aeac25e176ee3e92957987cb6f6304aeada0b1855ea2f7fb4"
        },
        "downloads": -1,
        "filename": "scorify-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f1d052b240a36397c24865041071b666",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23987,
        "upload_time": "2020-05-21T15:52:20",
        "upload_time_iso_8601": "2020-05-21T15:52:20.757832Z",
        "url": "https://files.pythonhosted.org/packages/23/1a/40db4ff759328b60de235c49be45b3d6b11103e250ebaf0651baf6481c55/scorify-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0965a67997a85316e3601eb3dc827d9bcdd7c8840c6c8e58f5b6d040453e0410",
        "md5": "8fb4190537ea028677d267426ec8863f",
        "sha256": "6d8a878af77acaba84e4764c1c29dada6e787e4c98dd877439ea7e2fdb8c7a5d"
      },
      "downloads": -1,
      "filename": "scorify-0.9.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8fb4190537ea028677d267426ec8863f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 27614,
      "upload_time": "2020-05-21T15:52:19",
      "upload_time_iso_8601": "2020-05-21T15:52:19.700684Z",
      "url": "https://files.pythonhosted.org/packages/09/65/a67997a85316e3601eb3dc827d9bcdd7c8840c6c8e58f5b6d040453e0410/scorify-0.9.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "231a40db4ff759328b60de235c49be45b3d6b11103e250ebaf0651baf6481c55",
        "md5": "f1d052b240a36397c24865041071b666",
        "sha256": "eb3d5f6943e0f78aeac25e176ee3e92957987cb6f6304aeada0b1855ea2f7fb4"
      },
      "downloads": -1,
      "filename": "scorify-0.9.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f1d052b240a36397c24865041071b666",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23987,
      "upload_time": "2020-05-21T15:52:20",
      "upload_time_iso_8601": "2020-05-21T15:52:20.757832Z",
      "url": "https://files.pythonhosted.org/packages/23/1a/40db4ff759328b60de235c49be45b3d6b11103e250ebaf0651baf6481c55/scorify-0.9.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}