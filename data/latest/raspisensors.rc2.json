{
  "info": {
    "author": "Johann Hofstaetter",
    "author_email": "hanshof@mailbox.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator"
    ],
    "description": "# Raspberry Pi Sensors\n\nThis is a Python 3 package that enables Raspberry Pi to read various sensors .It has been tested on Python 3.5/Raspbian (stretch).\nSupported devices include:\n\n* HCSR04 ultrasonic sensor\n* PCA9685 Adafruit 16-channel 12 Bit PWM Driver\n* BMP280 Barometer\n* Triple Axis Magnetometer QMC5883L \n* AS3935 lightning sensor MOD-1016 embedded adventures\n\n\n### REQUIREMENTS\n\n\n1. adafruit-circuitpython-servokit\n\n### Installation\n\n1. From source  (incl. examples, fritzing and ebooks)\n   \n ```sh\n\n       git clone https://github.com/hanshof/rpiSensors.git\n       cd rpiSensors\n       python install setup.py\n ```\n       \n2. PIP\n\n ```sh\n\n     pip install raspiSensors\n     \n ```\n\n\n\n\n\n\n### HCSR04 ultrasonic sensor\n\n\n\n> This is the HC-SR04 ultrasonic distance sensor. \n> This economical sensor provides 2cm to 400cm \n> of non-contact measurement functionality with a ranging accuracy \n> that can reach up to 3mm. \n> Each HC-SR04 module includes an ultrasonic transmitter\n>, a receiver and a control circuit.\n\n> There are only four pins that you need to worry about on the HC-SR04: \n> VCC (Power), Trig (Trigger), Echo (Receive), and GND (Ground). \n> You will find this sensor very easy to set up and use for your next range-finding project!\n\nExample:\n\n  ```python\n\n    from raspiSensors import hcsr04 as HCSR04\n    ultrasonic = HCSR04(trigger_pin = 21, echo_pin = 20)\n    print(ultrasonic.distance())\n\n    returns distance in cm\n    \n  ```\n    \n### PCA9685 Adafruit 16-channel 12 Bit PWM Driver\n\n\n> Using only two pins, control 16 free-running PWM outputs! \n> You can even chain up 62 breakouts to control up to 992 PWM outputs (which we would really like to see since it would be glorious)\n> It's an i2c-controlled PWM driver with a built in clock. That means that, unlike the TLC5940 family, you do not need to continuously send it signal tying up your microcontroller, its completely free running!\n> It is 5V compliant, which means you can control it from a 3.3V microcontroller and still safely drive up to 6V outputs (this is good for when you want to control white or blue LEDs with 3.4+ forward voltages)\n> 6 address select pins so you can wire up to 62 of these on a single i2c bus, a total of 992 outputs - that's a lot of servos or LEDs\n> Adjustable frequency PWM up to about 1.6 KHz\n> 12-bit resolution for each output - for servos, that means about 4us resolution at 60Hz update rate\n> Configurable push-pull or open-drain output\n> Output enable pin to quickly disable all the outputs\n\nExample:\n\n  ```python\n  \n      from raspiSensors import pca9685 as PCA9685\n      servos = PCA9685(channels=16)\n      \n      servos.kit.servo[0].angle = 90\n  ```\n      \n      \n      \n### BMP280 Barometer\n\n  \n> This is a Barometer Pressure Sensor module\n> It could measure the pressure and temperature.\n> This program depend on BMP280.py writted by Adafruit. \n\n* #### [Example](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/examples/bmp280_test.py)\n* #### [Datasheet](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/datasheet/BST-BMP280-DS001-11.pdf)\n* #### [Ebook](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/ebooks/BMP280.pdf)  \n* #### [Fritzing](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/fritzing/Barometer_BMP280_Steckplatine.png)\n\n\n### Triple Axis Magnetometer QMC5883L \n\n\n> Magnetometer QMC5883L is used for measuring the direction and magnitude of the Earth’s magnetic field. It is used for low cost compassing and magnetometry.\n> It measures the Earth’s magnetic field value along the X, Y and Z axes from milli-gauss to 8 gauss.\n> It can be used to find the direction of heading of the device.\n> It uses I2C protocol for communication with microcontroller.\n\n* #### [Example](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/examples/qmc5883l_test.py)\n\n\n### AS3935 lightning sensor MOD-1016 embedded adventures\n\n> The MOD1016 is a lightning sensor based on the AMS3935. It allows you to detect \n> storms up to 40km away.\n\n* #### [Example](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/examples/as3935_test.py)\n* #### [Datasheet MOD-1016](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/datasheet/MOD-1016_hw_v8_doc_v4.pdf)\n* #### [Datasheet AS3935](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/datasheet/AS3935_datasheet.pdf)\n* #### [Ebook](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/ebooks/MOD1016.pdf)\n* #### [Fritzing](https://github.com/hanshof/raspiSensors/blob/master/raspiSensors/fritzing/MOD1016-AS3935.png)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/hanshof/raspiSensors/archive/2019.3.26.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hanshof/raspiSensors",
    "keywords": "Raspberry PI,Sensor,Robots",
    "license": "MIT",
    "maintainer": "Johann Hofstaetter",
    "maintainer_email": "hanshof@mailbox.org",
    "name": "raspiSensors",
    "package_url": "https://pypi.org/project/raspiSensors/",
    "platform": "",
    "project_url": "https://pypi.org/project/raspiSensors/",
    "project_urls": {
      "Download": "https://github.com/hanshof/raspiSensors/archive/2019.3.26.tar.gz",
      "Homepage": "https://github.com/hanshof/raspiSensors"
    },
    "release_url": "https://pypi.org/project/raspiSensors/2019.3.26/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A series of convenience functions for Raspbery PI sensors",
    "version": "2019.3.26",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4989133,
  "releases": {
    "2019.3.24.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32f32bdd1a52b2b593d43cf21a1bae97950d0fc3fee75e282372fb7bba2dd5d7",
          "md5": "cdd152810f771c9e707165392ea907e0",
          "sha256": "09a0e5c2bca372d02085032d6e27d8c65939ddf510b3de5981f895556f32694d"
        },
        "downloads": -1,
        "filename": "raspiSensors-2019.3.24.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cdd152810f771c9e707165392ea907e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10896,
        "upload_time": "2019-03-25T00:24:17",
        "upload_time_iso_8601": "2019-03-25T00:24:17.591334Z",
        "url": "https://files.pythonhosted.org/packages/32/f3/2bdd1a52b2b593d43cf21a1bae97950d0fc3fee75e282372fb7bba2dd5d7/raspiSensors-2019.3.24.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2019.3.26": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8609f9b7672d9d6e802429708cbcd428a16c7e8bd01f4cd85e383d294c3f754c",
          "md5": "a583b34513cbdc62ec0068a303f786ae",
          "sha256": "63946ff9ace1186cd40687c598409a7803f20ff04e22e9f3f420a06818ffaf6f"
        },
        "downloads": -1,
        "filename": "raspiSensors-2019.3.26.tar.gz",
        "has_sig": false,
        "md5_digest": "a583b34513cbdc62ec0068a303f786ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14046,
        "upload_time": "2019-03-26T19:13:03",
        "upload_time_iso_8601": "2019-03-26T19:13:03.067653Z",
        "url": "https://files.pythonhosted.org/packages/86/09/f9b7672d9d6e802429708cbcd428a16c7e8bd01f4cd85e383d294c3f754c/raspiSensors-2019.3.26.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8609f9b7672d9d6e802429708cbcd428a16c7e8bd01f4cd85e383d294c3f754c",
        "md5": "a583b34513cbdc62ec0068a303f786ae",
        "sha256": "63946ff9ace1186cd40687c598409a7803f20ff04e22e9f3f420a06818ffaf6f"
      },
      "downloads": -1,
      "filename": "raspiSensors-2019.3.26.tar.gz",
      "has_sig": false,
      "md5_digest": "a583b34513cbdc62ec0068a303f786ae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14046,
      "upload_time": "2019-03-26T19:13:03",
      "upload_time_iso_8601": "2019-03-26T19:13:03.067653Z",
      "url": "https://files.pythonhosted.org/packages/86/09/f9b7672d9d6e802429708cbcd428a16c7e8bd01f4cd85e383d294c3f754c/raspiSensors-2019.3.26.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}