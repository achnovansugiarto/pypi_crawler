{
  "info": {
    "author": "Matthieu Tristram",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "LoLLiPoP: Low-L Likelihood Polarized for Planck\n================================================\n[![GitHub Workflow Status](https://img.shields.io/github/workflow/status/planck-npipe/lollipop/Unit%20test)](https://github.com/planck-npipe/lollipop/actions/workflows/testing.yml)\n[![pypi](https://img.shields.io/pypi/v/planck-2020-lollipop)](https://pypi.python.org/pypi/planck-2020-lollipop)\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n\n``Lollipop`` is a Planck low-l polarization likelihood based on cross-power-spectra for which the\nbias is zero when the noise is uncorrelated between maps. It uses the approximation presented in\n[Hamimeche & Lewis (2008)](https://arxiv.org/abs/0801.0554), modified as described in [Mangilli et\nal. (2015)](https://arxiv.org/abs/1503.01347) to apply to cross-power spectra.  This version is\nbased on the Planck PR4 data. Cross-spectra are computed on the CMB maps from Commander component\nseparation applied on each detset-split Planck frequency maps.\n\nIt was previously applied and described in\n- [Planck Collaboration Int. XLVII (2016)](https://arxiv.org/abs/1605.03507) for investigating the\n  reionization history,\n- [Tristram et al. (2020)](https://arxiv.org/abs/2010.01139) for estimating constraints on the\n  tensor-to-scalar ratio.\n\nIt is interfaced with the ``cobaya`` MCMC sampler.\n\nRequirements\n------------\n* Python >= 3.5\n* `numpy`\n* `astropy`\n\nInstall\n-------\n\nThe easiest way to install the `Lollipop` likelihood is *via* `pip`\n\n```shell\n$ pip install planck-2020-lollipop [--user]\n```\n\nIf you plan to dig into the code, it is better to clone this repository to some location\n\n```shell\n$ git clone https://github.com/planck-npipe/lollipop.git /where/to/clone\n```\n\nThen you can install the `Lollipop` likelihoods and its dependencies *via*\n\n```shell\n$ pip install -e /where/to/clone\n```\n\nThe ``-e`` option allow the developer to make changes within the `Lollipop` directory without having\nto reinstall at every changes. If you plan to just use the likelihood and do not develop it, you can\nremove the ``-e`` option.\n\nInstalling Lollipop likelihood data\n-----------------------------------\n\nYou should use the `cobaya-install` binary to automatically download the data needed by the\n`lollipop.lowlE` or `lollipop.lowlB` or `lollipop.lowlEB` likelihoods\n\n```shell\n$ cobaya-install /where/to/clone/examples/test_lollipop.yaml -p /where/to/put/packages\n```\n\nData and code such as [CAMB](https://github.com/cmbant/CAMB) will be downloaded and installed within\nthe ``/where/to/put/packages`` directory. For more details, you can have a look to `cobaya`\n[documentation](https://cobaya.readthedocs.io/en/latest/installation_cosmo.html).\n\n\nLikelihood versions\n-------------------\n\n* ``lowlE``\n* ``lowlB``\n* ``lowlEB``",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/planck-npipe/lollipop",
    "keywords": "",
    "license": "GNU license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "planck-2020-lollipop",
    "package_url": "https://pypi.org/project/planck-2020-lollipop/",
    "platform": null,
    "project_url": "https://pypi.org/project/planck-2020-lollipop/",
    "project_urls": {
      "Homepage": "https://github.com/planck-npipe/lollipop"
    },
    "release_url": "https://pypi.org/project/planck-2020-lollipop/1.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "A cobaya low-ell likelihood polarized for planck",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13401185,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c36979a8a610076bc99849651c6dd357b4813c554b91244e95b022ddfd858f5",
          "md5": "05edb93f20ff72fd1c3838ee75966dc5",
          "sha256": "1e7c4661919884e35812e7f07e082678e8aa4d31c475a9622c0a6066128fd532"
        },
        "downloads": -1,
        "filename": "planck_2020_lollipop-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05edb93f20ff72fd1c3838ee75966dc5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 20643,
        "upload_time": "2020-11-30T19:01:46",
        "upload_time_iso_8601": "2020-11-30T19:01:46.599434Z",
        "url": "https://files.pythonhosted.org/packages/1c/36/979a8a610076bc99849651c6dd357b4813c554b91244e95b022ddfd858f5/planck_2020_lollipop-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e63fccce9a973615479660198e466010c543df4ad07d597f9fb4cb9c86ea943c",
          "md5": "f26c93861edd492ec5d8c75f8fb529fb",
          "sha256": "4ac62b05181d4fc43e3ffb17fe1e5052b2f17d0643c23369e4746231d2e22130"
        },
        "downloads": -1,
        "filename": "planck_2020_lollipop-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f26c93861edd492ec5d8c75f8fb529fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6598,
        "upload_time": "2020-11-30T19:01:47",
        "upload_time_iso_8601": "2020-11-30T19:01:47.835891Z",
        "url": "https://files.pythonhosted.org/packages/e6/3f/ccce9a973615479660198e466010c543df4ad07d597f9fb4cb9c86ea943c/planck_2020_lollipop-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "980e98dff6f59adfc770ed13ca71126c428a0ac286f1fc77e1822d5a42b20ea1",
          "md5": "faba02cbe299cafc4854e194fc0bb131",
          "sha256": "b8b61daf98ce21890cd636517949f0673029aaa6b1de61f7a9dbdf88057d2ce2"
        },
        "downloads": -1,
        "filename": "planck_2020_lollipop-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "faba02cbe299cafc4854e194fc0bb131",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 22311,
        "upload_time": "2020-11-30T22:06:33",
        "upload_time_iso_8601": "2020-11-30T22:06:33.880259Z",
        "url": "https://files.pythonhosted.org/packages/98/0e/98dff6f59adfc770ed13ca71126c428a0ac286f1fc77e1822d5a42b20ea1/planck_2020_lollipop-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03ed641bf003ab6ad385463dbe77ce8207ab4b816c1f1b1bc367c29a038272fa",
          "md5": "a472d4405eed6209b894b02ba8258808",
          "sha256": "bd68f2b8fbf65311e5c1ca354e98491245cb7b246cf9930253bd239413145e88"
        },
        "downloads": -1,
        "filename": "planck_2020_lollipop-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a472d4405eed6209b894b02ba8258808",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 24669,
        "upload_time": "2020-11-30T22:06:35",
        "upload_time_iso_8601": "2020-11-30T22:06:35.322705Z",
        "url": "https://files.pythonhosted.org/packages/03/ed/641bf003ab6ad385463dbe77ce8207ab4b816c1f1b1bc367c29a038272fa/planck_2020_lollipop-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "835623cc69f8eb2c3e14f8e004cb1851d98d32285f4b96f2d214807c3fb12fd0",
          "md5": "8192c500b34566dfb48fa69c771f3d4c",
          "sha256": "6c28866f274b01dd3b53f8c4ca66fd1d833673c651b84723f82b4b2ac2ce3f43"
        },
        "downloads": -1,
        "filename": "planck_2020_lollipop-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8192c500b34566dfb48fa69c771f3d4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 24599,
        "upload_time": "2022-04-04T15:00:33",
        "upload_time_iso_8601": "2022-04-04T15:00:33.585861Z",
        "url": "https://files.pythonhosted.org/packages/83/56/23cc69f8eb2c3e14f8e004cb1851d98d32285f4b96f2d214807c3fb12fd0/planck_2020_lollipop-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "835623cc69f8eb2c3e14f8e004cb1851d98d32285f4b96f2d214807c3fb12fd0",
        "md5": "8192c500b34566dfb48fa69c771f3d4c",
        "sha256": "6c28866f274b01dd3b53f8c4ca66fd1d833673c651b84723f82b4b2ac2ce3f43"
      },
      "downloads": -1,
      "filename": "planck_2020_lollipop-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8192c500b34566dfb48fa69c771f3d4c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 24599,
      "upload_time": "2022-04-04T15:00:33",
      "upload_time_iso_8601": "2022-04-04T15:00:33.585861Z",
      "url": "https://files.pythonhosted.org/packages/83/56/23cc69f8eb2c3e14f8e004cb1851d98d32285f4b96f2d214807c3fb12fd0/planck_2020_lollipop-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}