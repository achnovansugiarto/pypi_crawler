{
  "info": {
    "author": "Matthias Fey",
    "author_email": "julian.kleber@sail.black",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Repo Badges \n\n[![Downloads](https://static.pepy.tech/personalized-badge/carate?period=total&units=international_system&left_color=black&right_color=orange&left_text=Downloads)](https://pepy.tech/project/find_the_right_one)\n[![License: GPL v3](https://img.shields.io/badge/License-GPL_v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n![Python Versions](https://img.shields.io/badge/python-3.8%20%7C%203.9%20%7C%203.10%20%7C%203.11%20%7C%20-blue) \n![Style Black](https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667) \n\nThe repo was not touched, however the quality may significantly be improved using `lia`\n\n\n# Parent Repo Badges \n[pypi-image]: https://badge.fury.io/py/torch-scatter.svg\n[pypi-url]: https://pypi.python.org/pypi/torch-scatter\n[testing-image]: https://github.com/rusty1s/pytorch_scatter/actions/workflows/testing.yml/badge.svg\n[testing-url]: https://github.com/rusty1s/pytorch_scatter/actions/workflows/testing.yml\n[linting-image]: https://github.com/rusty1s/pytorch_scatter/actions/workflows/linting.yml/badge.svg\n[linting-url]: https://github.com/rusty1s/pytorch_scatter/actions/workflows/linting.yml\n[docs-image]: https://readthedocs.org/projects/pytorch-scatter/badge/?version=latest\n[docs-url]: https://pytorch-scatter.readthedocs.io/en/latest/?badge=latest\n[coverage-image]: https://codecov.io/gh/rusty1s/pytorch_scatter/branch/master/graph/badge.svg\n[coverage-url]: https://codecov.io/github/rusty1s/pytorch_scatter?branch=master\n\n\n\n# Parent Repo Documentation\n\n# PyTorch Scatter\n\n[![PyPI Version][pypi-image]][pypi-url]\n[![Testing Status][testing-image]][testing-url]\n[![Linting Status][linting-image]][linting-url]\n[![Docs Status][docs-image]][docs-url]\n[![Code Coverage][coverage-image]][coverage-url]\n\n<p align=\"center\">\n  <img width=\"50%\" src=\"https://raw.githubusercontent.com/rusty1s/pytorch_scatter/master/docs/source/_figures/add.svg?sanitize=true\" />\n</p>\n\n--------------------------------------------------------------------------------\n\n**[Documentation](https://pytorch-scatter.readthedocs.io)**\n\nThis package consists of a small extension library of highly optimized sparse update (scatter and segment) operations for the use in [PyTorch](http://pytorch.org/), which are missing in the main package.\nScatter and segment operations can be roughly described as reduce operations based on a given \"group-index\" tensor.\nSegment operations require the \"group-index\" tensor to be sorted, whereas scatter operations are not subject to these requirements.\n\nThe package consists of the following operations with reduction types `\"sum\"|\"mean\"|\"min\"|\"max\"`:\n\n* [**scatter**](https://pytorch-scatter.readthedocs.io/en/latest/functions/scatter.html) based on arbitrary indices\n* [**segment_coo**](https://pytorch-scatter.readthedocs.io/en/latest/functions/segment_coo.html) based on sorted indices\n* [**segment_csr**](https://pytorch-scatter.readthedocs.io/en/latest/functions/segment_csr.html) based on compressed indices via pointers\n\nIn addition, we provide the following **composite functions** which make use of `scatter_*` operations under the hood: `scatter_std`, `scatter_logsumexp`, `scatter_softmax` and `scatter_log_softmax`.\n\nAll included operations are broadcastable, work on varying data types, are implemented both for CPU and GPU with corresponding backward implementations, and are fully traceable.\n\n## Installation\n\n### Anaconda\n\n**Update:** You can now install `pytorch-scatter` via [Anaconda](https://anaconda.org/pyg/pytorch-scatter) for all major OS/PyTorch/CUDA combinations ðŸ¤—\nGiven that you have [`pytorch >= 1.8.0` installed](https://pytorch.org/get-started/locally/), simply run\n\n```\nconda install pytorch-scatter -c pyg\n```\n\n### Binaries\n\nWe alternatively provide pip wheels for all major OS/PyTorch/CUDA combinations, see [here](https://data.pyg.org/whl).\n\n#### PyTorch 2.0\n\nTo install the binaries for PyTorch 2.0.0, simply run\n\n```\npip install torch-scatter -f https://data.pyg.org/whl/torch-2.0.0+${CUDA}.html\n```\n\nwhere `${CUDA}` should be replaced by either `cpu`, `cu117`, or `cu118` depending on your PyTorch installation.\n\n|             | `cpu` | `cu117` | `cu118` |\n|-------------|-------|---------|---------|\n| **Linux**   | âœ…    | âœ…      | âœ…      |\n| **Windows** | âœ…    | âœ…      | âœ…      |\n| **macOS**   | âœ…    |         |         |\n\n#### PyTorch 1.13\n\nTo install the binaries for PyTorch 1.13.0, simply run\n\n```\npip install torch-scatter -f https://data.pyg.org/whl/torch-1.13.0+${CUDA}.html\n```\n\nwhere `${CUDA}` should be replaced by either `cpu`, `cu116`, or `cu117` depending on your PyTorch installation.\n\n|             | `cpu` | `cu116` | `cu117` |\n|-------------|-------|---------|---------|\n| **Linux**   | âœ…    | âœ…      | âœ…      |\n| **Windows** | âœ…    | âœ…      | âœ…      |\n| **macOS**   | âœ…    |         |         |\n\n**Note:** Binaries of older versions are also provided for PyTorch 1.4.0, PyTorch 1.5.0, PyTorch 1.6.0, PyTorch 1.7.0/1.7.1, PyTorch 1.8.0/1.8.1, PyTorch 1.9.0, PyTorch 1.10.0/1.10.1/1.10.2, PyTorch 1.11.0 and PyTorch 1.12.0/1.12.1 (following the same procedure).\nFor older versions, you need to explicitly specify the latest supported version number or install via `pip install --no-index` in order to prevent a manual installation from source.\nYou can look up the latest supported version number [here](https://data.pyg.org/whl).\n\n### From source\n\nEnsure that at least PyTorch 1.4.0 is installed and verify that `cuda/bin` and `cuda/include` are in your `$PATH` and `$CPATH` respectively, *e.g.*:\n\n```\n$ python -c \"import torch; print(torch.__version__)\"\n>>> 1.4.0\n\n$ echo $PATH\n>>> /usr/local/cuda/bin:...\n\n$ echo $CPATH\n>>> /usr/local/cuda/include:...\n```\n\nThen run:\n\n```\npip install torch-scatter\n```\n\nWhen running in a docker container without NVIDIA driver, PyTorch needs to evaluate the compute capabilities and may fail.\nIn this case, ensure that the compute capabilities are set via `TORCH_CUDA_ARCH_LIST`, *e.g.*:\n\n```\nexport TORCH_CUDA_ARCH_LIST = \"6.0 6.1 7.2+PTX 7.5+PTX\"\n```\n\n## Example\n\n```py\nimport torch\nfrom torch_scatter import scatter_max\n\nsrc = torch.tensor([[2, 0, 1, 4, 3], [0, 2, 1, 3, 4]])\nindex = torch.tensor([[4, 5, 4, 2, 3], [0, 0, 2, 2, 1]])\n\nout, argmax = scatter_max(src, index, dim=-1)\n```\n\n```\nprint(out)\ntensor([[0, 0, 4, 3, 2, 0],\n        [2, 4, 3, 0, 0, 0]])\n\nprint(argmax)\ntensor([[5, 5, 3, 4, 0, 1]\n        [1, 4, 3, 5, 5, 5]])\n```\n\n## Running tests\n\n```\npytest\n```\n\n## C++ API\n\n`torch-scatter` also offers a C++ API that contains C++ equivalent of python models.\nFor this, we need to add `TorchLib` to the `-DCMAKE_PREFIX_PATH` (*e.g.*, it may exists in `{CONDA}/lib/python{X.X}/site-packages/torch` if installed via `conda`):\n\n```\nmkdir build\ncd build\n# Add -DWITH_CUDA=on support for CUDA support\ncmake -DCMAKE_PREFIX_PATH=\"...\" ..\nmake\nmake install\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/rusty1s/pytorch_scatter/archive/2.1.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rusty1s/pytorch_scatter",
    "keywords": "pytorch,scatter,segment,gather",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "torch-scatter-carate",
    "package_url": "https://pypi.org/project/torch-scatter-carate/",
    "platform": null,
    "project_url": "https://pypi.org/project/torch-scatter-carate/",
    "project_urls": {
      "Download": "https://github.com/rusty1s/pytorch_scatter/archive/2.1.1.tar.gz",
      "Homepage": "https://github.com/rusty1s/pytorch_scatter"
    },
    "release_url": "https://pypi.org/project/torch-scatter-carate/2.1.1/",
    "requires_dist": [
      "torch",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "PyTorch Extension Library of Optimized Scatter Operations adapted for compatibility",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17444124,
  "releases": {
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "946ec946d1e90ef278fd995ade3b6cd80b490c967f595e6b695131f9a36325e9",
          "md5": "5b8b2668d19b83f359e5df0ae14ae2ca",
          "sha256": "4dda22fc972cc5d91324442b5417f6396279725d1f3c53247f1c2b03c9b49409"
        },
        "downloads": -1,
        "filename": "torch_scatter_carate-2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b8b2668d19b83f359e5df0ae14ae2ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25613,
        "upload_time": "2023-03-25T19:35:15",
        "upload_time_iso_8601": "2023-03-25T19:35:15.068991Z",
        "url": "https://files.pythonhosted.org/packages/94/6e/c946d1e90ef278fd995ade3b6cd80b490c967f595e6b695131f9a36325e9/torch_scatter_carate-2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c09a14d5cd12cab6fe179628917c1c040a78184cac05019e437f4ccd6d321e4",
          "md5": "9dccc57e4c342887bdc7811ccccfc999",
          "sha256": "c3d04ac9cc9d58349f70e538e56b6b5a5d868ae7bb47f86a802a19a3736f3ab1"
        },
        "downloads": -1,
        "filename": "torch_scatter_carate-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9dccc57e4c342887bdc7811ccccfc999",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 38122,
        "upload_time": "2023-03-25T19:35:17",
        "upload_time_iso_8601": "2023-03-25T19:35:17.096497Z",
        "url": "https://files.pythonhosted.org/packages/3c/09/a14d5cd12cab6fe179628917c1c040a78184cac05019e437f4ccd6d321e4/torch_scatter_carate-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "946ec946d1e90ef278fd995ade3b6cd80b490c967f595e6b695131f9a36325e9",
        "md5": "5b8b2668d19b83f359e5df0ae14ae2ca",
        "sha256": "4dda22fc972cc5d91324442b5417f6396279725d1f3c53247f1c2b03c9b49409"
      },
      "downloads": -1,
      "filename": "torch_scatter_carate-2.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5b8b2668d19b83f359e5df0ae14ae2ca",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 25613,
      "upload_time": "2023-03-25T19:35:15",
      "upload_time_iso_8601": "2023-03-25T19:35:15.068991Z",
      "url": "https://files.pythonhosted.org/packages/94/6e/c946d1e90ef278fd995ade3b6cd80b490c967f595e6b695131f9a36325e9/torch_scatter_carate-2.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3c09a14d5cd12cab6fe179628917c1c040a78184cac05019e437f4ccd6d321e4",
        "md5": "9dccc57e4c342887bdc7811ccccfc999",
        "sha256": "c3d04ac9cc9d58349f70e538e56b6b5a5d868ae7bb47f86a802a19a3736f3ab1"
      },
      "downloads": -1,
      "filename": "torch_scatter_carate-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9dccc57e4c342887bdc7811ccccfc999",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 38122,
      "upload_time": "2023-03-25T19:35:17",
      "upload_time_iso_8601": "2023-03-25T19:35:17.096497Z",
      "url": "https://files.pythonhosted.org/packages/3c/09/a14d5cd12cab6fe179628917c1c040a78184cac05019e437f4ccd6d321e4/torch_scatter_carate-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}