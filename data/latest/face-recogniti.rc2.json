{
  "info": {
    "author": "Jeanderson Gomes, José fernando",
    "author_email": "jeandsgomes10@ufpi.edu.br",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Reconhecimento Facial com VGG faces e BallTree\n=============\n\n#### Esse é que abstrai o processo de reconhecimento facial com o modelo VGG faces e o classificador BallTree.\n\n## Instalação:\n\n    '''\n    pip install face-Recogniti\n    '''\n\n## Uso:\n\n### Importando a biblioteca\n\n    '''\n    from Face_Recognition import  Face_Recognition as tf\n    '''\n\n### Inicializando o modelo\n#### é nescessario o caminho para o arquivo vgg_face_weights.h3\n#### você pode baixar o arquivo nesse link [vgg face weights](https://drive.google.com/file/d/1yMLtU3tcfp7hVwoMt6JIPnG0MvXVwTEs/view?usp=sharing)\n\n    '''\n    r_f = rf.Face_Recognition()\n    r_f.criando_modelo('.../Reconhecimento_Facial/vgg_face_weights.h5')\n    '''\n\n### Formatar o caminho do diretorio para importar o banco de dados\n#### A função dicionario_diretorio_treino_teste ira formatar os caminhos para as fotos presentes no banco de dados.\n#### Os parametros são os seguintes: \n1. diretorio : caminho para o banco de dados formatado da seguinte forma (.../base_de_dados/) \n2. quantidade_de_fotos_para_treino : quantidade de fotos armazenadas no banoco de treino.\n3. quantidade_de_fotos_para_teste : quantidade de fotos armazenadas no banoco de teste.\n    \n    '''\n    diretorio = '.../base_de_dados/'\n    dicionario_treino_teste = r_f.dicionario_diretorio_treino_teste(diretorio,quantidade_de_fotos_para_treino,quantidade_de_fotos_para_teste)\n    '''\n\n### Formatar o banco de dados\n#### A função extracao_de_caracteristicas_diretorio_treino vai retornar uma lista com as caracteristicas das fotos do banco de treino.\n#### Os parametros são os seguintes: \n1. dicionario_treino_teste : resultado retornado da função dicionario_diretorio_treino_teste\n\n    '''\n    base_treino = r_f.extracao_de_caracteristicas_diretorio_treino(dicionario_treino_teste)\n    '''\n\n#### A função extracao_de_caracteristicas_diretorio_teste vai retornar uma lista com as caracteristicas das fotos do banco de teste.\n#### Os parametros são os seguintes: \n1. dicionario_treino_teste : resultado retornado da função dicionario_diretorio_treino_teste\n\n    '''\n    base_teste = r_f.extracao_de_caracteristicas_diretorio_teste(dicionario_treino_teste)\n    '''\n\n### Classificar o banco de dados teste\n#### A função resultados_da_classificacao realiza a classificação do banco de dados teste.\n#### Os parametros são os seguintes: \n1. base_teste : base de treino.\n2. base_teste : base de teste.\n\n    '''\n    classificacao = r_f.resultados_da_classificacao(base_treino,base_teste)\n    '''\n\n### Reultados da classificação da base de dados teste\n#### A função resultado_dos_teste_percentual_acertos mostra resultados da classificação do banco teste.\n#### Os parametros são os seguintes: \n1. classificacao : resultados da função resultados_da_classificaca.\n2. base_teste : base de teste.\n\n    '''\n    r_f.resultado_dos_teste_percentual_acertos(classificacao,base_teste)\n    '''\n\n### Reconhecimneto de uma foto\n#### A função resultados_do_reconhecimento_de_uma_foto realiza o reconheicmento de uma foto apenas informando o diretorio dela e fornecendo a base de dados de treino.\n#### Os parametros são os seguintes: \n1. base_treino : base de teste.\n2. image_path : caminho para o diretorio da imagem que deseja identificar.\n\n    '''\n    image_path = '.../5.pgm'\n    r_f.resultados_do_reconhecimento_de_uma_foto(base_treino,image_path)\n    '''\n\n### Adicionar individuo a base de dados\n#### A função adicionando_individuos_a_base_treino que vai adicionar um novo individuo na base de dados.\n#### Os parametros são os seguintes: \n1. base_de_dados : base de dadis resultante das funções de estrações de caracteristicas.\n2. diretorio_individuo_para_adicionar : caminho para o diretorio do individuo que deseja adicionar.\n\n    '''\n    individuo_para_adicionar = '.../Jeanderson/'\n    r_f.adicionando_individuos_a_base_treino(base_de_dados,diretorio_individuo_para_adicionar)\n    '''\n\n### Remover individuo a base de dados\n#### A função remover_individuos_a_base_treino que vai remover o individuo informado.\n#### Os parametros são os seguintes: \n1. base_de_dados : base de dadis resultante das funções de estrações de caracteristicas.\n2. identificador_do_individuo : identificador usado na base de dados.\n\n    '''\n    r_f.remover_individuos_a_base_treino(base_treino,identificador_do_individuo)\n    '''\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JeandsGomes/pacotes_pypi.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "face-Recogniti",
    "package_url": "https://pypi.org/project/face-Recogniti/",
    "platform": "",
    "project_url": "https://pypi.org/project/face-Recogniti/",
    "project_urls": {
      "Homepage": "https://github.com/JeandsGomes/pacotes_pypi.git"
    },
    "release_url": "https://pypi.org/project/face-Recogniti/0.0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Abstrair o processo de reconhecimento facial com o modelo CNN Vgg Faces.",
    "version": "0.0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10942308,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "765d00be7f77c1d43c64ce3194a960c8ab7588d5c13cbafa3b7f0e2508d107b3",
          "md5": "9d5e9af647347d87479a1ae499a034e5",
          "sha256": "9c6a4eaa12b4fd2de137cf38f2cfbfe133ffeb24096b0e4c0b893d307154e17e"
        },
        "downloads": -1,
        "filename": "face_Recogniti-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d5e9af647347d87479a1ae499a034e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8290,
        "upload_time": "2021-07-19T00:31:39",
        "upload_time_iso_8601": "2021-07-19T00:31:39.386791Z",
        "url": "https://files.pythonhosted.org/packages/76/5d/00be7f77c1d43c64ce3194a960c8ab7588d5c13cbafa3b7f0e2508d107b3/face_Recogniti-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58df8e5fbe9f9d303e92b8edb191ec714e36a5d3142adce49163880501daf810",
          "md5": "7767fe3577fff570bbe119c71af93734",
          "sha256": "6ade55b9c242bb3ad28cc872b4647bbd54d49618aa35956eafb8675860b04c26"
        },
        "downloads": -1,
        "filename": "face_Recogniti-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7767fe3577fff570bbe119c71af93734",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8704,
        "upload_time": "2021-07-19T00:31:41",
        "upload_time_iso_8601": "2021-07-19T00:31:41.458139Z",
        "url": "https://files.pythonhosted.org/packages/58/df/8e5fbe9f9d303e92b8edb191ec714e36a5d3142adce49163880501daf810/face_Recogniti-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed9d26105baa94e33c0cd9c7369ef4416de69b2df56360fdfa782bd9fb45759a",
          "md5": "5d2becd6d5da1eb3a5b3473474d2f91e",
          "sha256": "f586aa086948b84033ddd03fd29eda74b3f974085fe7979f6d3143dcc58d34bf"
        },
        "downloads": -1,
        "filename": "face_Recogniti-0.0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5d2becd6d5da1eb3a5b3473474d2f91e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8310,
        "upload_time": "2021-07-19T01:40:19",
        "upload_time_iso_8601": "2021-07-19T01:40:19.146415Z",
        "url": "https://files.pythonhosted.org/packages/ed/9d/26105baa94e33c0cd9c7369ef4416de69b2df56360fdfa782bd9fb45759a/face_Recogniti-0.0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb6af8fd1269d1ea5ed79ce14481789cf343c23e040d014eba37cea098e6f0f4",
          "md5": "86899b8279ccbd3dd0323364e993195b",
          "sha256": "ba57ddf568ac1906d4a24ba6e7ca4b05e0d573761e1e18c5e2914e9eaffdca98"
        },
        "downloads": -1,
        "filename": "face_Recogniti-0.0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "86899b8279ccbd3dd0323364e993195b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8699,
        "upload_time": "2021-07-19T01:40:20",
        "upload_time_iso_8601": "2021-07-19T01:40:20.784989Z",
        "url": "https://files.pythonhosted.org/packages/cb/6a/f8fd1269d1ea5ed79ce14481789cf343c23e040d014eba37cea098e6f0f4/face_Recogniti-0.0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed9d26105baa94e33c0cd9c7369ef4416de69b2df56360fdfa782bd9fb45759a",
        "md5": "5d2becd6d5da1eb3a5b3473474d2f91e",
        "sha256": "f586aa086948b84033ddd03fd29eda74b3f974085fe7979f6d3143dcc58d34bf"
      },
      "downloads": -1,
      "filename": "face_Recogniti-0.0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5d2becd6d5da1eb3a5b3473474d2f91e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8310,
      "upload_time": "2021-07-19T01:40:19",
      "upload_time_iso_8601": "2021-07-19T01:40:19.146415Z",
      "url": "https://files.pythonhosted.org/packages/ed/9d/26105baa94e33c0cd9c7369ef4416de69b2df56360fdfa782bd9fb45759a/face_Recogniti-0.0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cb6af8fd1269d1ea5ed79ce14481789cf343c23e040d014eba37cea098e6f0f4",
        "md5": "86899b8279ccbd3dd0323364e993195b",
        "sha256": "ba57ddf568ac1906d4a24ba6e7ca4b05e0d573761e1e18c5e2914e9eaffdca98"
      },
      "downloads": -1,
      "filename": "face_Recogniti-0.0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "86899b8279ccbd3dd0323364e993195b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8699,
      "upload_time": "2021-07-19T01:40:20",
      "upload_time_iso_8601": "2021-07-19T01:40:20.784989Z",
      "url": "https://files.pythonhosted.org/packages/cb/6a/f8fd1269d1ea5ed79ce14481789cf343c23e040d014eba37cea098e6f0f4/face_Recogniti-0.0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}