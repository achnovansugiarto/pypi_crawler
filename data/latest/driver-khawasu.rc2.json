{
  "info": {
    "author": "",
    "author_email": "Ameharu <me@ameha.ru>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![PyPI](https://img.shields.io/pypi/v/driver-khawasu)\n\n# Description\nProvides a simple usage for Khawasu socket-server.\n\n# How to install\n\nJust make it: `pip install driver-khawasu`\n# Examples:\n### Create new Driver Instance\n```python\nfrom driver_khawasu.driver import LogicalDriver\n\n# Create instance and connect to server\ndriver = LogicalDriver(\"127.0.0.1\", 1234)\n```\n\n### Execute action\n```python\n# Execute \"power_level\" action for device \"103.47.177.100/29\" with args: b'\\125'\n# No response returned\ndriver.execute(\"103.47.177.100/29\", \"power_level\", bytes([125]))\n\n# Or \n# (note that the arguments here are bytes, and the special data that this Action accepts)\ndriver.get_device_by_address(\"103.47.177.100/29\").execute(\"power_level\", 125 / 255)\n```\n\n### Get action state\n```python\n# Get state for \"power_level\" action at device \"103.47.177.100/29\"\n# Return a state of action (action-spec)\ndriver.action_get(\"103.47.177.100/29\", \"power_level\")\n\n# Or\n# Returns special data, not bytes\n# (see item \"How to do anything with the device\")\ndriver.get_device_by_address(\"103.47.177.100/29\").get(\"power_level\") # returned float [0, 1]\n```\n\n### Subscribe to action\n```python\n# Action handler for subscribe\ndef action_handler(address, method_name, data):\n    print(  f\"Wow, {method_name} was executed on\" \n            f\"{address} and returned {len(data)} bytes!\")\n\n# Subscribe to device \"103.47.177.100/29\" at action \"power_level\" with:\n# duration: 60 sec\n# timeout: 0 sec (for immediate subscribe)\n# No response returned\n# Will call action_handler when the answer comes\ndriver.subscribe(\"103.47.177.100/29\", \"power_level\", 0, 60, action_handler)\n\n# For subscribe on duration - 60 sec and timeout - 1 sec:\ndriver.subscribe(\"103.47.177.100/29\", \"power_level\", 1000, 60, action_handler)\n\n# OR\ndriver.get_device_by_address(\"103.47.177.100/29\").subscribe(\"power_level\", 1000, 60, action_handler)\n\n```\n\n### Send request to socket server with response\n```python\n# Send request to socket server and get response at command \"list-devices\"\n# Return a data from socket server\ndriver.get(\"list-devices\")\n```\n\n# Class Device\n## Get list of devices\n```python\n# Functions return List[Device]\ndriver.get_devices() # Get devices from khawasu server or internal cache\ndriver.get_devices_force() # Get devices from khawasu server\n```\n\n## Get device by address\n```python\n# Function return Device or None (if not found)\ndriver.get_device_by_address(\"103.47.177.100/29\") # Get device by address\n```\n\n## How to do anything with the device\n```python\n# Get device by address\ndev = driver.get_device_by_address(\"103.47.177.100/29\")\n\n# ActionType.TOGGLE\ndev.get(\"power_state\") # Return bool\ndev.execute(\"power_state\", True) # Specify bool in arg\n\n# ActionType.RANGE\ndev.get(\"power_level\") # Return float [0, 1]\ndev.execute(\"power_state\", 0.41) # Specify float in arg\n\n# ActionType.TEMPERATURE\ndev.get(\"temperature\") # Return float temperature in celsius\n\n# ActionType.HUMIDITY\ndev.get(\"humudity\") # Return float [0, 1]\n```\n\n# Class Action\nHas methods to convert special objects to bytes and back: `format_bytes_to_data(..)` and `format_data_to_bytes(..)`\n\n```python \nAction(name, dev_class: int)\n```\n\n```python\nclass ActionType(Enum):\n    UNKNOWN = 0\n    IMMEDIATE = 1\n    TOGGLE = 2\n    RANGE = 3\n    LABEL = 4\n    TEMPERATURE = 5\n    HUMIDITY = 6\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "driver-khawasu",
    "package_url": "https://pypi.org/project/driver-khawasu/",
    "platform": null,
    "project_url": "https://pypi.org/project/driver-khawasu/",
    "project_urls": {
      "Bug Tracker": "https://github.com/khawasu/python_driver/issues",
      "Homepage": "https://github.com/khawasu/python_driver"
    },
    "release_url": "https://pypi.org/project/driver-khawasu/0.0.2/",
    "requires_dist": [
      "msgpack"
    ],
    "requires_python": ">=3.7",
    "summary": "Driver for Khawasu",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14916275,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48cdcc822525fa91dc108022f269b0dcbf18658994d4345912217dcfecb352b6",
          "md5": "d16385ae603d8bd536744bc4e959c6fb",
          "sha256": "5a5f512940932de6d381232849a44c9d2e06f1aa609415cd4c96a0a6cd6c9523"
        },
        "downloads": -1,
        "filename": "driver_khawasu-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d16385ae603d8bd536744bc4e959c6fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4374,
        "upload_time": "2022-06-30T23:48:44",
        "upload_time_iso_8601": "2022-06-30T23:48:44.081337Z",
        "url": "https://files.pythonhosted.org/packages/48/cd/cc822525fa91dc108022f269b0dcbf18658994d4345912217dcfecb352b6/driver_khawasu-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa0473d3777e35c1cc3dd75820c1e7b60a0eb87ae6f500b8b1b3f9d434caecc8",
          "md5": "7d078d6e5a720fd4c1d86343e5a6acfe",
          "sha256": "2e4cd7b5e796061f965dd84b2bce447e4943fd6f8450148fc1166b7aaf46ac3b"
        },
        "downloads": -1,
        "filename": "driver_khawasu-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7d078d6e5a720fd4c1d86343e5a6acfe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4017,
        "upload_time": "2022-06-30T23:48:45",
        "upload_time_iso_8601": "2022-06-30T23:48:45.793968Z",
        "url": "https://files.pythonhosted.org/packages/fa/04/73d3777e35c1cc3dd75820c1e7b60a0eb87ae6f500b8b1b3f9d434caecc8/driver_khawasu-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25a4349ee3cfff6870a2162b437eda37e68cd131375aeb586f8b77c09ef03de5",
          "md5": "f86d1584376e1ffb80801cf88a6898ee",
          "sha256": "65af8f1139d53aaf7e30252a4a2203c1333b40da5bdd05a65eab79cfc5490f20"
        },
        "downloads": -1,
        "filename": "driver_khawasu-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f86d1584376e1ffb80801cf88a6898ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7192,
        "upload_time": "2022-08-28T18:30:56",
        "upload_time_iso_8601": "2022-08-28T18:30:56.934566Z",
        "url": "https://files.pythonhosted.org/packages/25/a4/349ee3cfff6870a2162b437eda37e68cd131375aeb586f8b77c09ef03de5/driver_khawasu-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e276186ef09928ddc859d1c6d890dece182aa0b64a720ec06c3426f608d7a46b",
          "md5": "de6eed1efd095119fac490167a4448e9",
          "sha256": "1981639f3f021e6a25ca253242bb7172092ed0ec627c618cdf43bdadfbc42e6d"
        },
        "downloads": -1,
        "filename": "driver_khawasu-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "de6eed1efd095119fac490167a4448e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7176,
        "upload_time": "2022-08-28T18:30:58",
        "upload_time_iso_8601": "2022-08-28T18:30:58.393735Z",
        "url": "https://files.pythonhosted.org/packages/e2/76/186ef09928ddc859d1c6d890dece182aa0b64a720ec06c3426f608d7a46b/driver_khawasu-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25a4349ee3cfff6870a2162b437eda37e68cd131375aeb586f8b77c09ef03de5",
        "md5": "f86d1584376e1ffb80801cf88a6898ee",
        "sha256": "65af8f1139d53aaf7e30252a4a2203c1333b40da5bdd05a65eab79cfc5490f20"
      },
      "downloads": -1,
      "filename": "driver_khawasu-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f86d1584376e1ffb80801cf88a6898ee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7192,
      "upload_time": "2022-08-28T18:30:56",
      "upload_time_iso_8601": "2022-08-28T18:30:56.934566Z",
      "url": "https://files.pythonhosted.org/packages/25/a4/349ee3cfff6870a2162b437eda37e68cd131375aeb586f8b77c09ef03de5/driver_khawasu-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e276186ef09928ddc859d1c6d890dece182aa0b64a720ec06c3426f608d7a46b",
        "md5": "de6eed1efd095119fac490167a4448e9",
        "sha256": "1981639f3f021e6a25ca253242bb7172092ed0ec627c618cdf43bdadfbc42e6d"
      },
      "downloads": -1,
      "filename": "driver_khawasu-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "de6eed1efd095119fac490167a4448e9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7176,
      "upload_time": "2022-08-28T18:30:58",
      "upload_time_iso_8601": "2022-08-28T18:30:58.393735Z",
      "url": "https://files.pythonhosted.org/packages/e2/76/186ef09928ddc859d1c6d890dece182aa0b64a720ec06c3426f608d7a46b/driver_khawasu-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}