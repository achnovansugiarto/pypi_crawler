{
  "info": {
    "author": "Antoine and Lockas",
    "author_email": "antoine-spartan@hotmail.fr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Hello and thank you for downloading Stocks library.\nThis library is open source and allow users to get live and historical data.\n# Installation\n\nFor install it: \n\n\tpip install streamstockspy\n\nFor import it:\n\n\tfrom streamstockspy import stocks\n\n\n# How that function?\n\nThe code will just stream website as yahoofinance for get data in realtime. For historical part i used the library yfinance. \n\n## First step:\n\nThe first think is to define a Stocks object. For example: MyFirtsStocks = stocks.Stocks()\n\n## Second step:\n\nThe next step is to choose a company. For that, two options:\n\n1.First option:\n\n - Use internal data: in the library i give some companys inside the library. You can have an access to them using tab. \n\n2.Second option:\n\n - If you want to add an other company or if the default website have latences and you prefer use an other reference website for stream you can use the method add as follow: MyFirstsStocks.add(\"NameOfTheCompany\"*,\"UrlOfTheLiveWebSite\"*,\"UrlOfYahooPageOfCompanyForHistoric\",\"TheDivClass\",[FirstPosition,LastPosition]) where all argument with * are obligatory and other without * are obtional. \n\n- NameOfTheCompany is the name that you want to give to the company.\n- UrlOfTheLiveWebSite is the url of the website where appear the value. for example: https://finance.yahoo.com/quote/AAPL?p=AAPL\n- UrlOfYahooPageOfCompanyForHistoric is the Url of the yahoo finance page of your company. for apple it's still https://finance.yahoo.com/quote/AAPL?p=AAPL\n For TheDivClass, it's, when you go on an other website (here i will continue with yahoo example), if you use chrome (that function also with other navigators but i dont know the exact command), you can right click on the value and select inspect (ctrl+maj+i).  \n\t\t\t  Now you are a able to see the source code of the page center on the value of the company. You have to search a <div class => which englobe your <span ...= value> and you have to copy past the name of the div class and give it to TheDivClass.\n\t\t\t  let's see for our apple example on yahoo finance. (https://finance.yahoo.com/quote/AAPL?p=AAPL) So write click and inspect on the value that we are looking for.\n\t\t\t  search a div class which englobe the span value. we can for example choose <div class=\"My(6px) Pos(r) smartphone_Mt(6px)\" data-reactid=\"29>. so you have to set TheDivClass = \"My(6px) Pos(r) smartphone_Mt(6px)\"\n\t\t\t- position is a list. For some website they will not just have one value but maybe a string element like \"campany name - value\". Position allow you to select just value inside this string.\n\n\n**Let's see an example an example**  which take into account all parameters:  \t\n\n\n\tMyFirstStocks.add('Airbus','https://www.boursier.com/actions/cours/airbus-group-ex-eads-NL0000235190,FR.html','https://finance.yahoo.com/quote/AIR.PA/','col col-12', [-7,-1])\n\nFor understand what happen in this example, i invite you, in the first time to add it without the position list and to write:\n\n\tMyFirstStocks.Airbus['RealTime'].value(print_disable = False)\n\nYou will see what the code get from the website. After that readd Airbus and add the position list and do the test again. \n\n## Thrid step:\n\nPlay with the labrary! Now you have your company. You can choose the live in writing MyFirstStocks.Airbus['RealTime'] or historical data in writing MyFirstStocks.Airbus['Historic'] but of course if you just do that, you will see nothing. You should add a method depending to what you want to do. For example if you want the actual value of Airbus, you have to write: MyFirstStocks.Airbus['RealTime'].value()\n\n### All methods available:\t\n\n1.RealTime:\n\n - value() for get value.  \n - plot() for plot.\n - set_alert(Lower_limit,Higher_limit) for set limit and have a notification if one limit is break.\n - stop_alert() stop the alert routine.\n\n2.Historic:\n\n - ID() for get the ID of the company (Fore Apple its AAPL)\n - plot() for have an interactive plot on your browser.\n\n\nNote that all the library is do for work in background. by the way, that allow you to launch an alert or a live plot without block your python console. you still can use your python and let this code work in background. \n\nDo not hesitate if you find some issus. I will do my best for correct them. \n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/antoinech13/Stocks",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "streamstockspy",
    "package_url": "https://pypi.org/project/streamstockspy/",
    "platform": "",
    "project_url": "https://pypi.org/project/streamstockspy/",
    "project_urls": {
      "Homepage": "https://github.com/antoinech13/Stocks"
    },
    "release_url": "https://pypi.org/project/streamstockspy/0.0.4/",
    "requires_dist": [
      "numpy",
      "bs4",
      "requests",
      "plotly",
      "matplotlib",
      "win10toast",
      "yfinance"
    ],
    "requires_python": ">=3.6",
    "summary": "Library for Live stocks and historical data.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7532030,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cc97c0c521bb1486c3da609accebb208e623b29c9472b2555bfa89f0ddad462",
          "md5": "d97a1c0d37e958d14c14901e4f4650bf",
          "sha256": "b1eb4c7975937cf5f13d35c881bfd9408a5f2f76a1e789465daa0dc73a2cc308"
        },
        "downloads": -1,
        "filename": "streamstockspy-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d97a1c0d37e958d14c14901e4f4650bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6722,
        "upload_time": "2020-06-21T10:51:19",
        "upload_time_iso_8601": "2020-06-21T10:51:19.940481Z",
        "url": "https://files.pythonhosted.org/packages/4c/c9/7c0c521bb1486c3da609accebb208e623b29c9472b2555bfa89f0ddad462/streamstockspy-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c554ca2408028e61ab41e52a8b2c1a70db75d20ed485ad7bdb7769d053fe39aa",
          "md5": "5ab188bc0db5c13e0e9b2e913c1e64df",
          "sha256": "9c93e9dc5d1e05bb4c1a882771941c6e9ab0886e10dab2cab68fe38bf34aa51b"
        },
        "downloads": -1,
        "filename": "streamstockspy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5ab188bc0db5c13e0e9b2e913c1e64df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6303,
        "upload_time": "2020-06-21T10:51:22",
        "upload_time_iso_8601": "2020-06-21T10:51:22.063152Z",
        "url": "https://files.pythonhosted.org/packages/c5/54/ca2408028e61ab41e52a8b2c1a70db75d20ed485ad7bdb7769d053fe39aa/streamstockspy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1040ec7e88c0d4aeecff0186e4bb635c634f471f6230da924b053fbca664a4e1",
          "md5": "eaadbf0ef2b09084cb1beeeea87f3e69",
          "sha256": "8282bacf51d4799fcd06978500f5cf5c67fe790dfe828c3c5a3a4500f0e97c76"
        },
        "downloads": -1,
        "filename": "streamstockspy-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eaadbf0ef2b09084cb1beeeea87f3e69",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6940,
        "upload_time": "2020-06-21T22:10:35",
        "upload_time_iso_8601": "2020-06-21T22:10:35.010868Z",
        "url": "https://files.pythonhosted.org/packages/10/40/ec7e88c0d4aeecff0186e4bb635c634f471f6230da924b053fbca664a4e1/streamstockspy-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d65d9fddba059c3e5bd1cd313341a2bee4a97eaeee3051318cb7c78267a5d403",
          "md5": "1c66c014265b0593bbb5fd06125878f4",
          "sha256": "0f6cc919287e8954b83f1f30b06759ad2f189eece3244c24a39a994504be97bb"
        },
        "downloads": -1,
        "filename": "streamstockspy-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1c66c014265b0593bbb5fd06125878f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6477,
        "upload_time": "2020-06-21T22:10:36",
        "upload_time_iso_8601": "2020-06-21T22:10:36.220039Z",
        "url": "https://files.pythonhosted.org/packages/d6/5d/9fddba059c3e5bd1cd313341a2bee4a97eaeee3051318cb7c78267a5d403/streamstockspy-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7f36c581e9902ffb257db99d70cf106e635879868f23ba5d0a3ad666a5d8f50",
          "md5": "1fb0b58a05a5fd9b302afdcdd13748d9",
          "sha256": "c74e7409ebd8ee6f373d9eaa9884f8f719fa64f16736402f5e6916093892e0b7"
        },
        "downloads": -1,
        "filename": "streamstockspy-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1fb0b58a05a5fd9b302afdcdd13748d9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6981,
        "upload_time": "2020-06-22T07:32:29",
        "upload_time_iso_8601": "2020-06-22T07:32:29.374784Z",
        "url": "https://files.pythonhosted.org/packages/b7/f3/6c581e9902ffb257db99d70cf106e635879868f23ba5d0a3ad666a5d8f50/streamstockspy-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8454dc170710fd6a357e23563b7929250b965b5ddf061a1baf8d26e44ec49d71",
          "md5": "be3756dc9808404dc3bd5cee038046fd",
          "sha256": "c67b0ba6d7c2c0cba038e6f13be4a39654ae17306b388f4858a18b29f8ace21c"
        },
        "downloads": -1,
        "filename": "streamstockspy-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "be3756dc9808404dc3bd5cee038046fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6521,
        "upload_time": "2020-06-22T07:32:30",
        "upload_time_iso_8601": "2020-06-22T07:32:30.533716Z",
        "url": "https://files.pythonhosted.org/packages/84/54/dc170710fd6a357e23563b7929250b965b5ddf061a1baf8d26e44ec49d71/streamstockspy-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b7f36c581e9902ffb257db99d70cf106e635879868f23ba5d0a3ad666a5d8f50",
        "md5": "1fb0b58a05a5fd9b302afdcdd13748d9",
        "sha256": "c74e7409ebd8ee6f373d9eaa9884f8f719fa64f16736402f5e6916093892e0b7"
      },
      "downloads": -1,
      "filename": "streamstockspy-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1fb0b58a05a5fd9b302afdcdd13748d9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6981,
      "upload_time": "2020-06-22T07:32:29",
      "upload_time_iso_8601": "2020-06-22T07:32:29.374784Z",
      "url": "https://files.pythonhosted.org/packages/b7/f3/6c581e9902ffb257db99d70cf106e635879868f23ba5d0a3ad666a5d8f50/streamstockspy-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8454dc170710fd6a357e23563b7929250b965b5ddf061a1baf8d26e44ec49d71",
        "md5": "be3756dc9808404dc3bd5cee038046fd",
        "sha256": "c67b0ba6d7c2c0cba038e6f13be4a39654ae17306b388f4858a18b29f8ace21c"
      },
      "downloads": -1,
      "filename": "streamstockspy-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "be3756dc9808404dc3bd5cee038046fd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6521,
      "upload_time": "2020-06-22T07:32:30",
      "upload_time_iso_8601": "2020-06-22T07:32:30.533716Z",
      "url": "https://files.pythonhosted.org/packages/84/54/dc170710fd6a357e23563b7929250b965b5ddf061a1baf8d26e44ec49d71/streamstockspy-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}