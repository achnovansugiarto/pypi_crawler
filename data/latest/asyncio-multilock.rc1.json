{
  "info": {
    "author": "Connor Newton",
    "author_email": "connor@ifthenelse.io",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# asyncio-multilock\n\n[![asyncio-multilock](https://circleci.com/gh/phyrwork/asyncio-multilock/tree/main.svg?style=svg)](https://app.circleci.com/pipelines/github/phyrwork/asyncio-multilock?branch=main)\n\n`asyncio_multilock` provides `MultiLock`, an `asyncio` based lock with built-in\nshared/exclusive mode semantics.\n\n`MultiLock.locked` can be in one of three states:\n\n1. `None` - not locked;\n2. `MultiLockType.SHARED` - acquired one or more times in shared mode;\n3. `MultiLockType.EXCLUSIVE` - acquired one time in exclusive mode.\n\nWhen a lock is acquired, a `Hashable` handle is returned which uniquely identifies\nthe acquisition. This handle is used to release the acquisition.\n\n```python\nfrom asyncio import create_task, sleep\nfrom asyncio_multilock import MultiLock, MultiLockType\n\nlock = MultiLock()\nassert not lock.locked\n\nshared1 = await lock.acquire(MultiLockType.SHARED)\nassert lock.locked is MultiLockType.SHARED\n\nshared2 = await lock.acquire(MultiLockType.SHARED)\n\nasync def wait_release_shared(delay: float) -> None:\n    await sleep(delay)\n    lock.release(shared1)\n    lock.release(shared2)\ncreate_task(wait_release_shared(3))\n\n# Acquisition context manager.\nasync with lock.context(MultiLockType.EXCLUSIVE) as exclusive:\n    # Blocked for 3 seconds.\n    assert lock.locked is MultiLockType.EXCLUSIVE\n```\n\nThe lock can also be acquired synchronously, returning no handle if the acquisition\nfails.\n\n```python\nfrom asyncio_multilock import MultiLock, MultiLockType\n\nlock = MultiLock()\nassert not lock.locked\n\nshared = lock.acquire_nowait(MultiLockType.SHARED)\nassert shared\n\nexclusive = lock.acquire_nowait(MultiLockType.EXCLUSIVE)\nassert not exclusive\n\nassert lock.locked is MultiLockType.SHARED\n```\n\nThe lock can also be monitored for when a given lock type is next acquirable.\n\n```python\nfrom asyncio_multilock import MultiLock, MultiLockType\n\nlock = MultiLock()\n\nasync with lock.notify(MultiLockType.SHARED) as event:\n    await event.wait()\n    print(\"shared lock is acquirable\")\n    event.clear()\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asyncio-multilock",
    "package_url": "https://pypi.org/project/asyncio-multilock/",
    "platform": null,
    "project_url": "https://pypi.org/project/asyncio-multilock/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/asyncio-multilock/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "asyncio shared/exclusive mode lock",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15660002,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b20bef63b320cdf7475c9494e6d340ca620360ec4325840034e1ca31fc1fd62",
          "md5": "95b5984fcf007474b846e7d105fd2c7d",
          "sha256": "45589a8f93ba2b04a0c5f2ddfd0f00cbdc6df0d47adfa520a17db6e2503eba94"
        },
        "downloads": -1,
        "filename": "asyncio_multilock-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95b5984fcf007474b846e7d105fd2c7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 3462,
        "upload_time": "2022-11-04T21:15:58",
        "upload_time_iso_8601": "2022-11-04T21:15:58.412126Z",
        "url": "https://files.pythonhosted.org/packages/8b/20/bef63b320cdf7475c9494e6d340ca620360ec4325840034e1ca31fc1fd62/asyncio_multilock-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3478828178680362baf0774362747ef1d6d6c785e0899ebe3cac21316c25fec4",
          "md5": "68494479e36d13531f8b94178436e1af",
          "sha256": "562b2dcab9e6fa22ff8bf472fc1dbfffb306d600f0e9543836cce20b9287e013"
        },
        "downloads": -1,
        "filename": "asyncio_multilock-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "68494479e36d13531f8b94178436e1af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 3417,
        "upload_time": "2022-11-04T21:15:59",
        "upload_time_iso_8601": "2022-11-04T21:15:59.552663Z",
        "url": "https://files.pythonhosted.org/packages/34/78/828178680362baf0774362747ef1d6d6c785e0899ebe3cac21316c25fec4/asyncio_multilock-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b20bef63b320cdf7475c9494e6d340ca620360ec4325840034e1ca31fc1fd62",
        "md5": "95b5984fcf007474b846e7d105fd2c7d",
        "sha256": "45589a8f93ba2b04a0c5f2ddfd0f00cbdc6df0d47adfa520a17db6e2503eba94"
      },
      "downloads": -1,
      "filename": "asyncio_multilock-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "95b5984fcf007474b846e7d105fd2c7d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 3462,
      "upload_time": "2022-11-04T21:15:58",
      "upload_time_iso_8601": "2022-11-04T21:15:58.412126Z",
      "url": "https://files.pythonhosted.org/packages/8b/20/bef63b320cdf7475c9494e6d340ca620360ec4325840034e1ca31fc1fd62/asyncio_multilock-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3478828178680362baf0774362747ef1d6d6c785e0899ebe3cac21316c25fec4",
        "md5": "68494479e36d13531f8b94178436e1af",
        "sha256": "562b2dcab9e6fa22ff8bf472fc1dbfffb306d600f0e9543836cce20b9287e013"
      },
      "downloads": -1,
      "filename": "asyncio_multilock-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "68494479e36d13531f8b94178436e1af",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 3417,
      "upload_time": "2022-11-04T21:15:59",
      "upload_time_iso_8601": "2022-11-04T21:15:59.552663Z",
      "url": "https://files.pythonhosted.org/packages/34/78/828178680362baf0774362747ef1d6d6c785e0899ebe3cac21316c25fec4/asyncio_multilock-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}