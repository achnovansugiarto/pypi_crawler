{
  "info": {
    "author": "Vitaly Bogomolov",
    "author_email": "mail@vitaly-bogomolov.ru",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PipelineCsv library\r\n[![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/vb64/pipeline.csv/pep257.yml?label=Pep257&style=plastic&branch=main)](https://github.com/vb64/pipeline.csv/actions?query=workflow%3Apep257)\r\n[![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/vb64/pipeline.csv/py3.yml?label=Python%203.7-3.10&style=plastic&branch=main)](https://github.com/vb64/pipeline.csv/actions?query=workflow%3Apy3)\r\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/031838411159440885e8c4a28f233c4e)](https://www.codacy.com/gh/vb64/pipeline.csv/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=vb64/pipeline.csv&amp;utm_campaign=Badge_Grade)\r\n[![Codacy Badge](https://app.codacy.com/project/badge/Coverage/031838411159440885e8c4a28f233c4e)](https://www.codacy.com/gh/vb64/pipeline.csv/dashboard?utm_source=github.com&utm_medium=referral&utm_content=vb64/pipeline.csv&utm_campaign=Badge_Coverage)\r\n\r\n[In Russian](READMEru.md)\r\n\r\nThe free, open source PipelineCsv library is designed to work with the results of analysis of in-line flaw detection data in the form of a CSV file.\r\n\r\nThe library provides a set of high-level operations with CSV file.\r\n\r\nData can be\r\n\r\n-   mirrored\r\n-   glued together from several CSV files\r\n-   stretched/compressed along the distance according to a given set of intermediate points\r\n-   interpreted as an iterable sequence of pipes with geodata\r\n\r\n## Installation\r\n\r\n```bash\r\npip install pipeline-csv\r\n```\r\n\r\n## Usage\r\n\r\nIt is necessary to define the sets of defects and markers used in your project.\r\nTo do this, you need to define your class for CSV row by deriving it from the `pipeline_csv.csvfile.row.Row` class and\r\noverride two methods of this class: `defekts_dict` and `lineobj_dict`.\r\n\r\n```python\r\nfrom pipeline_csv.csvfile.row import Row\r\n\r\nclass TypeMarker:\r\n    VALVE = 0\r\n    CASE_START = 1\r\n    CASE_END = 2\r\n\r\nLINEOBJ = {\r\n  TypeMarker.VALVE: \"Valve\",\r\n  TypeMarker.CASE_START: \"Casing start\",\r\n  TypeMarker.CASE_END: \"Casing end\",\r\n}\r\n\r\nclass TypeDefekt:\r\n    CORROZ = 0\r\n    DENT = 1\r\n\r\nDEFEKTS = {\r\n  TypeDefekt.CORROZ: \"Corrosion\",\r\n  TypeDefekt.DENT: \"Dent\",\r\n}\r\n\r\nclass MyRow(Row):\r\n\r\n    @staticmethod\r\n    def defekts_dict():\r\n        return DEFEKTS\r\n\r\n    @staticmethod\r\n    def lineobj_dict():\r\n        return LINEOBJ\r\n```\r\n\r\nFor the data mirroring operation, you need to override the `markers_reverse` method, which returns a dictionary that specifies the rules for replacing when mirroring.\r\n\r\n```python\r\nREVERSE_MARKER = {\r\n  TypeMarker.CASE_START: TypeMarker.CASE_END,\r\n  TypeMarker.CASE_END: TypeMarker.CASE_START,\r\n}\r\n\r\nclass MyRow(Row):\r\n\r\n    @staticmethod\r\n    def markers_reverse():\r\n        return REVERSE_MARKER\r\n```\r\n\r\nFurther, the MyRow class can be used in operations with data of CSV files.\r\n\r\n### Creating a CSV file\r\n\r\nConstruct new csv file from scratch.\r\n\r\n```python\r\nfrom pipeline_csv.csvfile import File\r\n\r\ncsv_file = File()\r\n```\r\n\r\nDefine tube at distance 1.0 m length = 11.0 m, thick = 10.5 mm with one seam with orientation 3 hour 00 minutes.\r\n\r\n```python\r\nfrom pipeline_csv import TypeHorWeld\r\nfrom pipeline_csv.orientation import Orientation\r\n\r\ncsv_file.data = [\r\n  MyRow.as_weld(1000),\r\n  MyRow.as_thick(1010, 105),\r\n  MyRow.as_seam(1020, TypeHorWeld.HORIZONTAL, Orientation(3, 0), None),\r\n  MyRow.as_weld(12000),\r\n]\r\n```\r\n\r\nAdd outside defect to tube at distance 5.0 m from left tube weld,\r\nlength = 20 mm, width = 10 mm, depth = 30% tube wall thickness,\r\norientation from 4 hours 00 minutes to 5 hours 00 minutes,\r\nmaximum depth point at distance 5.01 m from left tube weld, orientation 4 hours 30 minutes\r\nwith comment 'metal loss'.\r\n\r\n```python\r\nfrom pipeline_csv import DefektSide\r\n\r\ncsv_file.data.append(MyRow.as_defekt(\r\n  6000,\r\n  TypeDefekt.CORROZ,\r\n  DefektSide.OUTSIDE\r\n  '20', '10', '30',\r\n  Orientation(4, 0), Orientation(5, 0),\r\n  6010, Orientation(4, 30),\r\n  'metal loss'\r\n))\r\n```\r\n\r\nSave csv to file.\r\n\r\n```python\r\nimport os\r\n\r\ncsv_file.to_file('example.csv')\r\nassert os.path.getsize('example.csv') > 0\r\n```\r\n\r\n### Data mirroring\r\n\r\nCreate copy from saved file.\r\n\r\n```python\r\ncsv_copy = File.from_file('example.csv')\r\n```\r\n\r\nCheck distance of the last object in copy and defect orientation.\r\n\r\n```python\r\nassert csv_copy.total_length == 12000\r\nassert len(csv_copy.data) == 5\r\n\r\ndefect_row = csv_copy.data[3]\r\nassert defect_row.is_defect\r\nassert defect_row.orient_td == '4,00'\r\nassert defect_row.orient_bd == '5,00'\r\n```\r\n\r\nReverse copy.\r\n\r\n```python\r\ncsv_copy.reverse()\r\n```\r\n\r\nRelative position of defekt must change and defect orientation must be mirrored.\r\n\r\n```python\r\ndefect_row = csv_copy.data[2]\r\nassert defect_row.is_defect\r\n\r\nassert defect_row.orient_td == '7,00'\r\nassert defect_row.orient_bd == '8,00'\r\n```\r\n\r\nSave reversed copy to file.\r\n\r\n```python\r\ncsv_file.to_file('reversed.csv')\r\nassert os.path.getsize('reversed.csv') > 0\r\n```\r\n\r\n### Docking new data and compression/stretching\r\n\r\nAppend to initial CSV empty pipe with length 10.0 m and reversed copy from the file.\r\n\r\n```python\r\ncsv_file.join([10000, 'reversed.csv'])\r\nassert csv_file.total_length == 28000\r\nassert len(csv_file.data) == 11\r\n```\r\n\r\nCompress distances and length of all objects in half.\r\n\r\n```python\r\ncsv_file.dist_modify(\r\n  # table of corrections\r\n  # each node define as pair 'existing distance', 'new distance'\r\n  [[0, 0],\r\n  [28000, 14000],\r\n])\r\nassert csv_file.total_length == 14000\r\n```\r\n\r\nSave file with compress distances.\r\n\r\n```python\r\ncsv_file.to_file('transformed.csv')\r\nassert os.path.getsize('transformed.csv') > 0\r\n```\r\n\r\n### Pipe sequence\r\n\r\nIterate by pipes.\r\n\r\n```python\r\ncsv_trans = File.from_file('transformed.csv')\r\nwarnings = []\r\ncurrent_dist = 0\r\nfor i in csv_trans.get_tubes(warnings):\r\n    assert i.dist >= current_dist\r\n    current_dist = i.dist\r\n    tube = i\r\n\r\nassert not warnings\r\n```\r\n\r\nSet geodata for tube\r\n\r\n```python\r\nassert tube.latitude == ''\r\nassert tube.longtitude == ''\r\nassert tube.altitude == ''\r\n\r\ntube.set_geo(10, 11, 12)\r\n\r\nassert tube.latitude == 10\r\nassert tube.longtitude == 11\r\nassert tube.altitude == 12\r\n\r\ncsv_trans.to_file('geo.csv')\r\nassert os.path.getsize('geo.csv') > 0\r\n```\r\n\r\nLoad from saved file and check geodata from last pipe.\r\n\r\n```python\r\ncsv_geo = File.from_file('geo.csv')\r\nlast_tube = list(csv_geo.get_tubes(warnings))[-1]\r\n\r\nassert last_tube.latitude == '10'\r\nassert last_tube.longtitude == '11'\r\nassert last_tube.altitude == '12'\r\n```\r\n\r\n## Development\r\n\r\n```\r\n$ git clone git@github.com:vb64/pipeline.csv.git\r\n$ cd pipeline.csv\r\n$ make setup PYTHON_BIN=/path/to/python3\r\n$ make tests\r\n```\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vb64/pipeline.csv",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pipeline-csv",
    "package_url": "https://pypi.org/project/pipeline-csv/",
    "platform": null,
    "project_url": "https://pypi.org/project/pipeline-csv/",
    "project_urls": {
      "Bug Tracker": "https://github.com/vb64/pipeline.csv/issues",
      "Homepage": "https://github.com/vb64/pipeline.csv"
    },
    "release_url": "https://pypi.org/project/pipeline-csv/1.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Pipeline inline inspection data as CSV file.",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17494561,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "969a51d9b043d75f6bd3c925dd193138c3eb120ce20fed852197a6c542c130a9",
          "md5": "4f187ddc49df3949c88ad8c86c9eb7fe",
          "sha256": "1bfffdac2caf6ce8f5b14a41d627fed38d67c26df209a83f5765cab158762129"
        },
        "downloads": -1,
        "filename": "pipeline_csv-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f187ddc49df3949c88ad8c86c9eb7fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15014,
        "upload_time": "2023-03-14T11:51:22",
        "upload_time_iso_8601": "2023-03-14T11:51:22.778385Z",
        "url": "https://files.pythonhosted.org/packages/96/9a/51d9b043d75f6bd3c925dd193138c3eb120ce20fed852197a6c542c130a9/pipeline_csv-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c5ac993c578ba7f934e4d02e08424895afb4934637cfafd1999e51522179946",
          "md5": "a73d2a4d0a01a5de02961982ba23e34d",
          "sha256": "3117dbe7d484d1de7f0e8c6e2e1cab27021e666d933305515bf5ce9ca633f63d"
        },
        "downloads": -1,
        "filename": "pipeline_csv-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a73d2a4d0a01a5de02961982ba23e34d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13336,
        "upload_time": "2023-03-14T11:51:24",
        "upload_time_iso_8601": "2023-03-14T11:51:24.499108Z",
        "url": "https://files.pythonhosted.org/packages/4c/5a/c993c578ba7f934e4d02e08424895afb4934637cfafd1999e51522179946/pipeline_csv-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "388330c616c5c116d791b5673e958c7316ba29053b988f95be200149b7406723",
          "md5": "2239f7a3647e59e6f9e920543b6b4322",
          "sha256": "f345c724c17ce0b64b801de43d0dd8d151a7e8a7e5b8023b726ce5bf28192d14"
        },
        "downloads": -1,
        "filename": "pipeline_csv-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2239f7a3647e59e6f9e920543b6b4322",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17350,
        "upload_time": "2023-03-15T07:40:03",
        "upload_time_iso_8601": "2023-03-15T07:40:03.535873Z",
        "url": "https://files.pythonhosted.org/packages/38/83/30c616c5c116d791b5673e958c7316ba29053b988f95be200149b7406723/pipeline_csv-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2ee62273e44cc730d741ece11b19ead3206a89e16169a0873322d3ba132eb5d",
          "md5": "b0245f506769765e094b408f0ea28d71",
          "sha256": "e706fed01d9b8c1ebbeae09e26697ebd76d3321ac7ce5b6682012965bfb7c84c"
        },
        "downloads": -1,
        "filename": "pipeline_csv-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b0245f506769765e094b408f0ea28d71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18463,
        "upload_time": "2023-03-15T07:40:05",
        "upload_time_iso_8601": "2023-03-15T07:40:05.780613Z",
        "url": "https://files.pythonhosted.org/packages/e2/ee/62273e44cc730d741ece11b19ead3206a89e16169a0873322d3ba132eb5d/pipeline_csv-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63f7c74d9334c011988309fb87fbab13dde7e503b9fa0fc5f7308b10071311df",
          "md5": "3d10cd3824d788ef83a2d64c2052610a",
          "sha256": "68fd4f6c2093050bd805ac59dc0f99f83896ba4061613dad87902bd4293072a5"
        },
        "downloads": -1,
        "filename": "pipeline_csv-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d10cd3824d788ef83a2d64c2052610a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17397,
        "upload_time": "2023-03-16T14:37:24",
        "upload_time_iso_8601": "2023-03-16T14:37:24.405598Z",
        "url": "https://files.pythonhosted.org/packages/63/f7/c74d9334c011988309fb87fbab13dde7e503b9fa0fc5f7308b10071311df/pipeline_csv-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b392d542c6c1cf8db268272d1829bbf5af5adcbb3892b7055079a60440dcc10",
          "md5": "ae89ef060e3e5a3456ce403257c4d3a5",
          "sha256": "f2f05d2b0ffa90bd6b4e2397ec214cd36da2e302891584530faacb29e5c3b6bf"
        },
        "downloads": -1,
        "filename": "pipeline_csv-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ae89ef060e3e5a3456ce403257c4d3a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18507,
        "upload_time": "2023-03-16T14:37:26",
        "upload_time_iso_8601": "2023-03-16T14:37:26.031906Z",
        "url": "https://files.pythonhosted.org/packages/5b/39/2d542c6c1cf8db268272d1829bbf5af5adcbb3892b7055079a60440dcc10/pipeline_csv-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "913c841bd42ddc850acea1446291c3a0de422655bfaf4d1081e648aecb963b8e",
          "md5": "81d529f82cd2376d6fce12d8b6ad9028",
          "sha256": "b5cde957b053af1866ed034d8b7e163b7bfc9dd88518e449f421fc404ae15f0a"
        },
        "downloads": -1,
        "filename": "pipeline_csv-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81d529f82cd2376d6fce12d8b6ad9028",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18098,
        "upload_time": "2023-03-29T13:56:19",
        "upload_time_iso_8601": "2023-03-29T13:56:19.414609Z",
        "url": "https://files.pythonhosted.org/packages/91/3c/841bd42ddc850acea1446291c3a0de422655bfaf4d1081e648aecb963b8e/pipeline_csv-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9961caa9a8b27ce47b9e76ae9856346019e0732ccba1047e015d2373006b56a",
          "md5": "8e2bffe94d749108c4172a8244f37619",
          "sha256": "2a34eced23adbafe52221048fe1c95e3b691ee1c8aa6516317d4602203de0700"
        },
        "downloads": -1,
        "filename": "pipeline_csv-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8e2bffe94d749108c4172a8244f37619",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19179,
        "upload_time": "2023-03-29T13:56:21",
        "upload_time_iso_8601": "2023-03-29T13:56:21.574567Z",
        "url": "https://files.pythonhosted.org/packages/a9/96/1caa9a8b27ce47b9e76ae9856346019e0732ccba1047e015d2373006b56a/pipeline_csv-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "913c841bd42ddc850acea1446291c3a0de422655bfaf4d1081e648aecb963b8e",
        "md5": "81d529f82cd2376d6fce12d8b6ad9028",
        "sha256": "b5cde957b053af1866ed034d8b7e163b7bfc9dd88518e449f421fc404ae15f0a"
      },
      "downloads": -1,
      "filename": "pipeline_csv-1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "81d529f82cd2376d6fce12d8b6ad9028",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18098,
      "upload_time": "2023-03-29T13:56:19",
      "upload_time_iso_8601": "2023-03-29T13:56:19.414609Z",
      "url": "https://files.pythonhosted.org/packages/91/3c/841bd42ddc850acea1446291c3a0de422655bfaf4d1081e648aecb963b8e/pipeline_csv-1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9961caa9a8b27ce47b9e76ae9856346019e0732ccba1047e015d2373006b56a",
        "md5": "8e2bffe94d749108c4172a8244f37619",
        "sha256": "2a34eced23adbafe52221048fe1c95e3b691ee1c8aa6516317d4602203de0700"
      },
      "downloads": -1,
      "filename": "pipeline_csv-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8e2bffe94d749108c4172a8244f37619",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19179,
      "upload_time": "2023-03-29T13:56:21",
      "upload_time_iso_8601": "2023-03-29T13:56:21.574567Z",
      "url": "https://files.pythonhosted.org/packages/a9/96/1caa9a8b27ce47b9e76ae9856346019e0732ccba1047e015d2373006b56a/pipeline_csv-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}