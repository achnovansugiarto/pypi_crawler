{
  "info": {
    "author": "TestProject",
    "author_email": "contact@testproject.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# TestProject Library for the Robot Framework\n\n## What is the Robot framework\n\nRobot Framework is a generic open source automation framework. It can be used for test automation and robotic process automation (RPA).\n\nRobot Framework has easy syntax, utilizing human-readable keywords.\\\nIts capabilities can be extended by libraries implemented with Python or Java.\\\nThe framework has a rich ecosystem around it, consisting of libraries and tools that are developed as separate projects.\n\n## Why use the TestProject Library For Robot\n\nTestProject offers a set of tools for creating end-to-end Tests.\n\n1. TestProject Agent handles the deployment and configuration of Selenium/Appium.\n1. Keeps you up to date with the latest stable versions of Selenium/Appium drivers.\n1. Cloud team collaboration and automatic test reports (HTML/PDF/JSON).\n1. Scriptless test recorder allows creating and running tests without a single line of code.\n1. Code extract feature, which allows you to generate Selenium/Appium code to from your scripless tests.\n\nBy integrating this library with your Robot tests, you can enjoy all these advantages\\\nas well as fully automated reports (with screenshots) hosted free on the TestProject platform.\n\nCombining the TestProject Library with Robot is as simple as using the Selenium Library.\\\nIt's implementing the same syntax, replacing only the \"Open Browser\" keyword.\n\n## Prerequisites\n\nBefore starting, please make sure to complete the following:\n\n1. Login to or create a new (**FREE**) TestProject Account: [https://testproject.io/](https://testproject.io/)\n2. Download and Install the TestProject Agent.\n3. Register the Agent, and get your developer token from here: [https://app.testproject.io/#/integrations/sdk](https://app.testproject.io/#/integrations/sdk)\n4. Install the Robot Framework: `pip3 install robotframework`\n    > Or following the installation instructions [here](https://github.com/robotframework/robotframework/blob/master/INSTALL.rst).\n5. Install the TestProject Library for Robot: `pip3 install testproject-robot-library`\n\n## Create a new test using the TestProject Library for Robot\n\nNow we will create a simple Robot test with two different \"Login\" flows.\\\nThe first will be a valid flow and the second will use an incorrect password.\n\nFirst we need to create a new Robot test file. Let's call this file `MyRobotTest.robot`\\\nSince we're going to use the TestProject Library for Robot, we must declare it inside the test:\n\n```python\n*** Settings ***\nLibrary TestProjectLibrary\n```\n\nOnce the TestProject Library for Robot is declared, we can use its full functionality.\n\nNext we create a `Suite Setup` section for initializing the TestProject Driver:\n\n```python\nSuite Setup InitTestProject\n\n*** Keywords ***\nInitTestProject\n    Init Testproject Driver     chrome      job_name=TestProjectRobot\n    Open Browser https://example.testproject.io/web/\n```\n\nIn this snippet, we declare a custom Keyword named `InitTestProject` which creates a new session\\\nwith the TestProject Agent, requesting to open a Selenium session on a Chrome browser.\n> Under the `*** Keywords ***` section we can put all of our **custom keywords**.\n\n**Init TestProject Driver** is the most important part of the TestProject Library for Robot.\\\nIt communicates with the TestProject Agent and passed any Desired capabilities, browser type, timeouts and additional data that is required by the TestProject Agent.\n\n> This method replaces the `Create Webdriver` and `Open Browser` keywords, and is the only difference between the SeleniumLibrary and the TestProject Library for Robot.\n\nSince the TestProject Library for Robot was created as a wrapper for the SeleniumLibrary, you can simply\\\ntake your existing Robot tests, replace the import of the `SeleniumLibrary` with `TestProjectLibrary`, \\\ncall the `Init TestProject Driver` keyword and you are good to go!\n\nThe follow Selenium test:\n```python\nLibrary SeleniumLibrary\n\nOpen Browser browser=Chrome url=https://example.testproject.io/web/\nCreate Webdriver driver_name=Chrome\n```\n\nChanges to:\n```python\nLibrary TestProjectLibrary\n\nInit Testproject Driver browser=Chrome url=https://example.testproject.io/web/\n```\n\n**That's it!**\n\n## New Test Suite Using the TestProject Library for Robot\n\nIn this section, we will create a simple test suite with 4 tests:\n1. Login with an incorrect password\n1. Login with a correct password\n1. Filling in a form with some details\n1. Submitting the form\n\nThe suite is built to run on TestProject's example website: https://example.testproject.io/web\n\nHere is the complete Robot test:\n```python\n*** Settings ***\nLibrary     \tTestProjectLibrary\nSuite Setup     Init Session\nSuite Teardown  Close Session\n\n*** Test Cases ***\nSet Session\n    ${previous kw}=     Register Keyword To Run On Failure      None\nLogin With Incorrect Password\n    Base Login          ${INCORRECT_PASSWORD}\nLogin With Correct Password\n    Base Login          ${CORRECT_PASSWORD}\nFill Form\n    Select From List By Label   css:#country    Australia\n    FOR     ${input}    IN      @{INPUT_ELEMENTS}\n        Input Text      ${input}    ${INPUT_VALUES}[${INDEX}]\n        ${INDEX}=       Evaluate    ${INDEX} + 1\n    END\n    Static Sleep\nSubmit Form\n    Click Button    css:#save\n    Click Button    css:#logout\n\n*** Keywords ***\nInit Session\n    ${options}=                 Headless Chrome\n    Init Testproject Driver     chrome      job_name=TestProject Robot  url=https://example.testproject.io/web/     desired_capabilities=${options}\n\nClose Session\n    Close All Browsers\n\nEquals\n    [Arguments]                     ${x}    ${y}\n    Should Be Equal As Strings      ${x}    ${y}\n\nClear Fields\n    Clear Element Text     css:#name\n    Clear Element Text     css:#password\n\nHeadless Chrome\n    ${chrome_options} =     Evaluate    sys.modules['selenium.webdriver'].ChromeOptions()    sys, selenium.webdriver\n    Call Method    ${chrome_options}    add_argument    headless\n    Call Method    ${chrome_options}    add_argument    disable-gpu\n    [Return]       ${chrome_options}\n\nBase Login\n    [Arguments]               ${input_password}\n    Press Keys                css:#name                       ${EMAIL}\n    Input Text                css:#password                   ${input_password}\n    ${password}=              Get Value                       css:#password\n    ${result}=                Run Keyword And Return Status   Equals    ${password}    ${CORRECT_PASSWORD}\n    Run Keyword If            \"${result}\" == \"True\"           Run Keywords True\n    ...     ELSE              Clear Fields\n\nRun Keywords True\n    Click Button      css:#login\n    Sleep             3s\n\nStatic Sleep\n    Sleep             3s\n\n\n*** Variables ***\n${EMAIL}                test@testproject.io\n${INCORRECT_PASSWORD}   67890\n${CORRECT_PASSWORD}     12345\n${INDEX}                0\n${CAPABILITIES}         ${EMPTY.join(${_tmp})}\n@{INPUT_ELEMENTS}       css:#address    css:#email    css:#phone\n@{INPUT_VALUES}         Melbourne       test@test.io  7521234545\n@{_tmp}\n    ...  browserName: chrome,\n    ...  version: 86,\n    ...  name: RobotFramework Test\n```\n\n##  Understanding the Test Suite Structure\n\nIn the `*** Test Cases ***` section we declare our test cases and their steps/keywords.\n``` python\n*** Test Cases ***\nSet Session\n    ${previous kw}=     Register Keyword To Run On Failure      None\nLogin With Incorrect Password\n    Base Login          ${INCORRECT_PASSWORD}\nLogin With Correct Password\n    Base Login          ${CORRECT_PASSWORD}\n```\n\nThe first command sets the keyword which should run on Failure to `None`. This means that no keyword will be executed if a step fails.\n> It can be set to any keyword of your choice, by default it is set to take a screenshot.\n\nNext we declare two test cases with the names `Login With Incorrect Password` and `Login With Correct Password`.\\\nBoth tests have a single Custom Keyword step called `Base Login` which takes a password as an argument, attempts to login and validates the result.\n\nThe `Base Login` declarated in the `*** Keywords ***` section:\n```python\nBase Login\n    [Arguments]               ${input_password}\n    Press Keys                css:#name                       ${EMAIL}\n    Input Text                css:#password                   ${input_password}\n    ${password}=              Get Value                       css:#password\n    ${result}=                Run Keyword And Return Status   Equals    ${password}    ${CORRECT_PASSWORD}\n    Run Keyword If            \"${result}\" == \"True\"           Run Keywords True\n    ...     ELSE              Clear Fields\n```\n\nIf the login fails, we execute another custom Keyword, `Clear Fields`, which is also defined in the `*** Keywords ***` section:\n```python\nClear Fields\n    Clear Element Text     css:#name\n    Clear Element Text     css:#password\n```\n\nIf the password was correct, we run the `Run Keywords True` keyword to finilize the login process:\n```python\nRun Keywords True\n    Click Button css:#login\n    Sleep 3s\n```\n\nNext, we fill in the form fields, click on Submit and Logout:\n```python\nFill Form\n    Select From List By Label   css:#country    Australia\n    FOR     ${input}    IN      @{INPUT_ELEMENTS}\n        Input Text      ${input}    ${INPUT_VALUES}[${INDEX}]\n        ${INDEX}=       Evaluate    ${INDEX} + 1\n    END\n    Static Sleep\n\nSubmit Form\n    Click Button    css:#save\n    Click Button    css:#logout\n```\n>This also shows how to implement a simple for loop with an Index increment in Robot framework.\n\n## Init TestProject Driver\n\nThis is the entrypoint of the TestProject Library for Robot.\\\nThis method instructs the TestProject Agent on how to start and execute our test.\n> It's possible run Regular or Headless browsers, for example, using the Desired Capabilities.\n\nThe method is defined with the following arguments:\n```python\n@keyword\n    def init_testproject_driver(\n            self,\n            browser: str = \"firefox\",\n            url: Optional[str] = None,\n            project_name: Optional[str] = \"TestProject Robot\",\n            job_name: Optional[str] = \"Robot Job\",\n            desired_capabilities: Union[str, dict, None] = None,\n            disable_reports: Optional[bool] = False,\n            dev_token: Optional[str] = os.environ[\"TP_DEV_TOKEN\"],\n):\n```\n\n1. \t`browser`: The name of the browser for the session.\n1.\t`url`: The initial URL to navigate to.\n1.\t`project_name`: The project name where the reports of the Jobs will show.\n1.\t`job_name`: The job name which all the tests will appear under.\n1.\t`desired_capabilities`: The capabilities to supply to the driver, for example to run on Headless chrome you can do the following:\\\n    > Additional information about supported capabilities can be found [Here](https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities).\n1. `disable_reports` - If set to True, no reports will be generated and sent to the TestProject platform.\n1. `dev_token` - The development token, which by default is read from the environment variable `TP_DEV_TOKEN`.\\\nyou can get your token at: https://app.testproject.io/#/integrations/sdk.\n\n>You can set the driver to be a generic driver as well by passing \"generic\" in the browser argument.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://testproject.io/selenium-appium-powered-sdk/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "testproject-robot-library",
    "package_url": "https://pypi.org/project/testproject-robot-library/",
    "platform": "",
    "project_url": "https://pypi.org/project/testproject-robot-library/",
    "project_urls": {
      "Homepage": "https://testproject.io/selenium-appium-powered-sdk/"
    },
    "release_url": "https://pypi.org/project/testproject-robot-library/0.65.2/",
    "requires_dist": [
      "robotframework-seleniumlibrary (>=4.5.0)",
      "testproject-python-sdk (>=0.63.19)",
      "importlib-metadata (>=1.7.0)",
      "packaging (>=20.4)"
    ],
    "requires_python": ">=3.6",
    "summary": "TestProject.io Library for the Robot Framrwork",
    "version": "0.65.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10036758,
  "releases": {
    "0.65.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e579bf3a1b8646f0ad212cf45caf54e24853d6d0843d187f74174831deb2a8c2",
          "md5": "fb1158714a56260e0b86b10797df1646",
          "sha256": "acc9428021afb26693828705634d0a17f0cf64ffed096f7d4622e20ddc3d57ba"
        },
        "downloads": -1,
        "filename": "testproject_robot_library-0.65.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb1158714a56260e0b86b10797df1646",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18002,
        "upload_time": "2020-11-24T14:18:35",
        "upload_time_iso_8601": "2020-11-24T14:18:35.788850Z",
        "url": "https://files.pythonhosted.org/packages/e5/79/bf3a1b8646f0ad212cf45caf54e24853d6d0843d187f74174831deb2a8c2/testproject_robot_library-0.65.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ff18f676e6f9b0293a8cca4100841850708ac62b8874b96197078900d684635",
          "md5": "5d14d9ec305ad3c60a571900ea3d3107",
          "sha256": "e756bfe1a69f941355d5affaabbe999c6226c528b6985f910509291109ae06fa"
        },
        "downloads": -1,
        "filename": "testproject-robot-library-0.65.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5d14d9ec305ad3c60a571900ea3d3107",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17561,
        "upload_time": "2020-11-24T14:18:36",
        "upload_time_iso_8601": "2020-11-24T14:18:36.884753Z",
        "url": "https://files.pythonhosted.org/packages/3f/f1/8f676e6f9b0293a8cca4100841850708ac62b8874b96197078900d684635/testproject-robot-library-0.65.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.65.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73e615deeb74a2e3a5aee27ffa35545050a931266149e69d1e429030e47778bf",
          "md5": "d5d020349389f77b82e3aaece3a8b086",
          "sha256": "0aa1162cf5c9505e37c2e678a9214bf0a8d8472bbe64883a45315ecad98366af"
        },
        "downloads": -1,
        "filename": "testproject_robot_library-0.65.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5d020349389f77b82e3aaece3a8b086",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18252,
        "upload_time": "2020-12-19T11:18:31",
        "upload_time_iso_8601": "2020-12-19T11:18:31.829771Z",
        "url": "https://files.pythonhosted.org/packages/73/e6/15deeb74a2e3a5aee27ffa35545050a931266149e69d1e429030e47778bf/testproject_robot_library-0.65.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fddd51c0c6897a2b935bf517a1fce9a8171e2279cb176e4eae859bc16b8f96e",
          "md5": "981a5b48410fee4c31cc6005c938e6cd",
          "sha256": "f556bf3e11b05df5a5bbe9a6a973c3c457da8b9aaa9635d8e6ef59f0e2972b9c"
        },
        "downloads": -1,
        "filename": "testproject-robot-library-0.65.1.tar.gz",
        "has_sig": false,
        "md5_digest": "981a5b48410fee4c31cc6005c938e6cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17912,
        "upload_time": "2020-12-19T11:18:32",
        "upload_time_iso_8601": "2020-12-19T11:18:32.988709Z",
        "url": "https://files.pythonhosted.org/packages/3f/dd/d51c0c6897a2b935bf517a1fce9a8171e2279cb176e4eae859bc16b8f96e/testproject-robot-library-0.65.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.65.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "192c64d77af1f862b2ceefda9f48616943cc960f7f8e5efb6f0c7a157b2fcf31",
          "md5": "d28220d98368f4ca5a59e79363c3168a",
          "sha256": "d7a920eb7962e1dcdc94e37399873da06dbbd3049d64f27d6c38349906d7f103"
        },
        "downloads": -1,
        "filename": "testproject_robot_library-0.65.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d28220d98368f4ca5a59e79363c3168a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18160,
        "upload_time": "2021-04-12T07:59:37",
        "upload_time_iso_8601": "2021-04-12T07:59:37.897706Z",
        "url": "https://files.pythonhosted.org/packages/19/2c/64d77af1f862b2ceefda9f48616943cc960f7f8e5efb6f0c7a157b2fcf31/testproject_robot_library-0.65.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ab859b4ba39d512b577a1e79404d02859c1fcf83a9b3f6e31e10d62c7ea5ee0",
          "md5": "e0d96cf09e7c875b1e97eb7c9fe54a24",
          "sha256": "9dae132810d000bea4fb1bcaa09c799cd88af6a41748997bf3ee2fed34253ffa"
        },
        "downloads": -1,
        "filename": "testproject-robot-library-0.65.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e0d96cf09e7c875b1e97eb7c9fe54a24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17719,
        "upload_time": "2021-04-12T07:59:39",
        "upload_time_iso_8601": "2021-04-12T07:59:39.090533Z",
        "url": "https://files.pythonhosted.org/packages/4a/b8/59b4ba39d512b577a1e79404d02859c1fcf83a9b3f6e31e10d62c7ea5ee0/testproject-robot-library-0.65.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "192c64d77af1f862b2ceefda9f48616943cc960f7f8e5efb6f0c7a157b2fcf31",
        "md5": "d28220d98368f4ca5a59e79363c3168a",
        "sha256": "d7a920eb7962e1dcdc94e37399873da06dbbd3049d64f27d6c38349906d7f103"
      },
      "downloads": -1,
      "filename": "testproject_robot_library-0.65.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d28220d98368f4ca5a59e79363c3168a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18160,
      "upload_time": "2021-04-12T07:59:37",
      "upload_time_iso_8601": "2021-04-12T07:59:37.897706Z",
      "url": "https://files.pythonhosted.org/packages/19/2c/64d77af1f862b2ceefda9f48616943cc960f7f8e5efb6f0c7a157b2fcf31/testproject_robot_library-0.65.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4ab859b4ba39d512b577a1e79404d02859c1fcf83a9b3f6e31e10d62c7ea5ee0",
        "md5": "e0d96cf09e7c875b1e97eb7c9fe54a24",
        "sha256": "9dae132810d000bea4fb1bcaa09c799cd88af6a41748997bf3ee2fed34253ffa"
      },
      "downloads": -1,
      "filename": "testproject-robot-library-0.65.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e0d96cf09e7c875b1e97eb7c9fe54a24",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17719,
      "upload_time": "2021-04-12T07:59:39",
      "upload_time_iso_8601": "2021-04-12T07:59:39.090533Z",
      "url": "https://files.pythonhosted.org/packages/4a/b8/59b4ba39d512b577a1e79404d02859c1fcf83a9b3f6e31e10d62c7ea5ee0/testproject-robot-library-0.65.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}