{
  "info": {
    "author": "Daniel Jönsson",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Typing :: Typed"
    ],
    "description": "# pywam\r\n\r\npywam is an fast and lightweight python asyncio library without external dependencies for communicating with Samsung Wireless Audio (R) speakers (WAM). It was developed to be used for integrating the speakers in Home Assistant.\r\n\r\n## Features\r\n\r\n- Controll Samasung Multiroom speakers.\r\n- Keep track of the state of Samsung Multiroom speakers.\r\n\r\n## Installation\r\n\r\n```bash\r\npip install pywam\r\n```\r\n\r\n## Usage\r\n\r\nSet the speaker volume to 50% with python context manager:\r\n\r\n```python\r\nfrom pywam.speaker import Speaker\r\n\r\nasync with Speaker('192.168.1.100') as speaker:\r\n    speaker.set_volume(50)\r\n```\r\n\r\nExample of controlling media playback:\r\n\r\n```python\r\n# Play\r\nawait speaker.cmd_play()\r\n# Pause\r\nawait speaker.cmd_pause()\r\n# Shuffle mode\r\nawait speaker.set_shuffle(True)\r\n```\r\n\r\nGet notifications about speakers state:\r\n\r\n```python\r\nfrom pywam.speaker import Speaker\r\n\r\ndef state_receiver(event):\r\n    print(event)\r\n\r\nspeaker = Speaker('192.168.1.150')\r\nspeaker.events.register_subscriber(state_receiver, 2)\r\nspeaker.connect()\r\nspeaker.update()\r\n```\r\n\r\n## Contribute\r\n\r\n- Issue Tracker: https://github.com/Strixx76/pywam/issues\r\n- Source Code: https://github.com/Strixx76/pywam\r\n\r\n## Style guide\r\n\r\nPEP8 and Google styled PEP257.\r\nBut none of them is strictly enforced.\r\n\r\n## License\r\n\r\nThe project is licensed under the [MIT License](https://opensource.org/licenses/MIT).\r\n\r\n## Disclaimer Notice\r\n\r\nI have tested all functions in this library on all of my Samsung Multiroom speakers, and the worst that has happened is that speakers froze when receiving faulty calls, and needed a hard reset.\r\nBut I CAN’T guarantee that your speaker is compatible with this library, and you can’t hold me responsible if you brick your speaker when using this library.\r\n\r\n## Versioning and Changelog\r\n\r\nThis project uses [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\nThe changelog format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\r\n\r\n## Credits\r\n\r\nThis project would not have been possible without, but not limited to, the following projects:\r\n\r\n- [Samsung Wireless Audio Multiroom (WAM) Research](https://sites.google.com/view/samsungwirelessaudiomultiroom/other), Moosy Research\r\n- [WAM_API_DOC](https://github.com/bacl/WAM_API_DOC), Bruno Lopes\r\n- [com.samsung.wam](https://github.com/balmli/com.samsung.wam), Bjørnar Almli\r\n- [Hubitat-Samsung-WiFi-Audio](https://github.com/DaveGut/HubitatActive/tree/master/SamsungMultiroom), David Gutheinz\r\n- [Samsung Multiroom (WIP)](https://github.com/krygal/samsung_multiroom), Krystian Galutowski\r\n- [SamsungNotify](https://github.com/moengiant/SamsungNotify), Moengiant\r\n\r\n## Support the work\r\n\r\n[![BuyMeCoffee][coffeebadge]][coffeelink]\r\n\r\n[coffeelink]: https://www.buymeacoffee.com/76strixx\r\n[coffeebadge]: https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pywam",
    "package_url": "https://pypi.org/project/pywam/",
    "platform": null,
    "project_url": "https://pypi.org/project/pywam/",
    "project_urls": {
      "Homepage": "https://www.github.com/Strixx76/pywam"
    },
    "release_url": "https://pypi.org/project/pywam/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Library built on AsyncIO for communicating with Samsung Wireless Audio speakers (WAM).",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17190252,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec82cb8b443b526c284d988b8d07bca8680fd6eda446e833c6e1c2c2d8dc87a0",
          "md5": "def1f6e6d985d56819da134739c8d815",
          "sha256": "1d317cd64c370408cbe6b470f7cbe8c3890fdb7a62f87c597c2c38a2370bd348"
        },
        "downloads": -1,
        "filename": "pywam-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "def1f6e6d985d56819da134739c8d815",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 42664,
        "upload_time": "2023-03-07T12:00:21",
        "upload_time_iso_8601": "2023-03-07T12:00:21.910609Z",
        "url": "https://files.pythonhosted.org/packages/ec/82/cb8b443b526c284d988b8d07bca8680fd6eda446e833c6e1c2c2d8dc87a0/pywam-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d5eec0fb7f18d0fced4cc7998ccdcc2c4f697c5d948e4234cccb5fc11f28f0a",
          "md5": "4ebde92eb56c84cb04af5081a2792f36",
          "sha256": "7b0df7833d8375ac78c38673ed74e9323f8f8fccb2fad36c4a92f507ac580d02"
        },
        "downloads": -1,
        "filename": "pywam-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4ebde92eb56c84cb04af5081a2792f36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 38263,
        "upload_time": "2023-03-07T12:00:23",
        "upload_time_iso_8601": "2023-03-07T12:00:23.711550Z",
        "url": "https://files.pythonhosted.org/packages/9d/5e/ec0fb7f18d0fced4cc7998ccdcc2c4f697c5d948e4234cccb5fc11f28f0a/pywam-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec82cb8b443b526c284d988b8d07bca8680fd6eda446e833c6e1c2c2d8dc87a0",
        "md5": "def1f6e6d985d56819da134739c8d815",
        "sha256": "1d317cd64c370408cbe6b470f7cbe8c3890fdb7a62f87c597c2c38a2370bd348"
      },
      "downloads": -1,
      "filename": "pywam-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "def1f6e6d985d56819da134739c8d815",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 42664,
      "upload_time": "2023-03-07T12:00:21",
      "upload_time_iso_8601": "2023-03-07T12:00:21.910609Z",
      "url": "https://files.pythonhosted.org/packages/ec/82/cb8b443b526c284d988b8d07bca8680fd6eda446e833c6e1c2c2d8dc87a0/pywam-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d5eec0fb7f18d0fced4cc7998ccdcc2c4f697c5d948e4234cccb5fc11f28f0a",
        "md5": "4ebde92eb56c84cb04af5081a2792f36",
        "sha256": "7b0df7833d8375ac78c38673ed74e9323f8f8fccb2fad36c4a92f507ac580d02"
      },
      "downloads": -1,
      "filename": "pywam-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4ebde92eb56c84cb04af5081a2792f36",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 38263,
      "upload_time": "2023-03-07T12:00:23",
      "upload_time_iso_8601": "2023-03-07T12:00:23.711550Z",
      "url": "https://files.pythonhosted.org/packages/9d/5e/ec0fb7f18d0fced4cc7998ccdcc2c4f697c5d948e4234cccb5fc11f28f0a/pywam-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}