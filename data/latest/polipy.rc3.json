{
  "info": {
    "author": "Berkeley Lab for Usable and Experimental Security (BLUES)",
    "author_email": "blues@berkeley.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# polipy\nPoliPy is a Python library that provides a command-line interface (CLI) and an API to scrape, parse, and analyze privacy policies of different services. It is a maintained library developed as a collaborative effort of researchers at the [Berkeley Lab for Usable and Experimental Security (BLUES)](https://blues.cs.berkeley.edu/) at the [University of California, Berkeley](https://www.berkeley.edu/).\n\nPlease read carefully to learn more about properly [citing](#Citations) this library and the [GNU GPLv3](https://choosealicense.com/licenses/gpl-3.0/) terms that govern the usage and modification of this software.\n\n## Prerequisites\nPoliPy uses `selenium` library to dynamically scrape webpages that host privacy policies. This allows PoliPy to download policies hosted on pages that, for instance, require JavaScript to be enabled. `Selenium` will open the webpage in a private window of Firefox Browser in the background using a `geckodriver` process, allowing the Python script to control the behavior of the browser without having the user interact with it directly. \n\nTo ensure that PoliPy works as intended, first make sure to install [the latest version of the Mozilla Firefox browser](https://www.mozilla.org/en-US/firefox/new/). Afterwards, download [the latest verison of geckodriver](https://github.com/mozilla/geckodriver/releases) for your operating system. You will need to ensure that the `geckodriver` is on the path and can be executed. Refer to [selenium Python API documentation](https://www.selenium.dev/selenium/docs/api/py/) for more information and troubleshooting.\n\n## Installation\n\nYou can easily install the library using `pip`:\n\n```bash\npip install polipy\n```\n\nYou might encounter the following prompt the first time you run PoliPy on MacOS (or a similar prompt on another OS):\n\n<img src=\"https://i.imgur.com/vI7Qrpy.png\" width=300>\n\nThis prompt appears as the library is making network requests to the webpages where privacy policy are hosted. Select `Allow` to continue.\n\n## Example\n\nThis library can either be used as a command-line interface (CLI):\n\n```bash\n$ cat policies.txt\nhttps://docs.github.com/en/github/site-policy/github-privacy-statement\n\n$ polipy policies.txt -s\n```\n\nor as an API imported by another module:\n\n```python\nimport polipy\n\nurl = 'https://docs.github.com/en/github/site-policy/github-privacy-statement'\nresult = polipy.get_policy(url, screenshot=True)\n\nresult.save(output_dir='.')\n```\n\nBoth of these result in the creation of the following output folder:\n\n```bash\n├── docs_github_com_c0eb432555\n│   ├── 20210511.html\n│   ├── 20210511.png\n│   ├── 20210511.json\n├── └── 20210511.meta\n```\nwhere the base file name corresponds to the date the policy was scraped and the file extensions correspond to the following:\n\n* `.html` contains the (dynamic) source of the webpage where privacy policy is hosted\n* `.png` contains the screenshot of the webpage\n* `.meta` contains information such as the URL of the privacy policy and the date of last scraping\n* `.json` contains the content extracted from the privacy policy.\n\nFor instance, the `text` key of the JSON in the `.json` file contains the extracted text from the scraped privacy policy:\n\n```\n  GitHub Privacy Statement - GitHub Docs\n  GitHub Docs\n  All products\n  GitHub.com\n  Getting started\n  ...\n  Effective date: December 19, 2020\n  Thanks for entrusting GitHub Inc. (“GitHub”, “we”) with your source code, your projects, and your personal information. Holding on to your private information is a serious responsibility, and we want you to know how we're handling it.\n  All capitalized terms have their definition in\n  GitHub’s Terms of Service , unless otherwise noted here.\n  ...\n  Contact GitHub\n  Pricing\n  Developer API\n  Training\n  About\n```\n\n## Usage\nCLI usage manual is available with the `--help` or `-h` flag:\n\n```bash\n$ polipy --help\nusage: __main__.py [-h] [--output_dir OUTPUT_DIR] [--timeout TIMEOUT] [--screenshot] [--extractors EXTRACTORS [EXTRACTORS ...]] [--workers WORKERS] [--force] [--raise_errors] [--verbose] input_file\n\nDownload privacy policies from URLs contained in the input_file.\n\npositional arguments:\n  input_file            Path to file containing a list of newline-separated URLs of privacy policies to scrape.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --output_dir OUTPUT_DIR, -o OUTPUT_DIR\n                        Path to directory where policies will be saved (default is ...).\n  --timeout TIMEOUT, -t TIMEOUT\n                        The amount of time in seconds to wait for the HTTP request response (default is 30).\n  --screenshot, -s      Capture and save the screenshot of the privacy policy page (default is False).\n  --extractors EXTRACTORS [EXTRACTORS ...], -e EXTRACTORS [EXTRACTORS ...]\n                        Extractors to use to capture information from the privacy policy (default is [text]).\n  --workers WORKERS, -w WORKERS\n                        Number of threading workers to use (default is 1).\n  --force, -f           Scrape privacy policy again even if it is already scraped or has not been updated (default is False).\n  --raise_errors, -r    Raise errors that occur during the scraping and parsing (default is False).\n  --verbose, -v         Enable verbose logging (default is False).\n```\n\nThe following helper methods are available when the PoliPy library is imported:\n- [get_policy](#get_policy): Helper method that returns a `polipy.Policy` object containing\n  information about the policy, scraped and processed from the given URL.\n- [download_policy](#download_policy): Helper method that scrapes, parses, and saves the privacy policy located at the provided <url>.\n\nAdditionally, you can directly create `polipy.Policy` objects supporting the following interface:\n\n- [Policy.\\_\\_init\\_\\_](#Policy): Constructor method.\n- [Policy.scrape](#scrape): Obtains the page source of the given privacy policy URL.\n- [Policy.extract](#extract): Extracts information from the scraped privacy policy.\n- [Policy.save](#save): Saves the information contained in the `Policy` object.\n- [Policy.to_dict](#to_dict): Converts the `Policy` object to a dictionary.\n\n### get_policy\nHelper method that returns a `polipy.Policy` object containing information about the policy, scraped and processed from the given URL.\n\nParameters:\n* `url (str)`: The URL of the privacy policy.\n* `screenshot (bool, optional)`: Flag that indicates whether to capture and save the screenshot of the privacy policy page (default is `False`).\n* `timeout (int, optional)`: The amount of time in seconds to wait for the HTTP request response (default is `30`).\n* `extractors (list of str, optional)`: Extractors to use to capture information from the privacy policy (default is `[\"text\"]`).\n\nReturns:\n* `polipy.Policy`: Object containing information about the privacy policy.\n\nRaises:\n* `polipy.NetworkIOException`: Raised if an error has occurred while performing networking I/O.\n* `polipy.ParserException`: Raised if an error occurred while extracting text from page source.\n\n### download_policy\nHelper method that scrapes, parses, and saves the privacy policy located at the provided `url` by creating the following directory structure:\n```\n├── <output_dir>\n│   ├── <policy URL domain>_<hash of policy URL>\n│   │   ├── <current UTC date>.html\n│   │   ├── <current UTC date>.json\n└── └── └── <current UTC date>.meta\n```\n\nParameters:\n* `url (str)`: The URL of the privacy policy.\n* `output_dir (str, optional)` Path to directory where the policy will be saved (default is the current working directory).\n* `force (bool, optional)`: Flag that indicates whether to scrape privacy policy again even if it is already scraped or has not been updated (default is `False`).\n* `raise_errors (bool, optional)`: Flag that indicates whether to raise errors that occur during the scraping and parsing (default is `False`).\n* `logger (logging.Logger, optional)`: A `logging.Logger` object to handle the logging of events (default is `None`).\n* `screenshot (bool, optional)`: Flag that indicates whether to capture and save the screenshot of the privacy policy page (default is `False`).\n* `timeout (int, optional)`: The amount of time in seconds to wait for the HTTP request response (default is `30`).\n* `extractors (list of str, optional)`: Extractors to use to capture information from the privacy policy (default is `[\"text\"]`).\n\nRaises:\n* `polipy.NetworkIOException`: Raised if an error has occurred while performing networking I/O.\n* `polipy.ParserException`: Raised if an error occurred while extracting text from page source.\n\n### Policy\n\nA class representing a privacy policy. Attributes:\n\n* `url (dict)`: Contains the URL to the privacy policy and additional information about the URL, such as domain, scheme, content-type, etc.\n* `source (dict)`: Contains the information scraped from the webpage where policy is hosted, such as the HTML (dynamic) source and the screenshot.\n* `content (dict)`: Contains the content extracted from the privacy policy website, such as the text of the policy.\n\n#### \\_\\_init\\_\\_\nConstructor method. Populates the `Policy.url` attribute. Parameters:\n\n* `url (str)`: The URL of the privacy policy.\n\n#### scrape\nObtains the page source of the given privacy policy URL. Populates the `Policy.source` attribute. Parameters:\n\n* `screenshot (bool, optional)`: Flag that indicates whether to capture and save the screenshot of the privacy policy page (default is `False`).\n* `timeout (int, optional)`: The amount of time in seconds to wait for the HTTP request response (default is `30`).\n\nReturns:\n* `polipy.Policy`: `Policy` object with the populated attribute.\n\nRaises:\n* `polipy.NetworkIOException`: Raised if an error has occurred while performing networking I/O.\n\n#### extract\nExtracts information from the scraped privacy policy. Populates the `Policy.content` attribute. Parameters:\n\n* `extractors (list of str, optional)`: Extractors to use to capture information from the privacy policy (default is `[\"text\"]`).\n\nReturns:\n* `polipy.Policy`: `Policy` object with the populated attribute.\n\nRaises:\n* `polipy.ParserException`: Raised if an error occurred while extracting text from page source.\n\n#### save\nSaves the information contained in the `Policy` object. Parameters:\n\n* `output_dir (str)`: Path to directory where the policy will be saved.\n\n#### to_dict\nConverts the `Policy` object to a dictionary. Returns:\n\n* `dict`: Dictionary containing policy attributes as key-value pairs.\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## Citations\nAny project that uses this library in part or in whole is required to acknowledge the usage of this library. For publications, the following citation can be used:\n\n>Samarin, N., Kothari, S., Siyed, Z., Wijesekera, P., Fischer, J., Hoofnagle, C. and Egelman, S., Investigating the Compliance of Android App Developers with the CCPA.  \n\n## License\n[GNU GPLv3](https://choosealicense.com/licenses/gpl-3.0/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/blues-lab/polipy",
    "keywords": "",
    "license": "GNU General Public License v3.0 (GPLv3)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "polipy",
    "package_url": "https://pypi.org/project/polipy/",
    "platform": null,
    "project_url": "https://pypi.org/project/polipy/",
    "project_urls": {
      "Homepage": "https://github.com/blues-lab/polipy"
    },
    "release_url": "https://pypi.org/project/polipy/0.1.4/",
    "requires_dist": [
      "soupsieve",
      "beautifulsoup4",
      "certifi",
      "cffi",
      "chardet",
      "cryptography",
      "filelock",
      "idna",
      "pdfminer.six",
      "pycparser",
      "requests",
      "requests-file",
      "selenium",
      "six",
      "sortedcontainers",
      "tqdm",
      "urllib3"
    ],
    "requires_python": "",
    "summary": "Library for scraping, parsing, and analyzing privacy policies.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15273140,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbea964bf674543f2849ebc859e85ccca6a71e67348683232ec8b2c682f30a49",
          "md5": "85a28675b6d2d810d2f9a662de56779c",
          "sha256": "daf8044888f05d7d9f695cdb3b54c1a31fad2d60bd5f5eecaac31ca19c434833"
        },
        "downloads": -1,
        "filename": "polipy-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85a28675b6d2d810d2f9a662de56779c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28955,
        "upload_time": "2021-05-11T18:54:38",
        "upload_time_iso_8601": "2021-05-11T18:54:38.575246Z",
        "url": "https://files.pythonhosted.org/packages/cb/ea/964bf674543f2849ebc859e85ccca6a71e67348683232ec8b2c682f30a49/polipy-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75f424bb24d64d4239bcd19ae60c79b268d6c3f80ad09cc709b07e5e81f98883",
          "md5": "1325d31245c17a585e8485265558e7e2",
          "sha256": "b6f36d37bb8d2ae81d565cb2f4886dae83841026212370b33b6bbf598c89ad5b"
        },
        "downloads": -1,
        "filename": "polipy-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1325d31245c17a585e8485265558e7e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17021,
        "upload_time": "2021-05-11T18:54:39",
        "upload_time_iso_8601": "2021-05-11T18:54:39.894786Z",
        "url": "https://files.pythonhosted.org/packages/75/f4/24bb24d64d4239bcd19ae60c79b268d6c3f80ad09cc709b07e5e81f98883/polipy-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "818028d8e20290bcefc125e6ed8b2d2bde37c8262b11c91fbad74a1ee04d0d3d",
          "md5": "77f7d6460ede5a631ac69f9a22db45ad",
          "sha256": "069b2075ab66a7b97a79b6066f180895d2f0fb38dfdd413a57c60dc83c3c1e55"
        },
        "downloads": -1,
        "filename": "polipy-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77f7d6460ede5a631ac69f9a22db45ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29083,
        "upload_time": "2021-05-11T20:47:58",
        "upload_time_iso_8601": "2021-05-11T20:47:58.177651Z",
        "url": "https://files.pythonhosted.org/packages/81/80/28d8e20290bcefc125e6ed8b2d2bde37c8262b11c91fbad74a1ee04d0d3d/polipy-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d4bb4902e9dc49e8fa874963e0b6f1b93cac7ff09aab6ec36871d66174261e9",
          "md5": "7b8bd909a904c20bbaee6f68f944d8ab",
          "sha256": "06c89c745d20261c3b76c691a0967c6144742e618d17d86389fa95e8e4a2ff2f"
        },
        "downloads": -1,
        "filename": "polipy-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7b8bd909a904c20bbaee6f68f944d8ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17319,
        "upload_time": "2021-05-11T20:47:59",
        "upload_time_iso_8601": "2021-05-11T20:47:59.561932Z",
        "url": "https://files.pythonhosted.org/packages/3d/4b/b4902e9dc49e8fa874963e0b6f1b93cac7ff09aab6ec36871d66174261e9/polipy-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a43d62eb7e7ebff981e6dae9ad43a51644c9a8ebb38e4639ea85fde56d1578d",
          "md5": "145a7e55acacf49bea59de78c3158dd6",
          "sha256": "43dd07ef01c670d19566067433ba3e2942bd334e4706b14bc2665d6f0d3d363d"
        },
        "downloads": -1,
        "filename": "polipy-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "145a7e55acacf49bea59de78c3158dd6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30132,
        "upload_time": "2022-10-01T04:42:19",
        "upload_time_iso_8601": "2022-10-01T04:42:19.198483Z",
        "url": "https://files.pythonhosted.org/packages/1a/43/d62eb7e7ebff981e6dae9ad43a51644c9a8ebb38e4639ea85fde56d1578d/polipy-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df32feea14f206e4df4171dbc5eac74cc00d6e3cf14ddc529258e4236749c078",
          "md5": "49d177e93ae763858795e388c768f331",
          "sha256": "2879dc5fb0c65623a9aa611c4123f7553308597fa3cd05ef99e72e369b497102"
        },
        "downloads": -1,
        "filename": "polipy-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "49d177e93ae763858795e388c768f331",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30322,
        "upload_time": "2022-10-01T04:42:21",
        "upload_time_iso_8601": "2022-10-01T04:42:21.490630Z",
        "url": "https://files.pythonhosted.org/packages/df/32/feea14f206e4df4171dbc5eac74cc00d6e3cf14ddc529258e4236749c078/polipy-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a43d62eb7e7ebff981e6dae9ad43a51644c9a8ebb38e4639ea85fde56d1578d",
        "md5": "145a7e55acacf49bea59de78c3158dd6",
        "sha256": "43dd07ef01c670d19566067433ba3e2942bd334e4706b14bc2665d6f0d3d363d"
      },
      "downloads": -1,
      "filename": "polipy-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "145a7e55acacf49bea59de78c3158dd6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 30132,
      "upload_time": "2022-10-01T04:42:19",
      "upload_time_iso_8601": "2022-10-01T04:42:19.198483Z",
      "url": "https://files.pythonhosted.org/packages/1a/43/d62eb7e7ebff981e6dae9ad43a51644c9a8ebb38e4639ea85fde56d1578d/polipy-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df32feea14f206e4df4171dbc5eac74cc00d6e3cf14ddc529258e4236749c078",
        "md5": "49d177e93ae763858795e388c768f331",
        "sha256": "2879dc5fb0c65623a9aa611c4123f7553308597fa3cd05ef99e72e369b497102"
      },
      "downloads": -1,
      "filename": "polipy-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "49d177e93ae763858795e388c768f331",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30322,
      "upload_time": "2022-10-01T04:42:21",
      "upload_time_iso_8601": "2022-10-01T04:42:21.490630Z",
      "url": "https://files.pythonhosted.org/packages/df/32/feea14f206e4df4171dbc5eac74cc00d6e3cf14ddc529258e4236749c078/polipy-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}