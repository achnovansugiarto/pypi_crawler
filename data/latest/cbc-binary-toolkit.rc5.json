{
  "info": {
    "author": "VMware Carbon Black",
    "author_email": "dev-support@carbonblack.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Security",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![Codeship Status for carbonblack/cb-binary-analysis](https://app.codeship.com/projects/6a7a91c0-2a8b-0138-4f71-1610ceb87095/status?branch=develop)](https://app.codeship.com/projects/384255)\n[![Coverage Status](https://coveralls.io/repos/github/carbonblack/cbc-binary-toolkit/badge.svg?branch=develop)](https://coveralls.io/github/carbonblack/cbc-binary-toolkit?branch=develop)\n# Carbon Black Cloud Binary Toolkit\n\n**Latest Version:** 1.1.1\n<br>\n**Release Date:** 03/31/2021\n\nThe Carbon Black Cloud Binary Toolkit provides a system of processing incoming SHA256 hashes by integrating with the Unified Binary Store (UBS) on the Carbon Black Cloud (CBC).\n\n\n## Recent updates\n\nView the latest release notes [here](https://github.com/carbonblack/cbc-binary-toolkit/releases).\n\n\n## License\n\nUse of the Carbon Black API is governed by the license found in [LICENSE](LICENSE).\n\n## Support\n\n1. View all API and integration offerings on the [Developer Network](https://developer.carbonblack.com) along with reference documentation, video tutorials, and how-to guides.\n2. Use the [Developer Community Forum](https://community.carbonblack.com/) to discuss issues and get answers from other API developers in the Carbon Black Community.\n3. Create a github issue for bugs and change requests. Formal [Carbon Black Support](http://carbonblack.com/resources/support/) coming with v1.0.\n\n## Requirements\n\nThe Carbon Black Cloud Binary Toolkit is designed to work on Python 3.6 and above.\n\nAll requirements are installed as part of `pip install cbc-binary-toolkit` or if you're planning on pushing changes to the Carbon Black Cloud Binary Toolkit, the following can be used after cloning the repo `pip install -r requirements.txt`\n\n### Carbon Black Cloud\n* Enterprise EDR\n\n### OS Specific Requirements\n\n* **Windows** users will need to have [Microsoft Visual C++ 14.0 Build Tools](https://visualstudio.microsoft.com/visual-cpp-build-tools) installed in order to compile yara-python.\n\n* **Linux** users will need to have the python developer package installed in order to compile yara-python. If you receive compile errors, make sure you are on the latest gcc compiler version.\n\nLinux Distribution | Command\n---- | ----\nAmazon Linux/Centos/RHEL | `yum install python3-devel`\nUbuntu | `apt-get install python3-dev`\nOpenSUSE/SUSE | `zypper install python3-devel`\n\n\n### Python Packages\n* argparse\n* carbon-black-cloud-sdk\n* python-dateutil\n* pyyaml\n* requests\n* schema\n* yara-python\n\n## Performance Metrics\n\nFor details on the expected performance for the CBC Binary Toolkit see the Performance Metrics wiki page [here](https://github.com/carbonblack/cbc-binary-toolkit/wiki/Performance-Metrics).\n\nThe wiki page will be updated with any changes or additional tests that may be run in the future.\n\n## Getting Started\n\nThere are two ways to use the Carbon Black Cloud Binary Toolkit. You can either run the Binary Analysis Tool using out-of-the-box functionality, or you can use the Toolkit to develop your own tool for processing binaries.\n\n\nFirst you will need to install the Binary Toolkit with the following command:\n```\npip install cbc-binary-toolkit\n```\n\n### Running Binary Analysis tool\n\nThe cbc-binary-analysis tool provides out-of-the-box builtin resources for processing binaries and managing the analysis results. For more information see the [User Guide](https://github.com/carbonblack/cbc-binary-toolkit/wiki/User-Guide) wiki page.\n\n```\nusage: cbc-binary-analysis [-h] [-c CONFIG]\n                           [-ll {DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n                           {analyze,restart,clear} ...\n\npositional arguments:\n  {analyze,restart,clear}\n                        Binary analysis commands\n    analyze             Analyze a list of hashes by command line or file\n    restart             Restart a failed job and pick up where the job crashed\n                        or exited\n    clear               Clear cache of analyzed hashes. All or by timestamp\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONFIG, --config CONFIG\n                        Location of the configuration file (default .../carbonblackcloud/binary-toolkit/binary-analysis-config.yaml.example)\n  -ll {DEBUG,INFO,WARNING,ERROR,CRITICAL}, --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n                        The base log level (default INFO)\n```\n\n**Note:** Run --help on any of the commands for up to date arguments.\n\n\n### Using the Toolkit to develop your own tools\n\nThe following python code snippet allows you to begin developing with the Carbon Black Cloud Binary toolkit. For more information see the [Developer Guide](https://github.com/carbonblack/cbc-binary-toolkit/wiki/Developer-Guide).\n```\nfrom cbc_binary_toolkit import *\n```\n\n\n## Developing Improvements for the Carbon Black Cloud Binary Toolkit\n\nUse the following steps if you want to provide additional examples, fix a bug, or add a feature to the Toolkit.\n\n### Installing for Toolkit development\n\nYou will need to fork the repo in order to create pull requests when submitting code for review. For details on forking a repo, see [here](https://help.github.com/en/github/getting-started-with-github/fork-a-repo).\n\n```\ngit clone https://github.com/{fork-name}/cbc-binary-toolkit\ncd cbc-binary-toolkit\npip install -r requirements.txt\n```\n\nIf you want to test/execute the console scripts from the repo then install the toolkit with the following command. This will install the toolkit in editable mode so changes to the repo modify the installed package. See the [manual-tests](src/tests/manual-tests.md) document for more information on testing from a fresh install.\n\n```\npip install -e .\n```\n\n**Note: The above command needs to be run from the base folder of the repo**\n\n### Running the Analysis tool\n\nIf you want to execute the analysis tool without installing the package you can run the tool directly using the `analysis_util.py` script in `src/cbc_binary_toolkit_examples/tools`\n\n### Running the Toolkit tests\n\nTo check that your code changes didn't break any use cases, or fail our linters, the following will show you how to set up and run our tests:\n\nInstall one or all of these versions of Python: `Python 3.6.X, Python 3.7.X or Python 3.8.X` and make sure it is accessible to this project.\n\nFor managing different versions of python, an easy solution is: [pyenv(for UNIX based systems)](https://github.com/pyenv/pyenv#basic-github-checkout), or [pyenv-win(for Windows based systems)](https://github.com/pyenv-win/pyenv-win).\n\nInstall [tox](https://tox.readthedocs.io/en/latest/install.html) (e.g. `pip install tox` or `brew install tox`)\n\nRun the command `tox -e <the environment you want to run>` from anywhere in the directory to run the tests and linter.\n\nThe `tox.ini` file shows that the tests are run against python versions `3.6.x, 3.7.x and 3.8.x` as `py36, py37, py38`.\n\n**Example:** If you just run `tox -e py37`, it will run the tests against the `Python 3.7.X` version installed locally.\n\nBut if `tox` is run, it will try to run against all the versions listed in the `tox.ini` file (currently py36, py37, and py38).\nIf a version is not installed locally, it will just throw an error of:\n\n```\nERROR:  pyXX: InterpreterNotFound: pythonX.X\n\n```\nIt will continue running against the versions that are installed.\n\n\nIf there are any changes, you need to recreate the virtualenv that tox built. Just run `tox --recreate -e <the environment you want to run>` or `tox --recreate` for all environments.\n\nIf this error is thrown:\n```\nERROR: cowardly refusing to delete `envdir` (it does not look like a virtualenv):\n\n```\nDelete the python env directory (py37) from .tox directory\nand rerun `tox --recreate`.\n\n### Development Flow\n\nTo begin a code change, start by creating a branch off of the develop branch.\n```\ngit checkout develop\ngit checkout -b {branch-name}\n```\n\nWhen the feature or bug fix is finished you will need to create a pull request to the CarbonBlack repo, the following will push your changes to Github.\n```\ngit push {remote} {branch-name}\n```\n\nIf your branch is behind the develop branch, you will need to rebase.\n```\ngit checkout {branch-name}\ngit rebase develop\n```\n\n**Note:** if your develop branch is out of sync with the CarbonBlack repo then you will need to sync your fork. For information on syncing your fork, see [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/syncing-a-fork).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://developer.carbonblack.com/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cbc-binary-toolkit",
    "package_url": "https://pypi.org/project/cbc-binary-toolkit/",
    "platform": "any",
    "project_url": "https://pypi.org/project/cbc-binary-toolkit/",
    "project_urls": {
      "Homepage": "https://developer.carbonblack.com/"
    },
    "release_url": "https://pypi.org/project/cbc-binary-toolkit/1.1.1/",
    "requires_dist": [
      "carbon-black-cloud-sdk",
      "python-dateutil",
      "pyyaml",
      "requests",
      "schema",
      "yara-python"
    ],
    "requires_python": "",
    "summary": "The VMware Carbon Black Cloud Binary Toolkit provides useful tools to process binaries and upload IOCs to your Feeds",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9937874,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6aaa04fec84b2f7db2fd4799bfc1fb19c49dac3cdc96d553ea8e171ad002c8eb",
          "md5": "2436162f0f29bd40647e79763c6dc91d",
          "sha256": "09f3ec8bb9a2a4016a8723d13455598f687f6b6162efe5eb50636e56af23743e"
        },
        "downloads": -1,
        "filename": "cbc_binary_toolkit-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2436162f0f29bd40647e79763c6dc91d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 35101,
        "upload_time": "2020-06-30T23:45:55",
        "upload_time_iso_8601": "2020-06-30T23:45:55.160797Z",
        "url": "https://files.pythonhosted.org/packages/6a/aa/04fec84b2f7db2fd4799bfc1fb19c49dac3cdc96d553ea8e171ad002c8eb/cbc_binary_toolkit-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b67b131d00fb1428bf31376dd798e991033fc69f65846493b349d99b3e02ae1",
          "md5": "f05ca4d09766172d8f904e582857c111",
          "sha256": "09a252c9c6e5f7648ce72656be3cb581b71b3d29fd95d0618a382c41a21478e1"
        },
        "downloads": -1,
        "filename": "cbc_binary_toolkit-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f05ca4d09766172d8f904e582857c111",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27384,
        "upload_time": "2020-06-30T23:45:56",
        "upload_time_iso_8601": "2020-06-30T23:45:56.168485Z",
        "url": "https://files.pythonhosted.org/packages/8b/67/b131d00fb1428bf31376dd798e991033fc69f65846493b349d99b3e02ae1/cbc_binary_toolkit-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14fb6cc975e0934a40f886375ed2ebd5efce236900c1f4c75aaf24df9584e9f1",
          "md5": "01bdbdba84ea42071ee85dfb3ef59a4d",
          "sha256": "b2e39a259de9f1a296c95843f2e1ceaa62d73550d799462c409db4bb3791a6c4"
        },
        "downloads": -1,
        "filename": "cbc_binary_toolkit-1.0a1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01bdbdba84ea42071ee85dfb3ef59a4d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 33594,
        "upload_time": "2020-05-11T23:46:28",
        "upload_time_iso_8601": "2020-05-11T23:46:28.393181Z",
        "url": "https://files.pythonhosted.org/packages/14/fb/6cc975e0934a40f886375ed2ebd5efce236900c1f4c75aaf24df9584e9f1/cbc_binary_toolkit-1.0a1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d5346a27ff0eab11303a2c13fbfbac4a3905afe7c38fae04d7db3cf1f464d81",
          "md5": "80c4fedeaafa176be9ff48218a66d633",
          "sha256": "3a4d95663849b93055dd66889ea30c8764fbc3ede884de0194f637059766e331"
        },
        "downloads": -1,
        "filename": "cbc_binary_toolkit-1.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "80c4fedeaafa176be9ff48218a66d633",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23017,
        "upload_time": "2020-05-11T23:46:30",
        "upload_time_iso_8601": "2020-05-11T23:46:30.732817Z",
        "url": "https://files.pythonhosted.org/packages/3d/53/46a27ff0eab11303a2c13fbfbac4a3905afe7c38fae04d7db3cf1f464d81/cbc_binary_toolkit-1.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cfb3aff2e105ee7dc8684c03004d63e478e190e497477e0566b7348e4055bf4",
          "md5": "4d3f092217b80821b9fbc4a7397af940",
          "sha256": "eeff981a254b64ea0a5448427f7fd80dfe5f4a57cc48997048345a87f648021e"
        },
        "downloads": -1,
        "filename": "cbc_binary_toolkit-1.0a2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d3f092217b80821b9fbc4a7397af940",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 33966,
        "upload_time": "2020-05-14T21:55:35",
        "upload_time_iso_8601": "2020-05-14T21:55:35.694019Z",
        "url": "https://files.pythonhosted.org/packages/7c/fb/3aff2e105ee7dc8684c03004d63e478e190e497477e0566b7348e4055bf4/cbc_binary_toolkit-1.0a2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2c71ce1b5c812433f8955a5cb6ceb841e8c7604ae0917bee7b94e4084d18992",
          "md5": "f8f25e887f4273a7b1b181d70009cd9d",
          "sha256": "404a2687bfa5f1d9fbb35eddc496be73df861b939c26b090186fc1c8734ee91c"
        },
        "downloads": -1,
        "filename": "cbc_binary_toolkit-1.0a2.tar.gz",
        "has_sig": false,
        "md5_digest": "f8f25e887f4273a7b1b181d70009cd9d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23615,
        "upload_time": "2020-05-14T21:55:37",
        "upload_time_iso_8601": "2020-05-14T21:55:37.040875Z",
        "url": "https://files.pythonhosted.org/packages/c2/c7/1ce1b5c812433f8955a5cb6ceb841e8c7604ae0917bee7b94e4084d18992/cbc_binary_toolkit-1.0a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4640e42a769256e1dd30b211ccb53618a265af4623bf8ac399abdb2fbff8614",
          "md5": "f42279ed9f7b1a931262dc0081861fd4",
          "sha256": "b00b66f8ccd0b56f3ab7057d4b5e931074971e91f7345c416318eb0f9019335a"
        },
        "downloads": -1,
        "filename": "cbc_binary_toolkit-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f42279ed9f7b1a931262dc0081861fd4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 34828,
        "upload_time": "2020-11-20T19:02:04",
        "upload_time_iso_8601": "2020-11-20T19:02:04.499569Z",
        "url": "https://files.pythonhosted.org/packages/d4/64/0e42a769256e1dd30b211ccb53618a265af4623bf8ac399abdb2fbff8614/cbc_binary_toolkit-1.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5c2017d957184fc35facd1ebfb27ff10551da0618d6460a0be7d7c834076300",
          "md5": "0478b982b9252c356db1d0d728c92f73",
          "sha256": "5eab1044872d953ce63d9ec110bfb8ebcb0edeb79958b6c785553d15f6c12df3"
        },
        "downloads": -1,
        "filename": "cbc_binary_toolkit-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0478b982b9252c356db1d0d728c92f73",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27326,
        "upload_time": "2020-11-20T19:02:06",
        "upload_time_iso_8601": "2020-11-20T19:02:06.715069Z",
        "url": "https://files.pythonhosted.org/packages/e5/c2/017d957184fc35facd1ebfb27ff10551da0618d6460a0be7d7c834076300/cbc_binary_toolkit-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2504674524699ee782b8f957eec8a345e61170627adedca62bdead54aff0ac49",
          "md5": "5f484be734c8a199ce32c7ade42bb175",
          "sha256": "8cf4e7d61ac5c2f9f20a4596fc92583bd6ff128e6fa5749571f624de4704fcee"
        },
        "downloads": -1,
        "filename": "cbc_binary_toolkit-1.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f484be734c8a199ce32c7ade42bb175",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 34898,
        "upload_time": "2021-03-31T16:49:17",
        "upload_time_iso_8601": "2021-03-31T16:49:17.322972Z",
        "url": "https://files.pythonhosted.org/packages/25/04/674524699ee782b8f957eec8a345e61170627adedca62bdead54aff0ac49/cbc_binary_toolkit-1.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e27757ae6d6e7bb52cb862e8447fa030b62e2dca30db761f679961c1368588c9",
          "md5": "b7acc4619715576d5f38943c1adb60f8",
          "sha256": "5c4d6b7eed2a506a27f9b9c4b7f7daf4a8f9c1b041509a0bf85db3ac9515cf81"
        },
        "downloads": -1,
        "filename": "cbc_binary_toolkit-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b7acc4619715576d5f38943c1adb60f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27305,
        "upload_time": "2021-03-31T16:49:18",
        "upload_time_iso_8601": "2021-03-31T16:49:18.539966Z",
        "url": "https://files.pythonhosted.org/packages/e2/77/57ae6d6e7bb52cb862e8447fa030b62e2dca30db761f679961c1368588c9/cbc_binary_toolkit-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2504674524699ee782b8f957eec8a345e61170627adedca62bdead54aff0ac49",
        "md5": "5f484be734c8a199ce32c7ade42bb175",
        "sha256": "8cf4e7d61ac5c2f9f20a4596fc92583bd6ff128e6fa5749571f624de4704fcee"
      },
      "downloads": -1,
      "filename": "cbc_binary_toolkit-1.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5f484be734c8a199ce32c7ade42bb175",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 34898,
      "upload_time": "2021-03-31T16:49:17",
      "upload_time_iso_8601": "2021-03-31T16:49:17.322972Z",
      "url": "https://files.pythonhosted.org/packages/25/04/674524699ee782b8f957eec8a345e61170627adedca62bdead54aff0ac49/cbc_binary_toolkit-1.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e27757ae6d6e7bb52cb862e8447fa030b62e2dca30db761f679961c1368588c9",
        "md5": "b7acc4619715576d5f38943c1adb60f8",
        "sha256": "5c4d6b7eed2a506a27f9b9c4b7f7daf4a8f9c1b041509a0bf85db3ac9515cf81"
      },
      "downloads": -1,
      "filename": "cbc_binary_toolkit-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b7acc4619715576d5f38943c1adb60f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27305,
      "upload_time": "2021-03-31T16:49:18",
      "upload_time_iso_8601": "2021-03-31T16:49:18.539966Z",
      "url": "https://files.pythonhosted.org/packages/e2/77/57ae6d6e7bb52cb862e8447fa030b62e2dca30db761f679961c1368588c9/cbc_binary_toolkit-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}