{
  "info": {
    "author": "Neeraj Mula",
    "author_email": "neeraj.mula@rutgers.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Reddit Poem Generator\nRpoems is a simple library that uses psaw (PushiftIO wrapper) and various different tactics to generate poetry from a corpus of reddit comments which are defined by many different parameters.\n\n## Requirements\n- Python 3.6+\n\n## Installing \nInstall with:\n```bash\npip install rpoems\n```\n\n# Documentation\nAn import method in this library is the build corpus method which generates a cache of comments given certain parameters\n```python\nimport rpoems\nfrom datetime import datetime as dt\n\nbefore = dt(2018, 8, 22)\nafter = dt(2018, 8, 20)\n\ncorpus = rpoems.build_corpus(subreddit=\"AskReddit\", before=before, after=after, limit=3000)\n\n```\n\n### Parameters\n- `subreddit` `(str)`: The name of the subreddit you want to collect comments from. Defaults to `subreddit=\"\"` which means that comments are collected from any subreddit. (Use at your own risk. I didn't implement a profanity filter)\n- `before` `(datetime)`: Any comments collected will be before this data. Defaults to `before=datetime.datetime.now()` which means that any comment before the time this progam runs is fair game.\n- `after` `(datetime)`: Any comments collected will be after this data. Defaults to `after=datetime.datetime(2000, 1, 1)`\n- `limit` `(int)`: The maximum number of comments that will be collected. People tend to underestimate how many comments are present within a certain time-span. The default of `limit=2000` will be good enough for most poems\n- `author` `(str)`: From which author should the comments be from. Defaults to `author=\"\"`. This feature is not functioning as well as I hoped due to issues with the Pushshift API. Best not to use it.\n\n```python\nimport rpoems\n# For examples sake, I will build a different corpus, but you can definitely use the corpus from before.\ncorpus = rpoems.build_corpus(limit=2000)\n\n# We now have many different types of poems we can build. I will go over one option in the coding example\npoem = rpoems.couplet_rhyming_poem(corpus)\nprint(poem)\n'''\nWe did it. Racism is no more. Have achieved world peace.\nTbh NES Ice Hockey player was one of my most wanted characters pre-release\nand whatever you do, don't go to chauvin's florida address\nyou can't win in ace attorney, so it is not imperative for him to progress\nAm I better off just getting BotW instead of Smash, then?\nAnd my basic math skills have been foiled again...\n'''\n```\n`couplet_rhyming_poem` is one method used to create a poem from a corpus. The others will be detailed below\n### Poem Generating Methods\n- `couplet_rhyming_poem(corpus)`: Generates a poem with rhyme scheme AABBCC given a corpus of comments\n- `vilanelle(corpus)`: Generates a vilanelle given a corpus of comments\n- `haiku(corpus)`: Generates a haiku given a corpus of comments\n- `acrostic(corpus, key)`: Generates a poem in which the first letter of each line are the letters in `str` key in order\n- `custom_rhyme(corpus, rhyme_scheme)`: Generates a poem given a corpus and a `str` rhyme_scheme\n  - `rhyme_scheme` is a string of capital letters. Examples include \"AABCC\", \"CCCDDD\", \"AAABBC\", \"ZZSSY\"\n- `custom_syl(corpus, syl_string)`: Generates a poem given a corpus and the amount of syllables in each line\n  - `syl_string` is a `str` in which numbers are split by \"-\". Example inputs include \"9-4-2\", \"1-2-3\", \"5-4-5\"\n- `tanka(corpus)`: Generates a poem with syllable sequence \"5-7-5-7-7\" given a corpus of comments\n- `nonet(corpus)`: Generates a poem with a syllable sequence of \"9-8-7-6-5-4-3-2-1\" given a corpus of comments\n- `magic_nine(corpus)`: Generates a poem with a rhyme scheme \"ABACADABA\" given a corpus of comments\n- `all_alphabet(corpus)`: Generates a poem in which the first letter of each line is a letter of the alphabet in order\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Acryptarch/Reddit-Poem-Generator",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rpoems",
    "package_url": "https://pypi.org/project/rpoems/",
    "platform": "",
    "project_url": "https://pypi.org/project/rpoems/",
    "project_urls": {
      "Homepage": "https://github.com/Acryptarch/Reddit-Poem-Generator"
    },
    "release_url": "https://pypi.org/project/rpoems/1.0.2/",
    "requires_dist": [
      "pronouncing",
      "psaw"
    ],
    "requires_python": ">=3.6",
    "summary": "Generate poems with comments from Reddit",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7374916,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4def1cf1e488ee2b165ee70b5f0e48a4ff27f58d4aa50d8f1f6fe628c8f78ad",
          "md5": "8e8e234591304fd51a123ee395b3c9d4",
          "sha256": "5ad1cb50f46808152cb9d660c409ca5587cbce6006086701b930c08b69d42e05"
        },
        "downloads": -1,
        "filename": "rpoems-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e8e234591304fd51a123ee395b3c9d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4458,
        "upload_time": "2020-05-29T04:28:59",
        "upload_time_iso_8601": "2020-05-29T04:28:59.511520Z",
        "url": "https://files.pythonhosted.org/packages/d4/de/f1cf1e488ee2b165ee70b5f0e48a4ff27f58d4aa50d8f1f6fe628c8f78ad/rpoems-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4964f215e8115d0454b7090c382ce1d0c4183020d948396185d45cea9518e59",
          "md5": "4262dd909670e3f1ffada8ea3f928d81",
          "sha256": "0e9c1818787f74010e3c87b12b92b6ac0ee97c0412a790a8e361ca381a4fc985"
        },
        "downloads": -1,
        "filename": "rpoems-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4262dd909670e3f1ffada8ea3f928d81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3416,
        "upload_time": "2020-05-29T04:29:01",
        "upload_time_iso_8601": "2020-05-29T04:29:01.263777Z",
        "url": "https://files.pythonhosted.org/packages/f4/96/4f215e8115d0454b7090c382ce1d0c4183020d948396185d45cea9518e59/rpoems-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f961a39124b783e0ae25236e0ad61330ac90671d9cbff89e35e385f97eb90e0",
          "md5": "05072c2794d59c35e59fa7eef4ca1028",
          "sha256": "6f1076e7f30552d9541b50ec7819a73f01f87d00c9db4b4f4c881ee42b9f94a3"
        },
        "downloads": -1,
        "filename": "rpoems-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05072c2794d59c35e59fa7eef4ca1028",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6834,
        "upload_time": "2020-06-02T00:46:43",
        "upload_time_iso_8601": "2020-06-02T00:46:43.862721Z",
        "url": "https://files.pythonhosted.org/packages/2f/96/1a39124b783e0ae25236e0ad61330ac90671d9cbff89e35e385f97eb90e0/rpoems-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "512a4e88d88c76eda08ef64945e821ff8ca6eb075da4fafe0e3eb56bee27554a",
          "md5": "da70802ffb824a93445801ed94c99901",
          "sha256": "dee67a3188ef19ec92a5909bf85cfdf54673dcad535580e9daa366c872aec712"
        },
        "downloads": -1,
        "filename": "rpoems-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "da70802ffb824a93445801ed94c99901",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5582,
        "upload_time": "2020-06-02T00:46:45",
        "upload_time_iso_8601": "2020-06-02T00:46:45.096104Z",
        "url": "https://files.pythonhosted.org/packages/51/2a/4e88d88c76eda08ef64945e821ff8ca6eb075da4fafe0e3eb56bee27554a/rpoems-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f961a39124b783e0ae25236e0ad61330ac90671d9cbff89e35e385f97eb90e0",
        "md5": "05072c2794d59c35e59fa7eef4ca1028",
        "sha256": "6f1076e7f30552d9541b50ec7819a73f01f87d00c9db4b4f4c881ee42b9f94a3"
      },
      "downloads": -1,
      "filename": "rpoems-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "05072c2794d59c35e59fa7eef4ca1028",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6834,
      "upload_time": "2020-06-02T00:46:43",
      "upload_time_iso_8601": "2020-06-02T00:46:43.862721Z",
      "url": "https://files.pythonhosted.org/packages/2f/96/1a39124b783e0ae25236e0ad61330ac90671d9cbff89e35e385f97eb90e0/rpoems-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "512a4e88d88c76eda08ef64945e821ff8ca6eb075da4fafe0e3eb56bee27554a",
        "md5": "da70802ffb824a93445801ed94c99901",
        "sha256": "dee67a3188ef19ec92a5909bf85cfdf54673dcad535580e9daa366c872aec712"
      },
      "downloads": -1,
      "filename": "rpoems-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "da70802ffb824a93445801ed94c99901",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5582,
      "upload_time": "2020-06-02T00:46:45",
      "upload_time_iso_8601": "2020-06-02T00:46:45.096104Z",
      "url": "https://files.pythonhosted.org/packages/51/2a/4e88d88c76eda08ef64945e821ff8ca6eb075da4fafe0e3eb56bee27554a/rpoems-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}