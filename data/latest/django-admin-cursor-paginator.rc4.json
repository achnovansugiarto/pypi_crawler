{
  "info": {
    "author": "Ilya Melnitskiy",
    "author_email": "mortas.11@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.0",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Framework :: Django :: 4.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# django-admin-cursor-paginator\n\nDrop-in replacement for django admin default pagination that works fast with huge tables.\n\n\n## Prerequisites\n\n- You are using django (>2.0) admin\n- Some of your models/tables contains so much data that list page lags\n- You don't want to make separate CRM page for them and just need fast and simple solution\n- You're ok that you won't see total objects or pages count and will navigate only by +-1 page\n- Index must be created for the ordering field, otherwise you won't get any significant speedup\n  (default integer pks work perfectly out-of-box)\n- Ordering field type can be almost anything that can be \"encoded\" via `str()`\n  and then be used in `queryset.filter()`\n\n> **NOTE**  \n> If ordering field is not unique then pagination can mess a bit in edge cases.\n> But for the most often case with datetime fields with milliseconds like `created_at` it won't be a problem.\n> It can be solved in future by adding support for multiple ordering fields.\n\n\n## Installation\n\nAll you need is to install it via `pip` like that:\n\n```shell\npip install django-admin-cursor-paginator\n```\n\n...and extend `INSTALLED_APPS` (it is needed only for templates):\n\n```python\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    # ...\n    'admin_cursor_paginator',\n    # ...\n]\n```\n\n> **NOTE**  \n> This app overrides `{% block pagination %}` in default `change_list.html`\n> to insert custom pagination template tag, so if you use patched `change_list.html` too,\n> don't forget to copy pagination block or (seems better) to inherit this app tpl like\n> `{% extends 'admin_cursor_paginator/change_list.html' %}`.\n>\n> Also, there's a known [issue with grapelli](https://github.com/a1tus/django-admin-cursor-paginator/issues/4) that is fixed the same way. \n\n\n## Usage example\n\nSo this app will certainly help you if you're using admin to see some (usually) last inserted entries\nand may be also want to search for particular objects.\n\nBut anyways it's just a regular django admin page.\n\n```python\nfrom admin_cursor_paginator import CursorPaginatorAdmin\n\nclass YourModelAdmin(CursorPaginatorAdmin):\n    cursor_ordering_field = '-created_at'  # default is '-pk'\n\nclass AnotherModelAdmin(CursorPaginatorAdmin):\n    cursor_ordering_field = 'parent__sort'  # joins are supported as well\n```\n\n\n## The problem\n\nDefault django admin list view makes several queries to show data.\nThe first one is something like `select count(*) from app_model` to calculate pages range\nand `select * from app_model limit 10 offset 1000` to fetch current page data.\nBoth of them start to produce performance problems as your table grows.\n\nFor example, with >1M entries in postgresql table `count(*)` took a few seconds (in our case) because of seq scan. \nLimit+offset also performs badly on far pages.\n\n\n## The solution\n\nThe solution is to use cursor pagination instead of default one (you can find many standalone packages for it).\nIt doesn't need `count(*)` query at all and performs fast by using filter instead of limit+offset.\n\nSome useful links:\n- https://cra.mr/2011/03/08/building-cursors-for-the-disqus-api/\n- https://www.django-rest-framework.org/api-guide/pagination/#cursorpagination\n- https://hakibenita.com/optimizing-the-django-admin-paginator\n\n\n## Test project\n\nIn `testproject` folder you can (surprisingly) find test project that uses this app\nfor one model so that you can see live example and check how it works if you want.\n\nAll you need is to install requirements from `requirements.txt` in some env,\nrun `./manage.py runserver`, login as admin:admin to django admin and open `Product` list.\n\nProject includes sqlite3 file with some test data and preinstalled `debug_toolbar`\nto observe db queries.\n\nYou can play with ordering field or data amount or may be test it in your target db.\n\nExample of how pagination will look like:\n\n![](assets/testproject-example.png)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/django-admin-cursor-paginator/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/a1tus/django-admin-cursor-paginator",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-admin-cursor-paginator",
    "package_url": "https://pypi.org/project/django-admin-cursor-paginator/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-admin-cursor-paginator/",
    "project_urls": {
      "Download": "https://pypi.org/project/django-admin-cursor-paginator/",
      "Homepage": "https://github.com/a1tus/django-admin-cursor-paginator"
    },
    "release_url": "https://pypi.org/project/django-admin-cursor-paginator/0.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.4",
    "summary": "Drop-in replacement for django admin default pagination that works fast with huge tables.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15129029,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9498f78bdd73f7bc3cb4ddf692173195609a6f4fdc7bef63e71bf3809c1f1f24",
          "md5": "66c0405077803c8720fccdca6360cfe5",
          "sha256": "479bd626ea7718436a40ec462af2e8190a46ee156c003b3e622f7a2a62cde05e"
        },
        "downloads": -1,
        "filename": "django_admin_cursor_paginator-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66c0405077803c8720fccdca6360cfe5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 8807,
        "upload_time": "2021-03-10T20:07:43",
        "upload_time_iso_8601": "2021-03-10T20:07:43.336651Z",
        "url": "https://files.pythonhosted.org/packages/94/98/f78bdd73f7bc3cb4ddf692173195609a6f4fdc7bef63e71bf3809c1f1f24/django_admin_cursor_paginator-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8278fe862a6502abbb4958ade0f65b332744095d3ae755e34dd8e894ed69f549",
          "md5": "72c6ee59cdb9ecf18bb12b7a64e45489",
          "sha256": "bdfd71c32dd36fbebc48a39954de965c6ef37577528a927dfbf638b5d2602f73"
        },
        "downloads": -1,
        "filename": "django-admin-cursor-paginator-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "72c6ee59cdb9ecf18bb12b7a64e45489",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 8725,
        "upload_time": "2021-03-10T20:07:44",
        "upload_time_iso_8601": "2021-03-10T20:07:44.704784Z",
        "url": "https://files.pythonhosted.org/packages/82/78/fe862a6502abbb4958ade0f65b332744095d3ae755e34dd8e894ed69f549/django-admin-cursor-paginator-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d20e62ebcf763378e094d907cbf7ea0518a0bf72df3d2469e3f100214283b73d",
          "md5": "aac7fca7fbea61419aee2ad012609ef2",
          "sha256": "d80b3e4892c2b4543bca5bafccf66a5f4171399cacba472f61e9dfc60b01136e"
        },
        "downloads": -1,
        "filename": "django_admin_cursor_paginator-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aac7fca7fbea61419aee2ad012609ef2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 9172,
        "upload_time": "2021-08-07T18:18:41",
        "upload_time_iso_8601": "2021-08-07T18:18:41.267662Z",
        "url": "https://files.pythonhosted.org/packages/d2/0e/62ebcf763378e094d907cbf7ea0518a0bf72df3d2469e3f100214283b73d/django_admin_cursor_paginator-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ece3c7e6bd2022b112499a3ba430a201c409900c75342b0ee0b087cd1d9d4111",
          "md5": "80d9c285f97a5d4e425516c4326580f3",
          "sha256": "c0f2874d523eee277c804a127e9089c0a5b9f9b0f579dab4951096f13c478b1e"
        },
        "downloads": -1,
        "filename": "django-admin-cursor-paginator-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "80d9c285f97a5d4e425516c4326580f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 9362,
        "upload_time": "2021-08-07T18:18:43",
        "upload_time_iso_8601": "2021-08-07T18:18:43.170145Z",
        "url": "https://files.pythonhosted.org/packages/ec/e3/c7e6bd2022b112499a3ba430a201c409900c75342b0ee0b087cd1d9d4111/django-admin-cursor-paginator-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58452b8f9bc2172b1cbe3a84b2911694ea0518af35fb46c431185f556f7298cc",
          "md5": "f76bbdfc1295c98e6bad9f0619e8787e",
          "sha256": "481393e2b899d7fb6386931560f43bf46251515813ac8a48b703887bd1432261"
        },
        "downloads": -1,
        "filename": "django_admin_cursor_paginator-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f76bbdfc1295c98e6bad9f0619e8787e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 9230,
        "upload_time": "2022-02-26T22:41:55",
        "upload_time_iso_8601": "2022-02-26T22:41:55.640885Z",
        "url": "https://files.pythonhosted.org/packages/58/45/2b8f9bc2172b1cbe3a84b2911694ea0518af35fb46c431185f556f7298cc/django_admin_cursor_paginator-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c43a1222a4f2c2f471673f9bffcda442897a0b4cb80260ec916ec72f9d0dc7d1",
          "md5": "eb3b5a74b4dcbf64912b83200f6522e1",
          "sha256": "2211896d0b8a101042f6a6ee68879c561c05ca638f9ec4ff124ab28938df700a"
        },
        "downloads": -1,
        "filename": "django-admin-cursor-paginator-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eb3b5a74b4dcbf64912b83200f6522e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 9428,
        "upload_time": "2022-02-26T22:41:57",
        "upload_time_iso_8601": "2022-02-26T22:41:57.729998Z",
        "url": "https://files.pythonhosted.org/packages/c4/3a/1222a4f2c2f471673f9bffcda442897a0b4cb80260ec916ec72f9d0dc7d1/django-admin-cursor-paginator-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc0df7dced8494cecb9d346309a96d6997b4caf17adc1347ecfd83761e81f028",
          "md5": "b3338fb0ad5616e8c7b202063e8be680",
          "sha256": "a616be122b94140ce1965fa6c939bf46bca742648b2140377928434314c1d34d"
        },
        "downloads": -1,
        "filename": "django-admin-cursor-paginator-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b3338fb0ad5616e8c7b202063e8be680",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 9973,
        "upload_time": "2022-09-17T18:59:54",
        "upload_time_iso_8601": "2022-09-17T18:59:54.163358Z",
        "url": "https://files.pythonhosted.org/packages/bc/0d/f7dced8494cecb9d346309a96d6997b4caf17adc1347ecfd83761e81f028/django-admin-cursor-paginator-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc0df7dced8494cecb9d346309a96d6997b4caf17adc1347ecfd83761e81f028",
        "md5": "b3338fb0ad5616e8c7b202063e8be680",
        "sha256": "a616be122b94140ce1965fa6c939bf46bca742648b2140377928434314c1d34d"
      },
      "downloads": -1,
      "filename": "django-admin-cursor-paginator-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b3338fb0ad5616e8c7b202063e8be680",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 9973,
      "upload_time": "2022-09-17T18:59:54",
      "upload_time_iso_8601": "2022-09-17T18:59:54.163358Z",
      "url": "https://files.pythonhosted.org/packages/bc/0d/f7dced8494cecb9d346309a96d6997b4caf17adc1347ecfd83761e81f028/django-admin-cursor-paginator-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}