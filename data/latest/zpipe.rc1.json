{
  "info": {
    "author": "zlyuan",
    "author_email": "1277260932@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# 嵌入式管道模块, 类似于logstash\n\n### 使用方法类似logstash, 配置化操作\n\n###  安装\n```\npip install zpipe\n```\n\n### 配置管道框架\n> 创建一个目录, 这个目录作为你的管道组织主路径\n\n```\nmkdir /home/mypipe\nmkdir /home/mypipe/pipe_config\nmkdir /home/mypipe/plugin\n```\n\n> 创建框架配置文件\n\n```\ntouch /etc/zpipe/config.json\n# win系统: \"c:/zpipe/config.json\"\n# 其他系统: \"/etc/zpipe/config.json\"\n# 可以使用环境变量 ZPIPE_CONFIG 指定框架配置文件路径, 优先级最高\n```\n\n> 修改框架配置文件为你的设置\n\n```json\n{\n  \"pipe_config_path\": \"/home/mypipe/pipe_config\",\n  \"plugin_path\": \"/home/mypipe/plugin\"\n}\n```\n\n+ pipe\\_config\\_path 表示管道配置文件路径, 可以是文件或文件夹, 每个配置文件是一个json文件, 最后框架会将所有json合并为一个更大的json\n+ plugin\\_path 表示插件路径, 只能是文件夹\n+ 路径可以使用相对路径(相对于框架配置文件的路径), 多路径用分号 [;] 隔开\n\n# 大功告成, 终于可以开始制作管道了\n\n### 一个简单的管道\n+ 在管道配置目录下创建一个文件 my\\_pipe.py, 写入如下内容\n\n```json\n{\n  \"test\": {\n    \"output\": \"log\"\n  }\n}\n```\n+ 新建一个py文件, 写入如下内容\n\n```python\nfrom zpipe import pipe_server\n\na = pipe_server()\npipe = a.get_pipe('test')\nresult = pipe.process(\"测试消息\")\n```\n\n> 运行它, 随后你可以在控制台看到打印出来的消息\n\n\n### 这个管道做了什么\n```\n{\n  \"test\": {           #定义管道名\n    \"output\": \"log\"   #定义输出插件\n  }\n}\n```\n\n```python\nfrom zpipe import pipe_server      #导入框架服务\n\na = pipe_server()                  #创建框架服务的实例\npipe = a.get_pipe('test')          #获取管道实例\nresult = pipe.process(\"测试消息\")   #向管道发送数据并获取管道结果\n```\n\n### 管道配置详解\n> 对插件设置参数, 执行顺序为 pipe > codec > filter.codec > filter > output.codec > output\n\n```json\n{\n  \"管道1\": {\n    \"codec\": {\n      \"name\": \"解码器名\",\n      \"参数名\": \"参数值\"\n    },\n    \"filter\": {\n      \"name\": \"过滤器名\",\n      \"参数名\": \"参数值\",\n      \"codec\": {\n        \"name\": \"解码器名\",\n        \"参数名\": \"参数值\"\n      }\n    },\n    \"output\": {\n      \"name\": \"输出插件名\",\n      \"参数名\": \"参数值\",\n      \"codec\": {\n        \"name\": \"解码器名\",\n        \"参数名\": \"参数值\"\n      }\n    },\n    \"参数名\": \"参数值\"\n  },\n  \"管道2\":{\n  }\n}\n```\n\n> 如果不设置参数可以简化配置\n\n```json\n{\n  \"管道名\": {\n    \"codec\": \"解码器名\",\n    \"filter\": \"过滤器名\",\n    \"output\": \"输出插件名\",\n    \"参数名\": \"参数值\"\n  }\n}\n```\n\n### 自制插件, 简单插件实例\n\n``` python\n# 自制插件必须遵循以下规则\n# 插件所在的目录必须添加到框架配置文件的plugin_path里\n# 插件类型目前只有三种['codec', 'filter', 'output']\n# 插件文件名必须为规则:[zpipe_插件类型_插件名.py]\n# 插件类名必须和插件文件名相同并且继承于[zpipe.plugin_base]\n\n# zpipe_output_test.py\n\nfrom zpipe import plugin_base\n\nclass zpipe_output_test(plugin_base):\n    def plugin_init(self, **kw):\n        '''\n        插件初始化\n        :param kw: 这里接收管道定义的插件参数\n        '''\n        pass\n\n    def plugin_distroy(self):\n        '''\n        插件销毁时\n        '''\n        pass\n\n    def process(self, data):\n        '''\n        插件过程\n        :param data: 收到的数据\n        :return: 结果会顺序传递给下一个插件, 如果是最后一个插件则会返回给管道的调用者\n        '''\n        print('收到数据', data)\n        return data\n\n```\n\n### 内置codec插件\n\n+ raw\n> 只需要调用者发送的数据, 忽略管道接收数据时对数据的打包, 没有任何参数\n\n+ dict\n> 将调用者发送的数据认为是一个dict, 并将它更新到数据的顶层\n\n+ json\n> 将调用者发送的数据认为可以被json.loads函数加载, 结果为dict, 并将它更新到数据的顶层, 参数配置参考json.loads\n\n+ msgpack\n> 将调用者发送的数据认为可以被msgpack.loads函数加载, 结果如果为dict, 会将它更新到数据的顶层, 参数配置参考msgpack.loads\n\n### 内置filter插件\n\n+ default\n\n参数名|参数类型|默认值|说明\n---|:--:|---|---\nremove|str or list||移除指定的数据, 允许链式表达数据位置,如 \"a.b.c\" 表示 del data\\[a]\\[b]\\[c]\n\n### 内置output插件\n\n+ log\n> 日志输出插件\n\n参数名|参数类型|默认值|说明\n---|:--:|---|---\nlog\\_name|str|zpipe\\_output\\_log|日志名\nwrite\\_stream|bool|True|是否输出到流(控制台)\nwrite\\_file|bool|False|是否输出到文件\nfile\\_dir|str|.|输出文件所在的路径, 允许相对路径(相对于框架配置文件的路径)\nlevel|str|debug|日志可见等级(debug,info,warn,error,fatal)\ninterval|int|1|间隔多少天新建一个日志文件\nbackupCount|int|2|保留多少个历史日志文件\ninfo_level|str|日志消息等级(debug,info,warn,error,fatal), 允许从消息内提取, 如 \"raw.\\_\\_level\\_\\_\"\n\n\n### 更新日志\n发布时间|版本|发布说明\n--|:--:|---\n19-04-12 | 0.0.1 | 发布第一版, 所有功能均已实现, 但是插件很少, 允许用户自定义插件, 插件开发简单\n\n- - -\n本项目仅供所有人学习交流使用, 禁止用于商业用途\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/zpipe/",
    "keywords": "",
    "license": "GNU GENERAL PUBLIC LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zpipe",
    "package_url": "https://pypi.org/project/zpipe/",
    "platform": "all",
    "project_url": "https://pypi.org/project/zpipe/",
    "project_urls": {
      "Homepage": "https://pypi.org/project/zpipe/"
    },
    "release_url": "https://pypi.org/project/zpipe/0.0.1/",
    "requires_dist": [
      "msgpack (>=0.6.1)",
      "zlogger"
    ],
    "requires_python": "",
    "summary": "嵌入式管道模块, 类似于logstash",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5133277,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3de0b975179b0ee02be79fa58e1e59ccf9c07fd8e6b9150d4e008b95b045e57f",
          "md5": "bfe0b10aac12e38525d556ecc90c6dc3",
          "sha256": "744615b58efa73175cb8ea9f2285df0ec7bab903438593517fad2df2974817f7"
        },
        "downloads": -1,
        "filename": "zpipe-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bfe0b10aac12e38525d556ecc90c6dc3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24851,
        "upload_time": "2019-04-12T10:05:14",
        "upload_time_iso_8601": "2019-04-12T10:05:14.448770Z",
        "url": "https://files.pythonhosted.org/packages/3d/e0/b975179b0ee02be79fa58e1e59ccf9c07fd8e6b9150d4e008b95b045e57f/zpipe-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3de0b975179b0ee02be79fa58e1e59ccf9c07fd8e6b9150d4e008b95b045e57f",
        "md5": "bfe0b10aac12e38525d556ecc90c6dc3",
        "sha256": "744615b58efa73175cb8ea9f2285df0ec7bab903438593517fad2df2974817f7"
      },
      "downloads": -1,
      "filename": "zpipe-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bfe0b10aac12e38525d556ecc90c6dc3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 24851,
      "upload_time": "2019-04-12T10:05:14",
      "upload_time_iso_8601": "2019-04-12T10:05:14.448770Z",
      "url": "https://files.pythonhosted.org/packages/3d/e0/b975179b0ee02be79fa58e1e59ccf9c07fd8e6b9150d4e008b95b045e57f/zpipe-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}