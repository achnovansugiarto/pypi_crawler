{
  "info": {
    "author": "aboutmydreams",
    "author_email": "aboutmydreams@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![all](img/all.png)\n\n# 什么是 pycapt\n\n[GitHub 欢迎提 pr，如果有bug或新需求 请反馈 issue]()\n\npycapt 是我在处理验证码时编写的一系列图像处理的算法包，你可以使用它来为图像去噪点、干扰线 以及分割验证码，pycapt 封装了一些关于图形矩阵的方法，例如将图片分割为标准化的矩阵、生成您所需要的训练集图片等，有助于您使用深度学习来进行图像识别。\n\npycapt 包括处理验证码和生成验证码两部分，多谢我的好友 [exqlnet](<https://github.com/exqlnet>) [ZhouYingSASA](<https://github.com/ZhouYingSASA>) 的共同帮助 发布 pycapt 1.0.1\n\n### 依赖与安装\n\n```bash\nPillow\nnumpy\n```\n\n```py\npip3 install pycapt\n```\n\n### 目录结构\n\n![frcc0](img/files.png)\n\n## 使用 pycapt 进行验证码图像处理\n\n### 导入\n\n```py\nimport pycapt\nfrom PIL import Image\n```\n\n\n\n### 图像二值化\n\n**two_valve : 二值化方法，必选参数img为图片，可选参数 Threshold** 是灰度阀值，这里可以选择适合的值，默认值是100 .  **返回新处理过的图片**\n\n```py\nimg = Image.open('./img/frcc0.png')\nimg = pycapt.two_value(img,Threshold=100)\nimg.show()\n```\n\n\n\n![frcc0](img/frcc0.png)\n\n![frcc1](img/frcc1.png)\n\n### 处理噪点\n\n**dele_noise ：消除噪点方法，该方法使用的是八领域去噪点法，N是领域异点个数，Z是处理次数，处理次数越多 图形越圆滑**。\n\n```py\nimg = pycapt.dele_noise(img,N=5,Z=2)\nimg.show()\n```\n\n\n\n![frcc2](img/frcc2.png)\n\n### 处理干扰线\n\n**dele_line : 去除干扰线，删除连续的N个竖直像素。配合dele_noise方法使用效果更佳。**\n\n```py\nimg = pycapt.dele_line(img,N=4)\nimg.show()\n```\n\n**配合dele_noise方法使用效果更佳。**\n\n```py\nimg = pycapt.dele_line(img,4)\nimg = pycapt.dele_noise(img,N=4,Z=2)\nimg = pycapt.dele_line(img,3)\nimg = pycapt.dele_noise(img,N=4,Z=2)\nimg = pycapt.dele_line(img,3)\nimg = pycapt.dele_line(img,2)\nimg = pycapt.dele_line(img,1)\nimg.show()\n```\n\n![frcc2](img/frcc3.png)\n\n**想要更好的效果，你还可以先使用转置图片的 tran_90(img) 方法 再次使用去除干扰线的方法，最后再转置回来**\n\n```py\nimg = pycapt.tran_90(img)\nimg.show()\nimg = pycapt.dele_line(img,3)\nimg = pycapt.dele_line(img,2)\nimg = pycapt.dele_line(img,1)\nimg = pycapt.tran_90(img)\nimg.show()\n```\n\n![frcc2](img/frcc4.png)\n\n### 斜体矫正\n\n**斜体矫正的目的是为了更好的分割与识别。**原理是平移，将每一行向左或向右平移不同距离，最后形成矫正的效果。pans就是矫正列表，正左负右平移。pans列表的元素个数需要是图片的高度，例子中图片 height 是40.\n\n**rectify_img(img,pans) 返回新的图片。**\n\n```py\npan = [18, 18, 18, 18, 17, 17, 17,\\\n        16, 16, 16, 15, 15, 15, 15, 14,\\\n        14, 14, 14, 13, 13, 10, 10,\\\n        10, 9, 9, 8, 7, 6, 5, 5, 4, \\\n        4, 4, 4, 4, 3, 1, 0, 0, 0]\nimg = pycapt.rectify_img(img,pans=pan)\nimg.show()\n```\n\n![frcc2](img/frcc5.png)\n\n如果你觉得太难看了，可以提前使用矫正再使用 dele_line 和 dele_noise, 当然亡羊补牢也不太坏。\n\n```py\nimg = pycapt.rectify_img(img,pans=pan)\nimg = pycapt.dele_line(img,3)\nimg = pycapt.dele_line(img,2)\nimg = pycapt.dele_line(img,1)\nimg.show()\n```\n\n![frcc2](img/frcc6.png)\n\n\n\n### 图形分割\n\n**cut_img_to_img_list** 设置单个图片合适长度后切割，返回该长度的切割图片，该长度可以设置的比较大，该方法会在切割图片的两边补白。你可以将这作为一种标准化图片的方法。\n\n```py\nimg = Image.open('1.png')\nimg_list = pycapt.cut_img_to_img_list(img,max_width=30,background=255)\nfor i in img_list:\n    i.show()\n```\n\n![frcc2](img/last.png)\n\n当你使用**深度学习**时，还可以使用 **cut_img_to_mode_list(image,max_width) **来获得标准化的数组。\n\n### 图片裁剪\n\n当你的图片 height 可以压缩时，可以使用 **small_img(img,box)** 来裁剪图片，这样可以减少之后学习的计算量。\n\n例如\n\n## 使用 pycapt 生成验证码训练集\n\n### do_captcha 生成验证码训练集\n\nwidth 验证码图片长度，height 验证码高度，num_of_str 验证码上字符数量 默认4，font 字体大小 默认30，gray_value 灰度值 默认255，font_family 字体文件，在这里可以选择你需要的粗细，样式等，但前提是你电脑上有这种字体。\n\n如果你不知道自己电脑有哪些字体，请点击 [**这里**](<https://www.yuque.com/zhiwa/deepin/ahimr7>) 。\n\n```py\nname,img = pycapt.do_captcha(\n        my_str_list=['A','B','C','D','1','2','3'],\n        width=160,\n        height=40,\n        num_of_str=4,\n        font=30,\n        gray_value=255,\n        font_family='ヒラギノ角ゴシック W8.ttc')\n\nprint(name)\nimg.show()\n\n# output： ['C', 'D', '2', 'A']\n```\n\n![frcc2](img/do.png)\n\n### 增加噪点\n\n**more_noise ：N是加噪率，0 < N < 1，Z为处理次数**\n\n```py\nimg = pycapt.more_noise(img,N=0.5,Z=2)\n```\n\n![frcc2](img/do1.png)\n\n### 偏移\n\n```py\nimg = pycapt.img_pan(img,10,3)\n```\n\n![frcc2](img/do2.png)\n\n### 倾斜\n\n**还是和之前一样 使用 rectify_img** \n\n```py\npan = [18, 18, 18, 18, 17, 17, 17,\\\n        16, 16, 16, 15, 15, 15, 15, 14,\\\n        14, 14, 14, 13, 13, 10, 10,\\\n        10, 9, 9, 8, 7, 6, 5, 5, 4, \\\n        4, 4, 4, 4, 3, 1, 0, 0, 0]\nimg = pycapt.rectify_img(img,pans=pan)\n```\n\n![frcc2](img/do3.png)\n\n### 加去噪点 变平滑\n\n**clear_train_img 相当于 dele_line(line,N) 分别对line消除了N=4，3，2，1 的4次噪点，也就相当于纵向变平滑了**\n\n```py\nimg = pycapt.show_noise_img(img,0.1,1)\nimg = pycapt.dele_noise(img,5,2)\nimg = pycapt.clear_train_img(img)\n```\n\n![frcc2](img/do4.png)\n\n这里 你完全可以使用pycapt生成深度学习验证码的训练集了。\n\n那如果想要更方便点呢？ 请看这里。\n\n### 直接生成训练集的方法\n\ntrain_img 返回训练集图片，my_str_list，你的字符集列表，width height 长度高度，num_of_str 显示在验证码图片上的字符串个数，会从你的 my_str_list 中随机挑选，font 显示的字体大小，xpan ypan 左右与上下随机偏移尺寸，rotate 字符随机旋转尺度，noise_N 加噪率（0 < N < 1），noise_Z 加噪次数，gray_value 背景灰度，默认白色，font_family 字体样式，如果你不知道自己电脑有哪些字体，请点击 [**这里**](<https://www.yuque.com/zhiwa/deepin/ahimr7>) 。\n\n```py\nfilename,img = pycapt.train_img(\n    my_str_list=['A','B','C','D','E'],\n    width=30,\n    height=32,\n    num_of_str=1,\n    font=30,\n    xpan=3,\n    ypan=2,\n    rotate=15,\n    noise_N=0.3,\n    noise_Z=2,\n    gray_value=255,\n    font_family='ヒラギノ角ゴシック W8.ttc')\n```\n\n只要你再写一个循环，**img.save('train_img/{}.png'.format(file_name))** 就可以生成成千上万张训练集图片 获取标签只需要 name = file_name[0] 就可以惹。\n\n![frcc2](img/train.png)\n\n## Last\n\n理论上只要你使用 pycapt 处理图片，调用各方法，并使用 train_img 方法 ,理论上可以解决90%验证码处理和模拟生成问题，欢迎 star pr 和提issue，如果你想更了解其中的原理，点击[这里](https://www.yuque.com/zhiwa/deepin/og0te8)，期望听见你的想法或pr。\n\n### 捐赠\n\n如果有所帮助 [请我喝一碗茶](https://www.yuque.com/zhiwa/deepin/hwnhg0)~\n\n![pay](img/pay.png)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aboutmydreams/pycapt",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pycapt",
    "package_url": "https://pypi.org/project/pycapt/",
    "platform": "",
    "project_url": "https://pypi.org/project/pycapt/",
    "project_urls": {
      "Homepage": "https://github.com/aboutmydreams/pycapt"
    },
    "release_url": "https://pypi.org/project/pycapt/1.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "a library that processes verification codes",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5041789,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca5466aa8ec4d0809ee9271e40455fcad219e08f9a523212c1fc44720197047b",
          "md5": "86cccd05557f24aa35eca2554243059f",
          "sha256": "9893f278229d5dc00a2fd8a9ce7ad5b251b18b298f93d8095eacf04fa810e4ef"
        },
        "downloads": -1,
        "filename": "pycapt-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86cccd05557f24aa35eca2554243059f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14168,
        "upload_time": "2019-03-30T14:31:53",
        "upload_time_iso_8601": "2019-03-30T14:31:53.027731Z",
        "url": "https://files.pythonhosted.org/packages/ca/54/66aa8ec4d0809ee9271e40455fcad219e08f9a523212c1fc44720197047b/pycapt-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba1491bd8199d335c44fe225c044427acfca9d5b60d8df25404a595f65e7ee1b",
          "md5": "5eb45f9967e3ba656d8a75277c7d5d70",
          "sha256": "54b4c9913253b953ab6a0a98c5e8276d6cd42b1a1838ee89aab086ef851d5fa2"
        },
        "downloads": -1,
        "filename": "pycapt-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5eb45f9967e3ba656d8a75277c7d5d70",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7602,
        "upload_time": "2019-03-30T14:31:56",
        "upload_time_iso_8601": "2019-03-30T14:31:56.303453Z",
        "url": "https://files.pythonhosted.org/packages/ba/14/91bd8199d335c44fe225c044427acfca9d5b60d8df25404a595f65e7ee1b/pycapt-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e021122b7db26e697b4302c1487f09cd7c65e2d78a2d9d5c7d52f5a860eb08c",
          "md5": "d4b6bca4c67b30fe15738c453ab8c243",
          "sha256": "ccfbe73b792093fa28a2cfd5a33f11642886ec0836d846dc40831a5a9d6443c6"
        },
        "downloads": -1,
        "filename": "pycapt-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4b6bca4c67b30fe15738c453ab8c243",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17708,
        "upload_time": "2019-04-02T02:54:43",
        "upload_time_iso_8601": "2019-04-02T02:54:43.764078Z",
        "url": "https://files.pythonhosted.org/packages/4e/02/1122b7db26e697b4302c1487f09cd7c65e2d78a2d9d5c7d52f5a860eb08c/pycapt-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9db4a98da33e42e5c4b5fb30bbf8557809621d5c7c82249daafae86127188da",
          "md5": "75b42c30aa43ab9d12499b3a101476ff",
          "sha256": "98629a9bc1125355e5251998361a3c1b76c7ff21c0093a27725747e618a04946"
        },
        "downloads": -1,
        "filename": "pycapt-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "75b42c30aa43ab9d12499b3a101476ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11129,
        "upload_time": "2019-04-02T02:54:45",
        "upload_time_iso_8601": "2019-04-02T02:54:45.446785Z",
        "url": "https://files.pythonhosted.org/packages/e9/db/4a98da33e42e5c4b5fb30bbf8557809621d5c7c82249daafae86127188da/pycapt-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e021122b7db26e697b4302c1487f09cd7c65e2d78a2d9d5c7d52f5a860eb08c",
        "md5": "d4b6bca4c67b30fe15738c453ab8c243",
        "sha256": "ccfbe73b792093fa28a2cfd5a33f11642886ec0836d846dc40831a5a9d6443c6"
      },
      "downloads": -1,
      "filename": "pycapt-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d4b6bca4c67b30fe15738c453ab8c243",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17708,
      "upload_time": "2019-04-02T02:54:43",
      "upload_time_iso_8601": "2019-04-02T02:54:43.764078Z",
      "url": "https://files.pythonhosted.org/packages/4e/02/1122b7db26e697b4302c1487f09cd7c65e2d78a2d9d5c7d52f5a860eb08c/pycapt-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9db4a98da33e42e5c4b5fb30bbf8557809621d5c7c82249daafae86127188da",
        "md5": "75b42c30aa43ab9d12499b3a101476ff",
        "sha256": "98629a9bc1125355e5251998361a3c1b76c7ff21c0093a27725747e618a04946"
      },
      "downloads": -1,
      "filename": "pycapt-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "75b42c30aa43ab9d12499b3a101476ff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11129,
      "upload_time": "2019-04-02T02:54:45",
      "upload_time_iso_8601": "2019-04-02T02:54:45.446785Z",
      "url": "https://files.pythonhosted.org/packages/e9/db/4a98da33e42e5c4b5fb30bbf8557809621d5c7c82249daafae86127188da/pycapt-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}