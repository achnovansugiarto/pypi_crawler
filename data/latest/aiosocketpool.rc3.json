{
  "info": {
    "author": "Roo Sczesnak",
    "author_email": "andrewscz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![Circle CI](https://circleci.com/gh/polyatail/aiosocketpool.svg?style=shield&circle-token=f7f570b230ecf72d3df817cca445c5a28809068a)](https://circleci.com/gh/onecodex/mainline)\n![Black Code Style](https://camo.githubusercontent.com/28a51fe3a2c05048d8ca8ecd039d6b1619037326/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667)\n\n# aiosocketpool\nAn asyncio-compatible socket pool. Simple, compact, easily extended.\n\nIf your application needs to connect to many remote hosts simultaneously (and often), it probably\nmakes sense to keep connections open and re-use them rather than establishing a new connection for\nevery request. Combining an `asyncio` event loop and a socket pool might be the way to go!\n\nBased on [socketpool](https://github.com/benoitc/socketpool).\n\n**Requires Python 3.7 or above.**\n\n## Examples\n\nRun a simple TCP echo server in a background thread, using the `asyncio` library.\n\n```python\nimport asyncio\nimport threading\n\n\n# start a new event loop running in a background thread\ndef run_loop_forever(loop):\n    loop.run_forever()\n\n\nloop = asyncio.new_event_loop()\n\nt = threading.Thread(name=\"BackgroundEventLoop\", target=run_loop_forever, args=[loop], daemon=True)\nt.start()\n\n\n# run a tcp echo server using asyncio in the background event loop\nasync def echo_handler(reader, writer):\n    writer.write(await reader.read(32))\n    await writer.drain()\n    writer.close()\n\n\nasync def echo_server(tcp_port):\n    server = await asyncio.start_server(echo_handler, \"127.0.0.1\", tcp_port)\n    await server.serve_forever()\n\n\nasyncio.run_coroutine_threadsafe(echo_server(12345), loop)\n```\n\nCreate a new TCP connection pool in the main thread, get a connection, and send and receive data.\n\n```python\nfrom aiosocketpool import AsyncConnectionPool, AsyncTcpConnector\n\n\npool = AsyncConnectionPool(\n    factory=AsyncTcpConnector,\n    reap_connections=True,  # a background task will destroy old and idle connections\n    max_lifetime=10,  # connections will remain idle at most 10 seconds\n    max_size=10,  # we will maintain at most 10 idle connections in the pool\n)\n\n\nasync def hello_world():\n    async with pool.connection(host=\"127.0.0.1\", port=12345) as conn:\n        await conn.sendall(b\"hello world\")\n        print(await conn.recv(32))\n\n\nawait hello_world()\n```\n\nCreate a bunch of connections and run them all concurrently.\n\n```python\nloop = asyncio.get_event_loop()\n\ntasks = []\n\nfor _ in range(25):\n    tasks.append(loop.create_task(hello_world()))\n\nloop.run_until_complete(asyncio.gather(*tasks))\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/polyatail/aiosocketpool",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiosocketpool",
    "package_url": "https://pypi.org/project/aiosocketpool/",
    "platform": "",
    "project_url": "https://pypi.org/project/aiosocketpool/",
    "project_urls": {
      "Homepage": "https://github.com/polyatail/aiosocketpool"
    },
    "release_url": "https://pypi.org/project/aiosocketpool/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An asyncio-compatible socket pool",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10224986,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45a8748a18bc751ebf27cb303c88af5de96d69361c28dfdb701fe1c0c2a30f1d",
          "md5": "e203ab87641d15f09858a5cae15c9eca",
          "sha256": "151010a2118fefe2ad0c7d6bcca61fd27243b00f8317781c05660a6cdda8c849"
        },
        "downloads": -1,
        "filename": "aiosocketpool-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e203ab87641d15f09858a5cae15c9eca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6263,
        "upload_time": "2019-12-13T19:59:14",
        "upload_time_iso_8601": "2019-12-13T19:59:14.002363Z",
        "url": "https://files.pythonhosted.org/packages/45/a8/748a18bc751ebf27cb303c88af5de96d69361c28dfdb701fe1c0c2a30f1d/aiosocketpool-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3fd37656e834221f71c6ed5816f86609be22da5977667056455c37ced4c144d",
          "md5": "72d497bb7b472858f783ddf8702bd915",
          "sha256": "530117a25ff8f2fb15492521ab2331b8a5ab0c46d857f25a98ec4845eddb56e1"
        },
        "downloads": -1,
        "filename": "aiosocketpool-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "72d497bb7b472858f783ddf8702bd915",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6686,
        "upload_time": "2019-12-13T20:06:07",
        "upload_time_iso_8601": "2019-12-13T20:06:07.315585Z",
        "url": "https://files.pythonhosted.org/packages/a3/fd/37656e834221f71c6ed5816f86609be22da5977667056455c37ced4c144d/aiosocketpool-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "879f283017b10f99afe095f0a103adc8c8b82bcc46d58f82023b4ec22bafe54a",
          "md5": "aeeb289130397cbd97c0e6c7253106e9",
          "sha256": "8e649108f63001679ddea7158909e6fe755403b39755f3587edc0293f0ff07ba"
        },
        "downloads": -1,
        "filename": "aiosocketpool-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "aeeb289130397cbd97c0e6c7253106e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7382,
        "upload_time": "2021-05-01T01:11:36",
        "upload_time_iso_8601": "2021-05-01T01:11:36.505219Z",
        "url": "https://files.pythonhosted.org/packages/87/9f/283017b10f99afe095f0a103adc8c8b82bcc46d58f82023b4ec22bafe54a/aiosocketpool-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "879f283017b10f99afe095f0a103adc8c8b82bcc46d58f82023b4ec22bafe54a",
        "md5": "aeeb289130397cbd97c0e6c7253106e9",
        "sha256": "8e649108f63001679ddea7158909e6fe755403b39755f3587edc0293f0ff07ba"
      },
      "downloads": -1,
      "filename": "aiosocketpool-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "aeeb289130397cbd97c0e6c7253106e9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7382,
      "upload_time": "2021-05-01T01:11:36",
      "upload_time_iso_8601": "2021-05-01T01:11:36.505219Z",
      "url": "https://files.pythonhosted.org/packages/87/9f/283017b10f99afe095f0a103adc8c8b82bcc46d58f82023b4ec22bafe54a/aiosocketpool-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}