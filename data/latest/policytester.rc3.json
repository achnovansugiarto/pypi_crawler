{
  "info": {
    "author": "",
    "author_email": "Erik Brakkee <erik@brakkee.org>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Testing",
      "Topic :: System :: Networking",
      "Topic :: System :: Networking :: Firewalls"
    ],
    "description": "\n\n# Kubernetes Network Policy Tester\n\nNetwork security is often overlooked in Kubernetes. Without network policies \nkubernetes deployments are basically identical to a traditional infrastructure \nwithout firewalls. Network policies in Kubernetes\ncan provide the required network segmentation, see\n[the introduction post](https://brakkee.org/site/index.php/2022/07/23/securing-network-communication-on-kubernetes-using-network-policies/).\n\nHowever, network policies must be verified since it is easy to make a mistake in configuration. \nThis is \nwhere the policy tester comes in. The tool is written in python and uses existing pods \nrunning in a kubernetes cluster to verify network commmunication. It does this by \nattaching an ephemeral container to an existing pod so it can verify communications from\nthis pod to other pods and the internet. Ephemeral contains are a beta feature since \nkubernetes 1.23 which allows to add new containers to existing pods. The main purpose of \nthis is for debugging (testing), so these containers are sometimes also called debug\ncontainers. \n\nThis approach allows to test network communication \nwithin the cluster and also from within the cluster to the internet. The advantage of \nusing ephemeral containers is that it uses existing pods, so the testing environment is \nidentical to the actual environmnet, since no separate test pods are created. Therefore,\nthe tests are representative of the actual situation. The only thing that cannot be tested\nare rules from traffic coming in from outside the cluster to the cluster.\n\n## Installation \n\n```angular2html\npip install policytester\n```\n\n## Usage\n\n```angular2html\n# prepare pods by adding debug containers to them\npolicytester prepare tests.yaml\n\n# execute tests for pods\npolicytester execute tests.yaml\n\n# delete pods that got debug containers attached in any previous prepare steps.\npolicytester cleanup tests.yaml\n```\n\nThe separation of prepare, execute, and cleanup allows for tests toe be rerun without\nhaving to wait for instrumentation of pods. \n\nThe current version of the policy tester uses the default kubectl context to connect to.\nFuture versions of the tool can provide ways to explicitly define a connection to a \ncluster. \n\n## Example\n\n### Verify that a pod can reach the java maven repository but (most likely) not any other hosts \n\n```angular2html\n\npods:\n  - name: httpd-wamblee-org\n    namespace: exposure\n    podname: httpd-wamblee-org\n    \naddresses:\n  - name: internet\n    hosts:\n      - github.com\n      - google.com\n  - name: maven-repo\n    hosts:\n      - repo1.maven.org\n\nconnections:\n  - name: internet\n    addresses:\n      - internet\n    ports:\n      - port: 80\n      - port: 443\n  - name: maven-repo\n    addresses:\n      - maven-repo\n    ports:\n      - port: 80\n      - port: 443\n\nrules:\n  - name: internet-access\n    from: \n      - httpd-wamblee-org\n    allowed:\n      - maven-repo\n    denied:\n      - internet\n```\n\nA more complete example is [here](policytests.yaml).\n\n## Structure of the input file \n\nThe example shows the structure of an input file. First, we need to define the pods\nthat we will use. This is done by the following attributes:\n* *name*: a symbolic name of the pod by which it can be referred to in the connections section, \n  or as pod in the `from` part of a rule. \n* *namespace*: the namespace of the pod\n* *podname*: the string that the actual pod name must start with. For instance for deployments,\n  pod names are composed of the deployment name followed by a unique id. \n\nAt this moment no other ways of identifying a pod are possible. Future \nversions of the tool could support podSelectors in the same syntax as kubernetes does\nin for instance deployment yaml files. Based on a pod identification, a single pod that\nmatches the specification is chosen. This is to avoid a combinatoric explosion of tests. \n\nNext, addresses must be defined. Each address has the following fields: \n* *name*: a symbolic name of the address by which it can be referred to in the\n  connections section. \n* *hosts*: A list of host names or IP adddresses\n\nAddresses are simply fixed IP addresses or hostnames.\nThey are an alternative to a pod address which is simply the cluster IP of a pod. \nThe difference between a pod and address is that a pod can not only be used as the \ntarget (server side) of a network check but also as the client part from which a connection\nto a server is established. The names of addresses and pods may not conflict. \nIn the example above, the `internet` \naddress is used which refers to an address, but this could also have been the `name` of \na pod defined in the pods section. \n\nThe next section defines the connections that can be tested as a combination of pod/address\nin the addresses field, and ports:\n* *name*: a symbolic name of the connection by which it can be referenced in the \n  rules section of by other connection objects. \n* *addresses*: A list of names of pods or addresses\n* *ports*: A list of ports that must be tested. Each port is defined by its `port` which \n  defines the numeric port and by an optional `type` (UDP or TCP) which by default is \n  TCP. \n\nFinally, the rules section describes from which source pods, the\nconnections are allowed or denied. In the example above, we specify that the \n`httpd-wamblee-org` pod can connect to the maven repo at ports 80 and 443, but that \nit cannot connect to github.com and google.com: \n* *name*: the name of the rule\n* *from*: pod references. Because of pod groups (see later) \n  this can resolve to more than one pod\n* *allowed*: A list of connections that are allowed.\n* *denied*: A list of connections that are denied. \n\n\n### Pod groups\n\nSince it is annoying to repeat the same rules, it is possible to define\ngroups of pods in the pods section. These pod groups may be referenced just like\nany other pod or address using its `name`.\n\n```angular2html\npods:\n  - name: httpd-wamblee-org\n    namespace: exposure\n    podname: httpd-wamblee-org\n  - name: httpd-brakkee-org\n    namespace: exposure\n    podname: httpd-brakkee-org\n  # pod group\n  - name: all-exposure-pods\n    pods:\n      - httpd-wamblee-org # refers to earlier pod name\n      - httpd-brakkee-org # same...\n```\n\n### Address groups\n\nSimilar to pod groups address groups can be defined. \n\n```angular2html\naddresses:\n  - name: internet\n    hosts:\n      - github.com\n      - google.com \n  - name: dns\n    hosts:\n      - 192.168.178.1\n      - 8.8.8.8\n  # address group\n  - name: alladdresses\n    addresses:\n      - internet\n      - dns\n```\n\n### Protocols\n\nThe default protocl is TCP, but UDP may also be specified using the `type` field. \nTCP may also be explicitly specified in this way but it is default. Note however, that \nUDP tests are unreliable. This is because of the nature of UDP. To work around this, a \nfuture version of this tool could use protocol specific tests for UDP based protocols. \n\n```angular2html\nconnections\n  - name: dns\n    addresses:\n    - dns\n    ports:\n      - port: 53\n        type: TCP\n      - port: 53\n        type: UDP\n```\n\n## Test output\n\nThe test will output a `junit.xml` file which is suitable for continuous integration.\nThe test will also show on screen output.\n\n## Under the hood\n\n### Prepare\n\nIn the prepare step, the policy tester examines all rules and identifies the pod\nspecifications that are referenced in the `from` parts of the rules. From each \npod specification, the pods that match the specification are looked up. If one of \nthe pods that is found already contains a debug contqiner than that pod is used. \nOtherwise, the debug container is added to one of these pods, so-called instrumenting\nthe pod for test. The policy tester only uses\nthis single pod for testing even when more than one eligble pod was found. \nThis is to avoid a combinatoric explosion in testing, and \nalso assumes that the network policies are such that it equally effects all pods in \nfor the same pod specification. \n\nEach pod is given a specific label to identify it \nas a pod to which a debug container is added. The label is set before the debug container\nis added to make sure we can never have pods with debug containers but without a label. \nThis label is used in the cleanup phase to delete pods. \n\n### Execute\n\nIn the execute phase all rules are processed. This means that all source pods \nmentioned in the `from` part of the rule are looked up and for each target connection\nin the `allowed` and `denied` sections a command is run in the ephemeral container\nthat verifies network access. This can be a `netcat` or `nmap` command. \n\n### Cleanup\n\nIn the cleanup phase, the policy tester simply deletes the pods with debug containers \nusing the label that was added. \n\n## Caveats\n\n* incoming network connections cannot be tested by this tool\n* UDP tests are, for obvious reasons, not really possible in a generic way. Even though\n  policytester supports it, these tests are unreliabnle\n* the cleanup phase simply deletes instrumented pods. Your setup must be able to handle\n  this. Use this tool on a staging production-like environmnet or use with greatest\n  care on a production system. In particular, downtime can occur if you are testing \n  network access from deployments and replicasets with replica count 1. \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "kubernetes,network,policy,network policy",
    "license": " Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!)  The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "policytester",
    "package_url": "https://pypi.org/project/policytester/",
    "platform": null,
    "project_url": "https://pypi.org/project/policytester/",
    "project_urls": {
      "Homepage": "https://github.com/ErikEngerd/policytester",
      "documentation": "https://github.com/ErikEngerd/policytester#readme",
      "source": "https://github.com/ErikEngerd/policytester.git"
    },
    "release_url": "https://pypi.org/project/policytester/0.1.4/",
    "requires_dist": [
      "kubernetes (>=23.6.0)",
      "cerberus (>=1.3.4)",
      "pyyaml (>=6.0)",
      "attrdict (>=2.0.1)",
      "tomli ; python_version < \"3.11\"",
      "black ; extra == 'dev'",
      "bumpver ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "pip-tools ; extra == 'dev'",
      "pytest ; extra == 'dev'"
    ],
    "requires_python": ">=3.8",
    "summary": "Test kubernetes network policies",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14702728,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ba58f8db4bbfa55dcb6606f549d101d7d50a9b581542889ad8554ad8adb6753",
          "md5": "5ef85d24991a8145f7e9e3db534bdab0",
          "sha256": "af2f552a4ccba13cd46d2a28c4ed0c388a5fe50bbb50a82b9f3905aea444c8b6"
        },
        "downloads": -1,
        "filename": "policytester-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ef85d24991a8145f7e9e3db534bdab0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 24110,
        "upload_time": "2022-08-08T19:27:14",
        "upload_time_iso_8601": "2022-08-08T19:27:14.070652Z",
        "url": "https://files.pythonhosted.org/packages/3b/a5/8f8db4bbfa55dcb6606f549d101d7d50a9b581542889ad8554ad8adb6753/policytester-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ade84ee07aba883ed446a971a597b760f646f82d1dfc7929a083845da8f8971b",
          "md5": "2b0c0b0fabcc55bc35e53fc59b81032b",
          "sha256": "a26efa82649fd520bb195974f34a27df036d087a3a74ae46601850b731984a8a"
        },
        "downloads": -1,
        "filename": "policytester-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2b0c0b0fabcc55bc35e53fc59b81032b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27112,
        "upload_time": "2022-08-08T19:27:16",
        "upload_time_iso_8601": "2022-08-08T19:27:16.119571Z",
        "url": "https://files.pythonhosted.org/packages/ad/e8/4ee07aba883ed446a971a597b760f646f82d1dfc7929a083845da8f8971b/policytester-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fcfc2cdbc73b395d0613706bce32d7c7decd5bead181525233f7fd3f26d1936",
          "md5": "643ca5aa6abe0cbd3bd48c2a22833165",
          "sha256": "f020570c9e44d8bf43158bfb7f279984a665b3f94fe3ca83677728f091ef7988"
        },
        "downloads": -1,
        "filename": "policytester-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "643ca5aa6abe0cbd3bd48c2a22833165",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 27343,
        "upload_time": "2022-08-09T13:52:35",
        "upload_time_iso_8601": "2022-08-09T13:52:35.648065Z",
        "url": "https://files.pythonhosted.org/packages/2f/cf/c2cdbc73b395d0613706bce32d7c7decd5bead181525233f7fd3f26d1936/policytester-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd4c7ed36e57ded644b0ca2d84bb8f66b4675b8d99662fb8fe2b785183e1514c",
          "md5": "d9bd790f795a51d164d34ebebfa4668d",
          "sha256": "cf7cb5c0fe39ff5c24857f41858a79f33fc29ed6e570fd4a04f35763a7b38d4c"
        },
        "downloads": -1,
        "filename": "policytester-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d9bd790f795a51d164d34ebebfa4668d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 29551,
        "upload_time": "2022-08-09T13:52:38",
        "upload_time_iso_8601": "2022-08-09T13:52:38.423639Z",
        "url": "https://files.pythonhosted.org/packages/cd/4c/7ed36e57ded644b0ca2d84bb8f66b4675b8d99662fb8fe2b785183e1514c/policytester-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b4d97da98f9388e097ff22845a63c2494522dc6e7d63299f2f6e61f4b1df46b",
          "md5": "4172f3aad2dee15a7d69fda55fb245ec",
          "sha256": "1bf7477da837fd881b9976642a75341210239a528b385d767e5460819d97923c"
        },
        "downloads": -1,
        "filename": "policytester-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4172f3aad2dee15a7d69fda55fb245ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 27332,
        "upload_time": "2022-08-09T14:00:56",
        "upload_time_iso_8601": "2022-08-09T14:00:56.043706Z",
        "url": "https://files.pythonhosted.org/packages/1b/4d/97da98f9388e097ff22845a63c2494522dc6e7d63299f2f6e61f4b1df46b/policytester-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ceb7495745556c1160785b964c0f74a8b61283dc6e3983583e9276cff499038",
          "md5": "703a841ff2a9689c23cda5b74cd36b21",
          "sha256": "86a05d630d9e46b891f7b7e5b6872839847fc4ada2f0c69544d2831831b4cb81"
        },
        "downloads": -1,
        "filename": "policytester-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "703a841ff2a9689c23cda5b74cd36b21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 29527,
        "upload_time": "2022-08-09T14:00:58",
        "upload_time_iso_8601": "2022-08-09T14:00:58.423449Z",
        "url": "https://files.pythonhosted.org/packages/2c/eb/7495745556c1160785b964c0f74a8b61283dc6e3983583e9276cff499038/policytester-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b4d97da98f9388e097ff22845a63c2494522dc6e7d63299f2f6e61f4b1df46b",
        "md5": "4172f3aad2dee15a7d69fda55fb245ec",
        "sha256": "1bf7477da837fd881b9976642a75341210239a528b385d767e5460819d97923c"
      },
      "downloads": -1,
      "filename": "policytester-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4172f3aad2dee15a7d69fda55fb245ec",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 27332,
      "upload_time": "2022-08-09T14:00:56",
      "upload_time_iso_8601": "2022-08-09T14:00:56.043706Z",
      "url": "https://files.pythonhosted.org/packages/1b/4d/97da98f9388e097ff22845a63c2494522dc6e7d63299f2f6e61f4b1df46b/policytester-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ceb7495745556c1160785b964c0f74a8b61283dc6e3983583e9276cff499038",
        "md5": "703a841ff2a9689c23cda5b74cd36b21",
        "sha256": "86a05d630d9e46b891f7b7e5b6872839847fc4ada2f0c69544d2831831b4cb81"
      },
      "downloads": -1,
      "filename": "policytester-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "703a841ff2a9689c23cda5b74cd36b21",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 29527,
      "upload_time": "2022-08-09T14:00:58",
      "upload_time_iso_8601": "2022-08-09T14:00:58.423449Z",
      "url": "https://files.pythonhosted.org/packages/2c/eb/7495745556c1160785b964c0f74a8b61283dc6e3983583e9276cff499038/policytester-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}