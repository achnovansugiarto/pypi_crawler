{
  "info": {
    "author": "kernelci.org",
    "author_email": "kernelci@groups.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
      "Operating System :: OS Independent",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: C",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Testing"
    ],
    "description": "# Welcome to KernelCI\n\nThe KernelCI project is dedicated to testing the upstream Linux kernel.  Its\nmission statement is defined as follows:\n\n> To ensure the quality, stability and long-term maintenance of the Linux\n> kernel by maintaining an open ecosystem around test automation practices and\n> principles.\n\nThe main instance of KernelCI is available on\n[kernelci.org](https://kernelci.org).\n\nThere is also a separate instance used for KernelCI development available on\n[staging.kernelci.org](https://staging.kernelci.org), see [Development\nworkflow](doc/staging.md) for all the details about it.\n\nThis repository provides core functions to monitor upstream Linux kernel\nbranches, build many kernel variants, run tests, run bisections and schedule\nemail reports.\n\nIt is also possible to set up an independent instance to build any arbitrary\nkernel and run any arbitrary tests.\n\nYou can find some more general information about the KernelCI project on the\n[wiki](https://github.com/kernelci/kernelci-doc/wiki/KernelCI).\n\n\n## User guide\n\nKernelCI users will typically want to add their kernel branch to be monitored,\nconnect their lab or send results from their own existing CI system.  The pages\nbelow are a work-in-progress to cover all these topics:\n\n* [Using LAVA with KernelCI](doc/lava.md)\n\n\n## Command line tools\n\nAll the steps of the KernelCI pipeline are implemented with portable command\nline tools.  They are used in [Jenkins pipeline\njobs](https://github.com/kernelci/kernelci-jenkins/tree/master/jobs) for\nkernelci.org, but can also be run by hand in a shell or integrated with any CI\nenvironment.  The `kernelci/build-base` Docker image comes with all the\ndependencies needed.\n\n**The available command line tools are:**\n\n* **[`kci_build`](doc/kci_build.md)** to get the kernel source code, create a\n  config file, build kernels and push them to a storage server.\n\n* **[`kci_test`](doc/kci_test.md)** to generate and submit test definitions in\n  an automated test lab.\n\n* **[`kci_rootfs`](doc/kci_rootfs.md)** to build a CPU specific rootfs image\n  for given OS variant and push them to a storage server.\n\n**Other command line tools are being worked on** to replace the current legacy\nimplementation which is still tied to Jenkins or hard-coded in shell scripts:\n\n* **`kci_data` (WIP)** to submit KernelCI data to a database and retrieve it.\n\n* **`kci_bisect` (WIP)** to run KernelCI automated bisections.\n\n* **`kci_email` (WIP)** to generate an email report with test results.\n\n\n## Configuration files\n\nAll the builds are configured in\n[`build-configs.yaml`](https://github.com/kernelci/kernelci-core/blob/master/build-configs.yaml),\nwith the list of branches to monitor and which kernel variants to build for\neach of them.\n\nThen all the tests are configured in\n[`test-configs.yaml`](https://github.com/kernelci/kernelci-core/blob/master/test-configs.yaml)\nwith the list of devices, test suites and which tests to run on which devices.\n\nDetails for the format of these files can be found on the wiki pages for [build\nconfigurations](https://github.com/kernelci/kernelci-doc/wiki/Build-configurations)\nand [test\nconfigurations](https://github.com/kernelci/kernelci-doc/wiki/Test-configurations).\n\n\n## Python package on PyPI\n\nThe [`kernelci` package on PyPI](https://pypi.org/project/kernelci/) contains\nall the modules from the `kernelci` directory as well as the `kci_*` command\nline tools.  This provides the core functions of KernelCI, to parse YAML\nconfiguration and perform each step of the pipeline such as building kernels,\nrunning tests and sending results to a database.\n\n\n## Dockerfiles\n\nEach step of the KernelCI Pipeline can be run in a Docker container.  On\n[kernelci.org](https://kernelci.org), this is done in Jenkins jobs.  The Docker\nimages used by these containers are built from `jenkins/dockerfiles` and pushed\nto the [`kernelci Docker\nrepositories`](https://cloud.docker.com/u/kernelci/repository/list).\n\n\n## Test templates\n\nThe majority of [kernelci.org](https://kernelci.org) tests get run in\n[LAVA](https://lavasoftware.org/), although this is not a requirement.  Each\nLAVA test is generated using template files which can be found in the\n[`templates`](https://github.com/kernelci/kernelci-core/tree/master/templates)\ndirectory.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kernelci/kernelci-core",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kernelci",
    "package_url": "https://pypi.org/project/kernelci/",
    "platform": "",
    "project_url": "https://pypi.org/project/kernelci/",
    "project_urls": {
      "Homepage": "https://github.com/kernelci/kernelci-core"
    },
    "release_url": "https://pypi.org/project/kernelci/1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "KernelCI core functions",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8014971,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a36b0fee50ff4bae5f7f3267cb12fb06e5f2391ab517870806be79bbd16bdbc3",
          "md5": "db98703be942f7f68035bc119fafd995",
          "sha256": "3b752db70bb681cecff9287f8f047c063ba7a7e000a98699ef0ed5f9ef15ce58"
        },
        "downloads": -1,
        "filename": "kernelci-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db98703be942f7f68035bc119fafd995",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 55543,
        "upload_time": "2020-07-16T10:47:17",
        "upload_time_iso_8601": "2020-07-16T10:47:17.315966Z",
        "url": "https://files.pythonhosted.org/packages/a3/6b/0fee50ff4bae5f7f3267cb12fb06e5f2391ab517870806be79bbd16bdbc3/kernelci-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "139fc2269502a31cefd303f4fb0112aa2cf6b77a7b2f118f19988fc5a1c3162e",
          "md5": "ade726626c27c1289cf9d1777bde7391",
          "sha256": "843d294a1f09357d039893c0cb7b06fdd854e36e3ce8c1897abd4c87cf01e9ba"
        },
        "downloads": -1,
        "filename": "kernelci-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ade726626c27c1289cf9d1777bde7391",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34087,
        "upload_time": "2020-07-16T10:47:19",
        "upload_time_iso_8601": "2020-07-16T10:47:19.661563Z",
        "url": "https://files.pythonhosted.org/packages/13/9f/c2269502a31cefd303f4fb0112aa2cf6b77a7b2f118f19988fc5a1c3162e/kernelci-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5a842e1a37ef25749ca3824d93df616bab116befb0bced37d7ff6a1b9b0b1c5",
          "md5": "a5e8b11ddb993a97913da367bbf8992a",
          "sha256": "19168f49a056ad59096e82123e8770c639ac6a62bfe0a66c813fa39e00f83c6f"
        },
        "downloads": -1,
        "filename": "kernelci-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a5e8b11ddb993a97913da367bbf8992a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 41003,
        "upload_time": "2020-08-21T21:16:14",
        "upload_time_iso_8601": "2020-08-21T21:16:14.371706Z",
        "url": "https://files.pythonhosted.org/packages/f5/a8/42e1a37ef25749ca3824d93df616bab116befb0bced37d7ff6a1b9b0b1c5/kernelci-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f5a842e1a37ef25749ca3824d93df616bab116befb0bced37d7ff6a1b9b0b1c5",
        "md5": "a5e8b11ddb993a97913da367bbf8992a",
        "sha256": "19168f49a056ad59096e82123e8770c639ac6a62bfe0a66c813fa39e00f83c6f"
      },
      "downloads": -1,
      "filename": "kernelci-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a5e8b11ddb993a97913da367bbf8992a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 41003,
      "upload_time": "2020-08-21T21:16:14",
      "upload_time_iso_8601": "2020-08-21T21:16:14.371706Z",
      "url": "https://files.pythonhosted.org/packages/f5/a8/42e1a37ef25749ca3824d93df616bab116befb0bced37d7ff6a1b9b0b1c5/kernelci-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}