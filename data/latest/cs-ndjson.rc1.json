{
  "info": {
    "author": "Cameron Simpson",
    "author_email": "cs@cskk.id.au",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Utilities for working with newline delimited JSON (NDJSON) files.\n\n*Latest release 20211208*:\nInitial PyPI release.\n\n## Function `append_ndjson(arg, *a, **kw)`\n\nAppend an iterable of objects to a file as newline delimited JSON.\n\n## Function `scan_ndjson(arg, *a, **kw)`\n\nRead a newline delimited JSON file, yield instances of `dictclass`\n(default `dict`, otherwise a class which can be instantiated\nby `dictclass(a_dict)`).\n\n`error_list` is an optional list to accrue `(lineno,exception)` tuples\nfor errors encountered during the scan.\n\n## Class `UUIDNDJSONMapping(cs.obj.SingletonMixin,cs.mappings.IndexedSetMixin)`\n\nA subclass of `IndexedSetMixin` which maintains records\nfrom a newline delimited JSON file.\n\n### Method `UUIDNDJSONMapping.__init__(self, filename, dictclass=<class 'cs.mappings.UUIDedDict'>, create=False)`\n\nInitialise the mapping.\n\nParameters:\n* `filename`: the file containing the newline delimited JSON data;\n  this need not yet exist\n* `dictclass`: a optional `dict` subclass to hold each record,\n  default `UUIDedDict`\n* `create`: if true, ensure the file exists\n  by transiently opening it for append if it is missing;\n  default `False`\n\n### Method `UUIDNDJSONMapping.add_backend(self, record)`\n\nAppend `record` to the backing file.\n\n### Method `UUIDNDJSONMapping.rewrite_backend(self)`\n\nRewrite the backing file.\n\nBecause the record updates are normally written in append mode,\na rewrite will be required every so often.\n\n### Method `UUIDNDJSONMapping.scan(self)`\n\nScan the backing file, yield records.\n\n## Function `write_ndjson(arg, *a, **kw)`\n\nTranscribe an iterable of objects to a file as newline delimited JSON.\n\n# Release Log\n\n\n\n*Release 20211208*:\nInitial PyPI release.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/cameron_simpson/css/commits/all",
    "keywords": "python2,python3",
    "license": "GNU General Public License v3 or later (GPLv3+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cs.ndjson",
    "package_url": "https://pypi.org/project/cs.ndjson/",
    "platform": "",
    "project_url": "https://pypi.org/project/cs.ndjson/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/cameron_simpson/css/commits/all"
    },
    "release_url": "https://pypi.org/project/cs.ndjson/20211208/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "utilities for working with newline delimited JSON (NDJSON) files",
    "version": "20211208",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12243159,
  "releases": {
    "20211208": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34946bd5963399b6bdb2b5d63d795e705f2148ceb34f82d17cc5d84e691743e5",
          "md5": "d2be0ab693fa4e2d13b1a74dda1cc23e",
          "sha256": "fee83178551a62ab7a98f8a9c4f1adf9a3aff52a4eca118887c9e3c7b487bcd7"
        },
        "downloads": -1,
        "filename": "cs.ndjson-20211208.tar.gz",
        "has_sig": false,
        "md5_digest": "d2be0ab693fa4e2d13b1a74dda1cc23e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3733,
        "upload_time": "2021-12-08T09:37:39",
        "upload_time_iso_8601": "2021-12-08T09:37:39.649549Z",
        "url": "https://files.pythonhosted.org/packages/34/94/6bd5963399b6bdb2b5d63d795e705f2148ceb34f82d17cc5d84e691743e5/cs.ndjson-20211208.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34946bd5963399b6bdb2b5d63d795e705f2148ceb34f82d17cc5d84e691743e5",
        "md5": "d2be0ab693fa4e2d13b1a74dda1cc23e",
        "sha256": "fee83178551a62ab7a98f8a9c4f1adf9a3aff52a4eca118887c9e3c7b487bcd7"
      },
      "downloads": -1,
      "filename": "cs.ndjson-20211208.tar.gz",
      "has_sig": false,
      "md5_digest": "d2be0ab693fa4e2d13b1a74dda1cc23e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3733,
      "upload_time": "2021-12-08T09:37:39",
      "upload_time_iso_8601": "2021-12-08T09:37:39.649549Z",
      "url": "https://files.pythonhosted.org/packages/34/94/6bd5963399b6bdb2b5d63d795e705f2148ceb34f82d17cc5d84e691743e5/cs.ndjson-20211208.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}