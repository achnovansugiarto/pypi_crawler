{
  "info": {
    "author": "Victor Elceaninov & Dorin Musteata",
    "author_email": "victor.elceaninov@ebs-integrator.org, dorin.musteata@ebs-integrator.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Storage Service\n\n**Storage Service** is a Django + DRF package that help to work with model. \nMain advantage of this class is to provide **bulk** operations over the model data \nand upsert for single object with M2M relations. \n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install storage-service.\n\n```bash\npip install storage_service\n```\n\n## Usage\n\n```python\nfrom storage_service.storage import StorageService\n\nfrom blogs.helpers import BlogHelper  # optional\nfrom blogs.serializers import BlogSerializer  # drf package\n\n\nclass BlogService(StorageService):\n    def __init__(self):\n        super().__init__()\n\n        self.helper = BlogHelper  # optional\n\n        self.model = BlogSerializer.Meta.model\n\n        self.create_serializer_class = BlogSerializer\n        self.get_serializer_class = BlogSerializer\n\n        self.unique_identifier: str = 'pk'  # required unique model field\n        self.unique_identifiers: list = []  # in case when you need more unique model fiedls\n```\n\n## Methods\n* `def serialize(self, entities, many=False):` - helps deserialize list of objects to dict.\n\n\n* `def get_next_id(self):` - returns next model primary key.\n\n\n* `def get_by(self, key: str = '', value=None, serialize=True):` - helps to retrieve \nmodel data by provided **key** & **value** parameters. If **serialize** is set to `True` then \nmethod will return deserialized  model data. Otherwise will be returned object.\n\n\n* `def get_pk(self, pk: int = 0, serialize=False):` - helps to retrieve \nmodel data by provided **pk** value. If **serialize** is set to `True` then \nmethod will return deserialized  model data. Otherwise will be returned object.\n\n\n* `def delete_by(self, key: str = '', value=None):` - helps to delete \nmodel data by provided **key** & **value** parameters.\n\n\n* `def set_identifiers(self, data)` - is helper method for bulk type & upsert methods.\nMethod to add identifiers as dict and to remove identifiers as default element.\n\n\n* `def indexed(elements=None, index: int = 0, retrieve: bool = False):` - get and / or \nretrieve element at index.\n\n\n* `def upsert(self, data, parameters=None, many_to_many_clear: bool = True):` - method \nto upsert a single object. Supporting M2M relations. Based on \n`self.unique_identifier` & `self.unique_identifiers`.\n\n\n* `def bulk_upsert(self, data, parameters=None, many_to_many_clear: bool = True)` - method\nto bulk upsert multiple objects. Supporting M2M relations. Based on \n`self.unique_identifier` & `self.unique_identifiers`.\n\n\n* `def bulk_delete(self, data)` - method to bulk delete multiple objects.\n\n\n* `def bulk_get_or_create(self, data):` - method to bulk get or create multiple objects.\n\n\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ebs-integrator/storage-service",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "storage-service",
    "package_url": "https://pypi.org/project/storage-service/",
    "platform": "",
    "project_url": "https://pypi.org/project/storage-service/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ebs-integrator/storage-service/issues",
      "Homepage": "https://github.com/ebs-integrator/storage-service"
    },
    "release_url": "https://pypi.org/project/storage-service/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Storage Service is a Django + DRF package that help to work with model.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10185942,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d3cd41236f8e1455b15c99a623d8d643d82bad4cbc6f37b44cc9a7bba9ded46",
          "md5": "e908c206adec1828fc4bd54103023248",
          "sha256": "bf109a9acef3d42c2448012e9021373806da5330af35eaf3f067a6bd925add23"
        },
        "downloads": -1,
        "filename": "storage_service-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e908c206adec1828fc4bd54103023248",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4490,
        "upload_time": "2021-04-26T13:42:11",
        "upload_time_iso_8601": "2021-04-26T13:42:11.301639Z",
        "url": "https://files.pythonhosted.org/packages/1d/3c/d41236f8e1455b15c99a623d8d643d82bad4cbc6f37b44cc9a7bba9ded46/storage_service-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd5db98171a8f03b7ba09f56841a1fcdaf1a5a6b6ed6dabd8d4feb5b1cc4f9d9",
          "md5": "ac0005152e9ae0efc7f5e708a349fce8",
          "sha256": "64ec09c5cdae85585e1d77f1d35b168c75e63e2b4f1923b5f18bc30219692066"
        },
        "downloads": -1,
        "filename": "storage-service-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ac0005152e9ae0efc7f5e708a349fce8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4229,
        "upload_time": "2021-04-26T13:42:12",
        "upload_time_iso_8601": "2021-04-26T13:42:12.535904Z",
        "url": "https://files.pythonhosted.org/packages/cd/5d/b98171a8f03b7ba09f56841a1fcdaf1a5a6b6ed6dabd8d4feb5b1cc4f9d9/storage-service-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce3b06f00274eb471acab49d73a93c9a669852513cab5666f161aa51841bd516",
          "md5": "4b59cd4052397248503a4128ab9ec0c8",
          "sha256": "bc8344f7d851d21abae43dc1cd035403159a8674fbd83bd0b4161b224d25f27a"
        },
        "downloads": -1,
        "filename": "storage_service-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b59cd4052397248503a4128ab9ec0c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5475,
        "upload_time": "2021-04-27T15:34:29",
        "upload_time_iso_8601": "2021-04-27T15:34:29.224444Z",
        "url": "https://files.pythonhosted.org/packages/ce/3b/06f00274eb471acab49d73a93c9a669852513cab5666f161aa51841bd516/storage_service-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "383c0ec25923324e33e5ba3449441b22b6bea1a1f324a781e3ee161e91ca2b66",
          "md5": "8c15f17237c7985d2bf286bdb29e2a52",
          "sha256": "562d1869f7e23d6d50ecd14ccf3b47fae97bbfc536b8ce9aedf6e5ef0807a52a"
        },
        "downloads": -1,
        "filename": "storage-service-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8c15f17237c7985d2bf286bdb29e2a52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5757,
        "upload_time": "2021-04-27T15:34:30",
        "upload_time_iso_8601": "2021-04-27T15:34:30.601031Z",
        "url": "https://files.pythonhosted.org/packages/38/3c/0ec25923324e33e5ba3449441b22b6bea1a1f324a781e3ee161e91ca2b66/storage-service-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce3b06f00274eb471acab49d73a93c9a669852513cab5666f161aa51841bd516",
        "md5": "4b59cd4052397248503a4128ab9ec0c8",
        "sha256": "bc8344f7d851d21abae43dc1cd035403159a8674fbd83bd0b4161b224d25f27a"
      },
      "downloads": -1,
      "filename": "storage_service-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4b59cd4052397248503a4128ab9ec0c8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5475,
      "upload_time": "2021-04-27T15:34:29",
      "upload_time_iso_8601": "2021-04-27T15:34:29.224444Z",
      "url": "https://files.pythonhosted.org/packages/ce/3b/06f00274eb471acab49d73a93c9a669852513cab5666f161aa51841bd516/storage_service-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "383c0ec25923324e33e5ba3449441b22b6bea1a1f324a781e3ee161e91ca2b66",
        "md5": "8c15f17237c7985d2bf286bdb29e2a52",
        "sha256": "562d1869f7e23d6d50ecd14ccf3b47fae97bbfc536b8ce9aedf6e5ef0807a52a"
      },
      "downloads": -1,
      "filename": "storage-service-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8c15f17237c7985d2bf286bdb29e2a52",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5757,
      "upload_time": "2021-04-27T15:34:30",
      "upload_time_iso_8601": "2021-04-27T15:34:30.601031Z",
      "url": "https://files.pythonhosted.org/packages/38/3c/0ec25923324e33e5ba3449441b22b6bea1a1f324a781e3ee161e91ca2b66/storage-service-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}