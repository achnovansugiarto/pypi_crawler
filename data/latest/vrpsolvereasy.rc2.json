{
  "info": {
    "author": "ERRAMI Najib SADYKOV Ruslan UCHOA Eduardo QUEIROGA Eduardo",
    "author_email": "najib.errami@inria.fr",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# VRPSolverEasy [![Python package](https://github.com/inria-UFF/VRPSolverEasy/actions/workflows/python-package.yml/badge.svg)](https://github.com/inria-UFF/VRPSolverEasy/actions/workflows/python-package.yml)\n\nThis project is an implementation of VRPSolver, a package allows you to resolve routing problems by using the bapCod solver,(COIN-OR) CLP and CPLEX solver.\n\n## Installation \n\n![Python](https://upload.wikimedia.org/wikipedia/commons/c/c3/Python-logo-notext.svg)\n\n`VRPSolverEasy` requires a version of python  >= 3.7\n\nThere is two differents way to install `VRPSolverEasy` :\n\nThe first way is to install it with `pip` \n```\npython -m pip install VRPSolverEasy\n```\nThe second way is to following this steps:\n\n- Download the package and extract it into a local directory\n- (Windows) Move to this local directory and enter :\n```\n python pip install .\n```\n- (MacOs and Linux):\n```\nsudo python pip install .\n```\nIf you work on ARM Mac, you must install python in x86-x64 architecture and use the same commands.\n\n## Examples\n\n### Initialisation of model\n\nAfter installation, if you want to create your first model you have to import the solver like this:\n```\nimport VRPSolverEasy.src.solver as solver\n```\n\n#### Create and solve your first model \n```\n    \"\"\"modelisation of small example using solver\"\"\"\n    # data\n    cost_per_time = 10\n    cost_per_distance = 10\n    begin_time = 0\n    end_time = 5000\n    nb_point = 7\n\n    # map with names and coordinates\n    coordinates = {\"Wisconsin, USA\": (44.50, -89.50),  # depot\n                   \"West Virginia, USA\": (39.000000, -80.500000),\n                   \"Vermont, USA\": (44.000000, -72.699997),\n                   \"Texas, the USA\": (31.000000, -100.000000),\n                   \"South Dakota, the US\": (44.500000, -100.000000),\n                   \"Rhode Island, the US\": (41.742325, -71.742332),\n                   \"Oregon, the US\": (44.000000, -120.500000)\n                   }\n\n    # demands of points\n    demands = [0, 500, 300, 600, 658, 741, 436]\n\n    # Initialisation\n    model = solver.CreateModel()\n\n    # Add vehicle type\n    model.add_vehicle_type(\n        id=1,\n        start_point_id=0,\n        end_point_id=0,\n        name=\"VEH1\",\n        capacity=1100,\n        max_number=6,\n        var_cost_dist=cost_per_distance,\n        var_cost_time=cost_per_time,\n        tw_end=5000)\n\n    # Add depot\n    model.add_depot(id=0, name=\"D1\", tw_begin=0, tw_end=5000)\n\n    coordinates_keys = list(coordinates.keys())\n    # Add Customers\n    for i in range(1, nb_point):\n        model.add_customer(\n            id=i,\n            name=coordinates_keys[i],\n            demand=demands[i],\n            tw_begin=begin_time,\n            tw_end=end_time)\n\n    # Add links\n    coordinates_values = list(coordinates.values())\n    enumerate = 1\n    for i in range(0, 7):\n        for j in range(i + 1, 7):\n            dist = compute_euclidean_distance(coordinates_values[i][0],\n                                              coordinates_values[j][0],\n                                              coordinates_values[i][1],\n                                              coordinates_values[j][1])\n            model.add_link(\n                \"arc\" + str(enumerate),\n                start_point_id=i,\n                end_point_id=j,\n                distance=dist,\n                time=dist)\n            enumerate += 1\n\n    # solver model\n    model.solve()\n    model.export()\n\n    print(model.solution)\n```\n## Documentation\n\nIf you want to know more about the documentation, you can go on https://vrpsolvereasy.readthedocs.io/en/latest/. \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://vrpsolvereasy.readthedocs.io/en/latest/",
    "keywords": "VRP,Branch-Cut&Price,Linear Programming,routing problems,solver,Linear Programming",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "VRPSolverEasy",
    "package_url": "https://pypi.org/project/VRPSolverEasy/",
    "platform": null,
    "project_url": "https://pypi.org/project/VRPSolverEasy/",
    "project_urls": {
      "Homepage": "https://vrpsolvereasy.readthedocs.io/en/latest/"
    },
    "release_url": "https://pypi.org/project/VRPSolverEasy/0.0.2/",
    "requires_dist": [
      "setuptools (>=58.1.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "VRPSolverEasy is a simplified modeler solving routing problems by using Branch-Cut-and-Price approach on solver like CLP or CPLEX",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16869622,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a00921529278aa655ad2cce1daf56d6f4bc4d3d237a92037e4fcfbd1d24d42ca",
          "md5": "2cd22720e0bbff3e46f9851f7f287e52",
          "sha256": "8f9c4ec99c6742a7d271026f99a5f380256353230cf8de667423a697200ec572"
        },
        "downloads": -1,
        "filename": "VRPSolverEasy-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cd22720e0bbff3e46f9851f7f287e52",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9855150,
        "upload_time": "2023-02-10T23:43:00",
        "upload_time_iso_8601": "2023-02-10T23:43:00.506450Z",
        "url": "https://files.pythonhosted.org/packages/a0/09/21529278aa655ad2cce1daf56d6f4bc4d3d237a92037e4fcfbd1d24d42ca/VRPSolverEasy-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b132f38ad98c234febe59d7fa06a4e32423f2a7229d85f2587c3ca367d3ea16f",
          "md5": "ffed8bdbf631ee01b4abaaba0d310abf",
          "sha256": "95f91f805afc47aff2c0e813e98f70c6c834186ef77e78f170d74b8f508b781f"
        },
        "downloads": -1,
        "filename": "VRPSolverEasy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ffed8bdbf631ee01b4abaaba0d310abf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9808475,
        "upload_time": "2023-02-10T23:43:03",
        "upload_time_iso_8601": "2023-02-10T23:43:03.037958Z",
        "url": "https://files.pythonhosted.org/packages/b1/32/f38ad98c234febe59d7fa06a4e32423f2a7229d85f2587c3ca367d3ea16f/VRPSolverEasy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "379f26232888b2cd2b1467b1d165d594a6f2edccb846578fea3317d567372eb5",
          "md5": "6f95db13c2db6ed7ec568df70c5a360d",
          "sha256": "6370dc38d3c489bdae97d34883d6379e3f4b4d3eadf7d2117992ad28268e9519"
        },
        "downloads": -1,
        "filename": "VRPSolverEasy-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f95db13c2db6ed7ec568df70c5a360d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9874979,
        "upload_time": "2023-02-15T11:12:29",
        "upload_time_iso_8601": "2023-02-15T11:12:29.159339Z",
        "url": "https://files.pythonhosted.org/packages/37/9f/26232888b2cd2b1467b1d165d594a6f2edccb846578fea3317d567372eb5/VRPSolverEasy-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a044bfad12c6488e2911c034bb0ff2b5c73fb8c94aa43c2dc8850325ea93df3d",
          "md5": "cb8f50421b75e470b3150ec9efae6b81",
          "sha256": "28ba9c8368da669e4bc0dbea94b85370e4fa10f585cdf0dfaf5d8d5dfc588df8"
        },
        "downloads": -1,
        "filename": "VRPSolverEasy-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cb8f50421b75e470b3150ec9efae6b81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9827490,
        "upload_time": "2023-02-15T11:12:31",
        "upload_time_iso_8601": "2023-02-15T11:12:31.484645Z",
        "url": "https://files.pythonhosted.org/packages/a0/44/bfad12c6488e2911c034bb0ff2b5c73fb8c94aa43c2dc8850325ea93df3d/VRPSolverEasy-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "379f26232888b2cd2b1467b1d165d594a6f2edccb846578fea3317d567372eb5",
        "md5": "6f95db13c2db6ed7ec568df70c5a360d",
        "sha256": "6370dc38d3c489bdae97d34883d6379e3f4b4d3eadf7d2117992ad28268e9519"
      },
      "downloads": -1,
      "filename": "VRPSolverEasy-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6f95db13c2db6ed7ec568df70c5a360d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9874979,
      "upload_time": "2023-02-15T11:12:29",
      "upload_time_iso_8601": "2023-02-15T11:12:29.159339Z",
      "url": "https://files.pythonhosted.org/packages/37/9f/26232888b2cd2b1467b1d165d594a6f2edccb846578fea3317d567372eb5/VRPSolverEasy-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a044bfad12c6488e2911c034bb0ff2b5c73fb8c94aa43c2dc8850325ea93df3d",
        "md5": "cb8f50421b75e470b3150ec9efae6b81",
        "sha256": "28ba9c8368da669e4bc0dbea94b85370e4fa10f585cdf0dfaf5d8d5dfc588df8"
      },
      "downloads": -1,
      "filename": "VRPSolverEasy-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "cb8f50421b75e470b3150ec9efae6b81",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9827490,
      "upload_time": "2023-02-15T11:12:31",
      "upload_time_iso_8601": "2023-02-15T11:12:31.484645Z",
      "url": "https://files.pythonhosted.org/packages/a0/44/bfad12c6488e2911c034bb0ff2b5c73fb8c94aa43c2dc8850325ea93df3d/VRPSolverEasy-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}