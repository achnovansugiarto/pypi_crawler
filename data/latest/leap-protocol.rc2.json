{
  "info": {
    "author": "Hoani Bryson",
    "author_email": "hoani.bryson@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![](https://github.com/leap-protocol/leap-py/workflows/L3aP-Py%20Testing/badge.svg)\n# L3aP for Python\nLegible encoding for addressable packets for python\n\nSpecification documentation:\nhttps://leap-protocol.github.io/\n\n# Installation\n\n`pip install leap-protocol`\n\n# Basic Usage\n\nEncoding a packet:\n``` python\nimport leap-protocol as leap\n\ncodec = leap.Codec(\"leap-config.json\")\npacket = leap.Packet(\"set\", \"led/red\", True)\nencoded = codec.encode(packet)\n\n...\n```\n\nDecoding a packet\n``` python\nimport leap-protocol as leap\n\ncodec = leap.Codec(\"leap-config.json\")\n\n...\n\n# Note, if there is a remainder it will be stored back in bytes\nreceived, packet = codec.Decode(received)\ndata = codec.unpack(packet)\n\nfor branch, value in data.items():\n  ... do stuff ...\n\n...\n```\n\n# Usage\n\n## Codec Class\n\n### codec = Codec(config_file_path)\n* **config_file_path** a string to point to the L3aP config file.\n* **codec** L3aP codec object\n\nInstantiates a L3aP codec object for encoding packets to strings and decoding strings to packets.\n\nExample:\n``` python\ncodec = leap.Codec(\"leap-config.json\")\n```\n\n### bytes = encode(packets)\n* **packets** either a `leap.Packet` object or a list of `leap.packet` objects.\n* **bytes** utf-8 byte string\n\nEncodes one or more packets into a utf-8 byte string.\n\nExample:\n```python\npacket_red = leap.Packet(\"set\", \"led/red\", True)\npacket_blue = leap.Packet(\"set\", \"led/blue\", True)\n\nencoded = codec.encode([packet_red, packet_blue])\n```\n\n### (remainder, packets) = decode(bytes)\n* **bytes** utf-8 encoded byte-string\n* **remainder** unused bytes (if available)\n* **packets** an array of one or more decoded packets, empty if none\n\nDecodes a utf-8 byte string into one or more packets\n\nExample:\n```python\nreceived_bytes += rx.read()\nreceived_bytes, packets = codec.decode(received_bytes)\n\nfor packet in packets:\n  ...\n```\n\n### data = unpack(packet)\n* **packet** a `leap.Packet`\n* **data** a dictionary with address paths as keys (eg. `led/red`) mapping to thier respective values.\n\nExtracts a dictionary from a packet to map address paths to thier respective values.\n\nExample:\n```python\nif packet.category == \"set\":\n  commands = codec.unpack(packet)\n  if 'led/red' in commands:\n    led_red.set(commands['led/red']\n    ...\n```\n\n## Packet Class\n\n### packet = Packet(category, *path*, *payload*)\n* **category** the type of packet\n* **path** (optional) a root path of payload data\n* **payload** (optional) the data to accompany the root path\n* **packet** a L3aP packet object\n\nConstructs a L3aP packet for encoding. Note, payload can be an array and set multiple fields at once when the path is a parent.\n\nExample:\n```python\naccelerometer_packet = leap.Packet(\"pub\", \"imu/accel\", [accel_x, accel_y, accel_z])\ndisable_packet = leap.Packet(\"set\", \"control/balance/disable\")\n...\n```\n\n### add(path, *payload*)\n* **path** a root path of payload data\n* **payload** (optional) the data to accompany the root path\n\nAdds path to the packet and optionally a payload.\nThis can be used to create compound packets which allows sets of data to be processed at the same time.\n\nExample:\n```python\nsensor_packet = leap.Packet(\"pub\", \"imu/accel\", [accel_x, accel_y, accel_z])\nsensor_packet.add(\"barometer/pressure\", baro_pressure)\n...\n```\n\n### category\n\nThe packet's category string.\n\nExample:\n```python\nif packet.category == \"pub\":\n  update_model(codec.unpack(packet))\n...\n```\n\n## Verification\n\n### result = verify(config_file)\n* **config_file** a valid L3aP config file\n* **result** false if config_file is invalid, true otherwise\n\nChecks the contents of a config_file for errors. Prints details of the first failure to stdout. Useful for regression testing.\n\nExample:\n```python\n...\ndef test_valid_config(self):\n  assert(leap.verify(\"leap-config.json\"))\n...\n```\n\n# Command Line\n\nGenerate a default json config file:\n\n`python3 -m leap --json filename.toml`\n\nGenerate a default toml config file:\n\n`python3 -m leap --toml filename.toml`\n\nVerify the contents of your toml/json config file:\n\n`python3 -m leap --validate filename.json`\n\nHelp:\n\n`python3 -m leap --help`\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/leap-protocol/leap-py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "leap-protocol",
    "package_url": "https://pypi.org/project/leap-protocol/",
    "platform": "",
    "project_url": "https://pypi.org/project/leap-protocol/",
    "project_urls": {
      "Homepage": "https://github.com/leap-protocol/leap-py"
    },
    "release_url": "https://pypi.org/project/leap-protocol/1.0.1/",
    "requires_dist": [
      "toml"
    ],
    "requires_python": ">=3.6",
    "summary": "Legible Encoding for Addressable Packets",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6816749,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31b22c82c4205dc8116506285af4091933ba5e74ac8de2ef003d864f626cfb4d",
          "md5": "66998097ffd65686074aba9268758453",
          "sha256": "0f3d90928426f4dfdd99dc6031c2f55795b6a07a62a9133f7a2391296677bfda"
        },
        "downloads": -1,
        "filename": "leap_protocol-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66998097ffd65686074aba9268758453",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12201,
        "upload_time": "2020-01-09T10:07:06",
        "upload_time_iso_8601": "2020-01-09T10:07:06.723279Z",
        "url": "https://files.pythonhosted.org/packages/31/b2/2c82c4205dc8116506285af4091933ba5e74ac8de2ef003d864f626cfb4d/leap_protocol-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59ec35462bf72195f23346d9afd205897b17fc1f511f2ac422dd95ed1af0fdc6",
          "md5": "fd934b6399663de1e6de39eb3a3d1810",
          "sha256": "2132fd50726b7421059de752e5c5a8190bc0ef6f29cff1f7c3acfa8d14d3b566"
        },
        "downloads": -1,
        "filename": "leap-protocol-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fd934b6399663de1e6de39eb3a3d1810",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14652,
        "upload_time": "2020-01-09T10:07:10",
        "upload_time_iso_8601": "2020-01-09T10:07:10.057121Z",
        "url": "https://files.pythonhosted.org/packages/59/ec/35462bf72195f23346d9afd205897b17fc1f511f2ac422dd95ed1af0fdc6/leap-protocol-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79528f98670c211175b4137b0933e28e5ba591970622e990fc1cee527158ca26",
          "md5": "40bd5b14089277a56292a7ba13d9f868",
          "sha256": "0075f879022fc6b897b860e6691c48042e1967d9c3e5f585ee4cd6996ec6a368"
        },
        "downloads": -1,
        "filename": "leap_protocol-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40bd5b14089277a56292a7ba13d9f868",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12857,
        "upload_time": "2020-03-15T19:04:22",
        "upload_time_iso_8601": "2020-03-15T19:04:22.929852Z",
        "url": "https://files.pythonhosted.org/packages/79/52/8f98670c211175b4137b0933e28e5ba591970622e990fc1cee527158ca26/leap_protocol-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2671b2fb486eb1ce5d441c79040a1580df1f663097f90fd2f91b7c77e04d4a1a",
          "md5": "48f47959ee94fe8385fc5c6a75c4af9f",
          "sha256": "76c61f160174f604b63c922dcd00479650df6639b1dca2256a0e6bf7a7d9461d"
        },
        "downloads": -1,
        "filename": "leap-protocol-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "48f47959ee94fe8385fc5c6a75c4af9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16338,
        "upload_time": "2020-03-15T19:04:24",
        "upload_time_iso_8601": "2020-03-15T19:04:24.772761Z",
        "url": "https://files.pythonhosted.org/packages/26/71/b2fb486eb1ce5d441c79040a1580df1f663097f90fd2f91b7c77e04d4a1a/leap-protocol-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "79528f98670c211175b4137b0933e28e5ba591970622e990fc1cee527158ca26",
        "md5": "40bd5b14089277a56292a7ba13d9f868",
        "sha256": "0075f879022fc6b897b860e6691c48042e1967d9c3e5f585ee4cd6996ec6a368"
      },
      "downloads": -1,
      "filename": "leap_protocol-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "40bd5b14089277a56292a7ba13d9f868",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12857,
      "upload_time": "2020-03-15T19:04:22",
      "upload_time_iso_8601": "2020-03-15T19:04:22.929852Z",
      "url": "https://files.pythonhosted.org/packages/79/52/8f98670c211175b4137b0933e28e5ba591970622e990fc1cee527158ca26/leap_protocol-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2671b2fb486eb1ce5d441c79040a1580df1f663097f90fd2f91b7c77e04d4a1a",
        "md5": "48f47959ee94fe8385fc5c6a75c4af9f",
        "sha256": "76c61f160174f604b63c922dcd00479650df6639b1dca2256a0e6bf7a7d9461d"
      },
      "downloads": -1,
      "filename": "leap-protocol-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "48f47959ee94fe8385fc5c6a75c4af9f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16338,
      "upload_time": "2020-03-15T19:04:24",
      "upload_time_iso_8601": "2020-03-15T19:04:24.772761Z",
      "url": "https://files.pythonhosted.org/packages/26/71/b2fb486eb1ce5d441c79040a1580df1f663097f90fd2f91b7c77e04d4a1a/leap-protocol-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}