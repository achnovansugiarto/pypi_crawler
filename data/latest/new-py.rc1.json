{
  "info": {
    "author": "Ken Youens-Clark",
    "author_email": "kyclark@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# new.py\n\nPython program to write new Python programs\n\n## Description\n\nThe \"new.py\" program is intended to automate the creation of a program that uses argparse to handle command-line arguments.\nRun with `-h|--help` for the documentation:\n\n```\nusage: new.py [-h] [-n NAME] [-e EMAIL] [-p PURPOSE] [-t] [-f] program\n\nCreate Python argparse program\n\npositional arguments:\n  program               Program name\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -n NAME, --name NAME  Name for docstring (default: Ken Youens-Clark)\n  -e EMAIL, --email EMAIL\n                        Email for docstring (default: kyclark@gmail.com)\n  -p PURPOSE, --purpose PURPOSE\n                        Purpose for docstring (default: Rock the Casbah)\n  -t, --write_test      Create basic test.py (default: False)\n  -f, --force           Overwrite existing (default: False)\n```\n\nThe only required argument is the \"program\" name:\n\n```\n$ new.py foo.py\nDone, see new script \"foo.py.\"\n```\n\nNow you will have a program that will accept the following parameters:\n\n```\n$ ./foo.py -h\nusage: foo.py [-h] [-a str] [-i int] [-f FILE] [-o] str\n\nRock the Casbah\n\npositional arguments:\n  str                   A positional argument\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a str, --arg str     A named string argument (default: )\n  -i int, --int int     A named integer argument (default: 0)\n  -f FILE, --file FILE  A readable file (default: None)\n  -o, --on              A boolean flag (default: False)\n```\n\nEdit the \"get_args()\" function to whatever your program's requirements may be.\n\nIf you run this same command again, the \"foo.py\" file will be detected, and you will be prompted to see if you wish to overwrite it.\nUnless you answer \"yes,\" the program will exit:\n\n```\n$ new.py foo.py\n\"foo.py\" exists.  Overwrite? [yN] n\nWill not overwrite. Bye!\n```\n\nIf you do wish to overwrite the program, you can use the `-f|--force` flag:\n\n```\n$ new.py foo.py -f\nDone, see new script \"foo.py.\"\n```\n\nYou can indicate the name and email address you wish to appear in the program's docstrings, or you can write a \"~/.new.py\" configuration file with these parameters, e.g.:\n\n```\n$ cat ~/.new.py\nname=Ken Youens-Clark\nemail=kyclark@gmail.com\npurpose=Look out, you rock-and-rollers!\n```\n\nThe `-p|--purpose` option will also become part of the program docstring/argparse documentation.\nYou can also add a \"purpose\" option to your \"~/.new.py\" file to override the default \"Rock the Casbah\" value.\n\nUse the `-t|--test` option to create a \"{prg}_test.py\" file and a \"Makefile\":\n\n```\n$ new.py -t foo.py\nDone, see new script \"foo.py.\"\n```\n\nNow you should have the following files:\n\n```\n$ find . -type f\n./Makefile\n./tests/foo_test.py\n./foo.py\n```\n\nYou can run \"make test\" to execute \"python3 -m pytest -xv\":\n\n```\n$ make test\npython3 -m pytest -xv\n============================= test session starts ==============================\n...\n\ntests/foo_test.py::test_exists PASSED                                    [ 33%]\ntests/foo_test.py::test_usage PASSED                                     [ 66%]\ntests/foo_test.py::test_ok PASSED                                        [100%]\n\n============================== 3 passed in 0.27s ===============================\n```\n\n## Installation\n\nYou can copy the `new.py` program to any directory currently in your `$PATH`.\nIt's common to place programs into a directory like `/usr/local/bin`, but this often will require root priviliges.\nA common workaround is to create a writable directory in your `$HOME` where you can place programs.\nI like to use `$HOME/.local` as the \"prefix\" for local software installations.\nThis means that `$HOME/.local/bin` will usually the be location where binaries will be placed; therefore I will add this to my `.bash_profile` (or `.bashrc`) file:\n\n```\nexport PATH=$HOME/.local/bin:$PATH\n```\n\n## See Also\n\nI first created a version of this program for [Tiny Python Projects](http://tinypythonprojects.com/):\n\nhttps://github.com/kyclark/tiny_python_projects/blob/master/bin/new.py\n\nThis version is different in that it incorporates type hints and uses structures like named tuples as records/structs to represent complex, typed objects such as the program \"Args\".\n\n[Chapter 1](http://tinypythonprojects.com/#/chapters/1) of the book covers how to use \"new.py\" to start a new program.\nThe [appendix](http://tinypythonprojects.com/#/chapters/23) covers argparse in greater detail.\n\n## Author\n\nKen Youens-Clark <kyclark@gmail.com>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kyclark/new.py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "new-py",
    "package_url": "https://pypi.org/project/new-py/",
    "platform": "",
    "project_url": "https://pypi.org/project/new-py/",
    "project_urls": {
      "Homepage": "https://github.com/kyclark/new.py"
    },
    "release_url": "https://pypi.org/project/new-py/0.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Stub a new Python CLI program",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9175348,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b57a593fc5aef28637535db4dce3f565ed10a1427d0b20bc99a36b81439e049",
          "md5": "017cc9df494098879c36e96ae2dcace1",
          "sha256": "81ed6e155e3b6ac00a59de4552216a2bdc8e4a1a1a6549d5dfcb478025436862"
        },
        "downloads": -1,
        "filename": "new_py-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "017cc9df494098879c36e96ae2dcace1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6400,
        "upload_time": "2021-01-19T20:19:53",
        "upload_time_iso_8601": "2021-01-19T20:19:53.637839Z",
        "url": "https://files.pythonhosted.org/packages/4b/57/a593fc5aef28637535db4dce3f565ed10a1427d0b20bc99a36b81439e049/new_py-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b5aa511fbba9d09d7bb293bb83fc243453741c1e5ca5961cf60fde11d7775e5",
          "md5": "a2cb83ff4e17c1c19740197356223e62",
          "sha256": "9177fe10792ace9922daa43339c4f704c0ad757c086ed78f959a1df4230c02cf"
        },
        "downloads": -1,
        "filename": "new_py-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a2cb83ff4e17c1c19740197356223e62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5466,
        "upload_time": "2021-01-19T20:19:54",
        "upload_time_iso_8601": "2021-01-19T20:19:54.727678Z",
        "url": "https://files.pythonhosted.org/packages/3b/5a/a511fbba9d09d7bb293bb83fc243453741c1e5ca5961cf60fde11d7775e5/new_py-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4b57a593fc5aef28637535db4dce3f565ed10a1427d0b20bc99a36b81439e049",
        "md5": "017cc9df494098879c36e96ae2dcace1",
        "sha256": "81ed6e155e3b6ac00a59de4552216a2bdc8e4a1a1a6549d5dfcb478025436862"
      },
      "downloads": -1,
      "filename": "new_py-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "017cc9df494098879c36e96ae2dcace1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6400,
      "upload_time": "2021-01-19T20:19:53",
      "upload_time_iso_8601": "2021-01-19T20:19:53.637839Z",
      "url": "https://files.pythonhosted.org/packages/4b/57/a593fc5aef28637535db4dce3f565ed10a1427d0b20bc99a36b81439e049/new_py-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b5aa511fbba9d09d7bb293bb83fc243453741c1e5ca5961cf60fde11d7775e5",
        "md5": "a2cb83ff4e17c1c19740197356223e62",
        "sha256": "9177fe10792ace9922daa43339c4f704c0ad757c086ed78f959a1df4230c02cf"
      },
      "downloads": -1,
      "filename": "new_py-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a2cb83ff4e17c1c19740197356223e62",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5466,
      "upload_time": "2021-01-19T20:19:54",
      "upload_time_iso_8601": "2021-01-19T20:19:54.727678Z",
      "url": "https://files.pythonhosted.org/packages/3b/5a/a511fbba9d09d7bb293bb83fc243453741c1e5ca5961cf60fde11d7775e5/new_py-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}