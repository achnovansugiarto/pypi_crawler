{
  "info": {
    "author": "Salem Harrache",
    "author_email": "dev@salem.harrache.info",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "DBcut\n=====\n\n.. image:: https://img.shields.io/pypi/v/dbcut.svg\n    :target: https://pypi.python.org/pypi/dbcut\n\n.. image:: https://travis-ci.org/itsolutionsfactory/dbcut.svg?branch=master\n    :target: https://travis-ci.org/itsolutionsfactory/dbcut\n    :alt: CI Status\n\n\n.. image:: docs/db-cute-small.png\n   :alt: DBcut logo\n   :align: center\n\n\nDBcut aims to allow the extraction of lightweight subset of relational production database for development and testing\npurpose.\n\n\nTable of Contents\n-----------------\n\n-  `Overview <#overview>`__\n\n   -  `Usage <#usage>`__\n\n-  `Getting started <#getting-started>`__\n-  `Under The Hood <#under-the-hood>`__\n\n   -  `Database Reflection and Loading\n      Stategy <#database-reflection-and-loading-stategy>`__\n   -  `SQL from YAML <#sql-from-yaml>`__\n   -  `Extraction Graph <#extraction-graph>`__\n\nOverview\n--------\n\nIts main features are:\n\n-  Extract data from large databases.\n-  Reinject data into another base.\n-  Target and source databases could be based on different DBMS (i.e., MySQL -> PostgreSQL/SQLite).\n-  Extraction queries simplified in YAML.\n-  Support nested associations.\n-  Json and plain SQL export.\n-  Reasonable performance.\n-  Caching of extractions to accelerate future extractions.\n\nUsage\n~~~~~\n\n.. code:: shell\n\n   Usage: dbcut [OPTIONS] COMMAND1 [ARGS]... [COMMAND2 [ARGS]...]...\n\n     Extract a lightweight subset of your production DB for development and\n     testing purpose.\n\n   Options:\n     -c, --config PATH    Configuration file\n     --version            Show the version and exit.\n     -y, --force-yes      Never prompts for user intervention\n     -i, --interactive    Prompts for user intervention.\n     --quiet, --no-quiet  Suppresses most warning and diagnostic messages.\n     --debug              Enables debug mode.\n     --verbose            Enables verbose output.\n     -h, --help           Show this message and exit.\n\n   Commands:\n     load        Extract and load data to the target database.\n     flush       Remove ALL TABLES from the target database and recreate them\n     inspect     Check databases content.\n     dumpsql     Dump all SQL insert queries.\n     dumpjson    Export data to json.\n     clear       Remove all data (only) from the target database\n     purgecache  Remove all cached queries.\n\nGetting started\n---------------\n\nLet's take the following database example:\n\n.. image:: docs/example-simple-db.png\n   :alt: Simple Database\n\nWe want to extract some users with all related data to our development database.\n\nFirst, we have to edit the extraction file ``dbcut.yaml`` as follows:\n\n.. code:: yaml\n\n   # dbcut.yml\n   databases:\n     source_uri: mysql://foo:bar@db-host/prod\n     destination_uri: sqlite:///small-dev-database.db\n\n   queries:\n     - from: user\n       limit: 2\n\nThen, we set the limit to two users, the default limit being 10.\n\nAfter that, we launch the extraction command with the ``load`` command:\n\n.. code:: shell\n\n   $ dbcut load\n    ---> Reflecting database schema from mysql://foo:***@db-host/prod\n    ---> Creating new sqlite:///small-dev-database.db database\n    ---> Creating all tables and relations on sqlite:///small-dev-database.db\n\n   Query 1/1 :\n\n       from: user\n       limit: 2\n       backref_limit: 10\n       backref_depth: 5\n       join_depth: 5\n       exclude: []\n       include: []\n\n\n        ┌─ⁿ─comment\n        ├─ⁿ─vote\n    user┤\n        └─ⁿ─user_group┐\n                      └─¹─group┐\n                               └─¹─role┐\n                                       └─ⁿ─role_permission┐\n                                                          └─¹─permission\n\n\n   8 tables loaded\n\n    ---> Cache key : 4a468c3555074890b7c342c0a575f29d47145821\n    ---> Executing query\n    ---> Fetching objects\n    ---> Inserting 31 rows\n\nWe can check the data on our new database :\n\n.. code:: shell\n\n   $ ls\n   dbcut.yml  small-dev-database.db\n   $ sqlite3 small-dev-database.db\n\n.. code:: sql\n\n   sqlite> SELECT id, login FROM user;\n   3|jerome\n   4|julien\n\n.. code:: sql\n\n   sqlite> SELECT * from comment;\n   8|comment jerome 1|3\n   9|comment jerome 2|3\n   10|comment jerome 3|3\n\nIn the following example, we are going to retrieve roles with related groups and permissions. In order to obtain the\nbest extraction graph, we are going to use the keyword ``include``, which indicated to dbcut that we want to minimize\nthe number of associated tables (Nested associations).\n\n.. code:: yaml\n\n   queries:\n     - from: user\n       limit: 2\n\n     - from: role\n       include:\n         - group\n         - permission\n\nIt is possible to empty the content of the local database before beginning the extraction with the ``clear`` command.\n\n.. code:: shell\n\n   $ dbcut -y clear load\n    ---> Removing all data from sqlite:///small-dev-database.db database\n    ---> Reflecting database schema from mysql://foo:***@db-host/prod?charset=utf8\n    ---> Creating all tables and relations on sqlite:///small-dev-database.db\n\n   Query 1/2 :\n\n       from: user\n       limit: 2\n       backref_limit: 10\n       backref_depth: 5\n       join_depth: 5\n       exclude: []\n       include: []\n\n\n        ┌─ⁿ─comment\n        ├─ⁿ─vote\n    user┤\n        └─ⁿ─user_group┐\n                      └─¹─group┐\n                               └─¹─role┐\n                                       └─ⁿ─role_permission┐\n                                                          └─¹─permission\n\n\n   8 tables loaded\n\n    ---> Cache key : 4a468c3555074890b7c342c0a575f29d47145821\n    ---> Using cache (2 elements)\n    ---> Fetching objects\n    ---> Inserting 31 rows\n\n   Query 2/2 :\n\n       from: role\n       limit: 10\n       backref_limit: 10\n       backref_depth: null\n       join_depth: null\n       exclude: []\n       include:\n       - group\n       - permission\n\n\n        ┌─ⁿ─group\n    role┤\n        └─ⁿ─role_permission┐\n                           └─¹─permission\n\n\n   4 tables loaded\n\n    ---> Cache key : 5029d84dbb2bc75a7df898dd94df93b395e91e44\n    ---> Executing query\n    ---> Fetching objects\n    ---> Inserting 22 rows\n\nAs you can see in the first query, the cache was used and there was thus no interaction with the source database.\n\nThis query allowed the extraction of all roles:\n\n.. code:: sql\n\n   sqlite> SELECT * from role;\n   1|admin\n   2|moderator\n   3|user\n\nIf we had not used the ``include`` keyword, all tables would have been extracted:\n\n::\n\n           ┌─ⁿ─role_permission┐\n           │                  └─¹─permission\n       role┤\n           └─ⁿ─group┐\n                    └─ⁿ─user_group┐\n                                  │       ┌─ⁿ─comment\n                                  └─¹─user┤\n                                          └─ⁿ─vote\n\nTo narrow more precisely our extraction, we are now going to limit to roles that can delete a user.\n\n.. code:: yaml\n\n   queries:\n     - from: user\n       limit: 2\n\n     - from: role\n       include:\n         - group\n         - permission\n       where:\n         permission.codename: 'delete_user'\n\nOnly the last extraction rule is relaunched with the ``--last-only`` option.\n\n.. code:: shell\n\n   $ dbcut -y clear load --last-only\n   ...\n    ---> Cache key : ffb664a2e69c88fa48db2680daf71d30408bd207\n    ---> Executing query\n    ---> Fetching objects\n    ---> Inserting 14 rows\n\nThis time, only the 'admin' role is retrieved:\n\n.. code:: sql\n\n   sqlite> SELECT * from role;\n   1|admin\n\nPlease note that the filter only applies here to role table (``from``) and not to the permission.\n\n.. code:: sql\n\n   sqlite> SELECT * FROM permission\";\n   1|delete_comment\n   2|delete_vote\n   3|delete_user\n   4|create_comment\n   5|create_vote\n   6|create_user\n\nIndeed, we filter the roles based on a value from the permission table, but we do retrieved all permissions associated\nto this role.\n\nIn the above example, it makes sense that the admin role has all permissions.\n\nLast but not least, we can also retrieve data in json or raw sql format !\n\n.. code:: shell\n\n   $ dbcut dumpjson|dumpsql\n\n.. code:: json\n\n   [\n     {\n       \"password\": \"julien\",\n       \"vote_collection\": [\n         {\n           \"user_id\": 4,\n           \"comment_id\": 1,\n           \"id\": 3,\n           \"rating\": 4\n         },\n         {\n           \"user_id\": 4,\n           \"comment_id\": 3,\n           \"id\": 6,\n           \"rating\": 10\n         },\n         {\n           \"user_id\": 4,\n           \"comment_id\": 6,\n           \"id\": 13,\n           \"rating\": 10\n         }\n       ],\n       \"comment_collection\": [],\n       \"id\": 4,\n       \"login\": \"julien\",\n       \"user_group_collection\": [\n         {\n           \"user_id\": 4,\n           \"group\": {\n             \"name\": \"Utilisateur\",\n             \"role\": {\n               \"id\": 3,\n               \"role_permission_collection\": [\n                 {\n                   \"permission\": {\n                     \"id\": 4,\n                     \"codename\": \"create_comment\",\n                     \"role_permission_collection\": []\n                   },\n\n.. code:: sql\n\n   PRAGMA foreign_keys = OFF;\n\n   BEGIN;\n   INSERT OR IGNORE INTO permission (id, codename) VALUES (4, 'create_comment');\n   INSERT OR IGNORE INTO permission (id, codename) VALUES (5, 'create_vote');\n   INSERT OR IGNORE INTO permission (id, codename) VALUES (1, 'delete_comment');\n   INSERT OR IGNORE INTO permission (id, codename) VALUES (2, 'delete_vote');\n   INSERT OR IGNORE INTO role (id, name) VALUES (3, 'user');\n   INSERT OR IGNORE INTO role (id, name) VALUES (2, 'moderator');\n   INSERT OR IGNORE INTO user (id, login, password) VALUES (4, 'julien', 'julien');\n   INSERT OR IGNORE INTO user (id, login, password) VALUES (3, 'jerome', 'jerome');\n   INSERT OR IGNORE INTO \"group\" (id, name, role_id) VALUES (3, 'Utilisateur', 3);\n   INSERT OR IGNORE INTO \"group\" (id, name, role_id) VALUES (2, 'Moderateur', 2);\n   INSERT OR IGNORE INTO comment (id, content, user_id) VALUES (8, 'comment jerome 1', 3);\n   INSERT OR IGNORE INTO comment (id, content, user_id) VALUES (9, 'comment jerome 2', 3);\n   INSERT OR IGNORE INTO comment (id, content, user_id) VALUES (10, 'comment jerome 3', 3);\n   INSERT OR IGNORE INTO role_permission (id, role_id, permission_id) VALUES (12, 3, 4);\n   INSERT OR IGNORE INTO role_permission (id, role_id, permission_id) VALUES (13, 3, 5);\n   INSERT OR IGNORE INTO role_permission (id, role_id, permission_id) VALUES (7, 2, 4);\n   INSERT OR IGNORE INTO role_permission (id, role_id, permission_id) VALUES (8, 2, 5);\n   INSERT OR IGNORE INTO role_permission (id, role_id, permission_id) VALUES (10, 2, 1);\n   INSERT OR IGNORE INTO role_permission (id, role_id, permission_id) VALUES (11, 2, 2);\n   INSERT OR IGNORE INTO user_group (id, user_id, group_id) VALUES (4, 4, 3);\n   INSERT OR IGNORE INTO user_group (id, user_id, group_id) VALUES (3, 3, 2);\n   INSERT OR IGNORE INTO vote (id, rating, user_id, comment_id) VALUES (3, 4, 4, 1);\n   INSERT OR IGNORE INTO vote (id, rating, user_id, comment_id) VALUES (6, 10, 4, 3);\n   INSERT OR IGNORE INTO vote (id, rating, user_id, comment_id) VALUES (13, 10, 4, 6);\n   INSERT OR IGNORE INTO vote (id, rating, user_id, comment_id) VALUES (2, 5, 3, 1);\n   INSERT OR IGNORE INTO vote (id, rating, user_id, comment_id) VALUES (5, 1, 3, 2);\n   INSERT OR IGNORE INTO vote (id, rating, user_id, comment_id) VALUES (7, 10, 3, 3);\n   INSERT OR IGNORE INTO vote (id, rating, user_id, comment_id) VALUES (10, 6, 3, 1);\n   INSERT OR IGNORE INTO vote (id, rating, user_id, comment_id) VALUES (11, 5, 3, 5);\n   INSERT OR IGNORE INTO vote (id, rating, user_id, comment_id) VALUES (12, 6, 3, 6);\n   INSERT OR IGNORE INTO vote (id, rating, user_id, comment_id) VALUES (19, 10, 3, 10);\n   COMMIT;\n\nUnder The Hood\n--------------\n\nDatabase Reflection and Loading Stategy\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDBcut heavily uses SQLAlchemy, the SQL toolkit and Object Relational Mapper for Python. The ORM makes it possible to\nfree ourselves from the SQL direct manipulation, but that is not all. SQLAlchemy offers a range of toolkits that enable\nus to programmatically build all SQL queries useful to DBcut. This include both the schema creation and all of its\nproperties, the select, join and insert queries… no matter which DBMS is used (PostgreSQL, MySQL, SQLite, oracle etc.).\n\nOne of the most important features of DBcut is that the user does not need to know or provide the source database\nschema to use it. First of all, DBcut will inspect the source database and retrieve all metadata. This action is what we\ncall: *Database Reflection*.\n\n.. image:: docs/database_reflection.png\n   :alt: Database Reflection\n\n\nThe MetaData object store all the collection of metadata entities. DBcut will alter this MetaData object to make it\ncompatible with most DBMS. For example, the names of indexes or foreign keys can be too long for SQLite but not for\nMYSQL. Sometimes, it also changes the types of the column to make it match what is expected in the target database.\n(``mysql.TINYINT`` became ``SMALLINT`` in SQLite and PostgreSQL)\n\nOnce the MetaData object is complete, we can create the new database which is almost identical to the source database\n(except some compatibility adjustments)\n\nDBcut will generate and launch extraction request on the source database. The data thus obtained will be detached from\nthe first SQLAlchemy session to be attached to the new session in the target database. This is where the SQLAlchemy\nmagic happens: the same request will be used to extract data from the source database and to load them into the target\ndatabase. Indeed, in the first case (query/fetch), it will be translated into SQL ``SELECT`` queries and in the second\ncase, into SQL ``INSERT`` statements (load).\n\nSQL from YAML\n~~~~~~~~~~~~~\n\nOne of the goals of DBcut is to allow quick writing of extraction requests. Most of the time, to write an extraction\nrequest, not much information is needed: only the main table name, hoping to retrieve the maximum number of related\ndata as possible.\n\nThe idea was to find a sufficiently concise syntax that allows us to build the most complete extraction requests with\nthe minimum effort.\n\nThe YAML came to us naturally as it is pleasant to read, easy to understand and to edit for humans.\n\nThe ``dbcut.yml`` file is both used to configure DBcut and to write\nextraction requests.\n\n.. code:: yaml\n\n   databases:\n     source_uri: mysql://chinook:chinook@192.168.66.66/chinook\n     destination_uri: sqlite:///chinook.db\n\n   queries:\n     - from: customer_customer\n\nTo write an extraction request, only the keyword ``from`` is mandatory. However, other keywords can be added to reduce\nthe size of data to retreive.\n\n.. code:: yaml\n\n     - from: contracts_customer\n       where:\n         brand: 2\n       limit: 100\n       backref_limit: 500\n       backref_depth: 2\n       join_depth: 5\n       exclude:\n       - django_admin_log\n       - django_session\n       include: []\n\nUnlike the SQL queries, an extraction request using DBcut automatically and recursively loads all associated relations\n(See `Extraction Graph <#extraction-graph>`__). All these options are filtering and reducing options that prevents from\nslowing down the extraction process.\n\nFinally, with the scope of making the extraction requests as compact as possible, we can add default values to most of\nthese options:\n\n.. code:: yaml\n\n   default_limit: 100\n   default_backref_limit: 500\n\n   default_backref_depth: 2\n   default_join_depth: 5\n\n   global_exclude:\n     - django_admin_log\n     - django_session\n\nExtraction Graph\n~~~~~~~~~~~~~~~~\n\nTo build an extraction request, we first build its extraction graph.\n\nAn extraction graph is a subset of the complete graph of database relations. Every node represents a table, and each\nlink represents a relation between two tables. The link direction is defined by the foreign key.\n\nTo build this graph, we use the ``MetaData`` object (See `Database Reflection and Loading Stategy\n<#database-reflection-and-loading-stategy>`__).\n\nLet's use the following database schema:\n\n\n.. image:: docs/chinook_schema.png\n   :alt: Database chinook schema\n\n\nThe retrieved metadata during the database reflection are used to build\nthe following complete graph of relations:\n\n\n.. image:: docs/chinook_uml_graph.png\n   :alt: Complete graph of relations\n\n\nTo build the extraction graph, we browse the complete graph starting\nfrom the table used in the ``from`` instruction. The browsing only stops\nif :\n\n-  the link has already been browsed\n-  the table is explicitly excluded\n-  the maximum depth is reached\n\nFor the following request:\n\n.. code:: yaml\n\n   queries:\n     - from: customer_customer\n\nThe generated extraction graph is:\n\n\n.. image:: docs/dbcut-load-chinook.png\n   :alt: Generated extraction graph\n\n\nPlease note that we handle the two types of relations : one-to-many relations (noted ``1`` in the extraction graph) and\nmany-to-many relations (noted ``n``).\n\n\nCHANGELOG\n=========\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on `Keep a Changelog <http://keepachangelog.com/en/1.0.0/>`_, and this project adheres to `Semantic Versioning <http://semver.org/spec/v2.0.0.html>`_.\n\n\nVersion 0.6.0\n-------------\n\nReleased on April 13th 2021\n\nAdded\n-----\n- Better support for tables without primary key\n- Load all many-to-many relationships just like one-to-many ones\n\nVersion 0.5.0\n-------------\n\nReleased on April 09th 2021\n\n\nAdded\n-----\n\n- Added support of SQLAlchemy 1.4\n\nVersion 0.4.1\n-------------\n\nReleased on April 01st 2021\n\nChanged\n-------\n- Downgrade sqlalchemy requirement to <=1.4 versions to prevent crashing\n\n\nVersion 0.4.0\n-------------\n\nReleased on March 12th 2021\n\nChanged\n-------\n- Ensure that generated names for SQLAlchemy relationships do not conflict with columns names\n- Always generate unique indexes on sqlite\n- Translate mysql `current_timestamp()` to `CURRENT_TIMESTAMP` on sqlite\n\nVersion 0.3.1\n-------------\n\nReleased on March 05th 2021\n\nAdded\n~~~~~\n\n- New experimental class Recorder that record all SQL interactions in order to replay them offline (for testing purpose)\n\nVersion 0.2.0\n-------------\n\nReleased on August 21st 2020\n\nAdded\n~~~~~\n- Always enable SQLAlchemy post_update to avoid circular dependecies\n- Disable all cache if `cache` config key is set to `no`\n- Do not globally exclude already loaded relations from the other extraction graph branches\n- Improved cyclical relations loading in the extraction graph\n\nChanged\n~~~~~~~\n- Store cache by dbcut version\n\nRemoved\n~~~~~~~\n- Removed marshmallow serialization and prefer builtin json\n\n\nVersion 0.1.6\n-------------\n\nReleased on August 20th 2020\n\nChanged\n~~~~~~~\n- `flush` purges the cache only when `--with-cache` is passed\n\nFixed\n~~~~~\n- Load only transient mapper objects to force sqlalchemy to generate sql insert queries\n\n\nVersion 0.1.5\n-------------\n\nReleased on August 11th 2020\n\nChanged\n~~~~~~~\n- `dumpsql` prints only create and insert sql statements\n\nFixed\n~~~~~\n- Fixed dumpjson regression\n- Fixed query caching mechanism\n- Prepared all mapper objects correctly when metadata is cached\n- Various minor bug fixes\n\n\nVersion 0.1.4\n-------------\n\nReleased on May 07th 2020\n\nFixed\n~~~~~\n- Fixed TypeError exception\n- Defined a max length for indexes on TEXT column on mysql databases\n\n\nVersion 0.1.3\n-------------\n\nReleased on November 27th 2019\n\nChanged\n~~~~~~~\n- `clear` cmd delete only existing table.\n\nFixed\n~~~~~\n- Determistic cache key generation.\n\nFirst release on PyPI.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/itsolutionsfactory/dbcut",
    "keywords": "dbcut",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dbcut",
    "package_url": "https://pypi.org/project/dbcut/",
    "platform": "",
    "project_url": "https://pypi.org/project/dbcut/",
    "project_urls": {
      "Homepage": "https://github.com/itsolutionsfactory/dbcut"
    },
    "release_url": "https://pypi.org/project/dbcut/0.6.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Extract a lightweight subset of your relational production database for development and testing purpose.",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10047921,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5487ae1d971a6e262150691feb98de141df9679eb50bb86584dafe3da2e288fe",
          "md5": "daf285423d35cf9a25280da477395934",
          "sha256": "4050b4ddf9adb8aecfda372db4425ff4bd5a8827bb825b99db776e1395de1e66"
        },
        "downloads": -1,
        "filename": "dbcut-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "daf285423d35cf9a25280da477395934",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 34814,
        "upload_time": "2019-11-27T23:05:52",
        "upload_time_iso_8601": "2019-11-27T23:05:52.598789Z",
        "url": "https://files.pythonhosted.org/packages/54/87/ae1d971a6e262150691feb98de141df9679eb50bb86584dafe3da2e288fe/dbcut-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d10346ae22f95cd950790b423849e2a268133f7680b4700abfa2f207830e76f9",
          "md5": "1ace13551f1e7f601a39b7586c90f830",
          "sha256": "c5237797b4d798d197c2064d8878de7adbb017962792e5483d677a52f90c26a3"
        },
        "downloads": -1,
        "filename": "dbcut-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1ace13551f1e7f601a39b7586c90f830",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30057,
        "upload_time": "2019-11-27T23:05:48",
        "upload_time_iso_8601": "2019-11-27T23:05:48.692471Z",
        "url": "https://files.pythonhosted.org/packages/d1/03/46ae22f95cd950790b423849e2a268133f7680b4700abfa2f207830e76f9/dbcut-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36bba47f811b1e85fec36de0cb2bd61e27ae93d3098e9228f2e68a2aaf1ee725",
          "md5": "89adecec5f314a6839926b30395b86ac",
          "sha256": "4d6ff1b3c18fa28600d06f82d53843142810925a58e8b67cc781936ca389aacb"
        },
        "downloads": -1,
        "filename": "dbcut-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "89adecec5f314a6839926b30395b86ac",
        "packagetype": "bdist_wheel",
        "python_version": "3.7",
        "requires_python": null,
        "size": 35779,
        "upload_time": "2020-05-07T14:41:00",
        "upload_time_iso_8601": "2020-05-07T14:41:00.387964Z",
        "url": "https://files.pythonhosted.org/packages/36/bb/a47f811b1e85fec36de0cb2bd61e27ae93d3098e9228f2e68a2aaf1ee725/dbcut-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c524f274b9d568a989cac0c944daebeca4c39718dfc25b8dbf0b9de7f4a3ce1",
          "md5": "e03efd09712cfac2f7ca5769227bbb78",
          "sha256": "7b458e75699dbe09c00219b53684381fa8f4cd4c36ee6b0fe0dad016971aaee5"
        },
        "downloads": -1,
        "filename": "dbcut-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e03efd09712cfac2f7ca5769227bbb78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32397,
        "upload_time": "2020-05-07T14:40:58",
        "upload_time_iso_8601": "2020-05-07T14:40:58.137875Z",
        "url": "https://files.pythonhosted.org/packages/0c/52/4f274b9d568a989cac0c944daebeca4c39718dfc25b8dbf0b9de7f4a3ce1/dbcut-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "763e71dc6e01b01561a0890b9715de17e03d7b9ee9c8095cf098a25aba6fc0bb",
          "md5": "f8897de3c7f4185a7701ba081aa63653",
          "sha256": "0fe9ee73f062d978e5407c2c3b225f1ced950d9fda5738fa5589f1346a220ff8"
        },
        "downloads": -1,
        "filename": "dbcut-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8897de3c7f4185a7701ba081aa63653",
        "packagetype": "bdist_wheel",
        "python_version": "3.7",
        "requires_python": null,
        "size": 35974,
        "upload_time": "2020-08-11T12:19:31",
        "upload_time_iso_8601": "2020-08-11T12:19:31.661982Z",
        "url": "https://files.pythonhosted.org/packages/76/3e/71dc6e01b01561a0890b9715de17e03d7b9ee9c8095cf098a25aba6fc0bb/dbcut-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4f581832a8b375edf59a60f602dddb3c61fdfc66230325477c8adff8be9b2b9",
          "md5": "2e4a2aa63e8d3421268611db51084ef5",
          "sha256": "1cf7948190ee184824fd26ca78f405ef35f1e1fc92f80464eb3f32cd6c1e7a38"
        },
        "downloads": -1,
        "filename": "dbcut-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2e4a2aa63e8d3421268611db51084ef5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32750,
        "upload_time": "2020-08-11T12:19:29",
        "upload_time_iso_8601": "2020-08-11T12:19:29.194785Z",
        "url": "https://files.pythonhosted.org/packages/a4/f5/81832a8b375edf59a60f602dddb3c61fdfc66230325477c8adff8be9b2b9/dbcut-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d0b032918adbc5e8a45ef9c9819041319bf0b6b8f5c091acb41f7a3caf2d019",
          "md5": "f233a0817e50f8f2230c4a07c5bf44ae",
          "sha256": "acbe26319f4502bb69ac6d874873187fd88cfbdc3d4533d35c9c05ba7a502447"
        },
        "downloads": -1,
        "filename": "dbcut-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f233a0817e50f8f2230c4a07c5bf44ae",
        "packagetype": "bdist_wheel",
        "python_version": "3.7",
        "requires_python": null,
        "size": 36086,
        "upload_time": "2020-08-20T15:39:53",
        "upload_time_iso_8601": "2020-08-20T15:39:53.114778Z",
        "url": "https://files.pythonhosted.org/packages/0d/0b/032918adbc5e8a45ef9c9819041319bf0b6b8f5c091acb41f7a3caf2d019/dbcut-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e55feabfd0decfdbd3eaacc3272dccb48273840ecc1e9e98859a09df1d5c5c7",
          "md5": "4ee1abd270d10b39aab8ba3f137a8997",
          "sha256": "6ba0a0638037471e63aa5a647aaf95dc242c2660dc5b5891c4e20dd26e80524e"
        },
        "downloads": -1,
        "filename": "dbcut-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "4ee1abd270d10b39aab8ba3f137a8997",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32863,
        "upload_time": "2020-08-20T15:39:50",
        "upload_time_iso_8601": "2020-08-20T15:39:50.874460Z",
        "url": "https://files.pythonhosted.org/packages/7e/55/feabfd0decfdbd3eaacc3272dccb48273840ecc1e9e98859a09df1d5c5c7/dbcut-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9190e6bc1f00f7a9ffe5775ee39267a5c70bb66c787aef791a8df5fafc033fb0",
          "md5": "e45043439fbd1d301cd78afc393b1d8b",
          "sha256": "d68ebd8080b089e6cdea6e5f5a3b1b92469017d79bb8517ac9afddb9ecff8d9e"
        },
        "downloads": -1,
        "filename": "dbcut-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e45043439fbd1d301cd78afc393b1d8b",
        "packagetype": "bdist_wheel",
        "python_version": "3.7",
        "requires_python": null,
        "size": 35731,
        "upload_time": "2020-08-21T09:46:54",
        "upload_time_iso_8601": "2020-08-21T09:46:54.294300Z",
        "url": "https://files.pythonhosted.org/packages/91/90/e6bc1f00f7a9ffe5775ee39267a5c70bb66c787aef791a8df5fafc033fb0/dbcut-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec4364e788342f532ecc022577693f135ad2eff477063dc7bddd802e199a9c65",
          "md5": "ec77ddf6fc2bd52eb9713ddeb3b43216",
          "sha256": "4a144b3c7cf35689866370364993aa34a368a08ff88127bd852c7263a7183557"
        },
        "downloads": -1,
        "filename": "dbcut-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ec77ddf6fc2bd52eb9713ddeb3b43216",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33339,
        "upload_time": "2020-08-21T09:46:51",
        "upload_time_iso_8601": "2020-08-21T09:46:51.518700Z",
        "url": "https://files.pythonhosted.org/packages/ec/43/64e788342f532ecc022577693f135ad2eff477063dc7bddd802e199a9c65/dbcut-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1b6fb189566ac5f014f9b18dadbb43c2d87dec28861a91c3a47600e25ec84d6",
          "md5": "7b5e2d667fc780c744992dbbef994b75",
          "sha256": "bc51c0c7e72f2191129ce35f733c378aa0ca45fbfe54e6c9ceb057874b43619b"
        },
        "downloads": -1,
        "filename": "dbcut-0.2.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b5e2d667fc780c744992dbbef994b75",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 34402,
        "upload_time": "2019-11-28T12:29:34",
        "upload_time_iso_8601": "2019-11-28T12:29:34.936907Z",
        "url": "https://files.pythonhosted.org/packages/a1/b6/fb189566ac5f014f9b18dadbb43c2d87dec28861a91c3a47600e25ec84d6/dbcut-0.2.0.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54093dd9b3613eac12f4b1b3052e50cf0d5d83523402f8540c842661fcb7d63e",
          "md5": "16901961b9109eb16e93e0fddd46b5db",
          "sha256": "3472b93705ceed1d9eaea9c14cda324f2d88140dc25b7fc11a8b41b09ac746a0"
        },
        "downloads": -1,
        "filename": "dbcut-0.2.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "16901961b9109eb16e93e0fddd46b5db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30159,
        "upload_time": "2019-11-28T12:29:31",
        "upload_time_iso_8601": "2019-11-28T12:29:31.953363Z",
        "url": "https://files.pythonhosted.org/packages/54/09/3dd9b3613eac12f4b1b3052e50cf0d5d83523402f8540c842661fcb7d63e/dbcut-0.2.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2778e82957042f0166a96737314f305a04f1082b4060b16e35f88b3710a4ce01",
          "md5": "ef8d504557da26b5f6b81c6cd23ddd36",
          "sha256": "e6091201bfa011926a4fb75c0b9dd2270011da75beea0bab6d767dca24525d76"
        },
        "downloads": -1,
        "filename": "dbcut-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef8d504557da26b5f6b81c6cd23ddd36",
        "packagetype": "bdist_wheel",
        "python_version": "3.7",
        "requires_python": null,
        "size": 38371,
        "upload_time": "2021-03-05T10:02:58",
        "upload_time_iso_8601": "2021-03-05T10:02:58.392625Z",
        "url": "https://files.pythonhosted.org/packages/27/78/e82957042f0166a96737314f305a04f1082b4060b16e35f88b3710a4ce01/dbcut-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca5f052ddfbe01a5ab0351e1303e43b4567e54ac98f0a81e5135446265abb7e2",
          "md5": "85b32d1c90a5b7e729136aade964475d",
          "sha256": "b07a823dffe2fe9db6ebf79e4987f8150ea461f2cad706aed56db6b12a018c6e"
        },
        "downloads": -1,
        "filename": "dbcut-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "85b32d1c90a5b7e729136aade964475d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39670,
        "upload_time": "2021-03-05T10:02:56",
        "upload_time_iso_8601": "2021-03-05T10:02:56.046978Z",
        "url": "https://files.pythonhosted.org/packages/ca/5f/052ddfbe01a5ab0351e1303e43b4567e54ac98f0a81e5135446265abb7e2/dbcut-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3e64b4b8bcc226da25cd270680674be7ff3e8606635fa051653785eed1f58d4",
          "md5": "058b538c9ac803e53f2db294cc9f6b09",
          "sha256": "f84ed2833cf13fa6a6ef92de3b2efd37aaffe24f84d38fdf7de0a87a1b54ddee"
        },
        "downloads": -1,
        "filename": "dbcut-0.3.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "058b538c9ac803e53f2db294cc9f6b09",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39679,
        "upload_time": "2021-03-05T10:00:34",
        "upload_time_iso_8601": "2021-03-05T10:00:34.855902Z",
        "url": "https://files.pythonhosted.org/packages/e3/e6/4b4b8bcc226da25cd270680674be7ff3e8606635fa051653785eed1f58d4/dbcut-0.3.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8195c91ba38ed8d715d98c8cbdef2237e6f0555ef694f1884f33839d52bc944b",
          "md5": "fd8612c9145c47f490d59b0317c507da",
          "sha256": "c3ca5338e6279844ba2b085b8f4909d0e04126da10fe1dd6aefcb7c418a7bba7"
        },
        "downloads": -1,
        "filename": "dbcut-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd8612c9145c47f490d59b0317c507da",
        "packagetype": "bdist_wheel",
        "python_version": "3.7",
        "requires_python": null,
        "size": 39926,
        "upload_time": "2021-03-05T11:17:07",
        "upload_time_iso_8601": "2021-03-05T11:17:07.495519Z",
        "url": "https://files.pythonhosted.org/packages/81/95/c91ba38ed8d715d98c8cbdef2237e6f0555ef694f1884f33839d52bc944b/dbcut-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "497f0f790aa9718d3bc79d77d68592df74c197a629122781ea3d2041c0225bb6",
          "md5": "eaf63114855fdcfcdc2f6b976f72e7b4",
          "sha256": "c33612f5fb47825991c632f05b54887680939217917d549313c0e97ef3ea5503"
        },
        "downloads": -1,
        "filename": "dbcut-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eaf63114855fdcfcdc2f6b976f72e7b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40786,
        "upload_time": "2021-03-05T11:17:04",
        "upload_time_iso_8601": "2021-03-05T11:17:04.745076Z",
        "url": "https://files.pythonhosted.org/packages/49/7f/0f790aa9718d3bc79d77d68592df74c197a629122781ea3d2041c0225bb6/dbcut-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3524ce695c398da887506a46f63987a2446ffa18573df187fad6dcd9833b7ad",
          "md5": "e2e3d17e232271e80656a621d8ae54b2",
          "sha256": "378a9e64af949d68e795b9aa44430cc44f18834846e32f6ccd1cc5e85645752f"
        },
        "downloads": -1,
        "filename": "dbcut-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2e3d17e232271e80656a621d8ae54b2",
        "packagetype": "bdist_wheel",
        "python_version": "3.7",
        "requires_python": null,
        "size": 40211,
        "upload_time": "2021-03-12T08:12:22",
        "upload_time_iso_8601": "2021-03-12T08:12:22.569767Z",
        "url": "https://files.pythonhosted.org/packages/a3/52/4ce695c398da887506a46f63987a2446ffa18573df187fad6dcd9833b7ad/dbcut-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fa8ab6c07febaa63560a36543da165440a1e20026644b6958ab0f2b4ee98a9b",
          "md5": "deba471d38f9dde66fb8b6007efb2cd2",
          "sha256": "8d188c3da3ff3151ae7e124c1eb73c57659bb95676c294d7d7b24d4e8f878c1b"
        },
        "downloads": -1,
        "filename": "dbcut-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "deba471d38f9dde66fb8b6007efb2cd2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41285,
        "upload_time": "2021-03-12T08:12:20",
        "upload_time_iso_8601": "2021-03-12T08:12:20.154093Z",
        "url": "https://files.pythonhosted.org/packages/5f/a8/ab6c07febaa63560a36543da165440a1e20026644b6958ab0f2b4ee98a9b/dbcut-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "866e2e4481b877353d29f66f42afc43588917dc29654dfa98c538d2fb98f8066",
          "md5": "0505d78abf9cda5cc94dac52eacf3191",
          "sha256": "73c1eddc04733a434776d5febd7c6a0d91911e3032eae4a383257ea4923d4bb2"
        },
        "downloads": -1,
        "filename": "dbcut-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0505d78abf9cda5cc94dac52eacf3191",
        "packagetype": "bdist_wheel",
        "python_version": "3.7",
        "requires_python": null,
        "size": 40264,
        "upload_time": "2021-04-01T13:07:30",
        "upload_time_iso_8601": "2021-04-01T13:07:30.476322Z",
        "url": "https://files.pythonhosted.org/packages/86/6e/2e4481b877353d29f66f42afc43588917dc29654dfa98c538d2fb98f8066/dbcut-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89840e486539d52a15c57fcb3de6a85b220f186c6ec00f4b535e4aef443aa69e",
          "md5": "c67a08761a24687916a3817b56c7455f",
          "sha256": "6dad07ab0df5d8e5adb0519c99fa82324c91371a71e0c22dda02bbeabb0a6581"
        },
        "downloads": -1,
        "filename": "dbcut-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c67a08761a24687916a3817b56c7455f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41384,
        "upload_time": "2021-04-01T13:07:27",
        "upload_time_iso_8601": "2021-04-01T13:07:27.929922Z",
        "url": "https://files.pythonhosted.org/packages/89/84/0e486539d52a15c57fcb3de6a85b220f186c6ec00f4b535e4aef443aa69e/dbcut-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5e907ddbf199aae5776f4fe04a11968904e11855d51f1e059efbc045b1ef018",
          "md5": "203b18fc7923348ed696267828396181",
          "sha256": "f3e5f4fba248f2217a08285d08b263b256ea62a76b50b6d7601b11ab08001372"
        },
        "downloads": -1,
        "filename": "dbcut-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "203b18fc7923348ed696267828396181",
        "packagetype": "bdist_wheel",
        "python_version": "3.7",
        "requires_python": null,
        "size": 43225,
        "upload_time": "2021-04-09T14:37:29",
        "upload_time_iso_8601": "2021-04-09T14:37:29.472160Z",
        "url": "https://files.pythonhosted.org/packages/c5/e9/07ddbf199aae5776f4fe04a11968904e11855d51f1e059efbc045b1ef018/dbcut-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c017820c553a9bc0289b678dab46c50ef9bf7427b48f2aba6a1c466d6c826e6a",
          "md5": "19d3f4355dac5210b24a27d0b36d0c30",
          "sha256": "ac1995f70acd9e6890597e2810e918ef40f07f8c219215211e2924aa8e797061"
        },
        "downloads": -1,
        "filename": "dbcut-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "19d3f4355dac5210b24a27d0b36d0c30",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43913,
        "upload_time": "2021-04-09T14:37:26",
        "upload_time_iso_8601": "2021-04-09T14:37:26.907677Z",
        "url": "https://files.pythonhosted.org/packages/c0/17/820c553a9bc0289b678dab46c50ef9bf7427b48f2aba6a1c466d6c826e6a/dbcut-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9672125cde502cb98ec0c534e775a5624244349809184a62ef2a2072dc1ad3fa",
          "md5": "e45e55263b8227f47ea8aab2888c9888",
          "sha256": "aa45a61cb73636e83c02da8d3e06147953ed6559e013d2b539db835e8dfef3c1"
        },
        "downloads": -1,
        "filename": "dbcut-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e45e55263b8227f47ea8aab2888c9888",
        "packagetype": "bdist_wheel",
        "python_version": "3.7",
        "requires_python": null,
        "size": 43543,
        "upload_time": "2021-04-13T08:25:05",
        "upload_time_iso_8601": "2021-04-13T08:25:05.674183Z",
        "url": "https://files.pythonhosted.org/packages/96/72/125cde502cb98ec0c534e775a5624244349809184a62ef2a2072dc1ad3fa/dbcut-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09243be52714abde09a96255e68afb38898c031a810b854f4f3d48a3bc9eb8f3",
          "md5": "00f626fc237063abbb849ae03bd3bc07",
          "sha256": "b367a4fbd8ae1121660a49aa51374d7dd80d97eb5d14201be985cefed28533c4"
        },
        "downloads": -1,
        "filename": "dbcut-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "00f626fc237063abbb849ae03bd3bc07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44308,
        "upload_time": "2021-04-13T08:25:02",
        "upload_time_iso_8601": "2021-04-13T08:25:02.107295Z",
        "url": "https://files.pythonhosted.org/packages/09/24/3be52714abde09a96255e68afb38898c031a810b854f4f3d48a3bc9eb8f3/dbcut-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9672125cde502cb98ec0c534e775a5624244349809184a62ef2a2072dc1ad3fa",
        "md5": "e45e55263b8227f47ea8aab2888c9888",
        "sha256": "aa45a61cb73636e83c02da8d3e06147953ed6559e013d2b539db835e8dfef3c1"
      },
      "downloads": -1,
      "filename": "dbcut-0.6.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e45e55263b8227f47ea8aab2888c9888",
      "packagetype": "bdist_wheel",
      "python_version": "3.7",
      "requires_python": null,
      "size": 43543,
      "upload_time": "2021-04-13T08:25:05",
      "upload_time_iso_8601": "2021-04-13T08:25:05.674183Z",
      "url": "https://files.pythonhosted.org/packages/96/72/125cde502cb98ec0c534e775a5624244349809184a62ef2a2072dc1ad3fa/dbcut-0.6.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "09243be52714abde09a96255e68afb38898c031a810b854f4f3d48a3bc9eb8f3",
        "md5": "00f626fc237063abbb849ae03bd3bc07",
        "sha256": "b367a4fbd8ae1121660a49aa51374d7dd80d97eb5d14201be985cefed28533c4"
      },
      "downloads": -1,
      "filename": "dbcut-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "00f626fc237063abbb849ae03bd3bc07",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 44308,
      "upload_time": "2021-04-13T08:25:02",
      "upload_time_iso_8601": "2021-04-13T08:25:02.107295Z",
      "url": "https://files.pythonhosted.org/packages/09/24/3be52714abde09a96255e68afb38898c031a810b854f4f3d48a3bc9eb8f3/dbcut-0.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}