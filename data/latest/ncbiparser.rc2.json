{
  "info": {
    "author": "benben-miao",
    "author_email": "benben.miao@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "### 1. NCBI-Parser\nSearch any term from all NCBI databases to obtain matched entries, and download all NCBI GenBank format files and sequences corresponding to accessory number in genbank directory, finally  export all Species Latin names, Accessory Number, Sequence Length, Division, Collection Country, Collection Date, Collected Worker, Identified Worker, and Reference information, etc. of the search records as tabular files.\n> Developer: https://github.com/benben-miao \\\nGithub: https://github.com/benben-miao/NCBI-Parser \\\nPyPI: https://pypi.org/project/ncbiparser/\n\n### 2. Usage\n```bash\n# Install the package\npip install ncbiparser\n\n# Run the command internally\nncbiparser --help\nUsage: ncbi-parser.exe [OPTIONS]\n\n  Description: Search any term from all NCBI databases to obtain matched\n  entries, and download all NCBI GenBank format files and sequences\n  corresponding to accessory number in genbank directory, finally export all\n  Species Latin names, Accessory Number, Sequence Length, Division, Collection\n  Country, Collection Date, Collected Worker, Identified Worker, and Reference\n  information, etc. of the search records as tabular files.\n\n  1. Get options and parameters help:\n\n  ncbiparser --help\n\n  2. Example (simple information). Users only need to input the search term,\n  and the default search is in NCBI nucleotide database:\n\n  ncbiparser --term \"Acanthopagrus 16S\" --output results.xls\n\n  3. Example (complete information). Specify the NCBI database type, input the\n  search term, specify the number of records to download and extract, and\n  suggest setting a larger parameter max_record:\n\n  ncbiparser --db_type nucleotide --term \"Acanthopagrus 16S\" --max_record 500\n  --res_type gb --output results.xls\n\nOptions:\n  --db_type TEXT     Please input NCBI database type, default: \"nucleotide\",\n                     including: [pubmed, protein, nuccore, ipg, nucleotide,\n                     structure, genome, annotinfo, assembly, bioproject,\n                     biosample, blastdbinfo, books, cdd, clinvar, gap,\n                     gapplus, grasp, dbvar, gene, gds, geoprofiles,\n                     homologene, medgen, mesh, ncbisearch, nlmcatalog, omim,\n                     orgtrack, pmc, popset, proteinclusters, pcassay, protfam,\n                     pccompound, pcsubstance, seqannot, snp, sra, taxonomy,\n                     biocollections, gtr]  [required]\n  --term TEXT        Please input search term content, default: \"Acanthopagrus\n                     16S\"  [required]\n  --max_record TEXT  Please input max record number, default: \"100\", up to:\n                     10000  [required]\n  --res_type TEXT    Please input result type, default: \"gb\", including:\n                     [\"gb\", \"fasta\", \"gbwithparts\", \"gbcoll\"]\n  --output TEXT      Please input output full name (path + name + extension).\n                     default=\"results.xls\"\n  --help             Show this message and exit.\n```\n\n### 3. NCBI GenBank format\n```shell\nLOCUS       LC649152                1081 bp    DNA     linear   VRT 03-SEP-2021\nDEFINITION  Acanthopagrus bifasciatus Kuroshio Biological Research Foundation\n            KBF-I 361 mitochondrial genes for 12S rRNA, tRNA-Val, 16S rRNA,\n            partial and complete sequence.\nACCESSION   LC649152\nVERSION     LC649152.1\nKEYWORDS    .\nSOURCE      mitochondrion Acanthopagrus bifasciatus (twobar seabream)\n  ORGANISM  Acanthopagrus bifasciatus\n            Eukaryota; Metazoa; Chordata; Craniata; Vertebrata; Euteleostomi;\n            Actinopterygii; Neopterygii; Teleostei; Neoteleostei;\n            Acanthomorphata; Eupercaria; Spariformes; Sparidae; Acanthopagrus.\nREFERENCE   1\n  AUTHORS   Sado,T., Fukuchi,T. and Miya,M.\n  TITLE     Reference data for MiFish metabarcoding analysis\n  JOURNAL   Unpublished\nREFERENCE   2  (bases 1 to 1081)\n  AUTHORS   Sado,T., Fukuchi,T. and Miya,M.\n  TITLE     Direct Submission\n  JOURNAL   Submitted (27-AUG-2021) Contact:Tetsuya Sado Natural History Museum\n            & Institute, Chiba; 955-2 Aoba-cho, Chuo-ku, Chiba, Chiba 260-8682,\n            Japan URL :http://www2.chiba-muse.or.jp/NATURAL/\nFEATURES             Location/Qualifiers\n     source          1..1081\n                     /organism=\"Acanthopagrus bifasciatus\"\n                     /organelle=\"mitochondrion\"\n                     /mol_type=\"genomic DNA\"\n                     /specimen_voucher=\"Kuroshio Biological Research Foundation\n                     KBF-I 361\"\n                     /db_xref=\"taxon:767411\"\n                     /PCR_primers=\"fwd_name: L-708-12S, fwd_seq:\n                     ttayacatgcaagtatccgc, rev_name: H-1784-16SG, rev_seq:\n                     ttcagctttcccttgcggtac\"\n     rRNA            <1..894\n                     /product=\"12S ribosomal RNA\"\n     tRNA            895..967\n                     /product=\"tRNA-Val\"\n     rRNA            968..>1081\n                     /product=\"16S ribosomal RNA\"\nORIGIN      \n        1 acccccgtga aaatgcccta cagttccccg cccggaaaca aggagccggt atcaggcaca\n       61 ttcaatttag cccacgacac cttgctcagc cacaccctca agggtactca gcagtgataa\n      121 accttgacac ataagtgaaa acttgaatca gttaaagcta agtagggccg gtaaaactcg\n      181 tgccagccac cgcggttata cgagaggccc aagttgttag aaatcggcgt aaagggtggt\n      241 taagaataag attaaaatta aagccgaaca tctttagtag ctgttatacg ctttcaaaga\n      301 caagaagccc aactgcgaaa gtagctttat attttctgaa cccacgaaag ctaaggtaca\n      361 aactgggatt agatacccca ctatgcttag ccgtaaacat cgacagttta ttacattttc\n      421 tgtccgcctg ggtactacaa gcattagctc aaaacccaaa ggacttggcg gtgctttaga\n      481 cccacctaga ggagcctgtt ctagaaccga tattccccgt tcaacctcac ctctccttgc\n      541 ctctcagcct atataccgcc gtcgttcagc ttaccctgtg aagggcaaaa agtaagcaaa\n      601 attggcactg cccagtacgt caggtcgagg tgtagtcaat ggagtgggaa gaaatgggct\n      661 acattccctt gtcttcaggg aactacgaat ggtgcactga aaatgtgtgc ctgaaggagg\n      721 atttagcagt aagtagtaat ttagaatatt ctactgaagc cggctcttaa gcgcgcacac\n      781 accgcccgtc actctccccg agactttaaa ttcacattaa ctaaaatatt aaatatcata\n      841 gaggggaggc aagtcgtaac atggtaagtg taccggaagg tgtacttgga aaaccagcgc\n      901 atagctaaac tagataaagc acctccctta cactgagaag atattcgtgc aaatcgaatt\n      961 gccctgagcc tatcagctag ccctctaaca aaaaacaaca cacccccatc aattaacccc\n     1021 caatgcactt acattaaatt aaacaaatca tttttccacc caagtatggg cgacagaaaa\n     1081 g\n//\n```\n\n### 4. Click usage\n```python\nimport click\n\n@click.command()\n@click.option('--db_type', type=str, default=\"nucleotide\", required=True, nargs=1, \n            help='Please input NCBI database type, default: \"nucleotide\", including: [pubmed, protein, nuccore, ipg, nucleotide, structure, genome, annotinfo, assembly, bioproject, biosample, blastdbinfo, books, cdd, clinvar, gap, gapplus, grasp, dbvar, gene, gds, geoprofiles, homologene, medgen, mesh, ncbisearch, nlmcatalog, omim, orgtrack, pmc, popset, proteinclusters, pcassay, protfam, pccompound, pcsubstance, seqannot, snp, sra, taxonomy, biocollections, gtr]')\n@click.option('--term', type=str, default=\"\", required=True, nargs=1, \n            help='Please input search term content, default: \"Acanthopagrus 16S\"')\n@click.option('--max_record', type=str, default=\"100\", required=True, nargs=1, \n            help='Please input max record number, default: \"100\", up to: 10000')\n@click.option('--res_type', type=str, default=\"gb\", required=False, nargs=1, \n            help='Please input result type, default: \"gb\", including: [\"gb\", \"fasta\", \"gbwithparts\", \"gbcoll\"]')\n@click.option('--output', type=str, default=\"results.xls\", nargs=1, \n            help='Please input output full name (path + name + extension). default=\"results.xls\"')\n\ndef run(db_type, term, max_record, res_type, output):\n\n  \"\"\"\n  Description:\n  Search any term from all NCBI databases to obtain matched entries, and download all NCBI GenBank format files and sequences corresponding to accessory number in genbank directory, finally export all Species Latin names, Accessory Number, Sequence Length, Division, Collection Country, Collection Date, Collected Worker, Identified Worker, and Reference information, etc. of the search records as tabular files. \\n\n  1. Get options and parameters help: \\n\n  ncbi-parser --help \\n\n  2. Example (simple information). Users only need to input the search term, and the default search is in NCBI nucleotide database: \\n\n  ncbi-parser --term \"Acanthopagrus 16S\" --output results.xls \\n\n  3. Example (complete information). Specify the NCBI database type, input the search term, specify the number of records to download and extract, and suggest setting a larger parameter max_record: \\n\n  ncbi-parser --db_type nucleotide --term \"Acanthopagrus 16S\" --max_record 500 --res_type gb --output results.xls \\n\n  \"\"\"\n\n  results_file = output\n```\n\n### 5. Pyinstaller usage\n```shell\nmamba create -n ncbiparser python=3.8\nconda activate ncbiparser\n\nwhich python\npip install biopython click\npython ncbiparser.py --help\n\npip install pyinstaller\npyinstall -F ncbiparser.py -i favicon.ico\n```\n\n### 6. Package and publish `ncbiparser` to PyPI\n#### 6.1 Create setup.py file\n```python\n#!/usr/bin/python\n# _*_ coding:utf-8 _*_\n\nfrom setuptools import setup, find_packages\n\n### 1. Read the README.md contents\nfrom os import path\nthis_directory = path.abspath(path.dirname(__file__))\nwith open(path.join(this_directory, 'README.md'), encoding='utf-8') as f:\n    long_description = f.read()\nreadme = 'ncbiparser/README.md'\n\n### 2. Setup the package configure\nsetup(\n    # 2.1 Package information\n    name=\"ncbiparser\",\n    version=\"1.0.0\",\n    url=\"https://github.com/benben-miao/NCBI-Parser\",\n    keywords=[\"CLI\", \"Biology\", \"NCBI\", \"Parser\"],\n    description=\"Search and fetch the Species Latin names, Accessory Number, Sequence Length, Division, Collection Country, Collection Date, Collected Worker, Identified Worker, and Reference information, etc. of the search records as tabular files.\",\n    long_description=long_description,\n    long_description_content_type='text/markdown',\n    download_url=\"https://pypi.org/project/ncbi-parser\",\n\n    # 2.2 Developer information\n    author=\"benben-miao\",\n    author_email=\"benben.miao@outlook.com\",\n    maintainer=\"benben-miao\",\n    maintainer_email=\"benben.miao@outlook.com\",\n    license=\"MIT License\",\n\n    # 2.3 Package configure\n    # include_package_data=True,\n    platforms=\"any\",\n    install_requires=['biopython', 'click'],\n    # packages=find_packages(),\n    packages=['ncbiparser'],\n    entry_points={\n        'console_scripts': ['ncbiparser=ncbiparser.ncbiparser:run']\n    },\n    classifiers=[\n        \"Programming Language :: Python :: 3\",\n        \"Operating System :: OS Independent\",\n    ],\n    data_files=[readme],\n    # package_data={\n    #     '':['examples/*.xlsx']\n    # },\n    include_package_data=True\n    # exclude_package_data={\n    # }\n)\n\n### 3. Package build, test and publish\n# 3.1 Install setuptools with wheel and twine\n# pip install --upgrade setuptools wheel twine\n\n# 3.2 Check the setup.py content\n# python setup.py check\n\n# 3.2 Build source code tarball\n# python setup.py sdist\n\n# 3.3 Build wheel package and test\n# python setup.py bdist_wheel\n# pip install dist\\*.whl\n\n# 3.4 Test package and uninstall test version\n# ncbiparser --help\n# pip uninstall ncbiparser\n\n# 3.5 Publish the package to PyPI\n# twine upload dist/*\n```\n\n#### 6.2 Create the MANIFEST.in file\n```in\ninclude *.py *.md\nrecursive-include examples *.sh *.py *.ipynb *.txt *.xlsx *.gbk *.fasta *.seq\n```\n\n#### 6.3 Commands\n```shell\n### 3. Package build, test and publish\n# 3.1 Install setuptools with wheel and twine\npip install --upgrade setuptools wheel twine\n\n# 3.2 Check the setup.py content\npython setup.py check\n\n# 3.2 Build source code tarball\npython setup.py sdist\n\n# 3.3 Build wheel package and test\npython setup.py bdist_wheel\npip install dist\\*.whl\n\n# 3.4 Test package and uninstall test version\nncbiparser --help\npip uninstall ncbiparser\n\n# 3.5 Publish the package to PyPI\ntwine upload dist/*\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/ncbi-parser",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/benben-miao/NCBI-Parser",
    "keywords": "CLI,Biology,NCBI,Parser",
    "license": "MIT License",
    "maintainer": "benben-miao",
    "maintainer_email": "benben.miao@outlook.com",
    "name": "ncbiparser",
    "package_url": "https://pypi.org/project/ncbiparser/",
    "platform": "any",
    "project_url": "https://pypi.org/project/ncbiparser/",
    "project_urls": {
      "Download": "https://pypi.org/project/ncbi-parser",
      "Homepage": "https://github.com/benben-miao/NCBI-Parser"
    },
    "release_url": "https://pypi.org/project/ncbiparser/1.1.0/",
    "requires_dist": [
      "biopython",
      "click"
    ],
    "requires_python": "",
    "summary": "Search and fetch the Species Latin names, Accessory Number, Sequence Length, Division, Collection Country, Collection Date, Collected Worker, Identified Worker, and Reference information, etc. of the search records as tabular files.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13532051,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da751fa8796e57e80b2e7ebaf0a1f16d0f57c14867539f9395c25a8a1091aba6",
          "md5": "46facde3d5b09b4d1eafdcc933ff880e",
          "sha256": "99b4fcfe90429a9687ad7c505998413bb8a7ff5c01ce5614aba899835132e4e2"
        },
        "downloads": -1,
        "filename": "ncbiparser-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46facde3d5b09b4d1eafdcc933ff880e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13551,
        "upload_time": "2022-04-16T13:13:45",
        "upload_time_iso_8601": "2022-04-16T13:13:45.644176Z",
        "url": "https://files.pythonhosted.org/packages/da/75/1fa8796e57e80b2e7ebaf0a1f16d0f57c14867539f9395c25a8a1091aba6/ncbiparser-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6213e1474d6a11cd2cabda91903a428577042acd6295c417f2ca9dd4128818d0",
          "md5": "3ce58a43fa4f0f837f80d10e4530ac8d",
          "sha256": "5677561982d73f91d0a332fc3957402cb035f071eaed6e7e2522bc1cb566bf7b"
        },
        "downloads": -1,
        "filename": "ncbiparser-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3ce58a43fa4f0f837f80d10e4530ac8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7215,
        "upload_time": "2022-04-16T13:13:51",
        "upload_time_iso_8601": "2022-04-16T13:13:51.634279Z",
        "url": "https://files.pythonhosted.org/packages/62/13/e1474d6a11cd2cabda91903a428577042acd6295c417f2ca9dd4128818d0/ncbiparser-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b58b7cb0582a68c292ac981ce1d47c847d47981b0c2a124573ffced22cdea16",
          "md5": "2eaf1e8ceca88f89b796a8f4e0416bda",
          "sha256": "75b29868a374051f2a1a9f766b512a488f8eef9903a3578bfc7de688f09c8bfd"
        },
        "downloads": -1,
        "filename": "ncbiparser-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2eaf1e8ceca88f89b796a8f4e0416bda",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15087,
        "upload_time": "2022-04-16T13:23:49",
        "upload_time_iso_8601": "2022-04-16T13:23:49.966947Z",
        "url": "https://files.pythonhosted.org/packages/6b/58/b7cb0582a68c292ac981ce1d47c847d47981b0c2a124573ffced22cdea16/ncbiparser-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd291104b196e0456a5879054bb92607cde9cb8a1f71a4e52934087ded135f7f",
          "md5": "1cc244c8a18f8b1128aa65c5e19dd5aa",
          "sha256": "d39798c3a8ec38f9b392242e9f6351e75f366bbac78d6c17adc4257446f5093f"
        },
        "downloads": -1,
        "filename": "ncbiparser-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1cc244c8a18f8b1128aa65c5e19dd5aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8665,
        "upload_time": "2022-04-16T13:23:51",
        "upload_time_iso_8601": "2022-04-16T13:23:51.785725Z",
        "url": "https://files.pythonhosted.org/packages/cd/29/1104b196e0456a5879054bb92607cde9cb8a1f71a4e52934087ded135f7f/ncbiparser-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b58b7cb0582a68c292ac981ce1d47c847d47981b0c2a124573ffced22cdea16",
        "md5": "2eaf1e8ceca88f89b796a8f4e0416bda",
        "sha256": "75b29868a374051f2a1a9f766b512a488f8eef9903a3578bfc7de688f09c8bfd"
      },
      "downloads": -1,
      "filename": "ncbiparser-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2eaf1e8ceca88f89b796a8f4e0416bda",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15087,
      "upload_time": "2022-04-16T13:23:49",
      "upload_time_iso_8601": "2022-04-16T13:23:49.966947Z",
      "url": "https://files.pythonhosted.org/packages/6b/58/b7cb0582a68c292ac981ce1d47c847d47981b0c2a124573ffced22cdea16/ncbiparser-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd291104b196e0456a5879054bb92607cde9cb8a1f71a4e52934087ded135f7f",
        "md5": "1cc244c8a18f8b1128aa65c5e19dd5aa",
        "sha256": "d39798c3a8ec38f9b392242e9f6351e75f366bbac78d6c17adc4257446f5093f"
      },
      "downloads": -1,
      "filename": "ncbiparser-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1cc244c8a18f8b1128aa65c5e19dd5aa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8665,
      "upload_time": "2022-04-16T13:23:51",
      "upload_time_iso_8601": "2022-04-16T13:23:51.785725Z",
      "url": "https://files.pythonhosted.org/packages/cd/29/1104b196e0456a5879054bb92607cde9cb8a1f71a4e52934087ded135f7f/ncbiparser-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}