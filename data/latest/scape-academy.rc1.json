{
  "info": {
    "author": "Atsuo Ishimoto",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Scrape Academy\n\nScrape Academy provides a framework and an utility helps you to develop web scraping applications.\n\n## Simple web page  scraping\n\nScrape Academy helps you to download web pages to scrape.\n\n```python\n# Download a page from https://www.python.jp\n\nfrom bs4 import BeautifulSoup\nfrom scrapeacademy import context, run\n\nasync def run_simple():\n    page = await context.get(\"https://www.python.jp\")\n    soup = BeautifulSoup(page, features=\"html.parser\")\n    print(soup.title.text)\n\nrun(run_simple())\n```\n\n`scrapeacademy.run()` starts [asyncio](https://docs.python.org/3/library/asyncio.html) event loop and run a scraping function.\n\nIn the async function, you can use `context.get()` method to download the page. The `context.get()` throttle the requests to the server. By default, `context.get()` waits 0.1 seconds between requests.\n\n## Cache downloaded files\n\nWhile developping the scraper, you usually need to investigate the HTML over and over. To help investigations, you can save the downloaded files to the cache directory.\n\nThe `context.get()` method saves downloaded file to the cache directory if `name` parameter is supplied.\n\n```python\n# Save https://www.python.jp\n\nfrom scrapeacademy import context, run\n\nasync def save_index():\n    page = await context.get(\"https://www.python.jp\", name=\"python_jp_index\")\n\nrun(run_simple())\n```\n\nLater, you can load the saved HTML from the cache to scrape using another script.\n\n```python\n# Parse saved HTML file.\n\nfrom scrapeacademy import context\n\nhtml = context.load(\"python_jp_index\")\nsoup = BeautifulSoup(page, features=\"html.parser\")\nprint(soup.title.text)\n```\n\n## Command line utility\n\nScrape Academy provides the `scrapeacademy` command to make development easier.\n\nYou can inspect the cached files with web browser.\n\n```sh\n$ scrapeacademy open python_jp_index\n```\n\nOr, you can view the file with vi editor as follow.\n\n```sh\n$ vi `scrapeacademy path python_jp_index`\n```\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sojin-project/scrape-academy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scape-academy",
    "package_url": "https://pypi.org/project/scape-academy/",
    "platform": "",
    "project_url": "https://pypi.org/project/scape-academy/",
    "project_urls": {
      "Documentation": "https://github.com/sojin-project/scrape-academy",
      "Homepage": "https://github.com/sojin-project/scrape-academy",
      "Source": "https://github.com/sojin-project/scrape-academy"
    },
    "release_url": "https://pypi.org/project/scape-academy/0.0.1/",
    "requires_dist": [
      "aiohttp",
      "aiolimiter",
      "click",
      "wheel ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "black ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "autoflake ; extra == 'dev'",
      "pre-commit ; extra == 'dev'"
    ],
    "requires_python": ">=3.9",
    "summary": "A framework and an utility helps you to develop web scraping applications.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10370646,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba9cc8e3f3e16d4140a294e48083ed9d72c26f1d186ef9b14b51af0836fba28f",
          "md5": "0bbd7f52cb55bf79d7cbc263c32cac9b",
          "sha256": "60699b43bb933207b72456b787a4a599e92c7cb379913f16e62fe22866954163"
        },
        "downloads": -1,
        "filename": "scape_academy-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0bbd7f52cb55bf79d7cbc263c32cac9b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9",
        "size": 3219,
        "upload_time": "2021-05-16T12:48:14",
        "upload_time_iso_8601": "2021-05-16T12:48:14.697432Z",
        "url": "https://files.pythonhosted.org/packages/ba/9c/c8e3f3e16d4140a294e48083ed9d72c26f1d186ef9b14b51af0836fba28f/scape_academy-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba9cc8e3f3e16d4140a294e48083ed9d72c26f1d186ef9b14b51af0836fba28f",
        "md5": "0bbd7f52cb55bf79d7cbc263c32cac9b",
        "sha256": "60699b43bb933207b72456b787a4a599e92c7cb379913f16e62fe22866954163"
      },
      "downloads": -1,
      "filename": "scape_academy-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0bbd7f52cb55bf79d7cbc263c32cac9b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.9",
      "size": 3219,
      "upload_time": "2021-05-16T12:48:14",
      "upload_time_iso_8601": "2021-05-16T12:48:14.697432Z",
      "url": "https://files.pythonhosted.org/packages/ba/9c/c8e3f3e16d4140a294e48083ed9d72c26f1d186ef9b14b51af0836fba28f/scape_academy-0.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}