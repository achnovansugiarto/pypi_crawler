{
  "info": {
    "author": "Kenneth Nicholas Jørgensen, Vincent Verdeil",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Plugins",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Multimedia :: Graphics :: Capture :: Digital Camera"
    ],
    "description": "====================\npibooth-lcd-i2c\n====================\n\n|PythonVersions| |PypiPackage| |Downloads|\n\n``pibooth-lcd-i2c`` is a plugin for the `pibooth`_ application.\n\n.. image:: https://raw.githubusercontent.com/DJ-Dingo/pibooth-lcd-i2c/master/templates/lcd.png\n   :align: center\n   :alt: LCD screen\n\n\nAdd any 16x2 or 20x4 LCD-screen with a **Hitachi HD44780 controller** using a port expander connected Through I2c.\n\nIt can show numbers of **Photos Taken**, **Printed Photos**, **Forgotten Photos**, **Remaining Duplicates**.\n\nIt also have 4 x **Free-Text** where you can write your own text, and show **Date/Time**.\n\nExamples:\n\n* Show pibooth counters like \"Taken Photos 197\" or \"Today Photos 197\"\n* Show some free text in the line \"Hello from pibooth!\"\n* Show the Date/Time Clock**\n\n.. note:: Maximum text size depends on the LCD type and on the presence of a counter after.\n\nSupported port expanders are the (**PCF8574** - Default), the **MCP23008** and the **MCP23017**.\n\n* I2c port address (**Default 0x27** on I2c PCF8574T ), (**Default 0x3F** on I2c PCF8574AT)\n\n**All changes can be made in the pibooth.cfg**\n\n--------------------------------------------------------------------------------\n\n.. contents::\n\nRequirements\n------------\n\nHardware\n^^^^^^^^\n\n* 1 Raspberry Pi 3 Model B (or higher)\n* 1 LCD-screen **Hitachi HD44780 controller** with I2c (PCF8574, or MCP23008 or MCP23017)\n* 1 I2c safe Bi-directional Logic Level Converter\n\nInstall\n-------\n::\n\n    $ pip3 install pibooth-lcd-i2c\n\n\nConfiguration\n-------------\n\n\nTurn I2C on - Raspberry Pi\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe I2C peripheral is not turned on by default.\n\nThere are two methods to adjust the settings. To enable it, do the following.\n\n**Raspberry Pi Configuration via Desktop GUI**  \n\nYou can use the Desktop GUI by heading to the Pi Start Menu > Preferences > Raspberry Pi Configuration.\n\nA window will pop up with different tabs to adjust settings. What we are interested is the Interfaces tab. \n\nClick on the tab and select Enable for I2C. Click on the OK button to save.    \n\nWe recommend restarting your Pi to ensure that the changes to take effect.  \n\nClick on the Pi Start Menu > Preferences > Shutdown. Since we just need to restart, click on the Restart button.\n\n**raspi-config Tool via Terminal**\n\nI2C is not turned on by default. Again, we can use raspi-config to enable it.\n\n* Run sudo raspi-config.\n* Use the down arrow to select 5 Interfacing Options\n* Arrow down to P5 I2C.\n* Select yes when it asks you to enable I2C\n* Also select yes if it asks about automatically loading the kernel module.\n* Use the right arrow to select the <Finish> button.\n* Select yes when it asks to reboot.\n\nThe system will reboot. when it comes back up, log in and enter the following command\n\n``>ls /dev/*i2c*``   \n\nThe Pi should respond with\n\n``/dev/i2c-1``        \n\nWhich represents the user-mode I2C interface.\n\n\nHow to find the name of your port expander on the I2c\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nYou need to provide the name of the I²C port expander that your board uses.  \n\nIt should be written on the microchip that’s soldered on to your I2c board. \n\nSupported port expanders are the **PCF8574**, the **MCP23008** and the **MCP23017**.\n\nThe board on this photo has a **PCF8574** port expander chip on it. \n\n\n.. image:: https://raw.githubusercontent.com/DJ-Dingo/pibooth-lcd-i2c/master/templates/I2c-port-expander-name__.png\n   :align: center\n   :alt: I2C on the back of LCD\n\nHow to find your I2c addresss\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nYou need to know the address of your I2c. You can find it on the command line using the **\"sudo i2cdetect -y 1\"** command.  \n\nIn this case the address of the display is **0x3F**.  \n\n\n.. image:: https://raw.githubusercontent.com/DJ-Dingo/pibooth-lcd-i2c/master/templates/iic-address.png\n   :align: center\n   :alt: I2C Address\n\nHow to change address on the I2c\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nYou can change the address by making a bridge. \n\nSoldering 1 or more wire on the back of the I2c (short circuit) **A0**, **A1**, **A2** \n\n\n.. image:: https://raw.githubusercontent.com/DJ-Dingo/pibooth-lcd-i2c/master/templates/I2c-adress.png\n   :align: center\n   :alt:  Change Address on I2c\n\n\nHow to setup the LCD in the config.cfg file\n-------------------------------------------\n\nOptions are available by editing the configuration file\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nusing the command - (Some options can also be changed in the pibooth menu under \"Lcd_i2c\")\n\n::\n\n   $ pibooth --config\n\n\nHow to setup LCD_I2C in config.cfg \n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n[LCD_I2C] \n\n# Choose LCD chip - PCF8574(Default) or MCP23008 or MCP23017 \n\nlcd_chip = **PCF8574** \n\n# Change the I2C port number 1 or 2 - (Default = 1) \n\nlcd_port = **1** \n\n# Change the I2C charmap A00 or A02 or ST0B - (Default = A02) \n\nlcd_charmap = **A02** \n\n-------------------------------------------------------------------------------------- \n\n# This can also be changed in the pibooth menu under \"Lcd_i2c\" \n\n# Change Port Address 0x3F(Default) \n\nlcd_port_address = **0x3F** \n\n# Number of columns per row 16 or 20 (16 = Default on a 16x2 LCD) \n\nlcd_cols = **16** \n\n# Number of display rows 1 or 2 or 4 - (2 = Default on a 16x2 LCD) \n\nlcd_rows = **2** \n\n--------------------------------------------------------------------------------------\n\nSelect what to display on line 1,2,3,4  \n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n# This can also be changed in the pibooth menu under \"Lcd_i2c\"\n\n# **Taken_Photo** **Printed** **Forgotten** **Remaining_Duplicates** **Date_Time** **Text**  \n\n# Choose what to display on line 1,2,3,4 \n\n- **lcd_line_1_type** **lcd_line_2_type** **lcd_line_3_type** **lcd_line_4_type** = etc. **Taken_Photo** \n\n\nWrite the text showing before the counter \n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n# Text before etc. **Taken Photo Counter** is displayed - This can also be changed in the pibooth menu under \"Lcd_i2c\"\n\n- Max-12 characters on a 16x2 display - Max 16 characters on a 20x4 display \n\n- **lcd_line_1_text** **lcd_line_2_text** **lcd_line_3_text** **lcd_line_4_text** = etc. **Taken Photo**, **Printed**, **Forgotten**, **Duplicates** \n\n\nHow to change the Date-Time format\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSee the Date-Time format codes in the following `page <https://github.com/DJ-Dingo/pibooth-lcd-I2c/blob/master/Date-Time_Format_Codes.rst>`_\n\n# You can change the way Date-Time is displayed - This can also be changed in the pibooth menu under \"Lcd_i2c\"\n\n- Max-16 character on a 16x2 display - Max 20 character on a 20x4 display  \n\n# Default = **%d/%m - %H:%M:%S** \n\n- Choose Date_Time and use etc. **%d/%m - %H:%M:%S** to display the date and time\n\n\nWrite your own text on the display \n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n# This can also be changed in the pibooth menu under \"Lcd_i2c\"\n\n# Text - Max-16 characters on a 16x2 display - Max 20 characters on a 20x4 display \n\n- Choose Text = **Write your own text** \n\n\n\nStates description\n------------------\n\n.. image:: https://raw.githubusercontent.com/DJ-Dingo/pibooth-lcd-i2c/master/templates/state-sequence-lcd-i2c.png\n   :align: center\n   :alt:  State sequence\n\n\nCircuit diagram\n---------------\n\nHere is the diagram for hardware connections.\n\n.. image:: https://raw.githubusercontent.com/DJ-Dingo/pibooth-lcd-i2c/master/templates/Pibooth%20LCD-I2c%20Sketch%208_bb.png\n   :align: center\n   :alt:  PIR-sensor Electronic sketch\n\nWiring\n------\n\nI2C-safe Bi-directional Logic Level Converter \n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWhen using a port expander on your LCD, you will have to use 5v.  \n\nSince the Raspberry Pi GPIO only handle 3.3v, it will therefore be a good idea to use a **I2C-safe Bi-directional Logic Level Converter** so you don't fryed your pi.\n\n.. image:: https://raw.githubusercontent.com/DJ-Dingo/pibooth-lcd-i2c/master/templates/level_converter.png\n   :align: center\n   :alt: 4-channel I2C-safe Bi-directional Logic Level converter\n\n\nHow to connect a **Level Converter** to your **Port Expander** and the Raspberry Pi \n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nConnect the I2c Port Expander to **HV** (High Level) on the Level Converter.  \n\n\n- GND: Pin GND (GND)\n- VCC: Pin HV  (HV)(5v) - Also connect **5v** from the raspberry Pi Pin 2, to **HV** on the Level Converter\n- SDA: Pin HV2 (HV2)\n- SCL: Pin HV1 (HV1)\n\nConnect the Raspberry Pi (**BOARD numbering scheme**) to **LV** (Low Level) on the Level Converter. \n\n- GND:  Pin 6 (GND)\n- 3.3v: Pin 1 (LV)\n- SDA:  Pin 3 (LV2)\n- SCL:  Pin 5 (LV1)\n\n\n.. --- Links ------------------------------------------------------------------\n\n.. _`pibooth`: https://pypi.org/project/pibooth\n\n.. |PythonVersions| image:: https://img.shields.io/badge/python-2.7+ / 3.6+-red.svg\n   :target: https://www.python.org/downloads\n   :alt: Python 2.7+/3.6+\n\n.. |PypiPackage| image:: https://badge.fury.io/py/pibooth-lcd-i2c.svg\n   :target: https://pypi.org/project/pibooth-lcd-i2c\n   :alt: PyPi package\n\n.. |Downloads| image:: https://img.shields.io/pypi/dm/pibooth-lcd-i2c?color=purple\n   :target: https://pypi.org/project/pibooth-lcd-i2c\n   :alt: PyPi downloads\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/DJ-Dingo/pibooth-lcd-I2c/archive/1.0.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DJ-Dingo/pibooth-lcd-I2c",
    "keywords": "Raspberry Pi,camera,photobooth,pygame,lcd",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pibooth-lcd-i2c",
    "package_url": "https://pypi.org/project/pibooth-lcd-i2c/",
    "platform": "unix",
    "project_url": "https://pypi.org/project/pibooth-lcd-i2c/",
    "project_urls": {
      "Download": "https://github.com/DJ-Dingo/pibooth-lcd-I2c/archive/1.0.0.tar.gz",
      "Homepage": "https://github.com/DJ-Dingo/pibooth-lcd-I2c"
    },
    "release_url": "https://pypi.org/project/pibooth-lcd-i2c/1.0.0/",
    "requires_dist": [
      "pibooth (>=2.0.0)",
      "RPLCD (>=1.3.0)"
    ],
    "requires_python": "",
    "summary": "Plugin to handle small LCD display.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8597266,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fde2c20f9334aab999984e19467f4f8de4eccc540a0cce09d7bff8ba0cbf4a8",
          "md5": "08358a616dedc7f4be83952420372e16",
          "sha256": "557b80d65da043ccdc65ccd71eeb112c605d921a8dea290f7f3536d1020543b0"
        },
        "downloads": -1,
        "filename": "pibooth_lcd_i2c-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08358a616dedc7f4be83952420372e16",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 19122,
        "upload_time": "2020-11-06T14:40:30",
        "upload_time_iso_8601": "2020-11-06T14:40:30.738862Z",
        "url": "https://files.pythonhosted.org/packages/2f/de/2c20f9334aab999984e19467f4f8de4eccc540a0cce09d7bff8ba0cbf4a8/pibooth_lcd_i2c-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2fde2c20f9334aab999984e19467f4f8de4eccc540a0cce09d7bff8ba0cbf4a8",
        "md5": "08358a616dedc7f4be83952420372e16",
        "sha256": "557b80d65da043ccdc65ccd71eeb112c605d921a8dea290f7f3536d1020543b0"
      },
      "downloads": -1,
      "filename": "pibooth_lcd_i2c-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "08358a616dedc7f4be83952420372e16",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 19122,
      "upload_time": "2020-11-06T14:40:30",
      "upload_time_iso_8601": "2020-11-06T14:40:30.738862Z",
      "url": "https://files.pythonhosted.org/packages/2f/de/2c20f9334aab999984e19467f4f8de4eccc540a0cce09d7bff8ba0cbf4a8/pibooth_lcd_i2c-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}