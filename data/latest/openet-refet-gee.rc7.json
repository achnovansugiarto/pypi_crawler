{
  "info": {
    "author": "Charles Morton",
    "author_email": "charles.morton@dri.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "================================================================================\nOpenET - Google Earth Engine ASCE Standardized Reference Evapotranspiration (ET)\n================================================================================\n\n|version| |build|\n\nThis repository provides `Google Earth Engine <https://earthengine.google.com/>`__ Python API based implementation of the ASCE Standardized Reference Evapotranspiration Equations (ASCE2005_) for computing daily and hourly reference ET.\n\nUsage\n=====\n\nDaily\n-----\n\nThe following demonstrates how to compute a single daily ETr value using weather data for 2015-07-01 from the `Fallon, NV AgriMet station <https://www.usbr.gov/pn/agrimet/agrimetmap/falnda.html>`__.\nThe necessary unit conversions are shown on the input values.\nThe raw input data is available `here <https://www.usbr.gov/pn-bin/daily.pl?station=FALN&year=2015&month=7&day=1&year=2015&month=7&day=1&pcode=ETRS&pcode=MN&pcode=MX&pcode=SR&pcode=YM&pcode=UA>`__.\n\n.. code-block:: console\n\n    import math\n    import ee\n    import openet.refetgee\n\n    # Unit conversions\n    tmin_c = (66.65 - 32) * (5.0 / 9)                          # F -> C\n    tmax_c = (102.80 - 32) * (5.0 / 9)                         # F -> C\n    tdew_c = (57.26 - 32) * (5.0 / 9)                          # F -> C\n    ea = 0.6108 * math.exp(17.27 * tdew_c / (tdew_c + 237.3))  # kPa\n    rs = (674.07 * 0.041868)                                   # Langleys -> MJ m-2 d-1\n    uz = 4.80 * 0.44704                                        # mpg -> m s-1\n    lat = 39.4575                                              # degrees\n\n    etr = openet.refetgee.Daily(\n        tmin=tmin_c, tmax=tmax_c, ea=ea, rs=rs, uz=uz, zw=3, elev=1208.5,\n        lat=lat, doy=182).etr.getInfo()\n\n    print('ETr: {:.2f} mm'.format(float(etr)))\n\nHourly\n------\n\nThe following demonstrates how to compute a single hourly ETr value using weather data for 18:00 UTC (11:00 AM PDT) on 2015-07-01 from the `Fallon, NV AgriMet station <https://www.usbr.gov/pn/agrimet/agrimetmap/falnda.html>`__.\nThe necessary unit conversions are shown on the input values.\nThe raw input data is available `here <https://www.usbr.gov/pn-bin/instant.pl?station=FALN&year=2015&month=7&day=1&year=2015&month=7&day=1&pcode=OB&pcode=EA&pcode=WS&pcode=SI&print_hourly=1>`__\n\n.. code-block:: console\n\n    import math\n    import ee\n    import openet.refetgee\n\n    # Unit conversions\n    tmean_c = (91.80 - 32) * (5.0 / 9)           # F -> C\n    ea = 1.20                                    # kPa\n    rs = (61.16 * 0.041868)                      # Langleys -> MJ m-2 h-1\n    uz = 3.33 * 0.44704                          # mph -> m s-1\n    lat = 39.4575                                # degrees\n    lon = -118.77388                             # degrees\n\n    etr = openet.refetgee.Hourly(\n        tmean=tmean_c, ea=ea, rs=rs, uz=uz, zw=3, elev=1208.5,\n        lat=lat, lon=lon, doy=182, time=18).etr.getInfo()\n\n    print('ETr: {:.2f} mm'.format(float(etr)))\n\nGRIDMET\n-------\n\nA helper function for computing daily ETo and ETr for `GRIDMET <http://www.climatologylab.org/gridmet.html>`__ images is available.\n\n.. code-block:: console\n\n    import ee\n    import openet.refetgee\n\n    source_img = ee.Image(ee.ImageCollection('IDAHO_EPSCOR/GRIDMET').first())\n    etr = openet.refetgee.Daily.gridmet(source_img).etr\\\n        .reduceRegion(reducer=ee.Reducer.first(),\n                      geometry=ee.Geometry.Point(-118.77388, 39.4575),\n                      scale=1000)\\\n        .getInfo()\n\n    print('ETr: {:.2f} mm'.format(float(etr['etr'])))\n\nNLDAS\n-----\n\nHelper functions for computing daily/hourly ETo/ETr for `NLDAS <https://ldas.gsfc.nasa.gov/nldas/NLDAS2forcing.php>`__ images are available.\n\nFor the daily function, the NLDAS collection must be filtered to a single 24 hour period.\n\n.. code-block:: console\n\n    import ee\n    import openet.refetgee\n\n    source_coll = ee.ImageCollection('NASA/NLDAS/FORA0125_H002')\\\n        .filterDate('2015-07-01', '2015-07-02')\n    etr = openet.refetgee.Daily.nldas(source_coll).etr\\\n        .reduceRegion(reducer=ee.Reducer.first(),\n                      geometry=ee.Geometry.Point(-118.77388, 39.4575),\n                      scale=1000)\\\n        .getInfo()\n\n    print('ETr: {:.2f} mm'.format(float(etr['etr'])))\n\n.. code-block:: console\n\n    import ee\n    import openet.refetgee\n\n    source_img = ee.Image('NASA/NLDAS/FORA0125_H002/A20150701_2000')\n    etr = openet.refetgee.Hourly.nldas(source_img).etr\\\n        .reduceRegion(reducer=ee.Reducer.first(),\n                      geometry=ee.Geometry.Point(-118.77388, 39.4575),\n                      scale=1000)\\\n        .getInfo()\n\n    print('ETr: {:.2f} mm'.format(float(etr['etr'])))\n\nCFSv2\n-----\n\nA helper function for computing daily ETo and ETr for `CFSv2 <http://>`__ images is available.\n\nFor the daily function, the CFSv2 collection must be filtered to a single 24 hour period.\n\n.. code-block:: console\n\n    import ee\n    import openet.refetgee\n\n    source_coll = ee.ImageCollection('NOAA/CFSV2/FOR6H')\\\n        .filterDate('2015-07-01', '2015-07-02')\n    etr = openet.refetgee.Daily.cfsv2(source_coll).etr\\\n        .reduceRegion(reducer=ee.Reducer.first(),\n                      geometry=ee.Geometry.Point(-118.77388, 39.4575),\n                      scale=1000)\\\n        .getInfo()\n\n    print('ETr: {:.2f} mm'.format(float(etr['etr'])))\n\nRTMA\n-----\n\nHelper functions for computing daily/hourly ETo/ETr for `RTMA <https://>`__ images are available.\n\nFor the daily function, the RTMA collection must be filtered to a single 24 hour period.\n\n.. code-block:: console\n\n    import ee\n    import openet.refetgee\n\n    source_coll = ee.ImageCollection('NOAA/NWS/RTMA')\\\n        .filterDate('2015-07-01', '2015-07-02')\n    etr = openet.refetgee.Daily.rtma(source_coll).etr\\\n        .reduceRegion(reducer=ee.Reducer.first(),\n                      geometry=ee.Geometry.Point(-118.77388, 39.4575),\n                      scale=1000)\\\n        .getInfo()\n\n    print('ETr: {:.2f} mm'.format(float(etr['etr'])))\n\n.. code-block:: console\n\n    import ee\n    import openet.refetgee\n\n    source_img = ee.Image('NOAA/NWS/RTMA/2015070120')\n    etr = openet.refetgee.Hourly.nldas(source_img).etr\\\n        .reduceRegion(reducer=ee.Reducer.first(),\n                      geometry=ee.Geometry.Point(-118.77388, 39.4575),\n                      scale=1000)\\\n        .getInfo()\n\n    print('ETr: {:.2f} mm'.format(float(etr['etr'])))\n\nERA5-Land\n---------\n\nHelper functions for computing daily/hourly ETo/ETr for `ERA5-Land <https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land>`__ images are available.\n\nFor the daily function, the ERA5-Land collection must be filtered to a single 24 hour period.\n\n.. code-block:: console\n\n    import ee\n    import openet.refetgee\n\n    source_coll = ee.ImageCollection('ECMWF/ERA5_LAND/HOURLY')\\\n        .filterDate('2015-07-01', '2015-07-02')\n    etr = openet.refetgee.Daily.era5_land(source_coll).etr\\\n        .reduceRegion(reducer=ee.Reducer.first(),\n                      geometry=ee.Geometry.Point(-118.77388, 39.4575),\n                      scale=1000)\\\n        .getInfo()\n\n    print('ETr: {:.2f} mm'.format(float(etr['etr'])))\n\n.. code-block:: console\n\n    import ee\n    import openet.refetgee\n\n    source_img = ee.Image('ECMWF/ERA5_LAND/HOURLY/20150701T20')\n    etr = openet.refetgee.Hourly.era5_land(source_img).etr\\\n        .reduceRegion(reducer=ee.Reducer.first(),\n                      geometry=ee.Geometry.Point(-118.77388, 39.4575),\n                      scale=1000)\\\n        .getInfo()\n\n    print('ETr: {:.2f} mm'.format(float(etr['etr'])))\n\nInput Parameters\n================\n\nRequired Parameters (hourly & daily)\n------------------------------------\n\n========  ===================  =================================================\nVariable  Type                 Description [units]\n========  ===================  =================================================\nea        ee.Image             Actual vapor pressure [kPa]\nrs        ee.Image             Incoming shortwave solar radiation [MJ m-2 day-1]\nuz        ee.Image             Wind speed [m s-1]\nzw        ee.Number            Wind speed height [m]\nelev      ee.Image, ee.Number  Elevation [m]\nlat       ee.Image, ee.Number  Latitude [degrees]\ndoy       ee.Image, ee.Number  Day of year\n========  ===================  =================================================\n\nRequired Daily Parameters\n-------------------------\n\n========  ===================  =================================================\nVariable  Type                 Description [units]\n========  ===================  =================================================\ntmin      ee.Image             Minimum daily temperature [C]\ntmax      ee.Image             Maximum daily temperature [C]\n========  ===================  =================================================\n\nRequired Hourly Parameters\n--------------------------\n\n========  ===================  =================================================\nVariable  Type                 Description [units]\n========  ===================  =================================================\ntmean     ee.Image             Average hourly temperature [C]\nlon       ee.Image, ee.Number  Longitude [degrees]\ntime      ee.Number            UTC hour at start of time period\n========  ===================  =================================================\n\nOptional Parameters\n-------------------\n\n========  ===================  ====================================================\nVariable  Type                 Description [units]\n========  ===================  ====================================================\nmethod    str                  | Calculation method\n\n                               * 'asce' -- Calculations will follow ASCE-EWRI 2005 (default)\n                               * 'refet' -- Calculations will follow RefET software\n\nrso_type  str                  | Override default clear sky solar radiation (Rso) calculation\n                               | Defaults to None if not set\n\n                               * 'full' -- Full clear sky solar formulation (default)\n                               * 'simple' -- Simplified clear sky solar formulation (Eq. 19)\n                               * 'array' -- Read Rso values from \"rso\" function parameter\n\nrso       ee.Image, ee.Number  | Clear sky solar radiation [MJ m-2 day-1]\n\n                               * Only needed if rso_type is 'array'\n                               * Defaults to None if not set\n\n========  ===================  ====================================================\n\nIssues\n======\n\nCurrently the user must handle all of the file I/O and unit conversions.\n\nCloudiness Fraction (hourly)\n----------------------------\n\nThe cloudiness fraction (fcd) is computed as the ratio of the measured solar radiation (Rs) to the theoretical clear sky solar radiation (Rso).  This ratio cannot be computed directly at night since Rso is 0.  ASCE-EWRI 2005 suggests computing a representative nighttime fcd based on the fcd at sunset and/or sunrise.\n\nIn the RefET module fcd is hard coded to 1 for all time steps with very low sun angles since the hourly reference ET is computed independently for each time step.\n\nCalculation Method - ASCE vs. RefET\n===================================\n\nThe main difference between the two \"methods\" is that the \"asce\" method attempts to follow the equations in ASCE2005_, whereas the \"refet\" method attempts to follow the calculations of the `RefET Software <https://www.uidaho.edu/cals/kimberly-research-and-extension-center/research/water-resources/ref-et-software>`__ as closely as possible.  The difference in output between these methods is generally negligible (if not identical for realistic numbers of significant digits).  Note that the default is set to \"asce\" to best match the calculations a user would expect to have happen. The \"refet\" method was added in order to help validate this code to the RefET Software.\n\nInstallation\n============\n\nThe OpenET RefET GEE python module can be installed via pip:\n\n.. code-block:: console\n\n    pip install openet-refet-gee\n\nOpenET Namespace Package\n========================\n\nEach OpenET model is stored in the \"openet\" folder (namespace).  The model can then be imported as a \"dot\" submodule of the main openet module.\n\n.. code-block:: console\n\n    import openet.refetgee as refetgee\n\nValidation\n==========\n\nPlease see the `validation document <VALIDATION.md>`__ for additional details on the source of the test values and the comparison of the functions to the Ref-ET software.\n\nDependencies\n============\n\n * `earthengine-api <https://github.com/google/earthengine-api>`__\n\nModules needed to run the test suite:\n\n * `pandas <http://pandas.pydata.org>`__\n * `pytest <https://docs.pytest.org/en/latest/>`__\n * `pytz <http://pythonhosted.org/pytz/>`__\n\nReferences\n==========\n\n.. [ASCE2005]\n | ASCE-EWRI (2005). The ASCE standardized reference evapotranspiration equation.\n | `https://ascelibrary.org/doi/book/10.1061/9780784408056 <https://ascelibrary.org/doi/book/10.1061/9780784408056>`__\n\n.. |build| image:: https://github.com/Open-ET/openet-refet-gee/workflows/build/badge.svg\n   :alt: Build status\n   :target: https://github.com/Open-ET/openet-refet-gee\n.. |version| image:: https://badge.fury.io/py/openet-refet-gee.svg\n   :alt: Latest version on PyPI\n   :target: https://badge.fury.io/py/openet-refet-gee\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/Open-ET/openet-refet-gee/archive/v0.6.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Open-ET/openet-refet-gee",
    "keywords": "RefET OpenET Evapotranspiration Earth Engine",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "openet-refet-gee",
    "package_url": "https://pypi.org/project/openet-refet-gee/",
    "platform": null,
    "project_url": "https://pypi.org/project/openet-refet-gee/",
    "project_urls": {
      "Download": "https://github.com/Open-ET/openet-refet-gee/archive/v0.6.2.tar.gz",
      "Homepage": "https://github.com/Open-ET/openet-refet-gee"
    },
    "release_url": "https://pypi.org/project/openet-refet-gee/0.6.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Google Earth Engine based ASCE Standardized Reference Evapotranspiration Functions",
    "version": "0.6.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16381345,
  "releases": {
    "0.1.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70df14dafee38f87cdaf65af237ce0d0736ae566ccac5245f15b15b8135d1939",
          "md5": "dcb4e08782c69a4d2ba5e4b06141593c",
          "sha256": "ee5a7c8a982a439c72c68593e26773b3d21fae0e32fba7808053646e7ec9e87a"
        },
        "downloads": -1,
        "filename": "openet-refet-gee-0.1.15.tar.gz",
        "has_sig": false,
        "md5_digest": "dcb4e08782c69a4d2ba5e4b06141593c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 287081,
        "upload_time": "2020-07-01T22:05:40",
        "upload_time_iso_8601": "2020-07-01T22:05:40.887813Z",
        "url": "https://files.pythonhosted.org/packages/70/df/14dafee38f87cdaf65af237ce0d0736ae566ccac5245f15b15b8135d1939/openet-refet-gee-0.1.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2dfb75a6e33abbf412af773f990c3ea47eafc5e16911f6da81b9473d1d7e2de7",
          "md5": "175c943d9a89e73e1f6214ba0bb8d1e3",
          "sha256": "a0a3e06ff1242f534f0d1caed20657ad00cf1c2ff5df9d7e8aca663a94cf2af9"
        },
        "downloads": -1,
        "filename": "openet-refet-gee-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "175c943d9a89e73e1f6214ba0bb8d1e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 287241,
        "upload_time": "2020-07-01T22:25:27",
        "upload_time_iso_8601": "2020-07-01T22:25:27.254553Z",
        "url": "https://files.pythonhosted.org/packages/2d/fb/75a6e33abbf412af773f990c3ea47eafc5e16911f6da81b9473d1d7e2de7/openet-refet-gee-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "188fc4ce7808b5d121ef2fed378f61c701f509aa2c9ef4d555b125465e084cae",
          "md5": "e2a672ee1ccfb96337f8cb8047bcab6a",
          "sha256": "9b152380be7db720f9fbab819aa0a5b9bfb0171cea3898517d10fecda02443fd"
        },
        "downloads": -1,
        "filename": "openet-refet-gee-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e2a672ee1ccfb96337f8cb8047bcab6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 288270,
        "upload_time": "2020-10-25T01:33:01",
        "upload_time_iso_8601": "2020-10-25T01:33:01.992107Z",
        "url": "https://files.pythonhosted.org/packages/18/8f/c4ce7808b5d121ef2fed378f61c701f509aa2c9ef4d555b125465e084cae/openet-refet-gee-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dea1f7fc0fc65ce974f548e989a0aebe31fd07a8d77ed37b677ce3034b02b3d8",
          "md5": "1efafda4958e753d892e706c304e19dd",
          "sha256": "5310f4e7f9605cbfa659b013e973f9a6cddcfa055545a28c3491349688276c17"
        },
        "downloads": -1,
        "filename": "openet-refet-gee-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1efafda4958e753d892e706c304e19dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 288980,
        "upload_time": "2020-10-25T15:46:10",
        "upload_time_iso_8601": "2020-10-25T15:46:10.770782Z",
        "url": "https://files.pythonhosted.org/packages/de/a1/f7fc0fc65ce974f548e989a0aebe31fd07a8d77ed37b677ce3034b02b3d8/openet-refet-gee-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58affa00c610fab8759c0d70d5072cacb62db681b5ba9d2ef14d9c023fead286",
          "md5": "3d72de8c9d403435ce60490b078fbe22",
          "sha256": "389d27e8932e44460338c9b53bea9d1a2562e9e68532aa85b923f11fdaaa50de"
        },
        "downloads": -1,
        "filename": "openet-refet-gee-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3d72de8c9d403435ce60490b078fbe22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 290111,
        "upload_time": "2020-12-14T00:36:48",
        "upload_time_iso_8601": "2020-12-14T00:36:48.939014Z",
        "url": "https://files.pythonhosted.org/packages/58/af/fa00c610fab8759c0d70d5072cacb62db681b5ba9d2ef14d9c023fead286/openet-refet-gee-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f80b15262b329fd6723bdf2b7b9d8f6d4992af567c9402fe722930cc71c70c2",
          "md5": "72c02b690dd7f6513a45a89dd37ccd10",
          "sha256": "c22aed7bc9cd8988247e88d0cd2470353e3774e09222284abdfdde09e5a068e9"
        },
        "downloads": -1,
        "filename": "openet-refet-gee-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "72c02b690dd7f6513a45a89dd37ccd10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 290565,
        "upload_time": "2021-07-19T16:21:20",
        "upload_time_iso_8601": "2021-07-19T16:21:20.162274Z",
        "url": "https://files.pythonhosted.org/packages/5f/80/b15262b329fd6723bdf2b7b9d8f6d4992af567c9402fe722930cc71c70c2/openet-refet-gee-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74f361440b05b01f881d67dfd0df2642248a877838db55c3124a553dc6985ab6",
          "md5": "6e7c40ab0452ca1b3fe1e731364baf26",
          "sha256": "df01111f29f3c560f4ae5f791f947de39d5df187a004eb69c500d19102499488"
        },
        "downloads": -1,
        "filename": "openet-refet-gee-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6e7c40ab0452ca1b3fe1e731364baf26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 292550,
        "upload_time": "2023-01-10T23:43:35",
        "upload_time_iso_8601": "2023-01-10T23:43:35.135938Z",
        "url": "https://files.pythonhosted.org/packages/74/f3/61440b05b01f881d67dfd0df2642248a877838db55c3124a553dc6985ab6/openet-refet-gee-0.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74f361440b05b01f881d67dfd0df2642248a877838db55c3124a553dc6985ab6",
        "md5": "6e7c40ab0452ca1b3fe1e731364baf26",
        "sha256": "df01111f29f3c560f4ae5f791f947de39d5df187a004eb69c500d19102499488"
      },
      "downloads": -1,
      "filename": "openet-refet-gee-0.6.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6e7c40ab0452ca1b3fe1e731364baf26",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 292550,
      "upload_time": "2023-01-10T23:43:35",
      "upload_time_iso_8601": "2023-01-10T23:43:35.135938Z",
      "url": "https://files.pythonhosted.org/packages/74/f3/61440b05b01f881d67dfd0df2642248a877838db55c3124a553dc6985ab6/openet-refet-gee-0.6.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}