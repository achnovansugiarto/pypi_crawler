{
  "info": {
    "author": "Saad Mairaj",
    "author_email": "Saadmairaj@yahoo.in",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 6 - Mature",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: End Users/Desktop",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.0",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# date-time-event\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/ee305868a6a044c281f9423102f8480e)](https://www.codacy.com/gh/Saadmairaj/date-time-event/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Saadmairaj/date-time-event&amp;utm_campaign=Badge_Grade)\n[![Codacy Badge](https://app.codacy.com/project/badge/Coverage/ee305868a6a044c281f9423102f8480e)](https://www.codacy.com/gh/Saadmairaj/date-time-event/dashboard?utm_source=github.com&utm_medium=referral&utm_content=Saadmairaj/date-time-event&utm_campaign=Badge_Coverage)\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2FSaadmairaj%2Fdate-time-event.svg?type=small)](https://app.fossa.com/projects/git%2Bgithub.com%2FSaadmairaj%2Fdate-time-event?ref=badge_small)\n[![HitCount](http://hits.dwyl.com/Saadmairaj/date-time-event.svg)](http://hits.dwyl.com/Saadmairaj/date-time-event)\n\nA very simple package to trigger events at a specific DateTime.\n\n## Installation\n\nUse the package manager pip to install with the following command:\n\n```bash\npip install date-time-event\n```\n\nIf you would like to get the latest master or branch from github, you could also:\n\n```bash\npip install git+https://github.com/Saadmairaj/date-time-event\n```\n\nOr even select a specific revision _(branch/tag/commit)_:\n\n```bash\npip install git+https://github.com/Saadmairaj/date-time-event@master\n```\n\n## Usage\n\nIt is very simple and easy to use. First import the class which can be used either as a decorator or a thread function.\n\n```python\nfrom date_time_event import Untiltime\n```\n\nThe `Untiltime` class is threaded based timer which will wait till the given date or timer is met. As it runs on a separate thread, it doesn't effect the main thread or lock it.\n\n```python\nfrom datetime import datetime, timedelta\nfrom date_time_event import Untiltime\n\n# Current datetime with 5 seconds in future.\ndate = datetime.now() + timedelta(0, 5)\n\n\n@Untiltime(dateOrtime=date)\ndef function():\n    print('Hello! Its time!', datetime.now())\n\n\nfunction()\nprint('Function will be call at: %s \\n' % date)\n```\n\n- `Untiltime` decorator options. Syntax: `@Untiltime( **options )`\n\n  | Options      | Description                                                                                                                                                                                     |\n  | ------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n  | _function_   | Pass Target function.                                                                                                                                                                           |\n  | _dateOrtime_ | Give date or time for the function to trigger if None give function will be a threaded function which can only run once. The date, time or datetime should be an instance of `datetime` module. |\n  | _name_       | A string used for identification purposes only. Just like in thread                                                                                                                             |\n  | _join_       | Wait until the thread terminates. This blocks the calling thread until the thread whose `join()` method is called terminates.                                                                   |\n  | _group_      | Reserved for future extension when a ThreadGroup class is implemented.                                                                                                                          |\n  | _daemon_     | A boolean value indicating whether this thread is a daemon thread (True) or not (False).                                                                                                        |\n  | _args_       | The _args_ is the argument tuple for the target invocation. Defaults to ().                                                                                                                     |\n  | _kwargs_     | The _kwargs_ is a dictionary of keyword arguments for the target invocation. Defaults to {}.                                                                                                    |\n\nThe `Untiltime` class can also be used as thread class. Like so\n\n```python\nfrom datetime import datetime, timedelta\nfrom date_time_event import Untiltime\n\ndef function():\n    print('Hello! Its time!', datetime.now())\n\n\n# Current datetime with 5 seconds in future.\ndate = datetime.now() + timedelta(0, 5)\n\nth = Untiltime(function, dateOrtime=date)\nth.start()\n\nprint('Function will be call at: %s \\n' % date)\n```\n\nOnce the thread is called it can be stopped or cancel if called `.cancel()` method before the datetime event occurs.\n\n- Set date can be changed with property `date`, if the thread has not started.\n\n```python\nfrom datetime import datetime, timedelta\nfrom date_time_event import Untiltime\n\ndef function():\n    print('Hello! Its time!', datetime.now())\n\n\n# Current datetime with 5 seconds in future.\ndate = datetime.now() + timedelta(0, 1)\n\nth = Untiltime(function, dateOrtime=date)\n# Initializing new date\nth.date = datetime.now() + timedelta(0, 5)\nth.start()\n\nprint('Function will be call at: %s \\n' % th.date)\n```\n\n## [License](https://github.com/Saadmairaj/date-time-event/blob/master/LICENSE)\n\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2FSaadmairaj%2Fdate-time-event.svg?type=large)](https://app.fossa.com/projects/git%2Bgithub.com%2FSaadmairaj%2Fdate-time-event?ref=badge_large)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Saadmairaj/date-time-event/",
    "keywords": "python,python3,threading,datetime-format,date-event,time-event",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "date-time-event",
    "package_url": "https://pypi.org/project/date-time-event/",
    "platform": "",
    "project_url": "https://pypi.org/project/date-time-event/",
    "project_urls": {
      "Bug Reports": "https://github.com/Saadmairaj/date-time-event/issues",
      "Homepage": "https://github.com/Saadmairaj/date-time-event/",
      "Source": "https://github.com/Saadmairaj/date-time-event"
    },
    "release_url": "https://pypi.org/project/date-time-event/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "A very simple package to trigger events at a specific DateTime.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9705041,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a84f5d30798c8b705a280fba634e7772b05d54fc2cffdf93aaba1e362d439c55",
          "md5": "200a95764b39d4a3551e896b4effb60b",
          "sha256": "8e6e0fe70dac67d981368b0da41925672d88bfe19a6f2bdff91a2ca1cdafd09d"
        },
        "downloads": -1,
        "filename": "date_time_event-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "200a95764b39d4a3551e896b4effb60b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 6898,
        "upload_time": "2021-03-08T16:42:04",
        "upload_time_iso_8601": "2021-03-08T16:42:04.941889Z",
        "url": "https://files.pythonhosted.org/packages/a8/4f/5d30798c8b705a280fba634e7772b05d54fc2cffdf93aaba1e362d439c55/date_time_event-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d2baa00c00b193888739a0b71896d85d29468217b2794f784e6f1607924a1a9",
          "md5": "cd97cb9892f3120c23dd468450e57494",
          "sha256": "d546e6e35230b180999e4aa83539e99414b4bab112409da5d0427a3f06b1883e"
        },
        "downloads": -1,
        "filename": "date-time-event-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cd97cb9892f3120c23dd468450e57494",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 5826,
        "upload_time": "2021-03-08T16:42:06",
        "upload_time_iso_8601": "2021-03-08T16:42:06.077778Z",
        "url": "https://files.pythonhosted.org/packages/3d/2b/aa00c00b193888739a0b71896d85d29468217b2794f784e6f1607924a1a9/date-time-event-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a84f5d30798c8b705a280fba634e7772b05d54fc2cffdf93aaba1e362d439c55",
        "md5": "200a95764b39d4a3551e896b4effb60b",
        "sha256": "8e6e0fe70dac67d981368b0da41925672d88bfe19a6f2bdff91a2ca1cdafd09d"
      },
      "downloads": -1,
      "filename": "date_time_event-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "200a95764b39d4a3551e896b4effb60b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 6898,
      "upload_time": "2021-03-08T16:42:04",
      "upload_time_iso_8601": "2021-03-08T16:42:04.941889Z",
      "url": "https://files.pythonhosted.org/packages/a8/4f/5d30798c8b705a280fba634e7772b05d54fc2cffdf93aaba1e362d439c55/date_time_event-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d2baa00c00b193888739a0b71896d85d29468217b2794f784e6f1607924a1a9",
        "md5": "cd97cb9892f3120c23dd468450e57494",
        "sha256": "d546e6e35230b180999e4aa83539e99414b4bab112409da5d0427a3f06b1883e"
      },
      "downloads": -1,
      "filename": "date-time-event-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cd97cb9892f3120c23dd468450e57494",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 5826,
      "upload_time": "2021-03-08T16:42:06",
      "upload_time_iso_8601": "2021-03-08T16:42:06.077778Z",
      "url": "https://files.pythonhosted.org/packages/3d/2b/aa00c00b193888739a0b71896d85d29468217b2794f784e6f1607924a1a9/date-time-event-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}