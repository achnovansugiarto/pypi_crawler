{
  "info": {
    "author": "Theo \"Bob\" Massard",
    "author_email": "tbobm@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# machinery\n\nState-aware workflow orchestrator.\n\nThis project aims to bring stateful workflows, by defining a list of actions\nrepresenting multiple microservices.\n\nDefine a suite of actions to process events, abstract intelligence for your microservices.\n\nOnce defined, use your workflows to process your Events.\n\n## Example\n\nWe have 3 microservices:\n- The `upper` microservice that transforms texts into uppercase\n- The `reverse` microservice that reverses a text\n- The `space-counter` microservice that returns the number of space in a string\n\nSuppose we want to process some text by making it uppercase and reversing it.\n\nWe will define the following definitions:\n- [`examples/definitions/service-upper.json`](./examples/definitions/service-upper.json)\n- [`examples/definitions/service-reverse.json`](./examples/definitions/service-reverse.json)\n- [`examples/definitions/service-space-counter.json`](./examples/definitions/service-space-counter.json)\n\nThen, we can define a Workflow in [`examples/definitions/workflow-process-text.json`](./examples/definitions/workflow-process-text.json).\n\nAfter having created our Workflow, we can send our first Event !\n\nWe will send the content of [`examples/definitions/event-text.json`](./examples/definitions/event-text.json)\n\n## Goals\n\n- Register services (ex: a new API)\n- Define a simple Workflow (subsequent calls to different services)\n- Allow async (expose endpoint for webhook?)\n- Visualisation\n\n## Components\n\n### API (WIP)\n\n_Could be divided into Consumer API and Management API._\n\n- Register services\n- Define Workflows (json with arbitrary service definition)\n- Treat Event\n\n## Data structures\n\n### Service\n\n```json\n{\n    \"name\": \"my-service-name\",\n    \"address\": \"http://my-service:5000/\",\n    \"spec\": {\n        \"inputs\": {\n            \"message\": {\n                \"type\": \"string\",\n                \"description\": \"The text to transform\"\n            }\n        },\n        \"outputs\": {\n            \"message\": {\n                \"type\": \"string\",\n                \"description\": \"The transformed text\"\n            }\n        }\n    }\n}\n```\n\n\ninput:\n- `name`: The name of the Service\n- `address`: The URL of the Service\n- `spec`: The inputs/outputs of this Service\n- `spec.inputs`: Each input with its type and description\n- `spec.outputs`: Each output with its type and description\n\noutput: TBD\n(service-id, ack date)\n\n### Event\n\nPOST `/e/<workflow-id>`\n\n```json\n{\n    \"data\": {\n        \"message\": \"The Sun will rise in the morning !\"\n    }\n}\n```\n\nPOSTing an Event will return an `event-id`, an ack date and a status.\ninput:\n- `data`: The Event's data that **must** match the Workflow's inputs.\n\n### Workflow\n\n```json\n{\n    \"name\": \"my-workflow\",\n    \"spec\": {\n        \"services\": [\"service-1\", \"service-2\"],\n        \"inputs\": {\n            \"message\": {\n                \"type\": \"string\",\n                \"description\": \"The text to process\"\n            }\n        },\n        \"outputs\": {\n            \"message\": {\n                \"type\": \"string\",\n                \"description\": \"The processed text\"\n            }\n        },\n        \"operations\": { }\n    }\n}\n```\n\ninput:\n- `name`: The name of the Workflow\n- `spec`: The spec of the Workflow\n- `spec.services`: The Services to be called, in order\n- `spec.inputs`: The inputs of this Workflow\n- `spec.outputs`: The outputs of this workflow\n\noutput: TBD\n(workflow-id, ack date)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tbobm/machinery",
    "keywords": "machinery",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "workflow-machinery",
    "package_url": "https://pypi.org/project/workflow-machinery/",
    "platform": "",
    "project_url": "https://pypi.org/project/workflow-machinery/",
    "project_urls": {
      "Homepage": "https://github.com/tbobm/machinery"
    },
    "release_url": "https://pypi.org/project/workflow-machinery/0.0.0/",
    "requires_dist": [
      "amazon.ion"
    ],
    "requires_python": ">=3.6",
    "summary": "Bootstrap Amazon Ion into existing projects",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12135865,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9864a24edf98dbd18b97f56001ff411d928acccc215efadeb1bf48d5133b8d69",
          "md5": "5f447e0a7ce3c70538c139bf51320183",
          "sha256": "69cd30c446d78f18f9f8b21157b47376451f8a422fb93802a56ae670e3c1a3e7"
        },
        "downloads": -1,
        "filename": "workflow_machinery-0.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f447e0a7ce3c70538c139bf51320183",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 2930,
        "upload_time": "2021-11-26T22:09:26",
        "upload_time_iso_8601": "2021-11-26T22:09:26.251335Z",
        "url": "https://files.pythonhosted.org/packages/98/64/a24edf98dbd18b97f56001ff411d928acccc215efadeb1bf48d5133b8d69/workflow_machinery-0.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9eef46b6779597ec5fa009da082ea9f4e112d26748e2a44bbf9e6805df802c6f",
          "md5": "05f3b6649a02ec2181c8a2741cf0a141",
          "sha256": "7ee32048849dc3d67f453e55173f1d1c2a7275beeff91931210ec054fe1075c0"
        },
        "downloads": -1,
        "filename": "workflow-machinery-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "05f3b6649a02ec2181c8a2741cf0a141",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8070,
        "upload_time": "2021-11-26T22:09:28",
        "upload_time_iso_8601": "2021-11-26T22:09:28.298151Z",
        "url": "https://files.pythonhosted.org/packages/9e/ef/46b6779597ec5fa009da082ea9f4e112d26748e2a44bbf9e6805df802c6f/workflow-machinery-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9864a24edf98dbd18b97f56001ff411d928acccc215efadeb1bf48d5133b8d69",
        "md5": "5f447e0a7ce3c70538c139bf51320183",
        "sha256": "69cd30c446d78f18f9f8b21157b47376451f8a422fb93802a56ae670e3c1a3e7"
      },
      "downloads": -1,
      "filename": "workflow_machinery-0.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5f447e0a7ce3c70538c139bf51320183",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 2930,
      "upload_time": "2021-11-26T22:09:26",
      "upload_time_iso_8601": "2021-11-26T22:09:26.251335Z",
      "url": "https://files.pythonhosted.org/packages/98/64/a24edf98dbd18b97f56001ff411d928acccc215efadeb1bf48d5133b8d69/workflow_machinery-0.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9eef46b6779597ec5fa009da082ea9f4e112d26748e2a44bbf9e6805df802c6f",
        "md5": "05f3b6649a02ec2181c8a2741cf0a141",
        "sha256": "7ee32048849dc3d67f453e55173f1d1c2a7275beeff91931210ec054fe1075c0"
      },
      "downloads": -1,
      "filename": "workflow-machinery-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "05f3b6649a02ec2181c8a2741cf0a141",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8070,
      "upload_time": "2021-11-26T22:09:28",
      "upload_time_iso_8601": "2021-11-26T22:09:28.298151Z",
      "url": "https://files.pythonhosted.org/packages/9e/ef/46b6779597ec5fa009da082ea9f4e112d26748e2a44bbf9e6805df802c6f/workflow-machinery-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}