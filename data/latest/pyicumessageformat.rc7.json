{
  "info": {
    "author": "Mike",
    "author_email": "sir@stendec.me",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pyicumessageformat\n\nAn unopinionated library for parsing ICU MessageFormat messages into both\nASTs and, optionally, token lists.\n\nThis library is mainly a re-implementation of the JavaScript library\n[format-message-parse](https://www.npmjs.com/package/format-message-parse)\nwith a few extra configuration flags.\n\n[format-message-parse](https://www.npmjs.com/package/format-message-parse)\nand `pyicumessageformat` are both licensed MIT.\n\n\n## Parser Options\n\n```python\nfrom pyicumessageformat import Parser\n\n# The following are the default values for the various available\n# settings for the Parser.\nparser = Parser({\n    # Whether or not to include indices on placeholder objects.\n    'include_indices': False,\n\n    # Maximum depth limits the nesting depth of sub-messages. This is\n    # done to avoid throwing a RecursionError.\n    'maximum_depth': 50,\n\n    # Known types that include sub-messages.\n    'submessage_types': ['plural', 'selectordinal', 'select'],\n\n    # Sub-message types that are numeric and support \"#\" in sub-messages.\n    'subnumeric_types': ['plural', 'selectordinal'],\n\n    # Whether or not to parse simple XML-style tags. When this is False,\n    # XML-style tags will be treated as plain text.\n    'allow_tags': False,\n\n    # The type that should be set for tags. This should be set to a\n    # unique value that will not overlap with any placeholder types.\n    'tag_type': 'tag',\n\n    # When enabled, strict tags makes the system far less forgiving\n    # about dangling '<' characters in input strings.\n    'strict_tags': False,\n\n    # If this is set, tag names must start with the provided string,\n    # otherwise the tag will be ignored and treated as plain text.\n    # This is overridden by strict_tags, which will always require a\n    # tag opening character to be treated as a tag.\n    'tag_prefix': None,\n\n    # Whether or not to parse sub-messages for unknown types. When this\n    # is set to False and an unknown type has sub-messages, a syntax\n    # error will be raised.\n    'loose_submessages': False,\n\n    # Whether or not spaces should be allowed in format strings.\n    'allow_format_spaces': True,\n\n    # Whether or not the parser should require known types with\n    # sub-messages to have an \"other\" selector.\n    # See \"Require Other\" below in README for more details.\n    'require_other': True\n})\n```\n\n### Require Other\n\nThe `require_other` setting has a few valid possible values.\n\n* `True`: All known sub-message types are required to have an \"other\"\n    selector.\n* `False`: No types are required to have an \"other\" selector.\n* `\"subnumeric\"`: All known numeric sub-message types are required to have an\n    \"other\" selector.\n* `\"all\"`: All types, including unknown types, with sub-messages are required\n    to have an \"other\" selector.\n\nAdditionally, `require_other` can be a list of types. In that event, only those\ntypes will be required to have an \"other\" selector.\n\n\n## Tags\n\nBy default, tags are not handled in any way. By setting `allow_tags` to True,\nrudimentary support for simple XML-style tags is enabled. In this mode, the\nparser will look for tag opening (`<`) characters and attempt to read a tag.\nIf the tag opening is not followed by either a forward slash (`/`) or a\nletter A-Z, the tag will be ignored. If the tag is followed by a forward\nslash, but not then followed by a valid string, then it will not be matched.\n\nMatches: `<b>`, `<strong>`, `<x:link>`, `</b>`\nMatches, but errors: `<hi`, `<unending`\nDoes Not Match: `i <3 programming`, `3 < 4`, `</`\n\nBy setting a string to `tag_prefix`, you can only match tags that start with\na specific string. For example, if you set the tag prefix to `x:` then only\ntags starting with `x:` will be matched.\n\nMatches with `x:`: `<x:link>`, `<x:strong>`, `</x:link>`\nMatches, but errors: `<x:link`,\nDoes Not Match: `Usage: /ban <user>`\n\nFinally, you can enable `strict_tags` to require all tag opening (`<`) characters\nto be treated as part of a tag. In strict tags mode, all `<` characters *must*\nbe escaped if they are not part of a tag. `tag_prefix` is ignored when strict\ntags are enabled.\n\nMatches: `<b>`, `<strong>`, `<x:link>`, `</b>`,\nMatches, but errors: `<hi`, `<unending`, `</`, `i <3 programming`, `3 < 4`\nDoes Not Match: `i '<'3 programming`\n\n\n## Parsing\n\nThe Parser has a single method that is intended to be called externally:\n\n### `parse(input: str, tokens?: list) -> AST`\n\nSimply pass in a string, and get an AST back:\n\n```python\n>>> ast = parser.parse('''Hello, <b>{firstName}</b>! You have {messages, plural,\n    =0 {no messages}\n    =1 {one message}\n    other {# messages}\n} and you're {completion, number, percentage} done.''')\n>>> ast\n[\n    'Hello, ',\n    {\n        'name': 'b',\n        'type': 'tag',\n        'contents': [\n            {\n                'name': 'firstName'\n            }\n        ]\n    },\n    '! You have ',\n    {\n        'name': 'messages',\n        'type': 'plural',\n        'options': {\n            '=0': ['no messages'],\n            '=1': ['one message'],\n            'other': [\n                {\n                    'name': 'messages',\n                    'type': 'number'\n                },\n                ' messages'\n            ]\n        }\n    },\n    \" and you're \",\n    {\n        'name': 'completion',\n        'type': 'number',\n        'format': 'percentage'\n    },\n    ' done.'\n]\n```\n\nIf there is an error in the message, `parse(...)` will raise a\n`SyntaxError`:\n\n```python\n>>> parser.parse('Hello, {name{!')\nSyntaxError: Expected , or } at position 12 but found {\n```\n\nIf you include an empty list for `tokens`, you can also get back your\ninput in a tokenized format. Please note that tokenization stops\nwhen an error is encountered:\n\n```python\n>>> tokens = []\n>>> parse('Hello, {firstName}! You are {age, number} years old.', tokens)\n>>> tokens\n[\n    {'type': 'text', 'text': 'Hello, '},\n    {'type': 'syntax', 'text': '{'},\n    {'type': 'name', 'text': 'firstName'},\n    {'type': 'syntax', 'text': '}'},\n    {'type': 'text', 'text': '! You are '},\n    {'type': 'syntax', 'text': '{'},\n    {'type': 'name', 'text': 'age'},\n    {'type': 'syntax', 'text': ','},\n    {'type': 'space', 'text': ' '},\n    {'type': 'type', 'text': 'number'},\n    {'type': 'syntax', 'text': '}'},\n    {'type': 'text', ' years old.'}\n]\n\n>>> tokens = []\n>>> parser.parse('Hello, {name{!', tokens)\nSyntaxError: Expected , or } at position 12 but found {\n>>> tokens\n[\n    {'type': 'text', 'text': 'Hello, '},\n    {'type': 'syntax', 'text': '{'},\n    {'type': 'name', 'text': 'name'}\n]\n```\n\n## AST Format\n\n```typescript\ntype AST = Node[];\ntype Node = string | Placeholder;\n\ntype Placeholder = Tag | Variable;\n\ntype Tag = {\n    name: string;\n    type: 'tag';\n    contents?: AST;\n\n    // start and end only included with include_indices\n    start?: number;\n    end?: number;\n};\n\ntype Variable = {\n    name: string;\n    type?: string;\n    offset?: number;\n    format?: string;\n    options?: Submessages;\n\n    // If hash is present, it should be true and indicate\n    // that the variable was a hash (#).\n    hash?: true;\n\n    // start and end only included with include_indices\n    start?: number;\n    end?: number;\n}\n\ntype Submessages = {\n    [selector: string]: AST;\n};\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sirstendec/pyicumessageformat",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyicumessageformat",
    "package_url": "https://pypi.org/project/pyicumessageformat/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyicumessageformat/",
    "project_urls": {
      "Bug Tracker": "https://github.com/sirstendec/pyicumessageformat/issues",
      "Homepage": "https://github.com/sirstendec/pyicumessageformat"
    },
    "release_url": "https://pypi.org/project/pyicumessageformat/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "An unopinionated parser for ICU MessageFormat.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11520203,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "273f17631ccd0aa40171923405cfd0f443ca4b2c4607f0c8a541a81bd1d1f29a",
          "md5": "1f0cbbe72df18cc733ef4e6e65fd8f39",
          "sha256": "e73b3eb8d8d977c73160ce30f763b53cb5f7301b206e5d77a9796f782afac83b"
        },
        "downloads": -1,
        "filename": "pyicumessageformat-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f0cbbe72df18cc733ef4e6e65fd8f39",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7323,
        "upload_time": "2021-06-23T23:36:38",
        "upload_time_iso_8601": "2021-06-23T23:36:38.725834Z",
        "url": "https://files.pythonhosted.org/packages/27/3f/17631ccd0aa40171923405cfd0f443ca4b2c4607f0c8a541a81bd1d1f29a/pyicumessageformat-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f27739c719c08c581b9fa01cc80848f184c783150bb08725eef0170f7641d8c9",
          "md5": "b3b5a7060e08a3cf6d7a3125a7d30b13",
          "sha256": "118a2deb9f33f5d0a6215b71d1556475ea820e6607243ea120f98ac5b7096ce3"
        },
        "downloads": -1,
        "filename": "pyicumessageformat-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b3b5a7060e08a3cf6d7a3125a7d30b13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10562,
        "upload_time": "2021-06-23T23:36:40",
        "upload_time_iso_8601": "2021-06-23T23:36:40.247600Z",
        "url": "https://files.pythonhosted.org/packages/f2/77/39c719c08c581b9fa01cc80848f184c783150bb08725eef0170f7641d8c9/pyicumessageformat-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d5ec7b47b8a5c595700ccf1885562606c99bd027d3813904e995850b0da2d4d",
          "md5": "0a193525e97dd060cc8a9bf23cd4ffde",
          "sha256": "dc82e72cfc64a2a4337ee24b17fb41b9744c7a812daa620e9da8a1f9684777fd"
        },
        "downloads": -1,
        "filename": "pyicumessageformat-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a193525e97dd060cc8a9bf23cd4ffde",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7525,
        "upload_time": "2021-06-25T21:40:22",
        "upload_time_iso_8601": "2021-06-25T21:40:22.415911Z",
        "url": "https://files.pythonhosted.org/packages/0d/5e/c7b47b8a5c595700ccf1885562606c99bd027d3813904e995850b0da2d4d/pyicumessageformat-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d97b8b4c81060a79d67e1482ae12d9976e2d675b171c3958d32d2be6193866f",
          "md5": "c282d314824574960b1c36925fd45f9e",
          "sha256": "afc899073cac7572c1c2c656e62b92005b5e4acbec34bbd082bdece24bc67ca1"
        },
        "downloads": -1,
        "filename": "pyicumessageformat-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c282d314824574960b1c36925fd45f9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10801,
        "upload_time": "2021-06-25T21:40:24",
        "upload_time_iso_8601": "2021-06-25T21:40:24.338401Z",
        "url": "https://files.pythonhosted.org/packages/9d/97/b8b4c81060a79d67e1482ae12d9976e2d675b171c3958d32d2be6193866f/pyicumessageformat-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2b9bc1909713e472ae159460bd44ee4d2d4d4ec20cab5e4ccfb20f1eceaa7d4",
          "md5": "111b902d41fdc5a37699a33e28430bf6",
          "sha256": "152b2f9a63ac68495ec846ff623b1cba58ecf0c00519d846cf24580e876cdebc"
        },
        "downloads": -1,
        "filename": "pyicumessageformat-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "111b902d41fdc5a37699a33e28430bf6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7733,
        "upload_time": "2021-07-02T07:02:03",
        "upload_time_iso_8601": "2021-07-02T07:02:03.122573Z",
        "url": "https://files.pythonhosted.org/packages/f2/b9/bc1909713e472ae159460bd44ee4d2d4d4ec20cab5e4ccfb20f1eceaa7d4/pyicumessageformat-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "783e49c5008f8c6ca3d34e7cd3cf3a44c303ca1e07d6a41602012829547e6feb",
          "md5": "9fb3c0bad1685df576478ee38429a2ea",
          "sha256": "6d4b347415080014ff58d289744450eaeefb557afcf10300700137a006dc68ac"
        },
        "downloads": -1,
        "filename": "pyicumessageformat-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9fb3c0bad1685df576478ee38429a2ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12386,
        "upload_time": "2021-07-02T07:02:04",
        "upload_time_iso_8601": "2021-07-02T07:02:04.152780Z",
        "url": "https://files.pythonhosted.org/packages/78/3e/49c5008f8c6ca3d34e7cd3cf3a44c303ca1e07d6a41602012829547e6feb/pyicumessageformat-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c05f25059e46d1d4d4680e620af4d420a3596d14f0fbea2dfdf51673f6fe980",
          "md5": "16f41c51c863eebb71b7114146332856",
          "sha256": "491010553161ba77682a90ae3d11f26b915f245f144e3084924e9bcfb9385add"
        },
        "downloads": -1,
        "filename": "pyicumessageformat-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16f41c51c863eebb71b7114146332856",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7728,
        "upload_time": "2021-07-02T07:29:28",
        "upload_time_iso_8601": "2021-07-02T07:29:28.845973Z",
        "url": "https://files.pythonhosted.org/packages/8c/05/f25059e46d1d4d4680e620af4d420a3596d14f0fbea2dfdf51673f6fe980/pyicumessageformat-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39e3de23ad0e1ccae6b117c6b3c2df03e6583f2b2e192753815fa3de66084512",
          "md5": "dd60de30e32a39a867d7b94cbef88daf",
          "sha256": "beda5696341632836a509002020f0df59affbd78ec04fd697e1212f8ec7f37eb"
        },
        "downloads": -1,
        "filename": "pyicumessageformat-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dd60de30e32a39a867d7b94cbef88daf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12379,
        "upload_time": "2021-07-02T07:29:30",
        "upload_time_iso_8601": "2021-07-02T07:29:30.762656Z",
        "url": "https://files.pythonhosted.org/packages/39/e3/de23ad0e1ccae6b117c6b3c2df03e6583f2b2e192753815fa3de66084512/pyicumessageformat-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a01af1083c122885bbb5bb9c2163d34f5a37e735ddce9f6b356633e72614031",
          "md5": "3f68489ef3a41d81f989b2db1a48b175",
          "sha256": "ee5f5b4d272e8cc4cdc77f1b5a46b087990a36965d2cff9ed2c9bf0706e1b68d"
        },
        "downloads": -1,
        "filename": "pyicumessageformat-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f68489ef3a41d81f989b2db1a48b175",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7994,
        "upload_time": "2021-08-03T17:10:27",
        "upload_time_iso_8601": "2021-08-03T17:10:27.367681Z",
        "url": "https://files.pythonhosted.org/packages/3a/01/af1083c122885bbb5bb9c2163d34f5a37e735ddce9f6b356633e72614031/pyicumessageformat-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8927625c05e0eed4480b420123cf45c8210c6ef1c15db8e455e5dac5143322e7",
          "md5": "47c4410812ff659a3b4b1a193e309005",
          "sha256": "9bd137ab9cb8aee1daa0a3285f3dfe7baf3f6b6cd3f862711a2f1c9b83210816"
        },
        "downloads": -1,
        "filename": "pyicumessageformat-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "47c4410812ff659a3b4b1a193e309005",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12855,
        "upload_time": "2021-08-03T17:10:28",
        "upload_time_iso_8601": "2021-08-03T17:10:28.793302Z",
        "url": "https://files.pythonhosted.org/packages/89/27/625c05e0eed4480b420123cf45c8210c6ef1c15db8e455e5dac5143322e7/pyicumessageformat-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b644a1a4eb84aaa6918c35d46bd041773544084b702afed115a0d2d10441025d",
          "md5": "418156d83ccdf2ee8858fa53546a60bb",
          "sha256": "ee12cb7f02e2fa130cf945851098975d39503a09da0bd3d4780f1adc576353ff"
        },
        "downloads": -1,
        "filename": "pyicumessageformat-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "418156d83ccdf2ee8858fa53546a60bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8473,
        "upload_time": "2021-09-20T21:09:27",
        "upload_time_iso_8601": "2021-09-20T21:09:27.172725Z",
        "url": "https://files.pythonhosted.org/packages/b6/44/a1a4eb84aaa6918c35d46bd041773544084b702afed115a0d2d10441025d/pyicumessageformat-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d95ed42cc2f0aa7a04a9f572167620948efc6c9f82be592013a56b53fe0b1317",
          "md5": "16d1d2347ac96e161d0f9520748f8033",
          "sha256": "f779e9049b2c3792b7ce58f1bf929fbe2a59a7c5f576110315650ee5a000f517"
        },
        "downloads": -1,
        "filename": "pyicumessageformat-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "16d1d2347ac96e161d0f9520748f8033",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13489,
        "upload_time": "2021-09-20T21:09:28",
        "upload_time_iso_8601": "2021-09-20T21:09:28.531274Z",
        "url": "https://files.pythonhosted.org/packages/d9/5e/d42cc2f0aa7a04a9f572167620948efc6c9f82be592013a56b53fe0b1317/pyicumessageformat-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d879203ddd6612584d279494b22ed3bbb677357a1db6d0adcfec0c75f551c4a3",
          "md5": "b73d024fa69d08ffce54a8a80f229e6c",
          "sha256": "d8f8f42edd0aae596d61d05c2a04bdd2795e97b1f5e9fb7f99cf69a732061ea7"
        },
        "downloads": -1,
        "filename": "pyicumessageformat-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b73d024fa69d08ffce54a8a80f229e6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8936,
        "upload_time": "2021-09-22T17:36:59",
        "upload_time_iso_8601": "2021-09-22T17:36:59.330789Z",
        "url": "https://files.pythonhosted.org/packages/d8/79/203ddd6612584d279494b22ed3bbb677357a1db6d0adcfec0c75f551c4a3/pyicumessageformat-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b2a2f12fd041d92adc361ba413df5abfb1d3e5adf62e3ec00e9e4fac04674cc",
          "md5": "c95aa6772f39a766536699f6bab064e3",
          "sha256": "b3e97c0ed10c2b103f0f3a701aa6529700ea0ab66e0f3b23dc8e4aee181fc840"
        },
        "downloads": -1,
        "filename": "pyicumessageformat-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c95aa6772f39a766536699f6bab064e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15045,
        "upload_time": "2021-09-22T17:37:00",
        "upload_time_iso_8601": "2021-09-22T17:37:00.426811Z",
        "url": "https://files.pythonhosted.org/packages/9b/2a/2f12fd041d92adc361ba413df5abfb1d3e5adf62e3ec00e9e4fac04674cc/pyicumessageformat-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d879203ddd6612584d279494b22ed3bbb677357a1db6d0adcfec0c75f551c4a3",
        "md5": "b73d024fa69d08ffce54a8a80f229e6c",
        "sha256": "d8f8f42edd0aae596d61d05c2a04bdd2795e97b1f5e9fb7f99cf69a732061ea7"
      },
      "downloads": -1,
      "filename": "pyicumessageformat-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b73d024fa69d08ffce54a8a80f229e6c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8936,
      "upload_time": "2021-09-22T17:36:59",
      "upload_time_iso_8601": "2021-09-22T17:36:59.330789Z",
      "url": "https://files.pythonhosted.org/packages/d8/79/203ddd6612584d279494b22ed3bbb677357a1db6d0adcfec0c75f551c4a3/pyicumessageformat-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b2a2f12fd041d92adc361ba413df5abfb1d3e5adf62e3ec00e9e4fac04674cc",
        "md5": "c95aa6772f39a766536699f6bab064e3",
        "sha256": "b3e97c0ed10c2b103f0f3a701aa6529700ea0ab66e0f3b23dc8e4aee181fc840"
      },
      "downloads": -1,
      "filename": "pyicumessageformat-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c95aa6772f39a766536699f6bab064e3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15045,
      "upload_time": "2021-09-22T17:37:00",
      "upload_time_iso_8601": "2021-09-22T17:37:00.426811Z",
      "url": "https://files.pythonhosted.org/packages/9b/2a/2f12fd041d92adc361ba413df5abfb1d3e5adf62e3ec00e9e4fac04674cc/pyicumessageformat-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}