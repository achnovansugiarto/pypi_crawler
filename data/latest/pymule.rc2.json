{
  "info": {
    "author": "Yannick Ulrich for the MMCT",
    "author_email": "yannick.ulrich@durham.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Framework :: IPython",
      "Framework :: Jupyter",
      "Framework :: Matplotlib",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "# pyMule\n\nMcMule is a framework for fully differential higher-order QED\ncalculations of scattering and decay processes involving leptons. It\nkeeps finite lepton masses, which regularises collinear singularities.\nSoft singularities are treated with dimensional regularisation and\nusing $`{\\rm FKS}^\\ell`$ subtraction\n\nPlease find the manual for McMule\n[here](https://gitlab.com/mule-tools/manual) or download it here [as a\npdf](\nhttps://gitlab.com/mule-tools/manual/-/jobs/artifacts/master/raw/manual.pdf?job=build)\n\nIf you find McMule useful, please consider citing\n[[2007.01654]](https://arxiv.org/abs/2007.01654)\n\n>  QED at NNLO with McMule\n>\n>  P. Banerjee, T. Engel, A. Signer, Y. Ulrich\n\nThis is the analysis tool for McMule supporting Python 2 and Python 3.\n\n## Installation\n`pymule` can be installed with pip as\n```bash\n# For python 2\n\npip install git+https://gitlab.com/mule-tools/pymule.git\n\n# For python 3\npip3 install git+https://gitlab.com/mule-tools/pymule.git\n```\nIn principle this takes care of everything. However, it is usually\nbetter to install `numpy` and `scipy` first by hand\n```bash\npip install numpy\npip install scipy\npip install git+https://gitlab.com/mule-tools/pymule.git\n```\nFurther, Jupyter or IPython are strongly recommended. A pre-built\nDocker image is available at [yulrich/pymule](https://hub.docker.com/r/yulrich/pymule).\n\nFor further details please refer to the McMule manual\n[here](https://gitlab.com/mule-tools/manual) or download it here [as a pdf](\nhttps://gitlab.com/mule-tools/manual/-/jobs/artifacts/master/raw/manual.pdf?job=build)\n\n## Example analysis\n\nExamples of analysis can be found in the user-library at\n[mule-tools/user-library](https://gitlab.com/mule-tools/user-library).\n\nNevertheless, we repeat here the analysis the example analysis of the\npaper\n[radiative-lepton-decay/babar/example](https://gitlab.com/mule-tools/user-library/tree/master/radiative-lepton-decay/babar/example)\n\nWe begin by loading `pymule` and initialising the $`\\tau`$ lifetime\n```python\nfrom pymule import *\n\n# To normalise branching ratios, we need the tau lifetime\nlifetime = 1/(1000*(6.582119e-25)/(2.903e-13))\n```\nNext, we need to point `pymule` to the output directory of `mcmule`\nwith the `setup` command. In our example this is`babar-tau-e/out`.\nThis could either be a real directory or a `tar` file\n```python\n# The folder where McMule has stored the statefiles\nsetup(folder='babar-tau-e/out/')\n```\nAs a next step, we import the LO and NLO `which_pieces` and combine\nthem using two central `pymule` commands: `sigma` and `mergefks`.\n`sigma` takes the `which_piece` as an argument and imports matching\nresults, already merging different random seeds. `mergefks` takes the\nresults of (multiple) `sigma` invocations, adds results with matching\n$`\\xi_\\text{cut}`$ values and combines the result.\n\nWhile it is not strictly necessary to use this at LO, we still do.\n```python\n# Import LO data and re-scale to branching ratio\nLO = scaleset(mergefks(sigma('m2enng0')), GF**2*lifetime*alpha)\n\n# Import NLO corrections from the three pieces\nNLO = scaleset(mergefks(\n    sigma('m2enngR'),      # real corrections\n    sigma('m2enngCT'),     # counter term\n    anyxi=sigma('m2enngV') # virtual corrections\n), GF**2*lifetime*alpha**2)\n```\nIn the present case, $`\\sigma_n^{(1)}`$ is split into multiple\ncontributions, namely `m2enngV` and `m2enngC`.  This is indicated by\nthe `anyxi` argument.\n\nUsers should keep in mind that McMule ships with a version of\n`global_def` where the couplings $`G_F={\\tt GF}`$ and $`\\alpha={\\tt\nalpha}`$ are set to $`G_F=\\alpha=1`$. Hence, we use `pymule`'s\nfunction `scaleset` to multiply the result with the correct values of\n$`G_F`$ (in $`{\\rm MeV}^{-1}`$) and $`\\alpha`$ (in the OS scheme).\n\nNext, we can calculate the total branching ratio by adding up the LO\nand NLO branching ratios using `plusnumbers`\n```python\n# The branching ratio at NLO = LO + correction\nfullNLO = plusnumbers(LO['value'], NLO['value'])\n\n# Print results\nprint \"BR_0 = \", printnumber(LO['value'])\nprint \"dBR  = \", printnumber(NLO['value'])\nprint \"BR_1 = \", printnumber(fullNLO)\n```\nNext, we use `kplot` to produce plots\n```python\n# Produce energy plot\nfig1, (ax1, ax2) = kplot(\n    {'lo': LO['Ee'], 'nlo': NLO['Ee']},\n    labelx=r\"$E_e\\,/\\,{\\rm MeV}$\",\n    labelsigma=r\"$\\D\\mathcal{B}/\\D E_e$\"\n)\nax2.set_ylim(0.8,1.01)\n\n# Produce visible mass plot\nfig2, (ax1, ax2) = kplot(\n    {'lo': LO['minv'], 'nlo': NLO['minv']},\n    labelx=r\"$m_{e\\gamma}\\,/\\,{\\rm MeV}$\",\n    labelsigma=r\"$\\D\\mathcal{B}/\\D m_{e\\gamma}$\"\n)\n\nax1.set_yscale('log')\nax1.set_xlim(1000,0)\nax1.set_ylim(5e-9,1e-3)\nax2.set_ylim(0.8,1.)\n```\n\n## Reference\nMost functions in `pymule` have `docstrings` meaning that help can be\naccessed as\n```\n>>> help(pymule.sigma) # Python\nHelp on function sigma in module pymule.loader:\n\nsigma(piece, **kwargs)\n    sigma(piece, **kwargs) loads the which_piece piece and\n    statistically combines the random seeds. It returns a dict\n    with the tuples of FKS parameters as keys.\n    ....\n\nIn [2]: ?pymule.sigma # IPython\n\nSignature: pymule.sigma(piece, **kwargs)\nDocstring:\nsigma(piece, **kwargs) loads the which_piece piece and\nstatistically combines the random seeds. It returns a dict\nwith the tuples of FKS parameters as keys.\n....\n```\n\n## Data structure\nIn `pymule` we store data using either `dict` or `np.array` as\nfollows.\n\n * Numbers $`y\\pm e`$ are stored as\n```python\nnp.array([y, e])\n```\n * Histograms $`\\{ (x_i, y_i\\pm e_i) \\}`$ are stores similarly as\n   `np.array` with the $`x_i`$ indicating the centre of the bin. Over-\n   and underflow bins are marked with `np.inf`\n```python\nnp.array([\n    [x1, y1, e1],\n    [x2, y2, e2],\n    [x3, y3, e3],\n    ...\n])\n```\n * Dataset, i.e. results of runs (either as the result of\n   `importvegas` or `mergefks`), are `dict` with keys\n\n    * `time`: the job's run time\n    * `value`: the best estimate for the cross section and its error\n    * `chi2a`: the $`\\chi^2`$ estimate of the integrator\n    * all histograms as specified by their `name(..)` in `user.f95`\n    * `msg`: any message. Usually this contains information on the\n           state of the integrator (not present in combined results)\n    * `SHA`: the first 5 characters of the source-tree's SHA1 hash at\n          compile time (not present in combined results)\n    * `iteration`: the number of iterations completed in this file\n          (not present in combined results)\n\n * Non-combined datasets (such as the result of `sigma(..)`) are dicts\n   of datasets with the FKS parameters (or more generally the groups\n   returned by the filename matching) as keys.\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/mule-tools/pymule",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymule",
    "package_url": "https://pypi.org/project/pymule/",
    "platform": "",
    "project_url": "https://pypi.org/project/pymule/",
    "project_urls": {
      "Homepage": "https://gitlab.com/mule-tools/pymule"
    },
    "release_url": "https://pypi.org/project/pymule/0.2.0/",
    "requires_dist": [
      "scipy (>=0.19.0)",
      "cycler (>=0.10.0)",
      "matplotlib (>=2.0.2)"
    ],
    "requires_python": ">=2.7",
    "summary": "The McMule analysis framework",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10357690,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b118af27a1ae8d9b28ce460f9c42de988f7dd46218967ff711ca02daf1e75da",
          "md5": "92d6f45f26c4e99ac7a67dad265d78a5",
          "sha256": "8344e725794c43dccbf8407b32e9ce1761465945cc65dc441a6f9a1199906b60"
        },
        "downloads": -1,
        "filename": "pymule-0.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "92d6f45f26c4e99ac7a67dad265d78a5",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=2.7",
        "size": 13884,
        "upload_time": "2021-05-14T15:22:33",
        "upload_time_iso_8601": "2021-05-14T15:22:33.067855Z",
        "url": "https://files.pythonhosted.org/packages/2b/11/8af27a1ae8d9b28ce460f9c42de988f7dd46218967ff711ca02daf1e75da/pymule-0.0.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4567be3db6f79578441bdd7b985824d639c7f76070325c425e9b150da42e780",
          "md5": "5af504b6c5020c485ca3b89e074adbe0",
          "sha256": "81e7a00eeded55785b74d35b013844c430e34126c0bd9eccbe9c99f44eb8d834"
        },
        "downloads": -1,
        "filename": "pymule-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5af504b6c5020c485ca3b89e074adbe0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 55088,
        "upload_time": "2021-05-14T15:03:54",
        "upload_time_iso_8601": "2021-05-14T15:03:54.577321Z",
        "url": "https://files.pythonhosted.org/packages/d4/56/7be3db6f79578441bdd7b985824d639c7f76070325c425e9b150da42e780/pymule-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99c2ec53300fb1a03e25cd487f432192a980f82d9ff6f458ed99f9afbd64483b",
          "md5": "e0d3ac1f6f9117938170f132cab8e824",
          "sha256": "4952d64b82b25914fef0eaa0996891acbe136704a679fd8fef51780a759f1502"
        },
        "downloads": -1,
        "filename": "pymule-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e0d3ac1f6f9117938170f132cab8e824",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 48445,
        "upload_time": "2021-05-14T15:03:57",
        "upload_time_iso_8601": "2021-05-14T15:03:57.502780Z",
        "url": "https://files.pythonhosted.org/packages/99/c2/ec53300fb1a03e25cd487f432192a980f82d9ff6f458ed99f9afbd64483b/pymule-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8230f9cf5a48fe881e8ef4b40b593fbd406ced6433771d2a6e0e20b36d31679",
          "md5": "4ff314f86a5e9e29ba7d2f36b700599c",
          "sha256": "97776b1f3979ef83b620b64fc99d81db9421ea8db69992392d534676d14b2e3d"
        },
        "downloads": -1,
        "filename": "pymule-0.2.0p-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ff314f86a5e9e29ba7d2f36b700599c",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=2.7",
        "size": 16675,
        "upload_time": "2021-05-14T15:54:28",
        "upload_time_iso_8601": "2021-05-14T15:54:28.127984Z",
        "url": "https://files.pythonhosted.org/packages/a8/23/0f9cf5a48fe881e8ef4b40b593fbd406ced6433771d2a6e0e20b36d31679/pymule-0.2.0p-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6437f788ec826500fb43b8d4ae7b14f5af44c33cc0a2bb1c650fd1d402d16a29",
          "md5": "0bc273dc677063eec80c01cb62abc0ad",
          "sha256": "68d5441875913f7a2af8c7010a507426844df4fa7c072423f7a1557e9612b0f1"
        },
        "downloads": -1,
        "filename": "pymule-0.2.0p-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0bc273dc677063eec80c01cb62abc0ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 16675,
        "upload_time": "2021-05-14T15:54:01",
        "upload_time_iso_8601": "2021-05-14T15:54:01.940605Z",
        "url": "https://files.pythonhosted.org/packages/64/37/f788ec826500fb43b8d4ae7b14f5af44c33cc0a2bb1c650fd1d402d16a29/pymule-0.2.0p-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7aeaf16791728bc7e5ceb6c886ec539c42bb769a72119ef8ad6834e255a25a07",
          "md5": "545b641925033cba7bde030f3f4e9569",
          "sha256": "238728250f41a26a4a279f2a0d2b2eacfe91fdb1f2c3fef1297e954669cf9ab1"
        },
        "downloads": -1,
        "filename": "pymule-0.2.0p.tar.gz",
        "has_sig": false,
        "md5_digest": "545b641925033cba7bde030f3f4e9569",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 17478,
        "upload_time": "2021-05-14T15:54:03",
        "upload_time_iso_8601": "2021-05-14T15:54:03.253716Z",
        "url": "https://files.pythonhosted.org/packages/7a/ea/f16791728bc7e5ceb6c886ec539c42bb769a72119ef8ad6834e255a25a07/pymule-0.2.0p.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8230f9cf5a48fe881e8ef4b40b593fbd406ced6433771d2a6e0e20b36d31679",
        "md5": "4ff314f86a5e9e29ba7d2f36b700599c",
        "sha256": "97776b1f3979ef83b620b64fc99d81db9421ea8db69992392d534676d14b2e3d"
      },
      "downloads": -1,
      "filename": "pymule-0.2.0p-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "4ff314f86a5e9e29ba7d2f36b700599c",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": ">=2.7",
      "size": 16675,
      "upload_time": "2021-05-14T15:54:28",
      "upload_time_iso_8601": "2021-05-14T15:54:28.127984Z",
      "url": "https://files.pythonhosted.org/packages/a8/23/0f9cf5a48fe881e8ef4b40b593fbd406ced6433771d2a6e0e20b36d31679/pymule-0.2.0p-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6437f788ec826500fb43b8d4ae7b14f5af44c33cc0a2bb1c650fd1d402d16a29",
        "md5": "0bc273dc677063eec80c01cb62abc0ad",
        "sha256": "68d5441875913f7a2af8c7010a507426844df4fa7c072423f7a1557e9612b0f1"
      },
      "downloads": -1,
      "filename": "pymule-0.2.0p-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0bc273dc677063eec80c01cb62abc0ad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 16675,
      "upload_time": "2021-05-14T15:54:01",
      "upload_time_iso_8601": "2021-05-14T15:54:01.940605Z",
      "url": "https://files.pythonhosted.org/packages/64/37/f788ec826500fb43b8d4ae7b14f5af44c33cc0a2bb1c650fd1d402d16a29/pymule-0.2.0p-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7aeaf16791728bc7e5ceb6c886ec539c42bb769a72119ef8ad6834e255a25a07",
        "md5": "545b641925033cba7bde030f3f4e9569",
        "sha256": "238728250f41a26a4a279f2a0d2b2eacfe91fdb1f2c3fef1297e954669cf9ab1"
      },
      "downloads": -1,
      "filename": "pymule-0.2.0p.tar.gz",
      "has_sig": false,
      "md5_digest": "545b641925033cba7bde030f3f4e9569",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 17478,
      "upload_time": "2021-05-14T15:54:03",
      "upload_time_iso_8601": "2021-05-14T15:54:03.253716Z",
      "url": "https://files.pythonhosted.org/packages/7a/ea/f16791728bc7e5ceb6c886ec539c42bb769a72119ef8ad6834e255a25a07/pymule-0.2.0p.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}