{
  "info": {
    "author": "Petr Å ebek",
    "author_email": "petrsebek1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Pypete - Python Performance Test\n================================\n\nThis plugin helps writing performance tests in traditional nosetests way. To\nturn it use the ``--with-pypete`` argument in running nosetests in command\nline.\n\nPlugin run tests ``number`` times and this experiment is repeated ``repeat``\ntimes. So for measurement test will be ran ``times x repeat`` times. If ``number``\nequals 0, plugin computes optimal number of tests so the time of each\nexperiment is bigger than ``threshold``.\n\nI recommend to use `PrettyTable <https://code.google.com/p/prettytable/>`_\nfor better overview of test results. You can select file, where the results\nwill be stored in json format. With file and prettytable you can see\ncomparison of current, last, best and worst run of tests (best and worst\nare according to avg value).\n\nYou can access all source codes at `my Github <https://github.com/Artimi/pypete>`_.\n\nInstall\n-------\n::\n\n    pip install pypete\n\nExample of usage:\n-----------------\n::\n\n    $ nosetests --with-pypete --pypete-prettytable --pypete-file pypete.json tests/tests.py\n    F..F..\n    ======================================================================\n    FAIL: test_fail (tests.BasicTest)\n    ----------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"/home/psebek/projects/pypete/tests/tests.py\", line 18, in test_fail\n        self.assertTrue(False)\n    AssertionError: False is not true\n\n    ======================================================================\n    FAIL: test_timed (tests.BasicTest)\n    ----------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/site-packages/nose/tools/nontrivial.py\", line 100, in newfunc\n        raise TimeExpired(\"Time limit (%s) exceeded\" % limit)\n    TimeExpired: Time limit (0.001) exceeded\n\n    Pypete results:\n    repeat = 3 and number = 0\n    test_fail (tests.BasicTest):\n    +--------+-------------+----------+----------+-----------+\n    | Metric | current [s] | last [s] | best [s] | worst [s] |\n    +--------+-------------+----------+----------+-----------+\n    |  best  |   0.000034  | 0.000033 | 0.000033 |  0.000033 |\n    |  avg   |   0.000037  | 0.000033 | 0.000033 |  0.000036 |\n    | worst  |   0.000039  | 0.000034 | 0.000034 |  0.000040 |\n    +--------+-------------+----------+----------+-----------+\n    test_time (tests.BasicTest):\n    +--------+-------------+----------+----------+-----------+\n    | Metric | current [s] | last [s] | best [s] | worst [s] |\n    +--------+-------------+----------+----------+-----------+\n    |  best  |   0.001184  | 0.001174 | 0.001158 |  0.001193 |\n    |  avg   |   0.001186  | 0.001184 | 0.001176 |  0.001193 |\n    | worst  |   0.001189  | 0.001189 | 0.001196 |  0.001193 |\n    +--------+-------------+----------+----------+-----------+\n    test_time2 (tests.BasicTest):\n    +--------+-------------+----------+----------+-----------+\n    | Metric | current [s] | last [s] | best [s] | worst [s] |\n    +--------+-------------+----------+----------+-----------+\n    |  best  |   0.002216  | 0.002229 | 0.002144 |  0.002257 |\n    |  avg   |   0.002237  | 0.002238 | 0.002179 |  0.002276 |\n    | worst  |   0.002252  | 0.002245 | 0.002201 |  0.002302 |\n    +--------+-------------+----------+----------+-----------+\n    test_timed (tests.BasicTest):\n    +--------+-------------+----------+----------+-----------+\n    | Metric | current [s] | last [s] | best [s] | worst [s] |\n    +--------+-------------+----------+----------+-----------+\n    |  best  |   0.010448  | 0.010492 | 0.010442 |  0.010490 |\n    |  avg   |   0.010465  | 0.010541 | 0.010470 |  0.010645 |\n    | worst  |   0.010474  | 0.010621 | 0.010492 |  0.010751 |\n    +--------+-------------+----------+----------+-----------+\n    tests.test_arguments(0.001,):\n    +--------+-------------+----------+----------+-----------+\n    | Metric | current [s] | last [s] | best [s] | worst [s] |\n    +--------+-------------+----------+----------+-----------+\n    |  best  |   0.001188  | 0.001210 | 0.001150 |  0.001205 |\n    |  avg   |   0.001202  | 0.001213 | 0.001186 |  0.001219 |\n    | worst  |   0.001213  | 0.001217 | 0.001205 |  0.001227 |\n    +--------+-------------+----------+----------+-----------+\n    tests.test_arguments(0.002,):\n    +--------+-------------+----------+----------+-----------+\n    | Metric | current [s] | last [s] | best [s] | worst [s] |\n    +--------+-------------+----------+----------+-----------+\n    |  best  |   0.002274  | 0.002250 | 0.002183 |  0.002250 |\n    |  avg   |   0.002280  | 0.002262 | 0.002204 |  0.002286 |\n    | worst  |   0.002288  | 0.002273 | 0.002222 |  0.002318 |\n    +--------+-------------+----------+----------+-----------+\n\n    ----------------------------------------------------------------------\n    Ran 6 tests in 1.619s\n\n    FAILED (failures=2)",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Artimi/pypete",
    "keywords": "performance tests nose plugin",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pypete",
    "package_url": "https://pypi.org/project/pypete/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pypete/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/Artimi/pypete"
    },
    "release_url": "https://pypi.org/project/pypete/0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Pypete - Python Performance Tests",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1267501,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97d9dfd84be35f881771b738c5f50169c12761e3e714ca9eccd8687d4342d0c3",
          "md5": "9e9d6ae9c3dd765065d218ba65196465",
          "sha256": "445f927adda9ce9f578a76f4d45b6cbcddee6d6c0605a4b1f69cd033ee8b705a"
        },
        "downloads": -1,
        "filename": "pypete-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9e9d6ae9c3dd765065d218ba65196465",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5210,
        "upload_time": "2014-10-12T10:31:39",
        "upload_time_iso_8601": "2014-10-12T10:31:39.217928Z",
        "url": "https://files.pythonhosted.org/packages/97/d9/dfd84be35f881771b738c5f50169c12761e3e714ca9eccd8687d4342d0c3/pypete-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97d9dfd84be35f881771b738c5f50169c12761e3e714ca9eccd8687d4342d0c3",
        "md5": "9e9d6ae9c3dd765065d218ba65196465",
        "sha256": "445f927adda9ce9f578a76f4d45b6cbcddee6d6c0605a4b1f69cd033ee8b705a"
      },
      "downloads": -1,
      "filename": "pypete-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9e9d6ae9c3dd765065d218ba65196465",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5210,
      "upload_time": "2014-10-12T10:31:39",
      "upload_time_iso_8601": "2014-10-12T10:31:39.217928Z",
      "url": "https://files.pythonhosted.org/packages/97/d9/dfd84be35f881771b738c5f50169c12761e3e714ca9eccd8687d4342d0c3/pypete-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}