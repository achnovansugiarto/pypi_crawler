{
  "info": {
    "author": "Willy Polychenko",
    "author_email": "wolf1986@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![Build Status](https://app.travis-ci.com/wolf1986/log_utils.svg?branch=master)](https://app.travis-ci.com/wolf1986/log_utils)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/log-utils)\n![PyPI](https://img.shields.io/pypi/v/log-utils)\n\n# log_utils - Utils for the generic python logging package\n\n## Continuous Integration\n\n- Tests are being executed continuously thanks to [TravisCI](https://app.travis-ci.com/github/wolf1986/log_utils)\n- Executed automatically for master branch & pull-requests\n\n## Module - LogHelper\n\n**Sample:**  \nCreate a preconfigured logger format that supports colors (using colorama & colorlog packages)\n\n```python\nimport logging\nfrom log_utils.helper import LogHelper\n\nlogger = logging.getLogger()\nlogger.addHandler(LogHelper.generate_color_handler())\nlogger.setLevel(logging.INFO)\n\nlogger.debug('Sample Message')\nlogger.info('Sample Message, generated timestamp: ' + LogHelper.timestamp(with_ms=True))\nlogger.warning('Sample Message')\nlogger.error('Sample Message')\nlogger.critical('Sample Message')\n```\n\n**Expected output:**\n\n```\n2018-12-22 12:12:23,518 root: INFO Sample Message, using timestamp: 20181222_121223.518\n2018-12-22 12:12:23,518 root: WARNING Sample Message\n2018-12-22 12:12:23,518 root: ERROR Sample Message\n2018-12-22 12:12:23,518 root: CRITICAL Sample Message\n```\n\n## Module - DataLogger\n\nDataLogger implements a Logger in every sense, but adds to it the ability to receive the **optional** kwarg: `data=...`,\nif such arg is received, then it might be processesed by the logger for future reference.\n\n**Features**:\n\n1. The data will be saved only if the log level is matched (same as the logged message)\n2. `data` may also be of type `Callable` - to prevent generation of data when loglevel is not matched.\n   e.g. `..., data=lambda: generate_my_matplotlib_figure()`\n3. `data` is a Python object that needs to be converted to `bytes`. See available converters ():\n    1. Pure Python - TextConverter, BinaryConverter, PickleConverter\n    2. Contribute to other libraries - NumpyImageConverter, MatplotlibConverter, PlotlyConverter\n4. `bytes` converted from the `data` object are handled by DataHandlers (similarly to regular logger Handlers).\n5. A useful handler exists (`SaveToDirHandler`), but others can be implemented for other purposes such as sending to a\n   server.\n\n> **Note:** Even though the module contains converters for Matplotlib and NumPy, they are only required if the user wishes to use them, so in order to successfully import these converters make sure that you have matplotlib and numpy installed.\n\n**Sample - Nominal use case:**\n\n```python\n\"\"\"  \nInternal components are responsible for their logs, the user of those components is responsible \nfor handlers of the log (both text handlers such as stdout / file, and data loggers), and the \nlocation for writing data files created by the log. \n\"\"\"\n\nimport logging\nfrom log_utils.helper import LogHelper\nfrom log_utils.data_logger import DataLogger\nfrom log_utils.data_logger.converter_numpy_image import NumpyImageConverter\nfrom log_utils.data_logger.converter_matplotlib import MatplotlibConverter\nfrom log_utils.data_logger.handlers import SaveToDirHandler\n\n# Configure a data logger - Where to save, and what conversion methods to use, propagate to text logger  \nroot_logger = logging.getLogger()\nroot_logger.addHandler(LogHelper.generate_color_handler())\n\nlogger = DataLogger('TestScript', logging.DEBUG)\nlogger.addHandler(\n    SaveToDirHandler(path_dir_logs)\n        .addConverter(MatplotlibConverter())\n        .addConverter(NumpyImageConverter())\n)\nlogger.parent = logger_root\n\n# Log data, repeat with different settings  \nobj = DemoComponent()\nobj.logger.parent = logger\n\nlogger.info('About to demo using default settings')\nobj.some_method()\n\n\nclass DemoComponent:\n    def __init__(self) -> None:\n        self.logger = DataLogger(name='DemoComponent')\n\n    def some_method(self):\n        self.logger.warning('TEST Warning')\n        self.logger.warning('TEST Data Warning', data=lambda: 'Some text contents')\n        self.logger.error('TEST Error')\n\n        self.logger.info('About to generate and dump some string data')\n        self.logger.debug('Some string data', data=lambda: 'File Contents\\nLine 2')\n\n        self.logger.info('About to dump some binary data')\n        self.logger.debug('Some binary data', data=b'File Contents\\nLine 2')\n\n        self.logger.info('About to generate and dump some NumPy data')\n        np_array = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n        self.logger.debug('Some numpy raw', data=np_array)\n        self.logger.debug('Some numpy bytes', data=np_array.tobytes())\n\n        self.logger.info('About to generate and dump a matplotlib figure')\n        self.logger.debug('Matplotlib Figure', data=lambda: self.figure_visualization())\n\n        self.logger.info('About to generate and dump a numpy image (50x50 gradient image)')\n        self.logger.debug('Numpy image', data=lambda: np.meshgrid(range(0, 250, 5), range(50))[0])\n\n    @staticmethod\n    def figure_visualization():\n        np.random.seed(0)\n\n        # example data\n        mu = 100  # mean of distribution\n        sigma = 15  # standard deviation of distribution\n        x = mu + sigma * np.random.randn(437)\n\n        num_bins = 50\n        fig, ax = pyplot.subplots()\n\n        # the histogram of the data\n        n, bins, patches = ax.hist(x, num_bins, density=1)\n\n        # add a 'best fit' line\n        y = mlab.normpdf(bins, mu, sigma)\n        ax.plot(bins, y, '--')\n        ax.set_xlabel('Smarts')\n        ax.set_ylabel('Probability density')\n        ax.set_title(r'Histogram of IQ: $\\mu=100$, $\\sigma=15$')\n\n        # Tweak spacing to prevent clipping of ylabel\n        fig.tight_layout()\n\n        return fig\n```\n\n**Expected output:**\n\n```\n2018-12-22 14:15:00,401 TestScript: INFO About to demo using default settings\n2018-12-22 14:15:00,401 DemoComponent: WARNING TEST Warning\n2018-12-22 14:15:00,401 DemoComponent: WARNING TEST Data Warning (No supported converters)\n2018-12-22 14:15:00,401 DemoComponent: ERROR TEST Error\n2018-12-22 14:15:00,403 DemoComponent: INFO About to generate and dump some string data\n2018-12-22 14:15:00,403 DemoComponent: DEBUG Some string data (No supported converters)\n2018-12-22 14:15:00,403 DemoComponent: INFO About to dump some binary data\n2018-12-22 14:15:00,403 DemoComponent: DEBUG Some binary data (No supported converters)\n2018-12-22 14:15:00,403 DemoComponent: INFO About to generate and dump some NumPy data\n2018-12-22 14:15:00,403 DemoComponent: DEBUG Some numpy raw (No supported converters)\n2018-12-22 14:15:00,403 DemoComponent: DEBUG Some numpy bytes (No supported converters)\n2018-12-22 14:15:00,403 DemoComponent: INFO About to generate and dump a matplotlib figure\n2018-12-22 14:15:00,965 DemoComponent: DEBUG Matplotlib Figure (Saved to: \"C:\\Users\\wolf1\\AppData\\Local\\Temp\\tmp8fne_uz5\\20181222_141500.889 DEBUG Matplotlib Figure.png\"); I/O: 0.075 [sec]\n2018-12-22 14:15:00,965 DemoComponent: INFO About to generate and dump a numpy image (50x50 gradient image)\n2018-12-22 14:15:00,967 DemoComponent: DEBUG Numpy image (Saved to: \"C:\\Users\\wolf1\\AppData\\Local\\Temp\\tmp8fne_uz5\\20181222_141500.965 DEBUG Numpy image.png\"); I/O: 0.001 [sec]\n```\n\n**Visit the tests for more:**\n\n- TextConverter\n- BinaryConverter\n- PickleConverter\n\n## Module - DataLogger.contrib\n\nIn addition to Matplotlib figures and NumPy images which are supported by default, the contrib module contains\nadditional adapters to various frameworks.\n\n- **Plotly -** Generated figures can be saved as `.html` files for later preview in the browser. Use\n  the `PlotlyConverter()` from `log_utils.data_logger.contrib.plotly_converter`\n\n### Sample - Plotly\n\n```python\nimport shutil\n\nimport numpy as np\nimport logging\nfrom pathlib import Path\nfrom tempfile import mkdtemp\nfrom unittest import TestCase\n\nfrom log_utils.data_logger import DataLogger\n\nfrom log_utils.data_logger.contrib.plotly_converter import PlotlyConverter, PlotlyFigure\nfrom log_utils.data_logger.handlers import SaveToDirHandler\nfrom log_utils.helper import LogHelper\n\n\nclass TestPlotlyConverter(TestCase):\n    @classmethod\n    def get_default_grid_settings(cls, title):\n        axis = dict(\n            showbackground=True,\n            backgroundcolor=\"rgb(230, 230,230)\",\n            gridcolor=\"rgb(255, 255, 255)\",\n            zerolinecolor=\"rgb(255, 255, 255)\"\n        )\n\n        layout = dict(\n            title=title,\n            font=dict(family='Balto'),\n            showlegend=False,\n            width=800,\n            height=800,\n            scene=dict(\n                xaxis=axis,\n                yaxis=axis,\n                zaxis=axis,\n                aspectratio=dict(\n                    x=1,\n                    y=1,\n                    z=1\n                )\n            )\n        )\n\n        return layout\n\n    def test_save_ones_volume(self):\n        \"\"\"\n            Note: For nosetest: Run with --nocapture\n        \"\"\"\n\n        path_dir_logs = Path(mkdtemp())\n\n        try:\n            logger = DataLogger('TestLogger', logging.INFO)\n\n            logger.addHandler(SaveToDirHandler(path_dir_logs).addConverter(PlotlyConverter()))\n            logger.addHandler(LogHelper.generate_color_handler())\n\n            meshes = {\n                'i': np.array([2, 2]), 'showscale': False, 'opacity': 0.3, 'k': np.array([0, 1]),\n                'z': np.array([1., 1., 1., 1.], dtype=np.float32), 'name': '',\n                'y': np.array([0., 0., 1., 1.], dtype=np.float32),\n                'colorscale': [[0, 'rgb(6, 236, 35)'], [1.0, 'rgb(6, 236, 35)']],\n                'x': np.array([0., 1., 0., 1.], dtype=np.float32), 'type': 'mesh3d', 'j': np.array([1, 3]),\n                'reversescale': False,\n                'intensity': np.array([-0., -0.13533528, -0., -0.04978707], dtype=np.float32)\n            }\n\n            logger.info(\n                'Plotly figure sample',\n                data=PlotlyFigure(data=[meshes], layout=self.get_default_grid_settings(\"test\"))\n            )\n\n            self.assertTrue(\n                len(list(path_dir_logs.glob('*.html'))) == 1\n            )\n\n        finally:\n            shutil.rmtree(str(path_dir_logs))\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wolf1986/log_utils",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "log-utils",
    "package_url": "https://pypi.org/project/log-utils/",
    "platform": "",
    "project_url": "https://pypi.org/project/log-utils/",
    "project_urls": {
      "Homepage": "https://github.com/wolf1986/log_utils"
    },
    "release_url": "https://pypi.org/project/log-utils/0.4.1/",
    "requires_dist": [
      "colorama",
      "colorlog"
    ],
    "requires_python": ">=3.6",
    "summary": "Utils for generic python logging package",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12776720,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de277ced36948b6cca915054b2cc887e624fb55bc4ecc9125912d8b7b3e7e569",
          "md5": "a6f77179748400ed7b3bc750a16303a5",
          "sha256": "6d7d8b569c4646d086742bbceae76e4f04a79030f47481f1024726c8a3d9051b"
        },
        "downloads": -1,
        "filename": "log_utils-0.2.0.zip",
        "has_sig": false,
        "md5_digest": "a6f77179748400ed7b3bc750a16303a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4756,
        "upload_time": "2017-07-25T12:31:53",
        "upload_time_iso_8601": "2017-07-25T12:31:53.698561Z",
        "url": "https://files.pythonhosted.org/packages/de/27/7ced36948b6cca915054b2cc887e624fb55bc4ecc9125912d8b7b3e7e569/log_utils-0.2.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05c444714e41f2c3f4874018cf3a103c91f67d7dd62d9de80b97a22f3fc09131",
          "md5": "381039b18b5fd2fbcee64720596f8cc1",
          "sha256": "1eb6ca6a1b91a25c04bbb3facb7cca13c936edd50ea8d91084b63032e88eec54"
        },
        "downloads": -1,
        "filename": "log_utils-0.3.0.zip",
        "has_sig": false,
        "md5_digest": "381039b18b5fd2fbcee64720596f8cc1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6004,
        "upload_time": "2017-08-19T16:31:29",
        "upload_time_iso_8601": "2017-08-19T16:31:29.827202Z",
        "url": "https://files.pythonhosted.org/packages/05/c4/44714e41f2c3f4874018cf3a103c91f67d7dd62d9de80b97a22f3fc09131/log_utils-0.3.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b624781f40701bd52ef97fad191c50d444623a4ee8496ffb5baad9ea42fcf13b",
          "md5": "5b8a21c1fb9bcd73570f5c543aa88b46",
          "sha256": "cb74dcf899d4d69539bcdd0828e7428e280b69ad76810bda9df2ff85628dfc25"
        },
        "downloads": -1,
        "filename": "log_utils-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5b8a21c1fb9bcd73570f5c543aa88b46",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4422,
        "upload_time": "2017-12-21T08:12:47",
        "upload_time_iso_8601": "2017-12-21T08:12:47.729868Z",
        "url": "https://files.pythonhosted.org/packages/b6/24/781f40701bd52ef97fad191c50d444623a4ee8496ffb5baad9ea42fcf13b/log_utils-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "590697accfd2415397cc9b349aefa3e7af73dee2f20eee65153b2f9630a0be59",
          "md5": "a0f4ca1a027b650a188c5c5cbcbc05d8",
          "sha256": "1d0d80afa8cbe70989731af66cc437a488683d09c2d73ef11f1c9f0a99dafaa8"
        },
        "downloads": -1,
        "filename": "log_utils-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a0f4ca1a027b650a188c5c5cbcbc05d8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7492,
        "upload_time": "2018-06-07T06:25:19",
        "upload_time_iso_8601": "2018-06-07T06:25:19.401112Z",
        "url": "https://files.pythonhosted.org/packages/59/06/97accfd2415397cc9b349aefa3e7af73dee2f20eee65153b2f9630a0be59/log_utils-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3f6a5d13737c9323c4ee6d75e85d9185781fdcaaf03a57f820b46c41c00b367",
          "md5": "eefefb2ab16b701f69a020250b7afb5b",
          "sha256": "fbc4690d3948285e5e4a51d8a52ad4e215fe72b6237e8533f0633c70cffa79e8"
        },
        "downloads": -1,
        "filename": "log_utils-0.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eefefb2ab16b701f69a020250b7afb5b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11046,
        "upload_time": "2018-12-23T10:52:18",
        "upload_time_iso_8601": "2018-12-23T10:52:18.078186Z",
        "url": "https://files.pythonhosted.org/packages/d3/f6/a5d13737c9323c4ee6d75e85d9185781fdcaaf03a57f820b46c41c00b367/log_utils-0.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daa68b0491ff020f9dfc8ecc71e64cc1d825b781354a6bfbfc450451b8062cc2",
          "md5": "f941e16d3e661194cfbd9e4ecffe212e",
          "sha256": "03c89a989ea3b61f77ad360058c4265b95f2f41ace39f79db7f15e02c9d576f6"
        },
        "downloads": -1,
        "filename": "log_utils-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f941e16d3e661194cfbd9e4ecffe212e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8182,
        "upload_time": "2018-12-23T10:52:19",
        "upload_time_iso_8601": "2018-12-23T10:52:19.443777Z",
        "url": "https://files.pythonhosted.org/packages/da/a6/8b0491ff020f9dfc8ecc71e64cc1d825b781354a6bfbfc450451b8062cc2/log_utils-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b113fc29523bf977d53a5844d70a207dddf7732441ee4648cacbd1f6c901ea5a",
          "md5": "9a7c13ab1e308c27f6f6f673c6f9ef5b",
          "sha256": "7ee2415d8ef19a8c6274a5fc02bb05e2853e3c8b7fccb74ef44c3874c357fb5d"
        },
        "downloads": -1,
        "filename": "log_utils-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a7c13ab1e308c27f6f6f673c6f9ef5b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16251,
        "upload_time": "2021-08-29T10:41:06",
        "upload_time_iso_8601": "2021-08-29T10:41:06.671889Z",
        "url": "https://files.pythonhosted.org/packages/b1/13/fc29523bf977d53a5844d70a207dddf7732441ee4648cacbd1f6c901ea5a/log_utils-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d35c2d70f763bfcd434b8a78bedc78d03092f255168f390e3fac8eb158b790a",
          "md5": "45d5f1b667923935a7a7a2e940799871",
          "sha256": "683315044b13986cdc536b23eb66be71d3fb05186c18cfe56194431d7e69e574"
        },
        "downloads": -1,
        "filename": "log_utils-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "45d5f1b667923935a7a7a2e940799871",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17299,
        "upload_time": "2021-08-29T10:41:08",
        "upload_time_iso_8601": "2021-08-29T10:41:08.019431Z",
        "url": "https://files.pythonhosted.org/packages/2d/35/c2d70f763bfcd434b8a78bedc78d03092f255168f390e3fac8eb158b790a/log_utils-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65dab6b25e100521cb6dc4bdc7ed0b711e10845e58218459e0f6504087d9e9db",
          "md5": "4e8954173d6a958d08e182389c3b5638",
          "sha256": "089c34ae34c8de6c3f4cb40d5b244c9c7e4e1cc89fcdfa21b3665dd288c968f4"
        },
        "downloads": -1,
        "filename": "log_utils-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e8954173d6a958d08e182389c3b5638",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16306,
        "upload_time": "2022-02-03T14:21:34",
        "upload_time_iso_8601": "2022-02-03T14:21:34.655422Z",
        "url": "https://files.pythonhosted.org/packages/65/da/b6b25e100521cb6dc4bdc7ed0b711e10845e58218459e0f6504087d9e9db/log_utils-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f81073a2993a3c2ec309b56d92902278a6e78613e6374fca0a5c8c466c9e05a8",
          "md5": "e19e5667e496a6fa1158fb7d19e85c19",
          "sha256": "b473d333da8985b3554fe96cdd897d1a3d2c2ff16ac29dd7421cbe289827a798"
        },
        "downloads": -1,
        "filename": "log_utils-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e19e5667e496a6fa1158fb7d19e85c19",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17481,
        "upload_time": "2022-02-03T14:21:35",
        "upload_time_iso_8601": "2022-02-03T14:21:35.913693Z",
        "url": "https://files.pythonhosted.org/packages/f8/10/73a2993a3c2ec309b56d92902278a6e78613e6374fca0a5c8c466c9e05a8/log_utils-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "65dab6b25e100521cb6dc4bdc7ed0b711e10845e58218459e0f6504087d9e9db",
        "md5": "4e8954173d6a958d08e182389c3b5638",
        "sha256": "089c34ae34c8de6c3f4cb40d5b244c9c7e4e1cc89fcdfa21b3665dd288c968f4"
      },
      "downloads": -1,
      "filename": "log_utils-0.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4e8954173d6a958d08e182389c3b5638",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 16306,
      "upload_time": "2022-02-03T14:21:34",
      "upload_time_iso_8601": "2022-02-03T14:21:34.655422Z",
      "url": "https://files.pythonhosted.org/packages/65/da/b6b25e100521cb6dc4bdc7ed0b711e10845e58218459e0f6504087d9e9db/log_utils-0.4.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f81073a2993a3c2ec309b56d92902278a6e78613e6374fca0a5c8c466c9e05a8",
        "md5": "e19e5667e496a6fa1158fb7d19e85c19",
        "sha256": "b473d333da8985b3554fe96cdd897d1a3d2c2ff16ac29dd7421cbe289827a798"
      },
      "downloads": -1,
      "filename": "log_utils-0.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e19e5667e496a6fa1158fb7d19e85c19",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17481,
      "upload_time": "2022-02-03T14:21:35",
      "upload_time_iso_8601": "2022-02-03T14:21:35.913693Z",
      "url": "https://files.pythonhosted.org/packages/f8/10/73a2993a3c2ec309b56d92902278a6e78613e6374fca0a5c8c466c9e05a8/log_utils-0.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}