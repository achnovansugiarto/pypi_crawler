{
  "info": {
    "author": "Albert Canyelles Ruiz",
    "author_email": "acanyelles@enchainte.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Enchainté SDK -  Python\n\nThis SDK offers all the features available in the Enchainté Toolset:\n- Write messages\n- Get messages proof\n- Validate proof\n- Get messages details\n\n## Installation\n\nThe SDK can be installed with PIP as follows:\n\n```shell\n$ pip install enchaintesdk\n```\n\n## Usage\n\nThe following examples summarize how to access the different functionalities available:\n\n### Prepare data\n\nIn order to interact with the SDK data must be processed through the Message module.\n\nThere are several ways to generate a Message:\n\n```python\nfrom enchaintesdk import Message\n\n# From a dict\nd = {'data': 'Example Data'}\nMessage.fromDict(d)\n\n# From a hash string (hex encoded 64-chars long string with no \"0x\" prefix)\nMessage.fromHash('5ac706bdef87529b22c08646b74cb98baf310a46bd21ee420814b04c71fa42b1')\n\n# From a hex encoded string (with no \"0x\" prefix)\nMessage.fromHex('0123456789abcdef')\n\n# From a string\nMessage.fromString('Example Data')\n\n# From a bytes\nMessage.fromBytes(b'Example Data')\n\n# Retrieve the computed message\nMessage.fromBytes(b'Example Data').getHash()\n```\n\n### Send messages\n\nThis example shows how to send data to Enchainté.\n\n```python\nfrom enchaintesdk import EnchainteClient, Message, EnchainteSDKException, ConfigEnv\nimport os\n\napi_key = os.getenv(\"ENCHAINTE_APIKEY\", default='api_key')\nclient = EnchainteClient(api_key, environment=ConfigEnv.TEST)\n\nmessages = [Message.fromString('Example Data 1')]\n\ntry:\n\tsend_receipt = client.sendMessages(messages)\n    print('sendReceipt status: ', send_receipt[0].status)\nexcept EnchainteSDKException:\n\traise\n```\n\n### Get messages status\n\nThis example shows how to get all the details and status of messages:\n\n```python\nfrom enchaintesdk import EnchainteClient, Message, EnchainteSDKException, ConfigEnv\nimport os\n\napiKey = os.getenv(\"ENCHAINTE_APIKEY\", default='apiKey')\nclient = EnchainteClient(apiKey, environment=ConfigEnv.TEST)\n\nmessages = [\n    Message.fromString('Example Data 1'),\n    Message.fromString('Example Data 2'),\n    Message.fromString('Example Data 3')\n]\n\ntry:\n\tm_receipts = client.getMessages(messages)\n    for mr in m_receipts:\n        print(\"MessageReceipt: {{anchor_id: {}, client:{}, message:{}, status:{}}}\".format(\n            mr.anchor, mr.client, mr.message, mr.status))\nexcept EnchainteSDKException:\n\traise\n```\n\n\n### Wait for messages to process\n\nThis example shows how to wait for a message to be processed by Enchainté after sending i:\n\n```python\nfrom enchaintesdk import EnchainteClient, Message, EnchainteSDKException, ConfigEnv\nimport os\n\napi_key = os.getenv(\"ENCHAINTE_APIKEY\", default='api_key')\nclient = EnchainteClient(api_key, environment=ConfigEnv.TEST)\nmessages = [Message.fromString('Example Data 1')]\n\ntry:\n\tsend_receipt = client.sendMessages(messages)\n    anchor = client.waitAnchor(send_receipt[0].anchor)\n    print(\"Anchor: {{id: {}, blocks:{}, network:{}, root: {}, status:{}}}\".format(\n        anchor.id, anchor.block_roots, anchor.networks, anchor.root, anchor.status))\nexcept EnchainteSDKException:\n\traise\n```\n\n### Get and validate messages proof\n\nThis example shows how to get a proof for an array of messages and validate it:\n\n```python\nfrom enchaintesdk import EnchainteClient, Message, EnchainteSDKException, ConfigEnv\nimport os\n\napiKey = os.getenv(\"ENCHAINTE_APIKEY\", default='apiKey')\n\nclient = EnchainteClient(apiKey, environment=ConfigEnv.TEST)\n\nmessages = [\n    Message.fromString('Example Data 1'),\n    Message.fromString('Example Data 2'),\n    Message.fromString('Example Data 3')\n]\n\ntry:\n\tproof = client.getProof(messages)\n\ttimestamp = client.verifyProof(proof)\n    # or simply: timestamp = client.verifyMessages(messages)\n    print('When were our messages sent to blockchain? : {}'.format(is_valid_boolean))\nexcept EnchainteSDKException:\n\traise\n```\n\n### Full example\n\nThis snippet shows a complete data cycle including: write, message status polling and proof retrieval and validation.\n\n```python\n#!/usr/bin/env python3\n\nfrom enchaintesdk import EnchainteClient, Message, EnchainteSDKException\nimport random\nimport time\nimport os\n\n\ndef randHex(l):\n    ''' Helper function to generate a random message.'''\n    val = [int(random.uniform(0, 256)) for x in range(0, l)]\n    result = ''\n    for n in val:\n        result += ('%x' % n)\n    return result\n\n\ndef main():\n    apiKey = os.getenv(\"API_KEY\", default='apiKey')\n\n    client = EnchainteClient(apiKey)\n\n    try:\n        messages = [Message.fromString(randHex(64))]\n        send_receipt = client.sendMessages(messages)\n        print('Message sent to Enchainté. Waiting for anchor to be processed ...')\n        client.waitAnchor(send_receipt[0].anchor)\n\n        print('Anchor retrieved. Getting Message proof ...')\n        proof = client.getProof(messages)\n\n        print('Verifying proof ...')\n        timestamp = client.verifyProof(proof)\n\n        if timestamp <= 0:\n            print('Data not registered on the blockchain.')\n\n        print('Success!')\n\n    except EnchainteSDKException as e:\n        print(e)\n\n\nif __name__ == \"__main__\":\n    # execute only if run as a script\n    main()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/enchainte/enchainte-sdk-py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "enchaintesdk",
    "package_url": "https://pypi.org/project/enchaintesdk/",
    "platform": "",
    "project_url": "https://pypi.org/project/enchaintesdk/",
    "project_urls": {
      "Homepage": "https://github.com/enchainte/enchainte-sdk-py"
    },
    "release_url": "https://pypi.org/project/enchaintesdk/0.1.3/",
    "requires_dist": [
      "requests (>=2.24.0)",
      "web3 (>=5.6.0)",
      "pycryptodome (>=3.0)"
    ],
    "requires_python": ">=3.5",
    "summary": "Enchainté SDK for Python3",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10702555,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8c7e4825fbf3b3a0ce83e0e6dfbb098731d4f24c475f96b963f7023bd9a3737",
          "md5": "65bf8612083109b4b9f60b1ef9ff7627",
          "sha256": "f275eb28da5e69f1d8d44a58ab56f69069bc8db3093042cb08eb77504dfc0742"
        },
        "downloads": -1,
        "filename": "enchaintesdk-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65bf8612083109b4b9f60b1ef9ff7627",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 39291,
        "upload_time": "2021-04-21T14:53:38",
        "upload_time_iso_8601": "2021-04-21T14:53:38.646224Z",
        "url": "https://files.pythonhosted.org/packages/f8/c7/e4825fbf3b3a0ce83e0e6dfbb098731d4f24c475f96b963f7023bd9a3737/enchaintesdk-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1ead5a01fe128922b8a926c890b09df50b420b009ba8674d14e566a45bb9d52",
          "md5": "2f8fe596cc14d288803869ddf0a8a89b",
          "sha256": "3e9e20203ec2ffff4d8a6f4cb94a3e889441e3160dd5c63aeefd0bdfba443750"
        },
        "downloads": -1,
        "filename": "enchaintesdk-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2f8fe596cc14d288803869ddf0a8a89b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 24993,
        "upload_time": "2021-04-21T14:53:40",
        "upload_time_iso_8601": "2021-04-21T14:53:40.220413Z",
        "url": "https://files.pythonhosted.org/packages/d1/ea/d5a01fe128922b8a926c890b09df50b420b009ba8674d14e566a45bb9d52/enchaintesdk-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4a82a8a866937a116a2dd0c3f319f2a96de8ad2aa25bdab42ba59cc1fee5918",
          "md5": "46bbf1d35e97b99d27b7349472dc786d",
          "sha256": "3896f19d90add06a89a615cf54a0e863e139da709c2aefa7a7b68c49dfe8bb90"
        },
        "downloads": -1,
        "filename": "enchaintesdk-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46bbf1d35e97b99d27b7349472dc786d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 40195,
        "upload_time": "2021-04-21T16:51:24",
        "upload_time_iso_8601": "2021-04-21T16:51:24.271268Z",
        "url": "https://files.pythonhosted.org/packages/b4/a8/2a8a866937a116a2dd0c3f319f2a96de8ad2aa25bdab42ba59cc1fee5918/enchaintesdk-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb24ec70aaf63032cf6043e35690749e2752d71b157cb6f91cd3cc64ca465e14",
          "md5": "18da0594a62f3829d982e7f24bd7827b",
          "sha256": "d07d7c3eecdf8cdec62dd69a7dc4d39713da7cdfc8f6540abbe6de80f51889b9"
        },
        "downloads": -1,
        "filename": "enchaintesdk-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "18da0594a62f3829d982e7f24bd7827b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 25102,
        "upload_time": "2021-04-21T16:51:25",
        "upload_time_iso_8601": "2021-04-21T16:51:25.711879Z",
        "url": "https://files.pythonhosted.org/packages/bb/24/ec70aaf63032cf6043e35690749e2752d71b157cb6f91cd3cc64ca465e14/enchaintesdk-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4b311b922630042722898622c18c2fcf0389cca3dfb7cc92bd345cffe9190fd",
          "md5": "a638ece2c8c2629e0f4649704d66bbef",
          "sha256": "78b386af4095883a63cca5dcaa5b4c49b1d3b5382cd7a439771c4d0ec9ffdee0"
        },
        "downloads": -1,
        "filename": "enchaintesdk-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a638ece2c8c2629e0f4649704d66bbef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 40362,
        "upload_time": "2021-04-22T12:21:32",
        "upload_time_iso_8601": "2021-04-22T12:21:32.867658Z",
        "url": "https://files.pythonhosted.org/packages/c4/b3/11b922630042722898622c18c2fcf0389cca3dfb7cc92bd345cffe9190fd/enchaintesdk-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0b8748872b2459f7536958b0fcc08558741247e672437bedb151234e054c42c",
          "md5": "de74a39c441e146d0e22a188897d92b6",
          "sha256": "abe313f1c68979d9f6e12df167a12b248c3c24f1bfb145cf4bb4ba70b296a9c7"
        },
        "downloads": -1,
        "filename": "enchaintesdk-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "de74a39c441e146d0e22a188897d92b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 25179,
        "upload_time": "2021-04-22T12:21:35",
        "upload_time_iso_8601": "2021-04-22T12:21:35.160700Z",
        "url": "https://files.pythonhosted.org/packages/f0/b8/748872b2459f7536958b0fcc08558741247e672437bedb151234e054c42c/enchaintesdk-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f44fc8b2497ab5d2fd07e28db2ef920fce46f3b7914fb22c5570c671f13bc3c7",
          "md5": "b20c71eb570eaccedac8a4d40ab01725",
          "sha256": "2bcff2d2930e2f03dafc67ccdd4c55dcf3172d873f029085b0b7fb8956548c50"
        },
        "downloads": -1,
        "filename": "enchaintesdk-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b20c71eb570eaccedac8a4d40ab01725",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 40341,
        "upload_time": "2021-06-21T14:36:07",
        "upload_time_iso_8601": "2021-06-21T14:36:07.321878Z",
        "url": "https://files.pythonhosted.org/packages/f4/4f/c8b2497ab5d2fd07e28db2ef920fce46f3b7914fb22c5570c671f13bc3c7/enchaintesdk-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f982e3ccb06bf9aa3c2f2e9df96fcca10ce92c76cc7a4b714d5af8cd89bd3432",
          "md5": "f5dd402fb67934da838f21573ec7c04a",
          "sha256": "1985a35bfdfe79adb39298b8fc4b56af319803e63f20b53ac079d9bd1587a62e"
        },
        "downloads": -1,
        "filename": "enchaintesdk-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f5dd402fb67934da838f21573ec7c04a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 24572,
        "upload_time": "2021-06-21T14:36:08",
        "upload_time_iso_8601": "2021-06-21T14:36:08.924579Z",
        "url": "https://files.pythonhosted.org/packages/f9/82/e3ccb06bf9aa3c2f2e9df96fcca10ce92c76cc7a4b714d5af8cd89bd3432/enchaintesdk-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f44fc8b2497ab5d2fd07e28db2ef920fce46f3b7914fb22c5570c671f13bc3c7",
        "md5": "b20c71eb570eaccedac8a4d40ab01725",
        "sha256": "2bcff2d2930e2f03dafc67ccdd4c55dcf3172d873f029085b0b7fb8956548c50"
      },
      "downloads": -1,
      "filename": "enchaintesdk-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b20c71eb570eaccedac8a4d40ab01725",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 40341,
      "upload_time": "2021-06-21T14:36:07",
      "upload_time_iso_8601": "2021-06-21T14:36:07.321878Z",
      "url": "https://files.pythonhosted.org/packages/f4/4f/c8b2497ab5d2fd07e28db2ef920fce46f3b7914fb22c5570c671f13bc3c7/enchaintesdk-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f982e3ccb06bf9aa3c2f2e9df96fcca10ce92c76cc7a4b714d5af8cd89bd3432",
        "md5": "f5dd402fb67934da838f21573ec7c04a",
        "sha256": "1985a35bfdfe79adb39298b8fc4b56af319803e63f20b53ac079d9bd1587a62e"
      },
      "downloads": -1,
      "filename": "enchaintesdk-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f5dd402fb67934da838f21573ec7c04a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 24572,
      "upload_time": "2021-06-21T14:36:08",
      "upload_time_iso_8601": "2021-06-21T14:36:08.924579Z",
      "url": "https://files.pythonhosted.org/packages/f9/82/e3ccb06bf9aa3c2f2e9df96fcca10ce92c76cc7a4b714d5af8cd89bd3432/enchaintesdk-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}