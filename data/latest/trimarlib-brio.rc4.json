{
  "info": {
    "author": "TRIMAR Developer",
    "author_email": "developer@trimar.com.pl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Embedded Systems"
    ],
    "description": "##  trimarlib-brio\n\n**Basic Remote Input/Output** - Python application\n\n###  Getting started\n\nThese instructions will get you a copy of the project on your local machine for development and testing purposes. \nSee [Deployment](#deployment) for notes on how to deploy the project on a live system.\n\n####  Prerequisites\n\nThe build process requires some basic development tools:\n\n* `make` - GNU Make program, either for *nix or Windows system, used to execute build and test targets\n* `git` - used not only to clone the repository, but also in auto-versioning (see [Versioning](#versioning))\n* `python3`\n\nTwo standard Python packages are used for build and installation steps:\n\n* `setuptools`\n* `wheel`\n\nThe application depends on the following libraries:\n\n - `trimarlib-sysfsgpio`\n - `trimarlib-newland`\n - `json-rpc`\n\nThese dependencies are defined in the `setup.py` installation script and therefore should be\nautomatically satisfied by `pip`.\n\n####  Building and releasing\n\nInvoking `make all` (default target) prepares archives for distribution. It is done in two steps:\n\n1. query Git repository for tags (`git describe` command) to determine current version and generate \n`version.py` file,\n2. invoke Python interpreter passing `setup.py` script to prepare source and wheel distributions.\n\nThe Python interpreter invoked by the `Makefile` defaults to `python` - it is possible to override it \npassing a `PYTHON` variable to the command, e.g. `make all PYTHON=python3`.\n\nThe release process is automated and based on GitLab CI/CD environment - each commit triggers a build job\nwhich attempts to make and install built packages. If the commit is tagged, the built wheel distribution\nis passed to the deployment stage and the runner attempts to upload the package to the repository \nspecified in project settings.\n\n###  Deployment\n\nInstallation via `pip` (i.e. `pip install trimarlib-brio`) is the recommended method of deployment.\n\nAfter the package has been installed it is recommended to perform additional steps:\n\n1. Install `gpio-exporter.service` and `gpio.rules` - see\n[`sysfsgpiolib` project](https://dsl2.trimar.org/pythons-ll/sysfsgpiolib) for more information;\n2. Install `brio.service` and `brio.ini` configuration file.\n\nThe second step is performed using the entry points exposed by the package:\n\n* `brio-install-service` - copies the predefined service file to `/etc/systemd/system/brio.service`, reloads\n`systemd` daemons and enables the service. Run `brio-install-service -h` for more information;\n* `brio-install-configuration` - copies the default configuration file to the default location.\nRun `brio-install-configuration -h` for more information.\n* `brio-install` - performs the above steps in one go. Run `brio-install -h` for more information.\n\nThe application is started using another entry point - `brio-app`. Run `brio-app -h` for more information.\n\n###  Versioning\n\nThe project is versioned using a simple pattern based on repository tagging feature. See [Makefile](Makefile)\nfor implementation details, for versions available see \n[tags on this repository](https://dsl2.trimar.org/pythons-ll/brio/tags).\n\n###  Usage\n\nSee docstrings for API documentation.\n\nExample of using the server in a custom application:\n\n```python\nfrom brio import Server\nimport time\n\n\nserver = Server()\nserver.configure()\nserver.start()\ntime.sleep(10)\nserver.stop()\n```\n\nThe application is run using the `brio-app` entry point, see [Deployment](#deployment) for more information. \n\n###  License\n\nThis software is licensed under the MIT License - see [LICENSE](LICENSE).\n\n--------\n\n\n###  Related documents\n\nThis software conforms to the JSON RPC protocol, see [website](https://www.jsonrpc.org/) for more information.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://dsl2.trimar.org/pythons-ll/brio",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "trimarlib-brio",
    "package_url": "https://pypi.org/project/trimarlib-brio/",
    "platform": "",
    "project_url": "https://pypi.org/project/trimarlib-brio/",
    "project_urls": {
      "Homepage": "https://dsl2.trimar.org/pythons-ll/brio"
    },
    "release_url": "https://pypi.org/project/trimarlib-brio/0.1.0rc2/",
    "requires_dist": [
      "trimarlib-sysfsgpio",
      "trimarlib-newland",
      "json-rpc"
    ],
    "requires_python": "",
    "summary": "Basic Remote IO Application",
    "version": "0.1.0rc2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4319924,
  "releases": {
    "0.1.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "296fc1b65d7a93f3d414908470b8d5297ed000d1c1b80e27f3f53589fb09f5c6",
          "md5": "5fcc50b05cce8aac9d641a4baeadc0fd",
          "sha256": "b49f8bb9d3827cd78b2d3c27de7ee31ad6e95927c342d122754bcfb3637b2a96"
        },
        "downloads": -1,
        "filename": "trimarlib_brio-0.1.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5fcc50b05cce8aac9d641a4baeadc0fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12538,
        "upload_time": "2018-09-27T12:25:03",
        "upload_time_iso_8601": "2018-09-27T12:25:03.532557Z",
        "url": "https://files.pythonhosted.org/packages/29/6f/c1b65d7a93f3d414908470b8d5297ed000d1c1b80e27f3f53589fb09f5c6/trimarlib_brio-0.1.0.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23b6a1077357f9ba05b2ec4f19dda2e2e14dcd6f0859e6f349a71f012477b91b",
          "md5": "524917bc8d4ce22ab7f7135642b73785",
          "sha256": "d6a40de109af9955aa5a744ce7457e145ca121c37a19d828cfd92b4cae9d5a3c"
        },
        "downloads": -1,
        "filename": "trimarlib_brio-0.1.0.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "524917bc8d4ce22ab7f7135642b73785",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12617,
        "upload_time": "2018-09-27T13:36:33",
        "upload_time_iso_8601": "2018-09-27T13:36:33.437980Z",
        "url": "https://files.pythonhosted.org/packages/23/b6/a1077357f9ba05b2ec4f19dda2e2e14dcd6f0859e6f349a71f012477b91b/trimarlib_brio-0.1.0.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55967d2ae419578828e5343a0ec7e404ad9fd2722d7687a8569714b3b05923cf",
          "md5": "7e720da382748d95ca089a06b779ab1f",
          "sha256": "9ce651f41ac3a7acc0e1252925754b10897048e91af61b53f3697e49340ea0b4"
        },
        "downloads": -1,
        "filename": "trimarlib_brio-0.1.0rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e720da382748d95ca089a06b779ab1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12617,
        "upload_time": "2018-09-28T08:58:54",
        "upload_time_iso_8601": "2018-09-28T08:58:54.917320Z",
        "url": "https://files.pythonhosted.org/packages/55/96/7d2ae419578828e5343a0ec7e404ad9fd2722d7687a8569714b3b05923cf/trimarlib_brio-0.1.0rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5f2787fe3af1edbca6da79b4d7d60cc9f959fc532b2043e7625fc98f1587da6",
          "md5": "8558170d3251d21352eb0bee517f932d",
          "sha256": "44c5a9d48fca38c5ae39044196363b2d41b2a75e2426403fb4ec76e1802c3f1f"
        },
        "downloads": -1,
        "filename": "trimarlib_brio-0.1.0rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8558170d3251d21352eb0bee517f932d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12638,
        "upload_time": "2018-09-28T13:01:19",
        "upload_time_iso_8601": "2018-09-28T13:01:19.274010Z",
        "url": "https://files.pythonhosted.org/packages/a5/f2/787fe3af1edbca6da79b4d7d60cc9f959fc532b2043e7625fc98f1587da6/trimarlib_brio-0.1.0rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5f2787fe3af1edbca6da79b4d7d60cc9f959fc532b2043e7625fc98f1587da6",
        "md5": "8558170d3251d21352eb0bee517f932d",
        "sha256": "44c5a9d48fca38c5ae39044196363b2d41b2a75e2426403fb4ec76e1802c3f1f"
      },
      "downloads": -1,
      "filename": "trimarlib_brio-0.1.0rc2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8558170d3251d21352eb0bee517f932d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12638,
      "upload_time": "2018-09-28T13:01:19",
      "upload_time_iso_8601": "2018-09-28T13:01:19.274010Z",
      "url": "https://files.pythonhosted.org/packages/a5/f2/787fe3af1edbca6da79b4d7d60cc9f959fc532b2043e7625fc98f1587da6/trimarlib_brio-0.1.0rc2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}