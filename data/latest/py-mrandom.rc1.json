{
  "info": {
    "author": "Sidharth Mudgil",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# mrandom\r\n> This package provides a random number generator.\r\n> It is based on the [Mersenne Twister](http://en.wikipedia.org/wiki/Mersenne_Twister) algorithm.\r\n> It includes both 32 and 64 bit versions of the algorithm.\r\n> The generator has large period of 2^19937-1 \r\n\r\n\r\n\r\n\r\n**Features**\r\n* Can generate random numbers\r\n* Can return a choice from a list\r\n* Can shuffle a list\r\n* Can flip a coin\r\n* Can roll a die\r\n* Can shuffle a deck\r\n---\r\n\r\n**Installing the package**\r\n\r\n``` bash\r\npip install mrandom\r\n```\r\n\r\n**Importing the module**\r\n\r\n``` python\r\n>>> import mrandom\r\n\r\n# 1 = 32 bit, 2 = 64 bit algorithm\r\n>>> random = mrandom.RandomGenerator(s)\r\n```\r\n\r\n# Examples\r\n\r\n**Return a random number between 0 and 1**\r\n``` python\r\n>>> print(random.rand())\r\n0.9888888888888889\r\n```\r\n\r\n**Return a random number between a and b (inclusive)**\r\n``` python\r\n>>> print(random.randint(a, b))\r\n1\r\n```\r\n\r\n**Return a random number between a and b (exclusive)**\r\n``` python\r\n>>> print(random.randrange(a, b))\r\n12\r\n```\r\n\r\n**Return k random numbers between a and b (inclusive)**\r\n``` python\r\n>>> print(random.sample(a, b, k))\r\n[1, 2, 3, 4, 5]\r\n```\r\n\r\n**Return a random number from a list l**\r\n``` python\r\n>>> print(random.choice(l))\r\n21\r\n```\r\n\r\n**Return shuffled list l**\r\n``` python\r\n>>> print(random.shuffle(l))\r\n[1, 3, 5, 4, 2]\r\n```\r\n\r\n**Return sample of flipping k coins n times**\r\n``` python\r\n>>> print(random.flip_coin(n, k))\r\n[1, 0, 0, 1, 0]\r\n```\r\n\r\n**Return sample of rolling k dices n times**\r\n``` python\r\n>>> print(random.roll_dice(n, k))\r\n[[1, 4], [1, 1]]\r\n```\r\n\r\n**Return sample of picking a card from a deck of 52 cards n times**\r\n``` python\r\n>>> print(random.shuffle_deck(n))\r\n[\"Ace of Spades\", \"Ace of Hearts\", \"Ace of Clubs\", \"Ace of Diamonds\", \"Ace of Clubs\"]\r\n```\r\n---\r\n\r\n**Classes**\r\n`mrandom.RandomGenerator` - Random number generator\r\n\r\nMethods:\r\n\r\n| Methods | Description |\r\n| --- | --- |\r\n| `rand()` | Return a random number between 0 and 1 |\r\n| `randint(a, b)` | Return a random number between a and b (inclusive) |\r\n| `randrange(a, b)` | Return a random number between a and b (exclusive) |\r\n| `sample(a, b, k)` | Return k random numbers between a and b (inclusive) |\r\n| `choice(l)` | Return a random number from a list l |\r\n| `shuffle(l)` | Return shuffled list l |\r\n| `flip_coin(n, k)` | Return sample of flipping k coins n times |\r\n| `roll_dice(n, k)` | Return sample of rolling k dices n times |\r\n| `shuffle_deck(n)` | Return sample of picking a card from a deck of 52 cards n times |\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-mrandom",
    "package_url": "https://pypi.org/project/py-mrandom/",
    "platform": null,
    "project_url": "https://pypi.org/project/py-mrandom/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/py-mrandom/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "mrandom is a library for generating random numbers.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14522805,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70a01b713c5add2f9c4f8b66448dc23710a2ee1f1268045e57225e6f9dbcbccb",
          "md5": "37ac48b6f0517328898a58468a62a0e9",
          "sha256": "a05fae4bdbc50986b342c509f37ca39d058644bffd1cad7345c0de5dd32a73e2"
        },
        "downloads": -1,
        "filename": "py-mrandom-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "37ac48b6f0517328898a58468a62a0e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5661,
        "upload_time": "2022-07-23T07:39:22",
        "upload_time_iso_8601": "2022-07-23T07:39:22.448074Z",
        "url": "https://files.pythonhosted.org/packages/70/a0/1b713c5add2f9c4f8b66448dc23710a2ee1f1268045e57225e6f9dbcbccb/py-mrandom-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70a01b713c5add2f9c4f8b66448dc23710a2ee1f1268045e57225e6f9dbcbccb",
        "md5": "37ac48b6f0517328898a58468a62a0e9",
        "sha256": "a05fae4bdbc50986b342c509f37ca39d058644bffd1cad7345c0de5dd32a73e2"
      },
      "downloads": -1,
      "filename": "py-mrandom-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "37ac48b6f0517328898a58468a62a0e9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5661,
      "upload_time": "2022-07-23T07:39:22",
      "upload_time_iso_8601": "2022-07-23T07:39:22.448074Z",
      "url": "https://files.pythonhosted.org/packages/70/a0/1b713c5add2f9c4f8b66448dc23710a2ee1f1268045e57225e6f9dbcbccb/py-mrandom-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}