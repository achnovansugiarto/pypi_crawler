{
  "info": {
    "author": "Maxwell Weinzierl",
    "author_email": "maxwell.weinzierl@utdallas.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Education",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Education"
    ],
    "description": "<div align=\"center\">\r\n\r\n# eLearning Grading\r\n\r\n**Python utilities to help Teaching Assistants grade assignments with eLearning**\r\n\r\n\r\n______________________________________________________________________\r\n\r\n\r\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/elearning-grading)](https://pypi.org/project/elearning-grading/)\r\n[![PyPI Status](https://badge.fury.io/py/elearning-grading.svg)](https://badge.fury.io/py/elearning-grading)\r\n[![license](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/Supermaxman/elearning-grading/blob/master/LICENSE.txt)\r\n\r\n</div>\r\n\r\n______________________________________________________________________\r\n\r\n## eLearning Grading\r\n\r\nThis repository contains python scripts and tools to help Teaching Assistants\r\nusing eLearning's assignment download feature to organize and grade written, typed, and programming assignments.\r\n\r\n## How To Use\r\n### Installing from pip\r\n```bash\r\npip install elearning-grading\r\n```\r\n\r\n### Installing from GitHub\r\n```bash\r\ngit clone https://github.com/Supermaxman/elearning-grading\r\ncd elearning-grading\r\npip install -e .\r\n```\r\n\r\n### Organizing code and reports\r\neLearning provides the `Assignment File Download` feature for Teaching Assistants to download assignment files \r\nfor the entire class. \r\nSadly, this feature makes grading assignments extremely tedious, \r\nas the .zip file provided usually looks like this (simulated):\r\n<div align=\"left\">\r\n    <img src=\"https://github.com/Supermaxman/elearning-grading\\blob/master\\docs/images/ex1.PNG?raw=true\" width=\"400px\">\r\n</div>\r\n\r\nWith each student submission zip file populated with user-submitted content:\r\n<div align=\"left\">\r\n    <img src=\"https://github.com/Supermaxman/elearning-grading\\blob/master\\docs/images/ex2.PNG?raw=true\" width=\"400px\">\r\n</div>\r\n\r\nThese archives could be .zip, .tar, .tar.gz, .rar, or more file types, and there could\r\nbe multiple files for each student in the eLearning zip file.\r\n`elearning-grading` helps manage this chaos by organizing files and folders\r\nbased on student netids, and splitting code and pdf reports.\r\n\r\nThe `elg-org` tool works as follows:\r\n\r\n```bash\r\nelg-org --help\r\nusage: elg-org [-h] [-i INPUT_PATH] [-c CODE_PATH] [-r REPORTS_PATH]\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -i INPUT_PATH, --input_path INPUT_PATH\r\n                        filepath to .zip file from eLearning.\r\n  -c CODE_PATH, --code_path CODE_PATH\r\n                        output folder for code, organized by netid.\r\n  -r REPORTS_PATH, --reports_path REPORTS_PATH\r\n                        output folder for pdf reports, organized by netid.\r\n```\r\n\r\nFor example, the above simulated eLearning submission zip file is organized like so:\r\n\r\n```bash\r\nelg-org -i tests/gradebook_7366-LRWYV-CO-3865-SEC000_Test207_2022-02-24-11-32-57.zip\r\n```\r\nPDF or DOCX reports are organized into the `reports` folder, while \r\neverything else is considered potential `code` and is moved into the \r\n`code` folder.\r\n<div align=\"left\">\r\n    <img src=\"https://github.com/Supermaxman/elearning-grading\\blob/master\\docs/images/ex3.PNG?raw=true\" width=\"300px\">\r\n</div>\r\n\r\nEach folder is organized by student netid as follows:\r\n<div align=\"left\">\r\n    <img src=\"https://github.com/Supermaxman/elearning-grading\\blob/master\\docs/images/ex4.PNG?raw=true\" width=\"300px\">\r\n</div>\r\n\r\nWhere reports are included in `reports` folder for each netid:\r\n<div align=\"left\">\r\n    <img src=\"https://github.com/Supermaxman/elearning-grading\\blob/master\\docs/images/ex5.PNG?raw=true\" width=\"300px\">\r\n</div>\r\n\r\nAnd code is included in the `code` folder for each netid:\r\n<div align=\"left\">\r\n    <img src=\"https://github.com/Supermaxman/elearning-grading\\blob/master\\docs/images/ex6.PNG?raw=true\" width=\"300px\">\r\n</div>\r\n\r\nThis organization structure makes grading much easier, as everything \r\nis organized by netid and written reports are clearly marked for \r\ngrading.\r\n\r\n\r\n### Generating simulated eLearning .zip files\r\neLearning's `Assignment File Download` feature provides extremely unpredictable \r\nstudent zip files, as each student can upload whatever they want. \r\n`elearning-grading` provides the `elg-gen` utility, which generates \r\nsynthetic, random files in the unpredictable format of eLearning.\r\n`elg-gen` ensures that utilities within this library are \r\ntested against unexpected student file formats.\r\n\r\n`el-gen` documentation:\r\n```bash\r\nelg-gen --help\r\nusage: elg-gen [-h] [-o OUTPUT_PATH] [-n NUM_STUDENTS] [-s SEED] [-t TYPE]\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -o OUTPUT_PATH, --output_path OUTPUT_PATH\r\n                        filepath to create test .zip file from eLearning.\r\n  -n NUM_STUDENTS, --num_students NUM_STUDENTS\r\n                        Number of students to put in file.\r\n  -s SEED, --seed SEED  Seed of RNG.\r\n  -t TYPE, --type TYPE  Type of data to generate. Options: pdf: only generates\r\n                        pdf files. pdf-zip: only generates pdf files inside zip\r\n                        files.pdf-code-zip: generates pdf file and code files\r\n                        inside zip files.pdf-code-full: generates pdf file and\r\n                        code files inside various compressed files.\r\n```\r\n`el-gen` usage:\r\n```bash\r\nelg-gen -n 5 \\\r\n  --output_path tests \\\r\n  --type pdf-code-full \\\r\n  --seed 1\r\n```\r\n\r\nThis will generate an eLearning `Assignment File Download` file format filled with \r\nrandom data, such as the following:\r\n`gradebook_7366-LRWYV-CO-3865-SEC000_Test207_2022-02-24-11-32-57.zip`\r\n<div align=\"left\">\r\n    <img src=\"https://github.com/Supermaxman/elearning-grading\\blob/master\\docs/images/ex1.PNG?raw=true\" width=\"300px\">\r\n</div>\r\n\r\nWith each student submission zip file populated with random content:\r\n<div align=\"left\">\r\n    <img src=\"https://github.com/Supermaxman/elearning-grading\\blob/master\\docs/images/ex2.PNG?raw=true\" width=\"300px\">\r\n</div>\r\n\r\n### Identifying project members\r\n```bash\r\nTODO\r\n```\r\n\r\n### Organizing project code and reports\r\n```bash\r\nTODO\r\n```\r\n\r\n\r\n## About Me\r\nMy name is [Maxwell Weinzierl](https://personal.utdallas.edu/~maxwell.weinzierl/), and I am a\r\nNatural Language Processing researcher at the Human Technology Research Institute (HLTRI) at the\r\nUniversity of Texas at Dallas. I am currently working on my PhD, which focuses on COVID-19 and\r\nHPV vaccine misinformation, trust, and more on Social Media platforms such as Twitter. I am \r\nalso a Graduate Teaching Assistant for the AI, NLP, and IR classes of Dr. Harabagiu.\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Supermaxman/elearning-grading",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Supermaxman/elearning-grading",
    "keywords": "grading,elearning,education,teaching",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "elearning-grading",
    "package_url": "https://pypi.org/project/elearning-grading/",
    "platform": null,
    "project_url": "https://pypi.org/project/elearning-grading/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Supermaxman/elearning-grading/issues",
      "Download": "https://github.com/Supermaxman/elearning-grading",
      "Homepage": "https://github.com/Supermaxman/elearning-grading",
      "Source Code": "https://github.com/Supermaxman/elearning-grading"
    },
    "release_url": "https://pypi.org/project/elearning-grading/0.2.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python utilities to help Teaching Assistants grade assignments with eLearning",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13184442,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a46e8d6215aa3595ef73cb5ae92a787d4662ef55b792cee324c664b2d71551df",
          "md5": "ee3ef7a175e3a0c2a9e4c2f036ba02e3",
          "sha256": "b7def2522e70eccc6def2fe86606b29f530c1b16c2061424004e06d96991aa56"
        },
        "downloads": -1,
        "filename": "elearning-grading-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ee3ef7a175e3a0c2a9e4c2f036ba02e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12531,
        "upload_time": "2022-02-24T02:14:15",
        "upload_time_iso_8601": "2022-02-24T02:14:15.424278Z",
        "url": "https://files.pythonhosted.org/packages/a4/6e/8d6215aa3595ef73cb5ae92a787d4662ef55b792cee324c664b2d71551df/elearning-grading-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9280399288a80f3236343c989b001e16cc2ec84e2b3765ce2e27d68dcb5153d",
          "md5": "c3e77ea34fd0cad6c66b8713accaf8e8",
          "sha256": "7d8425d4dd5ce18e70bfe166b0fa4c48d5d1e5d978e7ec6cf61130cc2dc23739"
        },
        "downloads": -1,
        "filename": "elearning-grading-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c3e77ea34fd0cad6c66b8713accaf8e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14093,
        "upload_time": "2022-02-24T17:11:15",
        "upload_time_iso_8601": "2022-02-24T17:11:15.398233Z",
        "url": "https://files.pythonhosted.org/packages/e9/28/0399288a80f3236343c989b001e16cc2ec84e2b3765ce2e27d68dcb5153d/elearning-grading-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d583977980315103bfa9d04b6a688c8af3d33cdbabfd1f4e36189bd1f071791",
          "md5": "d8cf636db24aa8ff94af13ca7f757ac4",
          "sha256": "09cd875c2d4772f9bc356c4afb1e353dffbb3292bbdc930ee5a6183cbe1191a0"
        },
        "downloads": -1,
        "filename": "elearning-grading-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d8cf636db24aa8ff94af13ca7f757ac4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17109,
        "upload_time": "2022-02-24T18:08:56",
        "upload_time_iso_8601": "2022-02-24T18:08:56.603938Z",
        "url": "https://files.pythonhosted.org/packages/3d/58/3977980315103bfa9d04b6a688c8af3d33cdbabfd1f4e36189bd1f071791/elearning-grading-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54d5fa49c692e51cb753733755e2304988c64662b8e5fb39f7e37510f5071149",
          "md5": "b56db55b34d18623d15ab0c532c5fb6f",
          "sha256": "065853c216c8cd5fbf5d55f1bea2a24eaf80352b87ef477ed70e7c434c1c3758"
        },
        "downloads": -1,
        "filename": "elearning-grading-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b56db55b34d18623d15ab0c532c5fb6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17898,
        "upload_time": "2022-03-15T16:45:00",
        "upload_time_iso_8601": "2022-03-15T16:45:00.911151Z",
        "url": "https://files.pythonhosted.org/packages/54/d5/fa49c692e51cb753733755e2304988c64662b8e5fb39f7e37510f5071149/elearning-grading-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54d5fa49c692e51cb753733755e2304988c64662b8e5fb39f7e37510f5071149",
        "md5": "b56db55b34d18623d15ab0c532c5fb6f",
        "sha256": "065853c216c8cd5fbf5d55f1bea2a24eaf80352b87ef477ed70e7c434c1c3758"
      },
      "downloads": -1,
      "filename": "elearning-grading-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b56db55b34d18623d15ab0c532c5fb6f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17898,
      "upload_time": "2022-03-15T16:45:00",
      "upload_time_iso_8601": "2022-03-15T16:45:00.911151Z",
      "url": "https://files.pythonhosted.org/packages/54/d5/fa49c692e51cb753733755e2304988c64662b8e5fb39f7e37510f5071149/elearning-grading-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}