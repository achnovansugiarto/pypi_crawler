{
  "info": {
    "author": "CDFMLR",
    "author_email": "cdfmlr@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Code Generators",
      "Topic :: Utilities"
    ],
    "description": "# PyFlowchart\n\nPyFlowchart is a package to:\n\n- write flowcharts in the Python language,\n- translate Python source codes into flowcharts.\n\nPyFlowchart produces flowcharts in [flowchart.js](https://github.com/adrai/flowchart.js) flowchart DSL, a widely used flow chart textual representation. It's easy to convert these flowcharts text into a picture via [flowchart.js.org](http://flowchart.js.org), [francoislaberge/diagrams](https://github.com/francoislaberge/diagrams/#flowchart), or some markdown editors. \n\n## Get PyFlowchart\n\n```sh\n$ pip3 install pyflowchart\n```\n\n## Quick Start\n\nTo flowchartlize your python codes in `example.py`，run:\n\n```sh\n$ python3 -m pyflowchart example.py\n```\n\nPyFlowchart will output the generated flowchart.js DSL. Go to http://flowchart.js.org or use editors like [Typora](https://support.typora.io/Draw-Diagrams-With-Markdown/#flowcharts) to turn the output code into a rendered diagram.\n\nTo specify a function (or a method in a class) to flowchartlize:\n\n```sh\n$ python3 -m pyflowchart example.py -f function_name\n# or\n$ python3 -m pyflowchart example.py -f ClassName.method_name\n```\n\n🎉 Now you are ready to enjoy the flowchartlization.\n\nKeep reading this document to learn more usages.\n\n## Flowchart in Python\n\nPyFlowchart allows you to write a flowchart in Python which could be translated into the [flowchart.js](https://github.com/adrai/flowchart.js) DSL automatically.\n\nPyFlowchart supports [flowchart.js](https://github.com/adrai/flowchart.js#node-types) node types:\n\n- StartNode\n- OperationNode\n- ConditionNode\n- InputOutputNode\n- SubroutineNode\n- EndNode\n\nNodes can be connected by `connect()` method (`connect_{yes|no}` for ConditionNode). An optional second parameter to `connect()` is used to specify the connect_direction.\n\nGet a Flowchart with your start node and call its `flowchart()` method to generate flowchart.js flowchart DSL：\n\n```python\nfrom pyflowchart import *\n\nst = StartNode('a_pyflow_test')\nop = OperationNode('do something')\ncond = ConditionNode('Yes or No?')\nio = InputOutputNode(InputOutputNode.OUTPUT, 'something...')\nsub = SubroutineNode('A Subroutine')\ne = EndNode('a_pyflow_test')\n\nst.connect(op)\nop.connect(cond)\ncond.connect_yes(io)\ncond.connect_no(sub)\nsub.connect(op, \"right\")  # sub->op line starts from the right of sub\nio.connect(e)\n \nfc = Flowchart(st)\nprint(fc.flowchart())\n```\n\nOutput:\n\n```\nst0=>start: start a_pyflow_test\nop1=>operation: do something\ncond2=>condition: Yes or No?\nio3=>inputoutput: output: something...\ne5=>end: end a_pyflow_test\nsub4=>subroutine: A Subroutine\n\nst0->op1\nop1->cond2\ncond2->\ncond2->\ncond2(yes)->io3\nio3->e5\ncond2(no)->sub4\nsub4(right)->op1\n```\n\nThen you can visit http://flowchart.js.org and translate the generated textual representation into SVG flow chart diagrams:\n\n![screenshot on flowchart.js page](docs/imgs/flowchart-js-org.png)\n\nP.S. Many Markdown editors (for example, Typora) support this flowchart syntax, too (reference: [Typora doc about flowchart](https://support.typora.io/Draw-Diagrams-With-Markdown/#flowcharts)). And if you prefer CLI, see [francoislaberge/diagrams](https://github.com/francoislaberge/diagrams/#flowchart).\n\n### Set Params to Nodes\n\nSince v0.2.0, we support a `Node.set_param(key, value)` method to generate flowchart like this:\n\n```\nelement(param1=value1,param2=value2)=>start: Start\n```\n\n(See also [adrai/flowchart.js#node-specific-specifiers-by-type](https://github.com/adrai/flowchart.js#node-specific-specifiers-by-type))\n\nAnd for convenience, there are grammar sugars to set param `align-next=no` for ConditionNodes:\n\n```python\ncond = ConditionNode(\"a cond node\")\ncond.no_align_next()\n# or do this at __init__:\ncond = ConditionNode(\"a cond node\", align_next=False)\n```\n\nThis usually works with a connect_direction customization:\n\n```python\ncond.connect_yes(op, \"right\")\n```\n\nThe generated flowchart will look like:\n\n```\ncond(align-next=no)=>condition: Yes or No?\n...\n\ncond(yes,right)->op\n```\n\n## Python to Flowchart\n\nPyFlowchart can also translate your Python Codes into Flowcharts.\n\nFor example, you got a `simple.py`:\n\n```python\ndef foo(a, b):\n    if a:\n        print(\"a\")\n    else:\n        for i in range(3):\n            print(\"b\")\n    return a + b\n```\n\nRun PyFlowchart in CLI to generate flowchart code:\n\n```sh\n$ python3 -m pyflowchart simple.py\n\n# output flowchart code.\n```\n\nOr, in Python\n\n```python\n>>> from pyflowchart import Flowchart\n>>> with open('simple.py') as f:\n...     code = f.read()\n... \n>>> fc = Flowchart.from_code(code)\n>>> print(fc.flowchart())\n\n# output flowchart code.\n```\n\n![simple.py to flowchart](docs/imgs/py-to-flowchart.png)\n\n## Advanced Usages\n\nAs mentioned above, we use `Flowchart.from_code` to translate Python codes into Flowcharts. The `from_code` is defined as:\n\n```python\nFlowchart.from_code(code, field=\"\", inner=True, simplify=True, conds_align=False)\n```\n\nPyFlowchart CLI is a 1:1 interface for this function:\n\n```sh\npython3 -m pyflowchart [-f FIELD] [-i] [--no-simplify] [--conds-align] code_file\n```\n\nLet's talk about those three args:\n\n- `field`: str: Specify a field of code to generate a flowchart\n- `inner`: bool:  `True` to parse the body of field; whereas `False` to parse the body as a single object.\n- `simplify`: bool: for If & Loop statements: simplify the one-line-body or not\n- `conds_align`: bool: improve the flowchart of *consecutive If statements* converted from python code. (Beta)\n\n### field\n\nthe `field` is the path to a field (i.e. a function) you want to draw a flowchart. \n\n```python\n# example.py\nprint(\"start\")\n\ndef foo():\n    foo = \"foo\"\n\nclass Bar():\n    def buzz(self, f):\n        def g(self):\n            print(\"g\")\n            f(self)\n        return g(self)\n\nBar().buzz(foo)\nprint(\"end\")\n```\n\nFor `example.py` above, available paths are:\n\n    - \"\" (means the whole code)\n    - \"foo\"\n    - \"Bar.buzz\"\n    - \"Bar.buzz.g\"\n\nTo generate a flowchart of `Bar.buzz.g`：\n\n```python\n# Python\nfrom pyflowchart import Flowchart\nwith open('example.py') as f:\n\tcode = f.read()\nfc = Flowchart.from_code(code, field='Bar.buzz.g', inner=False)\nprint(fc.flowchart())\n```\n\nOr:\n\n```sh\n# CLI\npython3 -m pyflowchart example.py -f Bar.buzz.g\n```\n\nOutput result:\n\n![specify a field](docs/imgs/field.png)\n\n### inner\n\n`inner` controls parser's behaving. Techly, `inner=True` means parsing `field.body`, while `inner=False` parses `[field]`. So, if  `inner=True`, pyflowchart will look into the field, otherwise, it takes the `field` as a node.\n\n![pyflowchart_inner](docs/imgs/inner.png)\n\nFor CLI,  adding an argument `-i`  means `inner=True`, else `inner=False`.\n\n### simplify\n\nsimplify is for If & Loop statements: simplify the one-line-body.\n\nFor example:\n\n```python\n# example_simplify.py\na = 1\nif a == 1:\n    print(a)\nwhile a < 4:\n    a = a + 1\n```\n\n- Default: `simplify=True`:\n\n```python\nflowchart = Flowchart.from_code(example_simplify_py, field=\"\", inner=True)\nprint(flowchart.flowchart())\n# SH $ python3 -m pyflowchart example_simplify.py \n```\n\n![simplify result](docs/imgs/simplify.png)\n\n- `simplify=False`:\n\n```python\nflowchart = Flowchart.from_code(example_simplify_py, field=\"\", inner=True, simplify=False)\nprint(flowchart.flowchart())\n# SH $ python3 -m pyflowchart --no-simplify example_simplify.py \n```\n\n![no simplify result](docs/imgs/no-simplify.png)\n\n### conds-align (Beta)\n\nImprove the flowchart of *consecutive If statements* converted from python code with the new feature of  `v0.2.0`.\n\n```python\n# example-conds-align.py\nif cond1:\n\top1\nif cond2:\n\top2\nif cond3:\n\top3\nop_end\n```\n\n![conds-align-result](docs/imgs/conds-align.png)\n\n## Beautify Flowcharts\n\nSometimes, the generated flowchart is awful. In those cases, you are encouraged to modify the generated flowchart code by yourself OR consider making your python source code at bottom more clear if it's exceedingly complex.\n\n## TODOs\n\n- [ ] Directly generate flowchart SVG/HTML:\n\n```sh\n$ pyflowchart example.py -o flowchart.svg\n```\n\nDepends on `node.js` and `flowchart.js`.\n\n- [ ] PyFlowchart GUI\n\nWell, I guess a **GUI** for PyFlowchart may be remarkable. Pasting your code into it, the flowchart DSL will be generated just in time, and the flowchart will be shown aside.\n\n- [ ] ~~The Chinese README your buddies waiting for!~~ 希望有同学帮助贡献个中文 README 呀。\n- [ ] Tests automation.\n\n----\n\nSadly, I am too busy (pronounced as `[ˈlеizi]`——lazy) to code these ideas. Please [submit an issue](https://github.com/cdfmlr/pyflowchart/issues/new) to push me on. Or, PR to make it by yourself. I cannot wait to appreciate your great contribution!\n\n## References\n\n- Inspired by [Vatsha/code_to_flowchart](https://github.com/Vatsha/code_to_flowchart)\n- Based on [adrai/flowchart.js](http://flowchart.js.org), [python ast](https://docs.python.org/3/library/ast.html), [simonpercivall/astunparse](https://github.com/simonpercivall/astunparse)\n- [A blog about this project](https://clownote.github.io/2020/10/24/blog/PyFlowchart/)\n\n## License\n\nCopyright 2020-2022 CDFMLR. All rights reserved.\n\nLicensed under the MIT License.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cdfmlr/pyflowchart",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyflowchart",
    "package_url": "https://pypi.org/project/pyflowchart/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyflowchart/",
    "project_urls": {
      "Homepage": "https://github.com/cdfmlr/pyflowchart"
    },
    "release_url": "https://pypi.org/project/pyflowchart/0.2.3/",
    "requires_dist": [
      "astunparse",
      "chardet"
    ],
    "requires_python": ">=3.6",
    "summary": "Python codes to Flowcharts.",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12881180,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "468da41f80848d9de98b524fe69730b47c7842dca6f5d6580cc798f08e92b481",
          "md5": "bc987ec3e287a383c307e09dd0fe3810",
          "sha256": "1807b69c6938651d021abd3703eba3c53cb68726bd55112da7bd85ba1b5a48d2"
        },
        "downloads": -1,
        "filename": "pyflowchart-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bc987ec3e287a383c307e09dd0fe3810",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10302,
        "upload_time": "2020-10-23T12:14:32",
        "upload_time_iso_8601": "2020-10-23T12:14:32.080924Z",
        "url": "https://files.pythonhosted.org/packages/46/8d/a41f80848d9de98b524fe69730b47c7842dca6f5d6580cc798f08e92b481/pyflowchart-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39492e5a53884f59398a7617249d727a35ee99a8246fd9b02bdadb3149f299e9",
          "md5": "2ad9f9e6a4cec1484f4655696c94c33c",
          "sha256": "f07f40c16e9d86805bd661ce6d22e5858a46e91c3e4f5ae002a5f6ea1f5cf860"
        },
        "downloads": -1,
        "filename": "pyflowchart-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2ad9f9e6a4cec1484f4655696c94c33c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10483,
        "upload_time": "2020-10-30T14:12:08",
        "upload_time_iso_8601": "2020-10-30T14:12:08.629637Z",
        "url": "https://files.pythonhosted.org/packages/39/49/2e5a53884f59398a7617249d727a35ee99a8246fd9b02bdadb3149f299e9/pyflowchart-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fb1dab4786fa46b70d04547e88d54ef8a5335380aa831ab03ecff04842cb89a",
          "md5": "99fb8611f77e66168be472cf503cb9f3",
          "sha256": "353901339669ed92b44236c3bbc076fc82ef8162b1d0cf7521134c19340e91eb"
        },
        "downloads": -1,
        "filename": "pyflowchart-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "99fb8611f77e66168be472cf503cb9f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12521,
        "upload_time": "2020-12-03T08:31:02",
        "upload_time_iso_8601": "2020-12-03T08:31:02.613312Z",
        "url": "https://files.pythonhosted.org/packages/7f/b1/dab4786fa46b70d04547e88d54ef8a5335380aa831ab03ecff04842cb89a/pyflowchart-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8f31bf72b6f59487891c32b073692208d51463406202a6da9bc2831a9e18f14",
          "md5": "0dd1991a03c9eb72abe5b5c9b2cc172f",
          "sha256": "c741bc961a910884a19e8c0ed13dc06d62c7ef56458976a0801fa17ff4f65927"
        },
        "downloads": -1,
        "filename": "pyflowchart-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0dd1991a03c9eb72abe5b5c9b2cc172f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15933,
        "upload_time": "2021-01-16T07:42:20",
        "upload_time_iso_8601": "2021-01-16T07:42:20.462354Z",
        "url": "https://files.pythonhosted.org/packages/e8/f3/1bf72b6f59487891c32b073692208d51463406202a6da9bc2831a9e18f14/pyflowchart-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fff35dd2dcde935314bcb3f9420870ff4c0827d49bb5463104603456396d3f91",
          "md5": "17b74effbf11c84e1a24dfa8bbffc91c",
          "sha256": "3217af326f61fa9765b91512aeeb5ccdc988333dbf5391aaa65f45410baba5fb"
        },
        "downloads": -1,
        "filename": "pyflowchart-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "17b74effbf11c84e1a24dfa8bbffc91c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15423,
        "upload_time": "2021-01-16T07:42:21",
        "upload_time_iso_8601": "2021-01-16T07:42:21.441137Z",
        "url": "https://files.pythonhosted.org/packages/ff/f3/5dd2dcde935314bcb3f9420870ff4c0827d49bb5463104603456396d3f91/pyflowchart-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64b665bb0ca47e55bfa09f1246e2cc0994f6e682c2e13344211f2b2ead57e147",
          "md5": "3f7663819529ce7daa3f33b186e46cb7",
          "sha256": "9bd5a2ae5fd8bbf670231c4f1ff40412aa622cf84691f43d72720fba975b764e"
        },
        "downloads": -1,
        "filename": "pyflowchart-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f7663819529ce7daa3f33b186e46cb7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16529,
        "upload_time": "2021-03-07T07:56:10",
        "upload_time_iso_8601": "2021-03-07T07:56:10.644714Z",
        "url": "https://files.pythonhosted.org/packages/64/b6/65bb0ca47e55bfa09f1246e2cc0994f6e682c2e13344211f2b2ead57e147/pyflowchart-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36db40e5b13ce2b6716376aa05b63c3c8f43c2a3cc19f16c4206f9dcbbede113",
          "md5": "9e76ea896a0aa3cf407cbbff7ba5adac",
          "sha256": "ad22173bfe9d98d3c5b5c83e036649ac99a9a102b206511d1753ce5cf051aae1"
        },
        "downloads": -1,
        "filename": "pyflowchart-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9e76ea896a0aa3cf407cbbff7ba5adac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16248,
        "upload_time": "2021-03-07T07:56:11",
        "upload_time_iso_8601": "2021-03-07T07:56:11.681613Z",
        "url": "https://files.pythonhosted.org/packages/36/db/40e5b13ce2b6716376aa05b63c3c8f43c2a3cc19f16c4206f9dcbbede113/pyflowchart-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7b3b7fc4125fb57fb71db06a6ab3b8e2e93b213ee3552720f1b9c377094701d",
          "md5": "9624d3ecf0e064866639cd547d27df0d",
          "sha256": "4de0e6db049462218ae996b285549c6a763eac9b30ab7cb2f38a29462649234d"
        },
        "downloads": -1,
        "filename": "pyflowchart-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9624d3ecf0e064866639cd547d27df0d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16665,
        "upload_time": "2021-07-04T14:23:01",
        "upload_time_iso_8601": "2021-07-04T14:23:01.222440Z",
        "url": "https://files.pythonhosted.org/packages/d7/b3/b7fc4125fb57fb71db06a6ab3b8e2e93b213ee3552720f1b9c377094701d/pyflowchart-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4165319bda587fb1c7950186b66f64a689a5b4a7b62a9010bbb220a3c7174d1a",
          "md5": "5c6dcf0327ca79d48ed0870bbb19c3df",
          "sha256": "22c52bd06f9443f9a21b82f3e948eb27edf80e076f9915ac7b7e03dfa9369dbd"
        },
        "downloads": -1,
        "filename": "pyflowchart-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5c6dcf0327ca79d48ed0870bbb19c3df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16267,
        "upload_time": "2021-07-04T14:23:02",
        "upload_time_iso_8601": "2021-07-04T14:23:02.647641Z",
        "url": "https://files.pythonhosted.org/packages/41/65/319bda587fb1c7950186b66f64a689a5b4a7b62a9010bbb220a3c7174d1a/pyflowchart-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f39966c03b3948cc7a997da37b5b6e9a3dacd4529f457b6ca1c931c1cec9516",
          "md5": "75dc7cd0ed565ecd0eecb1159715eef9",
          "sha256": "12080d98af37a833a1d484848c6c66018fa3957a3b36b9bdf90638c7d6422d3c"
        },
        "downloads": -1,
        "filename": "pyflowchart-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75dc7cd0ed565ecd0eecb1159715eef9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18737,
        "upload_time": "2022-02-14T03:52:47",
        "upload_time_iso_8601": "2022-02-14T03:52:47.764740Z",
        "url": "https://files.pythonhosted.org/packages/1f/39/966c03b3948cc7a997da37b5b6e9a3dacd4529f457b6ca1c931c1cec9516/pyflowchart-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2dfd5e1103331838ab54c2fc4815ce04fe1cb2e775752eb4bea501a727c62a3",
          "md5": "dd05497b735670c581acd25d89496388",
          "sha256": "283a49587c878ef328776467a4c11f1776346c784b7533c1fa07322e03d8210e"
        },
        "downloads": -1,
        "filename": "pyflowchart-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "dd05497b735670c581acd25d89496388",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19036,
        "upload_time": "2022-02-14T03:52:48",
        "upload_time_iso_8601": "2022-02-14T03:52:48.923027Z",
        "url": "https://files.pythonhosted.org/packages/a2/df/d5e1103331838ab54c2fc4815ce04fe1cb2e775752eb4bea501a727c62a3/pyflowchart-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f39966c03b3948cc7a997da37b5b6e9a3dacd4529f457b6ca1c931c1cec9516",
        "md5": "75dc7cd0ed565ecd0eecb1159715eef9",
        "sha256": "12080d98af37a833a1d484848c6c66018fa3957a3b36b9bdf90638c7d6422d3c"
      },
      "downloads": -1,
      "filename": "pyflowchart-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "75dc7cd0ed565ecd0eecb1159715eef9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18737,
      "upload_time": "2022-02-14T03:52:47",
      "upload_time_iso_8601": "2022-02-14T03:52:47.764740Z",
      "url": "https://files.pythonhosted.org/packages/1f/39/966c03b3948cc7a997da37b5b6e9a3dacd4529f457b6ca1c931c1cec9516/pyflowchart-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2dfd5e1103331838ab54c2fc4815ce04fe1cb2e775752eb4bea501a727c62a3",
        "md5": "dd05497b735670c581acd25d89496388",
        "sha256": "283a49587c878ef328776467a4c11f1776346c784b7533c1fa07322e03d8210e"
      },
      "downloads": -1,
      "filename": "pyflowchart-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "dd05497b735670c581acd25d89496388",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19036,
      "upload_time": "2022-02-14T03:52:48",
      "upload_time_iso_8601": "2022-02-14T03:52:48.923027Z",
      "url": "https://files.pythonhosted.org/packages/a2/df/d5e1103331838ab54c2fc4815ce04fe1cb2e775752eb4bea501a727c62a3/pyflowchart-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}