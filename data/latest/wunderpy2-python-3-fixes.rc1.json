{
  "info": {
    "author": "mieubrisse",
    "author_email": "mieubrisse@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "Overview\n========\nWunderpy2 is a thin Python library for accessing `the official Wunderlist 2 API <https://developer.wunderlist.com/documentation>`_. What does a thin library mean here?\n\n1. Only the bare minimum of error-checking to pass `the Wunderlist API specifications <https://developer.wunderlist.com/documentation>`_ is performed (e.g. there's no checking whether a task's title is empty, even though the Wunderlist web client enforces nonempty titles).\n2. There aren't any 'convenience' functions, like getting a list by name instead of ID (that being said, I'll likely get tired of repeating the same things myself, write a few, and bundle them in a separate helper module).\n\nInstallation\n============\n::\n\n    pip install wunderpy2\n\nUsage & Examples\n================\nGetting a client\n----------------\nWunderlist uses OAuth2 to allow applications to access users' data, so you'll need to `create an application <https://developer.wunderlist.com/apps>`_ before doing anything. If you only want to access your own Wunderlist, generate an access token after creating your application and use it and the client ID as follows::\n\n    import wunderpy2\n    api = wunderpy2.WunderApi()\n    client = api.get_client(access_token, client_id)    # Fill in your values\n\nIf you want other Wunderlisters to use your application, you'll need to see the \"Redirect users to request Wunderlist access\" section of `the authorization docs <https://developer.wunderlist.com/documentation/concepts/authorization>`_ in order to get a temporary code when a user has authorized your app. Once you have the code, you only need one more step::\n\n    api = wunderpy2.WunderApi()\n    access_token = api.get_access_token(temporary_code, client_id, client_secret)   # Fill in your values here\n    client = api.get_client(access_token, client_id)    # Fill in your client ID\n\nWunderlist Objects\n------------------\nAll Wunderlist objects are merely Python objects with special keys. For convenience, these keys are laid out in a class format in :code:`model.py`. Note that not every object will have every key (e.g. List objects with type 'inbox' do not have creation metadata).\n\nExamples\n--------\nCreating a task with a due date, note, 'starred' flag, and subtask::\n\n    lists = client.get_lists()\n    list = lists[0]\n    task = client.create_task(1234, \"My new task\", due_date=\"2015-08-02\", starred=True)\n    client.create_note(task[wunderpy2.Task.ID], \"My note\")   \n    client.create_subtask(task[wunderpy2.Task.ID], \"My subtask\")\n\nShuffling the order of tasks within a list (see `the Positions endpoint documentation <https://developer.wunderlist.com/documentation/endpoints/positions>`_)::\n\n    import random\n    task_positions_obj = client.get_task_positions_obj(list[wunderpy2.List.ID])\n    ordering = task_positions_obj[wunderpy2.Task.VALUES]\n    random.shuffle(ordering)\n    client.update_task_positions_obj(task_positions_obj[wunderpy2.TaskPositionsObj.ID], task_positions_obj[wunderpy2.TaskPositionsObj.REVISION], ordering)\n\nTODO \n====\n* Endpoint implementation:\n    * Avatar\n    * File\n    * File preview\n    * Folder\n    * Reminder\n    * Task comment\n    * Upload\n    * User\n    * Webhooks?\n\n\nRelease History\n===============\n\nTBA\n---\n* Switch from `dict.iteritems()` to `dict.items()` for Python 2 & 3 compatibility\n* Expose a few more classes in the public-facing API\n\n0.1.4 (2016/03/14)\n------------------\n* Bugfix in task endpoint code\n\n0.1.3 (2016/03/12)\n------------------\n* Fix imports for Python 3\n\n0.1.2 (2015/10/31)\n------------------\n* Added 'position' endpoint\n* Added 'subtask' endpoint\n\n0.1.1 (2015/08/16)\n------------------\n* Fixed setup.py requiring 'argparse' module for Python >2.6\n\n0.1.0 (2015/08/15)\n------------------\n* Initial release\n\n\nwunderpy2 is written and maintained by `mieubrisse <https://github.com/mieubrisse>`_\n\nContributors\n============\nNobody yet!\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mieubrisse/wunderpy2",
    "keywords": "wunderpy wunderpy2 wunderlist api cli",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wunderpy2-python-3-fixes",
    "package_url": "https://pypi.org/project/wunderpy2-python-3-fixes/",
    "platform": "",
    "project_url": "https://pypi.org/project/wunderpy2-python-3-fixes/",
    "project_urls": {
      "Homepage": "https://github.com/mieubrisse/wunderpy2"
    },
    "release_url": "https://pypi.org/project/wunderpy2-python-3-fixes/0.1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python library for the Wunderlist 2 REST API",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3818290,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b67728f1887d5a708915a1afab376f94f3ae76f7c7be8b3a9d18820825cf907",
          "md5": "5bf0eb5e1186d3298f0032e22bc2f30c",
          "sha256": "3706f6900b849322b6d71b36f7990ecd4b37de2d0e6cd0d2a4a33177c541770d"
        },
        "downloads": -1,
        "filename": "wunderpy2-python-3-fixes-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5bf0eb5e1186d3298f0032e22bc2f30c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12115,
        "upload_time": "2018-04-29T07:55:17",
        "upload_time_iso_8601": "2018-04-29T07:55:17.162054Z",
        "url": "https://files.pythonhosted.org/packages/0b/67/728f1887d5a708915a1afab376f94f3ae76f7c7be8b3a9d18820825cf907/wunderpy2-python-3-fixes-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b67728f1887d5a708915a1afab376f94f3ae76f7c7be8b3a9d18820825cf907",
        "md5": "5bf0eb5e1186d3298f0032e22bc2f30c",
        "sha256": "3706f6900b849322b6d71b36f7990ecd4b37de2d0e6cd0d2a4a33177c541770d"
      },
      "downloads": -1,
      "filename": "wunderpy2-python-3-fixes-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "5bf0eb5e1186d3298f0032e22bc2f30c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12115,
      "upload_time": "2018-04-29T07:55:17",
      "upload_time_iso_8601": "2018-04-29T07:55:17.162054Z",
      "url": "https://files.pythonhosted.org/packages/0b/67/728f1887d5a708915a1afab376f94f3ae76f7c7be8b3a9d18820825cf907/wunderpy2-python-3-fixes-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}