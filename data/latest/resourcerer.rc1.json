{
  "info": {
    "author": "Krzysztof Czarnecki",
    "author_email": "krzysztof.czarnecki@technica-engineering.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Resourcerer - an automation tool for OneDrive\n\n## Features\n\nResourcerer is a Python project that gives you an easy way of getting resources from OneDrive and other sources.\n\n## Use cases\n\nWhat we use Resourcerer for is sharing unit test and integration test resources accros projects that need it. Resources like these don't belong in artifact repositories or in GitLab/GitHub, so it makes most sense to store them on a network drive or in the cloud. Our first choice was OneDrive, since our team was already using it extensively to share all kinds of information.\n\n### How to use this for resource sharing\n\n1. Write a `resources.yaml` file and place it at the root of your project. For example the way we use it to get PCAPs:\n\n    ```yaml\n    test_resources:\n    - \"analog.pcap\"\n\n    source_folder: 'Software/resources'\n    target_folder: './tests/res'\n    ```\n\n    - `source_folder` is the path within the source driver, e.g. OneDrive with your test resource files you want to point to.\n\n    - `target_folder` is the path to a target directory where resources should be downloaded. It's relative with respect to the root of the project folder (for predictable behavior with CI tools).\n\n    - `test_resources` is a list of filenames (with file extensions) that should be fetched for this particular repository. It's important to explicitly specify which files are required, because the application always checks whether a resource exists before downloading it. We don't want to re-download hundreds of megabytes of files if we already have them stored.\n\n2. For OneDrive: in your environment (or in your CI pipeline), specify the following environment variables:\n\n    - `MSGRAPH_API_KEY` -> Secret for the Azure the application of choice (see `portal.azure.com`), you can also set it as a credential `MSGraphApiKey`, e.g. using Python's `keyring` package.\n    - `MSGRAPH_CLIENT_ID` -> Client ID for the application of choice\n    - `MSGRAPH_TENANT_ID` -> Azure Tenant ID\n    - `MSGRAPH_SITE_ID` -> Site ID for your OneDrive or SharePoint\n\n3. Run the `get_resources` script in your CI pipeline or anytime you want to download test resources. This Python package installs an executable script that should be available from within an environment in which it was installed.\n\n    So for example in `.gitlab-ci.yml`:\n\n    ```yaml\n    variables:\n      # connection to OneDrive:\n      MSGRAPH_CLIENT_ID: \"<client-id>\"\n      MSGRAPH_TENANT_ID: \"<tenant-id>\"\n      MSGRAPH_SITE_ID: \"<site-id>\"\n\n    before_script:\n      - pip install resourcerer\n      - get_resources\n    ```\n\n    The `get_resources` script will notify you whenever a file was encountered that was already there and it will also give you info on what files were specifically downloaded for easy debugging.\n\n### Importable functions\n\nYou may of course decide to use this within your own Python app somewhere. In such case, we export two main functions that can be used:\n\n- `download_file` -> takes in a target path (with filename) and a URL, downloads from a publicly accessible location.\n- `download_from_onedrive` -> takes in a source path to a given file from OneDrive and a target path (without filename) to where the file should be downloaded. This function does not rename the downloaded resource.\n\nThere is also a protected function `_download_from_onedrive` which can be used with custom OAuth2 token and custom `site_id` if you need this.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Technica-Engineering/resourcerer",
    "keywords": "automation,testing,resources,download,onedrive",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "resourcerer",
    "package_url": "https://pypi.org/project/resourcerer/",
    "platform": "",
    "project_url": "https://pypi.org/project/resourcerer/",
    "project_urls": {
      "Homepage": "https://github.com/Technica-Engineering/resourcerer"
    },
    "release_url": "https://pypi.org/project/resourcerer/1.0.0/",
    "requires_dist": [
      "pyyaml",
      "flake8 ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "setuptools ; extra == 'dev'",
      "autopep8 ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "Gets resource files for testing from a configured remote location allowing you to separate code from test resources",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11880160,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1c176a695e6c3303000747b83990f0eec43d1203feaa714e9ac1cb5fcda9de2",
          "md5": "1c9af70906796118cc2f5f6c5c81c44c",
          "sha256": "c6455b3e8e6ac13de6c3010707f74b6e06838120fd12a99cad45abedc9725dad"
        },
        "downloads": -1,
        "filename": "resourcerer-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c9af70906796118cc2f5f6c5c81c44c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11153,
        "upload_time": "2021-10-30T21:18:07",
        "upload_time_iso_8601": "2021-10-30T21:18:07.564622Z",
        "url": "https://files.pythonhosted.org/packages/d1/c1/76a695e6c3303000747b83990f0eec43d1203feaa714e9ac1cb5fcda9de2/resourcerer-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1c176a695e6c3303000747b83990f0eec43d1203feaa714e9ac1cb5fcda9de2",
        "md5": "1c9af70906796118cc2f5f6c5c81c44c",
        "sha256": "c6455b3e8e6ac13de6c3010707f74b6e06838120fd12a99cad45abedc9725dad"
      },
      "downloads": -1,
      "filename": "resourcerer-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1c9af70906796118cc2f5f6c5c81c44c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11153,
      "upload_time": "2021-10-30T21:18:07",
      "upload_time_iso_8601": "2021-10-30T21:18:07.564622Z",
      "url": "https://files.pythonhosted.org/packages/d1/c1/76a695e6c3303000747b83990f0eec43d1203feaa714e9ac1cb5fcda9de2/resourcerer-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}