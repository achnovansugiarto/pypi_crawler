{
  "info": {
    "author": "Elias Bassani",
    "author_email": "elias.bssn@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Text Processing :: General"
    ],
    "description": "<!-- <div align=\"center\">\n  <img src=\"https://repository-images.githubusercontent.com/268892956/750228ec-f3f2-465d-9c17-420c688ba2bc\">\n</div> -->\n\n<p align=\"center\">\n  <!-- Python -->\n  <a href=\"https://www.python.org\" alt=\"Python\">\n      <img src=\"https://badges.aleen42.com/src/python.svg\" />\n  </a>\n  <!-- Version -->\n  <a href=\"https://badge.fury.io/py/indxr\"><img src=\"https://badge.fury.io/py/indxr.svg\" alt=\"PyPI version\" height=\"18\"></a>\n  <!-- Black -->\n  <a href=\"https://github.com/psf/black\" alt=\"Code style: black\">\n      <img src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" />\n  </a>\n  <!-- License -->\n  <a href=\"https://lbesson.mit-license.org/\"><img src=\"https://img.shields.io/badge/License-MIT-blue.svg\" alt=\"License: MIT\"></a>\n</p>\n\n\n## ‚ö°Ô∏è Introduction\n\n[indxr](https://github.com/AmenRa/indxr) is a Python utility for indexing long files that allows you to read specific lines dynamically, avoiding hogging your RAM.\n\n[indxr](https://github.com/AmenRa/indxr) can be particularly useful for managing large datasets split among multiple files and loading data dynamically and with a low memory footprint.\n\nFor an overview, follow the [Usage](#-usage) section.\n\n<!-- ## ‚ú® Features -->\n\n## üîå Installation\n```bash\npip install indxr\n```\n\n## üí° Usage\n\n- [txt](https://github.com/AmenRa/indxr#txt)\n- [jsonl](https://github.com/AmenRa/indxr#jsonl)\n- [csv / tsv](https://github.com/AmenRa/indxr#csv--tsv--custom)\n- [callback](https://github.com/AmenRa/indxr#callback-works-with-every-file-type)\n- [write / read](https://github.com/AmenRa/indxr#write--read-index)\n- [PyTorch Dataset example](https://github.com/AmenRa/indxr#usage-example-with-pytorch-dataset)\n\n### TXT\n```python\nfrom indxr import Indxr\n\nindex = Indxr(\"sample.txt\")\n\nindex[0]\n>>> # First line of sample.txt\n\nindex.get(\"0\")\n>>> # First line of sample.txt\n\nindex.mget([\"2\", \"1\"])\n>>> # List containing the third and second lines of sample.txt\n```\n\n\n### JSONl\n\n```python\nfrom indxr import Indxr\n\nindex = Indxr(\"sample.jsonl\", key_id=\"id\")  # key_id=\"id\" is by default\n\n# Returns the JSON object at line 43 as Python Dictionary\n# Reads only the 43th line\nindex[42]\n\n# Returns the JSON object with id=\"id_123\" as Python Dictionary,\n# Reads only the line where the JSON object is located\nindex.get(\"id_123\")\n\n# Same as `get` but for multiple JSON objects\nindex.mget([\"id_123\", \"id_321\"])\n```\n\n\n### CSV / TSV / ...\n\n```python\nfrom indxr import Indxr\n\nindex = Indxr(\n  \"sample.csv\",\n  delimiter=\",\",    # Default value. Automatically switched to `\\t` for `.tsv` files.\n  fieldnames=None,  # Default value. List of fieldnames. Overrides header, if any.\n  has_header=True,  # Default value. If `True`, treats first line as header.\n  return_dict=True, # Default value. If `True`, returns Python Dictionary, string otherwise.\n  key_id=\"id\",      # Default value. Same as for JSONl. Ignored if return_dict is `False`.\n)\n\n# Returns line 43 as Python Dictionary\nindex[42]\n\n# Returns the line with id=\"id_123\" as Python Dictionary\nindex.get(\"id_123\")\n\n# Same as `get` but for multiple lines\nindex.mget([\"id_123\", \"id_321\"])\n```\n\n### Custom\n```python\nfrom indxr import Indxr\n\n# The file must have multiple lines\nindex = Indxr(\"sample.something\")\n\nindex[0]\n>>> # First line of sample.something in bytes\n\nindex.get(\"0\")\n>>> # First line of sample.something in bytes\n\nindex.mget([\"2\", \"1\"])\n>>> # List containing the third and second lines of sample.something in bytes\n```\n\n### Callback (works with every file-type)\n\n```python\nfrom indxr import Indxr\n\nindex = Indxr(\"sample.txt\", callback=lambda x: x.split())\n\nindex.get(\"0\")\n>>> # First line of sample.txt split into a list\n```\n\n\n### Write / Read Index\n```python\nfrom indxr import Indxr\n\nindex = Indxr(\"sample.txt\", callback=lambda x: x.split())\n\nindex.write(path)  # Write index to disk\n\n# Read index from disk, callback must be re-defined\nindex = Indxr.read(path, callback=lambda x: x.split())\n```\n\n\n### Usage example with PyTorch Dataset\n\n```python\nimport random\n\nfrom indxr import Indxr\nfrom torch.utils.data import DataLoader, Dataset\n\nclass CustomDataset(Dataset):\n    def __init__(self):\n      self.queries = Indxr(\"queries.jsonl\")\n      self.documents = Indxr(\"documents.jsonl\")\n\n    def __getitem__(self, index: int):\n        # Get query ------------------------------------------------------------\n        query = self.queries[index]\n\n        # Sampling -------------------------------------------------------------\n        pos_doc_id = random.choice(query[\"pos_doc_ids\"])\n        neg_doc_id = random.choice(query[\"neg_doc_ids\"])\n\n        # Get docs -------------------------------------------------------------\n        pos_doc = self.documents.get(pos_doc_id)\n        neg_doc = self.documents.get(neg_doc_id)\n\n        # The outputs must be batched and transformed to\n        # meaningful tensors using a DataLoader and\n        # a custom collator function\n        return query[\"text\"], pos_doc[\"text\"], neg_doc[\"text\"]\n\n    def __len__(self):\n        return len(self.queries)\n\n\ndef collator_fn(batch):\n    # Extract data -------------------------------------------------------------\n    queries = [x[0] for x in batch]\n    pos_docs = [x[1] for x in batch]\n    neg_docs = [x[2] for x in batch]\n\n    # Texts tokenization -------------------------------------------------------\n    queries = tokenizer(queries)    # Returns PyTorch Tensor\n    pos_docs = tokenizer(pos_docs)  # Returns PyTorch Tensor\n    neg_docs = tokenizer(neg_docs)  # Returns PyTorch Tensor\n\n    return queries, pos_docs, neg_docs\n\n\ndataloader = DataLoader(\n    dataset=CustomDataset(),\n    collate_fn=collate_fn,\n    batch_size=32,\n    shuffle=True,\n    num_workers=4,\n)\n```\n\nEach line of `queries.jsonl` is as follows:\n```json\n{\n  \"q_id\": \"q321\",\n  \"text\": \"lorem ipsum\",\n  \"pos_doc_ids\": [\"d2789822\", \"d2558037\", \"d2594098\"],\n  \"neg_doc_ids\": [\"d3931445\", \"d4652233\", \"d191393\", \"d3692918\", \"d3051731\"]\n}\n```\n\nEach line of `documents.jsonl` is as follows:\n```json\n{\n  \"doc_id\": \"d123\",\n  \"text\": \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\"\n}\n```\n\n\n## üéÅ Feature Requests\nWould you like to see other features implemented? Please, open a [feature request](https://github.com/AmenRa/indxr/issues/new?assignees=&labels=enhancement&template=feature_request.md&title=%5BFeature+Request%5D+title).\n\n\n## ü§ò Want to contribute?\nWould you like to contribute? Please, drop me an [e-mail](mailto:elias.bssn@gmail.com?subject=[GitHub]%20indxr).\n\n\n## üìÑ License\n[indxr](https://github.com/AmenRa/indxr) is an open-sourced software licensed under the [MIT license](LICENSE).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AmenRa/indxr",
    "keywords": "text index,file index,index,indexer,indexing,information retrieval,natural language processing",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "indxr",
    "package_url": "https://pypi.org/project/indxr/",
    "platform": null,
    "project_url": "https://pypi.org/project/indxr/",
    "project_urls": {
      "Homepage": "https://github.com/AmenRa/indxr"
    },
    "release_url": "https://pypi.org/project/indxr/0.1.2/",
    "requires_dist": [
      "numpy",
      "orjson"
    ],
    "requires_python": ">=3.7",
    "summary": "indxr: A Python utility for indexing long files.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16872860,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c7ed1e61b3a243dcbdb80756835f603f89c32e2a04c78bdb3f97656ca9f4d14",
          "md5": "ba4365728885cb2ff5fc30df990b1fd0",
          "sha256": "70fc342855b7a22121026125b0d21c8ecc09a6621793b1bdbec327f38a02bf0c"
        },
        "downloads": -1,
        "filename": "indxr-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba4365728885cb2ff5fc30df990b1fd0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7995,
        "upload_time": "2022-08-19T12:43:43",
        "upload_time_iso_8601": "2022-08-19T12:43:43.424448Z",
        "url": "https://files.pythonhosted.org/packages/1c/7e/d1e61b3a243dcbdb80756835f603f89c32e2a04c78bdb3f97656ca9f4d14/indxr-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b800a6b89e3af86551ddb2c5526f1f435078de414d463ef15692b84b49cd4f4",
          "md5": "0a4496113e046581176eedcc8fb2d649",
          "sha256": "4622c792b43cf65f249e28cf7c22348865fb24208bd8242b481de43361adc627"
        },
        "downloads": -1,
        "filename": "indxr-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0a4496113e046581176eedcc8fb2d649",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6223,
        "upload_time": "2022-08-19T12:43:45",
        "upload_time_iso_8601": "2022-08-19T12:43:45.474023Z",
        "url": "https://files.pythonhosted.org/packages/5b/80/0a6b89e3af86551ddb2c5526f1f435078de414d463ef15692b84b49cd4f4/indxr-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9b13ca803570f7a2c0f3b283ce529151f8539b622e28c27121529ec92bb1bb4",
          "md5": "c88ce1be39d161c3719dcb5b1494aa3b",
          "sha256": "7cc9195984f9998deb49d9075b6e5690be72b515ed65c48c0f3b4cee630df1e9"
        },
        "downloads": -1,
        "filename": "indxr-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c88ce1be39d161c3719dcb5b1494aa3b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8651,
        "upload_time": "2022-11-15T19:26:42",
        "upload_time_iso_8601": "2022-11-15T19:26:42.083820Z",
        "url": "https://files.pythonhosted.org/packages/a9/b1/3ca803570f7a2c0f3b283ce529151f8539b622e28c27121529ec92bb1bb4/indxr-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a276df82a3093095ec82c85b73fd57abbbeeabf7113e7abac66bc9b818a74f5d",
          "md5": "d4a5b9a10b78401d6d1f10516868ba9a",
          "sha256": "98c9b3a2960b74e402923c2891f3b9e17234ba24aba3267373c26539f1a01399"
        },
        "downloads": -1,
        "filename": "indxr-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d4a5b9a10b78401d6d1f10516868ba9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6431,
        "upload_time": "2022-11-15T19:26:44",
        "upload_time_iso_8601": "2022-11-15T19:26:44.483854Z",
        "url": "https://files.pythonhosted.org/packages/a2/76/df82a3093095ec82c85b73fd57abbbeeabf7113e7abac66bc9b818a74f5d/indxr-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8287363a936d3d477f1b61d6993534f2d92f6be4ba768be8a1f74eff85749bb4",
          "md5": "59713482aa75407a39a0b13279d2c404",
          "sha256": "e93de7dec0675606990e34e74d26144fa605e6a9ae523f5eca096488e3232d30"
        },
        "downloads": -1,
        "filename": "indxr-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "59713482aa75407a39a0b13279d2c404",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9437,
        "upload_time": "2023-02-15T15:27:12",
        "upload_time_iso_8601": "2023-02-15T15:27:12.314028Z",
        "url": "https://files.pythonhosted.org/packages/82/87/363a936d3d477f1b61d6993534f2d92f6be4ba768be8a1f74eff85749bb4/indxr-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5d6ba074248ce07ae91cfbd455e89d3929dd9246041a2b22573d5badfb70c36",
          "md5": "81601ac658d23f4d9132a26063afa2b8",
          "sha256": "2335abcd7b5f9550c296cc306ef1ac5e67f301e5c58f71afb6b20422dee5ca43"
        },
        "downloads": -1,
        "filename": "indxr-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "81601ac658d23f4d9132a26063afa2b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7222,
        "upload_time": "2023-02-15T15:27:13",
        "upload_time_iso_8601": "2023-02-15T15:27:13.989858Z",
        "url": "https://files.pythonhosted.org/packages/a5/d6/ba074248ce07ae91cfbd455e89d3929dd9246041a2b22573d5badfb70c36/indxr-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8287363a936d3d477f1b61d6993534f2d92f6be4ba768be8a1f74eff85749bb4",
        "md5": "59713482aa75407a39a0b13279d2c404",
        "sha256": "e93de7dec0675606990e34e74d26144fa605e6a9ae523f5eca096488e3232d30"
      },
      "downloads": -1,
      "filename": "indxr-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "59713482aa75407a39a0b13279d2c404",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9437,
      "upload_time": "2023-02-15T15:27:12",
      "upload_time_iso_8601": "2023-02-15T15:27:12.314028Z",
      "url": "https://files.pythonhosted.org/packages/82/87/363a936d3d477f1b61d6993534f2d92f6be4ba768be8a1f74eff85749bb4/indxr-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5d6ba074248ce07ae91cfbd455e89d3929dd9246041a2b22573d5badfb70c36",
        "md5": "81601ac658d23f4d9132a26063afa2b8",
        "sha256": "2335abcd7b5f9550c296cc306ef1ac5e67f301e5c58f71afb6b20422dee5ca43"
      },
      "downloads": -1,
      "filename": "indxr-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "81601ac658d23f4d9132a26063afa2b8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7222,
      "upload_time": "2023-02-15T15:27:13",
      "upload_time_iso_8601": "2023-02-15T15:27:13.989858Z",
      "url": "https://files.pythonhosted.org/packages/a5/d6/ba074248ce07ae91cfbd455e89d3929dd9246041a2b22573d5badfb70c36/indxr-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}