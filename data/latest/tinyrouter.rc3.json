{
  "info": {
    "author": "Tarcisio Cantalice",
    "author_email": "tarcisiocantalice@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Flask",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Tiny Router\nTiny Router é um roteador de caminhos para aplicações [Flask](https://github.com/pallets/flask). A biblioteca centraliza a definição e gerenciamento das rotas utilizadas na aplicação, criar, editar, remover ou trocar controladores facilmente evitando conflitos.\n\n- [Criando rotas](#criando-rotas)\n- [Registrando rotas](#registrando-rotas)\n- [Funções Helper](#funções-helper)\n    - [Métodos HTTP](#métodos-http)\n    - [Préfixos](#préfixos)\n- [Dicas de uso](#dicas-de-uso)\n\n## Criando rotas\n\nUma rota é representada pela classe ```Route```. Ela possui os seguinte atributos:\n\n* **endpoint** - Nome utilizado para identificar a rota. Em caso de endpoints com múltiplos termos, recomendado separá-los por ponto ou sublinhado.\n* **rule** - Caminho para um recurso específico\n* **view** - Função ou classe que irá manipular a requisição\n* **methods** - Métodos HTTP para chamada da rota (Default: ```{'GET'}```)\n* **parameters** - Parâmetros que podem ser passados na url.\n\nAo criar uma rota apenas são obrigatórios ```endpoint```, ```rule``` e ```view```.\n\nExemplo de uma rota simples:\n```python\nfrom tinyrouter import Route\nfrom views import user_index\n\nRoute('user.index', '/user', user_index)\n```\nPor padrão, as rotas são definidas para aceitas apenas o método ```GET```. Entretanto outros métodos podem ser definidos, ou até mais de um.\n```python\nfrom tinyrouter import Route\nfrom views import user_index\n\n# Definição dos métodos\nmethods = ['GET', 'POST']\n\nRoute('user.index', '/user', user_index, methods)\n```\n## Registrando as rotas\n\nPrimeiro cria-se uma instância do roteador\n```python\nfrom flask import Flask\nfrom tinyrouter import Router\n\napp = Flask(__name__)\nrouter = Router(app)\n```\n\nE invoca o método ```register``` passando a lista de rotas que deseja registrar na aplicação\n```python\n'''\nImportaçãoes anteriores\n'''\nfrom my_app.routes import routes\n\n'''\n Instância da aplicação e do roteador\n'''\nrouter.register(routes)\n```\n\nPronto! As rotas agora estão registradas na aplicação.\n\nÉ possível registrar vários grupos de rotas.\n```python\nfrom webapp.routes import routes as web_routes\nfrom api.routes import routes as api_routes\n\nrouter.register(web_routes)\nrouter.register(api_routes)\n```\nOu ainda...\n```python\nrouter.register(web_routes, api_routes)\n```\n\n## Funções Helper\n### **Métodos HTTP**\nCriar uma rota que aceite apenas uma método HTTP utilizando Route fica da seguinte forma:\n```python\n# Importação da view...\nfrom tinyrouter import Route\n\n\nRoute('cliente.create', '/cliente', cliente_create, ['POST'])\n```\nEntretanto esse processo pode ser encurtado com os helpers de métodos.\nUtilizando os helpers, o exemplo acima ficaria assim:\n```python\n# Importação da view...\nfrom tinyrouter.helpers import route_post as post\n\npost('cliente.create', '/cliente', cliente_create)\n```\nO resultado será exatamente o mesmo. Os métodos suportados são:\n- GET\n- POST\n- PUT\n- DELETE\n\n\n### **Préfixos**\nAgrupar rotas de acordo com o recurso ou contexto utilizando o Route pode ser um pouco verboso, como por exemplo, rotas associadas ao recurso Cliente.\n\n**[GET] - /cliente/** (Lista todos os Clientes)<br>\n**[POST] - /cliente/** (Cria um novo registro de Cliente)<br>\n**[GET] - /cliente/{id}** (Recupera um registro específico de Cliente)<br>\n**[PUT] - /cliente/{id}** (Atualiza um registro específico de Cliente)<br>\n**[DELETE] - /cliente/{id}** (Deleta um registro específico de Cliente )\n\nÉ possível notar que para cada um dos endpoints foi necessário pôr o nome do recurso (Cliente) como préfixo. Utilizando o helper de préfixo esse trabalho não será mais necessário. A função recebe o préfixo a ser adicionado e as rotas que receberão o mesmo. Exemplo:\n\n```python\n# Importação das views\nfrom tinyrouter.helpers import route_prefix as prefix\nfrom tinyrouter.helpers import (route_get as get,\\\n                                route_post as post,\\\n                                route_put as put,\\\n                                route_delete as delete)\n\n*prefix('cliente', \n        get('cliente.all', '/', cliente_all),\n        post('cliente.create', '/', cliente_create),\n        put('cliente.udpate', '/<id>', cliente_update),\n        get('cliente.show'), '/<id>', cliente_show),\n        delete('cliente.delete', '/<id>', cliente_delete)\n    )\n```\nNOTA: *Ao utilizar o route_prefix é necessário pôr um * na frente da função pois é retornado uma coleção de rotas alteradas, e este artifício garante que as rotas serão \"desempacotadas\". Entretanto não impede que as novas rotas sejam armazenadas em uma variável.*\n\nÉ possível também utilizar aninhamentos do ```route_prefix```\n```python\n# Importações...\n\n*prefix('sistema', \n    *prefix('cliente',\n        ...\n    )\n)\n```\nCom isso é possível agrupar diversos contextos com um mesmo préfixo sem a necessidade de definir por extenso um a um.\n\n## Dicas de Uso\n1. Utilizar um arquivo de rotas para cada parte da aplicação. Exemplo:\n```python\n# ./clientes/routes.py\nfrom tinyrouter import Route\nfrom .views\n\nroutes = [\n    *route_prefix('/cliente',\n        Route('cliente.index', '/', views.index),\n        Route('cliente.show', '/<int:id>', views.show),\n        Route('cliente.create', '/create', views.create, ['GET', 'POST'])\n    )\n]\n```\n```python\n# ./app.py\nfrom flask import Flask\nfrom tinyrouter import Router\nfrom clientes.routes import routes as rotas_clientes\n\napp = Flask(__name__)\nrouter = Router(app)\nrouter.register(rotas_clientes)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tcantalice/tinyrouter",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tinyrouter",
    "package_url": "https://pypi.org/project/tinyrouter/",
    "platform": "",
    "project_url": "https://pypi.org/project/tinyrouter/",
    "project_urls": {
      "Homepage": "https://github.com/tcantalice/tinyrouter"
    },
    "release_url": "https://pypi.org/project/tinyrouter/0.2.1/",
    "requires_dist": [
      "flask"
    ],
    "requires_python": "",
    "summary": "",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6850224,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c4d7028b08f6012f2678fcf44becfadb90502acf7e519d4f35de0c3fa0f7624",
          "md5": "d08392913f525eabd8676241290f6c78",
          "sha256": "532478c052c6c31f5aca17eaa907981973f560ff363531baa359040f68b74df7"
        },
        "downloads": -1,
        "filename": "tinyrouter-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d08392913f525eabd8676241290f6c78",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6306,
        "upload_time": "2020-02-11T19:30:25",
        "upload_time_iso_8601": "2020-02-11T19:30:25.838845Z",
        "url": "https://files.pythonhosted.org/packages/3c/4d/7028b08f6012f2678fcf44becfadb90502acf7e519d4f35de0c3fa0f7624/tinyrouter-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e78c147d868bbdc8a54bb948caf8382659a818fe882462d5f8eaab456512ade",
          "md5": "18fb7a10f6ce65721144abaf42f991e9",
          "sha256": "a03c13cba4c40aac5a94088391a40627f87cc1a44a75250c93c32fe0fe096ec0"
        },
        "downloads": -1,
        "filename": "tinyrouter-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "18fb7a10f6ce65721144abaf42f991e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5571,
        "upload_time": "2020-02-11T19:30:27",
        "upload_time_iso_8601": "2020-02-11T19:30:27.946689Z",
        "url": "https://files.pythonhosted.org/packages/3e/78/c147d868bbdc8a54bb948caf8382659a818fe882462d5f8eaab456512ade/tinyrouter-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60f8c07573e035b9362fa8f5028b0f48d93168ac1b561a8bfdf46e8d9f8bdd21",
          "md5": "04a94f4be0c340559e188466fac47d91",
          "sha256": "6774692d367ba82009522957ac4ba62f2f8a2e0649525190eb1a21c3dc72383c"
        },
        "downloads": -1,
        "filename": "tinyrouter-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04a94f4be0c340559e188466fac47d91",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6210,
        "upload_time": "2020-02-16T14:59:53",
        "upload_time_iso_8601": "2020-02-16T14:59:53.520180Z",
        "url": "https://files.pythonhosted.org/packages/60/f8/c07573e035b9362fa8f5028b0f48d93168ac1b561a8bfdf46e8d9f8bdd21/tinyrouter-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62fc1b17afa8fce63c9e9ade178a6cceedbb360bf45b3176013391ada9fa864f",
          "md5": "f901c7571988feb5105e41f2ceaf4068",
          "sha256": "4be33b258c820c9b2755c6eeb0509cf2a262b6c80ada3e5562b76f55c6de7388"
        },
        "downloads": -1,
        "filename": "tinyrouter-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f901c7571988feb5105e41f2ceaf4068",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5185,
        "upload_time": "2020-02-16T14:59:55",
        "upload_time_iso_8601": "2020-02-16T14:59:55.734191Z",
        "url": "https://files.pythonhosted.org/packages/62/fc/1b17afa8fce63c9e9ade178a6cceedbb360bf45b3176013391ada9fa864f/tinyrouter-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0216c72f86cf15f41b543b3d62a6e15869bb90111aebd90b9b0df5833f2b058",
          "md5": "f8abfa37412fc9f2f8519f60da365039",
          "sha256": "f63e56571709c55e4e3ff12a9c2a0617b6d6f274fef984678b26e45ea0ee2b84"
        },
        "downloads": -1,
        "filename": "tinyrouter-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8abfa37412fc9f2f8519f60da365039",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6235,
        "upload_time": "2020-03-20T14:57:22",
        "upload_time_iso_8601": "2020-03-20T14:57:22.523184Z",
        "url": "https://files.pythonhosted.org/packages/b0/21/6c72f86cf15f41b543b3d62a6e15869bb90111aebd90b9b0df5833f2b058/tinyrouter-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a482f8029b6d9d95e576045829275364d58276333adfc46aebbf4f4fb3e5c0be",
          "md5": "5d8b2b521d9e2d246353161b554d09cc",
          "sha256": "5b4ea82a9d2f1a48e45a079e1b1adf242f0ef475e894b6b18afcf76051ae5961"
        },
        "downloads": -1,
        "filename": "tinyrouter-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5d8b2b521d9e2d246353161b554d09cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5195,
        "upload_time": "2020-03-20T14:57:26",
        "upload_time_iso_8601": "2020-03-20T14:57:26.062783Z",
        "url": "https://files.pythonhosted.org/packages/a4/82/f8029b6d9d95e576045829275364d58276333adfc46aebbf4f4fb3e5c0be/tinyrouter-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b0216c72f86cf15f41b543b3d62a6e15869bb90111aebd90b9b0df5833f2b058",
        "md5": "f8abfa37412fc9f2f8519f60da365039",
        "sha256": "f63e56571709c55e4e3ff12a9c2a0617b6d6f274fef984678b26e45ea0ee2b84"
      },
      "downloads": -1,
      "filename": "tinyrouter-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f8abfa37412fc9f2f8519f60da365039",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6235,
      "upload_time": "2020-03-20T14:57:22",
      "upload_time_iso_8601": "2020-03-20T14:57:22.523184Z",
      "url": "https://files.pythonhosted.org/packages/b0/21/6c72f86cf15f41b543b3d62a6e15869bb90111aebd90b9b0df5833f2b058/tinyrouter-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a482f8029b6d9d95e576045829275364d58276333adfc46aebbf4f4fb3e5c0be",
        "md5": "5d8b2b521d9e2d246353161b554d09cc",
        "sha256": "5b4ea82a9d2f1a48e45a079e1b1adf242f0ef475e894b6b18afcf76051ae5961"
      },
      "downloads": -1,
      "filename": "tinyrouter-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5d8b2b521d9e2d246353161b554d09cc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5195,
      "upload_time": "2020-03-20T14:57:26",
      "upload_time_iso_8601": "2020-03-20T14:57:26.062783Z",
      "url": "https://files.pythonhosted.org/packages/a4/82/f8029b6d9d95e576045829275364d58276333adfc46aebbf4f4fb3e5c0be/tinyrouter-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}