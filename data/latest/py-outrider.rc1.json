{
  "info": {
    "author": "Stefan Loipfinger, Ines Scheller",
    "author_email": "scheller@in.tum.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# py_outrider\n\npy_outrider is a flexible framework for outlier detection in omics datasets.\n\n# How to start\n\nAfter cloning this repository, you can set up your own environment with all required packages using the `environment.yml`\nor you run it using the following conda environment: `conda activate outrider2`\n\n(It is recommended to use `Tensorflow`>2.0.2, which fixed some rather significant runtime issues.)\n\nThen, run `pip install py_outrider` to install py_outrider in this environment (or `pip install git+https://github.com/gagneurlab/py_outrider.git` to install from github). \nTo check available options, run\n```sh\npy_outrider --help\n```\n\n# OUTRIDER\nFor large data sets, the python version has a way faster fitting procedure of outrider as the R version\n```sh\npy_outrider --input count_table.csv --encod_dim 5 --profile outrider --output OUTPUT_FILE --num_cpus 10 \n```\n\n> Be careful: input matrix must have the format: rows:samples x columns:genes, must be comma separated (csv), and needs the 1st row and 1st column to contain the feature and sample names, respectively\n\n\n# PROTRIDER\nMore accurate (but with longer runtime) fitting method for proteins with covariate consideration\n```sh\npy_outrider --input protein_intensities.csv --encod_dim 5 --profile protrider --output OUTPUT_FILE --num_cpus 10 --sample_anno sample_anno.csv -cov batch gender --output_res_table RESULTS_TABLE_FILE\n```\n\n> Missing values due to missing detection in the mass-spectrometry must be declared as such, e.g. NAN and must not be kept 0, as this will be considered as true value.\n\n# Output\npy_outrider outputs an AnnData object containing the data, fit results, p values etc. (by default as an .h5ad file). \nTo read in the output file, and access e.g. adjusted pvalues, run\n```python\nimport anndata\nadata = anndata.read(\"/path/to/py_outrider_results.h5ad\")\nadata.layers[\"X_padj\"]\n```\n\nOutput matrices include:\n\n|Name                  |Description                                                                                                                                     |\n|----------------------|------------------------------------------------------------------------------------------------------------------------------------------------|\n|`X_pvalue`            |calculated p values                                                                                                                             |\n|`X_padj`              |caluclated adjusted p values                                                                                                                    |\n|`outrider_fc`         |calculated fold-changes                                                                                                                         |\n|`outrider_l2fc`       |calculated log2 fold-changes                                                                                                                    |\n|`outrider_zscore`     |calculated zscores                                                                                                                              |\n|`outrider_delta`      |calculated delta values (obs - exp)                                                                                                             |\n|`X_raw`               |input matrix (same as `adata.X`)                                                                                                                |\n|`X_prepro`            |contains the result of applying the preprocessing function (in `adata.uns[\"prepro_func\"]`) to `X_raw` (equal to `X_raw` if no preprocessing)    |\n|`X_sf_norm`           |sizefactor normalization applied to `X_prepro`                                                                                                  |\n|`X_transformed`       |contains the result of applying the transformation function (in `adata.uns[\"transform_func\"]`) to `X_sf_norm` (or `X_prepro` when sf_norm=False)|\n|`X_AE_input`          |input matrix to the AE model, including covariates if requested (`X_transformed` centered feature-wise if centering=True)                       |\n|`X_predicted_no_trans`|output of AE model before reverse transforming (compare with `X_transformed`)                                                                   |\n|`X_predicted`         |expected values, output of AE model after reverse transforming and multiplying with sizefactors (compare with `X_prepro`)                       |\n|`X_latent`            |computed latent space (samples x encod_dim); access with `adata.obsm[\"X_latent\"]`                                                               |\n|`dispersions`         |calculated dispersions (= theta for NB); access with `adata.varm[\"dispersions\"]`                                                                |\n\n\nAdditionally, py_outrider writes a results table to a specified csv file if the option `--output_res_tabe /PATH/TO/RESULTS_TABLE.CSV` is set. \n\n---\n## Usage\n```\nusage: py_outrider [-h] [-in INPUT] [-sa SAMPLE_ANNO] [-o OUTPUT]\n                   [-ot {h5ad,csv,zarr}] [-or OUTPUT_RES_TABLE]\n                   [-p {outrider,protrider,pca}] [-q ENCOD_DIM]\n                   [-cov [COVARIATES [COVARIATES ...]]] [-i ITERATIONS]\n                   [-fl {float32,float64}] [-cpu NUM_CPUS] [-v VERBOSE]\n                   [-s SEED] [-dis {NB,gaussian,log-gaussian}]\n                   [-ld {NB,gaussian,log-gaussian}] [-pre {none,log}]\n                   [-sf SF_NORM] [-c CENTERING] [-dt {log1p,log,none}]\n                   [-nf NOISE_FACTOR] [--latent_space_model {AE,PCA}]\n                   [--decoder_model {AE,PCA}] [--dispersion_model {ML,MoM}]\n                   [--optimizer {lbfgs}] [--batch_size BATCH_SIZE]\n                   [--nr_latent_space_features NR_LATENT_SPACE_FEATURES]\n                   [--parallelize_D] [--no_parallelize_D]\n                   [--convergence CONVERGENCE]\n                   [--effect_type [{none,zscores,fold_change,delta} [{none,zscores,fold_change,delta} ...]]]\n                   [--fdr_method FDR_METHOD] [--max_iter_hyper MAX_ITER_HYPER]\n                   [--convergence_hyper CONVERGENCE_HYPER]\n\nRun py_outrider to detect aberrant events in omics data.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -in INPUT, --input INPUT\n                        Path to a file containing the input data matrix, like\n                        a gene count table. Can either be a csv file with\n                        format: rows:samples x columns:genes and 1. row and 1.\n                        column having feature and sample names, respectively;\n                        or a .h5ad file containing an existing AnnData object\n                        .\n  -sa SAMPLE_ANNO, --sample_anno SAMPLE_ANNO\n                        Path to sample annotation file, must be comma\n                        separated, automatically selects sampleID column as\n                        the one which has input_file rownames in it.\n  -o OUTPUT, --output OUTPUT\n                        Filename to save results (adata object).\n  -ot {h5ad,csv,zarr}, --output_type {h5ad,csv,zarr}\n                        File type of the output (h5ad, csv or zarr). Default:\n                        h5ad\n  -or OUTPUT_RES_TABLE, --output_res_table OUTPUT_RES_TABLE\n                        Outputs results table as csv to the specifed file.\n  -p {outrider,protrider,pca}, --profile {outrider,protrider,pca}\n                        Choose which pre-defined implementation should be\n                        used. Default profile: outrider\n  -q ENCOD_DIM, --encod_dim ENCOD_DIM\n                        Number of encoding dimensions. If not specified, runs\n                        hyperparameter optimization to determine best encoding\n                        dimension.\n  -cov [COVARIATES [COVARIATES ...]], --covariates [COVARIATES [COVARIATES ...]]\n                        List of covariate names in sample_anno, can either be\n                        columns filled with 0 and 1, multiple numbers or\n                        strings (will be automatically converted to one-hot\n                        encoded matrix for training).\n  -i ITERATIONS, --iterations ITERATIONS\n                        [predefined in profile] Number of maximal training\n                        iterations. Default: 15\n  -fl {float32,float64}, --float_type {float32,float64}\n                        [predefined in profile] Which float type should be\n                        used, highly advised to keep float64 which may take\n                        longer, but accuracy is strongly impaired by float32.\n                        Default: float64\n  -cpu NUM_CPUS, --num_cpus NUM_CPUS\n                        Number of cpus used. Default: 1\n  -v VERBOSE, --verbose VERBOSE\n                        Set this flag to enable printing of additional\n                        information during model fitting.\n  -s SEED, --seed SEED  Seed used for training, negative values (e.g. -1) ->\n                        no seed set. Default: 7\n  -dis {NB,gaussian,log-gaussian}, --distribution {NB,gaussian,log-gaussian}\n                        [predefined in profile] distribution assumed for the\n                        measurement data.\n  -ld {NB,gaussian,log-gaussian}, --loss_distribution {NB,gaussian,log-gaussian}\n                        [predefined in profile] loss distribution used for\n                        training.\n  -pre {none,log}, --prepro_func {none,log}\n                        [predefined in profile] preprocessing function applied\n                        to input data. Distribution should be applicable for\n                        the preprocessed data.\n  -sf SF_NORM, --sf_norm SF_NORM\n                        [predefined in profile] Boolean value indicating\n                        whether sizefactor normalization should be performed.\n  -c CENTERING, --centering CENTERING\n                        [predefined in profile] Boolean value indicating\n                        whether input should be centered before model fitting.\n  -dt {log1p,log,none}, --data_trans {log1p,log,none}\n                        [predefined in profile] transformation function\n                        applied to preprocessed input data to create input for\n                        AE model.\n  -nf NOISE_FACTOR, --noise_factor NOISE_FACTOR\n                        [predefined in profile] factor which defines the\n                        amount of noise applied for a denoising autoencoder\n                        model.\n  --latent_space_model {AE,PCA}\n                        [predefined in profile] Sets the model for fitting the\n                        latent space.\n  --decoder_model {AE,PCA}\n                        [predefined in profile] Sets the model for fitting the\n                        decoder.\n  --dispersion_model {ML,MoM}\n                        [predefined in profile] Sets the model for fitting the\n                        dispersion parameters. Either ML for maximum\n                        likelihood fit or MoM for methods of moments. Has no\n                        effect for loss distributions that do not have\n                        dispersion parameters.\n  --optimizer {lbfgs}   [predefined in profile] Sets the optimizer for model\n                        fitting. Currently only L-BFGS is implemented.\n  --batch_size BATCH_SIZE\n                        batch_size used for model fitting. Default is to use\n                        all samples.\n  --nr_latent_space_features NR_LATENT_SPACE_FEATURES\n                        Limits the number of features used for fitting the\n                        latent space to the specified number k. The k most\n                        variable features will be selected. Default is to use\n                        all features.\n  --parallelize_D       If this flag is set, parallelizes fitting of decoder\n                        per feature. Default: True (do parallelize by\n                        feature).\n  --no_parallelize_D    If this flag is set, decoder fit will not be\n                        parallelized per feature. Default: do parallelize by\n                        feature.\n  --convergence CONVERGENCE\n                        Sets the convergence limit. Default value is 1e-5.\n  --effect_type [{none,zscores,fold_change,delta} [{none,zscores,fold_change,delta} ...]]\n                        [predefined in profile] Chooses the type of effect\n                        size that is calculated. Specifying multiple options\n                        is possible.\n  --fdr_method FDR_METHOD\n                        Sets the fdr adjustment method. Must be one of the\n                        methods from\n                        statsmodels.stats.multitest.multipletests. Defaults to\n                        fdr_by.\n  --max_iter_hyper MAX_ITER_HYPER\n                        Number of maximial training iterations during hyper\n                        parameter optimization. Default: 15\n  --convergence_hyper CONVERGENCE_HYPER\n                        Convergence limit used during hyper parameter\n                        optimization. Default: 1e-5\n```\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gagneurlab/py_outrider/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-outrider",
    "package_url": "https://pypi.org/project/py-outrider/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-outrider/",
    "project_urls": {
      "Homepage": "https://github.com/gagneurlab/py_outrider/"
    },
    "release_url": "https://pypi.org/project/py-outrider/0.1.0/",
    "requires_dist": [
      "tensorflow (>=2.3.0)",
      "tensorflow-probability (>=0.10.0)",
      "scikit-learn (>=0.23.1)",
      "statsmodels (>=0.11.1)",
      "numpy (>=1.19.2)",
      "pandas (>=1.1.5)",
      "anndata (>=0.7.0)",
      "nipals (>=0.5.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "Python backend package for OUTRIDER2 R package",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10311434,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae53cd03f501a96b791136c7195eb6923603c2123f382fbe83d93ed0ac3ac870",
          "md5": "8a48b24eeb52f3d01d0036f85a3a1a56",
          "sha256": "54c117078d59a321163d9e7a6b17a0ce28cf40431f1289bd992ac155902557ce"
        },
        "downloads": -1,
        "filename": "py_outrider-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a48b24eeb52f3d01d0036f85a3a1a56",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 47884,
        "upload_time": "2021-05-10T19:56:03",
        "upload_time_iso_8601": "2021-05-10T19:56:03.419718Z",
        "url": "https://files.pythonhosted.org/packages/ae/53/cd03f501a96b791136c7195eb6923603c2123f382fbe83d93ed0ac3ac870/py_outrider-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5388dad7f35cd5382e59d7e348b0b3f896a2a9114196e1489ce57d75b62ceb6d",
          "md5": "1503e83ebdf852803f7a9e31dab6f14e",
          "sha256": "8e17812d1f8294a87d2925358e1d90b8c511c22e666e04538d02201d21ef8ef0"
        },
        "downloads": -1,
        "filename": "py_outrider-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1503e83ebdf852803f7a9e31dab6f14e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33010,
        "upload_time": "2021-05-10T19:56:05",
        "upload_time_iso_8601": "2021-05-10T19:56:05.598873Z",
        "url": "https://files.pythonhosted.org/packages/53/88/dad7f35cd5382e59d7e348b0b3f896a2a9114196e1489ce57d75b62ceb6d/py_outrider-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae53cd03f501a96b791136c7195eb6923603c2123f382fbe83d93ed0ac3ac870",
        "md5": "8a48b24eeb52f3d01d0036f85a3a1a56",
        "sha256": "54c117078d59a321163d9e7a6b17a0ce28cf40431f1289bd992ac155902557ce"
      },
      "downloads": -1,
      "filename": "py_outrider-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8a48b24eeb52f3d01d0036f85a3a1a56",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 47884,
      "upload_time": "2021-05-10T19:56:03",
      "upload_time_iso_8601": "2021-05-10T19:56:03.419718Z",
      "url": "https://files.pythonhosted.org/packages/ae/53/cd03f501a96b791136c7195eb6923603c2123f382fbe83d93ed0ac3ac870/py_outrider-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5388dad7f35cd5382e59d7e348b0b3f896a2a9114196e1489ce57d75b62ceb6d",
        "md5": "1503e83ebdf852803f7a9e31dab6f14e",
        "sha256": "8e17812d1f8294a87d2925358e1d90b8c511c22e666e04538d02201d21ef8ef0"
      },
      "downloads": -1,
      "filename": "py_outrider-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1503e83ebdf852803f7a9e31dab6f14e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 33010,
      "upload_time": "2021-05-10T19:56:05",
      "upload_time_iso_8601": "2021-05-10T19:56:05.598873Z",
      "url": "https://files.pythonhosted.org/packages/53/88/dad7f35cd5382e59d7e348b0b3f896a2a9114196e1489ce57d75b62ceb6d/py_outrider-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}