{
  "info": {
    "author": "Carson Wittwer",
    "author_email": "wittwer.carson@googlemail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# LOOK: A Wrapper For A Visual Attention Model\r\n\r\nSimple wrapper code to run inference on images using the model and code from the [Looking Repo from VITA-EPFL](https://github.com/vita-epfl/looking).\r\n\r\nThe Looking Repo is an official implementation of the paper [Do pedestrians pay attention? Eye contact detection for autonomous driving](https://arxiv.org/abs/2112.04212)\r\n\r\n![alt text](https://github.com/cwittwer/look/blob/main/images/people-walking-on-pedestrian-lane-during-daytime.pedictions.png)\r\n\r\nImage taken from : https://jooinn.com/people-walking-on-pedestrian-lane-during-daytime.html . Results obtained with the model trained on JackRabbot, Nuscenes, JAAD and Kitti. The model file is available at ```models/predictor``` and can be reused for testing with the predictor. \r\n\r\n## Table of contents\r\n\r\n- [Requirements](#requirements)\r\n- [Predictor](#predictor)\r\n  * [Example command](#example-command-)\r\n- [Cite VITA-EPFL's work](#cite-VITA-EPFL's-work)\r\n\r\n\r\n## Requirements\r\n\r\n```\r\npip install python-look\r\n```\r\n\r\nUse ```3.6.9 <= python < 3.9```. Run ```pip3 install -r requirements.txt``` to get the dependencies\r\n\r\n**PLEASE DOWNLOAD THE MODEL** [HERE](https://github.com/cwittwer/look/blob/main/look/models/predictor/LookingModel_LOOK%2BPIE.p) **AND PLACE IN THE SAME LOCATION**(or name the location when create the instance of the class)\r\n\r\n## Custom Training And Model Evaluation\r\n\r\nPlease refer to the [original repo](https://github.com/vita-epfl/looking) for training custom models and evaluation of models.\r\n\r\n## Predictor\r\n\r\n<img src=\"https://github.com/cwittwer/look/blob/main/images/kitti.gif\" data-canonical-src=\"https://github.com/cwittwer/look/blob/main/images/kitti.gif\" width=\"1238\" height=\"375\" />\r\n\r\nGet predictions from the pretrained model using any image with the predictor API. The API extracts the human keypoints on the fly using [OpenPifPaf](https://openpifpaf.github.io/intro.html). **The predictor supports eye contact detection using human keypoints only.**\r\n\r\n## Run Inference\r\n<ul>\r\n  <li>Create an instance of the Predictor (with default or custom settings)</li>\r\n      \r\n      import look\r\n      pred = look.Predictor()\r\n      \r\n  <li>Run predict on an RGB OpenCV format image</li>\r\n        \r\n      pred.predict(image)\r\n      \r\n  <li>Call for results, in either data or an image with overlayed information</li>\r\n        \r\n      output_image = pred.get_output_image()\r\n      \r\n\r\n</ul>\r\n\r\n## Predictor Initialization Parameters\r\n\r\n| Parameter                 |Default Value   |Description   |\r\n| :------------------------ |:---------------|:-------------|\r\n| ```transparency``` | ```0.4``` | transparency of the overlayed poses ```float``` |\r\n| ```looking_threshold``` | ```0.5``` | eye contact threshold ```float``` |\r\n| ```mode``` | ```joints``` | prediction mode ```string``` |\r\n| ```device``` | ```'0'``` | CUDA device ```string``` |\r\n| ```pifpaf_ver``` | ```shufflenetv2k30``` | PIFPAF ARG: backbone model to use ```string``` |\r\n| ```model_path``` | ```models/predictor``` | To use custom trained model ```string``` |\r\n| ```batch_size``` | ```1``` | PIFPAF ARG: processing batch size ```int``` |\r\n| ```long_edge``` | ```None``` | PIFPAF ARG: rescale the long side of the image (aspect ratio maintained) ```int``` |\r\n| ```loader_workers``` | ```None``` | PIFPAF ARG: number of workers for data loading ```int``` |\r\n| ```disable_cuda``` | ```False``` | PIFPAF ARG: disable CUDA ```bool``` |\r\n\r\n\r\n### Example Code To Run:\r\n\r\n  ```\r\n  import cv2\r\n  import look\r\n\r\n  pred = look.Predictor()\r\n\r\n  cap = cv2.VideoCapture(0)\r\n\r\n  if cap.isOpened() == False:\r\n      print(\"Camera feed is not open\")\r\n      exit()\r\n\r\n  width = int(cap.get(3))\r\n  height = int(cap.get(4))\r\n\r\n  print(f'Image Size: {width} X {height}')\r\n\r\n  while True:\r\n      ret, frame = cap.read()\r\n\r\n      if ret == True:\r\n          pred.predict(frame)\r\n          frame = pred.get_output_image()\r\n\r\n          cv2.imshow('frame', frame)\r\n\r\n          if cv2.waitKey(1) & 0xFF == ord('q'):\r\n              break\r\n      \r\n      else:\r\n          print('Could not get frame from video')\r\n          break\r\n\r\n  cap.release()\r\n  cv2.destroyAllWindows()\r\n  ```\r\n\r\n## Credits\r\n\r\nCredits to [OpenPifPaf](https://openpifpaf.github.io/intro.html) for the pose detection part.\r\n\r\n## Cite VITA-EPFL's work\r\n\r\nIf you use our work for your research please cite VITA-EPFL :) \r\n\r\n```\r\n@misc{belkada2021pedestrians,\r\n      title={Do Pedestrians Pay Attention? Eye Contact Detection in the Wild}, \r\n      author={Younes Belkada and Lorenzo Bertoni and Romain Caristan and Taylor Mordan and Alexandre Alahi},\r\n      year={2021},\r\n      eprint={2112.04212},\r\n      archivePrefix={arXiv},\r\n      primaryClass={cs.CV}\r\n}\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cwittwer/look",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-look",
    "package_url": "https://pypi.org/project/python-look/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-look/",
    "project_urls": {
      "Homepage": "https://github.com/cwittwer/look"
    },
    "release_url": "https://pypi.org/project/python-look/0.1.0/",
    "requires_dist": [
      "tqdm",
      "numpy",
      "opencv-python (==4.7.0.72)",
      "seaborn",
      "matplotlib",
      "torch",
      "torchvision",
      "openpifpaf (==0.13.11)",
      "scikit-image (==0.19.3)",
      "Pillow",
      "scikit-learn"
    ],
    "requires_python": ">=3.6, <3.10",
    "summary": "Simple wrapper code to run inference on images using the model and code from the Looking Repo from VITA-EPFL.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17479075,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cd7d09a53bc7bef7ad9a400c94c70d6b4405094cd1a9992388961000d052677",
          "md5": "a21d51c0560900b4bd8fd1de8ea75f0d",
          "sha256": "c6dedd720ad4cad336418c40512a1096e3ddec59bd8fd61ed10e4b09e3aba734"
        },
        "downloads": -1,
        "filename": "python_look-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a21d51c0560900b4bd8fd1de8ea75f0d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <3.10",
        "size": 13480,
        "upload_time": "2023-03-28T14:23:20",
        "upload_time_iso_8601": "2023-03-28T14:23:20.250619Z",
        "url": "https://files.pythonhosted.org/packages/9c/d7/d09a53bc7bef7ad9a400c94c70d6b4405094cd1a9992388961000d052677/python_look-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a544b9ef37ed39e4aee451f45ce4764a410acb86cba12903f06fa025e6b7da7c",
          "md5": "ddcff845d678fe64c739d52c885cb4b2",
          "sha256": "c7acedc4c210b64c170ee6fd86b183df483a20e5b3a681a664b7d0928bbf1781"
        },
        "downloads": -1,
        "filename": "python-look-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ddcff845d678fe64c739d52c885cb4b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <3.10",
        "size": 14744,
        "upload_time": "2023-03-28T14:23:24",
        "upload_time_iso_8601": "2023-03-28T14:23:24.025423Z",
        "url": "https://files.pythonhosted.org/packages/a5/44/b9ef37ed39e4aee451f45ce4764a410acb86cba12903f06fa025e6b7da7c/python-look-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9cd7d09a53bc7bef7ad9a400c94c70d6b4405094cd1a9992388961000d052677",
        "md5": "a21d51c0560900b4bd8fd1de8ea75f0d",
        "sha256": "c6dedd720ad4cad336418c40512a1096e3ddec59bd8fd61ed10e4b09e3aba734"
      },
      "downloads": -1,
      "filename": "python_look-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a21d51c0560900b4bd8fd1de8ea75f0d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <3.10",
      "size": 13480,
      "upload_time": "2023-03-28T14:23:20",
      "upload_time_iso_8601": "2023-03-28T14:23:20.250619Z",
      "url": "https://files.pythonhosted.org/packages/9c/d7/d09a53bc7bef7ad9a400c94c70d6b4405094cd1a9992388961000d052677/python_look-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a544b9ef37ed39e4aee451f45ce4764a410acb86cba12903f06fa025e6b7da7c",
        "md5": "ddcff845d678fe64c739d52c885cb4b2",
        "sha256": "c7acedc4c210b64c170ee6fd86b183df483a20e5b3a681a664b7d0928bbf1781"
      },
      "downloads": -1,
      "filename": "python-look-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ddcff845d678fe64c739d52c885cb4b2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <3.10",
      "size": 14744,
      "upload_time": "2023-03-28T14:23:24",
      "upload_time_iso_8601": "2023-03-28T14:23:24.025423Z",
      "url": "https://files.pythonhosted.org/packages/a5/44/b9ef37ed39e4aee451f45ce4764a410acb86cba12903f06fa025e6b7da7c/python-look-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}