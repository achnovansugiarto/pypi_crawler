{
  "info": {
    "author": "JA",
    "author_email": "cppgent0@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "# Socket Oneline module\r\n\r\nThis module contains a simple base class for handling sockets\r\n\r\nThe communication protocol has these basic rules:\r\n\r\n- socket based using TCPIP; only one server per port\r\n- only one client connected at any time. When that client\r\n  disconnects, another client is allowed to connect.\r\n- a \"packet\" is terminated by a line feed (0x0A).\r\n- a client sends a packet (aka \"command\") to the server.\r\n- Alternatively the server may respond with zero, one or more\r\n  packets (aka \"responses\")\r\n- The server cannot initiate a response asynchronously by\r\n  itself i.e. it must wait for an incoming command to send\r\n  any packets to the client.\r\n- the following commands are predefined:\r\n    - \"ping\" : the server will respond with \"pong\". The client\r\n      can use this to confirm that the socket and communication\r\n      channel are alive and responsive\r\n    - \"disconnect\" : the server will initiate a disconnect\r\n      from the current client\r\n    - \"shutdown\" : the server will disconnect and then\r\n      shutdown\r\n    - \"invalid\" - the server has caught an exception when\r\n      converting the incoming packet to ASCII (e.g. decode\r\n      ('utf-8'))\r\n\r\n### More details\r\n\r\n- The server reads the incoming characters from the client one\r\n  character at a time.\r\n- Once it sees the 0x0A character, it sets up a string\r\n  buffer of all ASCII characters seen so far (less the 0x0A) and\r\n  calls a callback function with that string.\r\n- The user must define that callback function.\r\n- The following is up to the user to define:\r\n    - Which incoming commands are legal\r\n    - What response to send if an illegal command is received\r\n    - What response or responses should be sent for all legal\r\n      commands\r\n    - Determine whether an empty string is a legal command\r\n    - How to handle the scenario when a linefeed needs to be\r\n      part of a command\r\n    - How to handle non-ASCII scenarios e.g. Unicode or byte\r\n      strings.\r\n\r\n## Sample code\r\n\r\nsee the sample directory for a sample client and server. Use\r\ndoit script to run the sample server.\r\n\r\n    ./doit\r\n\r\n- starts a server as a background process\r\n- starts a client and sends various commands to the server\r\n- stops that client\r\n- starts another client\r\n- sends some additional commands to the server\r\n- asks the server to shutdown\r\n\r\n## Other scripts and files\r\n\r\n- do_doc: generates doxygen\r\n- do_install: installs python environment\r\n- do_lint: runs static analysis tools\r\n- do_publish: publish the python module\r\n- do_ver: runs verification scripts\r\n- doit: runs a sample client & server\r\n- srs.json: holds a list of requirements the client/server\r\n  must adhere to\r\n- test_ver.py: run by do_ver to perform verification\r\n- todo.md known issues to fix/address\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://bitbucket.org/arrizza-public/socket-oneline/get/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/arrizza-public/socket-oneline/src/master",
    "keywords": "socket,client server,simple",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "socket-oneline",
    "package_url": "https://pypi.org/project/socket-oneline/",
    "platform": null,
    "project_url": "https://pypi.org/project/socket-oneline/",
    "project_urls": {
      "Download": "https://bitbucket.org/arrizza-public/socket-oneline/get/master.zip",
      "Homepage": "https://bitbucket.org/arrizza-public/socket-oneline/src/master"
    },
    "release_url": "https://pypi.org/project/socket-oneline/0.0.16/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Client server base class over socket",
    "version": "0.0.16",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17161689,
  "releases": {
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5eddd7da84da3fda3ffb7a0243995959c4c963b41ddcc56e5eac48a376566ff3",
          "md5": "523f3b271c6614a43e97d02cb1404bba",
          "sha256": "fba03f88e38dbc612567a88327b57ed49dd3acdaf99ee90f1e9897b67f400a53"
        },
        "downloads": -1,
        "filename": "socket-oneline-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "523f3b271c6614a43e97d02cb1404bba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16288,
        "upload_time": "2023-03-04T20:16:39",
        "upload_time_iso_8601": "2023-03-04T20:16:39.592161Z",
        "url": "https://files.pythonhosted.org/packages/5e/dd/d7da84da3fda3ffb7a0243995959c4c963b41ddcc56e5eac48a376566ff3/socket-oneline-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63edcd0069fee763012ce4866025a56971f511689d43addae330c243e85a8590",
          "md5": "71570fe005cd89682ecb1596b1f1504a",
          "sha256": "c8f32432c58c17d57fecb7aef65a29a4426b7aceecfc039bdc756d69e0c1e7bf"
        },
        "downloads": -1,
        "filename": "socket-oneline-0.0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "71570fe005cd89682ecb1596b1f1504a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17123,
        "upload_time": "2023-03-05T05:17:05",
        "upload_time_iso_8601": "2023-03-05T05:17:05.311854Z",
        "url": "https://files.pythonhosted.org/packages/63/ed/cd0069fee763012ce4866025a56971f511689d43addae330c243e85a8590/socket-oneline-0.0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "63edcd0069fee763012ce4866025a56971f511689d43addae330c243e85a8590",
        "md5": "71570fe005cd89682ecb1596b1f1504a",
        "sha256": "c8f32432c58c17d57fecb7aef65a29a4426b7aceecfc039bdc756d69e0c1e7bf"
      },
      "downloads": -1,
      "filename": "socket-oneline-0.0.16.tar.gz",
      "has_sig": false,
      "md5_digest": "71570fe005cd89682ecb1596b1f1504a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17123,
      "upload_time": "2023-03-05T05:17:05",
      "upload_time_iso_8601": "2023-03-05T05:17:05.311854Z",
      "url": "https://files.pythonhosted.org/packages/63/ed/cd0069fee763012ce4866025a56971f511689d43addae330c243e85a8590/socket-oneline-0.0.16.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}