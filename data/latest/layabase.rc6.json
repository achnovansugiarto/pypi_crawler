{
  "info": {
    "author": "Colin Bounouar",
    "author_email": "colin.bounouar.dev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "<h2 align=\"center\">Database for layab</h2>\n\n<p align=\"center\">\n<a href=\"https://pypi.org/project/layabase/\"><img alt=\"pypi version\" src=\"https://img.shields.io/pypi/v/layabase\"></a>\n<a href=\"https://travis-ci.org/Colin-b/layabase\"><img alt=\"Build status\" src=\"https://api.travis-ci.org/Colin-b/layabase.svg?branch=master\"></a>\n<a href=\"https://travis-ci.org/Colin-b/layabase\"><img alt=\"Coverage\" src=\"https://img.shields.io/badge/coverage-100%25-brightgreen\"></a>\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n<a href=\"https://travis-ci.org/Colin-b/layabase\"><img alt=\"Number of tests\" src=\"https://img.shields.io/badge/tests-725 passed-blue\"></a>\n<a href=\"https://pypi.org/project/layabase/\"><img alt=\"Number of downloads\" src=\"https://img.shields.io/pypi/dm/layabase\"></a>\n</p>\n\nQuery your databases easily and transparently thanks to this module providing helpers on top of most brilliant python\ndatabase modules ([SQLAlchemy](https://docs.sqlalchemy.org) and [PyMongo](https://api.mongodb.com/python/current/)).\n\n## Table of Contents\n\n  * [Features](#features)\n  * [How to use](#usage)\n  * [Technical documentation](#technical)\n\n## Features\n\nFeatures:\n\n- Audit\n  - Automatic audit support (if [`layabauth`](https://pypi.org/project/layabauth/) python module is used, user will be logged as well)\n- Rollback\n  - Automatic rollback support (when history is activated)\n- History\n  - Automatic history management\n- Validation\n  - Enforce proper values are received (type, restricted choices, required fields)\n- Conversion\n  - Converting JSON received data to appropriate database data type\n  - Converting Database data type to JSON\n- Health check\n- Smart queries\n  - HTTP query parameters are extracted and converted from HTTP query arguments\n    - Special parameter: order_by (__Feature not available for mongo__)\n    - Special parameter: limit\n    - Special parameter: offset\n  - Query on multiple equality via `field=value1&field=value2`\n  - Query on excluded intervals via `field=>value1&field=<value2`\n  - Query on included intervals via `field=>=value1&field=<=value2`\n  - Query on restricted values via `field=!=value1&field=!=value2` (__Feature not yet available__)\n  - Query via a mix of all those features if needed as long as it make sense to you\n  - Query regex thanks to `*` character via `field=v*lue` (__Feature not yet available for mongo__) \n\n## Usage\n\nYou will define a class to help you with the manipulation of:\n\n * A collection if this is a MongoDB you are connecting to.\n * A table if this is a non-Mongo database you are connecting to.\n\nThis class will describe:\n\n * The document fields if this is a MongoDB you are connecting to.\n * The table columns if this is a non-Mongo database you are connecting to.\n\nBy providing this class to a layabase.CRUDController instance, you will automatically have all features described in the previous section.\n\n## CRUD Controller\n\nlayabase.CRUDController provides C.R.U.D. methods (and more, as listed in features) on a specified table or mongo collection.\n\n### Controller definition\n\n```python\nimport layabase\n\n# This will be the class describing your table or collection as defined in Table or Collection sections afterwards\ntable_or_collection = None \n\ncontroller = layabase.CRUDController(table_or_collection)\n```\n\n### Controller features\n\n#### Retrieving data\n\nYou can retrieve a list of rows or documents described as dictionaries:\n\n```python\nimport layabase\n\n# This will be the controller as created in Controller definition section\ncontroller: layabase.CRUDController = None\n\nall_rows_or_documents = controller.get({})\n\nfiltered_rows_or_documents = controller.get({\"value\": 'value1'})\n```\n\nYou can retrieve a single row or document described as dictionary:\n\n```python\nimport layabase\n\n# This will be the controller as created in Controller definition section\ncontroller: layabase.CRUDController = None\n\nrow_or_document = controller.get_one({\"value\": 'value1'})\n```\n\n#### Inserting data\n\nYou can insert many rows or documents at once using dictionary representation:\n\n```python\nimport layabase\n\n# This will be the controller as created in Controller definition section\ncontroller: layabase.CRUDController = None\n\ninserted_rows_or_documents = controller.post_many([\n    {'key': 'key1', 'value': 'value1'},\n    {'key': 'key2', 'value': 'value2'},\n])\n```\n\nYou can insert a single row or document using dictionary representation:\n\n```python\nimport layabase\n\n# This will be the controller as created in Controller definition section\ncontroller: layabase.CRUDController = None\n\ninserted_row_or_document = controller.post({'key': 'key1', 'value': 'value1'})\n```\n\n#### Updating data\n\nYou can update many rows or documents at once using (partial) dictionary representation:\n\n```python\nimport layabase\n\n# This will be the controller as created in Controller definition section\ncontroller: layabase.CRUDController = None\n\nupdated_rows_or_documents = controller.put_many([{'key': 'key1', 'value': 'new value1'}, {'key': 'key2', 'value': 'new value2'}])\n```\n\nYou can update a single row or document using (partial) dictionary representation:\n\n```python\nimport layabase\n\n# This will be the controller as created in Controller definition section\ncontroller: layabase.CRUDController = None\n\nupdated_row_or_document = controller.put({'key': 'key1', 'value': 'new value1'})\n```\n\n#### Removing data\n\nYou can remove a subset of rows or documents:\n\n```python\nimport layabase\n\n# This will be the controller as created in Controller definition section\ncontroller: layabase.CRUDController = None\n\nnb_removed_rows_or_documents = controller.delete({\"key\": 'key1'})\n```\n\nYou can remove all rows or documents:\n\n```python\nimport layabase\n\n# This will be the controller as created in Controller definition section\ncontroller: layabase.CRUDController = None\n\nnb_removed_rows_or_documents = controller.delete({})\n```\n\n#### Retrieving table or collection mapping\n\n```python\nimport layabase\n\n# This will be the controller as created in Controller definition section\ncontroller: layabase.CRUDController = None\n\n# non mongo description = {'table': 'MyTable', 'key': 'key', 'value': 'value'}\n# mongo description = {'table': 'MyCollection', 'key': 'key', 'value': 'value'}\ndescription = controller.get_model_description()\n```\n\n#### Auditing\n\n```python\nimport layabase\n\n# This will be the controller as created in Controller definition section\ncontroller: layabase.CRUDController = None\n\nall_audit_models_as_dict_list = controller.get_audit({})\n\nfiltered_audit_models_as_dict_list = controller.get_audit({\"value\": 'value1'})\n```\n\n## Link to a database\n\n### Link to a Mongo database\n\n```python\nimport layabase\n\n\n# Should be a list of CRUDController inherited classes\nmy_controllers = []\nlayabase.load(\"mongodb://host:port/server_name\", my_controllers)\n```\n\n### Link to a Mongo in-memory database\n\n```python\nimport layabase\n\n\n# Should be a list of CRUDController inherited classes\nmy_controllers = []\nlayabase.load(\"mongomock\", my_controllers)\n```\n\n### Link to a non Mongo database\n\n```python\nimport layabase\n\n\n# Should be a list of CRUDController inherited classes\nmy_controllers = []\nlayabase.load(\"your_connection_string\", my_controllers)\n```\n\n## Relational databases (non-Mongo)\n\n[SQLAlchemy](https://docs.sqlalchemy.org) is the underlying framework used to manipulate relational databases.\n\nTo create a representation of a table you will need to create a [Mixin](https://docs.sqlalchemy.org/en/13/orm/extensions/declarative/mixins.html#declarative-mixins).\n\n### Table\n\nYou can add extra information to a column thanks to the info parameter.\n\nIf the field should be required on queries: \n```python\ninfo={'marshmallow': {\"required_on_query\": True}}\n```\n\nIf `*` character in queries values should be interpreted as any characters: \n```python\ninfo={'marshmallow': {\"interpret_star_character\": True}}\n```\n\nIf the field can be queried with comparison signs such as >, <, >=, <=: \n```python\ninfo={'marshmallow': {\"allow_comparison_signs\": True}}\n```\n\nWhen querying, provide a single value of a list of values.\n\nif provided in `order_by` parameter, it will be considered as ascending order, add ` desc` at the end of the value to explicitly order by in descending order.\n\nIf the field allow comparison signs (`allow_comparison_signs`), you can add `>`, `>=`, `<`, `<=` in front of the value.\n\n```python\nfrom sqlalchemy import Column, String\n\nclass MyTable:\n    __tablename__ = \"my_table\"\n\n    key = Column(String, primary_key=True)\n    value = Column(String)\n```\n\n## MongoDB (non-relational)\n\n[PyMongo](https://api.mongodb.com/python/current/) is the underlying framework used to manipulate MongoDB.\n\nTo create a representation of a collection you will need to create a Mixin class.\n\nTo link your model to the underlying collection, you will need to provide a connection string.\n\n### Collection\n\n```python\nfrom layabase.mongo import Column\n\nclass MyCollection:\n    __collection_name__ = \"my_collection\"\n\n    key = Column(str, is_primary_key=True)\n    dict_value = Column(dict)\n```\n\n##### String fields\n\nFields containing string can be described using layabase.mongo.Column\n\n```python\nfrom layabase.mongo import Column\n\nclass MyCollection:\n    __collection_name__ = \"my_collection\"\n\n    key = Column()\n```\n\nAs string is considered as the default field type, not providing the type explicitly when creating a column is valid.\n\nThe following parameters can also be provided when creating a column of string type:\n\n<table>\n    <th>\n        <td><em>Description</em></td>\n        <td><em>Default value</em></td>\n    </th>\n    <tr>\n        <td><strong>choices</strong></td>\n        <td>Restrict valid values. Should be a list of string or a function (without parameters) returning a list of string.</td>\n        <td>None (unrestricted)</td>\n    </tr>\n    <tr>\n        <td><strong>default_value</strong></td>\n        <td>Default field value returned to the client if field is not set. Should be a string or a function (with dictionary as parameter) returning a string.</td>\n        <td>None</td>\n    </tr>\n    <tr>\n        <td><strong>description</strong></td>\n        <td>Field description used in OpenAPI definition and in error messages. Should be a string value.</td>\n        <td>None</td>\n    </tr>\n    <tr>\n        <td><strong>index_type</strong></td>\n        <td>If and how this field should be indexed. Value should be one of IndexType enum.</td>\n        <td>None (not indexed)</td>\n    </tr>\n    <tr>\n        <td><strong>allow_none_as_filter</strong></td>\n        <td>If None value should be kept in queries (GET/DELETE). Should be a boolean value.</td>\n        <td>False (remove None from queries)</td>\n    </tr>\n    <tr>\n        <td><strong>is_primary_key</strong></td>\n        <td>If this field value is not allowed to be modified after insert. Should be a boolean value.</td>\n        <td>False (field value can always be modified)</td>\n    </tr>\n    <tr>\n        <td><strong>is_nullable</strong></td>\n        <td>If field value is optional. Should be a boolean value. Note that it is not allowed to force False if field has a default value.</td>\n        <td>\n        Default to True if field is not a primary key.\n        Default to True if field has a default value.\n        Otherwise default to False.</td>\n    </tr>\n    <tr>\n        <td><strong>is_required</strong></td>\n        <td>If field value must be specified in client requests. Use it to avoid heavy requests. Should be a boolean value.</td>\n        <td>False (optional)</td>\n    </tr>\n    <tr>\n        <td><strong>min_length</strong></td>\n        <td>Minimum value length.</td>\n        <td>None (no minimum length)</td>\n    </tr>\n    <tr>\n        <td><strong>max_length</strong></td>\n        <td>Maximum value length.</td>\n        <td>None (no maximum length)</td>\n    </tr>\n    <tr>\n        <td><strong>allow_comparison_signs</strong></td>\n        <td>If field value should be interpreted to extract >, >=, <, <= prefix.</td>\n        <td>False (value is kept as provided for equlity comparison)</td>\n    </tr>\n</table>\n\n##### Dictionary fields\n\nFields containing a dictionary can be described using layabase.mongo.DictColumn\n\n```python\nfrom layabase.mongo import DictColumn\n\nclass MyCollection:\n    __collection_name__ = \"my_collection\"\n\n    key = DictColumn()\n```\n\n##### List fields\n\nFields containing a list can be described using layabase.mongo.ListColumn\n\n```python\nfrom layabase.mongo import ListColumn, Column\n\nclass MyCollection:\n    __collection_name__ = \"my_collection\"\n\n    key = ListColumn(Column())\n```\n\n## How to install\n1. [python 3.6+](https://www.python.org/downloads/) must be installed\n2. Use pip to install module:\n```sh\npython -m pip install layabase\n```\n\nNote that depending on what you want to connect to, you will have to use a different module name than layabase:\n* Mongo database: layabase[mongo]\n* Mongo in-memory database: layabase mongomock\n* Other database: layabase[sqlalchemy]\n\n## Technical\n\n * [Requirements](#developer-requirements)\n * [Usage](#developer-usage)\n\n## Developer-Requirements\n\nThe module requires the following to run:\n\n  * [python 3.6+](https://www.python.org/downloads/)\n\n## Developer-Usage\n\n## Installation\n\nDependencies can be installed via `setup.py`:\n\n```sh\npython -m pip install .\n```\n\n### Testing\n\nTest specific dependencies can be installed via `setup.py` `testing` optional:\n\n```sh\npython -m pip install .[testing]\n```\n\nThen you can launch tests using [pytest](http://doc.pytest.org/en/latest/).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/layabase/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://colin-b.github.io/layabase/",
    "keywords": "mongo,sqla,db,flask",
    "license": "MIT",
    "maintainer": "Colin Bounouar",
    "maintainer_email": "colin.bounouar.dev@gmail.com",
    "name": "layabase",
    "package_url": "https://pypi.org/project/layabase/",
    "platform": "Windows",
    "project_url": "https://pypi.org/project/layabase/",
    "project_urls": {
      "Changelog": "https://github.com/Colin-b/layabase/blob/master/CHANGELOG.md",
      "Download": "https://pypi.org/project/layabase/",
      "GitHub": "https://github.com/Colin-b/layabase",
      "Homepage": "https://colin-b.github.io/layabase/",
      "Issues": "https://github.com/Colin-b/layabase/issues"
    },
    "release_url": "https://pypi.org/project/layabase/3.5.1/",
    "requires_dist": [
      "layaberr (==2.*)",
      "pymongo[tls] (==3.*) ; extra == 'mongo'",
      "iso8601 (==0.1.*) ; extra == 'mongo'",
      "marshmallow (==3.*) ; extra == 'sqlalchemy'",
      "SQLAlchemy (==1.*) ; extra == 'sqlalchemy'",
      "marshmallow-sqlalchemy (==0.21.*) ; extra == 'sqlalchemy'",
      "pytest-flask (==0.15.*) ; extra == 'testing'",
      "mongomock (==3.*) ; extra == 'testing'",
      "pytest-cov (==2.*) ; extra == 'testing'",
      "pymongo[tls] (==3.*) ; extra == 'testing'",
      "iso8601 (==0.1.*) ; extra == 'testing'",
      "marshmallow (==3.*) ; extra == 'testing'",
      "SQLAlchemy (==1.*) ; extra == 'testing'",
      "marshmallow-sqlalchemy (==0.21.*) ; extra == 'testing'"
    ],
    "requires_python": ">=3.6",
    "summary": "Database for layab",
    "version": "3.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8371363,
  "releases": {
    "3.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01564706ae5bc206e8f345a523f94c09635e451cf729bae6ac67e28aa94991ae",
          "md5": "ba9c8f760c56f4190d911d2289e9b908",
          "sha256": "5066f63e23df27bc2d73e8f1b258e3e58f8a7d7d96c67889f0043f63d446435b"
        },
        "downloads": -1,
        "filename": "layabase-3.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba9c8f760c56f4190d911d2289e9b908",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40890,
        "upload_time": "2019-12-02T23:25:40",
        "upload_time_iso_8601": "2019-12-02T23:25:40.716321Z",
        "url": "https://files.pythonhosted.org/packages/01/56/4706ae5bc206e8f345a523f94c09635e451cf729bae6ac67e28aa94991ae/layabase-3.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfdbb331bf96385af35e4f9d726be5ca041668ab315b08bb801b6d871bc04d13",
          "md5": "0c2cca79e5a5520a6e9146d18c9d1da2",
          "sha256": "e70262da7370afeb027228fc7cf031d4634078fe55b849bda714ac3bfbec13ee"
        },
        "downloads": -1,
        "filename": "layabase-3.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0c2cca79e5a5520a6e9146d18c9d1da2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 37812,
        "upload_time": "2019-12-02T23:25:43",
        "upload_time_iso_8601": "2019-12-02T23:25:43.020404Z",
        "url": "https://files.pythonhosted.org/packages/cf/db/b331bf96385af35e4f9d726be5ca041668ab315b08bb801b6d871bc04d13/layabase-3.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1937acd3b6caf1b414094797a5b8de6c3f0ee4186c6754deb8bd18741dd4fece",
          "md5": "2056250487787ffbc16bf9dd4f23969b",
          "sha256": "de74f0e62a84f9b83a3b8c3997b6b3b3944ffabc9cbe0f938ed9a69e36239abb"
        },
        "downloads": -1,
        "filename": "layabase-3.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2056250487787ffbc16bf9dd4f23969b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40934,
        "upload_time": "2020-01-07T16:05:44",
        "upload_time_iso_8601": "2020-01-07T16:05:44.956697Z",
        "url": "https://files.pythonhosted.org/packages/19/37/acd3b6caf1b414094797a5b8de6c3f0ee4186c6754deb8bd18741dd4fece/layabase-3.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68e964b161578c64fa8690da9b2cf575a40ec2e88939b2ccbb8ddeb651fcc7ff",
          "md5": "a7bbe64c5f681d7c7230ae2a03836379",
          "sha256": "5721dcfc68e15c0927f53f6e36e1a323dae2b0302b9aaa754c88188841902c89"
        },
        "downloads": -1,
        "filename": "layabase-3.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7bbe64c5f681d7c7230ae2a03836379",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 37885,
        "upload_time": "2020-01-07T16:05:46",
        "upload_time_iso_8601": "2020-01-07T16:05:46.251233Z",
        "url": "https://files.pythonhosted.org/packages/68/e9/64b161578c64fa8690da9b2cf575a40ec2e88939b2ccbb8ddeb651fcc7ff/layabase-3.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cfb96e7d6523e0f6c2f0e3f6499b01e7e1344a72e8e3e64fd845ac6c170334a",
          "md5": "42052f4ed6327087bd80f256a0d4cd5b",
          "sha256": "3465f8a0860d61822db9f25bf154adfc5617aaafc0df6b389ac52ccaf7eab33d"
        },
        "downloads": -1,
        "filename": "layabase-3.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42052f4ed6327087bd80f256a0d4cd5b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40939,
        "upload_time": "2020-01-30T13:27:54",
        "upload_time_iso_8601": "2020-01-30T13:27:54.311697Z",
        "url": "https://files.pythonhosted.org/packages/9c/fb/96e7d6523e0f6c2f0e3f6499b01e7e1344a72e8e3e64fd845ac6c170334a/layabase-3.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47c5df1fe05f94872cdd456cae804640336f4ed89eda535d3c275abb2ee3a03c",
          "md5": "0e0b48b49b3aee2fe7ff2f9daf725816",
          "sha256": "5efae810ae1da241c7df4a0bcd7bd2939b4331b3a86d6b284af82c6b936db9ba"
        },
        "downloads": -1,
        "filename": "layabase-3.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e0b48b49b3aee2fe7ff2f9daf725816",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 37894,
        "upload_time": "2020-01-30T13:27:55",
        "upload_time_iso_8601": "2020-01-30T13:27:55.822344Z",
        "url": "https://files.pythonhosted.org/packages/47/c5/df1fe05f94872cdd456cae804640336f4ed89eda535d3c275abb2ee3a03c/layabase-3.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "393923240373b55ca1f784c664383c074f9656dce7dd4840e2976f43af7dda89",
          "md5": "9634be9848ea7e7f347825af44ad9c93",
          "sha256": "22de1940757c98628f5a53fa3c0d987cc67527dc7666cce812fca99a46c0ff3c"
        },
        "downloads": -1,
        "filename": "layabase-4.0.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9634be9848ea7e7f347825af44ad9c93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41351,
        "upload_time": "2020-10-06T18:17:58",
        "upload_time_iso_8601": "2020-10-06T18:17:58.928951Z",
        "url": "https://files.pythonhosted.org/packages/39/39/23240373b55ca1f784c664383c074f9656dce7dd4840e2976f43af7dda89/layabase-4.0.0.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "234aefa5d54120428d66dd03b6c963bcdf6d7d954f98db9b6e5c56beda85888a",
          "md5": "7a54f37f9f5546fd9f1219d3b6d53050",
          "sha256": "4c73a34fecea9496c4d42a94b994048b34a7db44850f3eb03fae2a6626145831"
        },
        "downloads": -1,
        "filename": "layabase-4.0.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "7a54f37f9f5546fd9f1219d3b6d53050",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 38896,
        "upload_time": "2020-10-06T18:18:00",
        "upload_time_iso_8601": "2020-10-06T18:18:00.489730Z",
        "url": "https://files.pythonhosted.org/packages/23/4a/efa5d54120428d66dd03b6c963bcdf6d7d954f98db9b6e5c56beda85888a/layabase-4.0.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a6cb784a3e8b6547ca0ca2b5ed0fa0c0a2444efbf3186a0be01f92d9ea93acf",
          "md5": "a7c0c68b602c473e9dafccb6580e9980",
          "sha256": "20a0585a35223d2cffaa55afd165452dba5965f5073e0019d383cb0322ed73fc"
        },
        "downloads": -1,
        "filename": "layabase-4.0.0.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7c0c68b602c473e9dafccb6580e9980",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41367,
        "upload_time": "2020-10-07T17:51:21",
        "upload_time_iso_8601": "2020-10-07T17:51:21.077960Z",
        "url": "https://files.pythonhosted.org/packages/6a/6c/b784a3e8b6547ca0ca2b5ed0fa0c0a2444efbf3186a0be01f92d9ea93acf/layabase-4.0.0.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f535450e25df283ee82688743bf8f001dc614a5e86ee8e78aba7b9cbc06e1f67",
          "md5": "81d2011e7d34028144ba3c83c9922445",
          "sha256": "3f86e02c8c77ba7cf8cbff969608469f558824a1a2ed7893f498785f648c4b87"
        },
        "downloads": -1,
        "filename": "layabase-4.0.0.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "81d2011e7d34028144ba3c83c9922445",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 37894,
        "upload_time": "2020-10-07T17:51:22",
        "upload_time_iso_8601": "2020-10-07T17:51:22.410864Z",
        "url": "https://files.pythonhosted.org/packages/f5/35/450e25df283ee82688743bf8f001dc614a5e86ee8e78aba7b9cbc06e1f67/layabase-4.0.0.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0.dev2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "986b56bb471e21162b7ea6b91c329b03a1811f950d5290741de80dd25ee50d7c",
          "md5": "24085ea826a9ecfebf4257dd3963ad07",
          "sha256": "0710c7a5b9358e6857054bb1009cce7955b1a0587372c44cd64a786b742cf62e"
        },
        "downloads": -1,
        "filename": "layabase-4.0.0.dev2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24085ea826a9ecfebf4257dd3963ad07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41388,
        "upload_time": "2020-10-08T20:59:42",
        "upload_time_iso_8601": "2020-10-08T20:59:42.526598Z",
        "url": "https://files.pythonhosted.org/packages/98/6b/56bb471e21162b7ea6b91c329b03a1811f950d5290741de80dd25ee50d7c/layabase-4.0.0.dev2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11ad144e8a1ff648b689152dc794ac63ffc1c201d3e87bc953c36b0340b4934f",
          "md5": "e6656c18722993309f69e94f11fa0e0c",
          "sha256": "215c9be692da089bff559065f1114fffda903a7ceb648470d37af7ec32ae11b0"
        },
        "downloads": -1,
        "filename": "layabase-4.0.0.dev2.tar.gz",
        "has_sig": false,
        "md5_digest": "e6656c18722993309f69e94f11fa0e0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 37930,
        "upload_time": "2020-10-08T20:59:43",
        "upload_time_iso_8601": "2020-10-08T20:59:43.669904Z",
        "url": "https://files.pythonhosted.org/packages/11/ad/144e8a1ff648b689152dc794ac63ffc1c201d3e87bc953c36b0340b4934f/layabase-4.0.0.dev2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9cfb96e7d6523e0f6c2f0e3f6499b01e7e1344a72e8e3e64fd845ac6c170334a",
        "md5": "42052f4ed6327087bd80f256a0d4cd5b",
        "sha256": "3465f8a0860d61822db9f25bf154adfc5617aaafc0df6b389ac52ccaf7eab33d"
      },
      "downloads": -1,
      "filename": "layabase-3.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "42052f4ed6327087bd80f256a0d4cd5b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 40939,
      "upload_time": "2020-01-30T13:27:54",
      "upload_time_iso_8601": "2020-01-30T13:27:54.311697Z",
      "url": "https://files.pythonhosted.org/packages/9c/fb/96e7d6523e0f6c2f0e3f6499b01e7e1344a72e8e3e64fd845ac6c170334a/layabase-3.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47c5df1fe05f94872cdd456cae804640336f4ed89eda535d3c275abb2ee3a03c",
        "md5": "0e0b48b49b3aee2fe7ff2f9daf725816",
        "sha256": "5efae810ae1da241c7df4a0bcd7bd2939b4331b3a86d6b284af82c6b936db9ba"
      },
      "downloads": -1,
      "filename": "layabase-3.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0e0b48b49b3aee2fe7ff2f9daf725816",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 37894,
      "upload_time": "2020-01-30T13:27:55",
      "upload_time_iso_8601": "2020-01-30T13:27:55.822344Z",
      "url": "https://files.pythonhosted.org/packages/47/c5/df1fe05f94872cdd456cae804640336f4ed89eda535d3c275abb2ee3a03c/layabase-3.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}