{
  "info": {
    "author": "Bart Broere",
    "author_email": "mail@bartbroere.eu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Internet"
    ],
    "description": "[![Build Status](https://travis-ci.org/bartbroere/PythonPusherClient.svg?branch=master)](https://travis-ci.org/bartbroere/PythonPusherClient)\n\npusherclientb\n=============\n\npusherclientb is a python module for handling pusher websockets. This is a branched off version of the original (pusherclient) by Erik Kulyk. It is fully backwards compatible, and in addition provides decoded messages and custom arguments in the callback.\n\nInstallation\n------------\n\nSimply run \"python setup.py install\".\n\nThis module depends on websocket-client module available from: <http://github.com/liris/websocket-client>\n\nExample\n-------\n\nExample of using this pusher client to consume websockets::\n\n    import pusherclient\n\n    # Add a logging handler so we can see the raw communication data\n    import logging\n    root = logging.getLogger()\n    root.setLevel(logging.INFO)\n    ch = logging.StreamHandler(sys.stdout)\n    root.addHandler(ch)\n\n    global pusher\n\n    # We can't subscribe until we've connected, so we use a callback handler\n    # to subscribe when able\n    def connect_handler(data):\n        channel = pusher.subscribe('mychannel')\n        channel.bind('myevent', callback)\n\n    pusher = pusherclient.Pusher(appkey)\n    pusher.connection.bind('pusher:connection_established', connect_handler)\n    pusher.connect()\n\n    while True:\n        # Do other things in the meantime here...\n        time.sleep(1)\n\nSending pusher events to a channel can be done simply using the pusher client supplied by pusher.  You can get it here: <http://github.com/newbamboo/pusher_client_python>\n\n    import pusher\n    pusher.app_id = app_id\n    pusher.key = appkey\n\n    p = pusher.Pusher()\n    p['mychannel'].trigger('myevent', 'mydata')\n\nThanks\n------\n\nBuilt using the websocket-client module from <http://github.com/liris/websocket-client>.\nThe ruby gem by Logan Koester which provides a similar service was also very helpful for a reference.  Take a look at it here: <http://github.com/logankoester/pusher-client>.\n\nCopyright\n---------\n\nMIT License - See LICENSE for details.\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bartbroere/PythonPusherClient",
    "keywords": "pusher websocket client",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pusherclientb",
    "package_url": "https://pypi.org/project/pusherclientb/",
    "platform": "",
    "project_url": "https://pypi.org/project/pusherclientb/",
    "project_urls": {
      "Homepage": "https://github.com/bartbroere/PythonPusherClient"
    },
    "release_url": "https://pypi.org/project/pusherclientb/0.3.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Pusher websocket client for python",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2481458,
  "releases": {
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd64d70852f9c4848b514da0e692051fadd045f2e7a221a4f586c870d6f7fc24",
          "md5": "e772ef9d1854d289453442dda47fc102",
          "sha256": "ac7c77b1b95c7ac03fbd9a713ec3039c62ff52ce3ab9cc4c2259104812e9491e"
        },
        "downloads": -1,
        "filename": "pusherclientb-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e772ef9d1854d289453442dda47fc102",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6632,
        "upload_time": "2016-11-24T19:52:19",
        "upload_time_iso_8601": "2016-11-24T19:52:19.361535Z",
        "url": "https://files.pythonhosted.org/packages/bd/64/d70852f9c4848b514da0e692051fadd045f2e7a221a4f586c870d6f7fc24/pusherclientb-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd64d70852f9c4848b514da0e692051fadd045f2e7a221a4f586c870d6f7fc24",
        "md5": "e772ef9d1854d289453442dda47fc102",
        "sha256": "ac7c77b1b95c7ac03fbd9a713ec3039c62ff52ce3ab9cc4c2259104812e9491e"
      },
      "downloads": -1,
      "filename": "pusherclientb-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e772ef9d1854d289453442dda47fc102",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6632,
      "upload_time": "2016-11-24T19:52:19",
      "upload_time_iso_8601": "2016-11-24T19:52:19.361535Z",
      "url": "https://files.pythonhosted.org/packages/bd/64/d70852f9c4848b514da0e692051fadd045f2e7a221a4f586c870d6f7fc24/pusherclientb-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}