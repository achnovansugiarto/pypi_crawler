{
  "info": {
    "author": "Josh Burnett",
    "author_email": "josh_github@burnettsonline.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n# multitimer\n\nA pure-python auto-repeating timer that can be stopped and restarted multiple times.  \n\n`multitimer.MultiTimer` is similar to\n[`threading.Timer`](https://docs.python.org/3/library/threading.html#timer-objects),\nbut allows the timer to repeat multiple times.  Additionally, `MultiTimer` can be started and\nstopped multiple times (unlike `threading.Timer`).\n\n## Overview\n\n`multitimer.MultiTimer(interval, function, args=None, kwargs=None, count=-1, runonstart=True)`\n\nCreates a timer that will run _function_ with arguments _args_ and keyword\narguments _kwargs_, after _interval_ seconds have passed, a total of _count_ times.\n\nIf _runonstart_==True, then _function_ will be called immediately when `.start()` is called.\n\nIf _args_ is None (the default) then an empty list will be used. If _kwargs_ is None (the\ndefault) then an empty dict will be used.\n\nIf _count_ == -1 (the default), the timer will repeat indefinitely, or until `.stop()`\nis called.\n\nStart this timer by calling `.start()`.  Once started, calling `.stop()` will terminate the\ntimer's loop and not produce any further calls to _function_. Note that if _function_ is\ncurrently in the middle of running, it will finish the current iteration and not be interrupted.\n\n_ontimeout_ and _params_ were deprecated in 0.2 and replaced by _function_, _args_\nand _kwargs_ to match the `threading.Timer` API.  _ontimeout_ and _params_ have been removed in 0.3.\n\nSince the underlying mechanism is purely based on python threads & events, the overall processor\nload & memory usage are minimal.  Note that the timing accuracy is typically to within about 10 ms,\ndepending on the platform.\n\n\n## Installation & usage\n\n```bash\n$ pip install multitimer\n```\n\n```python\nimport multitimer\nimport time\n\ndef job():\n\tprint(\"I'm working...\")\n\n# This timer will run job() five times, one second apart\ntimer = multitimer.MultiTimer(interval=1, function=job, count=5)\n\n# Pauses for one interval before starting job() five times\ntimer = multitimer.MultiTimer(interval=1, function=job, count=5, runonstart=False)\n\n\n# You can specify input parameters for the _function_ function\ndef job2(foo):\n\tprint(foo)\n\ntimer = multitimer.MultiTimer(interval=1, function=job2, kwargs={'foo':\"I'm still working...\"})\n\n# Also, this timer would run indefinitely...\ntimer.start()\n\n# ...unless it gets stopped\ntime.sleep(5)\ntimer.stop()\n\n# and potentially waited for (in case an iteration was in progress)\ntimer.join()\n\n\n# If a mutable object is used to specify input parameters, it can be changed after starting the timer\noutput = {'foo':\"Doin' my job again.\"}\ntimer = multitimer.MultiTimer(interval=1, function=job2, kwargs=output, count=5)\ntimer.start()\n\ntime.sleep(3.5)\noutput['foo'] = \"I'd like to be done now.\"\n\n# Note: While this feature can be useful, be aware that changing arguments while the timer is running may result in some\n# race conditions. multitimer is multithreaded but does not currently have any sort of locking mechanisms in place to\n# ensure that operations are atomic. \n\n\n# And a MultiTimer can be re-started by just calling start() again\ntime.sleep(2)\noutput['foo'] = 'Please just let me be...'\ntimer.start()\ntime.sleep(4.5)\ntimer.stop()\n```\n\nReleases\n--------\n\n### 0.3, 2020-11-27\n\n* Add a .join() method to wait for a timer that has been stopped to complete its final iteration. (Thanks, @pakal!)\n* Remove _ontimeout_ and _params_ arguments (deprecated in 0.2)\n* Properly pass args to RepeatingTimer\n* Fix error if .stop() called before .start()\n\n### 0.2, 2019-01-17\n\n* Replace time.clock() calls with time.perf_counter(), as [time.clock is deprecated since python 3.3](https://docs.python.org/3/library/time.html#time.clock) and doesn't provide consistent behavior across different platforms.\n* Replace _ontimeout_ with _function_, and _params_ with _args_ and _kwargs_, to match the `threading.Timer` API.\n_ontimeout_ and _params_ are deprecated and will be removed in v0.3.\n* Add lots of code comments to better explain how the module works. \n\n### 0.1, 2018-02-15\n\n* Initial release\n\nMeta\n----\n\nJosh Burnett - josh_github@burnettsonline.org\n\nDistributed under the MIT license. See `LICENSE.txt` for more information.\n\n<https://github.com/joshburnett/multitimer>\n\nHope you find this useful!\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "timer",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "multitimer",
    "package_url": "https://pypi.org/project/multitimer/",
    "platform": "",
    "project_url": "https://pypi.org/project/multitimer/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/multitimer/0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A pure-python periodic timer that can be started multiple times",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8764328,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93f64a5f3f1bfcf41d6ab284fabdbf74cee9edf7de235f46be7d8725c8e7ec64",
          "md5": "6c0a66904b8026ef412e2b6defde60eb",
          "sha256": "e83ed640a61db7dc3feaa34e8b13742461ac3e4762845b0806ddca13d6424fe7"
        },
        "downloads": -1,
        "filename": "multitimer-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c0a66904b8026ef412e2b6defde60eb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4284,
        "upload_time": "2018-02-15T11:05:43",
        "upload_time_iso_8601": "2018-02-15T11:05:43.794726Z",
        "url": "https://files.pythonhosted.org/packages/93/f6/4a5f3f1bfcf41d6ab284fabdbf74cee9edf7de235f46be7d8725c8e7ec64/multitimer-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bc0de9aa647aac4466fb3a97c255721742411ef1de3069c7af175593ce7af07",
          "md5": "d0f2711e9bb4ac1c5cc70aaabb67a029",
          "sha256": "66b7576c42a7e28e88b671f3ab46448d0545f203bb218aab853ddff684b0f168"
        },
        "downloads": -1,
        "filename": "multitimer-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d0f2711e9bb4ac1c5cc70aaabb67a029",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4556,
        "upload_time": "2018-02-15T11:05:45",
        "upload_time_iso_8601": "2018-02-15T11:05:45.329747Z",
        "url": "https://files.pythonhosted.org/packages/0b/c0/de9aa647aac4466fb3a97c255721742411ef1de3069c7af175593ce7af07/multitimer-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36c9207cf989b83eda72424a86b06bb077fca8771490c2b1a5ecd490233be7f4",
          "md5": "20f12d2894e3b89c2a47dbb8002f254d",
          "sha256": "c1d1142d12f525aa44c76ab0c07a34ab3fc09c8827e116bf532da67294b3de35"
        },
        "downloads": -1,
        "filename": "multitimer-0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "20f12d2894e3b89c2a47dbb8002f254d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 5088,
        "upload_time": "2019-01-17T17:17:22",
        "upload_time_iso_8601": "2019-01-17T17:17:22.945271Z",
        "url": "https://files.pythonhosted.org/packages/36/c9/207cf989b83eda72424a86b06bb077fca8771490c2b1a5ecd490233be7f4/multitimer-0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ce7c4a2772a874df75afc6aa00646bafdcfa2fe9f20a1bce56add58df5adad7",
          "md5": "86ae682b7f0cad007c1c3604ee33cf4b",
          "sha256": "deac99a922061cd9625255ce52f1924d386a8b73de657d8b1d03f349e34d5328"
        },
        "downloads": -1,
        "filename": "multitimer-0.2.zip",
        "has_sig": false,
        "md5_digest": "86ae682b7f0cad007c1c3604ee33cf4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12569,
        "upload_time": "2019-01-17T17:17:24",
        "upload_time_iso_8601": "2019-01-17T17:17:24.270663Z",
        "url": "https://files.pythonhosted.org/packages/5c/e7/c4a2772a874df75afc6aa00646bafdcfa2fe9f20a1bce56add58df5adad7/multitimer-0.2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19efd0b52adee5bb0c3f29091b341dd0bd1374d18f191b1c583f4bc199d4d703",
          "md5": "8c6bc0738617baf011adb6ad3b43e961",
          "sha256": "6becf821cb0ce111af40bbd1c6ee58201b9594ff3bb97513c991c7ff0f658549"
        },
        "downloads": -1,
        "filename": "multitimer-0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c6bc0738617baf011adb6ad3b43e961",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6201,
        "upload_time": "2020-11-27T17:11:32",
        "upload_time_iso_8601": "2020-11-27T17:11:32.892514Z",
        "url": "https://files.pythonhosted.org/packages/19/ef/d0b52adee5bb0c3f29091b341dd0bd1374d18f191b1c583f4bc199d4d703/multitimer-0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed2a0094d6a6cdf9f72de1c853d10d668d9148ed3ea2280fdcaf2755882b1dee",
          "md5": "b8ba7c49a45c8fce85f98296af01a266",
          "sha256": "e06659150538e62c5ccb531b67a798e3b034ad2bb5ca024ebdef52fa66759274"
        },
        "downloads": -1,
        "filename": "multitimer-0.3.zip",
        "has_sig": false,
        "md5_digest": "b8ba7c49a45c8fce85f98296af01a266",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12730,
        "upload_time": "2020-11-27T17:11:34",
        "upload_time_iso_8601": "2020-11-27T17:11:34.194406Z",
        "url": "https://files.pythonhosted.org/packages/ed/2a/0094d6a6cdf9f72de1c853d10d668d9148ed3ea2280fdcaf2755882b1dee/multitimer-0.3.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "19efd0b52adee5bb0c3f29091b341dd0bd1374d18f191b1c583f4bc199d4d703",
        "md5": "8c6bc0738617baf011adb6ad3b43e961",
        "sha256": "6becf821cb0ce111af40bbd1c6ee58201b9594ff3bb97513c991c7ff0f658549"
      },
      "downloads": -1,
      "filename": "multitimer-0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8c6bc0738617baf011adb6ad3b43e961",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 6201,
      "upload_time": "2020-11-27T17:11:32",
      "upload_time_iso_8601": "2020-11-27T17:11:32.892514Z",
      "url": "https://files.pythonhosted.org/packages/19/ef/d0b52adee5bb0c3f29091b341dd0bd1374d18f191b1c583f4bc199d4d703/multitimer-0.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed2a0094d6a6cdf9f72de1c853d10d668d9148ed3ea2280fdcaf2755882b1dee",
        "md5": "b8ba7c49a45c8fce85f98296af01a266",
        "sha256": "e06659150538e62c5ccb531b67a798e3b034ad2bb5ca024ebdef52fa66759274"
      },
      "downloads": -1,
      "filename": "multitimer-0.3.zip",
      "has_sig": false,
      "md5_digest": "b8ba7c49a45c8fce85f98296af01a266",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12730,
      "upload_time": "2020-11-27T17:11:34",
      "upload_time_iso_8601": "2020-11-27T17:11:34.194406Z",
      "url": "https://files.pythonhosted.org/packages/ed/2a/0094d6a6cdf9f72de1c853d10d668d9148ed3ea2280fdcaf2755882b1dee/multitimer-0.3.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}