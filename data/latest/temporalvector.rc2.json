{
  "info": {
    "author": "",
    "author_email": "Chris McKay <crmckay55@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Advanced Simulation: Temporal Vector\n\n## Description\n\nThis package was created to support Monte Carlo simulations that require 1-D numerical value vectors of data \nacross time.  The vectors are time-aware, and can be expanded or condensed to different time periods using different\naggregation methods (max, min, cumulative).  Update methods are provided to write the entire vector, update a \nspecific range, or pass a list of index, range, value lines.  Methods to add, multiply, and divide vectors are provided.\nFor speed, the underlying vector is based on Numpy.  \n\nThis is used to abstract the underlying vector functionality to make the simulation code simpler.\n\n\n## Getting Started\n\nDownload links:\n\nHTTPS clone URL: https://github.com/crmckay55/sim_pkg_temporal_vector.git\n\npip install temporalvector\n\n\n## How to use this package\n\n### Instantiating and using a vector:\n```python\nimport temporalvector.temporal_vector as tv\nimport temporalvector.temporal_enums as tve\n\n# Create a vector with 1 day of duration, stored in hourly format, \n# with cumulative aggregation, 1 default value.  Further calls must recognize base vector is in Hour format\nv = tv.TemporalVector(1, \n                      tve.VectorTimescales.Day, tve.VectorTimescales.Hour, \n                      tve.VectorAggregations.Cumulative, 1)\n\n# this makes a numpy array of length 24, value of 1 \n\n# retrieve the numpy vector values in days, and hours of duration (cumulative)\nv_days = v.get(tve.VectorTimescales.Day)  # returns numpy array of length 1, value 24 (because cumulative aggregation)\nv_hours = v.get(tve.VectorTimescales.Hour) # returns numpy array of length 24, value 1\n\n# update the vector for the first 12 hours (index 0 to 11), so now half zeroes, half 1's\nv.update_by_index(start_index=0, end_index=12, value=0, timescale=tve.VectorTimescales.Hour)\n\nlength = v.length(tve.VectorTimescales.Hour)\n\n# update list to make first 12 hours 1, last 12 hour 0\nbulk_update = [[0, 12, 1], [12, length - 1, 0]]\nv.update_bulk(bulk_update, tve.VectorTimescales.Hour)\n\n# Should return cumulative vector [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nv_cumulative = v.get_cumulative(tve.VectorTimescales.Hour)\n\n```\n\nOther VectorAggregations include Minimum and Maximum, if you want only the minimum and maximum values when \nupdating the timescale on a vector.\n\n\n### Other functions\n\nMultiply, divide, add, and subtract a vector.  I didn't use overloading at this time because the functions are meant\nto be an in-place operation.  Functions can accept a list, another TemporalVector, or a single value.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "temporalvector",
    "package_url": "https://pypi.org/project/temporalvector/",
    "platform": null,
    "project_url": "https://pypi.org/project/temporalvector/",
    "project_urls": {
      "Homepage": "https://github.com/crmckay55/sim_pkg_temporal_vector.git"
    },
    "release_url": "https://pypi.org/project/temporalvector/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.10",
    "summary": "Temporally aware vector of values that can be aggregated using different methods over different time periods",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15754612,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c21bc200d85e3a4fbdbf6947dda13dfe24f246c1a48f525a192abe99b7cc4a0",
          "md5": "0a0612e16c858a2a84bffde13d2de1f2",
          "sha256": "86565e7ff44246c6d553cf1ae20d00174bba0afe1bc11e012ea5bb91bf589aa4"
        },
        "downloads": -1,
        "filename": "temporalvector-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a0612e16c858a2a84bffde13d2de1f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 8294,
        "upload_time": "2022-11-13T19:30:38",
        "upload_time_iso_8601": "2022-11-13T19:30:38.745732Z",
        "url": "https://files.pythonhosted.org/packages/1c/21/bc200d85e3a4fbdbf6947dda13dfe24f246c1a48f525a192abe99b7cc4a0/temporalvector-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e3b17c7c5868c7642513b6b4eccc338473471fedec4ce07163c144deb9b0578",
          "md5": "e9a2835623db58ca4cb3f9b1c79c5a39",
          "sha256": "087634123390191a736403f8e2938ada27464115b2686c3a947eae96ce41543a"
        },
        "downloads": -1,
        "filename": "temporalvector-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e9a2835623db58ca4cb3f9b1c79c5a39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 15694929,
        "upload_time": "2022-11-13T19:30:42",
        "upload_time_iso_8601": "2022-11-13T19:30:42.025406Z",
        "url": "https://files.pythonhosted.org/packages/9e/3b/17c7c5868c7642513b6b4eccc338473471fedec4ce07163c144deb9b0578/temporalvector-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6c7350ff75aa8074e1c9f2d2e93ba96a48d31fcb6b3edf36c495229d508776c",
          "md5": "b94af63872d72cb8a12b3d275a2a7a79",
          "sha256": "57272d0fa7ec5c1584613983dacab84dcfa7ebb3ebb92b0ba7dabb79ea2a06fc"
        },
        "downloads": -1,
        "filename": "temporalvector-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b94af63872d72cb8a12b3d275a2a7a79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 8275,
        "upload_time": "2022-11-14T00:48:56",
        "upload_time_iso_8601": "2022-11-14T00:48:56.923676Z",
        "url": "https://files.pythonhosted.org/packages/e6/c7/350ff75aa8074e1c9f2d2e93ba96a48d31fcb6b3edf36c495229d508776c/temporalvector-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2f3d03215190550fe63b153ef9613126653122eb0413c3b3c95fad7da05d10c",
          "md5": "ea3bffe13dc485b96e20ae793505236c",
          "sha256": "878911048f9cc505d9e4f4c74c06cc2a5afe3529a69ac89267fe80484e83e0ef"
        },
        "downloads": -1,
        "filename": "temporalvector-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ea3bffe13dc485b96e20ae793505236c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 15693906,
        "upload_time": "2022-11-14T00:49:00",
        "upload_time_iso_8601": "2022-11-14T00:49:00.545714Z",
        "url": "https://files.pythonhosted.org/packages/c2/f3/d03215190550fe63b153ef9613126653122eb0413c3b3c95fad7da05d10c/temporalvector-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6c7350ff75aa8074e1c9f2d2e93ba96a48d31fcb6b3edf36c495229d508776c",
        "md5": "b94af63872d72cb8a12b3d275a2a7a79",
        "sha256": "57272d0fa7ec5c1584613983dacab84dcfa7ebb3ebb92b0ba7dabb79ea2a06fc"
      },
      "downloads": -1,
      "filename": "temporalvector-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b94af63872d72cb8a12b3d275a2a7a79",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 8275,
      "upload_time": "2022-11-14T00:48:56",
      "upload_time_iso_8601": "2022-11-14T00:48:56.923676Z",
      "url": "https://files.pythonhosted.org/packages/e6/c7/350ff75aa8074e1c9f2d2e93ba96a48d31fcb6b3edf36c495229d508776c/temporalvector-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2f3d03215190550fe63b153ef9613126653122eb0413c3b3c95fad7da05d10c",
        "md5": "ea3bffe13dc485b96e20ae793505236c",
        "sha256": "878911048f9cc505d9e4f4c74c06cc2a5afe3529a69ac89267fe80484e83e0ef"
      },
      "downloads": -1,
      "filename": "temporalvector-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ea3bffe13dc485b96e20ae793505236c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 15693906,
      "upload_time": "2022-11-14T00:49:00",
      "upload_time_iso_8601": "2022-11-14T00:49:00.545714Z",
      "url": "https://files.pythonhosted.org/packages/c2/f3/d03215190550fe63b153ef9613126653122eb0413c3b3c95fad7da05d10c/temporalvector-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}