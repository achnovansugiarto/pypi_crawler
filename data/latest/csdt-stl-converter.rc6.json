{
  "info": {
    "author": "Andrew Hunn",
    "author_email": "ahunn@umich.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Adinkra Extrusion Converter version 3.0\n================================================================\nRequires csdt_stl_tools in order to function properly due to Python 3 updates.\n\nAdditional documentation and setup for PyPi can be found [here](https://docs.google.com/document/d/1dkEE18c57dyifXEf-jxpAI8IP1ybXcsHqCkcuO1AexM/edit#heading=h.gvvoz8ixpl42).\n\nNote: You need to be added to our PyPi repository to make your have your changes reflected on the site.\nAlso, make sure to remember to update requirements.txt in csdt_website to latest version of csdt_stl_converter. Finally, this README might be slightly outdated. If there are any discrepancies, please submit the changes that worked for you.\n\nPython 3.7.3\n\n\n================================================================\n\nThis project contains routines to convert an Adinkra symbol in jpeg/png format and converts it to an STL file for 3D printing.\n\nMake sure that the image background is either white (#FFFFFF) or transparent.\n\nThis can be used for any image, not just Adinkra symbols.\n\n# Release Note\n    - version 1.0/2.7: Project is first pushed to production\n    - version 1.1/2.7: Added an option to generate a negative mold as well as fixing issues with [r, g, b] channels\n  - - version 3.0: Updated to Python3 and set up for PyPi package updates\n\n# Requirement \n - Python 3.7.3 (higher *should* be alright)\n - Numpy 1.18.5\n - OpenCV-Python 4.4.0.42 (for reading and resizing images)\n - Scipy 1.5.2 (for scipy.ndimage.gaussian_filter)\n - csdt_stl_tools 0.3.1 \n\n# Installation\nAdinkra_converter can be used as is.\n\nThe dependencies may be installed via pip with (This may vary based on your particular system and requirements reflected above)\n```\npython -m pip install numpy\npython -m pip install opencv-python\npython -m pip install scipy\npython -m pip install csdt_stl_tools\n```\n\n# Usage Examples:\nimage2stl.py contains the routines needed to convert images to STL, while adinkra_converter.py contains the interface that users interact with.\nadinkra_converter.py receives parameter options via the command line.\n\nHere is the template for invoking adinkra_converter.py:\\\n`python adinkra_converter.py [-b/--base True/False] [-g/--smooth True/False] [-c/--negative True/False][-s/--size size] [-x/-scale scaling] image_directory stl_directory`\n\n`-b False` or `--base=False` specifies that a base is added; False would indicate not adding a base (this is the default option).\\\n`-g True` or `--smooth=True` specifies that the image is smoothed before converting to STL; False would disable this feature (default option).\\\n`-c False` r `--negative=False` specifies that the image is used to generate a square with the image object as a  (default option is False). \\\n`-s 480` or `--size=480` specifies that the image be resized to (480x480) (default option).\\\n`-x 0.1` or `--scale=0.1` scales the resulting STL mesh height to 1/10 (default option).\n\n`image_directory` is the directory where the image to convert to STL resides.\n\n`stl_directory` is the directory in which to save the resulting STL file.\n\n\n\nA few examples on how to use image2stl.py/adinkra_converter.py are shown below.\\\n(NOTE: the use of an STL mesh viewer is recommended.)\n\n\n\non [an image of a circle](sample/images/circle.png?raw=false \"circle.png\"):\\\n![displayed picture of circle](doc/figures/example_circle.png?raw=true)\n\n\nwith adinkra_converter.py via the command line:\\\n`python adinkra_converter.py --base=True sample/images/circle.png sample/stl/circle_with_base.stl`\n\nwith image2stl.py:\n```Python\nimport image2stl\n\nimage = image2stl.read_image(\"sample/images/circle.png\")\nimage_white_background = image2stl.convert_transparent_to(image, [255, 255, 255]) # transparent to #FFFFFF\nresized_image = image2stl.convert_to_standard_size(image_white_background, size=256)\ngrayscaled_image = image2stl.grayscale(resized_image)\nsmoothed_image = image2stl.smooth_image(grayscaled_image, standard_deviation=1)\ninverted_image = image2stl.grayscale_negative(smoothed_image)\nimage2stl.convert_to_stl(inverted_image, \"sample/stl/circle_with_base.stl\", base=True, output_scale=0.1)\n```\n\nYou should get an [circle mesh with base](sample/stl/circle_with_base.stl \"STL\") that looks like this (opened with Open 3D Model Viewer):\\\n![circle mesh with base](doc/figures/circle_with_base.png?raw=true \"circle mesh with base\")\n\n\n\non [an image of a triangle](sample/images/triangle.png?raw=false \"triangle.png\"):\\\n![displayed picture of triangle](doc/figures/example_triangle.png?raw=true)\n\n\nwith adinkra_converter.py via the command line:\\\n`python adinkra_converter.py --base=False sample/images/triangle.png sample/stl/triangle.stl`\n\n\nwith image2stl.py:\n```Python\nimport image2stl\n\nimage = image2stl.read_image(\"sample/images/triangle.png\")\nimage_white_background = image2stl.convert_transparent_to(image, [255, 255, 255]) # transparent to #FFFFFF\nresized_image = image2stl.convert_to_standard_size(image_white_background, size=256)\ngrayscaled_image = image2stl.grayscale(resized_image)\nsmoothed_image = image2stl.smooth_image(grayscaled_image, standard_deviation=1)\ninverted_image = image2stl.grayscale_negative(smoothed_image)\nimage2stl.convert_to_stl(inverted_image, \"sample/stl/triangle.stl\", base=False, output_scale=0.1)\n```\n\nYou should get an [triangle mesh](sample/stl/triangle.stl \"STL\") that looks like this (opened with Open 3D Model Viewer):\\\n![triangle mesh with no base](doc/figures/triangle_no_base.png \"triangle mesh with no base\")\n\n\n**convert_to_stl** technically filters out black pixels, but the adinkra_converter gives a negative of the input image\\\nthus, it's possible to do something like (using the same circle image above):\n```Python\nimport image2stl\n\nimage = image2stl.read_image(\"sample/images/circle.png\")\nimage_white_background = image2stl.convert_transparent_to(image, [0, 0, 0]) # transparent to #000000\ngrayscaled_image = image2stl.grayscale(image)\nimage2stl.convert_to_stl(grayscaled_image, \"sample/stl/cylinder.stl\", base=False, output_scale=1.0)\n```\n\nThis will yield a cylinder mesh like so:\\\n![cylinder STL mesh](doc/figures/cylinder.png \"cylinder mesh with no base\")\n\n\n# image2stl Function References\n\n**read_image(image_directory, read_mode)**\n```\nThis function reads in an image directory as a string and returns a numpy array of pixels in the image\n\n:required_parameter image_directory: (String) The path in which the image resides\n    The path can be a relative path to this script or an absolute path\n\n:optional_parameter read_mode: (constants from cv2) This constants controls\n    how to represent the pixels in the image. The constants include but is not limited to:\n        cv2.IMREAD_COLOR - represent pixels as an array designating [red, green, blue] channels\n        cv2.IMREAD_GRAYSCALE - represent pixels as intensity information\n            0.0 being completely black and 1.0 being completely white\n        cv2.IMREAD_UNCHANGED - represent pixels as an array designating [red, green, blue, alpha] channels\n\n:return: (numpy.ndarray) an array of pixels representing the opened image\n```\n\n\n**convert_to_standard_size(image_matrix, size=256)**\n```\nResize the images and change the aspect ratio to 1:1.\n\n:required_parameter image_matrix: (numpy.ndarray) A 2D array of pixels of the image to resize\n:optional_parameter size: (int) The desired size of the output image\n    The default parameter specifies an output image of 256 x 256\n\n:return: (numpy.ndarray) A 2D array of pixels representing the resized image\n```\n\n\n**grayscale(image_matrix)**\n```\nConverts colored images to grayscale\nOnly works for RGB or RGBA images\n\n:required_parameter image_matrix: (numpy.ndarray) A 2D array of pixels representing an image\n:return: (numpy.ndarray) A 2D array of pixels representing a grayscaled image\n```\n\n\n**smooth_image(image_matrix, standard_deviation = 1)**\n```\nSmooths out images using the Gaussian function\n\n:required_parameter image_matrix: (numpy.ndarray) A 2D array of pixels representing an image\n:optional_parameter standard_deviation: The standard deviation of the Gaussian function\n    The default standard deviation is 1\n\n:return: (numpy.ndarray) A 2D array of pixels representing a smoothed image\n```\n\n\n**convert_transparent_to(image_matrix, target_pixel)**\n```\nConverts all transparent pixels into white pixels\nOnly works on [r, g, b, a] pixels\n\n:required_parameter image_matrix: (numpy.ndarray) a 2D array of pixels of the image to whiten\n:optional_parameter target_pixel: (numpy.ndarray) a [r, g, b] pixel to replace transparent pixels with\n:return: (numpy.ndarray) a 2D of pixels representing the whitened image\n```\n\n\n**grayscale_negative(image_matrix)**\n```\nConverts the grayscaled image array into its respective negative\n\n:required_parameter image_matrix: (numpy.ndarray) The desired grayscale image to create a negative of\n:return: The resulting negative image\n```\n\n\n**convert_to_stl(image_matrix, output_file_directory, base=False, output_scale=0.1)**\n```\nConverts the image matrix into an STL file and save it at output_file_directory\nNOTE: This function currently only supports grayscale\n\n:required_parameter image_matrix: (numpy.ndarray) A 2D array of pixels representing an image\n:required_parameter output_file_directory: (string) The filename of the resulting STL file\n:optional_parameter output_scale: decides the height scaling of the resulting STL mesh\n:optional_parameter base: (boolean) A boolean value specifying whether or not\n    to include a base into the resulting STL file\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CSDTs/Adinkra_extrusion_converter",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "csdt-stl-converter",
    "package_url": "https://pypi.org/project/csdt-stl-converter/",
    "platform": null,
    "project_url": "https://pypi.org/project/csdt-stl-converter/",
    "project_urls": {
      "Homepage": "https://github.com/CSDTs/Adinkra_extrusion_converter"
    },
    "release_url": "https://pypi.org/project/csdt-stl-converter/1.2.1/",
    "requires_dist": [
      "csdt-stl-tools",
      "opencv-python",
      "numpy"
    ],
    "requires_python": "",
    "summary": "Converts images to stl files",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15245713,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61ada84eb34c8e7010dec786680e335b664155613ffdcf056677a7267e970092",
          "md5": "2896e9499acfb74467847c2c82c8f235",
          "sha256": "a53a8a4bfe1d3412997d8793f441f90d2e8def6a4f58f26dd4bf0d791039a493"
        },
        "downloads": -1,
        "filename": "csdt_stl_converter-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2896e9499acfb74467847c2c82c8f235",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10687,
        "upload_time": "2020-11-13T19:39:15",
        "upload_time_iso_8601": "2020-11-13T19:39:15.643273Z",
        "url": "https://files.pythonhosted.org/packages/61/ad/a84eb34c8e7010dec786680e335b664155613ffdcf056677a7267e970092/csdt_stl_converter-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce7af16f52e3096706a8d349f96d860350997f2c28e02294ddc4a036644810af",
          "md5": "9eb13ab4b2dba2ed0f0381bcba8f88c0",
          "sha256": "63d616bfe00a8a590a6c09dd027e3a93661c8d92e4ef409a7e2fb32bf16d5dd5"
        },
        "downloads": -1,
        "filename": "csdt_stl_converter-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9eb13ab4b2dba2ed0f0381bcba8f88c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9747,
        "upload_time": "2020-11-13T19:39:16",
        "upload_time_iso_8601": "2020-11-13T19:39:16.977928Z",
        "url": "https://files.pythonhosted.org/packages/ce/7a/f16f52e3096706a8d349f96d860350997f2c28e02294ddc4a036644810af/csdt_stl_converter-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93a0d8702b46aaa9827db9d22d3b5a543bf50a35e6eb0b0518188e0958120a3d",
          "md5": "dce28e34b37fffb63d1fd6335aff6aea",
          "sha256": "6db46bce527bd1df24e04b5272c5c3958ce9381b52f9824bf7b7d0339d7c35a4"
        },
        "downloads": -1,
        "filename": "csdt_stl_converter-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dce28e34b37fffb63d1fd6335aff6aea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10754,
        "upload_time": "2020-11-13T20:23:13",
        "upload_time_iso_8601": "2020-11-13T20:23:13.256059Z",
        "url": "https://files.pythonhosted.org/packages/93/a0/d8702b46aaa9827db9d22d3b5a543bf50a35e6eb0b0518188e0958120a3d/csdt_stl_converter-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1024788f67ad97f4fd0c0755fbd1d285629a1adee3f6fa9f764883caf749b2fc",
          "md5": "f6769de476164434af92fcae3589b9ab",
          "sha256": "a8f04bfaa09fb2e5fc04ee49b2bbeef0c4b4eeabbddadfaaf4c03f6b075fca1f"
        },
        "downloads": -1,
        "filename": "csdt_stl_converter-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f6769de476164434af92fcae3589b9ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9783,
        "upload_time": "2020-11-13T20:23:14",
        "upload_time_iso_8601": "2020-11-13T20:23:14.451476Z",
        "url": "https://files.pythonhosted.org/packages/10/24/788f67ad97f4fd0c0755fbd1d285629a1adee3f6fa9f764883caf749b2fc/csdt_stl_converter-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f481a68202db9621c3f3416a0a77a63493347fd2bbd356f73cdf6da1de1651a6",
          "md5": "33fe4064ae359c3c55da65239b540311",
          "sha256": "3d822acc52333697f1db0f49abcb1dbfc72791dcdd33a3351d52f0a126800b0c"
        },
        "downloads": -1,
        "filename": "csdt_stl_converter-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33fe4064ae359c3c55da65239b540311",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10792,
        "upload_time": "2020-11-16T19:32:01",
        "upload_time_iso_8601": "2020-11-16T19:32:01.354004Z",
        "url": "https://files.pythonhosted.org/packages/f4/81/a68202db9621c3f3416a0a77a63493347fd2bbd356f73cdf6da1de1651a6/csdt_stl_converter-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8dc8aab55b68b78bcf6312cad2e3509dd17948f3cd527611c0345aedd533975b",
          "md5": "0f56d62e85126cf76571ee9b3d04aac3",
          "sha256": "35e014f5b3fdacf623ca504e18debb0bb59a46444e72f31fb5adc51867a5bc63"
        },
        "downloads": -1,
        "filename": "csdt_stl_converter-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0f56d62e85126cf76571ee9b3d04aac3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9846,
        "upload_time": "2020-11-16T19:32:02",
        "upload_time_iso_8601": "2020-11-16T19:32:02.472627Z",
        "url": "https://files.pythonhosted.org/packages/8d/c8/aab55b68b78bcf6312cad2e3509dd17948f3cd527611c0345aedd533975b/csdt_stl_converter-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ce145faa107386bffcbad8b65fa4933a0869c4e1ee9b006b705bf1ac82e1577",
          "md5": "10520268455389d1b2038569fed08f73",
          "sha256": "9416f000121baa7ffb1bede5a23e050306994c8d796081af6c5a25c0710683bc"
        },
        "downloads": -1,
        "filename": "csdt_stl_converter-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10520268455389d1b2038569fed08f73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10890,
        "upload_time": "2020-11-30T22:03:56",
        "upload_time_iso_8601": "2020-11-30T22:03:56.400106Z",
        "url": "https://files.pythonhosted.org/packages/8c/e1/45faa107386bffcbad8b65fa4933a0869c4e1ee9b006b705bf1ac82e1577/csdt_stl_converter-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "845188bc94aef287bd244ecaa377cb16d76e76cd88263bf4f92e4aedc250619e",
          "md5": "5e4db9dd89f1697b0450b74a6976e32c",
          "sha256": "30c3df918f05b5d33b5238241e8c5f6f45e38255723c3e2d00fc1433a120e9e6"
        },
        "downloads": -1,
        "filename": "csdt_stl_converter-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5e4db9dd89f1697b0450b74a6976e32c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9917,
        "upload_time": "2020-11-30T22:03:57",
        "upload_time_iso_8601": "2020-11-30T22:03:57.813555Z",
        "url": "https://files.pythonhosted.org/packages/84/51/88bc94aef287bd244ecaa377cb16d76e76cd88263bf4f92e4aedc250619e/csdt_stl_converter-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f6ae07fec92392e07359b17145a823c71b443574732d83d4d5f9a3640007bf7",
          "md5": "4a921d6edd50db7ffcf33abe61814dd3",
          "sha256": "125661710a0751df172bc7cc1e9327276cb340d2ad46b6319d43ae8a81c1e129"
        },
        "downloads": -1,
        "filename": "csdt_stl_converter-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a921d6edd50db7ffcf33abe61814dd3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10893,
        "upload_time": "2021-12-13T18:51:25",
        "upload_time_iso_8601": "2021-12-13T18:51:25.629911Z",
        "url": "https://files.pythonhosted.org/packages/9f/6a/e07fec92392e07359b17145a823c71b443574732d83d4d5f9a3640007bf7/csdt_stl_converter-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fbe99099fe638fdb21bf82761d7450eb7d33714f0906540d668f69e682e2517",
          "md5": "19107171c8ceb2e88cb7b3b284d87d05",
          "sha256": "f4db10b8230841a82fecc2fd2028c2153cd33a58b1c97926f8ccfaab272c0b5e"
        },
        "downloads": -1,
        "filename": "csdt_stl_converter-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "19107171c8ceb2e88cb7b3b284d87d05",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9923,
        "upload_time": "2021-12-13T18:51:27",
        "upload_time_iso_8601": "2021-12-13T18:51:27.499679Z",
        "url": "https://files.pythonhosted.org/packages/1f/be/99099fe638fdb21bf82761d7450eb7d33714f0906540d668f69e682e2517/csdt_stl_converter-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3202562b014cb12ec1b5ef1b2d130db8a6c5098dc94e0a64329bf17bf7fe01c2",
          "md5": "30d213e13cc6893023ee6f18ae5d5da5",
          "sha256": "016c5744fd522a8a970a8e3f6ffc7262fbdb860c7528c78e907341ec9a85a6c7"
        },
        "downloads": -1,
        "filename": "csdt_stl_converter-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "30d213e13cc6893023ee6f18ae5d5da5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11289,
        "upload_time": "2022-09-28T19:44:57",
        "upload_time_iso_8601": "2022-09-28T19:44:57.886359Z",
        "url": "https://files.pythonhosted.org/packages/32/02/562b014cb12ec1b5ef1b2d130db8a6c5098dc94e0a64329bf17bf7fe01c2/csdt_stl_converter-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b0a6810d3708b1fae53f029dfcdd6f7c982d4370bef52f952b6b5d16b22b8f4",
          "md5": "41dd4fd040c718f96ff204169cc2022a",
          "sha256": "b7cbd95dd364b95d3a7663f70442a614ef2f957abd87f4781d74a0a1cb55bc5f"
        },
        "downloads": -1,
        "filename": "csdt_stl_converter-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "41dd4fd040c718f96ff204169cc2022a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11511,
        "upload_time": "2022-09-28T19:44:59",
        "upload_time_iso_8601": "2022-09-28T19:44:59.391047Z",
        "url": "https://files.pythonhosted.org/packages/3b/0a/6810d3708b1fae53f029dfcdd6f7c982d4370bef52f952b6b5d16b22b8f4/csdt_stl_converter-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3202562b014cb12ec1b5ef1b2d130db8a6c5098dc94e0a64329bf17bf7fe01c2",
        "md5": "30d213e13cc6893023ee6f18ae5d5da5",
        "sha256": "016c5744fd522a8a970a8e3f6ffc7262fbdb860c7528c78e907341ec9a85a6c7"
      },
      "downloads": -1,
      "filename": "csdt_stl_converter-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "30d213e13cc6893023ee6f18ae5d5da5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11289,
      "upload_time": "2022-09-28T19:44:57",
      "upload_time_iso_8601": "2022-09-28T19:44:57.886359Z",
      "url": "https://files.pythonhosted.org/packages/32/02/562b014cb12ec1b5ef1b2d130db8a6c5098dc94e0a64329bf17bf7fe01c2/csdt_stl_converter-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b0a6810d3708b1fae53f029dfcdd6f7c982d4370bef52f952b6b5d16b22b8f4",
        "md5": "41dd4fd040c718f96ff204169cc2022a",
        "sha256": "b7cbd95dd364b95d3a7663f70442a614ef2f957abd87f4781d74a0a1cb55bc5f"
      },
      "downloads": -1,
      "filename": "csdt_stl_converter-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "41dd4fd040c718f96ff204169cc2022a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11511,
      "upload_time": "2022-09-28T19:44:59",
      "upload_time_iso_8601": "2022-09-28T19:44:59.391047Z",
      "url": "https://files.pythonhosted.org/packages/3b/0a/6810d3708b1fae53f029dfcdd6f7c982d4370bef52f952b6b5d16b22b8f4/csdt_stl_converter-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}