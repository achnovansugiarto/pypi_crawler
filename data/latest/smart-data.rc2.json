{
  "info": {
    "author": "Pawel Koscielny",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# SMART DATA\n\nSMART DATA is a package to make your live easier. For example you want to test many JSON (or any other) results from some API in Python.\nThere are plenty of great Python packages to find a differences between two complex structres but sometimes you need omit some their parts.\nThis package help you to write this kind of code easier.\n\n## Requirements\n\nNo package dependecy.\n\n## Installation\n\n```\npip install smart_data\n```\n\n## Functions\n\n### list_diff = include(got, expected) \n* got       - structure to check\n* expected  - structure that is required in 'got' structure. Any difference will be in returned list.\n* list_diff - list with differences, e.g. \n  `['/attributes/temperature/<20.1 vs 22.2>']`\n\nTry to check if 'expected' structure includes 'got' structure. Any additional keys from 'got' will be igroned.\nThis situation can be expected if you don't want to check some parts of complex structure (e.g. in tests).\n\nThe structures should contain dictionaries, lists, objects, simple types or any comparable structures (`__str__` and `__eq__` implementation).\nAdditionally 'expected' can be or can contains compiled regular expression (re package) to check e.g. if you don't want mocking datetime objects.\n\n## Example of usage\n\nSo let's try test some endpoint:\n```\nimport re\nre_datetime = re.compile(r\"^\\d{4}-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d$\")\n\ndef test_add_new(self, client):\n    with client:\n        res = client.post(\n            '/air_state',\n            json = {\n                'data': {\n                    'type': 'air_state',\n                    'attributes': {\n                        'temperature': 20.1,\n                        'humidity': 51.2,\n                        'location': 'kitchen',\n                        'device': 'dev1_esp',\n                    },\n                },\n            },\n            content_type = 'application/vnd.api+json',\n        )\n        assert 201 == res.status_code\n        res_json = res.get_json()\n\n        assert res_json['data']['type'] == 'air_state'\n        assert res_json['data']['id'] == '1'\n        assert res_json['data']['attributes']['temperature'] == '20.1'\n        assert res_json['data']['attributes']['humidity'] == '51.2'\n        assert res_json['data']['attributes']['location'] == 'kitchen'\n        assert res_json['data']['attributes']['device'] == 'dev1_esp'\n        assert re_datetime.search(res_json['data']['attributes']['created'])\n\n```\nYou need write buch of asserts for many items in result structure. Many lines of code. If bigger structure then more code.\n\nNow you can write it in another way using smart_data package:\n```\nfrom smart_data import include\nfrom re import compile\n\ndef test_add_new(self, client):\n\n    payload = {\n        'type': 'air_state',\n        'attributes': {\n            'temperature': 20.1,\n            'humidity': 51.2,\n            'location': 'kitchen',\n            'device': 'dev1_esp',\n        },\n    }\n\n    with client:\n        res = client.post(\n            '/air_state',\n            json = { 'data': payload },\n            content_type = 'application/vnd.api+json',\n        )\n        assert 201 == res.status_code\n\n        payload['attributes']['id'] = 1\n        payload['attributes']['created'] = compile(r\"^\\d{4}-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d$\")\n        res_json = res.get_json()\n        assert include(got=res_json['data'], expected=payload) == []\n```\nThis is simple example with really small amount of data to test. For more complex structure the benefit is higher. \n\nNext benefit is readable output from broken assert during tests. For example:\n```\n    def test_foo():\n        expected = {\n            'foo': 1.1,\n            'bar': [42, {'baz': 22}],\n            'zoo': None,\n            'zar': [[1, 3], [5, 8]],\n        }\n        got = {\n            'foo': 1.1,\n            'bar': [42, {'baz': 2}],\n            'zoo': None,\n            'zar': [[1, 3], [5, 8]],\n        }\n>       assert include(got, expected) == []\nE       AssertionError: assert ['/bar/1/baz/<2 vs 22>'] == []\nE         Left contains one more item: '/bar/1/baz/<2 vs 22>'\nE         Full diff:\nE         - []\nE         + ['/bar/1/baz/<2 vs 22>']\n\ntests/test_include.py:38: AssertionError\n```\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pkoscielny/smart_data",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "smart-data",
    "package_url": "https://pypi.org/project/smart-data/",
    "platform": "",
    "project_url": "https://pypi.org/project/smart-data/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pkoscielny/smart_data/issues",
      "Homepage": "https://github.com/pkoscielny/smart_data"
    },
    "release_url": "https://pypi.org/project/smart-data/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.6.9",
    "summary": "Smart comparing data for tests",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9682904,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f20891c59a6c2d11958448ed5284cd65db6c0d47558894efd8d16f00d8d70271",
          "md5": "bda00e5b677b4146a9db2406d2af2f27",
          "sha256": "d336984a92c2b436a7a0efad24e585b3ba07c0cd7117e0036e32cf49859d812e"
        },
        "downloads": -1,
        "filename": "smart_data-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bda00e5b677b4146a9db2406d2af2f27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.9",
        "size": 5355,
        "upload_time": "2021-02-27T16:09:35",
        "upload_time_iso_8601": "2021-02-27T16:09:35.389066Z",
        "url": "https://files.pythonhosted.org/packages/f2/08/91c59a6c2d11958448ed5284cd65db6c0d47558894efd8d16f00d8d70271/smart_data-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8233a7fed9f06bac6e520ea52247606d96ee326d5d3806980fc840ec7ebbd02a",
          "md5": "3bf16bb85101a62fe7bc6042bd430386",
          "sha256": "bc04185168e4521ccb3517ac2c8c6bf5f1361c4c18c91124c7fa95367592e0cf"
        },
        "downloads": -1,
        "filename": "smart_data-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3bf16bb85101a62fe7bc6042bd430386",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.9",
        "size": 4684,
        "upload_time": "2021-02-27T16:09:36",
        "upload_time_iso_8601": "2021-02-27T16:09:36.452903Z",
        "url": "https://files.pythonhosted.org/packages/82/33/a7fed9f06bac6e520ea52247606d96ee326d5d3806980fc840ec7ebbd02a/smart_data-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b42c7970b324eef0e7eff66bdfcbf3089eaef593fafac062534ef2b216e7419",
          "md5": "1d3535e774cf0fbb8c763a1dc87c2dbc",
          "sha256": "cf92622d8c05f7b69b04adb8ea9c1d9d9fb5f9750fcc82936c775415dc89d8d1"
        },
        "downloads": -1,
        "filename": "smart_data-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d3535e774cf0fbb8c763a1dc87c2dbc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.9",
        "size": 6028,
        "upload_time": "2021-03-06T08:56:24",
        "upload_time_iso_8601": "2021-03-06T08:56:24.706241Z",
        "url": "https://files.pythonhosted.org/packages/7b/42/c7970b324eef0e7eff66bdfcbf3089eaef593fafac062534ef2b216e7419/smart_data-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33261b74c9f0375c95fc3674f80d7b056f065fc724ed174686f82ab95c2e4312",
          "md5": "b502ebf7704d02bb0fcf19b35fbaad77",
          "sha256": "4c381c19e79c4404e745edaa0da58a119166148743c58cff5ad4e85b8a80ff32"
        },
        "downloads": -1,
        "filename": "smart_data-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b502ebf7704d02bb0fcf19b35fbaad77",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.9",
        "size": 5313,
        "upload_time": "2021-03-06T08:56:25",
        "upload_time_iso_8601": "2021-03-06T08:56:25.864457Z",
        "url": "https://files.pythonhosted.org/packages/33/26/1b74c9f0375c95fc3674f80d7b056f065fc724ed174686f82ab95c2e4312/smart_data-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b42c7970b324eef0e7eff66bdfcbf3089eaef593fafac062534ef2b216e7419",
        "md5": "1d3535e774cf0fbb8c763a1dc87c2dbc",
        "sha256": "cf92622d8c05f7b69b04adb8ea9c1d9d9fb5f9750fcc82936c775415dc89d8d1"
      },
      "downloads": -1,
      "filename": "smart_data-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1d3535e774cf0fbb8c763a1dc87c2dbc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.9",
      "size": 6028,
      "upload_time": "2021-03-06T08:56:24",
      "upload_time_iso_8601": "2021-03-06T08:56:24.706241Z",
      "url": "https://files.pythonhosted.org/packages/7b/42/c7970b324eef0e7eff66bdfcbf3089eaef593fafac062534ef2b216e7419/smart_data-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "33261b74c9f0375c95fc3674f80d7b056f065fc724ed174686f82ab95c2e4312",
        "md5": "b502ebf7704d02bb0fcf19b35fbaad77",
        "sha256": "4c381c19e79c4404e745edaa0da58a119166148743c58cff5ad4e85b8a80ff32"
      },
      "downloads": -1,
      "filename": "smart_data-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b502ebf7704d02bb0fcf19b35fbaad77",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.9",
      "size": 5313,
      "upload_time": "2021-03-06T08:56:25",
      "upload_time_iso_8601": "2021-03-06T08:56:25.864457Z",
      "url": "https://files.pythonhosted.org/packages/33/26/1b74c9f0375c95fc3674f80d7b056f065fc724ed174686f82ab95c2e4312/smart_data-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}