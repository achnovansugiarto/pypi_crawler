{
  "info": {
    "author": "SK SAHIL",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Pykivdroid\npykivdroid is a python module to control android\n\n### Requirements\n  kivy,android,pyjnius\n\n\n### Introduction\n```\n     pykivdroid is python module to control Android.\n     To test all this things you have to use android device.\n\n\n```\n#### Classes and mActivity\n```python\n# I have defined java android class \n# Camera = autoclass('android.hardware.Camera')\n# And Nested class. N use to indicate nested \n# CameraNCameraInfo=autoclass('android.hardware.Camera$CameraInfo')\n# mActivity is App's activity\nfrom pykivdroid import mActivity,Camera,CameraNCameraInfo\n```\n#### Orientation\n```python\nfrom pykivdroid import orientation\n#To get current orientation\na=orientation.get_orientation()\nprint(a)\n\n#To set orientation \n#you can set any mode 'user','portrait','landscape' etc\norientation.set_orientation(mode='user')\n\n```\n\n\n#### Brightness\n```python\nfrom pykivdroid import brightness,write_settings\n'''\nRequired Permissions:\n    WRITE_SETTINGS\n'''\n#To get current brightness\na=brightness.get_brightness()\nprint(a)\n#To set brightness\n#minimum brightness is 0, maximum is 100\nwrite_settings(sdk_int, version_code) #TO GET PERMISSION\nbrightness.set_brightness(50)\n```\n### Speech to text\n```python\nfrom pykivdroid.stt import STT\n'''\n     Android Permissions:INTERNET,RECORD_AUDIO\n'''\n###you can set language and mode offline or online \nsttobj=STT(language='en-US',prefer_offline=False)\n#To start\nsttobj.start()\n#speech to text exsist or not \na=sttobj.exist()\nprint(a)\n#To stop\nsttobj.stop()\n#results\nprint(sttobj.results)\n#partial\nprint(sttobj.partial)\n#errors\nprint(sttobj.errors)\n#listening or not\nprint(sttobj.listening)\n#partial result\nprint(sttobj.partial_results)\n\n```\n### File Picker\n```python\n#Android permissions READ_EXTERNAL_STORAGE\nfrom pykivdroid.picker import AndroidPicker\ndef callback(uri):\n     print(uri)\nap=AndroidPicker(callback)\nap.pick_file(MIME_type='*/*')\n\n\n```\n```python \n####simple example\n\nfrom kivy.app import App\nfrom kivy.uix.boxlayout import BoxLayout\nfrom kivy.uix.button import Button\nfrom kivy.uix.textinput import TextInput\nfrom pykivdroid.picker import AndroidPicker\nfrom pykivdroid import request_permissions,Permission\n\n\nclass MyApp(App):\n    def build(self):\n        request_permissions([Permission.READ_EXTERNAL_STORAGE])\n        self.box=BoxLayout(orientation=\"vertical\")\n        self.ap=AndroidPicker(self.call)\n        self.ti=TextInput()\n        self.box.add_widget(Button(text='OPEN AndroidPicker',on_release=self.callback))\n        self.box.add_widget(self.ti)\n        return self.box\n    def callback(self,obj):\n        self.ap.pick_file()\n\n    def call(self,uri):\n        print(uri)\n        self.ti.text=str(uri)\n\n\n\nMyApp().run()\n\n```\n\n### Android Video View\n```python\nfrom pykivdroid.videoview import AndroidVideoView\n\nvideoview=AndroidVideoView()\n\nvideoview.set_video_uri(uri)\n#or\nvideoview.set_video_path(path)\n#to start \nvideoview.start()\n#to seek any position\nvideoview.seek_to(ms)\n#to stop\nvideoview.stop_playback()\n#pause\nvideoview.pause()\n#resume\nvideoview.resume()\n#get duration\nvideoview.get_duration()\n#get current position\nvideoview.get_current_position()\n#to get audio session id \nvideoview.get_audio_session_id()\n#playing or not\nprint(videoview.is_playing())\n######for more info. read videoview.py in pykivdroid \n```\n```python\n#simple example with kivy\nfrom kivy.app import App\nfrom kivy.uix.boxlayout import BoxLayout\nfrom kivy.uix.button import Button\nfrom kivy.uix.textinput import TextInput\nfrom pykivdroid.picker import AndroidPicker\nfrom pykivdroid import request_permissions,Permission\nfrom pykivdroid.videoview import AndroidVideoView\n\n\nclass MyApp(App):\n    def build(self):\n        request_permissions([Permission.READ_EXTERNAL_STORAGE])\n        self.box=BoxLayout(orientation=\"vertical\")\n        self.ap=AndroidPicker(self.call)\n        self.vv=AndroidVideoView()\n        self.box.add_widget(self.vv)\n        self.box.add_widget(Button(text='choose video',on_release=self.callback))\n\n        return self.box\n    def callback(self,obj):\n        self.ap.pick_file()\n\n    def call(self,uri):\n        print(uri)\n        self.vv.set_video_uri(uri)\n        self.vv.start()\n\n\n\nMyApp().run()\n\n```\n### Text To Speech\n```python\n#permission INTERNET\nfrom pykivdroid.tts import TTS\ntts=TTS()\ntts.speak('text to speak')\n##see also and for more info see tts.py in pykivdroid.\ntts.get_voices()\ntts.get_language()\ntts.get_engines()\ntts.get_duration()\ntts.get_available_languages()\ntts.get_default_voice()\ntts.get_max_input_length()\ntts.get_default_engine()\ntts.set_voice(voice)\ntts.set_pitch(pitch)\ntts.set_language(loc)\ntts.set_speech_rate(rate)\ntts.is_speaking()\ntts.is_language_available(loc)\n\n```\n\n\n```python\n#example with kivy\n#permission INTERNET\nfrom kivy.app import App\nfrom kivy.uix.boxlayout import BoxLayout\nfrom kivy.uix.button import Button\nfrom kivy.uix.textinput import TextInput\nfrom kivy.uix.slider import Slider\nfrom pykivdroid.tts import TTS\nfrom pykivdroid import ArrayList,Arrays\n\n\nclass MyApp(App):\n    text='Python is good programming language'\n    i=0\n    def build(self):\n\n        self.box=BoxLayout(orientation=\"vertical\")\n\n        self.ti=TextInput(text=self.text)\n\n        #slider used to change pitch\n        self.sldr=Slider(min=0,max=1,value=0.5)\n        #slider used to change speech rate\n        self.sldr2=Slider(min=0,max=1,value=0.5)\n        #1)tts object\n        self.tts=TTS()\n\n        #self.voice=self.tts.get_voices()\n\n\n        self.box.add_widget(self.ti)\n        self.box.add_widget(self.sldr)\n        self.box.add_widget(self.sldr2)\n        self.box.add_widget(Button(text='speak',on_release=self.callback))\n\n        return self.box\n    def callback(self,obj):\n        #changing voice\n\n        voice=self.tts.get_voices()\n\n        if self.i==len(voice):\n            self.i=0\n\n        self.tts.set_voice(voice[self.i])\n\n\n\n\n\n        self.tts.set_pitch(self.sldr.value)\n        self.tts.set_speech_rate(self.sldr2.value)\n        self.tts.speak(self.ti.text)\n        #print(self.tts.get_voices())\n        self.i+=1\n\n\n\n\nMyApp().run()\n\n```\n\n### Unity Ads\n```\n1)Download Unity-ads.aar from unity ads \n\n2)Create libs folder within your project folder\n\n3)Add Unity-ads.aar to your /libs folder\n\n4)update buildozer.spec \n\nandroid.add_aars = ./libs/*.aar\nandroid permissions = INTERNET,ACCESS_NETWORK_STATE\n```\n#### Unity Interstitial and Reward ads \n```python\n'''\n1)Download Unity-ads.aar from unity ads \n\n2)Add Unity-ads.aar to your /libs folder\n\nupdate buildozer.spec \n\nandroid.add_aars = ./libs/*.aar\nandroid permissions = INTERNET,ACCESS_NETWORK_STATE\n'''\nfrom kivy.app import App\nfrom kivy.uix.button import Button \nfrom kivy.uix.boxlayout import BoxLayout\nfrom pykivdroid.unityads import UnityHandler\n\nclass MyApp(App):\n    def build(self):\n        self.box=BoxLayout(orientation='vertical')\n         #1 step \n        self.uh=UnityHandler(app_id='put app id here',)\n         #2 set ads_type=\"reward\" or \"interstitial\",test_mode=True or False,callback is used for Reward ads status for interstitial put callback=None\n        self.uh.init_ads(ads_type=\"reward\",test_mode=True,callback=self.call_status)\n\n        self.box.add_widget(Button(text='show reward ads',on_release=self.call))\n        return self.box\n\n    def call(self,obj):\n        self.uh.show_ads('put ads id here')\n\n    def call_status(self,status):\n        print(\"reward : \",status)\n\n\nMyApp().run()\n\n```\n##### Unity Banner ads \n```  I have implemented unity banner ads but test mode is only working in India ```\n\n[Banner ads issue](https://forum.unity.com/threads/could-not-show-banner-due-to-no-fill-for-placement.610948/)\n```python\n#simple example\nfrom kivy.app import App\nfrom kivy.uix.button import Button \nfrom kivy.uix.boxlayout import BoxLayout\nfrom pykivdroid.unityads import UnityHandler\n\nclass MyApp(App):\n    def build(self):\n        self.box=BoxLayout(orientation='vertical')\n        self.uh=UnityHandler(app_id='put app id ',)\n        #self.uh.init_ads(ads_type=\"reward\",test_mode=False,callback=self.callback)\n        self.uh.init_banner_ads('put ads id',test_mode=True,top_pos=True)\n        self.uh.load_banner()\n\n\n\n        self.box.add_widget(Button(text='show banner ads',on_release=self.call))\n        self.box.add_widget(Button(text='hide banner ads  ',on_release=self.call2))\n        return self.box\n    def call2(self,obj):\n        self.uh.hide_banner()\n\n    def call(self,obj):\n\n        self.uh.show_banner()\n        self.uh.load_banner()\n\n        #self.uh.show_ads()\n    def callback(self,*a):\n        print(\"hello\",a)\n\n\nMyApp().run()\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Sahil-pixel/Pykivdroid",
    "keywords": "python,kivy,android,pyjnius",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pykivdroid",
    "package_url": "https://pypi.org/project/pykivdroid/",
    "platform": "",
    "project_url": "https://pypi.org/project/pykivdroid/",
    "project_urls": {
      "Homepage": "https://github.com/Sahil-pixel/Pykivdroid"
    },
    "release_url": "https://pypi.org/project/pykivdroid/0.0.2/",
    "requires_dist": [
      "kivy",
      "pyjnius",
      "android"
    ],
    "requires_python": "",
    "summary": "Python tools to control android",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10631802,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40484a958e27e7090316b7166131b223073e71b83939171f13e4bf08a26f07bf",
          "md5": "f6d71f90dec794a06b1b2b902777833c",
          "sha256": "d22b13aac7800fc16f356f195825e8241752f02acef78f3ef2e9c36e2264460a"
        },
        "downloads": -1,
        "filename": "pykivdroid-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6d71f90dec794a06b1b2b902777833c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9827,
        "upload_time": "2021-06-02T17:57:39",
        "upload_time_iso_8601": "2021-06-02T17:57:39.376644Z",
        "url": "https://files.pythonhosted.org/packages/40/48/4a958e27e7090316b7166131b223073e71b83939171f13e4bf08a26f07bf/pykivdroid-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f636bb0441211642800ce938ef86fc0bb01adf8717f96e01aebb4a9f2b5ae4f",
          "md5": "47a75c285c64891cbc042b63a34db53d",
          "sha256": "512d2bc2107940a965d4eb99a5f5e8cb9665481b65dbff957d2992d70e0a8c92"
        },
        "downloads": -1,
        "filename": "pykivdroid-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "47a75c285c64891cbc042b63a34db53d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8341,
        "upload_time": "2021-06-02T17:57:41",
        "upload_time_iso_8601": "2021-06-02T17:57:41.003151Z",
        "url": "https://files.pythonhosted.org/packages/2f/63/6bb0441211642800ce938ef86fc0bb01adf8717f96e01aebb4a9f2b5ae4f/pykivdroid-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5d079240bd7a6631762aac193e5b0ff254fea57d32542753e75c14e344910b1",
          "md5": "e41aa40442331002af83793560a0026d",
          "sha256": "346d14585f4ad893dbb37c96e9c19eeae140f203cb6664b90f35b835418323d3"
        },
        "downloads": -1,
        "filename": "pykivdroid-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e41aa40442331002af83793560a0026d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14596,
        "upload_time": "2021-06-12T16:06:36",
        "upload_time_iso_8601": "2021-06-12T16:06:36.916241Z",
        "url": "https://files.pythonhosted.org/packages/d5/d0/79240bd7a6631762aac193e5b0ff254fea57d32542753e75c14e344910b1/pykivdroid-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c8624de7571cde1caea80397c634fd7256506bda2b57750877e51b4d6c1df2e",
          "md5": "7f44adad1b522d9e31dab7854e88b693",
          "sha256": "b4a4048c97246e84e1a7ed846e41aeee5e1f1cba9f032a0d93d52c4f6eaa31ba"
        },
        "downloads": -1,
        "filename": "pykivdroid-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7f44adad1b522d9e31dab7854e88b693",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12851,
        "upload_time": "2021-06-12T16:06:39",
        "upload_time_iso_8601": "2021-06-12T16:06:39.914140Z",
        "url": "https://files.pythonhosted.org/packages/5c/86/24de7571cde1caea80397c634fd7256506bda2b57750877e51b4d6c1df2e/pykivdroid-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d5d079240bd7a6631762aac193e5b0ff254fea57d32542753e75c14e344910b1",
        "md5": "e41aa40442331002af83793560a0026d",
        "sha256": "346d14585f4ad893dbb37c96e9c19eeae140f203cb6664b90f35b835418323d3"
      },
      "downloads": -1,
      "filename": "pykivdroid-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e41aa40442331002af83793560a0026d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14596,
      "upload_time": "2021-06-12T16:06:36",
      "upload_time_iso_8601": "2021-06-12T16:06:36.916241Z",
      "url": "https://files.pythonhosted.org/packages/d5/d0/79240bd7a6631762aac193e5b0ff254fea57d32542753e75c14e344910b1/pykivdroid-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c8624de7571cde1caea80397c634fd7256506bda2b57750877e51b4d6c1df2e",
        "md5": "7f44adad1b522d9e31dab7854e88b693",
        "sha256": "b4a4048c97246e84e1a7ed846e41aeee5e1f1cba9f032a0d93d52c4f6eaa31ba"
      },
      "downloads": -1,
      "filename": "pykivdroid-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7f44adad1b522d9e31dab7854e88b693",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12851,
      "upload_time": "2021-06-12T16:06:39",
      "upload_time_iso_8601": "2021-06-12T16:06:39.914140Z",
      "url": "https://files.pythonhosted.org/packages/5c/86/24de7571cde1caea80397c634fd7256506bda2b57750877e51b4d6c1df2e/pykivdroid-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}