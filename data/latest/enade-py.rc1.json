{
  "info": {
    "author": "M. Choji",
    "author_email": "mchoji@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.8",
      "Topic :: Education",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Typing :: Typed"
    ],
    "description": "# enade-py\n\n A library for facilitating data analysis over Enade microdata.\n\n\n## Description\n\n*enade-py* comprises a set of functions for helping researchers and Educational\nData Mining (EDM) enthusiasts through the data mining process using Enade\nmicrodata.\n\nThe Enade microdata datasets are provided by [Inep] and consist of informations from brazilian\nundergraduate students and their performance on Enade (a national exam taken at\nthe end of the course).\n\nEnade datasets contain attributes related to:\n\n* the exam itself;\n* the student;\n* the institution;\n* performance on the exam;\n* socioeconomic questions;\n* and more.\n\n\n## Getting Started\n\n### Installing with pip\nTo install the latest release of *enade-py*, just run\n\n```shell\npip install enade-py\n```\n\n### Manual Installation\n\nIn order to set up the necessary environment:\n\n0. clone the repository on your machine\n   ```\n   git clone https://github.com/mchoji/enade-py.git\n   ```\n1. create an environment `enade-py` with the help of [conda],\n   ```\n   conda env create -f environment.yaml\n   ```\n2. activate the new environment with\n   ```\n   conda activate enade-py\n   ```\n3. install `enade-py` with:\n   ```\n   python setup.py install # or `develop`\n   ```\n\nOptional and needed only once after `git clone`:\n\n4. install several [pre-commit] git hooks with:\n   ```\n   pre-commit install\n   ```\n   and checkout the configuration under `.pre-commit-config.yaml`.\n   The `-n, --no-verify` flag of `git commit` can be used to deactivate pre-commit hooks temporarily.\n\n5. install [nbstripout] git hooks to remove the output cells of committed notebooks with:\n   ```\n   nbstripout --install --attributes notebooks/.gitattributes\n   ```\n   This is useful to avoid large diffs due to plots in your notebooks.\n   A simple `nbstripout --uninstall` will revert these changes.\n\n\nThen take a look into the `scripts` and `notebooks` folders.\n\n### Dependency Management & Reproducibility\n\n1. Abstract (unpinned) dependencies are kept in `environment.yaml` (for\n   development) and in `setup.cfg` (for `pip`)\n2. Concrete dependencies are kept in `environment.lock.yaml` for the exact\n   reproduction of the development environment with:\n   ```\n   conda env export -n enade-py -f environment.lock.yaml\n   ```\n   For multi-OS development, consider using `--no-builds` during the export.\n3. Update your current environment with respect to a new `environment.lock.yaml` using:\n   ```\n   conda env update -f environment.lock.yaml --prune\n   ```\n4. Data files are tracked with [dvc]. To pull the latest version, run the\n   following command after `git clone` or `git pull`:\n   ```\n   dvc pull\n   ```\n\n## Project Organization\n\n```\n├── AUTHORS.rst             <- List of developers and maintainers.\n├── CHANGELOG.rst           <- Changelog to keep track of new features and fixes.\n├── LICENSE.txt             <- License as chosen on the command-line.\n├── README.md               <- The top-level README for developers.\n├── configs                 <- Directory for configurations of model & application.\n├── data\n│   ├── external            <- Data from third party sources.\n│   ├── interim             <- Intermediate data that has been transformed.\n│   ├── preprocessed        <- The final, canonical data sets for modeling.\n│   └── raw                 <- The original, immutable data dump.\n├── docs                    <- Directory for Sphinx documentation in rst or md.\n├── environment.yaml        <- The conda environment file for reproducibility.\n├── models                  <- Trained and serialized models, model predictions,\n│                              or model summaries.\n├── notebooks               <- Jupyter notebooks. Naming convention is a number (for\n│                              ordering), the creator's initials and a description,\n│                              e.g. `1.0-mc-initial-data-exploration`.\n├── references              <- Data dictionaries, manuals, and all other materials.\n├── reports                 <- Generated analysis as HTML, PDF, LaTeX, etc.\n│   └── figures             <- Generated plots and figures for reports.\n├── scripts                 <- Analysis and production scripts which import the\n│                              actual PYTHON_PKG, e.g. train_model.\n├── setup.cfg               <- Declarative configuration of this project.\n├── setup.py                <- Use `python setup.py develop` to install for development or\n|                              or create a distribution with `python setup.py bdist_wheel`.\n├── src\n│   └── enadepy             <- Actual Python package where the main functionality goes.\n├── tests                   <- Unit tests which can be run with `py.test`.\n├── .coveragerc             <- Configuration for coverage reports of unit tests.\n├── .isort.cfg              <- Configuration for git hook that sorts imports.\n└── .pre-commit-config.yaml <- Configuration of pre-commit git hooks.\n```\n\n\n## Versioning\nVersions defined according to [SemVer](https://semver.org). For the versions\navailable, see the [tags on this repository](https://github.com/mchoji/enade-py/tags).\n\n\n## Authors\n- M. Choji - [mchoji](https://github.com/mchoji)\n\n\n## License\n*enade-py* is licensed under the MIT License.\nSee [LICENSE](LICENSE.txt) for more information.\n\n\n## Note\n\nThis project has been set up using PyScaffold 3.2.3 and the [dsproject extension] 0.4.\nFor details and usage information on PyScaffold see https://pyscaffold.org/.\n\n[Inep]: http://portal.inep.gov.br/microdados\n[dvc]: https://dvc.org/\n[conda]: https://docs.conda.io/\n[pre-commit]: https://pre-commit.com/\n[Jupyter]: https://jupyter.org/\n[nbstripout]: https://github.com/kynan/nbstripout\n[Google style]: http://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings\n[dsproject extension]: https://github.com/pyscaffold/pyscaffoldext-dsproject\n\n\n",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mchoji/enade-py",
    "keywords": "",
    "license": "mit",
    "maintainer": "",
    "maintainer_email": "",
    "name": "enade-py",
    "package_url": "https://pypi.org/project/enade-py/",
    "platform": "any",
    "project_url": "https://pypi.org/project/enade-py/",
    "project_urls": {
      "Documentation": "https://enade-py.readthedocs.io",
      "Homepage": "https://github.com/mchoji/enade-py"
    },
    "release_url": "https://pypi.org/project/enade-py/0.1.0/",
    "requires_dist": [
      "mlxtend",
      "pandas",
      "pytest ; extra == 'testing'",
      "pytest-cov ; extra == 'testing'"
    ],
    "requires_python": ">=3.8",
    "summary": "A library for facilitating data analysis over Enade microdata",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16471626,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7beaf23fab3128d805360539a94ed0b842c0c8b5af1223b33f06ed6980c0d8ec",
          "md5": "853a19a596408d22e357441607ee2a14",
          "sha256": "1ccee05f8db6ce31b2833103b6bc65e83dd0dc4b97e28765bb80cb1e5ecc96bb"
        },
        "downloads": -1,
        "filename": "enade_py-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "853a19a596408d22e357441607ee2a14",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 21945,
        "upload_time": "2020-10-12T23:16:38",
        "upload_time_iso_8601": "2020-10-12T23:16:38.305224Z",
        "url": "https://files.pythonhosted.org/packages/7b/ea/f23fab3128d805360539a94ed0b842c0c8b5af1223b33f06ed6980c0d8ec/enade_py-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7beaf23fab3128d805360539a94ed0b842c0c8b5af1223b33f06ed6980c0d8ec",
        "md5": "853a19a596408d22e357441607ee2a14",
        "sha256": "1ccee05f8db6ce31b2833103b6bc65e83dd0dc4b97e28765bb80cb1e5ecc96bb"
      },
      "downloads": -1,
      "filename": "enade_py-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "853a19a596408d22e357441607ee2a14",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.8",
      "size": 21945,
      "upload_time": "2020-10-12T23:16:38",
      "upload_time_iso_8601": "2020-10-12T23:16:38.305224Z",
      "url": "https://files.pythonhosted.org/packages/7b/ea/f23fab3128d805360539a94ed0b842c0c8b5af1223b33f06ed6980c0d8ec/enade_py-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}