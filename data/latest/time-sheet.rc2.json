{
  "info": {
    "author": "Siva Praveen Rayapudi",
    "author_email": "rsivapraveen001@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "\nTime Sheet\n######################\n\nPython Script for 'tracking' number of hours you spend before the Computer. You can also download the time sheet at the end in multiple formats!\n\nContents\n\n.. contents:: :local:\n\nSummary\n=======\n\nThis is a command line python program to track the number of work hours that you spend \nbefore the System/ Computer with webcam enabled using face recognition. You can also invoke\nthis script from another python file.\n\nThis is a small and ready-to-run program. There are two dependencies that will get installed \nwhen you install this repo.\n1. open-cv\n2. facerecognition\n\nBuilt using dlib's state-of-the-art face recognition built with deep learning.\n\nCompatability\n=============\n\nThis program is compatible with both the versions of python - 2.x and 3.x (recommended).\nIt is a download-and-run program with no changes to the file.\nYou will just have to specify parameters through the command line.\n\nInstallation\n============\n\nYou can use **one of the below methods** to download and use this repository.\n\nUsing pip\n\n.. code-block:: bash\n\n    $ pip install time_sheet\n\nManually using CLI\n\n.. code-block:: bash\n\n    $ git clone https://github.com/NoSkillGuy/time_sheet.git\n    $ cd time_sheet && sudo python setup.py install\n\nManually using UI\n\nGo to the `repo on github <https://github.com/NoSkillGuy/time_sheet>`__ ==> Click on 'Clone or Download' ==> Click on 'Download ZIP' and save it on your local disk.\n\nUsage - Using Command Line Interface\n====================================\n\nIf installed via pip or using CLI, use the following command:\n\n.. code-block:: bash\n\n    $ timesheet [Arguments...]\n\nIf downloaded via the UI, unzip the file downloaded, go to the 'time_sheet' directory and use one of the below commands:\n\n.. code-block:: bash\n\n    $ python3 time_sheet.py [Arguments...]\n    OR\n    $ python time_sheet.py [Arguments...]\n\n\nUsage - From another python file\n================================\n\nIf you would want to use this library from another python file, you could use it as shown below:\n\n.. code-block:: python\n\n    from time_sheet import time_sheet\n\n    response = time_sheet.timesheet()\n    response.capture({<Arguments...>})\n\n\nArguments\n=========\n\n+-------------------+-------------+-------------------------------------------------------------------------------------------------------------------------------+\n| Argument          | Short hand  | Description                                                                                                                   |\n+===================+=============+===============================================================================================================================+\n| config_file       | cf          | You can pass the arguments inside a config file. This is an alternative to passing arguments on the command line directly.    |\n|                   |             |                                                                                                                               |\n|                   |             | Please refer to the                                                                                                           |\n|                   |             | `config file format <https://github.com/NoSkillGuy/time_sheet/blob/master/README.rst#config-file-format>`__ below             |\n|                   |             |                                                                                                                               |\n|                   |             | * If 'config_file' argument is present, the program will use the config file and command line arguments will be discarded     |\n|                   |             | * Config file can only be in **JSON** format                                                                                  |\n|                   |             | * Please refrain from passing invalid arguments from config file. Refer to the below arguments list                           |\n+-------------------+-------------+-------------------------------------------------------------------------------------------------------------------------------+\n| known_images_path | kip         | Specify the `known images path`. This path should contain images only from these whitelisted formats (jpg, png, gif, bmp).    |\n|                   |             | The name of the person is syntactically drawn from the filename without the extension.                                        |\n|                   |             | Default known_images_path - 'images/'                                                                                         |\n|                   |             | Example:                                                                                                                      |\n|                   |             |         - If the file name is Steve Jobs.png, then the name derived is Steve Jobs                                             |\n|                   |             |         - If the file name is Elon Musk.png, then the name derived is Elon Musk                                               |\n+-------------------+-------------+-------------------------------------------------------------------------------------------------------------------------------+\n| download_path     | dp          | This is the place where all your time_sheet downloads will be located.                                                        |\n|                   |             | The path will be auto created if the given download_path doesn't exist.                                                       |\n|                   |             | Default download path - `downloads/`                                                                                          |\n|                   |             |                                                                                                                               |\n+-------------------+-------------+-------------------------------------------------------------------------------------------------------------------------------+\n| download_format   | df          | Denotes the format/extension of the file that will be downnloaded                                                             |\n|                   |             |                                                                                                                               |\n|                   |             | `Possible values: json, CSV, inline`                                                                                          |\n|                   |             | `Default Value: inline`                                                                                                       |\n|                   |             |                                                                                                                               |\n|                   |             | If the -df argument is mentioned either `json` or `CSV` and -dp is not metioned `downloads/` path is auto created in the      |\n|                   |             | current working directory                                                                                                     |\n+-------------------+-------------+-------------------------------------------------------------------------------------------------------------------------------+\n| help              | h           | show the help message regarding the usage of the above arguments                                                              |\n+-------------------+-------------+-------------------------------------------------------------------------------------------------------------------------------+\n\nConfig File Format\n==================\n\nYou can either pass the arguments directly from the command as in the examples below or you can pass it through a config file. Below is a sample of how a config\nfile looks.\n\nYou can pass more than one record through a config file. The below sample consist of two set of records. The code will iterate through each of the record and\ndownload images based on arguments passed.\n\n.. code:: json\n\n    {\n        \"Arguments\":\n        {\n            \"known_images_path\": \"/users/NoSkillGuy/mysites/time_sheet/images\",\n            \"download_path\": \"/users/NoSkillGuy/mysites/time_sheet/downloads\",\n            \"download_format\": \"json\"\n        }\n    }\n\n\nExamples\n========\n\n- If you are calling this library from another python file, below is the sample code\n\n.. code-block:: python\n\n    from time_sheet import time_sheet   #importing the library\n\n    response = time_sheet.timesheet()   #class instantiation\n\n    arguments = {\n        \"known_images_path\": \"/users/NoSkillGuy/mysites/time_sheet/images\",\n        \"download_path\":\"/users/NoSkillGuy/mysites/timesheet/downloads\",\n        \"download_format\":\"json\"\n    }   #creating list of arguments\n    \n    response.capture(arguments)   #passing the arguments to the function\n\n\n- If you are passing arguments from a config file, simply pass the config_file argument with name of your JSON file\n\n.. code-block:: bash\n\n    $ timesheet -cf example.json\n\n- Simple example of using arguments\n\n.. code-block:: bash\n\n    $ timesheet --known_images_path /users/NoSkillGuy/mysites/time_sheet/images --download_path /users/NoSkillGuy/mysites/time_sheet/downloads --download_format json\n\n-  To use the short hand command\n\n.. code-block:: bash\n\n    $ timesheet --kip /users/NoSkillGuy/mysites/time_sheet/images --dp /users/NoSkillGuy/mysites/time_sheet/downloads --df json\n\n--------------\n\nTroubleshooting\n===============\n\n**## timesheet: command not found**\n\nWhile using the above commands, if you get ``Error: -bash: timesheet: command not found`` then you have to set the correct path variable.\n\nTo get the details of the repo, run the following command:\n\n.. code-block:: bash\n\n    $ pip show -f time_sheet \n\nyou will get the result like this:\n\n.. code-block:: bash\n\n    Location: /Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages\n    Files:\n      ../../../bin/timesheet\n\ntogether they make: ``/Library/Frameworks/Python.framework/Versions/2.7/bin`` which you need add it to the path:\n\n.. code-block:: bash\n\n    $ export PATH=\"/Library/Frameworks/Python.framework/Versions/2.7/bin\"\n\n\n**## [Errno 13] Permission denied creating directory 'downloads'**\n\nWhen you run the command, it downloads the images in the current directory (the directory from where you are running the command). If you get permission denied error for creating the `downloads directory`, then move to a directory in which you have the write permission and then run the command again.\n\n\n**## Permission denied while installing the library**\n\nOn MAC and Linux, when you get permission denied when installing the library using pip, try doing a user install.\n\n.. code-block:: bash\n\n    $ pip install time_sheet --user\n\nYou can also run pip install as a superuser with ``sudo pip install time_sheet`` but it is not generally a good idea because it can cause issues with your system-level packages.\n\nContribute\n==========\n\nAnyone is welcomed to contribute to this script.\nIf you would like to make a change, open a pull request.\nFor issues and discussion visit the\n`Issue Tracker <https://github.com/NoSkillGuy/time_sheet/issues>`__.\n\nIn Development\n==============\n\nIf this project gets 10 Stars, then i will work on the following \n\n1. Implementing a command line utility for taking a snapshot so that one can easily add his/her picture before trying out `timesheet`\n2. Documentation \n3. Examples\n4. Tests\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/NoSkillGuy/time_sheet/tarball/1.0.7",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NoSkillGuy/time_sheet",
    "keywords": "time-sheet face-recognition snapshot face-detection face detection recognition terminal command-line time hours minutes seconds work",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "time_sheet",
    "package_url": "https://pypi.org/project/time_sheet/",
    "platform": "",
    "project_url": "https://pypi.org/project/time_sheet/",
    "project_urls": {
      "Download": "https://github.com/NoSkillGuy/time_sheet/tarball/1.0.7",
      "Homepage": "https://github.com/NoSkillGuy/time_sheet"
    },
    "release_url": "https://pypi.org/project/time_sheet/1.0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python Script to calculate the number of hours you sit before your system. It is a ready-to-run code! ",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3755744,
  "releases": {
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25692f9c7eae2a340ea6551beb9b0ee2eef4162e1bc724730de178a86de4e739",
          "md5": "faf738dbac54123845d2c1e512a7e181",
          "sha256": "a8a0bba00a6811cc81dcd40f60e47b9f69134c42b1790932e9ec95983f10266f"
        },
        "downloads": -1,
        "filename": "time_sheet-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "faf738dbac54123845d2c1e512a7e181",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14526,
        "upload_time": "2018-04-11T14:41:17",
        "upload_time_iso_8601": "2018-04-11T14:41:17.730273Z",
        "url": "https://files.pythonhosted.org/packages/25/69/2f9c7eae2a340ea6551beb9b0ee2eef4162e1bc724730de178a86de4e739/time_sheet-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d29f4debc7960404a56b4c8f71fc5ef319da8f8b9f1b222370f8aedb6082d14",
          "md5": "6596acba289ea8fcb32dfe229d3a444e",
          "sha256": "3b0f412240ff874de44c0c41102ab46d7d2eb4e95fb3e261f08786c4f7c48557"
        },
        "downloads": -1,
        "filename": "time_sheet-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "6596acba289ea8fcb32dfe229d3a444e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15324,
        "upload_time": "2018-04-11T14:54:14",
        "upload_time_iso_8601": "2018-04-11T14:54:14.561636Z",
        "url": "https://files.pythonhosted.org/packages/8d/29/f4debc7960404a56b4c8f71fc5ef319da8f8b9f1b222370f8aedb6082d14/time_sheet-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8d29f4debc7960404a56b4c8f71fc5ef319da8f8b9f1b222370f8aedb6082d14",
        "md5": "6596acba289ea8fcb32dfe229d3a444e",
        "sha256": "3b0f412240ff874de44c0c41102ab46d7d2eb4e95fb3e261f08786c4f7c48557"
      },
      "downloads": -1,
      "filename": "time_sheet-1.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "6596acba289ea8fcb32dfe229d3a444e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15324,
      "upload_time": "2018-04-11T14:54:14",
      "upload_time_iso_8601": "2018-04-11T14:54:14.561636Z",
      "url": "https://files.pythonhosted.org/packages/8d/29/f4debc7960404a56b4c8f71fc5ef319da8f8b9f1b222370f8aedb6082d14/time_sheet-1.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}