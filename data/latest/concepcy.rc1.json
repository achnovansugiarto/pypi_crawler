{
  "info": {
    "author": "JulesBelveze",
    "author_email": "jules.belveze@hotmail.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Text Processing"
    ],
    "description": "<img src=\"figures/concepcy.png\" width=\"40%\" align=\"right\"/>\n\n# concepCy\n\n[![PyPI version](https://badge.fury.io/py/concepCy.svg)](https://pypi.org/project/concepCy/)\n[![github actions docs](https://github.com/JulesBelveze/concepcy/actions/workflows/documentation.yaml/badge.svg)](https://julesbelveze.github.io/concepcy/)\n\n`concepCy` is a spaCy wrapper for [ConceptNet](https://conceptnet.io/), a freely-available semantic network designed to\nhelp computers understand the meaning of words.\n\n`concepCy` allows you to query [ConceptNet.io](https://conceptnet.io/) to extract word meanings directly from the\nresource itself.\n\n# Install\n\nYou can install `concepCy` via pip:\n\n```\npip install concepcy\n```\n\nAlternatively you can directly clone the repository and install it using [poetry](https://python-poetry.org/docs/) by\nrunning the following:\n\n```\ngit clone https://github.com/JulesBelveze/concepcy.git\ncd concepcy\npoetry install\n```\n\n## Getting Started\n\nTo get started you need to install of one the pre-trained spaCy model available [here](https://spacy.io/models).\n\nIn `ConceptNet` words are represented as `Node` and relations between words as `Edge`. \\\nThe `Node` object contains the following attributes:\n\n* `id`: where you can look up all the information about that word\n* `label`: which may be a more complete phrase such as \"an example\" instead of just the word \"example\" that appears in\n  the URI.\n* `language`: code for what language the `label` is in\n* `term`: a link to the most general version of this term. In many cases this is just the same URI.\n\nThe `Edge` object features the following attributes:\n\n* `start`: starting `Node`\n* `end`: ending `Node`\n* `relation`: name of the relation for those two nodes\n* `text`: some of ConceptNet's data is extracted from text, `text` shows you what this text was\n* `weight`: how believable the information is\n\n### Simple start\n\nIn this case we will simply be interested in the *RelatedTo* relations between words.\n\n```python\nimport spacy\nimport concepcy\n\nnlp = spacy.load(\"en_core_web_sm\")\nnlp.add_pipe(\"concepcy\")\n\ndoc = nlp(\"WHO is a lovely company\")\n\n# Access all the \"RelatedTo\" relations from the Doc\nprint(\"--- All the 'RelatedTo' relations from the Doc ---\")\nfor word, relations in doc._.relatedto.items():\n    print(f\"Word: '{word}'\\n{relations}\")\n\n# Access the \"RelatedTo\" relations word by word\nprint(\"--- The 'RelatedTo' relations word by word ---\")\nfor token in doc:\n    print(f\"Word: '{token}'\\n{token._.relatedto}\\n\")\n```\n\n```bash\n--- All the 'RelatedTo' relations from the Doc ---\nWord: 'company'\n[{'start': {'id': '/c/en/company', 'type': 'Node', 'label': 'company', 'language': 'en', 'term': '/c/en/company'}, 'end': {'id': '/c/en/business', 'type': 'Node', 'label': 'business', 'language': 'en', 'term': '/c/en/business'}, 'relation': 'RelatedTo', 'text': '[[company]] is related to [[business]]', 'weight': 6.424017434596516}, {'start': {'id': '/c/en/company', 'type': 'Node', 'label': 'company', 'language': 'en', 'term': '/c/en/company'}, 'end': {'id': '/c/en/corporation', 'type': 'Node', 'label': 'corporation', 'language': 'en', 'term': '/c/en/corporation'}, 'relation': 'RelatedTo', 'text': '[[company]] is related to [[corporation]]', 'weight': 4.432155231938521}, {'start': {'id': '/c/en/company', 'type': 'Node', 'label': 'company', 'language': 'en', 'term': '/c/en/company'}, 'end': {'id': '/c/en/organization', 'type': 'Node', 'label': 'organization', 'language': 'en', 'term': '/c/en/organization'}, 'relation': 'RelatedTo', 'text': '[[company]] is related to [[organization]]', 'weight': 4.259107887809371}]\n\n--- The 'RelatedTo' relations word by word ---\nWord: 'WHO'\n[]\n\nWord: 'is'\n[]\n\nWord: 'a'\n[]\n\nWord: 'lovely'\n[]\n\nWord: 'company'\n[{'start': {'id': '/c/en/company', 'type': 'Node', 'label': 'company', 'language': 'en', 'term': '/c/en/company'}, 'end': {'id': '/c/en/business', 'type': 'Node', 'label': 'business', 'language': 'en', 'term': '/c/en/business'}, 'relation': 'RelatedTo', 'text': '[[company]] is related to [[business]]', 'weight': 6.424017434596516}, {'start': {'id': '/c/en/company', 'type': 'Node', 'label': 'company', 'language': 'en', 'term': '/c/en/company'}, 'end': {'id': '/c/en/corporation', 'type': 'Node', 'label': 'corporation', 'language': 'en', 'term': '/c/en/corporation'}, 'relation': 'RelatedTo', 'text': '[[company]] is related to [[corporation]]', 'weight': 4.432155231938521}, {'start': {'id': '/c/en/company', 'type': 'Node', 'label': 'company', 'language': 'en', 'term': '/c/en/company'}, 'end': {'id': '/c/en/organization', 'type': 'Node', 'label': 'organization', 'language': 'en', 'term': '/c/en/organization'}, 'relation': 'RelatedTo', 'text': '[[company]] is related to [[organization]]', 'weight': 4.259107887809371}]\n```\n\n### Custom configuration\n\nOne can customize the `concepcy` wrapper by changing the default value of the config. The two parameters of interest\nare:\n\n* `relations_of_interest: List[str]`: ConceptNet currently support 34 word-relations. Some of them might not be needed\n  for your use case. To only keep the ones needed pass a list of all the relations you want to keep (see all relations\n  available [here](https://github.com/commonsense/conceptnet5/wiki/Relations)). Each relation then becomes an extension.\n* `filter_edge_fct: Callable[Edge]`: Conceptnet is a crowd-sourced resource, meaning that some information might be more\n  relevant than others. To only keep reliable relations you can pass a function that will take an `Edge` as input and\n  will return a boolean indicating whether to filter that edge or not.\n\n```python\nimport spacy\nimport concepcy\n\nnlp = spacy.load(\"en_core_web_sm\")\nnlp.add_pipe(\n    \"concepcy\",\n    config={\n        \"relations_of_interest\": [\"MotivatedByGoal\", \"CapableOf\"],\n        \"filter_edge_weight\": 3.0,\n        \"filter_missing_text\": True,\n        \"as_dict\": False\n    }\n)\n```\n\n# Documentation ðŸ“š\n\nThe whole documentation along with design decisions and examples can be\nfound [here](https://julesbelveze.github.io/concepcy/).\n\n# References\n\n* [ConceptNet 5.5: An Open Multilingual Graph of General Knowledge](https://arxiv.org/abs/1612.03975)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JulesBelveze/concepcy",
    "keywords": "nlp,spacy,conceptnet",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "concepcy",
    "package_url": "https://pypi.org/project/concepcy/",
    "platform": null,
    "project_url": "https://pypi.org/project/concepcy/",
    "project_urls": {
      "Homepage": "https://github.com/JulesBelveze/concepcy",
      "Repository": "https://github.com/JulesBelveze/concepcy"
    },
    "release_url": "https://pypi.org/project/concepcy/0.1.0/",
    "requires_dist": [
      "spacy (>=3.3.0,<4.0.0)",
      "pydantic (>=1.9.1,<2.0.0)",
      "request-boost (>=0.6,<0.7)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "ðŸ’« SpaCy wrapper for ConceptNet ðŸ’«",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14603707,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37b3fc44ce88297903e345f54e4550ba2d8ab35bd3beec576ebea298f4b8538a",
          "md5": "23f08c44f07cafff9996087da52cf13f",
          "sha256": "426bd6cb0e0cbf4c00e86c94cc5418229a1c6a288ade754c4bceb821c3c6f96a"
        },
        "downloads": -1,
        "filename": "concepCy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23f08c44f07cafff9996087da52cf13f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6450,
        "upload_time": "2022-07-31T11:15:37",
        "upload_time_iso_8601": "2022-07-31T11:15:37.365424Z",
        "url": "https://files.pythonhosted.org/packages/37/b3/fc44ce88297903e345f54e4550ba2d8ab35bd3beec576ebea298f4b8538a/concepCy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd423943d5a2956d4d4e51395cd537c8d552b698c0ce2bf7ff70f6a168cd395e",
          "md5": "5428b12d219c8f80bf53edaae8716b0c",
          "sha256": "8db41a2cd29ab6b95cd0ecc759beea6da4b08113f6ea985706a1df751cbca414"
        },
        "downloads": -1,
        "filename": "concepCy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5428b12d219c8f80bf53edaae8716b0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 53666,
        "upload_time": "2022-07-31T11:15:39",
        "upload_time_iso_8601": "2022-07-31T11:15:39.320816Z",
        "url": "https://files.pythonhosted.org/packages/dd/42/3943d5a2956d4d4e51395cd537c8d552b698c0ce2bf7ff70f6a168cd395e/concepCy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37b3fc44ce88297903e345f54e4550ba2d8ab35bd3beec576ebea298f4b8538a",
        "md5": "23f08c44f07cafff9996087da52cf13f",
        "sha256": "426bd6cb0e0cbf4c00e86c94cc5418229a1c6a288ade754c4bceb821c3c6f96a"
      },
      "downloads": -1,
      "filename": "concepCy-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "23f08c44f07cafff9996087da52cf13f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 6450,
      "upload_time": "2022-07-31T11:15:37",
      "upload_time_iso_8601": "2022-07-31T11:15:37.365424Z",
      "url": "https://files.pythonhosted.org/packages/37/b3/fc44ce88297903e345f54e4550ba2d8ab35bd3beec576ebea298f4b8538a/concepCy-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd423943d5a2956d4d4e51395cd537c8d552b698c0ce2bf7ff70f6a168cd395e",
        "md5": "5428b12d219c8f80bf53edaae8716b0c",
        "sha256": "8db41a2cd29ab6b95cd0ecc759beea6da4b08113f6ea985706a1df751cbca414"
      },
      "downloads": -1,
      "filename": "concepCy-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5428b12d219c8f80bf53edaae8716b0c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 53666,
      "upload_time": "2022-07-31T11:15:39",
      "upload_time_iso_8601": "2022-07-31T11:15:39.320816Z",
      "url": "https://files.pythonhosted.org/packages/dd/42/3943d5a2956d4d4e51395cd537c8d552b698c0ce2bf7ff70f6a168cd395e/concepCy-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}