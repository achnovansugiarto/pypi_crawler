{
  "info": {
    "author": "Ole Martin Bjorndalen",
    "author_email": "ombdalen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Mido - MIDI Objects for Python\r\n==============================\r\n\r\n.. image:: https://github.com/mido/mido/workflows/Test/badge.svg\r\n   :target: https://github.com/mido/mido/actions\r\n\r\nMido is a library for working with MIDI messages and ports:\r\n\r\n.. code-block:: python\r\n\r\n   >>> import mido\r\n   >>> msg = mido.Message('note_on', note=60)\r\n   >>> msg.type\r\n   'note_on'\r\n   >>> msg.note\r\n   60\r\n   >>> msg.bytes()\r\n   [144, 60, 64]\r\n   >>> msg.copy(channel=2)\r\n   Message('note_on', channel=2, note=60, velocity=64, time=0)\r\n\r\n.. code-block:: python\r\n\r\n   port = mido.open_output('Port Name')\r\n   port.send(msg)\r\n\r\n.. code-block:: python\r\n\r\n    with mido.open_input() as inport:\r\n        for msg in inport:\r\n            print(msg)\r\n\r\n.. code-block:: python\r\n\r\n    mid = mido.MidiFile('song.mid')\r\n    for msg in mid.play():\r\n        port.send(msg)\r\n\r\n\r\nFull documentation at https://mido.readthedocs.io/\r\n\r\n\r\nMain Features\r\n-------------\r\n\r\n* works in Python 2 and 3.\r\n\r\n* convenient message objects.\r\n\r\n* supports RtMidi, PortMidi and Pygame. New backends are easy to\r\n  write.\r\n\r\n* full support for all 18 messages defined by the MIDI standard.\r\n\r\n* standard port API allows all kinds of input and output ports to be\r\n  used interchangeably. New port types can be written by subclassing\r\n  and overriding a few methods.\r\n\r\n* includes a reusable MIDI stream parser.\r\n\r\n* full support for MIDI files (read, write, create and play) with\r\n  complete access to every message in the file, including all common\r\n  meta messages.\r\n\r\n* can read and write SYX files (binary and plain text).\r\n\r\n* implements (somewhat experimental) MIDI over TCP/IP with socket\r\n  ports. This allows for example wireless MIDI between two\r\n  computers.\r\n\r\n* includes programs for playing MIDI files, listing ports and\r\n  serving and forwarding ports over a network.\r\n\r\n\r\nStatus\r\n------\r\n\r\n1.2 is the third stable release.\r\n\r\n\r\nRequirements\r\n------------\r\n\r\nMido targets Python 3.6 and 2.7.\r\n\r\n\r\nInstalling\r\n----------\r\n\r\n::\r\n\r\n    pip install mido\r\n\r\nIf you want to use ports::\r\n\r\n   pip install python-rtmidi\r\n\r\nSee ``docs/backends/`` for other backends.\r\n\r\n\r\n\r\nSource Code\r\n-----------\r\n\r\nhttps://github.com/mido/mido/\r\n\r\n\r\nLicense\r\n-------\r\n\r\nMido is released under the terms of the `MIT license\r\n<http://en.wikipedia.org/wiki/MIT_License>`_.\r\n\r\n\r\nQuestions and suggestions\r\n-------------------------\r\n\r\nFor questions and proposals which may not fit into issues or pull requests, we\r\nrecommend to ask and discuss on `Discussions\r\n<https://github.com/mido/mido/discussions>`_.\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://mido.readthedocs.io/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mido-fix",
    "package_url": "https://pypi.org/project/mido-fix/",
    "platform": null,
    "project_url": "https://pypi.org/project/mido-fix/",
    "project_urls": {
      "Homepage": "https://mido.readthedocs.io/"
    },
    "release_url": "https://pypi.org/project/mido-fix/1.2.12/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "MIDI Objects for Python",
    "version": "1.2.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15369040,
  "releases": {
    "1.2.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4010fbb659e1691077f7159e6350efcecda9f4e2f2eedf4a5ee59869ba2a7038",
          "md5": "a7a9fc6ea0533a54a385a060e824a19a",
          "sha256": "8ce7ad87f847de36c7dd3048876581113c4d83367d1f392e5a7a9f9562b3374e"
        },
        "downloads": -1,
        "filename": "mido_fix-1.2.12.tar.gz",
        "has_sig": false,
        "md5_digest": "a7a9fc6ea0533a54a385a060e824a19a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 99443,
        "upload_time": "2022-10-11T03:41:20",
        "upload_time_iso_8601": "2022-10-11T03:41:20.359126Z",
        "url": "https://files.pythonhosted.org/packages/40/10/fbb659e1691077f7159e6350efcecda9f4e2f2eedf4a5ee59869ba2a7038/mido_fix-1.2.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4010fbb659e1691077f7159e6350efcecda9f4e2f2eedf4a5ee59869ba2a7038",
        "md5": "a7a9fc6ea0533a54a385a060e824a19a",
        "sha256": "8ce7ad87f847de36c7dd3048876581113c4d83367d1f392e5a7a9f9562b3374e"
      },
      "downloads": -1,
      "filename": "mido_fix-1.2.12.tar.gz",
      "has_sig": false,
      "md5_digest": "a7a9fc6ea0533a54a385a060e824a19a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 99443,
      "upload_time": "2022-10-11T03:41:20",
      "upload_time_iso_8601": "2022-10-11T03:41:20.359126Z",
      "url": "https://files.pythonhosted.org/packages/40/10/fbb659e1691077f7159e6350efcecda9f4e2f2eedf4a5ee59869ba2a7038/mido_fix-1.2.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}