{
  "info": {
    "author": "Mathew Woodyard",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# bpq\n[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg?style=flat)](https://github.com/badpacketsllc/bpq/graphs/commit-activity)\n![Build Status](https://github.com/badpacketsllc/bpq/workflows/ci/badge.svg?style=flat)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/bpq?style=flat)\n[![Docker image download](https://img.shields.io/docker/pulls/badpacketsllc/bpq?style=flat)](https://hub.docker.com/r/badpacketsllc/bpq)\n[![License](https://img.shields.io/github/license/badpacketsllc/bpq?style=flat)](https://github.com/badpacketsllc/bpq/blob/main/LICENSE)\n[![Follow us on twitter](https://img.shields.io/twitter/follow/bad_packets.svg?style=social)](https://twitter.com/bad_packets/)\n\nA suite of helpful tools for interacting with the [Bad Packets Cyber Threat\nIntelligence API](https://docs.badpackets.net/).\n\n# Getting started\n\n## Environment requirements\nIn order to run the code in this repository, you need to have a standard\nrelease of Python version 3.6 or higher installed. No additional libraries are\nrequired.\n\nIf you prefer running your applications in containers, skip to the\n[container build and run section](#building-the-application-container).\n\n## Installing\n```shell\n$ python3 -m pip install bpq\n```\n\n## Building\nIf you prefer to install `bpq` using a local build, you can do so using `pip`.\n\n```shell\n$ python3 -m pip install .\n```\n\n## Running the CLI tool\n```shell\n$ bpq -h\nusage: bpq [-h]  # ... usage information follows\n\nPulls Bad Packets CTI data. All arguments given at the command line can be\nspecified using environment variables. For example, a command line option of\n`--output-format csv` is equivalent to setting the environment variable\n`OUTPUT_FORMAT=csv`. Any argument not specified will be populated with an\nenvironment variable or the default value indicated in `--help`.\n\n# ... argument documentation follows\n```\n\n### Running without building\nYou can still run the command line application without building a package if\nyou like. Just run `python3 -m bpq.cli` instead of `bpq`.\n\n\n## Examples\nYou can find example scripts (using this CLI tool, the Python API and `curl`)\nin the project's `examples`\n[directory](https://github.com/badpacketsllc/bpq/-/tree/main/examples).\n\n## Another note on authenticating and using command line arguments\nThe shell script will attempt to resolve parameters from environment variables.\nThe most important environment variables are:\n\n| Variable name         | Description                                                              |\n|-----------------------|--------------------------------------------------------------------------|\n| BAD_PACKETS_API_TOKEN | Token use for API authentication                                         |\n| LOG_LEVEL             | Log verbosity. Can have a value of `ERROR`, `WARNING`, `DEBUG` or `INFO` |\n\nIf no environment variable exists or a command line argument is given,\nthe tool will take the command line argument (i.e. command line arguments\nalways have priority over environment variables).\n\n# Developing\nDevelopment help is always welcome! Full documentation on how to get started is\nin the project's\n[CONTRIBUTING.rst](https://github.com/badpacketsllc/bpq/-/blob/main/CONTRIBUTING.rst)\nfile.\nPlease be nice and follow our\n[code of conduct](https://github.com/badpacketsllc/bpq/-/blob/main/CODE-OF-CONDUCT.md)\nwhenever you participate.\n\n## Building the application container\nThis application is designed to run only in an unprivileged container as a\nnon-root user. Docker and Podman are supported for building container images,\nand we currently support Alpine and\n[Red Hat Universal Base Image (UBI)](https://developers.redhat.com/products/rhel/ubi)\nas base operating systems.\nYou can control the version of Python defining the `PYTHON_VERSION` parameter\nat build time.\n\n### Using `docker`\nTo build a container with the default base image (Python 3.9 running on the\nlatest stable version of Alpine), run\n\n`docker build --rm --no-cache -t bpq .`\n\nThe `PYTHON_VERSION` build argument can be used to control which\nversion of Python you are using. For example,\n`docker build --rm --no-cache --build-arg PYTHON_VERSION=3.6 -t bpq .`\nwill build an application image running Python 3.6.\n\n### Using `podman`\n`podman build --rm --no-cache -t bpq .`\n\nNote that `podman` reads `Containerfile` by default, which builds from the\n[Red Hat Universal Base Image (UBI)](https://developers.redhat.com/products/rhel/ubi)\nrather than images from Docker Hub. Due to Red Hat's naming conventions, Python\nversions should be formatted as `${major}${minor}` rather than\n`${major}.${minor}`. Concretely, `--build-arg PYTHON_VERSION=38` will build a\ncontainer that runs Python 3.8. If you  do not want to use the Python UBI at\nall, pass `--file Dockerfile` to `podman`.\n\n## Running the application container\n`docker run -e BAD_PACKETS_API_TOKEN=${BAD_PACKETS_API_TOKEN} bpq` if using\nDocker. `podman run -e BAD_PACKETS_API_TOKEN=${BAD_PACKETS_API_TOKEN} bpq` if\nusing Podman.\n\nContributing\n------------\n\nContributions are encouraged! Learn how to contribute by reading\n[CONTRIBUTING.md](https://github.com/badpacketsllc/bpq/blob/main/CONTRIBUTING.md).\nPlease be nice and follow our\n[Code of Conduct](https://github.com/badpacketsllc/bpq/blob/main/CODE_OF_CONDUCT.md).\n\nLicense\n-------\n\nApache License 2.0\n\nAuthor Information\n------------------\n\n[Mathew Woodyard](https://www.matwoodyard.com)\n\n[@ctidelivery](https://twitter.com/ctidelivery)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/badpacketsllc/bpq/",
    "keywords": "api,cti,sdk",
    "license": "Apache License 2.0",
    "maintainer": "Mathew Woodyard",
    "maintainer_email": "",
    "name": "bpq",
    "package_url": "https://pypi.org/project/bpq/",
    "platform": null,
    "project_url": "https://pypi.org/project/bpq/",
    "project_urls": {
      "Homepage": "https://github.com/badpacketsllc/bpq/"
    },
    "release_url": "https://pypi.org/project/bpq/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Tools that help you interact with the Bad Packets Cyber Threat Intelligence API.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14167433,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ea5ce13e15a61eafe2ce0bfe6537996ce1b9c25464934d1d9a9e6b185ff3630",
          "md5": "5b1b60ae523841dc505b888cffd981d4",
          "sha256": "fdc2e4cb729df122088cf9e1d8dbf76b33f33bde3c933123bf347489f41e9b15"
        },
        "downloads": -1,
        "filename": "bpq-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b1b60ae523841dc505b888cffd981d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21727,
        "upload_time": "2022-03-08T01:36:03",
        "upload_time_iso_8601": "2022-03-08T01:36:03.203879Z",
        "url": "https://files.pythonhosted.org/packages/3e/a5/ce13e15a61eafe2ce0bfe6537996ce1b9c25464934d1d9a9e6b185ff3630/bpq-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "215d034bd62715f7e254423d62f4dce485b16b083e61b286b585e91362a634ec",
          "md5": "f3a73f058498ed06e305e274c433ed55",
          "sha256": "555a32f4ccd49b832aeb44b98cb691b224730843d2263c8bbb61f416e358023b"
        },
        "downloads": -1,
        "filename": "bpq-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3a73f058498ed06e305e274c433ed55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13321,
        "upload_time": "2022-06-17T21:32:56",
        "upload_time_iso_8601": "2022-06-17T21:32:56.417640Z",
        "url": "https://files.pythonhosted.org/packages/21/5d/034bd62715f7e254423d62f4dce485b16b083e61b286b585e91362a634ec/bpq-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "215d034bd62715f7e254423d62f4dce485b16b083e61b286b585e91362a634ec",
        "md5": "f3a73f058498ed06e305e274c433ed55",
        "sha256": "555a32f4ccd49b832aeb44b98cb691b224730843d2263c8bbb61f416e358023b"
      },
      "downloads": -1,
      "filename": "bpq-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f3a73f058498ed06e305e274c433ed55",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13321,
      "upload_time": "2022-06-17T21:32:56",
      "upload_time_iso_8601": "2022-06-17T21:32:56.417640Z",
      "url": "https://files.pythonhosted.org/packages/21/5d/034bd62715f7e254423d62f4dce485b16b083e61b286b585e91362a634ec/bpq-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}