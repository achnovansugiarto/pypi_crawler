{
  "info": {
    "author": "Felix Gigler, Dejan Nickovic, Mateis Cristinel, Nicolas Basset, Thao Dang",
    "author_email": "felix.gigler.fl@ait.ac.at",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ShapEx\r\n\r\n## Introduction\r\nShapEx is a tool   that generates  random  behaviors  from  shape  expressions,  a  formal specification formalism for describing sophisticated temporal behaviors of CPS. \r\nThe tool samples a random behavior in two steps:\r\n\r\n   (1) it first explores the space of qualitative parameterized shapes and then \r\n\r\n   (2) instantiates parameters by sampling a possibly non-linear constraint.\r\n\r\nIt uses several sampling algorithms for the different stages of sample generation and generates timed traces according to a textual shape expression file.\r\n\r\n## Installation\r\nShapEx is written in Python 3 and uses our standalone library *anyHR*. \r\nIt is necessary to have a working installation of Python 3,\r\n[pip](https://pip.pypa.io/en/stable/installing/) and [git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)  for the following installation process.\r\n\r\nTo install the tool, open a terminal and type \r\n`pip install ShapEx`.\r\n\r\nThis also installs *anyHR* and all other dependencies. The below example should now work right away.\r\n\r\n## Use\r\nThe following block illustrates a minimum working example for the use of the ShapEx tool to generate a set of \"pulse\" traces. \r\n100 samples are generated for the SE from the imported text file 'pulse.sx'.\r\n```python\r\nfrom shapex.shapex.ShapEx import *\r\nfrom shapex.misc.visualize import plotter\r\n\r\n# initialize ShapEx object\r\nse = ShapEx(dir_sampling=DirectionSampling.CDHR, init_point=InitPoint.SMT,timestep=0.01)\r\n# loads the specification\r\nse.add_shape_expression('pulse.sx')\r\n# Generate 100 examples\r\nsamples = se.samples(100)\r\n\r\nplotter(samples)\r\n```\r\n\r\nFor this, prepare the specification file 'pulse.sx' in the same directory as the above script: \r\nThe pulse is a concatenation of line segments with certain parameter ranges, \r\nwith additional constraints to make the segments more continuous.\r\n```python\r\n# regular expression\r\nline(a1,b1,d1).line(a2,b2,d2).line(a3,b3,d3).line(a4,b4,d4).line(a5,b5,d5)\r\n\r\n:\r\n\r\n# parameter declarations with ranges\r\nparam a1 in (0,0);\r\nparam b1 in (0,0.1);\r\nduration d1 in (1,2);\r\n\r\nparam a2 in (0,-1);\r\nparam b2 in (-0.1,0.1);\r\nduration d2 in (1,2);\r\n\r\nparam a3 in (0,0);\r\nparam b3 in (0,-2);\r\nduration d3 in (1,2);\r\n\r\nparam a4 in (0,1);\r\nparam b4 in (-2,-0.5);\r\nduration d4 in (1,2);\r\n\r\nparam a5 in (0,0);\r\nparam b5 in (-1,1);\r\nduration d5 in (1,2);\r\n\r\n# relational constraints\r\nb1+a1*d1-b2 in (-0.01,0.01);\r\nb2+a2*d2-b3 in (-0.01,0.01);\r\nb3+a3*d3-b4 in (-0.01,0.01);\r\nb4+a4*d4-b5 in (-0.01,0.01);\r\nb5+a5*d5-b1 in (-0.01,0.01);\r\n```\r\n\r\nBoth files can be found in the shapex/examples directory of this repository.\r\n\r\nThe following table gives an overview of the parameters that can be set at ShapEx object initialization (line 4 of the code above):\r\n\r\n| Parameter          | Description                                                                                            | Values                                                       |\r\n|--------------------|--------------------------------------------------------------------------------------------------------|--------------------------------------------------------------|\r\n| timestep           | Difference between two consecutive timestamps.                                                         | positive float (default 1.0)                                 |\r\n| word_sampler       | Qualitative word sampler.                                                                              | WordSamplerMode.SEARCH (default),  WordSamplerMode.BOLTZMANN |\r\n| search_budget      | Maximum number of distinctive qualitative words. Applicable to WordSamplerMode.SEARCH only.            | positive integer (default 10)                                |\r\n| mean_word_length   | Mean length of qualitative word. Applicable to WordSamplerMode.BOLTZMANN only.                          | positive float (default 10.0)                                |\r\n| dir_sampling       | Direction sampling hit-and-run algorithm. Random (RDHR) vs. coordinate direction (CDHR)                | DirectionSampling.RDHR (default), DirectionSampling.CDHR     |\r\n| shrinking          | Direction sampling hit-and-run algorithm.                                                              | Shrinking.NO_SHINKING (default), Shrinking.SHRINKING         |\r\n| init_point         | Hit-and-run with or without shrinking                                                                  | InitPoint.PSO (default), InitPoint.SMT                       |\r\n| noise_distribution | Finding initial point for hit-and-run. Particle swarm optimization (PSO) vs. constraint solving (SMT). | 'uniform' (default), 'gaussian'                              |\r\n| noise              | Distribution use to add noise to the generated signals.                                                | positive float (default 0.0)                                 |\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\r\n\t\t\r\n\r\n\t\t\r\n\t\t\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/figlerg/ShapEx.git",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ShapEx",
    "package_url": "https://pypi.org/project/ShapEx/",
    "platform": "",
    "project_url": "https://pypi.org/project/ShapEx/",
    "project_urls": {
      "Homepage": "https://github.com/figlerg/ShapEx.git"
    },
    "release_url": "https://pypi.org/project/ShapEx/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Library for sampling shape expressions.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11582803,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76d9915d8869271df5cb235bae5ddaf2c52d697f420a110f7a6509e17a0bfe7d",
          "md5": "6a6ec2e94bee4d73cb11742b610a6519",
          "sha256": "e674e25286102f97d9cd1b3f63a7bf794dd7504df4cfff656049f98769894019"
        },
        "downloads": -1,
        "filename": "ShapEx-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a6ec2e94bee4d73cb11742b610a6519",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 52009,
        "upload_time": "2021-07-26T11:21:21",
        "upload_time_iso_8601": "2021-07-26T11:21:21.472032Z",
        "url": "https://files.pythonhosted.org/packages/76/d9/915d8869271df5cb235bae5ddaf2c52d697f420a110f7a6509e17a0bfe7d/ShapEx-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15cd33aefcbef36071ecbcce70fe5264dd7cd8eec09e2853c942d8049613b48e",
          "md5": "e64d5c72de5a82c444441a1ad3509e46",
          "sha256": "140374c7c8fd3487ba0ebaea1a3491c4b51e0ab2d0b517674b3992359449ead6"
        },
        "downloads": -1,
        "filename": "ShapEx-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e64d5c72de5a82c444441a1ad3509e46",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 40433,
        "upload_time": "2021-09-29T14:11:19",
        "upload_time_iso_8601": "2021-09-29T14:11:19.940926Z",
        "url": "https://files.pythonhosted.org/packages/15/cd/33aefcbef36071ecbcce70fe5264dd7cd8eec09e2853c942d8049613b48e/ShapEx-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15cd33aefcbef36071ecbcce70fe5264dd7cd8eec09e2853c942d8049613b48e",
        "md5": "e64d5c72de5a82c444441a1ad3509e46",
        "sha256": "140374c7c8fd3487ba0ebaea1a3491c4b51e0ab2d0b517674b3992359449ead6"
      },
      "downloads": -1,
      "filename": "ShapEx-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e64d5c72de5a82c444441a1ad3509e46",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 40433,
      "upload_time": "2021-09-29T14:11:19",
      "upload_time_iso_8601": "2021-09-29T14:11:19.940926Z",
      "url": "https://files.pythonhosted.org/packages/15/cd/33aefcbef36071ecbcce70fe5264dd7cd8eec09e2853c942d8049613b48e/ShapEx-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}