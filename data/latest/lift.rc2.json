{
  "info": {
    "author": "Nicolas Delvaux",
    "author_email": "contact@nicolas-delvaux.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "Lift Integration-Functional Testing - A meta test framework\n===========================================================\n\n\n[![Build Status](https://github.com/Malizor/lift/actions/workflows/main.yml/badge.svg?branch=main)](https://github.com/Malizor/lift/actions/workflows/main.yml)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n\nUsually, there is not much to discuss when writing unit tests.  \nThey have to use the same programming language as the code they are testing\nand most languages have a set of dedicated test frameworks that you may chose from.\n\nHowever, functional and integration tests are more often a bunch of\nscripts/executables written in different languages.  \nFor example, you may prefer to use shell scripts to test a web-service\n(eg. via `curl`) and a Python program to interact with Python modules.  \nAnd if C/Ruby/Perl/PHP/whatever is more suited to some of your test cases,\nyou want to use these languages too without having to write the full test suite with it.\n\nCurrently, most projects seem to have either multiple functional/integration\ntest suites (re-using different unit testing frameworks) or internal solutions\nto group all the tests executable together in a more or less clean way.\n\nLift provides an integration/functional test platform which handles *executable*\ntests easily and generically.  \n\n\n### Features\n\n* Lift only deals with *executables* and their return code  \n  → A particular test can be written in the language that fit it the most\n* Test declaration in a simple YAML syntax  \n  → No need to learn a programming language to integrate a test in a suite\n* Easily declare a test as running locally or on a remote machine\n* Remote tests: upload needed assets automatically and cleanup afterward\n* Naturally organize a test suite in multiple sub-folders/sub-test suites\n* Easily run a sub-test suite or specific tests from the command line\n* Pass environment variables to tests\n* Inheritance of remotes and environment across sub-test suites  \n  → For example, remotes can be defined in the top folder and used below\n* Only one command to run all or specific tests: `lift`\n* Export XUnit reports, for easy integration with Jenkins & friends\n\n\n### Documentation\n\nThe `doc` folder contains man pages.\n\n\n### Example\n\nFor a fully commented example of a lift test suite (which can also be seen as\na functional test suite for Lift itself), see the `example` folder.\n\n\n### Installation\n\nUse `sudo python3 setup.py install`  \n\nIf you want to build and install the man pages, run:\n```\nsudo rst2man doc/lift.rst /usr/share/man/man1/lift.1\nsudo rst2man doc/lift.yaml.rst /usr/share/man/man1/lift.yaml.1\n```\n\n##### Dependencies\n\n* Python 3 (>= 3.4)\n* python3-yaml\n* python3-paramiko\n* python3-docutils (for man pages)\n* python3-junit.xml\n\n\n### Home page\n\nhttps://github.com/Malizor/lift\n\n\n### License\n\nGNU General Public License (GPL) version 2+  \nPlease refer to the COPYING file.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Malizor/lift/tarball/2.6.1",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Malizor/lift",
    "keywords": "test testing",
    "license": "GPL2+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lift",
    "package_url": "https://pypi.org/project/lift/",
    "platform": null,
    "project_url": "https://pypi.org/project/lift/",
    "project_urls": {
      "Download": "https://github.com/Malizor/lift/tarball/2.6.1",
      "Homepage": "https://github.com/Malizor/lift"
    },
    "release_url": "https://pypi.org/project/lift/2.6.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "High level test framework",
    "version": "2.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15619081,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42f554c442e1bc24e4e4a8c5554d49173b186afd7020ffcd9399f863d46af753",
          "md5": "7f20e573693ba524427ec62b8b59e291",
          "sha256": "3d5c8c3dc427e757c91a66395f16f3d120b634b32cb4ad7d5b4eb0bb3673be56"
        },
        "downloads": -1,
        "filename": "lift-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7f20e573693ba524427ec62b8b59e291",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20484,
        "upload_time": "2015-03-28T08:50:26",
        "upload_time_iso_8601": "2015-03-28T08:50:26.894185Z",
        "url": "https://files.pythonhosted.org/packages/42/f5/54c442e1bc24e4e4a8c5554d49173b186afd7020ffcd9399f863d46af753/lift-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88cb2c16105612abedba195ff5337e155e5b4e9d30b65eb4a2e9512c753ddbc9",
          "md5": "b0694a53410283b186cbf52fd1dbea12",
          "sha256": "05755128f1ec08b0145ef41ce90ce921e9ae52e0dbae804aa2f738d6ccc52b38"
        },
        "downloads": -1,
        "filename": "lift-2.6.1.zip",
        "has_sig": false,
        "md5_digest": "b0694a53410283b186cbf52fd1dbea12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33844,
        "upload_time": "2022-11-01T22:10:20",
        "upload_time_iso_8601": "2022-11-01T22:10:20.119277Z",
        "url": "https://files.pythonhosted.org/packages/88/cb/2c16105612abedba195ff5337e155e5b4e9d30b65eb4a2e9512c753ddbc9/lift-2.6.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88cb2c16105612abedba195ff5337e155e5b4e9d30b65eb4a2e9512c753ddbc9",
        "md5": "b0694a53410283b186cbf52fd1dbea12",
        "sha256": "05755128f1ec08b0145ef41ce90ce921e9ae52e0dbae804aa2f738d6ccc52b38"
      },
      "downloads": -1,
      "filename": "lift-2.6.1.zip",
      "has_sig": false,
      "md5_digest": "b0694a53410283b186cbf52fd1dbea12",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 33844,
      "upload_time": "2022-11-01T22:10:20",
      "upload_time_iso_8601": "2022-11-01T22:10:20.119277Z",
      "url": "https://files.pythonhosted.org/packages/88/cb/2c16105612abedba195ff5337e155e5b4e9d30b65eb4a2e9512c753ddbc9/lift-2.6.1.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}