{
  "info": {
    "author": "Gramkraxor",
    "author_email": "gram@krax.dev",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: The Unlicense (Unlicense)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Compilers",
      "Topic :: Software Development :: Interpreters"
    ],
    "description": "# MWOT, an esolang\n\n\n## The MWOT Language\n\nMWOT is an esoteric language for writing individual bits as readable\ntext.\nOr text that is entirely unreadable.\nThe only requirement is that each word have a number of letters equal to\nthe bit it represents, modulo 2.\nThe full rules of the language are:\n\n- Words are separated by whitespace.\n- A word with an odd number of letters (not including digits or\n  punctuation) generates a 1.\n- A word with an even number of letters generates a 0.\n- A word with no letters is ignored.\n- A shebang (a sequence at the very start of a file starting with \"#!\"\n  and ending with a newline) is ignored.\n\nMWOT's design allows perfectly valid data to be written as a poem, a\nstory, a manifesto, or a lot of nonsense.\nIts broad definition of \"letter\" allows it to work with any written\nlanguage.\nAnd its ability to conceal data in plain text gives it excellent\nsteganographic potential.\n\nBecause raw bits aren't very useful, MWOT compiles to two formats:\nbrainfuck and binary.\n\n### Brainfuck MWOT\n\nA true esoteric programming language.\nEvery three bits encode a brainfuck instruction.\n\n| MWOT                    | bits | brainfuck |\n| :---------------------- | :--- | :-------: |\n| An Indirect Kiss        | 000  |    `>`    |\n| Drop Beat Dad           | 001  |    `<`    |\n| Greg the Babysitter     | 010  |    `+`    |\n| On the Run              | 011  |    `-`    |\n| Super Watermelon Island | 100  |    `.`    |\n| Beach City Drift        | 101  |    `,`    |\n| Story for Steven        | 110  |    `[`    |\n| Catch and Release       | 111  |    `]`    |\n\n### Binary MWOT\n\nBits are grouped into bytes.\nThink of it like a really inefficient base64.\n\n| MWOT                               | bits     | byte   |\n| :--------------------------------- | :------- | :----: |\n| I can show you how to be strong /  | 11011000 | `\\xd8` |\n| In the real way / And I know that  | 01011100 |  `\\\\`  |\n| we can be strong / In the real way | 01000101 |  `E`   |\n\n### Etymology\n\n\"MWOT\" stands for Massive Wall Of Text, something that is unavoidable\nwhen rendering even small amounts of data in this format.\n\nOr maybe it stands for Massive Waste Of Time.\nDo you know how long it takes to *write* a massive wall of text that\ncompiles to exactly what you wanted it to?\n\n\n## The `mwot` Program\n\n`mwot` can compile or decompile MWOT.\nIt also comes with a brainfuck interpreter built in.\n\nIts options include:\n\n- Free choice to take source code (also, interpreter input) from\n  standard input, a file, or a string\n- Shebang and executable permission control\n- Multiple decompilers to try\n- Full control of the brainfuck interpreter's implementation details\n\n### Usage examples\n\n```sh\n# Compile `hello.mwot` as brainfuck\nmwot -cb hello.mwot -o hello.b\n\n# Decompile `goodbye.txt` as binary data\nmwot -dy goodbye.txt -o goodbye.txt.mwot\n\n# Execute brainfuck\nmwot -xb hello.b\n\n# Compile `hello.mwot` to an executable brainfuck script\nmwot -cbSX hello.mwot -o hello\n\n# Generate a very literal `hello.mwot`, using standard I/O\nmwot -db -D basic --vocab 'zero one' < hello.b > hello-literal.mwot\n\n# Execute brainfuck with strict settings and no input\nmwot -xb --eof=-1 --wraparound false --no-shebang-in --input '' hello.b\n\n# Execute brainfuck MWOT without compiling to a file\nmwot -ib hello.mwot\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://codeberg.org/gramkraxor/mwot",
    "keywords": "esolang,esoteric language,brainfuck",
    "license": "Unlicense",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mwot",
    "package_url": "https://pypi.org/project/mwot/",
    "platform": null,
    "project_url": "https://pypi.org/project/mwot/",
    "project_urls": {
      "Homepage": "https://codeberg.org/gramkraxor/mwot"
    },
    "release_url": "https://pypi.org/project/mwot/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Constrained writing as an encoding",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14886210,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d78c5d5901a9149992d5f0b12de0fbf61d4fac7acd13a1284198b11c654a7a9",
          "md5": "9c557c598dc064db11e08c9af13510b2",
          "sha256": "82e25e72c9303972d6f28d703e72c3ecd384a48d191b81b6a4963ca9c3c3b9f3"
        },
        "downloads": -1,
        "filename": "mwot-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9c557c598dc064db11e08c9af13510b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 6522,
        "upload_time": "2021-04-30T02:28:05",
        "upload_time_iso_8601": "2021-04-30T02:28:05.413571Z",
        "url": "https://files.pythonhosted.org/packages/5d/78/c5d5901a9149992d5f0b12de0fbf61d4fac7acd13a1284198b11c654a7a9/mwot-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4e05bea8c914ccf252df2ffba4b0735f070f5a093ece614e6a8a7f45494f026",
          "md5": "e53fbd9b53195e87a2eb1fe8ab814165",
          "sha256": "afce1a8942974e58ad9b40409d889570ca65f6a5a87782851b18964f0c9913c1"
        },
        "downloads": -1,
        "filename": "mwot-0.0.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "e53fbd9b53195e87a2eb1fe8ab814165",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1629,
        "upload_time": "2021-04-16T17:26:20",
        "upload_time_iso_8601": "2021-04-16T17:26:20.033798Z",
        "url": "https://files.pythonhosted.org/packages/e4/e0/5bea8c914ccf252df2ffba4b0735f070f5a093ece614e6a8a7f45494f026/mwot-0.0.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c56f3e5f492a7bb57c1b495efa192895cc874c6a5cd9b81c8ca177dfdafcd15f",
          "md5": "d9d310c8f1dea8de1a5dc34b39cd3e46",
          "sha256": "0deb79fd23269785d32d80b0a968734184d4540702f847ae3bd3b0b9b361a886"
        },
        "downloads": -1,
        "filename": "mwot-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d9d310c8f1dea8de1a5dc34b39cd3e46",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 7971,
        "upload_time": "2021-05-07T00:28:26",
        "upload_time_iso_8601": "2021-05-07T00:28:26.015172Z",
        "url": "https://files.pythonhosted.org/packages/c5/6f/3e5f492a7bb57c1b495efa192895cc874c6a5cd9b81c8ca177dfdafcd15f/mwot-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d688e936b7116bc809de788fb07c306aebd3e7b76522e29817faef98f22ec210",
          "md5": "88d18d5455743b86bbdc3f52758cd5f2",
          "sha256": "8d6875ebab0dadb9be91619f285e7c6026081605f70653d3221501bbd7a01c89"
        },
        "downloads": -1,
        "filename": "mwot-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "88d18d5455743b86bbdc3f52758cd5f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 18011,
        "upload_time": "2022-08-25T23:26:43",
        "upload_time_iso_8601": "2022-08-25T23:26:43.772932Z",
        "url": "https://files.pythonhosted.org/packages/d6/88/e936b7116bc809de788fb07c306aebd3e7b76522e29817faef98f22ec210/mwot-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a719522b0235f8c93ab214963204dea751d46e25f0c4bd95f500e10096b14c6",
          "md5": "4333917fcf5dfb202b9e63069266c173",
          "sha256": "e13434066606c2c1229c090344220ee188261238e7b2612e5b97f9fa454ac772"
        },
        "downloads": -1,
        "filename": "mwot-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4333917fcf5dfb202b9e63069266c173",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 15606,
        "upload_time": "2022-08-25T23:26:46",
        "upload_time_iso_8601": "2022-08-25T23:26:46.952888Z",
        "url": "https://files.pythonhosted.org/packages/9a/71/9522b0235f8c93ab214963204dea751d46e25f0c4bd95f500e10096b14c6/mwot-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d688e936b7116bc809de788fb07c306aebd3e7b76522e29817faef98f22ec210",
        "md5": "88d18d5455743b86bbdc3f52758cd5f2",
        "sha256": "8d6875ebab0dadb9be91619f285e7c6026081605f70653d3221501bbd7a01c89"
      },
      "downloads": -1,
      "filename": "mwot-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "88d18d5455743b86bbdc3f52758cd5f2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 18011,
      "upload_time": "2022-08-25T23:26:43",
      "upload_time_iso_8601": "2022-08-25T23:26:43.772932Z",
      "url": "https://files.pythonhosted.org/packages/d6/88/e936b7116bc809de788fb07c306aebd3e7b76522e29817faef98f22ec210/mwot-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a719522b0235f8c93ab214963204dea751d46e25f0c4bd95f500e10096b14c6",
        "md5": "4333917fcf5dfb202b9e63069266c173",
        "sha256": "e13434066606c2c1229c090344220ee188261238e7b2612e5b97f9fa454ac772"
      },
      "downloads": -1,
      "filename": "mwot-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4333917fcf5dfb202b9e63069266c173",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 15606,
      "upload_time": "2022-08-25T23:26:46",
      "upload_time_iso_8601": "2022-08-25T23:26:46.952888Z",
      "url": "https://files.pythonhosted.org/packages/9a/71/9522b0235f8c93ab214963204dea751d46e25f0c4bd95f500e10096b14c6/mwot-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}