{
  "info": {
    "author": "Clemens Hofreither",
    "author_email": "clemens.hofreither@ricam.oeaw.ac.at",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "\n# flamp - Faster linear algebra with multiple precision [![Build Status](https://github.com/c-f-h/flamp/actions/workflows/python-package.yml/badge.svg)](https://github.com/c-f-h/flamp/actions/workflows/python-package.yml) [![PyPI version](https://badge.fury.io/py/flamp.svg)](https://badge.fury.io/py/flamp)\n\n`flamp` contains ports of many real and complex linear algebra routines from\nthe [`mpmath`](https://mpmath.org/) package, but using numpy object arrays\ncontaining [`gmpy2`](https://pypi.org/project/gmpy2/) multiprecision floating point numbers instead of the\n`mpmath` floating point numbers. The resulting linear algebra routines are\ntypically by a factor of 10x-15x faster than those in `mpmath`.\n\n`flamp` is based on `mpmath` by Fredrik Johansson and mpmath contributors;\nin particular, the eigenvalue algorithms therein are by Timo Hartmann.\n`flamp` is BSD-licensed.\n\n## Installation\n\nThe package is written in pure Python and can simply be installed by\n\n    pip install flamp\n\nIts only dependencies are `numpy` and `gmpy2`, both of which have pre-built\npackages readily available.\n\n## Benchmarks\n\nHere are some timings for computing the eigenvalues and right eigenvectors of\nan n x n real matrix with `prec` binary digits. Results using `mpmath`, `flamp`\nand [`arb`](https://arblib.org/) via the\n[`python-flint`](https://github.com/fredrik-johansson/python-flint) bindings\nare reported. Percentages are relative to the `arb` baseline.\n\n    n = 50 prec = 169\n    mpmath:  12.13s  (2766.1%)\n    flamp:    1.13s  (257.4%)\n    arb:      0.44s  (100.0%)\n\n    n = 100 prec = 169\n    mpmath:  90.55s  (2929.1%)\n    flamp:    8.55s  (276.4%)\n    arb:      3.09s  (100.0%)\n\n    n = 50 prec = 336\n    mpmath:  14.20s  (2073.9%)\n    flamp:    1.57s  (229.7%)\n    arb:      0.68s  (100.0%)\n\n    n = 100 prec = 336\n    mpmath: 106.47s  (2177.7%)\n    flamp:   11.59s  (237.1%)\n    arb:      4.89s  (100.0%)\n\nConclusion: for raw speed, use `arb` which is written in pure C. If you want a\npure Python package which provides reasonable performance (usually within a\nfactor of ~2.5x of `arb`), use `flamp`.\n\n## List of functions\n\nThe following is a list of supported functions in the `flamp` module by category. All matrix and\nvector arguments should be supplied as numpy arrays of `gmpy2` numbers,\nalthough standard floating point numpy arrays will be automatically converted\nin most cases.\n\nRefer to the docstrings for further information.\n\n### Linear algebra\n\nThese behave essentially like the corresponding functions in `mpmath`, with\nsome slight modifications. For instance, all functions for solving linear\nsystems accept either a single vector or an array of vectors for the right-hand\nside.\n\n- `lu_solve(A, b)` - solve a linear system using LU decomposition\n- `qr_solve(A, b)` - solve a linear system using QR decomposition\n- `cholesky_solve(A, b)` - solve a symmetric positive definite system using Cholesky decomposition\n- `L_solve(L, b, unit_diag=False)` - solve a lower triangular system\n- `U_solve(U, y)` - solve an upper triangular system\n- `inverse(A)` - compute inverse of a square matrix\n- `det(A)` - compute determinant of a square matrix\n- `lu(A)` - compute LU decomposition of a square matrix\n- `qr(A, mode='full')` - compute QR decomposition of a matrix; mode=`full`, `reduced`, `raw`\n- `cholesky(A)` - compute Cholesky decomposition of a symmetric positive definite matrix\n- `eig(A, left=False, right=True)` - compute eigenvalues and (optionally) left and right eigenvectors of a matrix\n- `eigh(A, eigvals_only=False)` - compute eigenvalues and (optionally) the orthonormal eigenvectors of a real symmetric or complex Hermitian square matrix\n- `hessenberg(A)` - compute Hessenberg decomposition `(Q, R)` of a square matrix\n- `schur(A)` - compute Schur decomposition of a square matrix\n- `svd(A, full_matrices=False, compute_uv=True)` - compute singular value decomposition (singular values and optionally the left and right singular vectors) of a matrix\n\n### Array functions\n\nMost of these behave essentially like their numpy counterparts, but work with\n`gmpy2` extended precision numbers.\n\n- `zeros(shape)`\n- `ones(shape)`\n- `empty(shape)`\n- `eye(n)`\n- `linspace(start, stop, num, endpoint=True)`\n- `vector_norm(x)` - computes Euclidean norm of a vector\n- `to_mp(A)` - converts an arbitrary numpy array (or list/tuple) into an array of `gmpy2` numbers, copying the input\n\n### Utility functions\n\nThese functions are used to manipulate the working precision of the `gmpy2` library.\n\n- `prec_to_dps(n)` - number of accurate decimals that can be represented with a precision of `n` bits\n- `dps_to_prec(n)` - number of bits required to represent `n` decimals accurately\n- `get_precision()` - get the current precision in binary digits\n- `set_precision(prec)` - set the working precision in binary digits\n- `get_dps()` - get the current precision in decimal digits (approximate)\n- `set_dps(dps)` - set the working precision in decimal digits (approximate)\n- `extraprec(n)` - returns a context manager (for use in a `with` statement) which temporarily increases the working precision by the given amount\n\n### Array-aware special functions\n\nThese functions work much like the corresponding functions in numpy in that they\nautomatically distribute over numpy arrays while computing in extended\nprecision.\n\n- `exp(x)`\n- `sqrt(x)`\n- `sin(x)`\n- `cos(x)`\n- `tan(x)`\n- `sinh(x)`\n- `cosh(x)`\n- `tanh(x)`\n- `square(x)`\n- `log(x)`\n- `log2(x)`\n- `log10(x)`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/c-f-h/flamp",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flamp",
    "package_url": "https://pypi.org/project/flamp/",
    "platform": null,
    "project_url": "https://pypi.org/project/flamp/",
    "project_urls": {
      "Homepage": "https://github.com/c-f-h/flamp"
    },
    "release_url": "https://pypi.org/project/flamp/1.0.1/",
    "requires_dist": [
      "numpy (>=1.11)",
      "gmpy2"
    ],
    "requires_python": "",
    "summary": "Faster linear algebra with multiple precision",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13150696,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa474ec6aef75cea849216bb7854905726204eda7e6f3fb814a1139aab9b567c",
          "md5": "4341370dfa70f444b55b3953a1cb1869",
          "sha256": "dcc58a8066e2eca8d77084951de81bcaa8d45e9b546230e6232f13a4d3cd488a"
        },
        "downloads": -1,
        "filename": "flamp-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4341370dfa70f444b55b3953a1cb1869",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26761,
        "upload_time": "2022-03-01T13:35:36",
        "upload_time_iso_8601": "2022-03-01T13:35:36.842682Z",
        "url": "https://files.pythonhosted.org/packages/aa/47/4ec6aef75cea849216bb7854905726204eda7e6f3fb814a1139aab9b567c/flamp-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42a5ed7c8d1c4fb19fc14bd9ba2dac2466052dac7a42915ce4feefad1b811eae",
          "md5": "30c5a166c4f8cda4fd5c1e17a8d5fe12",
          "sha256": "becd07795e70729ed369c6960e7f8527b071e78c25d7bcb16c7bc3cc712fb992"
        },
        "downloads": -1,
        "filename": "flamp-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "30c5a166c4f8cda4fd5c1e17a8d5fe12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26982,
        "upload_time": "2022-03-01T13:35:38",
        "upload_time_iso_8601": "2022-03-01T13:35:38.609439Z",
        "url": "https://files.pythonhosted.org/packages/42/a5/ed7c8d1c4fb19fc14bd9ba2dac2466052dac7a42915ce4feefad1b811eae/flamp-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48611ff0b743a52b756fac05d0881089686f3999806c8b151c7abec10bb3ed3d",
          "md5": "374eb54a61dd82b7a58f41695b41e5c0",
          "sha256": "0944f88a4fb41e7279e9a6b3f7481d02bb147b025f9fd13c89aed58b9f346008"
        },
        "downloads": -1,
        "filename": "flamp-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "374eb54a61dd82b7a58f41695b41e5c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27362,
        "upload_time": "2022-03-11T15:38:02",
        "upload_time_iso_8601": "2022-03-11T15:38:02.166177Z",
        "url": "https://files.pythonhosted.org/packages/48/61/1ff0b743a52b756fac05d0881089686f3999806c8b151c7abec10bb3ed3d/flamp-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a89af4ddbd33376c31cbbb319afc8348da94a5580f510fb7566cb635d39269d6",
          "md5": "a81738007849dfd66fa80cbfd5273414",
          "sha256": "83a583858fce3ddf5f9c0f09f5d45969ca9fd6b797057229939f50b413b8018a"
        },
        "downloads": -1,
        "filename": "flamp-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a81738007849dfd66fa80cbfd5273414",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28153,
        "upload_time": "2022-03-11T15:38:20",
        "upload_time_iso_8601": "2022-03-11T15:38:20.859492Z",
        "url": "https://files.pythonhosted.org/packages/a8/9a/f4ddbd33376c31cbbb319afc8348da94a5580f510fb7566cb635d39269d6/flamp-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "48611ff0b743a52b756fac05d0881089686f3999806c8b151c7abec10bb3ed3d",
        "md5": "374eb54a61dd82b7a58f41695b41e5c0",
        "sha256": "0944f88a4fb41e7279e9a6b3f7481d02bb147b025f9fd13c89aed58b9f346008"
      },
      "downloads": -1,
      "filename": "flamp-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "374eb54a61dd82b7a58f41695b41e5c0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 27362,
      "upload_time": "2022-03-11T15:38:02",
      "upload_time_iso_8601": "2022-03-11T15:38:02.166177Z",
      "url": "https://files.pythonhosted.org/packages/48/61/1ff0b743a52b756fac05d0881089686f3999806c8b151c7abec10bb3ed3d/flamp-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a89af4ddbd33376c31cbbb319afc8348da94a5580f510fb7566cb635d39269d6",
        "md5": "a81738007849dfd66fa80cbfd5273414",
        "sha256": "83a583858fce3ddf5f9c0f09f5d45969ca9fd6b797057229939f50b413b8018a"
      },
      "downloads": -1,
      "filename": "flamp-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a81738007849dfd66fa80cbfd5273414",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28153,
      "upload_time": "2022-03-11T15:38:20",
      "upload_time_iso_8601": "2022-03-11T15:38:20.859492Z",
      "url": "https://files.pythonhosted.org/packages/a8/9a/f4ddbd33376c31cbbb319afc8348da94a5580f510fb7566cb635d39269d6/flamp-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}