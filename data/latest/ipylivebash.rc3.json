{
  "info": {
    "author": "Ben lau",
    "author_email": "xbenlau@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Jupyter",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# ipylivebash\n\nipylivebash is a library to run shell script in Jupyter with live output.\nIt is designed as a utility to use Jupyter as a DevOps management tool.\n\n**Example**\n\n```\n%%livebash --save log.txt --save-timestamp\n\nfind .\n```\n\nRun `find .` and show the output in the Jupyter notebook and also save to log-${current_timestamp}.txt\n\n```\n%%livebash --ask-confirm --notify\nset -e\ndeploy_script\n```\n\nBefore running the `deploy_script` show a panel to ask for confirmation. Once it is finished, show a notification.\n\n**Features**\n\n1. Run shell script in Jupyter with live output\n2. The output in the notebook cell is not saved in the notebook by default\n3. Support to save the output to a file. If the file already exists, it will pick another name automatically.\n4. Support to show a confirmation UI before executing the script\n5. Support to send a notification when the script finishes.\n\n**Usage**\n\n```\nusage: livebash [-h] [--save OUTPUT_FILE] [--save-timestamp]\n                [--line-limit LINE_LIMIT] [--height HEIGHT] [--ask-confirm]\n                [--notify] [--keep-cell-output]\n\noptional arguments:\n  -h, --help\n  --save OUTPUT_FILE    Save output to a file\n  --save-timestamp      Add timestamp to the output file name\n  --line-limit LINE_LIMIT\n                        Restrict the no. of lines to be shown\n  --height HEIGHT       Set the height of the output cell\n  --ask-confirm         Ask for confirmation before execution\n  --notify              Send a notification when the script finished\n  --keep-cell-output    Keep the cell output\n```\n\n## Options\n\n**--save OUTPUT_FILE**\n\nSave the output to a file. \n\nIf the file name already exists, it will add a suffix to avoid overriding the original file.\n\n**--save-timestamp**\n\nAdd timestamp to the output file name.\n\n**--line-limit LINE_LIMIT**\n\nIf the no. of line output exceed the limit, it may be truncated. \nIt will show the last 5 lines only.\n\n**--height HEIGHT**\n\nSet the height of the output cell\n\n**--ask-confirm**\n \nAsk for confirmation before execution\n\n![ask_confirm.png (392Ã—80)](https://raw.githubusercontent.com/benlau/ipylivebash/main/docs/img/ask_confirm.png)\n\n**--notify**\n  \nSend a notification when the script finished\n\n**--keep-cell-output**\n\nKeep the cell output such that it could be saved together with the notebook.\nIt can't be used with other options like --line-limit.\n\n## Installation\n\nYou can install using `pip`:\n\n```bash\npip install ipylivebash\n```\n\nIf you are using Jupyter Notebook 5.2 or earlier, you may also need to enable\nthe nbextension:\n```bash\njupyter nbextension enable --py [--sys-prefix|--user|--system] ipylivebash\n```\n\n## Development Installation\n\nCreate a dev environment:\n```bash\nconda create -n ipylivebash-dev -c conda-forge nodejs yarn python jupyterlab\nconda activate ipylivebash-dev\n```\n\nInstall the python. This will also build the TS package.\n```bash\npip install -e \".[test, examples]\"\n```\n\nWhen developing your extensions, you need to manually enable your extensions with the\nnotebook / lab frontend. For lab, this is done by the command:\n\n```\njupyter labextension develop --overwrite .\nyarn run build\n```\n\nFor classic notebook, you need to run:\n\n```\njupyter nbextension install --sys-prefix --symlink --overwrite --py ipylivebash\njupyter nbextension enable --sys-prefix --py ipylivebash\n```\n\nNote that the `--symlink` flag doesn't work on Windows, so you will here have to run\nthe `install` command every time that you rebuild your extension. For certain installations\nyou might also need another flag instead of `--sys-prefix`, but we won't cover the meaning\nof those flags here.\n\n### How to see your changes\n#### Typescript:\nIf you use JupyterLab to develop then you can watch the source directory and run JupyterLab at the same time in different\nterminals to watch for changes in the extension's source and automatically rebuild the widget.\n\n```bash\n# Watch the source directory in one terminal, automatically rebuilding when needed\nyarn run watch\n# Run JupyterLab in another terminal\njupyter lab\n```\n\nAfter a change wait for the build to finish and then refresh your browser and the changes should take effect.\n\n#### Python:\nIf you make a change to the python code then you will need to restart the notebook kernel to have it take effect.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/benlau/ipylivebash",
    "keywords": "Jupyter,Widgets,IPython",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ipylivebash",
    "package_url": "https://pypi.org/project/ipylivebash/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/ipylivebash/",
    "project_urls": {
      "Homepage": "https://github.com/benlau/ipylivebash"
    },
    "release_url": "https://pypi.org/project/ipylivebash/0.1.2/",
    "requires_dist": [
      "ipywidgets (>=7.0.0)",
      "jupyter-sphinx ; extra == 'docs'",
      "nbsphinx ; extra == 'docs'",
      "nbsphinx-link ; extra == 'docs'",
      "pytest-check-links ; extra == 'docs'",
      "pypandoc ; extra == 'docs'",
      "recommonmark ; extra == 'docs'",
      "sphinx (>=1.5) ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "pytest (>=4.6) ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "nbval ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "Run shell script in Jupyter with live output",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12711411,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38a627fe992135be4cb113aa35ebfa4fa975fcf44d752278d0e8af686a389199",
          "md5": "b3b31f99d946cfe05d11324c7d5b3943",
          "sha256": "ca4d91b18a2aa2ff38a5c448d83ac68c16826d5aade47dde8bf1aa84411a9dad"
        },
        "downloads": -1,
        "filename": "ipylivebash-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3b31f99d946cfe05d11324c7d5b3943",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 72665,
        "upload_time": "2022-01-02T11:52:21",
        "upload_time_iso_8601": "2022-01-02T11:52:21.152121Z",
        "url": "https://files.pythonhosted.org/packages/38/a6/27fe992135be4cb113aa35ebfa4fa975fcf44d752278d0e8af686a389199/ipylivebash-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50e7419fdff86d58caf9367ca2069d2f31fdf13c67e7aa68650c4083ebc7f999",
          "md5": "52c247529c70e953a36ba9cfaa7d2a91",
          "sha256": "731522ddfa4b8b2322c450fddb07c2bc60322222fe744becf1fa351ddaf81268"
        },
        "downloads": -1,
        "filename": "ipylivebash-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "52c247529c70e953a36ba9cfaa7d2a91",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 64720,
        "upload_time": "2022-01-02T11:52:23",
        "upload_time_iso_8601": "2022-01-02T11:52:23.318556Z",
        "url": "https://files.pythonhosted.org/packages/50/e7/419fdff86d58caf9367ca2069d2f31fdf13c67e7aa68650c4083ebc7f999/ipylivebash-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcc39828983f44b338a45ca33f5f210bff24ddb2f2b83ec88bcd0d3cc178c0b9",
          "md5": "dd0f4eac111427ac3d75319de0c2b602",
          "sha256": "32dc4793d2b94cac8abc4a60f3a52f2443339a21146599abf1c7cffb26e899ff"
        },
        "downloads": -1,
        "filename": "ipylivebash-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd0f4eac111427ac3d75319de0c2b602",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 98894,
        "upload_time": "2022-01-08T13:08:23",
        "upload_time_iso_8601": "2022-01-08T13:08:23.739352Z",
        "url": "https://files.pythonhosted.org/packages/bc/c3/9828983f44b338a45ca33f5f210bff24ddb2f2b83ec88bcd0d3cc178c0b9/ipylivebash-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c005ff05893f1a09882d62149379940a91ffeef98a7a9898216c5dbba616cdac",
          "md5": "ce95cd4d70a9b524fd440367d3f3af5d",
          "sha256": "9dbc075ca5deaefafb3a8e78bbfaadda1b1fddbad6c95457b69cbb0a25f8c725"
        },
        "downloads": -1,
        "filename": "ipylivebash-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ce95cd4d70a9b524fd440367d3f3af5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 68946,
        "upload_time": "2022-01-08T13:08:25",
        "upload_time_iso_8601": "2022-01-08T13:08:25.327112Z",
        "url": "https://files.pythonhosted.org/packages/c0/05/ff05893f1a09882d62149379940a91ffeef98a7a9898216c5dbba616cdac/ipylivebash-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6e6974b8da0c02f6bd9b6d985b380a1e29779d31d5c3f6c4ede644a723e1d4c",
          "md5": "c0d7ea864662f577b598cb285e8397a8",
          "sha256": "b6eaea236723fc295afccc925d4c8eeb7de603c50e75d737e0bbec37fea8ccc4"
        },
        "downloads": -1,
        "filename": "ipylivebash-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0d7ea864662f577b598cb285e8397a8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 99373,
        "upload_time": "2022-01-27T15:28:34",
        "upload_time_iso_8601": "2022-01-27T15:28:34.037703Z",
        "url": "https://files.pythonhosted.org/packages/a6/e6/974b8da0c02f6bd9b6d985b380a1e29779d31d5c3f6c4ede644a723e1d4c/ipylivebash-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5213e0468c3108177a46429b4de26a4fd7645d3177378edb76bea414fc349c4",
          "md5": "3ced2d045e8cc17c18320881060ee259",
          "sha256": "37f594ceca06c2f066a3d021ed6d74fa21cde2a1aac26875ffc9dd6af05d5bce"
        },
        "downloads": -1,
        "filename": "ipylivebash-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3ced2d045e8cc17c18320881060ee259",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69420,
        "upload_time": "2022-01-27T15:28:35",
        "upload_time_iso_8601": "2022-01-27T15:28:35.666514Z",
        "url": "https://files.pythonhosted.org/packages/f5/21/3e0468c3108177a46429b4de26a4fd7645d3177378edb76bea414fc349c4/ipylivebash-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6e6974b8da0c02f6bd9b6d985b380a1e29779d31d5c3f6c4ede644a723e1d4c",
        "md5": "c0d7ea864662f577b598cb285e8397a8",
        "sha256": "b6eaea236723fc295afccc925d4c8eeb7de603c50e75d737e0bbec37fea8ccc4"
      },
      "downloads": -1,
      "filename": "ipylivebash-0.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c0d7ea864662f577b598cb285e8397a8",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 99373,
      "upload_time": "2022-01-27T15:28:34",
      "upload_time_iso_8601": "2022-01-27T15:28:34.037703Z",
      "url": "https://files.pythonhosted.org/packages/a6/e6/974b8da0c02f6bd9b6d985b380a1e29779d31d5c3f6c4ede644a723e1d4c/ipylivebash-0.1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f5213e0468c3108177a46429b4de26a4fd7645d3177378edb76bea414fc349c4",
        "md5": "3ced2d045e8cc17c18320881060ee259",
        "sha256": "37f594ceca06c2f066a3d021ed6d74fa21cde2a1aac26875ffc9dd6af05d5bce"
      },
      "downloads": -1,
      "filename": "ipylivebash-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3ced2d045e8cc17c18320881060ee259",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 69420,
      "upload_time": "2022-01-27T15:28:35",
      "upload_time_iso_8601": "2022-01-27T15:28:35.666514Z",
      "url": "https://files.pythonhosted.org/packages/f5/21/3e0468c3108177a46429b4de26a4fd7645d3177378edb76bea414fc349c4/ipylivebash-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}