{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "``pirdocopt`` a helper for enhancing your command line project\n==================================================================\n\nAPI\n============\n\n.. code:: python\n\n    from pirdocopt import docopt\n    arguments = docopt(__doc__, version=\"\", help_message=Ture, argv=[])\n\nHow to Install\n========================\nUse pip or easy_install:\n\n.. code:: python\n\n    pip install pirdocopt\n    \nOr just include ``docopt.py`` and ``docopt_util.py`` in you project folder and import the module ``import docopt from docopt``.\n\nTesting\n========\nAll test cases are included in ``examples`` folder\n\nUsages\n========\nWhen you have a command-line python program which contains a docstring and want to show user all the usage patterns\nand the options that provided by you program, you just need to call docopt.py:\n\n.. code:: python\n\n    \"\"\"Perfect\n\n       Usage:\n         my_program.py ship new <name>\n         my_program.py ship <name> move <x> <y> [--speed=<kn>]\n         my_program.py ship shoot <x> <y>\n         my_program.py mine (set|remove) <x> <y> [--moored | --drifting]\n         my_program.py (-h | --help)\n         my_program.py --version\n\n       Options:\n         -h --help  Show this screen.\n         --version     Show version.\n         --speed=<kn> -s KN  Speed in knots [default: 10].\n         --moored      Moored (anchored) mine.\n         --drifting    Drifting mine.\n         \n    \"\"\"\n    from pirdocopt import docopt\n    \n    if __name__ == '__main__':\n        res = docopt(__doc__, version=\"\", help_message=False, argv=['mine', 'set', '50', '200', '--moored'])\n        print(res)\n      \nDocopot will turns all your usage pattern and options into a dictionary as the return value and standout the tidy JSON-like string:\n\n.. code:: javascript\n\n   res == {'ship': False, 'new': False, 'name': None, \n   'move': False, 'x': '50', 'y': '200', 'shoot': False, 'mine': True, \n   'set': True, 'remove': False, '--helping': False, '--sorted': False, \n   '--output': './test.txt', '--version': False, '--speed': 10, '--moored': True, \n   '--drifting': False, '--rr': False, '--aaa': 20, '--yyy': False}\n    \n    {'ship': False      'set': True                  '--drifting': False\n     'new': False       'remove': False              '--rr': False\n     'name': None       '--helping': False           '--aaa': None\n     'move': False      '--sorted': False            '--yyy': False\n     'x': '50'          '--output': './test.txt'\n     'y': '200'         '--version': False\n     'shoot': False     '--speed': 10\n     'mine': True       '--moored': True}\n     \nSample help message when ``help_message=True``::\n\n\n     Perfect\n\n     Version:\n       test 2.0\n\n     Usage:\n       naval_fate.py ship new <name>\n       naval_fate.py ship <name> move <x> <y> [--speed=<kn>]\n       naval_fate.py ship shoot <x> <y>\n       naval_fate.py mine (set|remove) <x> <y> [--moored | --drifting]\n       naval_fate.py (-h | --help)\n       naval_fate.py --version\n\n     Options:\n       -h --help --helping --haha -hhh --ooooo  Show this screen.\n       --sorted  Show sorted.\n       -o FILE --output=<file>  Speed in knots [default: ./test.txt].\n       --version     Show version.\n       --speed=<kn> -s KN  Speed in knots [default: 10].\n       --moored      Moored (anchored) mine.\n       --drifting    Drifting mine.\n       --rr     Show version.\n       --aaa=<file>      Moored (anchored) mine [default: 20].\n       --yyy    Drifting mine.\n\nFeatures\n--------\n\n- ``docopt`` will match the useage pattern specified by you in the docstring and show errors if user input a wrong pattern.\n- ``<value>`` means the required value from usage arguments\n- ``[--option]`` means a opotion\n- For usage patterns ``docopt`` support ``(value1|value2)`` for required choices from user\n  and ``[-option1 | --option2]`` for optional choices from user\n- For options, ``docopt`` support multiple keywords for one option e.g. ``-h --help``\n- For options that has an value, you can either use ``--option= <value>`` or ``--option VALUE``.\n- For multiple keywords in options, the output dictionay will only display the detailest (longest) keyword.\n- Show warnings if you program does not hava a docstring that meets the min case or\n  your docstring does not includes a Usage pattern list or options list.\n  \nFormats\n-----------------------\n\nThe cases for docstring:\n\n.. code:: python\n\n    # Minimum case\n    \"\"\"Usage: my_program.py\n\n    \"\"\"\n\n    # Docstring with program name, usage pattern, and options table\n    \"\"\"Perfect # Program name in the first line\n      # Must separae each section with a newline\n      Usage:\n        my_program.py --help\n        ...\n      # Must separae each section with a newline\n      Options:\n        -h --help Show this screen.\n        ...\n\n    \"\"\"\n\n    # Docstring with, usage pattern, and options table\n    \"\"\"\n      Usage:\n        my_program.py --help\n        ...\n\n      Options:\n        -h --help Show this screen.\n        ...\n\n    \"\"\"\n\n    \"\"\"Usage:\n        my_program.py --help\n        ...\n\n      Options:\n        -h --help Show this screen.\n        ...\n\n    \"\"\"\n\n    \"\"\"Usage:\n        my_program.py --help\n        ...\n\n        -h --help Show this screen.\n        ...\n\n    \"\"\"\n\nThe different cases for usage patterns::\n\n    my_program.py   #GOOD a pattern that has no parameter and arguments.\n    my_program.py ship   #GOOD a pattern that has one required parameter.\n    my_program.py <value>     #GOOD a pattern that has one required user input value.\n    my_program.py <value> my_program.py ship    #BAD every pattern will start from a new line.\n\n    my_program.py  (value1 | value2)    #GOOD a pattern that contains a choosable required arugment.\n    my_program.py  [-option1 | --option2]    #GOOD a pattern that contains a choosable optional arugment.\n    my_program.py  a1 | a2    #BAD mutual choices will either inside a bracket or a round parenthese.\n    \nThe different cases for options table::\n\n\n     Options:\n       --help show help message #GOOD a line that starts with '--' will be considered as an option.\n       -h short for show help message #GOOD  a line that starts with '-' will be considered as an option.\n     Options: --help show help message #BAD program will ignore the lines that\n                                            not start with double dash or single dash in options table.\n\n     Options:\n       --input=<file> user input file   #GOOD an options that must contain a value.\n       -i=<file> user input file   #GOOD an options that must contain a value.\n       --speed KN user input speed in integer   #GOOD KN will consider as the required value for speed.\n       -s KN user input speed in integer    #GOOD KN will consider as the required value for speed.\n       -s KN -i=<file>   #BAD these two keyword will consider as two different keyword or an option\n\n     Options:\n       --speed=<kn> -s KN user input speed    #GOOD mulitple keyword for an option.\n       --speed=<kn> -s KN user input speed [default: 10]    #GOOD to provide a default value for such option.\n\n\nRequired and Optional Parameters\n----------------------------------\n\n- ``__doc__`` is a required parameter for ``docopt`` to receive the docstring from you program.\n- ``version=\"\"`` is a optional parameter that you can specify you program version in string and display to user\n- ``help_message=False`` is a optional parameter that default is set to ``Ture``. It allows ``docopt`` to standard output your docstring and the version specified by you right after the program is executed.\n- ``argv=[]`` is also a optional parameter in which you can put an array of default arguments (must match your docstring usage pattern).\n\nComparasion Table\n---------------------------\n\n    +---------------------------------------------------+-----------+---------+----------+-------+--------+\n    | Features                                          | pirdocopt |  getopt | optparse | click | docopt |\n    +===================================================+===========+=========+==========+=======+========+\n    | Parse usage partterns and options in docstring    |   True    |  False  |  False   | False |  True  | \n    +---------------------------------------------------+-----------+---------+----------+-------+--------+\n    | Support default arguments from programmer         |   True    |  False  |  False   | False |  True  |\n    +---------------------------------------------------+-----------+---------+----------+-------+--------+\n    | Support default values in options docstring       |   True    |  True   |  True    | True  |  True  | \n    +---------------------------------------------------+-----------+---------+----------+-------+--------+\n    | Enabling help message displaying when executes    |   True    |  False  |  False   | False |  True  |\n    +---------------------------------------------------+-----------+---------+----------+-------+--------+\n    | Enabling help message printing when executes      |   True    |  False  |  False   | False |  True  |\n    +---------------------------------------------------+-----------+---------+----------+-------+--------+\n    | Program version specifying                        |   True    |  False  |  False   | False |  false |\n    +---------------------------------------------------+-----------+---------+----------+-------+--------+\n    | Exception for incorrect  user arugment pattern    |   True    |  Flase  |   False  | False |  True  |\n    +---------------------------------------------------+-----------+---------+----------+-------+--------+\n          \nSupport\n-------\n\nIf you are having issues, please let us know.\nWe have a mailing list located at: cl19x@my.fsu.edu or ktw16b@my.fsu.edu\n\n\nLicense\n-------\n\nThe project is licensed under the MIT license.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pirdocopt",
    "package_url": "https://pypi.org/project/pirdocopt/",
    "platform": "",
    "project_url": "https://pypi.org/project/pirdocopt/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pirdocopt/1.0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10160646,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac7b2676b31f7fdda25eaefe77179159b50ad886f8d65af9480f801bc743cdfe",
          "md5": "30805706d45a94544e963e4bcb9d30d7",
          "sha256": "80e53103ffa944150bfa33e129dd7654935b640081e6c5a0b509283e7523ae64"
        },
        "downloads": -1,
        "filename": "pirdocopt-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "30805706d45a94544e963e4bcb9d30d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12455,
        "upload_time": "2021-04-21T20:46:00",
        "upload_time_iso_8601": "2021-04-21T20:46:00.642921Z",
        "url": "https://files.pythonhosted.org/packages/ac/7b/2676b31f7fdda25eaefe77179159b50ad886f8d65af9480f801bc743cdfe/pirdocopt-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87d2a027d42a6c5e9990fbac64ab20fdccf8ae40f74d8678098c5f4f62841af3",
          "md5": "bfceb43aa39a875df519267f4521e7d3",
          "sha256": "9e8e464bae4eb235869a084cacdb6ce5498d0796182f6749ea9bce2bd309e9e4"
        },
        "downloads": -1,
        "filename": "pirdocopt-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bfceb43aa39a875df519267f4521e7d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12530,
        "upload_time": "2021-04-21T20:55:22",
        "upload_time_iso_8601": "2021-04-21T20:55:22.319410Z",
        "url": "https://files.pythonhosted.org/packages/87/d2/a027d42a6c5e9990fbac64ab20fdccf8ae40f74d8678098c5f4f62841af3/pirdocopt-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7958f1867aff8a4744f98f8a71cfb40f56a82d1ead091897e692a9dc5e418991",
          "md5": "2aceef198549121df949256121901c88",
          "sha256": "b9d10a045d5a8f312f0885889915a6ed854b6447eaaca49773c5c73870d00c3f"
        },
        "downloads": -1,
        "filename": "pirdocopt-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2aceef198549121df949256121901c88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12548,
        "upload_time": "2021-04-23T20:54:56",
        "upload_time_iso_8601": "2021-04-23T20:54:56.033730Z",
        "url": "https://files.pythonhosted.org/packages/79/58/f1867aff8a4744f98f8a71cfb40f56a82d1ead091897e692a9dc5e418991/pirdocopt-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8bfa8f2b0c3258dee09337233bd30fe45e30cd21f0de942ff73f94edae67088",
          "md5": "bccd55e9bced24c16376d5331e2c452c",
          "sha256": "bc7952accec83d04abd819c3c142863017d06814bf1f9ccbc4946dd73d656f65"
        },
        "downloads": -1,
        "filename": "pirdocopt-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bccd55e9bced24c16376d5331e2c452c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12629,
        "upload_time": "2021-04-24T02:05:40",
        "upload_time_iso_8601": "2021-04-24T02:05:40.675435Z",
        "url": "https://files.pythonhosted.org/packages/f8/bf/a8f2b0c3258dee09337233bd30fe45e30cd21f0de942ff73f94edae67088/pirdocopt-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f614436c235f2eda3f7ecc1a1cdf8065ff84a19719cd3235dcb197dcb1b31cda",
          "md5": "378ca5fea26774c64dc78a5fbd6b134b",
          "sha256": "4d0254221faf3b4a66027b8ca1bc800c4107696c8b3e53665a29003b19fffe64"
        },
        "downloads": -1,
        "filename": "pirdocopt-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "378ca5fea26774c64dc78a5fbd6b134b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12627,
        "upload_time": "2021-04-24T02:08:10",
        "upload_time_iso_8601": "2021-04-24T02:08:10.501531Z",
        "url": "https://files.pythonhosted.org/packages/f6/14/436c235f2eda3f7ecc1a1cdf8065ff84a19719cd3235dcb197dcb1b31cda/pirdocopt-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f4b69eefa97dfb195c1989835c15f553cae915820cd07f03298e0e53919a002",
          "md5": "0ab5470377b153e1bd35dd8fb2db4889",
          "sha256": "80ea1109b6cc954bb63e692342c096dab5dcbcd27a3a4e07228c2d4b0a1a6bec"
        },
        "downloads": -1,
        "filename": "pirdocopt-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0ab5470377b153e1bd35dd8fb2db4889",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12635,
        "upload_time": "2021-04-24T16:45:29",
        "upload_time_iso_8601": "2021-04-24T16:45:29.154447Z",
        "url": "https://files.pythonhosted.org/packages/2f/4b/69eefa97dfb195c1989835c15f553cae915820cd07f03298e0e53919a002/pirdocopt-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd15489662393988a85055c27e430951338be8c00deb2e31652c0e8d3e3578c3",
          "md5": "f83873c79ede1570bde0b63b68e090d2",
          "sha256": "f521d700c5653506fa7ea3055bee863bcb0afa93749c47f732d1ccb6fb0a5b3e"
        },
        "downloads": -1,
        "filename": "pirdocopt-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f83873c79ede1570bde0b63b68e090d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12697,
        "upload_time": "2021-04-24T17:14:47",
        "upload_time_iso_8601": "2021-04-24T17:14:47.849625Z",
        "url": "https://files.pythonhosted.org/packages/bd/15/489662393988a85055c27e430951338be8c00deb2e31652c0e8d3e3578c3/pirdocopt-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd15489662393988a85055c27e430951338be8c00deb2e31652c0e8d3e3578c3",
        "md5": "f83873c79ede1570bde0b63b68e090d2",
        "sha256": "f521d700c5653506fa7ea3055bee863bcb0afa93749c47f732d1ccb6fb0a5b3e"
      },
      "downloads": -1,
      "filename": "pirdocopt-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "f83873c79ede1570bde0b63b68e090d2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12697,
      "upload_time": "2021-04-24T17:14:47",
      "upload_time_iso_8601": "2021-04-24T17:14:47.849625Z",
      "url": "https://files.pythonhosted.org/packages/bd/15/489662393988a85055c27e430951338be8c00deb2e31652c0e8d3e3578c3/pirdocopt-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}