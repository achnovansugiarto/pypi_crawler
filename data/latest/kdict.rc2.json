{
  "info": {
    "author": "Maxim Zaslavsky",
    "author_email": "maxim@maximz.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Kdict: dict with multi-dimensional, sliceable keys\n\n[![](https://img.shields.io/pypi/v/kdict.svg)](https://pypi.python.org/pypi/kdict)\n[![CI](https://github.com/maximz/kdict/actions/workflows/ci.yaml/badge.svg?branch=master)](https://github.com/maximz/kdict/actions/workflows/ci.yaml)\n[![](https://img.shields.io/badge/docs-here-blue.svg)](https://kdict.maximz.com)\n[![](https://img.shields.io/github/stars/maximz/kdict?style=social)](https://github.com/maximz/kdict)\n\n_kdict_ is like _dict_ for multi-dimensional keys. With _kdict_, you can easily filter and slice your dictionary by key dimensions.\n\n**Example: machine learning model evaluation.** Suppose you're evaluating several models on three cross validation folds, each with a training set and a test set.\n\nBefore _kdict_, you might store evaluation scores in a nested dictionary. But that's cumbersome and error-prone. Here's what it would take to get the mean accuracy for a particular model across all folds:\n\n```python\n# To access inner nested data without kdict, you'd need to write iterators like this:\nimport numpy as np\nnp.mean(\n    [\n        data[fold_id][fold_label][\"lasso\"]\n        for fold_id in data.keys()\n        for fold_label in data[fold_id].keys()\n    ]\n)\n```\n\n**_kdict_ makes storing and accessing this type of data a breeze. No more nesting:**\n\n```python\n# Store data in a three-dimensional kdict.\n# Dimensions: fold ID, fold label, model name\ndata = kdict(...)\n\n# Slice the kdict to get lasso model's mean accuracy across all folds:\n# data[:, :, 'lasso'] is a subset of the full dictionary\nnp.mean(list(data[:, :, 'lasso'].values()))\n```\n\nIn this example, `data` is a three-dimensional _kdict_ that you can slice along any dimension. So how did we make this kdict?\n\n```python\nfrom kdict import kdict\ndata = kdict() # make a blank kdict\nfor fold_id in range(3):\n    for fold_label in ['train', 'test']:\n        for model_name in ['lasso', 'randomforest']:\n            # add an entry for each fold ID, fold label, and model name\n            data[fold_id, fold_label, model_name] = get_model_score(\n                fold_id,\n                fold_label,\n                model_name\n            )\n```\n\nThe syntax, in a nutshell:\n\n- Read or write a single element by accessing `[key_dimension_1, key_dimension_2]` and so on.\n- Or get a subset of the dictionary by slicing, e.g. `[:, key_dimension_2]`.\n\n## Installation\n\n```bash\npip install kdict\n```\n\n## Usage\n\n### Create a _kdict_\n\nImport: `from kdict import kdict`\n\nCreate a blank _kdict_: `data = kdict()`. Or initialize from an existing dict: `data = kdict(existing_dict)`. You can also use a dict comprehension there, such as:\n\n```python\ndata = kdict({\n    (fold_id, fold_label, model_name): get_model_score(fold_id, fold_label, model_name)\n    for model_name in ['lasso', 'randomforest']\n    for fold_label in ['train', 'test']\n    for fold_id in range(3)\n})\n```\n\n### Slice a _kdict_\n\nAccess an individual item with `data[0, 'train', 'lasso']`.\n\nOr get a subset of the dictionary with slices: `data[0, :, :]` will have all items where the first dimension of the key is 0. This slice is also a _kdict_, so you can keep slicing and filtering further.\n\nYou can also iterate over specific key dimensions:\n\n```python\n# get final dimension of the keys\navailable_models = data.keys(dimensions=2)\n\n# or get all pairs of first two dimensions\nfor fold_id, fold_label in data.keys(dimensions=[0, 1]):\n    ... # now do something with data[fold_id, fold_label, :]\n```\n\n### Eject\n\nA _kdict_ behaves just like a _dict_, except all keys must have the same number of dimensions.\n\nTo get a raw _dict_ back, call `data.eject()`.\n\n\n## Development\n\nSubmit PRs against `develop` branch, then make a release pull request to `master`.\n\n```bash\n# Install requirements\npip install --upgrade pip wheel\npip install -r requirements_dev.txt\n\n# Install local package\npip install -e .\n\n# Install pre-commit\npre-commit install\n\n# Run tests\nmake test\n\n# Run lint\nmake lint\n\n# bump version before submitting a PR against master (all master commits are deployed)\nbump2version patch # possible: major / minor / patch\n\n# also ensure CHANGELOG.md updated\n```\n\n\n# Changelog\n\n## 0.0.1\n\n* First release on PyPI.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/maximz/kdict",
    "keywords": "",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kdict",
    "package_url": "https://pypi.org/project/kdict/",
    "platform": "",
    "project_url": "https://pypi.org/project/kdict/",
    "project_urls": {
      "Homepage": "https://github.com/maximz/kdict"
    },
    "release_url": "https://pypi.org/project/kdict/0.1.0/",
    "requires_dist": [
      "Click (>=7.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Kdict",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12580868,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1ad39e4ac90aa52ac590bd7a7d27320adc0d4f3fc42a05f94de38c666a61667",
          "md5": "2c966ed875589a2372c8514ab182cca0",
          "sha256": "1d2978cd0143ef584a2afb8244265a1548582ce9bb33f022e353e1caf23d4564"
        },
        "downloads": -1,
        "filename": "kdict-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c966ed875589a2372c8514ab182cca0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 4687,
        "upload_time": "2022-01-10T20:39:11",
        "upload_time_iso_8601": "2022-01-10T20:39:11.449390Z",
        "url": "https://files.pythonhosted.org/packages/e1/ad/39e4ac90aa52ac590bd7a7d27320adc0d4f3fc42a05f94de38c666a61667/kdict-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1710d6096499d447968bfbe9d8e31dbd5904e6335e4c7659c09f738e71c2f606",
          "md5": "5da7c65fd1bbad120eff6af1827384ff",
          "sha256": "0091f23d9f47108ce8a58f37ece0c3783d8959ebd8faf69462a9f72d0b68dba1"
        },
        "downloads": -1,
        "filename": "kdict-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5da7c65fd1bbad120eff6af1827384ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9471,
        "upload_time": "2022-01-10T20:39:13",
        "upload_time_iso_8601": "2022-01-10T20:39:13.006037Z",
        "url": "https://files.pythonhosted.org/packages/17/10/d6096499d447968bfbe9d8e31dbd5904e6335e4c7659c09f738e71c2f606/kdict-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1855a89315d830e93f4400e5ca41085a6760d37159ffc82a0270b21bccd970c5",
          "md5": "3418ebdb3aae28c47ad7cec4ede0742a",
          "sha256": "04c5fc751fa5f2958b309df4dc5d1c41e15281d1ef72ec5b7ac3ae464f347555"
        },
        "downloads": -1,
        "filename": "kdict-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3418ebdb3aae28c47ad7cec4ede0742a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 6553,
        "upload_time": "2022-01-15T07:49:58",
        "upload_time_iso_8601": "2022-01-15T07:49:58.153069Z",
        "url": "https://files.pythonhosted.org/packages/18/55/a89315d830e93f4400e5ca41085a6760d37159ffc82a0270b21bccd970c5/kdict-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9790002e727ff4ffde1c678c07fbc6ddc091ad58dc336e92a6545d8a1f9bc54e",
          "md5": "0740a935aee8b5a7db41f81b2726ff2c",
          "sha256": "bcf332c2ffd039d87a7a58e483137825b39cf1fb3c24f1bb5ddfa33f5a2b6058"
        },
        "downloads": -1,
        "filename": "kdict-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0740a935aee8b5a7db41f81b2726ff2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 12629,
        "upload_time": "2022-01-15T07:49:59",
        "upload_time_iso_8601": "2022-01-15T07:49:59.537103Z",
        "url": "https://files.pythonhosted.org/packages/97/90/002e727ff4ffde1c678c07fbc6ddc091ad58dc336e92a6545d8a1f9bc54e/kdict-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1855a89315d830e93f4400e5ca41085a6760d37159ffc82a0270b21bccd970c5",
        "md5": "3418ebdb3aae28c47ad7cec4ede0742a",
        "sha256": "04c5fc751fa5f2958b309df4dc5d1c41e15281d1ef72ec5b7ac3ae464f347555"
      },
      "downloads": -1,
      "filename": "kdict-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3418ebdb3aae28c47ad7cec4ede0742a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 6553,
      "upload_time": "2022-01-15T07:49:58",
      "upload_time_iso_8601": "2022-01-15T07:49:58.153069Z",
      "url": "https://files.pythonhosted.org/packages/18/55/a89315d830e93f4400e5ca41085a6760d37159ffc82a0270b21bccd970c5/kdict-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9790002e727ff4ffde1c678c07fbc6ddc091ad58dc336e92a6545d8a1f9bc54e",
        "md5": "0740a935aee8b5a7db41f81b2726ff2c",
        "sha256": "bcf332c2ffd039d87a7a58e483137825b39cf1fb3c24f1bb5ddfa33f5a2b6058"
      },
      "downloads": -1,
      "filename": "kdict-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0740a935aee8b5a7db41f81b2726ff2c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 12629,
      "upload_time": "2022-01-15T07:49:59",
      "upload_time_iso_8601": "2022-01-15T07:49:59.537103Z",
      "url": "https://files.pythonhosted.org/packages/97/90/002e727ff4ffde1c678c07fbc6ddc091ad58dc336e92a6545d8a1f9bc54e/kdict-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}