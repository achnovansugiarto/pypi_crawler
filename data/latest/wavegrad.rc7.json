{
  "info": {
    "author": "LMNT, Inc.",
    "author_email": "github@lmnt.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# WaveGrad\n![PyPI Release](https://img.shields.io/pypi/v/wavegrad?label=release) [![License](https://img.shields.io/github/license/lmnt-com/wavegrad)](https://github.com/lmnt-com/wavegrad/blob/master/LICENSE)\n\nWaveGrad is a fast, high-quality neural vocoder designed by the folks at Google Brain. The architecture is described in [WaveGrad: Estimating Gradients for Waveform Generation](https://arxiv.org/pdf/2009.00713.pdf). In short, this model takes a log-scaled Mel spectrogram and converts it to a waveform via iterative refinement.\n\n## Status (2020-10-15)\n- [x] stable training (22 kHz, 24 kHz)\n- [x] high-quality synthesis\n- [x] mixed-precision training\n- [x] multi-GPU training\n- [x] custom noise schedule (faster inference)\n- [x] command-line inference\n- [x] programmatic inference API\n- [x] PyPI package\n- [x] audio samples\n- [x] pretrained models\n- [ ] precomputed noise schedule\n\n## Audio samples\n[24 kHz audio samples](https://lmnt.com/assets/wavegrad/24kHz)\n\n## Pretrained models\n[24 kHz pretrained model](https://lmnt.com/assets/wavegrad/wavegrad-24kHz.pt) (183 MB, SHA256: `65e9366da318d58d60d2c78416559351ad16971de906e53b415836c068e335f3`)\n\n## Install\n\nInstall using pip:\n```\npip install wavegrad\n```\n\nor from GitHub:\n```\ngit clone https://github.com/lmnt-com/wavegrad.git\ncd wavegrad\npip install .\n```\n\n### Training\nBefore you start training, you'll need to prepare a training dataset. The dataset can have any directory structure as long as the contained .wav files are 16-bit mono (e.g. [LJSpeech](https://keithito.com/LJ-Speech-Dataset/), [VCTK](https://pytorch.org/audio/_modules/torchaudio/datasets/vctk.html)). By default, this implementation assumes a sample rate of 22 kHz. If you need to change this value, edit [params.py](https://github.com/lmnt-com/wavegrad/blob/master/src/wavegrad/params.py).\n\n```\npython -m wavegrad.preprocess /path/to/dir/containing/wavs\npython -m wavegrad /path/to/model/dir /path/to/dir/containing/wavs\n\n# in another shell to monitor training progress:\ntensorboard --logdir /path/to/model/dir --bind_all\n```\n\nYou should expect to hear intelligible speech by ~20k steps (~1.5h on a 2080 Ti).\n\n### Inference API\nBasic usage:\n\n```python\nfrom wavegrad.inference import predict as wavegrad_predict\n\nmodel_dir = '/path/to/model/dir'\nspectrogram = # get your hands on a spectrogram in [N,C,W] format\naudio, sample_rate = wavegrad_predict(spectrogram, model_dir)\n\n# audio is a GPU tensor in [N,T] format.\n```\n\nIf you have a custom noise schedule (see below):\n```python\nfrom wavegrad.inference import predict as wavegrad_predict\n\nparams = { 'noise_schedule': np.load('/path/to/noise_schedule.npy') }\nmodel_dir = '/path/to/model/dir'\nspectrogram = # get your hands on a spectrogram in [N,C,W] format\naudio, sample_rate = wavegrad_predict(spectrogram, model_dir, params=params)\n\n# `audio` is a GPU tensor in [N,T] format.\n```\n\n### Inference CLI\n```\npython -m wavegrad.inference /path/to/model /path/to/spectrogram -o output.wav\n```\n\n### Noise schedule\nThe default implementation uses 1000 iterations to refine the waveform, which runs slower than real-time. WaveGrad is able to achieve high-quality, faster than real-time synthesis with as few as 6 iterations without re-training the model with new hyperparameters.\n\nTo achieve this speed-up, you will need to search for a `noise schedule` that works well for your dataset. This implementation provides a script to perform the search for you:\n\n```\npython -m wavegrad.noise_schedule /path/to/trained/model /path/to/preprocessed/validation/dataset\npython -m wavegrad.inference /path/to/trained/model /path/to/spectrogram -n noise_schedule.npy -o output.wav\n```\n\nThe default settings should give good results without spending too much time on the search. If you'd like to find a better noise schedule or use a different number of inference iterations, run the `noise_schedule` script with `--help` to see additional configuration options.\n\n\n## References\n- [WaveGrad: Estimating Gradients for Waveform Generation](https://arxiv.org/pdf/2009.00713.pdf)\n- [Denoising Diffusion Probabilistic Models](https://arxiv.org/pdf/2006.11239.pdf)\n- [Code for Denoising Diffusion Probabilistic Models](https://github.com/hojonathanho/diffusion)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.lmnt.com",
    "keywords": "wavegrad machine learning neural vocoder tts speech",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wavegrad",
    "package_url": "https://pypi.org/project/wavegrad/",
    "platform": null,
    "project_url": "https://pypi.org/project/wavegrad/",
    "project_urls": {
      "Homepage": "https://www.lmnt.com"
    },
    "release_url": "https://pypi.org/project/wavegrad/0.1.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "wavegrad",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14403726,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09dc745b241ce6904fb92b0f8615d35570ea03f302f803f5404795e4f3009906",
          "md5": "e884ec026a2ff0dc5d6c78badeec2c1f",
          "sha256": "d39643f42b44161a3fdf23876c7f26bc3958f84f958bc88a034bb696b41d1ecb"
        },
        "downloads": -1,
        "filename": "wavegrad-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e884ec026a2ff0dc5d6c78badeec2c1f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8585,
        "upload_time": "2020-09-16T04:41:28",
        "upload_time_iso_8601": "2020-09-16T04:41:28.513051Z",
        "url": "https://files.pythonhosted.org/packages/09/dc/745b241ce6904fb92b0f8615d35570ea03f302f803f5404795e4f3009906/wavegrad-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a99b097f0d1f530ff90be05058929d267d8dc55c412eb1fbe3133c37a5f783b",
          "md5": "f4821607e5701939088485ebe395508a",
          "sha256": "63da6ebd653130fad11038042d98f95a68d0df307952508b838d8e237ac171ef"
        },
        "downloads": -1,
        "filename": "wavegrad-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f4821607e5701939088485ebe395508a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10170,
        "upload_time": "2020-09-16T05:53:11",
        "upload_time_iso_8601": "2020-09-16T05:53:11.086023Z",
        "url": "https://files.pythonhosted.org/packages/7a/99/b097f0d1f530ff90be05058929d267d8dc55c412eb1fbe3133c37a5f783b/wavegrad-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80e98c9a438b99c4a71b4bebe3c617c7ee901acf54f4bc745e2f4f28dec12179",
          "md5": "b60b29897183012869dc7d199e95c38a",
          "sha256": "918b7915093f88fa40136698d0a681c9c6e5a802d0260dc43dc42129d0f16d53"
        },
        "downloads": -1,
        "filename": "wavegrad-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b60b29897183012869dc7d199e95c38a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11936,
        "upload_time": "2020-09-16T06:01:13",
        "upload_time_iso_8601": "2020-09-16T06:01:13.072688Z",
        "url": "https://files.pythonhosted.org/packages/80/e9/8c9a438b99c4a71b4bebe3c617c7ee901acf54f4bc745e2f4f28dec12179/wavegrad-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87a789ec999cfea24645609fd421a7780ef57693acfd14b3a825872fd950a9b8",
          "md5": "94fc4d8d362366dde31191f9379b526d",
          "sha256": "cbee0101789414cf025783ca0c41b5a296a0d041ac7f03dc46eb6bb8dc1fde1e"
        },
        "downloads": -1,
        "filename": "wavegrad-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "94fc4d8d362366dde31191f9379b526d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12151,
        "upload_time": "2020-09-16T19:13:01",
        "upload_time_iso_8601": "2020-09-16T19:13:01.934779Z",
        "url": "https://files.pythonhosted.org/packages/87/a7/89ec999cfea24645609fd421a7780ef57693acfd14b3a825872fd950a9b8/wavegrad-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26b2b55e7a13806cfdfcbdb6d66030172319b116c8ce7d9ec4694d0a75f26aff",
          "md5": "62bb4bcb36c901a9915c8032cba92e57",
          "sha256": "ce85443e578f113e4f8fed48ef0ce96131381077445cfd5d21f8addde98e61b3"
        },
        "downloads": -1,
        "filename": "wavegrad-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "62bb4bcb36c901a9915c8032cba92e57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12137,
        "upload_time": "2020-09-18T06:27:53",
        "upload_time_iso_8601": "2020-09-18T06:27:53.621471Z",
        "url": "https://files.pythonhosted.org/packages/26/b2/b55e7a13806cfdfcbdb6d66030172319b116c8ce7d9ec4694d0a75f26aff/wavegrad-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ff13ea9437b53346fcdc446428ac9b16614ac51f089d2b5bfe708f77e4cf4db",
          "md5": "df9bbcab01495b4a1d0566b5848c03a2",
          "sha256": "5665442773e8ffe4669e32ef1ead7294f0b09aa0b776549cc2fc9694eab9731a"
        },
        "downloads": -1,
        "filename": "wavegrad-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "df9bbcab01495b4a1d0566b5848c03a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12777,
        "upload_time": "2020-10-15T18:08:31",
        "upload_time_iso_8601": "2020-10-15T18:08:31.904119Z",
        "url": "https://files.pythonhosted.org/packages/4f/f1/3ea9437b53346fcdc446428ac9b16614ac51f089d2b5bfe708f77e4cf4db/wavegrad-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28d71576696f3942444f3b020454109a5dcb48192f05a51e9a535cc27ef1c1f7",
          "md5": "3c58cb72fdf7b5bbdecbfa963f880d23",
          "sha256": "f40d9125f906078ff791d9324b100ea6e6e9ba4162df622c31eadc3006cee3d1"
        },
        "downloads": -1,
        "filename": "wavegrad-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "3c58cb72fdf7b5bbdecbfa963f880d23",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16214,
        "upload_time": "2022-07-11T21:38:23",
        "upload_time_iso_8601": "2022-07-11T21:38:23.794523Z",
        "url": "https://files.pythonhosted.org/packages/28/d7/1576696f3942444f3b020454109a5dcb48192f05a51e9a535cc27ef1c1f7/wavegrad-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28d71576696f3942444f3b020454109a5dcb48192f05a51e9a535cc27ef1c1f7",
        "md5": "3c58cb72fdf7b5bbdecbfa963f880d23",
        "sha256": "f40d9125f906078ff791d9324b100ea6e6e9ba4162df622c31eadc3006cee3d1"
      },
      "downloads": -1,
      "filename": "wavegrad-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "3c58cb72fdf7b5bbdecbfa963f880d23",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16214,
      "upload_time": "2022-07-11T21:38:23",
      "upload_time_iso_8601": "2022-07-11T21:38:23.794523Z",
      "url": "https://files.pythonhosted.org/packages/28/d7/1576696f3942444f3b020454109a5dcb48192f05a51e9a535cc27ef1c1f7/wavegrad-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}