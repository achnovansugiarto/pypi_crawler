{
  "info": {
    "author": "",
    "author_email": "Italo Campos <italo.ramon.campos@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Colorido\n\nColors for Terminal without weird code.\n\n\n## Description\n\nColorido is a small Python 3.x lib to speed up the text coloring throughout\nyour Python projects. You ever can make your logs prettier. ;)\n\nYou don't need to install any dependency to use colorido. In a nutshell, just\nimport the `color` module from the `colorido` package and call the functions\nin a print context to start coloring your strings.\n\n\n## Installation\n\nInstall it with pip by running:\n\n``` Shell\npip install colorido\n```\n\n\n## Usage\n\nTo use the colorido abilities, import the `color` module in your code and just\ncall the function with the color you want to print. See how in the example\nbelow:\n\n``` Python\nfrom colorido import color\n\nprint('This is the color ' + color.red('red') + '.')\n```\n\n\n### Coloring\n\nYou can choose the color you want among the eight available color options. The\nsupported options are:\n\n| Text color   | Function       |\n| ------------ | -------------- |\n| Black        | `black(str)`   |\n| Blue         | `blue(str)`    |\n| Cyan         | `cyan(str)`    |\n| Green        | `green(str)`   |\n| Magenta      | `magenta(str)` |\n| Red          | `red(str)`     |\n| White        | `white(str)`   |\n| Yellow       | `yellow(str)`  |\n\n> ℹ️ **Note:** the visual colors may vary according with the configuration of\nyour Terminal or system.\n\n\n#### Basic examples\n\nBelow we have some examples of colorido's general usage.\n\nExample 1:\n\n``` Python\nfrom colorido import color\n\ntext = color.green('BR') + color.yellow('AZ') + color.blue('IL')\nprint('Come to visit %s.' % text)\n```\n\nExample 2:\n\n``` Python\nfrom colorido import color\n\nprint(f'sudo {color.red(\"rm -rf /\")}')\n```\n\nExample 3:\n``` Python\nfrom colorido import color\n\nprint(\n    'Is zebra {black} with {white} stripes or {white} with {black} stripes?'.format(\n        black=color.black('BLACK'),\n        white=color.white('WHITE'),\n    )\n)\n```\n\n\n### Styling\n\nColorido also support text styling. The styles modify the heavy of the text.\nThe supported styles are:\n\n- Dim text\n- Normal text\n- Bold text\n\nYou can style your text by passing an extra optional `style` parameter to the\ncolor functions. For example, to get a bold red text, you can do:\n\nExample 4:\n\n``` Python\nfrom colorido import color\n\nprint(color.red('STOP', style='bold'), 'deploys at friday!')\n```\n\nYou can also omit the `style` keyword and pass the style parameter just like a\npositional parameter.\n\nExample 5:\n\n``` Python\nfrom colorido import color\n\nprint(color.magenta('Dimmed', 'dim'), 'texts are calm.')\n```\n\nColorido supports three types of text styling.\n\n| Text style | Parameter                     |\n| ---------- | ----------------------------- |\n| Dim        | `'d'` or `'dim'`              |\n| Normal     | `'n'` or `'normal'` (default) |\n| Bold       | `'b'` or `'bold'`             |\n\nIf you don't want to color your text, you can use the `font()` function to skip\nthe text coloring. For this, provide the desired style parameter just like you\ndo in the coloring functions. See how:\n\nExample 6:\n\n``` Python\nfrom colorido import color\n\nprint(\n    '{I} {love} {linux}.'.format(\n        I=color.font('I', 'bold'),\n        love=color.red('<3', 'bold'),\n        linux=color.font('Linux', 'dim'),\n    )\n)\n```\n\n### Background color\n\n> New in version 1.0.0!\n\nYou can also color the background of your logs! Just provide a `bg` parameter\nto any color function with the name of the color you want.\n\nExample 7:\n\n``` Python\nfrom colorido import color\n\nprint(\n    'The sun rules the {day} and the moon rules the {night}.'.format(\n        day=color.yellow('day', bg='white'),\n        night=color.blue('night', bg='black'),\n    )\n)\n```\n\nThe available background colors are the same eight available in the foreground\ntext colors. Below you have a list with the color options:\n\n| Background color | Parameter   |\n| ---------------- | ----------- |\n| Black            | `'black'`   |\n| Blue             | `'blue'`    |\n| Cyan             | `'cyan'`    |\n| Green            | `'green'`   |\n| Magenta          | `'magenta'` |\n| Red              | `'red'`     |\n| White            | `'white'`   |\n| Yellow           | `'yellow'`  |\n\n\nIf you want to use just the background color, with no foreground text color,\nyou can call again the `font()` function, providing the `bg` parameter. For\nexample:\n\nExample 8:\n\n``` Python\nfrom colorido import color\n\nprint(\n    'If your {code} have many {bugs}, you propably need more {coffee}.'.format(\n        code=color.font('code', bg='blue'),\n        bugs=color.font('bugs', bg='red'),\n        coffee=color.font('coffee', bg='black'),\n    )\n)\n```\n\nYou can also style your text while you choose your background color, just like we\nhave done in [styling section](#styling). See an example:\n\nExample 9:\n\n``` Python\nfrom colorido import color\n\nprint(\n    'The {white} {light} can split in a beautiful {ra}{i}{n}{b}{o}{w}.'.format(\n        # We can style and also background our text with font() function\n        white=color.font('white', 'bold', bg='white'),\n        light=color.font('light', 'bold', bg='black'),\n        ra=color.red('ra'),\n        i=color.yellow('i'),\n        n=color.green('n'),\n        b=color.cyan('b'),\n        o=color.blue('o'),\n        w=color.magenta('w'),\n    )\n)\n```\n\nThat's all folks! Bugs, questions or coffees, feel free to reach me in my [e-mail](mailto:italo.ramon.campos@gmail.com).\n\n\n## Who is this lib for?\n\nColorido is addressed to anyone who wants a simple lib to print colored\ntexts in the screen without a hundred of things to learn. You just need to\nimport the module and call the functions you want to.\n\nColorido doesn't match programmers that want a full-featured lib. It just\nreturns colored texts to be printed in the screen. No things more. If this is not\nyour vibe, consider search for other python libraries (like colorama, colored or\nPyColor).\n\n\n## License\n\nThis lib is a free software and is distributed under the [MIT License](https://opensource.org/licenses/MIT).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "color,terminal,colored",
    "license": "Copyright (c) 2020 Italo Campos Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "colorido",
    "package_url": "https://pypi.org/project/colorido/",
    "platform": null,
    "project_url": "https://pypi.org/project/colorido/",
    "project_urls": {
      "Homepage": "https://github.com/italocampos/colorido"
    },
    "release_url": "https://pypi.org/project/colorido/1.0.0/",
    "requires_dist": [
      "flake8 ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "A small lib to ease the coloring of your Terminal text logs with ANSI colors",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14169198,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f77377cc83d4952a3f455a06ce0a06070a1c569a6bf16a7c1812e9f236f935e",
          "md5": "c2b43b7c5c96fae05a4d0b4192578b32",
          "sha256": "96106213bea94ce1a9f3511335bff5d46f86eae104204a28a371b80d6f124dbf"
        },
        "downloads": -1,
        "filename": "colorido-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2b43b7c5c96fae05a4d0b4192578b32",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7464,
        "upload_time": "2022-06-18T03:04:28",
        "upload_time_iso_8601": "2022-06-18T03:04:28.649849Z",
        "url": "https://files.pythonhosted.org/packages/3f/77/377cc83d4952a3f455a06ce0a06070a1c569a6bf16a7c1812e9f236f935e/colorido-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b9a6d18a6c7685896329cdd1ab5272fd1e58d1cc026a8ccefc289489b8f91c1",
          "md5": "326e40914a51e5e81f5443a8cd4dae5d",
          "sha256": "4285733bd0a170f05933737206e28768470c3e1517d4a1e0079471e68a9b3cc7"
        },
        "downloads": -1,
        "filename": "colorido-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "326e40914a51e5e81f5443a8cd4dae5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7047,
        "upload_time": "2022-06-18T03:04:31",
        "upload_time_iso_8601": "2022-06-18T03:04:31.382302Z",
        "url": "https://files.pythonhosted.org/packages/2b/9a/6d18a6c7685896329cdd1ab5272fd1e58d1cc026a8ccefc289489b8f91c1/colorido-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f77377cc83d4952a3f455a06ce0a06070a1c569a6bf16a7c1812e9f236f935e",
        "md5": "c2b43b7c5c96fae05a4d0b4192578b32",
        "sha256": "96106213bea94ce1a9f3511335bff5d46f86eae104204a28a371b80d6f124dbf"
      },
      "downloads": -1,
      "filename": "colorido-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c2b43b7c5c96fae05a4d0b4192578b32",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7464,
      "upload_time": "2022-06-18T03:04:28",
      "upload_time_iso_8601": "2022-06-18T03:04:28.649849Z",
      "url": "https://files.pythonhosted.org/packages/3f/77/377cc83d4952a3f455a06ce0a06070a1c569a6bf16a7c1812e9f236f935e/colorido-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b9a6d18a6c7685896329cdd1ab5272fd1e58d1cc026a8ccefc289489b8f91c1",
        "md5": "326e40914a51e5e81f5443a8cd4dae5d",
        "sha256": "4285733bd0a170f05933737206e28768470c3e1517d4a1e0079471e68a9b3cc7"
      },
      "downloads": -1,
      "filename": "colorido-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "326e40914a51e5e81f5443a8cd4dae5d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7047,
      "upload_time": "2022-06-18T03:04:31",
      "upload_time_iso_8601": "2022-06-18T03:04:31.382302Z",
      "url": "https://files.pythonhosted.org/packages/2b/9a/6d18a6c7685896329cdd1ab5272fd1e58d1cc026a8ccefc289489b8f91c1/colorido-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}