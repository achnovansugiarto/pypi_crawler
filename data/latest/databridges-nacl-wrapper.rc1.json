{
  "info": {
    "author": null,
    "author_email": "\"Optomate Technologies Private Limited.\" <tech@optomate.io>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "![](https://img.shields.io/badge/Licence-MIT-green.svg)![](https://shields.io/badge/python-+3.6-blue)\n\n# Databridges Python NaCl Wrapper Library\n\nDatabridges NACL wrapper gives you a simple write and read function using implementation of the secretbox encryption standard defined in NaCl.\n\nDatabridges NACL wrapper is available for \n\n- [JavaScript](https://github.com/databridges-io/lib.javascript.nacl.wrapper.git) \n- [NodeJS](https://github.com/databridges-io/lib.nodejs.nacl.wrapper.git)\n- [C#](https://github.com/databridges-io/lib.csharp.nacl.wrapper.git)\n- [Python](https://github.com/databridges-io/lib.python.nacl.wrapper.git)\n- [Java for Android](https://github.com/databridges-io/lib.android.nacl.wrapper.git)\n- [iOS Swift](https://github.com/databridges-io/lib.ios.nacl.wrapper.git)\n\nThe above wrappers can be used to send encrypted messages between them.\n\n> The Databridges NACL wrapper for Python Language binding uses `PyNaCl` to deliver implementation of the secretbox encryption standard defined in NaCl.\n\n## Usage Overview\n\nThe following topics are covered:\n\n  - [Supported platforms](#supported-platforms)\n  - [Installation.](#installation)\n  - [Initialization](#initialization)\n  - [Global Configuration](#global-configuration)\n  - [How to use with Databridges Python Library](#how-to-use-with-databridges-python-library)\n  - [Change Log](#change-log)\n  - [License](#license)\n\n## Supported platforms\n\nSupports Python versions  +3.6\n\n## Installation.\n\nYou can use pip package manager to install the package.\n\n```bash\npip3 install databridges_nacl_wrapper\n```\n\n## Initialization\n\n```python\nfrom databridges_nacl_wrapper import databridges_nacl_wrapper\nsecretData = databridges_nacl_wrapper()\n```\n\n## Global Configuration\n\n### Required\n\nThe following is the required properties before using to dataBridges NaCl wrapper.\n\n```python\nsecretData.secret = '32 char alphanumeric string';\n```\n\n| Properties | Description                                                  |\n| ---------- | ------------------------------------------------------------ |\n| `secret`   | *(string)* 32 char alpha numeric string. NaCl encryption secret. |\n\n## Encrypt data\n\nTo encrypt data using NaCl, databridges wrapper exposes a method named `write`, This will return encrypted data if successful else it will throw error.\n\n#### write() \n\n```python\ntry:\n    encData = secretData.write(\"Your Data..\"); \n    print('Encrypted:', encData);\nexcept Exception as err:\n    print('Errors:', err.source , err.code , err.message);\n```\n\n| Parameter | Description                        |\n| --------- | ---------------------------------- |\n| `data`    | *(string)* *data* to be encrypted. |\n\n| Return Values | Description        |\n| ------------- | ------------------ |\n| `string`      | Encrypted  string. |\n\n##### Exceptions: \n\n| Source             | Code           | Description                                    |\n| ------------------ | -------------- | ---------------------------------------------- |\n| DBLIB_NACL_WRAPPER | INVALID_SECRET | `secret` is not set with the wrapper instance. |\n| DBLIB_NACL_WRAPPER | INVALID_DATA   | If `data` is not passed to the function.       |\n| DBLIB_NACL_WRAPPER | NACL_EXCEPTION | Exceptions generated by NaCl library.          |\n\n## Decrypt data\n\nTo decrypt data using NaCl, databridges wrapper exposes a method named `read`, This will return decrypted data if successful else it will throw error.\n\n#### read() \n\n```python\ntry:\n    decData = secretData.read(\"<Encrypted data.>\")\n    print('Decrypted:', decData);\nexcept Exception as err:\n    print(\"Errors:\", err.source, err.code, err.message)\n```\n\n| Parameter | Description                        |\n| --------- | ---------------------------------- |\n| `data`    | *(string)* *data* to be encrypted. |\n\n| Return Values | Description        |\n| ------------- | ------------------ |\n| `string`      | Encrypted  string. |\n\n##### Exceptions: \n\n| Source             | Code                | Description                                                  |\n| ------------------ | ------------------- | ------------------------------------------------------------ |\n| DBLIB_NACL_WRAPPER | INVALID_SECRET      | `secret` is not set with the wrapper instance.               |\n| DBLIB_NACL_WRAPPER | INVALID_DATA        | If `data` is not passed to the function OR `data` is not a valid encrypted string. |\n| DBLIB_NACL_WRAPPER | NACL_EXCEPTION      | Exceptions generated by NaCl library.                        |\n| DBLIB_NACL_WRAPPER | NACL_DECRYPT_FAILED | If decryption fails due to invalid secret or manipulated data. |\n\n \n\n## How to use with Databridges Python Library\n\nBelow code shows how to integrate the NaCl wrapper with the Databridges library. After initialize you can use the wrapper library to encrypt and decrypt the data when publishing and receiving events.\n\n```python\n# Initialize both databridges-sio-client-lib and databridges-nacl-wrapper\nfrom  databridges_sio_client_lib import dBridges\nfrom databridges_sio_client_lib.exceptions import dBError\nfrom databridges_nacl_wrapper import databridges_nacl_wrapper\n\ndbridge = dBridges()\nsecretData = databridges_nacl_wrapper()\nsecretData.secret = \"Your32 char secret.\";\n\n# .... Your databridges code comes here.\n\n# On Subscription success event.\nasync def on_SubscribeChannel(payload, metadata):\n    try:\n        # Encrypt data to publish\n        encData = secretData.write('Your Data..')\n        await self.subscribeChannel.publish('eventName', encData, 1)\n    except Exception as err:\n        print(\"Error: \", err.source, err.code, err.message)\n\nself.subscribeChannel.bind(\"dbridges:subscribe.success\", on_SubscribeChannel)\n\n# On payload Received event.\nasync def on_EventReceived(payload, metadata):\n    try:\n        decData = secretData.read(payload)\n        print('Decrypted:', decData);\n    except Exception as err:\n        print(\"Error: \", err.source, err.code, err.message) \n\nself.subscribeChannel.bind(\"eventName\", on_EventReceived)\n```\n\n\n\n## Change Log\n  * [Change log](CHANGELOG.md): Changes in the recent versions\n\n## License\n\nDataBridges NaCl Wrapper is released under the [MIT license](LICENSE).\n\n```\n    Copyright 2022 Optomate Technologies Private Limited.\n\n    Permission is hereby granted, free of charge, to any person obtaining\n    a copy of this software and associated documentation files (the\n    \"Software\"), to deal in the Software without restriction, including\n    without limitation the rights to use, copy, modify, merge, publish,\n    distribute, sublicense, and/or sell copies of the Software, and to\n    permit persons to whom the Software is furnished to do so, subject to\n    the following conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n    LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": "optomate,databridges,pubsub,rpc,websocket,socket.io,ws,events,realtime,real-time,nacl,encryption",
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "databridges_nacl_wrapper",
    "package_url": "https://pypi.org/project/databridges_nacl_wrapper/",
    "platform": null,
    "project_url": "https://pypi.org/project/databridges_nacl_wrapper/",
    "project_urls": {
      "Documentation": "https://github.com/databridges-io/lib.python.nacl.wrapper",
      "Source": "https://github.com/databridges-io/lib.python.nacl.wrapper"
    },
    "release_url": "https://pypi.org/project/databridges_nacl_wrapper/1.0.1/",
    "requires_dist": [
      "PyNaCl==1.5.0"
    ],
    "requires_python": null,
    "summary": "DataBridges Python nacl wrapper for databridges library.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14623015,
  "releases": {
    "1.0.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "667cb61b7bc0c219014ff94210bd0059a595445f8124fc315149e69d48e0ba7c",
          "md5": "82615eee64bd87a8c1ca472c3b245c03",
          "sha256": "731f0d4414f60292deede5c1d0d6af5dcb85b1707697dd9ec6352363ebf7047c"
        },
        "downloads": -1,
        "filename": "databridges_nacl_wrapper-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "82615eee64bd87a8c1ca472c3b245c03",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6784,
        "upload_time": "2022-08-02T07:40:14",
        "upload_time_iso_8601": "2022-08-02T07:40:14.327928Z",
        "url": "https://files.pythonhosted.org/packages/66/7c/b61b7bc0c219014ff94210bd0059a595445f8124fc315149e69d48e0ba7c/databridges_nacl_wrapper-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "1ad2a92d5e6156438986675049168981df608f6c5bf60e80ea53b04d676c50c0",
          "md5": "8a5be9446583e0f761d19cf83522f07f",
          "sha256": "4d61798d554ca9639539302ada43fbc6222e220e6374336e3fcc9989fcb833e6"
        },
        "downloads": -1,
        "filename": "databridges_nacl_wrapper-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8a5be9446583e0f761d19cf83522f07f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5928,
        "upload_time": "2022-08-02T07:40:16",
        "upload_time_iso_8601": "2022-08-02T07:40:16.387445Z",
        "url": "https://files.pythonhosted.org/packages/1a/d2/a92d5e6156438986675049168981df608f6c5bf60e80ea53b04d676c50c0/databridges_nacl_wrapper-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "667cb61b7bc0c219014ff94210bd0059a595445f8124fc315149e69d48e0ba7c",
        "md5": "82615eee64bd87a8c1ca472c3b245c03",
        "sha256": "731f0d4414f60292deede5c1d0d6af5dcb85b1707697dd9ec6352363ebf7047c"
      },
      "downloads": -1,
      "filename": "databridges_nacl_wrapper-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "82615eee64bd87a8c1ca472c3b245c03",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 6784,
      "upload_time": "2022-08-02T07:40:14",
      "upload_time_iso_8601": "2022-08-02T07:40:14.327928Z",
      "url": "https://files.pythonhosted.org/packages/66/7c/b61b7bc0c219014ff94210bd0059a595445f8124fc315149e69d48e0ba7c/databridges_nacl_wrapper-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "1ad2a92d5e6156438986675049168981df608f6c5bf60e80ea53b04d676c50c0",
        "md5": "8a5be9446583e0f761d19cf83522f07f",
        "sha256": "4d61798d554ca9639539302ada43fbc6222e220e6374336e3fcc9989fcb833e6"
      },
      "downloads": -1,
      "filename": "databridges_nacl_wrapper-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8a5be9446583e0f761d19cf83522f07f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5928,
      "upload_time": "2022-08-02T07:40:16",
      "upload_time_iso_8601": "2022-08-02T07:40:16.387445Z",
      "url": "https://files.pythonhosted.org/packages/1a/d2/a92d5e6156438986675049168981df608f6c5bf60e80ea53b04d676c50c0/databridges_nacl_wrapper-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}