{
  "info": {
    "author": "Jansen Leo",
    "author_email": "2835347017@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# 介绍\n- 该类库主要提供多种类注入方式， 主要利用抽象类，解决python中原生无接口的工程方面的缺陷\n> 示例一:\n- 单实例化\n```python\nfrom BusyBox.ServiceBox import Box\n\nclass AppleService(object):\n\n    def name(self):\n        return 'test'\n\nif __name__ == '__main__':\n    box = Box()\n    box.inject(AppleService)\n    box.apple_service.name()\n```\n> 示例二:\n- 带参 多实例化\n```python\nfrom BusyBox.ServiceBox import Box\n\nclass TestService(object):\n\n    def __init__(self, params1):\n        self.params1 = params1\n\n    def handle(self):\n        return self.params1\n\n\nclass RestService(object):\n\n    def __init__(self, params1):\n        self.params1 = params1\n\n    def handle(self):\n        return self.params1\n\nif __name__ == '__main__':\n    box = Box()\n    box.inject(TestService, RestService, payload=dict(params1=1))\n    box.rest_service.handle()\n    box.test_service.handle()\n```\n> 示例三:\n- 类命名中带实例\n```python\nfrom BusyBox.ServiceBox import Box\n\nclass Bus1Service(object):\n\n    def name(self):\n        return 'test'\n\nif __name__ == '__main__':\n    box = Box()\n    box.inject(Bus1Service)\n    box.bus1_service.name()\n```\n> 示例四:\n- 类命名中带实例\n```python\nfrom BusyBox.ServiceBox import Box\n\nbox = Box()\n\n@box.depend()\nclass CowService(object):\n\n    @staticmethod\n    def name():\n        return 'test'\n\nif __name__ == '__main__':\n    box = Box()\n    box.inject(CowService)\n    box.cow_service.name()\n```\n> 示例五:\n- __init__方法带参实例\n```python\nfrom BusyBox.ServiceBox import Box\n\nbox = Box()\n\n@box.depend()\nclass EasyService(object):\n\n    def __init__(self, params1, *args, **kwargs):\n        self.args = args\n        self.kwargs = kwargs\n        self.params1 = params1\n\n    def name(self):\n        return self.params1, self.args, self.kwargs\n\nif __name__ == '__main__':\n    box = Box()\n    box.invoke('easy_service', 1, 2, 3, a=4, b=5)\n    box.easy_service.name()\n```\n> 示例六:\n- 注入参数 在__init__参数中不需要时，在有没有kwargs参数情况下会忽略\n```python\nfrom BusyBox.ServiceBox import Box\nclass PositionService(object):\n\n    def __init__(self, params1: str):\n        self.params1 = params1\n\n    def show_params(self):\n        print(f'{__class__}: self.params1:', self.params1)\n        return self.params1\nif __name__ == '__main__':\n    box = Box()\n    box.inject(PositionService, payload={'params1': 1, 'params2': 1})\n    box.position_service.show_params()\n    \"\"\"\n    输出：\n        <class 'TestInjectorDemo.PositionService'>: self.params1: 1\n    \"\"\"\n```\n> 示例七:\n- 实体重置复用\n```python\nfrom BusyBox.ServiceBox import Box\n\nclass Position4Service(object):\n\n    def __init__(self, params1: str, *_args, **_kwargs):\n        self.params1 = params1\n        self.args = _args\n        self.kwargs = _kwargs\n\n    def show_params1(self):\n        print('self.params1:', self.params1)\n        return self.params1\n\n    def show_args(self):\n        print('self._args:', self.args)\n        return self.args\n\n    def show_kwargs(self):\n        print('self._kwargs:', self.kwargs)\n        return self.kwargs\nif __name__ == '__main__':\n    box = Box()\n    box.inject(Position4Service, args_payload=(99, 1, 2, 3, 4), kwargs_payload=dict(params2=88))\n    box.position4_service.show_params1() == 99              # True\n    box.position4_service.show_args() == (1, 2, 3, 4)       # True\n    box.position4_service.show_kwargs() == dict(params2=88) # True\n    box.position4_service.params1 = 100                     # True\n    box.position4_service.show_params1() == 100\n    # 重置\n    box.reset('position4_service')\n    box.position4_service.show_params1() == 99              # True\n    box.position4_service.show_args() == (1, 2, 3, 4)       # True\n    box.position4_service.show_kwargs() == dict(params2=88) # True\n```\n> 实例八\n- 服务中根据依赖服务的接口注入相关工厂\n```python\nimport abc\nfrom BusyBox.ServiceBox import FactoryInjectAPI, factory_inject\n\nclass Child1API(metaclass=abc.ABCMeta):\n    def func1(self) -> str:\n        raise NotImplementedError\n\n\nclass Child2API(metaclass=abc.ABCMeta):\n    def func2(self) -> str:\n        raise NotImplementedError\n\n\nclass Child1Service(Child1API):\n\n    def func1(self) -> str:\n        return \"func1\"\n\n\nclass Child2Service(Child2API):\n\n    def func2(self) -> str:\n        return \"func2\"\n\n\nclass Child1ServiceFactory(FactoryInjectAPI):\n\n    def construct(self) -> Child1API:\n        return Child1Service()\n\n\nclass Child2ServiceFactory(FactoryInjectAPI):\n\n    def construct(self) -> Child2API:\n        return Child2Service()\n\n\n@factory_inject(\n    Child1ServiceFactory,\n    Child2ServiceFactory\n)\nclass FatherService(object):\n\n    child1_service: Child1API\n    child2_service: Child2API\n\n    def __init__(self):\n        print('')\n\n    def test(self):\n        print('test:', self.child1_service.func1(), self.child2_service.func2())\n```\n> 实例九\n- 依赖的服务共享宿主实例的属性\n```python\n# -*- coding: utf-8 -*-\nimport abc\nfrom typing import Any\nfrom BusyBox.ServiceBox import FactoryInjectAPI, factory_inject\n\n\nclass Child1RefAPI(metaclass=abc.ABCMeta):\n\n    @abc.abstractmethod\n    def func1(self) -> str:\n        raise NotImplementedError\n\n\nclass Child2RefAPI(metaclass=abc.ABCMeta):\n\n    @abc.abstractmethod\n    def func2(self) -> str:\n        raise NotImplementedError\n\n\nclass Context(object):\n    session: Any\n\n    def __init__(self, session: Any):\n        self.session = session\n\n\nclass Child1RefService(Child1RefAPI):\n    context: Context\n\n    def __init__(self, ctx: Context):\n        self.context = ctx\n\n    def func1(self) -> str:\n        return f\"Child {self.context} {id(self.context)}\"\n\n\nclass Child2RefService(Child2RefAPI):\n    context: Context\n\n    def __init__(self, ctx: Context):\n        self.context = ctx\n\n    def func2(self) -> str:\n        return f\"Child {self.context} {id(self.context)}\"\n\n\nclass Child1RefServiceFactory(FactoryInjectAPI):\n\n    def construct(self, context: Context) -> Child1RefAPI:\n        return Child1RefService(context)\n\n\nclass Child2RefServiceFactory(FactoryInjectAPI):\n\n    def construct(self, context: Context) -> Child2RefAPI:\n        return Child2RefService(context)\n\n\n@factory_inject(\n    Child1RefServiceFactory,\n    Child2RefServiceFactory,\n    refer=Context\n)\nclass FatherDeepService(object):\n\n    child1_service: Child1RefAPI\n    child2_service: Child2RefAPI\n    context_host: Context\n\n    def __init__(self):\n        self.context_host = Context('context from host')\n        print(f'Host {self.context_host} {id(self.context_host)}')\n\n    def test(self):\n        print('test:', self.child1_service.func1(), self.child2_service.func2())\nif __name__ == '__main__':\n    f_srv = FatherDeepService()\n    assert f_srv.child1_service.func1() == f_srv.child2_service.func2()\n    assert f_srv.context_host == f_srv.child1_service.context\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AngelovLee/BusyBox",
    "keywords": "inject,depend,invoke,BusyBox",
    "license": "MIT License",
    "maintainer": "Jansen Leo",
    "maintainer_email": "2835347017@qq.com",
    "name": "BusyBox",
    "package_url": "https://pypi.org/project/BusyBox/",
    "platform": "linux",
    "project_url": "https://pypi.org/project/BusyBox/",
    "project_urls": {
      "Homepage": "https://github.com/AngelovLee/BusyBox"
    },
    "release_url": "https://pypi.org/project/BusyBox/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": " 依赖注入 ",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12722190,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "430a0729fd53f4eb10e6ebbefa3239c1d435c8cc5b4fedfa6cf07a551dc208d7",
          "md5": "de36973982c5e3e460c7cb16ec61ebdc",
          "sha256": "faad122f8917e7496dbf81577171f6e569ad4f1951fc5f4a72aa6c09fa5e3b65"
        },
        "downloads": -1,
        "filename": "BusyBox-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "de36973982c5e3e460c7cb16ec61ebdc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2179,
        "upload_time": "2020-11-30T16:20:38",
        "upload_time_iso_8601": "2020-11-30T16:20:38.081679Z",
        "url": "https://files.pythonhosted.org/packages/43/0a/0729fd53f4eb10e6ebbefa3239c1d435c8cc5b4fedfa6cf07a551dc208d7/BusyBox-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4158118675fc1a97af55e735f58f2d6d79369fc2f5a0a6a11a6479afa55d0564",
          "md5": "dfd139b17c46d8a11f066ae9e2574da9",
          "sha256": "ee2b3b1835c3154d1ffeb81f70ebdf2fff6e84d1720e2a2d94f21c78b153278a"
        },
        "downloads": -1,
        "filename": "BusyBox-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dfd139b17c46d8a11f066ae9e2574da9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5303,
        "upload_time": "2022-01-26T16:46:18",
        "upload_time_iso_8601": "2022-01-26T16:46:18.376576Z",
        "url": "https://files.pythonhosted.org/packages/41/58/118675fc1a97af55e735f58f2d6d79369fc2f5a0a6a11a6479afa55d0564/BusyBox-0.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cee770e73b05adc85a7afa5e2b05d8f6b148fa4a1b91ecbcdb0eece256ad4d0b",
          "md5": "ffbf780a93ff4b7709c570b172f4ff0a",
          "sha256": "3b642bcb9d7c13958f6584c3a05edb580408c06c4806a15237ca5857dce40134"
        },
        "downloads": -1,
        "filename": "BusyBox-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ffbf780a93ff4b7709c570b172f4ff0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1962,
        "upload_time": "2020-12-01T09:25:36",
        "upload_time_iso_8601": "2020-12-01T09:25:36.665698Z",
        "url": "https://files.pythonhosted.org/packages/ce/e7/70e73b05adc85a7afa5e2b05d8f6b148fa4a1b91ecbcdb0eece256ad4d0b/BusyBox-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c1f75b9e8ec23d3804be0e9ebcf041b16b5140a8d4cbe67d3a41d420e5eb7b6",
          "md5": "4ab5f9400b69360b50556ebcdc3ff019",
          "sha256": "15a651381e9bfe36076e575d8f9a780c88b63e6e72c1851b0e57c2f1011765c3"
        },
        "downloads": -1,
        "filename": "BusyBox-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4ab5f9400b69360b50556ebcdc3ff019",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1996,
        "upload_time": "2020-12-01T09:28:22",
        "upload_time_iso_8601": "2020-12-01T09:28:22.814337Z",
        "url": "https://files.pythonhosted.org/packages/3c/1f/75b9e8ec23d3804be0e9ebcf041b16b5140a8d4cbe67d3a41d420e5eb7b6/BusyBox-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93ecc2787ea8b183d581a7a1d2db04ec50de5affaa4e97433268818c817eb8da",
          "md5": "437a312069477311474b11dfc0e207ad",
          "sha256": "0e1979b43887246c4aea4e5465b4130b61c0c29b08a246fd1af0b3cd490f03a3"
        },
        "downloads": -1,
        "filename": "BusyBox-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "437a312069477311474b11dfc0e207ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1996,
        "upload_time": "2020-12-01T09:29:22",
        "upload_time_iso_8601": "2020-12-01T09:29:22.992877Z",
        "url": "https://files.pythonhosted.org/packages/93/ec/c2787ea8b183d581a7a1d2db04ec50de5affaa4e97433268818c817eb8da/BusyBox-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "937b70c3231c078d5df503f115c428f5678a16a49f3f2d77c0ecbee94435ad26",
          "md5": "778106e5e5b4fc895698fe8d4aca66f8",
          "sha256": "3615a60aa74ef890c3d6f22fa678a77fb74b304df25b68b91fbac81c58b68425"
        },
        "downloads": -1,
        "filename": "BusyBox-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "778106e5e5b4fc895698fe8d4aca66f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1964,
        "upload_time": "2020-12-01T12:47:32",
        "upload_time_iso_8601": "2020-12-01T12:47:32.421468Z",
        "url": "https://files.pythonhosted.org/packages/93/7b/70c3231c078d5df503f115c428f5678a16a49f3f2d77c0ecbee94435ad26/BusyBox-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec294b2acbf5c5e5622beb37c123074b82d0f8c2aa3dcce3963db1e2c34bede8",
          "md5": "b22651b9f2d850a2250c4de25e7c5bf2",
          "sha256": "18a0442f814b02e1ea5a8d3d7e63fc5b82ee666aa6820103a6822190001a118d"
        },
        "downloads": -1,
        "filename": "BusyBox-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b22651b9f2d850a2250c4de25e7c5bf2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2311,
        "upload_time": "2020-12-01T15:09:32",
        "upload_time_iso_8601": "2020-12-01T15:09:32.896989Z",
        "url": "https://files.pythonhosted.org/packages/ec/29/4b2acbf5c5e5622beb37c123074b82d0f8c2aa3dcce3963db1e2c34bede8/BusyBox-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84d75cb45304da0ed6e74312ac8e32f86790b18681a2bbd742778dda9ca94e1e",
          "md5": "4a71cd0a8d13e85087c8b168cf7739c6",
          "sha256": "2f5129e1e9b9ef9e5723ce810fedf06ba61f382b69193b4af1210b5eb2a3af5d"
        },
        "downloads": -1,
        "filename": "BusyBox-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4a71cd0a8d13e85087c8b168cf7739c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2979,
        "upload_time": "2020-12-01T15:49:38",
        "upload_time_iso_8601": "2020-12-01T15:49:38.920144Z",
        "url": "https://files.pythonhosted.org/packages/84/d7/5cb45304da0ed6e74312ac8e32f86790b18681a2bbd742778dda9ca94e1e/BusyBox-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b77497b5fe89139e3582ad6c42f2a58345a768918300d23b8f2e1487a7ff00b",
          "md5": "20891fc9027937bab90ebe1b447eb688",
          "sha256": "ca901750078d6f3f145b919193a4aa8e3886f57437c59219caba6fbe8e1e0245"
        },
        "downloads": -1,
        "filename": "BusyBox-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "20891fc9027937bab90ebe1b447eb688",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5142,
        "upload_time": "2022-01-25T14:23:48",
        "upload_time_iso_8601": "2022-01-25T14:23:48.188644Z",
        "url": "https://files.pythonhosted.org/packages/4b/77/497b5fe89139e3582ad6c42f2a58345a768918300d23b8f2e1487a7ff00b/BusyBox-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7520d8cab50867d6e103dbaa2a3036bc8f24c8eab53153f533a8fd7145978b2",
          "md5": "e0edf7bdcaa2b51642e9c6cfe8c398d6",
          "sha256": "4d7eee2d988458758a8dbfdb85e1b78ceea1158ed9c3ab84fd110b45ed8ff7a6"
        },
        "downloads": -1,
        "filename": "BusyBox-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e0edf7bdcaa2b51642e9c6cfe8c398d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5130,
        "upload_time": "2022-01-19T17:27:49",
        "upload_time_iso_8601": "2022-01-19T17:27:49.234555Z",
        "url": "https://files.pythonhosted.org/packages/c7/52/0d8cab50867d6e103dbaa2a3036bc8f24c8eab53153f533a8fd7145978b2/BusyBox-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be3f1580489b2e16ea075d08b016ab75f73fb973ff8b2e5abb139433cff9a062",
          "md5": "c2d68c372dbba42465fba17a4d03c815",
          "sha256": "274a07290800aa1b740f77f7e496602a96bbb66c78e91fd2534d69adf61c023f"
        },
        "downloads": -1,
        "filename": "BusyBox-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c2d68c372dbba42465fba17a4d03c815",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5413,
        "upload_time": "2022-01-28T14:00:30",
        "upload_time_iso_8601": "2022-01-28T14:00:30.256993Z",
        "url": "https://files.pythonhosted.org/packages/be/3f/1580489b2e16ea075d08b016ab75f73fb973ff8b2e5abb139433cff9a062/BusyBox-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f73273e2bac3de76280afe6be9866230f9ecf8acfdbcf0d266c0bf5a430a4e5",
          "md5": "9c25ec0afc2890259efb1b7aca30fb5a",
          "sha256": "d067867bb07f1dcc43d7b531d9a364eca785b3bc1e901dcf33cbb1de0b968fcd"
        },
        "downloads": -1,
        "filename": "BusyBox-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9c25ec0afc2890259efb1b7aca30fb5a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5973,
        "upload_time": "2022-01-28T14:41:43",
        "upload_time_iso_8601": "2022-01-28T14:41:43.866002Z",
        "url": "https://files.pythonhosted.org/packages/6f/73/273e2bac3de76280afe6be9866230f9ecf8acfdbcf0d266c0bf5a430a4e5/BusyBox-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cec8660a8a6248bac1e6b310826474f53a02a805708e97adb9dc9249f73c54b1",
          "md5": "ce6db9fbb43b63b0ce9da178767b09c5",
          "sha256": "1492e1c27b72ceea99165066672a69297315ea2dbbe2e87314c75d6aab276e05"
        },
        "downloads": -1,
        "filename": "BusyBox-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ce6db9fbb43b63b0ce9da178767b09c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6216,
        "upload_time": "2022-01-28T15:56:06",
        "upload_time_iso_8601": "2022-01-28T15:56:06.460508Z",
        "url": "https://files.pythonhosted.org/packages/ce/c8/660a8a6248bac1e6b310826474f53a02a805708e97adb9dc9249f73c54b1/BusyBox-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cec8660a8a6248bac1e6b310826474f53a02a805708e97adb9dc9249f73c54b1",
        "md5": "ce6db9fbb43b63b0ce9da178767b09c5",
        "sha256": "1492e1c27b72ceea99165066672a69297315ea2dbbe2e87314c75d6aab276e05"
      },
      "downloads": -1,
      "filename": "BusyBox-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ce6db9fbb43b63b0ce9da178767b09c5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6216,
      "upload_time": "2022-01-28T15:56:06",
      "upload_time_iso_8601": "2022-01-28T15:56:06.460508Z",
      "url": "https://files.pythonhosted.org/packages/ce/c8/660a8a6248bac1e6b310826474f53a02a805708e97adb9dc9249f73c54b1/BusyBox-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}