{
  "info": {
    "author": "Jon",
    "author_email": "JonZakay@aol.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Helium Python Helper\n\nA helper module used across various Nebra repos to reduce redundant features.\n\nThis package is used in a number of Nebra software repos:\n- [hm-pktfwd](https://github.com/NebraLtd/hm-pktfwd/)\n- [hm-config](https://github.com/NebraLtd/hm-config/)\n- [hm-diag](https://github.com/NebraLtd/hm-diag/)\n- [hm-dashboard (private repo)](https://github.com/NebraLtd/hm-dashboard)\n- [Hotspot-Production-Tool (private repo)](https://github.com/NebraLtd/Hotspot-Production-Tool)\n\nThe package is available on PyPI and PyPI test repos:\n- [PyPI hm-pyhelper](https://pypi.org/project/hm-pyhelper)\n- [PyPI Test hm-pyhelper](https://test.pypi.org/project/hm-pyhelper)\n\n## Helium Hardware Definitions\n\n```python\nfrom hm_pyhelper.hardware_definitions import variant_definitions\n```\n\nThis repository contains the python file that contains a GPIO map for all of the different hardware combinations to be supported by the Nebra Helium Hotspot Software.\n\nAll numbers below are their GPIO / BCM Numbers, not physical pin numbers.\n\nNote: Light hotspot software will also work on all models listed as type \"full\".\n\n### Nebra Hotspots\n\n| Model | ENV Identifier | SPI Bus | Reset Pin | Status LED | Button |Type | Cellular | Notes |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| Nebra Indoor Hotspot Gen 1 | NEBHNT-IN1 | 1.2 | 38 | 25 | 26 | Full | False | CM3 based |\n| Nebra Outdoor Hotspot Gen 1 | NEBHNT-OUT1 | 1.2 | 38 | 25 | 24 | Full | True | CM3 based |\n| Nebra Pi 0 Light Hotspot S | NEBHNT-LGT-ZS | 1.2 | 22 | 24 | 23 | Light | False | SPI Based Ethernet |\n| Nebra Pi 0 Light Hotspot X | NEBHNT-LGT-ZX | 1.2 | 22 | 24 | 23 | Light | False | USB Based Ethernet |\n| Nebra Beaglebone Light Hotspot | NEBHNT-BBB | 1.0 | 60 | 31  | 30  | Light | False | In Planning |\n| Nebra Pocket Beagle Light Hotspot | NEBHNT-PBB | 1.0 | 60 | 31 | 30 | Light | False | In Planning |\n| Nebra Hotspot HAT ROCK Pi 4 Indoor | NEBHNT-HHRK4 | 32766.0 | 149 | 156 (Physical pin 18) | 154 (Physical pin 16) | Full | False | In Planning |\n| Nebra Hotspot HAT ROCK Pi 4 Outdoor | NEBHNT-HHRK4-OUT | 32766.0 | 149 | 156 (Physical pin 18) | 154 (Physical pin 16)| Full | True | In Planning |\n| Nebra Hotspot HAT RPi | NEBHNT-HHRPI | 0.0 | 22 | 24 | 23 | Full | False | Should be compatible with 3+ & 4 |\n| Nebra Hotspot HAT RPi LIGHT | NEBHNT-HHRPL | 0.0 | 22 | 24 | 23 | Light | False | Light is compatible with all 40 pin headers |\n| Nebra Hotspot HAT Tinkerboard 2 | NEBHNT-HHTK | 2.0 | 167 | 163 | 162 | Full | False | Light would be compatible on TK1 |\n\n### Third Party Hotspots\n\nWe may be adding in support for other vendor's hotspots to use our software soon. Here are the variables for those.\n\nThese would also depend on their SOCs being supported by Balena.\n\n| Model | SOC/SBC | ENV Identifier | SPI Bus | Reset Pin | Status LED | Button |Type | Cellular | Notes |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| Rak Hotspot Miner | BCM2711 (Pi4 2gb RAM)  | COMP-RAKHM | 0.0 | 17 | 20 | 21 | Full | False | Only Compatible with V2 hotspots with ECC Key. |\n| OG Helium Hotspot | BCM2711 (Pi4 2gb RAM) | COMP-HELIUM | 0.0 | 17 | 20 | 21 | Full | False |  |\n| Syncrobit Hotspot 1 (Pi) |  |  |  |  |   |   | Full | False |  |\n| Syncrobit Hotspot 2 (RK) |  |  |  |  |   |   | Full | False |  |\n| Bobcat Miner 300 |  |  |  |  |   |   | Full | False |  |\n| SenseCAP M1 | BCM2711 (Pi4 2gb RAM)  | COMP-SENSECAPM1 | 0.0 | 17 | 20 | 21 | Full | False |  |\n\n### DIY Hotspots\n\nThe following DIY options are also supported for light hotspot software only.\n\nPlease note, DIY Hotspots do not earn HNT.\n\n| Model | SOC/SBC | ENV Identifier | SPI Bus | Reset Pin | Status LED | Button |Type | Cellular | Notes |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| Pi Supply IoT LoRa Gateway HAT | RPi | DIY-PISLGH | 0.0 | 22 |   |   | Light | False | Any pi with 40 pin header |\n| RAK2287 | RPi | DIY-RAK2287 | 0.0 | 17 |   |   | Light | False | Any pi with 40 pin header |\n\n## hardware_definitions\n\n### variant_definitions\n\nA dictionary of all known Nebra hotspot variants.\nNot all variants are fully supported.\n\n### get_variant_attribute(variant_name, variant_attribute)\n\nReturns the value of an attribute from a specific variant.\nRaises UnknownVariantException and UnknownVariantAttributeException if invalid params supplied.\n\n## logger\n\n```python\nfrom hm_pyhelper.logger import get_logger\nLOGGER = get_logger(__name__)\nLOGGER.debug(\"message to log\")\n```\n\n## miner_param\n\n### retry_get_region(region_override, region_filepath)\nReturn the region from envvar region_override or\nfrom the contents of region_filepath\n\n```python\nfrom hm_pyhelper.miner_param import retry_get_region\nprint(retry_get_region(\"US915\", \"/invalid/path\"))\n# US915\n\n# echo \"EU868\" > /var/pktfwd/region\nprint(retry_get_region(\"\", \"/var/pktfwd/region\"))\n# EU868\n```\n\n## gateway-mfr-rs (gateway_mfr)\n\nThis helper module brings in the armv6 build of [gateway-mfr-rs (gateway_mfr)](https://github.com/helium/gateway-mfr-rs) which allows us to program the ECC secure element chips in production.\n\nWe have a GitHub action in this repo called [update-gateway-mfr-rs.yml](https://github.com/NebraLtd/hm-pyhelper/blob/master/.github/workflows/update-gateway-mfr-rs.yml) which checks the upstream repo for updated release versions every Sunday at midnight and if a new release is found it triggers a new PR in this repo to update the version number. This action also can be triggered on `workflow_dispatch:` meaning you can also manually trigger it from the [actions tab](https://github.com/NebraLtd/hm-pyhelper/actions).\n\n## LockSingleton\n`LockSingleton` prevents the concurrent access to a resource across threads.\n\n### Methods\n\n**LockSingleton()**\n\nCreates a new `LockSingleton` object.\n  \n**acquire(timeout = DEFAULT_TIMEOUT)**\n\nWaits until the resource is available. DEFAULT_TIMEOUT = 2 seconds \n \n**release()**\n\nRelease the resource.\n\n**locked()**\n\nCheck if there is an available resource.\n\n### Usage\n```\nlock = LockSingleton()\n\ntry:\n    # try to acquire the resource or may raise an exception\n    lock.acquire()\n\n    # do some work\n    print(\"Starting work...\")\n    sleep(5)\n    print(\"Finished work!\")\n\n    # release the resource\n    lock.release()\nexcept ResourceBusyError:\n    print(\"The resource is busy now.\")\n```\n\n### `@lock_ecc` decorator\n`@lock_ecc(timeout=DEFAULT_TIMEOUT, raise_resource_busy_exception=True):`\n\nThis is the convenient decorator wrapping around the `LockSingleton`.\n  - timeout: timeout value. DEFAULT_TIMEOUT = 2 seconds.\n  - raise_resource_busy_exception: set True to raise exception in case of timeout or some error, otherwise just log the error msg\n\nUsage\n```\n@lock_ecc()\ndef run_gateway_mfr():\n    return subprocess.run(\n        [gateway_mfr_path, \"key\", \"0\"],\n        capture_output=True,\n        check=True\n    )\n\ngateway_mfr_result = run_gateway_mfr()\nlog_stdout_stderr(gateway_mfr_result)\n```\n\n## Testing\n\nTo run tests:\n\n```bash\npip install -r requirements.txt\npip install -r test-requirements.txt\nPYTHONPATH=./ pytest\n```\n\n## Referencing a branch for development\nIt is sometimes convenient to use recent changes in hm-pyhelper before an official release.\nTo do so, first double check that you've added any relevant dependencies to\nthe `install_requires` section of `setup.py`. Then add the following lines to the\nproject's Dockerfile.\n\n```Dockerfile\nRUN pip3 install setuptools wheel\nRUN pip3 install --target=\"$OUTPUTS_DIR\" git+https://github.com/NebraLtd/hm-pyhelper@BRANCH_NAME\n``````\n\n## Releasing\n\nTo release, use the [Github new release flow](https://github.com/NebraLtd/hm-pyhelper/releases/new).\n\n1. Create a new tag in format `vX.Y.Z`. You can use a previously tagged commit, but this is not necessary.\n2. Make sure the tag you created matches the value in setup.py.\n3. Select `master` as the target branch. If you do not select the master branch, the tag should be in format `vX.Y.Z-rc.N`.\n4. Title: `Release vX.Y.Z`.\n5. Body:\n\n**Note: you can create the release notes automatically by selecting the \"Auto-generate release notes\" option on the releases page.**\n\n```\n## What's Changed\n* Foo\n* Bar\n\n**Full Changelog**: https://github.com/NebraLtd/hm-pyhelper/compare/v0.0.A...v0.0.Z\n```\n\n### Release strategy\n\nThe automated GitHub Actions in this repo do the following:\n- all pushes / PRs, regardless of branch, trigger a build of the wheels and python package which are released as build artifacts ([see below section](#test-release-artifacts))\n- pushes to master with an updated version number in `setup.py` are pushed to Test PyPI as well as being uploaded as build artifacts (note that if the version number isn't properly updated and is a duplicate of a previous one then the push to Test PyPI will fail)\n- any tagged releases on master branch ([see releasing process above](#releasing)) are built and published to PyPI as well as being uploaded as build artifacts\n\n### Test release artifacts\n\nNote that artifacts (wheels and source) are uploaded to the GitHub Actions artifacts even when the build fails or isn't pushed to PyPI/Test PyPI due to not being on the master branch.\n\nFor example, [this failed build](https://github.com/NebraLtd/hm-pyhelper/actions/runs/1369814396), has artifacts uploaded [here](https://github.com/NebraLtd/hm-pyhelper/suites/4125934376/artifacts/105569066).\n\nThese artifacts can be useful for testing releases without needing to bump version numbers.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jonzky/hm-pyhelper",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "forked-hm-diag",
    "package_url": "https://pypi.org/project/forked-hm-diag/",
    "platform": "",
    "project_url": "https://pypi.org/project/forked-hm-diag/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jonzky/hm-pyhelper/issues",
      "Homepage": "https://github.com/jonzky/hm-pyhelper"
    },
    "release_url": "https://pypi.org/project/forked-hm-diag/0.13.0/",
    "requires_dist": [
      "requests (>=2.26.0)",
      "jsonrpcclient (==3.3.6)",
      "retry (==0.9.2)"
    ],
    "requires_python": "",
    "summary": "Helium Python Helper",
    "version": "0.13.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12554965,
  "releases": {
    "0.13.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf312dfca599b538e45fa850d2941ea3fd82831ff22d64e4e9b5d5052aa73203",
          "md5": "be97466d3552e1435324afc09c50c4ca",
          "sha256": "965c89f7c1277cb401b46df7f7fda2a2f89be30617d2114d8b645def4bdaeda2"
        },
        "downloads": -1,
        "filename": "forked_hm_diag-0.13.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be97466d3552e1435324afc09c50c4ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1450430,
        "upload_time": "2022-01-12T21:44:18",
        "upload_time_iso_8601": "2022-01-12T21:44:18.300965Z",
        "url": "https://files.pythonhosted.org/packages/cf/31/2dfca599b538e45fa850d2941ea3fd82831ff22d64e4e9b5d5052aa73203/forked_hm_diag-0.13.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6844f5287484f9e64a8fe4b1d92063b5ec6b8b29184ccce3f1d0d3a628cd8b56",
          "md5": "4eb1803000bbd020c86f99dff3916b50",
          "sha256": "39adcd6450510e4c9b4cd1667a1c10299175df201f2e2a08dd33e320681ba6a4"
        },
        "downloads": -1,
        "filename": "forked_hm-diag-0.13.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4eb1803000bbd020c86f99dff3916b50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1436628,
        "upload_time": "2022-01-12T21:44:20",
        "upload_time_iso_8601": "2022-01-12T21:44:20.223619Z",
        "url": "https://files.pythonhosted.org/packages/68/44/f5287484f9e64a8fe4b1d92063b5ec6b8b29184ccce3f1d0d3a628cd8b56/forked_hm-diag-0.13.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf312dfca599b538e45fa850d2941ea3fd82831ff22d64e4e9b5d5052aa73203",
        "md5": "be97466d3552e1435324afc09c50c4ca",
        "sha256": "965c89f7c1277cb401b46df7f7fda2a2f89be30617d2114d8b645def4bdaeda2"
      },
      "downloads": -1,
      "filename": "forked_hm_diag-0.13.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "be97466d3552e1435324afc09c50c4ca",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 1450430,
      "upload_time": "2022-01-12T21:44:18",
      "upload_time_iso_8601": "2022-01-12T21:44:18.300965Z",
      "url": "https://files.pythonhosted.org/packages/cf/31/2dfca599b538e45fa850d2941ea3fd82831ff22d64e4e9b5d5052aa73203/forked_hm_diag-0.13.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6844f5287484f9e64a8fe4b1d92063b5ec6b8b29184ccce3f1d0d3a628cd8b56",
        "md5": "4eb1803000bbd020c86f99dff3916b50",
        "sha256": "39adcd6450510e4c9b4cd1667a1c10299175df201f2e2a08dd33e320681ba6a4"
      },
      "downloads": -1,
      "filename": "forked_hm-diag-0.13.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4eb1803000bbd020c86f99dff3916b50",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1436628,
      "upload_time": "2022-01-12T21:44:20",
      "upload_time_iso_8601": "2022-01-12T21:44:20.223619Z",
      "url": "https://files.pythonhosted.org/packages/68/44/f5287484f9e64a8fe4b1d92063b5ec6b8b29184ccce3f1d0d3a628cd8b56/forked_hm-diag-0.13.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}