{
  "info": {
    "author": "Sermet Pekin",
    "author_email": "sermet.pekin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![Python package](https://github.com/SermetPekin/comply-repo/actions/workflows/python-package.yml/badge.svg)](https://github.com/SermetPekin/comply-repo/actions/workflows/python-package.yml) [![PyPI](https://img.shields.io/pypi/v/comply)](https://img.shields.io/pypi/v/comply) [![Supported Python Versions](https://img.shields.io/pypi/pyversions/comply)](https://pypi.org/project/comply/) [![Downloads](https://pepy.tech/badge/comply/week)](https://pepy.tech/project/comply)\n\n# comply\n\n    from comply import check\n\n### checks if user's python version is compatible with your project\n\n    def check(\n            min_version: str,\n            max_version: str,\n            min_msg: t.Union[str, t.Callable] = default_min_msg,\n            max_msg: t.Union[str, t.Callable] = default_max_msg,\n            complyible_msg: t.Union[str, t.Callable] = default_comply_msg,\n            verbose: bool = True,\n            mock_sys_version: t.Union[str, bool] = False, # for test purposes\n    \n    ):\n\n\n###  Use case 1 : main file on your project to continue or stop running \n>  you may use it on the main file of your project \n> and create a conditional and decide what to do next \n\n    if check(\n            min_version=\"3.7\",\n            max_version=\"3.11\",\n            min_msg=\"Your version is less than minimum.\",\n            verbose=True,\n\n        ) is False : \n            sys.exit(0) # return # or just exit\n    # if user's python has a version of lets say 3.4 this will print your customized message and exit.\n\n\n> just warn the user and continue\n\n    if check(\n            min_version=\"3.7\",\n            max_version=\"3.10\",\n            min_msg=\"Your version is less than minimum.\",\n            max_msg=\"Your version is greater than the minimum.\",\n            verbose=True,\n\n        ) is False : \n            pass   \n    # if user's machine has a python with version of \n    # lets say 3.4 this will print your customized message and continue .\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "comply",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "comply",
    "package_url": "https://pypi.org/project/comply/",
    "platform": null,
    "project_url": "https://pypi.org/project/comply/",
    "project_urls": {
      "Documentation": "https://github.com/SermetPekin/comply-repo",
      "Homepage": "https://github.com/SermetPekin/comply-repo"
    },
    "release_url": "https://pypi.org/project/comply/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7.*, <=3.10.*",
    "summary": "Provides functions to check your package's users's python version and shows message to your users continues or stops or accepts callbacks depending your choice.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15589273,
  "releases": {
    "0.0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeb5025641a8903122120142f7ad87810f7f11bdbc051bb7efc8a61763e5840c",
          "md5": "fe74c8bc35b3f3a77e59b6b78bcc7639",
          "sha256": "752e78b1f4dbffe06eb296d87e616b862bc6669fc497e1adf4081d46a5b5dbb0"
        },
        "downloads": -1,
        "filename": "comply-0.0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe74c8bc35b3f3a77e59b6b78bcc7639",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7535,
        "upload_time": "2022-10-29T10:43:16",
        "upload_time_iso_8601": "2022-10-29T10:43:16.256290Z",
        "url": "https://files.pythonhosted.org/packages/ae/b5/025641a8903122120142f7ad87810f7f11bdbc051bb7efc8a61763e5840c/comply-0.0.0.2-py2.py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f4ee3fec88efed1a941824e2acad130cf80614435eb8e24a5699540576e63f4",
          "md5": "e2bbdbf5e344e8c392d267e0e0d6336a",
          "sha256": "a5ef614ff9d13b7292d879965f63edacf8e1584c574d4d5b78918a94bb05dd6e"
        },
        "downloads": -1,
        "filename": "comply-0.0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2bbdbf5e344e8c392d267e0e0d6336a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4762,
        "upload_time": "2022-10-29T11:48:00",
        "upload_time_iso_8601": "2022-10-29T11:48:00.475081Z",
        "url": "https://files.pythonhosted.org/packages/6f/4e/e3fec88efed1a941824e2acad130cf80614435eb8e24a5699540576e63f4/comply-0.0.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4accfe198b2719183df723448222f1e0f98261b3d677ac23efae35566ecb4e7",
          "md5": "85e79fba0600751ee60dbbdf58ac0b96",
          "sha256": "9ca76d5169116d482377f559585094f2fa30a8f95dc5511bd328aa7948a87649"
        },
        "downloads": -1,
        "filename": "comply-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85e79fba0600751ee60dbbdf58ac0b96",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4739,
        "upload_time": "2022-10-30T20:34:34",
        "upload_time_iso_8601": "2022-10-30T20:34:34.028675Z",
        "url": "https://files.pythonhosted.org/packages/b4/ac/cfe198b2719183df723448222f1e0f98261b3d677ac23efae35566ecb4e7/comply-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5c1c73f7b9b11c08ab994c753ca36bd1d10a3b3d2ee83890daa20d1371a7a4f",
          "md5": "8919f553c401bee7fa319d18a0d1394a",
          "sha256": "4bcdf54312ab35dde3ec28393ab575d1fa5b396926d9dc5033fe817eb090d049"
        },
        "downloads": -1,
        "filename": "comply-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8919f553c401bee7fa319d18a0d1394a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7.*, <=3.10.*",
        "size": 4766,
        "upload_time": "2022-10-30T20:49:07",
        "upload_time_iso_8601": "2022-10-30T20:49:07.632686Z",
        "url": "https://files.pythonhosted.org/packages/c5/c1/c73f7b9b11c08ab994c753ca36bd1d10a3b3d2ee83890daa20d1371a7a4f/comply-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5c1c73f7b9b11c08ab994c753ca36bd1d10a3b3d2ee83890daa20d1371a7a4f",
        "md5": "8919f553c401bee7fa319d18a0d1394a",
        "sha256": "4bcdf54312ab35dde3ec28393ab575d1fa5b396926d9dc5033fe817eb090d049"
      },
      "downloads": -1,
      "filename": "comply-0.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8919f553c401bee7fa319d18a0d1394a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7.*, <=3.10.*",
      "size": 4766,
      "upload_time": "2022-10-30T20:49:07",
      "upload_time_iso_8601": "2022-10-30T20:49:07.632686Z",
      "url": "https://files.pythonhosted.org/packages/c5/c1/c73f7b9b11c08ab994c753ca36bd1d10a3b3d2ee83890daa20d1371a7a4f/comply-0.0.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}