{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Pulumi Native Provider Template\n\nThis repository is a boilerplate showing how to create a native Pulumi provider using the [Pulumi Provider Framework](https://github.com/cloudy-sky-software/pulumi-provider-framework).\n\n### Background\n\nThis repository is part of the [guide for authoring and publishing a Pulumi Package](https://www.pulumi.com/docs/guides/pulumi-packages/how-to-author).\n\nLearn about the concepts behind [Pulumi Packages](https://www.pulumi.com/docs/guides/pulumi-packages/#pulumi-packages).\n\nFollow this link to see [an architecture diagram for Pulumi](https://www.pulumi.com/docs/intro/concepts/how-pulumi-works/#how-pulumi-works).\n\nA Pulumi Resource Provider:\n\n- is a gRPC server which allows for the Pulumi engine to create resources in a specific cloud\n- holds the lifecycle logic for these cloud resources\n- holds a pulumi JSON schema that describes the provider\n- provides language-specific SDKs so resources can be created in whichever language you prefer\n\nWhen we speak of a \"native\" provider, we mean that all implementation is native to Pulumi, as opposed\nto [Terraform based providers](https://github.com/pulumi/pulumi-tf-provider-boilerplate).\n\n## Authoring a Pulumi Native Provider\n\nThe following instructions assume that the provider is written for the Pulumi organisation.\nIn the future, we will add instruction for providers published and maintained by the Pulumi community, referred to as \"third-party\" providers.\n\nThis boilerplate creates a working Pulumi-owned provider named `scaleway-instances`.\nIt implements a random number generator that you can [build and test out for yourself](#test-against-the-example) and then replace the Random code with code specific to your provider.\n\n### Prerequisites\n\nEnsure the following tools are installed and present in your `$PATH`:\n\n- [`pulumictl`](https://github.com/pulumi/pulumictl#installation)\n- [Go 1.17](https://golang.org/dl/) or 1.latest\n- [NodeJS](https://nodejs.org/en/) 14.x. We recommend using [nvm](https://github.com/nvm-sh/nvm) to manage NodeJS installations.\n- [Yarn](https://yarnpkg.com/)\n- [TypeScript](https://www.typescriptlang.org/)\n- [Python](https://www.python.org/downloads/) (called as `python3`). For recent versions of MacOS, the system-installed version is fine.\n- [.NET](https://dotnet.microsoft.com/download)\n\n### Creating and Initializing the Repository\n\nPulumi offers this repository as a [GitHub template repository](https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-repository-from-a-template) for convenience. From this repository:\n\n1. Click \"Use this template\".\n1. Set the following options:\n   - Owner: pulumi\n   - Repository name: pulumi-scaleway-instances-native (replace \"scaleway-instances\" with the name of your provider)\n   - Description: Pulumi provider for scaleway-instances\n   - Repository type: Public\n1. Clone the generated repository.\n\nFrom the templated repository:\n\n1. Search-replace `scaleway-instances` with the name of your desired provider.\n\n#### Build the provider and install the plugin\n\n```bash\n$ make build install\n```\n\nThis will:\n\n1. Create the SDK codegen binary and place it in a `./bin` folder (gitignored)\n2. Create the provider binary and place it in the `./bin` folder (gitignored)\n3. Generate the dotnet, Go, Node, and Python SDKs and place them in the `./sdk` folder\n4. Install the provider on your machine.\n\n#### Test against the example\n\n```bash\n$ cd examples/simple\n$ yarn link @pulumi/scaleway-instances\n$ yarn install\n$ pulumi stack init test\n$ pulumi up\n```\n\nNow that you have completed all of the above steps, you have a working provider that generates a random string for you.\n\n#### A brief repository overview\n\nYou now have:\n\n1. A `provider/` folder containing the building and implementation logic\n   1. `cmd/`\n      1. `pulumi-gen-scaleway-instances/` - generates language SDKs from the schema\n      2. `pulumi-resource-scaleway-instances/` - holds the package schema, injects the package version, and starts the gRPC server\n   2. `pkg`\n      1. `provider` - holds the gRPC methods (and for now, the sample implementation logic) required by the Pulumi engine\n      2. `version` - semver package to be consumed by build processes\n2. `deployment-templates` - a set of files to help you around deployment and publication\n3. `sdk` - holds the generated code libraries created by `pulumi-gen-scaleway-instances/main.go`\n4. `examples` a folder of Pulumi programs to try locally and/or use in CI.\n5. A `Makefile` and this `README`.\n\n### Writing the schema\n\nThe [JSON schema file](https://www.pulumi.com/docs/guides/pulumi-packages/schema) is used by `pulumi-gen-scaleway-instances` to create language-specific SDKs.\nIt is, therefore, a central requirement for any resource provider.\nProvider schemas can be handwritten, or alternatively machine-generated by combining API specification with pulumi-specific logic.\n\nWhen writing the schema by hand, it is helpful to associate the JSON schema in your IDE for completion or Intellisense features to work:\n\n- Visual Studio Code: the easiest option is to [map the schema file](https://code.visualstudio.com/Docs/languages/json#_mapping-in-the-user-settings)\n  in your User Settings which enables it for all your provider projects:\n  ```json\n      \"json.schemas\": [\n        {\n            \"fileMatch\": [\n                \"/provider/cmd/pulumi-*/schema.json\"\n            ],\n            \"url\": \"https://raw.githubusercontent.com/pulumi/pulumi/master/pkg/codegen/schema/pulumi.json\"\n        }\n    ]\n  ```\n\nThis repository provides the [scaleway-instances example schema](./provider/cmd/pulumi-resource-scaleway-instances/schema.json) to get you started.  \n[The AWS Native Provider schema](https://github.com/pulumi/pulumi-aws-native/blob/master/provider/cmd/pulumi-resource-aws-native/schema.json) provides a much larger example.  \nRefer to the [package schema documentation](https://www.pulumi.com/docs/guides/pulumi-packages/schema/#pulumi-package-schema) for additional details when writing the schema.\n\n### Implementing the gRPC methods\n\nOnce you have a schema that describes all the resources and metadata for your provider, you will need to implement the desired gRPC methods.\nYou will find a mostly blank implementation of these in `pkg/provider/provider.go`.\nNote that these methods do not link 1:1 to the Pulumi CLI commands.\n\n#### Basic Functionality\n\nThe struct and creation of the provider are implemented already:\n\n```go\n// provider/pkg/provider.go\ntype scaleway-instancesProvider struct {\n\thost    *provider.HostClient\n\tname    string\n\tversion string\n\tschema  []byte\n}\n\nfunc makeProvider(host *provider.HostClient, name, version string, pulumiSchema []byte) (pulumirpc.ResourceProviderServer, error) {\n   // Return the new provider\n   return &scaleway-instancesProvider{\n   host:    host,\n   name:    name,\n   version: version,\n   schema:  pulumiSchema,\n   }, nil\n}\n```\n\nYou need to provide the following methods:\n\n1. Check - validates resource Inputs\n2. Diff - calculates the differences between the actual and the desired state of a resource\n3. Create - creates a new instance of a resource from an Input\n4. Update - updates a resource in-place (i.e. without deleting/recreating)\n5. Read - reads current inputs and state for a resource\n6. Delete - deletes a resource and its corresponding state\n\n[Resource lifecycle methods are documented here](https://pulumi-developer-docs.readthedocs.io/en/stable/providers/implementers-guide.html#custom-resource-lifecycle).\n\nThe following methods are necessary for every provider and are already implemented:\n\n1. GetPluginInfo - returns generic information about this plugin, like its version\n2. GetSchema - returns the Pulumi schema to the provider\n\n#### Additional Methods\n\nThe [resource provider service](https://github.com/pulumi/pulumi/blob/master/sdk/proto/provider.proto) includes a few more gRPC methods that you may need to implement and can read more about.\n\n### Build Examples\n\nCreate an example program using the resources defined in your provider, and place it in the `examples/` folder.\n\nYou can now repeat the steps for [build, install, and test](#test-against-the-example).\n\n## Documentation\n\nPlease [follow this guide to add documentation to your provider](https://www.pulumi.com/docs/guides/pulumi-packages/how-to-author/#write-documentation).\n\n## Configuring CI and releases\n\n1. Follow the instructions laid out in the [deployment templates](./deployment-templates/README-DEPLOYMENT.md).\n\n## References\n\nOther resources for learning about the Pulumi resource model:\n\n- [Pulumi Kubernetes provider](https://github.com/pulumi/pulumi-kubernetes/blob/master/provider/pkg/provider/provider.go)\n- [Pulumi Terraform Remote State provider](https://github.com/pulumi/pulumi-terraform/blob/master/provider/cmd/pulumi-resource-terraform/provider.go)\n- [Dynamic Providers](https://www.pulumi.com/docs/intro/concepts/programming-model/#dynamicproviders)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://cloudysky.software",
    "keywords": "pulumi scaleway-instances category/cloud kind/native",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pulumi-scaleway-instances",
    "package_url": "https://pypi.org/project/pulumi-scaleway-instances/",
    "platform": null,
    "project_url": "https://pypi.org/project/pulumi-scaleway-instances/",
    "project_urls": {
      "Homepage": "https://cloudysky.software",
      "Repository": "https://github.com/cloudy-sky-software/pulumi-scaleway-instances"
    },
    "release_url": "https://pypi.org/project/pulumi-scaleway-instances/0.0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Pulumi package for creating and managing Scaleway Instances resources.",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15752138,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a8638a010ea1e15185e462d5f621ae32c3602c84058725d260747528a98c916",
          "md5": "e38283ecffa98ffed3268a6c2d2bf0bc",
          "sha256": "b302bde455cc2ae8f4c86bc5fa46b706829045fe6d3c9afda39209feb75f3e51"
        },
        "downloads": -1,
        "filename": "pulumi_scaleway_instances-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e38283ecffa98ffed3268a6c2d2bf0bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 57403,
        "upload_time": "2022-11-12T01:45:11",
        "upload_time_iso_8601": "2022-11-12T01:45:11.755154Z",
        "url": "https://files.pythonhosted.org/packages/9a/86/38a010ea1e15185e462d5f621ae32c3602c84058725d260747528a98c916/pulumi_scaleway_instances-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd27d555fc4071d317f66d5501c2d3d3e431533bfc313fca5a2362f87b118903",
          "md5": "a0d65980a218f5e3428c10f649d5116f",
          "sha256": "88ba1b5990681c8d6def32357ae9ddef5851469e499fbd1226e0232957fbb0ae"
        },
        "downloads": -1,
        "filename": "pulumi_scaleway_instances-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a0d65980a218f5e3428c10f649d5116f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 57426,
        "upload_time": "2022-11-12T02:29:20",
        "upload_time_iso_8601": "2022-11-12T02:29:20.898353Z",
        "url": "https://files.pythonhosted.org/packages/fd/27/d555fc4071d317f66d5501c2d3d3e431533bfc313fca5a2362f87b118903/pulumi_scaleway_instances-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1910a8c05b6dc0d6f5f746ff6e20e3209168fbf4edde00635773f69b08868cfc",
          "md5": "b08409f23563c9510104d46b0b338269",
          "sha256": "42ebf2432b7b1e1c33d864e2c1059cd9e55cf6d48ed3c897b4258c788e60187d"
        },
        "downloads": -1,
        "filename": "pulumi_scaleway_instances-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b08409f23563c9510104d46b0b338269",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 57603,
        "upload_time": "2022-11-12T06:45:28",
        "upload_time_iso_8601": "2022-11-12T06:45:28.907530Z",
        "url": "https://files.pythonhosted.org/packages/19/10/a8c05b6dc0d6f5f746ff6e20e3209168fbf4edde00635773f69b08868cfc/pulumi_scaleway_instances-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c7c7f8c82a7af07545a73aa9fcad8b20ce282d5352c7d6906952d6998bf7808",
          "md5": "7d31e48dc43ca4aa678d39f796601c75",
          "sha256": "05859dd365a99d908ada5976358cdedcee637b021e69aba13b420af068ffa7cb"
        },
        "downloads": -1,
        "filename": "pulumi_scaleway_instances-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7d31e48dc43ca4aa678d39f796601c75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 57677,
        "upload_time": "2022-11-12T11:43:04",
        "upload_time_iso_8601": "2022-11-12T11:43:04.847551Z",
        "url": "https://files.pythonhosted.org/packages/2c/7c/7f8c82a7af07545a73aa9fcad8b20ce282d5352c7d6906952d6998bf7808/pulumi_scaleway_instances-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86dbb82437cc7d7289696f96d96c81380289efc68a5e17a18de5726fd08d222a",
          "md5": "4b7e1ec41f821f8ee4269eed6da00933",
          "sha256": "588d016c1af2a409d3e499ec768a01d78d052404aa04609c1ec13ca28937c962"
        },
        "downloads": -1,
        "filename": "pulumi_scaleway_instances-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "4b7e1ec41f821f8ee4269eed6da00933",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58248,
        "upload_time": "2022-11-13T16:52:43",
        "upload_time_iso_8601": "2022-11-13T16:52:43.265868Z",
        "url": "https://files.pythonhosted.org/packages/86/db/b82437cc7d7289696f96d96c81380289efc68a5e17a18de5726fd08d222a/pulumi_scaleway_instances-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86dbb82437cc7d7289696f96d96c81380289efc68a5e17a18de5726fd08d222a",
        "md5": "4b7e1ec41f821f8ee4269eed6da00933",
        "sha256": "588d016c1af2a409d3e499ec768a01d78d052404aa04609c1ec13ca28937c962"
      },
      "downloads": -1,
      "filename": "pulumi_scaleway_instances-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "4b7e1ec41f821f8ee4269eed6da00933",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 58248,
      "upload_time": "2022-11-13T16:52:43",
      "upload_time_iso_8601": "2022-11-13T16:52:43.265868Z",
      "url": "https://files.pythonhosted.org/packages/86/db/b82437cc7d7289696f96d96c81380289efc68a5e17a18de5726fd08d222a/pulumi_scaleway_instances-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}