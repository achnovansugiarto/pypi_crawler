{
  "info": {
    "author": "Peter Nardi",
    "author_email": "pete@nardi.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Education",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Education",
      "Topic :: Games/Entertainment :: Simulation"
    ],
    "description": "![GitHub](https://img.shields.io/github/license/geozeke/bcsim)\n![PyPI](https://img.shields.io/pypi/v/bcsim)\n![PyPI - Status](https://img.shields.io/pypi/status/bcsim)\n![GitHub last commit](https://img.shields.io/github/last-commit/geozeke/bcsim)\n![GitHub issues](https://img.shields.io/github/issues/geozeke/bcsim)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/bcsim)\n![GitHub repo size](https://img.shields.io/github/repo-size/geozeke/bcsim)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/bcsim)\n\n<br>\n\n<img src=\"https://github.com/geozeke/bcsim/blob/main/docs/logo.png?raw=true\" width=\"120\"/>\n\n# Ball Clock Simulator\n\n## A note to developers\n\nIf you're just using bcsim, then carry on!\n\nIf you're a developer looking to fork this repository and modify bcsim,\nthere are two important considerations:\n\n1. I used [poetry](https://python-poetry.org/) for dependency and publication\n   management when developing bcsim. Poetry is well behaved and if you're a\n   Python developer you should check it out. It installs itself in a virtual\n   environment, uninstalls cleanly and easily, and doesn't require `sudo` for\n   installation. To install poetry, run this command:\n\n   ```shell\n   curl -sSL https://install.python-poetry.org | python3 -\n   ```\n\n2. I've included a file called `global-gitignore.txt` which is a copy of the\n   `.gitignore` I placed in my home directory and configured globally for all\n   my development projects. The `global-gitignore.txt` file reflects my\n   development setup (for example using tools like vscode), but yours may be\n   different. Just cherry-pick any necessary elements from\n   `global-gitignore.txt` for your own use.\n\n   *Details on gitignore files are available on\n   [GitHub](https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files).*\n\n## Installation\n\nThe Ball Clock Simulator is lightweight, pure Python, with no third-party\ndependencies.\n\n```text\npip3 install bcsim  \n```\n\n## Usage\n\nTo display the help menu, run:\n\n```text\nbcsim -h\n```\n\n## Documentation\n\nSee: [Ball Clock API Documentation](https://geozeke.github.io/bcsim)\n\n## What Is A Ball Clock?\n\nStart with this [YouTube video](https://www.youtube.com/watch?v=F7K6GIBWPQw)\nthat describes exactly what a Ball Clock is. It gives you a good overview of\nhow it works.\n\n## What Does This Program Do?\n\nI have one of the clocks shown in the video (I also have one of [these\nclocks](https://www.idle-tyme.com/)).\n\nOne day, I was staring at it and I thought: *When the clock shows 1:00 and all\nthe balls are in the input tray (what I call the reservoir) they're in a\ncertain order. I wonder how long the clock has to run before the balls return\nto that same ordering again.*\n\nIt turns out I'm not even close to the first person to ask this question. The\n[Ball Clock Problem](http://www.chilton.com/~jimw/ballclk.html) has been\nrattling around the internet as at least as far back as 1995. Just go to\nGitHub, type \"Ball Clock\", and you'll get lots of hits. Like those simulations,\nmy program runs the clock and counts the number of days that pass until the\nballs all return to their original starting order in the reservoir.\n\n## How Is This Ball Clock Simulator Different?\n\nIt's written in Python.\n\nIn the [YouTube video](https://www.youtube.com/watch?v=F7K6GIBWPQw), starting\naround 2:10, you'll hear a description of a little plastic lever (what I call\nthe \"cam\") that prevents the balls in the 5-min rail from colliding with the\nballs in the hr-rail when the clock strikes 1:00. The physical clock would have\nissues if that cam were not present, but there's no need for it in a virtual\nclock. I've been able to reproduce the results of others, which assume the cam\nis not present, but the combinatorics are radically different when the cam is\nthere. In that regard my simulation is a little unique.\n\nBesides choosing to model the cam, I noticed another variation on how some\nother simulators assume the clock mechanics work.\n\nThere seems to broad consensus about how the clock mechanics work until you go\nfrom 12:59 to 1:00. All the other simulators I've seen assume that the last\nball to drop between 12:59 and 1:00 comes back into the reservoir last. After\nobserving my own clock carefully and stepping through the YouTube video, I feel\nconfident that the last ball to drop between 12:59 and 1:00 actually cycles\nback to the reservoir just ***before*** the balls in the hour rail. To see what\nI mean, set the playback speed on [the\nvideo]((https://www.youtube.com/watch?v=F7K6GIBWPQw)) to 0.25x, advance it to\nthe 4:00 mark, and press play. I found it fascinating that this one little\ndifference also had a massive effect on the simulation results.\n\nThe simulator allows you to concurrently run different scenarios from 27 (the\nminimum number of balls required to run the clock) up to 1,000 balls, and you\ncan save your results to a csv file for later analysis. It uses multiprocessing\nto concurrently cycle *n* clocks at a time, where *n* is the number of\navailable CPUs on your computer. In addition to utilizing multiprocessing, the\nsimulator takes advantage of a unique repeating pattern to further speed up\ncalculations.\n\nAt each 12-hr interval, all the balls in the clock are in the reservoir. If you\nstart with a fresh clock and brute-force cycle it for 720 minutes (12-hrs),\nthen you get what I call a permutation vector in the reservoir. You can now\ntreat each ball number in the reservoir as an index (position) for the movement\nof the balls every 12-hrs.\n\nFor example: if cycling a fresh clock 12-hrs results in ball #10 ending up in\nposition #2, that means every 12-hrs the ball in position #10 will migrate to\nposition #2. Using two Python lists, we can now cycle the clock for 12-hrs each\n\"tick\", rather then 1-minute for each \"tick\". The speed gains in clock cycling\nare dramatic.\n\nI also found that several clocks will cycle back to the initial condition in a\nfractional number of days -- 18.5 days in the case of a clock with 38 balls.\nThis may have something to do with the way I've modeled the clock mechanics,\nbut I couldn't find another solution to the Ball Clock problem that cycled a\ngiven clock on the 12-hr boundary; they all cycled for a whole number of days.\n\n## Peer(less) Review\n\nWriting this simulator gave me some great practice with Python programming\ntopics: argument parsing, classes, multiprocessing, inter-process\ncommunication, queues and project packaging (pypi). While not required to use\nthe program, I also included detailed API documentation for those who are\ninterested.\n\nIt's not really practical to validate my assumptions using a physical clock --\nin some cases it takes billions of simulated days to cycle back to the starting\nposition. I would love it if someone coded this up independently, using the\nsame clock mechanics I describe, and validated or invalidated the program's\nresults.\n\n## Version History\n\n* 1.0.6 (2022-10-23)\n  * Migrated dependency/build management to [poetry](https://python-poetry.org/).<br><br>\n* 1.0.5 (2022-01-17)\n  * Code/documentation linting and cleanup.<br><br>\n* 1.0.4 (2022-01-09)\n  * Fixed a display glitch in the window that counts the number of clocks in\n    queue.<br><br>\n* 1.0.3 (2022-01-03)\n  * Adjusted display width to support counting days with up to three digits in\n    the trillions column: 999,999,999,999,999.<br><br>\n* 1.0.2 (2021-12-23)\n  * Documentation cleanup.\n  * Added site logo to README.md file.<br><br>\n* 1.0.1 (2021-12-13)\n  * Initial release\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "bcsim,rolling,ball,clock,simulator",
    "license": "MIT",
    "maintainer": "Peter Nardi",
    "maintainer_email": "pete@nardi.com",
    "name": "bcsim",
    "package_url": "https://pypi.org/project/bcsim/",
    "platform": null,
    "project_url": "https://pypi.org/project/bcsim/",
    "project_urls": {
      "Bug Tracker": "https://github.com/geozeke/bcsim/issues",
      "Documentation": "https://geozeke.github.io/bcsim",
      "Source Code": "https://github.com/geozeke/bcsim"
    },
    "release_url": "https://pypi.org/project/bcsim/1.0.6/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "Rolling Ball Clock Simulator",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15501513,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1baa61b93db7fcded440ba2dd58083eb363da2a9e3d9f7717503275c5d336722",
          "md5": "c8c489f0f4292e3d3c59cd9ff3f96799",
          "sha256": "e56943ba63025a82157c008dc5bdf89f854fae422d1dd6326d13b5f1fae13553"
        },
        "downloads": -1,
        "filename": "bcsim-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8c489f0f4292e3d3c59cd9ff3f96799",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12614,
        "upload_time": "2021-12-13T22:44:29",
        "upload_time_iso_8601": "2021-12-13T22:44:29.712484Z",
        "url": "https://files.pythonhosted.org/packages/1b/aa/61b93db7fcded440ba2dd58083eb363da2a9e3d9f7717503275c5d336722/bcsim-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a1a937782aaab36e344810dd4925fd5c760bd8fb4274121e9ee2955223112aa",
          "md5": "3196f82340f2a9daccfa797c75eda9cb",
          "sha256": "c0b20ea2aaac810d7d4f3b766948a08a29ad4a1a85a1764802fbe3c7eef87e2f"
        },
        "downloads": -1,
        "filename": "bcsim-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3196f82340f2a9daccfa797c75eda9cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13721,
        "upload_time": "2021-12-13T22:44:32",
        "upload_time_iso_8601": "2021-12-13T22:44:32.186357Z",
        "url": "https://files.pythonhosted.org/packages/5a/1a/937782aaab36e344810dd4925fd5c760bd8fb4274121e9ee2955223112aa/bcsim-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bde8adaf31cae4491f0f96ae3ff51190714f331c61681c7591bf7409715b3e3b",
          "md5": "5e004a88e7437b95d469c810ad5d1f94",
          "sha256": "209292c847da3fa1b6c15259123d2691ed29a25ac2feded53a916cbefa6bc464"
        },
        "downloads": -1,
        "filename": "bcsim-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e004a88e7437b95d469c810ad5d1f94",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12713,
        "upload_time": "2021-12-23T15:51:28",
        "upload_time_iso_8601": "2021-12-23T15:51:28.069323Z",
        "url": "https://files.pythonhosted.org/packages/bd/e8/adaf31cae4491f0f96ae3ff51190714f331c61681c7591bf7409715b3e3b/bcsim-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "747929ebdaa4e7668e18740e24e4ab489ff88a679320af793c26c505418c20aa",
          "md5": "f2766f1f9f5b58889160a1de422e0377",
          "sha256": "d45be300816e861b311a679b82c320eaf44efe70514c64e7b2df3cad0773958e"
        },
        "downloads": -1,
        "filename": "bcsim-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f2766f1f9f5b58889160a1de422e0377",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13905,
        "upload_time": "2021-12-23T15:51:29",
        "upload_time_iso_8601": "2021-12-23T15:51:29.462461Z",
        "url": "https://files.pythonhosted.org/packages/74/79/29ebdaa4e7668e18740e24e4ab489ff88a679320af793c26c505418c20aa/bcsim-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5db02d20140a3fedee8a27e5ce97a63e723a2ff58d9580da937a9b719d0dde27",
          "md5": "7587b2fe9ed276eb03eb682ea171bd79",
          "sha256": "33cd557160d34aee2b7d86bebe1e2a9748176729e73279b27637206e77d2e424"
        },
        "downloads": -1,
        "filename": "bcsim-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7587b2fe9ed276eb03eb682ea171bd79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12780,
        "upload_time": "2022-01-03T23:43:40",
        "upload_time_iso_8601": "2022-01-03T23:43:40.895001Z",
        "url": "https://files.pythonhosted.org/packages/5d/b0/2d20140a3fedee8a27e5ce97a63e723a2ff58d9580da937a9b719d0dde27/bcsim-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a8cb7209458ad91ad043de1f26084c8444fd42587eeb8e1a5102591db465d3e",
          "md5": "0a22a8bb37a02656647182e2e62b47d7",
          "sha256": "097382e5674f78e0a7152cbbe376ee2f08fe1109a679d8d65b3fa0cde8e5fc04"
        },
        "downloads": -1,
        "filename": "bcsim-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0a22a8bb37a02656647182e2e62b47d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14032,
        "upload_time": "2022-01-03T23:43:42",
        "upload_time_iso_8601": "2022-01-03T23:43:42.172226Z",
        "url": "https://files.pythonhosted.org/packages/8a/8c/b7209458ad91ad043de1f26084c8444fd42587eeb8e1a5102591db465d3e/bcsim-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "386becd4a526d3360f1044e596c6c7560b03239b83e4ea4d91ea48cd45c3eb49",
          "md5": "0130e29d7570cf275257f146815a7d08",
          "sha256": "368038cc64c3490f8c8fdb415117620a0e7e8e500f8638dd56cb9348d320cdd5"
        },
        "downloads": -1,
        "filename": "bcsim-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0130e29d7570cf275257f146815a7d08",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12812,
        "upload_time": "2022-01-09T13:17:31",
        "upload_time_iso_8601": "2022-01-09T13:17:31.666924Z",
        "url": "https://files.pythonhosted.org/packages/38/6b/ecd4a526d3360f1044e596c6c7560b03239b83e4ea4d91ea48cd45c3eb49/bcsim-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2dfe6ea529b932770368b09e8c7ddca31214f77a44ff9d4b821426b9d4564192",
          "md5": "419d7d29214417f42c2345e0b8585fea",
          "sha256": "9e5297b9bfeb9e4e6c9d9820b710d13427b23b6af4edec224529834706e20a67"
        },
        "downloads": -1,
        "filename": "bcsim-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "419d7d29214417f42c2345e0b8585fea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14092,
        "upload_time": "2022-01-09T13:17:32",
        "upload_time_iso_8601": "2022-01-09T13:17:32.977332Z",
        "url": "https://files.pythonhosted.org/packages/2d/fe/6ea529b932770368b09e8c7ddca31214f77a44ff9d4b821426b9d4564192/bcsim-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4467aa123fdb8daf54311b7e37f4cc933c2ad1116be0d1fb29dc960ffd5ff8b6",
          "md5": "3c3ac46d0caf0b37b3cf8a3c3e15f2ac",
          "sha256": "b697ae1b73856f44bfb2213fcc838fca6b483662dbc58284dc938b972fdb7f2d"
        },
        "downloads": -1,
        "filename": "bcsim-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c3ac46d0caf0b37b3cf8a3c3e15f2ac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12939,
        "upload_time": "2022-01-17T15:46:12",
        "upload_time_iso_8601": "2022-01-17T15:46:12.962346Z",
        "url": "https://files.pythonhosted.org/packages/44/67/aa123fdb8daf54311b7e37f4cc933c2ad1116be0d1fb29dc960ffd5ff8b6/bcsim-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33aca2e5e292bdf79efd38ef19c1c22d37b991ec2a056312911070a6e7750fb7",
          "md5": "f864b74fc8e1592f1e20433b4e0b6949",
          "sha256": "e0c43653779b59d3f3cee398d0128c34c14e35869dc29b588d983330f0e5b23e"
        },
        "downloads": -1,
        "filename": "bcsim-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f864b74fc8e1592f1e20433b4e0b6949",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14212,
        "upload_time": "2022-01-17T15:46:14",
        "upload_time_iso_8601": "2022-01-17T15:46:14.616515Z",
        "url": "https://files.pythonhosted.org/packages/33/ac/a2e5e292bdf79efd38ef19c1c22d37b991ec2a056312911070a6e7750fb7/bcsim-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5834fedb7c1bdde6ff2499618e8b0ab3d83b49a10c41af519d936a7a1d5f1f76",
          "md5": "f89c201c44fe164669f3c8bc2004976b",
          "sha256": "0aa1173941417e007ba5853865af4b4887fe3029f4efabc133a2e432e1589152"
        },
        "downloads": -1,
        "filename": "bcsim-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f89c201c44fe164669f3c8bc2004976b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 13555,
        "upload_time": "2022-10-23T14:25:31",
        "upload_time_iso_8601": "2022-10-23T14:25:31.894813Z",
        "url": "https://files.pythonhosted.org/packages/58/34/fedb7c1bdde6ff2499618e8b0ab3d83b49a10c41af519d936a7a1d5f1f76/bcsim-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "797b7e715d25933f5eacd487098877ce54f7e2e0225d3d8f02d45830b0f7a68b",
          "md5": "b1f1523fcea28bdcc49591d9283bf80e",
          "sha256": "cc98bcd603057849da7b2d12ee01b11cb8d9c1c8d57115b160e082e4685f2d17"
        },
        "downloads": -1,
        "filename": "bcsim-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b1f1523fcea28bdcc49591d9283bf80e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 15415,
        "upload_time": "2022-10-23T14:25:33",
        "upload_time_iso_8601": "2022-10-23T14:25:33.078271Z",
        "url": "https://files.pythonhosted.org/packages/79/7b/7e715d25933f5eacd487098877ce54f7e2e0225d3d8f02d45830b0f7a68b/bcsim-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5834fedb7c1bdde6ff2499618e8b0ab3d83b49a10c41af519d936a7a1d5f1f76",
        "md5": "f89c201c44fe164669f3c8bc2004976b",
        "sha256": "0aa1173941417e007ba5853865af4b4887fe3029f4efabc133a2e432e1589152"
      },
      "downloads": -1,
      "filename": "bcsim-1.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f89c201c44fe164669f3c8bc2004976b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 13555,
      "upload_time": "2022-10-23T14:25:31",
      "upload_time_iso_8601": "2022-10-23T14:25:31.894813Z",
      "url": "https://files.pythonhosted.org/packages/58/34/fedb7c1bdde6ff2499618e8b0ab3d83b49a10c41af519d936a7a1d5f1f76/bcsim-1.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "797b7e715d25933f5eacd487098877ce54f7e2e0225d3d8f02d45830b0f7a68b",
        "md5": "b1f1523fcea28bdcc49591d9283bf80e",
        "sha256": "cc98bcd603057849da7b2d12ee01b11cb8d9c1c8d57115b160e082e4685f2d17"
      },
      "downloads": -1,
      "filename": "bcsim-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "b1f1523fcea28bdcc49591d9283bf80e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 15415,
      "upload_time": "2022-10-23T14:25:33",
      "upload_time_iso_8601": "2022-10-23T14:25:33.078271Z",
      "url": "https://files.pythonhosted.org/packages/79/7b/7e715d25933f5eacd487098877ce54f7e2e0225d3d8f02d45830b0f7a68b/bcsim-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}