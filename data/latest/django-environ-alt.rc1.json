{
  "info": {
    "author": "joke2k, yzdann",
    "author_email": "daniele.faraglia@gmail.com, yzdannn@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Framework :: Django :: 2.0",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "Django-environ\n==============\n\n|pypi| |unix_build| |windows_build| |coverage| |contributors| |license| |say_thanks|\n\n**django-environ** allows you to use `Twelve-factor methodology`_ to configure your Django application with environment variables.\n\n|cover|\n\n.. _settings.py:\n\n.. code-block:: python\n\n    import environ\n    env = environ.Env(\n        # set casting, default value\n        DEBUG=(bool, False)\n    )\n    # reading .env file\n    environ.Env.read_env()\n\n    # False if not in os.environ\n    DEBUG = env('DEBUG')\n\n    # Raises django's ImproperlyConfigured exception if SECRET_KEY not in os.environ\n    SECRET_KEY = env('SECRET_KEY')\n\n    # Parse database connection url strings like psql://user:pass@127.0.0.1:8458/db\n    DATABASES = {\n        # read os.environ['DATABASE_URL'] and raises ImproperlyConfigured exception if not found\n        'default': env.db(),\n        # read os.environ['SQLITE_URL']\n        'extra': env.db('SQLITE_URL', default='sqlite:////tmp/my-tmp-sqlite.db')\n    }\n\n    CACHES = {\n        # read os.environ['CACHE_URL'] and raises ImproperlyConfigured exception if not found\n        'default': env.cache(),\n        # read os.environ['REDIS_URL']\n        'redis': env.cache('REDIS_URL')\n    }\n\nSee the `similar code, sans django-environ <https://gist.github.com/joke2k/cc30ed2d5ccda52d5b551ccbc17e536b>`_.\n\n::\n\n         _ _                                              _\n        | (_)                                            (_)\n      __| |_  __ _ _ __   __ _  ___ ______ ___ _ ____   ___ _ __ ___  _ __\n     / _` | |/ _` | '_ \\ / _` |/ _ \\______/ _ \\ '_ \\ \\ / / | '__/ _ \\| '_ \\\n    | (_| | | (_| | | | | (_| | (_) |    |  __/ | | \\ V /| | | | (_) | | | |\n     \\__,_| |\\__,_|_| |_|\\__, |\\___/      \\___|_| |_|\\_/ |_|_|  \\___/|_| |_|\n         _/ |             __/ |\n        |__/             |___/\n\n\nThe idea of this package is to unify a lot of packages that make the same stuff:\nTake a string from ``os.environ``, parse and cast it to some of useful python typed variables.\nTo do that and to use the `12factor`_ approach, some connection strings are expressed as url,\nso this package can parse it and return a ``urllib.parse.ParseResult``.\nThese strings from ``os.environ`` are loaded from a `.env` file and filled in ``os.environ`` with ``setdefault`` method,\nto avoid to overwrite the real environ.\nA similar approach is used in `Two Scoops of Django`_ book and explained in `12factor-django`_ article.\n\nUsing django-environ you can stop to make a lot of unversioned ``settings_*.py`` to configure your app.\nSee `cookiecutter-django`_ for a concrete example on using with a django project.\n\nFeature Support\n---------------\n- Fast and easy multi environment for deploy\n- Fill ``os.environ`` with .env file variables\n- Variables casting (see supported_types_ below)\n- Url variables exploded to django specific package settings\n\nDjango-environ officially supports Django 1.8 ~ 2.0.\n\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    $ pip install django-environ\n\n*NOTE: No need to add it to INSTALLED_APPS.*\n\n\nThen create a ``.env`` file:\n\n.. code-block:: bash\n\n    DEBUG=on\n    SECRET_KEY=your-secret-key\n    DATABASE_URL=psql://urser:un-githubbedpassword@127.0.0.1:8458/database\n    SQLITE_URL=sqlite:///my-local-sqlite.db\n    CACHE_URL=memcache://127.0.0.1:11211,127.0.0.1:11212,127.0.0.1:11213\n    REDIS_URL=rediscache://127.0.0.1:6379/1?client_class=django_redis.client.DefaultClient&password=ungithubbed-secret\n\nAnd use it with `settings.py`_ above.\nDon't forget to add ``.env`` in your ``.gitignore`` (tip: add ``.env.example`` with a template of your variables).\n\nDocumentation\n-------------\n\nDocumentation is available at `RTFD <http://django-environ.rtfd.io/>`_.\n\n.. _supported_types:\n\nSupported types\n---------------\n\n- str\n- bool\n- int\n- float\n- json\n- list (FOO=a,b,c)\n- tuple (FOO=(a,b,c))\n- dict (BAR=key=val,foo=bar) #environ.Env(BAR=(dict, {}))\n- dict (BAR=key=val;foo=1.1;baz=True) #environ.Env(BAR=(dict(value=unicode, cast=dict(foo=float,baz=bool)), {}))\n- url\n- path (environ.Path)\n- db_url\n    -  PostgreSQL: postgres://, pgsql://, psql:// or postgresql://\n    -  PostGIS: postgis://\n    -  MySQL: mysql:// or mysql2://\n    -  MySQL for GeoDjango: mysqlgis://\n    -  SQLITE: sqlite://\n    -  SQLITE with SPATIALITE for GeoDjango: spatialite://\n    -  Oracle: oracle://\n    -  MSSQL: mssql://\n    -  PyODBC: pyodbc://\n    -  Redshift: redshift://\n    -  LDAP: ldap://\n- cache_url\n    -  Database: dbcache://\n    -  Dummy: dummycache://\n    -  File: filecache://\n    -  Memory: locmemcache://\n    -  Memcached: memcache://\n    -  Python memory: pymemcache://\n    -  Redis: rediscache://\n- search_url\n    - ElasticSearch: elasticsearch://\n    - Solr: solr://\n    - Whoosh: whoosh://\n    - Xapian: xapian://\n    - Simple cache: simple://\n- email_url\n    - SMTP: smtp://\n    - SMTP+SSL: smtp+ssl://\n    - SMTP+TLS: smtp+tls://\n    - Console mail: consolemail://\n    - File mail: filemail://\n    - LocMem mail: memorymail://\n    - Dummy mail: dummymail://\n\nTips\n----\n\nUsing unsafe characters in URLs\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIn order to use unsafe characters you have to encode with ``urllib.parse.encode`` before you set into ``.env`` file.\n\n.. code-block:: bash\n\n    DATABASE_URL=mysql://user:%23password@127.0.0.1:3306/dbname\n\nSee https://perishablepress.com/stop-using-unsafe-characters-in-urls/ for reference.\n\nMultiple redis cache locations\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor redis cache, `multiple master/slave or shard locations <http://niwinz.github.io/django-redis/latest/#_pluggable_clients>`_ can be configured as follows:\n\n.. code-block:: bash\n\n    CACHE_URL='rediscache://master:6379,slave1:6379,slave2:6379/1'\n\nEmail settings\n~~~~~~~~~~~~~~\n\nIn order to set email configuration for django you can use this code:\n\n.. code-block:: python\n\n    EMAIL_CONFIG = env.email_url(\n        'EMAIL_URL', default='smtp://user@:password@localhost:25')\n\n    vars().update(EMAIL_CONFIG)\n\nSQLite urls\n~~~~~~~~~~~\n\nSQLite connects to file based databases. The same URL format is used, omitting the hostname,\nand using the \"file\" portion as the filename of the database.\nThis has the effect of four slashes being present for an absolute\n\nfile path: ``sqlite:////full/path/to/your/database/file.sqlite``.\n\nNested lists\n------------\n\nSome settings such as Django's ``ADMINS`` make use of nested lists. You can use something like this to handle similar cases.\n\n.. code-block:: python\n\n    # DJANGO_ADMINS=John:john@admin.com,Jane:jane@admin.com\n    ADMINS = [x.split(':') for x in env.list('DJANGO_ADMINS')] \n\n    # or use more specific function\n\n    from email.utils import getaddresses\n\n    # DJANGO_ADMINS=Full Name <email-with-name@example.com>,anotheremailwithoutname@example.com\n    ADMINS = getaddresses([env('DJANGO_ADMINS')])\n\nMultiline value\n---------------\n\nYou can set a multiline variable value:\n\n.. code-block:: python\n\n    # MULTILINE_TEXT=Hello\\\\nWorld\n    >>> print env.str('MULTILINE_TEXT', multiline=True)\n    Hello\n    World\n\n\nProxy value\n-----------\n\nYou can set a value prefixed by ``$`` to use as a proxy to another variable value:\n\n.. code-block:: python\n\n    # BAR=FOO\n    # PROXY=$BAR\n    >>> print env.str('PROXY')\n    FOO\n\nMultiple env files\n------------------\nIt is possible to have multiple env files and select one using environment variables.\n\n.. code-block:: python\n\n    env = environ.Env()\n    env.read_env(env.str('ENV_PATH', '.env'))\n\nNow ``ENV_PATH=other-env ./manage.py runserver`` uses ``other-env`` while ``./manage.py runserver`` uses ``.env``.\n\nTests\n=====\n\n::\n\n    $ git clone git@github.com:joke2k/django-environ.git\n    $ cd django-environ/\n    $ python setup.py test\n\nHow to Contribute\n-----------------\n#. Check for open issues or open a fresh issue to start a discussion around a feature idea or a bug. There is a `Contributor Friendly`_ tag for issues that should be ideal for people who are not very familiar with the codebase yet.\n#. Fork `the repository`_ on GitHub to start making your changes to the **develop** branch (or branch off of it).\n#. Write a test which shows that the bug was fixed or that the feature works as expected.\n#. Send a pull request and bug the maintainer until it gets merged and published. :) Make sure to add yourself to `Authors file`_.\n\nLicense\n-------\n\nThis project is licensed under the MIT License - see the `License file`_ file for details\n\nChangelog\n---------\n\nSee the `Changelog file`_ which format is *inspired* by `Keep a Changelog <http://keepachangelog.com/en/1.0.0/>`_.\n\nCredits\n-------\n- See `Authors file`_\n- `12factor`_\n- `12factor-django`_\n- `Two Scoops of Django`_\n- `rconradharris`_ / `envparse`_\n- `kennethreitz`_ / `dj-database-url`_\n- `migonzalvar`_ / `dj-email-url`_\n- `ghickman`_ / `django-cache-url`_\n- `dstufft`_ / `dj-search-url`_\n- `julianwachholz`_ / `dj-config-url`_\n- `nickstenning`_ / `honcho`_\n- `rconradharris`_ / `envparse`_\n- `Distribute`_\n- `modern-package-template`_\n\n.. _rconradharris: https://github.com/rconradharris\n.. _envparse: https://github.com/rconradharris/envparse\n\n.. _kennethreitz: https://github.com/kennethreitz\n.. _dj-database-url: https://github.com/kennethreitz/dj-database-url\n\n.. _migonzalvar: https://github.com/migonzalvar\n.. _dj-email-url: https://github.com/migonzalvar/dj-email-url\n\n.. _ghickman: https://github.com/ghickman\n.. _django-cache-url: https://github.com/ghickman/django-cache-url\n\n.. _julianwachholz: https://github.com/julianwachholz\n.. _dj-config-url: https://github.com/julianwachholz/dj-config-url\n\n.. _dstufft: https://github.com/dstufft\n.. _dj-search-url: https://github.com/dstufft/dj-search-url\n\n.. _nickstenning: https://github.com/nickstenning\n.. _honcho: https://github.com/nickstenning/honcho\n\n.. _12factor: http://www.12factor.net/\n.. _`Twelve-factor methodology`: http://www.12factor.net/\n.. _12factor-django: http://www.wellfireinteractive.com/blog/easier-12-factor-django/\n.. _`Two Scoops of Django`: http://twoscoopspress.org/\n\n.. _Distribute: http://pypi.python.org/pypi/distribute\n.. _`modern-package-template`: http://pypi.python.org/pypi/modern-package-template\n\n.. _cookiecutter-django: https://github.com/pydanny/cookiecutter-django\n\n.. |pypi| image:: https://img.shields.io/pypi/v/django-environ.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/django-environ\n    :alt: Latest version released on PyPi\n\n.. |coverage| image:: https://img.shields.io/coveralls/joke2k/django-environ/master.svg?style=flat-square\n    :target: https://coveralls.io/r/joke2k/django-environ?branch=master\n    :alt: Test coverage\n\n.. |unix_build| image:: https://img.shields.io/travis/joke2k/django-environ/master.svg?style=flat-square&logo=travis\n    :target: http://travis-ci.org/joke2k/django-environ\n    :alt: Build status of the master branch on Mac/Linux\n\n.. |windows_build|  image:: https://img.shields.io/appveyor/ci/joke2k/django-environ.svg?style=flat-square&logo=windows\n    :target: https://ci.appveyor.com/project/joke2k/django-environ\n    :alt: Build status of the master branch on Windows\n\n.. |contributors| image:: https://img.shields.io/github/contributors/joke2k/django-environ.svg?style=flat-square\n    :target: https://github.com/joke2k/django-environ/graphs/contributors\n\n.. |license| image:: https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\n    :target: https://raw.githubusercontent.com/joke2k/django-environ/master/LICENSE.txt\n    :alt: Package license\n\n.. |say_thanks| image:: https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg?style=flat-square\n    :target: https://saythanks.io/to/joke2k\n    :alt: Say Thanks!\n\n.. |cover| image:: https://farm2.staticflickr.com/1745/42580036751_35f76a92fe_h.jpg\n    :alt: Photo by Singkham from Pexels\n\n.. _`License file`: https://github.com/joke2k/django-environ/blob/develop/LICENSE.txt\n.. _`Changelog file`: https://github.com/joke2k/django-environ/blob/develop/CHANGELOG.rst\n.. _`Authors file`: https://github.com/joke2k/django-environ/blob/develop/AUTHORS.rst\n.. _`Contributor Friendly`: https://github.com/joke2k/django-environ/issues?direction=desc&labels=contributor-friendly&page=1&sort=updated&state=open\n.. _`the repository`: https://github.com/joke2k/django-environ",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yzdann/django-environ",
    "keywords": "d,j,a,n,g,o, ,e,n,v,i,r,o,n,m,e,n,t, ,v,a,r,i,a,b,l,e,s, ,1,2,f,a,c,t,o,r",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-environ-alt",
    "package_url": "https://pypi.org/project/django-environ-alt/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-environ-alt/",
    "project_urls": {
      "Homepage": "https://github.com/yzdann/django-environ"
    },
    "release_url": "https://pypi.org/project/django-environ-alt/0.4.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django-environ allows you to utilize 12factor inspired environment variables to configure your Django application.",
    "version": "0.4.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6680328,
  "releases": {
    "0.4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d20e7ca1bbeb8af6d8ed6696c80cb4fafefff3f14babf132fb2f6a9466c1e1d3",
          "md5": "b4ec03f526a3563a2bdbaf98a04309ac",
          "sha256": "c982dcf53b83c0bd57e7215dd1de073e49b062d2c962152174cafa96d5677e7c"
        },
        "downloads": -1,
        "filename": "django_environ_alt-0.4.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4ec03f526a3563a2bdbaf98a04309ac",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 23776,
        "upload_time": "2020-02-22T12:45:07",
        "upload_time_iso_8601": "2020-02-22T12:45:07.501877Z",
        "url": "https://files.pythonhosted.org/packages/d2/0e/7ca1bbeb8af6d8ed6696c80cb4fafefff3f14babf132fb2f6a9466c1e1d3/django_environ_alt-0.4.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f51eb2fb51d4b94dc742f7daa23364ca823ddb452d0405607cb0c1333e562ef",
          "md5": "aea7f6e5ef125e6a7085439806b4a613",
          "sha256": "a907e16495f37b93d5c33d2512b76bcd824e2bb37d58ba4f3b96cab200870b66"
        },
        "downloads": -1,
        "filename": "django-environ-alt-0.4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "aea7f6e5ef125e6a7085439806b4a613",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24477,
        "upload_time": "2020-02-22T12:03:11",
        "upload_time_iso_8601": "2020-02-22T12:03:11.180987Z",
        "url": "https://files.pythonhosted.org/packages/3f/51/eb2fb51d4b94dc742f7daa23364ca823ddb452d0405607cb0c1333e562ef/django-environ-alt-0.4.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d20e7ca1bbeb8af6d8ed6696c80cb4fafefff3f14babf132fb2f6a9466c1e1d3",
        "md5": "b4ec03f526a3563a2bdbaf98a04309ac",
        "sha256": "c982dcf53b83c0bd57e7215dd1de073e49b062d2c962152174cafa96d5677e7c"
      },
      "downloads": -1,
      "filename": "django_environ_alt-0.4.6-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b4ec03f526a3563a2bdbaf98a04309ac",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 23776,
      "upload_time": "2020-02-22T12:45:07",
      "upload_time_iso_8601": "2020-02-22T12:45:07.501877Z",
      "url": "https://files.pythonhosted.org/packages/d2/0e/7ca1bbeb8af6d8ed6696c80cb4fafefff3f14babf132fb2f6a9466c1e1d3/django_environ_alt-0.4.6-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f51eb2fb51d4b94dc742f7daa23364ca823ddb452d0405607cb0c1333e562ef",
        "md5": "aea7f6e5ef125e6a7085439806b4a613",
        "sha256": "a907e16495f37b93d5c33d2512b76bcd824e2bb37d58ba4f3b96cab200870b66"
      },
      "downloads": -1,
      "filename": "django-environ-alt-0.4.6.tar.gz",
      "has_sig": false,
      "md5_digest": "aea7f6e5ef125e6a7085439806b4a613",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24477,
      "upload_time": "2020-02-22T12:03:11",
      "upload_time_iso_8601": "2020-02-22T12:03:11.180987Z",
      "url": "https://files.pythonhosted.org/packages/3f/51/eb2fb51d4b94dc742f7daa23364ca823ddb452d0405607cb0c1333e562ef/django-environ-alt-0.4.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}