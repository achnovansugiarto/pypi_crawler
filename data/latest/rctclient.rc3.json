{
  "info": {
    "author": "Stefan Valouch",
    "author_email": "svalouch@valouch.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# rctclient - Python implementation of the RCT Power GmbH \"Serial Communication Protocol\"\n\nThis Python module implements the \"Serial Communication Protocol\" by RCT Power GmbH, used in their line of solar\ninverters. Appart from the API, it also includes a registry of object IDs and a command line tool. For development, a\nsimple simulator is included.\n\nThis project is not in any way affiliated with or supported by RCT Power GmbH.\n\n## Documentation\n\nBelow is a quickstart guide, the project documentation is on [Read the Docs](https://rctclient.readthedocs.io/).\n\n## Installing\n\nInstall and update using [pip](https://pip.pypa.io/en/stable/quickstart/):\n\n```\n$ pip install -U rctclient\n```\n\nTo install the dependencies required for the CLI tool:\n\n```\n$ pip install -U rctclient[cli]\n```\n\n## Example\n\nLet's read the current battery state of charge:\n```python\n\nimport socket, select, sys\nfrom rctclient.frame import ReceiveFrame, make_frame\nfrom rctclient.registry import REGISTRY as R\nfrom rctclient.types import Command\nfrom rctclient.utils import decode_value\n\n# open the socket and connect to the remote device:\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.connect(('192.168.0.1', 8899))\n\n# query information about an object ID (here: battery.soc):\nobject_info = R.get_by_name('battery.soc')\n\n# construct a frame that will send a read command for the object ID we want, and send it\nsend_frame = make_frame(command=Command.READ, id=object_info.object_id)\nsock.send(send_frame)\n\n# loop until we got the entire response frame\nframe = ReceiveFrame()\nwhile True:\n    ready_read, _, _ = select.select([sock], [], [], 2.0)\n    if sock in ready_read:\n        # receive content of the input buffer\n        buf = sock.recv(256)\n        # if there is content, let the frame consume it\n        if len(buf) > 0:\n            frame.consume(buf)\n            # if the frame is complete, we're done\n            if frame.complete():\n                break\n        else:\n            # the socket was closed by the device, exit\n            sys.exit(1)\n\n# decode the frames payload\nvalue = decode_value(object_info.response_data_type, frame.data)\n\n# and print the result:\nprint(f'Response value: {value}')\n```\n\n## Reading values from the command line\n\nThe module installs the `rctclient` command (requires `click`). The subcommand `read-values` reads a single value from\nthe device and returns its output. Here is a call example using the object ID with verbose output:\n\n```\n$ rctclient read-value --verbose --host 192.168.0.1 --id 0x959930BF\n#413 0x959930BF battery.soc         SOC (State of charge)              0.29985150694847107\n```\n\nWithout `--verbose`, the only thing that's printed is the received value. This is demonstrated below, where the\n`--name` parameter is used instead of the `--id`:\n```\n$ rctclient read-value --host 192.168.0.1 --name battery.soc\n0.2998138964176178\n```\nThis makes it suitable for use with scripting environments where one just needs some values. If `--debug` is added\nbefore the subcommands name, the log level is set to DEBUG and all log messages are sent to `stderr`, which allows for\nscripts to continue processing the value on stdout, while allowing for observations of the inner workings of the code.\n\n## Generating the documentation\n\nThe documentation is generated using Sphinx, and requires that the software be installed to the local environment (e.g.\nvia virtualenv). With a local clone of the repository, do the following (activate your virtualenv before if so\ndesired):\n```\n$ pip install -e .[docs,cli]\n$ cd docs\n$ make clean html\n```\nThe documentation is put into the `docs/_build/html` directory, simply point your browser to the `index.html` file.\n\nThe documentation is also auto-generated after every commit and can be found at\n[https://rctclient.readthedocs.io/](https://rctclient.readthedocs.io/).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/svalouch/python-rctclient/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rctclient",
    "package_url": "https://pypi.org/project/rctclient/",
    "platform": "any",
    "project_url": "https://pypi.org/project/rctclient/",
    "project_urls": {
      "Documentation": "https://rctclient.readthedocs.io/",
      "Homepage": "https://github.com/svalouch/python-rctclient/",
      "Source": "https://github.com/svalouch/python-rctclient/",
      "Tracker": "https://github.com/svalouch/python-rctclient/issues"
    },
    "release_url": "https://pypi.org/project/rctclient/0.0.3/",
    "requires_dist": [
      "typing-extensions ; python_version < \"3.8\"",
      "click ; extra == 'cli'",
      "click ; extra == 'docs'",
      "Sphinx (>=2.0) ; extra == 'docs'",
      "sphinx-autodoc-typehints ; extra == 'docs'",
      "sphinx-click ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "recommonmark (>=0.5.0) ; extra == 'docs'",
      "mypy ; extra == 'tests'",
      "pylint ; extra == 'tests'",
      "pytest ; extra == 'tests'",
      "pytest-cov ; extra == 'tests'",
      "pytest-pylint ; extra == 'tests'"
    ],
    "requires_python": ">=3.6",
    "summary": "Implementation of the RCT Power communication protocol",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10454046,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d82321d55d9338c0d6825c64383b4a1a667d80bb7402017be87c509ccb8195bd",
          "md5": "8682a3ddf8956f92daa4327368c7a652",
          "sha256": "c8c5050af051407ba0bb989e0882649357b61e67a1bcd982ce46ac68c54862ae"
        },
        "downloads": -1,
        "filename": "rctclient-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8682a3ddf8956f92daa4327368c7a652",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 70492,
        "upload_time": "2020-10-07T16:46:36",
        "upload_time_iso_8601": "2020-10-07T16:46:36.805519Z",
        "url": "https://files.pythonhosted.org/packages/d8/23/21d55d9338c0d6825c64383b4a1a667d80bb7402017be87c509ccb8195bd/rctclient-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25bdf82c02f6c777e30466c54a65c90af3411684bdee1c63fbbbc4ab884add49",
          "md5": "9a7e52c04fc812263999aef2fa301b57",
          "sha256": "d6fe6451812714ad95375d739737a21c2d92e4c43c8d3d60381d7a58d46d1010"
        },
        "downloads": -1,
        "filename": "rctclient-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9a7e52c04fc812263999aef2fa301b57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 56464,
        "upload_time": "2020-10-07T16:46:39",
        "upload_time_iso_8601": "2020-10-07T16:46:39.964521Z",
        "url": "https://files.pythonhosted.org/packages/25/bd/f82c02f6c777e30466c54a65c90af3411684bdee1c63fbbbc4ab884add49/rctclient-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d42bd85cb4b85f387b7bb52a281892d2521e7994ab73959690240df6e5c4be5",
          "md5": "e268b8ca5680cc63c747e6a4ff2ce8fd",
          "sha256": "bc7c815368557628c046ae5c962d37551093f97e5eb142c39565fd8aedbf6822"
        },
        "downloads": -1,
        "filename": "rctclient-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e268b8ca5680cc63c747e6a4ff2ce8fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 51707,
        "upload_time": "2021-02-17T21:20:11",
        "upload_time_iso_8601": "2021-02-17T21:20:11.598456Z",
        "url": "https://files.pythonhosted.org/packages/5d/42/bd85cb4b85f387b7bb52a281892d2521e7994ab73959690240df6e5c4be5/rctclient-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fde3b54eb70e218e26634487a10e8455cbf5de0436a63a32abbb7057186731b8",
          "md5": "6449afc28ed6a83d7205ec045c86dd40",
          "sha256": "48a65d5b671d1e8e7bf6ae95989ead89d6e37794535c55c59f0cadb65f627e21"
        },
        "downloads": -1,
        "filename": "rctclient-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6449afc28ed6a83d7205ec045c86dd40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 38627,
        "upload_time": "2021-02-17T21:20:13",
        "upload_time_iso_8601": "2021-02-17T21:20:13.628316Z",
        "url": "https://files.pythonhosted.org/packages/fd/e3/b54eb70e218e26634487a10e8455cbf5de0436a63a32abbb7057186731b8/rctclient-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa4c3dd2af5893bf4af083ab1972cda0ee3c0b2bac72d95b2bfb9f8def401b8c",
          "md5": "3fa91442ea8bea8cdce8a5612b30c77c",
          "sha256": "0ecb89a719a95bb1a14a9a971e7e85da0ac98af946548880451759e4b9e7a7fb"
        },
        "downloads": -1,
        "filename": "rctclient-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3fa91442ea8bea8cdce8a5612b30c77c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 59202,
        "upload_time": "2021-05-24T13:30:37",
        "upload_time_iso_8601": "2021-05-24T13:30:37.774339Z",
        "url": "https://files.pythonhosted.org/packages/aa/4c/3dd2af5893bf4af083ab1972cda0ee3c0b2bac72d95b2bfb9f8def401b8c/rctclient-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "762cafdda0c72ee59627e1de77cc098c49ba9e6bea3dc2037bebbacd2fc6d5c9",
          "md5": "552a81b34a7ddac9e2ca38b62da225df",
          "sha256": "d0b64b374d16d8c5f5d276020b7aec351cdd5d5636e1992b443cd335fbefa553"
        },
        "downloads": -1,
        "filename": "rctclient-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "552a81b34a7ddac9e2ca38b62da225df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 56925,
        "upload_time": "2021-05-24T13:30:39",
        "upload_time_iso_8601": "2021-05-24T13:30:39.612406Z",
        "url": "https://files.pythonhosted.org/packages/76/2c/afdda0c72ee59627e1de77cc098c49ba9e6bea3dc2037bebbacd2fc6d5c9/rctclient-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa4c3dd2af5893bf4af083ab1972cda0ee3c0b2bac72d95b2bfb9f8def401b8c",
        "md5": "3fa91442ea8bea8cdce8a5612b30c77c",
        "sha256": "0ecb89a719a95bb1a14a9a971e7e85da0ac98af946548880451759e4b9e7a7fb"
      },
      "downloads": -1,
      "filename": "rctclient-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3fa91442ea8bea8cdce8a5612b30c77c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 59202,
      "upload_time": "2021-05-24T13:30:37",
      "upload_time_iso_8601": "2021-05-24T13:30:37.774339Z",
      "url": "https://files.pythonhosted.org/packages/aa/4c/3dd2af5893bf4af083ab1972cda0ee3c0b2bac72d95b2bfb9f8def401b8c/rctclient-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "762cafdda0c72ee59627e1de77cc098c49ba9e6bea3dc2037bebbacd2fc6d5c9",
        "md5": "552a81b34a7ddac9e2ca38b62da225df",
        "sha256": "d0b64b374d16d8c5f5d276020b7aec351cdd5d5636e1992b443cd335fbefa553"
      },
      "downloads": -1,
      "filename": "rctclient-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "552a81b34a7ddac9e2ca38b62da225df",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 56925,
      "upload_time": "2021-05-24T13:30:39",
      "upload_time_iso_8601": "2021-05-24T13:30:39.612406Z",
      "url": "https://files.pythonhosted.org/packages/76/2c/afdda0c72ee59627e1de77cc098c49ba9e6bea3dc2037bebbacd2fc6d5c9/rctclient-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}