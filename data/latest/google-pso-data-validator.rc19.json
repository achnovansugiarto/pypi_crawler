{
  "info": {
    "author": "Dylan Hercher",
    "author_email": "dhercher@google.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Data Validation Tool\n\nThe Data Validation Tool is an open sourced Python CLI tool based on the\n[Ibis framework](https://ibis-project.org/docs/3.0.2/)\nthat compares heterogeneous data source tables with multi-leveled validation\nfunctions.\n\nData validation is a critical step in a data warehouse, database, or data lake\nmigration project where data from both the source and the target tables are\ncompared to ensure they are matched and correct after each migration step\n(e.g. data and schema migration, SQL script translation, ETL migration, etc.).\nThe Data Validation Tool (DVT) provides an automated and repeatable solution to\nperform this task.\n\nDVT supports the following validations:\n* Column validation (count, sum, avg, min, max, group by)\n* Row validation (BQ, Hive, Teradata, Oracle, SQL Server, Postgres only)\n* Schema validation \n* Custom Query validation\n* Ad hoc SQL exploration\n\nDVT supports the following connection types:\n\n*   [BigQuery](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md#google-bigquery)\n*   [DB2](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md#db2)\n*   [FileSystem](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md#filesystem)\n*   [Hive](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md#hive)\n*   [Impala](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md#impala)\n*   [MSSQL](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md#mssql-server)\n*   [MySQL](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md#mysql)\n*   [Oracle](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md#oracle)\n*   [Postgres](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md#postgres)\n*   [Redshift](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md#redshift)\n*   [Spanner](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md#google-spanner)\n*   [Teradata](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md#teradata)\n*   [AlloyDB](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md#alloydb)\n\nThe [Connections](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md) page provides details about how to create\nand list connections for the validation tool.\n\n### Disclaimer\nThis is not an officially supported Google product. Please be aware that bugs may lurk, and that we reserve the right to make small backwards-incompatible changes. Feel free to open bugs or feature requests, or contribute directly \n(see [CONTRIBUTING.md](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/CONTRIBUTING.md) for details).\n\n## Installation\n\nThe [Installation](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/installation.md) page describes the prerequisites and\nsetup steps needed to install and use the Data Validation Tool.\n\n## Usage\n\nBefore using this tool, you will need to create connections to the source and\ntarget tables. Once the connections are created, you can run validations on\nthose tables. Validation results can be printed to stdout (default) or outputted\nto BigQuery (recommended). DVT also allows you to save or edit validation\nconfigurations in a YAML file. This is useful for running common validations or\nupdating the configuration.\n\n### Managing Connections\n\nBefore running validations, DVT requires setting up a source and target connection.\nThese connections can be stored locally or in a GCS directory. To create connections,\nplease review the [Connections](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/connections.md) page.\n\n### Running Validations\n\nThe CLI is the main interface to use this tool and it has several different\ncommands which can be used to create and run validations. Below are the command\nsyntax and options for running validations.\n\nAlternatives to running DVT in the CLI include deploying DVT to Cloud Run, Cloud Functions, or Airflow\n([Examples Here](https://github.com/GoogleCloudPlatform/professional-services-data-validator/tree/develop/samples)). See the [Validation Logic](https://github.com/GoogleCloudPlatform/professional-services-data-validator#validation-logic) section\nto learn more about how DVT uses the CLI to generate SQL queries.\n\n#### Column Validations\n\nBelow is the command syntax for column validations. To run a grouped column\nvalidation, simply specify the `--grouped-columns` flag.\n\nYou can specify a list of string columns for aggregations in order to calculate\nan aggregation over the `length(string_col)`. Running an aggregation \nover all columns ('*') will only run over numeric columns, unless the\n`--wildcard-include-string-len` flag is present.\n\n```\ndata-validation (--verbose or -v) (--log-level or -ll) validate column\n  --source-conn or -sc SOURCE_CONN\n                        Source connection details\n                        See: *Data Source Configurations* section for each data source\n  --target-conn or -tc TARGET_CONN\n                        Target connection details\n                        See: *Connections* section for each data source\n  --tables-list or -tbls SOURCE_SCHEMA.SOURCE_TABLE=TARGET_SCHEMA.TARGET_TABLE\n                        Comma separated list of tables in the form schema.table=target_schema.target_table\n                        Target schema name and table name are optional.\n                        i.e 'bigquery-public-data.new_york_citibike.citibike_trips'\n  [--grouped-columns or -gc GROUPED_COLUMNS]\n                        Comma separated list of columns for Group By i.e col_a,col_b\n  [--primary-keys or -pk PRIMARY_KEYS]\n                        Comma separated list of columns to use as primary keys\n                        (Note) Only use with grouped column validation\n  [--count COLUMNS]     Comma separated list of columns for count or * for all columns\n  [--sum COLUMNS]       Comma separated list of columns for sum or * for all numeric\n  [--min COLUMNS]       Comma separated list of columns for min or * for all numeric\n  [--max COLUMNS]       Comma separated list of columns for max or * for all numeric\n  [--avg COLUMNS]       Comma separated list of columns for avg or * for all numeric\n  [--bq-result-handler or -bqrh PROJECT_ID.DATASET.TABLE]\n                        BigQuery destination for validation results. Defaults to stdout.\n                        See: *Validation Reports* section\n  [--service-account or -sa PATH_TO_SA_KEY]\n                        Service account to use for BigQuery result handler output.\n  [--wildcard-include-string-len or -wis]\n                        If flag is present, include string columns in aggregation as len(string_col)\n  [--cast-to-bigint or -ctb]\n                        If flag is present, cast all int32 columns to int64 before aggregation\n  [--filters SOURCE_FILTER:TARGET_FILTER]\n                        Colon separated string values of source and target filters.\n                        If target filter is not provided, the source filter will run on source and target tables.\n                        See: *Filters* section\n  [--config-file or -c CONFIG_FILE]\n                        YAML Config File Path to be used for storing validations.\n  [--threshold or -th THRESHOLD]\n                        Float value. Maximum pct_difference allowed for validation to be considered a success. Defaults to 0.0\n  [--labels or -l KEY1=VALUE1,KEY2=VALUE2]\n                        Comma-separated key value pair labels for the run.\n  [--format or -fmt]    Format for stdout output. Supported formats are (text, csv, json, table).\n                        Defaults to table.\n  [--filter-status or -fs STATUSES_LIST]\n                        Comma separated list of statuses to filter the validation results. Supported statuses are (success, fail). If no list is provided, all statuses are returned.\n```\n\nThe default aggregation type is a 'COUNT *'. If no aggregation flag (i.e count,\nsum , min, etc.) is provided, the default aggregation will run.\n\nThe [Examples](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/examples.md) page provides many examples of how a tool can be used to run powerful validations without writing any queries.\n\n#### Row Validations\n\n(Note: Row hash validation is currently supported for BigQuery, Teradata, Impala/Hive, Oracle, SQL Server, Postgres, and Alloy DB. Struct and array data types are not currently supported.\nIn addition, please note that SHA256 is not a supported function on Teradata systems. \nIf you wish to perform this comparison on Teradata you will need to \n[deploy a UDF to perform the conversion](https://github.com/akuroda/teradata-udf-sha2/blob/master/src/sha256.c).)\n\nBelow is the command syntax for row validations. In order to run row level\nvalidations you need to pass a `--primary-key` flag which defines what field(s)\nthe validation will be compared on, as well as either the `--comparison-fields` flag\nor the `--hash` flag.\n\nThe `--comparison-fields` flag specifies the values (e.g. columns) whose raw values will be compared\nbased on the primary key join. The `--hash` flag will run a checksum across specified columns in\nthe table. This will include casting to string, sanitizing the data (ifnull, rtrim, upper), concatenating,\nand finally hashing the row.\n\n\nUnder the hood, row validation uses\n[Calculated Fields](https://github.com/GoogleCloudPlatform/professional-services-data-validator#calculated-fields) to\napply functions such as IFNULL() or RTRIM(). These can be edited in the YAML config to customize your row validation.\n\n```\ndata-validation (--verbose or -v) (--log-level or -ll) validate row\n  --source-conn or -sc SOURCE_CONN\n                        Source connection details\n                        See: *Data Source Configurations* section for each data source\n  --target-conn or -tc TARGET_CONN\n                        Target connection details\n                        See: *Connections* section for each data source\n  --tables-list or -tbls SOURCE_SCHEMA.SOURCE_TABLE=TARGET_SCHEMA.TARGET_TABLE\n                        Comma separated list of tables in the form schema.table=target_schema.target_table\n                        Target schema name and table name are optional.\n                        i.e 'bigquery-public-data.new_york_citibike.citibike_trips'\n  --primary-keys or -pk PRIMARY_KEYS\n                        Comma separated list of columns to use as primary keys\n  --comparison-fields or -comp-fields FIELDS\n                        Comma separated list of columns to compare. Can either be a physical column or an alias\n                        See: *Calculated Fields* section for details\n  --hash COLUMNS        Comma separated list of columns to hash or * for all columns \n  --concat COLUMNS      Comma separated list of columns to concatenate or * for all columns (use if a common hash function is not available between databases)\n  [--bq-result-handler or -bqrh PROJECT_ID.DATASET.TABLE]\n                        BigQuery destination for validation results. Defaults to stdout.\n                        See: *Validation Reports* section\n  [--service-account or -sa PATH_TO_SA_KEY]\n                        Service account to use for BigQuery result handler output.\n  [--filters SOURCE_FILTER:TARGET_FILTER]\n                        Colon spearated string values of source and target filters.\n                        If target filter is not provided, the source filter will run on source and target tables.\n                        See: *Filters* section\n  [--config-file or -c CONFIG_FILE]\n                        YAML Config File Path to be used for storing validations.\n  [--labels or -l KEY1=VALUE1,KEY2=VALUE2]\n                        Comma-separated key value pair labels for the run.\n  [--format or -fmt]    Format for stdout output. Supported formats are (text, csv, json, table).\n                        Defaults to table.\n  [--use-random-row or -rr]\n                        Finds a set of random rows of the first primary key supplied.\n  [--random-row-batch-size or -rbs]\n                        Row batch size used for random row filters (default 10,000).\n  [--filter-status or -fs STATUSES_LIST]\n                        Comma separated list of statuses to filter the validation results. Supported statuses are (success, fail). If no list is provided, all statuses are returned.\n```\n#### Generate Table Partitions for Large Table Row Validations\n\nBelow is the command syntax for generating table partitions in order to perform row validations on large tables with memory constraints. \n\nThe command generates and stores multiple YAML configs that represent chunks of the large table using filters (`WHERE partition_key > X AND partition_key < Y`). You can then run the configs in the directory serially with the `data-validation configs run --config-dir PATH` command as described [here](https://github.com/GoogleCloudPlatform/professional-services-data-validator#yaml-configuration-files).\n\nThe command takes the same parameters as required for `Row Validation` *plus* few commands to implement the partitioning logic.\n\n(Note: As of now, only monotonically increasing key is supported for `--partition-key`.)\n\n```\ndata-validation (--verbose or -v) (--log-level or -ll) generate-table-partitions\n\n  --source-conn or -sc SOURCE_CONN\n                        Source connection details\n                        See: *Data Source Configurations* section for each data source\n  --target-conn or -tc TARGET_CONN\n                        Target connection details\n                        See: *Connections* section for each data source\n  --tables-list or -tbls SOURCE_SCHEMA.SOURCE_TABLE=TARGET_SCHEMA.TARGET_TABLE\n                        Comma separated list of tables in the form schema.table=target_schema.target_table\n                        Target schema name and table name are optional.\n                        i.e 'bigquery-public-data.new_york_citibike.citibike_trips'\n  --primary-keys PRIMARY_KEYS, -pk PRIMARY_KEYS\n                        Comma separated list of primary key columns 'col_a,col_b'\n  --comparison-fields or -comp-fields FIELDS\n                        Comma separated list of columns to compare. Can either be a physical column or an alias\n                        See: *Calculated Fields* section for details\n  --hash COLUMNS        Comma separated list of columns to hash or * for all columns \n  --concat COLUMNS      Comma separated list of columns to concatenate or * for all columns (use if a common hash function is not available between databases)\n  --config-dir CONFIG_DIR, -cdir CONFIG_DIR\n                        Directory Path to store YAML Config Files\n                        GCS: Provide a full gs:// path of the target directory. Eg: `gs://<BUCKET>/partitions_dir`\n                        Local: Provide a relative path of the target directory. Eg: `partitions_dir`\n  --partition-num [1-1000], -pn [1-1000]\n                        Number of partitions/config files to generate\n                        In case this value exceeds the row count of the source/target table, its will be decreased to max(source_row_count, target_row_count)\n  [--partition-key PARTITION_KEY, -partkey PARTITION_KEY]\n                        Column on which the partitions would be generated. Column type must be integer. Defaults to Primary key\n  [--filters SOURCE_FILTER:TARGET_FILTER]\n                        Colon spearated string values of source and target filters.\n                        If target filter is not provided, the source filter will run on source and target tables.\n                        See: *Filters* section\n```\n#### Schema Validations\n\nBelow is the syntax for schema validations. These can be used to compare case insensitive column names and\ntypes between source and target.\n\n```\ndata-validation (--verbose or -v) (--log-level or -ll) validate schema\n  --source-conn or -sc SOURCE_CONN\n                        Source connection details\n                        See: *Data Source Configurations* section for each data source\n  --target-conn or -tc TARGET_CONN\n                        Target connection details\n                        See: *Connections* section for each data source\n  --tables-list or -tbls SOURCE_SCHEMA.SOURCE_TABLE=TARGET_SCHEMA.TARGET_TABLE\n                        Comma separated list of tables in the form schema.table=target_schema.target_table\n                        Target schema name and table name are optional.\n                        i.e 'bigquery-public-data.new_york_citibike.citibike_trips'\n  [--bq-result-handler or -bqrh PROJECT_ID.DATASET.TABLE]\n                        BigQuery destination for validation results. Defaults to stdout.\n                        See: *Validation Reports* section\n  [--service-account or -sa PATH_TO_SA_KEY]\n                        Service account to use for BigQuery result handler output.\n  [--config-file or -c CONFIG_FILE]\n                        YAML Config File Path to be used for storing validations.\n  [--format or -fmt]    Format for stdout output. Supported formats are (text, csv, json, table).\n                        Defaults  to table.\n  [--filter-status or -fs STATUSES_LIST]\n                        Comma separated list of statuses to filter the validation results. Supported statuses are (success, fail). If no list is provided, all statuses are returned.\n  [--exclusion-columns or -ec EXCLUSION_COLUMNS]\n                        Comma separated list of columns to be excluded from the schema validation, i.e col_a,col_b.\n\n  [--allow-list or -al ALLOW_LIST]\n                        Comma separated list of data-type mappings of source and destination data sources which will be validated in case of missing data types in destination data source. e.g: \"decimal(4,2):decimal(5,4),string[non-nullable]:string\"                 \n```\n\n#### Custom Query Column Validations\n\nBelow is the command syntax for custom query column validations.\n\n```\ndata-validation (--verbose or -v) (--log-level or -ll) validate custom-query\n  --source-conn or -sc SOURCE_CONN\n                        Source connection details\n                        See: *Data Source Configurations* section for each data source\n  --target-conn or -tc TARGET_CONN\n                        Target connection details\n                        See: *Connections* section for each data source\n  --custom-query-type CUSTOM_QUERY_TYPE, -cqt CUSTOM_QUERY_TYPE\n                        Type of custom query validation: ('row'|'column')\n                        Enter 'column' for custom query column validation\n  --source-query-file  SOURCE_QUERY_FILE, -sqf SOURCE_QUERY_FILE\n                        File containing the source sql commands\n  --target-query-file TARGET_QUERY_FILE, -tqf TARGET_QUERY_FILE\n  --primary-key or -pk JOIN_KEY\n                        Common column between source and target tables for join\n                        File containing the target sql commands\n  [--count COLUMNS]     Comma separated list of columns for count or * for all columns\n  [--sum COLUMNS]       Comma separated list of columns for sum or * for all numeric\n  [--min COLUMNS]       Comma separated list of columns for min or * for all numeric\n  [--max COLUMNS]       Comma separated list of columns for max or * for all numeric\n  [--avg COLUMNS]       Comma separated list of columns for avg or * for all numeric\n  [--bq-result-handler or -bqrh PROJECT_ID.DATASET.TABLE]\n                        BigQuery destination for validation results. Defaults to stdout.\n                        See: *Validation Reports* section\n  [--service-account or -sa PATH_TO_SA_KEY]\n                        Service account to use for BigQuery result handler output.\n  [--labels or -l KEY1=VALUE1,KEY2=VALUE2]\n                        Comma-separated key value pair labels for the run.\n  [--format or -fmt]    Format for stdout output. Supported formats are (text, csv, json, table).\n                        Defaults to table.\n  [--filter-status or -fs STATUSES_LIST]\n                        Comma separated list of statuses to filter the validation results. Supported statuses are (success, fail). If no list is provided, all statuses are returned.\n```\n\nThe default aggregation type is a 'COUNT *'. If no aggregation flag (i.e count,\nsum , min, etc.) is provided, the default aggregation will run.\n\nThe [Examples](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/examples.md)\npage provides few examples of how this tool can be used to run custom query validations.\n\n\n#### Custom Query Row Validations \n\n(Note: Custom query row validation is currently only supported for BigQuery, Teradata, SQL Server, PostgreSQL, Oracle, AlloyDB, and Impala/Hive. Struct and array data types are not currently supported.)\n\nBelow is the command syntax for row validations. In order to run row level\nvalidations you need to pass `--hash` flag which will specify the fields\nof the custom query result that will be concatenated and hashed. The primary key should be included\nin the SELECT statement of both source_query.sql and target_query.sql\n\nBelow is the command syntax for custom query row validations.\n\n```\ndata-validation (--verbose or -v) (--log-level or -ll) validate custom-query\n  --source-conn or -sc SOURCE_CONN\n                        Source connection details\n                        See: *Data Source Configurations* section for each data source\n  --target-conn or -tc TARGET_CONN\n                        Target connection details\n                        See: *Connections* section for each data source\n  --custom-query-type CUSTOM_QUERY_TYPE, -cqt CUSTOM_QUERY_TYPE\n                        Type of custom query validation: ('row'|'column')\n                        Enter 'row' for custom query column validation\n  --source-query-file SOURCE_QUERY_FILE, -sqf SOURCE_QUERY_FILE\n                        File containing the source sql commands\n  --target-query-file TARGET_QUERY_FILE, -tqf TARGET_QUERY_FILE\n                        File containing the target sql commands\n  --hash '*'            '*' to hash all columns.\n  --concat COLUMNS      Comma separated list of columns to concatenate or * for all columns\n                        (use if a common hash function is not available between databases)\n  --primary-key or -pk JOIN_KEY\n                       Common column between source and target tables for join\n  [--bq-result-handler or -bqrh PROJECT_ID.DATASET.TABLE]\n                        BigQuery destination for validation results. Defaults to stdout.\n                        See: *Validation Reports* section\n  [--service-account or -sa PATH_TO_SA_KEY]\n                        Service account to use for BigQuery result handler output.\n  [--labels or -l KEY1=VALUE1,KEY2=VALUE2]\n                        Comma-separated key value pair labels for the run.\n  [--format or -fmt]    Format for stdout output. Supported formats are (text, csv, json, table).\n                        Defaults to table.\n  [--filter-status or -fs STATUSES_LIST]\n                        Comma separated list of statuses to filter the validation results. Supported statuses are (success, fail). If no list is provided, all statuses are returned.\n```\n\nThe [Examples](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/examples.md)\npage provides few examples of how this tool can be used to run custom query row validations.\n\n### YAML Configuration Files\n\nYou can customize the configuration for any given validation by providing use\ncase specific CLI arguments or editing the YAML configuration file.\n\nFor example, the following command creates a YAML file for the validation of the\n`new_york_citibike` table: `data-validation validate column -sc my_bq_conn -tc\nmy_bq_conn -tbls bigquery-public-data.new_york_citibike.citibike_trips -c\ncitibike.yaml`. \n\nThe vaildation config file is saved to the GCS path specified by the `PSO_DV_CONFIG_HOME`\nenv variable if that has been set; otherwise, it is saved to wherever the tool is run. \n\nYou can now edit the YAML file if, for example, the `new_york_citibike` table is\nstored in datasets that have different names in the source and target systems.\nOnce the file is updated and saved, the following command runs the\nvalidation:\n\n```\ndata-validation (--verbose or -v) (--log-level or -ll) configs run -c citibike.yaml\n```\n\nYou can also specify a directory to read from using the --config-dir (or -cdir) flag. All yaml files in that directory will be run as validations. Support both local and GCS paths. For example:\n```\ndata-validation configs run -cdir ./my-validations/\n\nOR\n\ndata-validation configs run -cdir gs://my-bucket/my-validations/\n```\n\nView the complete YAML file for a Grouped Column validation on the\n[Examples](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/examples.md#sample-yaml-config-grouped-column-validation) page.\n\nYou can view a list of all saved validation YAML files using `data-validation configs list`, and print a YAML config using `data-validation configs get -c citibike.yaml`. \n\n### Validation Reports\n\nThe result handlers tell DVT where to store the results of\neach validation. The tool can write the results of a validation run to Google\nBigQuery or print to stdout (default). View the schema of the results \ntable [here](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/terraform/results_schema.json).\n\nTo output to BigQuery, simply include the `-bqrh` flag during a validation run\nlike so:\n```\ndata-validation validate column\n  -sc bq_conn\n  -tc bq_conn\n  -tbls bigquery-public-data.new_york_citibike.citibike_trips\n  -bqrh project_id.dataset.table\n  -sa service-acct@project.iam.gserviceaccount.com\n```\n\n### Ad Hoc SQL Exploration\n\nThere are many occasions where you need to explore a data source while running\nvalidations. To avoid the need to open and install a new client, the CLI allows\nyou to run ad hoc queries.\n\n```\ndata-validation query\n  --conn or -c CONN\n          The connection name to be queried\n  --query or -q QUERY\n          The raw query to run against the supplied connection\n```\n\n### Building Matched Table Lists\n\nCreating the list of matched tables can be a hassle. We have added a feature\nwhich may help you to match all of the tables together between source and\ntarget. The find-tables tool:\n\n-   Pulls all tables in the source (applying a supplied allowed-schemas filter)\n-   Pulls all tables from the target\n-   Uses Levenshtein distance to match tables\n-   Finally, it prints a JSON list of tables which can be a reference for the\n    validation run config.\n\nNote that our score cutoff default is a 0.8, which was manually tested to be an\naccurate value. If no matches occur, reduce this value.\n\n```\ndata-validation find-tables --source-conn source --target-conn target \\\n    --allowed-schemas pso_data_validator \\\n    --score-cutoff 0.8\n```\n\n### Using Beta CLI Features\n\nThere may be occasions we want to release a new CLI feature under a Beta flag.\nAny features under Beta may or may not make their way to production. However, if\nthere is a Beta feature you wish to use than it can be accessed using the\nfollowing.\n\n```\ndata-validation beta --help\n```\n\n#### [Beta] Deploy Data Validation as a Local Service\n\nIf you wish to use Data Validation as a Flask service, the following command\nwill help. This same logic is also expected to be used for Cloud Run, Cloud\nFunctions, and other deployment services.\n\n`data-validation beta deploy`\n\n## Validation Logic\n### Aggregated Fields\n\nAggregate fields contain the SQL fields that you want to produce an aggregate\nfor. Currently the functions `COUNT()`, `AVG()`, `SUM()`, `MIN()`, and `MAX()`\nare supported.\n\nHere is a sample aggregate config:\n```\nvalidations:\n- aggregates:\n    - field_alias: count\n    source_column: null\n    target_column: null\n    type: count\n    - field_alias: count__tripduration\n    source_column: tripduration\n    target_column: tripduration\n    type: count\n    - field_alias: sum__tripduration\n    source_column: tripduration\n    target_column: tripduration\n    type: sum\n```\n\nIf you are aggregating columns with large values, you can CAST() before aggregation\nwith calculated fields as shown in [this example](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/examples.md#sample-yaml-with-calc-fields-cast-to-numeric-before-aggregation).\n\n### Filters\n\nFilters let you apply a WHERE statement to your validation query (ie. `SELECT *\nFROM table WHERE created_at > 30 days ago AND region_id = 71;`). The filter is\nwritten in the syntax of the given source.\n\nNote that you are writing the query to execute, which does not have to match\nbetween source and target as long as the results can be expected to align. If\nthe target filter is omitted, the source filter will run on both the source and\ntarget tables.\n\n### Grouped Columns\n\nGrouped Columns contain the fields you want your aggregations to be broken out\nby, e.g. `SELECT last_updated::DATE, COUNT(*) FROM my.table` will produce a\nresultset that breaks down the count of rows per calendar date.\n\n### Hash, Concat, and Comparison Fields\n\nRow level validations can involve either a hash/checksum, concat, or comparison fields.\nA hash validation (`--hash '*'`) will first sanitize the data with the following\noperations on all or selected columns: CAST to string, IFNULL replace with a default\nreplacement string, RSTRIP, and UPPER. Then, it will CONCAT() the results\nand run a SHA256() hash and compare the source and target results. Since each row will\nbe returned in the result set, it is recommended to utilize the `--use-random-row` feature\nto validate a subset of the table.\n\nPlease note that SHA256 is not a supported function on Teradata systems. If you wish to perform\nthis comparison on Teradata you will need to [deploy a UDF to perform the conversion](https://github.com/akuroda/teradata-udf-sha2/blob/master/src/sha256.c).\n\nThe concat validation (`--concat '*'`) will do everything up until the hash. It will sanitize\nand concatenate the specified columns, and then value compare the results.\n\nComparison field validations (`--comp-fields column`) involve an value comparison of the\ncolumn values. These values will be compared via a JOIN on their corresponding primary\nkey and will be evaluated for an exact match.\n\nSee hash and comparison field validations in the [Examples](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/examples.md#run-a-row-hash-validation-for-all-rows) page.\n\n### Calculated Fields\n\nSometimes direct comparisons are not feasible between databases due to\ndifferences in how particular data types may be handled. These differences can\nbe resolved by applying functions to columns in the query itself.\nExamples might include trimming whitespace from a string, converting strings to\na single case to compare case insensitivity, or rounding numeric types to a\nsignificant figure.\n\nOnce a calculated field is defined, it can be referenced by other calculated\nfields at any \"depth\" or higher. Depth controls how many subqueries are executed\nin the resulting query. For example, with the following YAML config...\n\n```yaml\n- calculated_fields:\n    - field_alias: rtrim_col_a\n      source_calculated_columns: ['col_a']\n      target_calculated_columns: ['col_a']\n      type: rtrim\n      depth: 0 # generated off of a native column\n    - field_alias: ltrim_col_a\n      source_calculated_columns: ['col_b']\n      target_calculated_columns: ['col_b']\n      type: ltrim\n      depth: 0 # generated off of a native column\n    - field_alias: concat_col_a_col_b\n      source_calculated_columns: ['rtrim_col_a', 'ltrim_col_b']\n      target_calculated_columns: ['rtrim_col_a', 'ltrim_col_b']\n      type: concat\n      depth: 1 # calculated one query above\n```\n\nis equivalent to the following SQL query...\n\n```\nSELECT\n  CONCAT(rtrim_col_a, rtrim_col_b) AS concat_col_a_col_b\nFROM (\n  SELECT\n      RTRIM(col_a) AS rtrim_col_a\n    , LTRIM(col_b) AS ltrim_col_b\n  FROM my.table\n  ) as table_0\n```\n\nIf you generate the config file for a row validation, you can see that it uses\ncalculated fields to generate the query. You can also use calculated fields\nin column level validations to generate the length of a string, or cast\na INT field to BIGINT for aggregations. \n\nSee the [Examples page](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/examples.md#sample-yaml-with-calc-fields-cast-to-numeric-before-aggregation) for a sample\ncast to NUMERIC.\n\n#### Custom Calculated Fields\n\nDVT supports certain functions required for row hash validation natively (i.e. CAST() and CONCAT()),\nwhich are listed in the CalculatedField() class methods in the [QueryBuilder](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/data_validation/query_builder/query_builder.py).\n\nYou can also specify custom functions (i.e. replace() or truncate()) from the Ibis expression\n[API reference](https://ibis-project.org/docs/3.2.0/api/expressions/). Keep in mind these will run\non both source and target systems. You will need to specify the Ibis API expression and the parameters\nrequired, if any, with the 'params' block as shown below:\n\n```yaml\n- calculated_fields:\n  - depth: 0\n    field_alias: format_start_time\n    source_calculated_columns:\n    - start_time\n    target_calculated_columns:\n    - start_time\n    type: custom\n    ibis_expr: ibis.expr.api.TimestampValue.strftime\n    params:\n    - format_str: '%m%d%Y'\n```\n\nThe above block references the [TimestampValue.strftime](https://ibis-project.org/docs/3.2.0/api/expressions/timestamps/#ibis.expr.types.temporal.TemporalValue.strftime) Ibis API expression.\nSee the [Examples page](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/docs/examples.md#sample-row-validation-yaml-with-custom-calc-field)\nfor a sample YAML with a custom calculated field.\n\n## Contributing\n\nContributions are welcome. See the [Contributing guide](https://github.com/GoogleCloudPlatform/professional-services-data-validator/blob/develop/CONTRIBUTING.md) for details.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pypa/sampleproject",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "google-pso-data-validator",
    "package_url": "https://pypi.org/project/google-pso-data-validator/",
    "platform": null,
    "project_url": "https://pypi.org/project/google-pso-data-validator/",
    "project_urls": {
      "Homepage": "https://github.com/pypa/sampleproject"
    },
    "release_url": "https://pypi.org/project/google-pso-data-validator/2.9.0/",
    "requires_dist": [
      "attrs (==20.3.0)",
      "grpcio (==1.47.0)",
      "lazy-object-proxy (==1.7.1)",
      "marshmallow (==3.10.0)",
      "google-api-python-client (==1.12.8)",
      "ibis-framework (==1.4.0)",
      "ibis-bigquery (==1.0.0)",
      "impyla (==0.17.0)",
      "SQLAlchemy (==1.3.22)",
      "PyMySQL (==1.0.2)",
      "psycopg2-binary (==2.9.3)",
      "PyYAML (==6.0)",
      "pandas (==1.3.5)",
      "proto-plus (==1.13.0)",
      "pyarrow (==6.0.1)",
      "pydata-google-auth (==1.1.0)",
      "google-cloud-bigquery (==2.30.0)",
      "google-cloud-bigquery-storage (==2.3.0)",
      "google-cloud-spanner (==3.1.0)",
      "google-cloud-storage (==1.42.2)",
      "setuptools (>=34.0.0)",
      "jellyfish (==0.8.2)",
      "tabulate (==0.8.9)",
      "Flask (==2.0.2)",
      "1.10.11 ; extra == 'apache-airflow'",
      "3.0.0 ; extra == 'pyspark'"
    ],
    "requires_python": ">=3.7",
    "summary": "A package to enable easy data validation",
    "version": "2.9.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16893260,
  "releases": {
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34707c4a0ee6485137ae8e42aa278066446bd2595a6dc2bca6cf7ef5146b5a9d",
          "md5": "90149d7f21b9544912b32ec90d53cd76",
          "sha256": "7e8c813897f559ef666a7d8b4a93fbf34c030818265cdb4cec4656eb91167766"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90149d7f21b9544912b32ec90d53cd76",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 122305,
        "upload_time": "2021-06-08T18:26:11",
        "upload_time_iso_8601": "2021-06-08T18:26:11.606780Z",
        "url": "https://files.pythonhosted.org/packages/34/70/7c4a0ee6485137ae8e42aa278066446bd2595a6dc2bca6cf7ef5146b5a9d/google_pso_data_validator-1.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4383dd9c8839ae2a07f72e048983dbe408a2ed9764bc6b45aea109e1632df252",
          "md5": "9bb2f0cdbfcda52d54316b9a5a9a3de9",
          "sha256": "d636dd4b48e0e03e13c4cadb22ada44f87fe3a79aadadbc9bbd39e1e05e30032"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9bb2f0cdbfcda52d54316b9a5a9a3de9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 93562,
        "upload_time": "2021-06-08T18:26:13",
        "upload_time_iso_8601": "2021-06-08T18:26:13.565644Z",
        "url": "https://files.pythonhosted.org/packages/43/83/dd9c8839ae2a07f72e048983dbe408a2ed9764bc6b45aea109e1632df252/google-pso-data-validator-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d9b85fe35c61b96a839c99763305a0a842b2a027c763edea51f42c6b8019b0d",
          "md5": "c23ede390d4c92ccebbf2ea7ac8e4be4",
          "sha256": "c623e3e54e4524363591a89a41e035a8fa620e2731479799f65d8908c469a261"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-1.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c23ede390d4c92ccebbf2ea7ac8e4be4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 122623,
        "upload_time": "2021-06-28T22:33:51",
        "upload_time_iso_8601": "2021-06-28T22:33:51.813384Z",
        "url": "https://files.pythonhosted.org/packages/0d/9b/85fe35c61b96a839c99763305a0a842b2a027c763edea51f42c6b8019b0d/google_pso_data_validator-1.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91d146028021b1378b862cdb1651bfb7e12b3ec1e52f83aa85749f5d092622b0",
          "md5": "f00383f2a931a415624ed5ca5363a96a",
          "sha256": "96a257bc86d7c5d1c5884465cd7cd41fd75d1fcac4520a00efbfdd5d45d28644"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f00383f2a931a415624ed5ca5363a96a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 93075,
        "upload_time": "2021-06-28T22:33:53",
        "upload_time_iso_8601": "2021-06-28T22:33:53.552137Z",
        "url": "https://files.pythonhosted.org/packages/91/d1/46028021b1378b862cdb1651bfb7e12b3ec1e52f83aa85749f5d092622b0/google-pso-data-validator-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94bc471c3fc569818a977f6ac495e9a4b0dd121ffc97f9c030b945be7b0d3e11",
          "md5": "7086d241dc6d039a556c0a33acebe9ae",
          "sha256": "ba75b13a4487a6b8d43ed07a498561a622e1aa90ec4f124e9a50f372a0ac59a9"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-1.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7086d241dc6d039a556c0a33acebe9ae",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 126460,
        "upload_time": "2021-10-06T01:04:06",
        "upload_time_iso_8601": "2021-10-06T01:04:06.609414Z",
        "url": "https://files.pythonhosted.org/packages/94/bc/471c3fc569818a977f6ac495e9a4b0dd121ffc97f9c030b945be7b0d3e11/google_pso_data_validator-1.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b661072de519f76487069cb1ebcc3abe9a635ad184d2624ac59a6f08215fdd8",
          "md5": "778d6665deec24537c3c5b100e780fef",
          "sha256": "ea9ce8ebebd1f2252f1f3c01ad1f26d24d6aa9465f3f842ab42ac30b92dc7caa"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "778d6665deec24537c3c5b100e780fef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 96637,
        "upload_time": "2021-10-06T01:04:08",
        "upload_time_iso_8601": "2021-10-06T01:04:08.501881Z",
        "url": "https://files.pythonhosted.org/packages/1b/66/1072de519f76487069cb1ebcc3abe9a635ad184d2624ac59a6f08215fdd8/google-pso-data-validator-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58d2502fb886e87a546241430c5b0981a79cecd5402bb9c7eb677b9ed24cb226",
          "md5": "923961993f8d47f426db95284faa4310",
          "sha256": "ac3fa5547cd25a157e2a80fe81189a01fdf85a1b4ae4e7d53400c222fe3f71c3"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-1.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "923961993f8d47f426db95284faa4310",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 127453,
        "upload_time": "2021-10-19T16:35:41",
        "upload_time_iso_8601": "2021-10-19T16:35:41.416278Z",
        "url": "https://files.pythonhosted.org/packages/58/d2/502fb886e87a546241430c5b0981a79cecd5402bb9c7eb677b9ed24cb226/google_pso_data_validator-1.5.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e52c0a3a7777e2d3da60e972ce653469938632fcb7dfa5ae3c891b5c7d409be",
          "md5": "f251958eeaf39cf9fc4666192483718b",
          "sha256": "8c5aaa3d3e9105e068e76c68d74f94c5c1dbe8a5e5a0a88e37f5654c336856f8"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f251958eeaf39cf9fc4666192483718b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 97585,
        "upload_time": "2021-10-19T16:35:43",
        "upload_time_iso_8601": "2021-10-19T16:35:43.824883Z",
        "url": "https://files.pythonhosted.org/packages/7e/52/c0a3a7777e2d3da60e972ce653469938632fcb7dfa5ae3c891b5c7d409be/google-pso-data-validator-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a5feeecff94e9f45dc2949cea58ff3d21e0a2fab68f29647cf4a1a2858e523e",
          "md5": "ac3bbc129b738af9f449bbd8f9c6b771",
          "sha256": "740a43b06a5398b4b3d4f0a5ba1efff3dd19dfe836bd0ac96b8444326a5cfae7"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-1.6.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac3bbc129b738af9f449bbd8f9c6b771",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 127736,
        "upload_time": "2021-12-01T22:13:36",
        "upload_time_iso_8601": "2021-12-01T22:13:36.979161Z",
        "url": "https://files.pythonhosted.org/packages/2a/5f/eeecff94e9f45dc2949cea58ff3d21e0a2fab68f29647cf4a1a2858e523e/google_pso_data_validator-1.6.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8584f907de37b0cd2dab6a5ac4d8b908a161bbc70111dd6ef1f23bac68ab0dac",
          "md5": "d171b7205d7451a2cf6b722ecdeda2af",
          "sha256": "1f96eccd54e460841c3d0b03cb1da2c20082658a8a16becf97a081d03ab47072"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-1.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d171b7205d7451a2cf6b722ecdeda2af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 97847,
        "upload_time": "2021-12-01T22:13:38",
        "upload_time_iso_8601": "2021-12-01T22:13:38.292451Z",
        "url": "https://files.pythonhosted.org/packages/85/84/f907de37b0cd2dab6a5ac4d8b908a161bbc70111dd6ef1f23bac68ab0dac/google-pso-data-validator-1.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98327f7768142ccb038aca52a29014d220e35de97805762d104b34e54b7c3d8b",
          "md5": "76bbfa62e51c59c73941ea9ec885f363",
          "sha256": "54096ef8fab71a274ecdd4f264791aea377b7ea80ad87421b0660c93d1857f1b"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-1.7.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76bbfa62e51c59c73941ea9ec885f363",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 135206,
        "upload_time": "2022-03-23T13:32:03",
        "upload_time_iso_8601": "2022-03-23T13:32:03.713873Z",
        "url": "https://files.pythonhosted.org/packages/98/32/7f7768142ccb038aca52a29014d220e35de97805762d104b34e54b7c3d8b/google_pso_data_validator-1.7.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b688d4734a963733cbf45a22d31574bea1a247a39cc64ec70ee5af1a915473c",
          "md5": "4ed4878fc1efc48d972a900d1c494c75",
          "sha256": "b63e25e7a51a9d6664377d7e60fd67ac5f1c971365b5660a23c8d06c6e6de54c"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-1.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4ed4878fc1efc48d972a900d1c494c75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 104501,
        "upload_time": "2022-03-23T13:32:05",
        "upload_time_iso_8601": "2022-03-23T13:32:05.576444Z",
        "url": "https://files.pythonhosted.org/packages/3b/68/8d4734a963733cbf45a22d31574bea1a247a39cc64ec70ee5af1a915473c/google-pso-data-validator-1.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ddf298cd81f389b8bab0561548619314155d313de6e987c10c29683fc04a872",
          "md5": "3ae07b34889fb40ad99ffdf4df24474b",
          "sha256": "20a04121c2e2d4ccf36dea0897389cbeadf00e5dfab1db23b0f2ec7989cbcbd4"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-1.7.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ae07b34889fb40ad99ffdf4df24474b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 140146,
        "upload_time": "2022-04-14T19:25:24",
        "upload_time_iso_8601": "2022-04-14T19:25:24.481610Z",
        "url": "https://files.pythonhosted.org/packages/6d/df/298cd81f389b8bab0561548619314155d313de6e987c10c29683fc04a872/google_pso_data_validator-1.7.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdf1e2028c3a6d6858a30e471ceb1e46fa04d07580014007381ccb5c7c59fc3c",
          "md5": "ecff1142ab8bb654163147b84e6353d2",
          "sha256": "40ddfe20e132632effe7fb3fe4db428d23121b10c67fde2082e0734bd91bde00"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-1.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ecff1142ab8bb654163147b84e6353d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 110026,
        "upload_time": "2022-04-14T19:25:26",
        "upload_time_iso_8601": "2022-04-14T19:25:26.248911Z",
        "url": "https://files.pythonhosted.org/packages/fd/f1/e2028c3a6d6858a30e471ceb1e46fa04d07580014007381ccb5c7c59fc3c/google-pso-data-validator-1.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b47766a5e9c2220a27a6127664c128ff2dd23ab7c986753307d91323bab37b07",
          "md5": "bd50fef47fced0aaa93bc15f81d4c58a",
          "sha256": "1537e2b27970336ebbb86462a1702ef676a804f648f0ba814779985e7ba1830c"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-1.7.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd50fef47fced0aaa93bc15f81d4c58a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 143926,
        "upload_time": "2022-05-13T00:48:06",
        "upload_time_iso_8601": "2022-05-13T00:48:06.085505Z",
        "url": "https://files.pythonhosted.org/packages/b4/77/66a5e9c2220a27a6127664c128ff2dd23ab7c986753307d91323bab37b07/google_pso_data_validator-1.7.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "195a1dd7bc9f9fb03062e8e5759966fbc78aa23da218ede5b4c630f5f849e1d0",
          "md5": "7afe53180c8309f420eb9d5e4008c9e9",
          "sha256": "c6b38ac462181937c0866c970281eebb810d297cdae69158dd5bf8954eed7326"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-1.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7afe53180c8309f420eb9d5e4008c9e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 113346,
        "upload_time": "2022-05-13T00:48:07",
        "upload_time_iso_8601": "2022-05-13T00:48:07.506687Z",
        "url": "https://files.pythonhosted.org/packages/19/5a/1dd7bc9f9fb03062e8e5759966fbc78aa23da218ede5b4c630f5f849e1d0/google-pso-data-validator-1.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "800e08060353e33b820d47d6ae3c1723f48d4824525a67878b1c3e30265550ee",
          "md5": "c49e1816e420479f42af5743961a7f60",
          "sha256": "dee766f0296b50c1d4faf887f200af116f6cc6d31ac44bda0c7b923926cdd5a1"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-2.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c49e1816e420479f42af5743961a7f60",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 144687,
        "upload_time": "2022-05-27T14:54:50",
        "upload_time_iso_8601": "2022-05-27T14:54:50.289127Z",
        "url": "https://files.pythonhosted.org/packages/80/0e/08060353e33b820d47d6ae3c1723f48d4824525a67878b1c3e30265550ee/google_pso_data_validator-2.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f3ce1f85423b29d6d41f1078504353dbce75ef76088dcec12495b310763b7aa",
          "md5": "e8ed7d35e3230216c64131416a0ad20e",
          "sha256": "d2468c10841a0dd467db371d0e9217edaa2b37217ac9f0da161d1db00062f98d"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e8ed7d35e3230216c64131416a0ad20e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 112729,
        "upload_time": "2022-05-27T14:54:51",
        "upload_time_iso_8601": "2022-05-27T14:54:51.900358Z",
        "url": "https://files.pythonhosted.org/packages/5f/3c/e1f85423b29d6d41f1078504353dbce75ef76088dcec12495b310763b7aa/google-pso-data-validator-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ccd05a6e13866ee72250e14299bd60e2d76f1e37f3fc3b1e6d0cf33581e1d95",
          "md5": "775c72ebaf447c958e1bf3536308803c",
          "sha256": "1e54d06fe31d2eb4ab9cda099e14b4545c9821035ba2421728603596515ad8d5"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-2.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "775c72ebaf447c958e1bf3536308803c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 144776,
        "upload_time": "2022-06-11T12:25:54",
        "upload_time_iso_8601": "2022-06-11T12:25:54.417684Z",
        "url": "https://files.pythonhosted.org/packages/6c/cd/05a6e13866ee72250e14299bd60e2d76f1e37f3fc3b1e6d0cf33581e1d95/google_pso_data_validator-2.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fef86a5f676b40e9546bff5fbe53cac9df3653cc29c42c326a8e6b1b0ded39fe",
          "md5": "d0bc4f48ba3072d07cf21496a9cb194a",
          "sha256": "add5215555ac7217e208ee7232b1cf8e3e4591ce0f453756e7eba6041b668b74"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d0bc4f48ba3072d07cf21496a9cb194a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 112823,
        "upload_time": "2022-06-11T12:25:56",
        "upload_time_iso_8601": "2022-06-11T12:25:56.191527Z",
        "url": "https://files.pythonhosted.org/packages/fe/f8/6a5f676b40e9546bff5fbe53cac9df3653cc29c42c326a8e6b1b0ded39fe/google-pso-data-validator-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "796570fbc48ffca23194ce78df0bed2ac0ca39c7844239b3fa58dca5cc0b37a6",
          "md5": "05471a6cc02864049699b90cd55950c3",
          "sha256": "2747187499c2e63a953041ebcd016dcb757aea35e83aa731fe40bcb52ea71954"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-2.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05471a6cc02864049699b90cd55950c3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 145446,
        "upload_time": "2022-07-14T20:53:02",
        "upload_time_iso_8601": "2022-07-14T20:53:02.278269Z",
        "url": "https://files.pythonhosted.org/packages/79/65/70fbc48ffca23194ce78df0bed2ac0ca39c7844239b3fa58dca5cc0b37a6/google_pso_data_validator-2.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0e3332d3e7fce01eaeda43c9b182a548f35dd2ef51c7a6275182a811d4649e3",
          "md5": "a7262732a1a1cc7a232601491b6c1b82",
          "sha256": "329ab9b267afb61feebdae73942d0356ad73f27970d3dbb37f6638a46eb79348"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7262732a1a1cc7a232601491b6c1b82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 113161,
        "upload_time": "2022-07-14T20:53:04",
        "upload_time_iso_8601": "2022-07-14T20:53:04.324395Z",
        "url": "https://files.pythonhosted.org/packages/e0/e3/332d3e7fce01eaeda43c9b182a548f35dd2ef51c7a6275182a811d4649e3/google-pso-data-validator-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c707ff0c541a2e2552e6cb3ea4f69e58c1bef8fd5d7023472a65407d40634ba9",
          "md5": "9bea7b499751f5b84793c38064f06a33",
          "sha256": "c343f9ad4ad9131715467c130557ad79c57eb233d8016f37ca75e62e46e5628e"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-2.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9bea7b499751f5b84793c38064f06a33",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 146093,
        "upload_time": "2022-08-29T22:28:55",
        "upload_time_iso_8601": "2022-08-29T22:28:55.064789Z",
        "url": "https://files.pythonhosted.org/packages/c7/07/ff0c541a2e2552e6cb3ea4f69e58c1bef8fd5d7023472a65407d40634ba9/google_pso_data_validator-2.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8987f71f8a56f1c0945975ddead83e2a500ef9a2fb30ba3514b5a299a4620df3",
          "md5": "86b5daad3f643be5fa7380de4e6e0e58",
          "sha256": "4fbe76bc1edd254e9f2b63a9ce1de08dc7b944707f3e61afb69089a934c2b7cf"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "86b5daad3f643be5fa7380de4e6e0e58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 113850,
        "upload_time": "2022-08-29T22:28:56",
        "upload_time_iso_8601": "2022-08-29T22:28:56.943977Z",
        "url": "https://files.pythonhosted.org/packages/89/87/f71f8a56f1c0945975ddead83e2a500ef9a2fb30ba3514b5a299a4620df3/google-pso-data-validator-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d962fbac607152ccaf0aca906e7d2a9ad8bbf1071705225a5dbbc332fc36a260",
          "md5": "c83d01ec8f5f6ea023677f8bc704e65f",
          "sha256": "cbaa891c5c04b7d1389a554f6eb8c2fc2e108e12742efeedb95b5f8da056ffdf"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-2.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c83d01ec8f5f6ea023677f8bc704e65f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 146620,
        "upload_time": "2022-09-15T15:16:57",
        "upload_time_iso_8601": "2022-09-15T15:16:57.355453Z",
        "url": "https://files.pythonhosted.org/packages/d9/62/fbac607152ccaf0aca906e7d2a9ad8bbf1071705225a5dbbc332fc36a260/google_pso_data_validator-2.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8252f917aac76308c916bd9e4cfa914d4490d3bd8275f8eb6271506aadc8dccb",
          "md5": "83258885be03b453acfe9faa62079876",
          "sha256": "ed0bb02a25b8baf980f8dc22d5e487b3f016a46f75137d03b8c8bfe89de12d01"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-2.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "83258885be03b453acfe9faa62079876",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 114298,
        "upload_time": "2022-09-15T15:16:58",
        "upload_time_iso_8601": "2022-09-15T15:16:58.755161Z",
        "url": "https://files.pythonhosted.org/packages/82/52/f917aac76308c916bd9e4cfa914d4490d3bd8275f8eb6271506aadc8dccb/google-pso-data-validator-2.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a7324fee2032d0fe032197f29e7c07f56de21628b88612c70bd043928cd51b8",
          "md5": "c940d979c4d46dbfceeae1a9c41395c7",
          "sha256": "0a7e851ea130ac0ebd8e719de4ec84d48df6f93a87f239e749e631e98ac2c9c4"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-2.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c940d979c4d46dbfceeae1a9c41395c7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 147516,
        "upload_time": "2022-10-06T20:26:52",
        "upload_time_iso_8601": "2022-10-06T20:26:52.763812Z",
        "url": "https://files.pythonhosted.org/packages/4a/73/24fee2032d0fe032197f29e7c07f56de21628b88612c70bd043928cd51b8/google_pso_data_validator-2.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "882146059b703fc157f0930a32d7a5aff4ae8e84da8025caa8d65305edec0ac8",
          "md5": "ed7e5c58cbca1418b84c6d02ef8f262a",
          "sha256": "5a5ae2af19a3f9e8ad21cb29e353f60005a9291fa042f1498eb7756bb10b8ef1"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-2.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ed7e5c58cbca1418b84c6d02ef8f262a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 115687,
        "upload_time": "2022-10-06T20:26:54",
        "upload_time_iso_8601": "2022-10-06T20:26:54.400707Z",
        "url": "https://files.pythonhosted.org/packages/88/21/46059b703fc157f0930a32d7a5aff4ae8e84da8025caa8d65305edec0ac8/google-pso-data-validator-2.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f8bbf5ef846ad5947b34211f01e82f50cabf0a2e5ecb2ad5782d6117e87a4f8",
          "md5": "79b5a4f98c3d1e4d576e8e79d8b39272",
          "sha256": "e3496dec72b874e3ac0103222df23800e9106aca0e8cedadf1598572b62052f0"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-2.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79b5a4f98c3d1e4d576e8e79d8b39272",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 147706,
        "upload_time": "2022-10-18T21:33:07",
        "upload_time_iso_8601": "2022-10-18T21:33:07.395067Z",
        "url": "https://files.pythonhosted.org/packages/2f/8b/bf5ef846ad5947b34211f01e82f50cabf0a2e5ecb2ad5782d6117e87a4f8/google_pso_data_validator-2.5.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ded74a80ae88e0ca16b57714ac4f877cf021ee246ba94d37e3f5a9b3089141c3",
          "md5": "b0d8603e6df48727ff065457d8fef480",
          "sha256": "04a14344d36039b65bece3abce2f9ab6eff77782ee8f1160cbb8a1e1dc3c4d1f"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-2.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b0d8603e6df48727ff065457d8fef480",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 116024,
        "upload_time": "2022-10-18T21:33:08",
        "upload_time_iso_8601": "2022-10-18T21:33:08.835022Z",
        "url": "https://files.pythonhosted.org/packages/de/d7/4a80ae88e0ca16b57714ac4f877cf021ee246ba94d37e3f5a9b3089141c3/google-pso-data-validator-2.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55a872a780d97823305f7459777a96d54d024210171576fcc1c539d09e57d7a9",
          "md5": "e52bb22b9b349b6e6c9bcd21f3860d25",
          "sha256": "cb121eac491629bb40ad3f8811aca590032d9aa6425f77974cffa1dd1055b5f1"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-2.6.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e52bb22b9b349b6e6c9bcd21f3860d25",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 145064,
        "upload_time": "2022-11-30T21:25:28",
        "upload_time_iso_8601": "2022-11-30T21:25:28.240789Z",
        "url": "https://files.pythonhosted.org/packages/55/a8/72a780d97823305f7459777a96d54d024210171576fcc1c539d09e57d7a9/google_pso_data_validator-2.6.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd597e12e584055aae776fa6dec1f01143bb4c686fa4cacd801d5e9592697ed2",
          "md5": "89a2bf5809bf4d06570fb1e662cbbde0",
          "sha256": "4e7a4e5d06353f2d76f749c2e1f5ddb3e534ed559842e754e844ee4a8d1102bf"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-2.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "89a2bf5809bf4d06570fb1e662cbbde0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 113760,
        "upload_time": "2022-11-30T21:25:29",
        "upload_time_iso_8601": "2022-11-30T21:25:29.783019Z",
        "url": "https://files.pythonhosted.org/packages/bd/59/7e12e584055aae776fa6dec1f01143bb4c686fa4cacd801d5e9592697ed2/google-pso-data-validator-2.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41e04797291df39ed77685e2db320e74e6b6c6372e00dea178188663aea0cfcc",
          "md5": "cdf314882fa0574ef244fe3302b21179",
          "sha256": "c6fbc044bd88a97de2868d32c112dc1b1b236e66ee0391ebbe17b9ec71f66abc"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-2.7.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cdf314882fa0574ef244fe3302b21179",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 149921,
        "upload_time": "2023-01-07T18:07:36",
        "upload_time_iso_8601": "2023-01-07T18:07:36.000335Z",
        "url": "https://files.pythonhosted.org/packages/41/e0/4797291df39ed77685e2db320e74e6b6c6372e00dea178188663aea0cfcc/google_pso_data_validator-2.7.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9f26f881de8e9cf58311a1290d9a7be96f00a9791fc44243dccc6ef223c3788",
          "md5": "fc01f9a7742fd18e169cc98265ae6c72",
          "sha256": "1a6608d92326d20bf07544268ef1ccf4b01e831f3a0fa9875fb326f584886d12"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-2.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fc01f9a7742fd18e169cc98265ae6c72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 122941,
        "upload_time": "2023-01-07T18:07:37",
        "upload_time_iso_8601": "2023-01-07T18:07:37.575093Z",
        "url": "https://files.pythonhosted.org/packages/d9/f2/6f881de8e9cf58311a1290d9a7be96f00a9791fc44243dccc6ef223c3788/google-pso-data-validator-2.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "334152573652a80fc912816051b18809e0af1a80672ff18d4b63a59534e6d26e",
          "md5": "9c0512217bebb25b7f55dfeaea2e2700",
          "sha256": "3c6e4c68dc86fabdc8dd30c757a9dac9099bfefae40d9fee611adc31930b05a2"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-2.8.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c0512217bebb25b7f55dfeaea2e2700",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 151191,
        "upload_time": "2023-01-19T20:29:47",
        "upload_time_iso_8601": "2023-01-19T20:29:47.923475Z",
        "url": "https://files.pythonhosted.org/packages/33/41/52573652a80fc912816051b18809e0af1a80672ff18d4b63a59534e6d26e/google_pso_data_validator-2.8.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6ebfeb55c2a262f50e1c07fe2bd616a92622f30e8e01a87ac45210fa0d933b3",
          "md5": "649c2abd8cd3507d3df2c7dbeea7bc84",
          "sha256": "839230fa958f324601056dc7734df7bf1848310c3799c8a2a366b6939dfda221"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-2.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "649c2abd8cd3507d3df2c7dbeea7bc84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 124419,
        "upload_time": "2023-01-19T20:29:49",
        "upload_time_iso_8601": "2023-01-19T20:29:49.279483Z",
        "url": "https://files.pythonhosted.org/packages/a6/eb/feb55c2a262f50e1c07fe2bd616a92622f30e8e01a87ac45210fa0d933b3/google-pso-data-validator-2.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "238d08ecc356c51049d1d58fd54a5d263b67ec9388836a361f65ddf095c69803",
          "md5": "6ce63b03cda501ba3f1659d54ccf7e44",
          "sha256": "d16032028171baff9512163fef387a65104bddc8593dcbf0827fa5d18f5d9755"
        },
        "downloads": -1,
        "filename": "google_pso_data_validator-2.9.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ce63b03cda501ba3f1659d54ccf7e44",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 158956,
        "upload_time": "2023-02-16T20:58:00",
        "upload_time_iso_8601": "2023-02-16T20:58:00.600463Z",
        "url": "https://files.pythonhosted.org/packages/23/8d/08ecc356c51049d1d58fd54a5d263b67ec9388836a361f65ddf095c69803/google_pso_data_validator-2.9.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3086cda91ba07a2d187818713155abefc0c2ad4b63e395ba7689f206e23491b1",
          "md5": "3a624009a47cd8e34d73fb27a8ec092a",
          "sha256": "0b07143db5cfdf5a689587952905853e0ef17fae43891fbeef32d9619194a82a"
        },
        "downloads": -1,
        "filename": "google-pso-data-validator-2.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3a624009a47cd8e34d73fb27a8ec092a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 132742,
        "upload_time": "2023-02-16T20:58:02",
        "upload_time_iso_8601": "2023-02-16T20:58:02.119468Z",
        "url": "https://files.pythonhosted.org/packages/30/86/cda91ba07a2d187818713155abefc0c2ad4b63e395ba7689f206e23491b1/google-pso-data-validator-2.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "238d08ecc356c51049d1d58fd54a5d263b67ec9388836a361f65ddf095c69803",
        "md5": "6ce63b03cda501ba3f1659d54ccf7e44",
        "sha256": "d16032028171baff9512163fef387a65104bddc8593dcbf0827fa5d18f5d9755"
      },
      "downloads": -1,
      "filename": "google_pso_data_validator-2.9.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6ce63b03cda501ba3f1659d54ccf7e44",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 158956,
      "upload_time": "2023-02-16T20:58:00",
      "upload_time_iso_8601": "2023-02-16T20:58:00.600463Z",
      "url": "https://files.pythonhosted.org/packages/23/8d/08ecc356c51049d1d58fd54a5d263b67ec9388836a361f65ddf095c69803/google_pso_data_validator-2.9.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3086cda91ba07a2d187818713155abefc0c2ad4b63e395ba7689f206e23491b1",
        "md5": "3a624009a47cd8e34d73fb27a8ec092a",
        "sha256": "0b07143db5cfdf5a689587952905853e0ef17fae43891fbeef32d9619194a82a"
      },
      "downloads": -1,
      "filename": "google-pso-data-validator-2.9.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3a624009a47cd8e34d73fb27a8ec092a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 132742,
      "upload_time": "2023-02-16T20:58:02",
      "upload_time_iso_8601": "2023-02-16T20:58:02.119468Z",
      "url": "https://files.pythonhosted.org/packages/30/86/cda91ba07a2d187818713155abefc0c2ad4b63e395ba7689f206e23491b1/google-pso-data-validator-2.9.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}