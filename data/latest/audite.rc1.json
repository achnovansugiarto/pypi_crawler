{
  "info": {
    "author": "Chris Frank",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Audite: instant change feeds for SQLite\n\nAudite uses SQL triggers to add a transactional change feed to any SQLite\ndatabase. It gives you a totally-ordered audit history of all changes to your\ndata, without touching your application code or running an extra process.\n\n## Use cases\n- Track who changed what, when\n- Restore previous versions of changed rows\n- Replicate data to external systems by streaming the change feed\n\n## Quick start\n\nLet's add a changefeed to `todo.db`, a SQLite database with the following schema:\n\n```sh\nsqlite3 todo.db \"CREATE TABLE project (id INTEGER PRIMARY KEY, name TEXT)\"\nsqlite3 todo.db \"CREATE TABLE task (\n    name TEXT PRIMARY KEY,\n    project_id INTEGER REFERENCES project (project_id),\n    done BOOLEAN NOT NULL DEFAULT FALSE)\"\n```\n\n1. **Install audite on your sytem**\n    ```sh\n    python3 -m pip install audite\n    ```\n2. **Enable audite on your database**\n    ```sh\n    python3 -m audite todo.db\n    ```\n\nDone! From now on, any process can `INSERT`, `UPDATE`, and `DELETE` from your\ndatabase as usual, and audite's triggers will store the results as [change\nevents](#event-schema) in the `audite_changefeed` table. All (and only)\ncommitted transactions will appear in the change feed.\n\n## Modfying data and querying the change feed\n\nWe'll add a project and two tasks...\n\n```sh\nsqlite3 todo.db \"INSERT INTO project (id, name) VALUES (1, 'goals')\"\nsqlite3 todo.db \"INSERT INTO task (project_id, name) VALUES (1, 'try audite'), (1, 'profit')\"\n```\n\ncross one task off the list...\n```sh\nsqlite3 todo.db \"UPDATE task SET done = TRUE WHERE name = 'try audite'\"\n```\n\nand cancel the other:\n```sh\nsqlite3 todo.db \"DELETE FROM task WHERE name = 'profit'\"\n```\n\n### Now let's see what changed:\n```sh\nsqlite3 todo.db \"SELECT * FROM audite_changefeed ORDER BY id\"\n```\n\nYou should get back something like this:\n```\nid  source   subject     type             time        specversion  data                                                                                                     \n--  -------  ----------  ---------------  ----------  -----------  ---------------------------------------------------------------------------------------------------------\n1   project  1           project.created  1669730365  1.0          {\"new\":{\"name\":\"goals\",\"id\":1}}                                                                          \n2   task     try audite  task.created     1669730374  1.0          {\"new\":{\"project_id\":1,\"done\":0,\"name\":\"try audite\"}}                                                    \n3   task     profit      task.created     1669730374  1.0          {\"new\":{\"project_id\":1,\"done\":0,\"name\":\"profit\"}}                                                        \n4   task     try audite  task.updated     1669730381  1.0          {\"new\":{\"project_id\":1,\"done\":1,\"name\":\"try audite\"},\"old\":{\"project_id\":1,\"done\":0,\"name\":\"try audite\"}}\n5   task     profit      task.deleted     1669730386  1.0          {\"old\":{\"project_id\":1,\"done\":0,\"name\":\"profit\"}}                                                        \n```\n\n## Event Schema\nThe event schema follows the [CloudEvents\nspec](https://github.com/cloudevents/spec) so that other systems can easily\nhandle events from yours.\n\n- `id` uniquely identifies the event with a monotonically increasing integer.\n- `source` is name of the database table that changed.\n- `subject` is the primary key of the database row that changed.\n- `type` describes the type of change: `*.created`, `*.updated`, or `*.deleted`.\n- `time` is the Unix time when the change was committed.\n- `specversion` is the verion of the [CloudEvents spec](https://github.com/cloudevents/spec) in use, currently `1.0`.\n- `data` is a JSON snapshot of the row that changed. The `data.new` object holds the post-change values and is present for `*.created` and `*.updated` events. The `data.old` object holds pre-change values and is present for `*.updated` and `*.deleted` events.\n\n**Note:** Audite stores `id` and `time` as integers so that SQLite can store\nand sort them efficiently, but the CloudEvents spec mandates strings. To query\nevents that conform exactly to the [CloudEvents JSON\nspec](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/formats/json-format.md),\nselect from the `audite_cloudevent` view instead of the underlying\n`audite_changefeed` table:\n\n```sh\nsqlite3 todo.db \"SELECT cloudevent FROM audite_cloudevent ORDER BY id\"\n```\n```\ncloudevent                                                                                                                                                                                                                                                                                                            \n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n{\"id\":\"1\",\"sequence\":\"00000000000000000001\",\"source\":\"project\",\"subject\":\"1\",\"type\":\"project.created\",\"time\":\"2022-11-29T13:59:25+00:00\",\"specversion\":\"1.0\",\"datacontenttype\":\"application/json\",\"data\":{\"new\":{\"name\":\"goals\",\"id\":1}}}                                                                             \n{\"id\":\"2\",\"sequence\":\"00000000000000000002\",\"source\":\"task\",\"subject\":\"try audite\",\"type\":\"task.created\",\"time\":\"2022-11-29T13:59:34+00:00\",\"specversion\":\"1.0\",\"datacontenttype\":\"application/json\",\"data\":{\"new\":{\"project_id\":1,\"done\":0,\"name\":\"try audite\"}}}                                                    \n{\"id\":\"3\",\"sequence\":\"00000000000000000003\",\"source\":\"task\",\"subject\":\"profit\",\"type\":\"task.created\",\"time\":\"2022-11-29T13:59:34+00:00\",\"specversion\":\"1.0\",\"datacontenttype\":\"application/json\",\"data\":{\"new\":{\"project_id\":1,\"done\":0,\"name\":\"profit\"}}}                                                            \n{\"id\":\"4\",\"sequence\":\"00000000000000000004\",\"source\":\"task\",\"subject\":\"try audite\",\"type\":\"task.updated\",\"time\":\"2022-11-29T13:59:41+00:00\",\"specversion\":\"1.0\",\"datacontenttype\":\"application/json\",\"data\":{\"new\":{\"project_id\":1,\"done\":1,\"name\":\"try audite\"},\"old\":{\"project_id\":1,\"done\":0,\"name\":\"try audite\"}}}\n{\"id\":\"5\",\"sequence\":\"00000000000000000005\",\"source\":\"task\",\"subject\":\"profit\",\"type\":\"task.deleted\",\"time\":\"2022-11-29T13:59:46+00:00\",\"specversion\":\"1.0\",\"datacontenttype\":\"application/json\",\"data\":{\"old\":{\"project_id\":1,\"done\":0,\"name\":\"profit\"}}}                                                            \n```\n\n## Handling database schema changes\nWhen your database schema changes, you need to re-run audite for the triggers to\npick up the latest fields. It's safe to re-run audite multiple times, including\nas part of your schema migration scripts or even on app startup.\n\nWhen your database schema hasn't changed, then re-running audite does nothing.\nWhen your schema _has_ changed, then re-running audite rebuilds the triggers to\nwrite to the change feed with the latest schema.\n\n## Auditing only particular tables\nBy default, audite tracks all tables in the target database. But you can specify\ntables to track via the `--table` argument:\n\n```sh\npython3 -m audite blog.db --table post --table comment\n```\n\n## Dependencies\nAudite is a python package with no dependencies. You need Python >= 3.7 to\nenable audite on a database, but because \"enable audite on a database\" just\nmeans \"add some SQL triggers,\" you don't need Python after the triggers are\ninstalled.\n\n\n## Prior Art\n- [litestream](https://litestream.io/blog/why-i-built-litestream/) by\n  @benbjohnson makes a convincing case for using SQLite in production.\n- [supa_audit](https://github.com/supabase/supa_audit) by @supabase\n  demonstrates how easy change feeds can be in Postgres.\n- [marmot](https://github.com/maxpert/marmot) by @maxpert uses schema\n  introspection and triggers that directly inspired the approach here.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/chrisfrank/audite",
    "keywords": "sqlite,audit,history,change-data-capture,change feed",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "audite",
    "package_url": "https://pypi.org/project/audite/",
    "platform": null,
    "project_url": "https://pypi.org/project/audite/",
    "project_urls": {
      "Bug Reports": "https://github.com/chrisfrank/audite",
      "Homepage": "https://github.com/chrisfrank/audite",
      "Source": "https://github.com/chrisfrank/audite"
    },
    "release_url": "https://pypi.org/project/audite/0.4.5/",
    "requires_dist": null,
    "requires_python": ">=3.7, <4",
    "summary": "Instant data auditing for SQLite",
    "version": "0.4.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16058241,
  "releases": {
    "0.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94464f3c47fe89c0da7693d0ea7d1f616b189fb4764d6d3d4cfe32ddf0ed3463",
          "md5": "f54988af2e56be73d8a937fe1bb21ec5",
          "sha256": "09860b19b3a5629d82767300b16401ad3318b7a4724243ea1763916939cebfae"
        },
        "downloads": -1,
        "filename": "audite-0.4.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f54988af2e56be73d8a937fe1bb21ec5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 7828,
        "upload_time": "2022-12-10T14:28:33",
        "upload_time_iso_8601": "2022-12-10T14:28:33.535806Z",
        "url": "https://files.pythonhosted.org/packages/94/46/4f3c47fe89c0da7693d0ea7d1f616b189fb4764d6d3d4cfe32ddf0ed3463/audite-0.4.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59d3b51b0b63f0dfb89b688218a7011ce85862721acb0ca87763d0b55fc3b2d6",
          "md5": "85f17ae71911351fe4245d6459099d6a",
          "sha256": "f0315132438363109c8303d0021ecfb39f13c2ec9cd75418c470e2600f0827c4"
        },
        "downloads": -1,
        "filename": "audite-0.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "85f17ae71911351fe4245d6459099d6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 7679,
        "upload_time": "2022-12-10T14:28:35",
        "upload_time_iso_8601": "2022-12-10T14:28:35.022542Z",
        "url": "https://files.pythonhosted.org/packages/59/d3/b51b0b63f0dfb89b688218a7011ce85862721acb0ca87763d0b55fc3b2d6/audite-0.4.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94464f3c47fe89c0da7693d0ea7d1f616b189fb4764d6d3d4cfe32ddf0ed3463",
        "md5": "f54988af2e56be73d8a937fe1bb21ec5",
        "sha256": "09860b19b3a5629d82767300b16401ad3318b7a4724243ea1763916939cebfae"
      },
      "downloads": -1,
      "filename": "audite-0.4.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f54988af2e56be73d8a937fe1bb21ec5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 7828,
      "upload_time": "2022-12-10T14:28:33",
      "upload_time_iso_8601": "2022-12-10T14:28:33.535806Z",
      "url": "https://files.pythonhosted.org/packages/94/46/4f3c47fe89c0da7693d0ea7d1f616b189fb4764d6d3d4cfe32ddf0ed3463/audite-0.4.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "59d3b51b0b63f0dfb89b688218a7011ce85862721acb0ca87763d0b55fc3b2d6",
        "md5": "85f17ae71911351fe4245d6459099d6a",
        "sha256": "f0315132438363109c8303d0021ecfb39f13c2ec9cd75418c470e2600f0827c4"
      },
      "downloads": -1,
      "filename": "audite-0.4.5.tar.gz",
      "has_sig": false,
      "md5_digest": "85f17ae71911351fe4245d6459099d6a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 7679,
      "upload_time": "2022-12-10T14:28:35",
      "upload_time_iso_8601": "2022-12-10T14:28:35.022542Z",
      "url": "https://files.pythonhosted.org/packages/59/d3/b51b0b63f0dfb89b688218a7011ce85862721acb0ca87763d0b55fc3b2d6/audite-0.4.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}