{
  "info": {
    "author": "Nat Noordanus",
    "author_email": "n@natn.me",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "************\nPoe the Poet\n************\n\nA task runner that works well with poetry.\n\n.. role:: sh(code)\n   :language: sh\n.. role:: bash(code)\n   :language: bash\n.. role:: fish(code)\n   :language: fish\n.. role:: zsh(code)\n   :language: zsh\n.. role:: toml(code)\n   :language: toml\n.. role:: python(code)\n   :language: python\n.. |•| unicode:: ✅ 0xA0 0xA0\n   :trim:\n\nFeatures\n========\n\n|•| Straight forward declaration of project tasks in your pyproject.toml (kind of like npm scripts)\n\n|•| Task are run in poetry's virtualenv (or another env you specify)\n\n|•| Shell completion of task names (and global options too for zsh)\n\n|•| Can be used standalone or as a poetry plugin\n\n|•| Tasks can be commands (with or without a shell) or references to python functions (like tool.poetry.scripts)\n\n|•| Short and sweet commands with extra arguments passed to the task :bash:`poe [options] task [task_args]`, or you can define arguments explicitly.\n\n|•| Tasks can specify and reference environment variables as if they were evaluated by a shell\n\n|•| Tasks are self documenting, with optional help messages (just run poe without arguments)\n\n|•| Tasks can be defined as a sequence of other tasks\n\n|•| Works with .env files\n\n\nInstallation\n============\n\n1.\n  Install the CLI\n\n  .. code-block:: bash\n\n    pipx install poethepoet\n\n  Or use pip to install into any python environment\n\n  .. code-block:: bash\n\n    pip install poethepoet\n\n2.\n  Or into your project (so it works inside poetry shell):\n\n  .. code-block:: bash\n\n    poetry add --group dev poethepoet\n\n3.\n  Or into poetry as a plugin (requires poetry >= 1.2)\n\n  .. code-block:: bash\n\n    poetry self add 'poethepoet[poetry_plugin]'\n\nEnable tab completion for your shell\n------------------------------------\n\nPoe comes with tab completion scripts for bash, zsh, and fish to save you keystrokes.\nHow to install them will depend on your shell setup.\n\nZsh\n~~~\n\n.. code-block:: zsh\n\n  # oh-my-zsh\n  mkdir -p ~/.oh-my-zsh/completions\n  poe _zsh_completion > ~/.oh-my-zsh/completions/_poe\n\n  # without oh-my-zsh\n  mkdir -p ~/.zfunc/\n  poe _zsh_completion > ~/.zfunc/_poetry\n\nNote that you'll need to start a new shell for the new completion script to be loaded.\nIf it still doesn't work try adding a call to :bash:`compinit` to the end of your zshrc\nfile.\n\nBash\n~~~~\n\n.. code-block:: bash\n\n  # System bash\n  poe _bash_completion > /etc/bash_completion.d/poe.bash-completion\n\n  # Homebrew bash\n  poe _bash_completion > $(brew --prefix)/etc/bash_completion.d/poe.bash-completion\n\n\nHow to ensure installed bash completions are enabled may vary depending on your system.\n\nFish\n~~~~\n\n.. code-block:: fish\n\n  # Fish\n  poe _fish_completion > ~/.config/fish/completions/poe.fish\n\n  # Homebrew fish\n  poe _fish_completion > (brew --prefix)/share/fish/vendor_completions.d/poe.fish\n\n\nBasic Usage\n===========\n\nDefine tasks in your pyproject.toml\n-----------------------------------\n\n`See a real example <https://github.com/nat-n/poethepoet/blob/master/pyproject.toml>`_\n\n.. code-block:: toml\n\n  [tool.poe.tasks]\n  test   = \"pytest --cov=poethepoet\"                                # simple command based task\n  serve  = { script = \"my_app.service:run(debug=True)\" }            # python script based task\n  tunnel = { shell = \"ssh -N -L 0.0.0.0:8080:$PROD:8080 $PROD &\" }  # (posix) shell based task\n\nRun tasks with the poe cli\n--------------------------\n\n.. code-block:: bash\n\n  poe test\n\nBy default additional arguments are passed to the task so\n\n.. code-block:: bash\n\n  poe test -v tests/favorite_test.py\n\nresults in the following being run inside poetry's virtualenv\n\n.. code-block:: bash\n\n  pytest --cov=poethepoet -v tests/favorite_test.py\n\nYou can also run it like so if you fancy\n\n.. code-block:: bash\n\n  python -m poethepoet [options] task [task_args]\n\nOr use it as a poetry plugin (for poetry >= 1.2) like so\n\n.. code-block:: bash\n\n  poetry self add poethepoet[poetry_plugin]\n  poetry poe [options] task [task_args]\n\nOr just install it as a dev dependency with poetry and run it like\n\n.. code-block:: bash\n\n  poetry add --group dev poethepoet\n  poetry run poe [options] task [task_args]\n\nThough in that case you might like to define :bash:`alias poe='poetry run poe'`.\n\nTypes of task\n=============\n\nThere are seven types of task:\n\n- **Command tasks (cmd)**: for simple commands that are executed as a subprocess without a shell\n- **Script tasks (script)**: for python function calls\n- **Shell tasks (shell)**: for scripts to be executed with via an external interpreter (such as sh).\n- **Sequence tasks (sequence)**: for composing multiple tasks into a sequence\n- **Expression tasks (expr)**: which consist of a python expression to evaluate\n- **Switch tasks (switch)**: for running different tasks depending on a control value (such as the platform)\n- **Ref tasks (ref)**: used for defining a task as an alias of another task, such as in a sequence task.\n\nThe default task type is cmd.\n\n'cmd' tasks\n-----------\n\n**Command tasks** contain a single command that will be executed without a shell.\nThis covers most basic use cases for example:\n\n.. code-block:: toml\n\n  [tool.poe.tasks]\n  format = \"black .\"  # strings are interpreted as commands by default\n  clean = \"\"\"\n  # Multiline commands including comments work too. Unescaped whitespace is ignored.\n  rm -rf .coverage\n         .mypy_cache\n         .pytest_cache\n         dist\n         ./**/__pycache__\n  \"\"\"\n  lint = { \"cmd\": \"pylint poethepoet\" }  # Inline tables with a cmd key work too\n  greet = \"echo Hello $USER\"  # Environment variables work, even though there's no shell!\n\n'script' tasks\n--------------\n\n**Script tasks** consist of a reference to a python callable to import and execute, and optionally values or expressions to pass as arguments, for example:\n\n.. code-block:: toml\n\n  [tool.poe.tasks]\n  fetch-assets = { \"script\" = \"my_package.assets:fetch\" }\n  fetch-images = { \"script\" = \"my_package.assets:fetch(only='images', log=environ['LOG_PATH'])\" }\n\nAs in the second example, is it possible to hard code literal arguments to the target\ncallable. In fact a subset of python syntax, operators, and globals can be used inline\nto define the arguments to the function using normal python syntax, including environ\n(from the os package) to access environment variables that are available to the task.\n\nIf extra arguments are passed to task on the command line (and no CLI args are\ndeclared), then they will be available within the called python function via\n:python:`sys.argv`.\n\nIf the target python function is an async function then it will be exectued with :python:`asyncio.run`.\n\nCalling standard library functions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAny python callable accessible via the python path can be referenced, including the\nstandard library. This can be useful for ensuring that tasks work across platforms.\n\nFor example, the following task will not always work on windows:\n\n.. code-block:: toml\n\n  [[tool.poe.tasks.build]]\n  cmd = \"mkdir -p build/assets\"\n\nwhereas the same behaviour can can be reliably achieved like so:\n\n.. code-block:: toml\n\n  [[tool.poe.tasks.build]]\n  script = \"os:makedirs('build/assets', exist_ok=True)\"\n\nOutput the return value from the python callable\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nScript tasks can be configured to output the return value of a callable using the\n:toml:`print_result` option like so:\n\n.. code-block:: toml\n\n  [tool.poe.tasks.create-secret]\n  script = \"django.core.management.utils:get_random_secret_key()\"\n  print_result = true\n\nGiven the above configuration running the following command would output just the\ngenerated key.\n\n.. code-block:: bash\n\n  poe -q create-secret\n\nNote that if the return value is None then the :toml:`print_result` option has no\neffect.\n\n'shell' tasks\n-------------\n\nShell tasks are similar to simple command tasks except that they are executed\ninside a new shell, and can consist of multiple statements. This means they can leverage\nthe full syntax of the shell interpreter such as command substitution, pipes, background\nprocesses, etc.\n\nAn example use case for this might be opening some ssh tunnels in the background with\none task and closing them with another like so:\n\n.. code-block:: toml\n\n  [tool.poe.tasks]\n  pfwd = { \"shell\" = \"ssh -N -L 0.0.0.0:8080:$STAGING:8080 $STAGING & ssh -N -L 0.0.0.0:5432:$STAGINGDB:5432 $STAGINGDB &\" }\n  pfwdstop = { \"shell\" = \"kill $(pgrep -f \"ssh -N -L .*:(8080|5432)\")\" }\n\nBy default poe attempts to find a posix shell (sh, bash, or zsh in that order) on the\nsystem and uses that. When running on windows, poe will first look for\n`Git bash <https://gitforwindows.org>`_ at the usual location, and otherwise attempt to\nfind it via the PATH, though this might not always be possible.\n\nUsing different types of shell/interpreter\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt is also possible to specify an alternative interpreter (or list of compatible\ninterpreters ordered by preference) to be invoked to execute shell task content. For\nexample if you only expect the task to be executed on windows or other environments\nwith powershell installed then you can specify a powershell based task like so:\n\n.. code-block:: toml\n\n  [tool.poe.tasks.install-poetry]\n  shell = \"\"\"\n  (Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python -\n  \"\"\"\n  interpreter = \"pwsh\"\n\nIf your task content is restricted to syntax that is valid for both posix shells and\npowershell then you can maximise the likelihood of it working on any system by\nspecifying the interpreter as:\n\n.. code-block:: toml\n\n  interpreter = [\"posix\", \"pwsh\"]\n\nIt is also possible to specify python code as the shell task code as in the following\nexample. However it is recommended to use a *script* task rather than writing complex\ncode inline within your pyproject.toml.\n\n.. code-block:: toml\n\n  [tool.poe.tasks.time]\n  shell = \"\"\"\n  from datetime import datetime\n\n  print(datetime.now())\n  \"\"\"\n  interpreter = \"python\"\n\nThe following interpreter values may be used:\n\nposix\n    This is the default behavoir, equivalent to [\"sh\", \"bash\", \"zsh\"], meaning that\n    poe will try to find sh, and fallback to bash, then zsh.\nsh\n    Use the basic posix shell. This is often an alias for bash or dash depending on\n    the operating system.\nbash\n    Uses whatever version of bash can be found. This is usually the most portable option.\nzsh\n    Uses whatever version of zsh can be found.\nfish\n    Uses whatever version of fish can be found.\npwsh\n    Uses powershell version 6 or higher.\npowershell\n    Uses the newest version of powershell that can be found.\n\nThe default value can be changed with the global *shell_interpreter* option as\ndescribed below.\n\n'sequence' tasks\n----------------\n\nSequence tasks are defined as a array of other tasks to be run one after the other.\n\nBy default the contents of the array are interpreted as references to other tasks\n(actually a ref task type), though this behaviour can be altered by setting the global\n:toml:`default_array_item_task_type` option to the name of another task type such as\n*cmd*, or by setting the :toml:`default_item_type` option locally on the sequence task.\n\nSequence task with references\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: toml\n\n  [tool.poe.tasks]\n\n  test = \"pytest --cov=src\"\n  build = \"poetry build\"\n  _publish = \"poetry publish\"\n  release = [\"test\", \"build\", \"_publish\"]\n\nNote that tasks with names prefixed with :code:`_` are not included in the\ndocumentation or directly executable, but can be useful for cases where a task is only\nneeded for referencing from another task.\n\nSequence task with inline tasks expressed via inline tables\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: toml\n\n  release = [\n    { cmd = \"pytest --cov=src\" },\n    { script = \"devtasks:build\" },\n    { ref = \"_publish\" },\n  ]\n\nSequence task with inline tasks expressed via an array of tables\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: toml\n\n  [tool.poe.tasks]\n\n    [[tool.poe.tasks.release]]\n    cmd = \"pytest --cov=src\"\n\n    [[tool.poe.tasks.release]]\n    script = \"devtasks:build\"\n\n    [[tool.poe.tasks.release]]\n    ref = \"_publish\"\n\nSequence task with inline script subtasks using default_item_type\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: toml\n\n  release.sequence = [\n    \"devtasks:run_tests(all=True)\",\n    \"devtasks:build\",\n    \"devtasks:publish\",\n  ]\n  release.default_item_type = \"script\"\n\nA failure (non-zero result) will result in the rest of the tasks in the sequence not\nbeing executed, unless the :toml:`ignore_fail` option is set on the task to\n:toml:`true` or :toml:`\"return_zero\"` like so:\n\n.. code-block:: toml\n\n  [tool.poe.tasks]\n  attempts.sequence = [\"task1\", \"task2\", \"task3\"]\n  attempts.ignore_fail = \"return_zero\"\n\nIf you want to run all the subtasks in the sequence but return non-zero result in the\nend of the sequence if any of the subtasks have failed you can set :toml:`ignore_fail`\noption to the :toml:`return_non_zero` value like so:\n\n.. code-block:: toml\n\n  [tool.poe.tasks]\n  attempts.sequence = [\"task1\", \"task2\", \"task3\"]\n  attempts.ignore_fail = \"return_non_zero\"\n\n\n'expr' tasks\n------------\n\nExpr tasks consist of a single `python expression <https://docs.python.org/3/reference/expressions.html>`_. Running the task evaluates the expression and outputs the resulting\nvalue. Here's a trivial example of an expr task that will print 2 when run:\n\n.. code-block:: toml\n\n  [tool.poe.tasks.trivial-example]\n  expr = \"1 + 1\"\n\n.. code-block:: bash\n\n  $ poe trivial-example\n  Poe => 1 + 1\n  2\n\nExpressions can:\n\n- use most python expression constructs with the exception of yield, await, or named\n  expressions\n- use most builtin functions including all members of\n  `this collection <https://github.com/nat-n/poethepoet/blob/main/poethepoet/helpers/python.py#L13>`_\n- reference the sys module without having to specify it as an import\n- reference sys.argv to get whatever arguments were passed to the task, just like in\n  script tasks\n- referene values of named args as python variables\n- include environment variables as string values that are injected into the expression\n  using the usual templating syntax\n\nReferencing arguments and environment variables\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe expression can reference environment variables using templating syntax like in cmd\ntasks, and named arguments as python variables in scope like in script tasks.\n\n.. code-block:: toml\n\n  [tool.poe.tasks.venv-active]\n  expr = \"\"\"(\n    f'{target_venv} is active'\n    if ${VIRTUAL_ENV}.endswith(target_venv)\n    else f'{target_venv} is not active'\n  )\"\"\"\n  args = [{ name = \"target-venv\", default = \".venv\", positional = true }]\n\n.. code-block::\n\n  $ poe venv-active poethepoet-LCpCQf8S-py3.10\n  Poe => (\n    f'{target_venv} is active'\n    if ${VIRTUAL_ENV}.endswith(target_venv)\n    else f'{target_venv} is not active'\n  )\n  poethepoet-LCpCQf8S-py3.10 is not active\n\nIn this example the :code:`VIRTUAL_ENV` environment variable is templated into the\nexpression using the usual templating syntax, and the :code:`target_venv` argument is\nreferenced directly as a variable.\n\nNotice that the expression may be formatted over multiple lines, as in normal python\ncode.\n\nReferencing imported modules in an expression\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default the sys module is available to the expression which allows access to sys.argv\nor sys.platform amoung other useful values. However you can also reference any other\nimportable module via the imports option as in the following example.\n\n.. code-block:: toml\n\n  [tool.poe.tasks.count-hidden]\n  help    = \"Count hidden files or subdirectories\"\n  expr    = \"len(list(pathlib.Path('.').glob('.*')))\"\n  imports = [\"pathlib\"]\n\nFail if the expression result is falsey\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe expression can be made to behave like an assertion that fails if the result is not truthy by providing the assert option. The task defined in the following example will\nreturn non-zero if the result is False.\n\n.. code-block:: toml\n\n  [tool.poe.tasks.venv-active]\n  expr   = \"${VIRTUAL_ENV}.endswith(target_venv)\"\n  assert = true\n  args   = [{ name = \"target-venv\", default = \".venv\", positional = true }]\n\nReferencing the result of other tasks in an expression\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nExpr tasks can reference the results of other tasks by leveraging the :code:`uses`\noption.\n\n.. code-block:: toml\n\n  [tool.poe.tasks._get_active_session]\n  cmd = \"read_session --format json\"\n\n  [tool.poe.tasks.show-user]\n  expr    = \"\"\"(\n    f\"User: {json.loads(${SESSION_JSON})['User']}\"\n    if len(${SESSION_JSON}) > 2\n    else \"No active session.\"\n  )\"\"\"\n  uses    = { SESSION_JSON = \"_get_active_session\" }\n  imports = [\"json\"]\n\n\n'switch' tasks\n--------------\n\nMuch like a switch statement in many programming languages, a switch task consists of a\ncontrol task and a array of tasks to switch between. The control task is run first, and\nits output is captured and matched against the case option of each of the items in the\nswitch array to determine which one to run.\n\nThis can be used to define a task that runs a different subtask depending on which\nplatform it is running on like so:\n\n.. code-block:: toml\n\n  [tool.poe.tasks.build]\n  control.expr = \"sys.platform\"\n\n    [[tool.poe.tasks.platform_dependent.switch]]\n    case = \"win32\"\n    cmd  = \"windows_build\"\n\n    [[tool.poe.tasks.platform_dependent.switch]]\n    cmd  = \"posix_build\"\n\nIn the above example the control task checks the value of sys.platform, and if running\non windows it'll execute :toml:`windows_build`, otherwise it'll fall back to the default\ncase (i.e. the switch item with no case option defined) and execute :toml:`posix_build`.\n\nMultiple values per case\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt is also possible to define multiple values for a single case option by providing a\narray of values like so:\n\n.. code-block:: toml\n\n    [[tool.poe.tasks.platform_dependent.switch]]\n    case = [\"linux\", \"darwin\"]\n    cmd  = \"build\"\n\nDon't fail if there's no match\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf all tasks in the switch array include a case value, but none of them match the result\nof the control task then by default the switch task will fail. You can instead configure\nthe switch task to pass and simply do nothing by providing the 'default' option like so:\n\n.. code-block:: toml\n\n  [tool.poe.tasks.build_on_windows]\n  control.expr = \"sys.platform\"\n  default = \"pass\"\n\n    [[tool.poe.tasks.platform_dependent.switch]]\n    case = \"win32\"\n    cmd  = \"build\"\n\nSwitching on an environment variable or named argument\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt is possible to run a different task depending on the value of an environment variable\nas in the following example.\n\n.. code-block:: toml\n\n  [tool.poe.tasks.check_number]\n  control.expr = \"int(${BEST_NUMBER}) % 2\"\n\n    [[tool.poe.tasks.check_number.switch]]\n    case = \"0\"\n    expr = \"f'{${BEST_NUMBER}} is even')\"\n\n    [[tool.poe.tasks.check_number.switch]]\n    case = \"1\"\n    expr = \"f'{${BEST_NUMBER}} is odd'\"\n\nUsing this task will look like the following:\n\n.. code-block:: sh\n\n  $ BEST_NUMBER=12 poe check_number\n  Poe <= int(${BEST_NUMBER}) % 2\n  Poe => f'{${BEST_NUMBER}} is even')\n  12 is even\n\n  $ BEST_NUMBER=17 poe check_number\n  Poe <= int(${BEST_NUMBER}) % 2\n  Poe => f'{${BEST_NUMBER}} is odd'\n  17 is odd\n\nYou can also run a different task depending on the value of a named argument as in the following example.\n\n.. code-block:: toml\n\n  [tool.poe.tasks.icecream]\n  control.expr = \"flavor\"\n  args = [\"flavor\"]\n\n    [[tool.poe.tasks.icecream.switch]]\n    case = \"chocolate\"\n    cmd  = \"make_chocolate_icecream\"\n\n    [[tool.poe.tasks.icecream.switch]]\n    case = \"strawberry\"\n    cmd  = \"make_strawberry_icecream\"\n\n    [[tool.poe.tasks.icecream.switch]]\n    cmd  = \"make_vanilla_icecream\"\n\n\n'ref' tasks\n-----------\n\nA ref task is essentially a call to another task. It is the default task type within a sequence task, but is not often used otherwise.\n\nA ref task can set environment variables, and pass arguments to the referenced task as\nfollows:\n\n.. code-block:: toml\n\n  [tool.poe.tasks]\n  do_things.cmd = \"do_cmd\"\n  do_things.args = [{ name = \"things\", multiple = true, positional = true }]\n\n  do_specific_things.ref = \"do_things thing1 thing2\"\n  do_specific_things.env = { URGENCY = \"11\" }\n\n\nIn the above example calling:\n\n.. code-block:: sh\n\n  poe do_specific_things\n\nwould be equivalent to executing the following in the shell:\n\n.. code-block:: sh\n\n  URGENCY=11 do_cmd thing1 thing2\n\n\nTask level configuration\n========================\n\nTask help text\n--------------\n\nYou can specify help text to be shown alongside the task name in the list of available\ntasks (such as when executing poe with no arguments), by adding a help key like so:\n\n.. code-block:: toml\n\n    [tool.poe.tasks]\n    style = {cmd = \"black . --check --diff\", help = \"Check code style\"}\n\nEnvironment variables\n---------------------\n\nYou can specify arbitrary environment variables to be set for a task by providing the\nenv key like so:\n\n.. code-block:: toml\n\n    [tool.poe.tasks]\n    serve.script = \"myapp:run\"\n    serve.env = { PORT = \"9001\" }\n\nNotice this example uses deep keys which can be more convenient but aren't as well\nsupported by some older toml implementations.\n\nThe above example can be modified to only set the `PORT` variable if it is not already\nset by replacing the last line with the following:\n\n.. code-block:: toml\n\n    serve.env.PORT.default = \"9001\"\n\n\nLoading env vars from an env file\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can also specify one or more env files (with bash-like syntax) to load per task like so:\n\n.. code-block:: bash\n\n    # .env\n    STAGE=dev\n    PASSWORD='!@#$%^&*('\n\n.. code-block:: toml\n\n    [tool.poe.tasks]\n    serve.script  = \"myapp:run\"\n    serve.envfile = \".env\"\n\nThe envfile option accepts the name (or relative path) to a single envfile as shown\nabove but can also by given a list of such paths like so:\n\n.. code-block:: toml\n\n    serve.envfile = [\".env\", \"local.env\"]\n\nIn this case the referenced files will be loaded in the given order.\n\nDefining env vars in terms of other env vars\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt is also possible to reference existing env vars when defining a new env var for a\ntask. This may be useful for aliasing or extending a variable already defined in the\nhost environment, globally in the config, or in a referenced envfile. In the following\nexample the value from $TF_VAR_service_port on the host environment is also made\navailable as $FLASK_RUN_PORT within the task.\n\n.. code-block:: toml\n\n    [tool.poe.tasks.serve]\n    cmd = \"flask run\"\n    env = { FLASK_RUN_PORT = \"${TF_VAR_service_port}\" }\n\nRunning a task with a specific working directory\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default tasks are run from the project root – that is the parent directory of the\npyproject.toml file. However if a task needs to be run in another directory within the\nproject then this can be accomplished by using the :toml:`cwd` option like so:\n\n.. code-block:: toml\n\n    [tool.poe.tasks.build-client]\n    cmd = \"npx ts-node -T ./build.ts\"\n    cwd = \"./client\"\n\nIn this example, the npx executable is executed inside the :sh:`./client` subdirectory of\nthe project, and will use the nodejs package.json configuration from that location and\nevaluate paths relative to that location.\n\nDefining tasks that run via exec instead of a subprocess\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNormally tasks are executed as subprocesses of the poe cli. This makes it possible for\npoe to run multiple tasks, for example within a sequence task or task graph.\n\nHowever in certain situations it can be desirable to define a task that is instead\nexecuted within the same process via exec. Cmd and script tasks can be configured to\nwork this way using the :toml:`use_exec` option like so:\n\n.. code-block:: toml\n\n    [tool.poe.tasks.serve]\n    cmd      = \"gunicorn ./my_app:run\"\n    use_exec = true\n\nNote the following limitations with this feature:\n\n- a task configured in this way may not be referenced by another task\n\n- this does not work on windows becuase of `this issue <https://bugs.python.org/issue19066>`_. On windows a subprocess is always created.\n\nDeclaring CLI arguments\n-----------------------\n\nBy default extra arguments passed to the poe CLI following the task name are appended to\nthe end of a cmd task, or exposed as sys.argv in a script task (but will cause an error\nfor shell or sequence tasks). Alternatively it is possible to define named arguments\nthat a task should accept, which will be documented in the help for that task, and\nexposed to the task in a way the makes the most sense for that task type.\n\nIn general named arguments can take one of the following three forms:\n\n- **positional arguments** which are provided directly following the name of the task like\n   :bash:`poe task-name arg-value`\n\n- **option arguments** which are provided like\n   :bash:`poe task-name --option-name arg-value`\n\n- **flags** which are either provided or not, but don't accept a value like\n   :bash:`poe task-name --flag`\n\nThe value for the named argument is then accessible by name within the task content,\nthough exactly how will depend on the type of the task as detailed below.\n\n\nConfiguration syntax\n~~~~~~~~~~~~~~~~~~~~\n\nNamed arguments are configured by declaring the *args* task option as either an array or\na subtable.\n\n\nArray configuration syntax\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nThe array form may contain string items which are interpreted as an option argument with\nthe given name.\n\n.. code-block:: toml\n\n    [tool.poe.tasks.serve]\n    cmd = \"myapp:run\"\n    args = [\"host\", \"port\"]\n\nThis example can be invoked as\n\n.. code-block:: bash\n\n    poe serve --host 0.0.0.0 --port 8001\n\nItems in the array can also be inline tables to allow for more configuration to be\nprovided to the task like so:\n\n.. code-block:: toml\n\n    [tool.poe.tasks.serve]\n    cmd = \"myapp:run\"\n    args = [{ name = \"host\", default = \"localhost\" }, { name = \"port\", default = \"9000\" }]\n\nYou can also use the toml syntax for an array of tables like so:\n\n.. code-block:: toml\n\n    [tool.poe.tasks.serve]\n    cmd = \"myapp:run\"\n    help = \"Run the application server\"\n\n      [[tool.poe.tasks.serve.args]]\n      name = \"host\"\n      options = [\"-h\", \"--host\"]\n      help = \"The host on which to expose the service\"\n      default = \"localhost\"\n\n      [[tool.poe.tasks.serve.args]]\n      name = \"port\"\n      options = [\"-p\", \"--port\"]\n      help = \"The port on which to expose the service\"\n      default = \"8000\"\n\n\nTable configuration syntax\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nYou can also use the toml syntax for subtables like so:\n\n.. code-block:: toml\n\n    [tool.poe.tasks.serve]\n    cmd = \"myapp:run\"\n    help = \"Run the application server\"\n\n      [tool.poe.tasks.serve.args.host]\n      options = [\"-h\", \"--host\"]\n      help = \"The host on which to expose the service\"\n      default = \"localhost\"\n\n      [tool.poe.tasks.serve.args.port]\n      options = [\"-p\", \"--port\"]\n      help = \"The port on which to expose the service\"\n      default = \"8000\"\n\nWhen using this form the *name* option is no longer applicable because the key for the\nargument within the args table is taken as the name.\n\nTask argument options\n~~~~~~~~~~~~~~~~~~~~~\n\nNamed arguments support the following configuration options:\n\n- **default** : Union[str, int, float, bool]\n   The value to use if the argument is not provided. This option has no significance if\n   the required option is set to true.\n\n   For string values, environment variables can be referenced using the usual templating\n   syntax as in the following example.\n\n   .. code-block:: toml\n\n    [[tool.poe.tasks.deploy.args]]\n    name    = \"region\"\n    help    = \"The region to deploy to\"\n    default = \"${AWS_REGION}\"\n\n   This can be combined with setting an env values on the task with the default\n   specifier to get the following precendence of values for the arg:\n\n   1. the value passed on the command line\n   2. the value of the variable set on the environment\n   3. the default value for the environment variable configured on the task\n\n- **help** : str\n   A short description of the argument to include in the documentation of the task.\n\n- **name** : str\n   The name of the task. Only applicable when *args* is an array.\n\n- **options** : List[str]\n   A list of options to accept for this argument, similar to\n   `argsparse name or flags <https://docs.python.org/3/library/argparse.html#name-or-flags>`_.\n   If not provided then the name of the argument is used. You can use this option to\n   expose a different name to the CLI vs the name that is used inside the task, or to\n   specify long and short forms of the CLI option, e.g. [\"-h\", \"--help\"].\n\n- **positional** : bool\n   If set to true then the argument becomes a position argument instead of an option\n   argument. Note that positional arguments may not have type *bool*.\n\n- **multiple** : Union[bool, int]\n   If the multiple option is set to true on a positional or option argument then that\n   argument will accept multiple values.\n\n   If set to a number, then the argument will accept exactly that number of values.\n\n   For positional aguments, only the last positional argument may have the multiple\n   option set.\n\n   The multiple option is not compatible with arguments with type boolean since\n   these are interpreted as flags. However multiple ones or zeros can be passed to an\n   argument of type \"integer\" for similar effect.\n\n   The values provided to an argument with the multiple option set are available on\n   the environment as a string of whitespace separated values. For script tasks, the\n   values will be provided to your python function as a list of values. In a cmd task\n   the values can be passed as separate arugments to the task via templating as in the\n   following example.\n\n   .. code-block:: toml\n\n    [tool.poe.tasks.save]\n    cmd  = \"echo ${FILE_PATHS}\"\n    args = [{ name = \"FILE_PATHS\", positional = true, multiple = true }]\n\n- **required** : bool\n   If true then not providing the argument will result in an error. Arguments are not\n   required by default.\n\n- **type** : str\n   The type that the provided value will be cast to. The set of acceptable options is\n   {\"string\", \"float\", \"integer\", \"boolean\"}. If not provided then the default behaviour\n   is to keep values as strings. Setting the type to \"boolean\" makes the resulting\n   argument a flag that if provided will set the value to the boolean opposite of the\n   default value – i.e. *true* if no default value is given, or false if\n   :toml:`default = true`.\n\n\nArguments for cmd and shell tasks\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor cmd and shell tasks the values are exposed to the task as environment variables. For\nexample given the following configuration:\n\n.. code-block:: toml\n\n  [tool.poe.tasks.passby]\n  shell = \"\"\"\n  echo \"hello $planet\";\n  echo \"goodbye $planet\";\n  \"\"\"\n  help = \"Pass by a planet!\"\n\n    [[tool.poe.tasks.passby.args]]\n    name = \"planet\"\n    help = \"Name of the planet to pass\"\n    default = \"earth\"\n    options = [\"-p\", \"--planet\"]\n\nThe resulting task can be run like:\n\n.. code-block:: bash\n\n  poe passby --planet mars\n\nArguments for script tasks\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nArguments can be defined for script tasks in the same way, but how they are exposed to\nthe underlying python function depends on how the script is defined.\n\nIn the following example, since no parenthesis are included for the referenced function,\nall provided args will be passed to the function as kwargs:\n\n.. code-block:: toml\n\n  [tool.poe.tasks]\n  build = { script = \"project.util:build\", args = [\"dest\", \"version\"] }\n\nYou can also control exactly how values are passed to the python function as\ndemonstrated in the following example:\n\n.. code-block:: toml\n\n  [tool.poe.tasks]\n  build = { script = \"project.util:build(dest, build_version=version, verbose=True)\", args = [\"dest\", \"version\"]\n\nArguments for sequence tasks\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nArguments can be passed to the tasks referenced from a sequence task as in the following\nexample.\n\n.. code-block:: toml\n\n  [tool.poe.tasks]\n  build = { script = \"util:build_app\", args = [{ name = \"target\", positional = true }] }\n\n  [tool.poe.tasks.check]\n  sequence = [\"build ${target}\", { script = \"util:run_tests(environ['target'])\" }]\n  args = [\"target\"]\n\nThis works by setting the argument values as environment variables for the subtasks,\nwhich can be read at runtime, but also referenced in the task definition as\ndemonstrated in the above example for a *ref* task and *script* task.\n\nPassing free arguments in addition to named arguments\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf no args are defined for a cmd task then any cli arguments that are provided are\nsimply appended to the command. If named arguments are defined then one can still\nprovide additional free arguments to the command by separating them from the defined\narguments with a double dash token :sh:`--`.\n\nFor example given a task like:\n\n.. code-block:: toml\n\n  [tool.poe.tasks.lint]\n  cmd  = \"ruff check ${target_dir}\"\n  args = { target_dir = { options = [\"--target\", \"-t\"], default = \".\" }}\n\ncalling the task like so:\n\n.. code-block:: sh\n\n  poe lint -t tests -- --fix\n\nwill result in poe parsing the target_dir cli option, but appending the :sh:`--fix`\nflag to the ruff command without attempting to interpret it.\n\nPassing :sh:`--` in the arguments list to any other task type will simple result in any\nsubsequent arguments being ignored.\n\nProject-wide configuration options\n==================================\n\nGlobal environment variables\n----------------------------\n\nYou can configure environment variables to be set for all poe tasks in the\npyproject.toml file by specifying :toml:`tool.poe.env` like so\n\n.. code-block:: toml\n\n  [tool.poe.env]\n  VAR1 = \"FOO\"\n  VAR2 = \"BAR BAR BLACK ${FARM_ANIMAL}\"\n\nThe example above also demonstrates how – as with env vars defined at the task level –\nposix variable interpolation syntax may be used to define global env vars with reference\nto variables already defined in the host environment or in a referenced env file.\n\nAs with the task level option, you can indicated that a variable should only be set if\nnot already set like so:\n\n.. code-block:: toml\n\n  [tool.poe.env]\n  VAR1.default = \"FOO\"\n\nYou can also specify an env file (with bash-like syntax) to load for all tasks like so:\n\n.. code-block:: bash\n\n    # .env\n    STAGE=dev\n    PASSWORD='!@#$%^&*('\n\n.. code-block:: toml\n\n    [tool.poe]\n    envfile = \".env\"\n\nThe envfile global option also accepts a list of env files.\n\nDefault command verbosity\n-------------------------\n\nYou can alter the verbosity level for poe commands by passing :bash:`--quiet` /\n:bash:`-q` (which decreases verbosity) or :bash:`--verbose` / :bash:`-v` (which\nincreases verbosity) on the CLI.\n\nIf you want to change the default verbosity level for all commands, you can use\nthe :toml:`tool.poe.verbose` option in pyproject.toml like so:\n\n.. code-block:: toml\n\n  [tool.poe]\n  verbosity = -1\n\n:toml:`-1` is the quietest and :toml:`1` is the most verbose. :toml:`0` is the\ndefault.\n\nNote that the command line arguments are incremental: :bash:`-q` subtracts one\nfrom the default verbosity, and :bash:`-v` adds one. So setting the default\nverbosity to :toml:`-1` and passing :bash:`-v -v` on the command line is\nequivalent to setting the verbosity to :toml:`0` and just passing :bash:`-v`.\n\nRun poe from anywhere\n---------------------\n\nBy default poe will detect when you're inside a project with a pyproject.toml in the\nroot. However if you want to run it from elsewhere then that is supported by using the\n:bash:`--root` option to specify an alternate location for the toml file. The task will\nrun with the given location as the current working directory.\n\nIn all cases the path to project root (where the pyproject.toml resides) will be\navailable as :bash:`$POE_ROOT` within the command line and process.\n\nChange the default task type\n----------------------------\n\nBy default tasks defined as strings are interpreted as shell commands, and script tasks\nrequire the more verbose table syntax to specify. For example:\n\n.. code-block:: toml\n\n  my_cmd_task = \"cmd args\"\n  my_script_task = { \"script\" = \"my_package.my_module:run\" }\n\nThis behaviour can be reversed by setting the :toml:`default_task_type` option in your\npyproject.toml like so:\n\n.. code-block:: toml\n\n  [tool.poe]\n  default_task_type = \"script\"\n\n  [tool.poe.tasks]\n  my_cmd_task = { \"cmd\" = \"cmd args\" }\n  my_script_task = \"my_package.my_module:run\"\n\nChange the executor type\n------------------------\n\nYou can configure poe to use a specific executor by setting\n:toml:`tool.poe.executor.type`. Valid values include:\n\n- **auto**: to automatically use the most appropriate of the following executors in order\n- **poetry**: to run tasks in the poetry managed environment\n- **virtualenv**: to run tasks in the indicated virtualenv (or else \"./.venv\" if present)\n- **simple**: to run tasks without doing any specific environment setup\n\nThe default behaviour is auto.\n\nFor example the following configuration will cause poe to ignore the poetry environment\n(if present), and instead use the virtualenv at the given location relative to the\nparent directory.\n\n.. code-block:: toml\n\n  [tool.poe.executor]\n  type = \"virtualenv\"\n  location = \"myvenv\"\n\nSee below for more details.\n\nChange the default shell interpreter\n------------------------------------\n\nNormally shell tasks are executed using a posix shell by default (see section for shell\ntasks above). This default can be overridden to something else by setting the\n*shell_interpreter* global option. In the following example we configure all shell tasks\nto use *fish* by default.\n\n.. code-block:: toml\n\n  tool.poe.shell_interpreter = \"fish\"\n\n  [tool.poe.tasks.fibonacci]\n  help = \"Output the fibonacci sequence up to 89\"\n  shell = \"\"\"\n    function fib --argument-names max n0 n1\n      if test $max -ge $n0\n        echo $n0\n        fib $max $n1 (math $n0 + $n1)\n      end\n    end\n\n    fib 89 1 1\n  \"\"\"\n\nLoad tasks from another file\n============================\n\nThere are some scenarios where one might wish to define tasks outside of pyproject.toml,\nor to collect tasks from multiple projects into one. For example, if you want to share\ntasks between projects via git modules, generate tasks definitions dynamically, organise\nyour code in a monorepo, or simply have a lot of tasks and don't want the pyproject.toml\nto get too large. This can be achieved by creating a toml or json including the same\nstructure for tasks as used in pyproject.toml\n\nFor example:\n\n.. code-block:: toml\n\n  # acme_common/shared_tasks.toml\n  [tool.poe.tasks.build-image]\n  cmd = \"docker build\"\n\n\n.. code-block:: toml\n\n  [tool.poe]\n  # this references a file from a git submodule\n  include = \"modules/acme_common/shared_tasks.toml\"\n\nImported files may also specify environment variables via\n:code:`tool.poe.envfile` or entries for :code:`tool.poe.env`.\n\nIt's also possible to include tasks from multiple files by providing a list like\nso:\n\n.. code-block:: toml\n\n  [tool.poe]\n  include = [\"modules/acme_common/shared_tasks.toml\", \"generated_tasks.json\"]\n\nFiles are loaded in the order specified. If an item already exists then the included\nvalue it ignored.\n\nIf an included task file itself includes other files, these second order includes are\nnot inherited, so circular includes don't cause any problems.\n\nWhen including files from another location, you can also specify that tasks from that\nother file should be run from within a specific directory. For example with the\nfollowing configuration, when tasks imported from my_subproject are run\nfrom the root, the task will actually execute as if it had been run from the\nmy_subproject subdirectory.\n\n.. code-block:: toml\n\n  [[tool.poe.include]]\n  path = \"my_subproject/pyproject.toml\"\n  cwd  = \"my_subproject\"\n\nThe cwd option still has the limitation that it cannot be used to specify a directory\noutside of parent directory of the pyproject.toml file that poe is running with.\n\nIf a referenced file is missing then poe ignores it without error, though\nfailure to read the contents will result in failure.\n\nUsage as a poetry plugin\n========================\n\nDepending on how you manage your python environments you may also wish to use Poe the\nPoet in the form of a poetry plugin. This requires installing `poethepoet[poetry_plugin]`\neither into the same environment as poetry or into poetry itself.\n`See the poetry docs <https://python-poetry.org/docs/master/plugins/#using-plugins>`_\nfor more details.\n\nDue to how the poetry CLI works (using `cleo <https://github.com/sdispater/cleo>`_ — a\nfeatureful but highly opinionated  CLI framework) there exist a few minor limitations\nwhen used in this way.\n\n1.\n  Normally the poe CLI allows tasks to accept any arguments, either by defining the\n  expected options or by passing any command line tokens following the task name to the\n  task at runtime. This is not supported by cleo. The plugin implements a workaround\n  that mostly works, but still if the `--no-plugins` option is provided *anywhere* in\n  the command line then the poe plugin will never be invoked.\n\n2.\n  Poetry comes with its own\n  `command line completion <https://python-poetry.org/docs/#enable-tab-completion-for-bash-fish-or-zsh>`_,\n  but poe's command line completion won't work.\n\n3.\n  If you declare named arguments for your poe tasks then these are included in the\n  documentation when poe is invoked without any arguments. However the inline\n  documentation for poetry commands contains only the task names and help text.\n\nTherefore it is recommended to use the poe CLI tool directly if you don't mind having\nit installed onto your path.\n\nConfiguring the plugin\n----------------------\n\nBy default the poetry plugin will register *poe* as a command prefix so tasks can be\ninvoked like:\n\n.. code-block:: sh\n\n  poetry poe [task_name] [task_args]\n\nAnd the poe documentation can be viewed via:\n\n.. code-block:: bash\n\n  poetry poe\n\nIt is also possible to modify this behavoir, to either have a different command prefix\nor none at all by setting the :toml:`poetry_command` global option in your\npyproject.toml like so:\n\n.. code-block:: toml\n\n  [tool.poe]\n  poetry_command = \"\"\n\nIn this case poe tasks will be registered as top level commands on poetry and can be\ninvoked simply as:\n\n.. code-block:: sh\n\n  poetry [task_name]\n\n.. warning::\n    Whatever :toml:`tool.poe.poetry_command` is set to must not already exist as a\n    poetry command!\n\n    Additionally if setting it to the emtpy string then care must be taken to avoid\n    defining any poe tasks that conflict with any other built in or plugin provided\n    poetry command.\n\nHooking into poetry commands\n----------------------------\n\nIt is also possible to configure a task to be run before or after a specific poetry\ncommand by declaring the poetry_hooks global option like so:\n\n.. code-block:: toml\n\n  [tool.poe.poetry_hooks]\n  pre_build  = \"prep-assets --verbosity=5\"\n  post_build = \"archive-build\"\n\n  [tool.poe.tasks.prep-assets]\n  script = \"scripts:prepare_assets\"\n  help   = \"Optimise static assets for inclusion in the build\"\n\n  [tool.poe.tasks.archive-build]\n  script = \"scripts:archive_build\"\n  help   = \"Upload the latest build version to archive server\"\n\nIn this example the :code:`prep-assets` task will be run as the first step in calling\n:bash:`poetry build` with an argument passed as if the task were being called via the\npoe CLI. We've also configured the :code:`archive-build` task to be run after every\nsuccessful build.\n\nIf a task fails when running as a hook, then the poetry command will exit with an error.\nIf it is a *pre* hook then this will cause the actual poetry command not to execute.\nThis behaviour may be useful for running checks before :bash:`poetry publish`\n\nHooks can be disabled for a single invocation by passing the :bash:`--no-plugins` option\nto poetry.\n\nNamespaced commands like :bash:`poetry env info` can be specified with underscores like so:\n\n.. code-block:: toml\n\n  [tool.poe.poetry_hooks]\n  post_env_info = \"info\"\n\n\nUsage without poetry\n====================\n\nPoe the Poet was originally intended for use alongside poetry. But it works just as\nwell with any other kind of virtualenv, or simply as a general purpose way to define\nhandy tasks for use within a certain directory structure! This behaviour is configurable\nvia the :toml:`tool.poe.executor` global option (see above).\n\nBy default poe will run tasks in the poetry managed environment, if the pyproject.toml\ncontains a :toml:`tool.poetry` section. If it doesn't then poe looks for a virtualenv to\nuse from :bash:`./.venv` or :bash:`./venv` relative to the pyproject.toml file.\nOtherwise it falls back to running tasks without any special environment management.\n\nComposing tasks into graphs (Experimental)\n==========================================\n\nYou can define tasks that depend on other tasks, and optionally capture and reuse the\noutput of those tasks, thus defining an execution graph of tasks. This is done by using\nthe *deps* task option, or if you want to capture the output of the upstream task to\npass it to the present task then specify the *uses* option, as demonstrated below.\n\n.. code-block:: toml\n\n  [tool.poe.tasks]\n  _website_bucket_name.shell = \"\"\"\n    aws cloudformation describe-stacks \\\n      --stack-name $AWS_SAM_STACK_NAME \\\n      --query \"Stacks[0].Outputs[?(@.OutputKey == 'FrontendS3Bucket')].OutputValue\" \\\n    | jq -cr 'select(0)[0]'\n  \"\"\"\n\n  [tool.poe.tasks.build-backend]\n  help = \"Build the backend\"\n  sequence = [\n    {cmd = \"poetry export -f requirements.txt --output src/requirements.txt\"},\n    {cmd = \"sam build\"},\n  ]\n\n  [tool.poe.tasks.build-frontend]\n  help = \"Build the frontend\"\n  cmd = \"npm --prefix client run build\"\n\n  [tool.poe.tasks.shipit]\n  help = \"Build and deploy the app\"\n  sequence = [\n    \"sam deploy --config-env $SAM_ENV_NAME\",\n    \"aws s3 sync --delete ./client/build s3://${BUCKET_NAME}\"\n  ]\n  default_item_type = \"cmd\"\n  deps = [\"build-frontend\", \"build-backend\"]\n  uses = { BUCKET_NAME = \"_website_bucket_name\" }\n\nIn this example the *shipit* task depends on the *build-frontend* *build-backend*, which\nmeans that these tasks get executed before the *shipit* task. It also declares that it\nuses the output of the hidden *_website_bucket_name* task, which means that this also\ngets executed, but its output it captured and then made available to the *shipit* task\nas the environment variable BUCKET_NAME.\n\nNote that captured output that is exposed as an environment variable via the `uses`\nis compacted to have new lines removed. This is similar to how interpolated command\noutput is treated by bash.\n\nThis feature is experimental. There may be edge cases that aren't handled well, so\nfeedback is requested. Some details of the implementation or API may be altered in\nfuture versions.\n\nSupported python versions\n=========================\n\nPoe the Poet officially supports python >=3.7, and is tested with python 3.7 to 3.11 on\nmacOS, linux and windows.\n\nContributing\n============\n\nThere's plenty to do, come say hi in `the discussions <https://github.com/nat-n/poethepoet/discussions>`_  or\n`open an issue <https://github.com/nat-n/poethepoet/issues>`_! 👋\n\nAlso check out the `CONTRIBUTING.MD <https://github.com/nat-n/poethepoet/blob/main/.github/CONTRIBUTING.md>`_ 🤓\n\nLicence\n=======\n\nMIT.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nat-n/poethepoet",
    "keywords": "automation,tasks,task-runner,plugin,poetry,poe",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "poethepoet",
    "package_url": "https://pypi.org/project/poethepoet/",
    "platform": null,
    "project_url": "https://pypi.org/project/poethepoet/",
    "project_urls": {
      "Homepage": "https://github.com/nat-n/poethepoet",
      "Repository": "https://github.com/nat-n/poethepoet"
    },
    "release_url": "https://pypi.org/project/poethepoet/0.19.0/",
    "requires_dist": [
      "pastel (>=0.2.1,<0.3.0)",
      "tomli (>=1.2.2)",
      "poetry (>=1.0,<2.0) ; extra == \"poetry-plugin\""
    ],
    "requires_python": ">=3.7",
    "summary": "A task runner that works well with poetry.",
    "version": "0.19.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17404780,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d19614ccbd91874c1ae40c001e32d908d89cc5d636bbb54f68efe379cd9477ea",
          "md5": "ac38541f83865f6754f4ccccbc96274d",
          "sha256": "908228946444324c1a105b2dd082fc2458cb1983b14e9b677d33024932429a55"
        },
        "downloads": -1,
        "filename": "poethepoet-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac38541f83865f6754f4ccccbc96274d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 3398,
        "upload_time": "2020-05-28T22:01:37",
        "upload_time_iso_8601": "2020-05-28T22:01:37.378784Z",
        "url": "https://files.pythonhosted.org/packages/d1/96/14ccbd91874c1ae40c001e32d908d89cc5d636bbb54f68efe379cd9477ea/poethepoet-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b28363ffd98de19c618568b945882b7f53063c471ef075dbfb44937fbba1d15f",
          "md5": "649d9f4a328234d5928f790e769595b8",
          "sha256": "14ce2b6bfc916bf78e24c2500266f4b0f0a7a69b9c22dcab82fb8105a7b7dcd3"
        },
        "downloads": -1,
        "filename": "poethepoet-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "649d9f4a328234d5928f790e769595b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 2450,
        "upload_time": "2020-05-28T22:01:39",
        "upload_time_iso_8601": "2020-05-28T22:01:39.330625Z",
        "url": "https://files.pythonhosted.org/packages/b2/83/63ffd98de19c618568b945882b7f53063c471ef075dbfb44937fbba1d15f/poethepoet-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c423094d996c8e4b98ef68d1c8816b6b4c546f34c0f0aad9bbe430e4bdb8be8",
          "md5": "9873e2a3cc5f45050b087b7b452dc7a7",
          "sha256": "3ff5e08fc43c6d4ab817d0a74a489cecb6835443deb091ebf0070b9503037a91"
        },
        "downloads": -1,
        "filename": "poethepoet-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9873e2a3cc5f45050b087b7b452dc7a7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 3960,
        "upload_time": "2020-05-29T08:34:52",
        "upload_time_iso_8601": "2020-05-29T08:34:52.115420Z",
        "url": "https://files.pythonhosted.org/packages/3c/42/3094d996c8e4b98ef68d1c8816b6b4c546f34c0f0aad9bbe430e4bdb8be8/poethepoet-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c524f60b22c3daa11466e7a393c74e90a010da088fcfa135d7d866f4159abbe",
          "md5": "6e8903d51210b13135093a602d83fb8c",
          "sha256": "b2c5c08b9c8968b90dfc6a2bd548fe8712a4c9def7926dccb5455edcf4103e76"
        },
        "downloads": -1,
        "filename": "poethepoet-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6e8903d51210b13135093a602d83fb8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 3511,
        "upload_time": "2020-05-29T08:34:53",
        "upload_time_iso_8601": "2020-05-29T08:34:53.493479Z",
        "url": "https://files.pythonhosted.org/packages/4c/52/4f60b22c3daa11466e7a393c74e90a010da088fcfa135d7d866f4159abbe/poethepoet-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "207021bf418700621e3718f655debcfd59edbce6d2854be0aa30145b52d1f0b1",
          "md5": "abb2a72b304ff17c91ddf23c79b07541",
          "sha256": "c9527128ecf36f78801bc5de9e5e50034a035ce192a662e18dc1238ce0f15404"
        },
        "downloads": -1,
        "filename": "poethepoet-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "abb2a72b304ff17c91ddf23c79b07541",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 8120,
        "upload_time": "2020-05-31T21:49:40",
        "upload_time_iso_8601": "2020-05-31T21:49:40.252924Z",
        "url": "https://files.pythonhosted.org/packages/20/70/21bf418700621e3718f655debcfd59edbce6d2854be0aa30145b52d1f0b1/poethepoet-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e606ae4ead870972a9a5dbbee180e79b78183b1484ea9dfc48a8205bf275cfd0",
          "md5": "6f614a39aca90323fbca405c83e4c888",
          "sha256": "91bb22c82a5735ba2c5bfe0750b7e7646abc41d369197a80cbf3d159fbdd1160"
        },
        "downloads": -1,
        "filename": "poethepoet-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6f614a39aca90323fbca405c83e4c888",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 7430,
        "upload_time": "2020-05-31T21:49:41",
        "upload_time_iso_8601": "2020-05-31T21:49:41.584080Z",
        "url": "https://files.pythonhosted.org/packages/e6/06/ae4ead870972a9a5dbbee180e79b78183b1484ea9dfc48a8205bf275cfd0/poethepoet-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55a7320488319061747c2d16e3de54f7f22d42710a05d7207b48122fc7c90195",
          "md5": "00eedb389d67e60a0f2f9f4fd58108ec",
          "sha256": "f095b103bb3793c37d3256b8df4e800cffdfcff6c2058203b26e6395ebe1da9c"
        },
        "downloads": -1,
        "filename": "poethepoet-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "00eedb389d67e60a0f2f9f4fd58108ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 9876,
        "upload_time": "2020-06-04T21:24:32",
        "upload_time_iso_8601": "2020-06-04T21:24:32.250217Z",
        "url": "https://files.pythonhosted.org/packages/55/a7/320488319061747c2d16e3de54f7f22d42710a05d7207b48122fc7c90195/poethepoet-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d358b70deffe3cde1e717d5ad4c1c7576146ccc496c841e4196d03380a2238a",
          "md5": "05fa7f41c55a1efe83d3d79524c4f701",
          "sha256": "379938a99e5c0be9cd4d54547f0a9ce8279a5f1e62f615bae31e5bed1de0bf09"
        },
        "downloads": -1,
        "filename": "poethepoet-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "05fa7f41c55a1efe83d3d79524c4f701",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 9702,
        "upload_time": "2020-06-04T21:24:33",
        "upload_time_iso_8601": "2020-06-04T21:24:33.091962Z",
        "url": "https://files.pythonhosted.org/packages/2d/35/8b70deffe3cde1e717d5ad4c1c7576146ccc496c841e4196d03380a2238a/poethepoet-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b59e13240bdacb9a2fdef104753febdd4c9ff1faf513641a5ee94bd8e2714e3c",
          "md5": "47dda9718de3a948ca44510be33d6d41",
          "sha256": "6fb3021603d4421c6fcc40072bbcf150a6c52ef70ff4d3be089b8b04e015ef5a"
        },
        "downloads": -1,
        "filename": "poethepoet-0.10.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47dda9718de3a948ca44510be33d6d41",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 31054,
        "upload_time": "2021-02-07T18:07:02",
        "upload_time_iso_8601": "2021-02-07T18:07:02.110669Z",
        "url": "https://files.pythonhosted.org/packages/b5/9e/13240bdacb9a2fdef104753febdd4c9ff1faf513641a5ee94bd8e2714e3c/poethepoet-0.10.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29cbbff3dcda033fc3222ba4a2cfedb7ddb025397e0c3c042a5a65156f96c949",
          "md5": "bfb787bfd34369ebcee5c0210df28837",
          "sha256": "70b97cb194b978dc464c70793e85e6f746cddf82b84a38bfb135946ad71ae19c"
        },
        "downloads": -1,
        "filename": "poethepoet-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bfb787bfd34369ebcee5c0210df28837",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 26938,
        "upload_time": "2021-02-07T18:07:03",
        "upload_time_iso_8601": "2021-02-07T18:07:03.541946Z",
        "url": "https://files.pythonhosted.org/packages/29/cb/bff3dcda033fc3222ba4a2cfedb7ddb025397e0c3c042a5a65156f96c949/poethepoet-0.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fe5ad303915a8a7b4bf1a75cbe7a3f4215ce9d902edc2ea028a68c559a8ee8a",
          "md5": "454543dcecf5afd903cab43519476257",
          "sha256": "4aac200f52e0faa309a655c064f2a522d9d18b64f717de9805151421166ba4d8"
        },
        "downloads": -1,
        "filename": "poethepoet-0.11.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "454543dcecf5afd903cab43519476257",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 46977,
        "upload_time": "2021-11-14T20:49:34",
        "upload_time_iso_8601": "2021-11-14T20:49:34.613367Z",
        "url": "https://files.pythonhosted.org/packages/0f/e5/ad303915a8a7b4bf1a75cbe7a3f4215ce9d902edc2ea028a68c559a8ee8a/poethepoet-0.11.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "295740afd32226e9d75cbe660211f0970b7fac0080a92b796249cdbf3d78a40c",
          "md5": "f720f69caff833983f64edbc4ef8346b",
          "sha256": "a0618e198600db801588bae627982682f8bd5304a49a75c6dbc430feade5a8a9"
        },
        "downloads": -1,
        "filename": "poethepoet-0.11.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f720f69caff833983f64edbc4ef8346b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 44984,
        "upload_time": "2021-11-14T20:49:36",
        "upload_time_iso_8601": "2021-11-14T20:49:36.227615Z",
        "url": "https://files.pythonhosted.org/packages/29/57/40afd32226e9d75cbe660211f0970b7fac0080a92b796249cdbf3d78a40c/poethepoet-0.11.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f5da333bea532046e70c2abb2dee9f0dc6db539ee283b8475c3e8ae5949a174",
          "md5": "0b04a36260460cafe452775e4854b1c3",
          "sha256": "3b24e9490a741fbb4154bd77283bcb5c7bce09560e5121fb712be20acfed5ad9"
        },
        "downloads": -1,
        "filename": "poethepoet-0.11.0b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b04a36260460cafe452775e4854b1c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 34200,
        "upload_time": "2021-02-14T18:56:43",
        "upload_time_iso_8601": "2021-02-14T18:56:43.911977Z",
        "url": "https://files.pythonhosted.org/packages/1f/5d/a333bea532046e70c2abb2dee9f0dc6db539ee283b8475c3e8ae5949a174/poethepoet-0.11.0b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff7bf2788d4ac285a81c5a5b3248b8c42ace362f469e2e0c5f5b91d082dff39d",
          "md5": "e31560d5e89acc1bc7ecd556bc8ac11c",
          "sha256": "31d883c4c819b089cc531ca0da726b73e2246ed2afb1de6b859ada8509ae835a"
        },
        "downloads": -1,
        "filename": "poethepoet-0.11.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "e31560d5e89acc1bc7ecd556bc8ac11c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 30366,
        "upload_time": "2021-02-14T18:56:45",
        "upload_time_iso_8601": "2021-02-14T18:56:45.288975Z",
        "url": "https://files.pythonhosted.org/packages/ff/7b/f2788d4ac285a81c5a5b3248b8c42ace362f469e2e0c5f5b91d082dff39d/poethepoet-0.11.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b54b16121b1c8eabdf0b75fb9b928a7bb5f4ff52cdbd27f5bb7bc6a888ec3f2e",
          "md5": "9944e3b78c3364fb1f0e884fc51fd96a",
          "sha256": "4c149ebc4baa890ddc5627c2de408d5038080781bc83134dbbe2a6f5fbbc8e20"
        },
        "downloads": -1,
        "filename": "poethepoet-0.11.0b2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9944e3b78c3364fb1f0e884fc51fd96a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 37607,
        "upload_time": "2021-04-28T21:56:32",
        "upload_time_iso_8601": "2021-04-28T21:56:32.389143Z",
        "url": "https://files.pythonhosted.org/packages/b5/4b/16121b1c8eabdf0b75fb9b928a7bb5f4ff52cdbd27f5bb7bc6a888ec3f2e/poethepoet-0.11.0b2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3973e23ca9898aa69560f08e3da6cbce81cc3d6ab72f76585802d1d2aa3ce7f1",
          "md5": "d512cf63d1a09577886fb57b3e648be9",
          "sha256": "0a62575837e381520e02d19224d18b925fe2a1bd5d9da720dcb963f7cfe90a0a"
        },
        "downloads": -1,
        "filename": "poethepoet-0.11.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "d512cf63d1a09577886fb57b3e648be9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 33156,
        "upload_time": "2021-04-28T21:56:33",
        "upload_time_iso_8601": "2021-04-28T21:56:33.810786Z",
        "url": "https://files.pythonhosted.org/packages/39/73/e23ca9898aa69560f08e3da6cbce81cc3d6ab72f76585802d1d2aa3ce7f1/poethepoet-0.11.0b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0b3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4980224aa75d2dfab3e0c3bdcbe8bbfcf1cfad39ce34b40e9a7f0197876401c2",
          "md5": "08df211619304be716a61cb7587fecdf",
          "sha256": "62e179a85ea66b9b56c5c48c3a23208127f8f648d29c6e15eaaf71496dc4f02f"
        },
        "downloads": -1,
        "filename": "poethepoet-0.11.0b3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08df211619304be716a61cb7587fecdf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 40365,
        "upload_time": "2021-06-13T21:27:00",
        "upload_time_iso_8601": "2021-06-13T21:27:00.512611Z",
        "url": "https://files.pythonhosted.org/packages/49/80/224aa75d2dfab3e0c3bdcbe8bbfcf1cfad39ce34b40e9a7f0197876401c2/poethepoet-0.11.0b3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d72167034d06616f242531daf1e901e27ce85dba5bc7ddfd5ff4747acd49279",
          "md5": "6677d19febb9c90145792c4fda3b0c90",
          "sha256": "539cb1518f0d85e7ddae500baabb44e5aa5d49cc6e78472b2014bb6068321920"
        },
        "downloads": -1,
        "filename": "poethepoet-0.11.0b3.tar.gz",
        "has_sig": false,
        "md5_digest": "6677d19febb9c90145792c4fda3b0c90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 35816,
        "upload_time": "2021-06-13T21:27:02",
        "upload_time_iso_8601": "2021-06-13T21:27:02.295326Z",
        "url": "https://files.pythonhosted.org/packages/0d/72/167034d06616f242531daf1e901e27ce85dba5bc7ddfd5ff4747acd49279/poethepoet-0.11.0b3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0b4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cff617f331ab98988115d900f3ba4eebe4c37a7d5817af23ebc7169153c203d",
          "md5": "f2ef116a1d028ca75ac01e43a2c47e59",
          "sha256": "b9c73c62a3f119422389f60c217860871976542f809f2d3144c790b14fad4f28"
        },
        "downloads": -1,
        "filename": "poethepoet-0.11.0b4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2ef116a1d028ca75ac01e43a2c47e59",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 40631,
        "upload_time": "2021-08-22T11:42:42",
        "upload_time_iso_8601": "2021-08-22T11:42:42.687819Z",
        "url": "https://files.pythonhosted.org/packages/6c/ff/617f331ab98988115d900f3ba4eebe4c37a7d5817af23ebc7169153c203d/poethepoet-0.11.0b4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21f81f13fdfedf0bb5ee1173a3139981c89aafcab83e22cb1310ff342770c64b",
          "md5": "ce65fe4c03ce9a49f4ca900da54a961b",
          "sha256": "372d297b35234d79d30ad2f81ccd33ba7c0d6fbbe82651b94e20b7c21df713e1"
        },
        "downloads": -1,
        "filename": "poethepoet-0.11.0b4.tar.gz",
        "has_sig": false,
        "md5_digest": "ce65fe4c03ce9a49f4ca900da54a961b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 36289,
        "upload_time": "2021-08-22T11:42:44",
        "upload_time_iso_8601": "2021-08-22T11:42:44.208101Z",
        "url": "https://files.pythonhosted.org/packages/21/f8/1f13fdfedf0bb5ee1173a3139981c89aafcab83e22cb1310ff342770c64b/poethepoet-0.11.0b4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0b5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e96056168b7ce26655dfa9dfbc698c6d49e66bb33702b58c54a625da9450df54",
          "md5": "7f04eec0f48240ccb4e849a329fac2a2",
          "sha256": "94a108cd34afb9b4be700de51d0210160759c63232c3bcbf555610acec24f5ab"
        },
        "downloads": -1,
        "filename": "poethepoet-0.11.0b5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f04eec0f48240ccb4e849a329fac2a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 40723,
        "upload_time": "2021-08-24T11:43:08",
        "upload_time_iso_8601": "2021-08-24T11:43:08.754313Z",
        "url": "https://files.pythonhosted.org/packages/e9/60/56168b7ce26655dfa9dfbc698c6d49e66bb33702b58c54a625da9450df54/poethepoet-0.11.0b5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b595836708470f0cd3bd34ba38d866ab3c83cb6f94501ed0980eb0c6bff74e1",
          "md5": "34f04598bcceda9081ddb5c7617291f0",
          "sha256": "d69ccaf1e581bf30dae52314ec6dd017bd8c6aaea0d96e82865ea5bfd7242b2d"
        },
        "downloads": -1,
        "filename": "poethepoet-0.11.0b5.tar.gz",
        "has_sig": false,
        "md5_digest": "34f04598bcceda9081ddb5c7617291f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 36530,
        "upload_time": "2021-08-24T11:43:10",
        "upload_time_iso_8601": "2021-08-24T11:43:10.522784Z",
        "url": "https://files.pythonhosted.org/packages/2b/59/5836708470f0cd3bd34ba38d866ab3c83cb6f94501ed0980eb0c6bff74e1/poethepoet-0.11.0b5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0b6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb13d3e427fff514b7dc99f4da39d4f6996fecdb9909fad1351c0eece2ab32ec",
          "md5": "d706fe7a4c80444c364b5e7cb6b51be8",
          "sha256": "8bad549be160eebb6ea9069bfdc680c5b2f15b82a7be49f209118972558c2396"
        },
        "downloads": -1,
        "filename": "poethepoet-0.11.0b6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d706fe7a4c80444c364b5e7cb6b51be8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 41065,
        "upload_time": "2021-10-26T20:11:18",
        "upload_time_iso_8601": "2021-10-26T20:11:18.816620Z",
        "url": "https://files.pythonhosted.org/packages/bb/13/d3e427fff514b7dc99f4da39d4f6996fecdb9909fad1351c0eece2ab32ec/poethepoet-0.11.0b6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1145d33f9908a4e767731baa58f3e0885d194526f06a63e254635ba2243f285",
          "md5": "1c3689b52b0c770d094aaf7909f743a5",
          "sha256": "3a9978ada8d1a263936a936b3b4057eafaf22ea2262af6e40d8857acd8d716cd"
        },
        "downloads": -1,
        "filename": "poethepoet-0.11.0b6.tar.gz",
        "has_sig": false,
        "md5_digest": "1c3689b52b0c770d094aaf7909f743a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 36871,
        "upload_time": "2021-10-26T20:11:20",
        "upload_time_iso_8601": "2021-10-26T20:11:20.952007Z",
        "url": "https://files.pythonhosted.org/packages/a1/14/5d33f9908a4e767731baa58f3e0885d194526f06a63e254635ba2243f285/poethepoet-0.11.0b6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f12a4f1665b0d7773c38757224f20b88f6a860ec722a39b769ca3bcdd2a3601",
          "md5": "13768066eeb80bd81c2aa2d85f55b12d",
          "sha256": "59215a7b0828295a499fa28a5e2c6d0202520a290cd0a74d59f54c1c74cbd2c7"
        },
        "downloads": -1,
        "filename": "poethepoet-0.12.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13768066eeb80bd81c2aa2d85f55b12d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 54696,
        "upload_time": "2022-01-08T15:03:04",
        "upload_time_iso_8601": "2022-01-08T15:03:04.579230Z",
        "url": "https://files.pythonhosted.org/packages/4f/12/a4f1665b0d7773c38757224f20b88f6a860ec722a39b769ca3bcdd2a3601/poethepoet-0.12.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cc36efc435d6e19500e6e0659a089a8434581f21fae363f96c7a3a00cc1a436",
          "md5": "298b5a45510cffeab474daf68a00ff33",
          "sha256": "d86a29707c24d964bbee15750d07dc763a9ca48265e1cd64dab15647f173bab7"
        },
        "downloads": -1,
        "filename": "poethepoet-0.12.0.tar.gz",
        "has_sig": false,
        "md5_digest": "298b5a45510cffeab474daf68a00ff33",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 62462,
        "upload_time": "2022-01-08T15:03:07",
        "upload_time_iso_8601": "2022-01-08T15:03:07.196637Z",
        "url": "https://files.pythonhosted.org/packages/1c/c3/6efc435d6e19500e6e0659a089a8434581f21fae363f96c7a3a00cc1a436/poethepoet-0.12.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39f8307dc8ace172948c685a87da232a2f1cecc636c02d017532a45a17baf70e",
          "md5": "929beba552a6126511568e2c21d8ab7f",
          "sha256": "1f37466227a67e911ecff81340b5bcab03f6aaadead637f888b8669aefd4e91b"
        },
        "downloads": -1,
        "filename": "poethepoet-0.12.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "929beba552a6126511568e2c21d8ab7f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2",
        "size": 54687,
        "upload_time": "2022-01-13T19:59:05",
        "upload_time_iso_8601": "2022-01-13T19:59:05.733502Z",
        "url": "https://files.pythonhosted.org/packages/39/f8/307dc8ace172948c685a87da232a2f1cecc636c02d017532a45a17baf70e/poethepoet-0.12.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74bdb7f06f11627b534f7ccf853a4e717d447dca43f451663511737c58892f1c",
          "md5": "4144e070fa26da1bd6c2c5d911c9d80d",
          "sha256": "6ec0be69f26baa6ed6a2d194d7e70fa7b1192322a1b093f50f3939b7748a3f8d"
        },
        "downloads": -1,
        "filename": "poethepoet-0.12.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4144e070fa26da1bd6c2c5d911c9d80d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2",
        "size": 62470,
        "upload_time": "2022-01-13T19:59:07",
        "upload_time_iso_8601": "2022-01-13T19:59:07.348325Z",
        "url": "https://files.pythonhosted.org/packages/74/bd/b7f06f11627b534f7ccf853a4e717d447dca43f451663511737c58892f1c/poethepoet-0.12.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab4a1daadfecdb1a8fb6c50e2211ec3af564968ee39126cfdc3cc11ce75033d2",
          "md5": "7548c2b6eb5eeeadda213f04451b7c8d",
          "sha256": "dd91d7113d3d33a40cfe6ca01c0a1982e33dae5a4f1f0c638f57199a00d85405"
        },
        "downloads": -1,
        "filename": "poethepoet-0.12.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7548c2b6eb5eeeadda213f04451b7c8d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2",
        "size": 54695,
        "upload_time": "2022-01-16T13:56:56",
        "upload_time_iso_8601": "2022-01-16T13:56:56.849719Z",
        "url": "https://files.pythonhosted.org/packages/ab/4a/1daadfecdb1a8fb6c50e2211ec3af564968ee39126cfdc3cc11ce75033d2/poethepoet-0.12.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "879b01901d60076f9456c88ab5357ad780855c8bbacf7a1ace3fda4e1229a110",
          "md5": "0ed5a347bb9da26d43848b1c6d1c0ad3",
          "sha256": "76eee7111c1d63e765c441aee56fbc0abe151233df99e28b2da5b3dd1e7c9ea4"
        },
        "downloads": -1,
        "filename": "poethepoet-0.12.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0ed5a347bb9da26d43848b1c6d1c0ad3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2",
        "size": 62444,
        "upload_time": "2022-01-16T13:56:58",
        "upload_time_iso_8601": "2022-01-16T13:56:58.415334Z",
        "url": "https://files.pythonhosted.org/packages/87/9b/01901d60076f9456c88ab5357ad780855c8bbacf7a1ace3fda4e1229a110/poethepoet-0.12.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f704991f4b30c159d2cbc060ba93bc53e76c9a4c544091c53ec820f8ee2e2a7",
          "md5": "6926c16936225c89300e292eb189e3a2",
          "sha256": "5b645546d6bbda29cb362d563276c85c19e65dc8d84ed4155964f6e639cb3796"
        },
        "downloads": -1,
        "filename": "poethepoet-0.12.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6926c16936225c89300e292eb189e3a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2",
        "size": 54752,
        "upload_time": "2022-02-09T20:22:31",
        "upload_time_iso_8601": "2022-02-09T20:22:31.313699Z",
        "url": "https://files.pythonhosted.org/packages/3f/70/4991f4b30c159d2cbc060ba93bc53e76c9a4c544091c53ec820f8ee2e2a7/poethepoet-0.12.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d850322e537e0bf98bde61527894a1dc6264ebcbf6705f500761fced319250ee",
          "md5": "5b6a5afaf729cb64adfb41c3339c6084",
          "sha256": "34d6396a5c9c9741d6cb72afb71797a9c522df1c37717ee15d84d73a1b353387"
        },
        "downloads": -1,
        "filename": "poethepoet-0.12.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5b6a5afaf729cb64adfb41c3339c6084",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2",
        "size": 62497,
        "upload_time": "2022-02-09T20:22:33",
        "upload_time_iso_8601": "2022-02-09T20:22:33.114636Z",
        "url": "https://files.pythonhosted.org/packages/d8/50/322e537e0bf98bde61527894a1dc6264ebcbf6705f500761fced319250ee/poethepoet-0.12.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.13.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2445af8e161990311012bee734c0e0123b34a985d07b32da56c061867ad27cfc",
          "md5": "3ae9eaddc8cf38ad7150566776345fec",
          "sha256": "761d08d6980e31e167d3525852fabf538f756fd62fbce52be9f34f5545b395d6"
        },
        "downloads": -1,
        "filename": "poethepoet-0.13.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ae9eaddc8cf38ad7150566776345fec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2",
        "size": 56281,
        "upload_time": "2022-02-27T20:37:15",
        "upload_time_iso_8601": "2022-02-27T20:37:15.353168Z",
        "url": "https://files.pythonhosted.org/packages/24/45/af8e161990311012bee734c0e0123b34a985d07b32da56c061867ad27cfc/poethepoet-0.13.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fb38e8479bcd3806834371bdec59348876609d50ce5964cc6b9ddc5ea52bd8a",
          "md5": "7401f8e68d5d3b3ed43301da61d65ce2",
          "sha256": "79f1c5d7b75d3737fab981f5524ef715687757eef5428d2b65795dc09440ad8c"
        },
        "downloads": -1,
        "filename": "poethepoet-0.13.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7401f8e68d5d3b3ed43301da61d65ce2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2",
        "size": 64035,
        "upload_time": "2022-02-27T20:37:17",
        "upload_time_iso_8601": "2022-02-27T20:37:17.638347Z",
        "url": "https://files.pythonhosted.org/packages/6f/b3/8e8479bcd3806834371bdec59348876609d50ce5964cc6b9ddc5ea52bd8a/poethepoet-0.13.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.13.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd3aeb3e42abf42584407865456cdd5110537db9d81381c0df341e58cbf5483d",
          "md5": "2c4f15c4cdffc03c9a81ac2d1f310d2b",
          "sha256": "47e7b38c8b5412f840447f7612a9330697e8633e7500a7340b6734f50e26e380"
        },
        "downloads": -1,
        "filename": "poethepoet-0.13.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c4f15c4cdffc03c9a81ac2d1f310d2b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2",
        "size": 56279,
        "upload_time": "2022-03-01T21:01:49",
        "upload_time_iso_8601": "2022-03-01T21:01:49.773190Z",
        "url": "https://files.pythonhosted.org/packages/bd/3a/eb3e42abf42584407865456cdd5110537db9d81381c0df341e58cbf5483d/poethepoet-0.13.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a8ca487ff88bc62ec889c1e72f63029403ee30990add38cb74757befc1402b8",
          "md5": "b974c77695e6df02e423b866c1d6d25c",
          "sha256": "4f6962f17f5d5a453fd7fa66e3e7897e9191d4289148433efe441c81f2451a46"
        },
        "downloads": -1,
        "filename": "poethepoet-0.13.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b974c77695e6df02e423b866c1d6d25c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2",
        "size": 64040,
        "upload_time": "2022-03-01T21:01:52",
        "upload_time_iso_8601": "2022-03-01T21:01:52.187053Z",
        "url": "https://files.pythonhosted.org/packages/7a/8c/a487ff88bc62ec889c1e72f63029403ee30990add38cb74757befc1402b8/poethepoet-0.13.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.14.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5683749a277cf18696d3735d72aae7def660e950be886fc0af9fe985d86c0533",
          "md5": "b1c82beb53a7f3e58898681833d9f26d",
          "sha256": "e274988b469306c11b634b1c6b1cf1ffc880353afbcff874540090c3c9c50c2c"
        },
        "downloads": -1,
        "filename": "poethepoet-0.14.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1c82beb53a7f3e58898681833d9f26d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 57424,
        "upload_time": "2022-06-18T19:35:42",
        "upload_time_iso_8601": "2022-06-18T19:35:42.306104Z",
        "url": "https://files.pythonhosted.org/packages/56/83/749a277cf18696d3735d72aae7def660e950be886fc0af9fe985d86c0533/poethepoet-0.14.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9dc0b15197624082428572bcc2698a32fdb61f9f96f1c4b4228d5890d25011cd",
          "md5": "b6e8e794b40c7c9178e11cb491108ae6",
          "sha256": "1557f324e3ad791d86f515d4138dbfd97ac71c6ff3ec2d308f4d792e3002d1f0"
        },
        "downloads": -1,
        "filename": "poethepoet-0.14.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b6e8e794b40c7c9178e11cb491108ae6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 65910,
        "upload_time": "2022-06-18T19:35:44",
        "upload_time_iso_8601": "2022-06-18T19:35:44.447798Z",
        "url": "https://files.pythonhosted.org/packages/9d/c0/b15197624082428572bcc2698a32fdb61f9f96f1c4b4228d5890d25011cd/poethepoet-0.14.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.15.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f49bd16a9dc2051b52bc43449168e11ccbf879dcb3379ab73c2ef224af023d55",
          "md5": "49d60d3e0367acc3b977e06e89e8fe62",
          "sha256": "8ca49d8a9928a3ce1753315d6df0866888557eccb0fe37a8c88fea47454cfe12"
        },
        "downloads": -1,
        "filename": "poethepoet-0.15.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "49d60d3e0367acc3b977e06e89e8fe62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 59236,
        "upload_time": "2022-07-03T12:02:34",
        "upload_time_iso_8601": "2022-07-03T12:02:34.401214Z",
        "url": "https://files.pythonhosted.org/packages/f4/9b/d16a9dc2051b52bc43449168e11ccbf879dcb3379ab73c2ef224af023d55/poethepoet-0.15.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27546d763400dfe8d080a0987be6ab323c0947d86fbc39012c8a22922cc2ae08",
          "md5": "3d6ee8981d693b1c36c9bfaad3df7c9a",
          "sha256": "5843260c9074b6c42bf2e51f21107efe37e230cf75da3dd3f4b43904f365b26c"
        },
        "downloads": -1,
        "filename": "poethepoet-0.15.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3d6ee8981d693b1c36c9bfaad3df7c9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 68645,
        "upload_time": "2022-07-03T12:02:37",
        "upload_time_iso_8601": "2022-07-03T12:02:37.059314Z",
        "url": "https://files.pythonhosted.org/packages/27/54/6d763400dfe8d080a0987be6ab323c0947d86fbc39012c8a22922cc2ae08/poethepoet-0.15.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.16.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c50e72070d36f5c23d84cc7df97a80738c532b4bad6580fa12e954840d5eb8dd",
          "md5": "277bd734dc7e16171a790c911ef89b79",
          "sha256": "87482ea8bba4e5db4abbd8e6360baee73b2ce0f3d5f5e99e81cdfa39d72d118f"
        },
        "downloads": -1,
        "filename": "poethepoet-0.16.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "277bd734dc7e16171a790c911ef89b79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 59797,
        "upload_time": "2022-07-17T20:42:43",
        "upload_time_iso_8601": "2022-07-17T20:42:43.076701Z",
        "url": "https://files.pythonhosted.org/packages/c5/0e/72070d36f5c23d84cc7df97a80738c532b4bad6580fa12e954840d5eb8dd/poethepoet-0.16.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f48f10121fb2dd981ffa19bd90cc06b1c1d97647cc7f1bebe261e728b548c58",
          "md5": "8a4dea31a155f236fee2fb23c4a03d6e",
          "sha256": "6455aec39f198be92dbf210a4416e1635119e967204c092b431c8b10024db1d1"
        },
        "downloads": -1,
        "filename": "poethepoet-0.16.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8a4dea31a155f236fee2fb23c4a03d6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 69773,
        "upload_time": "2022-07-17T20:42:45",
        "upload_time_iso_8601": "2022-07-17T20:42:45.330186Z",
        "url": "https://files.pythonhosted.org/packages/6f/48/f10121fb2dd981ffa19bd90cc06b1c1d97647cc7f1bebe261e728b548c58/poethepoet-0.16.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.16.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac06a0fc4d93678c0480eb5963c14ec17ba4dc1396aeefbf9a00a9dce930e10b",
          "md5": "b9d6202e9ba4218c14b6475b51bfa9c9",
          "sha256": "ec1cd83e23f9141d642c0edf64f3fe1ddccfac60f48aee99521839f15b04965f"
        },
        "downloads": -1,
        "filename": "poethepoet-0.16.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b9d6202e9ba4218c14b6475b51bfa9c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 60194,
        "upload_time": "2022-08-30T21:18:17",
        "upload_time_iso_8601": "2022-08-30T21:18:17.629716Z",
        "url": "https://files.pythonhosted.org/packages/ac/06/a0fc4d93678c0480eb5963c14ec17ba4dc1396aeefbf9a00a9dce930e10b/poethepoet-0.16.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8953252d7c45aaf0c7b991e6336c3c0d7bf08ae0822cfe990323fdb40c1a6f7",
          "md5": "4fb85573834c6bc508bf41640aca963d",
          "sha256": "d3b23bc7c4dcc92b61c20c1949cd4182dfcab805de001383cef28e6307702c6f"
        },
        "downloads": -1,
        "filename": "poethepoet-0.16.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4fb85573834c6bc508bf41640aca963d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 70094,
        "upload_time": "2022-08-30T21:18:19",
        "upload_time_iso_8601": "2022-08-30T21:18:19.896243Z",
        "url": "https://files.pythonhosted.org/packages/b8/95/3252d7c45aaf0c7b991e6336c3c0d7bf08ae0822cfe990323fdb40c1a6f7/poethepoet-0.16.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.16.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dcd2b6249f6b388879974f0d87cf0db9f17ddbe59f05f0f15d2589eb744ee79",
          "md5": "64e32b2263d2c0a7d912eb4fb94c8f30",
          "sha256": "d920138def502d6f16a305a4fb8e8c35e9f775ae531eb6650b69288ecc3476aa"
        },
        "downloads": -1,
        "filename": "poethepoet-0.16.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "64e32b2263d2c0a7d912eb4fb94c8f30",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 59801,
        "upload_time": "2022-09-03T19:35:38",
        "upload_time_iso_8601": "2022-09-03T19:35:38.372047Z",
        "url": "https://files.pythonhosted.org/packages/3d/cd/2b6249f6b388879974f0d87cf0db9f17ddbe59f05f0f15d2589eb744ee79/poethepoet-0.16.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b3f6547bb436dfeb43fafc8d465001c2cce9765b1249a564083a4c4be9d345b",
          "md5": "904f2cdbf885659a6b7832a8998678a7",
          "sha256": "a24632fa123d6f15d72be86dd6c7e009384b70848f5369a766af89ff5ab8d608"
        },
        "downloads": -1,
        "filename": "poethepoet-0.16.2.tar.gz",
        "has_sig": false,
        "md5_digest": "904f2cdbf885659a6b7832a8998678a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 70416,
        "upload_time": "2022-09-03T19:35:41",
        "upload_time_iso_8601": "2022-09-03T19:35:41.529723Z",
        "url": "https://files.pythonhosted.org/packages/0b/3f/6547bb436dfeb43fafc8d465001c2cce9765b1249a564083a4c4be9d345b/poethepoet-0.16.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.16.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a99519d01f869808e9c4a737bdfc040fddda0ae1e0306e2bd382dee5e818b2c",
          "md5": "8d58b3d3a8702e79e4f2f415b5bafc16",
          "sha256": "b33747d659baec0059acb22eb5648f770061a0aad57876fb2a4f3f7939917d81"
        },
        "downloads": -1,
        "filename": "poethepoet-0.16.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d58b3d3a8702e79e4f2f415b5bafc16",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 59902,
        "upload_time": "2022-10-08T21:36:33",
        "upload_time_iso_8601": "2022-10-08T21:36:33.661379Z",
        "url": "https://files.pythonhosted.org/packages/8a/99/519d01f869808e9c4a737bdfc040fddda0ae1e0306e2bd382dee5e818b2c/poethepoet-0.16.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ede58079459510a6fd4d528c95bfda245014d38268355538bacca219a78e8d7",
          "md5": "566ceec30be8b36439f006e39cc7c2c6",
          "sha256": "750cc15614b99a8594d47611f89ec7db7d07046c00ab7c4a50eefec5a0219a0d"
        },
        "downloads": -1,
        "filename": "poethepoet-0.16.3.tar.gz",
        "has_sig": false,
        "md5_digest": "566ceec30be8b36439f006e39cc7c2c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 69712,
        "upload_time": "2022-10-08T21:36:35",
        "upload_time_iso_8601": "2022-10-08T21:36:35.732355Z",
        "url": "https://files.pythonhosted.org/packages/3e/de/58079459510a6fd4d528c95bfda245014d38268355538bacca219a78e8d7/poethepoet-0.16.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.16.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3261ccac7107101378d96fb7bb3fe84fbc89a6042e890ea6ab96e290f7f5a98b",
          "md5": "badd89d14f1d2d5dbb29d7bfbc3442db",
          "sha256": "1f05dce92ca6457d018696b614ba2149261380f30ceb21c196daf19c0c2e1fcd"
        },
        "downloads": -1,
        "filename": "poethepoet-0.16.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "badd89d14f1d2d5dbb29d7bfbc3442db",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 59908,
        "upload_time": "2022-10-09T13:46:43",
        "upload_time_iso_8601": "2022-10-09T13:46:43.160945Z",
        "url": "https://files.pythonhosted.org/packages/32/61/ccac7107101378d96fb7bb3fe84fbc89a6042e890ea6ab96e290f7f5a98b/poethepoet-0.16.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0957beca3f51197c5a64d6c186414b1fe5f86596ce237db26641870e75141870",
          "md5": "b641bf4bda3a387fc5e5f8e399835263",
          "sha256": "a80f6bba64812515c406ffc218aff833951b17854eb111f724b48c44f9759af5"
        },
        "downloads": -1,
        "filename": "poethepoet-0.16.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b641bf4bda3a387fc5e5f8e399835263",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 69702,
        "upload_time": "2022-10-09T13:46:45",
        "upload_time_iso_8601": "2022-10-09T13:46:45.702093Z",
        "url": "https://files.pythonhosted.org/packages/09/57/beca3f51197c5a64d6c186414b1fe5f86596ce237db26641870e75141870/poethepoet-0.16.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.16.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c42b4acfd06b593f3abb6274239600f61959e87f833964a22bb5bcf0afe6e57f",
          "md5": "393408586fabb31bff330c9f9a6b650e",
          "sha256": "493d5d47b4cb0894dde6a69d14129ba39ef3f124fabda1f83ebb39bbf737a40e"
        },
        "downloads": -1,
        "filename": "poethepoet-0.16.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "393408586fabb31bff330c9f9a6b650e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 60329,
        "upload_time": "2022-11-27T17:42:14",
        "upload_time_iso_8601": "2022-11-27T17:42:14.873888Z",
        "url": "https://files.pythonhosted.org/packages/c4/2b/4acfd06b593f3abb6274239600f61959e87f833964a22bb5bcf0afe6e57f/poethepoet-0.16.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3655d5339f7066cce546c9f6998f8baa41c8e7dd682cb9392dd1a29f21563571",
          "md5": "2d1ac9b1334fd5a826bb2650ab9a67ec",
          "sha256": "3c958792ce488661ba09df67ba832a1b3141aa640236505ee60c23f4b1db4dbc"
        },
        "downloads": -1,
        "filename": "poethepoet-0.16.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2d1ac9b1334fd5a826bb2650ab9a67ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 70221,
        "upload_time": "2022-11-27T17:42:18",
        "upload_time_iso_8601": "2022-11-27T17:42:18.427383Z",
        "url": "https://files.pythonhosted.org/packages/36/55/d5339f7066cce546c9f6998f8baa41c8e7dd682cb9392dd1a29f21563571/poethepoet-0.16.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.17.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a0315c07b2fc7ed63e937eb672091ef457b419d4555b551ea8dc4f51f06144a",
          "md5": "28e378a845fc94b7c7ea199f602ae3a2",
          "sha256": "08f57f41d6d22d2bcea61f7eeb3c02b8dbb89ce8d704a8b0b37ceb27909cb3c6"
        },
        "downloads": -1,
        "filename": "poethepoet-0.17.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28e378a845fc94b7c7ea199f602ae3a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 64796,
        "upload_time": "2022-12-26T19:53:54",
        "upload_time_iso_8601": "2022-12-26T19:53:54.898237Z",
        "url": "https://files.pythonhosted.org/packages/3a/03/15c07b2fc7ed63e937eb672091ef457b419d4555b551ea8dc4f51f06144a/poethepoet-0.17.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e8c3684d201072ed0778332339693a17dfb4ea0fccbe4e731de70fba9b10c74",
          "md5": "7ac0bbc04bfe22f781f701a96fa590f2",
          "sha256": "b5425c34daa4128cb09062315b2bd2e7f8bfa3b6397259c5b9ab9deb886427d0"
        },
        "downloads": -1,
        "filename": "poethepoet-0.17.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7ac0bbc04bfe22f781f701a96fa590f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 77037,
        "upload_time": "2022-12-26T19:53:56",
        "upload_time_iso_8601": "2022-12-26T19:53:56.748904Z",
        "url": "https://files.pythonhosted.org/packages/6e/8c/3684d201072ed0778332339693a17dfb4ea0fccbe4e731de70fba9b10c74/poethepoet-0.17.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.17.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4872e279aa59562036938dd0e1b44202b907ba106e7bf1b3943f9d497ba05b9",
          "md5": "e4e257d80e8a1f1702128a86caa8ffaa",
          "sha256": "e54213659f3f2c6ed71fbfbe865ca14d095bb945c82a839df4df5e7811f5653d"
        },
        "downloads": -1,
        "filename": "poethepoet-0.17.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4e257d80e8a1f1702128a86caa8ffaa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 64845,
        "upload_time": "2022-12-26T21:03:29",
        "upload_time_iso_8601": "2022-12-26T21:03:29.459313Z",
        "url": "https://files.pythonhosted.org/packages/d4/87/2e279aa59562036938dd0e1b44202b907ba106e7bf1b3943f9d497ba05b9/poethepoet-0.17.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "baf17b3d59e4b41ede547ba7d1896a30f836b924435660c9343bf25c93da7e96",
          "md5": "5a8dcefba70b85494c254c9d82a9a6e7",
          "sha256": "0429990ab4faa92d96cd7b7d66e9cf5bb5598adbe0ee9af8482f9d10e28a6290"
        },
        "downloads": -1,
        "filename": "poethepoet-0.17.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5a8dcefba70b85494c254c9d82a9a6e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 77089,
        "upload_time": "2022-12-26T21:03:31",
        "upload_time_iso_8601": "2022-12-26T21:03:31.123355Z",
        "url": "https://files.pythonhosted.org/packages/ba/f1/7b3d59e4b41ede547ba7d1896a30f836b924435660c9343bf25c93da7e96/poethepoet-0.17.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.18.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8a9016a8017e8f690b38063f3249ff9b8bb6b634c5c4900c5759e8aeaa8fea4",
          "md5": "b6dafd559c00ff64d07644b486c17cf4",
          "sha256": "62ba57982cc8303356e1535e047abb38e29b6fb8c8455c5920c4e678c24241bc"
        },
        "downloads": -1,
        "filename": "poethepoet-0.18.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6dafd559c00ff64d07644b486c17cf4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69126,
        "upload_time": "2023-01-09T21:36:29",
        "upload_time_iso_8601": "2023-01-09T21:36:29.263273Z",
        "url": "https://files.pythonhosted.org/packages/e8/a9/016a8017e8f690b38063f3249ff9b8bb6b634c5c4900c5759e8aeaa8fea4/poethepoet-0.18.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b181e8493566769cece8be2efb3306b8e15993881883888ae5d47111e6b0f246",
          "md5": "8a3ce4ec7ed5e4854883543dcfe4e852",
          "sha256": "ee2c8a71ac07dea7e415ab9790308f3425ff4423385f159b0b0b4b8f7eba8b84"
        },
        "downloads": -1,
        "filename": "poethepoet-0.18.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8a3ce4ec7ed5e4854883543dcfe4e852",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 82087,
        "upload_time": "2023-01-09T21:36:31",
        "upload_time_iso_8601": "2023-01-09T21:36:31.382811Z",
        "url": "https://files.pythonhosted.org/packages/b1/81/e8493566769cece8be2efb3306b8e15993881883888ae5d47111e6b0f246/poethepoet-0.18.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.18.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "041e8d203bddfc9cf316f91b7c0147bed1421f053ae0d616b029cd4eb39aa1a1",
          "md5": "341be7f77a2087f915fe992becae0ac0",
          "sha256": "e85727bf6f4a10bf6c1a43026bdeb40df689bea3c4682d03cbe531cabc8f2ba6"
        },
        "downloads": -1,
        "filename": "poethepoet-0.18.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "341be7f77a2087f915fe992becae0ac0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69579,
        "upload_time": "2023-01-15T20:48:13",
        "upload_time_iso_8601": "2023-01-15T20:48:13.551483Z",
        "url": "https://files.pythonhosted.org/packages/04/1e/8d203bddfc9cf316f91b7c0147bed1421f053ae0d616b029cd4eb39aa1a1/poethepoet-0.18.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fbac4b1671182f3e2681d2ed721cea9f75fd5ab5c8011bb74673ba2e2d377f8",
          "md5": "1ed5ecbe6cb823899d8b143524689f19",
          "sha256": "5f3566b14c2f5dccdfbc3bb26f0096006b38dc0b9c74bd4f8dd1eba7b0e29f6a"
        },
        "downloads": -1,
        "filename": "poethepoet-0.18.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1ed5ecbe6cb823899d8b143524689f19",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 82460,
        "upload_time": "2023-01-15T20:48:15",
        "upload_time_iso_8601": "2023-01-15T20:48:15.444204Z",
        "url": "https://files.pythonhosted.org/packages/7f/ba/c4b1671182f3e2681d2ed721cea9f75fd5ab5c8011bb74673ba2e2d377f8/poethepoet-0.18.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.18.2b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6029145bf761e369d02753f11fd3487191b07ccd21938e8f1f4728b9db101ef3",
          "md5": "cfa278ade5d2d1d2345b63c6cc0d7244",
          "sha256": "14a7772d5fe337e35491f940cf326cc4fad6d2c9a4e6532e6c585f6d2bf5661c"
        },
        "downloads": -1,
        "filename": "poethepoet-0.18.2b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cfa278ade5d2d1d2345b63c6cc0d7244",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69638,
        "upload_time": "2023-02-04T21:00:54",
        "upload_time_iso_8601": "2023-02-04T21:00:54.596679Z",
        "url": "https://files.pythonhosted.org/packages/60/29/145bf761e369d02753f11fd3487191b07ccd21938e8f1f4728b9db101ef3/poethepoet-0.18.2b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bfb96dcbd513e8da5f10bca17d125eb2f4db73a00500876d553dbc7b31d8280",
          "md5": "7dd814ad29e274357fff993b99502efa",
          "sha256": "fcf706aa24e7ba6a966c8c8382f67fb574a16fd90512f86106fb9d9be855de0b"
        },
        "downloads": -1,
        "filename": "poethepoet-0.18.2b1.tar.gz",
        "has_sig": false,
        "md5_digest": "7dd814ad29e274357fff993b99502efa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 82496,
        "upload_time": "2023-02-04T21:00:56",
        "upload_time_iso_8601": "2023-02-04T21:00:56.489955Z",
        "url": "https://files.pythonhosted.org/packages/4b/fb/96dcbd513e8da5f10bca17d125eb2f4db73a00500876d553dbc7b31d8280/poethepoet-0.18.2b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.18.2b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b7f7aaf9d43ff4dafcb631c5cc8da379158b2d4e8264512bedaf3a28defc03c",
          "md5": "cd28f22f571c37d00e57e75ef630da7f",
          "sha256": "83f869d6dbcc875bfc4643ae1a0b4bfec1069ea3819a7f69f9dfaa9baf6a1af6"
        },
        "downloads": -1,
        "filename": "poethepoet-0.18.2b2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd28f22f571c37d00e57e75ef630da7f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69769,
        "upload_time": "2023-02-17T22:56:22",
        "upload_time_iso_8601": "2023-02-17T22:56:22.981377Z",
        "url": "https://files.pythonhosted.org/packages/3b/7f/7aaf9d43ff4dafcb631c5cc8da379158b2d4e8264512bedaf3a28defc03c/poethepoet-0.18.2b2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc8266b1a33c101acce683f8b5c5de6499c733773b1459bdb3a4bf65c916e04a",
          "md5": "d8a2c9589a6935be17a0f20a4e47e64c",
          "sha256": "4cd8b59a7c4fd23a123e29a197b892aecca47daebecea64fae8c0a71f3adca0d"
        },
        "downloads": -1,
        "filename": "poethepoet-0.18.2b2.tar.gz",
        "has_sig": false,
        "md5_digest": "d8a2c9589a6935be17a0f20a4e47e64c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 82698,
        "upload_time": "2023-02-17T22:56:25",
        "upload_time_iso_8601": "2023-02-17T22:56:25.179991Z",
        "url": "https://files.pythonhosted.org/packages/fc/82/66b1a33c101acce683f8b5c5de6499c733773b1459bdb3a4bf65c916e04a/poethepoet-0.18.2b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.19.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33391dc63bf219febc5cf83c6f5d9ff103d124b05252d715ec3047cdb79fc09c",
          "md5": "2deb692f983d3eaf5df8e20abd03b314",
          "sha256": "87038be589077e4b407050a9da644d9cd9e4076ccfc8abc7f855cf6870d5c6c2"
        },
        "downloads": -1,
        "filename": "poethepoet-0.19.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2deb692f983d3eaf5df8e20abd03b314",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 70508,
        "upload_time": "2023-03-22T21:51:23",
        "upload_time_iso_8601": "2023-03-22T21:51:23.712042Z",
        "url": "https://files.pythonhosted.org/packages/33/39/1dc63bf219febc5cf83c6f5d9ff103d124b05252d715ec3047cdb79fc09c/poethepoet-0.19.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "812284e02199b0e2223f7b63d2cd9ca00f9fee97bccc9e4c6673cb5d40bc44b1",
          "md5": "9a80c4d48e742a967a2626cc62f792f8",
          "sha256": "897eb85ec15876d79befc7d19d4c80ce7c8b214d1bb0dcfec640abd81616bfed"
        },
        "downloads": -1,
        "filename": "poethepoet-0.19.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9a80c4d48e742a967a2626cc62f792f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 69630,
        "upload_time": "2023-03-22T21:51:25",
        "upload_time_iso_8601": "2023-03-22T21:51:25.698260Z",
        "url": "https://files.pythonhosted.org/packages/81/22/84e02199b0e2223f7b63d2cd9ca00f9fee97bccc9e4c6673cb5d40bc44b1/poethepoet-0.19.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50046a69f7cdd6b5ac9ccb27a0e8b62319a54615ab3899a19e9526b34784249f",
          "md5": "70a4a1716db42bc3fe47490cf8a7668d",
          "sha256": "8bb129b83c53a9aaa2a9e0813f0e49b5f5e3f61a88b5f4c79eb9d107fd4e895e"
        },
        "downloads": -1,
        "filename": "poethepoet-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70a4a1716db42bc3fe47490cf8a7668d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 11533,
        "upload_time": "2020-06-17T19:42:46",
        "upload_time_iso_8601": "2020-06-17T19:42:46.291554Z",
        "url": "https://files.pythonhosted.org/packages/50/04/6a69f7cdd6b5ac9ccb27a0e8b62319a54615ab3899a19e9526b34784249f/poethepoet-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5a45ed39c05398a239e4da1249504f6760e27ce07c7ddf9e55b38097c60a3c6",
          "md5": "70066eeaadf4c7c7d5481e835de5af4e",
          "sha256": "4af43d1f9291891d12c6b6f8ebaf23abe34ef7ea2dcad00c1076a561ae18bb0c"
        },
        "downloads": -1,
        "filename": "poethepoet-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "70066eeaadf4c7c7d5481e835de5af4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 10999,
        "upload_time": "2020-06-17T19:42:47",
        "upload_time_iso_8601": "2020-06-17T19:42:47.155117Z",
        "url": "https://files.pythonhosted.org/packages/e5/a4/5ed39c05398a239e4da1249504f6760e27ce07c7ddf9e55b38097c60a3c6/poethepoet-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84ad2f266ba72786826bcf87298ba0e31726b1df06a644556d320c299c3d1221",
          "md5": "59e879672204649916dd3d095381e28c",
          "sha256": "77d80961bd616e4747fcee265c7214010bbc11f1bdb971e9e9007c19780bc2e7"
        },
        "downloads": -1,
        "filename": "poethepoet-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "59e879672204649916dd3d095381e28c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 16257,
        "upload_time": "2020-06-20T20:59:15",
        "upload_time_iso_8601": "2020-06-20T20:59:15.831365Z",
        "url": "https://files.pythonhosted.org/packages/84/ad/2f266ba72786826bcf87298ba0e31726b1df06a644556d320c299c3d1221/poethepoet-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12afe25451c0f8295d5cb86cc4bd84f6e8310ba01e59025e915cfb2e600fb7cd",
          "md5": "e853df1f455fef41972a9a13a4809b8e",
          "sha256": "84b50767a83972d5967111853a427e54436d566cfbe455235723f6a9de123850"
        },
        "downloads": -1,
        "filename": "poethepoet-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e853df1f455fef41972a9a13a4809b8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 14861,
        "upload_time": "2020-06-20T20:59:16",
        "upload_time_iso_8601": "2020-06-20T20:59:16.776542Z",
        "url": "https://files.pythonhosted.org/packages/12/af/e25451c0f8295d5cb86cc4bd84f6e8310ba01e59025e915cfb2e600fb7cd/poethepoet-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4378f91f68ff39f39b4ca06d1d177223ede6cd0ca78b9858a5baa6e09c1f8971",
          "md5": "25a6474a2206983c5f3f10e68b639be8",
          "sha256": "02f8f5dff501f6e2e998898d41d892838381ccb2437f2924daa5e587278b3f37"
        },
        "downloads": -1,
        "filename": "poethepoet-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25a6474a2206983c5f3f10e68b639be8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 16747,
        "upload_time": "2020-07-11T16:39:21",
        "upload_time_iso_8601": "2020-07-11T16:39:21.498080Z",
        "url": "https://files.pythonhosted.org/packages/43/78/f91f68ff39f39b4ca06d1d177223ede6cd0ca78b9858a5baa6e09c1f8971/poethepoet-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6bf66eba17db5e2c3a2e9fd6c3cb03deed895ab56504074ca9ffc3354412b433",
          "md5": "be3325c2ba9924feaddf076b45f30044",
          "sha256": "848329048591c9a8ac86d558771f8be8610e189cd3eec17ea77028a667c5dcec"
        },
        "downloads": -1,
        "filename": "poethepoet-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "be3325c2ba9924feaddf076b45f30044",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 15781,
        "upload_time": "2020-07-11T16:39:22",
        "upload_time_iso_8601": "2020-07-11T16:39:22.382787Z",
        "url": "https://files.pythonhosted.org/packages/6b/f6/6eba17db5e2c3a2e9fd6c3cb03deed895ab56504074ca9ffc3354412b433/poethepoet-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "029191cdada7a45c5647539c1108bfc513f817a333500dd800ec333c5219c20e",
          "md5": "963488674851eeafa9d4817ec9a970d8",
          "sha256": "dfc7d6666156005ed160b1652270a1fd7acc5329c60d7be170326b33d88b6be2"
        },
        "downloads": -1,
        "filename": "poethepoet-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "963488674851eeafa9d4817ec9a970d8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 16905,
        "upload_time": "2020-08-02T13:45:07",
        "upload_time_iso_8601": "2020-08-02T13:45:07.145522Z",
        "url": "https://files.pythonhosted.org/packages/02/91/91cdada7a45c5647539c1108bfc513f817a333500dd800ec333c5219c20e/poethepoet-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02fbabe56faecd436f648ecc27c0e9570d799d70686ef073373668b70aa4d998",
          "md5": "d201080e0f53bb11dc88e8584f9b6ec0",
          "sha256": "ef65313de2703f7beead7b05b10668a6c5f216e6c434746d889047562402b619"
        },
        "downloads": -1,
        "filename": "poethepoet-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d201080e0f53bb11dc88e8584f9b6ec0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 15804,
        "upload_time": "2020-08-02T13:45:08",
        "upload_time_iso_8601": "2020-08-02T13:45:08.237473Z",
        "url": "https://files.pythonhosted.org/packages/02/fb/abe56faecd436f648ecc27c0e9570d799d70686ef073373668b70aa4d998/poethepoet-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d856f8d246bf0ff21e611d2872510eabebef33272b09cd3fd0db311c342e05e5",
          "md5": "2ac4cd9dbd4500727c4a2fdea93ab8cc",
          "sha256": "86baa727dabe281de0a4e7098c0c0333b64a4c21b3e6cc4a05814f4cece970e6"
        },
        "downloads": -1,
        "filename": "poethepoet-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ac4cd9dbd4500727c4a2fdea93ab8cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 21161,
        "upload_time": "2020-08-09T18:40:06",
        "upload_time_iso_8601": "2020-08-09T18:40:06.798598Z",
        "url": "https://files.pythonhosted.org/packages/d8/56/f8d246bf0ff21e611d2872510eabebef33272b09cd3fd0db311c342e05e5/poethepoet-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc04c68d7dac407c04177f1a604b37c285194dce12d81d91f4a8fa8a351f5ec1",
          "md5": "312304e4d549665d2e929daaaa40f16a",
          "sha256": "f37e5e4edd3a56e723c1fdcc33b8b6e38b8ad5feb2940caa2648cbe2e774ccdf"
        },
        "downloads": -1,
        "filename": "poethepoet-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "312304e4d549665d2e929daaaa40f16a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 18825,
        "upload_time": "2020-08-09T18:40:08",
        "upload_time_iso_8601": "2020-08-09T18:40:08.028557Z",
        "url": "https://files.pythonhosted.org/packages/cc/04/c68d7dac407c04177f1a604b37c285194dce12d81d91f4a8fa8a351f5ec1/poethepoet-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d623d84beae940741fd2d7fa4be017491ff5a2b8d7914145144c9823e805b11",
          "md5": "d76c3897cafedfe4a62d0822695e1f00",
          "sha256": "b3644ac15b9b4979619cf514ed8a3465e6f55055bb124eedb5a4fe86d17cfbd8"
        },
        "downloads": -1,
        "filename": "poethepoet-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d76c3897cafedfe4a62d0822695e1f00",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 22620,
        "upload_time": "2020-08-16T10:38:48",
        "upload_time_iso_8601": "2020-08-16T10:38:48.328021Z",
        "url": "https://files.pythonhosted.org/packages/5d/62/3d84beae940741fd2d7fa4be017491ff5a2b8d7914145144c9823e805b11/poethepoet-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67a1c2536206a2d4e2f144952768195fd0bf8e85f2e6ca28e4156672ab678ec5",
          "md5": "c3e0b97b93f775b3ed6471515b0545fd",
          "sha256": "1b2e073c6a97790ecfa5733b597324edb5ae8e27991c0c0274be9924036ffecc"
        },
        "downloads": -1,
        "filename": "poethepoet-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c3e0b97b93f775b3ed6471515b0545fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 20413,
        "upload_time": "2020-08-16T10:38:49",
        "upload_time_iso_8601": "2020-08-16T10:38:49.540067Z",
        "url": "https://files.pythonhosted.org/packages/67/a1/c2536206a2d4e2f144952768195fd0bf8e85f2e6ca28e4156672ab678ec5/poethepoet-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1d637bbe40a6acccaa91dbf8f3c9aca04da39514e2b87caed49183c6d3217b8",
          "md5": "cc02e6da276339240a075e22995ef136",
          "sha256": "f5984f9bd1cba8719f5befd7461c4bd25dbb2f85539197bb4f0ff7f31e6b1e43"
        },
        "downloads": -1,
        "filename": "poethepoet-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc02e6da276339240a075e22995ef136",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 23402,
        "upload_time": "2020-09-02T20:23:22",
        "upload_time_iso_8601": "2020-09-02T20:23:22.695799Z",
        "url": "https://files.pythonhosted.org/packages/e1/d6/37bbe40a6acccaa91dbf8f3c9aca04da39514e2b87caed49183c6d3217b8/poethepoet-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17799c14ec804257040afca9612def3ae0a2160547fe80276f1c8445844084b7",
          "md5": "50cf307ad89705eb6defe2345d59aea7",
          "sha256": "3cf5d4e95a6c763413b451236405aab0ec6b737a00027720b794953867d3329d"
        },
        "downloads": -1,
        "filename": "poethepoet-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "50cf307ad89705eb6defe2345d59aea7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 21465,
        "upload_time": "2020-09-02T20:23:23",
        "upload_time_iso_8601": "2020-09-02T20:23:23.727669Z",
        "url": "https://files.pythonhosted.org/packages/17/79/9c14ec804257040afca9612def3ae0a2160547fe80276f1c8445844084b7/poethepoet-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7409466df48675fe57069023bac33e5bcb478b5206cb4bc13e316fe3d05c8040",
          "md5": "fa4147a08650e6c1ddfb88517a0ca055",
          "sha256": "6b1df9a755c297d5b10749cd4713924055b41edfa62055770c8bd6b5da8e2c69"
        },
        "downloads": -1,
        "filename": "poethepoet-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa4147a08650e6c1ddfb88517a0ca055",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 26944,
        "upload_time": "2020-09-29T21:34:13",
        "upload_time_iso_8601": "2020-09-29T21:34:13.387412Z",
        "url": "https://files.pythonhosted.org/packages/74/09/466df48675fe57069023bac33e5bcb478b5206cb4bc13e316fe3d05c8040/poethepoet-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1267034b12e52f7f13a98d0a04c0f9c5330f08f7aa83096a13b1414a9d54e088",
          "md5": "b5402d8dcdce7f4f4cc30c58f8e35ed5",
          "sha256": "ab2263fd7be81d16d38a4b4fe42a055d992d04421e61cad36498b1e4bd8ee2a6"
        },
        "downloads": -1,
        "filename": "poethepoet-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b5402d8dcdce7f4f4cc30c58f8e35ed5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 23854,
        "upload_time": "2020-09-29T21:34:14",
        "upload_time_iso_8601": "2020-09-29T21:34:14.703551Z",
        "url": "https://files.pythonhosted.org/packages/12/67/034b12e52f7f13a98d0a04c0f9c5330f08f7aa83096a13b1414a9d54e088/poethepoet-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "33391dc63bf219febc5cf83c6f5d9ff103d124b05252d715ec3047cdb79fc09c",
        "md5": "2deb692f983d3eaf5df8e20abd03b314",
        "sha256": "87038be589077e4b407050a9da644d9cd9e4076ccfc8abc7f855cf6870d5c6c2"
      },
      "downloads": -1,
      "filename": "poethepoet-0.19.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2deb692f983d3eaf5df8e20abd03b314",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 70508,
      "upload_time": "2023-03-22T21:51:23",
      "upload_time_iso_8601": "2023-03-22T21:51:23.712042Z",
      "url": "https://files.pythonhosted.org/packages/33/39/1dc63bf219febc5cf83c6f5d9ff103d124b05252d715ec3047cdb79fc09c/poethepoet-0.19.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "812284e02199b0e2223f7b63d2cd9ca00f9fee97bccc9e4c6673cb5d40bc44b1",
        "md5": "9a80c4d48e742a967a2626cc62f792f8",
        "sha256": "897eb85ec15876d79befc7d19d4c80ce7c8b214d1bb0dcfec640abd81616bfed"
      },
      "downloads": -1,
      "filename": "poethepoet-0.19.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9a80c4d48e742a967a2626cc62f792f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 69630,
      "upload_time": "2023-03-22T21:51:25",
      "upload_time_iso_8601": "2023-03-22T21:51:25.698260Z",
      "url": "https://files.pythonhosted.org/packages/81/22/84e02199b0e2223f7b63d2cd9ca00f9fee97bccc9e4c6673cb5d40bc44b1/poethepoet-0.19.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}