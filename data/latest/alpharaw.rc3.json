{
  "info": {
    "author": "Mann Labs",
    "author_email": "opensource@alphapept.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "AlphaRaw\n================\n\n[![Default installation and tests](https://github.com/MannLabs/alpharaw/actions/workflows/pip_installation.yml/badge.svg)](https://github.com/MannLabs/alpharaw/actions/workflows/pip_installation.yml)\n[![Publish on PyPi and release on GitHub](https://github.com/MannLabs/alpharaw/actions/workflows/publish_and_release.yml/badge.svg)](https://github.com/MannLabs/alpharaw/actions/workflows/publish_and_release.yml)\n[![pypi](https://img.shields.io/pypi/v/alpharaw)](https://pypi.org/project/alpharaw)\n[![pip downloads](https://img.shields.io/pypi/dm/alpharaw?color=blue&label=pip%20downloads)](https://pypi.org/project/alpharaw)\n![Python](https://img.shields.io/pypi/pyversions/alpharaw)\n[![Documentation Status](https://readthedocs.org/projects/alpharaw/badge/?version=latest)](https://alpharaw.readthedocs.io/en/latest/?badge=latest)\n\n## About\n\nAn open-source Python package of the AlphaPept ecosystem from the [Mann\nLabs at the Max Planck Institute of\nBiochemistry](https://www.biochem.mpg.de/mann) to unify raw MS data\naccession and storage. To enable all hyperlinks in this document, please\nview it at [GitHub](https://github.com/MannLabs/alpharaw).\n\n- [**About**](#about)\n- [**License**](#license)\n- [**Installation**](#installation)\n  - [**Pip installer**](#pip)\n  - [**Developer installer**](#developer)\n- [**Usage**](#usage)\n  - [**Python and jupyter notebooks**](#python-and-jupyter-notebooks)\n- [**Troubleshooting**](#troubleshooting)\n- [**Citations**](#citations)\n- [**How to contribute**](#how-to-contribute)\n- [**Changelog**](#changelog)\n\n------------------------------------------------------------------------\n\n## License\n\nAlphaRaw was developed by the [Mann Labs at the Max Planck Institute of\nBiochemistry](https://www.biochem.mpg.de/mann) and is freely available\nwith an [Apache License](LICENSE.txt). External Python packages\n(available in the [requirements](requirements) folder) have their own\nlicenses, which can be consulted on their respective websites.\n\n------------------------------------------------------------------------\n\n## Installation\n\nPythonnet must be installed to access Thermo or Sciex raw data.\n\n#### For Windows\n\nPythonnet will be automatically installed via pip.\n\n#### For Linux\n\n1.  Install Mono from mono-project website [Mono\n    Linux](https://www.mono-project.com/download/stable/#download-lin).\n    NOTE, the installed mono version should be at least 6.10, which\n    requires you to add the ppa to your trusted sources!\n2.  Install pythonnet with `pip install pythonnet`.\n\n#### For MacOS\n\n1.  Install [brew](https://brew.sh) and pkg-config:\n    `brew install pkg-config` 3. Install Mono from mono-project website\n    [Mono Mac](https://www.mono-project.com/download/stable/)\n2.  Register the Mono-Path to your system: For macOS Catalina, open the\n    configuration of zsh via the terminal:\n\n- Type `nano ~/.zshrc` to open the configuration of the terminal\n- Append the mono path to your `PKG_CONFIG_PATH`:\n  `export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/lib/pkgconfig:/Library/Frameworks/Mono.framework/Versions/Current/lib/pkgconfig:$PKG_CONFIG_PATH`.\n- Save everything and execute `. ~/.zshrc`\n\n3.  Install pythonnet with `pip install pythonnet`.\n\n------------------------------------------------------------------------\n\nAlphaRaw can be installed and used on all major operating systems\n(Windows, macOS and Linux). There are three different types of\ninstallation possible:\n\n- [**Pip installer:**](#pip) Choose this installation if you want to use\n  AlphaRaw as a Python package in an existing Python 3.8 environment\n  (e.g. a Jupyter notebook).\n- [**Developer installer:**](#developer) Choose this installation if you\n  are familiar with CLI tools, [conda](https://docs.conda.io/en/latest/)\n  and Python. This installation allows access to all available features\n  of AlphaRaw and even allows to modify its source code directly.\n  Generally, the developer version of AlphaRaw outperforms the\n  precompiled versions which makes this the installation of choice for\n  high-throughput experiments.\n\n### Pip\n\nAlphaRaw can be installed in an existing Python 3.8 environment with a\nsingle `bash` command. *This `bash` command can also be run directly\nfrom within a Jupyter notebook by prepending it with a `!`*:\n\n``` bash\npip install alpharaw\n```\n\nInstalling AlphaRaw like this avoids conflicts when integrating it in\nother tools, as this does not enforce strict versioning of dependancies.\nHowever, if new versions of dependancies are released, they are not\nguaranteed to be fully compatible with AlphaRaw. While this should only\noccur in rare cases where dependencies are not backwards compatible, you\ncan always force AlphaRaw to use dependancy versions which are known to\nbe compatible with:\n\n``` bash\npip install \"alpharaw[stable]\"\n```\n\nNOTE: You might need to run `pip install pip --upgrade` before installing\nAlphaRaw like this. Also note the double quotes `\"`.\n\nFor those who are really adventurous, it is also possible to directly\ninstall any branch (e.g. `@development`) with any extras\n(e.g. `#egg=alpharaw[stable,development-stable]`) from GitHub with e.g.\n\n``` bash\npip install \"git+https://github.com/MannLabs/alpharaw.git@development#egg=alpharaw[stable,development-stable]\"\n```\n\n### Developer\n\nAlphaRaw can also be installed in editable (i.e. developer) mode with a\nfew `bash` commands. This allows to fully customize the software and\neven modify the source code to your specific needs. When an editable\nPython package is installed, its source code is stored in a transparent\nlocation of your choice. While optional, it is advised to first (create\nand) navigate to e.g. a general software folder:\n\n``` bash\nmkdir ~/folder/where/to/install/software\ncd ~/folder/where/to/install/software\n```\n\n***The following commands assume you do not perform any additional `cd`\ncommands anymore***.\n\nNext, download the AlphaRaw repository from GitHub either directly or\nwith a `git` command. This creates a new AlphaRaw subfolder in your\ncurrent directory.\n\n``` bash\ngit clone https://github.com/MannLabs/alpharaw.git\n```\n\nFor any Python package, it is highly recommended to use a separate\n[conda virtual environment](https://docs.conda.io/en/latest/), as\notherwise *dependancy conflicts can occur with already existing\npackages*.\n\n``` bash\nconda create --name alpharaw python=3.9 -y\nconda activate alpharaw\n```\n\nFinally, AlphaRaw and all its [dependancies](requirements) need to be\ninstalled. To take advantage of all features and allow development (with\nthe `-e` flag), this is best done by also installing the [development\ndependencies](requirements/requirements_development.txt) instead of only\nthe [core dependencies](requirements/requirements.txt):\n\n``` bash\npip install -e \"./alpharaw[development]\"\n```\n\nBy default this installs loose dependancies (no explicit versioning),\nalthough it is also possible to use stable dependencies\n(e.g. `pip install -e \"./alpharaw[stable,development-stable]\"`).\n\n***By using the editable flag `-e`, all modifications to the [AlphaRaw\nsource code folder](alpharaw) are directly reflected when running\nAlphaRaw. Note that the AlphaRaw folder cannot be moved and/or renamed\nif an editable version is installed.***\n\n------------------------------------------------------------------------\n\n## Usage\n\n- [**Python**](#python-and-jupyter-notebooks)\n\nNOTE: The first time you use a fresh installation of AlphaRaw, it is\noften quite slow because some functions might still need compilation on\nyour local operating system and architecture. Subsequent use should be a\nlot faster.\n\n### Python and Jupyter notebooks\n\nAlphaRaw can be imported as a Python package into any Python script or\nnotebook with the command `import alpharaw`.\n\nA brief [Jupyter notebook tutorial](nbs/tutorial.ipynb) on how to use\nthe API is also present in the [nbs folder](nbs).\n\n------------------------------------------------------------------------\n\n## Troubleshooting\n\nIn case of issues, check out the following:\n\n- [Issues](https://github.com/MannLabs/alpharaw/issues): Try a few\n  different search terms to find out if a similar problem has been\n  encountered before\n- [Discussions](https://github.com/MannLabs/alpharaw/discussions): Check\n  if your problem or feature requests has been discussed before.\n\n------------------------------------------------------------------------\n\n## Citations\n\nThere are currently no plans to draft a manuscript.\n\n------------------------------------------------------------------------\n\n## How to contribute\n\nIf you like this software, you can give us a\n[star](https://github.com/MannLabs/alpharaw/stargazers) to boost our\nvisibility! All direct contributions are also welcome. Feel free to post\na new [issue](https://github.com/MannLabs/alpharaw/issues) or clone the\nrepository and create a [pull\nrequest](https://github.com/MannLabs/alpharaw/pulls) with a new branch.\nFor an even more interactive participation, check out the\n[discussions](https://github.com/MannLabs/alpharaw/discussions) and the\n[the Contributors License Agreement](misc/CLA.md).\n\n------------------------------------------------------------------------\n\n## Changelog\n\nSee the [HISTORY.md](HISTORY.md) for a full overview of the changes made\nin each version.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MannLabs/alpharaw",
    "keywords": "bioinformatics,software,AlphaPept ecosystem,mass spectrometry,raw data,data accession,data storage",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alpharaw",
    "package_url": "https://pypi.org/project/alpharaw/",
    "platform": null,
    "project_url": "https://pypi.org/project/alpharaw/",
    "project_urls": {
      "GitHub": "https://github.com/MannLabs/alpharaw",
      "Homepage": "https://github.com/MannLabs/alpharaw",
      "Mann Labs at MPIB": "https://www.biochem.mpg.de/mann"
    },
    "release_url": "https://pypi.org/project/alpharaw/0.1.0/",
    "requires_dist": [
      "h5py",
      "numba",
      "pandas",
      "numpy",
      "alphabase",
      "pywin32 ; sys_platform == \"win32\"",
      "pythonnet ; sys_platform == \"win32\"",
      "jupyter ; extra == 'development'",
      "twine ; extra == 'development'",
      "bumpversion ; extra == 'development'",
      "pipdeptree ; extra == 'development'",
      "ipykernel ; extra == 'development'",
      "tqdm ; extra == 'development'",
      "psutil ; extra == 'development'",
      "h5py ; extra == 'development'",
      "numba ; extra == 'development'",
      "pandas ; extra == 'development'",
      "numpy ; extra == 'development'",
      "autodocsumm ; extra == 'development'",
      "myst-parser ; extra == 'development'",
      "sphinx ; extra == 'development'",
      "nbsphinx ; extra == 'development'",
      "jinja2 ; extra == 'development'",
      "contextfilter ; extra == 'development'",
      "furo ; extra == 'development'",
      "alphabase ; extra == 'development'",
      "jupyter ; extra == 'development-stable'",
      "twine ; extra == 'development-stable'",
      "bumpversion ; extra == 'development-stable'",
      "pipdeptree ; extra == 'development-stable'",
      "ipykernel ; extra == 'development-stable'",
      "tqdm ; extra == 'development-stable'",
      "psutil ; extra == 'development-stable'",
      "h5py ; extra == 'development-stable'",
      "numba ; extra == 'development-stable'",
      "pandas ; extra == 'development-stable'",
      "numpy ; extra == 'development-stable'",
      "autodocsumm ; extra == 'development-stable'",
      "myst-parser ; extra == 'development-stable'",
      "sphinx ; extra == 'development-stable'",
      "nbsphinx ; extra == 'development-stable'",
      "jinja2 ; extra == 'development-stable'",
      "contextfilter ; extra == 'development-stable'",
      "furo ; extra == 'development-stable'",
      "alphabase ; extra == 'development-stable'",
      "pywin32 ; (sys_platform == \"win32\") and extra == 'development-stable'",
      "pythonnet ; (sys_platform == \"win32\") and extra == 'development-stable'",
      "pywin32 ; (sys_platform == \"win32\") and extra == 'development'",
      "pythonnet ; (sys_platform == \"win32\") and extra == 'development'",
      "h5py ; extra == 'stable'",
      "numba ; extra == 'stable'",
      "pandas ; extra == 'stable'",
      "numpy ; extra == 'stable'",
      "alphabase ; extra == 'stable'",
      "pywin32 ; (sys_platform == \"win32\") and extra == 'stable'",
      "pythonnet ; (sys_platform == \"win32\") and extra == 'stable'"
    ],
    "requires_python": ">=3.8",
    "summary": "An open-source Python package to unify raw MS data accession and storage.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16442426,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5406ee0c088480cb1e9dc163015beb91bbc2f8ba6f8e86396f1fe1c8e91ac9d7",
          "md5": "8de60a671d61a8e6d790d838701edba9",
          "sha256": "e2294c6fde4b0267e37ed5c3ff97c8e57174f5ac913774837b35a2a479f4a9a1"
        },
        "downloads": -1,
        "filename": "alpharaw-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8de60a671d61a8e6d790d838701edba9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.10",
        "size": 66673037,
        "upload_time": "2022-09-14T21:35:24",
        "upload_time_iso_8601": "2022-09-14T21:35:24.743970Z",
        "url": "https://files.pythonhosted.org/packages/54/06/ee0c088480cb1e9dc163015beb91bbc2f8ba6f8e86396f1fe1c8e91ac9d7/alpharaw-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b75fe082f922ac795fd1c4884fc7f63ce20c9914027c2f6a8a4f5a939f45c3f8",
          "md5": "4d0b6d87686e2a45d957db0303393cdb",
          "sha256": "1d054ec4230b78a079e4912461e76b30dce56338d71fcb6af630c84d20fd17eb"
        },
        "downloads": -1,
        "filename": "alpharaw-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d0b6d87686e2a45d957db0303393cdb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.10",
        "size": 62542154,
        "upload_time": "2022-09-18T18:21:35",
        "upload_time_iso_8601": "2022-09-18T18:21:35.354917Z",
        "url": "https://files.pythonhosted.org/packages/b7/5f/e082f922ac795fd1c4884fc7f63ce20c9914027c2f6a8a4f5a939f45c3f8/alpharaw-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f831d8857407d7cc12d03847d1b0710691b021ca3e97ec9d675a60ef479350e",
          "md5": "3b04c53c780c028214f6365c87b9e164",
          "sha256": "71382f9adf66cef0eae218c87b55504681d286a4b5ed6a83af088dc270e0b07f"
        },
        "downloads": -1,
        "filename": "alpharaw-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3b04c53c780c028214f6365c87b9e164",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.10",
        "size": 62137383,
        "upload_time": "2022-09-18T18:21:41",
        "upload_time_iso_8601": "2022-09-18T18:21:41.179694Z",
        "url": "https://files.pythonhosted.org/packages/5f/83/1d8857407d7cc12d03847d1b0710691b021ca3e97ec9d675a60ef479350e/alpharaw-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c33ac7e7aad3b816bb2c9f2859254f3554228ee25d6bb2a324d86311e7931c2",
          "md5": "7a1131a148aadc0dd4a63df70f4f4511",
          "sha256": "fb06f7925d44ade47c0ccb8a424036549190e823c5ae9e56e91675fd1fd72cf4"
        },
        "downloads": -1,
        "filename": "alpharaw-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a1131a148aadc0dd4a63df70f4f4511",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 62558933,
        "upload_time": "2023-01-16T08:20:33",
        "upload_time_iso_8601": "2023-01-16T08:20:33.152814Z",
        "url": "https://files.pythonhosted.org/packages/2c/33/ac7e7aad3b816bb2c9f2859254f3554228ee25d6bb2a324d86311e7931c2/alpharaw-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cf1ec11746eb61ad92f029cba418ac782ca276f221f1e37f0f439991db80863",
          "md5": "1a99e3aafe3e73675c0cd1fbd1e4e160",
          "sha256": "9f126224df6961f3250fd6117eb38aed1d6e1364f0a4d02c626c60a38d80302e"
        },
        "downloads": -1,
        "filename": "alpharaw-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1a99e3aafe3e73675c0cd1fbd1e4e160",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 62150713,
        "upload_time": "2023-01-16T08:20:39",
        "upload_time_iso_8601": "2023-01-16T08:20:39.529431Z",
        "url": "https://files.pythonhosted.org/packages/4c/f1/ec11746eb61ad92f029cba418ac782ca276f221f1e37f0f439991db80863/alpharaw-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c33ac7e7aad3b816bb2c9f2859254f3554228ee25d6bb2a324d86311e7931c2",
        "md5": "7a1131a148aadc0dd4a63df70f4f4511",
        "sha256": "fb06f7925d44ade47c0ccb8a424036549190e823c5ae9e56e91675fd1fd72cf4"
      },
      "downloads": -1,
      "filename": "alpharaw-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7a1131a148aadc0dd4a63df70f4f4511",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 62558933,
      "upload_time": "2023-01-16T08:20:33",
      "upload_time_iso_8601": "2023-01-16T08:20:33.152814Z",
      "url": "https://files.pythonhosted.org/packages/2c/33/ac7e7aad3b816bb2c9f2859254f3554228ee25d6bb2a324d86311e7931c2/alpharaw-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4cf1ec11746eb61ad92f029cba418ac782ca276f221f1e37f0f439991db80863",
        "md5": "1a99e3aafe3e73675c0cd1fbd1e4e160",
        "sha256": "9f126224df6961f3250fd6117eb38aed1d6e1364f0a4d02c626c60a38d80302e"
      },
      "downloads": -1,
      "filename": "alpharaw-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1a99e3aafe3e73675c0cd1fbd1e4e160",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 62150713,
      "upload_time": "2023-01-16T08:20:39",
      "upload_time_iso_8601": "2023-01-16T08:20:39.529431Z",
      "url": "https://files.pythonhosted.org/packages/4c/f1/ec11746eb61ad92f029cba418ac782ca276f221f1e37f0f439991db80863/alpharaw-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}