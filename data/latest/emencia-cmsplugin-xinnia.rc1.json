{
  "info": {
    "author": "Emencia",
    "author_email": "support@emencia.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. _django-blog-zinnia: http://django-blog-zinnia.com/\n.. _django-blog-xinnia: https://github.com/emencia/django-blog-xinnia\n.. _django-cms: http://django-cms.com/\n\n========================\nemencia-cmsplugin-xinnia\n========================\n\n.. Note::\n    This is a fork of\n    `emencia-cmsplugin-zinnia <https://github.com/emencia/emencia-cmsplugin-zinnia>`_\n    (which was a fork of original \"cmsplugin-zinnia\") to include fixes for last\n    Django and DjangoCMS versions with `django-blog-xinnia`_ (a fork of\n    `django-blog-zinnia`_).\n\n    Code is almost unchanged except for needed fixes and even if package name\n    has been renamed \"xinnia\", its module is still ``cmsplugin_zinnia``.\n\nCmsplugin-zinnia is a bridge between `django-blog-xinnia`_ and\n`django-cms`_.\n\nThis package provides plugins, menus and apphook to integrate your Zinnia\npowered Weblog into your django-cms Web site.\n\n\n.. contents::\n\n.. _installation:\n\nInstallation\n============\n\nOnce Zinnia and the CMS are installed, you simply have to register\n``cmsplugin_zinnia``, in the ``INSTALLED_APPS`` section of your\nproject's settings.\n\n.. _entry-placeholder:\n\nEntries with plugins\n====================\n\nIf you want to use the plugin system of django-cms in your entries, an\nextended ``Entry`` with a ``PlaceholderField`` is provided in this package.\n\nJust add this line in your project's settings to use it. ::\n\n  ZINNIA_ENTRY_BASE_MODEL = 'cmsplugin_zinnia.placeholder.EntryPlaceholder'\n\n.. note::\n   You have to keep in mind that the default migrations bundled with Zinnia\n   do not reflect the addition made by the ``EntryPlaceholder`` model.\n\n   A solution to initialize correctly the database can be: ::\n\n     $ python manage.py makemigrations\n     $ python manage.py migrate\n\nTips for using the apphook\n==========================\n\nIf you want to use the apphook to provide the blog functionnalities under a\nspecific URL handled by the CMS, remember this tip:\n\n* Once the apphook is registered, you can remove the inclusion of\n  ``'zinnia.urls'`` in ``urls.py`` and then restart the server to see it in\n  full effect.\n\n.. _settings:\n\nSettings\n========\n\nCMSPLUGIN_ZINNIA_APP_URLS\n-------------------------\n**Default value:** ``['zinnia.urls']``\n\nThe URLsets used for by the Zinnia AppHook.\n\nCMSPLUGIN_ZINNIA_APP_MENUS\n--------------------------\n**Default value:** ::\n\n  ['cmsplugin_zinnia.menu.EntryMenu',\n   'cmsplugin_zinnia.menu.CategoryMenu',\n   'cmsplugin_zinnia.menu.TagMenu',\n   'cmsplugin_zinnia.menu.AuthorMenu']\n\nList of strings representing the path to the `Menu` class provided by the\nZinnia AppHook.\n\nCMSPLUGIN_ZINNIA_HIDE_ENTRY_MENU\n--------------------------------\n**Default value:** ``True``\n\nBoolean used for displaying or not the entries in the ``EntryMenu`` object.\n\nCMSPLUGIN_ZINNIA_TEMPLATES\n--------------------------\n**Default value:** ``[]`` (Empty list)\n\nList of tuple for extending the plugins rendering templates.\n\nExample: ::\n\n  CMSPLUGIN_ZINNIA_TEMPLATES = [\n    ('entry_custom.html', 'Entry custom'),\n    ('entry_custom_bis.html', 'Entry custom bis')\n    ]\n\nCMSPLUGIN_ZINNIA_BASE_TEMPLATES\n-------------------------------\n**Default value:** ::\n\n  [('cmsplugin_zinnia/entry_list.html', _('Entry list (default)')),\n   ('cmsplugin_zinnia/entry_detail.html', _('Entry detailed')),\n   ('cmsplugin_zinnia/entry_slider.html', _('Entry slider'))]\n\nAvailable base templates, these are the shipped template from this application.\nCommonly you will prefer to use ``CMSPLUGIN_ZINNIA_TEMPLATES`` to add new\ntemplates.\n\nCMSPLUGIN_ZINNIA_DEFAULT_TEMPLATE\n---------------------------------\n**Default value:** ``None``\n\nInitial value for ``template_to_render`` field. If empty or undefined, initial\nvalue will be the first item of available template choices.\n\n.. _changelog:\n\nChangelog\n=========\n\nPrevious release history can be find in\n`original fork <https://github.com/emencia/emencia-cmsplugin-zinnia>`_.\n\n0.9.1 - 2021/02/27\n------------------\n\n* Drop support for Django<2.2 and django-cms<3.7;\n* Fix some package informations\n* Add missing pending migrations for template fields update from \">0.9\";\n* Use ``BooleanField`` with ``null=True`` instead of deprecated\n  ``NullBooleanField``;\n\n0.9.0 - 2021/02/23\n------------------\n\n* Remove usage of deprecated ``python_2_unicode_compatible`` in models;\n* Use ``gettext_lazy`` instead of deprecated ``ugettext_lazy``;",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/emencia/emencia-cmsplugin-xinnia",
    "keywords": "django,blog,weblog,zinnia,cms,plugins,apphook",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "emencia-cmsplugin-xinnia",
    "package_url": "https://pypi.org/project/emencia-cmsplugin-xinnia/",
    "platform": "",
    "project_url": "https://pypi.org/project/emencia-cmsplugin-xinnia/",
    "project_urls": {
      "Homepage": "https://github.com/emencia/emencia-cmsplugin-xinnia"
    },
    "release_url": "https://pypi.org/project/emencia-cmsplugin-xinnia/0.9.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django-CMS plugins for django-blog-xinnia",
    "version": "0.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9539248,
  "releases": {
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8bc42363f76a3eec9a485ad57c41746d2003bf8d19a509424c7df1df1caa761",
          "md5": "ebc3daa81b5ff4fbf34203931616b435",
          "sha256": "06cd4a4a15f3f8bf02d8468ebec2562ac50d2b73300571183ba9cf1ed80c4bf5"
        },
        "downloads": -1,
        "filename": "emencia-cmsplugin-xinnia-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ebc3daa81b5ff4fbf34203931616b435",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31133,
        "upload_time": "2021-02-27T01:49:42",
        "upload_time_iso_8601": "2021-02-27T01:49:42.072908Z",
        "url": "https://files.pythonhosted.org/packages/e8/bc/42363f76a3eec9a485ad57c41746d2003bf8d19a509424c7df1df1caa761/emencia-cmsplugin-xinnia-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8bc42363f76a3eec9a485ad57c41746d2003bf8d19a509424c7df1df1caa761",
        "md5": "ebc3daa81b5ff4fbf34203931616b435",
        "sha256": "06cd4a4a15f3f8bf02d8468ebec2562ac50d2b73300571183ba9cf1ed80c4bf5"
      },
      "downloads": -1,
      "filename": "emencia-cmsplugin-xinnia-0.9.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ebc3daa81b5ff4fbf34203931616b435",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 31133,
      "upload_time": "2021-02-27T01:49:42",
      "upload_time_iso_8601": "2021-02-27T01:49:42.072908Z",
      "url": "https://files.pythonhosted.org/packages/e8/bc/42363f76a3eec9a485ad57c41746d2003bf8d19a509424c7df1df1caa761/emencia-cmsplugin-xinnia-0.9.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}