{
  "info": {
    "author": "Met Office",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Quality Assurance"
    ],
    "description": "Stylist\n=======\n\n|BSD3 License| |GitHub release| |PyPI version| |GitHub merge testing|\n\nStylist is a tool for checking code style. It implements a framework which\nsupports multiple styles across multiple languages.\n\nBut aren't there many such tools out there, why create a new one?\n\nThe simple reason is that few of them support Fortran, a language still in\nwidespread use in the scientific computing domain. They can also tend towards\nthe zealous when enforcing the \"one true style\" whereas long running science\nmodels tend to diverge quite radically in what they like, style-wise.\n\nLarge models also tend to be implemented using more than one language so a\ntool which is capable of understanding all of them would be welcomed by\nscience developers.\n\nThis is the goal of Stylist development.\n\nThe project is still in its infancy so only a few rules have been implemented\nand only for Fortran. Stubs are provided to show how it might be extended to\nsupport C.\n\nFind the project at <https://github.com/MetOffice/stylist>\n\n.. |BSD3 License| image:: https://img.shields.io/badge/License-BSD_3--Clause-blue.svg\n   :target: https://opensource.org/licenses/BSD-3-Clause\n\n.. |GitHub release| image:: https://img.shields.io/github/release/MetOffice/stylist.svg\n   :target: https://github.com/MetOffice/stylist/\n\n.. |PyPI version| image:: https://badge.fury.io/py/stylist.svg\n   :target: https://pypi.python.org/pypi/stylist/\n\n.. |GitHub merge testing| image:: https://github.com/MetOffice/stylist/workflows/Merge%20Test/badge.svg\n   :target: https://github.com/MetOffice/stylist/actions\n\n\nInstallation\n~~~~~~~~~~~~\n\nInstallation can be as simple as ``pip install stylist`` or\n``conda install -c conda-forge stylist``.\n\nAs always it is also possible to install from the project source by running\n``python setup.py``. The source may be obtained by downloading a tarball or by\ncloning the repository.\n\n\nUsage\n~~~~~\n\nStylist provides a command-line tool ``stylist`` for normal use. It can also be\nused as a package if you want to integrate it with another tool. Documentation\nregarding this second option is maintained in the project wiki.\n\nOn the Command Line\n-------------------\n\nThe command-line tool is not complicated to use::\n\n  stylist [-help] [-verbose]\n          [-configuration FILENAME]\n          [-style NAME]\n          FILE ...\n\nThe only required arguments are a configuration file and one or more\nfilenames. These are the files which will be checked. If a directory is\nspecified then the tool will automatically descend into it checking all files\nwhich it recognises by extension.\n\nIf you want a running commentary of what the tool is doing then use the\n``-verbose`` argument.\n\nA configuration file may specified with ``-configuration`` . This file should\nbe formatted as documented below. There must be a configuration file which\ndefines at least one style. While the fallback mechanism which allows for user\nand site configurations has not been implemented it must be specified with this\nargument.\n\nThe configuration may define several styles, in which case one can be chosen\nusing the ``-style`` argument. If it is not then the first in the configuration\nfile will be used.\n\nConfiguration File\n------------------\n\nThe configuration file is a simple python script where variable definitions\nare used to define the configuration.\n\nStylist uses the concept of \"File Pipes\" to specify the series of steps needed\nto process a particular file type. They are defined by creating a ``FilePipe``\nobject and associated with a file extension by assignment to a variable.\n\nFor example::\n\n  from stylist.source import (FilePipe,\n                              FortranSource,\n                              PFUnitProcessor,\n                              FortranPreprocessor)\n  \n  pf = FilePipe(FortranSource, PFUnitProcessor, FortranPreprocessor)\n\nHere a pipeline consisting the pFUnit processor followed by the Fortran\npreprocessor produces Fortran source. This pipeline should be used for all\nfiles with the ``.pf`` extension.\n\nStyles are collections of rules and are defined in a similar way. The variable\nname is the style name and the object is constructed with the rules which make up the style.\n\nAn illustrative example::\n\n  from re import compile as recompile\n  from stylist.style import Style\n  from stylist.fortran import FortranCharacterset, KindPattern\n  \n  simple = Style(FortranCharactersest(),\n                 KindPattern(integer=recompile(r'i_.+'),\n                             real=recompile(r'r_.+'))\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MetOffice/stylist",
    "keywords": "linter fortran psyclone",
    "license": "BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stylist",
    "package_url": "https://pypi.org/project/stylist/",
    "platform": null,
    "project_url": "https://pypi.org/project/stylist/",
    "project_urls": {
      "Bug Reports": "https://github.com/MetOffice/stylist/issues",
      "Homepage": "https://github.com/MetOffice/stylist",
      "Source": "https://github.com/MetOffice/stylist/"
    },
    "release_url": "https://pypi.org/project/stylist/0.3.1/",
    "requires_dist": [
      "fparser (>=0.0.12)",
      "check-manifest ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "sphinx ; extra == 'docs'",
      "sphinx-autodoc-typehints ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "setuptools ; extra == 'release'",
      "wheel ; extra == 'release'",
      "twine ; extra == 'release'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": ">=3.7, <4",
    "summary": "Extensible code style checker currently supporting Fortran, PSyclone DSL, etc",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15956937,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cf784a382c2f61ae0ae30e3f6d781fc63bad7630250abeae7f4f986c483249c",
          "md5": "2f50a982eb60850739c0a2fbc6e87ad0",
          "sha256": "3279112085eb38cd114c61851e2a4ba926df847b0398253fcaa068451de555a1"
        },
        "downloads": -1,
        "filename": "stylist-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f50a982eb60850739c0a2fbc6e87ad0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 14733,
        "upload_time": "2019-12-17T14:10:51",
        "upload_time_iso_8601": "2019-12-17T14:10:51.911801Z",
        "url": "https://files.pythonhosted.org/packages/2c/f7/84a382c2f61ae0ae30e3f6d781fc63bad7630250abeae7f4f986c483249c/stylist-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0572a11f1f0ec5316effe6945eef2f15419b5fd988bb1dde049d1b17d0129b1c",
          "md5": "3fd53dd12de5b3f64f4f772ed3635822",
          "sha256": "e178164596e20e719a8b15963ad37369c85beec356a652314e878d8173da505d"
        },
        "downloads": -1,
        "filename": "stylist-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3fd53dd12de5b3f64f4f772ed3635822",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 15445,
        "upload_time": "2019-12-17T14:10:54",
        "upload_time_iso_8601": "2019-12-17T14:10:54.071774Z",
        "url": "https://files.pythonhosted.org/packages/05/72/a11f1f0ec5316effe6945eef2f15419b5fd988bb1dde049d1b17d0129b1c/stylist-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c92fe90bcd9db9b762faeebdba20a6164ae936e27e1aaab6cbeb99a92cfdc163",
          "md5": "3c6018ff6319cf309284282d259168b0",
          "sha256": "269c1228b03b32722c114254c1ba6621a7c27d4a86762ce18273b8b8eda1f145"
        },
        "downloads": -1,
        "filename": "stylist-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c6018ff6319cf309284282d259168b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 21430,
        "upload_time": "2022-02-14T14:16:59",
        "upload_time_iso_8601": "2022-02-14T14:16:59.971165Z",
        "url": "https://files.pythonhosted.org/packages/c9/2f/e90bcd9db9b762faeebdba20a6164ae936e27e1aaab6cbeb99a92cfdc163/stylist-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81dbd47e35b90c0ddd2862cb3d7c7ee254ee006fc50a0c589d38ab9d56db94b6",
          "md5": "f4d451c46ce5e0b85d0471576ea44fdf",
          "sha256": "581bb33a86d7637cb54fcd8b3c572e52397d0dcb60d3c5fdb48755a6d88e566d"
        },
        "downloads": -1,
        "filename": "stylist-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f4d451c46ce5e0b85d0471576ea44fdf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 19981,
        "upload_time": "2022-02-14T14:19:19",
        "upload_time_iso_8601": "2022-02-14T14:19:19.765544Z",
        "url": "https://files.pythonhosted.org/packages/81/db/d47e35b90c0ddd2862cb3d7c7ee254ee006fc50a0c589d38ab9d56db94b6/stylist-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2f3e4a3a489b2f1ff1708e80d39c0546cefcb256365cdf6750eaeb853ce6dde",
          "md5": "b91e883be65d61436d5e3dc5083f2af1",
          "sha256": "1d54fd8de6e2418a60d73d824cf137997fd4677964d5dc74518c9a6026e80f65"
        },
        "downloads": -1,
        "filename": "stylist-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b91e883be65d61436d5e3dc5083f2af1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 22887,
        "upload_time": "2022-12-01T15:45:03",
        "upload_time_iso_8601": "2022-12-01T15:45:03.814166Z",
        "url": "https://files.pythonhosted.org/packages/e2/f3/e4a3a489b2f1ff1708e80d39c0546cefcb256365cdf6750eaeb853ce6dde/stylist-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f841f07cb5b51f4d904810304133985ee4b6e067bd8b9dda9620388dbc6e40cc",
          "md5": "986d7e5d81d9346b0666b7e7d09d8553",
          "sha256": "14d1a63806336499ff087e9b8263f29d60a077ab9f4b9cd14c211286e581152c"
        },
        "downloads": -1,
        "filename": "stylist-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "986d7e5d81d9346b0666b7e7d09d8553",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 3095002,
        "upload_time": "2022-12-01T15:45:10",
        "upload_time_iso_8601": "2022-12-01T15:45:10.911301Z",
        "url": "https://files.pythonhosted.org/packages/f8/41/f07cb5b51f4d904810304133985ee4b6e067bd8b9dda9620388dbc6e40cc/stylist-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2f3e4a3a489b2f1ff1708e80d39c0546cefcb256365cdf6750eaeb853ce6dde",
        "md5": "b91e883be65d61436d5e3dc5083f2af1",
        "sha256": "1d54fd8de6e2418a60d73d824cf137997fd4677964d5dc74518c9a6026e80f65"
      },
      "downloads": -1,
      "filename": "stylist-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b91e883be65d61436d5e3dc5083f2af1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 22887,
      "upload_time": "2022-12-01T15:45:03",
      "upload_time_iso_8601": "2022-12-01T15:45:03.814166Z",
      "url": "https://files.pythonhosted.org/packages/e2/f3/e4a3a489b2f1ff1708e80d39c0546cefcb256365cdf6750eaeb853ce6dde/stylist-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f841f07cb5b51f4d904810304133985ee4b6e067bd8b9dda9620388dbc6e40cc",
        "md5": "986d7e5d81d9346b0666b7e7d09d8553",
        "sha256": "14d1a63806336499ff087e9b8263f29d60a077ab9f4b9cd14c211286e581152c"
      },
      "downloads": -1,
      "filename": "stylist-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "986d7e5d81d9346b0666b7e7d09d8553",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 3095002,
      "upload_time": "2022-12-01T15:45:10",
      "upload_time_iso_8601": "2022-12-01T15:45:10.911301Z",
      "url": "https://files.pythonhosted.org/packages/f8/41/f07cb5b51f4d904810304133985ee4b6e067bd8b9dda9620388dbc6e40cc/stylist-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}