{
  "info": {
    "author": "Gabriel Gouvine",
    "author_email": "gabriel.gouvine_GIT@m4x.org.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.4868308.svg)](https://doi.org/10.5281/zenodo.4868308)\n[![PyPI](https://img.shields.io/pypi/v/torchsr?color=orange)](https://pypi.org/project/torchsr/)\n[![GitHub](https://img.shields.io/github/license/coloquinte/torchsr?color=lightgrey)](https://opensource.org/licenses/MIT)\n\n\n# Super-Resolution Networks for Pytorch\n\n[Super-resolution](https://en.wikipedia.org/wiki/Super-resolution_imaging) is a process that increases the resolution of an image, adding additional details.\nMethods using neural networks give the most accurate results, much better than other interpolation methods.\nWith the right training, it is even possible to make photo-realistic images.\n\nFor example, here is a low-resolution image, magnified x4 by a neural network, and a high resolution image of the same object:\n\n![Pixelated image of a butterfly](https://raw.githubusercontent.com/Coloquinte/torchSR/v1.0.2/doc/example_small.png \"Low resolution image\")\n![Smooth magnified image](https://raw.githubusercontent.com/Coloquinte/torchSR/v1.0.2/doc/example_x4.png \"Magnified x4\")\n![High resolution image](https://raw.githubusercontent.com/Coloquinte/torchSR/v1.0.2/doc/example_hr.png \"High resolution image\")\n\n\nIn this repository, you will find:\n* the popular super-resolution networks, pretrained\n* common super-resolution datasets\n* a unified training script for all models\n\n\n\n## Models\n\nThe following pretrained models are available. Click on the links for the paper:\n* [EDSR](https://arxiv.org/abs/1707.02921)\n* [CARN](https://arxiv.org/abs/1803.08664)\n* [RDN](https://arxiv.org/abs/1802.08797)\n* [RCAN](https://arxiv.org/abs/1807.02758)\n* [NinaSR](doc/NinaSR.md)\n\nNewer and larger models perform better: the most accurate models are EDSR (huge), RCAN and NinaSR-B2.\nFor practical applications, I recommend a smaller model, such as NinaSR-B1.\n\n\n<details>\n<summary>Expand benchmark results</summary>\n\n<details>\n<summary>Set5 results</summary>\n\n|  Network            | Parameters (M) | 2x (PSNR/SSIM) | 3x (PSNR/SSIM) | 4x (PSNR/SSIM) |\n| ------------------- | -------------- | -------------- | -------------- | -------------- |\n| carn                | 1.59           | 37.88 / 0.9600 | 34.32 / 0.9265 | 32.14 / 0.8942 |\n| carn\\_m             | 0.41           | 37.68 / 0.9594 | 34.06 / 0.9247 | 31.88 / 0.8907 |\n| edsr\\_baseline      | 1.37           | 37.98 / 0.9604 | 34.37 / 0.9270 | 32.09 / 0.8936 |\n| edsr                | 40.7           | 38.19 / 0.9609 | 34.68 / 0.9293 | 32.48 / 0.8985 |\n| ninasr\\_b0          | 0.10           | 37.72 / 0.9594 | 33.96 / 0.9234 | 31.77 / 0.8877 |\n| ninasr\\_b1          | 1.02           | 38.14 / 0.9609 | 34.48 / 0.9277 | 32.28 / 0.8955 |\n| ninasr\\_b2          | 10.0           | 38.21 / 0.9612 | 34.61 / 0.9288 | 32.45 / 0.8973 |\n| rcan                | 15.4           | 38.27 / 0.9614 | 34.76 / 0.9299 | 32.64 / 0.9000 |\n| rdn                 | 22.1           | 38.12 / 0.9609 | 33.98 / 0.9234 | 32.35 / 0.8968 |\n\n</details>\n\n<details>\n<summary>Set14 results</summary>\n\n|  Network            | Parameters (M) | 2x (PSNR/SSIM) | 3x (PSNR/SSIM) | 4x (PSNR/SSIM) |\n| ------------------- | -------------- | -------------- | -------------- | -------------- |\n| carn                | 1.59           | 33.57 / 0.9173 | 30.30 / 0.8412 | 28.61 / 0.7806 |\n| carn\\_m             | 0.41           | 33.30 / 0.9151 | 30.10 / 0.8374 | 28.42 / 0.7764 |\n| edsr\\_baseline      | 1.37           | 33.57 / 0.9174 | 30.28 / 0.8414 | 28.58 / 0.7804 |\n| edsr                | 40.7           | 33.95 / 0.9201 | 30.53 / 0.8464 | 28.81 / 0.7872 |\n| ninasr\\_b0          | 0.10           | 33.24 / 0.9144 | 30.02 / 0.8355 | 28.28 / 0.7727 |\n| ninasr\\_b1          | 1.02           | 33.71 / 0.9189 | 30.41 / 0.8437 | 28.71 / 0.7840 |\n| ninasr\\_b2          | 10.0           | 34.00 / 0.9206 | 30.53 / 0.8461 | 28.80 / 0.7863 |\n| rcan                | 15.4           | 34.13 / 0.9216 | 30.63 / 0.8475 | 28.85 / 0.7878 |\n| rdn                 | 22.1           | 33.71 / 0.9182 | 30.07 / 0.8373 | 28.72 / 0.7846 |\n\n</details>\n\n<details>\n<summary>DIV2K results (validation set)</summary>\n\n|  Network            | Parameters (M) | 2x (PSNR/SSIM) | 3x (PSNR/SSIM) | 4x (PSNR/SSIM) | 8x (PSNR/SSIM) |\n| ------------------- | -------------- | -------------- | -------------- | -------------- | -------------- |\n| carn                | 1.59           | 36.08 / 0.9451 | 32.37 / 0.8871 | 30.43 / 0.8366 | N/A            |\n| carn\\_m             | 0.41           | 35.76 / 0.9429 | 32.09 / 0.8827 | 30.18 / 0.8313 | N/A            |\n| edsr\\_baseline      | 1.37           | 36.13 / 0.9455 | 32.41 / 0.8878 | 30.43 / 0.8370 | N/A            |\n| edsr                | 40.7           | 36.56 / 0.9485 | 32.75 / 0.8933 | 30.73 / 0.8445 | N/A            |\n| ninasr\\_b0          | 0.10           | 35.77 / 0.9428 | 32.06 / 0.8818 | 30.09 / 0.8293 | 26.60 / 0.7084 |\n| ninasr\\_b1          | 1.02           | 36.35 / 0.9471 | 32.51 / 0.8892 | 30.56 / 0.8405 | 26.96 / 0.7207 |\n| ninasr\\_b2          | 10.0           | 36.52 / 0.9482 | 32.73 / 0.8926 | 30.73 / 0.8437 | 27.07 / 0.7246 |\n| rcan                | 15.4           | 36.61 / 0.9489 | 32.78 / 0.8935 | 30.73 / 0.8447 | 27.17 / 0.7292 |\n| rdn                 | 22.1           | 36.32 / 0.9468 | 32.04 / 0.8822 | 30.61 / 0.8414 | N/A            |\n\n</details>\n\n<details>\n<summary>B100 results</summary>\n\n|  Network            | Parameters (M) | 2x (PSNR/SSIM) | 3x (PSNR/SSIM) | 4x (PSNR/SSIM) |\n| ------------------- | -------------- | -------------- | -------------- | -------------- |\n| carn                | 1.59           | 32.12 / 0.8986 | 29.07 / 0.8042 | 27.58 / 0.7355 |\n| carn\\_m             | 0.41           | 31.97 / 0.8971 | 28.94 / 0.8010 | 27.45 / 0.7312 |\n| edsr\\_baseline      | 1.37           | 32.15 / 0.8993 | 29.08 / 0.8051 | 27.56 / 0.7354 |\n| edsr                | 40.7           | 32.35 / 0.9019 | 29.26 / 0.8096 | 27.72 / 0.7419 |\n| ninasr\\_b0          | 0.10           | 31.97 / 0.8974 | 28.90 / 0.8000 | 27.36 / 0.7290 |\n| ninasr\\_b1          | 1.02           | 32.24 / 0.9004 | 29.13 / 0.8061 | 27.62 / 0.7377 |\n| ninasr\\_b2          | 10.0           | 32.32 / 0.9014 | 29.23 / 0.8087 | 27.71 / 0.7407 |\n| rcan                | 15.4           | 32.39 / 0.9024 | 29.30 / 0.8106 | 27.74 / 0.7429 |\n| rdn                 | 22.1           | 32.25 / 0.9006 | 28.90 / 0.8004 | 27.66 / 0.7388 |\n\n</details>\n\n<details>\n<summary>Urban100 results</summary>\n\n|  Network            | Parameters (M) | 2x (PSNR/SSIM) | 3x (PSNR/SSIM) | 4x (PSNR/SSIM) |\n| ------------------- | -------------- | -------------- | -------------- | -------------- |\n| carn                | 1.59           | 31.95 / 0.9263 | 28.07 / 0.849 | 26.07 / 0.78349 |\n| carn\\_m             | 0.41           | 31.30 / 0.9200 | 27.57 / 0.839 | 25.64 / 0.76961 |\n| edsr\\_baseline      | 1.37           | 31.98 / 0.9271 | 28.15 / 0.852 | 26.03 / 0.78424 |\n| edsr                | 40.7           | 32.97 / 0.9358 | 28.81 / 0.865 | 26.65 / 0.80328 |\n| ninasr\\_b0          | 0.10           | 31.33 / 0.9204 | 27.48 / 0.8374 | 25.45 / 0.7645 |\n| ninasr\\_b1          | 1.02           | 32.48 / 0.9319 | 28.29 / 0.8555 | 26.25 / 0.7914 |\n| ninasr\\_b2          | 10.0           | 32.91 / 0.9354 | 28.70 / 0.8640 | 26.54 / 0.8008 |\n| rcan                | 15.4           | 33.19 / 0.9372 | 29.01 / 0.868 | 26.75 / 0.80624 |\n| rdn                 | 22.1           | 32.41 / 0.9310 | 27.49 / 0.838 | 26.36 / 0.79460 |\n\n</details>\n\n</details>\n\nAll models are defined in `torchsr.models`. Other useful tools to augment your models, such as self-ensemble methods and tiling, are present in `torchsr.models.utils`.\n\n\n\n## Datasets\n\nThe following datasets are available. Click on the links for the project page:\n* [DIV2K](https://data.vision.ee.ethz.ch/cvl/DIV2K/)\n* [RealSR](https://github.com/csjcai/RealSR)\n* [Flicr2K](https://github.com/limbee/NTIRE2017)\n* [REDS](https://seungjunnah.github.io/Datasets/reds)\n* [Set5](http://people.rennes.inria.fr/Aline.Roumy/results/SR_BMVC12.html), [Set14](https://paperswithcode.com/dataset/set14), [B100](https://www2.eecs.berkeley.edu/Research/Projects/CS/vision/bsds/), [Urban100](https://paperswithcode.com/dataset/urban100)\n\nAll datasets are defined in `torchsr.datasets`. They return a list of images, with the high-resolution image followed by downscaled or degraded versions.\nData augmentation methods are provided in `torchsr.transforms`.\n\nDatasets are downloaded automatically when using the `download=True` flag, or by running the corresponding script i.e. `./scripts/download_div2k.sh`.\n\n\n\n## Usage\n\n\n```python\nfrom torchsr.datasets import Div2K\nfrom torchsr.models import ninasr_b0\nfrom torchvision.transforms.functional import to_pil_image, to_tensor\n\n# Div2K dataset\ndataset = Div2K(root=\"./data\", scale=2, download=False)\n\n# Get the first image in the dataset (High-Res and Low-Res)\nhr, lr = dataset[0]\n\n# Download a pretrained NinaSR model\nmodel = ninasr_b0(scale=2, pretrained=True)\n\n# Run the Super-Resolution model\nlr_t = to_tensor(lr).unsqueeze(0)\nsr_t = model(lr_t)\nsr = to_pil_image(sr_t.squeeze(0))\nsr.show()\n```\n\n<details>\n<summary>Expand more examples</summary>\n\n\n```python\nfrom torchsr.datasets import Div2K\nfrom torchsr.models import edsr, rcan\nfrom torchsr.models.utils import ChoppedModel, SelfEnsembleModel\nfrom torchsr.transforms import ColorJitter, Compose, RandomCrop\n\n# Div2K dataset, cropped to 256px, width color jitter\ndataset = Div2K(\n    root=\"./data\", scale=2, download=False,\n    transform=Compose([\n        RandomCrop(256, scales=[1, 2]),\n        ColorJitter(brightness=0.2)\n    ]))\n\n# Pretrained RCAN model, with tiling for large images\nmodel = ChoppedModel(\n    rcan(scale=2, pretrained=True), scale=2,\n    chop_size=400, chop_overlap=10)\n\n# Pretrained EDSR model, with self-ensemble method for higher quality\nmodel = SelfEnsembleModel(edsr(scale=2, pretrained=True))\n```\n</details>\n\n\n\n## Training\n\nA script is available to train the models from scratch, evaluate them, and much more. It is not part of the pip package, and requires additional dependencies. More examples are available in `scripts/`.\n\n```bash\npip install piq tqdm tensorboard  # Additional dependencies\npython -m torchsr.train -h\npython -m torchsr.train --arch edsr_baseline --scale 2 --download-pretrained --images test/butterfly.png --destination results/\npython -m torchsr.train --arch edsr_baseline --scale 2 --download-pretrained --validation-only\npython -m torchsr.train --arch edsr_baseline --scale 2 --epochs 300 --loss l1 --dataset-train div2k_bicubic\n```\n\nYou can evaluate models from the command line as well. For example, for EDSR with the paper's PSNR evaluation:\n```\npython -m torchsr.train --validation-only --arch edsr_baseline --scale 2 --dataset-val set5 --chop-size 400 --download-pretrained --shave-border 2 --eval-luminance\n```\n\n\n# Acknowledgements\n\nThanks to the people behind [torchvision](https://github.com/pytorch/vision) and [EDSR](https://github.com/zhouhuanxiang/EDSR-PyTorch), whose work inspired this repository.\nSome of the models available here come from [EDSR-PyTorch](https://github.com/zhouhuanxiang/EDSR-PyTorch) and [CARN-PyTorch](https://github.com/nmhkahn/CARN-pytorch).\n\nTo cite this work, please use:\n\n```\n@misc{torchsr,\n  author = {Gabriel Gouvine},\n  title = {Super-Resolution Networks for Pytorch},\n  year = {2021},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/Coloquinte/torchSR}},\n  doi = {10.5281/zenodo.4868308}\n}\n\n@misc{ninasr,\n  author = {Gabriel Gouvine},\n  title = {NinaSR: Efficient Small and Large ConvNets for Super-Resolution},\n  year = {2021},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/Coloquinte/torchSR/blob/main/doc/NinaSR.md}},\n  doi = {10.5281/zenodo.4868308}\n}\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Coloquinte/torchSR",
    "keywords": "superresolution,pytorch,edsr,rcan,ninasr",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "torchsr",
    "package_url": "https://pypi.org/project/torchsr/",
    "platform": null,
    "project_url": "https://pypi.org/project/torchsr/",
    "project_urls": {
      "Homepage": "https://github.com/Coloquinte/torchSR"
    },
    "release_url": "https://pypi.org/project/torchsr/1.0.4/",
    "requires_dist": [
      "torch (>=1.6)",
      "torchvision (>=0.6)"
    ],
    "requires_python": "",
    "summary": "Super Resolution Networks for pytorch",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14825775,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2321a668cff2ec6e0278a7c6af4269cf2b1cfcac1e015a41e1ed6cfc314aec5d",
          "md5": "610fb7abb46cff9beb162bdcaa228413",
          "sha256": "06a3551d8d4e052374b76b8a51161bd5749044382cc5a1beda77c7174f67776d"
        },
        "downloads": -1,
        "filename": "torchsr-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "610fb7abb46cff9beb162bdcaa228413",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 55647,
        "upload_time": "2021-06-04T20:33:53",
        "upload_time_iso_8601": "2021-06-04T20:33:53.266785Z",
        "url": "https://files.pythonhosted.org/packages/23/21/a668cff2ec6e0278a7c6af4269cf2b1cfcac1e015a41e1ed6cfc314aec5d/torchsr-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "397dec65b3fab741f736fd77546f6d8aa36b04c538e78e06abb4e994b035177d",
          "md5": "ea6eef3f3d066a8147f966c433c4f4e7",
          "sha256": "1e15a044b22c1f5f161685e47add3d19733e46bf8a67a9877a3bba7a8ed7da76"
        },
        "downloads": -1,
        "filename": "torchsr-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ea6eef3f3d066a8147f966c433c4f4e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24436,
        "upload_time": "2021-06-04T20:33:54",
        "upload_time_iso_8601": "2021-06-04T20:33:54.990893Z",
        "url": "https://files.pythonhosted.org/packages/39/7d/ec65b3fab741f736fd77546f6d8aa36b04c538e78e06abb4e994b035177d/torchsr-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "289da3fa3936776b4d6dda572142a55b6aea33f3b14e4aa640bca3ed9cee2b5e",
          "md5": "3fb8cd5460d253797b9eb7cbffd88c33",
          "sha256": "06ace7d815d076aae9f71fb31e435f725ab76b813768ade7a23803457988f13e"
        },
        "downloads": -1,
        "filename": "torchsr-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3fb8cd5460d253797b9eb7cbffd88c33",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 56210,
        "upload_time": "2021-06-29T19:48:40",
        "upload_time_iso_8601": "2021-06-29T19:48:40.587934Z",
        "url": "https://files.pythonhosted.org/packages/28/9d/a3fa3936776b4d6dda572142a55b6aea33f3b14e4aa640bca3ed9cee2b5e/torchsr-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2dc0e491f90566de86d2b4c50a8f9cbbc8ed001f64c53204a905f7d2fc6ba0a6",
          "md5": "9920523f27a75c6769cf4e6fdba46864",
          "sha256": "191767d4f510ab77b04e52910a09c49312b88754ba63cdfb768a71aa1fc66be9"
        },
        "downloads": -1,
        "filename": "torchsr-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9920523f27a75c6769cf4e6fdba46864",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25175,
        "upload_time": "2021-06-29T19:48:42",
        "upload_time_iso_8601": "2021-06-29T19:48:42.258417Z",
        "url": "https://files.pythonhosted.org/packages/2d/c0/e491f90566de86d2b4c50a8f9cbbc8ed001f64c53204a905f7d2fc6ba0a6/torchsr-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cff763924c36f7a30ffb56ed113669a8a86230b8f146d7a9fb146495d8019c8b",
          "md5": "4feb4e6dffe38373a33bf6603cdc047f",
          "sha256": "458948b7feeca27e45aba62eb27bb3bb39d00014c7567f23b7269d51ca357f91"
        },
        "downloads": -1,
        "filename": "torchsr-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4feb4e6dffe38373a33bf6603cdc047f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31639,
        "upload_time": "2022-08-21T08:27:06",
        "upload_time_iso_8601": "2022-08-21T08:27:06.314958Z",
        "url": "https://files.pythonhosted.org/packages/cf/f7/63924c36f7a30ffb56ed113669a8a86230b8f146d7a9fb146495d8019c8b/torchsr-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5dcd95e50a1e17ecdec2354df1820f9089ccb083f009336cd8214093d2064ff",
          "md5": "93db46ca605743275c2c5eb7eda85656",
          "sha256": "c749021e7fe8b73789f8fcce58603af27cdc4799f2591f830ab1063ef64fa48f"
        },
        "downloads": -1,
        "filename": "torchsr-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "93db46ca605743275c2c5eb7eda85656",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25384,
        "upload_time": "2022-08-21T08:27:08",
        "upload_time_iso_8601": "2022-08-21T08:27:08.070231Z",
        "url": "https://files.pythonhosted.org/packages/d5/dc/d95e50a1e17ecdec2354df1820f9089ccb083f009336cd8214093d2064ff/torchsr-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cff763924c36f7a30ffb56ed113669a8a86230b8f146d7a9fb146495d8019c8b",
        "md5": "4feb4e6dffe38373a33bf6603cdc047f",
        "sha256": "458948b7feeca27e45aba62eb27bb3bb39d00014c7567f23b7269d51ca357f91"
      },
      "downloads": -1,
      "filename": "torchsr-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4feb4e6dffe38373a33bf6603cdc047f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 31639,
      "upload_time": "2022-08-21T08:27:06",
      "upload_time_iso_8601": "2022-08-21T08:27:06.314958Z",
      "url": "https://files.pythonhosted.org/packages/cf/f7/63924c36f7a30ffb56ed113669a8a86230b8f146d7a9fb146495d8019c8b/torchsr-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d5dcd95e50a1e17ecdec2354df1820f9089ccb083f009336cd8214093d2064ff",
        "md5": "93db46ca605743275c2c5eb7eda85656",
        "sha256": "c749021e7fe8b73789f8fcce58603af27cdc4799f2591f830ab1063ef64fa48f"
      },
      "downloads": -1,
      "filename": "torchsr-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "93db46ca605743275c2c5eb7eda85656",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 25384,
      "upload_time": "2022-08-21T08:27:08",
      "upload_time_iso_8601": "2022-08-21T08:27:08.070231Z",
      "url": "https://files.pythonhosted.org/packages/d5/dc/d95e50a1e17ecdec2354df1820f9089ccb083f009336cd8214093d2064ff/torchsr-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}