{
  "info": {
    "author": "Ira Horecka",
    "author_email": "ira89@icloud.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "python-bikewise\n================\n\nA simple `BikeWise <https://www.bikewise.org/>`__ API wrapper.\n\nLicense: `MIT <https://en.wikipedia.org/wiki/MIT_License>`__.\n\nInstallation\n------------\n\n::\n\n    pip install python-bikewise\n\nAPI Examples\n------------\nMake an instance of the ``BikeWise`` class. For example:\n\n.. code:: python\n\n    from bikewise import BikeWise\n    bike = BikeWise()\n\n\nYou can access incident or location information:\n\n- Access the ``incidents`` endpoint if you’d like more detailed information about bike incidents.\n- Access the ``locations`` endpoint if you'd like to map incident locations. This endpoint behaves exactly like incidents, but returns a valid geojson.\n- Access the ``locations.markers`` endpoint (behaves like root ``locations`` endpoint) to return simplestyled markers (mapbox styled markers).\n\nA table of acceptable parameters for methods in ``BikeWise()``. Note, some parameters are restricted to certain methods - please look at the examples below.\n\n+----------------------+-----------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ﻿Parameter           | Data Type | Description                                          | Notes                                                                                                                                                                                                             |\n+======================+===========+======================================================+===================================================================================================================================================================================================================+\n| ``page``             | integer   | Page of results to fetch.                            |                                                                                                                                                                                                                   |\n+----------------------+-----------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``per_page``         | integer   | Number of results to return per page. Defaults to 25 |                                                                                                                                                                                                                   |\n+----------------------+-----------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``occurred_before``  | integer   | End of period                                        | Accepts UTC unix timestamps.                                                                                                                                                                                      |\n+----------------------+-----------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``occurred_after``   | integer   | Start of period                                      | Accepts UTC unix timestamps.                                                                                                                                                                                      |\n+----------------------+-----------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``incident_type``    | string    | Only incidents of specific type                      |                                                                                                                                                                                                                   |\n+----------------------+-----------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``proximity``        | string    | Center of location for proximity search              | Accepts an ip address, an address, zipcode, city, or latitude,longitude - i.e. ``70.210.133.87``, ``210 NW 11th Ave, Portland, OR``, ``60647``, ``Chicago, IL``, and ``45.521728,-122.67326`` are all acceptable. |\n+----------------------+-----------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``proximity_square`` | integer   | Size of the proximity search                         | Sets the length of the sides of the square to find matches inside of. The square is centered on the location specified by ``proximity``.                                                                          |\n+----------------------+-----------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``query``            | string    | Full text search of incidents                        |                                                                                                                                                                                                                   |\n+----------------------+-----------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``id``               | integer   | Incident ID                                          |                                                                                                                                                                                                                   |\n+----------------------+-----------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``limit``            | integer   | Max number of results to return. Defaults to 100     |                                                                                                                                                                                                                   |\n+----------------------+-----------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``all``              | boolean   | Give ‘em all to me. Will ignore limit                | If you pass the ``all`` parameter it returns all matches (which can be big, > 4mb), otherwise it returns the 100 most recent.                                                                                     |\n+----------------------+-----------+------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\n\nIncidents:\n\n.. code:: python\n\n    # incidents method parameters\n    \"\"\"\n    bike.incidents(page=0, per_page=25)\n    bike.incidents.id(id)\n    bike.incidents.features(page=0, per_page=25, occurred_before=0, occurred_after=0,\n                            incident_type=\"\", proximity=\"\", proximity_area=0, query=\"\")\n    \"\"\"\n\n    # example\n    >>> bike.incidents.features(per_page=1, occurred_after=1440444800, incident_type='theft')\n    >>> {'incidents': [{'address': 'Portland, OR, 97227',\n                        'description': 'Taken from basement',\n                        'id': 115242,\n                        'location_description': None,\n                        'location_type': None,\n                        'media': {'image_url': None, 'image_url_thumb': None},\n                        'occurred_at': 1585854000,\n                        'source': {'api_url': 'https://bikeindex.org/api/v1/bikes/705265',\n                                   'html_url': 'https://bikeindex.org/bikes/705265',\n                                   'name': 'BikeIndex.org'},\n                        'title': 'Stolen 2018 On-One Dirty Disco(black)',\n                        'type': 'Theft',\n                        'type_properties': None,\n                        'updated_at': 1585862797,\n                        'url': 'https://bikewise.org/api/v1/incidents/115242'}]}\n\n\nLocations & Markers:\n\n.. code:: python\n\n    # locations method parameters\n    \"\"\"\n    bike.locations(limit=100, all=False)\n    bike.locations.features(occurred_before=0, occurred_after=0, incident_type=\"\", proximity=\"\",\n                            proximity_area=0, query=\"\", limit=100, all=False)\n    bike.locations.markers(occurred_before=0, occurred_after=0, incident_type=\"\", proximity=\"\",\n                           proximity_area=0, query=\"\", limit=100, all=False)\n    \"\"\"\n\n    # example\n    >>> bike.locations.features(occurred_after=1440444800, incident_type='theft', limit=1)\n    >>> {'features': [{'geometry': {'coordinates': [-122.6766628, 45.5461375],\n                                    'type': 'Point'},\n                       'properties': {'description': 'Taken from basement <a '\n                                                     'href=\"https://bikeindex.org/bikes/705265\" '\n                                                     'target=\"_blank\">View details</a>',\n                                      'id': 115242,\n                                      'marker-color': '#BD1622',\n                                      'marker-size': 'small',\n                                      'occurred_at': '2020-04-02 14:00:00 -0500',\n                                      'title': 'Stolen 2018 On-One Dirty Disco '\n                                               '(04-02-2020)'},\n                       'type': 'Feature'}],\n         'type': 'FeatureCollection'}\n\n\nSupport\n-------\nIf you find any bug or you want to propose a new feature, please use the `issues tracker <https://github.com/irahorecka/python-bikewise/issues>`__. I'll be happy to help!\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/irahorecka/python-bikewise",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-bikewise",
    "package_url": "https://pypi.org/project/python-bikewise/",
    "platform": "",
    "project_url": "https://pypi.org/project/python-bikewise/",
    "project_urls": {
      "Homepage": "https://github.com/irahorecka/python-bikewise"
    },
    "release_url": "https://pypi.org/project/python-bikewise/0.1.0/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.5",
    "summary": "A simple BikeWise API wrapper",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6940233,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68e7a9ac10e10d75c788463f6d48bf22cf944ce40e902cfe72b7998e932d9761",
          "md5": "c22719711370f4aa9ce3927c61cee5f2",
          "sha256": "d4d93fb25b5ac71dc877573ca25d1acab1386b601549e8a3b1cfb59597984997"
        },
        "downloads": -1,
        "filename": "python_bikewise-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c22719711370f4aa9ce3927c61cee5f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 5713,
        "upload_time": "2020-04-03T01:35:47",
        "upload_time_iso_8601": "2020-04-03T01:35:47.948254Z",
        "url": "https://files.pythonhosted.org/packages/68/e7/a9ac10e10d75c788463f6d48bf22cf944ce40e902cfe72b7998e932d9761/python_bikewise-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "711ecee8fa6373d2d65c8ce4e3c6514a8f963625316ff9bab47be3868f7f31e0",
          "md5": "04f16946b8ecf765825f53e2dbb91271",
          "sha256": "9599155e4c53995646bf50edfdcfbdb6ce2bbc8d5eef2e1c1528adb848df3da4"
        },
        "downloads": -1,
        "filename": "python-bikewise-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "04f16946b8ecf765825f53e2dbb91271",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6855,
        "upload_time": "2020-04-03T01:35:50",
        "upload_time_iso_8601": "2020-04-03T01:35:50.268030Z",
        "url": "https://files.pythonhosted.org/packages/71/1e/cee8fa6373d2d65c8ce4e3c6514a8f963625316ff9bab47be3868f7f31e0/python-bikewise-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "68e7a9ac10e10d75c788463f6d48bf22cf944ce40e902cfe72b7998e932d9761",
        "md5": "c22719711370f4aa9ce3927c61cee5f2",
        "sha256": "d4d93fb25b5ac71dc877573ca25d1acab1386b601549e8a3b1cfb59597984997"
      },
      "downloads": -1,
      "filename": "python_bikewise-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c22719711370f4aa9ce3927c61cee5f2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 5713,
      "upload_time": "2020-04-03T01:35:47",
      "upload_time_iso_8601": "2020-04-03T01:35:47.948254Z",
      "url": "https://files.pythonhosted.org/packages/68/e7/a9ac10e10d75c788463f6d48bf22cf944ce40e902cfe72b7998e932d9761/python_bikewise-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "711ecee8fa6373d2d65c8ce4e3c6514a8f963625316ff9bab47be3868f7f31e0",
        "md5": "04f16946b8ecf765825f53e2dbb91271",
        "sha256": "9599155e4c53995646bf50edfdcfbdb6ce2bbc8d5eef2e1c1528adb848df3da4"
      },
      "downloads": -1,
      "filename": "python-bikewise-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "04f16946b8ecf765825f53e2dbb91271",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 6855,
      "upload_time": "2020-04-03T01:35:50",
      "upload_time_iso_8601": "2020-04-03T01:35:50.268030Z",
      "url": "https://files.pythonhosted.org/packages/71/1e/cee8fa6373d2d65c8ce4e3c6514a8f963625316ff9bab47be3868f7f31e0/python-bikewise-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}