{
  "info": {
    "author": "Tom Nijhof",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "Natural Language :: English",
      "Operating System :: Microsoft",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Medical Science Apps."
    ],
    "description": "[![Downloads](https://pepy.tech/badge/CytoSmartOpenAPI)](https://pepy.tech/project/CytoSmartOpenAPI)\n[![Downloads](https://pepy.tech/badge/luxconnector)](https://pepy.tech/project/luxconnector)\n\n# CytoSMART Open API\n\nThis is a Python wrapper for the CytoSMART Windows app to use it headless.\nThe package will only work on Windows 10 and above.\n\nThis package was formally known as `luxconnector`\n\n## Warranty\n\n> ⚠️ **Hardware warranty is void by using this open API** ⚠️:\n>\n> Using the CytoSmartOpenAPI means you will have NO hardware warranty (see license).\n\nThis is because our devices are made to handle the normal usage ([the GUI app](http://download.cytosmart.com/)).\nIt also includes additionally bought warranty.\nOnly if your additionally bought warranty implicitly includes the Open API usage you will have warranty.\n\n## Installation\n\nTo install this package follow these steps:\n\n### Step 1: Drivers\n\nMake sure you had a [CytoSmart application installed](http://download.cytosmart.com/).\n\nRecommended is the cell counter given it does not restart itself after closing.\nThis is needed to have all the correct drivers installed.\nUninstall the app afterwards.\nIf the app is on the same machine the Open API might connect with the wrong one.\n\n### Step 2: pip install\n\n```cmd\npip install CytoSmartOpenAPI\n```\n\n## Initialization\n\nMake sure at least one CytoSMART device is physically connected to your computer via a USB3 port.\nThe CytoSmartOpenAPI is an object that maintains the connection with the device.\nTo create the object use the following code:\n\n```python\nfrom CytoSmartOpenAPI import CytoSmartOpenAPI\nconnector = CytoSmartOpenAPI(number_of_devices=2, warranty=False)\n```\n\n> ⚠️ You are voiding your warranty by using this package\n\nNOTE: Make sure number_of_devices does not exceed the number of devices you have physically connected.\nOtherwise the CytoSmartOpenAPI will look for the missing devices forever.\n\n## Getting serial numbers\n\nEach physical device has a serial number.\nThis number is needed to send commands to a specific device.\n\n```python\nserial_numbers = connector.get_all_serial_numbers()\n```\n\n## Getting a single image\n\nWhen you want a single image taken at this moment use get_image.\nThis will return the image as a [`pillow image`](https://pillow.readthedocs.io/en/stable/reference/Image.html).\nYou need to give the serial number of the device you want to target.\n\n```python\nimg = connector.get_image(serial_number)\n```\n\nor\n\n```python\nimg = connector.get_image(serial_numbers[index])\n```\n\n## Changing the focus\n\nThis function will change the focus for the CytoSmartOpenAPI object.\nEvery image taken after this function will have the new focus.\n\nThe focus is in the range 0 until 1. (0.0 and 1.0 are valid entries)\n\nYou need to give the serial number of the device you want to target.\n\n```python\nconnector.set_focus(serial_number, 0.5)\nimg1 = connector.get_image(serial_number) # Image with focus of 0.5\nconnector.set_focus(serial_number, 0.7)\nimg2 = connector.get_image(serial_number) # Image with focus of 0.7\nimg3 = connector.get_image(serial_number) # Image with focus of 0.7\n```\n\n## Auto focus\n\nThe device goes over multiple possible focuses to find the best focus.\nIt will use image analysis to determine how well the image is in focus.\n\n```python\n# Fast but goes over a limited range to cover most manufactured cell counting slides\nconnector.do_autofocus(serial_number, \"slide\")\n# Fastest: goes over the limited range where cells can be in focus on the CytoSMART cell counting slide\nconnector.do_autofocus(serial_number, \"CSslide\")\n# Slow, but goes over the full range of possible focusses: suitable for any vessel that works with the CytoSMART device\nconnector.do_autofocus(serial_number, \"other\")\n```\n\n## Getting the temperature\n\nThis function returns the temperature in Celsius of the device.\n\nYou need to give the serial number of the device you want to target.\n\n```python\ntemperature = connector.get_temperature(serial_number)\n```\n\n## Change active camera (fluorescence)\n\nTo use fluorescence you will need to change the active camera.\nThe camera can be set to 3 different values, RED, GREEN, or BRIGHTFIELD.\nThis will only work if your device is an FL device otherwise only BRIGHTFIELD is available.\n\n```python\nconnector.set_active_camera(serial_number, \"RED\")\nconnector.set_active_camera(serial_number, \"GREEN\")\nconnector.set_active_camera(serial_number, \"BRIGHTFIELD\")\n```\n\n## Change camera setting\n\nEach camera has its own settings.\nNot all settings are available for BRIGHTFIELD.\n\n- exposure: The time in milliseconds that the camera is detecting light. (Lux and Exact devices only; for Omni devices use flash duration)\n- gain: The multiplication of the camera. (Fluo only)\n  If very little light goes into the camera sensor make sure the gain is high.\n- brightness: Strength of the led when it is on. (Fluo only)\n- focus_offset: The difference in focus between brightfield and fluo.\n  If focus is set to 0.4 and focus_offset for RED is set to 0.1 RED focus is 0.5 (Fluo only)\n\n```python\nconnector.set_camera_settings(serial_number, \"RED\", 500, gain=30, brightness=5000, focus_offset=0.0)\nconnector.set_camera_settings(serial_number, \"BRIGHTFIELD\", 10)\n```\n\n## Change flash duration (Omni only)\n\nThe Omni cannot change the exposure time but can change the time the led is on.\nThis can be done with set_flash_duration.\nIt will set the duration between 40 and 250 μs.\n\n```python\nconnector.set_flash_duration(serial_number, duration=120)\n```\n\nIf you do NOT have an Omni use set_camera_settings.\n\n## Getting a z-stack\n\nThis function will return a list of [`pillow images`](https://pillow.readthedocs.io/en/stable/reference/Image.html).\nEach image will be at a different focus level.\n\nThis code will create a z-stack of 6 images.\nThe focuses of these images will be [0.5, 0.6, 0.7, 0.8, 0.9, 1.0]\n\nYou need to give the serial number of the device you want to target.\n\n```python\nlist_of_imgs = connector.get_z_stack(serial_number, num_img = 6, start_focus = 0.5, stop_focus = 1)\n```\n\n## Change stage (Omni only)\n\nTo change the position of the Omni stage (camera, led, arm, ect.) give the new position in mm.\n\n- Position x in mm\n- Position y in mm\n- Time in seconds it can wait till it arrives (default 60)\n\n```python\nconnector.move_stage(serial_number, 100, 100, 60)\n```\n\nAfter this the normal process for obtaining and changing cameras applies.\n\n## Get stage position (Omni only)\n\nIf you need to know where the stage is, use get_position.\nThis also works if the Omni moved without a move_stage command (e.g. when it goes to sleep).\n\n```python\nprint(connector.get_position(serial_number))\n```\n\n## Changing zoom modes (Lux only)\n\nThere are 2 zoom modes: \"IN\" and \"OUT\".\nWhile zoomed in the resolution is higher but the ROI is smaller, zoomed out has a higher ROI but a lower resolution.\nSince zooming in comprises digital zoom, the image will not show more sample details.\n\nChanging this setting will change it for every image or z-stack taken afterwards.\n\nYou need to give the serial number of the device you want to target.\n\n```python\nconnector.set_zoom(serial_number, \"IN\")\nimg1 = connector.get_image(serial_number) # Image is zoomed in\nconnector.set_zoom(serial_number, \"OUT\")\nimg2 = connector.get_image(serial_number) # Image is zoomed out\n```\n\n## Live view\n\nThe live view of the device is hosted at http://localhost:3333/cytosmartservice/live?serialNumber=##########.\nThis image can only been seen if the live view is turned on (by default the live view is turned on).\n\nYou need to give the serial number of the device you want to target at the place of the #-symbols.\n\n```python\nconnector.set_liveview(serial_number, False) # Led of device turns off till you take a picture\nconnector.set_liveview(serial_number, True) # In the browser you can see the image being updated\nconnector.open_liveview(serial_number) # Opens liveview in the default browser\n```\n\n## Developers\n\nDevelopers of the CytoSmartOpenAPI please look at the [`developers readme`](README_DEV.md)\n\n## Credits\n\n- Tom Nijhof\n- Nora\n- Tessa\n- Count Nicolai Vondracek, Señior sunshine manager\n\n\nHistory\n-------\n1.3.0 (2022-08-25)\n------------------\n- Add open_liveview\n- Add do_autofocus\n- Add listener to autofocus change\n- Bugfix: set_focus. Make sure camera_setting is completed before setting the focus\n\n1.2.0 (2022-06-27)\n------------------\n- Update server to support Omni\n- Add move stage\n- Add get position\n- Add set flash duration\n- Add mandatory turning off of warranty\n- Check for connection loss and reconnect is closed\n- Check for sleeping device\n\n1.1.1 (2022-06-29)\n------------------\n- Update documentation\n\n1.1.0 (2021-12-03)\n------------------\n- Add change camera settings\n- Add set activate camera (brightfield, red-fluo, or green-fluo)\n- Change focus: \n    make sure focus always happens in brightfield camera mode\n    Add sleep after changing to focus so camera can move to new position\n- Update to new Cytosmart app\n\n1.0.4 (2021-04-15)\n------------------\n- Update Pillow\n- Fix installation requirements\n\n1.0.3 (2021-11-22)\n------------------\n- Update requirements of websocket and websocket-client to include version 1\n- Check if app is open before starting a new one\n\n1.0.2 (2021-04-15)\n------------------\n- Update pillow\n- Update license to ACADEMIC PUBLIC LICENSE\n\n1.0.1 (2021-01-14)\n------------------\n- Added support for LUX3 FL\n- Bugfix: toggle liveview when change zoom level\n\n1.0.0 (2020-09-15)\n------------------\n- Added multi lux support\n- Changed output from numpy array to pillow\n- Require serial number with function to get information\n- Add get_temperature\n\n0.1.2 (2020-06-30)\n------------------\n- Rename failing to pinging in print statement\n\n0.1.1 (2020-06-11)\n------------------\n- Update documentation\n- Make setup.py fit for PyPI\n \n0.1.0 (2020-05-20)\n------------------\n- Update lux server to latest version\n\n0.0.3 (2020-03-30)\n------------------\n- bugfix: files were not copied into package on linux\n\n0.0.2 (2020-03-24)\n------------------\n- Bugfix: stop waiting for response after sending a message\n\n0.0.1 (2020-03-16)\n------------------\n\n- Add function: Copy the CytoSmartOpenAPI \n- Add function: focus change option\n- Add function: z-stack\n- Bugfix: add lux app to manifest\n\n0.0.0 (2020-03-13)\n------------------\n\nCopied basic package a start of CytoSmartOpenAPI\n\n\n                         ACADEMIC PUBLIC LICENSE\n                                version 1.1\n\n                           Copyright (C) 2021\n\n\n                                Preamble\n\n  This license contains the terms and conditions of using CytoSmartOpenAPI in\nnoncommercial settings: at academic institutions for teaching and research\nuse and for personal or educational purposes. You will find that this\nlicense provides noncommercial users of CytoSmartOpenAPI with rights that are\nsimilar to the well-known GNU General Public License, yet it retains the\npossibility for CytoSmartOpenAPI authors to financially support the development by\nselling commercial licenses. In fact, if you intend to use CytoSmartOpenAPI in a\n\"for-profit\" environment, where research is conducted to develop or enhance\na product, is used in a commercial service offering, or when an entity uses\nCytoSmartOpenAPI to participate in government-funded, EU-funded, military or similar\nresearch projects, then you need to obtain a commercial license.\nIn that case, or if you are unsure, please contact the Author info@cytosmart.com \nto inquire about commercial licenses.\n\n  What are the rights given to noncommercial users? Similarly to GPL, you\nhave the right to use the software, to distribute copies, to receive source\ncode, to change the software and distribute your modifications or the\nmodified software. Also similarly to the GPL, if you distribute verbatim or\nmodified copies of this software, they must be distributed under this\nlicense.\n\n  By modeling the GPL, this license guarantees that you're safe when using\nCytoSmartOpenAPI in your work, for teaching or research. This license guarantees\nthat CytoSmartOpenAPI will remain available free of charge for nonprofit use. You\ncan modify CytoSmartOpenAPI to your purposes, and you can also share your modifications.\nEven in the unlikely case of the authors abandoning CytoSmartOpenAPI entirely, this\nlicense permits anyone to continue developing it from the last release, and\nto create further releases under this license.\n\n  We believe that the combination of noncommercial open-source and commercial\nlicensing will be beneficial for the whole user community, because income from\ncommercial licenses will enable faster development and a higher level of\nsoftware quality, while further enjoying the informal, open communication\nand collaboration channels of open source development.\n\n  The precise terms and conditions for using, copying, distribution and\nmodification follow.\n\n\n                         ACADEMIC PUBLIC LICENSE\n\n    TERMS AND CONDITIONS FOR USE, COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. Definitions\n\n  \"Program\" means a copy of CytoSmartOpenAPI, which is said to be distributed under\nthis Academic Public License.\n\n  \"Work based on the Program\" means either the Program or any derivative work\nunder copyright law: that is to say, a work containing the Program or a\nportion of it, either verbatim or with modifications and/or translated into\nanother language.  (Hereinafter, translation is included without limitation\nin the term \"modification\".)\n\n  \"Using the Program\" means any act of creating executables that contain or\ndirectly use libraries that are part of the Program, running any of the\ntools that are part of the Program, or creating works based on the Program.\n\nEach licensee is addressed as \"you\".\n\n  1. Permission is hereby granted to use the Program free of charge for\nnoncommercial purposes, including teaching and academic research at\nuniversities, colleges and other educational institutions and personal\nnon-profit purposes. For using the Program for commercial purposes,\nincluding but not restricted to consulting activities, design of commercial\nhardware or software networking products, and joint research with a\ncommercial entity, government-funded, EU-funded, military or similar\nresearch projects, you have to contact the Author at info@cytosmart.com\nfor an appropriate license. Permission is also granted to use the Program\nfor a reasonably limited period of time for the purpose of evaluating its\nusefulness for a particular purpose.\n\n  2. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\nThe program is provided on an \"as-is\" basis. The maintainers of the program\nmake no warranties regarding the information provided,\nand disclaims liability for damages resulting from its use.\nUsing the program voids the warranty given by the manufacturer of the device.\n\n  3. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 2\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose regulations for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n(If the same, independent sections are distributed as part of a package\nthat is otherwise reliant on, or is based on the Program, then the\ndistribution of the whole package, including but not restricted to the\nindependent section, must be on the unmodified terms of this License,\nregadless of who the author of the included sections was.)\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based or reliant on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\nstorage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  4. You may copy and distribute the Program (or a work based on it,\nunder Section 3) in object code or executable form under the terms of\nSections 2 and 3 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    2 and 3 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 2 and 3 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you received\n    the program in object code or executable form with such an offer,\n    in accord with Subsection b) above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  6. You are not required to accept this License, since you have not\nsigned it.  Nothing else grants you permission to modify or distribute\nthe Program or its derivative works; law prohibits these actions\nif you do not accept this License.  Therefore, by modifying or distributing\nthe Program (or any work based on the Program), you indicate your\nacceptance of this License and all its terms and conditions for copying,\ndistributing or modifying the Program or works based on it, to do so.\n\n  7. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  8. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\n  9. If the distribution and/or use of the Program are restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n                            NO WARRANTY\n\n  10. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  11. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED ON IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\nInitially written by Andras Varga (public domain) for OMNeT++ https://omnetpp.org/intro/license, \nadapted by CytoSMART TECHNOLOGIES BV. The adaptation is licensed under CC0 1.0 (Public Domain Dedication).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cytosmart-bv/CytoSmartOpenAPI",
    "keywords": "CytoSmartOpenAPI",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "CytoSmartOpenAPI",
    "package_url": "https://pypi.org/project/CytoSmartOpenAPI/",
    "platform": null,
    "project_url": "https://pypi.org/project/CytoSmartOpenAPI/",
    "project_urls": {
      "Homepage": "https://github.com/cytosmart-bv/CytoSmartOpenAPI"
    },
    "release_url": "https://pypi.org/project/CytoSmartOpenAPI/1.3.0/",
    "requires_dist": [
      "pillow (<10,>=6.2.2)",
      "requests (<3,>=2.24.0)",
      "websocket-client (<2,>=0.57.0)"
    ],
    "requires_python": "",
    "summary": "This is a python wrapper for the CytoSMART windows app to use it headless",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15214815,
  "releases": {
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e86553fda04963ae5fe1463be5add6ad6c5906cd558fb49b2b658a05dea8e0b8",
          "md5": "dd13fc3f3abe0ac2162e5f05d8f00b66",
          "sha256": "a8dd36a2eb7ce580a59db2f452929c5748cf34b112018656adf76bbbbd7790a2"
        },
        "downloads": -1,
        "filename": "CytoSmartOpenAPI-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd13fc3f3abe0ac2162e5f05d8f00b66",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 27643210,
        "upload_time": "2022-07-28T08:00:02",
        "upload_time_iso_8601": "2022-07-28T08:00:02.010856Z",
        "url": "https://files.pythonhosted.org/packages/e8/65/53fda04963ae5fe1463be5add6ad6c5906cd558fb49b2b658a05dea8e0b8/CytoSmartOpenAPI-1.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f524ffc06d38d555e25560fb125e5ebbf80e5f25522881c165908664f8e8ff17",
          "md5": "ebfb660965d8c418f066e489a8a31028",
          "sha256": "972e6bed9d21bb47f217b90d4def7c2ee3f32407b276562a7b944d4cbb32d8f4"
        },
        "downloads": -1,
        "filename": "CytoSmartOpenAPI-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ebfb660965d8c418f066e489a8a31028",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26742051,
        "upload_time": "2022-07-28T08:00:05",
        "upload_time_iso_8601": "2022-07-28T08:00:05.440889Z",
        "url": "https://files.pythonhosted.org/packages/f5/24/ffc06d38d555e25560fb125e5ebbf80e5f25522881c165908664f8e8ff17/CytoSmartOpenAPI-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38ae8d712f92baac811681e1732f658b7fddd3e5a14e836f88441c14508f1a57",
          "md5": "d046c0344fee1c56715635409a0a3704",
          "sha256": "b6894aab09304fddfb45eb3383f30d9a1312bded4d46665f143d5dc23f736e47"
        },
        "downloads": -1,
        "filename": "CytoSmartOpenAPI-1.2.0b1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d046c0344fee1c56715635409a0a3704",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 27642993,
        "upload_time": "2022-07-22T12:59:12",
        "upload_time_iso_8601": "2022-07-22T12:59:12.508919Z",
        "url": "https://files.pythonhosted.org/packages/38/ae/8d712f92baac811681e1732f658b7fddd3e5a14e836f88441c14508f1a57/CytoSmartOpenAPI-1.2.0b1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76552c99582e1dfa938d4cd9f7b3fda68bdfef454534fb166e4db27fb6f21610",
          "md5": "939c598a299df4f5f390c6236baf9ad8",
          "sha256": "30642dabf9254f9e019b1f030a5ed424cc31928dab24e2684714fe2dea4806bb"
        },
        "downloads": -1,
        "filename": "CytoSmartOpenAPI-1.2.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "939c598a299df4f5f390c6236baf9ad8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26742046,
        "upload_time": "2022-07-22T12:59:18",
        "upload_time_iso_8601": "2022-07-22T12:59:18.526520Z",
        "url": "https://files.pythonhosted.org/packages/76/55/2c99582e1dfa938d4cd9f7b3fda68bdfef454534fb166e4db27fb6f21610/CytoSmartOpenAPI-1.2.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86d01c406297f5c1753111a231d5e92b50ebb3b4e9f94333aebb5a11d795af5e",
          "md5": "e10ccfe6385e73a80b83f226f5bec712",
          "sha256": "a11721ba26c989de8bf08fb7544b963262acb796ed05a02392f3ea83e70d2fb9"
        },
        "downloads": -1,
        "filename": "CytoSmartOpenAPI-1.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e10ccfe6385e73a80b83f226f5bec712",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 27644268,
        "upload_time": "2022-09-26T13:10:58",
        "upload_time_iso_8601": "2022-09-26T13:10:58.178711Z",
        "url": "https://files.pythonhosted.org/packages/86/d0/1c406297f5c1753111a231d5e92b50ebb3b4e9f94333aebb5a11d795af5e/CytoSmartOpenAPI-1.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe9012d0a872c87904f0deda4ae2eff83ff1bc1775b08be46453c0ad4444bc0f",
          "md5": "e5c3dbc9daecf300ecc6619fd16d536a",
          "sha256": "bd5a7316237032bf78c419169664a13778034a7d08e781aa3d0f39a9544e0844"
        },
        "downloads": -1,
        "filename": "CytoSmartOpenAPI-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e5c3dbc9daecf300ecc6619fd16d536a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26743959,
        "upload_time": "2022-09-26T13:11:02",
        "upload_time_iso_8601": "2022-09-26T13:11:02.153641Z",
        "url": "https://files.pythonhosted.org/packages/fe/90/12d0a872c87904f0deda4ae2eff83ff1bc1775b08be46453c0ad4444bc0f/CytoSmartOpenAPI-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1564f0bb509b4e5dc6f3cef80539a71bef06178aaa605e3b055eadcbea800a7d",
          "md5": "dd75eb708f99ab1e62ea48a712cb9da4",
          "sha256": "3e06a9cb126acafa603a219e6da062029744ba2d90666ad470f49ac0406d41b9"
        },
        "downloads": -1,
        "filename": "CytoSmartOpenAPI-1.3.0b0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd75eb708f99ab1e62ea48a712cb9da4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 27644262,
        "upload_time": "2022-09-01T08:47:24",
        "upload_time_iso_8601": "2022-09-01T08:47:24.868170Z",
        "url": "https://files.pythonhosted.org/packages/15/64/f0bb509b4e5dc6f3cef80539a71bef06178aaa605e3b055eadcbea800a7d/CytoSmartOpenAPI-1.3.0b0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6de02bcbe654d9fd16c6e67a4f2940a8ed69e17b18b2694fc4b379ab18cac9a",
          "md5": "8c59a79f54383cd8090df619326effec",
          "sha256": "dd5c39d71bc74f9d998e8a9a411c38f89414b8274129e942be2513b69abb1aba"
        },
        "downloads": -1,
        "filename": "CytoSmartOpenAPI-1.3.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "8c59a79f54383cd8090df619326effec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26743437,
        "upload_time": "2022-09-01T08:47:29",
        "upload_time_iso_8601": "2022-09-01T08:47:29.273246Z",
        "url": "https://files.pythonhosted.org/packages/d6/de/02bcbe654d9fd16c6e67a4f2940a8ed69e17b18b2694fc4b379ab18cac9a/CytoSmartOpenAPI-1.3.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86d01c406297f5c1753111a231d5e92b50ebb3b4e9f94333aebb5a11d795af5e",
        "md5": "e10ccfe6385e73a80b83f226f5bec712",
        "sha256": "a11721ba26c989de8bf08fb7544b963262acb796ed05a02392f3ea83e70d2fb9"
      },
      "downloads": -1,
      "filename": "CytoSmartOpenAPI-1.3.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e10ccfe6385e73a80b83f226f5bec712",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 27644268,
      "upload_time": "2022-09-26T13:10:58",
      "upload_time_iso_8601": "2022-09-26T13:10:58.178711Z",
      "url": "https://files.pythonhosted.org/packages/86/d0/1c406297f5c1753111a231d5e92b50ebb3b4e9f94333aebb5a11d795af5e/CytoSmartOpenAPI-1.3.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe9012d0a872c87904f0deda4ae2eff83ff1bc1775b08be46453c0ad4444bc0f",
        "md5": "e5c3dbc9daecf300ecc6619fd16d536a",
        "sha256": "bd5a7316237032bf78c419169664a13778034a7d08e781aa3d0f39a9544e0844"
      },
      "downloads": -1,
      "filename": "CytoSmartOpenAPI-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e5c3dbc9daecf300ecc6619fd16d536a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26743959,
      "upload_time": "2022-09-26T13:11:02",
      "upload_time_iso_8601": "2022-09-26T13:11:02.153641Z",
      "url": "https://files.pythonhosted.org/packages/fe/90/12d0a872c87904f0deda4ae2eff83ff1bc1775b08be46453c0ad4444bc0f/CytoSmartOpenAPI-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}