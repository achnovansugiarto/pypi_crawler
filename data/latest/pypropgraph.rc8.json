{
  "info": {
    "author": "Alex MiÅ‚owski",
    "author_email": "alex@milowski.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n\nA Property Graph library for python that supports reading and writing\nproperty graphs in a textual format, reading an writing via Cypher, and\na simple schema language.\n\n\n* generate documentation for your property graph structure\n* load, parse, and manipulate PG Schema documents\n* load saved graphs from a YAML format, schema embedded\n* generate cypher from saved graphs to load property graphs\n\n\nYou can install the package via:\n\n```sh\npip install pypropgraph\n```\n\n\nThe module can be invoked directly and provides a set of basic commands that\nallow parsing, inspection, cypher statement generation, and loading ontologies.\n\nThe invocation is:\n\n```sh\npython -m propgraph {operation} {file ...}?\n```\n\nwhere `operation` is one of:\n\n* `validate` - parse and validate the graph\n* `cypher` - generate cypher create/merge statements\n* `load` - load the ontology into a property graph database\n* `schema.check` - check the syntax of a schema\n* `schema.doc` - generate Markdown documentation for the schema\n\nIf the file is omitted, the command will read from stdin. Otherwise, each\nfile specified will be read and operated on in the order they are specified.\n\n\nThe module currently supports loading ontologies directly into [RedisGraph](https://github.com/RedisGraph/RedisGraph).\n\nThe following options can be specified for connecting to the database:\n\n* `--host {name}|{ip}` - the host of the database, defaults to 0.0.0.0\n* `--port {port}` - the port, defaults to 6379\n* `--password {password}` - the database password, default is no password\n* `--graph {key}` - the graph key, defaults to \"test\"\n* `--infer` - infer identity and labels from @id and @type, respectively\n\nAdding the `--show-query` option will allow you to see the Cypher statements as\nthey are executed.\n\n\nThe YAML-based format is a simple dictionary of nodes and edges.\n\n\nAt the top-level, a **graph** is a dictionary whose keys define\nthe nodes, schema, and edges. The keys can either be:\n\n* `~schema` - the schema definition for the property graph\n* `~edges` - a set of fully qualified edges\n* {label} - a node label\n\n```YAML\nA:\n~label: Component\nid: 'A'\nname: 'Component A'\nuse: 12\n~edges:\n- ~to: B\n~label: imports\n- ~to: C\n~label: imports\nB:\n~label: Component\nid: 'B'\nname: 'Component B'\nuse: 6\nC:\n~label: Component\nid: 'C'\nname: 'Component C'\nuse: 7\n~edges:\ne1:\n~from: C\n~to: B\n~label: imports\n```\n\n\nWhen a schema is specified via `~schema`, the properties that establish\nthe node's identity can be specified.\n\nAlternatively, we can use inferencing and the edge label format:\n\n```YAML\nA:\n@type: Component\n@id: 'A'\nname: 'Component A'\nuse: 12\n:imports:\n- ~to: B\n- ~to: C\nB:\n@type: Component\n@id: 'B'\nname: 'Component B'\nuse: 6\nC:\n@type: Component\n@id: 'C'\nname: 'Component C'\nuse: 7\n:imports:\n- ~from: C\n~to: B\n```\n\n\n\nA **node** is a simple dictionary whose key/value pairs define properties\nall except for two special labels:\n\n* `~labels` - the set of Node labels\n* `~edges` - the edges connected to the node\n* {label} - a property\n\nA **property** can either be a simple key/value pair where the key will be the\nproperty name. It can also be defined with the `name:` and `value:` keys for\nproperty name values that are harder to encode as a key:\n\n```YAML\nFunky:\nname: 'Town'\np1:\nname: \"Meaning of life\"\nvalue: 42\n```\n\nNode can specify an edge via a label and enumerate the target nodes and edge\nproperties:\n\n\n```YAML\nA:\nid: 'A'\n:child:\n- ~to: B\nuse: 1209\n- ~to: C\nuse: 432\nB:\nid: 'B'\n:child:\ne1:\n~to: C\nuse: 128\nC:\nid: 'C'\n```\n\n\nNodes can also specify a set of edges that originate at the node via the `~edges`\nkey. The edges are specified as a list or key labeled set:\n\n```YAML\nA:\nid: 'A'\n~edges:\n- ~to: B\n~label: child\nuse: 1209\n- ~to: C\n~label: child\nuse: 432\nB:\nid: 'B'\n~edges:\ne1:\n~to: C\n~label: child\nuse: 128\nC:\nid: 'C'\n```\n\n\nEdges can also be specified at the graph level instead of in the node. At the top-level, a single `~edges` key is allowed that can specify edges from and to nodes. The\n`~from` key must also be specified:\n\n```YAML\nA:\nid: 'A'\nB:\nid: 'B'\nC:\nid: 'C'\n~edges:\n- ~from: A\n~to: B\n~label: child\nuse: 1209\n- ~from: A\n~to: C\n~label: child\nuse: 432\n- ~from: B\n~to: C\n~label: child\nuse: 128\n```\n\nAlternatively, you can specify a label for the edge and enumerate the edges associated with that label:\n\n```YAML\nA:\nid: 'A'\nB:\nid: 'B'\nC:\nid: 'C'\n:child:\n- ~from: A\n~to: B\nuse: 1209\n- ~from: A\n~to: C\nuse: 432\n- ~from: B\n~to: C\nuse: 128\n```\n\n\nReusing the '@type' and '@id' properties from [JSON-LD](https://json-ld.org),\nif these properties are specified on a node, then the following inferences\ncan be optionally applied:\n\n* The value of @type will turn into a node label\n* The value of @id will be used as the key for matching the node\n\nOtherwise, labels and identity must be accomplished via the schema.\n\n\nA schema can be specified at the top-level via the `~schema` key. The schema itself is either embedded directly as text or has a single `source` key specifying the file location.\n\nFor example, in the imports graph example, the `id` property can be specified as\nproperty that identifies the node. This can be helpful for generating merge or match queries.\n\nThe [schema format](schema.md) is described separately and allows you to define nodes, labels, properties, and their descriptions.\n\nThe schema can be embedded as text:\n\n```YAML\n~schema: |\n(:Component {id})\n.id = 'the component identifier'\n.name = 'the component descriptive name'\n.use = int 'a count of usage'\n-[:imports]->(:Component) = 'an imported component'\nA:\n~label: Component\nid: 'A'\nname: 'Component A'\nuse: 12\n~edges:\n- ~to: B\n~label: imports\n- ~to: C\n~label: imports\nB:\n~label: Component\nid: 'B'\nname: 'Component B'\nuse: 6\nC:\n~label: Component\nid: 'C'\nname: 'Component C'\nuse: 7\n~edges:\n- ~from: C\n~to: B\n~label: imports\n```\n\nor via reference:\n\n```YAML\n~schema:\nsource: schema.pgs\nA:\n~label: Component\nid: 'A'\nname: 'Component A'\nuse: 12\n~edges:\n- ~to: B\n~label: imports\n- ~to: C\n~label: imports\nB:\n~label: Component\nid: 'B'\nname: 'Component B'\nuse: 6\nC:\n~label: Component\nid: 'C'\nname: 'Component C'\nuse: 7\n~edges:\n- ~from: C\n~to: B\n~label: imports\n```\n\n\n\nThe graph source is just raw YAML and should be loaded directly using the `yaml` package:\n\n```python\nimport yaml\n\nwith open('graph.yaml','r') as input:\ngraph_data = yaml.load(input,Loader=yaml.Loader)\n```\n\nOnce you have loaded the graph YAML, you can read the graph into a sequence\nof item (NodeItem or EdgeRelationItem):\n\n```python\nimport yaml\nfrom propgraph import read_graph\n\nwith open('graph.yaml','r') as input:\ngraph_data = yaml.load(input,Loader=yaml.Loader)\nfor item in read_graph(graph_data):\nprint(item)\n```\n\nThese items can be turned into cypher merge or create statements:\n\n```python\nimport yaml\nfrom propgraph import read_graph, graph_to_cypher\n\nwith open('graph.yaml','r') as input:\ngraph_data = yaml.load(input,Loader=yaml.Loader)\nfor query in graph_to_cypher(read_graph(graph_data)):\nprint(query,end=';\\n')\n```\n\nFinally, the graph can easily be loaded into RedisGraph:\n\n```python\nimport yaml\nfrom propgraph import read_graph, graph_to_cypher\n\nimport redis\nfrom redisgraph import Graph\nr = redis.Redis(host='localhost',port=6379,password='...')\nrg = Graph('test',r)\n\nwith open('graph.yaml','r') as input:\ngraph_data = yaml.load(input,Loader=yaml.Loader)\nfor query in graph_to_cypher(read_graph(graph_data)):\nrg.query(query)\n```\n\n\nA schema can be loaded from a file:\n\n```python\nfrom propgraph import SchemaParser\n\nparser = SchemaParser()\nwith open('schema.pgs','r') as input:\nschema = parser.parse(input)\n```\n\nor a string:\n\n```python\nfrom propgraph import SchemaParser\n\nsource = '''\n(:Component {id})\n.id = 'the component identifier'\n.name = 'the component descriptive name'\n.use = int 'a count of usage'\n-[:imports]->(:Component) = 'an imported component'\n'''\n\nparser = SchemaParser()\nschema = parser.parse(input)\n\n```\n\n\nDocumentation in Markdown format can be generate from the schema object:\n\n```python\nimport sys\nfrom propgraph import SchemaParser\n\nsource = '''\n(:Component {id})\n.id = 'the component identifier'\n.name = 'the component descriptive name'\n.use = int 'a count of usage'\n-[:imports]->(:Component) = 'an imported component'\n'''\n\nparser = SchemaParser()\nschema = parser.parse(input)\n\nschema.documentation(sys.stdout)\n\n```\n\n\nNote: incomplete ...\n\n`read_graph(source,location=None,schema=None)`\n\nReads a graph into a sequence of items\n\n`graph_to_cypher(stream,merge=True)`\n\nTransforms a sequence of items into a sequence of cypher statements\n\n`cypher_for_node(item,merge=True)`\n\nReturns a cypher statement to create a node from a node item.\n\n`cypher_for_edge_relation(item,merge=True)`\n\nReturns a cypher statement to create an edge from a edge relation item.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alexmilowski/pypropgraph",
    "keywords": "cypher,property,graph",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pypropgraph",
    "package_url": "https://pypi.org/project/pypropgraph/",
    "platform": null,
    "project_url": "https://pypi.org/project/pypropgraph/",
    "project_urls": {
      "Homepage": "https://github.com/alexmilowski/pypropgraph"
    },
    "release_url": "https://pypi.org/project/pypropgraph/0.5.3/",
    "requires_dist": [
      "pyyaml",
      "lark-parser",
      "redis (>=4.1.4)"
    ],
    "requires_python": "",
    "summary": "A property graphs library for importing and generating cypher in python",
    "version": "0.5.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15844570,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62bdd1e78fdb214d87697084d2aea1210c817e7d7a07a4c5001082709a32b330",
          "md5": "bee0c4e83d740372e3ba940cdc4deafa",
          "sha256": "68871785368dbd2b7bdbfce865cd3b27f599ed5efeb601147c182fb07f8068a2"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bee0c4e83d740372e3ba940cdc4deafa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11058,
        "upload_time": "2020-05-13T00:20:08",
        "upload_time_iso_8601": "2020-05-13T00:20:08.606322Z",
        "url": "https://files.pythonhosted.org/packages/62/bd/d1e78fdb214d87697084d2aea1210c817e7d7a07a4c5001082709a32b330/pypropgraph-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6280bf2cc78947b79c5ceb8b41922a561cff8b3c92509c15668c75aa9e1b3f5a",
          "md5": "4ce56f809562059e9b6e89c8f371bd58",
          "sha256": "64ef5bec0b768557580bd5c4a943bb9f0778431a763479e5d386fe78e0e3f616"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4ce56f809562059e9b6e89c8f371bd58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12789,
        "upload_time": "2020-05-13T00:20:10",
        "upload_time_iso_8601": "2020-05-13T00:20:10.738852Z",
        "url": "https://files.pythonhosted.org/packages/62/80/bf2cc78947b79c5ceb8b41922a561cff8b3c92509c15668c75aa9e1b3f5a/pypropgraph-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a08326fb28a583e4a22efc39ca5e17dae52e0ce1549d81f2725f817c04db00b3",
          "md5": "7dbb8285dbda276bdd32de0fcfac2301",
          "sha256": "a2e40a9f522643fb24da7ff8a7f7a32bcbfa9f7f8db8ac8d9b6681ccac3eb8cb"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7dbb8285dbda276bdd32de0fcfac2301",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11835,
        "upload_time": "2020-06-05T22:09:06",
        "upload_time_iso_8601": "2020-06-05T22:09:06.205169Z",
        "url": "https://files.pythonhosted.org/packages/a0/83/26fb28a583e4a22efc39ca5e17dae52e0ce1549d81f2725f817c04db00b3/pypropgraph-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dccb62c2a9223d5cb54bdaeddf7a41d55dbbae037debf36319687f224ee1e506",
          "md5": "38bec1cfcecb2656d2e75c333aa7716a",
          "sha256": "57fc6865f8969d5bd3cfd3098d22b66052c8c8b1de5c7f59a09644d8841d432b"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "38bec1cfcecb2656d2e75c333aa7716a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13572,
        "upload_time": "2020-06-05T22:09:07",
        "upload_time_iso_8601": "2020-06-05T22:09:07.793144Z",
        "url": "https://files.pythonhosted.org/packages/dc/cb/62c2a9223d5cb54bdaeddf7a41d55dbbae037debf36319687f224ee1e506/pypropgraph-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be0659cd9f9c76c7789f2634a802e6379e8ac33e9086d854035eeede5c04c232",
          "md5": "9db40139e44779e4bb332ec5eccb7cee",
          "sha256": "9b9ca9d2a7fca6da33fb29f0cd8adb66f486d362eddd11ca94fd88f7d390ecf7"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9db40139e44779e4bb332ec5eccb7cee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12112,
        "upload_time": "2020-10-21T19:43:21",
        "upload_time_iso_8601": "2020-10-21T19:43:21.194593Z",
        "url": "https://files.pythonhosted.org/packages/be/06/59cd9f9c76c7789f2634a802e6379e8ac33e9086d854035eeede5c04c232/pypropgraph-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27870a0853f876e5bfb61ee22be75b94e394fe0626df8e57127135d2e799844e",
          "md5": "2eb3c40b10dffc28ec547784cbefa572",
          "sha256": "5b36f1bdb37d842848eadb9681b6eb2db75e8dc563c160b1a9536d572d0de841"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2eb3c40b10dffc28ec547784cbefa572",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14022,
        "upload_time": "2020-10-21T19:43:22",
        "upload_time_iso_8601": "2020-10-21T19:43:22.633441Z",
        "url": "https://files.pythonhosted.org/packages/27/87/0a0853f876e5bfb61ee22be75b94e394fe0626df8e57127135d2e799844e/pypropgraph-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f1566293e726b1f1cb1ede4ff0ca106c7b2f50024e54e9776f9be388e007115",
          "md5": "732ae8cf5cc53456f43490509eeb3b31",
          "sha256": "1c84dba28b2b3056a79f126c3853edb12777ef63cc31f33be535ffba0f1cb216"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "732ae8cf5cc53456f43490509eeb3b31",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12422,
        "upload_time": "2022-07-06T21:56:38",
        "upload_time_iso_8601": "2022-07-06T21:56:38.531508Z",
        "url": "https://files.pythonhosted.org/packages/5f/15/66293e726b1f1cb1ede4ff0ca106c7b2f50024e54e9776f9be388e007115/pypropgraph-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9714e2344587fac2979e4a0d57a1819d14744e4d5c40894d40eb7e25f661547",
          "md5": "4b97b7cf1b7a531cb8544b1e9e5b4d4b",
          "sha256": "c8dd2c6e223d601edf347bcf96692b6738fb348bd375741c5fe06dec982c7dfc"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4b97b7cf1b7a531cb8544b1e9e5b4d4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14365,
        "upload_time": "2022-07-06T21:56:41",
        "upload_time_iso_8601": "2022-07-06T21:56:41.888164Z",
        "url": "https://files.pythonhosted.org/packages/d9/71/4e2344587fac2979e4a0d57a1819d14744e4d5c40894d40eb7e25f661547/pypropgraph-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "604b4c0d2ece2b877b9bd7411ee4d85d147cb52bd7f313ba60dabb6cdeef1f72",
          "md5": "cd9fe991311f69911dd979e5e35a039e",
          "sha256": "18286e932efeac7fd99801cb211d45a46e202786bfef65a55f17f72e479d3e98"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd9fe991311f69911dd979e5e35a039e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9636,
        "upload_time": "2022-10-25T22:41:00",
        "upload_time_iso_8601": "2022-10-25T22:41:00.601212Z",
        "url": "https://files.pythonhosted.org/packages/60/4b/4c0d2ece2b877b9bd7411ee4d85d147cb52bd7f313ba60dabb6cdeef1f72/pypropgraph-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "318fd012ce8b549e24117b5a744260ed2d5abfbb0968866521dcc70f88b89946",
          "md5": "cd3548aff157971611bbe41aaf8909c7",
          "sha256": "3d4584e41614aae59494da327cfbbe4f87273bcfc536a00b19942156891c615f"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cd3548aff157971611bbe41aaf8909c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11300,
        "upload_time": "2022-10-25T22:41:01",
        "upload_time_iso_8601": "2022-10-25T22:41:01.980761Z",
        "url": "https://files.pythonhosted.org/packages/31/8f/d012ce8b549e24117b5a744260ed2d5abfbb0968866521dcc70f88b89946/pypropgraph-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0de42af09bf79d3ea31c21600d16cc67ae853d626b67656eaedb43a8f876b3a",
          "md5": "8a70950f1a26cb03630000f06c143465",
          "sha256": "0359df36427c9bbf511ae86f329a21a0abae7e00d4a747e9190fd04d4f7173a1"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a70950f1a26cb03630000f06c143465",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12284,
        "upload_time": "2022-10-25T22:51:06",
        "upload_time_iso_8601": "2022-10-25T22:51:06.284557Z",
        "url": "https://files.pythonhosted.org/packages/f0/de/42af09bf79d3ea31c21600d16cc67ae853d626b67656eaedb43a8f876b3a/pypropgraph-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9f79d509be1e1e39120efe7480a8611feffb638ede5741112baa0c223d0afe3",
          "md5": "6df0e37eab3d5560776872da99d4af92",
          "sha256": "05b968e968864d33edbe2ea8ee8eaac62ea58dcee076e4426477807c5663a08b"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6df0e37eab3d5560776872da99d4af92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15159,
        "upload_time": "2022-10-25T22:51:07",
        "upload_time_iso_8601": "2022-10-25T22:51:07.876521Z",
        "url": "https://files.pythonhosted.org/packages/a9/f7/9d509be1e1e39120efe7480a8611feffb638ede5741112baa0c223d0afe3/pypropgraph-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "333c049bdd843d20128afa17db13e962042012ac47dda008ee33336c2426e027",
          "md5": "08d010655c900267323a7cccd6af268c",
          "sha256": "0b30b3533cc14b5747d419a6ce65c116358cd5488d97130ffd7cb988a0b2e8c0"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08d010655c900267323a7cccd6af268c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12296,
        "upload_time": "2022-11-21T18:54:20",
        "upload_time_iso_8601": "2022-11-21T18:54:20.301084Z",
        "url": "https://files.pythonhosted.org/packages/33/3c/049bdd843d20128afa17db13e962042012ac47dda008ee33336c2426e027/pypropgraph-0.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e985143b71737241602e7d25fa2f4569de54261947e823a0bc181ee92eaaff42",
          "md5": "b73f6a9e916e35ec6f9ff3e04bdbdb29",
          "sha256": "d56656c37507c7d9221b4812adf9336591e3fe149c81b0b4d1df17874cbd45fd"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b73f6a9e916e35ec6f9ff3e04bdbdb29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15187,
        "upload_time": "2022-11-21T18:54:22",
        "upload_time_iso_8601": "2022-11-21T18:54:22.532107Z",
        "url": "https://files.pythonhosted.org/packages/e9/85/143b71737241602e7d25fa2f4569de54261947e823a0bc181ee92eaaff42/pypropgraph-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "956cbe33928c5878ca57259fe011a2fab71732687da47caaa9d46288ade6c240",
          "md5": "a5bc6806c8c1a1188cdf206f16405167",
          "sha256": "8236f519430fa85d9c874b4e371a45382f88308b45d894cf5386057e69763176"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5bc6806c8c1a1188cdf206f16405167",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12297,
        "upload_time": "2022-11-21T19:31:52",
        "upload_time_iso_8601": "2022-11-21T19:31:52.958231Z",
        "url": "https://files.pythonhosted.org/packages/95/6c/be33928c5878ca57259fe011a2fab71732687da47caaa9d46288ade6c240/pypropgraph-0.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf80e2e4863473fc99a7dc059c176de3bf45c5066cb87a5bd25206dd3b9bb004",
          "md5": "27792ed25b7554be83ad61f743507ea3",
          "sha256": "a30de3d8f0bedc1d8551f4e4b986acff1c215d40707527e637e13fdcab653c00"
        },
        "downloads": -1,
        "filename": "pypropgraph-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "27792ed25b7554be83ad61f743507ea3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15181,
        "upload_time": "2022-11-21T19:31:54",
        "upload_time_iso_8601": "2022-11-21T19:31:54.730759Z",
        "url": "https://files.pythonhosted.org/packages/cf/80/e2e4863473fc99a7dc059c176de3bf45c5066cb87a5bd25206dd3b9bb004/pypropgraph-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "956cbe33928c5878ca57259fe011a2fab71732687da47caaa9d46288ade6c240",
        "md5": "a5bc6806c8c1a1188cdf206f16405167",
        "sha256": "8236f519430fa85d9c874b4e371a45382f88308b45d894cf5386057e69763176"
      },
      "downloads": -1,
      "filename": "pypropgraph-0.5.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a5bc6806c8c1a1188cdf206f16405167",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12297,
      "upload_time": "2022-11-21T19:31:52",
      "upload_time_iso_8601": "2022-11-21T19:31:52.958231Z",
      "url": "https://files.pythonhosted.org/packages/95/6c/be33928c5878ca57259fe011a2fab71732687da47caaa9d46288ade6c240/pypropgraph-0.5.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf80e2e4863473fc99a7dc059c176de3bf45c5066cb87a5bd25206dd3b9bb004",
        "md5": "27792ed25b7554be83ad61f743507ea3",
        "sha256": "a30de3d8f0bedc1d8551f4e4b986acff1c215d40707527e637e13fdcab653c00"
      },
      "downloads": -1,
      "filename": "pypropgraph-0.5.3.tar.gz",
      "has_sig": false,
      "md5_digest": "27792ed25b7554be83ad61f743507ea3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15181,
      "upload_time": "2022-11-21T19:31:54",
      "upload_time_iso_8601": "2022-11-21T19:31:54.730759Z",
      "url": "https://files.pythonhosted.org/packages/cf/80/e2e4863473fc99a7dc059c176de3bf45c5066cb87a5bd25206dd3b9bb004/pypropgraph-0.5.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}