{
  "info": {
    "author": "VineyS",
    "author_email": "vineypsunu@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# danbot-status\n![travis-ci](https://travis-ci.com/VineyS/danbot-status-py.svg?branch=main)\n[![CodeQL](https://github.com/VineyS/danbot-status-py/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/VineyS/danbot-status-py/actions/workflows/codeql-analysis.yml)\n[![Upload Python Package](https://github.com/VineyS/danbot-status-py/actions/workflows/python-publish.yml/badge.svg)](https://github.com/VineyS/danbot-status-py/actions/workflows/python-publish.yml)\n\nDanBot Status is a module built in python for getting all statistical services used by DanBotHost.\n# Changelog\n- v0.0.1: Initial release\n- v0.0.2: Converted the module to a Asynchronous Package\n- v0.1.1: Added Support for Synchronous and Asynchronous Programming \n- v0.2.0: Rewrote the module to use the new version of the API\n- v0.2.1: Fixed some README mistakes\n\n# Upgrade Module\n`pip install --upgrade danbot-status`\n\n# Installation\n`pip install danbot-status`  --> For Windows\n\n`pip3 install danbot-status`  -->   For Linux\n\n# Usage \n`import danbotstatus`  --> Importing Module in Python\n\n# Classes\ndanbotstatus.SynchronousState()  -->  For Synchronous Coding\n\ndanbotstatus.AsynchronousState()  -->  For Asynchronous Coding\n\n# Errors\ndanbotstatus.APIError()  ->  Thrown when the API is not responding or is down\n\n# Basic Example Of danbotstatus in Asynchronous Environment In Discord Bot (discord.py)\n\n` This method needs the module discord.py `\n```py\nimport discord\nfrom danbotstatus import AsynchronousState()\ndbs = AsynchronousState()\nbot = discord.Client()\n\n@bot.event\nasync def on_ready():\n    print(\"Logged In as \" + bot.user )\n    \n    \n@bot.event\nasync def on_message(message):\n    if message.content == 'check all node status':\n        nodestats = await dbs.fetch_all()\n        await message.channel.send(nodestats)\n        \nbot.run(\"TOKEN\")\n```\n# Basic Example Of danbotstatus in Synchronous Environment In Flask (Flask)\n\n` This method needs the module Flask `\n```py\nfrom flask import Flask\nfrom danbotstatus import SynchronousState\ndbs = SynchronousState()\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n    return {'status': \"alive\"}\n    \n    \n@app.route('/allstats')\ndef nodestats():\n    ns = dbs.fetch_all()\n    return ns\n        \nif __name__ == '__main__':\n    app.run()\n```\n# Basic Functions in the module (SynchronousState)\n*pssst, this is not an example , this just shows the functions the module has*\n```py\nfrom danbotstatus import SynchronousState\ndbhs = danbotstatus.SynchronousState()\nallnodestats = dbhs.fetch_all()   # Gets All Stats\ntime = dbhs.fetch_time()   # Gets the time of the API\nnames = dbhs.fetch_server_names()   # Gets the names of the nodes\nstats = dbhs.fetch_server_stats(\"Server Name\", 3)   # Gets the stats of the specific servers, Accepts 2 Optional Arguements, either the server name or the index positioning of the dictionary\n\nprint(allnodestats)  # This method returns a dictionary\nprint(time)  # This method returns a string\nprint(names)  # This method returns a list\nprint(stats)  # This method returns a dictionary\n```\n# Basic Functions in the module (AsynchronousState)\n*pssst, this is not an example , this just shows the functions the module has*\n```py\nfrom danbotstatus import AsynchronousState\ndbhs = AsynchronousState()\nallnodestats = await dbhs.fetch_all()   # Gets All Stats\ntime = await dbhs.fetch_time()   # Gets the time of the API\nnames = await dbhs.fetch_server_names()   # Gets the names of the nodes\nstats = await dbhs.fetch_server_stats(\"Server Name\", 3)   # Gets the stats of the specific servers, Accepts 2 Optional Arguements, either the server name or the index positioning of the dictionary\n\nprint(allnodestats)  # This method returns a dictionary\nprint(time)  # This method returns a string\nprint(names)  # This method returns a list\nprint(stats)  # This method returns a dictionary\n```\n---\n\nThank You.\n\nModule Built By Viney. Any Queries or Issue, feel free to make an Issue in the issue tab of Github. This project is welcome to receive any contributions by submitting in  PR's\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/VineyS/danbot-status-py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "danbot-status",
    "package_url": "https://pypi.org/project/danbot-status/",
    "platform": null,
    "project_url": "https://pypi.org/project/danbot-status/",
    "project_urls": {
      "Homepage": "https://github.com/VineyS/danbot-status-py"
    },
    "release_url": "https://pypi.org/project/danbot-status/0.2.1/",
    "requires_dist": [
      "aiohttp (<3.8.0,>=3.6.0)",
      "requests (<3.0.0,>=2.22.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Status Of All Services of DanBotHost(DBH)",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14986584,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bd926abf4e6e454f1899f86083d406b14b2f1e799cc3aae72e1257f0fa411f1",
          "md5": "b95e6c911824b97a8281a4b68bfa293f",
          "sha256": "41d8dcafdca5d280e4c38f1ae0bee5368b1459c022dc900d58551f621bd578c4"
        },
        "downloads": -1,
        "filename": "danbot_status-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b95e6c911824b97a8281a4b68bfa293f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6840,
        "upload_time": "2022-01-13T11:30:58",
        "upload_time_iso_8601": "2022-01-13T11:30:58.360299Z",
        "url": "https://files.pythonhosted.org/packages/2b/d9/26abf4e6e454f1899f86083d406b14b2f1e799cc3aae72e1257f0fa411f1/danbot_status-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd51e2b03e5e4ab96792ee7c58464c43719ed6fd64541c5b48cbbf35e92dcca1",
          "md5": "fcdd457ca02dfc79f41fa6c341b6adc4",
          "sha256": "6467b1d4c0a60dbb67c9934a268e36b0cb0fb6758f67ac3f877bc1f2e288b77f"
        },
        "downloads": -1,
        "filename": "danbot-status-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fcdd457ca02dfc79f41fa6c341b6adc4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5254,
        "upload_time": "2022-01-13T11:30:59",
        "upload_time_iso_8601": "2022-01-13T11:30:59.603319Z",
        "url": "https://files.pythonhosted.org/packages/dd/51/e2b03e5e4ab96792ee7c58464c43719ed6fd64541c5b48cbbf35e92dcca1/danbot-status-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d0a9bae567fa2a6e154fc874c7abbcf0282bf67a494d98cb22835ff970b532b",
          "md5": "4fddc8f8a3c3ddf38d16eb3fa5222e39",
          "sha256": "3c1456929d972c1ffe6732c3a704b956a06cffbc6b3cbfb063c6e51d8b9d67e2"
        },
        "downloads": -1,
        "filename": "danbot_status-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4fddc8f8a3c3ddf38d16eb3fa5222e39",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5782,
        "upload_time": "2022-09-04T06:51:31",
        "upload_time_iso_8601": "2022-09-04T06:51:31.985364Z",
        "url": "https://files.pythonhosted.org/packages/2d/0a/9bae567fa2a6e154fc874c7abbcf0282bf67a494d98cb22835ff970b532b/danbot_status-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ebfbec5038c99637fb2261808c5345207d5961a6d23c46fb4dd03dcf89a65c2",
          "md5": "3b45e62646c841d10a3221c07b4cfe1a",
          "sha256": "aec7d185a0d90652eb64dd3cfb75bc3db832c62f9c4cda045d8587db36f0e46f"
        },
        "downloads": -1,
        "filename": "danbot-status-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3b45e62646c841d10a3221c07b4cfe1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4410,
        "upload_time": "2022-09-04T06:51:33",
        "upload_time_iso_8601": "2022-09-04T06:51:33.722299Z",
        "url": "https://files.pythonhosted.org/packages/0e/bf/bec5038c99637fb2261808c5345207d5961a6d23c46fb4dd03dcf89a65c2/danbot-status-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d0a9bae567fa2a6e154fc874c7abbcf0282bf67a494d98cb22835ff970b532b",
        "md5": "4fddc8f8a3c3ddf38d16eb3fa5222e39",
        "sha256": "3c1456929d972c1ffe6732c3a704b956a06cffbc6b3cbfb063c6e51d8b9d67e2"
      },
      "downloads": -1,
      "filename": "danbot_status-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4fddc8f8a3c3ddf38d16eb3fa5222e39",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5782,
      "upload_time": "2022-09-04T06:51:31",
      "upload_time_iso_8601": "2022-09-04T06:51:31.985364Z",
      "url": "https://files.pythonhosted.org/packages/2d/0a/9bae567fa2a6e154fc874c7abbcf0282bf67a494d98cb22835ff970b532b/danbot_status-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ebfbec5038c99637fb2261808c5345207d5961a6d23c46fb4dd03dcf89a65c2",
        "md5": "3b45e62646c841d10a3221c07b4cfe1a",
        "sha256": "aec7d185a0d90652eb64dd3cfb75bc3db832c62f9c4cda045d8587db36f0e46f"
      },
      "downloads": -1,
      "filename": "danbot-status-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3b45e62646c841d10a3221c07b4cfe1a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4410,
      "upload_time": "2022-09-04T06:51:33",
      "upload_time_iso_8601": "2022-09-04T06:51:33.722299Z",
      "url": "https://files.pythonhosted.org/packages/0e/bf/bec5038c99637fb2261808c5345207d5961a6d23c46fb4dd03dcf89a65c2/danbot-status-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}