{
  "info": {
    "author": "Ryan William Maynard Oldford",
    "author_email": "ryan.oldford@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "========================\nCycle Calendar Generator\n========================\n\n\n.. image:: https://img.shields.io/pypi/v/cycle_calendar_generator.svg\n        :target: https://pypi.python.org/pypi/cycle_calendar_generator\n        :alt: PyPI Package Status\n\n.. image:: https://img.shields.io/travis/ROldford/cycle_calendar_generator.svg\n        :target: https://travis-ci.org/ROldford/cycle_calendar_generator\n        :alt: Travis CI Status\n\n.. image:: https://pyup.io/repos/github/ROldford/cycle_calendar_generator/shield.svg\n     :target: https://pyup.io/repos/github/ROldford/cycle_calendar_generator/\n     :alt: Updates\n\n.. image:: https://readthedocs.org/projects/cycle-calendar-generator/badge/?version=latest\n        :target: https://cycle-calendar-generator.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://img.shields.io/badge/python-3.6+-blue.svg\n        :target: https://www.python.org/)\n        :alt: Compatible with Python 3.6+\n\n\n*Generates iCal files for class schedules for schools using an N-day cycle*\n\nIf you're a teacher or a student, you probably have a 6 or 7-day cycle.\nYou'd like to enter your schedule into your calendar, but calendar software doesn't support \"recur every n weekdays\".\nSo you're out of luck, right? That's where Cycle Calendar Generator comes in.\nYou just need to make an Excel file with your school's schedule, and another Excel file for each teacher/student's schedule, and Cycle Calendar Generator does the rest.\n\n\n* Documentation: https://cycle-calendar-generator.readthedocs.io.\n\nInstallation\n------------\n\n        ``$ pip install cycle_calendar_generator``\n\nUsage\n-----\n\n1. Make a \"Schedule Setup\" Excel file\n    a. Filename must be schedule_setup.xlsx\n    b. Has 3 sheets, named \"Period Timing\", \"Cycle Days List\", and \"Yearly Schedule\"\n    c. \"Period Timing\" sheet gives the period name/number, start time, and end time for each period\n    d. \"Cycle Days List\" sheet lists the name/number of each day in the cycle\n    e. \"Yearly Schedule\" sheet lists all dates in the school year and the matching day in the cycle\n    f. Dates and times should be in the standard Excel date/time format\n    g. All other data should be in text format, including numbers.\n    h. See below for examples\n2. Make an Excel file for each user that wants a schedule calendar\n    a. The filename should match the user's name, and will be used to name the output calendar file. (Ex. Eric Idle's Excel file should be named \"Eric Idle.xlsx\", and  will generate \"Eric Idle.ics\")\n    b. Has 1 sheet, named \"User Schedule\", that has the user's usual schedule for a cycle\n    c. All data here should be in text format\n    d. See below for examples\n3. Put all files in any folder\n4. Run the application as follows:\n\n        ``$ cycle_calendar_generator path/to/schedule/files``\n\n5. Schedule iCal files are found in the /output folder under the folder with your input Excel files.\n\n.. _examples:\n\nExamples\n--------\n\n**Period Timing**\n\n+---------------+------------+----------+\n| Period Number | Start Time | End Time |\n+===============+============+==========+\n| 1             | 8:00       | 9:00     |\n+---------------+------------+----------+\n| 2             | 9:00       | 10:00    |\n+---------------+------------+----------+\n| 3             | 10:00      | 11:00    |\n+---------------+------------+----------+\n| 4             | 11:00      | 12:00    |\n+---------------+------------+----------+\n| 5             | 12:00      | 13:00    |\n+---------------+------------+----------+\n\n*Times can be in either 24h or 12h format. \"Period Number\" should be text format, not number.*\n\n**Cycle Days List**\n\n+----+----+----+----+----+----+\n| A1 | B2 | C3 | D4 | E5 | F6 |\n+----+----+----+----+----+----+\n\n*The entries here are the official names for all cycle days. Every cycle day entry in other sheets must match these values.*\n\n**Yearly Schedule**\n\n+---------+-----------+\n| Date    | Cycle Day |\n+---------+-----------+\n| 8/31/18 | A1        |\n+---------+-----------+\n| 9/3/18  | B2        |\n+---------+-----------+\n| 9/4/18  | C3        |\n+---------+-----------+\n| 9/5/18  | D4        |\n+---------+-----------+\n| 9/6/18  | E5        |\n+---------+-----------+\n| 9/7/18  | F6        |\n+---------+-----------+\n\n*Dates can be displayed any way, but must be date format. Entries in the \"Cycle Day\" column must be an official cycle day as defined in Cycle Days List.*\n\n**User Schedule**\n\n+---------------+----------+----------+----------+---------+----------+----------+\n| Period Number | A1       | B2       | C3       | D4      | E5       | F6       |\n+---------------+----------+----------+----------+---------+----------+----------+\n| 1             | Grade 8  |          | Grade 11 |         |          | Grade 8  |\n+---------------+----------+----------+----------+---------+----------+----------+\n| 2             |          | Grade 11 |          |         | Grade 8  |          |\n+---------------+----------+----------+----------+---------+----------+----------+\n| 3             | Lunch    | Lunch    | Lunch    | Lunch   | Lunch    | Lunch    |\n+---------------+----------+----------+----------+---------+----------+----------+\n| 4             | Grade 11 |          |          | Grade 8 |          | Grade 11 |\n+---------------+----------+----------+----------+---------+----------+----------+\n| 5             |          |          | Grade 8  |         | Grade 11 |          |\n+---------------+----------+----------+----------+---------+----------+----------+\n\n*\"Period Number\" should be text format, not number. The \"Cycle Days\" in the top row must be official cycle days as defined in Cycle Days List*\n\nTests\n-----\n\nFor current Python version:\n        ``python3 setup.py test``\n\nFor versions 3.5+\n        ``tox``\n\nIt's recommended to use pyenv_ to install Python versions required by tox.\npyenv can be installed using Homebrew_::\n\n        brew update\n        brew install pyenv\n        pyenv install 3.6.6 3.7.6\n\n.. _pyenv: https://github.com/pyenv/pyenv\n.. _Homebrew: https://brew.sh/\n\nContribute\n----------\n\nContributions are always welcome! For thoughts on features or bug reports see Issues. If you're interested in contributing to this library, see details on doing so in the CONTRIBUTING.rst file in this repository.\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `elgertam/cookiecutter-pipenv`_ project template, based on `audreyr/cookiecutter-pypackage`_.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`elgertam/cookiecutter-pipenv`: https://github.com/elgertam/cookiecutter-pipenv\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\nExcel file reading was made possible by the openpyxl_ package, while iCal file reading and writing uses the ics_ package.\n\n.. _openpyxl: https://bitbucket.org/openpyxl/openpyxl/src\n.. _ics: https://github.com/C4ptainCrunch/ics.py\n\nLicence\n-------\n\n* Free software: GNU General Public License v3\n\n\n=======\nHistory\n=======\n\n0.1.0 (2018-08-09)\n------------------\n\n* First release on PyPI.\n\n0.1.1 - 0.1.8 (2018-10-18 to 10-19)\n-----------------------------------\n\n* Attempts to fix issues with Travis CI's PyPI deployment\n\n0.2.0 (2018-10-19)\n------------------\n\n* Program can now be installed as a Unix-style command line application\n\n1.0.0 (2020-02-25)\n------------------\n\n* No longer works on Python 3.5\n* Dependency update",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ROldford/cycle_calendar_generator",
    "keywords": "cycle_calendar_generator",
    "license": "GNU General Public License v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cycle-calendar-generator",
    "package_url": "https://pypi.org/project/cycle-calendar-generator/",
    "platform": "",
    "project_url": "https://pypi.org/project/cycle-calendar-generator/",
    "project_urls": {
      "Homepage": "https://github.com/ROldford/cycle_calendar_generator"
    },
    "release_url": "https://pypi.org/project/cycle-calendar-generator/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Generates iCal files for class schedules for schools using an N-day cycle",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6705358,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "582d96d027e52fe5ed52bd5719ad55d6dad0ad18fc64b7dabd3ccb8673422d18",
          "md5": "7f12cc5764b6ad9bb89108559a693cd3",
          "sha256": "f7c343b62562294a42947b61667485e995fad257e4ea17f96e1c8b1765c311c0"
        },
        "downloads": -1,
        "filename": "cycle_calendar_generator-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7f12cc5764b6ad9bb89108559a693cd3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37130,
        "upload_time": "2018-10-19T07:57:03",
        "upload_time_iso_8601": "2018-10-19T07:57:03.205597Z",
        "url": "https://files.pythonhosted.org/packages/58/2d/96d027e52fe5ed52bd5719ad55d6dad0ad18fc64b7dabd3ccb8673422d18/cycle_calendar_generator-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07831a802099e793472a93c1af1614565a614b3a48081010fab01f5a534e12d3",
          "md5": "5aac6050e39ac9a1151703828df1cb94",
          "sha256": "94f385329a53361bc611ded17fabdc62886f5a77cffb9d16dd204bf855edb1c7"
        },
        "downloads": -1,
        "filename": "cycle_calendar_generator-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5aac6050e39ac9a1151703828df1cb94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37237,
        "upload_time": "2020-02-26T18:22:01",
        "upload_time_iso_8601": "2020-02-26T18:22:01.634478Z",
        "url": "https://files.pythonhosted.org/packages/07/83/1a802099e793472a93c1af1614565a614b3a48081010fab01f5a534e12d3/cycle_calendar_generator-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "07831a802099e793472a93c1af1614565a614b3a48081010fab01f5a534e12d3",
        "md5": "5aac6050e39ac9a1151703828df1cb94",
        "sha256": "94f385329a53361bc611ded17fabdc62886f5a77cffb9d16dd204bf855edb1c7"
      },
      "downloads": -1,
      "filename": "cycle_calendar_generator-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5aac6050e39ac9a1151703828df1cb94",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 37237,
      "upload_time": "2020-02-26T18:22:01",
      "upload_time_iso_8601": "2020-02-26T18:22:01.634478Z",
      "url": "https://files.pythonhosted.org/packages/07/83/1a802099e793472a93c1af1614565a614b3a48081010fab01f5a534e12d3/cycle_calendar_generator-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}