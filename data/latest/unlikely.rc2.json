{
  "info": {
    "author": "Edderic Ugaddan",
    "author_email": "edderic@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## TODO\n- Make weighting scheme handle a mixture of variable types\n   (ordinal vs. non-ordinal)\n\n  - Implement priors\n       TODO: Problem: When having discrete and continuous\n       distributions, The PDF of continous distributions can be\n       larger than the PMF of discrete distributions, the latter\n       upper-bounded by 1, but the former possibly being greater\n       than 1.\n\n       Possible solution: Can use the PMF of continuous\n       distributions. For a continuous distribution, have x - width\n       and x + width. Subtract the cdf of x-width from cdf of\n       x+width.\n\n       ContinuousUnsampled\n       - pmf(x, width)\n         CDF(x+width) - CDF(x-width)\n\n       ContinuousSampled\n       - pmf(x, width)\n         Count the number of items within (x-width, x+width)\n\n       DiscreteOrdinalSampled\n       - pmf(x, width)\n         Disregard width\n\n       DiscreteNonordinalSampled\n       - pmf(x, width)\n         Disregard width\n\n- Serialize data.\n- Deserialize data.\n- Prevent overflow by computing in log space\n\n- Add tests\n  - Test the case of Bayesian updating.\n    - E.g. one-by-one updating of a Bernoulli distributed data vs. updating the\n      prior with the Binomial full data all at once\n    - They should be the same\n\n\nDONE:\n- Implement model comparison\n- Implement Normal distribution\n- Implement HalfCauchy distribution\n\n## Notes\n\nThe ABC-SMC scheme of Toni et al. involves creating intermediary distributions,\nthat get closer and closer to the true posterior distribution as the distance\ngets closer and closer to 0. In each step of creating intermediary\ndistributions, we are collecting a finite amount of samples. Since we're not\ncollecting an infinite amount, there's a chance that the tail ends of the\ndistribution won't get sampled. Not including an acceptable particle in one\npopulation means that the next population would be missing the tails. The more\npopulations there are, the more likely that we would be undersampling tails.\nHaving a perturbation kernel lets the algorithm sample more from the tails.\nLarger perturbations is beneficial because samples close to the extremes (which\nhave a low probability of being explored) become more likely to be explored.\nHowever, if it's set too large, then we might be putting too much weight to\nthese low probability particles, making the variance of the posterior larger\nthan what it should be.\n\n## Issues:\n\nIntermediate distribution sometimes assigns a lot of weight to highly\nimprobable areas, probably because the weighting scheme gets really close to 0\nin the denominator.\n\nThe weighting scheme is:\n  Prior(x) / sum of each i-th particle's previous weight times the kernel pdf of (perturbed particle given particle i)\n\nUsing a Gaussian kernel, if a particle is proposed that is really far (i.e. low\npdf values) from the accepted particles of the previous generation, then\nthe denominator would be tiny, which would blow up the weight for the perturbed\nparticle.\n\nPossible solution:\n\nUse a Uniform kernel instead. If something is close enough, then we use the PDF\nof it, multiplied by some weight, then add all those up. Less likely to be\nreally tiny?\n\nWe could also add some positive value to the denominator, so that if a\nproposal is made, and all the accepted particles from the previous generation\nare too far from the perturbed proposal, we won't blow up the weight too much.\n\nWhat if the value to add was 1? In that case, we're essentially sampling from the prior.\n\nIf we encounter a perturbed particle that is close enough, then the denominator\nwould be greater than 1, which would downweight said particle a little bit. We\nknow this is a little bit because weights from the previous round are\nnormalized (which are essentially probabilities.) We're multiplying a\nprobability times the kernel value, which is probably going to be tiny. Not\nnecessarily? The kernel value could be pretty high if the distribution is\nnarrow (e.g. Normal distribution with standard deviation 0.1). What if we\nnormalize the densities?\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/edderic/unlikely",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "unlikely",
    "package_url": "https://pypi.org/project/unlikely/",
    "platform": "",
    "project_url": "https://pypi.org/project/unlikely/",
    "project_urls": {
      "Bug Tracker": "https://github.com/edderic/unlikely/issues",
      "Homepage": "https://github.com/edderic/unlikely"
    },
    "release_url": "https://pypi.org/project/unlikely/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Parallelized, Likelihood-free Bayesian Inference",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11677825,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dab9b38a7afd9cea666b07a0ad3ec77fd0c5d999296be5490158298384d41126",
          "md5": "4644a2f6975e3a490a402c3a8272e310",
          "sha256": "b43258f58f8fdfd6dc88075e72b9bd57e8cbe2326073ee91a5b61e35e03500b7"
        },
        "downloads": -1,
        "filename": "unlikely-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4644a2f6975e3a490a402c3a8272e310",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3677,
        "upload_time": "2021-10-09T20:56:08",
        "upload_time_iso_8601": "2021-10-09T20:56:08.487271Z",
        "url": "https://files.pythonhosted.org/packages/da/b9/b38a7afd9cea666b07a0ad3ec77fd0c5d999296be5490158298384d41126/unlikely-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "989d9eecae56ee44837b247d7eaf977a1c818abcba5633551324318aeaed5f15",
          "md5": "c873ef4fa55658ce4ffd0e61879066d8",
          "sha256": "cfec522c37a0768f7896a93ffe45ca26faeee3234aa15505ccb33177c26d269d"
        },
        "downloads": -1,
        "filename": "unlikely-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c873ef4fa55658ce4ffd0e61879066d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3550,
        "upload_time": "2021-10-09T20:56:09",
        "upload_time_iso_8601": "2021-10-09T20:56:09.851515Z",
        "url": "https://files.pythonhosted.org/packages/98/9d/9eecae56ee44837b247d7eaf977a1c818abcba5633551324318aeaed5f15/unlikely-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a40eb9dbb2d3c64d0431967226aad08bd72f7e03487894b78e1f80497c7fa9f1",
          "md5": "9de1f37b94da76eda08865dac44b6391",
          "sha256": "bbb0eba828d3f9329d2306a55871ab2550b8c11e7a1c908c4d5f8084ae9fd609"
        },
        "downloads": -1,
        "filename": "unlikely-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9de1f37b94da76eda08865dac44b6391",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3675,
        "upload_time": "2021-10-10T01:09:35",
        "upload_time_iso_8601": "2021-10-10T01:09:35.429967Z",
        "url": "https://files.pythonhosted.org/packages/a4/0e/b9dbb2d3c64d0431967226aad08bd72f7e03487894b78e1f80497c7fa9f1/unlikely-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43b4bdae3fdd69d1a0bee8f57a75366ef206f96af6114d6205b1f16e26ee2543",
          "md5": "c304cefc748686ed3e2defd30c2b3681",
          "sha256": "2f9514820ea1c264ff8b53f899cffacbf98422869270eb8bb067fd28a52f073c"
        },
        "downloads": -1,
        "filename": "unlikely-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c304cefc748686ed3e2defd30c2b3681",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3676,
        "upload_time": "2021-10-10T01:09:36",
        "upload_time_iso_8601": "2021-10-10T01:09:36.870363Z",
        "url": "https://files.pythonhosted.org/packages/43/b4/bdae3fdd69d1a0bee8f57a75366ef206f96af6114d6205b1f16e26ee2543/unlikely-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a40eb9dbb2d3c64d0431967226aad08bd72f7e03487894b78e1f80497c7fa9f1",
        "md5": "9de1f37b94da76eda08865dac44b6391",
        "sha256": "bbb0eba828d3f9329d2306a55871ab2550b8c11e7a1c908c4d5f8084ae9fd609"
      },
      "downloads": -1,
      "filename": "unlikely-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9de1f37b94da76eda08865dac44b6391",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 3675,
      "upload_time": "2021-10-10T01:09:35",
      "upload_time_iso_8601": "2021-10-10T01:09:35.429967Z",
      "url": "https://files.pythonhosted.org/packages/a4/0e/b9dbb2d3c64d0431967226aad08bd72f7e03487894b78e1f80497c7fa9f1/unlikely-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43b4bdae3fdd69d1a0bee8f57a75366ef206f96af6114d6205b1f16e26ee2543",
        "md5": "c304cefc748686ed3e2defd30c2b3681",
        "sha256": "2f9514820ea1c264ff8b53f899cffacbf98422869270eb8bb067fd28a52f073c"
      },
      "downloads": -1,
      "filename": "unlikely-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c304cefc748686ed3e2defd30c2b3681",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3676,
      "upload_time": "2021-10-10T01:09:36",
      "upload_time_iso_8601": "2021-10-10T01:09:36.870363Z",
      "url": "https://files.pythonhosted.org/packages/43/b4/bdae3fdd69d1a0bee8f57a75366ef206f96af6114d6205b1f16e26ee2543/unlikely-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}