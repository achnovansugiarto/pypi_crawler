{
  "info": {
    "author": "",
    "author_email": "kegnh <william@kegnh.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "cellmachine [[source]](https://github.com/itskegnh/cellmachine/blob/master/src/cellmachine/__init__.py)\n===========\n<img src=\"https://img.shields.io/pypi/pyversions/cellmachine\"></img> <img src=\"https://img.shields.io/pypi/v/cellmachine?color=blue\"></img>\n\nKey Features\n------------\n - Import and export [these level codes](#supported-code-formats).\n - Read and modify levels with [these cells](#supported-cells).\n\nInstallation\n------------\n**[Python 3.7+](https://www.python.org/downloads/) is required**\n```sh\n# MacOS / Linux (via Terminal)\npython3 -m pip install -U cellmachine\n\n# Windows (via CMD Prompt)\npy -3 -m pip install -U cellmachine\n```\n\nQuick Examples\n--------------\n```py\nimport cellmachine as cm\nlevel = cm.Level.from_code(\"...\")\nprint(level.name) # display the level's name attribute.\n```\n\n---\n## BorderType\n> A class that represents a border type.\n\n| Attributes |\n| ---------- |\n| [Stop](#bordertype-stop-source) |\n| [Wrap](#bordertype-wrap-source) |\n| [Delete](#bordertype-delete-source) |\n| [Flip](#bordertype-flip-source) |\n\n---\n### `BorderType` Stop [[source]]()\n> Represents the 'Stop' border type. The border acts like a wall, Immovable.\n\n**Type:**\n - [int](https://docs.python.org/3/library/functions.html#int)\n\n### `BorderType` Wrap [[source]]()\n> Represents the 'Wrap' border type. The border acts like the corresponding cell on the other side of the level.\n\n**Type:**\n - [int](https://docs.python.org/3/library/functions.html#int)\n\n### `BorderType` Delete [[source]]()\n> Represents the 'Delete' border type. The border acts like a trash cell, any cells pushed into it are destroyed.\n\n**Type:**\n - [int](https://docs.python.org/3/library/functions.html#int)\n\n### `BorderType` Flip [[source]]()\n> Represents the 'Flip' border type. The border acts like a mirror, any cells pushed into it are flipped.\n\n**Type:**\n - [int](https://docs.python.org/3/library/functions.html#int)\n---\n## Level\n\n| Attributes | Methods | Subclasses |\n| ---------- | ------- | - |\n| [border](#level-border-source) | [from_code](#level-fromcode-source) | [LevelSize](#level-levelsize-source) |\n| [name](#level-name-source) | |\n| [text](#level-text-source) | |\n\n---\n\n### `Level` border [[source]]()\n> The border type of the level.\n\n**Type:**\n - [BorderType](#bordertype)\n\n### `Level` name [[source]]()\n> The name of the level. Shown in the level editor.\n\n**Type:**\n - [str](https://docs.python.org/3/library/functions.html#func-str)\n\n### `Level` text [[source]]()\n> The text of the level. Text to appear while in play / editor mode.\n\n**Type:**\n - [str](https://docs.python.org/3/library/functions.html#func-str)\n\n---\n\n### `Level` from_code [[source]]()\n**Parameters:**\n - `code` (*[str](https://docs.python.org/3/library/functions.html#func-str)*) - The level code string. [Supported Formats](#supported-code-formats)\n\n**Returns:**\n - `Level` (*[Level](#level)*)\n\n---\n\n### `Level` LevelSize [[source]]()\n> A class to represent a level's size.\n\n| Attributes |\n| ---------- |\n| [width](#levellevelsize-width-source) |\n| [height](#levellevelsize-height-source) |\n| [size](#levellevelsize-size-source) |\n| [x](#levellevelsize-x-source) |\n| [y](#levellevelsize-y-source) |\n| [area](#levellevelsize-area-source) |\n\n---\n\n### `Level.LevelSize` width [[source]]()\n> The width of the level.\n\n**Type:**\n - [int](https://docs.python.org/3/library/functions.html#int)\n\n### `Level.LevelSize` height [[source]]()\n> The height of the level.\n\n**Type:**\n - [int](https://docs.python.org/3/library/functions.html#int)\n\n### `Level.LevelSize` size [[source]]()\n> The size of the level.\n\n**Type:**\n - [tuple](https://docs.python.org/3/library/functions.html#func-tuple)\n\n### `Level.LevelSize` x [[source]]()\n> Alias for [width](#levellevelsize-width-source).\n\n### `Level.LevelSize` y [[source]]()\n> Alias for [height](#levellevelsize-height-source).\n\n### `Level.LevelSize` area [[source]]()\n> The area of the level. (width * height)\n\n**Type:**\n - [int](https://docs.python.org/3/library/functions.html#int)\n\n---\n\n## Other\n\n### Supported Code Formats\nThe currently supported codes are:\n| Name | Remake | Latest | \n| - | - | - |\n| V1 | [Mystic Mod](https://mystic-mod.com/) | ⛔️ |\n| V2 | [Mystic Mod](https://mystic-mod.com/) | ⛔️ |\n| V3 | [Mystic Mod](https://mystic-mod.com/) | ✅ |\n\n---\n\n### Supported Cells\n| Texture | Name | Description | Mobile |\n| - | - | - | - |\n| <img src=\"./images/generator.png\"></img> | Generator | Duplicates the cell behind it to the front, if the cell infront is empty or mobile. | ✅ |\n| <img src=\"./images/CW_rotator.png\"></img> | Clockwise Rotator | Rotates all neighbour cells clockwise that are mobile. | ✅ |\n| <img src=\"./images/CCW_rotator.png\"></img> | Counter-clockwise Rotator | Rotates all neighbour cells counter-clockwise that are mobile. | ✅ |\n| <img src=\"./images/mover.png\"></img> | Mover | Moves in the direction its facing, pushes mobile cells. | ✅ |\n| <img src=\"./images/slide.png\"></img> | Slide | Is only mobile in the direction of the parrallel lines. | ❎ |\n| <img src=\"./images/push.png\"></img> | Push | Mobile in all directions. | ✅ |\n| <img src=\"./images/wall.png\"></img> | Wall | Immobile in all directions. Cannot be rotated. | ⛔️ |\n| <img src=\"./images/enemy.png\"></img> | Enemy | When a cell is moved into the same location as an enemy cell, both cells will be destroyed. | ⛔️ |\n| <img src=\"./images/trash.png\"></img> | Trash | Destroys any cell pushed into it. | ⛔️ |\n| <img src=\"./images/0.png\"></img> | Placeable | The only \"cell\" which can share a space with another cell. Only cells marked with this can be moved in 'Play' mode. | ⛔️ |\n---\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cellmachine",
    "package_url": "https://pypi.org/project/cellmachine/",
    "platform": null,
    "project_url": "https://pypi.org/project/cellmachine/",
    "project_urls": {
      "Bug Tracker": "https://github.com/itskegnh/cellmachine/issues",
      "Homepage": "https://github.com/itskegnh/cellmachine"
    },
    "release_url": "https://pypi.org/project/cellmachine/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A python library to help with cell machine development",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15089669,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da05ef3789f5fd4121bd6a99176f178745cf05517525ebc5868d06af639ea538",
          "md5": "8626996247eadc4e5d643e8973384d9d",
          "sha256": "60f51452b77bf5012144200d3efcfc0b3dd6b21e2727b9d13be39ad607bd1919"
        },
        "downloads": -1,
        "filename": "cellmachine-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8626996247eadc4e5d643e8973384d9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13757,
        "upload_time": "2022-06-21T02:24:00",
        "upload_time_iso_8601": "2022-06-21T02:24:00.237173Z",
        "url": "https://files.pythonhosted.org/packages/da/05/ef3789f5fd4121bd6a99176f178745cf05517525ebc5868d06af639ea538/cellmachine-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79874c780525a58880590ed07555f903f2a7d71c1818888541fe9ec78ca8c7b9",
          "md5": "1abf3a8312127a68de527423bd87143e",
          "sha256": "781f9e3d14df40ae9fd0f82ba3c62b42287347c0db3827ff51f1b061d6fcb44a"
        },
        "downloads": -1,
        "filename": "cellmachine-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1abf3a8312127a68de527423bd87143e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13638,
        "upload_time": "2022-06-21T02:24:02",
        "upload_time_iso_8601": "2022-06-21T02:24:02.196971Z",
        "url": "https://files.pythonhosted.org/packages/79/87/4c780525a58880590ed07555f903f2a7d71c1818888541fe9ec78ca8c7b9/cellmachine-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "deb058d76e08c4af9743975261b6190c8db1d2ffc53ab5ae3bc3d53baf7c5e7e",
          "md5": "9d2ef7474839b20e806c5787dfc54f64",
          "sha256": "4fed8a1fa738baa693e043aabec0c2a59943781d7ef0bb9d933b78fa609407e0"
        },
        "downloads": -1,
        "filename": "cellmachine-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d2ef7474839b20e806c5787dfc54f64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16569,
        "upload_time": "2022-06-21T14:45:40",
        "upload_time_iso_8601": "2022-06-21T14:45:40.081684Z",
        "url": "https://files.pythonhosted.org/packages/de/b0/58d76e08c4af9743975261b6190c8db1d2ffc53ab5ae3bc3d53baf7c5e7e/cellmachine-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "405751fc0011c20a0dc031503c8fb69672fde1a4906cbc73655e05194481d031",
          "md5": "e3be8575aa60f3d5d08fed8d34c8055f",
          "sha256": "61b2de894a2b178d36509237d29d668412bd4dc6603320e673514d98c35dc7aa"
        },
        "downloads": -1,
        "filename": "cellmachine-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e3be8575aa60f3d5d08fed8d34c8055f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16355,
        "upload_time": "2022-06-21T14:45:42",
        "upload_time_iso_8601": "2022-06-21T14:45:42.113200Z",
        "url": "https://files.pythonhosted.org/packages/40/57/51fc0011c20a0dc031503c8fb69672fde1a4906cbc73655e05194481d031/cellmachine-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "deb058d76e08c4af9743975261b6190c8db1d2ffc53ab5ae3bc3d53baf7c5e7e",
        "md5": "9d2ef7474839b20e806c5787dfc54f64",
        "sha256": "4fed8a1fa738baa693e043aabec0c2a59943781d7ef0bb9d933b78fa609407e0"
      },
      "downloads": -1,
      "filename": "cellmachine-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9d2ef7474839b20e806c5787dfc54f64",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 16569,
      "upload_time": "2022-06-21T14:45:40",
      "upload_time_iso_8601": "2022-06-21T14:45:40.081684Z",
      "url": "https://files.pythonhosted.org/packages/de/b0/58d76e08c4af9743975261b6190c8db1d2ffc53ab5ae3bc3d53baf7c5e7e/cellmachine-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "405751fc0011c20a0dc031503c8fb69672fde1a4906cbc73655e05194481d031",
        "md5": "e3be8575aa60f3d5d08fed8d34c8055f",
        "sha256": "61b2de894a2b178d36509237d29d668412bd4dc6603320e673514d98c35dc7aa"
      },
      "downloads": -1,
      "filename": "cellmachine-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e3be8575aa60f3d5d08fed8d34c8055f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 16355,
      "upload_time": "2022-06-21T14:45:42",
      "upload_time_iso_8601": "2022-06-21T14:45:42.113200Z",
      "url": "https://files.pythonhosted.org/packages/40/57/51fc0011c20a0dc031503c8fb69672fde1a4906cbc73655e05194481d031/cellmachine-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}