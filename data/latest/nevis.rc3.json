{
  "info": {
    "author": "The Where Is Ben Nevis team",
    "author_email": "michael.clerx@nottingham.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "# Where is Ben Nevis?\n\n\"Where is Ben Nevis\" is a fun(?) project which presents the landscape of Great Britain (GB) as a testbed for numerical optimisation and sampling methods.\nIts main component is a Python module called `nevis`, which can download height data from the Ordnance Survey, process it to make it more suitable for optimisation, and provide interpolating functions so that it can be treated as a continuous (but not smooth) real-valued function.\n\n## Installation\n\nPython 3.6 or newer is required.\n\nTo install from the [Python Package Index (PyPI)](https://pypi.org/project/nevis/), use:\n```\npip install nevis\n```\n\nTo install the optional `convertbng` module at the same time, use:\n```\npip install nevis[extras]\n```\nThis will make conversion from points in the data set to longitude and lattitude more accurate.\n\nDevelopers may wish to skip PyPI installation, clone the [GitHub repository](https://github.com/CardiacModelling/BenNevis), and install from there instead.\nInstructions for this are provided in [CONTRIBUTING.md](https://github.com/CardiacModelling/BenNevis/blob/main/CONTRIBUTING.md).\n\nNext, the \"OS Terrain 50\" data set needs to be downloaded from from the Ordnance Survey website (see the \"Data set\" section below).\nThis is achieved using:\n```\nimport nevis\nnevis.download_os_terrain_50()\n```\nBy default, the heights data is installed into `~/nevis-data`, for example `/home/michael/nevis-data` on a Linux system or `C:\\Users\\michael\\nevis-data` on Windows.\nThis installation path can be changed by specifying an alternative directory in the environment variable `NEVIS_PATH` before running `download_os_terrain_50()`.\n\nNote that OS Terrain 50 is not part of `nevis` or \"Where is Ben Nevis\", and comes with its own license.\nSee [LICENSE.md](https://github.com/CardiacModelling/BenNevis/blob/main/LICENSE.md) for details.\n\nTo check that the installation was succesfull, you can plot a height map of GB:\n\n```\n# Import nevis\nimport nevis\n\n# Download the data (you can skip this step after the first run!)\nnevis.download_os_terrain_50()\n\n# Create and store a figure\nnevis.write_test_figure('gb-small.png')\n```\n\nThis should create a file (in your working directory) called `gb-small.png`:\n\n![Downscaled map of GB](https://github.com/CardiacModelling/BenNevis/blob/main/gb-small.png)\n\n## Usage\n\nDetailed usage examples will eventually be provided in the [examples](https://github.com/CardiacModelling/BenNevis/tree/main/examples) directory.\nFor the time being, please see [fit.py](https://github.com/CardiacModelling/BenNevis/blob/main/fit.py) for an example.\n\nAn example of its output is given below:\n```\n\n                |>          \n Starting Ben   |   Nevis   \n               / \\    Local\n            /\\/---\\     0.0.4\n           /---    \\/\\      \n        /\\/   /\\   /  \\     \n     /\\/  \\  /  \\_/    \\    \n    /      \\/           \\   \nMinimising error measure\nUsing Covariance Matrix Adaptation Evolution Strategy (CMA-ES)\nRunning in sequential mode.\nPopulation size: 100\nIter. Eval.  Best      Current   Time m:s\n0     100    -424.4599 -424.4599   0:00.1\n1     200    -609.9036 -609.9036   0:00.1\n2     300    -609.9036 -555.6289   0:00.2\n3     400    -759.5307 -759.5307   0:00.2\n20    2100   -951.8221 -740.9721   0:00.4\n40    4100   -1268.672 -1257.865   0:00.7\n60    6100   -1308.976 -1308.976   0:01.0\n80    8100   -1309.1   -1309.1     0:01.3\n100   10100  -1309.1   -1309.1     0:01.6\n120   12100  -1309.1   -1309.1     0:01.9\n140   14100  -1309.1   -1309.1     0:02.1\n160   16100  -1309.1   -1309.1     0:02.2\n168   16800  -1309.1   -1309.1     0:02.3\nHalting: No significant change for 100 iterations.\n\nSaving figure to results/local-map-full.png.\nSaving figure to results/local-map-zoom.png.\nSaving figure to results/local-line-plot.png.\n\nCongratulations!\nYou landed at an altitude of 1309m.\n  https://opentopomap.org/#marker=15/57.07019/-3.669487\nYou are 31m from the nearest named hill top, \"Ben Macdui\",\n  ranked the 2d heighest in GB.\n  http://hillsummits.org.uk/htm_summit/518.htm\n```\n\n### API Documentation\n\nProper API documentation is still on the [to-do list](https://github.com/CardiacModelling/BenNevis/issues/47).\nHowever, the API is quite small.\nThe main functions are `linear_interpolant` and `plot`.\n\nA full list follows below:\n\n- British national grid utilities (see `_bng.py`):\n  - `ben` Returns grid coordinates for Ben Nevis.\n  - `Coords` Represents grid coordinates and can convert to various forms.\n  - `dimensions` Returns the physical dimensions (in meters) of the grid.\n  - `fen` Returns grid coordinates for Holme Fen, the lowest point (inland).\n  - `Hill` Represents a hill from the hills database.\n  - `pub` Returns grid coordinates for a random pub, selected from a very short list.\n  - `squares` Returns the coordinates of major BNG squares.\n- OS Terrain 50 loading methods (see `_os_terrain_50.py`):\n  - `DataNotFoundError` An error raised if the data was not downloaded or can't be found.\n  - `download_os_terrain_50` The method to download and unpack the data. Only needs to be run once.\n  - `gb` Loads and returns the heights data for GB.\n  - `spacing` returns the physical distance (in meters) between the points returned by `gb`.\n- Interpolants (see `_interpolation.py`)\n  - `linear_interpolant` Returns a linear interpolant over the GB height data.\n  - `spline` Returns a spline defined over the GB height data.\n- Plotting (see `_plot.py`)\n  - `plot` Creates a plot of a map, with optional labels etc.\n  - `plot_line` Creates a plot of the height profile between two points.\n  - `png_bytes` Turns a matplotlib figure into a `bytes` string.\n  - `save_plot` Stores a plot and checks its size. Less paranoid people can use `fig.savefig()` instead.\n- Various (see `_util.py` and `__init__.py`)\n  - `howdy` Prints some old-school ascii art including the version number.\n  - `Timer` Times and formats intervals.\n  - `write_test_figure` Loads the data and writes a test figure to disk.\n\n## Data set\n\nHeight information is from the [OS Terrain 50](https://www.ordnancesurvey.co.uk/business-government/products/terrain-50) data set made available by the UK's Ordnance Survey.\n\nThe data is divided into squares indicated with a two letter code, and several data files per square.\nEach data file, however, contains its absolute \"eastings\" and \"northings\" and so we can ignore the letter codes.\nEastings and northings are defined by the \"National Grid\", or [OSGB36](https://en.wikipedia.org/wiki/Ordnance_Survey_National_Grid).\nIn easier terms, they are x and y coordinates, in meters, relative to the bottom-left point of the grid (which is the bottom left of the square \"SV\", which contains the Isles of Scilly).\n\nAs an example, the header from the NN17 file is:\n\n```\nncols 200\nnrows 200\nxllcorner 210000\nyllcorner 770000\ncellsize 50\n```\n\nHere ``ncols`` and ``nrows`` indicate the number of grid points in the file, the Lower Left corner of the data in the file is given by `xllcorner` and `yllcorner`, and the distance between any two data points is given as `cellsize`.\nIn the OS Terrain 50 data set, the cellsize is always 50 (giving it its name).\nThere is a more accurate OS Terrain 5 set that costs money.\n\nAccording to [Wikipedia](https://en.wikipedia.org/wiki/Ordnance_Survey_National_Grid#Grid_digits), the approximate coordinates for Ben Nevis are 216600, 771200 (which is in the NN17 square).\n\nAn easy way to find places on the grid is with https://britishnationalgrid.uk.\nAnother nice map with BNG coordinates is https://explore.osmaps.com.\nA a great map without BNG coordinates can be found at https://opentopomap.org.\n\n### The sea\n\nThe sea is a bit messy in these files, as the values depend on mean sea level in each 10x10 km^2 area (OS Tile) relative to OS datum (0m) level [which is mean sea level in Newlyn, Cornwall](https://en.wikipedia.org/wiki/Ordnance_datum).\n\n### Hill tops\n\nNames of hill and mountain tops are taken from [The Database of British and Irish Hills v17.2](http://www.hills-database.co.uk), which is made available under a CC-BY license.\nA greatly reduced list, based on this database, is included in `nevis`.\nPlease see [LICENSE.md](https://github.com/CardiacModelling/BenNevis/blob/main/LICENSE.md) for the licensing information.\n\n### Lattitude and longitude üêáüï≥Ô∏è\n\nWhat about longitude (east-west) and lattitude (north-south)?\nThese are defined, it seems, by [WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System#WGS84), although there is a Europe-specific version called ETRS89 which \"for most purposes ... can be considered equivalent to WGS84\" ([\"Transformations and OSGM15 User Guide\"](https://www.ordnancesurvey.co.uk/business-government/tools-support/os-net/for-developers)).\nTransforming from national grid coordinates to longitude and lattitude is hard, and the Ordnance Survey have released a thing called [OSTN15](https://www.ordnancesurvey.co.uk/business-government/tools-support/os-net/for-developers) to do this.\nAlthough this still seems to result in x, y coordinates, not degrees.\nLuckily, somebody's [made a tool for it](https://github.com/urschrei/convertbng).\nUnfortunately, some people have issues installing this, so that we rely on a [less accurate fallback](https://github.com/MichaelClerx/bnglonlat) for the time being.\nIf you can, please manually install `convertbng` too (BenNevis will try using this first, before switching to `bnglonglat`).\n\n### Interpolation\n\nTo get heights for arbitrary points, we need to interpolate.\nBy default, we use a linear interpolant.\nWe also experimented with a scipy [RectBiVariateSpline](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.RectBivariateSpline.html).\nThis takes some time (~30 seconds on a fast machine) and uses considerable memory (~3GB).\nMost importantly, the spline shows some very serious (and unrealistic) artefacts near high gradients (e.g. at the sea side), so that the linear interpolation seems the way to go for now.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CardiacModelling/BenNevis",
    "keywords": "",
    "license": "BSD 3-clause license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nevis",
    "package_url": "https://pypi.org/project/nevis/",
    "platform": null,
    "project_url": "https://pypi.org/project/nevis/",
    "project_urls": {
      "Bug Tracker": "https://github.com/CardiacModelling/BenNevis/issues",
      "Homepage": "https://github.com/CardiacModelling/BenNevis",
      "Source Code": "https://github.com/CardiacModelling/BenNevis"
    },
    "release_url": "https://pypi.org/project/nevis/0.0.5/",
    "requires_dist": [
      "bnglonlat",
      "matplotlib (>=1.5)",
      "numpy",
      "scipy",
      "setuptools",
      "zipfile-deflate64",
      "flake8 (>=3) ; extra == 'dev'",
      "convertbng ; extra == 'extras'",
      "pillow ; extra == 'extras'"
    ],
    "requires_python": "",
    "summary": "Presents the landscape of Great Britain as a testbed for optimisation and sampling methods.",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14290420,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6955d92b0ac00f567b182a1a486bb9f61c001bc1a66e2213603af095123c87e",
          "md5": "d464bca7255420b13814ea790f4d833c",
          "sha256": "a103bb51a2ff50882defc319aea79d7ea7683e930e3f87ee18c96864e3e495e2"
        },
        "downloads": -1,
        "filename": "nevis-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d464bca7255420b13814ea790f4d833c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24628,
        "upload_time": "2022-06-29T21:05:53",
        "upload_time_iso_8601": "2022-06-29T21:05:53.315171Z",
        "url": "https://files.pythonhosted.org/packages/f6/95/5d92b0ac00f567b182a1a486bb9f61c001bc1a66e2213603af095123c87e/nevis-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89e980ad0c3c468c213f354423e311ee6cb19328e88d326631f214c8cde463ab",
          "md5": "fb69a81a99ae545279f06afc6791dabf",
          "sha256": "00e0a698bf6bb2512c9bf26ef08a724fabd25e37220c131dc826e663f4b81bcf"
        },
        "downloads": -1,
        "filename": "nevis-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fb69a81a99ae545279f06afc6791dabf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26202,
        "upload_time": "2022-06-29T21:05:55",
        "upload_time_iso_8601": "2022-06-29T21:05:55.477571Z",
        "url": "https://files.pythonhosted.org/packages/89/e9/80ad0c3c468c213f354423e311ee6cb19328e88d326631f214c8cde463ab/nevis-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "426f24d332fa8509a693f2e4f64fc1f8aa008e9744c66df9a0c7f3bdc1f90f1f",
          "md5": "ee94b8e6dae8c2f92703300742f6a47a",
          "sha256": "43b60ba674c183b702089af5e786f28ee7da315139cd3394e3efea0001018ab1"
        },
        "downloads": -1,
        "filename": "nevis-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee94b8e6dae8c2f92703300742f6a47a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 455806,
        "upload_time": "2022-06-29T21:09:30",
        "upload_time_iso_8601": "2022-06-29T21:09:30.308918Z",
        "url": "https://files.pythonhosted.org/packages/42/6f/24d332fa8509a693f2e4f64fc1f8aa008e9744c66df9a0c7f3bdc1f90f1f/nevis-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0813d404df6b2c4f349573d359aa63b23c08acb99bbdfbd68d55152b5dc7685",
          "md5": "2f2ec3dd447ba56ee71340bacf44def2",
          "sha256": "5b49bf62cb58d2056a5f4fdd1c2bb2aa057e411ff7f3a5524f73a2b55190440c"
        },
        "downloads": -1,
        "filename": "nevis-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2f2ec3dd447ba56ee71340bacf44def2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 460295,
        "upload_time": "2022-06-29T21:09:35",
        "upload_time_iso_8601": "2022-06-29T21:09:35.533130Z",
        "url": "https://files.pythonhosted.org/packages/c0/81/3d404df6b2c4f349573d359aa63b23c08acb99bbdfbd68d55152b5dc7685/nevis-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d240ddfc1073980e2d571818c29d7ffb0a69fa398c16bb5a3b90df4598fdc82d",
          "md5": "2787dc66030e9a9a5524f7bc9ab7c6c8",
          "sha256": "260cb42e694de6b0fdf23540a3e8df27d32a31ac6643853b74075b081af0cef4"
        },
        "downloads": -1,
        "filename": "nevis-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2787dc66030e9a9a5524f7bc9ab7c6c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 456845,
        "upload_time": "2022-06-29T23:52:18",
        "upload_time_iso_8601": "2022-06-29T23:52:18.041997Z",
        "url": "https://files.pythonhosted.org/packages/d2/40/ddfc1073980e2d571818c29d7ffb0a69fa398c16bb5a3b90df4598fdc82d/nevis-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "994d71b1a28bfdb53634cc7051da7c0d02df3a49ccaad44af28f0586433c9a90",
          "md5": "311f869e8f51270091aafbf418551875",
          "sha256": "c46d66a665c484df1ff0e280c590e6b331939c8d75b57ae0404c17bc8c7216f9"
        },
        "downloads": -1,
        "filename": "nevis-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "311f869e8f51270091aafbf418551875",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 462428,
        "upload_time": "2022-06-29T23:52:22",
        "upload_time_iso_8601": "2022-06-29T23:52:22.012967Z",
        "url": "https://files.pythonhosted.org/packages/99/4d/71b1a28bfdb53634cc7051da7c0d02df3a49ccaad44af28f0586433c9a90/nevis-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d240ddfc1073980e2d571818c29d7ffb0a69fa398c16bb5a3b90df4598fdc82d",
        "md5": "2787dc66030e9a9a5524f7bc9ab7c6c8",
        "sha256": "260cb42e694de6b0fdf23540a3e8df27d32a31ac6643853b74075b081af0cef4"
      },
      "downloads": -1,
      "filename": "nevis-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2787dc66030e9a9a5524f7bc9ab7c6c8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 456845,
      "upload_time": "2022-06-29T23:52:18",
      "upload_time_iso_8601": "2022-06-29T23:52:18.041997Z",
      "url": "https://files.pythonhosted.org/packages/d2/40/ddfc1073980e2d571818c29d7ffb0a69fa398c16bb5a3b90df4598fdc82d/nevis-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "994d71b1a28bfdb53634cc7051da7c0d02df3a49ccaad44af28f0586433c9a90",
        "md5": "311f869e8f51270091aafbf418551875",
        "sha256": "c46d66a665c484df1ff0e280c590e6b331939c8d75b57ae0404c17bc8c7216f9"
      },
      "downloads": -1,
      "filename": "nevis-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "311f869e8f51270091aafbf418551875",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 462428,
      "upload_time": "2022-06-29T23:52:22",
      "upload_time_iso_8601": "2022-06-29T23:52:22.012967Z",
      "url": "https://files.pythonhosted.org/packages/99/4d/71b1a28bfdb53634cc7051da7c0d02df3a49ccaad44af28f0586433c9a90/nevis-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}