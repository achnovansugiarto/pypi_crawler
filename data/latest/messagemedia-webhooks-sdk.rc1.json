{
  "info": {
    "author": "MessageMedia Developers",
    "author_email": "developers@messagemedia.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "        ## How to Build\r\r\n        \r\r\n        \r\r\n        You must have Python ```2 >=2.7.9``` or Python ```3 >=3.4``` installed on your system to install and run this SDK. This SDK package depends on other Python packages like nose, jsonpickle etc. \r\r\n        These dependencies are defined in the ```requirements.txt``` file that comes with the SDK.\r\r\n        To resolve these dependencies, you can use the PIP Dependency manager. Install it by following steps at [https://pip.pypa.io/en/stable/installing/](https://pip.pypa.io/en/stable/installing/).\r\r\n        \r\r\n        Python and PIP executables should be defined in your PATH. Open command prompt and type ```pip --version```.\r\r\n        This should display the version of the PIP Dependency Manager installed if your installation was successful and the paths are properly defined.\r\r\n        \r\r\n        * Using command line, navigate to the directory containing the generated files (including ```requirements.txt```) for the SDK.\r\r\n        * Run the command ```pip install -r requirements.txt```. This should install all the required dependencies.\r\r\n        \r\r\n        ![Building SDK - Step 1](https://apidocs.io/illustration/python?step=installDependencies&workspaceFolder=MessageMediaWebhooks-Python)\r\r\n        \r\r\n        \r\r\n        ## How to Use\r\r\n        \r\r\n        The following section explains how to use the MessageMediaWebhooks SDK package in a new project.\r\r\n        \r\r\n        ### 1. Open Project in an IDE\r\r\n        \r\r\n        Open up a Python IDE like PyCharm. The basic workflow presented here is also applicable if you prefer using a different editor or IDE.\r\r\n        \r\r\n        ![Open project in PyCharm - Step 1](https://apidocs.io/illustration/python?step=pyCharm)\r\r\n        \r\r\n        Click on ```Open``` in PyCharm to browse to your generated SDK directory and then click ```OK```.\r\r\n        \r\r\n        ![Open project in PyCharm - Step 2](https://apidocs.io/illustration/python?step=openProject0&workspaceFolder=MessageMediaWebhooks-Python)     \r\r\n        \r\r\n        The project files will be displayed in the side bar as follows:\r\r\n        \r\r\n        ![Open project in PyCharm - Step 3](https://apidocs.io/illustration/python?step=openProject1&workspaceFolder=MessageMediaWebhooks-Python&projectName=message_media_webhooks)     \r\r\n        \r\r\n        ### 2. Add a new Test Project\r\r\n        \r\r\n        Create a new directory by right clicking on the solution name as shown below:\r\r\n        \r\r\n        ![Add a new project in PyCharm - Step 1](https://apidocs.io/illustration/python?step=createDirectory&workspaceFolder=MessageMediaWebhooks-Python&projectName=message_media_webhooks)\r\r\n        \r\r\n        Name the directory as \"test\"\r\r\n        \r\r\n        ![Add a new project in PyCharm - Step 2](https://apidocs.io/illustration/python?step=nameDirectory)\r\r\n           \r\r\n        Add a python file to this project with the name \"testsdk\"\r\r\n        \r\r\n        ![Add a new project in PyCharm - Step 3](https://apidocs.io/illustration/python?step=createFile&workspaceFolder=MessageMediaWebhooks-Python&projectName=message_media_webhooks)\r\r\n        \r\r\n        Name it \"testsdk\"\r\r\n        \r\r\n        ![Add a new project in PyCharm - Step 4](https://apidocs.io/illustration/python?step=nameFile)\r\r\n        \r\r\n        In your python file you will be required to import the generated python library using the following code lines\r\r\n        \r\r\n        ```Python\r\r\n        from message_media_webhooks.message_media_webhooks_client import MessageMediaWebhooksClient\r\r\n        ```\r\r\n        \r\r\n        ![Add a new project in PyCharm - Step 4](https://apidocs.io/illustration/python?step=projectFiles&workspaceFolder=MessageMediaWebhooks-Python&libraryName=message_media_webhooks.message_media_webhooks_client&projectName=message_media_webhooks&className=MessageMediaWebhooksClient)\r\r\n        \r\r\n        After this you can write code to instantiate an API client object, get a controller object and  make API calls. Sample code is given in the subsequent sections.\r\r\n        \r\r\n        ### 3. Run the Test Project\r\r\n        \r\r\n        To run the file within your test project, right click on your Python file inside your Test project and click on ```Run```\r\r\n        \r\r\n        ![Run Test Project - Step 1](https://apidocs.io/illustration/python?step=runProject&workspaceFolder=MessageMediaWebhooks-Python&libraryName=message_media_webhooks.message_media_webhooks_client&projectName=message_media_webhooks&className=MessageMediaWebhooksClient)\r\r\n        \r\r\n        \r\r\n        ## How to Test\r\r\n        \r\r\n        You can test the generated SDK and the server with automatically generated test\r\r\n        cases. unittest is used as the testing framework and nose is used as the test\r\r\n        runner. You can run the tests as follows:\r\r\n        \r\r\n          1. From terminal/cmd navigate to the root directory of the SDK.\r\r\n          2. Invoke ```pip install -r test-requirements.txt```\r\r\n          3. Invoke ```nosetests```\r\r\n        \r\r\n        ## Initialization\r\r\n        \r\r\n        ### Authentication\r\r\n        In order to setup authentication and initialization of the API client, you need the following information.\r\r\n        \r\r\n        | Parameter | Description |\r\r\n        |-----------|-------------|\r\r\n        | basic_auth_user_name | The username to use with basic authentication |\r\r\n        | basic_auth_password | The password to use with basic authentication |\r\r\n        \r\r\n        \r\r\n        \r\r\n        API client can be initialized as following.\r\r\n        \r\r\n        ```python\r\r\n        # Configuration parameters and credentials\r\r\n        basic_auth_user_name = 'basic_auth_user_name' # The username to use with basic authentication\r\r\n        basic_auth_password = 'basic_auth_password' # The password to use with basic authentication\r\r\n        \r\r\n        client = MessageMediaWebhooksClient(basic_auth_user_name, basic_auth_password)\r\r\n        ```\r\r\n        \r\r\n        \r\r\n        \r\r\n        # Class Reference\r\n        \r\r\n        ## <a name=\"list_of_controllers\"></a>List of Controllers\r\r\n        \r\r\n        * [WebhooksController](#webhooks_controller)\r\r\n        \r\r\n        ## <a name=\"webhooks_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".WebhooksController\") WebhooksController\r\r\n        \r\r\n        ### Get controller instance\r\r\n        \r\r\n        An instance of the ``` WebhooksController ``` class can be accessed from the API Client.\r\r\n        \r\r\n        ```python\r\r\n         webhooks_controller = client.webhooks\r\r\n        ```\r\r\n        \r\r\n        ### <a name=\"create_webhook\"></a>![Method: ](https://apidocs.io/img/method.png \".WebhooksController.create_webhook\") create_webhook\r\r\n        \r\r\n        > Create a webhook for one or more of the specified events.\r\r\n        > A webhook would typically have the following structure:\r\r\n        > ```\r\r\n        > {\r\r\n        >   \"url\": \"http://webhook.com\",\r\r\n        >   \"method\": \"POST\",\r\r\n        >   \"encoding\": \"JSON\",\r\r\n        >   \"headers\": {\r\r\n        >     \"Account\": \"DeveloperPortal7000\"\r\r\n        >   },\r\r\n        >   \"events\": [\r\r\n        >     \"RECEIVED_SMS\"\r\r\n        >   ],\r\r\n        >   \"template\": \"{\\\"id\\\":\\\"$mtId\\\",\\\"status\\\":\\\"$statusCode\\\"}\"\r\r\n        > }\r\r\n        > ```\r\r\n        > A valid webhook must consist of the following properties:\r\r\n        > - ```url``` The configured URL which will trigger the webhook when a selected event occurs.\r\r\n        > - ```method``` The methods to map CRUD (create, retrieve, update, delete) operations to HTTP requests.\r\r\n        > - ```encoding``` The format in which the payload will be returned. You can choose from ```JSON```, ```FORM_ENCODED``` or ```XML```. This will automatically add the Content-Type header for you so you don't have to add it again in the `headers` property.\r\r\n        > - ```headers``` HTTP header fields which provide required information about the request or response, or about the object sent in the message body. This should not include the `Content-Type` header.\r\r\n        > - ```events``` Event or events that will trigger the webhook. Atleast one event should be present.\r\r\n        > - ```template``` The structure of the payload that will be returned.\r\r\n        > #### Types of Events\r\r\n        > You can select all of the events (listed below) or combine them in whatever way you like but atleast one event must be used. Otherwise, the webhook won't be created.\r\r\n        > A webhook will be triggered when any one or more of the events occur:\r\r\n        > + **SMS**\r\r\n        >     + `RECEIVED_SMS` Receive an SMS\r\r\n        >     + `OPT_OUT_SMS` Opt-out occured\r\r\n        > + **MMS**\r\r\n        >     + `RECEIVED_MMS` Receive an MMS\r\r\n        > + **DR (Delivery Reports)**\r\r\n        >     + `ENROUTE_DR` Message is enroute\r\r\n        >     + `EXPIRED_DR` Message has expired\r\r\n        >     + `REJECTED_DR` Message is rejected\r\r\n        >     + `FAILED_DR` Message has failed \r\r\n        >     + `DELIVERED_DR` Message is delivered\r\r\n        >     + `SUBMITTED_DR` Message is submitted\r\r\n        > #### Template Parameters\r\r\n        > You can choose what to include in the data that will be sent as the payload via the Webhook.\r\r\n        > Keep in my mind, you must escape the JSON in the template value (see example above).\r\r\n        > The table illustrates a list of all the parameters that can be included in the template and which event types it can be applied to.\r\r\n        > | Data  | Parameter Name | Example | Event Type |\r\r\n        > |:--|--|--|--|--|\r\r\n        > | **Service Type**  | $type| `SMS` | `DR` `MO` `MO MMS` |\r\r\n        > | **Message ID**  | $mtId, $messageId| `877c19ef-fa2e-4cec-827a-e1df9b5509f7` | `DR` `MO` `MO MMS`|\r\r\n        > | **Delivery Report ID** |$drId, $reportId| `01e1fa0a-6e27-4945-9cdb-18644b4de043` | `DR` |\r\r\n        > | **Reply ID**| $moId, $replyId| `a175e797-2b54-468b-9850-41a3eab32f74` | `MO` `MO MMS` |\r\r\n        > | **Account ID**  | $accountId| `DeveloperPortal7000` | `DR` `MO` `MO MMS` |\r\r\n        > | **Message Timestamp**  | $submittedTimestamp| `2016-12-07T08:43:00.850Z` | `DR` `MO` `MO MMS` |\r\r\n        > | **Provider Timestamp**  | $receivedTimestamp| `2016-12-07T08:44:00.850Z` | `DR` `MO` `MO MMS` |\r\r\n        > | **Message Status** | $status| `enroute` | `DR` |\r\r\n        > | **Status Code**  | $statusCode| `200` | `DR` |\r\r\n        > | **External Metadata** | $metadata.get('key')| `name` | `DR` `MO` `MO MMS` |\r\r\n        > | **Source Address**| $sourceAddress| `+61491570156` | `DR` `MO` `MO MMS` |\r\r\n        > | **Destination Address**| $destinationAddress| `+61491593156` | `MO` `MO MMS` |\r\r\n        > | **Message Content**| $mtContent, $messageContent| `Hi Derp` | `DR` `MO` `MO MMS` |\r\r\n        > | **Reply Content**| $moContent, $replyContent| `Hello Derpina` | `MO` `MO MMS` |\r\r\n        > | **Retry Count**| $retryCount| `1` | `DR` `MO` `MO MMS` |\r\r\n        > *Note: A 400 response will be returned if the `url` is invalid, the `events`, `encoding` or `method` is null or the `headers` has a Content-Type  attribute.*\r\r\n        \r\r\n        ```python\r\r\n        def create_webhook(self,\r\r\n                               body)\r\r\n        ```\r\r\n        \r\r\n        #### Parameters\r\r\n        \r\r\n        | Parameter | Tags | Description |\r\r\n        |-----------|------|-------------|\r\r\n        | body |  ``` Required ```  | TODO: Add a parameter description |\r\r\n        \r\r\n        \r\r\n        \r\r\n        #### Example Usage\r\r\n        \r\r\n        ```python\r\r\n        body = CreateWebhookRequest()\r\r\n        \r\r\n        result = webhooks_controller.create_webhook(body)\r\r\n        \r\r\n        ```\r\r\n        \r\r\n        #### Errors\r\r\n        \r\r\n        | Error Code | Error Description |\r\r\n        |------------|-------------------|\r\r\n        | 400 | Unexpected error in API call. See HTTP response body for details. |\r\r\n        | 409 | Unexpected error in API call. See HTTP response body for details. |\r\r\n        \r\r\n        \r\r\n        \r\r\n        \r\r\n        ### <a name=\"retrieve_webhook\"></a>![Method: ](https://apidocs.io/img/method.png \".WebhooksController.retrieve_webhook\") retrieve_webhook\r\r\n        \r\r\n        > Retrieve all the webhooks created for the connected account.\r\r\n        > A successful request to the retrieve webhook endpoint will return a response body as follows:\r\r\n        > ```\r\r\n        > {\r\r\n        >     \"page\": 0,\r\r\n        >     \"pageSize\": 100,\r\r\n        >     \"pageData\": [\r\r\n        >         {\r\r\n        >             \"url\": \"https://webhook.com\",\r\r\n        >             \"method\": \"POST\",\r\r\n        >             \"id\": \"8805c9d8-bef7-41c7-906a-69ede93aa024\",\r\r\n        >             \"encoding\": \"JSON\",\r\r\n        >             \"events\": [\r\r\n        >                 \"RECEIVED_SMS\"\r\r\n        >             ],\r\r\n        >             \"headers\": {},\r\r\n        >             \"template\": \"{\\\"id\\\":\\\"$mtId\\\", \\\"status\\\":\\\"$statusCode\\\"}\"\r\r\n        >         }\r\r\n        >     ]\r\r\n        > }\r\r\n        > ```\r\r\n        > *Note: Response 400 is returned when the `page` query parameter is not valid or the `pageSize` query parameter is not valid.*\r\r\n        \r\r\n        ```python\r\r\n        def retrieve_webhook(self,\r\r\n                                 page=None,\r\r\n                                 page_size=None)\r\r\n        ```\r\r\n        \r\r\n        #### Parameters\r\r\n        \r\r\n        | Parameter | Tags | Description |\r\r\n        |-----------|------|-------------|\r\r\n        | page |  ``` Optional ```  | TODO: Add a parameter description |\r\r\n        | pageSize |  ``` Optional ```  | TODO: Add a parameter description |\r\r\n        \r\r\n        \r\r\n        \r\r\n        #### Example Usage\r\r\n        \r\r\n        ```python\r\r\n        page = 85\r\r\n        page_size = 85\r\r\n        \r\r\n        result = webhooks_controller.retrieve_webhook(page, page_size)\r\r\n        \r\r\n        ```\r\r\n        \r\r\n        #### Errors\r\r\n        \r\r\n        | Error Code | Error Description |\r\r\n        |------------|-------------------|\r\r\n        | 400 | Unexpected error in API call. See HTTP response body for details. |\r\r\n        \r\r\n        \r\r\n        \r\r\n        \r\r\n        ### <a name=\"delete_webhook\"></a>![Method: ](https://apidocs.io/img/method.png \".WebhooksController.delete_webhook\") delete_webhook\r\r\n        \r\r\n        > Delete a webhook that was previously created for the connected account.\r\r\n        > A webhook can be cancelled by appending the UUID of the webhook to the endpoint and submitting a DELETE request to the /webhooks/messages endpoint.\r\r\n        > *Note: Only pre-created webhooks can be deleted. If an invalid or non existent webhook ID parameter is specified in the request, then a HTTP 404 Not Found response will be returned.*\r\r\n        \r\r\n        ```python\r\r\n        def delete_webhook(self,\r\r\n                               webhook_id)\r\r\n        ```\r\r\n        \r\r\n        #### Parameters\r\r\n        \r\r\n        | Parameter | Tags | Description |\r\r\n        |-----------|------|-------------|\r\r\n        | webhookId |  ``` Required ```  | TODO: Add a parameter description |\r\r\n        \r\r\n        \r\r\n        \r\r\n        #### Example Usage\r\r\n        \r\r\n        ```python\r\r\n        webhook_id = a7f11bb0-f299-4861-a5ca-9b29d04bc5ad\r\r\n        \r\r\n        webhooks_controller.delete_webhook(webhook_id)\r\r\n        \r\r\n        ```\r\r\n        \r\r\n        #### Errors\r\r\n        \r\r\n        | Error Code | Error Description |\r\r\n        |------------|-------------------|\r\r\n        | 404 | TODO: Add an error description |\r\r\n        \r\r\n        \r\r\n        \r\r\n        \r\r\n        ### <a name=\"update_webhook\"></a>![Method: ](https://apidocs.io/img/method.png \".WebhooksController.update_webhook\") update_webhook\r\r\n        \r\r\n        > Update a webhook. You can update individual attributes or all of them by submitting a PATCH request to the /webhooks/messages endpoint (the same endpoint used above to delete a webhook)\r\r\n        > A successful request to the retrieve webhook endpoint will return a response body as follows:\r\r\n        > ```\r\r\n        > {\r\r\n        >     \"url\": \"https://webhook.com\",\r\r\n        >     \"method\": \"POST\",\r\r\n        >     \"id\": \"04442623-0961-464e-9cbc-ec50804e0413\",\r\r\n        >     \"encoding\": \"JSON\",\r\r\n        >     \"events\": [\r\r\n        >         \"RECEIVED_SMS\"\r\r\n        >     ],\r\r\n        >     \"headers\": {},\r\r\n        >     \"template\": \"{\\\"id\\\":\\\"$mtId\\\", \\\"status\\\":\\\"$statusCode\\\"}\"\r\r\n        > }\r\r\n        > ```\r\r\n        > *Note: Only pre-created webhooks can be deleted. If an invalid or non existent webhook ID parameter is specified in the request, then a HTTP 404 Not Found response will be returned.*\r\r\n        \r\r\n        ```python\r\r\n        def update_webhook(self,\r\r\n                               webhook_id,\r\r\n                               body)\r\r\n        ```\r\r\n        \r\r\n        #### Parameters\r\r\n        \r\r\n        | Parameter | Tags | Description |\r\r\n        |-----------|------|-------------|\r\r\n        | webhookId |  ``` Required ```  | TODO: Add a parameter description |\r\r\n        | body |  ``` Required ```  | TODO: Add a parameter description |\r\r\n        \r\r\n        \r\r\n        \r\r\n        #### Example Usage\r\r\n        \r\r\n        ```python\r\r\n        webhook_id = a7f11bb0-f299-4861-a5ca-9b29d04bc5ad\r\r\n        body_value = \"    {        \\\"url\\\": \\\"https://myurl.com\\\",        \\\"method\\\": \\\"POST\\\",        \\\"encoding\\\": \\\"FORM_ENCODED\\\",        \\\"events\\\": [            \\\"ENROUTE_DR\\\"        ],        \\\"template\\\": \\\"{\\\\\\\"id\\\\\\\":\\\\\\\"$mtId\\\\\\\", \\\\\\\"status\\\\\\\":\\\\\\\"$statusCode\\\\\\\"}\\\"    }\"\r\r\n        body = json.loads(body_value)\r\r\n        \r\r\n        result = webhooks_controller.update_webhook(webhook_id, body)\r\r\n        \r\r\n        ```\r\r\n        \r\r\n        #### Errors\r\r\n        \r\r\n        | Error Code | Error Description |\r\r\n        |------------|-------------------|\r\r\n        | 400 | Unexpected error in API call. See HTTP response body for details. |\r\r\n        | 404 | TODO: Add an error description |\r\r\n        \r\r\n        \r\r\n        \r\r\n        \r\r\n        [Back to List of Controllers](#list_of_controllers)\r\n        \r\r\n        \r\r\n        \r\r\n        \r\nPlatform: UNKNOWN\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/messagemedia/messages-python-sdk",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://developers.messagemedia.com",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "messagemedia-webhooks-sdk",
    "package_url": "https://pypi.org/project/messagemedia-webhooks-sdk/",
    "platform": "",
    "project_url": "https://pypi.org/project/messagemedia-webhooks-sdk/",
    "project_urls": {
      "Download": "https://github.com/messagemedia/messages-python-sdk",
      "Homepage": "https://developers.messagemedia.com"
    },
    "release_url": "https://pypi.org/project/messagemedia-webhooks-sdk/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The MessageMedia Webhooks allows you to subscribe to one or several events and when one of those events is triggered, an HTTP request is sent to the URL of your choice along with the message or payload. In simpler terms, it allows applications to \"speak\" to one another and get notified automatically when something new happens.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3886225,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d54e98e4ab246ba698da640fc8d0c688922d74f8cbeb63a3b6a23e0bed4187c",
          "md5": "6640574bca112562b172dbc8e9779a72",
          "sha256": "ca3e6e211692bc952c347fc0cf2e7b4a2a7d4df4091ed2ce3b412c38a1333a50"
        },
        "downloads": -1,
        "filename": "messagemedia_webhooks_sdk-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6640574bca112562b172dbc8e9779a72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27008,
        "upload_time": "2018-05-22T05:38:44",
        "upload_time_iso_8601": "2018-05-22T05:38:44.833464Z",
        "url": "https://files.pythonhosted.org/packages/6d/54/e98e4ab246ba698da640fc8d0c688922d74f8cbeb63a3b6a23e0bed4187c/messagemedia_webhooks_sdk-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6d54e98e4ab246ba698da640fc8d0c688922d74f8cbeb63a3b6a23e0bed4187c",
        "md5": "6640574bca112562b172dbc8e9779a72",
        "sha256": "ca3e6e211692bc952c347fc0cf2e7b4a2a7d4df4091ed2ce3b412c38a1333a50"
      },
      "downloads": -1,
      "filename": "messagemedia_webhooks_sdk-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6640574bca112562b172dbc8e9779a72",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27008,
      "upload_time": "2018-05-22T05:38:44",
      "upload_time_iso_8601": "2018-05-22T05:38:44.833464Z",
      "url": "https://files.pythonhosted.org/packages/6d/54/e98e4ab246ba698da640fc8d0c688922d74f8cbeb63a3b6a23e0bed4187c/messagemedia_webhooks_sdk-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}