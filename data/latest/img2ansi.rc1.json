{
  "info": {
    "author": "Daniel Ba√±uelos",
    "author_email": "dax99993@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Other/Proprietary License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<div align=\"center\">\n  <h3>\nimg2ansi is a simple package containing three CLI to convert an image to an ASCII, BRAILE/DOT, BLOCK representation with support for <a href =\"https://en.wikipedia.org/wiki/ANSI_escape_code\" > ANSI escape code sequence </a>\n  </h3>\n</div>\n\n<div align=\"center\">\n  <a href=\"https://github.com/dax99993/img2ansi/blob/main/demo/demo.md\">Demo</a>\n  <br/><br/>\n  <a href=\"https://github.com/dax99993/img2ansi/blob/main/LICENSE\">\n    <img src=\"https://img.shields.io/badge/License-GPL2-greee.svg?style=flat-square\" alt=\"license\" />\n  </a>\n  <a href=\"https://pypi.org/project/PIL/\">\n    <img src=\"https://img.shields.io/badge/Dependencies-PIL-blue.svg?style=flat-square\" alt=\"dependencies\" />\n  </a>\n  <a href=\"https://pypi.org/project/img2ansi/\">\n    <img src=\"https://img.shields.io/badge/Package-img2ansi-red.svg?style=flat-square\" alt=\"dependencies\" />\n  </a>\n</div>\n\n## Installation\n\n```bash\n$ Python3 -m pip install img2ansi\n```\n\n## Features\n- ASCII convertion\n- BRAILE/DOT convertion\n- Block convertion\n- Custom ASCII character set\n- Invert character set\n- No echo **/** echo to terminal\n- Resize of image\n- Save to a file\n- True color\n\n## ANSI support\n- Bold\n- Blink\n- True color Foreground\n- True color Background \n\n## Todo\n- [x] Simple Ascii convertion\n- [x] Color support\n- [ ] Multiple file handling\n- [ ] Simple animation\n\n## Usage\nimg2ansi contains three modules to perform different kind of convertion\n-img2ascii\n-img2braile\n-img2block\n```\nusage: img2ascii [-h] [-a Character Set] [-F R G B] [-B R G B] [-b] [-c] [-f]\n                 [-i] [-k] [-n] [-r Width Height] [-o [output filename]]\n                 inputImage\n\nConvert img to Ascii representation\n\npositional arguments:\n  inputImage            image to be converted\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a Character Set, --asciicharset Character Set\n                        ascii character set (default : \" .~*:+zM#&@$\" )\n  -F R G B, --frgdcolor R G B\n                        All characters with RGB24 foreground color\n  -B R G B, --bkgdcolor R G B\n                        All characters with RGB24 background color\n  -b, --bold            bold flag\n  -c, --color           foreground text as img colors\n  -f, --fullscreen      fullscreen flag\n  -i, --invertPattern   \"invert ascii character set\n  -k, --blink           blink flag\n  -n, --noecho          no echo flag\n  -r Width Height, --resize Width Height\n                        resize image (0 0 keeps original size), if given -r\n                        100 0 keeps aspectratio with 100px width\n  -o [output filename], --save [output filename]\n                        save file (if no output filename) defaults to\n                        ascii.txt\n\nBy default uses parameters -r 0 0 -a \" .~*:+zM#&@$\"\n\n```\n\n```\nusage: img2braile [-h] [-b] [-F R G B] [-B R G B] [-f] [-i] [-k] [-n]\n                  [-r Width Height] [-o [output filename]] [-t Threshold]\n                  inputImage\n\nConvert img to Braile representation\n\npositional arguments:\n  inputImage            image to be converted\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -b, --bold            bold flag\n  -F R G B, --frgdcolor R G B\n                        All characters with RGB24 foreground color\n  -B R G B, --bkgdcolor R G B\n                        All characters with RGB24 background color\n  -f, --fullscreen      fullscreen flag\n  -i, --invertPattern   \"invert Braile characters flag\n  -k, --blink           blink flag\n  -n, --noecho          no echo flag\n  -r Width Height, --resize Width Height\n                        resize image (0 0 keeps original size), if given -r\n                        100 0 keeps aspectratio with 100px width\n  -o [output filename], --save [output filename]\n                        save file (if no output filename) defaults to\n                        braile.txt\n  -t Threshold, --threshold Threshold\n                        set threshold to binarize img in braile convertion\n                        (0-255)\n\nBy default -r 0 0 -t 127\n\n```\n\n```\nusage: img2block [-h] [-f] [-W] [-k] [-n] [-r Width Height]\n                 [-o [output filename]]\n                 inputImage\n\nConvert img to Block representation\n\npositional arguments:\n  inputImage            image to be converted\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f, --fullscreen      fullscreen flag\n  -W, --wholeblock      \"Use one block per terminal cell\n  -k, --blink           blink flag\n  -n, --noecho          no echo flag\n  -r Width Height, --resize Width Height\n                        resize image (0 0 keeps original size), if given -r\n                        100 0 keeps aspectratio with 100px width\n  -o [output filename], --save [output filename]\n                        save file (if no output filename) defaults to\n                        block.txt\n\nBy default uses 2 blocks per terminal cell and -r 0 0\n\n```\n\n## License\n[GPL2](https://github.com/dax99993/img2ansi/blob/main/LICENSE)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GPL2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "img2ansi",
    "package_url": "https://pypi.org/project/img2ansi/",
    "platform": "",
    "project_url": "https://pypi.org/project/img2ansi/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/img2ansi/0.1.2/",
    "requires_dist": [
      "Pillow (>=8.0.0,<9.0.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Convert image to ascii/unicode ANSI sequence",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12251708,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35cb2f7123d9a167f3fc60b43aed156cd3456f7881e9cb4d88ed437041f346d0",
          "md5": "4f85c371d2aafa680a9fbb8ac0e06fb1",
          "sha256": "02f88f481693d46b7a2e78ec04e88f1f4c2b69201dd61aeed4886f512e279188"
        },
        "downloads": -1,
        "filename": "img2ansi-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f85c371d2aafa680a9fbb8ac0e06fb1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 22992,
        "upload_time": "2021-12-09T03:45:10",
        "upload_time_iso_8601": "2021-12-09T03:45:10.532573Z",
        "url": "https://files.pythonhosted.org/packages/35/cb/2f7123d9a167f3fc60b43aed156cd3456f7881e9cb4d88ed437041f346d0/img2ansi-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18377f0524da876996aee8b1b12dfe524fd043ac03b46ef7521b24c0d9c1c926",
          "md5": "022e030ff29a4d4f77517153593ded25",
          "sha256": "5a1e5c9da567f3f824d55835682c3a63524406758509e228a919e5bbb2010d84"
        },
        "downloads": -1,
        "filename": "img2ansi-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "022e030ff29a4d4f77517153593ded25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 18563,
        "upload_time": "2021-12-09T03:45:12",
        "upload_time_iso_8601": "2021-12-09T03:45:12.038770Z",
        "url": "https://files.pythonhosted.org/packages/18/37/7f0524da876996aee8b1b12dfe524fd043ac03b46ef7521b24c0d9c1c926/img2ansi-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35cb2f7123d9a167f3fc60b43aed156cd3456f7881e9cb4d88ed437041f346d0",
        "md5": "4f85c371d2aafa680a9fbb8ac0e06fb1",
        "sha256": "02f88f481693d46b7a2e78ec04e88f1f4c2b69201dd61aeed4886f512e279188"
      },
      "downloads": -1,
      "filename": "img2ansi-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4f85c371d2aafa680a9fbb8ac0e06fb1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 22992,
      "upload_time": "2021-12-09T03:45:10",
      "upload_time_iso_8601": "2021-12-09T03:45:10.532573Z",
      "url": "https://files.pythonhosted.org/packages/35/cb/2f7123d9a167f3fc60b43aed156cd3456f7881e9cb4d88ed437041f346d0/img2ansi-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18377f0524da876996aee8b1b12dfe524fd043ac03b46ef7521b24c0d9c1c926",
        "md5": "022e030ff29a4d4f77517153593ded25",
        "sha256": "5a1e5c9da567f3f824d55835682c3a63524406758509e228a919e5bbb2010d84"
      },
      "downloads": -1,
      "filename": "img2ansi-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "022e030ff29a4d4f77517153593ded25",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 18563,
      "upload_time": "2021-12-09T03:45:12",
      "upload_time_iso_8601": "2021-12-09T03:45:12.038770Z",
      "url": "https://files.pythonhosted.org/packages/18/37/7f0524da876996aee8b1b12dfe524fd043ac03b46ef7521b24c0d9c1c926/img2ansi-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}