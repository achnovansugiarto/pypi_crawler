{
  "info": {
    "author": "Lirong Peng and Nicholas Johnson",
    "author_email": "nicholas.larue.johnson@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/card-scrnaseq-pipeline.svg)](https://badge.fury.io/py/card-scrnaseq-pipeline)\n\nThe scPipeline is a pipeline using scanpy to do single-cell analysis. We hope to make new additions to that soon.\n\n## Installation\nThere are two installation methods:  \n1. Install the full CLI tool:\n    1. `pip install card-scrnaseq-pipeline`\n\n2. Install the environment separately and run the tool manually:\n    1. First, make sure you have miniconda or conda set up. If using Biowulf, first set up conda in your data directory, or use the miniconda modules on biowulf.\n    2. Then, install create a new environment in this directory using\n    ```\n    conda env create -p scPipeline_env/ -f env_requirements.yml\n    ```\n    3. Activate the environment using `conda activate scPipeline_env/` and you're almost ready to go.\n\n\n## Running \nThere are several steps to the pipeline. We recommend creating a shell script to run each command consecutively.\nCommands can be provided to the command line or in a script,\nor they can be listed in a file, specified with @ in the command line. For example, \n```\nscrnapipeline qc --input_file myfile.h5ad @qc_arguments.txt\n```\n\nThe steps are:\n- qc -- requires an input_file. There is no default.  \n- cluster  \n- ranking  \n- plot_marker  \n- annotate  \n\n\nRun each of these in order. Provide the project argument for each command. The project name will be prefixed to any output files, including alternative output filenames specified by the user. This is helpful for keeping separate runs of the pipeline separate. Therefore,\nwe recommend the user always suggest a project name.\nFor convenience and consistency, each command already has default\noutput names for all files; if the user changes these names, the input_file name for the following command must be specified.\nApart from the project argument\nand the input_file for the qc command, nearly all arguments are optional.\n\n### Running each step\nTo learn about the possible arguments of each subcaommand and what each means, call each command with the --help flag.\nFor example:\n```\n# Using the pip package command\nplot_markers --help\n\n# Running the command manually if the pip package was not installed\npython3 src/scrnapipeline/scrnapipeline.py plot_marker --help\n```  \nThe pipeline can be run either command by command on the command line, or in a script.\nRunning using a script has the disadvantage that any error will require the script to be run again (in the current version. In the future, we will all restarting from the most recent complete step). The advantage is a record is created about what was done.\nHowever, that can also be achieved by providing arguments in a file for each subcommand. \nTo do that, specify the name of the file with @ at the command line. E.g.:\n```\nscrnapipeline qc --input_file myfile.h5ad @qc_arguments.txt\n``` \nWithin argument files, each argument consists of a flag, an equals sign, and a setting. If listing something, \nsimply add a space between each item, e.g. `--gene_list=MAP2 FOX4 APOE`\n\nTo create a script, simply put all commands and arguments in a file and name it my_scrnaseq_pipeline_script.sh.\nAt the top, put the following two lines:\n```\n#!/bin/bash\ninput_file=$1 # $1 means the first argument if this script is run from the command line\n              # You can also place the actual file name here if you prefer.\n```             \nRun using \n```\nbash my_scrnaseq_pipeline_script.sh data/my_data_file.h5ad\n```\n\nThe following is an example of a full execution script. The same format can be followed to run each command individually:\n```\n#!/bin/bash\n\ninput_file=$1 # $1 means the first argument if this script is run from the command line\n              # You can also place the actual file name here if you prefer.\nref_path=\"data/reference_markers/marker_panglao_brain_dic_update.json\"\n\necho \"Processing ${input_file}\"\n\n# qc\nscrnapipeline qc -i ${input_file} \\\n                          --project testing \\\n                          --n_genes_by_counts 9000 \\\n                          --pct_counts_mt 15 \\\n                          --exclude_highly_expressed yes \\\n                          --show no\necho \"finished QC\"\necho \"+++++++++++++++\\n\"\n\n# cluster\nscrnapipeline cluster --project testing \\\n                               -r 1.0 \\\n                               -k leiden_1.0 \\\n                               -C leiden_1.0 \\\n                               --show no\n\necho \"finished clustering\"\necho \"+++++++++++++++\\n\"\n\n# marker genes\nscrnapipeline ranking --project testing \\\n                               -k rank_genes_groups_r1.0 \\\n                               --groupby leiden_1.0 \\\n                               --show no\necho \"finished ranking\"\necho \"+++++++++++++++\\n\"\n\n# plot markers for neurons: \n#python3 $scrnapipeline plot_marker --project testing \\\n#                                   -S no \\\n#                                   -p neuron_marker \\\n#                                   -t umap \\\n#                                   -g MAP2\n\nscrnapipeline plot_marker --project testing \\\n                                   -S no \\\n                                   -t umap \\\n                                   -g MAP2 \necho \"finished plotting\\n\"\necho \"+++++++++++++++\\n\"\n\n# annotate\nscrnapipeline annotate --project testing \\\n                                -r rank_genes_groups_r1.0 \\\n                                -k leiden_1.0 \\\n                                -S no \\\n                                -m ${ref_path}\necho \"finished annotating\"\necho \"+++++++++++++++\\n\"\n```\n\n### Other info\nReference markers must be provided in json format.\n\nA utility is provided to convert pickle formatted files to h5ad.  \n`scrnapipeline convert_pickle my_pickle_file.pickle`\n\n## Cleanup\nAfter running, there may be several pickle files. The only one that is important is the (your_project_name)_after_annotate.pickle file.\nWhen using the pip installable, the default is to automatically delete all pickle files except the after_annotate.pickle file as each becomes unnecessary following the successful completion of each step. When using the python hooks, however, that is not true and must be done manually. This is done for backwards compatibility.\nFeel free to delete the rest as they may be large. Depending on space, it may be necessary to run the commands one at a time in order to delete\nthe previous pickle file.\n\n\n\n\n\nBSD 3-Clause License\n\nCopyright (c) 2017 F. Alexander Wolf, P. Angerer, Theis Lab\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NIH-CARD/scOmicPipeline",
    "keywords": "",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "card-scrnaseq-pipeline",
    "package_url": "https://pypi.org/project/card-scrnaseq-pipeline/",
    "platform": null,
    "project_url": "https://pypi.org/project/card-scrnaseq-pipeline/",
    "project_urls": {
      "Homepage": "https://github.com/NIH-CARD/scOmicPipeline"
    },
    "release_url": "https://pypi.org/project/card-scrnaseq-pipeline/1.0.0/",
    "requires_dist": [
      "numpy",
      "pandas",
      "scanpy",
      "seaborn",
      "anndata"
    ],
    "requires_python": "",
    "summary": "A collection of command-line wrappers for scanpy scRNA-seq",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14904215,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46f1b56e0131c21773295bde29c5c9d98f796711d1dcd8c3e37c6e231a5dfccf",
          "md5": "7d58a05c68a6e4ad5a7ec9786b5f19c8",
          "sha256": "464a800d948e19369470a90ebb073dd59ca7e169d6681df6df237fc4314d7d4a"
        },
        "downloads": -1,
        "filename": "card_scrnaseq_pipeline-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d58a05c68a6e4ad5a7ec9786b5f19c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13505,
        "upload_time": "2022-08-24T20:54:14",
        "upload_time_iso_8601": "2022-08-24T20:54:14.574459Z",
        "url": "https://files.pythonhosted.org/packages/46/f1/b56e0131c21773295bde29c5c9d98f796711d1dcd8c3e37c6e231a5dfccf/card_scrnaseq_pipeline-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ded76e006ff77581913eb0b707367206355d86fe5a889add292edf6e4113235",
          "md5": "48c2986355f161d461ca89ff69a4d234",
          "sha256": "6d32fd36470ffa88fc7b0e4a3fedd7f75c101d7995e8c1f83d77f358f74e14c5"
        },
        "downloads": -1,
        "filename": "card_scrnaseq_pipeline-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "48c2986355f161d461ca89ff69a4d234",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11977,
        "upload_time": "2022-08-24T20:54:16",
        "upload_time_iso_8601": "2022-08-24T20:54:16.111238Z",
        "url": "https://files.pythonhosted.org/packages/7d/ed/76e006ff77581913eb0b707367206355d86fe5a889add292edf6e4113235/card_scrnaseq_pipeline-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8350dea9d35d492131bdb7624efe03fafc53ea350a6b87d38aa4274407605c02",
          "md5": "5f74dfd29e94ff69594e695a1d96f333",
          "sha256": "ee9a676136250d03a213e3bcdf169da6fc04cb387334fd79e96fe2422157dd74"
        },
        "downloads": -1,
        "filename": "card_scrnaseq_pipeline-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f74dfd29e94ff69594e695a1d96f333",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5742,
        "upload_time": "2022-08-26T21:14:59",
        "upload_time_iso_8601": "2022-08-26T21:14:59.800026Z",
        "url": "https://files.pythonhosted.org/packages/83/50/dea9d35d492131bdb7624efe03fafc53ea350a6b87d38aa4274407605c02/card_scrnaseq_pipeline-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97dcc7cabf7e7d27a5c7b8113028bb2ef936c9ae059a0b752cdff5fadfe9450c",
          "md5": "911be04e71889f8325df1160b540d81e",
          "sha256": "f6cf6d9834f1f004281c1bf740c241742728ae8dbe4f8086c4b1698017cc8cad"
        },
        "downloads": -1,
        "filename": "card_scrnaseq_pipeline-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "911be04e71889f8325df1160b540d81e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4815,
        "upload_time": "2022-08-26T21:15:01",
        "upload_time_iso_8601": "2022-08-26T21:15:01.364891Z",
        "url": "https://files.pythonhosted.org/packages/97/dc/c7cabf7e7d27a5c7b8113028bb2ef936c9ae059a0b752cdff5fadfe9450c/card_scrnaseq_pipeline-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8350dea9d35d492131bdb7624efe03fafc53ea350a6b87d38aa4274407605c02",
        "md5": "5f74dfd29e94ff69594e695a1d96f333",
        "sha256": "ee9a676136250d03a213e3bcdf169da6fc04cb387334fd79e96fe2422157dd74"
      },
      "downloads": -1,
      "filename": "card_scrnaseq_pipeline-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5f74dfd29e94ff69594e695a1d96f333",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5742,
      "upload_time": "2022-08-26T21:14:59",
      "upload_time_iso_8601": "2022-08-26T21:14:59.800026Z",
      "url": "https://files.pythonhosted.org/packages/83/50/dea9d35d492131bdb7624efe03fafc53ea350a6b87d38aa4274407605c02/card_scrnaseq_pipeline-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97dcc7cabf7e7d27a5c7b8113028bb2ef936c9ae059a0b752cdff5fadfe9450c",
        "md5": "911be04e71889f8325df1160b540d81e",
        "sha256": "f6cf6d9834f1f004281c1bf740c241742728ae8dbe4f8086c4b1698017cc8cad"
      },
      "downloads": -1,
      "filename": "card_scrnaseq_pipeline-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "911be04e71889f8325df1160b540d81e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4815,
      "upload_time": "2022-08-26T21:15:01",
      "upload_time_iso_8601": "2022-08-26T21:15:01.364891Z",
      "url": "https://files.pythonhosted.org/packages/97/dc/c7cabf7e7d27a5c7b8113028bb2ef936c9ae059a0b752cdff5fadfe9450c/card_scrnaseq_pipeline-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}