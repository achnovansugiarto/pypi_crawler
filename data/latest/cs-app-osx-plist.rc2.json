{
  "info": {
    "author": "Cameron Simpson",
    "author_email": "Cameron Simpson <cs@cskk.id.au>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Some simple MacOS plist facilities.\nSupports binary plist files, which the stdlib `plistlib` module does not.\n\n*Latest release 20221228*:\ningest_plist_dict: bugfix initial setting for key.\n\n## Function `export_xml_to_plist(E, fp=None, fmt='binary1')`\n\nExport the content of an `etree.Element` to a plist file.\n\nParameters:\n* `E`: the source `etree.Element`.\n* `fp`: the output file or filename (if a str).\n* `fmt`: the output format, default `\"binary1\"`.\n  The format must be a valid value for the `-convert` option of plutil(1).\n\n## Function `import_as_etree(plist)`\n\nLoad an Apple plist and return an etree.Element.\n\nParamaters:\n* `plist`: the source plist: data if `bytes`, filename if `str`,\n  otherwise a file object open for binary read.\n\n## Function `ingest_plist(plist, recurse=False, resolve=False)`\n\nIngest an Apple plist and return as a `PListDict`.\nTrivial wrapper for `import_as_etree` and `ingest_plist_etree`.\n\nParameters:\n* `recurse`: unpack any `bytes` objects as plists\n* `resolve`: resolve unpacked `bytes` plists' `'$objects'` entries\n\n## Function `ingest_plist_array(pa)`\n\nIngest a plist <array>, returning a Python list.\n\n## Function `ingest_plist_dict(pd)`\n\nIngest a plist <dict> Element, returning a PListDict.\n\n## Function `ingest_plist_elem(e)`\n\nIngest a plist `Element`, converting various types to native Python objects.\nUnhandled types remain as the original `Element`.\n\n## Function `ingest_plist_etree(plist_etree)`\n\nRecursively a plist's `ElementTree` into a native Python structure.\nThis returns a `PListDict`, a mapping of the plists's top dict\nwith attribute access to key values.\n\n## Function `is_iphone()`\n\nTest if we're on an iPhone.\n\n## Class `ObjectClassDefinition`\n\nA representation of a \"class\" object, used in `resolve_object()`\nfor otherwise unrecognised objects which contain a `$classname` member.\n\n## Class `ObjectClassInstance`\n\nA representation of a \"class instance\", used in `resolve_object()`\nfor objects with a `$class` member.\n\n## Class `PListDict(builtins.dict)`\n\nA mapping for a plist, subclassing `dict`, which also allows\naccess to the elements by attribute if that does not conflict\nwith a `dict` method.\n\n## Function `readPlist(path, binary=False)`\n\nAn old routine I made to use inside my jailbroken iPhone.\n\n## Function `resolve_object(objs, i)`\n\nResolve an object definition from structures like an iPhoto album\nqueryData object list.\n\n## Function `writePlist(rootObj, path, binary=False)`\n\nAn old routine I made to use inside my jailbroken iPhone.\n\n# Release Log\n\n\n\n*Release 20221228*:\ningest_plist_dict: bugfix initial setting for key.\n\n*Release 20220606*:\nInitial PyPI release.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/cameron_simpson/css/commits/all",
    "keywords": "python2,python3",
    "license": "GNU General Public License v3 or later (GPLv3+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cs.app.osx.plist",
    "package_url": "https://pypi.org/project/cs.app.osx.plist/",
    "platform": null,
    "project_url": "https://pypi.org/project/cs.app.osx.plist/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/cameron_simpson/css/commits/all",
      "URL": "https://bitbucket.org/cameron_simpson/css/commits/all"
    },
    "release_url": "https://pypi.org/project/cs.app.osx.plist/20221228/",
    "requires_dist": [
      "cs.logutils (>=20220531)",
      "cs.pfx (>=20221118)",
      "cs.sh",
      "cs.xml"
    ],
    "requires_python": "",
    "summary": "Some simple MacOS plist facilities. Supports binary plist files, which the stdlib `plistlib` module does not.",
    "version": "20221228",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16233264,
  "releases": {
    "20220606": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79c51cf1b96da1654d2c7a4cf8e59658bbb38fb1a3628c497419c95d9732ea01",
          "md5": "95b02ea343d37d3a827e8b915a44c086",
          "sha256": "79b7978b142599a53fa3aa6bf5f30c66f9de24d49401c626f5261b50e9212c1f"
        },
        "downloads": -1,
        "filename": "cs.app.osx.plist-20220606-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95b02ea343d37d3a827e8b915a44c086",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6060,
        "upload_time": "2022-06-06T09:42:20",
        "upload_time_iso_8601": "2022-06-06T09:42:20.704967Z",
        "url": "https://files.pythonhosted.org/packages/79/c5/1cf1b96da1654d2c7a4cf8e59658bbb38fb1a3628c497419c95d9732ea01/cs.app.osx.plist-20220606-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9497ba82730b53d7eaa5f623e3d2bebeed180cb3fb382479c09312d2a4e0aa7",
          "md5": "9c0d21ede0cdc1dc5eff787f758fe9c3",
          "sha256": "7afa6949773944ad7b0ff50a04edc5bdaebf6d78bb58aefe2d5be8baa720ee19"
        },
        "downloads": -1,
        "filename": "cs.app.osx.plist-20220606.tar.gz",
        "has_sig": false,
        "md5_digest": "9c0d21ede0cdc1dc5eff787f758fe9c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5899,
        "upload_time": "2022-06-06T09:42:23",
        "upload_time_iso_8601": "2022-06-06T09:42:23.935250Z",
        "url": "https://files.pythonhosted.org/packages/c9/49/7ba82730b53d7eaa5f623e3d2bebeed180cb3fb382479c09312d2a4e0aa7/cs.app.osx.plist-20220606.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20221228": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd34458471cee14d6fed4bb6c23bb4b480a84b0c54743a94afe724e6a12b1db0",
          "md5": "49ee14ae1975b9047ac16569fd21b986",
          "sha256": "0373d13fe2b560e264eb3ab8566ca823caacaa5c25e849b9c55372ab11e1a41a"
        },
        "downloads": -1,
        "filename": "cs.app.osx.plist-20221228-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "49ee14ae1975b9047ac16569fd21b986",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6087,
        "upload_time": "2022-12-27T23:50:32",
        "upload_time_iso_8601": "2022-12-27T23:50:32.374993Z",
        "url": "https://files.pythonhosted.org/packages/dd/34/458471cee14d6fed4bb6c23bb4b480a84b0c54743a94afe724e6a12b1db0/cs.app.osx.plist-20221228-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "816ead5a63d3498b09ea5b34e35914bc1f71efe8b1b5e850b5791e0bc1042420",
          "md5": "84f8d667da1867829eefbbbc18fe30ec",
          "sha256": "85c4946e32c9d67f908a03cb06cd182f99ad45b3e0445b3b01d7364ccd2e16d5"
        },
        "downloads": -1,
        "filename": "cs.app.osx.plist-20221228.tar.gz",
        "has_sig": false,
        "md5_digest": "84f8d667da1867829eefbbbc18fe30ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6233,
        "upload_time": "2022-12-27T23:50:33",
        "upload_time_iso_8601": "2022-12-27T23:50:33.998110Z",
        "url": "https://files.pythonhosted.org/packages/81/6e/ad5a63d3498b09ea5b34e35914bc1f71efe8b1b5e850b5791e0bc1042420/cs.app.osx.plist-20221228.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd34458471cee14d6fed4bb6c23bb4b480a84b0c54743a94afe724e6a12b1db0",
        "md5": "49ee14ae1975b9047ac16569fd21b986",
        "sha256": "0373d13fe2b560e264eb3ab8566ca823caacaa5c25e849b9c55372ab11e1a41a"
      },
      "downloads": -1,
      "filename": "cs.app.osx.plist-20221228-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "49ee14ae1975b9047ac16569fd21b986",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6087,
      "upload_time": "2022-12-27T23:50:32",
      "upload_time_iso_8601": "2022-12-27T23:50:32.374993Z",
      "url": "https://files.pythonhosted.org/packages/dd/34/458471cee14d6fed4bb6c23bb4b480a84b0c54743a94afe724e6a12b1db0/cs.app.osx.plist-20221228-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "816ead5a63d3498b09ea5b34e35914bc1f71efe8b1b5e850b5791e0bc1042420",
        "md5": "84f8d667da1867829eefbbbc18fe30ec",
        "sha256": "85c4946e32c9d67f908a03cb06cd182f99ad45b3e0445b3b01d7364ccd2e16d5"
      },
      "downloads": -1,
      "filename": "cs.app.osx.plist-20221228.tar.gz",
      "has_sig": false,
      "md5_digest": "84f8d667da1867829eefbbbc18fe30ec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6233,
      "upload_time": "2022-12-27T23:50:33",
      "upload_time_iso_8601": "2022-12-27T23:50:33.998110Z",
      "url": "https://files.pythonhosted.org/packages/81/6e/ad5a63d3498b09ea5b34e35914bc1f71efe8b1b5e850b5791e0bc1042420/cs.app.osx.plist-20221228.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}