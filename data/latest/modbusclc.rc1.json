{
  "info": {
    "author": "Duk Kyu Lim",
    "author_email": "hong18s@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Utilities"
    ],
    "description": "# ModbusCLC (Modbus Command Line Client)\n\n__ModbusCLC__ is simple but useful.\n\n[![asciicast](https://asciinema.org/a/3LWW3pORg7ze92aTy3medeWPS.svg)](https://asciinema.org/a/3LWW3pORg7ze92aTy3medeWPS)\n\n## Concept\n* Free\n* Showing beautify\n\n## Features\n* User defined data template about data types \n\n## Installation \n```bash\n$ pip install modbusclc\n```\nor\n```bash\n$ git clone https://github.com/RavenKyu/modbus-command-line-client.git\n$ cd modbus-command-line-client\n$ python setup.py install\n```\n\n### Running \n```bash\n$ python -m modbusclc\n```\n\n### Running Dummy Modbus Server with docker\nIf you use docker, you can try it like below. \n\n#### Build\n```bash\n$ docker build -f dummy-modbus-server/Dockerfile -t dummy-modbus-server:latest .\n``` \nor\n```bash\n$ docker-compose build dummy-modbus-server\n```\n#### Running\nDummy-Modbus-Server Start ...\n```bash\n$ docker run --rm -d -p 502:502 dummy-modbus-server:latest\n```\nor\n```bash\n$ docker-compose run --rm dummy-modbus-server\n```\n\n### Connect to Dummy Server with ModbusCLC\n`ModbusCLC` is set default the address as localhost and port as 502.\n\n```bash\npython -m modbusclc\n```\n\n---\n## Sample\nThere is a simple sample data you can read with `read holding register`. (version `v0.3.0`)\n\n### Things you can do\n#### Help\nAll most each menu can show its help message or usage. \n```bash\n(Cmd) help\n\nDocumented commands (type help <topic>):\n========================================\nexit  help  read_holding_register\n```\n\n#### Read Holding Register\n```bash\n\n(Cmd) read_holding_register -h\nusage:  read_holding_register [-h] [-t TEMPLATE] [-a ADDRESS] [-p PORT] [-i UNIT_ID] [-f FIRST_REGISTER] [-c COUNT]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -t TEMPLATE, --template TEMPLATE\n                        template name\n  -a ADDRESS, --address ADDRESS\n                        host address\n  -p PORT, --port PORT  port\n  -i UNIT_ID, --unit-id UNIT_ID\n                        unit id\n  -f FIRST_REGISTER, --first-register FIRST_REGISTER\n                        first register address\n  -c COUNT, --count COUNT\n                        number of registers\n\n(Cmd) read_holding_register -alocalhost -p502 -c20 -tsample\n2020-10-04 23:39:00 | request  | 192.168.200.124 > 00 00 00 14\n2020-10-04 23:39:00 | respose  | localhost:502   > 28 55 6e 69 74 32 33 2d 41 ff ff fc 19 ff ff ff fa 80 00 00 00 43 7e e2 c6 42 0a c3 26 42 7d 7a eb 41 07 0e 38 ff ff 00 07\n\ndata type      reg  bytes                value               note\n-----------  -----  -------------------  ------------------  -----------------------\n64b sting    40001  556e 6974 3233 2d41  Unit23-A            text label\n16b uint     40005  ffff                 65535               16 bit unsigned integer\n16b int      40006  fc19                 -999                16 bit integer\n32b uint     40007  ffff fffa            4294967290          32 bit unsigned integer\n32b int      40009  8000 0000            -2147483648         32 bit integer\n32b float    40011  437e e2c6            254.88583374023438  32 bit float\n32b float    40013  420a c326            34.690574645996094  32 bit float\n32b float    40015  427d 7aeb            63.37003707885742   32 bit float\n32b float    40017  4107 0e38            8.440971374511719   32 bit float\n8b uint      40019  ff                   255                 8 bit unsigned int\n8b int       40019  ff                   -1                  8 bit int\n8 bits       40020  00                   0000000             8 bits Boolean\n8 bits       40020  07                   0000111             8 bits Boolean\n(Cmd)\n```\n\n## Template\n`Template` is very useful function of this program. The file format is yaml.\n*Template file name is always `templates.yml`*\n\nThis is the sample template for data above. \n```yaml\n---\nsample:\n  - note: text label\n    data_type: B64_STRING\n  - note: 16 bit unsigned integer\n    data_type: B16_UINT\n  - note: 16 bit integer\n    data_type: B16_INT\n  - note: 32 bit unsigned integer\n    data_type: B32_UINT\n  - note: 32 bit integer\n    data_type: B32_INT\n  - note: 32 bit float\n    data_type: B32_FLOAT\n  - note: 32 bit float\n    data_type: B32_FLOAT\n  - note: 32 bit float\n    data_type: B32_FLOAT\n  - note: 32 bit float\n    data_type: B32_FLOAT\n  - note: 8 bit unsigned int\n    data_type: B8_UINT\n  - note: 8 bit int\n    data_type: B8_INT\n  - note: 8 bits Boolean\n    data_type: BIT8\n  - note: 8 bits Boolean\n    data_type: BIT8\n```\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RavenKyu/modbus-command-line-client",
    "keywords": "cli,modbus",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "modbusclc",
    "package_url": "https://pypi.org/project/modbusclc/",
    "platform": "",
    "project_url": "https://pypi.org/project/modbusclc/",
    "project_urls": {
      "Homepage": "https://github.com/RavenKyu/modbus-command-line-client"
    },
    "release_url": "https://pypi.org/project/modbusclc/0.3.0/",
    "requires_dist": [
      "cliparse",
      "pymodbus",
      "PyYaml"
    ],
    "requires_python": "",
    "summary": "Modbus Command Line Client",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8337199,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "670a4af333d9f9e2545688001141f90a8f078e79f20d6fc6970b07f5db592c3c",
          "md5": "057b5365f034260ed07f8137d2216a6d",
          "sha256": "3cd799ab314da790876575bada74ee7555fdbdca00c436509cc88af55603eae6"
        },
        "downloads": -1,
        "filename": "modbusclc-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "057b5365f034260ed07f8137d2216a6d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6832,
        "upload_time": "2020-10-04T15:26:20",
        "upload_time_iso_8601": "2020-10-04T15:26:20.989569Z",
        "url": "https://files.pythonhosted.org/packages/67/0a/4af333d9f9e2545688001141f90a8f078e79f20d6fc6970b07f5db592c3c/modbusclc-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b37c064c72bfd84d309b2826e063b4e7abd4b93f34733c6046bc245d56b9f2e",
          "md5": "b98d7b4700c1f6fa64ad8335a1f758b8",
          "sha256": "d077ea7519e64695848ef996a60b279bd36ab98f3b0453a35267ae3fe9efcf67"
        },
        "downloads": -1,
        "filename": "modbusclc-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b98d7b4700c1f6fa64ad8335a1f758b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6210,
        "upload_time": "2020-10-04T15:26:24",
        "upload_time_iso_8601": "2020-10-04T15:26:24.450724Z",
        "url": "https://files.pythonhosted.org/packages/7b/37/c064c72bfd84d309b2826e063b4e7abd4b93f34733c6046bc245d56b9f2e/modbusclc-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "670a4af333d9f9e2545688001141f90a8f078e79f20d6fc6970b07f5db592c3c",
        "md5": "057b5365f034260ed07f8137d2216a6d",
        "sha256": "3cd799ab314da790876575bada74ee7555fdbdca00c436509cc88af55603eae6"
      },
      "downloads": -1,
      "filename": "modbusclc-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "057b5365f034260ed07f8137d2216a6d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6832,
      "upload_time": "2020-10-04T15:26:20",
      "upload_time_iso_8601": "2020-10-04T15:26:20.989569Z",
      "url": "https://files.pythonhosted.org/packages/67/0a/4af333d9f9e2545688001141f90a8f078e79f20d6fc6970b07f5db592c3c/modbusclc-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b37c064c72bfd84d309b2826e063b4e7abd4b93f34733c6046bc245d56b9f2e",
        "md5": "b98d7b4700c1f6fa64ad8335a1f758b8",
        "sha256": "d077ea7519e64695848ef996a60b279bd36ab98f3b0453a35267ae3fe9efcf67"
      },
      "downloads": -1,
      "filename": "modbusclc-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b98d7b4700c1f6fa64ad8335a1f758b8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6210,
      "upload_time": "2020-10-04T15:26:24",
      "upload_time_iso_8601": "2020-10-04T15:26:24.450724Z",
      "url": "https://files.pythonhosted.org/packages/7b/37/c064c72bfd84d309b2826e063b4e7abd4b93f34733c6046bc245d56b9f2e/modbusclc-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}