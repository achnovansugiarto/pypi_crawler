{
  "info": {
    "author": "Wyatt Howe",
    "author_email": "wyatt@nthparty.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "====\nxors\n====\n\nAbstractable XOR-based threshold secret sharing implementation in pure-Python.\n\n|pypi| |readthedocs| |actions| |coveralls|\n\n.. |pypi| image:: https://badge.fury.io/py/xors.svg\n   :target: https://badge.fury.io/py/xors\n   :alt: PyPI version and link.\n\n.. |readthedocs| image:: https://readthedocs.org/projects/xors/badge/?version=latest\n   :target: https://xors.readthedocs.io/en/latest/?badge=latest\n   :alt: Read the Docs documentation status.\n\n.. |actions| image:: https://github.com/nthparty/xors/workflows/lint-test-cover-docs/badge.svg\n   :target: https://github.com/nthparty/xors/actions/workflows/lint-test-cover-docs.yml\n   :alt: GitHub Actions status.\n\n.. |coveralls| image:: https://coveralls.io/repos/github/nthparty/xors/badge.svg?branch=main\n   :target: https://coveralls.io/github/nthparty/xors?branch=main\n   :alt: Coveralls test coverage summary.\n\nPurpose\n-------\n\n.. |secrets_token_bytes| replace:: ``secrets.token_bytes``\n.. _secrets_token_bytes: https://docs.python.org/3/library/secrets.html#secrets.token_bytes\n\nThis library provides functions and data structures for computing secret shares given an integer input value and for reassembling an integer from its corresponding secret shares.  Unlike `Shamir's Secret Sharing scheme <https://en.wikipedia.org/wiki/Shamir%27s_Secret_Sharing>`__, the XOR-based scheme this library implements does not require any Lagrange interpolation or even finite fields!  Reconstruction is as simple as _t_ group operations - no commutivity necessary!\n\nInstallation and Usage\n----------------------\nThis library is available as a `package on PyPI <https://pypi.org/project/xors>`__::\n\n    python -m pip install xors\n\nThe library can be imported in the usual way::\n\n    import xors\n\nExamples\n^^^^^^^^\nThe library provides functions for transforming a nonnegative integer value into a number of secret shares and for reassembling those shares back into the value they represent::\n\n    >>> ss = xors.shares(123, quantity=3)\n    >>> len(ss)\n    3\n    >>> xors.interpolate(ss)\n    123\n    >>> ss = xors.shares(456, quantity=20, modulus=15485867, threshold=10)\n    >>> xors.interpolate(ss[5:15], threshold=10)\n    456\n\nAddition of shares and multiplication of shares by a scalar are both supported::\n\n    >>> (r, s, t) = xors.shares(123, 3)\n    >>> (u, v, w) = xors.shares(456, 3)\n    >>> xors.interpolate([r + u, s + v, t + w])\n    579\n    >>> (r, s, t) = xors.shares(123, 3)\n    >>> r = r * 2\n    >>> s = s * 2\n    >>> t = t * 2\n    >>> xors.interpolate([r, s, t])\n    246\n\nDevelopment\n-----------\nAll installation and development dependencies are fully specified in ``pyproject.toml``. The ``project.optional-dependencies`` object is used to `specify optional requirements <https://peps.python.org/pep-0621>`__ for various development tasks. This makes it possible to specify additional options (such as ``docs``, ``lint``, and so on) when performing installation using `pip <https://pypi.org/project/pip>`__::\n\n    python -m pip install .[docs,lint]\n\nDocumentation\n^^^^^^^^^^^^^\nThe documentation can be generated automatically from the source files using `Sphinx <https://www.sphinx-doc.org>`__::\n\n    python -m pip install .[docs]\n    cd docs\n    sphinx-apidoc -f -E --templatedir=_templates -o _source .. && make html\n\nTesting and Conventions\n^^^^^^^^^^^^^^^^^^^^^^^\nAll unit tests are executed and their coverage is measured when using `pytest <https://docs.pytest.org>`__ (see the ``pyproject.toml`` file for configuration details)::\n\n    python -m pip install .[test]\n    python -m pytest -W ignore::UserWarning\n\nAlternatively, all unit tests are included in the module itself and can be executed using `doctest <https://docs.python.org/3/library/doctest.html>`__::\n\n    python src/xors/xors.py -v\n\nStyle conventions are enforced using `Pylint <https://pylint.pycqa.org>`__::\n\n    python -m pip install .[lint]\n    python -m pylint src/xors\n\nContributions\n^^^^^^^^^^^^^\nIn order to contribute to the source code, open an issue or submit a pull request on the `GitHub page <https://github.com/nthparty/xors>`__ for this library.\n\nVersioning\n^^^^^^^^^^\nBeginning with version 1.0.0, the version number format for this library and the changes to the library associated with version number increments conform with `Semantic Versioning 2.0.0 <https://semver.org/#semantic-versioning-200>`__.\n\nPublishing\n^^^^^^^^^^\nThis library can be published as a `package on PyPI <https://pypi.org/project/xors>`__ by a package maintainer. First, install the dependencies required for packaging and publishing::\n\n    python -m pip install .[publish]\n\nEnsure that the correct version number appears in ``pyproject.toml``, and that any links in this README document to the Read the Docs documentation of this package (or its dependencies) have appropriate version numbers. Also ensure that the Read the Docs project for this library has an `automation rule <https://docs.readthedocs.io/en/stable/automation-rules.html>`__ that activates and sets as the default all tagged versions. Create and push a tag for this version (replacing ``?.?.?`` with the version number)::\n\n    git tag ?.?.?\n    git push origin ?.?.?\n\nRemove any old build/distribution files. Then, package the source into a distribution archive::\n\n    rm -rf build dist src/*.egg-info\n    python -m build --sdist --wheel .\n\nFinally, upload the package distribution archive to `PyPI <https://pypi.org>`__::\n\n    python -m twine upload dist/*\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xors",
    "package_url": "https://pypi.org/project/xors/",
    "platform": null,
    "project_url": "https://pypi.org/project/xors/",
    "project_urls": {
      "Documentation": "https://xors.readthedocs.io",
      "Repository": "https://github.com/nthparty/xors"
    },
    "release_url": "https://pypi.org/project/xors/0.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Abstractable XOR-based threshold secret sharing implementation in pure-Python.",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17384481,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a46b4fc4701455c0c782eea04cd6b7d38e57c252ac8330166132becc6622b30e",
          "md5": "51c178944444ea710046548a045d6bae",
          "sha256": "76e0e1c6657629314e9da64828343d2ac80302ae72d73d74b183c0d29c1c8d2e"
        },
        "downloads": -1,
        "filename": "xors-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "51c178944444ea710046548a045d6bae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4641,
        "upload_time": "2023-03-21T18:22:32",
        "upload_time_iso_8601": "2023-03-21T18:22:32.915959Z",
        "url": "https://files.pythonhosted.org/packages/a4/6b/4fc4701455c0c782eea04cd6b7d38e57c252ac8330166132becc6622b30e/xors-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a46b4fc4701455c0c782eea04cd6b7d38e57c252ac8330166132becc6622b30e",
        "md5": "51c178944444ea710046548a045d6bae",
        "sha256": "76e0e1c6657629314e9da64828343d2ac80302ae72d73d74b183c0d29c1c8d2e"
      },
      "downloads": -1,
      "filename": "xors-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "51c178944444ea710046548a045d6bae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4641,
      "upload_time": "2023-03-21T18:22:32",
      "upload_time_iso_8601": "2023-03-21T18:22:32.915959Z",
      "url": "https://files.pythonhosted.org/packages/a4/6b/4fc4701455c0c782eea04cd6b7d38e57c252ac8330166132becc6622b30e/xors-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}