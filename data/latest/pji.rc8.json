{
  "info": {
    "author": "HansBug",
    "author_email": "hansbug@buaa.edu.cn",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pji\n\n[![PyPI](https://img.shields.io/pypi/v/pji)](https://pypi.org/project/pji/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pji)](https://pypi.org/project/pji/)\n![Loc](https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/HansBug/fe11c430393128dda3a998423a95ed57/raw/loc.json)\n![Comments](https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/HansBug/fe11c430393128dda3a998423a95ed57/raw/comments.json)\n\n[![Docs Deploy](https://github.com/HansBug/pji/workflows/Docs%20Deploy/badge.svg)](https://github.com/HansBug/pji/actions?query=workflow%3A%22Docs+Deploy%22)\n[![Code Test](https://github.com/HansBug/pji/workflows/Code%20Test/badge.svg)](https://github.com/HansBug/pji/actions?query=workflow%3A%22Code+Test%22)\n[![Badge Creation](https://github.com/HansBug/pji/workflows/Badge%20Creation/badge.svg)](https://github.com/HansBug/pji/actions?query=workflow%3A%22Badge+Creation%22)\n[![Package Release](https://github.com/HansBug/pji/workflows/Package%20Release/badge.svg)](https://github.com/HansBug/pji/actions?query=workflow%3A%22Package+Release%22)\n[![codecov](https://codecov.io/gh/HansBug/pji/branch/main/graph/badge.svg?token=XJVDP4EFAT)](https://codecov.io/gh/HansBug/pji)\n\n[![GitHub stars](https://img.shields.io/github/stars/HansBug/pji)](https://github.com/HansBug/pji/stargazers)\n[![GitHub forks](https://img.shields.io/github/forks/HansBug/pji)](https://github.com/HansBug/pji/network)\n![GitHub commit activity](https://img.shields.io/github/commit-activity/m/HansBug/pji)\n[![GitHub issues](https://img.shields.io/github/issues/HansBug/pji)](https://github.com/HansBug/pji/issues)\n[![GitHub pulls](https://img.shields.io/github/issues-pr/HansBug/pji)](https://github.com/HansBug/pji/pulls)\n[![Contributors](https://img.shields.io/github/contributors/HansBug/pji)](https://github.com/HansBug/pji/graphs/contributors)\n[![GitHub license](https://img.shields.io/github/license/HansBug/pji)](https://github.com/HansBug/pji/blob/master/LICENSE)\n\nAn new easy-to-use python interaction for judgement written by Python.\n\nSome more features are supported, such as interaction test.\n\n## Installation\n\nYou can simply install it with `pip` command line from the official PyPI site.\n\n```\npip install pji\n```\n\nFor more information about installation, you can refer to the [installation guide](https://hansbug.github.io/pji/main/tutorials/installation/index.html).\n\n## Documentation\n\nThe detailed documentation are hosted on [https://hansbug.github.io/pji](https://hansbug.github.io/pji).\n\nOnly english version is provided now, the chinese documentation is still under development.\n\n## Quick Start\n\n`pji` uses fork to create child processes, pipe for inter-process communication, and the linux permission system to ensure evaluation security. \n\nAs a result, **`pji` only works on Linux systems, and you must have root permissions to use it**.\n\n### Use With Command-Line\n\n`pji` is used based on configuration files, and the command line help information is as follows\n\n```shell\npji -h\n```\n\nOutput as follows\n\n```\nUsage: pji [OPTIONS]\n\nOptions:\n  -v, --version             Show package's version information.\n  -s, --script FILE         Path of pji script.  [default: pscript.yml]\n  -t, --task TEXT           Task going to be executed.  [default: main]\n  -e, --environ TEXT        Environment variables (loaded before global\n                            config).\n\n  -E, --environ_after TEXT  Environment variables (loaded after global\n                            config).\n\n  -h, --help                Show this message and exit.\n\n```\n\n### A Simple Example\n\nHere's an simple example. In this case, the test data is generated automatically, and then the running test of the script to be tested is performed with restricted permissions, and the results are sent back and logs are logged.\n\nHere is the configuration file `test_dispatch.yml`.\n\n```yml\nglobal:\n  environ:\n    PATH: /root:${PATH}\n    INPUT: 2 3\n  use_sys_env:\n    - PATH\n    - LC_ALL\n    - LANG\ntasks:\n  run_python:\n    sections:\n      - name: get_test_info\n        inputs:\n          - \"copy:test_script.py:test_script.py\"\n        outputs:\n          - \"tag:wc_result.txt:wc\"\n          - \"tag:input_result.txt:input\"\n        infos:\n          wc: \"tag:wc\"\n          input: \"tag:input\"\n        info_dump: \"test_info.txt\"\n        commands:\n          - args: \"cat test_script.py | wc -l\"\n            stdout: wc_result.txt\n          - args: \"echo ${INPUT}\"\n            stdout: input_result.txt\n      - name: generate_base64\n        outputs:\n          - \"tag:base64.txt:b64\"\n        infos:\n          b64: \"tag:b64\"\n        commands:\n          - args: \"echo ${INPUT} | base64\"\n            stdout: base64.txt\n      - name: run_result\n        identification: nobody\n        inputs:\n          - \"copy:test_script.py:test_script.py:r--:nobody\"\n          - \"tag:b64:base64.txt:r--:nobody\"\n        outputs:\n          - \"tag:result.txt:result\"\n          - \"copy:result.txt:test_result.txt\"\n        infos:\n          result: \"tag:result\"\n        commands:\n          - args: \"cat base64.txt | python test_script.py\"\n            stdout: result.txt\n          - 'true'\n```\n\nScript file going to be tested`test_script.py`\n\n```python\nimport base64\n\nif __name__ == '__main__':\n    _line = base64.b64decode(input()).decode()\n    print(sum([int(item.strip()) for item in _line.split(' ') if item.strip()]))\n\n```\n\nPlace the abovementioned files to directory`/root/123`, and then run the following `pji` command.\n\n```shell\npji -s /root/123/test_dispatch.yml -t run_python\n```\n\nThe output should be\n\n```\nSection 'get_test_info' start ...\nCoping file from '/root/123/test_script.py' to '/tmp/tmp6rsk6t2o/test_script.py' ... COMPLETE\nRunning 'cat test_script.py | wc -l' ... SUCCESS, time: 0.002s / 0.002s, memory: 18.875 MiB\nRunning 'echo ${INPUT}' ... SUCCESS, time: 0.004s / 0.003s, memory: 19.125 MiB\nSaving file from '/tmp/tmp6rsk6t2o/wc_result.txt' to tag 'wc' ... COMPLETE\nSaving file from '/tmp/tmp6rsk6t2o/input_result.txt' to tag 'input' ... COMPLETE\nCollecting result information ... COMPLETE\nDumping result information to '/root/123/test_info.txt' ... COMPLETE\nSection 'get_test_info' execute completed!\n\nSection 'generate_base64' start ...\nRunning 'echo ${INPUT} | base64' ... SUCCESS, time: 0.003s / 0.002s, memory: 19.15625 MiB\nSaving file from '/tmp/tmp_n5ftp5d/base64.txt' to tag 'b64' ... COMPLETE\nCollecting result information ... COMPLETE\nSection 'generate_base64' execute completed!\n\nSection 'run_result' start ...\nCoping file from '/root/123/test_script.py' to '/tmp/tmphcbmt0j9/test_script.py' ... COMPLETE\nLoading tag 'b64' to '/tmp/tmphcbmt0j9/base64.txt' ... COMPLETE\nRunning 'cat base64.txt | python test_script.py' ... SUCCESS, time: 0.025s / 0.030s, memory: 19.16796875 MiB\nRunning 'true' ... SUCCESS, time: 0.000s / 0.001s, memory: 19.18359375 MiB\nSaving file from '/tmp/tmphcbmt0j9/result.txt' to tag 'result' ... COMPLETE\nCoping file from '/tmp/tmphcbmt0j9/result.txt' to '/root/123/test_result.txt' ... COMPLETE\nCollecting result information ... COMPLETE\nSection 'run_result' execute completed!\n\nTask success.\n\n```\n\nThe file passed back`/root/123/result.txt`\n\n```\n5\n```\n\n\n\nFurthermore, when this command line, which is slightly different from the one above, is executed\n\n```shell\npji -s /root/123/test_dispatch.yml -t run_python -E \"INPUT=1 2 3 4 5 6 7\"\n```\n\nThe content of `/root/123/result.txt` should be\n\n```\n28\n```\n\n\n\nAnd, if you need the full running information, just use the following command with `-i` option\n\n```shell\npji -s /root/123/test_dispatch.yml -t run_python -E \"INPUT=1 2 3 4 5 6 7\" -i test_info.json\n```\n\nAn extra log file `test_info.json` will be exported\n\n```json\n{\n    \"ok\": true,\n    \"sections\": [\n        {\n            \"commands\": [\n                {\n                    \"completed\": true,\n                    \"limit\": {\n                        \"max_cpu_time\": null,\n                        \"max_memory\": null,\n                        \"max_output_size\": null,\n                        \"max_process_number\": null,\n                        \"max_real_time\": null,\n                        \"max_stack\": null\n                    },\n                    \"ok\": true,\n                    \"result\": {\n                        \"cpu_time\": 0.000896,\n                        \"exitcode\": 0,\n                        \"max_memory\": 19709952.0,\n                        \"real_time\": 0.002176523208618164,\n                        \"signal\": null\n                    },\n                    \"status\": \"SUCCESS\"\n                },\n                {\n                    \"completed\": true,\n                    \"limit\": {\n                        \"max_cpu_time\": null,\n                        \"max_memory\": null,\n                        \"max_output_size\": null,\n                        \"max_process_number\": null,\n                        \"max_real_time\": null,\n                        \"max_stack\": null\n                    },\n                    \"ok\": true,\n                    \"result\": {\n                        \"cpu_time\": 0.002518,\n                        \"exitcode\": 0,\n                        \"max_memory\": 19881984.0,\n                        \"real_time\": 0.0010895729064941406,\n                        \"signal\": null\n                    },\n                    \"status\": \"SUCCESS\"\n                }\n            ],\n            \"information\": {\n                \"input\": \"1 2 3 4 5 6 7\\n\",\n                \"wc\": \"5\\n\"\n            },\n            \"name\": \"get_test_info\",\n            \"ok\": true\n        },\n        {\n            \"commands\": [\n                {\n                    \"completed\": true,\n                    \"limit\": {\n                        \"max_cpu_time\": null,\n                        \"max_memory\": null,\n                        \"max_output_size\": null,\n                        \"max_process_number\": null,\n                        \"max_real_time\": null,\n                        \"max_stack\": null\n                    },\n                    \"ok\": true,\n                    \"result\": {\n                        \"cpu_time\": 0.002568,\n                        \"exitcode\": 0,\n                        \"max_memory\": 19922944.0,\n                        \"real_time\": 0.0018069744110107422,\n                        \"signal\": null\n                    },\n                    \"status\": \"SUCCESS\"\n                }\n            ],\n            \"information\": {\n                \"b64\": \"MSAyIDMgNCA1IDYgNwo=\\n\"\n            },\n            \"name\": \"generate_base64\",\n            \"ok\": true\n        },\n        {\n            \"commands\": [\n                {\n                    \"completed\": true,\n                    \"limit\": {\n                        \"max_cpu_time\": null,\n                        \"max_memory\": null,\n                        \"max_output_size\": null,\n                        \"max_process_number\": null,\n                        \"max_real_time\": null,\n                        \"max_stack\": null\n                    },\n                    \"ok\": true,\n                    \"result\": {\n                        \"cpu_time\": 0.023656999999999997,\n                        \"exitcode\": 0,\n                        \"max_memory\": 19947520.0,\n                        \"real_time\": 0.027228593826293945,\n                        \"signal\": null\n                    },\n                    \"status\": \"SUCCESS\"\n                },\n                {\n                    \"completed\": true,\n                    \"limit\": {\n                        \"max_cpu_time\": null,\n                        \"max_memory\": null,\n                        \"max_output_size\": null,\n                        \"max_process_number\": null,\n                        \"max_real_time\": null,\n                        \"max_stack\": null\n                    },\n                    \"ok\": true,\n                    \"result\": {\n                        \"cpu_time\": 0.001723,\n                        \"exitcode\": 0,\n                        \"max_memory\": 19955712.0,\n                        \"real_time\": 0.0009958744049072266,\n                        \"signal\": null\n                    },\n                    \"status\": \"SUCCESS\"\n                }\n            ],\n            \"information\": {\n                \"result\": \"28\\n\"\n            },\n            \"name\": \"run_result\",\n            \"ok\": true\n        }\n    ]\n}\n```\n\n\n\n### Use In Script\n\n`pji` can be used like the above method with native python.\n\nFor example, we can build the following script to run the test mentioned above\n\n```python\nimport codecs\n\nfrom pji.entry import load_pji_script\n\nif __name__ == '__main__':\n    _script = load_pji_script('/root/123/test_dispatch.yml')\n    _success, _result = _script('run_python')\n\n    print(_success)\n    print(_result)\n\n    with codecs.open('/root/123/test_result.txt', 'r') as rf:\n        print(rf.read())\n\n```\n\nThe output should be\n\n```\nTrue\n[('get_test_info', (True, [<RunResult status: SUCCESS>, <RunResult status: SUCCESS>], {'wc': '5\\n', 'input': '2 3\\n'})), ('generate_base64', (True, [<RunResult status: SUCCESS>], {'b64': 'MiAzCg==\\n'})), ('run_result', (True, [<RunResult status: SUCCESS>, <RunResult status: SUCCESS>], {'result': '5\\n'}))]\n5\n```\n\n\n\nAnother case for extra environment variable attached\n\n```python\nimport codecs\n\nfrom pji.entry import load_pji_script\n\nif __name__ == '__main__':\n    _script = load_pji_script('/root/123/test_dispatch.yml')\n    _success, _result = _script('run_python', environ_after={'INPUT': '1 2 3 4 5 6 7'})\n\n    print(_success)\n    print(_result)\n\n    with codecs.open('/root/123/test_result.txt', 'r') as rf:\n        print(rf.read())\n\n```\n\nThe output should be\n\n```\nTrue\n[('get_test_info', (True, [<RunResult status: SUCCESS>, <RunResult status: SUCCESS>], {'wc': '5\\n', 'input': '1 2 3 4 5 6 7\\n'})), ('generate_base64', (True, [<RunResult status: SUCCESS>], {'b64': 'MSAyIDMgNCA1IDYgNwo=\\n'})), ('run_result', (True, [<RunResult status: SUCCESS>, <RunResult status: SUCCESS>], {'result': '28\\n'}))]\n28\n```\n\n\n## Run Unittest / Building\n\n```bash\n# create dev container\nmake run_dev IMAGE_DEV=python:3.6\n\n# after enter the docker container\n./install.sh   # install requirements with chinese mirror\nsource env.sh  # add pji cli's environment\nmake unittest  # run unittest\nmake build     # build a standalone cli, placed at 'dist/pji'\n```\n\n\n## License\n\n`pji` released under the Apache 2.0 license.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hansbug/pji",
    "keywords": "Python library which can do complex test in educational area.",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pji",
    "package_url": "https://pypi.org/project/pji/",
    "platform": null,
    "project_url": "https://pypi.org/project/pji/",
    "project_urls": {
      "Homepage": "https://github.com/hansbug/pji"
    },
    "release_url": "https://pypi.org/project/pji/0.2.2/",
    "requires_dist": [
      "bitmath (>=1.3.3.1)",
      "pysyslimit (~=0.5.0)",
      "where (>=1.0.2)",
      "pytimeparse (>=1.1.8)",
      "chardet (>=3.0.4)",
      "pyyaml (>=5.3.1)",
      "click (>=7.1.0)",
      "colorama (~=0.4)",
      "hbutils (>=0.6.10)",
      "pyinstaller (<5,>=4.7) ; extra == 'build'",
      "sphinx (~=3.2.0) ; extra == 'doc'",
      "sphinx-rtd-theme (~=0.4.3) ; extra == 'doc'",
      "enum-tools ; extra == 'doc'",
      "sphinx-toolbox ; extra == 'doc'",
      "plantumlcli (>=0.0.4) ; extra == 'doc'",
      "packaging ; extra == 'doc'",
      "sphinx-multiversion (~=0.2.4) ; extra == 'doc'",
      "where (~=1.0.2) ; extra == 'doc'",
      "easydict (<2,>=1.7) ; extra == 'doc'",
      "coverage (>=5) ; extra == 'test'",
      "mock (>=4.0.3) ; extra == 'test'",
      "flake8 (~=3.5) ; extra == 'test'",
      "pytest (~=6.2.5) ; extra == 'test'",
      "pytest-cov (~=3.0.0) ; extra == 'test'",
      "pytest-mock (~=3.6.1) ; extra == 'test'",
      "pytest-rerunfailures (~=10.2) ; extra == 'test'",
      "pytest-timeout (~=2.0.2) ; extra == 'test'",
      "where (>=1.0.2) ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "Python library which can do complex test in educational area.",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14041754,
  "releases": {
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0886b99aa5c8b454206b6b899ffbe87cc618930830773667f56afdb83adbf61",
          "md5": "0651ba76fcf41f807b0f692f0e18e850",
          "sha256": "24c81f3725eb5db9a0dd35b46f24ba76fa3d5c346d2bbd623aa410848e73da0c"
        },
        "downloads": -1,
        "filename": "pji-0.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0651ba76fcf41f807b0f692f0e18e850",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 80020,
        "upload_time": "2022-02-01T15:28:33",
        "upload_time_iso_8601": "2022-02-01T15:28:33.958785Z",
        "url": "https://files.pythonhosted.org/packages/d0/88/6b99aa5c8b454206b6b899ffbe87cc618930830773667f56afdb83adbf61/pji-0.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "600716bd3f3eda2f48e1c0b4b2f135d456fa5e471f55a40afb3bb39fc4f364d6",
          "md5": "4652f7d0aa1afd2b1cff10d3b73554ec",
          "sha256": "f0c15acaf3d0e6cdf8ccc68272a8fdb9707fcd1e7e3431bd8895f5e583127320"
        },
        "downloads": -1,
        "filename": "pji-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "4652f7d0aa1afd2b1cff10d3b73554ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 50567,
        "upload_time": "2022-02-01T15:28:35",
        "upload_time_iso_8601": "2022-02-01T15:28:35.142418Z",
        "url": "https://files.pythonhosted.org/packages/60/07/16bd3f3eda2f48e1c0b4b2f135d456fa5e471f55a40afb3bb39fc4f364d6/pji-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0d9234999249b2027d1f067964ee870ed6e87791208d3d8abc90102d519d539",
          "md5": "62097e7aafd233d430eaa45008116f69",
          "sha256": "9f3b18658085bd74a5dbbecead6cd226238af57a8e91838cc71054f337ba656b"
        },
        "downloads": -1,
        "filename": "pji-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "62097e7aafd233d430eaa45008116f69",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 80328,
        "upload_time": "2022-01-29T08:20:12",
        "upload_time_iso_8601": "2022-01-29T08:20:12.672924Z",
        "url": "https://files.pythonhosted.org/packages/e0/d9/234999249b2027d1f067964ee870ed6e87791208d3d8abc90102d519d539/pji-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e2b4508a6ace9f2209f0e785639aa4f28d5f69c730621944a3acaba2266e204",
          "md5": "c227914dd0ef0d63662fa7597d42daaf",
          "sha256": "eef5f3934cf9999471283150e0afbc91303d6aa885438b6f0954482317ed82df"
        },
        "downloads": -1,
        "filename": "pji-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c227914dd0ef0d63662fa7597d42daaf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 50588,
        "upload_time": "2022-01-29T08:20:14",
        "upload_time_iso_8601": "2022-01-29T08:20:14.287942Z",
        "url": "https://files.pythonhosted.org/packages/4e/2b/4508a6ace9f2209f0e785639aa4f28d5f69c730621944a3acaba2266e204/pji-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0060558732fedfb8f6fe8ccec9ba85306cfb4ff491f7e9aabde15ebd6141861b",
          "md5": "8b1fa4543aae418934e2b65d4634b09d",
          "sha256": "fb1ee734c85ed01894f9058f371f67385b561edc9db8f653ea41289a75b0b150"
        },
        "downloads": -1,
        "filename": "pji-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b1fa4543aae418934e2b65d4634b09d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 80528,
        "upload_time": "2022-01-30T05:37:01",
        "upload_time_iso_8601": "2022-01-30T05:37:01.691781Z",
        "url": "https://files.pythonhosted.org/packages/00/60/558732fedfb8f6fe8ccec9ba85306cfb4ff491f7e9aabde15ebd6141861b/pji-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a8c311a6e3b845110de0cc3f86f193e0e7007969f3dec226c12c64c6250a5c4",
          "md5": "476d3ac728f1fcdc26ed0b31102402b3",
          "sha256": "995b0969d3edeb3a8557355dedd9c5f55108268f46de284ce458fa25afc5a6b1"
        },
        "downloads": -1,
        "filename": "pji-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "476d3ac728f1fcdc26ed0b31102402b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 50940,
        "upload_time": "2022-01-30T05:37:03",
        "upload_time_iso_8601": "2022-01-30T05:37:03.281619Z",
        "url": "https://files.pythonhosted.org/packages/8a/8c/311a6e3b845110de0cc3f86f193e0e7007969f3dec226c12c64c6250a5c4/pji-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6163e4f640f19a87af4daeac2b5afe6464def45f9e14c83b7294a1c26704eed3",
          "md5": "884309f11935b65d37a522ddbb8238f5",
          "sha256": "4c1d4dfefbf5bb8828e0dce290b612554b3d61dbb09a8cd1d9580eb690ddf2cf"
        },
        "downloads": -1,
        "filename": "pji-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "884309f11935b65d37a522ddbb8238f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 80527,
        "upload_time": "2022-01-30T10:44:55",
        "upload_time_iso_8601": "2022-01-30T10:44:55.053164Z",
        "url": "https://files.pythonhosted.org/packages/61/63/e4f640f19a87af4daeac2b5afe6464def45f9e14c83b7294a1c26704eed3/pji-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "772ed0e4b4efe53e6c00d91ded9ff8de3e1fd40490b4ba855782044eb6144350",
          "md5": "c3146a1cd9594772db665a9d767f7c07",
          "sha256": "529487e1a639bdeea3dc8b523ed348f186ab31020132b765890a3b5cf3995f4b"
        },
        "downloads": -1,
        "filename": "pji-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "c3146a1cd9594772db665a9d767f7c07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 50917,
        "upload_time": "2022-01-30T10:44:56",
        "upload_time_iso_8601": "2022-01-30T10:44:56.337567Z",
        "url": "https://files.pythonhosted.org/packages/77/2e/d0e4b4efe53e6c00d91ded9ff8de3e1fd40490b4ba855782044eb6144350/pji-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7ef6743704782562999dcd6354736f78f3ebc374885893bd3e496d6c635f02c",
          "md5": "adccafce354dd4b26989551fd2842943",
          "sha256": "2f664c48bdcdf8df5b233d559ef546a79e6c9b68ee5a0808835f6d49c0ee5502"
        },
        "downloads": -1,
        "filename": "pji-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "adccafce354dd4b26989551fd2842943",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 80525,
        "upload_time": "2022-02-01T06:50:54",
        "upload_time_iso_8601": "2022-02-01T06:50:54.200379Z",
        "url": "https://files.pythonhosted.org/packages/e7/ef/6743704782562999dcd6354736f78f3ebc374885893bd3e496d6c635f02c/pji-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bd6218b2dd516451bfdb7b963974f5d1006afac4f617e4c05aa158f0605c4c9",
          "md5": "0d76d6cb942b565b42f4931f1e91cea0",
          "sha256": "5c4ffd63773d08361f6c95f5e3de9e3b62172f090d198c62e386aa1f618542a4"
        },
        "downloads": -1,
        "filename": "pji-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "0d76d6cb942b565b42f4931f1e91cea0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 50913,
        "upload_time": "2022-02-01T06:50:55",
        "upload_time_iso_8601": "2022-02-01T06:50:55.663673Z",
        "url": "https://files.pythonhosted.org/packages/5b/d6/218b2dd516451bfdb7b963974f5d1006afac4f617e4c05aa158f0605c4c9/pji-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dc2053eb88ac8df5a21c41cb8420cd883a26cdd7274782a6b5d126028fcf469",
          "md5": "b85216b3f784ac4f51c6092b2db47909",
          "sha256": "ae846889284155b60625de0b7dd05133b891118843d5293a6ace027516f506d4"
        },
        "downloads": -1,
        "filename": "pji-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b85216b3f784ac4f51c6092b2db47909",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 80409,
        "upload_time": "2022-02-03T15:25:13",
        "upload_time_iso_8601": "2022-02-03T15:25:13.550775Z",
        "url": "https://files.pythonhosted.org/packages/0d/c2/053eb88ac8df5a21c41cb8420cd883a26cdd7274782a6b5d126028fcf469/pji-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c660f1a584352b03c42408bc226482ee719b76d4af63374cb285a932ffc7c6a",
          "md5": "decf612707764408bd74fb154d95a664",
          "sha256": "9ca6570f2381a41f243f8d14a15bc0fad7d5ac9b6e64035b4e5d2235b2d8adfe"
        },
        "downloads": -1,
        "filename": "pji-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "decf612707764408bd74fb154d95a664",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 50910,
        "upload_time": "2022-02-03T15:25:14",
        "upload_time_iso_8601": "2022-02-03T15:25:14.799022Z",
        "url": "https://files.pythonhosted.org/packages/2c/66/0f1a584352b03c42408bc226482ee719b76d4af63374cb285a932ffc7c6a/pji-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9d919a6b807a90d01ac1e02a6c35a07c1431e868f1324f2fdfe40f514b86562",
          "md5": "641d915c1529a380f7d3ae37ad634be1",
          "sha256": "af66acddbbb1de36c1fe1b727b6cf761e2ddffe115c08df8ba44d161129010f4"
        },
        "downloads": -1,
        "filename": "pji-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "641d915c1529a380f7d3ae37ad634be1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 80416,
        "upload_time": "2022-05-28T16:03:36",
        "upload_time_iso_8601": "2022-05-28T16:03:36.410536Z",
        "url": "https://files.pythonhosted.org/packages/c9/d9/19a6b807a90d01ac1e02a6c35a07c1431e868f1324f2fdfe40f514b86562/pji-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be8548508b8b7ee1ee5303b05544f4f775d690426c79aa8d53d648329de37c7f",
          "md5": "f7f4bea4dceaf172fcd0d038010846d3",
          "sha256": "d2b32fda833cdcefc65b5678f229bbd4e7e8190fecc066676ad99e1d996d1910"
        },
        "downloads": -1,
        "filename": "pji-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f7f4bea4dceaf172fcd0d038010846d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 50900,
        "upload_time": "2022-05-28T16:03:38",
        "upload_time_iso_8601": "2022-05-28T16:03:38.269188Z",
        "url": "https://files.pythonhosted.org/packages/be/85/48508b8b7ee1ee5303b05544f4f775d690426c79aa8d53d648329de37c7f/pji-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bb17fb6028b0f00daeb43fecb31152cd79d57a57fde337a829ddfb25d9965b5",
          "md5": "09d688ff267d1e4565cd3524b7246be3",
          "sha256": "37d3426251c6d6d90c02b5e3a262a09c397fb8e45b0a7d23e447c1f0ff52a291"
        },
        "downloads": -1,
        "filename": "pji-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09d688ff267d1e4565cd3524b7246be3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 82156,
        "upload_time": "2022-06-06T05:23:48",
        "upload_time_iso_8601": "2022-06-06T05:23:48.463037Z",
        "url": "https://files.pythonhosted.org/packages/0b/b1/7fb6028b0f00daeb43fecb31152cd79d57a57fde337a829ddfb25d9965b5/pji-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "031ea55f59c0102858bf12fe667aa5923bc7f7e4d5847a634fcb0c43390eee9e",
          "md5": "9d56c7c749ef2a4277b8ba00bdce09f9",
          "sha256": "60e81072c74171ca6c5ccb02fc5e8b06c2c1a1bf7df467d4b4a0d002f58e8aa0"
        },
        "downloads": -1,
        "filename": "pji-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9d56c7c749ef2a4277b8ba00bdce09f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 52423,
        "upload_time": "2022-06-06T05:23:50",
        "upload_time_iso_8601": "2022-06-06T05:23:50.517206Z",
        "url": "https://files.pythonhosted.org/packages/03/1e/a55f59c0102858bf12fe667aa5923bc7f7e4d5847a634fcb0c43390eee9e/pji-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0bb17fb6028b0f00daeb43fecb31152cd79d57a57fde337a829ddfb25d9965b5",
        "md5": "09d688ff267d1e4565cd3524b7246be3",
        "sha256": "37d3426251c6d6d90c02b5e3a262a09c397fb8e45b0a7d23e447c1f0ff52a291"
      },
      "downloads": -1,
      "filename": "pji-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "09d688ff267d1e4565cd3524b7246be3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 82156,
      "upload_time": "2022-06-06T05:23:48",
      "upload_time_iso_8601": "2022-06-06T05:23:48.463037Z",
      "url": "https://files.pythonhosted.org/packages/0b/b1/7fb6028b0f00daeb43fecb31152cd79d57a57fde337a829ddfb25d9965b5/pji-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "031ea55f59c0102858bf12fe667aa5923bc7f7e4d5847a634fcb0c43390eee9e",
        "md5": "9d56c7c749ef2a4277b8ba00bdce09f9",
        "sha256": "60e81072c74171ca6c5ccb02fc5e8b06c2c1a1bf7df467d4b4a0d002f58e8aa0"
      },
      "downloads": -1,
      "filename": "pji-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9d56c7c749ef2a4277b8ba00bdce09f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 52423,
      "upload_time": "2022-06-06T05:23:50",
      "upload_time_iso_8601": "2022-06-06T05:23:50.517206Z",
      "url": "https://files.pythonhosted.org/packages/03/1e/a55f59c0102858bf12fe667aa5923bc7f7e4d5847a634fcb0c43390eee9e/pji-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}