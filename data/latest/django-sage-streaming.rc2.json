{
  "info": {
    "author": "Sage Team",
    "author_email": "mail@sageteam.org",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "Django Sage Streaming\n=====================\n\ndjango-sage-streaming is a package based on Django Web Framework & Django Rest Framework for video streaming.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe Latest version of `django-sage-streaming <https://django-sage-streaming.readthedocs.io/>`__ documentation\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n\n|SageTeam| |PyPI release| |Supported Python versions| |Supported Django\nversions| |Documentation| |Test|\n\n-  `Project Detail <#project-detail>`__\n-  `installation <#installation>`__\n-  `Get Started <#getting-started>`__\n-  `Admin <#admin>`__\n-  `Settings <#settings>`__\n-  `Front-End implementation <#frontend>`__\n\nProject Detail\n--------------\n\nYou can find all technologies we used in our project into these files:\n\\* Version: 1.0.0 \\* Frameworks: - Django 3.2.5 \\* Libraries: - Django\nrest framework 3.12.4 \\* Language: Python 3.9.4\n\nInstallation\n------------\n\nFirst install package\n\n.. code:: shell\n\n    $ pip install django-sage-streaming\n\nThen add ``sage_stream`` to INSTALLED\\_APPS in settings.py\n\n.. code:: python\n\n    INSTALLED_APPS = [\n      ...\n      'sage_stream',\n      ...\n    ]\n\nAlso make sure you have ``rest_framework`` in INSTALLED\\_APPS\n\n.. code:: python\n\n    INSTALLED_APPS = [\n      ...\n      'rest_framework',\n      ...\n    ]\n\nGetting Started\n---------------\n\n``django-sage-streaming`` provides two ways that you can stream videos\nover HTTP: 1. built-in API View: for using built-in view add\n``sage_stream.api.urls`` to urls.py\n\n.. code:: python\n\n    from django.urls import path, include\n    urlpatterns = [\n      ...\n      path('api/', include('sage_stream.api.urls')),\n      ...\n    ]\n\nNow you can access the stream api here:\n``localhost:8000/api/stream?path=<you_video_path>``\n\n`The settings of built-in view is available here <#settings>`__\n\n2. create custom views: you can use stream functions in your application\n\n.. code:: python\n\n    from sage_stream.utils.stream_services import get_streaming_response\n\n    response = get_streaming_response(\n        path=video_path, # path to video\n        range_header=range_header, # range header extracted from request\n        range_re=range_re, # range header regex pattern (default is available in sage_stream.settings.STREAM_RANGE_HEADER_REGEX_PATTERN)\n        max_load_volume=max_load_volume,  # the maximum volume of the response body\n    )\n\nOther functions you can use\n\n.. code:: python\n\n    from sage_stream.utils.file_services import file_iterator  # iterates in given file chunk by chunk in generator mode\n    from sage_stream.utils.log_services import log_watch_request  # creates WatchLog instance with given data\n\n    # usage examples\n\n    # log\n    log_watch_request(video_path, request.user.is_authenticated, ip, request.user)\n\n    # file iterator\n    resp = StreamingHttpResponse(\n        file_iterator(\n            path,\n            offset=first_byte,\n            length=length\n        ),\n        status=206,\n        content_type=content_type\n    )\n\nAdmin\n-----\n\n``django-sage-streaming`` also has logging system for watching requests\n\nIt is available in admin panel when you add ``sage_stream`` to\nINSTALLED\\_APPS\n\nSettings\n--------\n\nHere are the parameters that you can set from setting:\n\n+------------------------------------------+---------------------------------------------------------------------------+\n| Parameter                                | Description                                                               |\n+==========================================+===========================================================================+\n| STREAM\\_DEFAULT\\_PERMISSION\\_CLASSES     | permission\\_classes that used in built-in APIView. default: (AllowAny,)   |\n+------------------------------------------+---------------------------------------------------------------------------+\n| STREAM\\_DEFAULT\\_VIDEO\\_PATH\\_URL\\_VAR   | url path variable key. default: path                                      |\n+------------------------------------------+---------------------------------------------------------------------------+\n| STREAM\\_MAX\\_LOAD\\_VOLUME                | maximum load video in each chunk(by MB). default: 8                       |\n+------------------------------------------+---------------------------------------------------------------------------+\n| STREAM\\_WATCH\\_LOG\\_ENABLED              | is log watch requests enabled. default: True                              |\n+------------------------------------------+---------------------------------------------------------------------------+\n| STREAM\\_RANGE\\_HEADER\\_REGEX\\_PATTERN    | range header regex pattern. default: r'bytes=(+)-()'                      |\n+------------------------------------------+---------------------------------------------------------------------------+\n\nFrontend\n--------\n\nFrontend implementation is so easy\n\nyou just need to add stream url as ``src`` in ``video`` tag\n\n.. code:: html\n\n    <video width=\"480\" controls>\n        <source src=\"http://localhost:8000/api/stream/?path=<path_to_video>\" type=\"video/mp4\">\n    </video>\n\n\nTeam\n----\n\n+-----------------------------------------------------------------+---------------------------------------------------------+\n| |sepehr|                                                        |                            |mehran|                     |\n+=================================================================+=========================================================+\n| `Sepehr Akbarazadeh <https://github.com/sepehr-akbarzadeh>`__   | `Mehran Rahmanzadeh <https://github.com/mrhnz>`__       |\n+-----------------------------------------------------------------+---------------------------------------------------------+\n\n.. |SageTeam| image:: https://github.com/sageteam-org/django-sage-painless/blob/develop/docs/images/tag_sage.png?raw=true\n            :alt: SageTeam\n.. |PyPI release| image:: https://github.com/sageteam-org/django-sage-painless/blob/develop/docs/images/tag_pypi_0.0.8.png?raw=true\n            :alt: django-sage-painless\n.. |Supported Python versions| image:: https://github.com/sageteam-org/django-sage-painless/blob/develop/docs/images/tag_python-02.png?raw=true\n            :alt: django-sage-painless\n.. |Supported Django versions| image:: https://github.com/sageteam-org/django-sage-painless/blob/develop/docs/images/tag_django.png?raw=true\n            :alt: django-sage-painless\n.. |Documentation| image:: https://github.com/sageteam-org/django-sage-painless/blob/develop/docs/images/tag_docs.png?raw=true\n            :alt: django-sage-painless\n.. |Test| image:: https://github.com/sageteam-org/django-sage-painless/blob/develop/docs/images/tag_test.png?raw=true\n            :alt: django-sage-painless\n.. |sepehr| image:: https://github.com/sageteam-org/django-sage-painless/blob/develop/docs/images/sepehr.jpeg?raw=true\n            :height: 230px\n            :width: 230px\n            :alt: Sepehr Akbarzadeh\n.. |mehran| image:: https://github.com/sageteam-org/django-sage-painless/blob/develop/docs/images/mehran.png?raw=true\n            :height: 340px\n            :width: 225px\n            :alt: Mehran Rahmanzadeh\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/sageteam-org/django-sage-streaming/archive/refs/tags/0.1.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sageteam-org/django-sage-streaming",
    "keywords": "django,python,streaming,video streaming",
    "license": "GNU",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-sage-streaming",
    "package_url": "https://pypi.org/project/django-sage-streaming/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-sage-streaming/",
    "project_urls": {
      "Download": "https://github.com/sageteam-org/django-sage-streaming/archive/refs/tags/0.1.0.tar.gz",
      "Homepage": "https://github.com/sageteam-org/django-sage-streaming"
    },
    "release_url": "https://pypi.org/project/django-sage-streaming/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "video streaming based on Django",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10994406,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "764d23cfb8425ab852c51018233602e726663775417641b295485456f054cb5d",
          "md5": "f0dc5e1d5c1f3a427b778bc07168e790",
          "sha256": "1bdfa72bca92e631e16f05623fc26e1c23c31f82b8ef6efcafdc87168ab616b8"
        },
        "downloads": -1,
        "filename": "django-sage-streaming-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f0dc5e1d5c1f3a427b778bc07168e790",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 19820,
        "upload_time": "2021-07-15T18:45:07",
        "upload_time_iso_8601": "2021-07-15T18:45:07.785414Z",
        "url": "https://files.pythonhosted.org/packages/76/4d/23cfb8425ab852c51018233602e726663775417641b295485456f054cb5d/django-sage-streaming-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "481afdd47b268a826eef7cd6a16b1f5b71d82b681b129a26dcca34d1f00d43b4",
          "md5": "af99f7af674f1a7bdc6b1c1e3aac10eb",
          "sha256": "005dd7a620dab3df4d12c98e4980b6c9eb01de4cf603674b1a5bcac8c21a7491"
        },
        "downloads": -1,
        "filename": "django-sage-streaming-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "af99f7af674f1a7bdc6b1c1e3aac10eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 21796,
        "upload_time": "2021-07-24T16:43:04",
        "upload_time_iso_8601": "2021-07-24T16:43:04.443168Z",
        "url": "https://files.pythonhosted.org/packages/48/1a/fdd47b268a826eef7cd6a16b1f5b71d82b681b129a26dcca34d1f00d43b4/django-sage-streaming-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "481afdd47b268a826eef7cd6a16b1f5b71d82b681b129a26dcca34d1f00d43b4",
        "md5": "af99f7af674f1a7bdc6b1c1e3aac10eb",
        "sha256": "005dd7a620dab3df4d12c98e4980b6c9eb01de4cf603674b1a5bcac8c21a7491"
      },
      "downloads": -1,
      "filename": "django-sage-streaming-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "af99f7af674f1a7bdc6b1c1e3aac10eb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 21796,
      "upload_time": "2021-07-24T16:43:04",
      "upload_time_iso_8601": "2021-07-24T16:43:04.443168Z",
      "url": "https://files.pythonhosted.org/packages/48/1a/fdd47b268a826eef7cd6a16b1f5b71d82b681b129a26dcca34d1f00d43b4/django-sage-streaming-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}