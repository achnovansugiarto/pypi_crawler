{
  "info": {
    "author": "Anton Peganov",
    "author_email": "apeganov@nvidia.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![License](https://img.shields.io/badge/license-MIT-green)](https://opensource.org/licenses/MIT)\n# NVIDIA Riva Clients\n\nNVIDIA Riva is a GPU-accelerated SDK for building Speech AI applications that are customized for your use \ncase and deliver real-time performance. This repo provides performant client example command-line clients.\n\n## Main API\n\n- `riva.client.ASRService` is a class for speech recognition,\n- `riva.client.TTSService` is a class for speech synthesis,\n- `riva.client.NLPService` is a class for natural language processing.\n\n## CLI interface\n\n- **Automatic Speech Recognition (ASR)**\n    - `scripts/asr/riva_streaming_asr_client.py` demonstrates streaming transcription in several threads, can prints time stamps.\n    - `scripts/asr/transcribe_file.py` performs streaming transcription,\n    - `scripts/asr/transcribe_file_offline.py` performs offline transcription,\n    - `scripts/asr/transcribe_mic.py` performs streaming transcription of audio acquired through microphone.\n- **Speech Synthesis (TTS)**\n    - `scripts/tts/talk.py` synthesizes audio for a text in streaming or offline mode.\n- **Natural Language Processing (NLP)**\n    - `scripts/nlp/intentslot_client.py` recognizes intents and slots in input sentences,\n    - `scripts/nlp/ner_client.py` detects named entities in input sentences,\n    - `scripts/nlp/punctuation_client.py` restores punctuation and capitalization in input sentences,\n    - `scripts/nlp/qa_client.py` queries a document with natural language query and prints answer from a document,\n    - `scripts/nlp/text_classify_client.py` classifies input sentences,\n    - `scripts/nlp/eval_intent_slot.py` prints intents and slots classification reports for test data.\n  \n## Installation\n\n1. Create a ``conda`` environment and activate it\n2. From source: \n    - Clone ``riva-python-clients`` repo and change to the repo root\n    - Run commands\n\n```bash\ngit clone https://github.com/nvidia-riva/python-clients.git\ncd python-clients\ngit submodule init\ngit submodule update --remote --recursive\npip install -r requirements.txt\npython3 setup.py bdist_wheel\npip install --force-reinstall dist/*.whl\n```\n3. `pip`:\n```bash\npip install nvidia-riva-client\n```\n\nIf you would like to use output and input audio devices \n(scripts `scripts/asr/transcribe_file_rt.py`, `scripts/asr/transcribe_mic.py`, `scripts/tts/talk.py` or module \n`riva.client/audio_io.py`), you will need to install `PyAudio`.\n```bash\nconda install -c anaconda pyaudio\n```\n\nFor NLP evaluation you will need `transformers` and `sklearn` libraries.\n```bash\npip install -U scikit-learn\npip install -U transformers\n```\n\n## Before using microphone and audio output devices on Unix\nyou may need to run commands\n```\nadduser $USER audio\nadduser $USER pulse-access\n```\nand restart.\n\n## Usage\n\n### Server\n\nBefore running client part of Riva, please set up a server. The simplest\nway to do this is to follow\n[quick start guide](https://docs.nvidia.com/deeplearning/riva/user-guide/docs/quick-start-guide.html#local-deployment-using-quick-start-scripts).\n\n### CLI\n\nYou may find all CLI scripts in `scripts` directory. Each script has a description of\nits purpose and parameters.\n\n#### ASR\n\nYou may find a detailed documentation [here](https://docs.nvidia.com/deeplearning/riva/user-guide/docs/apis/development-cpp.html).\n\nFor transcribing in streaming mode you may use `scripts/asr/transcribe_file.py`.\n```bash\npython scripts/asr/transcribe_file.py \\\n    --input-file data/examples/en-US_AntiBERTa_for_word_boosting_testing.wav\n```\n\nYou may watch how a transcript grows if you set `--simulate-realtime` and `--show-intermediate`.\n```bash\npython scripts/asr/transcribe_file.py \\\n    --input-file data/examples/en-US_AntiBERTa_for_word_boosting_testing.wav \\\n    --simulate-realtime \\\n    --show-intermediate\n```\n\nYou may listen audio simultaneously with transcribing (you will need installed PyAudio and access to audio devices).\n```bash\npython scripts/asr/transcribe_file.py \\\n    --input-file data/examples/en-US_AntiBERTa_for_word_boosting_testing.wav \\\n    --play-audio \\\n    --show-intermediate\n```\n\nOffline transcription is performed this way.\n```bash\npython scripts/asr/transcribe_file_offline.py \\\n    --input-file data/examples/en-US_AntiBERTa_for_word_boosting_testing.wav\n```\n\nYou can improve transcription of this audio by word boosting.\n```bash\npython scripts/asr/transcribe_file_offline.py \\\n  --input-file data/examples/en-US_AntiBERTa_for_word_boosting_testing.wav \\\n  --boosted-lm-words AntiBERTa \\\n  --boosted-lm-words ABlooper \\\n  --boosted-lm-score 20.0\n```\n\n#### NLP\n\nYou can provide inputs to `scripts/nlp/intentslot_client.py`, `scripts/nlp/punctuation_client.py`\nboth through command line arguments and interactively.\n```bash\npython scripts/nlp/intentslot_client.py --query \"What is the weather tomorrow?\"\n```\nor\n```bash\npython scripts/nlp/intentslot_client.py --interactive\n```\nFor punctuation client the commands look similar.\n```bash\npython scripts/nlp/punctuation_client.py --query \"can you prove that you are self aware\"\n```\nor\n```bash\npython scripts/nlp/punctuation_client.py --interactive\n```\n\n**NER** client can output 1 of the following: label name, span start, span end\n```bash\npython scripts/nlp/ner_client.py \\\n  --query \"Where is San Francisco?\" \"Jensen Huang is the CEO of NVIDIA Corporation.\" \\\n  --test label\n```\nor\n```bash\npython scripts/nlp/ner_client.py \\\n  --query \"Where is San Francisco?\" \"Jensen Huang is the CEO of NVIDIA Corporation.\" \\\n  --test span_start\n```\nor\n```bash\npython scripts/nlp/ner_client.py \\\n  --query \"Where is San Francisco?\" \"Jensen Huang is the CEO of NVIDIA Corporation.\" \\\n  --test span_end\n```\n\nProvide query and context to **QA** client.\n```bash\npython scripts/nlp/qa_client.py \\\n  --query \"How many gigatons of carbon dioxide was released in 2005?\" \\\n  --context \"In 2010 the Amazon rainforest experienced another severe drought, in some ways \"\\\n\"more extreme than the 2005 drought. The affected region was approximate 1,160,000 square \"\\\n\"miles (3,000,000 km2) of rainforest, compared to 734,000 square miles (1,900,000 km2) in \"\\\n\"2005. The 2010 drought had three epicenters where vegetation died off, whereas in 2005 the \"\\\n\"drought was focused on the southwestern part. The findings were published in the journal \"\\\n\"Science. In a typical year the Amazon absorbs 1.5 gigatons of carbon dioxide; during 2005 \"\\\n\"instead 5 gigatons were released and in 2010 8 gigatons were released.\"\n```\n\n**Text classification** requires only a query.\n```bash\npython scripts/nlp/text_classify_client.py --query \"How much sun does california get?\"\n```\n\n#### TTS\n\nCall ``scripts/tts/talk.py`` script, and you will be prompted to enter a text for speech\nsynthesis. Set `--play-audio` option, and a synthesized speech will be played.\n```bash\npython scripts/tts/talk.py --play-audio\n```\n\nYou can write output to file.\n```bash\npython scripts/tts/talk.py --output 'my_synth_speech.wav'\n```\n\nYou can use streaming mode (audio fragments returned to client as soon as they are ready).\n```bash\npython scripts/tts/talk.py --stream --play-audio\n```\n\n### API\n\nSee tutorial notebooks in directory `tutorials`.\n\n\n## Documentation\n\nAdditional documentation on the Riva Speech Skills SDK can be found [here](https://docs.nvidia.com/deeplearning/riva/user-guide/docs/).\n\n\n## License\n\nThis client code is MIT-licensed. See LICENSE file for full details.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nvidia-riva/python-clients",
    "keywords": "deep learning,machine learning,gpu,NLP,ASR,TTS,NMT,nvidia,speech,language,Riva,client",
    "license": "MIT",
    "maintainer": "Anton Peganov",
    "maintainer_email": "apeganov@nvidia.com",
    "name": "nvidia-riva-client",
    "package_url": "https://pypi.org/project/nvidia-riva-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/nvidia-riva-client/",
    "project_urls": {
      "Homepage": "https://github.com/nvidia-riva/python-clients"
    },
    "release_url": "https://pypi.org/project/nvidia-riva-client/2.10.0/",
    "requires_dist": [
      "setuptools (>=65)",
      "grpcio-tools"
    ],
    "requires_python": ">=3.7",
    "summary": "Python implementation of the Riva Client API",
    "version": "2.10.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17273684,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "345a0a88971ca76a18f086f8701cbc186190b05fc0390ff71f937cc70d943c92",
          "md5": "0208c7ffe0f15fc5d4896025b82a74da",
          "sha256": "eb6c270a95159a5f6aad5e97eade528a92ea3489ad47563021926839a2576bd2"
        },
        "downloads": -1,
        "filename": "nvidia_riva_client-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0208c7ffe0f15fc5d4896025b82a74da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 33941,
        "upload_time": "2022-06-27T20:34:53",
        "upload_time_iso_8601": "2022-06-27T20:34:53.505717Z",
        "url": "https://files.pythonhosted.org/packages/34/5a/0a88971ca76a18f086f8701cbc186190b05fc0390ff71f937cc70d943c92/nvidia_riva_client-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "927d4607b16acad445daf8180ed28b5a9e13441629b08f8428772efafb7d79fe",
          "md5": "ebaf46587d3712a11cb724ecd2f991c6",
          "sha256": "ce4ca0dd169cc2bbe9e4625d0d4fb2b8ad86547f25a857a83eb7ce448b072010"
        },
        "downloads": -1,
        "filename": "nvidia_riva_client-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ebaf46587d3712a11cb724ecd2f991c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 35007,
        "upload_time": "2022-07-14T16:02:49",
        "upload_time_iso_8601": "2022-07-14T16:02:49.640124Z",
        "url": "https://files.pythonhosted.org/packages/92/7d/4607b16acad445daf8180ed28b5a9e13441629b08f8428772efafb7d79fe/nvidia_riva_client-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5c0bc230a035975b177b4e0bb5c0d045a848816b23f819bebeaa531c4ec9238",
          "md5": "5c656ecf7e4bc5bac55ab5b7ff610cc0",
          "sha256": "e21bb2a590c124392eb4567c3066f0eb9d256273e3e254187ad676c7779796c7"
        },
        "downloads": -1,
        "filename": "nvidia_riva_client-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c656ecf7e4bc5bac55ab5b7ff610cc0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 35056,
        "upload_time": "2022-08-03T12:03:49",
        "upload_time_iso_8601": "2022-08-03T12:03:49.527448Z",
        "url": "https://files.pythonhosted.org/packages/d5/c0/bc230a035975b177b4e0bb5c0d045a848816b23f819bebeaa531c4ec9238/nvidia_riva_client-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29b1f11e0ae02319fb620b724bd90dc95a70963fc90b2c82d78c14ef9ebb2911",
          "md5": "e7e396a00b7ba5fffa2793cdff1f2098",
          "sha256": "7ca40ac1fdf0125aab3076d98f7d59ba7354e371f4a4200337766d92b1b7d8e4"
        },
        "downloads": -1,
        "filename": "nvidia_riva_client-2.10.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7e396a00b7ba5fffa2793cdff1f2098",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 38057,
        "upload_time": "2023-03-13T16:20:53",
        "upload_time_iso_8601": "2023-03-13T16:20:53.152653Z",
        "url": "https://files.pythonhosted.org/packages/29/b1/f11e0ae02319fb620b724bd90dc95a70963fc90b2c82d78c14ef9ebb2911/nvidia_riva_client-2.10.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7da48211998d26b0bf39b325d873b1bceeac71e3952ed70489a447b7972ef645",
          "md5": "838dfeaedc13cf85af95dbf78dac1f7a",
          "sha256": "c435a9e133d9919b291efcf1d37bfb3792650a3e41bb88b52edb8788c7c51bd2"
        },
        "downloads": -1,
        "filename": "nvidia_riva_client-2.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "838dfeaedc13cf85af95dbf78dac1f7a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 37148,
        "upload_time": "2022-12-08T18:09:55",
        "upload_time_iso_8601": "2022-12-08T18:09:55.494485Z",
        "url": "https://files.pythonhosted.org/packages/7d/a4/8211998d26b0bf39b325d873b1bceeac71e3952ed70489a447b7972ef645/nvidia_riva_client-2.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a49d70d140a9e102247dd2cc2ae4ca27eef77a83e54553949f9e60ffa781ab00",
          "md5": "4aceb741312240ebce154f08043b89ae",
          "sha256": "5ed437a45886aeaaba27fa5680480ae44396011e07890218280d5be93aac2be1"
        },
        "downloads": -1,
        "filename": "nvidia_riva_client-2.9.0-1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4aceb741312240ebce154f08043b89ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 37159,
        "upload_time": "2023-02-14T03:53:20",
        "upload_time_iso_8601": "2023-02-14T03:53:20.076086Z",
        "url": "https://files.pythonhosted.org/packages/a4/9d/70d140a9e102247dd2cc2ae4ca27eef77a83e54553949f9e60ffa781ab00/nvidia_riva_client-2.9.0-1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3f087cce28847a882918f14d6b4a492b6f75d7ba6dc1b5409529278d9a125c2",
          "md5": "af659852f5b2f6fcb7a15b1bca147bf0",
          "sha256": "993c4c924b53b866845b5e5eec4a9b406be13f4a4acc07ad74ec5d7da76167b0"
        },
        "downloads": -1,
        "filename": "nvidia_riva_client-2.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af659852f5b2f6fcb7a15b1bca147bf0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4760,
        "upload_time": "2023-02-13T05:52:43",
        "upload_time_iso_8601": "2023-02-13T05:52:43.690058Z",
        "url": "https://files.pythonhosted.org/packages/c3/f0/87cce28847a882918f14d6b4a492b6f75d7ba6dc1b5409529278d9a125c2/nvidia_riva_client-2.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "29b1f11e0ae02319fb620b724bd90dc95a70963fc90b2c82d78c14ef9ebb2911",
        "md5": "e7e396a00b7ba5fffa2793cdff1f2098",
        "sha256": "7ca40ac1fdf0125aab3076d98f7d59ba7354e371f4a4200337766d92b1b7d8e4"
      },
      "downloads": -1,
      "filename": "nvidia_riva_client-2.10.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e7e396a00b7ba5fffa2793cdff1f2098",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 38057,
      "upload_time": "2023-03-13T16:20:53",
      "upload_time_iso_8601": "2023-03-13T16:20:53.152653Z",
      "url": "https://files.pythonhosted.org/packages/29/b1/f11e0ae02319fb620b724bd90dc95a70963fc90b2c82d78c14ef9ebb2911/nvidia_riva_client-2.10.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}