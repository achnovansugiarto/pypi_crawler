{
  "info": {
    "author": "Giovanni Tarter",
    "author_email": "giovanni.tarter@unitn.it",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "---\ntitle: KymoKnot - A software package and webserver to identify and locate knots\nbibliography: pandoc/ref.bib\n---\nKymoKnot provides programs and libraries to localize the knotted portion of\nknotted rings and linear chains.  A complete overview of this package and of the\nwebserver can be found in @kymoknot.  An interactive web-server interface is available at\n[http://kymoknot.sissa.it/interactive.php](http://kymoknot.sissa.it/interactive.php).\nWhen using Kymoknot, please cite @kymoknot.\n\nKymoknot adopts the Minimally-Interfering closure @minint to circularize both linear\nchains and chain subportions.\n\nThis package currently provides 3 programs.\n\n* `KymoKnot_ring.x`\n* `KymoKnot_linear.x`\n* `K_close.x`\n\n\nThe first two programs locate knots, respectively on ring and linear chains,\nusing the simplification only as a mean to reduce the number of chain\nsubportions to be considered in the search for the knotted portion. The\ntopology of each chain subportion is evaluated by closing the corresponding\nportion of the original, unsimplified chain.  `K_close.x` takes an open chain\nin input and closes it using the Minimally-Interfering closure scheme.\n\nWhen searching for knotted portions, different search schemes identify\ndifferent entanglement properties of a chain and may in general give different\nresults.  For a detailed study, see ref @multiscale.  In the current version, the\nbottom-up, top-down and  'unsafe' bottom-up search schemes can be used. The\nbottom-up is enabled by default if no search scheme is specified by the user.\n\n**Important.** KymoKnot identifies knots based on the Alexander determinants in\n$t=-1$ and $t=-2$ @minint.\nPrime knots with 8 or more crossings can have the same\nAlexander determinants of other knots, including composite one; therefore the\ncode must be used with caution when analyzing complex knots.\nThe table of known knots is in the header file `KNT_table.h`.\n\n[1]: 1. Tubiana L., Orlandini E, Micheletti C\n[Probing the Entanglement and Locating Knots in Ring Polymers: A Comparative Study of Different Arc Closure Schemes](http://ptp.ipap.jp/link?PTPS/191/192) Progress of Theoretical Physics supplement, 192, 192-204 (2011)\n\n[2]: 2. Tubiana L., Orlandini E, Micheletti C\n[Multiscale entanglement in ring polymers under spherical confinement](http://prl.aps.org/pdf/PRL/v107/i18/e188302)\nPhys. Rev. Lett. 107, pg 188302 (2011).\n\n## 15-02-2018\n\nKymoKnot is a direct evolution of [LocKnot](https://bitbucket.org/locknot/locknot)\n\n## References\n<div id=\"refs\"></div>\n\n## Installation\nThis project makes use of [qhull](http://www.qhull.org/).   \nIn case your package manager provides the library and it is installed, the build\nsystem will use that version, otherwise it will compile also the local version of libqhull.\nThe library is needed by the Minimally-Interfering closure algorithm.\n\nRun `make docs` to produce a README file in pdf. Requires [pandoc](https://pandoc.org/).\n\n\nThe project builds three targets:\n- the C binaries\n- the python bindings module for C binaries\n- the python bindings binary, just for development purposes\n\n### cmake build\n\nThe build system of kymoknot is cmake.\nTo build:\n```console\n$ git clone --recursive https://gitlab.physics.unitn.it/luca.tubiana/kymoknot-devel.git\n$ cd kymoknot-devel/\n$ mkdir build\n$ cd build/\n$ cmake ..\n$ make\n$ sudo make install\n```\n\nThe cmake build offers the following parameters:\n\n- BUILD_OWN_LIBS (default value OFF)  \n    the parameter forces cmake to build also the external dependencies, even if already present in the system.\n    Currently the only dependency is libqhull.\n\nIt is possible to change cmake build parameters using the standard cmake syntax.    \n```\n$ cmake -DBUILD_OWN_LIBS=ON ..\n```\n\n\n### Python bindings package build\n\nThis project provides some python bindings distributed as a python module called `kymoknot`.  \n\nPrerequisites:\n```console\n$ pip3 install build\n```\n\nThen the build is launched with:\n```console\n$ python3 -m build\n```\n\nThe build procedure will create the directory `kymoknot-devel/dist` containing the .whl python package.\n```console\n$ pip3 install dist/kymoknot_py-*.whl\n```\n\nThe python package that provides the module can be built to use the system qhull libraries or \nto use the local version of the qhull library in a static fashion.\nTo switch between the dynamically linked build and the static one, users are required to define the QHULL_PREFIX environment\nvariable with the qhull installation path.\nWhen the variable is defined, the kymoknot/build.py script will use that path instead of relying on pkg-build.\n\n```console\n$ export QHULL_PREFIX=\"/usr/local\"\n$ python3 -m build\n```\n\nIf your OS does not provide a libqhull package or the provided one is ignored by cmake (for example on Ubuntu 18.04 and Ubuntu 20.04),\nyou will have to compile libqhull before building the python module.\nSee [cmake build](#cmake-build) section.\n\n\n```console\n$ git clone --recursive https://gitlab.physics.unitn.it/luca.tubiana/kymoknot-devel.git\n$ cd kymoknot-devel/\n$ mkdir build\n$ cd build/\n$ cmake ..\n$ make\n$ sudo make install\n$ cd .. \n$ export QHULL_PREFIX=\"/usr/local\"\n$ python3 -m build\n$ pip3 install dist/kymoknot_py-*.whl\n```\n\n\n### Python bindings binary build\n\n```console\n$ python3 kymoknot/build.py dev\n```\n\nPlease note that when building the module binary this way, when calling \n```python\nimport kymoknot\n```\nfrom a script, the python code is actually loaded from ```kymoknot-devel/kymoknot``` directory and using the \nbinary produced by cffi compilation (i.e.: ```_kymoknot_bindings.cpython-310-x86_64-linux-gnu.so```).\nThe first line of ```kymoknot/__init__.py``` will load the python module from the .so file:\n```python\nfrom _kymoknot_bindings import ffi, lib\n```\n\n#### Build and Installation on macOS\n\nPrerequisites:\n\n```\nbrew install cmake qhull pkg-config\n```\n\n\nAfter having activated your preferred conda or virtual environment:\n```console\n$ cd kymoknot-devel/\n$ mkdir build\n$ cd build/\n$ cmake ..\n$ make\n$ cd ..\n$ python3 -m build\n$ pip3 install dist/kymoknot_py-0.9-*.whl\n\n\n```\n\nBuilding python module on macOS using own qhull sources:\n\n```\n$ cd kymoknot-devel/\n$ mkdir build/ install/\n$ cd build/\n$ cmake -DBUILD_OWN_LIBS=ON -DCMAKE_INSTALL_PREFIX=$(pwd)/../install ..\n$ make\n$ make install\n$ cd ..\n$ export QHULL_PREFIX=$(pwd)/install/\n$ python -m build\n```\n\n#### Docker builds\nSome docker containers are provided to test build procedure in docker/ directory.\nTo build in a docker container:\n\n```console\n$ cd kymoknot-devel\n$ docker build -t kymoknot_build_u1804 $(pwd)/docker/ubuntu_18.04 \n$ docker run -it --rm -v $(pwd):/root/kymoknot-devel kymoknot_build_u1804\n```\n\nThe build script will create the executables and the python module in build/ and\ndist/ directories.\nHowever, the build results are suited for the docker image, hence cannot be used in \nthe host system (unless it matches the one of the docker image).\n\n        \n## Usage\nusage: `KymoKnot_ring.x [options] input_file` (the same holds for KymoKnot_linear.x).\n\nThe input file must use the format:\n```\n        N\n        x y z\n        x y z\n        ...\n```\nwhere N is the length of the coordinate sets.  If the input files contain\ncoordinate of rings, the edges `x_0 y_0 z_0` and `x_(N-1) y_(N-1) z_(N-1)` must\ncoincide.  **A sequence of configurations can be passed one after the other in\nthe same input file.**\n\n\n### OUTPUT\n- `BU__`  [ -b option ]: shortest knotted portion. Bottom-up search\n- `NBU__` [ -u option ]: bottom-up search, without unknottedness check on complementar arc\n- `TD__`  [ -t option ]: shortest continuosly knotted portion. Top-down search\n\n### OUTPUT FILE FORMAT:\nFor `Kymoknot_linear.x` and `Kymoknot_ring.x`:\n```\nindex Adet_1 Adet_2 Knot_id start end length\n```\n* index: index of the chain in the input sequence, starting from 0.\n* Adet_1, Adet_1: Alexander determinants\n* Knot_id: Rolfsen knot id, see `KNT_table.h`\n* start: knot starting bead\n* end: knot ending bead\n* lenght: length of the knotted portion\n\n#### Notes on the output\n1. When several knotted portions are found they are printed on the same line.\nTherefore, **the number of columns in output is not fixed**\n2. The knot is identified on the whole chain, knotted portion will have the\ntopology of the whole chain.\n3. In rings, the start of the knot can come after its end, if the knot includes\nthe first bead on the chain.\n4. When performing a bracketed knot search with options `-F` and `-T`, it is\npossible that no knot is found in the given search window. In that case the\noutput line is left empty and a Warning is printed to screen.\n\n-------------------------------------------------------\n## OPTIONS:\n* `-h`:              print this help and exit.\n* `-s <max_stride>`:         maximum stride for rectification. Default is 2% the chain length. Negative values in input set the stride to unlimited\n* `-m <mem_size>`:   USE WITH CAUTION! Set the size of memory manually. Insert the expected length of the chain after simplification.\n* `-r <seed>`:       set the pseudo random number generator's seed. Default: use time()+getpid().\n* `-b`:      \t\tPerform bottom-up search. ( DEFAULT )\n* `-t`:      \t\tPerform top-down search.  ( DEFAULT )\n* `-u`:      \t\tPerform bottom-up search without checking the complementar arc.\n* `-F <start>`: (\"From\", use only in conjunction with -T) perform knot search between `<start>` and `<end>`, included.\n* `-T <end>`: \t(\"To\", use only in conjunction with -F) perform knot search between `<start>` and `<end>`, included.\n\nOptions `-F` and `-T` can be used also on rings, with `<start>` > `<end>` in\nwhich case kymoknot will look for knots passing through the first bead in the\nchain.\n\n## Usage examples\n\n* `Kymoknot_linear.x  linear_confs.dat`  Performs  a bottom-up search for knots,\nwith simplification stride set to 2% the length of each chain stored in `linear_confs.dat`\n* `Kymoknot_ring.x -t ring_confs.dat`  Performs  a top-down search for knots,\nwith simplification stride set to 2% the length of each chain stored in `linear_confs.dat`\n* `Kymoknot_ring.x -b -t -u ring_confs.dat` Performs bottom-up, top-down and\n  \"unsafe\" searches.\n* `Kymoknot_ring.x -s 5 ring_confs.dat` Performs a bottom-up search with maximum\nstride set to 5 beads.\n* `Kymoknot_ring.x -F 100 -T 20 ring_confs.dat` Performs a bottom-up search between\nbeads 100 and 20 of the rings, looking for knots passing through the origin.\n\n\n### Python usage\n\nThe module can be used mainly in two ways:\n- passing one or more numpy arrays\n- passing the path of a file containing the data\n\nThe main purpose of the second way is to let the C code open and read the input data in a faster way \n(at least rather than reading them from python).\n\nHere is an example of passing the input as numpy arrays:\n```python\n\n#!/bin/env/python\n\nimport kymoknot\nfrom kymoknot.searchtype import SearchType\nimport numpy as np\n\n\nif __name__ == \"__main__\":\n\n    file_path = \"example_configurations/linear/start_A_3_1_N1024.knt\"\n    chains = [x for x in kymoknot.read_file(file_path)]\n\n    kl = kymoknot.KymoKnotSearch(\n            seed=0,\n            closure_type=kymoknot.CL_QHULLHYB,\n            close_subchain=kymoknot.CL_QHULLHYB,\n            search_type=[SearchType.BU],\n            )\n\n    chain_res = kl.search(chains, kymoknot.INP_LINEAR)\n    res = chain_res[SearchType.BU]\n\n    #res[0] because res is a list containing an entry for each chain in input\n    #and the example file contains 1 chain\n    for ke in res[0]:\n        print(\"{}\".format(ke))\n\n```\n\nTo pass the input data as a file the sketch becomes:\n\n```python\n#!/usr/bin/env python\n\nimport kymoknot\nfrom kymoknot.searchtype import SearchType\nimport numpy as np\n\nif __name__ == \"__main__\":\n\n    file_path = \"example_configurations/linear/start_A_3_1_N1024.knt\"\n\n    kl = kymoknot.KymoKnotSearch(\n            seed=0,\n            search_type=[SearchType.BU, SearchType.TD],\n            )\n\n    chain_res = kl.search(file_path, kymoknot.INP_LINEAR)\n    res_bu = chain_res[SearchType.BU]\n    res_td = chain_res[SearchType.TD]\n\n    print(\"RES - bottom-up\")\n    for idx, chain_res in enumerate(res_bu):\n        print(f\"chain: {idx}\")\n        for ke in chain_res:\n            print(ke)\n        print(\"\")\n\n    print(\"RES - top-down\")\n    for idx, chain_res in enumerate(res_td):\n        print(f\"chain: {idx}\")\n        for ke in chain_res:\n            print(ke)\n        print(\"\")\n\n```\n\n\n## Changelog\n\n### 31-07-2020\n* Expanded `README.md`\n* Corrected a bug which caused Kymoknot to fail if run on files containing a\nsequence of rings with different lengths.\n\n### 15-02-2018\nKymoKnot is a direct evolution of [LocKnot](https://bitbucket.org/locknot/locknot)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.physics.unitn.it/giovanni.tarter/kymoknot_py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kymoknot-py",
    "package_url": "https://pypi.org/project/kymoknot-py/",
    "platform": null,
    "project_url": "https://pypi.org/project/kymoknot-py/",
    "project_urls": {
      "Homepage": "https://gitlab.physics.unitn.it/giovanni.tarter/kymoknot_py"
    },
    "release_url": "https://pypi.org/project/kymoknot-py/0.9/",
    "requires_dist": [
      "cffi (>=1.0.0)",
      "numpy (>=1.18.5)"
    ],
    "requires_python": ">=3.6",
    "summary": "Kymoknot python bindings",
    "version": "0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14836816,
  "releases": {
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc6426be0354e8ece0bfcc9f8e852d392817a9e49cf423b37c6cd9436dc1856d",
          "md5": "18d330250f0499752df12f7045aa10da",
          "sha256": "421169bc74266a1e4c1e6ca1701927f9c1a5bf2b1bab576470af9be2184b606d"
        },
        "downloads": -1,
        "filename": "kymoknot_py-0.9-cp38-cp38-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "18d330250f0499752df12f7045aa10da",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 242946,
        "upload_time": "2022-08-22T14:13:25",
        "upload_time_iso_8601": "2022-08-22T14:13:25.305579Z",
        "url": "https://files.pythonhosted.org/packages/fc/64/26be0354e8ece0bfcc9f8e852d392817a9e49cf423b37c6cd9436dc1856d/kymoknot_py-0.9-cp38-cp38-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a54fa439c8d753f575fda0782756e388a8901f9767f0a5447383b7c4a8511554",
          "md5": "0e9971983a87f7d20e4e98a1c6c0028c",
          "sha256": "79ed39fd51392c20c125619a9477adffdcb6ea6296fc53deeadc6cfd99e541dc"
        },
        "downloads": -1,
        "filename": "kymoknot-py-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "0e9971983a87f7d20e4e98a1c6c0028c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 94682,
        "upload_time": "2022-08-22T14:13:27",
        "upload_time_iso_8601": "2022-08-22T14:13:27.157181Z",
        "url": "https://files.pythonhosted.org/packages/a5/4f/a439c8d753f575fda0782756e388a8901f9767f0a5447383b7c4a8511554/kymoknot-py-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc6426be0354e8ece0bfcc9f8e852d392817a9e49cf423b37c6cd9436dc1856d",
        "md5": "18d330250f0499752df12f7045aa10da",
        "sha256": "421169bc74266a1e4c1e6ca1701927f9c1a5bf2b1bab576470af9be2184b606d"
      },
      "downloads": -1,
      "filename": "kymoknot_py-0.9-cp38-cp38-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "18d330250f0499752df12f7045aa10da",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6",
      "size": 242946,
      "upload_time": "2022-08-22T14:13:25",
      "upload_time_iso_8601": "2022-08-22T14:13:25.305579Z",
      "url": "https://files.pythonhosted.org/packages/fc/64/26be0354e8ece0bfcc9f8e852d392817a9e49cf423b37c6cd9436dc1856d/kymoknot_py-0.9-cp38-cp38-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a54fa439c8d753f575fda0782756e388a8901f9767f0a5447383b7c4a8511554",
        "md5": "0e9971983a87f7d20e4e98a1c6c0028c",
        "sha256": "79ed39fd51392c20c125619a9477adffdcb6ea6296fc53deeadc6cfd99e541dc"
      },
      "downloads": -1,
      "filename": "kymoknot-py-0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "0e9971983a87f7d20e4e98a1c6c0028c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 94682,
      "upload_time": "2022-08-22T14:13:27",
      "upload_time_iso_8601": "2022-08-22T14:13:27.157181Z",
      "url": "https://files.pythonhosted.org/packages/a5/4f/a439c8d753f575fda0782756e388a8901f9767f0a5447383b7c4a8511554/kymoknot-py-0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}