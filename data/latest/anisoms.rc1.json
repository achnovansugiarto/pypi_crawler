{
  "info": {
    "author": "Pontus Lurcock",
    "author_email": "pont@talvi.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3"
    ],
    "description": "# anisoms: a Python library for reading AMS data\n\n## Introduction\n\nAGICO kappabridges write AMS (anisotropy of magnetic susceptibility) data in\ntwo formats: ASC and RAN. The first is an ASCII file formatted for easy\nperusal; the second is a compact binary format. Neither format is entirely\nstraightforward to read for further processing. anisoms provides a Python\nlibrary with functions to read and plot data from RAN and ASC files into\nPython dictionaries. As well as the main library `anisoms`, the package also\ncontains a few short command-line scripts. These scripts demonstrate the usage\nof the anisoms API, as well as being potentially useful in their own right.\n\nDocumentation for anisoms is available on\n[readthedocs](https://anisoms.readthedocs.io/en/latest/).\n\n## AMS file formats\n\nThe file formats are described in more detail in user manuals for\nAGICO equipment (AGICO, 2003; AGICO, 2009).\n\nThe RAN file contains a limited amount of data for each sample, most crucially\nthe orientation tensor. In the RAN file, this tensor is given only in the\ngeographic co-ordinate system (not, as might be expected, in the \"raw\"\nspecimen co-ordinate system). A RAN file is sometimes used in conjunction with\na GED (\"geological data\") file, which contains some additional sample data\nsuch as orientation conventions and additional co-ordinate systems; currently,\nanisoms does not read GED files.\n\nThe structure of the ASC file corresponds to the format of the data displayed\non the screen during usage of the SUSAR, SUSAM, or SAFYR program, and varies\nslightly according to the program version and measurement settings. The ASC\nfile contains a more extensive range of data than the RAN file, including\nanisotropy as both tensors and principal directions, in all the co-ordinate\nsystems which were specified during measurement.\n\n## anisoms usage\n\nThis is a brief overview; the API is fully detailed by the docstrings in\nthe source code and\n[on readthedocs](https://anisoms.readthedocs.io/en/latest/anisoms.html).\n\nThe functions `read_ran` and `read_asc` read a file of the respective types\nand return a nested dictionary structure containing the data from the file.\n\nThe `Direction` class represents a direction in three-dimensional space, and\nincludes a method to plot itself on an equal-area plot using the pyx graphics\nlibrary.\n\nThe `PrincipalDirs` class represents the three principal directions of an\nanisotropy tensor. It can be initialized from the directions themselves or\nfrom a tensor.\n\nThe `directions_from_ran`, `directions_from_asc_tensors`, and\n`directions_from_asc_directions` functions read a data file and return a\ncorresponding dictionary containing a `PrincipalDirs` object for each sample in\nthe file.\n\nThe `corrected_anisotropy_factor` function calculates the corrected anisotropy\nfactor (*P′* or *P*<sub>j</sub>) (Jelínek, 1981; Hrouda, 1982).\n\n## Overview of scripts\n\n- `ams-asc-to-csv` converts AMS data from ASC format to CSV format.\n- `ams-params-from-asc` prints selected parameters from an ASC file.\n- `ams-plot` plots AMS directions from ASC and RAN files.\n- `ams-print-ran-tensor` reads RAN files and prints their AMS tensors.\n- `ams-tensor-to-dir` prints the first principal directions of supplied tensors.\n\nMore detailed documentation for the scripts is available in their\ndocstrings, in their output when run with a `--help` argument, and\n[on readthedocs](https://anisoms.readthedocs.io/en/latest/cli-tools.html).\n\n## Precision considerations\n\nIn the RAN file, the components of the orientation tensor are stored as\n32-bit floating point numbers, which have a precision of around 7 significant\nfigures. In the ASC file, they are given as decimals with 5 significant figures\nof precision. So, for maximal precision, the tensors should be read from the\nRAN file; since the RAN file only gives tensors in the geographic co-ordinate\nsystem, they may have to be rotated into the desired co-ordinate system after\nreading. `anisoms` currently focuses on data reading, and does not provide\nfunctions for these rotations, but it does provide a function for converting\ntensors to principal directions.\n\nWhen obtaining principal directions solely from an ASC file, the most precise\nmethod is to read directly the directions stored there, rather than reading\nthe tensor and calculating directions from it. I have confirmed this by\ncomparing both methods with the directions calculated from the high-precision\ntensor in the corresponding RAN file. The principal directions stored in the\nASC file are presumably calculated directly from the full-precision floats.\nCalculating principal directions from the GED tensor is still more precise\nthan reading the directions from the ASC file, since the latter are rounded to\nthe nearest degree.\n\n## License\n\nCopyright 2019 Pontus Lurcock; released under the [GNU General Public License,\nversion 3.0](https://www.gnu.org/licenses/gpl-3.0.en.html)\n\n## References\n\nAGICO, 2003. *KLY-3 / KLY-3S / CS-3 / CS-L / CS-23 user’s guide*, Brno, Czech\nRepublic: Advanced Geoscience Instruments Co.\nhttps://www.agico.com/downloads/documents/manuals/kly3-man.pdf\n\nAGICO, 2009. *MFK1-FA / CS4 / CSL, MFK1-A / CS4 / CSL, MFK1-FB, MFK1-B user’s\nguide* 4th ed., Brno, Czech Republic: Advanced Geoscience Instruments Co.\nhttps://www.agico.com/downloads/documents/manuals/mfk1-man.pdf\n\nHrouda, F., 1982. Magnetic anisotropy of rocks and its application in geology\nand geophysics. *Geophysical Surveys*, 5, pp.37–82.\n\nJelínek, V., 1981. Characterization of the magnetic fabric of rocks.\n*Tectonophysics*, 79, pp.T63–T67.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pont-us/anisoms",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "anisoms",
    "package_url": "https://pypi.org/project/anisoms/",
    "platform": "",
    "project_url": "https://pypi.org/project/anisoms/",
    "project_urls": {
      "Homepage": "https://github.com/pont-us/anisoms"
    },
    "release_url": "https://pypi.org/project/anisoms/1.0.0/",
    "requires_dist": [
      "numpy",
      "pyx"
    ],
    "requires_python": "",
    "summary": "Read AMS (anisotropy of magnetic susceptibility) data",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7024210,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4cdb43e2d8d57b04cd6ef6a0ee0da4597497b981addbf3dd5cb039ef9875934",
          "md5": "81652786567f15129769db703f9e0fcc",
          "sha256": "d649da28cb3b899a863509d9830c9f321d38f1c8adc1dc34e76a1709e9337720"
        },
        "downloads": -1,
        "filename": "anisoms-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81652786567f15129769db703f9e0fcc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26243,
        "upload_time": "2020-04-15T12:04:33",
        "upload_time_iso_8601": "2020-04-15T12:04:33.097945Z",
        "url": "https://files.pythonhosted.org/packages/e4/cd/b43e2d8d57b04cd6ef6a0ee0da4597497b981addbf3dd5cb039ef9875934/anisoms-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6a054b721a7321d04cb183a644e08b5c2aa5c285272f17d109ea635eb81b891",
          "md5": "0418d1aa0bee05379db0c9c497d4ea72",
          "sha256": "35a033d28db3bfd9273a7566972c50ca258c752fd3c559be3ea04f5348849138"
        },
        "downloads": -1,
        "filename": "anisoms-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0418d1aa0bee05379db0c9c497d4ea72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11713,
        "upload_time": "2020-04-15T12:04:35",
        "upload_time_iso_8601": "2020-04-15T12:04:35.182167Z",
        "url": "https://files.pythonhosted.org/packages/a6/a0/54b721a7321d04cb183a644e08b5c2aa5c285272f17d109ea635eb81b891/anisoms-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4cdb43e2d8d57b04cd6ef6a0ee0da4597497b981addbf3dd5cb039ef9875934",
        "md5": "81652786567f15129769db703f9e0fcc",
        "sha256": "d649da28cb3b899a863509d9830c9f321d38f1c8adc1dc34e76a1709e9337720"
      },
      "downloads": -1,
      "filename": "anisoms-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "81652786567f15129769db703f9e0fcc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 26243,
      "upload_time": "2020-04-15T12:04:33",
      "upload_time_iso_8601": "2020-04-15T12:04:33.097945Z",
      "url": "https://files.pythonhosted.org/packages/e4/cd/b43e2d8d57b04cd6ef6a0ee0da4597497b981addbf3dd5cb039ef9875934/anisoms-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6a054b721a7321d04cb183a644e08b5c2aa5c285272f17d109ea635eb81b891",
        "md5": "0418d1aa0bee05379db0c9c497d4ea72",
        "sha256": "35a033d28db3bfd9273a7566972c50ca258c752fd3c559be3ea04f5348849138"
      },
      "downloads": -1,
      "filename": "anisoms-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0418d1aa0bee05379db0c9c497d4ea72",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11713,
      "upload_time": "2020-04-15T12:04:35",
      "upload_time_iso_8601": "2020-04-15T12:04:35.182167Z",
      "url": "https://files.pythonhosted.org/packages/a6/a0/54b721a7321d04cb183a644e08b5c2aa5c285272f17d109ea635eb81b891/anisoms-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}