{
  "info": {
    "author": "Aaron Stopher",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![Documentation Status](https://readthedocs.org/projects/sutools/badge/?version=latest)](https://sutools.readthedocs.io/en/latest/?badge=latest)\n[![codecov](https://codecov.io/gh/aastopher/sutools/branch/master/graph/badge.svg?token=ZB0AX8D6JI)](https://codecov.io/gh/aastopher/sutools)\n[![PyPI version](https://badge.fury.io/py/sutools.svg)](https://badge.fury.io/py/sutools)\n[![DeepSource](https://deepsource.io/gh/aastopher/sutools.svg/?label=active+issues&show_trend=true&token=RVDa2T7M-E-YSg2DVFbr1ro-)](https://deepsource.io/gh/aastopher/sutools/?ref=repository-badge)\n\n## Description\n\n**su (Super User) tools**\n\nPer module utilities, designed to be lightweight, easy to configure, and reduce boilerplate code.\n\n\n**info**\n\nThis package is intended to create an lower barrier for entry for logging and module level cli with sensible defaults; sutools is not intended to replace click, argparse, logging or other utility libraries. If your project requires a more flexible configuration please use the appropriate tooling.\n***\n\n## Quick Start:\n\n## Register Functions with sutools\n\n</br>\n\nUsing the register decorator `@su.register` on your functions will register it with sutools `meta_handler`. Stored functions are available across tools. This registry is intended to be used by logger and cli utilities.\n\n```python\nimport sutools as su\n\n@su.register\ndef add(x : int, y : int):\n    '''add two integers'''\n    return x + y\n\n```\n\n**NOTE:** Adding type hinting to your functions enforces types in the cli and adds positional arg class identifiers in the help docs for the command.\n\n</br>\n\n***\n\n## CLI Usage Example\n\n</br>\n\n```python\n\"\"\"This module does random stuff.\"\"\"\nimport sutools as su\n\n@su.register\ndef meet(name : str, greeting : str = 'hello', farewell : str = 'goodbye') -> str:\n        '''meet a person'''\n        output = f'\\n{greeting} {name}\\n{farewell} {name}'\n        su.log().meeting.info(output)\n        return output\n\nsu.logger() # optional\n\n# module level function calls...\n\nif __name__ == '__main__':\n    # main code (will run even when using cli commands)...\n    su.cli(desc = __doc__)\n    # main code (will NOT run when using cli commands)...\n```\n\n</br>\n\n**NOTE:** Adding type hinting to your functions enforces types in the cli and adds positional arg class identifiers in the help docs for the command.\n\n**command usage:**\n\n```\npython module.py meet foo\n```\n\n**output**\n\n```\nhello foo\ngoodbye foo\n```\n\n**module help output:**\n\n```\n    usage: module [-h] {meet} ...\n\n    This module does random stuff.\n\n    options:\n    -h, --help  show this help message and exit\n\n    commands:\n    {meet}\n        meet      meet a person\n```\n\n**command help output:**\n\n```\n    usage: dev meet [-gr <class 'str'>] [-fa <class 'str'>] [-h] name\n\n    meet(name: str, greeting: str = 'hello', farewell: str = 'goodbye') -> str\n\n    positional arguments:\n    name                  <class 'str'>\n\n    options:\n    -gr <class 'str'>, --greeting <class 'str'>\n                            default: hello\n    -fa <class 'str'>, --farewell <class 'str'>\n                            default: goodbye\n    -h, --help            Show this help message and exit.\n```\n\n## Logger Usage Examples\n\n</br>\n \n accessing defined loggers is done with a `log()` helper function. Note the use of `su.log()` in the below functions to access a specified logger before defining the log level and message.\n\n</br>\n\n**using registered function names**\n\n\n```python\nimport sutools as su\n\n@su.register\ndef add(x : int, y : int):\n    '''add two integers'''\n    su.log().add.info(f'{x} + {y} = {x+y}')\n    return x + y\n\n@su.register\ndef minus(x : int, y : int):\n    '''subtract two integers'''\n    su.log().minus.info(f'{x} - {y} = {x-y}')\n    return x - y\n\nsu.logger()\n\n# module level function calls\nadd(1,2)\nminus(1,2)\n\nif __name__ == '__main__':\n    # main code (will run even when using cli commands)...\n    su.cli() # optional\n    # main code (will NOT run when using cli commands)...\n```\n\n</br>\n\n**log output**\n```\n16:16:34, 961 add INFO 1 + 2 = 3\n16:16:34, 961 minus INFO 1 - 2 = -1\n```\n\n</br>\n\n**using custom logger names**\n\n\n```python\nimport sutools as su\n\n@su.register\ndef add(x : int, y : int):\n    '''add two integers'''\n    su.log().logger1.info(f'{x} + {y} = {x+y}')\n    return x + y\n\n@su.register\ndef minus(x : int, y : int):\n    '''subtract two integers'''\n    su.log().logger2.info(f'{x} - {y} = {x-y}')\n    return x - y\n\nsu.logger(loggers=['logger1','logger2'])\n\n# module level function calls\nadd(1,2)\nminus(1,2)\n\nif __name__ == '__main__':\n    # main code (will run even when using cli commands)...\n    su.cli() # optional\n    # main code (will NOT run when using cli commands)...\n```\n\n</br>\n\n**log output**\n```\n16:16:34, 961 logger1 INFO 1 + 2 = 3\n16:16:34, 961 logger2 INFO 1 - 2 = -1\n```\n\n***\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aastopher/sutools",
    "keywords": "logs,logger,logging,cli,utils",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sutools",
    "package_url": "https://pypi.org/project/sutools/",
    "platform": null,
    "project_url": "https://pypi.org/project/sutools/",
    "project_urls": {
      "Bug Tracker": "https://github.com/aastopher/sutools/issues",
      "Homepage": "https://github.com/aastopher/sutools"
    },
    "release_url": "https://pypi.org/project/sutools/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "su (Super User) tools; per module utilities, designed to be lightweight, easy to configure, and reduce boilerplate code.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17355298,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "874c735c37b15580f3dc08522055dcd24c31dd4193df81638596e32aa58db93e",
          "md5": "8061438d8f79d8f30707c122d828175f",
          "sha256": "5fc1836754e53faa9e4d4d5358fabe002d4a88c54029b025163a0a029fcb89ac"
        },
        "downloads": -1,
        "filename": "sutools-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8061438d8f79d8f30707c122d828175f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9293,
        "upload_time": "2023-03-17T02:36:44",
        "upload_time_iso_8601": "2023-03-17T02:36:44.529007Z",
        "url": "https://files.pythonhosted.org/packages/87/4c/735c37b15580f3dc08522055dcd24c31dd4193df81638596e32aa58db93e/sutools-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da098a2db47e753564cb538094eb123028b1155cdcbb78d03f476a50242e319f",
          "md5": "91c7204d03f2257e0bfda8e0a7fa5655",
          "sha256": "f64dc56417a1ac530b2a4335cb9718eeaafb048f2e5b126560f7100da5b670c0"
        },
        "downloads": -1,
        "filename": "sutools-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "91c7204d03f2257e0bfda8e0a7fa5655",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14777,
        "upload_time": "2023-03-17T02:36:46",
        "upload_time_iso_8601": "2023-03-17T02:36:46.854851Z",
        "url": "https://files.pythonhosted.org/packages/da/09/8a2db47e753564cb538094eb123028b1155cdcbb78d03f476a50242e319f/sutools-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35cf06de4e92da599afa4ce359aa77f3b501360c3863e7453e36559812f9c2c9",
          "md5": "b4ce5539b1f19e2f1c981316abf147f8",
          "sha256": "3321323a48a5429e7d6d8f4107fd9e0b6ea978fcfeb3b4c182c4b091f7dc351f"
        },
        "downloads": -1,
        "filename": "sutools-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4ce5539b1f19e2f1c981316abf147f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9459,
        "upload_time": "2023-03-19T17:50:12",
        "upload_time_iso_8601": "2023-03-19T17:50:12.702805Z",
        "url": "https://files.pythonhosted.org/packages/35/cf/06de4e92da599afa4ce359aa77f3b501360c3863e7453e36559812f9c2c9/sutools-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c811b75e5e974e40507afc326310ebf6ef038a1fff9a3e17337ba3233aa73f2",
          "md5": "29a1fd0779020225403510521d3549bf",
          "sha256": "8ade1a8159c0baf801a595d8cb2631fd4ad7735a0e7e01cab9bbaccc5bb02dbe"
        },
        "downloads": -1,
        "filename": "sutools-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "29a1fd0779020225403510521d3549bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 15051,
        "upload_time": "2023-03-19T17:50:14",
        "upload_time_iso_8601": "2023-03-19T17:50:14.333339Z",
        "url": "https://files.pythonhosted.org/packages/0c/81/1b75e5e974e40507afc326310ebf6ef038a1fff9a3e17337ba3233aa73f2/sutools-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35cf06de4e92da599afa4ce359aa77f3b501360c3863e7453e36559812f9c2c9",
        "md5": "b4ce5539b1f19e2f1c981316abf147f8",
        "sha256": "3321323a48a5429e7d6d8f4107fd9e0b6ea978fcfeb3b4c182c4b091f7dc351f"
      },
      "downloads": -1,
      "filename": "sutools-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b4ce5539b1f19e2f1c981316abf147f8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 9459,
      "upload_time": "2023-03-19T17:50:12",
      "upload_time_iso_8601": "2023-03-19T17:50:12.702805Z",
      "url": "https://files.pythonhosted.org/packages/35/cf/06de4e92da599afa4ce359aa77f3b501360c3863e7453e36559812f9c2c9/sutools-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c811b75e5e974e40507afc326310ebf6ef038a1fff9a3e17337ba3233aa73f2",
        "md5": "29a1fd0779020225403510521d3549bf",
        "sha256": "8ade1a8159c0baf801a595d8cb2631fd4ad7735a0e7e01cab9bbaccc5bb02dbe"
      },
      "downloads": -1,
      "filename": "sutools-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "29a1fd0779020225403510521d3549bf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 15051,
      "upload_time": "2023-03-19T17:50:14",
      "upload_time_iso_8601": "2023-03-19T17:50:14.333339Z",
      "url": "https://files.pythonhosted.org/packages/0c/81/1b75e5e974e40507afc326310ebf6ef038a1fff9a3e17337ba3233aa73f2/sutools-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}