{
  "info": {
    "author": "Kael Zhang",
    "author_email": "i+pypi@kael.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Financial and Insurance Industry",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Utilities"
    ],
    "description": "Stock Statistics/Indicators Calculation Helper\n==============================================\n\n[![image](https://travis-ci.org/jealous/stockstats.svg)](https://travis-ci.org/jealous/stockstats)\n\n[![image](https://coveralls.io/repos/jealous/stockstats/badge.svg)](https://coveralls.io/github/jealous/stockstats)\n\n[![image](https://img.shields.io/pypi/v/stockstats.svg)](https://pypi.python.org/pypi/stockstats)\n\nVERSION: 0.3.1\n\nIntroduction\n------------\n\nSupply a wrapper `StockDataFrame` based on the `pandas.DataFrame` with\ninline stock statistics/indicators support.\n\nSupported statistics/indicators are:\n\n-   change (in percent)\n-   delta\n-   permutation (zero based)\n-   log return\n-   max in range\n-   min in range\n-   middle = (close + high + low) / 3\n-   compare: le, ge, lt, gt, eq, ne\n-   count: both backward(c) and forward(fc)\n-   SMA: simple moving average\n-   EMA: exponential moving average\n-   MSTD: moving standard deviation\n-   MVAR: moving variance\n-   RSV: raw stochastic value\n-   RSI: relative strength index\n-   KDJ: Stochastic oscillator\n-   Bolling: including upper band and lower band.\n-   MACD: moving average convergence divergence. Including signal and\n    histogram. (see note)\n-   CR:\n-   WR: Williams Overbought/Oversold index\n-   CCI: Commodity Channel Index\n-   TR: true range\n-   ATR: average true range\n-   line cross check, cross up or cross down.\n-   DMA: Different of Moving Average (10, 50)\n-   DMI: Directional Moving Index, including\n    -   +DI: Positive Directional Indicator\n    -   -DI: Negative Directional Indicator\n    -   ADX: Average Directional Movement Index\n    -   ADXR: Smoothed Moving Average of ADX\n-   TRIX: Triple Exponential Moving Average\n-   TEMA: Another Triple Exponential Moving Average\n-   VR: Volatility Volume Ratio\n\nInstallation\n------------\n\n`pip install stockstats`\n\nCompatibility\n-------------\n\nPlease check the [setup.py](setup.py) file.\n\nNote that pandas add some type check after version 1.0. One type assert\nis skipped in `StockDataFrame`. Check ISSUE-50 for detail.\n\nLicense\n-------\n\n[BSD](LICENSE.txt)\n\nTutorial\n--------\n\n-   Initialize the `StockDataFrame` with the `retype` function which\n    convert a `pandas.DataFrame` to a `StockDataFrame`.\n\n``` {.python}\nstock = StockDataFrame.retype(pd.read_csv('stock.csv'))\n```\n\n-   Formalize your data. This package takes for granted that your data\n    is sorted by timestamp and contains certain columns. Please align\n    your column name.\n    -   `open`: the open price of the interval\n    -   `close`: the close price of the interval\n    -   `high`: the highest price of the interval\n    -   `low`: the lowest price of the interval\n    -   `volume`: the volume of stocks traded during the interval\n    -   `amount`: the amount of the stocks during the interval\n-   There are some shortcuts for frequent used statistics/indicators\n    like `kdjk`, `boll_hb`, `macd`, etc.\n-   The indicators/statistics are generated on the fly when they are\n    accessed. If you are accessing through `Series`, it may return not\n    found error. The fix is to explicitly initialize it by accessing it\n    like below:\n\n``` {.python}\n_ = stock['macd']\n# or\nstock.get('macd')\n```\n\n-   Using get item to access the indicators. The item name following the\n    pattern: `{columnName_window_statistics}`. Some\n    statistics/indicators has their short cut. See examples below:\n\n``` {.python}\n# volume delta against previous day\nstock['volume_delta']\n\n# open delta against next 2 day\nstock['open_2_d']\n\n# open price change (in percent) between today and the day before yesterday\n# 'r' stands for rate.\nstock['open_-2_r']\n\n# CR indicator, including 5, 10, 20 days moving average\nstock['cr']\nstock['cr-ma1']\nstock['cr-ma2']\nstock['cr-ma3']\n\n# volume max of three days ago, yesterday and two days later\nstock['volume_-3,2,-1_max']\n\n# volume min between 3 days ago and tomorrow\nstock['volume_-3~1_min']\n\n# KDJ, default to 9 days\nstock['kdjk']\nstock['kdjd']\nstock['kdjj']\n\n# three days KDJK cross up 3 days KDJD\nstock['kdj_3_xu_kdjd_3']\n\n# 2 days simple moving average on open price\nstock['open_2_sma']\n\n# MACD\nstock['macd']\n# MACD signal line\nstock['macds']\n# MACD histogram\nstock['macdh']\n\n# bolling, including upper band and lower band\nstock['boll']\nstock['boll_ub']\nstock['boll_lb']\n\n# close price less than 10.0 in 5 days count\nstock['close_10.0_le_5_c']\n\n# CR MA2 cross up CR MA1 in 20 days count\nstock['cr-ma2_xu_cr-ma1_20_c']\n\n# count forward(future) where close price is larger than 10\nstock['close_10.0_ge_5_fc']\n\n# 6 days RSI\nstock['rsi_6']\n# 12 days RSI\nstock['rsi_12']\n\n# 10 days WR\nstock['wr_10']\n# 6 days WR\nstock['wr_6']\n\n# CCI, default to 14 days\nstock['cci']\n# 20 days CCI\nstock['cci_20']\n\n# TR (true range)\nstock['tr']\n# ATR (Average True Range)\nstock['atr']\n\n# DMA, difference of 10 and 50 moving average\nstock['dma']\n\n# DMI\n# +DI, default to 14 days\nstock['pdi']\n# -DI, default to 14 days\nstock['mdi']\n# DX, default to 14 days of +DI and -DI\nstock['dx']\n# ADX, 6 days SMA of DX, same as stock['dx_6_ema']\nstock['adx']\n# ADXR, 6 days SMA of ADX, same as stock['adx_6_ema']\nstock['adxr']\n\n# TRIX, default to 12 days\nstock['trix']\n# TRIX based on the close price for a window of 3\nstock['close_3_trix']\n# MATRIX is the simple moving average of TRIX\nstock['trix_9_sma']\n# TEMA, another implementation for triple ema\nstock['tema']\n# TEMA based on the close price for a window of 2\nstock['close_2_tema']\n\n# VR, default to 26 days\nstock['vr']\n# MAVR is the simple moving average of VR\nstock['vr_6_sma']\n```\n\n-   \n\n    Following options are available for tuning. Note that all of them are class level options and MUST be changed before any calculation happens.\n\n    :   -   \n\n            KDJ\n\n            :   -   KDJ\\_WINDOW: default to 9\n\n        -   \n\n            BOLL\n\n            :   -   BOLL\\_WINDOW: default to 20\n                -   BOLL\\_STD\\_TIMES: default to 2\n\n        -   \n\n            MACD\n\n            :   -   MACD\\_EMA\\_SHORT: default to 12\n                -   MACD\\_EMA\\_LONG: default to 26\n                -   MACD\\_EMA\\_SIGNAL: default to 9\n\n        -   \n\n            PDI, MDI, DX & ADX\n\n            :   -   PDI\\_SMMA: default to 14\n                -   MDI\\_SMMA: default to 14\n                -   DX\\_SMMA: default to 14\n                -   ADX\\_EMA: default to 6\n                -   ADXR\\_EMA: default to 6\n\n        -   \n\n            CR\n\n            :   -   CR\\_MA1: default to 5\n                -   CR\\_MA2: default to 10\n                -   CR\\_MA3: default to 20\n\n        -   \n\n            Triple EMA\n\n            :   -   TRIX\\_EMA\\_WINDOW: default to 12\n                -   TEMA\\_EMA\\_WINDOW: default to 5\n\n        -   \n\n            ATR\n\n            :   -   ATR\\_SMMA: default to 14\n\nTo file issue, please visit:\n\n<https://github.com/jealous/stockstats>\n\nMACDH Note:\n\nIn July 2017 the code for MACDH was changed to drop an extra 2x\nmultiplier on the final value to align better with calculation methods\nused in tools like cryptowatch, tradingview, etc.\n\nContact author:\n\n-   Cedric Zhuang \\<<jealous@163.com>\\>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kaelzhang/stock-dataframe",
    "keywords": "pandas pandas-dataframe stock stat indicators macd",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stock-dataframe",
    "package_url": "https://pypi.org/project/stock-dataframe/",
    "platform": "",
    "project_url": "https://pypi.org/project/stock-dataframe/",
    "project_urls": {
      "Homepage": "https://github.com/kaelzhang/stock-dataframe"
    },
    "release_url": "https://pypi.org/project/stock-dataframe/0.1.0/",
    "requires_dist": [
      "numpy (>=1.9.2)",
      "pandas (>=0.18.1)",
      "int-date (>=0.1.7)"
    ],
    "requires_python": ">=2.7",
    "summary": "DataFrame with inline stock indicators support.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6760324,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfe40782cae4d007baede400b8a42dc4199a95e9e0374151b6e04b47ae59e269",
          "md5": "7a1a8a50a96b084c2a62ecbe9ea4d6f0",
          "sha256": "e8a730e5c7f067b943664057ffc7e7b4ef182c742488592aa17be7c19e3b8bcc"
        },
        "downloads": -1,
        "filename": "stock_dataframe-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a1a8a50a96b084c2a62ecbe9ea4d6f0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7",
        "size": 12619,
        "upload_time": "2020-03-06T08:27:49",
        "upload_time_iso_8601": "2020-03-06T08:27:49.586736Z",
        "url": "https://files.pythonhosted.org/packages/bf/e4/0782cae4d007baede400b8a42dc4199a95e9e0374151b6e04b47ae59e269/stock_dataframe-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b161341632b3e298120f26a6055cd8f63ab62666fc7c61e10b30ee21d4c28f35",
          "md5": "09c19f2801543c1cec3a0580c72e83de",
          "sha256": "2840b75228b64e6e8f642d583fbd5712738e6b78afe67d3519be5447b86a9de2"
        },
        "downloads": -1,
        "filename": "stock-dataframe-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "09c19f2801543c1cec3a0580c72e83de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 19413,
        "upload_time": "2020-03-06T08:27:52",
        "upload_time_iso_8601": "2020-03-06T08:27:52.528543Z",
        "url": "https://files.pythonhosted.org/packages/b1/61/341632b3e298120f26a6055cd8f63ab62666fc7c61e10b30ee21d4c28f35/stock-dataframe-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bfe40782cae4d007baede400b8a42dc4199a95e9e0374151b6e04b47ae59e269",
        "md5": "7a1a8a50a96b084c2a62ecbe9ea4d6f0",
        "sha256": "e8a730e5c7f067b943664057ffc7e7b4ef182c742488592aa17be7c19e3b8bcc"
      },
      "downloads": -1,
      "filename": "stock_dataframe-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7a1a8a50a96b084c2a62ecbe9ea4d6f0",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=2.7",
      "size": 12619,
      "upload_time": "2020-03-06T08:27:49",
      "upload_time_iso_8601": "2020-03-06T08:27:49.586736Z",
      "url": "https://files.pythonhosted.org/packages/bf/e4/0782cae4d007baede400b8a42dc4199a95e9e0374151b6e04b47ae59e269/stock_dataframe-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b161341632b3e298120f26a6055cd8f63ab62666fc7c61e10b30ee21d4c28f35",
        "md5": "09c19f2801543c1cec3a0580c72e83de",
        "sha256": "2840b75228b64e6e8f642d583fbd5712738e6b78afe67d3519be5447b86a9de2"
      },
      "downloads": -1,
      "filename": "stock-dataframe-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "09c19f2801543c1cec3a0580c72e83de",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 19413,
      "upload_time": "2020-03-06T08:27:52",
      "upload_time_iso_8601": "2020-03-06T08:27:52.528543Z",
      "url": "https://files.pythonhosted.org/packages/b1/61/341632b3e298120f26a6055cd8f63ab62666fc7c61e10b30ee21d4c28f35/stock-dataframe-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}