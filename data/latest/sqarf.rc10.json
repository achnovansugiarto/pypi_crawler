{
  "info": {
    "author": "Damien \"dee\" Coureau",
    "author_email": "dee909@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n[![Downloads](https://pepy.tech/badge/sqarf/month)](https://pepy.tech/project/sqarf)\n\n# sqarf\n\nSimple Quality Assurance Reports and Fixes\n\n## Install\nActivate your virtualenv and:\n\n`pip install -U sqarf`\n\n## Test\n\nClone the git repository, activate your virtual env, cd to the repository root and:\n```\npip install -e.[dev]\npytest -sv --cov=sqarf --color=yes --cov-report term-missing tests/\n```\n\nOur Ci coverage report can be visible here: https://kabaretstudio.gitlab.io/sqarf/\n\n## Usage\n\nYou create a QA test by subclassing `sqarf.QATest()` and implementing its `test()` method.\nIt must return `True` if the test passed and `False` otherwise, along with an message explaining why.\n\nThe method receives a `context` argument which is a dict-like object you can use to perform the test. \nIt may contain the thing to test, or parameters of the test, it's up to you. The test can also modify \nthe context content, and thus affect furter tests.\n\nEach test can decide if it's relevant in a given context by returning `True` or `False` from its\n`relevant_for()` method. When returning `False`, the test's `test()` will not be called.\n\nIf `test()` returned `False` (test has failed) and `can_fix()` returns `True`, the `fix()` method\nwill be called at an appropiate time. Each test can choose to disable auto-fix for its sub-tests and \nunperformed sibbling tests by calling the context's `set_allow_auto_fix()` method.\n\nYour test may \"contain\" sub-test by returning a list of test **types** from its `get_sub_test_types()`\nmethod. The result of a test is affected by its `test()` return value and by all its sub-tests results.\nNote that sub-test are performed **after** the *parent* test.\n\nBy default, when a test fails, further test will still be perfomed. Each test can choose to cancel its\nsub-tests and unperformed sibbling tests by calling the context's `set_stop_on_fail()` method.\n\nOnce you have your test types defined, you will use a `sqarf.Session()` to run them. Your tell\nwhich test to perform using its `refister_test_types()` method, and you can prepare the test context using\nthe `context_set()` method. Once the session is configured, each call to `run()` will instanciate all the\ntests and return a `QAResult` instance which evaluates to `True` if the no tests failed without being fixed.\n\nThe session can export details about each test performed by each `run()` with `to_lines()` (for prints), \n`to_dict_list()` (for inspection), `to_json()`/`to_json_file()` (for persistance), `to_html_tree` (for \nreporting), ...\n\nThe idea is to build a \"main group\" for *all your tests* with sub-groups using their `relevant_for()` method \nto activate or desactivate whole branches of tests. This strategy will let you manage a single test collection\nand have consistant reports, and will prevent you from writing your test classe names all around you code !\n\nYou can read `tests\\test_usage.py` for more usage details.\n\n# Basic Example \n\nThe `TestGroup` test is used to group `IsEnough` and `IsEven` tests.\n\nThe `TestGroup` configures the `IsEnough` test thru the `context`.\n\nThe `IsEnough` test may de-activate the `IsEven` test by setting a value in the `context`.\n\nThe session sets the value to test in the context.\n\n```\nimport sqarf\n\nclass IsEnough(sqarf.QATest):\n\n    def test(self, context):\n        value = context['value']\n        minimum = context['minimum']\n        if value > 2*minimum:\n            context['pass_iseven_test'] = True\n\n        if value > minimum:\n            return True, \"Got more that {}.\".format(\n                minimum\n            )\n        else:\n            return False, \"{} is not enough !\".format(\n                value\n            )\n\nclass IsEven(sqarf.QATest):\n\n    def test(self, context):\n        if context['pass_iseven_test']:\n            return True, 'Test disabled by a previous test.'\n        if context['value'] % 2:\n            return False, \"not even a little bit even\"\n        else:\n            return True, \"even in even\"\n\nclass TestGroup(sqarf.QATest):\n\n    def get_sub_test_types(self):\n        return (IsEnough, IsEven)\n\n    def test(self, context):\n        context['minimum'] = 10\n\n# perform tests in various conditions:\n\nsession = sqarf.Session()\nsession.register_test_types([TestGroup,])\n\nsession.context_set(value=15)\nresult = session.run()\nassert result.passed()\n\nsession.context_set(value=5)\nresult = session.run()\nassert result.failed()\n\n# This run will skip the IsEven test:\nsession.context_set(value=30)\nresult = session.run()\nassert result.failed()\n\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/kabaretstudio/sqarf",
    "keywords": "kabaret blender b3d pipeline dataflow workflow",
    "license": "LGPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sqarf",
    "package_url": "https://pypi.org/project/sqarf/",
    "platform": "",
    "project_url": "https://pypi.org/project/sqarf/",
    "project_urls": {
      "Homepage": "https://gitlab.com/kabaretstudio/sqarf"
    },
    "release_url": "https://pypi.org/project/sqarf/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple Quality Assurance Reports and Fixes",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9738422,
  "releases": {
    "0.0.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "752b421238067c059d52be4595343c155319bbb8d02ebd28ac0e5903254ec3af",
          "md5": "6f8a285c25c1f0dda4d10ecb5cb45e3e",
          "sha256": "433ef342092671ce6063e3d6fde46f1aae62ac5fc09428e505d4382ce7ec7abe"
        },
        "downloads": -1,
        "filename": "sqarf-0.0.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "6f8a285c25c1f0dda4d10ecb5cb45e3e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18446,
        "upload_time": "2020-12-24T11:33:57",
        "upload_time_iso_8601": "2020-12-24T11:33:57.399156Z",
        "url": "https://files.pythonhosted.org/packages/75/2b/421238067c059d52be4595343c155319bbb8d02ebd28ac0e5903254ec3af/sqarf-0.0.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.0rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6076824049d355e2c23d08b21e73815b2fcc32a2149091615bfb5d207e2f3c8d",
          "md5": "a79f7e558c75336dafbdd0ce42093070",
          "sha256": "2fff7142e382e276c1a842ab9f4096e7601c2098cc9b1a92f626b9914ec17f61"
        },
        "downloads": -1,
        "filename": "sqarf-0.0.0rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "a79f7e558c75336dafbdd0ce42093070",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29638,
        "upload_time": "2021-01-05T02:54:12",
        "upload_time_iso_8601": "2021-01-05T02:54:12.330265Z",
        "url": "https://files.pythonhosted.org/packages/60/76/824049d355e2c23d08b21e73815b2fcc32a2149091615bfb5d207e2f3c8d/sqarf-0.0.0rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.0rc3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c934241cf6f4c2e048febdcb4d2d02e1aaa3a8d35a3fa3e089fd2f92d9de269",
          "md5": "1f654afa7ebe8ec5172d067575c8884d",
          "sha256": "769f8ee27d9564b7ba9c678e81ade7142548ba0e5a21476808eb09abe1c81e59"
        },
        "downloads": -1,
        "filename": "sqarf-0.0.0rc3.tar.gz",
        "has_sig": false,
        "md5_digest": "1f654afa7ebe8ec5172d067575c8884d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30310,
        "upload_time": "2021-01-08T10:34:49",
        "upload_time_iso_8601": "2021-01-08T10:34:49.120136Z",
        "url": "https://files.pythonhosted.org/packages/0c/93/4241cf6f4c2e048febdcb4d2d02e1aaa3a8d35a3fa3e089fd2f92d9de269/sqarf-0.0.0rc3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.0rc4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eabd57b0f52516d2341e2461df8a22e42f9fc31963c31a1b55a27f2fba58cad2",
          "md5": "27dc7f65e7d891bb9445a54427e91a93",
          "sha256": "6ce488466d54f4ad24047bab8691d71774145fcfaf7cabec07f7e9b09eaf0409"
        },
        "downloads": -1,
        "filename": "sqarf-0.0.0rc4.tar.gz",
        "has_sig": false,
        "md5_digest": "27dc7f65e7d891bb9445a54427e91a93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31741,
        "upload_time": "2021-01-11T14:42:42",
        "upload_time_iso_8601": "2021-01-11T14:42:42.214056Z",
        "url": "https://files.pythonhosted.org/packages/ea/bd/57b0f52516d2341e2461df8a22e42f9fc31963c31a1b55a27f2fba58cad2/sqarf-0.0.0rc4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.0rc5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4beb007037560c6b5e548926e9c6794cf5b01c74507d442562060fe9718bcf8",
          "md5": "0a2ecc10837310eef78fe380ab183c85",
          "sha256": "cf373196b3d2426b2ad76a38a486afe67657d988c8a7b1a382c5391ba5487b94"
        },
        "downloads": -1,
        "filename": "sqarf-0.0.0rc5.tar.gz",
        "has_sig": false,
        "md5_digest": "0a2ecc10837310eef78fe380ab183c85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31843,
        "upload_time": "2021-01-11T22:31:45",
        "upload_time_iso_8601": "2021-01-11T22:31:45.049035Z",
        "url": "https://files.pythonhosted.org/packages/f4/be/b007037560c6b5e548926e9c6794cf5b01c74507d442562060fe9718bcf8/sqarf-0.0.0rc5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.0rc6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0299ccf1e4b818a510ba90ded4fa4232621a8bb3bf97feb403fdcb069de0b6a",
          "md5": "ffac641c6157e1dc1e556fc107436de3",
          "sha256": "e015f3e4475b09629efef581be49137486d078cbe013abb61a7e84c3378f95ec"
        },
        "downloads": -1,
        "filename": "sqarf-0.0.0rc6.tar.gz",
        "has_sig": false,
        "md5_digest": "ffac641c6157e1dc1e556fc107436de3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33487,
        "upload_time": "2021-01-14T22:49:42",
        "upload_time_iso_8601": "2021-01-14T22:49:42.487062Z",
        "url": "https://files.pythonhosted.org/packages/a0/29/9ccf1e4b818a510ba90ded4fa4232621a8bb3bf97feb403fdcb069de0b6a/sqarf-0.0.0rc6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b3ba66231c6e32522676a7dd2cdd6974834311d6dc149d41fb2a314876084a0",
          "md5": "25b399233e8cb4cc6bb3be76c7e24e26",
          "sha256": "4f5f68d0f08ee0f989e0f05a5c5080bf3325740ac50e48f2c2f0ecce82e9f72d"
        },
        "downloads": -1,
        "filename": "sqarf-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "25b399233e8cb4cc6bb3be76c7e24e26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33395,
        "upload_time": "2021-01-25T18:37:11",
        "upload_time_iso_8601": "2021-01-25T18:37:11.258743Z",
        "url": "https://files.pythonhosted.org/packages/2b/3b/a66231c6e32522676a7dd2cdd6974834311d6dc149d41fb2a314876084a0/sqarf-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b3695752e68d551a6c8d3f8d1812e9eaf7f743fcf31c8f7ba56929c08f740e1",
          "md5": "31c16636d7a871b62ecdf9782c91c08f",
          "sha256": "5287ebd341794e36bb42beb27be1dfd1449ac752fdb075364fa0c908ed55d342"
        },
        "downloads": -1,
        "filename": "sqarf-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "31c16636d7a871b62ecdf9782c91c08f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33432,
        "upload_time": "2021-01-28T01:40:35",
        "upload_time_iso_8601": "2021-01-28T01:40:35.522396Z",
        "url": "https://files.pythonhosted.org/packages/3b/36/95752e68d551a6c8d3f8d1812e9eaf7f743fcf31c8f7ba56929c08f740e1/sqarf-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf881e55a169dad2ab8e0a5f8142ca558aeb88b7d4edae5aab26587cc6acfdaa",
          "md5": "3ddedebf1765173fad040d4ba5d62182",
          "sha256": "6a5c7bee6814ce4db25a9f41b7860180f6c64c5c6f066cf3e1c4693966107fe8"
        },
        "downloads": -1,
        "filename": "sqarf-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3ddedebf1765173fad040d4ba5d62182",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34520,
        "upload_time": "2021-02-05T11:16:04",
        "upload_time_iso_8601": "2021-02-05T11:16:04.162120Z",
        "url": "https://files.pythonhosted.org/packages/cf/88/1e55a169dad2ab8e0a5f8142ca558aeb88b7d4edae5aab26587cc6acfdaa/sqarf-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0751eacd05118c783d9c09670a29f3bf1f7119f0e936c8774d0d09e4e92a42bb",
          "md5": "d5ea9dca622ba2dec588f15329f3b2f8",
          "sha256": "4b2b0d859f8dd281c55d61252a92e99727f0f13f09a64d93790fc4aa3080e542"
        },
        "downloads": -1,
        "filename": "sqarf-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d5ea9dca622ba2dec588f15329f3b2f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34503,
        "upload_time": "2021-03-11T08:35:48",
        "upload_time_iso_8601": "2021-03-11T08:35:48.239555Z",
        "url": "https://files.pythonhosted.org/packages/07/51/eacd05118c783d9c09670a29f3bf1f7119f0e936c8774d0d09e4e92a42bb/sqarf-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0751eacd05118c783d9c09670a29f3bf1f7119f0e936c8774d0d09e4e92a42bb",
        "md5": "d5ea9dca622ba2dec588f15329f3b2f8",
        "sha256": "4b2b0d859f8dd281c55d61252a92e99727f0f13f09a64d93790fc4aa3080e542"
      },
      "downloads": -1,
      "filename": "sqarf-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d5ea9dca622ba2dec588f15329f3b2f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 34503,
      "upload_time": "2021-03-11T08:35:48",
      "upload_time_iso_8601": "2021-03-11T08:35:48.239555Z",
      "url": "https://files.pythonhosted.org/packages/07/51/eacd05118c783d9c09670a29f3bf1f7119f0e936c8774d0d09e4e92a42bb/sqarf-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}