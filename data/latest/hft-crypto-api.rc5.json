{
  "info": {
    "author": "",
    "author_email": "HFT-Crypto-API <acidpictures@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# HFT CRYPTO API-BitMart\n\nPython module for Bitmart SDK\n\n## Installation\n\n``` pip install hftcryptoapi```\n\n# Spot Market\n\n## Introduction\n\n``` from hftcryptoapi.bitmart import Bitmart ```\n\n## Basic Information\n\nInitialise an instance of Bitmart client:\n\n```\nfrom hftcryptoapi.bitmart import Bitmart\n\napi_key = \"\"\nsecret_key = \"\"\nmemo = \"\"\n\nclient = Bitmart(api_key, secret_key, memo, exchange=Exchange.BITMART)\n```\n\n## System Status\n\n- Get System Time, returns system time in datetime format.\n\n```\nbt_time = client.get_system_time()\n```\n\n- Get System Service Status, returns system status\n\n```\nbt_staus = client.get_service_status()\n```\n\n## Public Market Data\n\nFunctions to get info from spot market public API.\n\n- Get Currency List\n\n```\ncurrency_list = client.get_currency_list()\n```\n\n- Get List of Trading Pairs, return a list of all trading pairs\n\n```\ntrading_pairs = client.get_list_of_trading_pairs()\n```\n\n- Get List of Spot Symbol Details\n\n```\n symbols_details = client.get_spot_symbols_details()\n```\n\n- Get Ticker details by Symbol\n\n```\n    symbol_details = client.get_spot_ticker_details(\"BTC_USDT\")\n```\n\n- Get K-Line, return Kline object for specified symbol and time period for SPOT and FUTURES markets\n\n```\nsymbol_klines = client.get_symbol_kline(symbol, fromTime, toTime, step, market = Market.SPOT)\n```\n\n- Get Depth\n  Returns [buys], [sells] wrapped in SportDepth or FuturesDepth object, depends on market type (Market.SPOT or\n  Market.FUTURES)\n\n```\nsymbol_depth = client.get_symbol_depth(symbol, precision, size, market=Market.SPOT)\n```\n\n- Get Recent Trades, returns Trade object for specified symbol and number of trades (by default: 50)\n\n```\nbt_trades = client.get_symbol_recent_trades(symbol, N)\n```\n\n## Funding Account Data\n\n- Get Account Balance, a unified method for all types of markets (SPOT, MARGIN, FUTURES). Market should be defined.\n  Returns list of currencies/positions with attributes unique for each market:\n\n```\nresult = client.get_account_balance(market=Market.FUTURES)\nresult = client.get_account_balance(market=Market.SPOT_MARGIN)\n[print(b) for b in client.get_account_balance(market=Market.SPOT).items]\n```\n\n- Get User Fee Rate\n\n```\nfee_rate = client.get_spot_user_fee_rate()\n```\n\n- Get Actual Trade Fee Rate\n\n```\nbt_trade_fee = client.get_trade_fee_rate(symbol)\n```\n\n## Spot/Margin Trading\n\n- Place Spot Order (V2)\n\n```\n order = client.submit_order(market=Market.SPOT, symbol=symbol, side=SpotSide.BUY, size=0.1, price=70)\n```\n\n- Place Margin Order\n\n```\n order = client.submit_order(market=Market.SPOT_MARGIN, symbol=symbol, side=SpotSide.BUY, size=0.1, price=70)\n```\n\n- Cancel an Order (V3)\n\n```\n client.cancel_order(order)\n # OR\n client.cancel_order_by_id(order.symbol, order_id=order.order_id, market=Market.SPOT)\n\n```\n\n- Cancel All Orders\n\n```\n client.cancel_all_orders(symbol=symbol_spot, market=Market.SPOT, side=SpotSide.BUY)\n```\n\n- Get Order Detail (V2), get/update order details\n\n```\n order = get_order_details(symbol, order_id, market)\n order = client.update_order_details(order)\n```\n\n- Get User Order History (V3), return list of order objects\n\n```\nhistory = client.get_order_history(symbol=symbol_eth, market=Market.SPOT)\n```\n\n### Margin Loan\n\n- Get Trading Pair Borrowing Rate and Amount\n\n```\n rate = client.spot_margin_borrowing_rate(symbol_spot)\n```\n\n- Get Borrow Record(Isolated)\n\n```\n b_records = client.spot_margin_get_borrow_record(symbol_spot)\n```\n\n- Get Repayment Record(Isolated)\n\n```\n r_records = client.spot_margin_get_repay_record(symbol_spot)\n```\n\n- Margin Borrow (Isolated)\n\n```\n borrow_id = client.spot_margin_borrow(symbol_spot, \"BTC\", 0.005)\n```\n\n- Margin Repay (Isolated)\n\n```\n repay_id = client.spot_margin_repay(symbol_spot, \"BTC\", 0.005)\n```\n\n# Futures\n\n## Basic Information\n\nTo access methods for Futures account/market methods should have a flag Market.FUTURES passed to.\n\n## Futures Market Data\n\n- Get Futures Open Interest\n\n```\nfutures_open_interest = client.get_futures_open_interest(symbol)\n```\n\n- Get Current Funding Rate for futures\n\n```\n funding_rate = client.get_futures_funding_rate(symbol)\n```\n\n- Get List of Futures Contract Details\n\n```\n contracts_details = client.get_futures_contracts_details()\n```\n\n## Futures Trading\n\n- Get Futures Position details for a specified contract\n\n```\n client.get_futures_position_details(symbol)\n```\n\n- Close Futures Position\n\n```\n client.close_futures_position(symbol=symbol, position_side=Position.SHORT, open_type=OrderOpenType.CROSS)\n```\n\n- Get Account Balance - see spot description\n\n- Submit Order - see spot description\n\n- Cancel Order - see spot description\n\n- Cancel All orders - see spot description\n\n- Get Order Detail - see spot description\n\n- Get Order History - see spot description\n\n## WebSockets\n\n- Subscribe to one or many WebSocket events\n\n```\n # list of channels for list of symbols\n client.subscribe_public(market=Market.FUTURES, symbols=[symbol],\n                                     channels=[BtFuturesSocketKlineChannels.K_LINE_CHANNEL_1HOUR])\n # common listener for all symbols                                    \n client.subscribe_private(market=Market.FUTURES, channels=[BtFuturesTPrivatePositionChannel])\n```\n\n- Unsubscribe to one or many WebSocket events\n\n```\n # SPOT\n client.subscribe_public(Market.SPOT, [BtSpotSocketKlineChannels.K_LINE_CHANNEL_1HOUR,\n                                      BtSpotSocketDepthChannels.DEPTH_CHANNEL_5LEVEL,\n                                      BtSpotTradeChannel,\n                                      BtSpotTickerChannel],\n                        symbols=[symbol_spot])\n client.subscribe_private(Market.SPOT, [BtSpotOrderChannel], symbols=[symbol_spot])\n\n # FUTURES\n client.subscribe_public(Market.FUTURES, [BtFuturesTickerChannel])\n client.subscribe_public(Market.FUTURES, [BtFuturesSocketKlineChannels.K_LINE_CHANNEL_1HOUR,\n                                         BtFuturesSocketDepthChannels.DEPTH_CHANNEL_5LEVEL], [symbol])\n client.subscribe_private(Market.FUTURES, [BtFuturesTPrivatePositionChannel])\n client.subscribe_private(Market.FUTURES, [BtFuturesTPrivateAssetChannel], ['ETH', 'USDT'])                                         \n```\n\n- Start WebSocket listener for market type\n\n```\n def _on_message(self, msg: Union[WebSocketKline, WebSocketPositionFutures]):\n     if type(msg) is WebSocketKline:\n         # ...\n     else:\n         # ..         \n client.start_websockets(market=Market.FUTURES, on_message=_on_message)\n client.start_websockets(Market.SPOT, on_message=_on_message_spot))\n```\n\n- Stop and disconnect from WebSockets\n\n```\n client.stop_websockets(Market.FUTURES)\n```\n\n# ChangeLog\n20.12.2022 Version 1.0.6 - Margin Loan implementation\n\n19.12.2022 Version 1.0.5\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "HFT-Crypto-API",
    "package_url": "https://pypi.org/project/HFT-Crypto-API/",
    "platform": null,
    "project_url": "https://pypi.org/project/HFT-Crypto-API/",
    "project_urls": {
      "Homepage": "https://github.com/hftcryptobot/HFT-Crypto-API"
    },
    "release_url": "https://pypi.org/project/HFT-Crypto-API/1.0.6/",
    "requires_dist": [
      "pydantic==1.10.2",
      "pytest==6.2.1",
      "requests==2.23.0",
      "urllib3==1.21.1",
      "utils==1.0.1",
      "websockets>=9.1"
    ],
    "requires_python": "",
    "summary": "Bitmarket REST/Websocket Api implementation",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16160276,
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ab3ae6bf26d8068988c1768b8d36afe828477ad1702ef1cfe0a828ae97b1cfe",
          "md5": "edac46ae607cac784457a819c253747e",
          "sha256": "b5505192a259c89eec60d0960211d899d5844f6b7bda7938720b8f97133782a0"
        },
        "downloads": -1,
        "filename": "hft_crypto_api-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "edac46ae607cac784457a819c253747e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 208780,
        "upload_time": "2022-12-14T16:23:25",
        "upload_time_iso_8601": "2022-12-14T16:23:25.223204Z",
        "url": "https://files.pythonhosted.org/packages/0a/b3/ae6bf26d8068988c1768b8d36afe828477ad1702ef1cfe0a828ae97b1cfe/hft_crypto_api-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e30d0de9543b368d74cd00b35f9d980e704c21dbf539d253f150be306c6d547",
          "md5": "addd0eb0b6bed163f500ffe640d6128a",
          "sha256": "07f6906c9eae0e36d6f5e6e1a4fbdb878400050e0a4872b601a724e9f2e8d7dd"
        },
        "downloads": -1,
        "filename": "hft_crypto_api-1.0.3b0.tar.gz",
        "has_sig": false,
        "md5_digest": "addd0eb0b6bed163f500ffe640d6128a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 208792,
        "upload_time": "2022-12-14T16:26:19",
        "upload_time_iso_8601": "2022-12-14T16:26:19.575998Z",
        "url": "https://files.pythonhosted.org/packages/5e/30/d0de9543b368d74cd00b35f9d980e704c21dbf539d253f150be306c6d547/hft_crypto_api-1.0.3b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "270f5cb9871c0ed6cab2512ab76f3b7e28ea4c5add8311b8dfc51662967fae27",
          "md5": "f49aa5f7bccc5a10917d94460cd06a3b",
          "sha256": "525e5e75cb0126b589ad0fa54ccbed61a7373a67439d587c7d1175da76e824e2"
        },
        "downloads": -1,
        "filename": "hft_crypto_api-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f49aa5f7bccc5a10917d94460cd06a3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 208758,
        "upload_time": "2022-12-15T10:06:33",
        "upload_time_iso_8601": "2022-12-15T10:06:33.460270Z",
        "url": "https://files.pythonhosted.org/packages/27/0f/5cb9871c0ed6cab2512ab76f3b7e28ea4c5add8311b8dfc51662967fae27/hft_crypto_api-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d06f9efa9d7b5039f1a5542f09a818c9116eb066e657a8d77094768a2545db1",
          "md5": "a6128f7ecc39c98c62fe88ca7a0d4004",
          "sha256": "040b642ce949c39a4061ead988da8e6afb18288fac25ff18b23fc94b65bdce7a"
        },
        "downloads": -1,
        "filename": "hft_crypto_api-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a6128f7ecc39c98c62fe88ca7a0d4004",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 322629,
        "upload_time": "2022-12-19T17:47:24",
        "upload_time_iso_8601": "2022-12-19T17:47:24.660105Z",
        "url": "https://files.pythonhosted.org/packages/9d/06/f9efa9d7b5039f1a5542f09a818c9116eb066e657a8d77094768a2545db1/hft_crypto_api-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a97212819160fa862422b01cc745c3c5281739269aae8a094842d7c0e08ef07",
          "md5": "9d5324ee6183278b8bc69b2499003e88",
          "sha256": "f26a29c0d2c41fe2d3074d24058b3db62ee2637ec161397ba932983b90dc81aa"
        },
        "downloads": -1,
        "filename": "hft_crypto_api-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9d5324ee6183278b8bc69b2499003e88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 323625,
        "upload_time": "2022-12-20T11:08:03",
        "upload_time_iso_8601": "2022-12-20T11:08:03.461794Z",
        "url": "https://files.pythonhosted.org/packages/0a/97/212819160fa862422b01cc745c3c5281739269aae8a094842d7c0e08ef07/hft_crypto_api-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a97212819160fa862422b01cc745c3c5281739269aae8a094842d7c0e08ef07",
        "md5": "9d5324ee6183278b8bc69b2499003e88",
        "sha256": "f26a29c0d2c41fe2d3074d24058b3db62ee2637ec161397ba932983b90dc81aa"
      },
      "downloads": -1,
      "filename": "hft_crypto_api-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "9d5324ee6183278b8bc69b2499003e88",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 323625,
      "upload_time": "2022-12-20T11:08:03",
      "upload_time_iso_8601": "2022-12-20T11:08:03.461794Z",
      "url": "https://files.pythonhosted.org/packages/0a/97/212819160fa862422b01cc745c3c5281739269aae8a094842d7c0e08ef07/hft_crypto_api-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}