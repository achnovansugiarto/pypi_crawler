{
  "info": {
    "author": "Carlos Molinero",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# awk_dataframe\n\nThis library is intended to use for fast and low RAM memory consumption of very large .csv files. It works by accumulating a sequence of awk commands that will be executed through pipes in bash when the actual values of the dataframe are to be consumed.\n\n## First things first\n\nThis is an wrapper around AWK for its use as a dataframe implementation, therefore, it won't work unless you are using a Linux distribution that can run BASH and GAWK. It could work on a macOS but I haven't tested it. I am personally running Ubuntu 22.04. It also compiles two C++ files (to read and save) and needs g++ in the system in order to compile them.\n\nIt will also not work if your regional settings use the comma as the decimal separator. One way to change this is to set the regional settings to the UK as follows:\n\n```\nsudo update-locale LC_NUMERIC=\"en_GB.UTF-8\"\n```\n\nand then logout of your system.\n\n## Disk usage\n\nNot only this library runs directly from the hard drive trying to avoid RAM limitations which will degrade your hard drive.\nIt also stores temporary files into the ```~/.tmp``` folder. Altough they should be deleted automatically, please check from time to time, since there might be some bug that leaves files behind. Also, although it will be automatically created, make sure that it already exists in your disk, in order to avoid failures at creation time due to permissions.\n\nMost commands do not take time, but be advised that ```df.shape()```, ```print(df)```, ```df.head()```, ```df.values()```, ```df.to_pandas()```, ```df.to_npd()``` and ```df.to_csv(path)``` will run the full set of commands and might take time, avoid using them as much as possible. The best implementation would be to generate all conditions for subsetting and then either going to a pandas/numpy_dataframe object if you want to further manipulate in RAM or using ```df.to_csv(path)``` to save the results to the hard drive.\n\n## Authors and acknowledgment\nIdea and implementation by Carlos Molinero.\n\n## License\nMIT license.\n\n\n## Project status\nCurrently this is an early implementation, meaning that it is in a very unstable state, and the syntax might change and bugs may arise. I do not recommend installing it, I am publishing it for my personal use.\n\n---\n# Usage:\nIn the following lines I paste examples of the main commands, as some sort of documentation until a more complete documentation is available.\n\n# INIT\n\n\n```python\nimport os\nimport sys\nimport numpy as np\nimport numpy_dataframe as npd\nimport pandas as pd\nimport awk_dataframe as ad\nimport importlib\nimport time\nimport random\nimport string\n```\n\n# Functions\n\n\n```python\ndef get_random_string(length):\n    # thanks to https://pynative.com/python-generate-random-string/\n    # choose from all lowercase letter\n    letters = string.ascii_lowercase\n    result_str = ''.join(random.choice(letters) for i in range(length))\n    return result_str\n```\n\n## create test csv\n\n\n```python\nn = 20\nnames = np.array([get_random_string(5) for x in range(5)])\n\nt = npd.DataFrame()\nt.values = np.random.rand(n)\nt.some_ints = np.floor(np.random.rand(n)*50).astype(int)\nt.name = names[np.random.choice(range(5),n)]\n\npath = os.path.expanduser(\"~\") + \"/.tmp/example.csv\"\nt.to_csv(path)\n```\n\n# Gawk dataframe\n\n## contruct object / read csv\n\n\n```python\npath = os.path.expanduser(\"~\") + \"/.tmp/example.csv\"\ndf = ad.read_csv(path)\n```\n\nor\n\n\n```python\npath = os.path.expanduser(\"~\") + \"/.tmp/example.csv\"\ndf = ad.DataFrame()\ndf.read_csv(path)\n```\n\n## select rows/columns\n\n\n```python\ndf[0:10,:]\n```\n\n\n\n\n    values,some_ints,name\n    0.8633713864104114,21,mlyas\n    0.7797461486214806,32,efcsm\n    0.9415640935512127,24,tcbtr\n    0.7678670658611503,44,efcsm\n    0.8223095493965592,2,bgmqd\n    0.06832888693954564,31,bgmqd\n    0.717887788740719,44,mlyas\n    0.6559538612897098,49,efcsm\n    0.08927654448880817,44,tcbtr\n    0.7338088959472877,36,tcbtr\n\n\n\n\n```python\ndf.some_ints\n```\n\n\n\n\n    some_ints\n    21\n    32\n    24\n    44\n    2\n    31\n    44\n    49\n    44\n    36\n    9\n    11\n    12\n    31\n    7\n    40\n    26\n    38\n    35\n    26\n\n\n\n\n```python\ndf[\"some_ints\"]\n```\n\n\n\n\n    some_ints\n    21\n    32\n    24\n    44\n    2\n    31\n    44\n    49\n    44\n    36\n    9\n    11\n    12\n    31\n    7\n    40\n    26\n    38\n    35\n    26\n\n\n\n\n```python\ndf[:,\"some_ints\"]\n```\n\n\n\n\n    some_ints\n    21\n    32\n    24\n    44\n    2\n    31\n    44\n    49\n    44\n    36\n    9\n    11\n    12\n    31\n    7\n    40\n    26\n    38\n    35\n    26\n\n\n\n\n```python\ndf[:,[\"some_ints\",\"name\"]]\n```\n\n\n\n\n    some_ints,name\n    21,mlyas\n    32,efcsm\n    24,tcbtr\n    44,efcsm\n    2,bgmqd\n    31,bgmqd\n    44,mlyas\n    49,efcsm\n    44,tcbtr\n    36,tcbtr\n    9,mlyas\n    11,lmqgd\n    12,bgmqd\n    31,mlyas\n    7,efcsm\n    40,tcbtr\n    26,mlyas\n    38,efcsm\n    35,mlyas\n    26,mlyas\n\n\n\n\n```python\ndf[:,1:2]\n```\n\n\n\n\n    some_ints\n    21\n    32\n    24\n    44\n    2\n    31\n    44\n    49\n    44\n    36\n    9\n    11\n    12\n    31\n    7\n    40\n    26\n    38\n    35\n    26\n\n\n\n\n```python\ndf[:,1:]\n```\n\n\n\n\n    some_ints,name\n    21,mlyas\n    32,efcsm\n    24,tcbtr\n    44,efcsm\n    2,bgmqd\n    31,bgmqd\n    44,mlyas\n    49,efcsm\n    44,tcbtr\n    36,tcbtr\n    9,mlyas\n    11,lmqgd\n    12,bgmqd\n    31,mlyas\n    7,efcsm\n    40,tcbtr\n    26,mlyas\n    38,efcsm\n    35,mlyas\n    26,mlyas\n\n\n\n\n```python\ndf[:10,:]\n```\n\n\n\n\n    values,some_ints,name\n    0.8633713864104114,21,mlyas\n    0.7797461486214806,32,efcsm\n    0.9415640935512127,24,tcbtr\n    0.7678670658611503,44,efcsm\n    0.8223095493965592,2,bgmqd\n    0.06832888693954564,31,bgmqd\n    0.717887788740719,44,mlyas\n    0.6559538612897098,49,efcsm\n    0.08927654448880817,44,tcbtr\n    0.7338088959472877,36,tcbtr\n\n\n\n\n```python\ndf[3,2]\n```\n\n\n\n\n    name\n    efcsm\n\n\n\n\n```python\ndf[3,:]\n```\n\n\n\n\n    values,some_ints,name\n    0.7678670658611503,44,efcsm\n\n\n\n\n```python\ndf[:,1]\n```\n\n\n\n\n    some_ints\n    21\n    32\n    24\n    44\n    2\n    31\n    44\n    49\n    44\n    36\n    9\n    11\n    12\n    31\n    7\n    40\n    26\n    38\n    35\n    26\n\n\n\n\n```python\ndf[[0,3],1]\n```\n\n\n\n\n    some_ints\n    21\n    44\n\n\n\n\n```python\ndf[:,[0,1]]\n```\n\n\n\n\n    values,some_ints\n    0.8633713864104114,21\n    0.7797461486214806,32\n    0.9415640935512127,24\n    0.7678670658611503,44\n    0.8223095493965592,2\n    0.06832888693954564,31\n    0.717887788740719,44\n    0.6559538612897098,49\n    0.08927654448880817,44\n    0.7338088959472877,36\n    0.701592457357365,9\n    0.04338298448626843,11\n    0.3297427254572507,12\n    0.1011755876260031,31\n    0.8235585667750851,7\n    0.5829664850991141,40\n    0.14016453615592928,26\n    0.43436632265162967,38\n    0.4097725083991255,35\n    0.6379834519420476,26\n\n\n\n\n```python\ndf[range(5),:]\n```\n\n\n\n\n    values,some_ints,name\n    0.8633713864104114,21,mlyas\n    0.7797461486214806,32,efcsm\n    0.9415640935512127,24,tcbtr\n    0.7678670658611503,44,efcsm\n    0.8223095493965592,2,bgmqd\n\n\n\n\n```python\ndf.get_rows(range(10))\n```\n\n\n\n\n    values,some_ints,name\n    0.8633713864104114,21,mlyas\n    0.7797461486214806,32,efcsm\n    0.9415640935512127,24,tcbtr\n    0.7678670658611503,44,efcsm\n    0.8223095493965592,2,bgmqd\n    0.06832888693954564,31,bgmqd\n    0.717887788740719,44,mlyas\n    0.6559538612897098,49,efcsm\n    0.08927654448880817,44,tcbtr\n    0.7338088959472877,36,tcbtr\n\n\n\n\n```python\ndf.get_cols(range(2))\n```\n\n\n\n\n    values,some_ints\n    0.8633713864104114,21\n    0.7797461486214806,32\n    0.9415640935512127,24\n    0.7678670658611503,44\n    0.8223095493965592,2\n    0.06832888693954564,31\n    0.717887788740719,44\n    0.6559538612897098,49\n    0.08927654448880817,44\n    0.7338088959472877,36\n    0.701592457357365,9\n    0.04338298448626843,11\n    0.3297427254572507,12\n    0.1011755876260031,31\n    0.8235585667750851,7\n    0.5829664850991141,40\n    0.14016453615592928,26\n    0.43436632265162967,38\n    0.4097725083991255,35\n    0.6379834519420476,26\n\n\n\n## names, shape, head\n\n\n```python\ndf.names()\n```\n\n\n\n\n    array(['values', 'some_ints', 'name'], dtype='<U9')\n\n\n\n\n```python\ndf.shape()\n```\n\n\n\n\n    array([20,  3])\n\n\n\n\n```python\ndf.head()\n```\n\n\n\n\n    values,some_ints,name\n    0.8633713864104114,21,mlyas\n    0.7797461486214806,32,efcsm\n    0.9415640935512127,24,tcbtr\n    0.7678670658611503,44,efcsm\n    0.8223095493965592,2,bgmqd\n    0.06832888693954564,31,bgmqd\n    0.717887788740719,44,mlyas\n    0.6559538612897098,49,efcsm\n    0.08927654448880817,44,tcbtr\n    0.7338088959472877,36,tcbtr\n    0.701592457357365,9,mlyas\n    0.04338298448626843,11,lmqgd\n\n\n\n\n```python\ndf.head(5)\n```\n\n\n\n\n    values,some_ints,name\n    0.8633713864104114,21,mlyas\n    0.7797461486214806,32,efcsm\n    0.9415640935512127,24,tcbtr\n    0.7678670658611503,44,efcsm\n    0.8223095493965592,2,bgmqd\n    0.06832888693954564,31,bgmqd\n    0.717887788740719,44,mlyas\n\n\n\n## where\n\n\n```python\ndf.where(\"values < 0.8 && values > .6\")\n```\n\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n\n\n\n\n\n    values,some_ints,name\n    0.7797461486,32,efcsm\n    0.7678670659,44,efcsm\n    0.7178877887,44,mlyas\n    0.6559538613,49,efcsm\n    0.7338088959,36,tcbtr\n    0.7015924574,9,mlyas\n    0.6379834519,26,mlyas\n\n\n\n\n```python\ndf.where(\"\"\"  name == \"mlyas\"  \"\"\")\n```\n\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n\n\n\n\n\n    values,some_ints,name\n    0.8633713864104114,21,mlyas\n    0.717887788740719,44,mlyas\n    0.701592457357365,9,mlyas\n    0.1011755876260031,31,mlyas\n    0.14016453615592928,26,mlyas\n    0.4097725083991255,35,mlyas\n    0.6379834519420476,26,mlyas\n\n\n\n\n```python\ndf.where(\"\"\"  name in [\"efcsm\",\"tcbtr\"]  \"\"\")\n```\n\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n\n\n\n\n\n    values,some_ints,name\n    0.7797461486214806,32,efcsm\n    0.9415640935512127,24,tcbtr\n    0.7678670658611503,44,efcsm\n    0.6559538612897098,49,efcsm\n    0.08927654448880817,44,tcbtr\n    0.7338088959472877,36,tcbtr\n    0.8235585667750851,7,efcsm\n    0.5829664850991141,40,tcbtr\n    0.43436632265162967,38,efcsm\n\n\n\n## unique\n\n\n```python\ndf.unique(\"name\")\n```\n\n\n\n\n    name\n    lmqgd\n    efcsm\n    mlyas\n    bgmqd\n    tcbtr\n\n\n\n## add column\n\n\n```python\ndf_with_new_column = df.add_column(\"new_column\")\ndf_with_new_column\n```\n\n\n\n\n    values,some_ints,name,new_column\n    0.8633713864104114,21,mlyas,\n    0.7797461486214806,32,efcsm,\n    0.9415640935512127,24,tcbtr,\n    0.7678670658611503,44,efcsm,\n    0.8223095493965592,2,bgmqd,\n    0.06832888693954564,31,bgmqd,\n    0.717887788740719,44,mlyas,\n    0.6559538612897098,49,efcsm,\n    0.08927654448880817,44,tcbtr,\n    0.7338088959472877,36,tcbtr,\n    0.701592457357365,9,mlyas,\n    0.04338298448626843,11,lmqgd,\n    0.3297427254572507,12,bgmqd,\n    0.1011755876260031,31,mlyas,\n    0.8235585667750851,7,efcsm,\n    0.5829664850991141,40,tcbtr,\n    0.14016453615592928,26,mlyas,\n    0.43436632265162967,38,efcsm,\n    0.4097725083991255,35,mlyas,\n    0.6379834519420476,26,mlyas,\n\n\n\n# modify\n\n\n```python\ndf.modify(\"values = values + some_ints * 3\")\n```\n\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n\n\n\n\n\n    values,some_ints,name\n    63.86337139,21,mlyas\n    96.77974615,32,efcsm\n    72.94156409,24,tcbtr\n    132.7678671,44,efcsm\n    6.822309549,2,bgmqd\n    93.06832889,31,bgmqd\n    132.7178878,44,mlyas\n    147.6559539,49,efcsm\n    132.0892765,44,tcbtr\n    108.7338089,36,tcbtr\n    27.70159246,9,mlyas\n    33.04338298,11,lmqgd\n    36.32974273,12,bgmqd\n    93.10117559,31,mlyas\n    21.82355857,7,efcsm\n    120.5829665,40,tcbtr\n    78.14016454,26,mlyas\n    114.4343663,38,efcsm\n    105.4097725,35,mlyas\n    78.63798345,26,mlyas\n\n\n\nThe previous operation does not modify the values in df\n\n\n```python\ndf\n```\n\n\n\n\n    values,some_ints,name\n    0.8633713864104114,21,mlyas\n    0.7797461486214806,32,efcsm\n    0.9415640935512127,24,tcbtr\n    0.7678670658611503,44,efcsm\n    0.8223095493965592,2,bgmqd\n    0.06832888693954564,31,bgmqd\n    0.717887788740719,44,mlyas\n    0.6559538612897098,49,efcsm\n    0.08927654448880817,44,tcbtr\n    0.7338088959472877,36,tcbtr\n    0.701592457357365,9,mlyas\n    0.04338298448626843,11,lmqgd\n    0.3297427254572507,12,bgmqd\n    0.1011755876260031,31,mlyas\n    0.8235585667750851,7,efcsm\n    0.5829664850991141,40,tcbtr\n    0.14016453615592928,26,mlyas\n    0.43436632265162967,38,efcsm\n    0.4097725083991255,35,mlyas\n    0.6379834519420476,26,mlyas\n\n\n\nYou need to assign it in order for the modifications to be \"saved\"\n\n\n```python\ndf_mod = df.modify(\"values = values + some_ints * 3\")\ndf_mod\n```\n\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n\n\n\n\n\n    values,some_ints,name\n    63.86337139,21,mlyas\n    96.77974615,32,efcsm\n    72.94156409,24,tcbtr\n    132.7678671,44,efcsm\n    6.822309549,2,bgmqd\n    93.06832889,31,bgmqd\n    132.7178878,44,mlyas\n    147.6559539,49,efcsm\n    132.0892765,44,tcbtr\n    108.7338089,36,tcbtr\n    27.70159246,9,mlyas\n    33.04338298,11,lmqgd\n    36.32974273,12,bgmqd\n    93.10117559,31,mlyas\n    21.82355857,7,efcsm\n    120.5829665,40,tcbtr\n    78.14016454,26,mlyas\n    114.4343663,38,efcsm\n    105.4097725,35,mlyas\n    78.63798345,26,mlyas\n\n\n\nModify accepts conditional equations, and its results are 1 for true and 0 for false, which allows to construct functions such as sign() or abs(), etc as an example:\n\n\n```python\ndf_mod = df_with_new_column.modify(\"new_column = values - .5\")\ndf_mod\n```\n\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n\n\n\n\n\n    values,some_ints,name,new_column\n    0.8633713864104114,21,mlyas,0.3633713864\n    0.7797461486214806,32,efcsm,0.2797461486\n    0.9415640935512127,24,tcbtr,0.4415640936\n    0.7678670658611503,44,efcsm,0.2678670659\n    0.8223095493965592,2,bgmqd,0.3223095494\n    0.06832888693954564,31,bgmqd,-0.4316711131\n    0.717887788740719,44,mlyas,0.2178877887\n    0.6559538612897098,49,efcsm,0.1559538613\n    0.08927654448880817,44,tcbtr,-0.4107234555\n    0.7338088959472877,36,tcbtr,0.2338088959\n    0.701592457357365,9,mlyas,0.2015924574\n    0.04338298448626843,11,lmqgd,-0.4566170155\n    0.3297427254572507,12,bgmqd,-0.1702572745\n    0.1011755876260031,31,mlyas,-0.3988244124\n    0.8235585667750851,7,efcsm,0.3235585668\n    0.5829664850991141,40,tcbtr,0.0829664851\n    0.14016453615592928,26,mlyas,-0.3598354638\n    0.43436632265162967,38,efcsm,-0.06563367735\n    0.4097725083991255,35,mlyas,-0.0902274916\n    0.6379834519420476,26,mlyas,0.1379834519\n\n\n\nnow, let's get the absolute value of new column and put it in a new column\n\n\n```python\ndf_mod_2 = df_mod.add_column(\"abs_new_column\").modify(\"abs_new_column = new_column * ((new_column >= 0) * 2 - 1)\")\ndf_mod_2\n```\n\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n\n\n\n\n\n    values,some_ints,name,new_column,abs_new_column\n    0.8633713864104114,21,mlyas,0.3633713864,0.3633713864\n    0.7797461486214806,32,efcsm,0.2797461486,0.2797461486\n    0.9415640935512127,24,tcbtr,0.4415640936,0.4415640936\n    0.7678670658611503,44,efcsm,0.2678670659,0.2678670659\n    0.8223095493965592,2,bgmqd,0.3223095494,0.3223095494\n    0.06832888693954564,31,bgmqd,-0.4316711131,0.4316711131\n    0.717887788740719,44,mlyas,0.2178877887,0.2178877887\n    0.6559538612897098,49,efcsm,0.1559538613,0.1559538613\n    0.08927654448880817,44,tcbtr,-0.4107234555,0.4107234555\n    0.7338088959472877,36,tcbtr,0.2338088959,0.2338088959\n    0.701592457357365,9,mlyas,0.2015924574,0.2015924574\n    0.04338298448626843,11,lmqgd,-0.4566170155,0.4566170155\n    0.3297427254572507,12,bgmqd,-0.1702572745,0.1702572745\n    0.1011755876260031,31,mlyas,-0.3988244124,0.3988244124\n    0.8235585667750851,7,efcsm,0.3235585668,0.3235585668\n    0.5829664850991141,40,tcbtr,0.0829664851,0.0829664851\n    0.14016453615592928,26,mlyas,-0.3598354638,0.3598354638\n    0.43436632265162967,38,efcsm,-0.06563367735,0.06563367735\n    0.4097725083991255,35,mlyas,-0.0902274916,0.0902274916\n    0.6379834519420476,26,mlyas,0.1379834519,0.1379834519\n\n\n\nModify accepts conditions, there are two ways:\n\n\n```python\ndf_mod_2.modify(\"values = 0\",condition = \"new_column < 0\")\n```\n\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n\n\n\n\n\n    values,some_ints,name,new_column,abs_new_column\n    0.8633713864104114,21,mlyas,0.3633713864,0.3633713864\n    0.7797461486214806,32,efcsm,0.2797461486,0.2797461486\n    0.9415640935512127,24,tcbtr,0.4415640936,0.4415640936\n    0.7678670658611503,44,efcsm,0.2678670659,0.2678670659\n    0.8223095493965592,2,bgmqd,0.3223095494,0.3223095494\n    0,31,bgmqd,-0.4316711131,0.4316711131\n    0.717887788740719,44,mlyas,0.2178877887,0.2178877887\n    0.6559538612897098,49,efcsm,0.1559538613,0.1559538613\n    0,44,tcbtr,-0.4107234555,0.4107234555\n    0.7338088959472877,36,tcbtr,0.2338088959,0.2338088959\n    0.701592457357365,9,mlyas,0.2015924574,0.2015924574\n    0,11,lmqgd,-0.4566170155,0.4566170155\n    0,12,bgmqd,-0.1702572745,0.1702572745\n    0,31,mlyas,-0.3988244124,0.3988244124\n    0.8235585667750851,7,efcsm,0.3235585668,0.3235585668\n    0.5829664850991141,40,tcbtr,0.0829664851,0.0829664851\n    0,26,mlyas,-0.3598354638,0.3598354638\n    0,38,efcsm,-0.06563367735,0.06563367735\n    0,35,mlyas,-0.0902274916,0.0902274916\n    0.6379834519420476,26,mlyas,0.1379834519,0.1379834519\n\n\n\n\n```python\nconditional_equation = ad.Conditional_equation()\nconditional_equation.condition = \"new_column < 0\"\nconditional_equation.equation = \"values = 0\"\ndf_mod_2.modify(conditional_equation)\n```\n\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n    gawk: warning: escape sequence `\\/' treated as plain `/'\n\n\n\n\n\n    values,some_ints,name,new_column,abs_new_column\n    0.8633713864104114,21,mlyas,0.3633713864,0.3633713864\n    0.7797461486214806,32,efcsm,0.2797461486,0.2797461486\n    0.9415640935512127,24,tcbtr,0.4415640936,0.4415640936\n    0.7678670658611503,44,efcsm,0.2678670659,0.2678670659\n    0.8223095493965592,2,bgmqd,0.3223095494,0.3223095494\n    0,31,bgmqd,-0.4316711131,0.4316711131\n    0.717887788740719,44,mlyas,0.2178877887,0.2178877887\n    0.6559538612897098,49,efcsm,0.1559538613,0.1559538613\n    0,44,tcbtr,-0.4107234555,0.4107234555\n    0.7338088959472877,36,tcbtr,0.2338088959,0.2338088959\n    0.701592457357365,9,mlyas,0.2015924574,0.2015924574\n    0,11,lmqgd,-0.4566170155,0.4566170155\n    0,12,bgmqd,-0.1702572745,0.1702572745\n    0,31,mlyas,-0.3988244124,0.3988244124\n    0.8235585667750851,7,efcsm,0.3235585668,0.3235585668\n    0.5829664850991141,40,tcbtr,0.0829664851,0.0829664851\n    0,26,mlyas,-0.3598354638,0.3598354638\n    0,38,efcsm,-0.06563367735,0.06563367735\n    0,35,mlyas,-0.0902274916,0.0902274916\n    0.6379834519420476,26,mlyas,0.1379834519,0.1379834519\n\n\n\nA future update of the library will allow to include several conditional equations in the same modify statement\n\n# add_index\n\n\n```python\ndf_mod = df.add_index()\ndf_mod\n```\n\n\n\n\n    index,values,some_ints,name\n    0,0.8633713864104114,21,mlyas\n    1,0.7797461486214806,32,efcsm\n    2,0.9415640935512127,24,tcbtr\n    3,0.7678670658611503,44,efcsm\n    4,0.8223095493965592,2,bgmqd\n    5,0.06832888693954564,31,bgmqd\n    6,0.717887788740719,44,mlyas\n    7,0.6559538612897098,49,efcsm\n    8,0.08927654448880817,44,tcbtr\n    9,0.7338088959472877,36,tcbtr\n    10,0.701592457357365,9,mlyas\n    11,0.04338298448626843,11,lmqgd\n    12,0.3297427254572507,12,bgmqd\n    13,0.1011755876260031,31,mlyas\n    14,0.8235585667750851,7,efcsm\n    15,0.5829664850991141,40,tcbtr\n    16,0.14016453615592928,26,mlyas\n    17,0.43436632265162967,38,efcsm\n    18,0.4097725083991255,35,mlyas\n    19,0.6379834519420476,26,mlyas\n\n\n\n## sort_by\n\n\n```python\ndf_mod.sort_by(\"values\")\n```\n\n\n\n\n    index,values,some_ints,name\n    11,0.04338298448626843,11,lmqgd\n    5,0.06832888693954564,31,bgmqd\n    8,0.08927654448880817,44,tcbtr\n    13,0.1011755876260031,31,mlyas\n    16,0.14016453615592928,26,mlyas\n    12,0.3297427254572507,12,bgmqd\n    18,0.4097725083991255,35,mlyas\n    17,0.43436632265162967,38,efcsm\n    15,0.5829664850991141,40,tcbtr\n    19,0.6379834519420476,26,mlyas\n    7,0.6559538612897098,49,efcsm\n    10,0.701592457357365,9,mlyas\n    6,0.717887788740719,44,mlyas\n    9,0.7338088959472877,36,tcbtr\n    3,0.7678670658611503,44,efcsm\n    1,0.7797461486214806,32,efcsm\n    4,0.8223095493965592,2,bgmqd\n    14,0.8235585667750851,7,efcsm\n    0,0.8633713864104114,21,mlyas\n    2,0.9415640935512127,24,tcbtr\n\n\n\n## to_pandas\n\n\n```python\npdf = df_mod.to_pandas()\npdf\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>index</th>\n      <th>values</th>\n      <th>some_ints</th>\n      <th>name</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0.863371</td>\n      <td>21</td>\n      <td>mlyas</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0.779746</td>\n      <td>32</td>\n      <td>efcsm</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0.941564</td>\n      <td>24</td>\n      <td>tcbtr</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>0.767867</td>\n      <td>44</td>\n      <td>efcsm</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>0.822310</td>\n      <td>2</td>\n      <td>bgmqd</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>5</td>\n      <td>0.068329</td>\n      <td>31</td>\n      <td>bgmqd</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>6</td>\n      <td>0.717888</td>\n      <td>44</td>\n      <td>mlyas</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7</td>\n      <td>0.655954</td>\n      <td>49</td>\n      <td>efcsm</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>8</td>\n      <td>0.089277</td>\n      <td>44</td>\n      <td>tcbtr</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>9</td>\n      <td>0.733809</td>\n      <td>36</td>\n      <td>tcbtr</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>10</td>\n      <td>0.701592</td>\n      <td>9</td>\n      <td>mlyas</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>11</td>\n      <td>0.043383</td>\n      <td>11</td>\n      <td>lmqgd</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>12</td>\n      <td>0.329743</td>\n      <td>12</td>\n      <td>bgmqd</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>13</td>\n      <td>0.101176</td>\n      <td>31</td>\n      <td>mlyas</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>14</td>\n      <td>0.823559</td>\n      <td>7</td>\n      <td>efcsm</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>15</td>\n      <td>0.582966</td>\n      <td>40</td>\n      <td>tcbtr</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>16</td>\n      <td>0.140165</td>\n      <td>26</td>\n      <td>mlyas</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>17</td>\n      <td>0.434366</td>\n      <td>38</td>\n      <td>efcsm</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>18</td>\n      <td>0.409773</td>\n      <td>35</td>\n      <td>mlyas</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>19</td>\n      <td>0.637983</td>\n      <td>26</td>\n      <td>mlyas</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n## to_numpy_dataframe\n\n\n```python\nndf = df_mod.to_npd()\nprint(ndf)\nprint(ndf.shape)\n```\n\n        index    values  some_ints   name\n    0       0  0.863371         21  mlyas\n    1       1  0.779746         32  efcsm\n    2       2  0.941564         24  tcbtr\n    3       3  0.767867         44  efcsm\n    4       4  0.822310          2  bgmqd\n    5       5  0.068329         31  bgmqd\n    6       6  0.717888         44  mlyas\n    7       7  0.655954         49  efcsm\n    8       8  0.089277         44  tcbtr\n    9       9  0.733809         36  tcbtr\n    10     10  0.701592          9  mlyas\n    11     11  0.043383         11  lmqgd\n    12     12  0.329743         12  bgmqd\n    13     13  0.101176         31  mlyas\n    14     14  0.823559          7  efcsm\n    15     15  0.582966         40  tcbtr\n    16     16  0.140165         26  mlyas\n    17     17  0.434366         38  efcsm\n    18     18  0.409773         35  mlyas\n    19     19  0.637983         26  mlyas\n    (20, 4)\n\n\n## to_csv\n\n\n```python\npath_output = os.path.expanduser(\"~\") + \"/.tmp/example_mod.csv\"\ndf_mod.to_csv(path_output)\n```\n\n# For future development\n\n```\nadd_rows(n)\nkeep_na = False\nrename\n\n```\n\n# Internal gawk command example (where command):\n\n```\n\n    function is_digit_field(field){\n        if (field ~ /^[\\\\+-]?[0-9]+$|^[\\\\+-]*[0-9]*[\\\\.]?[0-9]+$|^[\\\\+-]*[0-9]*[\\\\.]?[0-9]+[eE]?[\\\\+-]?[0-9]+$|#N\\/A|#N\\/A|N\\/A|#NA|-1.#IND|-1.#QNAN|-NaN|-nan|1.#IND|1.#QNAN|<NA>|<na>|NA|NULL|NaN|n\\/a|nan|null||Nan|-Nan/){\n            return 1\n        }else{\n            return 0\n        }\n    }\n\n    function needs_quotes(field){\n    #postgres_standard: delimiter character, the QUOTE character, the NULL string, a carriage return, or line feed character, t\n\n        regex = \"(\" FS \")+|(\\\\n)+|(\" input_quote \")+|\\r+\"\n        if (field ~ regex){\n            return 1\n        }else{\n            return 0\n        }\n    }\n\n    function transform_field(field,column){\n        if (is_first_command && !is_last_command && original_level_simplicity_csv != 2){\n            gsub(/\\n/,delimiter_internal_notation \"n\" delimiter_internal_notation,field)\n            gsub(FS,delimiter_internal_notation \"d\" delimiter_internal_notation,field)\n            gsub(input_quote, delimiter_internal_notation \"q\" delimiter_internal_notation, field)\n            gsub(\"\\r\", delimiter_internal_notation \"r\" delimiter_internal_notation, field)\n        }\n        if (is_last_command && !is_first_command  && original_level_simplicity_csv != 2){\n            gsub(delimiter_internal_notation \"n\" delimiter_internal_notation,\"\\n\",field)\n            gsub(delimiter_internal_notation \"d\" delimiter_internal_notation,FS,field)\n            gsub(delimiter_internal_notation \"q\" delimiter_internal_notation,input_quote, field)\n            gsub(delimiter_internal_notation \"r\" delimiter_internal_notation,\"\\r\", field)\n        }\n        if (is_digit_field(field) || (level_simplicity_csv == 2 && (!is_last_command || original_level_simplicity_csv == 2))){\n            if (!is_digit_field()){\n                field = transform_string(field,column)\n                if (input_quote != output_quote){\n                    gsub(input_quote,output_quote,field)\n                }\n            }else{\n                return transform_digit(field,column)\n            }\n            return field\n        }else{\n            field = transform_string(field,column)\n            if (quotes_have_been_removed){\n                if (full_string_quoting){\n                    return output_quote field output_quote\n                }else{\n                    if (needs_quotes(field) && minimal_string_quoting || field == delimiter_internal_notation \"NULL\" delimiter_internal_notation){\n                        if (field == delimiter_internal_notation \"NULL\" delimiter_internal_notation){\n                            gsub(delimiter_internal_notation \"NULL\" delimiter_internal_notation,\"NULL\",field)\n                        }\n                        return output_quote field output_quote\n                    }else{\n                        return field\n                    }\n                }\n            }else{\n                return field\n            }\n        }\n\n    }\n\n\n\n    function print_field(field,column){\n\n\n        field = transform_field(field,column)\n\n        if (FNR == NR && find_unique){\n            unique[field] = 1\n        }else{\n            if (print_fields){\n                output_separator = OFS\n                if (i == max_col() && !add_new_column){\n                    output_separator = ORS\n                }\n                if (i == min_col()){\n                    if (add_index){\n                        if (!save){\n                            printf(\"%s\" output_separator,print_line_number() + index_based_on)\n                        }else{\n                            printf(\"%s\" output_separator,print_line_number() + index_based_on) > path_output\n                        }\n\n                    }\n                }\n                if (!save){\n                    printf \"%s\" output_separator,field\n                }else{\n                    printf \"%s\" output_separator,field > path_output\n                }\n\n            }\n        }\n    }\n\n\n    function print_line(line){\n        line = transform_line(line)\n        if (print_fields){\n            if (add_index){\n                if (!save){\n                    printf(\"%s\" OFS,print_line_number() + index_based_on)\n                }else{\n                    printf(\"%s\" OFS,print_line_number() + index_based_on) > path_output\n                }\n\n            }\n            if (input_quote != output_quote){\n                gsub(input_quote,output_quote,line)\n            }\n\n            if (!save){\n                if (sort){\n                    sort_command = \"sort -t'\" OFS \"' --parallel \" num_cores \" -nk\" sort_column\n                    printf \"%s\" ORS,line | sort_command\n                }else{\n                    printf \"%s\" ORS,line\n                }\n            }else{\n                printf \"%s\" ORS,line > path_output\n            }\n        }\n    }\n\n    function print_line_number(){\n        if (output_header){\n            return FNR-records_skipped - 2\n        }else{\n            return FNR-records_skipped - 1\n        }\n    }\n\n    function line_number(){\n        if (header){\n            return FNR-records_skipped - 1\n        }else{\n            return FNR-records_skipped\n        }\n\n    }\n\n    function print_header(){\n        if (add_index){\n            field = transform_field(\"index\",1)\n            if (!save){\n                printf(\"%s\" OFS,field)\n            }else{\n                printf(\"%s\" OFS,field) > path_output\n            }\n\n        }\n        if (fields_based_code){\n            for (i=min_col();i<=max_col();i++) {\n                if ((number_files_input == 1 || input_file_rows) || (input_file_cols && v[i])){\n                    if (is_first_command && !is_last_command && level_simplicity_csv != 2){\n                        gsub(/\\n/,delimiter_internal_notation \"n\" delimiter_internal_notation,$i)\n                        gsub(FS,delimiter_internal_notation \"d\" delimiter_internal_notation,$i)\n                        gsub(input_quote, delimiter_internal_notation \"q\" delimiter_internal_notation, $i)\n                        gsub(\"\\r\", delimiter_internal_notation \"r\" delimiter_internal_notation, $i)\n                    }\n                    if (is_last_command && !is_first_command  && level_simplicity_csv != 2){\n                        gsub(delimiter_internal_notation \"n\" delimiter_internal_notation,\"\\n\",$i)\n                        gsub(delimiter_internal_notation \"d\" delimiter_internal_notation,FS,$i)\n                        gsub(delimiter_internal_notation \"q\" delimiter_internal_notation,input_quote, fldStr)\n                        gsub(delimiter_internal_notation \"r\" delimiter_internal_notation,\"\\r\", $i)\n                    }\n                    output_separator = OFS\n                    if (i == max_col() && !add_new_column){\n                        output_separator = ORS\n                    }\n                    if (!save){\n                        printf \"%s\" output_separator,transform_header($i,i)\n                    }else{\n                        printf \"%s\" output_separator,transform_header($i,i) > path_output\n                    }\n                }\n\n            }\n            add_column()\n        }else{\n            gsub(input_quote,output_quote,$0)\n            if (!save){\n                printf \"%s\" ORS,$0\n            }else{\n                printf \"%s\" ORS,$0 > path_output\n            }\n            add_column()\n\n        }\n\n    }\n\n    function min_col(){\n        if (1 > col_start){\n            return 1\n        }else{\n            return col_start\n        }\n    }\n\n    function max_col(){\n        if (col_end == INF){\n            return NF\n        }else{\n            if (NF < col_end){\n                return NF\n            }else{\n                return col_end\n            }\n        }\n    }\n\n    function add_column(){\n        if (add_new_column){\n            if (line_number() == 0){\n                printf \"%s\" ORS,name_new_column\n            }else{\n                printf \"%s\" ORS,\"\"\n            }\n        }\n\n    }\n\n    function transform_header(field,column){\n        return field\n    }\n\n\n\n\n    #################################\n    #################################\n\n\n    function transform_column(field,column){\n\n    return field\n    }\n\n\n    function transform_digit(field,column){\n    field = transform_column(field,column)\n\n    return field\n    }\n\n\n    function transform_string(field,column){\n    field = transform_column(field,column)\n\n    return field\n    }\n\n    function transform_line(line){\n\n    return line\n    }\n\n        function condition(){\n        statement = 1\n        statement = ($3 ~ /^\"?crlsb\"?$/)\n        return statement\n        }\n\n    BEGIN {\n        PREC=100\n        OFMT=\"%.10g\"\n        CONVFMT=\"%.10g\"\n\n        is_first_command = 0\n        is_last_command = 0\n\n\n        delimiter_internal_notation = \":\"\n        if (FS == delimiter_internal_notation){\n            delimiter_internal_notation = \"#\"\n        }\n\n        input_quote = \"\\\"\"\n        output_quote = \"\\\"\"\n\n        level_simplicity_csv = 2\n\n        FS =\",\"\n\n        OFS=\",\"\n\n\n        original_level_simplicity_csv = 0\n\n        if (level_simplicity_csv <= 1){\n            FPAT=\"([^\" FS \"]*)|(\" input_quote \"([^\" input_quote \"]|\" input_quote input_quote \")+\" input_quote \")\"\n        }\n\n\n        records_skipped = 0\n\n        minimal_string_quoting = 1\n        full_string_quoting = !minimal_string_quoting\n\n        is_unix_input = 1\n        is_unix_output = 1\n\n        if (is_unix_input){\n        RS = \"\\n\"\n        }else{\n        RS = \"\\r\\n\"\n        }\n\n        if (is_unix_output){\n        ORS = \"\\n\"\n        }else{\n        ORS = \"\\r\\n\"\n        }\n        null_input_string = \"NULL\"\n        null_output_string = \"\"\n\n        header = 1\n        output_header = 1\n\n        if (!header){\n            output_header = 0\n        }\n\n        add_index = 0\n        index_based_on = 0\n\n        line_based_code = 0\n        fields_based_code = !line_based_code\n\n        col_start = 1\n        col_end = INF\n\n        row_start = 1\n        row_end = INF\n\n        number_files_input = 1\n        input_file_rows = 1\n        input_file_cols = !input_file_rows\n\n        find_unique = 0\n\n        print_fields = 1\n\n        save = 0\n        path_output = \"\"\n\n        sort = 0\n        sort_column = 1\n        num_cores = 4\n        sort_in_parallel = 1\n\n        calculate_shape = 0\n\n        check_complexity = 0\n\n        add_new_column = 0\n        name_new_column = \"\"\n\n        if (check_complexity){\n            has_maximum_complexity = 0\n            print_fields = 0\n        }\n\n        quotes_have_been_removed = 0\n        number_fields = 0\n        continue_next_line = 0\n    }\n\n\n\n    {\n        if (!calculate_shape){\n\n            if (check_complexity || number_files_input == 1){\n                if (check_complexity){\n                    if (line_number() == 0){\n                        number_fields = max_col()\n                        has_maximum_complexity = 0\n                    }else{\n                        if (max_col() < number_fields){\n                            has_maximum_complexity = 1\n                            exit\n                        }\n                    }\n                }else{\n                    if (line_number() == 0 && header){\n                        number_fields = NF\n                        if (output_header){\n                            print_header()\n                        }\n                    }else{\n                        if (fields_based_code){\n                            if (line_number() >= row_start){\n                                for (i=min_col();i<=max_col();i++) {\n                                    if (condition()){\n                                        print_field($i,i)\n                                    }\n                                }\n                                i=min_col()\n                                if (min_col() == max_col() && $i == \"\"){\n                                    print(\":n:\")\n                                }\n                                add_column()\n                            }\n                        }else{\n                            if (line_number() >= row_start){\n                            if (condition()){\n                                print_line($0)\n                            }\n\n                            }\n                        }\n                        if (row_end != INF && line_number() > row_end){\n                        exit\n                        }\n                    }\n                }\n            }else{\n                if (FNR == NR){\n                    v[$0] = 1\n\n                }else{\n                    if (FNR!=NR && FNR == 1){\n                        records_skipped = 0\n                    }\n                    if (line_number() == 0 && header){\n                        number_fields = max_col()\n                        if (output_header){\n                            print_header()\n                        }\n                    }else{\n                        if (fields_based_code){\n                            if (line_number() >= row_start){\n                                for (i=min_col();i<=max_col();i++) {\n                                if (condition()){\n                                    field = $i\n                                    if (input_file_rows && v[line_number()]){\n                                        print_field(field,i)\n                                    }else{\n                                        if (input_file_cols && v[i]){\n                                            print_field(field,i)\n                                        }\n                                    }\n                                }\n                                }\n                                i=min_col()\n                                if (min_col() == max_col() && $i == \"\"){\n                                    print(\":n:\")\n                                }\n                                add_column()\n                            }\n                        }else{\n                            if (line_number() >= row_start){\n                            if (condition()){\n                                if (input_file_rows && v[line_number()]){\n                                    print_line($0)\n                                }\n\n                            }\n\n                            }\n                        }\n                        if (row_end != INF && line_number() > row_end){\n                        exit\n                        }\n                    }\n                }\n\n\n            }\n        }\n\n    }\n\n\n    END{\n        if (find_unique){\n            for (key in unique){\n                print(key)\n            }\n        }\n        if (calculate_shape){\n            print print_line_number()\n            print NF\n        }\n        if (check_complexity){\n            print has_maximum_complexity\n        }\n\n\n    }\n    ```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "awk-dataframe",
    "package_url": "https://pypi.org/project/awk-dataframe/",
    "platform": null,
    "project_url": "https://pypi.org/project/awk-dataframe/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/awk-dataframe/0.2.11/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Wrapper around awk to use as a dataframe implementation in python",
    "version": "0.2.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16682241,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8057cc086ee9a7f9333e2a5ee54cec6436c7b3993181ef9282d7eb988aaf9e38",
          "md5": "181c17a13feb39063bf1cfe320388d86",
          "sha256": "47e1d2a0bd82ebe63233de3e4233b2c285f4958a03784ddb45d999c02ca408c4"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "181c17a13feb39063bf1cfe320388d86",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6923,
        "upload_time": "2022-10-30T20:04:44",
        "upload_time_iso_8601": "2022-10-30T20:04:44.339671Z",
        "url": "https://files.pythonhosted.org/packages/80/57/cc086ee9a7f9333e2a5ee54cec6436c7b3993181ef9282d7eb988aaf9e38/awk_dataframe-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef0573b5538ec1a6316be4a18ae76d4559b269b03c74c4b160b4121dc680b2fe",
          "md5": "623a3f64cce5034320d6f6ee1dc11c5e",
          "sha256": "370a4be7840d3b5de6e17a7cef59434010a5118f0db0cd76318f069b7f705913"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "623a3f64cce5034320d6f6ee1dc11c5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7076,
        "upload_time": "2022-10-30T20:04:46",
        "upload_time_iso_8601": "2022-10-30T20:04:46.171379Z",
        "url": "https://files.pythonhosted.org/packages/ef/05/73b5538ec1a6316be4a18ae76d4559b269b03c74c4b160b4121dc680b2fe/awk_dataframe-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8517a948a7a6682837b37d1cf3212256173bc9af1a69c2b55fcdeaad79361291",
          "md5": "8400ea068923f782337e7999a452d91d",
          "sha256": "2f2628a952b856d08e92091eed500a6f76051481b65dd1fb0b60c62bf7c27d31"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8400ea068923f782337e7999a452d91d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11697,
        "upload_time": "2022-11-03T10:17:07",
        "upload_time_iso_8601": "2022-11-03T10:17:07.704724Z",
        "url": "https://files.pythonhosted.org/packages/85/17/a948a7a6682837b37d1cf3212256173bc9af1a69c2b55fcdeaad79361291/awk_dataframe-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb9a4ece31416a3271cf9fd6fb2a19603ea8a315da9ba78fa3c01a95025bc022",
          "md5": "db315e8f2795eb8f19d9d07c6a26a36b",
          "sha256": "be028d84951fce8bc94380f085eabb398d5c2077d69e1deb85dbafe6c637b68b"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "db315e8f2795eb8f19d9d07c6a26a36b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12626,
        "upload_time": "2022-11-03T10:17:09",
        "upload_time_iso_8601": "2022-11-03T10:17:09.276454Z",
        "url": "https://files.pythonhosted.org/packages/eb/9a/4ece31416a3271cf9fd6fb2a19603ea8a315da9ba78fa3c01a95025bc022/awk_dataframe-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da3d31665bfdef7b80fa72ff53f4349ad4d61a62e1abb796c8ae439880ea0383",
          "md5": "fc475b24cf2aac4ba4e6f7f2f047fa67",
          "sha256": "2f2a84c034a2cd5f7ca02bd75e6657e24713ecf5bc40af2be9f7991e466e837d"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc475b24cf2aac4ba4e6f7f2f047fa67",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11706,
        "upload_time": "2022-11-04T19:04:51",
        "upload_time_iso_8601": "2022-11-04T19:04:51.539084Z",
        "url": "https://files.pythonhosted.org/packages/da/3d/31665bfdef7b80fa72ff53f4349ad4d61a62e1abb796c8ae439880ea0383/awk_dataframe-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e6ca854e8cffcff80cfff0e921f28616daa03bd318a17b418d40d6876d1ce6f",
          "md5": "796ac5a1df55c68398ef91f2658f4794",
          "sha256": "66d0aae335458358cb6a2c58c5c9000477c392dc4c84022e6c2e2d2da828721b"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "796ac5a1df55c68398ef91f2658f4794",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12635,
        "upload_time": "2022-11-04T19:04:54",
        "upload_time_iso_8601": "2022-11-04T19:04:54.279113Z",
        "url": "https://files.pythonhosted.org/packages/7e/6c/a854e8cffcff80cfff0e921f28616daa03bd318a17b418d40d6876d1ce6f/awk_dataframe-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "caf7e920f67454859f9a24ac6999bbd9c7c0010803ffffde1897b6c818332a1a",
          "md5": "192a24b4978b0a7b536c5de92731aa58",
          "sha256": "612dda61044a0ae8ae854727d5966f01aa1cc47095e3233f66922d6414679d4d"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "192a24b4978b0a7b536c5de92731aa58",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7750,
        "upload_time": "2022-10-30T21:05:30",
        "upload_time_iso_8601": "2022-10-30T21:05:30.090540Z",
        "url": "https://files.pythonhosted.org/packages/ca/f7/e920f67454859f9a24ac6999bbd9c7c0010803ffffde1897b6c818332a1a/awk_dataframe-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "518c6fb160768e1b86553dfe2a24d891c2ce79769adc5423c32512c8e13afe72",
          "md5": "8e40bc159b76f149084aae243a1b9f4e",
          "sha256": "5f3be97e43e07ac255c73f96ab5327b1fc5db7f655a0402a3cf3b93df2a0f3ad"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8e40bc159b76f149084aae243a1b9f4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8685,
        "upload_time": "2022-10-30T21:05:32",
        "upload_time_iso_8601": "2022-10-30T21:05:32.388476Z",
        "url": "https://files.pythonhosted.org/packages/51/8c/6fb160768e1b86553dfe2a24d891c2ce79769adc5423c32512c8e13afe72/awk_dataframe-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1eb8707fa25bbd442cee6603936cc3e33b02d55aa15b60c9d722bf3fd29ef244",
          "md5": "979406ccd0639e989babce0ad738f553",
          "sha256": "da8992937c95cacd25cb2e42bd477f55b5842f0eb53c723fba3bf4ce6a57a5bd"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "979406ccd0639e989babce0ad738f553",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8727,
        "upload_time": "2022-10-31T09:25:01",
        "upload_time_iso_8601": "2022-10-31T09:25:01.986636Z",
        "url": "https://files.pythonhosted.org/packages/1e/b8/707fa25bbd442cee6603936cc3e33b02d55aa15b60c9d722bf3fd29ef244/awk_dataframe-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2dbf0441fcb535a06b3261029feb0a7c7ce295acba4a545b47e9e63d7ce9139",
          "md5": "3cb43c75e5db7eed061ee12d9ebfdb42",
          "sha256": "88559e52b2b952536ba80a841cd69fa0f6b2fe4343190587ab3c41b5f773563d"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3cb43c75e5db7eed061ee12d9ebfdb42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9777,
        "upload_time": "2022-10-31T09:25:03",
        "upload_time_iso_8601": "2022-10-31T09:25:03.813189Z",
        "url": "https://files.pythonhosted.org/packages/e2/db/f0441fcb535a06b3261029feb0a7c7ce295acba4a545b47e9e63d7ce9139/awk_dataframe-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b19d5d4932d3f50e86237e684399a47b62c689da9284c70a38f543d5b8e27633",
          "md5": "b3303bf3b83b2177a9480aa00730177d",
          "sha256": "cba4b68717b1d77a58994dd1ea37b378a7f55a88609d063d3b978ddb5d7976de"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3303bf3b83b2177a9480aa00730177d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8748,
        "upload_time": "2022-10-31T11:02:53",
        "upload_time_iso_8601": "2022-10-31T11:02:53.483717Z",
        "url": "https://files.pythonhosted.org/packages/b1/9d/5d4932d3f50e86237e684399a47b62c689da9284c70a38f543d5b8e27633/awk_dataframe-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffb785ba88d28dc4230917abab0df15a9f20051406ec3df255a3c86a648717f1",
          "md5": "3a32c247f2e305884259ae7f7c06f370",
          "sha256": "91375c468121b0a2f8ac2d13a9510be16e8eea6dfcae14767238bc75b8af20db"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3a32c247f2e305884259ae7f7c06f370",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9808,
        "upload_time": "2022-10-31T11:02:54",
        "upload_time_iso_8601": "2022-10-31T11:02:54.928718Z",
        "url": "https://files.pythonhosted.org/packages/ff/b7/85ba88d28dc4230917abab0df15a9f20051406ec3df255a3c86a648717f1/awk_dataframe-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abad12dfafd5761f0dad3a07ab32342a9e44c9a12f88b134c85f88ba239df9da",
          "md5": "c1bd8edaf72993b804cbdd266e73136b",
          "sha256": "06d7a60d77fd6fc0814b67ea02da85e0e1416ce61a0f1e92205a53424663f8d9"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c1bd8edaf72993b804cbdd266e73136b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8819,
        "upload_time": "2022-10-31T14:55:39",
        "upload_time_iso_8601": "2022-10-31T14:55:39.077098Z",
        "url": "https://files.pythonhosted.org/packages/ab/ad/12dfafd5761f0dad3a07ab32342a9e44c9a12f88b134c85f88ba239df9da/awk_dataframe-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "975fc0b5e4367baaeb43626ee9f0b7979ad742561c44b2345e1d5d4f596ae8ed",
          "md5": "364a36a02123b4b8b1b87e6baa8fc54c",
          "sha256": "53bc65342993978b94d9228c7f41517fc48079aa523250a86e763b2a33970419"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "364a36a02123b4b8b1b87e6baa8fc54c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9865,
        "upload_time": "2022-10-31T14:55:40",
        "upload_time_iso_8601": "2022-10-31T14:55:40.606661Z",
        "url": "https://files.pythonhosted.org/packages/97/5f/c0b5e4367baaeb43626ee9f0b7979ad742561c44b2345e1d5d4f596ae8ed/awk_dataframe-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5aeac06a94f6cc3028cf73deba6eb381f3323383dc535c284b791abf7dc2c9f8",
          "md5": "e25bc4dea88025c7082397f9c9620b3a",
          "sha256": "648dbb78e02fafe011a0c5cb0e58955f0a30bcbdd0d4686c8b5e3487796068b1"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e25bc4dea88025c7082397f9c9620b3a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9003,
        "upload_time": "2022-10-31T16:15:21",
        "upload_time_iso_8601": "2022-10-31T16:15:21.319365Z",
        "url": "https://files.pythonhosted.org/packages/5a/ea/c06a94f6cc3028cf73deba6eb381f3323383dc535c284b791abf7dc2c9f8/awk_dataframe-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3d2cc5e84c3474320369162f23a76e493b5a0994b143f6503d2df8231910812",
          "md5": "9023c952b0f596119d571debf9d9ba70",
          "sha256": "028f1871d13aa66f5b3b58ba33569991c82a44de47bad8aeeb0dd5be5dbaab21"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9023c952b0f596119d571debf9d9ba70",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10032,
        "upload_time": "2022-10-31T16:15:23",
        "upload_time_iso_8601": "2022-10-31T16:15:23.129011Z",
        "url": "https://files.pythonhosted.org/packages/c3/d2/cc5e84c3474320369162f23a76e493b5a0994b143f6503d2df8231910812/awk_dataframe-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9c52e05471eaf674817f7e96dfb7fd92955c71d66ff9c2c2a60263279c1e279",
          "md5": "8357cd5671bac23d933d37519009b712",
          "sha256": "a59a88d155643d50c367d4a544a566c99c36621cec234ed654781f368306fdbb"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8357cd5671bac23d933d37519009b712",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9062,
        "upload_time": "2022-10-31T17:29:04",
        "upload_time_iso_8601": "2022-10-31T17:29:04.997910Z",
        "url": "https://files.pythonhosted.org/packages/e9/c5/2e05471eaf674817f7e96dfb7fd92955c71d66ff9c2c2a60263279c1e279/awk_dataframe-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0886aebec3d7f461d76131c684bae3740f3199355b8acef66e6a79f7917327db",
          "md5": "c654b14e896eab40a1ad1a19f1c54195",
          "sha256": "c519880a864d815866e91e87ab941fc0277e937a08cd93f1c60dfbd693b3e5d5"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "c654b14e896eab40a1ad1a19f1c54195",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10096,
        "upload_time": "2022-10-31T17:29:06",
        "upload_time_iso_8601": "2022-10-31T17:29:06.588001Z",
        "url": "https://files.pythonhosted.org/packages/08/86/aebec3d7f461d76131c684bae3740f3199355b8acef66e6a79f7917327db/awk_dataframe-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57b6ba4a22e73f835c27e4b80a09b2b545d9b99ba3648e99322a2bef915c36a2",
          "md5": "df9d08cc2326f0d846c053872b4b8c7c",
          "sha256": "cda8710ce0ab4da0ece281ab70f04b227295ef07e4eca74a0aae20f9e6bda239"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df9d08cc2326f0d846c053872b4b8c7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9339,
        "upload_time": "2022-10-31T20:44:33",
        "upload_time_iso_8601": "2022-10-31T20:44:33.682283Z",
        "url": "https://files.pythonhosted.org/packages/57/b6/ba4a22e73f835c27e4b80a09b2b545d9b99ba3648e99322a2bef915c36a2/awk_dataframe-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd87a563e63bffc76893b694d7b221068e1452578320556f58884649d8bc3a6e",
          "md5": "04eb7ce4af2f653929d1c7bc80d61f6f",
          "sha256": "abb396f89edc634e041c7624f70771736e9057fc9972a80e7a6805348ca637f7"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "04eb7ce4af2f653929d1c7bc80d61f6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10361,
        "upload_time": "2022-10-31T20:44:35",
        "upload_time_iso_8601": "2022-10-31T20:44:35.450973Z",
        "url": "https://files.pythonhosted.org/packages/bd/87/a563e63bffc76893b694d7b221068e1452578320556f58884649d8bc3a6e/awk_dataframe-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebcb6f97b772b63dcdcad6fb2d21b25041466f5936062fd9829657bcc1e15085",
          "md5": "635fa12f4b32cd6a88889ee1ab57c0be",
          "sha256": "24ca0fb69b04b9db5fa83de90475387a9d43c6564bcd3a25d2c0b79b1effe4fd"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "635fa12f4b32cd6a88889ee1ab57c0be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11273,
        "upload_time": "2022-11-02T09:02:17",
        "upload_time_iso_8601": "2022-11-02T09:02:17.134340Z",
        "url": "https://files.pythonhosted.org/packages/eb/cb/6f97b772b63dcdcad6fb2d21b25041466f5936062fd9829657bcc1e15085/awk_dataframe-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27ccdb789dbc2e7d2b67a35158f0e804691314fe01634819c0014008c136bcff",
          "md5": "ffd0bb6e109f8938a7c793a68c14275c",
          "sha256": "0d827693c8da5fb7be61cef787b8babd5d545d218e7654480988c6e62f40fd12"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "ffd0bb6e109f8938a7c793a68c14275c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12281,
        "upload_time": "2022-11-02T09:02:19",
        "upload_time_iso_8601": "2022-11-02T09:02:19.152632Z",
        "url": "https://files.pythonhosted.org/packages/27/cc/db789dbc2e7d2b67a35158f0e804691314fe01634819c0014008c136bcff/awk_dataframe-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5865d07328f690fafaf94c404aabe8928de67827c5e8a474edd6d0b98f372718",
          "md5": "c289978a868252f7b55b98b6288807d2",
          "sha256": "35fe2374d4b379a2817f3017256cee038dd28ebc0201c50cc54c95325c866431"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c289978a868252f7b55b98b6288807d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17643,
        "upload_time": "2022-11-07T16:56:34",
        "upload_time_iso_8601": "2022-11-07T16:56:34.552243Z",
        "url": "https://files.pythonhosted.org/packages/58/65/d07328f690fafaf94c404aabe8928de67827c5e8a474edd6d0b98f372718/awk_dataframe-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1a324156526a0f01ccc0f101864a6b955fa859276dac66231b3502798242c52",
          "md5": "71ffc36833a0336390af51b3276b77e4",
          "sha256": "154866230b8cf78d3c5594917a3a19ca31b5b98ed0d9b2d653f3178cfefde7db"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "71ffc36833a0336390af51b3276b77e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18501,
        "upload_time": "2022-11-07T16:56:36",
        "upload_time_iso_8601": "2022-11-07T16:56:36.473560Z",
        "url": "https://files.pythonhosted.org/packages/e1/a3/24156526a0f01ccc0f101864a6b955fa859276dac66231b3502798242c52/awk_dataframe-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d7ecfb7847529854e45fce2b74f04afac3a1e41670f98d78086ea0aff537a5a",
          "md5": "20e044ce796e778e7a14a5ccb075118d",
          "sha256": "6fecc12128f83f52be1b7254643b15a5ae3ab86a828ca0f7e569518a70b5881f"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "20e044ce796e778e7a14a5ccb075118d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18788,
        "upload_time": "2022-11-08T10:24:16",
        "upload_time_iso_8601": "2022-11-08T10:24:16.540864Z",
        "url": "https://files.pythonhosted.org/packages/1d/7e/cfb7847529854e45fce2b74f04afac3a1e41670f98d78086ea0aff537a5a/awk_dataframe-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0f635f8b1c115fd0cf11df10af7dfbc0c22598cdb492f72bc8f8a54f2e3ada2",
          "md5": "f47c2c9fb1639e6b3f7deefabf64c754",
          "sha256": "f4fbb09381c891b7839ccb69306163bd21e7368b341bac719034b5c5fd623514"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f47c2c9fb1639e6b3f7deefabf64c754",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19567,
        "upload_time": "2022-11-08T10:24:52",
        "upload_time_iso_8601": "2022-11-08T10:24:52.151539Z",
        "url": "https://files.pythonhosted.org/packages/f0/f6/35f8b1c115fd0cf11df10af7dfbc0c22598cdb492f72bc8f8a54f2e3ada2/awk_dataframe-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce36a469d76c0a61edbe0a52c097a1f2df8af402fda8e2007f52f0061c17705d",
          "md5": "e80de838d6fbbe6aef9650f122074fd8",
          "sha256": "f57c3f3e07acf8ac2784e080cb7d0fca2b85a38e7f63ce62d416327da36e5fa4"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e80de838d6fbbe6aef9650f122074fd8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18784,
        "upload_time": "2022-11-08T10:27:59",
        "upload_time_iso_8601": "2022-11-08T10:27:59.772517Z",
        "url": "https://files.pythonhosted.org/packages/ce/36/a469d76c0a61edbe0a52c097a1f2df8af402fda8e2007f52f0061c17705d/awk_dataframe-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33ccfb90c51081d615f14df4c77b56a4bbb471ad2272d8f50446cdb8f5839156",
          "md5": "c94a19b69cac70b49c4a7849a3e05e3a",
          "sha256": "69b1fff08d78064017d29ef67e42d7a34afb631347bd2bf4cdd49fad2bc25f62"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c94a19b69cac70b49c4a7849a3e05e3a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19547,
        "upload_time": "2022-11-08T10:28:02",
        "upload_time_iso_8601": "2022-11-08T10:28:02.101163Z",
        "url": "https://files.pythonhosted.org/packages/33/cc/fb90c51081d615f14df4c77b56a4bbb471ad2272d8f50446cdb8f5839156/awk_dataframe-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f90382d490b150afd5eac08fd570684650718cbe1b428f711f6ff6f75457246",
          "md5": "f05c456968264c68bee74dddf5a9cdfd",
          "sha256": "3659ebfc346def9680107fc0ce1cf17db3fe0bbe5e2e2d87b99ab775fafc2a53"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f05c456968264c68bee74dddf5a9cdfd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18775,
        "upload_time": "2022-11-08T10:30:56",
        "upload_time_iso_8601": "2022-11-08T10:30:56.864592Z",
        "url": "https://files.pythonhosted.org/packages/8f/90/382d490b150afd5eac08fd570684650718cbe1b428f711f6ff6f75457246/awk_dataframe-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0db197a5865dfe405e47b47989882f125bebe1dca55b137b8a7bf8936dcf09c3",
          "md5": "86678f1839a0f3dc30e366e5b2528646",
          "sha256": "d73be84208c84fb72d9d8f9ac9cd683d31677451e57a792c4e6ba92ae23fbd05"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "86678f1839a0f3dc30e366e5b2528646",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19543,
        "upload_time": "2022-11-08T10:30:59",
        "upload_time_iso_8601": "2022-11-08T10:30:59.653064Z",
        "url": "https://files.pythonhosted.org/packages/0d/b1/97a5865dfe405e47b47989882f125bebe1dca55b137b8a7bf8936dcf09c3/awk_dataframe-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "827963d2c37caff9138a6a1a10294e9a4cdba5278383399786c66997b7863ac7",
          "md5": "5c4d1b5368a0614bed84afb7d9c20352",
          "sha256": "db3afabb87a0797df463bf94df6fb01df85dcacfdf745cd67ba6489d72fbb13d"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c4d1b5368a0614bed84afb7d9c20352",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19532,
        "upload_time": "2022-11-10T12:02:20",
        "upload_time_iso_8601": "2022-11-10T12:02:20.174786Z",
        "url": "https://files.pythonhosted.org/packages/82/79/63d2c37caff9138a6a1a10294e9a4cdba5278383399786c66997b7863ac7/awk_dataframe-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88e137d74bea8e160899fc6c86610752711dfbf8b8f583e4787a7774d5a1ca57",
          "md5": "b134544b8f89c788805c0e9ff6606bf4",
          "sha256": "df8dbe8087cbf616c2c497cf756e81f200725322eb9bddd694dcf16de0b6fbf7"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b134544b8f89c788805c0e9ff6606bf4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20295,
        "upload_time": "2022-11-10T12:02:22",
        "upload_time_iso_8601": "2022-11-10T12:02:22.126926Z",
        "url": "https://files.pythonhosted.org/packages/88/e1/37d74bea8e160899fc6c86610752711dfbf8b8f583e4787a7774d5a1ca57/awk_dataframe-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7a196fe05a2519ce39d67ad3ccf3b1c9bc9006a64b57aa15b66dc7855b6f641",
          "md5": "df9ff39f6360d051cabf30429ff934b8",
          "sha256": "34f3420e6a4c2c91510540d57bfaddacb3c18080198c70c98f108473d389194a"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df9ff39f6360d051cabf30429ff934b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21433,
        "upload_time": "2022-11-17T09:58:33",
        "upload_time_iso_8601": "2022-11-17T09:58:33.150315Z",
        "url": "https://files.pythonhosted.org/packages/a7/a1/96fe05a2519ce39d67ad3ccf3b1c9bc9006a64b57aa15b66dc7855b6f641/awk_dataframe-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f53981e1092706de698c79380c7adeeb1737d83fa424498e995f1bf48435e3d8",
          "md5": "993a37ea2b691f60c91f7bbd685fac86",
          "sha256": "270ec091f95f9efdbe228979f8ede2fc5b2ba0e3d8f97a7e946f5383847d82da"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "993a37ea2b691f60c91f7bbd685fac86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22165,
        "upload_time": "2022-11-17T09:58:35",
        "upload_time_iso_8601": "2022-11-17T09:58:35.410881Z",
        "url": "https://files.pythonhosted.org/packages/f5/39/81e1092706de698c79380c7adeeb1737d83fa424498e995f1bf48435e3d8/awk_dataframe-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34b639de1df41f9069e9ec80561e84e3ed493b13853c150485fe62747caa36b6",
          "md5": "fb26033720fac79f063a6836243cf638",
          "sha256": "4eeb7e25f3e4867c3e4ecd40a20445b2ce393314294590df3a32a4f3a95bf1ce"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb26033720fac79f063a6836243cf638",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21557,
        "upload_time": "2022-11-17T10:45:16",
        "upload_time_iso_8601": "2022-11-17T10:45:16.980765Z",
        "url": "https://files.pythonhosted.org/packages/34/b6/39de1df41f9069e9ec80561e84e3ed493b13853c150485fe62747caa36b6/awk_dataframe-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f4aee124b590aa66dfdae3ef2c98288f1ba68960737634f7c6fcc58db597463",
          "md5": "4cc7a359347fb1172909268c73b4fa50",
          "sha256": "78ce31ae949b789bf01af9342297b14cb6dcb448e5c21794a67a8dde58b3283d"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4cc7a359347fb1172909268c73b4fa50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22312,
        "upload_time": "2022-11-17T10:45:18",
        "upload_time_iso_8601": "2022-11-17T10:45:18.702751Z",
        "url": "https://files.pythonhosted.org/packages/7f/4a/ee124b590aa66dfdae3ef2c98288f1ba68960737634f7c6fcc58db597463/awk_dataframe-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee6fad524f6ba467f03eb2565ca699f3a6de73af2576a2310228459c702d11b4",
          "md5": "5b2be830709488c0a55df095c2beeca2",
          "sha256": "1c769b4164c6c5ec8c1930e644339187899d356497d8d328757ff7ee7182351e"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b2be830709488c0a55df095c2beeca2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26663,
        "upload_time": "2023-01-26T10:41:27",
        "upload_time_iso_8601": "2023-01-26T10:41:27.517952Z",
        "url": "https://files.pythonhosted.org/packages/ee/6f/ad524f6ba467f03eb2565ca699f3a6de73af2576a2310228459c702d11b4/awk_dataframe-0.2.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dec09e7d22077efbe9c844f655998bdee58b8e8f718a3e73928da8bdaf3cb24a",
          "md5": "71c82bd10dff760931b1f6f7e56b50aa",
          "sha256": "fae37198e90c963ea47756677e5adee879b5e9d17945d85eec7bb6b8c3bd9fe2"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.10.tar.gz",
        "has_sig": false,
        "md5_digest": "71c82bd10dff760931b1f6f7e56b50aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37604,
        "upload_time": "2023-01-26T10:41:30",
        "upload_time_iso_8601": "2023-01-26T10:41:30.235533Z",
        "url": "https://files.pythonhosted.org/packages/de/c0/9e7d22077efbe9c844f655998bdee58b8e8f718a3e73928da8bdaf3cb24a/awk_dataframe-0.2.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17a94517d79c8138135aabbfd9757d63bcc56bccfe8f8aa1e4c14389e6c104f6",
          "md5": "fe688072fac2e45a022729961d5a65a0",
          "sha256": "9ce030e336f94eaf6a44f3af13dce4b0dab3aa3116d85c9d9ffc0ec651114187"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe688072fac2e45a022729961d5a65a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26667,
        "upload_time": "2023-02-03T14:12:34",
        "upload_time_iso_8601": "2023-02-03T14:12:34.414712Z",
        "url": "https://files.pythonhosted.org/packages/17/a9/4517d79c8138135aabbfd9757d63bcc56bccfe8f8aa1e4c14389e6c104f6/awk_dataframe-0.2.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f7a9781efde656f5a1aefa755b403a8a5c1a42e875bef8bd56d011452cec530",
          "md5": "351c473b61b0d6c3e9d2d1761ccb49b8",
          "sha256": "72ab96a373031b09988f7d1fc5eeeed0f715869dd8b36a9bb717b0bbdf9f7afa"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.11.tar.gz",
        "has_sig": false,
        "md5_digest": "351c473b61b0d6c3e9d2d1761ccb49b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37601,
        "upload_time": "2023-02-03T14:12:36",
        "upload_time_iso_8601": "2023-02-03T14:12:36.858416Z",
        "url": "https://files.pythonhosted.org/packages/9f/7a/9781efde656f5a1aefa755b403a8a5c1a42e875bef8bd56d011452cec530/awk_dataframe-0.2.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e02f5b1957b01916557c47bcf46a12d8503f86c2092f52fabb70794ee6f159a3",
          "md5": "f83f0162688b8646f5bc45e6286a726a",
          "sha256": "876be5ceb2f027a06f4e6af20ae2a13037f71695defe76588f56659a6bfcbf57"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f83f0162688b8646f5bc45e6286a726a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24135,
        "upload_time": "2022-11-17T10:59:26",
        "upload_time_iso_8601": "2022-11-17T10:59:26.064767Z",
        "url": "https://files.pythonhosted.org/packages/e0/2f/5b1957b01916557c47bcf46a12d8503f86c2092f52fabb70794ee6f159a3/awk_dataframe-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c2241246fcea7f01f44ac623b5d7fa457af0be21da66c7daebf67458cd97a8c",
          "md5": "642369d08c5fb39c6670a2d8afc37fdc",
          "sha256": "85469361b1a22818216cb223a9e6d6a3cebe458982f26908966e8fb156b50d90"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "642369d08c5fb39c6670a2d8afc37fdc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24072,
        "upload_time": "2022-11-17T10:59:28",
        "upload_time_iso_8601": "2022-11-17T10:59:28.155048Z",
        "url": "https://files.pythonhosted.org/packages/5c/22/41246fcea7f01f44ac623b5d7fa457af0be21da66c7daebf67458cd97a8c/awk_dataframe-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71daa5584410a30348bc39c0a6d28eb670d99afdf85f550de2a1bcda00be3f88",
          "md5": "01f863e24d318951924e6bbaed9b6751",
          "sha256": "2bd1e95e697840b4bed5202878ecec22903b5461b86fffcad1ccdfc556c3f951"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01f863e24d318951924e6bbaed9b6751",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24988,
        "upload_time": "2022-11-18T10:37:38",
        "upload_time_iso_8601": "2022-11-18T10:37:38.179481Z",
        "url": "https://files.pythonhosted.org/packages/71/da/a5584410a30348bc39c0a6d28eb670d99afdf85f550de2a1bcda00be3f88/awk_dataframe-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfa5c28143dd3a12ffae465c7d3685268e923c854a86fbc3aa2e6035260a8ca4",
          "md5": "f5fbf22f2ba9dd51ef89271134a181d1",
          "sha256": "0ce603dcda388a0a11dda0b528c074ac0e40b5744981b3091ef1f054ae73b6c5"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f5fbf22f2ba9dd51ef89271134a181d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24953,
        "upload_time": "2022-11-18T10:37:40",
        "upload_time_iso_8601": "2022-11-18T10:37:40.785559Z",
        "url": "https://files.pythonhosted.org/packages/bf/a5/c28143dd3a12ffae465c7d3685268e923c854a86fbc3aa2e6035260a8ca4/awk_dataframe-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e41930298ac89135f44f3f9823a1f2bd75053a6fcd0ca7c3f855f38c9d0de9d",
          "md5": "4f94015c72ed9aa08fcb5ada61c59875",
          "sha256": "2d9dea129a2965db4a51c97b0e6a818c4de220b55fed6124e0af82749a52fe44"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f94015c72ed9aa08fcb5ada61c59875",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19763,
        "upload_time": "2022-11-20T17:53:20",
        "upload_time_iso_8601": "2022-11-20T17:53:20.172950Z",
        "url": "https://files.pythonhosted.org/packages/7e/41/930298ac89135f44f3f9823a1f2bd75053a6fcd0ca7c3f855f38c9d0de9d/awk_dataframe-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "228616502aec1670b8a4b536187270d4120c03f0cc9a9709f0cbaa3b07f2189b",
          "md5": "dd40523f4dda30b67f6e3dacafac96b8",
          "sha256": "80097f00cdffa1d041c8c763f9e6c644ca4b0e38724b4c8582efd5ea07346163"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "dd40523f4dda30b67f6e3dacafac96b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19864,
        "upload_time": "2022-11-20T17:53:22",
        "upload_time_iso_8601": "2022-11-20T17:53:22.049862Z",
        "url": "https://files.pythonhosted.org/packages/22/86/16502aec1670b8a4b536187270d4120c03f0cc9a9709f0cbaa3b07f2189b/awk_dataframe-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a52797506d0d7db269e880d825279e11b30de5f42eed5e3ca76b835b57873e14",
          "md5": "bdb3e5df3ecde469aa479ccb91219359",
          "sha256": "f6269b2e9b682de208ba35b98f3c923dc4f1b6ab1a437d78bcb48a9943c211fd"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bdb3e5df3ecde469aa479ccb91219359",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25723,
        "upload_time": "2022-11-21T16:52:20",
        "upload_time_iso_8601": "2022-11-21T16:52:20.545489Z",
        "url": "https://files.pythonhosted.org/packages/a5/27/97506d0d7db269e880d825279e11b30de5f42eed5e3ca76b835b57873e14/awk_dataframe-0.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "817433abef803f53f3f77d16cbab02608659801995753c5dd6b4df88850a870a",
          "md5": "b0a6284c92f4420c39d158ca42f12988",
          "sha256": "c393e1e29f76f4215d5c77d73e12ded8490d179a4ade7579d95d18a058542e9b"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b0a6284c92f4420c39d158ca42f12988",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36606,
        "upload_time": "2022-11-21T16:52:22",
        "upload_time_iso_8601": "2022-11-21T16:52:22.621565Z",
        "url": "https://files.pythonhosted.org/packages/81/74/33abef803f53f3f77d16cbab02608659801995753c5dd6b4df88850a870a/awk_dataframe-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddf26dc90cd319ae68822ef21743737cec856875f47e52849dd06307f271c931",
          "md5": "eabeeb109a315817ba6ba871ad4a0b26",
          "sha256": "0f037e50c009d9754869df3b73826b767e652b8e0135f04f71f01f08828400ff"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eabeeb109a315817ba6ba871ad4a0b26",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25743,
        "upload_time": "2022-11-21T16:57:58",
        "upload_time_iso_8601": "2022-11-21T16:57:58.658156Z",
        "url": "https://files.pythonhosted.org/packages/dd/f2/6dc90cd319ae68822ef21743737cec856875f47e52849dd06307f271c931/awk_dataframe-0.2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2577c8b439bf41a95d4feee7dd353bf567b82a8b4270c321a1b32ab899dcb553",
          "md5": "cfa6a77be6e8c3d08161386324b14f9b",
          "sha256": "accb6b777783751dcbbe0e5136c999e3f458200e2a68c4d94654264d09d329a8"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "cfa6a77be6e8c3d08161386324b14f9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36631,
        "upload_time": "2022-11-21T16:58:00",
        "upload_time_iso_8601": "2022-11-21T16:58:00.711062Z",
        "url": "https://files.pythonhosted.org/packages/25/77/c8b439bf41a95d4feee7dd353bf567b82a8b4270c321a1b32ab899dcb553/awk_dataframe-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "315088acb30e752adbb008c45c4b8f1c8846548a86fac7c6630017a77e7da26f",
          "md5": "dab8f7e84b269edb3e833c6af3fe736e",
          "sha256": "2f3d2366ddca194014259084a2a3d251276288f2206dad7cd642b36e51ab3650"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dab8f7e84b269edb3e833c6af3fe736e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26273,
        "upload_time": "2022-11-25T13:44:24",
        "upload_time_iso_8601": "2022-11-25T13:44:24.090041Z",
        "url": "https://files.pythonhosted.org/packages/31/50/88acb30e752adbb008c45c4b8f1c8846548a86fac7c6630017a77e7da26f/awk_dataframe-0.2.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3937ab327fbc5b99b539680012ef7833130ec28c2c4ccd04122eea490878c37",
          "md5": "f41beffee1ed6bb38a3398e98540bde6",
          "sha256": "2952c853728da764a17f9b59e602f67568211fa31de8377219a565491b2cfcda"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f41beffee1ed6bb38a3398e98540bde6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37211,
        "upload_time": "2022-11-25T13:44:26",
        "upload_time_iso_8601": "2022-11-25T13:44:26.364941Z",
        "url": "https://files.pythonhosted.org/packages/c3/93/7ab327fbc5b99b539680012ef7833130ec28c2c4ccd04122eea490878c37/awk_dataframe-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e396e85c72e48a6bf3efcc4bdc2ee7dc0b37cee06fee64c57406394fdbb3c778",
          "md5": "b35d3c65fb9b277c4989ad3def1216e2",
          "sha256": "951f68d0296008885a98f1040c6342daca3fc1f8d682f89913416a9ec4e28c0e"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b35d3c65fb9b277c4989ad3def1216e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26348,
        "upload_time": "2022-12-02T09:19:02",
        "upload_time_iso_8601": "2022-12-02T09:19:02.439754Z",
        "url": "https://files.pythonhosted.org/packages/e3/96/e85c72e48a6bf3efcc4bdc2ee7dc0b37cee06fee64c57406394fdbb3c778/awk_dataframe-0.2.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59cf2c765b8e454068cc44457148a5a9272617b2c00cdd98f18d4e259f7a55eb",
          "md5": "14f573a2f1635cc82956fb3f923c04d4",
          "sha256": "2ca960a95fcdd2d85f9cd903867e227a7de52a98dc331d279f3bab068b610970"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "14f573a2f1635cc82956fb3f923c04d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37289,
        "upload_time": "2022-12-02T09:19:04",
        "upload_time_iso_8601": "2022-12-02T09:19:04.967857Z",
        "url": "https://files.pythonhosted.org/packages/59/cf/2c765b8e454068cc44457148a5a9272617b2c00cdd98f18d4e259f7a55eb/awk_dataframe-0.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "138271cd53022996755ac17bf2fea6c76eb0bc2983a12d4c89164b9da7f06730",
          "md5": "eacb3513e55b492fcd7605704d1fe7a9",
          "sha256": "52d1a683fe3aead7ba8ca87cfcc1bea6f0966ebf7539343c264429756a6ff92d"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eacb3513e55b492fcd7605704d1fe7a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26642,
        "upload_time": "2023-01-17T13:41:22",
        "upload_time_iso_8601": "2023-01-17T13:41:22.965646Z",
        "url": "https://files.pythonhosted.org/packages/13/82/71cd53022996755ac17bf2fea6c76eb0bc2983a12d4c89164b9da7f06730/awk_dataframe-0.2.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "328b31f9aca723fa31b2525af9b885c477a1bcc5308abc4a3bbee3b583cc42d6",
          "md5": "073d644d0103f33411213505bb6f590a",
          "sha256": "e2724e1873855b8432882ce45cc85619c034fa2d916dff02ff9b3fb0466c8ce5"
        },
        "downloads": -1,
        "filename": "awk_dataframe-0.2.9.tar.gz",
        "has_sig": false,
        "md5_digest": "073d644d0103f33411213505bb6f590a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37589,
        "upload_time": "2023-01-17T13:41:25",
        "upload_time_iso_8601": "2023-01-17T13:41:25.294236Z",
        "url": "https://files.pythonhosted.org/packages/32/8b/31f9aca723fa31b2525af9b885c477a1bcc5308abc4a3bbee3b583cc42d6/awk_dataframe-0.2.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17a94517d79c8138135aabbfd9757d63bcc56bccfe8f8aa1e4c14389e6c104f6",
        "md5": "fe688072fac2e45a022729961d5a65a0",
        "sha256": "9ce030e336f94eaf6a44f3af13dce4b0dab3aa3116d85c9d9ffc0ec651114187"
      },
      "downloads": -1,
      "filename": "awk_dataframe-0.2.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fe688072fac2e45a022729961d5a65a0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 26667,
      "upload_time": "2023-02-03T14:12:34",
      "upload_time_iso_8601": "2023-02-03T14:12:34.414712Z",
      "url": "https://files.pythonhosted.org/packages/17/a9/4517d79c8138135aabbfd9757d63bcc56bccfe8f8aa1e4c14389e6c104f6/awk_dataframe-0.2.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f7a9781efde656f5a1aefa755b403a8a5c1a42e875bef8bd56d011452cec530",
        "md5": "351c473b61b0d6c3e9d2d1761ccb49b8",
        "sha256": "72ab96a373031b09988f7d1fc5eeeed0f715869dd8b36a9bb717b0bbdf9f7afa"
      },
      "downloads": -1,
      "filename": "awk_dataframe-0.2.11.tar.gz",
      "has_sig": false,
      "md5_digest": "351c473b61b0d6c3e9d2d1761ccb49b8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 37601,
      "upload_time": "2023-02-03T14:12:36",
      "upload_time_iso_8601": "2023-02-03T14:12:36.858416Z",
      "url": "https://files.pythonhosted.org/packages/9f/7a/9781efde656f5a1aefa755b403a8a5c1a42e875bef8bd56d011452cec530/awk_dataframe-0.2.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}