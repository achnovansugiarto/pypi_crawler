{
  "info": {
    "author": "Shahab Tasharrofi",
    "author_email": "shahab.tasharrofi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pytyped-metrics\n\n`pytyped-metrics` is a Python package that automatically extracts `statsd`-style metrics for a given Python type.\n`pytyped-metrics` is a part of `pytyped` collection and follows its philosophy of using types to automate mundane and repetitive tasks.\nCurrently, given a type `T`, `pytyped-metrics` automatically extracts a class `MetricsExporter[T]` which takes a value `t: T` and returns a list of metrics to be published to a `statsd`-style metrics collector.\n\n### Installation\n\nYou can install `pytyped-metrics` from [PyPI](https://pypi.org/):\n\n```\npip install pytyped-metrics\n```\n\n`pytyped-metrics` is checked on `Python 3.6+`.\n\n### Why `pytyped-metrics`?\n\nMetrics are valuable pieces of information in any real-world software and, to our knowledge, `pytyped-metrics` is the only Python package that automatic exporting of metrics based on reasonably-defined types.\nAdditionally, `pytyped-metrics` is designed to be extensible.\nThat is, you can define custom metrics exporters for specific types or custom functional types.\n\nMany `statsd`-style metric collectors such as `statsd`, `influxdb`, `prometheus`, and `datadog` define a metric as a numeric value which can have a collection of tags with each tag having a name and a value.\nFor example, the load of different cores of a CPU can be defined by a metric called `system.cpu.load` and a tag `core_no=x` which defines the load on which core is being reported.\n\nCurrently, `pytyped-metrics` supports the following type driven extractions of metric exporters:\n- Metric exporting for **basic numeric types** such as `int`, `float`, and `Decimal` (which define a singular metric).\n- Metric exporting for **basic non-numeric types** such as `bool`, `date`, `datetime`, and `str` (which define meaningful tags on other metrics)\n- Metric exporting for **simple type combinators** such as `List[T]` and `Dict[A, B]`.\n- Metric exporting for **named product types** such as `NamedTuple`s or `dataclass`es.\n- Metric exporting for **anonymous product types** such as `Tuple[T1, T2, ...]`.\n- Metric exporting for **anonymous union types** such as `Optional[T]`, `Union[T1, T2, ...]`, etc.\n- Metric exporting for **named union types** such as class hierarchies (i.e., when a class `A` has several subclasses `A1`, ..., `An`).\n- Metric exporting for **generic types** and type variables.\n- Metric exporting for **custom functional types** such as `Set[T]`, `Secret[T]`, etc where a custom function is defined for generic types such as `Set` or `Secret` and that functional is applied to all instantiations of those generic type.\n- Metric exporting for **recursive types** such as binary trees, etc.\n\n### Using `pytyped-metrics` to extract metric exporters\n\nFirst, define your type. For example, in the following we want to define an account that can either be a personal account or a business account.\nEach account (personal or business) has a beneficiary owner and a personal account has one currency and possibly multiple banking products (checking, saving, etc) but the business account can have both multiple currencies and multiple banking products per currency.\n\n```python\nfrom decimal import Decimal\nfrom dataclasses import dataclass\nfrom enum import Enum\nfrom typing import Dict, List\n\n\n@dataclass\nclass BankingProductType(Enum):\n    Checking = \"Checking\"\n    Saving = \"Saving\"\n    Credit = \"Credit card\"\n    LoC = \"Line of Credit\"\n\n\n@dataclass\nclass BankingProduct:\n    type: BankingProductType\n    balance: Decimal\n\n\n@dataclass\nclass Account:\n    owner: str\n\n\n@dataclass\nclass PersonalAccount(Account):\n    currency: str\n    products: List[BankingProduct]\n\n\n@dataclass\nclass BusinessAccount(Account):\n    currencies: Dict[str, List[BankingProduct]]\n```\n\nSecond, use an instance of `AutoMetricExporter` to extract a metric exporter for type `Account`:\n\n```python\nfrom pytyped.metrics.exporter import AutoMetricExporter, MetricsExporter\n\n_auto_metric_exporter = AutoMetricExporter()\naccount_metric_exporter: MetricsExporter[Account] = _auto_metric_exporter.extract(Account)\n```\n\nThird, define some instances of the `Account` class:\n\n```python\npersonal_account = PersonalAccount(\n    owner = \"John Doe\",\n    currency = \"USD\",\n    products = [\n        BankingProduct(type=BankingProductType.Checking, balance=Decimal(1000)),\n        BankingProduct(type=BankingProductType.Credit, balance=Decimal(200))\n    ]\n)\n\nbusiness_account = BusinessAccount(\n    owner = \"Doe Ltd.\",\n    currencies = {\n        \"USD\": [\n            BankingProduct(type=BankingProductType.Checking, balance=Decimal(100000)),\n            BankingProduct(type=BankingProductType.LoC, balance=Decimal(20000))\n        ],\n        \"EUR\": [\n            BankingProduct(type=BankingProductType.Checking, balance=Decimal(50000)),\n        ],\n    }\n) \n```\n\nFinally, use `account_metric_exporter` to convert data in your instances to a list of metrics:\n\n```python\n>>> account_metric_exporter.export([\"account\"], personal_account).to_metrics({})\n[\n    Metric(\n        name='account.products.balance',\n        value=Decimal('1000'),\n        tags={\n            'account.Account': 'PersonalAccount',\n            'account.owner': 'John Doe',\n            'account.currency': 'USD'\n        }\n    ),\n    Metric(\n        name='account.products.balance',\n        value=Decimal('200'),\n        tags={\n            'account.Account': 'PersonalAccount',\n            'account.owner': 'John Doe',\n            'account.currency': 'USD'\n        }\n    )\n]\n>>> account_metric_exporter.export([\"account\"], business_account).to_metrics({})\n[\n    Metric(\n        name='account.balance',\n        value=Decimal('100000'),\n        tags={\n            'account.Account': 'BusinessAccount',\n            'account.owner': 'Doe Ltd.',\n            'account.currencies': 'USD'\n        }\n    ),\n    Metric(\n        name='account.balance',\n        value=Decimal('20000'),\n        tags={\n            'account.Account': 'BusinessAccount',\n            'account.owner': 'Doe Ltd.',\n            'account.currencies': 'USD'\n        }\n    ),\n    Metric(\n        name='account.balance',\n        value=Decimal('50000'),\n        tags={\n            'account.Account': 'BusinessAccount',\n            'account.owner': 'Doe Ltd.',\n            'account.currencies': 'EUR'\n        }\n    )\n]\n```\n\n### Issues\n\nPlease report any issues to the [GitHub repository for this package](https://github.com/stasharrofi/pytyped).\n\n### Contributors\n\n- [Shahab Tasharrofi](mailto:shahab.tasharrofi@gmail.com)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/stasharrofi/pytyped/tree/master/pytyped-metrics",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytyped-metrics",
    "package_url": "https://pypi.org/project/pytyped-metrics/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytyped-metrics/",
    "project_urls": {
      "Homepage": "https://github.com/stasharrofi/pytyped/tree/master/pytyped-metrics"
    },
    "release_url": "https://pypi.org/project/pytyped-metrics/1.0.1/",
    "requires_dist": [
      "pytyped-macros (>=1.0.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Type-Driven Development for Python: Automatic Extraction of Metrics for Python Types",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13538907,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46ba13fcfea453e88bafaf608673ebaa2f337321941293b84f7c54cfa68ba165",
          "md5": "dd661a65ecb6c7309cd11b131ec5751f",
          "sha256": "3531cc0c4481061cb32a712a0de57807cfcde353a46f7831dc9fabc511a1ebc7"
        },
        "downloads": -1,
        "filename": "pytyped_metrics-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd661a65ecb6c7309cd11b131ec5751f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7011,
        "upload_time": "2022-04-17T13:42:04",
        "upload_time_iso_8601": "2022-04-17T13:42:04.861666Z",
        "url": "https://files.pythonhosted.org/packages/46/ba/13fcfea453e88bafaf608673ebaa2f337321941293b84f7c54cfa68ba165/pytyped_metrics-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2698a7522d8aab7fc4a7afa0415c2759fe8dfbe4408c7fb91b61452dc48436ab",
          "md5": "a4d170416780177f63df736d905985b8",
          "sha256": "93190420041ba3c4a00451122a12fb9f39403dd84af471cc3239ee077e1d2044"
        },
        "downloads": -1,
        "filename": "pytyped-metrics-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a4d170416780177f63df736d905985b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6687,
        "upload_time": "2022-04-17T13:42:06",
        "upload_time_iso_8601": "2022-04-17T13:42:06.686638Z",
        "url": "https://files.pythonhosted.org/packages/26/98/a7522d8aab7fc4a7afa0415c2759fe8dfbe4408c7fb91b61452dc48436ab/pytyped-metrics-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e92432d1fbeee6f3fa6738f5b5b334350102b4ffe59d9b7c71bc0a1772cfd116",
          "md5": "b00f7513591f4c4d63d77df538b38cc0",
          "sha256": "856e99485fcf670e005b93e9d1168e3895a0f2ba0ac0477a9f4be818ed4a0add"
        },
        "downloads": -1,
        "filename": "pytyped_metrics-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b00f7513591f4c4d63d77df538b38cc0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7014,
        "upload_time": "2022-04-17T16:22:23",
        "upload_time_iso_8601": "2022-04-17T16:22:23.502241Z",
        "url": "https://files.pythonhosted.org/packages/e9/24/32d1fbeee6f3fa6738f5b5b334350102b4ffe59d9b7c71bc0a1772cfd116/pytyped_metrics-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa7a5a1df0c4f76112d6de5196ddfb06b5a5e09078a5848306ec6da5b8f46b05",
          "md5": "cf2ee0c6f31ee7c8f62a5d11837c95db",
          "sha256": "cbae1b20d2df8caac62caa03ffaf6086fe8637fcfdfe2eeb81796ec647c24f0f"
        },
        "downloads": -1,
        "filename": "pytyped-metrics-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cf2ee0c6f31ee7c8f62a5d11837c95db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6695,
        "upload_time": "2022-04-17T16:22:25",
        "upload_time_iso_8601": "2022-04-17T16:22:25.285457Z",
        "url": "https://files.pythonhosted.org/packages/aa/7a/5a1df0c4f76112d6de5196ddfb06b5a5e09078a5848306ec6da5b8f46b05/pytyped-metrics-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e92432d1fbeee6f3fa6738f5b5b334350102b4ffe59d9b7c71bc0a1772cfd116",
        "md5": "b00f7513591f4c4d63d77df538b38cc0",
        "sha256": "856e99485fcf670e005b93e9d1168e3895a0f2ba0ac0477a9f4be818ed4a0add"
      },
      "downloads": -1,
      "filename": "pytyped_metrics-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b00f7513591f4c4d63d77df538b38cc0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7014,
      "upload_time": "2022-04-17T16:22:23",
      "upload_time_iso_8601": "2022-04-17T16:22:23.502241Z",
      "url": "https://files.pythonhosted.org/packages/e9/24/32d1fbeee6f3fa6738f5b5b334350102b4ffe59d9b7c71bc0a1772cfd116/pytyped_metrics-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa7a5a1df0c4f76112d6de5196ddfb06b5a5e09078a5848306ec6da5b8f46b05",
        "md5": "cf2ee0c6f31ee7c8f62a5d11837c95db",
        "sha256": "cbae1b20d2df8caac62caa03ffaf6086fe8637fcfdfe2eeb81796ec647c24f0f"
      },
      "downloads": -1,
      "filename": "pytyped-metrics-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cf2ee0c6f31ee7c8f62a5d11837c95db",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6695,
      "upload_time": "2022-04-17T16:22:25",
      "upload_time_iso_8601": "2022-04-17T16:22:25.285457Z",
      "url": "https://files.pythonhosted.org/packages/aa/7a/5a1df0c4f76112d6de5196ddfb06b5a5e09078a5848306ec6da5b8f46b05/pytyped-metrics-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}