{
  "info": {
    "author": "Chris Padilla",
    "author_email": "cpadilla@bellflight.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# AVR-Python-Libraries\n\n## Install\n\nTo install the base package, run:\n\n```bash\npip install bell-avr-libraries\n```\n\nAdditionally, the `mqtt` and `serial` extras are available if you want to use\nthe MQTT or PCC functionality.\n\n```bash\npip install bell-avr-libraries[mqtt,serial]\n```\n\n## Usage\n\n### MQTT\n\n```python\nfrom bell.avr import mqtt\n```\n\nThese are MQTT utilities that are used to have a consistent messaging protocol\nthroughout all the AVR software modules.\n\nThe first part of this are the payloads for the MQTT messages themselves. As AVR\nexclusively uses JSON, these are all\n[`TypedDict`](https://docs.python.org/3/library/typing.html#typing.TypedDict)s\nthat have all of the required fields for a message.\n\nExample:\n\n```python\nfrom bell.avr.mqtt.payloads import AvrPcmSetBaseColorPayload\n\npayload = AvrPcmSetBaseColorPayload((128, 232, 142, 0))\n```\n\nThe second part of the MQTT libraries, is the `MQTTModule` class.\nThis is a boilerplate module for AVR that makes it very easy to send\nand recieve MQTT messages and do something with them.\n\nExample:\n\n```python\nfrom bell.avr.mqtt.client import MQTTModule\nfrom bell.avr.mqtt.payloads import AvrFcmVelocityPayload, AvrPcmSetServoOpenClosePayload\n\n\nclass Sandbox(MQTTModule):\n    def __init__(self) -> None:\n        super().__init__()\n        self.topic_map = {\"avr/fcm/velocity\": self.show_velocity}\n\n    def show_velocity(self, payload: AvrFcmVelocityPayload) -> None:\n        vx = payload[\"vX\"]\n        vy = payload[\"vY\"]\n        vz = payload[\"vZ\"]\n        v_ms = (vx, vy, vz)\n        print(f\"Velocity information: {v_ms} m/s\")\n\n    def open_servo(self) -> None:\n        payload = AvrPcmSetServoOpenClosePayload(servo=0, action=\"open\")\n        self.send_message(\"avr/pcm/set_servo_open_close\", payload)\n\n\nif __name__ == \"__main__\":\n    box = Sandbox()\n    box.run()\n```\n\nThe `topic_map` dictionary is a class attribute that maps topics to subscribe to\nand a function that will handle an incoming payload. The `payload` argument\nshould match the appropriate `Payload` class for that topic.\n\nAdditionally, the `message_cache` attribute is a dictionary that holds\na copy of the last payload sent by that module on a given topic. The keys are the\ntopic strings, and the values are the topic payloads.\n\n### Utils\n\n```python\nfrom bell.avr import utils\n```\n\nThese are general purpose utilities.\n\n#### Decorators\n\n```python\nfrom bell.avr.utils import decorators\n```\n\nThere are 3 different function decorators available, which are helpful for MQTT\nmessage callbacks. First is the `try_except` decorator, which wraps the\nfunction in a `try: except:` statement and will log any exceptions to the console:\n\n```python\n    @decorators.try_except\n    def assemble_hil_gps_message(self) -> None:\n        ...\n```\n\nAdditionally, there is the `reraise` argument, which can be set to `True` to raise\nany exceptions that are encountered. This is helpful if you still want exceptions\nto propagate up, but log them.\n\nThere is an async version of this decorator as well with an `async_` prefix.\n\n```python\n    @decorators.async_try_except()\n    async def connected_status_telemetry(self) -> None:\n        ...\n```\n\nThe last decorator is `run_forever` which will run the wrapped function forever,\nwith a given `period` or `frequency`.\n\n```python\n    @decorators.run_forever(frequency=5)\n    def read_data(self) -> None:\n        ...\n```\n\n#### Timing\n\n```python\nfrom bell.avr.utils import timing\n```\n\nHere is a `rate_limit` function which take a callable and a\nperiod or frequency, and only run the callable at that given rate.\n\n```python\nfor _ in range(10):\n    # add() will only run twice\n    timing.rate_limit(add, period=5)\n    time.sleep(1)\n```\n\nThis works tracking calls to the `rate_limit` function from a line number\nwithin a file, so multiple calls to `rate_limit` say within a loop\nwith the same callable and period will be treated seperately. This allows\nfor dynamic frequency manipulation.\n\n### Serial\n\n```python\nfrom bell.avr import serial\n```\n\nThese are serial utilities that help facilitate finding and communicating\nwith the AVR peripherial control computer.\n\n#### Client\n\n```python\nfrom bell.avr.serial import client\n```\n\nThe `SerialLoop` class is a small wrapper around the `pyserial` `serial.Serial`\nclass which adds a `run` method that will try to read data from the serial device\nas fast as possible.\n\n```python\nser = client.SerialLoop()\n```\n\n#### PCC\n\n```python\nfrom bell.avr.serial import client\n```\n\nThe `PeripheralControlComputer` class sends serial messages\nto the AVR peripherial control computer, via easy-to-use class methods.\n\n```python\nimport bell.avr.serial.client\nimport bell.avr.serial.pcc\nimport threading\n\nclient = bell.avr.serial.client.SerialLoop()\nclient.port = port\nclient.baudrate = baudrate\nclient.open()\n\npcc = bell.avr.serial.pcc.PeripheralControlComputer(client)\n\nclient_thread = threading.Thread(target=client.run)\nclient_thread.start()\n\npcc.set_servo_max(0, 100)\n```\n\n#### Ports\n\n```python\nfrom bell.avr.serial import ports\n```\n\nHere is a `list_serial_ports` function which returns a list of detected serial\nports connected to the system.\n\n```python\nserial_ports = ports.list_serial_ports()\n# [\"COM1\", \"COM5\", ...]\n```\n\n## Development\n\nInstall [`poetry`](https://python-poetry.org/) and run\n`poetry install --extras mqtt --extras serial` to install of the dependencies\ninside a virtual environment.\n\nBuild the auto-generated code with `poetry run python build.py`. From here,\nyou can now produce a package with `poetry build`.\n\nTo add new message definitions, add entries to the `bell/avr/mqtt/messages.jsonc` file.\nThe 3 parts of a new message are as follows:\n\n1. \"topic\": This is the full topic path for the message. This must be all lower case and\n   start with \"avr/\".\n2. \"payload\": These are the keys of the payload for the message.\n   This is a list of key entries (see below).\n3. \"docs\": This is an optional list of Markdown strings that explains what this\n   message does. Each list item is a new line.\n\nThe key entries for a message have the following elements:\n\n1. \"key\": This is the name of the key. Must be a valid Python variable name.\n2. \"type\": This is the data type of the key such as `Tuple[int, int, int, int]`.\n   Must be a valid Python type hint. Otherwise, this can be a list of more\n   key entries, effectively creating a nested dictionary.\n3. \"docs\": This is an optional list of Markdown strings that explains what the\n   key is. Each list item is a new line.\n\nThe `bell/avr/mqtt/schema.json` file will help ensure the correct schema is maintained,\nassuming you are using VS Code.\n\n## MQTT Documentation\n\n### Data Types\n\n#### AvrApriltagsRawTags\n\n- `\"id\"` (`int`):\n    The ID of the AprilTag\n- `\"pos\"` (`AvrApriltagsRawTagsPos`)\n- `\"rotation\"` (`Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]`):\n    The 3x3 rotation matrix\n\n#### AvrApriltagsRawTagsPos\n\n- `\"x\"` (`float`):\n    The position in meters of the camera relative to the AprilTag's X frame\n- `\"y\"` (`float`):\n    The position in meters of the camera relative to the AprilTag's Y frame\n- `\"z\"` (`float`):\n    The position in meters of the camera relative to the AprilTag's Z frame\n\n#### AvrApriltagsSelectedPos\n\nThe position of the vehicle in world frame in centimeters\n\n- `\"n\"` (`float`):\n    The +north position of the vehicle relative to the world origin in world frame\n- `\"e\"` (`float`):\n    The +east position of the vehicle relative to the world origin in world frame\n- `\"d\"` (`float`):\n    The +down position of the vehicle relative to the world origin in world frame\n\n#### AvrApriltagsVisibleTags\n\n- `\"id\"` (`int`):\n    The ID of the AprilTag\n- `\"horizontal_dist\"` (`float`):\n    The horizontal scalar distance from vehicle to AprilTag, in centimeters\n- `\"vertical_dist\"` (`float`):\n    The vertical scalar distance from vehicle to AprilTag, in centimeters\n- `\"angle_to_tag\"` (`float`):\n    The angle formed by the vector pointing from the vehicles body to the AprilTag in world frame relative to world-north\n- `\"heading\"` (`float`):\n    The heading of the vehicle in world frame\n- `\"pos_rel\"` (`AvrApriltagsVisibleTagsPosRel`):\n    The relative position of the vehicle to the tag in world frame in centimeters\n- `\"pos_world\"` (`AvrApriltagsVisibleTagsPosWorld`):\n    The position of the vehicle in world frame in centimeters (if the tag has no truth data, this will not be present in the output)\n\n#### AvrApriltagsVisibleTagsPosRel\n\nThe relative position of the vehicle to the tag in world frame in centimeters\n\n- `\"x\"` (`float`):\n    The x (+north/-south) position of the vehicle relative to the AprilTag in world frame\n- `\"y\"` (`float`):\n    The y (+east/-west) position of the vehicle relative to the AprilTag in world frame\n- `\"z\"` (`float`):\n    The z (+down/-up) position of the vehicle relative to the AprilTag in world frame\n\n#### AvrApriltagsVisibleTagsPosWorld\n\nThe position of the vehicle in world frame in centimeters (if the tag has no truth data, this will not be present in the output)\n\n- `\"x\"` (`Optional[float]`):\n    The x position of the vehicle relative to the world origin (this is the ship) in world frame (for reference the mountain is **north** of the beach)\n- `\"y\"` (`Optional[float]`):\n    The y position of the vehicle relative to the world origin in world frame\n- `\"z\"` (`Optional[float]`):\n    The z position of the vehicle relative to the world origin in world frame\n\n### Message Payloads\n\n#### AvrApriltagsFpsPayload\n\nTopic: `avr/apriltags/fps`\n\nThis reports the framerate of AprilTag processing\n\n- `\"fps\"` (`int`):\n    Number of frames of video data processed in the last second\n\n#### AvrApriltagsRawPayload\n\nTopic: `avr/apriltags/raw`\n\nThis topic publishes the raw AprilTag data\n\n- `\"tags\"` (`List[AvrApriltagsRawTags]`)\n\n#### AvrApriltagsSelectedPayload\n\nTopic: `avr/apriltags/selected`\n\nThis topic publishes its best candidate for position feedback\n\n- `\"tag_id\"` (`int`):\n    The id of the tag\n- `\"pos\"` (`AvrApriltagsSelectedPos`):\n    The position of the vehicle in world frame in centimeters\n- `\"heading\"` (`float`)\n\n#### AvrApriltagsVisiblePayload\n\nTopic: `avr/apriltags/visible`\n\nThis topic publishes the transformed AprilTag data\n\n- `\"tags\"` (`List[AvrApriltagsVisibleTags]`)\n\n#### AvrAutonomousBuildingDropPayload\n\nTopic: `avr/autonomous/building/drop`\n\nThis enables or disables a building payload drop. This is not used by any Bell code, but available to students to listen to.\n\n- `\"id\"` (`int`):\n    0-index ID of the relevant building\n- `\"enabled\"` (`bool`):\n    Boolean of whether the building should have drop enabled\n\n#### AvrAutonomousEnablePayload\n\nTopic: `avr/autonomous/enable`\n\nThis enables or disables autonomous mode. This is not used by any Bell code, but available to students to.\n\n- `\"enabled\"` (`bool`)\n\n#### AvrFcmAttitudeEulerPayload\n\nTopic: `avr/fcm/attitude/euler`\n\nThis reports the current attitude of the drone from the flight controller.\n\n- `\"roll\"` (`float`):\n    Roll in degrees\n- `\"pitch\"` (`float`):\n    Pitch in degrees\n- `\"yaw\"` (`float`):\n    Yaw in degrees\n\n#### AvrFcmBatteryPayload\n\nTopic: `avr/fcm/battery`\n\nThis reports battery information from the flight controller.\n\n- `\"voltage\"` (`float`):\n    Battery voltage\n- `\"soc\"` (`float`):\n    State of charge (0 - 100)\n\n#### AvrFcmEventsPayload\n\nTopic: `avr/fcm/events`\n\nThis reports events from the flight controller such as flight mode changes.\n\n- `\"name\"` (`str`):\n    The name of the event.\n- `\"payload\"` (`str`):\n    The payload of the event.\n\n#### AvrFcmGpsInfoPayload\n\nTopic: `avr/fcm/gps_info`\n\nThis reports the current status of the flight controller's GPS connection.\n\n- `\"num_satellites\"` (`int`):\n    Number of visible satellites in use. HIL GPS will appear as 13.\n- `\"fix_type\"` (`str`):\n    GPS fix type\n\n#### AvrFcmHilGpsStatsPayload\n\nTopic: `avr/fcm/hil_gps_stats`\n\nThis reports statistics on the HIL GPS data that is fed into the flight controller.\n\n- `\"num_frames\"` (`int`):\n    This is the number of messages that have been sent to the flight controller since the software has started.\n\n#### AvrFcmLocationGlobalPayload\n\nTopic: `avr/fcm/location/global`\n\nThis reports the current position of the drone in global coordinates from the flight controller.\n\n- `\"lat\"` (`float`):\n    Latitude in degrees\n- `\"lon\"` (`float`):\n    Longitude in degrees\n- `\"alt\"` (`float`):\n    Altitude relative to takeoff altitude in meters\n- `\"hdg\"` (`float`):\n    Heading in degrees.\n\n#### AvrFcmLocationHomePayload\n\nTopic: `avr/fcm/location/home`\n\nThis reports the current position of the drone's home position in global coordinates.\n\n- `\"lat\"` (`float`):\n    Latitude in degrees of the home position\n- `\"lon\"` (`float`):\n    Longitude in degrees of the home position\n- `\"alt\"` (`float`):\n    Altitude relative to the home position in meters\n\n#### AvrFcmLocationLocalPayload\n\nTopic: `avr/fcm/location/local`\n\nThis reports the current position of the drone in local coordinates from the flight controller.\n\n- `\"dX\"` (`float`):\n    X position in a local North/East/Down coordinate system in meters\n- `\"dY\"` (`float`):\n    Y position in a local North/East/Down coordinate system in meters\n- `\"dZ\"` (`float`):\n    Z position in a local North/East/Down coordinate system in meters\n\n#### AvrFcmStatusPayload\n\nTopic: `avr/fcm/status`\n\nThis reports general status of the flight controller.\n\n- `\"armed\"` (`bool`):\n    Boolean of if the drone is currently armed\n- `\"mode\"` (`str`):\n    Current flight mode, which is one of the following:\n    - 'UNKNOWN'\n    - 'READY'\n    - 'TAKEOFF'\n    - 'HOLD'\n    - 'MISSION'\n    - 'RETURN_TO_LAUNCH'\n    - 'LAND'\n    - 'OFFBOARD'\n    - 'FOLLOW_ME'\n    - 'MANUAL'\n    - 'ALTCTL'\n    - 'POSCTL'\n    - 'ACRO'\n    - 'STABILIZED'\n    - 'RATTITUDE'\n\n#### AvrFcmVelocityPayload\n\nTopic: `avr/fcm/velocity`\n\nThis reports the current velocity vectors of the drone from the flight controller.\n\n- `\"vX\"` (`float`):\n    X velocity in a local North/East/Down coordinate system in meters per second\n- `\"vY\"` (`float`):\n    Y velocity in a local North/East/Down coordinate system in meters per second\n- `\"vZ\"` (`float`):\n    Z velocity in a local North/East/Down coordinate system in meters per second\n\n#### AvrFusionAttitudeEulerPayload\n\nTopic: `avr/fusion/attitude/euler`\n\nThis reports the computed attitude of the drone from our sensor fusion.\n\n- `\"psi\"` (`float`):\n    Roll in radians\n- `\"theta\"` (`float`):\n    Pitch in radians\n- `\"phi\"` (`float`):\n    Yaw in radians\n\n#### AvrFusionAttitudeHeadingPayload\n\nTopic: `avr/fusion/attitude/heading`\n\nThis reports the computed heading of the drone from our sensor fusion.\n\n- `\"heading\"` (`float`):\n    Heading in degrees\n\n#### AvrFusionAttitudeQuatPayload\n\nTopic: `avr/fusion/attitude/quat`\n\nThis reports the computed attitude of the drone from our sensor fusion.\n\n- `\"w\"` (`float`):\n    Quaternion w value\n- `\"x\"` (`float`):\n    Quaternion x value\n- `\"y\"` (`float`):\n    Quaternion y value\n- `\"z\"` (`float`):\n    Quaternion z value\n\n#### AvrFusionClimbratePayload\n\nTopic: `avr/fusion/climbrate`\n\nThis reports the computed rate of climb of the drone from our sensor fusion.\n\n- `\"climb_rate_fps\"` (`float`):\n    Rate of climb in feet per second\n\n#### AvrFusionCoursePayload\n\nTopic: `avr/fusion/course`\n\nThis reports the computed course of the drone from our sensor fusion.\n\n- `\"course\"` (`float`):\n    Course in degrees\n\n#### AvrFusionGeoPayload\n\nTopic: `avr/fusion/geo`\n\nThis reports the computed position of the drone in global coordinates from our sensor fusion.\n\n- `\"lat\"` (`float`):\n    Latitude in degrees\n- `\"lon\"` (`float`):\n    Longitude in degrees\n- `\"alt\"` (`float`):\n    Altitude relative to takeoff altitude in meters\n\n#### AvrFusionGroundspeedPayload\n\nTopic: `avr/fusion/groundspeed`\n\nThis reports the computed groundspeed of the drone from our sensor fusion.\n\n- `\"groundspeed\"` (`float`):\n    Groundspeed of the drone in meters per second. This is a normal vector of the N and E velocities.\n\n#### AvrFusionHilGpsPayload\n\nTopic: `avr/fusion/hil_gps`\n\nThis is the raw data that will get converted to a MAVLink message and sent to the flight controller for HIL GPS. <https://mavlink.io/en/messages/common.html#HIL_GPS>\n\n- `\"time_usec\"` (`int`):\n    UNIX epoch timestamp in microseconds\n- `\"fix_type\"` (`int`):\n    0-1: no fix, 2: 2D fix, 3: 3D fix.\n- `\"lat\"` (`int`):\n    WGS84 Latitude * 10000000\n- `\"lon\"` (`int`):\n    WGS84 Longitude * 10000000\n- `\"alt\"` (`int`):\n    Altitude from sea level in mm. Positive for up.\n- `\"eph\"` (`int`):\n    GPS HDOP horizontal dilution of position\n- `\"epv\"` (`int`):\n    GPS VDOP vertical dilution of position\n- `\"vel\"` (`int`):\n    GPS ground speed in centimeters per second\n- `\"vn\"` (`int`):\n    GPS velocity in north direction in centimeters per second\n- `\"ve\"` (`int`):\n    GPS velocity in east direction in centimeters per second\n- `\"vd\"` (`int`):\n    GPS velocity in down direction in centimeters per second\n- `\"cog\"` (`int`):\n    Course over ground in degrees\n- `\"satellites_visible\"` (`int`):\n    Number of satellites visible. This is hardcoded to 13 for our HIL GPS.\n- `\"heading\"` (`int`):\n    Custom heading field. This is the heading in degrees * 100.\n\n#### AvrFusionPositionNedPayload\n\nTopic: `avr/fusion/position/ned`\n\nThis reports the computed position of the drone in local coordinates from our sensor fusion.\n\n- `\"n\"` (`float`):\n    X position in a local North/East/Down coordinate system in meters\n- `\"e\"` (`float`):\n    Y position in a local North/East/Down coordinate system in meters\n- `\"d\"` (`float`):\n    Z position in a local North/East/Down coordinate system in meters\n\n#### AvrFusionVelocityNedPayload\n\nTopic: `avr/fusion/velocity/ned`\n\nThis reports the computed velocity vectors of the drone from our sensor fusion.\n\n- `\"Vn\"` (`float`):\n    X velocity in a local North/East/Down coordinate system in meters per second\n- `\"Ve\"` (`float`):\n    Y velocity in a local North/East/Down coordinate system in meters per second\n- `\"Vd\"` (`float`):\n    Z velocity in a local North/East/Down coordinate system in meters per second\n\n#### AvrPcmFireLaserPayload\n\nTopic: `avr/pcm/fire_laser`\n\nFires the laser for a 0.25 sec pulse. Has a cooldown of 0.5 sec.\n\nThere is no content for this class\n\n#### AvrPcmSetBaseColorPayload\n\nTopic: `avr/pcm/set_base_color`\n\nThis sets the color of the LED strip on the PCC\n\n- `\"wrgb\"` (`Tuple[int, int, int, int]`):\n    A list of 4 `int`s between 0 and 255 to set the base color of the LEDs. This is in order of White, Red, Green, Blue. Example: [0, 0, 255, 0] would be Green.\n\n#### AvrPcmSetLaserOffPayload\n\nTopic: `avr/pcm/set_laser_off`\n\nTurns off laser (laser off from blip mode - but doesn't prevent fire_laser)\n\nThere is no content for this class\n\n#### AvrPcmSetLaserOnPayload\n\nTopic: `avr/pcm/set_laser_on`\n\nTurns on laser (in blip mode - 0.1 second on every 0.5. sec)\n\nThere is no content for this class\n\n#### AvrPcmSetServoAbsPayload\n\nTopic: `avr/pcm/set_servo_abs`\n\nThis sets the absolute position of a specific servo. SERVOMIN 150 is closed, and SERVOMAX 425 is open. We need to send a High and Low byte due to limitations of the API\n\n- `\"servo\"` (`int`):\n    ID of the servo to set the percent as an `int`. This is 0-indexed.\n- `\"absolute\"` (`int`):\n    Absolute position between SERVOMIN 150 and SERVOMAX 425\n\n#### AvrPcmSetServoMaxPayload\n\nTopic: `avr/pcm/set_servo_max`\n\nThis sets the maximum pulse width of a specific servo.\n\n- `\"servo\"` (`int`):\n    ID of the servo to set the maximum pulse width as an `int`. This is 0-indexed.\n- `\"max_pulse\"` (`int`):\n    A `int` between 0 and 1000.\n\n#### AvrPcmSetServoMinPayload\n\nTopic: `avr/pcm/set_servo_min`\n\nThis sets the minimum pulse width of a specific servo.\n\n- `\"servo\"` (`int`):\n    ID of the servo to set the minimum pulse width as an `int`. This is 0-indexed.\n- `\"min_pulse\"` (`int`):\n    A `int` between 0 and 1000.\n\n#### AvrPcmSetServoOpenClosePayload\n\nTopic: `avr/pcm/set_servo_open_close`\n\nThis opens or closes a specific servo.\n\n- `\"servo\"` (`int`):\n    ID of the servo to open or close as an `int`. This is 0-indexed.\n- `\"action\"` (`Literal[\"open\", \"close\"]`):\n    Either the literal string \"open\" or \"close\".\n\n#### AvrPcmSetServoPctPayload\n\nTopic: `avr/pcm/set_servo_pct`\n\nThis sets the percentage of a specific servo. 0 is closed, and 100 is open.\n\n- `\"servo\"` (`int`):\n    ID of the servo to set the percent as an `int`. This is 0-indexed.\n- `\"percent\"` (`int`):\n    A `int` between 0 and 100.\n\n#### AvrPcmSetTempColorPayload\n\nTopic: `avr/pcm/set_temp_color`\n\nThis sets the color of the LED strip on the PCC temporarily\n\n- `\"wrgb\"` (`Tuple[int, int, int, int]`):\n    A list of 4 `int`s between 0 and 255 to set the base color of the LEDs. This is in order of White, Red, Green, Blue. Example: [0, 0, 255, 0] would be Green.\n- `\"time\"` (`float`):\n    Optional `float` for the number of seconds the color should be set for. Default is 0.5.\n\n#### AvrStatusLightApriltagsPayload\n\nTopic: `avr/status/light/apriltags`\n\nThere is no content for this class\n\n#### AvrStatusLightFcmPayload\n\nTopic: `avr/status/light/fcm`\n\nThere is no content for this class\n\n#### AvrStatusLightPcmPayload\n\nTopic: `avr/status/light/pcm`\n\nThere is no content for this class\n\n#### AvrStatusLightThermalPayload\n\nTopic: `avr/status/light/thermal`\n\nThere is no content for this class\n\n#### AvrStatusLightVioPayload\n\nTopic: `avr/status/light/vio`\n\nThere is no content for this class\n\n#### AvrThermalReadingPayload\n\nTopic: `avr/thermal/reading`\n\nThis publishes data from the thermal camera\n\n- `\"data\"` (`str`):\n    The raw data from the thermal camera are integer values from an 8x8 grid of pixels. This data is then converted into a bytearray and base64 encoded. Any example of how to unpack this data:\n    \n    ```python\n    import base64\n    import json\n    \n    data = json.loads(payload)[\"data\"]\n    base64_decoded = data.encode(\"utf-8\")\n    as_bytes = base64.b64decode(base64_decoded)\n    pixel_ints = list(bytearray(as_bytes))\n    ```\n\n#### AvrVioConfidencePayload\n\nTopic: `avr/vio/confidence`\n\nThis reports the tracking camera's confidence\n\n- `\"tracker\"` (`float`):\n    Number between 0 and 100 of tracking confidence\n\n#### AvrVioHeadingPayload\n\nTopic: `avr/vio/heading`\n\nThis reports the measued heading of the drone from the tracking camera.\n\n- `\"degrees\"` (`float`):\n    Heading in degrees\n\n#### AvrVioOrientationEulPayload\n\nTopic: `avr/vio/orientation/eul`\n\nThis reports the measued attitude of the drone from the tracking camera.\n\n- `\"psi\"` (`float`):\n    Roll in radians\n- `\"theta\"` (`float`):\n    Pitch in radians\n- `\"phi\"` (`float`):\n    Yaw in radians\n\n#### AvrVioOrientationQuatPayload\n\nTopic: `avr/vio/orientation/quat`\n\nThis reports the measued attitude of the drone from the tracking camera.\n\n- `\"w\"` (`float`):\n    Quaternion w value\n- `\"x\"` (`float`):\n    Quaternion x value\n- `\"y\"` (`float`):\n    Quaternion y value\n- `\"z\"` (`float`):\n    Quaternion z value\n\n#### AvrVioPositionNedPayload\n\nTopic: `avr/vio/position/ned`\n\nThis reports the measured position of the drone in local coordinates from the tracking camera.\n\n- `\"n\"` (`float`):\n    X position in a local North/East/Down coordinate system in meters\n- `\"e\"` (`float`):\n    Y position in a local North/East/Down coordinate system in meters\n- `\"d\"` (`float`):\n    Z position in a local North/East/Down coordinate system in meters\n\n#### AvrVioResyncPayload\n\nTopic: `avr/vio/resync`\n\nThis reports significant position differences from the tracking camera, and detected AprilTags at known positions.\n\n- `\"n\"` (`float`):\n    X position difference in a local North/East/Down coordinate system in meters\n- `\"e\"` (`float`):\n    Y position difference in a local North/East/Down coordinate system in meters\n- `\"d\"` (`float`):\n    Z position difference in a local North/East/Down coordinate system in meters\n- `\"heading\"` (`float`):\n    Heading difference in degrees\n\n#### AvrVioVelocityNedPayload\n\nTopic: `avr/vio/velocity/ned`\n\nThis reports the measued velocity vectors of the drone from the tracking camera.\n\n- `\"n\"` (`float`):\n    X velocity in a local North/East/Down coordinate system in meters per second\n- `\"e\"` (`float`):\n    Y velocity in a local North/East/Down coordinate system in meters per second\n- `\"d\"` (`float`):\n    Z velocity in a local North/East/Down coordinate system in meters per second\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bellflight/AVR-Python-Libraries",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bell-avr-libraries",
    "package_url": "https://pypi.org/project/bell-avr-libraries/",
    "platform": null,
    "project_url": "https://pypi.org/project/bell-avr-libraries/",
    "project_urls": {
      "Homepage": "https://github.com/bellflight/AVR-Python-Libraries"
    },
    "release_url": "https://pypi.org/project/bell-avr-libraries/0.1.13/",
    "requires_dist": [
      "loguru (>=0.6.0,<0.7.0)",
      "pyserial (>=3.5,<4.0) ; extra == \"serial\"",
      "paho-mqtt (>=1.6.1,<2.0.0) ; extra == \"mqtt\""
    ],
    "requires_python": ">=3.8,<3.12",
    "summary": "Common Python libraries used by parts of Bell AVR",
    "version": "0.1.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17103958,
  "releases": {
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2e12d2a6b22a757b897043627cc1dee22d0c22b564e912be16458a27f225110",
          "md5": "cb0799cf8614ef68960a7701d1afbb35",
          "sha256": "5514e7ab858699530917852552898a3456717b92cf182d06625327eaae5df8da"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb0799cf8614ef68960a7701d1afbb35",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 21567,
        "upload_time": "2022-11-02T01:41:55",
        "upload_time_iso_8601": "2022-11-02T01:41:55.315072Z",
        "url": "https://files.pythonhosted.org/packages/a2/e1/2d2a6b22a757b897043627cc1dee22d0c22b564e912be16458a27f225110/bell_avr_libraries-0.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac0de90893cc3ebe8662abf90b6e5a1aa1d34af51686117b5369f66b044c173d",
          "md5": "1b0b2c3817300086306936597f6888a3",
          "sha256": "2a9f61ad5d71f5c62b582ad8278c4d40ed47ee38049397eb05928bfda0bcb6a7"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "1b0b2c3817300086306936597f6888a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 27705,
        "upload_time": "2022-11-02T01:41:56",
        "upload_time_iso_8601": "2022-11-02T01:41:56.799519Z",
        "url": "https://files.pythonhosted.org/packages/ac/0d/e90893cc3ebe8662abf90b6e5a1aa1d34af51686117b5369f66b044c173d/bell_avr_libraries-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4afe9639dd118e19444fb651b2bb08430ffe0fd56d46372bfa913a58510c73df",
          "md5": "cc51336826c14d29ce230420b5973df2",
          "sha256": "0aeac7ff3c295818b4db534c91810f75abd99418eedac227f06f12ae9c1c1f30"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc51336826c14d29ce230420b5973df2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.12",
        "size": 21565,
        "upload_time": "2022-11-03T12:13:40",
        "upload_time_iso_8601": "2022-11-03T12:13:40.981618Z",
        "url": "https://files.pythonhosted.org/packages/4a/fe/9639dd118e19444fb651b2bb08430ffe0fd56d46372bfa913a58510c73df/bell_avr_libraries-0.1.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daf5bd0888c1a69f5dbf2dbd8489d721f388900e2dbd4b4013e494fdf0b9b609",
          "md5": "c5038e40f3a4efe30356643ea83b8a9e",
          "sha256": "1e5f80689a722f7046e28a1d4d4360871c1df9e7fd2965aa7b60ae235a83cb24"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "c5038e40f3a4efe30356643ea83b8a9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.12",
        "size": 27711,
        "upload_time": "2022-11-03T12:13:42",
        "upload_time_iso_8601": "2022-11-03T12:13:42.453793Z",
        "url": "https://files.pythonhosted.org/packages/da/f5/bd0888c1a69f5dbf2dbd8489d721f388900e2dbd4b4013e494fdf0b9b609/bell_avr_libraries-0.1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11efdc1e4fa9729db6170563481ae5ffc396c2e0866e8b00ef902acaebda4d3f",
          "md5": "2318d0a41b71a2052501037717b04498",
          "sha256": "67eae622b168b9fee97125d85f638b0381f69d557657605db6215288f197e8ce"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2318d0a41b71a2052501037717b04498",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.12",
        "size": 23315,
        "upload_time": "2022-11-04T13:45:07",
        "upload_time_iso_8601": "2022-11-04T13:45:07.900110Z",
        "url": "https://files.pythonhosted.org/packages/11/ef/dc1e4fa9729db6170563481ae5ffc396c2e0866e8b00ef902acaebda4d3f/bell_avr_libraries-0.1.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "313a6ea45521e98fd74bf7a42fa46344fa751b31e8531841d8f3de91266ed9ff",
          "md5": "2d60758db4ae8fd899ed6768ff3cff1b",
          "sha256": "32924dca40e0b94b6ec0cd7b6bf9e0f9224ae586e2ba164578bf6a7d9e613140"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "2d60758db4ae8fd899ed6768ff3cff1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.12",
        "size": 28729,
        "upload_time": "2022-11-04T13:45:09",
        "upload_time_iso_8601": "2022-11-04T13:45:09.662596Z",
        "url": "https://files.pythonhosted.org/packages/31/3a/6ea45521e98fd74bf7a42fa46344fa751b31e8531841d8f3de91266ed9ff/bell_avr_libraries-0.1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f11f4131469d3c7e5b19ec72c02b46bb3ec19b5bd4807f3ee98a491b1d9292af",
          "md5": "e323d49b95c39e93b157712c83ac2419",
          "sha256": "02db8028b8bad95da415892df51173b8f15dba3410e869fbd904a0ad8679017f"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e323d49b95c39e93b157712c83ac2419",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.12",
        "size": 23323,
        "upload_time": "2023-01-03T22:37:54",
        "upload_time_iso_8601": "2023-01-03T22:37:54.563242Z",
        "url": "https://files.pythonhosted.org/packages/f1/1f/4131469d3c7e5b19ec72c02b46bb3ec19b5bd4807f3ee98a491b1d9292af/bell_avr_libraries-0.1.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4fd7bc450a71819bc8cc87fd1c682b42755dfbb85c3ee75d609f6252680c086e",
          "md5": "7feec2608e09aded2863bc1c481b7b22",
          "sha256": "b7c699e8e72b44be87a85f30229fd75c60145e64438a2acabfb9c2685db1714a"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "7feec2608e09aded2863bc1c481b7b22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.12",
        "size": 28749,
        "upload_time": "2023-01-03T22:37:56",
        "upload_time_iso_8601": "2023-01-03T22:37:56.077820Z",
        "url": "https://files.pythonhosted.org/packages/4f/d7/bc450a71819bc8cc87fd1c682b42755dfbb85c3ee75d609f6252680c086e/bell_avr_libraries-0.1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6f08204b6faeaa774f283d4fe23458f5ae5e91f51e6472ecdcb2ee17d7a6a81",
          "md5": "d550967d74ed658b47f357768aa6b6f7",
          "sha256": "be9c4a3111da638f6b182a7f8a983a6e9d95a9c0363f8307967b5e6154a31e0f"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d550967d74ed658b47f357768aa6b6f7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 18406,
        "upload_time": "2022-06-21T23:31:15",
        "upload_time_iso_8601": "2022-06-21T23:31:15.710293Z",
        "url": "https://files.pythonhosted.org/packages/c6/f0/8204b6faeaa774f283d4fe23458f5ae5e91f51e6472ecdcb2ee17d7a6a81/bell_avr_libraries-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffe32d55dd66f773a48dca91e1ad8ca5d094f76f4ea1fa07c5d9785ad7f04faa",
          "md5": "f6bc141c474b6fdbc472651bd0e75267",
          "sha256": "8977220af491a09941b1dcb1b090cd1b679e2854d34d4bbb495823000b68289f"
        },
        "downloads": -1,
        "filename": "bell-avr-libraries-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f6bc141c474b6fdbc472651bd0e75267",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 22765,
        "upload_time": "2022-06-21T23:31:13",
        "upload_time_iso_8601": "2022-06-21T23:31:13.716585Z",
        "url": "https://files.pythonhosted.org/packages/ff/e3/2d55dd66f773a48dca91e1ad8ca5d094f76f4ea1fa07c5d9785ad7f04faa/bell-avr-libraries-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6bfbda6750a109de891c80f5f7fe5e81021936efe26f113e817ba50410d7f48",
          "md5": "a6b3bbfef9670a5fb8ab6fbceabb1fe2",
          "sha256": "427528271a92599c275cbd92d7bab94dd05b379e27b599ca32e55f3f28dea8ab"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6b3bbfef9670a5fb8ab6fbceabb1fe2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 20321,
        "upload_time": "2022-07-01T19:12:16",
        "upload_time_iso_8601": "2022-07-01T19:12:16.516128Z",
        "url": "https://files.pythonhosted.org/packages/f6/bf/bda6750a109de891c80f5f7fe5e81021936efe26f113e817ba50410d7f48/bell_avr_libraries-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "087d0bb96af38e775ffee4a996143264d47728dacb510c15429a41af6e3665a5",
          "md5": "478154ae57b365affda74a9f30c9cdcd",
          "sha256": "9ff7fd192dd85dde638ab4210e753d6f33f5f430a5e4fbec21564b8b613d8127"
        },
        "downloads": -1,
        "filename": "bell-avr-libraries-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "478154ae57b365affda74a9f30c9cdcd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 26183,
        "upload_time": "2022-07-01T19:12:14",
        "upload_time_iso_8601": "2022-07-01T19:12:14.717235Z",
        "url": "https://files.pythonhosted.org/packages/08/7d/0bb96af38e775ffee4a996143264d47728dacb510c15429a41af6e3665a5/bell-avr-libraries-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8bd74322a7f68a09bb2bb1a62e163a97ce6ff2145d3d9cd94aefae3450ce1ff",
          "md5": "a1093982afb58196a9891d8cd984dd1c",
          "sha256": "dc3bd16043b7fec6811a40027816130b8322a80238411263a974dea44d4c423d"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a1093982afb58196a9891d8cd984dd1c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 20623,
        "upload_time": "2022-07-20T21:28:17",
        "upload_time_iso_8601": "2022-07-20T21:28:17.843801Z",
        "url": "https://files.pythonhosted.org/packages/c8/bd/74322a7f68a09bb2bb1a62e163a97ce6ff2145d3d9cd94aefae3450ce1ff/bell_avr_libraries-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fa9d636174d2a74346100ffcf93970e2183f124e337bb5b2aabcda0543081fa",
          "md5": "15d33167a111bd2e7e4f5f3d597179de",
          "sha256": "f03a0d85738f32f1ca51b0039049444179896e0c702b75264c6fb3a97212c591"
        },
        "downloads": -1,
        "filename": "bell-avr-libraries-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "15d33167a111bd2e7e4f5f3d597179de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 26731,
        "upload_time": "2022-07-20T21:28:15",
        "upload_time_iso_8601": "2022-07-20T21:28:15.987936Z",
        "url": "https://files.pythonhosted.org/packages/8f/a9/d636174d2a74346100ffcf93970e2183f124e337bb5b2aabcda0543081fa/bell-avr-libraries-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d22bb829f64a43552ac6e5a36297f26a3eb42451aee13dcce76fa5aac963a389",
          "md5": "b73cbd022dc492cf7620eee8272c0cb9",
          "sha256": "2ed43aeddc671dd4712d281777939445046be742a0709a6335d12c48d6cb436d"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b73cbd022dc492cf7620eee8272c0cb9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 20667,
        "upload_time": "2022-07-20T23:52:21",
        "upload_time_iso_8601": "2022-07-20T23:52:21.522103Z",
        "url": "https://files.pythonhosted.org/packages/d2/2b/b829f64a43552ac6e5a36297f26a3eb42451aee13dcce76fa5aac963a389/bell_avr_libraries-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "213482de76f7314d81cc48ecdadef892413a2c054d994e8d44e6feedf1041a06",
          "md5": "041580bc5d9f8dbfae64c9875e96fb55",
          "sha256": "303373d9cabc872ccdbc20808da7af1d8138b6d12eed6151679ddf6c6a402e1d"
        },
        "downloads": -1,
        "filename": "bell-avr-libraries-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "041580bc5d9f8dbfae64c9875e96fb55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 26759,
        "upload_time": "2022-07-20T23:52:20",
        "upload_time_iso_8601": "2022-07-20T23:52:20.012991Z",
        "url": "https://files.pythonhosted.org/packages/21/34/82de76f7314d81cc48ecdadef892413a2c054d994e8d44e6feedf1041a06/bell-avr-libraries-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43df6ad4f2219c56c3d1e43db2334cd710aec60acb953bc285c44e1ab6ef6924",
          "md5": "601a35a55ee7ec2a058abeeba32857b4",
          "sha256": "7fc85ec7cf585c6f0fee82117c8fae6d183b892c7919a4ef3ebbe2e940afa0fb"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "601a35a55ee7ec2a058abeeba32857b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 20669,
        "upload_time": "2022-07-21T16:21:40",
        "upload_time_iso_8601": "2022-07-21T16:21:40.521274Z",
        "url": "https://files.pythonhosted.org/packages/43/df/6ad4f2219c56c3d1e43db2334cd710aec60acb953bc285c44e1ab6ef6924/bell_avr_libraries-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dff84dba8d7ba5860a421b6cbe6b7e4b3ca1f54a78a8ba62a056126d7906de4b",
          "md5": "dfc7e49c87d1f83f84a0a747d122706d",
          "sha256": "736fe2b8b7490b380cbbfe31a6e240d142605d43f7f3a4e3ccc183a899cce1dd"
        },
        "downloads": -1,
        "filename": "bell-avr-libraries-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "dfc7e49c87d1f83f84a0a747d122706d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 26756,
        "upload_time": "2022-07-21T16:21:38",
        "upload_time_iso_8601": "2022-07-21T16:21:38.823253Z",
        "url": "https://files.pythonhosted.org/packages/df/f8/4dba8d7ba5860a421b6cbe6b7e4b3ca1f54a78a8ba62a056126d7906de4b/bell-avr-libraries-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0f7467c2865b8a91ccef6ff6af6f9dc37b8534e58e6b0f25578b6712fe0aff0",
          "md5": "42679cb110b140143c3b2a61f3e11a38",
          "sha256": "1c14142d3a5bfc2815f73236e7959cca4b2b236e4703c83b7e0c56df65f5417d"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42679cb110b140143c3b2a61f3e11a38",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 21034,
        "upload_time": "2022-08-02T21:51:41",
        "upload_time_iso_8601": "2022-08-02T21:51:41.124118Z",
        "url": "https://files.pythonhosted.org/packages/c0/f7/467c2865b8a91ccef6ff6af6f9dc37b8534e58e6b0f25578b6712fe0aff0/bell_avr_libraries-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed70da9606e61d61d8033c111f1ff7b20e199fd151e6e8b58fcf49741c8e5a6f",
          "md5": "08e15f11730fb503e94e837166206754",
          "sha256": "bba6997ed1436ae2dad5c5e2618fbf1fc19a7a0721a9a260d8b8f3a20c0b6b05"
        },
        "downloads": -1,
        "filename": "bell-avr-libraries-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "08e15f11730fb503e94e837166206754",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 27315,
        "upload_time": "2022-08-02T21:51:39",
        "upload_time_iso_8601": "2022-08-02T21:51:39.452032Z",
        "url": "https://files.pythonhosted.org/packages/ed/70/da9606e61d61d8033c111f1ff7b20e199fd151e6e8b58fcf49741c8e5a6f/bell-avr-libraries-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e9fbb87814b08bf557fb6a1347525df56c0bb13eb075b1f9a8e3dbcb52b770c",
          "md5": "79e9f6bf3d504243ac0b1d2f2d00cf78",
          "sha256": "7e81f98341cdb50989a6725f2aa2d846df2b8a7849042175bc439e673c72d8b7"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79e9f6bf3d504243ac0b1d2f2d00cf78",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 21278,
        "upload_time": "2022-08-17T23:42:51",
        "upload_time_iso_8601": "2022-08-17T23:42:51.032392Z",
        "url": "https://files.pythonhosted.org/packages/6e/9f/bb87814b08bf557fb6a1347525df56c0bb13eb075b1f9a8e3dbcb52b770c/bell_avr_libraries-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4486c7dbe642b7849745916c367ea8fd144e38c33338b5b8cf10dc44ef3465cd",
          "md5": "120fa1212c28f2b91d58cf9df6565de1",
          "sha256": "f322ad5186c70465a6b8fff8c31896f1982aa3c3848ac56c7f5786d206b95ef8"
        },
        "downloads": -1,
        "filename": "bell-avr-libraries-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "120fa1212c28f2b91d58cf9df6565de1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 27615,
        "upload_time": "2022-08-17T23:42:49",
        "upload_time_iso_8601": "2022-08-17T23:42:49.473546Z",
        "url": "https://files.pythonhosted.org/packages/44/86/c7dbe642b7849745916c367ea8fd144e38c33338b5b8cf10dc44ef3465cd/bell-avr-libraries-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3833efa784bbf552273a69889c8b4e8cb19e3e14c23233347ab3efb49c1f2e1b",
          "md5": "73fa9d493ec511e54eca2a51c2d0d1e0",
          "sha256": "698c37466343138f06430565d56f983d48b3d452f2c6a9aa2a65d5e19fcb460d"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73fa9d493ec511e54eca2a51c2d0d1e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 21195,
        "upload_time": "2022-08-23T00:25:31",
        "upload_time_iso_8601": "2022-08-23T00:25:31.749244Z",
        "url": "https://files.pythonhosted.org/packages/38/33/efa784bbf552273a69889c8b4e8cb19e3e14c23233347ab3efb49c1f2e1b/bell_avr_libraries-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26ed4746bf0805de92bb74316bb3097ae0e642733962794b189ac096a0f65b09",
          "md5": "def82041744f8f384d101afae8542357",
          "sha256": "364f5312e0ff121175a1554ef00c8568e416bfb0403624f10415a8a0c08d2624"
        },
        "downloads": -1,
        "filename": "bell-avr-libraries-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "def82041744f8f384d101afae8542357",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 27486,
        "upload_time": "2022-08-23T00:25:29",
        "upload_time_iso_8601": "2022-08-23T00:25:29.753223Z",
        "url": "https://files.pythonhosted.org/packages/26/ed/4746bf0805de92bb74316bb3097ae0e642733962794b189ac096a0f65b09/bell-avr-libraries-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "843dfa90888c63045f2866186de4516793a7a2b931db1c5d3961244d7be2c6ed",
          "md5": "fed76ab2c9906a9e8664d42b64d98ad6",
          "sha256": "2b0a8b2adfc5100fe14046d09edfcd1e8c32fc8e2b6d360e304e232d72cbc300"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.2.0a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fed76ab2c9906a9e8664d42b64d98ad6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.12",
        "size": 23757,
        "upload_time": "2023-03-01T01:05:28",
        "upload_time_iso_8601": "2023-03-01T01:05:28.471468Z",
        "url": "https://files.pythonhosted.org/packages/84/3d/fa90888c63045f2866186de4516793a7a2b931db1c5d3961244d7be2c6ed/bell_avr_libraries-0.2.0a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3f79a71121709ca6e04366df6f85dd80b7e587fe2df4865a09794315ec46d8d",
          "md5": "7685db60a03e05d66aa343562ab67cb2",
          "sha256": "459d97b8468946e173de951d76548b1044fc73a393bb486426ee16ac9ce3d5aa"
        },
        "downloads": -1,
        "filename": "bell_avr_libraries-0.2.0a0.tar.gz",
        "has_sig": false,
        "md5_digest": "7685db60a03e05d66aa343562ab67cb2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.12",
        "size": 21510,
        "upload_time": "2023-03-01T01:05:29",
        "upload_time_iso_8601": "2023-03-01T01:05:29.698250Z",
        "url": "https://files.pythonhosted.org/packages/e3/f7/9a71121709ca6e04366df6f85dd80b7e587fe2df4865a09794315ec46d8d/bell_avr_libraries-0.2.0a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f11f4131469d3c7e5b19ec72c02b46bb3ec19b5bd4807f3ee98a491b1d9292af",
        "md5": "e323d49b95c39e93b157712c83ac2419",
        "sha256": "02db8028b8bad95da415892df51173b8f15dba3410e869fbd904a0ad8679017f"
      },
      "downloads": -1,
      "filename": "bell_avr_libraries-0.1.13-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e323d49b95c39e93b157712c83ac2419",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<3.12",
      "size": 23323,
      "upload_time": "2023-01-03T22:37:54",
      "upload_time_iso_8601": "2023-01-03T22:37:54.563242Z",
      "url": "https://files.pythonhosted.org/packages/f1/1f/4131469d3c7e5b19ec72c02b46bb3ec19b5bd4807f3ee98a491b1d9292af/bell_avr_libraries-0.1.13-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4fd7bc450a71819bc8cc87fd1c682b42755dfbb85c3ee75d609f6252680c086e",
        "md5": "7feec2608e09aded2863bc1c481b7b22",
        "sha256": "b7c699e8e72b44be87a85f30229fd75c60145e64438a2acabfb9c2685db1714a"
      },
      "downloads": -1,
      "filename": "bell_avr_libraries-0.1.13.tar.gz",
      "has_sig": false,
      "md5_digest": "7feec2608e09aded2863bc1c481b7b22",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<3.12",
      "size": 28749,
      "upload_time": "2023-01-03T22:37:56",
      "upload_time_iso_8601": "2023-01-03T22:37:56.077820Z",
      "url": "https://files.pythonhosted.org/packages/4f/d7/bc450a71819bc8cc87fd1c682b42755dfbb85c3ee75d609f6252680c086e/bell_avr_libraries-0.1.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}