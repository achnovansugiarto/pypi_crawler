{
  "info": {
    "author": "Maciej Kilian",
    "author_email": "kilianmaciej6@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# clip-video-encode\n[![pypi](https://img.shields.io/pypi/v/clip-video-encode.svg)](https://pypi.python.org/pypi/clip-video-encode)\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/rom1504/clip-video-encode/blob/master/notebook/clip-video-encode.ipynb)\n[![Try it on gitpod](https://img.shields.io/badge/try-on%20gitpod-brightgreen.svg)](https://gitpod.io/#https://github.com/rom1504/clip-video-encode)\n\nEasily compute clip embeddings from video frames.\n\n## Install\n\nUsing pip:\n```\npip install clip-video-encode\n```\n\nOr build from source:\n```\npython setup.py install\n```\n\n## Usage \n```\nNAME\n    clip-video-encode - Encode frames using CLIP image encoder\n\nSYNOPSIS\n    clip-video-encode SRC <flags>\n\nDESCRIPTION\n    Input:\n      src:\n        str: path to mp4 file\n        str: youtube link\n        str: path to txt file with multiple mp4's or youtube links\n        list: list with multiple mp4's or youtube links\n      dest:\n        str: directory where to save embeddings to\n        None: dest = src + .npy\n      output_format:\n        str: \"files\" or \"webdataset\"\n      take_every_nth:\n        int: only take every nth frame\n      frame_workers:\n        int: number of Processes to distribute video reading to.\n      frame_memory_size:\n        int: GB of memory for FrameReader.\n      metadata_columns:\n        str: a comma separated list of metadata column names to look for in src\n      use_dst_name:\n        bool: use the save name suggested by video2numpy\n      distribute:\n        str: distribution strategy, currently either slurm or none\n      oc_model_name:\n        str: open_clip model name, used for selecting CLIP architecture\n      pretrained:\n        str: open_clip pretrained weights name\n\nPOSITIONAL ARGUMENTS\n    SRC\n\nFLAGS\n    --dest=DEST\n        Default: ''\n    --output_format=OUTPUT_FORMAT\n        Default: 'files'\n    --take_every_nth=TAKE_EVERY_NTH\n        Default: 1\n    --frame_workers=FRAME_WORKERS\n        Default: 1\n    --frame_memory_size=FRAME_MEMORY_SIZE\n        Default: 4\n    --metadata_columns=METADATA_COLUMNS\n        Default: ''\n    --use_dst_name=USE_DST_NAME\n        Default: False\n    --distribute=DISTRIBUTE\n        Default: 'none'\n    --oc_model_name=OC_MODEL_NAME\n        Default: 'ViT-B-32'\n    --pretrained=PRETRAINED\n        Default: 'laion2b_s34b_b79k'\n```\n\n## API\n\nThis module exposes a single function `clip_video_encode` which takes the same arguments as the command line tool:\n```python\nimport glob\nfrom clip_video_encode import clip_video_encode\n\nVIDS = glob.glob(\"some/path/my_videos/*.mp4\")\nEMBEDDING_DIR = \"some/path/my_embeddings\"\ntake_every_5 = 5\n\nclip_video_encode(VIDS, EMBEDDING_DIR, take_every_5)\n```\n\n## Who is using clip-video-encode?\n* [CLIP-Kinetics700](https://huggingface.co/datasets/iejMac/CLIP-Kinetics700) - The Kinetics700 dataset (700GB) can be compressed to ~8GB using clip-video-encode at 1 FPS\n* [CLIP-WebVid](https://huggingface.co/datasets/iejMac/CLIP-WebVid) - The WebVid dataset (10M videos) encoded as CLIP ViT-B/32 embeddings at 1 FPS.\n\n## Examples\nCheck out some cool clip-video-encode examples:\n* [Thing detector](https://github.com/iejMac/clip-video-encode/tree/main/examples/thing_detector) - Look for things in videos using clip-video-encode generated embeddings.\n* [Large dataset processing](https://github.com/iejMac/clip-video-encode/tree/main/clip_video_encode/dataset) - If you want to process a large dataset (like WebVid) into CLIP embeddings see the example at the bottom of the linked README.md.\n\nSetup a virtualenv:\n\n```\npython3 -m venv .env\nsource .env/bin/activate\npip install -e .\n```\n\nto run tests:\n```\npip install -r requirements-test.txt\n```\nthen \n```\nmake lint\nmake test\n```\n\nYou can use `make black` to reformat the code\n\n`python -m pytest -x -s -v tests -k \"dummy\"` to run a specific test\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/iejMac/clip-video-encode",
    "keywords": "machine learning",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "clip-video-encode",
    "package_url": "https://pypi.org/project/clip-video-encode/",
    "platform": null,
    "project_url": "https://pypi.org/project/clip-video-encode/",
    "project_urls": {
      "Homepage": "https://github.com/iejMac/clip-video-encode"
    },
    "release_url": "https://pypi.org/project/clip-video-encode/1.3.0/",
    "requires_dist": [
      "tqdm (<5,>=4.62.3)",
      "torch (<2,>=1.7.1)",
      "numpy (<2,>=1.19.5)",
      "webdataset (<0.2,>=0.1.103)",
      "fire (<0.5.0,>=0.4.0)",
      "torchvision (<2,>=0.10.1)",
      "open-clip-torch (<3.0.0,>=2.0.0)",
      "ffmpeg",
      "opencv-python",
      "youtube-dl",
      "video2numpy (==2.3.0)",
      "fsspec (==2022.1.0)",
      "pyarrow (<8,>=6.0.1)",
      "pandas (<2,>=1.1.5)"
    ],
    "requires_python": "",
    "summary": "Easily compute clip embeddings from video frames",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15369445,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64354ae95e37ebc6b61da0b317c0475116183704becd1ed87c0de1cd17aaf562",
          "md5": "139c7a8073e6adfd4e4177dcb16179b7",
          "sha256": "a933512653a1596fd7fd3aff614de0c6c0e173fbe999b4d4eceb953bc2d5e0ea"
        },
        "downloads": -1,
        "filename": "clip_video_encode-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "139c7a8073e6adfd4e4177dcb16179b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12766,
        "upload_time": "2022-06-26T14:43:16",
        "upload_time_iso_8601": "2022-06-26T14:43:16.452277Z",
        "url": "https://files.pythonhosted.org/packages/64/35/4ae95e37ebc6b61da0b317c0475116183704becd1ed87c0de1cd17aaf562/clip_video_encode-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c55c7d9b243e9eefb2aca8a609a8575e678dfe2cb53efdaca9aa26670541bfb4",
          "md5": "3bc3ecf13d59863d6e3967fb1625dc9b",
          "sha256": "3213e5e5dad3a6f1c4ae65ed5ef57b4b52d2f1e771ab46773e38d038ba66806e"
        },
        "downloads": -1,
        "filename": "clip-video-encode-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3bc3ecf13d59863d6e3967fb1625dc9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9445,
        "upload_time": "2022-06-26T14:43:18",
        "upload_time_iso_8601": "2022-06-26T14:43:18.488892Z",
        "url": "https://files.pythonhosted.org/packages/c5/5c/7d9b243e9eefb2aca8a609a8575e678dfe2cb53efdaca9aa26670541bfb4/clip-video-encode-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28bc879f8da0157dbbc9af021d1921adac8c61a6f6b856f3d55721a923329117",
          "md5": "603f9dd8a7bb167e4d3c0f00e67a20c8",
          "sha256": "5c8c4dbf4e2c946e1b9dd8d3c149ec2abc5f01e978b6a7ea068eac50b7f03f13"
        },
        "downloads": -1,
        "filename": "clip_video_encode-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "603f9dd8a7bb167e4d3c0f00e67a20c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13452,
        "upload_time": "2022-07-31T20:55:53",
        "upload_time_iso_8601": "2022-07-31T20:55:53.543675Z",
        "url": "https://files.pythonhosted.org/packages/28/bc/879f8da0157dbbc9af021d1921adac8c61a6f6b856f3d55721a923329117/clip_video_encode-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "308a33794748439802d0e8cc13934a0dd59f73c0d47ce52d0e877e325c309a87",
          "md5": "c7e5c304b5693dd795483f99f3cb13e0",
          "sha256": "3abdae5ab12509b7b1ef930928c4f0bd921d6a92843977428668c5f50f1a547b"
        },
        "downloads": -1,
        "filename": "clip-video-encode-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c7e5c304b5693dd795483f99f3cb13e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10570,
        "upload_time": "2022-07-31T20:55:55",
        "upload_time_iso_8601": "2022-07-31T20:55:55.020136Z",
        "url": "https://files.pythonhosted.org/packages/30/8a/33794748439802d0e8cc13934a0dd59f73c0d47ce52d0e877e325c309a87/clip-video-encode-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1fcfac94b82947a52b7e87a40371f95fc70f019a391bd19e82ee8aeff4419e1",
          "md5": "430c45fcbe723f0f0ea6c83a0d60e36c",
          "sha256": "85cf9aeaad9326792b752ee939e9ec05401839d0cce5944989c01818d9b59e57"
        },
        "downloads": -1,
        "filename": "clip_video_encode-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "430c45fcbe723f0f0ea6c83a0d60e36c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15957,
        "upload_time": "2022-08-16T15:58:00",
        "upload_time_iso_8601": "2022-08-16T15:58:00.348201Z",
        "url": "https://files.pythonhosted.org/packages/e1/fc/fac94b82947a52b7e87a40371f95fc70f019a391bd19e82ee8aeff4419e1/clip_video_encode-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c59624c8d5fa7150f7137c7ea55ab350a1b8876f2d0d6ffdca838ee81facda7e",
          "md5": "21c65ce769df45d52976ea81819eab5f",
          "sha256": "c6622135a221ed724d17def0f2a65647098b0d0e02b3fe2ee0cb30518079f93a"
        },
        "downloads": -1,
        "filename": "clip-video-encode-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "21c65ce769df45d52976ea81819eab5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12614,
        "upload_time": "2022-08-16T15:58:01",
        "upload_time_iso_8601": "2022-08-16T15:58:01.446487Z",
        "url": "https://files.pythonhosted.org/packages/c5/96/24c8d5fa7150f7137c7ea55ab350a1b8876f2d0d6ffdca838ee81facda7e/clip-video-encode-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba9e25825587199e90eba2d32da3b3e10c2dd36d2cd592f44e19094763a73305",
          "md5": "52406b55bcbbd66d727c1ddfde8cdfad",
          "sha256": "5f5508eb962046df17dba05e81a87ef7ca45f4c8c86f3b556b8146967cc2e36f"
        },
        "downloads": -1,
        "filename": "clip_video_encode-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52406b55bcbbd66d727c1ddfde8cdfad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17808,
        "upload_time": "2022-10-11T05:31:54",
        "upload_time_iso_8601": "2022-10-11T05:31:54.741827Z",
        "url": "https://files.pythonhosted.org/packages/ba/9e/25825587199e90eba2d32da3b3e10c2dd36d2cd592f44e19094763a73305/clip_video_encode-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0491441f37fc7bcc2da0da0aa8471e9e64c98d11806f2f78cf8766bace7d7413",
          "md5": "4d5c8747be5c3bf4f4ac65b3e39a9d3a",
          "sha256": "62d854d722d436d264d4f4281b2317a4d533695402916ef58d9d5e793f126307"
        },
        "downloads": -1,
        "filename": "clip-video-encode-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4d5c8747be5c3bf4f4ac65b3e39a9d3a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14017,
        "upload_time": "2022-10-11T05:31:56",
        "upload_time_iso_8601": "2022-10-11T05:31:56.205219Z",
        "url": "https://files.pythonhosted.org/packages/04/91/441f37fc7bcc2da0da0aa8471e9e64c98d11806f2f78cf8766bace7d7413/clip-video-encode-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba9e25825587199e90eba2d32da3b3e10c2dd36d2cd592f44e19094763a73305",
        "md5": "52406b55bcbbd66d727c1ddfde8cdfad",
        "sha256": "5f5508eb962046df17dba05e81a87ef7ca45f4c8c86f3b556b8146967cc2e36f"
      },
      "downloads": -1,
      "filename": "clip_video_encode-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "52406b55bcbbd66d727c1ddfde8cdfad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17808,
      "upload_time": "2022-10-11T05:31:54",
      "upload_time_iso_8601": "2022-10-11T05:31:54.741827Z",
      "url": "https://files.pythonhosted.org/packages/ba/9e/25825587199e90eba2d32da3b3e10c2dd36d2cd592f44e19094763a73305/clip_video_encode-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0491441f37fc7bcc2da0da0aa8471e9e64c98d11806f2f78cf8766bace7d7413",
        "md5": "4d5c8747be5c3bf4f4ac65b3e39a9d3a",
        "sha256": "62d854d722d436d264d4f4281b2317a4d533695402916ef58d9d5e793f126307"
      },
      "downloads": -1,
      "filename": "clip-video-encode-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4d5c8747be5c3bf4f4ac65b3e39a9d3a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14017,
      "upload_time": "2022-10-11T05:31:56",
      "upload_time_iso_8601": "2022-10-11T05:31:56.205219Z",
      "url": "https://files.pythonhosted.org/packages/04/91/441f37fc7bcc2da0da0aa8471e9e64c98d11806f2f78cf8766bace7d7413/clip-video-encode-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}