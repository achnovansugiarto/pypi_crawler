{
  "info": {
    "author": "Particular Miner",
    "author_email": "particularminer@fake.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# topn\n\nCython utility functions to be used instead of pandas' `SeriesGroupBy` `nlargest()` function (since [pandas does it so slowly](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.core.groupby.SeriesGroupBy.nlargest.html)).\n\nContains 3 functions:\n1. `awesome_topn()`, \n2. `awesome_hstack_topn()`,\n3. `awesome_hstack()`: (for CSR matrices only; at least twice as fast as `scipy.sparse.hstack` in scipy version 1.6.1)\n\nSee [Short Description](#desc) for details.\n\n\nThis is how it may be done with pandas:\n```python\nimport pandas as pd\nimport numpy as np\n\nr = np.array([0, 1, 2, 1, 2, 3, 2]) \nc = np.array([1, 1, 0, 3, 1, 2, 3]) \nd = np.array([0.3, 0.2, 0.1, 1.0, 0.9, 0.4, 0.6]) \nrcd = pd.DataFrame({'r': r, 'c': c, 'd': d})\nrcd\n```\n\n\n\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>r</th>\n      <th>c</th>\n      <th>d</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0.3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0</td>\n      <td>0.1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>3</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>1</td>\n      <td>0.9</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3</td>\n      <td>2</td>\n      <td>0.4</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2</td>\n      <td>3</td>\n      <td>0.6</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\nntop = 2\n```\n\n\n```python\nrcd.set_index('c').groupby('r')['d'].nlargest(ntop).reset_index().sort_values(['r', 'd'], ascending = [True, False])\n```\n\n\n\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>r</th>\n      <th>c</th>\n      <th>d</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0.3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>3</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>1</td>\n      <td>0.9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>3</td>\n      <td>0.6</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3</td>\n      <td>2</td>\n      <td>0.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n## Usage\n```python\nfrom topn import awesome_topn\n\no_r, o_c, o_d = awesome_topn(r, c, d, ntop, n_jobs=7)\npd.DataFrame({'r': o_r, 'c': o_c, 'd': o_d})\n```\n\n\n\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>r</th>\n      <th>c</th>\n      <th>d</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0.3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>3</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>1</td>\n      <td>0.9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>3</td>\n      <td>0.6</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3</td>\n      <td>2</td>\n      <td>0.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\nAlternatively, if one had a matrix encoding the above data:\n\n```python\nfrom scipy.sparse import csr_matrix \n\ncsr = csr_matrix((d, (r, c)), shape=(4, 4))\n```\n\nthen one could use the function `awesome_hstack_topn()` instead:\n```python\nfrom topn import awesome_hstack_topn \n\ntopn_matrix = awesome_hstack_topn([csr], ntop=ntop)\no_r, o_c = topn_matrix.nonzero()\no_d = topn_matrix.data\npd.DataFrame({'r': o_r, 'c': o_c, 'd': o_d})\n```\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>r</th>\n      <th>c</th>\n      <th>d</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0.3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>3</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>1</td>\n      <td>0.9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>3</td>\n      <td>0.6</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3</td>\n      <td>2</td>\n      <td>0.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n## Short Description <a name=\"desc\"></a>\nContains 3 functions:\n1. `awesome_topn()`, \n2. `awesome_hstack_topn()`,\n3. `awesome_hstack()`\n\n```python\ndef awesome_topn(r, c, d, ntop, n_rows=-1, n_jobs=1):\n    \"\"\"\n    r, c, and d are 1D numpy arrays all of the same length N. \n    This function will return arrays rn, cn, and dn of length n <= N such\n    that the set of triples {(rn[i], cn[i], dn[i]) : 0 < i < n} is a subset of \n    {(r[j], c[j], d[j]) : 0 < j < N} and that for every distinct value \n    x = rn[i], dn[i] is among the first ntop existing largest d[j]'s whose \n    r[j] = x.\n\n    Input:\n        r and c: two 1D integer arrays of the same length\n        d: 1D array of single or double precision floating point type of the\n        same length as r or c\n        ntop maximum number of maximum d's returned\n        n_rows: an int. If > -1 it will replace output rn with Rn the\n            index pointer array for the compressed sparse row (CSR) matrix\n            whose elements are {C[rn[i], cn[i]] = dn: 0 < i < n}.  This matrix\n            will have its number of rows = n_rows.  Thus the length of Rn is\n            n_rows + 1\n        n_jobs: number of threads, must be >= 1\n\n    Output:\n        (rn, cn, dn) where rn, cn, dn are all arrays as described above, or\n        (Rn, cn, dn) where Rn is described above\n        \n    \"\"\"\n\n\ndef awesome_hstack_topn(blocks, ntop, sort=True, use_threads=False, n_jobs=1):\n    \"\"\"\n    Returns, in CSR format, the matrix formed by horizontally stacking the\n    sequence of CSR matrices in parameter 'blocks', with only the largest ntop\n    elements of each row returned.  Also, each row will be sorted in\n    descending order only when \n        ntop < total number of columns in blocks or sort=True,\n    otherwise the rows will be unsorted.\n    \n    :param blocks: list of CSR matrices to be stacked horizontally.\n    :param ntop: int. The maximum number of elements to be returned for\n        each row.\n    :param sort: bool. Each row of the returned matrix will be sorted in\n        descending order only when ntop < total number of columns in blocks\n        or sort=True, otherwise the rows will be unsorted.\n    :param use_threads: bool. Will use the multi-threaded versions of this\n        routine if True otherwise the single threaded version will be used.\n        In multi-core systems setting this to True can lead to acceleration.\n    :param n_jobs: int. When use_threads=True, denotes the number of threads\n        that are to be spawned by the multi-threaded routines. Recommended\n        value is number of cores minus one.\n\n    Output:\n        (scipy.sparse.csr_matrix) matrix in CSR format \n    \"\"\"\n\n\ndef awesome_hstack(blocks, use_threads=False, n_jobs=1):\n    \"\"\"\n    Returns, in CSR format, the matrix formed by horizontally stacking the\n    sequence of CSR matrices in parameter blocks.\n    \n    :param blocks: list of CSR matrices to be stacked horizontally.\n    :param use_threads: bool. Will use the multi-threaded versions of this\n        routine if True otherwise the single threaded version will be used.\n        In multi-core systems setting this to True can lead to acceleration.\n    :param n_jobs: int. When use_threads=True, denotes the number of threads\n        that are to be spawned by the multi-threaded routines. Recommended\n        value is number of cores minus one.\n\n    Output:\n        (scipy.sparse.csr_matrix) matrix in CSR format \n    \"\"\"\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/ParticularMiner/topn/archive/refs/tags/v0.0.7.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ParticularMiner/topn",
    "keywords": "nlargest hstack csr csc scipy cython",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "topn",
    "package_url": "https://pypi.org/project/topn/",
    "platform": "",
    "project_url": "https://pypi.org/project/topn/",
    "project_urls": {
      "Download": "https://github.com/ParticularMiner/topn/archive/refs/tags/v0.0.7.tar.gz",
      "Homepage": "https://github.com/ParticularMiner/topn"
    },
    "release_url": "https://pypi.org/project/topn/0.0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This package boosts a group-wise nlargest sort",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11619264,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ac1a154a86f8fe4365207a1ff043655e14c07749eb2887616af8c0dabd821c9",
          "md5": "6291d64495574e87770f0c18d1cd38b5",
          "sha256": "594a5e62aa491863281e1bb664ad3b1af9bad7956311bc7911fb86a48fd63300"
        },
        "downloads": -1,
        "filename": "topn-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6291d64495574e87770f0c18d1cd38b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6369,
        "upload_time": "2021-09-12T16:01:10",
        "upload_time_iso_8601": "2021-09-12T16:01:10.250682Z",
        "url": "https://files.pythonhosted.org/packages/9a/c1/a154a86f8fe4365207a1ff043655e14c07749eb2887616af8c0dabd821c9/topn-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81a02abb731694237815e3457810f69175d7db432f9d6fe7d593f4b89b927e75",
          "md5": "93f8508799ba01302890052b47d08395",
          "sha256": "95c4e609356913846d80face1079c4e0a65725a64657edf9e399d7565734d488"
        },
        "downloads": -1,
        "filename": "topn-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "93f8508799ba01302890052b47d08395",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7800,
        "upload_time": "2021-09-13T19:31:43",
        "upload_time_iso_8601": "2021-09-13T19:31:43.996095Z",
        "url": "https://files.pythonhosted.org/packages/81/a0/2abb731694237815e3457810f69175d7db432f9d6fe7d593f4b89b927e75/topn-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05be921ada9fa7dd1fbc0648de9cd4d0f08587186a84ac03cc94d5b3a4f6f0e3",
          "md5": "24ec5294006c9d8a5ab39ef40b69c616",
          "sha256": "5684fe957fa7a146fb32100a91206aba14dbe10d39211b01595492f252196dda"
        },
        "downloads": -1,
        "filename": "topn-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "24ec5294006c9d8a5ab39ef40b69c616",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8321,
        "upload_time": "2021-09-20T15:19:47",
        "upload_time_iso_8601": "2021-09-20T15:19:47.429513Z",
        "url": "https://files.pythonhosted.org/packages/05/be/921ada9fa7dd1fbc0648de9cd4d0f08587186a84ac03cc94d5b3a4f6f0e3/topn-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ef5a837cd85a9662b5ef808b5627d9eb4e368ceeae46616b96d8b3877f9ddb1",
          "md5": "dec239145fd1705316219e59ae58fc7c",
          "sha256": "f7208146c9d1c4780c869baabd88211ad0914e4153b92d8ee9b3d4689af6adbe"
        },
        "downloads": -1,
        "filename": "topn-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "dec239145fd1705316219e59ae58fc7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9028,
        "upload_time": "2021-09-22T07:40:33",
        "upload_time_iso_8601": "2021-09-22T07:40:33.775289Z",
        "url": "https://files.pythonhosted.org/packages/3e/f5/a837cd85a9662b5ef808b5627d9eb4e368ceeae46616b96d8b3877f9ddb1/topn-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a19403f5ea84eb08034aaa562a900edb5b4edc2b1ef996c4933f15db5833d7f5",
          "md5": "841b77a08c72e2dae02f7b42652ec0ca",
          "sha256": "81a1a1c9c0e951d3211a2311f6b0521bf04a6e8dd9c5e6d86e9fea24a1410d26"
        },
        "downloads": -1,
        "filename": "topn-0.0.4.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "841b77a08c72e2dae02f7b42652ec0ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9052,
        "upload_time": "2021-09-24T08:04:36",
        "upload_time_iso_8601": "2021-09-24T08:04:36.242484Z",
        "url": "https://files.pythonhosted.org/packages/a1/94/03f5ea84eb08034aaa562a900edb5b4edc2b1ef996c4933f15db5833d7f5/topn-0.0.4.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "175f8cb30d35a3906c0b3eefebe060f35eb467beb56873bff06568e0fe63eb0d",
          "md5": "cf84c650ac9d5890280d4e86aa2c26d2",
          "sha256": "b72b8b521cf810b0e145d9a10507d7322eec8d2235e8a02fc2b121e384682382"
        },
        "downloads": -1,
        "filename": "topn-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "cf84c650ac9d5890280d4e86aa2c26d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11443,
        "upload_time": "2021-10-01T19:56:57",
        "upload_time_iso_8601": "2021-10-01T19:56:57.270002Z",
        "url": "https://files.pythonhosted.org/packages/17/5f/8cb30d35a3906c0b3eefebe060f35eb467beb56873bff06568e0fe63eb0d/topn-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b1ce3cb563eb7e11b6e0c06bc0fe506d69768ccd39cba4fa1b6a0ba95ff922f",
          "md5": "25fd20c60b7a4d3a9d5095600c8757d1",
          "sha256": "8b66a2e394ec19d44366ff68abc2a14c997771a0f2fac4459f6169c36c65c587"
        },
        "downloads": -1,
        "filename": "topn-0.0.5.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "25fd20c60b7a4d3a9d5095600c8757d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11462,
        "upload_time": "2021-10-01T22:26:08",
        "upload_time_iso_8601": "2021-10-01T22:26:08.917446Z",
        "url": "https://files.pythonhosted.org/packages/8b/1c/e3cb563eb7e11b6e0c06bc0fe506d69768ccd39cba4fa1b6a0ba95ff922f/topn-0.0.5.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26ae69347efe1583a8c9816e1b9acfba9297c29e10194dfdcf71ce78b8d1b521",
          "md5": "30f618f1c032a41e81548511ca7a6f8a",
          "sha256": "a449fd47663132b2de536e32c131338165472f9384b722cc903ac91a2cfebff7"
        },
        "downloads": -1,
        "filename": "topn-0.0.5.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "30f618f1c032a41e81548511ca7a6f8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11480,
        "upload_time": "2021-10-01T23:11:41",
        "upload_time_iso_8601": "2021-10-01T23:11:41.181011Z",
        "url": "https://files.pythonhosted.org/packages/26/ae/69347efe1583a8c9816e1b9acfba9297c29e10194dfdcf71ce78b8d1b521/topn-0.0.5.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70fce61cd934451c3fb96ef65367610c2cde68dd1dba4fcc7add61d758473382",
          "md5": "0217dedc93e5c52ebe664da92b617959",
          "sha256": "2a81e00dd011e8ef0b48a6877361fb575f27185ffe61acbc07e5661d122acb0b"
        },
        "downloads": -1,
        "filename": "topn-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0217dedc93e5c52ebe664da92b617959",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12471,
        "upload_time": "2021-10-02T19:46:10",
        "upload_time_iso_8601": "2021-10-02T19:46:10.524010Z",
        "url": "https://files.pythonhosted.org/packages/70/fc/e61cd934451c3fb96ef65367610c2cde68dd1dba4fcc7add61d758473382/topn-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "175aeada76993afe61ab9bceec745320c06103196f1f16687e8e79b55217eb08",
          "md5": "0e44af0abc4cbf404c4056c436895716",
          "sha256": "67b4494d14aa940002471505c5dc59b4ed01bbe81a933ace6cf2338410c2e33c"
        },
        "downloads": -1,
        "filename": "topn-0.0.6.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e44af0abc4cbf404c4056c436895716",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14007,
        "upload_time": "2021-10-03T12:53:50",
        "upload_time_iso_8601": "2021-10-03T12:53:50.491876Z",
        "url": "https://files.pythonhosted.org/packages/17/5a/eada76993afe61ab9bceec745320c06103196f1f16687e8e79b55217eb08/topn-0.0.6.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "670682733b9a88ad6120dca0b88045909211654aaeb882804730a6dfe804966c",
          "md5": "f5f0be2b5e282d3fb24502cabd124ed5",
          "sha256": "cb1a288f106f81aa076a58c52820384928b46c03160f5f1dfb94f5960f30c605"
        },
        "downloads": -1,
        "filename": "topn-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f5f0be2b5e282d3fb24502cabd124ed5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14387,
        "upload_time": "2021-10-03T23:10:19",
        "upload_time_iso_8601": "2021-10-03T23:10:19.407211Z",
        "url": "https://files.pythonhosted.org/packages/67/06/82733b9a88ad6120dca0b88045909211654aaeb882804730a6dfe804966c/topn-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "670682733b9a88ad6120dca0b88045909211654aaeb882804730a6dfe804966c",
        "md5": "f5f0be2b5e282d3fb24502cabd124ed5",
        "sha256": "cb1a288f106f81aa076a58c52820384928b46c03160f5f1dfb94f5960f30c605"
      },
      "downloads": -1,
      "filename": "topn-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "f5f0be2b5e282d3fb24502cabd124ed5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14387,
      "upload_time": "2021-10-03T23:10:19",
      "upload_time_iso_8601": "2021-10-03T23:10:19.407211Z",
      "url": "https://files.pythonhosted.org/packages/67/06/82733b9a88ad6120dca0b88045909211654aaeb882804730a6dfe804966c/topn-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}