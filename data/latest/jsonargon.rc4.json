{
  "info": {
    "author": "Federico Pugliese",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# JSON Argon\n\nhttps://gitlab.com/federico_pugliese/jsonargon\n\n**Serialization** and **deserialization** of **JSON** objects from/into **Python** objects (with **validation** and **remapping** capabilities).\n\nThe underlying idea is to **annotate** a Python **Class** with metadata useful to serialize its objects into JSON strings and viceversa.\n\nMain features and goals are:\n\n- Concision\n- JSON Validation\n- Optional remapping of fields name\n- Familiar interface\n\n## Installation\n\nTo get the latest stable version, just run\n\n```\npip install jsonargon\n```\n\nor\n\n```\npip install jsonargon==<version>\n```\n\nif you require a specific version.\n\n## Usage\n\n### Basic Usage\n\nThe basic requirement is to write the Python Class remapping your JSON.\n\n```\nfrom jsonargon.decorators import jsonclass\nfrom jsonargon.fields.simple import Required, Nullable\n\n@jsonclass\nclass Person:\n    \n    name: Required(str)\n    age:  Nullable(int)\n    \n```\n\nAs simple as that. The `name` field is a required string, while the `age` is a non-required integer.\n\nThe `Required` type annotation will make sure that `name` is in your JSON string before deserializing it (a `KeyError` is thrown otherwise).\n\nIf you have your JSON string, you can easily remap it into a Python object of that class, after you get your JSON string somehow (probably something like `{\"name\": \"Jason Argonaut\"}`):\n```\nperson = Person.from_json(your_json_string)\n```\n```\nprint(person.name)  # Jason Argonaut\nprint(person.age)   # None\n```\n\nYou can also serialize your object into a JSON string.\n\n```\nperson_json_string = person.to_json()\n```\n\n### Advanced usage\n\nJSON Argon also supports:\n\n- Nested objects\n- Lists and Dictionaries\n- JSON-Python names remapping\n\n#### Fields\n\nEach field annotation support these parameters:\n\n```\n<field>(type: Any, json_name: str = None)\n```\n\n- `type` is a simple type like `str`, `int`, `float` or a Class\n- `json_name` is an *optional* string representing the corresponding name in JSON\n\n\n| Field  | Meaning | JSON |\n|---|---|---|\n| `Required` | A required, simple attribute  | `\"name\": \"Jason\"`  |\n| `Nullable`  | A nullable (`None`) simple attribute | As above, or `\"name\": null` or no attribute at all |\n| `RequiredList`  | A required (but maybe empty) list of objects of the specified `type` | `\"names\": [\"Argo\", \"Atalanta\"]`, or `\"names\": []` or `\"crew\": [{\"name\": \"Argo\"}, {\"name\": \"Atalanta\"}]` |\n| `NullableList`  | A nullable list of objects of the specified `type` | As above, or `\"names\": null` or no attribute at all |\n| `RequiredStringDict`  | A required (but maybe empty) dict of string -> objects of the specified `type` | `\"tags\": {\"scope\": \"dev\"}`, or `\"tags\": {}` or `\"documents\": {\"name\": {\"length\":12}}` |\n| `NullableStringDict`  | A required (but maybe empty) list of objects of the specified `type` | As above, or `\"tags\": null` or no attribute at all |\n\nYou can find a complete example here (with the JSON below):\n\n```\nfrom jsonargon.decorators import jsonclass\nfrom jsonargon.fields.simple import Required, Nullable\nfrom jsonargon.fields.dict import RequiredStringDict\nfrom jsonargon.fields.list import RequiredList\n\n@jsonclass\nclass Size:\n    \n    length: Required(float)\n    width:  Required(float)\n    height: Nullable(float, \"heigth\")  # Correct a JSON typo\n\n\n@jsonclass\nclass Member:\n\n    name: Required(str)\n    role: Nullable(str)\n    \n\n@jsonclass\nclass Ship:\n    \n    name: Required(str, \"shipName\")\n    size: Required(Size)\n    crew: RequiredList(Member, \"members\")\n    attributes: RequiredStringDict(str)\n\n```\n\nTo remap:\n```\n{\n    \"shipName\": \"Argo\",\n    \"size\": {\n        \"width\": 45.4,\n        \"length\": 34.2\n    },\n    \"members\": [\n        {\n            \"name\": \"Atalanta\"\n        },\n        {   \n            \"name\": \"Jason\",\n            \"role\": \"leader\"\n        }\n    ]\n    \"attributes\": {\n        \"rarity\": \"mythological\",\n        \"status\": \"destroyed\"\n    }\n}\n\n```\n\n\n## Origin of the name\n\nThere are several reasons behind the name of this library.\n\nFirst of all, in Greek mythology, Jason was the leader of Argonauts.\n\nJason is quite similar to JSON pronunciation. He was the hero who defeated the monstrous dragon (often depicted as a giant snake - a clear reference to Python) that guarded the Golden Fleece. \n\nAlso, his ship was Argo, and the Argonauts his crew.\n\nArgon, instead, is a noble gas. And with the same Class and style of a noble, this library aims to make you write a much cleaner code when dealing with JSON.\n\n*Make Jason proud of your code and join his crew of Argonauts.*",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/federico_pugliese/jsonargon",
    "keywords": "",
    "license": "Apache Software License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jsonargon",
    "package_url": "https://pypi.org/project/jsonargon/",
    "platform": "",
    "project_url": "https://pypi.org/project/jsonargon/",
    "project_urls": {
      "Homepage": "https://gitlab.com/federico_pugliese/jsonargon"
    },
    "release_url": "https://pypi.org/project/jsonargon/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Serialization and deserialization of JSON objects from/into Python objects (with validation and remapping capabilities)",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10516600,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4db440833a6ef372a135fd0b6ef755a968d5f302d64eea9d9af74d0fe8758fa0",
          "md5": "646e61e6ad47522ad0dafb24de0f8f22",
          "sha256": "6f1044e9ea43667e768c27f7043bf71a9c9377dcc3c28a48084e935056de8728"
        },
        "downloads": -1,
        "filename": "jsonargon-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "646e61e6ad47522ad0dafb24de0f8f22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3203,
        "upload_time": "2021-05-28T18:00:36",
        "upload_time_iso_8601": "2021-05-28T18:00:36.664708Z",
        "url": "https://files.pythonhosted.org/packages/4d/b4/40833a6ef372a135fd0b6ef755a968d5f302d64eea9d9af74d0fe8758fa0/jsonargon-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04e2e569dc1afb11183f3bf89ba267417573bd146d1c03b5023d8236f655a5b1",
          "md5": "1fc615f661f5c4478aa3eff49880e133",
          "sha256": "057871c5188b552deb331dbc68f307a2c4d8a27f653320bac98fe732ef9ea7e0"
        },
        "downloads": -1,
        "filename": "jsonargon-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1fc615f661f5c4478aa3eff49880e133",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5594,
        "upload_time": "2021-05-28T19:53:00",
        "upload_time_iso_8601": "2021-05-28T19:53:00.853611Z",
        "url": "https://files.pythonhosted.org/packages/04/e2/e569dc1afb11183f3bf89ba267417573bd146d1c03b5023d8236f655a5b1/jsonargon-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d41540f4ec7f6b452901494fcf736240088e2384d0181570554ca9db1b223bef",
          "md5": "19bc2d37a4bf0ea39f12b95e54d7f9f1",
          "sha256": "171f0d812fad09e461ddb0f08153b12a71369adf4a8823c7bda94f7e104f3441"
        },
        "downloads": -1,
        "filename": "jsonargon-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "19bc2d37a4bf0ea39f12b95e54d7f9f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9479,
        "upload_time": "2021-05-31T08:16:04",
        "upload_time_iso_8601": "2021-05-31T08:16:04.039714Z",
        "url": "https://files.pythonhosted.org/packages/d4/15/40f4ec7f6b452901494fcf736240088e2384d0181570554ca9db1b223bef/jsonargon-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56625e790dd6e2456fdb381a2d43069d9e04dc47afc718308bfdc1817848759f",
          "md5": "298510fbbaf93f55bbb1c6ebf278d935",
          "sha256": "9bcb2852dc952a708f42d2f34942a5048d58156855725b8c6917e253b5b3a04e"
        },
        "downloads": -1,
        "filename": "jsonargon-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "298510fbbaf93f55bbb1c6ebf278d935",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9525,
        "upload_time": "2021-05-31T08:19:30",
        "upload_time_iso_8601": "2021-05-31T08:19:30.071114Z",
        "url": "https://files.pythonhosted.org/packages/56/62/5e790dd6e2456fdb381a2d43069d9e04dc47afc718308bfdc1817848759f/jsonargon-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56625e790dd6e2456fdb381a2d43069d9e04dc47afc718308bfdc1817848759f",
        "md5": "298510fbbaf93f55bbb1c6ebf278d935",
        "sha256": "9bcb2852dc952a708f42d2f34942a5048d58156855725b8c6917e253b5b3a04e"
      },
      "downloads": -1,
      "filename": "jsonargon-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "298510fbbaf93f55bbb1c6ebf278d935",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9525,
      "upload_time": "2021-05-31T08:19:30",
      "upload_time_iso_8601": "2021-05-31T08:19:30.071114Z",
      "url": "https://files.pythonhosted.org/packages/56/62/5e790dd6e2456fdb381a2d43069d9e04dc47afc718308bfdc1817848759f/jsonargon-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}