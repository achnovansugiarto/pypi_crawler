{
  "info": {
    "author": "CG Wire",
    "author_email": "roy_nieterau@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Multimedia :: Graphics"
    ],
    "description": "Qtazu\n=====\n\nPython Qt widgets for `CG-Wire <https://www.cg-wire.com/>`__ using\n```gazu`` <https://github.com/cgwire/gazu>`__.\n\nDependencies\n------------\n\nThis requires `Gazu <https://github.com/cgwire/gazu>`__ and\n`Qt.py <https://github.com/mottosso/Qt.py>`__.\n\nWhat is Qtazu?\n--------------\n\n*Qtazu* implements Qt widgets to connect and work with a CG-Wire\ninstance through an interface running in Python.\n\n-  Reusable components to develop your own interfaces to interact with\n   CG-Wire.\n-  Embeddable in DCCs supporting Python and Qt\n-  *Or* use them in your own standalone Python application, like a\n   studio pipeline.\n-  Agnostic widgets so you can easily instantiate them as you need\n-  Support PyQt5, PySide2, PyQt4 and PySide through\n   ```Qt.py`` <https://github.com/mottosso/Qt.py>`__\n\n**WIP**: *This is a WIP repository*\n\nExamples\n--------\n\nThe Widgets initialize in such a way you can easily embed them for your\nneeds.\n\n*The examples assume a running Qt application instance exists.*\n\nLogging in\n~~~~~~~~~~\n\n.. figure:: https://user-images.githubusercontent.com/2439881/70457311-3ab92580-1ab0-11ea-817f-97b43d749923.png\n   :alt: qtazu\\_login\n\n   qtazu\\_login\n\n.. code:: python\n\n    from qtazu.widgets.login import Login\n\n    widget = Login()\n    widget.show()\n\nIf you want to set your CG-Wire instance URL so the User doesn't have to\nyou can set it through environment variable: ``CGWIRE_HOST``\n\n.. code:: python\n\n    from qtazu.widgets.login import Login\n    import os\n\n    os.environ[\"CGWIRE_HOST\"] = \"https://zou-server-url/api\"\n    widget = Login()\n    widget.show()\n\nDirectly trigger a callback once someone has logged in using Qt signals:\n\n.. code:: python\n\n    from qtazu.widgets.login import Login\n\n    def callback(success):\n        print(\"Did login succeed? Answer: %s\" % success)\n\n    widget = Login()\n    widget.logged_in.connect(callback)\n    widget.show()\n\nYou can also automate a `login through\n``gazu`` <https://github.com/cgwire/gazu#quickstart>`__ and ``qtazu``\nwill use it.\n\nOr if you have logged in through another Python process you can pass on\nthe tokens:\n\n.. code:: python\n\n    import os\n    import json\n\n    # Store CGWIRE_TOKENS for application (simplified for example)\n    os.environ[\"CGWIRE_TOKENS\"] = json.dumps(gazu.client.tokens)\n    os.environ[\"CGWIRE_HOST\"] = host\n\n\n    # In application \"log-in\" using the tokens\n    host = os.environ[\"CGWIRE_HOST\"]\n    tokens = json.loads(os.environ[\"CGWIRE_TOKENS\"])\n    gazu.client.set_host(host)\n    gazu.client.set_tokens(tokens)\n\nSubmitting Comments\n~~~~~~~~~~~~~~~~~~~\n\nYou can easily submit comments for a specific Task, this includes drag\n'n' dropping your own images of videos as attachment or using a Screen\nMarguee tool to attach a screenshot to your comment.\n\n*Make sure you are logged in prior to this.*\n\n.. code:: python\n\n    from qtazu.widgets.comment import CommentWidget\n\n    task_id = \"xyz\" # Make sure to set a valid Task Id\n    widget = CommentWidget(task_id=task_id)\n    widget.show()\n\n.. figure:: https://user-images.githubusercontent.com/2439881/70453939-ec088d00-1aa9-11ea-876b-38747ee16b13.gif\n   :alt: qtazu\\_comment\\_screenshot\n\n   qtazu\\_comment\\_screenshot\n\nDisplay all Persons with Thumbnails\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt's easy and quick to embed the available Persons into your own list\nview.\n\n.. figure:: https://user-images.githubusercontent.com/2439881/70457319-3bea5280-1ab0-11ea-97b9-46c1388eb452.png\n   :alt: qtazu\\_persons\\_model\n\n   qtazu\\_persons\\_model\n\n.. code:: python\n\n    from qtazu.models.persons import PersonModel\n    from Qt import QtWidgets, QtCore\n\n    model = PersonModel()\n    view = QtWidgets.QListView()\n    view.setIconSize(QtCore.QSize(30, 30))\n    view.setStyleSheet(\"QListView::item { margin: 3px; padding: 3px;}\")\n    view.setModel(model)\n    view.setMinimumHeight(60)\n    view.setWindowTitle(\"CG-Wire Persons\")\n    view.show()\n\nHere's an example prototype of listing Persons as you tag them:\n\n.. figure:: https://user-images.githubusercontent.com/2439881/70454197-57525f00-1aaa-11ea-8a07-85e4b16cf12d.gif\n   :alt: qtazu\\_tag\\_prototype\\_02\n\n   qtazu\\_tag\\_prototype\\_02\n\nDefine your own Qt widget that loads Thumbnails in the background\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis will show all CG-Wire projects as thumbnails.\n\n.. figure:: https://user-images.githubusercontent.com/2439881/70457323-3db41600-1ab0-11ea-9488-720370a0f757.png\n   :alt: qtazu\\_projects\n\n   qtazu\\_projects\n\n.. code:: python\n\n    import gazu\n    from Qt import QtWidgets\n    from qtazu.widgets.thumbnail import ThumbnailBase\n\n    main = QtWidgets.QWidget()\n    main.setWindowTitle(\"CG-Wire Projects\")\n    layout = QtWidgets.QHBoxLayout(main)\n\n    for project in gazu.project.all_open_projects():\n       \n        thumbnail = ThumbnailBase()\n        thumbnail.setFixedWidth(75)\n        thumbnail.setFixedHeight(75)\n        thumbnail.setToolTip(project[\"name\"])\n        project_id = project[\"id\"]\n        thumbnail.load(\"pictures/thumbnails/projects/{0}.png\".format(project_id))\n        layout.addWidget(thumbnail)\n        \n    main.show()\n\nWelcome a User with a message\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nShow a Welcome popup to the user with his or her thumbnail.\n\n.. figure:: https://user-images.githubusercontent.com/2439881/70457328-3e4cac80-1ab0-11ea-9b4f-6ceccf2183d0.png\n   :alt: qtazu\\_welcome\\_popup\n\n   qtazu\\_welcome\\_popup\n\n.. code:: python\n\n    from Qt import QtWidgets, QtGui, QtCore\n    from qtazu.widgets.thumbnail import ThumbnailBase\n    import gazu\n\n\n    class UserPopup(QtWidgets.QWidget):\n        \"\"\"Pop-up showing 'welcome user' and user thumbnail\"\"\"\n        def __init__(self, parent=None, user=None):\n            super(UserPopup, self).__init__(parent=parent)\n        \n            layout = QtWidgets.QHBoxLayout(self)\n       \n            thumbnail = ThumbnailBase()\n            thumbnail.setFixedWidth(75)\n            thumbnail.setFixedHeight(75)\n            thumbnail.setToolTip(user[\"first_name\"])\n            \n            welcome = QtWidgets.QLabel(\"Welcome!\")\n            \n            layout.addWidget(thumbnail)\n            layout.addWidget(welcome)\n        \n            self.thumbnail = thumbnail\n            self.welcome = welcome\n            self._user = None\n            \n            if user:\n                self.set_user(user)\n        \n        def set_user(self, user):\n            \n            self._user = user\n            \n            # Load user thumbnail \n            self.thumbnail.load(\"pictures/thumbnails/persons/{0}.png\".format(user[\"id\"]))\n            \n            # Set welcome message\n            self.welcome.setText(\"Welcome {first_name} {last_name}!\".format(\n                **user\n            ))\n\n\n    # Show pop-up about current user\n    user = gazu.client.get_current_user()\n    popup = UserPopup(user=user)\n    popup.show()\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Colorbleed/qtazu",
    "keywords": "cg,production,asset manager,asset,shot,tasks,tracking",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "qtazu",
    "package_url": "https://pypi.org/project/qtazu/",
    "platform": "",
    "project_url": "https://pypi.org/project/qtazu/",
    "project_urls": {
      "Homepage": "https://github.com/Colorbleed/qtazu"
    },
    "release_url": "https://pypi.org/project/qtazu/0.1.4/",
    "requires_dist": [
      "qt.py (>=1.2.3)",
      "gazu (>=0.7.14)",
      "wheel ; extra == 'dev'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "requests-mock ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Python Qt widgets for CG-Wire using gazu",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12049462,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db0fdff1cc444d2fb8faa03e777944dbb301a710724f3a58f715b3ebb9cc489c",
          "md5": "ac6119a8b09191e3b3ed59edcae0e67d",
          "sha256": "5c09e25f49079ccd6777d9fb052610d2fdb52214e968b29d20b516ea5a5575ed"
        },
        "downloads": -1,
        "filename": "qtazu-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac6119a8b09191e3b3ed59edcae0e67d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 30722,
        "upload_time": "2020-07-16T13:27:12",
        "upload_time_iso_8601": "2020-07-16T13:27:12.496343Z",
        "url": "https://files.pythonhosted.org/packages/db/0f/dff1cc444d2fb8faa03e777944dbb301a710724f3a58f715b3ebb9cc489c/qtazu-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e6e23221e0856b399e351e7fe9b3fa5d29190b33ad96ba28026dad2911644f0",
          "md5": "acde804323a01839dec7496876213caf",
          "sha256": "20b2e770fe2ca8786d1b8339f27f150c850323ef761f718703a79709e4ef5759"
        },
        "downloads": -1,
        "filename": "qtazu-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "acde804323a01839dec7496876213caf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 30728,
        "upload_time": "2020-08-03T10:59:07",
        "upload_time_iso_8601": "2020-08-03T10:59:07.198777Z",
        "url": "https://files.pythonhosted.org/packages/7e/6e/23221e0856b399e351e7fe9b3fa5d29190b33ad96ba28026dad2911644f0/qtazu-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f87d1cdfc34e40176a4b22ba035d8aa0ab607d70fb04ba22e25168b49dea35c",
          "md5": "c59e3c3b5f4737999c8a953116ca5efb",
          "sha256": "ea716b11c44dca175d449bf821bf3ce1bce19adbc92d33200a2c2e54adb91fad"
        },
        "downloads": -1,
        "filename": "qtazu-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c59e3c3b5f4737999c8a953116ca5efb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 30762,
        "upload_time": "2021-11-17T12:13:22",
        "upload_time_iso_8601": "2021-11-17T12:13:22.278301Z",
        "url": "https://files.pythonhosted.org/packages/3f/87/d1cdfc34e40176a4b22ba035d8aa0ab607d70fb04ba22e25168b49dea35c/qtazu-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "179e298a0476a9cb3f6bc15e3d1cdf63d0024b4ba17dbef8c1fa2f4b03f5341a",
          "md5": "748b6d20172df759cb59ed3f543d851f",
          "sha256": "8c0c7e7897db014bf398581e4918164ce50d308dc1eafe67fd2077fe88e97584"
        },
        "downloads": -1,
        "filename": "qtazu-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "748b6d20172df759cb59ed3f543d851f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 30762,
        "upload_time": "2021-11-17T12:16:11",
        "upload_time_iso_8601": "2021-11-17T12:16:11.311572Z",
        "url": "https://files.pythonhosted.org/packages/17/9e/298a0476a9cb3f6bc15e3d1cdf63d0024b4ba17dbef8c1fa2f4b03f5341a/qtazu-0.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f5aea3c0fe5baca9354dd3af2fce31db36cd4598d2570fceb187fef550dfb3b",
          "md5": "4d4e34be08e50ad9dcf9d7b5528e2324",
          "sha256": "fd0264001b1294b12c9a2e18792a9ecf3e2a6813979b868673e430f6470b2365"
        },
        "downloads": -1,
        "filename": "qtazu-0.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d4e34be08e50ad9dcf9d7b5528e2324",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 30764,
        "upload_time": "2021-11-17T15:29:22",
        "upload_time_iso_8601": "2021-11-17T15:29:22.047109Z",
        "url": "https://files.pythonhosted.org/packages/5f/5a/ea3c0fe5baca9354dd3af2fce31db36cd4598d2570fceb187fef550dfb3b/qtazu-0.1.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5f5aea3c0fe5baca9354dd3af2fce31db36cd4598d2570fceb187fef550dfb3b",
        "md5": "4d4e34be08e50ad9dcf9d7b5528e2324",
        "sha256": "fd0264001b1294b12c9a2e18792a9ecf3e2a6813979b868673e430f6470b2365"
      },
      "downloads": -1,
      "filename": "qtazu-0.1.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4d4e34be08e50ad9dcf9d7b5528e2324",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 30764,
      "upload_time": "2021-11-17T15:29:22",
      "upload_time_iso_8601": "2021-11-17T15:29:22.047109Z",
      "url": "https://files.pythonhosted.org/packages/5f/5a/ea3c0fe5baca9354dd3af2fce31db36cd4598d2570fceb187fef550dfb3b/qtazu-0.1.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}