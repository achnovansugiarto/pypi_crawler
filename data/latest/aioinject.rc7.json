{
  "info": {
    "author": "",
    "author_email": "Doctor <thirvondukr@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Async-first dependency injection library based on python type hints\n\n## Quickstart\n\nFirst let's create a class we would be injecting:\n\n```python\nclass Service:\n    pass\n```\n\nThen we should create instance of container and register `Service` class in it using a provider:\n\n```python\nfrom aioinject import Container, providers\n\ncontainer = Container()\ncontainer.register(providers.Callable(Service))\n```\n\nThen we can create a context and resolve our `Service` class from it:\n\n```python\nwith container.sync_context() as ctx:\n    service = ctx.resolve(Service)\n```\n\nIf you need to inject something into a function just annotate it with inject:\n\n```python\nfrom aioinject import inject\n\n\n@inject\ndef awesome_function(service: Service):\n    print(service)\n```\n\nAnd call it within an active context:\n\n```python\nwith container.sync_conext() as ctx:\n    awesome_function()\n```\n\nComplete example (should run as-is):\n\n```python\nfrom typing import Annotated\n\nfrom aioinject import Container, Inject, inject, providers\n\n\nclass Service:\n    pass\n\n\ncontainer = Container()\ncontainer.register(providers.Callable(Service))\n\n\n@inject\ndef awesome_function(\n    service: Service,\n):\n    print(service)\n\n\nwith container.sync_context() as ctx:\n    service = ctx.resolve(Service)\n    awesome_function()\n\n```\n\n## Specifying Dependencies\n\nTo mark parameters for injection we can use `typing.Annotated`\nand `Inject` marker\n\n```python\nfrom typing import Annotated\nfrom aioinject import Callable, Container, Inject\n\n\nclass Session:\n    pass\n\n\nclass Service:\n    def __init__(self, session: Session):\n        self.session = session\n\n\ncontainer = Container()\ncontainer.register(Callable(Session))\ncontainer.register(Callable(Service))\n\nwith container.sync_context() as ctx:\n    service = ctx.resolve(Service)\n```\n\nIf you have multiple dependencies with same type you can specify concrete implementation in `Inject`:\n\n```python\nimport dataclasses\nfrom typing import Annotated\n\nfrom aioinject import Container, providers, inject, Inject\n\n\n@dataclasses.dataclass\nclass Client:\n    name: str\n\n\ndef get_github_client() -> Client:\n    return Client(name=\"GitHub Client\")\n\n\ndef get_gitlab_client() -> Client:\n    return Client(name=\"GitLab Client\")\n\n\ncontainer = Container()\ncontainer.register(providers.Callable(get_github_client))\ncontainer.register(providers.Callable(get_gitlab_client))\n\n\n@inject\ndef injectee(\n    github_client: Annotated[Client, Inject(get_github_client)],\n    gitlab_client: Annotated[Client, Inject(get_gitlab_client)],\n):\n    print(github_client, gitlab_client)\n\n\nwith container.sync_context() as ctx:\n    # Manually resolving client\n    client = ctx.resolve(Client, impl=get_github_client)\n    print(client)\n    injectee()\n```\n\n## Working with Resources\n\nOften you need to initialize and close a resource (file, database session, etc...),\nyou can do that by using a `contextmanager` that would return your resource.  \nWe would use custom `Session` class that defines `__exit__` and `__enter__` methods:\n\n```python\nimport contextlib\n\nfrom aioinject import Container, providers\n\n\nclass Session:\n    def __init__(self):\n        self.closed = False\n\n    def __enter__(self):\n        return self\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        self.closed = True\n\n\n@contextlib.contextmanager\ndef get_session() -> Session:\n    with Session() as session:\n        yield session\n\n\ncontainer = Container()\ncontainer.register(providers.Callable(get_session))\n\nwith container.sync_context() as ctx:\n    session = ctx.resolve(Session)\n    print(session.closed)\nprint(session.closed)  # <- Session.__exit__ would be called when context closes\n```\n\n## Async Dependencies\nYou can register async resolvers the same way as you do with other dependencies,\nall you need to change is to use `Container.context` instead of `Container.sync_context`:\n\n```python\nimport asyncio\n\nfrom aioinject import Container, providers\n\n\nclass Service:\n    pass\n\n\nasync def get_service() -> Service:\n    await asyncio.sleep(1)\n    return Service()\n\n\nasync def main():\n    container = Container()\n    container.register(providers.Callable(get_service))\n\n    async with container.context() as ctx:\n        service = await ctx.resolve(Service)\n        print(service)\n\n\nif __name__ == '__main__':\n    asyncio.run(main())\n```\n\n## Providers\n\nWhen creating a provider you should specify the type it returns, but it can be inferred from class type or function\nreturn type:\n\n### Callable\n\n`Callable` provider would create instance of a class each time:\n\n```python\nfrom aioinject import Callable\n\n\nclass Service:\n    pass\n\n\nprovider = Callable(Service)\nservice_one = provider.provide_sync()\nservice_two = provider.provide_sync()\nprint(service_one is service_two)\n# False\n```\n\n### Singleton\n\n`Singleton` works the same way as `Callable` but it caches first created object:\n\n```python\nfrom aioinject import Singleton\n\n\nclass Service:\n    pass\n\n\nprovider = Singleton(Service)\nfirst = provider.provide_sync()\nsecond = provider.provide_sync()\nprint(first is second)\n# True\n\n```\n\n### Object\n\n`Object` provider just returns an object provided to it:\n\n```python\nfrom aioinject import Object\n\n\nclass Service:\n    pass\n\n\nprovider = Object(Service())\nservice = provider.provide_sync()\nprint(service)\n# <__main__.Service>\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aioinject",
    "package_url": "https://pypi.org/project/aioinject/",
    "platform": null,
    "project_url": "https://pypi.org/project/aioinject/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/aioinject/0.5.0/",
    "requires_dist": null,
    "requires_python": ">=3.10",
    "summary": "",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17445930,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbc50a1c4c0296b92f1cba3e3c204c5510b35805e90dc67f186bb8d2d95c9679",
          "md5": "3b8ce7aecb4559dcb9fab273ca1cd555",
          "sha256": "fadd02b5cc0712069c44028aeec222ba0a6f3b42baf719e87e5e1d10bb7f0dfc"
        },
        "downloads": -1,
        "filename": "aioinject-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b8ce7aecb4559dcb9fab273ca1cd555",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 8253,
        "upload_time": "2022-01-31T08:20:58",
        "upload_time_iso_8601": "2022-01-31T08:20:58.441248Z",
        "url": "https://files.pythonhosted.org/packages/db/c5/0a1c4c0296b92f1cba3e3c204c5510b35805e90dc67f186bb8d2d95c9679/aioinject-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e61840c20a49d05baa85815287e8ddbda751e70130e4b3320cdac4c25f2fb04",
          "md5": "a0734a2dfc8be81afbc114869ed32afb",
          "sha256": "45aa148120a21d36fb2d2cbc33c19970ffb32a12ffaa3625e8a0e553137343cc"
        },
        "downloads": -1,
        "filename": "aioinject-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a0734a2dfc8be81afbc114869ed32afb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 7036,
        "upload_time": "2022-01-31T08:21:00",
        "upload_time_iso_8601": "2022-01-31T08:21:00.752983Z",
        "url": "https://files.pythonhosted.org/packages/3e/61/840c20a49d05baa85815287e8ddbda751e70130e4b3320cdac4c25f2fb04/aioinject-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2280df0793a89c3cf4cfdf22fc1075832330cd8828544a6c5aad3fa0eb53a627",
          "md5": "97a5666851dda33d86be665850711b95",
          "sha256": "523f4b476a1aab11542c72a08ad79f659465ad6a5f9e30c10b3e8b63f13942e6"
        },
        "downloads": -1,
        "filename": "aioinject-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97a5666851dda33d86be665850711b95",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 8230,
        "upload_time": "2022-02-02T07:32:45",
        "upload_time_iso_8601": "2022-02-02T07:32:45.826231Z",
        "url": "https://files.pythonhosted.org/packages/22/80/df0793a89c3cf4cfdf22fc1075832330cd8828544a6c5aad3fa0eb53a627/aioinject-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97eb101cc5c8829548b03ed0364e569580d8e28d6c1d4931d9edc8b29b93765f",
          "md5": "e7426ce7ddc9bba3ac947674bbdb03bd",
          "sha256": "4b6a8de420ba97df0cc3e8857e619021c5f9bae5bc2ccb13388147652e069c39"
        },
        "downloads": -1,
        "filename": "aioinject-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e7426ce7ddc9bba3ac947674bbdb03bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 8052,
        "upload_time": "2022-02-02T07:32:47",
        "upload_time_iso_8601": "2022-02-02T07:32:47.069817Z",
        "url": "https://files.pythonhosted.org/packages/97/eb/101cc5c8829548b03ed0364e569580d8e28d6c1d4931d9edc8b29b93765f/aioinject-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ace7e4f01b6d1245f388761d65a2827c22f3117fd82bbeefac2bcd91b2953bf9",
          "md5": "0486e4168adf71a8c1b788bf54263df7",
          "sha256": "0ce726bdccf75e640b9398f2ba983053e1684d25a551682c6d69045a35098ffe"
        },
        "downloads": -1,
        "filename": "aioinject-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0486e4168adf71a8c1b788bf54263df7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 7891,
        "upload_time": "2022-02-15T01:52:01",
        "upload_time_iso_8601": "2022-02-15T01:52:01.952058Z",
        "url": "https://files.pythonhosted.org/packages/ac/e7/e4f01b6d1245f388761d65a2827c22f3117fd82bbeefac2bcd91b2953bf9/aioinject-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adb565e0efcf64e42908b3b69d667cdbac9f03d7e5668ebd6bc598a66dbee9cb",
          "md5": "ea77e02b673bfbec94f12112dc22a410",
          "sha256": "4e9d58ca0fdd22c344d0def54cda926fc91f1fa41a038091191fbe364c04d2ef"
        },
        "downloads": -1,
        "filename": "aioinject-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ea77e02b673bfbec94f12112dc22a410",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 6601,
        "upload_time": "2022-02-15T01:52:03",
        "upload_time_iso_8601": "2022-02-15T01:52:03.436890Z",
        "url": "https://files.pythonhosted.org/packages/ad/b5/65e0efcf64e42908b3b69d667cdbac9f03d7e5668ebd6bc598a66dbee9cb/aioinject-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acfecc57f6d167c209ec0202b6f9a3514d8bfd2c3f593c81eadcf5fceb4b649c",
          "md5": "2263d4b6a558456d176fc6ed3d6fd78a",
          "sha256": "0d7ed43631cf399cb9dddecfd8dbcc1dcf65d8f8286421c07797ed081ba83441"
        },
        "downloads": -1,
        "filename": "aioinject-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2263d4b6a558456d176fc6ed3d6fd78a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 8113,
        "upload_time": "2022-02-26T17:25:01",
        "upload_time_iso_8601": "2022-02-26T17:25:01.698173Z",
        "url": "https://files.pythonhosted.org/packages/ac/fe/cc57f6d167c209ec0202b6f9a3514d8bfd2c3f593c81eadcf5fceb4b649c/aioinject-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94a63bc9bc1ad27f2c47389dd2e753415c9a091bb55af1377834fabd9ee28353",
          "md5": "ea26f8e5607774cf60e6260330b2e06b",
          "sha256": "f493469a2dbeddd53988260f0eed027b57257730a78723095d93aa0da7e3d7c5"
        },
        "downloads": -1,
        "filename": "aioinject-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ea26f8e5607774cf60e6260330b2e06b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 6860,
        "upload_time": "2022-02-26T17:25:03",
        "upload_time_iso_8601": "2022-02-26T17:25:03.178416Z",
        "url": "https://files.pythonhosted.org/packages/94/a6/3bc9bc1ad27f2c47389dd2e753415c9a091bb55af1377834fabd9ee28353/aioinject-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb01a5da55eac78ec2bd8b61ec810751cac0b2d19c5754692502067953916774",
          "md5": "813a862d5fbd7d05bf42e72b99044922",
          "sha256": "750f46c66e93e2911082a88626423fcdb15ef190dea0fb068da6a4372287227a"
        },
        "downloads": -1,
        "filename": "aioinject-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "813a862d5fbd7d05bf42e72b99044922",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 8231,
        "upload_time": "2022-05-25T14:52:14",
        "upload_time_iso_8601": "2022-05-25T14:52:14.460591Z",
        "url": "https://files.pythonhosted.org/packages/cb/01/a5da55eac78ec2bd8b61ec810751cac0b2d19c5754692502067953916774/aioinject-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06157fec7701688eb7164339db85e2c9d5b6d548529df4194a8cdde3a34aaaa1",
          "md5": "12238d6f4873657f65e991a559ca3bd2",
          "sha256": "f86b69736dd1faf5a043a32ba3e7d190afdac5a29323e6b6fa132fed686d07fb"
        },
        "downloads": -1,
        "filename": "aioinject-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "12238d6f4873657f65e991a559ca3bd2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 6990,
        "upload_time": "2022-05-25T14:52:15",
        "upload_time_iso_8601": "2022-05-25T14:52:15.923774Z",
        "url": "https://files.pythonhosted.org/packages/06/15/7fec7701688eb7164339db85e2c9d5b6d548529df4194a8cdde3a34aaaa1/aioinject-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b31047930b85f40f7448b4c15812cf4fcc994160144319acde8ba6f935bc73d8",
          "md5": "188c11148bab7fb77b7973f542233bd1",
          "sha256": "7fdc5752bbb1459df7d32c86a4469cd22195889f94b2901b4cafdbae42918bdc"
        },
        "downloads": -1,
        "filename": "aioinject-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "188c11148bab7fb77b7973f542233bd1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 8272,
        "upload_time": "2022-08-16T07:41:55",
        "upload_time_iso_8601": "2022-08-16T07:41:55.204897Z",
        "url": "https://files.pythonhosted.org/packages/b3/10/47930b85f40f7448b4c15812cf4fcc994160144319acde8ba6f935bc73d8/aioinject-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "220da626d35497d3856c4dd49736d3d68e29c3fd9d1aed0a05a165d08cc83293",
          "md5": "018729b9a96e0b019c1e71f092af2e64",
          "sha256": "24ed5b8781aa8943e6043be260549b6e85eeb267ca0cdf6a98244308d50e64d0"
        },
        "downloads": -1,
        "filename": "aioinject-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "018729b9a96e0b019c1e71f092af2e64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 7063,
        "upload_time": "2022-08-16T07:41:57",
        "upload_time_iso_8601": "2022-08-16T07:41:57.239363Z",
        "url": "https://files.pythonhosted.org/packages/22/0d/a626d35497d3856c4dd49736d3d68e29c3fd9d1aed0a05a165d08cc83293/aioinject-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6fdff9854dc39772fae55b49b490b51fa9abc9758bbfc1329addca668d72a89",
          "md5": "bcc5685528f85403d3b9d7a9ab79b009",
          "sha256": "5f0a092f4700aa445fa903d0b4bcde5f6c987329678e6a22a5a1394cfe9c0f9b"
        },
        "downloads": -1,
        "filename": "aioinject-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bcc5685528f85403d3b9d7a9ab79b009",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 10548,
        "upload_time": "2023-03-26T00:31:27",
        "upload_time_iso_8601": "2023-03-26T00:31:27.005025Z",
        "url": "https://files.pythonhosted.org/packages/e6/fd/ff9854dc39772fae55b49b490b51fa9abc9758bbfc1329addca668d72a89/aioinject-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35bd5ddbbd8de337133482a3d3e6e6d9160a5354853d93d6e9b1d043d6376fc4",
          "md5": "24e6a3189eafa6dc0786ca0425786ebd",
          "sha256": "fd359671bfb96967515261ad829cf806f4fdea55d44bbb18be4cb7fa9e89d466"
        },
        "downloads": -1,
        "filename": "aioinject-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "24e6a3189eafa6dc0786ca0425786ebd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 15135,
        "upload_time": "2023-03-26T00:31:29",
        "upload_time_iso_8601": "2023-03-26T00:31:29.178279Z",
        "url": "https://files.pythonhosted.org/packages/35/bd/5ddbbd8de337133482a3d3e6e6d9160a5354853d93d6e9b1d043d6376fc4/aioinject-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6fdff9854dc39772fae55b49b490b51fa9abc9758bbfc1329addca668d72a89",
        "md5": "bcc5685528f85403d3b9d7a9ab79b009",
        "sha256": "5f0a092f4700aa445fa903d0b4bcde5f6c987329678e6a22a5a1394cfe9c0f9b"
      },
      "downloads": -1,
      "filename": "aioinject-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bcc5685528f85403d3b9d7a9ab79b009",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 10548,
      "upload_time": "2023-03-26T00:31:27",
      "upload_time_iso_8601": "2023-03-26T00:31:27.005025Z",
      "url": "https://files.pythonhosted.org/packages/e6/fd/ff9854dc39772fae55b49b490b51fa9abc9758bbfc1329addca668d72a89/aioinject-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35bd5ddbbd8de337133482a3d3e6e6d9160a5354853d93d6e9b1d043d6376fc4",
        "md5": "24e6a3189eafa6dc0786ca0425786ebd",
        "sha256": "fd359671bfb96967515261ad829cf806f4fdea55d44bbb18be4cb7fa9e89d466"
      },
      "downloads": -1,
      "filename": "aioinject-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "24e6a3189eafa6dc0786ca0425786ebd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 15135,
      "upload_time": "2023-03-26T00:31:29",
      "upload_time_iso_8601": "2023-03-26T00:31:29.178279Z",
      "url": "https://files.pythonhosted.org/packages/35/bd/5ddbbd8de337133482a3d3e6e6d9160a5354853d93d6e9b1d043d6376fc4/aioinject-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}