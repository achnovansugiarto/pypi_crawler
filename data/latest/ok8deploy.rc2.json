{
  "info": {
    "author": "davidgiga1993",
    "author_email": "david@dev-core.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Openshift/K8 templating and deployment engine\nSuper simple python templating and deployment engine for openshift/k8 yml files.\nDetects changes made and only applies the required objects.\n\n## Use case\nThis tool was born in the need to a very simple templating system\nwhich can track changes (similar to terraform). It was build for my requirements but should\nfit others as well.\n\n## Requirements\n- Python 3.8 or later\n- `oc` (or `kubectl`) binary in path\n\n## Usage\n### Deploy all changes\nDeploys all enabled app \n```\npython deploy.py deploy-all\n```\n\n### Deploy single app\nDeploys all object of the app with the give name\n```\npython deploy.py deploy nginx\n```\n\n### Reload config\nThis command executes the `on-config-change` trigger\n```\npython deploy.py reload prometheus\n```\n\n\n## Configuration\nIn OK8Deploy you define apps, each app can contain multiple yml files.\nAdditionally, there is a project configuration which describes the openshift project.\n\nAll yml files will be pre-processed before they will be imported.\nThis includes replacing any known `${KEY}` variables with their associate values and merging referenced templates.\n\n### Config structure\n```\nconfigs\n|- _root.yml <- Project config\n|- my-app <- App\n    |- _index.yml <- App config\n    |- dc.yml <- Openshift yml file(s)\n    |- secrets.yml\n```\n\n### Project config\nHere is a sample `_root.yml` file\n```yml\nproject: 'my-oc-project'\n\n# OPTIONAL STUFF\n# Global variables\nvars:\n  DOMAIN: \"dev-core.org\"\n```\n\n### App config\nAn app is represented by a folder containing an `_index.yml` file and any additional openshift yml files.\nThe following shows all available parameters. Only the first 3 are required.\n```yml\n# The type defines how the app will be used.\n# Can be \"app\" (default) or \"template\"\ntype: 'app'\n\n# Indicates if this app should be deployed or ignored\nenabled: true \n\n# Deployment config parameters\ndc:\n    # Name of the deployment config, available as variable, see below\n    name: 'my-app'\n\n# Template which should be applied, none by default\napplyTemplates: []\n\n# Templates which should be applied AFTER processing the other templates and base yml files\npostApplyTemplates: []\n\n# Action which should be executed if a configmap has been changed\non-config-change:\n# Available options: \n# deploy (re-deploys the deployment config)\n  - deploy\n\n# exec (Executes a command inside the running container)\n  - exec: \n      command: /bin/sh\n      args: \n        - \"-c\"\n        - \"kill -HUP $(ps a | grep prometheus | grep -v grep | awk '{print $1}')\"\n\n# Additional variables which are used for replacements\nvars:\n  NSQ_NAME: 'nsq-core'\n\n# Required parameters which must be passed to this app.\n# This can be done via the CLI or if this app is a template the referring app can define it in \"vars\" \nparams:\n  - PASSWORD\n\n# File based configmaps\nconfigmaps:\n  - name: nginx-config\n    files:\n      - file: \"nginx.conf\"\n```\n\n### Configmaps\nIn addition to the regular configmaps you can also define configmaps with a file source.\nThis is done in the `_index.yml` file:\n```yml\nconfigmaps:\n  - name: nginx-config\n    files:\n      - file: \"nginx.conf\"\n```\nThis will create a new configmap from the file `nginx.conf` with the name `nginx-config`.\nAny changes made to the file will be automatically deployed.\n\n### Variables\nYou can refer to variables in yml files by using `${VAR-NAME}`. Variables can also be loaded from files.\n\n```yml\n# _index.yml\nvars:\n  # Regular key/value assignment\n  key: value\n\n  # This will load the public/private and intermediate certs\n  # from a pem file and store it in *_KEY, *_PUBLIC, *_CACERT\n  # where * is the key of the value (CERT in this example)\n  CERT:\n    loader: pem\n    file: my-cert.pem\n```\n\nIt is also possible to decorate objects using variables:\n```yml\n# _index.yml\nvars:\n  someMerging:\n    hello: world\n    replicas: 2\n```\n\n```yml\n# dc.yml\nspec:\n  replicas: 1\n  _ok8merge: ${someMerging}\n```\n\nResults in:\n```yml\nspec:\n  replicas: 2\n  hello: world\n```\n\n### Global variables\nThe following variables are available anywhere inside the yml files by default\n\n| Key | Value |\n| --- | --- | \n| `DC_NAME` | Name of the deployment-config in the `_index.yml` |\n| `OC_PROJECT` | Name of the openshift project in `_root.yml` |\n\n### Templates\nYou can use templates to reuse and generate yml files.\nTo do so you create a new app with the `type` field set to `template`.\nOther apps can now refer to this template via the `applyTemplates` or `postApplyTemplates` field. \nTemplates can refer to other templates (recursively). Any vars defined are passed to the next template. \n\nExample:\n```\n|- some-template\n    |- _index.yml\n    |- dc.yml\n\n|- my-app\n    |- _index.yml <-- Referes to \"some-template\"\n    |- others.yml\n```\n\nWill result in\n```\n|- my-app\n    |- _index.yml\n    |- others.yml\n    |- dc.yml\n```\n\n#### Object merging\nThe template engine support content aware object merging.\nThis allows you to decorate existing templates or enhance apps with features.\nA common example would be a template which adds a monitoring sidecar container.\nIn the `examples` you can find the `nsq-template` which defines a sidecar container.\n\nHere is a minimal example:\n```yml\n# examples/nsq-template/dc.yml\nkind: DeploymentConfig\napiVersion: v1\nspec:\n    template:\n        spec:\n        containers:\n            - name: \"nsqd\"\n            image: \"nsqio/nsq\"\n```\n\n```yml\n# examples/my-app/dc.yml\nkind: DeploymentConfig\napiVersion: v1\nmetadata:\n  name: \"${DC_NAME}\"\n\nspec:\n  replicas: 1\n  selector:\n    name: \"${DC_NAME}\"\n  strategy:\n    type: Rolling\n\n  template:\n    metadata:\n      labels:\n        name: \"${DC_NAME}\"\n\n    spec:\n      containers:\n        - name: \"${DC_NAME}\"\n          image: \"docker-registry.default.svc:5000/oc-project/my-app:prod\"\n```\n\nIf we now apply the nsq-template to our app using `postApplyTemplates: [nsq-template]` the\n`DeploymentConfig` object gets automatically merged:\n```yml\n# Merged result after applying template\nkind: DeploymentConfig\napiVersion: v1\nmetadata:\n  name: \"${DC_NAME}\"\n\nspec:\n  replicas: 1\n  selector:\n    name: \"${DC_NAME}\"\n  strategy:\n    type: Rolling\n\n  template:\n    metadata:\n      labels:\n        name: \"${DC_NAME}\"\n\n    spec:\n      containers:\n        - name: \"${DC_NAME}\"\n          image: \"docker-registry.default.svc:5000/oc-project/my-app:prod\"\n        # This is the part of the template\n        - name: \"nsqd\"\n            image: \"nsqio/nsq\"\n```\n\n#### Loops\nLoops allow you to apply the same template with different parameters.\nThis is useful when deploying microservices which all have the same openshift config.\n\n```yml\n# _index.yml\nenabled: true\napplyTemplates: [ api-template ]\nforEach: \n    # DC_NAME is required for each instance that should be created\n  - DC_NAME: entity-compare-api\n    # You can define other vars as well\n    PORT: 8080\n\n  - DC_NAME: favorite-api\n    PORT: 8081\n```\n\n#### Library\nIt's possible to define whole project as a `library`. This allows all apps and templates to be reused\nby another project. An example would be the same setup for multiple systems which are separated by projects (e.g. `dev/test/prod`).\n\n```yml\n# testLib/_root.yml\ntype: library\n\n# Required parameters\nparams:\n  - domain\n  - dockerDomain\n  - imageStreamTag\n```\n```yml\n# prod/_root.yml\nproject: 'prod-project'\ninherit: testLib\n\n# Required parameters\nvars:\n  domain: my-prod.dev-core.org\n  dockerDomain: prod-docker.com\n  imageStreamTag: prod\n```\nWhen you now deploy the `prod` project it will inherit all apps inside `testLib`.\n\n## Change tracking\nChanges are detected by storing a md5 sum in the label of the object.\nIf this hash has changed the whole object will be applied.\nIf no label has been found in openshift the object is assumed to be equal, and the label is added.\n\n## Examples\nAll examples can be found in the `examples` folder.\n### Grafana\nThe grafana folder contains a basic grafana setup.\n\n### NSQ\nThis example adds an NSQ sidecar container to a deployment config.\n\n\n`my-app/_index.yml`\n```yml\nenabled: true\npostApplyTemplates: [nsq-template]\nvars:\n  NSQ_NAME: 'app-nsq'\n\ndc:\n  name: my-app\n```\n\n\n\n## Contribute\nThe code should be mostly commented. If you found a bug or want to improve something feel free to open an issue and discuss your ideas.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/davidgiga1993/OpenK8Deploy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ok8deploy",
    "package_url": "https://pypi.org/project/ok8deploy/",
    "platform": "",
    "project_url": "https://pypi.org/project/ok8deploy/",
    "project_urls": {
      "Homepage": "https://github.com/davidgiga1993/OpenK8Deploy"
    },
    "release_url": "https://pypi.org/project/ok8deploy/1.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple Openshift / K8 template engine with state tracking",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11590872,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "084f93e471c2ee74044e68d74a251eb49fea2ccb3fbb3817c2f27e1cfbc2db49",
          "md5": "c18f3a35d377ce6ac35b73f849a6fc1a",
          "sha256": "91d578ee4af77e52fb5ccd9c1e1eb7c66ebd8afa0fd902ade9b3c9bdb29beb8c"
        },
        "downloads": -1,
        "filename": "ok8deploy-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c18f3a35d377ce6ac35b73f849a6fc1a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 41601,
        "upload_time": "2021-07-30T08:44:56",
        "upload_time_iso_8601": "2021-07-30T08:44:56.526247Z",
        "url": "https://files.pythonhosted.org/packages/08/4f/93e471c2ee74044e68d74a251eb49fea2ccb3fbb3817c2f27e1cfbc2db49/ok8deploy-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fe8c589d82e2adaa1b504eed2acc66838ae04eb7aa65d153a362ae19c7d7f6d",
          "md5": "36e38613272198490bf5b5e119c2ebc2",
          "sha256": "91bfdf30c01aec98af7bfe8fd21e217dd75f446366823b9ffb722ec87f6810c4"
        },
        "downloads": -1,
        "filename": "ok8deploy-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "36e38613272198490bf5b5e119c2ebc2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37032,
        "upload_time": "2021-07-30T08:44:57",
        "upload_time_iso_8601": "2021-07-30T08:44:57.863413Z",
        "url": "https://files.pythonhosted.org/packages/8f/e8/c589d82e2adaa1b504eed2acc66838ae04eb7aa65d153a362ae19c7d7f6d/ok8deploy-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "394b996c217ba7a6e28f645569d466cbab72de8f3271b03fedff1e861b3539f6",
          "md5": "2c86578becc2876acb997766f5bc122a",
          "sha256": "e10052c455683a24ad828f7fe2f93230e438e9c5a89487d9294a310a76522fd6"
        },
        "downloads": -1,
        "filename": "ok8deploy-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c86578becc2876acb997766f5bc122a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 41830,
        "upload_time": "2021-09-30T07:40:58",
        "upload_time_iso_8601": "2021-09-30T07:40:58.556014Z",
        "url": "https://files.pythonhosted.org/packages/39/4b/996c217ba7a6e28f645569d466cbab72de8f3271b03fedff1e861b3539f6/ok8deploy-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67b77bea15dfd8f45f07cc1aba0d1acd4e95d29439adc80e42a5022f1b07a079",
          "md5": "34bd023d1d7a30a3c55b4c6bab28d3d4",
          "sha256": "a53998b33e79369bd697c13aab255e7fd1b675f2c8ce98daa7f249d2338ade7b"
        },
        "downloads": -1,
        "filename": "ok8deploy-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "34bd023d1d7a30a3c55b4c6bab28d3d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37194,
        "upload_time": "2021-09-30T07:40:59",
        "upload_time_iso_8601": "2021-09-30T07:40:59.835917Z",
        "url": "https://files.pythonhosted.org/packages/67/b7/7bea15dfd8f45f07cc1aba0d1acd4e95d29439adc80e42a5022f1b07a079/ok8deploy-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "394b996c217ba7a6e28f645569d466cbab72de8f3271b03fedff1e861b3539f6",
        "md5": "2c86578becc2876acb997766f5bc122a",
        "sha256": "e10052c455683a24ad828f7fe2f93230e438e9c5a89487d9294a310a76522fd6"
      },
      "downloads": -1,
      "filename": "ok8deploy-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2c86578becc2876acb997766f5bc122a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 41830,
      "upload_time": "2021-09-30T07:40:58",
      "upload_time_iso_8601": "2021-09-30T07:40:58.556014Z",
      "url": "https://files.pythonhosted.org/packages/39/4b/996c217ba7a6e28f645569d466cbab72de8f3271b03fedff1e861b3539f6/ok8deploy-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "67b77bea15dfd8f45f07cc1aba0d1acd4e95d29439adc80e42a5022f1b07a079",
        "md5": "34bd023d1d7a30a3c55b4c6bab28d3d4",
        "sha256": "a53998b33e79369bd697c13aab255e7fd1b675f2c8ce98daa7f249d2338ade7b"
      },
      "downloads": -1,
      "filename": "ok8deploy-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "34bd023d1d7a30a3c55b4c6bab28d3d4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 37194,
      "upload_time": "2021-09-30T07:40:59",
      "upload_time_iso_8601": "2021-09-30T07:40:59.835917Z",
      "url": "https://files.pythonhosted.org/packages/67/b7/7bea15dfd8f45f07cc1aba0d1acd4e95d29439adc80e42a5022f1b07a079/ok8deploy-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}