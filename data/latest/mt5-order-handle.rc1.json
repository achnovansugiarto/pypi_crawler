{
  "info": {
    "author": "Kritthanit_Malathong",
    "author_email": "kritthanit.m@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MT5_Order_Handle\n## _Handle mt5 order via python_\n\nMT5_Order_Handle is python package for handle order/position on MT5 terminal\nNOTE: This package test on OS Windows\n\n## Features\n\n- Open Position (BUY, SELL, BUYSTOP, SELLSTOP, BUYLIMIT, SELLLIMIT)\n- Modify Position\n- Get symbol info\n- Get all position \n- Get all pending-order\n- Delete pending order\n- Close position\n- Close position by symbol\n- total position on symbol\n- total sell on symbol\n- total buy on symbol\n- total pending order on symbol\n- Get average spread (Calculate with my algorithm not is true average spread)\n- Get last open time of position\n- Get bar price\n- Get position data\n- Get local time (PC Time)\n- Get sever time (MT5 Time)\n- Connect Python to MT5\n\n\n## Installation\n\n```sh\npip install mt5_order_handle\n```\nOR\n```sh\npip install mt5-order-handle\n```\n\nNOTE: Before use this package you must install MetaTrader5\n```sh\npip install MetaTrader5\n```\n\n## Examaple\nLastest version of document: \nhttps://gist.github.com/kritthanit/919e09d6db21fb99909105d6107325b4\n\n```sh\nimport MetaTrader5 as mt5\nfrom mt5_order_handle import mt5order as mt5hd\n\n# 1. Account info \nport_number = 50959296           # your port account number\naccount = 50959296\npassword = \"your_pass_word\"\nserver = \"server_name\"           # example: server = \"ICMarketsSC-Demo\"\nterminal_loc = r'C:\\Program Files\\MetaTrader 5 IC Markets (SC)\\terminal64.exe'    # location of MT5 terminal\n\n# 2. Connect MT5 object to MetaTrader5 Terminal \nmt5 = mt5hd.connect(mt5, account, password, server, terminal_loc)\n\n# 3. Create handle object \nhandles = mt5hd.OrderHandle(mt5)\n\n# 4. Read bar data \nsymbol = 'EURUSD'\ntimeframe = mt5.TIMEFRAME_H4\nbar_shift = 1                   # 0 is current bar\nohlc = handles.get_bar_price(symbol, timeframe, bar_shift)\nprint(ohlc)\n# output example: {'Open': 0.99953, 'High': 1.00097, 'Low': 0.99597, 'Close': 0.99916}\n\n# 5. Open order\norder_type = \"BUY\"\nopen_price = 0          # use current price\ntp = 0\nsl = 0\nmagic_number = 2534\norder_comment = \"Test\"\nlot_size = 0.01\nticket = handles.open_position(symbol, order_type, lot_size, open_price, tp, sl, magic_number, order_comment)\nprint(ticket)           # if order send error, ticket will be -1\n\norder_type = \"SELL\"\nticket = handles.open_position(symbol, order_type, lot_size, open_price, tp, sl, magic_number, order_comment)\nprint(ticket)\n\norder_type = \"BUYLIMIT\"\nopen_price = ohlc['Low']\ntp = ohlc['High']\nsl = ohlc['Low'] - (ohlc['High'] - ohlc['Low'])\nticket = handles.open_position(symbol, order_type, lot_size, open_price, tp, sl, magic_number, order_comment)\nprint(ticket)\n\norder_type = \"SELLLIMIT\"\nopen_price = ohlc['High']\ntp = 0\nsl = 0\nticket = handles.open_position(symbol, order_type, lot_size, open_price, tp, sl, magic_number, order_comment)\nprint(ticket)\n\norder_type = \"BUYSTOP\"\nopen_price = ohlc['High']\nticket = handles.open_position(symbol, order_type, lot_size, open_price, tp, sl, magic_number, order_comment)\nprint(ticket)\n\norder_type = \"SELLSTOP\"\nopen_price = ohlc['Low']\nticket = handles.open_position(symbol, order_type, lot_size, open_price, tp, sl, magic_number, order_comment)\nprint(ticket)\n\n# 6. Read all Positions on MT5 Terminal\npositions = mt5.positions_get()\nfor position in positions:\n    print(position)\n\n# 7. Read all Positions on symbol\npositions = mt5.positions_get(symbol=symbol)\nfor position in positions:\n    print(position)\n\n# 8. Read all Pending-Order on MT5-Terminal\norders = mt5.orders_get()\nfor order in orders:\n    print(order)\n\n# 9. Read all Pending-Order on symbol\norders = mt5.orders_get(symbol=symbol)\nfor order in orders:\n    print(order)\n    \n# 10. Read symbol info\nsym_info = handles.get_symbol_info(symbol)\nprint(sym_info)\n\n# 11. Close and Modify Position\nfor position in positions:\n    pos_data = mt5hd.position_data(position)    # print(pos_data) for see all property\n    tk = pos_data['ticket']\n    tm = pos_data['open_time']                  # order time_s\n    order_type = pos_data['order_type']         # 0 = BUY, 1 = SELL\n    lots = pos_data['lot']\n    ocm = pos_data['comment']\n    pf = pos_data['swap'] + pos_data['profit'] - (lots * 8)  # swap+pf+commission (use for print output only)\n    op = pos_data['open_price']\n    sl = pos_data['sl']\n    sym = pos_data['symbol']\n\n    if pf > 10.0 or pf < -10.0:\n        chk = handles.close_position(tk, order_type, sym, lots, pf)     # return False if close error\n    else:\n        if order_type == 0:     # BUY\n            nw_sl = op - (1000 * sym_info['point'])\n            nw_tp = op + (1000 * sym_info['point'])\n            chk = handles.modify_position(sym, tk, nw_sl, nw_tp)\n        if order_type == 1:     # SELL\n            nw_sl = op + (1000 * sym_info['point'])\n            nw_tp = op - (1000 * sym_info['point'])\n            chk = handles.modify_position(sym, tk, nw_sl, nw_tp)\n            \n# 12. Delete and Modify Pending-Order\nfor order in orders:\n    ord_info = mt5hd.position_data(order)\n    tk = ord_info['ticket']\n    order_type = ord_info['order_type']     # BUYLIMIT=2, SELLLIMIT=3, BUYSTOP=4, SELLSTOP=5\n    sym = ord_info['symbol']\n    op = ord_info['open_price']\n\n    if order_type == 2:\n        chk = handles.delete_pending(tk)\n\n    if order_type == 3:\n        nw_sl = op + (1000 * sym_info['point'])\n        nw_tp = op - (1000 * sym_info['point'])\n        chk = handles.modify_position(sym, tk, nw_sl, nw_tp)\n\n# 13. Close all position on symbol\nhandles.close_positions_by_symbol(symbol)\n\n# 14. Total positions on symbol\nN = handles.total_position_on_symbol(symbol)\n\n# 15. Total buy on symbol\nN_Buy = handles.total_buy_on_symbol(symbol)\n\n# 16. Total sell on symbol\nN_Sell = handles.total_sell_on_symbol(symbol)\n\n# 17. Total pending on symbol\nN_pd = handles.total_pending_on_symbol(symbol)\n\n# 18. Get average spread\naverage_spread = handles.get_average_spread(symbol)\n\n# 19. Get last position open time\nlast_open_time = handles.get_last_position_time(symbol)\n\n# 20. Get local time\nlocal_time = mt5hd.get_local_time()\n\n# 21. Get server time\nserver_time = handles.get_server_time(symbol, timeframe, bar_shift)\n\n```\n\n## License\n\nMIT\n\n\n[//]: # (These are reference links used in the body of this note and get stripped out when the markdown processor does its job. There is no need to format nicely because it shouldn't be seen. Thanks SO - http://stackoverflow.com/questions/4823468/store-comments-in-markdown-syntax)\n\n   [dill]: <https://github.com/joemccann/dillinger>\n   [git-repo-url]: <https://github.com/joemccann/dillinger.git>\n   [john gruber]: <http://daringfireball.net>\n   [df1]: <http://daringfireball.net/projects/markdown/>\n   [markdown-it]: <https://github.com/markdown-it/markdown-it>\n   [Ace Editor]: <http://ace.ajax.org>\n   [node.js]: <http://nodejs.org>\n   [Twitter Bootstrap]: <http://twitter.github.com/bootstrap/>\n   [jQuery]: <http://jquery.com>\n   [@tjholowaychuk]: <http://twitter.com/tjholowaychuk>\n   [express]: <http://expressjs.com>\n   [AngularJS]: <http://angularjs.org>\n   [Gulp]: <http://gulpjs.com>\n\n   [PlDb]: <https://github.com/joemccann/dillinger/tree/master/plugins/dropbox/README.md>\n   [PlGh]: <https://github.com/joemccann/dillinger/tree/master/plugins/github/README.md>\n   [PlGd]: <https://github.com/joemccann/dillinger/tree/master/plugins/googledrive/README.md>\n   [PlOd]: <https://github.com/joemccann/dillinger/tree/master/plugins/onedrive/README.md>\n   [PlMe]: <https://github.com/joemccann/dillinger/tree/master/plugins/medium/README.md>\n   [PlGa]: <https://github.com/RahulHP/dillinger/blob/master/plugins/googleanalytics/README.md>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mt5-order-handle",
    "package_url": "https://pypi.org/project/mt5-order-handle/",
    "platform": null,
    "project_url": "https://pypi.org/project/mt5-order-handle/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/mt5-order-handle/1.0.1/",
    "requires_dist": [
      "MetaTrader5",
      "pandas",
      "datetime"
    ],
    "requires_python": ">=3.9",
    "summary": "a package that contain python function for handle mt5 order",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15093299,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa1b8e298f13dfa5b318f8a2ce9096b029b67b08a6afb542767361238816e511",
          "md5": "91b398a28886f3f25c312d5129bd060d",
          "sha256": "7660e5362278653722e1931bda296542fb33c4b173f2f96db38e6788ac9f8919"
        },
        "downloads": -1,
        "filename": "mt5_order_handle-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91b398a28886f3f25c312d5129bd060d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 8494,
        "upload_time": "2022-09-14T15:52:02",
        "upload_time_iso_8601": "2022-09-14T15:52:02.376033Z",
        "url": "https://files.pythonhosted.org/packages/fa/1b/8e298f13dfa5b318f8a2ce9096b029b67b08a6afb542767361238816e511/mt5_order_handle-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a0fb4f68a6d98b581753f4a926b4b23b3d77ebbd9f1e78e23f3a27d4535cf92",
          "md5": "1ce86f3e4b05c688eef5155164227b2d",
          "sha256": "d3e8da7fcd304ff115ff4158cf3447dc3a9ea9a8285465d83ba5228b5f7b0f20"
        },
        "downloads": -1,
        "filename": "mt5_order_handle-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1ce86f3e4b05c688eef5155164227b2d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 8321,
        "upload_time": "2022-09-14T15:52:04",
        "upload_time_iso_8601": "2022-09-14T15:52:04.781741Z",
        "url": "https://files.pythonhosted.org/packages/3a/0f/b4f68a6d98b581753f4a926b4b23b3d77ebbd9f1e78e23f3a27d4535cf92/mt5_order_handle-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fa1b8e298f13dfa5b318f8a2ce9096b029b67b08a6afb542767361238816e511",
        "md5": "91b398a28886f3f25c312d5129bd060d",
        "sha256": "7660e5362278653722e1931bda296542fb33c4b173f2f96db38e6788ac9f8919"
      },
      "downloads": -1,
      "filename": "mt5_order_handle-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "91b398a28886f3f25c312d5129bd060d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 8494,
      "upload_time": "2022-09-14T15:52:02",
      "upload_time_iso_8601": "2022-09-14T15:52:02.376033Z",
      "url": "https://files.pythonhosted.org/packages/fa/1b/8e298f13dfa5b318f8a2ce9096b029b67b08a6afb542767361238816e511/mt5_order_handle-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a0fb4f68a6d98b581753f4a926b4b23b3d77ebbd9f1e78e23f3a27d4535cf92",
        "md5": "1ce86f3e4b05c688eef5155164227b2d",
        "sha256": "d3e8da7fcd304ff115ff4158cf3447dc3a9ea9a8285465d83ba5228b5f7b0f20"
      },
      "downloads": -1,
      "filename": "mt5_order_handle-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1ce86f3e4b05c688eef5155164227b2d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 8321,
      "upload_time": "2022-09-14T15:52:04",
      "upload_time_iso_8601": "2022-09-14T15:52:04.781741Z",
      "url": "https://files.pythonhosted.org/packages/3a/0f/b4f68a6d98b581753f4a926b4b23b3d77ebbd9f1e78e23f3a27d4535cf92/mt5_order_handle-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}