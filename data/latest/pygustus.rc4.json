{
  "info": {
    "author": "Daniel Honsel",
    "author_email": "dhonsel@cs.uni.goettingen.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "[![Build Test and Publish](https://github.com/Gaius-Augustus/pygustus/workflows/Build%20Test%20and%20Publish/badge.svg)](https://github.com/Gaius-Augustus/pygustus/actions?query=workflow%3A\"Build+Test+and+Publish\")\n\n# Pygustus\nA python wrapper for the gene prediction program AUGUSTUS.\n\n- [Requirements](#requirements)\n- [Installation](#installation)\n- [Usage](#usage)\n- [Examples](#examples)\n\n# Requirements\nTo use Pygustus, an installed or built AUGUSTUS with minimum program version 3.3.2 is required. Using Ubuntu, AUGUSTUS can be installed as follows.\n\n    sudo apt install augustus augustus-data augustus-doc\n\nMore information can be found on the [AUGUSTUS GitHub page](https://github.com/Gaius-Augustus/Augustus).\n\nTo run Pygustus properly it is necessary that the AUGUSTUS environment variable `AUGUSTUS_CONFIG_PATH` is set correctly and points to the configuration directory.\n\nIf AUGUSTUS was built from source and no installation was done (so the command `augustus` is not executable), then the path to the executable can be set as described in the [configuration](#configuration) section.\n\nFor Pygustus Python version 3.6 or higher is required.\n\nThe following examples assume that Python 3 is the default on the executing system. To ensure the usage of Python 3, the use of a virtual environment is recommended. A virtual environment can be created with [venv](https://docs.python.org/3/library/venv.html).\n\n# Installation\nPygustus is in alpha development status. **Currently it is not recommended for productive use.** Pygustus can be installed from PyPi as follows.\n~~~\npip install pygustus\n~~~\n\n## Building Pygustus from source\n\n:warning: Pygustus currently only works with Augustus from git, not with Augustus from package managers or third parties. The crucial commit was performed on Feb 28 2023.\n\nAs an alternative to installing Pygustus from PyPi, Pygustus can also be built from source as follows. After cloning the repository from GitHub,\n~~~\ngit clone git@github.com:Gaius-Augustus/pygustus.git\n~~~\nrequired dependencies need to be installed.\n~~~\npip install numba property-manager pysais\n# sometimes required: pip install --force-reinstall -v \"numpy==1.23\"\n# sometimes required: pip install --force-reinstall -v \"numexpr==2.6.2\"\npip install -r requirements.txt\n# can be skipped for just installing the package: pip install -r requirements-dev.txt\n~~~\nAfter that Pygustus can be built and installed as follows.\n~~~\npython setup.py sdist bdist_wheel\npip install dist/pygustus-<VERSION>.tar.gz\n~~~\nFor the execution of the tests `pytest` is used. Example usage:\n~~~\npytest -m ghactions tests/\n~~~\nThe test cases marked with `ghactions` are those that are not too expensive in terms of runtime.\n# Usage\nPygustuts supports the training and prediction of AUGUSTUS. The prediction can be executed either in a single thread or in parallel. In multithreaded execution, the input file is split into smaller pieces and AUGUSTUS is executed in parallel on partial inputs. Finally, the partial results are joined together.\n\nAs values of the parameters for all Pygustus programs only the Python types are permissible.\n\n## Training\nTo train AUGUSTUS, the etraining program was adopted in Pygustus. More information about the program can be found [here](https://github.com/Gaius-Augustus/Augustus/blob/master/docs/RUNNING-AUGUSTUS.md#retraining-augustus). The usage in Pygustus is as follows.\n~~~\nfrom pygustus import etraining\n\netraining.train('path/to/trainfilename.gb',  species='SPECIES')\n~~~\nThe species to be trained must be present in the config folder of AUGUSTUS (see also AUGUSTUS_CONFIG_PATH). To create a new species, the Perl script `new_species.pl` from the script folder of AUGUSTUS can be used.\n\nIf the path to the etraining executable is to be specified temporarily, the Pygustus parameter `path_to_binary=path/to/etraining` can be used.\n\n## Prediction\nTo run a prediction AUGUSTUS can be executed on the input file as usual or the input file can be split and AUGUSTUS is run on input parts in parallel. For the second variant the Pygustus parameter `jobs=n` must be set with `n > 1`.\n\n### Default (Single Thread)\nIf the prediction is executed with `jobs=1` (default, may be ommitted), AUGUSTUS is executed on the input file exactly as if one would start AUGUSTUS from the console. Usage example:\n~~~\nfrom pygustus import augustus\n\naugustus.predict('path/to/input/file', species='human',\n                    UTR=True, softmasking=False)\n~~~\nTo redirect the output to a file the AUGUSTUS parameters `outfile` and `errfile` can be used. Application example for the output of the prediction and the possible errors that occurred \n~~~\naugustus.predict('path/to/input/file', species='human',\n                UTR=True, softmasking=False\n                outfile='out.gff', errfile='out.err')\n~~~\nIf the path to the AUGUSTUS executable is to be specified temporarily, the Pygustus parameter `path_to_binary=path/to/augustus` can be used.\n\n### Multithreaded\nIf the Pygustus parameter `jobs=n` is set with `n > 1`, then the input file is split into several small files and Augustus is run in parallel for each file with the given parameters. After AUGUSTUS has been executed on all parts, the partial results are combined to the final result. If the parameter `outfile` is set, the result will be saved in the file given there. Otherwise, the result will be saved in the file `augustus.gff` (default). A usage example is shown below.\n~~~\nfrom pygustus import augustus\n\naugustus.predict('path/to/input/file', [augustus_parameters],\n                    [pygustus_parameters], jobs=n)\n~~~\nAll parameters permitted for AUGUSTUS can be used as augustus_parameters. The following pygustus_parameters are additionally available.\n\n| Parameter | Default Value | Description |\n| ----------| --------------| ------------|\n| jobs (int) | 1 | If `jobs=n` with `n > 1` is set, AUGUSTUS is executed in parallel on sequence segments or split input files using `n` jobs. After the execution of all jobs, the output files are merged. |\n| chunksize (int) | 2500000 | If `chunksize=n` with `n > 0` is set and `jobs > 1`, each AUGUSTUS instance is executed on sequence segments of the maximum size `n`. |\n| overlap (int) | 500000 | If `overlap=n` with `n > 1` is set and `jobs > 1`, each AUGUSTUS instance is executed on sequence segments of size `chunksize` and the segments overlap by `n`. |\n| partitionHints (bool) | False | If this option is set to True, a hints file is given and `jobs > 1`, then the hints file is split into appropriate pieces for the respective AUGUSTUS jobs. |\n| minSplitSize (int) | 1000000 | The input fasta file is spilt to at least `minSplitSize=n` base pairs. Set `n=0` to split the input in single sequence files. |\n| partitionLargeSequences (bool) | False | Parallelize large sequences by automatically setting the AUGUSTUS parameters `predictionStart` and `predictionEnd` based on the given values for `chunksize` and `overlap`. |\n| maxSeqSize (int) | 3500000 | The maximum length of a sequence from which the sequence is started to be partitioned. To turn on the paritioning `partitionLargeSequences=True` must be set|\n| debugOutputDir (string) | None | If the directory is specified, all generated files, i.e. the split of the input file and intermediate results, as well as the generated AUGUSTUS command lines are stored there. This option works only for the parallelization, i. e. `jobs > 1` is set. |\n| path_to_bin (string) | None | Sets the path to the desired executable version of AUGUSTUS when `augustus.predict()` is called or etraining when `etraining.train()` is called. The path is not saved for further executions.|\n\nTo redirect the output to a file the AUGUSTUS parameters `outfile` and `errfile` can be used as for the default case.\n\n## Configuration\nThe paths to the `augustus` and `etraining` binaries be configured. This path is only used if the Pygustus parameter `path_to_bin` is not specified. This configuration is saved until the next change. The configuration is identical for `pygustus.etraining` and `pygustus.augustus`, so that the following example is restricted to `pygustus.augustus`.\n\n### Read the configured path\nTo get the the currently configured path to the executable of AUGUSTUS you can proceed as follows.\n~~~\nfrom pygustus import augustus\n\naugustus.config_get_bin()\n~~~\n\n### Update the path to the binary\nTo update the currently configured path to the executable of AUGUSTUS you can proceed as follows.\n~~~\naugustus.config_set_bin(path/to/augustus)\n~~~\n\n### Set the default binary\nTo set the default binary you can proceed as follows.\n~~~\naugustus.config_set_default_bin()\n~~~\nThis method sets the configured path to the AUGUSTUS executable to `augustus`. This should exist if AUGUSTUS is properly installed on the system.\n\nAs mentioned earlier, the configured path can be overridden by specifying the Pygustus parameter `path_to_bin` for the current prediction with augustus or the current training with etraining.\n\n## Help\nTo have easy access to the AUGUSTUS and Pygustus help system, the following methods are available.\n\n| Method | Description |\n| ------ | ----------- |\n| help() | Shows usage information about the Pygustus wrapper and its parameters. |\n| show_aug_help() | Shows the help output of AUGUSTUS, equivalent to the AUGUSTUS call with the parameter `--help`.|\n| show_aug_paramlist() | Shows all possible parameter names of AUGUSTUS, equivalent to the AUGUSTUS call with the parameter `--paramlist`.|\n| show_species_info() | Shows species information of AUGUSTUS, equivalent to the AUGUSTUS call with the parameter `--species=help`.|\n\nUsage example\n~~~\nfrom pygustus import augustus\n\naugustus.help()\n~~~\n\n# Examples\nThe use of Pygustus is also demonstrated with an executable Python script and a Jupyter notebook. The script assumes that Pygustus and AUGUSTUS are installed as described above.\n\n## Executable example\nThe following command lines install required dependencies, download the script and execute it. The script creates a folder structure in the working directory and downloads required data. After that different AUGUSTUS prediction examples are executed with Pygtustus.\n~~~\npip install wget\nwget https://raw.githubusercontent.com/Gaius-Augustus/pygustus/main/examples/aug_run_examples.py\nchmod +x aug_run_examples.py\n./aug_run_examples.py\n~~~\nAfter execution, the debug folder contains the generated AUGUSTUS command lines as well as the split input files for parallel execution.\n\n## Jupyter notebook\nHow the output of the examples should look like can also be taken from a Jupyter [notebook](https://github.com/Gaius-Augustus/pygustus/blob/main/examples/run_examples.ipynb).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Gaius-Augustus/pygustus/zipball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Gaius-Augustus/pygustus",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pygustus",
    "package_url": "https://pypi.org/project/pygustus/",
    "platform": null,
    "project_url": "https://pypi.org/project/pygustus/",
    "project_urls": {
      "Download": "https://github.com/Gaius-Augustus/pygustus/zipball/master",
      "Homepage": "https://github.com/Gaius-Augustus/pygustus"
    },
    "release_url": "https://pypi.org/project/pygustus/0.8.3/",
    "requires_dist": [
      "biopython"
    ],
    "requires_python": "",
    "summary": "Python wrapper for AUGUSTUS.",
    "version": "0.8.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17080510,
  "releases": {
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b39438c4642ab197b47350fefe2120976813cd3099b862750b401262c4688feb",
          "md5": "5973f820c6da37a5ab7918754d3f0136",
          "sha256": "b38c4c767f8e05cdce913315d5c207bccecf5f022a624ea15c455efd70a2efb1"
        },
        "downloads": -1,
        "filename": "pygustus-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5973f820c6da37a5ab7918754d3f0136",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35882,
        "upload_time": "2021-07-26T12:28:18",
        "upload_time_iso_8601": "2021-07-26T12:28:18.463701Z",
        "url": "https://files.pythonhosted.org/packages/b3/94/38c4642ab197b47350fefe2120976813cd3099b862750b401262c4688feb/pygustus-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0997bb3404af15cf64e47ec03398e8286803012dcda457e09aecacdac5bfb08",
          "md5": "edb5c52f3619dd04f5d5eac083cd43b8",
          "sha256": "6d9f1fcda1f3747573dea59a59be67504b073bdff96a2d09f0a6a8c5e9dabe6c"
        },
        "downloads": -1,
        "filename": "pygustus-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "edb5c52f3619dd04f5d5eac083cd43b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33563,
        "upload_time": "2021-07-26T12:28:19",
        "upload_time_iso_8601": "2021-07-26T12:28:19.410474Z",
        "url": "https://files.pythonhosted.org/packages/c0/99/7bb3404af15cf64e47ec03398e8286803012dcda457e09aecacdac5bfb08/pygustus-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19d454e6d10d4ff54229d6b7ecd68e54c9b00949f975b6d35adebc0a7d358071",
          "md5": "7f082900acf538d9dc6b3548e3202bd0",
          "sha256": "3a28b789911f74a2761bc1b201f1fa5ef98c9243ed443b9be7eb85140641727f"
        },
        "downloads": -1,
        "filename": "pygustus-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f082900acf538d9dc6b3548e3202bd0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36273,
        "upload_time": "2021-08-23T11:21:58",
        "upload_time_iso_8601": "2021-08-23T11:21:58.747966Z",
        "url": "https://files.pythonhosted.org/packages/19/d4/54e6d10d4ff54229d6b7ecd68e54c9b00949f975b6d35adebc0a7d358071/pygustus-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37bcdcdbd52c9f699b02b8ab2a4141c4027e2346f432a5caca68393b1ff6db12",
          "md5": "5c9e3e6f4b9667f6fa40a0c7f27b0be3",
          "sha256": "b61995dd079fcf4f747773ad9147742d254e53369f898317cdaa4a18b81a7617"
        },
        "downloads": -1,
        "filename": "pygustus-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5c9e3e6f4b9667f6fa40a0c7f27b0be3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33979,
        "upload_time": "2021-08-23T11:22:00",
        "upload_time_iso_8601": "2021-08-23T11:22:00.794669Z",
        "url": "https://files.pythonhosted.org/packages/37/bc/dcdbd52c9f699b02b8ab2a4141c4027e2346f432a5caca68393b1ff6db12/pygustus-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0206a6bdf2291e69a3dd92ac584557bd2b1d51184eb60b4491f5859bc119d4ea",
          "md5": "70a540ac109f67dfdfe1e1e95058333c",
          "sha256": "d9ad4234691f9c1507f973bc60f75c638c0611db40e5a4aae43319a36dbaa71a"
        },
        "downloads": -1,
        "filename": "pygustus-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70a540ac109f67dfdfe1e1e95058333c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36415,
        "upload_time": "2023-02-24T15:54:24",
        "upload_time_iso_8601": "2023-02-24T15:54:24.682077Z",
        "url": "https://files.pythonhosted.org/packages/02/06/a6bdf2291e69a3dd92ac584557bd2b1d51184eb60b4491f5859bc119d4ea/pygustus-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4806cad63c1470e0cbfab62d431f03419f53372f9dbb1d2c4530467e1b72ba9a",
          "md5": "ba936c75a67f01b3ede5a80da01d0201",
          "sha256": "6515403089e9ba1e4140d429a9d8cfc252e407ca1ab6037cec550466ff8aa089"
        },
        "downloads": -1,
        "filename": "pygustus-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ba936c75a67f01b3ede5a80da01d0201",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34317,
        "upload_time": "2023-02-24T15:54:26",
        "upload_time_iso_8601": "2023-02-24T15:54:26.241910Z",
        "url": "https://files.pythonhosted.org/packages/48/06/cad63c1470e0cbfab62d431f03419f53372f9dbb1d2c4530467e1b72ba9a/pygustus-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c138714d43a6e6b8d9fe79abf30b3a46cee37bcacbf2e0ad866122fc8054f5a",
          "md5": "f6713fdaaf8799486871cda23964afe4",
          "sha256": "b70303cba0099087be468d41ae2612be98c906b0dcc630a1b35764dd38ced707"
        },
        "downloads": -1,
        "filename": "pygustus-0.8.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6713fdaaf8799486871cda23964afe4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 37002,
        "upload_time": "2023-02-28T11:03:06",
        "upload_time_iso_8601": "2023-02-28T11:03:06.422374Z",
        "url": "https://files.pythonhosted.org/packages/7c/13/8714d43a6e6b8d9fe79abf30b3a46cee37bcacbf2e0ad866122fc8054f5a/pygustus-0.8.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8830194131f252859a83a2f337ecb5e0635b89450f59a3365f4eb44826be172c",
          "md5": "0b1ce972acda8740ce8ecdfbab2433a1",
          "sha256": "a81ed4c56f8c2fa76580170069e82576caacf81ecd76b06cda6a0ef1983823cc"
        },
        "downloads": -1,
        "filename": "pygustus-0.8.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0b1ce972acda8740ce8ecdfbab2433a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34882,
        "upload_time": "2023-02-28T11:03:08",
        "upload_time_iso_8601": "2023-02-28T11:03:08.072270Z",
        "url": "https://files.pythonhosted.org/packages/88/30/194131f252859a83a2f337ecb5e0635b89450f59a3365f4eb44826be172c/pygustus-0.8.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7c138714d43a6e6b8d9fe79abf30b3a46cee37bcacbf2e0ad866122fc8054f5a",
        "md5": "f6713fdaaf8799486871cda23964afe4",
        "sha256": "b70303cba0099087be468d41ae2612be98c906b0dcc630a1b35764dd38ced707"
      },
      "downloads": -1,
      "filename": "pygustus-0.8.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f6713fdaaf8799486871cda23964afe4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 37002,
      "upload_time": "2023-02-28T11:03:06",
      "upload_time_iso_8601": "2023-02-28T11:03:06.422374Z",
      "url": "https://files.pythonhosted.org/packages/7c/13/8714d43a6e6b8d9fe79abf30b3a46cee37bcacbf2e0ad866122fc8054f5a/pygustus-0.8.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8830194131f252859a83a2f337ecb5e0635b89450f59a3365f4eb44826be172c",
        "md5": "0b1ce972acda8740ce8ecdfbab2433a1",
        "sha256": "a81ed4c56f8c2fa76580170069e82576caacf81ecd76b06cda6a0ef1983823cc"
      },
      "downloads": -1,
      "filename": "pygustus-0.8.3.tar.gz",
      "has_sig": false,
      "md5_digest": "0b1ce972acda8740ce8ecdfbab2433a1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 34882,
      "upload_time": "2023-02-28T11:03:08",
      "upload_time_iso_8601": "2023-02-28T11:03:08.072270Z",
      "url": "https://files.pythonhosted.org/packages/88/30/194131f252859a83a2f337ecb5e0635b89450f59a3365f4eb44826be172c/pygustus-0.8.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}