{
  "info": {
    "author": "Jean-Etienne Castagnede",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "![Tests](https://github.com/submarcos/django-vectortiles/workflows/Python%20/%20Django%20matrix%20test/badge.svg)\n[![Coverage](https://codecov.io/gh/submarcos/django-vectortiles/branch/master/graph/badge.svg)](https://codecov.io/gh/submarcos/django-vectortiles)\n\n![Python Version](https://img.shields.io/badge/python-%3E%3D%203.6-blue.svg)\n![Django Version](https://img.shields.io/badge/django-%3E%3D%202.2-blue.svg)\n\n# Generate MapBox VectorTiles from GeoDjango models\n\n## Directly with PostgreSQL/PostGIS 2.4+ or python native mapbox_vector_tile\n\n## [Read full documentation](https://django-vectortiles.readthedocs.io/)\n\n### Installation\n\n#### Basic\n```bash\npip install django-vectortiles\n```\n\n* Without any other option, use only vectortiles.postgis\n* Ensure you have psycopg2 set and installed\n\n#### If you don't want to use Postgis\n```bash\npip install django-vectortiles[mapbox]\n```\n* This will incude mapbox_vector_tiles package and its dependencies\n* Use only vectortiles.mapbox\n\n### Examples\n\n* assuming you have django.contrib.gis in your INSTALLED_APPS and a gis compatible database backend\n\n```python\n# in your app models.py\n\nfrom django.contrib.gis.db import models\n\n\nclass Layer(models.Model):\n    name = models.CharField(max_length=250)\n\n\nclass Feature(models.Model):\n    geom = models.GeometryField(srid=4326)\n    name = models.CharField(max_length=250)\n    layer = models.ForeignKey(Layer, on_delete=models.CASCADE, related_name='features')\n```\n\n\n#### Simple model:\n\n```python\n# in your view file\n\nfrom django.views.generic import ListView\nfrom vectortiles.postgis.views import MVTView\nfrom yourapp.models import Feature\n\n\nclass FeatureTileView(MVTView, ListView):\n    model = Feature\n    vector_tile_layer_name = \"features\"\n    vector_tile_fields = ('other_field_to_include', )\n\n\n# in your urls file\nfrom django.urls import path\nfrom yourapp import views\n\n\nurlpatterns = [\n    ...\n    path('tiles/<int:z>/<int:x>/<int:y>', views.FeatureTileView.as_view(), name=\"feature-tile\"),\n    ...\n]\n```\n\n#### Related model:\n\n```python\n# in your view file\n\nfrom django.views.generic import DetailView\nfrom vectortiles.mixins import BaseVectorTileView\nfrom vectortiles.postgis.views import MVTView\nfrom yourapp.models import Layer\n\n\nclass LayerTileView(MVTView, DetailView):\n    model = Layer\n    vector_tile_fields = ('other_field_to_include', )\n\n    def get_vector_tile_layer_name(self):\n        return self.get_object().name\n\n    def get_vector_tile_queryset(self):\n        return self.get_object().features.all()\n\n    def get(self, request, *args, **kwargs):\n        self.object = self.get_object()\n        return BaseVectorTileView.get(self,request=request, z=kwargs.get('z'), x=kwargs.get('x'), y=kwargs.get('y'))\n\n\n# in your urls file\nfrom django.urls import path\nfrom yourapp import views\n\n\nurlpatterns = [\n    ...\n    path('layer/<int:pk>/tile/<int:z>/<int:x>/<int:y>', views.LayerTileView.as_view(), name=\"layer-tile\"),\n    ...\n]\n```\n\n#### Usage without PostgreSQL / PostGIS\n\nJust import and use vectortiles.mapbox.view.MVTView instead of vectortiles.postgis.view.MVTView\n\n#### Usage with DRF\n\ndjango-vectortiles can be used with DRF if `renderer_classes` of the view is overridden (see [DRF docs](https://www.django-rest-framework.org/api-guide/renderers/#custom-renderers)). Simply use the right BaseMixin and action on viewsets, or directly a GET method in an APIView, i.e.:\n\n```python\nfrom rest_framework import renderers, views\nfrom vectortiles.postgis.views import MVTView\n\n\nclass MVTRenderer(renderers.BaseRenderer):\n    media_type = \"application/vnd.mapbox-vector-tile\"\n    format = \"pbf\"\n\n    def render(self, data, accepted_media_type=None, renderer_context=None):\n        return data\n\n\nclass TileServerView(MVTView, views.APIView):\n    renderer_classes = [MVTRenderer]\n\n    def get(...): ...\n```\n\n#### Development\n\n##### With docker and docker-compose\n\n```bash\ndocker pull makinacorpus/geodjango:bionic-3.6\ndocker-compose build\n# docker-compose up\ndocker-compose run /code/venv/bin/python ./manage.py test\n```\n\n##### Local\n\n* Install python and django requirements (python 3.6+, django 2.2+)\n* Install geodjango requirements\n* Have a postgresql / postgis 2.4+ enabled database\n* Use a virtualenv\n```bash\npip install .[dev] -U\n```\n\n\nCHANGELOG\n=========\n\n0.2.0       (2022-10-17)\n------------------------\n\n* Possibly breaking change:\n  * Base Mixin method get_tile use now class attributes for extent / buffer or clip_geom. Remove this parameters in your sub class method if needed.\n\n* Bug fixes:\n  * Correct usage for vector_tile_extent / vector_tile_buffer and vector_tile_clip_geom\n  * Clipped geom is now working for mapbox\n\n* Support Python 3.10 and django 4.1\n  \n\n0.1.0       (2021-02-25)\n------------------------\n\nFirst beta release\n\n* Add attribute to limit features in tile (unable to use a sliced queryset)\n\n\n0.0.3       (2021-02-18)\n------------------------\n\n* Delete useless Envelope transformation because django implicitly transform on intersects lookup (thanks to StefanBrand)\n* Avoid useless queryset evaluation in some cases (thanks to StefanBrand)\n\n\n0.0.2       (2021-02-12)\n------------------------\n\n* Fix required 'fields' key in tilejson. Will be filled later\n* Fix generated subquery to deal with DateField (thanks to StefanBrand)\n\n\n0.0.1       (2020-10-22)\n------------------------\n\n* First Release\n  * Generate Vector Tiles from django models\n      * in python\n      * with PostGIS\n  * Generate associated TileJSON\n  * Default views to handle Vector tiles and tilejson\n \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/submarcos/django-vectortiles.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-vectortiles",
    "package_url": "https://pypi.org/project/django-vectortiles/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-vectortiles/",
    "project_urls": {
      "Homepage": "https://github.com/submarcos/django-vectortiles.git"
    },
    "release_url": "https://pypi.org/project/django-vectortiles/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Django vector tile generation",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15434711,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c6c3a6055668187e77bb0dde01127bda3ddd2633990b67b3225356ed96d97fb",
          "md5": "a1bf66feb1da4e6f78c3fc86fca885d1",
          "sha256": "9d7097a25312b623e6211c356047ee3ebbb74e319d84242869bfba3e39da7076"
        },
        "downloads": -1,
        "filename": "django-vectortiles-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a1bf66feb1da4e6f78c3fc86fca885d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6807,
        "upload_time": "2020-10-23T13:45:52",
        "upload_time_iso_8601": "2020-10-23T13:45:52.390772Z",
        "url": "https://files.pythonhosted.org/packages/4c/6c/3a6055668187e77bb0dde01127bda3ddd2633990b67b3225356ed96d97fb/django-vectortiles-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6eac584a16e69de1a9a7d283720af04c10b16082ae0531a733213ed3da89f766",
          "md5": "97a42ce90976f662a86a4f5f753641da",
          "sha256": "6a5b70b2c3bc7f20e34ac08da0b9e8387116f67543fcc0b24fd5131301b668f6"
        },
        "downloads": -1,
        "filename": "django-vectortiles-0.0.1.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "97a42ce90976f662a86a4f5f753641da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5617,
        "upload_time": "2020-10-20T14:33:35",
        "upload_time_iso_8601": "2020-10-20T14:33:35.762780Z",
        "url": "https://files.pythonhosted.org/packages/6e/ac/584a16e69de1a9a7d283720af04c10b16082ae0531a733213ed3da89f766/django-vectortiles-0.0.1.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e8e767920694eb14e8063d8c44bba0f41ab1fb00fbedd12344309cc319256a4",
          "md5": "de4f39b62ff31fc3006b1494f5d66439",
          "sha256": "8f3ed23e74c3859e2b825fee39f8217e2575ebfc325453cc4cd2548f78fae2e1"
        },
        "downloads": -1,
        "filename": "django-vectortiles-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "de4f39b62ff31fc3006b1494f5d66439",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7862,
        "upload_time": "2021-02-15T09:07:06",
        "upload_time_iso_8601": "2021-02-15T09:07:06.503061Z",
        "url": "https://files.pythonhosted.org/packages/8e/8e/767920694eb14e8063d8c44bba0f41ab1fb00fbedd12344309cc319256a4/django-vectortiles-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c256d528aba1fdd9b463804fa0678a0f6fc8127de490beede6155f399356f9a",
          "md5": "2241ae48c40552ad9219165a93635021",
          "sha256": "ebe9c6876ea95540b6ab3729144d023dc77f4260bcb7ece5346e4bf8ad3744b3"
        },
        "downloads": -1,
        "filename": "django-vectortiles-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2241ae48c40552ad9219165a93635021",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6627,
        "upload_time": "2021-02-18T15:10:10",
        "upload_time_iso_8601": "2021-02-18T15:10:10.384482Z",
        "url": "https://files.pythonhosted.org/packages/9c/25/6d528aba1fdd9b463804fa0678a0f6fc8127de490beede6155f399356f9a/django-vectortiles-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98d2d0946aeb8e2a734b3f6c936e4c1ffd3a0313cb68bacd7562831d111ee652",
          "md5": "fb72f4f965cedcd182577cee38a26774",
          "sha256": "c3f257fb46c2a37ed609f6170f1ab6af8401ad4beb21a4c0a2493f96ec5828ba"
        },
        "downloads": -1,
        "filename": "django-vectortiles-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fb72f4f965cedcd182577cee38a26774",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6758,
        "upload_time": "2021-02-25T14:47:06",
        "upload_time_iso_8601": "2021-02-25T14:47:06.944278Z",
        "url": "https://files.pythonhosted.org/packages/98/d2/d0946aeb8e2a734b3f6c936e4c1ffd3a0313cb68bacd7562831d111ee652/django-vectortiles-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc2bfc14307a6104373539da0c5ff366490e2c94e0df6a5c0c6a7e434d39c060",
          "md5": "d69b3e43cb26f23aa9c6b3a8cf5c32ff",
          "sha256": "9710492bb77328b202dcbd889b65f9d08807e7dc061a5593d86cfbf1ea545caf"
        },
        "downloads": -1,
        "filename": "django-vectortiles-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d69b3e43cb26f23aa9c6b3a8cf5c32ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6875,
        "upload_time": "2022-10-17T10:04:24",
        "upload_time_iso_8601": "2022-10-17T10:04:24.998568Z",
        "url": "https://files.pythonhosted.org/packages/cc/2b/fc14307a6104373539da0c5ff366490e2c94e0df6a5c0c6a7e434d39c060/django-vectortiles-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc2bfc14307a6104373539da0c5ff366490e2c94e0df6a5c0c6a7e434d39c060",
        "md5": "d69b3e43cb26f23aa9c6b3a8cf5c32ff",
        "sha256": "9710492bb77328b202dcbd889b65f9d08807e7dc061a5593d86cfbf1ea545caf"
      },
      "downloads": -1,
      "filename": "django-vectortiles-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d69b3e43cb26f23aa9c6b3a8cf5c32ff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6875,
      "upload_time": "2022-10-17T10:04:24",
      "upload_time_iso_8601": "2022-10-17T10:04:24.998568Z",
      "url": "https://files.pythonhosted.org/packages/cc/2b/fc14307a6104373539da0c5ff366490e2c94e0df6a5c0c6a7e434d39c060/django-vectortiles-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}