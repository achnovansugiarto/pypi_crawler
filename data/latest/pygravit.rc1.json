{
  "info": {
    "author": "Frontalvlad",
    "author_email": "frontalvlad@vk.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<p align=\"center\">\r\n      <img src=\"https://cdn.discordapp.com/attachments/1084489981193621580/1089661272682934303/hero.png\" alt=\"Project Logo\" width=\"512\" height=\"512\">\r\n</p>\r\n\r\n# PyGravit\r\nModule for managing accounts in GravitLauncher Database\r\n\r\n## About\r\nThe library is designed to manage the database of GravitLauncher players. This library is not considered official. It has four methods for managing players, which are provided below, as well as in the examples. There are also error handlers, which can also be found in the documentation below.\r\n\r\n\r\n## Installation\r\n\r\n1. Update your pip\r\n2. Install the pygravit package either via pip or from the pypi website\r\n**Installation command**\r\n```powershell\r\npython -m pip install pygravit \r\n```\r\n3. Import it into your project\r\n**Imports**\r\n```python\r\nfrom pygravit import PyGravit\r\nfrom pygravit import (DatabaseConnectionError, NicknameInDatabaseError, NicknameNotInDatabaseError, AllowedCharactersNicknameError, ClassDatabaseNotConnectionError, NicknameLengthError, ParamNotFoundError, DataError)\r\n```\r\n4. Check out the documentation for further work.\r\n\r\n\r\n## Documentation\r\n### 1. Examples\r\n**api_gravitpy_example.py**\r\n```python\r\nfrom pygravit import PyGravit\r\n\r\n# Connecting to a database\r\nGravitLauncher = PyGravit(db=\"dbname\", host=\"ip/domainname\", port=3306, user=\"username\", passwd=\"password\", table=\"tablename (default users)\")\r\n\r\n# Creating a player in the database\r\nGravitLauncher.player_create(\"Nickname\", \"Password\")\r\n\r\n# Removing a player from the database\r\nGravitLauncher.player_delete(\"Nickname\")\r\n\r\n# Changing the player (the parameters are in the GravitLauncher documentation as well as in the database itself)\r\nGravitLauncher.player_change(\"Nickname\", \"Param\", \"Value\")\r\n\r\n# Getting the player parameter (the parameters are in the GravitLauncher documentation as well as in the database itself)\r\nGravitLauncher.player_get(\"Nickname\", \"Param\")\r\n```\r\n\r\n**custom_tablename.py**\r\n```python\r\nfrom pygravit import PyGravit\r\n\r\nGravitLauncher = PyGravit(db=\"dbname\",\r\n                                host=\"ip/domainname\",\r\n                                port=3306,\r\n                                user=\"username\",\r\n                                passwd=\"password\",\r\n                                table=\"server_users\" ) #table default \"users\"\r\n\r\n# Creating two tables: server_users and server_users_hwids (default: users and users_hwids)\r\n```\r\n\r\n**except_processing.py**\r\n```python\r\nfrom pygravit import PyGravit\r\nfrom pygravit import (DatabaseConnectionError, NicknameInDatabaseError, NicknameNotInDatabaseError,\r\n                                AllowedCharactersNicknameError, ClassDatabaseNotConnectionError, NicknameLengthError,\r\n                                ParamNotFoundError, DataError)\r\ntry:\r\n    GravitLauncher = PyGravit(db=\"dbname\", host=\"ip/domainname\", port=3306, user=\"username\", passwd=\"password\", table=\"tablename (default users)\")\r\nexcept DatabaseConnectionError as e: \r\n    print(e)\r\n\r\ntry:\r\n    GravitLauncher.player_create(\"Nickname\", \"Password\")\r\nexcept (NicknameInDatabaseError or AllowedCharactersNicknameError or NicknameLengthError or DataError or ClassDatabaseNotConnectionError) as e:\r\n    print(e)\r\n\r\ntry:\r\n    GravitLauncher.player_delete(\"Nickname\")\r\nexcept (NicknameNotInDatabaseError or DataError or ClassDatabaseNotConnectionError) as e:\r\n    print(e)\r\n\r\ntry:\r\n    GravitLauncher.player_change(\"Nickname\", \"Param\", \"Value\")\r\n    GravitLauncher.player_get(\"Nickname\", \"Param\")\r\nexcept (NicknameNotInDatabaseError or ParamNotFoundError or DataError or ClassDatabaseNotConnectionError) as e:\r\n    print(e)\r\n```\r\n\r\n\r\n### 2. Exceptions\r\n```\r\nDatabaseConnectionError - Failed to connect to database\r\nNicknameInDatabaseError - Nickname already exists in the database\r\nNicknameNotInDatabaseError - Nickname not found in database\r\nAllowedCharactersNicknameError - Nickname has forbidden characters (forbidden in normal minecraft)\r\nClassDatabaseNotConnectionError - The database object is not a MySQLConnection\r\nNicknameLengthError - Nickname does not meet standard length (either short or long)\r\nParamNotFoundError - The player parameter was not found in the database (used to get and change values in the database)\r\nDataError - Failed to send data to database\r\n```\r\n\r\n\r\n### 3. Classes and Methods\r\n#### Classes\r\n```python\r\nPyGravit(db, user, passwd, host, port) -  An object class for connecting to a database\r\n```\r\n#### Methods\r\n```python\r\nplayer_create(nickname, password) - Creating a player in the database\r\nplayer_delete(nickname) - Removing a player from the database\r\nplayer_change(nickname, param, value) - Changing the player\r\nplayer_get(nickname, param) - Getting the player parameter\r\n```\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Frontalvlad-GitHub/PyGravit/releases/tag/v0.0.1",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Frontalvlad-GitHub/PyGravit",
    "keywords": "",
    "license": "GNU General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pygravit",
    "package_url": "https://pypi.org/project/pygravit/",
    "platform": null,
    "project_url": "https://pypi.org/project/pygravit/",
    "project_urls": {
      "Download": "https://github.com/Frontalvlad-GitHub/PyGravit/releases/tag/v0.0.1",
      "Homepage": "https://github.com/Frontalvlad-GitHub/PyGravit"
    },
    "release_url": "https://pypi.org/project/pygravit/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Module for managing accounts in GravitLauncher Database",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17464420,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7dc8eb486e11e9bcc9935bc439d2e152c4ce7540a9c8f9a899804ccbf56e77b8",
          "md5": "9c1a4ea89e3783be6be28741b10cb8c7",
          "sha256": "b4e42e5b0ce48f884da401bccd9228db9fef08210933cae04222c8e99f5f9065"
        },
        "downloads": -1,
        "filename": "pygravit-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9c1a4ea89e3783be6be28741b10cb8c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17995,
        "upload_time": "2023-03-27T17:12:33",
        "upload_time_iso_8601": "2023-03-27T17:12:33.594233Z",
        "url": "https://files.pythonhosted.org/packages/7d/c8/eb486e11e9bcc9935bc439d2e152c4ce7540a9c8f9a899804ccbf56e77b8/pygravit-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7dc8eb486e11e9bcc9935bc439d2e152c4ce7540a9c8f9a899804ccbf56e77b8",
        "md5": "9c1a4ea89e3783be6be28741b10cb8c7",
        "sha256": "b4e42e5b0ce48f884da401bccd9228db9fef08210933cae04222c8e99f5f9065"
      },
      "downloads": -1,
      "filename": "pygravit-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9c1a4ea89e3783be6be28741b10cb8c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17995,
      "upload_time": "2023-03-27T17:12:33",
      "upload_time_iso_8601": "2023-03-27T17:12:33.594233Z",
      "url": "https://files.pythonhosted.org/packages/7d/c8/eb486e11e9bcc9935bc439d2e152c4ce7540a9c8f9a899804ccbf56e77b8/pygravit-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}