{
  "info": {
    "author": "Johannes Altmanninger",
    "author_email": "aclopte@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Version Control",
      "Topic :: Software Development :: Version Control :: Git"
    ],
    "description": "# git branchless\n\n[![PyPi](https://img.shields.io/pypi/v/git-branchless.svg)](https://pypi.org/project/git-branchless)\n\n## Motivation\n\nSometimes, I am working on multiple changes to a [Git] repository.  I want\nto combine all of my changes in a single branch, but send them upstream in\nsmall, reviewable chunks. Refer to [the related articles](#related-articles)\nfor some advantages of this workflow.\n\nGit already supports this workflow via [git format-patch] and [git send-email],\nhowever, many projects prefer to receive patches as pull requests.  To make\nproposed changes easy to review, you'll want to submit a separate pull\nrequest for each independent change.  With a branchless workflow, the sole\nlocal branch typically contains multiple independent changes. To submit\nthose as pull requests, you need to create a separate branch for each change.\nRunning `git branchless` creates the desired branches without requiring you\nto switch back and forth between branches. This allows you to submit small\npull requests while enjoying the benefits of a branchless workflow. After\nmaking any changes to your worktree's branch you can easily update the\ngenerated branches: just re-run `git branchless`.\n\n## Installation\n\n`git branchless` currently depends on an unreleased version of [git revise].\n\n```sh\n$ pip install --user git-revise@git+https://github.com/mystor/git-revise.git@e27bc1631f5da6041c2fa7e3d1f5a9fecfb3ef57\n$ pip install --user git-branchless\n```\n\n## Usage\n\nCreate some commits with commit messages starting with `[<topic>] ` where\n`<topic>` is a valid branch name.  Then run `git branchless` to create a branch\n`<topic>` with the given commits.\n\nFor example, if you have created a commit history like\n\n    $ git log --graph --oneline\n    * 2708e12 (HEAD -> master) [my-awesome-feature] Initial support for feature\n    * c6dd3ab [my-awesome-feature] Some more work on feature\n    * 683de4b [some-unrelated-fix] Unrelated fix\n    * 3eee379 Local commit without topic tag\n    * 2ec4d51 (origin/master) Initial commit\n\nThen this command will (re)create two branches:\n\n    $ git branchless\n    $ git log --graph --oneline --all\n    * 2708e12 (HEAD -> master) [my-awesome-feature] Initial support for feature\n    * c6dd3ab [my-awesome-feature] Some more work on feature\n    * 683de4b [some-unrelated-fix] Unrelated fix\n    * 3eee379 Local commit without topic tag\n    | * 7645890 (my-awesome-feature) Initial support for feature\n    | * e420fd6 Some more work on feature\n    |/\n    | * d5f4bb2 (some-unrelated-fix) Unrelated fix\n    |/\n    * 2ec4d51 (origin/master) Initial commit\n\nBy default, `git branchless` looks only at commits in the range\n`@{upstream}..HEAD`.  It ignores commits whose subject does not start with\na topic tag.\n\nCreated branches based on the common ancestor of your branch and the upstream\nbranch, that is, `git merge-base @{upstream} HEAD`.\n\nTo avoid conflicts, you can specify dependencies between branches.\nFor example use `[child:parent1:parent2]` to base `child` off both `parent1`\nand `parent2`. The order here does not matter because it will be determined\nby which topic occurs first in the commit log.\n\nBy default, when dependencies are added to generated branches, the commit\nmessage will include their topic tags. You can turn this off for all branches\nwith the `--trim-subject` option, or for a single dependency by adding the\n`+` character before a dependency specification (like `[child:+parent]`).\n\nIf there is a merge conflict when applying a commit, you will be shown\npotentially missing dependencies. You can either add the missing dependencies,\nor resolve the conflict. You can tell Git to remember your conflict resolution\nby enabling `git rerere` (use `git config rerere.enabled true; git config\nrerere.autoUpdate true`).\n\nInstead of the default topic tag delimiters (`[` and `]`), you can\nset Git configuration values `branchless.subjectPrefixPrefix` and\n`branchless.subjectPrefixSuffix`, respectively.\n\n## Integrating Commits from Other Branches\n\nYou can use [git-branchless-pick](./git-branchless-pick) to integrate\nother commit ranges into your branch:\n\n```sh\n$ git branchless-pick ..some-branch \n```\n\nThis starts an interactive rebase, prompting you to cherry-pick all\nmissing commits from `some-branch`, prefixing their commit subjects with\n`[some-branch]`.  Old commits with such a subject are dropped, so this\nallows you to quickly update to the latest upstream version of a ref that\nhas been force-pushed.\n\nHere's how you would use this to cherry-pick GitHub pull requests:\n\n```sh\n$ git config --add remote.origin.fetch '+refs/pull/*/head:refs/remotes/origin/pr-*'\n$ git fetch origin\n$ git branchless-pick $(git merge-base origin/pr-123 HEAD)..origin/pr-123\n```\n\n## Tips\n\n- You can use [git revise] to efficiently modify your commit messages\n  to contain the `[<topic>]` tags. This command lets you edit all commit\n  messages in `@{upstream}..HEAD`.\n\n  ```sh\n  $ git revise --interactive --edit\n  ```\n\n  Like `git revise`, you can use `git branchless` during an interactive rebase.\n\n- [`git-autofixup`](https://github.com/torbiak/git-autofixup/) can eliminate\n  some of the busywork involved in creating fixup commits.\n\n## Related Articles\n\n- In [Stacked Diffs Versus Pull Requests], Jackson Gabbard\n  describes the advantages of a patch-based workflow (using [Phabricator])\n  over the one-branch-per-reviewable-change model; `git branchless` can be used\n  to implement the first workflow, even when you have to use pull-requests.\n\n- In [My unorthodox, branchless git workflow], Drew\n  DeVault explains some advantages of a branchless workflow.\n\n## Peer Projects\n\nWhile `git branchless` only offers one command and relies on standard Git\ntools for everything else, there are some tools that offer a more comprehensive\nset of commands to achieve a similar workflow:\n\n- [Stacked Git](https://stacked-git.github.io/)\n- [git ps](https://github.com/uptech/git-ps)\n- [gh-stack](https://github.com/timothyandrew/gh-stack)\n\nUnlike its peers, `git branchless` never modifies any worktree files,\nsince it uses `git revise` internally.  This makes it faster, and avoids\ninvalidating builds.\n\n## Contributing\n\nSubmit feedback at <https://github.com/krobelus/git-branchless/> or at the\n[public mailing list](https://lists.sr.ht/~krobelus/git-branchless) by\nsending email to <mailto:~krobelus/git-branchless@lists.sr.ht>.\n\n[Git]: <https://git-scm.com/>\n[git revise]: <https://github.com/mystor/git-revise/>\n[git format-patch]: <https://git-scm.com/docs/git-format-patch>\n[git send-email]: <https://git-send-email.io/>\n[Stacked Diffs Versus Pull Requests]: <https://jg.gg/2018/09/29/stacked-diffs-versus-pull-requests/>\n[My unorthodox, branchless git workflow]: <https://drewdevault.com/2020/04/06/My-weird-branchless-git-workflow.html>\n[Phabricator]: <https://www.phacility.com/>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.sr.ht/~krobelus/git-branchless/",
    "keywords": "git branch-workflow pull-request patch-stack",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "git-branchless",
    "package_url": "https://pypi.org/project/git-branchless/",
    "platform": "",
    "project_url": "https://pypi.org/project/git-branchless/",
    "project_urls": {
      "Bug Tracker": "https://github.com/krobelus/git-branchless/issues/",
      "Documentation": "https://git.sr.ht/~krobelus/git-branchless/",
      "Homepage": "https://git.sr.ht/~krobelus/git-branchless/",
      "Source Code": "https://git.sr.ht/~krobelus/git-branchless/"
    },
    "release_url": "https://pypi.org/project/git-branchless/0.0.6/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Efficiently manage Git branches without leaving your local branch",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10552485,
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea3a971f4e2f9575527ca26bfc70ab5e8bc51f8dd754923ebed9e4e2493f143b",
          "md5": "bb30e8c9f57813c5ec7389dea92fc192",
          "sha256": "eba206ff029daa7202f902bbc2aebe5006bfa7a8a38252a707b68d841a1c3a94"
        },
        "downloads": -1,
        "filename": "git_branchless-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb30e8c9f57813c5ec7389dea92fc192",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11270,
        "upload_time": "2021-04-24T18:53:22",
        "upload_time_iso_8601": "2021-04-24T18:53:22.914725Z",
        "url": "https://files.pythonhosted.org/packages/ea/3a/971f4e2f9575527ca26bfc70ab5e8bc51f8dd754923ebed9e4e2493f143b/git_branchless-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53962c9e89019b063c450b5aafc4c5d4d44a0f63d634cca4f9c87b39849ddfaf",
          "md5": "6206cf430226bf4c7e4f8148d8832c6a",
          "sha256": "abf5c4b07e86b2b7b08e01f5ab7f433c682821c6d83f46c4ece7e7bdda78b030"
        },
        "downloads": -1,
        "filename": "git-branchless-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6206cf430226bf4c7e4f8148d8832c6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10981,
        "upload_time": "2021-04-24T18:53:24",
        "upload_time_iso_8601": "2021-04-24T18:53:24.359171Z",
        "url": "https://files.pythonhosted.org/packages/53/96/2c9e89019b063c450b5aafc4c5d4d44a0f63d634cca4f9c87b39849ddfaf/git-branchless-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6beef293000e5dbf7f639c97e9cfa441589c8ffb1c6312ed3338c2f60894d96b",
          "md5": "a7584501c3217085e34c6456a52784e1",
          "sha256": "96b75be45397bcd4208ff8ca761b89eb9cd5a1df4cfa08773b85c141f6c6db61"
        },
        "downloads": -1,
        "filename": "git_branchless-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7584501c3217085e34c6456a52784e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11474,
        "upload_time": "2021-06-03T20:49:10",
        "upload_time_iso_8601": "2021-06-03T20:49:10.668936Z",
        "url": "https://files.pythonhosted.org/packages/6b/ee/f293000e5dbf7f639c97e9cfa441589c8ffb1c6312ed3338c2f60894d96b/git_branchless-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73ebc62224f163325ad72d7e7974e3de1c360f401d513a58e7e34e71a06c02a1",
          "md5": "b09eb07e4525588574ec069d2eb994e4",
          "sha256": "6a03e01f77a075daabe03ccf586acc2f54e838481ffc4afa44b5377fd60e7fd7"
        },
        "downloads": -1,
        "filename": "git-branchless-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b09eb07e4525588574ec069d2eb994e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11093,
        "upload_time": "2021-06-03T20:49:12",
        "upload_time_iso_8601": "2021-06-03T20:49:12.225035Z",
        "url": "https://files.pythonhosted.org/packages/73/eb/c62224f163325ad72d7e7974e3de1c360f401d513a58e7e34e71a06c02a1/git-branchless-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6beef293000e5dbf7f639c97e9cfa441589c8ffb1c6312ed3338c2f60894d96b",
        "md5": "a7584501c3217085e34c6456a52784e1",
        "sha256": "96b75be45397bcd4208ff8ca761b89eb9cd5a1df4cfa08773b85c141f6c6db61"
      },
      "downloads": -1,
      "filename": "git_branchless-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a7584501c3217085e34c6456a52784e1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11474,
      "upload_time": "2021-06-03T20:49:10",
      "upload_time_iso_8601": "2021-06-03T20:49:10.668936Z",
      "url": "https://files.pythonhosted.org/packages/6b/ee/f293000e5dbf7f639c97e9cfa441589c8ffb1c6312ed3338c2f60894d96b/git_branchless-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "73ebc62224f163325ad72d7e7974e3de1c360f401d513a58e7e34e71a06c02a1",
        "md5": "b09eb07e4525588574ec069d2eb994e4",
        "sha256": "6a03e01f77a075daabe03ccf586acc2f54e838481ffc4afa44b5377fd60e7fd7"
      },
      "downloads": -1,
      "filename": "git-branchless-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "b09eb07e4525588574ec069d2eb994e4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11093,
      "upload_time": "2021-06-03T20:49:12",
      "upload_time_iso_8601": "2021-06-03T20:49:12.225035Z",
      "url": "https://files.pythonhosted.org/packages/73/eb/c62224f163325ad72d7e7974e3de1c360f401d513a58e7e34e71a06c02a1/git-branchless-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}