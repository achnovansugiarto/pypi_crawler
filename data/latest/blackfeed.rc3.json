{
  "info": {
    "author": "Ibragim Abubakarov",
    "author_email": "ibragim.ai95@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: File Transfer Protocol (FTP)",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "# BlackFeed\n> BlackFeed is a micro python library that allows you download and upload files concurrently.\n> You can download your files locally but you can also upload them to your cloud without writing them to disk.\n\n### Packages required\n> Installed automatically with **pip**\n- requests\n- boto3\n\n## Install\n```bash\npip install blackfeed\n```\n\n## Usage\nDownload and upload files to AWS S3\n**For this to work, AWS CLI must be configured**\n```python\nfrom blackfeed import Downloader\nfrom blackfeed.adapter import S3Adapter\n\nqueue = [\n    {\n        'url': 'https://www.example.com/path/to/image.jpg', # Required\n        'destination': 'some/key/image.jpg' # S3 key - Required \n    },{\n        'url': 'https://www.example.com/path/to/image2.jpg',\n        'destination': 'some/key/image2.jpg' \n    }\n]\n\ndownloader = Downloader(\n    S3Adapter(bucket='bucketname'),\n    multi=True, # If true, uploads files to images to S3 with multithreading\n    stateless=False # If set to False, it generates and stores md5 hashes of files in a file\n    state_id='flux_states' # name of the file where hashes will be stored (states.txt) not required\n    bulksize=200 # Number of concurrent downloads\n)\ndownloader.process(queue)\nstats = downloader.get_stats() # Returns a dict with information about the process\n```\n\n### Download files with states\nLoading states can be useful if you don't want to re-download the same file twice.\n```python\nfrom blackfeed import Downloader\nfrom blackfeed.adapter import S3Adapter\n\nqueue = [\n...\n]\n\ndownloader = Downloader(\n    S3Adapter(bucket='bucketname'),\n    multi=True,\n    stateless=False,\n    state_id='filename'\n)\n\n# You can add a callback function if needed\n# This function will be called after each bulk is processed\ndef callback(responses):\n    # response: {\n    #    'destination': destination of the file can be local or can be S3 key,\n    #    'url': URL from where the file was downloaded,\n    #    'httpcode': HTTP code returned by the server,\n    #    'status': True|False,\n    #    'content-type': Mime type of the downloaded resource Example: image/jpeg\n    # }\n    # responses: response[]\n\n    pass # Your logic\n\ndownloader.set_callback(callback)\n\ndownloader.load_states('filename') # This will load states from \"filename.txt\"\ndownloader.process(queue)\nstats = downloader.get_stats() # Statistics \n```\n\n## ElasticDownloader\n> Let's you to download/retrieve files from FTP, SFTP and HTTP/S servers easily.\n\n### Examples\n#### Downloading file from FTP \n```python\nfrom blackfeed import ElasticDownloader\n\nuri = 'ftp://user:password@ftp.server.com/path/to/file.csv'\n\nretriever = ElasticDownloader()\nres = retriever.download(uri, localpath='/tmp/myfile.csv') # localfile is optional\n# .download() function returns False if there was an error or return the local path of the downloaded file if it was a success.\nprint(res)\n```\n```bash\n/tmp/myfile.csv\n```\n\n### Retrieving binary content of file from FTP\n```python\nfrom blackfeed import ElasticDownloader\n\nuri = 'ftp://user:password@ftp.server.com/path/to/file.csv'\n\nretriever = ElasticDownloader()\nres = retriever.retrieve(uri) # Return type: io.BytesIO | False\n\nwith open('/tmp/myfile.csv', 'wb') as f:\n    f.write(res.getvalue())\n```\n**ElasticDownloader** can handle FTP, SFTP and HTTP URIs automatically.\nUse the method **download** to download file locally and use the **retrieve** method to get the binary content of a file.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ibra-akv/blackfeed",
    "keywords": "",
    "license": "",
    "maintainer": "Ibragim Abubakarov",
    "maintainer_email": "ibragim.ai95@gmail.com",
    "name": "blackfeed",
    "package_url": "https://pypi.org/project/blackfeed/",
    "platform": null,
    "project_url": "https://pypi.org/project/blackfeed/",
    "project_urls": {
      "Homepage": "https://github.com/ibra-akv/blackfeed"
    },
    "release_url": "https://pypi.org/project/blackfeed/0.0.19/",
    "requires_dist": [
      "boto3",
      "pysftp",
      "requests"
    ],
    "requires_python": "",
    "summary": "A python package that allows the download of thousands of files concurrently",
    "version": "0.0.19",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13675312,
  "releases": {
    "0.0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf42f3afd1ced6050919ea0f4cf49681fb76ce9a95e9d53b2186595b6d78da06",
          "md5": "3913e964dc0e4d11da2407385c2bbd52",
          "sha256": "b79b611c631c123f183857bac0a592053ba8ded5330c9826d4177420c9f2fe67"
        },
        "downloads": -1,
        "filename": "blackfeed-0.0.17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3913e964dc0e4d11da2407385c2bbd52",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11148,
        "upload_time": "2020-04-11T11:07:50",
        "upload_time_iso_8601": "2020-04-11T11:07:50.602841Z",
        "url": "https://files.pythonhosted.org/packages/cf/42/f3afd1ced6050919ea0f4cf49681fb76ce9a95e9d53b2186595b6d78da06/blackfeed-0.0.17-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fe3723d91c4e9b3fca432ea5032ddd928ccb041ddbda7d3ade87eb4d96f613d",
          "md5": "353c186c0323deb407a6a80a5bde4d9e",
          "sha256": "ae64ae26e34bc6c751c51897338abf98b9bf1c858cfa80efb4e17a88db93deb4"
        },
        "downloads": -1,
        "filename": "blackfeed-0.0.18-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "353c186c0323deb407a6a80a5bde4d9e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11193,
        "upload_time": "2020-04-11T18:40:43",
        "upload_time_iso_8601": "2020-04-11T18:40:43.907785Z",
        "url": "https://files.pythonhosted.org/packages/0f/e3/723d91c4e9b3fca432ea5032ddd928ccb041ddbda7d3ade87eb4d96f613d/blackfeed-0.0.18-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82181661660d82938616f245dbfe1b01b4f51cc22a01e9c56d64d0dc357c25b4",
          "md5": "89035ff176a300281b20f04e484012ba",
          "sha256": "01544ab421f53b255c6eae96d50d25a9ba97ce9722f7b569d08cf0098a10e6bf"
        },
        "downloads": -1,
        "filename": "blackfeed-0.0.19-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "89035ff176a300281b20f04e484012ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11238,
        "upload_time": "2022-04-30T16:06:20",
        "upload_time_iso_8601": "2022-04-30T16:06:20.527670Z",
        "url": "https://files.pythonhosted.org/packages/82/18/1661660d82938616f245dbfe1b01b4f51cc22a01e9c56d64d0dc357c25b4/blackfeed-0.0.19-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82181661660d82938616f245dbfe1b01b4f51cc22a01e9c56d64d0dc357c25b4",
        "md5": "89035ff176a300281b20f04e484012ba",
        "sha256": "01544ab421f53b255c6eae96d50d25a9ba97ce9722f7b569d08cf0098a10e6bf"
      },
      "downloads": -1,
      "filename": "blackfeed-0.0.19-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "89035ff176a300281b20f04e484012ba",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11238,
      "upload_time": "2022-04-30T16:06:20",
      "upload_time_iso_8601": "2022-04-30T16:06:20.527670Z",
      "url": "https://files.pythonhosted.org/packages/82/18/1661660d82938616f245dbfe1b01b4f51cc22a01e9c56d64d0dc357c25b4/blackfeed-0.0.19-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}