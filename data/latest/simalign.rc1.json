{
  "info": {
    "author": "Masoud Jalili Sabet, Philipp Dufter",
    "author_email": "philipp@cis.lmu.de,masoud@cis.lmu.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "SimAlign: Similarity Based Word Aligner\n==============\n\n<p align=\"center\">\n    <br>\n    <img alt=\"Alignment Example\" src=\"https://raw.githubusercontent.com/cisnlp/simalign/master/assets/example.png\" width=\"300\"/>\n    <br>\n<p>\n\nSimAlign is a high-quality word alignment tool that uses static and contextualized embeddings and **does not require parallel training data**.\n\nThe following table shows how it compares to popular statistical alignment models:\n\n|            | ENG-CES | ENG-DEU | ENG-FAS | ENG-FRA | ENG-HIN | ENG-RON |\n| ---------- | ------- | ------- | ------- | ------- | ------- | ------- |\n| fast-align | .78     | .71     | .46     | .84     | .38     | .68     |\n| eflomal    | .85     | .77     | .63     | .93     | .52     | .72     |\n| mBERT-Argmax | .87     | .81     | .67     | .94     | .55     | .65     |\n\nShown is F1, maximum across subword and word level. For more details see the [Paper](https://arxiv.org/pdf/2004.08728.pdf).\n\n\nInstallation and Usage\n--------\n\nTested with Python 3.7, Transformers 3.1.0, Torch 1.5.0. Networkx 2.4 is optional (only required for Match algorithm). \nFor full list of dependencies see `setup.py`.\nFor installation of transformers see [their repo](https://github.com/huggingface/transformers#installation).\n\nDownload the repo for use or alternatively install with PyPi\n\n`pip install simalign`\n\nor directly with pip from GitHub\n\n`pip install --upgrade git+https://github.com/cisnlp/simalign.git#egg=simalign`\n\n\nAn example for using our code:\n```python\nfrom simalign import SentenceAligner\n\n# making an instance of our model.\n# You can specify the embedding model and all alignment settings in the constructor.\nmyaligner = SentenceAligner(model=\"bert\", token_type=\"bpe\", matching_methods=\"mai\")\n\n# The source and target sentences should be tokenized to words.\nsrc_sentence = [\"This\", \"is\", \"a\", \"test\", \".\"]\ntrg_sentence = [\"Das\", \"ist\", \"ein\", \"Test\", \".\"]\n\n# The output is a dictionary with different matching methods.\n# Each method has a list of pairs indicating the indexes of aligned words (The alignments are zero-indexed).\nalignments = myaligner.get_word_aligns(src_sentence, trg_sentence)\n\nfor matching_method in alignments:\n    print(matching_method, \":\", alignments[matching_method])\n\n# Expected output:\n# mwmf (Match): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)]\n# inter (ArgMax): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)]\n# itermax (IterMax): [(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)]\n```\nFor more examples of how to use our code see `scripts/align_example.py`.\n\nDemo\n--------\n\nAn online demo is available [here](https://simalign.cis.lmu.de/).\n\n\nGold Standards\n--------\nLinks to the gold standars used in the paper are here: \n\n\n| Language Pair  | Citation | Type |Link |\n| ------------- | ------------- | ------------- | ------------- |\n| ENG-CES | Marecek et al. 2008 | Gold Alignment | http://ufal.mff.cuni.cz/czech-english-manual-word-alignment |\n| ENG-DEU | EuroParl-based | Gold Alignment | www-i6.informatik.rwth-aachen.de/goldAlignment/ |\n| ENG-FAS | Tvakoli et al. 2014 | Gold Alignment | http://eceold.ut.ac.ir/en/node/940 |\n| ENG-FRA |  WPT2003, Och et al. 2000,| Gold Alignment | http://web.eecs.umich.edu/~mihalcea/wpt/ |\n| ENG-HIN |   WPT2005 | Gold Alignment | http://web.eecs.umich.edu/~mihalcea/wpt05/ |\n| ENG-RON |  WPT2005 Mihalcea et al. 2003 | Gold Alignment | http://web.eecs.umich.edu/~mihalcea/wpt05/ |\n        \n        \nEvaluation Script\n--------\nFor evaluating the output alignments use `scripts/calc_align_score.py`.\n\nThe gold alignment file should have the same format as SimAlign outputs.\nSure alignment edges in the gold standard have a '-' between the source and the target indices and the possible edges have a 'p' between indices.\nFor sample parallel sentences and their gold alignments from ENG-DEU, see `samples`.\n\n\nPublication\n--------\n\nIf you use the code, please cite \n\n```\n@inproceedings{jalili-sabet-etal-2020-simalign,\n    title = \"{S}im{A}lign: High Quality Word Alignments without Parallel Training Data using Static and Contextualized Embeddings\",\n    author = {Jalili Sabet, Masoud  and\n      Dufter, Philipp  and\n      Yvon, Fran{\\c{c}}ois  and\n      Sch{\\\"u}tze, Hinrich},\n    booktitle = \"Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing: Findings\",\n    month = nov,\n    year = \"2020\",\n    address = \"Online\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://www.aclweb.org/anthology/2020.findings-emnlp.147\",\n    pages = \"1627--1643\",\n}\n```\n\nFeedback\n--------\n\nFeedback and Contributions more than welcome! Just reach out to @masoudjs or @pdufter. \n\n\nFAQ\n--------\n\n##### Do I need parallel data to train the system?\n\nNo, no parallel training data is required.\n\n##### Which languages can be aligned?\n\nThis depends on the underlying pretrained multilingual language model used. For example, if mBERT is used, it covers 104 languages as listed [here](https://github.com/google-research/bert/blob/master/multilingual.md).\n\n##### Do I need GPUs for running this?\n\nEach alignment simply requires a single forward pass in the pretrained language model. While this is certainly \nfaster on GPU, it runs fine on CPU. On one GPU (GeForce GTX 1080 Ti) it takes around 15-20 seconds to align 500 parallel sentences.\n\n\n\nLicense\n-------\n\nCopyright (C) 2020, Masoud Jalili Sabet, Philipp Dufter\n\nA full copy of the license can be found in LICENSE.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cisnlp/simalign",
    "keywords": "NLP deep learning transformer pytorch BERT Word Alignment",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "simalign",
    "package_url": "https://pypi.org/project/simalign/",
    "platform": "",
    "project_url": "https://pypi.org/project/simalign/",
    "project_urls": {
      "Bug Tracker": "https://github.com/cisnlp/simalign/issues",
      "Homepage": "https://github.com/cisnlp/simalign"
    },
    "release_url": "https://pypi.org/project/simalign/0.3/",
    "requires_dist": [
      "numpy",
      "torch",
      "scipy",
      "transformers",
      "regex",
      "networkx (==2.4)",
      "scikit-learn"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Word Alignments using Pretrained Language Models",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11467050,
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c49dd871745741b4b6edec066b281621df4e29e5a8268c2de8dc141aac90e478",
          "md5": "09886497e3962ca1cd23064e1098f1f2",
          "sha256": "c3be5997b9226cb79f34c8943278f08babfcef10bde511fa89a7fa42f74bfaac"
        },
        "downloads": -1,
        "filename": "simalign-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09886497e3962ca1cd23064e1098f1f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 8101,
        "upload_time": "2021-09-16T11:36:52",
        "upload_time_iso_8601": "2021-09-16T11:36:52.964347Z",
        "url": "https://files.pythonhosted.org/packages/c4/9d/d871745741b4b6edec066b281621df4e29e5a8268c2de8dc141aac90e478/simalign-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4873db5b0015621b07165577a2d535c8cb0e6f52413bf8483148c74a28c9b2e",
          "md5": "e4bfcb27e920d0b09fb8c90d32833805",
          "sha256": "13365ab07c93f955228964c6b92d8166168754dafdc56a9e9d3ad9b60b40a0eb"
        },
        "downloads": -1,
        "filename": "simalign-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e4bfcb27e920d0b09fb8c90d32833805",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 7566,
        "upload_time": "2021-09-16T11:36:54",
        "upload_time_iso_8601": "2021-09-16T11:36:54.919941Z",
        "url": "https://files.pythonhosted.org/packages/c4/87/3db5b0015621b07165577a2d535c8cb0e6f52413bf8483148c74a28c9b2e/simalign-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c49dd871745741b4b6edec066b281621df4e29e5a8268c2de8dc141aac90e478",
        "md5": "09886497e3962ca1cd23064e1098f1f2",
        "sha256": "c3be5997b9226cb79f34c8943278f08babfcef10bde511fa89a7fa42f74bfaac"
      },
      "downloads": -1,
      "filename": "simalign-0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "09886497e3962ca1cd23064e1098f1f2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 8101,
      "upload_time": "2021-09-16T11:36:52",
      "upload_time_iso_8601": "2021-09-16T11:36:52.964347Z",
      "url": "https://files.pythonhosted.org/packages/c4/9d/d871745741b4b6edec066b281621df4e29e5a8268c2de8dc141aac90e478/simalign-0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4873db5b0015621b07165577a2d535c8cb0e6f52413bf8483148c74a28c9b2e",
        "md5": "e4bfcb27e920d0b09fb8c90d32833805",
        "sha256": "13365ab07c93f955228964c6b92d8166168754dafdc56a9e9d3ad9b60b40a0eb"
      },
      "downloads": -1,
      "filename": "simalign-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e4bfcb27e920d0b09fb8c90d32833805",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 7566,
      "upload_time": "2021-09-16T11:36:54",
      "upload_time_iso_8601": "2021-09-16T11:36:54.919941Z",
      "url": "https://files.pythonhosted.org/packages/c4/87/3db5b0015621b07165577a2d535c8cb0e6f52413bf8483148c74a28c9b2e/simalign-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}