{
  "info": {
    "author": "",
    "author_email": "Tomi Tuhkanen <tomi.tuhkanen@iki.fi>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: AsyncIO",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# RuuviTag Sensor Python Package\n\n[![Build Status](https://github.com/ttu/ruuvitag-sensor/actions/workflows/build.yml/badge.svg?branch=master)](https://github.com/ttu/ruuvitag-sensor/actions/workflows/build.yml) [![PyPI](https://img.shields.io/pypi/v/ruuvitag_sensor.svg)](https://pypi.python.org/pypi/ruuvitag_sensor)\n\n`ruuvitag-sensor` is a Python package for communicating with [RuuviTag BLE Sensor](https://ruuvi.com/) and for decoding measurement data from broadcasted BLE data.\n\n### Requirements\n\n* RuuviTag with Weather Station firmware\n    * Setup [guide](https://lab.ruuvi.com/start/)\n    * Supports [Data Format 2, 3, 4 and 5](https://github.com/ruuvi/ruuvi-sensor-protocols)\n      * __NOTE:__ Data Formats 2, 3 and 4 are _deprecated_ and should not be used\n* Bluez (Linux-only)\n    * [BlueZ install guide](#BlueZ)\n* __BETA:__ Cross-platform BLE adapters\n    * [Bleak](https://github.com/hbldh/bleak) communication module\n      * Bleak only supports async methods (work in progress)\n      * [Bleak install guide](#Bleak)\n    * [Bleson](https://github.com/TheCellule/python-bleson) communication module\n      * [Bleson install guide](#Bleson)\n* Python 3.7+\n    * For Python 2.x or <3.7 support, check [installation instructions](#python-2x-and-36-and-below) for an older version\n\n__NOTE:__ Version 2.0 contains method renames. When using a version prior to 2.0, check the documentation and examples from [PyPI](https://pypi.org/project/ruuvitag-sensor/) or in GitHub, switch to the correct release tag from _switch branches/tags_.\n\n### Installation\n\nInstall the latest released version\n```sh\n$ python -m pip install ruuvitag-sensor\n```\n\nInstall the latest development version\n```sh\n$ python -m venv .venv\n$ source .venv/bin/activate\n$ python -m pip install git+https://github.com/ttu/ruuvitag-sensor\n\n# For development, clone this repository and install for development in editable mode\n$ python -m pip install -e .[dev]\n```\n\nFull installation guide for [Raspberry PI & Raspbian](https://github.com/ttu/ruuvitag-sensor/blob/master/install_guide_pi.md)\n\n### Usage\n\nThe package provides 3 ways to fetch data from sensors:\n\n1. Synchronously with callback\n2. Asynchronously with async/await (BETA)\n3. Observable streams with ReactiveX\n\nRuuviTag sensors can be identified using MAC addresses. Methods return a tuple with MAC and sensor data payload.\n\n```py\n('D2:A3:6E:C8:E0:25', {'data_format': 5, 'humidity': 47.62, 'temperature': 23.58, 'pressure': 1023.68, 'acceleration': 993.2331045630729, 'acceleration_x': -48, 'acceleration_y': -12, 'acceleration_z': 992, 'tx_power': 4, 'battery': 2197, 'movement_counter': 0, 'measurement_sequence_number': 88, 'mac': 'd2a36ec8e025', 'rssi': -80})\n```\n\n#### 1. Get sensor data synchronously with callback\n\n`get_data` calls the callback whenever a RuuviTag sensor broadcasts data. This method is the preferred way to use the library.\n\n```python\nfrom ruuvitag_sensor.ruuvi import RuuviTagSensor\n\n\ndef handle_data(found_data):\n    print(f\"MAC {found_data[0]}\")\n    print(f\"Data {found_data[1]}\")\n\nif __name__ == \"__main__\":\n    RuuviTagSensor.get_data(handle_data)\n```\n\nThe line `if __name__ == \"__main__\":` is required on Windows and macOS due to the way the `multiprocessing` library works. It is not required on Linux, but it is recommended. It is omitted from the rest of the examples below.\n\nThe optional list of MACs and run flag can be passed to the `get_data` function. The callback is called only for MACs in the list and setting the run flag to false will stop execution. If the run flag is not passed, the function will execute forever.\n\n```python\nfrom ruuvitag_sensor.ruuvi import RuuviTagSensor, RunFlag\n\ncounter = 10\n# RunFlag for stopping execution at desired time\nrun_flag = RunFlag()\n\ndef handle_data(found_data):\n    print(f\"MAC: {found_data[0]}\")\n    print(f\"Data: {found_data[1]}\")\n\n    global counter\n    counter = counter - 1\n    if counter < 0:\n        run_flag.running = False\n\n# List of MACs of sensors which will execute callback function\nmacs = [\"AA:2C:6A:1E:59:3D\", \"CC:2C:6A:1E:59:3D\"]\n\nRuuviTagSensor.get_data(handle_data, macs, run_flag)\n```\n\n#### 2. Get sensor data asynchronously\n\n__NOTE:__ Asynchronous functionality is currently in beta state and works only with `Bleak`-adapter.\n\n```py\nimport asyncio\nfrom ruuvitag_sensor.ruuvi import RuuviTagSensor\n\n\nasync def main():\n    async for found_data in RuuviTagSensor.get_data_async():\n        print(f\"MAC: {found_data[0]}\")\n        print(f\"Data: {found_data[1]}\")\n\nif __name__ == \"__main__\":\n    asyncio.get_event_loop().run_until_complete(main())\n```\n\nThe optional list of MACs and run flag can be passed to the `get_data_async` function.\n\n#### 3. Get sensor data with observable streams (ReactiveX / RxPY)\n\n`RuuviTagReactive` is a reactive wrapper and background process for RuuviTagSensor `get_data`. An optional MAC address list can be passed on the initializer and execution can be stopped with the stop function.\n\n```python\nfrom ruuvitag_sensor.ruuvi_rx import RuuviTagReactive\nfrom reactivex import operators as ops\n\nruuvi_rx = RuuviTagReactive()\n\n# Print all notifications\nruuvi_rx.get_subject().\\\n    subscribe(print)\n\n# Print only last data every 10 seconds for F4:A5:74:89:16:57\nruuvi_rx.get_subject().pipe(\n      ops.filter(lambda x: x[0] == \"F4:A5:74:89:16:57\"),\n      ops.buffer_with_time(10.0)\n    ).subscribe(lambda data: print(data[len(data) - 1]))\n\n# Execute only every time when temperature changes for F4:A5:74:89:16:57\nruuvi_rx.get_subject().pipe(\n      ops.filter(lambda x: x[0] == \"F4:A5:74:89:16:57\"),\n      ops.map(lambda x: x[1][\"temperature\"]),\n      ops.distinct_until_changed()\n    ).subscribe(lambda x: print(f\"Temperature changed: {x}\"))\n\n# Close all connections and stop bluetooth communication\nruuvi_rx.stop()\n```\n\nMore [samples](https://github.com/ttu/ruuvitag-sensor/blob/master/examples/reactive_extensions.py) and a simple [HTTP server](https://github.com/ttu/ruuvitag-sensor/blob/master/examples/http_server_asyncio_rx.py) under the examples directory.\n\nCheck the official documentation of [ReactiveX](https://rxpy.readthedocs.io/en/latest/index.html) and the [list of operators](https://rxpy.readthedocs.io/en/latest/operators.html).\n\n#### Other helper methods\n\n##### Get data for specified sensors for a specific duration\n\n`get_data_for_sensors` will collect the latest data from sensors for a specified duration.\n\n```python\nfrom ruuvitag_sensor.ruuvi import RuuviTagSensor\n\n# List of MACs of sensors which data will be collected\n# If list is empty, data will be collected for all found sensors\nmacs = [\"AA:2C:6A:1E:59:3D\", \"CC:2C:6A:1E:59:3D\"]\n# get_data_for_sensors will look data for the duration of timeout_in_sec\ntimeout_in_sec = 4\n\ndata = RuuviTagSensor.get_data_for_sensors(macs, timeout_in_sec)\n\n# Dictionary will have latest data for each sensor\nprint(data[\"AA:2C:6A:1E:59:3D\"])\nprint(data[\"CC:2C:6A:1E:59:3D\"])\n```\n\n__NOTE:__ This method shouldn't be used for a long duration with a short timeout. `get_data_for_sensors` will start and stop a new BLE scanning process with every method call. For long-running processes, it is recommended to use the `get_data`-method.\n\n##### Get data from a sensor\n\n__NOTE:__ For a single sensor it is recommended to use `RuuviTagSensor.get_data` or `RuuviTagSensor.get_data_for_sensors` methods instead of `RuuviTag`-class.\n\n```python\nfrom ruuvitag_sensor.ruuvitag import RuuviTag\n\nsensor = RuuviTag(\"AA:2C:6A:1E:59:3D\")\n\n# update state from the device\nstate = sensor.update()\n\n# get latest state (does not get it from the device)\nstate = sensor.state\n\nprint(state)\n```\n\n##### Find sensors\n\n`RuuviTagSensor.find_ruuvitags` and `RuuviTagSensor.find_ruuvitags_async` methods will execute forever and when a new RuuviTag sensor is found, it will print its MAC address and state at that moment. This function can be used with command-line applications. Logging must be enabled and set to print to the console.\n\n```python\nfrom ruuvitag_sensor.ruuvi import RuuviTagSensor\nimport ruuvitag_sensor.log\n\nruuvitag_sensor.log.enable_console()\n\nRuuviTagSensor.find_ruuvitags()\n```\n\n### Using different Bluetooth device\n\nIf you have multiple Bluetooth devices installed, a device to be used might not be the default (Linux: hci0). The device can be passed with a `bt_device`-parameter.\n\n```python\nfrom ruuvitag_sensor.ruuvi import RuuviTagSensor\nfrom ruuvitag_sensor.ruuvitag import RuuviTag\n\nsensor = RuuviTag(\"F4:A5:74:89:16:57\", \"hci1\")\n\nRuuviTagSensor.find_ruuvitags(\"hci1\")\n\ndata = RuuviTagSensor.get_data_for_sensors(bt_device=\"hci1\")\n\nRuuviTagSensor.get_data(lambda x: print(f\"{x[0]} - {x[1]}\"), bt_device=device))\n```\n\n#### Parse data\n\n```python\nfrom ruuvitag_sensor.data_formats import DataFormats\nfrom ruuvitag_sensor.decoder import get_decoder\n\nfull_data = \"043E2A0201030157168974A51F0201060303AAFE1716AAFE10F9037275752E76692F23416A5558314D417730C3\"\ndata = full_data[26:]\n\n# convert_data returns tuple which has Data Format type and encoded data\n(data_format, encoded) = DataFormats.convert_data(data)\n\nsensor_data = get_decoder(data_format).decode_data(encoded)\n\nprint(sensor_data)\n# {'temperature': 25.12, 'identifier': '0', 'humidity': 26.5, 'pressure': 992.0}\n```\n\n### Data Formats\n\nExample data has data from 4 sensors with different firmware.\n* 1st is Data Format 2 (URL), the identifier is None as the sensor doesn't broadcast any identifier data\n* 2nd is Data Format 4 (URL) and it has an identifier character\n* 3rd is Data Format 3 (RAW)\n* 4th is Data Format 5 (RAW v2)\n\n```python\n{\n'CA:F7:44:DE:EB:E1': { 'data_format': 2, 'temperature': 22.0, 'humidity': 28.0, 'pressure': 991.0, 'identifier': None, 'rssi': None },\n'F4:A5:74:89:16:57': { 'data_format': 4, 'temperature': 23.24, 'humidity': 29.0, 'pressure': 991.0, 'identifier': '0', 'rssi': None },\n'A3:GE:2D:91:A4:1F': { 'data_format': 3, 'battery': 2899, 'pressure': 1027.66, 'humidity': 20.5, 'acceleration': 63818.215675463696, 'acceleration_x': 200.34, 'acceleration_y': 0.512, 'acceleration_z': -200.42, 'temperature': 26.3, 'rssi': None },\n'CB:B8:33:4C:88:4F': { 'data_format': 5, 'battery': 2.995, 'pressure': 1000.43, 'mac': 'cbb8334c884f', 'measurement_sequence_number': 2467, 'acceleration_z': 1028, 'acceleration': 1028.0389097694697, 'temperature': 22.14, 'acceleration_y': -8, 'acceleration_x': 4, 'humidity': 53.97, 'tx_power': 4, 'movement_counter': 70, 'rssi': -65 }\n}\n```\n\n#### Note on Data Format 2 and 4\n\nThere is no reason to use Data Format 2 or 4.\n\nThe original reason to use the URL-encoded data was to use _Google's Nearby_ notifications to let users view tags without the need to install any app. Since _Google's Nearby_ has been discontinued, there isn't any benefit in using the Eddystone format anymore.\n\n### Logging and Printing to the console\n\nLogging can be enabled by importing `ruuvitag_sensor.log`. Console print can be enabled by calling `ruuvitag_sensor.log.enable_console()`. The command line application has console logging enabled by default.\n\n```python\nfrom ruuvitag_sensor.ruuvi import RuuviTagSensor\nimport ruuvitag_sensor.log\n\nruuvitag_sensor.log.enable_console()\n\ndata = RuuviTagSensor.get_data_for_sensors()\n\nprint(data)\n```\n\n#### Log all events to log-file\n\nBy default only errors are logged to `ruuvitag_sensor.log`-file. The level can be changed by changing FileHandler's log level.\n\n```py\nimport logging\nfrom ruuvitag_sensor.log import log\nfrom ruuvitag_sensor.ruuvi import RuuviTagSensor\n\nfor handler in log.handlers:\n    if isinstance(handler, logging.FileHandler):\n        handler.setLevel(logging.DEBUG)\n\ndata = RuuviTagSensor.get_data_for_sensors()\n```\n\n### A custom event handler for a specific log event\n\nIf custom functionality is required when a specific event happens, e.g. exit when a specific sensor is blacklisted, logging event handlers can be utilized for this functionality.\n\n```py\nfrom logging import StreamHandler\nfrom ruuvitag_sensor.log import log\nfrom ruuvitag_sensor.ruuvi import RuuviTagSensor\n\n\nclass ExitHandler(StreamHandler):\n\n    def emit(self, record):\n        if (record.levelname != \"DEBUG\"):\n            return\n        msg = self.format(record)\n        if \"Blacklisting MAC F4:A5:74:89:16:57E\" in msg:\n            exit(1)\n\n\nexit_handler = ExitHandler()\nlog.addHandler(exit_handler)\n\ndata = RuuviTagSensor.get_data_for_sensors()\n```\n\n## Command line application\n\n```\n$ python ruuvitag_sensor -h\n\nusage: ruuvitag_sensor [-h] [-g MAC_ADDRESS] [-d BT_DEVICE] [-f] [-l] [-s] [--version]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -g MAC_ADDRESS, --get MAC_ADDRESS\n                        Get data\n  -d BT_DEVICE, --device BT_DEVICE\n                        Set Bluetooth device id (default hci0)\n  -f, --find            Find broadcasting RuuviTags\n  -l, --latest          Get latest data for found RuuviTags\n  -s, --stream          Stream broadcasts from all RuuviTags\n  --version             show program's version number and exit\n```\n\n## BlueZ\n\nBlueZ works only on __Linux__. When using BlueZ, Windows and macOS support is only for testing with hard-coded data and for data decoding.\n\nBlueZ tools require __superuser__ rights.\n\nInstall BlueZ.\n\n```sh\n$ sudo apt-get install bluez bluez-hcidump\n```\n\n`ruuvitag-sensor` package uses internally _hciconfig_, _hcitool_ and _hcidump_. These tools are deprecated. In case tools are missing, an older version of BlueZ is required ([Issue](https://github.com/ttu/ruuvitag-sensor/issues/31))\n\n### BlueZ limitations\n\n`ruuvitag-sensor` package uses BlueZ to listen to broadcasted BL information (uses _hciconf_, _hcitool_, _hcidump_). Implementation does not handle well all unexpected errors or changes, e.g. when the adapter is busy, rebooted or powered down.\n\nIn case of errors, the application tries to exit immediately, so it can be automatically restarted.\n\n## Bleak\n\nBleak is not installed automatically with `ruuvitag-sensor` package. Install it manually from PyPI.\n\n```sh\n$ python -m pip install bleak\n```\n\nAdd environment variable RUUVI_BLE_ADAPTER with value Bleak. E.g.\n\n```sh\n$ export RUUVI_BLE_ADAPTER=\"Bleak\"\n```\n\nBleak supports only async methods.\n\n```py\nimport asyncio\nfrom ruuvitag_sensor.ruuvi import RuuviTagSensor\n\n\nasync def main():\n    async for data in RuuviTagSensor.get_data_async():\n        print(data)\n\nif __name__ == \"__main__\":\n    asyncio.get_event_loop().run_until_complete(main())\n```\n\nCheck [get_async_bleak](https://github.com/ttu/ruuvitag-sensor/blob/master/examples/get_async_bleak.py) from examples.\n\n### Bleak dummy BLE data\n\nBleak-adapter has a development-time generator for dummy data, which can be useful during the development, if no sensors are available. Set `RUUVI_BLE_ADAPTER` environment variable to `bleak_dev`.\n\n## Bleson\n\nCurrent state and known bugs in [issue #78](https://github.com/ttu/ruuvitag-sensor/issues/78).\n\nBleson works with Linux, macOS and partially with Windows.\n\nBleson is not installed automatically with `ruuvitag-sensor` package. Install it manually from GitHub.\n\n```sh\n$ pip install git+https://github.com/TheCellule/python-bleson\n```\n\nAdd environment variable `RUUVI_BLE_ADAPTER` with value `Bleson`. E.g.\n\n```sh\n$ export RUUVI_BLE_ADAPTER=\"Bleson\"\n```\n\n__NOTE:__ On macOS, only Data Format 5 works, as macOS doesn't advertise MAC address and only DF5 has MAC in sensor payload. `RuuviTag`-class doesn't work with macOS.\n\n__NOTE:__ On Windows, Bleson requires _Python 3.6_. Unfortunately on Windows, Bleson doesn't send any payload for the advertised package, so it is still unusable.\n\n\n## Python 2.x and 3.6 and below\n\nLast version of `ruuvitag-sensor` with Python 2.x and <3.7 support is [1.2.1](https://pypi.org/project/ruuvitag-sensor/1.2.1/).\n\n[Branch](https://github.com/ttu/ruuvitag-sensor/tree/release/1.2.1) / [Tag / commit](https://github.com/ttu/ruuvitag-sensor/commit/12ca3cfcb7fbed28477bb34f3bffd3eee0f9888d)\n\n```sh\n$ git checkout release/1.2.1\n```\n\nInstall from PyPI\n```sh\n$ python -m pip install ruuvitag-sensor==1.2.1\n```\n\n## Examples\n\nExamples are in [examples](https://github.com/ttu/ruuvitag-sensor/tree/master/examples) directory, e.g.\n\n* Keep track of each sensor's current status and send updated data to the server. [Sync](https://github.com/ttu/ruuvitag-sensor/blob/master/examples/send_updated_sync.py) and [async](https://github.com/ttu/ruuvitag-sensor/blob/master/examples/send_updated_async.py) version.\n* Send found sensor data to InfluxDB. [Reactive](https://github.com/ttu/ruuvitag-sensor/blob/master/examples/post_to_influxdb_rx.py) and [non-reactive](https://github.com/ttu/ruuvitag-sensor/blob/master/examples/post_to_influxdb.py) version. The naming convention of sent data matches [RuuviCollector library](https://github.com/scrin/ruuvicollector).\n* Simple HTTP Server for serving found sensor data. [Flask](https://github.com/ttu/ruuvitag-sensor/blob/master/examples/http_server.py), [aiohttp](https://github.com/ttu/ruuvitag-sensor/blob/master/examples/http_server_asyncio.py) and [aiohttp with ReactiveX](https://github.com/ttu/ruuvitag-sensor/blob/master/examples/http_server_asyncio_rx.py).\n\n## Changelog\n\n[Changelog](https://github.com/ttu/ruuvitag-sensor/blob/master/CHANGELOG.md)\n\n## Developer notes\n\n[Notes for developers](https://github.com/ttu/ruuvitag-sensor/blob/master/developer_notes.md) who are interested in developing `ruuvitag-sensor` package or are interested in its internal functionality.\n\n## Contributing\n\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\n## License\n\nLicensed under the [MIT](https://github.com/ttu/ruuvitag-sensor/blob/master/LICENSE) License.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "RuuviTag BLE",
    "license": "MIT License  Copyright (c) 2016 Tomi Tuhkanen  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ruuvitag-sensor",
    "package_url": "https://pypi.org/project/ruuvitag-sensor/",
    "platform": null,
    "project_url": "https://pypi.org/project/ruuvitag-sensor/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ttu/ruuvitag-sensor/issues",
      "changelog": "https://github.com/ttu/ruuvitag-sensor/blob/master/CHANGELOG.md",
      "homepage": "https://github.com/ttu/ruuvitag-sensor",
      "source": "https://github.com/ttu/ruuvitag-sensor"
    },
    "release_url": "https://pypi.org/project/ruuvitag-sensor/2.1.0/",
    "requires_dist": [
      "reactivex",
      "ptyprocess ; platform_system == \"Linux\"",
      "mypy-extensions ; python_version < \"3.8\"",
      "importlib-metadata (<4.3,>=1.1.0) ; python_version < \"3.8\"",
      "pytest ; extra == 'dev'",
      "pytest-asyncio ; extra == 'dev'",
      "flake8-pyproject ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "black ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "Find RuuviTag sensors and get decoded data from selected sensors",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16915488,
  "releases": {
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "216a6c5a30f0e9089bebe8bfd4e1dc019d05a64f867b4b6796ab1fb52f802603",
          "md5": "9111e9d33705eb10d22bf1863d5e1ec1",
          "sha256": "bab0fb6d1583145fb8da6b16c5a4b9d4e9f8659e47f366a935af8ac5dab5ced0"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9111e9d33705eb10d22bf1863d5e1ec1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15700,
        "upload_time": "2018-03-11T17:12:09",
        "upload_time_iso_8601": "2018-03-11T17:12:09.233260Z",
        "url": "https://files.pythonhosted.org/packages/21/6a/6c5a30f0e9089bebe8bfd4e1dc019d05a64f867b4b6796ab1fb52f802603/ruuvitag_sensor-0.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfdcf9fff32bc5be277f531bc0dbd5b2d9cb2778d128fabc485170f35e987325",
          "md5": "adca3b718f63975381d11bc8cb3b8532",
          "sha256": "1e5c98349eb8ecd3b88be01558759ba36abf2d8af3bd985065967494c9d129de"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.11.0.tar.gz",
        "has_sig": false,
        "md5_digest": "adca3b718f63975381d11bc8cb3b8532",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16857,
        "upload_time": "2018-04-25T14:51:57",
        "upload_time_iso_8601": "2018-04-25T14:51:57.975220Z",
        "url": "https://files.pythonhosted.org/packages/bf/dc/f9fff32bc5be277f531bc0dbd5b2d9cb2778d128fabc485170f35e987325/ruuvitag_sensor-0.11.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34d9a0a7eab9dbf3b64d310cd4b4aee22d9cedc0fe5635e4c619f11b56748ef7",
          "md5": "b75674a620be4206783188e02d42254e",
          "sha256": "d77818a9ce50f0b4e8b7ca95a19526e2c4f6616eab75db1c37b2abb576fe4d21"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.12.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b75674a620be4206783188e02d42254e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17430,
        "upload_time": "2019-02-15T18:15:39",
        "upload_time_iso_8601": "2019-02-15T18:15:39.361617Z",
        "url": "https://files.pythonhosted.org/packages/34/d9/a0a7eab9dbf3b64d310cd4b4aee22d9cedc0fe5635e4c619f11b56748ef7/ruuvitag_sensor-0.12.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.13.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7204582136009773cccc389002a858b24e4abaecc02ed3f7fc6d4bee40a6704f",
          "md5": "d2fa075044e0cbbbf2b050cc60d569bd",
          "sha256": "27b42d457f0722796ca10d26733b96e9ac431e446473cd4d755729c277dbf253"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.13.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d2fa075044e0cbbbf2b050cc60d569bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17700,
        "upload_time": "2019-07-01T11:49:21",
        "upload_time_iso_8601": "2019-07-01T11:49:21.554814Z",
        "url": "https://files.pythonhosted.org/packages/72/04/582136009773cccc389002a858b24e4abaecc02ed3f7fc6d4bee40a6704f/ruuvitag_sensor-0.13.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf71230c436d0bd7b3e381fc9c2e5e86f09b1de01b767ddeb4c7c08965e77e10",
          "md5": "aec23af1a96ce0f6b7a4e8705a231830",
          "sha256": "79f8d390b70f3f7e9dd91321d41bb3400d80e57459c265bb648adb0043d3cfc2"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.2.2.zip",
        "has_sig": false,
        "md5_digest": "aec23af1a96ce0f6b7a4e8705a231830",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11480,
        "upload_time": "2017-01-03T22:37:48",
        "upload_time_iso_8601": "2017-01-03T22:37:48.392391Z",
        "url": "https://files.pythonhosted.org/packages/cf/71/230c436d0bd7b3e381fc9c2e5e86f09b1de01b767ddeb4c7c08965e77e10/ruuvitag_sensor-0.2.2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d6b7d9f67af9a4acfcdb965db25178fa2269680eaad47dfe09313b44ba7ea2b",
          "md5": "0c04d5ed3c2b3d6c3238293ccb9f7233",
          "sha256": "8069036efd30d406db02a3a6813a7a32ed7a8157f45810c7dcb618254a5a11a2"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.3.0.zip",
        "has_sig": false,
        "md5_digest": "0c04d5ed3c2b3d6c3238293ccb9f7233",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12793,
        "upload_time": "2017-01-28T23:09:31",
        "upload_time_iso_8601": "2017-01-28T23:09:31.490345Z",
        "url": "https://files.pythonhosted.org/packages/5d/6b/7d9f67af9a4acfcdb965db25178fa2269680eaad47dfe09313b44ba7ea2b/ruuvitag_sensor-0.3.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3334979ed6dd79f08f31d81c758dbe2ccc299c07e7a162a9041f87ec6e7d832",
          "md5": "fed5f0e5c20828a0722b2707d81c4e5f",
          "sha256": "470a14897b4394b13edda0a2bea8f1999f079fcb4fafd56a1d163c9b87199a09"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.3.1.zip",
        "has_sig": false,
        "md5_digest": "fed5f0e5c20828a0722b2707d81c4e5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12829,
        "upload_time": "2017-01-29T16:45:16",
        "upload_time_iso_8601": "2017-01-29T16:45:16.071141Z",
        "url": "https://files.pythonhosted.org/packages/e3/33/4979ed6dd79f08f31d81c758dbe2ccc299c07e7a162a9041f87ec6e7d832/ruuvitag_sensor-0.3.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0002492a4cc16fc22bef7f6e0f02cfad35683753767bf46f431539745874228d",
          "md5": "69b577d157a5648ad9fd9e44bb418166",
          "sha256": "17857d77b7b47a0c7f14dd4008bfa8c0b2b679e89c4f66179af44e08e0cff4a8"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.3.2.zip",
        "has_sig": false,
        "md5_digest": "69b577d157a5648ad9fd9e44bb418166",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12978,
        "upload_time": "2017-01-30T19:21:18",
        "upload_time_iso_8601": "2017-01-30T19:21:18.711548Z",
        "url": "https://files.pythonhosted.org/packages/00/02/492a4cc16fc22bef7f6e0f02cfad35683753767bf46f431539745874228d/ruuvitag_sensor-0.3.2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "710c9745e012fa2a66be1f3fdc90826904a6df27708cd65de56e7d2fdd4f4c80",
          "md5": "397cba9b1e787b496cf59420b9ed6739",
          "sha256": "0d94ab2be5e9a8c8a94469ea4c1012188e004d27f35c145d04815fff56200590"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.3.3.zip",
        "has_sig": false,
        "md5_digest": "397cba9b1e787b496cf59420b9ed6739",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12958,
        "upload_time": "2017-01-31T08:15:19",
        "upload_time_iso_8601": "2017-01-31T08:15:19.844310Z",
        "url": "https://files.pythonhosted.org/packages/71/0c/9745e012fa2a66be1f3fdc90826904a6df27708cd65de56e7d2fdd4f4c80/ruuvitag_sensor-0.3.3.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9df3e7c9598c0dc3a7d613f2125f62dc6faa24a1c969a40e5516af9efaa26cef",
          "md5": "aef497ec2f0a97d8f3e57d5d223e79fd",
          "sha256": "7a7c9de95a1acf674c98a07aeb919e407bc16f0e42f57b1e99c391edb5a2c586"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.3.4.zip",
        "has_sig": false,
        "md5_digest": "aef497ec2f0a97d8f3e57d5d223e79fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12949,
        "upload_time": "2017-02-01T07:55:27",
        "upload_time_iso_8601": "2017-02-01T07:55:27.385852Z",
        "url": "https://files.pythonhosted.org/packages/9d/f3/e7c9598c0dc3a7d613f2125f62dc6faa24a1c969a40e5516af9efaa26cef/ruuvitag_sensor-0.3.4.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01d2644432d71763ecbc654a824040d0070dcbf845f0b68d3ade5f6988808c10",
          "md5": "c1e7ff2a715dcfd10b41da00178bbc11",
          "sha256": "3275670fec3de7dd22cfd94091834922c435214e50b33dc5ff9e7a56b1a9e113"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.4.0.zip",
        "has_sig": false,
        "md5_digest": "c1e7ff2a715dcfd10b41da00178bbc11",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14939,
        "upload_time": "2017-02-19T09:59:23",
        "upload_time_iso_8601": "2017-02-19T09:59:23.134504Z",
        "url": "https://files.pythonhosted.org/packages/01/d2/644432d71763ecbc654a824040d0070dcbf845f0b68d3ade5f6988808c10/ruuvitag_sensor-0.4.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee368016262be8a3e523dc2ff7b134b9587e1f1b922b0302109851ca1f436938",
          "md5": "9a9785dd65739e8b1f47be876e792b95",
          "sha256": "ca4a3d0de9e0c677bdd4c3d5dcb1bdeaab769714dc971749b82a49d158f2b095"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.5.0.zip",
        "has_sig": false,
        "md5_digest": "9a9785dd65739e8b1f47be876e792b95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17634,
        "upload_time": "2017-03-01T22:00:23",
        "upload_time_iso_8601": "2017-03-01T22:00:23.232281Z",
        "url": "https://files.pythonhosted.org/packages/ee/36/8016262be8a3e523dc2ff7b134b9587e1f1b922b0302109851ca1f436938/ruuvitag_sensor-0.5.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95dae685615a13aeeb9bb0d8e0f45c126039efa6a0e317f1b5844045fc2db473",
          "md5": "7b0c15d2f20d420ddbb24527cf5a6147",
          "sha256": "04f45c89f2bf5f31fa6c16ff0c1eabcdebf350acc1237e5b69ac1675c173b2a7"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.6.0.zip",
        "has_sig": false,
        "md5_digest": "7b0c15d2f20d420ddbb24527cf5a6147",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19462,
        "upload_time": "2017-05-05T19:01:56",
        "upload_time_iso_8601": "2017-05-05T19:01:56.743268Z",
        "url": "https://files.pythonhosted.org/packages/95/da/e685615a13aeeb9bb0d8e0f45c126039efa6a0e317f1b5844045fc2db473/ruuvitag_sensor-0.6.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9194108b74b78ffd3e9a0b7150df00b018003cd5b2c02d4600aa6a1c4188848",
          "md5": "a2777e09717e40c092cb2d43acc79fee",
          "sha256": "e3598065dbfc85a11de049677fcfae8656d697a27a14d176befb1322c250d947"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.7.0.zip",
        "has_sig": false,
        "md5_digest": "a2777e09717e40c092cb2d43acc79fee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20180,
        "upload_time": "2017-06-28T21:27:20",
        "upload_time_iso_8601": "2017-06-28T21:27:20.082120Z",
        "url": "https://files.pythonhosted.org/packages/d9/19/4108b74b78ffd3e9a0b7150df00b018003cd5b2c02d4600aa6a1c4188848/ruuvitag_sensor-0.7.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dee2bfbadc45996df3110407a9c0cbf3399718886f7735f40071c31ab4c34b96",
          "md5": "a0c20a7e28f97f554da4cb0c92b64cd1",
          "sha256": "1876b910268e733c4253c07d360545b6e0d40b699441b6b17830799e3cae95d4"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a0c20a7e28f97f554da4cb0c92b64cd1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14409,
        "upload_time": "2017-07-29T07:14:15",
        "upload_time_iso_8601": "2017-07-29T07:14:15.770744Z",
        "url": "https://files.pythonhosted.org/packages/de/e2/bfbadc45996df3110407a9c0cbf3399718886f7735f40071c31ab4c34b96/ruuvitag_sensor-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "494ccc2afc1bddae2a194a9128c078bf55319a9e650f388bab6323e2de7ba7f4",
          "md5": "bb626477e42faddb1406d00395385e88",
          "sha256": "6053f3011b86dc964c148041bfe0a9d73b2707e5308f631e356458426db95151"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bb626477e42faddb1406d00395385e88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14599,
        "upload_time": "2017-09-09T12:17:22",
        "upload_time_iso_8601": "2017-09-09T12:17:22.899784Z",
        "url": "https://files.pythonhosted.org/packages/49/4c/cc2afc1bddae2a194a9128c078bf55319a9e650f388bab6323e2de7ba7f4/ruuvitag_sensor-0.8.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06a39e7f02f8c8a995e4735f66d946c60d6250406681acd721d1c452e18d3416",
          "md5": "132fb34de2f31f4a0519eb0c11e59559",
          "sha256": "49924ae26376b9f4efff64909b4fac996e2a044923fe36275ed29a0d209d68e6"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "132fb34de2f31f4a0519eb0c11e59559",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15578,
        "upload_time": "2017-10-28T22:08:11",
        "upload_time_iso_8601": "2017-10-28T22:08:11.356544Z",
        "url": "https://files.pythonhosted.org/packages/06/a3/9e7f02f8c8a995e4735f66d946c60d6250406681acd721d1c452e18d3416/ruuvitag_sensor-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7744797218270a77d277ed5677597ffeac494e13a292a44f8d0c12a72e2474e",
          "md5": "417bb8dc1e2a4a174c8c5cb61778a469",
          "sha256": "1d8aecdbf0ba102c343d76505a97a83cb6753960c32021e3b69bac70ddfdf094"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "417bb8dc1e2a4a174c8c5cb61778a469",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15670,
        "upload_time": "2020-03-21T06:17:28",
        "upload_time_iso_8601": "2020-03-21T06:17:28.042921Z",
        "url": "https://files.pythonhosted.org/packages/f7/74/4797218270a77d277ed5677597ffeac494e13a292a44f8d0c12a72e2474e/ruuvitag_sensor-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25902c071a18c1df0daf17d1c22ee1aff7874979aedaf2cf6ede5f8e2fc016be",
          "md5": "065f5d2fb22aa2f0eb0e84f2ec67d9cf",
          "sha256": "ae9c60e6536a35695ab384f53aa2dc0efde0569317024c853a3c96e0ed4f6b6c"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "065f5d2fb22aa2f0eb0e84f2ec67d9cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17020,
        "upload_time": "2020-03-21T06:47:03",
        "upload_time_iso_8601": "2020-03-21T06:47:03.112430Z",
        "url": "https://files.pythonhosted.org/packages/25/90/2c071a18c1df0daf17d1c22ee1aff7874979aedaf2cf6ede5f8e2fc016be/ruuvitag_sensor-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35330e9792790997a613f89ff4ea268de5f046fc68296e41526daa5ba8350e95",
          "md5": "b495fbcd4c50ecb8f00a31caed8b41e2",
          "sha256": "c180c6093ef1271ab52b89cc68ab8b115ae6a4d21cf9cd6efddc2e434d030045"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b495fbcd4c50ecb8f00a31caed8b41e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19073,
        "upload_time": "2020-04-25T19:30:00",
        "upload_time_iso_8601": "2020-04-25T19:30:00.813943Z",
        "url": "https://files.pythonhosted.org/packages/35/33/0e9792790997a613f89ff4ea268de5f046fc68296e41526daa5ba8350e95/ruuvitag_sensor-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae47ec43825a9371c4a3d654cca2978a4cf00f99a05937fbbda64973ee5dbf6b",
          "md5": "f25a10e0b24eb1955b40b7ef2500f815",
          "sha256": "362b10521ff80ba06f6886c2c45f44f5b577f4f5a46b897cecb2b8d387214712"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f25a10e0b24eb1955b40b7ef2500f815",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21104,
        "upload_time": "2021-04-29T18:56:44",
        "upload_time_iso_8601": "2021-04-29T18:56:44.570895Z",
        "url": "https://files.pythonhosted.org/packages/ae/47/ec43825a9371c4a3d654cca2978a4cf00f99a05937fbbda64973ee5dbf6b/ruuvitag_sensor-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a34a1aab68f14cc324a5c7c2dfb008d19139b04ac33837395cdd52903e001ef1",
          "md5": "668e824bddcfb64d34eb297cf1043b9a",
          "sha256": "e971886e12cad9c779ebd98056c3a83a6636c4f86acb360d2590e6edb1edb3e1"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "668e824bddcfb64d34eb297cf1043b9a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22244,
        "upload_time": "2022-05-23T08:24:40",
        "upload_time_iso_8601": "2022-05-23T08:24:40.395575Z",
        "url": "https://files.pythonhosted.org/packages/a3/4a/1aab68f14cc324a5c7c2dfb008d19139b04ac33837395cdd52903e001ef1/ruuvitag_sensor-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebe086097b94bf7c5c6d0f31c9b7a3499db988e2d9020110254f33dff876f504",
          "md5": "9faaf7822509cf8951740530b5e69f51",
          "sha256": "175918b509d56969c374707093450e27e55323ee9c5171665cf38706407106f4"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9faaf7822509cf8951740530b5e69f51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22071,
        "upload_time": "2022-05-23T08:24:43",
        "upload_time_iso_8601": "2022-05-23T08:24:43.110094Z",
        "url": "https://files.pythonhosted.org/packages/eb/e0/86097b94bf7c5c6d0f31c9b7a3499db988e2d9020110254f33dff876f504/ruuvitag_sensor-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c222bbae6d036ba355acabfacdb4ae685eb6b1f1b6b06b65b57ee417cd88daff",
          "md5": "191554be503018d12e78a2a80217404e",
          "sha256": "560e471d938102dc4145743bab94d898344d2b19a3cf44d95a23c7604591de8d"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "191554be503018d12e78a2a80217404e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22688,
        "upload_time": "2022-08-03T19:55:21",
        "upload_time_iso_8601": "2022-08-03T19:55:21.995198Z",
        "url": "https://files.pythonhosted.org/packages/c2/22/bbae6d036ba355acabfacdb4ae685eb6b1f1b6b06b65b57ee417cd88daff/ruuvitag_sensor-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2280cd0ec6be661cba0ff5baf482ed7be52c3f0927fbb3f3ca7572ce7efb17d4",
          "md5": "9f254958abecf5067e7aa127a3855b49",
          "sha256": "81c458550777bced1f4105f8747a0463b9f506df917e6b2d956316d06b9e9d85"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9f254958abecf5067e7aa127a3855b49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22743,
        "upload_time": "2022-08-03T19:55:24",
        "upload_time_iso_8601": "2022-08-03T19:55:24.328881Z",
        "url": "https://files.pythonhosted.org/packages/22/80/cd0ec6be661cba0ff5baf482ed7be52c3f0927fbb3f3ca7572ce7efb17d4/ruuvitag_sensor-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c7f95520f67b0962eb856c150d510c5c222a733af6018ff9fe58863579073da",
          "md5": "9df7aa081cf5fb62874da5da7061c3fc",
          "sha256": "56cdb3f38164ea88533ec0107b0b93032d98844fb36c26e00c8b82509fc16435"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9df7aa081cf5fb62874da5da7061c3fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 29279,
        "upload_time": "2023-02-18T15:13:44",
        "upload_time_iso_8601": "2023-02-18T15:13:44.128152Z",
        "url": "https://files.pythonhosted.org/packages/6c/7f/95520f67b0962eb856c150d510c5c222a733af6018ff9fe58863579073da/ruuvitag_sensor-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd8ead5972fa19759aa154601cd46ecdc624e53ce2069834833a41c4a226b517",
          "md5": "1ef14f4757fbf3fe734163e8ae469948",
          "sha256": "23ec124b9135c944d806e95343ee6ff71daa4699a2cdb2b9f56c76e50706b026"
        },
        "downloads": -1,
        "filename": "ruuvitag_sensor-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1ef14f4757fbf3fe734163e8ae469948",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31576,
        "upload_time": "2023-02-18T15:13:46",
        "upload_time_iso_8601": "2023-02-18T15:13:46.720095Z",
        "url": "https://files.pythonhosted.org/packages/dd/8e/ad5972fa19759aa154601cd46ecdc624e53ce2069834833a41c4a226b517/ruuvitag_sensor-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c7f95520f67b0962eb856c150d510c5c222a733af6018ff9fe58863579073da",
        "md5": "9df7aa081cf5fb62874da5da7061c3fc",
        "sha256": "56cdb3f38164ea88533ec0107b0b93032d98844fb36c26e00c8b82509fc16435"
      },
      "downloads": -1,
      "filename": "ruuvitag_sensor-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9df7aa081cf5fb62874da5da7061c3fc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 29279,
      "upload_time": "2023-02-18T15:13:44",
      "upload_time_iso_8601": "2023-02-18T15:13:44.128152Z",
      "url": "https://files.pythonhosted.org/packages/6c/7f/95520f67b0962eb856c150d510c5c222a733af6018ff9fe58863579073da/ruuvitag_sensor-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd8ead5972fa19759aa154601cd46ecdc624e53ce2069834833a41c4a226b517",
        "md5": "1ef14f4757fbf3fe734163e8ae469948",
        "sha256": "23ec124b9135c944d806e95343ee6ff71daa4699a2cdb2b9f56c76e50706b026"
      },
      "downloads": -1,
      "filename": "ruuvitag_sensor-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1ef14f4757fbf3fe734163e8ae469948",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 31576,
      "upload_time": "2023-02-18T15:13:46",
      "upload_time_iso_8601": "2023-02-18T15:13:46.720095Z",
      "url": "https://files.pythonhosted.org/packages/dd/8e/ad5972fa19759aa154601cd46ecdc624e53ce2069834833a41c4a226b517/ruuvitag_sensor-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}