{
  "info": {
    "author": "Michael Chow, Filip Schouwenaars",
    "author_email": "michael@datacamp.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# sqlwhat\n\n[![Build Status](https://travis-ci.org/datacamp/sqlwhat.svg?branch=master)](https://travis-ci.org/datacamp/sqlwhat)\n[![codecov](https://codecov.io/gh/datacamp/sqlwhat/branch/master/graph/badge.svg)](https://codecov.io/gh/datacamp/sqlwhat)\n[![PyPI version](https://badge.fury.io/py/sqlwhat.svg)](https://badge.fury.io/py/sqlwhat)\n\n`sqlwhat` enables you to write Submission Correctness Tests (SCTs) for interactive SQL exercises on DataCamp.\n\n- If you are new to teaching on DataCamp, check out https://authoring.datacamp.com.\n- If you want to learn what SCTs are and how they work, visit [this article](https://authoring.datacamp.com/courses/exercises/technical-details/sct.html) specifically.\n- For more information about writing SCTs for SQL exercises, consult https://sqlwhat.readthedocs.io.\n\n## Installing\n\n```\npip install sqlwhat     # install from pypi\nmake install            # install from source\n```\n\n## Reference\n\n* API Docs: https://sqlwhat.readthedocs.io\n* AST viewer: https://ast-viewer.datacamp.com\n* Extensions: https://github.com/datacamp/sqlwhat-ext\n\n## Raising issues with how SQL is parsed\n\nPlease raise an issue on the respsective parser repo:\n\n* [antlr-tsql](https://github.com/datacamp/antlr-tsql)\n* [antlr-psql](https://github.com/datacamp/antlr-plsql)\n\n## Basic Use\n\n```python\nfrom tcs_sqlwhat2.State import State  # State holds info needed for tests\nfrom tcs_sqlwhat2.Reporter import Reporter\nfrom tcs_sqlwhat2.checks import *  # imports all SCTs\nfrom sqlalchemy import create_engine\n\ncode = \"SELECT * FROM artists WHERE id < 100\"\n\nstate = State(\n    student_code=code,\n    solution_code=code,\n    pre_exercise_code=\"\",\n    student_conn=create_engine('sqlite:///'),\n    solution_conn=create_engine('sqlite:///'),\n    student_result={'id': [1, 2, 3], 'name': ['greg', 'jon', 'martha']},\n    solution_result={'id': [1, 2, 3], 'name': ['toby', 'keith', 'deb']},\n    reporter=Reporter()\n)\n\n# test below passes, since code is equal for student and solution\nhas_equal_ast(state)\n\n# test below raises a TestFail error, since 'name' col of results\n# doesn't match between student and solution results\ncheck_result(state)\n# shows error data\nstate.reporter.build_payload()\n\n# can also be done using a chain\nfrom tcs_sqlwhat2.sct_syntax import Ex\n\nEx(state).check_result()\n```\n\n## Running unit tests\n\n```bash\npytest -m \"not backend\"\n```\n\nIf you also want to run the backend tests, you need to set a `GITHUB_TOKEN` environment variable with access to the (private) `sqlbackend` repository.\nAfter this, you can:\n\n```bash\nmake install\npytest\n```\n\n### Rules of testing\n\n1. Running queries is the backend's job\n2. If a test doesn't run queries, it doesn't need the backend\n3. Very few tests should run queries\n\n## Building Docs\n\nInstall sqlwhat and run ..\n\n```\ncd docs\nmake html\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/datacamp/sqlwhat",
    "keywords": "",
    "license": "",
    "maintainer": "Jeroen Hermans",
    "maintainer_email": "content-engineering@datacamp.com",
    "name": "tcs-sqlwhat2",
    "package_url": "https://pypi.org/project/tcs-sqlwhat2/",
    "platform": null,
    "project_url": "https://pypi.org/project/tcs-sqlwhat2/",
    "project_urls": {
      "Homepage": "https://github.com/datacamp/sqlwhat"
    },
    "release_url": "https://pypi.org/project/tcs-sqlwhat2/3.8.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Submission correctness tests for SQL",
    "version": "3.8.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13666207,
  "releases": {
    "3.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31d8d20ac70ed886803c3549f8fd8df3d4ba2a44d034d880dab66ce1605e0c31",
          "md5": "bf25ae1896e23d3dc297096ea5c1dfe8",
          "sha256": "4b1b77b77f5f29bf87c6cbe1bf2bcaff22d51f080d578254d51521c61d8ddeef"
        },
        "downloads": -1,
        "filename": "tcs_sqlwhat2-3.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bf25ae1896e23d3dc297096ea5c1dfe8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22990,
        "upload_time": "2022-04-29T15:01:28",
        "upload_time_iso_8601": "2022-04-29T15:01:28.206076Z",
        "url": "https://files.pythonhosted.org/packages/31/d8/d20ac70ed886803c3549f8fd8df3d4ba2a44d034d880dab66ce1605e0c31/tcs_sqlwhat2-3.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31d8d20ac70ed886803c3549f8fd8df3d4ba2a44d034d880dab66ce1605e0c31",
        "md5": "bf25ae1896e23d3dc297096ea5c1dfe8",
        "sha256": "4b1b77b77f5f29bf87c6cbe1bf2bcaff22d51f080d578254d51521c61d8ddeef"
      },
      "downloads": -1,
      "filename": "tcs_sqlwhat2-3.8.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bf25ae1896e23d3dc297096ea5c1dfe8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22990,
      "upload_time": "2022-04-29T15:01:28",
      "upload_time_iso_8601": "2022-04-29T15:01:28.206076Z",
      "url": "https://files.pythonhosted.org/packages/31/d8/d20ac70ed886803c3549f8fd8df3d4ba2a44d034d880dab66ce1605e0c31/tcs_sqlwhat2-3.8.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}