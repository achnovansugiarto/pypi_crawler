{
  "info": {
    "author": "Pento",
    "author_email": "hello@pento.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<p align=\"center\">\n  <img src=\"https://pento.ai/images/vectory-banner.png\" alt=\"Vectory\">\n</p>\n\n<p align=\"center\">\n    <b> An embedding evaluation toolkit </b>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://pypi.org/project/vectory\" target=\"_blank\">\n        <img src=\"https://img.shields.io/pypi/v/vectory?color=%2334D058&label=pypi%20package\" alt=\"Package version\">\n    </a>\n    <a href=\"https://pypi.org/project/vectory\" target=\"_blank\">\n        <img src=\"https://img.shields.io/pypi/pyversions/vectory.svg?color=%2334D058\" alt=\"Supported Python versions\">\n    </a>\n</p>\n\n<p align=\"center\">\n  <img src=\"assets/overview.gif\" alt=\"animated\" />\n</p>\n\n\nVectory provides a collection of tools to **track and compare embedding versions**.\n\nVisualizing and registering each experiment is a crucial part of developing successful models. Vectory is a tool designed by and for machine learning engineers to handle embedding experiments with little overhead.\n\n### Key features:\n\n- **Embedding linage**. Keep track of the data and models used to generate embeddings.\n- **Compare performance**. Compare metrics between different vector spaces.\n- **Ease of use**. Easy usage through the CLI, Python, and GUI interfaces.\n- **Extensibility**. Built with extensibility in mind.\n- **Persistence**. Simple local state persistence using SQLite.\n\n# Table of Contents\n\n1. [Installation](#installation)\n2. [Demo](#demo)\n3. [Usage](#usage)\n4. [Troubleshooting](TROUBLESHOOTING.md)\n5. [License](#license)\n\n# Installation\n\nAll you need for Vectory to run is to install the package and Elasticsearch. You can install the package using pip:\n\n```console\npip install vectory\n```\n\n## Demo\n\n<p align=\"center\">\n  <img src=\"assets/intro.gif\" alt=\"animated\" />\n</p>\n\nAfter installing Vectory, you can play with the demo cases to get a feel of the toolkit.\n\n- Tiny-ImageNet: A computer vision dataset set of embeddings made from pretrained models ResNet50 and ConvNext-tiny.\n- IMDB: A NLP dataset set of embeddings made from pretrained models BERT and RoBERTa.\n\nTo set up the demo, run the following command:\n\n```console\nvectory demo\n```\n\nYou can specify the demo dataset by adding the name as the next argument. See `vectory demo --help` for more information.\n\n\n<p align=\"center\">\n  <img src=\"assets/zoom.gif\" alt=\"animated\" />\n</p>\n\n\n## Set up Elasticsearch\n\nWhat is Elasticsearch? It's a free high-performance search engine used for many types of data.\n\nVectory uses Elasticsearch to load embeddings and then search for them.\n\nTo start the engine, you must install Docker and start its daemon.\nAfter that, just run:\n\n```console\nvectory elastic up --detach\n```\n\nAnd you can turn it off with:\n\n```console\nvectory elastic down\n```\n\n# Usage\n\nThe key concepts needed to use Vectory are **datasets**, **experiments** and **embedding spaces**.\n\nA **dataset** is just a collection of data. You could have evaluation or training datasets. Evaluation datasets are required for Vectory to run, whereas training datasets are optional and desired for tracking purposes.\n\nYou will need a CSV file to define a Datasets. The CSV file must have a header row, followed by a row for each data point in the dataset. The only requirement we ask of the CSV is to have at least an identifier column. The following columns could be labels, features, or any other information.\n\nAn **experiment** is a machine learning model trained with a particular dataset. You can create different experiments by varying the model and the dataset. You can optionally specify a training dataset for tracking purposes.\n\nA Dataset and an Experiment form an **embedding space**, which is just a 2-dimensional array with all the generated vectors (namely, features or embeddings) for a particular dataset given an experiment. You will need to provide the embeddings in a file that can be either `.npz` or `.npy`.\n\nThe important thing about these embedding files is that they must follow the same indexing as the evaluation dataset CSV file. To summarize, for every line in the dataset, there's an embedding in the `.npz` file.\n\n<details markdown=\"1\">\n<summary> <b> Example </b> </summary>\n\nYou can have an experiment, such as a ResNet model trained with the dataset Data1. Letâ€™s call the generated embedding space ES1. But either you split your data or you get new data once in a while (or both), so this experiment will not only be used in a static dataset. You might want to use this experiment on Data2 then, generating a particular embedding space called ES2.\n\nVectory helps you to organize and analyze the obtained embeddings for each dataset and experiment.\n\n</details>\n\n---\n\n# Command Line Interface\n\n## Create\n\nCreate datasets, experiments, and embedding spaces:\n\n```console\nvectory add --dataset [path_to_csv] --embeddings [path_to_npz]\n```\n\nYou can see all the options with the `--help` flag.\n\n## Load\n\nEmbedding Spaces are links to ElasticSearch **indices**. To load the embeddings to ElasticSearch when creating the Embedding Space, add `--load ` after setting the dataset, the Embedding Space, and the parameters. This option for the `add` command only works for the default loading options. You can use the load command to load the embeddings with different options.\n\nTo separately load an Embedding Space to ElasticSearch:\n\n```console\nvectory embeddings load [index_name] [embedding_space_name]\n```\n\nYou can specify the model name, the similarity function, the number of threads, the chunk size, and the hyperparameters for the kNN search. You can see all the options with the `--help` flag.\n\n## Search\n\n**List all** your datasets, experiments, embedding spaces, and indices:\n\n```console\nvectory ls\n```\n\n**List the indexes:**\n\n```console\nvectory embeddings list-indices\n```\n\n## Delete\n\nDelete datasets:\n\n```console\nvectory dataset delete [dataset_name]\n```\n\n**Experiments:**\n\n```console\nvectory experiment delete [experiment_name]\n```\n\n**Embedding Spaces:**\n\n```console\nvectory embeddings delete [embedding_space_name]\n```\n\nYou can delete elements associated with these objects and their respective indices by adding the `--recursive` flag.\n\n**Indices:**\n\n```console\nvectory embeddings delete-index [index_name]\n```\n\n**All indices:**\n\n```console\nvectory embeddings delete-all-indices\n```\n\n### Comparing embedding spaces\n\nWith Vectory you can measure how similar two embedding spaces are. The similarity between two embedding spaces is the mean of the local neighborhood similarity of every point, which is the IoU of the ten nearest neighbors.\n\nTo compare two embedding spaces, Vectory computes the ten nearest neighbors for every data point for both embedding spaces, getting the IoU for each group of ten nearest neighbors obtained. Then, it shows the distribution of the IoU values. Also, we compute the mean of the IoU values to provide a single value to compare the two embedding spaces.\n\nTo learn more about comparing embedding spaces, check out [this embedding-comparator](http://vis.csail.mit.edu/pubs/embedding-comparator/) article.\n\nTo compare two embedding spaces, use:\n\n```console\nvectory compare [embedding_space_1_name] [embedding_space_2_name] --precompute\n```\n\nYou can specify the metric for the kNN search in each embedding space. You can also calculate the similarity histogram.\n\n# Python API\n\n## Create\n\nCreate datasets, experiments, and an embedding space.\n\n```python\nfrom vectory.datasets import Dataset\nfrom vectory.experiments import Experiment\nfrom vectory.spaces import EmbeddingSpace\n\ndataset = Dataset.get_or_create(csv_path=CSV_PATH, name=DATASET_NAME)\n\ntrain_dataset = Dataset.get_or_create(csv_path=TRAIN_CSV_PATH, name=TRAIN_DATASET_NAME)\n\nexperiment = Experiment.get_or_create(\n    train_dataset=TRAIN_DATASET_NAME,\n    model=MODEL_NAME,\n    name=EXPERIMENT_NAME,\n)\n\nembedding_space = EmbeddingSpace.get_or_create(\n    npz_path=NPZ_PATH,\n    dims=EMBEDDINGS_DIMENSIONS,\n    experiment=EXPERIMENT_NAME,\n    dataset=DATASET_NAME,\n    name=EMBEDDING_SPACE_NAME,\n)\n```\n\nThe `train_dataset` parameter is optional, but we recommend to track the training process.\n\nLoad an index on ElasticSearch for an embedding space:\n\n```python\nfrom vectory.indices import load_index\n\nload_index(\n    index_name=INDEX_NAME,\n    embedding_space_name=EMBEDDING_SPACE_NAME,\n)\n```\n\nYou can get the names of `dataset`, `experiment`, and `embedding_space` objects using `model.name`.\n\nAdditionally, you can specify the desired mapping to load the index. You can choose the mapping to use `cosine` or `euclidean` similarity for the kNN search. Searching will be slower but more accurate when using an `exact` model instead of the `lsh`. The `lsh` model and the `cosine` similarity are the default options. To see all the available mappings, check the possible options from `vectory.es.api.Mapping`.\n\n## Search\n\nGet all your datasets, experiments, embedding spaces, and indices:\n\n```python\nfrom vectory.db.models import (\n    DatasetModel,\n    ElasticSearchIndexModel,\n    EmbeddingSpaceModel,\n    ExperimentModel,\n    Query,\n)\n\ndatasets = Query(DatasetModel).get()\nexperiments = Query(ExperimentModel).get()\nspaces = Query(EmbeddingSpaceModel).get()\nindices = Query(ElasticSearchIndexModel).get()\n```\n\nYou can also get a specific dataset, experiment, space, or index by specifying an attribute:\n\n```python\ndataset = Query(DatasetModel).get(name=DATASET_NAME)[0]\n```\n\n## Delete\n\nDelete old datasets and their indices:\n\n```python\nfrom vectory.db.models import  DatasetModel, Query\n\ndataset = Query(DatasetModel).get(name=DATASET_NAME)[0]\ndataset.delete_instance(recursive=True)\n```\n\nSetting the `recursive` option to `True` deletes the experiments, spaces, and indices associated with the dataset.\n\nThe same can be done for experiments, embedding spaces and indices by using the `delete_instance` method on the correct object.\n\n## Compare\n\nWith Vectory you can measure how similar two embedding spaces are. The similarity between two embedding spaces is the mean of the local neighborhood similarity of every point, which is the IoU of the ten nearest neighbors. \n\nCompare two embedding spaces:\n\n```python\nfrom vectory.spaces import compare_embedding_spaces\n\nsimilarity, _, fig, _ = compare_embedding_spaces(\n    embedding_space_a=EMBEDDING_SPACE_NAME_1,\n    embedding_space_b=EMBEDDING_SPACE_NAME_2,\n    metric_a=METRIC_A,\n    metric_b=METRIC_B,\n    allow_precompute_knn=True,\n)\n```\n\nThe `metric_a` and `metric_b` parameters are either `euclidean` or `cosine`. The `allow_precompute_knn` parameter is set to `True` to allow precomputing the bulk operations for the similarity computation.\n\nThe `spaces_similarity` variable contains the similarity between the two embedding spaces. The `id_similarity_dict` variable has the similarity scores for every point in the embedding spaces.\n\nSetting the `histogram` parameter to `True` in the `compare_embedding_spaces` function will show a histogram of the similarity scores. The `fig` and `ax` variables are the figure and axis of the histogram.\n\n## Reduce dimensionality\n\nReduce the dimensionality to 2D of an embedding space:\n\n```python\nfrom vectory.visualization.utils import calculate_points, get_index\n\n# Get the embedding space data\nembeddings, rows, index = get_index(\n    EMBEDDING_SPACE_NAME, model=MODEL, similarity=SIMILARITY_METHOD\n)\n\n# Reduce the dimensionality\ndf = calculate_points(DIMENSIONAL_REDUCTION_MODEL, embeddings, rows)\n```\n\nThe `calculate_points` function reduces the dimensionality of the embeddings using the `DIMENSIONAL_REDUCTION_MODEL` model. It can be either `UMAP`, `PCA`, or `PCA +` UMAP`. It returns a DataFrame with the reduced dimensionality points and the data contained in the dataset's CSV file.\n\n## Get similar indices\n\nGet the most similar indices for a given embedding:\n\n```python\nfrom vectory.indices import match_query\n\n# Get the most similar indices for a sample embedding\nsimilarity_results, _ = match_query(indices_name=[INDEX_NAME], query_id=EMBEDDING_INDEX)\n```\n\nThe `match_query` function returns the most similar indices for a given embedding and the index of the embedding. The `indices_name` parameter is a list of indices names, and the `query_id` parameter is the id of the embedding to search. You can get the most similar indices and their scores from these results. The `similarity_results` variable contains a dictionary with the indices' names as keys and a list of tuples with the most similar indices and their scores as values.\n\n# Visualization\n\nOnce you have loaded your datasets, experiments, and embedding spaces, you can analyze the results by visualizing them on our Streamlit app or by following the Python API documentation and getting the indices.\n\n## Streamlit\n\nVisualize your embedding spaces on a local Streamlit app:\n\n```console\nvectory run\n```\n\nThe GUI dependencies are required to view the Streamlit app.\n\n# License\n\nThis project is licensed under the terms of the MIT license.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pentoai/vectory",
    "keywords": "machine-learning,embeddings,visualization,feature similarity,feature store",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vectory",
    "package_url": "https://pypi.org/project/vectory/",
    "platform": null,
    "project_url": "https://pypi.org/project/vectory/",
    "project_urls": {
      "Homepage": "https://github.com/pentoai/vectory",
      "Repository": "https://github.com/pentoai/vectory"
    },
    "release_url": "https://pypi.org/project/vectory/0.1.7/",
    "requires_dist": [
      "elasticsearch (==7.16.3)",
      "tqdm (>=4.61.1,<5.0.0)",
      "typer (>=0.4.0,<0.5.0)",
      "elasticsearch-dsl (>=7.0.0,<8.0.0)",
      "peewee (>=3.14.10,<4.0.0)",
      "pandas (>=1.3.5,<2.0.0)",
      "numpy (>=1.14.5)",
      "pynndescent (>=0.5.6,<0.6.0)",
      "matplotlib (>=3.3)",
      "bokeh (<=2.2.3)",
      "streamlit (>=1.8.1,<1.12.0)",
      "Jinja2 (==3.0.1)",
      "streamlit-bokeh-events (>=0.1.2,<0.2.0)",
      "umap-learn (>=0.5.3,<0.6.0)",
      "plotly (>=5.9.0,<6.0.0)",
      "Pillow (>=9.2.0,<10.0.0)",
      "coolname (>=1.1.0,<2.0.0)",
      "tabulate (>=0.8.10,<0.9.0)",
      "psutil (>=5.9.1,<6.0.0)",
      "docker-compose (>=1.29.2,<2.0.0)"
    ],
    "requires_python": ">=3.7.1,<3.11",
    "summary": "Streamline the benchmark and experimentation process of your models that rely on generating embeddings",
    "version": "0.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15528211,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d371bde54388fe2286a2f640047e04cb776b79de696b22f2d00bc88d29a8753",
          "md5": "f95e20beda909c5c5a3204da8cf16f89",
          "sha256": "7007c14e620eb29ad679651117c74c3f3b338fe8c0eebb66fbf2f53de083e60d"
        },
        "downloads": -1,
        "filename": "vectory-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f95e20beda909c5c5a3204da8cf16f89",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<3.10",
        "size": 22014,
        "upload_time": "2022-07-08T14:35:35",
        "upload_time_iso_8601": "2022-07-08T14:35:35.012916Z",
        "url": "https://files.pythonhosted.org/packages/0d/37/1bde54388fe2286a2f640047e04cb776b79de696b22f2d00bc88d29a8753/vectory-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b5fd55ec41ca8ad2e84eb8e9c36d2e670c9ed191b809f7d545bd28857b5032f",
          "md5": "2b1b9724b320a42107b3a2d0973385f6",
          "sha256": "74d815545ebf1521361f2ba30eaec13b1f671ef3e20a831a236b5ede45ff7939"
        },
        "downloads": -1,
        "filename": "vectory-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2b1b9724b320a42107b3a2d0973385f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<3.10",
        "size": 18239,
        "upload_time": "2022-07-08T14:35:36",
        "upload_time_iso_8601": "2022-07-08T14:35:36.892312Z",
        "url": "https://files.pythonhosted.org/packages/8b/5f/d55ec41ca8ad2e84eb8e9c36d2e670c9ed191b809f7d545bd28857b5032f/vectory-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "307465c43d31a0ba0678e6d1914f80d8e0afc7871337fce1dab36c3899fdf793",
          "md5": "b5752aef9c008eca0a23a9c1601646c5",
          "sha256": "4a029cde60c5e43f5f1fd70126975724ebd94201813b6a314332f67992e0e0e2"
        },
        "downloads": -1,
        "filename": "vectory-0.0a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5752aef9c008eca0a23a9c1601646c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<3.10",
        "size": 26418,
        "upload_time": "2022-07-15T15:42:37",
        "upload_time_iso_8601": "2022-07-15T15:42:37.239961Z",
        "url": "https://files.pythonhosted.org/packages/30/74/65c43d31a0ba0678e6d1914f80d8e0afc7871337fce1dab36c3899fdf793/vectory-0.0a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f44177fbd1f941161cb2e6ca698e2417b4738010d833d1443321e0a92656a179",
          "md5": "0e409077be598006933c56b2b06d591c",
          "sha256": "7f75a170eef194f7151fe704590efc119f9152a68ac670bf2f18cedae884ffef"
        },
        "downloads": -1,
        "filename": "vectory-0.0a2.tar.gz",
        "has_sig": false,
        "md5_digest": "0e409077be598006933c56b2b06d591c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<3.10",
        "size": 21960,
        "upload_time": "2022-07-15T15:42:38",
        "upload_time_iso_8601": "2022-07-15T15:42:38.850220Z",
        "url": "https://files.pythonhosted.org/packages/f4/41/77fbd1f941161cb2e6ca698e2417b4738010d833d1443321e0a92656a179/vectory-0.0a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8da9ff4e549ecdc23a3c64300f1ba8825bbcb4605b98d3b6b9ea2755026627b",
          "md5": "586bb8559f7cfb34bda035c01b6d5f95",
          "sha256": "e24044e9335613c86ecaf3c7aa6940f2c80cb4daadb2d7822c514ab3bc36c69e"
        },
        "downloads": -1,
        "filename": "vectory-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "586bb8559f7cfb34bda035c01b6d5f95",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<=3.9.7",
        "size": 31967,
        "upload_time": "2022-10-12T15:58:39",
        "upload_time_iso_8601": "2022-10-12T15:58:39.156162Z",
        "url": "https://files.pythonhosted.org/packages/d8/da/9ff4e549ecdc23a3c64300f1ba8825bbcb4605b98d3b6b9ea2755026627b/vectory-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6b9c6a0db28ab2ee19d510d2ece0ef2c655403e0c6b4eb6722d2bbd6105a01f",
          "md5": "bf380bff36e4958df685d0faa1b1fde5",
          "sha256": "197f8f915c4cb33bd6ccc5f6a87c3919211e0ffcad44b8f23b7b0d5427dce2a5"
        },
        "downloads": -1,
        "filename": "vectory-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bf380bff36e4958df685d0faa1b1fde5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<=3.9.7",
        "size": 31041,
        "upload_time": "2022-10-12T15:58:40",
        "upload_time_iso_8601": "2022-10-12T15:58:40.386717Z",
        "url": "https://files.pythonhosted.org/packages/e6/b9/c6a0db28ab2ee19d510d2ece0ef2c655403e0c6b4eb6722d2bbd6105a01f/vectory-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8ead6cbc0c76be44c75baae075be9906164cb234e73f9a6336ed04f5c0d830d",
          "md5": "7dba14e022f88fd6e08aa203b92d06e4",
          "sha256": "17107255b9d5ceee97583c90d62829023c19c46fa3637fb73cb05414fea3fe8c"
        },
        "downloads": -1,
        "filename": "vectory-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7dba14e022f88fd6e08aa203b92d06e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<3.11",
        "size": 32437,
        "upload_time": "2022-10-12T17:26:26",
        "upload_time_iso_8601": "2022-10-12T17:26:26.105723Z",
        "url": "https://files.pythonhosted.org/packages/d8/ea/d6cbc0c76be44c75baae075be9906164cb234e73f9a6336ed04f5c0d830d/vectory-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5b2275829e892263e56da0054c48159b5ba42b4d0e3465a4476d85d82995257",
          "md5": "08cd68726ac70c4e96b12526828edc42",
          "sha256": "20e174edbb80528e10da8bb8f8e2c25e566c02f2aadac04306587baf37aaeb7c"
        },
        "downloads": -1,
        "filename": "vectory-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "08cd68726ac70c4e96b12526828edc42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<3.11",
        "size": 31134,
        "upload_time": "2022-10-12T17:26:28",
        "upload_time_iso_8601": "2022-10-12T17:26:28.154376Z",
        "url": "https://files.pythonhosted.org/packages/c5/b2/275829e892263e56da0054c48159b5ba42b4d0e3465a4476d85d82995257/vectory-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef7c5cc51bd3b58f2c84a3ec6fedaccea6d0663dc34281456b39c8f1f53627d3",
          "md5": "6ed3b8c02e89704eb3e9825ec0fe9c59",
          "sha256": "a12d3c8b72899033803c42e02c4f54f841e1679e6c8414c47d3144060e902db9"
        },
        "downloads": -1,
        "filename": "vectory-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ed3b8c02e89704eb3e9825ec0fe9c59",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<3.11",
        "size": 33651,
        "upload_time": "2022-10-12T17:51:39",
        "upload_time_iso_8601": "2022-10-12T17:51:39.083539Z",
        "url": "https://files.pythonhosted.org/packages/ef/7c/5cc51bd3b58f2c84a3ec6fedaccea6d0663dc34281456b39c8f1f53627d3/vectory-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a4d291920bb00f1ddd25b30ad6b68c4c2648b00141e6b57a9b0ef25d75ea1f6",
          "md5": "8fbb6767123b58a46d4a7aa16478c786",
          "sha256": "715ef98c88ca6cd19158f12685062aa8e110073d62264aeb7259f02b4964cab9"
        },
        "downloads": -1,
        "filename": "vectory-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8fbb6767123b58a46d4a7aa16478c786",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<3.11",
        "size": 32341,
        "upload_time": "2022-10-12T17:51:40",
        "upload_time_iso_8601": "2022-10-12T17:51:40.931500Z",
        "url": "https://files.pythonhosted.org/packages/9a/4d/291920bb00f1ddd25b30ad6b68c4c2648b00141e6b57a9b0ef25d75ea1f6/vectory-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee8a71f64d20b4fe34f173d90d6a9d3344f9af25887c8ea8ba362db9bbeb0111",
          "md5": "8b9642c33dce87e7b7880ab49c53a8ee",
          "sha256": "cd9aaa833229e994f085e78b4fc1599ecca10fbbdefe6dabda52d5cf70d3dda3"
        },
        "downloads": -1,
        "filename": "vectory-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b9642c33dce87e7b7880ab49c53a8ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<3.11",
        "size": 34332,
        "upload_time": "2022-10-12T20:19:02",
        "upload_time_iso_8601": "2022-10-12T20:19:02.491304Z",
        "url": "https://files.pythonhosted.org/packages/ee/8a/71f64d20b4fe34f173d90d6a9d3344f9af25887c8ea8ba362db9bbeb0111/vectory-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88b877307d133d9f2be1121601ba8a4d7b90d7d59fdadcd944eadab0283bf8ba",
          "md5": "285c1ecec39c360669916a7dab31f127",
          "sha256": "096eac4e33757587615d56c1239589f882607b58ecc9920ecba1529557cd4391"
        },
        "downloads": -1,
        "filename": "vectory-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "285c1ecec39c360669916a7dab31f127",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<3.11",
        "size": 32733,
        "upload_time": "2022-10-12T20:19:03",
        "upload_time_iso_8601": "2022-10-12T20:19:03.755459Z",
        "url": "https://files.pythonhosted.org/packages/88/b8/77307d133d9f2be1121601ba8a4d7b90d7d59fdadcd944eadab0283bf8ba/vectory-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54555566b1b97cc824f720920bc67cb9079860706937b82369bcab8b5c43a8d8",
          "md5": "eadc7ccf73438c503384754253045e01",
          "sha256": "98a6e3e12d7061a4b165ffc97a351f7a0b9fc7a6a7b8a76a95a7eb4f58369433"
        },
        "downloads": -1,
        "filename": "vectory-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eadc7ccf73438c503384754253045e01",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<3.11",
        "size": 34445,
        "upload_time": "2022-10-18T16:24:01",
        "upload_time_iso_8601": "2022-10-18T16:24:01.560048Z",
        "url": "https://files.pythonhosted.org/packages/54/55/5566b1b97cc824f720920bc67cb9079860706937b82369bcab8b5c43a8d8/vectory-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cebd216a055af8200a1962c388bc3febd1b610e2234a07a7f62e162a8852974",
          "md5": "4cabc71cd60fb298f3660c71e849ccea",
          "sha256": "8085d0dc2bd7d91568298f3997ed16a778979c3e9dabafd99d9fd205c31a0624"
        },
        "downloads": -1,
        "filename": "vectory-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "4cabc71cd60fb298f3660c71e849ccea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<3.11",
        "size": 32855,
        "upload_time": "2022-10-18T16:24:02",
        "upload_time_iso_8601": "2022-10-18T16:24:02.933798Z",
        "url": "https://files.pythonhosted.org/packages/0c/eb/d216a055af8200a1962c388bc3febd1b610e2234a07a7f62e162a8852974/vectory-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf8bd7193f1aa735a9595046f518c47c7f2cd51c8b998078675edf095807be6a",
          "md5": "0cd6ec9cdb92028816507ab76018edb6",
          "sha256": "7f704888f129e64978d0551ba959ca4137afc4f909ddb94baee1d7e4f2868662"
        },
        "downloads": -1,
        "filename": "vectory-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0cd6ec9cdb92028816507ab76018edb6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<3.11",
        "size": 34883,
        "upload_time": "2022-10-25T20:51:29",
        "upload_time_iso_8601": "2022-10-25T20:51:29.254325Z",
        "url": "https://files.pythonhosted.org/packages/cf/8b/d7193f1aa735a9595046f518c47c7f2cd51c8b998078675edf095807be6a/vectory-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0265b4b142d64e993e32c91f39b9cc2329734e2dc77e2f41e0e729ab3b2ae69",
          "md5": "548b37ff09e72d5be6a91d803a76e72d",
          "sha256": "0838517b370b8044b43278239143c66840446d8c14f4c82c3bc15cbde0126185"
        },
        "downloads": -1,
        "filename": "vectory-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "548b37ff09e72d5be6a91d803a76e72d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<3.11",
        "size": 33153,
        "upload_time": "2022-10-25T20:51:30",
        "upload_time_iso_8601": "2022-10-25T20:51:30.936027Z",
        "url": "https://files.pythonhosted.org/packages/d0/26/5b4b142d64e993e32c91f39b9cc2329734e2dc77e2f41e0e729ab3b2ae69/vectory-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf8bd7193f1aa735a9595046f518c47c7f2cd51c8b998078675edf095807be6a",
        "md5": "0cd6ec9cdb92028816507ab76018edb6",
        "sha256": "7f704888f129e64978d0551ba959ca4137afc4f909ddb94baee1d7e4f2868662"
      },
      "downloads": -1,
      "filename": "vectory-0.1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0cd6ec9cdb92028816507ab76018edb6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.1,<3.11",
      "size": 34883,
      "upload_time": "2022-10-25T20:51:29",
      "upload_time_iso_8601": "2022-10-25T20:51:29.254325Z",
      "url": "https://files.pythonhosted.org/packages/cf/8b/d7193f1aa735a9595046f518c47c7f2cd51c8b998078675edf095807be6a/vectory-0.1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d0265b4b142d64e993e32c91f39b9cc2329734e2dc77e2f41e0e729ab3b2ae69",
        "md5": "548b37ff09e72d5be6a91d803a76e72d",
        "sha256": "0838517b370b8044b43278239143c66840446d8c14f4c82c3bc15cbde0126185"
      },
      "downloads": -1,
      "filename": "vectory-0.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "548b37ff09e72d5be6a91d803a76e72d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.1,<3.11",
      "size": 33153,
      "upload_time": "2022-10-25T20:51:30",
      "upload_time_iso_8601": "2022-10-25T20:51:30.936027Z",
      "url": "https://files.pythonhosted.org/packages/d0/26/5b4b142d64e993e32c91f39b9cc2329734e2dc77e2f41e0e729ab3b2ae69/vectory-0.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}