{
  "info": {
    "author": "Johannes Fischer",
    "author_email": "<aulasparticularesdealemaosp@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Editors :: Text Processing",
      "Topic :: Text Processing :: Filters",
      "Topic :: Text Processing :: General",
      "Topic :: Text Processing :: Indexing",
      "Topic :: Utilities"
    ],
    "description": "\n### Scan screenshots with Tesseract\n\n\n\n<img src=\"https://github.com/hansalemaos/screenshots/raw/main/tesseractscreen.png\"/>\n\n\n\n[Video ](https://github.com/hansalemaos/screenshots/blob/main/tesseractscreen.mp4?raw=true)\n\n\n\n```python\n\n\n\n```\n\n\n\n### Example 1 (screenshots from BlueStacks using ADB)\n\n\n\n```python\n\nimport cv2\n\nimport pandas as pd\n\nimport numpy as np\n\nfrom time import sleep\n\nfrom tesseract_window_scanner import pd_add_tesseract, sub_color_in_image, \\\n\n    substitute_colors_with_equal_rgb_values, draw_tesseract_results, get_tesseractdf,keyboard,ScreenShots\n\n\n\n\n\ndef activate_stop():\n\n    global stop\n\n    stop = True\n\n\n\ntesseractpath = r\"C:\\Program Files\\Tesseract-OCR\\tesseract.exe\"\n\npd_add_tesseract(tesseractpath)\n\nlanguages = \"de+pt+deu\"\n\n\n\nsc2 = ScreenShots(\n\n    hwnd=None, adb_path=r\"C:\\ProgramData\\adb\\adb.exe\", adb_serial=\"localhost:5735\"\n\n)\n\nquit_key = \"q\"\n\nsc2.imshow_adb(sleep_time=0.05, quit_key=quit_key)\n\nsleep(1)\n\nsc2.enable_show_edited_images()\n\nstop = False\n\nkeyboard.add_hotkey(quit_key, activate_stop)\n\n\n\nshowresults = True\n\nwhile not stop:\n\n    screenshot_window = sc2.imget_adb()\n\n\n\n    # optional filter\n\n    screenshot_window = sub_color_in_image(\n\n        img=screenshot_window,\n\n        conditions=((\"r\", \">\", 200), \"|\", (\"g\", \">\", 200), \"|\", (\"b\", \">\", 200)),\n\n        newcolor=(255, 255, 255),\n\n    )\n\n    df = get_tesseractdf(\n\n        screenshot_window, lang=languages, drop_empty_strings=True, conf_thresh=60\n\n    )\n\n    tesserresults = draw_tesseract_results(\n\n        dft=df, img=screenshot_window, conf_thresh=60\n\n    )\n\n    if showresults:\n\n        sc2.show_edited_image(tesserresults)  # show the edited pic\n\n    print(df[[\"text\", \"conf\"]])\n\n```\n\n\n\n### Example 2 (screenshots from BlueStacks using hwnd)\n\n\n\n```python\n\nimport cv2\n\nimport pandas as pd\n\nimport numpy as np\n\nfrom time import sleep\n\nfrom tesseract_window_scanner import pd_add_tesseract, sub_color_in_image, \\\n\n    substitute_colors_with_equal_rgb_values, draw_tesseract_results, get_tesseractdf,keyboard,ScreenShots\n\n\n\ndef activate_stop():\n\n    global stop\n\n    stop = True\n\n\n\n\n\ntesseractpath = r\"C:\\Program Files\\Tesseract-OCR\\tesseract.exe\"\n\nlanguages = \"de+pt+deu\"\n\npd_add_tesseract(tesseractpath)\n\nsc2 = ScreenShots()\n\nsc2.find_window_with_regex(\"[bB]lue[sS]tacks.*\")\n\nquit_key = \"e\"\n\nsc2.imshow_hwnd(sleep_time=0.05, quit_key=quit_key)\n\nsleep(1)\n\nsc2.enable_show_edited_images()\n\nstop = False\n\nkeyboard.add_hotkey(quit_key, activate_stop)\n\n\n\nshowresults = True\n\nwhile not stop:\n\n    screenshot_window = sc2.imget_hwnd()\n\n\n\n    # screenshot_window=sub_color_in_image(img=screenshot_window, conditions=(('r' ,'>', 200) ,'|' ,('g' ,'>', 200), '|', ('b' ,'>', 200)), newcolor=(255,255,255))\n\n    df = get_tesseractdf(\n\n        screenshot_window, lang=languages, drop_empty_strings=True, conf_thresh=60\n\n    )\n\n    tesserresults = draw_tesseract_results(\n\n        dft=df, img=screenshot_window, conf_thresh=60\n\n    )\n\n    if showresults:\n\n        sc2.show_edited_image(tesserresults)  # show the edited pic\n\n    print(df[[\"text\", \"conf\"]])\n\n```\n\n\n\n### Example 3 (screenshots from BlueStacks using hwnd without showing the results)\n\n\n\n```python\n\nimport cv2\n\nimport pandas as pd\n\nimport numpy as np\n\nfrom time import sleep\n\nfrom tesseract_window_scanner import pd_add_tesseract, sub_color_in_image, \\\n\n    substitute_colors_with_equal_rgb_values, draw_tesseract_results, get_tesseractdf,keyboard,ScreenShots\n\n\n\n\n\ndef activate_stop():\n\n    global stop\n\n    stop = True    \n\n\n\ntesseractpath = r\"C:\\Program Files\\Tesseract-OCR\\tesseract.exe\"\n\nlanguages = \"de+pt+deu\"\n\npd_add_tesseract(tesseractpath)\n\nsc2 = ScreenShots()\n\nsc2.find_window_with_regex(\"[bB]lue[sS]tacks.*\")\n\n\n\nquit_key = \"x\"\n\nstop = False\n\nkeyboard.add_hotkey(quit_key, activate_stop)\n\n\n\nwhile not stop:\n\n    screenshot_window = sc2.imget_hwnd()\n\n\n\n    screenshot_window = sub_color_in_image(\n\n        img=screenshot_window,\n\n        conditions=((\"r\", \">\", 200), \"|\", (\"g\", \">\", 200), \"|\", (\"b\", \">\", 200)),\n\n        newcolor=(255, 255, 255),\n\n    )\n\n    df = get_tesseractdf(\n\n        screenshot_window, lang=languages, drop_empty_strings=True, conf_thresh=60\n\n    )\n\n    print(df[[\"text\", \"conf\"]])\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hansalemaos/tesseract_window_scanner",
    "keywords": "screenshot,adb,windows,hwnd,handle,bot,tesseract",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tesseract-window-scanner",
    "package_url": "https://pypi.org/project/tesseract-window-scanner/",
    "platform": null,
    "project_url": "https://pypi.org/project/tesseract-window-scanner/",
    "project_urls": {
      "Homepage": "https://github.com/hansalemaos/tesseract_window_scanner"
    },
    "release_url": "https://pypi.org/project/tesseract-window-scanner/0.12/",
    "requires_dist": [
      "a-pandas-ex-tesseract-multirow-regex-fuzz",
      "keyboard",
      "numpy",
      "opencv-python",
      "pandas",
      "windows-adb-screen-capture"
    ],
    "requires_python": "",
    "summary": "OCR on screenshots with tesseract - Windows only",
    "version": "0.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15542970,
  "releases": {
    "0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02acc74ce93ebb5b6122fc28afaf1611df7ac5fb2e398dcbff23b071fd11ed33",
          "md5": "44e8709aae5007d12e7c517edd4caa9b",
          "sha256": "ba206400c791b95e941ad95b06fc049b904b8abab07ae2234b1822f1f81a61bb"
        },
        "downloads": -1,
        "filename": "tesseract_window_scanner-0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "44e8709aae5007d12e7c517edd4caa9b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8345,
        "upload_time": "2022-10-22T21:06:37",
        "upload_time_iso_8601": "2022-10-22T21:06:37.355050Z",
        "url": "https://files.pythonhosted.org/packages/02/ac/c74ce93ebb5b6122fc28afaf1611df7ac5fb2e398dcbff23b071fd11ed33/tesseract_window_scanner-0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35c15ff33283299fa1eff10d98ba027dd0b1d366d4c84797d5c6e8d7f3bb3f60",
          "md5": "31160990bdd758433f810e9b8d5c2783",
          "sha256": "841b6e6a73a33b0d9d2f3c5d13fc8b1f80fffce6feb42c31c4d52faa1a229ede"
        },
        "downloads": -1,
        "filename": "tesseract_window_scanner-0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "31160990bdd758433f810e9b8d5c2783",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6181,
        "upload_time": "2022-10-22T21:06:38",
        "upload_time_iso_8601": "2022-10-22T21:06:38.809940Z",
        "url": "https://files.pythonhosted.org/packages/35/c1/5ff33283299fa1eff10d98ba027dd0b1d366d4c84797d5c6e8d7f3bb3f60/tesseract_window_scanner-0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22ccf391005e6e64eb4d8d16cfa0cc0074e295c0a820a2a03e7709b16d3f1a05",
          "md5": "dfec7e8da6a0af80efa1b044fb09e2a4",
          "sha256": "685d75f99a575995e35d6b8914e7bf67f7045f082e40b5ee89a4dae4f2e89b86"
        },
        "downloads": -1,
        "filename": "tesseract_window_scanner-0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dfec7e8da6a0af80efa1b044fb09e2a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8301,
        "upload_time": "2022-10-22T21:12:24",
        "upload_time_iso_8601": "2022-10-22T21:12:24.349983Z",
        "url": "https://files.pythonhosted.org/packages/22/cc/f391005e6e64eb4d8d16cfa0cc0074e295c0a820a2a03e7709b16d3f1a05/tesseract_window_scanner-0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9477866cf6c372d404f3fbcff82b45d4a93af58ea7e898cf50267790cdaebd84",
          "md5": "e34df3be830c3d3fee8404a5cdf530e8",
          "sha256": "089828d089d3fc9d53ea1b7f25e56ce4b55af98c3872a47b913ad7ef301b3e85"
        },
        "downloads": -1,
        "filename": "tesseract_window_scanner-0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "e34df3be830c3d3fee8404a5cdf530e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6157,
        "upload_time": "2022-10-22T21:12:25",
        "upload_time_iso_8601": "2022-10-22T21:12:25.946509Z",
        "url": "https://files.pythonhosted.org/packages/94/77/866cf6c372d404f3fbcff82b45d4a93af58ea7e898cf50267790cdaebd84/tesseract_window_scanner-0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c921f0f706ea9b1df1897d914f146f98373eaa58a43b4c685d5fbc4f2b85bf1c",
          "md5": "c13afd2cb0382de49ab3f623f4be764b",
          "sha256": "8b72c77eddf387c6c33a5abd9e6725c8bf877c758310993dccc1da00c1045501"
        },
        "downloads": -1,
        "filename": "tesseract_window_scanner-0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c13afd2cb0382de49ab3f623f4be764b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8325,
        "upload_time": "2022-10-26T19:47:45",
        "upload_time_iso_8601": "2022-10-26T19:47:45.468237Z",
        "url": "https://files.pythonhosted.org/packages/c9/21/f0f706ea9b1df1897d914f146f98373eaa58a43b4c685d5fbc4f2b85bf1c/tesseract_window_scanner-0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61f6ad31f84a685dc2a6c5ccff7473c11c5e776d1b12d03fd3c908942f2e8909",
          "md5": "e9dca86362a1afa1ed98d8dd39d5803e",
          "sha256": "b8c6ce214514def8479ba54adf355dd0c9e33a47d0fa738b17ffc4ea1a4b4e43"
        },
        "downloads": -1,
        "filename": "tesseract_window_scanner-0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "e9dca86362a1afa1ed98d8dd39d5803e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6192,
        "upload_time": "2022-10-26T19:47:47",
        "upload_time_iso_8601": "2022-10-26T19:47:47.188815Z",
        "url": "https://files.pythonhosted.org/packages/61/f6/ad31f84a685dc2a6c5ccff7473c11c5e776d1b12d03fd3c908942f2e8909/tesseract_window_scanner-0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c921f0f706ea9b1df1897d914f146f98373eaa58a43b4c685d5fbc4f2b85bf1c",
        "md5": "c13afd2cb0382de49ab3f623f4be764b",
        "sha256": "8b72c77eddf387c6c33a5abd9e6725c8bf877c758310993dccc1da00c1045501"
      },
      "downloads": -1,
      "filename": "tesseract_window_scanner-0.12-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c13afd2cb0382de49ab3f623f4be764b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8325,
      "upload_time": "2022-10-26T19:47:45",
      "upload_time_iso_8601": "2022-10-26T19:47:45.468237Z",
      "url": "https://files.pythonhosted.org/packages/c9/21/f0f706ea9b1df1897d914f146f98373eaa58a43b4c685d5fbc4f2b85bf1c/tesseract_window_scanner-0.12-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61f6ad31f84a685dc2a6c5ccff7473c11c5e776d1b12d03fd3c908942f2e8909",
        "md5": "e9dca86362a1afa1ed98d8dd39d5803e",
        "sha256": "b8c6ce214514def8479ba54adf355dd0c9e33a47d0fa738b17ffc4ea1a4b4e43"
      },
      "downloads": -1,
      "filename": "tesseract_window_scanner-0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "e9dca86362a1afa1ed98d8dd39d5803e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6192,
      "upload_time": "2022-10-26T19:47:47",
      "upload_time_iso_8601": "2022-10-26T19:47:47.188815Z",
      "url": "https://files.pythonhosted.org/packages/61/f6/ad31f84a685dc2a6c5ccff7473c11c5e776d1b12d03fd3c908942f2e8909/tesseract_window_scanner-0.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}