{
  "info": {
    "author": "Sylvain Riondet",
    "author_email": "sylvainrionder@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Healthcare Industry",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Topic :: Database",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# PLoT-ME\n**Pre-classification of Long-reads for Memory Efficient Taxonomic assignment** <br>\nSylvain Riondet, K. Križanović, J. Marić and M, Šikić, Niranjan Nagarajan <br>\nNUS/SoC, Biopolis/GIS, Singapore\n\n_Tool in active development, any feedback or bug report is welcome, either through [github](https://github.com/sylvain-ri/PLoT-ME) or on [twitter](https://twitter.com/Sylvain14518009)_\n\n## Description\n#### Pre-Processing\n- Segmentation of NCBI RefSeq into clusters\n- Building of taxonomic classifiers' indexes for each cluster\n\n#### Classification\nTaxonomic classification of mock communities / metagenomic fastq files\n- Assignment of long DNA reads (Nanopore/PacBio) to each cluster\n- Classification by the classifier with a subset of RefSeq\n- Merging of reports\n\nKraken2 _(Derrick E. Wood et al. 2019)_ and Centrifuge _(D.Kim et al. 2016)_ are currently automated, and any classifier able to build its index on a set of .fna files with a provided taxid should work.\n\n## Take-aways\n![Memory Consumption - Bare Classifier (33 GB) vs PLoT-ME (3.6 GB for 20 bins)](doc-media/Memory_MaxBinSize.png \"Memory Consumption - Bare Classifier vs PLoT-ME\")\n- High reduction in memory needs, defined by the number of clusters *\n- _Compatible_ and _enhancing_ existing taxonomic classifiers\n- Slight over-head of the pre-classification (currently ~3-5x in time, improvements for future releases) \n\n\\* Mini Batch K-Means, _Web-Scale K-Means Clustering D. Sculley 2010_\n\n## Requirements\n- Database of Genomes, in .fna / .fasta format, with an associated taxonomy id. \nTested with [NCBI RefSeq](https://www.ncbi.nlm.nih.gov/refseq/) ([ftp server](ftp://ftp.ncbi.nlm.nih.gov/refseq/release/))\n- Taxonomic classifier, must be installed and added to PATH. Currently supported:\n    - [Kraken2](https://github.com/DerrickWood/kraken2/wiki/Manual)\n    - [Centrifuge](https://ccb.jhu.edu/software/centrifuge/manual.shtml) \n    - (feel free to request support for more)\n- Linux (tested on Ubuntu 18.04)\n- [Python](https://www.python.org/) >= 3.7 \n\nPackage | Version\n --- | --- \nbiopython   | \\>= 1.72\nete3        | \\>= 3.1.1\nnumpy       | \\>= 1.17.3\npandas      | \\>= 0.23\nscikit-learn| \\>= 0.18\ntqdm        | \\>= 4.24.0\n\n\n## Installation\nCreate a Python 3 environment with [conda](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html)\n or [pyenv](https://realpython.com/intro-to-pyenv/). <br>\nInstallation is then done with pip: <br>\n`python3 -m pip install plot-me` <br>\nThis will create 2 commands, `plot-me.preprocess` and `plot-me.classify` detailed in the 'Usage'.  <br> \n<br>\nIt is also possible to clone [PLoT-ME's repo](https://github.com/sylvain-ri/PLoT-ME),\n and launching commands directly with python `path/to/PLoT-ME/parse_DB.py or classify.py`\n\n## Usage\n#### Pre-Processing\nFor the full help: `plot-me.preprocess -h`  <br>\nTypical usage:  <br>\n`plot-me.preprocess <path/NCBI/refseq> <folder/for/clusters> <path/taxonomy> \n -k 4 -w 10000 -n 10 -o <OmitFoldersContainingString>` <br>\n#### Pre-classification + classification\nFor the full help: `plot-me.classify -h`  <br>\nTypical usage:  <br>\n`plot-me.classify <folder/with/clusters> <folder/reports> \n -i <fastq files to preclassify>` <br>\n\n#### Example\n```\n/mnt/data\n|-- mock_files\n|   |-- mock_community_1.fastq\n|   |   \\-- minikm_b10_k3_s10000_oplant-vertebrate (one tmp file per cluster, generated by PLoT-ME)\n|   \\-- mock_community_2.fastq\n|-- PLoT-ME\n|   |-- k3_s10000\n|   |   | -- kmer_counts\n|   |   |    |-- counts.k3_s10000 (same tree as RefSeq, with <sequencing_name>.3mer_count.pd)\n|   |   |    \\-- all-counts.k3_s10000_oplant-vertebrate.csv\n|   |   | -- minikm_b10_k3_s10000_oplant-vertebrate               <*>\n|   |   |    |-- centrifuge       (10 folders with indexes)\n|   |   |    |-- kraken2          (10 folders with indexes)\n|   |   |    |-- RefSeq_binned    (10 folders with fna files)\n|   |   |    |-- model.minikm_b10_k3_s10000_oplant-vertebrate.pkl\n|   |   |    \\-- segments-clustered.minikm_b10_k3_s10000_oplant-vertebrate.pd\n|   |   \\ -- minikm_b20_k3_s10000_oplant-vertebrate\n|   |        \\-- (same structure) \n|   |-- k4_s10000\n|   |   ` --  (same structure)\n|   \\-- no-binning\n|       |-- oAllRefSeq\n|       \\-- oplant-vertebrate\n|           |-- centrifuge\n|           \\-- kraken2\n|-- NCBI\n|   \\-- refseq\n|-- reports\n|   \\-- mock_community_1 (one report per cluster)\n\\-- taxonomy\n```\nThis `<*>` can be generated with: <br>\n`plot-me.preprocess /mnt/data/NCBI/refseq /mnt/data/PLoT-ME /mnt/data/taxonomy -k 3 -w 10000 -n 10\n -o plant vertebrate` <br>\nAnd can be used with: <br>\n`plot-me.classify /mnt/data/PLoT-ME/k3_s10000/minikm_b10_k3_s10000_oplant-vertebrate /mnt/data/reports\n -i /mnt/data/mock_files/mock_community_1.fastq`\n\n## Technical details\nPython 3 is the main programming language, with extensive use of libraries. \nDependencies are resolved using [PIP](https://pypi.org/)\n\n#### Intermediate Data \nData is saved as pickle `.pkl` or Pandas DataFrame `.pd` <br> \n- **Kmer counts** Pandas DataFrames are saved under `.../kmer_counts/counts.<param>` and have the following columns: <br>\n`   taxon\tcategory\tstart\tend\tname\tdescription\tfna_path\tAAAA ... TTTT`\n- **Cluster assignments** `segments-clustered.\\<param\\>.pd` trade the nucleotides columns to a `cluster` column.\n- `RefSeq_binned` is the clustering made by PLoT-ME, and holds one folder per cluster, with concatenated segments of genomes (one .fna file per taxa)\n- **Libraries** generated by classifier, depends on each of them.\n\n#### Final files\nThe `model*.pkl` and the folder `kraken2` or `centrifuge` are needed for PLoT-ME to work. Folder tree needs to remain intact. \n\n## Work in progress\n_April 2021_\n- Implementation of Cython version of the kmer counter\n- Adding reverse complement to forward strand\n\n_July 2020:_\n- `pre-process` Using large k (5+) and small s (10000-) yield very large kmer counts, costing\n high amounts of RAM (esp. when combining all kmer counts together,\n RAM needs to reach ~30GB or more). \n- `classify` Merging of reports \n- `pre-process` Cleaning of pre-processing files `--clean`\n\n#### Future work\n- `classify` Cleaning of pre-classification tmp files\n- `classify` Multi cores\n- `classify`/`pre-process` Speed up kmer counting\n- `pre-process` Even sized bins\n- `pre-process` Overlapping clusters or tricks for higher accuracy\n\n## Contact\n**Author:** Sylvain Riondet, PhD student at the National University of Singapore, School of Computing <br>\n**Email:** _sylvainriondet@gmail.com_ <br>\n**Lab:** Genome Institute of Singapore / National University of Singapore<br>\n**Supervisors:** Niranjan Nagarajan & Martin Henz <br>\n\n## Thanks\nThanks for your support and supervision all along my PhD and this project: Martin Henz, Chenhao Li, Rafael Peres, D. Bertrand and the whole [MTMS lab](https://csb5.github.io/)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sylvain-ri/PLoT-ME",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PLoT-ME",
    "package_url": "https://pypi.org/project/PLoT-ME/",
    "platform": "",
    "project_url": "https://pypi.org/project/PLoT-ME/",
    "project_urls": {
      "Homepage": "https://github.com/sylvain-ri/PLoT-ME"
    },
    "release_url": "https://pypi.org/project/PLoT-ME/0.9.1/",
    "requires_dist": [
      "biopython (>=1.72)",
      "Cython (>=0.26.2)",
      "ete3 (>=3.1.1)",
      "numpy (>=1.16.5)",
      "pandas (>=0.23)",
      "scikit-learn (>=0.18)",
      "setuptools (>=39.1.0)",
      "tqdm (>=4.24.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Pre-classification of Long-reads for Memory Efficient Taxonomic assignment",
    "version": "0.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10144259,
  "releases": {
    "0.8.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7358c21b9bb5bd14f5c913959a2af2bc5d9115d2950c38baab69f64784275504",
          "md5": "7907f00a076899160a7db9e652dc0b23",
          "sha256": "8c03a0366c1eb805b76e978c1d04c7ee25e565168454400b282b54d12299fc95"
        },
        "downloads": -1,
        "filename": "PLoT_ME-0.8.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7907f00a076899160a7db9e652dc0b23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 39548,
        "upload_time": "2020-07-08T23:19:29",
        "upload_time_iso_8601": "2020-07-08T23:19:29.024178Z",
        "url": "https://files.pythonhosted.org/packages/73/58/c21b9bb5bd14f5c913959a2af2bc5d9115d2950c38baab69f64784275504/PLoT_ME-0.8.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "822581e323cfbe2f59239527dc47ee4a6ba04cf55a967a1ff2273cd2e256be09",
          "md5": "3ce532a076c5ab1664a2bdbe2940473f",
          "sha256": "ed08c762ab5b0d135e328c690fe1bb6e1170175a88985d9d8be657d1efe8b9ec"
        },
        "downloads": -1,
        "filename": "PLoT-ME-0.8.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3ce532a076c5ab1664a2bdbe2940473f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 48860,
        "upload_time": "2020-07-08T23:19:31",
        "upload_time_iso_8601": "2020-07-08T23:19:31.569375Z",
        "url": "https://files.pythonhosted.org/packages/82/25/81e323cfbe2f59239527dc47ee4a6ba04cf55a967a1ff2273cd2e256be09/PLoT-ME-0.8.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a31d5cfcda6e14ca49e6eb12cfae18229fc89d77568b9e2c8bbe50d2816acb43",
          "md5": "e6de6a9d271f82b29e018aecfea2078c",
          "sha256": "195dc2be07b32253a9fa86e669cb7bcede41476e4aeb180e081613e52eb96315"
        },
        "downloads": -1,
        "filename": "PLoT_ME-0.9.1-cp37-cp37m-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "e6de6a9d271f82b29e018aecfea2078c",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.7",
        "size": 1594568,
        "upload_time": "2021-04-22T23:05:40",
        "upload_time_iso_8601": "2021-04-22T23:05:40.041152Z",
        "url": "https://files.pythonhosted.org/packages/a3/1d/5cfcda6e14ca49e6eb12cfae18229fc89d77568b9e2c8bbe50d2816acb43/PLoT_ME-0.9.1-cp37-cp37m-manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a50eb420009fa99c6151525bf41e70a0e53021f548fb647f28045bc89ff47aa",
          "md5": "40af871296a61254d233dc39d6b9640e",
          "sha256": "8689d86e44de30e989884e9c5f6397b03ed110bfd393d0a409e1f77b2a72b134"
        },
        "downloads": -1,
        "filename": "PLoT_ME-0.9.1-cp38-cp38-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "40af871296a61254d233dc39d6b9640e",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.7",
        "size": 730811,
        "upload_time": "2021-04-22T23:05:42",
        "upload_time_iso_8601": "2021-04-22T23:05:42.018057Z",
        "url": "https://files.pythonhosted.org/packages/8a/50/eb420009fa99c6151525bf41e70a0e53021f548fb647f28045bc89ff47aa/PLoT_ME-0.9.1-cp38-cp38-manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "208ac92934bd524eaae4e51331ee03aeeb3374c08604172a4c605204f25354cb",
          "md5": "04d48acdcacc45ed61bc6d4fc4a93212",
          "sha256": "4388d887cade4822e21acf4670b551f506e059eca1da0be88121f4f67a6d18be"
        },
        "downloads": -1,
        "filename": "PLoT_ME-0.9.1-cp39-cp39-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "04d48acdcacc45ed61bc6d4fc4a93212",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 696025,
        "upload_time": "2021-04-22T23:05:43",
        "upload_time_iso_8601": "2021-04-22T23:05:43.752043Z",
        "url": "https://files.pythonhosted.org/packages/20/8a/c92934bd524eaae4e51331ee03aeeb3374c08604172a4c605204f25354cb/PLoT_ME-0.9.1-cp39-cp39-manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a31d5cfcda6e14ca49e6eb12cfae18229fc89d77568b9e2c8bbe50d2816acb43",
        "md5": "e6de6a9d271f82b29e018aecfea2078c",
        "sha256": "195dc2be07b32253a9fa86e669cb7bcede41476e4aeb180e081613e52eb96315"
      },
      "downloads": -1,
      "filename": "PLoT_ME-0.9.1-cp37-cp37m-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "e6de6a9d271f82b29e018aecfea2078c",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.7",
      "size": 1594568,
      "upload_time": "2021-04-22T23:05:40",
      "upload_time_iso_8601": "2021-04-22T23:05:40.041152Z",
      "url": "https://files.pythonhosted.org/packages/a3/1d/5cfcda6e14ca49e6eb12cfae18229fc89d77568b9e2c8bbe50d2816acb43/PLoT_ME-0.9.1-cp37-cp37m-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a50eb420009fa99c6151525bf41e70a0e53021f548fb647f28045bc89ff47aa",
        "md5": "40af871296a61254d233dc39d6b9640e",
        "sha256": "8689d86e44de30e989884e9c5f6397b03ed110bfd393d0a409e1f77b2a72b134"
      },
      "downloads": -1,
      "filename": "PLoT_ME-0.9.1-cp38-cp38-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "40af871296a61254d233dc39d6b9640e",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.7",
      "size": 730811,
      "upload_time": "2021-04-22T23:05:42",
      "upload_time_iso_8601": "2021-04-22T23:05:42.018057Z",
      "url": "https://files.pythonhosted.org/packages/8a/50/eb420009fa99c6151525bf41e70a0e53021f548fb647f28045bc89ff47aa/PLoT_ME-0.9.1-cp38-cp38-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "208ac92934bd524eaae4e51331ee03aeeb3374c08604172a4c605204f25354cb",
        "md5": "04d48acdcacc45ed61bc6d4fc4a93212",
        "sha256": "4388d887cade4822e21acf4670b551f506e059eca1da0be88121f4f67a6d18be"
      },
      "downloads": -1,
      "filename": "PLoT_ME-0.9.1-cp39-cp39-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "04d48acdcacc45ed61bc6d4fc4a93212",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.7",
      "size": 696025,
      "upload_time": "2021-04-22T23:05:43",
      "upload_time_iso_8601": "2021-04-22T23:05:43.752043Z",
      "url": "https://files.pythonhosted.org/packages/20/8a/c92934bd524eaae4e51331ee03aeeb3374c08604172a4c605204f25354cb/PLoT_ME-0.9.1-cp39-cp39-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}