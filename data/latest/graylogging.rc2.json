{
  "info": {
    "author": "Eric Rochow",
    "author_email": "ericrochow+pypi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# graylogging\n\nGraylogging is an extension to the built-in logging module that allows logs to be written directly to Graylog via the GELF input rather than feeding from a flat file.\n\n## Installation\n\nThe package can be installed by one of the following methods:\n\n### PIP\n\n    pip install graylogging\n\n### Pipenv\n\n    pipenv install graylogging\n\n## General Use\n\n\n### Initialization\n\nImport both the `logging` and the `graylogging` module:\n\n    import logging\n    import graylogging\n\nAfter those have been imported, you can use both the GraylogHandler and GraylogFormatter classes like the other built-in Formatters and Handlers:\n\n    logger = logging.getLogger(name)\n    gh = GraylogHandler(graylog_server, gelf_port, transport=\"tcp\", appname=\"MyKickassApp\")\n    gh.setFormatter(GraylogFormatter)\n    logger.addHandler(gh)\n    logger.setLevel(logging.DEBUG)\n\nThe transport options are \"tcp\", \"udp\", and \"http\"; the correct choice will depend on the Graylog input configuration. \n\nThis handler could also be used in conjunction with another handler. For example if it's desired to output the logs to console as well, we can accomplish this with the following example:\n\n    graylog_server = \"graylog.contoso.com\"\n    gelf_port = 12201\n    appname = \"MyKickassApp\"\n    log_level = logging.INFO\n    logger = logging.getLogger(name)\n    logger.propogate = False\n    logger.disable_existing_loggers = True\n    console_formatter = logging.Formatter(\n        \"%(asctime)s :: %(name)s :: %(levelname)s :: %(message)s\"\n    )\n    sh = logging.StreamHandler()\n    sh.setFormatter(console_formatter)\n    logger.handlers = [ch]\n    gh = GraylogHandler(graylog_server, gelf_port, transport=\"http\", appname=appname)\n    gh.setFormatter(GraylogFormatter)\n    logger.addHandler(gh)\n    logger.setLevel(log_level)\n\nYou should be ready to roll now.\n\n### Shipping actual log messages:\n\nOne logging has been initialized, graylogging can be used just like the built-in logging module:\n\n    logger.debug(message)\n    logger.info(message)\n    logger.warning(message)\n    logger.error(message)\n    logger.critical(message)\n    logger.exception(message)\n\n## Enhancements\n\n### JSON payloads\n\nGraylogging can be fed either a string as normal, or a dict that will be json-encoded before shipping. This will allow a configured pipeline rule to parse the json and extract the key-value pairs into searchable fields. Example pipeline rule:\n\n    rule \"parse gelf json input\"\n    when\n      contains(to_string($message.application), \"MyKickassApp\")\n    then\n      let json_fields = parse_json(to_string($message.message));\n      let json_map = to_map(json_fields);\n      set_fields(json_map);\n    end\n\nThis will allow you to search by appname and e.g. severity level, function name, as well as any exception info (if called from logger.exception()).\n\n## Limitations\n\n* Graylogging requires python3.6+\n* GraylogHandler and GraylogFormatter are co-dependent. Don't try to use either without the other.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ericrochow/graylogging",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "graylogging",
    "package_url": "https://pypi.org/project/graylogging/",
    "platform": "any",
    "project_url": "https://pypi.org/project/graylogging/",
    "project_urls": {
      "Homepage": "https://github.com/ericrochow/graylogging"
    },
    "release_url": "https://pypi.org/project/graylogging/2.1.0/",
    "requires_dist": [
      "requests[security]",
      "Sphinx ; extra == 'docs'",
      "SimpleHTTPServer ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'"
    ],
    "requires_python": ">=3.6",
    "summary": "An extension to the builtin logging module that writes to a Graylog server instead of a flat file.",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11712446,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41fbbb4cfdde69227e782ae2488ccd03d5983e31616d5c99a6e45b4531c9052b",
          "md5": "7946823158f632a1bfad010a80c418dc",
          "sha256": "73ba2a56bb7a119f631b919011a8b7f43663c832c956080d58bf24d6035a1b49"
        },
        "downloads": -1,
        "filename": "graylogging-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7946823158f632a1bfad010a80c418dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10678,
        "upload_time": "2021-02-17T22:11:10",
        "upload_time_iso_8601": "2021-02-17T22:11:10.611638Z",
        "url": "https://files.pythonhosted.org/packages/41/fb/bb4cfdde69227e782ae2488ccd03d5983e31616d5c99a6e45b4531c9052b/graylogging-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86f55e97712ef769898003f0d6af5876709ef24dc8e76ba7a40dfc92eb62de51",
          "md5": "7ec14e322e3e6e41cb760386adaeb8cb",
          "sha256": "68aee61b1a0ef29aad72d7d7066c791310b3645460685cd8f8ceb10008f2ba1a"
        },
        "downloads": -1,
        "filename": "graylogging-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7ec14e322e3e6e41cb760386adaeb8cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11442,
        "upload_time": "2021-02-17T22:11:11",
        "upload_time_iso_8601": "2021-02-17T22:11:11.954793Z",
        "url": "https://files.pythonhosted.org/packages/86/f5/5e97712ef769898003f0d6af5876709ef24dc8e76ba7a40dfc92eb62de51/graylogging-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a97b980778b1c009fe20ef553b6642c5395950097fba6231a20db80e644a0d8",
          "md5": "e68d7d40c91c053893ec4e46eaaae928",
          "sha256": "b6e88d387ad09dee863a615dd27cf83a6695a44f1be2ec5c5bfecfaa2a9edd6f"
        },
        "downloads": -1,
        "filename": "graylogging-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e68d7d40c91c053893ec4e46eaaae928",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10892,
        "upload_time": "2021-10-13T13:06:35",
        "upload_time_iso_8601": "2021-10-13T13:06:35.365149Z",
        "url": "https://files.pythonhosted.org/packages/7a/97/b980778b1c009fe20ef553b6642c5395950097fba6231a20db80e644a0d8/graylogging-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c897c49179c4e1c65b0abafbf24c850a6c3aa90d89cd2d57526048ba2355ec26",
          "md5": "bdd223fa8510810a3a808352c1f66ae8",
          "sha256": "c0572c0aee2659ab31337431989cfa7e847d366719a2b91f39ab75716c1a9446"
        },
        "downloads": -1,
        "filename": "graylogging-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bdd223fa8510810a3a808352c1f66ae8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11302,
        "upload_time": "2021-10-13T13:06:37",
        "upload_time_iso_8601": "2021-10-13T13:06:37.248804Z",
        "url": "https://files.pythonhosted.org/packages/c8/97/c49179c4e1c65b0abafbf24c850a6c3aa90d89cd2d57526048ba2355ec26/graylogging-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a97b980778b1c009fe20ef553b6642c5395950097fba6231a20db80e644a0d8",
        "md5": "e68d7d40c91c053893ec4e46eaaae928",
        "sha256": "b6e88d387ad09dee863a615dd27cf83a6695a44f1be2ec5c5bfecfaa2a9edd6f"
      },
      "downloads": -1,
      "filename": "graylogging-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e68d7d40c91c053893ec4e46eaaae928",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10892,
      "upload_time": "2021-10-13T13:06:35",
      "upload_time_iso_8601": "2021-10-13T13:06:35.365149Z",
      "url": "https://files.pythonhosted.org/packages/7a/97/b980778b1c009fe20ef553b6642c5395950097fba6231a20db80e644a0d8/graylogging-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c897c49179c4e1c65b0abafbf24c850a6c3aa90d89cd2d57526048ba2355ec26",
        "md5": "bdd223fa8510810a3a808352c1f66ae8",
        "sha256": "c0572c0aee2659ab31337431989cfa7e847d366719a2b91f39ab75716c1a9446"
      },
      "downloads": -1,
      "filename": "graylogging-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bdd223fa8510810a3a808352c1f66ae8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11302,
      "upload_time": "2021-10-13T13:06:37",
      "upload_time_iso_8601": "2021-10-13T13:06:37.248804Z",
      "url": "https://files.pythonhosted.org/packages/c8/97/c49179c4e1c65b0abafbf24c850a6c3aa90d89cd2d57526048ba2355ec26/graylogging-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}