{
  "info": {
    "author": "Tobias Lass",
    "author_email": "tobi208@github.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Symbot\nA python twitch chat bot based on asyncio.\n\nThis versatile chat bot lets broadcasters with a general understanding of the python language fully customize the chat experience for their viewers.\nIt functions as a framework that can be built upon as desired with new commands and media types.\nDue to its highly encapsulated structure, new additions can be effortlessly shared with other broadcasters.\nFor broadcasters without any programming knowledge, this chat bot still provides most functionalities that popular chat bots such as _nightbot_ offer too.\n\n### Getting Started\n\n1. Symbot requires ``Python 3.7`` or newer, but only uses the standard library.\n2. ``pip install symbot``\n3. Get your [Twitch API Key](https://twitchapps.com/tmi/).\n4. Enter your channel name, name of your bot and your key in ``config.py``.\n5. Enter yourself as ``\"broadcaster\" : \"<name>\"`` in ``environment.json``.\n6. Give yourself and your bot permission level ``0`` in ``user_permissions.json``.\n7. Become familiar with the ``meta commands``.\n8. ``python -m symbot``\n\n### Meta Commands\n\n---\n#### !command\n\nThis is the central tool to manage your commands through chat.\n\n> !command (operation) (name) (content) (settings)\n\n``operation`` has to be ``add``, ``edit`` or ``del``.\nThe ``add`` operation requires you to enter ``content``, while ``edit`` can change the ``content`` and ``settings`` or only the ``settings`` of a command. \n``del`` only requires the name of the command.\n\n``name`` does not require a prefix. ``!hey`` works as well as ``hey``.\n\n```content``` specifies what response the command will send to your chat. It can be arbitrary text such as ``Hello there!``, but you may also use special functions.\nThis includes:\n\nFunction | Usage | Description\n------|--------|-------\nvariable | ``$v{var}`` | Looks up a variable in ``environment.json`` and returns its value.\ncounter | ``$c{var}`` | Looks up a variable in ``environment.json``, increments it and returns its new value.\nargument | ``$a{arg}`` | Specifies an argument that is passed when the command is called.\nuser | ``$u{user}`` | Returns the user name who called the command.\nalias | ``$alias{command}`` | Does the same as another command.\n\nFurthermore you can directly manipulate the general ``settings`` of a command with the following:\n\nSetting | Usage | Values | Description\n------|--------|----|---\npermission level | ``-ul=val`` | ``0,1,2,3,4`` | The required user permission level to call this command.\ncooldown | ``-cd=val`` | positive integer | The minimum amount of time that has to pass between two command calls in seconds.\nenabled | ``-on=val`` | ``true,false`` | Specifically enable or disable this command in general.\n\nBe aware, that these are *general* settings, which are different from *user specific* settings. This will be explained in the description of the corresponding meta commands.\n``settings`` are optional. They will be set to a default value if not specified, so do not change them unless it serves a purpose.\n\nExample | Usage | Response\n--------|-------|---------\n``!command add !new this is a new command`` | !new | _this is a new command_\n``!command add !name my name is $v{broadcaster}`` | !name | _my name is Jane Doe_\n``!command add !count this command has been used $c{count} times`` | !count | _this command has been used 1 times_\n``!command add !highfive $u{donor} gave $a{receptor} a virtual highfive`` | !highfive herself | _Jane Doe gave herself a virtual highfive_\n``!command add !neu $alias{!new}`` | !neu | _this is a new command_\n``!command add !cd you can do this every 5 seconds -cd=5`` | !cd | _you can do this every 5 seconds_\n``!command add !cd try again in 5 seconds`` | !cd | _try again in 5 seconds_\n``!command edit !cd try again in 10 seconds -cd=10`` | !cd | _try again in 10 seconds_\n``!command edit !cd -on=false`` | !cd | \n``!command del !name`` | !name |\n\n---\n#### !var\n\nManipulate your ``environment``. Sometimes you want to directly change or retrieve a variable through chat.\n\n> !var (operation) (variable) (value)\n\n``operation`` has to be ``get``, ``set`` or ``del``. Only ``set`` requires you to pass a value. New values will be tried to cast to the same type as the old value.\nFunctions such as ``count`` require a certain value type (integer), so changing the type of a value my affect commands.\n\nExample | Usage | Response\n--------|-------|---------\n``!var get broadcaster`` | | _broadcaster has value Jane Doe_\n``!var set count 20`` | !count | _this command has been used 21 times_\n``!var del count`` | !count | _Error: variable count not found_\n\n---\n#### !setcmdsetting\n\nManage your user settings in ``command_settings``.\n\n> !setcmdsetting (setting) (value)\n\nChanges made to your user settings only apply to your personal bot instance,\nso please use ``!setcmdsetting`` instead of ``!command edit`` to change settings.\nThis makes sharing commands with other broadcasters easier.\n\nSetting | Value | Description\n--------|------|-------------\nname | ``str`` | If you want to change how a command is called.\nauthor | ``str`` | Technically only for ``!purge`` yet.\npermission_level | ``0,1,2,3,4`` | The required user permission level to call this command.\ncooldown | ``int`` | The minimum amount of time that has to pass between two command calls in seconds.\nenabled | ``bool`` | Temporarily enable or disable a command. Does *not* delete it.\n\n---\n#### !setuserperm\n\nManage your user permission levels in ``user_permissions``.\n\n> !setuserperm (user) (value)\n\n``permission levels`` are used to control who can do what. Meta commands generally have a permission level of ``1``, while standard commands have permission level ``3``.\nPermission levels ``2,4`` may be used to permit the usage of abusable commands or deny command spammers.\nCertain actions such as deleting commands require a more powerful level.\n\nLevel | Group | Description\n------|-------|-------------\n0 | Broadcaster | Most powerful level, has full control over everything.\n1 | Moderator | Has control over most meta commands.\n2 | Allowed | Has control over abusable commands, broadcaster trusts this person.\n3 | Casual | Default user level. May use all standard commands.\n4 | Blocked | Is blocked from using most commands.\n\n\n---\n#### !purge\n\nDelete all commands created by a user.\n\n> !purge (user)\n\nThis exists in case you look away for a couple of minutes and someone with ill intend created a bunch of questionable commands that now need to be deleted.\nYou will be glad you can deleted them all with a single command.\nOnly usable with permission level ``0``.\n\n\n### Develop\n\nIf you are interested in building new things in this framework, pay attention to the ``dev`` package.\n\n``commands`` is the main bulk.\nIn there are all the standard commands that are added, edited and deleted through chat.\nCommands are automatically generated python modules that are loaded in dynamically.\nYou may change them here directly or create new ones manually.\nThe automatically generated commands serve as a good vantage point on how to create new commands manually.\nAlthough ``Exceptions`` from command calls can not crash the program, because they are 'stuck' in a coroutine, it would be great to avoid them and log what's going on.\nBecome familiar with the ``control`` elements and what functionalities they provide.\n\n``meta`` contains all meta command that manipulate commands and environments.\nThey are more complex than standard commands and produced manually.\nAn understanding of the entire structure is required to write new meta commands.\n\n``media`` is the biggest remaining construction site right now.\nFuture additions may contain usage of text files, sound files, video files, polls, text to speech, API calls and more.\nMedia modules can be used by commands to generate an effect or response.\n\nThe framework may require expansion for more complex features and is subject to change.\nThis project is far from complete, but it is fully functional as it is.\n\nPlease report any bugs or concerns.\n\n### Future todos and command or media ideas\n- add a cli\n- add graceful ctrl+C shutdown\n- add demo mode\n- enable/disable packages\n- track command usage with new aux controller\n- proper user interface\n- automatically set up broadcaster & bot permissions\n- add setvar as a content functionality\n- song requests\n- on screen counter\n- text to speech\n- play sound\n- play video\n- poll\n- repeating commands\n- proper list of commands\n- cleanup environment unused vars\n- temporarily change user permission\n- proper moderation commands\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tobi208/symbot",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "symbot",
    "package_url": "https://pypi.org/project/symbot/",
    "platform": "",
    "project_url": "https://pypi.org/project/symbot/",
    "project_urls": {
      "Bug Tracker": "https://github.com/tobi208/symbot/issues",
      "Homepage": "https://github.com/tobi208/symbot"
    },
    "release_url": "https://pypi.org/project/symbot/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A twitch chat bot for developers.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12294902,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9e7ce3d787e3d69868c3f286157b616ba7d99b40be66a75bcd0577e01e592bd",
          "md5": "c5f94de7a07518c360acdd2191442ea9",
          "sha256": "477bd21bae0d6fe4b2df42edc2565ac025689d80c0afb5db5ebc62d394833193"
        },
        "downloads": -1,
        "filename": "symbot-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c5f94de7a07518c360acdd2191442ea9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 44388,
        "upload_time": "2021-12-12T22:57:19",
        "upload_time_iso_8601": "2021-12-12T22:57:19.508844Z",
        "url": "https://files.pythonhosted.org/packages/e9/e7/ce3d787e3d69868c3f286157b616ba7d99b40be66a75bcd0577e01e592bd/symbot-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "262e7a232174391e4da76b11b9d62eb0658ddd103554b3ecc8dbb8330ca7411b",
          "md5": "431cb48411b37c85db35328c673a80fb",
          "sha256": "b920c64236b2887cc3ee004bd92b33ea8d66a87f19666ebc005ba68e35cbd92d"
        },
        "downloads": -1,
        "filename": "symbot-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "431cb48411b37c85db35328c673a80fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34827,
        "upload_time": "2021-12-12T22:57:20",
        "upload_time_iso_8601": "2021-12-12T22:57:20.555804Z",
        "url": "https://files.pythonhosted.org/packages/26/2e/7a232174391e4da76b11b9d62eb0658ddd103554b3ecc8dbb8330ca7411b/symbot-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b11ee333e4769160d485dd9063463f3f268ce9285391c4f08f3659b526b6d05",
          "md5": "bc089ba85390ec1c97ff15db3df14dc3",
          "sha256": "a11ff4edbb3945ec15a5f6227f8959f9c5f93b08fa8784f4c697f5dd4908ca18"
        },
        "downloads": -1,
        "filename": "symbot-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc089ba85390ec1c97ff15db3df14dc3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 44387,
        "upload_time": "2021-12-14T00:46:12",
        "upload_time_iso_8601": "2021-12-14T00:46:12.397857Z",
        "url": "https://files.pythonhosted.org/packages/4b/11/ee333e4769160d485dd9063463f3f268ce9285391c4f08f3659b526b6d05/symbot-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "442783ea95b66db6523feee58f4580e52d385545c6f3ecb915f78fd2a920f24c",
          "md5": "4ea8f985feeabea8c56759518c5584db",
          "sha256": "c0f51228e9a2d60fd3840c699ad2996b6f036881b07c7543144efae18ad7e45d"
        },
        "downloads": -1,
        "filename": "symbot-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4ea8f985feeabea8c56759518c5584db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 35449,
        "upload_time": "2021-12-14T00:46:13",
        "upload_time_iso_8601": "2021-12-14T00:46:13.980888Z",
        "url": "https://files.pythonhosted.org/packages/44/27/83ea95b66db6523feee58f4580e52d385545c6f3ecb915f78fd2a920f24c/symbot-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4b11ee333e4769160d485dd9063463f3f268ce9285391c4f08f3659b526b6d05",
        "md5": "bc089ba85390ec1c97ff15db3df14dc3",
        "sha256": "a11ff4edbb3945ec15a5f6227f8959f9c5f93b08fa8784f4c697f5dd4908ca18"
      },
      "downloads": -1,
      "filename": "symbot-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bc089ba85390ec1c97ff15db3df14dc3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 44387,
      "upload_time": "2021-12-14T00:46:12",
      "upload_time_iso_8601": "2021-12-14T00:46:12.397857Z",
      "url": "https://files.pythonhosted.org/packages/4b/11/ee333e4769160d485dd9063463f3f268ce9285391c4f08f3659b526b6d05/symbot-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "442783ea95b66db6523feee58f4580e52d385545c6f3ecb915f78fd2a920f24c",
        "md5": "4ea8f985feeabea8c56759518c5584db",
        "sha256": "c0f51228e9a2d60fd3840c699ad2996b6f036881b07c7543144efae18ad7e45d"
      },
      "downloads": -1,
      "filename": "symbot-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4ea8f985feeabea8c56759518c5584db",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 35449,
      "upload_time": "2021-12-14T00:46:13",
      "upload_time_iso_8601": "2021-12-14T00:46:13.980888Z",
      "url": "https://files.pythonhosted.org/packages/44/27/83ea95b66db6523feee58f4580e52d385545c6f3ecb915f78fd2a920f24c/symbot-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}