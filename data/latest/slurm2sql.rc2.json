{
  "info": {
    "author": "Richard Darst",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Database",
      "Topic :: System :: Clustering",
      "Topic :: System :: Distributed Computing"
    ],
    "description": "Convert Slurm accounting database to sqlite3 file\n=================================================\n\nThis contains one utility, ``slurm2sql``, which uses the `Slurm\n<https://slurm.schedmd.com/overview>`__ workload manager's ``sacct``,\nto export all statistics from jobs and load them to a well-formed\nsqlite3 file.  This file can then be queried for analytics much more\neasily than the raw database or your own exports.\n\n\n\nInstallation\n------------\n\nThere is only a single file with no dependencies.  Python greater than\n2.7 is required (dependencies are purposely kept minimal).\n\nThe ``slurm2sql`` library + command line frontend can be installed via\nthe Python Package Index: ``pip install slurm2sql``.\n\n\n\nUsage\n-----\n\nSample usage::\n\n  slurm2sql.py [output_db] -- [sacct selection options]\n\n\nFor example, to get all data from July and August (``-S``) for all\nusers (``-a``)::\n\n  slurm2sql.py sincejuly.sqlite3 -- -S 2019-07-1 -a\n\n\nTo get the data from the last *N* days.  This will, day by day, get\neach of these history and cumulatively update the database.  This\nupdates a database by default, so that it can be used every day in\norder to efficiently keep a running database.  The ``-u`` option means\n\"don't delete existing database\" (jobs with the same JobID get\nupdated, not duplicated)::\n\n  slurm2sql.py --history-days=N -u sincejuly.sqlite3 -- -a\n\nThe ``--history-start=YYYY-MM-DD`` option can do a similar thing\nstarting from a certain day, and ``--history=DD-HH:MM:SS`` starts\ncollecting from a given interval of time ago (the time format is as in\nSlurm).\n\nTo resume from where you left off, first run with one of the history\noptions.  Then, you can do ``--history-resume`` (no ``-u`` needed) and\nit will continue fetching day-by-day from the time you last fetched::\n\n  slurm2sql.py --history-days=N -u sincejuly.sqlite3 -- -a\n  slurm2sql.py --history-resume sincejuly.sqlite3 -- -a\n\n\n\nIt can also be used from Python as what is essentially a glorified\nparser::\n\n  db = sqlite3.connect(':memory:')\n  slurm2sql.slurm2sql(db, ['-S', '2019-08-26'])\n\n  # For example, you can then convert to a dataframe:\n  import pandas as pd\n  df = pd.read_sql('SELECT * FROM slurm', db)\n\n\nDatabase format\n---------------\n\nThere is one table with name ``slurm``.  There is one view\n``allocations`` which has only the jobs (not job steps) (``where\nJobStep is null``).\n\nThere is one row for each item returned by ``sacct``.\n\nIn general, there is one column for each item returned by ``sacct``,\nbut some of them are converted into a more useful form.  Some columns\nare added by re-processing other columns.  In general, just use the\nsource.  See ``COLUMNS`` in ``slurm2sql.py`` for details.  Extra\ncolumns can easily be added.\n\nThere are two types of converter functions: easy ones, which map one\nslurm column directly to a database column via a function, and line\nfunctions, which take the whole row and can do arbitrary remixing of\nthe data.\n\nColumns\n~~~~~~~\n\nAll column values are converted to standard units: *bytes* (not MB,\nKB, etc), *seconds*, *fraction 0.0-1.0* for things like\npercentages.\n\nBelow are some notable columns which do not exist in sacct (for the\nrest, check out the `sacct manual page <https://slurm.schedmd.com/sacct.html#lbAF>`_).  It's good\nto verify that any of our custom columns make sense before trusting\nthem.  For other columns, check ``man sacct``.\n\n* ``Time``: approximation of last active time of a job.  The first of\n  these that exists: ``End``, ``Start``, ``Submitted``.  This is\n  intended to be used when you need to classify a job by when it ran,\n  but you don't care to be that specific.  (Only the Time column is\n  indexed by default, not the other times)\n\n* ``Submit``, ``Start``, ``End``: like the sacct equivalents,\n  but unixtime.  Assume that the sacct timestamps are in localtime of\n  the machine doing the conversion.  (``slurm2sql.unixtime`` converts\n  slurm-format timestamp to unixtime)\n\n* Job IDs.  Slurm Job ID is by default of format\n  ``JobID.JobStep`` or ``ArrayJobID_ArrayTaskID.JobStep``.\n  Furthermore, each array job has a \"Raw JobID\" (different for each\n  job, and is an actual JobID) in addition to the \"ArrayJobID\" which\n  is the same for all jobs in an array.  We split all of these\n  different IDs into the following fields:\n\n  * ``JobID``: Only the integer Job ID, without the trailing array\n    tasks or job IDs.  For array jobs, this is the \"Raw JobID\" as\n    described above, use ``ArrayJobID`` to filter jobs that are the\n    same.  Integer\n\n  * ``ArrayJobID``: The common array ID for all jobs in an array -\n    only.  For non-array jobs, same as JobID.  Integer or null.\n\n  * ``ArrayTaskID``: As used above.  Integer on null.\n\n  * ``JobStep``: Job step - only.  If you SQL filter for ``StepID is\n    null`` you get only the main allocations.  String.\n\n  * ``JobIDSlurm``: The raw output from sacct JobID field, including\n    ``.`` and ``_``.  String.\n\n* ``ReqMem``: The raw slurm value in a format like \"5Gn\".  Instead of\n  parsing this, you probably want to use one of the other values below.\n\n* ``ReqMemNode``, ``ReqMemCPU``: Requested memory per node or CPU,\n  either taken from ReqMem (if it matches) or computed (you might want\n  to check our logic if you rely on this).  In Slurm, you\n  can request memory either per-node or per-core, and this calculates\n  the other one for you.\n\n* ``ReqMemType``: ``c`` if the user requested mem-per-core originally,\n  ``n`` if mem-per-node.  Extracted from ``ReqMem``.\n\n* ``ReqMemRaw``: The numeric value of the ``ReqMem``, whether it is\n  ``c`` or ``n``.\n\n* ``ReqGPU``: Number of GPUs requested.  Extracted from ``ReqGRES``.\n\n* GPU information.  At Aalto we store GPU usage information in the\n  ``Comment`` field in JSON of the form ``{\"gpu_util\": NN.NN,\n  \"gpu_max_mem\": NN, \"ngpu\": N}``.  This extracts information from that.\n\n  * ``GPUMem``: Max amount of memory used from any GPU.  Note: all GPU\n    stats require a separate Aalto-developed script.\n\n  * ``GPUEff``: Percent usage of the GPUs (0.0-1.0).\n\n  * ``NGPU``: Number of GPUs.  Should be the same as ``ReqGPU``, but\n    who knows.\n\n* ``MemEff``: Memory efficiency (0.0-1.0).  Like in ``seff``.  We\n  compute it ourselves, so it could be wrong.  Test before trusting!\n  There can still be corner cases, job steps may be off, etc.  This\n  also relies on memory reporting being correct, which may not be the\n  case...\n\n* ``CPUEff``: CPU efficiency (0.0-1.0).  All the same caveats as above\n  apply: test before trusting.\n\nQuick reference of the other most important columns from the\naccounting database:\n\n* ``Elapsed``: Wall clock time\n\n* ``CPUTime``: Reserved CPU time (Elapsed * number of CPUs).  CPUEff â‰ˆ\n  TotalCPU/CPUTime = TotalCPU/(NCPUs x Elapsed)\n\n* ``TotalCPU``: SystemCPU + TotalCPU, seconds of productive work.\n\n\n\nChangelog\n---------\n\n0.9.1\n\n* Slurm >= 20.11 deprecates the ``AllocGRES`` and ``ReqGRES`` columns\n  (using ``Alloc/ReqTRES`` instead).\n\n  * From this slurm2sql version, a ReqTRES column will be requested\n    and databases will need to be re-created (or manually added to the\n    databases).\n  * If run on Slurm > 20.11, it will not request ReqGRES and only use\n    ReqTRES.\n\n\n\nDevelopment and maintenance\n---------------------------\n\nThis could be considered beta right now, but it works and is in use by\npeople.  There are many different variations of Slurm, if it doesn't\nwork for you, send an issue or pull request to help us make it more\ngeneral - development is only done in response to feedback.\n\nRelease process::\n\n  python setup.py sdist bdist_wheel\n  twine upload [--repository-url https://test.pypi.org/legacy/] dist/*0.9.0*\n\n\nOriginally developed at Aalto University, Finland.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NordicHPC/slurm2sql",
    "keywords": "slurm sqlite3",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "slurm2sql",
    "package_url": "https://pypi.org/project/slurm2sql/",
    "platform": "",
    "project_url": "https://pypi.org/project/slurm2sql/",
    "project_urls": {
      "Homepage": "https://github.com/NordicHPC/slurm2sql"
    },
    "release_url": "https://pypi.org/project/slurm2sql/0.9.1/",
    "requires_dist": null,
    "requires_python": ">= 2.7, >=3.4",
    "summary": "Import Slurm accounting database from sacct to sqlite3 database",
    "version": "0.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10041781,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a85b2c1c436ff82009b22a2d16d1e2580429b56d74b1641998924daa9f2090f",
          "md5": "0b3f55fa545c2f276cb9c67f680ca1e0",
          "sha256": "b0aba660c612cc833d5d444ff8c7a27c778370554c08b690758f6cc511c0666b"
        },
        "downloads": -1,
        "filename": "slurm2sql-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b3f55fa545c2f276cb9c67f680ca1e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 2.7, >=3.4",
        "size": 12486,
        "upload_time": "2020-02-28T06:55:57",
        "upload_time_iso_8601": "2020-02-28T06:55:57.605941Z",
        "url": "https://files.pythonhosted.org/packages/3a/85/b2c1c436ff82009b22a2d16d1e2580429b56d74b1641998924daa9f2090f/slurm2sql-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82069c812582e4ea59355827734b42c08bfc4467ee58c05469207ec37d431a45",
          "md5": "8a6b9e2030b335c46afe75bf49823ed4",
          "sha256": "b3c9269c9421c6ba4c03c3e589da7b8c2e1ce70f9e6ce0dd78b534c6ed431251"
        },
        "downloads": -1,
        "filename": "slurm2sql-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8a6b9e2030b335c46afe75bf49823ed4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 2.7, >=3.4",
        "size": 14521,
        "upload_time": "2020-02-28T06:56:00",
        "upload_time_iso_8601": "2020-02-28T06:56:00.539001Z",
        "url": "https://files.pythonhosted.org/packages/82/06/9c812582e4ea59355827734b42c08bfc4467ee58c05469207ec37d431a45/slurm2sql-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60aba4a13c75b06d4e2a1338611f0186023e433b60a9a127df2de2c68f4cc9b1",
          "md5": "0e199beb02b839008a3281a5b0a0b8dd",
          "sha256": "b0f0625293e540258e50dc6786284b1e4670d111c16cc1aba92d74d01ffa97af"
        },
        "downloads": -1,
        "filename": "slurm2sql-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e199beb02b839008a3281a5b0a0b8dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 2.7, >=3.4",
        "size": 13896,
        "upload_time": "2021-04-12T17:56:28",
        "upload_time_iso_8601": "2021-04-12T17:56:28.081053Z",
        "url": "https://files.pythonhosted.org/packages/60/ab/a4a13c75b06d4e2a1338611f0186023e433b60a9a127df2de2c68f4cc9b1/slurm2sql-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bb91bc704860bc4dfc0fd8b932e7bb56b231662809bbd0e0eda9ce6916c4747",
          "md5": "3dbc5d5b9648de7c21864adc606a31db",
          "sha256": "7b6179203cb55b97ce41abb26b5d49800377f29a5325605875f0f83b3e7f279f"
        },
        "downloads": -1,
        "filename": "slurm2sql-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3dbc5d5b9648de7c21864adc606a31db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 2.7, >=3.4",
        "size": 16508,
        "upload_time": "2021-04-12T17:56:29",
        "upload_time_iso_8601": "2021-04-12T17:56:29.561091Z",
        "url": "https://files.pythonhosted.org/packages/0b/b9/1bc704860bc4dfc0fd8b932e7bb56b231662809bbd0e0eda9ce6916c4747/slurm2sql-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "60aba4a13c75b06d4e2a1338611f0186023e433b60a9a127df2de2c68f4cc9b1",
        "md5": "0e199beb02b839008a3281a5b0a0b8dd",
        "sha256": "b0f0625293e540258e50dc6786284b1e4670d111c16cc1aba92d74d01ffa97af"
      },
      "downloads": -1,
      "filename": "slurm2sql-0.9.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0e199beb02b839008a3281a5b0a0b8dd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">= 2.7, >=3.4",
      "size": 13896,
      "upload_time": "2021-04-12T17:56:28",
      "upload_time_iso_8601": "2021-04-12T17:56:28.081053Z",
      "url": "https://files.pythonhosted.org/packages/60/ab/a4a13c75b06d4e2a1338611f0186023e433b60a9a127df2de2c68f4cc9b1/slurm2sql-0.9.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0bb91bc704860bc4dfc0fd8b932e7bb56b231662809bbd0e0eda9ce6916c4747",
        "md5": "3dbc5d5b9648de7c21864adc606a31db",
        "sha256": "7b6179203cb55b97ce41abb26b5d49800377f29a5325605875f0f83b3e7f279f"
      },
      "downloads": -1,
      "filename": "slurm2sql-0.9.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3dbc5d5b9648de7c21864adc606a31db",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 2.7, >=3.4",
      "size": 16508,
      "upload_time": "2021-04-12T17:56:29",
      "upload_time_iso_8601": "2021-04-12T17:56:29.561091Z",
      "url": "https://files.pythonhosted.org/packages/0b/b9/1bc704860bc4dfc0fd8b932e7bb56b231662809bbd0e0eda9ce6916c4747/slurm2sql-0.9.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}