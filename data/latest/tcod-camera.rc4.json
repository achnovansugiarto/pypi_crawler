{
  "info": {
    "author": null,
    "author_email": "Kyle Benesch <4b796c65+github@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Typing :: Typed"
    ],
    "description": "# About\n\n[![PyPI](https://img.shields.io/pypi/v/tcod-camera)](https://pypi.org/project/tcod-camera/)\n[![PyPI - License](https://img.shields.io/pypi/l/tcod-camera)](https://github.com/HexDecimal/python-tcod-camera/blob/main/LICENSE)\n[![Documentation Status](https://readthedocs.org/projects/python-tcod-camera/badge/?version=latest)](https://python-tcod-camera.readthedocs.io)\n[![codecov](https://codecov.io/gh/HexDecimal/python-tcod-camera/branch/main/graph/badge.svg?token=UP161WEo0s)](https://codecov.io/gh/HexDecimal/python-tcod-camera)\n\nThis packages contains a set of tools for working with cameras which translate between world and screen coordinates.\n\nIt is intended to be used with [Python-tcod](https://github.com/libtcod/python-tcod) and [NumPy](https://numpy.org/) but requires neither.\n\n```py\n# This library works with the idea that you have a world array you want projected onto a screen array.\n>>> import numpy as np\n>>> import tcod.camera\n>>> screen = np.arange(3 * 3, dtype=int).reshape(3, 3)\n>>> world = np.arange(9 * 10, dtype=int).reshape(9, 10)\n>>> screen\narray([[0, 1, 2],\n       [3, 4, 5],\n       [6, 7, 8]])\n>>> world\narray([[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9],\n       [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],\n       [20, 21, 22, 23, 24, 25, 26, 27, 28, 29],\n       [30, 31, 32, 33, 34, 35, 36, 37, 38, 39],\n       [40, 41, 42, 43, 44, 45, 46, 47, 48, 49],\n       [50, 51, 52, 53, 54, 55, 56, 57, 58, 59],\n       [60, 61, 62, 63, 64, 65, 66, 67, 68, 69],\n       [70, 71, 72, 73, 74, 75, 76, 77, 78, 79],\n       [80, 81, 82, 83, 84, 85, 86, 87, 88, 89]])\n\n# This example uses `ij` coordinates, but `xy` coordinates are also an option.\n# The most basic example is to get the camera and use it to project the world and screen shapes.\n>>> camera_ij = tcod.camera.get_camera(screen.shape, center=(2, 2))  # Get the camera position centered on (2, 2).\n>>> camera_ij  # The actual camera position is always which world position to project onto screen[0, 0].\n(1, 1)\n>>> screen_slice, world_slice = tcod.camera.get_slices(screen.shape, world.shape, camera_ij)\n>>> screen_slice\n(slice(0, 3, None), slice(0, 3, None))\n>>> world_slice\n(slice(1, 4, None), slice(1, 4, None))\n>>> screen[screen_slice] = world[world_slice]  # Project the values of screen onto the world.\n>>> screen\narray([[11, 12, 13],\n       [21, 22, 23],\n       [31, 32, 33]])\n\n# Out-of-bounds camera coordinates result in partial views.\n# Fully out-of-bounds cameras will result in zero element views.\n>>> camera_ij = tcod.camera.get_camera(screen.shape, (4, 10))  # A camera position beyond the right side of the world.\n>>> screen_slice, world_slice = tcod.camera.get_slices(screen.shape, world.shape, camera_ij)\n>>> screen[screen_slice].shape  # Because this is partially out-of-bounds not all of the screen is in view.\n(3, 1)\n>>> screen_slice\n(slice(0, 3, None), slice(0, 1, None))\n>>> world_slice\n(slice(3, 6, None), slice(9, 10, None))\n>>> screen[:] = -1  # The screen will be cleared with -1, this value now means out-of-bounds.\n>>> screen[screen_slice] = world[world_slice]  # The parts which do overlap will be projected.\n>>> screen\narray([[39, -1, -1],\n       [49, -1, -1],\n       [59, -1, -1]])\n\n# By adding the shape of the world to camera functions the camera can be clamped to the bounds of the world.\n# All screen indexes will be in-view as long as the screen is never larger than the world.\n>>> camera_ij = tcod.camera.clamp_camera(screen.shape, world.shape, camera_ij)\n>>> screen_slice, world_slice = tcod.camera.get_slices(screen.shape, world.shape, camera_ij)\n>>> screen[screen_slice] = world[world_slice]\n>>> screen  # The camera was moved left to fit the screen to the world.\narray([[37, 38, 39],\n       [47, 48, 49],\n       [57, 58, 59]])\n\n# If the world is divided into chunks then this library can be used to project each chunk onto a single screen.\n# You'll have to manage your own chunks.  Possibly in a `dict[tuple[int, int], NDArray[Any]]`-like container.\n>>> screen = np.zeros((10, 10), dtype=int)\n>>> CHUNK_SIZE = (4, 4)\n>>> for screen_slice, chunk_ij, chunk_slice in tcod.camera.get_chunked_slices(screen.shape, CHUNK_SIZE, camera=(0, 0)):\n...     screen[screen_slice] = chunk_ij[0] + chunk_ij[1] * 10\n...     print(f\"{screen_slice=}, {chunk_ij=}, {chunk_slice=}\")\nscreen_slice=(slice(0, 4, None), slice(0, 4, None)), chunk_ij=(0, 0), chunk_slice=(slice(0, 4, None), slice(0, 4, None))\nscreen_slice=(slice(0, 4, None), slice(4, 8, None)), chunk_ij=(0, 1), chunk_slice=(slice(0, 4, None), slice(0, 4, None))\nscreen_slice=(slice(0, 4, None), slice(8, 10, None)), chunk_ij=(0, 2), chunk_slice=(slice(0, 4, None), slice(0, 2, None))\nscreen_slice=(slice(4, 8, None), slice(0, 4, None)), chunk_ij=(1, 0), chunk_slice=(slice(0, 4, None), slice(0, 4, None))\nscreen_slice=(slice(4, 8, None), slice(4, 8, None)), chunk_ij=(1, 1), chunk_slice=(slice(0, 4, None), slice(0, 4, None))\nscreen_slice=(slice(4, 8, None), slice(8, 10, None)), chunk_ij=(1, 2), chunk_slice=(slice(0, 4, None), slice(0, 2, None))\nscreen_slice=(slice(8, 10, None), slice(0, 4, None)), chunk_ij=(2, 0), chunk_slice=(slice(0, 2, None), slice(0, 4, None))\nscreen_slice=(slice(8, 10, None), slice(4, 8, None)), chunk_ij=(2, 1), chunk_slice=(slice(0, 2, None), slice(0, 4, None))\nscreen_slice=(slice(8, 10, None), slice(8, 10, None)), chunk_ij=(2, 2), chunk_slice=(slice(0, 2, None), slice(0, 2, None))\n>>> screen\narray([[ 0,  0,  0,  0, 10, 10, 10, 10, 20, 20],\n       [ 0,  0,  0,  0, 10, 10, 10, 10, 20, 20],\n       [ 0,  0,  0,  0, 10, 10, 10, 10, 20, 20],\n       [ 0,  0,  0,  0, 10, 10, 10, 10, 20, 20],\n       [ 1,  1,  1,  1, 11, 11, 11, 11, 21, 21],\n       [ 1,  1,  1,  1, 11, 11, 11, 11, 21, 21],\n       [ 1,  1,  1,  1, 11, 11, 11, 11, 21, 21],\n       [ 1,  1,  1,  1, 11, 11, 11, 11, 21, 21],\n       [ 2,  2,  2,  2, 12, 12, 12, 12, 22, 22],\n       [ 2,  2,  2,  2, 12, 12, 12, 12, 22, 22]])\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "tcod-camera",
    "package_url": "https://pypi.org/project/tcod-camera/",
    "platform": null,
    "project_url": "https://pypi.org/project/tcod-camera/",
    "project_urls": {
      "Changelog": "https://github.com/HexDecimal/python-tcod-camera/blob/main/CHANGELOG.md",
      "Documentation": "https://python-tcod-camera.readthedocs.io",
      "Home": "https://github.com/HexDecimal/python-tcod-camera",
      "Source": "https://github.com/HexDecimal/python-tcod-camera"
    },
    "release_url": "https://pypi.org/project/tcod-camera/1.0.0/",
    "requires_dist": [
      "pytest >=7.2.0 ; extra == \"test\"",
      "pytest-cov >=4.0.0 ; extra == \"test\"",
      "mypy >=0.991 ; extra == \"test\"",
      "attrs >=22.2.0 ; extra == \"test\"",
      "numpy >=1.23.5 ; extra == \"test\"",
      "tcod >=15.0.0 ; extra == \"test\""
    ],
    "requires_python": ">=3.8",
    "summary": "Camera helper tools for 2D tile-based projects.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16467320,
  "releases": {
    "0.0.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "84f7dd7e405f4c05e0a3c20852285583234b1980531d5d34b9a62eb41b448152",
          "md5": "b47db12ef8ccc80b86754cef997159cb",
          "sha256": "fb71c921bd3e576632b7f425a274eeeca73b72b5f47c16f886273cb5a348ed89"
        },
        "downloads": -1,
        "filename": "tcod_camera-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b47db12ef8ccc80b86754cef997159cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 3035,
        "upload_time": "2022-12-09T23:52:37",
        "upload_time_iso_8601": "2022-12-09T23:52:37.051481Z",
        "url": "https://files.pythonhosted.org/packages/84/f7/dd7e405f4c05e0a3c20852285583234b1980531d5d34b9a62eb41b448152/tcod_camera-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "54585d5189e8e7e88f9a2faa1fb333cf47c320714fc0eca57027e48fc5f91bf8",
          "md5": "bae48146fa44c5da40eea31a5af3fa5e",
          "sha256": "d57ac153fc52b4ba8190bc633e86a3d861915dd03cd352d9e678125cf658a014"
        },
        "downloads": -1,
        "filename": "tcod-camera-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bae48146fa44c5da40eea31a5af3fa5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 5991,
        "upload_time": "2022-12-09T23:52:39",
        "upload_time_iso_8601": "2022-12-09T23:52:39.220682Z",
        "url": "https://files.pythonhosted.org/packages/54/58/5d5189e8e7e88f9a2faa1fb333cf47c320714fc0eca57027e48fc5f91bf8/tcod-camera-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "07757f28c858bc5efb00d110e53428302b63d68f7b509480b789021960a9e867",
          "md5": "8153a89d95a4d694fdb97c1f1d85eb12",
          "sha256": "913d557861a31e63bb7b70268ca84712d64a69d2021f4330a8d9121f223d774b"
        },
        "downloads": -1,
        "filename": "tcod_camera-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8153a89d95a4d694fdb97c1f1d85eb12",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 5120,
        "upload_time": "2022-12-17T02:15:27",
        "upload_time_iso_8601": "2022-12-17T02:15:27.182277Z",
        "url": "https://files.pythonhosted.org/packages/07/75/7f28c858bc5efb00d110e53428302b63d68f7b509480b789021960a9e867/tcod_camera-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "5641814766e43aa894d390c97d613269cc9690fa3ffe523047dad2ba0867bdc6",
          "md5": "11c2d2177fa7605305ac88086d094916",
          "sha256": "c430b36bad9eb4124b604721c6a95a4ef25933eb7ae341ea869baf0e25b092e0"
        },
        "downloads": -1,
        "filename": "tcod-camera-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "11c2d2177fa7605305ac88086d094916",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11190,
        "upload_time": "2022-12-17T02:15:29",
        "upload_time_iso_8601": "2022-12-17T02:15:29.517761Z",
        "url": "https://files.pythonhosted.org/packages/56/41/814766e43aa894d390c97d613269cc9690fa3ffe523047dad2ba0867bdc6/tcod-camera-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "4eaf73a4397cc96899d524f22b0dee8b51cbe14d21d6f8ee3339df69d91e6623",
          "md5": "7348c3dc75fd7c4934e63600c61e930c",
          "sha256": "cd15a939ed528f58dfdcdc1cd6c278cd4abf677cb9721033bee73c51b18a4506"
        },
        "downloads": -1,
        "filename": "tcod_camera-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7348c3dc75fd7c4934e63600c61e930c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 5313,
        "upload_time": "2022-12-21T01:26:58",
        "upload_time_iso_8601": "2022-12-21T01:26:58.254620Z",
        "url": "https://files.pythonhosted.org/packages/4e/af/73a4397cc96899d524f22b0dee8b51cbe14d21d6f8ee3339df69d91e6623/tcod_camera-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "a61fa2c3123622550603d135a9493a6f897275e3960debdcdb25fa4d1e832a46",
          "md5": "1a0984052196d750fa678a6aa8de25fc",
          "sha256": "9360556ed2b6a5bf1999997281eb3058805655514c8a83dc5f6a0e95012145f8"
        },
        "downloads": -1,
        "filename": "tcod-camera-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1a0984052196d750fa678a6aa8de25fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 13707,
        "upload_time": "2022-12-21T01:27:00",
        "upload_time_iso_8601": "2022-12-21T01:27:00.333046Z",
        "url": "https://files.pythonhosted.org/packages/a6/1f/a2c3123622550603d135a9493a6f897275e3960debdcdb25fa4d1e832a46/tcod-camera-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "90f152242965727d9c7bf8ccda7926970399dba8390bd426d6d93cbca9b150e7",
          "md5": "6951a0b91d6c21313b70f862892624cb",
          "sha256": "7b6263e04b041535cd26883fd0e530eddc49b650d904460463e77d6f100d5322"
        },
        "downloads": -1,
        "filename": "tcod_camera-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6951a0b91d6c21313b70f862892624cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 7760,
        "upload_time": "2023-01-18T03:09:36",
        "upload_time_iso_8601": "2023-01-18T03:09:36.670282Z",
        "url": "https://files.pythonhosted.org/packages/90/f1/52242965727d9c7bf8ccda7926970399dba8390bd426d6d93cbca9b150e7/tcod_camera-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "b8a506a7047c9cac672c25630b2d71efa2bd73989348df93a2b24da0c677c3e8",
          "md5": "a553d7dc4735f60f818a796d4e00ee78",
          "sha256": "66b7c313598721e21de7f10bebf604601b8cce0071c61db46edb3f83ae9dd3a5"
        },
        "downloads": -1,
        "filename": "tcod-camera-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a553d7dc4735f60f818a796d4e00ee78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 18897,
        "upload_time": "2023-01-18T03:09:39",
        "upload_time_iso_8601": "2023-01-18T03:09:39.143939Z",
        "url": "https://files.pythonhosted.org/packages/b8/a5/06a7047c9cac672c25630b2d71efa2bd73989348df93a2b24da0c677c3e8/tcod-camera-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "90f152242965727d9c7bf8ccda7926970399dba8390bd426d6d93cbca9b150e7",
        "md5": "6951a0b91d6c21313b70f862892624cb",
        "sha256": "7b6263e04b041535cd26883fd0e530eddc49b650d904460463e77d6f100d5322"
      },
      "downloads": -1,
      "filename": "tcod_camera-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6951a0b91d6c21313b70f862892624cb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 7760,
      "upload_time": "2023-01-18T03:09:36",
      "upload_time_iso_8601": "2023-01-18T03:09:36.670282Z",
      "url": "https://files.pythonhosted.org/packages/90/f1/52242965727d9c7bf8ccda7926970399dba8390bd426d6d93cbca9b150e7/tcod_camera-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "b8a506a7047c9cac672c25630b2d71efa2bd73989348df93a2b24da0c677c3e8",
        "md5": "a553d7dc4735f60f818a796d4e00ee78",
        "sha256": "66b7c313598721e21de7f10bebf604601b8cce0071c61db46edb3f83ae9dd3a5"
      },
      "downloads": -1,
      "filename": "tcod-camera-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a553d7dc4735f60f818a796d4e00ee78",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 18897,
      "upload_time": "2023-01-18T03:09:39",
      "upload_time_iso_8601": "2023-01-18T03:09:39.143939Z",
      "url": "https://files.pythonhosted.org/packages/b8/a5/06a7047c9cac672c25630b2d71efa2bd73989348df93a2b24da0c677c3e8/tcod-camera-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}