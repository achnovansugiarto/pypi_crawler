{
  "info": {
    "author": "Peter Gaultney",
    "author_email": "pgaultney@xoi.io",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# purify\n\nPythonic object-mutator transforms as pure functions.\n\n## Rationale\n\nThis solves a longstanding complaint that I have about Python -\nthere's no Pythonic way to write a pure function that is supposed to\nreturn a transformed version of an input instance of a class.\n\nSpecifically, Python heavily incentivizes (via its syntax and via\nutilities such as `mypy`) doing the following:\n\n```\ndef rename_tree(name: str, tree: Tree) -> Tree:\n    tree.name = name\n    return tree\n```\n\nbecause the pure alternatives are either expensive:\n\n```\ndef pure_rename_tree(name: str, tree: Tree) -> Tree:\n    tree = deepcopy(tree)\n    tree.name = name\n    return tree\n```\n\nor not Pythonic and not type checkable:\n\n```\ndef pure_rename_treedict(name: str, tree: dict) -> dict:\n    return dict(tree, name=name)\n```\n\nThis library is a result of noticing that the first option above is\nextremely common in our codebases at XOi and enough of a convention to\nbe a best practice.  While this usually works as long as we compose\nthese \"object transforms\" as a linear pipeline where no function ever\nneeds to read the pre-transformed object, it is nevertheless a\nconvention which trades off actual purity for efficiency and\nreadability.\n\nA new decorator, `@purify`, can be applied to any function where a\nsingle one of the arguments will be modified, and by performing a\nbehind-the-scenes shallow copy of that object, allows the object\ntransform to become pure without further ado.\n\n```\n@purify\ndef rename_tree(name: str, tree: Tree) -> Tree:\n    tree.name = tree\n    return tree\n\ntree = Tree('Felicity')\ndtree = rename_tree('Daniella', tree)\n\nprint(tree.name) # 'Felicity'\nprint(dtree.name) # 'Daniella'\n```\n\n### Shallow copy vs deepcopy\n\nIn rudimentary tests with objects of size < 400 KB, `deepcopy` was\nfound to be, not surprisingly, 3 orders or magnitude slower than a\nshallow copy. Additionally, equality tests on deep-copied and _not_\nmodified objects are 1-2 orders of magnitude slower than shallow\ncopies, presumably because the shallow copy allows the comparison to\ndo far more `id` equality checks.\n\nSo, `deepcopy` is expensive. But it's the only way to be sure that\nyour function is actually pure. `purify` defaults to shallow\ncopy. Why?\n\nBecause, as it turns out, it's frequently pretty simple to split\nmutating functions into 'levels' based on the actual object that they\nmodify, and then decorate each level independently. In most cases,\nthis will mean far fewer Python objects need actual copying, and it\nalso gives you more reusable functions than you would have had if all\nthe levels were present together.\n\nGiven:\n\n```\nclass Nest:\n    num_eggs: int\n\nclass Tree:\n    # ... (lots of other attributes)\n    nests: List[Nest]\n```\n\nThis expensive deepcopy approach:\n\n```\n@purify(deep=True)\ndef lay_in_all_nests(add: int, tree: Tree) -> Tree:\n    for nest in tree.nests:\n        nest.num_eggs += add\n    return tree\n```\n\nCould be replaced with the equally pure, and less copy-expensive:\n\n```\n@purify\ndef lay_in_nest(lay: int, nest: Nest) -> Nest:\n    nest.num_eggs += add\n    return nest\n\n@purify\ndef lay_in_all_nests(lay: int, tree: Tree) -> Tree:\n    tree.nests = [lay_in_nest(lay, nest) for nest in tree.nests]\n    return tree\n```\n\n#### How to visually parse shallowly pure functions\n\nSome effort is required to use shallow-copy functions properly,\nwhereas `deepcopy` makes your function trivially pure. How to focus\nthat effort?\n\nA good rule of thumb is that the object being purified must only ever\nbe referenced with a single dot (`.`), e.g. `tree.nests`, and usage of\nthat dotted name must either be read-only or direct assignment to that\nname.  E.g., `tree.nests[i] = foo` is a no-no, because the\nleft-hand-side of the statement is not the bare name `nests`, but\nsomething that directs its activity into the list itself.\n\n\n## Advanced Usage:\n\n### Argument name\n\nIt's highly recommended to follow a convention where the object that\nyou're mutating is the last positional argument to your function. This\nis generally better for the composition of many partially-applied\nfunctions transforming the same object.\n\nThat said, if you have a desire to specify which argument is to be\nshallow-copied, you may do so by calling the decorator with the first\npositional argument being the name of the function argument you want\npurified.\n\n### Deepcopy\n\nAs above, if you have a need for deepcopying, you need only to pass\n`deep=True` to the decorator.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xoeye/purify",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "purify",
    "package_url": "https://pypi.org/project/purify/",
    "platform": null,
    "project_url": "https://pypi.org/project/purify/",
    "project_urls": {
      "Homepage": "https://github.com/xoeye/purify"
    },
    "release_url": "https://pypi.org/project/purify/0.2.3/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Pythonic object-mutator transforms as pure functions",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14554530,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93bc6c7809a59a3d0bf0b14d9c0e3509a24fe68c99d193e89f88c9f93268149a",
          "md5": "8ff771be64179cb9aafd05dea61e9300",
          "sha256": "c4ba3202d0f5e282274ce1eb81c9c9935f020816497f49a9158e6dad6cd336ef"
        },
        "downloads": -1,
        "filename": "purify-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8ff771be64179cb9aafd05dea61e9300",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4108,
        "upload_time": "2021-02-18T20:53:54",
        "upload_time_iso_8601": "2021-02-18T20:53:54.103739Z",
        "url": "https://files.pythonhosted.org/packages/93/bc/6c7809a59a3d0bf0b14d9c0e3509a24fe68c99d193e89f88c9f93268149a/purify-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7fda593efe20914e13b893657f701e063e6dbbb1b8ec388f1d1e988a9e61073",
          "md5": "55cd799bbb2ef1a676ed8dc6e8c3d9ee",
          "sha256": "23df3e5fec3e6c366ac10a378da2e96746216b1f4c298d82294e0464ecb6b204"
        },
        "downloads": -1,
        "filename": "purify-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "55cd799bbb2ef1a676ed8dc6e8c3d9ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4125,
        "upload_time": "2021-02-18T21:07:34",
        "upload_time_iso_8601": "2021-02-18T21:07:34.774973Z",
        "url": "https://files.pythonhosted.org/packages/d7/fd/a593efe20914e13b893657f701e063e6dbbb1b8ec388f1d1e988a9e61073/purify-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a483bbd021889ccea0e9a43893597449573c64c9ce78849eec34f1511af904ca",
          "md5": "2b4fe4f0ea90230f26b4923d662fc628",
          "sha256": "a23fc03b0d0ddaf2fa180d46fd04379b1c848d70807116a1db1c9d4f7e5cc1a4"
        },
        "downloads": -1,
        "filename": "purify-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2b4fe4f0ea90230f26b4923d662fc628",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4257,
        "upload_time": "2021-02-19T16:29:57",
        "upload_time_iso_8601": "2021-02-19T16:29:57.431906Z",
        "url": "https://files.pythonhosted.org/packages/a4/83/bbd021889ccea0e9a43893597449573c64c9ce78849eec34f1511af904ca/purify-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f9dea7beba584248b6f86a90752cc118d43474c8cac3fe6d902b2a6c9fb7373",
          "md5": "bbe955d0c09f7451049044182ad54db9",
          "sha256": "976172414e2493d0dc562d2779d7821cd017c9b91ddac617f05d8eb4ff90072a"
        },
        "downloads": -1,
        "filename": "purify-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bbe955d0c09f7451049044182ad54db9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8220,
        "upload_time": "2021-05-17T22:07:42",
        "upload_time_iso_8601": "2021-05-17T22:07:42.974561Z",
        "url": "https://files.pythonhosted.org/packages/1f/9d/ea7beba584248b6f86a90752cc118d43474c8cac3fe6d902b2a6c9fb7373/purify-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f64a10ef38e9740b18b1969b62a661a714aa7726080290f6370eb42dcf39b0b9",
          "md5": "ab6cfb0ab5efdccb807049d16a1c96a4",
          "sha256": "10f9e0a210e647dc6f508828cf14e26d8eff296ef20de1a56cf5a646da2e6ecb"
        },
        "downloads": -1,
        "filename": "purify-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab6cfb0ab5efdccb807049d16a1c96a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8630,
        "upload_time": "2022-07-26T14:57:08",
        "upload_time_iso_8601": "2022-07-26T14:57:08.985677Z",
        "url": "https://files.pythonhosted.org/packages/f6/4a/10ef38e9740b18b1969b62a661a714aa7726080290f6370eb42dcf39b0b9/purify-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efa1821442f8b8bade2212c6740280e5fd674ff0a12754b32116fdc2af97eb21",
          "md5": "4e869803a804691fe7599ff142790b97",
          "sha256": "ce8c50170e96db5b320fa17b7edea2c0a6f2efe07e5222f2b34ae257ac2a81d5"
        },
        "downloads": -1,
        "filename": "purify-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4e869803a804691fe7599ff142790b97",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7983,
        "upload_time": "2022-07-26T14:57:10",
        "upload_time_iso_8601": "2022-07-26T14:57:10.428000Z",
        "url": "https://files.pythonhosted.org/packages/ef/a1/821442f8b8bade2212c6740280e5fd674ff0a12754b32116fdc2af97eb21/purify-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f64a10ef38e9740b18b1969b62a661a714aa7726080290f6370eb42dcf39b0b9",
        "md5": "ab6cfb0ab5efdccb807049d16a1c96a4",
        "sha256": "10f9e0a210e647dc6f508828cf14e26d8eff296ef20de1a56cf5a646da2e6ecb"
      },
      "downloads": -1,
      "filename": "purify-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ab6cfb0ab5efdccb807049d16a1c96a4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8630,
      "upload_time": "2022-07-26T14:57:08",
      "upload_time_iso_8601": "2022-07-26T14:57:08.985677Z",
      "url": "https://files.pythonhosted.org/packages/f6/4a/10ef38e9740b18b1969b62a661a714aa7726080290f6370eb42dcf39b0b9/purify-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "efa1821442f8b8bade2212c6740280e5fd674ff0a12754b32116fdc2af97eb21",
        "md5": "4e869803a804691fe7599ff142790b97",
        "sha256": "ce8c50170e96db5b320fa17b7edea2c0a6f2efe07e5222f2b34ae257ac2a81d5"
      },
      "downloads": -1,
      "filename": "purify-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "4e869803a804691fe7599ff142790b97",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7983,
      "upload_time": "2022-07-26T14:57:10",
      "upload_time_iso_8601": "2022-07-26T14:57:10.428000Z",
      "url": "https://files.pythonhosted.org/packages/ef/a1/821442f8b8bade2212c6740280e5fd674ff0a12754b32116fdc2af97eb21/purify-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}