{
  "info": {
    "author": "Tatarize",
    "author_email": "tatarize@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Multimedia :: Graphics :: Editors :: Vector-Based",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# shxparser\n\nPure Python Parser for SHX Hershey font files.\n\nSHX files are an AutoCad format which can encode single line fonts.\n\nThis format is used for many CNC and laser operations.\n\n---\n\n# Progress\n\nThings currently parse, text converts to paths. There may be edge cases and bugs within the code.\n\n# Encoding\nCalling the parser on a `SHX` file will parse the file. The glyph data is accessed via the `ShxFile.glyphs` dictionary which stores the particular commands.\nThese positions are stored (or will be) in segments. Each segment is:\n* `(x0,y0)` -- Move to Position.\n* `((x0,y0), (x1, y1))` --- Straight Line start->end\n* `((x0,y0), (cx, cy), (x1, y1))` --- Arc start->control->end where control is a point on the arc that starts at start and ends at end.\n\n# Usage\n\nSee `test_parser.py` for usage:\n```python\n    def test_parse(self):\n        for f in chain(glob(\"parse/*.SHX\"), glob(\"parse/*.shx\")):\n            shx = ShxFont(f)\n            paths = ShxPath()\n            shx.render(paths, \"The quick brown fox jumps over the lazy dog\", font_size=50)\n            draw(paths, 2000, 100, 50, f\"{f}.png\")\n```\n\n![SCRIPTS8 SHX](https://user-images.githubusercontent.com/3302478/173228169-27c914e1-0f2e-4125-85d9-e063e9ca28fb.png)\n\n# Format\n\nFor some format descriptions and explanations see:\n\n* https://help.autodesk.com/view/ACD/2020/ENU/?guid=GUID-0A8E12A1-F4AB-44AD-8A9B-2140E0D5FD23\n\nAnd:\n\n* https://help.autodesk.com/view/ACD/2020/ENU/?guid=GUID-06832147-16BE-4A66-A6D0-3ADF98DC8228\n\n\nPrimarily the format performs regular (octant direction, distance) and 15 speciality operations.\n\n## Regular Command\n* Direction, Length pair. If Length is 0 then direction is special command.\n\n## Special Commands\n* END_OF_SHAPE - Ends the shape.\n* PEN_DOWN - Puts the pen down into drawing mode.\n* PEN_UP - Puts the pen up into move mode.\n* DIVIDE_VECTOR - Applies a vector 1/scale\n* MULTIPLY_VECTOR - Applies a vector scale\n* PUSH_STACK - Pushes current position to the stack.\n* POP_STACK - Pops current position from the stack.\n* DRAW_SUBSHAPE - References the glyph data of another glyph.\n* XY_DISPLACEMENT - Moves to a long dx, dy position.\n* POLY_XY_DISPLACEMENT - Performs a sequence of long dx, dy position changes. 0,0 terminates.\n* OCTANT_ARC - Performs an octant_arc operation. Performing an arc across some octants.\n* FRACTIONAL_ARC - Performs an octant_arc operation with fractional value offsets.\n* BULGE_ARC - Performs bulge arc operations with dx, dy, and bulge.\n* POLY_BULGE_ARC - Performs a sequence of bulge arc operations. 0,0 terminates.\n* COND_MODE_2 - Performs the next command conditionally, and only if the current mode is vertical.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tatarize/shxparser",
    "keywords": "hershey fonts,line fonts,vectors,shx",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "shxparser",
    "package_url": "https://pypi.org/project/shxparser/",
    "platform": null,
    "project_url": "https://pypi.org/project/shxparser/",
    "project_urls": {
      "Homepage": "https://github.com/tatarize/shxparser"
    },
    "release_url": "https://pypi.org/project/shxparser/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "SHX Line Font Parser",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15381957,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7ddc95f1e037e28445ac50274438d70c2a7dac5421954b863ef3ad4106aa742",
          "md5": "30233ab83b9dc70b98b1220da9a88dbc",
          "sha256": "b993a0b523d08a267a4718a44047d4391ecfcae232112c3c89a0e2ee3a301c0f"
        },
        "downloads": -1,
        "filename": "shxparser-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "30233ab83b9dc70b98b1220da9a88dbc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 8602,
        "upload_time": "2022-06-12T14:24:17",
        "upload_time_iso_8601": "2022-06-12T14:24:17.361977Z",
        "url": "https://files.pythonhosted.org/packages/b7/dd/c95f1e037e28445ac50274438d70c2a7dac5421954b863ef3ad4106aa742/shxparser-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "543eebe3e00d673c5fc2bec0a9fd6e9230b304b386ef6a60e50e8e9a7aadf2b8",
          "md5": "0ee9c135bc3f4b429f3e384b7ba45355",
          "sha256": "7ea9fb6163361596f37a468d836a0f353c3d8647474fce9cd5f6e63301d93e8a"
        },
        "downloads": -1,
        "filename": "shxparser-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0ee9c135bc3f4b429f3e384b7ba45355",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8671,
        "upload_time": "2022-06-12T14:24:19",
        "upload_time_iso_8601": "2022-06-12T14:24:19.918165Z",
        "url": "https://files.pythonhosted.org/packages/54/3e/ebe3e00d673c5fc2bec0a9fd6e9230b304b386ef6a60e50e8e9a7aadf2b8/shxparser-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57fb98c8204a5348566f24ee23127a680a9b5ddd3614ecc5a00a4efe4d5f53e4",
          "md5": "4ff78bac48eda6922930c8761cd0b6e2",
          "sha256": "ccd37c9d63440f8c961189bf58d4a90db23ec7b31e4c12175267f0f780db7a6c"
        },
        "downloads": -1,
        "filename": "shxparser-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ff78bac48eda6922930c8761cd0b6e2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11335,
        "upload_time": "2022-10-12T03:11:57",
        "upload_time_iso_8601": "2022-10-12T03:11:57.207251Z",
        "url": "https://files.pythonhosted.org/packages/57/fb/98c8204a5348566f24ee23127a680a9b5ddd3614ecc5a00a4efe4d5f53e4/shxparser-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f819cc013c54afaf1bce5ce5f569580d6624e02f9b3f20b41b243556b9247b1",
          "md5": "efa4b91fc53ba60c92510e69ee082253",
          "sha256": "8541e4bce62876822c93f3959e7f6909ef1bf8352691b343bacdaaa9b92ff270"
        },
        "downloads": -1,
        "filename": "shxparser-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "efa4b91fc53ba60c92510e69ee082253",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12131,
        "upload_time": "2022-10-12T03:11:58",
        "upload_time_iso_8601": "2022-10-12T03:11:58.582305Z",
        "url": "https://files.pythonhosted.org/packages/1f/81/9cc013c54afaf1bce5ce5f569580d6624e02f9b3f20b41b243556b9247b1/shxparser-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "57fb98c8204a5348566f24ee23127a680a9b5ddd3614ecc5a00a4efe4d5f53e4",
        "md5": "4ff78bac48eda6922930c8761cd0b6e2",
        "sha256": "ccd37c9d63440f8c961189bf58d4a90db23ec7b31e4c12175267f0f780db7a6c"
      },
      "downloads": -1,
      "filename": "shxparser-0.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4ff78bac48eda6922930c8761cd0b6e2",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 11335,
      "upload_time": "2022-10-12T03:11:57",
      "upload_time_iso_8601": "2022-10-12T03:11:57.207251Z",
      "url": "https://files.pythonhosted.org/packages/57/fb/98c8204a5348566f24ee23127a680a9b5ddd3614ecc5a00a4efe4d5f53e4/shxparser-0.0.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f819cc013c54afaf1bce5ce5f569580d6624e02f9b3f20b41b243556b9247b1",
        "md5": "efa4b91fc53ba60c92510e69ee082253",
        "sha256": "8541e4bce62876822c93f3959e7f6909ef1bf8352691b343bacdaaa9b92ff270"
      },
      "downloads": -1,
      "filename": "shxparser-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "efa4b91fc53ba60c92510e69ee082253",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12131,
      "upload_time": "2022-10-12T03:11:58",
      "upload_time_iso_8601": "2022-10-12T03:11:58.582305Z",
      "url": "https://files.pythonhosted.org/packages/1f/81/9cc013c54afaf1bce5ce5f569580d6624e02f9b3f20b41b243556b9247b1/shxparser-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}