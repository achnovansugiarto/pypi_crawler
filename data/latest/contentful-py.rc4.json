{
  "info": {
    "author": "Contentful GmbH",
    "author_email": "python@contentful.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "*************\ncontentful.py\n*************\n\n|travis|\n\nPython SDK for `Contentful`_'s Content Delivery API.\n\nSetup\n=====\nInstallation via ``pip``:\n\n.. code-block:: bash\n\n    pip install contentful.py\n\nUsage\n=====\n\n-----------------\nCreating a Client\n-----------------\n\nThe ``Client`` class manages all your interaction with the Contentful Delivery API, creating one is as simple as:\n\n.. code-block:: python\n\n    client = Client('space-id', 'access-token')\n\n------------------\nFetching Resources\n------------------\n\nThe simplest form of fetching resources follows:\n\n.. code-block:: python\n\n    client.fetch(Asset).all()         # Returns an array of Assets\n    client.fetch(Asset).first()       # Returns the first Asset available\n\n    client.fetch(Entry).all()         # Returns an array of Entries\n    client.fetch(Entry).first()       # Returns the first Entry available\n\n    client.fetch(ContentType).all()   # Returns an array of Content Types\n    client.fetch(ContentType).first() # Returns the first Content Type available\n\nWhen used with the ``all()`` method, expect an ``Array`` object to be returned, which is iterable:\n\n.. code-block:: python\n\n    for resource in array:\n        dosomething(resource)\n\nand sliceable:\n\n.. code-block:: python\n\n    for resource in array[2:4]:\n        dosomething(resource)\n\n--------------\nCustom Queries\n--------------\n\nCustom queries can be provided by invoking the ``where()`` method of a ``Request`` object, for example:\n\n.. code-block:: python\n\n    client.fetch(Entry).where({'sys.id': 'MyEntry'}).first()\n\n---------------\nDefining Models\n---------------\n\nCustom Entry classes can be declared by providing a Content Type ID value and by defining a set of fields. Consider the ``Cat`` Content Type from the official demo space, which looks like this (sans some properties for brevity):\n\n.. code-block:: json\n\n    {\n      \"fields\": [\n        {\"id\": \"name\", \"name\": \"Name\", \"type\": \"Text\"},\n        {\"id\": \"likes\", \"name\": \"Likes\", \"type\": \"Array\", \"items\": { \"type\": \"Symbol\" }},\n        {\"id\": \"color\", \"name\": \"Color\", \"type\": \"Symbol\"},\n        {\"id\": \"bestFriend\", \"name\": \"Best Friend\", \"type\": \"Link\", \"linkType\": \"Entry\"},\n        {\"id\": \"birthday\", \"name\": \"Birthday\", \"type\": \"Date\"},\n        {\"id\": \"lives\", \"name\": \"Lives left\", \"type\": \"Integer\"},\n        {\"id\": \"image\", \"name\": \"Image\", \"type\": \"Link\", \"linkType\": \"Asset\"}\n      ],\n      \"name\": \"Cat\",\n      \"displayField\": \"name\",\n      \"description\": \"Meow.\"\n    }\n\nA custom Entry class for this Content Type can be defined as follows:\n\n.. code-block:: python\n\n    class Cat(Entry):\n        __content_type__ = 'cat'\n\n        name = Field(Text)\n        likes = Field(List)\n        color = Field(Text)\n        best_friend = Field(Link, field_id='bestFriend')\n        birthday = Field(Date)\n        lives = Field(Number)\n        image = Field(Link)\n\nThe class also has to be registered when creating a ``Client``:\n\n.. code-block:: python\n\n    client = Client('cfexampleapi', 'b4c0n73n7fu1', custom_entries=[Cat])\n\nWhenever this ``Client`` will attempt to create an ``Entry`` with a Content Type that matches the one defined in the class, an instance of the ``Cat`` class will be created, and it's fields will be set accordingly, and can later be easily accessed as instance attributes:\n\n.. code-block:: python\n\n    print('Name of the Cat: {0}'.format(cat.name))\n\nIf at any point it is desired to fetch only resources of that type, it can be passed to the ``fetch()`` method and inferred by the client:\n\n.. code-block:: python\n\n    client.fetch(Cat).all() # Fetches all the Cats!\n\n---------------\nLink Resolution\n---------------\n\nUnless specified otherwise, a ``Client`` is configured to resolve links automatically when fetching resources.\nBe mindful about providing the ``include`` parameter properly, since only if the linked resources are contained within the response they will be resolved automatically. In case a link is not resolved, expect a ``ResourceLink`` value, which can be resolved by invoking the ``resolve_resource_link()`` method of a ``Client`` (issues a network request per the resource ID).\n\n**Automatic link resolution:**\n\n.. code-block:: python\n\n    array = client.fetch(Cat).all()\n    print(array[0].best_friend)\n    # <Cat(sys.id=nyancat)>\n\n**Manual link resolution:**\n\n.. code-block:: python\n\n    cat = client.fetch(Cat).where({'sys.id': 'nyancat', 'include': 0}).first()\n    print(cat.best_friend)\n    # <contentful.cda.resources.ResourceLink object at 0x1030df390>\n    print(client.resolve_resource_link(cat.best_friend))\n    # <Cat(sys.id=nyancat)>\n\nLicense\n=======\n\nCopyright (c) 2015 Contentful GmbH. See `LICENSE.txt`_ for further details.\n\n\n.. _Contentful: https://www.contentful.com\n.. _LICENSE.txt: https://github.com/contentful-labs/contentful.py/blob/master/LICENSE.txt\n\n.. |travis| image:: https://travis-ci.org/contentful-labs/contentful.py.svg\n    :target: https://travis-ci.org/contentful-labs/contentful.py/builds#",
    "description_content_type": null,
    "docs_url": "https://pythonhosted.org/contentful.py/",
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/contentful-labs/contentful.py",
    "keywords": null,
    "license": "Apache 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "contentful.py",
    "package_url": "https://pypi.org/project/contentful.py/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/contentful.py/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/contentful-labs/contentful.py"
    },
    "release_url": "https://pypi.org/project/contentful.py/0.9.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Python SDK for Contentful's Content Delivery API",
    "version": "0.9.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2495742,
  "releases": {
    "0.9.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8bb9ff91248867b392adad54e6a233faae1382351e32347589aee7ae668048d",
          "md5": "47f04d08a0abdd5c9b2b216fc4e29f86",
          "sha256": "74618bd81cf6b155fee7417eb0d2c3808b4ee0c18ba1543f5d4e9f961eecdead"
        },
        "downloads": -1,
        "filename": "contentful.py-0.9.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "47f04d08a0abdd5c9b2b216fc4e29f86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13810,
        "upload_time": "2015-01-14T17:16:12",
        "upload_time_iso_8601": "2015-01-14T17:16:12.900758Z",
        "url": "https://files.pythonhosted.org/packages/f8/bb/9ff91248867b392adad54e6a233faae1382351e32347589aee7ae668048d/contentful.py-0.9.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b804bf6dc551f73e01851ccacce4132d8d8f8b085f639e9aae9619c62457e0f5",
          "md5": "fb00cacde6d53523e83f52451553e557",
          "sha256": "5c3d8b779c1c035aab5175de67eeb496096d81e9daa3133746da9bab951f91c8"
        },
        "downloads": -1,
        "filename": "contentful.py-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fb00cacde6d53523e83f52451553e557",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13745,
        "upload_time": "2015-01-16T14:36:07",
        "upload_time_iso_8601": "2015-01-16T14:36:07.296228Z",
        "url": "https://files.pythonhosted.org/packages/b8/04/bf6dc551f73e01851ccacce4132d8d8f8b085f639e9aae9619c62457e0f5/contentful.py-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82d75ce2b4be8b352a5c71dc7f921c8b242cddf1c2b5e93d6c2e790c4e79be25",
          "md5": "00193e58c3735876b7c350c96a178de5",
          "sha256": "7cd92ae313b3e198d7b26a6c84ff380758067101a4d852b69b851f3f7b7e9d19"
        },
        "downloads": -1,
        "filename": "contentful.py-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "00193e58c3735876b7c350c96a178de5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13808,
        "upload_time": "2015-07-08T16:24:47",
        "upload_time_iso_8601": "2015-07-08T16:24:47.319159Z",
        "url": "https://files.pythonhosted.org/packages/82/d7/5ce2b4be8b352a5c71dc7f921c8b242cddf1c2b5e93d6c2e790c4e79be25/contentful.py-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aacb11e621d8b52614b16435f06b10daae2e062d1b438321311fe95f9de56cd7",
          "md5": "44699c13b75186dbe0017f4233d47e5c",
          "sha256": "940c02f2969194cba246d2446d2f70c0a024ae06ad67c4617425f7646232d199"
        },
        "downloads": -1,
        "filename": "contentful.py-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "44699c13b75186dbe0017f4233d47e5c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13735,
        "upload_time": "2016-01-18T16:00:06",
        "upload_time_iso_8601": "2016-01-18T16:00:06.899929Z",
        "url": "https://files.pythonhosted.org/packages/aa/cb/11e621d8b52614b16435f06b10daae2e062d1b438321311fe95f9de56cd7/contentful.py-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aacb11e621d8b52614b16435f06b10daae2e062d1b438321311fe95f9de56cd7",
        "md5": "44699c13b75186dbe0017f4233d47e5c",
        "sha256": "940c02f2969194cba246d2446d2f70c0a024ae06ad67c4617425f7646232d199"
      },
      "downloads": -1,
      "filename": "contentful.py-0.9.3.tar.gz",
      "has_sig": false,
      "md5_digest": "44699c13b75186dbe0017f4233d47e5c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13735,
      "upload_time": "2016-01-18T16:00:06",
      "upload_time_iso_8601": "2016-01-18T16:00:06.899929Z",
      "url": "https://files.pythonhosted.org/packages/aa/cb/11e621d8b52614b16435f06b10daae2e062d1b438321311fe95f9de56cd7/contentful.py-0.9.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}