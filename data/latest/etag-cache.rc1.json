{
  "info": {
    "author": "Rakesh R",
    "author_email": "rrrakesh265@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# etag-response-cache\nEtag cache implementation for HTTP requests, to save request bandwidth for a non-modified response. Returns\nhigh-speed accessed dictionary data as cache.\n\n## Concept\nStore Etag value(as hash key:value pair) in the user's home directory `os.path.join(os.getenv(\"HOME\"), \".pyapp\")` into `etag` and successful response data into `cache` DBM files.<br>\nAdd `If-None-Match` header for all `GET` request.</br> \nUpdate `etag` and `cache` for required request url, when none 304 http status is received i.e if response is modified.</br>\nReturn `cache` data as dictionary for non-modified response.</br>\n\nSample `GET` request header with `If-None-Match`:\n```\n{'X-Kite-Version': '3', 'User-Agent': 'Kiteconnect-python/3.9.4', \n'If-None-Match': 'W/\"i51p01GqP6TRPWsM\"', \n'Authorization': 'token api_key:access_token'}\n```\n\n## Installation\n```\nTo-do: Release it as pypi package\n```\n\n## Usage\n```python\nimport requests\nfrom etag_package import EtagCache\n\n\ncache_object = EtagCache()\nurl = \"https://api.kite.trade/portfolio/holdings\"\n\npayload = \"\"\nheaders = {\n    'x-kite-version': \"3\",\n    'authorization': \"token api_key:access_token\"\n    }\n# Add etag to request header\nheaders = cache_object.add_etag(\"GET\", headers, url)\n\nresponse = requests.request(\"GET\", url, data=payload, headers=headers)\n# Store etag from response header\ncache_object.save_etag(response)\n# Store response data as cache\nresponse_dict = cache_object.add_read_cache(response)\nprint(response_dict)\n```\n## Response\n```\nDEBUG:urllib3.connectionpool:https://api.kite.trade:443 \"GET /portfolio/holdings HTTP/1.1\" 304 0\n\n{'tradingsymbol': 'APOLLOPIPE', 'exchange': 'NSE', 'instrument_token': 3676417, 'isin': 'INE126J01016',\n 'product': 'CNC', 'price': 0, 'quantity': 3, 'used_quantity': 0, 't1_quantity': 0, 'realised_quantity': 3,\n 'authorised_quantity': 0, 'authorised_date': '2021-12-28 00:00:00', 'opening_quantity': 3, 'short_quantity': \n 0, 'collateral_quantity': 0, 'collateral_type': '', 'discrepancy': False, 'average_price': 582.666667, \n 'last_price': 539.8, 'close_price': 539.65, 'pnl': -128.60000100000002, 'day_change': 0.14999999999997726, \n 'day_change_percentage': 0.027795793569902208} .....\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ranjanrak/etag-response-cache",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "etag-cache",
    "package_url": "https://pypi.org/project/etag-cache/",
    "platform": "",
    "project_url": "https://pypi.org/project/etag-cache/",
    "project_urls": {
      "Homepage": "https://github.com/ranjanrak/etag-response-cache"
    },
    "release_url": "https://pypi.org/project/etag-cache/0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python package for caching HTTP response based on etag",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12615651,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "084611d04d4dd72888663c40e9959b59417f2e2f628058f5a7e5125895d6b584",
          "md5": "392791165d2f73d03f15b0469594b4d1",
          "sha256": "2951a86f8bdfa9e2f2a64da1bb97cc86385f036016c5b52bcb64b83bcf708d80"
        },
        "downloads": -1,
        "filename": "etag_cache-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "392791165d2f73d03f15b0469594b4d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4194,
        "upload_time": "2022-01-19T05:41:07",
        "upload_time_iso_8601": "2022-01-19T05:41:07.533928Z",
        "url": "https://files.pythonhosted.org/packages/08/46/11d04d4dd72888663c40e9959b59417f2e2f628058f5a7e5125895d6b584/etag_cache-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "084611d04d4dd72888663c40e9959b59417f2e2f628058f5a7e5125895d6b584",
        "md5": "392791165d2f73d03f15b0469594b4d1",
        "sha256": "2951a86f8bdfa9e2f2a64da1bb97cc86385f036016c5b52bcb64b83bcf708d80"
      },
      "downloads": -1,
      "filename": "etag_cache-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "392791165d2f73d03f15b0469594b4d1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4194,
      "upload_time": "2022-01-19T05:41:07",
      "upload_time_iso_8601": "2022-01-19T05:41:07.533928Z",
      "url": "https://files.pythonhosted.org/packages/08/46/11d04d4dd72888663c40e9959b59417f2e2f628058f5a7e5125895d6b584/etag_cache-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}