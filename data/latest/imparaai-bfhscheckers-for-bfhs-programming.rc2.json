{
  "info": {
    "author": "Shono1",
    "author_email": "shonor47@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "A Python3 library that you can use to play a game of checkers/draughts. This is just a set of classes that you can use in your code, it's not an interactive shell checkersgame.\n\n#Note:\nThis is a modified version of the [Imparaai checkers library](https://github.com/ImparaAI/checkers).\nAlongside the base module (which I forked from the repository at the above link), the Colorama and PrettyTable dependencies are also in use.\nThe only addition I have made to this module is a graphical representation of the board.\n# Assumptions\n\nThe rules used are for competitive American checkers or English draughts. This means an 8x8 board with **force captures** and regular kings.\n\nEach position on the board is numbered 1 to 32. Each move is represented as an array with two values: starting position and ending position. So if you're starting a new game, one of the available moves is `[9, 13]` for player 1. If there's a capture move, the ending position is the position the capturing piece will land on (i.e. two rows from its original row), which might look like `[13, 22]`.\n\nEach piece movement is completely distinct, even if the move is part of a multiple capture series. In [Portable Draughts Notation](https://en.wikipedia.org/wiki/Portable_Draughts_Notation) mutli-capture series are usually represented by a `5-32` (for a particularly long series of jumps), but in certain situations there could be multiple pathways to achieve that final position. This game requires an explicit spelling out of each distinct move in the multi-capture series.\n\n# Usage\n\nCreate a new game:\n\n```python\nfrom BFHScheckers.game import Game\n\ngame = Game()\n```\n\nSee whose turn it is:\n\n```python\ngame.whose_turn() #1 or 2\n```\n\nGet the possible moves:\n\n```python\ngame.get_possible_moves() #[[9, 13], [9, 14], [10, 14], [10, 15], [11, 15], [11, 16], [12, 16]]\n```\n\nMake a move:\n\n```python\ngame.move([9, 13])\n```\n\nCheck if the game is over:\n\n```python\ngame.is_over() #True or False\n```\n\nFind out who won:\n\n```python\ngame.get_winner() #None or 1 or 2\n```\n\nReview the move history:\n\n```python\ngame.moves #[[int, int], [int, int], ...]\n```\n\nChange the consecutive noncapture move limit (default `40` according to the [rules](http://www.usacheckers.com/rulesofcheckers.php)):\n\n```python\ngame.consecutive_noncapture_move_limit = 20\ngame.move_limit_reached() #True or False\n```\n\nReview the pieces on the board:\n\n```python\nfor piece in game.board.pieces:\n\tpiece.player #1 or 2\n\tpiece.other_player #1 or 2\n\tpiece.king #True or False\n\tpiece.captured #True or False\n\tpiece.position #1-32\n\tpiece.get_possible_capture_moves() #[[int, int], [int, int], ...]\n\tpiece.get_possible_positional_moves() #[[int, int], [int, int], ...]\n```\n\nGet a string representation of the pieces on the board:\n\n\n```python\nstr(game.board)\n```\nOutput:\n\n![Output](img_1.png)\n\n\n# Testing\n\nRun `python3 -m unittest discover` from the root.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Shono1/checkers",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "imparaai-BFHScheckers-for-BFHS-programming",
    "package_url": "https://pypi.org/project/imparaai-BFHScheckers-for-BFHS-programming/",
    "platform": "",
    "project_url": "https://pypi.org/project/imparaai-BFHScheckers-for-BFHS-programming/",
    "project_urls": {
      "Homepage": "https://github.com/Shono1/checkers"
    },
    "release_url": "https://pypi.org/project/imparaai-BFHScheckers-for-BFHS-programming/1.4.2.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Library for playing a standard game of checkers/draughts",
    "version": "1.4.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9962684,
  "releases": {
    "1.4.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46fda33d211a82658b5b9d002b2269716871984cf8f1fb37a55786a0f4112d9a",
          "md5": "a7e887201d198e243c7ff413e8c1c0b6",
          "sha256": "ad20a20c61782c3a409bf3d16095ee0e5f974b03d5e503425ffd9e557d4298f7"
        },
        "downloads": -1,
        "filename": "imparaai_BFHScheckers_for_BFHS_programming-1.4.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7e887201d198e243c7ff413e8c1c0b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15717,
        "upload_time": "2021-04-02T20:22:20",
        "upload_time_iso_8601": "2021-04-02T20:22:20.154067Z",
        "url": "https://files.pythonhosted.org/packages/46/fd/a33d211a82658b5b9d002b2269716871984cf8f1fb37a55786a0f4112d9a/imparaai_BFHScheckers_for_BFHS_programming-1.4.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5b46d8d11ea1dc043461722452881a2fc5654d2e2686b7e566343d90d15c0e5",
          "md5": "ae0aaa44b714607660c5e71404561a2e",
          "sha256": "5b39e27faa5f47fba4d54867d396454233a1a815c923758df1c0a4349d0a6544"
        },
        "downloads": -1,
        "filename": "imparaai-BFHScheckers-for-BFHS-programming-1.4.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ae0aaa44b714607660c5e71404561a2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8456,
        "upload_time": "2021-04-02T20:22:21",
        "upload_time_iso_8601": "2021-04-02T20:22:21.330525Z",
        "url": "https://files.pythonhosted.org/packages/c5/b4/6d8d11ea1dc043461722452881a2fc5654d2e2686b7e566343d90d15c0e5/imparaai-BFHScheckers-for-BFHS-programming-1.4.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "451c815dd696e2991490c8b85cf1c0fc29aae1f748468eede7468d9e32082948",
          "md5": "b176d42041e74c23ea7cfc0bca5a67b2",
          "sha256": "c3be790c88f2a8406e6081d1475ee608c4039c3547f2d8612411629d3e1499eb"
        },
        "downloads": -1,
        "filename": "imparaai_BFHScheckers_for_BFHS_programming-1.4.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b176d42041e74c23ea7cfc0bca5a67b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15758,
        "upload_time": "2021-04-03T00:38:31",
        "upload_time_iso_8601": "2021-04-03T00:38:31.395433Z",
        "url": "https://files.pythonhosted.org/packages/45/1c/815dd696e2991490c8b85cf1c0fc29aae1f748468eede7468d9e32082948/imparaai_BFHScheckers_for_BFHS_programming-1.4.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c18ac62f5c610abff11b4bed78be924340fdcd297504d3bac5760377d7eae29",
          "md5": "3efbbcf559d70fbbffd91c3cf39c831a",
          "sha256": "27cf20ee9a3822f61dd553b466cb7dc6a6f691d1ad534a60d8a3803c9df9924f"
        },
        "downloads": -1,
        "filename": "imparaai-BFHScheckers-for-BFHS-programming-1.4.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3efbbcf559d70fbbffd91c3cf39c831a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8464,
        "upload_time": "2021-04-03T00:38:32",
        "upload_time_iso_8601": "2021-04-03T00:38:32.433558Z",
        "url": "https://files.pythonhosted.org/packages/1c/18/ac62f5c610abff11b4bed78be924340fdcd297504d3bac5760377d7eae29/imparaai-BFHScheckers-for-BFHS-programming-1.4.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "451c815dd696e2991490c8b85cf1c0fc29aae1f748468eede7468d9e32082948",
        "md5": "b176d42041e74c23ea7cfc0bca5a67b2",
        "sha256": "c3be790c88f2a8406e6081d1475ee608c4039c3547f2d8612411629d3e1499eb"
      },
      "downloads": -1,
      "filename": "imparaai_BFHScheckers_for_BFHS_programming-1.4.2.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b176d42041e74c23ea7cfc0bca5a67b2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15758,
      "upload_time": "2021-04-03T00:38:31",
      "upload_time_iso_8601": "2021-04-03T00:38:31.395433Z",
      "url": "https://files.pythonhosted.org/packages/45/1c/815dd696e2991490c8b85cf1c0fc29aae1f748468eede7468d9e32082948/imparaai_BFHScheckers_for_BFHS_programming-1.4.2.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c18ac62f5c610abff11b4bed78be924340fdcd297504d3bac5760377d7eae29",
        "md5": "3efbbcf559d70fbbffd91c3cf39c831a",
        "sha256": "27cf20ee9a3822f61dd553b466cb7dc6a6f691d1ad534a60d8a3803c9df9924f"
      },
      "downloads": -1,
      "filename": "imparaai-BFHScheckers-for-BFHS-programming-1.4.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "3efbbcf559d70fbbffd91c3cf39c831a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8464,
      "upload_time": "2021-04-03T00:38:32",
      "upload_time_iso_8601": "2021-04-03T00:38:32.433558Z",
      "url": "https://files.pythonhosted.org/packages/1c/18/ac62f5c610abff11b4bed78be924340fdcd297504d3bac5760377d7eae29/imparaai-BFHScheckers-for-BFHS-programming-1.4.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}