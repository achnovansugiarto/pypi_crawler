{
  "info": {
    "author": "Ken Kundert",
    "author_email": "networth@nurdletech.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "Networth: Summarize Your Net Worth\n==================================\n\n| Version: 1.1.0\n| Released: 2021-03-11\n\n*Networth* works with `Avendesora <https://avendesora.readthedocs.io>`_ to \ngenerate a summary of your networth. *Networth* reads *estimated_value* fields \nfrom *Avendesora* accounts and summarizes the result.  It is often used with, \nand shares fields with, `PostMortem <https://github.com/KenKundert/postmortem>`_.\nWorks with data services to download up-to-date prices for securities and \ncryptocurrencies.\n\nPlease report all bugs and suggestions to networth@nurdletech.com\n\nGetting Started\n---------------\n\nYou download and install *Networth* with::\n\n    pip3 install --user networth\n\nOnce installed, you will need at least two configuration files. The \nconfiguration files are `NestedText <https://nestedtext.readthedocs.io>`_.  The \nfirst file contains settings that are shared between all profiles.  It is \n~/.config/networth/config.  The remaining files are specific to profiles.  You \nwould generally have one profile for yourself, but you might also have profiles \nfor organizations or people that you are monitoring.\n\nProfile files have a .prof suffix, and the name of the profile is the name of \nthe profile file without the suffix.\n\nIn general, any setting may be in either the config file or the profile file.  \nHowever, the following setting should in the config file:\n\ndefault profile:\n    A string that contains the name of the profile to use if the one is not \n    explicitly specified on the command line.\n\nIn addition, the following settings are available:\n\navendesora fieldname:\n    The name of the *Avendesora* account field that contains the networth \n    information.  Typically *estimated_value*.\n\nvalue updated subfieldname:\n    The name of the subfield of *estimated_value* that contains the date the \n    value was last updated.  Typically *updated*.\n\nmax account value age:\n    Number of days. Values that are older than this are called out as being \n    stale. Default is 120 days.\n\ndate formats:\n    The list of allowed date formats. May be specified as a list or as a string\n    string that contains the allowed date formats separated by white space.  Any \n    spaces is a specific format is replaced by an underscore so that it is not \n    confused as more than one format. For example a format of 'MMMM YYYY' would \n    be represented as 'MMMM_YYYY'. The formats allowed are those supported by \n    Arrow.\n\n    By default the following formats are accepted: 'MMMM YYYY', 'MMM YYYY', \n    'YYYY-M-D', and 'YYMMDD'. So the following dates would be accepted: 'January \n    2019', 'Jan 2019', '2019-1-1' and '190101'.\n\nasset color:\n    The color to used for positive values. May be black, white, blue, cyan, \n    green, red, magenta, or yellow. The default is green.\n\ndebt color:\n    The color to used for negative values. May be black, white, blue, cyan, \n    green, red, magenta, or yellow. The default is red.\n\nscreen width:\n    An integer that contains the width of the screen.\n\naliases:\n    A dictionary that is used to map an account name to something that is easier \n    to read.\n\ncryptocompare:\n    A dictionary containing information about cryptocurrency prices that are to \n    be downloaded from cryptocompare.com.\n\n    To avoid caching issues it is recommended that *cryptocompare* files be \n    placed in the shared *config* file if multiple profiles need it.\n\n    tokens:\n        A dictionary of crytpocurrency tokens that should be available for use.\n        The key of the dictionary is the token symbol, the value is the category \n        it should associate with.\n\n    ttl:\n        Cache time to live.  If the cache is older than this time, it is \n        refreshed.  Here are example times: 600s, 10m, 6h, 1d.\n\n    api key:\n        The coin prices are downloaded from cryptocompare.com. Specifying the \n        API key is optional.  Providing an API key increases your limits, but \n        limits are generally not a problem for *Networth* because it is run so \n        infrequently.\n\n    api key account field:\n        You may place the API key in *Avendesora* and use this key to specify the \n        account and field name for the API key.\n\niexcloud:\n    A dictionary containing information about security prices that are to be \n    downloaded from iexcloud.io.  This dictionary takes the same fields as \n    *cryptocompare*.  An API key is required.\n\n    To avoid caching issues it is recommended that *iexcloud* files be placed in \n    the shared *config* file if multiple profiles need it.\n\ntwelve data:\n    A dictionary containing information about security prices that are to be \n    downloaded from twelvedata.com.  This dictionary takes the same fields as \n    *cryptocompare*.  An API key is required.\n\n    To avoid caching issues it is recommended that *twelvedata* files be placed \n    in the shared *config* file if multiple profiles need it.\n\n    *Twelve Data* provides real time values, but have very low limits unless you \n    get an expensive subscription.  If you do not have a subscription, it is \n    recommended that you limit the number of tokens to 8 or less.\n\nmetals api:\n    A dictionary containing information about precious metals prices that are to \n    be downloaded from metals-api.com.  This dictionary takes the same fields as \n    *cryptocompare*.  An API key is required.\n\n    To avoid caching issues it is recommended that *metals* files be placed in \n    the shared *config* file if multiple profiles need it.\n\nestimated value overrides file:\n    A path to a file of *estimated_value* overrides. Give as a NestedText file \n    that contains a dictionary of dictionaries.  The keys for the top level are \n    account names, and the value contains the estimated value dictionary that \n    would normally be found in the *Avendesora* accounts file.\n\n\nExample Configuration Files\n---------------------------\n\nHere is an example *config* file::\n\n    default profile: me\n\n    # account value settings\n    avendesora fieldname: estimated_value\n    value updated subfieldname: updated\n    max account value age: 120\n    date formats: M/D/YY M/D/YYYY\n\n    # bar settings\n    screen width: 110\n\n    # cryptocurrency prices\n    cryptocompare:\n        tokens:\n            USD: cash\n            BTC: cryptocurrency\n            ETH: cryptocurrency\n\n    # securities prices\n    iexcloud:\n        api key: pk_9eb3acfc7dbe4055a795ff179d46a980\n        tokens:\n            GOOG: equities\n            AMZN: equities\n            GBTC: cryptocurrency\n\nHere is a example profile file::\n\n    # account aliases\n    aliases:\n        quickenloans: mortgage\n        wellsfargo: wells fargo\n\n\nHere is a example estimated value overrides file::\n\n    chase:\n        updated: February 2021\n        cash:\n            > $4,425.71 +       # checking\n            > $1,896.26         # savings\n\n\nEstimated Values\n----------------\n\nNext, you need to add *estimated_value* fields to your *Avendesora* accounts, \nthe value of which is a dictionary. It may contain a *updated* subfield that \ngives the date the value was last updated.  In addition, it may contain \nsubfields for various asset classes or coins or securities.  The values may \neither be real numbers or strings that contain quantities (values plus units).  \nHere are some examples::\n\n    class ChaseBank(Account):\n        ...\n        estimated_value = dict(updated='December 2018', cash=2181.16+5121.79)\n\n    class QuickenLoans(Account):\n        ...\n        estimated_value = dict(updated='October 2018', real_estate='-$294,058')\n\n    class Vanguard(Account):\n        ...\n        estimated_value = dict(updated='November 2018', retirement='$74,327')\n\n    class TDAmeritrade(Account):\n        ...\n        estimated_value = dict( updated='November 2018', retirement='$74,327+$111,554')\n\n    class Fidelity(Account):\n        ...\n        estimated_value = dict( updated='November 2018', retirement='''\n            $62,976.22 +    # 401k\n            $26,704.85      # IRA\n        ''')\n\n    class UnitedAirlines(Account):\n        ...\n        estimated_value = dict(updated='July 2018', miles='7,384_miles')\n\n    class CoinBase(Account):\n        ...\n        estimated_value = dict(updated='August 2018', ETH=2, BTC=4, cash=24.52)\n\n    class TD_Ameritrade(Account):\n        ...\n        estimated_value = dict(updated='January 2019', GOOG=10, AMZN=5, cash=327.53)\n\nThe value of securities are given is number of shares. The value given for \ncryptocurrencies is number of tokens. All other values are assumed to be in \ndollars if the units are not given. If the units are given and they are not \ndollars (such as miles for frequent flier programs), then those values are \nsummarized but not included in your total networth.\n\nSpecifying the *updated* date is optional. If specified, then *networth* will \nindicate the values as stale if they exceed *max_account_value_age*.\n\nIt is also specify information about a loan, and *networth* will compute its \ncurrent balance.  This is done by giving the principal on a particular date, the \ndate for the given principal, the monthly payments, the interest rate, and \noptionally, the share. The rate and the share can be given in percent, meaning \nthat an rate of 4% can either be specified as 4% or as 0.04. Similarly a share \nhalf share can be indicated as 50% or 0.5.  For example::\n\n    class QuickenLoans(Account):\n        ...\n        estimated_value = dict(\n            real_estate = '''\n                principal=-$294,058\n                date=09/04/2013\n                payment=$1,500.00\n                rate=4.375%\n                share=50%\n            ''',\n        )\n\nthe key=value pairs can be separated by any white space, but there must be no\nwhite space surrounding the = sign. For mortgages that you owe, the principal \nshould be negative. You can also use this feature to describe an automatic \nsavings plan into an interest bearing account.  In this case the principal would \nbe your starting balance and the payment would be your monthly investment \namount.  In this case the starting balance would be positive.\n\n\nUsage\n-----\n\nWhen running the command, you may specify a profile. If you do not, you get the \ndefault profile.  For example::\n\n    > networth me\n    By Account:\n            betterment:    $22k equities=$9k, cash=$3k, retirement=$9k\n                 chase:     $7k cash\n             southwest:      $0 miles=78kmiles\n              coindesk:  $15.3k cryptocurrency\n\n    By Type:\n        cryptocurrency:  $15.3k (35.3%) ██████████████████████████████████████████\n                  cash:    $10k (23.1%) ███████████████████████████████\n              equities:     $9k (20.8%) ███████████████████████████\n            retirement:     $9k (20.8%) ███████████████████████████\n\n                 TOTAL:  $43.3k (assets = $43.3k, debt = $0)\n\nIn this run, the values associated with the various asset classes (ex. equities, \ncash, retirement, etc.) are taken as is. As such, you must be diligent about \nkeeping these values up to date, which is a manual operation. You might consider \nupdating your *estimated values* every 3-6 months.  However the current prices \nfor your configured securities and cryptocurrencies are downloaded and \nmultiplied by the given number of shares or tokens to get the up-to-date values \nof your equities and cryptocurrency holdings. Thus you only need update them \nafter a transaction. Finally, mortgage balances are also kept up to date. You \nonly need update mortgages if you decide to change the payment amount in order \nto pay off the loan faster.\n\n\nHistory\n-------\n\nIf you would like to be able to plot your net worth over time you run the \nfollowing regularly::\n\n    networth -w <profile>\n\nEach time you do, the networth values are added to a data file \n(~/.local/share/networth/<profile>.nt).\n\nYou can then plot the historical values using::\n\n    plot-networth <name>...\n\nYou can get a list of the values you can plot using::\n\n    plot-networth -l\n\n\nReleases\n--------\n**Latest Development Version**:\n    | Version: 1.1.0\n    | Released: 2021-03-11\n\n**1.1 (2021-03-11)**:\n    - clean up and minor refinements.\n\n**1.0 (2021-02-13)**:\n    - Add *estimated value overrides file* setting.\n    - Add --details option.\n    - Add --write-data option.\n    - Add *plot-networth* command.\n    - Allow categories to be specified for downloaded token prices.\n\n**0.8 (2020-10-10)**:\n    - Add support for downloading prices of precious metals.\n    - Switch to *NestedText* for the settings files.\n\n**0.7 (2020-03-06)**:\n    - Now uses `QuantiPhy Eval <https://github.com/KenKundert/quantiphy_eval>`_ \n      to allow you to use expressions within strings for estimated values.\n\n**0.6 (2020-01-08)**:\n    - Added --prices and --clear-cache command line options.\n    - Support using a proxy.\n\n**0.5 (2019-07-18)**:\n\n**0.4 (2019-06-15)**:\n    - Convert to using new IEXcloud API for downloading security prices.\n\n**0.3 (2019-04-20)**:\n    - Allow arbitrary date format in mortgages.\n    - Improve error reporting.\n    - Change the sign of the principal in mortgages.\n\n**0.1 (2019-03-23)**:\n    - Initial release.\n    - Add mortgage balance calculations.\n\n**0.0 (2019-01-31)**:\n    - Initial version.\n\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/kenkundert/networth/tarball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kenkundert/networth",
    "keywords": "networth",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "networth",
    "package_url": "https://pypi.org/project/networth/",
    "platform": "",
    "project_url": "https://pypi.org/project/networth/",
    "project_urls": {
      "Download": "https://github.com/kenkundert/networth/tarball/master",
      "Homepage": "https://github.com/kenkundert/networth"
    },
    "release_url": "https://pypi.org/project/networth/1.1.0/",
    "requires_dist": [
      "appdirs",
      "arrow",
      "avendesora (>=1.12)",
      "docopt",
      "inform (>=1.14)",
      "nestedtext",
      "python-gnupg (>=0.4.3)",
      "quantiphy",
      "quantiphy-eval (>=0.3)",
      "voluptuous"
    ],
    "requires_python": ">=3.6",
    "summary": "Summarize net worth",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9747811,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "808c6e178d4275ff502a8a5ef2dd755762fb883fb58f996ef3dfab210f549c4e",
          "md5": "a158b79d3290bb5831277c5e1f71fc53",
          "sha256": "0441af49ed789b16856c9822bdd1f8e5b11655abd82137738d0f393ed8298a61"
        },
        "downloads": -1,
        "filename": "networth-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a158b79d3290bb5831277c5e1f71fc53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10571,
        "upload_time": "2019-03-23T18:43:16",
        "upload_time_iso_8601": "2019-03-23T18:43:16.439441Z",
        "url": "https://files.pythonhosted.org/packages/80/8c/6e178d4275ff502a8a5ef2dd755762fb883fb58f996ef3dfab210f549c4e/networth-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e578b75fbdb416c384c412584f1fe0e6c42ad2401be3ae2c887777129c09e6f0",
          "md5": "deebd387ff593e8a92a14107a5fb4056",
          "sha256": "6cb24bd3919b839fc8edcb88f4ded2bc30d3a6b842ed685e2d6fac1c836e9515"
        },
        "downloads": -1,
        "filename": "networth-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "deebd387ff593e8a92a14107a5fb4056",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11406,
        "upload_time": "2019-03-24T00:00:45",
        "upload_time_iso_8601": "2019-03-24T00:00:45.444883Z",
        "url": "https://files.pythonhosted.org/packages/e5/78/b75fbdb416c384c412584f1fe0e6c42ad2401be3ae2c887777129c09e6f0/networth-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "852d7e0c2138a2b206e3de984c2ab12c4eee8b8e06fe9030b9bfd94abe732fc3",
          "md5": "d7e2c8ec31a7e20824d884aab41a5d09",
          "sha256": "03837e5e05574d85d5dbb46965ff5f644ce7d301c1c8e1e373fc5cc63897267c"
        },
        "downloads": -1,
        "filename": "networth-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d7e2c8ec31a7e20824d884aab41a5d09",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11536,
        "upload_time": "2019-04-21T04:00:48",
        "upload_time_iso_8601": "2019-04-21T04:00:48.113783Z",
        "url": "https://files.pythonhosted.org/packages/85/2d/7e0c2138a2b206e3de984c2ab12c4eee8b8e06fe9030b9bfd94abe732fc3/networth-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d04f060f604d628f4e04cf2655fe3359c6a650cab4562c84c56c99faadf22539",
          "md5": "db523a6f10f0c64d772d1da81978c6b1",
          "sha256": "4cab07fa8482270092710cce6b8f5b56af8584f377630b566c89ab16d065fd80"
        },
        "downloads": -1,
        "filename": "networth-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "db523a6f10f0c64d772d1da81978c6b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15615,
        "upload_time": "2020-03-06T23:24:06",
        "upload_time_iso_8601": "2020-03-06T23:24:06.500148Z",
        "url": "https://files.pythonhosted.org/packages/d0/4f/060f604d628f4e04cf2655fe3359c6a650cab4562c84c56c99faadf22539/networth-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07d46c6a531792dc1d9993d758db537d2475444a2f04a8998cc3aead52d5d1f2",
          "md5": "d988f1d18c792ae0d69b47df6a221c0e",
          "sha256": "d34b8d6ff2ffe9687c7b83a2b834b563fbe5ba564201f8edeecc2f7607841462"
        },
        "downloads": -1,
        "filename": "networth-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d988f1d18c792ae0d69b47df6a221c0e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25100,
        "upload_time": "2020-10-11T04:13:33",
        "upload_time_iso_8601": "2020-10-11T04:13:33.582674Z",
        "url": "https://files.pythonhosted.org/packages/07/d4/6c6a531792dc1d9993d758db537d2475444a2f04a8998cc3aead52d5d1f2/networth-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d79c2d845dcc68f9d5aaa2724b6e9fdeeb736593139635b75fa9e3a0b7c2e6e",
          "md5": "19c80275d66ead113630ccab6ade5db3",
          "sha256": "cd86260451f7c7b039af65672ef4fda5a00ad23dcee229f05093fa3cad860b3a"
        },
        "downloads": -1,
        "filename": "networth-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "19c80275d66ead113630ccab6ade5db3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17814,
        "upload_time": "2020-10-11T04:13:36",
        "upload_time_iso_8601": "2020-10-11T04:13:36.481225Z",
        "url": "https://files.pythonhosted.org/packages/6d/79/c2d845dcc68f9d5aaa2724b6e9fdeeb736593139635b75fa9e3a0b7c2e6e/networth-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce1ea51279198cec339b3b27af003e236146f85ad10db1dc56eaca9eec278733",
          "md5": "d08e1cf85da1e7acf6542353128f7962",
          "sha256": "70560b6493cb72584497228ad767bd4540e50ea9c8c0731223d7bf44d5315835"
        },
        "downloads": -1,
        "filename": "networth-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d08e1cf85da1e7acf6542353128f7962",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28675,
        "upload_time": "2021-02-13T08:53:45",
        "upload_time_iso_8601": "2021-02-13T08:53:45.476827Z",
        "url": "https://files.pythonhosted.org/packages/ce/1e/a51279198cec339b3b27af003e236146f85ad10db1dc56eaca9eec278733/networth-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92b05614e36f6aa01a21ca83f5477e233c65024bef4002d2f587a6921b3d45af",
          "md5": "fbc3c414f5b71b06496ea2b8e99a26e4",
          "sha256": "e0c71377fc41efcb5db11a1c36df044a0dc60d200a3483aba00f881b04debb4a"
        },
        "downloads": -1,
        "filename": "networth-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fbc3c414f5b71b06496ea2b8e99a26e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21817,
        "upload_time": "2021-02-13T08:53:47",
        "upload_time_iso_8601": "2021-02-13T08:53:47.037485Z",
        "url": "https://files.pythonhosted.org/packages/92/b0/5614e36f6aa01a21ca83f5477e233c65024bef4002d2f587a6921b3d45af/networth-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35adc7785fc2b53e6e4eb3ffa90a54c9a0c0c63785b9b7be0c64b49c3d092cfe",
          "md5": "9b94b122df08b533d67fc51c0854357c",
          "sha256": "ff5cfcd7a86b7c07dab1de3ff5e9943af3a01e3a82bf0c4d8029f6f285c43477"
        },
        "downloads": -1,
        "filename": "networth-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b94b122df08b533d67fc51c0854357c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28716,
        "upload_time": "2021-03-12T02:13:05",
        "upload_time_iso_8601": "2021-03-12T02:13:05.514978Z",
        "url": "https://files.pythonhosted.org/packages/35/ad/c7785fc2b53e6e4eb3ffa90a54c9a0c0c63785b9b7be0c64b49c3d092cfe/networth-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82cbb57411f9f9ab6816e830646b362b516cc0c2525392d4eca6102bf436c77f",
          "md5": "e37eebbfb43c899ee5c55b4114881a98",
          "sha256": "3ce359901bee752e525a5772ec2d382db94e3f20f53b7fad4a6d9f6746e748d4"
        },
        "downloads": -1,
        "filename": "networth-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e37eebbfb43c899ee5c55b4114881a98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21870,
        "upload_time": "2021-03-12T02:13:07",
        "upload_time_iso_8601": "2021-03-12T02:13:07.061020Z",
        "url": "https://files.pythonhosted.org/packages/82/cb/b57411f9f9ab6816e830646b362b516cc0c2525392d4eca6102bf436c77f/networth-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35adc7785fc2b53e6e4eb3ffa90a54c9a0c0c63785b9b7be0c64b49c3d092cfe",
        "md5": "9b94b122df08b533d67fc51c0854357c",
        "sha256": "ff5cfcd7a86b7c07dab1de3ff5e9943af3a01e3a82bf0c4d8029f6f285c43477"
      },
      "downloads": -1,
      "filename": "networth-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9b94b122df08b533d67fc51c0854357c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 28716,
      "upload_time": "2021-03-12T02:13:05",
      "upload_time_iso_8601": "2021-03-12T02:13:05.514978Z",
      "url": "https://files.pythonhosted.org/packages/35/ad/c7785fc2b53e6e4eb3ffa90a54c9a0c0c63785b9b7be0c64b49c3d092cfe/networth-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82cbb57411f9f9ab6816e830646b362b516cc0c2525392d4eca6102bf436c77f",
        "md5": "e37eebbfb43c899ee5c55b4114881a98",
        "sha256": "3ce359901bee752e525a5772ec2d382db94e3f20f53b7fad4a6d9f6746e748d4"
      },
      "downloads": -1,
      "filename": "networth-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e37eebbfb43c899ee5c55b4114881a98",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 21870,
      "upload_time": "2021-03-12T02:13:07",
      "upload_time_iso_8601": "2021-03-12T02:13:07.061020Z",
      "url": "https://files.pythonhosted.org/packages/82/cb/b57411f9f9ab6816e830646b362b516cc0c2525392d4eca6102bf436c77f/networth-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}