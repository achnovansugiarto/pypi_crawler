{
  "info": {
    "author": "Ivan Sincek",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Forbidden\n\nBypass 4xx HTTP response status codes and more. Based on PycURL.\n\nScript uses multithreading and is based on brute forcing, so it might have some false positive results. Script has colored output.\n\nResults will be sorted by HTTP response status code ascending, content length descending, and ID ascending.\n\nTo manually filter out false positive results, for each unique content length, run the provided `cURL` command and check the response. If it does not result in bypass, just ignore all the results with the same content length.\n\n| Test | Scope |\n| --- | --- |\n| HTTP methods - w/ both HTTP and HTTPS requests, and 'Content-Length: 0' header | methods |\n| Cross-site tracing (XST) w/ HTTP TRACE and TRACK methods | methods |\n| \\[Text\\] file upload w/ HTTP PUT method | methods |\n| HTTP method overrides - w/ HTTP headers, and URL parameters | method-overrides |\n| URL scheme overrides | scheme-overrides |\n| Port overrides | port-overrides |\n| Information disclosure w/ 'Accept' header | headers |\n| HTTP headers | headers |\n| URL overrides - w/ accessible path, ~~and double 'Host' header~~ | headers |\n| URL path bypasses | paths |\n| URL transformations and encodings | encodings |\n| Basic and bearer authentication - w/ null session, and invalid tokens | auths |\n| Open redirects and server-side request forgery (SSRF) - HTTP headers only | redirects |\n| Broken URL parsers | parsers |\n\n---\n\nCheck the stress testing script [here](https://github.com/ivan-sincek/forbidden/blob/main/src/stresser/stresser.py). Inspired by this [write-up](https://amineaboud.medium.com/story-of-a-weird-vulnerability-i-found-on-facebook-fc0875eb5125).\n\nExtend the scripts to your liking.\n\nGood sources of HTTP headers:\n\n* [Common HTTP Response Headers](https://webtechsurvey.com/common-response-headers)\n\nTested on Kali Linux v2023.1 (64-bit).\n\nMade for educational purposes. I hope it will help!\n\n---\n\n**Remarks:**\n\n* some websites might require a valid or very specific 'User-Agent' HTTP request header,\n* beware of `rate limiting` and other similar protections, take some time before you run the script again on the same domain,\n* some web proxies might modify some HTTP requests (e.g. the ones in the `encoding` scope),\n* connection timeout is set to `90` seconds, and response timeout is set to `180` seconds,\n* average runtime for all tests on a single thread is `12` minutes; optimal no. of threads is `5`,\n* `length` attribute in results includes only HTTP response body length,\n* cross-site tracing (XST) is `no more` considered to be a vulnerability,\n* both cURL and Python Request `no longer support double headers` and there is no known bug to exploit it.\n\n**High priority plans:**\n\n* more path bypasses,\n* add option to wait/sleep between requests on a single thread,\n* scope tests to only allowed HTTP methods (fetched with HTTP OPTIONS method),\n* do not ignore URL parameters and fragments,\n* add option to ignore multiple texts.\n\n**Low priority plans:**\n\n* Log4j support,\n* table output to make results more readable and take less space,\n* add option to test custom HTTP header-value pairs for a list of domains/subdomains.\n\n## Table of Contents\n\n* [How to Install](#how-to-install)\n* [How to Build and Install Manually](#how-to-build-and-install-manually)\n* [Automation](#automation)\n* [HTTP Methods](#http-methods)\n* [HTTP Headers](#http-headers)\n* [URL Paths](#url-paths)\n* [Results Format](#results-format)\n* [Usage](#usage)\n\n## How to Install\n\n```bash\napt-get install -y libcurl4-gnutls-dev librtmp-dev\n\npip3 install forbidden\n\npip3 install --upgrade forbidden\n```\n\n## How to Build and Install Manually\n\nRun the following commands:\n\n```bash\napt-get -y install libcurl4-gnutls-dev librtmp-dev\n\ngit clone https://github.com/ivan-sincek/forbidden && cd forbidden\n\npython3 -m pip install --upgrade build\n\npython3 -m build\n\npython3 -m pip install dist/forbidden-9.2-py3-none-any.whl\n```\n\n## Automation\n\nBypass `403 Forbidden` HTTP response status code:\n\n```bash\ncount=0; for subdomain in $(cat subdomains_403.txt); do count=$((count+1)); echo \"#${count} | ${subdomain}\"; forbidden -u \"${subdomain}\" -t methods,method-overrides,scheme-overrides,port-overrides,headers,paths,encodings -f GET -l base,path -o \"forbidden_403_results_${count}.json\"; done\n```\n\nBypass `403 Forbidden` HTTP response status code with stress testing:\n\n```bash\ncount=0; for subdomain in $(cat subdomains_403.txt); do count=$((count+1)); echo \"#${count} | ${subdomain}\"; stresser -u \"${subdomain}\" -dir \"stresser_403_results_${count}\" -r 1000 -th 200 -f GET -l base -o \"stresser_403_results_${count}.json\"; done\n```\n\nBypass `401 Unauthorized` HTTP response status code:\n\n```bash\ncount=0; for subdomain in $(cat subdomains_401.txt); do count=$((count+1)); echo \"#${count} | ${subdomain}\"; forbidden -u \"${subdomain}\" -t auths -f GET -l base -o \"forbidden_401_results_${count}.json\"; done\n```\n\nScan for open redirects and server-side request forgery (SSRF):\n\n```bash\ncount=0; for subdomain in $(cat subdomains_live_long.txt); do count=$((count+1)); echo \"#${count} | ${subdomain}\"; forbidden -u \"${subdomain}\" -t redirects -f GET -l base -e xyz.interact.sh -o \"forbidden_redirect_results_${count}.json\"; done\n```\n\nScan for broken URL parsers:\n\n```bash\ncount=0; for subdomain in $(cat subdomains_live_long.txt); do count=$((count+1)); echo \"#${count} | ${subdomain}\"; forbidden -u \"${subdomain}\" -t parsers -f GET -l base -e xyz.interact.sh -o \"forbidden_parser_results_${count}.json\"; done\n```\n\n# HTTP Methods\n\n```fundamental\nACL\nARBITRARY\nBASELINE-CONTROL\nBIND\nCHECKIN\nCHECKOUT\nCONNECT\nCOPY\nGET\nHEAD\nINDEX\nLABEL\nLINK\nLOCK\nMERGE\nMKACTIVITY\nMKCALENDAR\nMKCOL\nMKREDIRECTREF\nMKWORKSPACE\nMOVE\nOPTIONS\nORDERPATCH\nPATCH\nPOST\nPRI\nPROPFIND\nPROPPATCH\nPUT\nREBIND\nREPORT\nSEARCH\nSHOWMETHOD\nSPACEJUMP\nTEXTSEARCH\nTRACE\nTRACK\nUNBIND\nUNCHECKOUT\nUNLINK\nUNLOCK\nUPDATE\nUPDATEREDIRECTREF\nVERSION-CONTROL\n```\n\n# HTTP Headers\n\nMethod overrides:\n\n```fundamental\nX-HTTP-Method\nX-HTTP-Method-Override\nX-Method-Override\n```\n\nScheme overrides:\n\n```fundamental\nFront-End-HTTPS\nX-Forwarded-Proto\nX-Forwarded-Protocol\nX-Forwarded-Scheme\nX-Forwarded-SSL\nX-URL-Scheme\nX-URLSCHEME\n```\n\nPort overrides:\n\n```fundamental\nX-Forwarded-Port\n```\n\nDefault:\n\n```fundamental\nBase-URL\nCF-Connecting-IP\nClient-IP\nCluster-Client-IP\nConnection\nContact\nDestination\nForwarded\nForwarded-For\nForwarded-For-IP\nFrom\nHost\nOrigin\nProfile\nProxy\nRedirect\nReferer\nRequest-URI\nStuff\nTrue-Client-IP\nURI\nURL\nX-Client-IP\nX-Custom-IP-Authorization\nX-Forward\nX-Forwarded\nX-Forwarded-By\nX-Forwarded-For\nX-Forwarded-For-Original\nX-Forwarded-Host\nX-Forwarded-Server\nX-Forward-For\nX-Host\nX-Host-Override\nX-HTTP-DestinationURL\nX-HTTP-Host-Override\nX-Originally-Forwarded-For\nX-Original-Remote-Addr\nX-Original-URL\nX-Originating-IP\nX-Override-URL\nX-Proxy-URL\nX-ProxyUser-IP\nX-Real-IP\nX-Referer\nX-Remote-Addr\nX-Remote-IP\nX-Rewrite-URL\nX-Server-IP\nX-Wap-Profile\n```\n\n# URL Paths\n\nInject at the beginning, end, and both beginning and end of URL path. All combinations.\n\n```fundamental\n/\n//\n%09\n%20\n%23\n%2e\n*\n.\n..\n;\n.;\n..;\n;foo=bar;\n```\n\nInject at the end of URL path.\n\n```fundamental\n#\n##\n##random\n*\n**\n**random\n.\n..\n..random\n?\n??\n??random\n~\n~~\n~~random\n```\n\nInject at the end of URL path, but only if URL path does not end with '/'.\n\n```fundamental\n.asp\n.aspx\n.esp\n.html\n.jhtml\n.json\n.jsp\n.jspa\n.jspx\n.php\n.sht\n.shtml\n.xhtml\n```\n\n## Results Format\n\n```json\n[\n   {\n      \"id\":\"570-HEADERS-2\",\n      \"url\":\"https://example.com:443/admin\",\n      \"method\":\"GET\",\n      \"headers\":[\n         \"Host: 127.0.0.1\"\n      ],\n      \"body\":null,\n      \"agent\":\"Forbidden/9.2\",\n      \"command\":\"curl --connect-timeout 90 -m 180 -iskL --max-redirs 10 --path-as-is -H 'Host: 127.0.0.1' -H 'User-Agent: Forbidden/9.2' -X 'GET' 'https://example.com:443/admin'\",\n      \"code\":200,\n      \"length\":255408\n   },\n   {\n      \"id\":\"571-HEADERS-2\",\n      \"url\":\"https://example.com:443/admin\",\n      \"method\":\"GET\",\n      \"headers\":[\n         \"Host: 127.0.0.1:443\"\n      ],\n      \"body\":null,\n      \"agent\":\"Forbidden/9.2\",\n      \"command\":\"curl --connect-timeout 90 -m 180 -iskL --max-redirs 10 --path-as-is -H 'Host: 127.0.0.1:443' -H 'User-Agent: Forbidden/9.2' -X 'GET' 'https://example.com:443/admin'\",\n      \"code\":200,\n      \"length\":255408\n   }\n]\n```\n\n## Usage\n\n```fundamental\nForbidden v9.2 ( github.com/ivan-sincek/forbidden )\n\nUsage:   forbidden -u url                       -t tests [-f force] [-v values    ] [-p path            ] [-o out         ]\nExample: forbidden -u https://example.com/admin -t all   [-f GET  ] [-v values.txt] [-p /home/index.html] [-o results.json]\n\nDESCRIPTION\n    Bypass 4xx HTTP response status codes and more\nURL\n    Inaccessible or forbidden URL\n    Parameters and fragments are ignored\n    -u <url> - https://example.com/admin | etc.\nTESTS\n    Tests to run\n    Use comma separated values\n    -t <tests> - methods | [method|scheme|port]-overrides | headers | paths | encodings | auths | redirects | parsers | all\nFORCE\n    Force an HTTP method for nonspecific test cases\n    -f <force> - GET | POST | CUSTOM | etc.\nVALUES\n    File with additional HTTP header values such as internal IPs, etc.\n    Spacing will be stripped, empty lines ignored, and duplicates removed\n    Scope: headers\n    -v <values> - values.txt | etc.\nPATH\n    Accessible URL path to test URL overrides\n    Scope: headers\n    Default: /robots.txt\n    -p <path> - /home/index.html | /README.txt | etc.\nEVIL\n    Specify (strictly) evil domain name with no port to test URL overrides\n    Scope: headers | redirects\n    Default: github.com\n    -e <evil> - xyz.interact.sh | xyz.burpcollaborator.net | etc.\nIGNORE\n    Filter out 200 OK false positive results by text\n    Spacing will be stripped\n    -i <ignore> - Forbidden | \"Access Denied\" | etc.\nLENGTHS\n    Filter out 200 OK false positive results by content lengths\n    Specify 'base' to ignore content length of base HTTP response\n    Specify 'path' to ignore content length of accessible URL response\n    Use comma separated values\n    -l <lengths> - 12 | base | path | etc.\nTHREADS\n    Number of parallel threads to run\n    More threads make it quicker but can give worse results\n    Heavily depends on network bandwidth and server capacity\n    Default: 5\n    -th <threads> - 200 | etc.\nAGENT\n    User agent to use\n    Default: Forbidden/9.2\n    -a <agent> - curl/3.30.1 | random[-all] | etc.\nPROXY\n    Web proxy to use\n    -x <proxy> - 127.0.0.1:8080 | etc.\nOUT\n    Output file\n    -o <out> - results.json | etc.\n```\n\n```fundamental\nStresser v4.2 ( github.com/ivan-sincek/forbidden )\n\nUsage:   stresser -u url                        -dir directory -r repeat -th threads [-f force] [-o out         ]\nExample: stresser -u https://example.com/secret -dir results   -r 1000   -th 200     [-f GET  ] [-o results.json]\n\nDESCRIPTION\n    Bypass 4xx HTTP response status codes with stress testing\nURL\n    Inaccessible or forbidden URL\n    Parameters and fragments are ignored\n    -u <url> - https://example.com/secret | etc.\nDIRECTORY\n    Output directory\n    All valid and unique HTTP responses will be saved in this directory\n    -dir <directory> - results | etc.\nREPEAT\n    Number of HTTP requests to send for each test case\n    -r <repeat> - 1000 | etc.\nTHREADS\n    Number of parallel threads to run\n    -th <threads> - 200 | etc.\nFORCE\n    Force an HTTP method for nonspecific test cases\n    -f <force> - GET | POST | CUSTOM | etc.\nIGNORE\n    Filter out 200 OK false positive results by text\n    Spacing will be stripped\n    -i <ignore> - Forbidden | \"Access Denied\" | etc.\nLENGTHS\n    Filter out 200 OK false positive results by content lengths\n    Specify 'base' to ignore content length of base HTTP response\n    Use comma separated values\n    -l <lengths> - 12 | base | etc.\nAGENT\n    User agent to use\n    Default: Stresser/4.2\n    -a <agent> - curl/3.30.1 | random[-all] | etc.\nPROXY\n    Web proxy to use\n    -x <proxy> - 127.0.0.1:8080 | etc.\nOUT\n    Output file\n    -o <out> - results.json | etc.\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "forbidden",
    "package_url": "https://pypi.org/project/forbidden/",
    "platform": null,
    "project_url": "https://pypi.org/project/forbidden/",
    "project_urls": {
      "Homepage": "https://github.com/ivan-sincek/forbidden"
    },
    "release_url": "https://pypi.org/project/forbidden/9.2/",
    "requires_dist": [
      "datetime (>=5.0)",
      "requests (>=2.10.0)",
      "pycurl (>=7.45.1)",
      "termcolor (>=1.1.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Bypass 4xx HTTP response status codes and more.",
    "version": "9.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17352956,
  "releases": {
    "9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b29b6041e6ec5e1f041037767ad185cad54cdce470a624cd59e3d1412f22e7c8",
          "md5": "a9cac527d881c02a30bdec7dcd9a295c",
          "sha256": "d0f7a89e8e376c269470b9821ea178ae1395bbc2e559ad7c38b6752821149561"
        },
        "downloads": -1,
        "filename": "forbidden-9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9cac527d881c02a30bdec7dcd9a295c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 26346,
        "upload_time": "2023-03-19T11:54:06",
        "upload_time_iso_8601": "2023-03-19T11:54:06.469278Z",
        "url": "https://files.pythonhosted.org/packages/b2/9b/6041e6ec5e1f041037767ad185cad54cdce470a624cd59e3d1412f22e7c8/forbidden-9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f90d8b2938c6710cab3be8c2a42ff5bf3fac6d34abe4d80648ebfb58f21a7355",
          "md5": "066ae695a090f620d6c7f67eb08c1f38",
          "sha256": "19b9e74603a3870dc25ef912e8e1547c337a9c159c6cc2cac92f7cb4f01e68f7"
        },
        "downloads": -1,
        "filename": "forbidden-9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "066ae695a090f620d6c7f67eb08c1f38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29883,
        "upload_time": "2023-03-19T11:54:09",
        "upload_time_iso_8601": "2023-03-19T11:54:09.031617Z",
        "url": "https://files.pythonhosted.org/packages/f9/0d/8b2938c6710cab3be8c2a42ff5bf3fac6d34abe4d80648ebfb58f21a7355/forbidden-9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b29b6041e6ec5e1f041037767ad185cad54cdce470a624cd59e3d1412f22e7c8",
        "md5": "a9cac527d881c02a30bdec7dcd9a295c",
        "sha256": "d0f7a89e8e376c269470b9821ea178ae1395bbc2e559ad7c38b6752821149561"
      },
      "downloads": -1,
      "filename": "forbidden-9.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a9cac527d881c02a30bdec7dcd9a295c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 26346,
      "upload_time": "2023-03-19T11:54:06",
      "upload_time_iso_8601": "2023-03-19T11:54:06.469278Z",
      "url": "https://files.pythonhosted.org/packages/b2/9b/6041e6ec5e1f041037767ad185cad54cdce470a624cd59e3d1412f22e7c8/forbidden-9.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f90d8b2938c6710cab3be8c2a42ff5bf3fac6d34abe4d80648ebfb58f21a7355",
        "md5": "066ae695a090f620d6c7f67eb08c1f38",
        "sha256": "19b9e74603a3870dc25ef912e8e1547c337a9c159c6cc2cac92f7cb4f01e68f7"
      },
      "downloads": -1,
      "filename": "forbidden-9.2.tar.gz",
      "has_sig": false,
      "md5_digest": "066ae695a090f620d6c7f67eb08c1f38",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 29883,
      "upload_time": "2023-03-19T11:54:09",
      "upload_time_iso_8601": "2023-03-19T11:54:09.031617Z",
      "url": "https://files.pythonhosted.org/packages/f9/0d/8b2938c6710cab3be8c2a42ff5bf3fac6d34abe4d80648ebfb58f21a7355/forbidden-9.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}