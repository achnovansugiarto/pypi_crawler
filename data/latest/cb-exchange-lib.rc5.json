{
  "info": {
    "author": "Claudiu DRUG",
    "author_email": "claudiu.drug@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# cb-exchange-lib\r\n\r\nCoinbase Exchange API client library.\r\n\r\n---\r\n\r\n### Installation:\r\n\r\n```commandline\r\npython -m pip install [--upgrade] cb-exchange-lib\r\n```\r\n\r\n---\r\n\r\n### Endpoints:\r\n\r\n> ### Info:\r\n> Private endpoints require authentication using your Coinbase Exchange API key.\r\n> You can generate API keys [here](https://exchange.coinbase.com/profile/api).\r\n\r\n#### Private:\r\n* Accounts\r\n* AddressBook\r\n* CoinbaseAccounts\r\n* Conversions\r\n* Deposits\r\n* PaymentMethods\r\n* Transfers\r\n* Withdrawals\r\n* Fees\r\n* Fills\r\n* Orders\r\n* Oracle\r\n* Profiles\r\n* Reports\r\n* Users\r\n\r\n#### Public:\r\n* Time\r\n* Currencies\r\n* Products\r\n* WrappedAssets\r\n\r\n**Any endpoint can take these keyword arguments:**\r\n* `environment`: str - The API environment: `production` or `sandbox` (defaults to: `production`);\r\n* `retries`: int - Total number of retries to allow (defaults to: `3`);\r\n* `backoff`: int - A backoff factor to apply between attempts after the second try (defaults to: `1`);\r\n* `timeout`: int - How long to wait for the server to send data before giving up (defaults to: `30`);\r\n* `cache`: bool - Use caching (defaults to: `True`);\r\n* `debug`: bool - Set to True to log all requests/responses to/from server (defaults to: `False`);\r\n* `logger`: Logger - The handler to be used for logging. If given, and level is above `DEBUG`,\r\n  all debug messages will be ignored.\r\n\r\n**For private endpoints only:**\r\n* `key`: str - The API key;\r\n* `passphrase`: str - The API passphrase;\r\n* `secret`: str - The API secret.\r\n\r\n**Any of the endpoints can be instantiated or used as a context-manager:**\r\n```python\r\nfrom cb_exchange_lib import Time, Accounts\r\n\r\nenvironment: str = \"sandbox\"\r\ncredentials: dict = {\r\n    \"key\": \"your key\",\r\n    \"passphrase\": \"your passphrase\",\r\n    \"secret\": \"your secret\",\r\n}  # be careful where you keep your credentials!\r\n\r\n\r\nif __name__ == '__main__':\r\n\r\n    print(\"*\" * 80)\r\n\r\n    endpoint = Accounts(**credentials, environment=environment)\r\n    accounts = endpoint.get_accounts()\r\n\r\n    for account in accounts:\r\n        print(account)\r\n\r\n    endpoint.close()\r\n\r\n    # or\r\n\r\n    with Time(environment=environment) as endpoint:\r\n\r\n        print(\"*\" * 80)\r\n        time = endpoint.get_time()\r\n        print(time)\r\n```\r\n\r\n---\r\n\r\n### Resources:\r\n\r\nFor each mapped resource you must read the [documentation](https://docs.cloud.coinbase.com/exchange).\r\nAll the parameters these resources can take are described in the official documentation.\r\n\r\n<details>\r\n<summary>Time</summary>\r\n<p>\r\n\r\n* [get_time()](https://api.exchange.coinbase.com/time)\r\n\r\n  Get the API server time.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Accounts</summary>\r\n<p>\r\n\r\n* [get_accounts()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getaccounts)\r\n\r\n  Get a list of trading accounts from the profile of the API key.\r\n\r\n\r\n* [get_account()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getaccount)\r\n\r\n  Information for a single account. Use this endpoint when you know the account_id. API key must belong to the same\r\n  profile as the account.\r\n\r\n\r\n* [get_account_holds()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getaccountholds)\r\n\r\n  List the holds of an account that belong to the same profile as the API key. Holds are placed on an account for any\r\n  active orders or pending withdraw requests. As an order is filled, the hold amount is updated. If an order is\r\n  canceled, any remaining hold is removed. For withdrawals, the hold is removed after it is completed.\r\n\r\n\r\n* [get_account_ledger()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getaccountledger)\r\n\r\n  Lists ledger activity for an account. This includes anything that would affect the accounts balance - transfers,\r\n  trades, fees, etc. List account activity of the API key's profile. Account activity either increases or decreases\r\n  your account balance.\r\n\r\n\r\n* [get_account_transfers()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getaccounttransfers)\r\n\r\n  Lists past withdrawals and deposits for an account.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>AddressBook</summary>\r\n<p>\r\n\r\n* [get_addresses()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getaddressbook)\r\n\r\n  Get all addresses stored in the address book.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>CoinbaseAccounts</summary>\r\n<p>\r\n\r\n* [get_wallets()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getcoinbaseaccounts)\r\n\r\n  Gets all the user's available Coinbase wallets (These are the wallets/accounts that are used for buying and selling\r\n  on www.coinbase.com)\r\n\r\n\r\n* [generate_crypto_address()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_postcoinbaseaccountaddresses)\r\n\r\n  Generates a one-time crypto address for depositing crypto.\r\n\r\n  > #### Info:\r\n  >\r\n  > You can generate an address for crypto deposits.\r\n  > See the [Coinbase Accounts](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getcoinbaseaccounts)\r\n  > section for information on how to retrieve your coinbase account ID.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Conversions</summary>\r\n<p>\r\n\r\n* [convert_currency()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_postconversion)\r\n\r\n  Converts funds from `from` currency to `to` currency. Funds are converted on the `from` account in the `profile_id`\r\n  profile.\r\n\r\n  > #### Caution:\r\n  > Users whose USD and USDC accounts are unified do not have access to the conversion endpoint, and conversions from\r\n  > USDC to USD are automatic upon deposit.\r\n\r\n\r\n* [get_conversion()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getconversion)\r\n\r\n  Gets a currency conversion by id (i.e. `41554f00-5c34-4f09-b800-2a878e52f2ea`).\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Currencies</summary>\r\n<p>\r\n\r\n* [get_currencies()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getcurrencies)\r\n\r\n  Gets a list of all known currencies.\r\n\r\n  > #### Note:\r\n  > Not all currencies may be currently in use for trading.\r\n\r\n\r\n* [get_currency()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getcurrency)\r\n\r\n  Gets a single currency by id.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Deposits</summary>\r\n<p>\r\n\r\n* [deposit_from_coinbase_account()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_postdepositcoinbaseaccount)\r\n\r\n  Deposits funds from a www.coinbase.com wallet to the specified `profile_id`.\r\n\r\n\r\n* [deposit_from_payment_method()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_postdepositpaymentmethod)\r\n\r\n  Deposits funds from a linked external payment method to the specified `profile_id`.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>PaymentMethods</summary>\r\n<p>\r\n\r\n* [get_payment_methods()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getpaymentmethods)\r\n\r\n  Gets a list of the user's linked payment methods.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Transfers</summary>\r\n<p>\r\n\r\n* [get_transfers()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_gettransfers)\r\n\r\n  Gets a list of in-progress and completed transfers of funds in/out of any of the user's accounts.\r\n\r\n\r\n* [get_transfer()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_gettransfer)\r\n\r\n  Get information on a single transfer.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Withdrawals</summary>\r\n<p>\r\n\r\n* [withdraw_to_coinbase_account()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_postwithdrawcoinbaseaccount)\r\n\r\n  Withdraws funds from the specified `profile_id` to a www.coinbase.com wallet.\r\n\r\n\r\n* [withdraw_to_crypto_address()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_postwithdrawcrypto)\r\n\r\n  Withdraws funds from the specified `profile_id` to an external crypto address\r\n\r\n\r\n* [get_fee_estimate()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getwithdrawfeeestimate)\r\n\r\n  Gets the fee estimate for the crypto withdrawal to crypto address\r\n\r\n\r\n* [withdraw_to_payment_method()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_postwithdrawpaymentmethod)\r\n\r\n  Withdraws funds from the specified `profile_id` to a linked external payment method\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Fees</summary>\r\n<p>\r\n\r\n* [get_fees()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getfees)\r\n\r\n  Get fees rates and 30 days trailing volume. This request returns your current maker & taker fee rates, as well as\r\n  your 30-day trailing volume. Quoted rates are subject to change. For more information, see What are the fees on\r\n  Coinbase Pro?.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Fills</summary>\r\n<p>\r\n\r\n* [get_fills()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getfills)\r\n\r\n  Get a list of fills. A fill is a partial or complete match on a specific order. Get a list of recent fills of the\r\n  API key's profile.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Orders</summary>\r\n<p>\r\n\r\n* [get_orders()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getorders)\r\n\r\n  List your current open orders. Only open or un-settled orders are returned by default. As soon as an order is no\r\n  longer open and settled, it will no longer appear in the default request. Open orders may change state between the\r\n  request and the response depending on market conditions.\r\n\r\n\r\n* [del_orders()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_deleteorders)\r\n\r\n  With best effort, cancel all open orders. This may require you to make the request multiple times until all of the\r\n  open orders are deleted.\r\n\r\n\r\n* [create_order()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_postorders)\r\n\r\n  Create an order. You can place two types of orders: limit and market. Orders can only be placed if your account has\r\n  sufficient funds. Once an order is placed, your account funds will be put on hold for the duration of the order.\r\n  How much and which funds are put on hold depends on the order type and parameters specified.\r\n\r\n  > #### Caution:\r\n  > Each profile can place a maximum of 500 open orders on a product. Once reached, the profile cannot place any new\r\n  > orders until the total number of open orders is below 500.\r\n\r\n\r\n* [get_order()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getorder)\r\n\r\n  Get a single order by `order_id`.\r\n\r\n\r\n* [del_order()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_deleteorder)\r\n\r\n  Cancel a single open order by `order_id`.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Oracle</summary>\r\n<p>\r\n\r\n* [get_signed_prices()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getcoinbasepriceoracle)\r\n\r\n  Get cryptographically signed prices ready to be posted on-chain using Compound's Open Oracle smart contract.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Products</summary>\r\n<p>\r\n\r\n* [get_products()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getproducts)\r\n\r\n  Gets a list of available currency pairs for trading.\r\n\r\n\r\n* [get_product()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getproduct)\r\n\r\n  Get information on a single product.\r\n\r\n\r\n* [get_product_book()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getproductbook)\r\n\r\n  Get a list of open orders for a product. The amount of detail shown can be customized with the `level` parameter.\r\n\r\n\r\n* [get_product_candles()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getproductcandles)\r\n\r\n  Historic rates for a product. Rates are returned in grouped buckets. Candle schema is of the form:\r\n  `[timestamp, price_low, price_high, price_open, price_close]`\r\n\r\n  > #### Info:\r\n  > Historical rate data may be incomplete. No data is published for intervals where there are no ticks.\r\n  > Historical rates should not be polled frequently. If you need real-time information, use the trade and book\r\n  > endpoints along with the WebSocket feed.\r\n\r\n\r\n* [get_product_stats()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getproductstats)\r\n\r\n  Gets 30day and 24hour stats for a product.\r\n\r\n  > #### Info:\r\n  > The volume property is in base currency units. Properties open, high, low are in quote currency units.\r\n\r\n\r\n* [get_product_ticker()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getproductticker)\r\n\r\n  Gets snapshot information about the last trade (tick), best bid/ask and 24h volume.\r\n\r\n  > #### Real-time updates:\r\n  > Coinbase recommends that you get real-time updates by connecting with the WebSocket stream and listening for match\r\n  > messages, rather than polling.\r\n\r\n\r\n* [get_product_trades()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getproducttrades)\r\n\r\n  Gets a list the latest trades for a product.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Profiles</summary>\r\n<p>\r\n\r\n* [get_profiles()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getprofiles)\r\n\r\n  Gets a list of all of the current user's profiles.\r\n\r\n\r\n* [create_profile()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_postprofile)\r\n\r\n  Create a new profile. Will fail if no name is provided or if user already has max number of profiles.\r\n\r\n\r\n* [transfer_funds()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_postprofiletransfer)\r\n\r\n  Transfer an amount of currency from one profile to another.\r\n\r\n\r\n* [get_profile()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getprofile)\r\n\r\n  Information for a single profile. Use this endpoint when you know the `profile_id`.\r\n\r\n\r\n* [rename_profile()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_putprofile)\r\n\r\n  Rename a profile. Names 'default' and 'margin' are reserved.\r\n\r\n\r\n* [del_profile()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_putprofiledeactivate)\r\n\r\n  Deletes the profile specified by `profile_id` and transfers all funds to the profile specified by `to`. Fails if\r\n  there are any open orders on the profile to be deleted.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Reports</summary>\r\n<p>\r\n\r\n* [get_reports()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getreports)\r\n\r\n  Gets a list of all user generated reports.\r\n\r\n  > #### Info:\r\n  > Once a report request has been accepted for processing, you can poll the report resource endpoint at\r\n  > `/reports/{report_id}` for its status. When status is ready, the final report is uploaded and available at\r\n  > `file_url`.\r\n\r\n\r\n* [create_report()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_postreports)\r\n\r\n  Generates a report. You can create reports with historical data for all report types. Balance reports can be\r\n  snapshots of historical or current data. Reports provide batches of historic information about your profile in\r\n  various human and machine readable forms.\r\n\r\n  > #### Info:\r\n  > A report is generated when resources are available. You can poll the report resource endpoint at\r\n  > `/reports/{report_id}` for its status. When status is ready, the final report is uploaded and available at\r\n  > `file_url`.\r\n\r\n\r\n* [get_report()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getreport)\r\n\r\n  Get a specific report by report_id.\r\n\r\n  > #### Info:\r\n  > Once a report request has been accepted for processing, you can poll the report resource endpoint at\r\n  > `/reports/{report_id}` for its status. When status is ready, the final report is uploaded and available at\r\n  > `file_url`.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>Users</summary>\r\n<p>\r\n\r\n* [get_exchange_limits()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getuserexchangelimits)\r\n\r\n  Gets exchange limits information for a single user.\r\n\r\n  > #### Info:\r\n  > This request returns information on your payment method transfer limits, as well as buy/sell limits per currency.\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>WrappedAssets</summary>\r\n<p>\r\n\r\n* [get_assets()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getwrappedassets)\r\n\r\n  Returns a list of all supported wrapped assets details objects.\r\n\r\n\r\n* [get_asset_details()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getwrappedasset)\r\n\r\n  Returns the circulating and total supply of a wrapped asset, and its conversion rate.\r\n\r\n\r\n* [get_asset_conversion_rate()](https://docs.cloud.coinbase.com/exchange/reference/exchangerestapi_getwrappedassetconversionrate)\r\n\r\n  Returns the conversion rate of a wrapped asset.\r\n\r\n</p>\r\n</details>\r\n\r\n---\r\n\r\n### Websocket clients:\r\n\r\n**Any of the websocket clients can take these keyword arguments:**\r\n* `channels`: The channels for subscription;\r\n* `product_ids`: The products IDs for subscription;\r\n* `environment`: The API environment: `production` or `sandbox` (defaults to: `production`);\r\n* `debug`: Set to True to log all requests/responses to/from server (defaults to: `False`);\r\n* `logger`: The handler to be used for logging; If given, and level is above `DEBUG`,\r\n  all debug messages will be ignored.\r\n\r\n> **Note:**\r\n> \r\n> For information about Websocket feed channels visit the\r\n> [documentation](https://docs.cloud.coinbase.com/exchange/docs/websocket-channels).\r\n\r\n**For `DirectMarketData` only:**\r\n* `key`: The API key;\r\n* `passphrase`: The API passphrase;\r\n* `secret`: The API secret;\r\n\r\n### Examples:\r\n\r\n<details>\r\n<summary>MarketData</summary>\r\n<p>\r\n\r\n```python\r\nfrom cb_exchange_lib import MarketData\r\n\r\nenvironment: str = \"sandbox\"\r\n\r\nif __name__ == '__main__':\r\n\r\n    client = MarketData(\r\n        environment=environment,\r\n        debug=True,\r\n        channels=[\"ticker\"],\r\n        product_ids=[\"BTC-USD\"],\r\n    )\r\n\r\n    client.listen()\r\n\r\n    try:\r\n        for item in client.queue:\r\n            print(item)\r\n    except KeyboardInterrupt:\r\n        client.close()\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n<details>\r\n<summary>DirectMarketData</summary>\r\n<p>\r\n\r\n```python\r\nfrom cb_exchange_lib import DirectMarketData\r\n\r\nenvironment: str = \"sandbox\"\r\n\r\ncredentials: dict = {\r\n    \"key\": \"your key\",\r\n    \"passphrase\": \"your passphrase\",\r\n    \"secret\": \"your secret\",\r\n}  # be careful where you keep your credentials!\r\n\r\n\r\nif __name__ == '__main__':\r\n\r\n    client = DirectMarketData(\r\n        **credentials,\r\n        environment=environment,\r\n        debug=True,\r\n        channels=[\r\n            {\r\n                \"name\": \"ticker\",\r\n                \"product_ids\": [\r\n                    \"BTC-USD\"\r\n                ]\r\n            }\r\n        ]\r\n    )\r\n    client.listen()\r\n\r\n    try:\r\n        for item in client.queue:\r\n            print(item)\r\n    except KeyboardInterrupt:\r\n        client.close()\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n---\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ClaudiuDrug/cb-exchange-lib",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cb-exchange-lib",
    "package_url": "https://pypi.org/project/cb-exchange-lib/",
    "platform": null,
    "project_url": "https://pypi.org/project/cb-exchange-lib/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ClaudiuDrug/cb-exchange-lib/issues",
      "Homepage": "https://github.com/ClaudiuDrug/cb-exchange-lib"
    },
    "release_url": "https://pypi.org/project/cb-exchange-lib/3.0.2/",
    "requires_dist": [
      "requests (>=2.28.2)",
      "requests-cache (>=1.0.0)",
      "requests-toolbelt (>=0.10.1)",
      "urllib3 (>=1.26.14)",
      "websocket-client (>=1.5.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "Coinbase Exchange API client library.",
    "version": "3.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17191058,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7efe77de79bfa02c7bc93958f5350e253290e3e89bc4f3996bcf528389070729",
          "md5": "2d5025f5a366e5437869ac56a99f6b8a",
          "sha256": "b06eb07dab75a84d7543578f91df704185b81b931754f83da360c5d173d3a6ff"
        },
        "downloads": -1,
        "filename": "cb_exchange_lib-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d5025f5a366e5437869ac56a99f6b8a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 27114,
        "upload_time": "2023-02-01T08:58:41",
        "upload_time_iso_8601": "2023-02-01T08:58:41.275336Z",
        "url": "https://files.pythonhosted.org/packages/7e/fe/77de79bfa02c7bc93958f5350e253290e3e89bc4f3996bcf528389070729/cb_exchange_lib-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "412d12993b99ccce355f859aaae32364f2f43da8929ee8799c8ce3286bad419e",
          "md5": "d5bae3945180792e57dbf581f90507f6",
          "sha256": "482d74a9e663d4a5b5e782fa1356d830a0e5fefa9468c8a687ac47b40f3e92e5"
        },
        "downloads": -1,
        "filename": "cb_exchange_lib-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d5bae3945180792e57dbf581f90507f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29919,
        "upload_time": "2023-02-01T08:58:43",
        "upload_time_iso_8601": "2023-02-01T08:58:43.125951Z",
        "url": "https://files.pythonhosted.org/packages/41/2d/12993b99ccce355f859aaae32364f2f43da8929ee8799c8ce3286bad419e/cb_exchange_lib-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab8dc1c403bf3861f30c9d833b214862f25e33d2644b663648e444787a596daf",
          "md5": "611aaf31625b5464f9fb58cc21bb0bf6",
          "sha256": "62e7a77d379c405f3279f8df01da52da6d97d8bca85421aa37812b77023438dd"
        },
        "downloads": -1,
        "filename": "cb_exchange_lib-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "611aaf31625b5464f9fb58cc21bb0bf6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 27058,
        "upload_time": "2023-02-01T23:31:21",
        "upload_time_iso_8601": "2023-02-01T23:31:21.718379Z",
        "url": "https://files.pythonhosted.org/packages/ab/8d/c1c403bf3861f30c9d833b214862f25e33d2644b663648e444787a596daf/cb_exchange_lib-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef1e44820935ae30615eb9d02ea3b812ebe4d01a2a7cfa922216d8e55e94993e",
          "md5": "d180ef8a24ff3619dc69c9f6e49c0bb9",
          "sha256": "f4db07ffd5978e4ff73c34de9aa7e7c3c74cadb2e289fa5499b727144352949c"
        },
        "downloads": -1,
        "filename": "cb_exchange_lib-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d180ef8a24ff3619dc69c9f6e49c0bb9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29880,
        "upload_time": "2023-02-01T23:31:23",
        "upload_time_iso_8601": "2023-02-01T23:31:23.722026Z",
        "url": "https://files.pythonhosted.org/packages/ef/1e/44820935ae30615eb9d02ea3b812ebe4d01a2a7cfa922216d8e55e94993e/cb_exchange_lib-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e44bb798916f59cf029b93e40e9cb66fc258d8fdc4194c4c06b62258b0652feb",
          "md5": "4f912c1c2774654115a9b32a25201621",
          "sha256": "df3f46c3c80511a0b2217fdfe14e1b1c1aa63159f8de5ac7760093c973def651"
        },
        "downloads": -1,
        "filename": "cb_exchange_lib-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f912c1c2774654115a9b32a25201621",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 27387,
        "upload_time": "2023-02-19T17:16:02",
        "upload_time_iso_8601": "2023-02-19T17:16:02.959604Z",
        "url": "https://files.pythonhosted.org/packages/e4/4b/b798916f59cf029b93e40e9cb66fc258d8fdc4194c4c06b62258b0652feb/cb_exchange_lib-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bb2491b6c0dbc9e5e4c1a1b7e5486396b7b51f523b45f1ccc8a79651f3dc022",
          "md5": "3a14317d7cd625ad70e3617e9a679d76",
          "sha256": "f0e75c483fcb5947c1a16125d447f69a1f6d6be6b0a23e5274a46dc46cc7415f"
        },
        "downloads": -1,
        "filename": "cb_exchange_lib-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3a14317d7cd625ad70e3617e9a679d76",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32244,
        "upload_time": "2023-02-19T17:16:05",
        "upload_time_iso_8601": "2023-02-19T17:16:05.003267Z",
        "url": "https://files.pythonhosted.org/packages/1b/b2/491b6c0dbc9e5e4c1a1b7e5486396b7b51f523b45f1ccc8a79651f3dc022/cb_exchange_lib-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "672b9a32ee8c27960a2d75f2ff8fcb1fb8b7d59cb5c680bb95588e563b78a75f",
          "md5": "ab68e20914df90908e4ceeade0e57eb0",
          "sha256": "ab9f790fe964849123641c93acd8c239f32c49430b52d1327b9c87fd860339d6"
        },
        "downloads": -1,
        "filename": "cb_exchange_lib-3.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab68e20914df90908e4ceeade0e57eb0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 27407,
        "upload_time": "2023-02-24T12:55:40",
        "upload_time_iso_8601": "2023-02-24T12:55:40.061308Z",
        "url": "https://files.pythonhosted.org/packages/67/2b/9a32ee8c27960a2d75f2ff8fcb1fb8b7d59cb5c680bb95588e563b78a75f/cb_exchange_lib-3.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dba9bf7adb86c90e5752ae913cf195cf73697c716cb744a762cf0ccd3ae89a5",
          "md5": "b26cca28b8a1f556395367b1b4eb929c",
          "sha256": "d3e6972349b62d6343834878fe8166c117cb1466864e61ab4667a4f6e7abbf39"
        },
        "downloads": -1,
        "filename": "cb_exchange_lib-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b26cca28b8a1f556395367b1b4eb929c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32295,
        "upload_time": "2023-02-24T12:55:46",
        "upload_time_iso_8601": "2023-02-24T12:55:46.681715Z",
        "url": "https://files.pythonhosted.org/packages/4d/ba/9bf7adb86c90e5752ae913cf195cf73697c716cb744a762cf0ccd3ae89a5/cb_exchange_lib-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9264edb97ba2ab09b927744c3e99bde5c1b39a51ac00f590b2ad5f85a74c476c",
          "md5": "766f44253a4ed4f46350cb07801b5a5a",
          "sha256": "6b94bf1d08b2f58be95a6fa716b3f26367dea803be8bce4c1fd4c0fe9d86c5a3"
        },
        "downloads": -1,
        "filename": "cb_exchange_lib-3.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "766f44253a4ed4f46350cb07801b5a5a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 27410,
        "upload_time": "2023-03-07T13:19:24",
        "upload_time_iso_8601": "2023-03-07T13:19:24.276023Z",
        "url": "https://files.pythonhosted.org/packages/92/64/edb97ba2ab09b927744c3e99bde5c1b39a51ac00f590b2ad5f85a74c476c/cb_exchange_lib-3.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37096a93427408ff66df8c253cb3ee464e1cb729ff8b59f23c6f7da4f40c9bb0",
          "md5": "6ead9e5959850f82f3e8d5555bae5155",
          "sha256": "011998ebca8b0e15fde190e73a94599ca6b9232cd0598dbc4ad2b6f8f138fe2d"
        },
        "downloads": -1,
        "filename": "cb_exchange_lib-3.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6ead9e5959850f82f3e8d5555bae5155",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32276,
        "upload_time": "2023-03-07T13:19:26",
        "upload_time_iso_8601": "2023-03-07T13:19:26.435409Z",
        "url": "https://files.pythonhosted.org/packages/37/09/6a93427408ff66df8c253cb3ee464e1cb729ff8b59f23c6f7da4f40c9bb0/cb_exchange_lib-3.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9264edb97ba2ab09b927744c3e99bde5c1b39a51ac00f590b2ad5f85a74c476c",
        "md5": "766f44253a4ed4f46350cb07801b5a5a",
        "sha256": "6b94bf1d08b2f58be95a6fa716b3f26367dea803be8bce4c1fd4c0fe9d86c5a3"
      },
      "downloads": -1,
      "filename": "cb_exchange_lib-3.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "766f44253a4ed4f46350cb07801b5a5a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 27410,
      "upload_time": "2023-03-07T13:19:24",
      "upload_time_iso_8601": "2023-03-07T13:19:24.276023Z",
      "url": "https://files.pythonhosted.org/packages/92/64/edb97ba2ab09b927744c3e99bde5c1b39a51ac00f590b2ad5f85a74c476c/cb_exchange_lib-3.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37096a93427408ff66df8c253cb3ee464e1cb729ff8b59f23c6f7da4f40c9bb0",
        "md5": "6ead9e5959850f82f3e8d5555bae5155",
        "sha256": "011998ebca8b0e15fde190e73a94599ca6b9232cd0598dbc4ad2b6f8f138fe2d"
      },
      "downloads": -1,
      "filename": "cb_exchange_lib-3.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6ead9e5959850f82f3e8d5555bae5155",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 32276,
      "upload_time": "2023-03-07T13:19:26",
      "upload_time_iso_8601": "2023-03-07T13:19:26.435409Z",
      "url": "https://files.pythonhosted.org/packages/37/09/6a93427408ff66df8c253cb3ee464e1cb729ff8b59f23c6f7da4f40c9bb0/cb_exchange_lib-3.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}