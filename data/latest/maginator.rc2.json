{
  "info": {
    "author": "Jakob Russel",
    "author_email": "russel2620@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![Project Status: Active - The project has reached a stable, usable state and is being actively developed.](http://www.repostatus.org/badges/latest/active.svg)](http://www.repostatus.org/#active)\n\n# MAGinator\n\nCombining the strengths of contig and gene based methods to provide:\n\n* Accurate abundances of species using de novo signature genes\n    * MAGinator uses a statistical model to find the best genes for calculating accurate abundances\n* SNV-level resolution phylogenetic trees based on signature genes\n    * MAGinator creates a phylogenetic tree for each species so you can associate your metadata with subspecies/strain level differences\n* Connect accessory genome to the species annotation by getting a taxonomic scope for gene clusters\n    * MAGinator clusters all ORFs into gene clusters and for each gene cluster you will know which taxonomic level it is specific to\n* Improve your functional annotation by grouping your genes in synteny clusters based on genomic adjacency\n    * MAGinator clusters gene clusters into synteny clusters - Syntenic genes are usually part of the same pathway or have similar functions \n\n## Installation\n\nAll you need for running MAGinator is snakemake and mamba. Other dependencies will be installed by snakemake automatically.\n\n```sh\nconda create -n maginator -c bioconda -c conda-forge snakemake mamba\nconda activate maginator\npip install maginator\n```\n\nFurthermore, MAGinator also needs the GTDB-tk database version R207_v2 downloaded. If you don't already have it, you can run the following:\n```sh\nwget https://data.gtdb.ecogenomic.org/releases/latest/auxillary_files/gtdbtk_v2_data.tar.gz\ntar xvzf gtdbtk_v2_data.tar.gz\n```\n\n## Usage\n\nMAGinator needs 3 input files:\n\n* The clusters.tsv files from [VAMB](https://github.com/RasmussenLab/vamb)\n* A fasta file with sequences of all contigs, with unique names\n* A comma-separated file giving the position of the fastq files with your sequencing reads formatted as: SampleName,PathToForwardReads,PathToReverseReads\n\nRun MAGinator:\n```sh\nmaginator -v vamb_clusters.tsv -r reads.csv -c contigs.fasta -o my_output -g \"/path/to/GTDB-Tk/database/release207_v2/\"\n```\n\n### Run on a compute cluster\nMAGinator can run on compute clusters using qsub (torque), sbatch (slurm), or drmaa structures. The --cluster argument toggles the type of compute cluster infrastructure. The --cluster_info argument toggles the information given to the submission command, and it has to contain the following keywords {cores}, {memory}, {runtime}, which are used to forward resource information to the cluster.\n\nA qsub MAGinator can for example be run with the following command (... indicates required arguments, see above):\n```sh\nmaginator ... --cluster qsub --cluster_info \"-l nodes=1:ppn={cores}:thinnode,mem={memory}gb,walltime={runtime}\"\n```\n\n## MAGinator workflow\n\nThis is what MAGinator does with your input (if you want to see all parameters run maginator --help):\n* Filter bins by size\n    * Use --binsize to control the cutoff\n* Run GTDB-tk to taxonomically annotate bins and call open reading frames (ORFs)\n* Group your VAMB clusters into metagenomic species (MGS) based on the taxonomic annotation. (Unannotated VAMB clusters are kept in the pipeline, but left unchanged)\n    * Use --no_mgs to disable this\n    * Use --annotation_prevalence to change how prevalent an annotation has to be in a VAMB cluster to call taxonomic consensus\n* Cluster your ORFs into gene clusters to get a non-redundant gene catalogue\n    * Use --clustering_min_seq_id to toggle the clustering identity\n    * Use --clustering_coverage to toggle the clustering coverage\n    * Use --clustering_type to toggle whether to cluster on amino acid or nucleotide level\n* Map reads to the non-redundant gene catalogue and create a matrix with gene counts for each sample\n* Pick non-redundant genes that are only found in one MGS each\n* Fit signature gene model and use the resulting signature genes to get the abundance of each MGS\n* Prepare for generation of phylogenies for each MGS by finding outgroups and marker genes which will be used for rooting the phylogenies\n* Use the read mappings to collect SNV information for each signature gene and marker gene for each sample\n* Align signature and marker genes, concatenate alignments and infer phylogenetic trees for each MGS\n    * Use --phylo to toggle whether use fasttree (fast, approximate) or iqtree (slow, precise) to infer phylogenies\n* Infer the taxonomic scope of each gene cluster. That is, at what taxonomic level are genes from a given gene cluster found in\n    * Use --tax_scope_threshold to toggle the threshold for how to find the taxonomic scope consensus\n* Cluster gene clusters into synteny clusters based on how often they are found adjacent on contigs\n\n\n## Output\n\n* abundance/\n    * abundance_phyloseq.RData - Phyloseq object for R, with abundance and taxonomic data\n* clusters/\n    * <cluster>/<bin>.fa - Fasta files with nucleotide sequence of bins\n* genes/\n    * all_genes.faa - Amino acid sequences of all ORFs\n    * all_genes.fna - Nucletotide sequences of all ORFs\n    * all_genes_nonredundant.fasta - Nucleotide sequences of gene cluster representatives\n    * all_genes_cluster.tsv - Gene clusters\n    * matrix/\n        * gene_count_matrix.tsv - Read count for each gene cluster for each sample\n    * synteny/ - Intermediate files for synteny clustering of gene clusters\n* gtdbtk/\n    * <cluster>/ - GTDB-tk taxonomic annotation for each VAMB cluster\n* logs/ - Log files\n* mapped_reads/\n    * bams/ - Bam files for mapping reads to gene clusters\n* phylo/\n    * alignments/ - Alignments for each signature gene\n    * cluster_alignments/ - Concatenated alignments for each MGS\n    * pileup/ - SNV information for each MGS and each sample\n    * trees/ - Phylogenetic trees for each MGS\n    * stats.tab - Mapping information such as non-N fraction, number of signature genes and marker genes, read depth, and number of bases not reaching allele frequency cutoff \n    * stats_genes.tab - Same as above but the information is split per gene\n* signature_genes/ - R data files with signature gene optimization\n* tabs/\n    * gene_cluster_bins.tab - Table listing which bins each gene cluster was found in\n    * gene_cluster_tax_scope.tab - Table listing the taxonomic scope of each gene cluster\n    * metagenomicspecies.tab - Table listing which, if any, clusters where merged in MGS and the taxonomy of those\n    * signature_genes_cluster.tsv - Table with the signature genes for each MGS/cluster\n    * synteny_clusters.tab - Table listing the synteny cluster association for the gene clusters. Gene clusters from the same synteny cluster are genomically adjacent.\n    * tax_matrix.tsv - Table with taxonomy information for MGS\n    \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Russel88/MAGinator",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "maginator",
    "package_url": "https://pypi.org/project/maginator/",
    "platform": null,
    "project_url": "https://pypi.org/project/maginator/",
    "project_urls": {
      "Homepage": "https://github.com/Russel88/MAGinator"
    },
    "release_url": "https://pypi.org/project/maginator/0.1.13/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "MAGinator: Abundance, strain, and functional profiling of MAGs",
    "version": "0.1.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16943458,
  "releases": {
    "0.1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3351ffee33c05503c602c0583f3968e3e63cde50489be8d9a80e43f0a17d4d29",
          "md5": "1b8f042f3c36254692ffa710b8614c3c",
          "sha256": "688516da4d23e1b44faf355c2bb805e5195eed063c86b7e5f24fffa3a3535523"
        },
        "downloads": -1,
        "filename": "maginator-0.1.13-py3.10.egg",
        "has_sig": false,
        "md5_digest": "1b8f042f3c36254692ffa710b8614c3c",
        "packagetype": "bdist_egg",
        "python_version": "0.1.13",
        "requires_python": ">=3.5",
        "size": 83394,
        "upload_time": "2023-02-20T13:42:19",
        "upload_time_iso_8601": "2023-02-20T13:42:19.417218Z",
        "url": "https://files.pythonhosted.org/packages/33/51/ffee33c05503c602c0583f3968e3e63cde50489be8d9a80e43f0a17d4d29/maginator-0.1.13-py3.10.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27d1d8b739151ffea3e1dec7103e89dd35113f0bf883897372ab3e92837495a7",
          "md5": "c2cd7b62000388c3369c324e643c3dbb",
          "sha256": "984d4f872ba4dad551a7e7a97d02bfe48d5ac6376365080c589a796d8b5bf35e"
        },
        "downloads": -1,
        "filename": "maginator-0.1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "c2cd7b62000388c3369c324e643c3dbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 43859,
        "upload_time": "2023-02-20T13:42:21",
        "upload_time_iso_8601": "2023-02-20T13:42:21.438170Z",
        "url": "https://files.pythonhosted.org/packages/27/d1/d8b739151ffea3e1dec7103e89dd35113f0bf883897372ab3e92837495a7/maginator-0.1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2810ecccd562aaffc3f6d204d7204aec58c58d9a9f6af3ade5cc175db4537a5b",
          "md5": "4f44e1b33929a716f3eedac64967b806",
          "sha256": "46a90a62224fc5f17bee30eb8ce404e922dca54796a58f580d23e1c5bfd653fb"
        },
        "downloads": -1,
        "filename": "maginator-0.1.8-py3.7.egg",
        "has_sig": false,
        "md5_digest": "4f44e1b33929a716f3eedac64967b806",
        "packagetype": "bdist_egg",
        "python_version": "0.1.8",
        "requires_python": ">=3.5",
        "size": 80855,
        "upload_time": "2022-12-15T11:16:25",
        "upload_time_iso_8601": "2022-12-15T11:16:25.251155Z",
        "url": "https://files.pythonhosted.org/packages/28/10/ecccd562aaffc3f6d204d7204aec58c58d9a9f6af3ade5cc175db4537a5b/maginator-0.1.8-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b20ee9f8fab4868fdbeac8e0d4e20739b76094430d0359620da63f5fae1ebb9d",
          "md5": "d0309808484bd04c3a43a2bd07aa83b9",
          "sha256": "a5a91d8fedeab47aec8cf0955a5886f31a05a8a694e5041edb536980c6210a60"
        },
        "downloads": -1,
        "filename": "maginator-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "d0309808484bd04c3a43a2bd07aa83b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 40855,
        "upload_time": "2022-12-15T11:16:27",
        "upload_time_iso_8601": "2022-12-15T11:16:27.053156Z",
        "url": "https://files.pythonhosted.org/packages/b2/0e/e9f8fab4868fdbeac8e0d4e20739b76094430d0359620da63f5fae1ebb9d/maginator-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3351ffee33c05503c602c0583f3968e3e63cde50489be8d9a80e43f0a17d4d29",
        "md5": "1b8f042f3c36254692ffa710b8614c3c",
        "sha256": "688516da4d23e1b44faf355c2bb805e5195eed063c86b7e5f24fffa3a3535523"
      },
      "downloads": -1,
      "filename": "maginator-0.1.13-py3.10.egg",
      "has_sig": false,
      "md5_digest": "1b8f042f3c36254692ffa710b8614c3c",
      "packagetype": "bdist_egg",
      "python_version": "0.1.13",
      "requires_python": ">=3.5",
      "size": 83394,
      "upload_time": "2023-02-20T13:42:19",
      "upload_time_iso_8601": "2023-02-20T13:42:19.417218Z",
      "url": "https://files.pythonhosted.org/packages/33/51/ffee33c05503c602c0583f3968e3e63cde50489be8d9a80e43f0a17d4d29/maginator-0.1.13-py3.10.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27d1d8b739151ffea3e1dec7103e89dd35113f0bf883897372ab3e92837495a7",
        "md5": "c2cd7b62000388c3369c324e643c3dbb",
        "sha256": "984d4f872ba4dad551a7e7a97d02bfe48d5ac6376365080c589a796d8b5bf35e"
      },
      "downloads": -1,
      "filename": "maginator-0.1.13.tar.gz",
      "has_sig": false,
      "md5_digest": "c2cd7b62000388c3369c324e643c3dbb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 43859,
      "upload_time": "2023-02-20T13:42:21",
      "upload_time_iso_8601": "2023-02-20T13:42:21.438170Z",
      "url": "https://files.pythonhosted.org/packages/27/d1/d8b739151ffea3e1dec7103e89dd35113f0bf883897372ab3e92837495a7/maginator-0.1.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}