{
  "info": {
    "author": "He Hao",
    "author_email": "berknology@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "API Throttler\n=============\n\n![Build](https://github.com/berknology/api-throttler/workflows/Build/badge.svg)\n![Release](https://github.com/berknology/api-throttler/workflows/Release/badge.svg)\n![PyPi](https://img.shields.io/pypi/v/api-throttler.svg)\n\n\nA Python toolkit to enforce API rate limit on the backend. The toolkit enable the service backend to limit the number of \nAPI calls in a specified period, e.g., 15 API calls per 900 seconds. There are four throttler classes in the toolkit:\n  * FixedWindowThrottler\n  * SlidingWindowThrottler\n  * FixedWindowThrottlerRedis\n  * SlidingWindowThrottlerRedis\n\nThe first two throttler classes use local storage to save throttler data (e.g., API calls that have been served and \ntheir timestamps), while the last two throttler classes use a Redis server to store throttler information. The \ndifference between the fixed window and sliding window throttlers is the fixed window throttler uses the timestamp when \nthe first feasible request is served as the starting timestamp to determine the number of allowed API calls in the \nfollowing period, while the sliding window throttler uses the current timestamp minus the specified period as the \nstarting timestamp to calculate the number of allowed API calls. The advantage of fixed window throttler is its \nsimplicity, but there could be many API calls allowed if they are at the end of last period and the beginning of the \ncurrent period. On the other hand, the sliding window throttler could resolve this issue, but it takes more memory. \n\n\nUsage\n--------\nTo use this API throttler toolkit, first install it using pip:\n```bash\npip install api-throttler\n```\n\nThen, import the package in your python script and use appropriate throttler classes:\n\n```python\nimport time\n\nfrom api_throttler import Throttler, FixedWindowThrottler, SlidingWindowThrottler\n\n\n# Limit 3 calls per 10 seconds\nfixed_window_throttler = FixedWindowThrottler(calls=3, period=10)\nsliding_window_throttler = SlidingWindowThrottler(calls=3, period=10)\n\n\ndef call_api(throttler: Throttler, key: str = 'some_string_key'):\n    if not throttler.is_throttled(key):\n        print('API call is NOT throttled')\n    else:\n        print('API call is throttled')\n\n\nprint('Using fixed window API throttler')\nfor i in range(20):\n    print(f'This is the {i}-th second')\n    # Call API in the following i-th seconds\n    if i in {0, 8, 9, 10, 11, 12}:\n        call_api(fixed_window_throttler)\n    time.sleep(1)\n\nprint('-'*40)\n\nprint('Using sliding window API throttler')\nfor i in range(20):\n    print(f'This is the {i}-th second')\n    if i in {0, 8, 9, 10, 11, 12}:\n        call_api(sliding_window_throttler)\n    time.sleep(1)\n```\n\nIn the above example, the data of the throttler is saved in local memory. If you would like to save it in a redis \nserver, you can use the `FixedWindowThrottlerRedis` and `SlidingWindowThrottlerRedis` classes. The following scripts \nshows how to use the two classes using [fake redis](https://github.com/jamesls/fakeredis):\n\n```python\nimport time\n\nimport fakeredis\nfrom api_throttler import Throttler, FixedWindowThrottlerRedis, SlidingWindowThrottlerRedis\n\ncache = fakeredis.FakeStrictRedis()\n\n# Limit 3 calls per 10 seconds\nfixed_window_throttler = FixedWindowThrottlerRedis(calls=3, period=10, cache=cache)\nsliding_window_throttler = SlidingWindowThrottlerRedis(calls=3, period=10, cache=cache)\n\n\ndef call_api(throttler: Throttler, key: str = 'some_string_key'):\n    if not throttler.is_throttled(key):\n        print('API call is NOT throttled')\n    else:\n        print('API call is throttled')\n\n\nprint('Using fixed window API throttler')\nfor i in range(20):\n    print(f'This is the {i}-th second')\n    # Call API in the following i-th seconds\n    if i in {0, 8, 9, 10, 11, 12}:\n        call_api(fixed_window_throttler)\n    time.sleep(1)\n\nprint('-'*40)\n\nprint('Using sliding window API throttler')\nfor i in range(20):\n    print(f'This is the {i}-th second')\n    if i in {0, 8, 9, 10, 11, 12}:\n        call_api(sliding_window_throttler)\n    time.sleep(1)\n```\n\nIf you would like to try a real example using API served by a Flask app and a redis server, please try to run the \n`app.py` using Docker by typing the following command in your terminal:\n```bash\ndocker-compose up --build\n``` \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/berknology/api-throttler",
    "keywords": "ratelimit,rate-limit,rate-limiter,throttling,throttle,throttler,api,decorator",
    "license": "BSD license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "api-throttler",
    "package_url": "https://pypi.org/project/api-throttler/",
    "platform": "",
    "project_url": "https://pypi.org/project/api-throttler/",
    "project_urls": {
      "Homepage": "https://github.com/berknology/api-throttler"
    },
    "release_url": "https://pypi.org/project/api-throttler/0.3.1/",
    "requires_dist": [
      "redis"
    ],
    "requires_python": "",
    "summary": "A python toolkit to enforce API rate limit on the backend",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9035042,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "610ecd84ae1c9127a46c6a9f48c2d0deca8788130997423fbb6efef2deda297b",
          "md5": "c25b83452449df4da7b6aaa91d7d347e",
          "sha256": "e3721777f20044b44067ef779609b5544f594645def108357a557eb2e3592d6c"
        },
        "downloads": -1,
        "filename": "api_throttler-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c25b83452449df4da7b6aaa91d7d347e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4610,
        "upload_time": "2020-12-31T19:17:06",
        "upload_time_iso_8601": "2020-12-31T19:17:06.524468Z",
        "url": "https://files.pythonhosted.org/packages/61/0e/cd84ae1c9127a46c6a9f48c2d0deca8788130997423fbb6efef2deda297b/api_throttler-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea1cc3dc5fe8104b643628ff171def77ce43a5fb0935f3927e2970893ece19ef",
          "md5": "00f66f5f9fef6ce020d6d8f2fc6270e8",
          "sha256": "a0b182ca97facd117ddcf50b3d6d640a0fc0a874301625315ed9d64a1c354f06"
        },
        "downloads": -1,
        "filename": "api_throttler-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "00f66f5f9fef6ce020d6d8f2fc6270e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3875,
        "upload_time": "2020-12-31T19:17:07",
        "upload_time_iso_8601": "2020-12-31T19:17:07.947146Z",
        "url": "https://files.pythonhosted.org/packages/ea/1c/c3dc5fe8104b643628ff171def77ce43a5fb0935f3927e2970893ece19ef/api_throttler-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2685aa2e3a3062f54d98750e4dd84c019f475a210502982fb0d2a20e49e557e9",
          "md5": "16aead666238f2f020fa4fa6243cfb7b",
          "sha256": "8bf6e27d3c6727d2f074d4fecb1ea7e15c5b0ce0d78eaa272cf13d82d223bf99"
        },
        "downloads": -1,
        "filename": "api_throttler-0.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16aead666238f2f020fa4fa6243cfb7b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6601,
        "upload_time": "2021-01-01T02:22:04",
        "upload_time_iso_8601": "2021-01-01T02:22:04.088339Z",
        "url": "https://files.pythonhosted.org/packages/26/85/aa2e3a3062f54d98750e4dd84c019f475a210502982fb0d2a20e49e557e9/api_throttler-0.2.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4fe5f69759b2d90bbb8e790ed09fb4dc25c5d8457b6159e85b4cf09b2dc32f2e",
          "md5": "2855d1042bf1653c978a70ac09301b1b",
          "sha256": "440063d644b89864ca4a290293204fd0a378797602f67a5215367a9a172741fa"
        },
        "downloads": -1,
        "filename": "api_throttler-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2855d1042bf1653c978a70ac09301b1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5277,
        "upload_time": "2021-01-01T02:22:05",
        "upload_time_iso_8601": "2021-01-01T02:22:05.231820Z",
        "url": "https://files.pythonhosted.org/packages/4f/e5/f69759b2d90bbb8e790ed09fb4dc25c5d8457b6159e85b4cf09b2dc32f2e/api_throttler-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b19c3da2c395c6f7abad2cd6b016ff66a70fe011684844cf2d49a499bde2e436",
          "md5": "69961944dbf7f56c462a0b4e06bca487",
          "sha256": "acfcd7ce018ecb2a1df15db319248abde0a0a75aed3b3d53d11171699da7d461"
        },
        "downloads": -1,
        "filename": "api_throttler-0.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69961944dbf7f56c462a0b4e06bca487",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6666,
        "upload_time": "2021-01-02T03:16:11",
        "upload_time_iso_8601": "2021-01-02T03:16:11.328194Z",
        "url": "https://files.pythonhosted.org/packages/b1/9c/3da2c395c6f7abad2cd6b016ff66a70fe011684844cf2d49a499bde2e436/api_throttler-0.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cda95546edc514fdc30aef209a0f3f3ca55fc1ec9b92f32f0c158f8aca6d508",
          "md5": "8494e3206550ee35104c5b86327ebe0e",
          "sha256": "814e88e72dad61fea7d3f9c3bb5837a4efa3d841c73c061ab849f9cbeb4df64c"
        },
        "downloads": -1,
        "filename": "api_throttler-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8494e3206550ee35104c5b86327ebe0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5362,
        "upload_time": "2021-01-02T03:16:12",
        "upload_time_iso_8601": "2021-01-02T03:16:12.531789Z",
        "url": "https://files.pythonhosted.org/packages/8c/da/95546edc514fdc30aef209a0f3f3ca55fc1ec9b92f32f0c158f8aca6d508/api_throttler-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b19c3da2c395c6f7abad2cd6b016ff66a70fe011684844cf2d49a499bde2e436",
        "md5": "69961944dbf7f56c462a0b4e06bca487",
        "sha256": "acfcd7ce018ecb2a1df15db319248abde0a0a75aed3b3d53d11171699da7d461"
      },
      "downloads": -1,
      "filename": "api_throttler-0.3.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "69961944dbf7f56c462a0b4e06bca487",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 6666,
      "upload_time": "2021-01-02T03:16:11",
      "upload_time_iso_8601": "2021-01-02T03:16:11.328194Z",
      "url": "https://files.pythonhosted.org/packages/b1/9c/3da2c395c6f7abad2cd6b016ff66a70fe011684844cf2d49a499bde2e436/api_throttler-0.3.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8cda95546edc514fdc30aef209a0f3f3ca55fc1ec9b92f32f0c158f8aca6d508",
        "md5": "8494e3206550ee35104c5b86327ebe0e",
        "sha256": "814e88e72dad61fea7d3f9c3bb5837a4efa3d841c73c061ab849f9cbeb4df64c"
      },
      "downloads": -1,
      "filename": "api_throttler-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8494e3206550ee35104c5b86327ebe0e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5362,
      "upload_time": "2021-01-02T03:16:12",
      "upload_time_iso_8601": "2021-01-02T03:16:12.531789Z",
      "url": "https://files.pythonhosted.org/packages/8c/da/95546edc514fdc30aef209a0f3f3ca55fc1ec9b92f32f0c158f8aca6d508/api_throttler-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}