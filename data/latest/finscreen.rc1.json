{
  "info": {
    "author": "haarthiel",
    "author_email": "<haarthiel@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Financial and Insurance Industry",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Finscreen\nSimple module that screens stocks on FinViz and scrapes the data into dataframe.\n\n## Usage\nThe module can scrape the data from overview, valuation, financial and technical tabs, based on desired filters, orders and range. The data then could be used to extract the tickers list or various stock indicators, such as stock's ROI or RSI. Which in-turn creates a convienient way to pick stocks based on desired criteria and use this data in more complex projects. \n\n### Installation\nInstall the package via pip:\n```shell\npip install finscreen\n```\n\n### Get Started\nFinScreen has the following functions that return a Pandas DataFrame:\n```shell\n1. get_overview\n2. get_valuation\n3. get_financials\n4. get_technicals\n```\n\n#### Functions arguments\nEach of the functions have the same 3 arguments that have the following usage:\n```shell\nfilter (string): Configure desired filter on Finviz website and paste the string after 'f=' from URL. Leave empty if needed.\norder (string): Click on desired order on Finviz Table and paste the string after 'o=' from URL. Defaults to tickers in alphabetical order.\nrg (integer): Desired range of scraping. To get all results navigate to the last table and paste the integer from URL. ; Defaults to 100.\n```\n\n### Examples\nExporting data to Excel:\n```shell\nimport os\nimport finscreen\n\n# Creating folder for data\ndir_path = os.getcwd() # Selects current working directory of a process\nnew_path = f\"{dir_path}/finviz_data\" \n\nif not os.path.exists(new_path):\n    os.makedirs(new_path)\n\n# Setting up arguments\nfilter = 'cap_largeover' # FinViz filter configured to screen companies with market capitalization of $10bln+\nrg = 1000 # Screens first 1000 stocks\norder = 'industry' # Stocks ordered by industry in alphabetical order\n\n# Assigning data to dataframes\noverview = finscreen.get_overview(filter = filter, order = order, rg = rg)\nvaluation = finscreen.get_valuation(filter = filter, order = order, rg = rg)\nfinancial = finscreen.get_financials(filter = filter, order = order, rg = rg)\ntechnical = finscreen.get_technicals(filter = filter, order = order, rg = rg)\n\n# Exporting data to Excel\ntry:\n    overview.to_excel(new_path+'/overview.xlsx')\n    valuation.to_excel(new_path+'/valuation.xlsx')\n    financial.to_excel(new_path+'/financial.xlsx')\n    technical.to_excel(new_path+'/technical.xlsx')\nexcept Exception:\n    pass\n```\n\nExtracting tickers into a list and downloading their price/volume data using yfinance module:\n```shell\nfrom finscreen import get_overview\nimport yfinance as yf\n\ndf = get_overview(filter = 'fa_div_pos,fa_epsyoy_o15') # Screening first 100 stocks that have positive dividend yield and EPS growth in the current year of over 15%.\n\ntickers_list = df.index.to_list()\n\nuniverse = yf.download(tickers_list, \n                       period = '5y',\n                       interval = '1d',\n                       threads = True,\n                       )\n```\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Haarth/finscreen",
    "keywords": "python,finviz,scraper,stock screening",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "finscreen",
    "package_url": "https://pypi.org/project/finscreen/",
    "platform": null,
    "project_url": "https://pypi.org/project/finscreen/",
    "project_urls": {
      "Homepage": "https://github.com/Haarth/finscreen"
    },
    "release_url": "https://pypi.org/project/finscreen/0.1.1/",
    "requires_dist": [
      "pandas",
      "tqdm",
      "requests"
    ],
    "requires_python": "",
    "summary": "Screen stocks on FinViz and scrape the data into dataframe.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14445333,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58a00f636294a23f70dd04f8fdbd697daccf04fb888f1ea9cd980df72b716042",
          "md5": "3b29cf789e119041ddd18100018c0d31",
          "sha256": "925ee3e18a6390758094293761f529cbaf939d25b2c6793739274687a7c59bab"
        },
        "downloads": -1,
        "filename": "finscreen-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b29cf789e119041ddd18100018c0d31",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4353,
        "upload_time": "2022-07-15T11:59:07",
        "upload_time_iso_8601": "2022-07-15T11:59:07.719119Z",
        "url": "https://files.pythonhosted.org/packages/58/a0/0f636294a23f70dd04f8fdbd697daccf04fb888f1ea9cd980df72b716042/finscreen-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65a4b2db6480101592f5d123fa05fe5e47dbf2a556b5420332f2104d266fe0d6",
          "md5": "e33db2ea7ae41580a5cb84f5a1cd9db2",
          "sha256": "324dbeb0496d321837d419bd9c182374337b68441228f2bb54212a5cf51abc6c"
        },
        "downloads": -1,
        "filename": "finscreen-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e33db2ea7ae41580a5cb84f5a1cd9db2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4024,
        "upload_time": "2022-07-15T11:59:09",
        "upload_time_iso_8601": "2022-07-15T11:59:09.190380Z",
        "url": "https://files.pythonhosted.org/packages/65/a4/b2db6480101592f5d123fa05fe5e47dbf2a556b5420332f2104d266fe0d6/finscreen-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "58a00f636294a23f70dd04f8fdbd697daccf04fb888f1ea9cd980df72b716042",
        "md5": "3b29cf789e119041ddd18100018c0d31",
        "sha256": "925ee3e18a6390758094293761f529cbaf939d25b2c6793739274687a7c59bab"
      },
      "downloads": -1,
      "filename": "finscreen-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3b29cf789e119041ddd18100018c0d31",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4353,
      "upload_time": "2022-07-15T11:59:07",
      "upload_time_iso_8601": "2022-07-15T11:59:07.719119Z",
      "url": "https://files.pythonhosted.org/packages/58/a0/0f636294a23f70dd04f8fdbd697daccf04fb888f1ea9cd980df72b716042/finscreen-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "65a4b2db6480101592f5d123fa05fe5e47dbf2a556b5420332f2104d266fe0d6",
        "md5": "e33db2ea7ae41580a5cb84f5a1cd9db2",
        "sha256": "324dbeb0496d321837d419bd9c182374337b68441228f2bb54212a5cf51abc6c"
      },
      "downloads": -1,
      "filename": "finscreen-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e33db2ea7ae41580a5cb84f5a1cd9db2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4024,
      "upload_time": "2022-07-15T11:59:09",
      "upload_time_iso_8601": "2022-07-15T11:59:09.190380Z",
      "url": "https://files.pythonhosted.org/packages/65/a4/b2db6480101592f5d123fa05fe5e47dbf2a556b5420332f2104d266fe0d6/finscreen-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}