{
  "info": {
    "author": "Arthur Selle Jacobs",
    "author_email": "asjacobs@inf.ufrgs.br",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<img src=\"https://github.com/TrusteeML/trustee/blob/master/docs/_static/logo.png?raw=true\" alt=\"Trustee\" width=\"400\"/>\n\nThis package implements the `trustee` framework to extract decision tree explanation from black-box ML models.\nFor more information, please visit the [documentation website](https://trusteeml.github.io).\n\nStandard AI/ML development pipeline extended by Trustee.\n<img alt=\"Trustee\" src=\"https://github.com/TrusteeML/trustee/blob/master/docs/_static/flowchart.png?raw=true\"  width=\"800\">\n\nGetting Started\n---------------\n\nThis section contains basic information and instructions to get started with Trustee.\n\n### Python Version\n\nTrustee supports `Python >=3.7`.\n\n### Install Trustee\n\nUse the following command to install Trustee:\n\n```\n$ pip install trustee\n```\n\n### Sample Code\n\n```\nfrom sklearn import datasets\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\n\nfrom trustee import ClassificationTrustee\n\nX, y = datasets.load_iris(return_X_y=True)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30)\n\nclf = RandomForestClassifier(n_estimators=100)\nclf.fit(X_train, y_train)\ny_pred = clf.predict(X_test)\n\ntrustee = ClassificationTrustee(expert=clf)\ntrustee.fit(X_train, y_train, num_iter=50, num_stability_iter=10, samples_size=0.3, verbose=True)\ndt = trustee.explain()\ndt_y_pred = dt.predict(X_test)\n\nprint(\"Model explanation global fidelity report:\")\nprint(classification_report(y_pred, dt_y_pred))\nprint(\"Model explanation score report:\")\nprint(classification_report(y_test, dt_y_pred))\n```\n\n### Usage Examples\n\nFor simple usage examples of Trustee and TrustReport, please check the `examples/` directory.\n\n### Other Use Cases\n\nFor other examples and use cases of how Trustee can used to scrutinize ML models, listed in the table below, please check our [Use Cases repository](https://github.com/TrusteeML/emperor).\n\n | Use Case           | Description                                                                                                                                                 |\n | ------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------- |\n | heartbleed\\_case/  | Trustee application to a Random Forest Classifier for an Intrustion Detection System, trained with CIC-IDS-2017 dataset pre-computed features.              |\n | kitsune\\_case/     | Trustee application to Kitsune model for anomaly detection in network traffic, trained with features extracted from Kitsune\\'s Mirai attack trace.          |\n | iot\\_case/         | Trustee application to Random Forest Classifier to distguish IoT devices, trained with features extracted from the pcaps from the UNSW IoT Dataset.         |\n | moon\\_star\\_case/  | Trustee application to Neural Network Moon and Stars Shortcut learning toy example.                                                                         |\n | nprint\\_ids\\_case/ | Trustee application to the nPrintML AutoGluon Tabular Predictor for an Intrustion Detection System, also trained using pcaps from the CIC-IDS-2017 dataset. |\n | nprint\\_os\\_case/  | Trustee application to the nPrintML AutoGluon Tabular Predictor for OS Fingerprinting, also trained using with pcaps from the CIC-IDS-2017 dataset.         |\n | pensieve\\_case/    | Trustee application to the Pensieve RL model for adaptive bit-rate prediction, and comparison to related work Metis.                                        |\n | vpn\\_case/         | Trustee application the 1D-CNN trained to detect VPN traffic trained with the ISCX VPN-nonVPN dataset.                                                      |\n\n### Supported AI/ML Libraries\n\n | Library      | Supported          |\n | ------------ | ------------------ |\n | scikit-learn | :white_check_mark: |\n | Keras        | :white_check_mark: |\n | Tensorflow   | :white_check_mark: |\n | PyTorch      | :white_check_mark: |\n | AutoGluon    | :white_check_mark: |\n\n## Citing us\n\n```\n@inproceedings{Jacobs2022,\n\ttitle        = {AI/ML and Network Security: The Emperor has no Clothes},\n\tauthor       = {A. S. Jacobs and R. Beltiukov and W. Willinger and R. A. Ferreira and A. Gupta and L. Z. Granville},\n\tyear         = 2022,\n\tbooktitle    = {Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security},\n\tlocation     = {Los Angeles, CA, USA},\n\tpublisher    = {Association for Computing Machinery},\n\taddress      = {New York, NY, USA},\n\tseries       = {CCS '22}\n}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://trusteeml.github.io",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "trustee",
    "package_url": "https://pypi.org/project/trustee/",
    "platform": null,
    "project_url": "https://pypi.org/project/trustee/",
    "project_urls": {
      "Homepage": "https://trusteeml.github.io",
      "Repository": "https://github.com/TrusteeML/trustee"
    },
    "release_url": "https://pypi.org/project/trustee/1.1.1/",
    "requires_dist": [
      "numpy (>=1.19.0)",
      "scipy (>=1.4.1,<2.0.0)",
      "pandas (>=1.1.0,<2.0.0)",
      "scikit-learn (>=0.23.2)",
      "matplotlib (>=3.3.1,<4.0.0)",
      "rootpath (>=0.1.1,<0.2.0)",
      "setuptools (>=57.0.0,<58.0.0)",
      "prettytable (==3.0.0)",
      "termcolor (>=1.1.0,<2.0.0)",
      "graphviz (>=0.8.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "This package implements the Trustee framework to extract decision tree explanation from black-box ML models.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14912714,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b1ecac35f435c3fd1b1f16d5a70adaafeb56f2270d7427edb4ae55c20e55f27",
          "md5": "f53c75ff33cf0f62e33c677583334a7d",
          "sha256": "20e536fda31836faff94ff4186535d78fac950f8006303f1ed1bdbe485c36f4d"
        },
        "downloads": -1,
        "filename": "trustee-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f53c75ff33cf0f62e33c677583334a7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 41768,
        "upload_time": "2022-08-28T01:56:54",
        "upload_time_iso_8601": "2022-08-28T01:56:54.880116Z",
        "url": "https://files.pythonhosted.org/packages/7b/1e/cac35f435c3fd1b1f16d5a70adaafeb56f2270d7427edb4ae55c20e55f27/trustee-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27697901cf983cf2838772d5121ffc085a08799df582f1b1095ddda31f1d5102",
          "md5": "a908b45b324c1a68bea81cb2a88607b5",
          "sha256": "b63b4b23059f9c6d33aa4f35a2cfed285d02f0aec52ac2f2804a7d2d7c7b85e3"
        },
        "downloads": -1,
        "filename": "trustee-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a908b45b324c1a68bea81cb2a88607b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 39121,
        "upload_time": "2022-08-28T01:56:56",
        "upload_time_iso_8601": "2022-08-28T01:56:56.488884Z",
        "url": "https://files.pythonhosted.org/packages/27/69/7901cf983cf2838772d5121ffc085a08799df582f1b1095ddda31f1d5102/trustee-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90922c8e4f98a48e1c78cc6d292814da6cee31f24eaa31391409675e1b87e145",
          "md5": "0b7a90082609686f3f419b82e86f2bd7",
          "sha256": "d30f226414cb3866c44791c19f93f7294f136de4c8109d11b64b354d43e00a7a"
        },
        "downloads": -1,
        "filename": "trustee-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b7a90082609686f3f419b82e86f2bd7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 43537,
        "upload_time": "2022-08-28T04:16:37",
        "upload_time_iso_8601": "2022-08-28T04:16:37.034532Z",
        "url": "https://files.pythonhosted.org/packages/90/92/2c8e4f98a48e1c78cc6d292814da6cee31f24eaa31391409675e1b87e145/trustee-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bad14f111d414086b69fa4533d7b02f784828133de0f136cea76fa2b63ead19c",
          "md5": "9c01c93f23b1bedf2500bf697535a79a",
          "sha256": "38489b314a437bd30df8a294709ca5feb9208ff83442112c8abd99bc0d2a14c8"
        },
        "downloads": -1,
        "filename": "trustee-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9c01c93f23b1bedf2500bf697535a79a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 42924,
        "upload_time": "2022-08-28T04:16:38",
        "upload_time_iso_8601": "2022-08-28T04:16:38.918450Z",
        "url": "https://files.pythonhosted.org/packages/ba/d1/4f111d414086b69fa4533d7b02f784828133de0f136cea76fa2b63ead19c/trustee-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "90922c8e4f98a48e1c78cc6d292814da6cee31f24eaa31391409675e1b87e145",
        "md5": "0b7a90082609686f3f419b82e86f2bd7",
        "sha256": "d30f226414cb3866c44791c19f93f7294f136de4c8109d11b64b354d43e00a7a"
      },
      "downloads": -1,
      "filename": "trustee-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0b7a90082609686f3f419b82e86f2bd7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 43537,
      "upload_time": "2022-08-28T04:16:37",
      "upload_time_iso_8601": "2022-08-28T04:16:37.034532Z",
      "url": "https://files.pythonhosted.org/packages/90/92/2c8e4f98a48e1c78cc6d292814da6cee31f24eaa31391409675e1b87e145/trustee-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bad14f111d414086b69fa4533d7b02f784828133de0f136cea76fa2b63ead19c",
        "md5": "9c01c93f23b1bedf2500bf697535a79a",
        "sha256": "38489b314a437bd30df8a294709ca5feb9208ff83442112c8abd99bc0d2a14c8"
      },
      "downloads": -1,
      "filename": "trustee-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9c01c93f23b1bedf2500bf697535a79a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 42924,
      "upload_time": "2022-08-28T04:16:38",
      "upload_time_iso_8601": "2022-08-28T04:16:38.918450Z",
      "url": "https://files.pythonhosted.org/packages/ba/d1/4f111d414086b69fa4533d7b02f784828133de0f136cea76fa2b63ead19c/trustee-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}