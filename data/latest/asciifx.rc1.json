{
  "info": {
    "author": "",
    "author_email": "Robert Grimm <apparebit@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "# asciifx\n\n[asciinema](https://asciinema.org) is a great tool for recording, viewing, and\nsharing live terminal performances. But sometimes, a performance really needs to\nbe carefully scripted and its staging carefully controlled. That's when you turn\nto ***asciifx***.\n\nIn particular, asciifx turns plain Python scripts into [version 2\nasciicasts](https://github.com/asciinema/asciinema/blob/develop/doc/asciicast-v2.md)\nof what might be a person executing the script line by line in an interactive\nPython interpreter. It features semi-realistic keystroke dynamics as well as\npauses for reading interpreter output. Beyond this first use-case, asciifx has\nwell-defined internal interfaces that make extension straight-forward.\n\n\n## An Example\n\nConsider this Python script to show off the libray that inspired this package,\n[konsole](https://github.com/apparebit/konsole):\n\n```python\n#[keypress-speed=0.6]\n#[off]\nimport konsole\nkonsole.config(use_color=True)\n#[on]\nkonsole.info(\"fyi\", detail=[\"for\", \"your\", \"information\"])\nkonsole.warning(\"beware\")\nkonsole.error(\"bad\")\nkonsole.critical(\"enough already!!!\")\nquit()\n```\n\nThe comments may look like [Rust\nannotations](https://doc.rust-lang.org/rust-by-example/attribute.html) but still\nare valid Python. In the context of asciifx, they also are called pragmas and\ncontrol the performance. `keypress-speed` speeds up simulated keypresses because\nthey just aren't *that* interesting to watch. `off`/`on` prevent the import and\nconfiguration of konsole from appearing in the final asciicast, though the two\nstatements are executed nonetheless.\n\nWith that, we are ready to run asciifx:\n\n```sh\n$ python -m asciifx --height 13 -o output.cast input.py\n```\n\nYou can watch the resulting asciicast with asciinema â€” or convert it to SVG with\n[svg-term-cli](https://github.com/marionebl/svg-term-cli):\n\n![An interactive Python session using\nkonsole](https://raw.githubusercontent.com/apparebit/asciifx/boss/example/image.svg)\n\n\n## Pragmas\n\nTo be recognized by asciifx, a pragma must appear on a line, by itself. asciifx\nsupports the following pragmas:\n\n  * `#[off]` suspends rendering to asciicast events.\n  * `#[on]` restores the rendering of asciicast events.\n  * `#[think-time=FLOAT]` inserts a pause of *FLOAT* seconds after the next\n    interaction's interpreter prompt.\n  * `#[speed=FLOAT]` adjusts overall duration by multiplying all delays by *FLOAT*.\n  * `#[keypress-speed=FLOAT]` adjusts keypress duration by multiplying keypress delays\n    by *FLOAT*.\n\nWhereas `think-time` takes an absolute value in seconds, `speed` and\n`keypress-speed` take relative, multiplicative values. To make these semantics\nobvious even to casual users, `think-time` ends with `time`, whereas `speed` and\n`keypress-speed` end with `speed`. The `speed` and `keypress-speed` pragmas\nmultiply by their arguments instead of the inverse of their arguments because\nthat makes jumping through time trivial: Just set `speed` or `keypress-speed` to\nzero! At the same time, beware that the combined impact of `speed` and\n`keypress-speed` is multiplicative on the duration between keypresses.\n\n\n## An Itch to Scratch\n\nasciifx exists because I had an itch to scratch: creating an animated screenshot\nto show off konsole. Python's REPL is great for showing off an interface, since\nit displays the result of each statement right after executing, and\n[asciinema](https://github.com/asciinema/asciinema) is great for recording such\ninteractions. The problem is that getting such a performance right pretty much\nrequires scripting everything beforehand. But if it's already scripted, it makes\nlittle sense to type out the code again at a Python REPL.\n\nSo I scoped out writing my own tool: Python's [code\nmodule](https://docs.python.org/3/library/code.html) has all the REPL support\nI'd need, nicely abstracted. [asciicast\nv2](https://github.com/asciinema/asciinema/blob/develop/doc/asciicast-v2.md) is\nan eminently reasonable file format to target. All that was missing was a\nsuitable model for human keystroke dynamics. After a quick literature search,\neven that model seemed within reach.\n\nAlas, turning scientific writing into executable code easily becomes an exercise\nin frustration. There is ambiguous language in the definition of critical\nmetrics when perfectly well-defined terminology and metrics exist. (Yes, IKI is\nthe same as flight time shifted by hold time. No, \"keypress event\" is not an\nabstract event related to pressing keys but an actual, [deprecated JavaScript\nevent](https://developer.mozilla.org/en-US/docs/Web/API/Document/keypress_event).)\nThere also are probability distributions that are surprisingly hostile to casual\nhuman use. (No, Î¼ and Ïƒ are *not* the mean and standard deviation of the\nlog-normal distribution. Yes, they are the customary parameters for that\ndistribution nonetheless. Converting mean and standard deviation to these\nparameters is left as an exercise for the reader. ðŸ˜ˆ)\n\n---\n\nÂ© 2022 [Robert Grimm](https://apparebit.com).\n[Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0) license.\n[GitHub](https://github.com/apparebit/asciifx).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asciifx",
    "package_url": "https://pypi.org/project/asciifx/",
    "platform": "",
    "project_url": "https://pypi.org/project/asciifx/",
    "project_urls": {
      "Home": "https://github.com/apparebit/asciifx"
    },
    "release_url": "https://pypi.org/project/asciifx/0.1.0/",
    "requires_dist": [
      "konsole",
      "black ; extra == \"dev\"",
      "flit ; extra == \"dev\"",
      "mypy ; extra == \"dev\""
    ],
    "requires_python": ">=3.8",
    "summary": "Turn Python scripts into seemingly interactive sessions caught on asciicast.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12880960,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18f37a83142796783c1be7afeb2722e4fcb853124eae4163d15f2a33824dfd82",
          "md5": "37f297bafb077e47ed056c82706bb5c2",
          "sha256": "e5d9eb89f75dd73f6134928daecf5b72fab68ef015503fbfaba170691a4f8609"
        },
        "downloads": -1,
        "filename": "asciifx-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37f297bafb077e47ed056c82706bb5c2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16865,
        "upload_time": "2022-02-14T03:09:55",
        "upload_time_iso_8601": "2022-02-14T03:09:55.330389Z",
        "url": "https://files.pythonhosted.org/packages/18/f3/7a83142796783c1be7afeb2722e4fcb853124eae4163d15f2a33824dfd82/asciifx-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18f37a83142796783c1be7afeb2722e4fcb853124eae4163d15f2a33824dfd82",
        "md5": "37f297bafb077e47ed056c82706bb5c2",
        "sha256": "e5d9eb89f75dd73f6134928daecf5b72fab68ef015503fbfaba170691a4f8609"
      },
      "downloads": -1,
      "filename": "asciifx-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "37f297bafb077e47ed056c82706bb5c2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 16865,
      "upload_time": "2022-02-14T03:09:55",
      "upload_time_iso_8601": "2022-02-14T03:09:55.330389Z",
      "url": "https://files.pythonhosted.org/packages/18/f3/7a83142796783c1be7afeb2722e4fcb853124eae4163d15f2a33824dfd82/asciifx-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}