{
  "info": {
    "author": "Nick Catalano",
    "author_email": "nickcatal@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "*****************\nSimple Salesforce\n*****************\n\n.. image:: https://api.travis-ci.org/simple-salesforce/simple-salesforce.svg?branch=master\n   :target: https://travis-ci.org/simple-salesforce/simple-salesforce\n\n.. image:: https://readthedocs.org/projects/simple-salesforce/badge/?version=latest\n   :target: http://simple-salesforce.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\nSimple Salesforce is a basic Salesforce.com REST API client built for Python 2.6, 2.7, 3.3, 3.4, 3.5, and 3.6. The goal is to provide a very low-level interface to the REST Resource and APEX API, returning a dictionary of the API JSON response.\n\nYou can find out more regarding the format of the results in the `Official Salesforce.com REST API Documentation`_\n\n.. _Official Salesforce.com REST API Documentation: http://www.salesforce.com/us/developer/docs/api_rest/index.htm\n\nExamples\n--------\nThere are two ways to gain access to Salesforce\n\nThe first is to simply pass the domain of your Salesforce instance and an access token straight to ``Salesforce()``\n\nFor example:\n\n.. code-block:: python\n\n    from simple_salesforce import Salesforce\n    sf = Salesforce(instance='na1.salesforce.com', session_id='')\n\nIf you have the full URL of your instance (perhaps including the schema, as is included in the OAuth2 request process), you can pass that in instead using ``instance_url``:\n\n.. code-block:: python\n\n    from simple_salesforce import Salesforce\n    sf = Salesforce(instance_url='https://na1.salesforce.com', session_id='')\n\nThere are also two means of authentication, one that uses username, password and security token and the other that uses IP filtering, username, password  and organizationId\n\nTo login using the security token method, simply include the Salesforce method and pass in your Salesforce username, password and token (this is usually provided when you change your password):\n\n.. code-block:: python\n\n    from simple_salesforce import Salesforce\n    sf = Salesforce(username='myemail@example.com', password='password', security_token='token')\n\nTo login using IP-whitelist Organization ID method, simply use your Salesforce username, password and organizationId:\n\n.. code-block:: python\n\n    from simple_salesforce import Salesforce\n    sf = Salesforce(password='password', username='myemail@example.com', organizationId='OrgId')\n\nIf you'd like to enter a sandbox, simply add ``domain='test'`` to your ``Salesforce()`` call.\n\nFor example:\n\n.. code-block:: python\n\n    from simple_salesforce import Salesforce\n    sf = Salesforce(username='myemail@example.com.sandbox', password='password', security_token='token', domain='test')\n\nNote that specifying if you want to use a domain is only necessary if you are using the built-in username/password/security token authentication and is used exclusively during the authentication step.\n\nIf you'd like to keep track where your API calls are coming from, simply add ``client_id='My App'`` to your ``Salesforce()`` call.\n\n.. code-block:: python\n\n    from simple_salesforce import Salesforce\n    sf = Salesforce(username='myemail@example.com.sandbox', password='password', security_token='token', client_id='My App', domain='test')\n\nIf you view the API calls in your Salesforce instance by Client Id it will be prefixed with ``RestForce/``, for example ``RestForce/My App``.\n\nWhen instantiating a `Salesforce` object, it's also possible to include an\ninstance of `requests.Session`. This is to allow for specialized\nsession handling not otherwise exposed by simple_salesforce.\n\nFor example:\n\n.. code-block:: python\n\n   from simple_salesforce import Salesforce\n   import requests\n\n   session = requests.Session()\n   # manipulate the session instance (optional)\n   sf = Salesforce(\n      username='user@example.com', password='password', organizationId='OrgId',\n      session=session)\n\nRecord Management\n-----------------\n\nTo create a new 'Contact' in Salesforce:\n\n.. code-block:: python\n\n    sf.Contact.create({'LastName':'Smith','Email':'example@example.com'})\n\nThis will return a dictionary such as ``{u'errors': [], u'id': u'003e0000003GuNXAA0', u'success': True}``\n\nTo get a dictionary with all the information regarding that record, use:\n\n.. code-block:: python\n\n    contact = sf.Contact.get('003e0000003GuNXAA0')\n\nTo get a dictionary with all the information regarding that record, using a **custom** field that was defined as External ID:\n\n.. code-block:: python\n\n    contact = sf.Contact.get_by_custom_id('My_Custom_ID__c', '22')\n\nTo change that contact's last name from 'Smith' to 'Jones' and add a first name of 'John' use:\n\n.. code-block:: python\n\n    sf.Contact.update('003e0000003GuNXAA0',{'LastName': 'Jones', 'FirstName': 'John'})\n\nTo delete the contact:\n\n.. code-block:: python\n\n    sf.Contact.delete('003e0000003GuNXAA0')\n\nTo retrieve a list of Contact records deleted over the past 10 days (datetimes are required to be in UTC):\n\n.. code-block:: python\n\n    import pytz\n    import datetime\n    end = datetime.datetime.now(pytz.UTC)  # we need to use UTC as salesforce API requires this!\n    sf.Contact.deleted(end - datetime.timedelta(days=10), end)\n\nTo retrieve a list of Contact records updated over the past 10 days (datetimes are required to be in UTC):\n\n.. code-block:: python\n\n    import pytz\n    import datetime\n    end = datetime.datetime.now(pytz.UTC) # we need to use UTC as salesforce API requires this\n    sf.Contact.updated(end - datetime.timedelta(days=10), end)\n\nNote that Update, Delete and Upsert actions return the associated `Salesforce HTTP Status Code`_\n\nUse the same format to create any record, including 'Account', 'Opportunity', and 'Lead'.\nMake sure to have all the required fields for any entry. The `Salesforce API`_ has all objects found under 'Reference -> Standard Objects' and the required fields can be found there.\n\n.. _Salesforce HTTP Status Code: http://www.salesforce.com/us/developer/docs/api_rest/Content/errorcodes.htm\n.. _Salesforce API: https://www.salesforce.com/developer/docs/api/\n\nQueries\n-------\n\nIt's also possible to write select queries in Salesforce Object Query Language (SOQL) and search queries in Salesforce Object Search Language (SOSL).\n\nSOQL queries are done via:\n\n.. code-block:: python\n\n    sf.query(\"SELECT Id, Email FROM Contact WHERE LastName = 'Jones'\")\n\nIf, due to an especially large result, Salesforce adds a ``nextRecordsUrl`` to your query result, such as ``\"nextRecordsUrl\" : \"/services/data/v26.0/query/01gD0000002HU6KIAW-2000\"``, you can pull the additional results with either the ID or the full URL (if using the full URL, you must pass 'True' as your second argument)\n\n.. code-block:: python\n\n    sf.query_more(\"01gD0000002HU6KIAW-2000\")\n    sf.query_more(\"/services/data/v26.0/query/01gD0000002HU6KIAW-2000\", True)\n\nAs a convenience, to retrieve all of the results in a single local method call use\n\n.. code-block:: python\n\n    sf.query_all(\"SELECT Id, Email FROM Contact WHERE LastName = 'Jones'\")\n\nSOSL queries are done via:\n\n.. code-block:: python\n\n    sf.search(\"FIND {Jones}\")\n\nThere is also 'Quick Search', which inserts your query inside the {} in the SOSL syntax. Be careful, there is no escaping!\n\n.. code-block:: python\n\n    sf.quick_search(\"Jones\")\n\nSearch and Quick Search return ``None`` if there are no records, otherwise they return a dictionary of search results.\n\nMore details about syntax is available on the `Salesforce Query Language Documentation Developer Website`_\n\n.. _Salesforce Query Language Documentation Developer Website: http://www.salesforce.com/us/developer/docs/soql_sosl/index.htm\n\nOther Options\n-------------\n\nTo insert or update (upsert) a record using an external ID, use:\n\n.. code-block:: python\n\n    sf.Contact.upsert('customExtIdField__c/11999',{'LastName': 'Smith','Email': 'smith@example.com'})\n\nTo retrieve basic metadata use:\n\n.. code-block:: python\n\n    sf.Contact.metadata()\n\nTo retrieve a description of the object, use:\n\n.. code-block:: python\n\n    sf.Contact.describe()\n\nTo retrieve a description of the record layout of an object by its record layout unique id, use:\n\n.. code-block:: python\n\n    sf.Contact.describe_layout('39wmxcw9r23r492')\n\nTo retrieve a list of top level description of instance metadata, user:\n\n.. code-block:: python\n\n    sf.describe()\n\n    for x in sf.describe()[\"sobjects\"]:\n      print x[\"label\"]\n\n\nUsing Bulk\n----------\n\nYou can use this library to access Bulk API functions.\n\nCreate new records:\n\n.. code-block:: python\n\n    data = [\n          {'LastName':'Smith','Email':'example@example.com'},\n          {'LastName':'Jones','Email':'test@test.com'}\n        ]\n\n    sf.bulk.Contact.insert(data)\n\nUpdate existing records:\n\n.. code-block:: python\n\n    data = [\n          {'Id': '0000000000AAAAA', 'Email': 'examplenew@example.com'},\n          {'Id': '0000000000BBBBB', 'Email': 'testnew@test.com'}\n        ]\n\n    sf.bulk.Contact.update(data)\n\nUpsert records:\n\n.. code-block:: python\n\n    data = [\n          {'Id': '0000000000AAAAA', 'Email': 'examplenew2@example.com'},\n          {'Email': 'foo@foo.com'}\n        ]\n\n    sf.bulk.Contact.upsert(data, 'Id')\n\nQuery records:\n\n.. code-block:: python\n\n    query = 'SELECT Id, Name FROM Account LIMIT 10'\n\n    sf.bulk.Account.query(query)\n\nDelete records (soft deletion):\n\n.. code-block:: python\n\n    data = [{'Id': '0000000000AAAAA'}]\n\n    sf.bulk.Contact.delete(data)\n\nHard deletion:\n\n.. code-block:: python\n\n    data = [{'Id': '0000000000BBBBB'}]\n\n    sf.bulk.Contact.hard_delete(data)\n\n\nUsing Apex\n----------\n\nYou can also use this library to call custom Apex methods:\n\n.. code-block:: python\n\n    payload = {\n      \"activity\": [\n        {\"user\": \"12345\", \"action\": \"update page\", \"time\": \"2014-04-21T13:00:15Z\"}\n      ]\n    }\n    result = sf.apexecute('User/Activity', method='POST', data=payload)\n\nThis would call the endpoint ``https://<instance>.salesforce.com/services/apexrest/User/Activity`` with ``data=`` as\nthe body content encoded with ``json.dumps``\n\nYou can read more about Apex on the `Force.com Apex Code Developer's Guide`_\n\n.. _Force.com Apex Code Developer's Guide: https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_dev_guide.htm\n\nAdditional Features\n-------------------\n\nThere are a few helper classes that are used internally and available to you.\n\nIncluded in them are ``SalesforceLogin``, which takes in a username, password, security token, optional version and optional domain and returns a tuple of ``(session_id, sf_instance)`` where `session_id` is the session ID to use for authentication to Salesforce and ``sf_instance`` is the domain of the instance of Salesforce to use for the session.\n\nFor example, to use SalesforceLogin for a sandbox account you'd use:\n\n.. code-block:: python\n\n    from simple_salesforce import SalesforceLogin\n    session_id, instance = SalesforceLogin(\n        username='myemail@example.com.sandbox',\n        password='password',\n        security_token='token',\n        domain='test')\n\nSimply leave off the final domain if you do not wish to use a sandbox.\n\nAlso exposed is the ``SFType`` class, which is used internally by the ``__getattr__()`` method in the ``Salesforce()`` class and represents a specific SObject type. ``SFType`` requires ``object_name`` (i.e. ``Contact``), ``session_id`` (an authentication ID), ``sf_instance`` (hostname of your Salesforce instance), and an optional ``sf_version``\n\nTo add a Contact using the default version of the API you'd use:\n\n.. code-block:: python\n\n    from simple_salesforce import SFType\n    contact = SFType('Contact','sesssionid','na1.salesforce.com')\n    contact.create({'LastName':'Smith','Email':'example@example.com'})\n\nTo use a proxy server between your client and the SalesForce endpoint, use the proxies argument when creating SalesForce object.\nThe proxy argument is the same as what requests uses, a map of scheme to proxy URL:\n\n.. code-block:: python\n\n    proxies = {\n      \"http\": \"http://10.10.1.10:3128\",\n      \"https\": \"http://10.10.1.10:1080\",\n    }\n    SalesForce(instance='na1.salesforce.com', session_id='', proxies=proxies)\n\nAll results are returned as JSON converted OrderedDict to preserve order of keys from REST responses.\n\nAuthors & License\n-----------------\n\nThis package is released under an open source Apache 2.0 license. Simple-Salesforce was originally written by `Nick Catalano`_ but most newer features and bugfixes come from `community contributors`_. Pull requests submitted to the `GitHub Repo`_ are highly encouraged!\n\nAuthentication mechanisms were adapted from Dave Wingate's `RestForce`_ and licensed under a MIT license\n\nThe latest build status can be found at `Travis CI`_\n\n.. _Nick Catalano: https://github.com/nickcatal\n.. _community contributors: https://github.com/simple-salesforce/simple-salesforce/graphs/contributors\n.. _RestForce: http://pypi.python.org/pypi/RestForce/\n.. _GitHub Repo: https://github.com/simple-salesforce/simple-salesforce\n.. _Travis CI: https://travis-ci.com/simple-salesforce/simple-salesforce",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/taulia/simple-salesforce-2-7",
    "keywords": "python salesforce salesforce.com",
    "license": "Apache 2.0",
    "maintainer": "Brady Cale",
    "maintainer_email": "wbcale@gmail.com",
    "name": "simple-salesforce-2-7",
    "package_url": "https://pypi.org/project/simple-salesforce-2-7/",
    "platform": "",
    "project_url": "https://pypi.org/project/simple-salesforce-2-7/",
    "project_urls": {
      "Homepage": "https://github.com/taulia/simple-salesforce-2-7"
    },
    "release_url": "https://pypi.org/project/simple-salesforce-2-7/1.0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A fork of Simiple Salesforce that runs on Python 2.7.",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8126350,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "192a8c59a461648dcb394d20d28c0ccaf89dbfcca0785509f523416c51f2fd11",
          "md5": "07b743b458775d15fe3e70fb34ea3fa3",
          "sha256": "071fd8dc512acdded735a0e9058f148997cdb68858ceb0211c2679da8cf4b5fa"
        },
        "downloads": -1,
        "filename": "simple-salesforce-2-7-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "07b743b458775d15fe3e70fb34ea3fa3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23209,
        "upload_time": "2020-09-06T18:49:39",
        "upload_time_iso_8601": "2020-09-06T18:49:39.264829Z",
        "url": "https://files.pythonhosted.org/packages/19/2a/8c59a461648dcb394d20d28c0ccaf89dbfcca0785509f523416c51f2fd11/simple-salesforce-2-7-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aefc6e745ffc58718965019973d4d9405b3a5985743b70b4cb5d88542f850ef5",
          "md5": "9dd06c059ae9d2d0c0180b9b65db2a45",
          "sha256": "cdb9f90f5198972639b26c62ce662f07bcdaa1c578a7395d87e85ffffcc942a2"
        },
        "downloads": -1,
        "filename": "simple-salesforce-2-7-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9dd06c059ae9d2d0c0180b9b65db2a45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23023,
        "upload_time": "2020-09-06T19:11:13",
        "upload_time_iso_8601": "2020-09-06T19:11:13.916422Z",
        "url": "https://files.pythonhosted.org/packages/ae/fc/6e745ffc58718965019973d4d9405b3a5985743b70b4cb5d88542f850ef5/simple-salesforce-2-7-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a02972b729e596d01e8728285713cc0c08a87d1595b8aa37cd94071c1a15831e",
          "md5": "bfe1297ef5baab5d3b899bf9b3eec9a4",
          "sha256": "a03ab665f62fad1c5e149c6eca1e9ecdbce70828a5b23509d49cde9b12062ac4"
        },
        "downloads": -1,
        "filename": "simple-salesforce-2-7-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bfe1297ef5baab5d3b899bf9b3eec9a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23031,
        "upload_time": "2020-09-06T20:38:50",
        "upload_time_iso_8601": "2020-09-06T20:38:50.112913Z",
        "url": "https://files.pythonhosted.org/packages/a0/29/72b729e596d01e8728285713cc0c08a87d1595b8aa37cd94071c1a15831e/simple-salesforce-2-7-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d59a6a7aac86522190b5eb64134c05b2dfc16e6f31ba314d53c80d849f38fca5",
          "md5": "6d4f37a114046ba8e28f3e5fe6005bfc",
          "sha256": "3eb097ca401fe3399c8fb522a5ba7819916aef4ffc961b29634bfc0d24e34329"
        },
        "downloads": -1,
        "filename": "simple-salesforce-2-7-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6d4f37a114046ba8e28f3e5fe6005bfc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23156,
        "upload_time": "2020-09-06T21:09:06",
        "upload_time_iso_8601": "2020-09-06T21:09:06.845907Z",
        "url": "https://files.pythonhosted.org/packages/d5/9a/6a7aac86522190b5eb64134c05b2dfc16e6f31ba314d53c80d849f38fca5/simple-salesforce-2-7-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe3af541d22f0be4ad4897e7fef2feee7ae4a7e0ec8f4543acc323f2dc6cd9ea",
          "md5": "f34073ac66c8da52a41e953f1a097a8e",
          "sha256": "1e4d984681e6e59bf35d591c1669ba9c0bda524cd20b66a53eb3ca982fdd3762"
        },
        "downloads": -1,
        "filename": "simple-salesforce-2-7-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f34073ac66c8da52a41e953f1a097a8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23158,
        "upload_time": "2020-09-06T21:47:59",
        "upload_time_iso_8601": "2020-09-06T21:47:59.256455Z",
        "url": "https://files.pythonhosted.org/packages/fe/3a/f541d22f0be4ad4897e7fef2feee7ae4a7e0ec8f4543acc323f2dc6cd9ea/simple-salesforce-2-7-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "812217236e9e4d8ac057bef042629917342fd9730a155092a44ac65ea96b7199",
          "md5": "3eeecefc611e8677ea1e90e431951b3b",
          "sha256": "d5266e25210bde324515d1123129ea7b161cba2a6b5e6cb0685124ba1df66278"
        },
        "downloads": -1,
        "filename": "simple-salesforce-2-7-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "3eeecefc611e8677ea1e90e431951b3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23172,
        "upload_time": "2020-09-06T22:05:02",
        "upload_time_iso_8601": "2020-09-06T22:05:02.049557Z",
        "url": "https://files.pythonhosted.org/packages/81/22/17236e9e4d8ac057bef042629917342fd9730a155092a44ac65ea96b7199/simple-salesforce-2-7-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "812217236e9e4d8ac057bef042629917342fd9730a155092a44ac65ea96b7199",
        "md5": "3eeecefc611e8677ea1e90e431951b3b",
        "sha256": "d5266e25210bde324515d1123129ea7b161cba2a6b5e6cb0685124ba1df66278"
      },
      "downloads": -1,
      "filename": "simple-salesforce-2-7-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "3eeecefc611e8677ea1e90e431951b3b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23172,
      "upload_time": "2020-09-06T22:05:02",
      "upload_time_iso_8601": "2020-09-06T22:05:02.049557Z",
      "url": "https://files.pythonhosted.org/packages/81/22/17236e9e4d8ac057bef042629917342fd9730a155092a44ac65ea96b7199/simple-salesforce-2-7-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}