{
  "info": {
    "author": "FMR LLC",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "[![ci](https://github.com/fidelity/textwiser/actions/workflows/ci.yml/badge.svg?branch=master)](https://github.com/fidelity/textwiser/actions/workflows/ci.yml) [![PyPI version fury.io](https://badge.fury.io/py/textwiser.svg)](https://pypi.python.org/pypi/textwiser/) [![PyPI license](https://img.shields.io/pypi/l/textwiser.svg)](https://pypi.python.org/pypi/textwiser/) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com) [![Downloads](https://static.pepy.tech/personalized-badge/textwiser?period=total&units=international_system&left_color=grey&right_color=orange&left_text=Downloads)](https://pepy.tech/project/textwiser)\n\n\n# TextWiser: Text Featurization Library\n\n[TextWiser (AAAI'21)](https://ojs.aaai.org/index.php/AAAI/article/view/17814) is a research library that provides a unified framework for text featurization based on a rich set of methods while taking advantage of pretrained models provided by the state-of-the-art libraries. \n\nThe main contributions include:\n\n* **Rich Set of Embeddings:** A wide range of available [embeddings](#available-embeddings) and [transformations](#available-transformations)\n to choose from.  \n* **Fine-Tuning:** Designed to support a ``PyTorch`` backend, and hence, retains the ability to \n[fine-tune featurizations](#fine-tuning-for-downstream-tasks) for downstream tasks. \nThat means, if you pass the resulting fine-tunable embeddings to a training method, the features will \nbe optimized automatically for your application. \n* **Parameter Optimization:** Interoperable with the standard ```scikit-learn``` pipeline for hyper-parameter tuning and rapid experimentation. All underlying parameters are exposed to the user.\n* **Grammar of Embeddings:** Introduces a novel approach to design embeddings from components. \nThe [compound embedding](#compound-embedding) allows forming arbitrarily complex embeddings in accordance with a \n[context-free grammar](https://fidelity.github.io/textwiser/compound.html#a-context-free-grammar-of-embeddings) that defines a formal language for valid text featurization.\n* **GPU Native:** Built with GPUs in mind. If it detects available hardware, the relevant models are automatically placed on the GPU. \n\nTextWiser is developed by the Artificial Intelligence Center of Excellence at Fidelity Investments. Documentation is available at [fidelity.github.io/textwiser](https://fidelity.github.io/textwiser). Here is the [video of the paper presentation at AAAI 2021](https://slideslive.com/38951112/representing-the-unification-of-text-featurization-using-a-contextfree-grammar?ref=account-folder-75501-folders). \n\n## Quick Start\n\n```python\n# Conceptually, TextWiser is composed of an Embedding, potentially with a pretrained model,\n# that can be chained into zero or more Transformations\nfrom textwiser import TextWiser, Embedding, Transformation, WordOptions, PoolOptions\n\n# Data\ndocuments = [\"Some document\", \"More documents. Including multi-sentence documents.\"]\n\n# Model: TFIDF `min_df` parameter gets passed to sklearn automatically\nemb = TextWiser(Embedding.TfIdf(min_df=1))\n\n# Model: TFIDF followed with an NMF + SVD\nemb = TextWiser(Embedding.TfIdf(min_df=1), [Transformation.NMF(n_components=30), Transformation.SVD(n_components=10)])\n\n# Model: Word2Vec with no pretraining that learns from the input data\nemb = TextWiser(Embedding.Word(word_option=WordOptions.word2vec, pretrained=None), Transformation.Pool(pool_option=PoolOptions.min))\n\n# Model: BERT with the pretrained bert-base-uncased embedding\nemb = TextWiser(Embedding.Word(word_option=WordOptions.bert), Transformation.Pool(pool_option=PoolOptions.first))\n\n# Features\nvecs = emb.fit_transform(documents)\n```\n\n### Available Embeddings\n\n| Embeddings | Notes |\n| :--------------------: | :-----: |\n| [Bag of Words (BoW)](https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html#sklearn.feature_extraction.text.CountVectorizer) | Supported by ``scikit-learn`` <br> Defaults to training from scratch|\n| [Term Frequency Inverse Document Frequency (TfIdf)](https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfVectorizer.html) | Supported by ``scikit-learn`` <br> Defaults to training from scratch|\n| [Document Embeddings (Doc2Vec)](https://radimrehurek.com/gensim/models/doc2vec.html)| Supported by ``gensim`` <br> Defaults to training from scratch |\n| [Universal Sentence Encoder (USE)](https://tfhub.dev/google/universal-sentence-encoder-large/5) | Supported by ``tensorflow``, see [requirements](requirements) <br> Defaults to [large v5](https://tfhub.dev/google/universal-sentence-encoder-large/5) |\n| [Compound Embedding](#compound-embedding) | Supported by a [context-free grammar](#a-context-free-grammar-of-embeddings)|\n| Word Embedding: [Word2Vec](https://github.com/zalandoresearch/flair/blob/master/resources/docs/embeddings/CLASSIC_WORD_EMBEDDINGS.md) | Supported by these [pretrained embeddings](https://github.com/zalandoresearch/flair/blob/master/resources/docs/embeddings/CLASSIC_WORD_EMBEDDINGS.md) <br> Common pretrained options include ``crawl``, ``glove``, ``extvec``, ``twitter``, and ``en-news`` <br> When the pretrained option is ``None``, trains a new model from the given data <br> Defaults to ``en``, FastText embeddings trained on news |\n| Word Embedding: [Character](https://github.com/zalandoresearch/flair/blob/master/resources/docs/TUTORIAL_3_WORD_EMBEDDING.md#character-embeddings)| Initialized randomly and not pretrained <br> Useful when trained for a downstream task <br> Enable [fine-tuning](#fine-tuning-for-downstream-tasks) to get good embeddings |\n| Word Embedding: [BytePair](https://github.com/zalandoresearch/flair/blob/master/resources/docs/embeddings/BYTE_PAIR_EMBEDDINGS.md) | Supported by these [pretrained embeddings](https://nlp.h-its.org/bpemb/#download>) <br> Pretrained options can be specified with the string ``<lang>_<dim>_<vocab_size>`` <br> Default options can be omitted like ``en``, ``en_100``, or ``en__10000`` <br> Defaults to ``en``, which is equal to ``en_100_10000`` |\n| Word Embedding: [ELMo](https://tfhub.dev/google/elmo/3) | Supported by these [pretrained embeddings](https://tfhub.dev/google/elmo/3) from TensorflowHub <br> Defaults to ``original`` |\n| Word Embedding: [Flair](https://github.com/zalandoresearch/flair/blob/master/resources/docs/embeddings/FLAIR_EMBEDDINGS.md) |  Supported by these [pretrained embeddings](https://github.com/zalandoresearch/flair/blob/master/resources/docs/embeddings/FLAIR_EMBEDDINGS.md) <br> Defaults to ``news-forward-fast`` |\n| Word Embedding: [BERT](https://github.com/huggingface/transformers#model-architectures)| Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``bert-base-uncased`` |\n| Word Embedding: [OpenAI GPT](https://github.com/huggingface/transformers#model-architectures)| Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``openai-gpt`` |\n| Word Embedding: [OpenAI GPT2](https://github.com/huggingface/transformers#model-architectures) |Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``gpt2-medium`` |\n| Word Embedding: [TransformerXL](https://github.com/huggingface/transformers#model-architectures) |Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``transfo-xl-wt103`` |\n| Word Embedding: [XLNet](https://github.com/huggingface/transformers#model-architectures)|Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``xlnet-large-cased`` |\n| Word Embedding: [XLM](https://github.com/huggingface/transformers#model-architectures)|Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``xlm-mlm-en-2048`` |\n| Word Embedding: [RoBERTa](https://github.com/huggingface/transformers#model-architectures) |Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``roberta-base`` |\n| Word Embedding: [DistilBERT](https://github.com/huggingface/transformers#model-architectures) | Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``distilbert-base-uncased`` |\n| Word Embedding: [CTRL](https://github.com/huggingface/transformers#model-architectures) | Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``ctrl`` |\n| Word Embedding: [ALBERT](https://github.com/huggingface/transformers#model-architectures) | Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``albert-base-v2`` |\n| Word Embedding: [T5](https://github.com/huggingface/transformers#model-architectures) | Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``t5-base`` |\n| Word Embedding: [XLM-RoBERTa](https://github.com/huggingface/transformers#model-architectures) | Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``xlm-roberta-base`` |\n| Word Embedding: [BART](https://github.com/huggingface/transformers#model-architectures) | Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``facebook/bart-base`` |\n| Word Embedding: [ELECTRA](https://github.com/huggingface/transformers#model-architectures) | Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``google/electra-base-generator`` |\n| Word Embedding: [DialoGPT](https://github.com/huggingface/transformers#model-architectures) | Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``microsoft/DialoGPT-small`` |\n| Word Embedding: [Longformer](https://github.com/huggingface/transformers#model-architectures) | Supported by these [pretrained embeddings](https://huggingface.co/transformers/pretrained_models.html) <br> Defaults to ``allenai/longformer-base-4096`` |\n\n### Available Transformations\n\n| Transformations | Notes |\n| :---------------: | :-----: |\n| [Singular Value Decomposition (SVD)](https://pytorch.org/docs/stable/torch.html#torch.svd) | Differentiable |\n| [Latent Dirichlet Allocation (LDA)](https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.LatentDirichletAllocation.html#sklearn.decomposition.LatentDirichletAllocation) | Not differentiable |\n| [Non-negative Matrix Factorization (NMF)](https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.NMF.html#sklearn.decomposition.NMF) | Not differentiable |\n| [Uniform Manifold Approximation and Projection (UMAP)](https://umap-learn.readthedocs.io/en/latest/parameters.html) | Not differentiable |  \n| Pooling Word Vectors | Applies to word embeddings only <br> Reduces word-level vectors to document-level <br> Pool options include ``max``, ``min``, ``mean``, ``first``, and ``last`` <br> Defaults to ``max`` |\n\n## Usage Examples\nExamples can be found under the [notebooks](notebooks) folder.\n\n## Installation\nTextWiser requires **Python 3.6+** and can be installed from PyPI using ``pip install textwiser``, using ``pip install textwiser[full]`` to install from PyPI with all optional dependencies, or by building from source by following the instructions\nin our [documentation](https://fidelity.github.io/textwiser/installation.html).\n\n## Compound Embedding\nA unique research contribution of TextWiser lies in its novel approach in creating embeddings from components, \ncalled the Compound Embedding. \n\nThis method allows forming arbitrarily complex embeddings, thanks to a \ncontext-free grammar that defines a formal language for valid text featurization. You can see the details\nin our [documentation](https://fidelity.github.io/textwiser/compound.html) and in the [usage example](notebooks/basic_usage_example.ipynb).\n\n## Fine-Tuning for Downstream Tasks\nAll Word2Vec and transformer-based embeddings and any embedding followed with an ``svd`` transformation are fine-tunable for downstream tasks. \nIn other words, if you pass the resulting fine-tunable embedding to a PyTorch training method, the features will automatically \nbe trained for your application. You can see the details in our [documentation](https://fidelity.github.io/textwiser/fine_tuning.html)\nand in the [usage example](notebooks/finetune_example.ipynb).\n\n## Tokenization\nIn general, text data should be **whitespace-tokenized** before being fed into TextWiser. \nCustomized tokenization is also supported as described in more detail \nin our [documentation](https://fidelity.github.io/textwiser/fine_tuning.html)\n\n## Support\n\nPlease submit bug reports, questions and feature requests as [Issues](https://github.com/fidelity/textwiser/issues).\n\n## Citation\n\nIf you use TextWiser in a publication, please cite it as:\n\n```bibtex\n  @article{textwiser2021,\n    author={Kilitcioglu, Doruk and Kadioglu, Serdar},\n    title={Representing the Unification of Text Featurization using a Context-Free Grammar},\n    url={https://github.com/fidelity/textwiser},\n    journal={Proceedings of the AAAI Conference on Artificial Intelligence},\n    volume={35},\n    number={17},\n    year={2021},\n    month={May},\n    pages={15439-15445}\n  }\n```\n\n## License\nTextWiser is licensed under the [Apache License 2.0](LICENSE).\n\n<br>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fidelity/textwiser",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "textwiser",
    "package_url": "https://pypi.org/project/textwiser/",
    "platform": null,
    "project_url": "https://pypi.org/project/textwiser/",
    "project_urls": {
      "Documentation": "https://fidelity.github.io/textwiser/",
      "Homepage": "https://github.com/fidelity/textwiser",
      "Source": "https://github.com/fidelity/textwiser"
    },
    "release_url": "https://pypi.org/project/textwiser/1.5.0/",
    "requires_dist": [
      "numpy",
      "flair (>=0.9)",
      "gensim (>=4.0)",
      "scikit-learn (>=0.23.2)",
      "torch (>=1.1.0)",
      "transformers (>=4.0)",
      "tensorflow (>=2.0.0) ; extra == 'full'",
      "tensorflow-hub (>=0.7.0) ; extra == 'full'",
      "umap-learn (>=0.5.1) ; extra == 'full'"
    ],
    "requires_python": ">=3.6",
    "summary": "TextWiser: Text Featurization Library",
    "version": "1.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16501403,
  "releases": {
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7808fadc7c9ac0196c30dc7983638e3617b6395639292a8b849ba4c8fd4e93c",
          "md5": "d598159ab374c0e8869cfb21e9439293",
          "sha256": "e6fa4f5259d316c75146ebe56787fd4d734d398b7a8ad8338b219a393253d549"
        },
        "downloads": -1,
        "filename": "textwiser-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d598159ab374c0e8869cfb21e9439293",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 36982,
        "upload_time": "2020-08-11T18:00:17",
        "upload_time_iso_8601": "2020-08-11T18:00:17.769829Z",
        "url": "https://files.pythonhosted.org/packages/e7/80/8fadc7c9ac0196c30dc7983638e3617b6395639292a8b849ba4c8fd4e93c/textwiser-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08807f95e895394d6ad7e6ef766a96bed502d630fde5be11aa9e091da042dd9d",
          "md5": "a2cdcb4343f31395ecc97c6c205f4f2a",
          "sha256": "7fb5a2408d5584119f1a65465ae70964dadc44a8a4ad54b576549d9593d8ecf4"
        },
        "downloads": -1,
        "filename": "textwiser-1.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2cdcb4343f31395ecc97c6c205f4f2a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 36989,
        "upload_time": "2021-01-22T15:58:26",
        "upload_time_iso_8601": "2021-01-22T15:58:26.159402Z",
        "url": "https://files.pythonhosted.org/packages/08/80/7f95e895394d6ad7e6ef766a96bed502d630fde5be11aa9e091da042dd9d/textwiser-1.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4501f8de04dd336ac8d82617b638797dd420d17d0e42e1d8f1706ad1095116a4",
          "md5": "a70dfbe6fc030d898dca7b7ab71bde49",
          "sha256": "4446c3f2ae8cbc7726b9040254b21a139df3e44f30d33d629a15a0243c502b61"
        },
        "downloads": -1,
        "filename": "textwiser-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a70dfbe6fc030d898dca7b7ab71bde49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26712,
        "upload_time": "2021-01-22T15:58:27",
        "upload_time_iso_8601": "2021-01-22T15:58:27.483443Z",
        "url": "https://files.pythonhosted.org/packages/45/01/f8de04dd336ac8d82617b638797dd420d17d0e42e1d8f1706ad1095116a4/textwiser-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a429d84e53e41f9baae9363180721d07d1512a4ec048a03a56295bf06a7f507",
          "md5": "b7f8c86bb0452b4e17fd97dcf83796f5",
          "sha256": "778ffd95c40d0ce5635e40fb54cf13c0c73ac4d65a3cdfaa1404dff6efac6def"
        },
        "downloads": -1,
        "filename": "textwiser-1.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7f8c86bb0452b4e17fd97dcf83796f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 37739,
        "upload_time": "2022-02-24T20:34:21",
        "upload_time_iso_8601": "2022-02-24T20:34:21.888996Z",
        "url": "https://files.pythonhosted.org/packages/5a/42/9d84e53e41f9baae9363180721d07d1512a4ec048a03a56295bf06a7f507/textwiser-1.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae10ad04fbca5cedce0b310edce50606b05cad4f43678981526bbd7b025d536e",
          "md5": "870b7ca2207f25357521ea91eaa394a5",
          "sha256": "2573eb8237891e15770dc4a9ef9ec4687a3f59c899cc518711da7f02d51ee03b"
        },
        "downloads": -1,
        "filename": "textwiser-1.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "870b7ca2207f25357521ea91eaa394a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32900,
        "upload_time": "2022-02-24T20:34:23",
        "upload_time_iso_8601": "2022-02-24T20:34:23.823762Z",
        "url": "https://files.pythonhosted.org/packages/ae/10/ad04fbca5cedce0b310edce50606b05cad4f43678981526bbd7b025d536e/textwiser-1.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "876d8a6569d3be28eaea1c1c54d0b105b70bcf873a9f04d8a650676ea3429d8c",
          "md5": "6802cab9e850aa9ac3bac46e5ab79ee7",
          "sha256": "9b880e9246cbcc4f261a98439e2f61dc32d9135e8967d33ebada7b6e6cecbe00"
        },
        "downloads": -1,
        "filename": "textwiser-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6802cab9e850aa9ac3bac46e5ab79ee7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40334,
        "upload_time": "2022-06-07T22:24:07",
        "upload_time_iso_8601": "2022-06-07T22:24:07.300107Z",
        "url": "https://files.pythonhosted.org/packages/87/6d/8a6569d3be28eaea1c1c54d0b105b70bcf873a9f04d8a650676ea3429d8c/textwiser-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e8a7a0cf3fee32ca9626cc5698c6ac8b711a09d8da0710968aba81095fb046c",
          "md5": "dbed8ec90f893baed0535bcf766d1277",
          "sha256": "22da9967e2af8c4216a1d000eb0d95feb2666466ed1e74ff2cc8c8d23b6347f5"
        },
        "downloads": -1,
        "filename": "textwiser-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dbed8ec90f893baed0535bcf766d1277",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35317,
        "upload_time": "2022-06-07T22:24:09",
        "upload_time_iso_8601": "2022-06-07T22:24:09.061101Z",
        "url": "https://files.pythonhosted.org/packages/5e/8a/7a0cf3fee32ca9626cc5698c6ac8b711a09d8da0710968aba81095fb046c/textwiser-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0aab386efe4582c71e96bdf99b2eb69b09a97dfe2ccd4ce902ec4106d046b17",
          "md5": "060bb29dfec015fbf9fbab8c7e57c12c",
          "sha256": "40f00ec8f75e2acae1ba7db058abf8243d8369cbed994be43253b18668895e82"
        },
        "downloads": -1,
        "filename": "textwiser-1.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "060bb29dfec015fbf9fbab8c7e57c12c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40041,
        "upload_time": "2022-12-23T15:00:19",
        "upload_time_iso_8601": "2022-12-23T15:00:19.657001Z",
        "url": "https://files.pythonhosted.org/packages/b0/aa/b386efe4582c71e96bdf99b2eb69b09a97dfe2ccd4ce902ec4106d046b17/textwiser-1.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ceab3fe7989262ed531be83a1f7a746fe11894f21c694972eaddeead5d0de9a",
          "md5": "586ceb5b7cf295215d76c4da9e3a1561",
          "sha256": "a39cf2b30bfbd9904eeee2a6d260d51d4115e5a7f76e34992c7629e2d7850d16"
        },
        "downloads": -1,
        "filename": "textwiser-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "586ceb5b7cf295215d76c4da9e3a1561",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35218,
        "upload_time": "2022-12-23T15:00:21",
        "upload_time_iso_8601": "2022-12-23T15:00:21.741972Z",
        "url": "https://files.pythonhosted.org/packages/1c/ea/b3fe7989262ed531be83a1f7a746fe11894f21c694972eaddeead5d0de9a/textwiser-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b0aab386efe4582c71e96bdf99b2eb69b09a97dfe2ccd4ce902ec4106d046b17",
        "md5": "060bb29dfec015fbf9fbab8c7e57c12c",
        "sha256": "40f00ec8f75e2acae1ba7db058abf8243d8369cbed994be43253b18668895e82"
      },
      "downloads": -1,
      "filename": "textwiser-1.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "060bb29dfec015fbf9fbab8c7e57c12c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 40041,
      "upload_time": "2022-12-23T15:00:19",
      "upload_time_iso_8601": "2022-12-23T15:00:19.657001Z",
      "url": "https://files.pythonhosted.org/packages/b0/aa/b386efe4582c71e96bdf99b2eb69b09a97dfe2ccd4ce902ec4106d046b17/textwiser-1.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ceab3fe7989262ed531be83a1f7a746fe11894f21c694972eaddeead5d0de9a",
        "md5": "586ceb5b7cf295215d76c4da9e3a1561",
        "sha256": "a39cf2b30bfbd9904eeee2a6d260d51d4115e5a7f76e34992c7629e2d7850d16"
      },
      "downloads": -1,
      "filename": "textwiser-1.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "586ceb5b7cf295215d76c4da9e3a1561",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 35218,
      "upload_time": "2022-12-23T15:00:21",
      "upload_time_iso_8601": "2022-12-23T15:00:21.741972Z",
      "url": "https://files.pythonhosted.org/packages/1c/ea/b3fe7989262ed531be83a1f7a746fe11894f21c694972eaddeead5d0de9a/textwiser-1.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}