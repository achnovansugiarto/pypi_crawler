{
  "info": {
    "author": "klae01",
    "author_email": "tspt2479@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: C++",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\n# buffered_pipe\nBuffered pipe through shared memory.\n\n## core features\n- `Pipe`: alias for `Generic_Pipe`\n- `Generic_Pipe`: free-length data, bytes or picklable\n- `Static_Pipe`: fixed length data, only bytes supported\n\n## install\n--------------------\n```shell\npip install buffered-pipe\n```\n\n## usage\n--------------------\n\n- Generic_Pipe\n```python\nimport multiprocessing\nimport threading\n\nfrom buffered_pipe import Generic_Pipe\n\n\ndef foo(barrier, pipe_send):\n    pipe_send.register()\n    barrier.wait()\n    pipe_send.send(\"Hello, world!\")\n\n\ndef bar(barrier, pipe_recv):\n    pipe_recv.register()\n    barrier.wait()\n    print(pipe_recv.recv())\n\n\nif __name__ == \"__main__\":\n    barrier = multiprocessing.Barrier(3)\n    pipe_recv, pipe_send = Generic_Pipe(\n        buffer_size=2048, duplex=False\n    )\n    P = multiprocessing.Process(target=foo, args=(barrier, pipe_send))\n    T = threading.Thread(target=bar, args=(barrier, pipe_recv))\n    P.start()\n    T.start()\n    barrier.wait()\n    P.join()\n    T.join()\n```\n\n- Static_Pipe\n```python\nimport multiprocessing\nimport threading\n\nfrom buffered_pipe import Static_Pipe\n\n\ndef foo(barrier, pipe_send):\n    pipe_send.register()\n    barrier.wait()\n    ret_string = \"Hello, world!\"\n    ret_string = ret_string + \" \" * (32 - len(ret_string))\n    ret_string = ret_string.encode()\n    pipe_send.send(ret_string)\n\n\ndef bar(barrier, pipe_recv):\n    pipe_recv.register()\n    barrier.wait()\n    ret_string = pipe_recv.recv()\n    print(ret_string.decode())\n\n\nif __name__ == \"__main__\":\n    barrier = multiprocessing.Barrier(3)\n    pipe_recv, pipe_send = Static_Pipe(object_size=32, object_count=16, duplex=False)\n    P = multiprocessing.Process(target=foo, args=(barrier, pipe_send))\n    T = threading.Thread(target=bar, args=(barrier, pipe_recv))\n    P.start()\n    T.start()\n    barrier.wait()\n    P.join()\n    T.join()\n```\n\n- When you create a `process` or `thread`, call `register` of `Pipe`\n- The `buffer_size` of `Generic_Pipe` is in `bytes`.\n- The `object_size` of `Static_Pipe` is in `bytes`.\n- `object_count` in `Static_Pipe` is the maximum number of objects placed in the buffer.\n- `duplex` is equivalent to `multiprocessing.Pipe`.\n\n\n## tests\n--------------\n```shell\n> benchmark_result.txt\nfor f in benchmarks/*.py; do python3 \"$f\" &>> benchmark_result.txt; done\n> test_result.txt\nfor f in tests/*.py; do python3 \"$f\" &>> test_result.txt; done\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/klae01/buffered_pipe",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "buffered-pipe",
    "package_url": "https://pypi.org/project/buffered-pipe/",
    "platform": null,
    "project_url": "https://pypi.org/project/buffered-pipe/",
    "project_urls": {
      "Homepage": "https://github.com/klae01/buffered_pipe"
    },
    "release_url": "https://pypi.org/project/buffered-pipe/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7.0",
    "summary": "Buffered pipe through shared memory.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13523642,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76e97a565e77601bd86e647b385cf1f28dc01e25044ed8ee57e021cdce5e785d",
          "md5": "c2a14e6898fc9661b794064041840612",
          "sha256": "3cf5758bc539665891e1696728bf655a989e01611282a3c610121c073d56aa68"
        },
        "downloads": -1,
        "filename": "buffered_pipe-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c2a14e6898fc9661b794064041840612",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 7965,
        "upload_time": "2022-03-27T13:34:07",
        "upload_time_iso_8601": "2022-03-27T13:34:07.740171Z",
        "url": "https://files.pythonhosted.org/packages/76/e9/7a565e77601bd86e647b385cf1f28dc01e25044ed8ee57e021cdce5e785d/buffered_pipe-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13ca88ac9ba03ccba7bf74989682e015030e5bbfff40d8160b665390e158f524",
          "md5": "48fd5875984962fa4e9844c59588ae17",
          "sha256": "bebe659c1709c7042fb5dd3a5e6794e634340fc027edec607306e3bdb0d0a6d7"
        },
        "downloads": -1,
        "filename": "buffered_pipe-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "48fd5875984962fa4e9844c59588ae17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 11457,
        "upload_time": "2022-04-15T09:56:06",
        "upload_time_iso_8601": "2022-04-15T09:56:06.428914Z",
        "url": "https://files.pythonhosted.org/packages/13/ca/88ac9ba03ccba7bf74989682e015030e5bbfff40d8160b665390e158f524/buffered_pipe-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "13ca88ac9ba03ccba7bf74989682e015030e5bbfff40d8160b665390e158f524",
        "md5": "48fd5875984962fa4e9844c59588ae17",
        "sha256": "bebe659c1709c7042fb5dd3a5e6794e634340fc027edec607306e3bdb0d0a6d7"
      },
      "downloads": -1,
      "filename": "buffered_pipe-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "48fd5875984962fa4e9844c59588ae17",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.0",
      "size": 11457,
      "upload_time": "2022-04-15T09:56:06",
      "upload_time_iso_8601": "2022-04-15T09:56:06.428914Z",
      "url": "https://files.pythonhosted.org/packages/13/ca/88ac9ba03ccba7bf74989682e015030e5bbfff40d8160b665390e158f524/buffered_pipe-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}