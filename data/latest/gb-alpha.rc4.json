{
  "info": {
    "author": "Gameball",
    "author_email": "support@gameball.co",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# **Gameball Python SDK**\n---\nThe Gameball Python SDK provides convinient access to the Gameball API frpm applicatopns written in the Python langauage. \n## Documentation\n---\nPlease refer to the  [Gameball API docs](https://docs.gameball.co).\n## Installation\n---\nYou don't need this source code unless you want to modify the SDK. If you just\nwant to use the SDK, just run:\n```py\npip install gameball\n```\n### Requirements\n-   Python 3.4+ (PyPy supported)\n-   Requests library 2.20 and later\n## Usage\n---\nThe SDK needs to be configured with your account's API & Transaction keys available in your [Gameball Dashboard](https://help.gameball.co/en/articles/3467114-get-your-account-integration-details-api-key-and-transaction-key)\n\n```py\nimport gameball\ngameball.api_key = \"gb_test_...\"\ngameball.transaction_key = \"gb_test_...\"\n```\n\n### Commands:\n```py\n# creates a new player with the given player attributes.\ngameball.initialize_player(player)\n\n# performs action based on event triggered by users.\ngameball.send_event(event)\n\n# refers a new user through player with the given player code.\ngameball.create_referral(referral)\n\n# obtains player's balance value.\ngameball.get_player_balance(player_unique_id)\n\n# holds a specific amount of points from the playerâ€™s points balance. \ngameball.hold_points(player_unique_id, amount, transaction_time)\n\n# enables the player to use Gameball points as a payment method since it can be substituted for monetary values.\ngameball.redeem_points(player_unique_id, amount, transaction_time, hold_reference, transaction_on_client_system_id) \n\n# cancels a purchase reward or refund a points redemption transactions in Gameball.\ngameball.reverse_transaction(player_unique_id, transaction_time, transaction_on_client_system_id, reversed_transaction_on_client_system_id)\n\n# cancels previously held points identified by the given hold reference.\ngameball.reverse_hold(player_unique_id, hold_reference, transaction_time) \n\n# rewards a player with points equivalent to the given amount.\ngameball.reward_points(player_unique_id, amount, transaction_time, transaction_on_client_system_id, player_attributes = {})\n\n# obtains player's information.\ngameball.get_player_info(player_unique_id, lannguage= None)\n\n# performs action based on event triggered by users or transactions.\ngameball.send_action(action)\n\n# create discount coupon to a specific user\ngameball.create_discount_coupon(coupon)\n\n# redeems discount coupon by a specific user\ngameball.redeem_discount_coupon(player_unique_id, code, transaction_time)\n\n# validates discount coupon by a specific user\ngameball.validate_discount_coupon(player_unique_id, code, transaction_time)\n```\n### Examples\n#### Sending an Event Example\n```py\n# Example 1\nimport gameball\ngameball.api_key = \"gb_test_...\"\n\nevent_request = gameball.eventObject(player_unique_id= \"player123\")\nevent_request.add_event(\"place_order\",\n    {\"total_amount\":100,\n        \"category\":[\n        \"electronics\",\n        \"cosmetics\"]\n    }\n)\nevent_request.add_event(\"review\")\nsend_event_response = gameball.send_event(event_request)\n\n\n# Example 2\nimport gameball\ngameball.api_key = \"gb_test_...\"\n\nevent_request = gameball.eventObject(player_unique_id= \" player123\")\nevent_request.add_event(\"reserve\", {\"rooms\" : 2})\nevent_request.add_player_attribute(\"displayName\", \" Jon Snow\")\nevent_request.add_player_attribute(\"email\", \"jon.snow@example.com\")\nevent_request.add_player_attribute(\"dateOfBirth\", \"1980-09-19T00:00:00.000Z\")\nevent_request.add_player_attribute(\"joinDate\",\"2019-09-19T21:06:29.158Z\")\nsend_event_response = gameball.send_event(event_request)\n\n\n# Example 3\nimport gameball\ngameball.api_key = \"gb_test_...\"\n\nevent_request = gameball.eventObject(player_unique_id= \" player123\")\nevent_request.add_event(\"reserve\", {\"rooms\" : 2})\nevent_request.add_player_attribute(\"displayName\", \" Jon Snow\")\nevent_request.add_player_attribute(\"email\", \"jon.snow@example.com\")\nevent_request.add_player_attribute(\"dateOfBirth\", \"1980-09-19T00:00:00.000Z\")\nevent_request.add_player_attribute(\"joinDate\", \"2019-09-19T21:06:29.158Z\")\nevent_request.add_custom_player_attribute(\"location\", \"Miami\")\nevent_request.add_custom_player_attribute(\"graduationDate\", \"2018-07-04T21:06:29.158Z\")\nevent_request.add_custom_player_attribute(\"isMarried\", False)\nsend_event_response = gameball.send_event(event_request)\n```\n#### Create a Referral Example\n```py\n# Example 1\nimport gameball\ngameball.api_key = \"gb_test_...\"\n\nreferral_request = gameball.referralObject(player_code = \"CODE11\", player_unique_id = \"player456\")\nreferral_response = gameball.create_referral(referral_request)\n\n\n# Example 2\nimport gameball\ngameball.api_key = \"gb_test_...\"\n\nreferral_request = gameball.referralObject(player_code = \"CODE11\", player_unique_id = \"player456\")\nreferral_request.add_player_attribute(\"displayName\", \" Tyrion Lannister\")\nreferral_request.add_player_attribute(\"firstName\", \"Tyrion\")\nreferral_request.add_player_attribute(\"lastName\", \"Lannister\")\nreferral_request.add_player_attribute(\"email\", \"tyrion@example.com\")\nreferral_request.add_player_attribute(\"gender\", \"M\")\nreferral_request.add_player_attribute(\"dateOfBirth\", \"1978-01-11T00:00:00.000Z\")\nreferral_request.add_player_attribute(\"joinDate\", \"2019-09-19T21:06:29.158Z\")\nreferral_request.add_custom_player_attribute(\"location\", \"Miami\")\nreferral_request.add_custom_player_attribute(\"graduationDate\", \"2018-07-04T21:06:29.158Z\")\nreferral_request.add_custom_player_attribute(\"isMarried\", False)\nreferral_response = gameball.create_referral(referral_request)\n```\n#### Reward Examples\n```py\n#Example 1\nimport gameball\ngameball.api_key = \"gb_test_...\"\ngameball.transaction_key = \"gb_test_...\"\n\nreward_request = gameball.rewardObject(player_unique_id= \"player123\", amount= 99.98, transaction_id= \"tra_123456789\")\nreward_response = gameball.reward_points(reward_request)\n\n\n#Example 2\nimport gameball\ngameball.api_key = \"gb_test_...\"\ngameball.transaction_key = \"gb_test_...\"\n\nreward_request = gameball.rewardObject(player_unique_id= \"player456\", amount= 2500, transaction_id= \"tra_123456789\")\nreward_request.add_player_attribute(\"displayName\", \" Tyrion Lannister\")\nreward_request.add_player_attribute(\"firstName\", \"Tyrion\")\nreward_request.add_player_attribute(\"lastName\", \"Lannister\")\nreward_request.add_player_attribute(\"email\", \"tyrion@example.com\")\nreward_request.add_player_attribute(\"gender\", \"M\")\nreward_request.add_player_attribute(\"dateOfBirth\", \"1978-01-11T00:00:00.000Z\")\nreward_request.add_player_attribute(\"joinDate\", \"2019-09-19T21:06:29.158Z\")\nreward_request.add_custom_player_attribute(\"location\", \"Miami\")\nreward_request.add_custom_player_attribute(\"graduationDate\", \"2018-07-04T21:06:29.158Z\")\nreward_request.add_custom_player_attribute(\"isMarried\", False)\nreward_response = gameball.reward_points(reward_request)\n```\n#### Get Player Balance Example \n```py\nimport gameball\ngameball.api_key = \"gb_test_...\"\ngameball.transaction_key = \"gb_test_...\"\n\nbalance_response = gameball.get_player_balance(player_unique_id= \"player456\")\n```\n#### Hold Points Example \n```py\nimport gameball\ngameball.api_key = \"gb_test_...\"\ngameball.transaction_key = \"gb_test_...\"\n\nhold_response = gameball.hold_points(player_unique_id= \"player456\", amount= 98.89)\n```\n#### Redeem Example \n```py\nimport gameball\ngameball.api_key = \"gb_test_...\"\ngameball.transaction_key = \"gb_test_...\"\n\nredeem_response = gameball.redeem_points(player_unique_id= \"player456\",\n                                        hold_reference= \"2342452352435234\", transaction_id= \"tra_123456789\")\n\n```\n#### Reverse Transaction Example\n```py\nimport gameball\ngameball.api_key = \"gb_test_...\"\ngameball.transaction_key = \"gb_test_...\"\n\nreverse_transaction_response = gameball.reverse_transaction(player_unique_id= \"player456\",transaction_id= \"1234567890\",\n                                                            reversed_transaction_id= '234567891')\n```\n#### Reverse Hold Example\n```py\nimport gameball\ngameball.api_key = \"gb_test_...\"\ngameball.transaction_key = \"gb_test_...\"\n\nreverse_hold_response = gameball.reverse_hold(player_unique_id= \"player456\", hold_reference= \"9245fe4a-d402-451c-b9ed-9c1a04247482\")\n```\n#### Sending an Action Example\n```py\n# Example 1\nimport gameball\ngameball.api_key = \"gb_test_...\"\ngameball.transaction_key = \"gb_test_...\"\n\naction_request = gameball.actionObject(player_unique_id= \"151515\")\naction_request.add_player_attribute(\"displayName\", \"Python_v2\")\naction_request.add_player_attribute(\"name\",\"Mohamad\")\naction_request.add_points_transaction(transaction_id= \"810008204529\", reward_amount= 20)\naction_response = gameball.send_action(action_request)\n\n\n# Example 2\nimport gameball\ngameball.api_key = \"gb_test_...\"\ngameball.transaction_key = \"gb_test_...\"\n\naction_request = gameball.actionObject(player_unique_id = \"151515\")\naction_request.add_event(\"place_order\", {\"total_price\":1500})\naction_request.add_event(\"view_product_page\")\naction_request.add_points_transaction(transaction_id= \"810008204529\", hold_reference=\"1f306d48-706d-4e26-aeac-b3718ae7e5e2\")\naction_response = gameball.send_action(action_request)\n\n\n# Example 3\nimport gameball\ngameball.api_key = \"gb_test_...\"\ngameball.transaction_key = \"gb_test_...\"\n\naction_request = gameball.actionObject(player_unique_id = \"151515\")\naction_request.add_player_attribute(\"displayName\", \"Python_v2\")\naction_request.add_player_attribute(\"name\",\"Mohamad\")\naction_request.add_event(\"place_order\", {\"total_price\":1500})\naction_request.add_event(\"view_product_page\")\naction_request.add_points_transaction(transaction_id= \"810008204529\", reward_amount=20, hold_reference=\"1f306d48-706d-b3718ae7e5e2\")\naction_response = gameball.send_action(action_request)\n```\n#### Get Player Info Example\n```py\n# Example 1\nimport gameball\ngameball.api_key = \"gb_test_...\"\ngameball.transaction_key = \"gb_test_...\"\n\nplayer_info_response = gameball.get_player_info(player_unique_id= 17315)\n\n\n# Example 2\nimport gameball\ngameball.api_key = \"gb_test_...\"\ngameball.transaction_key = \"gb_test_...\"\n\nplayer_info_response = gameball.get_player_info(player_unique_id= 17315, language= gameball.Languages.Arabic)\n\n```\n#### Initialize Player Example\n```py\nimport gameball\ngameball.api_key = \"gb_test_...\"\n\nplayer_request = gameball.playerObject(\" player123\")\nplayer_request.add_player_attribute(\"displayName\", \" Jon Snow\")\nplayer_request.add_player_attribute(\"email\", \"jon.snow@example.com\")\nplayer_request.add_player_attribute(\"dateOfBirth\", \"1980-09-19T00:00:00.000Z\")\nplayer_request.add_player_attribute(\"joinDate\", \"2019-09-19T21:06:29.158Z\")\nplayer_response = gameball.initialize_player(player_request)\n```\n\n### Handling exceptions\nUnsuccessful requests raise exceptions. The raised exception will reflect the sort of error that occurred with appropriate message and error code . Please refer to the  [Gameball API docs](https://docs.gameball.co).\n## Contribution\n---\nThe master branch of this repository contains the latest stable release of the SDK.\n## Contact\n---\nFor usage questions\\suggestions drop us an email at support[ at ]gameball.co. Please report any bugs as issues.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gameballers/gameball-python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gb-alpha",
    "package_url": "https://pypi.org/project/gb-alpha/",
    "platform": "",
    "project_url": "https://pypi.org/project/gb-alpha/",
    "project_urls": {
      "Homepage": "https://github.com/gameballers/gameball-python"
    },
    "release_url": "https://pypi.org/project/gb-alpha/3.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.4",
    "summary": "Gameball Python SDK provides convinient access to the Gameball API frpm applications written in the Python langauage",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12815346,
  "releases": {
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85c17f1007be408f699d571f0d351f2e791f5aefeb624873c40d6426b1a0a2b4",
          "md5": "a06fa24b569760d1941ccf26fedabdb5",
          "sha256": "2befd48a4f5e1541aa293a9d7cbed7ee0d08bf004dfb6556a30b5387e5b100c9"
        },
        "downloads": -1,
        "filename": "gb_alpha-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a06fa24b569760d1941ccf26fedabdb5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 17717,
        "upload_time": "2020-08-23T14:29:50",
        "upload_time_iso_8601": "2020-08-23T14:29:50.146802Z",
        "url": "https://files.pythonhosted.org/packages/85/c1/7f1007be408f699d571f0d351f2e791f5aefeb624873c40d6426b1a0a2b4/gb_alpha-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f13782977d1320aeea4b77346974c898f004876371867494fb90cff4b93ab90b",
          "md5": "40eb1c5df81de76e514e7f813ec7b952",
          "sha256": "a28f1eba232b70e64705e964042c2554fdf376b78300431c7992e7302bc77fdc"
        },
        "downloads": -1,
        "filename": "gb-alpha-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "40eb1c5df81de76e514e7f813ec7b952",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 14586,
        "upload_time": "2020-08-23T14:30:00",
        "upload_time_iso_8601": "2020-08-23T14:30:00.966779Z",
        "url": "https://files.pythonhosted.org/packages/f1/37/82977d1320aeea4b77346974c898f004876371867494fb90cff4b93ab90b/gb-alpha-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e090dc5816c1562b6c6a2eff9144ec5c12cf217bce85f4953a4a7167ee253077",
          "md5": "48aa758c4f669e0c3426eae7508e0f5b",
          "sha256": "86ab9f62f01a09ead23bb2e358ec4f377578a63cf0272cbf3a4064afae32fa77"
        },
        "downloads": -1,
        "filename": "gb_alpha-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "48aa758c4f669e0c3426eae7508e0f5b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 17708,
        "upload_time": "2020-08-23T14:32:19",
        "upload_time_iso_8601": "2020-08-23T14:32:19.557661Z",
        "url": "https://files.pythonhosted.org/packages/e0/90/dc5816c1562b6c6a2eff9144ec5c12cf217bce85f4953a4a7167ee253077/gb_alpha-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "617eee86e58a27775734d96a963d17e384bdc0695175a037ddfeed400c80560f",
          "md5": "237c078ac9d7be907c38b698cc34b977",
          "sha256": "f90e34341f350f11c384800772ae07d24c81a58c9304c7fe3a7a7ef17a7ccf04"
        },
        "downloads": -1,
        "filename": "gb-alpha-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "237c078ac9d7be907c38b698cc34b977",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 14552,
        "upload_time": "2020-08-23T14:32:30",
        "upload_time_iso_8601": "2020-08-23T14:32:30.818176Z",
        "url": "https://files.pythonhosted.org/packages/61/7e/ee86e58a27775734d96a963d17e384bdc0695175a037ddfeed400c80560f/gb-alpha-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76fa851fefdc096f83deb5d9d30ff37f00b726a80f041bf22052dfe7ad7c2df2",
          "md5": "0062a6c4add8b9fd6b94ad606ffebbad",
          "sha256": "2e239c2e340c3c279a94dd9707a34145842b3ab56f558683bb9ec33ef257dd7f"
        },
        "downloads": -1,
        "filename": "gb_alpha-0.2.1-py2.7.egg",
        "has_sig": false,
        "md5_digest": "0062a6c4add8b9fd6b94ad606ffebbad",
        "packagetype": "bdist_egg",
        "python_version": "0.2.1",
        "requires_python": ">=3.4",
        "size": 47929,
        "upload_time": "2022-02-07T14:48:44",
        "upload_time_iso_8601": "2022-02-07T14:48:44.998808Z",
        "url": "https://files.pythonhosted.org/packages/76/fa/851fefdc096f83deb5d9d30ff37f00b726a80f041bf22052dfe7ad7c2df2/gb_alpha-0.2.1-py2.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fdd54ea6d37a349f6ebcc5963af8cff44c516ef2651b4508ed4868e72c2284e",
          "md5": "2eb98978a1b38fd0df7cd6ae314436f4",
          "sha256": "f614fc7fb39f3b145201b8194bf412a1ae18a2483a2df9cb342ab45df9221a84"
        },
        "downloads": -1,
        "filename": "gb_alpha-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2eb98978a1b38fd0df7cd6ae314436f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 17621,
        "upload_time": "2020-08-25T18:24:31",
        "upload_time_iso_8601": "2020-08-25T18:24:31.712165Z",
        "url": "https://files.pythonhosted.org/packages/1f/dd/54ea6d37a349f6ebcc5963af8cff44c516ef2651b4508ed4868e72c2284e/gb_alpha-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c175df6545aec0269392dec7e2cfaff17b1ef99c6097c5646a7a02e7d2c32aa0",
          "md5": "d31b23769b0e527585f1d71b3278e5b5",
          "sha256": "d04018888d76cba538aecaf5304cfe6e187938b1a724c1fdcff837b2b9fa9dca"
        },
        "downloads": -1,
        "filename": "gb-alpha-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d31b23769b0e527585f1d71b3278e5b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 14521,
        "upload_time": "2020-08-25T18:24:46",
        "upload_time_iso_8601": "2020-08-25T18:24:46.500187Z",
        "url": "https://files.pythonhosted.org/packages/c1/75/df6545aec0269392dec7e2cfaff17b1ef99c6097c5646a7a02e7d2c32aa0/gb-alpha-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8e9b6cf3d992874be8c671874a8665ca72b73e5a77692ebdce33954259b7c7c",
          "md5": "12436dbe37e980134a31da9ffc1b1089",
          "sha256": "b677d50730289875fcb9786e5053e4724ce4ffaa9da406472edb33e8e7eab957"
        },
        "downloads": -1,
        "filename": "gb_alpha-3.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12436dbe37e980134a31da9ffc1b1089",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 23221,
        "upload_time": "2022-02-07T14:48:42",
        "upload_time_iso_8601": "2022-02-07T14:48:42.757726Z",
        "url": "https://files.pythonhosted.org/packages/e8/e9/b6cf3d992874be8c671874a8665ca72b73e5a77692ebdce33954259b7c7c/gb_alpha-3.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39501664e725334e4bb3ab70727836f0485709dd8bd73edc47ef560a4e5f2a7c",
          "md5": "bcce8746ffd103645f5edcb10e8c30fe",
          "sha256": "bbeacc5015236fa1abab3b61c80d164a2467163a98aba8882e379847b52b7980"
        },
        "downloads": -1,
        "filename": "gb-alpha-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bcce8746ffd103645f5edcb10e8c30fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 16964,
        "upload_time": "2022-02-07T14:48:46",
        "upload_time_iso_8601": "2022-02-07T14:48:46.961323Z",
        "url": "https://files.pythonhosted.org/packages/39/50/1664e725334e4bb3ab70727836f0485709dd8bd73edc47ef560a4e5f2a7c/gb-alpha-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8e9b6cf3d992874be8c671874a8665ca72b73e5a77692ebdce33954259b7c7c",
        "md5": "12436dbe37e980134a31da9ffc1b1089",
        "sha256": "b677d50730289875fcb9786e5053e4724ce4ffaa9da406472edb33e8e7eab957"
      },
      "downloads": -1,
      "filename": "gb_alpha-3.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12436dbe37e980134a31da9ffc1b1089",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 23221,
      "upload_time": "2022-02-07T14:48:42",
      "upload_time_iso_8601": "2022-02-07T14:48:42.757726Z",
      "url": "https://files.pythonhosted.org/packages/e8/e9/b6cf3d992874be8c671874a8665ca72b73e5a77692ebdce33954259b7c7c/gb_alpha-3.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "39501664e725334e4bb3ab70727836f0485709dd8bd73edc47ef560a4e5f2a7c",
        "md5": "bcce8746ffd103645f5edcb10e8c30fe",
        "sha256": "bbeacc5015236fa1abab3b61c80d164a2467163a98aba8882e379847b52b7980"
      },
      "downloads": -1,
      "filename": "gb-alpha-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bcce8746ffd103645f5edcb10e8c30fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 16964,
      "upload_time": "2022-02-07T14:48:46",
      "upload_time_iso_8601": "2022-02-07T14:48:46.961323Z",
      "url": "https://files.pythonhosted.org/packages/39/50/1664e725334e4bb3ab70727836f0485709dd8bd73edc47ef560a4e5f2a7c/gb-alpha-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}