{
  "info": {
    "author": "Vitor Mazzi",
    "author_email": "vitor.mazzi@intelie.com.br",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "Live Agent\n----------\n\nCoordinates the execution of processes which interact with Intelie Live and simplifies their deployment.\n\nProcesses are implemented inside modules, segmented by its goal. The existing processes can be found at `live_agent/modules`\n\nEach module can have:\n- `datasources`: Process which generates and send events to live\n- `monitors`: Processes which respond to events generated by queries\n- `logic_adapters`: Classes which handle messages received by the chatbot\n\nA `live_agent` module should expose a `PROCESSES` dictionary, listing all processes it provides.\nA process is started by a function (usually named `start`) which accepts two parameters:\n- `settings`: a dictionary of the settings for this process;\n- `kwargs`: a dictionary of extra parameters provided by `live-agent`'s runtime to this process.\n\nThe set of active modules (among other things) is defined using a settings file.\nThe module `chatbot` includes an example settings file.\n\n`live-agent` requires python 3.7 or newer.\n\n\n## Usage\n\n```shell\n# 1- Create a virtualenv using your preferred tool\n\n# 2- Activate the virtualenv\n\n# 3- Install live-agent (you should use a requirements.txt file to manage your dependencies)\n(virtualenv)$ pip install live-agent[chatbot]\n\n# 4- Bootstrap a new agent\n(virtualenv)$ create-agent\nCreating the agent files:\n- Creating \"README.md\"\n- Creating \"settings.json\"\n- Creating folder \"tools\"\n- Creating folder \"modules\"\n- Creating \"modules/__init__.py\"\nAdding project settings:\n- Creating \"dev-requirements.txt\"\n- Creating \"pyproject.toml\"\n- Creating \".pre-commit-config.yaml\"\ndone\n\n# 5- Create the initial structure for each of your agent's modules\n(virtualenv)$ add-agent-module example --empty\nCreating the module \"example\"\n- Creating folder \"modules\"\n- Creating folder \"modules/example\"\n- Creating folder \"modules/example/logic_adapters\"\n- Creating folder \"modules/example/monitors\"\n- Creating folder \"modules/example/datasources\"\ndone\n\n# 5.1- Or, use a sample module as reference\n(virtualenv)$ add-agent-module example\nCreating the module \"example\"\n- Creating folder \"modules\"\n- Removing old folder \"modules/example\"\n- Creating folder \"modules/example\" with example code\n\nThe module \"example\" contains a \"requirements.txt\" file\nMake sure that these dependencies are added to the main requirements\n\nIn order to run the agent with this module, execute:\nagent-control console --settings=modules/example/settings_template.json\ndone\n\n# 6- Implement the features you need on your modules and add them to settings.json\n# Use the command `validate-settings` to validate the settings\n$ validate-settings --settings=settings.json\n\n# 7- Execute the agent\n$ agent-control console --settings=settings.json\n\n```\n\n\n## Development\n\nThis project uses [black](https://github.com/psf/black) and [pre-commit](https://pre-commit.com/)\n\n\n### Project setup:\n\n\n```shell\n# 1- Create a virtualenv\n\n# 2- Activate the virtualenv\n\n# 3- Install project requirements\n$ pip install -r requirements.txt -r live_agent/modules/chatbot/requirements.txt\n\n# 4- Check is your settings file seems to be correct\n$ validate-settings --settings=modules/chatbot/settings_template.json\n\n# 5- Execute the agent\n$ ./live_agent/scripts/agent-control console --settings=modules/chatbot/settings_template.json\n```\n\n### Reading logs\n\nThis project uses `eliot` for logging. Eliot generates log messages as json objects,\nwhich can be parsed by tools like `eliot-tree` and `eliot-prettyprint` or sent to Intelie Live.\n\nThe log file is stored at `/var/log/live-agent.log` by default. Make sure the user which will start the agent can write to this file.\nThe log messages are also sent to live, using the event_type `dda_log` by default.\n\n```shell\n# Reading the log with eliot-prettyprint\n$ tail -f /var/log/live-agent.log | eliot-prettyprint\n\n# Reading the log with eliot-tree (extra dependency, already on requirements.txt)\n$ eliot-tree -l 0 /var/log/live-agent.log\n```\n\n### Building releases\n\nIn order to generate an installable package you will need to use `docker`.\n\n- Install docker (check the documentation for your system: <https://docs.docker.com/install/>)\n- Add your user to the group `docker`: `$ usermod -aG docker <username>`.\n- Log off and log on again for the group to be recognized. (or you can simply `$ su - <username>` on your terminal)\n\nThe packager requires packages `fabric` and `virtualenv`. It will generate a rpm file for installation on the target system.\n\n```shell\n$ tools/package.sh c7\n```\n\n- `c7`: Build for centos7 and derivates (redhat 7, amazon linux 2, etc)\n\n\n#### Testing the built packages\n\n(As of now the testing is entirely manual)\n\n##### In a container:\n\n```shell\n$ tools/test-envs/run_centos_container.sh 7\n\n# Build dir will be available at /packages, so you can install and test\n```\n\n##### In a VM:\n\nThis allows to a more complete test, including running the app as a service\n\n- Install VirtualBox and Vagrant (https://www.vagrantup.com/downloads.html)\n\n```shell\n# cd to `tools/test-envs/RedHat7`\n$ cd tools/test-envs/RedHat7\n\n# Starting VM:\n$ vagrant up\n\n# Connecting to the machine:\n$ `vagrant ssh`\n\n# To transfer files, copy to/from the `transf` subdirectory,\n# it is automatically mapped as `/transf` at the test VM\n\n# Stopping:\n\n$ vagrant halt    # Stop\n$ vagrant destroy # Completely erase the machine\n```\n\n\n#### Installing on the target system\n\n```shell\n$ rpm -Uvh <rpmfile>\n```\n\n### Publishing to pypi\n\n```\n# Build the packages\n$ python setup.py egg_info sdist\n\n# Validate the package\n$ twine check dist/*\n\n# Upload the package\n$ twine upload dist/*\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/intelie/live-agent",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "live-agent",
    "package_url": "https://pypi.org/project/live-agent/",
    "platform": "",
    "project_url": "https://pypi.org/project/live-agent/",
    "project_urls": {
      "Homepage": "https://github.com/intelie/live-agent"
    },
    "release_url": "https://pypi.org/project/live-agent/0.11.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A framework for implementing agents which interact with the Intelie LIVE platform",
    "version": "0.11.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10589500,
  "releases": {
    "0.10.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b599ea8cda3b5b0e1564e63f7ac60b416f81fe977023fbf93d9b2446cc49b943",
          "md5": "e40c81b25365c5780b9b9df9a5992b47",
          "sha256": "e1bc1e0fa9eec00584da745bce6128982bca2a862eaf4e439242adce72dbaf3a"
        },
        "downloads": -1,
        "filename": "live_agent-0.10.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e40c81b25365c5780b9b9df9a5992b47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 41155,
        "upload_time": "2020-06-01T19:52:36",
        "upload_time_iso_8601": "2020-06-01T19:52:36.649384Z",
        "url": "https://files.pythonhosted.org/packages/b5/99/ea8cda3b5b0e1564e63f7ac60b416f81fe977023fbf93d9b2446cc49b943/live_agent-0.10.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b065a786c02ecade2c15f8d6286099832a9e70b24d794aee8de0234e8506057c",
          "md5": "721f359d696c80e09426bf6e2b3b9e4e",
          "sha256": "8bea760a5d50aef86d1e85820df945b9354c9217e67a83adabc6d2610f8185e4"
        },
        "downloads": -1,
        "filename": "live_agent-0.10.5.tar.gz",
        "has_sig": false,
        "md5_digest": "721f359d696c80e09426bf6e2b3b9e4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 41133,
        "upload_time": "2020-06-01T20:03:16",
        "upload_time_iso_8601": "2020-06-01T20:03:16.136121Z",
        "url": "https://files.pythonhosted.org/packages/b0/65/a786c02ecade2c15f8d6286099832a9e70b24d794aee8de0234e8506057c/live_agent-0.10.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f82d9e4256c781d85b10754cca240886f9876997fa58ba573cde7aa47c06dd6a",
          "md5": "38b0c01d0ca7c9584d6e1d94ffaec793",
          "sha256": "573a06ec4fcfe3db6851a429cae8765ac59ef2b3dd37148269c4e81e3b370d4d"
        },
        "downloads": -1,
        "filename": "live_agent-0.10.6.tar.gz",
        "has_sig": false,
        "md5_digest": "38b0c01d0ca7c9584d6e1d94ffaec793",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 40950,
        "upload_time": "2020-06-01T20:14:45",
        "upload_time_iso_8601": "2020-06-01T20:14:45.910347Z",
        "url": "https://files.pythonhosted.org/packages/f8/2d/9e4256c781d85b10754cca240886f9876997fa58ba573cde7aa47c06dd6a/live_agent-0.10.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0599f2131d4179ec2ffa12e6dd338c2fb27943f2a121cbee8b227433e4070c80",
          "md5": "fd3c8495e17e0fa338abd3b706d4744a",
          "sha256": "8da3243cd40658a37f9ab07c48c3b91e40d6ffb16b0f4a465fef2e712436f69b"
        },
        "downloads": -1,
        "filename": "live_agent-0.10.7.tar.gz",
        "has_sig": false,
        "md5_digest": "fd3c8495e17e0fa338abd3b706d4744a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 41234,
        "upload_time": "2020-06-19T15:58:40",
        "upload_time_iso_8601": "2020-06-19T15:58:40.130986Z",
        "url": "https://files.pythonhosted.org/packages/05/99/f2131d4179ec2ffa12e6dd338c2fb27943f2a121cbee8b227433e4070c80/live_agent-0.10.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25dab5b9616258bc658f29b66fc971a9a1ebcf91a6c4de0e402f443e3db41c07",
          "md5": "426ffd81b8fc611be1354d474330613e",
          "sha256": "8402949652d832c5dd1a40554ec24c682fbbc9e532cc1493eeccb29d683f674d"
        },
        "downloads": -1,
        "filename": "live_agent-0.11.0.tar.gz",
        "has_sig": false,
        "md5_digest": "426ffd81b8fc611be1354d474330613e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 41078,
        "upload_time": "2020-06-19T16:08:37",
        "upload_time_iso_8601": "2020-06-19T16:08:37.068348Z",
        "url": "https://files.pythonhosted.org/packages/25/da/b5b9616258bc658f29b66fc971a9a1ebcf91a6c4de0e402f443e3db41c07/live_agent-0.11.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c22e1b07519f2f034919a2ae7cf4648495a3bb9cd199edba59e19cb8fcaf618f",
          "md5": "4d01b1237130c703c0dd88302286b5e8",
          "sha256": "d9545a4226f3b73a09c0a8fb302c57999b8a637b869fa79770198ffeaddd7214"
        },
        "downloads": -1,
        "filename": "live_agent-0.11.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4d01b1237130c703c0dd88302286b5e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 53270,
        "upload_time": "2021-06-08T13:18:17",
        "upload_time_iso_8601": "2021-06-08T13:18:17.696563Z",
        "url": "https://files.pythonhosted.org/packages/c2/2e/1b07519f2f034919a2ae7cf4648495a3bb9cd199edba59e19cb8fcaf618f/live_agent-0.11.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c22e1b07519f2f034919a2ae7cf4648495a3bb9cd199edba59e19cb8fcaf618f",
        "md5": "4d01b1237130c703c0dd88302286b5e8",
        "sha256": "d9545a4226f3b73a09c0a8fb302c57999b8a637b869fa79770198ffeaddd7214"
      },
      "downloads": -1,
      "filename": "live_agent-0.11.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4d01b1237130c703c0dd88302286b5e8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 53270,
      "upload_time": "2021-06-08T13:18:17",
      "upload_time_iso_8601": "2021-06-08T13:18:17.696563Z",
      "url": "https://files.pythonhosted.org/packages/c2/2e/1b07519f2f034919a2ae7cf4648495a3bb9cd199edba59e19cb8fcaf618f/live_agent-0.11.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}