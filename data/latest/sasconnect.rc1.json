{
  "info": {
    "author": "Pradeep",
    "author_email": "pradeep@stoneagesolutions.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Python Zebull API\n[![PyPI](https://img.shields.io/pypi/v/kiteconnect.svg)](https://pypi.python.org/pypi/zebull)\n\n\n\nZebull is set of REST-like APIs based platform of all input and output parameters are based on JSON. Zebull rest provide an easy way to place order,and view orderbook.\n\n\n## Documentation\n- [Zebull API Documentation](https://zebull.in/#zebullDoc/intro)\n\n\n\n## Installing the client\nYou can install the pre release via pip\n```\npython3.9 -m pip install --upgrade Zebull\n```\n\nIts recommended to update `setuptools` to latest if you are facing any issue while installing\n\n\n\n```\npip install -U pip setuptools\n```\n\nFor more details check [official Python documentation](https://wiki.python.org/moin/WindowsCompilers).\n\n# API usage (Sample method calls)\n```python\nimport requests\nimport json\nimport hashlib\nfrom sasapi import Sasapi\n\nsas_api = Sasapi(user_id='Your_user_id',\n                                 api_key='Your_api_key')\n\n# # Method will invoke teh get encryption key and get User session Id methods\n# # Login with userid and API key and then receive the session Id\n# # after got the session Id ,obtain the session Id\n# # as follows.\n\nresponse = sas_api.getEncryptionKey()\n# # Market Watch Scrips\n# # Search Scrips\nscrip_response = sas_api.get_scrips(symbol='search_symbol_name', exchange=['exchange_name'])\n\n#     ====> Sample input parameters : symbol='TCS', exchange=[sas_api.EXCHANGE_NSE]\n#     Other available exchanges are as below\n#\n#         EXCHANGE_NSE     --- For NSE Cash\n#         EXCHANGE_NFO     --- For NSE DERIVATIVES\n#         EXCHANGE_CDS     --- For NSE Currency Derivatives\n#         EXCHANGE_BSE     --- For BSE Cash\n#         EXCHANGE_BSE     --- For BSE Derivatives\n#         EXCHANGE_BSE     --- For BSE Currency Derivatives\n#         EXCHANGE_MCX     --- For MCX Contracts\n\n#     If the search has to be global, like search on NSE and BSE for example,\n#     send the exchange parameter as below\n#     exchange=[sas_api.EXCHANGE_NSE, sas_api.EXCHANGE_BSE]\n\n#     SAMPLE RESPONSE\n#     {.....'exch': 'NSE', 'exchange': None, 'exchange_segment': 'nse_cm', 'symbol': 'TCS-EQ', 'token': '11536', 'instrument_name': 'TATA CONSULTANCY SERV LT'....}\n\n#     There will be more parameters in teh response, but you can ignore them\n#     SYMBOL and TOKEN are the important ones to call further APIs\n\n\n#  Market Watch List\nmarketwatchrespdata = sas_api.getmarketwatch_list()\n\n\n#\n#  =====> Fetch Market Watch List\n#\n#  SAMPLE RESPONSE\n#  {'stat': 'Ok', 'values': ['mwGrpRM', 'mwGrpLN', 'mwGrpFk', 'mwGrpFF'], 'MaxMWCount': 200, 'logindefaultmw': 'mwGrpLN'}\n\n#   There will be no parameters in teh response,\n\n\n# # Market Watch Scrips\nmarketwatchresp = sas_api.marketwatch_scripsdata(mwname='Enter_your_market_watch_name')\n\n#\n#   ====> Sample input parameters :mwname='mwGrpFk'\n#\n#   SAMPLE RESPONSE\n#   {'stat': 'Ok', 'values': [{'tcksize': '5', 'openinterest': '0', 'optiontype': 'XX', 'BestSellPrice': '132.20', 'ExchSeg': 'nse_cm',......}\n#\n#   values are in  Json array with watch names and maximum scrip counts are allowed\n\n\n# # Add Scrips\naddscripsresp = sas_api.addscrips(mwname='Enter_your_market_watch_name', exchange='exchange_name', token='Enter_your_tokenno')\n\n#\n#   ====> Sample input parameters : mwname='mwGrpFk', exchange='NSE', token='1235'\n#\n#   SAMPLE RESPONSE\n#   {'emsg': 'Scrip  is present in mwGrpFk', 'stat': 'Ok'}\n#\n#   Give the input parameters and status as ok and result as success\n\n\n# # Delete Scrips\ndeletescripsresp = sas_api.deletescrips(mwname='Enter_your_market_watch_name', exchange='exchange_name',\n                                        token='Enter_your_tokenno')\n\n#\n#   Sample input parameters : mwname='mwGrpLn', exchange='NSE', token='245'\n#\n#   SAMPLE RESPONSE\n#   {'emsg': 'Scrip  is delete in mwGrpLn', 'stat': 'Ok'}\n#\n#   Delete the parameters value and status as ok then result as success\n\n\n# # Scrip Details\nscripsdetailresp = sas_api.scrips_details(exchange='exchange_name', token='Enter_your_tokenno')\n\n#    ====> Sample input parameters : exchange=[sas_api.EXCHANGE_NSE],token='777'\n#\n#\n#\n#    SAMPLE RESPONSE\n#    {'vwapAveragePrice': 'NA', 'LTQ': 'NA', 'DecimalPrecision': 2, 'openPrice': 'NA', 'LTP': 'NA', 'Ltp': 'NA', 'BRate': 'NA', 'defmktproval': '3', 'symbolname': 'UTIRGR28P2',...... }\n#\n#     There given exchange and token numbers are given the bunch of response will be displayed on output format\n#\n\n\n#  Order Management\n# # Position Book\npositionbookresp = sas_api.positionbook(ret='retention_type')\n\n# ====> Sample input parameters :  ret=[sas_api.RETENTION_DAY]\n#\n# SAMPLE RESPONSE\n#  {\"emsg\": \"Success\",\"stat\": \"Ok\"}\n#\n#  The Retention type of input parameters DAY/NET will be given after response are bunch of data's are displayed like that stat,exchange,pcode,symbol,token....\n\n\n\n\n# # Square of position\nsquareoffresp = sas_api.squareoff_positions(exchange='exchange_name', symbol='Enter_your_symbol',\n                                            qty='Enter_your_Qty',\n                                            pCode='Entey_your_productcode',\n                                            tokenno='Enter_your_tokenno')\n# ====> Sample input parameters :  ret=[sas_api.RETENTION_DAY], symbol='ASHOKLEY',qty='0',pCode=[sas_api.PRODUCT_INTRADAY], tokenno='12356'\n#\n# SAMPLE RESPONSE\n#  {\"stat\": \"Ok\",\"nestOrderNumber:\"200626000052824\"}\n\n#  The input parameters are given and response are ok, nestordernumbers are displayed\n\n\n# # Place Order\nplaceorderresp = sas_api.place_order(complexty='Enter_your_ordertype', discqty='Enter_your_discqty',\n                                     exch='exchange_name',\n                                     pCode='Enter_your_productcode', price='Enter_your_Price',\n                                     qty='Enter_your_Quantity',\n                                     prctyp='Enter_your_pricetype', ret='Enter_your_retention_type',\n                                     symbol_id='Enter_your_symbol_id',\n                                     trading_symbol='Enter_your_trading_symbol',\n                                     transtype='Enter_your_transaction_type',\n                                     trigPrice='Enter_your_trigPrice')\n\n#  ====> Sample input parameters :  ret=[sas_api.RETENTION_DAY], complexity=[sas_api.REGULAR_ORDER], exchange=[sas_api.EXCHANGE_NSE],pCode='MIS',\n#                                  price='1',Qty='1',prctype=[sas_api.LIMIT_ORDER],ret=[sas_api.RETENTION_DAY],trading_symbol='49234',transtype=[sas_api.BUY_ORDER],\n#                                  trigprice='1'\n\n\n# SAMPLE RESPONSE\n# {['stat': 'Ok', 'nestOrderNumber': '191015000018737']}\n\n#  Same as the process of Square off positions given parameters and response are ok,nestordernumbers are displayed\n\n# Bracket Order\nbracketorderresp = sas_api.bracket_order(complexty='Enter_your_ordertype', discqty='Enter_your_discqty',\n                                         exch='exchange_name',\n                                         pCode='Enter_your_productcode', price='Enter_your_price', qty='Enter_your_qty',\n                                         prctyp='Enter_your_pricetype', stopLoss='Enter_your_stopLoss',\n                                         ret='Enter_your_retention_type',\n                                         symbol_id='Enter_your_symbol_id',\n                                         trading_symbol='Enter_your_trading_symbol',\n                                         trailing_stop_loss='Enter_your_trailing_stop_loss_value',\n                                         target='Enter_your_target_value',\n                                         transtype='Enter_your_transaction_type',\n                                         trigPrice='Enter_your_trigPrice')\n\n#  ====> Sample input parameters :  ret=[sas_api.RETENTION_DAY], complexity=[sas_api.REGULAR_ORDER], exchange=[sas_api.EXCHANGE_NSE],pCode='MIS',\n#                                  price='1',qty='1',prctype=[sas_api.LIMIT_ORDER],ret=[sas_api.RETENTION_DAY],trading_symbol='49234',transtype=[sas_api.BUY_ORDER],\n#                                  trigprice='1',discqty='0',symbol_id='13611',trailimg_stop_loss='3.4',target='28.0',transtype=[sas_api.BUY_ORDER],stoploss='28.0'\n\n\n# SAMPLE RESPONSE\n# [{\"stat\": \"Ok\", \"nestOrderNumber\": \"210218000070901\"}\n\n# Same process of previous one input parameters like retention type,complexity,exchange....... and response are ok,nestordernumbers displayed on screen\n\n\n# Fetch Order Book\norderresp = sas_api.order_data()\n\n# ===>No Parameters are passed to get response\n# SAMPLE RESPONSE\n# [{....... \"Prc\": \"1454.90\", \"RequestID\": \"1\", \"Cancelqty\": 0, \"discQtyPerc\": \"10\",  \"Qty\": 8, \"Prctype\": \"SL\", \"Status\": \"rejected\",\"Exchange\": \"NSE\" ,\"Avgprc\": \"00.00\", \"Trgprc\": \"1450.90\",.....}]\n\n#  This one get method and no input parameters and output will be bunch of data's are shown on response\n\n\n# Fetch Trade Book\ntradebookresp = sas_api.tradebook()\n# ===>No Parameters are passed to get response\n# SAMPLE RESPONSE\n\n# This one also get method and no input parameters and data's will be shown\n\n\n# # Exit Bracket Order\nexitboorderresp = sas_api.exitboorder(nestOrderNumber='Enter_your_nestOrderNumber',\n                                      symbolOrderId=\"Enter_your_symbolOrderId\", status='Enter_your_status')\n\n#  ====> Sample input parameters :  nestOrderNumber='200626000052824', symbolOrderId='', status='OPEN',\n#\n# SAMPLE RESPONSE\n# {\"stat\":\"Ok}\n\n#  The input parameters are nestordernumber,symbolid,and status will be given and response like ok.\n\n\n# # Modify Order\nmodifyorderresp = sas_api.modifyorder(discqty='Your_Quantity_No', qty='Enter_your_Quantity', exch='exchange_name',\n                                      filledQuantity='Enter_your_Filledquantity',\n                                      nestOrderNumber='Enter_your_nestordernumber', prctyp='Enter_your_pricetype',\n                                      price='Enter_your_Price',\n                                      trading_symbol='Your_Trading_Symbol', trigPrice='Enter_your_trigger_Price',\n                                      transtype='Enter_your_transaction_type', pCode='Enter_your_productcode'),\n\n#  ====> Sample input parameters :  discqty='0', qty='1', exchange=[sas_api.EXCHANGE_NSE],filledQuantity='0',\n#                                    nestOrderNumber='191015000018737',prctype=[sas_api.LIMIT_ORDER], price='1'\n#                                   ,trading_symbol='ASHOKLEY-EQ',trigPrice='00.OO',transtype=[sas_api.BUY_ORDER],\n#                                    pCode=[sas_api.MARKET_ORDER]\n#\n# SAMPLE RESPONSE\n# [{\"stat\": \"Ok\", \"nestOrderNumber\": \"210218000070901\"}\n\n# The Input parameters are given and results are displayed on Sample response\n\n\n# # Market Order\nmarketorderresp = sas_api.marketorder(complexty='Enter_your_ordertype', discqty='Enter_your_discqty',\n                                      exch='exchange_name',\n                                      pCode='Enter_your_productcode',\n                                      prctyp='Enter_your_pricetype', price=\"\", qty='Enter_your_qty',\n                                      ret='Enter_your_retention_type',\n                                      symbol_id='Enter_your_symbol_id', trading_symbol='Enter_your_trading_symbol',\n                                      transtype='Enter_your_transaction_type',\n                                      trigPrice=\"\")\n\n#  ====> Sample input parameters :   complexity=[sas_api.REGULAR_ORDER], discqty='0', qty='1', exchange=[sas_api.EXCHANGE_NSE],filledQuantity='0',nestOrderNumber='191015000018737',prctype=[sas_api.LIMIT_ORDER],price='1',trading_symbol='ASHOKLEY-EQ'\n#                                    trigPrice='00.OO',transtype=[sas_api.BUY_ORDER],pCode=[sas_api.MARKET_ORDER]\n\n# SAMPLE RESPONSE\n# {\"stat\": \"Ok\", \"nestOrderNumber\": \"210218000070991\"}\n\n# The market order data's can be input and output's are displayed\n\n\n# Cancel Order\ncancelresp = sas_api.cancel_order(exchange=sas_api.EXCHANGE_NSE, nestordernmbr='Enter_your_nestordernmbr',\n                                  tradingsymbol='Enter_your_tradingsymbol')\n#  ====> Sample input parameters :  exchange=[sas_api.EXCHANGE_NSE], nestordernumbrr='191015000018737',tradingsymbol='ASHOKLEY-EQ',\n\n# SAMPLE RESPONSE\n# {\"stat\": \"Ok\", \"nestOrderNumber\": \"210218000070991\"}\n\n# The Input parameters exchange,nestordernumber and trading symbol are given after output's are status ok, and nestordernumber are displayed\n\n\n# Order History\norderhistoryresp = sas_api.order_history(nextorder='Enter_your_nextorder')\n\n# =====> Sample input parameter:  nestOrderNumber\": \"200628000000004\"\n\n# SAMPLE RESPONSE\n# {'stat':'Ok' ...}\n# The nestordernumber's are displayed\n\n\n# Fetch Holdingsdata\nholdingresp = sas_api.holdingsdata()\n\n# =====> No parameter are passed to get holdings\n\n# SAMPLE RESPONSE\n# {'stat':'Ok' ...}\n#  This are get method no input parameters and output parameters will be displayed\n\n\n# Funds\n# Get Limit\nfundsresp = sas_api.fundsdata()\n#    =====> Fetch Market Watch List\n\n#   SAMPLE RESPONSE\n#   {'emsg': None, 'stat': 'Ok'}\n#   No parameters to send get fundsdetails\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://zebull.in",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sasconnect",
    "package_url": "https://pypi.org/project/sasconnect/",
    "platform": "",
    "project_url": "https://pypi.org/project/sasconnect/",
    "project_urls": {
      "Homepage": "https://zebull.in"
    },
    "release_url": "https://pypi.org/project/sasconnect/3.0/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "Python SDK for API users",
    "version": "3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9898836,
  "releases": {
    "3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0d6eff9d0d2657046c09d4bb4d83a8c65eeb77c9b917b2250cdaa6c6d6b31c7",
          "md5": "6e93753d9e583eea27e33f4e1fdf6c0a",
          "sha256": "b88152061f4cf26d2abf839e630f2275a1642a9461cd22a6e0ef04a063e60d2c"
        },
        "downloads": -1,
        "filename": "sasconnect-3.0-py3.9.egg",
        "has_sig": false,
        "md5_digest": "6e93753d9e583eea27e33f4e1fdf6c0a",
        "packagetype": "bdist_egg",
        "python_version": "3.0",
        "requires_python": null,
        "size": 15881,
        "upload_time": "2021-03-27T13:01:08",
        "upload_time_iso_8601": "2021-03-27T13:01:08.773877Z",
        "url": "https://files.pythonhosted.org/packages/c0/d6/eff9d0d2657046c09d4bb4d83a8c65eeb77c9b917b2250cdaa6c6d6b31c7/sasconnect-3.0-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e92b53fc741321efd6fda7098b734e94d422f5dba28668a65aa48918c9551a0",
          "md5": "bc00b21dcf8f06d139d8879ab3026f11",
          "sha256": "9309b3b0acab63bac3878ddc37e526062a6b9992914acadcda0fc3fbf5ee3be9"
        },
        "downloads": -1,
        "filename": "sasconnect-3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc00b21dcf8f06d139d8879ab3026f11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11167,
        "upload_time": "2021-03-27T13:01:07",
        "upload_time_iso_8601": "2021-03-27T13:01:07.217739Z",
        "url": "https://files.pythonhosted.org/packages/8e/92/b53fc741321efd6fda7098b734e94d422f5dba28668a65aa48918c9551a0/sasconnect-3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb951ba04513c3573c849ff92bac88c2c529bdc02653dd9fd719744b79594581",
          "md5": "2e06382b2f44ba70c86bc49b7e17ebfd",
          "sha256": "db474e3aff4a077320f3160ea78278d16794c67f3966cf5be36418e289d498f8"
        },
        "downloads": -1,
        "filename": "sasconnect-3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2e06382b2f44ba70c86bc49b7e17ebfd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9756,
        "upload_time": "2021-03-27T13:01:10",
        "upload_time_iso_8601": "2021-03-27T13:01:10.155955Z",
        "url": "https://files.pythonhosted.org/packages/bb/95/1ba04513c3573c849ff92bac88c2c529bdc02653dd9fd719744b79594581/sasconnect-3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c0d6eff9d0d2657046c09d4bb4d83a8c65eeb77c9b917b2250cdaa6c6d6b31c7",
        "md5": "6e93753d9e583eea27e33f4e1fdf6c0a",
        "sha256": "b88152061f4cf26d2abf839e630f2275a1642a9461cd22a6e0ef04a063e60d2c"
      },
      "downloads": -1,
      "filename": "sasconnect-3.0-py3.9.egg",
      "has_sig": false,
      "md5_digest": "6e93753d9e583eea27e33f4e1fdf6c0a",
      "packagetype": "bdist_egg",
      "python_version": "3.0",
      "requires_python": null,
      "size": 15881,
      "upload_time": "2021-03-27T13:01:08",
      "upload_time_iso_8601": "2021-03-27T13:01:08.773877Z",
      "url": "https://files.pythonhosted.org/packages/c0/d6/eff9d0d2657046c09d4bb4d83a8c65eeb77c9b917b2250cdaa6c6d6b31c7/sasconnect-3.0-py3.9.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e92b53fc741321efd6fda7098b734e94d422f5dba28668a65aa48918c9551a0",
        "md5": "bc00b21dcf8f06d139d8879ab3026f11",
        "sha256": "9309b3b0acab63bac3878ddc37e526062a6b9992914acadcda0fc3fbf5ee3be9"
      },
      "downloads": -1,
      "filename": "sasconnect-3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bc00b21dcf8f06d139d8879ab3026f11",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11167,
      "upload_time": "2021-03-27T13:01:07",
      "upload_time_iso_8601": "2021-03-27T13:01:07.217739Z",
      "url": "https://files.pythonhosted.org/packages/8e/92/b53fc741321efd6fda7098b734e94d422f5dba28668a65aa48918c9551a0/sasconnect-3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb951ba04513c3573c849ff92bac88c2c529bdc02653dd9fd719744b79594581",
        "md5": "2e06382b2f44ba70c86bc49b7e17ebfd",
        "sha256": "db474e3aff4a077320f3160ea78278d16794c67f3966cf5be36418e289d498f8"
      },
      "downloads": -1,
      "filename": "sasconnect-3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2e06382b2f44ba70c86bc49b7e17ebfd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9756,
      "upload_time": "2021-03-27T13:01:10",
      "upload_time_iso_8601": "2021-03-27T13:01:10.155955Z",
      "url": "https://files.pythonhosted.org/packages/bb/95/1ba04513c3573c849ff92bac88c2c529bdc02653dd9fd719744b79594581/sasconnect-3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}