{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# USAGE\n\n## Environment\nYou will have to set up the following environment variabl:\n\nexport CMAKE_PREFIX_PATH=\"${installation_directory}/lib/cmake/modena/\n\nfor example:\n\nexport CMAKE_PREFIX_PATH=\"/usr/local/lib/python3.10/dist-packages/modena/lib/cmake/modena/\"\n\n## External dependencies\n\nYou need R to have access to Design of Experiments:\n\nin order\n\napt-get install -y automake libltdl-dev libltdl7 mongodb python3-scipy python3-rpy2 python3-blessings r-base r-base-dev build-essential swig cmake systemd\n\nR -e \"install.packages('lhs', repos='https://cran.ma.imperial.ac.uk/', lib=.libPaths()[1], dependencies=TRUE)\"\n\npip3 install -U Jinja2\n\nR -e \"install.packages('nlmrt', repos='https://cran.ma.imperial.ac.uk/', lib=.libPaths()[1], dependencies=TRUE)\"\n\n\n\n## Workflows\n\nYou need to have mongodb running - service mongodb start\n\nWorkflows have to be defined by the user\n\n\n# MoDeNa in Brief\nA software Framework for *MO*delling of morphology *DE*velopment of\nmicro- and *NA*nostructures\n\nThe [MoDeNa project](http://www.modenaproject.eu/) aims at developing,\ndemonstrating and assessing an easy-to-use multi-scale software\nframework application under an open-source licensing scheme that\ndelivers models with feasible computational loads for process and\nproduct design of complex materials.  The concept of MoDeNa is an\ninterconnected multi-scale software framework. Four scales will be\nlinked together by this framework namely the nano-, micro-, meso-, and\nmacroscale. As application cases we consider polyurethane foams (PU),\nwhich are excellent examples of a large turnover product produced in a\nvariety of qualities and of which the properties are the result of\ndesigning and controlling the material structure on all levels of\nscale, from the molecule to the final product.\n\nMulti-scale coupling requires the exchange of information between\nsoftware instances developed for specific scales in a consistent\nway. In order to achieve this, generating consistent representations\nfor models and data is necessary. The information exchange is governed\nby protocols and may occur in two ways, namely:\n\n- \"forward mapping\" (passing information from the microscopic to the\n    macroscopic scale in upward direction)\n\n- \"backward mapping\" (passing information from the macroscopic to the\n    microscopic scale in downward direction)\n\n\"Forward mapping\" is relatively straightforward, while \"backward\nmapping\" inevitably requires iteration since changing the operating\nconditions at the fine level changes the feedback to the coarse level.\n\"Backward mapping\" can be realised by \"two-way coupling\" or by\n\"fitting surrogate models\". The first approach usually requires\nexchange of large amounts of data during runtime that may be expensive\neither due to the complexity of the data exchange or the computational\ncost associated with executing the microscopic-scale simulation. In\nsuch cases, replacing the microscopic-scale simulation with a\nsurrogate model presents the only viable alternative. This operation\ninherently constitutes a transfer of data across scales and MoDeNa is\nunique in that it focuses on this approach.\n\nA typical operation sequence starts a macroscopic-scale simulation which\ninstantiates one or more surrogate models. When the validity of a model\nis violated, a design of experiment operation is triggered. It creates\ninputs for a set of microscopic-scale simulations. When all experiments\nare finished, the parameter estimation component is invoked which\nupdates the model parameters. Next, the macroscopic-scale simulation is\nrestarted. It should be noted, that the MoDeNa software framework\nsupports application and model dependencies across multiple scales.\n\nThe MoDeNa framework handles the communication across scales through\nrecipes and adapters. Recipes perform simulations by executing\napplications (in-house codes or external software packages such as\nFOAM, Materials Studio, PC-Saft) for a given set of inputs. Adapters\nhandle the communication with the MoDeNa software framework. Both,\nrecipes and adapters are application specific.  Adapters exist as\noutgoing and incoming adapters. Outgoing adapters are relatively\nstraight forward in that they perform a mapping operation (such as\naveraging) and communicate the results. The averaging process may have\nto be started and performed within the application (e.g. for time\naveraging). However, the results can usually be submitted in a\nseparate process after the simulation is finished. Incoming adapters\nare more complicated since they usually require to embed surrogate\nmodels within the applications.\n\nThe software framework consists of an orchestrator, a database and a\ninterface library. The orchestrator is based on\n[FireWorks](http://pythonhosted.org/FireWorks/) and constitutes the\nbackbone of the software framework in that it schedules simulations as\nwell as design of experiments & parameter estimation operations which\nmake up the work-flow of the overall simulation. It is very much like\na dynamic work-flow engine, in which the different applications are\n\"orchestrated\" to obtain information, analyse and pass it to the other\noperations. The NoSQL database [MongoDB](http://www.mongodb.org/) is\nused to store the state of the work-flow as well as the surrogate\nmodels together with associated data such as model parameters, data\nused for parameter estimation, and meta-data.\n\nThe interface library consists of two parts: A high-level python\nmodule providing access to the database as well as design of\nexperiments and regression analysis capabilities by building on\n[MongoEngine](http://www.mongoengine.org) and\n[R](http://www.r-project.org/), respectively. The second part is a\nlow-level library providing unified access to the surrogate\nmodels. This component is written in C to ensure interoperability\nacross platforms and target applications while providing the\ncomputationally efficient model execution required by the\napplications. The library is loaded as a shared library by the\nmacroscopic-scale applications or as a native python extension by the\nhigh-level python module ensuring that all components instantiate\nidentical model implementations. Complex operations such as database\naccess are referred back to the high-level python module using\ncall-back mechanisms.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "modena",
    "package_url": "https://pypi.org/project/modena/",
    "platform": null,
    "project_url": "https://pypi.org/project/modena/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/modena/0.0.3/",
    "requires_dist": [
      "blessings",
      "decorator",
      "mongoengine",
      "numpy",
      "Pillow",
      "pymongo",
      "rpy2",
      "scipy",
      "scour",
      "singledispatch",
      "six",
      "sqlalchemy",
      "fireworks"
    ],
    "requires_python": "",
    "summary": "Simulation framework application facilitating     simulation of interconnected models",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16636296,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5debf3219032d7eff0905c3d4b0b1ce33b7bed867d8c991782b8365227aaffae",
          "md5": "ade1c4a59ac40a21e40bb9a5b7f624b9",
          "sha256": "8b6841afc632f12d219f93f1e19cb12860ec0ce6ba0ee63012bdf3dbe5f30ec6"
        },
        "downloads": -1,
        "filename": "modena-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ade1c4a59ac40a21e40bb9a5b7f624b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 209127,
        "upload_time": "2022-07-22T15:39:12",
        "upload_time_iso_8601": "2022-07-22T15:39:12.280822Z",
        "url": "https://files.pythonhosted.org/packages/5d/eb/f3219032d7eff0905c3d4b0b1ce33b7bed867d8c991782b8365227aaffae/modena-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb4b820c95f8f16b6a5aa49e5f434e579125ed7b23b132cfa19b3c55d57d967e",
          "md5": "2b89f7cccdbcba791954689d6d28af12",
          "sha256": "5535a709d8f1357083cb780e2a5b0f19914395bdc2956a33e18d93d073e81b30"
        },
        "downloads": -1,
        "filename": "modena-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2b89f7cccdbcba791954689d6d28af12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 198474,
        "upload_time": "2022-07-22T15:39:14",
        "upload_time_iso_8601": "2022-07-22T15:39:14.224877Z",
        "url": "https://files.pythonhosted.org/packages/eb/4b/820c95f8f16b6a5aa49e5f434e579125ed7b23b132cfa19b3c55d57d967e/modena-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0416db87d1b0fb435a0967bcf8791cc6e7208a2a50fa4bee83d8e8b8ee47962",
          "md5": "6d04d22b99bbb77b59a9f8eb3add0f1a",
          "sha256": "6b0da97c27c0fbe364a174c9d1a6be8223904d464a7901902170a5c5dd526027"
        },
        "downloads": -1,
        "filename": "modena-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d04d22b99bbb77b59a9f8eb3add0f1a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 209315,
        "upload_time": "2022-11-23T14:17:44",
        "upload_time_iso_8601": "2022-11-23T14:17:44.621076Z",
        "url": "https://files.pythonhosted.org/packages/f0/41/6db87d1b0fb435a0967bcf8791cc6e7208a2a50fa4bee83d8e8b8ee47962/modena-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cca3d32ee9ad823261cc981489e0c40c73f0fdecbb34106a3d5d148e2a1faecf",
          "md5": "8f88784774c91b8f20e2c12d047baae1",
          "sha256": "da9af67645689e464dd1ba3a33409abd4f425ddccf35385429dc58c79a989de2"
        },
        "downloads": -1,
        "filename": "modena-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8f88784774c91b8f20e2c12d047baae1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 198905,
        "upload_time": "2022-11-23T14:17:46",
        "upload_time_iso_8601": "2022-11-23T14:17:46.782964Z",
        "url": "https://files.pythonhosted.org/packages/cc/a3/d32ee9ad823261cc981489e0c40c73f0fdecbb34106a3d5d148e2a1faecf/modena-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74a797afa7d685d61156ebe46f9b1c621e2b811e79ef5c260086d1670ea7bcee",
          "md5": "a9ea6e7e8871b41033bc58177c14d741",
          "sha256": "457dd479a924b00684aec18bfe1fc6bb5df28a1512c980134e0aa81385f8283b"
        },
        "downloads": -1,
        "filename": "modena-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9ea6e7e8871b41033bc58177c14d741",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 210287,
        "upload_time": "2023-01-31T15:36:15",
        "upload_time_iso_8601": "2023-01-31T15:36:15.883259Z",
        "url": "https://files.pythonhosted.org/packages/74/a7/97afa7d685d61156ebe46f9b1c621e2b811e79ef5c260086d1670ea7bcee/modena-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "706abdaea1b56f2f5dd88a81824af8325c52eddb858f25192dded0020edda392",
          "md5": "cd27f93750fd8d5d4b64ebe092cd037c",
          "sha256": "b3bffaba2113d2e35a6fd797db023938f33be70dfcefd8ebac5cdfe9336c747e"
        },
        "downloads": -1,
        "filename": "modena-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cd27f93750fd8d5d4b64ebe092cd037c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 199804,
        "upload_time": "2023-01-31T15:36:19",
        "upload_time_iso_8601": "2023-01-31T15:36:19.437179Z",
        "url": "https://files.pythonhosted.org/packages/70/6a/bdaea1b56f2f5dd88a81824af8325c52eddb858f25192dded0020edda392/modena-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74a797afa7d685d61156ebe46f9b1c621e2b811e79ef5c260086d1670ea7bcee",
        "md5": "a9ea6e7e8871b41033bc58177c14d741",
        "sha256": "457dd479a924b00684aec18bfe1fc6bb5df28a1512c980134e0aa81385f8283b"
      },
      "downloads": -1,
      "filename": "modena-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a9ea6e7e8871b41033bc58177c14d741",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 210287,
      "upload_time": "2023-01-31T15:36:15",
      "upload_time_iso_8601": "2023-01-31T15:36:15.883259Z",
      "url": "https://files.pythonhosted.org/packages/74/a7/97afa7d685d61156ebe46f9b1c621e2b811e79ef5c260086d1670ea7bcee/modena-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "706abdaea1b56f2f5dd88a81824af8325c52eddb858f25192dded0020edda392",
        "md5": "cd27f93750fd8d5d4b64ebe092cd037c",
        "sha256": "b3bffaba2113d2e35a6fd797db023938f33be70dfcefd8ebac5cdfe9336c747e"
      },
      "downloads": -1,
      "filename": "modena-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "cd27f93750fd8d5d4b64ebe092cd037c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 199804,
      "upload_time": "2023-01-31T15:36:19",
      "upload_time_iso_8601": "2023-01-31T15:36:19.437179Z",
      "url": "https://files.pythonhosted.org/packages/70/6a/bdaea1b56f2f5dd88a81824af8325c52eddb858f25192dded0020edda392/modena-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}