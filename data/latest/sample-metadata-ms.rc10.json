{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# Sample Metadata\n\n[![codecov](https://codecov.io/gh/populationgenomics/sample-metadata/branch/dev/graph/badge.svg?token=OI3XZYR9HK)](https://codecov.io/gh/populationgenomics/sample-metadata)\n\nThe sample-metadata system is database that stores **de-identified** metadata.\n\nThere are three components to the sample-metadata system:\n\n- System-versioned MariaDB database,\n- Python web API to manage permissions, and store frequently used queries,\n- An installable python library that wraps the Python web API (using OpenAPI generator)\n\nEvery resource in sample-metadata belongs to a project. All resources are access\ncontrolled through membership of the google groups:\n`$dataset-sample-metadata-main-{read,write}`. Note that members of google-groups\nare cached in a secret as group-membership identity checks are slow.\n\n## Structure\n\n![Database structure](resources/2021-10-27_db-diagram.png)\n\n### Sample IDs\n\nIn an effort to reduce our dependency on potentially mutable external sample IDs with inconsistent format,\nthe sample-metadata server generates an internal sample id for every sample. Internally they're an\nincrementing integer, but they're transformed externally to have a prefix, and checksum - this allows durability\nwhen transcribing sample IDs to reduce mistypes, and allow to quickly check whether a sample ID is valid.\n\n> NB: The prefix and checksums are modified per environment (production, development, local) to avoid duplicates from these environments.\n\nFor example, let's consider the production environment which uses the prefix of `CPG` and a checksum offset of 0:\n\n> A sample is given the internal ID `12345`, we calculate the Luhn checksum to be `5` (with no offset applied).\n> We can then concatenate the results, for the final sample ID to be `CPG123455`.\n\n### Reporting sex\n\nTo avoid ambiguity in reporting of gender, sex and karyotype - the sample metadata system\nstores these values separately on the `participant` as:\n\n- `reported_gender` (string, expected `male` | `female` | _other values_)\n- `reported_sex` (follows pedigree convention: `unknown=0 | null`, `male=1`, `female=2`)\n- `inferred_karyotype` (string, eg: `XX` | `XY` | _other karyotypes_)\n\nIf you import a pedigree, the sex value is written to the `reported_sex` attribute.\n\n## Local develompent of SM\n\nThe recommended way to develop the sample-metadata system is to run a local copy of SM.\n\n> There have been some reported issues of running a local SM environment on an M1 mac.\n\nYou can run MariaDB with a locally installed docker, or from within a docker container.\nYou can configure the MariaDB connection with environment variables.\n\n### Creating the environment\n\nDependencies for the `sample-metadata` API package are listed in `setup.py`.\nAdditional dev requirements are listed in `requirements-dev.txt`, and packages for\nthe sever-side code are listed in `requirements.txt`.\n\nTo create the full dev environment, run:\n\n```shell\nvirtualenv venv\nsource venv/bin/activate\npip install -r requirements.txt\npip install -r requirements-dev.txt\npip install --editable .\n```\n\n### Default DB set-up\n\nThese are the default values for the SM database connection.\nPlease alter them if you use any different values when setting up the database.\n\n```shell\nexport SM_DEV_DB_USER=root\nexport SM_DEV_DB_PASSWORD= # empty password\nexport SM_DEV_DB_HOST=127.0.0.1\nexport SM_DEV_DB_PORT=3306 # default mariadb port\n```\n\nCreate the database in MariaDB (by default, we call it `sm_dev`):\nIf you use a different databse name also set the following\n\n```shell\nexport SM_DEV_DB_NAME=sm_database_name\n```\n\n> Sample-metadata stores all metadata in one database (_previously: one database per project_).\n\n```shell\nmysql -u root --execute 'CREATE DATABASE sm_dev'\n```\n\nDownload the `mariadb-java-client` and create the schema using liquibase:\n\n```shell\npushd db/\nwget https://repo1.maven.org/maven2/org/mariadb/jdbc/mariadb-java-client/3.0.3/mariadb-java-client-3.0.3.jar\nliquibase \\\n    --changeLogFile project.xml \\\n    --url jdbc:mariadb://localhost/sm_dev \\\n    --driver org.mariadb.jdbc.Driver \\\n    --classpath mariadb-java-client-3.0.3.jar \\\n    --username root \\\n    update\npopd\n```\n\n#### Using Maria DB docker image\n\nPull mariadb image\n\n```bash\ndocker pull mariadb\n```\n\nRun a mariadb container that will server your database. `-p 3307:3306` remaps the port to 3307 in case if you local MySQL is already using 3306\n\n```bash\ndocker stop mysql-p3307  # stop and remove if the container already exists\ndocker rm mysql-p3307\n# run with an empty root password\ndocker run -p 3307:3306 --name mysql-p3307 -e MYSQL_ALLOW_EMPTY_PASSWORD=true -d mariadb\n```\n\n```bash\nmysql --host=127.0.0.1 --port=3307 -u root -e 'CREATE DATABASE sm_dev;'\nmysql --host=127.0.0.1 --port=3307 -u root -e 'show databases;'\n```\n\nGo into the `db/` subdirectory, download the `mariadb-java-client` and create the schema using liquibase:\n\n```bash\n\npushd db/\nwget https://repo1.maven.org/maven2/org/mariadb/jdbc/mariadb-java-client/3.0.3/mariadb-java-client-3.0.3.jar\nliquibase \\\n    --changeLogFile project.xml \\\n    --url jdbc:mariadb://127.0.0.1:3307/sm_dev \\\n    --driver org.mariadb.jdbc.Driver \\\n    --classpath mariadb-java-client-3.0.3.jar \\\n    --username root \\\n    update\npopd\n```\n\nFinally, make sure you configure the server (making use of the environment variables) to point it to your local Maria DB server\n\n```bash\nexport SM_DEV_DB_PORT=3307\n```\n\n### Running the server\n\nYou'll want to set the following environment variables (permanently) in your\nlocal development environment.\n\n```shell\n# ensures the SWAGGER page (localhost:8000/docs) points to your local environment\nexport SM_ENVIRONMENT=LOCAL\n# skips permission checks in your local environment\nexport SM_ALLOWALLACCESS=true\n\n# start the server\npython3 -m api.server\n# OR\n# uvicorn --port 8000 --host 0.0.0.0 api.server:app\n```\n\nIn a different terminal, execute the following\nrequest to create a new project called 'dev'\n\n```shell\ncurl -X 'PUT' \\\n  'http://localhost:8000/api/v1/project/?name=dev&dataset=dev&gcp_id=dev&create_test_project=false' \\\n  -H 'accept: application/json' \\\n  -H \"Authorization: Bearer $(gcloud auth print-identity-token)\"\n```\n\n#### Quickstart: Generate and install the installable API\n\nIt's best to do this with an already running server:\n\n```shell\npython3 regenerate_api.py \\\n    && pip install .\n```\n\n#### Debugging the server in VSCode\n\nVSCode allows you to debug python modules, we could debug the web API at `api/server.py` by considering the following `launch.json`:\n\n```json\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"API server\",\n      \"type\": \"python\",\n      \"request\": \"launch\",\n      \"module\": \"api.server\"\n    }\n  ]\n}\n```\n\nWe could now place breakpoints on the sample route (ie: `api/routes/sample.py`), and debug requests as they come in.\n\n#### Developing the UI\n\n```shell\n# Ensure you have started sm locally on your computer already, then in another tab open the UI.\n# This will automatically proxy request to the server.\ncd web\nnpm install\nnpm start\n```\n\n#### Unauthenticated access\n\nYou'll want to set the `SM_LOCALONLY_DEFAULTUSER` environment variable along with `ALLOWALLACCESS` to allow access to a local sample-metadata server without providing a bearer token. This will allow you to test the front-end components that access data. This happens automatically on the production instance through the Google identity-aware-proxy.\n\n```shell\nexport SM_ALLOWALLACCESS=1\nexport SM_LOCALONLY_DEFAULTUSER=$(whoami)\n```\n\n### OpenAPI and Swagger\n\nThe Web API uses `apispec` with OpenAPI3 annotations on each route to describe interactions with the server. We can generate a swagger UI and an installable\npython module based on these annotations.\n\nSome handy links:\n\n- [OpenAPI specification](https://swagger.io/specification/)\n- [Describing parameters](https://swagger.io/docs/specification/describing-parameters/)\n- [Describing request body](https://swagger.io/docs/specification/describing-request-body/)\n- [Media types](https://swagger.io/docs/specification/media-types/)\n\nThe web API exposes this schema in two ways:\n\n- Swagger UI: `http://localhost:8000/docs`\n  - You can use this to construct requests to the server\n  - Make sure you fill in the Bearer token (at the top right )\n- OpenAPI schema: `http://localhost:8000/schema.json`\n  - Returns a JSON with the full OpenAPI 3 compliant schema.\n  - You could put this into the [Swagger editor](https://editor.swagger.io/) to see the same \"Swagger UI\" that `/api/docs` exposes.\n  - We generate the sample_metadata installable Python API based on this schema.\n\n#### Generating the installable API\n\nThe installable API is automatically generated through the `package.yml` GitHub action and uploaded to PyPI.\n\nTo generate the python api you'll need to install openapi generator v5.x.x\n\nTo install a specific version of the openapi-generator dow the following:\n\n```bash\nnpm install @openapitools/openapi-generator-cli -g\nopenapi-generator-cli version-manager set 5.3.0\n```\n\nThen set your environment variable OPENAPI_COMMAND to the following.\nYou can also add an alias to your ~/.bash_profile or equivalent for running in the\nterminal.\n\n```bash\nexport OPENAPI_COMMAND=\"npx @openapitools/openapi-generator-cli\"\nalias openapi-generator=\"npx @openapitools/openapi-generator-cli\"\n```\n\nYou could generate the installable API and install it with pip by running:\n\n```bash\n# this will start the api.server, so make sure you have the dependencies installed,\npython regenerate_api.py \\\n    && pip install .\n```\n\nOr you can build the docker file, and specify that\n\n```bash\n# SM_DOCKER is a known env variable to regenerate_api.py\nexport SM_DOCKER=\"cpg/sample-metadata-server:dev\"\ndocker build --build-arg SM_ENVIRONMENT=local -t $SM_DOCKER -f deploy/api/Dockerfile .\npython regenerate_apy.py\n```\n\n## Deployment\n\nThe sample-metadata server\n\nYou'll want to complete the following steps:\n\n- Ensure there is a database created for each project (with the database name being the project),\n- Ensure there are secrets in `projects/sample_metadata/secrets/databases/versions/latest`, that's an array of objects with keys `dbname, host, port, username, password`.\n- Ensure `google-cloud` was installed\n\n```bash\nexport SM_ENVIRONMENT='PRODUCTION'\n\n# OR, point to the dev instance with\nexport SM_ENVIRONMENT='DEVELOPMENT'\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gregsmi/sample-metadata",
    "keywords": "bioinformatics",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sample-metadata-ms",
    "package_url": "https://pypi.org/project/sample-metadata-ms/",
    "platform": null,
    "project_url": "https://pypi.org/project/sample-metadata-ms/",
    "project_urls": {
      "Homepage": "https://github.com/gregsmi/sample-metadata"
    },
    "release_url": "https://pypi.org/project/sample-metadata-ms/0.7.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python API for interacting with the Sample API system (MS version)",
    "version": "0.7.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15716952,
  "releases": {
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36adccbadec79e3d1895a760cc2b4eec07fdf707e4c73dbbcc8e04689af80e2b",
          "md5": "98ae8c99775e5b9e3ba3adb304475529",
          "sha256": "7a3a83f3a0e2bab7e30bfbd3334c98a38e2ddd5d3fd15ad69d9ac75249547217"
        },
        "downloads": -1,
        "filename": "sample-metadata-ms-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "98ae8c99775e5b9e3ba3adb304475529",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 94586,
        "upload_time": "2022-05-23T22:24:50",
        "upload_time_iso_8601": "2022-05-23T22:24:50.312784Z",
        "url": "https://files.pythonhosted.org/packages/36/ad/ccbadec79e3d1895a760cc2b4eec07fdf707e4c73dbbcc8e04689af80e2b/sample-metadata-ms-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9754e50f390f74d281899c857379cb970d4ac310f51ea1cff0dca07f3c8aa226",
          "md5": "4f4a54e80b33910b841f6529b90b0dcc",
          "sha256": "4cad40e8df45d3af9cb6bf864064e8eb01b52926224c827acd9360d53220f1ad"
        },
        "downloads": -1,
        "filename": "sample-metadata-ms-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4f4a54e80b33910b841f6529b90b0dcc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 94580,
        "upload_time": "2022-05-25T17:10:20",
        "upload_time_iso_8601": "2022-05-25T17:10:20.016090Z",
        "url": "https://files.pythonhosted.org/packages/97/54/e50f390f74d281899c857379cb970d4ac310f51ea1cff0dca07f3c8aa226/sample-metadata-ms-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "652361f845cb4e8592bb530a80f0f670538adc8ea2e18d1c4e6ff727faab13a8",
          "md5": "009505bcb3d30f835e8186b5decbfaae",
          "sha256": "afe4f0f4c03f809c669ce3d44a7ee56b614d4166b7ebcac5ebb43cd1e14484c7"
        },
        "downloads": -1,
        "filename": "sample-metadata-ms-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "009505bcb3d30f835e8186b5decbfaae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 94606,
        "upload_time": "2022-05-25T17:25:12",
        "upload_time_iso_8601": "2022-05-25T17:25:12.873167Z",
        "url": "https://files.pythonhosted.org/packages/65/23/61f845cb4e8592bb530a80f0f670538adc8ea2e18d1c4e6ff727faab13a8/sample-metadata-ms-0.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "202199ce434545a4a3908ddc50e8206d1dc366801c7c77ecdeca3115ba39ffd2",
          "md5": "2bcc5943d00ffde372017cdc92cc6317",
          "sha256": "175e0443abf7e3101c3107b422c3576c706e994dc769865f84ac7bb3befca4d0"
        },
        "downloads": -1,
        "filename": "sample-metadata-ms-0.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2bcc5943d00ffde372017cdc92cc6317",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 94581,
        "upload_time": "2022-05-25T22:07:06",
        "upload_time_iso_8601": "2022-05-25T22:07:06.820893Z",
        "url": "https://files.pythonhosted.org/packages/20/21/99ce434545a4a3908ddc50e8206d1dc366801c7c77ecdeca3115ba39ffd2/sample-metadata-ms-0.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe35882cda8df9b0eb2b454d105a846d0f8e39744160a6e6e72517d0591e8451",
          "md5": "9621cfbf28ab01757f98673ff29dbe20",
          "sha256": "904d640cba4108eb4158dd9c67a876131e65f8af312c4142f8e4210a0a174625"
        },
        "downloads": -1,
        "filename": "sample-metadata-ms-0.6.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9621cfbf28ab01757f98673ff29dbe20",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 95191,
        "upload_time": "2022-06-03T15:20:13",
        "upload_time_iso_8601": "2022-06-03T15:20:13.105921Z",
        "url": "https://files.pythonhosted.org/packages/fe/35/882cda8df9b0eb2b454d105a846d0f8e39744160a6e6e72517d0591e8451/sample-metadata-ms-0.6.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b1bb23c5bfe80ebf0741147fb8ac0e166bd4cb7e87f3eb9958eb53ae0081a56",
          "md5": "70568436d2d09e46a5a220b9aa4a3a14",
          "sha256": "57968ec41da569fc7480bd13bc91c181185723b0b7d2c22d125d2dcfe516c4ef"
        },
        "downloads": -1,
        "filename": "sample-metadata-ms-0.6.5.tar.gz",
        "has_sig": false,
        "md5_digest": "70568436d2d09e46a5a220b9aa4a3a14",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 99410,
        "upload_time": "2022-06-17T21:18:45",
        "upload_time_iso_8601": "2022-06-17T21:18:45.485515Z",
        "url": "https://files.pythonhosted.org/packages/5b/1b/b23c5bfe80ebf0741147fb8ac0e166bd4cb7e87f3eb9958eb53ae0081a56/sample-metadata-ms-0.6.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fcff02e578b6fd239b06bb83b879c61444050c2b18fa447ff73e26174ce1aab",
          "md5": "1d1f0ee2c26887f15601b673d6d9d9e1",
          "sha256": "6f92bfe229ff3526d913dc706b4ac29633e92903bf83b63e6437957da8bacb6a"
        },
        "downloads": -1,
        "filename": "sample-metadata-ms-0.6.7.tar.gz",
        "has_sig": false,
        "md5_digest": "1d1f0ee2c26887f15601b673d6d9d9e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 99454,
        "upload_time": "2022-07-06T21:49:00",
        "upload_time_iso_8601": "2022-07-06T21:49:00.016636Z",
        "url": "https://files.pythonhosted.org/packages/8f/cf/f02e578b6fd239b06bb83b879c61444050c2b18fa447ff73e26174ce1aab/sample-metadata-ms-0.6.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2903123b4eafea9207017afe2e893696a472782ea1c0a7698f9c681040975541",
          "md5": "933452822d47bb6e63343de7707a5f1a",
          "sha256": "66375a3c8fc9c5e52a975efe58f4718312a543485c3220f00b96f6164f205b00"
        },
        "downloads": -1,
        "filename": "sample-metadata-ms-0.6.8.tar.gz",
        "has_sig": false,
        "md5_digest": "933452822d47bb6e63343de7707a5f1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 99454,
        "upload_time": "2022-08-05T19:35:40",
        "upload_time_iso_8601": "2022-08-05T19:35:40.568130Z",
        "url": "https://files.pythonhosted.org/packages/29/03/123b4eafea9207017afe2e893696a472782ea1c0a7698f9c681040975541/sample-metadata-ms-0.6.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05555c03fdb4ce367c86b6a17cd16886cf1efa1ac0b7a3708447698ffe6e4783",
          "md5": "aa29a89e0be45947e4b6884dd3d9d73d",
          "sha256": "ada24d45a21787a5f04d494beabc8cbf6f904ef2d3286833e99d210b4409238e"
        },
        "downloads": -1,
        "filename": "sample-metadata-ms-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aa29a89e0be45947e4b6884dd3d9d73d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 107942,
        "upload_time": "2022-09-23T21:37:21",
        "upload_time_iso_8601": "2022-09-23T21:37:21.753803Z",
        "url": "https://files.pythonhosted.org/packages/05/55/5c03fdb4ce367c86b6a17cd16886cf1efa1ac0b7a3708447698ffe6e4783/sample-metadata-ms-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9aa411cef6f2476a5f239b0182874c0b91c254415a2af3927812f2efe60f8ea6",
          "md5": "d8a7b238c3a36544b2b388ce460e0598",
          "sha256": "5d7d4ab4949da8a5d04d757da6e605960fa7d78b8f34a19dcdb6b756a3d6f59e"
        },
        "downloads": -1,
        "filename": "sample-metadata-ms-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d8a7b238c3a36544b2b388ce460e0598",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 107968,
        "upload_time": "2022-11-09T21:42:32",
        "upload_time_iso_8601": "2022-11-09T21:42:32.167805Z",
        "url": "https://files.pythonhosted.org/packages/9a/a4/11cef6f2476a5f239b0182874c0b91c254415a2af3927812f2efe60f8ea6/sample-metadata-ms-0.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9aa411cef6f2476a5f239b0182874c0b91c254415a2af3927812f2efe60f8ea6",
        "md5": "d8a7b238c3a36544b2b388ce460e0598",
        "sha256": "5d7d4ab4949da8a5d04d757da6e605960fa7d78b8f34a19dcdb6b756a3d6f59e"
      },
      "downloads": -1,
      "filename": "sample-metadata-ms-0.7.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d8a7b238c3a36544b2b388ce460e0598",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 107968,
      "upload_time": "2022-11-09T21:42:32",
      "upload_time_iso_8601": "2022-11-09T21:42:32.167805Z",
      "url": "https://files.pythonhosted.org/packages/9a/a4/11cef6f2476a5f239b0182874c0b91c254415a2af3927812f2efe60f8ea6/sample-metadata-ms-0.7.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}