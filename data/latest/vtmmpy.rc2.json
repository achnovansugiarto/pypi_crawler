{
  "info": {
    "author": "Tony",
    "author_email": "tk_87@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# **Vectorized Transfer Matrix Method Python** \nThe transfer matrix method (TMM) is an analytic approach for obtaining the reflection and transmission coefficients in stratified media. vtmmpy is a vectorised implementation of the TMM written in Python. It has a focus on speed and ease of use. \n\n![](https://github.com/AI-Tony/vtmmpy/raw/master/images/MTM.png)\n\n### **Mathematical background**\n\n---\n\n$$\n\\mathbf{M}_{TM}^{(\\ell)} = \n\\begin{bmatrix}\n \\cos(\\beta_\\ell d_\\ell) & \\sin(\\beta_\\ell d_\\ell)n_\\ell^2/\\beta_\\ell \\\\\n-\\sin(\\beta_\\ell d_\\ell)\\beta_\\ell/n_\\ell^2 & \\cos(\\beta_\\ell d_\\ell)\n\\end{bmatrix}\n\\hspace{1cm}\n\\mathbf{M}_{TE}^{(\\ell)} = \n\\begin{bmatrix}\n \\cos(\\beta_\\ell d_\\ell) & \\sin(\\beta_\\ell d_\\ell)/\\beta_\\ell \\\\\n-\\sin(\\beta_\\ell d_\\ell)\\beta_\\ell & \\cos(\\beta_\\ell d_\\ell)\n\\end{bmatrix}\n$$ \n\n$$\n\\mathbf{M} = \\mathbf{M}^{(L)}\\cdots\\mathbf{M}^{(2)}\\cdot\\mathbf{M}^{(1)}\n$$\n\n$$\nr_{TM} = -\\frac{\\mathbf{M}_{TM}^{-1}n_t^2\\beta_i-\\mathbf{M}_{TM}^{-1}n_i^2\\beta_t+i[\\mathbf{M}_{TM}^{-1}n_i^2n_t^2+\\mathbf{M}_{TM}^{-1}\\beta_i\\beta_t]}{\\mathbf{M}_{TM}^{-1}n_t^2\\beta_i+\\mathbf{M}_{TM}^{-1}n_i^2\\beta_t-i[\\mathbf{M}_{TM}^{-1}n_i^2n_t^2-\\mathbf{M}_{TM}^{-1}\\beta_i\\beta_t]}\n$$\n\n$$\nr_{TE} = -\\frac{\\mathbf{M}_{TM}^{-1}\\beta_i-\\mathbf{M}_{TM}^{-1}\\beta_t+i[\\mathbf{M}_{TM}^{-1}+\\mathbf{M}_{TM}^{-1}\\beta_i\\beta_t]}{\\mathbf{M}_{TM}^{-1}\\beta_i+\\mathbf{M}_{TM}^{-1}\\beta_t-i[\\mathbf{M}_{TM}^{-1}-\\mathbf{M}_{TM}^{-1}\\beta_i\\beta_t]}\n$$\n\n$$\nt_{TM} = -\\frac{2n_in_t\\beta_i}{\\mathbf{M}_{TM}^{-1}n_t^2\\beta_i+\\mathbf{M}_{TM}^{-1}n_i^2\\beta_t-i[\\mathbf{M}_{TM}^{-1}n_i^2n_t^2-\\mathbf{M}_{TM}^{-1}\\beta_i\\beta_t]}\n$$\n\n$$\nt_{TE} = -\\frac{2\\beta_i}{\\mathbf{M}_{TM}^{-1}\\beta_i+\\mathbf{M}_{TM}^{-1}\\beta_t-i[\\mathbf{M}_{TM}^{-1}-\\mathbf{M}_{TM}^{-1}\\beta_i\\beta_t]}\n$$\n\n### **Installation**\n\n---\n\n**Pip**\n\n```\npip install vtmmpy \n```\n\n**Manual**\n\n```\ngit clone git@github.com:AI-Tony/vtmmpy.git\ncd vtmmpy/modules\nmv vtmmpy.py <YOUR PATH OR PROJECT DIRECTORY> \n```\n\n### **Usage**\n\n--- \n\nImport the vtmmpy module.\n\n```\nimport vtmmpy\n```\n\nCreate an instance of the ```TMM``` class. \n\n```\nfreq = np.linspace(170, 210, 30) \ntheta = np.array(0, 60, 60) \n\ntmm = vtmmpy.TMM(freq, \n                theta, \n                f_scale=1e12, \n                l_scale=1e-9, \n                incident_medium=\"air\", \n                transmitted_medium=\"air\") \n```\n\n- freq: a numpy array representing the spectral range of interest. \n- theta: a numpy array of one or more angles of incidence. \n- f_scale (optional): input frequency scale, default is terahertz.\n- l_scale (optional): input length scale, default is nanometers.\n- incident_medium (optional): incident medium, default is air.\n- transmitted_medium (optional): transmitted medium, default is air. \n\nAdd multilayer metamaterial designs with the ```addDesign()``` method.\n\n```\nmaterials = [\"sio2\", \"tio2\", \"sio2\", \"tio2\", \"sio2\"] \nthicknesses = [54, 92, 134, 112, 68] \n\ntmm.addDesign(materials, thicknesses)\n```\n\n- materials: list of materials \n- thicknesses: list of the corresponding material thicknesses \n\nOptionally call the ```summary()``` and/or ```designs()``` methods to view the data currently held by the instance.\n\n```\ntmm.summary() \ntmm.designs() \n```\n\nCalculate the reflection/transmission coefficients by calling the appropriate method. You should specify wether you want the transverse magnetic/electric polarization by supplying the \"TM\" or \"TE\" flag, respectively.\n\n```\nRTM = tmm.reflection(\"TM\") \nRTE = tmm.reflection(\"TE\") \nTTM = tmm.transmission(\"TM\") \nTTE = tmm.transmission(\"TE\") \n```\n\nTips: \n - The ```reflection()``` and ```transmission()``` methods return both complex parts. Use Python's built-in ```abs()``` function to obtain the magnitude.\n - The intensity is the square of the magnitude (eg. ```abs(reflection(\"TM\"))**2```). \n - The minimum number of dimensions for ```reflection()``` and ```transmission()``` is 2. Therefore, when printing/plotting results, an index must be provided. \n\n### **Examples**\n\n--- \n\n![](https://github.com/AI-Tony/vtmmpy/raw/master/images/2dplots.png)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AI-Tony/vtmmpy/tree/master",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vtmmpy",
    "package_url": "https://pypi.org/project/vtmmpy/",
    "platform": null,
    "project_url": "https://pypi.org/project/vtmmpy/",
    "project_urls": {
      "Homepage": "https://github.com/AI-Tony/vtmmpy/tree/master"
    },
    "release_url": "https://pypi.org/project/vtmmpy/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A vectorized implementation of the transfer matrix method",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17346597,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70d4bd166e7976d6e9dd2b6754d37e43b25c5195529f567a7c89b16051cee23e",
          "md5": "81aba7e75347d33c641c74adc466d757",
          "sha256": "576061fb76ffee884159916b229a5d6976fe696fd2ba641dc14f1f0729be5b8c"
        },
        "downloads": -1,
        "filename": "vtmmpy-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81aba7e75347d33c641c74adc466d757",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4544,
        "upload_time": "2023-03-18T15:06:33",
        "upload_time_iso_8601": "2023-03-18T15:06:33.698862Z",
        "url": "https://files.pythonhosted.org/packages/70/d4/bd166e7976d6e9dd2b6754d37e43b25c5195529f567a7c89b16051cee23e/vtmmpy-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93b5862d5740b93b3e7c9698c5ff8bf579e15a15babda273da3612a5f1ded59e",
          "md5": "df544a5cbc4f132b6fc890d00e1b371b",
          "sha256": "0edac42f31063468bc2422ef2c49ab67e1c6a38e1ca250a5fb49e9e805ed1c56"
        },
        "downloads": -1,
        "filename": "vtmmpy-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "df544a5cbc4f132b6fc890d00e1b371b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4494,
        "upload_time": "2023-03-18T15:06:35",
        "upload_time_iso_8601": "2023-03-18T15:06:35.129946Z",
        "url": "https://files.pythonhosted.org/packages/93/b5/862d5740b93b3e7c9698c5ff8bf579e15a15babda273da3612a5f1ded59e/vtmmpy-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30fb15774669171f5676748fe446217b95e583d802bf560e46aa88803041005f",
          "md5": "e4228cbc9e8a7b5ee8ea9ad5d368736e",
          "sha256": "e4375e77fc7cd97dd0ef59547bc2f265d4f201f9dcc3690a692b09edb9a0e479"
        },
        "downloads": -1,
        "filename": "vtmmpy-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4228cbc9e8a7b5ee8ea9ad5d368736e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4521,
        "upload_time": "2023-03-18T15:32:12",
        "upload_time_iso_8601": "2023-03-18T15:32:12.996002Z",
        "url": "https://files.pythonhosted.org/packages/30/fb/15774669171f5676748fe446217b95e583d802bf560e46aa88803041005f/vtmmpy-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "032c16b06a2580a7a02f7428efb11168abf78f073874c460e8b1a93bf5fe27fa",
          "md5": "94d728eea3562420909182bbb7a69b0e",
          "sha256": "bf56c6cefd904b993b8bf896358e461899486e601373bec6d6febd05a86ac872"
        },
        "downloads": -1,
        "filename": "vtmmpy-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "94d728eea3562420909182bbb7a69b0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4469,
        "upload_time": "2023-03-18T15:32:14",
        "upload_time_iso_8601": "2023-03-18T15:32:14.471160Z",
        "url": "https://files.pythonhosted.org/packages/03/2c/16b06a2580a7a02f7428efb11168abf78f073874c460e8b1a93bf5fe27fa/vtmmpy-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30fb15774669171f5676748fe446217b95e583d802bf560e46aa88803041005f",
        "md5": "e4228cbc9e8a7b5ee8ea9ad5d368736e",
        "sha256": "e4375e77fc7cd97dd0ef59547bc2f265d4f201f9dcc3690a692b09edb9a0e479"
      },
      "downloads": -1,
      "filename": "vtmmpy-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e4228cbc9e8a7b5ee8ea9ad5d368736e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4521,
      "upload_time": "2023-03-18T15:32:12",
      "upload_time_iso_8601": "2023-03-18T15:32:12.996002Z",
      "url": "https://files.pythonhosted.org/packages/30/fb/15774669171f5676748fe446217b95e583d802bf560e46aa88803041005f/vtmmpy-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "032c16b06a2580a7a02f7428efb11168abf78f073874c460e8b1a93bf5fe27fa",
        "md5": "94d728eea3562420909182bbb7a69b0e",
        "sha256": "bf56c6cefd904b993b8bf896358e461899486e601373bec6d6febd05a86ac872"
      },
      "downloads": -1,
      "filename": "vtmmpy-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "94d728eea3562420909182bbb7a69b0e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4469,
      "upload_time": "2023-03-18T15:32:14",
      "upload_time_iso_8601": "2023-03-18T15:32:14.471160Z",
      "url": "https://files.pythonhosted.org/packages/03/2c/16b06a2580a7a02f7428efb11168abf78f073874c460e8b1a93bf5fe27fa/vtmmpy-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}