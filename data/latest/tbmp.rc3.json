{
  "info": {
    "author": "Al Sweigart",
    "author_email": "al@inventwithpython.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "tbmp - A data structure for terminal-based bitmaps.\r\n======\r\n\r\nBy Al Sweigart al@inventwithpython.com\r\n\r\nA Python module for displaying bitmaps in the terminal as strings of block\r\ncharacters. Text characters are twice as tall as they are wide, so each\r\ntext character can represent two pixels. This module uses the block\r\ncharacters 9600, 9604, 9608, and the space character to represent pixels.\r\n\r\nSince they are still text characters, the \"pixels\" can be copy/pasted just\r\nlike any other text. This also makes it easy to display them in terminal\r\nwindows or IDEs or web apps. The simplicity makes this module flexible\r\nfor displaying graphics in a terminal window.\r\n\r\nThis module is intended to be used to teach programming concepts such as\r\nnested for loops, simple 2D graphics, cellular automata such as Conway's\r\nGame of Life, and other concepts.\r\n\r\nThe applyFunc() method especially can be used for generating algorithmic\r\nart.\r\n\r\nThe demo folder has example programs that use terminal bitmaps. They\r\ninclude Conway's Game of Life, a Mona Lisa render from a large hexadecimal\r\nnumber, and a rotating cube animation.\r\n\r\nThis module has no dependencies and fits in a single .py file, so it can\r\nbe installed through pip or just copied to a tbmp.py file for importing.\r\nCopy the singleFileVersion/tbmp.py file to the folder your Python script\r\nis in to import tbmp without installing it via pip.\r\n\r\nInstallation\r\n------------\r\n\r\nTo install with pip, run:\r\n\r\n    pip install tbmp\r\n\r\nQuickstart Guide\r\n----------------\r\n\r\n    >>> from tbmp import *\r\n    >>> b = TBMP(10, 10)  # Create a 10x10 bitmap.\r\n    >>> b.width, b.height, b.size\r\n    (10, 10, (10, 10))\r\n    >>> for i in range(10):\r\n    ...   b[i, i] = True\r\n    ...   b[b.width - 1 - i, i] = True\r\n    ...\r\n    >>> print(b)\r\n    ▀▄      ▄▀\r\n      ▀▄  ▄▀\r\n        ██\r\n      ▄▀  ▀▄\r\n    ▄▀      ▀▄\r\n    >>> print(b.framed)\r\n    ┌──────────┐\r\n    │▀▄      ▄▀│\r\n    │  ▀▄  ▄▀  │\r\n    │    ██    │\r\n    │  ▄▀  ▀▄  │\r\n    │▄▀      ▀▄│\r\n    └──────────┘\r\n    >>> b.invert()\r\n    >>> print(b)\r\n    ▄▀██████▀▄\r\n    ██▄▀██▀▄██\r\n    ████  ████\r\n    ██▀▄██▄▀██\r\n    ▀▄██████▄▀\r\n    >>> b.shift(4, 1)\r\n    >>> print(b)\r\n         ▄▄▄▄▄\r\n        █▄▀███\r\n        ███▄▀▀\r\n        ███▀▄▄\r\n        █▀▄███\r\n    >>> b.randomize()  # Set pixels randomly\r\n    >>> print(b)\r\n    ▄█▀█▄ ▄█▀▀\r\n     ▀▄█  ▄ ▄▀\r\n    ▄ █▀█▀▄ ▀▄\r\n    ▀▄█▀▀  █▀▄\r\n    █▀▀██▄▄ ▀\r\n    >>> b.randomize(0.90)  # Set 90% of pixels on, at random.\r\n    >>> print(b)\r\n    █▄█████▄██\r\n    ▀██▀██████\r\n    ██▄███████\r\n    ▄███████▄█\r\n    █▄██▄█████\r\n    >>> b.randomize(0.25)  # Set 25% of pixels on, at random.\r\n    >>> print(b)\r\n    ▄ ▄▄ █  ▄\r\n    ▀▄▄▄  ▀\r\n           ▀▄▄\r\n     ▄  ▀▄  ▀\r\n     ▄  ▀  ▀\r\n    >>> b.image().save('myBitmap.png')\r\n    >>> b.image().show()  # Have Pillow show a preview of the image.\r\n\r\nThe `applyFunc()` function is useful for creating algorithmic art. You give it a lambda function (or string of a lambda function) that takes an x and y integer arguments and if the expression is zero, the pixel at those coordinates is black and if nonzero the pixel is white:\r\n\r\n    >>> b2 = TBMP()  # Create a bitmap slightly smaller than the terminal window.\r\n    >>> b2.applyFunc('(x ^ y) % 5')\r\n    >>> print(b2)\r\n    ▄▀██▀▄████▄▀██▀▄████▄▀██▀▄████▄▀██▀▄████▄▀██▀▄████▄▀██▀▄████▄▀██▀▄████▄▀██▀▄███\r\n    ██▄▀██▀▄▄▀██▀▄████████▄▀██▀▄▄▀██▀▄████████▄▀██▀▄▄▀██▀▄████████▄▀██▀▄▄▀██▀▄█████\r\n    ▀▄██▄▀████▀▄██▄▀▄▀████████▄▀▀▄████████▀▄▀▄██▄▀████▀▄██▄▀▄▀████████▄▀▀▄████████▀\r\n    ██▀▄██▄▀▀▄██▄▀████▄▀████▄▀████▀▄████▀▄████▀▄██▄▀▀▄██▄▀████▄▀████▄▀████▀▄████▀▄█\r\n    ██▄▀██▀▄▄▀██▀▄██▀▄████▄▀████▄▀██▄▀██▀▄████▀▄████████▄▀████▄▀██▀▄██▀▄████▀▄████▄\r\n    ▄▀██▀▄████▄▀██▀▄██▀▄▄▀████████▄▀██▄▀██▀▄▀▄████████████▄▀▄▀██▀▄██▀▄████████▀▄▄▀█\r\n    ██▀▄██▄▀▀▄██▄▀████▄▀▀▄██▄▀██████▀▄██▄▀████████▀▄▄▀████████▀▄██▄▀██████▀▄██▄▀▀▄█\r\n    ▀▄██▄▀████▀▄██▄▀▄▀████▀▄██▄▀██████▀▄██▄▀████▀▄████▄▀████▀▄██▄▀██████▀▄██▄▀████▀\r\n    ████▄▀██▀▄████▄▀▄▀██▀▄████▄▀██▀▄██▄▀██▀▄████▄▀████▀▄████▄▀██▀▄██▄▀██▀▄████▄▀██▀\r\n    ██████▄▀██▀▄▄▀████▄▀██▀▄▄▀██▀▄██▄▀██▀▄████████▄▀▀▄████████▄▀██▀▄██▄▀██▀▄▄▀██▀▄█\r\n    ▄▀████████▄▀▀▄██▀▄██▄▀████▀▄██▄▀██▀▄██▄▀▄▀████████████▀▄▀▄██▄▀██▀▄██▄▀████▀▄██▄\r\n    ██▄▀████▄▀████▀▄██▀▄██▄▀▀▄██▄▀██▀▄██▄▀████▄▀████████▀▄████▀▄██▄▀██▀▄██▄▀▀▄██▄▀█\r\n    ▀▄████▄▀████▄▀████▄▀██▀▄▄▀██▀▄██████▄▀████▄▀██▀▄▄▀██▀▄████▀▄██████▄▀██▀▄▄▀██▀▄█\r\n    ██▀▄▄▀████████▄▀▄▀██▀▄████▄▀██▀▄██████▄▀▄▀██▀▄████▄▀██▀▄▀▄██████▄▀██▀▄████▄▀██▀\r\n    ██▄▀▀▄██▄▀████████▀▄██▄▀▀▄██▄▀██▄▀████████▀▄██▄▀▀▄██▄▀████████▀▄██▀▄██▄▀▀▄██▄▀█\r\n    ▄▀████▀▄██▄▀████▀▄██▄▀████▀▄██▄▀██▄▀████▀▄██▄▀████▀▄██▄▀████▀▄██▀▄██▄▀████▀▄██▄\r\n    ██▀▄████▄▀██▀▄████▄▀██▀▄████▄▀██▄▀██▀▄████▄▀██▀▄████▄▀██▀▄████▄▀████▄▀██▀▄████▄\r\n    ▀▄████████▄▀██▀▄▄▀██▀▄████████▄▀██▄▀██▀▄▄▀██▀▄████████▄▀██▀▄▄▀████████▄▀██▀▄▄▀█\r\n    ██████▀▄▀▄██▄▀████▀▄██▄▀▄▀██████▀▄██▄▀████▀▄██▄▀▄▀████████▄▀▀▄██▄▀████████▄▀▀▄█\r\n    ████▀▄████▀▄██▄▀▀▄██▄▀████▄▀██████▀▄██▄▀▀▄██▄▀████▄▀████▄▀████▀▄██▄▀████▄▀████▀\r\n    ▄▀██▀▄████▀▄████████▄▀████▄▀██▀▄██▄▀██▀▄▄▀██▀▄██▀▄████▄▀████▄▀██▀▄████▄▀████▄▀█\r\n    ██▄▀██▀▄▀▄████████████▄▀▄▀██▀▄██▄▀██▀▄████▄▀██▀▄██▀▄▄▀████████▄▀██▀▄▄▀████████▄\r\n\r\nThe `tbpm` module also comes with a `cube()` and `monaLisa()` function that return premade TBMP objects:\r\n\r\n    >>> print(cube())\r\n           ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄\r\n         ▄▀█           ▄▀█\r\n      ▄▀▀  █        ▄▀▀  ▀▄\r\n    ▄█▄▄▄▄▄▄█▄▄▄▄▄▄▀      █\r\n    █       █     █       █\r\n    █       █     ▀▄      █\r\n     █      ▀▄     █      ▀▄\r\n     █       █     █       █\r\n     █      ▄▀▀▀▀▀▀█▀▀▀▀▀▀█▀\r\n     ▀▄  ▄▄▀       ▀▄  ▄▄▀\r\n      █▄▀           █▄▀\r\n      ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀\r\n    >>> print(monaLisa())\r\n    ▀▄▀ █ ▀▀▄▀ ▀▄▀▀▄▀ ▀▄▀ ▀▄▀▄▀▀▄ ▄▀▄▀ ▄ █ █ ▀▄▀ ▀▄▀ ▀ ▄▀▄▀ ▀ █ ▀▄▀ █ █\r\n    ▄ █ ▄▀▄ ▀▄▀▄ ▀  ▀▀  ▀▀▄▄ ▄ ▄  ▀▄ ▀▀▄ ▀▄ █ ▄▀▄ ▀ █ ▀▄  █ █ ▄▀▄ █  █▄\r\n    ▄▄▀ ▄▄▀▄▀ ▄▄▀▀▀▄▀▄▀ █ ▄ ▀▄▄▀ █ ▀▄▀▄ █ ▄ ▄▀ █ ▀▀▄ ▀▄▀▀ ▄ █ ▄▀ ▄▄▀▄▄▄▀\r\n    ▄▄▀▄▄ ▄ █  █ █▄ █ █ ▄▀▄█ ▄ █ █ █▄ █ █▄▀▄ █ ▄▀▀▄▀█ ▄▀▀▄▀▄ █ █▄ █ ▄ █\r\n     ▀▄▀▄█ █ █▀ █ ▄▀▄▀▄▀▄▀ ▄▀▄▀▄▀ ▀       ▀▄▀▄▀▄▀▄▄ ▀▄▄▀▄▄▀▄▀▄▀▄▀▄▄▀▄▀█\r\n    █ █▄ █▄ █ ▀█ █ █ █ █▄▀█ █ ▀▀   ▀▄         ▀▄▀▄▀▀▄ █▄▄ █ █ █ █ █ █ █▄\r\n    ▄▀ █▀ █▄▀█▀▄▀▄▀▄█▀▄▄▀▄▀█▄▀ ▄▄█▀▄▄ ▀        ▀▄▄█▀▄▀▄▄▀█ █▄▀▄█ █▄▀▀▀▄▄\r\n    ▀█ ▀█ █ █ ██▄▀█ █▀▄▀██ █  █▄███▄██ ▀▄        ▄█▄▀▄▄█ █▀▄▀█▄ █ █▀█▄█\r\n    ▀▄█▀█▀▄█▀█▄▄▀█▄▀█▄▀█ █▀  ▀▄█▄▀██▄▀█▄ ▄        ▄▀▀▄ █▄▀▀▄█▀▀█▀▄█▄▀▄█▀\r\n    ▄▄ ▀█▄ ▄▀▄▀█ ██ ██ ██ ▀  █▄███▄███▄█ █        ▀ ▀▄▄ ▀▀█ ██ ██ █▄▀▄▀▀\r\n      ▀  ▄ ▀▄▀ ▀▄ ▀▀▄▀█▀█▀   ▀  ▀▄▀  ▄ ▀  ▀        ▀▄  ▄▀ ▄▀▄██ ██▄▄▀▄▀▄\r\n      ▀▄  ▀▄  ▀▄  ▀ █▄▀▀▄▀   █ █ ██ ▄█▄ █▄▀         ▄ ▄ ▄ ▄ █▄▀█▄ █ █ █\r\n     ▄ ▄ ▀ ▀ ▀   ▀ ▀  ▄ ▄ ▄  ██▀█▄▄▀▄█▄█▄█ ▀       ▄ ▄ ▄     █▀▄▀█ █ ▀▄▀\r\n     ▄   ▀  ▀  ▀▄ ▄           ██ ██ ▄▀█▄▄              ▀ ▀▀▀ █ ▀ ▀▄ ▀ ▀\r\n        ▄ ▀ ▀▄ ▀    ▀  ▄    ▀ ▀▄█▄  ▀▀█ ▄ ▄ ▄      ▄   ▄   ▀   ▀ ▀  ▀  ▀\r\n     ▄   ▄    ▄ ▄   ▀   ▀     ▀▄▄▀█  █ ▀▄    ▀      ▀   ▄   ▀ ▀▄ ▀  ▀▄\r\n       ▄    ▀     ▄  ▀ ▄ ▄      ▀█▄▀▄▀▀              ▀ ▀  ▄  ▀     ▄  ▄\r\n       ▄    ▀  ▀  ▄   ▄ ▄  ▄      ▀                   ▀ ▄  ▀  ▀ ▀ ▄ ▄ ▄\r\n          ▀  ▀  ▀   ▀▄ ▀▄          ▀▄ ▀ ▄  ▀     ▄   ▄  ▄     ▄  ▄   ▄\r\n     ▄     ▀▄ ▄ ▀ ▀▄ ▀  ▀▄    ▄    █ █  █ █ ▀▄        ▀   ▀ ▀ ▄▀▄ ▀▄  ▀\r\n       ▀ ▄ ▀ ▄  ▄     ▀          ▄▄█▄█▀▄▄█ █▄          ▄  ▀  ▄ █  ▀  ▄ ▀\r\n    ▄     ▀▄   ▄ ▀     ▀  ▄    ██▄█▄█▀█▄▀██▄▀  ▀ ▀        ▀█▄▀▄▄ ▀▄  ▀▄\r\n      ▀ ▄   ▄▀▄  ▀  ▄        ▄▀█▄█▄█▀██▀██▄█▀▄      ▄    ▀   ▀▄ ▀ ▄▀▄\r\n     ▀   ▀   ▀▄▀ ▀  ▄ ▀    ▄▄▄▀██▀██▀███▄▀█▄▀  ▀     █     ▀ ▄ ▀▀▀▄ ██▄\r\n      ▀ ▄ ▀    ▀ ▀▄▄      ▄▄▀█▀█▀██▀███▀███▄▀▄ ▄▀▀▀▀  ▀          ▀ ▄ ▄▄▀\r\n     ▄   ▀▄ ▀ █▄▄          ▀▀██▀████▄███▄██ █    ▀                    ▀▄\r\n       ▄ ▀ ▀ ▀ ▄       ▄   ▀ ▄ ▀▄▀▀▀█▀█▀█ ▀  ▄     ▄   ▄       ▀ ▀ ▀ ▄\r\n    ▀   █  ▀▄  █ ▀      ▀▄     ▄ ▀ ▄  ▄  ▄               ▀        ▄  ▀\r\n          ▀  ▀    ▀          ▄   ▄  ▀  ▄        ▄  ▄ ▄         ▄     ▄\r\n    ▀   ▀▄ ▀▄▄       ▄        ▀                      ▄  ▀▄       ▀ ▄\r\n      ▀▄▀▄▀▄ ▀▀    ▀              ▀  ▀     ▀       ▀                 ▀\r\n    ▀    ▄  ▀  ▄       ▀   ▄  ▄      ▄                         ▀   ▀  ▀\r\n    ▄  ▀   ▄      ▄     ▄        ▀             ▀                    ▄\r\n       ▄           ▀             ▄     ▄                  ▀  ▄       ▄\r\n    ▄         ▀                          ▄      ▀    ▀\r\n     ▀    ▀    ▄ ▄   ▄   ▀   ▀    ▀                              ▀    ▀\r\n    ▄       ▀  ▄   ▀    ▄ ▄                         ▄       ▄\r\n     ▀  ▄   ▀▄  ▀  ▀ ▄▄▄▀██▀█▄▀▄ ▄        ▀           ▀       ▄\r\n                 ▀    ▄▀█ █▀▄█▄█▀▄▀▄                               ▀\r\n                  ▀     ▀▄ ▀ █ ▀█ █▀██▄     ▄         ▄      ▄\r\n     ▄                ▄ ▄ ▀▄▀▄▀▀▄▀▄▄ ▀ ▀▄▀ ▀  ▀ ▀ ▀ ▀             ▀\r\n         ▄          ▄ ▄ ▀█   ▀ █▄  ▀█▄   ▀ ▀▄   ▄      ▄\r\n       ▀        ▀   ▄ ▄▀ █▀▀ ▀   ▀▄▄  ▀▄     ▄      ▄             ▀   ▀\r\n            ▀         ▀▄ ▀▀▀  ▀    ▀    ▀▄                 ▀\r\n                     ▀ ▄▀    ▄  ▄   ▄\r\n                         ▄                                       ▀\r\n                ▄\r\n                                            ▀\r\n        ▀           ▀             ▀                                ▀\r\n                            ▀\r\n\r\n\r\nContribute\r\n----------\r\n\r\nIf you'd like to contribute to tbmp, check out https://github.com/asweigart/tbmp\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/asweigart/tbmp",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tbmp",
    "package_url": "https://pypi.org/project/tbmp/",
    "platform": "",
    "project_url": "https://pypi.org/project/tbmp/",
    "project_urls": {
      "Homepage": "https://github.com/asweigart/tbmp"
    },
    "release_url": "https://pypi.org/project/tbmp/0.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python module for displaying bitmaps in the terminal as strings of block characters.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12410491,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6e445d494e667243f4fdf77657bee042cbeb22b366332c3662229381461f603",
          "md5": "3b5684f6aa7c9f6f4e9098aa57642c93",
          "sha256": "3aff42d2f09fbb60cc4f3d005bd4c8df66b90185370355410ea1d96559a7c939"
        },
        "downloads": -1,
        "filename": "tbmp-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3b5684f6aa7c9f6f4e9098aa57642c93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13366,
        "upload_time": "2021-12-24T03:14:28",
        "upload_time_iso_8601": "2021-12-24T03:14:28.787590Z",
        "url": "https://files.pythonhosted.org/packages/e6/e4/45d494e667243f4fdf77657bee042cbeb22b366332c3662229381461f603/tbmp-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "249788756251ec6a0028d881c54bed63fd13c45b748c78db32bce97d89536e99",
          "md5": "1aeee96ba00834ca3c8f4f97c670c104",
          "sha256": "214ad64e16ca868327ffaf8f6e128c16ea929b7dcad66f5496df35a4b9330b07"
        },
        "downloads": -1,
        "filename": "tbmp-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1aeee96ba00834ca3c8f4f97c670c104",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20346,
        "upload_time": "2021-12-26T18:37:22",
        "upload_time_iso_8601": "2021-12-26T18:37:22.145475Z",
        "url": "https://files.pythonhosted.org/packages/24/97/88756251ec6a0028d881c54bed63fd13c45b748c78db32bce97d89536e99/tbmp-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc4309327181ef01a9fe73324fe76fa28074dc7345332df05764b9549a3ee8fd",
          "md5": "00f632ab06675bc7b0af91fe219effe9",
          "sha256": "165923d07166949ef322f97ecb4f612f7e170cf8977dc33ba30a27d37033606b"
        },
        "downloads": -1,
        "filename": "tbmp-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "00f632ab06675bc7b0af91fe219effe9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26817,
        "upload_time": "2021-12-26T23:42:39",
        "upload_time_iso_8601": "2021-12-26T23:42:39.507888Z",
        "url": "https://files.pythonhosted.org/packages/cc/43/09327181ef01a9fe73324fe76fa28074dc7345332df05764b9549a3ee8fd/tbmp-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc4309327181ef01a9fe73324fe76fa28074dc7345332df05764b9549a3ee8fd",
        "md5": "00f632ab06675bc7b0af91fe219effe9",
        "sha256": "165923d07166949ef322f97ecb4f612f7e170cf8977dc33ba30a27d37033606b"
      },
      "downloads": -1,
      "filename": "tbmp-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "00f632ab06675bc7b0af91fe219effe9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26817,
      "upload_time": "2021-12-26T23:42:39",
      "upload_time_iso_8601": "2021-12-26T23:42:39.507888Z",
      "url": "https://files.pythonhosted.org/packages/cc/43/09327181ef01a9fe73324fe76fa28074dc7345332df05764b9549a3ee8fd/tbmp-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}