{
  "info": {
    "author": "Jyotika Singh",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pyAudioProcessing\n\n![pyaudioprocessing](https://user-images.githubusercontent.com/16875926/131924198-e34abe7e-12d8-41f9-926d-db199734dcaa.png)\n\nA Python based library for processing audio data into features (GFCC, MFCC, spectral, chroma) and building Machine Learning models.  \nThis was written using `Python 3.7.6`, and has been tested to work with Python >= 3.6, <4.  \n\n## Getting Started  \n\n1. One way to install pyAudioProcessing and it's dependencies is from PyPI using pip\n```\npip install pyAudioProcessing\n```  \nTo upgrade to the latest version of pyAudioProcessing, the following pip command can be used.  \n```\npip install -U pyAudioProcessing\n```  \n\n2. Or, you could also clone the project and get it setup  \n\n```\ngit clone git@github.com:jsingh811/pyAudioProcessing.git\ncd pyAudioProcessing\npip install -e .\n```\nYou can also get the requirements by running\n\n```\npip install -r requirements/requirements.txt\n```\n\n\n## Contents  \n[Data structuring](https://github.com/jsingh811/pyAudioProcessing#training-and-testing-data-structuring)  \n[Feature and Classifier model options](https://github.com/jsingh811/pyAudioProcessing#options)  \n[Pre-trained models](https://github.com/jsingh811/pyAudioProcessing#classifying-with-pre-trained-models)  \n[Extracting numerical features from audio](https://github.com/jsingh811/pyAudioProcessing#extracting-features-from-audios)  \n[Building custom classification models](https://github.com/jsingh811/pyAudioProcessing#training-and-classifying-audio-files)  \n[Audio cleaning](https://github.com/jsingh811/pyAudioProcessing#audio-cleaning)  \n[Audio format conversion](https://github.com/jsingh811/pyAudioProcessing#audio-format-conversion)  \n[Audio visualization](https://github.com/jsingh811/pyAudioProcessing#audio-visualization)  \n\nPlease refer to the [Wiki](https://github.com/jsingh811/pyAudioProcessing/wiki) for more details.    \n\n## Citation\n\nUsing pyAudioProcessing in your research? Please cite as follows.\n\n\n```\nJyotika Singh. (2021, July 22). jsingh811/pyAudioProcessing: Audio processing, feature extraction and classification (Version v1.2.0). Zenodo. http://doi.org/10.5281/zenodo.5121041\n```\n[![DOI](https://zenodo.org/badge/197088356.svg)](https://zenodo.org/badge/latestdoi/197088356)\n\n\nBibtex\n```\n@software{jyotika_singh_2021_5121041,\n  author       = {Jyotika Singh},\n  title        = {{jsingh811/pyAudioProcessing: Audio processing,\n                   feature extraction and classification}},\n  month        = jul,\n  year         = 2021,\n  publisher    = {Zenodo},\n  version      = {v1.2.0},\n  doi          = {10.5281/zenodo.5121041},\n  url          = {https://doi.org/10.5281/zenodo.5121041}\n}\n```\n\n\n## Options\n\n### Feature options  \n\nYou can choose between features `gfcc`, `mfcc`, `spectral`, `chroma` or any combination of those, example `gfcc,mfcc,spectral,chroma`, to extract from your audio files for classification or just saving extracted feature for other uses.  \n\n### Classifier options   \n\nYou can choose between `svm`, `svm_rbf`, `randomforest`, `logisticregression`, `knn`, `gradientboosting` and `extratrees`.    \nHyperparameter tuning is included in the code for each using grid search.  \n\n\n## Training and Testing Data structuring  (Optional)\n\nThe library works with data structured as per this section or alternatively with taking an input dictionary object specifying location paths of the audio files.\n\nLet's say you have 2 classes that you have training data for (music and speech), and you want to use pyAudioProcessing to train a model using available feature options. Save each class as a directory and all the training audio .wav files under the respective class directories. Example:  \n\n```bash\n.\n├── training_data\n├── music\n│   ├── music_sample1.wav\n│   ├── music_sample2.wav\n│   ├── music_sample3.wav\n│   ├── music_sample4.wav\n├── speech\n│   ├── speech_sample1.wav\n│   ├── speech_sample2.wav\n│   ├── speech_sample3.wav\n│   ├── speech_sample4.wav\n```  \n\nSimilarly, for any test data (with known labels) you want to pass through the classifier, structure it similarly as  \n\n```bash\n.\n├── testing_data\n├── music\n│   ├── music_sample5.wav\n│   ├── music_sample6.wav\n├── speech\n│   ├── speech_sample5.wav\n│   ├── speech_sample6.wav\n```  \nIf you want to classify audio samples without any known labels, structure the data similarly as  \n\n```bash\n.\n├── data\n├── unknown\n│   ├── sample1.wav\n│   ├── sample2.wav\n```  \n\n## Classifying with Pre-trained Models\n\nThere are three models that have been pre-trained and provided in this project under the /models directory. They are as follows.\n\n`music genre`: Contains SVM classifier to classify audio into 10 music genres - blues, classical, country, disco, hiphop, jazz, metal, pop, reggae, rock. This classifier was trained using mfcc, gfcc, spectral and chroma features. In order to classify your audio files using this classifier, please follow the audio files structuring guidelines. The following commands in Python can be used to classify your data.\n\n`musicVSspeech`: Contains SVM classifier that classifying audio into two possible classes - music and speech. This classifier was trained using mfcc, spectral and chroma features.\n\n`musicVSspeechVSbirds`: Contains SVM classifier that classifying audio into three possible classes - music, speech and birds. This classifier was trained using mfcc, spectral and chroma features.\n\nThere are three ways to specify the data you want to classify.  \n\n1. Classifying a single audio file specified by input `file`.\n\n```\nfrom pyAudioProcessing.run_classification import classify_ms, classify_msb, classify_genre\n\n# musicVSspeech classification\nresults_music_speech = classify_ms(file=\"/Users/xyz/Documents/audio.wav\")\n\n# musicVSspeechVSbirds classification\nresults_music_speech_birds = classify_msb(file=\"/Users/xyz/Documents/audio.wav\")\n\n# music genre classification\nresults_music_genre = classify_genre(file=\"/Users/xyz/Documents/audio.wav\")\n```\n\n2. Using `file_names` specifying locations of audios as follows.\n\n```\n# {\"audios_1\" : [<path to audio>, <path to audio>, ...], \"audios_2\": [<path to audio>, ...],}\n\n# Examples.  \n\nfile_names = {\n\t\"music\" : [\"/Users/abc/Documents/opera.wav\", \"/Users/abc/Downloads/song.wav\"],\n\t\"birds\": [ \"/Users/abc/Documents/b1.wav\", \"/Users/abc/Documents/b2.wav\", \"/Users/abc/Desktop/birdsound.wav\"]\n}\n\nfile_names = {\n\t\"audios\" : [\"/Users/abc/Documents/opera.wav\", \"/Users/abc/Downloads/song.wav\", \"/Users/abc/Documents/b1.wav\", \"/Users/abc/Documents/b2.wav\", \"/Users/abc/Desktop/birdsound.wav\"]\n}\n```  \n\nThe following commands in Python can be used to classify your data.\n\n```\nfrom pyAudioProcessing.run_classification import classify_ms, classify_msb, classify_genre\n\n# musicVSspeech classification\nresults_music_speech = classify_ms(file_names=file_names)\n\n# musicVSspeechVSbirds classification\nresults_music_speech_birds = classify_msb(file_names=file_names)\n\n# music genre classification\nresults_music_genre = classify_genre(file_names=file_names)\n```\n\n3. Using data structured as specified in [structuring guidelines](https://github.com/jsingh811/pyAudioProcessing#training-and-testing-data-structuring) and passing the parent folder path as `folder_path` input.  \n\nThe following commands in Python can be used to classify your data.\n\n```\nfrom pyAudioProcessing.run_classification import classify_ms, classify_msb, classify_genre\n\n# musicVSspeech classification\nresults_music_speech = classify_ms(folder_path=\"../data\")\n\n# musicVSspeechVSbirds classification\nresults_music_speech_birds = classify_msb(folder_path=\"../data\")\n\n# music genre classification\nresults_music_genre = classify_genre(folder_path=\"../data\")\n```\n\n\nSample results look like  \n```\n{'../data/music': {'beatles.wav': {'probabilities': [0.8899067858599712, 0.011922234412695229, 0.0981709797273336], 'classes': ['music', 'speech', 'birds']}, ...}\n```\n\n## Training and Classifying Audio files  \n\nAudio data can be trained, tested and classified using pyAudioProcessing. Please see [feature options](https://github.com/jsingh811/pyAudioProcessing#feature-options) and [classifier model options](https://github.com/jsingh811/pyAudioProcessing#classifier-options) for more information.   \n\nSample spoken location name dataset for spoken instances of \"london\" and \"boston\" can be found [here](https://drive.google.com/drive/folders/1AayPvvgZh4Jvi6LYDR7YS_ar7l3gEtAy?usp=sharing).\n\n### Examples  \n\nCode example of using `gfcc,spectral,chroma` feature and `svm` classifier. Sample data can be found [here](https://github.com/jsingh811/pyAudioProcessing/tree/master/data_samples). \n\nThere are 2 ways to pass the training data in. \n\n1. Using locations of files in a dictionary format as the input `file_names`.  \n\n2. Passing in a \t`folder_path` containing sub-folders and audio. Please refer to the section on [Training and Testing Data structuring](https://github.com/jsingh811/pyAudioProcessing#training-and-testing-data-structuring) to use your own data instead.   \n\n```\nfrom pyAudioProcessing.run_classification import  classify, train\n\n# Training\ntrain(\n\tfile_names={\n\t\t\"music\": [<path to audio>, <path to audio>, ..],\n\t\t\"speech\": [<path to audio>, <path to audio>, ..]\n\t},\n\tfeature_names=[\"gfcc\", \"spectral\", \"chroma\"],\n\tclassifier=\"svm\",\n\tclassifier_name=\"svm_test_clf\"\n)\n\n```\nOr, to use a directory containing audios organized as in [structuring guidelines](https://github.com/jsingh811/pyAudioProcessing#training-and-testing-data-structuring), the following can be used\n```\ntrain(\n\tfolder_path=\"../data\", # path to dir\n\tfeature_names=[\"gfcc\", \"spectral\", \"chroma\"],\n\tclassifier=\"svm\",\n\tclassifier_name=\"svm_test_clf\"\n)\n```\n\nThe above logs files analyzed, hyperparameter tuning results for recall, precision and F1 score, along with the final confusion matrix.\n\nTo classify audio samples with the classifier you created above,\n```\n# Classify a single file \n\nresults = classify(\n\tfile = \"<path to audio>\",\n\tfeature_names=[\"gfcc\", \"spectral\", \"chroma\"],\n\tclassifier=\"svm\",\n\tclassifier_name=\"svm_test_clf\"\n)\n\n# Classify multiple files with known labels and locations\nresults = classify(\n\tfile_names={\n\t\t\"music\": [<path to audio>, <path to audio>, ..],\n\t\t\"speech\": [<path to audio>, <path to audio>, ..]\n\t},\n\tfeature_names=[\"mfcc\", \"gfcc\", \"spectral\", \"chroma\"],\n\tclassifier=\"svm\",\n\tclassifier_name=\"svm_test_clf\"\n)\n\n# or you can specify a folder path as described in the training section.\n```  \nThe above logs the filename where the classification results are saved along with the details about testing files and the classifier used if you pass in logfile=True into the function call.\n\n\nIf you cloned the project via git, the following command line example of training and classification with `gfcc,spectral,chroma` features and `svm` classifier can be used as well. Sample data can be found [here](https://github.com/jsingh811/pyAudioProcessing/tree/master/data_samples). Please refer to the section on [Training and Testing Data structuring](https://github.com/jsingh811/pyAudioProcessing#training-and-testing-data-structuring) to use your own data instead.   \n\nTraining:  \n```\npython pyAudioProcessing/run_classification.py -f \"data_samples/training\" -clf \"svm\" -clfname \"svm_clf\" -t \"train\" -feats \"gfcc,spectral,chroma\"\n```  \nClassifying:   \n\n```\npython pyAudioProcessing/run_classification.py -f \"data_samples/testing\" -clf \"svm\" -clfname \"svm_clf\" -t \"classify\" -feats \"gfcc,spectral,chroma\" -logfile \"../classifier_results\"\n```  \nClassification results get saved in `../classifier_results_svm_clf.json`.  \n\n## Extracting features from audios  \n\nThis feature lets the user extract aggregated data features calculated per audio file. See [feature options](https://github.com/jsingh811/pyAudioProcessing#feature-options) for more information on choices of features available.  \n\n### Examples  \n\nCode example for performing `gfcc` and `mfcc` feature extraction can be found below. To use your own audio data for feature extraction, pass the path to `get_features` in place of `data_samples/testing`. Please refer to the format of directory `data_samples/testing` or the section on [Training and Testing Data structuring](https://github.com/jsingh811/pyAudioProcessing#training-and-testing-data-structuring).  \n\n```\nfrom pyAudioProcessing.extract_features import get_features\n\n# Feature extraction of a single file\n\nfeatures = get_features(\n  file=\"<path to audio>\",\n  feature_names=[\"gfcc\", \"mfcc\"]\n)\n\n# Feature extraction of a multiple files\n\nfeatures = get_features(\n  file_names={\n    \"music\": [<path to audio>, <path to audio>, ..],\n    \"speech\": [<path to audio>, <path to audio>, ..]\n  },\n  feature_names=[\"gfcc\", \"mfcc\"]\n)\n\n# or if you have a dir with  sub-folders and audios\n# features = get_features(folder_path=\"data_samples/testing\", feature_names=[\"gfcc\", \"mfcc\"])\n\n# features is a dictionary that will hold data of the following format\n\"\"\"\n{\n  music: {file1_path: {\"features\": <list>, \"feature_names\": <list>}, ...},\n  speech: {file1_path: {\"features\": <list>, \"feature_names\": <list>}, ...},\n  ...\n}\n\"\"\"\n```  \nTo save features in a json file,\n```\nfrom pyAudioProcessing import utils\nutils.write_to_json(\"audio_features.json\", features)\n```  \n\nIf you cloned the project via git, the following command line example of for `gfcc` and `mfcc` feature extractions can be used as well. The features argument should be a comma separated string, example `gfcc,mfcc`.  \nTo use your own audio files for feature extraction, pass in the directory path containing .wav files as the `-f` argument. Please refer to the format of directory `data_samples/testing` or the section on [Training and Testing Data structuring](https://github.com/jsingh811/pyAudioProcessing#training-and-testing-data-structuring).  \n\n```\npython pyAudioProcessing/extract_features.py -f \"data_samples/testing\"  -feats \"gfcc,mfcc\"\n```  \nFeatures extracted get saved in `audio_features.json`.  \n\n## Audio format conversion\n\nYou can convert you audio in `.mp4`, `.mp3`, `.m4a` and `.aac` to `.wav`. This will allow you to use audio feature generation and classification functionalities.\n\nIn order to convert your audios, the following code sample can be used.  \n\n```\nfrom pyAudioProcessing.convert_audio import convert_files_to_wav\n\n# dir_path is the path to the directory/folder on your machine containing audio files\ndir_path = \"data/mp4_files\"\n\n# simply change audio_format to \"mp3\", \"m4a\" or \"acc\" depending on the format\n# of audio that you are trying to convert to wav\nconvert_files_to_wav(dir_path, audio_format=\"mp4\")\n\n# the converted wav files will be saved in the same dir_path location.\n\n```\n\n\n## Audio cleaning\n\nTo remove low-activity regions from your audio clip, the following sample usage can be referred to.\n\n```\nfrom pyAudioProcessing import clean\n\nclean.remove_silence(\n\t      <path to wav file>,\n               output_file=<path where you want to store cleaned wav file>\n)\n```\n\n## Audio visualization\n\nTo see time-domain view of the audios, and the spectrogram of the audios, please refer to the following sample usage.\n\n```\nfrom pyAudioProcessing import plot\n\n# spectrogram plot\nplot.spectrogram(\n     <path to wav file>,\n    show=True, # set to False if you do not want the plot to show\n    save_to_disk=True, # set to False if you do not want the plot to save\n    output_file=<path where you want to store spectrogram as a png>\n)\n\n# time-series plot\nplot.time(\n     <path to wav file>,\n    show=True, # set to False if you do not want the plot to show\n    save_to_disk=True, # set to False if you do not want the plot to save\n    output_file=<path where you want to store the plot as a png>\n)\n```\n\n\n## Author  \n\nJyotika Singh  \nhttps://twitter.com/jyotikasingh_/\nhttps://www.linkedin.com/in/jyotikasingh/  \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jsingh811/pyAudioProcessing",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyAudioProcessing",
    "package_url": "https://pypi.org/project/pyAudioProcessing/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyAudioProcessing/",
    "project_urls": {
      "Homepage": "https://github.com/jsingh811/pyAudioProcessing"
    },
    "release_url": "https://pypi.org/project/pyAudioProcessing/1.1.13/",
    "requires_dist": [
      "matplotlib (==3.3.4)",
      "scipy (==1.5.4)",
      "pydub (==0.25.1)",
      "ffmpeg (==1.4)",
      "pytest (==6.2.3)",
      "numpy (==1.19.5) ; python_version < \"3.7\"",
      "scikit-learn (==0.24.2) ; python_version <= \"3.7\"",
      "numpy (==1.21.6) ; python_version == \"3.7\"",
      "numpy (==1.22.0) ; python_version >= \"3.8\"",
      "scikit-learn (==1.1.1) ; python_version >= \"3.8\""
    ],
    "requires_python": ">=3.6, <4",
    "summary": "Audio processing-feature extraction and building machine learning models from audio data.",
    "version": "1.1.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13880808,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11bb14050434eb6e2933312827c6fbecac4b561d2f6ef536bb2a822663f407ee",
          "md5": "f10906623a957442870ef6f4a6d6ab30",
          "sha256": "428c926b91e4a73560451ce6736d2243135b3b8f64b393f9db61903bf75bc71c"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f10906623a957442870ef6f4a6d6ab30",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15201,
        "upload_time": "2019-08-21T21:32:44",
        "upload_time_iso_8601": "2019-08-21T21:32:44.383247Z",
        "url": "https://files.pythonhosted.org/packages/11/bb/14050434eb6e2933312827c6fbecac4b561d2f6ef536bb2a822663f407ee/pyAudioProcessing-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "125d0ff1fc8c2bfaccb1bda902b773329045dae6b709de20ba67ad7959056c28",
          "md5": "9aeb11a16011797f7484357ed5c5a033",
          "sha256": "54a7ed56f2198ec8a7d4407ade2ff25f6e3ff78795916e8e04f9e1fad815672e"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9aeb11a16011797f7484357ed5c5a033",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2893,
        "upload_time": "2019-08-21T21:32:46",
        "upload_time_iso_8601": "2019-08-21T21:32:46.378952Z",
        "url": "https://files.pythonhosted.org/packages/12/5d/0ff1fc8c2bfaccb1bda902b773329045dae6b709de20ba67ad7959056c28/pyAudioProcessing-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5dfbbfb3e15c780d8992ebbc2f4d46341196a8594abb4a3f7fe7c1fc94a7bd45",
          "md5": "c633768e1cb61ebecb70af73fd785602",
          "sha256": "3b41941d69554673f1f4213c63e40ed05471e65a1cc737081ef3013db48aed78"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c633768e1cb61ebecb70af73fd785602",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 40122,
        "upload_time": "2022-05-11T23:01:23",
        "upload_time_iso_8601": "2022-05-11T23:01:23.580229Z",
        "url": "https://files.pythonhosted.org/packages/5d/fb/bfb3e15c780d8992ebbc2f4d46341196a8594abb4a3f7fe7c1fc94a7bd45/pyAudioProcessing-1.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf5b18c4e57400acbba8b6b2bd828b322062ddaee2ca104ddcd8acb8cdcedc1b",
          "md5": "49c84b42aa7cde9d9926af8d491b1e6e",
          "sha256": "92644e5685060d04598fd1fae39e08aed113e62aff79988d48a244cdfdb9ef61"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "49c84b42aa7cde9d9926af8d491b1e6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 39467,
        "upload_time": "2022-05-11T23:01:25",
        "upload_time_iso_8601": "2022-05-11T23:01:25.267471Z",
        "url": "https://files.pythonhosted.org/packages/cf/5b/18c4e57400acbba8b6b2bd828b322062ddaee2ca104ddcd8acb8cdcedc1b/pyAudioProcessing-1.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7358cbef7863abb7fbaf13f0a26cfcc7a3007d4a2757091d872a000daecf61e",
          "md5": "04d7a4a4f0cd320658c63de7a53ff178",
          "sha256": "5453800303d77b9bbf3c9a8aede04e5b4f974ac3e3334251fb00199d12698a57"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04d7a4a4f0cd320658c63de7a53ff178",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 44558,
        "upload_time": "2022-05-19T23:42:01",
        "upload_time_iso_8601": "2022-05-19T23:42:01.923906Z",
        "url": "https://files.pythonhosted.org/packages/d7/35/8cbef7863abb7fbaf13f0a26cfcc7a3007d4a2757091d872a000daecf61e/pyAudioProcessing-1.1.11-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08d52fdad0f8b60ce255188f6f59bf36e544526509130663a47f3e0ab88c8337",
          "md5": "95105957541a9677943625d51033b243",
          "sha256": "06974bcd0ff4eec3b9480b0d0d29c78740be617215b2c5431713e59ca11424f1"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "95105957541a9677943625d51033b243",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 43861,
        "upload_time": "2022-05-19T23:42:03",
        "upload_time_iso_8601": "2022-05-19T23:42:03.493197Z",
        "url": "https://files.pythonhosted.org/packages/08/d5/2fdad0f8b60ce255188f6f59bf36e544526509130663a47f3e0ab88c8337/pyAudioProcessing-1.1.11.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "1.1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3cf846f23e9c85939f4b9851d89a60758a49b13d80536504ea7a30b973a0873",
          "md5": "ccac2fe2c07f19e73f8cec6ffe5f3eb3",
          "sha256": "d6f601d97ff76ac496c88eea79f5e8ca436795d5a727b249c94223a191b2cf2c"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ccac2fe2c07f19e73f8cec6ffe5f3eb3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 44588,
        "upload_time": "2022-05-20T00:28:52",
        "upload_time_iso_8601": "2022-05-20T00:28:52.704216Z",
        "url": "https://files.pythonhosted.org/packages/d3/cf/846f23e9c85939f4b9851d89a60758a49b13d80536504ea7a30b973a0873/pyAudioProcessing-1.1.12-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b872a69185d91b7ad1d33ec0487920a20e225d2c1c8696546d0b61b11e87229",
          "md5": "76ba5dcc69a97e4bdb7a76fe008a6de5",
          "sha256": "1354f35cb936c6d1dfbfc1c60c789bad182747f3d35f0b3059b385392334eb26"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "76ba5dcc69a97e4bdb7a76fe008a6de5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 43916,
        "upload_time": "2022-05-20T00:28:54",
        "upload_time_iso_8601": "2022-05-20T00:28:54.826865Z",
        "url": "https://files.pythonhosted.org/packages/4b/87/2a69185d91b7ad1d33ec0487920a20e225d2c1c8696546d0b61b11e87229/pyAudioProcessing-1.1.12.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "1.1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4098991014779cd28a2655ee7a7779414193a6cc629a567267d44ef863b5f37b",
          "md5": "e053c05758f684975aa71917e578d9a6",
          "sha256": "a74e78c2720054a02cd6602c64aaf990fa9bfdfee5e9dd69e3084e26c4912a11"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e053c05758f684975aa71917e578d9a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 1047660,
        "upload_time": "2022-05-20T18:22:10",
        "upload_time_iso_8601": "2022-05-20T18:22:10.901950Z",
        "url": "https://files.pythonhosted.org/packages/40/98/991014779cd28a2655ee7a7779414193a6cc629a567267d44ef863b5f37b/pyAudioProcessing-1.1.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0fa33c454d932114654ae373f5aaf83dc6c10195d346531643858016d28231e",
          "md5": "7a448c4bdd146c098f33d757f2394a80",
          "sha256": "20f6c1ac0b1ead05ffc1f6217d1834cd3a76d10b8b36ffcae4e32a4821a88d7a"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "7a448c4bdd146c098f33d757f2394a80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 1047189,
        "upload_time": "2022-05-20T18:22:14",
        "upload_time_iso_8601": "2022-05-20T18:22:14.597213Z",
        "url": "https://files.pythonhosted.org/packages/b0/fa/33c454d932114654ae373f5aaf83dc6c10195d346531643858016d28231e/pyAudioProcessing-1.1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f361a2aaccf834715fdb8e4d84087a946925a8f717a23fdf8a2fe94eaacc1544",
          "md5": "0854878f12adc882aadcfbe139ea8268",
          "sha256": "51a34d5522437c00fe09e4a76d13af5157b95a45b3685bd0ee7e1a7f4d81a422"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0854878f12adc882aadcfbe139ea8268",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 36199,
        "upload_time": "2021-03-20T01:29:04",
        "upload_time_iso_8601": "2021-03-20T01:29:04.984722Z",
        "url": "https://files.pythonhosted.org/packages/f3/61/a2aaccf834715fdb8e4d84087a946925a8f717a23fdf8a2fe94eaacc1544/pyAudioProcessing-1.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19e2ac9a65f01dd4e898f8122a772b42535287e5ea27f696b7b734ae6035de15",
          "md5": "59bcdc235b86d321c37b2143c2776cad",
          "sha256": "65e0a98bea1d9d63a961b4ae4207cc9a73d449a25791b85c2a934ed42c515366"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "59bcdc235b86d321c37b2143c2776cad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 17957,
        "upload_time": "2021-03-20T01:29:06",
        "upload_time_iso_8601": "2021-03-20T01:29:06.632656Z",
        "url": "https://files.pythonhosted.org/packages/19/e2/ac9a65f01dd4e898f8122a772b42535287e5ea27f696b7b734ae6035de15/pyAudioProcessing-1.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b273ad8479c33179a0e25e54e13074b4814e7d163ce1032ce252ffd8c2ccfb9",
          "md5": "755da3507b1c2c52d5c4f4b3d7b52086",
          "sha256": "7df9a9c8389fb2cb7cf931884b28abc3f4a86dd56f66249591be68d34d65a83e"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "755da3507b1c2c52d5c4f4b3d7b52086",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 33757,
        "upload_time": "2021-03-26T22:54:28",
        "upload_time_iso_8601": "2021-03-26T22:54:28.801986Z",
        "url": "https://files.pythonhosted.org/packages/2b/27/3ad8479c33179a0e25e54e13074b4814e7d163ce1032ce252ffd8c2ccfb9/pyAudioProcessing-1.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b93db00bb5b13c007b1123994da2f674e32c6a5c9e88d40a40a77297f27d6131",
          "md5": "3e1f86fe3c51bb928d7a42c166bfde78",
          "sha256": "d734349521954caa90e94c5b74395d8a2e08cea2de974b1eae0173cb2711be01"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "3e1f86fe3c51bb928d7a42c166bfde78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 20545,
        "upload_time": "2021-03-26T22:54:30",
        "upload_time_iso_8601": "2021-03-26T22:54:30.048700Z",
        "url": "https://files.pythonhosted.org/packages/b9/3d/b00bb5b13c007b1123994da2f674e32c6a5c9e88d40a40a77297f27d6131/pyAudioProcessing-1.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c8bb67eb0bcb30a2674deda67eaa04a955ac5ba0d51f1180a93c4c773492256",
          "md5": "2709dccee0f654413bca495a47d5ab39",
          "sha256": "cd189cabdfe7e236d744a970ea6318827ea82ca75e215618870012da43ca1ff6"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2709dccee0f654413bca495a47d5ab39",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 33746,
        "upload_time": "2021-03-29T21:11:06",
        "upload_time_iso_8601": "2021-03-29T21:11:06.951027Z",
        "url": "https://files.pythonhosted.org/packages/5c/8b/b67eb0bcb30a2674deda67eaa04a955ac5ba0d51f1180a93c4c773492256/pyAudioProcessing-1.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f919a9b911edc453b0313487ad009e3b24008338acb1425e55430230fba14d8",
          "md5": "d66167b6933f5e1c48eeeffb2b18c816",
          "sha256": "174fffff46ab15dd898713839234f4dbadda00cae1dd12c67ed3f18e367e6539"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "d66167b6933f5e1c48eeeffb2b18c816",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 20512,
        "upload_time": "2021-03-29T21:11:08",
        "upload_time_iso_8601": "2021-03-29T21:11:08.395266Z",
        "url": "https://files.pythonhosted.org/packages/4f/91/9a9b911edc453b0313487ad009e3b24008338acb1425e55430230fba14d8/pyAudioProcessing-1.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72256c7cfdd76fd3cb1de05713cecffe394c8de819a3fb03139f3bd676982b5d",
          "md5": "50d95d3f04559711e4612af75014569e",
          "sha256": "43c95adbf46f58c05f57b83422cb2f6240eeafcdf2e4dae29314c7dc20d857b5"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50d95d3f04559711e4612af75014569e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 33870,
        "upload_time": "2021-04-30T23:32:30",
        "upload_time_iso_8601": "2021-04-30T23:32:30.758787Z",
        "url": "https://files.pythonhosted.org/packages/72/25/6c7cfdd76fd3cb1de05713cecffe394c8de819a3fb03139f3bd676982b5d/pyAudioProcessing-1.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0702e3c69222a4193e2391b7b483da7c164b03cc439bba2ccd724bd6e3e73bc2",
          "md5": "2db3b923e95e3af0c51636c758b24686",
          "sha256": "d4d0550140545fd1900e2b0e6ab3e9d43f3ae2aa56f1f583b3c193982db05c68"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "2db3b923e95e3af0c51636c758b24686",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 32752,
        "upload_time": "2021-04-30T23:32:33",
        "upload_time_iso_8601": "2021-04-30T23:32:33.031043Z",
        "url": "https://files.pythonhosted.org/packages/07/02/e3c69222a4193e2391b7b483da7c164b03cc439bba2ccd724bd6e3e73bc2/pyAudioProcessing-1.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71782ee0038a377b39b525cbfbd68b7f2b0b3a8d7056c9d2710ebbf1ccaf932d",
          "md5": "73163919178cae92c6290fd48e8321a9",
          "sha256": "f9c12b4cfce528d9defde832e3ec04b575f4e2a6c1dcd16f2932000437431c4f"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73163919178cae92c6290fd48e8321a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 36321,
        "upload_time": "2021-06-11T00:09:08",
        "upload_time_iso_8601": "2021-06-11T00:09:08.170659Z",
        "url": "https://files.pythonhosted.org/packages/71/78/2ee0038a377b39b525cbfbd68b7f2b0b3a8d7056c9d2710ebbf1ccaf932d/pyAudioProcessing-1.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc8e62686004720a6266410749ede33ac017114870e836fee048a3770f3f0a91",
          "md5": "b724f08544d1d0f80a708911342f7986",
          "sha256": "9fe854837b11a60ae50a856cba719b9cd7ee82f3ab9bccb41e17d96b86e00690"
        },
        "downloads": -1,
        "filename": "pyAudioProcessing-1.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "b724f08544d1d0f80a708911342f7986",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 34674,
        "upload_time": "2021-06-11T00:09:10",
        "upload_time_iso_8601": "2021-06-11T00:09:10.059026Z",
        "url": "https://files.pythonhosted.org/packages/dc/8e/62686004720a6266410749ede33ac017114870e836fee048a3770f3f0a91/pyAudioProcessing-1.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4098991014779cd28a2655ee7a7779414193a6cc629a567267d44ef863b5f37b",
        "md5": "e053c05758f684975aa71917e578d9a6",
        "sha256": "a74e78c2720054a02cd6602c64aaf990fa9bfdfee5e9dd69e3084e26c4912a11"
      },
      "downloads": -1,
      "filename": "pyAudioProcessing-1.1.13-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e053c05758f684975aa71917e578d9a6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 1047660,
      "upload_time": "2022-05-20T18:22:10",
      "upload_time_iso_8601": "2022-05-20T18:22:10.901950Z",
      "url": "https://files.pythonhosted.org/packages/40/98/991014779cd28a2655ee7a7779414193a6cc629a567267d44ef863b5f37b/pyAudioProcessing-1.1.13-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b0fa33c454d932114654ae373f5aaf83dc6c10195d346531643858016d28231e",
        "md5": "7a448c4bdd146c098f33d757f2394a80",
        "sha256": "20f6c1ac0b1ead05ffc1f6217d1834cd3a76d10b8b36ffcae4e32a4821a88d7a"
      },
      "downloads": -1,
      "filename": "pyAudioProcessing-1.1.13.tar.gz",
      "has_sig": false,
      "md5_digest": "7a448c4bdd146c098f33d757f2394a80",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 1047189,
      "upload_time": "2022-05-20T18:22:14",
      "upload_time_iso_8601": "2022-05-20T18:22:14.597213Z",
      "url": "https://files.pythonhosted.org/packages/b0/fa/33c454d932114654ae373f5aaf83dc6c10195d346531643858016d28231e/pyAudioProcessing-1.1.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}