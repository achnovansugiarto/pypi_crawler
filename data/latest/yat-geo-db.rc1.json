{
  "info": {
    "author": "YAT, LLC",
    "author_email": "Robert Goss <rgoss@yat.ai>, Jarod Hart <jhart@yat.ai>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# YAT Geo DB\r\n\r\nAn elegantly simple Geo Reference manager with managed database of US, Canada and Mexico. \r\nQuickly perform auto-complete style fuzzy search, fetch record details and search\r\na mile radius around a specific place.\r\n\r\nGeo DB file lists available at `https://yat-geo-db.sfo3.digitaloceanspaces.com/`\r\n\r\n\r\n## Install \r\n\r\nWith Python 3.7 or greater install the package with simple pip command.\r\n\r\n```\r\npip install yat-geo-db\r\n```\r\n\r\n## Usage\r\n\r\nThe manager utilizes two flat files maintained by YAT available at `<location>`.\r\nOn initial load those files will be downloaded to local machined and stored on \r\nmachine as a form of cache.  You can specify a specific version denoted by date \r\nor utilize the current version.\r\n\r\n\r\nImport and load data\r\n```python\r\nfrom yat_geo_db import GeoManager as GeoManagerImport\r\n\r\nGeoManager = GeoManagerImport()\r\n\r\nGeoManager.load_data()\r\n```\r\n\r\nRefresh local data (current version)\r\n\r\n```python\r\nfrom yat_geo_db import GeoManager as GeoManagerImport\r\n\r\nGeoManager = GeoManagerImport()\r\n\r\nGeoManager.load_data(force_db_fetch=True)\r\n```\r\n\r\nPerform Auto-complete style search\r\n```python\r\nsearch_param = \"Nashvil\"\r\nfilters = {\"ref_data.state_prov\": \"TN\", \"ref_data.country\": \"US\"}\r\nfuzzy_res = GeoManager.fuzzy_search(\r\n    search_param, num_results=2, filters=filters\r\n)\r\nprint([(value[\"value\"], value[\"id\"]) for value in fuzzy_res])\r\n>>> [('Nashville, TN', 'us__tn__nashville'), ('Nashville Metro Area, TN', 'nashville_tn_us_metro')]\r\n```\r\n\r\nApply filters for any element in shape object including `geo_type` and `ref_data`,\r\nlatter allowing to refine search to specific country or state.\r\n\r\n```python\r\nsearch_param = \"Nashvil\"\r\nfilters = {\"geo_type\": \"ZipCode\", \"ref_data.country\": \"US\"}\r\nfuzzy_res = GeoManager.fuzzy_search(\r\n    search_param, num_results=2, filters=filters\r\n)\r\nprint([(value[\"value\"], value[\"id\"]) for value in fuzzy_res])\r\n>>> []\r\n```\r\n\r\nFetch a shape object by the reference code.  All reference codes follow a hierarchical\r\nstructure, for below example `<country>__<state>__<name with _ seperator>`.\r\n\r\n```python\r\nreference_code = 'us__tn__nashville'\r\n\r\nres = GeoManager.get_shape_by_ref_code(reference_code=reference_code)\r\n\r\nprint(res)\r\n\r\n>>> {'value': 'Nashville, TN',\r\n>>>  'clean_value': 'nashville tn',\r\n>>>  'id': 6818,\r\n>>>  'area': 0.0,\r\n>>>  'bbox': {'ll_latitude': '36.165890',\r\n>>>   'ur_latitude': '36.165890',\r\n>>>   'll_longitude': '-86.784440',\r\n>>>   'ur_longitude': '-86.784440'},\r\n>>>  'geo_type': 'City',\r\n>>>  'latitude': 36.16589,\r\n>>>  'ref_data': {'city': 'Nashville',\r\n>>>   'country': 'US',\r\n>>>   'zip_code': '37222',\r\n>>>   'state_prov': 'TN'},\r\n>>>  'longitude': -86.78444,\r\n>>>  'population': 530852,\r\n>>>  'is_zip_code': False,\r\n>>>  'is_aggregate': False,\r\n>>>  'long_display': 'Nashville, TN 37222',\r\n>>>  'short_display': 'Nashville, TN',\r\n>>>  'primary_source': None,\r\n>>>  'reference_code': 'us__tn__nashville',\r\n>>>  'primary_timezone': 'America/Chicago',\r\n>>>  'related_shape_id': 6718,\r\n>>>  'primary_source_id': None,\r\n>>>  'is_three_digit_zip_code': False}\r\n```\r\n\r\nPerform radius search around a Geo Object, utilizing a reference code, radius in\r\nmiles and indicator to return results within the same country.  Results returned \r\nare a list of Geo Shape IDs or with `full_results=True` a full list of Geo Objects \r\nreturned.\r\n\r\n```python\r\nreference_code = 'us__tn__nashville'\r\n\r\nres = GeoManager.radius_search(\r\n    reference_code=reference_code, radius=10, country_exact=True\r\n)\r\n\r\nprint(res)\r\n>>> [6702, 6831, 142898, 142897, 142895, 142901, 142903, 142904, 142905, 142910, 142893, 119979, 104924, 258833, 259091, 118948, \r\n>>> 118950, 119199, 119208, 119565, 119569, 119570, 119978, 259331, 239701, 242429, 6764, 98, 6609, 6818, 242049, 6612, 6621, \r\n>>> 142899, 142900, 241027, 119206, 119572, 133787, 119196, 119567, 119977, 6622, 134214, 134217, 143024, 179468, 133797, 133808, \r\n>>> 119980, 119201, 119204, 119205, 119210, 142902, 142906, 142907, 142908, 142909]\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yat-co/yat-geo-db",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yat-geo-db",
    "package_url": "https://pypi.org/project/yat-geo-db/",
    "platform": null,
    "project_url": "https://pypi.org/project/yat-geo-db/",
    "project_urls": {
      "Bug Tracker": "https://github.com/yat-co/yat-geo-db/issues",
      "Homepage": "https://github.com/yat-co/yat-geo-db"
    },
    "release_url": "https://pypi.org/project/yat-geo-db/1.0.3/",
    "requires_dist": [
      "requests",
      "numpy",
      "jellyfish",
      "pytz"
    ],
    "requires_python": ">=3.7",
    "summary": "A simple and effective Python wrapper around the Open Geo DB managed by YAT",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16392118,
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19eac6914402e7fea4d3164560e4d009571362970e0a323a4c9aee9974724ff8",
          "md5": "dde280d0c19d7849fafa314ace463a29",
          "sha256": "3764e9c383ee6fffd4ad1cdeb75e3eb444bef1e7da9f88e486fb24fd6321658f"
        },
        "downloads": -1,
        "filename": "yat_geo_db-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dde280d0c19d7849fafa314ace463a29",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11990,
        "upload_time": "2023-01-11T17:10:17",
        "upload_time_iso_8601": "2023-01-11T17:10:17.891538Z",
        "url": "https://files.pythonhosted.org/packages/19/ea/c6914402e7fea4d3164560e4d009571362970e0a323a4c9aee9974724ff8/yat_geo_db-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ff0d56dd71d73b901d7df83678bd5f12484c7929857a201b3d92db58eafaaca",
          "md5": "cfe06e59ccdf7c8ad2d0f39272d0663c",
          "sha256": "04409d2ad9b6a044e1f9e39c4c53824516525c640de3211b1f96b63971af2033"
        },
        "downloads": -1,
        "filename": "yat_geo_db-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cfe06e59ccdf7c8ad2d0f39272d0663c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 12624,
        "upload_time": "2023-01-11T17:10:19",
        "upload_time_iso_8601": "2023-01-11T17:10:19.628773Z",
        "url": "https://files.pythonhosted.org/packages/3f/f0/d56dd71d73b901d7df83678bd5f12484c7929857a201b3d92db58eafaaca/yat_geo_db-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "19eac6914402e7fea4d3164560e4d009571362970e0a323a4c9aee9974724ff8",
        "md5": "dde280d0c19d7849fafa314ace463a29",
        "sha256": "3764e9c383ee6fffd4ad1cdeb75e3eb444bef1e7da9f88e486fb24fd6321658f"
      },
      "downloads": -1,
      "filename": "yat_geo_db-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dde280d0c19d7849fafa314ace463a29",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11990,
      "upload_time": "2023-01-11T17:10:17",
      "upload_time_iso_8601": "2023-01-11T17:10:17.891538Z",
      "url": "https://files.pythonhosted.org/packages/19/ea/c6914402e7fea4d3164560e4d009571362970e0a323a4c9aee9974724ff8/yat_geo_db-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ff0d56dd71d73b901d7df83678bd5f12484c7929857a201b3d92db58eafaaca",
        "md5": "cfe06e59ccdf7c8ad2d0f39272d0663c",
        "sha256": "04409d2ad9b6a044e1f9e39c4c53824516525c640de3211b1f96b63971af2033"
      },
      "downloads": -1,
      "filename": "yat_geo_db-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "cfe06e59ccdf7c8ad2d0f39272d0663c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 12624,
      "upload_time": "2023-01-11T17:10:19",
      "upload_time_iso_8601": "2023-01-11T17:10:19.628773Z",
      "url": "https://files.pythonhosted.org/packages/3f/f0/d56dd71d73b901d7df83678bd5f12484c7929857a201b3d92db58eafaaca/yat_geo_db-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}