{
  "info": {
    "author": null,
    "author_email": "Roman Sadzhenytsia <urchin.dukkee@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Typing :: Typed"
    ],
    "description": "<p align=\"center\">\n  <a href=\"https://pydantic-i18n.boardpack.org/\"><img src=\"https://pydantic-i18n.boardpack.org/img/logo-white.png\" alt=\"pydantic-i18n\"></a>\n</p>\n<p align=\"center\">\n    <em>pydantic-i18n is an extension to support an i18n for the pydantic error messages.</em>\n</p>\n<p align=\"center\">\n    <a href=\"https://github.com/boardpack/pydantic-i18n/actions?query=workflow%3ATest\" target=\"_blank\">\n        <img src=\"https://github.com/boardpack/pydantic-i18n/workflows/Test/badge.svg\" alt=\"Test\">\n    </a>\n    <a href=\"https://codecov.io/gh/boardpack/pydantic-i18n\" target=\"_blank\">\n        <img src=\"https://img.shields.io/codecov/c/github/boardpack/pydantic-i18n?color=%2334D058\" alt=\"Coverage\">\n    </a>\n    <a href=\"https://pypi.org/project/pydantic-i18n\" target=\"_blank\">\n        <img src=\"https://img.shields.io/pypi/v/pydantic-i18n?color=%2334D058&label=pypi%20package\" alt=\"Package version\">\n    </a>\n    <a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://camo.githubusercontent.com/d91ed7ac7abbd5a6102cbe988dd8e9ac21bde0a73d97be7603b891ad08ce3479/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\" data-canonical-src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" style=\"max-width:100%;\"></a>\n    <a href=\"https://pycqa.github.io/isort/\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/fe4a658dd745f746410f961ae45d44355db1cc0e4c09c7877d265c1380248943/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f253230696d706f7274732d69736f72742d2532333136373462313f7374796c653d666c6174266c6162656c436f6c6f723d656638333336\" alt=\"Imports: isort\" data-canonical-src=\"https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&amp;labelColor=ef8336\" style=\"max-width:100%;\"></a>\n</p>\n\n---\n\n**Documentation**: <a href=\"https://pydantic-i18n.boardpack.org\" target=\"_blank\">https://pydantic-i18n.boardpack.org</a>\n\n**Source Code**: <a href=\"https://github.com/boardpack/pydantic-i18n\" target=\"_blank\">https://github.com/boardpack/pydantic-i18n</a>\n\n---\n\n## Requirements\n\nPython 3.8+\n\npydantic-i18n has the next dependencies:\n\n* <a href=\"https://pydantic-docs.helpmanual.io/\" class=\"external-link\" target=\"_blank\">Pydantic</a>\n* <a href=\"http://babel.pocoo.org/en/latest/index.html\" class=\"external-link\" target=\"_blank\">Babel</a>\n\n\n## Installation\n\n<div class=\"termy\">\n\n```console\n$ pip install pydantic-i18n\n\n---> 100%\n```\n\n</div>\n\n## First steps\n\nTo start to work with pydantic-i18n, you can just create a dictionary (or\ncreate any needed translations storage and then convert it into dictionary)\nand pass to the main `PydanticI18n` class.\n\nTo translate messages, you need to pass result of `exception.errors()` call to\nthe `translate` method:\n\n```Python  hl_lines=\"14 24\"\nfrom pydantic import BaseModel, ValidationError\nfrom pydantic_i18n import PydanticI18n\n\n\ntranslations = {\n    \"en_US\": {\n        \"field required\": \"field required\",\n    },\n    \"de_DE\": {\n        \"field required\": \"Feld erforderlich\",\n    },\n}\n\ntr = PydanticI18n(translations)\n\n\nclass User(BaseModel):\n    name: str\n\n\ntry:\n    User()\nexcept ValidationError as e:\n    translated_errors = tr.translate(e.errors(), locale=\"de_DE\")\n\nprint(translated_errors)\n# [\n#     {\n#         'loc': ('name',),\n#         'msg': 'Feld erforderlich',\n#         'type': 'value_error.missing'\n#     }\n# ]\n```\n_(This script is complete, it should run \"as is\")_\n\nIn the next chapters, you will see current available loaders and how to\nimplement your own loader.\n\n## Usage with FastAPI\n\nHere is a simple example usage with FastAPI.\n\n### Create it\n\nLet's create a `tr.py` file:\n\n```Python linenums=\"1\" hl_lines=\"13-22 25-26 32 35\"\nfrom fastapi import Request\nfrom fastapi.exceptions import RequestValidationError\nfrom starlette.responses import JSONResponse\nfrom starlette.status import HTTP_422_UNPROCESSABLE_ENTITY\n\nfrom pydantic_i18n import PydanticI18n\n\n__all__ = [\"get_locale\", \"validation_exception_handler\"]\n\n\nDEFAULT_LOCALE = \"en_US\"\n\ntranslations = {\n    \"en_US\": {\n        \"field required\": \"field required\",\n    },\n    \"de_DE\": {\n        \"field required\": \"Feld erforderlich\",\n    },\n}\n\ntr = PydanticI18n(translations)\n\n\ndef get_locale(locale: str = DEFAULT_LOCALE) -> str:\n    return locale\n\n\nasync def validation_exception_handler(\n    request: Request, exc: RequestValidationError\n) -> JSONResponse:\n    current_locale = request.query_params.get(\"locale\", DEFAULT_LOCALE)\n    return JSONResponse(\n        status_code=HTTP_422_UNPROCESSABLE_ENTITY,\n        content={\"detail\": tr.translate(exc.errors(), current_locale)},\n    )\n```\n\n`11-20`: As you see, we selected the simplest variant to store translations,\nyou can use any that you need.\n\n`23-24`: To not include `locale` query parameter into every handler, we\ncreated a simple function `get_locale`, which we will include as a global\ndependency with `Depends`.\n\n`29-36`: An example of overridden function to return translated messages of the\nvalidation exception.\n\nNow we are ready to create a FastAPI application:\n\n```Python linenums=\"1\" hl_lines=\"8 10\"\nfrom fastapi import Depends, FastAPI, Request\nfrom fastapi.exceptions import RequestValidationError\n\nfrom pydantic import BaseModel\n\nimport tr\n\napp = FastAPI(dependencies=[Depends(tr.get_locale)])\n\napp.add_exception_handler(RequestValidationError, tr.validation_exception_handler)\n\n\nclass User(BaseModel):\n    name: str\n\n\n@app.post(\"/user\", response_model=User)\ndef create_user(request: Request, user: User):\n    pass\n```\n\n`8`: Add `get_locale` function as a global dependency.\n\n!!! note\n    If you need to use i18n only for specific part of your\n    application, you can add this `get_locale` function to the specific\n    `APIRouter`. More information about `APIRouter` you can find\n    [here](https://fastapi.tiangolo.com/tutorial/bigger-applications/#apirouter).\n\n`10`: Override default request validation error handler with\n`validation_exception_handler`.\n\n### Run it\n\nRun the server with:\n\n<div class=\"termy\">\n\n```console\n$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n```\n\n</div>\n\n<details markdown=\"1\">\n<summary>About the command <code>uvicorn main:app --reload</code>...</summary>\n\nThe command `uvicorn main:app` refers to:\n\n* `main`: the file `main.py` (the Python \"module\").\n* `app`: the object created inside of `main.py` with the line `app = FastAPI()`.\n* `--reload`: make the server restart after code changes. Only do this for development.\n\n</details>\n\n### Send it\n\nOpen your browser at <a href=\"http://127.0.0.1:8000/docs#/default/create_user_user_post\" class=\"external-link\" target=\"_blank\">http://127.0.0.1:8000/docs#/default/create_user_user_post</a>.\n\nSend POST-request with empty body and `de_DE` locale query param via swagger UI\n or `curl`:\n\n```bash\n$ curl -X 'POST' \\\n  'http://127.0.0.1:8000/user?locale=de_DE' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n}'\n```\n\n### Check it\n\nAs a result, you will get the next response body:\n\n```json hl_lines=\"8\"\n{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"body\",\n        \"name\"\n      ],\n      \"msg\": \"Feld erforderlich\",\n      \"type\": \"value_error.missing\"\n    }\n  ]\n}\n```\n\nIf you don't mention the `locale` param, English locale will be used by\ndefault.\n\n## Get current error strings from Pydantic\n\npydantic-i18n doesn't provide prepared translations of all current error\nmessages from pydantic, but you can use a special class method\n`PydanticI18n.get_pydantic_messages` to load original messages in English. By\ndefault, it returns a `dict` object:\n\n```Python\nfrom pydantic_i18n import PydanticI18n\n\nprint(PydanticI18n.get_pydantic_messages())\n# {\n#     \"field required\": \"field required\",\n#     \"extra fields not permitted\": \"extra fields not permitted\",\n#     \"none is not an allowed value\": \"none is not an allowed value\",\n#     \"value is not none\": \"value is not none\",\n#     \"value could not be parsed to a boolean\": \"value could not be parsed to a boolean\",\n#     \"byte type expected\": \"byte type expected\",\n#     .....\n# }\n```\n_(This script is complete, it should run \"as is\")_\n\nYou can also choose JSON string or Babel format with `output` parameter values\n`\"json\"` and `\"babel\"`:\n\n```Python\nfrom pydantic_i18n import PydanticI18n\n\nprint(PydanticI18n.get_pydantic_messages(output=\"json\"))\n# {\n#     \"field required\": \"field required\",\n#     \"extra fields not permitted\": \"extra fields not permitted\",\n#     \"none is not an allowed value\": \"none is not an allowed value\",\n#     .....\n# }\n\nprint(PydanticI18n.get_pydantic_messages(output=\"babel\"))\n# msgid \"field required\"\n# msgstr \"field required\"\n#\n# msgid \"extra fields not permitted\"\n# msgstr \"extra fields not permitted\"\n#\n# msgid \"none is not an allowed value\"\n# msgstr \"none is not an allowed value\"\n# ....\n\n```\n_(This script is complete, it should run \"as is\")_\n\n\n## Loaders\n\npydantic-i18n provides a list of loaders to use translations.\n\n### DictLoader\n\nDictLoader is the simplest loader and default in PydanticI18n. So you can\njust pass your translations dictionary without any other preparation steps.\n\n```Python\nfrom pydantic import BaseModel, ValidationError\nfrom pydantic_i18n import PydanticI18n\n\n\ntranslations = {\n    \"en_US\": {\n        \"field required\": \"field required\",\n    },\n    \"de_DE\": {\n        \"field required\": \"Feld erforderlich\",\n    },\n}\n\ntr = PydanticI18n(translations)\n\n\nclass User(BaseModel):\n    name: str\n\n\ntry:\n    User()\nexcept ValidationError as e:\n    translated_errors = tr.translate(e.errors(), locale=\"de_DE\")\n\nprint(translated_errors)\n# [\n#     {\n#         'loc': ('name',),\n#         'msg': 'Feld erforderlich',\n#         'type': 'value_error.missing'\n#     }\n# ]\n```\n_(This script is complete, it should run \"as is\")_\n\n### JsonLoader\n\nJsonLoader needs to get the path to some directory with the next structure:\n\n```text\n\n|-- translations\n    |-- en_US.json\n    |-- de_DE.json\n    |-- ...\n```\n\nwhere e.g. `en_US.json` looks like:\n\n```json\n{\n    \"field required\": \"field required\"\n}\n```\n\nand `de_DE.json`:\n\n```json\n{\n    \"field required\": \"Feld erforderlich\"\n}\n```\n\nThen we can use `JsonLoader` to load our translations:\n\n```Python\nfrom pydantic import BaseModel, ValidationError\nfrom pydantic_i18n import PydanticI18n, JsonLoader\n\nloader = JsonLoader(\"./translations\")\ntr = PydanticI18n(loader)\n\n\nclass User(BaseModel):\n    name: str\n\n\ntry:\n    User()\nexcept ValidationError as e:\n    translated_errors = tr.translate(e.errors(), locale=\"de_DE\")\n\nprint(translated_errors)\n# [\n#     {\n#         'loc': ('name',),\n#         'msg': 'Feld erforderlich',\n#         'type': 'value_error.missing'\n#     }\n# ]\n\n```\n_(This script is complete, it should run \"as is\")_\n\n### BabelLoader\n\nBabelLoader works in the similar way as JsonLoader. It also needs a\ntranslations directory with the next structure:\n\n```text\n\n|-- translations\n    |-- en_US\n        |-- LC_MESSAGES\n            |-- messages.mo\n            |-- messages.po\n    |-- de_DE\n        |-- LC_MESSAGES\n            |-- messages.mo\n            |-- messages.po\n    |-- ...\n```\n\nInformation about translations preparation you can find on the\n[Babel docs pages](http://babel.pocoo.org/en/latest/cmdline.html){:target=\"_blank\"} and e.g.\nfrom [this article](https://phrase.com/blog/posts/i18n-advantages-babel-python/#Message_Extraction){:target=\"_blank\"}.\n\nHere is an example of the `BabelLoader` usage:\n\n```Python\nfrom pydantic import BaseModel, ValidationError\nfrom pydantic_i18n import PydanticI18n, BabelLoader\n\nloader = BabelLoader(\"./translations\")\ntr = PydanticI18n(loader)\n\n\nclass User(BaseModel):\n    name: str\n\n\ntry:\n    User()\nexcept ValidationError as e:\n    translated_errors = tr.translate(e.errors(), locale=\"de\")\n\nprint(translated_errors)\n# [\n#     {\n#         'loc': ('name',),\n#         'msg': 'Feld erforderlich',\n#         'type': 'value_error.missing'\n#     }\n# ]\n\n```\n_(This script is complete, it should run \"as is\")_\n\n### Write your own loader\n\nIf current loaders aren't suitable for you, it's possible to write your own\nloader and use it with pydantic-i18n. To do it, you need to import\n`BaseLoader` and implement the next items:\n\n - property `locales` to get a list of locales;\n - method `get_translations` to get content for the specific locale.\n\nIn some cases you will also need to change implementation of the `gettext`\nmethod.\n\nHere is an example of the loader to get translations from CSV files:\n\n```text\n|-- translations\n    |-- en_US.csv\n    |-- de_DE.csv\n    |-- ...\n```\n\n`en_US.csv` content:\n\n```csv\nfield required,field required\n```\n\n`de_DE.csv` content:\n\n```csv\nfield required,Feld erforderlich\n```\n\n```Python\nimport os\nfrom typing import List, Dict\n\nfrom pydantic import BaseModel, ValidationError\nfrom pydantic_i18n import PydanticI18n, BaseLoader\n\n\nclass CsvLoader(BaseLoader):\n    def __init__(self, directory: str):\n        self.directory = directory\n\n    @property\n    def locales(self) -> List[str]:\n        return [\n            filename[:-4]\n            for filename in os.listdir(self.directory)\n            if filename.endswith(\".csv\")\n        ]\n\n    def get_translations(self, locale: str) -> Dict[str, str]:\n        with open(os.path.join(self.directory, f\"{locale}.csv\")) as fp:\n            data = dict(line.strip().split(\",\") for line in fp)\n\n        return data\n\n\nclass User(BaseModel):\n    name: str\n\n\nif __name__ == '__main__':\n    loader = CsvLoader(\"./translations\")\n    tr = PydanticI18n(loader)\n\n    try:\n        User()\n    except ValidationError as e:\n        translated_errors = tr.translate(e.errors(), locale=\"de\")\n\n    print(translated_errors)\n    # [\n    #     {\n    #         'loc': ('name',),\n    #         'msg': 'Feld erforderlich',\n    #         'type': 'value_error.missing'\n    #     }\n    # ]\n\n```\n_(This script is complete, it should run \"as is\")_\n\n## Acknowledgments\n\nThanks to [Samuel Colvin](https://github.com/samuelcolvin) and his\n[pydantic](https://github.com/samuelcolvin/pydantic) library.\n\nAlso, thanks to [Sebastián Ramírez](https://github.com/tiangolo) and his\n[FastAPI](https://github.com/tiangolo/fastapi) project,  some scripts and\ndocumentation structure and parts were used from there.\n\n## License\n\nThis project is licensed under the terms of the MIT license.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "pydantic-i18n",
    "package_url": "https://pypi.org/project/pydantic-i18n/",
    "platform": null,
    "project_url": "https://pypi.org/project/pydantic-i18n/",
    "project_urls": {
      "Documentation": "https://pydantic-i18n.boardpack.org",
      "Source": "https://github.com/boardpack/pydantic-i18n"
    },
    "release_url": "https://pypi.org/project/pydantic-i18n/0.3.1/",
    "requires_dist": [
      "pydantic >=1.9.0",
      "autoflake ==2.0.1 ; extra == \"dev\"",
      "flake8 ==6.0.0 ; extra == \"dev\"",
      "pre-commit ; extra == \"dev\"",
      "tox >=3.27.1 ; extra == \"dev\"",
      "mkdocs ==1.4.2 ; extra == \"doc\"",
      "mkdocs-material ==8.5.11 ; extra == \"doc\"",
      "markdown ==3.2.1 ; extra == \"doc\"",
      "markdown-include ==0.8.1 ; extra == \"doc\"",
      "mkdocs-markdownextradata-plugin ==0.2.5 ; extra == \"doc\"",
      "typer ==0.7.0 ; extra == \"doc\"",
      "pyyaml ==6.0.0 ; extra == \"doc\"",
      "pytest ==7.2.2 ; extra == \"test\"",
      "pytest-cov ==4.0.0 ; extra == \"test\"",
      "pytest-lazy-fixture ==0.6.3 ; extra == \"test\"",
      "mypy ==1.0.1 ; extra == \"test\"",
      "flake8 ==6.0.0 ; extra == \"test\"",
      "black ==23.1.0 ; extra == \"test\"",
      "isort ==5.12.0 ; extra == \"test\"",
      "babel ==2.12.1 ; extra == \"test\""
    ],
    "requires_python": ">=3.8.1",
    "summary": "pydantic-i18n is an extension to support an i18n for the pydantic error messages.",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17159444,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22d97a71c5c24c73596ab474e8e0b63548659ea059c9da8377279ef2067b73b3",
          "md5": "c2999d4ee39d27f2b622b737e04eedee",
          "sha256": "e72009561e10be8278522af97af7b5129e308d69bb3282284025058468c2064d"
        },
        "downloads": -1,
        "filename": "pydantic_i18n-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2999d4ee39d27f2b622b737e04eedee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7513,
        "upload_time": "2021-08-03T00:11:33",
        "upload_time_iso_8601": "2021-08-03T00:11:33.802992Z",
        "url": "https://files.pythonhosted.org/packages/22/d9/7a71c5c24c73596ab474e8e0b63548659ea059c9da8377279ef2067b73b3/pydantic_i18n-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55d8fbe5e5a09b2f3a3fa189ddb867b0d426dc1c6890cc4132c78f44a03b0425",
          "md5": "2480b270f3b0323884599eef6580548d",
          "sha256": "008438291779a4ab0e1d93e3c76a5f466600d33fe113b2489633783caa1b312b"
        },
        "downloads": -1,
        "filename": "pydantic-i18n-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2480b270f3b0323884599eef6580548d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 66470,
        "upload_time": "2021-08-03T00:11:36",
        "upload_time_iso_8601": "2021-08-03T00:11:36.025362Z",
        "url": "https://files.pythonhosted.org/packages/55/d8/fbe5e5a09b2f3a3fa189ddb867b0d426dc1c6890cc4132c78f44a03b0425/pydantic-i18n-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "090298bc5f6891dba764768c8d8390e9d8898d20d03724d179abfd5adaf92e58",
          "md5": "21f40e3534003e5afac6243719b282c3",
          "sha256": "dfcfca6cb8acbcdf2f0a37e1da2772bb47d0bae3192b77b64fc4ecff9056637a"
        },
        "downloads": -1,
        "filename": "pydantic_i18n-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "21f40e3534003e5afac6243719b282c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7517,
        "upload_time": "2021-08-03T13:15:02",
        "upload_time_iso_8601": "2021-08-03T13:15:02.297777Z",
        "url": "https://files.pythonhosted.org/packages/09/02/98bc5f6891dba764768c8d8390e9d8898d20d03724d179abfd5adaf92e58/pydantic_i18n-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c5aa5577b814665b666048ec6d6f439f5a441e9586a19479f05544e19d2706b",
          "md5": "a92e9e0d179a1ece0f0c1e87e95afad1",
          "sha256": "6f7726695de5023a769d7c899590dfd15e49d8e5023ddb14599fd5992f7029e2"
        },
        "downloads": -1,
        "filename": "pydantic-i18n-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a92e9e0d179a1ece0f0c1e87e95afad1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 66527,
        "upload_time": "2021-08-03T13:15:03",
        "upload_time_iso_8601": "2021-08-03T13:15:03.999872Z",
        "url": "https://files.pythonhosted.org/packages/0c/5a/a5577b814665b666048ec6d6f439f5a441e9586a19479f05544e19d2706b/pydantic-i18n-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f9dfbb8e587ca39188c14bd590762ae396b307a5c7efa1917e8ba21fa84bae8",
          "md5": "8d8c6f9d93cd1fc23eeed17dd8f0c43f",
          "sha256": "41c2788a19a92682e384dd7e1683fed89bbd0a27c4841e2546ca6323c5c7269f"
        },
        "downloads": -1,
        "filename": "pydantic_i18n-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d8c6f9d93cd1fc23eeed17dd8f0c43f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9181,
        "upload_time": "2021-10-04T23:17:37",
        "upload_time_iso_8601": "2021-10-04T23:17:37.216885Z",
        "url": "https://files.pythonhosted.org/packages/6f/9d/fbb8e587ca39188c14bd590762ae396b307a5c7efa1917e8ba21fa84bae8/pydantic_i18n-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d54348597db284cae29784fc1933c1d5f32f47ae963c529265b6c08d19ee36d7",
          "md5": "adf3a65bd1bf2b30517ad7c57ede5b0d",
          "sha256": "11176bf98a86e4421dc57be90a240e8ceb2acc2645a6111a8b60ca58bb9837ae"
        },
        "downloads": -1,
        "filename": "pydantic-i18n-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "adf3a65bd1bf2b30517ad7c57ede5b0d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 71966,
        "upload_time": "2021-10-04T23:17:40",
        "upload_time_iso_8601": "2021-10-04T23:17:40.564888Z",
        "url": "https://files.pythonhosted.org/packages/d5/43/48597db284cae29784fc1933c1d5f32f47ae963c529265b6c08d19ee36d7/pydantic-i18n-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1ccf10f5914532f9f723bc9ae97783c5870ae3eb8215e9d4454d0e2cebc6b31",
          "md5": "75c364743b5ee82d3a479b5887216467",
          "sha256": "f2e59e28c73cc9824ea8ad1474492dc578151d5ef2904fcb14eba32eb2aa9717"
        },
        "downloads": -1,
        "filename": "pydantic_i18n-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75c364743b5ee82d3a479b5887216467",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9204,
        "upload_time": "2021-10-09T07:00:35",
        "upload_time_iso_8601": "2021-10-09T07:00:35.625774Z",
        "url": "https://files.pythonhosted.org/packages/f1/cc/f10f5914532f9f723bc9ae97783c5870ae3eb8215e9d4454d0e2cebc6b31/pydantic_i18n-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e57ea29e220929a25504a00803502aa2e43fd765471cf84f513e146f284ac61",
          "md5": "08653623ed7b1469f8a19d57da9b4126",
          "sha256": "d4a33abd4e988cd2fcaf92c3b7a76013a12d251a9934058d5c55cdde802c990d"
        },
        "downloads": -1,
        "filename": "pydantic-i18n-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "08653623ed7b1469f8a19d57da9b4126",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 72140,
        "upload_time": "2021-10-09T07:00:36",
        "upload_time_iso_8601": "2021-10-09T07:00:36.786389Z",
        "url": "https://files.pythonhosted.org/packages/3e/57/ea29e220929a25504a00803502aa2e43fd765471cf84f513e146f284ac61/pydantic-i18n-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e63c9f8ff716742ebd0d251fc0d52dc60484a4f01a98777a05d494b0536e5709",
          "md5": "02815c305501cceb509d3cb5b067f93b",
          "sha256": "89ebeade7d36c450410963b04b0163e1832f7f18ed6fa6011b383b3824071c1e"
        },
        "downloads": -1,
        "filename": "pydantic_i18n-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "02815c305501cceb509d3cb5b067f93b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9286,
        "upload_time": "2022-02-06T11:16:39",
        "upload_time_iso_8601": "2022-02-06T11:16:39.526302Z",
        "url": "https://files.pythonhosted.org/packages/e6/3c/9f8ff716742ebd0d251fc0d52dc60484a4f01a98777a05d494b0536e5709/pydantic_i18n-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33833f959b8b76e1cb97618778af8b31ea33f762bb61b603d7070f2e079b01fe",
          "md5": "eb112ac90d7c67899d63cb29c1bca417",
          "sha256": "ef9490c8660bb04a713f6c31730c8c577696939fa5101e8f0bf5598bd1ef031f"
        },
        "downloads": -1,
        "filename": "pydantic-i18n-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eb112ac90d7c67899d63cb29c1bca417",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 72159,
        "upload_time": "2022-02-06T11:16:41",
        "upload_time_iso_8601": "2022-02-06T11:16:41.530506Z",
        "url": "https://files.pythonhosted.org/packages/33/83/3f959b8b76e1cb97618778af8b31ea33f762bb61b603d7070f2e079b01fe/pydantic-i18n-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9f993722168d973b69f1e4e9e1c98b2a6a028daa805122abfa0bd23f50bcd75",
          "md5": "3622bad5b4ecb20b7751b705bd3320d5",
          "sha256": "c6f8f3da60069a8c2fa97c490c11169914ad921c9fba2b837cbb1d1f89ada4d4"
        },
        "downloads": -1,
        "filename": "pydantic_i18n-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3622bad5b4ecb20b7751b705bd3320d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9282,
        "upload_time": "2022-02-07T07:49:01",
        "upload_time_iso_8601": "2022-02-07T07:49:01.982833Z",
        "url": "https://files.pythonhosted.org/packages/e9/f9/93722168d973b69f1e4e9e1c98b2a6a028daa805122abfa0bd23f50bcd75/pydantic_i18n-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b1d610c52999829e7d86855a8cfa76ef992ae163625134fce040a68ec492036",
          "md5": "e8183925fca95886b1003cacefb000f4",
          "sha256": "e67f56117c08b800a6dd2e6f0c199f7841e2091afc4a3aa4b6fa7e7d71977284"
        },
        "downloads": -1,
        "filename": "pydantic-i18n-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e8183925fca95886b1003cacefb000f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 72170,
        "upload_time": "2022-02-07T07:49:03",
        "upload_time_iso_8601": "2022-02-07T07:49:03.857777Z",
        "url": "https://files.pythonhosted.org/packages/1b/1d/610c52999829e7d86855a8cfa76ef992ae163625134fce040a68ec492036/pydantic-i18n-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "e12bc79f12963f233370ec6f5a961834a690f85c8c83e5fed466ff21b5fbe1a8",
          "md5": "ebeba026e379174a76abc28dddcf32ca",
          "sha256": "b309d9d203a7ed0b224a22be60a260eb1862b925370bcc74d3f77fbe37c22dec"
        },
        "downloads": -1,
        "filename": "pydantic_i18n-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ebeba026e379174a76abc28dddcf32ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.1",
        "size": 9275,
        "upload_time": "2022-11-27T21:34:33",
        "upload_time_iso_8601": "2022-11-27T21:34:33.136855Z",
        "url": "https://files.pythonhosted.org/packages/e1/2b/c79f12963f233370ec6f5a961834a690f85c8c83e5fed466ff21b5fbe1a8/pydantic_i18n-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "adb67da1548a4611de34f08455c50df3f0ceda38a7e66d9fc44643a05edd15f9",
          "md5": "01e9ab752ec9778fb514e43674c6c965",
          "sha256": "0b339d8e0d6ba6ff40d4f30b4388903dd64a6359e2076a0e06f1a6fdb09baa93"
        },
        "downloads": -1,
        "filename": "pydantic-i18n-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "01e9ab752ec9778fb514e43674c6c965",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.1",
        "size": 72449,
        "upload_time": "2022-11-27T21:34:35",
        "upload_time_iso_8601": "2022-11-27T21:34:35.267422Z",
        "url": "https://files.pythonhosted.org/packages/ad/b6/7da1548a4611de34f08455c50df3f0ceda38a7e66d9fc44643a05edd15f9/pydantic-i18n-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "c5295e129a7f693965e47f28797db34219f5c9c3a642228d46ecde84706b0fef",
          "md5": "643b07db415fb7db089a5a640046f6fd",
          "sha256": "196e8e6573f602c4a32a0835eeb4184be2ef22bfa20fdabd41c2b3af86d93e61"
        },
        "downloads": -1,
        "filename": "pydantic_i18n-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "643b07db415fb7db089a5a640046f6fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.1",
        "size": 9345,
        "upload_time": "2023-03-04T21:34:30",
        "upload_time_iso_8601": "2023-03-04T21:34:30.304218Z",
        "url": "https://files.pythonhosted.org/packages/c5/29/5e129a7f693965e47f28797db34219f5c9c3a642228d46ecde84706b0fef/pydantic_i18n-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "c84a749f3ae9b9a8455628d3904ff43688010e7e0f43ce32b950823529a1a8e5",
          "md5": "6aca5d145d32477bef6fda63aa83a36e",
          "sha256": "d510e5016b7daf23d6b1c79f698f334208aafe14e1550a5670b0fa0b79602b6c"
        },
        "downloads": -1,
        "filename": "pydantic-i18n-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6aca5d145d32477bef6fda63aa83a36e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.1",
        "size": 72810,
        "upload_time": "2023-03-04T21:34:32",
        "upload_time_iso_8601": "2023-03-04T21:34:32.616216Z",
        "url": "https://files.pythonhosted.org/packages/c8/4a/749f3ae9b9a8455628d3904ff43688010e7e0f43ce32b950823529a1a8e5/pydantic-i18n-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "c5295e129a7f693965e47f28797db34219f5c9c3a642228d46ecde84706b0fef",
        "md5": "643b07db415fb7db089a5a640046f6fd",
        "sha256": "196e8e6573f602c4a32a0835eeb4184be2ef22bfa20fdabd41c2b3af86d93e61"
      },
      "downloads": -1,
      "filename": "pydantic_i18n-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "643b07db415fb7db089a5a640046f6fd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.1",
      "size": 9345,
      "upload_time": "2023-03-04T21:34:30",
      "upload_time_iso_8601": "2023-03-04T21:34:30.304218Z",
      "url": "https://files.pythonhosted.org/packages/c5/29/5e129a7f693965e47f28797db34219f5c9c3a642228d46ecde84706b0fef/pydantic_i18n-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "c84a749f3ae9b9a8455628d3904ff43688010e7e0f43ce32b950823529a1a8e5",
        "md5": "6aca5d145d32477bef6fda63aa83a36e",
        "sha256": "d510e5016b7daf23d6b1c79f698f334208aafe14e1550a5670b0fa0b79602b6c"
      },
      "downloads": -1,
      "filename": "pydantic-i18n-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6aca5d145d32477bef6fda63aa83a36e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.1",
      "size": 72810,
      "upload_time": "2023-03-04T21:34:32",
      "upload_time_iso_8601": "2023-03-04T21:34:32.616216Z",
      "url": "https://files.pythonhosted.org/packages/c8/4a/749f3ae9b9a8455628d3904ff43688010e7e0f43ce32b950823529a1a8e5/pydantic-i18n-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}