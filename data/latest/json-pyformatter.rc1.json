{
  "info": {
    "author": "homoluctus",
    "author_email": "w.slife18sy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# json-pyformatter\n\n![GitHub Workflow Status](https://img.shields.io/github/workflow/status/homoluctus/json-pyformatter/Test)\n![GitHub release (latest by date including pre-releases)](https://img.shields.io/github/v/release/homoluctus/json-pyformatter?include_prereleases)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/json-pyformatter)\n![GitHub](https://img.shields.io/github/license/homoluctus/json-pyformatter)\n\nPython logging outputs as JSON.<br>\nThis JsonFormatter is written in Pure Python.\n\n## Installation\n\n```bash\npip install json-pyformatter\n```\n\n## Usage\n\n```python\nimport logging\nfrom json_pyformmatter import JsonFormatter\n\nlogger = logging.getLogger(__name__)\nlogger.setLevel(logging.INFO)\nhandler = logging.StreamHandler()\nfields = ('levelname', 'filename', 'message')\nhandler.setFormatter(JsonFormatter(fields=fields))\nlogger.addHandler(hander)\n\nlogger.info('hello')\n```\n\ndefault fields is ('asctime', 'levelname', 'message')<br>\nOther supported fields are:\n\n|field name|description|\n|:--:|:--|\n|name|Name of the logger (logging channel)|\n|levelno|Numeric logging level for the message<br>(DEBUG, INFO, WARNING, ERROR, CRITICAL)|\n|levelname|Text logging level for the message<br>(\"DEBUG\", \"INFO\", \"WARNING\", \"ERROR\", \"CRITICAL\")|\n|pathname|Full pathname of the source file where the logging call was issued|\n|filename|Filename portion of pathname|\n|module|Module (name portion of filename)|\n|lineno|Source line number where the logging call was issued|\n|funcName|Function name|\n|created|Time when the LogRecord was created (time.time()return value)|\n|asctime|Textual time when the LogRecord was created|\n|msecs|Millisecond portion of the creation time|\n|relativeCreated|Time in milliseconds when the LogRecord was created, relative to the time the logging module was loaded (typically at application startup time)|\n|thread|Thread ID|\n|threadName|Thread name|\n|process|Process ID|\n|message|The result of record.getMessage(), computed just as the record is emitted|\n\nIn details, please refere to [logrecord-attributes](https://docs.python.org/3/library/logging.html#logrecord-attributes)\n\n## Output\n\n```bash\n{\"levelname\": \"INFO\", \"filename\": \"test_formatter.py\", \"message\": \"hello\"}\n```\n\nIf specify indent option as 2, the result is as follows:\n\n```bash\n{\n  \"levelname\": \"INFO\",\n  \"filename\": \"test_formatter.py\",\n  \"message\": \"hello\"\n}\n```\n\nWhen exc_info is True, the result includes traceback infomation as follows:\n\n```bash\n{\n  'asctime': '2019-12-01 13:58:34',\n  'levelname': 'ERROR',\n  'message': 'error occurred !!',\n  'traceback': [\n    'Traceback (most rec...ll last):',\n    'File \"/example/test..._exc_info',\n    'raise TypeError(message)',\n    'TypeError: error occurred !!'\n  ]\n}\n```\n\nLogging message type is dict:\n\n```bash\n{\n  'asctime': '2019-12-01 23:34:32',\n  'levelname': 'INFO',\n  'message': {\n    'id': '001',\n    'msg': 'This is test.',\n    'name': 'test'\n  }\n}\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/homoluctus/json-pyformatter",
    "keywords": "python,json,logging,formatter",
    "license": "MIT",
    "maintainer": "homoluctus",
    "maintainer_email": "w.slife18sy@gmail.com",
    "name": "json-pyformatter",
    "package_url": "https://pypi.org/project/json-pyformatter/",
    "platform": "",
    "project_url": "https://pypi.org/project/json-pyformatter/",
    "project_urls": {
      "Homepage": "https://github.com/homoluctus/json-pyformatter",
      "Repository": "https://github.com/homoluctus/json-pyformatter"
    },
    "release_url": "https://pypi.org/project/json-pyformatter/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "Python logging module outputs logs as JSON.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6224869,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5234a8c36dd23160d6d9aba1f6b2d52a8d6d149215ff4dde764304de2a26177",
          "md5": "c3746dea082ff43cf387f5fbb0ee63d2",
          "sha256": "bebaeb4780815f7897bc9153ee8bee73788d01981530572c2c3418e296622e95"
        },
        "downloads": -1,
        "filename": "json_pyformatter-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3746dea082ff43cf387f5fbb0ee63d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 4803,
        "upload_time": "2019-12-01T16:26:20",
        "upload_time_iso_8601": "2019-12-01T16:26:20.293341Z",
        "url": "https://files.pythonhosted.org/packages/a5/23/4a8c36dd23160d6d9aba1f6b2d52a8d6d149215ff4dde764304de2a26177/json_pyformatter-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df5964fe142209dde4b4dffaee37d9b0435d8bdaa4833a627f3be1150acc717a",
          "md5": "3a1fd869935e5e8954f19568a3f3da90",
          "sha256": "006573f9ec788a7e90ed1b1e66b9dd19d55719d76fe7abb28b46ab6889e266f2"
        },
        "downloads": -1,
        "filename": "json-pyformatter-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3a1fd869935e5e8954f19568a3f3da90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 4561,
        "upload_time": "2019-12-01T16:26:18",
        "upload_time_iso_8601": "2019-12-01T16:26:18.029256Z",
        "url": "https://files.pythonhosted.org/packages/df/59/64fe142209dde4b4dffaee37d9b0435d8bdaa4833a627f3be1150acc717a/json-pyformatter-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5234a8c36dd23160d6d9aba1f6b2d52a8d6d149215ff4dde764304de2a26177",
        "md5": "c3746dea082ff43cf387f5fbb0ee63d2",
        "sha256": "bebaeb4780815f7897bc9153ee8bee73788d01981530572c2c3418e296622e95"
      },
      "downloads": -1,
      "filename": "json_pyformatter-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c3746dea082ff43cf387f5fbb0ee63d2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 4803,
      "upload_time": "2019-12-01T16:26:20",
      "upload_time_iso_8601": "2019-12-01T16:26:20.293341Z",
      "url": "https://files.pythonhosted.org/packages/a5/23/4a8c36dd23160d6d9aba1f6b2d52a8d6d149215ff4dde764304de2a26177/json_pyformatter-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df5964fe142209dde4b4dffaee37d9b0435d8bdaa4833a627f3be1150acc717a",
        "md5": "3a1fd869935e5e8954f19568a3f3da90",
        "sha256": "006573f9ec788a7e90ed1b1e66b9dd19d55719d76fe7abb28b46ab6889e266f2"
      },
      "downloads": -1,
      "filename": "json-pyformatter-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3a1fd869935e5e8954f19568a3f3da90",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 4561,
      "upload_time": "2019-12-01T16:26:18",
      "upload_time_iso_8601": "2019-12-01T16:26:18.029256Z",
      "url": "https://files.pythonhosted.org/packages/df/59/64fe142209dde4b4dffaee37d9b0435d8bdaa4833a627f3be1150acc717a/json-pyformatter-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}