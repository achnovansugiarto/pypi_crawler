{
  "info": {
    "author": "Fulltea",
    "author_email": "rikuta@furutan.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# factorizer\n\nThis is a simple factorization tool.\n\nHere is the simplest example.\n\n```usage.py\nfrom factorizer import BruteForceFactorizer\ndivider = BruteForceFactorizer() \ndivider.factorize(57) # Devide number in order, starting with 2, 3, 4, 5...\n#>>>(3, 19)\n```\n\n# Install\n## Requirements\n - boost\n \n if you are using apt, you can install with\n ```\n apt install libboost-dev\n ```\n\n ## Install\n Install with pip and GitHub\n \n ```\n pip install git+https://github.com/FullteaOfEEIC/factorizer.git\n ```\n \nInstall with PyPI\n ```\npip install factorizer\n ```\n \n # Usage\n ## Basic Usage\n\nfirst, import package\n ```usage.py\n from factorizer import BruteForceFactorizer\n ```\n\n ```BruteForceFactorizer``` trys dividing given number with 2, 3, 4, 5...\n\nAll Methods in this package are listed below.\n\nsecond, create a object\n```usage.py\ndivider = BruteForceFactorizer()\n```\nthen, call ```factorize()``` method to factorize a number.\n```usage.py\ndivider.factorize(57)\n#>>> (3, 19)\n```\nYou will receive the tuple, whose length are 2 and the product of those are the given number.\n\nThat's all!!\n\n## Setting Timeout\nWhen you try to factorize some large numbers, what we care is whether the calculation ends in a short period. While we can't predict the required time, we provide time out method instead.\n\n```no_timeout.py\nfrom factorizer import BruteForceFactorizer\n\ndivider = BruteForceFactorizer()\nfacts = divider.factorize(221) # This takes less than 1 second.\nprint(facts) # >>> (13, 17) \nfacts = divider.factorize(144483604528043653279487) # This takes about 40 seconds in my environment.\nprint(facts) # >>> (2147483647, 67280421310721)\n```\nNow you can set timeout for divider.\n\n```timeout.py\nfrom factorizer import BruteForceFactorizer\n\ndivider = BruteForceFactorizer(timeout=5)\nfacts = divider.factorize(221)\nprint(facts) # >>> (13, 17) \nfacts = divider.factorize(144483604528043653279487) # This raises timeout error after 5 seconds.\n# >>> factorizer.TimeOutError\n```\n\n## Factorize Methods\n### BruteForceFactorizer\nThis method searches factors by dividing a given number sequential(2, 3, 4, ...sqrt(n)).\nThis is useful when n is small or n has small factors.\n\n```BruteForceFactorizer.py\nfrom factorizer import BruteForceFactorizer\n\nn = 21\ndivider = BruteForceFactorizer(timeout=5)\nfacts = divider.factorize(n)\nassert n == facts[0] * facts[1]\nprint(facts) # >>> (3, 7)\n```\n\n### FermatFactorizer\nThis method searches factors by using [Fermat's factorization method](https://en.wikipedia.org/wiki/Fermat%27s_factorization_method). \nThis is useful when two factors of the given numbers are similar sizes.\n\n```FermatFactorizer.py\nfrom factorizer import FermatFactorizer\n\nn = 17094896531810236860130284769490321915294047711310368136394905170386978916759334950349117125605720936295486193376534502996558346954298821541237678202872064373159864453975455700275218336138295073109837853052911442982249175483147894454735060228013876333548456070708161754022653432247114865681934678336369669630310417775703125135381535339600363990582556226874678712573925886711666498382111760727570796847908646797570295191362260110871270300928038772025787352463090061558150045455638071691578922379413464004696514186854056461649591756647526422083918100655183395966280798720122926503397649310956601613684952853243575941193\n\ndivider = FermatFactorizer(timeout=5)\nfacts = divider.factorize(n)\nassert n == facts[0] * facts[1]\nprint(facts) # >>> (130747453251718202865367599610984256344049976791406031337536420100072758990497257029481575106895700732897562067500860599588866977471195605540443529953122402713181190128830424125700106569684526840827976181922955582670800429750099675311621080502576741880521124560628733981949754441379686189254362646041261993641, 130747453251718202865367599610984256344049976791406031337536420100072758990497257029481575106895700732897562067500860599588866977471195605540443529953122402713181190128830424125700106569684526840827976181922955582670800429750099675311621080502576741880521124560628733981949754441379686189254362646041262989473)\n```\n\n### PollardsRhoFactorizer\nThis method searches factors by using [Pollard's rho algorithm](https://en.wikipedia.org/wiki/Pollard%27s_rho_algorithm). \n\n```PollardsRhoFactorizer.py\nfrom factorizer import PollardsRhoFactorizer\n\nn = 115792089237316195423570985008687907853269984665640564039457584007913129639937\n\ndivider = PollardsRhoFactorizer(c=1, timeout=300)\nfacts = divider.factorize(n)\nassert n == facts[0] * facts[1]\nprint(facts) # >>> (1238926361552897, 93461639715357977769163558199606896584051237541638188580280321)\n```\n\n### RSAPrivateKeyFactorizer\nThis methods factorize a value of RSA public key using a private key.\n\n```RSAPrivateKeyFactorizer.py\nfrom factorizer import RSAPrivateKeyFactorizer\n\nn = 27686602223927069809508667129651371574022939911012945899001963424465432485857959278558567281517986710814493093153793525047594117727967922805090645353064983356364587573528439400605242106130103131384993204101341653150290978652895046371555816803503680877880178698972551411830684046183050273503256489746735122896322889851233107319826830407170825219504026080487291571593984998811061039563352881755150841596074226928497041576188756112952655828168668354006968017555707521724480003190926244967186018315461915028536777617724701916068306698854834025206955234552798984323325634496632645984709079699996404187769159304233647822817\nd = 24519437769149139138866335660847545755165653484828286006043516748645401856648854182027545432645741317052553200888752554950064278086138490312456491085827725315522539371158133921466167994259596651442467698644153219537709818896410096455515199158877483530710370808678561483477316661434979292218578919768993187556392027276261818313248453442745589939088057747368431718456807618716287398645113323934099505504696161971119193577301554819446410886001798824782611510559183940960340872731200080537116249824675375515706234728334218799881290646607824216835997567209464899473615916775422544955890417233691031033339957172951014984193\ne = 65537\n\ndivider = RSAPrivateKeyFactorizer(timeout=5)\nfacts = divider.factorize(n=n, d=d, e=e)\nassert n == facts[0] * facts[1]\nprint(facts) # >>> (164440261485392965958742019246770416320932920696954972063153653746118661265309225245866288630607809128837646403488126759943170796688209694380633475245468531031317968059042232976590058634563033374276851700592039029913560594799947875803213408972945984053103732205589545833939222174651819219655132052468407371273, 168368755764757999709509937248353083024339876032843327089346146791177263807954202500513372878263241247260384327152524628645952463666883718555038702070451982789684092744140047859634766283935579015168962695374570234745026167687949972650110320372983580614771069456603621708761065756833056697404158656939419138329)\n```\n\n### FactorDBFactorizer\n[Factor DB](http://factordb.com/) is a great database to store known factors for many numbers. This method get factors from Factor DB.\n\n```FactorDBFactorizer.py\nfrom factorizer import FactorDBFactorizer\n\nn = 57\n\ndivider = FactorDBFactorizer(timeout=5)\nfacts = divider.factorize(n)\nassert n == facts[0] * facts[1]\nprint(facts) # >>> (3, 19)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FullteaOfEEIC/factorizer",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "factorizer",
    "package_url": "https://pypi.org/project/factorizer/",
    "platform": "",
    "project_url": "https://pypi.org/project/factorizer/",
    "project_urls": {
      "Homepage": "https://github.com/FullteaOfEEIC/factorizer"
    },
    "release_url": "https://pypi.org/project/factorizer/0.9.6/",
    "requires_dist": [
      "cython (>=0.29)",
      "requests",
      "setuptools (>=60.5)"
    ],
    "requires_python": "",
    "summary": "",
    "version": "0.9.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12874845,
  "releases": {
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b5f1515fa329b22daca6544264166c5639a0ff84f620e7b7bb25d9fa84a0595",
          "md5": "43c37f823892dc178275e0fbea5b82d2",
          "sha256": "b88d4658877209b2bf52adab1a91660d5b0c00ea70653010b8a8333f7e3a5ec2"
        },
        "downloads": -1,
        "filename": "factorizer-0.5.2-cp38-cp38-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "43c37f823892dc178275e0fbea5b82d2",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.7",
        "size": 1272022,
        "upload_time": "2022-02-04T07:19:11",
        "upload_time_iso_8601": "2022-02-04T07:19:11.021193Z",
        "url": "https://files.pythonhosted.org/packages/8b/5f/1515fa329b22daca6544264166c5639a0ff84f620e7b7bb25d9fa84a0595/factorizer-0.5.2-cp38-cp38-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f92c049c75ef2d08d29b9e1a2c07ca74c01af374d386835f4df3ed882455bf3",
          "md5": "de6dbc484f29113b51e8e3688b307123",
          "sha256": "175c9c2f64ed87c6c10e2de548d5c5d2a2175cdc56a146705da703cfd0e6b568"
        },
        "downloads": -1,
        "filename": "factorizer-0.5.2-cp39-cp39-macosx_11_0_x86_64.whl",
        "has_sig": false,
        "md5_digest": "de6dbc484f29113b51e8e3688b307123",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 95020,
        "upload_time": "2022-02-04T07:19:12",
        "upload_time_iso_8601": "2022-02-04T07:19:12.890943Z",
        "url": "https://files.pythonhosted.org/packages/2f/92/c049c75ef2d08d29b9e1a2c07ca74c01af374d386835f4df3ed882455bf3/factorizer-0.5.2-cp39-cp39-macosx_11_0_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec74df650cc5bc9ce74509d7f750d96f58cdaceef420f71578e0f41f4ddb5d7a",
          "md5": "15727e41c6d58f57e9e99ca63510acfe",
          "sha256": "e7c107243488acf49b76bf0562545463fcf42eadda518f669e69e383a952bc47"
        },
        "downloads": -1,
        "filename": "factorizer-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "15727e41c6d58f57e9e99ca63510acfe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6295,
        "upload_time": "2022-02-04T07:19:15",
        "upload_time_iso_8601": "2022-02-04T07:19:15.851019Z",
        "url": "https://files.pythonhosted.org/packages/ec/74/df650cc5bc9ce74509d7f750d96f58cdaceef420f71578e0f41f4ddb5d7a/factorizer-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08f1316d534c099fe9483175a17ff967f01ebc76433c574f79b0425b5227cfcb",
          "md5": "77f7c42fcfba7fd9eadcb663b41495a7",
          "sha256": "36f566bb28464ddad9adb45390f2c04c5cace3c100d3192ec9188b0c7a65cb0e"
        },
        "downloads": -1,
        "filename": "factorizer-0.9.6-cp310-cp310-macosx_11_0_x86_64.whl",
        "has_sig": false,
        "md5_digest": "77f7c42fcfba7fd9eadcb663b41495a7",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": null,
        "size": 103739,
        "upload_time": "2022-02-13T08:54:25",
        "upload_time_iso_8601": "2022-02-13T08:54:25.269788Z",
        "url": "https://files.pythonhosted.org/packages/08/f1/316d534c099fe9483175a17ff967f01ebc76433c574f79b0425b5227cfcb/factorizer-0.9.6-cp310-cp310-macosx_11_0_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "644c8718afb8b6e0fafcbe62a165a48ca2cac261bead395599b24297db2d9b4b",
          "md5": "1bef4a6f029a9de851837d55731ed931",
          "sha256": "2b0028458ad8a405d4f119707ef1d4a70eb380df96a71dae6791b407a8f7e177"
        },
        "downloads": -1,
        "filename": "factorizer-0.9.6-cp38-cp38-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "1bef4a6f029a9de851837d55731ed931",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 1343963,
        "upload_time": "2022-02-13T08:54:27",
        "upload_time_iso_8601": "2022-02-13T08:54:27.665758Z",
        "url": "https://files.pythonhosted.org/packages/64/4c/8718afb8b6e0fafcbe62a165a48ca2cac261bead395599b24297db2d9b4b/factorizer-0.9.6-cp38-cp38-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f18ec9f1d4d016bfe0fc5202457b10282d337bdf2002669c556009f40c6a3b2",
          "md5": "deb29969764dcfb4afece2c7e2a1c634",
          "sha256": "e568350dd50e17fe99e61d937c29d7437157ddc184d274525371db3368a93432"
        },
        "downloads": -1,
        "filename": "factorizer-0.9.6.tar.gz",
        "has_sig": false,
        "md5_digest": "deb29969764dcfb4afece2c7e2a1c634",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8538,
        "upload_time": "2022-02-13T08:54:29",
        "upload_time_iso_8601": "2022-02-13T08:54:29.211317Z",
        "url": "https://files.pythonhosted.org/packages/1f/18/ec9f1d4d016bfe0fc5202457b10282d337bdf2002669c556009f40c6a3b2/factorizer-0.9.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08f1316d534c099fe9483175a17ff967f01ebc76433c574f79b0425b5227cfcb",
        "md5": "77f7c42fcfba7fd9eadcb663b41495a7",
        "sha256": "36f566bb28464ddad9adb45390f2c04c5cace3c100d3192ec9188b0c7a65cb0e"
      },
      "downloads": -1,
      "filename": "factorizer-0.9.6-cp310-cp310-macosx_11_0_x86_64.whl",
      "has_sig": false,
      "md5_digest": "77f7c42fcfba7fd9eadcb663b41495a7",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": null,
      "size": 103739,
      "upload_time": "2022-02-13T08:54:25",
      "upload_time_iso_8601": "2022-02-13T08:54:25.269788Z",
      "url": "https://files.pythonhosted.org/packages/08/f1/316d534c099fe9483175a17ff967f01ebc76433c574f79b0425b5227cfcb/factorizer-0.9.6-cp310-cp310-macosx_11_0_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "644c8718afb8b6e0fafcbe62a165a48ca2cac261bead395599b24297db2d9b4b",
        "md5": "1bef4a6f029a9de851837d55731ed931",
        "sha256": "2b0028458ad8a405d4f119707ef1d4a70eb380df96a71dae6791b407a8f7e177"
      },
      "downloads": -1,
      "filename": "factorizer-0.9.6-cp38-cp38-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "1bef4a6f029a9de851837d55731ed931",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": null,
      "size": 1343963,
      "upload_time": "2022-02-13T08:54:27",
      "upload_time_iso_8601": "2022-02-13T08:54:27.665758Z",
      "url": "https://files.pythonhosted.org/packages/64/4c/8718afb8b6e0fafcbe62a165a48ca2cac261bead395599b24297db2d9b4b/factorizer-0.9.6-cp38-cp38-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f18ec9f1d4d016bfe0fc5202457b10282d337bdf2002669c556009f40c6a3b2",
        "md5": "deb29969764dcfb4afece2c7e2a1c634",
        "sha256": "e568350dd50e17fe99e61d937c29d7437157ddc184d274525371db3368a93432"
      },
      "downloads": -1,
      "filename": "factorizer-0.9.6.tar.gz",
      "has_sig": false,
      "md5_digest": "deb29969764dcfb4afece2c7e2a1c634",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8538,
      "upload_time": "2022-02-13T08:54:29",
      "upload_time_iso_8601": "2022-02-13T08:54:29.211317Z",
      "url": "https://files.pythonhosted.org/packages/1f/18/ec9f1d4d016bfe0fc5202457b10282d337bdf2002669c556009f40c6a3b2/factorizer-0.9.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}