{
  "info": {
    "author": "Mwayi Dzanjalimodzi",
    "author_email": "mr.mwayi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Expression\n\n## About\n\nSerialize and deserialize nested compound expression strings such as `(a = 1 or (b = 2 and c = 3))` into parsable expression trees such as `[key:a operator:= value:1, conjunction:or, [key:b operator:= value:2, conjunction:and, key:c operator:= value:3]]`.\n\nYou may want to:-\n- provide an easy to configure filter on an endpoint such as `GET /services?filter=(price lt 200 and duration is 2hrs)`.\n- build an ORM filter based on the expression.\n- simply evaluate that an expression is `True` or `False`.\n\nThese sets of classes make few assumptions as to how conditions will be evaluated. It lets the author configure handlers that can be used to resolve conditions.\n\n## Install\n\n- [ ] Todo\n\n## Configure\n\n## Use\n\nDeserialize a string into a tree of conditions.\n\n```python\nexpression = Expression('(a = 1 and b = 2)')\nconditions = expression.to_conditions()\n\nprint(conditions.conditions[0].key))        # a\nprint(conditions.conditions[0].operator))   # =\nprint(conditions.conditions[0].value))      # 1\n\nprint(conditions.conditions[1].value))      # and\n\nprint(conditions.conditions[2].key)))       # b\nprint(conditions.conditions[2].operator))   # =\nprint(conditions.conditions[2].value))      # 2\n```\n\nEvaluate an expression such `date date_between 2020-09-26,2020-09-28` as a boolean.\n\nInstantiate the Evaluate object, passing through resolved expression arguments. In this case the `date` key will be resolved to a date object of `2020-09-27`.\n\n```python\nevaluate = Evaluate({\n    \"date\": datetime.strptime(\"2020-09-27\", '%Y-%M-%d')\n})\n```\n\nBefore evaluating ensure that the `date_between` expression can be handled by a designated Handler such as `DateBetweenHandler`.\n```python\nevaluate.add_condition_handlers({\n    'date_between': DateBetweenHandler\n})\n```\n\nNow evaluate the expression from string.\n```python\nresult = evaluate.from_expression('date date_between 2020-09-26,2020-09-28')\nself.assertTrue(result)\n```\n\nYou can plug in any custom handler to suit the usecase.\n```python\nclass DateBetweenHandler(Handler):\n\n    def handle(self, condition):\n        key = self._data.get(condition.key)\n\n        values = condition.value.split(',')\n        date1 = datetime.strptime(values[0], '%Y-%M-%d')\n        date2 = datetime.strptime(values[1], '%Y-%M-%d')\n\n        return date1 <= key <= date2\n```\n\n## Contribute\n\n### Running tests\n```\ncoverage run -m unittest2 discover -p=\"*Test.py\"\ncoverage html\n```\n\nor use\n\n```\nbash bin/run-tests\n```\n\n```\nbash bin/run-tests *Test.py\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mwayi/python-expression",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-expression",
    "package_url": "https://pypi.org/project/python-expression/",
    "platform": "",
    "project_url": "https://pypi.org/project/python-expression/",
    "project_urls": {
      "Homepage": "https://github.com/mwayi/python-expression"
    },
    "release_url": "https://pypi.org/project/python-expression/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": " Serialize and deserialize nested compound expression strings such as (a = 1 or (b = 2 and c = 3)) into parsable expression graphs such as [ key:a operator:= value:1, conjunction:or, [ key:b operator:= value:2, conjunction:and, key:c operator:= value:3 ] ].",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8336831,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "039c0af33e4f1a70a1394bad4bd7734d734b306cedde9f2eb8003189c4b5a4c1",
          "md5": "df08e54474f3ef283e005f489eae02e6",
          "sha256": "da19d22493d7d66b538eaaa591a39dd0923733a3447f65c7a1bf744adbb2ac3f"
        },
        "downloads": -1,
        "filename": "python_expression-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df08e54474f3ef283e005f489eae02e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5975,
        "upload_time": "2020-10-04T13:43:19",
        "upload_time_iso_8601": "2020-10-04T13:43:19.822935Z",
        "url": "https://files.pythonhosted.org/packages/03/9c/0af33e4f1a70a1394bad4bd7734d734b306cedde9f2eb8003189c4b5a4c1/python_expression-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eece716605b1d10fa9ce0c60414059dc81fc09f10842eead95152a66bf2d4821",
          "md5": "86dd57ca0f7b33e33dfcc4143443fe71",
          "sha256": "910b568bd348c98b7b696936f40b1129799feed97e095e1c33951a2b4b945d19"
        },
        "downloads": -1,
        "filename": "python-expression-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "86dd57ca0f7b33e33dfcc4143443fe71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4559,
        "upload_time": "2020-10-04T13:43:22",
        "upload_time_iso_8601": "2020-10-04T13:43:22.184861Z",
        "url": "https://files.pythonhosted.org/packages/ee/ce/716605b1d10fa9ce0c60414059dc81fc09f10842eead95152a66bf2d4821/python-expression-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "039c0af33e4f1a70a1394bad4bd7734d734b306cedde9f2eb8003189c4b5a4c1",
        "md5": "df08e54474f3ef283e005f489eae02e6",
        "sha256": "da19d22493d7d66b538eaaa591a39dd0923733a3447f65c7a1bf744adbb2ac3f"
      },
      "downloads": -1,
      "filename": "python_expression-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "df08e54474f3ef283e005f489eae02e6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5975,
      "upload_time": "2020-10-04T13:43:19",
      "upload_time_iso_8601": "2020-10-04T13:43:19.822935Z",
      "url": "https://files.pythonhosted.org/packages/03/9c/0af33e4f1a70a1394bad4bd7734d734b306cedde9f2eb8003189c4b5a4c1/python_expression-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eece716605b1d10fa9ce0c60414059dc81fc09f10842eead95152a66bf2d4821",
        "md5": "86dd57ca0f7b33e33dfcc4143443fe71",
        "sha256": "910b568bd348c98b7b696936f40b1129799feed97e095e1c33951a2b4b945d19"
      },
      "downloads": -1,
      "filename": "python-expression-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "86dd57ca0f7b33e33dfcc4143443fe71",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4559,
      "upload_time": "2020-10-04T13:43:22",
      "upload_time_iso_8601": "2020-10-04T13:43:22.184861Z",
      "url": "https://files.pythonhosted.org/packages/ee/ce/716605b1d10fa9ce0c60414059dc81fc09f10842eead95152a66bf2d4821/python-expression-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}