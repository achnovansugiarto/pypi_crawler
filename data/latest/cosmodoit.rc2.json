{
  "info": {
    "author": "",
    "author_email": "Corentin Guichaoua <corentin.guichaoua@ircam.fr>, Daniel Bedoya <daniel.bedoya@ircam.fr>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "## COSMOS Analysis Toolbox\n\nToolbox for analysing music performance.\n\nThere are 2 main ways to use this toolbox:\n* As a one-stop pipeline which computes all features, recomputing only what has changed\n* As an importable package, accessible from any python code\n\n\n# Setting up\n1. Ensure [Python 3](https://www.python.org/downloads/) and [Musescore](https://musescore.org/fr/download) are installed.\n2. Install the package through pip : `pip install cosmodoit` (or `pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ cosmodoit` until the package is on the main PyPI server). Depending on the python installation, replacing `pip` by `pip3`, `python -m pip` or `python3 -m pip` might be required.\n\n<!-- (outdated)\n# Setting up the analysis pipeline\n1. [Clone the repository](https://forge-2.ircam.fr/help/gitlab-basics/start-using-git.md#clone-a-repository) into a local folder (links at the top of the page).\n2. Ensure [Python](https://www.python.org/downloads/) and [Musescore](https://musescore.org/fr/download) are installed.\n3. [Optional] [Create a virtual environment and activate it](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/).\n4. Install Python dependencies: `python -m pip install -r requirements.txt` (Python3 is required, replace with `python3` if the default installation is Python 2)\n5. [Not needed on MacOS] Compile [Nakamura's alignment software](https://midialignment.github.io/demo.html) (beyond the scope of this ReadMe) and copy the executables to `music_features/bin` (all files should be overwritten)\n6. [Ongoing, recommended] Remember to `git pull` before running to ensure the code you are running is up to date. \n-->\n\n\n# Running the analysis pipeline\n**TL;DR: Just `cosmodoit`!** The pipeline should figure out what to do.\n\n<!-- NB: If the `doit` command is not on the `PATH`, the `python -m doit` command is equivalent. -->\n\nBy default, the pipeline will look for pieces under the current folder, each in its own subfolder; use the `--dir <target_dir>` option to override that behavior (e.g., `cosmodoit --dir example_data`, where `example_data` contains piece subfolders). \nEach piece should be in its own folder, and requires :\n* a performance in `.mid` format;\n* a score in `.mscz` format (Musescore);\n* a recording in `.wav` format.\n* [Optional] a manual beats annotation, ending in `_beats_manual.csv` (will override the automatic beats extraction if present)\n\nIf one or more filetypes are missing, some features will not be computed, but those which can be derived from the existing data will still be computed. The files are not required to share the same base name, but it is recommended for tidyness. In case more than one file matches a type, a warning will be issued and an arbitrary one will be used for the computations.\n\nComputed files will be outputted to the corresponding directory. An option to specify a target directory might be available in the future.\n\nIt is possible to run only a given feature and/or a given piece by using `cosmodoit <feature>[:<piece>]` (intermediate features will still get computed if needed). Either can accept wildcards `*`, e.g. `cosmodoit loudness` or `cosmodoit loudness:*` to compute loudness for all detected pieces or `cosmodoit *:Mazurka\\ 17-4` to compute all features on Mazurka 17-4.\n\nType `cosmodoit list` to list all valid feature tasks, or `cosmodoit list --all` to list all subtasks â€” one per feature/piece pair.\n\nTo force a task to be recomputed, type `cosmodoit forget <task>` and it will be run on the next execution (`--all` to forget all tasks).\n\nRunning `cosmodoit clean` will remove the intermediary files, keeping only the final features.\n\nIf processing is long, using `cosmodoit -n <N> -P thread` will run tasks on N threads.\n\nSome tasks can be configured, for example to set the window length for loudness. Parameters can be listed using `cosmodoit help <task>`, and are set through a `pyproject.toml` configuraion file (see `music_features/templates/pyproject.toml` for a sample of the format). Changes to the parameters will be picked up by the `doit` system and corresponding features (including dependent features) will be recomputed on the next run.\nAt the moment, parameters can only be supplied at the collection level: to apply parameters to a single piece, it must be put in a separate collection.\n\n\n# Toolbox API convention\nEach feature is handled by a different submodule, named `get_<feature>`. Submodules which do not abide by that convention are meant for internal use only.\n\nEach submodule contains at least 3 functions for external use:\n* a `get_<feature>` function which handles the computation of the feature. The exact signature differs for each (see individual documentation).\n* a `write_<feature>` and a `read_<feature>` function to handle input and output.\n\nTo use them just import them into your code: `from cosmodoit.get_<feature> import get_<feature> write_<feature>` (or any other valid import statement)\n\n\n# Extending the toolbox\nThe toolbox is meant to be easily extendable. To add a new feature, add a new submodule named `get_<feature>`. To be picked up by the pipeline, it must be added to the `submodules` variable in `dodo.py` and include in the module's namespace:\n* [required] a `gen_tasks(piece_id, targets, **kwargs)` function to generate `doit` tasks (see the [documentation](https://pydoit.org/tasks.html)). See existing functions for the usage of the parameters;\n* [recommended] a `task_docs` dictionary, which maps the (sub)tasks' names to description strings;\n* [optional] a `param_sources` iterable, which lists the functions that provide keyword-only parameters that should be exposed through the config file.\n\nIf a new input type is required, it can be added as an `InputDescriptor` in the `discover_files_by_piece` function of the `dodo.py` module, which describes the patterns (positive and negative) to match when scanning for the file.\n\nIt is recommended, but not strictly required, to provide the functions of the API convention if you add a new feature.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GNU GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cosmodoit",
    "package_url": "https://pypi.org/project/cosmodoit/",
    "platform": null,
    "project_url": "https://pypi.org/project/cosmodoit/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/cosmodoit/0.1.3/",
    "requires_dist": [
      "doit (>=0.35.0)",
      "lowess (>=1.0.3)",
      "numpy (>=1.22.3)",
      "pandas (>=1.4.2)",
      "pretty-midi",
      "scipy",
      "matplotlib",
      "soundfile",
      "coloredlogs",
      "toml"
    ],
    "requires_python": ">=3.9",
    "summary": "Tools suite for music perfomance analysis",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13654909,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "502c331c35e48c6fcbde1761648fc69eb7ea99bf02200a1d90658a599b72fa61",
          "md5": "e07e3e26e9244e723776986df9c362f6",
          "sha256": "72fc758df6f266d77f833f5a76db2ce74eb5a0681586310d0289247a0dc108a5"
        },
        "downloads": -1,
        "filename": "cosmodoit-0.1.2-cp39-cp39-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "e07e3e26e9244e723776986df9c362f6",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.9",
        "size": 507967,
        "upload_time": "2022-04-28T14:09:27",
        "upload_time_iso_8601": "2022-04-28T14:09:27.369724Z",
        "url": "https://files.pythonhosted.org/packages/50/2c/331c35e48c6fcbde1761648fc69eb7ea99bf02200a1d90658a599b72fa61/cosmodoit-0.1.2-cp39-cp39-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18a61e55c500ed093cc141701f43bca72eb9f0e34a140b206d0a8fb32656304b",
          "md5": "562a48d0980abb65e9a980352bd91682",
          "sha256": "9df2294da88e0e47683cd137a960fad0078179fb25bc85a31d655e5f5d2f670d"
        },
        "downloads": -1,
        "filename": "cosmodoit-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "562a48d0980abb65e9a980352bd91682",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 45452620,
        "upload_time": "2022-04-28T14:09:39",
        "upload_time_iso_8601": "2022-04-28T14:09:39.345495Z",
        "url": "https://files.pythonhosted.org/packages/18/a6/1e55c500ed093cc141701f43bca72eb9f0e34a140b206d0a8fb32656304b/cosmodoit-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16efa8480c6ea01f9eed6caec4dfc5235e497e1df2a7d7b30d9ed93d57074cfd",
          "md5": "04f5c17e3769739125deffca9f5d7aeb",
          "sha256": "df76aefa8a55748ee3489c9e852dc077ffd1f8763d843aa2505c117ee893b1ab"
        },
        "downloads": -1,
        "filename": "cosmodoit-0.1.3-cp39-cp39-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "04f5c17e3769739125deffca9f5d7aeb",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.9",
        "size": 507967,
        "upload_time": "2022-04-28T15:31:32",
        "upload_time_iso_8601": "2022-04-28T15:31:32.776471Z",
        "url": "https://files.pythonhosted.org/packages/16/ef/a8480c6ea01f9eed6caec4dfc5235e497e1df2a7d7b30d9ed93d57074cfd/cosmodoit-0.1.3-cp39-cp39-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1e9675a923c4edcc6c0cbade5920e9e14ffbbebfcacd0d766aa2ef45da309dc",
          "md5": "5088e8b73985637c220754289c09cd40",
          "sha256": "57144e178c9422c88ab28210e572684c404b850264ae4658a3c4fcd07b02d482"
        },
        "downloads": -1,
        "filename": "cosmodoit-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5088e8b73985637c220754289c09cd40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 45917219,
        "upload_time": "2022-04-28T15:31:36",
        "upload_time_iso_8601": "2022-04-28T15:31:36.255025Z",
        "url": "https://files.pythonhosted.org/packages/b1/e9/675a923c4edcc6c0cbade5920e9e14ffbbebfcacd0d766aa2ef45da309dc/cosmodoit-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "16efa8480c6ea01f9eed6caec4dfc5235e497e1df2a7d7b30d9ed93d57074cfd",
        "md5": "04f5c17e3769739125deffca9f5d7aeb",
        "sha256": "df76aefa8a55748ee3489c9e852dc077ffd1f8763d843aa2505c117ee893b1ab"
      },
      "downloads": -1,
      "filename": "cosmodoit-0.1.3-cp39-cp39-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "04f5c17e3769739125deffca9f5d7aeb",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.9",
      "size": 507967,
      "upload_time": "2022-04-28T15:31:32",
      "upload_time_iso_8601": "2022-04-28T15:31:32.776471Z",
      "url": "https://files.pythonhosted.org/packages/16/ef/a8480c6ea01f9eed6caec4dfc5235e497e1df2a7d7b30d9ed93d57074cfd/cosmodoit-0.1.3-cp39-cp39-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b1e9675a923c4edcc6c0cbade5920e9e14ffbbebfcacd0d766aa2ef45da309dc",
        "md5": "5088e8b73985637c220754289c09cd40",
        "sha256": "57144e178c9422c88ab28210e572684c404b850264ae4658a3c4fcd07b02d482"
      },
      "downloads": -1,
      "filename": "cosmodoit-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "5088e8b73985637c220754289c09cd40",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 45917219,
      "upload_time": "2022-04-28T15:31:36",
      "upload_time_iso_8601": "2022-04-28T15:31:36.255025Z",
      "url": "https://files.pythonhosted.org/packages/b1/e9/675a923c4edcc6c0cbade5920e9e14ffbbebfcacd0d766aa2ef45da309dc/cosmodoit-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}