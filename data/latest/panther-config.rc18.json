{
  "info": {
    "author": "Panther Labs Inc.",
    "author_email": "support@panther.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Programming Language :: Python :: 3",
      "Topic :: Security",
      "Typing :: Typed"
    ],
    "description": "# Panther Config SDK\nThe Panther Config module allows you to configure detections for your [Panther](https://panther.com) instance.\n\n## Getting Started\n\n### Install\nThe Panther Config SDK can be installed using PIP.\n\n```sh\npip3 install panther-config==0.0.19\n```\n\n### Writing a detection\nYou can use the `detection` module in Panther config to configure detections. The example below shows a detection that processing an HTTP log.\n\nAssuming we have a log type `Internal.HTTP.Traffic` that has the following shape:\n```json\n{\n    \"method\": \"POST\",\n    \"useSSL\": false,\n    \"path\": \"/api/some/endpoint\",\n    \"host\": \"internal.megacorp.com\"\n}\n```\n\nWe can write a detection to check for insecure `POST` and `PUT` requests:\n```python\n# import the \"detection\" module, as we'll be creating a rule.\nfrom panther_config import detection\n\n# The next four functions are used in the detection definition that follows. Panther \n# detections allow for parts of a detection to be defined with custom Python code.\n\n\n# \"filter_insecure\" is an example of python function that will be used to create\n# a detection.PythonFilter that only matches insecure events. The event argument will\n# have a python dict object corresponding to the JSON event.\ndef filter_insecure(event, params):\n    return event[\"useSSL\"] == False\n\n\n# \"filter_http_methods\" is a slightly more complicated python function that we will use\n# to create a detection.PythonFilter later. This function uses the second \"params\" argument\n# to make the function's logic reusable.\ndef filter_http_methods(event, params):\n    allowed_methods = params[\"methods\"]\n    actual_method = event[\"method\"]\n    return actual_method in allowed_methods\n\n\n# \"reference_generator\" is another example where we will use some python code to dynamically\n# change the information Panther presents on an Alert resulting from a Detection match. In\n# this example, we're populating a query param with some relevant information from \n# the contextual event.\ndef reference_generator(event):\n    origin = event[\"origin\"]\n    return f\"https://wiki.internal.megacorp.com/hosts_db?host={origin}\"\n\n\n# \"make_context\" will be used to attach arbitrary data to the resulting Alert. This\n# can be used to simply change how data is presented or be used to push machine readable information\n# to a downstream Alert Destination.\ndef make_context(event):\n    # The Panther Config SDK's hooks to arbitrary python come with some restrictions. When the\n    # detection is saved, the Panther backend will capture the source of provided function to use\n    # in realtime log data processing and other backend processes. Because of this, functions used\n    # to define a detection must not have references that are not local to the function body. Therefore,\n    # imports targeting any of the below _must_ be included in the function body:\n    #\n    #   - The python standard library\n    #   - Libraries that are enabled on your Panther instance\n    #   - Panther \"Global Helpers\" that you have configured on your instance\n    \n    import fnmatch \n    \n    path = event[\"path\"]\n    return {\n        \"is_api_path\": fnmatch.fnmatch(path, \"/api/*\")\n    }\n\n\n# \"pick_severity\" is a custom function we are using to define the severity of Alerts based on\n# the data present in the current log. The detection.Rule declaration below shows how this method\n# is registered with the definition of our Rule.\ndef pick_severity(event) -> str:\n    from panther_config import detection # required. see notes in comment above \"make_context\"\n    \n    if event[\"origin\"] != \"internal.megacorp.com\":\n        return detection.SeverityInfo\n\n    return detection.SeverityInfo\n\n\n# Declare a rule. Every call to \"detection.Rule\" in your repo will create a Rule in the Panther backend.\n# This example uses a subset of the fields available to define a Rule. See \"Full Dataclass API\" for\n# all the available fields.\ndetection.Rule(\n    # Give the Rule an id. This name must be unique on your Panther \n    # instance. Dot separated names following \"namespace\" pattern is recommended. \n    rule_id=\"Internal.HTTP.Traffic.Insecure\",\n    \n    # Pick a human friendly name for the rule. This will be used\n    # to present the Rule in the Panther Console UI\n    name=\"Detect insecure internal HTTP traffic\",\n    \n    # Specify one or more log types for your Rule. This setting is what\n    # tells the Panther backend to run this Rule against the log data depicted above.\n    log_types=[\"Internal.HTTP.Traffic\"],\n    \n    # Specify an enabled state for the Rule. Detections can be uploaded in a\n    # disabled state and will not begin processing log data until enabled.\n    enabled=True,\n    \n    # Optionally, you can specify a list of tags to associate with the detection.\n    tags=[\"internal\"],\n\n    # The \"filters\" list defines the sequence of matching logic that an event\n    # will be tested against to determine whether there is a match. Returning \"True\" proceeds to the\n    # next check. If the final check returns \"True\", there is a match.\n    filters=[\n        # If the HTTP transaction was secure, we're not interested in that log in this detection.\n        # Therefore, the first filter uses the \"filter_insecure\" function we defined to filter to only\n        # events that have useSSL set to \"false\". \n        detection.PythonFilter(func=filter_insecure),\n        \n        # For now, we're only interested in getting alerted for insecure POST and PUT requests.\n        # We therefore define the second filter step using \"filter_http_methods\". Unlike \"filter_insecure\",\n        # we pass some parameters to this function. \n        detection.PythonFilter(func=filter_http_methods, params={'methods': [\"POST\", \"PUT\"]}),\n    ],\n\n    # On this line, we're defining the severity that should be associated with any resulting alerts.\n    # We have the option of defining a static severity (simply: severity=\"INFO\") but, in this case, we want\n    # to make the severity dynamic based on data from the event. To do this, we reference the \"pick_severity\"\n    # function we defined at the top of the file. We also provide a fallback value in case the dynamic function\n    # cannot be processed. This fallback will also be the Severity value displayed in the Panther Console UI\n    severity=detection.DynamicStringField(\n        func=pick_severity,\n        fallback=detection.SeverityInfo,\n    ),\n\n    # Below we specify the \"reference\" field. This optional field is used to attach a link to any Alerts \n    # resulting from this detection. Similar to \"severity\" we can make this field dynamic based on \n    # event data. There is also a fallback value specified.\n    reference=detection.DynamicStringField(\n        func=reference_generator,\n        fallback=\"https://wiki.internal.megacorp.com/hosts_db\",\n    ),\n    \n    # Fields like \"runbook\" and \"description\" are also available to further customize how any \n    # resulting Alerts will be displayed. These can have dynamic handlers defined, but in this \n    # example static string values will work just fine.\n    runbook=\"Optional runbook content\",\n    description=\"A helpful description\",\n    \n    # Finally, we use the optional \"alert_context\" field to tell the Panther backend to use our \n    # \"make_context\" function to generate custom data that will be attached to any resulting Alerts.\n    alert_context=make_context,\n)\n```\n\n## Full Dataclass API\n\n\n## detection module\n\n### DynamicStringField\nMake a field dynamic based on the detection input\n\n| Field | Description | Type |\n| ----- | ---- | ----------- |\n| `fallback` | Fallback value in case the dynamic handler fails | `str` |\n| `func` | Dynamic handler | `Optional[Callable[[PantherEvent], str]]` |\n\n\n### DynamicDestinations\nMake destinations dynamic based on the detection input\n\n| Field | Description | Type |\n| ----- | ---- | ----------- |\n| `fallback` | Fallback value in case the dynamic handler fails | `Optional[List[str]]` |\n| `func` | Dynamic handler | `Callable[[PantherEvent], List[str]]` |\n\n\n### AlertGrouping\nConfiguration for how an alert is grouped\n\n| Field | Description | Type |\n| ----- | ---- | ----------- |\n| `period_minutes` | How long should matches be grouped into an alert after the first match | `int` |\n| `group_by` | Function to generate a key for grouping matches | `Optional[Callable[[PantherEvent], str]]` |\n\n\n### PythonFilter\nCreate a filter by referencing a python function\n\n| Field | Description | Type |\n| ----- | ---- | ----------- |\n| `func` | Provide a function whose python source will be used as the filter definition | `Callable[[PantherEvent], bool]` |\n\n\n### UnitTestMock\nMock for a unit test\n\n| Field | Description | Type |\n| ----- | ---- | ----------- |\n| `name` | name of the object to mock | `str` |\n| `return_value` | string to assign as the return value for the mock | `str` |\n\n\n### JSONUnitTest\nUnit test with json content\n\n| Field | Description | Type |\n| ----- | ---- | ----------- |\n| `name` | name of the unit test | `str` |\n| `expect_match` | whether the data should match and trigger an alert | `bool` |\n| `data` | json string | `str` |\n| `mocks` | list of mocks to use in the test | `Optional[List[UnitTestMock]]` |\n\n\n### Policy\nDefine a Policy-type detection to execute against log data in your Panther instance\n\n| Field | Description | Type |\n| ----- | ---- | ----------- |\n| `policy_id` | ID for the Policy | `str` |\n| `ignore_patterns` | Patterns of resource ids to ignore for the policy | `Optional[Union[str, List[str]]]` |\n| `destinations` | Alert destinations for the policy | `Optional[Union[str, List[str], DynamicDestinations]]` |\n| `filters` | Define event filters for the policy | `Union[Union[PythonFilter], List[Union[PythonFilter]]]` |\n| `enabled` | Whether the policy is enabled or not | `bool` |\n| `resource_types` | What resource types this policy will apply to | `Union[str, List[str]]` |\n| `severity` | What severity alerts generated from this policy get assigned | `Union[str, DynamicStringField]` |\n| `name` | What name to display in the UI and alerts. The PolicyID will be displayed if this field is not set. | `Optional[str]` |\n| `description` | Description for the policy | `Optional[Union[str, DynamicStringField]]` |\n| `reference` | The reason this policy exists, often a link to documentation | `Optional[Union[str, DynamicStringField]]` |\n| `reports` | A mapping of framework or report names to values this policy covers for that framework | `Optional[Dict[str, List[str]]]` |\n| `runbook` | The actions to be carried out if this policy fails, often a link to documentation | `Optional[Union[str, DynamicStringField]]` |\n| `tags` | Tags used to categorize this policy | `Optional[Union[str, List[str]]]` |\n| `unit_tests` | Unit tests for this policy | `Optional[Union[Union[JSONUnitTest], List[Union[JSONUnitTest]]]]` |\n| `alert_title` | Title to use in the alert | `Optional[Callable[[PantherEvent], str]]` |\n| `alert_context` | Optional JSON to attach to alerts generated by this policy | `Optional[Callable[[PantherEvent], Dict[str, Any]]]` |\n| `alert_grouping` | Configuration for how an alert is grouped | `Optional[AlertGrouping]` |\n\n\n### Rule\nDefine a Rule-type detection to execute against log data in your Panther instance\n\n| Field | Description | Type |\n| ----- | ---- | ----------- |\n| `rule_id` | ID for the rule | `str` |\n| `severity` | Severity for the rule | `Union[str, DynamicStringField]` |\n| `threshold` | Number of matches received before an alert is triggered | `int` |\n| `name` | Display name for the rule | `Optional[str]` |\n| `log_types` | Log Types to associate with this rule | `Union[str, List[str]]` |\n| `filters` | Define event filters for the rule | `Union[Union[PythonFilter], List[Union[PythonFilter]]]` |\n| `enabled` | Whether the rule is enabled or not | `bool` |\n| `unit_tests` | Define event filters for the rule | `Optional[Union[Union[JSONUnitTest], List[Union[JSONUnitTest]]]]` |\n| `tags` | Tags for the rule | `Optional[Union[str, List[str]]]` |\n| `reference` | Reference for the rule | `Optional[Union[str, DynamicStringField]]` |\n| `runbook` | Runbook for the rule | `Optional[Union[str, DynamicStringField]]` |\n| `description` | Description for the rule | `Optional[Union[str, DynamicStringField]]` |\n| `summary_attrs` | Summary Attributes for the rule | `Optional[List[str]]` |\n| `reports` | Report mappings for the rule | `Optional[Dict[str, List[str]]]` |\n| `destinations` | Alert destinations for the rule | `Optional[Union[str, List[str], DynamicDestinations]]` |\n| `alert_title` | Title to use in the alert | `Optional[Callable[[PantherEvent], str]]` |\n| `alert_context` | Optional JSON to attach to alerts generated by this rule | `Optional[Callable[[PantherEvent], Dict[str, Any]]]` |\n| `alert_grouping` | Configuration for how an alert is grouped | `Optional[AlertGrouping]` |\n\n\n### ScheduledRule\nDefine a ScheduledRule-type detection to execute against query results in your Panther instance\n\n| Field | Description | Type |\n| ----- | ---- | ----------- |\n| `rule_id` | ID for the scheduled rule | `str` |\n| `severity` | What severity alerts generated from this scheduled rule get assigned | `Union[str, DynamicStringField]` |\n| `threshold` | Number of matches received before an alert is triggered | `int` |\n| `name` | Display name for the scheduled rule | `Optional[str]` |\n| `scheduled_queries` | Scheduled queries to associate with this scheduled rule | `Union[str, List[str]]` |\n| `filters` | Define event filters for the scheduled rule | `Union[Union[PythonFilter], List[Union[PythonFilter]]]` |\n| `enabled` | Short description for the scheduled rule | `bool` |\n| `unit_tests` | Define event filters for the scheduled rule | `Optional[Union[Union[JSONUnitTest], List[Union[JSONUnitTest]]]]` |\n| `tags` | Tags for the scheduled rule | `Optional[Union[str, List[str]]]` |\n| `reference` | Reference for the scheduled rule | `Optional[Union[str, DynamicStringField]]` |\n| `runbook` | Runbook for the scheduled rule | `Optional[Union[str, DynamicStringField]]` |\n| `description` | Description for the scheduled rule | `Optional[Union[str, DynamicStringField]]` |\n| `summary_attrs` | Summary Attributes for the scheduled rule | `Optional[List[str]]` |\n| `reports` | Report mappings for the scheduled rule | `Optional[Dict[str, List[str]]]` |\n| `destinations` | Alert destinations for the scheduled rule | `Optional[Union[str, List[str], DynamicDestinations]]` |\n| `alert_title` | Title to use in the alert | `Optional[Callable[[PantherEvent], str]]` |\n| `alert_context` | Optional JSON to attach to alerts generated by this rule | `Optional[Callable[[PantherEvent], Dict[str, Any]]]` |\n| `alert_grouping` | Configuration for how an alert is grouped | `Optional[AlertGrouping]` |\n\n## query module\n\n### CronSchedule\nCron expression based schedule definition for a query\n\n| Field | Description | Type |\n| ----- | ---- | ----------- |\n| `expression` | Defines how often queries using this schedule run | `str` |\n| `timeout_minutes` | Defines the timeout applied to queries with this schedule | `int` |\n\n\n### IntervalSchedule\nInterval based schedule definition for a query\n\n| Field | Description | Type |\n| ----- | ---- | ----------- |\n| `rate_minutes` | Defines how often queries using this schedule run | `int` |\n| `timeout_minutes` | Defines the timeout applied to queries with this schedule | `int` |\n\n\n### Query\nA saved or scheduled query\n\n| Field | Description | Type |\n| ----- | ---- | ----------- |\n| `name` | Unique name for the query | `str` |\n| `description` | Short description for the query | `str` |\n| `default_database` | Default database for the query | `str` |\n| `sql` | SQL statement | `str` |\n| `enabled` | Whether the query is enabled or not | `bool` |\n| `tags` | Tags for the query | `Optional[Union[str, List[str]]]` |\n| `schedule` | Schedule attached to the query | `Optional[Union[IntervalSchedule, CronSchedule]]` |\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://panther.com",
    "keywords": "security detection",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "panther-config",
    "package_url": "https://pypi.org/project/panther-config/",
    "platform": null,
    "project_url": "https://pypi.org/project/panther-config/",
    "project_urls": {
      "Homepage": "https://panther.com"
    },
    "release_url": "https://pypi.org/project/panther-config/0.0.19/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "",
    "version": "0.0.19",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15191407,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "130e844387e4bb273a075b682b10d30196ea1340fb6381f239fd1c69369d9919",
          "md5": "5872cfa481a27c32ce9cfcfb62605dad",
          "sha256": "4b48acdeb14d14795d0ebef5c5767b05d2158114dd5e69922af82ab4a21ed184"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5872cfa481a27c32ce9cfcfb62605dad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2331689,
        "upload_time": "2022-08-03T20:25:02",
        "upload_time_iso_8601": "2022-08-03T20:25:02.237318Z",
        "url": "https://files.pythonhosted.org/packages/13/0e/844387e4bb273a075b682b10d30196ea1340fb6381f239fd1c69369d9919/panther_config-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fec86268534b6a9e3d8c2cc04ae33c16a789f3cd98a2791293e297489f2e1a5a",
          "md5": "4b646e2c334e600511771be28884daa2",
          "sha256": "f97fd93f0602e1bc7cf11233d350c83f1628fbceffc6939fcd2f880c4660e205"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4b646e2c334e600511771be28884daa2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2546,
        "upload_time": "2022-08-04T16:56:35",
        "upload_time_iso_8601": "2022-08-04T16:56:35.504890Z",
        "url": "https://files.pythonhosted.org/packages/fe/c8/6268534b6a9e3d8c2cc04ae33c16a789f3cd98a2791293e297489f2e1a5a/panther_config-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b6bdd19ef39838084d4a38da99607ebfcbe6b1f4e8e99a58dfae7db3a6f9cc9",
          "md5": "ebf70849edb3e89a0be923cecf7692e3",
          "sha256": "cf606c79d0796663b985d346e34cdafff143506e0b68912f7a33ace233a19f33"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "ebf70849edb3e89a0be923cecf7692e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 24702,
        "upload_time": "2022-08-24T20:40:45",
        "upload_time_iso_8601": "2022-08-24T20:40:45.677247Z",
        "url": "https://files.pythonhosted.org/packages/2b/6b/dd19ef39838084d4a38da99607ebfcbe6b1f4e8e99a58dfae7db3a6f9cc9/panther_config-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "574b6a162942b43331b2e18b424a0d8b4941189d3dd62a9384495caadb5e0221",
          "md5": "e4357b8c4be035fe3a37a1e0ab61b7f9",
          "sha256": "b763ebe4ad514d60b6790a4a0c9cce5a87ff223b535ae413cea61b0036c91474"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "e4357b8c4be035fe3a37a1e0ab61b7f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 24740,
        "upload_time": "2022-08-24T21:34:55",
        "upload_time_iso_8601": "2022-08-24T21:34:55.141758Z",
        "url": "https://files.pythonhosted.org/packages/57/4b/6a162942b43331b2e18b424a0d8b4941189d3dd62a9384495caadb5e0221/panther_config-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc68854f87a0fb794edfbeea3689e199820e564172c39840e105fe85d74f3753",
          "md5": "59543ecf3704fc6c1a25251ee61d4e86",
          "sha256": "3cca3ab8feff299038531a18cda3ec45c52afca4229b1bebfff1a3d440185e09"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "59543ecf3704fc6c1a25251ee61d4e86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 25513,
        "upload_time": "2022-08-25T12:26:03",
        "upload_time_iso_8601": "2022-08-25T12:26:03.231979Z",
        "url": "https://files.pythonhosted.org/packages/dc/68/854f87a0fb794edfbeea3689e199820e564172c39840e105fe85d74f3753/panther_config-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18c0f7381c9710b26e1e0a75c7ebebdfd0a19518c5a885e3bc9aa227f918f049",
          "md5": "fedd4037ee8dbcc3cc0b9d0fde5d6bc6",
          "sha256": "60e7a502000d8d7eed2e17a06f1703e5273ace5c040cb87839212fc77f2128df"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "fedd4037ee8dbcc3cc0b9d0fde5d6bc6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 26209,
        "upload_time": "2022-08-28T19:16:39",
        "upload_time_iso_8601": "2022-08-28T19:16:39.815831Z",
        "url": "https://files.pythonhosted.org/packages/18/c0/f7381c9710b26e1e0a75c7ebebdfd0a19518c5a885e3bc9aa227f918f049/panther_config-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e91b5ab83c6b8456807d7e0c1f6fe7314119338fc5509f144a6e6ae370e0a15",
          "md5": "2b119b2392f79d4d35dc51c31ff22ce6",
          "sha256": "5b471881c28055c3218456a149bd6f37b1909eef094ab86ee2cd1e9deb09ec54"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "2b119b2392f79d4d35dc51c31ff22ce6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 27614,
        "upload_time": "2022-08-29T21:03:05",
        "upload_time_iso_8601": "2022-08-29T21:03:05.445910Z",
        "url": "https://files.pythonhosted.org/packages/6e/91/b5ab83c6b8456807d7e0c1f6fe7314119338fc5509f144a6e6ae370e0a15/panther_config-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f9ec52d6c801edf23cc06fd09dfe0b730d77a786b59aae636e79d681ec4fac5",
          "md5": "4ad012a4a3ca9a925e11f2c1b3c9b56d",
          "sha256": "97ac76e113049003af680c8802325b8dc7c44e090c01e0e4664eea9ec6b7d7ad"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "4ad012a4a3ca9a925e11f2c1b3c9b56d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 28637,
        "upload_time": "2022-08-31T18:16:18",
        "upload_time_iso_8601": "2022-08-31T18:16:18.647795Z",
        "url": "https://files.pythonhosted.org/packages/6f/9e/c52d6c801edf23cc06fd09dfe0b730d77a786b59aae636e79d681ec4fac5/panther_config-0.0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad1626b22057315414d2a1c8a11b345778281cfb6a220ce523fe86807e6866c7",
          "md5": "30e64049d141f589a2ace05e5f573b87",
          "sha256": "d8cf6073ad453320a13ef1f7679a22c196df58917f437a4337f5559f4b1cfd3b"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "30e64049d141f589a2ace05e5f573b87",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 27372,
        "upload_time": "2022-09-07T18:42:15",
        "upload_time_iso_8601": "2022-09-07T18:42:15.932919Z",
        "url": "https://files.pythonhosted.org/packages/ad/16/26b22057315414d2a1c8a11b345778281cfb6a220ce523fe86807e6866c7/panther_config-0.0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8c0673c598df05fadae82885b2f912e078ed99f646012ec1e0609055c33d1f5",
          "md5": "28c6171b6a62e651135e184cfdc7204e",
          "sha256": "3994eb266063c503d675494db5e88eca58d95e6c1d324fcea7a1cab705d3a666"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.18.tar.gz",
        "has_sig": false,
        "md5_digest": "28c6171b6a62e651135e184cfdc7204e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 27848,
        "upload_time": "2022-09-20T19:17:16",
        "upload_time_iso_8601": "2022-09-20T19:17:16.087067Z",
        "url": "https://files.pythonhosted.org/packages/f8/c0/673c598df05fadae82885b2f912e078ed99f646012ec1e0609055c33d1f5/panther_config-0.0.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a28fef47643a23381314b64430989a3ec5b91aaa2a49a449e0ea40267b57f8c6",
          "md5": "e5c5476dee62846dd5810ca6908eab37",
          "sha256": "7e1db70b3336b5966237e3922663a2e54946d1827339b6eb0fd06d9af6bf0343"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.19.tar.gz",
        "has_sig": false,
        "md5_digest": "e5c5476dee62846dd5810ca6908eab37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 27881,
        "upload_time": "2022-09-23T14:25:23",
        "upload_time_iso_8601": "2022-09-23T14:25:23.912764Z",
        "url": "https://files.pythonhosted.org/packages/a2/8f/ef47643a23381314b64430989a3ec5b91aaa2a49a449e0ea40267b57f8c6/panther_config-0.0.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b67a2148c34a7332c3e6e5b4aa070aa3e2d4280c5d1419f0f6c048d41ad712ba",
          "md5": "4b2123103fd4e00fdcf0cdf31a12273e",
          "sha256": "01d257f76874888092145e6802d3015269d3cb22f9e9cb224657ccf3b95aacd4"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4b2123103fd4e00fdcf0cdf31a12273e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3371,
        "upload_time": "2022-08-17T12:08:01",
        "upload_time_iso_8601": "2022-08-17T12:08:01.841178Z",
        "url": "https://files.pythonhosted.org/packages/b6/7a/2148c34a7332c3e6e5b4aa070aa3e2d4280c5d1419f0f6c048d41ad712ba/panther_config-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4c1cbc27331e2e8070c79bf028c2c1163a332c8570622f321977b06322d67a3",
          "md5": "b164552db56873d2532a7c2cf0653042",
          "sha256": "8e3a68aff5c16588ad069eb190c01c046ca383bfa4d604426aca24856bb6fbde"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b164552db56873d2532a7c2cf0653042",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 15830,
        "upload_time": "2022-08-17T21:18:16",
        "upload_time_iso_8601": "2022-08-17T21:18:16.703877Z",
        "url": "https://files.pythonhosted.org/packages/f4/c1/cbc27331e2e8070c79bf028c2c1163a332c8570622f321977b06322d67a3/panther_config-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6a1d4a83cd0f5d07262a3b81f20dfc58ab9e24d5ec035dcd1bf1d14764403bb",
          "md5": "f0da32950eaec2d0dc14378209df8324",
          "sha256": "75a4dd62776b7684bc5e3995a2335f711d2bcd208b2917f579fe0b2ea5805661"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f0da32950eaec2d0dc14378209df8324",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 17332,
        "upload_time": "2022-08-18T11:08:33",
        "upload_time_iso_8601": "2022-08-18T11:08:33.377311Z",
        "url": "https://files.pythonhosted.org/packages/a6/a1/d4a83cd0f5d07262a3b81f20dfc58ab9e24d5ec035dcd1bf1d14764403bb/panther_config-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f14433e3c8c888fe8adcb23aaafb2f5edc2e1cb2ab9fb59c2b82ca283fc53f0",
          "md5": "10d7eaf778475b1c61029fc886f5a011",
          "sha256": "ce0c16e0ff31b847a464fac95fd6ae128829ab56b34896e0f79a54520eb5059f"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "10d7eaf778475b1c61029fc886f5a011",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 17860,
        "upload_time": "2022-08-18T14:14:27",
        "upload_time_iso_8601": "2022-08-18T14:14:27.351038Z",
        "url": "https://files.pythonhosted.org/packages/6f/14/433e3c8c888fe8adcb23aaafb2f5edc2e1cb2ab9fb59c2b82ca283fc53f0/panther_config-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3579450bdca807e6ec89f01d55f27112ebfee9b7c3db134fe50dbee828f42dc5",
          "md5": "b8d8edd5b018ddca621be22c900de7ab",
          "sha256": "342838833cc9801c5e11f5dd3e7d3982320741560a1c5f4cd3666c9a7f04ea88"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "b8d8edd5b018ddca621be22c900de7ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 18752,
        "upload_time": "2022-08-23T17:04:53",
        "upload_time_iso_8601": "2022-08-23T17:04:53.819807Z",
        "url": "https://files.pythonhosted.org/packages/35/79/450bdca807e6ec89f01d55f27112ebfee9b7c3db134fe50dbee828f42dc5/panther_config-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90cbb082abe0533719c5a8e171278cf6791797f6c7d4eb7eff6d81596b8f8fc1",
          "md5": "67581d90e206d951634db2e77ee8f189",
          "sha256": "a03660a7ea673952519dfd1b45b8fecde2532cb56fb4977ebbbfbd3398f4a2f1"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "67581d90e206d951634db2e77ee8f189",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 19339,
        "upload_time": "2022-08-24T18:22:53",
        "upload_time_iso_8601": "2022-08-24T18:22:53.937078Z",
        "url": "https://files.pythonhosted.org/packages/90/cb/b082abe0533719c5a8e171278cf6791797f6c7d4eb7eff6d81596b8f8fc1/panther_config-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e01db8e789a58e354e6cf0d900f418cc654f07e32e9c2fc2d448061d7bc7bc6a",
          "md5": "a1ca3c9276ef30ebca62429a14fe21a2",
          "sha256": "6612310869bb03a63c983a99cdcc1ccb423d31fd1dce37288c73ddc43fc35f31"
        },
        "downloads": -1,
        "filename": "panther_config-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "a1ca3c9276ef30ebca62429a14fe21a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 19369,
        "upload_time": "2022-08-24T19:17:02",
        "upload_time_iso_8601": "2022-08-24T19:17:02.608328Z",
        "url": "https://files.pythonhosted.org/packages/e0/1d/b8e789a58e354e6cf0d900f418cc654f07e32e9c2fc2d448061d7bc7bc6a/panther_config-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a28fef47643a23381314b64430989a3ec5b91aaa2a49a449e0ea40267b57f8c6",
        "md5": "e5c5476dee62846dd5810ca6908eab37",
        "sha256": "7e1db70b3336b5966237e3922663a2e54946d1827339b6eb0fd06d9af6bf0343"
      },
      "downloads": -1,
      "filename": "panther_config-0.0.19.tar.gz",
      "has_sig": false,
      "md5_digest": "e5c5476dee62846dd5810ca6908eab37",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 27881,
      "upload_time": "2022-09-23T14:25:23",
      "upload_time_iso_8601": "2022-09-23T14:25:23.912764Z",
      "url": "https://files.pythonhosted.org/packages/a2/8f/ef47643a23381314b64430989a3ec5b91aaa2a49a449e0ea40267b57f8c6/panther_config-0.0.19.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}