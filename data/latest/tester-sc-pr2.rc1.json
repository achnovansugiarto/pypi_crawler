{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<div align=\"center\">\n\n# üç∞ PromptLayer\n\n**The first platform built for <span style=\"background-color: rgb(219, 234, 254);\">prompt engineers</span>**\n\n<a href=\"https://www.python.org/\"><img alt=\"Python\" src=\"https://img.shields.io/badge/-Python 3.8+-blue?style=for-the-badge&logo=python&logoColor=white\"></a>\n<a href=\"https://magniv.notion.site/Prompt-Layer-Docs-db0e6f50cacf4564a6d09824ba17a629\"><img alt=\"Docs\" src=\"https://custom-icon-badges.herokuapp.com/badge/docs-PL-green.svg?logo=cake&style=for-the-badge&logoColor=white\"></a>\n<a href=\"https://www.loom.com/share/723cbdb43439458fb607e910faa13294\"><img alt=\"Demo with Loom\" src=\"https://img.shields.io/badge/Demo-loom-552586.svg?logo=loom&style=for-the-badge&labelColor=gray\"></a>\n\n---  \n\n<div align=\"left\">\n\n[PromptLayer](https://promptlayer.com/) is the first platform that allows you to track, manage, and share your GPT prompt engineering. PromptLayer acts a middleware between your code and OpenAI‚Äôs python library. \n\nPromptLayer records all your OpenAI API requests, allowing you to search and explore request history in the PromptLayer dashboard.\n\nThis repo contains the Python wrapper library for PromptLayer.\n\n## Quickstart ‚ö°\n\n### Install PromptLayer\n\n```bash\npip install promptlayer\n```\n\n### Installing PromptLayer Locally\n\nUse `pip install .` to install locally.\n\n### Using PromptLayer\n\nTo get started, create an account by clicking ‚Äú*Log in*‚Äù on [PromptLayer](https://promptlayer.com/). Once logged in, click the button to create an API key and save this in a secure location ([Guide to Using Env Vars](https://towardsdatascience.com/the-quick-guide-to-using-environment-variables-in-python-d4ec9291619e)).\n\nOnce you have that all set up, [install PromptLayer using](https://pypi.org/project/promptlayer/) `pip`.\n\nIn the Python file where you use OpenAI APIs, add the following. This allows us to keep track of your requests without needing any other code changes.\n\n```python\nimport promptlayer\npromptlayer.api_key = \"<YOUR PromptLayer API KEY pl_xxxxxx>\"\nopenai = promptlayer.openai\n```\n\n**You can then use `openai` as you would if you had imported it directly.**\n\n<aside>\nüí° Your OpenAI API Key is **never** sent to our servers. All OpenAI requests are made locally from your machine, PromptLayer just logs the request.\n</aside>\n\n### Adding PromptLayer tags: `pl_tags`\n\nPromptLayer allows you to add tags through the `pl_tags` argument. This allows you to track and group requests in the dashboard. \n\n*Tags are not required but we recommend them!*\n\n```python\nopenai.Completion.create(\n  engine=\"text-ada-001\", \n  prompt=\"My name is\", \n  pl_tags=[\"name-guessing\", \"pipeline-2\"]\n)\n```\n\nAfter making your first few requests, you should be able to see them in the PromptLayer dashboard!\n\n## Using the REST API\n\nThis Python library is a wrapper over PromptLayer's REST API. If you use another language, like Javascript, just interact directly with the API. \n\nHere is an example request below:\n\n```jsx\nimport requests\nrequest_response = requests.post(\n  \"https://api.promptlayer.com/track-request\",\n  json={\n    \"function_name\": \"openai.Completion.create\",\n    \"args\": [],\n    \"kwargs\": {\"engine\": \"text-ada-001\", \"prompt\": \"My name is\"},\n    \"tags\": [\"hello\", \"world\"],\n    \"request_response\": {\"id\": \"cmpl-6TEeJCRVlqQSQqhD8CYKd1HdCcFxM\", \"object\": \"text_completion\", \"created\": 1672425843, \"model\": \"text-ada-001\", \"choices\": [{\"text\": \" advocacy\\\"\\n\\nMy name is advocacy.\", \"index\": 0, \"logprobs\": None, \"finish_reason\": \"stop\"}]},\n    \"request_start_time\": 1673987077.463504,\n    \"request_end_time\": 1673987077.463504,\n    \"api_key\": \"pl_<YOUR API KEY>\",\n  },\n)\n```\n\n## Contributing\n\nWe welcome contributions to our open source project, including new features, infrastructure improvements, and better documentation. For more information or any questions, contact us at [hello@magniv.io](mailto:hello@magniv.io).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tester-sc-pr2",
    "package_url": "https://pypi.org/project/tester-sc-pr2/",
    "platform": null,
    "project_url": "https://pypi.org/project/tester-sc-pr2/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/tester-sc-pr2/0.1.64/",
    "requires_dist": [
      "requests",
      "openai",
      "langchain"
    ],
    "requires_python": "",
    "summary": "package to keep track of your GPT models training",
    "version": "0.1.64",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16880592,
  "releases": {
    "0.1.64": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59d164b5725a26603d673cafce34394c2c432bf498bd4cea42072ffcf306a091",
          "md5": "d130e4ea90ff8c700123a00f7e02bbe2",
          "sha256": "e791492b4daf9ff9728f991a274a7301e07e774bdb3870ce877f186bacee0184"
        },
        "downloads": -1,
        "filename": "tester_sc_pr2-0.1.64-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d130e4ea90ff8c700123a00f7e02bbe2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9782,
        "upload_time": "2023-02-16T00:25:40",
        "upload_time_iso_8601": "2023-02-16T00:25:40.495997Z",
        "url": "https://files.pythonhosted.org/packages/59/d1/64b5725a26603d673cafce34394c2c432bf498bd4cea42072ffcf306a091/tester_sc_pr2-0.1.64-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "59d164b5725a26603d673cafce34394c2c432bf498bd4cea42072ffcf306a091",
        "md5": "d130e4ea90ff8c700123a00f7e02bbe2",
        "sha256": "e791492b4daf9ff9728f991a274a7301e07e774bdb3870ce877f186bacee0184"
      },
      "downloads": -1,
      "filename": "tester_sc_pr2-0.1.64-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d130e4ea90ff8c700123a00f7e02bbe2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9782,
      "upload_time": "2023-02-16T00:25:40",
      "upload_time_iso_8601": "2023-02-16T00:25:40.495997Z",
      "url": "https://files.pythonhosted.org/packages/59/d1/64b5725a26603d673cafce34394c2c432bf498bd4cea42072ffcf306a091/tester_sc_pr2-0.1.64-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}