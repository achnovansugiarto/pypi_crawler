{
  "info": {
    "author": "Marko Ristin",
    "author_email": "marko@ristin.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "**************\nabnf-to-regexp\n**************\n\n.. image:: https://github.com/aas-core-works/abnf-to-regexp/actions/workflows/check-on-push-to-main.yml/badge.svg\n    :target: https://github.com/aas-core-works/abnf-to-regexp/actions/workflows/check-on-push-to-main.yml\n    :alt: Check on push to main\n\n.. image:: https://coveralls.io/repos/github/aas-core-works/abnf-to-regexp/badge.svg?branch=main\n    :target: https://coveralls.io/github/aas-core-works/abnf-to-regexp?branch=main\n    :alt: Test coverage\n\n.. image:: https://badge.fury.io/py/abnf-to-regexp.svg\n    :target: https://badge.fury.io/py/abnf-to-regexp\n    :alt: PyPI - version\n\n.. image:: https://img.shields.io/pypi/pyversions/abnf-to-regexp.svg\n    :alt: PyPI - Python Version\n\n\nThe program ``abnf-to-regexp`` converts augmented Backus-Naur form (ABNF) to a regular expression.\n\nMotivation\n==========\nFor a lot of string matching problems, it is easier to maintain an ABNF grammar instead of a regular expression.\nHowever, many programming languages do not provide parsing and matching of ABNFs in their standard libraries.\nThis tool allows you to write your grammars in ABNF and convert it to a regular expression which you then include in your source code.\n\nIt is based on `abnf`_ Python module, which is used to parse the ABNFs.\n\n.. _abnf: https://pypi.org/project/abnf\n\nAfter the parsing, we apply a series of optimizations to make the regular expression a bit more readable.\nFor example, the alternations of character classes are taken together to form a single character class.\n\n``--help``\n==========\n.. Help starts: abnf-to-regexp --help\n.. code-block::\n\n    usage: abnf-to-regexp [-h] -i INPUT [-o OUTPUT]\n                          [--format {single-regexp,python-nested}]\n\n    Convert ABNF grammars to Python regular expressions.\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -i INPUT, --input INPUT\n                            path to the ABNF file\n      -o OUTPUT, --output OUTPUT\n                            path to the file where regular expression is stored;\n                            if not specified, writes to STDOUT\n      --format {single-regexp,python-nested}\n                            Output format; for example a single regular expression\n                            or a code snippet\n\n.. Help ends: abnf-to-regexp --help\n\nExample Conversion\n==================\nPlease see `test_data/nested-python/rfc3987/grammar.abnf`_ for an example grammar.\n\nThe corresponding generated code, *e.g.*, in Python, is stored at `test_data/nested-python/rfc3987/expected.py`_.\n\n.. _test_data/nested-python/rfc3987/grammar.abnf: https://github.com/aas-core-works/abnf-to-regexp/blob/main/test_data/nested-python/rfc3987/grammar.abnf\n.. _test_data/nested-python/rfc3987/expected.py: https://github.com/aas-core-works/abnf-to-regexp/blob/main/test_data/nested-python/rfc3987/expected.py\n\nInstallation\n============\nYou can install the tool with pip in your virtual environment:\n\n.. code-block::\n\n    pip3 install abnf-to-regexp\n\nDevelopment\n===========\n\n* Check out the repository.\n\n* In the repository root, create the virtual environment:\n\n.. code-block:: bash\n\n    python3 -m venv venv3\n\n* Activate the virtual environment (in this case, on Linux):\n\n.. code-block:: bash\n\n    source venv3/bin/activate\n\n* Install the development dependencies:\n\n.. code-block:: bash\n\n    pip3 install -e .[dev]\n\n* Run the pre-commit checks:\n\n.. code-block:: bash\n\n    python precommit.py\n\nVersioning\n==========\nWe follow `Semantic Versioning <http://semver.org/spec/v1.0.0.html>`_.\nThe version X.Y.Z indicates:\n\n* X is the major version (backward-incompatible),\n* Y is the minor version (backward-compatible), and\n* Z is the patch version (backward-compatible bug fix).\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aas-core-works/abnf-to-regexp",
    "keywords": "abnf backus-naur convert regular expressions",
    "license": "License :: OSI Approved :: MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "abnf-to-regexp",
    "package_url": "https://pypi.org/project/abnf-to-regexp/",
    "platform": null,
    "project_url": "https://pypi.org/project/abnf-to-regexp/",
    "project_urls": {
      "Homepage": "https://github.com/aas-core-works/abnf-to-regexp"
    },
    "release_url": "https://pypi.org/project/abnf-to-regexp/1.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Convert ABNF grammars to Python regular expressions.",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15240699,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49e30aab3d2b27e8dc3b8a689a907e64c48aa8fcccf975bb73a778339265dc0c",
          "md5": "a02ea38fa9a828f4285ebdbd18015722",
          "sha256": "aeb8cd5fddda87cb92357a66dd048d70ead72465bc8a7a5f02a3b0daa2cdd72b"
        },
        "downloads": -1,
        "filename": "abnf-to-regexp-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a02ea38fa9a828f4285ebdbd18015722",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9389,
        "upload_time": "2021-05-26T23:23:08",
        "upload_time_iso_8601": "2021-05-26T23:23:08.599348Z",
        "url": "https://files.pythonhosted.org/packages/49/e3/0aab3d2b27e8dc3b8a689a907e64c48aa8fcccf975bb73a778339265dc0c/abnf-to-regexp-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9748c4f82ee66f730e79b97d5425d29b92daad8587afc713afb1a63d8a374023",
          "md5": "bde6bd6525db4eaa6151bd5785777a68",
          "sha256": "000f39975e466513add85a6ee0a2d507a028dbfe18897499efeb505d05bc0c99"
        },
        "downloads": -1,
        "filename": "abnf-to-regexp-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bde6bd6525db4eaa6151bd5785777a68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15269,
        "upload_time": "2022-05-22T08:57:49",
        "upload_time_iso_8601": "2022-05-22T08:57:49.585958Z",
        "url": "https://files.pythonhosted.org/packages/97/48/c4f82ee66f730e79b97d5425d29b92daad8587afc713afb1a63d8a374023/abnf-to-regexp-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0ea2455d8ceaca02de24b11b1bee42e6f226b4da3515f2c409099f757470bbd",
          "md5": "0e19488f5373983baa2298cd555feb4e",
          "sha256": "d038de6d713e3369fbd7ac0b7dee949badebbf5d472805daf73ac4b4694d9ad2"
        },
        "downloads": -1,
        "filename": "abnf-to-regexp-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e19488f5373983baa2298cd555feb4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15392,
        "upload_time": "2022-06-15T15:22:47",
        "upload_time_iso_8601": "2022-06-15T15:22:47.932731Z",
        "url": "https://files.pythonhosted.org/packages/d0/ea/2455d8ceaca02de24b11b1bee42e6f226b4da3515f2c409099f757470bbd/abnf-to-regexp-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39fe71273f77e42514ff4407d88149c0ce09475f409ac335be039d9d1c5264a8",
          "md5": "cb354a5c35303ea77af7f550f3e50714",
          "sha256": "253bb5197275efc8a3241c3864be7a84c47d320d139076683fd4b1c376689b1b"
        },
        "downloads": -1,
        "filename": "abnf-to-regexp-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cb354a5c35303ea77af7f550f3e50714",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21563,
        "upload_time": "2022-09-28T12:08:09",
        "upload_time_iso_8601": "2022-09-28T12:08:09.034880Z",
        "url": "https://files.pythonhosted.org/packages/39/fe/71273f77e42514ff4407d88149c0ce09475f409ac335be039d9d1c5264a8/abnf-to-regexp-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "39fe71273f77e42514ff4407d88149c0ce09475f409ac335be039d9d1c5264a8",
        "md5": "cb354a5c35303ea77af7f550f3e50714",
        "sha256": "253bb5197275efc8a3241c3864be7a84c47d320d139076683fd4b1c376689b1b"
      },
      "downloads": -1,
      "filename": "abnf-to-regexp-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "cb354a5c35303ea77af7f550f3e50714",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21563,
      "upload_time": "2022-09-28T12:08:09",
      "upload_time_iso_8601": "2022-09-28T12:08:09.034880Z",
      "url": "https://files.pythonhosted.org/packages/39/fe/71273f77e42514ff4407d88149c0ce09475f409ac335be039d9d1c5264a8/abnf-to-regexp-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}