{
  "info": {
    "author": null,
    "author_email": null,
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n# toolcache\n\n`toolcache` makes it simple to create and configure caches in python\n\n## Features\n- save caches to memory or to disk\n- memoize functions, instance methods, `@classmethod`s, and `@staticmethod`s\n- control cache size with ttl and eviction policies like lru / fifo / lfu\n- use thread safety, process safety, or no safety (default = thread safety)\n- use custom hash functions\n- track cache usage statistics\n\n## Install\n`pip install toolcache`\n\n## Contents\n- [Example Usage](#example-usage)\n- [Reference](#cache-reference)\n    - [Cache Types](#cache-types)\n    - [Cache Creation](#cache-creation)\n    - [Cache Configuration](#cache-configuration)\n    - [Cache Decorators](#cache-decorators)\n    - [Cache Methods](#cache-methods)\n- [Frequently Asked Questions](#frequently-asked-questions)\n\n## Example Usage\n\n### Creating Caches\n```python\nimport toolcache\n\n# memoize function with memory cache\n@toolcache.cache('memory')\ndef f(a, b, c):\n    return a * b * c\n\n# memoize function with disk cache, stored in a tempdir\n@toolcache.cache('disk')\ndef f(a, b, c):\n    return a * b * c\n\n# memoize function with disk cache, stored in a persistent dir\n@toolcache.cache('disk', cache_dir='/path/to/cache/dir')\ndef f(a, b, c):\n    return a * b * c\n    \n# remove cache entries once they reach a specific age\n@toolcache.cache('disk', ttl='24 hours')\ndef f(a, b, c):\n    return a * b * c\n\n# remove cache entries once cache reaches a specific size\n@toolcache.cache('disk', max_size=3, max_size_policy='fifo')\ndef f(a, b, c):\n    return a * b * c\n\n# specify which args are used to create unique hash of inputs\n@toolcache.cache('disk', hash_args=['a', 'b'])\ndef f(a, b, c):\n    return a * b * c\n\n# create standalone cache\nstandalone_cache = toolcache.MemoryCache()\n```\n\n### Using Caches\n\n```python\n# get cache size\nprint(f.cache.get_cache_size())\n> 4\n\n# track cache usage statistics\nprint(f.cache.stats)\n> {'n_checks': 6,\n>  'n_deletes': 2,\n>  'n_hashes': 8,\n>  'n_hits': 2,\n>  'n_loads': 1,\n>  'n_misses': 4,\n>  'n_saves': 3,\n>  'n_size_evictions': 0,\n>  'n_ttl_evictions': 0}\n\n# clear cache\nf.cache.delete_all_entries()\n```\n\n### More Examples\n- [Configure Hashing](examples/function_hashing_options.py)\n- [Configure Disk Caches](examples/disk_cache_options.py)\n- [Use Cache Eviction Policies](examples/cache_eviction_policies.py)\n- [Monitor Cache Usage](examples/monitor_cache_statistics.py)\n- [Create Standalone Caches](examples/standalone_cache.py)\n- [Define Custom Cachetypes](examples/define_custom_cache.py)\n\n## Cache Reference\n\n### Cache Types\n\n`toolcache` includes 3 cache types that each inherit from abstract cache class `BaseCache`:\n\n| cachetype     | description                                               | use case |\n| --            | --                                                        | -- |\n| `MemoryCache` | cache that saves each entry as key-value pair in a `dict` | speed |\n| `DiskCache`   | cache that saves each entry as a file to disk             | persistence, or large data that does not fit in memory |\n| `NullCache`   | cache that does not save any entries                      | programmatically disabling cache |\n\n\n### Cache Creation\n\nCaches can be created in two ways:\n1. decorating a function with `@toolcache.cache(cachetype)` where `cachetype` is `'memory'`, `'disk'`, `'null'`, or a class inheriting from `BaseCache`\n2. creating a standalone cache by instantiating a class that inherits from `BaseCache`\n\n### Cache Configuration\n\nThe configuration options listed below can be passed to `toolcache.cache()` or passed to a standalone cache during initialization.\n\n#### General Config\nthese configuration options are available to every cache\n| arg          | description                                                                       | example value       | default behavior |\n| --           | --                                                                                | --                  | -- |\n| `safety`     | `str` name of concurrency safety level, one of `'thread'`, `'process'`, or `None` | `'thread'`          | `'thread'` |\n| `verbose`    | `bool` of whether to print info whenever saving to or loading from cache          | `False`             | `False` |\n| `cache_name` | `bool` of whether to print info whenever saving to or loading from cache          | `'important_cache'` | use decorated function name, or uuid for  a standalone cache |\n\n#### Hash Config\n| arg                     | description                                              | example value | default behavior |\n| --                      | --                                                       | --            | --               |\n| `f_hash`                | custom function for computing hash | `lambda x: hash(x)` | `toolcache. compute_hash_json()` |\n| `normalize_hash_inputs` | bool of whether to normalize function calls so that for a function `f` with args `a` and `b`, the calls `f(1, 2)` and `f(a=1, b=2)` are equivalent | `False` | `False` |\n| `hash_include_args`     | `list` of `str` names of arguments used to compute hash  | `['arg1', 'arg2']`               | include all args |\n| `hash_exclude_args`     | `list` of `str` names of arguments excluded from hash    | `['arg3', 'arg4']`               | exclude no args |\n\n#### Eviction Config\n| arg               | description                                                                                            | example value | default behavior |\n| --                | --                                                                                                     | --            | -- |\n| `ttl`             | [`Timelength`](https://github.com/sslivkoff/tooltime#timelength-representations) of time-to-live maximum age for entries in cache | `'1000s'`     | no max age |\n| `max_size`        | `int` of max size of cache size                                                                        | `1000`        | no max size |\n| `max_size_policy` | `str` name of eviction policy to use when `max_size` is exceeded, one of `'lru'`, `'fifo'`, or `'lfu'` | `'fifo'`      | `'lru'' |\n\n#### Statistic Tracking Config\n| arg | description | example value | default behavior |\n| --                | --          | --           | -- |\n| `track_basic_stats` | `bool` of whether to track basic usage stats | `False` | `False` |\n| `track_detailed_stats` | `bool` of whether to track creations and accesses | `False` | `False` |\n| `track_creation_times` | `bool` of whether to track creation times | `False` | track only if `ttl` is not `None` or `max_size_policy == 'fifo'` |\n| `track_access_times` | `bool` of whether to track access times | `False` | track only if `max_size_policy == 'lru'` |\n| `track_access_counts` | `bool` of whether to track access counts | `False` |  track only if `max_size_policy == 'lfu'` |\n\n#### `DiskCache`-specific Config\n| arg | description | example value | default behavior |\n| --            | --                                                                                                       | --                     | --                |\n| `cache_dir`   | `str` of directory path to store cache data                                                              | `'/path/to/cache_dir'` | create a `tmpdir` |\n| `file_format` | `str` of file format to use for cache data, either `'pickle'` or `'json'`                                | `'json'`               | `'pickle'`        |\n| `f_disk_save` | custom function for saving data to disk, function should take `entry_path` and `entry_data` as arguments | `f_save` | save as pickle  |\n| `f_disk_load` | custom function for load data from disk, function should take `entry_path` as an argument                | `f_load` | load as pickle |\n\n\n### Cache Decorators\n\nWhen using `toolcache.cache()` to decorate a function, one should consider 1) how function inputs will be hashed, 2) what attributes will be added to the function, and 3) what arguments might be added to the function.\n\n#### Hashing Function Inputs\n\nTo save a function input-output pair within a cache, a unique hash must be taken of the inputs.\n\nUnder the default hash configuration, each input arg should either be json-serializable or be a hashable object (i.e. it implements a `__hash__()` method). By default `toolcache` uses [`orjson`](https://github.com/ijl/orjson) to create these hashes quickly.\n\nIf function inputs do not satisfy these criteria, one or more of the cache config parameters should be used:\n| parameter           | description                                                                                  | example |\n| --                  | --                                                                                           | -- |\n| `f_hash`            | provide a custom hash function that takes the same args and kwargs as the decorated function | `@toolcache.cache(..., f_hash=f_custom_hash)` |\n| `hash_include_args` | specify `list` of arg names that should be used to compute hash                              | `@toolcache.cache(..., hash_include_args=['arg1', 'arg2'])` |\n| `hash_exclude_args` | specify `list` of arg names that should not be used to compute hash                          | `@toolcache.cache(..., hash_exclude_args=['arg3', 'arg4'])` |\n\n`toolcache.cache()` also works on functions that have `*args` or `**kwargs` for inputs\n\n#### Decorated Function Args\nEvery time the decorated function is called, it can use the following keyword args to control cache behavior.\n| kwarg           | description                                                           | default | example |\n| --              | --                                                                    | --      | -- |\n| `cache_save`    | `bool` of whether to save output to cache                             | `True`  | `f(..., cache_save=False)` will not save output to cache |\n| `cache_load`    | `bool` of whether to attempt to load entry from cache                 | `True`  | `f(..., cache_load=False)` will not attempt to load entry from cache |\n| `cache_verbose` | `bool` of whether to print info about loading from or saving to cache | `True`  | `f(..., cache_load=False)` will not attempt to load entry from cache |\n\nYou can avoid adding these args to the decorated function by using `@toolcache.cache(..., add_cache_args=False)`.\n\n#### Decorated Function Attributes\n\nThe original decorated function can be acessed as `f.__wrapped__`.\n\nThe cache instance associated with a decorated function `f()` can be accessed using `f.cache`.\n\n### Cache Methods\n\nThese methods are available on every cache instance:\n\n| method                 | description |\n| --                     | -- |\n| `compute_entry_hash()` | compute hash of entry |\n| `save_entry()`         | save entry data to cache |\n| `exists_in_cache()`    | return `bool` of whether entry exists in cache |\n| `load_entry()`         | load entry data from cache |\n| `get_cache_size()`     | return `int` number of items in cache |\n| `delete_entry()`       | remove entry from cache |\n| `delete_all_entries()` | delete all entries from cache |\n\n\n## Frequently Asked Questions\n\n#### How is the performance? What is the overhead for using a cache decorator?\n\nTo maximize cache performance, one can disable input name normalization (`normalize_hash_inputs=False`), statistic tracking (`track_basic_stats=False` and `track_detailed_stats=False`), and thread safety (`safety=None`).\n\nOn a somewhat modern machine with the above settings, the `toolcache.cache()` decorator adds about 3 μs to each function call, whereas running a simple function with no cache decorator takes about 50 ns per function call. Using a disk cache instead of a memory cache adds about 25 μs per function call. To truly know whether `toolcache` is fast enough for your application you may need to run your own benchmarks.\n\n#### How does `toolcache` relate to other similar projects?\n\nA large motivation for developing `toolcache` was being able to manage memory-based and disk-based caches with a unified interface and feature set. `toolcache` is currently the only python package to offer this functionality.\n\nThere exist many other python packages for caching and memoization. [`cacheout`](https://github.com/dgilland/cacheout) and [`python-memoization`](https://github.com/lonelyenvoy/python-memoization) both provide in-memory caches with many features. Compared to `toolcache` these libraries provide a wider variety of cache eviction policies and other interesting features. [`python-diskcache`](https://github.com/grantjenks/python-diskcache/) provides a feature-rich disk-based cache with Django integration and extensive benchmark comparisons to other solutions.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "toolcache",
    "package_url": "https://pypi.org/project/toolcache/",
    "platform": null,
    "project_url": "https://pypi.org/project/toolcache/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/toolcache/0.5.0/",
    "requires_dist": [
      "tooltime",
      "typing_extensions"
    ],
    "requires_python": ">=3.7",
    "summary": "toolcache makes it easy to create and configure caches in memory or on disk",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14281375,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fe9944a210f204c1c92d4a33e58daafd1beea07093297696c04855616a8b444",
          "md5": "4745187cfec4fd233ff1887fb22e411b",
          "sha256": "5be086f9f7ad877631e2fdd72b4d192bcbf242e903d0e527e49e610941fea128"
        },
        "downloads": -1,
        "filename": "toolcache-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4745187cfec4fd233ff1887fb22e411b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23714,
        "upload_time": "2021-02-13T03:28:15",
        "upload_time_iso_8601": "2021-02-13T03:28:15.034975Z",
        "url": "https://files.pythonhosted.org/packages/3f/e9/944a210f204c1c92d4a33e58daafd1beea07093297696c04855616a8b444/toolcache-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdea39068b884a513ce25c48b969ce1fef885e940e16e645f698ad25900a28b1",
          "md5": "c4630740be874bb8e4dc596936272fbb",
          "sha256": "35272e925e3502f92053b43be10e7bf8b18b1c1aed5fdea7533801bd054d68b9"
        },
        "downloads": -1,
        "filename": "toolcache-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c4630740be874bb8e4dc596936272fbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17955,
        "upload_time": "2021-02-13T03:28:16",
        "upload_time_iso_8601": "2021-02-13T03:28:16.279263Z",
        "url": "https://files.pythonhosted.org/packages/bd/ea/39068b884a513ce25c48b969ce1fef885e940e16e645f698ad25900a28b1/toolcache-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73bed3d6ade346f55fbad9e5a1d5c1a2e571abd76b8e95139a9dda365e4baf64",
          "md5": "ac6c60aec6e7b654f9dbda8b209d1b73",
          "sha256": "db83165eddbc8d1b7c6d037e8015719514fe3ae0852b1e2b56a18f3f781ad322"
        },
        "downloads": -1,
        "filename": "toolcache-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac6c60aec6e7b654f9dbda8b209d1b73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24039,
        "upload_time": "2021-02-13T05:26:16",
        "upload_time_iso_8601": "2021-02-13T05:26:16.133324Z",
        "url": "https://files.pythonhosted.org/packages/73/be/d3d6ade346f55fbad9e5a1d5c1a2e571abd76b8e95139a9dda365e4baf64/toolcache-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "546cc60fe2380dbd28e949d09db99204fd988b4539e53d54e208bf4e826bf71d",
          "md5": "d200f6056d078ad278cfeb93f2f1da0a",
          "sha256": "b58b019f242a9b0d8f95ece7972764a8d4701ebc4fde2e247db2fb2208896db1"
        },
        "downloads": -1,
        "filename": "toolcache-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d200f6056d078ad278cfeb93f2f1da0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18774,
        "upload_time": "2021-02-13T05:26:17",
        "upload_time_iso_8601": "2021-02-13T05:26:17.584127Z",
        "url": "https://files.pythonhosted.org/packages/54/6c/c60fe2380dbd28e949d09db99204fd988b4539e53d54e208bf4e826bf71d/toolcache-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d06dc3cd7351942933c7e14dc6f2d6d7efb90b8fd46b219f34c95aa1b1cd6c20",
          "md5": "dc5d38a4a3261cc9e9e46be5799256cb",
          "sha256": "180f3fa1cb1fb0398e31956b464491a6b120cb2805ddd996537eb34de04a2544"
        },
        "downloads": -1,
        "filename": "toolcache-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc5d38a4a3261cc9e9e46be5799256cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24036,
        "upload_time": "2021-02-13T05:33:17",
        "upload_time_iso_8601": "2021-02-13T05:33:17.731617Z",
        "url": "https://files.pythonhosted.org/packages/d0/6d/c3cd7351942933c7e14dc6f2d6d7efb90b8fd46b219f34c95aa1b1cd6c20/toolcache-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17702982ac088cb4a1c80080179200885c52afbdbadf66f64bd6038ccaa3a2ef",
          "md5": "ed9b7772a74fbb6408392428e467c82c",
          "sha256": "bab040e39553983e2a4d4ea1153b268b36fd41b69702aa9467e32546e8f94b34"
        },
        "downloads": -1,
        "filename": "toolcache-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ed9b7772a74fbb6408392428e467c82c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18762,
        "upload_time": "2021-02-13T05:33:19",
        "upload_time_iso_8601": "2021-02-13T05:33:19.329567Z",
        "url": "https://files.pythonhosted.org/packages/17/70/2982ac088cb4a1c80080179200885c52afbdbadf66f64bd6038ccaa3a2ef/toolcache-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb639d6f604d0d6be199fe54c45367dff90ab0c64d5b1e0f2726d003c8f34e80",
          "md5": "6e85ca24fe9a0fdb47ed9d9017d0b45d",
          "sha256": "b2f2599f5facc0959574f7329f500bd9328bda8a740c2e9b5eab823ed7b16c9a"
        },
        "downloads": -1,
        "filename": "toolcache-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6e85ca24fe9a0fdb47ed9d9017d0b45d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28329,
        "upload_time": "2022-02-06T01:31:52",
        "upload_time_iso_8601": "2022-02-06T01:31:52.195343Z",
        "url": "https://files.pythonhosted.org/packages/cb/63/9d6f604d0d6be199fe54c45367dff90ab0c64d5b1e0f2726d003c8f34e80/toolcache-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95a53028399914f93efec8112341ef2b547a9719e27dcb556a6e41296e54c5fd",
          "md5": "3297ed436d1b7a2ae94760120a84e47d",
          "sha256": "e7e4d1d04e7d8de66a58b7a8d6933d50d9047e2f372f2aa41893474f06309c28"
        },
        "downloads": -1,
        "filename": "toolcache-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3297ed436d1b7a2ae94760120a84e47d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28447,
        "upload_time": "2022-02-11T21:26:24",
        "upload_time_iso_8601": "2022-02-11T21:26:24.659220Z",
        "url": "https://files.pythonhosted.org/packages/95/a5/3028399914f93efec8112341ef2b547a9719e27dcb556a6e41296e54c5fd/toolcache-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18cbf69ff64d36eae3b2f1d42e03dfd5a14af71757883aaede311d4e8a6d3bef",
          "md5": "20d55cc8c842aeea13b925bbcb98f24c",
          "sha256": "d0567898925ddf95777f0c50a09f83021b25422dfa8c3a545f7d7b7a60866907"
        },
        "downloads": -1,
        "filename": "toolcache-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "20d55cc8c842aeea13b925bbcb98f24c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28809,
        "upload_time": "2022-05-08T23:43:05",
        "upload_time_iso_8601": "2022-05-08T23:43:05.486237Z",
        "url": "https://files.pythonhosted.org/packages/18/cb/f69ff64d36eae3b2f1d42e03dfd5a14af71757883aaede311d4e8a6d3bef/toolcache-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75a571f4643892201468c94ab8b10132fb1fe39b575b1b169b59632f1c993828",
          "md5": "95ecf830db271cfe9079cfdf395ea652",
          "sha256": "2698577ab2d0aed2d774f4412976a854ebc8ccdc37a2881415b846ae4338e15d"
        },
        "downloads": -1,
        "filename": "toolcache-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "95ecf830db271cfe9079cfdf395ea652",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28954,
        "upload_time": "2022-06-12T18:16:37",
        "upload_time_iso_8601": "2022-06-12T18:16:37.192698Z",
        "url": "https://files.pythonhosted.org/packages/75/a5/71f4643892201468c94ab8b10132fb1fe39b575b1b169b59632f1c993828/toolcache-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "b9b38b098329727dc9b2999fe01262a41ea73e80a9d0f39802a8c105f7394ff1",
          "md5": "9e332a1fa46b33751e22e4a6f7499d97",
          "sha256": "442d0393d9025f2c7f3109267fb91304ef5ab0ca0e051d2a4a383e36b6b2e06f"
        },
        "downloads": -1,
        "filename": "toolcache-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e332a1fa46b33751e22e4a6f7499d97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25185,
        "upload_time": "2022-06-29T06:52:26",
        "upload_time_iso_8601": "2022-06-29T06:52:26.857318Z",
        "url": "https://files.pythonhosted.org/packages/b9/b3/8b098329727dc9b2999fe01262a41ea73e80a9d0f39802a8c105f7394ff1/toolcache-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "d3cd822a41db54c2bfec19df594250c0d267ba6d25d7a27c5e8f96109b752bbe",
          "md5": "f991c5e138d7bbd8a1489571df585c6a",
          "sha256": "47f99f80294122a738e63df4e770a1323bbfa8e9530872affff4335ccaa71904"
        },
        "downloads": -1,
        "filename": "toolcache-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f991c5e138d7bbd8a1489571df585c6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27218,
        "upload_time": "2022-06-29T06:52:29",
        "upload_time_iso_8601": "2022-06-29T06:52:29.854446Z",
        "url": "https://files.pythonhosted.org/packages/d3/cd/822a41db54c2bfec19df594250c0d267ba6d25d7a27c5e8f96109b752bbe/toolcache-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "b9b38b098329727dc9b2999fe01262a41ea73e80a9d0f39802a8c105f7394ff1",
        "md5": "9e332a1fa46b33751e22e4a6f7499d97",
        "sha256": "442d0393d9025f2c7f3109267fb91304ef5ab0ca0e051d2a4a383e36b6b2e06f"
      },
      "downloads": -1,
      "filename": "toolcache-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9e332a1fa46b33751e22e4a6f7499d97",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 25185,
      "upload_time": "2022-06-29T06:52:26",
      "upload_time_iso_8601": "2022-06-29T06:52:26.857318Z",
      "url": "https://files.pythonhosted.org/packages/b9/b3/8b098329727dc9b2999fe01262a41ea73e80a9d0f39802a8c105f7394ff1/toolcache-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "d3cd822a41db54c2bfec19df594250c0d267ba6d25d7a27c5e8f96109b752bbe",
        "md5": "f991c5e138d7bbd8a1489571df585c6a",
        "sha256": "47f99f80294122a738e63df4e770a1323bbfa8e9530872affff4335ccaa71904"
      },
      "downloads": -1,
      "filename": "toolcache-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f991c5e138d7bbd8a1489571df585c6a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 27218,
      "upload_time": "2022-06-29T06:52:29",
      "upload_time_iso_8601": "2022-06-29T06:52:29.854446Z",
      "url": "https://files.pythonhosted.org/packages/d3/cd/822a41db54c2bfec19df594250c0d267ba6d25d7a27c5e8f96109b752bbe/toolcache-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}