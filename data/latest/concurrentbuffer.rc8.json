{
  "info": {
    "author": "",
    "author_email": "Mart van Rijthoven <mart.vanrijthoven@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Concurrent Buffer\n\n\n[![PyPI version](https://badge.fury.io/py/concurrentbuffer.svg)](https://badge.fury.io/py/concurrentbuffer)\n[![tests](https://github.com/martvanrijthoven/concurrent-buffer/actions/workflows/tests.yml/badge.svg)](https://github.com/martvanrijthoven/concurrent-buffer/actions/workflows/tests.yml)\n[![Coverage Status](https://coveralls.io/repos/github/martvanrijthoven/concurrent-buffer/badge.svg?branch=main)](https://coveralls.io/github/martvanrijthoven/concurrent-buffer?branch=main)\n[![codeinspector](https://api.codiga.io/project/34463/score/svg)](https://app.codiga.io/public/project/34463/concurrent-buffer/dashboard)\n\n\n\nThe available number of central processing units (CPUs) in home and server computers can help to parallelize and speed up specific tasks. The python programming language comes with a [multiprocessing package](https://docs.python.org/3/library/multiprocessing.html) that allows running tasks on multiple CPUs. In addition, python 3.8 introduced [shared memory](https://docs.python.org/3/library/multiprocessing.shared_memory.html), allowing for sharing data between processes. A potential use case for this shared memory is to compensate for possible speed variance when transferring data via a buffer.\n\nThis package aims to be a general solution for a concurrent buffer, .i.e., a buffer filled with data using parallel running 'producer' processes.\nA commander process controls the produced data via user-defined dictionary messages. At the same time, the main process can consume the data using a BufferIterator in a fast and user-friendly way.\n\nPlease see below the [installation instructions](#installation-and-dependencies) and an [example](#example-usage) on how to use this package as well as how to [create your own commander](#creating-a-commander) and how to [create your own producer](#creating-a-producer). For more information please see the [docs](https://martvanrijthoven.github.io/concurrent-buffer/). Feel free to open an issue if you have any questions or remarks.\n\n## Installation and Dependencies\n\nThis package requires [python>=3.8](https://www.python.org/downloads/) and [numpy](https://github.com/numpy/numpy) \n\nA binary installer for the latest version is available at the [Python Package Index (PyPI)](https://pypi.org/project/concurrentbuffer/)\n```bash\npip install concurrentbuffer\n```\n\n## Example usage:\n\nImportant note: \n - 'spawn' multiprocessing context will not work in a jupyter notebook/lab, use fork instead when working in a jupyter notebook / jupyter lab\n\n\n###### Easy Usage:\n\n```python     \n\n    from concurrentbuffer.iterator import buffer_iterator_factory\n\n    # the number of cpus/producers\n    cpus = 8\n\n    # the buffershape in the shared memory\n    buffer_shapes = ((64, 256, 256, 3),)\n    \n    # the context of multiprocess (spawn or fork)\n    context = 'spawn'\n\n    # if the messages from the commander and the produced data are first in first out\n    deterministic = True\n\n    # You will have to create your own Commander class, please see instructions below\n    # a user defined commander, should subclass the Commander class\n    commander = IndexCommander(max_index=10)\n\n    # You will have to create your own Producer class, please see instructions below\n    # a user defined producer, should subclass the Producer class\n    producer = DataProducer(data_shapes=buffer_shapes)\n\n    # create a buffer iterator\n    buffer_iterator = buffer_iterator_factory(\n        cpus=cpus,\n        buffer_shapes=buffer_shapes,\n        commander=commander,\n        producer=producer,\n        context=context,\n        deterministic=deterministic,\n    )\n\n    # loop through the buffer that is filled concurrently\n    for index in range(10):\n        data = next(buffer_iterator)\n        \n    # always stop the iterator to close all processes and free the shared memory\n    buffer_iterator.stop()\n        \n```\n\n###### Advanced Usage:\n\n```python\n\nfrom multiprocessing.context import ForkContext, SpawnContext\n\nfrom concurrentbuffer.factory import BufferFactory\nfrom concurrentbuffer.info import BufferInfo\nfrom concurrentbuffer.iterator import BufferIterator\nfrom concurrentbuffer.state import BufferState\nfrom concurrentbuffer.system import BufferSystem\n\n\n# the number of cpus/producers\ncpus = 8\n\n# the buffershape in the shared memory\nbuffer_shapes = ((64, 256, 256, 3),)\n\n# the context of multiprocess (spawn or fork)\ncontext = SpawnContext()\n\n# if the messages from the commander and the produced data are first in first out\ndeterministic = True\n\n# the number of buffers each with shape of buffer_shape\ncount = cpus * len(BufferState)\n\n# buffer system contains the information of the system\nbuffer_system = BufferSystem(\n    cpus=cpus, context=context, deterministic=deterministic\n)\n\n# buffer info contains the information of the buffers \nbuffer_info = BufferInfo(count=count, shapes=buffer_shapes)\n\n# You will have to create your own Commander class, please see instructions below\n# a user defined commander, should subclass the Commander class\ncommander = IndexCommander(max_index=10)\n\n# You will have to create your own Producer class, please see instructions below\n# a user defined producer, should subclass the Producer class\nproducer = DataProducer(data_shapes=buffer_shapes)\n\n# a factor class that builds the buffer components\nbuffer_factory = BufferFactory(\n    buffer_system=buffer_system,\n    buffer_info=buffer_info,\n    commander=commander,\n    producer=producer,\n)\n\n# a buffer iterator created with the buffer factory that allows iterating throught the 'concurrent' buffer.\nwith BufferIterator(buffer_factory=buffer_factory) as data_buffer_iterator:\n    for index in range(10):\n        data = next(data_buffer_iterator)\n\n```\n\n\n#### Creating a Commander\n```\nfrom concurrentbuffer.commander import Commander\nclass IndexCommander(Commander):\n    def __init__(self, max_index: int):\n        self._max_index = max_index\n        self._index = 0\n\n    def create_message(self) -> dict:\n        message = {\"index\": self._index}\n        self._index = (self._index + 1) % self._max_index\n        return message\n```\n\n\n#### Creating a Producer\n```\nimport numpy as np\nfrom concurrentbuffer.producer import Producer\n\nclass DataProducer(Producer):\n    def __init__(self, data_shapes: tuple):\n        self._data_shapes = data_shapes\n\n    def create_data(self, message: dict) -> np.ndarray:\n        index = message['index']\n        return self._time_consuming_processing(index)\n\n    def _time_consuming_processing(self, index) -> np.ndarray:\n        ...\n        #TODO use index and self._data_shape to create and process a numpy array\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) 2021 martvanrijthoven  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "concurrentbuffer",
    "package_url": "https://pypi.org/project/concurrentbuffer/",
    "platform": null,
    "project_url": "https://pypi.org/project/concurrentbuffer/",
    "project_urls": {
      "Homepage": "https://github.com/martvanrijthoven/concurrentbuffer/"
    },
    "release_url": "https://pypi.org/project/concurrentbuffer/0.0.8/",
    "requires_dist": [
      "numpy (>=1.18.1)"
    ],
    "requires_python": ">=3.8",
    "summary": "",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16305205,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "049259b4122482ec64dfa25b67ac4e825367c6c2731622b9e329485292ca2c23",
          "md5": "5a769e4b33fa273452f0690dc65e4e43",
          "sha256": "fa72654f14f738f17f326acb22f4c56e4e4157459141c2832ca6600ecf85f954"
        },
        "downloads": -1,
        "filename": "concurrentbuffer-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a769e4b33fa273452f0690dc65e4e43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9983,
        "upload_time": "2021-08-11T18:58:23",
        "upload_time_iso_8601": "2021-08-11T18:58:23.719494Z",
        "url": "https://files.pythonhosted.org/packages/04/92/59b4122482ec64dfa25b67ac4e825367c6c2731622b9e329485292ca2c23/concurrentbuffer-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "854b2eddee8af3671e0db81c6aa8545e804011a056624c001fb7c5345a7ac8a9",
          "md5": "2a3d61fbf04961dbacb774187bf46e57",
          "sha256": "440ba187d42830c171398787e79693588d09afe68c0bd357389ffff68440b9ce"
        },
        "downloads": -1,
        "filename": "concurrentbuffer-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2a3d61fbf04961dbacb774187bf46e57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7315,
        "upload_time": "2021-08-11T18:58:24",
        "upload_time_iso_8601": "2021-08-11T18:58:24.792814Z",
        "url": "https://files.pythonhosted.org/packages/85/4b/2eddee8af3671e0db81c6aa8545e804011a056624c001fb7c5345a7ac8a9/concurrentbuffer-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4687f485af6dd15a63306a0a872ab50145808af449340d3c580983bab9a53e4",
          "md5": "5d0e337b9a22648a1155879414b31b3b",
          "sha256": "1a27a37c9e14788168b321e72e2fc61d91954801100195a191f660bcf314bd7e"
        },
        "downloads": -1,
        "filename": "concurrentbuffer-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5d0e337b9a22648a1155879414b31b3b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9999,
        "upload_time": "2021-08-11T19:06:44",
        "upload_time_iso_8601": "2021-08-11T19:06:44.902769Z",
        "url": "https://files.pythonhosted.org/packages/a4/68/7f485af6dd15a63306a0a872ab50145808af449340d3c580983bab9a53e4/concurrentbuffer-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4335a698ac4caa89be1fb00008ee536fec895e12621496acec5f0fb1e3236c15",
          "md5": "c6050c6898e86995b5e5968301c5822d",
          "sha256": "9074fd6a3342e72b6359c6b9c0a75de21bd8ed2d931d8ab6e8239f3bd3614991"
        },
        "downloads": -1,
        "filename": "concurrentbuffer-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c6050c6898e86995b5e5968301c5822d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7353,
        "upload_time": "2021-08-11T19:06:46",
        "upload_time_iso_8601": "2021-08-11T19:06:46.038789Z",
        "url": "https://files.pythonhosted.org/packages/43/35/a698ac4caa89be1fb00008ee536fec895e12621496acec5f0fb1e3236c15/concurrentbuffer-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49a57358b39219291f410e3d672c0c4e8a5843925fe7090142d8e0fb9b5bd84b",
          "md5": "7fc8195c29ee844ea1ab466e2a1f7cb5",
          "sha256": "0e97ff4870d202f5160dd07d8f642f0d8cddb5c0fbdfdc2aa422106c2b884ef3"
        },
        "downloads": -1,
        "filename": "concurrentbuffer-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7fc8195c29ee844ea1ab466e2a1f7cb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8299,
        "upload_time": "2021-09-19T09:49:12",
        "upload_time_iso_8601": "2021-09-19T09:49:12.304047Z",
        "url": "https://files.pythonhosted.org/packages/49/a5/7358b39219291f410e3d672c0c4e8a5843925fe7090142d8e0fb9b5bd84b/concurrentbuffer-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbd7a56c69ac2a298b16e9d3ab243ed858f5c709ad52797ac2c0730961b5f07f",
          "md5": "ade7a9b8bae031942dd68b702b53376f",
          "sha256": "dd69e3dd511352e2a09685c8c5be3eabd6104008c8e0046f15f2bd0049dd0d61"
        },
        "downloads": -1,
        "filename": "concurrentbuffer-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ade7a9b8bae031942dd68b702b53376f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8290,
        "upload_time": "2021-09-23T06:35:42",
        "upload_time_iso_8601": "2021-09-23T06:35:42.426895Z",
        "url": "https://files.pythonhosted.org/packages/db/d7/a56c69ac2a298b16e9d3ab243ed858f5c709ad52797ac2c0730961b5f07f/concurrentbuffer-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "beb1ffc523bc27bd573e278f2d6e5172adeb0decc6fac82989e331ecd4b4bd79",
          "md5": "66f7a8418125127b7128f5b725f6d816",
          "sha256": "b4e5ead7f66b283ed964ad8a66ac17ce803a27b2ad4a3fd3817b055f1f2ead52"
        },
        "downloads": -1,
        "filename": "concurrentbuffer-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "66f7a8418125127b7128f5b725f6d816",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8380,
        "upload_time": "2021-11-24T06:13:42",
        "upload_time_iso_8601": "2021-11-24T06:13:42.479991Z",
        "url": "https://files.pythonhosted.org/packages/be/b1/ffc523bc27bd573e278f2d6e5172adeb0decc6fac82989e331ecd4b4bd79/concurrentbuffer-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d13f4b86973b0a5b3d03f69442fc3ab58e930507078d288e3476cbe6680c21c",
          "md5": "c32804afbade3d69d09616277f3b69f5",
          "sha256": "62bad34c2b1555ac9b75062c08c610e2bd080e50510e8ba02228a448e5423d2c"
        },
        "downloads": -1,
        "filename": "concurrentbuffer-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c32804afbade3d69d09616277f3b69f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8483,
        "upload_time": "2022-03-04T10:25:43",
        "upload_time_iso_8601": "2022-03-04T10:25:43.189909Z",
        "url": "https://files.pythonhosted.org/packages/5d/13/f4b86973b0a5b3d03f69442fc3ab58e930507078d288e3476cbe6680c21c/concurrentbuffer-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a0b31aff3564c91f0ad4ae27749743d87f64a99c6f907497d034258060d5a1b",
          "md5": "05b0a9851fc05bf6e0b310f7e74c00d9",
          "sha256": "32c5fec5898363dda14a74ebef1651a36d8e4eb0f15f6ddc65032e24d74683a7"
        },
        "downloads": -1,
        "filename": "concurrentbuffer-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "05b0a9851fc05bf6e0b310f7e74c00d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8486,
        "upload_time": "2022-03-09T11:24:42",
        "upload_time_iso_8601": "2022-03-09T11:24:42.363539Z",
        "url": "https://files.pythonhosted.org/packages/5a/0b/31aff3564c91f0ad4ae27749743d87f64a99c6f907497d034258060d5a1b/concurrentbuffer-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ff89367ceee6d94c038f1ad7c8a45f88e2804b01ab2af6821bd12bd0a094d8e",
          "md5": "0d19be586a43d1703cc936a70b35e5a2",
          "sha256": "3c15065e177135697cee61afa2dbcc705c0bf16ad68f4c41e942ac78b1e31a32"
        },
        "downloads": -1,
        "filename": "concurrentbuffer-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d19be586a43d1703cc936a70b35e5a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 14313,
        "upload_time": "2023-01-04T18:27:06",
        "upload_time_iso_8601": "2023-01-04T18:27:06.395156Z",
        "url": "https://files.pythonhosted.org/packages/1f/f8/9367ceee6d94c038f1ad7c8a45f88e2804b01ab2af6821bd12bd0a094d8e/concurrentbuffer-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf813817a1c260d93ba9765e346d3c828172a8de1664c12bc6554746a99bc9e3",
          "md5": "6a52d242f95213849cace3cb0611f798",
          "sha256": "1e036a1ba3a01f4cfc842e4a06bc4c8ca3d392b70e064bfced82de95b2f3fe8c"
        },
        "downloads": -1,
        "filename": "concurrentbuffer-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "6a52d242f95213849cace3cb0611f798",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12295,
        "upload_time": "2023-01-04T18:27:08",
        "upload_time_iso_8601": "2023-01-04T18:27:08.139466Z",
        "url": "https://files.pythonhosted.org/packages/cf/81/3817a1c260d93ba9765e346d3c828172a8de1664c12bc6554746a99bc9e3/concurrentbuffer-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ff89367ceee6d94c038f1ad7c8a45f88e2804b01ab2af6821bd12bd0a094d8e",
        "md5": "0d19be586a43d1703cc936a70b35e5a2",
        "sha256": "3c15065e177135697cee61afa2dbcc705c0bf16ad68f4c41e942ac78b1e31a32"
      },
      "downloads": -1,
      "filename": "concurrentbuffer-0.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0d19be586a43d1703cc936a70b35e5a2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 14313,
      "upload_time": "2023-01-04T18:27:06",
      "upload_time_iso_8601": "2023-01-04T18:27:06.395156Z",
      "url": "https://files.pythonhosted.org/packages/1f/f8/9367ceee6d94c038f1ad7c8a45f88e2804b01ab2af6821bd12bd0a094d8e/concurrentbuffer-0.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf813817a1c260d93ba9765e346d3c828172a8de1664c12bc6554746a99bc9e3",
        "md5": "6a52d242f95213849cace3cb0611f798",
        "sha256": "1e036a1ba3a01f4cfc842e4a06bc4c8ca3d392b70e064bfced82de95b2f3fe8c"
      },
      "downloads": -1,
      "filename": "concurrentbuffer-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "6a52d242f95213849cace3cb0611f798",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 12295,
      "upload_time": "2023-01-04T18:27:08",
      "upload_time_iso_8601": "2023-01-04T18:27:08.139466Z",
      "url": "https://files.pythonhosted.org/packages/cf/81/3817a1c260d93ba9765e346d3c828172a8de1664c12bc6554746a99bc9e3/concurrentbuffer-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}