{
  "info": {
    "author": "Fabio Sangiovanni",
    "author_email": "sjh+github@sanjioh.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: tox",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Testing"
    ],
    "description": "# tox-interpreters\n\n[![GitHub Actions](https://github.com/sanjioh/tox-interpreters/workflows/CI/badge.svg)](https://github.com/sanjioh/tox-interpreters/actions)\n[![codecov](https://codecov.io/gh/sanjioh/tox-interpreters/branch/master/graph/badge.svg)](https://codecov.io/gh/sanjioh/tox-interpreters)\n[![version](https://img.shields.io/pypi/v/tox-interpreters)](https://pypi.org/project/tox-interpreters)\n[![python](https://img.shields.io/pypi/pyversions/tox-interpreters)](https://pypi.org/project/tox-interpreters)\n[![license](https://img.shields.io/pypi/l/tox-interpreters)](https://pypi.org/project/tox-interpreters)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n## What?\n\n`tox-interpreters` enables overriding the logic `tox` follows in\nresolving base Python interpreters when it comes to virtual environment\ncreation.\nIt does so by allowing the user to bind test env names to the\ninterpreters of their choice, by means of regular expressions.\n\n## Why?\n\nI usually run `tox` from a permanent and isolated virtual environment,\nand I keep Python interpreters in multiple versions installed at the\nsystem level for `tox` itself to use whenever it needs to create a test\nenvironment.\n\nIt turns out that if the required Python version for a new environment\nmatches the one `tox` is running from, `tox` will use its *own* Python\ninterpreter as base to perform the creation, despite its belonging to a\nvirtual environment - the system level interpreter will *not* be used.\n\nThe standard way of fixing this would be by setting `basepython` to the\nabsolute path of the interpreter to be used for a specific environment.\nUnfortunately this becomes impractical as soon as a generative envlist\nwith factors is involved.\n\nOf course this is just one of the many possible use cases. Generally\nspeaking, `tox-interpreters` aims at providing full consistency and\nflexibility in virtual environment creation across Python versions, by\nallowing the user to choose the base interpreter to be used depending on\nthe name of the test environment.\n\n## Installation\n\n`tox-interpreters` has been developed as a `tox` plugin, therefore it\nhas to be installed along with `tox` itself.\n\n```shell\n$ pip install tox-interpreters\n```\n\n## Usage\n\nTo use `tox-interpreters`, add the setting `interpreter` to the\n`[testenv]` section of your `tox` configuration file (typically\n`tox.ini`), as follows:\n\n```ini\n[testenv]\ninterpreter =\n    py37.*=/path/to/python3.7\n    py38.*=/path/to/python3.8\n```\n\nThe `interpreter` setting accepts a list of `<regex>=<interpreter>`\nlines as value. Each line binds a regular expression to an interpreter.\n\nWhenever a new test environment needs to be created, the selection of\nthe base Python interpreter is performed by checking the name of the\nenvironment against all the regular expressions, in order. The\ninterpreter bound to the first matching regex will be used.\n\nIn case of no match, the selection logic falls back to the standard\nbehaviour of `tox` - that is, everything works just as if\n`tox-interpreters` wasn't installed at all.\n\nInterpreters can be specified by their absolute path or just by their\nfile name. In the latter case, the path to the file needs to be in the\n`PATH` environment variable for virtual environment creation to succeed.\n\n```ini\n[testenv]\ninterpreter =\n    py37.*=/path/to/python3.7\n    py38.*=python3.8\n```\n\n## License\n\nSee: [LICENSE][1]\n\n[1]: https://github.com/sanjioh/tox-interpreters/blob/master/LICENSE\n\nMIT License\n\nCopyright (c) 2019 Fabio Sangiovanni\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sanjioh/tox-interpreters",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tox-interpreters",
    "package_url": "https://pypi.org/project/tox-interpreters/",
    "platform": "",
    "project_url": "https://pypi.org/project/tox-interpreters/",
    "project_urls": {
      "Homepage": "https://github.com/sanjioh/tox-interpreters"
    },
    "release_url": "https://pypi.org/project/tox-interpreters/0.1.0/",
    "requires_dist": [
      "tox (<4.0.0,>=3.8.0)"
    ],
    "requires_python": "",
    "summary": "Customize Python interpreters used to create tox testenvs",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6081245,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86d13d4403a160063c8eac792abb338f697d1dcd6fe3f9cdd4b9545089f7f2f0",
          "md5": "002abd1ba238350c028e6573e5d67998",
          "sha256": "2301ebf03a6d68a8bb9dce1b29eefc544607bc601b5d1e42534f4daf8fd4462a"
        },
        "downloads": -1,
        "filename": "tox_interpreters-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "002abd1ba238350c028e6573e5d67998",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5688,
        "upload_time": "2019-11-05T14:54:45",
        "upload_time_iso_8601": "2019-11-05T14:54:45.724195Z",
        "url": "https://files.pythonhosted.org/packages/86/d1/3d4403a160063c8eac792abb338f697d1dcd6fe3f9cdd4b9545089f7f2f0/tox_interpreters-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9004178715308489038e86abc32aefb3ee2cbaf33d69939b4a29aa3270e83c41",
          "md5": "10adfdc5047c5e6c8b13a87f1fa2ebc8",
          "sha256": "6033203ff4a7252ae9a7e60e018568d09f4c6db096af88b3f1607dc10366f7aa"
        },
        "downloads": -1,
        "filename": "tox-interpreters-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "10adfdc5047c5e6c8b13a87f1fa2ebc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7210,
        "upload_time": "2019-11-05T14:54:47",
        "upload_time_iso_8601": "2019-11-05T14:54:47.831498Z",
        "url": "https://files.pythonhosted.org/packages/90/04/178715308489038e86abc32aefb3ee2cbaf33d69939b4a29aa3270e83c41/tox-interpreters-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86d13d4403a160063c8eac792abb338f697d1dcd6fe3f9cdd4b9545089f7f2f0",
        "md5": "002abd1ba238350c028e6573e5d67998",
        "sha256": "2301ebf03a6d68a8bb9dce1b29eefc544607bc601b5d1e42534f4daf8fd4462a"
      },
      "downloads": -1,
      "filename": "tox_interpreters-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "002abd1ba238350c028e6573e5d67998",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5688,
      "upload_time": "2019-11-05T14:54:45",
      "upload_time_iso_8601": "2019-11-05T14:54:45.724195Z",
      "url": "https://files.pythonhosted.org/packages/86/d1/3d4403a160063c8eac792abb338f697d1dcd6fe3f9cdd4b9545089f7f2f0/tox_interpreters-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9004178715308489038e86abc32aefb3ee2cbaf33d69939b4a29aa3270e83c41",
        "md5": "10adfdc5047c5e6c8b13a87f1fa2ebc8",
        "sha256": "6033203ff4a7252ae9a7e60e018568d09f4c6db096af88b3f1607dc10366f7aa"
      },
      "downloads": -1,
      "filename": "tox-interpreters-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "10adfdc5047c5e6c8b13a87f1fa2ebc8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7210,
      "upload_time": "2019-11-05T14:54:47",
      "upload_time_iso_8601": "2019-11-05T14:54:47.831498Z",
      "url": "https://files.pythonhosted.org/packages/90/04/178715308489038e86abc32aefb3ee2cbaf33d69939b4a29aa3270e83c41/tox-interpreters-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}