{
  "info": {
    "author": "Erik Nyquist",
    "author_email": "eknyquist@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "snakeng\r\n-------\r\n\r\n``snakeng`` is an implementation of the back-end of the classic \"snake\" game. It provides\r\nan interface to inject directional inputs (up/down/right/left), and produces a data structure\r\nrepresenting the game state, for each frame of gameplay. This allows snake to be quickly\r\nimplemented and played on various platforms.\r\n\r\nFeatures:\r\n\r\n* Configurable game area width/height\r\n* Configurable wall behaviour (teleport/wrap or death)\r\n* Serializable game state object (if you want to e.g. save/load game states to .json files)\r\n* Configurable snake speed options (fixed speed, or automatically increase speed as snake grows)\r\n\r\nFor more information, see the `API documentation <https://eriknyquist.github.io/snakeng/snakeng.html>`_.\r\n\r\nInstall\r\n-------\r\n\r\nInstall via pip:\r\n\r\n::\r\n\r\n    pip install snakeng\r\n\r\nMinimal snake game implementation\r\n---------------------------------\r\n\r\nThis is the simplest possible implementation of snake, using ``snakeng``:\r\n\r\n.. code:: python\r\n\r\n    import sys\r\n    import time\r\n    import keyboard\r\n    from snakeng.snake import SnakeGame, SnakeDirection\r\n\r\n    last_direction = SnakeDirection.DOWN\r\n\r\n    # Callback function to save the last arrow keypress\r\n    def keypress_event(e):\r\n        global last_direction\r\n        if e.name == 'up':\r\n            last_direction = SnakeDirection.UP\r\n        elif e.name == 'down':\r\n            last_direction = SnakeDirection.DOWN\r\n        elif e.name == 'left':\r\n            last_direction = SnakeDirection.LEFT\r\n        elif e.name == 'right':\r\n            last_direction = SnakeDirection.RIGHT\r\n\r\n    # Register callback function\r\n    keyboard.on_press(keypress_event)\r\n\r\n    game = SnakeGame()\r\n\r\n    while True:\r\n        new_state = game.process(last_direction)  # Produce new frame\r\n        sys.stdout.write(\"\\033[2J\\n\")             # Clear terminal screen\r\n        sys.stdout.write(new_state.to_string())   # Print new game state\r\n        sys.stdout.flush()                        # Flush output\r\n        time.sleep(0.05)\r\n\r\nSample command-line (ASCII) implementation\r\n-------------------------------------------\r\n\r\nAdditionally, a sample terminal-based implementation of a snake game is provided,\r\nwhich can be accessed by running ``snakeng`` as a module:\r\n\r\n::\r\n\r\n    python -m snakeng\r\n\r\n.. image:: https://github.com/eriknyquist/snakeng/raw/master/images/terminal_example.gif\r\n\r\nThe terminal-based implementation accepts several arguments, detailed here:\r\n\r\n::\r\n\r\n\tusage: snakeng [-h] [-x WIDTH] [-y HEIGHT] [-s {slow,medium,fast,faster}]\r\n\t\t\t\t   [-o OUTPUT_FILE] [-i INPUT_FILE] [-f FPS]\r\n\r\n\tSimple terminal-based snake game showing how to use snakeng to implement a\r\n\tgame\r\n\r\n\toptions:\r\n\t  -h, --help            show this help message and exit\r\n\t  -x WIDTH, --width WIDTH\r\n\t\t\t\t\t\t\tGame area width in characters (default: 40)\r\n\t  -y HEIGHT, --height HEIGHT\r\n\t\t\t\t\t\t\tGame area height in characters (default: 30)\r\n\t  -s {slow,medium,fast,faster}, --fixed-speed {slow,medium,fast,faster}\r\n\t\t\t\t\t\t\tSets the snake speed for the whole game. If unset, the\r\n\t\t\t\t\t\t\tsnake speed will automatically increase as the snake\r\n\t\t\t\t\t\t\tsize increases. (default: None)\r\n\t  -o OUTPUT_FILE, --output-file OUTPUT_FILE\r\n\t\t\t\t\t\t\tIf set, the game state will be saved to the specified\r\n\t\t\t\t\t\t\tfilename (default: None)\r\n\t  -i INPUT_FILE, --input-file INPUT_FILE\r\n\t\t\t\t\t\t\tIf set, the game state will be loaded from the\r\n\t\t\t\t\t\t\tspecified filename (default: None)\r\n\t  -f FPS, --fps FPS     Framerate in frames per second (default: 24)\r\n\r\n\r\nNOTE: the sample implementation uses an ANSI escape sequence to clear the terminal screen,\r\nso it won't work in terminals that don't support ANSI escape sequences.\r\n\r\nContributions\r\n-------------\r\n\r\nContributions are welcome, please open a pull request at `<https://github.com/eriknyquist/snakeng>`_.\r\n\r\nIf you have any questions about / need help with contributions, please contact Erik at eknyquist@gmail.com.\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/eriknyquist/snakeng",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "snakeng",
    "package_url": "https://pypi.org/project/snakeng/",
    "platform": null,
    "project_url": "https://pypi.org/project/snakeng/",
    "project_urls": {
      "Contributions": "https://eriknyquist.github.io/snakeng/#contributions",
      "Documentation": "https://eriknyquist.github.io/snakeng",
      "Homepage": "http://github.com/eriknyquist/snakeng",
      "Issues": "https://github.com/eriknyquist/snakeng/issues"
    },
    "release_url": "https://pypi.org/project/snakeng/0.0.2/",
    "requires_dist": [
      "keyboard"
    ],
    "requires_python": ">=3.7",
    "summary": "Easy-to-use snake game engine. Quickly implement snake for anything!",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17473148,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "930f5e4a3902211b59ff7869d84dc460ad4c651c7b237e3a107fc3550e063ffa",
          "md5": "5c9c23965ee6dd88c3a0462c3c4b340d",
          "sha256": "415fbf86980af24d812840d34096fb7a42bd9ca567758d9709349baed58b88c9"
        },
        "downloads": -1,
        "filename": "snakeng-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c9c23965ee6dd88c3a0462c3c4b340d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10931,
        "upload_time": "2023-03-23T02:13:25",
        "upload_time_iso_8601": "2023-03-23T02:13:25.525626Z",
        "url": "https://files.pythonhosted.org/packages/93/0f/5e4a3902211b59ff7869d84dc460ad4c651c7b237e3a107fc3550e063ffa/snakeng-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1dd56c7dc8edcaf212adf28f0b27d1fa9e56402fe7839ead7dc6557fb0698739",
          "md5": "fa677488d06d65986faf0600e46c97f8",
          "sha256": "9feeee00617c7e18d56a4f106e12931973ee40835872749fb4cf6cc40d74d76d"
        },
        "downloads": -1,
        "filename": "snakeng-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa677488d06d65986faf0600e46c97f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11870,
        "upload_time": "2023-03-28T04:31:51",
        "upload_time_iso_8601": "2023-03-28T04:31:51.021936Z",
        "url": "https://files.pythonhosted.org/packages/1d/d5/6c7dc8edcaf212adf28f0b27d1fa9e56402fe7839ead7dc6557fb0698739/snakeng-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1dd56c7dc8edcaf212adf28f0b27d1fa9e56402fe7839ead7dc6557fb0698739",
        "md5": "fa677488d06d65986faf0600e46c97f8",
        "sha256": "9feeee00617c7e18d56a4f106e12931973ee40835872749fb4cf6cc40d74d76d"
      },
      "downloads": -1,
      "filename": "snakeng-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fa677488d06d65986faf0600e46c97f8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11870,
      "upload_time": "2023-03-28T04:31:51",
      "upload_time_iso_8601": "2023-03-28T04:31:51.021936Z",
      "url": "https://files.pythonhosted.org/packages/1d/d5/6c7dc8edcaf212adf28f0b27d1fa9e56402fe7839ead7dc6557fb0698739/snakeng-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}