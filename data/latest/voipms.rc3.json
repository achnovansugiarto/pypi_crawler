{
  "info": {
    "author": "Maximilian Ebert and Andrew Langemann",
    "author_email": "max.ebert@me.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "![MIT license](https://img.shields.io/badge/licence-MIT-blue.svg)\n![Version](https://img.shields.io/badge/version-0.2.5-orange.svg)\n![Unstable](https://img.shields.io/badge/status-unstable-red.svg)\n\n# python-voipms\n\nPython client for v1 of voip.ms REST API using requests >=\n2.7.0.\n\n## Getting Started\n\n### Installation\n\nThis client is hosted at PyPi under the name `voipms`, to install\nit, simply run\n\n`pip install voipms`\n\n### History\n\n- Version 0.2.5 from 25.03.2022\n    - Restore `billing_type` param in `dids.set.did_info` since that is now required by the voip.ms REST API\n- Version 0.2.4 from 02.03.2022\n    - Add support for setting `callerid_e164` and `callerid_override` when calling `dids.set.sip_uri`\n    - Fix bugs:\n        - Fix `voicemail` commands\n        - Fix `dids.order` commands\n        - Tweak `dids.set.did_info` to longer require the `billing_type` param\n- Version 0.2.3 from 05.04.2017\n    - First alpha version of this API \n    - Up to date with features listed through 20.02.2017\n- TODO:\n    - Code cleanup\n    - Cleanup of inner references to functions\n    - Testing all functions\n    - More validations of input and streamlining how to input dids (only digits or also dids with seperators)\n\n### Initialization\n\nGo to your the voip.ms customer portal go to the API config page (Main Menu > SOAP and REST/JSON API)\n- `YOUR_USERNAME` is your voip.ms username\n- Set `YOUR_PASSWORD`\n- Activate the API\n- Set the IP address of your development server\n\n    from voipms import VoipMs\n\n    client = VoipMs('YOUR_USERNAME', 'YOUR_PASSWORD')\n\n\n### Examples\n\n    # return allowed IPs\n    client.general.get.ip()\n\n    # returns a specific allowed codec\n    client.accounts.get.allowed_codecs(codec=\"ulaw\")\n\n## API Structure\n\nAll endpoints follow the structure listed in the official voip.ms API\nv1 documentation. The structure will be listed below and then the\nindividual methods available after.\n\n    VoipMs\n    +- General\n    |   +- Get\n    +- Accounts\n    |   +- Create\n    |   +- Delete\n    |   +- Get\n    |   +- Set\n    +- Calls\n    |   +- Get\n    +- Clients\n    |   +- Add\n    |   +- Get\n    |   +- Set\n    +- Dids\n    |   +- Back_order\n    |   +- Cancel\n    |   +- Connect\n    |   +- Delete\n    |   +- Get\n    |   +- Order\n    |   +- Search\n    |   +- Send\n    |   +- Set\n    |   +- Unconnect\n    +- Fax\n    |   +- Cancel\n    |   +- Delete\n    |   +- Get\n    |   +- Mail\n    |   +- Move\n    |   +- Order\n    |   +- Search\n    |   +- Send\n    |   +- Set\n    +- Voicemail\n    |   +- Create\n    |   +- Delete\n    |   +- Get\n    |   +- Mark\n    |   +- Move\n    |   +- Send\n    |   +- Set\n\n### General\n\n#### Get\n\n    client.general.get.balance(advanced=False)\n    client.general.get.countries(country=None)\n    client.general.get.ip()\n    client.general.get.languages(language=None)\n    client.general.get.servers_info(server_pop=None)\n    client.general.get.transaction_history(date_from, date_to)\n\n### Accounts\n\n#### Create\n    \n    client.accounts.create.sub_account(username, password, protocol, auth_type, device_type,\n                                       lock_international, international_route, music_on_hold,\n                                       allowed_codecs, dtmf_mode, nat, **kwargs)\n\n#### Delete\n\n    client.accounts.delete.sub_account(account_id)\n\n#### Get\n\n    client.accounts.get.allowed_codecs(codec=None)\n    client.accounts.get.auth_types(auth_type=None)\n    client.accounts.get.device_types(device_type=None)\n    client.accounts.get.dtmf_modes(dtmf_mode=None)\n    client.accounts.get.lock_international(lock_international=None)\n    client.accounts.get.music_on_hold(music_on_hold=None)\n    client.accounts.get.nat(nat=None)\n    client.accounts.get.protocols(protocol=None)\n    client.accounts.get.registration_status(account)\n    client.accounts.get.report_estimated_hold_time(time_type=None)\n    client.accounts.get.routes(route=None)\n    client.accounts.get.sub_accounts(account=None)\n\n#### Set\n\n    client.accounts.set.sub_account(account_id, password, auth_type, device_type,\n                                    lock_international, international_route, music_on_hold,\n                                    allowed_codecs, dtmf_mode, nat, **kwargs)\n\n### Calls\n\n#### Get\n\n    client.calls.get.call_accounts(client=None)\n    client.calls.get.call_billing(self)\n    client.calls.get.call_types(client=None)\n    client.calls.get.cdr(date_from, date_to, timezone,\n                         answered=False, noanswer=False, busy=False,\n                         failed=False, **kwargs)\n    client.calls.get.rates(package, query)\n    client.calls.get.termination_rates(route, query)\n    client.calls.get.reseller_cdr(date_from, date_to, client, timezone,\n                                  answered=False, noanswer=False, busy=False,\n                                  failed=False, **kwargs)\n\n### Clients\n\n#### Add\n\n    client.clients.add.charge(client, charge, description=None, test=False)\n    client.clients.add.client(firstname, lastname, address, city, state, country,\n                              zip_code, phone_number, email, confirm_email, password,\n                              confirm_password, **kwargs)\n    client.clients.add.payment(client, payment, description=None, test=False)\n\n#### Get\n\n    client.clients.get.balance_management(balance_management=None)\n    client.clients.get.charges(client)\n    client.clients.get.client_packages(client)\n    client.clients.get.clients(client=None)\n    client.clients.get.client_threshold(client)\n    client.clients.get.deposits(client)\n    client.clients.get.packages(package=None)\n    client.clients.get.reseller_balance(client)\n\n#### Set\n\n    client.clients.set.client(client, email, password, firstname,\n                              lastname, phone_number, **kwargs)\n    client.clients.set.client_threshold(client, threshold, email=None)\n\n\n### Dids\n\n#### Back_order\n\n    client.dids.back_order.did_can(quantity, province, ratecenter, routing, \n                                   pop, dialtime, cnam, billing_type, **kwargs)\n    client.dids.back_order.did_usa(quantity, state, ratecenter, routing, pop, \n                                   dialtime, cnam, billing_type, **kwargs)\n\n#### Cancel\n\n    client.dids.cancel.did(did, **kwargs)\n\n#### Connect\n\n    client.dids.connect.did(did, account, monthly, setup, minute, **kwargs)\n\n#### Delete\n\n    client.dids.delete.callback(callback)\n    client.dids.delete.caller_id_filtering(filtering)\n    client.dids.delete.client(client)\n    client.dids.delete.disa(disa)\n    client.dids.delete_sms(sms_id)\n    client.dids.delete.forwarding(forwarding)\n    client.dids.delete.ivr(ivr)\n    client.dids.delete.phonebook(phonebook)\n    client.dids.delete.queue(queue)\n    client.dids.delete.recording(recording)\n    client.dids.delete.ring_group(ringgroup)\n    client.dids.delete.sip_uri(sipuri)\n    client.dids.delete.static_member(member, queue)\n    client.dids.delete.time_condition(timecondition)\n\n#### Get\n\n    client.dids.get.callbacks(callback=None)\n    client.dids.get.caller_id_filtering(filtering=None)\n    client.dids.get.did_countries(international_type, country_id=None)\n    client.dids.get.carriers(carrier=None)\n    client.dids.get.dids_can(province, ratecenter=None)\n    client.dids.get.dids_info(client=None, did=None)\n    client.dids.get.dids_international_geographic(country_id)\n    client.dids.get.dids_international_national(country_id)\n    client.dids.get.dids_international_toll_free(country_id)\n    client.dids.get.dids_usa(state, ratecenter=None)\n    client.dids.get.disas(disa=None)\n    client.dids.get.forwardings(forwarding=None)\n    client.dids.get.international_types(international_type=None)\n    client.dids.get.ivrs(ivr=None)\n    client.dids.get.join_when_empty_types(join_type=None)\n    client.dids.get.phonebook(phonebook=None, name=None)\n    client.dids.get.portability(did)\n    client.dids.get.provinces()\n    client.dids.get.queues(queue=None)\n    client.dids.get.rate_centers_can(province)\n    client.dids.get.rate_centers_usa(state)\n    client.dids.get.recordings(recording=None)\n    client.dids.get.recording_file(recording)\n    client.dids.get.ring_groups(ringgroup=None)\n    client.dids.get.ring_strategies(strategy=None)\n    client.dids.get.sip_uris(sipuri=None)\n    client.dids.get.sms(**kwargs)\n    client.dids.get.states()\n    client.dids.get.static_members(queue, member=None)\n    client.dids.get.time_conditions(timecondition=None)\n    client.dids.get.voicemail_setups(voicemailsetup=None)\n    client.dids.get.voicemail_attachment_formats(email_attachment_format=None)\n\n#### Order\n\n    client.dids.order.did(did, routing, pop, dialtime, cnam, billing_type, **kwargs)\n    client.dids.order.did_international_geographic(location_id, quantity, routing,\n                                                   pop, dialtime, cnam, billing_type, **kwargs)\n    client.dids.order.did_international_national(location_id, quantity, routing,\n                                                 pop, dialtime, cnam, billing_type, **kwargs)\n    client.dids.order.did_international_toll_free(location_id, quantity, routing, pop,\n                                                  dialtime, cnam, billing_type, **kwargs)\n    client.dids.order.did_virtual(digits, routing, pop, dialtime, cnam, billing_type, **kwargs)\n    client.dids.order.toll_free(did, routing, pop, dialtime, cnam, billing_type, **kwargs)\n    client.dids.order.vanity(did, routing, pop, dialtime, cnam, billing_type, carrier, **kwargs)\n\n#### Search\n\n    client.dids.search.dids_can(search_type, query, province=None)\n    client.dids.search.dids_usa(search_type, query, state=None)\n    client.dids.search.toll_free_can_us(search_type=None, query=None)\n    client.dids.search.toll_free_usa(search_type=None, query=None)\n    client.dids.search.vanity(search_type, query)\n\n#### Send\n\n    client.dids.send.sms(did, dst, message)\n\n#### Set\n \n    client.dids.set.callback(description, number, delay_before, response_timeout, digit_timeout, **kwargs)\n    client.dids.set.caller_id_filtering(callerid, did, routing, **kwargs)\n    client.dids.set.did_billing_type(did, billing_type)\n    client.dids.set.did_info(did, routing, pop, dialtime, cnam, billing_type, **kwargs)\n    client.dids.set.did_pop(did, pop)\n    client.dids.set.did_routing(did, routing)\n    client.dids.set.did_voicemail(did, voicemail=None)\n    client.dids.set.disa(name, pin, digit_timeout, **kwargs)\n    client.dids.set.forwarding(phone_number, **kwargs)\n    client.dids.set.ivr(name, recording, timeout, language, voicemailsetup, choices, ivr=None)\n    client.dids.set.phonebook(name, number, **kwargs)\n    client.dids.set.queue(queue_name, queue_number, queue_language, priority_weight, report_hold_time_agent,\n                          join_when_empty, leave_when_empty, ring_strategy, ring_inuse, **kwargs)\n    client.dids.set.recording(file, name, recording=None)\n    client.dids.set.ring_group(name, members, voicemail, **kwargs)\n    client.dids.set.sip_uri(uri, **kwargs)\n    client.dids.set.sms(did, enable, **kwargs)\n    client.dids.set.static_member(queue, member_name, priority, **kwargs)\n    client.dids.set.time_condition(name, routing_match, routing_nomatch, starthour, startminute,\n                                   endhour, endminute, weekdaystart, weekdayend, timecondition=None)\n\n#### Unconnect\n\n    client.dids.unconnect.did(did)\n\n### Fax\n\n#### Cancel\n\n    client.fax.cancel.fax_number(fax_id, test=None)\n\n#### Delete\n\n    client.fax.delete.fax_message(fax_id, test=None)\n    client.fax.delete.email_to_fax(fax_id, test=None)\n    client.fax.delete.fax_folder(folder_id, test=None)\n\n#### Get\n\n    client.fax.get.fax_provinces(province=None)\n    client.fax.get.fax_states(state=None)\n    client.fax.get.fax_rate_centers_can(province)\n    client.fax.get.fax_rate_centers_usa(state)\n    client.fax.get.fax_numbers_info(did=None)\n    client.fax.get.fax_numbers_portability(did)\n    client.fax.get.fax_messages(**kwargs)\n    client.fax.get.fax_message_pdf(fax_id)\n    client.fax.get.fax_folders()\n    client.fax.get.email_to_fax(fax_id=None)\n\n#### Mail\n\n    client.fax.mail.fax_message_pdf(fax_id, email)\n\n#### Move\n\n    client.fax.move_fax_message(fax_id, folder_id, test=None)\n\n#### Order\n\n    client.fax.order.fax_number(location, quantity, **kwargs)\n\n#### Set\n\n    client.fax.search.fax_area_code_can(area_code)\n    client.fax.search.fax_area_code_usa(area_code)\n\n#### Send\n\n    client.fax.send.fax_message(to_number, from_name, from_number, file, **kwargs)\n\n#### Set\n\n    client.fax.set.fax_folder(name, **kwargs)\n    client.fax.set.email_to_fax(auth_email, from_number_id, security_code, **kwargs)\n    client.fax.set.fax_number_info(did, **kwargs)\n    client.fax.set.fax_number_email(did, **kwargs)\n    client.fax.set.fax_number_url_callback(did, **kwargs)\n\n### Voicemail\n\n#### Create\n    \n    client.voicemail.create.voicemail(digits, name, password, skip_password, attach_message, delete_message,\n                                      say_time, timezone, say_callerid, play_instructions, language, **kwargs)\n\n#### Delete\n\n    client.voicemail.delete.messages(mailbox, **kwargs)\n    client.voicemail.delete.voicemail(mailbox)\n\n#### Get\n\n    client.voicemail.get.play_instructions(play_instructions=None)\n    client.voicemail.get.timezones(timezone=None)\n    client.voicemail.get.voicemails(mailbox=None)\n    client.voicemail.get.voicemail_folders(folder=None)\n    client.voicemail.get.voicemail_message_file(mailbox, folder, message_num)\n    client.voicemail.get.voicemail_messages(mailbox, **kwargs)\n\n#### Mark\n\n    client.voicemail.mark.listened_voicemail_message(mailbox, folder, message_num, listened)\n    client.voicemail.mark.urgent_voicemail_message(mailbox, folder, message_num, urgent)\n\n#### Move\n\n    client.voicemail.move.folder_voicemail_message(mailbox, folder, message_num, new_folder)\n\n#### Send\n\n    client.voicemail.send.voicemail_email(mailbox, folder, message_num, email_address)\n\n#### Set\n\n    client.voicemail.set.voicemail(mailbox, name, password, skip_password, attach_message, delete_message,\n                                   say_time, timezone, say_callerid, play_instructions, language, **kwargs)\n\n## Contributing\n \n* To run tests:\n    * Install Python 3.7 via [pyenv](https://github.com/pyenv/pyenv)\n    * Set up [pipenv](https://pipenv.pypa.io/en/latest/)\n    * Create a `.env` file in the root with credentials for a VoIP.ms account:\n        ```\n        VOIPMS_USERNAME=\n        VOIPMS_PASSWORD=\n        ```\n    * Run `make init` and `make test`\n\n## Support\n\nIf you are having issues, please let us know or submit a pull request.\n\n## License\n\nThe project is licensed under the MIT License.\n\n## Special Thanks\n\nI was highly inspired by the mailchim3 API at https://github.com/charlesthk/python-mailchimp/.\nThanks for your nice code layout!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/4doom4/python-voipms",
    "keywords": "voip.ms,voips,api,client,wrapper",
    "license": "MIT",
    "maintainer": "Maximilian Ebert and Andrew Langemann",
    "maintainer_email": "max.ebert@me.com",
    "name": "voipms",
    "package_url": "https://pypi.org/project/voipms/",
    "platform": null,
    "project_url": "https://pypi.org/project/voipms/",
    "project_urls": {
      "Homepage": "https://github.com/4doom4/python-voipms"
    },
    "release_url": "https://pypi.org/project/voipms/0.2.5/",
    "requires_dist": [
      "requests (>=2.7.0)"
    ],
    "requires_python": "",
    "summary": "Complete REST API for the voip.ms service",
    "version": "0.2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13298262,
  "releases": {
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62a917160b1d0693a82ce03c182e86324406bdc7db21589dbac2df17313584e4",
          "md5": "198b13f485e1ebd2176265cb4a6f85f6",
          "sha256": "01a6133d46399b0b5033f3c997dc18ab1b4ac6cfff5c4da2d08ad647c2b65db1"
        },
        "downloads": -1,
        "filename": "voipms-0.2.3-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "198b13f485e1ebd2176265cb4a6f85f6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 79673,
        "upload_time": "2017-04-05T17:04:35",
        "upload_time_iso_8601": "2017-04-05T17:04:35.200605Z",
        "url": "https://files.pythonhosted.org/packages/62/a9/17160b1d0693a82ce03c182e86324406bdc7db21589dbac2df17313584e4/voipms-0.2.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f44eb9fe4774dec0268f69da5badacab1c3914462508e86f58ecaf19f9baeb92",
          "md5": "3c7f5e8950206207c927279d3e07e606",
          "sha256": "302866522dfea88232d6b957c23f935e8c53108e8c6bda195d941cebb2e95566"
        },
        "downloads": -1,
        "filename": "voipms-0.2.3.tar.gz",
        "has_sig": true,
        "md5_digest": "3c7f5e8950206207c927279d3e07e606",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50133,
        "upload_time": "2017-04-05T17:04:40",
        "upload_time_iso_8601": "2017-04-05T17:04:40.029410Z",
        "url": "https://files.pythonhosted.org/packages/f4/4e/b9fe4774dec0268f69da5badacab1c3914462508e86f58ecaf19f9baeb92/voipms-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59ee054d0fdb9682d1f0db869ae61d41d4c8004f6feebec347a230e9749592a3",
          "md5": "63c11da657e47e3b94247d9e78d9c5c7",
          "sha256": "f98e83e68b0b9889e2fd924f3ad3c41a435ef8c61c612f56be45d26f74978c32"
        },
        "downloads": -1,
        "filename": "voipms-0.2.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63c11da657e47e3b94247d9e78d9c5c7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 76618,
        "upload_time": "2022-03-02T16:28:21",
        "upload_time_iso_8601": "2022-03-02T16:28:21.027190Z",
        "url": "https://files.pythonhosted.org/packages/59/ee/054d0fdb9682d1f0db869ae61d41d4c8004f6feebec347a230e9749592a3/voipms-0.2.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28cba16e88e9c8a20e05b5ac92ca7be63387cecd627c4f763c867a4a7285bc3c",
          "md5": "e2536cd1e5d35db98cadbbbe21eeb5a7",
          "sha256": "d5e14254cf9040d47e959ae2805fd3a251a63ef2e57891121f9639905b937200"
        },
        "downloads": -1,
        "filename": "voipms-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e2536cd1e5d35db98cadbbbe21eeb5a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50395,
        "upload_time": "2022-03-02T16:28:22",
        "upload_time_iso_8601": "2022-03-02T16:28:22.771748Z",
        "url": "https://files.pythonhosted.org/packages/28/cb/a16e88e9c8a20e05b5ac92ca7be63387cecd627c4f763c867a4a7285bc3c/voipms-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cae634b7a025eae3c3649de2cf70abcf8491ee1d07bfb32d8cc4e52ff16210e2",
          "md5": "79510d9694430ad927800b0b7064761b",
          "sha256": "9665c0030081ac8da4ebc7f4d216eaf632e058782a219d75db2efd0807fbfbae"
        },
        "downloads": -1,
        "filename": "voipms-0.2.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79510d9694430ad927800b0b7064761b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 76658,
        "upload_time": "2022-03-25T22:07:43",
        "upload_time_iso_8601": "2022-03-25T22:07:43.045478Z",
        "url": "https://files.pythonhosted.org/packages/ca/e6/34b7a025eae3c3649de2cf70abcf8491ee1d07bfb32d8cc4e52ff16210e2/voipms-0.2.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "012e4a28227fc3748dbbe445ebebe05579a9cc72e5d7d96c0d8bc0016b7dd532",
          "md5": "5a19516e4d5270e4845799f1e45050f6",
          "sha256": "bbf703b2bd31eb5bde56aea89e1a0b1f692d1538b321c8593eafa9d81fad085c"
        },
        "downloads": -1,
        "filename": "voipms-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5a19516e4d5270e4845799f1e45050f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50456,
        "upload_time": "2022-03-25T22:07:45",
        "upload_time_iso_8601": "2022-03-25T22:07:45.149083Z",
        "url": "https://files.pythonhosted.org/packages/01/2e/4a28227fc3748dbbe445ebebe05579a9cc72e5d7d96c0d8bc0016b7dd532/voipms-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cae634b7a025eae3c3649de2cf70abcf8491ee1d07bfb32d8cc4e52ff16210e2",
        "md5": "79510d9694430ad927800b0b7064761b",
        "sha256": "9665c0030081ac8da4ebc7f4d216eaf632e058782a219d75db2efd0807fbfbae"
      },
      "downloads": -1,
      "filename": "voipms-0.2.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "79510d9694430ad927800b0b7064761b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 76658,
      "upload_time": "2022-03-25T22:07:43",
      "upload_time_iso_8601": "2022-03-25T22:07:43.045478Z",
      "url": "https://files.pythonhosted.org/packages/ca/e6/34b7a025eae3c3649de2cf70abcf8491ee1d07bfb32d8cc4e52ff16210e2/voipms-0.2.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "012e4a28227fc3748dbbe445ebebe05579a9cc72e5d7d96c0d8bc0016b7dd532",
        "md5": "5a19516e4d5270e4845799f1e45050f6",
        "sha256": "bbf703b2bd31eb5bde56aea89e1a0b1f692d1538b321c8593eafa9d81fad085c"
      },
      "downloads": -1,
      "filename": "voipms-0.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "5a19516e4d5270e4845799f1e45050f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 50456,
      "upload_time": "2022-03-25T22:07:45",
      "upload_time_iso_8601": "2022-03-25T22:07:45.149083Z",
      "url": "https://files.pythonhosted.org/packages/01/2e/4a28227fc3748dbbe445ebebe05579a9cc72e5d7d96c0d8bc0016b7dd532/voipms-0.2.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}