{
  "info": {
    "author": "mpourmpoulis",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# voicelint\n\n`voicelint`  is a `pylint` plug-in/extension designed to aid users of [Caster](https://github.com/dictation-toolbox/Caster),a [dragonfly](https://github.com/dictation-toolbox/dragonfly) based toolkit for programming by voice, when writing their own grammars by catching some common or annoying mistakes. \n\n## Contents\n\n<!-- MarkdownTOC  autolink=\"true\" -->\n\n- [Getting Started](#getting-started)\n- [Currently Recognized Errors/Mistakes](#currently-recognized-errorsmistakes)\n\t- [Mimic Errors](#mimic-errors)\n\t- [Pause errors](#pause-errors)\n\t- [Forgeting Conditional Import](#forgeting-conditional-import)\n\t- [Various Rule Details Errors](#various-rule-details-errors)\n\t- [Key-Text-Mouse Separated strings Errors](#key-text-mouse-separated-strings-errors)\n\t- [BringApp and StartApp no dynamic strings](#bringapp-and-startapp-no-dynamic-strings)\n- [License](#license)\n\n<!-- /MarkdownTOC -->\n\n## Getting Started\n\nIn case you have never heard before,[pylint](https://www.pylint.org/) is a popular static analysis tool, which can help you catch various errors and/or help you improve code quality. You can install it with `pip`\n\n```python\npython3 -m pip install pylint\n```\n\nand can be integrated with many editors via available extensions. For instance, you can follow instructions [here](https://code.visualstudio.com/docs/python/linting) for VSCode and for sublime you can use [SublimeLinter](https://packagecontrol.io/packages/SublimeLinter) in combination with [SublimeLinter-pylint](https://packagecontrol.io/packages/SublimeLinter-pylint)\n\nOnce you have done that, you need to install `voicelint` by similarly executing\n\n```python\npython37 -m pip install voicelint\n```\n\nand configure `pylint` to use this plug-in for our grammars!\n\nNow the easiest way to configure `pylint` is via a `.pylintrc` file, which you should place in the root directory you interested in. For our use case, that is the rules folder of the caster user directory, so it should be something like\n\n```\nC:\\Users\\%USERNAME%\\AppData\\Local\\caster\\rules\n```\n\nif you're in the latest version of caster. To tell `pylint` to load our plug-in, we need to set the `load-plugins` setting, so our file should look something like\n\n```python\n[MASTER]\nload-plugins=voicelint\n```\n\nNow we are goot and set with that,we are now faced with a different technicality that does not have to do with our plug-in but rather linting caster grammars in general. In particular, python allows manipulating during runtime  the set of directories it searches for modules import, which creates headaches for static analysis tools as they cannot know in advance which directories will be added or removed. Caster relies heavily on these feature and as a consequence pylint will complain about being unable to find the `castervoice` modules.\n\nTo sidestep this issue, we need to inform pylint of the directories Castor adds to the path and we can do that by adding the following lines (adjust for the paths used in your computer)\n\n```\n[MASTER]\ninit-hook='import sys; sys.path.append(\"C:\\\\Users\\\\%USERNAME%\\\\AppData\\\\Local\\\\caster\\\\rules\"); sys.path.append(\"C:\\\\Users\\\\%USERNAME%\\\\Documents\\\\Github\\\\Caster\")'\n\nload-plugins=voicelint\n```\n\nand now you should be up and running!!! \n\n\n## Currently Recognized Errors/Mistakes\n\nNot that many for the time being but I hope they help!\n\n### Mimic Errors\n\n```python\nMimic([\"hello\",\"world\"]) # wrong\nMimic(\"hello world\") # wrong\n\nvs \n\nMimic(\"hello\",\"world\") # `,` separated single words\n\n\nMimic(keyword_name_other_than_extra=\"something\") # only allowed keyword is `extra` \n```\n\n### Pause errors\n\n```python\nPause(10) \n\nvs\n\nPause(\"10\") # must be a string instead of integer \n```\n\n### Forgeting Conditional Import\n\nWhen importing support files, 99% of the time you should be using try except blocks to allow overriding from the user directory\n\n```python\nfrom castervoice.rules.apps.editor.eclipse_rules.eclipse_support import ec_con\n\nvs\n\ntry: # Try first loading from caster user directory\n    from eclipse_support import ec_con\nexcept ImportError:    \n    from castervoice.rules.apps.editor.eclipse_rules.eclipse_support import ec_con\n\n\n```\n\n### Various Rule Details Errors\n\nfor example\n\n```python\nclass ExampleRule(MergeRule):\n\tblah,blah,blah\n\n\ndef get_rule():\n\treturn ExampleRule,RuleDetails(ccrtype=CCRType.GLOBAL,executable=\"chrome\")\t\n\n\tvs \n\n\treturn ExampleRule,RuleDetails(ccrtype=CCRType.APP,executable=\"chrome\")\t\n```\n\nand many others for the current version of Caster (28/07/2020)\n\n\n### Key-Text-Mouse Separated strings Errors\n\nAll the key presses should be in a single string\n\n```python\nKey(\"c-a\",\"c-c\")\nText(\"nice\",\"day\")\nMouse(\"[12,100]\",\"(4,5)\")\nvs\n\nKey(\"c-a,c-c\")\nText(\"nice day\")\nMouse(\"[12,100],(4,5)\")\n```\n\n### BringApp and StartApp no dynamic strings\n\n```python\nBringApp(\"program\",\"%(data)s\")\n\nvs \n\nFunction(lambda data: BringApp('program',data.format()).execute())\n```\n\n## License\n\nvoicelint is licensed under 2-clause BSD \n\n```\nBSD 2-Clause License\n\nCopyright (c) 2020, Kitsios Panagiotis\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mpourmpoulis/voicelint",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "voicelint",
    "package_url": "https://pypi.org/project/voicelint/",
    "platform": "",
    "project_url": "https://pypi.org/project/voicelint/",
    "project_urls": {
      "Homepage": "https://github.com/mpourmpoulis/voicelint"
    },
    "release_url": "https://pypi.org/project/voicelint/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.0",
    "summary": "pylint plug-in for users of the programing by voice toolkit Caster",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7924835,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2661d493c9c09e66a6142ef8cb08a8ddc0e1545909b153161a9831af5df43aa",
          "md5": "9609df6ed46b1de61a8d5a6ee02c272a",
          "sha256": "3e6090e4dc4bf27b0f0a094e9a61332149a4784e07b7b361bfd725876a55516f"
        },
        "downloads": -1,
        "filename": "voicelint-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9609df6ed46b1de61a8d5a6ee02c272a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 9413,
        "upload_time": "2020-07-28T12:50:16",
        "upload_time_iso_8601": "2020-07-28T12:50:16.256731Z",
        "url": "https://files.pythonhosted.org/packages/b2/66/1d493c9c09e66a6142ef8cb08a8ddc0e1545909b153161a9831af5df43aa/voicelint-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba860f6333d82581aa9219856b6b3b7ef84c94e456cee7c4530711abf69b9590",
          "md5": "9c082711e4279291898ddb21d63cb813",
          "sha256": "946e96c14238d66d2df55e978387801b495e19e5f20e93aff32b7b5a1c40d1bc"
        },
        "downloads": -1,
        "filename": "voicelint-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9c082711e4279291898ddb21d63cb813",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 7127,
        "upload_time": "2020-07-28T12:50:26",
        "upload_time_iso_8601": "2020-07-28T12:50:26.498787Z",
        "url": "https://files.pythonhosted.org/packages/ba/86/0f6333d82581aa9219856b6b3b7ef84c94e456cee7c4530711abf69b9590/voicelint-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac6b47a49be0276705d0f411eeb981dbbc67582fbe4371fca566c74240960236",
          "md5": "b7b3b2527b88f2295b32cfcd56a72764",
          "sha256": "81dbd43a754e2a74c6f820428adfaf91a89ce5da3c37995851ee547abd967fa9"
        },
        "downloads": -1,
        "filename": "voicelint-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7b3b2527b88f2295b32cfcd56a72764",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 10888,
        "upload_time": "2020-08-10T11:39:52",
        "upload_time_iso_8601": "2020-08-10T11:39:52.706684Z",
        "url": "https://files.pythonhosted.org/packages/ac/6b/47a49be0276705d0f411eeb981dbbc67582fbe4371fca566c74240960236/voicelint-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3637ca3be674e69cf190c748faaa92a0d7475a2022f452b333494910f2b8452",
          "md5": "82d6534aeccda5794e0cc5247534f9e6",
          "sha256": "fe2bd12fa33c28f5f17b71c7ce3e7d34ee8c61dc40d98c8998058075592370dc"
        },
        "downloads": -1,
        "filename": "voicelint-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "82d6534aeccda5794e0cc5247534f9e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 8229,
        "upload_time": "2020-08-10T11:39:54",
        "upload_time_iso_8601": "2020-08-10T11:39:54.630736Z",
        "url": "https://files.pythonhosted.org/packages/a3/63/7ca3be674e69cf190c748faaa92a0d7475a2022f452b333494910f2b8452/voicelint-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac6b47a49be0276705d0f411eeb981dbbc67582fbe4371fca566c74240960236",
        "md5": "b7b3b2527b88f2295b32cfcd56a72764",
        "sha256": "81dbd43a754e2a74c6f820428adfaf91a89ce5da3c37995851ee547abd967fa9"
      },
      "downloads": -1,
      "filename": "voicelint-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b7b3b2527b88f2295b32cfcd56a72764",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.0",
      "size": 10888,
      "upload_time": "2020-08-10T11:39:52",
      "upload_time_iso_8601": "2020-08-10T11:39:52.706684Z",
      "url": "https://files.pythonhosted.org/packages/ac/6b/47a49be0276705d0f411eeb981dbbc67582fbe4371fca566c74240960236/voicelint-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3637ca3be674e69cf190c748faaa92a0d7475a2022f452b333494910f2b8452",
        "md5": "82d6534aeccda5794e0cc5247534f9e6",
        "sha256": "fe2bd12fa33c28f5f17b71c7ce3e7d34ee8c61dc40d98c8998058075592370dc"
      },
      "downloads": -1,
      "filename": "voicelint-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "82d6534aeccda5794e0cc5247534f9e6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0",
      "size": 8229,
      "upload_time": "2020-08-10T11:39:54",
      "upload_time_iso_8601": "2020-08-10T11:39:54.630736Z",
      "url": "https://files.pythonhosted.org/packages/a3/63/7ca3be674e69cf190c748faaa92a0d7475a2022f452b333494910f2b8452/voicelint-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}