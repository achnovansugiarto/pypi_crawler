{
  "info": {
    "author": "Jean-Marie Lepioufle",
    "author_email": "Jean-Marie Lepioufle <jm@jeanmarie.eu>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# aqeea\n\n\n[![DOI](https://zenodo.org/badge/621791727.svg)](https://zenodo.org/badge/latestdoi/621791727)\n\nAccess to air quality data from the European Environment Agency:\n- Data validated by experts from 2013 up to 2 years before the ongoing year.\n- up-to-date data without any validation.\n- the last 48h.\n\nYou can get the main pollutants (i.e NO, NO2, PM2.5, PM10, SO2, O3, CO,C6H6).\n\nThe packages aims at:\n\ni) retrieving the datasets from EEA download sources.\n\nii) filtering the data of your choice once downloaded.\n\n## install from Pypi\n```bash\npip install aqeea\n```\n\n## install from source\n```bash\nmkdir tmp\ncd /tmp\ngit clone https://github.com/j-m-l-e-u/aqeea_pkg.git\ncd aqeea_pkg\npip3 install .\n```\n\n## Usage\n\nThe package `aqeea` helps you first to download the datasets, and then to read and to filter them.\n\nDownloading functions can be run both on python and bash.\n\nReading functions are only available in python.\n\nFor help:\n```bash\npython3 aqeea -h\n\nusage: aqeea [-h] {l_pol,l_city,d_meta,d_hist,d_last} ...\n\nAccess to air quality data from the European Environment Agency.\n\npositional arguments:\n  {l_pol,l_city,d_meta,d_hist,d_last}\n                        sub-command help\n    l_pol               Get the list of pollutants measured in the country\n    l_city              Get the list of the cities with measurements in the country\n    d_meta              Download the metadata of the reference stations\n    d_hist              Download historical data up to 2013\n    d_last              Download the last 48h non-validated data\n\noptional arguments:\n  -h, --help            show this help message and exit\n```\n\n\n## Download the data of your choice:\n\nDownloading can be done either in bash command or in python command.\n\nAll the files are saved in a folder (called blob).\nBash command requires the path of the blob to be given.\nPython command gets a default path if this one is missing.\n\nYou need to download the metadata and the files from the sources of interest before reading the files.\n\n\n### > The metadata\n```bash\n#bash\npython3 aqeea d_metadata -b \"/path/to/existing/folder\"\n```\n```python\n#python\nfrom aqeea.download import d_metadata\nd_metadata()\n```\n\n### > Validated PM10 data for year 2021 in France\n```bash\n#bash\npython3 aqeea d_historical -s validated -c France -p PM10 -yf 2021 -yt 2021 -b \"/path/to/existing/folder\"\n```\n```python\n#python\nfrom aqeea.download import d_historical\nd_historical(source='validated',country='France',pollutant='PM10',year_from=2021,year_to=2021)\n```\n### > Validated data of <i>**all**</i> the pollutants for the <i>**whole**</i> period in Albania\n\n```bash\n#bash\npython3 aqeea d_historical -s validated -c Albania --pollutants --years -b \"/path/to/existing/folder\"\n```\n```python\n#python\nfrom aqeea.download import d_historical\nd_historical(source='validated',country='Albania',POLLUTANTS=True,YEARS=True)\n```\n\n### > Up-to-date PM10 data for year 2023 in Estonia\n```bash\n#bash\npython3 aqeea d_historical -s uptodate -c Estonia -p PM10 -yf 2023 -yt 2023 -b \"/path/to/existing/folder\"\n```\n```python\n#python\nfrom aqeea.download import d_historical\nd_historical(source='uptodate',country='Estonia',pollutant='PM10',year_from=2023,year_to=2023)\n```\n\n### > Up-to-date data of <i>**all**</i> the pollutants for the <i>**whole**</i> period in Slovenia\n\n```bash\n#bash\npython3 aqeea d_historical -s uptodate -c Slovenia --pollutants --years -b \"/path/to/existing/folder\"\n```\n```python\n#python\nfrom aqeea.download import d_historical\nd_historical(source='uptodate',country='Slovenia',POLLUTANTS=True,YEARS=True)\n```\n\n### > Latest 48h of PM10 in Serbia\n```bash\n#bash\npython3 aqeea d_latest -c Serbia -p PM10 -b \"/path/to/existing/folder\"\n```\n```python\n#python\nfrom aqeea.download import d_latest\nd_latest('Serbia','PM10')\n```\n\n### > Latest 48h of PM10 in <i>**all**</i> countries registered at EEA\n```bash\n#bash\npython3 aqeea d_latest -p PM10 --countries -b \"/path/to/existing/folder\"\n```\n```python\n#python\nfrom aqeea.download import d_latest\nd_latest('PM10',COUNTRIES=True)\n```\n\n### > Latest 48h dataset of <i>**all**</i> the pollutants in Poland\n```bash\n#bash\npython3 aqeea d_latest -c Poland --pollutants -b \"/path/to/existing/folder\"\n```\n```python\n#python\nfrom aqeea.download import d_latest\nd_latest('Poland',POLLUTANTS=True)\n```\n\n### > Latest 48h dataset of <i>**all**</i> the pollutants in <i>**all**</i> countries registered at EEA\n```bash\n#bash\npython3 aqeea d_latest --countries --pollutants -b \"/path/to/existing/folder\"\n```\n```python\n#python\nfrom aqeea.download import d_latest\nd_latest(COUNTRIES=True, POLLUTANTS=True)\n```\n\n## Read and filter the downloaded datasets:\n\nThe chosen sampling points providing the measurements are filtered by their measurement date and the lat/lon's of the boundary box of your choice.\nOpen-street Map through the package `osmnx` helps you getting this information.\n\nTo install `osmnx`, just type:\n```bash\n#bash\npip install osmnx\n```\n\n### > Get the validated PM10 data in Paris, France from 2021-01-01 00:00:00 UTC to 2021-01-01 12:00:00 UTC\n```python\n#python\nimport osmnx as ox\nfrom aqeea.read import historical\n\n# define the place query\nquery = {'city': 'Paris'}\n\n# get the boundaries of the place\ngdf = ox.geocode_to_gdf(query)\nbbox = gdf.total_bounds\n\nlat_min, lat_max = bbox[1],bbox[3]\nlon_min, lon_max = bbox[0],bbox[2]\n\nres = historical(source='validated',pollutant='PM10',datetime_from='2021-01-01 00:00:00',datetime_to='2021-01-01 12:00:00',lat_min=lat_min, lat_max=lat_max,lon_min=lon_min, lon_max=lon_max)\n```\n\n### > Get the up-to-date PM10 data in Tallinn, Estonia from 2023-01-01 00:00:00 UTC to 2023-01-12 00:00:00 UTC\n```python\n#python\nimport osmnx as ox\nfrom aqeea.read import historical\n\n# define the place query\nquery = {'city': 'Tallinn'}\n\n# get the boundaries of the place\ngdf = ox.geocode_to_gdf(query)\nbbox = gdf.total_bounds\n\nlat_min, lat_max = bbox[1],bbox[3]\nlon_min, lon_max = bbox[0],bbox[2]\n\nres = historical(source='uptodate',pollutant='PM10',datetime_from='2023-01-01 00:00:00',datetime_to='2023-01-12 00:00:00',lat_min=lat_min, lat_max=lat_max,lon_min=lon_min, lon_max=lon_max)\n```\n\n### > Get the last 48h PM10 data in Paris,France\n```python\n#python\nfrom aqeea.read import main_read_latest\nres = latest(pollutant='PM10',lat_min=48.8155755, lat_max=48.902156,lon_min=2.224122, lon_max=2.4697602)\n```\n\n### > Get the metadata of PM10 concentration in Paris,France\n```python\n#python\nfrom aqeea.read import main_read_metadata\nres = metadata(pollutant='PM10',lat_min=48.8155755, lat_max=48.902156,lon_min=2.224122, lon_max=2.4697602)\n```\n\n## Notebook examples\nSee folder `examples`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/j-m-l-e-u/aqeea_pkg",
    "keywords": "",
    "license": "MIT + Copyright Jean-Marie Lepioufle",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aqeea",
    "package_url": "https://pypi.org/project/aqeea/",
    "platform": null,
    "project_url": "https://pypi.org/project/aqeea/",
    "project_urls": {
      "Homepage": "https://github.com/j-m-l-e-u/aqeea_pkg"
    },
    "release_url": "https://pypi.org/project/aqeea/0.1b0/",
    "requires_dist": [
      "requests (==2.28.2)",
      "pandas (~=1.5.3)",
      "polars (~=0.16.9)",
      "ipython ; extra == 'example'",
      "jupyter ; extra == 'example'",
      "os ; extra == 'example'",
      "osmnx ; extra == 'example'",
      "ipython ; extra == 'examples'",
      "jupyter ; extra == 'examples'",
      "os ; extra == 'examples'",
      "osmnx ; extra == 'examples'"
    ],
    "requires_python": ">=3.8",
    "summary": "Access to air quality data from the European Environment Agency.",
    "version": "0.1b0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17526567,
  "releases": {
    "0.1b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97b9502870e36c201c678f8b78174df149a49d120d37759419832bfa72bd96de",
          "md5": "ea11d42821fb5ae999f76bace6a4091a",
          "sha256": "1ecee91e5c1e05adf89c2b7a6707aab2f9b63b502b9759394a66d8301e6164db"
        },
        "downloads": -1,
        "filename": "aqeea-0.1b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea11d42821fb5ae999f76bace6a4091a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 22667,
        "upload_time": "2023-03-31T12:54:03",
        "upload_time_iso_8601": "2023-03-31T12:54:03.358158Z",
        "url": "https://files.pythonhosted.org/packages/97/b9/502870e36c201c678f8b78174df149a49d120d37759419832bfa72bd96de/aqeea-0.1b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad84ef6d3f587e547f1a8d404ca731d787ed45aabeeb2aa48928edf38c9cf6c0",
          "md5": "074d3f6e1b4219e74503c0b9ccca197b",
          "sha256": "74f40083675d96a09729a9eb4690c7b635e56eb909dbfb78a885ffef43d7c62c"
        },
        "downloads": -1,
        "filename": "aqeea-0.1b0.tar.gz",
        "has_sig": false,
        "md5_digest": "074d3f6e1b4219e74503c0b9ccca197b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 23364,
        "upload_time": "2023-03-31T12:54:05",
        "upload_time_iso_8601": "2023-03-31T12:54:05.966320Z",
        "url": "https://files.pythonhosted.org/packages/ad/84/ef6d3f587e547f1a8d404ca731d787ed45aabeeb2aa48928edf38c9cf6c0/aqeea-0.1b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97b9502870e36c201c678f8b78174df149a49d120d37759419832bfa72bd96de",
        "md5": "ea11d42821fb5ae999f76bace6a4091a",
        "sha256": "1ecee91e5c1e05adf89c2b7a6707aab2f9b63b502b9759394a66d8301e6164db"
      },
      "downloads": -1,
      "filename": "aqeea-0.1b0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ea11d42821fb5ae999f76bace6a4091a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 22667,
      "upload_time": "2023-03-31T12:54:03",
      "upload_time_iso_8601": "2023-03-31T12:54:03.358158Z",
      "url": "https://files.pythonhosted.org/packages/97/b9/502870e36c201c678f8b78174df149a49d120d37759419832bfa72bd96de/aqeea-0.1b0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad84ef6d3f587e547f1a8d404ca731d787ed45aabeeb2aa48928edf38c9cf6c0",
        "md5": "074d3f6e1b4219e74503c0b9ccca197b",
        "sha256": "74f40083675d96a09729a9eb4690c7b635e56eb909dbfb78a885ffef43d7c62c"
      },
      "downloads": -1,
      "filename": "aqeea-0.1b0.tar.gz",
      "has_sig": false,
      "md5_digest": "074d3f6e1b4219e74503c0b9ccca197b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 23364,
      "upload_time": "2023-03-31T12:54:05",
      "upload_time_iso_8601": "2023-03-31T12:54:05.966320Z",
      "url": "https://files.pythonhosted.org/packages/ad/84/ef6d3f587e547f1a8d404ca731d787ed45aabeeb2aa48928edf38c9cf6c0/aqeea-0.1b0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}