{
  "info": {
    "author": "Slava Vertliba",
    "author_email": "vertliba.vv@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Testing",
      "Topic :: Software Development :: Testing :: Mocking",
      "Topic :: Software Development :: Testing :: Unit"
    ],
    "description": "unittest-mocker\n==================\n\n![build](https://github.com/vertliba/unittest-mocker/workflows/build/badge.svg?branch=master)\n[![codecov](https://codecov.io/gh/vertliba/unittest-mocker/branch/master/graph/badge.svg)](https://codecov.io/gh/vertliba/unittest-mocker)\n[![PyPI version](https://badge.fury.io/py/unittest-mocker.svg)](https://badge.fury.io/py/unittest-mocker)\n\nInspired by the [pytest-mock](https://github.com/pytest-dev/pytest-mock), but written from scratch for using with\nunittest and convenient tool - [**Class mocker**](#Class-mocker)\n\nInstallation\n------------\n\n```shell script\npip install unittest-mocker\n```\n\nUsage\n-----\n\n### General mocker\n\n```python\n@activate_mocker\ndef test_create_client(self, mocker: Mocker):\n    post_mock = mocker.patch('requests.post')\n    post_mock.return_value.status_code = 200\n    post_mock.return_value.json.return_value = {'msg': done}\n    \n    send_clients_to_crm()\n    \n    post_mock.assert_called_once_with(...)\n```\n\nor you can put the mocking logic in a separate method:\n\n```python\ndef mock_post(mocker, status):\n    response = requests.Response()\n    response.status_code = status\n    response.headers = {'Location': '...'}\n    response._content = 'some content'\n    \n    return mocker.patch('requests.post', return_value=response)\n\n@activate_mocker\ndef test_upload_post_success(mocker):\n    mocked_post = mock_post(mocker, 201)\n    ...\n@activate_mocker\ndef test_upload_post_error(mocker):\n    mocked_post = mock_post(mocker, 500)\n    ...\n```\n\n#### Details\n\n`mocker.patch` under the hood calls `unittest.mock.patch`\nSo you can apply any arguments of [the standard mock library](https://docs.python.org/3/library/unittest.mock.html)\n\nThe same with `mocker.patch.object`. It has the same parameters as`unittest.mock.patch.object`\n\n\n### Class mocker\n\nBasic usage:\n\n```python\nfrom unittest_mocker import activate_mocker, Mocker\nfrom api import ApiClient\n\n@activate_mocker\ndef test_api_client(self, mocker: Mocker):\n    client_mock = mocker.patch_class('api.ApiClient')\n\n    ApiClient(url='example.com')(command='start')\n    \n    client_mock.test_initialized_with(url='example.com')\n    client_mock.mocks['__call__'].assert_called_once_with(command='start')\n```\n\n#### Syntax\n\n```python\n# Variant 1\nmocker.patch_class(target: str, methods=Optional[list[str]])\n# Example:\nmock = mocker.patch_class('some_module.SomeClass', methods=['method_1', 'method_2'])\n\n# Variant 2\nmocker.patch_class.object(target: Union[module, class], attribute: str, methods=Optional[list[str]])\n# Example:\nimport some_module\nmock = mocker.patch_class(some_module, 'SomeClass', methods=['method_1', 'method_2'])\n```\n\nAll mocked methods are stored in `mock.mocks` dictionary and can be accessed:\n```python\nmock['__init__'].assert_called_once_with(...)\n```\n\n`patch_class` always patches class's `__init__` method. \n\nAlso, `methods` parameter also defaults to [`__call__`]. So that's correct:\n\n```python\nmock = mocker.patch_class('some_module.SomeClass')\n...\nmock.mocks['__call__'].assert_called_once_with(...)\n```\n\n#### Helper `test_initialized_with`\n\nmock.test_initialized_with() is just shortcut for `mock['__init__'].assert_called_once_with()`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vertliba/unittest-mocker",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "unittest-mocker",
    "package_url": "https://pypi.org/project/unittest-mocker/",
    "platform": "",
    "project_url": "https://pypi.org/project/unittest-mocker/",
    "project_urls": {
      "Homepage": "https://github.com/vertliba/unittest-mocker"
    },
    "release_url": "https://pypi.org/project/unittest-mocker/0.9.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A little facade for the standard python mocker library to make it user-friendly",
    "version": "0.9.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11816956,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32757711411dd37e99ef59b36df78aecad3e4bccfc5b537036e7c32f965c5242",
          "md5": "4f7e7463c9e2930b3cabdd4b4ec52f8f",
          "sha256": "761e89fe36897fb6e5252776e4a8dfa853db15aec6ff684e8762a5ef8de4e501"
        },
        "downloads": -1,
        "filename": "unittest_mocker-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f7e7463c9e2930b3cabdd4b4ec52f8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5486,
        "upload_time": "2021-10-24T17:24:21",
        "upload_time_iso_8601": "2021-10-24T17:24:21.621435Z",
        "url": "https://files.pythonhosted.org/packages/32/75/7711411dd37e99ef59b36df78aecad3e4bccfc5b537036e7c32f965c5242/unittest_mocker-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1bb43216ae7a99215e16aa7a7f2fe505729658d8d33abfe00b2c0a1c07736a8",
          "md5": "0cd16f73aa2d670a44aa826152654798",
          "sha256": "6589aa6509aebe669986e5388fb77639ab10e8a439bf0499d8e9ad056a88fab3"
        },
        "downloads": -1,
        "filename": "unittest-mocker-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0cd16f73aa2d670a44aa826152654798",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5081,
        "upload_time": "2021-10-24T17:24:22",
        "upload_time_iso_8601": "2021-10-24T17:24:22.611765Z",
        "url": "https://files.pythonhosted.org/packages/e1/bb/43216ae7a99215e16aa7a7f2fe505729658d8d33abfe00b2c0a1c07736a8/unittest-mocker-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32757711411dd37e99ef59b36df78aecad3e4bccfc5b537036e7c32f965c5242",
        "md5": "4f7e7463c9e2930b3cabdd4b4ec52f8f",
        "sha256": "761e89fe36897fb6e5252776e4a8dfa853db15aec6ff684e8762a5ef8de4e501"
      },
      "downloads": -1,
      "filename": "unittest_mocker-0.9.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4f7e7463c9e2930b3cabdd4b4ec52f8f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5486,
      "upload_time": "2021-10-24T17:24:21",
      "upload_time_iso_8601": "2021-10-24T17:24:21.621435Z",
      "url": "https://files.pythonhosted.org/packages/32/75/7711411dd37e99ef59b36df78aecad3e4bccfc5b537036e7c32f965c5242/unittest_mocker-0.9.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1bb43216ae7a99215e16aa7a7f2fe505729658d8d33abfe00b2c0a1c07736a8",
        "md5": "0cd16f73aa2d670a44aa826152654798",
        "sha256": "6589aa6509aebe669986e5388fb77639ab10e8a439bf0499d8e9ad056a88fab3"
      },
      "downloads": -1,
      "filename": "unittest-mocker-0.9.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0cd16f73aa2d670a44aa826152654798",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5081,
      "upload_time": "2021-10-24T17:24:22",
      "upload_time_iso_8601": "2021-10-24T17:24:22.611765Z",
      "url": "https://files.pythonhosted.org/packages/e1/bb/43216ae7a99215e16aa7a7f2fe505729658d8d33abfe00b2c0a1c07736a8/unittest-mocker-0.9.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}