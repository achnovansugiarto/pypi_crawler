{
  "info": {
    "author": "Junki Yoon",
    "author_email": "na66421@gmai.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Overrdie Pydantic Settings\n====================\n<img src=\"https://img.shields.io/badge/python-%3E%3D%203.6-blue\"/> <img src=\"https://img.shields.io/badge/-pydantic%20-%23E00050\"/> <img src=\"https://img.shields.io/badge/-pytest%20-%231083CC\"/>  \n\nSettings management in Pydantic makes it easy to override settings, like below.\n```py\n# override settings\nsettgins.env = \"production\"\n```  \nHowever, if you want to change the setting value in each test suite in your test code,  \nYou need to change the values at the beginning of the test and roll back the values at the end of the test.\n\n```py\nfrom app.core.config import settings # Pydantic settings\n\ndef test_settings():\n    # override setting value\n    env = settings.ENV\n    settings.ENV = \"production\"\n    \n    # assertions\n    ...\n    \n    # rollback setting value, because in order not to affect other tests\n    settings.ENV = env\n```\n\nThis causes a lot of code duplication. So, in order to remove the code that occurs repeatedly, created a decorator for tests.\n\nFeatures\n========\n\nYou can easily override the setting value by applying a decorator to the test function.  \nAlso, when the test function is finished, the settings are automatically roll back.\n\nThat's all.\n```py\n# for sync tests\n@override_settings(settings=settings, ENV=\"production\")\n# for async tests\n@async_override_settings(settings=settings, ENV=\"production\")\n```\n\nInstallation\n============\n```py\npip install override-pydantic-settings\n```\n\nHow to use\n-----\n### For sync tests\n```py\nfrom pydantic import BaseSettings\nfrom override_pydantic_settings import override_settings\n\n\nclass MySettings(BaseSettings):\n    ENV: str = \"dev\"\n    NAME: str = \"Junki\"\n    EMAIL: str = \"na66421@gmail.com\"\n\n    \nsettings = MySettings()\n\n\n@override_settings(settings=settings, ENV=\"production\", NAME=\"Junki Yoon\")\ndef test_function():\n    ...\n```\n### For async tests\n```py\n@pytest.mark.asyncio\n@async_override_settings(settings=settings, ENV=\"production\", EMAIL=\"na86421@naver.com\")\nasync def test_function():\n    ...\n```\n\n#### Warning\n*You cannot override the setting value that does not exist.*\n\nDevelopment\n===========\nCompatible with `Python >= 3.6` \n\n`Python >= 3.10`, we can create async decorators using the\n[asnyc context manager](https://docs.python.org/dev/library/contextlib.html#contextlib.asynccontextmanager).  \nIt seems that `async & sync` can be integrated into one function.  \n\n\nRunning tests\n-------------\n```bash\n$ python -m venv venv\n(venv)$ source venv/bin/acitave\n(venv)$ pip install -r requirements.txt\n(venv)$ pytest\n```\n\nLicense\n=======\nThis project is licensed under the MIT license.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/na86421/override-pydantic-settings",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "override-pydantic-settings",
    "package_url": "https://pypi.org/project/override-pydantic-settings/",
    "platform": null,
    "project_url": "https://pypi.org/project/override-pydantic-settings/",
    "project_urls": {
      "Homepage": "https://github.com/na86421/override-pydantic-settings"
    },
    "release_url": "https://pypi.org/project/override-pydantic-settings/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Override pydantic settings",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15762012,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "942c96834db9e1e93519d5673fca9ea035765abc18f132b4de3a482aa013f277",
          "md5": "0f5b72d033c9da454b29b4dddc990eac",
          "sha256": "7415454160e58536beb5a9a80df0e04a6e1606971268eb08353052bf7a6f2258"
        },
        "downloads": -1,
        "filename": "override-pydantic-settings-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0f5b72d033c9da454b29b4dddc990eac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2207,
        "upload_time": "2022-11-13T12:08:05",
        "upload_time_iso_8601": "2022-11-13T12:08:05.737822Z",
        "url": "https://files.pythonhosted.org/packages/94/2c/96834db9e1e93519d5673fca9ea035765abc18f132b4de3a482aa013f277/override-pydantic-settings-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60580616d2f1cad65fcb9da3509e7ded79572032a72fd609b96897258bb36d17",
          "md5": "601b6d1a1a53ea9e60d99165cb44c3bf",
          "sha256": "0dbc552ff4e78e14156b89a7b67f6adbe8e8fd0105736861c5fe855a37594ab4"
        },
        "downloads": -1,
        "filename": "override-pydantic-settings-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "601b6d1a1a53ea9e60d99165cb44c3bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3400,
        "upload_time": "2022-11-14T13:09:35",
        "upload_time_iso_8601": "2022-11-14T13:09:35.077706Z",
        "url": "https://files.pythonhosted.org/packages/60/58/0616d2f1cad65fcb9da3509e7ded79572032a72fd609b96897258bb36d17/override-pydantic-settings-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "60580616d2f1cad65fcb9da3509e7ded79572032a72fd609b96897258bb36d17",
        "md5": "601b6d1a1a53ea9e60d99165cb44c3bf",
        "sha256": "0dbc552ff4e78e14156b89a7b67f6adbe8e8fd0105736861c5fe855a37594ab4"
      },
      "downloads": -1,
      "filename": "override-pydantic-settings-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "601b6d1a1a53ea9e60d99165cb44c3bf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3400,
      "upload_time": "2022-11-14T13:09:35",
      "upload_time_iso_8601": "2022-11-14T13:09:35.077706Z",
      "url": "https://files.pythonhosted.org/packages/60/58/0616d2f1cad65fcb9da3509e7ded79572032a72fd609b96897258bb36d17/override-pydantic-settings-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}