{
  "info": {
    "author": "Roivant Sciences",
    "author_email": "vant.tech.eng@roivant.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "django-dataclasses\n================================\n\nThis library provides a decorator that when applied to a Django views does JSON serialization and enforces\nschemas using the ``dataclasses-jsonschema`` library.\n\nIt also enables you to export your API definition to an `OpenAPI`_ spec file. This enables you to\nautogenerate client libraries.\n\n.. _OpenApi: https://oai.github.io/Documentation/start-here.html\n\nUsage\n-----\n\nTo use it, decorate your view functions with the appropriate HTTP method provided by `django-dataclasses`\n(``post``, ``get``, ``patch``, or ``put``). Annotate the return values of your functions with the appropriate\ndataclass type.\n\nViews that take input require an additional ``body`` parameter with the appropriate dataclass type annotation::\n\n    from django import http\n    import django_dataclasses\n\n\n    @django_dataclasses.dataclass\n    class StringLengthRequest:\n        input: str\n\n\n    @django_dataclasses.dataclass\n    class StringLengthResponse:\n        length: int\n\n\n    @django_dataclasses.login_required\n    @django_dataclasses.post\n    def string_length(request: http.HttpRequest, body: StringLengthRequest) -> StringLengthResponse:\n        \"\"\"Calculate the length of a string\"\"\"\n        return StringLengthResponse(length=len(body.input))\n\nReturning errors\n~~~~~~~~~~~~~~~~\n\nTo return an error response in your views, raise `django_dataclasses.ErrorResponse <django_dataclasses/schema.py#L9>`_.\nFor example, in this instance we raise an `ErrorResponse` if the login credentials are invalid:\n::\n\n    if user is not None:\n        login(request, user)\n        return UserResponse(user.username)\n    else:\n        raise django_dataclasses.ErrorResponse(\"Incorrect username or password\", 401)\n\nThe exception will be `caught <django_dataclasses/schema.py#L57>`_\nby the `django-dataclasses` decorator and an HTTP response with a text body and status\ncode you provide will be returned.\n\nQuery Parameters\n~~~~~~~~~~~~~~~~\n\nViews that use query params require an additional ``query`` parameter with the appropriate\ndataclass as a type annotation::\n\n    from django import http\n    import django_dataclasses\n\n\n    @django_dataclasses.dataclass\n    class QueryParams:\n        contains: str = \"\"\n\n\n    @django_dataclasses.dataclass\n    class FruitsResponse:\n        \"\"\"Fruits with the given string\"\"\"\n        fruits: typing.List[str]\n\n\n    @django_dataclasses.get\n    def fruit_medley(request: http.HttpRequest, query: QueryParams) -> FruitsResponse:\n        \"\"\"Fruits that contain a given string\"\"\"\n        fruits = [\"apple\", \"pear\", \"orange\", \"plum\"]\n        return FruitsResponse([fruit for fruit in fruits if query.contains in fruit])\n\nIterables and paginated results\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n`django-dataclasses` includes the ``iterable_factory`` utility for creating a dataclass that represents an\niterable list of results, alleviating the need to redefine the same schema for list-based endpoints.\n\nFor example, if one wants to return a list of the following results::\n\n    @django_dataclasses.dataclass\n    class MyObject:\n        val: int\n\nUse the ``iterable_factory`` to create a wrapper around an iterable of items. For example::\n\n    MyIterableObject = django_dataclasses.iterable_factory(MyObject)\n\n\n    @django_dataclasses.post\n    def iterable_get(request: http.HttpRequest) -> MyIterableObject:\n        \"\"\"Return an iterable of results\"\"\"\n        return MyIterableObject(items=[MyObject(val=0), MyObject(val=1)])\n\nThe returned payload will include an ``items`` key with the serialized results.\n\nThe payload also includes attributes for pagination, including the total ``count`` of items\nreturned and the current ``page`` number. By default, no pagination occurs. To enable pagination,\npass ``paginated=True`` to ``iterable_factory`` like so.::\n\n    @django_dataclasses.dataclass\n    class QueryParams:\n        \"\"\"All query params must be strings as they are encoded in the URL\"\"\"\n        page: str = \"1\"\n        page_size: str = \"10\"\n\n\n    MyPaginatedObject = django_dataclasses.iterable_factory(MyObject, paginated=True)\n\n\n    @django_dataclasses.get\n    def paginated_get(request: http.HttpRequest, query: QueryParams) -> MyPaginatedObject:\n        \"\"\"Return an paginated iterable of results\"\"\"\n        page = MyPaginatedObject(\n            items=models.MyModel.objects.all(),\n            page_num=int(query.page),\n            page_size=int(query.page_size)\n        )\n        page.items = [IterableObject(row.a) for row in page.items]\n        return page\n\nBy default, the page size is 10. This can be changed by passing ``page_size`` to the paginator.\nAn example response payload with a page size of ``2`` will look like this::\n\n    {\n        'page': 1,\n        'count': 20,\n        'items': [\n            {'val': 0},\n            {'val': 1}\n        ]\n    }\n\nSchema export\n~~~~~~~~~~~~~\n\nThis library was inspired by the convenience of using autogenerated gRPC client libraries. Not everyone\ncan adopt gRPC, and `django-dataclasses` aims to provides a similar toolkit for JSON APIs.\n\nExport your schemas in the OpenAPI format using this management command. You need to add\n``django_dataclasses`` to your ``INSTALLED_APPS`` for it to be available::\n\n    ./manage.py openapi_export > api.json\n\nThen, use another library to autogenerate client libraries. For example, you can use\n`openapi-typescript-codegen`_ to generate a JavaScript client complete with typed methods by running::\n\n    yarn add --dev openapi-typescript-codegen\n    yarn run openapi --input api.json --output api/\n\n.. _openapi-typescript-codegen: https://github.com/ferdikoomen/openapi-typescript-codegen\n\nLicense\n-------\n\nContributions are made under the terms of the Apache License, Version 2.0.\nSee `LICENSE <LICENSE>`_.\n\nContributing\n----------------\n\nThis project uses `pyenv <https://github.com/yyuu/pyenv>`_, please install it first.\nWhen running on a Mac, the ``Makefile`` uses Homebrew to install dependencies. On other\nplatforms please install them manually.\n\nClone the repo and setup your development environment by running::\n\n    git clone https://gitlab.com/roivant/oss/django-dataclasses.git\n    make setup\n\nRun the tests and code validations::\n\n    make test\n    make validate\n\nYou can test exporting the openapi schema and compiling it to JavaScript using ``openapi-typescript-codegen``\nby running this command. The output files are put in a folder ``api/``::\n\n    make api\n\nContributors must adhere to the Contributor Covenant `Code of Conduct\n<https://www.contributor-covenant.org/version/2/0/code_of_conduct/>`_.\nPlease report suspected violations to vant.tech.eng@roivant.com.\n\nAbout the template\n-------------------\n\nThis repository was created from the `temple-python <https://gitlab.com/roivant/vant-tech/temple-python>`_\ntemplate. If you have access to that repository, apply updates from the template by running::\n\n    temple update\n\nWhat tools are included?\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n- A Makefile for convenience; use ``make setup`` to setup your dev environment\n- A build configuration in ``.gitlab-ci.yml``\n- A test framework using pytest and requiring 100% coverage; use ``make test`` to run\n- Python auto-formatting using ``black``, ``flake8``, and ``isort`` via a git pre-commit hook\n- Automatic versioning and ChangeLog using `PBR <https://docs.openstack.org/developer/pbr/>`_\n\nVersioning using PBR\n~~~~~~~~~~~~~~~~~~~~\n\nThe `PBR <https://docs.openstack.org/developer/pbr/>`_ library will automatically\nincrement the version when you commit to the main branch by merging your pull request.\nThe commit message that you enter on GitHub when merging will determine what version\nnumber is assigned, using `Semantic Versioning <http://semver.org/>`_.\n\n- Messages starting with ``Sem-Ver: bugfix,`` or with no matching message will bump the ``PATCH`` number\n- Messages starting with ``Sem-Ver: feature,`` or ``Sem-Ver: deprecation,`` will bump the ``MINOR`` number.\n- Messages starting with ``Sem-Ver: api-break,`` will bump the ``MAJOR`` number.\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/roivant/oss/django-dataclasses",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-dataclasses",
    "package_url": "https://pypi.org/project/django-dataclasses/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-dataclasses/",
    "project_urls": {
      "Homepage": "https://gitlab.com/roivant/oss/django-dataclasses"
    },
    "release_url": "https://pypi.org/project/django-dataclasses/0.2.2/",
    "requires_dist": [
      "apispec",
      "django",
      "dataclasses-jsonschema"
    ],
    "requires_python": ">=3.7",
    "summary": "Implement a JSON API using dataclasses",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12900406,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f0ecabf8b24e3f961b7cedb33ccb708d023fe05fd882668e207e9aacd3c0321",
          "md5": "265e4a50ed47ff2f4905723c9d21062a",
          "sha256": "69b02251bee3319c162db565157fb5b2ebba20bba969e1356c79b4242f1c5a72"
        },
        "downloads": -1,
        "filename": "django_dataclasses-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "265e4a50ed47ff2f4905723c9d21062a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16787,
        "upload_time": "2021-11-29T19:16:50",
        "upload_time_iso_8601": "2021-11-29T19:16:50.490029Z",
        "url": "https://files.pythonhosted.org/packages/1f/0e/cabf8b24e3f961b7cedb33ccb708d023fe05fd882668e207e9aacd3c0321/django_dataclasses-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f94af17ed8e1b1890634b185592c9a73b1e0e37027cab7ff7d4ba11425b79335",
          "md5": "1f659fd99eb2d8fc45746f0c3716a07b",
          "sha256": "dd18d842a6af190dfde018972021f6e5b44aaa600bbff95dbf7877bdba1c891e"
        },
        "downloads": -1,
        "filename": "django_dataclasses-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f659fd99eb2d8fc45746f0c3716a07b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16785,
        "upload_time": "2021-11-29T19:38:23",
        "upload_time_iso_8601": "2021-11-29T19:38:23.502566Z",
        "url": "https://files.pythonhosted.org/packages/f9/4a/f17ed8e1b1890634b185592c9a73b1e0e37027cab7ff7d4ba11425b79335/django_dataclasses-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d1f91e17418d57be25577dc459702cf376711736a5a29e14e676d28a3c0649d",
          "md5": "a600bea078afdf0301d38c20c78f48cc",
          "sha256": "88d23919f715de8bd1410f27080dd40117931dad7058c28e2b71b252cf38b25e"
        },
        "downloads": -1,
        "filename": "django_dataclasses-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a600bea078afdf0301d38c20c78f48cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16787,
        "upload_time": "2021-11-30T22:06:31",
        "upload_time_iso_8601": "2021-11-30T22:06:31.427916Z",
        "url": "https://files.pythonhosted.org/packages/7d/1f/91e17418d57be25577dc459702cf376711736a5a29e14e676d28a3c0649d/django_dataclasses-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0ecacceb50165a1086ebb8ac8af005bc39bc1b0fe195ff419f78689e2dace19",
          "md5": "3dfd5038a179ee20c338f2b45a176d2d",
          "sha256": "3d32d8294ccc9424f8e10f7a17372487b8cfb71f2cd62720dc8b8ec241226c14"
        },
        "downloads": -1,
        "filename": "django_dataclasses-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3dfd5038a179ee20c338f2b45a176d2d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16801,
        "upload_time": "2021-12-01T18:27:51",
        "upload_time_iso_8601": "2021-12-01T18:27:51.733302Z",
        "url": "https://files.pythonhosted.org/packages/b0/ec/acceb50165a1086ebb8ac8af005bc39bc1b0fe195ff419f78689e2dace19/django_dataclasses-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b0435d2c0d70935e1fe1012187d972b385af11930a8d0e742057642fc1c2fd1",
          "md5": "78c05d6b1d697d77942994ef0de093cf",
          "sha256": "302923bf78e072bf1060577c64a2798544e5195e4ca0dbb6b98c3f3aa463efdb"
        },
        "downloads": -1,
        "filename": "django_dataclasses-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78c05d6b1d697d77942994ef0de093cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16810,
        "upload_time": "2021-12-01T19:17:02",
        "upload_time_iso_8601": "2021-12-01T19:17:02.640955Z",
        "url": "https://files.pythonhosted.org/packages/8b/04/35d2c0d70935e1fe1012187d972b385af11930a8d0e742057642fc1c2fd1/django_dataclasses-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92c9b549ea8aa6f22f9fce43f2da89cf84cd576866664130a285dc08a5058bb3",
          "md5": "c900639167504483f06b3c8cb5c73d5c",
          "sha256": "d95420893b3f75ff5a8bd7857f5662b8a8b9ac3f6b639951a13119e6d95d26de"
        },
        "downloads": -1,
        "filename": "django_dataclasses-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c900639167504483f06b3c8cb5c73d5c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16814,
        "upload_time": "2021-12-07T00:23:51",
        "upload_time_iso_8601": "2021-12-07T00:23:51.591405Z",
        "url": "https://files.pythonhosted.org/packages/92/c9/b549ea8aa6f22f9fce43f2da89cf84cd576866664130a285dc08a5058bb3/django_dataclasses-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b344d20440c15c270c1e26d18a9652607255d14169bbf60e3eb0495c8ae0b47f",
          "md5": "113905ed89311dbd393c6351a2aba4f0",
          "sha256": "1c66e1e0fdc73d09f65e71bd23211bc9155a3867e1ad4d0439433956a863d141"
        },
        "downloads": -1,
        "filename": "django_dataclasses-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "113905ed89311dbd393c6351a2aba4f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17109,
        "upload_time": "2021-12-07T17:41:26",
        "upload_time_iso_8601": "2021-12-07T17:41:26.748439Z",
        "url": "https://files.pythonhosted.org/packages/b3/44/d20440c15c270c1e26d18a9652607255d14169bbf60e3eb0495c8ae0b47f/django_dataclasses-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5272b31118dc7a09903959ad7ca4ed8c9cc4357ff7e87ac317d1b7f5535fce18",
          "md5": "be60239c08020652f7d90d92ab5a4826",
          "sha256": "a39de49f5429a09dbd70c5f573196328cfcbd2130bcb804152265925da49dc54"
        },
        "downloads": -1,
        "filename": "django_dataclasses-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be60239c08020652f7d90d92ab5a4826",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17355,
        "upload_time": "2021-12-07T17:49:14",
        "upload_time_iso_8601": "2021-12-07T17:49:14.460652Z",
        "url": "https://files.pythonhosted.org/packages/52/72/b31118dc7a09903959ad7ca4ed8c9cc4357ff7e87ac317d1b7f5535fce18/django_dataclasses-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac0d58cceee1a2fe2d4763a1e7d6507b219b377222e91838a4227bcc83275352",
          "md5": "42054a884b1fe617f7ccbf16766bec4e",
          "sha256": "2dcd8c0315882b4f5ef9fb59cc8e1d52fbf423fd8250f0ac7071f30cfc60e4ec"
        },
        "downloads": -1,
        "filename": "django_dataclasses-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42054a884b1fe617f7ccbf16766bec4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18932,
        "upload_time": "2022-01-05T18:21:49",
        "upload_time_iso_8601": "2022-01-05T18:21:49.764999Z",
        "url": "https://files.pythonhosted.org/packages/ac/0d/58cceee1a2fe2d4763a1e7d6507b219b377222e91838a4227bcc83275352/django_dataclasses-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d98a943f9b10f0b2793b0d1d6eb4954780a50ead076f59c674aae0a3b7ed3b84",
          "md5": "70b5e18b3592aa4eb33f98326d81484f",
          "sha256": "c02c3e5d6e7152bc5d9b4be410a2fb2a66c46966f35f07e8d5186fbf65e0a5e4"
        },
        "downloads": -1,
        "filename": "django_dataclasses-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70b5e18b3592aa4eb33f98326d81484f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17407,
        "upload_time": "2022-01-05T19:02:40",
        "upload_time_iso_8601": "2022-01-05T19:02:40.266841Z",
        "url": "https://files.pythonhosted.org/packages/d9/8a/943f9b10f0b2793b0d1d6eb4954780a50ead076f59c674aae0a3b7ed3b84/django_dataclasses-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "965281d7d2de5c02e0fcc6b6427fc7f091df3b41154aab9c4e15d2d01a513a89",
          "md5": "1a61a2aafde200f543d74a77c8073c9b",
          "sha256": "9bedaef7f6a86ba9aec113f9385488c5a403d23e3762c3101a28b03d58d6e56f"
        },
        "downloads": -1,
        "filename": "django_dataclasses-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a61a2aafde200f543d74a77c8073c9b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17994,
        "upload_time": "2022-02-08T18:23:38",
        "upload_time_iso_8601": "2022-02-08T18:23:38.032899Z",
        "url": "https://files.pythonhosted.org/packages/96/52/81d7d2de5c02e0fcc6b6427fc7f091df3b41154aab9c4e15d2d01a513a89/django_dataclasses-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8807dd6d8a2a7e49385a6e1e3d5195770acc213120855fb5b1539570666eb925",
          "md5": "f5edf94a2127d0fe8fb04fa6212ca1b3",
          "sha256": "9ef6ae57706f6ace95ac7262f706f69aa59b67199913cf10167522d85423acfb"
        },
        "downloads": -1,
        "filename": "django_dataclasses-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5edf94a2127d0fe8fb04fa6212ca1b3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17989,
        "upload_time": "2022-02-15T18:19:55",
        "upload_time_iso_8601": "2022-02-15T18:19:55.218050Z",
        "url": "https://files.pythonhosted.org/packages/88/07/dd6d8a2a7e49385a6e1e3d5195770acc213120855fb5b1539570666eb925/django_dataclasses-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8807dd6d8a2a7e49385a6e1e3d5195770acc213120855fb5b1539570666eb925",
        "md5": "f5edf94a2127d0fe8fb04fa6212ca1b3",
        "sha256": "9ef6ae57706f6ace95ac7262f706f69aa59b67199913cf10167522d85423acfb"
      },
      "downloads": -1,
      "filename": "django_dataclasses-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f5edf94a2127d0fe8fb04fa6212ca1b3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 17989,
      "upload_time": "2022-02-15T18:19:55",
      "upload_time_iso_8601": "2022-02-15T18:19:55.218050Z",
      "url": "https://files.pythonhosted.org/packages/88/07/dd6d8a2a7e49385a6e1e3d5195770acc213120855fb5b1539570666eb925/django_dataclasses-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}