{
  "info": {
    "author": "Soumil Nitin Shah",
    "author_email": "soushah@my.bridgeport.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "----------------------------------------\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000)]\n---------------------------\n\n\n# Elastic Search Mapping Generator   \n\n#### what is Elastic Search Mapping Generator  ?\n* For the past few months,Â i have been working on elastic search. I notice that it's hard to generate dynamic Query for elastic search it would be great if we had a class that can generate these complex queries. that's the reason I published an open-source library on PyPI that can generate these queries for youÂ \n* Link :  https://pypi.org/project/elasticsearchquerygenerator/\n* Similar approach i wanted to create something that can generate elastic search mapping as well \n\n\n## documentation :\n* UML Diagram \n\n![image](https://user-images.githubusercontent.com/39345855/96673304-36969f00-1334-11eb-8a2f-8a7d32762d9d.png)\n\n#### Constructor: \n    * number_of_shards: default shards is 1 \n    * number_of_replicas: default is 0 \n\n\n##### add_feilds(feild_name=None,type=None,index=True,keywords=True):\n\n* This is main method which does most of work for you \n\n#### type:\n* Type can be text for full text search see link for more details https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-types.html\n\n#### index : Default value is  True\n* The index option controls whether field values are indexed. It accepts true or false and defaults to true. Fields that are not indexed are not queryable. https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-index.html\n\n#### keywords : Default value is  True\n* Read more https://www.elastic.co/guide/en/elasticsearch/reference/current/keyword.html\n* if you dont want keywords set this to False\n\n\n## Installation\n\n```bash\npip install elasticsearchmappinggenerator\n```\n## Usage\n\n### Schema\n```json\n\n{\n    \"first_name\":\"Soumil  \",\n    \"last_name\":\"Shah\"\n}\n\n```\n\n```python\nfrom elasticsearchmappinggenerator.elasticsearchmappinggenerator import ElasticMappingGenerator\nimport json\n\ndef main():\n    _helper = ElasticMappingGenerator(number_of_replicas=1,number_of_shards=20)\n    _helper.add_feilds(feild_name='first_name', type='text', index=True, keywords=False)\n    _helper.add_feilds(feild_name='last_name', type='text', index=True)\n    query = _helper.complete_mappings()\n    print(json.dumps(query, indent=3))\n\nif __name__ == '__main__':\n    main()\n\n```\n### Output :\n```json\n{\n   \"settings\": {\n      \"index\": {\n         \"number_of_shards\": 20,\n         \"number_of_replicas\": 1\n      }\n   },\n   \"mappings\": {\n      \"properties\": {\n         \"name\": {\n            \"properties\": {\n               \"first_name\": {\n                  \"type\": \"text\",\n                  \"index\": true\n               },\n               \"last_name\": {\n                  \"type\": \"text\",\n                  \"index\": true,\n                  \"fields\": {\n                     \"keyword\": {\n                        \"type\": \"keyword\",\n                        \"ignore_above\": 256\n                     }\n                  }\n               }\n            }\n         }\n      }\n   }\n}\n\n```\n\n### Generating Nested Schema \n```json\n\n   {   \n        \"name\":\n            {\n                \"first_name\":\"Soumil  \",\n                \"last_name\":\"Shah\"\n\n            }\n\n    }\n```\n\n```python\n\ndef main():\n    _helper = ElasticMappingGenerator(number_of_replicas=1,number_of_shards=20)\n    _helper.add_feilds(feild_name='name.first_name', type='text', index=True, keywords=False)\n    _helper.add_feilds(feild_name='name.last_name', type='text', index=True)\n    query = _helper.complete_mappings()\n    print(json.dumps(query, indent=3))\n\nif __name__ == '__main__':\n    main()\n\n```\n\n#### output \n```json\n{\n   \"settings\": {\n      \"index\": {\n         \"number_of_shards\": 20,\n         \"number_of_replicas\": 1\n      }\n   },\n   \"mappings\": {\n      \"properties\": {\n         \"name\": {\n            \"properties\": {\n               \"first_name\": {\n                  \"type\": \"text\",\n                  \"index\": true\n               },\n               \"last_name\": {\n                  \"type\": \"text\",\n                  \"index\": true,\n                  \"fields\": {\n                     \"keyword\": {\n                        \"type\": \"keyword\",\n                        \"ignore_above\": 256\n                     }\n                  }\n               }\n            }\n         }\n      }\n   }\n}\n\n```\n\n##### i would be adding more examples and making it better and better \n\n## Authors\n\n## Soumil Nitin Shah \n\n* Excellent experience of building scalable and high-performance Software Applications combining distinctive skill sets in Internet of Things (IoT), Machine Learning and Full Stack Web Development in Python.\n\nBachelor in Electronic Engineering |\nMasters in Electrical Engineering | \nMaster in Computer Engineering |\n\n* Website : https://soumilshah.herokuapp.com\n* Github: https://github.com/soumilshah1995\n* Linkedin: https://www.linkedin.com/in/shah-soumil/\n* Blog: https://soumilshah1995.blogspot.com/\n* Youtube : https://www.youtube.com/channel/UC_eOodxvwS_H7x2uLQa-svw?view_as=subscriber\n* Facebook Page : https://www.facebook.com/soumilshah1995/\n* Email : shahsoumil519@gmail.com\n\n\n[![paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.me/soumilshah1995)\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/soumilshah1995/elasticsearch-mapping-generator",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "elasticsearchmappinggenerator",
    "package_url": "https://pypi.org/project/elasticsearchmappinggenerator/",
    "platform": "",
    "project_url": "https://pypi.org/project/elasticsearchmappinggenerator/",
    "project_urls": {
      "Homepage": "https://github.com/soumilshah1995/elasticsearch-mapping-generator"
    },
    "release_url": "https://pypi.org/project/elasticsearchmappinggenerator/2.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": " Generate Elastic Search Index Mapping Quickly with this helper class see examples on how to use it",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8463045,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a90ca38090102247ab9a1cb7ef5d6b9b606f7c382c27b3b69afe8a5819b3213a",
          "md5": "9ff348c3a44cdea5e4d38576daaa9572",
          "sha256": "c2c1fdb320373de465081ca94fc096ad06b5f691aea09e2a85ba827f4035f00c"
        },
        "downloads": -1,
        "filename": "elasticsearchmappinggenerator-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ff348c3a44cdea5e4d38576daaa9572",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16821,
        "upload_time": "2020-10-21T04:45:30",
        "upload_time_iso_8601": "2020-10-21T04:45:30.695526Z",
        "url": "https://files.pythonhosted.org/packages/a9/0c/a38090102247ab9a1cb7ef5d6b9b606f7c382c27b3b69afe8a5819b3213a/elasticsearchmappinggenerator-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1abc107cb16c01cac023b768e8294e965f4c17d00a20f1181181830b92c27117",
          "md5": "377765e3a600b66eb66733dddf05a759",
          "sha256": "28052574b19e970fe3498f2d7031cf2fe3b54c39450552ed8086420fc34f5e72"
        },
        "downloads": -1,
        "filename": "elasticsearchmappinggenerator-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "377765e3a600b66eb66733dddf05a759",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16843,
        "upload_time": "2020-10-21T04:48:32",
        "upload_time_iso_8601": "2020-10-21T04:48:32.606301Z",
        "url": "https://files.pythonhosted.org/packages/1a/bc/107cb16c01cac023b768e8294e965f4c17d00a20f1181181830b92c27117/elasticsearchmappinggenerator-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1abc107cb16c01cac023b768e8294e965f4c17d00a20f1181181830b92c27117",
        "md5": "377765e3a600b66eb66733dddf05a759",
        "sha256": "28052574b19e970fe3498f2d7031cf2fe3b54c39450552ed8086420fc34f5e72"
      },
      "downloads": -1,
      "filename": "elasticsearchmappinggenerator-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "377765e3a600b66eb66733dddf05a759",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16843,
      "upload_time": "2020-10-21T04:48:32",
      "upload_time_iso_8601": "2020-10-21T04:48:32.606301Z",
      "url": "https://files.pythonhosted.org/packages/1a/bc/107cb16c01cac023b768e8294e965f4c17d00a20f1181181830b92c27117/elasticsearchmappinggenerator-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}