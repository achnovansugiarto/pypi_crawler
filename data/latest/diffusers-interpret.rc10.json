{
  "info": {
    "author": "Joao Lages",
    "author_email": "joaop.glages@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<div align=\"center\">\n\n# Diffusers-Interpret ü§óüß®üïµÔ∏è‚Äç‚ôÄÔ∏è\n\n![PyPI Latest Package Version](https://img.shields.io/pypi/v/diffusers-interpret?logo=pypi&style=flat&color=orange) ![GitHub License](https://img.shields.io/github/license/JoaoLages/diffusers-interpret?logo=github&style=flat&color=green) \n\n`diffusers-interpret` is a model explainability tool built on top of [ü§ó Diffusers](https://github.com/huggingface/diffusers)\n</div>\n\n## Installation\n\nInstall directly from PyPI:\n\n    pip install --upgrade diffusers-interpret\n\n## Usage\n\nLet's see how we can interpret the **[new üé®üé®üé® Stable Diffusion](https://github.com/huggingface/diffusers#new--stable-diffusion-is-now-fully-compatible-with-diffusers)!**\n\n1. [Explanations for StableDiffusionPipeline](#explanations-for-stablediffusionpipeline)\n2. [Explanations for StableDiffusionImg2ImgPipeline](#explanations-for-stablediffusionimg2imgpipeline)\n3. [Explanations for StableDiffusionInpaintPipeline](#explanations-for-stablediffusioninpaintpipeline)\n\n### Explanations for StableDiffusionPipeline\n[![Open In Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/JoaoLages/diffusers-interpret/blob/main/notebooks/stable_diffusion_example_colab.ipynb)\n\n```python\nimport torch\nfrom contextlib import nullcontext\nfrom diffusers import StableDiffusionPipeline\nfrom diffusers_interpret import StableDiffusionPipelineExplainer\n\ndevice = 'cuda' if torch.cuda.is_available() else 'cpu'\n\npipe = StableDiffusionPipeline.from_pretrained(\n    \"CompVis/stable-diffusion-v1-4\", \n    use_auth_token=True,\n    \n    # FP16 is not working for 'cpu'\n    revision='fp16' if device != 'cpu' else None,\n    torch_dtype=torch.float16 if device != 'cpu' else None\n).to(device)\n\n# optional: reduce memory requirement with a speed trade off \npipe.enable_attention_slicing()\n\n# pass pipeline to the explainer class\nexplainer = StableDiffusionPipelineExplainer(pipe)\n\n# generate an image with `explainer`\nprompt = \"A cute corgi with the Eiffel Tower in the background\"\nwith torch.autocast('cuda') if device == 'cuda' else nullcontext():\n    output = explainer(\n        prompt, \n        num_inference_steps=15\n    )\n```\n\nIf you are having GPU memory problems, try reducing `n_last_diffusion_steps_to_consider_for_attributions`, `height`, `width` and/or `num_inference_steps`.\n```\noutput = explainer(\n    prompt, \n    num_inference_steps=15,\n    height=448,\n    width=448,\n    n_last_diffusion_steps_to_consider_for_attributions=5\n)\n```\n\nYou can completely deactivate token/pixel attributions computation by passing `n_last_diffusion_steps_to_consider_for_attributions=0`.  \n\nGradient checkpointing also reduces GPU usage, but makes computations a bit slower:\n```\nexplainer = StableDiffusionPipelineExplainer(pipe, gradient_checkpointing=True)\n```\n\nTo see the final generated image:\n```python\noutput.image\n```\n\n![](assets/corgi_eiffel_tower.png)\n\nYou can also check all the images that the diffusion process generated at the end of each step:\n```python\noutput.all_images_during_generation.show()\n```\n![](assets/image_slider_cropped.gif)\n\nTo analyse how a token in the input `prompt` influenced the generation, you can study the token attribution scores:\n```python\n>>> output.token_attributions # (token, attribution)\n[('a', 1063.0526),\n ('cute', 415.62888),\n ('corgi', 6430.694),\n ('with', 1874.0208),\n ('the', 1223.2847),\n ('eiffel', 4756.4556),\n ('tower', 4490.699),\n ('in', 2463.1294),\n ('the', 655.4624),\n ('background', 3997.9395)]\n```\n\nOr their computed normalized version, in percentage:\n```python\n>>> output.token_attributions.normalized # (token, attribution_percentage)\n[('a', 3.884),\n ('cute', 1.519),\n ('corgi', 23.495),\n ('with', 6.847),\n ('the', 4.469),\n ('eiffel', 17.378),\n ('tower', 16.407),\n ('in', 8.999),\n ('the', 2.395),\n ('background', 14.607)]\n```\n\nYou can also view token attributions as a plot!\n```python\noutput.token_attributions.plot(normalize=True)\n```\n![](assets/token_attributions_1.png)\n\n`diffusers-interpret` also computes these token/pixel attributions for generating a particular part of the image. \n\nTo do that, call `explainer` with a particular 2D bounding box defined in `explanation_2d_bounding_box`:\n\n```python\nwith torch.autocast('cuda') if device == 'cuda' else nullcontext():\n    output = explainer(\n        prompt, \n        num_inference_steps=15, \n        explanation_2d_bounding_box=((70, 180), (400, 435)), # (upper left corner, bottom right corner)\n    )\noutput.image\n```\n![](assets/corgi_eiffel_tower_box_1.png)\n\nThe generated image now has a <span style=\"color:red\"> **red bounding box** </span> to indicate the region of the image that is being explained.\n\nThe attributions are now computed only for the area specified in the image.\n\n```python\n>>> output.token_attributions.normalized # (token, attribution_percentage)\n[('a', 1.891),\n ('cute', 1.344),\n ('corgi', 23.115),\n ('with', 11.995),\n ('the', 7.981),\n ('eiffel', 5.162),\n ('tower', 11.603),\n ('in', 11.99),\n ('the', 1.87),\n ('background', 23.05)]\n```\n\n### Explanations for StableDiffusionImg2ImgPipeline\n[![Open In Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/JoaoLages/diffusers-interpret/blob/main/notebooks/stable_diffusion_img2img_example.ipynb)\n\n```python\nimport torch\nimport requests\nfrom PIL import Image\nfrom io import BytesIO\nfrom diffusers import StableDiffusionImg2ImgPipeline\nfrom diffusers_interpret import StableDiffusionImg2ImgPipelineExplainer\n\n\npipe = StableDiffusionImg2ImgPipeline.from_pretrained(\n    \"CompVis/stable-diffusion-v1-4\", \n    use_auth_token=True,\n).to('cuda')\n\nexplainer = StableDiffusionImg2ImgPipelineExplainer(pipe)\n\nprompt = \"A fantasy landscape, trending on artstation\"\n\n# let's download an initial image\nurl = \"https://raw.githubusercontent.com/CompVis/stable-diffusion/main/assets/stable-samples/img2img/sketch-mountains-input.jpg\"\n\nresponse = requests.get(url)\ninit_image = Image.open(BytesIO(response.content)).convert(\"RGB\")\ninit_image = init_image.resize((448, 448))\n\nwith torch.autocast('cuda'):\n    output = explainer(\n        prompt=prompt, init_image=init_image, strength=0.75\n    )\n```\n\n`output` will have all the properties that were presented for [StableDiffusionPipeline](#explanations-for-stablediffusionpipeline).\nFor example, to see the gif version of all the images during generation:\n```python\noutput.all_images_during_generation.gif()\n```\n![](assets/img2img_1.gif)\n\nAdditionally, it is also possible to visualize pixel attributions of the input image as a saliency map:\n```python\noutput.input_saliency_map.show()\n```\n![](assets/pixel_attributions_1.png)\n\nor access their values directly:\n```python\n>>> output.pixel_attributions\narray([[ 1.2714844 ,  4.15625   ,  7.8203125 , ...,  2.7753906 ,\n         2.1308594 ,  0.66552734],\n       [ 5.5078125 , 11.1953125 ,  4.8125    , ...,  5.6367188 ,\n         6.8828125 ,  3.0136719 ],\n       ...,\n       [ 0.21386719,  1.8867188 ,  2.2109375 , ...,  3.0859375 ,\n         2.7421875 ,  0.7871094 ],\n       [ 0.85791016,  0.6694336 ,  1.71875   , ...,  3.8496094 ,\n         1.4589844 ,  0.5727539 ]], dtype=float32)\n```\nor the normalized version:\n```python\n>>> output.pixel_attributions.normalized \narray([[7.16054201e-05, 2.34065039e-04, 4.40411852e-04, ...,\n        1.56300011e-04, 1.20002325e-04, 3.74801020e-05],\n       [3.10180156e-04, 6.30479713e-04, 2.71022669e-04, ...,\n        3.17439699e-04, 3.87615233e-04, 1.69719147e-04],\n       ...,\n       [1.20442292e-05, 1.06253210e-04, 1.24512037e-04, ...,\n        1.73788882e-04, 1.54430119e-04, 4.43271674e-05],\n       [4.83144104e-05, 3.77000870e-05, 9.67938031e-05, ...,\n        2.16796136e-04, 8.21647482e-05, 3.22554370e-05]], dtype=float32)\n```\n\n**Note:** Passing `explanation_2d_bounding_box` to the `explainer` will also change these values to explain a specific part of the **output** image. \n<ins>The attributions are always calculated for the model's input (image and text) with respect to the output image.</ins>\n\n### Explanations for StableDiffusionInpaintPipeline\n[![Open In Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/JoaoLages/diffusers-interpret/blob/main/notebooks/stable_diffusion_inpaint_example.ipynb)\n\nSame as [StableDiffusionImg2ImgPipeline](#explanations-for-stablediffusionimg2imgpipeline), but now we also pass a `mask_image` argument to `explainer`.\n\n```python\nimport torch\nimport requests\nfrom PIL import Image\nfrom io import BytesIO\nfrom diffusers import StableDiffusionInpaintPipeline\nfrom diffusers_interpret import StableDiffusionInpaintPipelineExplainer\n\n\ndef download_image(url):\n    response = requests.get(url)\n    return Image.open(BytesIO(response.content)).convert(\"RGB\")\n\n\npipe = StableDiffusionInpaintPipeline.from_pretrained(\n    \"CompVis/stable-diffusion-v1-4\", \n    use_auth_token=True,\n).to('cuda')\n\nexplainer = StableDiffusionInpaintPipelineExplainer(pipe)\n\nprompt = \"a cat sitting on a bench\"\n\nimg_url = \"https://raw.githubusercontent.com/CompVis/latent-diffusion/main/data/inpainting_examples/overture-creations-5sI6fQgYIuo.png\"\nmask_url = \"https://raw.githubusercontent.com/CompVis/latent-diffusion/main/data/inpainting_examples/overture-creations-5sI6fQgYIuo_mask.png\"\n\ninit_image = download_image(img_url).resize((448, 448))\nmask_image = download_image(mask_url).resize((448, 448))\n\nwith torch.autocast('cuda'):\n    output = explainer(\n        prompt=prompt, init_image=init_image, mask_image=mask_image, strength=0.75\n    )\n```\n\n`output` will have all the properties that were presented for [StableDiffusionImg2ImgPipeline](#explanations-for-stablediffusionimg2imgpipeline) and [StableDiffusionPipeline](#explanations-for-stablediffusionpipeline).  \nFor example, to see the gif version of all the images during generation:\n```python\noutput.all_images_during_generation.gif()\n```\n![](assets/inpaint_1.gif)\n\nThe only difference in `output` now, is that we can now see the masked part of the image:\n```python\noutput.input_saliency_map.show()\n```\n![](assets/pixel_attributions_inpaint_1.png)\n\nCheck other functionalities and more implementation examples in [here](https://github.com/JoaoLages/diffusers-interpret/blob/main/notebooks/).\n\n## Future Development\n- [x] ~~Add interactive display of all the images that were generated in the diffusion process~~\n- [x] ~~Add explainer for StableDiffusionImg2ImgPipeline~~\n- [x] ~~Add explainer for StableDiffusionInpaintPipeline~~\n- [ ] Add attentions visualization \n- [ ] Add unit tests\n- [ ] Website for documentation\n- [ ] Do not require another generation every time the `explanation_2d_bounding_box` argument is changed\n- [ ] Add interactive bounding-box and token attributions visualization\n- [ ] Add more explainability methods\n\n## Contributing\nFeel free to open an [Issue](https://github.com/JoaoLages/diffusers-interpret/issues) or create a [Pull Request](https://github.com/JoaoLages/diffusers-interpret/pulls) and let's get started üöÄ\n\n## Credits\n\nA special thanks to:\n- [@andrewizbatista](https://github.com/andrewizbatista) for creating a great [image slider](https://github.com/JoaoLages/diffusers-interpret/pull/1) to show all the generated images during diffusion! üí™ \n- [@TomPham97](https://github.com/TomPham97) for README improvements and the [GIF visualization](https://github.com/JoaoLages/diffusers-interpret/pull/9) üòÅ\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JoaoLages/diffusers-interpret",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "diffusers-interpret",
    "package_url": "https://pypi.org/project/diffusers-interpret/",
    "platform": null,
    "project_url": "https://pypi.org/project/diffusers-interpret/",
    "project_urls": {
      "Homepage": "https://github.com/JoaoLages/diffusers-interpret"
    },
    "release_url": "https://pypi.org/project/diffusers-interpret/0.5.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "diffusers-interpret: model explainability for ü§ó Diffusers",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15107367,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "334a7f2e8dcd3d4e1d097fed388f6cc191714cac1593f5de6ca170d85a82ea1f",
          "md5": "95f3cbf3e731dd39a311d387ac76f398",
          "sha256": "41cd7288420136be4e86263e6fea760d8931c733126e636c52e1e8becbe25bf7"
        },
        "downloads": -1,
        "filename": "diffusers-interpret-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "95f3cbf3e731dd39a311d387ac76f398",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8824,
        "upload_time": "2022-08-29T14:44:17",
        "upload_time_iso_8601": "2022-08-29T14:44:17.381998Z",
        "url": "https://files.pythonhosted.org/packages/33/4a/7f2e8dcd3d4e1d097fed388f6cc191714cac1593f5de6ca170d85a82ea1f/diffusers-interpret-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9821aef709a40dd3768693ccb5b7cc7b1507f488e7a7e4fd66707bc3c6a24279",
          "md5": "d22aa0613eab9128d74f897f8c203bf9",
          "sha256": "f25c5221f828ff2a9c1f275f10f9b0518ffddc3e8b261938982f845d18f2e7f2"
        },
        "downloads": -1,
        "filename": "diffusers-interpret-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d22aa0613eab9128d74f897f8c203bf9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11643,
        "upload_time": "2022-08-29T15:12:55",
        "upload_time_iso_8601": "2022-08-29T15:12:55.310867Z",
        "url": "https://files.pythonhosted.org/packages/98/21/aef709a40dd3768693ccb5b7cc7b1507f488e7a7e4fd66707bc3c6a24279/diffusers-interpret-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae9371b38f766c739fc87c304aac0291c73e77b0e17e7fd72d1fae910716eb46",
          "md5": "68c2a68a7546e81c8fae22c600a84f35",
          "sha256": "b2b475d376aa6d13e82a7680391a13463cecc2dd29a86270648e463f2d09ca3b"
        },
        "downloads": -1,
        "filename": "diffusers-interpret-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "68c2a68a7546e81c8fae22c600a84f35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13269,
        "upload_time": "2022-09-01T17:15:59",
        "upload_time_iso_8601": "2022-09-01T17:15:59.295511Z",
        "url": "https://files.pythonhosted.org/packages/ae/93/71b38f766c739fc87c304aac0291c73e77b0e17e7fd72d1fae910716eb46/diffusers-interpret-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4f39ee11b3af33a3145b5d9bffe48f4f5f3f14c54bfae7b3d9860f250089059",
          "md5": "9ccd33568f0b9aa97f9f87a197eaf11d",
          "sha256": "60602e55d74c5402f4a6e267ec74a61e759e5de9b921678b6ebff1aa6eaace5c"
        },
        "downloads": -1,
        "filename": "diffusers-interpret-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9ccd33568f0b9aa97f9f87a197eaf11d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16857,
        "upload_time": "2022-09-05T17:50:39",
        "upload_time_iso_8601": "2022-09-05T17:50:39.745723Z",
        "url": "https://files.pythonhosted.org/packages/a4/f3/9ee11b3af33a3145b5d9bffe48f4f5f3f14c54bfae7b3d9860f250089059/diffusers-interpret-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d4d8e09c672d7f364f9ca2cdc8cc9e564dc9f90d8a0d999f5e95be2c84d6495",
          "md5": "f03b8d291b88e040879d59414e2f006a",
          "sha256": "f0029a5ff2970f5a4b6532cf067a5dec1b46d66deca5dcc406bba0b264990011"
        },
        "downloads": -1,
        "filename": "diffusers-interpret-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f03b8d291b88e040879d59414e2f006a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16846,
        "upload_time": "2022-09-05T18:24:43",
        "upload_time_iso_8601": "2022-09-05T18:24:43.422874Z",
        "url": "https://files.pythonhosted.org/packages/6d/4d/8e09c672d7f364f9ca2cdc8cc9e564dc9f90d8a0d999f5e95be2c84d6495/diffusers-interpret-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f8883df44f0987edd82116ff9b002c3f4f4f3e01bdb8c2b3830232953c79480",
          "md5": "092d97f1916faccc6623cfec415725c9",
          "sha256": "abaaf22d5ba419f6fda4787c30724b93251b9b28430640af20d15c31c818f8d8"
        },
        "downloads": -1,
        "filename": "diffusers-interpret-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "092d97f1916faccc6623cfec415725c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17003,
        "upload_time": "2022-09-06T13:54:32",
        "upload_time_iso_8601": "2022-09-06T13:54:32.448259Z",
        "url": "https://files.pythonhosted.org/packages/0f/88/83df44f0987edd82116ff9b002c3f4f4f3e01bdb8c2b3830232953c79480/diffusers-interpret-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98e8fc82d437ac2858494a28a68e3d9e27199d26e72751632df95433d233e5b4",
          "md5": "596efa942616e24c1fcbeb23c75420d2",
          "sha256": "ae695bea6432315cddb87bf615a4560ce76f9fa88d933876f53f670e032346a8"
        },
        "downloads": -1,
        "filename": "diffusers-interpret-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "596efa942616e24c1fcbeb23c75420d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18188,
        "upload_time": "2022-09-09T11:15:29",
        "upload_time_iso_8601": "2022-09-09T11:15:29.223452Z",
        "url": "https://files.pythonhosted.org/packages/98/e8/fc82d437ac2858494a28a68e3d9e27199d26e72751632df95433d233e5b4/diffusers-interpret-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4b8aa1ac93c7378a19e26680bbe5cc24256c8b818a2d9cf9f585941382bb7ac",
          "md5": "5871ab60b1fae6adf44a69c0d9c935b0",
          "sha256": "35c5f6b81fed0bcbf3cefe6ceff07ac92faf645aea90b2b0b16885e3fee8918e"
        },
        "downloads": -1,
        "filename": "diffusers-interpret-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5871ab60b1fae6adf44a69c0d9c935b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18201,
        "upload_time": "2022-09-10T23:34:38",
        "upload_time_iso_8601": "2022-09-10T23:34:38.787793Z",
        "url": "https://files.pythonhosted.org/packages/d4/b8/aa1ac93c7378a19e26680bbe5cc24256c8b818a2d9cf9f585941382bb7ac/diffusers-interpret-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e916b4dd6ac117d2303e25aaa165f7dcf307b7cfb20c9462304edd05240f4b22",
          "md5": "b2a14dc2cecf0e08bd66927d425c7b2e",
          "sha256": "90c84c16d1318588e8322650c3420dc2c7060805120ba1fec12fbc3b0c39210c"
        },
        "downloads": -1,
        "filename": "diffusers-interpret-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b2a14dc2cecf0e08bd66927d425c7b2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27901,
        "upload_time": "2022-09-12T14:59:30",
        "upload_time_iso_8601": "2022-09-12T14:59:30.373892Z",
        "url": "https://files.pythonhosted.org/packages/e9/16/b4dd6ac117d2303e25aaa165f7dcf307b7cfb20c9462304edd05240f4b22/diffusers-interpret-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea6dccf2a8ac1d8d0744d14210ae5c0e4f494fa4fe992b854364090a5e6bea32",
          "md5": "c5a280e9f293fedcfc9f891a0ebd15f9",
          "sha256": "67a9d9f27b45abe43fa9b2e58b4e79bd5fd849c855c9a4c344a938e807845ab4"
        },
        "downloads": -1,
        "filename": "diffusers-interpret-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c5a280e9f293fedcfc9f891a0ebd15f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29340,
        "upload_time": "2022-09-15T17:21:40",
        "upload_time_iso_8601": "2022-09-15T17:21:40.719858Z",
        "url": "https://files.pythonhosted.org/packages/ea/6d/ccf2a8ac1d8d0744d14210ae5c0e4f494fa4fe992b854364090a5e6bea32/diffusers-interpret-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea6dccf2a8ac1d8d0744d14210ae5c0e4f494fa4fe992b854364090a5e6bea32",
        "md5": "c5a280e9f293fedcfc9f891a0ebd15f9",
        "sha256": "67a9d9f27b45abe43fa9b2e58b4e79bd5fd849c855c9a4c344a938e807845ab4"
      },
      "downloads": -1,
      "filename": "diffusers-interpret-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c5a280e9f293fedcfc9f891a0ebd15f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 29340,
      "upload_time": "2022-09-15T17:21:40",
      "upload_time_iso_8601": "2022-09-15T17:21:40.719858Z",
      "url": "https://files.pythonhosted.org/packages/ea/6d/ccf2a8ac1d8d0744d14210ae5c0e4f494fa4fe992b854364090a5e6bea32/diffusers-interpret-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}