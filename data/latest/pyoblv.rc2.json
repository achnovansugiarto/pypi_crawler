{
  "info": {
    "author": "Oblivious",
    "author_email": "hello@oblivious.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# PyOblv\n\nA Python library to access Oblivious OpenAPIs.\n\n## Usage\n\nFirst, create a client, with your API key. This key can be created in the\n[Oblivious Console UI](https://console.oblivious.ai/). Go to the\nsettings page, and create your ApiKey. Once done, the client can be\ncreated as follows\n\n``` {.python}\nfrom oblv import authenticate\nclient = authenticate(apikey=*your_key_here*)\n```\n\n\nUsing this client, all the Oblivious actions can be performed, including the deployment of enclaves. Below is a step-by-step guide, to creating your first deployment.\n\n\n\n### 1 Create a service\n\nA service refers to a branch/tag of your repository that needs to be\ndeployed. For your first service. you can use the repository\n[ObliviousAI/FastAPI-Enclave-Services](https://github.com/ObliviousAI/FastAPI-Enclave-Services).\nExecute the below command to create the service.\n\n``` {.python}\nclient.add_service(repo_owner=\"ObliviousAI\",repo_name=\"FastAPI-Enclave-Services\", ref=\"master\", data = {\n    \"auth\": [\n        {\n            \"auth_name\": \"auth_name\",\n            \"auth_type\": \"signed_headers\"\n        }\n    ],\n    \"base_image\": \"oblv_ubuntu_18_04_proxy_nsm_api_python_3_8\",\n    \"build_args\": [],\n    \"meta\": {\n        \"author\": \"Team Oblivious\",\n        \"author_email\": \"hello@oblivious.ai\",\n        \"git\": \"https://github.com/ObliviousAI/FastAPI-Enclave-Services.git\",\n        \"version\": \"0.1.0\"\n    },\n    \"paths\": [\n        {\n            \"access\": \"user\",\n            \"path\": \"/hello/\",\n            \"short_description\": \"Hello world example\"\n        }\n    ],\n    \"roles\": [\n        {\n            \"role_auth\": \"auth_name\",\n            \"role_cardinality\": 1,\n            \"role_description\": \"Role for the data scientist\",\n            \"role_name\": \"user\"\n        }\n    ],\n    \"traffic\": {\n        \"inbound\": [\n            {\n                \"name\": \"main_io\",\n                \"port\": 80,\n                \"type\": \"tcp\"\n            }\n        ],\n        \"outbound\": [\n            {\n                \"domain\": \"example.com\",\n                \"name\": \"example\",\n                \"port\": 443,\n                \"type\": \"tcp\"\n            }\n        ]\n    }\n})\n```\n\nThe data provided here is sample service data. You can update the data as per your requirements, adhering to the schema.\nThe response for the call above gives results as follows - \n\n\n>{ \\\n>&nbsp;&nbsp;&nbsp;&nbsp;\"message\": \"Success\", \\\n>&nbsp;&nbsp;&nbsp;&nbsp;\"service\":&nbsp;&nbsp;&nbsp;&nbsp;{ \\\n>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"ref\": \"master\", \\\n>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"service_validated\": true, \\\n>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"sha\": \"6b1b3e9cf6b0cb7264aad2fc80d91a009ccf0fc1\", \\\n>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"type\": \"branch\" \\\n>&nbsp;&nbsp;&nbsp;&nbsp;} \\\n>} \n\n\nYou have now successfully created your first service, and it can be now deployed to an enclave.\n\n### 2 Enclave Creation\n\nTo create an enclave, you need to decide on a few of the parameters -\n\n-   **deployment_name** - A unique deployment name. You cannot have two\n    running deployments with the same name.\n-   **region_name** - could be one of the AWS regions from\n    - ***us-east-1*** (N. Virginia) \n    - ***us-west-2*** (Oregon)\n    - ***eu-central-1*** (Frankfurt)\n    - ***eu-west-2*** (London)\n-   **visibility** - ***private*** or ***public***\n-   **is_dev_env** - ***True*** or ***False***.\n-   **tags** - A list of tags for your deployment\n-   **account_type** - This is the VCS type, and only GitHub*** is\n    supported for now.\n-   **build_args** - Arguments specific to your deployment. It includes adding users to their roles with their public keys, runtime arguments and\n    any additional arguments for your build. It also includes the infra\n    size needed for the deployment. The options are -\n    -   ***c5.xlarge*** - CPU:4 RAM:8 GB \\-- Credit Utilization: 68.0/hr\n    -   ***m5.xlarge*** - CPU:4 RAM:16 GB \\-- Credit Utilization:\n        76.8/hr\n    -   ***r5.xlarge*** - CPU:4 RAM:32 GB \\-- Credit Utilization:\n        100.8/hr\n    -   ***c5.2xlarge*** - CPU:8 RAM:16 GB \\-- Credit Utilization:\n        136.0/hr\n    -   ***m5.2xlarge*** - CPU:8 RAM:32 GB \\-- Credit Utilization:\n        153.6/hr\n\nA valid example for *build_args* for the service you created -\n\n\n```\nargs = {\n    \"users\": {\n      \"admin\": [\n        {\n          \"user_name\": \"<your name>\",\n          \"public key\": \"<your public key>\"\n        }\n      ]\n    },\n    \"infra_reqs\": \"m5.xlarge\",  \n}\n\n```\n\n> 📝 **Note:**\n>\n> <b>admin</b> here\n> is the role defined for the deployment in service.yaml\n> file\n>\n> The service used,\n> does not have requirements for any runtime or build arguments, so not\n> needed here.\n\n``` {.python}\nfrom oblv.models import CreateDeploymentInput\ninput = CreateDeploymentInput(\n    owner=\"ObliviousAI\",\n    repo=\"FastAPI-Enclave-Services\",\n    account_type=\"github\",\n    ref=\"master\",\n    ref_type=\"branch\",\n    region_name=\"us-east-1\",\n    deployment_name=\"Depl\",\n    visibility=\"private\",\n    is_dev_env=True,\n    tags=[],\n    build_args=args\n)\nresponse = client.create_deployment(input)\n```\n\n\nOn successful request, enclave creation is initiated, and it returns an\nid for the deployment, which can be later used to track the status and\nconnection details for the enclave.\n\nTo check the state of the deployment, run\n\n``` {.python}\nclient.deployment_info(response.deployment_id).current_state\n```\n\n> 'CFT Initiated'\n\n\nWhen the deployment state becomes ***Running***, it indicates that the\nenclave is now available for connection.\n\nTo connect to the enclave, you need **Oblv CLI** installed in your\nsystem. The commands to use the CLI can be found in this\n[documentation](https://docs.oblivious.ai/cli/usage_examples).\n\nCli binaries can be found [here](https://docs.oblivious.ai/cli/binaries)\n\nThe URL to connect to the enclave using CLI can be accessed using\n\n``` {.python}\nclient.deployment_info(response.deployment_id).instance.service_url\n```\n\n>\n>'https://conso-appli-15aiaxip9pcxk-94364694.enclave.oblivious.ai'\n>\n\n\nThe PCR codes can be found using\n\n``` {.python}\nclient.deployment_info(response.deployment_id).pcr_codes\n```\n\n>['d8dd856bacf4a8f0840ab530579b906091803e818e01dc4b8f51c247a7adfcfe55b4ef5f17be6d53bb952d92d87a376c',\n'bcdf05fefccaa8e55bf2c8d6dee9e79bbff31e34bf28a99aa19e6b29c37ee80b214a414b7607236edf26fcb78654e63f','79477bad9504a347afb557a8ccd6f62ea61243311dff39f66944f5150242128da0cd070f0ce629c6beb6bb4f0b52f5ed' ]\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ObliviousAI/PyOblv",
    "keywords": "Oblivious python package",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyOblv",
    "package_url": "https://pypi.org/project/PyOblv/",
    "platform": null,
    "project_url": "https://pypi.org/project/PyOblv/",
    "project_urls": {
      "Documentation": "https://github.com/ObliviousAI/PyOblv/tree/master/README.md",
      "Homepage": "https://github.com/ObliviousAI/PyOblv",
      "Source": "https://github.com/ObliviousAI/PyOblv",
      "Tracker": "https://github.com/ObliviousAI/PyOblv/issues"
    },
    "release_url": "https://pypi.org/project/PyOblv/0.2.0/",
    "requires_dist": [
      "httpx (<0.24.0,>=0.15.0)",
      "attrs (>=21.3.0)",
      "python-dateutil (<3,>=2.8.0)",
      "jsonschema (>=4.1.1)",
      "typer (>=0.7.0)",
      "rich (>=11.2.0)",
      "requests"
    ],
    "requires_python": ">=3.7, <4",
    "summary": "A client library for accessing Oblivious OpenAPIs",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17010781,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "636df3b9e57ba1cd525f5eb2f17d536d044e19cdc26c0b48b9427948556c14f2",
          "md5": "8a2d637676eaae7eaac6aac2b325425a",
          "sha256": "badfb3e25f26c772724bd3e616342cfcf59668656bc6be1c5ab6b08e4a7280ef"
        },
        "downloads": -1,
        "filename": "PyOblv-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a2d637676eaae7eaac6aac2b325425a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 138520,
        "upload_time": "2022-12-14T12:28:20",
        "upload_time_iso_8601": "2022-12-14T12:28:20.855129Z",
        "url": "https://files.pythonhosted.org/packages/63/6d/f3b9e57ba1cd525f5eb2f17d536d044e19cdc26c0b48b9427948556c14f2/PyOblv-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0248d01323106a169eb5931279fd2e8d7f714e7d133b3abc8edda3e4ff7e1c5d",
          "md5": "8e02e6cf613e60327bd444fdd30a210a",
          "sha256": "040a0f7ab22bcff7661c2fe1f76f51e7bbcf915a003e25bef80189df86df4d61"
        },
        "downloads": -1,
        "filename": "PyOblv-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8e02e6cf613e60327bd444fdd30a210a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 44844,
        "upload_time": "2022-12-14T12:28:23",
        "upload_time_iso_8601": "2022-12-14T12:28:23.451966Z",
        "url": "https://files.pythonhosted.org/packages/02/48/d01323106a169eb5931279fd2e8d7f714e7d133b3abc8edda3e4ff7e1c5d/PyOblv-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17120a788a873a8f5baeb0916fcbeda0e18515d4fd2da741784d4ea70f35d241",
          "md5": "bacdc478288e238ff9531f8fb546cb2f",
          "sha256": "46fa1ba1e009f670176a7d9428aa13ddef20e9ad1ed41ab4b8d900aed3f3cd32"
        },
        "downloads": -1,
        "filename": "PyOblv-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bacdc478288e238ff9531f8fb546cb2f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 142523,
        "upload_time": "2023-02-24T12:46:55",
        "upload_time_iso_8601": "2023-02-24T12:46:55.601864Z",
        "url": "https://files.pythonhosted.org/packages/17/12/0a788a873a8f5baeb0916fcbeda0e18515d4fd2da741784d4ea70f35d241/PyOblv-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c42c4d5e60df173cf3a9b091eb0f2e73cea127159ca85e6e9574eaab5a9f977",
          "md5": "9b870cf164c6fbb26fe55b4d8e9ee69c",
          "sha256": "d23c0228a45ad9eeb60c9d719772c3244ad664901720d0b518822b81e0a0484c"
        },
        "downloads": -1,
        "filename": "PyOblv-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9b870cf164c6fbb26fe55b4d8e9ee69c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 46563,
        "upload_time": "2023-02-24T12:46:57",
        "upload_time_iso_8601": "2023-02-24T12:46:57.759978Z",
        "url": "https://files.pythonhosted.org/packages/9c/42/c4d5e60df173cf3a9b091eb0f2e73cea127159ca85e6e9574eaab5a9f977/PyOblv-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17120a788a873a8f5baeb0916fcbeda0e18515d4fd2da741784d4ea70f35d241",
        "md5": "bacdc478288e238ff9531f8fb546cb2f",
        "sha256": "46fa1ba1e009f670176a7d9428aa13ddef20e9ad1ed41ab4b8d900aed3f3cd32"
      },
      "downloads": -1,
      "filename": "PyOblv-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bacdc478288e238ff9531f8fb546cb2f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 142523,
      "upload_time": "2023-02-24T12:46:55",
      "upload_time_iso_8601": "2023-02-24T12:46:55.601864Z",
      "url": "https://files.pythonhosted.org/packages/17/12/0a788a873a8f5baeb0916fcbeda0e18515d4fd2da741784d4ea70f35d241/PyOblv-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c42c4d5e60df173cf3a9b091eb0f2e73cea127159ca85e6e9574eaab5a9f977",
        "md5": "9b870cf164c6fbb26fe55b4d8e9ee69c",
        "sha256": "d23c0228a45ad9eeb60c9d719772c3244ad664901720d0b518822b81e0a0484c"
      },
      "downloads": -1,
      "filename": "PyOblv-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9b870cf164c6fbb26fe55b4d8e9ee69c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 46563,
      "upload_time": "2023-02-24T12:46:57",
      "upload_time_iso_8601": "2023-02-24T12:46:57.759978Z",
      "url": "https://files.pythonhosted.org/packages/9c/42/c4d5e60df173cf3a9b091eb0f2e73cea127159ca85e6e9574eaab5a9f977/PyOblv-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}