{
  "info": {
    "author": "mhamdan91 (Hamdan, Muhammad)",
    "author_email": "<mhamdan.dev@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "Custom XML to Dict Parser\n==============================\n## Table of Contents\n\n * [Overview](#overview)\n * [Library Installalion](#library-installalion)\n * [Library Usage](#library-usage)\n * [Config file](#config-file)\n\n\n## Overview\nThis package allows you to parse XML files. The tool uses the `xml2dict` package to parse XML files in raw format and returns data as a python dictionary and builds on that to provide custom tailoring of what information to return from the XML file. In other words, with a configuration file, you can return specific data from the XML file in a specific format.\n\n## Library Installalion\nTo install the library simply run the following command in a cmd, shell or whatever...\n\n```bash\n# It's recommended to create a virtual environment\n\n# Windows\npip install CustomXMLParser\n\n# Linux\npip3 install CustomXMLParser\n```\n\n## Library usage?\n\n### Example usage\nIf you wish to read the XML file as is and simply convert it to a python dictionary, then do the following:\n```python\nfrom CustomXMLParser import XmlParser\n\nxml_parser = XmlParser(parser_type='raw')\nxml_file = 'path_to_xml_file'\nxml_dict = xml_parser.parse(xml_file)\n```\n\nIf you wish to read specific portions of the XML file and format them in a particular way, then do the following:\n```python\nfrom CustomXMLParser import XmlParser\n\nconfig_file = 'path_to_config_file'\nxml_parser = XmlParser(config_file=config_file, parser_type='custom')\nxml_file = 'path_to_xml_file'\nxml_dict = xml_parser.parse(xml_file)\n```\n\nNote, the `XmlParser` class uses the following default XML attributes\n\n```python\n'''\nname_key (str, optional): this is a custom/xml configuration parameter, and it is the name of primary tag. Defaults to \"@name\".\ntable_key (str, optional): this is a custom/xml configuration parameter, and it is the table identifier. Defaults to \"th\".\nheader_key (str, optional): this is a custom/xml configuration parameter, and it is the header identifier. Defaults to 'header'.\ndata_key (str, optional): this is a custom/xml configuration parameter, and it is the data identifier. Defaults to \"rows\".\nheader_text_key (str, optional): this is a custom/xml configuration parameter, and it is the table's key identifier. Defaults to \"#text\".\n'''\n```\n\nYou can override those attributes by passing them to the constructor of the `XmlParser` class as follows:\n\n```python\nfrom CustomXMLParser import XmlParser\n\nconfig_file = 'path_to_config_file'\nxml_parser = XmlParser(config_file=config_file, parser_type='custom', encoding='utf-8',\n                       name_key='<desired_name_key>', table_key='<desired_table_key>', header_key='<desired_header_keyr>',\n                       data_key='<desired_data_key>', header_text_key='<desired_header_text_key>')\nxml_file = 'path_to_xml_file'\nxml_dict = xml_parser.parse(xml_file)\n```\n\n## Config file\n\nBelow shows an example of configurations for custom parsing of XML.\n\n```json\n{\n  \"TREE\":{\n    \"TABLE_A\": {},\n    \"TABLE_B\": {\"TABLE_C\": {}}\n  },\n\n  \"TABLE_A\":\n    [\n      \"element0_tag,element0_name\",\n      \"element1_tag,element1_name\"\n    ],\n  \"TABLE_B\":\n    [\n      \"element0_tag*,element1_tag*,element2_tag,element2_name\"\n    ],\n  \"TABLE_C\":\n    [\n      \"element0_tag,element0_name\"\n    ]\n}\n\n```\n\n### General Rules\n- Capitalize all dictionary keys.\n- \\* is wildcard notation: returns data for all available elements\n\n### Tree structure\nThe structure can be flat or nested. If you wish to return child data for a particular parent, then you have to include the child as value for the parent. For example, parent **TABLE_B** has child **TABLE_C**. If **TABLE_C** has a child of its own, then we add it to **TABLE_C** in the same way.\n\n### Data structure\nLet's make some assumptions about elements to make this example easy to follow.\n- For **TABLE_A**, assume element0_tag and element1_tag map to `table`, element0_name to `info`, and element1_name to `metadata`.\n- For **TABLE_B**, assume element0_tag maps to `container`, element1_tag to `node`, and element2_tag to `table`, and element2_name to `info`.\n- For **TABLE_C**, assume element0_tag maps to `table` and element0_name to `images`\n\nIn the above config example, we are interested in returning data for **TABLE_A**, **TABLE_B**, AND **TABLE_C**.\nFor each key, a path or a list of paths (xpath) is/are required to be provided in order to retrieve data from the XML file. For example:\n- **TABLE_A** has two paths [\"table,info\", \"table,metadata\"], data under `info` and `metadata` tables will be returned and stored in *TABLE_A*\n- **TABLE_B** has single path [\"container*,node*,table,images\"], data under `info` table for all nodes and all containers will be returned and stored in *TABLE_B*.\n- **TABLE_C** has single path [\"table,images\"], data under `images` table for all parent nodes and containers will be returned and stored in *TABLE_C*. \n\n*Notice*, full path isn't required for **TABLE_C** and the *GFC* (greatest common factor) between the child **TABLE_C** and the parent **TABLE_B** is only required in the parent table. Since **TABLE_C** is a child of **TABLE_B**, it falls under the same path, but **TABLE_C** breaks away at \"table,images\" and that's why it is the only specified path. In other words, since **TABLE_C** is a child of **TABLE_B**, all *TABLE_B* rules carry over to *TABLE_C*. \n\n----------------------------------------\nAuthor: Hamdan, Muhammad (@mhamdan91 - Â©)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mhamdan91/CustomXMLParser",
    "keywords": "python,xml,XML,parsing,mapping,dictionary,configurable,custom,formatting",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "CustomXMLParser",
    "package_url": "https://pypi.org/project/CustomXMLParser/",
    "platform": null,
    "project_url": "https://pypi.org/project/CustomXMLParser/",
    "project_urls": {
      "Homepage": "https://github.com/mhamdan91/CustomXMLParser"
    },
    "release_url": "https://pypi.org/project/CustomXMLParser/1.0.5/",
    "requires_dist": [
      "xmltodict (==0.13.0)",
      "moecolor"
    ],
    "requires_python": "",
    "summary": "Python Libary that allows for customized parsing of XML files using a set of configurations. Output is a dictonary. This library builds on the xml2dict library.",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17472238,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98fd55ff5f889887a1df31684c8d6fe14c72c6a7e85bac26c5d80f3ebdc66000",
          "md5": "06ba8a74073be0bc2fce55a44490fe8f",
          "sha256": "c0d8bf89fe23f218c9f010d971cf29df33c77061c7a18bc4596507d0254a7bec"
        },
        "downloads": -1,
        "filename": "CustomXMLParser-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06ba8a74073be0bc2fce55a44490fe8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16499,
        "upload_time": "2023-02-22T05:05:53",
        "upload_time_iso_8601": "2023-02-22T05:05:53.076652Z",
        "url": "https://files.pythonhosted.org/packages/98/fd/55ff5f889887a1df31684c8d6fe14c72c6a7e85bac26c5d80f3ebdc66000/CustomXMLParser-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ac220edf704f4b8d8b861d893eca365c0c6be78c05137b7b38b458dede70281",
          "md5": "d08f69a2c22c88c48804f46d0e3cc5df",
          "sha256": "d18b11f68358a378cbabe6b12384f311ad7a6297b48d8b93c5989bc9c571fc0c"
        },
        "downloads": -1,
        "filename": "CustomXMLParser-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d08f69a2c22c88c48804f46d0e3cc5df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10474,
        "upload_time": "2023-02-22T05:11:04",
        "upload_time_iso_8601": "2023-02-22T05:11:04.123373Z",
        "url": "https://files.pythonhosted.org/packages/7a/c2/20edf704f4b8d8b861d893eca365c0c6be78c05137b7b38b458dede70281/CustomXMLParser-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "427cef204b18a30151ebc24f7ede9ede8f751b07ebffe0a25cdd3fc0e5246b36",
          "md5": "8ef8a37c1d720dde46a6fcc0f333ba0c",
          "sha256": "8d6493243cd01836e0fda9fb35221e439365dffe249bcc7c5d141c231b3da158"
        },
        "downloads": -1,
        "filename": "CustomXMLParser-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8ef8a37c1d720dde46a6fcc0f333ba0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7037,
        "upload_time": "2023-02-22T05:11:06",
        "upload_time_iso_8601": "2023-02-22T05:11:06.581619Z",
        "url": "https://files.pythonhosted.org/packages/42/7c/ef204b18a30151ebc24f7ede9ede8f751b07ebffe0a25cdd3fc0e5246b36/CustomXMLParser-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09eff488a4d57c8f3d777ab68e7b5f693379e39cfcd0409caa9d5fbac3714551",
          "md5": "a48df25b698e38126c65b94230f4d7c0",
          "sha256": "3ca98ee5330aff09c9f8c2af379fe86efff332b13e00a3e5bee80ef03dfebc50"
        },
        "downloads": -1,
        "filename": "CustomXMLParser-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a48df25b698e38126c65b94230f4d7c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10653,
        "upload_time": "2023-03-02T04:48:41",
        "upload_time_iso_8601": "2023-03-02T04:48:41.907892Z",
        "url": "https://files.pythonhosted.org/packages/09/ef/f488a4d57c8f3d777ab68e7b5f693379e39cfcd0409caa9d5fbac3714551/CustomXMLParser-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6947901375f89ad44adb0f36451c14d03bdd0e81e114d5a144288f42a9c318e",
          "md5": "9416633fa0290b7dd315a70843183ff9",
          "sha256": "685117d14475766406c4b2379e586082f45a2294933a28e52042f60125190722"
        },
        "downloads": -1,
        "filename": "CustomXMLParser-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9416633fa0290b7dd315a70843183ff9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7823,
        "upload_time": "2023-03-02T04:48:44",
        "upload_time_iso_8601": "2023-03-02T04:48:44.077447Z",
        "url": "https://files.pythonhosted.org/packages/e6/94/7901375f89ad44adb0f36451c14d03bdd0e81e114d5a144288f42a9c318e/CustomXMLParser-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c406fe349ccd4ce093558fd99b28b7dd8e703e9e496428d8bf7301ca4856c76",
          "md5": "3d07e2d1eb468516c41c553782a118b1",
          "sha256": "83b9d4956b9f52f84ef4a08d03788e782ef02bfcab1de715d1cc05b20e170fb5"
        },
        "downloads": -1,
        "filename": "CustomXMLParser-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d07e2d1eb468516c41c553782a118b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10651,
        "upload_time": "2023-03-03T02:39:46",
        "upload_time_iso_8601": "2023-03-03T02:39:46.517483Z",
        "url": "https://files.pythonhosted.org/packages/1c/40/6fe349ccd4ce093558fd99b28b7dd8e703e9e496428d8bf7301ca4856c76/CustomXMLParser-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf6002ff1158ba4fbccd1d677eae28f83fcf059701f0f077395edcc3de912431",
          "md5": "0b782a1be386021af1790eef71e99876",
          "sha256": "28917cb513658762b3d0fac6a76b14b239f7df932b328b722ccc46558ff65816"
        },
        "downloads": -1,
        "filename": "CustomXMLParser-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0b782a1be386021af1790eef71e99876",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7820,
        "upload_time": "2023-03-03T02:39:48",
        "upload_time_iso_8601": "2023-03-03T02:39:48.511599Z",
        "url": "https://files.pythonhosted.org/packages/bf/60/02ff1158ba4fbccd1d677eae28f83fcf059701f0f077395edcc3de912431/CustomXMLParser-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25acb13d2822a2a1e3c11598c192e177ec55e51eaadd52ebcc613bf012137c3a",
          "md5": "7b336e8dda6d09bac974c7866920163f",
          "sha256": "36ea41c36d7ee0590b3668003fa6108ae31dc2d5664461ac8433fff39f9dc462"
        },
        "downloads": -1,
        "filename": "CustomXMLParser-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b336e8dda6d09bac974c7866920163f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10754,
        "upload_time": "2023-03-28T01:53:53",
        "upload_time_iso_8601": "2023-03-28T01:53:53.710037Z",
        "url": "https://files.pythonhosted.org/packages/25/ac/b13d2822a2a1e3c11598c192e177ec55e51eaadd52ebcc613bf012137c3a/CustomXMLParser-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b5ddd14a3895c2a04c7e046a96c896c2f6dee300ddf5d1b99d7229662822223",
          "md5": "b76b5496ef97d863295b0da7e26030db",
          "sha256": "56c4780f9cf0d30dba46266c910acbd57b737a3e5158ebdeefe43281cad1ef33"
        },
        "downloads": -1,
        "filename": "CustomXMLParser-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b76b5496ef97d863295b0da7e26030db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7923,
        "upload_time": "2023-03-28T01:53:55",
        "upload_time_iso_8601": "2023-03-28T01:53:55.322940Z",
        "url": "https://files.pythonhosted.org/packages/0b/5d/dd14a3895c2a04c7e046a96c896c2f6dee300ddf5d1b99d7229662822223/CustomXMLParser-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25acb13d2822a2a1e3c11598c192e177ec55e51eaadd52ebcc613bf012137c3a",
        "md5": "7b336e8dda6d09bac974c7866920163f",
        "sha256": "36ea41c36d7ee0590b3668003fa6108ae31dc2d5664461ac8433fff39f9dc462"
      },
      "downloads": -1,
      "filename": "CustomXMLParser-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7b336e8dda6d09bac974c7866920163f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10754,
      "upload_time": "2023-03-28T01:53:53",
      "upload_time_iso_8601": "2023-03-28T01:53:53.710037Z",
      "url": "https://files.pythonhosted.org/packages/25/ac/b13d2822a2a1e3c11598c192e177ec55e51eaadd52ebcc613bf012137c3a/CustomXMLParser-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b5ddd14a3895c2a04c7e046a96c896c2f6dee300ddf5d1b99d7229662822223",
        "md5": "b76b5496ef97d863295b0da7e26030db",
        "sha256": "56c4780f9cf0d30dba46266c910acbd57b737a3e5158ebdeefe43281cad1ef33"
      },
      "downloads": -1,
      "filename": "CustomXMLParser-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "b76b5496ef97d863295b0da7e26030db",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7923,
      "upload_time": "2023-03-28T01:53:55",
      "upload_time_iso_8601": "2023-03-28T01:53:55.322940Z",
      "url": "https://files.pythonhosted.org/packages/0b/5d/dd14a3895c2a04c7e046a96c896c2f6dee300ddf5d1b99d7229662822223/CustomXMLParser-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}