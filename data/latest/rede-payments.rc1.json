{
  "info": {
    "author": "Darlei Soares",
    "author_email": "darleisantossoares@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SDK Python\n\nSDK de integração eRede\n\n# Utilizando\n\n## Autorizando uma transação\n\n```python\nfrom erede import *\n\nstore = Store(\"PV\", \"TOKEN\", Environment.sandbox())\n\ntransaction = Transaction(12345, \"Reference\")\ntransaction.credit_card(\"5448280000000007\", \"123\", \"12\", \"2020\", \"Fulano de Tal\")\ntransaction.set_additional(3456, 12)\n\ntry:\n    transaction = eRede(store).create(transaction)\n\n    if transaction.returnCode == \"00\":\n        print(\"Transação aprovada com sucesso. O tid é: {}\".format(transaction.tid))\nexcept RedeError as e:\n    print(\"Opz[{}]: {}\".format(e.code, e))\n```\n\nPor padrão, a transação é capturada automaticamente; caso seja necessário apenas autorizar a transação, o método `Transaction.capture_transaction(False)` deverá ser chamado com o parâmetro `False`:\n\n```python\nfrom erede import *\n\nstore = Store(\"PV\", \"TOKEN\", Environment.sandbox())\n\ntransaction = Transaction(12345, \"Reference\")\ntransaction.credit_card(\"5448280000000007\", \"123\", \"12\", \"2020\", \"Fulano de Tal\").capture_transaction(False)\n\ntry:\n    transaction = eRede(store).create(transaction)\n\n    if transaction.returnCode == \"00\":\n        print(\"Transação aprovada com sucesso. O tid é: {}\".format(transaction.tid))\nexcept RedeError as e:\n    print(\"Opz[{}]: {}\".format(e.code, e))\n```\n\n## Autorizando uma transação com MCC dinâmico\n\n```python\nfrom erede import *\n\nstore = Store(\"PV\", \"TOKEN\", Environment.sandbox())\n\ntransaction = Transaction(12345, \"Reference\")\ntransaction.credit_card(\"5448280000000007\", \"123\", \"12\", \"2020\", \"Fulano de Tal\")\ntransaction.mcc(\"LOJADOZE\", \"22349202212\", SubMerchant(\"1234\", \"Sao Paulo\", \"Brasil\"))\n\ntry:\n    transaction = eRede(store).create(transaction)\n\n    if transaction.returnCode == \"00\":\n        print(\"Transação aprovada com sucesso. O tid é: {}\".format(transaction.tid))\nexcept RedeError as e:\n    print(\"Opz[{}]: {}\".format(e.code, e))\n```\n\n## Autorizando uma transação com identificação de plataforma\n\n```python\nfrom erede import *\n\nstore = Store(\"PV\", \"TOKEN\", Environment.sandbox())\n\ntransaction = Transaction(12345, \"Reference\")\ntransaction.credit_card(\"5448280000000007\", \"123\", \"12\", \"2020\", \"Fulano de Tal\")\ntransaction.set_additional(1234, 12)\n\ntry:\n    transaction = eRede(store).create(transaction)\n\n    if transaction.returnCode == \"00\":\n        print(\"Transação aprovada com sucesso. O tid é: {}\".format(transaction.tid))\nexcept RedeError as e:\n    print(\"Opz[{}]: {}\".format(e.code, e))\n```\n\n## Autorizando uma transação IATA\n\n```python\nfrom erede import *\n\nstore = Store(\"PV\", \"TOKEN\", Environment.sandbox())\n\ntransaction = Transaction(12345, \"Reference\")\ntransaction.credit_card(\"5448280000000007\", \"123\", \"12\", \"2020\", \"Fulano de Tal\")\ntransaction.set_iata(\"code123\", \"250\")\n\ntry:\n    transaction = eRede(store).create(transaction)\n\n    if transaction.returnCode == \"00\":\n        print(\"Transação aprovada com sucesso. O tid é: {}\".format(transaction.tid))\nexcept RedeError as e:\n    print(\"Opz[{}]: {}\".format(e.code, e))\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/darleisantossoares/erede-python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rede-payments",
    "package_url": "https://pypi.org/project/rede-payments/",
    "platform": "",
    "project_url": "https://pypi.org/project/rede-payments/",
    "project_urls": {
      "Homepage": "https://github.com/darleisantossoares/erede-python"
    },
    "release_url": "https://pypi.org/project/rede-payments/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A package to handle rede payments api",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5850789,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b1ef55fabbb849ddc2d8a734e3c225e170896b282bf7a9f3af25304b3e2b5c9",
          "md5": "6e8b6562857f60d7b4c6c56022b38e9f",
          "sha256": "d408e82d1d7d09a43cccd5ebbc4bd5ca92f5c89e5993e2caa01feabf8a917bf9"
        },
        "downloads": -1,
        "filename": "rede_payments-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e8b6562857f60d7b4c6c56022b38e9f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15890,
        "upload_time": "2019-09-18T14:59:40",
        "upload_time_iso_8601": "2019-09-18T14:59:40.019922Z",
        "url": "https://files.pythonhosted.org/packages/8b/1e/f55fabbb849ddc2d8a734e3c225e170896b282bf7a9f3af25304b3e2b5c9/rede_payments-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1e2836e5e9eee995e6079bd5b7d6625de75ab993d3921f8c49ab94b9f8bfedf",
          "md5": "35b7f79efd74f0c09cadd74d3b5e7308",
          "sha256": "9e083fcebcaa8cb448ac16e927a3f5c8d98ca5cc20251720c117642d9d7a1048"
        },
        "downloads": -1,
        "filename": "rede payments-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "35b7f79efd74f0c09cadd74d3b5e7308",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7732,
        "upload_time": "2019-09-18T14:59:42",
        "upload_time_iso_8601": "2019-09-18T14:59:42.495984Z",
        "url": "https://files.pythonhosted.org/packages/d1/e2/836e5e9eee995e6079bd5b7d6625de75ab993d3921f8c49ab94b9f8bfedf/rede%20payments-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b1ef55fabbb849ddc2d8a734e3c225e170896b282bf7a9f3af25304b3e2b5c9",
        "md5": "6e8b6562857f60d7b4c6c56022b38e9f",
        "sha256": "d408e82d1d7d09a43cccd5ebbc4bd5ca92f5c89e5993e2caa01feabf8a917bf9"
      },
      "downloads": -1,
      "filename": "rede_payments-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6e8b6562857f60d7b4c6c56022b38e9f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15890,
      "upload_time": "2019-09-18T14:59:40",
      "upload_time_iso_8601": "2019-09-18T14:59:40.019922Z",
      "url": "https://files.pythonhosted.org/packages/8b/1e/f55fabbb849ddc2d8a734e3c225e170896b282bf7a9f3af25304b3e2b5c9/rede_payments-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1e2836e5e9eee995e6079bd5b7d6625de75ab993d3921f8c49ab94b9f8bfedf",
        "md5": "35b7f79efd74f0c09cadd74d3b5e7308",
        "sha256": "9e083fcebcaa8cb448ac16e927a3f5c8d98ca5cc20251720c117642d9d7a1048"
      },
      "downloads": -1,
      "filename": "rede payments-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "35b7f79efd74f0c09cadd74d3b5e7308",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7732,
      "upload_time": "2019-09-18T14:59:42",
      "upload_time_iso_8601": "2019-09-18T14:59:42.495984Z",
      "url": "https://files.pythonhosted.org/packages/d1/e2/836e5e9eee995e6079bd5b7d6625de75ab993d3921f8c49ab94b9f8bfedf/rede%20payments-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}