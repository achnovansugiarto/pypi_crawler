{
  "info": {
    "author": "Herb Peyerl",
    "author_email": "hpeyerl+wave@beer.org",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "# Get Readings from an Airthings Wave and publish to MQTT server\n\n[Airthings](http://airthings.com) makes a BTLE Radon detector called \"Wave\". This is an executable intended to be called periodically from Cron or some other scheduler to publish readings to an MQTT server.\n\n## Limitations\n\nThis application doesn't implement 'find' as provided in the example at https://airthings.com/raspberry-pi/\n\n## API\n\n```Python\nclass AirthingsWave:\n    def __init__(self, config_file):\n```\n\nClass instantiation requires a path to a config file in YAML format.\n\n```\nmqtt:\n  broker: 192.168.30.18\n  port: 1883\n\nwaves:\n  - name: \"basement-radon\"\n    addr: 98:07:2d:43:4d:ff\n```\n\nBefore taking a reading, you should:\n\n```\n    def ble_connect(self, addr):\n```\n\nThen you can:\n\n```\n    def get_readings(self, p):\n    def publish_readings(self, name, readings):\n```\n\n## Example\n\nFrom __main__.py:\n```python\n    c = sys.argv[1]\n\n    atw=airthingswave.AirthingsWave_mqtt(c)\n\n    count=len(atw.waves)\n    if count > 0:\n        iter=0\n        while iter<count:\n            handle = atw.ble_connect(atw.waves[iter][\"addr\"])\n            r = atw.get_readings(handle)\n            atw.ble_disconnect(handle)\n            atw.publish_readings(atw.waves[iter][\"name\"], r)\n            iter = iter+1\n    return True\n```",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hpeyerl/AirthingsWave-mqtt",
    "keywords": "radon,mqtt",
    "license": "MIT",
    "maintainer": "Herb Peyerl",
    "maintainer_email": "hpeyerl+wave@beer.org",
    "name": "airthingswave-mqtt",
    "package_url": "https://pypi.org/project/airthingswave-mqtt/",
    "platform": "",
    "project_url": "https://pypi.org/project/airthingswave-mqtt/",
    "project_urls": {
      "Homepage": "https://github.com/hpeyerl/AirthingsWave-mqtt"
    },
    "release_url": "https://pypi.org/project/airthingswave-mqtt/0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Get readings from an Airthings.com Wave BTLE Radon detector",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4308403,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9eebbbd2766e88716e86decb58ffc87b8001a8235828fe6234fe002c9a6913e6",
          "md5": "e8f6108c7d030086e07a0b645b31d126",
          "sha256": "725f50530b1332656170a02accfd11a0dac117d521b22d1f386ea6985668dda4"
        },
        "downloads": -1,
        "filename": "airthingswave-mqtt-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e8f6108c7d030086e07a0b645b31d126",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4430,
        "upload_time": "2018-06-23T14:20:22",
        "upload_time_iso_8601": "2018-06-23T14:20:22.048160Z",
        "url": "https://files.pythonhosted.org/packages/9e/eb/bbd2766e88716e86decb58ffc87b8001a8235828fe6234fe002c9a6913e6/airthingswave-mqtt-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "932b450fede825f25fcccefcbb05f1fd3cb15b15a8393c743811d2182e26baaa",
          "md5": "59e800dc0746e9daab91362646a495cf",
          "sha256": "9eb984a3f282e61784ab52d483a1025abd6c442812b35d3dafcc6b9f6e4f6659"
        },
        "downloads": -1,
        "filename": "airthingswave-mqtt-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "59e800dc0746e9daab91362646a495cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4867,
        "upload_time": "2018-09-25T12:48:21",
        "upload_time_iso_8601": "2018-09-25T12:48:21.366523Z",
        "url": "https://files.pythonhosted.org/packages/93/2b/450fede825f25fcccefcbb05f1fd3cb15b15a8393c743811d2182e26baaa/airthingswave-mqtt-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "932b450fede825f25fcccefcbb05f1fd3cb15b15a8393c743811d2182e26baaa",
        "md5": "59e800dc0746e9daab91362646a495cf",
        "sha256": "9eb984a3f282e61784ab52d483a1025abd6c442812b35d3dafcc6b9f6e4f6659"
      },
      "downloads": -1,
      "filename": "airthingswave-mqtt-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "59e800dc0746e9daab91362646a495cf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4867,
      "upload_time": "2018-09-25T12:48:21",
      "upload_time_iso_8601": "2018-09-25T12:48:21.366523Z",
      "url": "https://files.pythonhosted.org/packages/93/2b/450fede825f25fcccefcbb05f1fd3cb15b15a8393c743811d2182e26baaa/airthingswave-mqtt-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}