{
  "info": {
    "author": "Thykof",
    "author_email": "thykof@protonmail.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "# pptx-template\n\n## Getting started\n\nThe goal of this fork is to provide a PyPI package that you can use in your\npython project by calling the `pptx_template.render.render_pptx` function.\n\nSome features provided by the originals projects\n(https://github.com/skar404/pptx-template and https://github.com/m3dev/pptx-template)\nmay not work properly.\n\n### Install\n\n    pip3 install pptx_template_simple\n\nIn this fork, you can render a template like this:\n\n```python\nfrom pptx_template import render\n\ninput_path = 'test/data5/in.pptx'\nmodel = {\n    \"greeting\": \"Hello!\",\n    \"client_name\": \"M. Melpanque\"\n}\noutput_path = 'test/data5/out.pptx'\nrender.render_pptx(input_path, model, output_path)\n```\n\n## Development\n\nTest manualy the package:\n\n    python3 main.py\n\nInstall dependencies:\n\n    sudo apt-get -y install python3-setuptools\n    pip3 install wheel\n    pip3 install twine\n\nBuild the package:\n\n    python3 setup.py bdist_wheel\n\nInstall the local build package:\n\n    pip3 install dist/pptx_template_simple-0.2.8-py3-none-any.whl\n\nUpload to test pypi:\n\n    twine upload --repository testpypi dist/*\n\nThen test your package by installing the test pypi package:\n\n    pip3 install --index-url https://test.pypi.org/simple/ --no-deps pptx_template_simple\n\nWhen you are ready, upload the package in the main pypi repository:\n\n    twine upload dist/*\n\n### Tests\n\nInstall dependencies:\n\n    pip3 install pytest\n\nRun tests:\n\n    pytest\n\n\n### TODO\n\n - Substitute images\n - Use Jinja template syntax\n\n## Overview\n\npptx-template is a PowerPoint presentation builder.\n\nThis helps your routine reporting work that have many manual copy-paste from excel chart to powerpoint, or so.\n\n  - Building a new powerpoint presentation file from a \"template\" pptx file which contains \"id\"\n  - Import some strings and CSV data which is defined in a JSON config file or a Python dict\n  - \"id\" in pptx template is expressed as a tiny DSL, like \"{sales.0.june.us}\"\n  - requires python envirionment (2 or 3), pandas, python-pptx\n  - for now, only UTF-8 encoding is supported for json, csv\n\n### Text substitution\n!<img src=\"docs/01.png?raw=true\" width=\"80%\" />\n\n### CSV Import\n!<img src=\"docs/02.png?raw=true\" width=\"80%\" />\n\n## Japanese translation\n\npptx-template は pptx のテンプレートを元に、別途用意した JSON 中の文字列や CSV データを差し込んだ pptx を生成するツールです。\n\n定型レポートなどで大量のグラフ付きスライドを作成する際の作業を代行してくれます。\n\n  - テンプレートには \"{sales.0.june.us}\" のような形で JSON内の値を指す id を記入できます\n  - python 2 または 3, pandas, pptx に依存しています\n  - 扱う json や csv の 文字コードは utf-8 前提です\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Thykof/pptx-template",
    "keywords": "powerpoint,ppt,pptx,template",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pptx-template-simple",
    "package_url": "https://pypi.org/project/pptx-template-simple/",
    "platform": "",
    "project_url": "https://pypi.org/project/pptx-template-simple/",
    "project_urls": {
      "Homepage": "https://github.com/Thykof/pptx-template"
    },
    "release_url": "https://pypi.org/project/pptx-template-simple/0.2.8.3/",
    "requires_dist": [
      "python-pptx",
      "pandas",
      "openpyxl",
      "six"
    ],
    "requires_python": "",
    "summary": "The PowerPoint presentation builder using template.pptx (without support in cli)",
    "version": "0.2.8.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7506207,
  "releases": {
    "0.2.8.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e54a97eaf4ae2009e28194c68cc3dcb65edd4cce8261d54ded839bdc8b12922",
          "md5": "a6c25e557f347a331d99be41fe28f498",
          "sha256": "22a5426a470bcc785e0db9717d24e5c6e3d0fb267c043342af1d7c1e62a8023e"
        },
        "downloads": -1,
        "filename": "pptx_template_simple-0.2.8.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6c25e557f347a331d99be41fe28f498",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18883,
        "upload_time": "2020-06-18T14:29:01",
        "upload_time_iso_8601": "2020-06-18T14:29:01.398555Z",
        "url": "https://files.pythonhosted.org/packages/1e/54/a97eaf4ae2009e28194c68cc3dcb65edd4cce8261d54ded839bdc8b12922/pptx_template_simple-0.2.8.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e54a97eaf4ae2009e28194c68cc3dcb65edd4cce8261d54ded839bdc8b12922",
        "md5": "a6c25e557f347a331d99be41fe28f498",
        "sha256": "22a5426a470bcc785e0db9717d24e5c6e3d0fb267c043342af1d7c1e62a8023e"
      },
      "downloads": -1,
      "filename": "pptx_template_simple-0.2.8.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a6c25e557f347a331d99be41fe28f498",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18883,
      "upload_time": "2020-06-18T14:29:01",
      "upload_time_iso_8601": "2020-06-18T14:29:01.398555Z",
      "url": "https://files.pythonhosted.org/packages/1e/54/a97eaf4ae2009e28194c68cc3dcb65edd4cce8261d54ded839bdc8b12922/pptx_template_simple-0.2.8.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}