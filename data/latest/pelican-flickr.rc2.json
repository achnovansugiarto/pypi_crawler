{
  "info": {
    "author": "Bastien Abadie",
    "author_email": "bastien.abadie@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Flickr in your Pelican website\r\n        ==============================\r\n        \r\n        This `Pelican <http://getpelican.com>`_ plugin brings your Flickr photos\r\n        & sets into your static website.\r\n        \r\n        Install\r\n        -------\r\n        \r\n        Install this plugin and its dependencies with ``pip install pelican-flickr``\r\n        \r\n        Add the plugin path to your **PLUGINS** setting in the pelicanconf.py\r\n        file. ``PLUGINS = ['pelican-flickr', ]`` \r\n\r\n        You must setup at least two\r\n        settings for this plugin to work (see Settings section for more\r\n        details): \\* FLICKR\\_API\\_KEY \\* FLICKR\\_USER\r\n        \r\n        Finally, you can run ``pelican`` to render your website.\r\n        \r\n        For the first run, as the cache is empty and can be quite long to\r\n        populate i recommend using ``pelican --debug`` to see what is\r\n        happening...\r\n        \r\n        You can view a demo on my `Personal Website` <http://bastien.abadie.me>\r\n        \r\n        Settings\r\n        --------\r\n        \r\n        The following settings should be specified in your pelican configuration\r\n        file, usually ``pelicanconf.py``\r\n        \r\n        FLICKR\\_API\\_KEY\r\n        ~~~~~~~~~~~~~~~~\r\n        \r\n        This setting is **mandatory**.\r\n        \r\n        If you don't already have one, you must ask for a Flickr `Api\r\n        key <https://www.flickr.com/services/apps/create/apply>`_ (it's free).\r\n        Here we only need the key, not the secret part used only for\r\n        authentified actions.\r\n        \r\n        FLICKR\\_USER\r\n        ~~~~~~~~~~~~\r\n        \r\n        This setting is **mandatory**.\r\n        \r\n        Use `idGettr <http://idgettr.com/(env)>`_ to find your Flickr id, it\r\n        should look like ``XXXXXXXX@YYY``\r\n        \r\n        FLICKR\\_OUTPUT\\_DIRNAME\r\n        ~~~~~~~~~~~~~~~~~~~~~~~\r\n        \r\n        This setting is optional, its default value is ``flickr``.\r\n        \r\n        This setting sets the name of the output directory for all the files\r\n        generated by this plugin (sets & photos). It will be a part of the urls\r\n        on your website.\r\n        \r\n        FLICKR\\_UPDATE\r\n        ~~~~~~~~~~~~~~\r\n        \r\n        This setting is optional, its default value is ``True``.\r\n        \r\n        To speed up cache usage & overall rendering we can forbid the usage of\r\n        the Flickr API once the cache has been built, by setting it to\r\n        ``False``.\r\n        \r\n        FLICKR\\_CACHE\r\n        ~~~~~~~~~~~~~\r\n        \r\n        This setting is optional, its default value is ``True``.\r\n        \r\n        This is a bit the opposite effect of FLICKR\\_UPDATE, as it forbids the\r\n        usage of the cache when sets to ``False``.\r\n        \r\n        Essentially for development & testing purposes.\r\n        \r\n        FLICKR\\_SETS\\_EXCLUDE\r\n        ~~~~~~~~~~~~~~~~~~~~~\r\n        \r\n        This setting is optional, its default value is ``None``.\r\n        \r\n        You can specify a list of Flickr sets id or name, to exclude them on\r\n        your website.\r\n        \r\n        Example\r\n        ~~~~~~~\r\n        \r\n        My config looks like this: ::\r\n        \r\n          FLICKR_API_KEY = 'xxxXXXxC0FFEE'\r\n          FLICKR_USER = '123456789@YYY'\r\n          FLICKR_SETS_EXCLUDE = ['Compromising pictures', ]\r\n          FLICKR_OUTPUT_DIRNAME = 'photos'\r\n          FLICKR_UPDATE = False\r\n        \r\n        Templates\r\n        ---------\r\n        \r\n        General context (any page)\r\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        \r\n        You can access all your Flickr photosets from any generated page using\r\n        the ``flickr_sets`` variable as in the example below. ::\r\n        \r\n          {% for set in flickr_sets %}\r\n          <div class=\"set\">\r\n            <a class=\"primary\" href=\"{{ set.url }}\">\r\n              <img class=\"light\" src=\"{{ set.primary.sizes.medium.source }}\" />\r\n              {{ set.title }}\r\n            </a>\r\n          </div>\r\n          {% endfor %}\r\n        \r\n        Photosets\r\n        ~~~~~~~~~\r\n        \r\n        Every photoset available will have a file generated in the\r\n        ``FLICKR_OUTPUT_DIRNAME``\r\n        \r\n        A variable named **photoset** is added to this page's context. This\r\n        plugin embeds a default template ``flickr_set.html`` that you can\r\n        override by creating a file in your template dir with the same name.\r\n        \r\n        Here is basically the content of the default file: ::\r\n        \r\n          <h1>{{ photoset.title }}</h1>\r\n          {% for photo in photoset.photos %}\r\n            <a href=\"{{photo.url}}\">\r\n            <img src=\"{{photo.sizes.largesquare.source}}\" title=\"{{photo.title}}\" />\r\n            </a>\r\n          {% endfor %}\r\n        \r\n        A photoset has an instance of a photo named primary which is the cover p\r\n        \r\n        Photos\r\n        ~~~~~~\r\n        \r\n        As for the photo sets, each available photo generates a page, in a\r\n        subfolder per photoset of ``FLICKR_OUTPUT_DIRNAME`` (ie.\r\n        output/flickr/my-set/425169.html for the photo with id 425169).\r\n        \r\n        Several variables are added to the page context:\r\n        \r\n        -  ``photoset`` is the parent photo set object\r\n        -  ``photo`` is the current photo object\r\n        -  ``photo_previous`` is the possible previous photo object in the\r\n           parent set (may be null)\r\n        -  ``photo_next`` is the possible next photo object in the parent set\r\n           (may be null)\r\n        \r\n        Each photo has several attributes:\r\n        \r\n        -  sizes is a dictionary of available image size with their direct urls\r\n        -  tags is a list of Flickr tag (not yet asociated with Pelican tags)\r\n        -  urls is a dictionary of Flickr urls about this photo\r\n        \r\n        You can override the default ``flickr_photo.html`` by adding a file with\r\n        the same name in your template dir.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/La0/pelican-flickr",
    "keywords": "",
    "license": "LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pelican-flickr",
    "package_url": "https://pypi.org/project/pelican-flickr/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pelican-flickr/",
    "project_urls": {
      "Homepage": "https://github.com/La0/pelican-flickr"
    },
    "release_url": "https://pypi.org/project/pelican-flickr/0.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Pelican plugin to add Flickr sets and photos to your website.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1048927,
  "releases": {
    "0.1": [],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "483c83c5946d1b50223991f68ad00500a3c826410b4d5d4161fa6c61e88fdf13",
          "md5": "7f5ca16dfee3bea4d67e1a55f6654234",
          "sha256": "6697a77ad4be8884227ae61200b406133e8236ec4d5d9625585f35501c6713c9"
        },
        "downloads": -1,
        "filename": "pelican-flickr-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7f5ca16dfee3bea4d67e1a55f6654234",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21899,
        "upload_time": "2014-04-02T06:38:57",
        "upload_time_iso_8601": "2014-04-02T06:38:57.377894Z",
        "url": "https://files.pythonhosted.org/packages/48/3c/83c5946d1b50223991f68ad00500a3c826410b4d5d4161fa6c61e88fdf13/pelican-flickr-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "483c83c5946d1b50223991f68ad00500a3c826410b4d5d4161fa6c61e88fdf13",
        "md5": "7f5ca16dfee3bea4d67e1a55f6654234",
        "sha256": "6697a77ad4be8884227ae61200b406133e8236ec4d5d9625585f35501c6713c9"
      },
      "downloads": -1,
      "filename": "pelican-flickr-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7f5ca16dfee3bea4d67e1a55f6654234",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21899,
      "upload_time": "2014-04-02T06:38:57",
      "upload_time_iso_8601": "2014-04-02T06:38:57.377894Z",
      "url": "https://files.pythonhosted.org/packages/48/3c/83c5946d1b50223991f68ad00500a3c826410b4d5d4161fa6c61e88fdf13/pelican-flickr-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}