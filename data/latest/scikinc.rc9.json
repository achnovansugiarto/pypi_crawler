{
  "info": {
    "author": "Lucio Anderlini",
    "author_email": "Lucio.Anderlini@fi.infn.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Code Generators"
    ],
    "description": "# scikinC\n\n[![](https://img.shields.io/pypi/pyversions/scikinC)](https://pypi.python.org/pypi/scikinC/)\n[![](https://img.shields.io/pypi/v/scikinC)](https://pypi.python.org/pypi/scikinC/)\n[![](https://img.shields.io/pypi/status/scikinC)](https://pypi.python.org/pypi/scikinC/)\n[![](https://img.shields.io/pypi/dm/scikinC)](https://pypi.python.org/pypi/scikinC/)\n[![](https://img.shields.io/github/issues/landerlini/scikinC)](https://github.com/landerlini/scikinC/issues)\n[![](https://img.shields.io/github/issues-pr/landerlini/scikinC)](https://github.com/landerlini/scikinC/pulls)\n<!--\n[![](https://badgen.net/github/forks/landerlini/scikinC)](https://github.com/landerlini/scikinC/network/members)\n[![](https://img.shields.io/github/stars/landerlini/scikinC)](https://github.com/landerlini/scikinC/stargazers/)\n-->\n\n`scikinC` is a simple tool intended for deployment of simple Machine Learning \nalgorithms as shared objects. \nWe consider as a target scikit-learn and keras neural networks. \n\nThere are many other options to deploy machine learning algorithms in C and C++ \nenvironments, but they usually involve either specific compilation environments \nor require complicated threading structures that may make it difficult to \nintegrate the developed models into existing frameworks. \n\nBesides, in large distributed-computing environments it may be interestring to \ndistribute new models without the need to recompile the entiere software stack.\nSome libraries (e.g. TMVA or PMML or LWTNN) allow to export trained models \ninto portable formats, that can then be converted at run-time in a sequence \nof function calls providing the expected results. \nWhile very effective, these libraries add a bit of overhead to function calls \nand requires specific compilation environment that may be uneasy to reproduce \nin the target environment. \n\nThe *scikinC* project aims at replacing these intermediate file formats, with \nC files, and the run-time interpretation of these files with a ahead-of-time \ncompilation into dynamically linked shared objects. \n\nUsing C instead of C++ allows to deploy machine learning function as plugin\nfunction which can be easily binded to other languages and invoked with minimal\noverhead. The compiled shared object do not make use of multithreading letting\nthe larger code infrastructure to deal with parallelization without introducing \noverhead.\n\nFinally, the portable C files can be included as header files in other \nprograms and statically compiled for less-conventional architectures such \nas microcontroller and FPGAs. \n\nAs in many other circumstances, distributing binaries hinder software security, \nexposing clients to more severe risks than dedicated ML format. Users should be \naware that plugging untrusted shared objects to their program may result in \nsevere security breachs. \n\n## Logic\n`scikinC` is a transpiler for scikit-learn and keras models generating\nC files with `extern \"C\"` functions sharing the same signature:\n```\nFLOAT_T* <function_name> (FLOAT_T* output, const FLOAT_T* input);\n```\nEverything which is not either the input or the output is hardcoded in \nthe C function, including:\n * the shape of the input and output tensors;\n * the structure of the ML method (number of trees in a forest o number of\n   layers in a DNN);\n * the weights of the ML method.\n\nThe generated C function is inteded for immediate compilation with `gcc`, \nbut most C/C++ compiler should be supported. \n\nOnce compiled, the binary file contains everything that is needed to \nevaluate the ML function and with no external dependency beyond standard \nC libraries.\n\n`scikinC` is designed to be as modular as possible in order to make it \neasy to extend it by adding converters for additional scikit-learn\nmodels and keras layers.\n\n## Command Line Interface\nThe easiest way to use scikinC is through its Command Line Interface (CLI).\nTo provide an example, let's consider the following simple python script\nthat train a preprocessing step from scikit learn and dumps it into a \npickle file. \n\n```python\nimport numpy as np\nimport pickle\n\nfrom sklearn.preprocessing import MinMaxScaler \n\nminmax = MinMaxScaler()\nminmax.fit ( np.random.normal(0,5, (2,1000) )\n   \nwith open(\"example_scaler.pkl\", 'wb') as f:\n  pickle.dump (minmax, f)\n```\n\nOnce the file is created, one can convert the scaler \ninto a C file, as \n```bash\nscikinC example_scaler.pkl > Cfile.C\n```\n\nFinally you can compile the C file for dynamic loading \n```bash\ngcc -o deployed_scaler.so Cfile.C -shared -fPIC -Ofast\n```\n\n## Python Interface\nSometimes it may be useful to include the conversion in C\ndirectly in the Python script where the training procedure \nis defined. This is made possible by importing the `scikinC`\nfunction and calling the convert method.\nFor example,\n```python\nimport numpy as np\nfrom sklearn.preprocessing import MinMaxScaler\nimport scikinC\n\nminmax = MinMaxScaler()\nminmax.fit ( np.random.normal(0,5, (2,1000) )\n\nc_string = scikinC.convert({\n  'myMinMaxScaler': minmax\n})\n```\n`c_string` contains the text that describe `MinMaxScaler`\ntransform in C. It can be stored in a text file and compiled \nwith `gcc` and outlined above.\n\n\n## Using the compiled models in C/C++ applications\nConsidering the example producing the shared object \n`deployed_object.so` above, one can easily evaluate \nit from a C program, linking the shared object at\nrun-time and then pointing to the function:\n```C\n// C Library for dynamic linking\n#include  <dlfcn.h>\n\n// Define the type for generic machine learning functions\ntypedef float *(*mlfunc)(float *, const float*);\n\nvoid somewhere_in_your_code (void)\n{\n  // Open the shared object library \n  void *handle = dlopen ( \"./deployed_scaler.so\", RTLD_LAZY );\n  if (!handle)\n    exit(1);\n\n  // Load the scaler by name (by default, the pickle file name is used as name)\n  mlfunc minmax = mlfunc(dlsym (handle, \"example_scaler\")); \n\n  // Prepares the input and output buffer and evaluate the function\n  float *inp [] = { /* your input goes here */ };\n  float *out [ /*output n_features goes here*/ ];\n  minmax ( out, inp ); \n\n  // Optionally, closes the linked library file\n  dlclose(handle); \n}\n```\nA few notes:\n 1. the function prototype (`FLOAT_T* <name> (FLOAT_T* output, const FLOAT_T*)`)\n    is the same for all the models converted by scikinC. This is basically the\n    only strict requirement on what models can be converted.\n 2. The floating point type, `float` by default, can be updgraded for\n    numerically instable models (`scikinC --float_t double` or scikinC --float_t \"long double\"`)\n 3. the symbol to load through dlsym is the name of the pickle file, \n    stripped of its extension, if any. In this case `some_model.pkl` gets compiled \n    in the symbol `some_model`. The compiled function name can be specified as\n    ```bash\n    scikinC desired_name=example_scaler.pkl > Cfile.C\n    ```\n    this is especially useful when the pickle name contains non alphanumeric\n    characters which would break the C compilation (consider for example a \n    pickle file named \"example-scaler.pkl\"\n 4. More than one model can be compiled in a single shared object\n    ```bash\n    gcc -o deployed_scaler.so Cfile1.C Cfile2.C Cfile3.C -shared -fPIC -Ofast\n    ```\n    and this considered good practice for bundling together preprocessing \n    and machine learning steps. \n\n\n## Implemented converters\n\n#### Scikit-Learn preprocessing\n  | Model                  | Implementation  | Test      | Notes                         |\n  | ---------------------- | --------------- | --------- | ----------------------------- |\n  | `MinMaxScaler`         | Available       | Available |                               |\n  | `StandardScaler`       | Available       | Available |                               |\n  | `QuantileTransformer`  | Available       | Available |                               |\n  | `FunctionTransformer`  | Available       | Available | Only functions in math.h      |\n  | `ColumnTransformer`    | Available       | Available | Only integer column indices   |\n  | `Pipeline`             | Available       | Partial   | Pipelines of pipelines break  |\n\n#### Scikit-Learn models\n  | Model                        | Implementation  | Test      | Notes                         |\n  | ---------------------------- | --------------- | --------- | ----------------------------- |\n  | `GradientBoostingClassifier` | Available       | Available |                               |\n\n#### Keras Models\n  | Model                        | Implementation  | Test      | Notes                         |\n  | ---------------------------- | --------------- | --------- | ----------------------------- |\n  | `Sequential`                 | Available       | Available |                               |\n\n#### Keras Layers\n  | Model                        | Implementation  | Test      | Notes                         |\n  | ---------------------------- | --------------- | --------- | ----------------------------- |\n  | `Dense`                      | Available       | Available |                               |\n  | `PReLU`                      | Available       | Available |                               |\n  | `LeakyReLU`                  | Available       | Available |                               |\n\n#### Keras Activation functions\n  | Model                        | Implementation  | Test      | Notes                         |\n  | ---------------------------- | --------------- | --------- | ----------------------------- |\n  | `tanh`                       | Available       | Available |                               |\n  | `sigmoid`                    | Available       | Available |                               |\n  | `relu`                       | Available       | Available |                               |\n\n\n## Running tests\nIn order to install the full dependencies needed to test the whole package, \ninstall with the tag `fql`.\n```\npython3 setup.py bdist_wheel \npip install dist/scikinC*.whl[fql]\n```\n\nThen run the tests with\n```\npytest test\n```\n\n\n## Related projects\n  * [LWTNN](https://github.com/lwtnn/lwtnn)\n  * [SimpleNN](https://gitlab.cern.ch/mschille/simplenn)\n  * [TensorFlow C API](https://www.tensorflow.org/install/lang_c)\n  * [GaudiTensorFlow](https://gitlab.cern.ch/lhcb/LHCb/-/tree/master/Tools/GaudiTensorFlow)\n \n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/landerlini/scikinC",
    "keywords": "deployment,header-only,plain-C",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scikinC",
    "package_url": "https://pypi.org/project/scikinC/",
    "platform": null,
    "project_url": "https://pypi.org/project/scikinC/",
    "project_urls": {
      "Homepage": "https://github.com/landerlini/scikinC"
    },
    "release_url": "https://pypi.org/project/scikinC/0.2.6/",
    "requires_dist": [
      "numpy",
      "scipy",
      "scikit-learn",
      "tensorflow ; extra == 'fql'",
      "keras ; extra == 'fql'",
      "fastquantilelayer ; extra == 'fql'",
      "tensorflow ; extra == 'keras'",
      "keras ; extra == 'keras'"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "A converter for scikit learn and keras to hardcoded C function",
    "version": "0.2.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14377082,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8e991e425b1248453b531c3302346628b322cdfe350931f3caad186daf0016a",
          "md5": "7ba60bf47e4c9e2b73c292dfbdfd7bc2",
          "sha256": "e8c5c87073833829898efaa7b262510997b0c9d1cfa3ce492c1cb0a713abcf0f"
        },
        "downloads": -1,
        "filename": "scikinC-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ba60bf47e4c9e2b73c292dfbdfd7bc2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 23925,
        "upload_time": "2021-07-26T07:51:27",
        "upload_time_iso_8601": "2021-07-26T07:51:27.473973Z",
        "url": "https://files.pythonhosted.org/packages/d8/e9/91e425b1248453b531c3302346628b322cdfe350931f3caad186daf0016a/scikinC-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa08dbf193e572aa62f2fb40277db52e585bc80cd18077b86519e32f33ba2ffe",
          "md5": "c6fb4036163e666f5e6a51bbbe53d0c5",
          "sha256": "2c187f4d2aac041d01b8e8a30d6537cb17e6e9f8a53d158acf2dd5122581209f"
        },
        "downloads": -1,
        "filename": "scikinC-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6fb4036163e666f5e6a51bbbe53d0c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 27901,
        "upload_time": "2021-12-03T15:55:21",
        "upload_time_iso_8601": "2021-12-03T15:55:21.549851Z",
        "url": "https://files.pythonhosted.org/packages/aa/08/dbf193e572aa62f2fb40277db52e585bc80cd18077b86519e32f33ba2ffe/scikinC-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f301f4cc764f6711c1652cf47e4ba3c8d1bc70e3aa0c0a49df5a65a38e0a072",
          "md5": "be3ef981cd2d4e09c807ee74a6d39f7d",
          "sha256": "74631d7be7f7ea34d431ace2d06a59454b3829c77e6c0590ffd1b43d60c7bd84"
        },
        "downloads": -1,
        "filename": "scikinC-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be3ef981cd2d4e09c807ee74a6d39f7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 27936,
        "upload_time": "2022-02-15T15:33:59",
        "upload_time_iso_8601": "2022-02-15T15:33:59.621156Z",
        "url": "https://files.pythonhosted.org/packages/4f/30/1f4cc764f6711c1652cf47e4ba3c8d1bc70e3aa0c0a49df5a65a38e0a072/scikinC-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d760feefa1a858944e7db09c66639ce0844020307b4b6d16e28f4f19538ffa9a",
          "md5": "cf675874a612c104ee45c0ad2338651f",
          "sha256": "f8aa8630cf6e7ea52974dbdccf623e8d672b1cffea769f6263aa574d08c9baff"
        },
        "downloads": -1,
        "filename": "scikinC-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf675874a612c104ee45c0ad2338651f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 28351,
        "upload_time": "2022-02-16T10:05:58",
        "upload_time_iso_8601": "2022-02-16T10:05:58.761853Z",
        "url": "https://files.pythonhosted.org/packages/d7/60/feefa1a858944e7db09c66639ce0844020307b4b6d16e28f4f19538ffa9a/scikinC-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7a96a05eae477c973dfbd8c65220be9cdac3d382b1ef17c55b7b6d30807b551",
          "md5": "b876e76f0d5839c574973bd2d82c4c24",
          "sha256": "7fe5456deb49d0c6b5775a6bef15f2f30a463c0e0b73822f61dc95f0f0607c7d"
        },
        "downloads": -1,
        "filename": "scikinC-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b876e76f0d5839c574973bd2d82c4c24",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 24490,
        "upload_time": "2022-02-23T16:52:04",
        "upload_time_iso_8601": "2022-02-23T16:52:04.160420Z",
        "url": "https://files.pythonhosted.org/packages/e7/a9/6a05eae477c973dfbd8c65220be9cdac3d382b1ef17c55b7b6d30807b551/scikinC-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2dcf2f4306413e92c187a2ccb76f0fae30d7c653c3132079146568c35628552",
          "md5": "5ce89d07769f71bf94c9d519c8f0f833",
          "sha256": "2b67aa7cac19d08318055f08666ec2c19a71fc257be813d39dee6b3c93555102"
        },
        "downloads": -1,
        "filename": "scikinC-0.2.3b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ce89d07769f71bf94c9d519c8f0f833",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 24941,
        "upload_time": "2022-02-23T17:07:58",
        "upload_time_iso_8601": "2022-02-23T17:07:58.006903Z",
        "url": "https://files.pythonhosted.org/packages/c2/dc/f2f4306413e92c187a2ccb76f0fae30d7c653c3132079146568c35628552/scikinC-0.2.3b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78c9199aa6e2bb4731170c8c17d6c2991605175b10bd03a9eb36a5ac3f9d3162",
          "md5": "10262181714bd2406dd7ba79c40b9ddc",
          "sha256": "ef902152fb5a8e656343d37adebb73ed8c710399267a0cf44f9505f31d069024"
        },
        "downloads": -1,
        "filename": "scikinC-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10262181714bd2406dd7ba79c40b9ddc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 24914,
        "upload_time": "2022-02-23T17:11:32",
        "upload_time_iso_8601": "2022-02-23T17:11:32.888827Z",
        "url": "https://files.pythonhosted.org/packages/78/c9/199aa6e2bb4731170c8c17d6c2991605175b10bd03a9eb36a5ac3f9d3162/scikinC-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4116000480c82a292789b54e084cebeffac4f66995cbc5eac66fef3608e81eb1",
          "md5": "de8f02b437abdc8b6faa429221867c39",
          "sha256": "f93496164b4cb1c1e93ae28d4a4963cf80c396f5ea27296c921968355a77691f"
        },
        "downloads": -1,
        "filename": "scikinC-0.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de8f02b437abdc8b6faa429221867c39",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 28982,
        "upload_time": "2022-07-07T16:19:58",
        "upload_time_iso_8601": "2022-07-07T16:19:58.458806Z",
        "url": "https://files.pythonhosted.org/packages/41/16/000480c82a292789b54e084cebeffac4f66995cbc5eac66fef3608e81eb1/scikinC-0.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30bddd09c83cd396d2cc55283f92911e6ec45b63cdc9c90c0c2f96fd57642e06",
          "md5": "7e649d5e10c4ffd20350f5796016a9c6",
          "sha256": "545d65efae30b46ec495fe2630b57d7527ebfeb432af00e4310024b624651fdc"
        },
        "downloads": -1,
        "filename": "scikinC-0.2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e649d5e10c4ffd20350f5796016a9c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 25604,
        "upload_time": "2022-07-08T15:57:48",
        "upload_time_iso_8601": "2022-07-08T15:57:48.994611Z",
        "url": "https://files.pythonhosted.org/packages/30/bd/dd09c83cd396d2cc55283f92911e6ec45b63cdc9c90c0c2f96fd57642e06/scikinC-0.2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30bddd09c83cd396d2cc55283f92911e6ec45b63cdc9c90c0c2f96fd57642e06",
        "md5": "7e649d5e10c4ffd20350f5796016a9c6",
        "sha256": "545d65efae30b46ec495fe2630b57d7527ebfeb432af00e4310024b624651fdc"
      },
      "downloads": -1,
      "filename": "scikinC-0.2.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7e649d5e10c4ffd20350f5796016a9c6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 25604,
      "upload_time": "2022-07-08T15:57:48",
      "upload_time_iso_8601": "2022-07-08T15:57:48.994611Z",
      "url": "https://files.pythonhosted.org/packages/30/bd/dd09c83cd396d2cc55283f92911e6ec45b63cdc9c90c0c2f96fd57642e06/scikinC-0.2.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}