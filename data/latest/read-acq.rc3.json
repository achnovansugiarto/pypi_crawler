{
  "info": {
    "author": "EDGES Team",
    "author_email": "steven.g.murray@asu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "========\nread_acq\n========\n**Read EDGES ACQ spectrum files.**\n\n.. image:: https://travis-ci.org/edges-collab/read_acq.svg?branch=master\n    :target: https://travis-ci.org/edges-collab/read_acq\n.. image:: https://codecov.io/gh/edges-collab/read_acq/branch/master/graph/badge.svg\n    :target: https://travis-ci.org/edges-collabcodecov.io/gh/edges-collab/read_acq\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\nInstallation\n============\n\nIn a new/existing python environment, run\n``pip install git+https://github.com/edges-collab/read_acq``.\n\nIf you wish to develop ``read_acq``, do the following::\n\n    git clone https://github.com/edges-collab/read_acq\n    cd read_acq\n    pip install -e .\n\nUsage\n=====\n\n``read_acq`` can be used in a Python interpreter or directly via the command line.\n\nCLI\n---\n\nTo use the CLI, a single command is provided:\n\n    acq convert <data.acq> [<data2.acq> ...] [-f format1 [-f format2]]\n\nThis will convert the file(s) provided to all formats provided, and place any resulting\nfiles in the same location as the original datafile(s) (but with different extension).\nThe default format is 'mat'.\nThe command can be run from anywhere on the system, and the file given can be a\nrelative or absolute path.\n\nMultiple data files can be given, and each will be converted. Wildcards may also be\nused in any of the filenames, eg.::\n\n    acq convert data/*.acq\n\nLibrary\n-------\n\nThe main point of entry for the Python interface is ``decode_file``::\n\n    >>> from read_acq import decode_file\n    >>> data = decode_file(\"my_data.acq\", write_formats=[])\n\nBy default, this function will also write the file in ``.mat`` format, but you can turn\nthat off by providing ``write_formats=[]``. The output is a ``numpy`` array of the data.\nSeveral more options are provided, use ``help(decode_file)`` in an interpreter to see\nall the options.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/edges-collab/read_acq",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "read-acq",
    "package_url": "https://pypi.org/project/read-acq/",
    "platform": "any",
    "project_url": "https://pypi.org/project/read-acq/",
    "project_urls": {
      "Homepage": "https://github.com/edges-collab/read_acq"
    },
    "release_url": "https://pypi.org/project/read-acq/0.5.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Read/Write ACQ Spectrum Files",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14227406,
  "releases": {
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7594eaf24bb81728c17e7654119256ea855518cdb8918066c0e0ea1f13f3c79d",
          "md5": "94bd4020be41bc79099fa77ec8c0c7a4",
          "sha256": "ab1378aa8b4471f80d093b656394608acdaac72cf610995120934626d04bf647"
        },
        "downloads": -1,
        "filename": "read_acq-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "94bd4020be41bc79099fa77ec8c0c7a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 477192,
        "upload_time": "2021-06-03T21:51:56",
        "upload_time_iso_8601": "2021-06-03T21:51:56.851851Z",
        "url": "https://files.pythonhosted.org/packages/75/94/eaf24bb81728c17e7654119256ea855518cdb8918066c0e0ea1f13f3c79d/read_acq-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e6eb79fdd1a2435269dc47b1bdc32e1a08cadcc462d5a97cf4fc908663cd863",
          "md5": "04632caf6150feb864ea9b1b51876fb9",
          "sha256": "0a08d92046f294c77776ac3e8feee9dd87c431a105d54af796625d7ba2c131bd"
        },
        "downloads": -1,
        "filename": "read_acq-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "04632caf6150feb864ea9b1b51876fb9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 465200,
        "upload_time": "2021-06-04T23:03:46",
        "upload_time_iso_8601": "2021-06-04T23:03:46.134930Z",
        "url": "https://files.pythonhosted.org/packages/1e/6e/b79fdd1a2435269dc47b1bdc32e1a08cadcc462d5a97cf4fc908663cd863/read_acq-0.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee71de3b96dcfd479cb4badcc8b57fc17b3a42605dd2bf72321e6a97d0c8045b",
          "md5": "c13e5b221ae9215d5bf762ab339a1830",
          "sha256": "6c26eae2b0935728c1630e4aa6f9c9ba33c26a1e6e253c48c668a7e6faa6d8f9"
        },
        "downloads": -1,
        "filename": "read_acq-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c13e5b221ae9215d5bf762ab339a1830",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 485863,
        "upload_time": "2022-06-23T16:59:39",
        "upload_time_iso_8601": "2022-06-23T16:59:39.188173Z",
        "url": "https://files.pythonhosted.org/packages/ee/71/de3b96dcfd479cb4badcc8b57fc17b3a42605dd2bf72321e6a97d0c8045b/read_acq-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee71de3b96dcfd479cb4badcc8b57fc17b3a42605dd2bf72321e6a97d0c8045b",
        "md5": "c13e5b221ae9215d5bf762ab339a1830",
        "sha256": "6c26eae2b0935728c1630e4aa6f9c9ba33c26a1e6e253c48c668a7e6faa6d8f9"
      },
      "downloads": -1,
      "filename": "read_acq-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c13e5b221ae9215d5bf762ab339a1830",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 485863,
      "upload_time": "2022-06-23T16:59:39",
      "upload_time_iso_8601": "2022-06-23T16:59:39.188173Z",
      "url": "https://files.pythonhosted.org/packages/ee/71/de3b96dcfd479cb4badcc8b57fc17b3a42605dd2bf72321e6a97d0c8045b/read_acq-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}