{
  "info": {
    "author": "Lucas Rangel Cezimbra",
    "author_email": "lucas@cezimbra.tec.br",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "consul-decouple\n===============\n\n.. image:: https://badge.fury.io/py/consul-decouple.svg\n    :target: https://badge.fury.io/py/consul-decouple\n    :alt: PyPI\n\nAn extension for\n`python-decouple <https://github.com/henriquebastos/python-decouple>`__\nto read Consul using\n`python-consul2 <https://github.com/poppyred/python-consul2>`__.\n\n.. code:: bash\n\n    pip install consul-decouple\n\n\nHow it works\n------------\n\n1. Read config from environment;\n2. If it's connected with Consul, it'll read the config from there;\n3. python-decouple behavior:\n\n   1. Repository: ini or .env file;\n   2. default argument passed to config;\n\n\nHow to use\n----------\n\n-  Read Consul settings from enviroment. CONSUL\\_HOST=host,\n   CONSUL\\_PORT=port, CONSUL\\_TOKEN=token, CONSUL\\_SCHEME=scheme\n\n.. code-block:: python\n\n    from consul_decouple import config\n\n    my_key = config('my_bool_key', cast=bool, default=False)\n\n\n-  Creating a custom Consul connection\n\n.. code-block:: python\n\n    from consul import Consul\n    from consul_decouple import AutoConfig\n\n    consul = Consul(host='127.0.0.1', port=8500, token=None, scheme='http')\n    config = AutoConfig(consul)\n    my_key = config('my_bool_key', cast=bool, default=False)\n\n\n-  Read only one KeyValue from Consul and parse it from JSON. It'll\n   reads the configs from the parsed JSON\n\n.. code-block:: python\n\n    from consul_decouple import AutoConfig\n\n    config = AutoConfig(json_kv='my_key_with_json_value')\n    my_key = config('my_bool_key', cast=bool, default=False)\n\n\nContribute\n----------\n\n.. code:: bash\n\n    git clone https://github.com/lucasrcezimbra/consul-decouple\n    cd consul-decouple\n    python -m venv .venv\n    source .venv/bin/activate\n    pip install -r requirements-dev.txt\n    pre-commit install\n    docker-compose up -d\n    pytest",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lucasrcezimbra/consul-decouple",
    "keywords": "consul,decouple,python-decouple,python-consul,python-consul2",
    "license": "LGPLv2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "consul-decouple",
    "package_url": "https://pypi.org/project/consul-decouple/",
    "platform": "",
    "project_url": "https://pypi.org/project/consul-decouple/",
    "project_urls": {
      "Homepage": "https://github.com/lucasrcezimbra/consul-decouple"
    },
    "release_url": "https://pypi.org/project/consul-decouple/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An extension for python-decouple to read Consul using python-consul2.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10418614,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd24b70ca46e772b54ecd2a6af226597c2c4e41aa94be2f1388d5f2edcb91ea9",
          "md5": "10ca6841e37bb5331389fa438c8fa725",
          "sha256": "d0eb114c934b5aa501f99d0fdfdcc3dc75617e79cfc0ddbab2c53b5698c0eacb"
        },
        "downloads": -1,
        "filename": "consul-decouple-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "10ca6841e37bb5331389fa438c8fa725",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12535,
        "upload_time": "2021-05-15T20:01:50",
        "upload_time_iso_8601": "2021-05-15T20:01:50.171313Z",
        "url": "https://files.pythonhosted.org/packages/fd/24/b70ca46e772b54ecd2a6af226597c2c4e41aa94be2f1388d5f2edcb91ea9/consul-decouple-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "307d130ff1f5b4c2c5520c5763a8eb5e6699df8212c72fb817c837958907a62a",
          "md5": "18093b68cec8d8c24b6375e0fd792b64",
          "sha256": "2a15304908d46ec94456de035f2a5a6525d0ebdeaee58ad595ca184894556c07"
        },
        "downloads": -1,
        "filename": "consul-decouple-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "18093b68cec8d8c24b6375e0fd792b64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12688,
        "upload_time": "2021-05-20T18:09:57",
        "upload_time_iso_8601": "2021-05-20T18:09:57.267604Z",
        "url": "https://files.pythonhosted.org/packages/30/7d/130ff1f5b4c2c5520c5763a8eb5e6699df8212c72fb817c837958907a62a/consul-decouple-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "307d130ff1f5b4c2c5520c5763a8eb5e6699df8212c72fb817c837958907a62a",
        "md5": "18093b68cec8d8c24b6375e0fd792b64",
        "sha256": "2a15304908d46ec94456de035f2a5a6525d0ebdeaee58ad595ca184894556c07"
      },
      "downloads": -1,
      "filename": "consul-decouple-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "18093b68cec8d8c24b6375e0fd792b64",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12688,
      "upload_time": "2021-05-20T18:09:57",
      "upload_time_iso_8601": "2021-05-20T18:09:57.267604Z",
      "url": "https://files.pythonhosted.org/packages/30/7d/130ff1f5b4c2c5520c5763a8eb5e6699df8212c72fb817c837958907a62a/consul-decouple-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}