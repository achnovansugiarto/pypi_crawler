{
  "info": {
    "author": "Kojo Nimako",
    "author_email": "boakyeni@usc.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<!--source /Users/kojo/opt/anaconda3/bin/activate\nconda activate /Users/kojo/opt/anaconda3-->\n\n## Installation\n\nYou can install the `complex-curve-fit-gui` from [PyPi](https://pypi.org/project/complex-curve-fit-gui/):\n\n    pip install complex-curve-fit-gui\n\nThe GUI is supported on Python 3.7 and above.  \n**Note**: only `complex-curve-fit-gui` is installed without any required dependencies. Depending on if you are using pip or conda to manage your environment you should manually install the following additional packages:  \n\n- Using `pip`:\n\n      pip install numpy scipy matplotlib PyQt5\n\n- Using `conda` (required for M1 Mac):    \n\n      conda install numpy scipy matplotlib qtpy pyqt\n\n### Getting Started\n1. If on MacOS M1 a conda environment will be needed\n2. import the gui:\n       `from curvefitgui import curve_fit_gui`\n3. define x and y data as 1 dimensional numpy arrays of equal length\n       `xdata = np.array([1, 2, 3, 4, 5])`\n       `ydata = np.array([-3.5, -2.4, -1, 0.5, 1.8])`\n4. Call curve_fit_gui:\n    - Set first parameter to None to be able to select predefined functions\n    - For example: \n\n       `curve_fit_gui(None,xdata,ydata)`\n5. Optionally disable gui and immediately get fit results as tuple (popt, pcov, result) where popt is an array of the best-fit parameters, pcov is an array of the confidence intervals, and result is an lmfit ModelResult object. [Model Result](https://lmfit.github.io/lmfit-py/model.html#lmfit.model.ModelResult)\n       `curve_fit_gui(function,xdata,ydata, showgui=False)`\n\n\n### curve_fit_gui function:\nThis starts up the GUI. The call signature is `curve_fit_gui(f,xdata,ydata,xerr=None -> [optional],yerr=None -> [optional],p0=None  -> [optional],xlabel=\"x-axis\" -> [optional],ylabel=\"y-axis\" -> [optional],absolute_sigma=False -> [optional],jac=None -> [optional],showgui=True -> [optional],**kwargs, -> [optional])`\n - f : callable\n        the fit function which if set to None, gives option of selection predefined fit functions\n -  xdata : 1-D numpy array\n        x-coordinates of the data\n -  ydata : 1-D numpy array\n        y-coordinates of the data\n -  yerr : 1-D numpy array, optional (default:None)\n        error/uncertainty in y-values used for weighted fit\n        with a relative weight defined as 1/yerr**2\n        (for compatibility also the use of the keyword sigma can be used for the same)\n - xerr : 1-D numpy array, optional (default:None)\n        error in x-values. For plotting errorbars only and ignored during fitting\n - xlabel : string, optional (default:'x-values')\n        x-axis title in the plot\n - ylabel : string, optional (default:'y-values')\n        y-axis title in the plot\n - title  : string, optional\n        data plot title\n - p0 : array-like, optional\n        initial values for fit parameters, if not specified 1 is used for each parameter\n - showgui : boolean, optional (default=True)\n        if True, the gui is shown, otherwise not\n - absolute_sigma : boolean, optional\n        see doc-string scipy.optimize.curve_fit()\n - kwargs\n        keyword arguments for compatibility (e.g. you can use sigma to specify the error in y)\n\n### Return Data\n- The curve fit function returns a tuple with three elements.\n       1. Array containing the fit parameters\n       2. Array containing the standard error (+/-)\n       3. lmfit Model_Result object pertaining to the best fit, reference here: https://lmfit.github.io/lmfit-py/model.html#the-modelresult-class\n\n### User defined functions\n - To make a user defined function create a function and pass to curve_fit_gui as f. For example: \n ```python\n       def linear(x, a, b, c): \n              return y = a * x + b\n\n       curve_fit_gui(linear, xdata, ydata)\n```\n\n### User defined complex functions\n - When defining a complex function add the **complex=True** keyword argument and use `1j` in the equation. For example for Euler's equation e^(ix)cs:\n       `return a * (np.exp(1j * (x)))`\n\n\n### Customizing Data Plot\nThe plots are customizable from inside the gui and also from the `curve_fit_gui` function call by using keyword arguments or kwargs. The options available from a matplotlib plot are also available for the main data plot\nFor example: `curve_fit_gui(None, xdata, ydata, markerfacecolor=\"None\", linestyle=\"-\"`\n**For a list of optional keyword arguments visit the matplotlib documentation on this page under the list of available Line2D properties**: [matplotlib.pyplot.plot](https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)\n - Note: Use full names i.e. linewidth not lw\n - In addition, title can be set using title keyword argument i.e `curve_fit_gui(...,...,...,title=\"More Data\")`\n\n### Customizing Fitline:\nOptions for customizing fitline inlclude color, linestyle, and thickness. The values are the same from matplotlib, however the argument is preceded with fitline_. For example `curve_fit_gui(None, xdata, ydata, fitline_color=\"red\", fitline_linestle=\"-\")`. The possible customizations for fitline are:\n    - fitline_color\n    - fitline_linestyle: supported values are '-', '--', '-.', ':', 'None', ' ', '', 'solid', 'dashed', 'dashdot', 'dotted'\n    - fitline_label\n    - fitline_linewidth\n\n\n### GUI controls\n1. **Data plot:** A matplotlib plot that shows the data as solid dots and both y-error and x-error errorbars if provided. A fitted curve as a dashed line is shown if a fit is performed.\n2. **Residual plot** A matplotlib plot that shows the residuals as the difference between the measured and fitted values:\n3. **Model settings:** Here you can enter inital values for the fitparameters. By ticking the checkbox `fix` you can set a parameter to fixed:e.g. the parameter is not optimised during the fit.\n ![Model Image](images/model_scr.png)\n4. **Weight settings:** If error data on the y-values are passed using the keyword argument `yerr` you can use the dropdownbox to set how the error data is treated:\n    - *None*: the error data is ignored\n    - *Relative*: Use the error data for a relative weight. Corresponds to setting scipy's curve_fit() function keyword `absolute_sigma = False`.\n    - *Standard deviation*: Treat the error data as being standard deviations. Corresponds to setting scipy's curve_fit() function keyword `absolute_sigma = True`.\n5. **Evaluate:** Use this button to compute the model function given the current values of the parameters (set in the model settings panel)\n6. **Fit:** Performs the fit and updates the parameter values.\n7. **Report:** When a fit is performed, the results are shown here. The information on the model is actually the provided docstring of the function `f` that is passed to the `curvefitgui` function.\n8. **Quit:** Quits the gui and returns a tuple of best-fit parameters, confidence interval, and Model Result object from lmfit. [Model Result](https://lmfit.github.io/lmfit-py/model.html#lmfit.model.ModelResult)\n9. **Toolbar:** This is the standard matplotlib toolbar to adjust some plot properties and provides zoom/pan and save options.\n  - **Customize** Change visual features of the plot such as marker type or color and axis titles ![Customize Button Image](images/customize_scr.png)\n  - **Pan and Zoom** Shift and zoom on plot ![Pan and Zoom](images/pan_zoom_scr.png)\n  - **Left and Right** Undo and redo actions for shift and zoom ![Undo and Redo](images/arrows_scr.png)\n  - **Home** Return to original plot view ![Home](images/home_scr.png)\n10. **FitTextbox:** This textbox is generated if a valid fit is performed. It can be moved by the mouse to any convenient positions in the plot.\n11. **Range Selector** Activates/deactivates the range-selector. The range-selector allows to select a datarange used for fitting. Only datapoints that are within the two vertical dashed lines are considered during fitting. The lines can be moved using the mouse.\n![Range Selector](images/range_selector_scr.png)\n\n\n\n<!-- To run program\n`python3 curve.py\"`\n\n#### For someone looking to expand this code:\nThe _tools.py file is the main backend of this program. Here you will find the functionality of the the things seen on the front end.\nAt current state the program uses custom classes such as FitModel, FitData, FitParameter. These are parts left over from prior to integration with with lmfit model. They were left as they integrate better with the front end. However all the data from those classes can be accessed through the lmfit model. -->\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/boakyeni/data-visualization-and-curve-fitting",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "complex-curve-fit-gui",
    "package_url": "https://pypi.org/project/complex-curve-fit-gui/",
    "platform": null,
    "project_url": "https://pypi.org/project/complex-curve-fit-gui/",
    "project_urls": {
      "Homepage": "https://github.com/boakyeni/data-visualization-and-curve-fitting"
    },
    "release_url": "https://pypi.org/project/complex-curve-fit-gui/1.0.8/",
    "requires_dist": null,
    "requires_python": ">=3.7, <4",
    "summary": "GUI for lmfit",
    "version": "1.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17521407,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f42194dce446a34543564cb7703851846c95f85faebff027ad5d40a35951729",
          "md5": "ebb9aede6e9e579f0570d3ded0cbf1ea",
          "sha256": "921e06c17d2dddb8ddb5306fd48426b08e69d76f94aa668d316c95775b6c870f"
        },
        "downloads": -1,
        "filename": "complex-curve-fit-gui-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ebb9aede6e9e579f0570d3ded0cbf1ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 61753,
        "upload_time": "2023-03-02T19:32:55",
        "upload_time_iso_8601": "2023-03-02T19:32:55.867297Z",
        "url": "https://files.pythonhosted.org/packages/8f/42/194dce446a34543564cb7703851846c95f85faebff027ad5d40a35951729/complex-curve-fit-gui-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e3f3da972a23677ab0d7cac28204b3ea807c593014274f5c9aebaf4780b2622",
          "md5": "798cb56bfa9f34bb88d528f5f2e5f65c",
          "sha256": "5ec4bcac1a1a717e94c4b279f4cccce71d9a2432101d24598deb8c96412e231c"
        },
        "downloads": -1,
        "filename": "complex-curve-fit-gui-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "798cb56bfa9f34bb88d528f5f2e5f65c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 61778,
        "upload_time": "2023-03-02T19:41:28",
        "upload_time_iso_8601": "2023-03-02T19:41:28.327871Z",
        "url": "https://files.pythonhosted.org/packages/2e/3f/3da972a23677ab0d7cac28204b3ea807c593014274f5c9aebaf4780b2622/complex-curve-fit-gui-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec6b600de55da829266a57f50e64b8c12964f5c58181fe603e047634582d2d5e",
          "md5": "66727ad1b22b99fda1c499a613ee6f72",
          "sha256": "4a5961876b3934e1ac92efbafa715f68601361e05aa59faf0ea978248e0f5e2c"
        },
        "downloads": -1,
        "filename": "complex-curve-fit-gui-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "66727ad1b22b99fda1c499a613ee6f72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 61756,
        "upload_time": "2023-03-02T19:48:55",
        "upload_time_iso_8601": "2023-03-02T19:48:55.051694Z",
        "url": "https://files.pythonhosted.org/packages/ec/6b/600de55da829266a57f50e64b8c12964f5c58181fe603e047634582d2d5e/complex-curve-fit-gui-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48ae5964d154c678feed8bd175a1bff3eb0fc6c4b41cf479700b890509ce72a5",
          "md5": "2dd64dc13ed65ff998fffe1b81447b36",
          "sha256": "fe4b08e1145eafaedf8f2a24e47b587c308eb2e5321d5918839d597a3c6093c2"
        },
        "downloads": -1,
        "filename": "complex-curve-fit-gui-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2dd64dc13ed65ff998fffe1b81447b36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 61774,
        "upload_time": "2023-03-02T19:50:46",
        "upload_time_iso_8601": "2023-03-02T19:50:46.358849Z",
        "url": "https://files.pythonhosted.org/packages/48/ae/5964d154c678feed8bd175a1bff3eb0fc6c4b41cf479700b890509ce72a5/complex-curve-fit-gui-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7d3c36db40cf3777f7bc79ba3dfcfed2d1daf2cdc9ae3e11586155afbc0e58d",
          "md5": "1e4a5eddc0e5b265174676d1e1e80d25",
          "sha256": "76d2755429bbfc0cd496e21ae75a4e3cdbeef215ad4feb13e9cdaa5d6ad1aa3e"
        },
        "downloads": -1,
        "filename": "complex-curve-fit-gui-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1e4a5eddc0e5b265174676d1e1e80d25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 65261,
        "upload_time": "2023-03-27T18:29:08",
        "upload_time_iso_8601": "2023-03-27T18:29:08.548130Z",
        "url": "https://files.pythonhosted.org/packages/a7/d3/c36db40cf3777f7bc79ba3dfcfed2d1daf2cdc9ae3e11586155afbc0e58d/complex-curve-fit-gui-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed0a2c497b8a82e26364a5d192c685abb7c4dc87e59349eb53fd8e3d41221549",
          "md5": "27d63e6f9d9ddde3074072a78e238cc0",
          "sha256": "6586a01482da4da7fd5197eb81a76d5dc75b8f366b2f103871ab6ba76cef8fd4"
        },
        "downloads": -1,
        "filename": "complex-curve-fit-gui-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "27d63e6f9d9ddde3074072a78e238cc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 4800336,
        "upload_time": "2023-03-27T18:32:30",
        "upload_time_iso_8601": "2023-03-27T18:32:30.934028Z",
        "url": "https://files.pythonhosted.org/packages/ed/0a/2c497b8a82e26364a5d192c685abb7c4dc87e59349eb53fd8e3d41221549/complex-curve-fit-gui-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db7c31e046af23ba5ac0a79cd51d5127005465580880695cdd03fdf60259f319",
          "md5": "5437b3e1acbf3a92bb0fe0a426fa20ff",
          "sha256": "0d0493ffc2500a76d093788e8c6a02bd6347189f39d0dce15453528e7e952520"
        },
        "downloads": -1,
        "filename": "complex-curve-fit-gui-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "5437b3e1acbf3a92bb0fe0a426fa20ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 4800345,
        "upload_time": "2023-03-27T18:35:43",
        "upload_time_iso_8601": "2023-03-27T18:35:43.790216Z",
        "url": "https://files.pythonhosted.org/packages/db/7c/31e046af23ba5ac0a79cd51d5127005465580880695cdd03fdf60259f319/complex-curve-fit-gui-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1aae04619b29d32c5964a39797bf0a44f5b53a76e30dc85887727ca0d4ec47e",
          "md5": "a1a37cc6cc44d83306f40f68dda58f94",
          "sha256": "4a045a18993c946a4000582d222220ca818cfd9242b11f2a16e83082af0a15a6"
        },
        "downloads": -1,
        "filename": "complex-curve-fit-gui-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "a1a37cc6cc44d83306f40f68dda58f94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 4800579,
        "upload_time": "2023-03-27T19:29:08",
        "upload_time_iso_8601": "2023-03-27T19:29:08.262265Z",
        "url": "https://files.pythonhosted.org/packages/f1/aa/e04619b29d32c5964a39797bf0a44f5b53a76e30dc85887727ca0d4ec47e/complex-curve-fit-gui-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eabecdd40927cfe21216b67d5f713cce02ed8c46084377fe3668448b9b0d5981",
          "md5": "a1da13327fef40dd1730a4a933d01adc",
          "sha256": "f27752e28bf2c87647d9525301cd021d4271e2d4eb1044b8740faa97319a60ba"
        },
        "downloads": -1,
        "filename": "complex-curve-fit-gui-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "a1da13327fef40dd1730a4a933d01adc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 4800722,
        "upload_time": "2023-03-31T04:40:31",
        "upload_time_iso_8601": "2023-03-31T04:40:31.932297Z",
        "url": "https://files.pythonhosted.org/packages/ea/be/cdd40927cfe21216b67d5f713cce02ed8c46084377fe3668448b9b0d5981/complex-curve-fit-gui-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eabecdd40927cfe21216b67d5f713cce02ed8c46084377fe3668448b9b0d5981",
        "md5": "a1da13327fef40dd1730a4a933d01adc",
        "sha256": "f27752e28bf2c87647d9525301cd021d4271e2d4eb1044b8740faa97319a60ba"
      },
      "downloads": -1,
      "filename": "complex-curve-fit-gui-1.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "a1da13327fef40dd1730a4a933d01adc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 4800722,
      "upload_time": "2023-03-31T04:40:31",
      "upload_time_iso_8601": "2023-03-31T04:40:31.932297Z",
      "url": "https://files.pythonhosted.org/packages/ea/be/cdd40927cfe21216b67d5f713cce02ed8c46084377fe3668448b9b0d5981/complex-curve-fit-gui-1.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}