{
  "info": {
    "author": "Nikakto",
    "author_email": "black-z@bk.ru",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# FastAPI Querysets\n![CDNJS](https://img.shields.io/badge/Python-3.8%20%7C%203.9%20%7C%203.10%20%7C%203.11-2334D058)\n![CDNJS](https://shields.io/badge/FastAPI-%3E=0.7.0-009485)\n\n---\n**Documentation**: <a href=\"https://fastapi-querysets.readthedocs.io\" target=\"_blank\">https://fastapi-querysets.readthedocs.io</a>\n\n**Source Code**: <a href=\"https://github.com/Nikakto/fastapi-querysets\" target=\"_blank\">https://github.com/Nikakto/fastapi-querysets</a>\n\n---\n\n## Why to use?\n\nWhile you are developing FastAPI applications you are using databases with ORM. Most of the endpoints are view of database tables and require restrict queryset by filtering, pagination, ordering. This project is generic and reusable way to create restricted querysets for your endpoints.\n\n## Supported ORM\n- <a href=\"https://github.com/tortoise/tortoise-orm\" target=\"_blank\">Tortoise ORM</a>\n\n## Requirements\n- python >=3.8,<4.0\n- fastAPI >= 0.7.0\n- tortoise-orm >= 0.18.1\n\n## Installation\n\n```\npip install fastapi-querysets\n```\n\n# Quick tutorial\n\n---\n\n---\n\n## Tortoise model\n\nLetâ€™s start with our model\n\n```python\n# models/tortoise.py\n\nimport datetime\nfrom typing import Optional\n\nfrom tortoise import Model\nfrom tortoise import fields\n\n\nclass Task(Model):\n    id: int = fields.IntField(pk=True)\n    approved: Optional[bool] = fields.BooleanField(default=False, null=True)\n    code: str = fields.CharField(max_length=6)\n    created_at: datetime.datetime = fields.DatetimeField(default=datetime.datetime.now)\n```\n---\n\n## Pydantic model\n\nCreate database representation model\n\n```python\n# models/pydantic.py\n\nfrom tortoise.contrib.pydantic import pydantic_model_creator\n\nfrom myproject.models.tortoise import Task\n\n\nTaskModelOut = pydantic_model_creator(\n    Task,\n    name=\"TaskModelOut\",\n    include=(\n        \"id\",\n        \"approved\",\n        \"code\",\n        \"created_at\"\n    ),\n)\n```\n\n---\n\n## RouterQuerySet\n\n### Filters\n\nWe have a number of fields we want to let our users filter based on them. We create a RouterQuerySetFilter for this. Filter class is argument for `FastAPI.Depends` at endpoint.  \n\nYou require to define ORM filter keyword, type of data and setup source of data (`Query`, `Path`, `Body`, etc).\n\n```python\n# querysets_filters.py\n\nimport dataclasses\nimport datetime\nfrom typing import Optional\n\nfrom fastapi import Query\n\n\n@dataclasses.dataclass\nclass RouterQuerySetFilter:\n    id__in: Optional[list[int]] = Query(None, alias='id[]')\n    approved: Optional[bool] = Query(None)\n    approved__isnull: Optional[bool] = Query(None)\n    code: Optional[str] = Query(None)\n    created_at__lte: Optional[datetime.datetime] = Query(None)\n    created_at__gte: Optional[datetime.datetime] = Query(None)\n```\n\n### Model Queryset\n\nConfigure `RouterQueryset` properties\n\n```python\n# querysets.py\n\nfrom fastapi_querysets.mixins.filters import FilterMixin\nfrom fastapi_querysets.mixins.filters import FilterNegationMixin\nfrom fastapi_querysets.mixins.ordering import OrderingMixin\nfrom fastapi_querysets.mixins.pagination import PaginationMixin\nfrom fastapi_querysets.mixins.pagination import RouterPagination\nfrom fastapi_querysets.queryset import RouterQuerySet\n\nfrom myproject.models.tortoise import Task\nfrom myproject.querysets_filters import RouterQuerySetFilter\n\n\nclass TasksRouterQuerySet(FilterMixin, FilterNegationMixin, OrderingMixin, PaginationMixin, RouterQuerySet):\n    filter_class = RouterQuerySetFilter\n    ordering_default = \"id\"\n    ordering_fields = (\n        \"id\",\n        \"approved\",\n        \"code\",\n        \"created_at\",\n    )\n    pagination_class = RouterPagination\n    model = Task\n```\n\n---\n\n## Application\n\nCreate application, register list, list with pagination and retrieve endpoints.\n```python\n# app.py\n\nfrom fastapi import FastAPI\nfrom tortoise.contrib.fastapi import register_tortoise\nfrom tortoise.queryset import QuerySet\n\nfrom myproject.models.pydantic import TaskModelOut\nfrom myproject.models.tortoise import Task\nfrom myproject.querysets import TasksRouterQuerySet\n\n\napp = FastAPI()\n\n\nregister_tortoise(\n    app,\n    db_url=\"sqlite://:memory:\",\n    modules={\"models\": [\"myproject.models.tortoise\"]},\n    generate_schemas=True,\n    add_exception_handlers=True,\n)\n\n\n@app.get(\"tasks/\", response_model=list[TaskModelOut])\nasync def tasks_list_paginated(queryset: QuerySet[Task] = TasksRouterQuerySet()) -> list[TaskModelOut]:\n    return await TaskModelOut.from_queryset(queryset)\n\n\n@app.get(\"tasks/paginated\", response_model=list[TaskModelOut])\nasync def tasks_list_paginated(queryset: QuerySet[Task] = TasksRouterQuerySet().paginated) -> list[TaskModelOut]:\n    return await TaskModelOut.from_queryset(queryset)\n\n\n@app.get(\"tasks/{instance_id}\", response_model=list[TaskModelOut])\nasync def tasks_retrieve(task: QuerySet[Task] = TasksRouterQuerySet().instance) -> list[TaskModelOut]:\n    return TaskModelOut.from_orm(task)\n```\n\n---\n\n## Requests\n\n### List\n\nOn request effective queryset will be filtered and ordered by query params.\n\nFor example, user has requested endpoint with some query params\n```json\n{\n    \"created_at__lte\": \"2023-01-01T00:00:00\",\n    \"approved\": false,\n    \"ordering[]\": \"created_at\",\n}\n```\n\nRequest URL looks like  \n```http://localhost:8000/tasks/?created_at__lte=2023-01-01T00:00:00&approved=false&ordering[]=created_at```\n\nEffective queryset at the endpoint method will be\n```python\n(\n    Task\n    .filter(created_at__lte=datetime.datetime(2023, 1, 1, 0, 0, 0), approved=False)\n    .order_by(\"created_at\")\n)\n```\n\n### List paginated\n\nLike not paginated endpoint at this queryset will be filtered, ordering and additional paginated.\n\nFor example, user has requested endpoint with some query params\n```json\n{\n    \"page\": 2,\n    \"per_page\": 10,\n    \"created_at__lte\": \"2023-01-01T00:00:00\",\n    \"approved\": false,\n    \"ordering[]\": \"created_at\",\n}\n```\n\nRequest URL looks like   \n```http://localhost:8000/tasks/?page=2&per_page=10&created_at__lte=2023-01-01T00:00:00&approved=false&ordering[]=created_at```\n\n\nEffective queryset at endpoint method will be\n```python\n(\n    Task\n    .filter(created_at__lte=datetime.datetime(2023, 1, 1, 0, 0, 0), approved=False)\n    .order_by(\"created_at\")\n    .offset(10)\n    .limit(10)\n)\n```\n\nAs well as to `Response` will be added pagination information. Pagination information always matches effective queryset\n```json\n{\n    \"x-page\": \"2\",\n    \"x-pages\": \"4\",\n    \"x-per-page\": \"10\",\n    \"x-total\": \"32\"\n}\n```\n\n### Retrieve\n\nRequest URL looks like   \n```http://localhost:8000/tasks/10/```\n\nEndpoint method will get `Task` with `id == 10` as argument `task`.     \nIf `Task` with `id == 10` does not exist then endpoint return `Response(404)`  ",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Nikakto/fastapi-querysets",
    "keywords": "fastapi,filters,filtering,pagination,order,ordering,queryset,Tortoise,orm,database,db",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fastapi-querysets",
    "package_url": "https://pypi.org/project/fastapi-querysets/",
    "platform": null,
    "project_url": "https://pypi.org/project/fastapi-querysets/",
    "project_urls": {
      "Documentation": "https://fastapi-querysets.readthedocs.io",
      "Homepage": "https://github.com/Nikakto/fastapi-querysets",
      "Repository": "https://github.com/Nikakto/fastapi-querysets"
    },
    "release_url": "https://pypi.org/project/fastapi-querysets/0.1.1/",
    "requires_dist": [
      "fastapi (>=0.70.0)",
      "tortoise-orm (>=0.18.1)",
      "fastapi-depends-ext (>=0.2.2)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16693477,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25f1ae4f33f321c5922138620ce1b2cbc5b658c0329af7c1eea868f8045f9fb0",
          "md5": "2a71e07ed0d9c2b7fee35595520f0151",
          "sha256": "a3c2a335f2a50467103321a18100f520334b123fe29465a0fe479f8982c2dc35"
        },
        "downloads": -1,
        "filename": "fastapi_querysets-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a71e07ed0d9c2b7fee35595520f0151",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 8315,
        "upload_time": "2023-02-04T14:11:31",
        "upload_time_iso_8601": "2023-02-04T14:11:31.952358Z",
        "url": "https://files.pythonhosted.org/packages/25/f1/ae4f33f321c5922138620ce1b2cbc5b658c0329af7c1eea868f8045f9fb0/fastapi_querysets-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4eb4f725e6b3a29469241f44bff68fb98811b936f898483e194e7b8565b8baf1",
          "md5": "121803a490c287d9ba57bd703bbed1b0",
          "sha256": "a172de47ae3930dbd638f92e100439282de55ef3be313bd44133af4ff5733c63"
        },
        "downloads": -1,
        "filename": "fastapi_querysets-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "121803a490c287d9ba57bd703bbed1b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 8033,
        "upload_time": "2023-02-04T14:11:34",
        "upload_time_iso_8601": "2023-02-04T14:11:34.061026Z",
        "url": "https://files.pythonhosted.org/packages/4e/b4/f725e6b3a29469241f44bff68fb98811b936f898483e194e7b8565b8baf1/fastapi_querysets-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25f1ae4f33f321c5922138620ce1b2cbc5b658c0329af7c1eea868f8045f9fb0",
        "md5": "2a71e07ed0d9c2b7fee35595520f0151",
        "sha256": "a3c2a335f2a50467103321a18100f520334b123fe29465a0fe479f8982c2dc35"
      },
      "downloads": -1,
      "filename": "fastapi_querysets-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2a71e07ed0d9c2b7fee35595520f0151",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 8315,
      "upload_time": "2023-02-04T14:11:31",
      "upload_time_iso_8601": "2023-02-04T14:11:31.952358Z",
      "url": "https://files.pythonhosted.org/packages/25/f1/ae4f33f321c5922138620ce1b2cbc5b658c0329af7c1eea868f8045f9fb0/fastapi_querysets-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4eb4f725e6b3a29469241f44bff68fb98811b936f898483e194e7b8565b8baf1",
        "md5": "121803a490c287d9ba57bd703bbed1b0",
        "sha256": "a172de47ae3930dbd638f92e100439282de55ef3be313bd44133af4ff5733c63"
      },
      "downloads": -1,
      "filename": "fastapi_querysets-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "121803a490c287d9ba57bd703bbed1b0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 8033,
      "upload_time": "2023-02-04T14:11:34",
      "upload_time_iso_8601": "2023-02-04T14:11:34.061026Z",
      "url": "https://files.pythonhosted.org/packages/4e/b4/f725e6b3a29469241f44bff68fb98811b936f898483e194e7b8565b8baf1/fastapi_querysets-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}