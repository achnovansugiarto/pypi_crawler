{
  "info": {
    "author": "Sixty North AS",
    "author_email": "rob@sixty-north.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "==========\ndendrodict\n==========\n\nDictionary types that make it easier to work trees of nested dictionaries.\n\nConsider a nested regular dictionaries::\n\n  d = {\n      \"en\": {\n          \"gb\": \"English (United Kingdom)\",\n          \"us\": \"English (United States)\",\n          \"ca\": \"English (Canada)\",\n          \"za\": \"English (South Africa)\",\n      },\n      \"no\": {\n          \"nb\": \"Norwegian (Bokmål)\",\n          \"nn\": \"Norwegian (Nynorsk)\",\n      },\n      \"fr\": {\n          \"be\": \"French (Belgium)\",\n          \"ca\": \"French (Canada)\",\n          \"fr\": \"French (Standard)\",\n          \"ch\": \"French (Switzerland)\",\n      }\n  }\n\nfrom which we can construct a ``DeepDict``::\n\n  >>> from dendrodict import DeepDict\n  >>> languages = DeepDict(d)\n\nNested dictionaries can be accessed with single application of the square brackets get-item\noperator::\n\n  >>> languages[\"fr\", \"ca\"]\n  'French (Canada)'\n\nor by using a tuple as a key::\n\n  >>> languages[(\"no\", \"nb\")]\n  'Norwegian (Bokmål)'\n\nThe tuple key can also be used with other dictionary methods, such as ``get()``::\n\n  >>> languages.get((\"en\", \"us\"))\n  'English (United States)'\n\nIt's still possible index the inner dictionary levels::\n\n  >>> languages[\"en\"]\n  DeepDict(\n      {\n          'gb': 'English (United Kingdom)',\n          'us': 'English (United States)',\n          'ca': 'English (Canada)',\n          'za': 'English (South Africa)'\n      }\n  )\n\nwhich means that separate lookup operations are still supported::\n\n  >>> languages[\"en\"][\"za\"]\n  'English (South Africa)'\n\n\nThe tuple key form can also be used on construction, so flat dictionaries with tuple keys will be\nexpanded into nested dictionaries. Consider the following single-level mapping of tuple keys to\nvalues::\n\n  blocks = {\n      (\"mineral\", \"sandstone\", \"block\"): \"Sandstone\",\n      (\"mineral\", \"sandstone\", \"chiseled\"): \"Sandstone (Chiseled)\",\n      (\"mineral\", \"cobblestone\", \"block\"): \"Cobblestone\",\n      (\"mineral\", \"cobblestone\", \"slab\"): \"Cobblestone (Slab)\",\n      (\"mineral\", \"gold\", \"ore\"): \"Gold Ore\",\n      (\"wood\", \"birch\", \"block\"): \"Birch\",\n      (\"wood\", \"birch\", \"slab\"): \"Birch-Wood Slab\",\n      (\"wood\", \"oak\", \"block\"): \"Oak\",\n      (\"wood\", \"oak\", \"plank\"): \"Wooden Plank (Oak)\",\n  }\n\nCreated a ``DeepDict`` from this, gives a three-level structure::\n\n  >>> minecraft = DeepDict(blocks)\n\nwhich we can see by converted back to dictionaries using the ``to_dict()`` method::\n\n  >>> minecraft.to_dict()\n  {'mineral': {\n      'cobblestone': {\n          'block': 'Cobblestone',\n          'slab': 'Cobblestone (Slab)'\n      },\n      'gold': {\n          'ore': 'Gold Ore'\n      },\n      'sandstone': {\n          'block': 'Sandstone',\n          'chiseled': 'Sandstone (Chiseled)'\n      }\n  },\n  'wood': {\n      'birch': {\n          'block': 'Birch',\n          'slab': 'Birch-Wood Slab'\n      },\n      'oak': {\n          'block': 'Oak',\n          'plank': 'Wooden Plank (Oak)'}\n      }\n  }\n\n\nParticularly when dealing with configuration data, it can be useful to be able to use dotted names\nfor access to nested items. Use ``DottedDeepDict`` for this::\n\n  from dendrodict import DottedDeepDict\n\n  displays = DottedDeepDict(\n      {\n          \"resolution\": {\n              \"vga\": {\n                  \"width\": 640,\n                  \"height\": 480,\n              },\n              \"wxga\": {\n                  \"width\": 1280,\n                  \"height\": 800,\n              },\n              \"wqhd\": {\n                  \"width\": 2560,\n                  \"height\": 1440,\n              },\n          }\n      }\n  )\n\nDotted name syntax can be used for lookup::\n\n  >>> displays[\"resolution.vga.width\"]\n  640\n\nor for assignment at arbitrary levels::\n\n  >>> displays[\"resolution.1080p.width\"] = 1920\n  >>> displays[\"resolution.1080p.height\"] = 1080\n\nShallower levels are still available individually::\n\n  >>> displays[\"resolution.1080p\"]\n  DottedDeepDict({'width': 1920, 'height': 1080})\n\nand can be converted back to regular dictionaries::\n\n  >>> displays[\"resolution.wqhd\"].to_dict()\n  {'width': 2560, 'height': 1440}\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://bitbucket.org/sixty-north/dendrodict",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dendrodict",
    "package_url": "https://pypi.org/project/dendrodict/",
    "platform": "any",
    "project_url": "https://pypi.org/project/dendrodict/",
    "project_urls": {
      "Homepage": "http://bitbucket.org/sixty-north/dendrodict"
    },
    "release_url": "https://pypi.org/project/dendrodict/1.0.4/",
    "requires_dist": [
      "black ; extra == 'dev'",
      "bump2version ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "hypothesis ; extra == 'test'",
      "pytest ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Dict type that makes it easier to work with deeply nested dicts.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13628929,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0d5b16a846a2e38aeca878d450222ce6412b7746e12c6d9409eafaa2b85a8fb",
          "md5": "b12027ce67fff361e940cb4b53d564f1",
          "sha256": "1fa133e1a3a20d2b0038b013f986d84adfc83ae95773d855d5f84749c469e6da"
        },
        "downloads": -1,
        "filename": "dendrodict-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b12027ce67fff361e940cb4b53d564f1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3390,
        "upload_time": "2021-05-25T07:23:14",
        "upload_time_iso_8601": "2021-05-25T07:23:14.919829Z",
        "url": "https://files.pythonhosted.org/packages/d0/d5/b16a846a2e38aeca878d450222ce6412b7746e12c6d9409eafaa2b85a8fb/dendrodict-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e4de3018282c22a6cdc7917e5fe7e3c3bfe87051f070f905b7d1543942e1a14",
          "md5": "1d41072702ce13c823b0ea190480bf8b",
          "sha256": "a8b13c2d758e4d84552ff70235d6a78872616eed878f4f3c43a692cdcb56f4a2"
        },
        "downloads": -1,
        "filename": "dendrodict-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1d41072702ce13c823b0ea190480bf8b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3635,
        "upload_time": "2021-05-25T07:23:15",
        "upload_time_iso_8601": "2021-05-25T07:23:15.971037Z",
        "url": "https://files.pythonhosted.org/packages/1e/4d/e3018282c22a6cdc7917e5fe7e3c3bfe87051f070f905b7d1543942e1a14/dendrodict-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e528198c11bd778515130bb2374eb5dc2a363967838f939f4ab5c145ed024a5",
          "md5": "579aa024e13e63ef9b7bf48fc77b7731",
          "sha256": "48a2942037a276b41cf6db0199020335cfa690aab4479d23a3d49b0fbd0a147f"
        },
        "downloads": -1,
        "filename": "dendrodict-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "579aa024e13e63ef9b7bf48fc77b7731",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3431,
        "upload_time": "2021-05-25T11:02:27",
        "upload_time_iso_8601": "2021-05-25T11:02:27.545397Z",
        "url": "https://files.pythonhosted.org/packages/4e/52/8198c11bd778515130bb2374eb5dc2a363967838f939f4ab5c145ed024a5/dendrodict-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65fa774369466bd741687484f9fc0be4ace75939e9ec010008ef1eec09820ae5",
          "md5": "3d61cf58e359a198bb4bb03a49030627",
          "sha256": "b51e934d8f682c6881eecb05a21f0a0581c0b1f9d509f46469fe04ce0b84b153"
        },
        "downloads": -1,
        "filename": "dendrodict-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d61cf58e359a198bb4bb03a49030627",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3429,
        "upload_time": "2021-05-25T11:02:28",
        "upload_time_iso_8601": "2021-05-25T11:02:28.950297Z",
        "url": "https://files.pythonhosted.org/packages/65/fa/774369466bd741687484f9fc0be4ace75939e9ec010008ef1eec09820ae5/dendrodict-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc160c8bf96edbe905aad63d86a4b4d9c4102e6d76a5bf40fe828206a0525a78",
          "md5": "05dd6346cc9899fb1f27c6a8f56112ca",
          "sha256": "075464e051c1790d371a096a3603ccc18f5352171283753752bdcf401047176f"
        },
        "downloads": -1,
        "filename": "dendrodict-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05dd6346cc9899fb1f27c6a8f56112ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4712,
        "upload_time": "2021-05-25T11:59:48",
        "upload_time_iso_8601": "2021-05-25T11:59:48.740143Z",
        "url": "https://files.pythonhosted.org/packages/fc/16/0c8bf96edbe905aad63d86a4b4d9c4102e6d76a5bf40fe828206a0525a78/dendrodict-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28ad8cb8d8273fe70bc7e00bbd94b5b47777085a5da18e56281f93f0392d964f",
          "md5": "d590bb891bb978ebc396a7018277c73b",
          "sha256": "ab42831092433a2eef0982478e323c9ce4eb984ce64b4d78680decdf6cee605f"
        },
        "downloads": -1,
        "filename": "dendrodict-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d590bb891bb978ebc396a7018277c73b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4716,
        "upload_time": "2021-05-25T12:00:50",
        "upload_time_iso_8601": "2021-05-25T12:00:50.966284Z",
        "url": "https://files.pythonhosted.org/packages/28/ad/8cb8d8273fe70bc7e00bbd94b5b47777085a5da18e56281f93f0392d964f/dendrodict-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28ad8cb8d8273fe70bc7e00bbd94b5b47777085a5da18e56281f93f0392d964f",
        "md5": "d590bb891bb978ebc396a7018277c73b",
        "sha256": "ab42831092433a2eef0982478e323c9ce4eb984ce64b4d78680decdf6cee605f"
      },
      "downloads": -1,
      "filename": "dendrodict-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d590bb891bb978ebc396a7018277c73b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4716,
      "upload_time": "2021-05-25T12:00:50",
      "upload_time_iso_8601": "2021-05-25T12:00:50.966284Z",
      "url": "https://files.pythonhosted.org/packages/28/ad/8cb8d8273fe70bc7e00bbd94b5b47777085a5da18e56281f93f0392d964f/dendrodict-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}