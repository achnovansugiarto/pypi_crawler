{
  "info": {
    "author": "hw",
    "author_email": "xhaowen.xu@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Amazing-QR\n\n[*转到中文版*](https://github.com/hwxhw/amzqr/blob/master/README-cn.md)\n\n## Overview\n\n**Python QR Code Generator**\n\nGenerate *common qr-code*,  *artistic qr-code (black & white or colorized)*,  *animated qr-code (black & white or colorized)*.\n\n## Contents\n\n[toc]\n\n## Examples\n\n![](https://github.com/hwxhw/amazing-qr/blob/master/example/qrs0.jpg)\n\n![](https://github.com/hwxhw/amazing-qr/blob/master/example/qrs1.jpg)\n\n![](https://github.com/hwxhw/amazing-qr/blob/master/example/qrs2.jpg)\n\n![](https://github.com/hwxhw/amazing-qr/blob/master/example/c_qrcode.gif)![](https://github.com/hwxhw/amazing-qr/blob/master/example/daftpunktocat-guy_qrcode.gif)\n\n![](https://github.com/hwxhw/amazing-qr/blob/master/example/zootopia_qrcode.gif)![](https://github.com/hwxhw/amazing-qr/blob/master/example/daftpunktocat-guy_qrcode0.gif)\n\n## Install\n\n```python\n# via pip\npip install amzqr\n```\n\n## Usage\n\n### Terminal Way  \n\n*(**TIPS**: If you haven't install [**amzqr**](https://pypi.python.org/pypi/amzqr), you should  `python(3) amzqr.py` instead of `amzqr` blow.)*\n\n```sh\n# summary\namzqr Words\n      [-v {1,2,3,...,40}]\n      [-l {L,M,Q,H}]\n      [-n output-filename]\n      [-d output-directory]\n      [-p picture_file]\n      [-c]\n      [-con contrast]\n      [-bri brightness]\n```\n\n- see [Common QR-Code](#common-qr-code) for `Words`, `-v`, `-l`, `-n`, `-d`\n- see [Artistic QR-Code](#artistic-qr-code) for `-p`, `-c`, `-con`, `-bri`\n- see [Animated GIF QR-Code](#animated-gif-qr-code) about GIF\n\n#### Common QR-Code\n\n![](https://github.com/hwxhw/amazing-qr/blob/master/example/0.png)\n\n```markdown\n#1 Words\namzqr https://github.com\n```\n\n* Just input a URL or a sentence, then get your QR-Code named 'qrcode.png' in the current directory.\n\n\n```markdown\n#2 -v, -l\namzqr https://github.com -v 10 -l Q\n```\n\n* The **default** size of QR-Code depends both on the numbers of words you input and the level, while the **default** level (Error Correction Level) is **H** (the highest).\n\n* **Customize**: If you want to control the size and the error-correction-level, use the `-v` and `-l` arguments. \n\n   `-v`  representing the length is from a minimum of **1** to a maximum of **40**. \n\n   `-l` representing the error correction level is one of **L, M, Q and H**, where L is the lowest level and H is the highest.\n\n\n\n\n```markdown\n#3 -n, -d\namzqr https://github.com   -n github_qr.jpg   -d .../paths/\n```\n\n* The **default** output-filename is 'qrcode.png', while the **default** output-directory is current directory.\n\n* **Customize**: You can name the output-file and decide the output-directory. **Notice** that if the name is as same as a existing file, the old one will be deleted.\n\n  `-n` representing the output-filename could be in the format one of `.jpg`， `.png` ，`.bmp` ，`.gif` .\n\n  `-d` means directory.\n\n\n#### Artistic QR-Code\n\n![](https://github.com/hwxhw/amazing-qr/blob/master/example/1.png)![](https://github.com/hwxhw/amazing-qr/blob/master/example/2.png)\n\n\n```markdown\n#1 -p\namzqr https://github.com -p github.jpg\n```\n\n* The `-p` is to combine the QR-Code with the following picture which is in the same directory as the program. The resulting picture is **black and white** by default.\n\n\n```markdown\n#2 -c\namzqr https://github.com -p github.jpg -c\n```\n\n* The `-c` is to make the resulting picture **colorized**.\n\n\n\n```markdown\n#3 -con, -bri\namzqr https://github.com -p github.jpg [-c] -con 1.5 -bri 1.6\n```\n\n* The `-con` flag changes the **contrast** of the picture - a low number corresponds to low contrast and a high number to high contrast. **Default: 1.0**.\n\n* The `-bri` flag changes the **brightness** and the parameter values work the same as those for `-con`. **Default: 1.0**.\n\n\n\n\n\n#### Animated GIF QR-Code\n\n![](https://github.com/hwxhw/amazing-qr/blob/master/example/daftpunktocat-guy_qrcode.gif)![](https://github.com/hwxhw/amazing-qr/blob/master/example/daftpunktocat-guy_qrcode0.gif)\n\nThe only difference from Artistic QR-Code mentioned above is that you should input an image file in the `.gif` format. The you can get your black-and-white or colorful qr-code. Remember that when you use `-n` to customize the output-filename, then the output-filename must end by `.gif`.\n\n### Import Way\n\n```python\nfrom amzqr import amzqr\n\nversion, level, qr_name = amzqr.run(\n    words,\n    version=1,\n    level='H',\n    picture=None,\n    colorized=False,\n    contrast=1.0,\n    brightness=1.0,\n    save_name=None,\n    save_dir=os.getcwd()\n)\n```\n\n\n*details about each parameter are as mentioned [above](#terminal-way)*\n\n\n```python\n# help(amzqr)\nPositional parameter\n   words: str\n\nOptional parameters\n   version: int, from 1 to 40\n   level: str, just one of ('L','M','Q','H')\n   picutre: str, a filename of a image\n   colorized: bool\n   constrast: float\n   brightness: float\n   save_name: str, the output filename like 'example.png'\n   save_dir: str, the output directory\n```\n\n## Tips\n\n* Use a nearly **square** picture instead of a rectangle one.\n\n* If the size of the picture is large, you should also choose a **rightly** large `-v` instead of using the default one.\n\n* If part of the picture is transparent, the qr code will look like: ![](https://github.com/hwxhw/amazing-qr/blob/master/example/aa.png)\n\n  You can change the transparent layer to white, and then it will look like: ![](https://github.com/hwxhw/amazing-qr/blob/master/example/a0.png)\n\n## Supported Characters\n\n* Numbers:  `0~9`\n\n* Letters:  `a~z, A~Z`\n\n* Common punctuations:\n\n  ```console\n  · , . : ; + - * / \\ ~ ! @ # $ % ^ & ` ' = < > [ ] ( ) ? _ { } | and  (space)\n  ```\n\n## Environment\n\n- Python 3\n\n## License\n\n* GPLv3\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/hwxhw/amazing-qr",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hwxhw/amazing-qr",
    "keywords": "qr qrcode amazing artistic animated gif colorized",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "amzqr",
    "package_url": "https://pypi.org/project/amzqr/",
    "platform": "",
    "project_url": "https://pypi.org/project/amzqr/",
    "project_urls": {
      "Bug Tracker": "https://github.com/hwxhw/amazing-qr/issues",
      "Download": "https://github.com/hwxhw/amazing-qr",
      "Homepage": "https://github.com/hwxhw/amazing-qr"
    },
    "release_url": "https://pypi.org/project/amzqr/0.0.1/",
    "requires_dist": [
      "imageio (>=1.5)",
      "numpy (>=1.11.1)",
      "Pillow (>=3.3.1)"
    ],
    "requires_python": ">=3",
    "summary": "Generater for amazing QR Codes. Including Common, Artistic and Animated QR Codes.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9986361,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ed53a07be448ea36d9a0fb8944620e1accfb9d0534f1a57515ec7e4e58331ab",
          "md5": "98f5b734fa767cafec9c76f5d1a60fa1",
          "sha256": "2eaa25508cc1aed54ccf1962c0c03185e37583415bc14fffec086b8f14d27cc5"
        },
        "downloads": -1,
        "filename": "amzqr-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98f5b734fa767cafec9c76f5d1a60fa1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 30607,
        "upload_time": "2021-04-06T14:21:23",
        "upload_time_iso_8601": "2021-04-06T14:21:23.337596Z",
        "url": "https://files.pythonhosted.org/packages/7e/d5/3a07be448ea36d9a0fb8944620e1accfb9d0534f1a57515ec7e4e58331ab/amzqr-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35db08a9c9dcf87d01c25ff39f77d3f7e52ec3995663885e20051457f24f90ef",
          "md5": "1243440fcf4d0bed51a675760dcb9a73",
          "sha256": "c24968f21a6204b5f653e078d266aa85b9b1179bdc04bf6c940a256ea5baee0a"
        },
        "downloads": -1,
        "filename": "amzqr-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1243440fcf4d0bed51a675760dcb9a73",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 18622,
        "upload_time": "2021-04-06T14:21:25",
        "upload_time_iso_8601": "2021-04-06T14:21:25.695265Z",
        "url": "https://files.pythonhosted.org/packages/35/db/08a9c9dcf87d01c25ff39f77d3f7e52ec3995663885e20051457f24f90ef/amzqr-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ed53a07be448ea36d9a0fb8944620e1accfb9d0534f1a57515ec7e4e58331ab",
        "md5": "98f5b734fa767cafec9c76f5d1a60fa1",
        "sha256": "2eaa25508cc1aed54ccf1962c0c03185e37583415bc14fffec086b8f14d27cc5"
      },
      "downloads": -1,
      "filename": "amzqr-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "98f5b734fa767cafec9c76f5d1a60fa1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 30607,
      "upload_time": "2021-04-06T14:21:23",
      "upload_time_iso_8601": "2021-04-06T14:21:23.337596Z",
      "url": "https://files.pythonhosted.org/packages/7e/d5/3a07be448ea36d9a0fb8944620e1accfb9d0534f1a57515ec7e4e58331ab/amzqr-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35db08a9c9dcf87d01c25ff39f77d3f7e52ec3995663885e20051457f24f90ef",
        "md5": "1243440fcf4d0bed51a675760dcb9a73",
        "sha256": "c24968f21a6204b5f653e078d266aa85b9b1179bdc04bf6c940a256ea5baee0a"
      },
      "downloads": -1,
      "filename": "amzqr-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1243440fcf4d0bed51a675760dcb9a73",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 18622,
      "upload_time": "2021-04-06T14:21:25",
      "upload_time_iso_8601": "2021-04-06T14:21:25.695265Z",
      "url": "https://files.pythonhosted.org/packages/35/db/08a9c9dcf87d01c25ff39f77d3f7e52ec3995663885e20051457f24f90ef/amzqr-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}