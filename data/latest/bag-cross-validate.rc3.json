{
  "info": {
    "author": "John Vorsten",
    "author_email": "vorstenjohn@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Bag cross validation\n\n## Introduction\nMultiple instance labeling (MIL) refers to labeling data arranged in sets, \nor bags.  In MIL supervised learning, labels are known for bags of instances, \nand the goal is to assign bag-level labels to unobserved bags.\n\nA simple solution to the MIL problem is to treat each instance in a bag as a \nsingle instance (SI) that inherits the label of its bag.  Each SI in a bag are \nlabeled with a single-instance estimator, and the bag label is reduced from \nsome metric (mode, threshold, presence) of the SI observations.  Official \nterms include *presence based, threshold based, or count based concepts* \n(see A two-level learning method for generalized multi-instance problems \nby Weidmann Nils et. al.).\n\nThis package fits into Scikit-learn cross-validation framework, and allows\nus to use traditional single-instance classifiers to predict on bag-level\ndata for multiple instance labeling.\n\nThis package supports:\n1. The usage of scikit-learn estimators in a cross-validation framework\nfor multiple-instance-labeling with bag-label inference from single-instance \nlabels\n2. The use of scikit-learn evaluation metrics with cross-evaluation \nmeasured against the MIL problem\n\n### Motivation\nscikit-learn is a popular tool for data analysis, and includes APIs for SI \nestimators.  It includes a convenient API for evaluating SI estimators, \nnamely [cross_validate](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.cross_validate.html#sklearn-model-selection-cross-validate)\n\nThis package uses sklearn's cross_validate method and extends it to MIL for SI \nestimators.\n\n## Usage example\n```python\n# Python imports\n\n# Third party imports\nimport numpy as np\nfrom sklearn.metrics import accuracy_score, precision_score, jaccard_score\nfrom sklearn.model_selection import ShuffleSplit\nfrom sklearn.dummy import DummyClassifier\nfrom sklearn.neighbors import RadiusNeighborsClassifier\nfrom sklearn.metrics import make_scorer\n\n# Local imports\nfrom bag_cross_validate import cross_validate_bag, BagScorer, bags_2_si\n\n# Global definitions\n\n#%%\n\n# Create some dummy data\n\"\"\"Generate some dummy data\nCreate bags and single-instance data\nA set of bags have a shape [n x (m x p)], and can be through of as an\narray of bag instances.\nn is the number of bags\nm is the number of instances within each bag (this can vary between bags)\np is the feature space of each instance\"\"\"\nn_bags = 1000\nm_instances = 8 # Static number of bags\np = 5\nbags = []\n# 25% negative class, 75% positive class\n# Bags are created with random data, of shape (n, (m,p))\nlabels = np.concatenate((np.ones(int(n_bags*0.5)),\n                         np.zeros(int(n_bags*(1-0.5))),\n                         ))\nbags = np.random.randint(low=0, high=2, size=(n_bags, m_instances, p))\nprint(\"This is what a bag looks like: \\n{}\".format(bags[0]))\n\n# Split dummy dataset dataset\nrs = ShuffleSplit(n_splits=1, test_size=0.2, train_size=0.8)\ntrain_index, test_index = next(rs.split(bags, labels))\ntrain_bags, train_labels = bags[train_index], labels[train_index]\ntest_bags, test_labels = bags[test_index], labels[test_index]\n        \n# Create an estimator\ndumb = DummyClassifier(strategy='constant', constant=1)\nradiusNeighbor = RadiusNeighborsClassifier(weights='distance', \n                                           algorithm='auto',\n                                           p=1, # Manhattan distance\n                                           )\n\n# Create an evaluation metric\n# Multiple evaluation metrics are allowed\naccuracy_scorer = make_scorer(accuracy_score)\nbagAccScorer = BagScorer(accuracy_scorer) # Accuracy score, no factory function\nprecision_scorer = make_scorer(precision_score, average='binary')\nbagPreScorer = BagScorer(precision_scorer)\njaccard_scorer = make_scorer(jaccard_score, average='binary')\nbagJacScorer = BagScorer(jaccard_scorer)\nscoring = {'bag_accuracy':bagAccScorer,\n           'bag_precision':bagPreScorer,\n           'bag_jaccard':bagJacScorer,\n           }\n\n\n#%%\n\n# Cross validate the dummy data and estimator\nresult_dumb = cross_validate_bag(estimator=dumb, \n                            X=train_bags, \n                            y=train_labels, \n                            groups=None, \n                            scoring=scoring, # Custom scorer... \n                            cv=2,\n                            n_jobs=3, \n                            verbose=0, \n                            fit_params=None,\n                            pre_dispatch='2*n_jobs', \n                            return_train_score=False,\n                            return_estimator=False, \n                            error_score=np.nan)\n\nresult_neighbor = cross_validate_bag(estimator=radiusNeighbor, \n                            X=train_bags, \n                            y=train_labels, \n                            groups=None, \n                            scoring=scoring, # Custom scorer... \n                            cv=3,\n                            n_jobs=2, \n                            verbose=0, \n                            fit_params=None,\n                            pre_dispatch='2*n_jobs', \n                            return_train_score=False,\n                            return_estimator=False, \n                            error_score=np.nan)\n\n# Display the results\nmsg=(\"\\nOur dummy estimator tried his best, and predicted {} percent of bags \" \n    \"correctly\")\nmsg = msg.format(result_dumb['test_bag_accuracy'])\nprint(msg)\n\nmsg=(\"\\nOur neighbor estimator didnt fair well either, and predicted {} percent \"\n     \"of bags correctly\")\nmsg = msg.format(result_neighbor['test_bag_accuracy'])\nprint(msg)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/johnvorsten/bag-cross-validate",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bag-cross-validate",
    "package_url": "https://pypi.org/project/bag-cross-validate/",
    "platform": "",
    "project_url": "https://pypi.org/project/bag-cross-validate/",
    "project_urls": {
      "Bug Tracker": "https://github.com/johnvorsten/bag-cross-validate/issues",
      "Homepage": "https://github.com/johnvorsten/bag-cross-validate"
    },
    "release_url": "https://pypi.org/project/bag-cross-validate/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Perform cross-validation on MIL data using sklearn. Assume single-instance inference for the bag label",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10879954,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fae661e1319eefb976909c42648d79561f8a9b60b5b54952257e574b2bad2e97",
          "md5": "0b7e666135218efe26b2b51ea71be453",
          "sha256": "ca87b2b997d73ac397a71b9a743165e3bfe23f4da8c3f8b9f70f88506a81fb53"
        },
        "downloads": -1,
        "filename": "bag_cross_validate-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b7e666135218efe26b2b51ea71be453",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18169,
        "upload_time": "2021-07-03T22:22:53",
        "upload_time_iso_8601": "2021-07-03T22:22:53.929873Z",
        "url": "https://files.pythonhosted.org/packages/fa/e6/61e1319eefb976909c42648d79561f8a9b60b5b54952257e574b2bad2e97/bag_cross_validate-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a88d40cf583ecff827fa204b89275f20ae378ebb9901a282e5c7688b7d8de98",
          "md5": "f9851abec73fb5e2b017a91cb6d0e9f8",
          "sha256": "1945e9ae11cbbab4015262dafe610c031e6f19f4d2eebad18f77b8b3617a2bac"
        },
        "downloads": -1,
        "filename": "bag_cross_validate-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f9851abec73fb5e2b017a91cb6d0e9f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17118,
        "upload_time": "2021-07-03T22:22:55",
        "upload_time_iso_8601": "2021-07-03T22:22:55.457409Z",
        "url": "https://files.pythonhosted.org/packages/1a/88/d40cf583ecff827fa204b89275f20ae378ebb9901a282e5c7688b7d8de98/bag_cross_validate-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b98f7c139f5e40c598508bd4196e993c2a5d932e9ed169b19412a6db4d4069bf",
          "md5": "99097ddce4be4c975e43367710940d01",
          "sha256": "e3457d5371ec55c584228d8ff391da03d13ecab237be15ceae3efbfc7e342cfb"
        },
        "downloads": -1,
        "filename": "bag_cross_validate-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99097ddce4be4c975e43367710940d01",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18663,
        "upload_time": "2021-07-09T01:37:48",
        "upload_time_iso_8601": "2021-07-09T01:37:48.183634Z",
        "url": "https://files.pythonhosted.org/packages/b9/8f/7c139f5e40c598508bd4196e993c2a5d932e9ed169b19412a6db4d4069bf/bag_cross_validate-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "797993cfb1b8313a53dda8f9a5783ed55ac9319ef063db80fe2e7683fd6cfd02",
          "md5": "4ee9bded15197f3a0cef392a6ab69f3b",
          "sha256": "13654d91118720eb5bc9ccfc5780aab21db881f58c93950a55e2f590a20e5402"
        },
        "downloads": -1,
        "filename": "bag_cross_validate-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4ee9bded15197f3a0cef392a6ab69f3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17483,
        "upload_time": "2021-07-09T01:37:49",
        "upload_time_iso_8601": "2021-07-09T01:37:49.443818Z",
        "url": "https://files.pythonhosted.org/packages/79/79/93cfb1b8313a53dda8f9a5783ed55ac9319ef063db80fe2e7683fd6cfd02/bag_cross_validate-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a5cf2d1c1f01d7e84dd5969fe0e4bc144995c5d52c65b1d60d163336a6393f5",
          "md5": "ac9f35018fd7754f77533674ed04cc68",
          "sha256": "87ec81bf9584207da171e961efae569f11675f63b56e4a8bf2dfd04d7e081b57"
        },
        "downloads": -1,
        "filename": "bag_cross_validate-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac9f35018fd7754f77533674ed04cc68",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19597,
        "upload_time": "2021-07-11T19:59:04",
        "upload_time_iso_8601": "2021-07-11T19:59:04.557251Z",
        "url": "https://files.pythonhosted.org/packages/2a/5c/f2d1c1f01d7e84dd5969fe0e4bc144995c5d52c65b1d60d163336a6393f5/bag_cross_validate-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e40e4d9da2109c23a5d8c214e490367d9a164bb027ceb46dbb7b69e28fdb819f",
          "md5": "e12a2f82341ada67c2e8ddd4b096065f",
          "sha256": "ab9802a6f15066a2d4f1b2a742099b5e332a0ca1530d4d7cc719d147efcfded1"
        },
        "downloads": -1,
        "filename": "bag_cross_validate-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e12a2f82341ada67c2e8ddd4b096065f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19187,
        "upload_time": "2021-07-11T19:59:05",
        "upload_time_iso_8601": "2021-07-11T19:59:05.885803Z",
        "url": "https://files.pythonhosted.org/packages/e4/0e/4d9da2109c23a5d8c214e490367d9a164bb027ceb46dbb7b69e28fdb819f/bag_cross_validate-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a5cf2d1c1f01d7e84dd5969fe0e4bc144995c5d52c65b1d60d163336a6393f5",
        "md5": "ac9f35018fd7754f77533674ed04cc68",
        "sha256": "87ec81bf9584207da171e961efae569f11675f63b56e4a8bf2dfd04d7e081b57"
      },
      "downloads": -1,
      "filename": "bag_cross_validate-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ac9f35018fd7754f77533674ed04cc68",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 19597,
      "upload_time": "2021-07-11T19:59:04",
      "upload_time_iso_8601": "2021-07-11T19:59:04.557251Z",
      "url": "https://files.pythonhosted.org/packages/2a/5c/f2d1c1f01d7e84dd5969fe0e4bc144995c5d52c65b1d60d163336a6393f5/bag_cross_validate-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e40e4d9da2109c23a5d8c214e490367d9a164bb027ceb46dbb7b69e28fdb819f",
        "md5": "e12a2f82341ada67c2e8ddd4b096065f",
        "sha256": "ab9802a6f15066a2d4f1b2a742099b5e332a0ca1530d4d7cc719d147efcfded1"
      },
      "downloads": -1,
      "filename": "bag_cross_validate-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e12a2f82341ada67c2e8ddd4b096065f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19187,
      "upload_time": "2021-07-11T19:59:05",
      "upload_time_iso_8601": "2021-07-11T19:59:05.885803Z",
      "url": "https://files.pythonhosted.org/packages/e4/0e/4d9da2109c23a5d8c214e490367d9a164bb027ceb46dbb7b69e28fdb819f/bag_cross_validate-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}