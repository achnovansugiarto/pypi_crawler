{
  "info": {
    "author": "Adam Goldsmith",
    "author_email": "adam@adamgoldsmith.name",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications :: Ham Radio",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "# SCOM 7330 Speech Library Tool\n\n![Unit Tests](https://github.com/ad1217/SCOM7330_SpeechLib_Tool/workflows/Unit%20Tests/badge.svg)\n\nThis is a tool to manipulate Audio Libraries (such as\n`CustomAudioLib.bin`) for the SCOM 7330 repeater, reverse engineered\nfrom the provided `BuildSpeechLib.exe`.\n\nThe official tool, as well as default audio libraries, manuals,\nfirmware, etc. can be found at\nhttp://www.scomcontrollers.com/7330firmware .\n\n## Speech Library Format\n\n**Remember that this is reverse engineered (so not guaranteed to be\naccurate), and subject to change with firmware updates**\n\n**This was derived from firmware release V1.8b,\n  BuildSpeechLib.exe V1.2.0 (built 5/13/2018)**\n\nThe speech library file is composed of 4 sections:\n\n- [Header](#header) (`0x100` bytes)\n- [Image Header](#image-header) (`0x100` bytes)\n- [Word Index](#word-index) (variable length, rounded up to the nearest `0x100`)\n- [Word Data](#word-data) (variable length)\n\nThe header and image header contain metadata and the word index is a\nlookup table into the data. Unused space is filled with `0xff` instead\nof `0x00`, for unclear reasons.\n\nIn the following sections, byte ranges are presented as\n`inclusive:exclusive`, like in Python. For example, `0x00:0x05`\nincludes the bytes `0x00`, `0x01`, `0x02`, `0x03`, and `0x04`. All\naddresses in tables are relative to the start of the section, unless\nstated otherwise.\n\n### Header\n\n- Address: `0x00`\n- Length: `0x100`\n\n| Byte  | 0x00:0x05  | 0x05:0x15 | 0x15:0x21 | 0x21:0x38 | 0x38 | 0x39:0x3c | 0x3c:0x3d | 0x3d:0x100 |\n|:------|:-----------|:----------|:----------|:----------|:-----|:----------|:----------|:-----------|\n| Value | `SCOM\\x00` | name      | version   | timestamp | mode | firstFree | zeros     | (empty)    |\n\n- `name`, `version`, and `timestamp` are just ASCII strings, and have\n  no apparent function beyond display.\n- `mode` is 3 in `BuildSpeechLib.exe`'s normal mode, 2 in the extended\n  arguments form. I am not sure what this means, exactly.\n- `firstFree` is the size of the file minus `0x100`, presumably to\n  account for this header's size. Unclear what this is used for, as it\n  also occurs (with the `0x100` included) in the [Image Header](#image-header)\n- `zeros` is two two-byte arguments to the function in\n  `BuildSpeechLib.exe` which were passed in as literal zeros. Unclear\n  function.\n\n### Image Header\n\n- Address: `0x100`\n- Length: `0x100`\n\n| Byte  | 0x00:0x03      | 0x03           | 0x04:0x06    | 0x06:0x09 | 0x09:0x100 |\n|:------|:---------------|:---------------|:-------------|:----------|:-----------|\n| Value | `\\x00\\x02\\x00` | index_size_mid | max_word + 1 | firstFree | (empty)    |\n\n- I'm not sure what the purpose of the constant in `0x00:0x03` is\n- `index_size_mid` is the middle byte of the [Word Index](#word-index)\n  size. Since that size is rounded to `0x100`, this is just the index\n  size shifted down 1 byte.\n- `max_word + 1` is the highest word file contained, plus one.\n  Not really sure why it's plus one.\n- `firstFree` is the length of the file.\n  Seems to be redundant with the value in the [Header](#header).\n\n### Word Index\n\n- Address: `0x200`\n- Length: 4 times the maximum word code, rounded up to the nearest `0x100`\n\n| Byte  | (word code * 4):(word code * 4) + 3 |\n|:------|:------------------------------------|\n| Value | word data address                   |\n\nThis section is a lookup table mapping the word code to the address of\nthe entry in the [Word Data](#word-data) section, relative to the file\nstart. All un-used entries are blank (`0xff`). Each entry is 4 bytes\nlong, but the address is stored just in the first 3 bytes (with the\nlast one being `0xff`.\n\n### Word Data\n\n- Address: `0x200` plus the the length of the [Word Index](#word-index),\n  as stored in the [Image Header](#image-header).\n- Length: 3 times the number of files, plus the length of each file\n\nFor each entry:\n| Byte  | 0x00:0x03                | 0x03:end of file |\n|:------|:-------------------------|:-----------------|\n| Value | end of file data address | file data        |\n\n- `end of file data address` is the address of the end of the audio file data.\n- `file data` is the contents of a raw file (as per\n  [Audio Files](#audio-files)), but with every byte greater than 127 xor'ed\n  with 127 for some unclear reason.\n\n\n## Audio Files\n\nThe input/output audio files are in the format specified in the SCOM manual:\n\n- 8000 Hertz sampling rate\n- Single channel (mono) audio\n- Î¼-law encoding\n- Raw headerless file\n\nYou can convert wav files (for example) to this format with `sox`:\n\n```sh\nsox --type wav <input file>.wav --type ul --rate 8k <output file>.raw\n```\n\nor from this format to wav:\n\n```sh\nsox --type ul --rate 8k --channels 1 <input file>.raw --type wav <output file>.wav\n```\n\n\n## Disclaimer\n\nI am not affiliated with S-COM in any way. I make no guarantees of the\ncorrectness of the code. Don't break your stuff.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ad1217/python-SCOM7330",
    "keywords": "ham-radio,hamradio,scom,scom-7330",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scom7330",
    "package_url": "https://pypi.org/project/scom7330/",
    "platform": "",
    "project_url": "https://pypi.org/project/scom7330/",
    "project_urls": {
      "Homepage": "https://github.com/ad1217/python-SCOM7330",
      "Repository": "https://github.com/ad1217/python-SCOM7330"
    },
    "release_url": "https://pypi.org/project/scom7330/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.8,<4.0",
    "summary": "A tool to manipulate various data, including Audio Libraries (ex CustomAudioLib.bin) for the SCOM 7330 repeater",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9679301,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93b370f6a8dbd835fee8b4214e419e4735b88f61a055358fce57506a8b5a8daa",
          "md5": "f501c80263c423deda27fb8b6707d66e",
          "sha256": "8711adc27bfe90908fe53c7f02e664945c08a012c1aadaa14aee78bab47ab8fd"
        },
        "downloads": -1,
        "filename": "scom7330-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f501c80263c423deda27fb8b6707d66e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 23482,
        "upload_time": "2021-03-05T23:01:03",
        "upload_time_iso_8601": "2021-03-05T23:01:03.809049Z",
        "url": "https://files.pythonhosted.org/packages/93/b3/70f6a8dbd835fee8b4214e419e4735b88f61a055358fce57506a8b5a8daa/scom7330-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50084e6897e7d1d43046bdb5a0a96e7dcef4a39930807f21b4639d20310df7f9",
          "md5": "323286bd94f0fe4ea25273e2b9439ca8",
          "sha256": "1c9ba0474c21d5c959939dfee30fc929c85ed1b641b1c923869bd26538318044"
        },
        "downloads": -1,
        "filename": "scom7330-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "323286bd94f0fe4ea25273e2b9439ca8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 24074,
        "upload_time": "2021-03-05T23:01:04",
        "upload_time_iso_8601": "2021-03-05T23:01:04.962224Z",
        "url": "https://files.pythonhosted.org/packages/50/08/4e6897e7d1d43046bdb5a0a96e7dcef4a39930807f21b4639d20310df7f9/scom7330-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93b370f6a8dbd835fee8b4214e419e4735b88f61a055358fce57506a8b5a8daa",
        "md5": "f501c80263c423deda27fb8b6707d66e",
        "sha256": "8711adc27bfe90908fe53c7f02e664945c08a012c1aadaa14aee78bab47ab8fd"
      },
      "downloads": -1,
      "filename": "scom7330-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f501c80263c423deda27fb8b6707d66e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 23482,
      "upload_time": "2021-03-05T23:01:03",
      "upload_time_iso_8601": "2021-03-05T23:01:03.809049Z",
      "url": "https://files.pythonhosted.org/packages/93/b3/70f6a8dbd835fee8b4214e419e4735b88f61a055358fce57506a8b5a8daa/scom7330-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "50084e6897e7d1d43046bdb5a0a96e7dcef4a39930807f21b4639d20310df7f9",
        "md5": "323286bd94f0fe4ea25273e2b9439ca8",
        "sha256": "1c9ba0474c21d5c959939dfee30fc929c85ed1b641b1c923869bd26538318044"
      },
      "downloads": -1,
      "filename": "scom7330-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "323286bd94f0fe4ea25273e2b9439ca8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 24074,
      "upload_time": "2021-03-05T23:01:04",
      "upload_time_iso_8601": "2021-03-05T23:01:04.962224Z",
      "url": "https://files.pythonhosted.org/packages/50/08/4e6897e7d1d43046bdb5a0a96e7dcef4a39930807f21b4639d20310df7f9/scom7330-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}