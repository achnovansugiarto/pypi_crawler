{
  "info": {
    "author": "Mattia Basaglia",
    "author_email": "mattia.basaglia@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Multimedia :: Graphics"
    ],
    "description": "Python Lottie\n=============\n\nA Python framework to work with Lottie files and Telegram animated stickers.\n\n\nQuick start\n-----------\n\nThis section describes some common things you might want to do without having\nto read the whole README\n\n### Installation\n\n    pip install lottie\n\n### Converting into images\n\nThis package provide the script `lottie_convert.py`, it's precise location\ndepends on how you installed python-lottie.\n\nFor PNG, GIF, and Webp you have to install `cairosvg` and `pillow`.\n\nTo render a still image:\n\n    lottie_convert.py input_file.json output_file.png --frame 30\n\n\nTo render an animated image (GIF or WebP):\n\n    lottie_convert.py input_file.json output_file.webp\n\n\nA list of supported formats is described in the section \"Supported Formats\" below.\n\n\n### Turning GIF and such into animations\n\nThe lottie format is for vector graphics, this means converting raster images\nusually doesn't work too well.\n\nThat said, python-lottie does support a few different algorithms to import\nraster images, the process is a bit slow for larger images but use it with caution.\n\nTo use the potrace vectorization library, install the extras tagged as \"trace\".\n\nOnce set up, just invoke `lottie_convert.py` using the vectorization algorithm\n\n    lottie_convert.py input_file.gif output_file.json --bmp-mode trace\n\nFor pixel art, you can use the `pizel` algorithm, which doesn't require potrace\n\n    lottie_convert.py input_file.gif output_file.json --bmp-mode pixel\n\nIf you are ok with keeping raster images as such, you can use the default mode\n\n    lottie_convert.py input_file.gif output_file.json\n\n### Converting Telegram animated stickers (tgs)\n\nThis format is natively supported by python lottie, but telegram doesn't\nsupport all of the features supported by lottie\n(see the section labeled \"Supported After Effects Features\" for details).\n\nWhen converting from tgs, nothing special is needed as it's handled as a lottie animation.\n\n    lottie_convert.py AnimatedSticker.tgs output_file.webp\n\nBut when converting into animated stickers, you might end up with a file that\nTelegram doesn't recognize. To help with this, by default `lottie_convert.py`\nwill scale the animation to be the right size and framerate.\nIt will also print out any warnings related to unsupported features.\nEverything else works like any other conversion:\n\n    lottie_convert.py input_file.json output_file.tgs\n\nIf you want to see the same warnings for an existing tgs file use `tgs_check.py`\n\n    tgs_check.py AnimatedSticker.tgs\n\n\n### Creating animations from scratch\n\nSee the examples at https://mattbas.gitlab.io/python-lottie/examples.html\nand read the available lottie objects at https://mattbas.gitlab.io/python-lottie/group__Lottie.html#details\n\n\nFeatures\n--------\n\nHere is a list of features of the lottie python framework:\n\n* Loading compressed TGS and uncompressed lottie JSON\n* Manipulation of lottie objects\n* Simple animation presets (eg: shake, linear bounce)\n* Bezier path animations (eg: follow path, making paths appear and disappear)\n* Wave distortion animation (eg: for flags)\n* Pseudo-3D rotations\n* Animation easing functions\n* Inverse Kinematic solver\n* Pretty printing and comparison of lottie files\n* Rendering text as shapes\n\n\n## Supported Formats\n\n| Format    | Import    | Import Animated   | Export    | Export Animated   |\n|-----------|-----------|-------------------|-----------|-------------------|\n| lottie    | 👍        | 👍                | 👍        | 👍                |\n| tgs       | 👍        | 👍                | 👍        | 👍                |\n| SVG       | 👍        | 👍                | 👍        | ⛔️                |\n| SVGz      | 👍        | 👍                | 👍        | ⛔️                |\n| PNG       | 👍        | 👍[^frames]       | 👍        | ⛔️                |\n| Synfig    | 👍        | 👍                | 👍        | 👍                |\n| WebP      | 👍        | 👍                | 👍        | 👍                |\n| dotLottie | 👍        | 👍                | 👍        | 👍                |\n| PostScript| ⛔️        | ⛔️                | 👍        | ⛔️                |\n| PDF       | ⛔️        | ⛔️                | 👍        | ⛔️                |\n| BMP       | 👍        | 👍[^frames]       | ⛔️        | ⛔️                |\n| GIF       | 👍        | 👍                | 👍        | 👍                |\n| TIFF      | 👍        | 👍                | 👍        | 👍                |\n| MP4       | ⛔️        | ⛔️                | 👍        | 👍                |\n| AVI       | ⛔️        | ⛔️                | 👍        | 👍                |\n| WebM      | ⛔️        | ⛔️                | 👍        | 👍                |\n| HTML      | ⛔️        | ⛔️                | 👍        | 👍                |\n| Blender   | 👍[^blend]| 👍[^blend]        | ⛔️        | ⛔️                |\n| Krita     | 👍        | ⛔️                | ⛔️        | ⛔️                |\n\n[^frames]: Importing multiple images as frames\n\n[^blend]: Conversion available as a Blender addon\n\n\n\nScripts\n-------\n\npython-lottie provides several scripts to convert or manage lottie animations.\nFor full documentation see https://mattbas.gitlab.io/python-lottie/scripts.html\n\nThe main one is `lottie_convert.py`, which can be used to convert between the supported formats.\n\nThere is also the script `lottie_gui.py` which provides a graphical interface for lottie playback.\n\n\n\nInstallation\n------------\n\n### Downloads\n\nThe packages for the various applications listed below can be downloaded from here:\n\n* [Releases](https://gitlab.com/mattbas/python-lottie/-/releases)\n* [Development Snapshot](https://mattbas.gitlab.io/python-lottie/downloads.html)\n\n\n### Synfig\n\nThere's a Synfig studio plugin to export telegram stickers.\nTo install, just copy (or symlink) ./addons/synfig/pylot-exporter\ninto the synfig plugin directory.\nYou might have to copy ./lib/lottie in there as well.\n\n\n### Inkscape\n\nThere are some import/export extensions for inkscape.\n\nJust copy (or symlink) the files under ./addons/inkscape to the inkscape extension\ndirectory.\nOn my system that's ~/.config/inkscape/extensions/ but you can double check from\nInkscape: Edit > Preferences... > System > User extensions\n\nNote that the extensions require Python 3.\nIf they are run with a python 2 interpreter, they will try to run themselves using `python3`.\n\nThey also need the lottie framework to be in the python path, otherwise you can manually\nset the path on the import/export dialogues.\n\nSee also https://inkscape.org/~mattia.basaglia/%E2%98%85tgslottie-importexport\n\n\n### Blender\n\nThere are some export addons for blender.\n\nCopy (or symlink) the files under ./addons/blender to the Blender extension\ndirectory.\n\nOn my system that's ~/.config/blender/2.80/scripts/addons/ you can check available\npaths through the Blender Python console:\n\n    import addon_utils; print(addon_utils.paths())\n\nYou can also install the addon from Blender using the zipfile created by `make`.\n\n\n### Pip\n\nYou can install from pypi:\n\n    pip install lottie\n\nfrom git:\n\n    pip install git+https://gitlab.com/mattbas/python-lottie.git@master\n\nfor the source directory:\n\n    pip install /path/to/the/sources # this is the path where setup.py is located\n\n\nRequirements\n------------\n\nPython 3.\n\n\n### Optional Requirements\n\nIn order to provide lean installations, this framework doesn't have dependencies\nfor its core functionality.\n\nTo add support for extra formats or advanced functionality, you can install\nadditional packages.\n\nThese requirements are declared as extra in the Pypi package,\nfollows a table listing dependencies and features\n\n\n| Packages                                      | Extra | Feature                                                   |\n|-----------------------------------------------|-------|-----------------------------------------------------------|\n| `pillow`                                      | images| To load image assets                                      |\n| `glaxnimate`                                  | PNG   | To export PNG                                             |\n| `cairosvg`                                    | PDF   | To export PNG / PDF / PS                                  |\n| `glaxnimate`, `pillow`                        | GIF   | To export GIF and animated WebP                           |\n| `fonttools`                                   | text  | To render text as shapes                                  |\n| `grapheme`                                    | emoji | Adding emoji support to text rendering                    |\n| `cairosvg`, `numpy`, Python OpenCV 2          | video | To export video                                           |\n| `glaxnimate`                                  | trace | To convert raster images into vectors                     |\n| `QScintilla`                                  | GUI   | Grafical user interface utilities                         |\n| `coverage`                                    |       | To show unit test coverage, used optionally by `test.sh`  |\n\n\nIf intalling from pip, you can install optional requirements like so:\n\n    pip install lottie[GIF]\n\nThe above example will ensure `cairosvg` and `pillow` are installed.\nFor more details see https://pip.pypa.io/en/latest/reference/pip_install/#examples.\n\nFor convenience, an additional extra requirements is defined,\nso you can install all dependencies at once:\n\n    pip install lottie[all]\n\nIf you are using python-lottie from source you can run\n\n    pip install -r requirements.txt\n\nWhich will install all the requirements (except for pypotrace, as that package has some issues)\n\n\nTelegram Animated Stickers\n--------------------------\n\nI had to reverse engineer the format because Telegram couldn't be bothered\nproviding the specs.\n\nA TGS file is a gzip compressed JSON, the JSON data is described here:\nhttps://mattbas.gitlab.io/python-lottie/group__Lottie.html#lottie_json\n\n### Making your own exporters converters\n\n#### Lottie format\n\nIf you can get the source image into lottie format, that's 90% of the work done.\n\nI've created Python classes based the format schema and after effects documentation, which\noutput the correct json. Eg:\n\n    foo = lottie.Animation()\n    # ...\n    json.dump(foo.to_dict(), output_file)\n\nI'm also creating a proper documentation for the format, see:\nhttps://mattbas.gitlab.io/tgs/group__Lottie.html#details\n\n#### TGS changes\n\nNothing major, just ensure the root JSON object has `tgs: 1`\n\n#### Gzipping\n\nThe tgs file is the JSON described above compressed into a gzip,\nand renamed to .tgs\n\n\nLicense\n-------\n\nAGPLv3+ https://www.gnu.org/licenses/agpl-3.0.en.html\n\n\nCredits\n-------\n\nCopyright 2019 (C) Mattia Basaglia\n\n\nLinks\n-----\n\n### Documentation\n\nhttps://mattbas.gitlab.io/python-lottie/index.html\n\n### Code\n\nhttps://gitlab.com/mattbas/python-lottie/\n\n### Chat\n\nhttps://t.me/tgs_stuff\n\n### Download\n\nhttps://mattbas.gitlab.io/python-lottie/downloads.html\n\nHere you can download packages for pip, blender, and inkscape before they are released.\nThese packages always have the latest features but they might be unstable.\n\n### Issues\n\nYou can report any issue in the tracker on gitlab:\n\nhttps://gitlab.com/mattbas/python-lottie/-/issues\n\n\nSupported After Effects Features\n--------------------------------\n\nCompare with http://airbnb.io/lottie/#/supported-features\n\n### Legend\n\n * 👍 Supported\n * ❔ Unknown / untested\n * ⛔️ Not supported\n * **python-lottie** refers to this framework in general\n * **Telegram** refers to features supported by telegram animated stickers\n * **SVG** refers to the exported SVG images from this framework,\n features supported here will also reflect on other formats (such as video, png, and similar)\n\n\nTelegram doesn't support everything in the Lottie format.\nhttps://core.telegram.org/animated_stickers lists some things that are unsupported\nbut what is listed there isn't correct.\n\nThere are several things marked as unsupported in telegram animated stickers that are actually supported.\n\n\n\n| **Shapes**                       | **python-lottie** | **Telegram**     | **SVG** |\n|----------------------------------|-------------------|------------------|---------|\n| Shape                            | 👍                | 👍               | 👍      |\n| Ellipse                          | 👍                | 👍               | 👍      |\n| Rectangle                        | 👍                | 👍               | 👍      |\n| Rounded Rectangle                | 👍                | 👍               | 👍      |\n| Polystar                         | 👍                | 👍[^unsupported] | 👍      |\n| Group                            | 👍                | 👍               | 👍      |\n| Trim Path (individually)         | 👍                | 👍               | 👍      |\n| Trim Path (simultaneously)       | 👍                | 👍               | 👍      |\n| **Fills**                        | **python-lottie** | **Telegram**     | **SVG** |\n| Color                            | 👍                | 👍               | 👍      |\n| Opacity                          | 👍                | 👍               | 👍      |\n| Radial Gradient                  | 👍                | 👍               | 👍      |\n| Linear Gradient                  | 👍                | 👍               | 👍      |\n| Fill Rule                        | 👍                | 👍               | 👍      |\n| **Strokes**                      | **python-lottie** | **Telegram**     | **SVG** |\n| Color                            | 👍                | 👍               | 👍      |\n| Opacity                          | 👍                | 👍               | 👍      |\n| Width                            | 👍                | 👍               | 👍      |\n| Line Cap                         | 👍                | 👍               | 👍      |\n| Line Join                        | 👍                | 👍               | 👍      |\n| Miter Limit                      | 👍                | 👍               | 👍      |\n| Dashes                           | 👍                | 👍               | 👍      |\n| Gradient                         | 👍                | 👍[^unsupported] | 👍      |\n| **Transforms**                   | **python-lottie** | **Telegram**     | **SVG** |\n| Position                         | 👍                | 👍               | 👍      |\n| Position (separated X/Y)         | 👍                | 👍               | 👍      |\n| Scale                            | 👍                | 👍               | 👍      |\n| Rotation                         | 👍                | 👍               | 👍      |\n| Anchor Point                     | 👍                | 👍               | 👍      |\n| Opacity                          | 👍                | 👍               | 👍      |\n| Parenting                        | 👍                | 👍               | 👍      |\n| Skew                             | 👍                | ⛔️[^bug]         | 👍      |\n| Auto Orient                      | 👍                | 👍[^unsupported] | 👍      |\n| **Interpolation**                | **python-lottie** | **Telegram**     | **SVG** |\n| Linear Interpolation             | 👍                | 👍               | 👍      |\n| Bezier Interpolation             | 👍                | 👍               | 👍      |\n| Hold Interpolation               | 👍                | 👍               | 👍      |\n| Spatial Bezier Interpolation     | 👍                | 👍               | 👍      |\n| Rove Across Time                 | ⛔️                | ⛔️[^untested]    | ⛔️      |\n| **Masks**                        | **python-lottie** | **Telegram**     | **SVG** |\n| Mask Path                        | 👍                | 👍[^unsupported] | 👍      |\n| Mask Opacity                     | 👍                | 👍[^unsupported] | 👍      |\n| Add                              | 👍                | 👍[^unsupported] | ⛔️      |\n| Subtract                         | 👍                | 👍[^unsupported] | ⛔️      |\n| Intersect                        | 👍                | 👍[^unsupported] | 👍      |\n| Lighten                          | 👍                | 👍[^unsupported] | ⛔️      |\n| Darken                           | 👍                | 👍[^unsupported] | ⛔️      |\n| Difference                       | 👍                | 👍[^unsupported] | ⛔️      |\n| Expansion                        | 👍                | 👍[^unsupported] | ⛔️      |\n| Feather                          | 👍                | 👍[^unsupported] | ⛔️      |\n| **Mattes**                       | **python-lottie** | **Telegram**     | **SVG** |\n| Alpha Matte                      | 👍                | ⛔️[^dok]         | 👍      |\n| Alpha Inverted Matte             | 👍                | ⛔️[^dok]         | ⛔️      |\n| Luma Matte                       | 👍                | ⛔️[^dok]         | 👍      |\n| Luma Inverted Matte              | 👍                | ⛔️[^dok]         | ⛔️      |\n| **Merge Paths**                  | **python-lottie** | **Telegram**     | **SVG** |\n| Merge                            | ⛔️                | ⛔️[^untested]    | ⛔️      |\n| Add                              | ⛔️                | ⛔️[^untested]    | ⛔️      |\n| Subtract                         | ⛔️                | ⛔️[^untested]    | ⛔️      |\n| Intersect                        | ⛔️                | ⛔️[^untested]    | ⛔️      |\n| Exclude Intersection             | ⛔️                | ⛔️[^untested]    | ⛔️      |\n| **Layer Effects**                | **python-lottie** | **Telegram**     | **SVG** |\n| Fill                             | 👍                | ⛔️               | ⛔️      |\n| Stroke                           | 👍                | ⛔️               | ⛔️      |\n| Tint                             | 👍                | ⛔️               | ⛔️      |\n| Tritone                          | 👍                | ⛔️               | ⛔️      |\n| Levels Individual Controls       | 👍                | ⛔️               | ⛔️      |\n| **Text** [^text]                 | **python-lottie** | **Telegram**     | **SVG** |\n| Glyphs                           | 👍                | ⛔️               | ⛔️      |\n| Fonts                            | 👍                | ⛔️               | ⛔️      |\n| Transform                        | 👍                | ⛔️               | ⛔️      |\n| Fill                             | 👍                | ⛔️               | 👍      |\n| Stroke                           | 👍                | ⛔️               | ⛔️      |\n| Tracking                         | ⛔️                | ⛔️               | ⛔️      |\n| Anchor point grouping            | ⛔️                | ⛔️               | ⛔️      |\n| Text Path                        | ⛔️                | ⛔️               | ⛔️      |\n| Per-character 3D                 | ⛔️                | ⛔️               | ⛔️      |\n| Range selector (Units)           | ⛔️                | ⛔️               | ⛔️      |\n| Range selector (Based on)        | ⛔️                | ⛔️               | ⛔️      |\n| Range selector (Amount)          | ⛔️                | ⛔️               | ⛔️      |\n| Range selector (Shape)           | ⛔️                | ⛔️               | ⛔️      |\n| Range selector (Ease High)       | ⛔️                | ⛔️               | ⛔️      |\n| Range selector (Ease Low)        | ⛔️                | ⛔️               | ⛔️      |\n| Range selector (Randomize order) | ⛔️                | ⛔️               | ⛔️      |\n| expression selector              | ⛔️                | ⛔️               | ⛔️      |\n| **Other**                        | **python-lottie** | **Telegram**     | **SVG** |\n| Expressions                      | ⛔️                | ⛔️[^untested]    | ⛔️      |\n| Images                           | 👍                | ⛔️               | 👍      |\n| Precomps                         | 👍                | 👍               | 👍      |\n| Time Stretch                     | 👍                | ⛔️               | ⛔️      |\n| Time remap                       | 👍                | ⛔️[^dok]         | 👍      |\n| Markers                          | ⛔️                | ⛔️[^untested]    | ⛔️      |\n| 3D Layers                        | 👍                | ⛔️[^untested]    | ⛔️      |\n| Repeaters                        | 👍                | 👍[^unsupported] | 👍      |\n| Solids                           | 👍                | 👍[^unsupported] | 👍      |\n\n[^text]: Note that **python-lottie** offers an alternative to lottie text layers, and can render\ntext as shapes, so that is supported everywhere\n\n[^untested]: Marked as unsupported but I haven't tested it\n\n[^bug]: Not listed as unsupported, maybe a bug?\n\n[^dok]: Works on telegram desktop\n\n[^unsupported]: Marked as unsupported\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/mattbas/python-lottie/",
    "keywords": "telegram stickers tgs lottie svg animation",
    "license": "GNU Affero General Public License v3 or later (AGPLv3+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lottie-ps",
    "package_url": "https://pypi.org/project/lottie-ps/",
    "platform": null,
    "project_url": "https://pypi.org/project/lottie-ps/",
    "project_urls": {
      "Chat": "https://t.me/tgs_stuff",
      "Code": "https://gitlab.com/mattbas/python-lottie/",
      "Coverage": "https://mattbas.gitlab.io/python-lottie/coverage/",
      "Documentation": "https://mattbas.gitlab.io/python-lottie/index.html",
      "Downloads": "https://mattbas.gitlab.io/python-lottie/downloads.html",
      "Homepage": "https://gitlab.com/mattbas/python-lottie/"
    },
    "release_url": "https://pypi.org/project/lottie-ps/0.7.0/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "A framework to work with lottie files and telegram animated stickers (tgs)",
    "version": "0.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16009469,
  "releases": {
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc9da587a466a48fadc201bac9e3efd87eff47fe832d4140eaec4c16d4a8928c",
          "md5": "dfbf24d3da9a12cdd344cbb53830edf5",
          "sha256": "73c181dcfe1f76d02cd8cbb6673832784d1ff34698f3a62d89ce31b24f2ef083"
        },
        "downloads": -1,
        "filename": "lottie-ps-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dfbf24d3da9a12cdd344cbb53830edf5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 150159,
        "upload_time": "2022-12-06T15:27:40",
        "upload_time_iso_8601": "2022-12-06T15:27:40.781911Z",
        "url": "https://files.pythonhosted.org/packages/dc/9d/a587a466a48fadc201bac9e3efd87eff47fe832d4140eaec4c16d4a8928c/lottie-ps-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc9da587a466a48fadc201bac9e3efd87eff47fe832d4140eaec4c16d4a8928c",
        "md5": "dfbf24d3da9a12cdd344cbb53830edf5",
        "sha256": "73c181dcfe1f76d02cd8cbb6673832784d1ff34698f3a62d89ce31b24f2ef083"
      },
      "downloads": -1,
      "filename": "lottie-ps-0.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dfbf24d3da9a12cdd344cbb53830edf5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 150159,
      "upload_time": "2022-12-06T15:27:40",
      "upload_time_iso_8601": "2022-12-06T15:27:40.781911Z",
      "url": "https://files.pythonhosted.org/packages/dc/9d/a587a466a48fadc201bac9e3efd87eff47fe832d4140eaec4c16d4a8928c/lottie-ps-0.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}