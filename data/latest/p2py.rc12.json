{
  "info": {
    "author": "Adam Szokalski",
    "author_email": "aszokalski@ipds.team",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools",
      "Topic :: System :: Networking"
    ],
    "description": "## What is p2py\n\nIt's a simple peer to peer networking library based on [Chord](http://nms.lcs.mit.edu/papers/chord.pdf) made for [IPDS project](https://github.com/ipds/IPDS-Python). \n\nThe goal of this project is to create a extraordinarly simple to use yet powerfull peer to peer networking library for Python. It's created for [IPDS project](https://github.com/ipds/IPDS-Python) but can be used by everyone with ease.\n\n## Why p2py?\n\nThat's why:\n\n- **It's plug-and-play**,\n- **It's easy to use**,\n- **It's customizable**\n\n\n\n## Features\n\nP2py is packed with many usefull features that will help you build your p2p app faster:\n\n- **TCP Hole Punching**\n- **Chord routing system** (So you can connect to other node jus using it's numeric ID)\n- **Temporary / constant connections**\n- **Sending any type of data** (that can be represented in bytes)\n- **Messages**\n- **Requests** (p2py's experimental approach that will save you some time)\n- **Built-in text message type**\n- **Tools for defining and handling your own message types**\n\n## Installation\n\nInstall with `pip` using the command:\n\n```\n$ pip install p2py\n```\n\n\n\n## Simple examples\n\n### Joining the network and sending text message\n\nNode B joins the network of Node A\n\n**Node A** (172.17.0.2:4444)  UUID 0\n\n```python\nimport p2py, time\n\nnode = p2py.Node(4444) #Create a node listening on port 4444\nnode.start() #Start the node\n\nwhile True: #Wait forever\n\ttime.sleep(1) \n\t\n#Listening on 172.17.0.2:4444\n#(172.11.0.3:4444) -> \"Hi!\"\n```\n\n**Node B** (172.11.0.3:4445) UUID 1\n\n```python\nimport p2py, time\n\nnode = p2py.Node(4445) #Create a node listening on port 4444\nnode.start() #Start the node\n\nnode.join_network((('172.17.0.2', 4444))) #Join the network of Node A\nwhile not node.joined(): #Wait until the node joins the network\n\ttime.sleep(1) \n\nmsg = {\t#Construct a message\n    'type' : 'text',\n    'data' : \"Hi!\"\n}\nnode.send_to_UUID(UUID=0, msg=msg) #Send a message to Node A\n\t\n#Listening on 172.11.0.3:4444\n#Successfully joined the network! Your UUID is 1\n#Sent message to UUID 0\n```\n\n### Define custom request type and send request\n\nIn this example I will define a custom request type thet will add 1 to a requested number and return the result bact to requesting peer.\n\n**Node A** (172.17.0.2:4444) \n\n```python\nimport p2py, time\n\nnode = p2py.Node(4444) #Create a node listening on port 4444\n\ndef handle_add(node, conn, request): #Define a handler\n\tn = request.contents['data'] #Get data from request\n\tn_plus_one = n + 1 #Process the data\n\tresp = { #Construct a response\n        'type' : 'ADD RESP',\n        'data' : n_plus_one\n\t}\n\trequest.respond(resp)  #Respond\n\nnode.add_handler(\"ADD\", handle_add) #Assign the handler to \"ADD\" message type\n\nnode.start() #Start the node\n\nwhile True: #Wait forever\n\ttime.sleep(1) \n\t\n#Listening on 172.17.0.2:4444\n```\n\n**Node B** (172.11.0.3:4445)\n\n```python\nimport p2py, time\n\nnode = p2py.Node(4445) #Create a node listening on port 4444\nnode.start() #Start the node\n\nnode.join_network((('172.17.0.2', 4444))) #Join the network of Node A\nwhile not node.joined(): #Wait until the node joins the network\n\ttime.sleep(1) \n\nmsg = {\t#Construct a request\n    'type' : 'ADD',\n    'data' : 17\n}\nresp = node.request(UUID=0, request_msg=msg) #Send a request to Node A and receive response\nresult = resp['data']\nprint(f\"17 + 1 = {result}\")\n\n\n#Listening on 172.11.0.3:4444\n#Successfully joined the network! Your UUID is 1\n#Sent message to UUID 0\n#17 + 1 = 18\n```\n\n## \n\n## Documentation\n\nThis is documentation of some high level functions (there is a lot more)\n\n### p2py.Node(*port*, *host[opt]*)\n\n> Creates node object. It will listen for connections on specified ***port [int]***. If ***host [str]*** was not specified it will run on localhost (127.0.0.1)\n\n**Example:**\n\n```python\nexample_node = Node(4444)\n```\n\n\n\n#### Functions:\n\n##### *Node***.connect_to_network(*address_list*)**\n\n> Connects node to network of peer which ***address_list [tuple]*** was given. Argument ***address_list*** is a list of 2-tuples of host (str) and port (int): **(HOST [str], PORT [int])**.\n\n**Example:**\n\n```python\nexample_node.connect_to_network([('127.0.0.1', 1234)])\n```\n\n\n\n##### *Node*.send_to_UUID(*UUID*, *message*)\n\n> Creates a temporary connection with ***UUID [Int]*** (that means it will be closed after sending the message) and sends **message [dict]**.\n>\n> **Message** is a JSON dict it this form:\n>\n> ```python\n> {\n>     'type' : MESSAGE_TYPE,\n>     'data' : MESSAGE_DATA\n> }\n> ```\n>\n> \n\n**Example:**\n\n```python\nmessage = {\n    'type' : 'TEXT',\n    'data' : 'Hello!'\n}\nexample_node.send_to_UUID(7, message)\n#sends hello to UUID 7\n```\n\n##### \n\n##### *Node*.send_to_address(*address*, *message*)\n\n> Creates a temporary connection with ***address [2-tuple]*** (that means it will be closed after sending the message) and sends **message [dict]**.\n\n**Example:**\n\n```python\nmessage = {\n    'type' : 'TEXT',\n    'data' : 'Hello!'\n}\nexample_node.send_to_address(('127.0.0.1', 1234), message)\n#sends hello to 127.0.0.1:1234\n```\n\n##### \n\n##### *Node*.send_to_connection(*connection*, *message*)\n\n> Sends **message *[dict]*** to **connection*[Connection]***.\n\n**Example:**\n\n```python\nmessage = {\n    'type' : 'TEXT',\n    'data' : 'Hello!'\n}\nconn = get_connection_object() #this is a pseudo function. Don't try it as it doesnt exist\nexample_node.send_to_connection(conn, message)\n#sends hello to conn\n```\n\n\n\n##### *Node*.request(*UUID[opt]*, *address[opt]*, *connection[opt]*, *request_msg*)\n\n> Sends **request *[Request]*** to **UUID*[Int]*** OR **address*[2-tuple]*** OR **connection*[Connection]*** (at least one has to be specified). It returns ***dict*** as a response or ***NoneType*** if there is no response.\n>\n> The requested node receives ***Request object***. You can learn about handling requests [in this section]()\n\n**Example:**\n\n```python\nrequest = {\n    'type' : 'ADD',\n    'data' : 17\n}\n\nresp = example_node.request(UUID=7, request_msg=request)\nprint(f\"17 + 1 = {resp['data']}\")\n```\n\n##### \n\n##### *Node*.send_to_peer_book(*message*, *exclude [opt]*)\n\n> Sends **message [dict]** to all peers in your peer book optionally excluding UUIDs[Int] in **exclude [List]**\n\n**Example:**\n\n```python\nmessage = {\n    'type' : 'TEXT',\n    'data' : 'Hello peer book!'\n}\nexample_node.send_to_peer_book(message)\n#sends \"Hello peer book!\" to peer book\n```\n\n\n\n##### *Node*.close_all_connections()\n\n> Closes all connections. It's synonymous to leaving the network\n\n**Example:**\n\n```python\nexample_node.close_all_connections()\n#left the network\n```\n##### *Node*.add_handler(*message_type[str]*, *handler[func]*)\n\n> Defines a handler for a given ***message_type***. It takes 2 arguments: ***message_type*** and ***handler*** function.\n>\n> ***Handler*** function has to take 3 arguments: \n> - **node** - a pointer to the local node,\n> - **conn** - Connection object from which the request was sent,\n> - **request** - Request object sent by requesting node.\n\n**Example:**\n\n```python\ndef some_function(node, conn, request):\n\t#do something\n\nnode.add_handler(\"some type\", some_function)\nnode.start()\n```\n\n\n#### Variables\n\n##### *Node*.UUID [Int]\n\n> This variable holds node's UUID. It's set to `None ` when node is not connected to any network.\n\n**Example:**\n\n```python\nprint(example_node.UUID)\n#3\n```\n\n\n\n##### *Node*.network_size [Int]\n\n> This variable holds info about the number of peers in the network Node is connected to\n\n**Example:**\n\n```python\nprint(example_node.network_size)\n#77\n```\n\n### p2py.Request(*callback_address*, *contents*)\n\n> Creates request object\n\n##### *Request*.respond(*response[dict]*)\n\n> Sends the ***response*** to the requester.\n\n**Example:**\n\n```python\nmsg = {\n    'type' : 'SOME RESP',\n    'data' : 'some data'\n}\n\nrequest.respond(msg)\n```\n\n##### *Request*.bounce(*address[opt]*, *UUID[opt]*)\n\n> Sends the requests to another node specified by either ***address*** OR ***UUID***. \n>\n> The request will be processed by another peer **but the response will be sent to the same requester**.\n\n\n**Example:**\n\n```python\n#Oh no! I can't answer the request. Maybe UUID 7 knows the answer\n\nrequest.bounce(UUID=7)\n```\n\n\n### Message types\n\n> There are many types of messages that do different things. These are some high-level ones:\n\n### type TEXT\n\n```python\nmessage = {\n    'type' : 'TEXT',\n    'data' : text_message\n}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/ipds/p2py/archive/0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ipds/p2py",
    "keywords": "p2p,peer to peer,ipds",
    "license": "AGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "p2py",
    "package_url": "https://pypi.org/project/p2py/",
    "platform": "all",
    "project_url": "https://pypi.org/project/p2py/",
    "project_urls": {
      "Download": "https://github.com/ipds/p2py/archive/0.1.tar.gz",
      "Homepage": "https://github.com/ipds/p2py"
    },
    "release_url": "https://pypi.org/project/p2py/0.23/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The simplest peer to peer networking Python library",
    "version": "0.23",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8179799,
  "releases": {
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86751a65e8adb26d15e7d3002d0252828a1467999e9fc2a36172045a3c00cb15",
          "md5": "3df898566b2eaed620400156b0971793",
          "sha256": "2d93a7cb09908da710794d8f136865e8eb5c28103ae5678b963c8c7bfbbf05a9"
        },
        "downloads": -1,
        "filename": "p2py-0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "3df898566b2eaed620400156b0971793",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9566,
        "upload_time": "2019-10-03T19:38:34",
        "upload_time_iso_8601": "2019-10-03T19:38:34.984357Z",
        "url": "https://files.pythonhosted.org/packages/86/75/1a65e8adb26d15e7d3002d0252828a1467999e9fc2a36172045a3c00cb15/p2py-0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a9fb5aaff5eb89da81fac7857f90de2381f6daf0d69c9abfd0a9225a6cc7636",
          "md5": "36311a68fb06364e1c0a4e9209b44128",
          "sha256": "7e6aeb391b1e18ea11fb972849df0d87bc00f9964cbaecac5f48ddcacbc08a9d"
        },
        "downloads": -1,
        "filename": "p2py-0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "36311a68fb06364e1c0a4e9209b44128",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9560,
        "upload_time": "2019-10-03T19:43:48",
        "upload_time_iso_8601": "2019-10-03T19:43:48.529163Z",
        "url": "https://files.pythonhosted.org/packages/8a/9f/b5aaff5eb89da81fac7857f90de2381f6daf0d69c9abfd0a9225a6cc7636/p2py-0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95d29670061385b4e14e2b16c512d77b35a9851b1f1dc82353d2bc957b3aba5b",
          "md5": "d960b9a107fe6f9b7365c3384bd34ec2",
          "sha256": "4a1ecd6eb1e8ff329d1d7b3c0ed64940c85cacc6b0639364a563805d85a34bbd"
        },
        "downloads": -1,
        "filename": "p2py-0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "d960b9a107fe6f9b7365c3384bd34ec2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9566,
        "upload_time": "2019-10-03T19:52:00",
        "upload_time_iso_8601": "2019-10-03T19:52:00.088918Z",
        "url": "https://files.pythonhosted.org/packages/95/d2/9670061385b4e14e2b16c512d77b35a9851b1f1dc82353d2bc957b3aba5b/p2py-0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ac6627f0998da3c2d29f515f39446452586e1abb9d4b0aa2d7f4b392feff7a9",
          "md5": "af9457c76ef00680ca80876ba4c5aa2e",
          "sha256": "180521a4f39684eff53c8d56ecc02f7cb715660b2b5633c7722b4f7b05a3828d"
        },
        "downloads": -1,
        "filename": "p2py-0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "af9457c76ef00680ca80876ba4c5aa2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9391,
        "upload_time": "2019-10-03T19:57:38",
        "upload_time_iso_8601": "2019-10-03T19:57:38.620327Z",
        "url": "https://files.pythonhosted.org/packages/5a/c6/627f0998da3c2d29f515f39446452586e1abb9d4b0aa2d7f4b392feff7a9/p2py-0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cb0b29143e1cea3f9b0959cdd0951fb8512ddd86f41931e6e7617ec541aaae7",
          "md5": "310cd2da7e64be503b65473ac527b3d4",
          "sha256": "ca123cf242f4662e55035922c7cb1431e7bec941310537c8824df69da166f9ad"
        },
        "downloads": -1,
        "filename": "p2py-0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "310cd2da7e64be503b65473ac527b3d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9583,
        "upload_time": "2019-10-03T20:01:51",
        "upload_time_iso_8601": "2019-10-03T20:01:51.269717Z",
        "url": "https://files.pythonhosted.org/packages/3c/b0/b29143e1cea3f9b0959cdd0951fb8512ddd86f41931e6e7617ec541aaae7/p2py-0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4121cca1dee743fa06b098c2e4bb3976b5a0e2a2e46b578239a86114d9125e00",
          "md5": "19564a88ad575dc0e2e961b52a1f8f16",
          "sha256": "fab273766c0400303ea774867a8903558d56e58fda366b17c6729992e6a59c16"
        },
        "downloads": -1,
        "filename": "p2py-0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "19564a88ad575dc0e2e961b52a1f8f16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9594,
        "upload_time": "2019-10-03T20:05:30",
        "upload_time_iso_8601": "2019-10-03T20:05:30.399740Z",
        "url": "https://files.pythonhosted.org/packages/41/21/cca1dee743fa06b098c2e4bb3976b5a0e2a2e46b578239a86114d9125e00/p2py-0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "070a83e26dc7dc4fa4d50ba43f713058d202cce89726dd9fa684fef2e8d1ba84",
          "md5": "91d6cc24940ad56489827cd5ea1b91f3",
          "sha256": "92c908b7ed922715f71c19fe5e6400f02b2aa19d5f8cea0de02f2891e149fe13"
        },
        "downloads": -1,
        "filename": "p2py-0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "91d6cc24940ad56489827cd5ea1b91f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9601,
        "upload_time": "2019-10-03T20:10:39",
        "upload_time_iso_8601": "2019-10-03T20:10:39.579320Z",
        "url": "https://files.pythonhosted.org/packages/07/0a/83e26dc7dc4fa4d50ba43f713058d202cce89726dd9fa684fef2e8d1ba84/p2py-0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6fe40338eb4a31efd3ae6e7631bcc28c39ccd0c012295036a5ea7606761eeed",
          "md5": "c3a0846c77ec7f1399b507d11f1cc6ce",
          "sha256": "65383146062abf8c147b286957f1aeab2d0233ddb613eaccf96a50bf14706c64"
        },
        "downloads": -1,
        "filename": "p2py-0.18.tar.gz",
        "has_sig": false,
        "md5_digest": "c3a0846c77ec7f1399b507d11f1cc6ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10026,
        "upload_time": "2019-10-03T20:14:11",
        "upload_time_iso_8601": "2019-10-03T20:14:11.618785Z",
        "url": "https://files.pythonhosted.org/packages/f6/fe/40338eb4a31efd3ae6e7631bcc28c39ccd0c012295036a5ea7606761eeed/p2py-0.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e4989d854802844033e1f2aed167b6af2863129002e009a354163f7ed0e7bcd",
          "md5": "4dead405a813ee685a52e1eb0555be23",
          "sha256": "d2f507c40ad598cfd129d51e04a1860a0c905f8b5881e28ff1b3e47f2ae9e571"
        },
        "downloads": -1,
        "filename": "p2py-0.19.tar.gz",
        "has_sig": false,
        "md5_digest": "4dead405a813ee685a52e1eb0555be23",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10174,
        "upload_time": "2019-10-06T13:18:20",
        "upload_time_iso_8601": "2019-10-06T13:18:20.584233Z",
        "url": "https://files.pythonhosted.org/packages/8e/49/89d854802844033e1f2aed167b6af2863129002e009a354163f7ed0e7bcd/p2py-0.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b090ac2ae34d9f0e8a2283c91a1d36f01d3113e2bfb79cf86137a8c6bc00466",
          "md5": "e2196d52860d2828247a62411fb03532",
          "sha256": "9aebd2c0e42730fb18c32ce68a297b150d833601c9d8b0ff13395359ee920e5f"
        },
        "downloads": -1,
        "filename": "p2py-0.21.tar.gz",
        "has_sig": false,
        "md5_digest": "e2196d52860d2828247a62411fb03532",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10014,
        "upload_time": "2019-10-06T19:31:07",
        "upload_time_iso_8601": "2019-10-06T19:31:07.680465Z",
        "url": "https://files.pythonhosted.org/packages/2b/09/0ac2ae34d9f0e8a2283c91a1d36f01d3113e2bfb79cf86137a8c6bc00466/p2py-0.21.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.22": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef3ae7561348949437a6c78cf4900c55f3ad9330dc1bde80c983a4c5c1128eed",
          "md5": "2bb30a7c18b00867c7a5e77dd8ad3f4a",
          "sha256": "3251493a2c8de4c08ddcb5f99befbf7c3817b75ed678d66597dce7a82919e8d1"
        },
        "downloads": -1,
        "filename": "p2py-0.22.tar.gz",
        "has_sig": false,
        "md5_digest": "2bb30a7c18b00867c7a5e77dd8ad3f4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13224,
        "upload_time": "2020-09-12T15:42:19",
        "upload_time_iso_8601": "2020-09-12T15:42:19.400954Z",
        "url": "https://files.pythonhosted.org/packages/ef/3a/e7561348949437a6c78cf4900c55f3ad9330dc1bde80c983a4c5c1128eed/p2py-0.22.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.23": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afe6ad0afd6b9e9bc6f5a5eca303b5867c24d7063f7d18d3b33902934851e2b6",
          "md5": "b166f7c1f63a443bd840066d8744f1b6",
          "sha256": "23e339e4be6323415f84c89543ef82c0b095181da9cf213834daf5a7b4bf025f"
        },
        "downloads": -1,
        "filename": "p2py-0.23.tar.gz",
        "has_sig": false,
        "md5_digest": "b166f7c1f63a443bd840066d8744f1b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12891,
        "upload_time": "2020-09-14T08:41:11",
        "upload_time_iso_8601": "2020-09-14T08:41:11.969457Z",
        "url": "https://files.pythonhosted.org/packages/af/e6/ad0afd6b9e9bc6f5a5eca303b5867c24d7063f7d18d3b33902934851e2b6/p2py-0.23.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "afe6ad0afd6b9e9bc6f5a5eca303b5867c24d7063f7d18d3b33902934851e2b6",
        "md5": "b166f7c1f63a443bd840066d8744f1b6",
        "sha256": "23e339e4be6323415f84c89543ef82c0b095181da9cf213834daf5a7b4bf025f"
      },
      "downloads": -1,
      "filename": "p2py-0.23.tar.gz",
      "has_sig": false,
      "md5_digest": "b166f7c1f63a443bd840066d8744f1b6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12891,
      "upload_time": "2020-09-14T08:41:11",
      "upload_time_iso_8601": "2020-09-14T08:41:11.969457Z",
      "url": "https://files.pythonhosted.org/packages/af/e6/ad0afd6b9e9bc6f5a5eca303b5867c24d7063f7d18d3b33902934851e2b6/p2py-0.23.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}