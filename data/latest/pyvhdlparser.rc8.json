{
  "info": {
    "author": "Patrick Lehmann",
    "author_email": "Paebbels@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
      "Topic :: Software Development :: Code Generators",
      "Topic :: Software Development :: Compilers",
      "Topic :: Software Development :: Testing",
      "Topic :: Utilities"
    ],
    "description": "[![Sourcecode on GitHub](https://img.shields.io/badge/Paebbels-pyVHDLParser-323131.svg?logo=github&longCache=true)](https://github.com/Paebbels/pyVHDLParser)\n[![License](https://img.shields.io/badge/code%20license-Apache%20License%2C%202.0-lightgrey?logo=GitHub)](LICENSE.md)\n[![GitHub tag (latest SemVer incl. pre-release)](https://img.shields.io/github/v/tag/Paebbels/pyVHDLParser?logo=GitHub&include_prereleases)](https://github.com/Paebbels/pyVHDLParser/tags)\n[![GitHub release (latest SemVer incl. including pre-releases)](https://img.shields.io/github/v/release/Paebbels/pyVHDLParser?logo=GitHub&include_prereleases)](https://github.com/Paebbels/pyVHDLParser/releases/latest)\n[![GitHub release date](https://img.shields.io/github/release-date/Paebbels/pyVHDLParser?logo=GitHub&)](https://github.com/Paebbels/pyVHDLParser/releases)  \n[![GitHub Workflow Status](https://img.shields.io/github/workflow/status/Paebbels/pyVHDLParser/Test,%20Coverage%20and%20Release?label=Workflow&logo=GitHub)](https://github.com/Paebbels/pyVHDLParser/actions?query=workflow%3A%22Test%2C+Coverage+and+Release%22)\n[![PyPI](https://img.shields.io/pypi/v/pyVHDLParser?logo=PyPI)](https://pypi.org/project/pyVHDLParser/)\n![PyPI - Status](https://img.shields.io/pypi/status/pyVHDLParser?logo=PyPI)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pyVHDLParser?logo=PyPI)\n[![Dependent repos (via libraries.io)](https://img.shields.io/librariesio/dependent-repos/pypi/pyVHDLParser)](https://github.com/Paebbels/pyVHDLParser/network/dependents)  \n[![Libraries.io status for latest release](https://img.shields.io/librariesio/release/pypi/pyVHDLParser)](https://libraries.io/github/Paebbels/pyVHDLParser)\n[![Codacy - Quality](https://img.shields.io/codacy/grade/1155f244b6f54a3a95abdaa80d6771f8?logo=Codacy)](https://www.codacy.com/manual/Paebbels/pyVHDLParser)\n[![Codacy - Coverage](https://img.shields.io/codacy/coverage/1155f244b6f54a3a95abdaa80d6771f8?logo=Codacy)](https://www.codacy.com/manual/Paebbels/pyVHDLParser)\n[![Codecov - Branch Coverage](https://img.shields.io/codecov/c/github/Paebbels/pyVHDLParser?logo=Codecov)](https://codecov.io/gh/Paebbels/pyVHDLParser)\n[![Libraries.io SourceRank](https://img.shields.io/librariesio/sourcerank/pypi/pyVHDLParser)](https://libraries.io/github/Paebbels/pyVHDLParser/sourcerank)  \n[![Read the Docs](https://img.shields.io/readthedocs/pyvhdlparser)](https://pyVHDLParser.readthedocs.io/en/latest/)\n\n# pyVHDLParser\n\nThis is a token-stream based parser for VHDL-2008.\n\nThis project requires Python 3.8+.\n\n## Introduction\n\n### Main Goals\n\n* **Parsing**\n  * slice an input document into **tokens** and text **blocks** which are categorized\n  * preserve case, whitespace and comments\n  * recover on parsing errors\n  * good error reporting / throw exceptions\n* **Fast Processing**\n  * multi-pass parsing and analysis\n  * delay analysis if not needed at current pass\n  * link tokens and blocks for fast-forward scanning\n* **Generic VHDL Language Model**\n  * Assemble a document-object-model (Code-DOM)\n  * Provide an API for code introspection\n\n### Use Cases\n\n* generate documentation by using the fast-forward scanner\n* generate a document/language model by using the grouped text-block scanner\n* extract compile orders and other dependency graphs\n* generate highlighted syntax\n* re-annotate documenting comments to their objects for doc extraction\n\n### Parsing approach\n\n1. slice an input document into **tokens**\n2. assemble tokens to text **blocks** which are categorized\n3. assemble text blocks for fast-forward scanning into **groups**\n4. translate groups into a document-object-model (DOM)\n5. provide a generic VHDL language model\n\n### Long time goals\n\n* A Sphinx language plugin for VHDL \n\n    TODO: Move the following documentation to ReadTheDocs and replace it with a more lightweight version.\n\n## Basic Concept\n\n[![][concept]][concept]\n\n[concept]: https://raw.githubusercontent.com/Paebbels/pyVHDLParser/master/doc/images/Linking_TokenBlockGroup.png\n\n## Example 1\n\nThis is an input file:\n\n```VHDL\n-- Copryright 2016\nlibrary IEEE;\nuse     IEEE.std_logic_1164.all;\n\nentity myEntity is\n  generic (\n    BITS : positive := 8\n  );\n  port (\n    Clock   : in   std_logic;\n    Output  : out  std_logic_vector(BITS - 1 downto 0)\n  );\nend entity;\n\narchitecture rtl of myEntity is\n  constant const0 : integer := 5;\nbegin\n  process(Clock)\n  begin\n  end process;\nend architecture;\n\nlibrary IEEE, PoC;\nuse     PoC.Utils.all, PoC.Common.all;\n\npackage pkg0 is\n  function func0(a : integer) return string;\nend package;\n\npackage body Components is\n  function func0(a : integer) return string is\n    procedure proc0 is\n    begin\n    end procedure;\n  begin\n  end function\nend package body;\n```\n\n### Step 1\nThe input file (stream of characters) is translated into stream of basic tokens:\n* `StartOfDocumentToken`\n* `LinebreakToken`\n* `SpaceToken`\n  * `IndentationToken`\n* `WordToken`\n* `CharacterToken`\n  * `FusedCharacterToken`\n* CommentToken\n  * `SingleLineCommentToken`\n  * `MultiLineCommentToken`\n* `EndOfDocumentToken`\n\n\nThe stream looks like this:\n```\n<StartOfDocumentToken>\n<SLCommentToken '-- Copryright 2016\\n'  ................ at 1:1>\n<WordToken      'library'  ............................. at 2:1>\n<SpaceToken     ' '  ................................... at 2:8>\n<WordToken      'IEEE'  ................................ at 2:9>\n<CharacterToken ';'  ................................... at 2:13>\n<LinebreakToken ---------------------------------------- at 2:14>\n<WordToken      'use'  ................................. at 3:1>\n<SpaceToken     '     '  ............................... at 3:4>\n<WordToken      'IEEE'  ................................ at 3:9>\n<CharacterToken '.'  ................................... at 3:13>\n<WordToken      'std_logic_1164'  ...................... at 3:14>\n<CharacterToken '.'  ................................... at 3:28>\n<WordToken      'all'  ................................. at 3:29>\n<CharacterToken ';'  ................................... at 3:32>\n<LinebreakToken ---------------------------------------- at 3:33>\n<LinebreakToken ---------------------------------------- at 4:1>\n<WordToken      'entity'  .............................. at 5:1>\n<SpaceToken     ' '  ................................... at 5:7>\n<WordToken      'myEntity'  ............................ at 5:8>\n<SpaceToken     ' '  ................................... at 5:16>\n<WordToken      'is'  .................................. at 5:17>\n<LinebreakToken ---------------------------------------- at 5:19>\n<IndentToken    '\\t'  .................................. at 6:1>\n<WordToken      'generic'  ............................. at 6:2>\n<SpaceToken     ' '  ................................... at 6:9>\n<CharacterToken '('  ................................... at 6:10>\n<LinebreakToken ---------------------------------------- at 6:11>\n<IndentToken    '\\t\\t'  ................................ at 7:1>\n<WordToken      'BITS'  ................................ at 7:3>\n<SpaceToken     ' '  ................................... at 7:7>\n<CharacterToken ':'  ................................... at 7:8>\n<SpaceToken     ' '  ................................... at 7:8>\n<WordToken      'positive'  ............................ at 7:10>\n<SpaceToken     ' '  ................................... at 7:18>\n<FusedCharToken ':='  .................................. at 7:19>\n<SpaceToken     ' '  ................................... at 7:21>\n<WordToken      '8'  ................................... at 7:22>\n<LinebreakToken ---------------------------------------- at 7:23>\n<IndentToken    '\\t'  .................................. at 8:1>\n<CharacterToken ')'  ................................... at 8:2>\n<CharacterToken ';'  ................................... at 8:3>\n<LinebreakToken ---------------------------------------- at 8:4>\n<IndentToken    '\\t'  .................................. at 9:1>\n<WordToken      'port'  ................................ at 9:2>\n<SpaceToken     ' '  ................................... at 9:6>\n<CharacterToken '('  ................................... at 9:7>\n<LinebreakToken ---------------------------------------- at 9:8>\n<IndentToken    '\\t\\t'  ................................ at 10:1>\n<WordToken      'Clock'  ............................... at 10:3>\n<SpaceToken     '   '  ................................. at 10:8>\n<CharacterToken ':'  ................................... at 10:11>\n<SpaceToken     ' '  ................................... at 10:11>\n<WordToken      'in'  .................................. at 10:13>\n<SpaceToken     '  '  .................................. at 10:15>\n<WordToken      'std_logic'  ........................... at 10:17>\n<CharacterToken ';'  ................................... at 10:26>\n<LinebreakToken ---------------------------------------- at 10:27>\n<IndentToken    '\\t\\t'  ................................ at 11:1>\n<WordToken      'Output'  .............................. at 11:3>\n<SpaceToken     '       '  ................................... at 11:9>\n<CharacterToken ':'  ................................... at 11:10>\n<SpaceToken     ' '  ................................... at 11:10>\n<WordToken      'out'  ................................. at 11:12>\n<SpaceToken     '       '  ................................... at 11:15>\n<WordToken      'std_logic_vector'  .................... at 11:16>\n<CharacterToken '('  ................................... at 11:32>\n<WordToken      'BITS'  ................................ at 11:33>\n<SpaceToken     ' '  ................................... at 11:37>\n<CharacterToken '-'  ................................... at 11:38>\n<SpaceToken     ' '  ................................... at 11:38>\n<WordToken      '1'  ................................... at 11:40>\n<SpaceToken     ' '  ................................... at 11:41>\n<WordToken      'downto'  .............................. at 11:42>\n<SpaceToken     ' '  ................................... at 11:48>\n<WordToken      '0'  ................................... at 11:49>\n<CharacterToken ')'  ................................... at 11:50>\n<LinebreakToken ---------------------------------------- at 11:51>\n<IndentToken    '\\t'  .................................. at 12:1>\n<CharacterToken ')'  ................................... at 12:2>\n<CharacterToken ';'  ................................... at 12:3>\n<LinebreakToken ---------------------------------------- at 12:4>\n<WordToken      'end'  ................................. at 13:1>\n<SpaceToken     ' '  ................................... at 13:4>\n<WordToken      'entity'  .............................. at 13:5>\n<CharacterToken ';'  ................................... at 13:11>\n<LinebreakToken ---------------------------------------- at 13:12>\n<LinebreakToken ---------------------------------------- at 14:1>\n<WordToken      'architecture'  ........................ at 15:1>\n<SpaceToken     ' '  ................................... at 15:13>\n<WordToken      'rtl'  ................................. at 15:14>\n<SpaceToken     ' '  ................................... at 15:17>\n<WordToken      'of'  .................................. at 15:18>\n<SpaceToken     ' '  ................................... at 15:20>\n<WordToken      'myEntity'  ............................ at 15:21>\n<SpaceToken     ' '  ................................... at 15:29>\n<WordToken      'is'  .................................. at 15:30>\n<LinebreakToken ---------------------------------------- at 15:32>\n<IndentToken    '\\t'  .................................. at 16:1>\n<WordToken      'constant'  ............................ at 16:2>\n<SpaceToken     ' '  ................................... at 16:10>\n<WordToken      'const0'  .............................. at 16:11>\n<SpaceToken     ' '  ................................... at 16:17>\n<CharacterToken ':'  ................................... at 16:18>\n<SpaceToken     ' '  ................................... at 16:18>\n<WordToken      'integer'  ............................. at 16:20>\n<SpaceToken     ' '  ................................... at 16:27>\n<FusedCharToken ':='  .................................. at 16:28>\n<SpaceToken     ' '  ................................... at 16:30>\n<WordToken      '5'  ................................... at 16:31>\n<CharacterToken ';'  ................................... at 16:32>\n<LinebreakToken ---------------------------------------- at 16:33>\n<WordToken      'begin'  ............................... at 17:1>\n<LinebreakToken ---------------------------------------- at 17:6>\n<IndentToken    '\\t'  .................................. at 18:1>\n<WordToken      'process'  ............................. at 18:2>\n<CharacterToken '('  ................................... at 18:9>\n<WordToken      'Clock'  ............................... at 18:10>\n<CharacterToken ')'  ................................... at 18:15>\n<LinebreakToken ---------------------------------------- at 18:16>\n<IndentToken    '\\t'  .................................. at 19:1>\n<WordToken      'begin'  ............................... at 19:2>\n<LinebreakToken ---------------------------------------- at 19:7>\n<IndentToken    '\\t'  .................................. at 20:1>\n<WordToken      'end'  ................................. at 20:2>\n<SpaceToken     ' '  ................................... at 20:5>\n<WordToken      'process'  ............................. at 20:6>\n<CharacterToken ';'  ................................... at 20:13>\n<LinebreakToken ---------------------------------------- at 20:14>\n<WordToken      'end'  ................................. at 21:1>\n<SpaceToken     ' '  ................................... at 21:4>\n<WordToken      'architecture'  ........................ at 21:5>\n<CharacterToken ';'  ................................... at 21:17>\n<LinebreakToken ---------------------------------------- at 21:18>\n<LinebreakToken ---------------------------------------- at 22:1>\n<WordToken      'library'  ............................. at 23:1>\n<SpaceToken     ' '  ................................... at 23:8>\n<WordToken      'IEEE'  ................................ at 23:9>\n<CharacterToken ','  ................................... at 23:13>\n<SpaceToken     ' '  ................................... at 23:14>\n<WordToken      'PoC'  ................................. at 23:15>\n<CharacterToken ';'  ................................... at 23:18>\n<LinebreakToken ---------------------------------------- at 23:19>\n<WordToken      'use'  ................................. at 24:1>\n<SpaceToken     '     '  ............................... at 24:4>\n<WordToken      'PoC'  ................................. at 24:9>\n<CharacterToken '.'  ................................... at 24:12>\n<WordToken      'Utils'  ............................... at 24:13>\n<CharacterToken '.'  ................................... at 24:18>\n<WordToken      'all'  ................................. at 24:19>\n<CharacterToken ','  ................................... at 24:22>\n<SpaceToken     ' '  ................................... at 24:23>\n<WordToken      'PoC'  ................................. at 24:24>\n<CharacterToken '.'  ................................... at 24:27>\n<WordToken      'Common'  .............................. at 24:28>\n<CharacterToken '.'  ................................... at 24:34>\n<WordToken      'all'  ................................. at 24:35>\n<CharacterToken ';'  ................................... at 24:38>\n<LinebreakToken ---------------------------------------- at 24:39>\n<LinebreakToken ---------------------------------------- at 25:1>\n<WordToken      'package'  ............................. at 26:1>\n<SpaceToken     ' '  ................................... at 26:8>\n<WordToken      'pkg0'  ................................ at 26:9>\n<SpaceToken     ' '  ................................... at 26:13>\n<WordToken      'is'  .................................. at 26:14>\n<LinebreakToken ---------------------------------------- at 26:16>\n<IndentToken    '\\t'  .................................. at 27:1>\n<WordToken      'function'  ............................ at 27:2>\n<SpaceToken     ' '  ................................... at 27:10>\n<WordToken      'func0'  ............................... at 27:11>\n<CharacterToken '('  ................................... at 27:16>\n<WordToken      'a'  ................................... at 27:17>\n<SpaceToken     ' '  ................................... at 27:18>\n<CharacterToken ':'  ................................... at 27:19>\n<SpaceToken     ' '  ................................... at 27:19>\n<WordToken      'integer'  ............................. at 27:21>\n<CharacterToken ')'  ................................... at 27:28>\n<SpaceToken     ' '  ................................... at 27:29>\n<WordToken      'return'  .............................. at 27:30>\n<SpaceToken     ' '  ................................... at 27:36>\n<WordToken      'string'  .............................. at 27:37>\n<CharacterToken ';'  ................................... at 27:43>\n<LinebreakToken ---------------------------------------- at 27:44>\n<WordToken      'end'  ................................. at 28:1>\n<SpaceToken     ' '  ................................... at 28:4>\n<WordToken      'package'  ............................. at 28:5>\n<CharacterToken ';'  ................................... at 28:12>\n<LinebreakToken ---------------------------------------- at 28:13>\n<LinebreakToken ---------------------------------------- at 29:1>\n<WordToken      'package'  ............................. at 30:1>\n<SpaceToken     ' '  ................................... at 30:8>\n<WordToken      'body'  ................................ at 30:9>\n<SpaceToken     ' '  ................................... at 30:13>\n<WordToken      'Components'  .......................... at 30:14>\n<SpaceToken     ' '  ................................... at 30:24>\n<WordToken      'is'  .................................. at 30:25>\n<LinebreakToken ---------------------------------------- at 30:27>\n<IndentToken    '\\t'  .................................. at 31:1>\n<WordToken      'function'  ............................ at 31:2>\n<SpaceToken     ' '  ................................... at 31:10>\n<WordToken      'func0'  ............................... at 31:11>\n<CharacterToken '('  ................................... at 31:16>\n<WordToken      'a'  ................................... at 31:17>\n<SpaceToken     ' '  ................................... at 31:18>\n<CharacterToken ':'  ................................... at 31:19>\n<SpaceToken     ' '  ................................... at 31:19>\n<WordToken      'integer'  ............................. at 31:21>\n<CharacterToken ')'  ................................... at 31:28>\n<SpaceToken     ' '  ................................... at 31:29>\n<WordToken      'return'  .............................. at 31:30>\n<SpaceToken     ' '  ................................... at 31:36>\n<WordToken      'string'  .............................. at 31:37>\n<SpaceToken     ' '  ................................... at 31:43>\n<WordToken      'is'  .................................. at 31:44>\n<LinebreakToken ---------------------------------------- at 31:46>\n<IndentToken    '\\t\\t'  ................................ at 32:1>\n<WordToken      'procedure'  ........................... at 32:3>\n<SpaceToken     ' '  ................................... at 32:12>\n<WordToken      'proc0'  ............................... at 32:13>\n<SpaceToken     ' '  ................................... at 32:18>\n<WordToken      'is'  .................................. at 32:19>\n<LinebreakToken ---------------------------------------- at 32:21>\n<IndentToken    '\\t\\t'  ................................ at 33:1>\n<WordToken      'begin'  ............................... at 33:3>\n<LinebreakToken ---------------------------------------- at 33:8>\n<IndentToken    '\\t\\t'  ................................ at 34:1>\n<WordToken      'end'  ................................. at 34:3>\n<SpaceToken     ' '  ................................... at 34:6>\n<WordToken      'procedure'  ........................... at 34:7>\n<CharacterToken ';'  ................................... at 34:16>\n<LinebreakToken ---------------------------------------- at 34:17>\n<IndentToken    '\\t'  .................................. at 35:1>\n<WordToken      'begin'  ............................... at 35:2>\n<LinebreakToken ---------------------------------------- at 35:7>\n<IndentToken    '\\t'  .................................. at 36:1>\n<WordToken      'end'  ................................. at 36:2>\n<SpaceToken     ' '  ................................... at 36:5>\n<WordToken      'function'  ............................ at 36:6>\n<LinebreakToken ---------------------------------------- at 36:14>\n<WordToken      'end'  ................................. at 37:1>\n<SpaceToken     ' '  ................................... at 37:4>\n<WordToken      'package'  ............................. at 37:5>\n<SpaceToken     ' '  ................................... at 37:12>\n<WordToken      'body'  ................................ at 37:13>\n<CharacterToken ';'  ................................... at 37:17>\n<LinebreakToken ---------------------------------------- at 37:18>\n```\n\n[![Screenshot][10]][10]\n\n### Step 2\nThe token stream from step 1 is translated into typed tokens like\n`DelimiterToken` (:), `EndToken` (;) or subtypes of `KeywordToken`.\nThese tokens are then grouped into blocks.\n\nThe example generates:\n```\n[StartOfDocumentBlock]\n[Blocks.CommentBlock            '-- Copryright 2016\\n'                                         at (line:   1, col:  1) .. (line:   1, col: 19)]\n[LibraryStatement.LibraryBlock           'library '                                                     at (line:   2, col:  1) .. (line:   2, col:  8)]\n[LibraryStatement.LibraryNameBlock       'IEEE'                                                         at (line:   2, col:  9) .. (line:   2, col: 13)]\n[LibraryStatement.LibraryEndBlock        ';'                                                            at (line:   2, col: 13) .. (line:   2, col: 13)]\n[LinebreakBlock                                                                                at (line:   2, col: 14) .. (line:   2, col: 14)]\n[Use.UseBlock                   'use     '                                                     at (line:   3, col:  1) .. (line:   3, col:  8)]\n[Use.UseNameBlock               'IEEE.std_logic_1164.all'                                      at (line:   3, col:  9) .. (line:   3, col: 32)]\n[Use.UseEndBlock                ';'                                                            at (line:   3, col: 32) .. (line:   3, col: 32)]\n[LinebreakBlock                                                                                at (line:   3, col: 33) .. (line:   3, col: 33)]\n[EmptyLineBlock                                                                                at (line:   4, col:  1) .. (line:   4, col:  1)]\n[Entity.NameBlock               'entity myEntity is'                                           at (line:   5, col:  1) .. (line:   5, col: 19)]\n[LinebreakBlock                                                                                at (line:   5, col: 19) .. (line:   5, col: 19)]\n[IndentationBlock                length=1 (2)                                                  at (line:   6, col:  1) .. (line:   6, col:  1)]\n[GenericList.OpenBlock          'generic ('                                                    at (line:   6, col:  2) .. (line:   6, col: 10)]\n[LinebreakBlock                                                                                at (line:   6, col: 11) .. (line:   6, col: 11)]\n[IndentationBlock                length=2 (4)                                                  at (line:   7, col:  1) .. (line:   7, col:  2)]\n[GenericList.ItemBlock          'BITS : positive := 8\\n\\t'                                     at (line:   7, col:  3) .. (line:   8, col:  1)]\n[GenericList.CloseBlock         ');'                                                           at (line:   8, col:  2) .. (line:   8, col:  3)]\n[LinebreakBlock                                                                                at (line:   8, col:  4) .. (line:   8, col:  4)]\n[IndentationBlock                length=1 (2)                                                  at (line:   9, col:  1) .. (line:   9, col:  1)]\n[PortList.OpenBlock             'port ('                                                       at (line:   9, col:  2) .. (line:   9, col:  7)]\n[LinebreakBlock                                                                                at (line:   9, col:  8) .. (line:   9, col:  8)]\n[IndentationBlock                length=2 (4)                                                  at (line:  10, col:  1) .. (line:  10, col:  2)]\n[PortList.ItemBlock             'Clock   : in  std_logic'                                      at (line:  10, col:  3) .. (line:  10, col: 26)]\n[PortList.DelimiterBlock        ';'                                                            at (line:  10, col: 26) .. (line:  10, col: 26)]\n[LinebreakBlock                                                                                at (line:  10, col: 27) .. (line:  10, col: 27)]\n[IndentationBlock                length=2 (4)                                                  at (line:  11, col:  1) .. (line:  11, col:  2)]\n[PortList.ItemBlock             'Output\\t: out\\tstd_logic_vector(BITS - 1 downto 0)\\n\\t'       at (line:  11, col:  3) .. (line:  12, col:  1)]\n[PortList.CloseBlock            ');'                                                           at (line:  12, col:  2) .. (line:  12, col:  3)]\n[LinebreakBlock                                                                                at (line:  12, col:  4) .. (line:  12, col:  4)]\n[Entity.EndBlock                'end entity;'                                                  at (line:  13, col:  1) .. (line:  13, col: 11)]\n[LinebreakBlock                                                                                at (line:  13, col: 12) .. (line:  13, col: 12)]\n[EmptyLineBlock                                                                                at (line:  14, col:  1) .. (line:  14, col:  1)]\n[Architecture.NameBlock         'architecture rtl of myEntity is'                              at (line:  15, col:  1) .. (line:  15, col: 32)]\n[LinebreakBlock                                                                                at (line:  15, col: 32) .. (line:  15, col: 32)]\n[IndentationBlock                length=1 (2)                                                  at (line:  16, col:  1) .. (line:  16, col:  1)]\n[Constant.ConstantBlock         'constant const0 : integer := 5;'                              at (line:  16, col:  2) .. (line:  16, col: 32)]\n[LinebreakBlock                                                                                at (line:  16, col: 33) .. (line:  16, col: 33)]\n[EmptyLineBlock                                                                                at (line:  17, col:  6) .. (line:  17, col:  6)]\n[IndentationBlock                length=1 (2)                                                  at (line:  18, col:  1) .. (line:  18, col:  1)]\n[Process.OpenBlock              'process('                                                     at (line:  18, col:  2) .. (line:  18, col:  9)]\n[SensitivityList.ItemBlock      'Clock'                                                        at (line:  18, col: 10) .. (line:  18, col: 15)]\n[Process.OpenBlock2*            ')'                                                            at (line:  18, col: 15) .. (line:  18, col: 15)]\n[LinebreakBlock                                                                                at (line:  18, col: 16) .. (line:  18, col: 16)]\n...\n```\n\nThe following screenshot shows the resulting stream of blocks:\n[![][20]][20]\n\n\n[outdated]\nThe block stream can also be \"opened\" to show the stream of tokens within each block. This is shown in the next screenshot:\n[![][21]][21]\n\n### Step 3\nThe stream of blocks from step 2 is transformed into a stream of groups.\n\n### Step 4\nOne of many post processing steps could be to remove whitespaces, indentation and comment blocks. So a filter can be applied to remove these block types. Additionally, multiparted blocks (e.g. if a comment or linebreak was inserted between consecutive code sequences, which belong to one block) can be fused to one single block.\n\nThis screenshot shows the filtered results:\n[![][30]][30] \n\n [10]: https://raw.githubusercontent.com/Paebbels/pyVHDLParser/master/doc/screens/TokenStream_Example_1.png\n [20]: https://raw.githubusercontent.com/Paebbels/pyVHDLParser/master/doc/screens/BlockStream_Example_1.png\n [21]: https://raw.githubusercontent.com/Paebbels/pyVHDLParser/master/doc/screens/BlockStream_Uses_Detailed.png\n [30]: https://raw.githubusercontent.com/Paebbels/pyVHDLParser/master/doc/screens/BlockStream_Uses_Fused.png\n\n## Example 2 - Simple_1\n\nThis is an input file:\n\n```VHDL\n-- Copryright 2016\nlibrary IEEE;\nuse     IEEE.std_logic_1164.all;\nuse      IEEE.numeric_std.all;\n\nentity myEntity is\n  generic (\n    BITS : positive := 8\n  );\n  port (\n    Clock   : in  std_logic;\n    Reset   : in  std_logic;\n    Output  : out  std_logic_vector(BITS - 1 downto 0)\n  );\nend entity;\n\narchitecture rtl of myEntity is\n\nbegin\n\nend architecture;\n```\n\nThis is the result stream:\n[![][40]][40] \n\nAnd this is the filtered and fused result stream:\n[![][41]][41]\n\n [40]: https://raw.githubusercontent.com/Paebbels/pyVHDLParser/master/doc/screens/BlockStream_Simple_1.png\n [41]: https://raw.githubusercontent.com/Paebbels/pyVHDLParser/master/doc/screens/BlockStream_Simple_1_Fused.png\n\n\n## Contributors\n* [Patrick Lehmann](https://github.com/Paebbels) (Maintainer)\n* [and more...](https://github.com/Paebbels/pyVHDLParser/graphs/contributors)\n\n\n## License\n\nThis Python package (source code) licensed under [Apache License 2.0](LICENSE.md).  \nThe accompanying documentation is licensed under [Creative Commons - Attribution 4.0 (CC-BY 4.0)](doc/Doc-License.rst).\n\n-------------------------\n\nSPDX-License-Identifier: Apache-2.0\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://GitHub.com/Paebbels/pyVHDLParser",
    "keywords": "Python3 VHDL Parser",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyVHDLParser",
    "package_url": "https://pypi.org/project/pyVHDLParser/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyVHDLParser/",
    "project_urls": {
      "Documentation": "https://Paebbels.GitHub.io/pyVHDLParser",
      "Homepage": "https://GitHub.com/Paebbels/pyVHDLParser",
      "Issue Tracker": "https://GitHub.com/Paebbels/pyVHDLParser/issues",
      "Source Code": "https://GitHub.com/Paebbels/pyVHDLParser"
    },
    "release_url": "https://pypi.org/project/pyVHDLParser/0.7.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A streaming-based VHDL parser.",
    "version": "0.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16934212,
  "releases": {
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfd8168a940624a8c97736c95ae98cc87901c80293c450da1cb0e4fddb66d0b7",
          "md5": "d50a1fc749c5a9e708a4059c57cd6adf",
          "sha256": "4a58b17654de98f789011b5cfe5fcbabad38d0f4f04da4ff2f1bdf784d758946"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d50a1fc749c5a9e708a4059c57cd6adf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 197798,
        "upload_time": "2019-12-26T23:41:01",
        "upload_time_iso_8601": "2019-12-26T23:41:01.911855Z",
        "url": "https://files.pythonhosted.org/packages/bf/d8/168a940624a8c97736c95ae98cc87901c80293c450da1cb0e4fddb66d0b7/pyVHDLParser-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "718e5a1b99e2a0a0e2bbe3a7b5c2b450feb0407eb69a70c1527c98a3f8be7824",
          "md5": "eee0c8659131892daf6e0e20ee58e3f0",
          "sha256": "d3cdbc72c1b761cc8b569d9e0edf9ff45f88340e638d8ee32de824b0a38c2591"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eee0c8659131892daf6e0e20ee58e3f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 75055,
        "upload_time": "2019-12-26T23:41:04",
        "upload_time_iso_8601": "2019-12-26T23:41:04.494565Z",
        "url": "https://files.pythonhosted.org/packages/71/8e/5a1b99e2a0a0e2bbe3a7b5c2b450feb0407eb69a70c1527c98a3f8be7824/pyVHDLParser-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98d27d6effde0b5b9e09ac362d461d27af5e3fe75366c7bac302119d1d5f6637",
          "md5": "21d51171ff6951e1212b9102f15336f2",
          "sha256": "6b568a2ff82e68663cd2a3455cff77a37477239a5ef081baed61a686010a6be2"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "21d51171ff6951e1212b9102f15336f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 202060,
        "upload_time": "2019-12-27T10:26:47",
        "upload_time_iso_8601": "2019-12-27T10:26:47.199705Z",
        "url": "https://files.pythonhosted.org/packages/98/d2/7d6effde0b5b9e09ac362d461d27af5e3fe75366c7bac302119d1d5f6637/pyVHDLParser-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9def629f4f245f08b1d98a0a06a38f97e753ba5eeeea5f049c5dd44e88b9c69d",
          "md5": "6b767212d4031c05d677d5d689b5db90",
          "sha256": "ecc827f49cd00ff9991c30a9ee86b47306b1cb2f08d0514165e0f1d4d748fdde"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6b767212d4031c05d677d5d689b5db90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 75908,
        "upload_time": "2019-12-27T10:26:48",
        "upload_time_iso_8601": "2019-12-27T10:26:48.886419Z",
        "url": "https://files.pythonhosted.org/packages/9d/ef/629f4f245f08b1d98a0a06a38f97e753ba5eeeea5f049c5dd44e88b9c69d/pyVHDLParser-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfaf96f8b3f1210485876f9a85c97a10650b17e8b78a08c3cf1d133772eb67e9",
          "md5": "fa9aaf819e46fa49f2575b880b7db322",
          "sha256": "2a771629e6b8bdd7be0fba0411346317825504139af9a985143405fd0149807b"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa9aaf819e46fa49f2575b880b7db322",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 202522,
        "upload_time": "2019-12-27T21:41:40",
        "upload_time_iso_8601": "2019-12-27T21:41:40.651083Z",
        "url": "https://files.pythonhosted.org/packages/bf/af/96f8b3f1210485876f9a85c97a10650b17e8b78a08c3cf1d133772eb67e9/pyVHDLParser-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "999650ac1f36f57d223097d2cf545c825214d6a60cc653672813c0a1f075bc89",
          "md5": "2411a47caf2edf4587b4d164678baa26",
          "sha256": "07f0ae8b1449f81742b5cb07cf64b43e256a166af91b033d094cee1799e23e5b"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2411a47caf2edf4587b4d164678baa26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 78054,
        "upload_time": "2019-12-27T21:41:42",
        "upload_time_iso_8601": "2019-12-27T21:41:42.415460Z",
        "url": "https://files.pythonhosted.org/packages/99/96/50ac1f36f57d223097d2cf545c825214d6a60cc653672813c0a1f075bc89/pyVHDLParser-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d80da221dd3ce6cf385ae6e7db05688885542ca266c5536e7fbc4d82c47d84c5",
          "md5": "45f216dc2362a487e709c5378e985415",
          "sha256": "3835710b457858cfcf446199d6804b92c7d8ed8c883a95c6330676115bc727e2"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "45f216dc2362a487e709c5378e985415",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 210917,
        "upload_time": "2020-01-08T12:27:26",
        "upload_time_iso_8601": "2020-01-08T12:27:26.646670Z",
        "url": "https://files.pythonhosted.org/packages/d8/0d/a221dd3ce6cf385ae6e7db05688885542ca266c5536e7fbc4d82c47d84c5/pyVHDLParser-0.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c5c9226d358b67f866bc761a9ca00cede0612c5ed1a7becde8df89ed70c214c",
          "md5": "cfdebaebb65eabc017ec2c2e483fbb90",
          "sha256": "6fe6e845b6f42a79d0be633d2de936516eb15d342d4c5d6c0ac266c367f6a72a"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cfdebaebb65eabc017ec2c2e483fbb90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 80982,
        "upload_time": "2020-01-08T12:27:28",
        "upload_time_iso_8601": "2020-01-08T12:27:28.483169Z",
        "url": "https://files.pythonhosted.org/packages/8c/5c/9226d358b67f866bc761a9ca00cede0612c5ed1a7becde8df89ed70c214c/pyVHDLParser-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2724b708192e29abc01d2a217efded5c5c058a30337843fb7084b0e7fc9a9727",
          "md5": "637e55f294622b54e8a8d196f9ecc065",
          "sha256": "be6b5e013be8ae0ddd36b2d2cb443705b82e14eb0036959f9ae1adc7dca14623"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "637e55f294622b54e8a8d196f9ecc065",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 233535,
        "upload_time": "2020-12-01T00:09:42",
        "upload_time_iso_8601": "2020-12-01T00:09:42.118608Z",
        "url": "https://files.pythonhosted.org/packages/27/24/b708192e29abc01d2a217efded5c5c058a30337843fb7084b0e7fc9a9727/pyVHDLParser-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccf8c79721ec950740fdbda728b10ff51ab867bdd6643bacdab9892a9803c4f7",
          "md5": "fdc9d1ad1e89532d4f07c8d405cc7e9f",
          "sha256": "e4f4bc1f3d7742cf517e4284bf0f6e514073f181dec9862d4e63e2679f278652"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fdc9d1ad1e89532d4f07c8d405cc7e9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 97640,
        "upload_time": "2020-12-01T00:09:43",
        "upload_time_iso_8601": "2020-12-01T00:09:43.201422Z",
        "url": "https://files.pythonhosted.org/packages/cc/f8/c79721ec950740fdbda728b10ff51ab867bdd6643bacdab9892a9803c4f7/pyVHDLParser-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c516aa74387ad5d448507a101ba71d319c304945c4caeb99ddffe9bc137fad36",
          "md5": "a2ee81f4f2eebdeb287479fde53d9822",
          "sha256": "403ea6ef538f6dd4942fe9295a1a317a9d61a4731040b64ea80028be863e3fd4"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.6.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2ee81f4f2eebdeb287479fde53d9822",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 247374,
        "upload_time": "2021-06-10T10:06:19",
        "upload_time_iso_8601": "2021-06-10T10:06:19.454017Z",
        "url": "https://files.pythonhosted.org/packages/c5/16/aa74387ad5d448507a101ba71d319c304945c4caeb99ddffe9bc137fad36/pyVHDLParser-0.6.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85b72c0968bba2b93fce3f7ec92fe3b6c2ca920a5c8045f5bcc7218cadfb7cb2",
          "md5": "57384df02fe86865665f3977bda3a328",
          "sha256": "0bd3eec399a612b24ed72248522c71b7e430127a3b4b77603348c7a001ee695e"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "57384df02fe86865665f3977bda3a328",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 110165,
        "upload_time": "2021-06-10T10:06:20",
        "upload_time_iso_8601": "2021-06-10T10:06:20.761112Z",
        "url": "https://files.pythonhosted.org/packages/85/b7/2c0968bba2b93fce3f7ec92fe3b6c2ca920a5c8045f5bcc7218cadfb7cb2/pyVHDLParser-0.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cf14153912370ab90fb6478b2c2f46262e4b223142d6c124e7f4668c9918fc3",
          "md5": "dcc7c171ffebd8849bf0ebdb54641acf",
          "sha256": "9d53be994cd88f5353e496cf87bd93daa95f159990dd30da025964202715858c"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.6.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dcc7c171ffebd8849bf0ebdb54641acf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 233238,
        "upload_time": "2021-12-22T15:52:48",
        "upload_time_iso_8601": "2021-12-22T15:52:48.346078Z",
        "url": "https://files.pythonhosted.org/packages/8c/f1/4153912370ab90fb6478b2c2f46262e4b223142d6c124e7f4668c9918fc3/pyVHDLParser-0.6.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "774b83ad4a7192d0db50e3a75ec53a89347d6f82b1f9d23eb158a6ba828d1e38",
          "md5": "6ec3442cbe8cd179ebe3408c122af579",
          "sha256": "1673cbb1798beba19b49043aaaa039d1ebfa46a10214dfbb63a1e034fcc86b1d"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.6.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6ec3442cbe8cd179ebe3408c122af579",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 98520,
        "upload_time": "2021-12-22T15:52:46",
        "upload_time_iso_8601": "2021-12-22T15:52:46.029322Z",
        "url": "https://files.pythonhosted.org/packages/77/4b/83ad4a7192d0db50e3a75ec53a89347d6f82b1f9d23eb158a6ba828d1e38/pyVHDLParser-0.6.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34f4771a4d2174bb23858c66ce41d679c6a89620bcbce07a6828d70f6514e999",
          "md5": "1df1c5b69d665057be1c80ca041e28bb",
          "sha256": "ee1842559c07328952b64e0dd72953646478523192f1e49c102174f489c7d2ff"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1df1c5b69d665057be1c80ca041e28bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 240549,
        "upload_time": "2023-02-19T22:33:54",
        "upload_time_iso_8601": "2023-02-19T22:33:54.798424Z",
        "url": "https://files.pythonhosted.org/packages/34/f4/771a4d2174bb23858c66ce41d679c6a89620bcbce07a6828d70f6514e999/pyVHDLParser-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52cdc2b3b6f160cbbe492b59b51a9a5ccba77a93f9a724527bffffd12132fa1a",
          "md5": "5011201c012aa3c2ca6d5c18c40d9513",
          "sha256": "1ac5e49e0890e60f4bdf6479fada01d50445ba9a48ede92bea4a2ce23ca31a87"
        },
        "downloads": -1,
        "filename": "pyVHDLParser-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5011201c012aa3c2ca6d5c18c40d9513",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 101514,
        "upload_time": "2023-02-19T22:33:52",
        "upload_time_iso_8601": "2023-02-19T22:33:52.354609Z",
        "url": "https://files.pythonhosted.org/packages/52/cd/c2b3b6f160cbbe492b59b51a9a5ccba77a93f9a724527bffffd12132fa1a/pyVHDLParser-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34f4771a4d2174bb23858c66ce41d679c6a89620bcbce07a6828d70f6514e999",
        "md5": "1df1c5b69d665057be1c80ca041e28bb",
        "sha256": "ee1842559c07328952b64e0dd72953646478523192f1e49c102174f489c7d2ff"
      },
      "downloads": -1,
      "filename": "pyVHDLParser-0.7.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1df1c5b69d665057be1c80ca041e28bb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 240549,
      "upload_time": "2023-02-19T22:33:54",
      "upload_time_iso_8601": "2023-02-19T22:33:54.798424Z",
      "url": "https://files.pythonhosted.org/packages/34/f4/771a4d2174bb23858c66ce41d679c6a89620bcbce07a6828d70f6514e999/pyVHDLParser-0.7.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "52cdc2b3b6f160cbbe492b59b51a9a5ccba77a93f9a724527bffffd12132fa1a",
        "md5": "5011201c012aa3c2ca6d5c18c40d9513",
        "sha256": "1ac5e49e0890e60f4bdf6479fada01d50445ba9a48ede92bea4a2ce23ca31a87"
      },
      "downloads": -1,
      "filename": "pyVHDLParser-0.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5011201c012aa3c2ca6d5c18c40d9513",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 101514,
      "upload_time": "2023-02-19T22:33:52",
      "upload_time_iso_8601": "2023-02-19T22:33:52.354609Z",
      "url": "https://files.pythonhosted.org/packages/52/cd/c2b3b6f160cbbe492b59b51a9a5ccba77a93f9a724527bffffd12132fa1a/pyVHDLParser-0.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}