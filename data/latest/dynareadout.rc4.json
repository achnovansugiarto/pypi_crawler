{
  "info": {
    "author": "",
    "author_email": "PucklaJ <jonaas.pucher000000@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: zlib/libpng License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: C",
      "Programming Language :: C++",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# dynareadout\n\nAn Ansi C library for parsing binary output files of LS Dyna (d3plot, binout) with bindings for python\n\n## Examples\n\n### Binout\n\n```python\nfrom dynareadout import Binout, BinoutType\n\nbin_file = None\ntry:\n  # This library also supports opening multiple binout files at once by globing them\n  bin_file = Binout(\"simulation/binout*\")\nexcept RuntimeError as e:\n  print(\"Failed to open binout: {}\".format(e))\n  exit(1)\n\n# Print the children of the binout\nchildren = bin_file.read(\"/\")\nfor (i, child) in enumerate(children):\n  print(\"Child {}: {}\".format(i, child))\n\n# Read some data. This read method can read variables with different types, but\n# there are also read methods for particular types\nnode_ids = bin_file.read(\"nodout/ids\")\nfor (i, nid) in enumerate(node_ids):\n  print(\"Node ID {}: {}\".format(i, nid))\n\n# You can also read this variable with the read method of the particular type\n# First find out what the type is\nnode_ids_type = bin_file.get_type_id(\"/nodout/metadata/ids\")\n\n# Then read the data using the special read method.\n# If you already know the exact type and path of a variable\n# these methods can be a bit more performant,\n# since the library does not need the get the type and path first.\nif node_ids_type == BinoutType.Int32:\n  node_ids = bin_file.read_int32(\"/nodout/metadata/ids\")\nelif node_ids_type == BinoutType.Int64:\n  node_ids = bin_file.read_int64(\"/nodout/metadata/ids\")\nelse:\n  print(\"The node ids are not 32-Bit or 64-Bit integers\")\n  exit(1)\n\nfor (i, nid) in enumerate(node_ids):\n  print(\"Node ID {}: {}\".format(i, nid))\n\n# If you want to read \"timed\" data (x_displacement, x_force, etc.) you can do so also with the read method\nx_displacement = bin_file.read(\"nodout/x_displacement\")\nfor (t, time_step) in enumerate(x_displacement):\n  for (n, x_disp) in enumerate(time_step):\n    print(\"X Displacement time_step={}, node_id={}: {}\".format(t, node_ids[n], x_displacement[t][n]))\n```\n\n### D3plot\n\n```python\nfrom dynareadout import D3plot\n\nplot_file = None\ntry:\n  # Just give it the first d3plot file and it opens all of them\n  plot_file = D3plot(\"simulation/d3plot\")\nexcept e as RuntimeError:\n  print(\"Failed to open: {}\".format(e))\n  exit(1)\n\n# Read the title\ntitle = plot_file.read_title()\nprint(\"Title: {}\".format(title))\n\n# Read node ids\nnode_ids = plot_file.read_node_ids()\nprint(\"Nodes: {}\".format(len(node_ids)))\nfor (i, nid) in enumerate(node_ids):\n  print(\"Node {}: {}\".format(i, nid))\n\n# Read node coordinates of time step 10\nnode_coords = plot_file.read_node_coordinates(10)\nfor i in range(len(node_coords)):\n  print(\"Node Coords {}: ({:.2f}, {:.2f}, {:.2f})\".format(i, node_coords[i][0], node_coords[i][1], node_coords[i][2]))\n```\n\n### KeyFile\n\n```python\nfrom dynareadout import key_file_parse\n\nkeywords = key_file_parse(\"simulation/input.k\")\n\n# Parse all nodes\nnode_keywords = keywords[\"NODE\"]\n\nfor i in range(len(node_keywords)):\n  for j in range(len(node_keywords[i])):\n    node = node_keywords[i][j]\n    node_data = node.parse_whole([8, 16, 16, 16])\n    nid = node_data[0]\n    x = node_data[1]\n    y = node_data[2]\n    z = node_data[3]\n\n    print(f\"NODE {nid:d}: ({x:.3f}; {y:.3f}; {z:.3f})\")\n```\n\n## Other languages\n\nThis library is also available for C and C++ this version can be found [here](https://github.com/PucklaJ/dynareadout).\n\n## Installation\n\n```console\npython -m pip install dynareadout\n```\n\n## Uploading to PyPI\n\n1. Make sure that the dynareadout submodule has the correct version\n\n2. Update the version in `setup.py` and `pyproject.toml`. Also check if new source files have been added\n\n3. Publish a new release\n\n4. Create source distribution\n\n```console\npython setup.py sdist\n```\n5. Upload to `test.pypi.org`\n\n```console\npython -m twine upload --repository testpypi dist/*\n```\n\nThen insert `__token__` as username and the token as password.\n\n6. Install package from `test.pypi.org` to test it\n\n```console\npython -m pip install --upgrade --no-build-isolation --index-url https://test.pypi.org/simple/ dynareadout\n```\n\n7. If it works upload it to `pypi.org`\n\n8. Create windows wheel\n\n```console\npython -m build\n```\n\n9. Upload windows wheel to `test.pypi.org` and test it.\n\n10. If it works upload it to `pypi.org`\n\n```console\npython -m twine upload dist/*\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dynareadout",
    "package_url": "https://pypi.org/project/dynareadout/",
    "platform": null,
    "project_url": "https://pypi.org/project/dynareadout/",
    "project_urls": {
      "Bug Trackers": "https://github.com/PucklaJ/dynareadout/issues",
      "Homepage": "https://github.com/PucklaJ/dynareadout"
    },
    "release_url": "https://pypi.org/project/dynareadout/23.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Ansi C library for parsing binary output files of LS Dyna (d3plot, binout) with bindings for python",
    "version": "23.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17142259,
  "releases": {
    "22.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14ec9273965d97ef3b669c50d551050f92ed5d7aba7e1910edc5cbe957093e00",
          "md5": "4f9e779d59d1525eae31224de1cfdd8a",
          "sha256": "3e2c7a3dbcbf35859d8e62e17668c4268f3adf91c164843379db52b4c562de38"
        },
        "downloads": -1,
        "filename": "dynareadout-22.12.tar.gz",
        "has_sig": false,
        "md5_digest": "4f9e779d59d1525eae31224de1cfdd8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 210912,
        "upload_time": "2022-12-19T13:01:40",
        "upload_time_iso_8601": "2022-12-19T13:01:40.126596Z",
        "url": "https://files.pythonhosted.org/packages/14/ec/9273965d97ef3b669c50d551050f92ed5d7aba7e1910edc5cbe957093e00/dynareadout-22.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "23.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e334a4164fb65c99a2010400df48d64110c7175b67e1ed34bc743d3756e39212",
          "md5": "59c3a8133f6c2656f78e5f99923f41fa",
          "sha256": "b0f57934c9e6419053be9c74f63a84f9d3d692156a6157f94d8fbfda88226273"
        },
        "downloads": -1,
        "filename": "dynareadout-23.1-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "59c3a8133f6c2656f78e5f99923f41fa",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.6",
        "size": 410261,
        "upload_time": "2023-01-27T11:26:12",
        "upload_time_iso_8601": "2023-01-27T11:26:12.589773Z",
        "url": "https://files.pythonhosted.org/packages/e3/34/a4164fb65c99a2010400df48d64110c7175b67e1ed34bc743d3756e39212/dynareadout-23.1-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0865f2babe16166247edbf2a05a2901322a6f43b6aa0fd3e394395d747c649d",
          "md5": "a2ab0c2d6a0ba78043a8a75ac2bf5cac",
          "sha256": "ffc75a47065d95a1414e40ed34f9ce4a3e2c4592d7e3297aec6b89f3ea055f9d"
        },
        "downloads": -1,
        "filename": "dynareadout-23.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a2ab0c2d6a0ba78043a8a75ac2bf5cac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 216640,
        "upload_time": "2023-01-27T10:59:37",
        "upload_time_iso_8601": "2023-01-27T10:59:37.200003Z",
        "url": "https://files.pythonhosted.org/packages/d0/86/5f2babe16166247edbf2a05a2901322a6f43b6aa0fd3e394395d747c649d/dynareadout-23.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "23.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f1c564c7671d6966c31a44b7031995d862d573c0d485a058743311285e3396d",
          "md5": "79b7d0faf2766e0aaf7dda4d1a6dfe89",
          "sha256": "74f422e69c52a298af6b8a3b30d0e1ca2e558daa381754f399ff4b16716fb4ec"
        },
        "downloads": -1,
        "filename": "dynareadout-23.1.1-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "79b7d0faf2766e0aaf7dda4d1a6dfe89",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.6",
        "size": 175001,
        "upload_time": "2023-02-10T08:52:42",
        "upload_time_iso_8601": "2023-02-10T08:52:42.599740Z",
        "url": "https://files.pythonhosted.org/packages/2f/1c/564c7671d6966c31a44b7031995d862d573c0d485a058743311285e3396d/dynareadout-23.1.1-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32d86edbed2bd79ea7d8df9bcfac022c692b42852a2950e18c48baec3af567c2",
          "md5": "4e885699e80a5cdd7e279158b8988397",
          "sha256": "693fd26bd26cbf6ca6906d1e9a8efd387c657e67e8953109dfd5c6225849cb47"
        },
        "downloads": -1,
        "filename": "dynareadout-23.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4e885699e80a5cdd7e279158b8988397",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 218305,
        "upload_time": "2023-02-10T08:45:00",
        "upload_time_iso_8601": "2023-02-10T08:45:00.525323Z",
        "url": "https://files.pythonhosted.org/packages/32/d8/6edbed2bd79ea7d8df9bcfac022c692b42852a2950e18c48baec3af567c2/dynareadout-23.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "23.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98556032f4c0fc245ae4b6e65b56481fe7373017ff7cf514f5e888048085553b",
          "md5": "b0cb6eb7a81969dac75320b8eb296921",
          "sha256": "b3287d40857151637df23b3ced6dc139de2230ae30f29bdfbb53bb52502d9202"
        },
        "downloads": -1,
        "filename": "dynareadout-23.2-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "b0cb6eb7a81969dac75320b8eb296921",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.6",
        "size": 195659,
        "upload_time": "2023-03-03T10:11:21",
        "upload_time_iso_8601": "2023-03-03T10:11:21.857597Z",
        "url": "https://files.pythonhosted.org/packages/98/55/6032f4c0fc245ae4b6e65b56481fe7373017ff7cf514f5e888048085553b/dynareadout-23.2-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "225c7bb267cd36c6c6c1be2a0aa1c2bfccbcadb19c9578478c1976c46edc4e16",
          "md5": "6036b8665652413182cc27598d6f76fc",
          "sha256": "a85fb079de46f0e27dfcbe9f70d2dfd645758f5b839e801daa97ee1681464f81"
        },
        "downloads": -1,
        "filename": "dynareadout-23.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6036b8665652413182cc27598d6f76fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 233763,
        "upload_time": "2023-03-03T10:08:26",
        "upload_time_iso_8601": "2023-03-03T10:08:26.855689Z",
        "url": "https://files.pythonhosted.org/packages/22/5c/7bb267cd36c6c6c1be2a0aa1c2bfccbcadb19c9578478c1976c46edc4e16/dynareadout-23.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "98556032f4c0fc245ae4b6e65b56481fe7373017ff7cf514f5e888048085553b",
        "md5": "b0cb6eb7a81969dac75320b8eb296921",
        "sha256": "b3287d40857151637df23b3ced6dc139de2230ae30f29bdfbb53bb52502d9202"
      },
      "downloads": -1,
      "filename": "dynareadout-23.2-cp310-cp310-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "b0cb6eb7a81969dac75320b8eb296921",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.6",
      "size": 195659,
      "upload_time": "2023-03-03T10:11:21",
      "upload_time_iso_8601": "2023-03-03T10:11:21.857597Z",
      "url": "https://files.pythonhosted.org/packages/98/55/6032f4c0fc245ae4b6e65b56481fe7373017ff7cf514f5e888048085553b/dynareadout-23.2-cp310-cp310-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "225c7bb267cd36c6c6c1be2a0aa1c2bfccbcadb19c9578478c1976c46edc4e16",
        "md5": "6036b8665652413182cc27598d6f76fc",
        "sha256": "a85fb079de46f0e27dfcbe9f70d2dfd645758f5b839e801daa97ee1681464f81"
      },
      "downloads": -1,
      "filename": "dynareadout-23.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6036b8665652413182cc27598d6f76fc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 233763,
      "upload_time": "2023-03-03T10:08:26",
      "upload_time_iso_8601": "2023-03-03T10:08:26.855689Z",
      "url": "https://files.pythonhosted.org/packages/22/5c/7bb267cd36c6c6c1be2a0aa1c2bfccbcadb19c9578478c1976c46edc4e16/dynareadout-23.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}