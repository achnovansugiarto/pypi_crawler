{
  "info": {
    "author": "Austin Cory Bart",
    "author_email": "acbart@udel.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Education",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Education",
      "Topic :: Text Processing :: Markup",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "# waltz\n\nA software system for synchronizing curricular materials between a\nLearning Management Systems (LMS) and your local filesystem.\n\nMajor features include:\n* Pull and push data between an LMS and the file system\n* Lightweight, friendly Markdown-based format for local resources\n* Diffing of local and remote content\n* List and search for remote resources\n\nWe aim to support the following LMSes:\n* Canvas (pages, assignments, quizzes)\n* BlockPy (assignment, groups) <- In-progress\n\n# Installation\n\nYou can install Waltz from PyPi (the package name is `lms-waltz` even though the module and command line script is `waltz`):\n\n```console\nfoo@bar:~$ pip install lms-waltz\n```\n\nYou can also install our dev version from GitHub:\n\n```console\nfoo@bar:~$ pip install git+https://github.com/acbart/waltz.git\n```\n\n## Setup Waltz\n\nWaltz can synchronize content between a local directory and a remote server.\nYou'll need to initialize the local directory, whether it is empty or already has your learning materials.\n\n```console\nfoo@bar:~$ waltz init\n```\n\nThis will create two new files which should both be included in your `.gitignore`:\n\n* `.waltz` is a plain-text YAML file with settings for the current course repository.\n* `.waltz.db` is a SQLite database used in file uploading/downloading.\n\n## Setup a Service\n\nBefore you can start interacting with an LMS, you'll need to configure an\ninstance of a service. For example, to configure a new Canvas service, you'll need the following:\n\n1. A short, easy-to-type name for the service instance (e.g., `ud_canvas` or `cs1014_canvas`)\n2. [API token](https://community.canvaslms.com/docs/DOC-10806-4214724194)\n3. The URL base for your Canvas site (e.g., `https://canvas.instructure.com/`)\n4. The Course ID that you want to connect to (usually a large number)\n\nThen, you can use the command below:\n\n```console\nfoo@bar:~$ waltz configure canvas <name> --base <url> --course <id> --token <token>\n```\n\nA more concrete example:\n\n```console\nfoo@bar:~$ waltz configure canvas ud_canvas --base https://udel.instructure.com/ --course 4234343432343 --token 1081~zJIOJSDFBBSDFIJAIJ==>...\n```\n\nIf things went well, you can list the available services:\n\n```console\nfoo@bar:~$ waltz list\nThe following services are available:\n         local:\n                 ./\n         canvas:\n                 ud_canvas\n         blockpy: (none configured)\n```\n\nBy default, there's a Local service for the current directory (representing the connection to the filesystem).\nYou can have more than one instance of a service, which can allow you to\naccess multiple data sources from one course (e.g., to transfer resources between semesters).\nFor convenience, you can refer to the first instance of a service by the service's name.\nIn our case, anywhere that we use `ud_canvas` we could use `canvas` instead.\n\n## Identifying Resources\n\nYou can list available resources for a service:\n\n```console\nfoo@bar:~$ waltz list <service> <category>\n```\n\nSo the following code checks the Pages for the Canvas course. Note that\nyou could use the specific instance name instead of `canvas`, and either\nthe singular or plural form of `pages`.\n\n```console\nfoo@bar:~$ waltz list canvas pages\nRemote    Local    Title                      Path\n--------  -------  -------------------------  --------------------\nYes       Yes      Abstraction                pages\\Abstraction.md\nYes       Yes      NetLogo-2                  NetLogo-2.md\nYes       No       Overview of Functions\nYes       No       Syllabus\nYes       No       Themes\nYes       Yes      Turtles                    pages\\Turtles.md\n```\n\nThe `local` service allows you to omit the category (but you can filter by category if you want):\n\n```console\nfoo@bar:~$ waltz list local\n\nResource         Title                        Path\n---------------  ---------------------------  ---------------------------------------------------------\n[unknown]        NetLogo-2                    NetLogo-2.md\n[unknown]                                     pages\\Abstraction.md\n[Page]           Turtles                      pages\\Turtles.md\n[quiz]           Backup Quiz                  quizzes\\Backup Quiz.md\n[unknown]                                     quizzes\\Mangled Resource.md\n[quiz]           New Quiz                     quizzes\\New Quiz.md\n[assignment]     Video Upload Test            quizzes\\Video Upload Test.md\n[quiz question]  Complex Matching Question    quizzes\\New Quiz Questions\\Complex Matching Question.md\n[quiz question]  Essay Question               quizzes\\New Quiz Questions\\Essay Question.md\n```\n\nThe local service only knows the resource category and title if that information\nis available in the front-matter of the Markdown file. Otherwise, it can\nonly report the path of potential resource files.\n\nSimilar to Git, you can use `waltz` commands from child folders and the\nsystem will search up for the configuration and use it appropriately.\n\n## Managing Resources\n\nThe two basic commands for moving resources are `pull` and `push`, moving resources between\nthe local service and a remote one. If the local version does not already exist,\nit will be created in the current directory with a filename based on the title of\nthe resource from the LMS.\n\n```console\nfoo@bar:~$ waltz pull <service> <category> <title>\nfoo@bar:~$ waltz push <service> <category> <title>\n```\n\nGenerally, you want to fully specify the remote service, resource category,\nand title of the resource you want to use. This avoids ambiguity.\n\n```\nfoo@bar:~$ waltz pull canvas assignment \"Project 3\"\nfoo@bar:~$ ls\nProject 3.md\nfoo@bar:~$ waltz push canvas assignment \"Project 3\"\n```\n\nHowever, the commands attempt to work intelligently to find the appropriate file given minimal amounts\nof information, particularly for pushing. If the given title matches the title of a file\nin the current directory (either based on the filename or the front-matter of the file),\nand that file has a resource specified, then the appropriate service can automatically be inferred.\n\n```console\nfoo@bar:~$ waltz push \"Turtles\"\n```\n\nIf the desired files are not in the present folder, it will search subfolders.\n\nTOOD: We are working on ways to further disambiguate resources that have\nthe same name. This will be accomplished using their IDs or some other attribute.\nIn general, however, you can avoid ambiguity by organizing the file system\nand your LMS resources appropriately.\n\n## Diffing Resources\n\nPushing and pulling resources can get quite complex, so it can be\nhelpful to find out how the local version of a resource is different\nfrom the remote. The `diff` command has similar syntax to the other\nactions, but does not modify the filesystem when it is run.\n\n```console\nfoo@bar:~$ waltz diff canvas page \"Turtles\"\n```\n\n![Screenshot showing web-based output of the Waltz Diff command, with the local version of a file on the left and the remote version on the right. Changes are highlighted using red, green, and yellow highlighting.](docs/example-diff-1.png)\n\nBy default, `diff`ing will create a new HTML file adjacent to the\nresource and automatically open that file in the browser. There is also\nsimplified console output available.\n\n## Download, Decode, Encode, and Upload\n\n`Pull`ing is actually a two-step process: first you `download` a resource, and then you `decode` it.\nSimilarly, `Push`ing requires you to `encode` a resource and then `upload` it.\n\nThe `upload` and `download` commands (which are available in Waltz) move data between Canvas and the\nlocal Waltz SQLite database. Generally, we download raw data from the remote service (e.g., a JSON blob)\nand upload using whatever API is available for the service.\n\nThe `encode` and `decode` commands (also available) move data between the local filesystem and the\nlocal Waltz SQLite database. Generally, this means we are decoding the raw data into a Markdown file\nor potentially even multiple files.\n\n## Templates\n\n**TODO: This feature is still in progress**\n\nThe HTML body of a Resource can be built using a Template. We use the\nJinja2 format to embed data.\n\n## Previewing Resources\n\n**TODO: This feature is still in progress**\n\nIf you want to generate a web-friendly local version of a resource, you\ncan use the `preview` command.\n\n## Building Public Versions\n\n**TODO: This feature is still in progress**\n\nFrequently, you want to create public versions of assignments that are\nviewable by folks who are not authorized to see the answers or other\ncomponents of a resource. We distinguish between *public* (viewable by\nanyone), *private* (viewable by other teachers), and *secret* (viewable\nonly by local course staff).\n\nYou can use the `--hide_answers` flag to remove answers and other\nprivate information from a resource, generating a new file in a parallel\nrepository.\n\nSecret information usually includes data covered by FERPA, such as\nstudents' grades or assignment submissions. Secret information is harder\nto secure in a VCS, but can be done through encryption. In general,\nhowever, data that is meant to be secret should be kept in a different\nrepository. If you want it alongside the data, though, perhaps we could\nencrypt/decrypt the file, suspending git commands until all relevant\nfiles are re-encrypted?\n\n# Terminology\n\n* Resource: A curricular material to be transferred around. Resources can be represented in different styles. Some resources can be composed of other resources.\n* Category: Resources of the same type. The \"Pages\" category is distinct from the \"Assignment\" category. Categories do not belong to a particular Service, meaning their names must be meaningfully distinct if they are different kinds of things.\n* Title: A name that, idealistically, is globally unique within a resource.\n* Markdown: A plain-text format that we use to store files locally. Meant to be easily edited. Can have Front-matter.\n* Front-matter: At the top of Markdown files, you can put \"---\" above and below YAML-encoded data to store extra data. We particularly look for a `waltz` attribute with additional Waltz information.\n\n# Service Specific Information\n\nThis section details information specific to individual services.\n\n## Local\n\nWaltz is not opinionated about file system organization. You are free to\narrange your data into directories as you see fit. By default, new files\nare stored in the current working directory. However, existing files\nwill be matched as best they can.\n\nLargely, Waltz encourages resources to decode themselves as Markdown\nfiles. In particular, Markdown files with front-matter can be parsed and\nhave special Waltz-specific information. The only requirement is to have\nan attribute named `waltz`. We also strongly encourage a `title` and\n`resource` attribute within.\n\n```markdown\n---\nwaltz:\n  title: The Resource's Full Proper Name\n  resource: Page\n---\nThe body of the file\n```\n\nAdditional attributes can be stored in the Markdown, and services\nattempt to leave them unmangled when downloading updated versions.\n\n## Canvas\n\nInstructure's Canvas has a rich API that allows us to control resources\nrelatively well.\n\nCode in Markdown files will be syntax-highlighted.\n\nUploading data into Canvas is somewhat limited. To get around the\nlimitations, we store additional front-matter as HTML content hidden\ninside of an invisible DIV tag at the start of the resource's body. If\nthat information is deleted on the server, however, there isn't much to\nbe done to reclaim it. Be careful when deleting large swathes of data if\nyou are relying on this feature! Also note that we do not currently\nencode any extra `waltz` front-matter, so you should be sure not to rely\non extra data stored in that attribute.\n\nYou can use the `--all` switch to bulk download resources.\n\nYou can use the `--destination <path>` parameter to set the location\nwhere files will be decoded to.\n\n### Canvas Pages\n\nA Canvas Page is decoded into a Markdown file with very minimal\nfront-matter.\n\n### Canvas Assignments\n\nA Canvas Page is decoded into a Markdown file with very minimal\nfront-matter.\n\n### Canvas Quizzes\n\nBy default, quizzes are pulled as multiple files. The core file will\nhold the quiz itself, with the questions stored as a list of their\nnames. Those questions' content will be then be stored as separate files\nin an adjacent folder named `\"<Quiz Title> Questions/\"`. All question\ntypes are supported.\n\nGroups are also supported, and will be represented inside of the core\nMarkdown file alongside other questions. However, due to a limitation of\nthe Canvas API, we are not able to keep the order of grouped questions -\nfurther, we cannot guarantee that question groups will be properly\ndisposed of. When using quizzes, keep an eye on the Canvas side to make\nsure that the content is appropriately transferred.\n\nA Canvas Quiz can be pulled as a combined single file.\n\n```console\nfoo@bar:~$ waltz pull canvas quiz \"My Quiz\" --combine \n```\n\nYou can specify a question bank to reuse questions between quizzes.\n\n### Canvas Files\n\n**TODO: This feature is still in progress**\n\nYou can have either a folder dedicated to being a file system, or\nidentify an individual file with an adjacent Markdown file.\n\n### Linking Resources\n\n**TODO: This feature is still in progress**\n\nWe attempt to decode URLs to images, files, and other resources as\nintelligently as possible so that they make sense locally and remotely.\n\n# Full Command List\n\n```console\nfoo@bar:~$ waltz reset\nfoo@bar:~$ waltz init\nfoo@bar:~$ waltz configure <service> <name>\nfoo@bar:~$ waltz list <service> <category>\nfoo@bar:~$ waltz pull <service> <category> <title>\nfoo@bar:~$ waltz push <service> <category> <title>\nfoo@bar:~$ waltz download <service> <category> <title>\nfoo@bar:~$ waltz upload <service> <category> <title>\nfoo@bar:~$ waltz encode <service> <category> <title>\nfoo@bar:~$ waltz decode <service> <category> <title>\nfoo@bar:~$ waltz diff <service> <category> <title>\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/acbart/waltz",
    "keywords": "lms learning management system curriculum curricular resources",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lms-waltz",
    "package_url": "https://pypi.org/project/lms-waltz/",
    "platform": null,
    "project_url": "https://pypi.org/project/lms-waltz/",
    "project_urls": {
      "Homepage": "https://github.com/acbart/waltz"
    },
    "release_url": "https://pypi.org/project/lms-waltz/0.2.7/",
    "requires_dist": [
      "tqdm",
      "requests",
      "ruamel.yaml",
      "jinja2",
      "markdown (<3.2)",
      "python-frontmatter",
      "requests-cache",
      "python-dateutil",
      "html2text",
      "canvasapi",
      "tabulate",
      "natsort",
      "pygments",
      "beautifulsoup4",
      "pyfakefs ; extra == 'dev'",
      "wheel ; extra == 'dev'",
      "twine ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "Coordinate resources between an LMS like Canvas and a local directory",
    "version": "0.2.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16280603,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "947b1e1ecee56c24d9afe98a3fa71703974c2b0939742c5ae156898e47d0d56b",
          "md5": "e97da0508a93e8a6aba61d84de11f1ab",
          "sha256": "0aab36d3bd7c39b682ac9d2e854b59af04206d17f5ae241b51fd56c919c75624"
        },
        "downloads": -1,
        "filename": "lms_waltz-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e97da0508a93e8a6aba61d84de11f1ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 68333,
        "upload_time": "2020-01-09T16:58:06",
        "upload_time_iso_8601": "2020-01-09T16:58:06.796072Z",
        "url": "https://files.pythonhosted.org/packages/94/7b/1e1ecee56c24d9afe98a3fa71703974c2b0939742c5ae156898e47d0d56b/lms_waltz-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98e1a07dfe1c77a9085b3fbec8b5079a24c09a4af632099b6781117acb1939e6",
          "md5": "a2af86546680735fdeb0b380491d1087",
          "sha256": "a6e7a4bd51fe801f7532b1fe8e2972393f4ad7441743b7e2349332b78b7a5eb0"
        },
        "downloads": -1,
        "filename": "lms-waltz-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a2af86546680735fdeb0b380491d1087",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 41911,
        "upload_time": "2020-01-09T16:58:09",
        "upload_time_iso_8601": "2020-01-09T16:58:09.561544Z",
        "url": "https://files.pythonhosted.org/packages/98/e1/a07dfe1c77a9085b3fbec8b5079a24c09a4af632099b6781117acb1939e6/lms-waltz-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49141cd98580667824f20083bee72ec78cd6e254fe478ba560afb0d9ffc4491e",
          "md5": "7137c5eb0d3dfad9ded895a77d8416d7",
          "sha256": "0c758920a1c7b89474e3fba381b81472951f4b0fc24dc93a904860dc807177cc"
        },
        "downloads": -1,
        "filename": "lms_waltz-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7137c5eb0d3dfad9ded895a77d8416d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 73680,
        "upload_time": "2020-01-24T04:31:07",
        "upload_time_iso_8601": "2020-01-24T04:31:07.520979Z",
        "url": "https://files.pythonhosted.org/packages/49/14/1cd98580667824f20083bee72ec78cd6e254fe478ba560afb0d9ffc4491e/lms_waltz-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9f06daf87e2880c326ad260787af04282273e073886d88f9835cff4528619c8",
          "md5": "c0ce56d8ef1890faeeaa0f51ed669743",
          "sha256": "8a34f161f9c84c2110282be22f2e16357b8b2edd84194d5afc727f5856fd0566"
        },
        "downloads": -1,
        "filename": "lms-waltz-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c0ce56d8ef1890faeeaa0f51ed669743",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 44970,
        "upload_time": "2020-01-24T04:31:09",
        "upload_time_iso_8601": "2020-01-24T04:31:09.390590Z",
        "url": "https://files.pythonhosted.org/packages/d9/f0/6daf87e2880c326ad260787af04282273e073886d88f9835cff4528619c8/lms-waltz-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "190fdb11a4aae0459cee78d4f3b6599eba1568154728799a030c4db669ed2c34",
          "md5": "2497c27af70afbbe7f4ccb8b3fe40382",
          "sha256": "1274fec9826455e62dff0ea2938bf3d7ec37638c1c1858b0d243ce731fc976e4"
        },
        "downloads": -1,
        "filename": "lms_waltz-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2497c27af70afbbe7f4ccb8b3fe40382",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 73828,
        "upload_time": "2020-01-30T14:23:09",
        "upload_time_iso_8601": "2020-01-30T14:23:09.433836Z",
        "url": "https://files.pythonhosted.org/packages/19/0f/db11a4aae0459cee78d4f3b6599eba1568154728799a030c4db669ed2c34/lms_waltz-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "733aacc330dc2ed5bb002352b80b79623de497a25e82f284bfbf118a727f5fba",
          "md5": "34a41f5ffadec47847602415b4ee8e4f",
          "sha256": "4dcfd52b7500ce41b5a2e81f0f7d96e9cb211302782b149f07cbc61a41517275"
        },
        "downloads": -1,
        "filename": "lms-waltz-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "34a41f5ffadec47847602415b4ee8e4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 45041,
        "upload_time": "2020-01-30T14:23:10",
        "upload_time_iso_8601": "2020-01-30T14:23:10.750780Z",
        "url": "https://files.pythonhosted.org/packages/73/3a/acc330dc2ed5bb002352b80b79623de497a25e82f284bfbf118a727f5fba/lms-waltz-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a707e08cfcba9b1743cb4f296f2de74cd3591347e2eeaeb473b11ed8eee8aaed",
          "md5": "8bdcb878ac2a452aa31b3b03647cb544",
          "sha256": "94c5f955e59d82e41b4d404d8ad5c1ed14972945345182f1bf5f3c68fdfbc7cf"
        },
        "downloads": -1,
        "filename": "lms_waltz-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8bdcb878ac2a452aa31b3b03647cb544",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 78666,
        "upload_time": "2020-09-06T16:28:49",
        "upload_time_iso_8601": "2020-09-06T16:28:49.623073Z",
        "url": "https://files.pythonhosted.org/packages/a7/07/e08cfcba9b1743cb4f296f2de74cd3591347e2eeaeb473b11ed8eee8aaed/lms_waltz-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "421c1499066fc90c53d96e7d9d360b8a160ddb8f0d9c8db9cfed772feb7d743b",
          "md5": "a2963fbfcbd75c181c6920655ea983dc",
          "sha256": "9f2d72c17086257f77720f3a559d22b0b1b6100af9b12388c33b38a75d275a51"
        },
        "downloads": -1,
        "filename": "lms-waltz-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a2963fbfcbd75c181c6920655ea983dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 50444,
        "upload_time": "2020-09-06T16:28:51",
        "upload_time_iso_8601": "2020-09-06T16:28:51.110786Z",
        "url": "https://files.pythonhosted.org/packages/42/1c/1499066fc90c53d96e7d9d360b8a160ddb8f0d9c8db9cfed772feb7d743b/lms-waltz-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ef342eca0370fd35cdd1bad306356a2f382f1b6ad5dd9b7ac8d02dad2d39ec0",
          "md5": "11fd95f89566f41c7d64af8f3f83f3fb",
          "sha256": "3e8cd50a33fabeac82eca2cc5cdd100647f28afd4847b5615554bc8aaa0de8fd"
        },
        "downloads": -1,
        "filename": "lms_waltz-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11fd95f89566f41c7d64af8f3f83f3fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 81603,
        "upload_time": "2021-02-01T20:25:44",
        "upload_time_iso_8601": "2021-02-01T20:25:44.977356Z",
        "url": "https://files.pythonhosted.org/packages/3e/f3/42eca0370fd35cdd1bad306356a2f382f1b6ad5dd9b7ac8d02dad2d39ec0/lms_waltz-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49eaa154317d44319fbac22dac618cb59a304e43a290cff68a1154d9728dd68e",
          "md5": "68c3cb1e05ea305e50d96a21c11b5790",
          "sha256": "4617ceeff55f2369fbcd5b2d708a48b992a38e7d5677869ec5cf9a803907643a"
        },
        "downloads": -1,
        "filename": "lms-waltz-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "68c3cb1e05ea305e50d96a21c11b5790",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 52244,
        "upload_time": "2021-02-01T20:25:46",
        "upload_time_iso_8601": "2021-02-01T20:25:46.299133Z",
        "url": "https://files.pythonhosted.org/packages/49/ea/a154317d44319fbac22dac618cb59a304e43a290cff68a1154d9728dd68e/lms-waltz-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27d9709ddf1904adf749956aa81c902bb9ae297f19e7aae70ba3275e59aea023",
          "md5": "20720eb0b2e9745015c76e278f20137d",
          "sha256": "f68c402467cebc76d445d286908c85091d0cdcd45861cec18ad698b5e46603ee"
        },
        "downloads": -1,
        "filename": "lms_waltz-0.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "20720eb0b2e9745015c76e278f20137d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 91550,
        "upload_time": "2021-02-04T23:15:46",
        "upload_time_iso_8601": "2021-02-04T23:15:46.614688Z",
        "url": "https://files.pythonhosted.org/packages/27/d9/709ddf1904adf749956aa81c902bb9ae297f19e7aae70ba3275e59aea023/lms_waltz-0.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "521047f1efde64c46ea0992f0cc3240757ce35f4c54e6b6c83851806180167e4",
          "md5": "edde65b0d8eb8e1b4dd4fe482c3ad86d",
          "sha256": "c5a8877ed21b9470f0d3f1989289aacbdbe8ae37a45476cbdba86ba3b4e88d8a"
        },
        "downloads": -1,
        "filename": "lms-waltz-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "edde65b0d8eb8e1b4dd4fe482c3ad86d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 58907,
        "upload_time": "2021-02-04T23:15:47",
        "upload_time_iso_8601": "2021-02-04T23:15:47.794702Z",
        "url": "https://files.pythonhosted.org/packages/52/10/47f1efde64c46ea0992f0cc3240757ce35f4c54e6b6c83851806180167e4/lms-waltz-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "faf12eb856e60a2adec7420279d1831e2954f3fa8938b91fa0fdfeab7b4de095",
          "md5": "08f99e59c246a0aae950ffa8640889fd",
          "sha256": "6058a747cfe7b0e6d28e8bcdd6d21e856415899ebaeb321b4cdec0867a4f3991"
        },
        "downloads": -1,
        "filename": "lms_waltz-0.2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08f99e59c246a0aae950ffa8640889fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 101741,
        "upload_time": "2023-01-02T16:44:44",
        "upload_time_iso_8601": "2023-01-02T16:44:44.471479Z",
        "url": "https://files.pythonhosted.org/packages/fa/f1/2eb856e60a2adec7420279d1831e2954f3fa8938b91fa0fdfeab7b4de095/lms_waltz-0.2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af8ce1de687865d68d3edc4fad594c2496802ab5a04f33f2f25b5154a73fcec0",
          "md5": "d221bdf3d14a5eb53f8352730a39fe90",
          "sha256": "ef9c556669ba065daf60204472d47ab8a403b126060be78af97221a09c6f687b"
        },
        "downloads": -1,
        "filename": "lms-waltz-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d221bdf3d14a5eb53f8352730a39fe90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 73177,
        "upload_time": "2023-01-02T16:44:46",
        "upload_time_iso_8601": "2023-01-02T16:44:46.316676Z",
        "url": "https://files.pythonhosted.org/packages/af/8c/e1de687865d68d3edc4fad594c2496802ab5a04f33f2f25b5154a73fcec0/lms-waltz-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afa0661d6f3f394a42f9bfe89430cfd54ebe6a272895388c52f127cc41a039b2",
          "md5": "f0634358221b9db2bdab32a5b37d77a0",
          "sha256": "c499792cbf47e7bcc504fd64ae38e10c13468aaa81afedda002c551035229d0c"
        },
        "downloads": -1,
        "filename": "lms_waltz-0.2.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0634358221b9db2bdab32a5b37d77a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 101683,
        "upload_time": "2023-01-02T16:55:58",
        "upload_time_iso_8601": "2023-01-02T16:55:58.057405Z",
        "url": "https://files.pythonhosted.org/packages/af/a0/661d6f3f394a42f9bfe89430cfd54ebe6a272895388c52f127cc41a039b2/lms_waltz-0.2.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebefc6db818b6a18b104517ace0ae2fb7a51a0790514f94e66841305cc041b33",
          "md5": "9b5171841acf43435069d69d16540a6c",
          "sha256": "6286af81e0417487799b972af9b770f94a2e51dc80944e4673208070cad13c28"
        },
        "downloads": -1,
        "filename": "lms-waltz-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "9b5171841acf43435069d69d16540a6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 73161,
        "upload_time": "2023-01-02T16:55:59",
        "upload_time_iso_8601": "2023-01-02T16:55:59.703825Z",
        "url": "https://files.pythonhosted.org/packages/eb/ef/c6db818b6a18b104517ace0ae2fb7a51a0790514f94e66841305cc041b33/lms-waltz-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "afa0661d6f3f394a42f9bfe89430cfd54ebe6a272895388c52f127cc41a039b2",
        "md5": "f0634358221b9db2bdab32a5b37d77a0",
        "sha256": "c499792cbf47e7bcc504fd64ae38e10c13468aaa81afedda002c551035229d0c"
      },
      "downloads": -1,
      "filename": "lms_waltz-0.2.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f0634358221b9db2bdab32a5b37d77a0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 101683,
      "upload_time": "2023-01-02T16:55:58",
      "upload_time_iso_8601": "2023-01-02T16:55:58.057405Z",
      "url": "https://files.pythonhosted.org/packages/af/a0/661d6f3f394a42f9bfe89430cfd54ebe6a272895388c52f127cc41a039b2/lms_waltz-0.2.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ebefc6db818b6a18b104517ace0ae2fb7a51a0790514f94e66841305cc041b33",
        "md5": "9b5171841acf43435069d69d16540a6c",
        "sha256": "6286af81e0417487799b972af9b770f94a2e51dc80944e4673208070cad13c28"
      },
      "downloads": -1,
      "filename": "lms-waltz-0.2.7.tar.gz",
      "has_sig": false,
      "md5_digest": "9b5171841acf43435069d69d16540a6c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 73161,
      "upload_time": "2023-01-02T16:55:59",
      "upload_time_iso_8601": "2023-01-02T16:55:59.703825Z",
      "url": "https://files.pythonhosted.org/packages/eb/ef/c6db818b6a18b104517ace0ae2fb7a51a0790514f94e66841305cc041b33/lms-waltz-0.2.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}