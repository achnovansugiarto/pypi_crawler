{
  "info": {
    "author": "Danylo Ulianych",
    "author_email": "d.ulianych@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development"
    ],
    "description": "# pytorch-mighty\n\n[![CircleCI](https://circleci.com/gh/dizcza/pytorch-mighty.svg?style=svg)](https://app.circleci.com/pipelines/github/dizcza/pytorch-mighty)\n![](https://coveralls.io/repos/dizcza/pytorch-mighty/badge.png \"Unit Test Coverage\")\n[![Documentation Status](https://readthedocs.org/projects/pytorch-mighty/badge/?version=latest)](https://pytorch-mighty.readthedocs.io/en/latest/?badge=latest)\n\n\nThe Mighty Monitor Trainer for your pytorch models. Powered by [Visdom](https://github.com/facebookresearch/visdom).\n\n**Documentation**: https://pytorch-mighty.readthedocs.io/en/latest/\n\n![](images/training-progress.png)\n\n\n\n### Installation\n\nRequires Python 3.6+\n\n1. Install [PyTorch](https://pytorch.org/):\n   * CPU backend: `conda install pytorch torchvision cpuonly -c pytorch`\n   * GPU backend: `conda install pytorch torchvision cudatoolkit=10.2 -c pytorch`\n2. `$ pip install pytorch-mighty`\n\n\n### Quick start\n\nBefore running any script, start Visdom server:\n\n```\n$ python -m visdom.server -port 8097\n```\n\nThen run `python examples.py` or use the code below:\n\n```python\nimport torch\nimport torch.nn as nn\nfrom torchvision import transforms\nfrom torchvision.datasets import MNIST\n\nfrom mighty.models import MLP\nfrom mighty.monitor.monitor import MonitorLevel\nfrom mighty.trainer import TrainerGrad\nfrom mighty.utils.data import DataLoader\n\nmodel = MLP(784, 128, 10)\n\noptimizer = torch.optim.Adam(model.parameters(), lr=1e-3)\nscheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer)\n\ndata_loader = DataLoader(MNIST, transform=transforms.ToTensor())\n\ntrainer = TrainerGrad(model,\n                      criterion=nn.CrossEntropyLoss(),\n                      data_loader=data_loader,\n                      optimizer=optimizer,\n                      scheduler=scheduler)\n# trainer.restore()  # uncomment to restore the saved state\ntrainer.monitor.advanced_monitoring(level=MonitorLevel.SIGNAL_TO_NOISE)\ntrainer.train(n_epochs=10, mutual_info_layers=0)\n```\n\nFinally, navigate to http://localhost:8097 to see the training progress.\n\n\n### Articles, implemented or reused in the package\n\n1. Fong, R. C., & Vedaldi, A. (2017). Interpretable explanations of black boxes by meaningful perturbation.\n    * Paper: https://arxiv.org/abs/1704.03296\n    * Used in: [`trainer/mask.py`](mighty/trainer/mask.py)\n\n2. Belghazi, M. I., Baratin, A., Rajeswar, S., Ozair, S., Bengio, Y., Courville, A., & Hjelm, R. D. (2018). Mine: mutual information neural estimation.\n    * Paper: https://arxiv.org/abs/1801.04062\n    * Used in: [`monitor/mutual_info/neural_estimation.py`](mighty/monitor/mutual_info/neural_estimation.py)\n\n3. Kraskov, A., St√∂gbauer, H., & Grassberger, P. (2004). Estimating mutual information.\n    * Paper: https://arxiv.org/abs/1208.4475\n    * Used in: [`monitor/mutual_info/npeet.py`](mighty/monitor/mutual_info/npeet.py)\n    * Original source code: https://github.com/gregversteeg/NPEET\n\n4. Ince, R. A., Giordano, B. L., Kayser, C., Rousselet, G. A., Gross, J., & Schyns, P. G. (2017). A statistical framework for neuroimaging data analysis based on mutual information estimated via a gaussian copula. Human brain mapping, 38(3), 1541-1573.\n    * Paper: http://dx.doi.org/10.1002/hbm.23471\n    * Used in [`monitor/mutual_info/gcmi.py`](mighty/monitor/mutual_info/gcmi.py)\n    * Original source code: https://github.com/robince/gcmi\n\n5. [IDTxl](https://github.com/pwollstadt/IDTxl) package to estimate mutual information.\n    * Used in [`monitor/mutual_info/idtxl.py`](mighty/monitor/mutual_info/idtxl.py)\n\n\n### Projects that use pytorch-mighty\n\n* [MCMC\\_BinaryNet](https://github.com/dizcza/MCMC_BinaryNet) - Markov Chain Monte Carlo binary networks optimization.\n* [EmbedderSDR](https://github.com/dizcza/EmbedderSDR) - encode images into binary Sparse Distributed Representation ([SDR](https://discourse.numenta.org/t/sparse-distributed-representations/2150)).\n* [sparse-representation](https://github.com/dizcza/sparse-representation) - Basis Pursuit solvers for the P0- and P1-problems, which encode the data into sparse vectors of high dimensionality.\n* [entropy-estimators](https://github.com/dizcza/entropy-estimators) - estimate Entropy and Mutual Information between multivariate random variables.\n\nCheck-out more examples on http://85.217.171.57:8097. Give your browser a few minutes to parse the json data.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dizcza/pytorch-mighty",
    "keywords": "",
    "license": "BSD-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytorch-mighty",
    "package_url": "https://pypi.org/project/pytorch-mighty/",
    "platform": "",
    "project_url": "https://pypi.org/project/pytorch-mighty/",
    "project_urls": {
      "Homepage": "https://github.com/dizcza/pytorch-mighty"
    },
    "release_url": "https://pypi.org/project/pytorch-mighty/0.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The Mighty Monitor Trainer for your pytorch models.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8659591,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0165ecaa13a2b76dc3076238352e046b81a7467329bd973218cd459923d50d5b",
          "md5": "b989bbf9c9f749e55096c6ea27168c73",
          "sha256": "fbbe6a94eeea31f93e1259b2f1dc24413f4b0470f351f03cac47192a1ff3d1d8"
        },
        "downloads": -1,
        "filename": "pytorch-mighty-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b989bbf9c9f749e55096c6ea27168c73",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34353,
        "upload_time": "2020-03-21T12:17:20",
        "upload_time_iso_8601": "2020-03-21T12:17:20.229847Z",
        "url": "https://files.pythonhosted.org/packages/01/65/ecaa13a2b76dc3076238352e046b81a7467329bd973218cd459923d50d5b/pytorch-mighty-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "569b01ba3346a46409e9b0a758f0b8cc108524f26303d3375cff407ab5599c83",
          "md5": "d0cb270e9719f7604b7d49dd97c5fd29",
          "sha256": "bbf6472aba49d569da92be87f74b579557e7240aa7e2e783f530ae4e5a94fb0c"
        },
        "downloads": -1,
        "filename": "pytorch-mighty-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d0cb270e9719f7604b7d49dd97c5fd29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40167,
        "upload_time": "2020-07-22T19:05:20",
        "upload_time_iso_8601": "2020-07-22T19:05:20.935628Z",
        "url": "https://files.pythonhosted.org/packages/56/9b/01ba3346a46409e9b0a758f0b8cc108524f26303d3375cff407ab5599c83/pytorch-mighty-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2ca7561a8f726e073661a7b11faf5a09c92defb2204964ebdd115ebcc6735fc",
          "md5": "e383217ba68c82f5816b11300a89bed0",
          "sha256": "7d11a64f306097d333cdc8df8837c74c5fbe5f2ceebaa49ed29dbd967df368a9"
        },
        "downloads": -1,
        "filename": "pytorch-mighty-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e383217ba68c82f5816b11300a89bed0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 65734,
        "upload_time": "2020-11-14T17:00:08",
        "upload_time_iso_8601": "2020-11-14T17:00:08.588457Z",
        "url": "https://files.pythonhosted.org/packages/f2/ca/7561a8f726e073661a7b11faf5a09c92defb2204964ebdd115ebcc6735fc/pytorch-mighty-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2ca7561a8f726e073661a7b11faf5a09c92defb2204964ebdd115ebcc6735fc",
        "md5": "e383217ba68c82f5816b11300a89bed0",
        "sha256": "7d11a64f306097d333cdc8df8837c74c5fbe5f2ceebaa49ed29dbd967df368a9"
      },
      "downloads": -1,
      "filename": "pytorch-mighty-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e383217ba68c82f5816b11300a89bed0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 65734,
      "upload_time": "2020-11-14T17:00:08",
      "upload_time_iso_8601": "2020-11-14T17:00:08.588457Z",
      "url": "https://files.pythonhosted.org/packages/f2/ca/7561a8f726e073661a7b11faf5a09c92defb2204964ebdd115ebcc6735fc/pytorch-mighty-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}