{
  "info": {
    "author": "Sejal Modha",
    "author_email": "s.modha.1@research.gla.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "####################################################################\n    ####################################################################\n    ##                                                                ##\n    ##       _____    _             ____               ___  __        ##\n    ##      |_   _|__| |_ _ __ __ _|  _ \\ _ __ ___  __| \\ \\/ /        ##\n    ##        | |/ _ \\ __| '__/ _` | |_) | '__/ _ \\/ _` |\\  /         ##\n    ##        | |  __/ |_| | | (_| |  __/| | |  __/ (_| |/  \\         ##\n    ##        |_|\\___|\\__|_|  \\__,_|_|   |_|  \\___|\\__,_/_/\\_\\        ##\n    ##                                                                ##\n    ##                                                                ##\n    ####################################################################\n    ####################################################################\n\n# TetraPredX\n\nMicrobial sequence predictor using short DNA features.\n\nTetraPredX can be used to predict the origin of unknown sequences assembled from metagenomic or metatranscriptomics datasets. It can also be used in combination with [UnXplore](https://github.com/sejmodha/UnXplore \"UnXplore\") framework.\n\n### Dependencies:\n\nThis tool requires the following Python modules are installed.\n\n- Python 3.6 or higher\n- BioPython\n- joblib\n- sklearn\n- seaborn\n- pathos\n\nNote: PyPI will take care of this automatically.\n\nOR\n\nUse the `tetrapredx.yml` file to create a new environment with all dependencies.\n\n### Installation and Usage:\n\n```\n# clone the data repository\ngit clone https://github.com/sejmodha/TetraPredX.git\n\n# create conda environment\nconda env create -f tetrapredx.yml\n\n# activate new environment\nconda activate tetrapredx\n\ncd TetraPredX\n\n# run predictions\npython predict.py -i test_zetavirus.fa -o test_out\n\n```\n\nTetraPredX also supports training new models and using them for predictions.\nA pseudo example shows major steps required to train and save new models.\n\n**Note**: This process may require substantial computing power and could take a long time depending on the input data size.\n\n#### Step 1\nExtract features and their frequencies using `FeatureExtractor.py` script.\n\n```\n# generate feature output output output file\npython FeatureExtractor.py -i mysequences.fasta -o output_prefix\n```\nOutput file generated from [Step 1](#Step-1) can be used as input for the next step.\n\n#### Step 2\nTrain and save the models using `train.py`.\n\n```\n# train new models\npython train.py -i input_csv_with_features_and_label -o output_prefix\n```\n`FeatureExtractor.py` and `TrainModels.py` contain a range of functions that can be used by importing them as standard python modules.\ne.g.,\n\n```\nimport FeatureExtractor as ft\n\n# generate a feature table\ndf = ft.get_feature_table(....)\n```\n\n#### Further details on functions:\n\nHelp on module FeatureExtractor:\n\n```\nNAME\n    FeatureExtractor - Created on Thu 30 Apr 11:48:35 BST 2020\n\nDESCRIPTION\n    @author: sejmodha\n\nFUNCTIONS\n    batch_iterator(iterator, batch_size)\n        Return lists of length batch_size.\n\n        This can be used on any iterator, for example to batch up\n        SeqRecord objects from Bio.SeqIO.parse(...), or to batch\n        Alignment objects from Bio.AlignIO.parse(...), or simply\n        lines from a file handle.\n\n        This is a generator function, and it returns lists of the\n        entries from the supplied iterator.  Each list will have\n        batch_size entries, although the final list may be shorter.\n\n        Taken from: https://biopython.org/wiki/Split_large_file\n\n    extract_feat(infasta, tax_label, kmer, cpu, chunk)\n        Extract k-mer features from a given FASTA file.\n\n        Returns a dataframe with indexes, features and\n        sequences labels (when known).\n\n    generate_list_for_record(record, k)\n        Generate a list of seq and revcomp seq kmers.\n\n    generate_primer_ngrams(k, n)\n        Generate n-grams of words.\n\n    generate_primers(length)\n        Generate primers.\n\n    get_feature_table(infasta, out, tax_label, kmer, cpu, chunk)\n        Convert feature table to a .csv file.\n\n    get_kmers(dna, k)\n        Extract k-mers of defined size k. Returns a list  of kmers.\n\n    is_fasta(filename)\n        Check the validity of FASTA file.\n\n    main()\n        Run the module as a script.\n\n    set_vars()\n        Set variables for the module.\n```\n\nHelp on module TrainModels:\n\n```\nNAME\n    TrainModels - Created on Wed 24 Mar 15:37:43 GMT 2021.\n\nDESCRIPTION\n    @author: sejmodha\n\nFUNCTIONS\n    get_best_model(X, y, cpu)\n        Run GriSearchCV to identity the best model parameters.\n\n    get_train_test(input_df, label_col, test_size, k, n_features)\n        Generate train/test set for each class.\n\n    main()\n        Run the module as a script.\n\n    set_vars()\n        Set var_list required for the module.\n\n    train_models_rfc(data_dict, out, path, cpu, cv)\n        Run the Random forest classifier and saves models.\n\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/sejmodha/TetraPredX/archive/refs/tags/1.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sejmodha/TetraPredX",
    "keywords": "bioinformatics tetranucleotides microbes",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "TetraPredX",
    "package_url": "https://pypi.org/project/TetraPredX/",
    "platform": "",
    "project_url": "https://pypi.org/project/TetraPredX/",
    "project_urls": {
      "Download": "https://github.com/sejmodha/TetraPredX/archive/refs/tags/1.0.tar.gz",
      "Homepage": "https://github.com/sejmodha/TetraPredX"
    },
    "release_url": "https://pypi.org/project/TetraPredX/1.1/",
    "requires_dist": null,
    "requires_python": "~=3.6",
    "summary": "Prediction tool to identify the class of unknown sequences assembled from metagenomes",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11201173,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57247fc6a1600375ac940aad22633c19291d672790edf2bb05d2d8c7b2a3e66b",
          "md5": "fc50be75da2685d7e21aa9c3d67ab7a3",
          "sha256": "cdc71e3baf07875fba74f2b570d85d1a83cdb8b2ca75347734283d8fc0a6d60c"
        },
        "downloads": -1,
        "filename": "TetraPredX-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fc50be75da2685d7e21aa9c3d67ab7a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 3532,
        "upload_time": "2021-08-17T14:15:06",
        "upload_time_iso_8601": "2021-08-17T14:15:06.762666Z",
        "url": "https://files.pythonhosted.org/packages/57/24/7fc6a1600375ac940aad22633c19291d672790edf2bb05d2d8c7b2a3e66b/TetraPredX-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "57247fc6a1600375ac940aad22633c19291d672790edf2bb05d2d8c7b2a3e66b",
        "md5": "fc50be75da2685d7e21aa9c3d67ab7a3",
        "sha256": "cdc71e3baf07875fba74f2b570d85d1a83cdb8b2ca75347734283d8fc0a6d60c"
      },
      "downloads": -1,
      "filename": "TetraPredX-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fc50be75da2685d7e21aa9c3d67ab7a3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.6",
      "size": 3532,
      "upload_time": "2021-08-17T14:15:06",
      "upload_time_iso_8601": "2021-08-17T14:15:06.762666Z",
      "url": "https://files.pythonhosted.org/packages/57/24/7fc6a1600375ac940aad22633c19291d672790edf2bb05d2d8c7b2a3e66b/TetraPredX-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}