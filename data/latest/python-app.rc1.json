{
  "info": {
    "author": "vverholyak",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## REST API using Flask and Python [Air connections search]\n\n### Project consist of:\n* images - folder with images sources\n* tests - folder with UnitTests, Pytest \n* app.py - main application resource\n* db.py - resource for creation and for fill the database\n* requirements.txt - file for install packages \n* list.csv - list of flights for database\n* pytest.ini - pytest file\n* config.cfg - file with config, flake8\n### For using application you need to do:\n1. Install Python 3.6 or higher\n2. Install requirements\n    * pip install -r requirements.txt\n3. Create database for application\n    * python db.py\n```\n$ python db.py\n\n20 Record Transferred\n```\n4. There are 3 environments to choose from with different databases, choose one:\n* testing - for local testing,\n* dev - need to be configured manually\n* prod - need to be configured manually\n\n5. Run application\n* python app.py testing\n```\n$ python app.py\n * Serving Flask app \"app\" (lazy loading)\n * Environment: production\n * Debug mode: on\n * Restarting with stat\n * Debugger is active!\n * Debugger PIN: 231-078-686\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n```\n5. Follow the link http://127.0.0.1:5000/\n\n### Endpoints\n\n|Endpoint |Request |Description |\n|---------|--------|------------|\n| /flight | GET | Get All Flights | \n| /flight/id | GET | Get Single Flight | \n| /flight | POST | Create a Flight | \n| /flight/id | PUT | Update a Flight | \n| /flight/id | DELETE | Delete Flight | \n| /flight/search | GET | Flight search between 2 cities | \n\n\n### Start Using:\n\n##### 1. Get All Flights\n\n```bash \ncurl -X GET http://127.0.0.1:5000/flight\n\n```\n##### 2. Get Single Flight\n\n```bash\ncurl -X GET http://127.0.0.1:5000/flight/10\n```\n\n##### 3. Create a Flight\n\n```bash\ncurl -X POST -H \"Content-Type: application/json\" -d '{\"source\": \"Barcelona\", \"destination\": \"Palma de Mallorca\", \"flight_company\": \"Vueling\", \"flight_number\": \"FR3745\", \"flight_time\": \"55m\", \"free_seats\": \"5\", \"price\": \"50$\"}' http://127.0.0.1:5000/flight\n```\n\n##### 4. Update a Flight\n\n```bash\ncurl -X PUT -H \"Content-Type: application/json\" -d '{\"source\": \"Barcelona\", \"destination\": \"Palma de Mallorca\", \"flight_company\": \"Ryanair\", \"flight_number\": \"FR3785\", \"flight_time\": \"50m\", \"free_seats\": \"8\", \"price\": \"150$\"}' http://127.0.0.1:5000/flight/11\n```\n\n##### 5. Delete Flight\n\n```bash\ncurl -X DELETE http://127.0.0.1:5000/flight/11\n```\n\n##### 6. Flight search between 2 cities\n\n```bash\nhttp://127.0.0.1:5000/flight/search?c1=Milan&c2=Barcelona\n```\n### UnitTests:\n\n Download the project:\n * Follow the [link](http://gitlab-1914910442.us-west-2.elb.amazonaws.com/vverkholyak/python_app.git) \n * Choose branche (feature/jdobc-255) \n\n#### - Using Linter\n\n1. Install packages\n```\npip install flake8\n```\n2. Run flake8\n```\nflake8\n```\n```\n$ flake8\n0\n```\n#### - Using PyTest\n\n1. Install pytest from pip\n```\npip install pytest\n```\n2. Run pytest\n```\npytest -v\n```\n<img src = \"images/img_1.png\" width = 800>\n\n#### - Coverage by PyTest:\n1. Install packages\n```\npip install pytest-cov\n```\n2. Run command\n```\npytest --cov=. --cov-config='.coveragerc' -c='pytest.ini'\n```\n\n<img src = \"images/img_2.png\" width = 800>\n\n### GitLab CI Multi-project:\n* Flake8\n* Pytest\n* Coverage\n* Build artifact\n* Upload artifact to s3\n* Deploy terraform code\n\n<img src = \"images/img_3.jpg\" width = 1200>\n\n### Logging for AWS CloudWatch\n1.  How to run the application locally in the test environment ?\n    * run applicatin: \n    ```\n    python app.py testing\n    ```\n    * Log output file \"air-connection-app.log\" will be created automatically\n2. Ð¢Ð¾ see the streaming of application logs in AWS you need to deploy the application in AWS using [terraform template](http://gitlab-1914910442.us-west-2.elb.amazonaws.com/vverkholyak/terraform-flight-app) and go to [CloudWatch logs](https://console.aws.amazon.com/cloudwatch/home?region=us-east-1#logsV2:log-groups/log-group/air-connection-app-log)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://gitlab-1914910442.us-west-2.elb.amazonaws.com/vverkholyak/python_app",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-app",
    "package_url": "https://pypi.org/project/python-app/",
    "platform": "",
    "project_url": "https://pypi.org/project/python-app/",
    "project_urls": {
      "Homepage": "http://gitlab-1914910442.us-west-2.elb.amazonaws.com/vverkholyak/python_app"
    },
    "release_url": "https://pypi.org/project/python-app/0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "air connection app",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10718763,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "775e2f9df8d2055e2a9cd372abd9e7e73c292957da769c0571f7abee0b56350d",
          "md5": "14bf4dac36f12ce538e7245b5edc1293",
          "sha256": "ec8d9539807c4c90d3d454d3e0ea636887c07b364e0dee17836694b132937b72"
        },
        "downloads": -1,
        "filename": "python_app-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "14bf4dac36f12ce538e7245b5edc1293",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5888,
        "upload_time": "2021-06-23T06:37:43",
        "upload_time_iso_8601": "2021-06-23T06:37:43.216925Z",
        "url": "https://files.pythonhosted.org/packages/77/5e/2f9df8d2055e2a9cd372abd9e7e73c292957da769c0571f7abee0b56350d/python_app-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "775e2f9df8d2055e2a9cd372abd9e7e73c292957da769c0571f7abee0b56350d",
        "md5": "14bf4dac36f12ce538e7245b5edc1293",
        "sha256": "ec8d9539807c4c90d3d454d3e0ea636887c07b364e0dee17836694b132937b72"
      },
      "downloads": -1,
      "filename": "python_app-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "14bf4dac36f12ce538e7245b5edc1293",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5888,
      "upload_time": "2021-06-23T06:37:43",
      "upload_time_iso_8601": "2021-06-23T06:37:43.216925Z",
      "url": "https://files.pythonhosted.org/packages/77/5e/2f9df8d2055e2a9cd372abd9e7e73c292957da769c0571f7abee0b56350d/python_app-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}