{
  "info": {
    "author": "Carson Harmon",
    "author_email": "carson.harmon@trailofbits.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Code Generators"
    ],
    "description": "# Tourniquet\n\n![CI](https://github.com/trailofbits/tourniquet/workflows/CI/badge.svg)\n\nA Python library for easy C/C++ syntax guided program transformation/repair.\nThis is still very early in development.\n\n## Installation\n\n### PyPI\n\nTourniquet is available via PyPI:\n\n```bash\n$ pip install tourniquet\n```\n\nYou'll need a relatively recent CMake and LLVM (9, 10, and 11 are supported).\n\n### Docker\n\nTourniquet can also be built and run within a Docker container:\n\n```bash\n$ docker build -t trailofbits/tourniquet .\n$ docker run -it trailofbits/tourniquet\n```\n\nEnter an `ipython` instance and `import tourniquet`\n\n## Syntax Guided Program Repair TL;DR\n\nFixing programs is hard, and one of the most popular techniques for automated repair is search. If you're familiar with\nfuzzing, it is basically the reverse. In fuzzing you are mutating inputs to cause a crash, but in search based program\nrepair you are mutating the program until you pass some specific tests.\n\nOne huge drawback of this search based approach is that the search space is huge and most mutations in it\nare useless. The idea behind syntax guided program repair is to come up with some generally useful syntax patterns and\nto use those for your search space. This means your search space is smaller (restricted by the syntax patterns) and\nyou are focusing on patch candidates that might actually fix whatever bug is in front of you.\n\n## So What Even Is Tourniquet?\n\nTourniquet is a library and domain specific language for syntax guided program repair. Current tools have\nhard coded fix patterns within them, making it hard for humans to interact and tweak them. The goal of Tourniquet is to\nmake it quick and easy to create repair templates that can immediately be used to try and repair bugs. We plan on using\nTourniquet alongside program analysis tools to allow humans to create fix patterns that have semantic meaning.\n\n## Domain Specific Language\n\nRather than writing individual tree transform passes or other types of source manipulation, Tourniquet makes it easy to\ndescribe part of the syntax and part of the semantics of a repair and lets the computer do the rest. Here is a simple\nexample template:\n\n```python\nclass YourSemanticAnalysis(Expression):\n    def concretize(self, _db, _location):\n        yield \"SOME_ERROR_CONSTANT\"\n\n\ndef your_matcher_func(line, col):\n    return True\n\n\ndemo_template = PatchTemplate(\n    FixPattern(  # Location 1\n        IfStmt(\n            LessThanExpr(Variable(), Variable()),  # Location 2\n            NodeStmt()  # Location 3\n        ),\n        ElseStmt(\n            ReturnStmt(YourSemanticAnalysis())  # Location 4\n        )\n    ),\n    your_matcher_func  # Location 5\n)\n```\n\n*Location 1* is the beginning of the `FixPattern`. The `FixPattern` describes the overall shape of\nthe repair. This means the human provides part of the syntax, and part of the semantics of the\nrepair.\n\n*Location 2* shows some of the different types in the DSL. What this line is describing is a less\nthan statement with two variables, all the variable information is automatically extracted from the\nClang AST.\n\n*Location 3* is whatever source was matched by your matcher function, also extracted from the\nClang AST.\n\n*Location 4* is an example of how you could integrate program analysis tools with Tourniquet.\nThe `FixPattern` is trying to do a basic `if...else` statement where the `else` case returns some\nvalue. Return values have semantic properties, returning some arbitrary integer isn't usually a\ngood idea. This means you can use some program analysis technique to\ninfer what an appropriate return code might actually be, or simply ask a human to intervene.\n\n*Location 5* is for a matcher. The matcher is a callable that is supposed to\ntake source line and column information and return `True` or `False` if the `FixPatern` is\napplicable to that source location. The idea here is that we couple specific types of fixes with\nspecific types of bugs. We intend to use some other tools\n(such as [Manticore](https://github.com/trailofbits/manticore)) to help determine bug classes.\n\n## Using Tourniquet\n\n```python\n# Create a new Tourniquet instance\ndemo = Tourniquet(\"test.db\")\n\n# Extract info from its AST into the database\ndemo.collect_info(\"demo_prog.c\")\n\n# Create a new patch template\ndemo_template = PatchTemplate(\n    FixPattern(\n        IfStmt(\n            LessThanExpr(Variable(), Variable()),\n            NodeStmt()\n        )\n    ),\n    lambda x, y: True,\n)\n\n# Add the template to the tourniquet instance\ndemo.register_template(\"demo_template\", demo_template)\n\n# Tell Tourniquet you want to see results from this program, with this template,\n# matching against some location\nlocation = Location(\"demo_prog.c\", SourceCoordinate(44, 3))\nsamples = demo.concretize_template(\"demo_template\", location)\n\n# Look at all the patch candidates!\nprint(list(samples))\n\n# Attempt to automatically repair the program using that template\n# Specify the file, some testcases, and the location information again\ndemo.auto_patch(\n    \"demo_template\"\n    [\n        (\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\", 1),\n        (\"password\", 0)\n    ],\n    location\n)\n```\n\nAuto patch will return `True` or `False` depending on if you successfully found a patch to fix all testcases. Eventually\nwe will support having a test case directory etc, this is still early in development.\n\nCheck out tourniquet's [API documentation](https://trailofbits.github.io/tourniquet) for more details.\n\n## Development\n\nInstall venv to be able to run `make` commands\n\n```bash\n$ docker build -t trailofbits/tourniquet .\n$ docker run -it trailofbits/tourniquet\nroot@b9f3a28655b6:/tourniquet# apt-get install -y python3-venv\nroot@b9f3a28655b6:/tourniquet# python3 -m venv env\nroot@b9f3a28655b6:/tourniquet# make test\n```\n\n## Contributors\n\n* Carson Harmon (carson.harmon@trailofbits.com)\n* Evan Sultanik (evan.sultanik@trailofbits.com)\n* William Woodruff (william@trailofbits.com)\n\n## Acknowledgements\n\nThe project or effort depicted is sponsored by the Air Force Research Laboratory (AFRL) and\nDARPA under contract FA8750-19-C-0004. Any opinions, findings and conclusions or recommendations\nexpressed in this material are those of the author(s) and do not necessarily reflect the views of\nthe Air Force Research Laboratory (AFRL) and DARPA.\n\nDistribution Statement: Approved for Public Release, Distribution Unlimited",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/trailofbits/tourniquet",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tourniquet",
    "package_url": "https://pypi.org/project/tourniquet/",
    "platform": "",
    "project_url": "https://pypi.org/project/tourniquet/",
    "project_urls": {
      "Documentation": "https://trailofbits.github.io/tourniquet/",
      "Homepage": "https://github.com/trailofbits/tourniquet"
    },
    "release_url": "https://pypi.org/project/tourniquet/0.0.5/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Syntax Guided Repair/Transformation Package",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11838368,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "949d9c6045fac82215fdfa02f0822109ed3a98096bf45df6763b0babe17ab2d4",
          "md5": "1e2963e420161a604a06b07b512408d9",
          "sha256": "0efb66524fa266651092100514b02fe3acbee24ba77eb59cc4f19df4d1e8d80d"
        },
        "downloads": -1,
        "filename": "tourniquet-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1e2963e420161a604a06b07b512408d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24746,
        "upload_time": "2020-11-12T21:33:43",
        "upload_time_iso_8601": "2020-11-12T21:33:43.749002Z",
        "url": "https://files.pythonhosted.org/packages/94/9d/9c6045fac82215fdfa02f0822109ed3a98096bf45df6763b0babe17ab2d4/tourniquet-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf9075c11e238486fa1625d3edef13abcdd45ac82f5d41acf51f6f60284e5912",
          "md5": "bb45644fcbe83d41bfa0bde3c1a4dfc7",
          "sha256": "580a84421a23fe8048e54735c19d519cd5d27c9470a2bd67f9c746b106406242"
        },
        "downloads": -1,
        "filename": "tourniquet-0.0.1rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "bb45644fcbe83d41bfa0bde3c1a4dfc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24729,
        "upload_time": "2020-11-12T19:06:10",
        "upload_time_iso_8601": "2020-11-12T19:06:10.865542Z",
        "url": "https://files.pythonhosted.org/packages/bf/90/75c11e238486fa1625d3edef13abcdd45ac82f5d41acf51f6f60284e5912/tourniquet-0.0.1rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20e9349e294b01fcaed78642c19aeed78cf9d7c6e053b714d819c85015957d68",
          "md5": "e50a2540aa1ff0fbbf72b587c78b8d7f",
          "sha256": "95e5f4bb5db2c1a1547813a33ca54b9d4aa1a743b0541ac1d727f59c3f1ddf14"
        },
        "downloads": -1,
        "filename": "tourniquet-0.0.1rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "e50a2540aa1ff0fbbf72b587c78b8d7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24748,
        "upload_time": "2020-11-12T21:28:25",
        "upload_time_iso_8601": "2020-11-12T21:28:25.861274Z",
        "url": "https://files.pythonhosted.org/packages/20/e9/349e294b01fcaed78642c19aeed78cf9d7c6e053b714d819c85015957d68/tourniquet-0.0.1rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68577bb9aede5908459eb6a2dc1b305b9105eb6d101c8009bdf066f8dc39c25c",
          "md5": "7037eb1d7742a0a06726d724d5c0a367",
          "sha256": "2da4b79a25df07adb6c3e3b46a6914fd74f241df023c7493e64e45c069775ace"
        },
        "downloads": -1,
        "filename": "tourniquet-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7037eb1d7742a0a06726d724d5c0a367",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 24930,
        "upload_time": "2020-11-16T21:13:19",
        "upload_time_iso_8601": "2020-11-16T21:13:19.686862Z",
        "url": "https://files.pythonhosted.org/packages/68/57/7bb9aede5908459eb6a2dc1b305b9105eb6d101c8009bdf066f8dc39c25c/tourniquet-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "851947c00af0ee5c313c61ecebe067c816fc5f8110c27b72a31c2f0a8125f2c5",
          "md5": "47b5fb25d7eaac9ca9658553315a797b",
          "sha256": "148b1e94a10caecf338ac9e4c621393581f0e2a4c7172e15e2e850e936b750c8"
        },
        "downloads": -1,
        "filename": "tourniquet-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "47b5fb25d7eaac9ca9658553315a797b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 24947,
        "upload_time": "2021-03-23T23:02:54",
        "upload_time_iso_8601": "2021-03-23T23:02:54.043132Z",
        "url": "https://files.pythonhosted.org/packages/85/19/47c00af0ee5c313c61ecebe067c816fc5f8110c27b72a31c2f0a8125f2c5/tourniquet-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f214227cf7a3285ada67e4f071137f544eabe2c0f197aa2ebe79f1a6dbd343b",
          "md5": "3284ffe86d15a1b839f6a88502f84701",
          "sha256": "60cb13ffafd6437813abc19ba81597c037196618725cc2144d55623d1c639b96"
        },
        "downloads": -1,
        "filename": "tourniquet-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3284ffe86d15a1b839f6a88502f84701",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28494,
        "upload_time": "2021-10-25T19:08:09",
        "upload_time_iso_8601": "2021-10-25T19:08:09.404945Z",
        "url": "https://files.pythonhosted.org/packages/5f/21/4227cf7a3285ada67e4f071137f544eabe2c0f197aa2ebe79f1a6dbd343b/tourniquet-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dcaba6568888fb765a486e5e7087e2f30d5a85df4b50848eeca7f2edec8f19a",
          "md5": "6b74bf9296fd506c52f88447e9db20b3",
          "sha256": "0a577e85b76d69d5709cf1d34328ecd7139afccf10f759e8d22dd70ddef84a63"
        },
        "downloads": -1,
        "filename": "tourniquet-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6b74bf9296fd506c52f88447e9db20b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28578,
        "upload_time": "2021-10-26T18:07:40",
        "upload_time_iso_8601": "2021-10-26T18:07:40.899557Z",
        "url": "https://files.pythonhosted.org/packages/4d/ca/ba6568888fb765a486e5e7087e2f30d5a85df4b50848eeca7f2edec8f19a/tourniquet-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4dcaba6568888fb765a486e5e7087e2f30d5a85df4b50848eeca7f2edec8f19a",
        "md5": "6b74bf9296fd506c52f88447e9db20b3",
        "sha256": "0a577e85b76d69d5709cf1d34328ecd7139afccf10f759e8d22dd70ddef84a63"
      },
      "downloads": -1,
      "filename": "tourniquet-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "6b74bf9296fd506c52f88447e9db20b3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 28578,
      "upload_time": "2021-10-26T18:07:40",
      "upload_time_iso_8601": "2021-10-26T18:07:40.899557Z",
      "url": "https://files.pythonhosted.org/packages/4d/ca/ba6568888fb765a486e5e7087e2f30d5a85df4b50848eeca7f2edec8f19a/tourniquet-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}