{
  "info": {
    "author": "Rushil Mallarapu",
    "author_email": "rushil.mallarapu@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# DGA Intel\n\nUsing deep learning to detect DGA domains.\n\n# Overview\nThe DGAIntel Python module allows you to utilize a powerful CNN-LSTM model to predict whether a given domain name was generated by a domain generation algorithm (DGA) or corresponds to a genuine domain. The prediction features are also accesible through [this website](http://www.dgaintel.com/), but this package allows for direct integration into your workflow.\n\n## Requirements\n\nDGAIntel is designed for use with Python 3. It has only two requirements:\n\n    - TensorFlow 2.x\n    - Numpy\n\n# Installation\n\nTo download dgaintel, simply use Pypi via pip.\n```sh\n$ pip install dgaintel\n```\n\nAlternatively, you could install from source.\n```sh\n$ git clone https://github.com/sudo-rushil/dgaintel\n$ cd dgaintel\n$ python setup.py install\n```\n\nVerify your installation by running\n```Python\n>>> import dgaintel\n>>> dgaintel.get_prediction('microsoft.com')\n'microsoft.com is genuine with probability 0.00050'\n```\n\n# Examples\n\n### Predict DGA\nThis is simple way of determining whether any given domain, such as `'microsoft.com'` is DGA or not, mainly intended for cyber security analysts.\n\n```Python\nfrom dgaintel import get_prediction\n\nget_prediction('microsoft.com')\n```\n> 'microsoft.com is genuine with probability 0.00050'\n\n### Predict DGA probability\nThis allows for getting the probability, or probabilities, that a domain or list of domains is DGA or not, which is more useful to data scientists.\n\n```Python\nfrom dgaintel import get_prob\n\n# For single domain\nprob = get_prob('microsoft.com')\nprint(prob)\n\n# For multiple domains\nprobs = get_prob(['microsoft.com', 'wikipedia.com', 'vlurgpeddygdy.com'])\nprint(probs)\n\n# To get just the scores\nraw_probs = list(get_prob(['microsoft.com', 'wikipedia.com', 'vlurgpeddygdy.com'], raw=True))\nprint(raw_probs)\n```\n\n> 0.00050\n\n> [('microsoft.com', 0.00050), ('wikipedia.com', 0.00033), ('vlurgpeddygdy.com', 0.97601)]\n\n> [0.00050845, 0.00033092, 0.00144754]\n\n### Predict by file\nThis is for inputing a file containing a list of domains to get predictions on all of them at once, which is helpful for data analysts.\n\nSay you have a domain file `domains.txt`.\n```\nmicrosoft.com\nwikipedia.com\nvlurgpeddygdy.com\n```\n\nThen, you can run the following code in the same directory.\n```Python\nfrom dgaintel import get_prediction\n\n# Print to console\nget_prediction('domains.txt')\n\n# Write to file\nget_prediction('domains.txt', to_file='domain_predictions.txt')\n```\n\n> microsoft.com is genuine with probability 0.00050\n\n> wikipedia.com is genuine with probability 0.00033\n\n> vlurgpeddygdy.com is DGA with probability 0.97601\n\nIf you read the new file `domain_predictions.txt`, you will see the following.\n\n```\nmicrosoft.com is genuine with probability 0.0005084535223431885\nwikipedia.com is genuine with probability 0.00033092446392402053\nvlurgpeddygdy.com is DGA with probability 0.9760094285011292\n```\n\n### Prediction analysis\nThis is an example function that integrates dgaintel with [whois](https://pypi.org/project/whois/) for performing basic prediction analysis, which is important for cyber security investigators.\n\n```Python\nfrom dgaintel import get_prob\nfrom whois import query\n\ndef analyze(domain, out=True):\n    prob = get_prob(domain)\n    whois = query(domain)\n    dga = False\n    if prob >= 0.5: dga = True\n\n    domain_analysis = {'domain_name': domain,\n                       'dga': dga,\n                       'registrar': whois.registrar if whois else None,\n                       'creation date' : whois.creation_date if whois else None,\n                       'expiration date': whois.expiration_date if whois else None}\n\n    if out:\n        print()\n        for key, val in domain_analysis.items():\n            print('{}: {}'.format(key, val))\n        print()\n        return None\n\n    return domain_analysis\n\nanalyze('microsoft.com')\n\n# Get analysis dictionary in python itself\nanalysis = analyze('microsoft.com', out=False)\n```\n\n> name: microsoft.com\n\n> dga: False\n\n> registrar: MarkMonitor Inc.\n\n> creation date: 1991-05-02 04:00:00\n\n> expiration date: 2021-05-03 04:00:00\n\n\n### Predictions with Whitelisting\nThis example shows how the class interface to DGAIntel allows for certain TLDs to be whitelisted, preventing them from raising errors in a given ecosystem.\n\n```Python\nfrom dgaintel import Intel\n\nintel = Intel(['cloud.com'])\n\nprint(intel.get_prob(['www.cloud.com',\n                        'dfsadkcda.cloud.com',\n                        'www.cloud.org',\n                        'www.dkfjsdakfj.org']))\n```\n\n> [('www.cloud.com', 0.0), ('dfsadkcda.cloud.com', 0.0), ('www.cloud.org', 0.00045579672), ('www.dkfjsdakfj.org', 0.99884665)]\n\n\n# Documentation\nDGAIntel has support for polymorphism; to input domains to run predictions on, you can use a single domain name, a list of domain names, or a text file with line-separated domain names. The text file has the format\n\n```\nmicrosoft.com\nwikipedia.com\nvlurgpeddygdy.com\n...\n```\n\nAdditionally, the Tensorflow Keras model running in the backend supports input batching, meaning there is a significant increase in speed for running predictions on lists or files rather than individual domains. This was tested in Jupyter.\n\n```Python\nfrom dgaintel import get_prob\n\n# List of 10 domain names\nl = ['microsoft.com', 'squarespace.com', 'hsfkjdshfjasdhfk.com', 'fdkhakshfda.com', 'foilfencersarebad.com', 'foilfencersarebad.com', 'foilfencersarebad.com', 'discojjfdsf.com', 'fasddafhkj.com', 'wikipedai.com']\n```\n\n```Python\n# One domain\n%%timeit\nget_prob(l[0])\n```\n\n> 286 ms ± 4.99 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n```Python\n# Ten domains\n%%timeit\nget_prob(l)\n```\n\n> 290 ms ± 7.23 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n```Python\n# Hundred domains\n%%timeit\nget_prob(l*10)\n```\n\n> 333 ms ± 4.71 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n```Python\n# Thousand domains\n%%timeit\nget_prob(l*100)\n```\n\n> 584 ms ± 14.8 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\nThis demonstrates that increasing the number of domain names one runs the prediction by 1000x only increases the inference time by less than 2x. Therefore, this model is easily adaptable to large-scale predictions.\n\n## API\nThe `get_prediction` function will either print the predictions or write them to a user-specified file.\n```Python\nfrom dgaintel import get_prediction\n\nget_prediction('microsoft.com')\nget_prediction(['microsoft.com', 'wikipedia.com', 'vlurgpeddygdy.com'])\nget_prediction('domains.txt')\nget_prediction('domains.txt', to_file='domain_predictions.txt')\n```\n\nThe `get_prob` function will perform the inference and provide the prediction floats. It is helpful if you want to use the prediction scores directly in your workflow.\n```Python\nfrom dgaintel import get_prob\n\nget_prob('microsoft.com') # 0.00050851\nget_prob(['microsoft.com', 'wikipedia.com', 'vlurgpeddygdy.com']) # [('microsoft.com', 0.00050), ('wikipedia.com', 0.00033), ('vlurgpeddygdy.com', 0.0.97601)]\nget_prob('domains.txt') # [('microsoft.com', 0.00050), ('wikipedia.com', 0.00033), ('vlurgpeddygdy.com', 0.97601)]\nget_prob(['microsoft.com', 'wikipedia.com', 'google.com'], raw=True) # array([0.00050, 0.00033, 0.0.97601], dtype=float32)\n```\n\nThe `Intel` interface allows DGAIntel to avoid checking certain domains with known TLDs to ensure enterprise functions are not compromised.\n```Python\nfrom dgaintel import Intel\n\nintel = Intel(['microsoft.com'])\nintel.get_prob('microsoft.com') # 0.0\nintel.get_prob(['microsoft.com', 'wikipedia.com', 'vlurgpeddygdy.com']) # [('microsoft.com', 0.0), ('wikipedia.com', 0.00033), ('vlurgpeddygdy.com', 0.0.97601)]\nintel.get_prob('domains.txt') # [('microsoft.com', 0.0), ('wikipedia.com', 0.00033), ('vlurgpeddygdy.com', 0.97601)]\nintel.get_prob(['microsoft.com', 'wikipedia.com', 'google.com'], raw=True) # array([0.0, 0.00033, 0.0.97601], dtype=float32)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/sudo-rushil/dgaintel/archive/v2.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sudo-rushil/dgaintel",
    "keywords": "DGA,Domain,Domain Generation,Domain Classifier,Deep Learning,AI,RNN,LSTM,CNN-LSTM,CNN",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dgaintel",
    "package_url": "https://pypi.org/project/dgaintel/",
    "platform": "",
    "project_url": "https://pypi.org/project/dgaintel/",
    "project_urls": {
      "Download": "https://github.com/sudo-rushil/dgaintel/archive/v2.0.tar.gz",
      "Homepage": "https://github.com/sudo-rushil/dgaintel"
    },
    "release_url": "https://pypi.org/project/dgaintel/2.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Extremely fast and accurate predictions of whether a domain name is genuine or DGA with deep learning.",
    "version": "2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7774447,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56660b93ce0f4422271ab3e1f55f9e5f9e83c7969e903d0e850d2bb6a82ddc0b",
          "md5": "41706dc367e2743049f2c0204d692c65",
          "sha256": "5d28f2631957923f70c24f6c91189ba2dcc3549de5b8e8cab01fda5935dfa242"
        },
        "downloads": -1,
        "filename": "dgaintel-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "41706dc367e2743049f2c0204d692c65",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1903,
        "upload_time": "2019-11-24T20:34:09",
        "upload_time_iso_8601": "2019-11-24T20:34:09.645600Z",
        "url": "https://files.pythonhosted.org/packages/56/66/0b93ce0f4422271ab3e1f55f9e5f9e83c7969e903d0e850d2bb6a82ddc0b/dgaintel-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be824801cfe3fc8f8cb4af845ac8b21e484207466ad0a78711bfe2cb5af771ee",
          "md5": "d335ad161d371295af625eee314b8cf6",
          "sha256": "307db8f67e804d6d640011e1f821cc20674d319a8bb486662c6c9f5c402f6847"
        },
        "downloads": -1,
        "filename": "dgaintel-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d335ad161d371295af625eee314b8cf6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1904,
        "upload_time": "2019-11-24T20:46:59",
        "upload_time_iso_8601": "2019-11-24T20:46:59.275923Z",
        "url": "https://files.pythonhosted.org/packages/be/82/4801cfe3fc8f8cb4af845ac8b21e484207466ad0a78711bfe2cb5af771ee/dgaintel-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40184efb491affb648f46161469bb46ad847aa73636b9a27a165e2bceb029ab6",
          "md5": "bf93e9fcfd7f134eba4f5a11c372a028",
          "sha256": "dfcf908238fa3cc62d78dc3281c8544e6d639ed2e986b8c43df06c8820fa3379"
        },
        "downloads": -1,
        "filename": "dgaintel-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bf93e9fcfd7f134eba4f5a11c372a028",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2677,
        "upload_time": "2019-11-24T21:15:14",
        "upload_time_iso_8601": "2019-11-24T21:15:14.938223Z",
        "url": "https://files.pythonhosted.org/packages/40/18/4efb491affb648f46161469bb46ad847aa73636b9a27a165e2bceb029ab6/dgaintel-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2a9a4ebb9f3c7f29a671001152a2e189972fa00244c66a3e86f4e60a4db1ee1",
          "md5": "7537d10642ca07c1e9af6f26caa33959",
          "sha256": "067e2434fdf976958dc34791e1ad6e3385d7e7242be7263650c4d0f021292ff9"
        },
        "downloads": -1,
        "filename": "dgaintel-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7537d10642ca07c1e9af6f26caa33959",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2636,
        "upload_time": "2019-11-24T22:18:29",
        "upload_time_iso_8601": "2019-11-24T22:18:29.350782Z",
        "url": "https://files.pythonhosted.org/packages/d2/a9/a4ebb9f3c7f29a671001152a2e189972fa00244c66a3e86f4e60a4db1ee1/dgaintel-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "936c0cb564d1c28ee4bfdde6279430592e6462ae8cf69ce5f92f84ec7efd1121",
          "md5": "1c00ab2883a2d9c70508f5825fd5f87c",
          "sha256": "5c42362167dc5f8e1d65abca1bf0517c7e487ee4329ef3e79f7914f33f9a6e5c"
        },
        "downloads": -1,
        "filename": "dgaintel-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1c00ab2883a2d9c70508f5825fd5f87c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1167478,
        "upload_time": "2019-11-24T23:16:20",
        "upload_time_iso_8601": "2019-11-24T23:16:20.636129Z",
        "url": "https://files.pythonhosted.org/packages/93/6c/0cb564d1c28ee4bfdde6279430592e6462ae8cf69ce5f92f84ec7efd1121/dgaintel-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c2e629dfbf519de8cdfc43148a30144d36d48a30333654de4203fa57fe2466c",
          "md5": "eeefc6c22c4faa77dc5fe660e6575dda",
          "sha256": "e6a4f7c02138cc7dddce7c275a7c84dd136761c09c91e8abafb9e9c9d6c32327"
        },
        "downloads": -1,
        "filename": "dgaintel-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "eeefc6c22c4faa77dc5fe660e6575dda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1167493,
        "upload_time": "2019-11-25T00:49:38",
        "upload_time_iso_8601": "2019-11-25T00:49:38.337897Z",
        "url": "https://files.pythonhosted.org/packages/7c/2e/629dfbf519de8cdfc43148a30144d36d48a30333654de4203fa57fe2466c/dgaintel-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9c2af98424d6e02599d6d548338448a28fa495c7692160de79e4a6ee7ba390f",
          "md5": "f062e8040152367a6cff620106ec2a8c",
          "sha256": "99d8ad9aa9b8268125fe3bfaab15bba19dceadabdeef9824fea7a4769244d275"
        },
        "downloads": -1,
        "filename": "dgaintel-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f062e8040152367a6cff620106ec2a8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1169782,
        "upload_time": "2019-11-25T19:04:11",
        "upload_time_iso_8601": "2019-11-25T19:04:11.454706Z",
        "url": "https://files.pythonhosted.org/packages/d9/c2/af98424d6e02599d6d548338448a28fa495c7692160de79e4a6ee7ba390f/dgaintel-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2294e9e66f154fda2e215a336355fe24ecdcf027a9aed48688fa5c8aaf4922b0",
          "md5": "d97aa308d0349b6f0d4a04dd12e868a2",
          "sha256": "01cf4affe5b98c8856d3f1552f9fba28bd6997ef241cac620e3dcd7e5b180b65"
        },
        "downloads": -1,
        "filename": "dgaintel-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "d97aa308d0349b6f0d4a04dd12e868a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1172150,
        "upload_time": "2019-11-25T21:23:00",
        "upload_time_iso_8601": "2019-11-25T21:23:00.055888Z",
        "url": "https://files.pythonhosted.org/packages/22/94/e9e66f154fda2e215a336355fe24ecdcf027a9aed48688fa5c8aaf4922b0/dgaintel-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfdf19a39610a9cbe149f031a96ab7437d589b97bd1645e695102dd11ca78450",
          "md5": "953d7484877554facb8dd9a8ab37f01a",
          "sha256": "28bd570d8a571d9ad002af629b3aa050ce090e1754e67f626f6c9256234590a0"
        },
        "downloads": -1,
        "filename": "dgaintel-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "953d7484877554facb8dd9a8ab37f01a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1173082,
        "upload_time": "2019-11-26T15:51:34",
        "upload_time_iso_8601": "2019-11-26T15:51:34.258789Z",
        "url": "https://files.pythonhosted.org/packages/cf/df/19a39610a9cbe149f031a96ab7437d589b97bd1645e695102dd11ca78450/dgaintel-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f0ccb9b899cb20c903b922c2e1a74d55c1614ce96ed410df190ef74d93cf4d0",
          "md5": "38a43d705b3d20f51527a6874e6144ac",
          "sha256": "fa293ba05b5cd961ffba7b85778527b67c0e45ac3b2d56d5617aaa796e952c82"
        },
        "downloads": -1,
        "filename": "dgaintel-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "38a43d705b3d20f51527a6874e6144ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1173059,
        "upload_time": "2019-12-02T04:38:10",
        "upload_time_iso_8601": "2019-12-02T04:38:10.630279Z",
        "url": "https://files.pythonhosted.org/packages/4f/0c/cb9b899cb20c903b922c2e1a74d55c1614ce96ed410df190ef74d93cf4d0/dgaintel-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afc71d43229c961f33e49a68e5a994323935f07a04b1684e2f3eb7a1fb8a7406",
          "md5": "baa622546a6069550b8f00bef2d182de",
          "sha256": "a4c3ed1a2b4f9ed47c213d3422db6f60ad438efac8dc3a685d328b17ece06056"
        },
        "downloads": -1,
        "filename": "dgaintel-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "baa622546a6069550b8f00bef2d182de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1173110,
        "upload_time": "2019-12-05T13:46:33",
        "upload_time_iso_8601": "2019-12-05T13:46:33.102152Z",
        "url": "https://files.pythonhosted.org/packages/af/c7/1d43229c961f33e49a68e5a994323935f07a04b1684e2f3eb7a1fb8a7406/dgaintel-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25d1b0dda441f1b15a117087ae83ac3fe1ddcd6ae5abf9c98966c37be53d1a07",
          "md5": "85980a432a0dc978d59f7bb4dcb2ad2d",
          "sha256": "90fdb84b1a183d7d6f8e2406378de25cf00a59ff8eb52a0533e92e0493dd45a7"
        },
        "downloads": -1,
        "filename": "dgaintel-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "85980a432a0dc978d59f7bb4dcb2ad2d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1174236,
        "upload_time": "2020-02-25T14:43:41",
        "upload_time_iso_8601": "2020-02-25T14:43:41.044717Z",
        "url": "https://files.pythonhosted.org/packages/25/d1/b0dda441f1b15a117087ae83ac3fe1ddcd6ae5abf9c98966c37be53d1a07/dgaintel-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "547b7b0454102bd6e59b1c918ab73800e541ba625100c2b639d09406462c8c58",
          "md5": "27f66460da1745838316aba8f755fcb1",
          "sha256": "3c070834b3ca5ed4d2937e3874e0bbe6d941ba637861f9640d7a37c71df2bcb1"
        },
        "downloads": -1,
        "filename": "dgaintel-2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "27f66460da1745838316aba8f755fcb1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1174252,
        "upload_time": "2020-02-29T00:29:01",
        "upload_time_iso_8601": "2020-02-29T00:29:01.106965Z",
        "url": "https://files.pythonhosted.org/packages/54/7b/7b0454102bd6e59b1c918ab73800e541ba625100c2b639d09406462c8c58/dgaintel-2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18a2c2bc7c0e4fd1a6f0564be4edc9a1837fc40427cf66fd472ed40889853681",
          "md5": "2b59619626e1090dcd402390f507ba6e",
          "sha256": "9d0a95129e4c7dd689ab5f63463781981b591ce3b74f267369d758069068ec62"
        },
        "downloads": -1,
        "filename": "dgaintel-2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2b59619626e1090dcd402390f507ba6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1174274,
        "upload_time": "2020-07-23T20:59:20",
        "upload_time_iso_8601": "2020-07-23T20:59:20.240864Z",
        "url": "https://files.pythonhosted.org/packages/18/a2/c2bc7c0e4fd1a6f0564be4edc9a1837fc40427cf66fd472ed40889853681/dgaintel-2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cc0a0ae8653f30a9562d373f461388455c660ed4d7a22ff34d69bd8ac542110",
          "md5": "be5bbd38eb13254b0faa032a3cf7d822",
          "sha256": "9d72715d6c07a069dd817cfd4f2b94c4acc8af65c15fe65bd0f9f5266e274646"
        },
        "downloads": -1,
        "filename": "dgaintel-2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "be5bbd38eb13254b0faa032a3cf7d822",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1174272,
        "upload_time": "2020-07-24T01:11:46",
        "upload_time_iso_8601": "2020-07-24T01:11:46.071360Z",
        "url": "https://files.pythonhosted.org/packages/9c/c0/a0ae8653f30a9562d373f461388455c660ed4d7a22ff34d69bd8ac542110/dgaintel-2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9cc0a0ae8653f30a9562d373f461388455c660ed4d7a22ff34d69bd8ac542110",
        "md5": "be5bbd38eb13254b0faa032a3cf7d822",
        "sha256": "9d72715d6c07a069dd817cfd4f2b94c4acc8af65c15fe65bd0f9f5266e274646"
      },
      "downloads": -1,
      "filename": "dgaintel-2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "be5bbd38eb13254b0faa032a3cf7d822",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1174272,
      "upload_time": "2020-07-24T01:11:46",
      "upload_time_iso_8601": "2020-07-24T01:11:46.071360Z",
      "url": "https://files.pythonhosted.org/packages/9c/c0/a0ae8653f30a9562d373f461388455c660ed4d7a22ff34d69bd8ac542110/dgaintel-2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}