{
  "info": {
    "author": "Rajesh Prabhu",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![licence](http://img.shields.io/badge/licence-MIT-blue.svg?style=flat)](https://github.com/amueller/word_cloud/blob/master/LICENSE)\n[![DOI](https://zenodo.org/badge/21369/amueller/word_cloud.svg)](https://zenodo.org/badge/latestdoi/21369/amueller/word_cloud)\n\n|      | Linux                                        | macOS                                        | Windows                                      |\n|------|----------------------------------------------|----------------------------------------------|----------------------------------------------|\n| PyPI | [![CircleCI][circleci_image]][circleci_link] | [![TravisCI][travisci_image]][travisci_link] | [![AppVeyor][appveyor_image]][appveyor_link] |\n\n[circleci_link]: https://circleci.com/gh/amueller/word_cloud/tree/master\n[circleci_image]: https://circleci.com/gh/amueller/word_cloud/tree/master.svg?style=svg\n\n[travisci_link]: https://travis-ci.org/amueller/word_cloud\n[travisci_image]: https://travis-ci.org/amueller/word_cloud.svg?branch=master\n\n[appveyor_link]: https://ci.appveyor.com/project/amueller/word-cloud/branch/master\n[appveyor_image]: https://img.shields.io/appveyor/ci/amueller/word-cloud/master.svg\n\nword_cloud\n==========\n\nA little sentence cloud generator in Python. This is a small extension to wordcloud generator by amueller (github.com/amueller/word_cloud). Read more about it on the [blog\npost][blog-post] or the [website][website].\n\nThe code is tested against Python 2.7, 3.4, 3.5, 3.6 and 3.7.\n\n## Installation\n\nIf you are using pip:\n\n    pip install wordcloud\n\nIf you are using conda, you can install from the `conda-forge` channel:\n\n    conda install -c conda-forge wordcloud\n\n\n#### Installation notes\n\nwordcloud depends on `numpy` and `pillow`.\n\nTo save the wordcloud into a file, `matplotlib` can also be installed. See [examples](#examples) below.\n\nIf there are no wheels available for your version of python, installing the\npackage requires having a C compiler set up. Before installing a compiler, report\nan issue describing the version of python and operating system being used.\n\n\n## Examples\n\nCheck out [examples/simple.py][simple] for a short intro. A sample output is:\n\n![Constitution](examples/constitution.png)\n\nOr run [examples/masked.py][masked] to see more options. A sample output is:\n\n![Alice in Wonderland](examples/alice.png)\n\nGetting fancy with some colors:\n![Parrot with rainbow colors](examples/parrot_new.png)\n\nGenerating wordclouds for Arabic:\n\n![Arabic wordlcloud](examples/arabic_example.png)\n\n\n## Command-line usage\n\nThe `wordcloud_cli` tool can be used to generate word clouds directly from the command-line:\n\n\t$ wordcloud_cli --text mytext.txt --imagefile wordcloud.png\n\nIf you're dealing with PDF files, then `pdftotext`, included by default with many Linux distribution, comes in handy:\n\n\t$ pdftotext mydocument.pdf - | wordcloud_cli --imagefile wordcloud.png\n\nIn the previous example, the `-` argument orders `pdftotext` to write the resulting text to stdout, which is then piped to the stdin of `wordcloud_cli.py`.\n\nUse `wordcloud_cli --help` so see all available options.\n\n[blog-post]: http://peekaboo-vision.blogspot.de/2012/11/a-wordcloud-in-python.html\n[website]: http://amueller.github.io/word_cloud/\n[simple]: examples/simple.py\n[masked]: examples/masked.py\n[reddit-cloud]: https://github.com/amueller/reddit-cloud\n[wc2]: http://www.reddit.com/user/WordCloudBot2\n[wc2top]: http://www.reddit.com/user/WordCloudBot2/?sort=top\n[chat-stats]: https://github.com/popcorncolonel/Chat_stats\n[twitter-word-cloud-bot]: https://github.com/defacto133/twitter-wordcloud-bot\n[twitter-wordnuvola]: https://twitter.com/wordnuvola\n[imgur-wordnuvola]: http://defacto133.imgur.com/all/\n[intprob]: http://peekaboo-vision.blogspot.de/2012/11/a-wordcloud-in-python.html#bc_0_28B\n\n\n## Licensing\nThe wordcloud library is MIT licenced, but contains DroidSansMono.ttf, a true type font by Google, that is apache licensed.\nThe font is by no means integral, and any other font can be used by setting the ``font_path`` variable when creating a ``WordCloud`` object.",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/eRajsh/sentence_cloud",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sentencecloud",
    "package_url": "https://pypi.org/project/sentencecloud/",
    "platform": "",
    "project_url": "https://pypi.org/project/sentencecloud/",
    "project_urls": {
      "Homepage": "https://github.com/eRajsh/sentence_cloud"
    },
    "release_url": "https://pypi.org/project/sentencecloud/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A little sentence cloud generator",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8890152,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "658f327b0e1ebbe97427699e39f7e2c61b51b51a220035864fe078bbd7c8fe00",
          "md5": "5ef12415982e12b65d8a2c18a9c8a527",
          "sha256": "112d3bfb51eed4e269f7c78c43639b6b4ed6703d2c88f29386fb94abb414669d"
        },
        "downloads": -1,
        "filename": "sentencecloud-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5ef12415982e12b65d8a2c18a9c8a527",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 193539,
        "upload_time": "2020-12-13T16:13:20",
        "upload_time_iso_8601": "2020-12-13T16:13:20.059071Z",
        "url": "https://files.pythonhosted.org/packages/65/8f/327b0e1ebbe97427699e39f7e2c61b51b51a220035864fe078bbd7c8fe00/sentencecloud-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d7cfca5b30ba4f6ca61a6440d36b095a25e8d66adf13179bcc6507197a389e6",
          "md5": "bfcfa1f9174974158963b559a0c0d2d3",
          "sha256": "bd08f9e87e7b4b2568d785b8c7a793736feba310fc8d7d5b8174eb92fe0dec22"
        },
        "downloads": -1,
        "filename": "sentencecloud-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bfcfa1f9174974158963b559a0c0d2d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 193521,
        "upload_time": "2020-12-13T16:22:36",
        "upload_time_iso_8601": "2020-12-13T16:22:36.852705Z",
        "url": "https://files.pythonhosted.org/packages/9d/7c/fca5b30ba4f6ca61a6440d36b095a25e8d66adf13179bcc6507197a389e6/sentencecloud-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d7cfca5b30ba4f6ca61a6440d36b095a25e8d66adf13179bcc6507197a389e6",
        "md5": "bfcfa1f9174974158963b559a0c0d2d3",
        "sha256": "bd08f9e87e7b4b2568d785b8c7a793736feba310fc8d7d5b8174eb92fe0dec22"
      },
      "downloads": -1,
      "filename": "sentencecloud-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "bfcfa1f9174974158963b559a0c0d2d3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 193521,
      "upload_time": "2020-12-13T16:22:36",
      "upload_time_iso_8601": "2020-12-13T16:22:36.852705Z",
      "url": "https://files.pythonhosted.org/packages/9d/7c/fca5b30ba4f6ca61a6440d36b095a25e8d66adf13179bcc6507197a389e6/sentencecloud-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}