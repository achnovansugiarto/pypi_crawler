{
  "info": {
    "author": "James Saryerwinnie",
    "author_email": "jlsnpi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: BSD License"
    ],
    "description": "Overview\n========\n\nLabmanager Shell is a command line interface to Lab Manager's SOAP API.\nIt currently only supports Lab Manager's external API.\n\n\nCommands\n========\n\nEach command is documented and available via the help command, which either\naccepts a single argument, the name of a command, or no arguments.\nIf no arguments are given, then all the existing commands will be\ndisplayed.  For example::\n\n  (lmsh) help\n\n  Documented commands (type help <topic>):\n  ========================================\n  checkout  delete  deploy  list  machines  show  undeploy\n\n\nThere is also limited amounts of tab completion, mostly in the form\nof autocompleting commands and subcommands.  Auto completing arguments\nsuch as the config ID would require querying the Lab Manager server,\nwhich would take considerable time to autocomplete.\n\nBelow is a sample of the existing commands in action.\n\nList all the machines in the library and workspace::\n\n  (lmsh) list\n    id   |              name              | deployed |    type    |      owner\n  =======+================================+==========+============+================\n  191    | TestServerOne                  | False    | workspace  | testowner1\n  289    | TestServerTwo                  | True     | workspace  | testowner2\n  1393   | TestServerThree                | False    | library    | testowner2\n\n\nShow all the machines that are in config id 289 (useful for seeing the IP\naddresses of the machines)::\n\n  (lmsh) machines 289\n   id  |  name  |   internal    |        MAC        | memory | config\n  =====+========+===============+===================+========+=======\n  9601 | web1   | 172.10.10.100 | 00:50:56:0b:0e:01 | 1024   | 289\n  9602 | web2   | 172.10.10.101 | 00:50:56:0b:0e:02 | 1024   | 289\n  9603 | web3   | 172.10.10.102 | 00:50:56:0b:0e:03 | 1024   | 289\n  9604 | db1    | 172.10.10.103 | 00:50:56:0b:0e:04 | 4096   | 289\n\n\nDeploying/undeploying configurations::\n\n  (lmsh) undeploy 289\n  Undeploying config...\n  (lmsh) deploy unfenced 289\n  Deploying config...\n  (lmsh)\n\n\nSingle Commands For Scriptability\n=================================\n\nYou can also run a single command without entering the interactive shell::\n\n  [user@machine ~]$ lmsh machines 289\n   id  |  name  |   internal    |        MAC        | memory | config\n  =====+========+===============+===================+========+=======\n  9601 | web1   | 172.10.10.100 | 00:50:56:0b:0e:01 | 1024   | 289\n  9602 | web2   | 172.10.10.101 | 00:50:56:0b:0e:02 | 1024   | 289\n  9603 | web3   | 172.10.10.102 | 00:50:56:0b:0e:03 | 1024   | 289\n  9604 | db1    | 172.10.10.103 | 00:50:56:0b:0e:04 | 4096   | 289\n\n\nThis allows you to do things such as programatically undeploying all your\nexisting configurations using the command line/bash::\n\n  for id in $(lmsh list workspace | grep '^[0-9]' | cut -d' ' -f 1)\n  do\n      lmsh undeploy $id\n  done\n\nThough for more complicated uses, you may just want to use the\n``labmanager.api`` module directly in python.\n\n\nConfiguration\n=============\n\nYou can either specify the configuration values via the\ncommand line or an rc file.  For example, the following::\n\n  $ lmsh --hostname=mylabmanager.com --username=myusername \\\n      --organization=myorg --workspace=myworkspace\n\nis equivalent to this::\n\n  $ cat > ~/.lmshrc\n  [default]\n  hostname=mylabmanager.com\n  username=myusername\n  organization=myorg\n  workspace=myworkspace\n\n  $ lmsh\n\nNote that configuration above is in a ``default`` section.  You can\nhave multiple sections defined in your ``~/.lmshrc`` and then specify\nwhich config options to load using the ``--section`` option.\n\nYou can also specify the ``password`` option in the config file.  If\nthe config file does not have the ``password`` option, then you will\nbe prompted for your password on running ``lmsh``::\n\n  $ lmsh\n  password:\n  (lmsh)\n\n\nCommand line options are merged with RC options, so command line options will\noverride configuration values.  This is useful if you want to put *your*\ndefault values in your ``~/.lmshrc`` file.  For example, running this command\n(assuming you have the above config file in ``~/.lmshrc``)::\n\n  $ lmsh --workspace=alternate_workspace\n\nThe ``~/.lmshrc`` is first loaded, and then the workspace value is overriden\nfrom ``myworkspace`` to ``alternate_workspace``.  The end result is that the\n``hostname``, ``username``, and ``organization`` are loaded from the\n``~/.lmshrc`` file and the ``workspace`` value is loaded from the value\nspecified on the command line.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jamesls/labmanager-shell",
    "keywords": "labmanager",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "lmsh",
    "package_url": "https://pypi.org/project/lmsh/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/lmsh/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/jamesls/labmanager-shell"
    },
    "release_url": "https://pypi.org/project/lmsh/0.1.4/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Command line interface to Lab Manager SOAP API",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 794285,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eea0fdf0f8c06406a8898813b81f0ea285a226728f3476fe6fea5141a12e19aa",
          "md5": "7e788de5783009f3e8d226c671c2f4da",
          "sha256": "e31111dc4650bb4e260dcf4f2f5c9a97da9756518af1d2977930e4ed092f4baf"
        },
        "downloads": -1,
        "filename": "lmsh-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7e788de5783009f3e8d226c671c2f4da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6451,
        "upload_time": "2011-06-16T08:15:13",
        "upload_time_iso_8601": "2011-06-16T08:15:13.653179Z",
        "url": "https://files.pythonhosted.org/packages/ee/a0/fdf0f8c06406a8898813b81f0ea285a226728f3476fe6fea5141a12e19aa/lmsh-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f068575ce81c85dfa325ef70f0dacd38e8140a55522c2a2295c8a7b5d135f042",
          "md5": "c73432b1afc771e3019fe2934dafa639",
          "sha256": "6e575ae8d8eed2eb9191ae744fb455bf924322f4fbabb30c0333a36488e14cdd"
        },
        "downloads": -1,
        "filename": "lmsh-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c73432b1afc771e3019fe2934dafa639",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7366,
        "upload_time": "2011-06-16T08:45:06",
        "upload_time_iso_8601": "2011-06-16T08:45:06.727972Z",
        "url": "https://files.pythonhosted.org/packages/f0/68/575ce81c85dfa325ef70f0dacd38e8140a55522c2a2295c8a7b5d135f042/lmsh-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d6ed8fb06b5bc5e6725135dc783375ff85bb4a5fddf96a7965db962911184cb",
          "md5": "aaae7a37385ac84b61122f63eeb9a392",
          "sha256": "370c955fb535280c4e20a2db643ba72950165b5e3b94c00578850b10c627f811"
        },
        "downloads": -1,
        "filename": "lmsh-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "aaae7a37385ac84b61122f63eeb9a392",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8361,
        "upload_time": "2011-06-17T04:24:19",
        "upload_time_iso_8601": "2011-06-17T04:24:19.820134Z",
        "url": "https://files.pythonhosted.org/packages/5d/6e/d8fb06b5bc5e6725135dc783375ff85bb4a5fddf96a7965db962911184cb/lmsh-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3563c52ff57b04535df3586010fe43e793449ea26774a70b456c496f5890aca7",
          "md5": "942782f3d155468b30e4a4580c2e6acb",
          "sha256": "a770e44bf31643cc844f2a7b4963a367134bba06094e0744dbe5f4a73767551a"
        },
        "downloads": -1,
        "filename": "lmsh-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "942782f3d155468b30e4a4580c2e6acb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9283,
        "upload_time": "2011-11-14T01:11:07",
        "upload_time_iso_8601": "2011-11-14T01:11:07.033770Z",
        "url": "https://files.pythonhosted.org/packages/35/63/c52ff57b04535df3586010fe43e793449ea26774a70b456c496f5890aca7/lmsh-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3563c52ff57b04535df3586010fe43e793449ea26774a70b456c496f5890aca7",
        "md5": "942782f3d155468b30e4a4580c2e6acb",
        "sha256": "a770e44bf31643cc844f2a7b4963a367134bba06094e0744dbe5f4a73767551a"
      },
      "downloads": -1,
      "filename": "lmsh-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "942782f3d155468b30e4a4580c2e6acb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9283,
      "upload_time": "2011-11-14T01:11:07",
      "upload_time_iso_8601": "2011-11-14T01:11:07.033770Z",
      "url": "https://files.pythonhosted.org/packages/35/63/c52ff57b04535df3586010fe43e793449ea26774a70b456c496f5890aca7/lmsh-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}