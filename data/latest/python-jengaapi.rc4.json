{
  "info": {
    "author": "Maina Kamau",
    "author_email": "lewiikamaa8@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "[![Pytest CI](https://github.com/MainaKamau92/JengaAPIPythonWrapper/actions/workflows/pytest.yml/badge.svg)](https://github.com/MainaKamau92/JengaAPIPythonWrapper/actions/workflows/pytest.yml) [![codecov](https://codecov.io/gh/MainaKamau92/JengaAPIPythonWrapper/branch/main/graph/badge.svg?token=cm9MaLo7Fc)](https://codecov.io/gh/MainaKamau92/JengaAPIPythonWrapper) [![Maintainability](https://api.codeclimate.com/v1/badges/883850b3a746cbc8f080/maintainability)](https://codeclimate.com/github/MainaKamau92/JengaAPIPythonWrapper/maintainability)\n\n## JengaAPIPythonWrapper\n\nA simple python wrapper around the JengaAPI from Equity Bank\n\n## Setup\n\nInstallation\n\n```\npip install python-jengaapi\n```\n\nA sample of the `.env` variables required include:\n```\nMERCHANT_CODE=1234567\nCONSUMER_SECRET=XXXXXXXXXXXXX\nAPI_KEY=123XXX222\nACCOUNT_NAME=John Doe\nACCOUNT_NUMBER=12345678\nCURRENCY_CODE=KES\nCOUNTRY_CODE=KE\nFOREIGN_CURRENCY_CODE=USD\nPRIVATE_KEY_PATH=path_to_privatekey.pem\n```\n\n### Authorization Service\n#### Fetch Authorization token\n```pycon\n# script.py\nfrom jengaapi.configs.config import app_config\nfrom jengaapi.services.authorization_service import AuthorizationService\n\nuat_config = app_config.get('uat')\n\n# Get the environment variables\nMERCHANT_CODE = uat_config.MERCHANT_CODE\nCONSUMER_SECRET = uat_config.CONSUMER_SECRET\nCOUNTRY_CODE = os.getenv('COUNTRY_CODE')\nACCOUNT_NUMBER = os.getenv('ACCOUNT_NUMBER')\n\n\nauth = AuthorizationService(config=uat_config)\nauth_token = auth.auth_token\nprint(auth_token)\n```\n```shell\n$ python script.py\nBearer eexxxxx.xx.xxxxxx\n```\n## Account Service\n#### Fetch Account Balance\n```pycon\naccount_service = AccountServices(config=uat_config)\n# Get account balance\nsignature = auth.signature((COUNTRY_CODE, ACCOUNT_NO))\naccount_balance = account_service.account_balance(signature, auth_token, COUNTRY_CODE, ACCOUNT_NO)\nprint(account_balance)\n```\n```shell\n$ python script.py\n{\n   \"status\":true,\n   \"code\":0,\n   \"message\":\"success\",\n   \"data\":{\n      \"balances\":[\n         {\n            \"amount\":\"485115080.54\",\n            \"type\":\"Available\"\n         },\n         {\n            \"amount\":\"485115080.54\",\n            \"type\":\"Current\"\n         }\n      ],\n      \"currency\":\"KES\"\n   }\n}\n```\n#### Fetch Account Mini Statement\n```pycon\naccount_service = AccountServices(config=uat_config)\nsignature = auth.signature((COUNTRY_CODE, ACCOUNT_NO))\naccount_mini_statement = account_service.account_mini_statement(signature, auth_token, COUNTRY_CODE, ACCOUNT_NO)\nprint(account_mini_statement)\n```\n```shell\n{\n   \"status\":true,\n   \"code\":0,\n   \"message\":\"success\",\n   \"data\":{\n      \"balance\":484837600.0,\n      \"currency\":\"KES\",\n      \"accountNumber\":\"1450160649886\",\n      \"transactions\":[\n         {\n            \"date\":\"2023-01-12T00:00:00.000\",\n            \"amount\":\"1\",\n            \"description\":\"JENGA CHARGE CREDIT 673579628084879\",\n            \"chequeNumber\":\"None\",\n            \"type\":\"Credit\"\n         },\n         {\n            \"date\":\"2023-01-12T00:00:00.000\",\n            \"amount\":\"1\",\n            \"description\":\"JENGA CHARGE DEBIT 673579628084879\",\n            \"chequeNumber\":\"None\",\n            \"type\":\"Debit\"\n         },\n         {\n            \"date\":\"2023-01-12T00:00:00.000\",\n            \"amount\":\"1\",\n            \"description\":\"JENGA CHARGE CREDIT 673579623845546\",\n            \"chequeNumber\":\"None\",\n            \"type\":\"Credit\"\n         },\n         {\n            \"date\":\"2023-01-12T00:00:00.000\",\n            \"amount\":\"1\",\n            \"description\":\"REV-(673540528125447)JENGA CHARGE DEBIT 6735405275\",\n            \"chequeNumber\":\"None\",\n            \"type\":\"Debit\"\n         }\n      ]\n   }\n}\n```\n#### Fetch Account Opening and Closing Balance\n```pycon\nep_signature = auth.signature((ACCOUNT_NO, COUNTRY_CODE, \"2023-01-01\"))\npayload = dict(\n    countryCode=COUNTRY_CODE,\n    accountId=ACCOUNT_NO,\n    date=\"2023-01-01\",\n)\nopening_closing = account_service.opening_closing_account_balance(ep_signature, auth_token, **payload)\nprint(opening_closing)\n```\n```shell\n{\n   \"status\":true,\n   \"code\":0,\n   \"message\":\"success\",\n   \"data\":{\n      \"balances\":[\n         {\n            \"amount\":\"0\",\n            \"type\":\"Closing Balance\"\n         },\n         {\n            \"amount\":\"0\",\n            \"type\":\"Opening Balance\"\n         }\n      ]\n   }\n}\n```\n### Send Money Service\n#### Send within Equity\n```pycon\nsend_money_service = SendMoneyService(config=uat_config)\npayload = {\n    \"source\": {\n        \"countryCode\": COUNTRY_CODE,\n        \"name\": \"CATHERINE MURANDITSI MUKABWA\",\n        \"accountNumber\": ACCOUNT_NO\n    },\n    \"destination\": {\n        \"type\": \"bank\",\n        \"countryCode\": \"KE\",\n        \"name\": \"Tom Doe\",\n        \"accountNumber\": \"0250163591202\"\n    },\n    \"transfer\": {\n        \"type\": \"InternalFundsTransfer\",\n        \"amount\": \"1000.00\",\n        \"currencyCode\": \"KES\",\n        \"reference\": \"692494625798\",\n        \"date\": \"2023-08-18\",\n        \"description\": \"some remarks here\"\n    }\n}\nep_signature = auth.signature((ACCOUNT_NO,\"1000.00\", \"KES\", \"692494625798\"))\nsend_money_within_equity = send_money_service.send_within_equity(ep_signature, auth_token, **payload)\nprint(send_money_within_equity)\n```\n```shell\n{\n  \"status\": true,\n  \"code\": 0,\n  \"message\": \"success\",\n  \"data\": {\n    \"transactionId\": \"54154\",\n    \"status\": \"SUCCESS\"\n  }\n}\n```\n#### Send to mobile wallets\n```pycon\npayload = {\n    \"source\": {\n        \"countryCode\": \"KE\",\n        \"name\": \"CATHERINE MURANDITSI MUKABWA\",\n        \"accountNumber\": ACCOUNT_NO\n    },\n    \"destination\": {\n        \"type\": \"mobile\",\n        \"countryCode\": \"KE\",\n        \"name\": \"A N.Other\",\n        \"mobileNumber\": \"0722123456\",\n        \"walletName\": \"Mpesa\"\n    },\n    \"transfer\": {\n        \"type\": \"MobileWallet\",\n        \"amount\": \"1000\",\n        \"currencyCode\": \"KES\",\n        \"date\": \"2023-01-13\",\n        \"description\": \"some remarks here\"\n    }\n}\nep_signature = auth.signature((\"1000\", \"KES\", \"692494625799\", ACCOUNT_NO))\nsend_money_within_equity = send_money_service.send_to_mobile_wallets(ep_signature, auth_token, **payload)\nprint(send_money_within_equity)\n```\n```shell\n{\n    \"status\": true,\n    \"code\": 0,\n    \"message\": \"success\",\n    \"data\": {\n      \"transactionId\": \"\",\n      \"status\": \"SUCCESS\"\n    }\n}\n```\n\n#### Jenga API docs\nFor official documentatio the Equity bank api refer [here](https://developer.jengaapi.io/reference/welcome)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MainaKamau92/JengaAPIPythonWrapper",
    "keywords": "",
    "license": "BSD-2-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-jengaapi",
    "package_url": "https://pypi.org/project/python-jengaapi/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-jengaapi/",
    "project_urls": {
      "Homepage": "https://github.com/MainaKamau92/JengaAPIPythonWrapper"
    },
    "release_url": "https://pypi.org/project/python-jengaapi/2.0.1/",
    "requires_dist": [
      "requests (>=2.5.4.1)",
      "pycryptodome (==3.10.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "A python wrapper for the Jenga API.",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16435242,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef892498b01138b9fd41308d332064c5f15ed11e1e09fb0064172155fc8ebabd",
          "md5": "196e76668f75af972b09fe5c12a1547d",
          "sha256": "8edd0b41932e980681aa22b02df261e7e322ecd1e4c6c465aa2bbc5f397e6276"
        },
        "downloads": -1,
        "filename": "python_jengaapi-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "196e76668f75af972b09fe5c12a1547d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11143,
        "upload_time": "2021-09-04T12:09:42",
        "upload_time_iso_8601": "2021-09-04T12:09:42.095418Z",
        "url": "https://files.pythonhosted.org/packages/ef/89/2498b01138b9fd41308d332064c5f15ed11e1e09fb0064172155fc8ebabd/python_jengaapi-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33d686ccdbc5b497d9763d1b57c3d2ea2a2d19ea016e89a4a7a314530ca5412e",
          "md5": "61853e16d8430bcc50f04fc6f433ab55",
          "sha256": "627c3a04f9135c86d299aa16a82bd50bf991615cb36e9876a853c0da5260ab34"
        },
        "downloads": -1,
        "filename": "python-jengaapi-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "61853e16d8430bcc50f04fc6f433ab55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9340,
        "upload_time": "2021-09-04T12:09:44",
        "upload_time_iso_8601": "2021-09-04T12:09:44.114809Z",
        "url": "https://files.pythonhosted.org/packages/33/d6/86ccdbc5b497d9763d1b57c3d2ea2a2d19ea016e89a4a7a314530ca5412e/python-jengaapi-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf60f68fe48703efc6c10c9257ff8c1ce1c997324a2a5d89736419f5fb14cf65",
          "md5": "5a61aff412c9d22757f0f730c893521d",
          "sha256": "e4a4a1d0a70a5869b0859268f89b855639dcd790505097463ca4298ec0fbc60b"
        },
        "downloads": -1,
        "filename": "python_jengaapi-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a61aff412c9d22757f0f730c893521d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11140,
        "upload_time": "2021-09-04T12:13:59",
        "upload_time_iso_8601": "2021-09-04T12:13:59.031844Z",
        "url": "https://files.pythonhosted.org/packages/bf/60/f68fe48703efc6c10c9257ff8c1ce1c997324a2a5d89736419f5fb14cf65/python_jengaapi-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d8c7ef2e3cc61d097ec8c4377b3f741f92275bc8ae126ed79e03eac0372bfbf",
          "md5": "df725bb3fe85f5d1d4bbde333ed22795",
          "sha256": "7da13217d08b636dd4abf3d32eb89b14fa596b52905e7565402e8dac8f0434fa"
        },
        "downloads": -1,
        "filename": "python-jengaapi-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "df725bb3fe85f5d1d4bbde333ed22795",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9331,
        "upload_time": "2021-09-04T12:14:02",
        "upload_time_iso_8601": "2021-09-04T12:14:02.281870Z",
        "url": "https://files.pythonhosted.org/packages/7d/8c/7ef2e3cc61d097ec8c4377b3f741f92275bc8ae126ed79e03eac0372bfbf/python-jengaapi-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09babf5b4f157432b05c1056d8328605e217e55770d1a77441e380ff65049015",
          "md5": "d45a91f97dabd0573cf6678628ea7b7d",
          "sha256": "b171d5bcbacdc9816ed7f8a537cdba338a1f24effaa9678e12b24e41c5ebde10"
        },
        "downloads": -1,
        "filename": "python_jengaapi-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d45a91f97dabd0573cf6678628ea7b7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10539,
        "upload_time": "2023-01-15T12:08:38",
        "upload_time_iso_8601": "2023-01-15T12:08:38.101345Z",
        "url": "https://files.pythonhosted.org/packages/09/ba/bf5b4f157432b05c1056d8328605e217e55770d1a77441e380ff65049015/python_jengaapi-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c87777e9172b0251d0e75e60e48152276d38ce19e9b25f851db43a5f7fd5093",
          "md5": "0d05a5e63ec26a4504f302a1be8bb421",
          "sha256": "9f1c5a9d05197507b647cb82de063059c40d2976e32403c935b94b1c8b8a94a9"
        },
        "downloads": -1,
        "filename": "python-jengaapi-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0d05a5e63ec26a4504f302a1be8bb421",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8890,
        "upload_time": "2023-01-15T12:08:40",
        "upload_time_iso_8601": "2023-01-15T12:08:40.898271Z",
        "url": "https://files.pythonhosted.org/packages/7c/87/777e9172b0251d0e75e60e48152276d38ce19e9b25f851db43a5f7fd5093/python-jengaapi-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de99178da604b8b1dc470b4e6c2b9fffe7164b4818cb7f80413a5e265136b978",
          "md5": "9dbdb3d35c10784e2aa423e084c5e28a",
          "sha256": "7c983c767e01010fd53d5e9211fd05bc6f2a9690205f3a0b6e317f56e8b7b706"
        },
        "downloads": -1,
        "filename": "python_jengaapi-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9dbdb3d35c10784e2aa423e084c5e28a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10568,
        "upload_time": "2023-01-15T12:40:13",
        "upload_time_iso_8601": "2023-01-15T12:40:13.649740Z",
        "url": "https://files.pythonhosted.org/packages/de/99/178da604b8b1dc470b4e6c2b9fffe7164b4818cb7f80413a5e265136b978/python_jengaapi-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b26429eb3428f0c2f01e39d391fa1df40a32b62bb63356b7e8f087721af83e49",
          "md5": "255d91d0814b290e356f4f9fd794337a",
          "sha256": "ee15903c1d598622fbdfd58aa32b2caf23f0d8eaff6b9d08db6eac81b0c2d8e0"
        },
        "downloads": -1,
        "filename": "python-jengaapi-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "255d91d0814b290e356f4f9fd794337a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8979,
        "upload_time": "2023-01-15T12:40:15",
        "upload_time_iso_8601": "2023-01-15T12:40:15.703649Z",
        "url": "https://files.pythonhosted.org/packages/b2/64/29eb3428f0c2f01e39d391fa1df40a32b62bb63356b7e8f087721af83e49/python-jengaapi-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de99178da604b8b1dc470b4e6c2b9fffe7164b4818cb7f80413a5e265136b978",
        "md5": "9dbdb3d35c10784e2aa423e084c5e28a",
        "sha256": "7c983c767e01010fd53d5e9211fd05bc6f2a9690205f3a0b6e317f56e8b7b706"
      },
      "downloads": -1,
      "filename": "python_jengaapi-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9dbdb3d35c10784e2aa423e084c5e28a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10568,
      "upload_time": "2023-01-15T12:40:13",
      "upload_time_iso_8601": "2023-01-15T12:40:13.649740Z",
      "url": "https://files.pythonhosted.org/packages/de/99/178da604b8b1dc470b4e6c2b9fffe7164b4818cb7f80413a5e265136b978/python_jengaapi-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b26429eb3428f0c2f01e39d391fa1df40a32b62bb63356b7e8f087721af83e49",
        "md5": "255d91d0814b290e356f4f9fd794337a",
        "sha256": "ee15903c1d598622fbdfd58aa32b2caf23f0d8eaff6b9d08db6eac81b0c2d8e0"
      },
      "downloads": -1,
      "filename": "python-jengaapi-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "255d91d0814b290e356f4f9fd794337a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8979,
      "upload_time": "2023-01-15T12:40:15",
      "upload_time_iso_8601": "2023-01-15T12:40:15.703649Z",
      "url": "https://files.pythonhosted.org/packages/b2/64/29eb3428f0c2f01e39d391fa1df40a32b62bb63356b7e8f087721af83e49/python-jengaapi-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}