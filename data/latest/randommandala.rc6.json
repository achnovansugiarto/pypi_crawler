{
  "info": {
    "author": "Anton Antonov",
    "author_email": "antononcube@posteo.net",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Artistic License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Random Mandala Python package\n\n***Anton Antonov***    \n[Python-packages at GitHub/antononcube](https://github.com/antononcube/Python-packages)   \n***November 2021***    \n***February 2022*** \n\n## Introduction\n\nThis Python package implements the function `random_mandala` that generates plots (and images) of random mandalas.\n\nThe design, implementation *strategy*, and unit tests closely resemble the Wolfram Repository Function (WFR)\n[`RandomMandala`](https://resources.wolframcloud.com/FunctionRepository/resources/RandomMandala),\n[AAf1].\n\n(Another, very similar function at WFR is\n[`RandomScribble`](https://resources.wolframcloud.com/FunctionRepository/resources/RandomScribble), [AAf2].)\n\nThe Bezier mandala seeds are created using the Python package\n[`bezier`](https://pypi.org/project/bezier/),\n[DHp1].\n\nFor detailed descriptions of Machine Learning studies that use collections of random mandalas see the articles\n[AA1, AA2].\n\n------\n\n## Installation\n\nTo install from GitHub use the shell command:\n\n```shell\npython -m pip install git+https://github.com/antononcube/Python-packages.git#egg=RandomMandala\\&subdirectory=RandomMandala\n```\n\nTo install from PyPI:\n\n```shell\npython -m pip install RandomMandala\n```\n\n------\n\n## Details and arguments\n\n- The mandalas made by `random_mandala` are generated through rotational symmetry of a “seed segment”. \n\n- The function `random_mandala` returns `matplotlib` figures (objects of type `matplotlib.figure.Figure`)\n\n- The function `random_mandala` can be given arguments of the creation function `matplotlib.pyplot.figure`.\n\n- If `n_rows` and `n_columns` are `None` a `matplotlib` figure object with one axes object is returned.\n\n- There are two modes of making random mandalas: (i) single-mandala mode and (ii) multi-mandala mode. The multi-mandala mode is activated by giving the `radius` argument a list of positive numbers.\n\n- If the argument `radius` is a list of positive reals, then a \"multi-mandala\" is created\n  with the mandalas corresponding to each number in the radius list being overlain.  \n\n- Here are brief descriptions of the arguments:\n\n  - `n_rows`: Number of rows in the result figure.\n\n  - `n_columns`: Number of columns in the result figure.\n\n  - `radius`: Radius for the mandalas, a flot or a list of floats. If a list of floats the   mandalas are overlain.\n\n  - `rotational_symmetry_order`: Number of copies of the seed segment that comprise the mandala.\n\n  - `connecting_function`: Connecting function, one of \"line\", \"fill\", \"bezier\", \"bezier_fill\", \"random\", or `None`. If 'random' or `None` a random choice of the rest of values is made.\n\n  - `number_of_elements`: Controls how may graphics elements are in the seed segment.\n\n  - `symmetric_seed`: Specifies should the seed segment be symmetric or not.\n    If 'random' of None random choice between `True` and `False` is made.\n\n  - `face_color`: Face (fill) color.\n\n  - `edge_color`: Edge (line) color.\n\n-----\n\n## Examples\n\nLoad the package `RandomMandala`, `matplotlib`, and `PIL`:\n\n\n```python\nfrom RandomMandala import random_mandala, figure_to_image\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport matplotlib.cm\nfrom PIL import Image, ImageOps\nfrom mpl_toolkits.axes_grid1 import ImageGrid\nimport random\n```\n\nHere we generate a random mandala:\n\n\n```python\nrandom.seed(99)\nfig = random_mandala()\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_5_0.png)\n    \n\nHere we generate a figure with 12 (3x4) random mandalas:\n\n```python\nrandom.seed(33)\nfig2 = random_mandala(n_rows=3, n_columns=4, figsize=(6,6))\nfig2.tight_layout()\nplt.show()\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_7_0.png)\n    \n\n\n------\n\n## Arguments details\n\n### n_rows, n_columns\n\nWith the argument `n_rows` and `n_columns` are specified the number of rows and columns respectively in the figure object; `n_rows * n_columns` mandalas are generated:\n\n\n```python\nrandom.seed(22)\nfig=random_mandala(n_rows=1, n_columns=3)\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_9_0.png)\n    \n\n\n### connecting_function\n\nThe argument `connecting_function` specifies which graphics primitives to be used over the seed segment points:\n\n\n```python\nfig = matplotlib.pyplot.figure(figsize=(6, 6), dpi=120)\n\nk = 1\nfor cf in ['line', 'fill', 'bezier', 'bezier_fill', 'random', None]:\n    random.seed(667)\n    fig = random_mandala(connecting_function=cf,\n                         figure=fig,\n                         location=(2, 3, k))\n    ax = fig.axes[-1]\n    ax.set_title(str(cf))\n    k = k + 1\nplt.show()\nplt.close(fig)\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_11_0.png)\n    \n\n\nWith values `None` or `\"random\"` a random choice is made from `['line', 'fill', 'bezier', 'bezier_fill']`.\n\n### radius\n\nIn single-mandala mode the argument `radius` specifies the radius of the seed segment and the mandala:\n\n\n```python\nfig = matplotlib.pyplot.figure(figsize=(8, 4), dpi=120)\nk = 1\nfor r in [5, 10, 15, 20]:\n    random.seed(2)\n    fig = random_mandala(connecting_function=\"line\", \n                         radius=r,\n                         figure = fig,\n                         location = (1, 4, k))\n    ax = fig.axes[-1]\n    ax.set_title(\"radius:\" + str(r))\n    ax.axis(\"on\")\n    k = k + 1\nplt.show()\nplt.close(fig)\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_14_0.png)\n    \n\n\nIf the value given to `radius` is a list of positive numbers then multi-mandala mode is used.\nIf `radius=[r[0],...,r[k]]`, then for each `r[i]` is made a mandala with radius `r[i]` and the mandalas are drawn upon each other according to their radii order:\n\n\n```python\nrandom.seed(99)\nfig3=random_mandala(radius=[8,5,3], \n                    face_color=[\"blue\", \"green\", 'red'],\n                    connecting_function=\"fill\")                \n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_16_0.png)\n    \n\n\n**Remark:** The code above used different colors for the different radii.\n\n### rotational_symmetry_order\n\nThe argument `rotational_symmetry_order` specifies how many copies of the seed segment comprise the mandala:\n\n\n```python\nfig = matplotlib.pyplot.figure(figsize=(6, 12), dpi=120)\nk = 1\nfor rso in [2, 3, 4, 6]:\n    random.seed(122)\n    fig = random_mandala(connecting_function=\"fill\", \n                         symmetric_seed=True,\n                         rotational_symmetry_order=rso,\n                         figure = fig,\n                         location = (1, 4, k))\n    ax = fig.axes[-1]\n    ax.set_title(\"order:\" + str(rso))\n    k = k + 1\nplt.show()\nplt.close(fig)\n\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_20_0.png)\n    \n\n\n### number_of_elements\n\nThe argument `number_of_elements` controls how may graphics elements are in the seed segment:\n\n\n```python\nfig = matplotlib.pyplot.figure(figsize=(6, 6), dpi=120)\nk = 1\nfor ne in [2, 3, 4, 5, 6, 12]:\n    random.seed(2)\n    fig = random_mandala(connecting_function=\"line\",\n                         symmetric_seed=True,\n                         rotationa_symmetry_order=6,\n                         number_of_elements=ne,\n                         figure = fig,\n                         location = (2, 3, k))\n    ax = fig.axes[-1]\n    ax.set_title(\"n:\" + str(ne))\n    k = k + 1\nplt.show()\nplt.close(fig)\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_22_0.png)\n    \n\n\n\n```python\nfig = matplotlib.pyplot.figure(figsize=(4, 4), dpi=120)\nk = 1\nfor ne in [5, 10, 15, 20]:\n    random.seed(26)\n    fig = random_mandala(connecting_function=\"bezier\",\n                         radius=[1],\n                         symmetric_seed=True,\n                         rotationa_symmetry_order=6,\n                         number_of_elements=ne,\n                         figure = fig,\n                         location = (2, 2, k))\n    ax = fig.axes[-1]\n    ax.set_title(\"n:\" + str(ne))\n    k = k + 1\nplt.show()\nplt.close(fig)\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_23_0.png)\n    \n\n\n### symmetric_seed\n\nThe argument `symmetric_seed` specifies should the seed segment be symmetric or not:\n\n\n```python\nfig = matplotlib.pyplot.figure(figsize=(4, 4), dpi=120)\nk = 1\nfor ssd in [True, False]:\n    random.seed(2)\n    fig = random_mandala(connecting_function=\"fill\", \n                         symmetric_seed=ssd,\n                         figure = fig,\n                         location = (1, 2, k))\n    ax = fig.axes[-1]\n    ax.set_title(str(ssd))\n    k = k + 1\nplt.show()\nplt.close(fig)\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_25_0.png)\n    \n\n\n### face_color and edge_color\n\nThe arguments `face_color` and `edge_color` take as values strings or list of strings that specify the coloring of the filled-in polygons and lines respectively:\n\n\n```python\nfig = matplotlib.pyplot.figure(figsize=(6,3), dpi=120)\nk = 1\nfor fc in [[\"0.8\", \"0.6\", \"0.2\"], [\"olive\", \"gold\", \"red\"]]:\n    random.seed(11)\n    fig = random_mandala(radius=[10,6,4],\n     \t\t\t\t\t connecting_function=\"bezier_fill\", \n                         symmetric_seed=True,\n                         face_color=fc,\n                         figure = fig,\n                         location = (1, 2, k))\n    ax = fig.axes[-1]\n    ax.set_title(str(fc))\n    k = k + 1\n    \nplt.show()\nplt.close(fig)\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_27_0.png)\n    \n\n\n### alpha\n\nThe argument `alpha` controls the opacity of the plots; it takes as values `None` and floats between 0 and 1.\n\n\n```python\nfig = matplotlib.pyplot.figure(figsize=(6,3), dpi=120)\nk = 1\nfor al in [None, 0.2, 1.0]:\n    random.seed(23)\n    fig = random_mandala(radius=[10,6,4],\n     \t\t\t\t\t connecting_function=\"bezier_fill\",\n                         symmetric_seed=True,\n                         alpha=al,\n                         color_mapper=matplotlib.cm.rainbow_r,\n                         figure = fig,\n                         location = (1, 3, k))\n    ax = fig.axes[-1]\n    ax.set_title(str(al))\n    k = k + 1\n\nplt.show()\nplt.close(fig)\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_29_0.png)\n    \n\n\n### color_mapper\n\nThe argument `color_mapper` takes as values `None` and `matplotlib.colors.Colormap` objects.\nSee the color mappers in the reference page [\"color example code: colormaps_reference.py\"](https://matplotlib.org/2.0.2/examples/color/colormaps_reference.html).\nIf `color_mapper` is specified then the arguments `face_color` and `edge_color` are ignored.\nHere is an example using two color mappers:\n\n\n```python\nfig = matplotlib.pyplot.figure(figsize=(6,3), dpi=120)\ncMappers=[matplotlib.cm.rainbow_r, matplotlib.cm.Accent_r]\ncMappersNames=[\"rainbow_r\", \"Accent_r\"]\nfor k in range(2): \n    random.seed(15)\n    fig = random_mandala(radius=[10,6,4],\n                         connecting_function=\"bezier_fill\",\n                         symmetric_seed=True,\n                         color_mapper=cMappers[k],\n                         figure = fig,\n                         location = (1, 2, k+1))\n    ax = fig.axes[-1]\n    ax.set_title(cMappersNames[k])\n    \nplt.show()\nplt.close(fig)\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_31_0.png)\n    \n\n\n------\n\n## Applications\n\n### Generate a collection of images\n\nIn certain Machine Learning (ML) studies it can be useful to be able to generate large enough collections of (random) images. \n\nIn the code block below we: \n- Generate 64 random mandala *plots*\n- Convert them into `PIL` images using the package function `figure_to_image`\n- Invert and binarize images\n- Plot the images in an image grid\n\n\n```python\n# A list to accumulate random mandala images\nmandala_images = []\n\n# Generation loop\nrandom.seed(443)\nfor i in range(64):\n    \n    # Generate one random mandala figure\n    fig2 = random_mandala(n_rows=None,\n                          n_columns=None,\n                          radius=[8, 6, 3],\n                          rotational_symmetry_order=6,\n                          symmetric_seed=True,\n                          connecting_function='random',\n                          face_color=\"0.\")\n    fig2.tight_layout()\n    \n    # Convert the figure into an image and add it to the list\n    mandala_images = mandala_images + [figure_to_image(fig2)]\n    \n    # Close figure to save memoru\n    plt.close(fig2)\n\n# Invert image colors    \nmandala_images2 = [ImageOps.invert(img) for img in mandala_images]\n\n# Binarize images\nmandala_images3 = [im.convert('1') for im in mandala_images2]\n\n# Make a grid of images and display it\nfig3 = plt.figure(figsize=(14., 14.))\ngrid = ImageGrid(fig3, 111,\n                 nrows_ncols=(8, 8),\n                 axes_pad=0.02,\n                 )\n\nfor ax, img in zip(grid, mandala_images3):\n    ax.imshow(img)\n    ax.set(xticks=[], yticks=[])\n\nplt.show()\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_33_0.png)\n    \n\n\n## Neat examples\n    \n### A table of random mandalas\n\n\n```python\nrandom.seed(124)\nfig=random_mandala(n_rows=6, n_columns=6, figsize=(10,10), dpi=240)\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_35_0.png)\n    \n\n\n## A table of colorized mandalas\n\n\n```python\nfig = matplotlib.pyplot.figure(figsize=(10, 10), dpi=120)\nk = 1\nrandom.seed(56)\nfor i in range(36):\n    rs=list(range(1,random.choice([3,4,5,6])+1))\n    rs.sort()\n    rs.reverse()\n\n    fig = random_mandala(connecting_function=\"bezier_fill\",\n                         color_mapper=matplotlib.cm.gist_earth,\n   \t\t\t\t\t\t symmetric_seed=True,\n                         radius=rs,\n                         rotational_symmetry_order=random.choice([3,4,5,6,7]),\n                         number_of_elements=random.choice([2,3,4]),\n                         figure=fig,\n                         location=(6, 6, k))\n    ax = fig.axes[-1]\n    ax.set_axis_off()\n    k = k + 1\n\nfig.tight_layout()\nplt.show()\nplt.close(fig)\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_37_0.png)\n    \n\n\n### A table of open colorized mandalas\n\n\n```python\nfig = matplotlib.pyplot.figure(figsize=(10, 10), dpi=120)\nk = 1\nrandom.seed(883)\nfor rso in [2 * random.random() + 2 for _ in range(36)]:\n    random.seed(33)\n    fig = random_mandala(connecting_function=\"bezier_fill\",\n                         radius=3,\n                         face_color=\"darkblue\",\n                         rotational_symmetry_order=rso,\n                         number_of_elements=8,\n                         figure=fig,\n                         location=(6, 6, k))\n    ax = fig.axes[-1]\n    ax.set_axis_off()\n    k = k + 1\n\nplt.show()\nplt.close(fig)\n```\n\n\n    \n![png](https://github.com/antononcube/Python-packages/raw/main/RandomMandala/docs/img/output_39_0.png)\n    \n\n\n------\n\n## Acknowledgements\n\n- [Johannes Huessy](https://github.com/jhuessy) for discussing different design elements.\n\n- [Mr.T](https://stackoverflow.com/users/8881141/mr-t) for \n  [figuring out and explaining the opacity argument implementation](https://stackoverflow.com/a/71267997/14163984).\n\n\n------\n\n## References\n\n### Articles\n\n[AA1] Anton Antonov,\n[\"Comparison of dimension reduction algorithms over mandala images generation\"](https://mathematicaforprediction.wordpress.com/2017/02/10/comparison-of-dimension-reduction-algorithms-over-mandala-images-generation/),\n(2017),\n[MathematicaForPrediction\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/antononcube/Python-packages/tree/main/RandomMandala",
    "keywords": "random,mandala,random mandala,mandala diagram,image generation,generative art",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "RandomMandala",
    "package_url": "https://pypi.org/project/RandomMandala/",
    "platform": "",
    "project_url": "https://pypi.org/project/RandomMandala/",
    "project_urls": {
      "Homepage": "https://github.com/antononcube/Python-packages/tree/main/RandomMandala"
    },
    "release_url": "https://pypi.org/project/RandomMandala/0.6.0/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "bezier",
      "pillow"
    ],
    "requires_python": ">=3.7",
    "summary": "Generator of random mandalas.",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13012950,
  "releases": {
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f602fd5eda49ff8979cde885ea02b17bad71b202c2e9723db946e179e5bc52ba",
          "md5": "c3f3aeebb6352b54eec0f39fa8a07232",
          "sha256": "84fa8b02241ec79c3b9765cd79a46c813275fed2c86e080e4c7fcbbbdcc56f57"
        },
        "downloads": -1,
        "filename": "RandomMandala-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3f3aeebb6352b54eec0f39fa8a07232",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13391,
        "upload_time": "2021-11-29T18:06:17",
        "upload_time_iso_8601": "2021-11-29T18:06:17.855735Z",
        "url": "https://files.pythonhosted.org/packages/f6/02/fd5eda49ff8979cde885ea02b17bad71b202c2e9723db946e179e5bc52ba/RandomMandala-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f84093f27e3c1edc7f8af9405b10f3974be91aef39346f90ab894f96d373430",
          "md5": "164dcde03cbc330d106d481b24fffaa6",
          "sha256": "619c4d9ea137322136cde1b0f32844ac49711f318ed0aa96eaccd6b80ca91e93"
        },
        "downloads": -1,
        "filename": "RandomMandala-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "164dcde03cbc330d106d481b24fffaa6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15510,
        "upload_time": "2021-11-29T18:06:19",
        "upload_time_iso_8601": "2021-11-29T18:06:19.481491Z",
        "url": "https://files.pythonhosted.org/packages/6f/84/093f27e3c1edc7f8af9405b10f3974be91aef39346f90ab894f96d373430/RandomMandala-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5529c72f31529293b2fa0c5aa13a0bab7f9e1cdab079f458c148b3ed1dea391d",
          "md5": "4a7e5d11020bf223c36a62fb9f45b21a",
          "sha256": "931f7d94994630362bf29021b9f30ef8fa442673daf915a70702376c2c9fc0ab"
        },
        "downloads": -1,
        "filename": "RandomMandala-0.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a7e5d11020bf223c36a62fb9f45b21a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13907,
        "upload_time": "2021-11-29T21:31:23",
        "upload_time_iso_8601": "2021-11-29T21:31:23.022483Z",
        "url": "https://files.pythonhosted.org/packages/55/29/c72f31529293b2fa0c5aa13a0bab7f9e1cdab079f458c148b3ed1dea391d/RandomMandala-0.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bfa44d915054a1a303779813e8da96a7e7b5747982dde4539a88da3cc69ca1a",
          "md5": "7ca9cb148d6d514356399ddb2a6f28e9",
          "sha256": "3148308f7a5b7fcbeed3641838449149bd05a4f9d4674122c94af834a258930c"
        },
        "downloads": -1,
        "filename": "RandomMandala-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7ca9cb148d6d514356399ddb2a6f28e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16381,
        "upload_time": "2021-11-29T21:31:25",
        "upload_time_iso_8601": "2021-11-29T21:31:25.197242Z",
        "url": "https://files.pythonhosted.org/packages/4b/fa/44d915054a1a303779813e8da96a7e7b5747982dde4539a88da3cc69ca1a/RandomMandala-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "130e7f8403391ad347ece3627f00322ff7c8e06c61d67055db45aeeea36e1163",
          "md5": "b52d0eb9cae61ce1ebe5bc00bed2ce51",
          "sha256": "56fb1023517b72185bec7d0ab77a2f33b755e5d9db6f4ef1ac76d4d9ace393f9"
        },
        "downloads": -1,
        "filename": "RandomMandala-0.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b52d0eb9cae61ce1ebe5bc00bed2ce51",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13932,
        "upload_time": "2021-11-30T01:03:45",
        "upload_time_iso_8601": "2021-11-30T01:03:45.658140Z",
        "url": "https://files.pythonhosted.org/packages/13/0e/7f8403391ad347ece3627f00322ff7c8e06c61d67055db45aeeea36e1163/RandomMandala-0.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63286b061af28af26852437136417b3833d208ebd96e28bbf7f63f7bd63a8bbb",
          "md5": "fcc281857d040285f16080d8b244082c",
          "sha256": "61e61546611fe266d4f49473f8e64210c02489a56974d8e63361f99e0d339f02"
        },
        "downloads": -1,
        "filename": "RandomMandala-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fcc281857d040285f16080d8b244082c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16502,
        "upload_time": "2021-11-30T01:03:47",
        "upload_time_iso_8601": "2021-11-30T01:03:47.605292Z",
        "url": "https://files.pythonhosted.org/packages/63/28/6b061af28af26852437136417b3833d208ebd96e28bbf7f63f7bd63a8bbb/RandomMandala-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dfffa458a55e2f98999094b44076d6f0b87230586c287052bb58ecdc36510b9",
          "md5": "98db2dc581aad5ca93e67aa06f2ef7b5",
          "sha256": "7e60b294c1404fb4b7e1b781ae79369660517c01dd8e23078d0823cdf2861aad"
        },
        "downloads": -1,
        "filename": "RandomMandala-0.5.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98db2dc581aad5ca93e67aa06f2ef7b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13985,
        "upload_time": "2021-12-04T16:00:31",
        "upload_time_iso_8601": "2021-12-04T16:00:31.493270Z",
        "url": "https://files.pythonhosted.org/packages/3d/ff/fa458a55e2f98999094b44076d6f0b87230586c287052bb58ecdc36510b9/RandomMandala-0.5.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a398fef71eec635fdeddfa279bb95a5c3b3076390a7c15b108bb29b0e64a4df2",
          "md5": "65f79b071e7b797b025562e6de3b8445",
          "sha256": "7fe0b69a6fbc4fa232ad1d1d4e961b030748d8cadcf6b6aac2c06761d7b5f3c7"
        },
        "downloads": -1,
        "filename": "RandomMandala-0.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "65f79b071e7b797b025562e6de3b8445",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16561,
        "upload_time": "2021-12-04T16:00:33",
        "upload_time_iso_8601": "2021-12-04T16:00:33.494995Z",
        "url": "https://files.pythonhosted.org/packages/a3/98/fef71eec635fdeddfa279bb95a5c3b3076390a7c15b108bb29b0e64a4df2/RandomMandala-0.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0adf734da1547357350319215c0f000ab1befbbafe1840221e36c211e24a115",
          "md5": "8108f721e218eca28652a47726488175",
          "sha256": "ade6c02ffdecd7c53a3bd6218d3488bc0e7ac680cae397fe8d5a6c78fe4a1e72"
        },
        "downloads": -1,
        "filename": "RandomMandala-0.5.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8108f721e218eca28652a47726488175",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14528,
        "upload_time": "2021-12-07T11:31:14",
        "upload_time_iso_8601": "2021-12-07T11:31:14.909100Z",
        "url": "https://files.pythonhosted.org/packages/a0/ad/f734da1547357350319215c0f000ab1befbbafe1840221e36c211e24a115/RandomMandala-0.5.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c37dbb6c54e0d64ef31de67c8530b399ea3e2e781a611f565d12a79f6c075985",
          "md5": "189f035e0d62df0b57cf92abba02793a",
          "sha256": "ab43af09541f85f4fcdf1d6187a47d1c7185df02843ca847d29c71a1a032018a"
        },
        "downloads": -1,
        "filename": "RandomMandala-0.5.5.tar.gz",
        "has_sig": false,
        "md5_digest": "189f035e0d62df0b57cf92abba02793a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17439,
        "upload_time": "2021-12-07T11:31:16",
        "upload_time_iso_8601": "2021-12-07T11:31:16.764314Z",
        "url": "https://files.pythonhosted.org/packages/c3/7d/bb6c54e0d64ef31de67c8530b399ea3e2e781a611f565d12a79f6c075985/RandomMandala-0.5.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b24ea60447ff10f40d0491a61f8cfcc4e8017365af587ed2fc75fee2b61899d3",
          "md5": "e4373288ce51a646f0e6fa15fd556858",
          "sha256": "cf7dd13ae40ea76cd813766f63f685d76264ba8024af3cc9c40a342c6418e40c"
        },
        "downloads": -1,
        "filename": "RandomMandala-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4373288ce51a646f0e6fa15fd556858",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14890,
        "upload_time": "2022-02-25T20:02:11",
        "upload_time_iso_8601": "2022-02-25T20:02:11.951701Z",
        "url": "https://files.pythonhosted.org/packages/b2/4e/a60447ff10f40d0491a61f8cfcc4e8017365af587ed2fc75fee2b61899d3/RandomMandala-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7f25847b4f02af8a5a24324e5cc7f35bd4749d24ff53c7e8099a3fd9bdd3f8d",
          "md5": "445877bf9f83c05f8df0c22d67661c85",
          "sha256": "824202563c815d45b8d88d5f863c4bbce294a30cac0a15ff60af7873dc99e69f"
        },
        "downloads": -1,
        "filename": "RandomMandala-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "445877bf9f83c05f8df0c22d67661c85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17902,
        "upload_time": "2022-02-25T20:02:14",
        "upload_time_iso_8601": "2022-02-25T20:02:14.370170Z",
        "url": "https://files.pythonhosted.org/packages/b7/f2/5847b4f02af8a5a24324e5cc7f35bd4749d24ff53c7e8099a3fd9bdd3f8d/RandomMandala-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b24ea60447ff10f40d0491a61f8cfcc4e8017365af587ed2fc75fee2b61899d3",
        "md5": "e4373288ce51a646f0e6fa15fd556858",
        "sha256": "cf7dd13ae40ea76cd813766f63f685d76264ba8024af3cc9c40a342c6418e40c"
      },
      "downloads": -1,
      "filename": "RandomMandala-0.6.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e4373288ce51a646f0e6fa15fd556858",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 14890,
      "upload_time": "2022-02-25T20:02:11",
      "upload_time_iso_8601": "2022-02-25T20:02:11.951701Z",
      "url": "https://files.pythonhosted.org/packages/b2/4e/a60447ff10f40d0491a61f8cfcc4e8017365af587ed2fc75fee2b61899d3/RandomMandala-0.6.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b7f25847b4f02af8a5a24324e5cc7f35bd4749d24ff53c7e8099a3fd9bdd3f8d",
        "md5": "445877bf9f83c05f8df0c22d67661c85",
        "sha256": "824202563c815d45b8d88d5f863c4bbce294a30cac0a15ff60af7873dc99e69f"
      },
      "downloads": -1,
      "filename": "RandomMandala-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "445877bf9f83c05f8df0c22d67661c85",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 17902,
      "upload_time": "2022-02-25T20:02:14",
      "upload_time_iso_8601": "2022-02-25T20:02:14.370170Z",
      "url": "https://files.pythonhosted.org/packages/b7/f2/5847b4f02af8a5a24324e5cc7f35bd4749d24ff53c7e8099a3fd9bdd3f8d/RandomMandala-0.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}