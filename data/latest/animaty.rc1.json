{
  "info": {
    "author": "Vincent Elias Mallon",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# animaty\n\n## Description\n\nanimaty is a library for animating ASCII art inside the console. It is made\nfor both Windows and Linux.\n\n## Installation\n\nTo install animaty just run the following command:\n\n```bash\npip install animaty\n```\n\nAfter that, you can import animaty with\n\n```py\nfrom animaty import *\n```\n\n## Documentation\n\n### animaty.helpers\n\n```py\ngetFramesFromFile(file) -> Frame\n```\n\ngetFramesFromFile lets you extract frames from a file\n(The frames in the file must be seperated by a double-newline)\n\n### animaty.animate.Frame\n\nThe Frame class is used to represent each frame in an animation. It implements getters and setters, I think those need no further explanation.\n\n```py\nFrame(content, time=1)\n```\n\nThe content variable describes what the Frame displays, while the time variable sets how long the frame has to be displayed (in seconds).\n\n### animaty.animate.Animator\n\nThe Animator class is responsible for animating the previously created frames\n\n```py\nAnimator(frames, fps=None)\n```\n\nThe frames variable is an array of Frame() instances which will be displayed. The fps variable represents the frames per seconds. If set, the Animator() instance will ignore any time set inside of the given Frame() instances.\n\n```py\nanimate() -> None\n```\n\nanimate starts an animation based on previously entered frames\n\n```py\nanimationLoop() -> None\n```\n\nanimationLoop starts an infinite animation based on previously entered frames\n\n## Examples\n\n```py\nfrom animaty import *\n\nframes = getFramesFromFile(\"test.txt\")\nanimator = Animator(frames)\nanimator.animate()\n```\n\nFirst the animaty module gets imported. After that,a frames array is created the *getFramesFromFile* method, which is then passed into an Animator instance. Finally, the *animate* method is called, which starts an animation.\n\n```py\nfrom animaty import *\n\nframes = [Frame(\"just\", 0.2), Frame(\"some\", 0.3), Frame(\"text\", 0.4)]\nanimator = Animator(frames)\nanimator.animate()\n```\n\nThis example is really similair to the previous one, the only difference is that we create a Frame array manually, which gives us some more control over the time the frames are displayed.\n\nTo achieve a similair amount of control in example one as in example two, you can use a syntax like this:\n\n```py\nframes[0].setFrametime(0.2)\n```\n\n## How to contribute\n\nIf you want to contribute to this Project, just request an issue on [my Github](https://github.com/GaiaHacking/).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/GaiaHacking/animaty/archive/0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GaiaHacking",
    "keywords": "ASCII,Animation,Console,Terminal",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "animaty",
    "package_url": "https://pypi.org/project/animaty/",
    "platform": "",
    "project_url": "https://pypi.org/project/animaty/",
    "project_urls": {
      "Download": "https://github.com/GaiaHacking/animaty/archive/0.1.tar.gz",
      "Homepage": "https://github.com/GaiaHacking"
    },
    "release_url": "https://pypi.org/project/animaty/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "animaty is a library for animating ascii art in python.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9170296,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43bbb3527467a374971a52e5e16760c99bfa521ebb284b597bc511c24ce094f5",
          "md5": "64dad6ec3fe1635b28bf145ee8a7944d",
          "sha256": "e4bd9f7790f4955b44db1ff88811353084d793017a5645d107c53b0a7adfd4ce"
        },
        "downloads": -1,
        "filename": "animaty-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "64dad6ec3fe1635b28bf145ee8a7944d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3528,
        "upload_time": "2021-01-19T08:18:58",
        "upload_time_iso_8601": "2021-01-19T08:18:58.591681Z",
        "url": "https://files.pythonhosted.org/packages/43/bb/b3527467a374971a52e5e16760c99bfa521ebb284b597bc511c24ce094f5/animaty-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43bbb3527467a374971a52e5e16760c99bfa521ebb284b597bc511c24ce094f5",
        "md5": "64dad6ec3fe1635b28bf145ee8a7944d",
        "sha256": "e4bd9f7790f4955b44db1ff88811353084d793017a5645d107c53b0a7adfd4ce"
      },
      "downloads": -1,
      "filename": "animaty-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "64dad6ec3fe1635b28bf145ee8a7944d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3528,
      "upload_time": "2021-01-19T08:18:58",
      "upload_time_iso_8601": "2021-01-19T08:18:58.591681Z",
      "url": "https://files.pythonhosted.org/packages/43/bb/b3527467a374971a52e5e16760c99bfa521ebb284b597bc511c24ce094f5/animaty-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}