{
  "info": {
    "author": "Masayuki Tanaka",
    "author_email": "mastnk@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "WDT\n===\n\nWatch Dog Timer and Timer for python\n\n`Github <https://github.com/mastnk/WDT/>`__\n`PyPI <https://pypi.org/project/WDT/>`__\n\nInstalation\n-----------\n\n``% pip install WDT``\n\npython 3.6.0 or later is required.\n\n*class* WatchDogTimer(Thread)\n-----------------------------\n\nThe WatchDogTimer is used to invoke a callback function when the timeout\nhappens. After starting the WatchDogTimer, the application need “feed”\nthe WatchDogTimer periodically if you want to prevent to invoke the\ncallback.\n\nIf you do not “feed”, the callback function would be invoked after the\nsetting time from the last “feed”.\n\nMethods\n~~~~~~~\n\n-  \\__init__( self, time_sec, callback, \\*args, \\**kwargs )\n\n   Constructor.\n\n   **time_sec**: a setting time,\n\n   **callback**: a function or a functor,\n\n   **args**\\ *,*\\ \\*\\ **kwargs**: arguemnts of the function,\n\n-  start( self, daemon=True ) -> None\n\n   Start the WatchDogTimer.\n\n   **daemon**: If it is true, the thread is daemonized.\n\n-  stop( self ) -> None\n\n   Stop the WatchDogTimer. The callback function is not invoked.\n\n-  feed( self ) -> None\n\n   Feed to the WatchDogTimer.\n\n-  set_callback( self, callback, \\*args, \\**kwargs ) -> None\n\n   Change the *callback* and the *args_dict* if they are not None.\n\n   **callback**: a function or a functor,\n\n   **args**\\ *,*\\ \\*\\ **kwargs**: arguemnts of the function.\n\n-  set_time_sec( self, time_sec ) -> None\n\n   Change the *time_sec*.\n\n   **time_sec**: a setting time.\n\nVariables\n~~~~~~~~~\n\n-  ret\n\n   It holds a retun velue of the callback function. If the callback\n   function is not invoked, it is *None*.\n\n-  is_timeout\n\n   It is boolean which represents the WatchDogTimer is timeout or not.\n\n-  is_running\n\n   It is boolean which represents the WatchDogTimer is running or not.\n\n*class* Periodic\n----------------\n\nThe Periodic is used to invoke a callback function periodically. If\n*compensate* is *True*, the period is the setting time. If *compensate*\nis *False*, the period is the settin time and the elapsed time of the\ncallback function.\n\n.. _methods-1:\n\nMethods\n~~~~~~~\n\n-  \\__init__( self, time_sec, callback, \\*args, \\**kwargs )\n\n   Constructor.\n\n   **time_sec**: a setting time,\n\n   **callback**: a function or a functor,\n\n   **args**\\ *,*\\ \\*\\ **kwargs**: arguemnts of the function,\n\n-  start( self, daemon=True, compensate=True ) -> None\n\n   Start the WatchDogTimer.\n\n   **daemon**: If it is true, the thread is daemonized.\n\n   **compensate**:\n\n-  stop( self ) -> None\n\n   Stop the WatchDogTimer. The callback function is not invoked.\n\n-  set_callback( self, callback, \\*args, \\**kwargs ) -> None\n\n   Change the *callback* and the *args_dict* if they are not None.\n\n   **callback**: a function or a functor,\n\n   **args**\\ *,*\\ \\*\\ **kwargs**: arguemnts of the function.\n\n-  set_time_sec( self, time_sec ) -> None\n\n   Change the *time_sec*.\n\n   **time_sec**: a setting time.\n\n.. _variables-1:\n\nVariables\n~~~~~~~~~\n\n-  ret\n\n   It holds a retun velue of the callback function. If the callback\n   function is not invoked, it is *None*.\n\n-  is_running\n\n   It is boolean which represents the WatchDogTimer is running or not.\n\n*class* PerfTimer\n-----------------\n\nIt is a timer to measure the time with time.perf_counter.\n\n.. _methods-2:\n\nMethods\n~~~~~~~\n\n-  \\__init__( self )\n\n   The constructor\n\n-  start( self ) -> None\n\n   Start the timer.\n\n-  stop( self ) -> float\n\n   Stop the timer. It return the time in seconds.\n\n-  reset( self )\n\n   It reset the accumulate time to zero.\n\n-  restart( self )\n\n   Reset and start.\n\n-  get_time( self ) -> float\n\n   Return the time.\n\n*class* SleepForPeriodic\n------------------------\n\nIt is sleep for periodic process.\n\n.. _methods-3:\n\nMethods\n~~~~~~~\n\n-  \\__init__( self, interval )\n\n   The constructor. *interval* is specfied in sec.\n\n-  start( self )\n\n   It is called at the begining of periodical process.\n\n-  sleep( self )\n\n   It is called at the end of periodical process. Then, sleep necessary\n   time for periodic process.\n\nSample code\n-----------\n\nsample1.py\n\n.. code:: python\n\n\n   from WDT import *\n\n   import time\n\n   def callback_func( x, y=1 ):\n       z = x+y\n       print( 'func: {}+{} -> {}'.format(x,y,z) )\n       return z\n\n   pt0 = PerfTimer()\n   pt1 = PerfTimer()\n\n   # the callback is not invoked because wdt is feed before timeout\n   pt0.start()\n   pt1.start()\n   print( 'Sample1' )\n   wdt = WatchDogTimer( 0.2, callback_func, 1 )\n   wdt.start()\n   for i in range(5):\n       wdt.feed()\n       time.sleep(0.1)\n   wdt.stop()\n   print( 'ret: ', wdt.ret )\n   pt0.stop()\n   pt1.stop()\n   print( pt0.get_time(), pt1.get_time() )\n\n   # invoke callback after some seconds\n   pt0.restart()\n   pt1.start()\n   print( 'Sample2' )\n   wdt = WatchDogTimer( 0.2, callback_func, x=1 )\n   wdt.start()\n   time.sleep(0.3)\n   print( 'ret: ', wdt.ret )\n   pt0.stop()\n   pt1.stop()\n   print( pt0.get_time(), pt1.get_time() )\n\n   ###\n   pt0.restart()\n   pt1.start()\n   print( 'Sample3' )\n   wdt = WatchDogTimer( 0.2, callback_func, 1, y=1 )\n   wdt.start()\n   for i in range(5):\n       wdt.feed()\n       wdt.set_callback( callback_func, 1, y=2 )\n       time.sleep(0.1)\n   time.sleep(0.3)\n   print( 'ret: ', wdt.ret )\n   pt0.stop()\n   pt1.stop()\n   print( pt0.get_time(), pt1.get_time() )\n\nsample2.py\n\n.. code:: python\n\n   from WDT import *\n\n   import time\n\n   def callback_func( pt, x, y=1 ):\n       z = x+y\n       print( 'func: {}+{} -> {} ({})'.format(x,y,z, pt.get_time()) )\n       time.sleep(0.1)\n       return z\n\n   pt = PerfTimer()\n   pt.start()\n   prd = Periodic( 0.2, callback_func, pt, 1 )\n   prd.start(compensate=True)\n   time.sleep(1)\n   prd.stop()\n   print()\n\n   pt = PerfTimer()\n   pt.start()\n   prd = Periodic( 0.2, callback_func, pt, 2 )\n   prd.start(compensate=False)\n   time.sleep(1)\n   prd.stop()\n   print()\n\n   pt = PerfTimer()\n   pt.start()\n   prd = Periodic( 0.1, callback_func, pt, 3 )\n   prd.start(compensate=True)\n   time.sleep(1)\n   prd.stop()\n   print()\n\n   sfp = SleepForPeriodic( 1 ) # in sec\n   while( True ):\n       sfp.start()\n   ​\n       ## some process\n       t = random.random()\n       print( t )\n       time.sleep( t )\n       ##\n   ​\n       sfp.sleep()\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mastnk/WDT",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "WDT",
    "package_url": "https://pypi.org/project/WDT/",
    "platform": "",
    "project_url": "https://pypi.org/project/WDT/",
    "project_urls": {
      "Homepage": "https://github.com/mastnk/WDT"
    },
    "release_url": "https://pypi.org/project/WDT/0.3.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Watch Dog Timer for python.",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9923423,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c5c107d8a5c96fc904463e70f9a401258466828dd76a07e456340ab98db6167",
          "md5": "812472bfb929ef11b9f86f326618ea15",
          "sha256": "2706ba4468e666f7cc6b05906a7909b47572d433cd9a726e2fa16b78377dcb85"
        },
        "downloads": -1,
        "filename": "WDT-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "812472bfb929ef11b9f86f326618ea15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5725,
        "upload_time": "2021-01-25T05:59:27",
        "upload_time_iso_8601": "2021-01-25T05:59:27.835305Z",
        "url": "https://files.pythonhosted.org/packages/2c/5c/107d8a5c96fc904463e70f9a401258466828dd76a07e456340ab98db6167/WDT-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cf51f4dd56ec391f8db94b8f409ebc9444f1db907450c5d6c3bf4e205cb1f3b",
          "md5": "8c43849f992f9ae0def26d6e03d7a734",
          "sha256": "2dcd55000ca6ffaacf3cb5a4e84b5b910b300b6911716af62968078d8348a899"
        },
        "downloads": -1,
        "filename": "WDT-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c43849f992f9ae0def26d6e03d7a734",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5798,
        "upload_time": "2021-01-25T06:38:39",
        "upload_time_iso_8601": "2021-01-25T06:38:39.361587Z",
        "url": "https://files.pythonhosted.org/packages/4c/f5/1f4dd56ec391f8db94b8f409ebc9444f1db907450c5d6c3bf4e205cb1f3b/WDT-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b5897a13f420c3d7852dae99fd707c3bec9fff1ab87346429509ca1c2da391c",
          "md5": "1c334c5d9375ab4eff03c8fca19985d0",
          "sha256": "067698d52e200496534bfbfd11ab0f84545679ff7c1e6ed4665e48d8b9995d0b"
        },
        "downloads": -1,
        "filename": "WDT-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1c334c5d9375ab4eff03c8fca19985d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3819,
        "upload_time": "2021-01-25T06:38:40",
        "upload_time_iso_8601": "2021-01-25T06:38:40.816542Z",
        "url": "https://files.pythonhosted.org/packages/1b/58/97a13f420c3d7852dae99fd707c3bec9fff1ab87346429509ca1c2da391c/WDT-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a67b3c09b57b22d3a68e554de5d1d62548696777de38513e804c46ccda9ffda",
          "md5": "a6effce6d60a5b08eaf9ff03b5f68461",
          "sha256": "ce692c9334e283e440bfc8ba3cd737f844b071352b6403863b6ff09f22aee99f"
        },
        "downloads": -1,
        "filename": "WDT-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6effce6d60a5b08eaf9ff03b5f68461",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4420,
        "upload_time": "2021-01-25T11:10:53",
        "upload_time_iso_8601": "2021-01-25T11:10:53.076750Z",
        "url": "https://files.pythonhosted.org/packages/8a/67/b3c09b57b22d3a68e554de5d1d62548696777de38513e804c46ccda9ffda/WDT-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2491b79246c1994f90c9776d3f61493ba47af5d28e1b7231bcea264f96d6600c",
          "md5": "2d5491207e08c6c13ad50a0bb69c32c6",
          "sha256": "8f45bf1b94311f5dd76340574e0973d0bc414a00601104113ba508173b8f48a5"
        },
        "downloads": -1,
        "filename": "WDT-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2d5491207e08c6c13ad50a0bb69c32c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4434,
        "upload_time": "2021-01-25T11:10:54",
        "upload_time_iso_8601": "2021-01-25T11:10:54.596815Z",
        "url": "https://files.pythonhosted.org/packages/24/91/b79246c1994f90c9776d3f61493ba47af5d28e1b7231bcea264f96d6600c/WDT-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ff434225c1cb7c2272c52e964b3ab2d7d1f86313f5e6ad47f705e88ef5d10ff",
          "md5": "ad251c4b95b2bddefcca1482dc2e3452",
          "sha256": "ce6c5c9a24fd0eadb832d9f67f4ddb414dcd554ceaa565643c1f2d8d50fb104f"
        },
        "downloads": -1,
        "filename": "WDT-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad251c4b95b2bddefcca1482dc2e3452",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9427,
        "upload_time": "2021-03-22T07:03:53",
        "upload_time_iso_8601": "2021-03-22T07:03:53.695292Z",
        "url": "https://files.pythonhosted.org/packages/4f/f4/34225c1cb7c2272c52e964b3ab2d7d1f86313f5e6ad47f705e88ef5d10ff/WDT-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ad8579c7d3424934ad8fd664c54c0184c3f2927fec9740416b9c9a71f5b9b3e",
          "md5": "95b632c621e2a91394bd3d76847833d9",
          "sha256": "6f97704e59605fc941712b995eebc5158588e62152f74a8405755e15a4fafefa"
        },
        "downloads": -1,
        "filename": "WDT-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "95b632c621e2a91394bd3d76847833d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7167,
        "upload_time": "2021-03-22T07:03:55",
        "upload_time_iso_8601": "2021-03-22T07:03:55.380325Z",
        "url": "https://files.pythonhosted.org/packages/9a/d8/579c7d3424934ad8fd664c54c0184c3f2927fec9740416b9c9a71f5b9b3e/WDT-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80e353709fd5ff6c504dd3a7541bbebd4ae7f551bbe8113c2f283454383fa1a6",
          "md5": "d68b156a73a8c32b271cba6b225ead0f",
          "sha256": "f3bc62af51d8cd7cf9818f8abfe4af2d18e3a4844bfc341b657a0c65708d9678"
        },
        "downloads": -1,
        "filename": "WDT-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d68b156a73a8c32b271cba6b225ead0f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4728,
        "upload_time": "2021-03-30T11:10:33",
        "upload_time_iso_8601": "2021-03-30T11:10:33.434267Z",
        "url": "https://files.pythonhosted.org/packages/80/e3/53709fd5ff6c504dd3a7541bbebd4ae7f551bbe8113c2f283454383fa1a6/WDT-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6d280f956d52d790afa3342b7e1719e4764d68b6735fb69fac97238ae314451",
          "md5": "722684e6b7fb2bfe75572890238aa61e",
          "sha256": "edcb6e053acd5ecc4f0058296183783b40fe2395af3636de3edc7c7ef1b636b6"
        },
        "downloads": -1,
        "filename": "WDT-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "722684e6b7fb2bfe75572890238aa61e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4994,
        "upload_time": "2021-03-30T11:10:35",
        "upload_time_iso_8601": "2021-03-30T11:10:35.005929Z",
        "url": "https://files.pythonhosted.org/packages/c6/d2/80f956d52d790afa3342b7e1719e4764d68b6735fb69fac97238ae314451/WDT-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80e353709fd5ff6c504dd3a7541bbebd4ae7f551bbe8113c2f283454383fa1a6",
        "md5": "d68b156a73a8c32b271cba6b225ead0f",
        "sha256": "f3bc62af51d8cd7cf9818f8abfe4af2d18e3a4844bfc341b657a0c65708d9678"
      },
      "downloads": -1,
      "filename": "WDT-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d68b156a73a8c32b271cba6b225ead0f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4728,
      "upload_time": "2021-03-30T11:10:33",
      "upload_time_iso_8601": "2021-03-30T11:10:33.434267Z",
      "url": "https://files.pythonhosted.org/packages/80/e3/53709fd5ff6c504dd3a7541bbebd4ae7f551bbe8113c2f283454383fa1a6/WDT-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6d280f956d52d790afa3342b7e1719e4764d68b6735fb69fac97238ae314451",
        "md5": "722684e6b7fb2bfe75572890238aa61e",
        "sha256": "edcb6e053acd5ecc4f0058296183783b40fe2395af3636de3edc7c7ef1b636b6"
      },
      "downloads": -1,
      "filename": "WDT-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "722684e6b7fb2bfe75572890238aa61e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4994,
      "upload_time": "2021-03-30T11:10:35",
      "upload_time_iso_8601": "2021-03-30T11:10:35.005929Z",
      "url": "https://files.pythonhosted.org/packages/c6/d2/80f956d52d790afa3342b7e1719e4764d68b6735fb69fac97238ae314451/WDT-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}