{
  "info": {
    "author": "Matthias Wijnsma",
    "author_email": "matthiasx95@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Have you ever created a program that takes input from the command line? Have you ever wanted to convert the input to an integer or any other type? If so, you'll know how annoying it can be. Try/except blocks, while loops, multiple input calls and much more... but what if I told you that you can forget about those and just use this module! Introducing...\n\n# InputValidation\nA python module to validate input.\n\n# Supported Operating Systems\nThe inputvalidation module should be supported on Windows, Linux and Mac (althought it has not been tested on Mac).\n\n# Installation\nThe inputvalidation module can be install using pip.\n```\npip install inputvalidation\n```\n# Usage\n```python\nimport inputvalidation as iv\n```\n\nAfter you imported the inputvalidation module you're ready to go.\n\n```python\n# Simple int validator\nintValidator = iv.Validator(type=int)\nintNumber = intValidator.input(\"Enter an integer: \") # Enter an integer: 15\nprint(\"\\nNumber:\", intNumber, type(number)) # Number: 15 <class 'int'>\n```\n\nHere's a simple validator using regex to make sure the user enters a valid phone number.\n\n```python\nphoneValidator = iv.Validator(pattern=r\"^\\([2-9][\\d]{2}\\) [\\d]{3}-[\\d]{4}$\") # Regex pattern to match phone numbers\nphoneNumber = phoneValidator.input(\"Enter a phone number: \")\nprint(\"\\nPhone number:\", phoneNumber)\n```\n\nHere's what happens when you run the previous code block.\n\n```\nEnter a phone number: 23980983\nEnter a phone number: 24-42653-35\nEnter a phone number: (234) 567-8901\n\nPhone number: (234) 567-8901\n```\n\nYou don't have to call the input method to use the validator, you can validate strings using the validate method instead.\n\n```python\nprint(\n    intValidator.validate(\"162\"), # True\n    intValidator.validate(\"0x5\"), # False\n    intValidator.validate(\"Hello, world!\"), # False\nsep=\"\\n\")\n```\n\nThe inputvalidation module also supports default values for when the user leaves the input field empty.\n\n```python\n# Validator using the default parameter\nnameValidator = iv.Validator(default=\"John Doe\")\nname = nameValidator.input(f\"Enter your name (default = {nameValidator.default}): \") # Enter your name (default = John Doe): \nprint(\"\\nName:\", name) # Name: John Doe\n```\n\nIf you want to ask the user a multiple choice question you can use the MultipleChoice validator.\n\n```python\n# Multiple choice input\nmodeValidator = iv.MultipleChoice(options=[\"yes\", \"no\"], default=\"no\", caseSensitive=False)\nanswer = modeValidator.input(f\"Are you sure you want to exit? (default = {modeValidator.default}): \") # Are you sure you want to exit? (default = no): Yes\nprint(\"\\nAnswer:\", answer) # Answer: yes\n```\n\nYou can make the validators as complex as you like. Converting the input to a custom type, using regex to make sure the input is valid, running custom functions/lambdas on the input to validate them, etc. (preCustom will be called before all other tests, postCustom will be called after all other tests).\n\n```python\n# Overcomplicated validator to validate hex numbers and convert them to integers\nnumberValidator = iv.Validator(\n    type=lambda inp: int(inp.strip().lstrip(\"0x\"), 16), # Converts strings to integers using base 16\n    pattern=r\"[0x]?[0-9]+\", # Regex pattern for hex numbers\n    preCustom=lambda inp: inp.strip().lstrip(\"0x\").isnumeric() # Checks if the input is numeric\n)\nnumber = numberValidator.input(\"Enter a hex number: \") # Enter a hex number: 0x52\nprint(\"\\nEntered:\", number, type(number)) # Entered: 82 <class 'int'>\n```\n\nHeres a validator that turns user input into a boolean (the \"type\" lambda turns the input into a boolean, this lambda will be called after the input is validated, to convert the input string to a boolean, whatever the type function/lambda returns will be used as the output).\n\n```python\nboolValidator = iv.MultipleChoice(type=lambda inp: inp == \"true\", options=[\"true\", \"false\"], caseSensitive=False)\nuserInput = boolValidator.input(\"(true/false): \")\n```\n\nThe previous block of code is basically a better version of this (the \"type\" lambda will be called everytime the input method is called, while the next block of code runs the equality check manually, you'd have to do this everytime you call the input method, this is why using the \"type\" keyword argument is better).\n\n```python\nboolValidator = iv.MultipleChoice(options=[\"true\", \"false\"], caseSensitive=False)\nuserInput = boolValidator.input(\"(true/false): \") == \"true\"\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Matthias1590/InputValidation",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "inputvalidation",
    "package_url": "https://pypi.org/project/inputvalidation/",
    "platform": "",
    "project_url": "https://pypi.org/project/inputvalidation/",
    "project_urls": {
      "Homepage": "https://github.com/Matthias1590/InputValidation"
    },
    "release_url": "https://pypi.org/project/inputvalidation/1.1.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python module to validate input.",
    "version": "1.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11680922,
  "releases": {
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0faec248bebcc828a4d85ef24e2818b4930f031cc519143f0ac1f675d6229baf",
          "md5": "b9477373592a6a4b4a92e3656903365b",
          "sha256": "6a0c041e113263de8e8581158eff71f22889a6d13aa2afb9d5f4ec24edebd504"
        },
        "downloads": -1,
        "filename": "inputvalidation-1.1.3-py3.8.egg",
        "has_sig": false,
        "md5_digest": "b9477373592a6a4b4a92e3656903365b",
        "packagetype": "bdist_egg",
        "python_version": "1.1.3",
        "requires_python": null,
        "size": 6709,
        "upload_time": "2021-10-10T14:43:19",
        "upload_time_iso_8601": "2021-10-10T14:43:19.749744Z",
        "url": "https://files.pythonhosted.org/packages/0f/ae/c248bebcc828a4d85ef24e2818b4930f031cc519143f0ac1f675d6229baf/inputvalidation-1.1.3-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e17a386ad772ad838fc4cdf94f4867925842c7ee890ae17a15c10101da87324e",
          "md5": "9c84bf2d2c4b6db560b3206a4bbebd66",
          "sha256": "13a0485e3ce83a217da450761d9634899d7b369f4b0c3172ef3cf248f1db315c"
        },
        "downloads": -1,
        "filename": "inputvalidation-1.1.4-py3.8.egg",
        "has_sig": false,
        "md5_digest": "9c84bf2d2c4b6db560b3206a4bbebd66",
        "packagetype": "bdist_egg",
        "python_version": "1.1.4",
        "requires_python": null,
        "size": 6857,
        "upload_time": "2021-10-10T15:11:47",
        "upload_time_iso_8601": "2021-10-10T15:11:47.798848Z",
        "url": "https://files.pythonhosted.org/packages/e1/7a/386ad772ad838fc4cdf94f4867925842c7ee890ae17a15c10101da87324e/inputvalidation-1.1.4-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aecb523760e0ada425d4332d4db75ac8b93ea74137ab6184e01ba72f2b0fc342",
          "md5": "0cc4700fa9bad311750d17db6a4867ac",
          "sha256": "4da33757562a5a9d9860fa6e839387c043e24a514c6b6b54b58fa4e9f47e9d60"
        },
        "downloads": -1,
        "filename": "inputvalidation-1.1.5-py3.8.egg",
        "has_sig": false,
        "md5_digest": "0cc4700fa9bad311750d17db6a4867ac",
        "packagetype": "bdist_egg",
        "python_version": "1.1.5",
        "requires_python": null,
        "size": 6838,
        "upload_time": "2021-10-10T15:17:00",
        "upload_time_iso_8601": "2021-10-10T15:17:00.806745Z",
        "url": "https://files.pythonhosted.org/packages/ae/cb/523760e0ada425d4332d4db75ac8b93ea74137ab6184e01ba72f2b0fc342/inputvalidation-1.1.5-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aecb523760e0ada425d4332d4db75ac8b93ea74137ab6184e01ba72f2b0fc342",
        "md5": "0cc4700fa9bad311750d17db6a4867ac",
        "sha256": "4da33757562a5a9d9860fa6e839387c043e24a514c6b6b54b58fa4e9f47e9d60"
      },
      "downloads": -1,
      "filename": "inputvalidation-1.1.5-py3.8.egg",
      "has_sig": false,
      "md5_digest": "0cc4700fa9bad311750d17db6a4867ac",
      "packagetype": "bdist_egg",
      "python_version": "1.1.5",
      "requires_python": null,
      "size": 6838,
      "upload_time": "2021-10-10T15:17:00",
      "upload_time_iso_8601": "2021-10-10T15:17:00.806745Z",
      "url": "https://files.pythonhosted.org/packages/ae/cb/523760e0ada425d4332d4db75ac8b93ea74137ab6184e01ba72f2b0fc342/inputvalidation-1.1.5-py3.8.egg",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}