{
  "info": {
    "author": "Steffen Schneider",
    "author_email": "stes@hey.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "![](./logo.svg)\n\nA minimal package for configuring and exploring parameter `comb`inations of machine learning experiments.\n\n`comb` is a small and simplistic library. `comb` is able to\n\n- quickly and cleanly define grid searches and random searches, and handle parameter dependencies\n- add configuration options to existing projects. Existing modules and packages can be turned into a registry, enabling python classes to become accessible and searchable via a string name.\n\n\nFor more complicated workflows, configuration packages like [hydra](https://github.com/facebookresearch/hydra) are better suited.\n\n## Installation\n\nInstall `comb-py` from [pypi](https://pypi.org/project/comb-py/):\n\n```python\n$ pip install comb-py\n```\n\nand import it via\n\n```python\nimport comb\n```\n\n`comb` does not have any dependencies beyond the python standard library. It works for `python>=3.7`.\n\n## Defining an experiment (`comb.sweep`)\n\nIn your project, create sweeps directly in python ─ create the following file under `sweep/my_first_experiment.py`\n\n```python\nfrom comb import sweep\nfrom comb.types import zipped, grid\n\n@sweep.register(\"example-sweep\")\nclass MyExperiment(sweep.Sweep):\n\n    @property\n    def script(self):\n        return \"my/exp.py\"\n\n    def get_random_args(self):\n        return dict(\n            # define a method to sample arguments from\n            foo = np.random.choice([42, 73])\n        )\n\n    def get_fixed_args(self):\n        return dict(\n            # zip N dependen arguments together\n            bar = zipped(\"hello\", \"check out\"),\n            baz = zipped(\"world\", \"comb\"),\n            # define a search grid (1x2 combinations)\n            # over two parameters\n            blubb  = grid(\"star\"),\n            blubb2 = grid(\"wars\", \"treck\"),\n        )\n```\n\nand generate a joblist using\n\n```bash\n$ python -m comb example-sweep\nexp.py --bar hello --baz world --blubb star --blubb2 wars --foo 73\nexp.py --bar hello --baz world --blubb star --blubb2 treck --foo 73\nexp.py --bar check out --baz comb --blubb star --blubb2 wars --foo 73\nexp.py --bar check out --baz comb --blubb star --blubb2 treck --foo 73\n```\n\n## Parametrizing an experiment (`comb.registry`)\n\n`comb` makes it very easy to reference design choices within your experiment by names. Suppose you wanted to add a few datasets and loss functions to a machine learning experiment.\n\nTurn your python module packages or packages into registries by a simple call to `comb.registry.add_helper_functions`:\n\n``` python\n# datasets.py\nfrom comb import registry\nregistry.add_helper_functions(__name__)\n\n@register(\"mnist\")\nclass MNIST(): pass \n\n@register(\"svhn\")\nclass SVHN(): pass \n\n\n# loss_functions.py\nfrom comb import registry\nregistry.add_helper_functions(__name__)\n\n@register(\"mse\")\nclass MeanSquaredError(): pass\n\n@register(\"infonce\")\nclass InfoNCE(): pass\n```\n\nAfterwards, you can easily list and instantiate your functions:\n\n``` python\n>>> import datasets\n>>> datasets.get_options(\"*\")\nmnist svhn\n>>> datasets.init(\"mnist\")\nMNIST()\n```\n\n## Scheduling experiments\n\n`comb` does not attempt to provide ways to actually launch these experiments ─ there are plenty tools better suited for this.\nTo name a few suggestions, the following workflows are possible:\n\n### Using GNU parallel\n\nScheduling a maximum of 2 consecutive jobs via [GNU parallel](https://www.gnu.org/software/parallel/) (similar results can be achived via e.g. `xargs`):\n\n``` bash\n$ python -m comb bash-example || exit 1 | parallel --jobs 2 'echo Scheduling job {#}; eval {}'\n```\n\n### Using SLURM\n\nScheduling a job array via slurm:\n\n``` bash\nmkdir -p submitted\npython -m comb bash-example > jobs.lst\nnum_jobs=$(wc -l jobs.lst)\njobid=$(sbatch -a 1-${num_jobs} --wrap 'job=$(sed -n ${SLURM_ARRAY_TASK_ID}p jobs.lst); srun ${job}')\nmv jobs.lst submitted/{jobid}.lst \n```\n\n## License\n\n`comb` is released under an MIT License.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/stes/comb",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "comb-py",
    "package_url": "https://pypi.org/project/comb-py/",
    "platform": "",
    "project_url": "https://pypi.org/project/comb-py/",
    "project_urls": {
      "Bug Tracker": "https://github.com/stes/comb/issues",
      "Homepage": "https://github.com/stes/comb"
    },
    "release_url": "https://pypi.org/project/comb-py/0.0.1a0/",
    "requires_dist": [
      "pytest ; extra == 'install_requires'"
    ],
    "requires_python": ">=3.7",
    "summary": "Configure experiments",
    "version": "0.0.1a0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12872949,
  "releases": {
    "0.0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a01cbf90e9f77996c422ec2960b62503f46165cde34ecd819798f360ccf9867a",
          "md5": "967b4193f26d1a4914a399143611799d",
          "sha256": "89792ed48974461aed64ba6e84b4205e02e603398053d585bb2a8d3696e4bd8f"
        },
        "downloads": -1,
        "filename": "comb_py-0.0.1a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "967b4193f26d1a4914a399143611799d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12060,
        "upload_time": "2022-02-12T22:42:36",
        "upload_time_iso_8601": "2022-02-12T22:42:36.670267Z",
        "url": "https://files.pythonhosted.org/packages/a0/1c/bf90e9f77996c422ec2960b62503f46165cde34ecd819798f360ccf9867a/comb_py-0.0.1a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1167317acb615d48bfadd6afc23ac883cc758b5bc08df03fca23aeace845385c",
          "md5": "5d4f1df1ddc9b7c63ee0bde666aab8e0",
          "sha256": "f11ffd53148e7c1c8b9e2c5c806675b0eaddeb7d2ac93ae27bf0ccc519aaa407"
        },
        "downloads": -1,
        "filename": "comb-py-0.0.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "5d4f1df1ddc9b7c63ee0bde666aab8e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 12212,
        "upload_time": "2022-02-12T22:42:38",
        "upload_time_iso_8601": "2022-02-12T22:42:38.281274Z",
        "url": "https://files.pythonhosted.org/packages/11/67/317acb615d48bfadd6afc23ac883cc758b5bc08df03fca23aeace845385c/comb-py-0.0.1a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a01cbf90e9f77996c422ec2960b62503f46165cde34ecd819798f360ccf9867a",
        "md5": "967b4193f26d1a4914a399143611799d",
        "sha256": "89792ed48974461aed64ba6e84b4205e02e603398053d585bb2a8d3696e4bd8f"
      },
      "downloads": -1,
      "filename": "comb_py-0.0.1a0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "967b4193f26d1a4914a399143611799d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12060,
      "upload_time": "2022-02-12T22:42:36",
      "upload_time_iso_8601": "2022-02-12T22:42:36.670267Z",
      "url": "https://files.pythonhosted.org/packages/a0/1c/bf90e9f77996c422ec2960b62503f46165cde34ecd819798f360ccf9867a/comb_py-0.0.1a0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1167317acb615d48bfadd6afc23ac883cc758b5bc08df03fca23aeace845385c",
        "md5": "5d4f1df1ddc9b7c63ee0bde666aab8e0",
        "sha256": "f11ffd53148e7c1c8b9e2c5c806675b0eaddeb7d2ac93ae27bf0ccc519aaa407"
      },
      "downloads": -1,
      "filename": "comb-py-0.0.1a0.tar.gz",
      "has_sig": false,
      "md5_digest": "5d4f1df1ddc9b7c63ee0bde666aab8e0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 12212,
      "upload_time": "2022-02-12T22:42:38",
      "upload_time_iso_8601": "2022-02-12T22:42:38.281274Z",
      "url": "https://files.pythonhosted.org/packages/11/67/317acb615d48bfadd6afc23ac883cc758b5bc08df03fca23aeace845385c/comb-py-0.0.1a0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}