{
  "info": {
    "author": "pylakey",
    "author_email": "pylakey@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: AsyncIO",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Typing :: Typed"
    ],
    "description": "# pydantic_socket - Simple socket client and server with [Pydantic](https://github.com/samuelcolvin/pydantic) models\n\n[![PyPI version shields.io](https://img.shields.io/pypi/v/pydantic_socket.svg)](https://pypi.python.org/pypi/pydantic_socket/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/pydantic_socket.svg)](https://pypi.python.org/pypi/pydantic_socket/)\n[![PyPI license](https://img.shields.io/pypi/l/pydantic_socket.svg)](https://pypi.python.org/pypi/pydantic_socket/)\n\n## Examples\n\n> Output examples are provided for simultaneous run of Server and Client examples\n\n### Server\n\n```python\nimport asyncio\nimport logging\n\nimport pydantic_socket\nfrom pydantic_socket.types import Action\nfrom pydantic_socket.websocket import (\n    Server,\n    ServerClient,\n)\n\nserver = Server()\n\n\nclass TestResponse(pydantic_socket.types.BaseModel):\n    foo: int = 1\n    bar: str = \"bar\"\n    input: str | None = None\n\n\n# Register handler for certain action type    \n@server.action_handler(\"hello\")\nasync def hello_handler(s: Server, client: ServerClient, action: Action):\n    logging.info(f\"Hello, {action.payload.get('name', 'World')}!\")\n    # Will print:\n    # INFO:root:Hello, pydantic_socket!\n\n\nasync def test_handler(s: Server, client: ServerClient, action: Action):\n    return TestResponse(foo=1, bar=\"bar\", input=action.payload.get('input'))\n\n\n# Another way to register handler for certain action type\nserver.set_action_handler(\"test\", test_handler)\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO)\n    asyncio.run(server.run())\n\n```\n\n### Client\n\n```python\nimport asyncio\nimport logging\n\nimport pydantic\n\nfrom pydantic_socket.types import Action\nfrom pydantic_socket.websocket import Client\n\nclient = Client(\"http://127.0.0.1:8080\", auto_reconnect=False, client_id=1)\n\n\nclass SomeActionInputPayload(pydantic.BaseModel):\n    input: str\n\n\nasync def main():\n    # Establishing connection to server\n    asyncio.create_task(client.run())\n    # Wait some time until connection is done\n    await asyncio.sleep(2)\n    # Send action\n    await client.send(Action(type='hello', payload={\"name\": \"pydantic_socket\"}))\n    # Send and wait for response\n    response = await client.request(Action(type='test', payload={\"input\": \"Some Input\"}))\n\n    logging.info(f\"Payload is: {response.payload}\")\n    # Will print: \n    # INFO:root:Payload is: {'foo': 1, 'bar': 'bar', 'input': 'Some Input'}\n\n    await client.close()\n\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO)\n    asyncio.run(main())\n\n```\n\n## LICENSE\n\nThis project is licensed under the terms of the MIT license.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pylakey/pydantic_socket",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydantic-socket",
    "package_url": "https://pypi.org/project/pydantic-socket/",
    "platform": null,
    "project_url": "https://pypi.org/project/pydantic-socket/",
    "project_urls": {
      "Homepage": "https://github.com/pylakey/pydantic_socket",
      "Repository": "https://github.com/pylakey/pydantic_socket"
    },
    "release_url": "https://pypi.org/project/pydantic-socket/0.1.1/",
    "requires_dist": [
      "pydantic (>=1.10.7,<2.0.0)",
      "ujson (>=5.7.0,<6.0.0)",
      "aiohttp[speedups] (>=3.8.4,<4.0.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Simple TCP socket client and server with Pydantic models",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17512241,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c5fae17d2eb7e9794fe703027b214a90de05925c297f448f95c92f983b96108",
          "md5": "4844be0cb323253038b1842e35d4fac7",
          "sha256": "5d940be140fef78a92758fefb64b61f8320f7c652accd426520bd3a0ca12d33d"
        },
        "downloads": -1,
        "filename": "pydantic_socket-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4844be0cb323253038b1842e35d4fac7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 11881,
        "upload_time": "2023-03-27T18:03:25",
        "upload_time_iso_8601": "2023-03-27T18:03:25.730154Z",
        "url": "https://files.pythonhosted.org/packages/8c/5f/ae17d2eb7e9794fe703027b214a90de05925c297f448f95c92f983b96108/pydantic_socket-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0253451dcae399cc55ebdfe716c00840557d7430645d71076c464ff34e2bbcc",
          "md5": "fd41318ec5cb2865abb0efe2f3038ebd",
          "sha256": "1ed0ba9cbb06d1100d7a7cbc871faf0ce21c656130d6e5e769fa0720410f9509"
        },
        "downloads": -1,
        "filename": "pydantic_socket-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fd41318ec5cb2865abb0efe2f3038ebd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 7832,
        "upload_time": "2023-03-27T18:03:27",
        "upload_time_iso_8601": "2023-03-27T18:03:27.242111Z",
        "url": "https://files.pythonhosted.org/packages/d0/25/3451dcae399cc55ebdfe716c00840557d7430645d71076c464ff34e2bbcc/pydantic_socket-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea794e0b2faa21bb62255f39f55287b29cd733a4633296ba2962457994d1eb7b",
          "md5": "0c68d42dcd908f8c1fac9bde523a2480",
          "sha256": "08dc9a3c302575ddaaa43b02a4d2eb975a4b95e1c4c8647f145b43fb2a802fa4"
        },
        "downloads": -1,
        "filename": "pydantic_socket-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c68d42dcd908f8c1fac9bde523a2480",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 11952,
        "upload_time": "2023-03-30T15:05:37",
        "upload_time_iso_8601": "2023-03-30T15:05:37.414143Z",
        "url": "https://files.pythonhosted.org/packages/ea/79/4e0b2faa21bb62255f39f55287b29cd733a4633296ba2962457994d1eb7b/pydantic_socket-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48d25aed07511ff65dde49cbe7f95b6c98f368bcd91a76fc53cf95af0c92b790",
          "md5": "2585542ab290a399bc690ebd54adba6e",
          "sha256": "08a08194dd481bcee415a10af05abe98a7f47c116fed65b4ba31a06f085fd08b"
        },
        "downloads": -1,
        "filename": "pydantic_socket-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2585542ab290a399bc690ebd54adba6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 7893,
        "upload_time": "2023-03-30T15:05:39",
        "upload_time_iso_8601": "2023-03-30T15:05:39.003634Z",
        "url": "https://files.pythonhosted.org/packages/48/d2/5aed07511ff65dde49cbe7f95b6c98f368bcd91a76fc53cf95af0c92b790/pydantic_socket-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea794e0b2faa21bb62255f39f55287b29cd733a4633296ba2962457994d1eb7b",
        "md5": "0c68d42dcd908f8c1fac9bde523a2480",
        "sha256": "08dc9a3c302575ddaaa43b02a4d2eb975a4b95e1c4c8647f145b43fb2a802fa4"
      },
      "downloads": -1,
      "filename": "pydantic_socket-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0c68d42dcd908f8c1fac9bde523a2480",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 11952,
      "upload_time": "2023-03-30T15:05:37",
      "upload_time_iso_8601": "2023-03-30T15:05:37.414143Z",
      "url": "https://files.pythonhosted.org/packages/ea/79/4e0b2faa21bb62255f39f55287b29cd733a4633296ba2962457994d1eb7b/pydantic_socket-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "48d25aed07511ff65dde49cbe7f95b6c98f368bcd91a76fc53cf95af0c92b790",
        "md5": "2585542ab290a399bc690ebd54adba6e",
        "sha256": "08a08194dd481bcee415a10af05abe98a7f47c116fed65b4ba31a06f085fd08b"
      },
      "downloads": -1,
      "filename": "pydantic_socket-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2585542ab290a399bc690ebd54adba6e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 7893,
      "upload_time": "2023-03-30T15:05:39",
      "upload_time_iso_8601": "2023-03-30T15:05:39.003634Z",
      "url": "https://files.pythonhosted.org/packages/48/d2/5aed07511ff65dde49cbe7f95b6c98f368bcd91a76fc53cf95af0c92b790/pydantic_socket-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}