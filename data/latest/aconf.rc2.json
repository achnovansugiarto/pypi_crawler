{
  "info": {
    "author": "Felipe Faria",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ðŸ¤– Auto Config\n\nMemory-based global configuration for Python projects -- in 10 lines of code (including empty lines). Made with the intention of ridding the need to pass `Config` objects everywhere. Option to use [`namedtupled`](https://namedtupled.readthedocs.io/en/latest/) if wanted.\n\n## Installing\n\n```\npip install aconf\n```\n\n## Why?\n\nHonestly? Because why not. Was tired of having to pass `Config` objects left and right in small personal projects, so created this.\n\n## Using\n\nThis module comes with three main functions:\n\n* `make_config(**kwargs)`: Creates the configuration in memory.\n* `config()`: Loads configuration from memory as standard dictionary.\n* `conf()`: Loads configuration from memory as namedtuple object for cleaner access.\n\n```python\nfrom aconf import make_config, config, conf\n\n# Creates a global configuration that can be accessed by any other portion of the runtime.\nmake_config(database={\"user\": \"admin\", \"password\": \"db_password\", \"host\": \"localhost\", \"port\": \"3306\"}, method=\"GET\")\n\n# Accessing the global configuration as a dictionary.\nprint(config()['database']['user'])\n# >>> admin\n\n# Accessing the global configuration as a namedtuple object.\nprint(conf().database.user)\n# >>> admin\n```\n\nA single file example doesn't encapsulate the usefulness of this module. Instead, imagine the following project:\n\n```\n.\nâ”œâ”€â”€ project\nâ”‚   â”œâ”€â”€ __init__.py\nâ”‚   â”œâ”€â”€ config.py\nâ”‚   â””â”€â”€ functionality.py\nâ””â”€â”€ main.py\n```\n\n### `config.py`\n\n```python\n\"\"\" 'Config' class to hold our desired configuration parameters. \n\nNote:\n    This is technically not needed. We do this so that the user knows what he/she should pass \n    as a config for the specific project. Note how we also take in a function object - this is\n    to demonstrate that one can have absolutely any type in the global config and is not subjected\n    to any limitations.\n\"\"\"\n\nfrom aconf import make_config\n\nclass Config:\n    def __init__(self, arg, func):\n        make_config(arg=arg, func=func)\n```\n\n### `functionality.py`\n\n```python\n\"\"\" Use of the global configuration through the `conf` function. \"\"\"\n\nfrom aconf import conf\n\nclass Example:\n    def __init__(self):\n        func = conf().func\n        arg = conf().arg\n\n        self.arg = func(arg)\n```\n\n### `main.py`\n\n```python\nfrom project.config import Config\nfrom project.functionality import Example\n\n# Random function to demonstrate we can pass _anything_ to 'make_config' inside 'Config'.\ndef uppercase(words):\n    return words.upper()\n\n# We create our custom configuration without saving it.\nConfig(arg=\"hello world\", func=uppercase)\n\n# We initialize our Example object without passing the 'Config' object to it.\nexample = Example()\nprint(example.arg) \n# >>> \"HELLO WORLD\"\n```\n\n# Performance\n\nAbsolutely no idea. I wrote this for small projects that I don't intend on releasing and so I have not bothered to benchmark it. If anyone runs the number it would be lovely if you reported either as an Issue, or directly by shooting a pull request with this portion of the `README.md` updated. The project in essence does the following:\n\n* `make_config(**kwargs)`: Pickles the `kwargs` dictionary and saves it to memory.\n* `config()`: Loads the pickled dictionary from memory.\n* `conf()`: Loads the pickled dictionary from memory and transforms it into `namedtuple`.\n\nIt would be reasonable to assume `conf()` performance is slower than `config()`. If I had to assume the largest performance drop is within the dumping and loading of pickled objects (even if from memory).\n\n# Project\n\nThis is the entirety of the project, which is inside `__init__.py`. Uses [`namedtuple`](https://docs.python.org/3/library/collections.html#collections.namedtuple):\n\n```python\nimport namedtupled\n\ndef make_config(**kwargs):\n    globals()[\"aconf\"] = kwargs\n\nconf = lambda: namedtupled.map(globals()[\"aconf\"])\nconfig = lambda: globals()[\"aconf\"]\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/synchronizing/aconf",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aconf",
    "package_url": "https://pypi.org/project/aconf/",
    "platform": "",
    "project_url": "https://pypi.org/project/aconf/",
    "project_urls": {
      "Homepage": "https://github.com/synchronizing/aconf"
    },
    "release_url": "https://pypi.org/project/aconf/1.0.1/",
    "requires_dist": [
      "namedtupled (>=0.3.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "Global memory-based configuration.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8885454,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76a5be8112dcf23bbca698c70a1efc75c962b50278356adc849e8f54dbfa984e",
          "md5": "944e74e184c32a77e5f9f6d449dcafc5",
          "sha256": "0a0f7c0d550fbc597fcfb4c70bab1cee992618cebc75c59553590038247cf970"
        },
        "downloads": -1,
        "filename": "aconf-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "944e74e184c32a77e5f9f6d449dcafc5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3207,
        "upload_time": "2020-10-29T01:19:57",
        "upload_time_iso_8601": "2020-10-29T01:19:57.234321Z",
        "url": "https://files.pythonhosted.org/packages/76/a5/be8112dcf23bbca698c70a1efc75c962b50278356adc849e8f54dbfa984e/aconf-1.0.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Uses fs, which is not a requirement."
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "914f6005bbac5a19644f434c25d490f5beb20074621062bdeece09da97e0d70e",
          "md5": "bfb68ef23db1fc094129c9bfdcc0793e",
          "sha256": "18326da3957a1c6b54e868590277af547d57d029661e228b01a260b5f531ad3d"
        },
        "downloads": -1,
        "filename": "aconf-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bfb68ef23db1fc094129c9bfdcc0793e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3452,
        "upload_time": "2020-10-29T01:19:59",
        "upload_time_iso_8601": "2020-10-29T01:19:59.812375Z",
        "url": "https://files.pythonhosted.org/packages/91/4f/6005bbac5a19644f434c25d490f5beb20074621062bdeece09da97e0d70e/aconf-1.0.0.tar.gz",
        "yanked": true,
        "yanked_reason": "Uses fs, which is not a requirement."
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a14d21da6ef48f63f07843b17caaaff53257e3e12771aabb22c87e098d8dca0e",
          "md5": "b77d27d6175fd1e06443e39350313bb0",
          "sha256": "943c973d05f5692da64b02b3f1a4ecec577636017ca3b7926ad01be1c0b106eb"
        },
        "downloads": -1,
        "filename": "aconf-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b77d27d6175fd1e06443e39350313bb0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3086,
        "upload_time": "2020-12-12T18:25:42",
        "upload_time_iso_8601": "2020-12-12T18:25:42.252703Z",
        "url": "https://files.pythonhosted.org/packages/a1/4d/21da6ef48f63f07843b17caaaff53257e3e12771aabb22c87e098d8dca0e/aconf-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dca83eb9db76d7fd660d4909989e09a9b2a253c884920c382ab0be6c25e4fc14",
          "md5": "3cdd20537836562467fece30d37a9572",
          "sha256": "c969a5a9001eccabb154957bb95171e4e5d44f71445fd3da938ee97ebf0872d9"
        },
        "downloads": -1,
        "filename": "aconf-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3cdd20537836562467fece30d37a9572",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3363,
        "upload_time": "2020-12-12T18:25:43",
        "upload_time_iso_8601": "2020-12-12T18:25:43.688663Z",
        "url": "https://files.pythonhosted.org/packages/dc/a8/3eb9db76d7fd660d4909989e09a9b2a253c884920c382ab0be6c25e4fc14/aconf-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a14d21da6ef48f63f07843b17caaaff53257e3e12771aabb22c87e098d8dca0e",
        "md5": "b77d27d6175fd1e06443e39350313bb0",
        "sha256": "943c973d05f5692da64b02b3f1a4ecec577636017ca3b7926ad01be1c0b106eb"
      },
      "downloads": -1,
      "filename": "aconf-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b77d27d6175fd1e06443e39350313bb0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 3086,
      "upload_time": "2020-12-12T18:25:42",
      "upload_time_iso_8601": "2020-12-12T18:25:42.252703Z",
      "url": "https://files.pythonhosted.org/packages/a1/4d/21da6ef48f63f07843b17caaaff53257e3e12771aabb22c87e098d8dca0e/aconf-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dca83eb9db76d7fd660d4909989e09a9b2a253c884920c382ab0be6c25e4fc14",
        "md5": "3cdd20537836562467fece30d37a9572",
        "sha256": "c969a5a9001eccabb154957bb95171e4e5d44f71445fd3da938ee97ebf0872d9"
      },
      "downloads": -1,
      "filename": "aconf-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3cdd20537836562467fece30d37a9572",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3363,
      "upload_time": "2020-12-12T18:25:43",
      "upload_time_iso_8601": "2020-12-12T18:25:43.688663Z",
      "url": "https://files.pythonhosted.org/packages/dc/a8/3eb9db76d7fd660d4909989e09a9b2a253c884920c382ab0be6c25e4fc14/aconf-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}