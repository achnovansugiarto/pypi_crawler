{
  "info": {
    "author": "Tiago Fernandez",
    "author_email": "tiago.fernandez@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Py-QueryBuilder\n\nQuery builder for [Python](https://python.org/) applications, designed to work with the same data structure generated by [MUI-QueryBuilder][mui-querybuilder].\n\n[![downloads](https://pepy.tech/badge/py-querybuilder/month)](https://pepy.tech/project/py-querybuilder/month)\n[![versions](https://img.shields.io/pypi/pyversions/py-querybuilder.svg)][py-querybuilder]\n\n## Installation\n\nPy-QueryBuilder is available as a [pypi package][py-querybuilder].\n\n```sh\npip install py-querybuilder\n```\n\n## Usage\n\nHere is a quick example to get you started.\nFirst you'll need a `templates` folder in your module, containing [Jinja2][jinja2] templates with a `{{ where }}` placeholder:\n\n```sql\nSELECT *\nFROM my_table\nWHERE {{ where }}\n```\n\nYou can now rely on the `QueryBuilder` class to render queries:\n\n```py\nfrom py_querybuilder import QueryBuilder\n\nqb = QueryBuilder(\"app.articles\", [\n    {\n        \"label\": \"Article\",\n        \"options\": [\n            {\n                \"label\": \"Title\",\n                \"value\": \"title\",\n                \"type\": \"text\",\n            },\n            {\n                \"label\": \"URL\",\n                \"value\": \"url\",\n                \"type\": \"text\",\n            },\n        ],\n    },\n])\nsql_query, sql_params = qb.render(\"query.sql\", {\n    \"combinator\": \"and\",\n    \"rules\": [\n        {\n            \"field\": \"title\",\n            \"operator\": \"contains\",\n            \"value\": \"Brazil\",\n        },\n    ],\n})\n```\n\nThe query is generated with [JinjaSQL][jinjasql], a template language for SQL statements and scripts.\nSince it's based in [Jinja2][jinja2], you have all the power it offers: conditional statements, macros, looping constructs, blocks, inheritance, and more.\nWe use [sqlparse][sqlparse] to format the queries.\n\n```sql\nSELECT *\nFROM my_table\nWHERE title ~* ? AS \"Title\"\n```\n\nThe default operators used for generating queries are:\n\n```py\n{\n    \"after\": \">\",\n    \"after_equal\": \">=\",\n    \"before\": \"<\",\n    \"before_equal\": \"<=\",\n    \"contains\": \"~*\",\n    \"greater\": \">\",\n    \"greater_equal\": \">=\",\n    \"equal\": \"=\",\n    \"in\": \"in\",\n    \"less\": \"<\",\n    \"less_equal\": \"<=\",\n    \"not_contains\": \"!~*\",\n    \"not_equal\": \"!=\",\n    \"not_in\": \"not in\",\n    \"not_null\": \"is not null\",\n    \"null\": \"is null\",\n}\n```\n\nIn case the database you're targeting uses different operators, it's possible to customize those at `QueryBuilder`'s instantiation:\n\n```py\nqb = QueryBuilder(my_module, my_query, operators={\n    # Custom operators.\n})\n```\n\nSQL parameters are returned from `render()` in a list of values corresponding to the placeholders that need to be bound to the query.\n\n```py\nprint(sql_params)\n# [\"Brazil\"]\n```\n\nFinally, you can now use the SQL query and its bind parameters to fetch data.\nFor example, in Django, you would do something like this:\n\n```py\nfrom django.db import connection\n\nwith connection.cursor() as cursor:\n    cursor.execute(sql_query, sql_params)\n\n    for row in cursor.fetchall():\n        # Do something with the results.\n        pass\n```\n\n## API\n\nCheck out the Py-QueryBuilder's API [here](http://tiagofernandez.com/py-querybuilder/)!\nTo learn more about the query's data structure, and how filters and operators work, please refer to [MUI-QueryBuilder][mui-querybuilder]'s documentation.\n\n## License\n\nThis project is licensed under the terms of the [MIT license](/LICENSE).\n\n[jinja2]: https://jinja.palletsprojects.com/\n[jinjasql]: https://github.com/hashedin/jinjasql/\n[mui-querybuilder]: https://github.com/tiagofernandez/mui-querybuilder/#mui-querybuilder\n[py-querybuilder]: https://pypi.org/project/py-querybuilder\n[sqlparse]: https://github.com/andialbrecht/sqlparse/\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tiagofernandez/py-querybuilder",
    "keywords": "python querybuilder sql",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-querybuilder",
    "package_url": "https://pypi.org/project/py-querybuilder/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-querybuilder/",
    "project_urls": {
      "Homepage": "https://github.com/tiagofernandez/py-querybuilder"
    },
    "release_url": "https://pypi.org/project/py-querybuilder/1.0.0/",
    "requires_dist": [
      "jinjasql",
      "sqlparse"
    ],
    "requires_python": ">=3.9",
    "summary": "Python Query Builder.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8589525,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f8d59d4f94ce9a4c3601f7a7a9867caf9deb9993d5780940c9ab044931aec2a",
          "md5": "47fe853fb40296cc9386b7e9c64cae57",
          "sha256": "7de2daaa5a2cc138a316fd80c6d0eaa66a0ee88551d76022a1921b282c654cf3"
        },
        "downloads": -1,
        "filename": "py_querybuilder-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47fe853fb40296cc9386b7e9c64cae57",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9",
        "size": 6380,
        "upload_time": "2020-11-05T17:39:44",
        "upload_time_iso_8601": "2020-11-05T17:39:44.938415Z",
        "url": "https://files.pythonhosted.org/packages/1f/8d/59d4f94ce9a4c3601f7a7a9867caf9deb9993d5780940c9ab044931aec2a/py_querybuilder-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f8d59d4f94ce9a4c3601f7a7a9867caf9deb9993d5780940c9ab044931aec2a",
        "md5": "47fe853fb40296cc9386b7e9c64cae57",
        "sha256": "7de2daaa5a2cc138a316fd80c6d0eaa66a0ee88551d76022a1921b282c654cf3"
      },
      "downloads": -1,
      "filename": "py_querybuilder-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47fe853fb40296cc9386b7e9c64cae57",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.9",
      "size": 6380,
      "upload_time": "2020-11-05T17:39:44",
      "upload_time_iso_8601": "2020-11-05T17:39:44.938415Z",
      "url": "https://files.pythonhosted.org/packages/1f/8d/59d4f94ce9a4c3601f7a7a9867caf9deb9993d5780940c9ab044931aec2a/py_querybuilder-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}