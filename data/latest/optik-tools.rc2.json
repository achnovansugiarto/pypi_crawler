{
  "info": {
    "author": "Trail of Bits",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Optik\n\n**Optik** is a set of symbolic execution tools that assist smart contract fuzzers, letting them run in a _hybrid_ mode. Optik couples [Echidna](https://github.com/crytic/echidna), our smart contract fuzzer, with the [Maat](https://github.com/trailofbits/maat) symbolic executor that replays the fuzzing corpus and extends it with new inputs that increase coverage.\n\n#### Current limitations\n\nOptik is a work in progress and should not be used for real audits yet. Current limitations include:\n\n- Symbolic `KECCAK` hashes are not supported\n- `CREATE2`, `CALLCODE`, and `DELEGATECALL` are not yet supported\n- Gas is not taken into account\n- Some echidna options are not yet supported (see `hybrid-echidna -h`)\n\n## Hybrid Echidna\n\n<p align=\"center\" >\n<img width=\"80%\" src=\".resources/hybrid_echidna.png\"/> <br>\n</p>\n\nOptik allows to run the [Echidna](https://github.com/crytic/echidna) smart-contract \nfuzzer in _hybrid_ mode. It basically couples Echidna with the [Maat](https://github.com/trailofbits/maat) symbolic executor that replays the Echidna corpus and extends it with new inputs that increase coverage. \n\n`hybrid-echidna` starts with several <i>incremental seeding</i> steps, where it seeds the corpus with short transactions sequences obtained by [Slither](https://github.com/crytic/slither)'s dataflow analysis, and uses symbolic execution more intensely to solve new inputs. The sequence length is incremented at each seeding step. Once it reaches a certain length threshold, `hybrid-echidna` falls back into its normal mode, starts to limit the number of symbolic inputs to solve, and stops using dataflow analysis for seeding the corpus.\n\n### Usage\n\nHybrid echidna can be used seamlessly in place of regular Echidna by replacing `echidna-test` with `hybrid-echidna` in your Echidna command line. \nFor example: \n\n```\nhybrid-echidna MyContract.sol  --test-mode assertion --corpus-dir /tmp/test --contract MyContract\n```\n\nAdditionnal options are available in hybrid mode to control `hybrid-echidna`'s behaviour:\n\n- `--max-iters`: maximum number of fuzzing iterations to perform (one iteration is one Echidna campaign + one symbolic executor run on the corpus)\n\n- `--solver-timeout`: maximum time in milliseconds to spend solving each possible new input\n\n- `--incremental-threshold`: number of initial incremental seeding steps to perform\n\n- `--no-incremental`: skip initial incremental seeding\n\n- `--cov-mode`: type of coverage to increase when solving new inputs. Most coverage modes are implemented for experimental purposes. Unless you are developing/hacking on Optik, we recommend to keep the default mode\n\nDebugging, logging and terminal display:\n\n- `--debug`: add debugging information to the log output\n\n- `--logs`: write logs to a given file (or `stdout`)\n\n- `--no-display`: disable the graphical terminal display\n\n## Installation\n\nFor a quick installation, run:\n\n```console\npython3 -m pip install optik-tools\n```\n\nTo keep up with the latest features and fixes, install Optik from its `master` branch:\n\n```console\ngit clone https://github.com/crytic/optik && cd optik\npython3 -m pip install .\n```\n\nYou can also run it from Docker:\n\n```console\ngit clone https://github.com/crytic/optik && cd optik\ndocker build -t crytic/optik .\ndocker run -it --rm --mount type=bind,source=\"$(pwd)\",target=/workdir crytic/optik\n# This runs the Docker container, mounting the local directory into /workdir\n```\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "optik-tools",
    "package_url": "https://pypi.org/project/optik-tools/",
    "platform": null,
    "project_url": "https://pypi.org/project/optik-tools/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/optik-tools/0.0.2/",
    "requires_dist": [
      "setuptools (>=45)",
      "wheel",
      "pymaat (>=0.6.7)",
      "eth-abi",
      "pysha3",
      "rlp",
      "crytic-compile",
      "slither-analyzer",
      "solc-select",
      "pyyaml",
      "black (~=22.0) ; extra == 'lint'",
      "pytest ; extra == 'tests'"
    ],
    "requires_python": ">=3.7",
    "summary": "Symbolic execution toolkit for Ethereum smart-contracts",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15992531,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b34426f363487ccd6c1a459a375b7acd250d694d0d685fb2b50613babe0e0c1c",
          "md5": "794f8328985304038ef9f1c93afe5a13",
          "sha256": "14ec4b2a24d9d9a86ce60fe8778e3c085a6ea67dc52e080c84f81feb85cb4f61"
        },
        "downloads": -1,
        "filename": "optik_tools-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "794f8328985304038ef9f1c93afe5a13",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 58460,
        "upload_time": "2022-08-22T15:27:00",
        "upload_time_iso_8601": "2022-08-22T15:27:00.452142Z",
        "url": "https://files.pythonhosted.org/packages/b3/44/26f363487ccd6c1a459a375b7acd250d694d0d685fb2b50613babe0e0c1c/optik_tools-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9746780a371ec3d751c4c7bd8410587f70f5f11764cf7a1465985f25e4535511",
          "md5": "c947cc9b070f7da7370174dc4951338d",
          "sha256": "542bfc0e06845781b68c4662b3167567396e947d0f89050de9e778b8a06279d9"
        },
        "downloads": -1,
        "filename": "optik-tools-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c947cc9b070f7da7370174dc4951338d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 51963,
        "upload_time": "2022-08-22T15:27:02",
        "upload_time_iso_8601": "2022-08-22T15:27:02.154610Z",
        "url": "https://files.pythonhosted.org/packages/97/46/780a371ec3d751c4c7bd8410587f70f5f11764cf7a1465985f25e4535511/optik-tools-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "884482354cf7cac740f51d018b5b478e94063dfb6058c824e0c447e33a7e501f",
          "md5": "a793a41f840279e79c5a6508a4bd460d",
          "sha256": "c245bfdfb4bb7c3f16a19e4b4e4c33ebeafbe5858f67f9c708e96c9c73d08a72"
        },
        "downloads": -1,
        "filename": "optik_tools-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a793a41f840279e79c5a6508a4bd460d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 60900,
        "upload_time": "2022-12-05T08:17:08",
        "upload_time_iso_8601": "2022-12-05T08:17:08.777413Z",
        "url": "https://files.pythonhosted.org/packages/88/44/82354cf7cac740f51d018b5b478e94063dfb6058c824e0c447e33a7e501f/optik_tools-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89d04388de6881c6107ea8b1b5d7f04b55caabd1c360366a59cfd99e20475b43",
          "md5": "9bc511ef6cfb4f8296e0aed283a4b208",
          "sha256": "eda23d4b0d0c591d7e665ca9385f00ba6be70c1fba0a0d7c9531421cbfad065f"
        },
        "downloads": -1,
        "filename": "optik-tools-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9bc511ef6cfb4f8296e0aed283a4b208",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 54247,
        "upload_time": "2022-12-05T08:17:09",
        "upload_time_iso_8601": "2022-12-05T08:17:09.999746Z",
        "url": "https://files.pythonhosted.org/packages/89/d0/4388de6881c6107ea8b1b5d7f04b55caabd1c360366a59cfd99e20475b43/optik-tools-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "884482354cf7cac740f51d018b5b478e94063dfb6058c824e0c447e33a7e501f",
        "md5": "a793a41f840279e79c5a6508a4bd460d",
        "sha256": "c245bfdfb4bb7c3f16a19e4b4e4c33ebeafbe5858f67f9c708e96c9c73d08a72"
      },
      "downloads": -1,
      "filename": "optik_tools-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a793a41f840279e79c5a6508a4bd460d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 60900,
      "upload_time": "2022-12-05T08:17:08",
      "upload_time_iso_8601": "2022-12-05T08:17:08.777413Z",
      "url": "https://files.pythonhosted.org/packages/88/44/82354cf7cac740f51d018b5b478e94063dfb6058c824e0c447e33a7e501f/optik_tools-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89d04388de6881c6107ea8b1b5d7f04b55caabd1c360366a59cfd99e20475b43",
        "md5": "9bc511ef6cfb4f8296e0aed283a4b208",
        "sha256": "eda23d4b0d0c591d7e665ca9385f00ba6be70c1fba0a0d7c9531421cbfad065f"
      },
      "downloads": -1,
      "filename": "optik-tools-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9bc511ef6cfb4f8296e0aed283a4b208",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 54247,
      "upload_time": "2022-12-05T08:17:09",
      "upload_time_iso_8601": "2022-12-05T08:17:09.999746Z",
      "url": "https://files.pythonhosted.org/packages/89/d0/4388de6881c6107ea8b1b5d7f04b55caabd1c360366a59cfd99e20475b43/optik-tools-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}