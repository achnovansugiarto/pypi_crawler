{
  "info": {
    "author": "Name",
    "author_email": "not_name47@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "All rights are reserved to Name.\n# data\nget a data<br> check if a data exist\n## get (select)\nparameters : valueName(str), Category(optional(str))<br />\nif value is None value will return None<br />\n```py\nimport namedb\nprint(f'Price : {namedb.get(\"price\")}')\n```\nerror handling<br />\nexemple : \n```py\nimport namedb\ntry:\n  namedb.get('a world without taxes')\nexcept namedb.ValueNotExist:\n  print('Damn it')\n```\nMutli-tasking select more then one thing using || to separate them\n<br>\nreturn a list of all of the arugments instanid of just the argument\n<br>\nexemple : \n```py\nimport namedb\nthing = namedb.get('a life|| a world without taxes')\nprint(thing[0])\nprint(thing[1])\n```\n## search (exist)\nparameters : valueName(str), Category(optional(str)) <br />\nif value exist it will return True (bool)<br />\nelse False\n```py\nimport namedb\nvar = namedb.search('price')\nif var:\n  print('Give me your money!')\n```\nmutli-tasking separate differents ellement with ||\n<br>\nreturn True is all the values exist else it return False\n```py\nimport namedb\nvar = namedb.search('price||due')\nif var:\n  print('Give me your money!')\n```\n# edit-data\n## add (aadd)\nparameters : ValueName(str), Value(Any), Category(optional(str))<br />\nif worked it will return True else False<br />\n```py\nimport namedb\nnamedb.add('price', 90)\n```\nerror handling<br />\nexemple : \n```py\nimport namedb\ntry:\n  namedb.add('taxes', 0.19)\nexcept namedb.ValueAlreadyExist:\n  print('Damn it')\n```\n## edit (replace)\nBig updates with edit\n<br>\n### edit-value\nparameters : valuename(str), value(any)\n```py\nimport namedb\nnamedb.edit('taxes', 'does not exist')\n```\n### add to a number\nparameters : valuename(str), add(int)\n```py\nimport namedb\nnamedb.edit('tomatostock', add=3)\n```\n### minus to a number\nparameters : valuename(str), minus(int)\n```py\nimport namedb\nnamedb.edit('tomatostock', minus=5)\n```\n### append to a list\nparameters : valuename(str), append(any)\n```py\nimport namedb\nnamedb.edit('product', append='tomato')\n```\n### remove to a list\nparameters : valuename(str), remove(any)\n```py\nimport namedb\nnamedb.edit('product', remove='tomato')\n```\n## remove (delete)\nparameters : ValueName(str), cache(optional(bool)), Category(optional(str))<br />\nif worked it will return True else False<br />\nstock the value in the cache if cache is true (false by default)\n```py\nimport namedb\nnamedb.remove('price')\n```\nerror handling<br />\nexemple : \n```py\nimport namedb\ntry:\n  namedb.remove('a world without taxes')\nexcept namedb.ValueNotExist:\n  print('Damn it')\n```\nmutli-tasking separate the values that you want to delete with ||\n```py\nimport namedb\nnamedb.remove('price||due')\n```\n# json\njust transfer json for now\n## transferjson (atransferjson)\nparameters : Data(json), Category(optional(str))<br />\nif worked it will return True else False<br />\n```py\nimport namedb\njsoncode = {\n'price': 90,\n'due': 60\n}\nnamedb.transferjson(jsoncode)\nprint(f'{namedb.get(\"price\")}')\n```\n# prefix\nfind or edit data with a prefix\n## prefix (aprefix)\nparameters : type(value or name), prefix(str), Category(optional(str))<br />\nreturn a list with all the files that starts with the prefix<br />\n```py\nimport namedb\nfor costumer in namedb.prefix(type='value', 'costumersdue'):\n  print(f'Due : {costumer}')\n```\nerror handling<br />\nexemple : \n```py\nimport namedb\ntry:\n  namedb.prefix('hi', 'taxes')\nexcept ValueError:\n  print('Damn it')\n```\n## clearprefix (cleanprefix)\nparameters : prefix(str), Category(optional(str))<br />\ndelete all the values that starts with the prefix<br />\n```py\nimport namedb\nnamedb.clearprefix('due')\n```\n# cache\nRestore data or remove data with a prefix or without\n## restore (arestore)\nparameters : valuename(str), Category(optional(str))<br>\nrestore a value from the cache (and return it)\n```py\nimport namedb\nnamedb.remove('taxes')\nprint('too good to be real')\nnamedb.restore('taxes')\n```\nerror handling<br />\nexemple : \n```py\nimport namedb\ntry:\n  namedb.restore('a world without taxes')\nexcept namedb.ValueNotExist:\n  print('Damn it')\n```\n## clearcache (cleancache)\nparameters : None\nclear the cache\n```py\nimport namedb\nnamedb.remove('money')\nnamedb.clearcache()\n```\n## clearcacheprefix (cleancacheprefix)\nparameters : prefix(str), Category(optional(str))\nclear the cache with a prefix\n```py\nimport namedb\nnamedb.remove('exemple2286')\nnamedb.clearcacheprefix('exemple')\n```\n# category\ncreate a category or remove it<br>\nWe highly recommend using category\n## createcat (acreatecat)\nParameters : categoryname(str)<br>\nCreate a category\n```py\nimport namedb\nnamedb.createcat('example')\n```\n## deletecat (adeletecat)\nParameters : categoryname(str)<br>\nDelete a category\n```py\nimport namedb\nnamedb.deletecat('example')\n```\n## listcat (alistcat)\nparameters : catname(str), type(str [\"name\", \"value\"]) <br>\nlist all values or name\n```py\nimport namedb\nfor value in namedb.listcat('stock', 'name'):\n  print(value)\n```\n# async\neverything work the same just change the name of the fonction\nexample : \n```py\nimport namedb\nasync def get_money(user_id: str):\n  value = await namedb.select(f'money{user_id}')\n  return value\n```\n# setup\ninstall setup.py and run it (answers the questions)<br />\n```bash\nDirectory path (example : C:/windows/desktop/my/project/) : C:/windows/Users/Me/Pycharm/project/\n```\n# migrating from version 1.6\nmulti-tasking now exist <br>\nexample:\n```py\nimport namedb\nnamedb.remove('taxes||bad things')\n```\n# recommandation\nPlease use try: and except: if you run a constant code because this errors can make your code stop<br>\nWe higly recommend using category<br /><br /><br /><br />\nWe aren't responsible for data lost.\n# bonus\nThis is one of the last versions of this database because I havte no ideas of what to do now except optimisation so don't expect big changes for the next versions it's probably be like backend optimisations<br>\nI will check to publish this as python package btw\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,database,fast,document,futuristic",
    "license": "GNU General Public License v2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "namedb",
    "package_url": "https://pypi.org/project/namedb/",
    "platform": null,
    "project_url": "https://pypi.org/project/namedb/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/namedb/1.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13984788,
  "releases": {
    "1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5b386743bc478373355be53c4ee791d2ab5c55b4afca642b47cb67651ccd9ca",
          "md5": "01d991e44952c9a3fd492b1a03e1b379",
          "sha256": "96df8f8ca06f4655e8fce197cb39dfd4b0dbc68dde73b9965a65960a518007a1"
        },
        "downloads": -1,
        "filename": "namedb-1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01d991e44952c9a3fd492b1a03e1b379",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2946,
        "upload_time": "2022-05-31T04:49:32",
        "upload_time_iso_8601": "2022-05-31T04:49:32.757831Z",
        "url": "https://files.pythonhosted.org/packages/c5/b3/86743bc478373355be53c4ee791d2ab5c55b4afca642b47cb67651ccd9ca/namedb-1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c671e8d1a4ec6af12e7d20f65d0e6ebc39de422653ac486725bbc9261d5d226f",
          "md5": "90884f0afed9d9f0a3eb43d126033cae",
          "sha256": "b398796b2b718d983ac2555477525915bc3e3bf8c6450665a58837e40de15b82"
        },
        "downloads": -1,
        "filename": "namedb-1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "90884f0afed9d9f0a3eb43d126033cae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3251,
        "upload_time": "2022-05-31T04:49:34",
        "upload_time_iso_8601": "2022-05-31T04:49:34.922239Z",
        "url": "https://files.pythonhosted.org/packages/c6/71/e8d1a4ec6af12e7d20f65d0e6ebc39de422653ac486725bbc9261d5d226f/namedb-1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5b386743bc478373355be53c4ee791d2ab5c55b4afca642b47cb67651ccd9ca",
        "md5": "01d991e44952c9a3fd492b1a03e1b379",
        "sha256": "96df8f8ca06f4655e8fce197cb39dfd4b0dbc68dde73b9965a65960a518007a1"
      },
      "downloads": -1,
      "filename": "namedb-1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "01d991e44952c9a3fd492b1a03e1b379",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 2946,
      "upload_time": "2022-05-31T04:49:32",
      "upload_time_iso_8601": "2022-05-31T04:49:32.757831Z",
      "url": "https://files.pythonhosted.org/packages/c5/b3/86743bc478373355be53c4ee791d2ab5c55b4afca642b47cb67651ccd9ca/namedb-1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c671e8d1a4ec6af12e7d20f65d0e6ebc39de422653ac486725bbc9261d5d226f",
        "md5": "90884f0afed9d9f0a3eb43d126033cae",
        "sha256": "b398796b2b718d983ac2555477525915bc3e3bf8c6450665a58837e40de15b82"
      },
      "downloads": -1,
      "filename": "namedb-1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "90884f0afed9d9f0a3eb43d126033cae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3251,
      "upload_time": "2022-05-31T04:49:34",
      "upload_time_iso_8601": "2022-05-31T04:49:34.922239Z",
      "url": "https://files.pythonhosted.org/packages/c6/71/e8d1a4ec6af12e7d20f65d0e6ebc39de422653ac486725bbc9261d5d226f/namedb-1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}