{
  "info": {
    "author": "maces",
    "author_email": "fastapi-htmx@mzip.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Plugins",
      "Environment :: Web Environment",
      "Framework :: AsyncIO",
      "Framework :: FastAPI",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "License :: Other/Proprietary License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Typing :: Typed"
    ],
    "description": "# FastAPI-HTMX\n\nExtension for FastAPI to make HTMX easier to use.\n\nFastAPI-HTMX is an opinionated extension for FastAPI to speed up development of lightly interactive web applications. FastAPI-HTMX is implemented as a decorator, so it can be used on endpoints selectively. Furthermore it reduces boilerplate for Jinja2 template handling and allows for rapid prototyping by providing convenient helpers.\n\n\n## Install\n\ninstall via `pip`:\n```\n$ pip install fastapi-htmx\n```\n\ninstall via `poetry`:\n```\n$ poetry add fastapi-htmx\n```\n\n\n## Usage\n\n### Getting Started\n\nBasic example using FastAPI with `fastapi-htmx`\n\n`my_app/api.py`:\n```python\nfrom pathlib import Path\n\nfrom fastapi import FastAPI, Request\nfrom fastapi.responses import HTMLResponse\nfrom fastapi.templating import Jinja2Templates\nfrom fastapi_htmx import htmx, htmx_init\n\napp = FastAPI()\nhtmx_init(templates=Jinja2Templates(directory=Path(\"my_app\") / \"templates\"))\n\n@app.get(\"/\", response_class=HTMLResponse)\n@htmx(\"index\", \"index\")\nasync def root_page(request: Request):\n    return {\"greeting\": \"Hello World\"}\n\n@app.get(\"/customers\", response_class=HTMLResponse)\n@htmx(\"customers\")\nasync def get_customers(request: Request):\n    return {\"customers\": [\"John Doe\", \"Jane Doe\"]}\n```\n\nNote that:\n- `htmx()` got parameters, specifying the Jinja2 template to use\n- `htmx_init()` is needed for FastAPI-HTMX to find the templates\n- **There is no direct handling of the template needed, it only needs to be specified and the needed variables need to be returned**. This way endpoints can be designed in a familiar way to standard REST endpoints in FastAPI.\n    - This simplifies modularizing the app later (see below) and also providing a REST API if needed. See the \"Usage\" section for further examples.\n    - `get_customers` does not respond with the whole web page, but only with a part of it. See the [HTMX documentation](https://htmx.org/docs/#introduction) on how HTMX merges partials into the current web page.\n- **`request: Request` although not used in the endpoint directly, it is currently required for the decorator to work!**\n\nThe [Jinja2 templates](https://jinja.palletsprojects.com/en/3.1.x/templates/) to go along with the above code need to be placed like specified in `htmx_init` in `my_app/templates/` in order for the example to work.\n\nThe root page `my_app/templates/index.jinja2`:\n```jinja2\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Hello FastAPI-HTMX</title>\n</head>\n<body>\n    <h1>{{ greeting }}</h1>\n    <button\n        hx-get=\"/customers\"\n        hx-swap=\"innerHTML\"\n        hx-target=\"#customers_list\"\n    >\n        Load Data\n    </button>\n    <div id=\"customers_list\"></div>\n    <script src=\"https://unpkg.com/htmx.org@1.8.5\"></script>\n</body>\n</html>\n```\n\nThe [partial template to load with HTMX](https://htmx.org/docs/#introduction) `my_app/templates/customers.jinja2`:\n```jinja2\n<ul>\n    {% for customer in customers %}\n        <li>{{ customer }}</li>\n    {% endfor %}\n</ul>\n```\n\n\n### Main Concept\n\nThe decorator `htmx` provides the following helpers:\n\n- `partial_template_name` The partial template to use\n- `full_template_name` The full page template to use when URL rewriting + history is used\n- `*_template_constructor` For DRY code, in case the logic to gather all needed variables is needed multiple times\n\nSeeing these arguments one might ask themselves: Why all these parameters? The answer is an opinionated take on how to design modular endpoints wit partials and url-rewriting support:\n\nThe idea behind FastAPI-HTMX is to maintain a modular structure in the app and with the endpoints. Similar to a REST API with a [SPA](https://developer.mozilla.org/en-US/docs/Glossary/SPA). This way the frontend can be modular as well. This majorly helps with supporting [URL rewriting and the history](https://htmx.org/docs/#history) in the frontend:\n\n- A simple endpoint just answers with the partial.\n- Without it, if the URL is rewritten and a user navigates back, reloads the page or copies the URL and opens it in another tab or shares the URL, only the partial would be shown in the browser.\n\n**To enable SPA like functionality FastAPI-HTMX uses the concept of partials and fullpages as arguments for the decorator and requires to return a dict of the needed variables**.\n\nIn order to support this in an app, see the following example:\n\n`my_app/api_with_constructors.py`:\n```python\nfrom pathlib import Path\n\nfrom fastapi import FastAPI, Request\nfrom fastapi.responses import HTMLResponse\nfrom fastapi.templating import Jinja2Templates\nfrom fastapi_htmx import htmx, htmx_init\n\napp = FastAPI()\nhtmx_init(templates=Jinja2Templates(directory=Path(\"my_app\") / \"templates\"))\n\ndef construct_customers():\n    return {\"customers\": [\"John Doe\", \"Jane Doe\"]}\n\ndef construct_root_page():\n    return {\n        \"greeting\": \"Hello World\",\n        **construct_customers()\n    }\n\n@app.get(\"/\", response_class=HTMLResponse)\n@htmx(\"index\", \"index\")\nasync def root_page(request: Request):\n    return construct_root_page()\n\n@app.get(\"/customers\", response_class=HTMLResponse)\n@htmx(\"customers\", \"index\", construct_customers, construct_root_page)\nasync def get_customers(request: Request):\n    pass\n```\n\nNote that:\n- The `construct_*` functions are added, they now return the data\n    - **`construct_root_page` gathers all variables specified needed for the root page, including those for partials**\n        - **This also means you must avoid naming conflicts across endpoints, so dicts can be merged.**\n        - Costly operations can still be ignored, just use if statements in the template or similar\n- The decorators arguments are extended\n    - The second argument is the fullpage template which is used when the endpoint is called directly (new tab, navigation or reload)\n        - **E.g. since `construct_root_page` gathers all the data for the whole page, the whole page can be returned to the client**\n    - The other arguments are just to save some boilerplate code handling the [`HX-Request` header](https://htmx.org/attributes/hx-push-url/)\n        - **There is no need to use the arguments for the constructor functions, they are just for convenience.** If needed the endpoint can be used for the logic as well. Especially if no URL rewriting is needed.\n\nFor the above code to work the `my_app/templates/index.jinja2` needs to be changed as well. The changes are in the button and target div.\nChanged root page `my_app/templates/index.jinja2`:\n```jinja2\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Hello FastAPI-HTMX</title>\n</head>\n<body>\n    <h1>{{ greeting }}</h1>\n    <button\n        hx-get=\"/customers\"\n        hx-push-url=\"true\"\n        hx-swap=\"innerHTML\"\n        hx-target=\"#customers_list\"\n    >\n        Load Data\n    </button>\n    <div id=\"customers_list\">\n        {% include 'customers.jinja2' %}\n    </div>\n    <script src=\"https://unpkg.com/htmx.org@1.8.6\"></script>\n</body>\n</html>\n```\n\nNote that:\n- `hx-push-url=\"true\"` was added to the button\n- The partial is now loaded by default requiring the main endpoint to also provide the needed variables like shown above\n\nThe unchanged partial `my_app/templates/customers.jinja2`:\n```jinja2\n<ul>\n    {% for customer in customers %}\n        <li>{{ customer }}</li>\n    {% endfor %}\n</ul>\n```\n\nTo add additional partials and endpoints just repeat the same logic:\n- Include the partial in the parent Jinja2 template, like the main template. A hierarchy is possible as well.\n- Refactor the partials endpoints logic into a function\n    - Add it's return value to the parents constructor function like done above in `construct_root_page`\n    - Add the parents template and constructor function to the partials endpoints `htmx` decorator arguments\n\n\n### Advanced Usage\n\nIn case the `htmx()` arguments for partial and fullpage callables are not flexible enough, an endpoint can be used like usual. For a bit more convenience the `HX-Request` header is easily accessible via `request.hx_request`:\n\n```python\nfrom fastapi_htmx import HXRequest, htmx, htmx_init\n\n@htmx(\"email_detail\", \"index\")\ndef get_email(request: HXRequest, email_id: int):\n    if request.hx_request:\n        return my_partial()\n    else:\n        return fullpage()\n```\n\n#### Filters\n\nIn order to use [custom Jinja2 filters](https://jinja.palletsprojects.com/en/3.1.x/api/#custom-filters) like the following, configure them like below.\n\n```Jinja2\n<p>{{ customer.created|datetime_format }}</p>\n```\n\nAdd custom filters for use in Jinja2 templates:\n```python\n# ...\ndef datetime_format(value: datetime, format=\"%H:%M %d.%m.%Y\"):\n    return value.strftime(format) if value is not None else \"\"\n\ntemplates = Jinja2Templates(directory=Path(\"my_app\") / \"templates\")\ntemplates.env.filters[\"datetime_format\"] = datetime_format\nhtmx_init(templates=templates)\n# ...\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/maces/fastapi-htmx",
    "keywords": "fastapi,htmx,html,jinja2",
    "license": "LGPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fastapi-htmx",
    "package_url": "https://pypi.org/project/fastapi-htmx/",
    "platform": null,
    "project_url": "https://pypi.org/project/fastapi-htmx/",
    "project_urls": {
      "Homepage": "https://github.com/maces/fastapi-htmx"
    },
    "release_url": "https://pypi.org/project/fastapi-htmx/0.2.0/",
    "requires_dist": [
      "fastapi (>=0.94,<0.95)",
      "jinja2 (>=3.1,<4.0)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "Extension for FastAPI to make HTMX easier to use.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17353826,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd74eb444d0b3425dd504428b8fe01aa2094fe5221ef79287c24ea45c0550098",
          "md5": "cd23cf524f7e2345a9e84450e084a04f",
          "sha256": "e4194ac86011243969ef8a56298a92536ef8825f30a1ca961abcd5cc01ac2c0c"
        },
        "downloads": -1,
        "filename": "fastapi_htmx-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd23cf524f7e2345a9e84450e084a04f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 5427,
        "upload_time": "2023-03-14T23:09:14",
        "upload_time_iso_8601": "2023-03-14T23:09:14.937090Z",
        "url": "https://files.pythonhosted.org/packages/bd/74/eb444d0b3425dd504428b8fe01aa2094fe5221ef79287c24ea45c0550098/fastapi_htmx-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69e195b9610de25bc3c888ee58306c532dbc25a699ba30ba2312f1b7ca2ec88d",
          "md5": "16bbc6eefe6ce76f16c95c3c35416be9",
          "sha256": "7946c5c78bee07b0b98e4c3702da13e096b7f0f35a977b0d7263f66fcdf67951"
        },
        "downloads": -1,
        "filename": "fastapi_htmx-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "16bbc6eefe6ce76f16c95c3c35416be9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 6235,
        "upload_time": "2023-03-14T23:09:17",
        "upload_time_iso_8601": "2023-03-14T23:09:17.000385Z",
        "url": "https://files.pythonhosted.org/packages/69/e1/95b9610de25bc3c888ee58306c532dbc25a699ba30ba2312f1b7ca2ec88d/fastapi_htmx-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ba52878b4bd397f71afa8177de23582a022ea16690848d6e136970ff41d48a9",
          "md5": "3d94f696b32495ccfd433b55fe098be1",
          "sha256": "3d48d977cf9306f6a4a7f7266fe1f02e877f57358041d4376524713a0b95b75e"
        },
        "downloads": -1,
        "filename": "fastapi_htmx-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d94f696b32495ccfd433b55fe098be1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 5697,
        "upload_time": "2023-03-15T23:02:22",
        "upload_time_iso_8601": "2023-03-15T23:02:22.871796Z",
        "url": "https://files.pythonhosted.org/packages/2b/a5/2878b4bd397f71afa8177de23582a022ea16690848d6e136970ff41d48a9/fastapi_htmx-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9c6055f298518c1372e2729a46e28d793e0e9ea7a9a2a3342d759e950d4019c",
          "md5": "d53087734287ced65db9047715698494",
          "sha256": "d6a347c6aef76daa801a4d3b0f019b793561cf3829017f804b4ea62d9a1e0f03"
        },
        "downloads": -1,
        "filename": "fastapi_htmx-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d53087734287ced65db9047715698494",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 6574,
        "upload_time": "2023-03-15T23:02:24",
        "upload_time_iso_8601": "2023-03-15T23:02:24.978522Z",
        "url": "https://files.pythonhosted.org/packages/a9/c6/055f298518c1372e2729a46e28d793e0e9ea7a9a2a3342d759e950d4019c/fastapi_htmx-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a5c5fc6283439366efc6f011c1e2b26b878cd10bae7b0798bb965f374a3c7c0",
          "md5": "da405b62ac7b17dabebe9c54b167c8cd",
          "sha256": "79c2446f61215d04f841a22b2f58f804fe476a07ca172eddd4b414fc7ef5a451"
        },
        "downloads": -1,
        "filename": "fastapi_htmx-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da405b62ac7b17dabebe9c54b167c8cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 5711,
        "upload_time": "2023-03-15T23:13:26",
        "upload_time_iso_8601": "2023-03-15T23:13:26.195036Z",
        "url": "https://files.pythonhosted.org/packages/7a/5c/5fc6283439366efc6f011c1e2b26b878cd10bae7b0798bb965f374a3c7c0/fastapi_htmx-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cc05ccd53ae0a258eb5b474196dba18e3404ea68224f7cde48823e3242fefc4",
          "md5": "cfa18103a28c52d5641fb8372d189393",
          "sha256": "9c2ed5a693b83b3f529db033864bd108903db4336c9a01b201dc2c5dc5ade549"
        },
        "downloads": -1,
        "filename": "fastapi_htmx-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cfa18103a28c52d5641fb8372d189393",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 6917,
        "upload_time": "2023-03-15T23:13:28",
        "upload_time_iso_8601": "2023-03-15T23:13:28.027622Z",
        "url": "https://files.pythonhosted.org/packages/2c/c0/5ccd53ae0a258eb5b474196dba18e3404ea68224f7cde48823e3242fefc4/fastapi_htmx-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad607be8bd5c9c587bf9c07bfaffe9015c1e2a65c9ed03bb7b0396facf9768fa",
          "md5": "f05baa1239cee56f303bd87f6e17e272",
          "sha256": "fdfc5f17683525ac97e1d163d0ecc8bfcb0aa6d9f717f2bf2681419aaf57e7a6"
        },
        "downloads": -1,
        "filename": "fastapi_htmx-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f05baa1239cee56f303bd87f6e17e272",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 6215,
        "upload_time": "2023-03-19T13:59:38",
        "upload_time_iso_8601": "2023-03-19T13:59:38.145351Z",
        "url": "https://files.pythonhosted.org/packages/ad/60/7be8bd5c9c587bf9c07bfaffe9015c1e2a65c9ed03bb7b0396facf9768fa/fastapi_htmx-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4204267623630abee5049a6b7a48956e598b57f5d1632572fd7bcd6ef1d9e16",
          "md5": "68eb00d9b31e6d44ac63f8e6f1a5b785",
          "sha256": "2d8d9f0880ce1299138afb32b7b1f6efdaa10365d781445b4a422269d6268be2"
        },
        "downloads": -1,
        "filename": "fastapi_htmx-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "68eb00d9b31e6d44ac63f8e6f1a5b785",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 7384,
        "upload_time": "2023-03-19T13:59:40",
        "upload_time_iso_8601": "2023-03-19T13:59:40.015515Z",
        "url": "https://files.pythonhosted.org/packages/e4/20/4267623630abee5049a6b7a48956e598b57f5d1632572fd7bcd6ef1d9e16/fastapi_htmx-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad607be8bd5c9c587bf9c07bfaffe9015c1e2a65c9ed03bb7b0396facf9768fa",
        "md5": "f05baa1239cee56f303bd87f6e17e272",
        "sha256": "fdfc5f17683525ac97e1d163d0ecc8bfcb0aa6d9f717f2bf2681419aaf57e7a6"
      },
      "downloads": -1,
      "filename": "fastapi_htmx-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f05baa1239cee56f303bd87f6e17e272",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 6215,
      "upload_time": "2023-03-19T13:59:38",
      "upload_time_iso_8601": "2023-03-19T13:59:38.145351Z",
      "url": "https://files.pythonhosted.org/packages/ad/60/7be8bd5c9c587bf9c07bfaffe9015c1e2a65c9ed03bb7b0396facf9768fa/fastapi_htmx-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4204267623630abee5049a6b7a48956e598b57f5d1632572fd7bcd6ef1d9e16",
        "md5": "68eb00d9b31e6d44ac63f8e6f1a5b785",
        "sha256": "2d8d9f0880ce1299138afb32b7b1f6efdaa10365d781445b4a422269d6268be2"
      },
      "downloads": -1,
      "filename": "fastapi_htmx-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "68eb00d9b31e6d44ac63f8e6f1a5b785",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 7384,
      "upload_time": "2023-03-19T13:59:40",
      "upload_time_iso_8601": "2023-03-19T13:59:40.015515Z",
      "url": "https://files.pythonhosted.org/packages/e4/20/4267623630abee5049a6b7a48956e598b57f5d1632572fd7bcd6ef1d9e16/fastapi_htmx-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}