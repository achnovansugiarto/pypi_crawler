{
  "info": {
    "author": "David Grimm",
    "author_email": "maehster@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pyppy\n*pyppy* is a Python library that allows to initialize a global config object that can be used\nthroughout your code without passing a config object between all of your methods. Additionally, \npyppy comes with a function decorator that allows for easy retrieval of config attributes in methods.\n\n\n## Please Read the Docs\nhttps://pyppy.readthedocs.io/en/latest/\n\n## Installation\n```bash\npip install pyppy\n```\n\n## Table of Contents\n  * [Usecases](#usecases)\n  * [Global Config Object](#global-config-object)\n  * [Automatic Argument Filling from Config Object](#automatic-argument-filling-from-config-object)\n    + [Automatic Detection of Arguments to be Filled](#automatic-detection-of-arguments-to-be-filled)\n    + [Mixed Parameters](#mixed-parameters)\n    + [Explicit Parameter Filling](#explicit-parameter-filling)\n  * [Conditional Execution of Functions based on Global Config State](#conditional-execution-of-functions-based-on-global-config-state)\n    + [Exact Value Matching](#exact-value-matching)\n    + [Custom Conditions](#custom-conditions)\n    + [Logical Conjunction and Disjunction of Conditions](#logical-conjunction-and-disjunction-of-conditions)\n  * [Enhancements](#enhancements)\n  * [Contribution](#contribution)\n\n## Usecases\n*pyppy* might help you if you want one of the following: \n* Easy global config access throughout your code \n* Execute methods conditionally based on the global configuration\n\n## Global Config Object\nMore here: https://pyppy.readthedocs.io/en/latest/pyppy.config.html \n\nYou can use the method ```initialize_config``` to initialize a global config and then use\nthe config with ```config()``` all throughout your project. In the following example we use \nit as a wrapper for arguments parsed with ```ArgumentParser``` but you can you any object\nthat has attributes to initialize a config.  \n```python\nfrom argparse import ArgumentParser\nfrom pyppy.config import initialize_config, config\n\nparser = ArgumentParser()\nparser.add_argument(\n    \"--debug\",\n    action=\"store_true\",\n    default=False\n)\n\ncli_args = [\"--debug\"]\nargs = parser.parse_args(cli_args)\n\ninitialize_config(args)\n\ndef debug_log():\n    if config().debug:\n        return \"debugging\"\n\n>>> debug_log()\ndebugging\n```\n\n## Automatic Argument Filling from Config Object\nMore here: https://pyppy.readthedocs.io/en/latest/pyppy.args.html\n### Automatic Detection of Arguments to be Filled\nIt gets even better. You can use the ```@fill_args``` decorator to automatically fill\nfunction arguments from the global config object. If a function argument has the same name \nas an attribute of your config it will automatically be filled with the corresponding value.\n(We're assuming here you have initialized the same config as in the last example.)\n```python\nfrom pyppy.args import fill_args\n\ninitialize_config()\nconfig().debug = True\n\n@fill_args()\ndef debug_log(debug):\n    if debug:\n        return \"debugging\"\n\n>>> debug_log()\ndebugging\n```\n### Mixed Parameters\nIf you have mixed parameters (parameters coming from the global config and parameters passed ad-hoc)\nthe decorator only fills the arguments which names exactly match with one of the attributes of \nthe global config. **Please note** that the \"normal\" parameters\ncan then only be passed as keyword arguments when calling the function.   \n```python\nfrom pyppy.config import initialize_config, config\n\ninitialize_config()\nconfig().debug = True\n\n@fill_args()\ndef debug_log(debug, message):\n    if debug:\n        return f\"debugging: {message}\"\n\n>>> debug_log(message=\"useful logs\") \ndebugging: useful logs\n```\n### Explicit Parameter Filling\nIn some cases it's necessary to tell the decorator exactly which arguments should be filled\nfrom the global config (e.g. when a function argument has the same name as an attribute of the \nglobal config but should not be filled from the global config). Then you can pass the names of\nthe arguments to be filled to the decorator as strings. The decorator will then only fill the\nparameters that are explicitly passed.\n```python\ninitialize_config()\nconfig().debug = True\n\n@fill_args(\"debug\")\ndef debug_log(debug, message):\n    if debug:\n        return f\"debugging: {message}\"\n\n>>> debug_log(message=\"useful logs\")\ndebugging: useful logs\n```\n## Conditional Execution of Functions based on Global Config State\nMore here: https://pyppy.readthedocs.io/en/latest/pyppy.conditions.html\n\n### Exact Value Matching\n*pyppy* allows you to execute functions based on conditions in your global config object.\nIn the example below, the ```@condition``` decorator will only execute the decorated function\nwhen the specified condition evaluates to true in based on the global config. An expression\nlike ```exp(debug=True)``` means that the function will only be executed if the attribute ```debug```\nhas the value ```True```. \n```python\nfrom pyppy.conditions import Exp, condition\n\ninitialize_config()\nconfig().debug = False\n\n@condition(Exp(debug=True))\ndef debug_log():\n    return \"hello\"\n\n>>> debug_log()\n<no output>\n\n>>> config().debug = True\n\n>>> debug_log()\nhello\n```\n### Custom Conditions\nIn cases you want to apply more complex conditions the decorator allows you to pass\na function with custom logic. The function should always return a boolean value (which\nspecifies if the decorated function should be executed or not). In the example below, we\nuse a lambda function but you can naturally use normal functions too. The only requirements\nare that the function should exactly expect one argument (the global config) and should return\na boolean value.\n```python\n\ninitialize_config()\nconfig().log_level = \"WARN_LEVEL_1\"\n\n@condition(Exp(lambda config: config.log_level.startswith(\"WARN\")))\ndef log_warn():\n    return \"WARNING\"\n\n>>> log_warn()\nWARNING\n\n>>> config().log_level\n\n>>> log_warn()\nINFO_LEVEL_2\n\n```\n### Logical Conjunction and Disjunction of Conditions\nIf you have multiple conditions that have to be true at the same time or either one has\nto be true you can use ```or_``` and ```and_``` to build the logic around them. ```or_``` and\n```and``` can be nested if necessary. \n\n```python\nfrom pyppy.conditions import condition, Exp, and_\n\ninitialize_config()\nconfig().log_level = \"WARN\"\nconfig().specific_log_level = \"LEVEL_1\"\n\n@condition(\n    and_(\n        Exp(log_level=\"WARN\"),\n        Exp(specific_log_level=\"LEVEL_1\")\n    )\n)\ndef log_warn_level_1():\n    return \"WARNING LEVEL 1\"\n\n>>> log_warn_level_1()\nWARNING LEVEL 1\n\n>>> config().log_level = \"INFO\"\n\n>>> log_warn_level_1()\n<no output>\n```\n## Enhancements\nWe're working on some enhancements so stay tuned :)\n\n## Contribution\nFeel free to create pull requests or contact me if you want to become a permanent \ncontributor. \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/maehster/pyppy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyppy",
    "package_url": "https://pypi.org/project/pyppy/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyppy/",
    "project_urls": {
      "Homepage": "https://github.com/maehster/pyppy"
    },
    "release_url": "https://pypi.org/project/pyppy/0.1.1/",
    "requires_dist": [
      "pytest ; extra == 'dev'",
      "pytest-pep8 ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "pylint (>=2.6.0) ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "Python library for global configuration and conditional method execution.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9236790,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "207902143abf5590d8f44f1a8890a9051d70d0f67142e0e3b450502dfc17723c",
          "md5": "39c97f39d4c8db556c6d72511b50f392",
          "sha256": "e881952fff65cf8c8447913b084498e47ed44903ae47f3fa177040fb4f33244d"
        },
        "downloads": -1,
        "filename": "pyppy-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39c97f39d4c8db556c6d72511b50f392",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 13968,
        "upload_time": "2021-01-23T09:40:09",
        "upload_time_iso_8601": "2021-01-23T09:40:09.235839Z",
        "url": "https://files.pythonhosted.org/packages/20/79/02143abf5590d8f44f1a8890a9051d70d0f67142e0e3b450502dfc17723c/pyppy-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "083a2e933a8ab3a8245c54fc24302eaaa89912705a14ea18fc5699327669ac37",
          "md5": "0fcd67c239c6a086097d2d2ca288cbfd",
          "sha256": "3f3d210e8778c0df4a128b1b332bb283349f19d3f049682e7917599655ad9494"
        },
        "downloads": -1,
        "filename": "pyppy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0fcd67c239c6a086097d2d2ca288cbfd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9912,
        "upload_time": "2021-01-23T09:40:10",
        "upload_time_iso_8601": "2021-01-23T09:40:10.361528Z",
        "url": "https://files.pythonhosted.org/packages/08/3a/2e933a8ab3a8245c54fc24302eaaa89912705a14ea18fc5699327669ac37/pyppy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "509b5e9c6cd1ab8fa8adfc60a9f049dfc5ec80921b3f988b0e3ea970b938df6f",
          "md5": "02a288270a48807810c08bad2ecbc568",
          "sha256": "5b5fc2e3f935ab9a27e827bbe4ba5732f6ca2359083b596ed410bb9b1e6c0903"
        },
        "downloads": -1,
        "filename": "pyppy-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "02a288270a48807810c08bad2ecbc568",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15830,
        "upload_time": "2021-01-23T09:45:39",
        "upload_time_iso_8601": "2021-01-23T09:45:39.647073Z",
        "url": "https://files.pythonhosted.org/packages/50/9b/5e9c6cd1ab8fa8adfc60a9f049dfc5ec80921b3f988b0e3ea970b938df6f/pyppy-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73fee49779b590e5caed9c60ea786d18bcb0b1e32c3650120154bd9ec0b85b4d",
          "md5": "256b5f8355cf45c67860fccf74425dbb",
          "sha256": "f9acca18b1332e15bc9872e69663b15957185a87f83ebf19caaaffb9b3a48025"
        },
        "downloads": -1,
        "filename": "pyppy-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "256b5f8355cf45c67860fccf74425dbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11370,
        "upload_time": "2021-01-23T09:45:40",
        "upload_time_iso_8601": "2021-01-23T09:45:40.510059Z",
        "url": "https://files.pythonhosted.org/packages/73/fe/e49779b590e5caed9c60ea786d18bcb0b1e32c3650120154bd9ec0b85b4d/pyppy-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d73498121965a90ad29aed54f1c45d587d57059073562927f4159efc2df09891",
          "md5": "bba3df10c99a7d20284014caf9ac2ee6",
          "sha256": "4bdc8e95ae543e44b56eb4cc628ba39b6b604f5d135713393755d492a6545fa7"
        },
        "downloads": -1,
        "filename": "pyppy-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bba3df10c99a7d20284014caf9ac2ee6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10632,
        "upload_time": "2021-01-23T10:29:58",
        "upload_time_iso_8601": "2021-01-23T10:29:58.426426Z",
        "url": "https://files.pythonhosted.org/packages/d7/34/98121965a90ad29aed54f1c45d587d57059073562927f4159efc2df09891/pyppy-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cffa1ca05a31b553ae950eec815d404b95c2d427e14b6162c56e307bf61f605",
          "md5": "79f86531b42e67feb6ed8f39ed6a1623",
          "sha256": "3b124500ea55fccc4991771d4836325b3461643a024133ec810014d16c38e7b9"
        },
        "downloads": -1,
        "filename": "pyppy-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "79f86531b42e67feb6ed8f39ed6a1623",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8487,
        "upload_time": "2021-01-23T10:29:59",
        "upload_time_iso_8601": "2021-01-23T10:29:59.306521Z",
        "url": "https://files.pythonhosted.org/packages/8c/ff/a1ca05a31b553ae950eec815d404b95c2d427e14b6162c56e307bf61f605/pyppy-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b95147fe149a61a5a5ae5d8a6c3e88bb07a847cf0ef644cb6343c5c2eb94994",
          "md5": "4e25ce8e551973a16a213bba3a521b78",
          "sha256": "42432d9cff7a1cafb21b61c843d944395d59a235c7a3b6f83661c72477e4e756"
        },
        "downloads": -1,
        "filename": "pyppy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e25ce8e551973a16a213bba3a521b78",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17104,
        "upload_time": "2021-01-24T16:43:52",
        "upload_time_iso_8601": "2021-01-24T16:43:52.024232Z",
        "url": "https://files.pythonhosted.org/packages/4b/95/147fe149a61a5a5ae5d8a6c3e88bb07a847cf0ef644cb6343c5c2eb94994/pyppy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bfe38bf7734c153e096b0a9f2e722dd9f2bf12976f4d1446cb34bb33d5f0ce1",
          "md5": "63ac18699d5ce4b8ce40e2455c2e065b",
          "sha256": "352453f478217fc19019ebc35b229dd95a14559aafcf0f19446641b76eb5696e"
        },
        "downloads": -1,
        "filename": "pyppy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "63ac18699d5ce4b8ce40e2455c2e065b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15272,
        "upload_time": "2021-01-24T16:43:53",
        "upload_time_iso_8601": "2021-01-24T16:43:53.270518Z",
        "url": "https://files.pythonhosted.org/packages/1b/fe/38bf7734c153e096b0a9f2e722dd9f2bf12976f4d1446cb34bb33d5f0ce1/pyppy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "286dae1abee21a0e17a2e23a0763c85a1c4995739a373b38a6c900f34a35f610",
          "md5": "63f98b5105cf6f24540b9ccc7ecd0671",
          "sha256": "353b0f6c6f3dc5eda306917944f293f47c8f6752e53ce937c340842c1fc63774"
        },
        "downloads": -1,
        "filename": "pyppy-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63f98b5105cf6f24540b9ccc7ecd0671",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17123,
        "upload_time": "2021-01-26T20:18:34",
        "upload_time_iso_8601": "2021-01-26T20:18:34.320226Z",
        "url": "https://files.pythonhosted.org/packages/28/6d/ae1abee21a0e17a2e23a0763c85a1c4995739a373b38a6c900f34a35f610/pyppy-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47537c5b083c357a551d0d6b7850287772ae9bf48a1aedd3eec9f25307018a47",
          "md5": "14de0be8217a57a3f51b5bb0c48cf48b",
          "sha256": "74dc94c64053dcaba54e2dd9713d97aa31c70d3fe5a8b818411f7ac6de1218fb"
        },
        "downloads": -1,
        "filename": "pyppy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "14de0be8217a57a3f51b5bb0c48cf48b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15409,
        "upload_time": "2021-01-26T20:18:35",
        "upload_time_iso_8601": "2021-01-26T20:18:35.528842Z",
        "url": "https://files.pythonhosted.org/packages/47/53/7c5b083c357a551d0d6b7850287772ae9bf48a1aedd3eec9f25307018a47/pyppy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "286dae1abee21a0e17a2e23a0763c85a1c4995739a373b38a6c900f34a35f610",
        "md5": "63f98b5105cf6f24540b9ccc7ecd0671",
        "sha256": "353b0f6c6f3dc5eda306917944f293f47c8f6752e53ce937c340842c1fc63774"
      },
      "downloads": -1,
      "filename": "pyppy-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "63f98b5105cf6f24540b9ccc7ecd0671",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17123,
      "upload_time": "2021-01-26T20:18:34",
      "upload_time_iso_8601": "2021-01-26T20:18:34.320226Z",
      "url": "https://files.pythonhosted.org/packages/28/6d/ae1abee21a0e17a2e23a0763c85a1c4995739a373b38a6c900f34a35f610/pyppy-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47537c5b083c357a551d0d6b7850287772ae9bf48a1aedd3eec9f25307018a47",
        "md5": "14de0be8217a57a3f51b5bb0c48cf48b",
        "sha256": "74dc94c64053dcaba54e2dd9713d97aa31c70d3fe5a8b818411f7ac6de1218fb"
      },
      "downloads": -1,
      "filename": "pyppy-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "14de0be8217a57a3f51b5bb0c48cf48b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15409,
      "upload_time": "2021-01-26T20:18:35",
      "upload_time_iso_8601": "2021-01-26T20:18:35.528842Z",
      "url": "https://files.pythonhosted.org/packages/47/53/7c5b083c357a551d0d6b7850287772ae9bf48a1aedd3eec9f25307018a47/pyppy-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}