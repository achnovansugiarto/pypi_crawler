{
  "info": {
    "author": "Rafael Garcia Sagastume",
    "author_email": "rafael.garcia@ciberc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: Other/Proprietary License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Terminals",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "# ciberc-ca\n\nCiberC Code Automation\n\nGeneration of interface reports for IOS devices in parallel, cross validations for migration of VRFs from IOS devices to XR\n\n# https://www.ciberc.com\n\n#  Technology stack\n\nPython 3.6 or higher\n\n#  Status\n\nlatest version validated and tested\n\n# Use Case Description\n\nOne of our clients generated the VRF migration report in an exhausting time, in terms of the client, one week to validate each piece of equipment, ciberc-ca generates a comparative cross-validation report saving a lot of time and avoiding human errors.\n\n# Installation\n\n```\nUbuntu 20.04 or o any Distribution of Linux with support to Python3\n```\n\n# Steps to install in Ubuntu workstation (automation station)\n\n```\nprepare environment:\n  sudo apt-get install python3\n  sudo apt-get install git\n  sudo apt-get install python3-pip\n  python3 -m pip install virtualenv\n\n  mkdir code & cd code\n  python3 -m venv .venv\n  source .venv/bin/activate\n  python3 -m pip install cibercca\n\n```\n\n\n# Configuration\n\nThe first step is to create the inventory files, in these will go the record of the devices assigned to evaluate\n\n# Examples\n\n## Commands:\n\n```\nCommands:\n  alive       Alive for all device filter with groups\n  interfaces  Device interface information\n  inventory   Create files for inventory system\n  ping        report por vrf and ping results for inventory devices\n  ping-merge  Command to merge the source vrf listing files and...\n```\n\n### Alive command:\n\n```\nDescription: ping report of all inventory devices\n\nOptions:\n  --path TEXT\n  --group TEXT\n  --workers INTEGER\n  --output TEXT\n\nExample:\n    $ ciberc-ca alive --path=inventory/ --group=guatemala --workers=4 --output=json > alive-report.json\n```\n\n### Inventory files command:\n\n```\nDescription: create the necessary files to create the cyberc-ca system inventory\n\nOptions:\n  --create / --no-create  create files from inventory examples  [default: no-create]\n\nExample:\n    $ ciberc-ca inventory --create\n```\n\n### Interfaces command:\n\n```\nDescription: report interfaces of cisco ios devices currently, generates report in json as a summary in excel\n    - BVI\n    - Vlans\n    - trunk interfaces\n    - bridge-domain\n    - mac-address-table dynamic\n\nOptions:\n  --path PATH        The path to inventory  [required]\n  --group TEXT       The groups to filter inventory [required]\n  --workers INTEGER  The parallel execution  [default: 2]\n  --output TEXT      The type to print report  [default: json]\n  --mechanism TEXT   The excel mechanism to print report\n  --name TEXT        The name of excel report\n\nExample:\n    $ ciberc-ca interfaces --path=core/inventory/ --output=json > interfaces.json\n    $ ciberc-ca interfaces --path=core/inventory/ --output=excel --mechanism=row --name=interfaces > interfaces.json\n```\n\n\n### Ping command:\n\n```\nDescription: report por vrf and ping results for inventory devices\n\nOptions:\n  --path PATH        The path to inventory  [required]\n  --group TEXT       The groups to filter inventory  [required]\n  --workers INTEGER  The parallel execution  [default: 2]\n  --output TEXT      The type to print report  [default: json]\n  --name TEXT        The name of the excel file\n  --process TEXT     what type of process for the vrf report [src, dst] [required]\n  --help             Show this message and exit.\n\nExample:\n    $ ciberc-ca ping --path=core/inventory/ --group=src,guatemala,escuintla --output=json --name=ReportPingSource --process=src\n    $ ciberc-ca ping --path=core/inventory/ --group=dst,guatemala,escuintla --output=json --name=ReportPingDestinations --process=dst\n```\n\n### Ping-Merge command:\n\n```\nDescription: Command to merge the source vrf listing files and destination with validated report\n\nOptions:\n  --file-src TEXT  Vrf origin listing file  [required]\n  --file-dst TEXT  Target vrf listing file  [required]\n  --output TEXT    The type to print report  [required]\n  --name TEXT      The name of the excel file\n  --help           Show this message and exit.\n\nExample:\n    $ ciberc-ca ping-merge --file-src=file_vrfs_source.json --file-dst=file_vrf_destinations.json --output=excel --name=ReporteMigrations\n\n```\n\n# Structure\n\n```\ninventory/\n├── defaults.yaml\n├── groups.yaml\n└── hosts.yaml\n\n\nInventory is based on nornir structure\n\n  defaults.yaml: Contains all the default variables for the devices.\n\n  groups.yaml: Although based on nornir groups, two mandatory groups are needed for configuration, src, dst for the cross-validation ping-merge command.\n\n  hosts.yaml: where all IOS devices are registered for interface reporting, source IOS and destination XR for VRF's migration\n```\n\n\n# Usage\n\npara implementar el servicio una vez que haya definido los equipos en el archivo de hosts (aquí se define el usuario y la contraseña que se aplicará por tipo de dispositivo), los nombres de los dispositivos de red correctamente (en el archivo etc/hosts) y los dispositivos tienen la configuración de SSH, entonces colocaría los comandos de ejemplo para activar el agente ssh y xml en XR.\n\n# configuration example in XR device\n```\n# default.yaml\n---\ndata:\n  domain: local.local\n\n\n# groups.yaml\n---\n# {} => ejemplo\nguatemala: {}\n\n# for the ping report, it contains all the source computers\nsrc: {}\n\n# for the ping report, it contains all the destination computers\ndst: {}\n\n\n# hosts.yaml\n---\nR1:\n  hostname: localhost\n  port: 22\n  username: user\n  password: secret\n  platform: ios\n  groups:\n    - guatemala\n    - src # used to separate the source computers from the migration\n\nR2:\n  hostname: localhost\n  port: 22\n  username: user\n  password: secret\n  platform: iosxr\n  data:\n    source: R1 # to which device does the migration belong, virtual link to compare reports\n  groups:\n    - guatemala\n    - dst # used to separate the migration destination computers\n\n\n```\n\n\n# How to test the software\n\nyou can check the configuration in the devices in the generated report\n\n# Getting help\n\nIf you have questions, concerns, bug reports, etc., please create an issue against this repository, or send me an email to: Dev.auto@ciberc.com\n\n# Link Video Example\nhttps://www.youtube.com/watch?v=d_Vwdx62hG8\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cibercca",
    "package_url": "https://pypi.org/project/cibercca/",
    "platform": null,
    "project_url": "https://pypi.org/project/cibercca/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/cibercca/0.2.3/",
    "requires_dist": [
      "napalm (==3.3.1)",
      "nornir (==3.2.0)",
      "PyYAML (==6.0)",
      "typer (==0.4.1)",
      "tabulate (==0.8.9)",
      "tqdm (==4.62.3)",
      "ttp (==0.8.1)",
      "hvac (==0.11.2)",
      "pandas (==1.3.4)",
      "openpyxl (==3.0.9)",
      "netmiko (==3.4.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "CiberC Code Automation - reports excel and json formats",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14266452,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c445afe6bfc494bab9b34914aee11402729493f657b0d28bb05ccdba7ec675a6",
          "md5": "4ce48edf8a83b7e1031155b8d6b5b78f",
          "sha256": "476b39b632784a8de7515dab3f1c06dbd5276adeb8c9a535da74c27738a4cc7c"
        },
        "downloads": -1,
        "filename": "cibercca-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ce48edf8a83b7e1031155b8d6b5b78f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 15832,
        "upload_time": "2021-12-14T20:38:16",
        "upload_time_iso_8601": "2021-12-14T20:38:16.160120Z",
        "url": "https://files.pythonhosted.org/packages/c4/45/afe6bfc494bab9b34914aee11402729493f657b0d28bb05ccdba7ec675a6/cibercca-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93583e1e67dfc85a65a2f5bf791fec4aa680747080e56c78b47f9aafc79baf9c",
          "md5": "2c8f7bf7712e9e51ce857dc0bedfd17c",
          "sha256": "523aed699e62bdb6c9ef643d3b1d3ba7390bb7fbd320146ea80ae4239bbe88f8"
        },
        "downloads": -1,
        "filename": "cibercca-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2c8f7bf7712e9e51ce857dc0bedfd17c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 11293,
        "upload_time": "2021-12-14T20:38:17",
        "upload_time_iso_8601": "2021-12-14T20:38:17.994968Z",
        "url": "https://files.pythonhosted.org/packages/93/58/3e1e67dfc85a65a2f5bf791fec4aa680747080e56c78b47f9aafc79baf9c/cibercca-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97a8138e827f89e50261f0de26d3a083061c337a8f0b230074ed2b63c0e2f6de",
          "md5": "685e50d0766bd86402828d9c9d6eb527",
          "sha256": "19418eece12bdc79e34da76411789b56ecc83d2f1bead3329b0cf690fca13400"
        },
        "downloads": -1,
        "filename": "cibercca-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "685e50d0766bd86402828d9c9d6eb527",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 15860,
        "upload_time": "2021-12-15T16:35:03",
        "upload_time_iso_8601": "2021-12-15T16:35:03.593878Z",
        "url": "https://files.pythonhosted.org/packages/97/a8/138e827f89e50261f0de26d3a083061c337a8f0b230074ed2b63c0e2f6de/cibercca-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "414569770bd326569fcba9b8ee77474d80f7ca801609f3f62494531e42c43760",
          "md5": "2cd8d1c42cfcf31c9a700e58c54cf9fc",
          "sha256": "5edda4494059895e2afe1fe4c885658889a213ba9e77f15862e5b41722c38de9"
        },
        "downloads": -1,
        "filename": "cibercca-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2cd8d1c42cfcf31c9a700e58c54cf9fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 11328,
        "upload_time": "2021-12-15T16:35:05",
        "upload_time_iso_8601": "2021-12-15T16:35:05.355557Z",
        "url": "https://files.pythonhosted.org/packages/41/45/69770bd326569fcba9b8ee77474d80f7ca801609f3f62494531e42c43760/cibercca-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e934e3968e0c0aa7dea35c0d3e1f1438f68a05f3d2e3649fca561ef97f19800c",
          "md5": "ec901b6e64a63589700f22aeed92b5a5",
          "sha256": "94be8416d5a833e988cf0fe8bba77bb8c4b8798d7979099fb2f3902275f430ae"
        },
        "downloads": -1,
        "filename": "cibercca-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec901b6e64a63589700f22aeed92b5a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 29668,
        "upload_time": "2022-03-30T17:35:35",
        "upload_time_iso_8601": "2022-03-30T17:35:35.795475Z",
        "url": "https://files.pythonhosted.org/packages/e9/34/e3968e0c0aa7dea35c0d3e1f1438f68a05f3d2e3649fca561ef97f19800c/cibercca-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d313f98aeff4cca1082aa212921d3a4a91c4db647c3af39016a8c3be787a5f54",
          "md5": "85ff108270377ef7e03a95cd8f21c32f",
          "sha256": "6106e3119f1afd1d7b5192a853e7a3e819db03d8c6932822deb3c3f62aa615d8"
        },
        "downloads": -1,
        "filename": "cibercca-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "85ff108270377ef7e03a95cd8f21c32f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 22136,
        "upload_time": "2022-03-30T17:35:37",
        "upload_time_iso_8601": "2022-03-30T17:35:37.647606Z",
        "url": "https://files.pythonhosted.org/packages/d3/13/f98aeff4cca1082aa212921d3a4a91c4db647c3af39016a8c3be787a5f54/cibercca-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06d9493f2a9b637879939e599c15d655d9a174cabf07752a02b96f2a1467bec4",
          "md5": "cc6a1b6a9d1d1c74a72f2712a5a49713",
          "sha256": "a29c72b6aa0b9484fd5a9716d2db013809756ee8b38ef836a7be348307267d03"
        },
        "downloads": -1,
        "filename": "cibercca-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc6a1b6a9d1d1c74a72f2712a5a49713",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 30899,
        "upload_time": "2022-06-27T16:14:07",
        "upload_time_iso_8601": "2022-06-27T16:14:07.261961Z",
        "url": "https://files.pythonhosted.org/packages/06/d9/493f2a9b637879939e599c15d655d9a174cabf07752a02b96f2a1467bec4/cibercca-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c02fcbe2e9e34fe14a54a57803d57d5b0dd6f5fc98cfae314b5d7e5bb8a41e8e",
          "md5": "41e1dc45cf12a8151cc0338654f845b9",
          "sha256": "314c1f965f12a7a9166472460cf5dbf9edb258ca8aa097bd8fc6bc3a85ae0d53"
        },
        "downloads": -1,
        "filename": "cibercca-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "41e1dc45cf12a8151cc0338654f845b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 24511,
        "upload_time": "2022-06-27T16:14:19",
        "upload_time_iso_8601": "2022-06-27T16:14:19.193211Z",
        "url": "https://files.pythonhosted.org/packages/c0/2f/cbe2e9e34fe14a54a57803d57d5b0dd6f5fc98cfae314b5d7e5bb8a41e8e/cibercca-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06d9493f2a9b637879939e599c15d655d9a174cabf07752a02b96f2a1467bec4",
        "md5": "cc6a1b6a9d1d1c74a72f2712a5a49713",
        "sha256": "a29c72b6aa0b9484fd5a9716d2db013809756ee8b38ef836a7be348307267d03"
      },
      "downloads": -1,
      "filename": "cibercca-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cc6a1b6a9d1d1c74a72f2712a5a49713",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 30899,
      "upload_time": "2022-06-27T16:14:07",
      "upload_time_iso_8601": "2022-06-27T16:14:07.261961Z",
      "url": "https://files.pythonhosted.org/packages/06/d9/493f2a9b637879939e599c15d655d9a174cabf07752a02b96f2a1467bec4/cibercca-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c02fcbe2e9e34fe14a54a57803d57d5b0dd6f5fc98cfae314b5d7e5bb8a41e8e",
        "md5": "41e1dc45cf12a8151cc0338654f845b9",
        "sha256": "314c1f965f12a7a9166472460cf5dbf9edb258ca8aa097bd8fc6bc3a85ae0d53"
      },
      "downloads": -1,
      "filename": "cibercca-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "41e1dc45cf12a8151cc0338654f845b9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 24511,
      "upload_time": "2022-06-27T16:14:19",
      "upload_time_iso_8601": "2022-06-27T16:14:19.193211Z",
      "url": "https://files.pythonhosted.org/packages/c0/2f/cbe2e9e34fe14a54a57803d57d5b0dd6f5fc98cfae314b5d7e5bb8a41e8e/cibercca-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}