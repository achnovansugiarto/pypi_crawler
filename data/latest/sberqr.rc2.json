{
  "info": {
    "author": "bl4ckm45k",
    "author_email": "nonpowa@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Office/Business :: Financial"
    ],
    "description": "# Плати QR Сбербанк и СБП\r\n\r\nАсинхронная библиотека для работы с SberPay QR/Плати QR.\r\n\r\nПозволяет создавать динамический QR и проверять статус платежа.\r\n\r\n> Если при инициализации класса `AsyncSberQR` переданы одинаковые `tid` и `id_qr`, то будет создан\r\n> платеж через СБП, иначе через ПлатиQR.\r\n## Пример (async)\r\n\r\n```python\r\nimport asyncio\r\nfrom SberQR import AsyncSberQR\r\n\r\n# Если требуется передайте аргумент redis=\r\n# redis = aioredis.from_url(\"redis://localhost\", decode_responses=True)\r\n# redis = \"redis://localhost\"\r\n# Redis используется только для временного хранения токена\r\nsber_qr = AsyncSberQR(member_id, id_qr, tid, client_id, client_secret,\r\n                      path_crt_from_pkcs12, path_key_from_pkcs12, pkcs12_password)\r\npositions = [{\"position_name\": 'Товар ра 10 рублей',\r\n              \"position_count\": 1,\r\n              \"position_sum\": 1000,\r\n              \"position_description\": 'Какой-то товар за 10 рублей'}\r\n             ]\r\nasync def creation_qr():\r\n    data = await sber_qr.creation(description=f'Оплата заказа 3', order_sum=1000, order_number=\"3\", positions=positions)\r\n    print(data)\r\nif __name__ == '__main__':\r\n    asyncio.run(creation_qr())\r\n```\r\n\r\nДля работы потребуется получить от банка следующие параметры\r\n\r\n```python\r\nmember_id = '00000105'  # выдается через почту support@ecom.sberbank.ru \r\ntid = '24601234'  # ID  терминала/Точки. Получить в ЛК Сбрербанк бизнес на странице Информация о точке\r\nid_qr = '1000301234'  # Номер наклейки с QR-кодом. Получить в ЛК Сбрербанк бизнес Информация о точке/список оборудования\r\nclient_id = '6e7254e2-6de8-4074-b458-b7238689772b'  # получить на api.developer.sber.ru\r\nclient_secret = '3a0ea8cb-886c-4efa-ac45-e3d36aaba335'  # получить на api.developer.sber.ru\r\npath_crt_from_pkcs12 = 'cert.crt' # Файл сертификат 'key.p12' Получается на api.developer.sber.ru \r\npath_key_from_pkcs12 = 'private.key' # Файл сертификат 'key.p12' Получается на api.developer.sber.ru\r\npkcs12_password = 'SomeSecret'  # Пароль от файла сертификата. Получается на api.developer.sber.ru\r\n```\r\n\r\n## Распаковка pkcs12 с помощью OpenSSL\r\n\r\n[Инструкция от ssl.com](https://www.ssl.com/ru/how-to/export-certificates-private-key-from-pkcs12-file-with-openssl/ \"SSL.com\") - для Windows обратите внимание на Cygwin в инструкции\r\n\r\n```\r\nОткройте командную строку, перейдите в папку, где лежит архив сертификата с расширением .p12. Выполните команду:\r\n\r\nopenssl pkcs12 -in <название_архива>.p12 -nodes -nocerts -out private.key\r\n\r\nПоявится запрос пароля. Введите пароль, который вы вводили при создании приложения, нажмите Enter.\r\n\r\nДалее аналогично выполните команду:\r\n\r\nopenssl pkcs12 -in <название_архива>.p12 -clcerts -nokeys -out client_cert.crt\r\n\r\nВ итоге вы получите приватный ключ в файле private.key и клиентский сертификат в файле client_cert.crt в папке, где лежит архив сертификата.\r\n````\r\n## Ссылки\r\nДля использования требуется аккаунт Сбер Банк бизнес.\r\nhttps://sbi.sberbank.ru:9443/ic/dcb/#/\r\n\r\nДалее необходимо Авторизоваться\r\nhttps://api.developer.sber.ru/\r\n\r\nПроцесс подключения описан в инструкции\r\nhttps://api.developer.sber.ru/product/PlatiQR/doc/v1/QR_API_doc3\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bl4ckm45k/SberQR",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SberQR",
    "package_url": "https://pypi.org/project/SberQR/",
    "platform": null,
    "project_url": "https://pypi.org/project/SberQR/",
    "project_urls": {
      "Homepage": "https://github.com/bl4ckm45k/SberQR"
    },
    "release_url": "https://pypi.org/project/SberQR/1.0.1b1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Асинхронная библиотека для работы с SberPay QR/Плати QR.",
    "version": "1.0.1b1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15143156,
  "releases": {
    "1.0.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2168da54f600575e8e7bac7b2f1f684de65bcf69dc67f7bd1baa3d3576bb44e6",
          "md5": "84799a8f569fab68cf78562011862559",
          "sha256": "ce43e192debf2da1bbf7985420a5a0001566e123cde722d2395693138953c8f7"
        },
        "downloads": -1,
        "filename": "SberQR-1.0.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "84799a8f569fab68cf78562011862559",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8029,
        "upload_time": "2022-09-19T12:57:16",
        "upload_time_iso_8601": "2022-09-19T12:57:16.154041Z",
        "url": "https://files.pythonhosted.org/packages/21/68/da54f600575e8e7bac7b2f1f684de65bcf69dc67f7bd1baa3d3576bb44e6/SberQR-1.0.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e7a2e414708b0cf894323451347484e3f9f37b9441edb9d964f3679ba6e29d0",
          "md5": "b9c802f0d89f1b94acb4ca3627bd0f23",
          "sha256": "d5a996e48c935a86e31a4c0df6704d32e3c38207963ef43da604c9582870f140"
        },
        "downloads": -1,
        "filename": "SberQR-1.0.1b1.tar.gz",
        "has_sig": false,
        "md5_digest": "b9c802f0d89f1b94acb4ca3627bd0f23",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9770,
        "upload_time": "2022-09-19T12:59:54",
        "upload_time_iso_8601": "2022-09-19T12:59:54.715989Z",
        "url": "https://files.pythonhosted.org/packages/0e/7a/2e414708b0cf894323451347484e3f9f37b9441edb9d964f3679ba6e29d0/SberQR-1.0.1b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e7a2e414708b0cf894323451347484e3f9f37b9441edb9d964f3679ba6e29d0",
        "md5": "b9c802f0d89f1b94acb4ca3627bd0f23",
        "sha256": "d5a996e48c935a86e31a4c0df6704d32e3c38207963ef43da604c9582870f140"
      },
      "downloads": -1,
      "filename": "SberQR-1.0.1b1.tar.gz",
      "has_sig": false,
      "md5_digest": "b9c802f0d89f1b94acb4ca3627bd0f23",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9770,
      "upload_time": "2022-09-19T12:59:54",
      "upload_time_iso_8601": "2022-09-19T12:59:54.715989Z",
      "url": "https://files.pythonhosted.org/packages/0e/7a/2e414708b0cf894323451347484e3f9f37b9441edb9d964f3679ba6e29d0/SberQR-1.0.1b1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}