{
  "info": {
    "author": "Róbert Márki",
    "author_email": "gsmiko@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: AsyncIO",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "aiocometd\n=========\n\n.. image:: https://badge.fury.io/py/aiocometd.svg\n    :target: https://badge.fury.io/py/aiocometd\n    :alt: PyPI package\n\n.. image:: https://readthedocs.org/projects/aiocometd/badge/?version=latest\n    :target: http://aiocometd.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://travis-ci.org/robertmrk/aiocometd.svg?branch=develop\n    :target: https://travis-ci.org/robertmrk/aiocometd\n    :alt: Build status\n\n.. image:: https://coveralls.io/repos/github/robertmrk/aiocometd/badge.svg\n    :target: https://coveralls.io/github/robertmrk/aiocometd\n    :alt: Coverage\n\n.. image:: https://img.shields.io/badge/License-MIT-yellow.svg\n    :target: https://opensource.org/licenses/MIT\n    :alt: MIT license\n\naiocometd is a CometD_ client built using asyncio_, implementing the Bayeux_\nprotocol.\n\nCometD_ is a scalable WebSocket and HTTP based event and message routing bus.\nCometD_ makes use of WebSocket and HTTP push technologies known as Comet_ to\nprovide low-latency data from the server to browsers and client applications.\n\nFeatures\n--------\n\n- Supported transports:\n   - ``long-polling``\n   - ``websocket``\n- Automatic reconnection after network failures\n- Extensions\n\nUsage\n-----\n\n.. code-block:: python\n\n    import asyncio\n\n    from aiocometd import Client\n\n    async def chat():\n        nickname = \"John\"\n\n        # connect to the server\n        async with Client(\"http://example.com/cometd\") as client:\n\n                # subscribe to channels to receive chat messages and\n                # notifications about new members\n                await client.subscribe(\"/chat/demo\")\n                await client.subscribe(\"/members/demo\")\n\n                # send initial message\n                await client.publish(\"/chat/demo\", {\n                    \"user\": nickname,\n                    \"membership\": \"join\",\n                    \"chat\": nickname + \" has joined\"\n                })\n                # add the user to the chat room's members\n                await client.publish(\"/service/members\", {\n                    \"user\": nickname,\n                    \"room\": \"/chat/demo\"\n                })\n\n                # listen for incoming messages\n                async for message in client:\n                    if message[\"channel\"] == \"/chat/demo\":\n                        data = message[\"data\"]\n                        print(f\"{data['user']}: {data['chat']}\")\n\n    if __name__ == \"__main__\":\n        loop = asyncio.get_event_loop()\n        loop.run_until_complete(chat())\n\nFor more detailed usage examples take a look at the\n`command line chat example <cli_example_>`_ or for a more complex example with\na GUI check out the aiocometd-chat-demo_.\n\nDocumentation\n-------------\n\nhttps://aiocometd.readthedocs.io/\n\n.. _aiohttp: https://github.com/aio-libs/aiohttp/\n.. _CometD: https://cometd.org/\n.. _Comet: https://en.wikipedia.org/wiki/Comet_(programming)\n.. _asyncio: https://docs.python.org/3/library/asyncio.html\n.. _Bayeux: https://docs.cometd.org/current/reference/#_bayeux\n.. _ext: https://docs.cometd.org/current/reference/#_bayeux_ext\n.. _cli_example: https://github.com/robertmrk/aiocometd/blob/develop/examples/chat.py\n.. _aiocometd-chat-demo: https://github.com/robertmrk/aiocometd-chat-demo\n\nChangelog\n=========\n\n0.4.5 (2019-03-14)\n------------------\n\n- Fix connection issues when used with reverse proxy servers with cookie based\n  sticky sessions\n\n0.4.4 (2019-02-26)\n------------------\n\n- Refactor the websocket transport implementation to use a single connection\n  per client\n\n0.4.3 (2019-02-12)\n------------------\n\n- Fix reconnection issue on Salesforce Streaming API\n\n0.4.2 (2019-01-15)\n------------------\n\n- Fix the handling of invalid websocket transport responses\n- Fix the handling of failed subscription responses\n\n0.4.1 (2019-01-04)\n------------------\n\n- Add documentation links\n\n0.4.0 (2019-01-04)\n------------------\n\n- Add type hints\n- Add integration tests\n\n0.3.1 (2018-06-15)\n------------------\n\n- Fix premature request timeout issue\n\n0.3.0 (2018-05-04)\n------------------\n\n- Enable the usage of third party JSON libraries\n- Fix detection and recovery from network failures\n\n0.2.3 (2018-04-24)\n------------------\n\n- Fix RST rendering issues\n\n0.2.2 (2018-04-24)\n------------------\n\n- Fix documentation typos\n- Improve examples\n- Reorganise documentation\n\n0.2.1 (2018-04-21)\n------------------\n\n- Add PyPI badge to README\n\n0.2.0 (2018-04-21)\n------------------\n\n- Supported transports:\n   - ``long-polling``\n   - ``websocket``\n- Automatic reconnection after network failures\n- Extensions\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/robertmrk/aiocometd",
    "keywords": "asyncio aiohttp comet cometd bayeux push streaming",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tastyworks-aiocometd",
    "package_url": "https://pypi.org/project/tastyworks-aiocometd/",
    "platform": null,
    "project_url": "https://pypi.org/project/tastyworks-aiocometd/",
    "project_urls": {
      "CI": "https://travis-ci.org/robertmrk/aiocometd",
      "Coverage": "https://coveralls.io/github/robertmrk/aiocometd",
      "Docs": "http://aiocometd.readthedocs.io/",
      "Homepage": "https://github.com/robertmrk/aiocometd"
    },
    "release_url": "https://pypi.org/project/tastyworks-aiocometd/1.0/",
    "requires_dist": [
      "aiohttp (<4.0,>=3.1)",
      "Sphinx (<2.0,>=1.7) ; extra == 'dev'",
      "aioconsole (<1.0.0,>=0.1.7) ; extra == 'dev'",
      "asynctest (<1.0.0,>=0.12.0) ; extra == 'dev'",
      "coverage (<5.0,>=4.5) ; extra == 'dev'",
      "docker (>=3.5.1) ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "sphinx-autodoc-typehints ; extra == 'dev'",
      "sphinxcontrib-asyncio (>=0.2.0) ; extra == 'dev'",
      "Sphinx (<2.0,>=1.7) ; extra == 'docs'",
      "sphinx-autodoc-typehints ; extra == 'docs'",
      "sphinxcontrib-asyncio (>=0.2.0) ; extra == 'docs'",
      "aioconsole (<1.0.0,>=0.1.7) ; extra == 'examples'",
      "asynctest (<1.0.0,>=0.12.0) ; extra == 'tests'",
      "coverage (<5.0,>=4.5) ; extra == 'tests'",
      "docker (>=3.5.1) ; extra == 'tests'",
      "flake8 ; extra == 'tests'",
      "mypy ; extra == 'tests'",
      "pylint ; extra == 'tests'"
    ],
    "requires_python": ">=3.6.0",
    "summary": "CometD client for asyncio",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13788978,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f27e51a2d170c939ca7d8eb8edd2d6b5cf55ab3082ad85605c8932b6ee34089",
          "md5": "47e3da1136c75128f1e28bc31be1196e",
          "sha256": "0f4b798176237451d1b0e143b0ef20d77c62349aa895bd1672cbf40e79484d2c"
        },
        "downloads": -1,
        "filename": "tastyworks_aiocometd-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47e3da1136c75128f1e28bc31be1196e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 28151,
        "upload_time": "2022-05-12T02:17:29",
        "upload_time_iso_8601": "2022-05-12T02:17:29.824911Z",
        "url": "https://files.pythonhosted.org/packages/8f/27/e51a2d170c939ca7d8eb8edd2d6b5cf55ab3082ad85605c8932b6ee34089/tastyworks_aiocometd-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ca9422c4b1c92375697c4647ec695f958ae867c17d04e3e9cc42adbeb907e9b",
          "md5": "418d752efa796035512e12595b69c52c",
          "sha256": "225680ec207aa40e1c2b4d1628353e32c24654121fba3ba87b288e7544d17047"
        },
        "downloads": -1,
        "filename": "tastyworks-aiocometd-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "418d752efa796035512e12595b69c52c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 55142,
        "upload_time": "2022-05-12T02:17:32",
        "upload_time_iso_8601": "2022-05-12T02:17:32.883047Z",
        "url": "https://files.pythonhosted.org/packages/0c/a9/422c4b1c92375697c4647ec695f958ae867c17d04e3e9cc42adbeb907e9b/tastyworks-aiocometd-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f27e51a2d170c939ca7d8eb8edd2d6b5cf55ab3082ad85605c8932b6ee34089",
        "md5": "47e3da1136c75128f1e28bc31be1196e",
        "sha256": "0f4b798176237451d1b0e143b0ef20d77c62349aa895bd1672cbf40e79484d2c"
      },
      "downloads": -1,
      "filename": "tastyworks_aiocometd-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47e3da1136c75128f1e28bc31be1196e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 28151,
      "upload_time": "2022-05-12T02:17:29",
      "upload_time_iso_8601": "2022-05-12T02:17:29.824911Z",
      "url": "https://files.pythonhosted.org/packages/8f/27/e51a2d170c939ca7d8eb8edd2d6b5cf55ab3082ad85605c8932b6ee34089/tastyworks_aiocometd-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ca9422c4b1c92375697c4647ec695f958ae867c17d04e3e9cc42adbeb907e9b",
        "md5": "418d752efa796035512e12595b69c52c",
        "sha256": "225680ec207aa40e1c2b4d1628353e32c24654121fba3ba87b288e7544d17047"
      },
      "downloads": -1,
      "filename": "tastyworks-aiocometd-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "418d752efa796035512e12595b69c52c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 55142,
      "upload_time": "2022-05-12T02:17:32",
      "upload_time_iso_8601": "2022-05-12T02:17:32.883047Z",
      "url": "https://files.pythonhosted.org/packages/0c/a9/422c4b1c92375697c4647ec695f958ae867c17d04e3e9cc42adbeb907e9b/tastyworks-aiocometd-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}