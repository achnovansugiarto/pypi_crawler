{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\"><a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\"><img width=\"150\" src=\"https://user-images.githubusercontent.com/11073373/141421213-5decd773-a870-4324-8324-e175e83b0f55.png\" alt=\"Blackprint\"></a></p>\n\n<h1 align=\"center\">Blackprint Engine for Python</h1>\n<p align=\"center\">Run exported Blackprint on Python environment.</p>\n\n<p align=\"center\">\n    <a href='https://github.com/Blackprint/Blackprint/blob/master/LICENSE'><img src='https://img.shields.io/badge/License-MIT-brightgreen.svg' height='20'></a>\n</p>\n\n## Documentation\n> Warning: This project haven't reach it stable version (semantic versioning at v1.0.0)<br>\n> But please try to use it and help improve this project\n\nThis engine is designed to be similar with `engine-js`, some API and property will be similar.\n\n**Minimum Python version `>= 3.10`**\n\n```sh\n$ pip install blackprint-engine\n```\n\n---\n\n### Defining Blackprint Node and Interface\nBecause Python does support class-based programming and to make the node import more effective and easier, this engine will only support Node/Interface that declared with classes.\n\nBut before that, we need to create a folder to store our Node/Interface logic. For the example `/BPNode`. And then import it like below:\n\n```python\nimport Blackprint\nimport BPNode # Import your own nodes located on ./BPNode directory\n```\n\n#### Defining custom node\n\n```python\n# file: ./BPNode/Example/Hello.py\nimport types\n\n@Blackprint.registerNode('Example/Hello')\nclass Hello(Blackprint.Node):\n    # Please remember to capitalize the port name\n    # Set the output port structure for your node (Optional)\n    output = {\n        'Changed': types.FunctionType,\n        # this.output['Changed']() -- To call every connected port\n\n        'Output': int,\n        # this.output['Output'] = 246 -- To assign value to output port\n    }\n\n    # Set the input port structure for your node (Optional)\n    input = {\n        'Multiply': int,\n        # val = this.input['Multiply'] -- To obtain value from input port\n    }\n\n    def __init__(instance):\n        # Call the parent constructor first, passing the instance (Blackprint.Engine)\n        super(Hello, this).__init__(instance)\n\n        # Set the Interface, let it empty if you want\n        # to use default empty interface \"setInterface()\"\n        iface = this.setInterface('BPIC/Example/Hello')\n        iface.title = \"Hello\" # Set the title for debugging\n```\n\nLet's also define our custom interface, this is optional and needed only if you want to provide access for other developer. Just like an API (Application Programming Interface).\n\n```python\n# same file: ./BPNode/Example/Hello.py\n\n# Your Interface namespace must use \"BPIC\" as the prefix\n@Blackprint.registerInterface('BPIC/Example/Hello')\nclass HelloIFace(Blackprint.Interfaces):\n    def __construct(node):\n        # Call the parent constructor first, passing the node (Blackprint\\Node)\n        super(HelloIFace, this).__init__(node)\n        # this.node => Blackprint.Node\n\n        # Define IFace's data (optional if you want to export/import data from JSON)\n        # Because getter/setter feature only available on class, we will create from `class MyData`\n        this.data = MyData(this)\n        # this.data.value == 123 (if the default value is not replaced when importing JSON)\n\n    def recalculate():\n        # Get value from input port\n        multiplyBy = this.node.input['Multiply']\n\n        # Assign new value to output port\n        this.node.output['Output'] = this.data.value * multiplyBy\n\n# Getter and setter should be changed with basic property accessor\nclass MyData:\n    # Constructor promotion, iface as private MyData property\n    def __init__(this, iface):\n        this._iface = iface\n\n    _value = 123\n\n    @property\n    def value();\n        return this._value\n\n    @value.setter\n    def value(val);\n        this._value = val\n        this._iface.recalculate() # Call recalculate() on HelloIFace\n```\n\n## Creating new Engine instance\n\n```python\n# Create Blackprint Engine instance\ninstance = Blackprint.Engine()\n\n# You can import nodes with JSON\n# if the nodes haven't been registered, this will throw an error\ninstance.importJSON('{...}')\n\n# You can also create the node dynamically\niface = instance.createNode('Example/Hello')\n\n# ----\n\n# Change the default data 'value' property\niface.data.value = 123\n\n# Assign the 'Multiply' input port = 2\niface.node.input['Multiply'] = 2\n\n# Get the value from 'Output' output port\nprint(iface.node.output['Output']) # 246\n```\n\n---\n\n### Example\n![csZIeKxr7j](https://user-images.githubusercontent.com/11073373/194294366-6a212509-d565-409c-81b5-763b0a3923ba.jpg)\n\nThis repository provide an example with the JSON too, and you can try it with Python 3:<br>\n\n```sh\n# Change your working directory into empty folder first\n$ git clone --depth 1 https://github.com/Blackprint/engine-python .\n$ pip install -e .\n$ python ./example/simple.py\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Blackprint/engine-python",
    "keywords": "",
    "license": "LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "blackprint-engine",
    "package_url": "https://pypi.org/project/blackprint-engine/",
    "platform": null,
    "project_url": "https://pypi.org/project/blackprint-engine/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Blackprint/engine-python/issues",
      "Homepage": "https://github.com/Blackprint/engine-python"
    },
    "release_url": "https://pypi.org/project/blackprint-engine/0.8.14/",
    "requires_dist": null,
    "requires_python": ">=3.10",
    "summary": "Blackprint engine for registering node/interface and run exported Blackprint on Python environment",
    "version": "0.8.14",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17344905,
  "releases": {
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6469d6ec9ca7020731a2fe5a677c6e88a1ddb80fb3db60b21f473e5cb2390c71",
          "md5": "6c5a7584a0a8420aa996a818c70c1313",
          "sha256": "15dfffd498a926471dcc935e48855314ca6744067478629945931bbb84a9e4c4"
        },
        "downloads": -1,
        "filename": "blackprint_engine-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c5a7584a0a8420aa996a818c70c1313",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 29610,
        "upload_time": "2022-09-26T17:48:49",
        "upload_time_iso_8601": "2022-09-26T17:48:49.162383Z",
        "url": "https://files.pythonhosted.org/packages/64/69/d6ec9ca7020731a2fe5a677c6e88a1ddb80fb3db60b21f473e5cb2390c71/blackprint_engine-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b399a21b6e950d081a435dcfb7a2bc1cae6b40b197f92e50f9824c9c4e4e7be2",
          "md5": "4afdcafd049da5ba454bd44aee8fb601",
          "sha256": "804995a447185054185813e917f2d037cb05bc86cbfe81b39910a37304287cdc"
        },
        "downloads": -1,
        "filename": "blackprint_engine-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4afdcafd049da5ba454bd44aee8fb601",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 32981,
        "upload_time": "2022-10-07T10:33:22",
        "upload_time_iso_8601": "2022-10-07T10:33:22.260205Z",
        "url": "https://files.pythonhosted.org/packages/b3/99/a21b6e950d081a435dcfb7a2bc1cae6b40b197f92e50f9824c9c4e4e7be2/blackprint_engine-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed9277d69482016163e0bf52a983c29bdc6af384a6d150ca0667c999af5607e1",
          "md5": "79aa5b4f674bf313c25d6826006df92b",
          "sha256": "d6e5650d4d32cecffbb6a95bb7e7b7d7c6a9c2079e9f66996e13d065fee65144"
        },
        "downloads": -1,
        "filename": "blackprint_engine-0.8.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79aa5b4f674bf313c25d6826006df92b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 41243,
        "upload_time": "2023-02-25T07:47:06",
        "upload_time_iso_8601": "2023-02-25T07:47:06.293440Z",
        "url": "https://files.pythonhosted.org/packages/ed/92/77d69482016163e0bf52a983c29bdc6af384a6d150ca0667c999af5607e1/blackprint_engine-0.8.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "267e43395a8ace8c728f95c36d1568f8002f57f739b4f72968acaa30fcf26c65",
          "md5": "a9f33890c31c1e7cbdb092b58e4becfe",
          "sha256": "ff94df1e9af90c2b957473e2a9dca6927b5c529b685ef2986ef3b7023b76da6f"
        },
        "downloads": -1,
        "filename": "blackprint_engine-0.8.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9f33890c31c1e7cbdb092b58e4becfe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 41285,
        "upload_time": "2023-03-14T09:10:48",
        "upload_time_iso_8601": "2023-03-14T09:10:48.574299Z",
        "url": "https://files.pythonhosted.org/packages/26/7e/43395a8ace8c728f95c36d1568f8002f57f739b4f72968acaa30fcf26c65/blackprint_engine-0.8.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1661930e0f320697b089ddff631bfc19b5753976634363a29d7abebb036e505e",
          "md5": "60d4ca25eb18b0fc7ac6e1c4b1ca4a2c",
          "sha256": "59e8d65036e8dae36475364fa72012bf069cbbc39b037ad08659d0525096740f"
        },
        "downloads": -1,
        "filename": "blackprint_engine-0.8.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60d4ca25eb18b0fc7ac6e1c4b1ca4a2c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 41322,
        "upload_time": "2023-03-18T11:52:12",
        "upload_time_iso_8601": "2023-03-18T11:52:12.893270Z",
        "url": "https://files.pythonhosted.org/packages/16/61/930e0f320697b089ddff631bfc19b5753976634363a29d7abebb036e505e/blackprint_engine-0.8.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1661930e0f320697b089ddff631bfc19b5753976634363a29d7abebb036e505e",
        "md5": "60d4ca25eb18b0fc7ac6e1c4b1ca4a2c",
        "sha256": "59e8d65036e8dae36475364fa72012bf069cbbc39b037ad08659d0525096740f"
      },
      "downloads": -1,
      "filename": "blackprint_engine-0.8.14-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "60d4ca25eb18b0fc7ac6e1c4b1ca4a2c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 41322,
      "upload_time": "2023-03-18T11:52:12",
      "upload_time_iso_8601": "2023-03-18T11:52:12.893270Z",
      "url": "https://files.pythonhosted.org/packages/16/61/930e0f320697b089ddff631bfc19b5753976634363a29d7abebb036e505e/blackprint_engine-0.8.14-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}