{
  "info": {
    "author": "Alex Morehead",
    "author_email": "acmwhb@umsystem.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "<div align=\"center\">\n\n# DeepInteract\n\n[![Paper](http://img.shields.io/badge/paper-arxiv.2110.02423-B31B1B.svg)](https://arxiv.org/abs/2110.02423) [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.5797024.svg)](https://doi.org/10.5281/zenodo.5797024)\n\n[<img src=\"https://twixes.gallerycdn.vsassets.io/extensions/twixes/pypi-assistant/1.0.3/1589834023190/Microsoft.VisualStudio.Services.Icons.Default\" width=\"50\"/>](https://pypi.org/project/DeepInteract/)\n\n![DeepInteract Architecture](https://github.com/BioinfoMachineLearning/DeepInteract/blob/main/img/DeepInteract_Architecture.png)\n\n![Geometric Transformer](https://github.com/BioinfoMachineLearning/DeepInteract/blob/main/img/Geometric_Transformer.png)\n\n</div>\n\n## Description\n\nA geometric deep learning pipeline for predicting protein interface contacts.\n\n## Citing this work\n\nIf you use the code or data associated with this package, please cite:\n\n```bibtex\n@article{morehead2021deepinteract,\n  title = {Geometric Transformers for Protein Interface Contact Prediction},\n  author = {Alex Morehead, Chen Chen, and Jianlin Cheng},\n  year = {2021},\n  eprint = {N/A},\n  archivePrefix = {arXiv},\n  primaryClass = {cs.LG}\n}\n```\n\n## First time setup\n\nThe following step is required in order to run DeepInteract:\n\n### Genetic databases\n\nThis step requires `aria2c` to be installed on your machine.\n\nDeepInteract needs only one of the following genetic (sequence) databases compatible with HH-suite3 to run:\n\n* [BFD (Requires ~1.7TB of Space When Unextracted)](https://bfd.mmseqs.com/)\n* [Small BFD (Requires ~17GB of Space When Unextracted)](https://storage.googleapis.com/alphafold-databases/reduced_dbs/bfd-first_non_consensus_sequences.fasta.gz)  \n* [Uniclust30 (Requires ~86GB of Space When Unextracted)](https://uniclust.mmseqs.com/)\n\n#### Install the BFD for HH-suite3\n\n```bash\n# Following script originally from AlphaFold2 (https://github.com/deepmind/alphafold):\nDOWNLOAD_DIR=\"~/Data/Databases\"\nROOT_DIR=\"${DOWNLOAD_DIR}/bfd\"\nmkdir \"~/Data\" \"$DOWNLOAD_DIR\" \"$ROOT_DIR\"\n# Mirror of:\n# https://bfd.mmseqs.com/bfd_metaclust_clu_complete_id30_c90_final_seq.sorted_opt.tar.gz.\nSOURCE_URL=\"https://storage.googleapis.com/alphafold-databases/casp14_versions/bfd_metaclust_clu_complete_id30_c90_final_seq.sorted_opt.tar.gz\"\nBASENAME=$(basename \"${SOURCE_URL}\")\n\nmkdir --parents \"${ROOT_DIR}\"\naria2c \"${SOURCE_URL}\" --dir=\"${ROOT_DIR}\"\ntar --extract --verbose --file=\"${ROOT_DIR}/${BASENAME}\" \\\n  --directory=\"${ROOT_DIR}\"\nrm \"${ROOT_DIR}/${BASENAME}\"\n\n# The CLI argument --hhsuite_db for lit_model_predict.py\n# should then become '~/Data/Databases/bfd/bfd_metaclust_clu_complete_id30_c90_final_seq.sorted_opt'\n```\n\n#### (Smaller Alternative) Install the Small BFD for HH-suite3\n\n```bash\n# Following script originally from AlphaFold2 (https://github.com/deepmind/alphafold):\nDOWNLOAD_DIR=\"~/Data/Databases\"\nROOT_DIR=\"${DOWNLOAD_DIR}/small_bfd\"\nmkdir \"~/Data\" \"$DOWNLOAD_DIR\" \"$ROOT_DIR\"\nSOURCE_URL=\"https://storage.googleapis.com/alphafold-databases/reduced_dbs/bfd-first_non_consensus_sequences.fasta.gz\"\nBASENAME=$(basename \"${SOURCE_URL}\")\n\nmkdir --parents \"${ROOT_DIR}\"\naria2c \"${SOURCE_URL}\" --dir=\"${ROOT_DIR}\"\npushd \"${ROOT_DIR}\"\ngunzip \"${ROOT_DIR}/${BASENAME}\"\npopd\n\n# The CLI argument --hhsuite_db for lit_model_predict.py\n# should then become '~/Data/Databases/small_bfd/bfd-first_non_consensus_sequences.fasta'\n```\n\n#### (Smaller Alternative) Install Uniclust30 for HH-suite3\n\n```bash\n# Following script originally from AlphaFold2 (https://github.com/deepmind/alphafold):\nDOWNLOAD_DIR=\"~/Data/Databases\"\nROOT_DIR=\"${DOWNLOAD_DIR}/uniclust30\"\nmkdir \"~/Data\" \"$DOWNLOAD_DIR\" \"$ROOT_DIR\"\n# Mirror of:\n# http://wwwuser.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz\nSOURCE_URL=\"https://storage.googleapis.com/alphafold-databases/casp14_versions/uniclust30_2018_08_hhsuite.tar.gz\"\nBASENAME=$(basename \"${SOURCE_URL}\")\n\nmkdir --parents \"${ROOT_DIR}\"\naria2c \"${SOURCE_URL}\" --dir=\"${ROOT_DIR}\"\ntar --extract --verbose --file=\"${ROOT_DIR}/${BASENAME}\" \\\n  --directory=\"${ROOT_DIR}\"\nrm \"${ROOT_DIR}/${BASENAME}\"\n\n# The CLI argument --hhsuite_db for lit_model_predict.py\n# should then become '~/Data/Databases/uniclust30/uniclust30_2018_08/uniclust30_2018_08'\n```\n\n## Repository Directory Structure\n\n```\nDeepInteract\n│\n└───docker\n│\n└───img\n│\n└───project\n     │\n     └───checkpoints\n     │\n     └───datasets\n     │   │\n     │   └───builder\n     │   │\n     │   └───CASP_CAPRI\n     │   │   │\n     │   │   └───final\n     │   │   │   │\n     │   │   │   └───processed\n     │   │   │   │\n     │   │   │   └───raw\n     │   │   │\n     │   │   casp_capri_dgl_data_module.py\n     │   │   casp_capri_dgl_dataset.py\n     │   │\n     │   └───DIPS\n     │   │   │\n     │   │   └───final\n     │   │   │   │\n     │   │   │   └───processed\n     │   │   │   │\n     │   │   │   └───raw\n     │   │   │\n     │   │   dips_dgl_data_module.py\n     │   │   dips_dgl_dataset.py\n     │   │\n     │   └───Input\n     │   │   │\n     │   │   └───final\n     │   │   │   │\n     │   │   │   └───processed\n     │   │   │   │\n     │   │   │   └───raw\n     │   │   │\n     │   │   └───interim\n     │   │   │   │\n     │   │   │   └───complexes\n     │   │   │   │\n     │   │   │   └───external_feats\n     │   │   │   │   │\n     │   │   │   │   └───PSAIA\n     │   │   │   │       │\n     │   │   │   │       └───INPUT\n     │   │   │   │\n     │   │   │   └───pairs\n     │   │   │   │\n     │   │   │   └───parsed\n     │   │   │\n     │   │   └───raw\n     │   │\n     │   └───PICP\n     │       picp_dgl_data_module.py\n     │\n     └───test_data\n     │\n     └───utils\n     │   deepinteract_constants.py\n     │   deepinteract_modules.py\n     │   deepinteract_utils.py\n     │   dips_plus_utils.py\n     │   graph_utils.py\n     │   protein_feature_utils.py\n     │   vision_modules.py\n     │\n     lit_model_predict.py\n     lit_model_predict_docker.py\n     lit_model_train.py\n.gitignore\nCONTRIBUTING.md\nenvironment.yml\nLICENSE\nREADME.md\nrequirements.txt\nsetup.cfg\nsetup.py\n```\n\n## Running DeepInteract via Docker\n\n**The simplest way to run DeepInteract is using the provided Docker script.**\n\nThe following steps are required in order to ensure Docker is installed and working correctly:\n\n1. Install [Docker](https://www.docker.com/).\n    * Install\n        [NVIDIA Container Toolkit](https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html)\n        for GPU support.\n    * Setup running\n        [Docker as a non-root user](https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user).\n\n2. Check that DeepInteract will be able to use a GPU by running:\n\n    ```bash\n    docker run --rm --gpus all nvidia/cuda:11.2.2-cudnn8-runtime-ubuntu20.04 nvidia-smi\n    ```\n\n    The output of this command should show a list of your GPUs. If it doesn't,\n    check if you followed all steps correctly when setting up the\n    [NVIDIA Container Toolkit](https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html)\n    or take a look at the following\n    [NVIDIA Docker issue](https://github.com/NVIDIA/nvidia-docker/issues/1447#issuecomment-801479573).\n\nNow that we know Docker is functioning properly, we can begin building our Docker image for DeepInteract:\n\n1. Clone this repository and `cd` into it.\n\n    ```bash\n    git clone https://github.com/BioinfoMachineLearning/DeepInteract\n    cd DeepInteract/\n    DI_DIR=$(pwd)\n    ```\n   \n2. Download our trained model checkpoints.\n\n    ```bash\n    mkdir -p project/checkpoints\n    wget -P project/checkpoints https://zenodo.org/record/5797024/files/LitGINI-GeoTran-DilResNet.ckpt\n    wget -P project/checkpoints https://zenodo.org/record/5797024/files/LitGINI-GeoTran-DilResNet-DB5-Fine-Tuned.ckpt\n    ```\n\n3. Build the Docker image (Warning: Requires ~13GB of Space):\n\n    ```bash\n    docker build -f docker/Dockerfile -t deepinteract .\n    ```\n\n4. Install the `run_docker.py` dependencies. Note: You may optionally wish to\n    create a\n    [Python Virtual Environment](https://docs.python.org/3/tutorial/venv.html)\n    to prevent conflicts with your system's Python environment.\n\n    ```bash\n    pip3 install -r docker/requirements.txt\n    ```\n   \n5. Create directory in which to generate input features and outputs:\n\n    ```bash\n    mkdir -p project/datasets/Input\n    ```\n\n6. Run `run_docker.py` pointing to two input PDB files containing the first and second chains\n    of a complex for which you wish to predict the contact probability map.\n    For example, for the DIPS-Plus test target with the PDB ID `4HEQ`:\n\n    ```bash\n    python3 docker/run_docker.py --left_pdb_filepath \"$DI_DIR\"/project/test_data/4heq_l_u.pdb --right_pdb_filepath \"$DI_DIR\"/project/test_data/4heq_r_u.pdb --input_dataset_dir \"$DI_DIR\"/project/datasets/Input --ckpt_name \"$DI_DIR\"/project/checkpoints/LitGINI-GeoTran-DilResNet.ckpt --hhsuite_db ~/Data/Databases/bfd/bfd_metaclust_clu_complete_id30_c90_final_seq.sorted_opt --num_gpus 0\n    ```\n   \n    This script will generate and (as NumPy array files - e.g., `test_data/4heq_contact_prob_map.npy`)\n    save to the given input directory the predicted interface contact map as well as the Geometric\n    Transformer's learned node and edge representations for both chain graphs.\n\n7. Note that by using the default\n\n    ```bash\n    --num_gpus 0\n    ```\n\n    flag when executing `run_docker.py`, the Docker container will only \n    make use of the system's available CPU(s) for prediction. However,\n    by specifying\n\n    ```bash\n    --num_gpus 1\n    ```\n   \n    when executing `run_docker.py`, the Docker container will then\n    employ the first available GPU for prediction.\n\n## Running DeepInteract via a Traditional Installation (for Linux-Based Operating Systems)\n\nFirst, install and configure Conda environment:\n\n```bash\n# Clone this repository:\ngit clone https://github.com/BioinfoMachineLearning/DeepInteract\n\n# Change to project directory:\ncd DeepInteract\nDI_DIR=$(pwd)\n\n# Set up Conda environment locally\nconda env create --name DeepInteract -f environment.yml\n\n# Activate Conda environment located in the current directory:\nconda activate DeepInteract\n\n# (Optional) Perform a full install of the pip dependencies described in 'requirements.txt':\npip3 install -r requirements.txt\n\n# (Optional) To remove the long Conda environment prefix in your shell prompt, modify the env_prompt setting in your .condarc file with:\nconda config --set env_prompt '({name})'\n ```\n\n### Installing PSAIA\n\nInstall GCC 10 for PSAIA:\n\n```bash\n# Install GCC 10 for Ubuntu 20.04\nsudo apt install software-properties-common\nsudo add-apt-repository ppa:ubuntu-toolchain-r/ppa\nsudo apt update\nsudo apt install gcc-10 g++-10\n\n# Or install GCC 10 for Arch Linux/Manjaro\nyay -S gcc10\n```\n\nInstall QT4 for PSAIA:\n\n```bash\n# Install QT4 for Ubuntu 20.04:\nsudo add-apt-repository ppa:rock-core/qt4\nsudo apt update\nsudo apt install libqt4* libqtcore4 libqtgui4 libqtwebkit4 qt4* libxext-dev\n\n# Or install QT4 for Arch Linux/Manjaro\nyay -S qt4\n```\n\nCompile PSAIA from source:\n\n```bash\n# Select the location to install the software:\nMY_LOCAL=~/Programs\n\n# Download and extract PSAIA's source code:\nmkdir \"$MY_LOCAL\"\ncd \"$MY_LOCAL\"\nwget http://complex.zesoi.fer.hr/data/PSAIA-1.0-source.tar.gz\ntar -xvzf PSAIA-1.0-source.tar.gz\n\n# Compile PSAIA (i.e., a GUI for PSA):\ncd PSAIA_1.0_source/make/linux/psaia/\nqmake-qt4 psaia.pro\nmake\n\n# Compile PSA (i.e., the protein structure analysis (PSA) program):\ncd ../psa/\nqmake-qt4 psa.pro\nmake\n\n# Compile PIA (i.e., the protein interaction analysis (PIA) program):\ncd ../pia/\nqmake-qt4 pia.pro\nmake\n\n# Test run any of the above-compiled programs:\ncd \"$MY_LOCAL\"/PSAIA_1.0_source/bin/linux\n# Test run PSA inside a GUI:\n./psaia/psaia\n# Test run PIA through a terminal:\n./pia/pia\n# Test run PSA through a terminal:\n./psa/psa\n```\n\n**Finally, substitute your absolute filepath for DeepInteract**\n(i.e., where on your local storage device you downloaded the\nrepository to) **anywhere DeepInteract's local repository is\nreferenced in `project/datasets/builder/psaia_config_file_input.txt`.**\n\n## Training\n\n### Download training and cross-validation DGLGraphs\n\nTo train, retrain, or cross-validate DeepInteract models using DIPS-Plus and/or CASP-CAPRI targets, we first need to download the preprocessed DGLGraphs from Zenodo:\n\n```bash\n# Download and extract preprocessed DGLGraphs for DIPS-Plus and CASP-CAPRI\n# Requires ~55GB of free space\nmkdir -p project/datasets/DIPS/final\ncd project/datasets/DIPS/final\n\n# Download DIPS-Plus\nwget https://zenodo.org/record/5797024/files/final_raw_dips.tar.gz\nwget https://zenodo.org/record/5797024/files/final_processed_dips.tar.gz.partaa\nwget https://zenodo.org/record/5797024/files/final_processed_dips.tar.gz.partab\n\n# First, reassemble all processed DGLGraphs\n# We split the (tar.gz) archive into two separate parts with\n# 'split -b 4096M final_processed_dips.tar.gz \"final_processed_dips.tar.gz.part\"'\n# to upload it to Zenodo, so to recover the original archive:\ncat final_processed_dips.tar.gz.parta* >final_processed_dips.tar.gz\n\n# Extract DIPS-Plus\ntar -xzf final_raw_dips.tar.gz\ntar -xzf final_processed_dips.tar.gz\nrm final_processed_dips.tar.gz.parta* final_raw_dips.tar.gz final_processed_dips.tar.gz\n\n# Download CASP-CAPRI\nmkdir -p ../../CASP_CAPRI/final\ncd ../../CASP_CAPRI/final\nwget https://zenodo.org/record/5797024/files/final_raw_casp_capri.tar.gz\nwget https://zenodo.org/record/5797024/files/final_processed_casp_capri.tar.gz\n\n# Extract CASP-CAPRI\ntar -xzf final_raw_casp_capri.tar.gz\ntar -xzf final_processed_casp_capri.tar.gz\nrm final_raw_casp_capri.tar.gz final_processed_casp_capri.tar.gz\n```\n\nNavigate to the project directory and run the training script with the parameters desired:\n\n ```bash\n# Hint: Run `python3 lit_model_train.py --help` to see all available CLI arguments\ncd project\npython3 lit_model_train.py --lr 1e-3 --weight_decay 1e-2\ncd ..\n```\n\n## Inference\n\n### Download trained model checkpoints\n\n```bash\n# Return to root directory of DeepInteract repository\ncd \"$DI_DIR\"\n\n# Download our trained model checkpoints\nmkdir -p project/checkpoints\nwget -P project/checkpoints https://zenodo.org/record/5797024/files/LitGINI-GeoTran-DilResNet.ckpt\nwget -P project/checkpoints https://zenodo.org/record/5797024/files/LitGINI-GeoTran-DilResNet-DB5-Fine-Tuned.ckpt\n```\n\n### Predict interface contact probability maps\n\nNavigate to the project directory and run the prediction script\nwith the filenames of the left and right PDB chains.\n\n ```bash\n # Hint: Run `python3 lit_model_predict.py --help` to see all available CLI arguments\ncd project\npython3 lit_model_predict.py --left_pdb_filepath \"$DI_DIR\"/project/test_data/4heq_l_u.pdb --right_pdb_filepath \"$DI_DIR\"/project/test_data/4heq_r_u.pdb --ckpt_dir \"$DI_DIR\"/project/checkpoints --ckpt_name LitGINI-GeoTran-DilResNet.ckpt --hhsuite_db ~/Data/Databases/bfd/bfd_metaclust_clu_complete_id30_c90_final_seq.sorted_opt\ncd ..\n```\n\nThis script  will generate and (as NumPy array files - e.g., `test_data/4heq_contact_prob_map.npy`)\nsave to the given input directory the predicted interface contact map as well as the\nGeometric Transformer's learned node and edge representations for both chain graphs.\n\n## Acknowledgements\n\nDeepInteract communicates with and/or references the following separate libraries\nand packages:\n\n* [Abseil](https://github.com/abseil/abseil-py)\n* [Biopython](https://biopython.org)\n* [Docker](https://www.docker.com)\n* [HH Suite](https://github.com/soedinglab/hh-suite)\n* [NumPy](https://numpy.org)\n* [pytorch](https://github.com/pytorch/pytorch)\n* [pytorch-lightning](https://github.com/PyTorchLightning/pytorch-lightning)\n* [SciPy](https://scipy.org)\n* [tqdm](https://github.com/tqdm/tqdm)\n\nWe thank all their contributors and maintainers!\n\n## License and Disclaimer\n\nCopyright 2021 University of Missouri-Columbia Bioinformatics & Machine Learning (BML) Lab.\n\n### DeepInteract Code License\n\nLicensed under the GNU Public License, Version 3.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at https://www.gnu.org/licenses/gpl-3.0.en.html.\n\n### Third-party software\n\nUse of the third-party software, libraries or code referred to in the\n[Acknowledgements](#acknowledgements) section above may be governed by separate\nterms and conditions or license provisions. Your use of the third-party\nsoftware, libraries or code is subject to any such terms and you should check\nthat you can comply with any applicable restrictions or terms and conditions\nbefore use.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BioinfoMachineLearning/DeepInteract",
    "keywords": "",
    "license": "GNU Public License, Version 3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DeepInteract",
    "package_url": "https://pypi.org/project/DeepInteract/",
    "platform": "",
    "project_url": "https://pypi.org/project/DeepInteract/",
    "project_urls": {
      "Homepage": "https://github.com/BioinfoMachineLearning/DeepInteract"
    },
    "release_url": "https://pypi.org/project/DeepInteract/1.0.9/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A geometric deep learning pipeline for predicting protein interface contacts.",
    "version": "1.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12637154,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "107947af3efc3f1d8b72611a024a3013f2cff674116da302a0ae1b840e7a4710",
          "md5": "6b61702d3490194aad595f9929439a0a",
          "sha256": "dfdb8c0cfd02c6d8df116657e3434b500151797ad6ac1de0bbf9a75a937fac4d"
        },
        "downloads": -1,
        "filename": "DeepInteract-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6b61702d3490194aad595f9929439a0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24696,
        "upload_time": "2021-10-07T04:12:36",
        "upload_time_iso_8601": "2021-10-07T04:12:36.207383Z",
        "url": "https://files.pythonhosted.org/packages/10/79/47af3efc3f1d8b72611a024a3013f2cff674116da302a0ae1b840e7a4710/DeepInteract-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0ec56cae8d78513aa4c93e83f0c8ccb0c46a4cd5c32b1d19477b680c6943861",
          "md5": "3d1badbf5b827f7e6844eee135f55f88",
          "sha256": "940397a36c6a018477f4feb89f0e766bfed73ad4b0d6a93e060a02e76ca0f592"
        },
        "downloads": -1,
        "filename": "DeepInteract-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3d1badbf5b827f7e6844eee135f55f88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24695,
        "upload_time": "2021-10-07T04:14:43",
        "upload_time_iso_8601": "2021-10-07T04:14:43.187565Z",
        "url": "https://files.pythonhosted.org/packages/e0/ec/56cae8d78513aa4c93e83f0c8ccb0c46a4cd5c32b1d19477b680c6943861/DeepInteract-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6469c6cc9883fcc12bd1371e04f9afab8e62b2a7e08ad74c8cb44fed3f7af289",
          "md5": "e37217543ed239f384c29dfc14af76cb",
          "sha256": "e52b7902183a6ebd3ad71c31a8d85a7f8e4054720254e2e5ca4ac4c9c289bad7"
        },
        "downloads": -1,
        "filename": "DeepInteract-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e37217543ed239f384c29dfc14af76cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24699,
        "upload_time": "2021-11-01T19:48:12",
        "upload_time_iso_8601": "2021-11-01T19:48:12.862871Z",
        "url": "https://files.pythonhosted.org/packages/64/69/c6cc9883fcc12bd1371e04f9afab8e62b2a7e08ad74c8cb44fed3f7af289/DeepInteract-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59baa12b3e207b069715d68ab4d83a248d88f99b6e63c2e2aee81cd8a0a28847",
          "md5": "554af9bf79d14f7e7bf6c88a32a2bcb8",
          "sha256": "cbd7b1839379b01c76c1bac96315008d789393f5d341a69dd2d336eb425a1ec6"
        },
        "downloads": -1,
        "filename": "DeepInteract-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "554af9bf79d14f7e7bf6c88a32a2bcb8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24719,
        "upload_time": "2021-11-01T21:43:25",
        "upload_time_iso_8601": "2021-11-01T21:43:25.547986Z",
        "url": "https://files.pythonhosted.org/packages/59/ba/a12b3e207b069715d68ab4d83a248d88f99b6e63c2e2aee81cd8a0a28847/DeepInteract-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28f30d10273cbde143082b6d266b6f8e89e20dcabc6de24231c6b9fc6c9ab228",
          "md5": "4bb299b44241859a481d2e73ea46c32e",
          "sha256": "dd3126db67ec93f8307e1899861360baf1f432334915980a8636ec841c9c30d5"
        },
        "downloads": -1,
        "filename": "DeepInteract-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4bb299b44241859a481d2e73ea46c32e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24726,
        "upload_time": "2021-11-02T02:06:48",
        "upload_time_iso_8601": "2021-11-02T02:06:48.425729Z",
        "url": "https://files.pythonhosted.org/packages/28/f3/0d10273cbde143082b6d266b6f8e89e20dcabc6de24231c6b9fc6c9ab228/DeepInteract-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaf977d2600348bf3fef4bfdd1ce09bf7fe6b6fc1353d106d50b770eac13873e",
          "md5": "974159c105c8776836191f04f7253b23",
          "sha256": "7c09030cdcdbbc3e2df03c017ed91d2c6182ed060f00e6e965451efa3f6b0ca8"
        },
        "downloads": -1,
        "filename": "DeepInteract-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "974159c105c8776836191f04f7253b23",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24725,
        "upload_time": "2021-11-02T16:40:37",
        "upload_time_iso_8601": "2021-11-02T16:40:37.725027Z",
        "url": "https://files.pythonhosted.org/packages/ea/f9/77d2600348bf3fef4bfdd1ce09bf7fe6b6fc1353d106d50b770eac13873e/DeepInteract-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0dbb2e261c67d3cdb4a6b4e8198679b320cb1a237b5f99dfc998a0e0b2d10a5",
          "md5": "c7a89bdcdb4f37dfcff9cfd189472ed6",
          "sha256": "779726e289767aa2b8092c5f1abe20afdf93f02dde7d9905b334838741c9906e"
        },
        "downloads": -1,
        "filename": "DeepInteract-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c7a89bdcdb4f37dfcff9cfd189472ed6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24720,
        "upload_time": "2021-11-02T17:35:59",
        "upload_time_iso_8601": "2021-11-02T17:35:59.864891Z",
        "url": "https://files.pythonhosted.org/packages/a0/db/b2e261c67d3cdb4a6b4e8198679b320cb1a237b5f99dfc998a0e0b2d10a5/DeepInteract-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a7eda39b90df25ff88aaf38fdac37efb84ed10efc5b97d6c6ab8464c031694f",
          "md5": "771872971595aede4b15f4a7c95bac35",
          "sha256": "2dfd4e008fb86dc36adf04c61bdcfedf9c261b77febb18f92450bbdbce6229d4"
        },
        "downloads": -1,
        "filename": "DeepInteract-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "771872971595aede4b15f4a7c95bac35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24724,
        "upload_time": "2021-11-14T21:51:49",
        "upload_time_iso_8601": "2021-11-14T21:51:49.489652Z",
        "url": "https://files.pythonhosted.org/packages/9a/7e/da39b90df25ff88aaf38fdac37efb84ed10efc5b97d6c6ab8464c031694f/DeepInteract-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5e310b854216c7704e5d4bd42ea806e086a3606d346eca9703a61fb569c5673",
          "md5": "fbb5303812de4ebc331a784522179b6b",
          "sha256": "42f0a193b27d68ce1413bb38bdfb537a38417624728d282c49010dbe5bbe38bf"
        },
        "downloads": -1,
        "filename": "DeepInteract-1.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "fbb5303812de4ebc331a784522179b6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24778,
        "upload_time": "2022-01-20T21:43:01",
        "upload_time_iso_8601": "2022-01-20T21:43:01.345044Z",
        "url": "https://files.pythonhosted.org/packages/b5/e3/10b854216c7704e5d4bd42ea806e086a3606d346eca9703a61fb569c5673/DeepInteract-1.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b5e310b854216c7704e5d4bd42ea806e086a3606d346eca9703a61fb569c5673",
        "md5": "fbb5303812de4ebc331a784522179b6b",
        "sha256": "42f0a193b27d68ce1413bb38bdfb537a38417624728d282c49010dbe5bbe38bf"
      },
      "downloads": -1,
      "filename": "DeepInteract-1.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "fbb5303812de4ebc331a784522179b6b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24778,
      "upload_time": "2022-01-20T21:43:01",
      "upload_time_iso_8601": "2022-01-20T21:43:01.345044Z",
      "url": "https://files.pythonhosted.org/packages/b5/e3/10b854216c7704e5d4bd42ea806e086a3606d346eca9703a61fb569c5673/DeepInteract-1.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}