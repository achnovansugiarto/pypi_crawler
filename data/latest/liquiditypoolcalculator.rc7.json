{
  "info": {
    "author": "Jirong Huang",
    "author_email": "jironghuang88@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# liquiditypoolcalculator\n\n1. The aim of this package is to provide a simple framework to compute expected changes in value of liquidity pool.\n2. With the expected changes in liquidity pool, traders could estimate impermanent losses and expected profits. Arbitrageurs could apply appropriate hedge ratios through futures/ perpetuals to extract the yield.\n\n## Note on current version 0\n\n1. As of now, I only set up the class for uniswap v3. In future, I may expand to other platforms and generalize the code further. \n2. In addition, I'm using it mostly for my own purposes. Please include engineering safeguards if you use it for production purposes.\n3. For uniswap v3, you have to include parameters such as defined lower bound and upper bound values for concentrated liquidity pool provision.\n\n## Literature used as reference\n\nI primarily referred to the following materials to develop this package,\n\n- https://uniswap.org/blog/uniswap-v3\n- Page 5: https://atiselsts.github.io/pdfs/uniswap-v3-liquidity-math.pdf\n- https://lambert-guillaume.medium.com/how-to-deploy-delta-neutral-liquidity-in-uniswap-or-why-euler-finance-is-a-game-changer-for-lps-1d91efe1e8ac\n\n## Set up\n\n- pip install liquiditypoolcalculator\n- required packages for package: pandas\n\n## Project homepage\n\n- https://github.com/jironghuang/liquiditypoolcalculator\n\n## Examples\n\n### Required hedge ratio based on price change\n\n```\nimport pandas as pd\nfrom liquiditypoolcalculator import uniswapv3_class\n\nnum_asset1 = 5.567  #Number of ETH\nnum_asset2 = 25560  #Number of USDC\norig_price_denom_asset2 = 2765.01  #Value of ETH per USDC\nnew_price_denom_asset2 = 2800.0\nlower_price_denom_asset2 = 1813.50  #Lower bound of \nupper_price_denom_asset2 = 3526.30     \n\neg1 = uniswapv3_class(num_asset1, num_asset2, orig_price_denom_asset2, new_price_denom_asset2, lower_price_denom_asset2, upper_price_denom_asset2)\neg1_val = eg1.estimate_asset_composition()      \neg1_val\n\n{'new_num_asset1': 5.2619612193407885,\n 'new_num_asset2': 26407.889305387725,\n 'orig_value_asset_in_asset2': 40952.810670000006,\n 'new_value_asset_in_asset2': 41141.380719541936,\n 'price_change_in_asset2': 0.012654565444609524,\n 'price_change_in_lp': 0.004604569172588359,\n 'hedge_ratio': 0.36386624200910594}\n```\n\n### Simulation on required hedge ratios based on expected price changes\n\n```\nimport pandas as pd\nfrom liquiditypoolcalculator import uniswapv3_class\n\nnum_asset1 = 5.567\nnum_asset2 = 25560\norig_price_denom_asset2 = 2765.01\nnew_price_denom_asset2 = 2800.0\nlower_price_denom_asset2 = 1813.50\nupper_price_denom_asset2 = 3526.30   \n\ndict_param = {\n    \"lb\": 1813.50,\n    'sd_minus_3': 2358,\n    'sd_minus_2': 2497,\n    'sd_minus_1': 2636,\n    'sd_plus_1': 2914,\n    'sd_plus_2': 3052,       \n    'sd_plus_3': 3191,       \n    \"ub\": 3526.30        \n    }\n    \neg1_simulation = eg1.sensitivity_analysis(dict_param)\n\neg1_simulation\nOut[158]: \n                               lb_1813.5  ...     ub_3526.3\nnew_num_asset1                 16.981105  ...      0.000000\nnew_num_asset2                  0.000000  ...  42942.207352\norig_value_asset_in_asset2  40952.810670  ...  40952.810670\nnew_value_asset_in_asset2   30795.234537  ...  42942.207352\nprice_change_in_asset2         -0.344125  ...      0.275330\nprice_change_in_lp             -0.248031  ...      0.048578\nhedge_ratio                     0.720758  ...      0.176435\n\n[7 rows x 8 columns]\n      \n```\n\n### An alternative way of hedging based on price range and known pool value\n\n- Please read following article for more info: https://lambert-guillaume.medium.com/how-to-deploy-delta-neutral-liquidity-in-uniswap-or-why-euler-finance-is-a-game-changer-for-lps-1d91efe1e8ac\n- hedge_num_asset1, in this case eth can be borrowed amount against stablecoin collateral. Or short perpetual/future contracts.\n\n```\nimport pandas as pd\nfrom liquiditypoolcalculator.uniswapv3_hedging import *\n\nnum_asset1 = 5.44\norig_price_denom_asset2 = 2923.76  #Take this as current price. Used as strike price. Analagous to middle price with 0 delta risk in a short straddle\nlower_price_denom_asset2 = orig_price_denom_asset2 * 0.73 #Use calculator to obtain 0.73 based on range factor, https://www.desmos.com/calculator/669zg1rmvb\nupper_price_denom_asset2 = orig_price_denom_asset2 * 1.3601785714285715 #Use calculator to obtain 1.36 based on range factor, https://www.desmos.com/calculator/669zg1rmvb\ntarget_pool_value = 36641.91 \n\n\nres = amt_assets_from_range(num_asset1, orig_price_denom_asset2, lower_price_denom_asset2, upper_price_denom_asset2, target_pool_value)    \nres\n\nOut[103]: \n{'num_asset1': 5.44,\n 'num_asset2': 16243.998561849383,\n 'scaled_num_asset1': 6.200205977928685,\n 'scaled_num_asset2': 18513.99576997123,\n 'orig_value_asset_in_asset2': 32149.252961849386,\n 'scaled_value_asset_in_asset2': 36641.91}\n\n\nuniswap_v3_hedging_ratio_amt(lower_price_denom_asset2, upper_price_denom_asset2, res['scaled_value_asset_in_asset2'], orig_price_denom_asset2)    \n\nOut[104]: {'hedge_ratio': 0.46118284684393274, 'hedge_num_asset1': 5.779756330067846}\n\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jironghuang/liquiditypoolcalculator",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "liquiditypoolcalculator",
    "package_url": "https://pypi.org/project/liquiditypoolcalculator/",
    "platform": "",
    "project_url": "https://pypi.org/project/liquiditypoolcalculator/",
    "project_urls": {
      "Homepage": "https://github.com/jironghuang/liquiditypoolcalculator"
    },
    "release_url": "https://pypi.org/project/liquiditypoolcalculator/0.0.7/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Liquidity pool value simulator",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13042856,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3f60954c9efa4a964a7cb9c6f30401d82cb02718238f967cee83322e604b913",
          "md5": "5dbb051882a82aba3e5d43216ae9168a",
          "sha256": "1534cee5729235a0a4dfb09fdbea450714418e99df85fb2fa3c86620b7418396"
        },
        "downloads": -1,
        "filename": "liquiditypoolcalculator-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5dbb051882a82aba3e5d43216ae9168a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3574,
        "upload_time": "2022-02-02T15:19:54",
        "upload_time_iso_8601": "2022-02-02T15:19:54.189217Z",
        "url": "https://files.pythonhosted.org/packages/e3/f6/0954c9efa4a964a7cb9c6f30401d82cb02718238f967cee83322e604b913/liquiditypoolcalculator-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "499bf65f4eb031f762a4adac4a554f203f22f3dbaaa5e7ff0c97348039e6509c",
          "md5": "489d7df03fde909dd589ac20cff676ba",
          "sha256": "893c506f88f635e1392895a406838e3c8226dccaa2e9a2bba532dab53980276d"
        },
        "downloads": -1,
        "filename": "liquiditypoolcalculator-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "489d7df03fde909dd589ac20cff676ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3641,
        "upload_time": "2022-02-02T15:23:31",
        "upload_time_iso_8601": "2022-02-02T15:23:31.384974Z",
        "url": "https://files.pythonhosted.org/packages/49/9b/f65f4eb031f762a4adac4a554f203f22f3dbaaa5e7ff0c97348039e6509c/liquiditypoolcalculator-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5233f13b81fd6afea82437c8ab09300b28bb910c9e910c5037c90d519fbebfdb",
          "md5": "c986972605ff44a99e91c2dceb64742e",
          "sha256": "5fe9053607008bb88bec86cf0495ab8e3530c904f241f1f53c03bcc7f75eda93"
        },
        "downloads": -1,
        "filename": "liquiditypoolcalculator-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c986972605ff44a99e91c2dceb64742e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3643,
        "upload_time": "2022-02-02T15:59:18",
        "upload_time_iso_8601": "2022-02-02T15:59:18.275808Z",
        "url": "https://files.pythonhosted.org/packages/52/33/f13b81fd6afea82437c8ab09300b28bb910c9e910c5037c90d519fbebfdb/liquiditypoolcalculator-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e02a48089772c4e8ac3821975c71b1a0197869af4c59ab24b4b840ff87759637",
          "md5": "e359bf9e68274acd6bc0dd019d9bf003",
          "sha256": "0c6552b2183dc3d7b3093203a7155d615adec201f252865d297bbf3b45c55286"
        },
        "downloads": -1,
        "filename": "liquiditypoolcalculator-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e359bf9e68274acd6bc0dd019d9bf003",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5713,
        "upload_time": "2022-03-01T07:51:14",
        "upload_time_iso_8601": "2022-03-01T07:51:14.586766Z",
        "url": "https://files.pythonhosted.org/packages/e0/2a/48089772c4e8ac3821975c71b1a0197869af4c59ab24b4b840ff87759637/liquiditypoolcalculator-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "742e92916c4906d6fc9e0de38f001492a386f134e968071b1f8e33e4dd2b424c",
          "md5": "4e8917d1a90202f7231b6cb3d598cb86",
          "sha256": "f4c3203c42dc67a08eb879faba57a5f9c3ad3f2446609d25e405bee132d53813"
        },
        "downloads": -1,
        "filename": "liquiditypoolcalculator-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4e8917d1a90202f7231b6cb3d598cb86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6510,
        "upload_time": "2022-03-01T08:34:51",
        "upload_time_iso_8601": "2022-03-01T08:34:51.375815Z",
        "url": "https://files.pythonhosted.org/packages/74/2e/92916c4906d6fc9e0de38f001492a386f134e968071b1f8e33e4dd2b424c/liquiditypoolcalculator-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82004f08a0788f2daa669b4db7920670b43b46a7b24625a93579a6731a23c8cf",
          "md5": "c752b7537df68735fd88f8beb32d2474",
          "sha256": "93a242377fad69e89e26d3a6385d17254aefbcb1d7ac9a79fcc276cb4daa1ec3"
        },
        "downloads": -1,
        "filename": "liquiditypoolcalculator-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c752b7537df68735fd88f8beb32d2474",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6516,
        "upload_time": "2022-03-01T08:37:52",
        "upload_time_iso_8601": "2022-03-01T08:37:52.934559Z",
        "url": "https://files.pythonhosted.org/packages/82/00/4f08a0788f2daa669b4db7920670b43b46a7b24625a93579a6731a23c8cf/liquiditypoolcalculator-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a41d4aa0f88a9c0ca5d71183c485e5b31cdbc21149965705efcccd37a149acd",
          "md5": "3d20a77c35ec57482375882567eb0e39",
          "sha256": "5a1059c4ea381667345a5eb670a31b410e615de6215bb4a229f5f534dd9220b2"
        },
        "downloads": -1,
        "filename": "liquiditypoolcalculator-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "3d20a77c35ec57482375882567eb0e39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6563,
        "upload_time": "2022-03-01T08:40:09",
        "upload_time_iso_8601": "2022-03-01T08:40:09.294679Z",
        "url": "https://files.pythonhosted.org/packages/1a/41/d4aa0f88a9c0ca5d71183c485e5b31cdbc21149965705efcccd37a149acd/liquiditypoolcalculator-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a41d4aa0f88a9c0ca5d71183c485e5b31cdbc21149965705efcccd37a149acd",
        "md5": "3d20a77c35ec57482375882567eb0e39",
        "sha256": "5a1059c4ea381667345a5eb670a31b410e615de6215bb4a229f5f534dd9220b2"
      },
      "downloads": -1,
      "filename": "liquiditypoolcalculator-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "3d20a77c35ec57482375882567eb0e39",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6563,
      "upload_time": "2022-03-01T08:40:09",
      "upload_time_iso_8601": "2022-03-01T08:40:09.294679Z",
      "url": "https://files.pythonhosted.org/packages/1a/41/d4aa0f88a9c0ca5d71183c485e5b31cdbc21149965705efcccd37a149acd/liquiditypoolcalculator-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}