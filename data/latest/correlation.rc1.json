{
  "info": {
    "author": "Xiangwen Wang",
    "author_email": "wangxiangwen1989@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# correlation\n\nCalculate confidence intervals for correlation coefficients, including Pearson's R, Kendall's tau, Spearman's rho, and customized correlation measures.\n\n## Methodology  \nTwo approaches are offered to calculate the confidence intervals, one parametric approach based on normal approximation, and one non-parametric approach based on bootstrapping.\n### Parametric Approach\nSay r\\_hat is the correlation we obtained, then with a transformation  \n```\nz = ln((1+r)/(1-r))/2,\n```  \nz would approximately follow a normal distribution,  \nwith a mean equals to z(r\\_hat),  \nand a variance sigma^2 that equals to 1/(n-3), 0.437/(n-4), (1+r_hat^2/2)/(n-3) for the Pearson's r, Kendall's tau, and Spearman's rho, respectively (read Ref. [1, 2] for more details). n is the array length.\n\nThe (1-alpha) CI for r would be  \n```\n(T(z_lower), T(z_upper))\n```  \nwhere T is the inverse of the transformation mentioned earlier  \n```\nT(x) = (exp(2x) - 1) / (exp(2x) + 1),\n```   \n```\nz_lower = z - z_(1-alpha/2) sigma,\n```  \n```\nz_upper = z + z_(1-alpha/2) sigma.\n```\n\nThis normal approximation works when the absolute values of the Pearson's r, Kendall's tau, and Spearman's rho are less than 1, 0.8, and 0.95, respectively.\n\n### Nonparametric Approach\nFor the nonparametric approach, we simply adopt a naive bootstrap method.\n\n* We sample a pair (x\\_i, y\\_i) with replacement from the original (paired) samples until we have a sample size that equals to n, and calculate a correlation coefficient from the new samples.  \n* Repeat this process for a large number of times (by default we use 5000),\n* then we could obtain the (1-alpha) CI for r by taking the alpha/2 and (1-alpha/2) quantiles of the obtained correlation coefficients.\n\n\n## References\n[1] Bonett, Douglas G., and Thomas A. Wright. \"Sample size requirements for estimating Pearson, Kendall and Spearman correlations.\" Psychometrika 65, no. 1 (2000): 23-28.  \n[2] Bishara, Anthony J., and James B. Hittner. \"Confidence intervals for correlations when data are not normal.\" Behavior research methods 49, no. 1 (2017): 294-309.\n\n\n## Installation:  \n```\npip install correlation\n```  \nor\n\n```\nconda install -c wangxiangwen correlation\n```\n\n## Example Usage:  \n```python\n>>> import correlation\n>>> a, b = list(range(2000)), list(range(200, 0, -1)) * 10\n>>> correlation.corr(a, b, method='spearman_rho')\n(-0.0999987624920335,          # correlation coefficient\n -0.14330929583811683,         # lower endpoint of CI\n -0.056305939127336606,        # upper endpoint of CI\n 7.446171861744971e-06)        # p-value\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/XiangwenWang/correlation",
    "keywords": "correlation,confidence interval",
    "license": "BSD 2-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "correlation",
    "package_url": "https://pypi.org/project/correlation/",
    "platform": "any",
    "project_url": "https://pypi.org/project/correlation/",
    "project_urls": {
      "Homepage": "https://github.com/XiangwenWang/correlation"
    },
    "release_url": "https://pypi.org/project/correlation/1.0.0/",
    "requires_dist": [
      "numpy",
      "scipy"
    ],
    "requires_python": "",
    "summary": "Calculate the confidence intervals of correlation coeficients",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7622589,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4c4d283538f7b1f56169b899971c2af70b7b1f5c96d5c7d54135c359128f89f",
          "md5": "226db3d2d1900726635445ae332bda8b",
          "sha256": "39a4aaea61d6d9f8a0ab3fc79597285f52664bc0a2795dcc2dbfcb9c94f0d614"
        },
        "downloads": -1,
        "filename": "correlation-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "226db3d2d1900726635445ae332bda8b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8204,
        "upload_time": "2020-07-03T09:23:32",
        "upload_time_iso_8601": "2020-07-03T09:23:32.991308Z",
        "url": "https://files.pythonhosted.org/packages/e4/c4/d283538f7b1f56169b899971c2af70b7b1f5c96d5c7d54135c359128f89f/correlation-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30b9f4fcac90062b340c0fa5d015979818f6d9c61d37393163dfbbe369ad4d70",
          "md5": "6cac8df51c28be50e1cfeb964c5c122c",
          "sha256": "325425214435d3e7b74c68ab79b87ca928938b699894c6e0a9e50770c587387d"
        },
        "downloads": -1,
        "filename": "correlation-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6cac8df51c28be50e1cfeb964c5c122c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4311,
        "upload_time": "2020-07-03T09:23:35",
        "upload_time_iso_8601": "2020-07-03T09:23:35.312242Z",
        "url": "https://files.pythonhosted.org/packages/30/b9/f4fcac90062b340c0fa5d015979818f6d9c61d37393163dfbbe369ad4d70/correlation-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4c4d283538f7b1f56169b899971c2af70b7b1f5c96d5c7d54135c359128f89f",
        "md5": "226db3d2d1900726635445ae332bda8b",
        "sha256": "39a4aaea61d6d9f8a0ab3fc79597285f52664bc0a2795dcc2dbfcb9c94f0d614"
      },
      "downloads": -1,
      "filename": "correlation-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "226db3d2d1900726635445ae332bda8b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8204,
      "upload_time": "2020-07-03T09:23:32",
      "upload_time_iso_8601": "2020-07-03T09:23:32.991308Z",
      "url": "https://files.pythonhosted.org/packages/e4/c4/d283538f7b1f56169b899971c2af70b7b1f5c96d5c7d54135c359128f89f/correlation-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30b9f4fcac90062b340c0fa5d015979818f6d9c61d37393163dfbbe369ad4d70",
        "md5": "6cac8df51c28be50e1cfeb964c5c122c",
        "sha256": "325425214435d3e7b74c68ab79b87ca928938b699894c6e0a9e50770c587387d"
      },
      "downloads": -1,
      "filename": "correlation-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6cac8df51c28be50e1cfeb964c5c122c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4311,
      "upload_time": "2020-07-03T09:23:35",
      "upload_time_iso_8601": "2020-07-03T09:23:35.312242Z",
      "url": "https://files.pythonhosted.org/packages/30/b9/f4fcac90062b340c0fa5d015979818f6d9c61d37393163dfbbe369ad4d70/correlation-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}