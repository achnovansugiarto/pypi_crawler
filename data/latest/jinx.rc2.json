{
  "info": {
    "author": "Brett Elliot",
    "author_email": "brett@theelliots.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python"
    ],
    "description": "====\njinx\n====\n\n``jinx`` the Json INvestor eXchange package is a python SDK for getting financial data from IEX (the Investor Exchange) as JSON objects using the IEX Cloud API.\n\nFor more documentation, please see http://jinx.readthedocs.io.\n\nDescription\n-----------\n\nThis package was heavily based off of `iexfinance`_ however that project uses pandas which doesn't work great when using docker and alpine. This package primarily exists to only return JSON.\n\n.. _`iexfinance`: https://github.com/addisonlynch/iexfinance\n\nInstall\n-------\n\nFrom PyPI with pip (latest stable release):\n\n.. code:: bash\n\n    $ pip3 install jinx\n\nFrom development repository (dev version):\n\n.. code:: bash\n\n     $ git clone https://github.com/brettelliot/jinx.git\n     $ cd jinx\n     $ python3 setup.py install\n\nAuthentication\n--------------\n\nAn IEX Cloud account is required to acecss the IEX Cloud API. Various `plans <https://iexcloud.io/pricing/>`__\nare availalbe, free, paid, and pay-as-you-go.\n\nYour IEX Cloud (secret) authentication token can be passed to any function or at the instantiation of a ``Stock`` object.\nThe easiest way to store a token is in the ``IEX_TOKEN`` environment variable.\n\nThe desired IEX API version can be specified using the ``IEX_API_VERSION``\nenvironment variable. The following versions are currently supported:\n\n* ``v1`` - **default** (now same as ``iexcloud-v1``)\n* ``iexcloud-beta``\n* ``iexcloud-v1``\n* ``iexcloud-sandbox`` - for use with the `sandbox environment`_ (test token\n  must be used)\n\n.. _`sandbox environment`: https://iexcloud.io/docs/api/#sandbox\n\nUsage\n-----\n\nThe ``Stock`` provides access to most endpoints, and can be instantiated with a symbol:\n\n.. code-block:: python\n\n        >>> from jinx.stock import Stock\n        >>> import json\n        >>> aapl = Stock('aapl')\n        >>> aapl_bs = aapl.get_balance_sheet()\n        >>> print (json.dumps(aapl_bs, sort_keys=True, indent=4))\n        {\n            \"balancesheet\": [\n                {\n                    \"accountsPayable\": 33018121739,\n                    \"capitalSurplus\": null,\n                    \"commonStock\": 4496599335,\n                    \"currency\": \"USD\",\n                    \"currentAssets\": 144612403174,\n                    \"currentCash\": 30172961915,\n                    \"currentLongTermDebt\": 10881096169,\n                    \"fiscalDate\": \"2020-03-22\",\n                    \"goodwill\": null,\n                    \"intangibleAssets\": null,\n                    \"inventory\": 3498769850,\n                    \"longTermDebt\": 101705344870,\n                    \"longTermInvestments\": 102909761019,\n                    \"minorityInterest\": 0,\n                    \"netTangibleAssets\": 78477657414,\n                    \"otherAssets\": 33597449752,\n                    \"otherCurrentAssets\": 14914938794,\n                    \"otherCurrentLiabilities\": 42539380185,\n                    \"otherLiabilities\": 21528724378,\n                    \"propertyPlantEquipment\": 44907661177,\n                    \"receivables\": 15986486509,\n                    \"reportDate\": \"2020-03-20\",\n                    \"retainedEarnings\": 33344074958,\n                    \"shareholderEquity\": 80276696449,\n                    \"shortTermInvestments\": 67226412874,\n                    \"totalAssets\": 325814813094,\n                    \"totalCurrentLiabilities\": 96306268790,\n                    \"totalLiabilities\": 245573706847,\n                    \"treasuryStock\": null\n                }\n            ],\n            \"symbol\": \"AAPL\"\n        }\n\nYou can get quarterly or annual data, and specify the number of quarters or years to return:\n\n.. code-block:: python\n\n        >>> aapl_cf = aapl.get_cash_flow(period='annual', last=2)\n        >>> print(json.dumps(aapl_cf, sort_keys=True, indent=4))\n        {\n            \"cashflow\": [\n                {\n                    \"capitalExpenditures\": -10548387365,\n                    \"cashChange\": 25028153575,\n                    \"cashFlow\": 71074668596,\n                    \"cashFlowFinancing\": -94932114603,\n                    \"changesInInventories\": -291703549,\n                    \"changesInReceivables\": 265402510,\n                    \"currency\": \"USD\",\n                    \"depreciation\": 12783029260,\n                    \"dividendsPaid\": -14346206432,\n                    \"exchangeRateEffect\": null,\n                    \"fiscalDate\": \"2019-09-27\",\n                    \"investingActivityOther\": -1109270269,\n                    \"investments\": 58502395335,\n                    \"netBorrowings\": -7868025705,\n                    \"netIncome\": 57051020492,\n                    \"otherFinancingCashFlows\": -3031452489,\n                    \"reportDate\": \"2019-09-19\",\n                    \"totalInvestingCashFlows\": 47952023359\n                },\n                {\n                    \"capitalExpenditures\": -13632715598,\n                    \"cashChange\": 5844075612,\n                    \"cashFlow\": 80737644970,\n                    \"cashFlowFinancing\": -89912917113,\n                    \"changesInInventories\": 830556162,\n                    \"changesInReceivables\": -5367160638,\n                    \"currency\": \"USD\",\n                    \"depreciation\": 11177076598,\n                    \"dividendsPaid\": -14268054186,\n                    \"exchangeRateEffect\": null,\n                    \"fiscalDate\": \"2018-09-24\",\n                    \"investingActivityOther\": -775705637,\n                    \"investments\": 32259623849,\n                    \"netBorrowings\": 436890215,\n                    \"netIncome\": 62431044712,\n                    \"otherFinancingCashFlows\": -2573213034,\n                    \"reportDate\": \"2018-09-27\",\n                    \"totalInvestingCashFlows\": 16703213665\n                }\n            ],\n            \"symbol\": \"AAPL\"\n        }\n\n\n",
    "description_content_type": "text/x-rst; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brettelliot/jinx",
    "keywords": "",
    "license": "mit",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jinx",
    "package_url": "https://pypi.org/project/jinx/",
    "platform": "any",
    "project_url": "https://pypi.org/project/jinx/",
    "project_urls": {
      "Documentation": "https://github.com/brettelliot/jinx",
      "Homepage": "https://github.com/brettelliot/jinx"
    },
    "release_url": "https://pypi.org/project/jinx/1.1.2/",
    "requires_dist": [
      "requests",
      "pytest ; extra == 'testing'",
      "pytest-cov ; extra == 'testing'"
    ],
    "requires_python": "",
    "summary": "An SDK for getting JSON objects using the IEX Cloud API.",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7210085,
  "releases": {
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e679988eab191763c45e20f28f77596de01148bb505f7453365cc5f256a69344",
          "md5": "f150ad4acac52a6a7b5b155fcce4b40e",
          "sha256": "e0c9a3ba5c7c532158c7b1168a287af805d6149bdc718f6f879587bd11fee32d"
        },
        "downloads": -1,
        "filename": "jinx-1.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f150ad4acac52a6a7b5b155fcce4b40e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 8182,
        "upload_time": "2020-05-10T02:57:12",
        "upload_time_iso_8601": "2020-05-10T02:57:12.729183Z",
        "url": "https://files.pythonhosted.org/packages/e6/79/988eab191763c45e20f28f77596de01148bb505f7453365cc5f256a69344/jinx-1.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e3d83cdaf8816c10f292c6642ac82356aad03e9481fec6ca2dd1b826eae5145",
          "md5": "7c993501a766536be68c0e25ce88891a",
          "sha256": "d01e753e7dde1c0086808606edde597179fc0081ba52558ee7d72d017a976151"
        },
        "downloads": -1,
        "filename": "jinx-1.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c993501a766536be68c0e25ce88891a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 8295,
        "upload_time": "2020-05-10T19:18:21",
        "upload_time_iso_8601": "2020-05-10T19:18:21.700965Z",
        "url": "https://files.pythonhosted.org/packages/3e/3d/83cdaf8816c10f292c6642ac82356aad03e9481fec6ca2dd1b826eae5145/jinx-1.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e3d83cdaf8816c10f292c6642ac82356aad03e9481fec6ca2dd1b826eae5145",
        "md5": "7c993501a766536be68c0e25ce88891a",
        "sha256": "d01e753e7dde1c0086808606edde597179fc0081ba52558ee7d72d017a976151"
      },
      "downloads": -1,
      "filename": "jinx-1.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7c993501a766536be68c0e25ce88891a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 8295,
      "upload_time": "2020-05-10T19:18:21",
      "upload_time_iso_8601": "2020-05-10T19:18:21.700965Z",
      "url": "https://files.pythonhosted.org/packages/3e/3d/83cdaf8816c10f292c6642ac82356aad03e9481fec6ca2dd1b826eae5145/jinx-1.1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}