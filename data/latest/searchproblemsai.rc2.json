{
  "info": {
    "author": "Timoth√© Boulet",
    "author_email": "timothe.boulet0@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# AI-Agents-for-Search-Problems\r\nA search problem is defined as a graph of node (states) and weighted edges (action leading from one state to another and costing a cost) where the goal is to find a certain goal state while minimizing the cost if possible. A good example is the pathfinding problem where your agent want to find the shortest path to a certain location. \r\nThese problems can be partially solved using easy to implement graph algorithms adapted to the model-free nature of those problems (we don't know every states but rather discover them during the exploration of the state space).\r\n\r\n![Alt text](search_pb.png)\r\n\r\n## Package SearchProblemsAI\r\nAn implementation in python of some algorithms for search problems such as A*, that can be applied to any problem object that follow the SearchProblem interface.\r\n\r\nThe main feature is to define relatively quickly your concrete search problem as a subclass of the interface SearchProblem in order to solve it using already implemented algorithms. Some of those algorithms including BFS, DFS, Uniform Cost Search (Dijkstra ) and A* are already implemented.\r\n\r\n## Installation :\r\nRun this command to install the package SearchProblemsAI:\r\n\r\n    pip install SearchProblemsAI\r\n\r\n## Using the package \r\nAn example of how to use those algorithms once you have defined your SearchProblem can be found in example/navigation.py or here :\r\n\r\n```python\r\nfrom SearchProblemsAI.search_problems import FindCandyProblem\r\nfrom SearchProblemsAI.search_algorithms import DFS, BFS, UCS, A_star\r\nfrom SearchProblemsAI.utils import manhattan_distance\r\n\r\n#Define problem\r\nproblem = FindCandyProblem(side_lenght=10)\r\nprint(\"Start state:\")\r\nprint(problem.get_start_state())\r\n\r\n#Define algorithm solving it, solve it\r\nprint(\"Solving...\")\r\ndef h(state):\r\n    return manhattan_distance(state.pos, problem.goal_pos)\r\nlist_of_actions = A_star(heuristic = h).solve(problem)\r\n\r\n#Test the solution\r\nprint(\"\\nTesting solution :\", list_of_actions)\r\nproblem.apply_solution(list_of_actions)\r\n```\r\n\r\nThe search problems have to be deterministic : one action in one state always leads to exactly one state.\r\n\r\n\r\n\r\n## Define your search problem\r\n```python\r\nfrom SearchProblemsAI.SearchProblem import State, SearchProblem\r\n\r\nclass YourState(State):\r\n    pass\r\n    \r\nclass YourSearchProblem(SearchProblem):  \r\n    pass\r\n```\r\n\r\nYou need to first define your state class that must inherit the State class. A state represent a state of the problem with every information you are giving to the agent. Please implements the following methods, as well as the __str__ method eventually :\r\n\r\n    __hash__()  : a state should be hashable\r\n    __eq__(state : State) : two state should be comparable\r\n      \r\nThen you must define your search problem class. Every search problem class must inherit the class SearchProblem and implements the following methods :\r\n\r\n    get_start_state()                                  : return the initial state\r\n    is_goal_state(state : State)                       : return whether the state is a goal state\r\n    get_actions(state : State)                         : return the list of actions available in a given state\r\n    get_transition(state : State, action : object)     : return a tuple (next_state, cost_of_action) that represents the transition\r\n      \r\nA path finding problem can be found in search_problem/FindCandy.py as an example.\r\n      \r\n\r\n## Define your search algorithm\r\nSome algorithms are already implemented.\r\n```python\r\nfrom SearchProblemsAI.search_algorithms import DFS_treeSearch, DFS, BFS, DepthLimitedDFS, IDDFS, UCS, A_star\r\n```\r\n\r\nBut you can also define other search algorithms by inheriting the SearchAlgorithm class and implements the abstract required methods. The interface to respect is only to implement the method solve(problem : SearchProblem) that return a list of actions to solve the problem.\r\n\r\n\r\n## Solve your search problem\r\nOnce it is done, you can solve your problem by using method .solve() on an instance of your search problem class.\r\n````python\r\nproblem = YourSearchProblem(*args)\r\nlist_of_actions = DFS().solve(problem)\r\nproblem.apply_solution(list_of_actions)\r\n````\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tboulet/AI-Agents-for-Search-Problems",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SearchProblemsAI",
    "package_url": "https://pypi.org/project/SearchProblemsAI/",
    "platform": null,
    "project_url": "https://pypi.org/project/SearchProblemsAI/",
    "project_urls": {
      "Homepage": "https://github.com/tboulet/AI-Agents-for-Search-Problems"
    },
    "release_url": "https://pypi.org/project/SearchProblemsAI/2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "SearchProblemsAI is a library of AI agents for Search Problems.",
    "version": "2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15847326,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae3d03fc5a29b1834d118dd4ee5e8103f85fc54a2b1ad9b5d757da87282e2c66",
          "md5": "6a0b4006292865b6c8094ee08437db25",
          "sha256": "3642fd590515a928b4f06846cf1f74fc119b9957946e9f30e845395b671c3589"
        },
        "downloads": -1,
        "filename": "SearchProblemsAI-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a0b4006292865b6c8094ee08437db25",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13436,
        "upload_time": "2022-10-31T01:31:27",
        "upload_time_iso_8601": "2022-10-31T01:31:27.714894Z",
        "url": "https://files.pythonhosted.org/packages/ae/3d/03fc5a29b1834d118dd4ee5e8103f85fc54a2b1ad9b5d757da87282e2c66/SearchProblemsAI-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e08a51207c5344b111887864f7c25fd0ae1eb8fe889bd69a96cb26cb32e2f11",
          "md5": "ba12b6f6c6eef3f9f960d231be63253b",
          "sha256": "5c55145b2e6f5e0f807a5dc03837cef7815b0679369d64429bdf02cdadbfa8ff"
        },
        "downloads": -1,
        "filename": "SearchProblemsAI-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ba12b6f6c6eef3f9f960d231be63253b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11679,
        "upload_time": "2022-10-31T01:31:29",
        "upload_time_iso_8601": "2022-10-31T01:31:29.429993Z",
        "url": "https://files.pythonhosted.org/packages/8e/08/a51207c5344b111887864f7c25fd0ae1eb8fe889bd69a96cb26cb32e2f11/SearchProblemsAI-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "490d6fec09bd07014b31b53f0940413453459e2c3a292195e85ee47410ec1184",
          "md5": "b5a91c2087a7d9d4ae2d8072423106ca",
          "sha256": "1bd86aa47c02fd7054166c5125813a42dac948bac10a49664a69cc8d7e0d7fb7"
        },
        "downloads": -1,
        "filename": "SearchProblemsAI-2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5a91c2087a7d9d4ae2d8072423106ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17202,
        "upload_time": "2022-11-22T00:21:57",
        "upload_time_iso_8601": "2022-11-22T00:21:57.461121Z",
        "url": "https://files.pythonhosted.org/packages/49/0d/6fec09bd07014b31b53f0940413453459e2c3a292195e85ee47410ec1184/SearchProblemsAI-2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6492ea45a02b4606a56270cd81a22b2e4c07046c80b0a8b152f5a1f19cb1fa5",
          "md5": "b4283cb05d03cef60d9133359454b60b",
          "sha256": "ef532e6e83e44d37495627b14c71d49a867175032f1689bec3a7d1e94523c000"
        },
        "downloads": -1,
        "filename": "SearchProblemsAI-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b4283cb05d03cef60d9133359454b60b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13655,
        "upload_time": "2022-11-22T00:21:58",
        "upload_time_iso_8601": "2022-11-22T00:21:58.970030Z",
        "url": "https://files.pythonhosted.org/packages/d6/49/2ea45a02b4606a56270cd81a22b2e4c07046c80b0a8b152f5a1f19cb1fa5/SearchProblemsAI-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "490d6fec09bd07014b31b53f0940413453459e2c3a292195e85ee47410ec1184",
        "md5": "b5a91c2087a7d9d4ae2d8072423106ca",
        "sha256": "1bd86aa47c02fd7054166c5125813a42dac948bac10a49664a69cc8d7e0d7fb7"
      },
      "downloads": -1,
      "filename": "SearchProblemsAI-2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b5a91c2087a7d9d4ae2d8072423106ca",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17202,
      "upload_time": "2022-11-22T00:21:57",
      "upload_time_iso_8601": "2022-11-22T00:21:57.461121Z",
      "url": "https://files.pythonhosted.org/packages/49/0d/6fec09bd07014b31b53f0940413453459e2c3a292195e85ee47410ec1184/SearchProblemsAI-2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d6492ea45a02b4606a56270cd81a22b2e4c07046c80b0a8b152f5a1f19cb1fa5",
        "md5": "b4283cb05d03cef60d9133359454b60b",
        "sha256": "ef532e6e83e44d37495627b14c71d49a867175032f1689bec3a7d1e94523c000"
      },
      "downloads": -1,
      "filename": "SearchProblemsAI-2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b4283cb05d03cef60d9133359454b60b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13655,
      "upload_time": "2022-11-22T00:21:58",
      "upload_time_iso_8601": "2022-11-22T00:21:58.970030Z",
      "url": "https://files.pythonhosted.org/packages/d6/49/2ea45a02b4606a56270cd81a22b2e4c07046c80b0a8b152f5a1f19cb1fa5/SearchProblemsAI-2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}