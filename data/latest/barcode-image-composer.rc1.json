{
  "info": {
    "author": "yushulx",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "# Barcode Image Composer\nThe project is used to generate an image set with barcode, QR code and DataMatrix.\n\n![barcode image composer](https://camo.githubusercontent.com/ec18f510ebc070d04389c92bf0d64e5f60e5c2a414260d971f2987c63d2e6184/68747470733a2f2f7777772e64796e616d736f66742e636f6d2f636f6465706f6f6c2f2f696d672f323032322f30382f626172636f64652d696d6167652d636f6d706f7365722e706e67)\n\n## Install Dependencies\n```bash \npip install python-barcode pylibdmtx opencv-python pillow\n```\n\n## Supported Barcode Types\n- UPCA\n- QR Code\n- DataMatrix\n\n## Command-line Usage\n```bash \n$ imgcompose [-t TIMES] [-o OUTPUT] image-source\n```\n\n## Sample Code\n\n```python\nimport argparse\nfrom imgcomposer import ImageManager\nfrom imgcomposer.upca import UPCACode\nfrom imgcomposer.qrcode import Qrcode\nfrom imgcomposer.datamatrix import DataMatrixCode\nimport sys\nimport numpy as np\nimport os\nimport cv2\n\ndef process_file(imageManager, base, index, input, output):\n    bg_image = cv2.imread(input)\n    (height, width) = bg_image.shape[:2]\n    wRatio = width / 1039; hRatio = height / 591\n    upca_renderer = imageManager.Renderer(wRatio * 10, hRatio * 140, (10, 10), UPCACode(base, 0.5, cv2.ROTATE_90_CLOCKWISE))\n    dm_renderer = imageManager.Renderer(wRatio * 920, hRatio * 40, (10, 10), DataMatrixCode(str(index), 1.5, -1))\n    qr_renderer = imageManager.Renderer(wRatio * 20, hRatio * 390, (10, 10), Qrcode('www.dynamsoft.com', 0.4, -1))\n    renderers = [upca_renderer, dm_renderer, qr_renderer]\n    composed_image = imageManager.compose(bg_image, renderers)\n    # cv2.imshow('composed_image', composed_image)\n    outfile = '{0}x{1}_{2}.png'.format(bg_image.shape[1], bg_image.shape[0], index)\n    cv2.imwrite(os.path.join(output, outfile), bg_image)\n    \nparser = argparse.ArgumentParser(description='Compose images with barcode, QR code, and DataMatrix code.')\nparser.add_argument('source', help='An image file or a folder containing image files')\nparser.add_argument('-t', '--times', default=1, type=int, help='Specify the number of times to compose the image')\nparser.add_argument('-o', '--output', default='', type=str, help='Image output folder')\nargs = parser.parse_args()\n# print(args)\ntry:\n    input = args.source\n    output = args.output\n    times = args.times\n    \n    if not os.path.exists(input):\n        print('Source not found')\n        exit(-1)\n    \n    if output == '':\n        output = os.getcwd()\n    else:\n        if not os.path.exists(output):\n            os.mkdir(output)\n        \n    imageManager = ImageManager()\n    base = '10000000000'\n    index = 0\n    for i in range(times):\n        if os.path.isfile(input):\n            print('Processing ' + input)\n            process_file(imageManager, base, index, input, output)\n            base = str(int(base) + 1)\n            index += 1\n        else:\n            filelist = os.listdir(input)\n            for file in filelist:\n                print('Processing ' + file)\n                process_file(imageManager, base, index, os.path.join(input, file), output)\n                base = str(int(base) + 1)\n                index += 1\n            \n    # cv2.waitKey(0)\nexcept Exception as err:\n    print(err)\n    sys.exit(1)\n```\n\n## How to Build the Package\n- Source distribution:\n    \n    ```bash\n    python setup.py sdist\n    ```\n\n- Wheel:\n    \n    ```bash\n    pip wheel . --verbose\n    # Or\n    python setup.py bdist_wheel\n    ```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yushulx/barcode-image-composer",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "barcode-image-composer",
    "package_url": "https://pypi.org/project/barcode-image-composer/",
    "platform": null,
    "project_url": "https://pypi.org/project/barcode-image-composer/",
    "project_urls": {
      "Homepage": "https://github.com/yushulx/barcode-image-composer"
    },
    "release_url": "https://pypi.org/project/barcode-image-composer/1.0.0/",
    "requires_dist": [
      "python-barcode",
      "pylibdmtx",
      "pillow",
      "qrcode"
    ],
    "requires_python": "",
    "summary": "Compose images with barcode, QR code, and DataMatrix code.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14874740,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "780ce07a3bb5c80c90d22825c59f3a225a284951e6ab6bd430b4aa87a893c714",
          "md5": "f85aeceb4b0f46aa1898a62bc92732b2",
          "sha256": "94dfb43b283073163ef9fe711c3d99dd5a6349e0c791e107df2c8a52cef26bbd"
        },
        "downloads": -1,
        "filename": "barcode_image_composer-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f85aeceb4b0f46aa1898a62bc92732b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7527,
        "upload_time": "2022-08-25T05:51:37",
        "upload_time_iso_8601": "2022-08-25T05:51:37.009655Z",
        "url": "https://files.pythonhosted.org/packages/78/0c/e07a3bb5c80c90d22825c59f3a225a284951e6ab6bd430b4aa87a893c714/barcode_image_composer-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22db4a3bd40fb50848ce89229e15a225ec367eb53070ffa54e81f22c0edb5b1c",
          "md5": "223c0b402924a41863b05fe58697feec",
          "sha256": "f7536089fe547a79b7667a7a32b04e6fcc4e1cb12119bd27dfce079e85a8027a"
        },
        "downloads": -1,
        "filename": "barcode-image-composer-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "223c0b402924a41863b05fe58697feec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5910,
        "upload_time": "2022-08-25T05:51:38",
        "upload_time_iso_8601": "2022-08-25T05:51:38.577583Z",
        "url": "https://files.pythonhosted.org/packages/22/db/4a3bd40fb50848ce89229e15a225ec367eb53070ffa54e81f22c0edb5b1c/barcode-image-composer-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "780ce07a3bb5c80c90d22825c59f3a225a284951e6ab6bd430b4aa87a893c714",
        "md5": "f85aeceb4b0f46aa1898a62bc92732b2",
        "sha256": "94dfb43b283073163ef9fe711c3d99dd5a6349e0c791e107df2c8a52cef26bbd"
      },
      "downloads": -1,
      "filename": "barcode_image_composer-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f85aeceb4b0f46aa1898a62bc92732b2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7527,
      "upload_time": "2022-08-25T05:51:37",
      "upload_time_iso_8601": "2022-08-25T05:51:37.009655Z",
      "url": "https://files.pythonhosted.org/packages/78/0c/e07a3bb5c80c90d22825c59f3a225a284951e6ab6bd430b4aa87a893c714/barcode_image_composer-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22db4a3bd40fb50848ce89229e15a225ec367eb53070ffa54e81f22c0edb5b1c",
        "md5": "223c0b402924a41863b05fe58697feec",
        "sha256": "f7536089fe547a79b7667a7a32b04e6fcc4e1cb12119bd27dfce079e85a8027a"
      },
      "downloads": -1,
      "filename": "barcode-image-composer-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "223c0b402924a41863b05fe58697feec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5910,
      "upload_time": "2022-08-25T05:51:38",
      "upload_time_iso_8601": "2022-08-25T05:51:38.577583Z",
      "url": "https://files.pythonhosted.org/packages/22/db/4a3bd40fb50848ce89229e15a225ec367eb53070ffa54e81f22c0edb5b1c/barcode-image-composer-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}