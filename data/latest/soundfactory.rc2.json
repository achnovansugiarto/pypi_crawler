{
  "info": {
    "author": "TSAK",
    "author_email": "tsakians@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Topic :: Artistic Software",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# soundfactory\n[![Build Status](https://travis-ci.org/babaMar/soundfactory.svg?branch=master)](https://travis-ci.org/babaMar/soundfactory)\n[![codecov](https://codecov.io/gl/babaMar/soundfactory/branch/master/graph/badge.svg)](https://codecov.io/gl/babaMar/soundfactory)\n[![Documentation Status](https://readthedocs.org/projects/soundfactory/badge/?version=latest)](https://soundfactory.readthedocs.io/en/latest/?badge=latest)\n\n`soundfactory` is a simple tool to experiment and be creative with audio taking a data-oriented approach.\nIt is primarily directed to digital artists that want to generate audio samples\nfrom diverse data sources, and to audio-engineering students at their first steps\ninto the beautiful world of additive sound synthesis.\n\nThe peculiarity about `soundfactory` is the adoption of fourier-series approximation\nwhen `square`, `sawtooth`, or `triangle` wave shapes are chosen. In fact, being \napproximated the single-oscillator signals will contain upper harmonics with respect\nto the analytical signal (with the same amplitude, frequency, and wave shape), \nthat can be obtained by `scipy` (see tests). The result will be a warmer and \nunexpectedly coloured sound.\n \nIt comes from some scripts I have been writing a few years back and thought about\nhaving few reusable core modules and a command-line tool for researching new sounds.\nAnd I wanted to be able to develop it and have fun with it in my Jupyter Notebook of course!\n\nYou can find the documentation at https://soundfactory.readthedocs.io\n\n---\n**WARNING**\n\nBefore installing with `pip` check the [pre-requirements](https://soundfactory.readthedocs.io/en/latest/Installation.html#prerequisites)\n\n---\n\n## Examples\n### Random Sample Generator\n```python\nfrom random import uniform, choice\nfrom soundfactory import SignalBuilder, SignalPlotter\nimport matplotlib.pyplot as plt\n\nn_components = 4\nMAX_FREQ = 1000.\n\nfname = ''\nfreqs, amps, shapes = list(), list(), list()\nfor _ in range(n_components):\n    freq = round(uniform(20., MAX_FREQ), 1)\n    freqs.append(freq)\n    amp = round(uniform(0.1, 1.), 1)\n    amps.append(amp)\n    shape = choice(['sine', 'square', 'sawtooth', 'triangle'])\n    shapes.append(shape)\n    fname += '_'.join([str(freq), str(amp), shape])\n\ns = SignalBuilder(\n    freqs, amps, shapes,\n    samplerate=96000,\n    duration=2.\n)\nfname += '.wav'\ns.export(fname)\n\n# Analyse with SignalPlotter\nsig = SignalPlotter(plt, fname, True)\nsig.show(wmsec=0.1)\n```\n\n### Reproducing a Sound Characteristic at an arbitrary Frequency\n```python\nfrom numpy import where, sqrt\nimport matplotlib.pyplot as plt\n\nfrom soundfactory import SignalBuilder, SignalPlotter\nfrom soundfactory import Signal\nfrom soundfactory.utils.scale import build_24_tet_scale\n\nSCALE_INIT = {'E0': 20.6}\n\nref_label = list(SCALE_INIT.keys())[-1]\nref_frequency = list(SCALE_INIT.values())[-1]\nscale_24 = build_24_tet_scale(ref_label, ref_frequency, max_octave=3)\n\nref_signal = Signal('/<path-to-packages>/soundfactory/samples/A3-Calib-220.wav')\n\nfreqs = ref_signal.SPECTRA['ch1_fft'][ref_signal.FREQUENCIES]\npws = ref_signal.SPECTRA['ch1_fft'][ref_signal.POWERS]\n\n# Select only few of the spectral components\nselect_idx = where(pws > 0.00001)[0]\n# Get the fundamental frequency to obtain the upper-harmonic orders\nfundamental_idx = where(pws == pws.max())[0]\nfreq_ratios = freqs / freqs[fundamental_idx]\n\ntone = 'E3𝄲'  # Choose an arbitrary tone NOT playble on the keyboard\ninput_freqs = scale_24[tone] * freq_ratios[select_idx]\ninput_amps = sqrt(2 * pws[select_idx])\n\nmy_signal = SignalBuilder(input_freqs,\n                          input_amps, [\n                          'sine' for _ in range(len(select_idx))]\n                         )\n\nfilename = './%s_sample.wav' % tone\nmy_signal.export(filename)\n\n# Analyse with SignalPlotter\nsig = SignalPlotter(plt, filename, True)\nsig.show(wmsec=0.1)\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/babaMar/soundfactory",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "soundfactory",
    "package_url": "https://pypi.org/project/soundfactory/",
    "platform": "",
    "project_url": "https://pypi.org/project/soundfactory/",
    "project_urls": {
      "Homepage": "https://gitlab.com/babaMar/soundfactory"
    },
    "release_url": "https://pypi.org/project/soundfactory/0.2.1/",
    "requires_dist": [
      "cachetools (==4.2.2)",
      "cffi (==1.14.5)",
      "Click (==8.0.1)",
      "complexaudio (==1.0.4)",
      "cycler (==0.10.0)",
      "cysignals (==1.10.3)",
      "Cython (==0.29.23)",
      "getch (==1.0)",
      "llvmlite (==0.36.0)",
      "lxml (==4.6.2)",
      "matplotlib (==3.3.4)",
      "numba (==0.53.1)",
      "numpy (==1.20.3)",
      "Pillow (==8.2.0)",
      "PyAudio (==0.2.11)",
      "pycparser (==2.20)",
      "pyparsing (==2.4.7)",
      "PySoundFile (==0.9.0.post1)",
      "python-dateutil (==2.8.1)",
      "python-toolbox (==1.0.11)",
      "pytz (==2020.5)",
      "scipy (==1.5.4)",
      "six (==1.15.0)",
      "pytest ; extra == 'tests'",
      "pytest-mock ; extra == 'tests'",
      "pytest-cov ; extra == 'tests'"
    ],
    "requires_python": ">=3.6",
    "summary": "simple tools for audio-signal manipulations",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10536554,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "889ba43006b733095de14afe6806658d286c390324afba36d8471c436e4a1633",
          "md5": "b7f74863f1e9c9a7bded845b307bcb89",
          "sha256": "1744db93116304e630119206b9778f0b25920680cae902fb6cb8f4ef90d005a9"
        },
        "downloads": -1,
        "filename": "soundfactory-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7f74863f1e9c9a7bded845b307bcb89",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 1319536,
        "upload_time": "2019-11-16T01:51:31",
        "upload_time_iso_8601": "2019-11-16T01:51:31.950782Z",
        "url": "https://files.pythonhosted.org/packages/88/9b/a43006b733095de14afe6806658d286c390324afba36d8471c436e4a1633/soundfactory-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b64c254d7e570028079517cff4c55dc31e96a5594fd5ac1830b028846717729",
          "md5": "214d895b78b8fedd0e5ff3b502bdc930",
          "sha256": "361c2be5640542e84d93a7894d56196c33174b2c2fe37222feacb53578dcab66"
        },
        "downloads": -1,
        "filename": "soundfactory-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "214d895b78b8fedd0e5ff3b502bdc930",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3653373,
        "upload_time": "2019-11-16T01:51:36",
        "upload_time_iso_8601": "2019-11-16T01:51:36.596550Z",
        "url": "https://files.pythonhosted.org/packages/8b/64/c254d7e570028079517cff4c55dc31e96a5594fd5ac1830b028846717729/soundfactory-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5378d5cb004c20773a5cc1277d25101469835d1e84a614f252e9371988934e46",
          "md5": "73f246c7de5095f89f045e8a8c6b47c4",
          "sha256": "efb960fa94d3864fc6a5f29989bc435a8207db7e8662cbb45530b257ac3103a9"
        },
        "downloads": -1,
        "filename": "soundfactory-0.2.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "73f246c7de5095f89f045e8a8c6b47c4",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 4141093,
        "upload_time": "2021-06-02T10:07:34",
        "upload_time_iso_8601": "2021-06-02T10:07:34.309746Z",
        "url": "https://files.pythonhosted.org/packages/53/78/d5cb004c20773a5cc1277d25101469835d1e84a614f252e9371988934e46/soundfactory-0.2.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07061c818927ad6acb55fcc4454b5413609a29aae2a181d88e3d60734b843c00",
          "md5": "2da6e233a0b469d80e9d58b5a2756c2b",
          "sha256": "191d55c25d023930c974716bf6ebe5f2e9cd83ff5703f734d09aa890222567b9"
        },
        "downloads": -1,
        "filename": "soundfactory-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2da6e233a0b469d80e9d58b5a2756c2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5200922,
        "upload_time": "2021-06-02T10:07:38",
        "upload_time_iso_8601": "2021-06-02T10:07:38.114109Z",
        "url": "https://files.pythonhosted.org/packages/07/06/1c818927ad6acb55fcc4454b5413609a29aae2a181d88e3d60734b843c00/soundfactory-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5378d5cb004c20773a5cc1277d25101469835d1e84a614f252e9371988934e46",
        "md5": "73f246c7de5095f89f045e8a8c6b47c4",
        "sha256": "efb960fa94d3864fc6a5f29989bc435a8207db7e8662cbb45530b257ac3103a9"
      },
      "downloads": -1,
      "filename": "soundfactory-0.2.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "73f246c7de5095f89f045e8a8c6b47c4",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6",
      "size": 4141093,
      "upload_time": "2021-06-02T10:07:34",
      "upload_time_iso_8601": "2021-06-02T10:07:34.309746Z",
      "url": "https://files.pythonhosted.org/packages/53/78/d5cb004c20773a5cc1277d25101469835d1e84a614f252e9371988934e46/soundfactory-0.2.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "07061c818927ad6acb55fcc4454b5413609a29aae2a181d88e3d60734b843c00",
        "md5": "2da6e233a0b469d80e9d58b5a2756c2b",
        "sha256": "191d55c25d023930c974716bf6ebe5f2e9cd83ff5703f734d09aa890222567b9"
      },
      "downloads": -1,
      "filename": "soundfactory-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2da6e233a0b469d80e9d58b5a2756c2b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5200922,
      "upload_time": "2021-06-02T10:07:38",
      "upload_time_iso_8601": "2021-06-02T10:07:38.114109Z",
      "url": "https://files.pythonhosted.org/packages/07/06/1c818927ad6acb55fcc4454b5413609a29aae2a181d88e3d60734b843c00/soundfactory-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}