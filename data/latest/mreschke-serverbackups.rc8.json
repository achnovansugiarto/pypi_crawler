{
  "info": {
    "author": "Matthew Reschke",
    "author_email": "mail@mreschke.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: System :: Archiving :: Backup"
    ],
    "description": "# Server Backups\n\nConfig driven server backups that feel like a simple backup.py script\n\n* PyPi: https://pypi.org/project/mreschke-serverbackups\n* Github: https://github.com/mreschke/server-backups\n\n\n# Installation\n\n```bash\npip install mreschke-serverbackups\n```\n\n\n# Usage\n\nAll backups are initiated from a simple `backups.py` file.  Create this file with:\n\n```bash\ncd /usr/local/bin\nserverbackups init-cli-script\n```\n\nThis `backups.py` can hold your server backup definitions as a dictionary, fully self contained.\nOr you can choose to use `yaml` files in `/etc/serverbackups` to separate each server in its own `/etc/serverbackups/config.d` file.\nTo initialize a stock `/etc/serverbackups` directory run\n\n```bash\nserverbackups init-directory\n\n# Defaults to /etc/serverbackups.  Optionally, set a different directory\nserverbackups init-directory --path /etc/someother/dir\n```\n\nRead below for how to modify the configs.  Once you have a good configuration setup you can run the\nbackups like so\n\n```bash\n# Run all servers AND custom python code\n./backups.py run --all\n\n# Run all servers with NO custom python code\n./backups.py run --servers\n\n# Run a single server (no custom python code)\n./backups.py run --server=myserver\n\n# Run all servers defined in the same cluster (no custom python code)\n./backups.py run --cluster=webfarm\n\n# Run only custom code in backups.py, NOT the server definition arrays\n./backups.py run --custom\n```\n\n\n\n# Basic Idea\n\nThe basic idea is to replace your quick and simple backup `bash` script with a more\ncomprehensive but still simple and readable `backups.py` file.  This file can backup common items\nsuch as files and databases using `rsync` hard-link style snapshots in a simple\nconfig driven manner.  Instead of hacking bash scripts to rsync properly you can use\na simple config instead.  At the end of `backups.py` after all backups have executed\nfrom this simple dictionary/yaml definition you can still code your own functionality\nright in python as you normally would in a bash script.  This gives you the power\nof a script with the added benefit if easy config driven common backup routines.\n\nWhether you are using inline `backups.py` dictionaries to define your server or\nusing `/etc/serverbackups/config.d/*` files the concept of how the system works\nis the same.\n\nYou define an array of server to backup.  Each server has many options including\nsource, destination, files to backup and exclude, databases to backup and pre/post\nscripts to run.\n\n\n## Backup Strategy\n\nI use `rsync` and `ssh` for all backups local or remote.  To cut down on storage costs I am utilizing\nrsync hard-link style snapshots.  This means your snapshot folder looks full and complete each day (not\na diff or incremental look) but in actuality most of those files are hard linked to previous snapshots.\nThis means the storage used on the backup server is only the size of all unique files combined + the ones\npreviously deleted.  Total storage is NOT every days worth of files, that would be HUGE.\nI adapted the code from http://anouar.adlani.com/2011/12/how-to-backup-with-rsync-tar-gpg-on-osx.html\nto accomplish this.  The trick is in the `rsync --hard-links --link-dest` parameters.  This storage saving\ntrick allows you to have a generous purge strategy, keeping years worth of weekly, monthly and yearly backups\nwithout sacrificing storage.\n\n\n## Defaults\n\nMost of the settings for a single server are redundant and can therefore be\ndeduplicated in to what I call a `defaults` config.  The `defaults` config\nis `merged` with **each** server definition in your array.  This keeps your server definition\nsmall and clean.  `Defaults` and each of your server configs are deep merged which\nallows you to override small pieces of the `defaults` for each server as needed.\n\nDefaults are completely **optional** and are there to help cut down on redundant configuration.  If\nyou are simply backing up a single server, just define the entire complete server options and forget\na 'defaults' definition.\n\n**NOTICE - Sensible Defaults Applied**\n\nIf you do not define your own 'defaults', a sensible 'defaults' are still applied to keep even a single\nserver definition less verbose.  Run `serverbackups show-builtin-defaults` to see the `defaults` that are\nstill being applied here.  For example you don't need to define the prune rates, ssh port or ssh key\nif the `defaults` are acceptable.\n\nBecause of the `defaults` system, your actual server definitions can be much smaller.  For example, here\nis a minimal server definition that inherits from `defaults`\n\nIn yaml format\n```yaml\nmyloadbalancer:\n  source: {ssh: {host: haproxy.example.com}}\n  backup:\n    files:\n      exclude:\n        - /var/log/haproxy_info.log\n```\n\n\n## Servers\n\nEach server is defined in a python dictionary or yaml file in `/etc/serverbackups/config.d`\n**ending in .yml**.  Before the backups run each server is `deep merged` with your `defaults` config to\ncreate a full and rich server definition.\n\n\n## Files\n\nThe `files` section of each server definition allows you to backup files and folders obeying the `exclude`\narray.  The only difference between `common` and `extra` is that `common` was meant to be used in the `defaults`\nsection while `extra` was there just for you to add to each of your servers.  Technically you can still add\n`common` to your server as arrays are APPENDED during the `default deep merge algorithm`.  Exclude is also\nappended during merge so you can add more excludes per server while maintaining those you defined in `defaults`.\n\n\n## Scripts\n\nThe script section of each server definition allows you to run arbitrary bash scripts on the destination.\nThe `output` of the scripts is optional.  If present, the output is saved to the snapshot folder.  This is\nhandy to backup the output of `dpkg -l` command for example.\n\nThere are 2 script sections, `preScripts` and `postScripts`.  The pre scripts run before any other backups\nfor that particular server.  Post scripts run after all backups.\n\nExample.  I want to backup my `gitlab` server.  I really don't want to export my repositories and dig into\ntheir postgres database manually.  Gitlab provides a command `gitlab-backup create` that does it all for me\nand saves the backups to `/var/opt/gitlab/backups`.  Using a pre script to run this command before your `files`\ndefinition grabs `/var/opt/gitlab/backups` is a good example of a pre script.  Gitlab does not clean up their\nown backups so using a post script to remove `/var/opt/gitlab/backups/*.gz` is a good example of a post script.\nBoth of which can either store the output of the command to the snapshot, or ignore output with `output=None`.\n\n\n\n\n## Push Me Pull You\n\nServerbackups can run\n* `local -> local`,\n* `local -> remote` (push via SSH and rsync)\n* `remote -> local` (pull via SSH and rsync)\n\nIf you just want to backup your laptop to your server, probably the `local -> remote` is simplest.  If you\nuse `serverbackups` in a corporate environment like I do you probably want a single backup server that\n**pulls** backups from all your servers and VMS.  Pulling has the advantage of not having to put your\nSSH keys on the backup server.  So all VMs cannot SSH into the backup server.  Pulling means the backup\nserver needs access to all VMs but not the other way around.\n\nIn my corporate environment I have a single backup server which has SSH access into the `root` account\non every server and VM.  I use the file based `/etc/serverbackups` configuration.  Each server has\na file in `/etc/serverbackups/config.d/someserver.yml`.  Using single files for each server helps\nmanage the backups when you have hundreds of servers.  For best results, keep these backup files in ansible for revision control and easy deployments.\n\n\n# Examples\n\n\n## Standalone backups.py\n\nIf you want to define your entire backup plan including the `defaults` config in a single backup.py\n\n```bash\ncd /usr/local/bin\nserverbackups init-cli-script\nchmod a+x backups.py\n```\n\nEdit this new file and adjust line #1 (the shebang to your python3 location\n\nEdit the `defaults` and `servers` dictionary adding all your servers as needed.\n\n\n\n\n\nCreates the following stubbed example\n\n```python\n#!/usr/bin/env python\nfrom datetime import date\nfrom mreschke.serverbackups import Backups, cli, log\n\n# Configure logger\nlog.init({\n    'console': {\n        'level': 'INFO',  # DEBUG, INFO, WARNING, ERROR, CRITICAL\n    },\n    'file': {\n        'enabled': True,\n        'file': '/tmp/backups-{}.log'.format(date.today().strftime('%Y-%m-%d')),\n    }\n})\n\n# Set per server defaults.  Each server can override parts of this default.\ndefaults = {\n    'enabled': True,\n    'cluster': None,\n\n    # Keep all daily up to X days back, last snapshot in a week X weeks back, last snapshot in a month X months back...\n    'prune': {\n        'keepDaily': 30,\n        'keepWeekly': 24,\n        'keepMonthly': 60,\n        'keepYearly': 10,\n    },\n\n    # Rsync options\n    'rsync': {\n        'verbose': True,\n    },\n\n    # Source server connection details\n    'source': {\n        'location': 'local',  # local, ssh,\n        'ssh': {\n            # Only used with location=ssh\n            'host': 'server.example.com',  # or IP address,\n            'port': 22,\n            'user': 'root',\n            'key': '~/.ssh/id_rsa',\n        },\n    },\n\n    # Destination server connection details\n    'destination': {\n        'location': 'local',  # local, ssh,\n        'path': '/mnt/backups',\n        'ssh': {\n            # Only used with location=ssh\n            'host': 'server.example.com',  # or IP address,\n            'port': 22,\n            'user': 'root',\n            'key': '~/.ssh/id_rsa',\n        },\n    },\n\n    # Backup items\n    'backup': {\n        # Pre scripts run on destination before this servers backups, a good place to prep files for backup\n        'preScripts': {\n            'gitlab': {'script': 'sudo gitlab-backup create', 'output': 'gitlab-backup.txt', 'enabled': False},\n        },\n\n        # Files to backup on the destination.  Use extra in your actual server definition for extra files.\n        # Arrays are merged with defaults, so you could append to common and exclude as well\n        'files': {\n            'common': [\n                '/etc/',\n                '/usr/local/bin/',\n                '/root/',\n                '/home/',\n                '/var/log/',\n                '/var/spool/cron/',\n            ],\n            'extra': [],\n            'exclude': [\n                'lost+found',\n                '.Trash-1000',\n            ],\n        },\n\n        # MySQL Databases and Tables\n        # Host and port are relative inside the server itself via ssh, not remote\n        'mysql': {\n            'enabled': False,\n            'mysqlCmd': 'mysql',\n            #'mysqlCmd': 'docker exec -i mysql mysql',\n            'dumpCmd': 'mysqldump',\n            'dumpFlags': '--quick --single-transaction --flush-logs',\n            #'dumpCmd': 'docker exec -i mysql mysqldump',\n            'host': '127.0.0.1',\n            'port': 3306,\n            'user': 'root',\n            'password': 'unknown',\n            # All databases minus exclusions\n            'dbs': '*',\n            # A list of databases (all tables)\n            # 'dbs': ['db1', 'db2'],\n            # A list of database with a selection of tables\n            # 'dbs': [\n            #     {'name': 'db1', 'tables': ['table1', 'table2']},\n            #     {'name': 'db2', 'tables': '*'},\n            # ],\n            'excludeDbs': [\n                'information_schema',\n                'performance_schema',\n                'lost+found',\n                '#mysql50#lost+found',\n            ],\n        },\n\n        # Post scripts run on destination after this servers backups, a good place to cleanup files\n        'postScripts': {\n            'dpkg': {'script': 'dpkg -l | gzip', 'output': 'dpkg.gz', 'enabled': False},\n        },\n    },\n}\n\n# Define each server to backup (each will be merged with defaults config)\nservers = {\n    'myserver.example.com': {\n        'enabled': True,\n        'cluster': 'localhost',\n        # Example of local -> local backup\n        'source': {\n            'location': 'local',\n        },\n        'destination': {\n            'location': 'local',\n        },\n        'backup': {\n            'preScripts': {\n                #'gitlab': {'enabled': True}\n            },\n            'mysql': {\n                'enabled': True,\n                'mysqlCmd': 'mysql',\n                #'mysqlCmd': 'docker exec -i mysql mysql',\n                'dumpCmd': 'mysqldump',\n                'dumpFlags': '--quick --single-transaction --flush-logs',\n                #'dumpCmd': 'docker exec -i mysql mysqldump',\n                'host': '127.0.0.1',\n                'port': 3306,\n                'user': 'root',\n                'password': 'password',\n                'dbs': '*',\n            },\n            'postScripts': {\n                # Export dpkg package list of Linux Debian\n                'dpkg': {'enabled': True},\n                # Example of backing up postgres database\n                #'fusionauth': {'script': 'cd /tmp/ && sudo -u postgres pg_dump fusionauth | gzip', 'output': 'fusionauth.sql.gz', 'enabled': True},\n                # Example of capturing script output to snapshot\n                #'test2': {'script': 'ls -Hhal /etc/', 'output': 'etc.txt', 'enabled': True},\n            }\n        },\n    },\n    'myserver2.example.com': ...\n}\n\n# Initialize Backup Class\n# If you are defining servers in a dictionary above\n#backups = Backups(servers=servers)\n\n# If you are defining both servers and defaults above\nbackups = Backups(servers=servers, defaults=defaults)\n\n# If you are using a config.d directory (/etc/serverbackups by default)\n#backups = Backups()\n#backups = Backups(config_path='/etc/alternative/dir')\n\n# Run Backups\ncli.start(backups)\n\n\n# Custom backups\nif not cli.allowcustom(): cli.handle(); exit()\nlog.header(\"Running custom backups from \" + __file__)\n#################################################\n# Add your custom backups code here\n#################################################\nprint('custom stuff here, any python code you want')\n\n\n# Handle CLI requests\ncli.handle()\n```\n\nRunning `backups.py` can be read at the top of this readme.\n\n\n## Directory based /etc/serverbackups/config.d\n\nIf you have a lot of servers, a single backup.py with a massive server dictinary soon becomes a bit\nunwieldy.  As an alternative you can define your `defaults` and `server` configs as separate files in a\ndirectory (normally `/etc/serverbackups`)\n\n\nCreate the directory with a example `defaults.yml` and example `config.d/myserver.example.com` file\n\n```bash\nserverbackups init-directory\n\n# Defaults to /etc/serverbackups.  Optionally, set a different directory\nserverbackups init-directory --path /etc/someother/dir\n```\n\nYou still need a `backups.py` which initiates the backups, see the top of the readme to create one.\n\nNow your `backups.py` will look something like this\n\n```python\n#!/usr/bin/env python\nfrom datetime import date\nfrom mreschke.serverbackups import Backups, cli, log\n\n# Configure logger\nlog.init({\n    'console': {\n        'level': 'INFO',  # DEBUG, INFO, WARNING, ERROR, CRITICAL\n    },\n    'file': {\n        'enabled': True,\n        'file': '/tmp/backups-{}.log'.format(date.today().strftime('%Y-%m-%d')),\n    }\n})\n\n# Initialize Backup Class\nbackups = Backups()\n\n# Or if using an alternate directory\n#backups = Backups(config_path='/etc/alternative/dir')\n\n# Run Backups\ncli.start(backups)\n\n\n# Custom backups\nif not cli.allowcustom(): cli.handle(); exit()\nlog.header(\"Running custom backups from \" + __file__)\n#################################################\n# Add your custom backups code here\n#################################################\nprint('custom stuff here, any python code you want')\n\n\n# Handle CLI requests\ncli.handle()\n```\n\nRunning `backups.py` can be read at the top of this readme.\n\n\n\n## As a python module/package\n\nServerbackups can also be used right inside your own python code as a module.  No need for a `backups.py`\nthough you can still optionally use `/etc/serverbackups` style files if needed.\n\nImagine as part of your own python program, you simply want to backup a file or database.  Using `serverbackups`\nas a module import can help with this.\n\n\nExample of a simple\n```python\nfrom datetime import date\nfrom mreschke.serverbackups import Backups, log\n\n# Optionally configure logger, but this app may have its own log settings\nlog.init({\n    'console': {\n        'level': 'INFO',  # DEBUG, INFO, WARNING, ERROR, CRITICAL\n    },\n    'file': {\n        'enabled': True,\n        'file': '/tmp/backups-{}.log'.format(date.today().strftime('%Y-%m-%d')),\n    }\n})\n\n# In this example I am NOT defining a defaults config because I may just be\n# backing up a single server.  Defaults are used to deduplicate common items\n# in multiple servers.  If you only have one server, just define the entire config\n# in the server itself\n\n# NOTE sensible defaults are still applied to keep even a single server definition\n# less verbose.  Run `serverbackups show-builtin-defaults` to see the defaults that are\n# still being applied here\n\n# Define each server to backup (each will be merged with defaults config)\n# Source and Destination default to 'local'\nservers = {\n    'myserver.example.com': {\n        'destination': {'path': '/mnt/Backups'},\n        'backup': {\n            'files': {\n                'common': [\n                    '/etc/',\n                ],\n                'exclude': [\n                    'lost+found',\n                    '.Trash-1000',\n                ],\n            },\n        },\n    },\n}\n\n# Initialize Backup Class\n# If you are defining servers in a dictionary above, without a separate defaults\nbackups = Backups(servers=servers)\n\n# If you are defining both servers and defaults above\n#backups = Backups(servers=servers, defaults=defaults)\n\n# If you are using a config.d directory (/etc/serverbackups by default)\n#backups = Backups()\n#backups = Backups(config_path='/etc/alternative/dir')\n\n# Run backups\n# Can just run them all\nbackups.run()\n\n# Or can flip through each and add your own logic per server if needed\n#for server in backups.servers:\n    #backups.run(server)\n```\n\n\n# Pruning\n\nRsync hard-link style snapshots are pruned every time the backups run.\n\nThe `prune` server or defaults config determines the prune rates\n```python\n# Keep all daily up to X days back, last snapshot in a week X weeks back, last snapshot in a month X months back...\n'prune': {\n    'keepDaily': 30,\n    'keepWeekly': 24,\n    'keepMonthly': 60,\n    'keepYearly': 10,\n},\n```\n\nLets say we are running the backups **twice** a day.  The above configuration means we keep each daily\nbackup for 30 days (meaning 60 backups since 2 a day).\n\nKeep the LAST/LATEST weekly backup.  This means the last backup on Saturday of each week for 24 weeks.\n\nKeep the LAST/LATEST monthly backup.  This means the last backup on the 31st of each month for 60 months (5 years)\n\nKeep the LAST/LATEST yearly backup.  This all 12/31 backups of each year will be saved.\n\nThe default prune settings may seem like a waste of storage, but read my `Backup Strategy` notes above.  Using\nrsync hard-link style snapshots saves space by using unix hard links to deduplicate files efficiently.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/mreschke/server-backups",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mreschke-serverbackups",
    "package_url": "https://pypi.org/project/mreschke-serverbackups/",
    "platform": "",
    "project_url": "https://pypi.org/project/mreschke-serverbackups/",
    "project_urls": {
      "Documentation": "http://github.com/mreschke/server-backups",
      "Homepage": "http://github.com/mreschke/server-backups",
      "Repository": "http://github.com/mreschke/server-backups"
    },
    "release_url": "https://pypi.org/project/mreschke-serverbackups/1.0.7/",
    "requires_dist": [
      "click (>=7.1.0,<7.2.0)",
      "colored (>=1.4.0,<1.5.0)",
      "prettyprinter (>=0.18.0,<0.19.0)",
      "PyYAML (>=5.0.0,<6.0.0)"
    ],
    "requires_python": ">=3.5,<4.0",
    "summary": "Config driven server backups that feel like a simple backup.py script",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10020622,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7ba55d53b00e6575a182ebcc2b2cecbd83090534a4f0c9500846d72ab9495b8",
          "md5": "287dc89bcd0164e2288b0ad0273e355a",
          "sha256": "9b0ad8c9a9b59238e859d0c579f8d5993793974be8e78d03f7feda505c72f9c8"
        },
        "downloads": -1,
        "filename": "mreschke_serverbackups-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "287dc89bcd0164e2288b0ad0273e355a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 27243,
        "upload_time": "2020-06-04T20:28:08",
        "upload_time_iso_8601": "2020-06-04T20:28:08.325260Z",
        "url": "https://files.pythonhosted.org/packages/b7/ba/55d53b00e6575a182ebcc2b2cecbd83090534a4f0c9500846d72ab9495b8/mreschke_serverbackups-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a968a765beee583569ffe261e84efca2c9cf6afae0cbd89b1a481f76236c8ede",
          "md5": "5e4867a00dd6a235c596094aec9038ad",
          "sha256": "03aa4a7803e3e4550067a1b5a44dea4c64ac1f5d86db10ddcc3fc1e631e9f23c"
        },
        "downloads": -1,
        "filename": "mreschke-serverbackups-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5e4867a00dd6a235c596094aec9038ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 26488,
        "upload_time": "2020-06-04T20:28:11",
        "upload_time_iso_8601": "2020-06-04T20:28:11.007477Z",
        "url": "https://files.pythonhosted.org/packages/a9/68/a765beee583569ffe261e84efca2c9cf6afae0cbd89b1a481f76236c8ede/mreschke-serverbackups-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b18fc483892aac9b6a657212db8646307725d0b4d97ea3ede62ab6851ce6af5",
          "md5": "ada7662c2f78e69cb9c1c125c84cdeb5",
          "sha256": "de371add9a857ea41dfaf03e197f9aee42f33bc989ba40877174fd13a691e9bb"
        },
        "downloads": -1,
        "filename": "mreschke_serverbackups-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ada7662c2f78e69cb9c1c125c84cdeb5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 27179,
        "upload_time": "2020-06-04T20:34:31",
        "upload_time_iso_8601": "2020-06-04T20:34:31.531388Z",
        "url": "https://files.pythonhosted.org/packages/2b/18/fc483892aac9b6a657212db8646307725d0b4d97ea3ede62ab6851ce6af5/mreschke_serverbackups-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38fee06ed48e98f4ba8212ec8b5620aae75559f06894927250551bf33a26bca7",
          "md5": "dbb5d77f9e9dd866df3f78fd8b8d461f",
          "sha256": "4b8a686dbce1acb2c97b6503c11952a275bb97187857c73cc1b3d9fbd03ac9e3"
        },
        "downloads": -1,
        "filename": "mreschke-serverbackups-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dbb5d77f9e9dd866df3f78fd8b8d461f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 26476,
        "upload_time": "2020-06-04T20:34:34",
        "upload_time_iso_8601": "2020-06-04T20:34:34.572407Z",
        "url": "https://files.pythonhosted.org/packages/38/fe/e06ed48e98f4ba8212ec8b5620aae75559f06894927250551bf33a26bca7/mreschke-serverbackups-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bdcdabdc7c2821b59ab3cc881c08f38d070a48f93e0645ec64bbc2dcb244227",
          "md5": "55731f0a8534010b021180bf6679c46b",
          "sha256": "a2abd68d87576054f7e20e56cb9b012b62838a9024ed56d005cfec3b7ec0e5c3"
        },
        "downloads": -1,
        "filename": "mreschke_serverbackups-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "55731f0a8534010b021180bf6679c46b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 27518,
        "upload_time": "2020-06-05T01:47:53",
        "upload_time_iso_8601": "2020-06-05T01:47:53.043846Z",
        "url": "https://files.pythonhosted.org/packages/1b/dc/dabdc7c2821b59ab3cc881c08f38d070a48f93e0645ec64bbc2dcb244227/mreschke_serverbackups-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "569a503d764c0d2c5c5bc91f4804fc2d705a09fbe12a6e3bbdbd71adbb2ec3b9",
          "md5": "123a2a03af5611539a5ba90379cac833",
          "sha256": "43baf48ade24a9d923a25cc77287850ddf3c91eeeafca265e91e5a1d0c23caf1"
        },
        "downloads": -1,
        "filename": "mreschke-serverbackups-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "123a2a03af5611539a5ba90379cac833",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 27082,
        "upload_time": "2020-06-05T01:47:54",
        "upload_time_iso_8601": "2020-06-05T01:47:54.780114Z",
        "url": "https://files.pythonhosted.org/packages/56/9a/503d764c0d2c5c5bc91f4804fc2d705a09fbe12a6e3bbdbd71adbb2ec3b9/mreschke-serverbackups-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1d8bf5402190c8baa55cef054f8ec0fef22901f338a5095ef7411d1a5b5f0ff",
          "md5": "a7536de0a4de6e87bc1c726959256384",
          "sha256": "cea463a3abc47d328a786eb5defa6cf98d392b7604075f639e6ba63ff267515d"
        },
        "downloads": -1,
        "filename": "mreschke_serverbackups-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7536de0a4de6e87bc1c726959256384",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 27816,
        "upload_time": "2020-11-15T21:59:49",
        "upload_time_iso_8601": "2020-11-15T21:59:49.698947Z",
        "url": "https://files.pythonhosted.org/packages/d1/d8/bf5402190c8baa55cef054f8ec0fef22901f338a5095ef7411d1a5b5f0ff/mreschke_serverbackups-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8749436f7a894fd0d4465a1c4819d870bdc8d1f471cd1e5431f3e9bdc062e13",
          "md5": "1283a0e3be96aa6f9f49f4b45651a662",
          "sha256": "99da56ac6b631e519bbc2a521f9be45b02ecc26551dd9b552ee89435cb7d31c5"
        },
        "downloads": -1,
        "filename": "mreschke-serverbackups-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1283a0e3be96aa6f9f49f4b45651a662",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 27389,
        "upload_time": "2020-11-15T21:59:52",
        "upload_time_iso_8601": "2020-11-15T21:59:52.290811Z",
        "url": "https://files.pythonhosted.org/packages/b8/74/9436f7a894fd0d4465a1c4819d870bdc8d1f471cd1e5431f3e9bdc062e13/mreschke-serverbackups-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7508492790c68df47084a48877d78fb44267d4a1c6567e19ce212ee58ac564af",
          "md5": "b576de479a3c47f7f5c6ff9220236d8a",
          "sha256": "2c754f269f85af149161d85e168a46933922e858108aa3628672f146b552edd0"
        },
        "downloads": -1,
        "filename": "mreschke_serverbackups-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b576de479a3c47f7f5c6ff9220236d8a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5,<4.0",
        "size": 34347,
        "upload_time": "2021-03-25T18:10:43",
        "upload_time_iso_8601": "2021-03-25T18:10:43.306835Z",
        "url": "https://files.pythonhosted.org/packages/75/08/492790c68df47084a48877d78fb44267d4a1c6567e19ce212ee58ac564af/mreschke_serverbackups-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17e0028f7a33de6daa056dc287d0bb2ca779bfd9999e7aaf6a4cdf4998b5577a",
          "md5": "33799f2eb7426da6d0d0acb7f7b709c4",
          "sha256": "ae7868cf04afd75d6a32086e262a4488138b6180a1d50651085134abc85cf78a"
        },
        "downloads": -1,
        "filename": "mreschke-serverbackups-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "33799f2eb7426da6d0d0acb7f7b709c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5,<4.0",
        "size": 29017,
        "upload_time": "2021-03-25T18:10:41",
        "upload_time_iso_8601": "2021-03-25T18:10:41.168044Z",
        "url": "https://files.pythonhosted.org/packages/17/e0/028f7a33de6daa056dc287d0bb2ca779bfd9999e7aaf6a4cdf4998b5577a/mreschke-serverbackups-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68d82eda34111dc58000f851b9cb0b993b87abc78c5a65ac1377de45a6ef5893",
          "md5": "a353ce9e2cd8a94f1402b2c2f4433ae0",
          "sha256": "dc45930d56a7bf9a6263ed493de7dfc89c5cd00a193bdb4c0b7ac9a5efe199c3"
        },
        "downloads": -1,
        "filename": "mreschke_serverbackups-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a353ce9e2cd8a94f1402b2c2f4433ae0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5,<4.0",
        "size": 34696,
        "upload_time": "2021-04-06T21:52:05",
        "upload_time_iso_8601": "2021-04-06T21:52:05.866980Z",
        "url": "https://files.pythonhosted.org/packages/68/d8/2eda34111dc58000f851b9cb0b993b87abc78c5a65ac1377de45a6ef5893/mreschke_serverbackups-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "818579f5d7f97726dd371dce2f32f0e06be3bf064f0536b0a54237400215ac00",
          "md5": "a1f12a898d589d2235b6f0188b067306",
          "sha256": "3c581243d5f81b0cff97a9e45ff5f22a94e21747bd86839b036a30d2dc77267a"
        },
        "downloads": -1,
        "filename": "mreschke-serverbackups-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a1f12a898d589d2235b6f0188b067306",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5,<4.0",
        "size": 29435,
        "upload_time": "2021-04-06T21:52:03",
        "upload_time_iso_8601": "2021-04-06T21:52:03.964484Z",
        "url": "https://files.pythonhosted.org/packages/81/85/79f5d7f97726dd371dce2f32f0e06be3bf064f0536b0a54237400215ac00/mreschke-serverbackups-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "994ef781070d75a0a0dd4d0ecb040ce6a8e706d5c37cfc2b6586ae4502ae4348",
          "md5": "2b3a530838cbd02ab523029aad85cdec",
          "sha256": "53c9d7543f240bb58ac27a4d931fdd5f056e01ff67bfc4095989ae412af35b9f"
        },
        "downloads": -1,
        "filename": "mreschke_serverbackups-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b3a530838cbd02ab523029aad85cdec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5,<4.0",
        "size": 34886,
        "upload_time": "2021-04-09T03:46:35",
        "upload_time_iso_8601": "2021-04-09T03:46:35.561147Z",
        "url": "https://files.pythonhosted.org/packages/99/4e/f781070d75a0a0dd4d0ecb040ce6a8e706d5c37cfc2b6586ae4502ae4348/mreschke_serverbackups-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fa73b48051e996ad89c87c56b6b809f1997b159bcd481e403fe792ac5d0273c",
          "md5": "59cb61ce4f76c083dc178fa06c34eb4a",
          "sha256": "8818881e894fb2858a162525bc5f0ded0a335b3f54a85884195fbd86800c1db7"
        },
        "downloads": -1,
        "filename": "mreschke-serverbackups-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "59cb61ce4f76c083dc178fa06c34eb4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5,<4.0",
        "size": 29617,
        "upload_time": "2021-04-09T03:46:33",
        "upload_time_iso_8601": "2021-04-09T03:46:33.476967Z",
        "url": "https://files.pythonhosted.org/packages/0f/a7/3b48051e996ad89c87c56b6b809f1997b159bcd481e403fe792ac5d0273c/mreschke-serverbackups-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18ff84a616e6164cf22fde5f2e1b93dbe6f6007c85fc8f98ecf8ab39c5e0eee3",
          "md5": "cfdb43fbda9bc03cfdb80ec298f187c7",
          "sha256": "a15d70f83153317c5b6b097b388cf1e250490b07f6358ec7ea8bfa7cd2cb2842"
        },
        "downloads": -1,
        "filename": "mreschke_serverbackups-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cfdb43fbda9bc03cfdb80ec298f187c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5,<4.0",
        "size": 34886,
        "upload_time": "2021-04-09T18:31:13",
        "upload_time_iso_8601": "2021-04-09T18:31:13.033502Z",
        "url": "https://files.pythonhosted.org/packages/18/ff/84a616e6164cf22fde5f2e1b93dbe6f6007c85fc8f98ecf8ab39c5e0eee3/mreschke_serverbackups-1.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "472cc80c4279496b9e4cac6315b336bd2d87fbe943878f28c5df89a5b492e2ee",
          "md5": "9cd95c083408b0638d14ca00b3ad60a3",
          "sha256": "102219efb49879aee97d5b5e818f1a4f42654e0de3595a501fa53ce4bd906aa2"
        },
        "downloads": -1,
        "filename": "mreschke-serverbackups-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "9cd95c083408b0638d14ca00b3ad60a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5,<4.0",
        "size": 29626,
        "upload_time": "2021-04-09T18:31:11",
        "upload_time_iso_8601": "2021-04-09T18:31:11.308724Z",
        "url": "https://files.pythonhosted.org/packages/47/2c/c80c4279496b9e4cac6315b336bd2d87fbe943878f28c5df89a5b492e2ee/mreschke-serverbackups-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18ff84a616e6164cf22fde5f2e1b93dbe6f6007c85fc8f98ecf8ab39c5e0eee3",
        "md5": "cfdb43fbda9bc03cfdb80ec298f187c7",
        "sha256": "a15d70f83153317c5b6b097b388cf1e250490b07f6358ec7ea8bfa7cd2cb2842"
      },
      "downloads": -1,
      "filename": "mreschke_serverbackups-1.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cfdb43fbda9bc03cfdb80ec298f187c7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5,<4.0",
      "size": 34886,
      "upload_time": "2021-04-09T18:31:13",
      "upload_time_iso_8601": "2021-04-09T18:31:13.033502Z",
      "url": "https://files.pythonhosted.org/packages/18/ff/84a616e6164cf22fde5f2e1b93dbe6f6007c85fc8f98ecf8ab39c5e0eee3/mreschke_serverbackups-1.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "472cc80c4279496b9e4cac6315b336bd2d87fbe943878f28c5df89a5b492e2ee",
        "md5": "9cd95c083408b0638d14ca00b3ad60a3",
        "sha256": "102219efb49879aee97d5b5e818f1a4f42654e0de3595a501fa53ce4bd906aa2"
      },
      "downloads": -1,
      "filename": "mreschke-serverbackups-1.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "9cd95c083408b0638d14ca00b3ad60a3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5,<4.0",
      "size": 29626,
      "upload_time": "2021-04-09T18:31:11",
      "upload_time_iso_8601": "2021-04-09T18:31:11.308724Z",
      "url": "https://files.pythonhosted.org/packages/47/2c/c80c4279496b9e4cac6315b336bd2d87fbe943878f28c5df89a5b492e2ee/mreschke-serverbackups-1.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}