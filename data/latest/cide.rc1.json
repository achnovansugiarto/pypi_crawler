{
  "info": {
    "author": "B.H.J. Thate",
    "author_email": "operbot100@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: System Administrators",
      "License :: Public Domain",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Communications :: Chat :: Internet Relay Chat",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "README\n######\n\n\n**NAME**\n\n\n``CIDE`` - mortality model of the netherlands during the 2020 genocide.\n\n\n**SYNOPSIS**\n\n::\n\n cide [<cmd>|-c|-d] [key=value] [key==value]\n\n\n**DESCRIPTION**\n\n\n``cide`` is a mortality model (deaths by disease) of the netherlands during\nthe genocide that took place in 2020. It has a IRC bot that can display\nthe cause of disease besides the every seconds/minutes/hours between each\ndeaths there are.\n\n``cide`` has some other functionality, mostly feeding RSS feeds into a irc\nchannel. It can do some logging of txt and take note of things todo.\n\n\n**INSTALL**\n\n\n::\n\n $ sudo pip3 install cide\n\n\n**CONFIGURATION**\n\n\nconfiguration is done by calling the ``cfg`` command of ``cidec``\n\n\nIRC\n\n::\n\n $ cidec cfg server=<server> channel=<channel> nick=<nick>\n\n (*) default channel/server is #cide on localhost\n\n\nSASL\n\n::\n\n $ cidec pwd <nickservnick> <nickservpass>\n $ cidec cfg password=<outputfrompwd>\n\n\nUSERS\n\nas default the user's userhost is not checked when a user types a command in a\nchannel. To enable userhost checking enable users with the ``cfg`` command::\n\n $ cidec cfg users=True\n\n\nTo add a user to the bot use the met command::\n\n $ cidec met <userhost>\n\nto delete a user use the del command with a substring of the userhost::\n\n $ cidec del <substring>\n\n\nRSS\n\n::\n\n $ cidec rss <url>\n\n\n\n**RUNNING**\n\n\nthis part shows how to run ``cidec``.\n\n\n**cli**\n\n\nwithout any arguments ``cidec`` doesn't respond, add arguments to have\n``cidec`` execute a command::\n\n\n $ cidec\n $\n\n\nthe ``cmd`` command shows you a list of available commands::\n\n\n $ cidec cmd\n cfg,cmd,dlt,dpl,flt,fnd,ftc,met,mre,nme,pwd,rem,rss,thr,upt\n\n\n**console**\n\n\nuse the ``cidec`` program to start the bot as a console::\n\n $ cide\n OPB started at Fri Jan 6 01:49:58 2023\n > cmd\n cfg,cmd,dlt,dpl,flt,ftc,krn,log,met,mre,nme,pwd,rem,rss,thr,upt\n >\n\nrunning the bot in the background is done by starting ``cided``::\n\n $ cided\n $\n\n\n**24/7**\n\n\n24/7 and how todo that is still under discussion\n\n\n**COMMANDS**\n\n\nhere is a short description of the commands::\n\n cfg - show the irc configuration, also edits the config\n cmd - show all commands\n dlt - remove a user\n dne - flag todo as done\n dpl - set display items for a rss feed\n flt - show a list of bot registered to the bus\n fnd - allow you to display objects on the datastore, read-only json files on disk \n ftc - run a rss feed fetching batch\n log - log some text\n met - add a users with there irc userhost\n mre - displays cached output, channel wise.\n nme - set name of a rss feed\n pwd - combine a nickserv name/password into a sasl password\n rem - remove a rss feed by matching is to its url\n rss - add a feed to fetch, fetcher runs every 5 minutes\n thr - show the running threads\n tdo - adds a todo item, no options returns list of todo's\n upt - show uptime\n\n\n**PROGRAMMING**\n\n\nThe ``cide`` package provides an Object class, that mimics a dict while using\nattribute access and provides a save/load to/from json files on disk.\nObjects can be searched with database functions and uses read-only files\nto improve persistence and a type in filename for reconstruction. Methods are\nfactored out into functions to have a clean namespace to read JSON data into.\n\nbasic usage is this::\n\n >>> from cide.objects import Object\n >>> o = Object()\n >>> o.key = \"value\"\n >>> o.key\n >>> 'value'\n\nObjects try to mimic a dictionary while trying to be an object with normal\nattribute access as well. hidden methods are provided, the methods are\nfactored out into functions like get, items, keys, register, set, update\nand values.\n\ngreat for giving objects peristence by having their state stored in files::\n\n >>> from cide.objects import Object\n >>> o = Object()\n >>> from cide.storage import Storage\n >>> Storage.save(o)\n cide.objects.Object/89efa5fd7ad9497b96fdcb5f01477320/2022-11-21/17:20:12.221192\n\n\n**AUTHOR**\n\n\nB.H.J. Thate - operbot100@gmail.com\n\n\n**COPYRIGHT**\n\n\n``cide`` is placed in the Public Domain.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/operbot/operbot",
    "keywords": "",
    "license": "Public Domain",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cide",
    "package_url": "https://pypi.org/project/cide/",
    "platform": null,
    "project_url": "https://pypi.org/project/cide/",
    "project_urls": {
      "Homepage": "http://github.com/operbot/operbot"
    },
    "release_url": "https://pypi.org/project/cide/1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "object programming bot",
    "version": "1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17157773,
  "releases": {
    "1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a01cbba30008537b2634b5a7f170bf8a62e8efda3dad18f2ba5aad6c8b1aaaa4",
          "md5": "ac34abe3789b398b99bcb9e0d32f3a8a",
          "sha256": "c3d3abaa1c04db17bdaaed262aba636b20519459d86c7268907c8a6c06d453a9"
        },
        "downloads": -1,
        "filename": "cide-1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac34abe3789b398b99bcb9e0d32f3a8a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28484,
        "upload_time": "2023-03-04T17:19:19",
        "upload_time_iso_8601": "2023-03-04T17:19:19.310944Z",
        "url": "https://files.pythonhosted.org/packages/a0/1c/bba30008537b2634b5a7f170bf8a62e8efda3dad18f2ba5aad6c8b1aaaa4/cide-1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9664b1c795253b9495f24ca3d9da6105e097f5c5b9e1e5b1eefeb5ab9b9fc5d1",
          "md5": "4034abb591288ff2fd33d8da7e9baedb",
          "sha256": "e3ee99393ced147b69585b84cb570b967f59174a730dcf71923e31fb80be689d"
        },
        "downloads": -1,
        "filename": "cide-1.tar.gz",
        "has_sig": false,
        "md5_digest": "4034abb591288ff2fd33d8da7e9baedb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24249,
        "upload_time": "2023-03-04T17:19:21",
        "upload_time_iso_8601": "2023-03-04T17:19:21.601866Z",
        "url": "https://files.pythonhosted.org/packages/96/64/b1c795253b9495f24ca3d9da6105e097f5c5b9e1e5b1eefeb5ab9b9fc5d1/cide-1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a01cbba30008537b2634b5a7f170bf8a62e8efda3dad18f2ba5aad6c8b1aaaa4",
        "md5": "ac34abe3789b398b99bcb9e0d32f3a8a",
        "sha256": "c3d3abaa1c04db17bdaaed262aba636b20519459d86c7268907c8a6c06d453a9"
      },
      "downloads": -1,
      "filename": "cide-1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ac34abe3789b398b99bcb9e0d32f3a8a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28484,
      "upload_time": "2023-03-04T17:19:19",
      "upload_time_iso_8601": "2023-03-04T17:19:19.310944Z",
      "url": "https://files.pythonhosted.org/packages/a0/1c/bba30008537b2634b5a7f170bf8a62e8efda3dad18f2ba5aad6c8b1aaaa4/cide-1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9664b1c795253b9495f24ca3d9da6105e097f5c5b9e1e5b1eefeb5ab9b9fc5d1",
        "md5": "4034abb591288ff2fd33d8da7e9baedb",
        "sha256": "e3ee99393ced147b69585b84cb570b967f59174a730dcf71923e31fb80be689d"
      },
      "downloads": -1,
      "filename": "cide-1.tar.gz",
      "has_sig": false,
      "md5_digest": "4034abb591288ff2fd33d8da7e9baedb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24249,
      "upload_time": "2023-03-04T17:19:21",
      "upload_time_iso_8601": "2023-03-04T17:19:21.601866Z",
      "url": "https://files.pythonhosted.org/packages/96/64/b1c795253b9495f24ca3d9da6105e097f5c5b9e1e5b1eefeb5ab9b9fc5d1/cide-1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}