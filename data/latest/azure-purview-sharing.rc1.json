{
  "info": {
    "author": "Microsoft Corporation",
    "author_email": "azpysdkhelp@microsoft.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Azure Purview Sharing client library for Python\n\nMicrosoft Purview Share is a fully managed cloud service.\n\n**Please rely heavily on the [service's documentation][sharing_product_documentation] and our [protocol client docs][protocol_client_quickstart] to use this library**\n\n[Source code][source_code] | [Package (PyPI)][client_pypi_package] | [Product documentation][sharing_product_documentation]\n\n## Getting started\n\n### Install the package\n\nInstall the Azure Purview Sharing client library for Python with [pip][pip]:\n\n```bash\npip install azure-purview-sharing\n```\n\n### Prerequisites\n\n- You must have an [Azure subscription][azure_subscription] and a [Purview resource][purview_resource] to use this package.\n- Python 3.6 or later is required to use this package.\n\n### Authenticate the client\n\n#### Using Azure Active Directory\n\nThis document demonstrates using [DefaultAzureCredential][default_cred_ref] to authenticate via Azure Active Directory. However, any of the credentials offered by the [azure_identity][azure_identity] will be accepted.  See the [azure_identity][azure_identity] documentation for more information about other credentials.\n\nOnce you have chosen and configured your credential, you can create instances of the `PurviewSharingClient`.\n\n```python\nfrom azure.purview.sharing import PurviewSharingClient\nfrom azure.identity import DefaultAzureCredential\n\ncredential = DefaultAzureCredential()\nclient = PurviewSharingClient(endpoint=\"https://<my-account-name>.purview.azure.com\", credential=credential)\n```\n\n## Key concepts\n\n## Examples\n\nThe following section shows you how to initialize and authenticate your client and share data.\n\n### Create sent share\n\n```python Snippet:create_a_sent_share\nimport os, uuid, json\n\nfrom azure.purview.sharing import PurviewSharingClient\nfrom azure.identity import DefaultAzureCredential\n\nendpoint = os.environ[\"ENDPOINT\"]\ncredential = DefaultAzureCredential()\n\nclient = PurviewSharingClient(endpoint=endpoint, credential=credential)\n\nsent_share_id = uuid.uuid4()\n\nartifact = {\n    \"properties\": {\n        \"paths\": [\n            {\n                \"containerName\": \"container-name\",\n                \"receiverPath\": \"shared-file-name.txt\",\n                \"senderPath\": \"original/file-name.txt\"\n            }\n        ]\n    },\n    \"storeKind\": \"AdlsGen2Account\",\n    \"storeReference\": {\n        \"referenceName\": \"/subscriptions/{subscription-id}/resourceGroups/provider-storage-rg/providers/Microsoft.Storage/storageAccounts/providerstorage\",\n        \"type\": \"ArmResourceReference\"\n    }\n}\n\nsent_share = {\n    \"properties\": {\n        \"artifact\": artifact,\n        \"displayName\": \"sample=share\",\n        \"description\": \"A sample share\"\n    },\n    \"shareKind\": \"InPlace\"\n}\n\nrequest = client.sent_shares.begin_create_or_replace(\n    str(sent_share_id),\n    content_type=\"application/json\",\n    content=json.dumps(sent_share))\n\nresponse = request.result()\nprint(response)\n```\n\n### Get sent share\n\n```python Snippet:get_a_sent_share\nimport os, uuid\n\nfrom azure.purview.sharing import PurviewSharingClient\nfrom azure.identity import DefaultAzureCredential\n\nendpoint = os.environ[\"ENDPOINT\"]\ncredential = DefaultAzureCredential()\nsent_share_id = uuid.uuid4()\n\nclient = PurviewSharingClient(endpoint=endpoint, credential=credential)\n\nretrieved_sent_share = client.sent_shares.get(sent_share_id=str(sent_share_id))\nprint(retrieved_sent_share)\n```\n\n### List sent shares\n\n```python Snippet:get_all_sent_shares\nimport os\n\nfrom azure.purview.sharing import PurviewSharingClient\nfrom azure.identity import DefaultAzureCredential\n\nendpoint = os.environ[\"ENDPOINT\"]\ncredential = DefaultAzureCredential()\n\nclient = PurviewSharingClient(endpoint=endpoint, credential=credential)\n\nprovider_storage_account_resource_id = \"/subscriptions/{subscription-id}/resourceGroups/provider-storage-rg/providers/Microsoft.Storage/storageAccounts/providerstorage\"\n\nlist_request = client.sent_shares.list(\n    reference_name=provider_storage_account_resource_id,\n    orderby=\"properties/createdAt desc\")\n\nlist_response = list_request.result()\nprint(list_response)\n```\n\n### Create sent share invitation\n\n```python Snippet:send_a_user_invitation\nimport os\n\nfrom azure.purview.sharing import PurviewSharingClient\nfrom azure.identity import DefaultAzureCredential\nfrom datetime import date\n\nendpoint = os.environ[\"ENDPOINT\"]\ncredential = DefaultAzureCredential()\n\nclient = PurviewSharingClient(endpoint=endpoint, credential=credential)\n\nsent_share_id = uuid.uuid4()\nsent_share_invitation_id = uuid.uuid4()\n\nconsumerEmail = \"consumer@contoso.com\"\ntoday = date.today()\ninvitation = {\n    \"invitationKind\": \"User\",\n    \"properties\": {\n        \"targetEmail\": consumerEmail,\n        \"notify\": \"true\",\n        \"expirationDate\": date(today.year+1,today.month,today.day).strftime(\"%Y-%m-%d\") + \" 00:00:00\"\n    }\n}\n\ninvitation_request = client.sent_shares.create_invitation(\n    sent_share_id=str(sent_share_id),\n    sent_share_invitation_id=str(sent_share_invitation_id),\n    sent_share_invitation=json.dumps(invitation))\n\ninvitation_response = invitation_request.result()\ncreated_invitation = json.loads(invitation_response)\nprint(created_invitation)\n```\n\n### List sent share invitations\n\n```python Snippet:view_sent_invitations\nimport os, uuid, json\n\nfrom azure.purview.sharing import PurviewSharingClient\nfrom azure.identity import DefaultAzureCredential\n\nendpoint = os.environ[\"ENDPOINT\"]\ncredential = DefaultAzureCredential()\n\nclient = PurviewSharingClient(endpoint=endpoint, credential=credential)\n\nsent_share_id = uuid.uuid4()\n\nlist_request = client.sent_shares.list_invitations(sent_share_id=str(sent_share_id))\nlist_response = list_request.result()\nresult_list = json.loads(list_response)\nprint(result_list)\n```\n\n### List detached received shares\n\n```python Snippet:get_all_detached_received_shares\nimport os\n\nfrom azure.purview.sharing import PurviewSharingClient\nfrom azure.identity import DefaultAzureCredential\n\nendpoint = os.environ[\"ENDPOINT\"]\ncredential = DefaultAzureCredential()\n\nclient = PurviewSharingClient(endpoint=endpoint,credential=credential)\n\nlist_detached_response = client.received_shares.list_detached(orderby=\"properties/createdAt desc\")\nprint(list_detached_response)\n```\n\n### Create a received share\n\n```python Snippet:attach_a_received_share\nimport os, json\n\nfrom azure.purview.sharing import PurviewSharingClient\nfrom azure.identity import DefaultAzureCredential\n\nendpoint = os.environ[\"ENDPOINT\"]\ncredential = DefaultAzureCredential()\n\nclient = PurviewSharingClient(endpoint=endpoint,credential=credential)\n\nconsumer_storage_account_resource_id = \"/subscriptions/{subscription-id}/resourceGroups/consumer-storage-rg/providers/Microsoft.Storage/storageAccounts/consumerstorage\"\n\nlist_detached_response = client.received_shares.list_detached(orderby=\"properties/createdAt desc\")\nlist_detached = json.loads(list_detached_response)\nreceived_share = list_detached[0]\n\nstore_reference = {\n    \"referenceName\": consumer_storage_account_resource_id,\n    \"type\": \"ArmResourceReference\"\n}\n\nsink = {\n    \"properties\": {\n        \"containerName\": \"container-test\",\n        \"folder\": \"folder-test\",\n        \"mountPath\": \"mountPath-test\",\n    },\n    \"storeKind\": \"AdlsGen2Account\",\n    \"storeReference\": store_reference\n}\n\nreceived_share['properties']['sink'] = sink\n\nupdate_request = client.received_shares.begin_create_or_replace(\n    received_share['id'],\n    content_type=\"application/json\",\n    content=json.dumps(received_share))\n\nupdate_response = update_request.result()\nprint(update_response)\n```\n\n### Get received share\n\n```python Snippet:get_a_received_share\nimport os\n\nfrom azure.purview.sharing import PurviewSharingClient\nfrom azure.identity import DefaultAzureCredential\n\nendpoint = os.environ[\"ENDPOINT\"]\ncredential = DefaultAzureCredential()\n\nclient = PurviewSharingClient(endpoint=endpoint,credential=credential)\n\nlist_detached_response = client.received_shares.list_detached(orderby=\"properties/createdAt desc\")\nlist_detached = json.loads(list_detached_response)\nreceived_share = list_detached[0]\n\nget_share_response = client.received_shares.get(received_share_id=received_share['id'])\nretrieved_share = json.loads(get_share_response)\nprint(retrieved_share)\n```\n\n### List attached received shares\n\n```python Snippet:list_attached_received_shares\nimport os\n\nfrom azure.purview.sharing import PurviewSharingClient\nfrom azure.identity import DefaultAzureCredential\n\nendpoint = os.environ[\"ENDPOINT\"]\ncredential = DefaultAzureCredential()\n\nclient = PurviewSharingClient(endpoint=endpoint,credential=credential)\n\nconsumer_storage_account_resource_id = \"/subscriptions/{subscription-id}/resourceGroups/consumer-storage-rg/providers/Microsoft.Storage/storageAccounts/consumerstorage\"\n\nlist_attached_response = client.received_shares.list_attached(\n    reference_name=consumer_storage_account_resource_id,\n    orderby=\"properties/createdAt desc\")\nprint(list_attached_response)\n```\n\n### Delete received share\n\n```python Snippet:delete_a_received_share\nimport os\n\nfrom azure.purview.sharing import PurviewSharingClient\nfrom azure.identity import DefaultAzureCredential\n\nendpoint = os.environ[\"ENDPOINT\"]\ncredential = DefaultAzureCredential()\n\nclient = PurviewSharingClient(endpoint=endpoint,credential=credential)\n\ndelete_received_share_request = client.received_shares.begin_delete(received_share_id=received_share['id'])\ndelete_received_share_response = delete_received_share_request.result()\nprint(delete_received_share_response)\n```\n\n### Delete sent share\n\n```python Snippet:delete_a_sent_share\nimport os\n\nfrom azure.purview.sharing import PurviewSharingClient\nfrom azure.identity import DefaultAzureCredential\n\nendpoint = os.environ[\"ENDPOINT\"]\ncredential = DefaultAzureCredential()\n\nclient = PurviewSharingClient(endpoint=endpoint,credential=credential)\n\nsent_share_id=\"885E60CB-2001-4192-B95D-B98CE316C783\"\n\ndelete_request = client.sent_shares.begin_delete(sent_share_id=str(sent_share_id))\ndelete_response = delete_request.result()\nprint(delete_response)\n```\n\n## Troubleshooting\n\n### General\n\nThe Purview Catalog client will raise exceptions defined in [Azure Core][azure_core] if you call `.raise_for_status()` on your responses.\n\n### Logging\n\nThis library uses the standard\n[logging][python_logging] library for logging.\nBasic information about HTTP sessions (URLs, headers, etc.) is logged at INFO\nlevel.\n\nDetailed DEBUG level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the `logging_enable` keyword argument:\n\n```python\nimport sys\nimport logging\nfrom azure.identity import DefaultAzureCredential\nfrom azure.purview.sharing import PurviewSharingClient\n\n# Create a logger for the 'azure' SDK\nlogger = logging.getLogger('azure')\nlogger.setLevel(logging.DEBUG)\n\n# Configure a console output\nhandler = logging.StreamHandler(stream=sys.stdout)\nlogger.addHandler(handler)\n\nendpoint = \"https://<my-account-name>.share.purview.azure.com\"\ncredential = DefaultAzureCredential()\n\n# This client will log detailed information about its HTTP sessions, at DEBUG level\nclient = PurviewSharingClient(endpoint=endpoint, credential=credential, logging_enable=True)\n```\n\nSimilarly, `logging_enable` can enable detailed logging for a single `send_request` call,\neven when it isn't enabled for the client:\n\n```python\nresult = client.types.get_all_type_definitions(logging_enable=True)\n```\n\n## Next steps\n\nFor more generic samples, see our [samples][samples].\n\n## Contributing\n\nThis project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit [cla.microsoft.com][cla].\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct][code_of_conduct]. For more information see the [Code of Conduct FAQ][coc_faq] or contact [opencode@microsoft.com][coc_contact] with any additional questions or comments.\n\n<!-- LINKS -->\n\n[source_code]: https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/purview/azure-purview-sharing/azure/purview/sharing\n[client_pypi_package]: https://aka.ms/azsdk/python/purviewsharing/pypi\n[sharing_ref_docs]: https://aka.ms/azsdk/python/purviewcatalog/ref-docs\n[sharing_product_documentation]: https://azure.microsoft.com/services/purview/\n[azure_subscription]: https://azure.microsoft.com/free/\n[purview_resource]: https://docs.microsoft.com/azure/purview\n[pip]: https://pypi.org/project/pip/\n[authenticate_with_token]: https://docs.microsoft.com/azure/cognitive-services/authentication?tabs=powershell#authenticate-with-an-authentication-token\n[azure_identity_credentials]: https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/identity/azure-identity#credentials\n[azure_identity_pip]: https://pypi.org/project/azure-identity/\n[default_azure_credential]: https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/identity/azure-identity#defaultazurecredential\n[request_builders_and_client]: https://aka.ms/azsdk/python/protocol/quickstart\n[enable_aad]: https://docs.microsoft.com/azure/purview/\n[azure_core]: https://github.com/Azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/README.md\n[python_logging]: https://docs.python.org/3.5/library/logging.html\n[cla]: https://cla.microsoft.com\n[code_of_conduct]: https://opensource.microsoft.com/codeofconduct/\n[coc_faq]: https://opensource.microsoft.com/codeofconduct/faq/\n[coc_contact]: mailto:opencode@microsoft.com\n[samples]: https://github.com/yamanwahsheh/azure-sdk-for-python/tree/yaman/share-v2-python-tests-and-samples/sdk/purview/azure-purview-sharing/samples\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Azure/azure-sdk-for-python/tree/main/sdk",
    "keywords": "azure,azure sdk",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "azure-purview-sharing",
    "package_url": "https://pypi.org/project/azure-purview-sharing/",
    "platform": null,
    "project_url": "https://pypi.org/project/azure-purview-sharing/",
    "project_urls": {
      "Homepage": "https://github.com/Azure/azure-sdk-for-python/tree/main/sdk"
    },
    "release_url": "https://pypi.org/project/azure-purview-sharing/1.0.0b1/",
    "requires_dist": [
      "isodate (<1.0.0,>=0.6.1)",
      "azure-core (<2.0.0,>=1.24.0)",
      "typing-extensions (>=4.3.0) ; python_version < \"3.8.0\""
    ],
    "requires_python": ">=3.7",
    "summary": "Microsoft Azure Purview Sharing Client Library for Python",
    "version": "1.0.0b1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17504876,
  "releases": {
    "1.0.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f88018189f026deaf54a148a350e6274a3574f89b49e121fdbec320983aafcb",
          "md5": "8e059aebf1e4baa70aa4c5c7f2a0f821",
          "sha256": "67a70419c8abbbd7a36c040570eb144d75593bd75a07dc5de4af15e504e414fa"
        },
        "downloads": -1,
        "filename": "azure_purview_sharing-1.0.0b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e059aebf1e4baa70aa4c5c7f2a0f821",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 64166,
        "upload_time": "2023-03-30T04:25:59",
        "upload_time_iso_8601": "2023-03-30T04:25:59.613138Z",
        "url": "https://files.pythonhosted.org/packages/1f/88/018189f026deaf54a148a350e6274a3574f89b49e121fdbec320983aafcb/azure_purview_sharing-1.0.0b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9af981136e4e032d6eb2a42d88a1bae003e4cbd102fd73a8c20d4a3cba22aa8a",
          "md5": "b4a4bf34846fca1c8a0848ea2596959e",
          "sha256": "de2797ae31844639e9f667afc2478dbba13601f7e00cf7962fb081bbb922dff2"
        },
        "downloads": -1,
        "filename": "azure-purview-sharing-1.0.0b1.zip",
        "has_sig": false,
        "md5_digest": "b4a4bf34846fca1c8a0848ea2596959e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 87383,
        "upload_time": "2023-03-30T04:26:02",
        "upload_time_iso_8601": "2023-03-30T04:26:02.462942Z",
        "url": "https://files.pythonhosted.org/packages/9a/f9/81136e4e032d6eb2a42d88a1bae003e4cbd102fd73a8c20d4a3cba22aa8a/azure-purview-sharing-1.0.0b1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f88018189f026deaf54a148a350e6274a3574f89b49e121fdbec320983aafcb",
        "md5": "8e059aebf1e4baa70aa4c5c7f2a0f821",
        "sha256": "67a70419c8abbbd7a36c040570eb144d75593bd75a07dc5de4af15e504e414fa"
      },
      "downloads": -1,
      "filename": "azure_purview_sharing-1.0.0b1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8e059aebf1e4baa70aa4c5c7f2a0f821",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 64166,
      "upload_time": "2023-03-30T04:25:59",
      "upload_time_iso_8601": "2023-03-30T04:25:59.613138Z",
      "url": "https://files.pythonhosted.org/packages/1f/88/018189f026deaf54a148a350e6274a3574f89b49e121fdbec320983aafcb/azure_purview_sharing-1.0.0b1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9af981136e4e032d6eb2a42d88a1bae003e4cbd102fd73a8c20d4a3cba22aa8a",
        "md5": "b4a4bf34846fca1c8a0848ea2596959e",
        "sha256": "de2797ae31844639e9f667afc2478dbba13601f7e00cf7962fb081bbb922dff2"
      },
      "downloads": -1,
      "filename": "azure-purview-sharing-1.0.0b1.zip",
      "has_sig": false,
      "md5_digest": "b4a4bf34846fca1c8a0848ea2596959e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 87383,
      "upload_time": "2023-03-30T04:26:02",
      "upload_time_iso_8601": "2023-03-30T04:26:02.462942Z",
      "url": "https://files.pythonhosted.org/packages/9a/f9/81136e4e032d6eb2a42d88a1bae003e4cbd102fd73a8c20d4a3cba22aa8a/azure-purview-sharing-1.0.0b1.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}