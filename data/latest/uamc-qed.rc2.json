{
  "info": {
    "author": "Hans De Winter",
    "author_email": "hans.dewinter@uantwerpen.be",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: Freeware",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Chemistry",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# QED package\n\n**QED** stands for quantitative estimation of drug-likeness and the concept has been introduced by Richard Bickerton and coworkers [Bickerton, G.R.; Paolini, G.V.; Besnard, J.; Muresan, S.; Hopkins, A.L. (2012) ‘Quantifying the chemical beauty of drugs’, Nature Chemistry, 4, 90-98](http://dx.doi.org/10.1038/nchem.1243). This module relies on [RDKit](https://www.rdkit.org) as a chem-informatics toolkit.\n\n## Introduction\n\nThis section is about installing and using **QED** within your own Python scripts or as a standalone Python tool.\n\nThe empirical rationale of the **QED** measure reflects the underlying distribution of molecular properties including molecular weight, logP, topological polar surface area, number of hydrogen bond donors and acceptors, the number of aromatic rings and rotatable bonds, and the presence of unwanted chemical functionalities.\n\nThe **QED** results as generated by this module are not completely identical to those from the [original publication](http://dx.doi.org/10.1038/nchem.1243). These differences are a consequence of differences within the underlying calculated property calculators used in both methods. For example, discrepancies can be noted in the results from the logP calculations, nevertheless despite the fact that both approaches (Pipeline Pilot in the original publication and RDKit in this implementation) mention to use the [Wildmann and Crippen](http://pubs.acs.org/doi/abs/10.1021/ci990307l) methodology for the calculation of their logP-values. In this respect, Gregory Gerebtzoff has been so kind to perform a refitting of the **QED** parameters with logP values generated by RDKit ([see rdkit-discuss](http://sourceforge.net/mailarchive/forum.php?thread_name=E05E80C886E33E4BA10E5686C606617602FF1D7A14%40RKAMSEM707.emea.roche.com&forum_name=rdkit-discuss)). These refitted values have been implemented in **QED** as the default values; however, the original publication values can still be used if desired.\nThis section assumes you have installed RDKit correctly and that you are familiar with the basic functions of it. It is also recommended to have read the original [QED publication](http://dx.doi.org/10.1038/nchem.1243).\n\n## Installation\n\nThere are two ways to install **QED**. The first one is by download from the `GitHub` repository and installing, and the second way is using Python's standard `pip` approach. Both methods are explained below.\n\n#### 1. Installing with `pip`\n\nThis is probably the easiest way to install **QED**. First make sure you have `pip` installed:\n\n```console\n> pip -V\npip 20.0.2 from /Users/hans/anaconda3/envs/rdkit/lib/python3.7/site-packages/pip (python 3.7)\n```\n\nIf `pip` is not installed, then install it first by following these [pip installation notes](https://pip.pypa.io/en/stable/installing/).\n\nNow you are ready to install **QED**:\n\n```console\n> pip install uamc-qed\n```\n\nDepending on your `python` location, it might be that you need admin rights. In that case, type:\n\n```console\n> sudo pip install uamc-qed\n```\n\n\n#### 2. Alternative manner: download from Github and run `setup.py install`\n\nDownload **QED** from [GitHub](https://github.com/UAMCAntwerpen/qed/releases/tag/1.0.2). In this section we assume you have downloaded the file into your `~/Downloads` directory) and untar this file into this directory:\n\n```console\n> cd ~/Downloads\n> sudo tar -xvf uamc-qed-1.0.2.tar.gz\n> cd uamc-qed-1.0.2\n```\n\nYou should now have a number of files in your `~/Downloads/uamc-qed-1.0.2` directory:\n\n```console\n> ls -l\nqed-1.0.2/\nqed-1.0.2/LICENSE\nqed-1.0.2/README.md\nqed-1.0.2/dist/\nqed-1.0.2/how_to_make_distribution.txt\nqed-1.0.2/qed/\nqed-1.0.2/setup.py\n```\n\nMove into the `dist` directory and `untar` again:\n\n```\n> cd dist\n> tar -xvf qed-1.0.2.tar.gz\n> cd qed-1.0.2\n```\n\nNow install with Python:\n\n```console\n> python setup.py install\n```\n\nThis process creates a `qed` folder with all the `qed` files into your default Python site-package install directory. It might be that you need to get root permissions:\n\n```console\n> sudo python setup.py install\n```\n\nCheck your installation by launching `Python`:\n\n```python\n>>> from qed import qed\n>>> from rdkit import Chem\n>>> m = Chem.MolFromSmiles('c1ccccc1')\n>>> qed.default(m)\n0.44619898311523704\n```\n\n## Using QED\n\nThe `qed()` function takes as argument a RDKit molecule and returns the corresponding QED value calculated from it.\nThe `qed()` function comes in three flavors, each differing in the relative weight that is imposed on the underlying [molecular descriptors](http://dx.doi.org/10.1038/nchem.1243). These three flavors correspond to the three different **QED** measures that were described in the original publication:\n\n- QED<sub>w,max</sub> using the set of weights that give maximal information content.\n- QED<sub>w,mo</sub> using the mean weights of the optimal 1,000 weight combinations that give the highest information content.\n- QED<sub>w,u</sub> with all weights as unity, hence unweighted.\n\nSpecifying the required QED weighting scheme in **QED** is done using the corresponding function:\n\n- `qed.weights_mean()` uses the mean weighting scheme and corresponds to QED<sub>w,mo</sub>. Another name for this function is `qed.default()`.\n- `qed.weights_max()` specifies the max weighting scheme and corresponds to QED<sub>w,max</sub>.\n- `qed.weights_none()` specifies unit weights and corresponds to QED<sub>w,u</sub>.\n\nand exemplified below:\n\n```python\n>>> from qed import qed\n>>> from rdkit import Chem\n>>> m = Chem.MolFromSmiles('c1ccccc1')\n>>> qed.default(m)\n0.44619898311523704\n>>> qed.weights_mean(m)\n0.44619898311523704\n>>> qed.weights_max(m)\n0.4733526950948539\n>>> qed.weights_none(m)\n0.3047153431243204\n```\n\nAs already mentioned above, the current implementation of **QED** uses the refitted logP parameters from Gregory Gerebtzoff. However, the original values can still be used by specifying `False` as second argument to the appropriate function call:\n\n```python\n>>> qed.default(m, False)\n0.4426283718993647\n>>> qed.weights_mean(m, False)\n0.4426283718993647\n>>> qed.weights_max(m, False)\n0.4706596045646091\n>>> qed.weights_none(m, False)\n0.3021185764176498\n```\n\nThe **QED** module also provides its own test set:\n\n```python\n>>> test = qed.test_data()\n>>> for name in test: print(test[name], name)\n...\nNc1nc(NC2CC2)c2ncn([C@@H]3C[C@H](CO)C=C3)c2n1 Abacavir\nCC(=O)NCCCS(O)(=O)=O Acamprosate\nCCCC(=O)Nc1ccc(OCC(O)CNC(C)C)c(c1)C(C)=O Acebutolol\nCC(=O)Nc1ccc(O)cc1 Acetaminophen\nCC(=O)Nc1nnc(s1)S(N)(=O)=O Acetazolamide\nCC(=O)c1ccc(cc1)S(=O)(=O)NC(=O)NC1CCCCC1 Acetohexamide\nCC(=O)c1ccc2Sc3ccccc3N(CCCN3CCN(CCO)CC3)c2c1 Acetophenazine\nFc4ccc(C1CCNCC1COc3ccc2OCOc2c3)cc4 Paroxetine\nCc1oncc1C(=O)Nc2ccc(C(F)(F)F)cc2 Leflunomide\nCN1C4CCCC1CC(NC(=O)c2nn(C)c3ccccc23)C4 Granisetron\nCCCN2CC(CSC)CC1c3cccc4[nH]cc(CC12)c34 Pergolide\nCCc3c(C)[nH]c2CCC(CN1CCOCC1)C(=O)c23 Molindone\nCCCCCCCCCCCCCCCC(=O)OCC(NC(=O)C(Cl)Cl)C(O)c1ccc([N+]([O-])=O)cc1 ChloramphenicalPalmitate\nCCCCCCCCCCCCCCCOC(=O)C2C(O)C(O)C(C(NC(=O)C1CC(CCC)CN1C)C(C)Cl)OC2SC ClindamycinPalmitate\nCCOc3nc2cccc(C(=O)OC(C)OC(=O)OC1CCCCC1)c2n3Cc6ccc(c4ccccc4c5nn[nH]n5)cc6 CandesartanCilexetil\nCN(C)CCC=c2c1ccccc1sc3ccc(Cl)cc23 Chlorprothixene\nO=c3c(O)c(C2CCC(c1ccc(Cl)cc1)CC2)c(=O)c4ccccc34 Atovaquone\nCN(C)CCCN3c1ccccc1CCc2ccc(Cl)cc23 Clomipramine\nCN4CCCC(CC3c1ccccc1Sc2ccccc23)C4 Methixene\nCCN(CC)C(C)Cn3c1ccccc1sc2ccccc23 Ethopropazine\nN=C(CCSCc1csc(N=C(N)N)n1)NS(N)(=O)=O Famotidine\nCNC(=NCCSCc1nc[nH]c1C)NC#N Cimetidine\nCCCCCNC(=N)NN=Cc1c[nH]c2ccc(CO)cc12 Tegaserod\nC=CC3=C(C(=O)O)N2C(=O)C(NC(=O)C(=NO)c1csc(N)n1)C2SC3 Cefdinir\nCC5(C)SC4C(NC(=O)C(C(=O)Oc2ccc1CCCc1c2)c3ccccc3)C(=O)N4C5C(=O)O CarbenicillinIndanyl\n```\n\nOne can inspect the individual properties that are used to calculate the Qed value by calling the `properties()` function:\n\n```python\n>>> for name in test:\n...     mol = Chem.MolFromSmiles(test[name])\n...     p = qed.properties(mol)\n...     print(\"%6.2f\\t%6.3f\\t%6d\\t%6d\\t%6.2f\\t%6d\\t%6d\\t%6d\\t%6.3f\\t%-s\" % (p[0],p[1],p[2],p[3],p[4],p[5],p[6],p[7],qed.default(mol),name))\n...\n286.34\t 1.092\t     6\t     3\t101.88\t     4\t     2\t     1\t 0.737\tAbacavir\n181.21\t-0.600\t     4\t     2\t 83.47\t     4\t     0\t     2\t 0.467\tAcamprosate\n336.43\t 2.365\t     5\t     3\t 87.66\t    10\t     1\t     1\t 0.571\tAcebutolol\n151.16\t 1.351\t     2\t     2\t 49.33\t     1\t     1\t     1\t 0.602\tAcetaminophen\n222.25\t-0.856\t     5\t     2\t115.04\t     2\t     1\t     1\t 0.662\tAcetazolamide\n324.40\t 2.210\t     4\t     2\t 92.34\t     4\t     1\t     1\t 0.833\tAcetohexamide\n411.57\t 3.492\t     6\t     1\t 47.02\t     7\t     2\t     1\t 0.688\tAcetophenazine\n329.37\t 3.327\t     4\t     1\t 39.72\t     4\t     2\t     0\t 0.917\tParoxetine\n270.21\t 3.254\t     3\t     1\t 55.13\t     2\t     2\t     0\t 0.896\tLeflunomide\n312.42\t 2.318\t     3\t     1\t 50.16\t     2\t     2\t     0\t 0.927\tGranisetron\n314.50\t 4.271\t     2\t     1\t 19.03\t     4\t     2\t     0\t 0.871\tPergolide\n276.38\t 1.963\t     3\t     1\t 45.33\t     3\t     1\t     0\t 0.923\tMolindone\n561.55\t 6.941\t     6\t     2\t118.77\t    21\t     1\t     5\t 0.056\tChloramphenicalPalmitate\n663.41\t 6.279\t     8\t     3\t108.33\t    22\t     0\t     3\t 0.071\tClindamycinPalmitate\n610.67\t 6.319\t    10\t     1\t143.34\t    10\t     5\t     2\t 0.141\tCandesartanCilexetil\n315.87\t 5.188\t     2\t     0\t  3.24\t     3\t     3\t     0\t 0.629\tChlorprothixene\n366.84\t 5.505\t     3\t     1\t 54.37\t     2\t     2\t     0\t 0.741\tAtovaquone\n314.86\t 4.528\t     2\t     0\t  6.48\t     4\t     2\t     0\t 0.782\tClomipramine\n309.48\t 5.015\t     2\t     0\t  3.24\t     2\t     2\t     0\t 0.735\tMethixene\n312.48\t 5.020\t     3\t     0\t  6.48\t     5\t     2\t     0\t 0.734\tEthopropazine\n337.46\t-0.558\t     6\t     5\t173.33\t     7\t     1\t     3\t 0.263\tFamotidine\n252.35\t 0.597\t     5\t     3\t 88.89\t     5\t     1\t     5\t 0.239\tCimetidine\n301.39\t 2.298\t     3\t     5\t 96.29\t     7\t     2\t     4\t 0.235\tTegaserod\n395.42\t-0.172\t     8\t     4\t158.21\t     5\t     1\t     4\t 0.239\tCefdinir\n494.57\t 2.496\t     7\t     2\t113.01\t     6\t     2\t     4\t 0.274\tCarbenicillinIndanyl\n>>> print(\"    MW\\t ALOGP\\t   HBA\\t   HBD\\t   PSA\\t  ROTB\\t  AROM\\tALERTS\\t   QED\\tNAME\")\n    MW\t ALOGP\t   HBA\t   HBD\t   PSA\t  ROTB\t  AROM\tALERTS\t   QED\tNAME\n```\n\n## Revision history\n\n#### Version 1.0.2\n\n- Added to the PyPi repository to enable installation using `pip`.\n\n#### Version 1.0.1\n\n- Incorporation of the refitted logP parameters of Gregory Gerebtzoff and making these values default ([rdkit-discuss](http://sourceforge.net/mailarchive/forum.php?thread_name=E05E80C886E33E4BA10E5686C606617602FF1D7A14%40RKAMSEM707.emea.roche.com&forum_name=rdkit-discuss)).\n- Modification of the `qed()` function to enable the selection of the original parameters, if desired.\n\n\n## DOI identifier\n\nDOI:10.5281/zenodo.4293730\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/UAMCAntwerpen/qed/releases/tag/1.0.2",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/UAMCAntwerpen/qed",
    "keywords": "uamc,qed,rdkit,cheminformatics",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "uamc-qed",
    "package_url": "https://pypi.org/project/uamc-qed/",
    "platform": "",
    "project_url": "https://pypi.org/project/uamc-qed/",
    "project_urls": {
      "Download": "https://github.com/UAMCAntwerpen/qed/releases/tag/1.0.2",
      "Homepage": "https://github.com/UAMCAntwerpen/qed"
    },
    "release_url": "https://pypi.org/project/uamc-qed/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python implementation of the QED descriptor (Quantitative Estimation of Druglikeness)",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8771960,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7d3ddf27b6f0bfebf024da0ca63dcdf858abdee8d2f33fe8cb9716fd3555539",
          "md5": "3bc5111fdb358f63f1af56007c17d89c",
          "sha256": "ba212cded30e16d3bd01117c07b799dd744e90971ba413b669b39a5e1513530a"
        },
        "downloads": -1,
        "filename": "uamc_qed-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3bc5111fdb358f63f1af56007c17d89c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10071,
        "upload_time": "2020-11-29T08:14:40",
        "upload_time_iso_8601": "2020-11-29T08:14:40.300698Z",
        "url": "https://files.pythonhosted.org/packages/b7/d3/ddf27b6f0bfebf024da0ca63dcdf858abdee8d2f33fe8cb9716fd3555539/uamc_qed-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42acacf0bce6a06b516336785ab83ea8366c43e7ca2eeccdf7cdd9146eb9abaf",
          "md5": "d5b2860a2f4d1d788fe0049ac3f7f848",
          "sha256": "33d5efb7e86c02bbcffdd25047c11fb6097b4b9c6c6890a44042aec930932353"
        },
        "downloads": -1,
        "filename": "uamc-qed-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d5b2860a2f4d1d788fe0049ac3f7f848",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9969,
        "upload_time": "2020-11-29T08:14:41",
        "upload_time_iso_8601": "2020-11-29T08:14:41.976491Z",
        "url": "https://files.pythonhosted.org/packages/42/ac/acf0bce6a06b516336785ab83ea8366c43e7ca2eeccdf7cdd9146eb9abaf/uamc-qed-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4ca65496177002ce06651f2c2deafc1784f678b8e6054fbf28b6544caf1cec2",
          "md5": "2be6dc0b2356d2c1b2001d4e8cca05f1",
          "sha256": "e0474dc150182c33de3c2c7c2db72bff62d027d7e5ead180214f0743083ab2f0"
        },
        "downloads": -1,
        "filename": "uamc_qed-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2be6dc0b2356d2c1b2001d4e8cca05f1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10445,
        "upload_time": "2020-11-29T09:51:14",
        "upload_time_iso_8601": "2020-11-29T09:51:14.706828Z",
        "url": "https://files.pythonhosted.org/packages/a4/ca/65496177002ce06651f2c2deafc1784f678b8e6054fbf28b6544caf1cec2/uamc_qed-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8098543d1d200ac17d042e4586cd49b9f75a89de617bc3d1cc9b6e67ad76e163",
          "md5": "276e9ded99217e14bb726aecfce2ebc0",
          "sha256": "eee0f089d8b968730aecf513aa6caffc1e9cf86b48197a11a6328356e959143a"
        },
        "downloads": -1,
        "filename": "uamc-qed-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "276e9ded99217e14bb726aecfce2ebc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10464,
        "upload_time": "2020-11-29T09:51:16",
        "upload_time_iso_8601": "2020-11-29T09:51:16.158781Z",
        "url": "https://files.pythonhosted.org/packages/80/98/543d1d200ac17d042e4586cd49b9f75a89de617bc3d1cc9b6e67ad76e163/uamc-qed-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4ca65496177002ce06651f2c2deafc1784f678b8e6054fbf28b6544caf1cec2",
        "md5": "2be6dc0b2356d2c1b2001d4e8cca05f1",
        "sha256": "e0474dc150182c33de3c2c7c2db72bff62d027d7e5ead180214f0743083ab2f0"
      },
      "downloads": -1,
      "filename": "uamc_qed-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2be6dc0b2356d2c1b2001d4e8cca05f1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10445,
      "upload_time": "2020-11-29T09:51:14",
      "upload_time_iso_8601": "2020-11-29T09:51:14.706828Z",
      "url": "https://files.pythonhosted.org/packages/a4/ca/65496177002ce06651f2c2deafc1784f678b8e6054fbf28b6544caf1cec2/uamc_qed-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8098543d1d200ac17d042e4586cd49b9f75a89de617bc3d1cc9b6e67ad76e163",
        "md5": "276e9ded99217e14bb726aecfce2ebc0",
        "sha256": "eee0f089d8b968730aecf513aa6caffc1e9cf86b48197a11a6328356e959143a"
      },
      "downloads": -1,
      "filename": "uamc-qed-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "276e9ded99217e14bb726aecfce2ebc0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10464,
      "upload_time": "2020-11-29T09:51:16",
      "upload_time_iso_8601": "2020-11-29T09:51:16.158781Z",
      "url": "https://files.pythonhosted.org/packages/80/98/543d1d200ac17d042e4586cd49b9f75a89de617bc3d1cc9b6e67ad76e163/uamc-qed-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}