{
  "info": {
    "author": "andyyeyeye",
    "author_email": "andyye.jongcye@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# KSA library\n\nA library enabling developers to easily build simple and complicated programs for use in KSA\n\ncurrently under construction\n\n\nAuthorization\n-------------\n\n### Authorization expires after a few dozen minutes. Refresh Login Every few minutes to avoid errors.\n\nThis library supports lms, student site, and gaonnuri. For more support, create an issue.\n\nTo Authorize\n\n    user=Auth()\n    user.gaonnuri_auth('id','pwd')\n    user.student_auth('id','pwd')\n    user.lms_auth('id','pwd')\n\nPost Class\n-------------\nThe Post class is a class that represents an individual gaonnuri post. In takes an authorization class as an input. You can use it in the following way.\n\n    post=Post(user, link of post)\n\nThere are many attributes of a `Post` class\n\n    post.title\n    post.time\n    post.author\n    post.views\n\nYou can print the article in two forms in the following way. The `html` form, and `markdown` ( just text ) form.\n\n    post.html()\n    post.text()\n\nboth return a string.\n\nSugang Class\n-------------\n`Sugang` class is a class that represents your 수강상태. It takes an authorization class as an input. You can use it in the following way.\n\n    sugang=Sugang(user)\n\nIt has three methods.\n\n`sugang.table` returns your classes as a list\n\n`sugang.timetable` returns your classes as a list\n\n`sugang.info` returns information about you (ex : your grade, number, et cetra)\n\n\nExploit Class\n-------------\n`Exploit` class is a class that enables users to do actions that are supposed to be blocked. It takes an authorization class as an input. You can use it in the following way\n\n    exploit=Exploit(user)\n\nIt currently has three methods.\n\n`exploit.outing()` 외출 외박 신청이 되있을때 외출 체크를 할 수 있게 해줌\n\n`exploit.lmsview(number)` takes integer as a input. enables users to see other people's posts corresponding to the integer on lms.\n\n`exploit.lmsfile(number,path)` takes integer and download path as input. enables user to download other people's posts corresponding to the integer on lms.\n\n\nMethods\n-------------\n### Acessing the Board\n\nThere are two main ways to access a board. One returns a list of `Post` classes, and the other returns only basic informaion about each post.\n\n\n#### 1. To get a list of `Post` classes, use\n\n    get_gaonnuri_board_post(user,board=\"board name\")\n\n\n#### 2. To access the basic information about a post, use\n\n    get_gaonnuri_board(user,board=\"board name\")\n\nThe `\"board name\"` has to be one on gaonnuri, for example `\"board_notice\"` or `\"board_SuQZ12\"`.\nThis will return each notice in the following json format.\n\n      {\n      'no':no,\n      'title':title,\n      'link':link,\n      'author':author,\n      'time':time,\n      'views':views\n      }\n\nAll posts will be appended to a list.\n\nTo access the one-line post, use\n\n    get_gaonnuri_oneline(user)\n\nThis method will return a list of all gaonnuri one-line posts\n\n### Acessing 상점, 벌점\n\nTo access 상점, 벌점, use the following method.\n\n    get_student_points(user)\n\nThe method takes an authorization class as an input. It returns the 상점, 벌점 as a dictionary.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/andyyeyeye/ksalib",
    "keywords": "",
    "license": "The MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ksalib",
    "package_url": "https://pypi.org/project/ksalib/",
    "platform": "",
    "project_url": "https://pypi.org/project/ksalib/",
    "project_urls": {
      "Homepage": "https://github.com/andyyeyeye/ksalib"
    },
    "release_url": "https://pypi.org/project/ksalib/0.1.0/",
    "requires_dist": [
      "requests",
      "bs4",
      "html2text"
    ],
    "requires_python": "",
    "summary": "A library for KSA",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9155016,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef8dbf10a6fe334548f7b67fcaa78e68f562cae39369d3320d39db8313ff2398",
          "md5": "b6ab9231f9a64097f522cce678e4fe77",
          "sha256": "0a36abf22dcb91038996f4388b720954e60111edfa20f2404e9dce73c0ab3705"
        },
        "downloads": -1,
        "filename": "ksalib-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6ab9231f9a64097f522cce678e4fe77",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8788,
        "upload_time": "2021-01-17T07:34:00",
        "upload_time_iso_8601": "2021-01-17T07:34:00.997139Z",
        "url": "https://files.pythonhosted.org/packages/ef/8d/bf10a6fe334548f7b67fcaa78e68f562cae39369d3320d39db8313ff2398/ksalib-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5aab8a1c048851ad7fea3b31d49d187504ea331324bebe7a9e63a375c90441ff",
          "md5": "e8854ca1ecce97793ef19ec6cae3da7d",
          "sha256": "1bb9e68611cc5a71b9cf739ad77ee18a5321e89a88ccf296584e6584e669b10a"
        },
        "downloads": -1,
        "filename": "ksalib-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e8854ca1ecce97793ef19ec6cae3da7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7378,
        "upload_time": "2021-01-17T07:34:02",
        "upload_time_iso_8601": "2021-01-17T07:34:02.317093Z",
        "url": "https://files.pythonhosted.org/packages/5a/ab/8a1c048851ad7fea3b31d49d187504ea331324bebe7a9e63a375c90441ff/ksalib-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef8dbf10a6fe334548f7b67fcaa78e68f562cae39369d3320d39db8313ff2398",
        "md5": "b6ab9231f9a64097f522cce678e4fe77",
        "sha256": "0a36abf22dcb91038996f4388b720954e60111edfa20f2404e9dce73c0ab3705"
      },
      "downloads": -1,
      "filename": "ksalib-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b6ab9231f9a64097f522cce678e4fe77",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8788,
      "upload_time": "2021-01-17T07:34:00",
      "upload_time_iso_8601": "2021-01-17T07:34:00.997139Z",
      "url": "https://files.pythonhosted.org/packages/ef/8d/bf10a6fe334548f7b67fcaa78e68f562cae39369d3320d39db8313ff2398/ksalib-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5aab8a1c048851ad7fea3b31d49d187504ea331324bebe7a9e63a375c90441ff",
        "md5": "e8854ca1ecce97793ef19ec6cae3da7d",
        "sha256": "1bb9e68611cc5a71b9cf739ad77ee18a5321e89a88ccf296584e6584e669b10a"
      },
      "downloads": -1,
      "filename": "ksalib-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e8854ca1ecce97793ef19ec6cae3da7d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7378,
      "upload_time": "2021-01-17T07:34:02",
      "upload_time_iso_8601": "2021-01-17T07:34:02.317093Z",
      "url": "https://files.pythonhosted.org/packages/5a/ab/8a1c048851ad7fea3b31d49d187504ea331324bebe7a9e63a375c90441ff/ksalib-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}