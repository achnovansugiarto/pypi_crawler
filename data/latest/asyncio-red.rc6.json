{
  "info": {
    "author": "Dmytro Smyk",
    "author_email": "porovozls@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "asyncio-RED (Redis Event Driven)\n================================\n\nPowers your microservices with event driven approach using redis as a backend.\n\nSupport both publishing and subscribing using lists, channels and streams.\n\n`pydantic` is being used for events validation.\n\n`s3` can be used for sharing event schemas between services.\n\nInstallation\n------------\n\n- `pip install asyncio-red`\n\n\nSimple producer\n---------------\n\n```python\nfrom aioredis import Redis\nfrom asyncio_red import RED, Via, BaseEvent\nfrom pydantic import Field\n\nclass EventV1List(BaseEvent):\n    key: str = Field(..., title='Key description')\n    \n\nclass EventV1Channel(BaseEvent):\n    key: str = Field(..., title='Key description')\n    \n    \nclass EventV1Stream(BaseEvent):\n    key: str = Field(..., title='Key description')\n\n    \nredis_client = Redis()\nred = RED(app_name=str('service_1'), redis_client=redis_client)\n\nred.add_out(\n    event=EventV1List,\n    via=Via.LIST,\n    target_name='events_list'\n)\n\nred.add_out(\n    event=EventV1Channel,\n    via=Via.CHANNELS,\n    target_name='events_channel'\n)\n\nred.add_out(\n    event=EventV1Stream,\n    via=Via.STREAMS,\n    target_name='events_stream'\n)\n\n\nasync def your_awesome_function():\n    # dispatch events\n    await EventV1List(key='value').dispatch()  # this one will be put to a list\n    await EventV1Channel(key='value').dispatch()  # this one will be pushed to a channel\n    await EventV1Stream(key='value').dispatch()  # this one will be pushed to a stream\n```\n\n\nSimple consumer\n--------------\n\n```python\nfrom aioredis import Redis\nfrom asyncio_red import RED, Via, BaseEvent\nfrom pydantic import Field\n\nclass EventV1List(BaseEvent):\n    key: str = Field(..., title='Key description')\n    \n\nclass EventV1Channel(BaseEvent):\n    key: str = Field(..., title='Key description')\n    \n    \nclass EventV1Stream(BaseEvent):\n    key: str = Field(..., title='Key description')\n    \n\nredis_client = Redis()\nred = RED(app_name=str('service_2'), redis_client=redis_client)\n\n\nasync def event_handler(event):\n    print(event)\n\n\nred.add_in(\n    event=EventV1List,\n    via=Via.LIST,\n    handlers=(event_handler, ),\n    list_name=\"events_list\",\n)\n\nred.add_in(\n    event=EventV1Channel,\n    via=Via.CHANNELS,\n    handlers=(event_handler, ),\n    error_handler=event_handler,\n    channel_name=\"events_channel\"\n)\n\nred.add_in(\n    event=EventV1Stream,\n    via=Via.STREAMS,\n    handlers=(event_handler, event_handler),\n    stream_name=\"events_stream\",\n    group_name=\"events_group\",\n    consumer_name=\"consumer_name\"\n)\n\nawait red.run()\n```\n\n\nShared events registry\n----------------------\n\nThere is a possibility to keep event schemas registry on the S3 and share the schema across \ndifferent services. You'll need an AWS account and keys with access to S3.\n\n- Go to app root dir and initialize asyncio-red:\n\n```shell\nasyncio_red init --app-name=<app name> --s3-bucket=<bucket name>\n```\n\nThis will create an initial structure.\nDefine your events at `red/registry/<app name>.py`:\n\n```python\nfrom pydantic import Field\nfrom asyncio_red.events import BaseEvent\n\n\nclass EventV1List(BaseEvent):\n    key: str = Field(..., title='Key description')\n    \n\nclass EventV1Channel(BaseEvent):\n    key: str = Field(..., title='Key description')\n    \n    \nclass EventV1Stream(BaseEvent):\n    key: str = Field(..., title='Key description')\n\n```\n\n- push application events schemas to a registry: `asyncio-red push`\n- on a different service you can pull shared schemas - do the same steps, e.g. init structure and run `asyncio-red pull`\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/parikls/asyncio-red",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asyncio-red",
    "package_url": "https://pypi.org/project/asyncio-red/",
    "platform": "",
    "project_url": "https://pypi.org/project/asyncio-red/",
    "project_urls": {
      "Homepage": "https://github.com/parikls/asyncio-red"
    },
    "release_url": "https://pypi.org/project/asyncio-red/0.3.3/",
    "requires_dist": null,
    "requires_python": ">=3.5.3",
    "summary": "asyncio RED",
    "version": "0.3.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12862283,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b130d49cbc70937079358b129e91478c5f29935c2e18ca67b033f6c96cfc930",
          "md5": "ac08054b4451a0be946154a75f71512a",
          "sha256": "a058339b7c8e9fa5562e28a679e251e09afff30f594a21b807737a3816457eb1"
        },
        "downloads": -1,
        "filename": "asyncio-red-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ac08054b4451a0be946154a75f71512a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.3",
        "size": 15382,
        "upload_time": "2022-01-04T19:18:23",
        "upload_time_iso_8601": "2022-01-04T19:18:23.124494Z",
        "url": "https://files.pythonhosted.org/packages/0b/13/0d49cbc70937079358b129e91478c5f29935c2e18ca67b033f6c96cfc930/asyncio-red-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37a6edc9ad414285fee044f225692d6d2e15b189961efd76acc37202b0e8c362",
          "md5": "9bae829c8f9067403a0a95e943e2b06b",
          "sha256": "ee4f2261fa909f7b9e1c1a24b4dbab07f01eaa96d009a6c1e2158980f9717616"
        },
        "downloads": -1,
        "filename": "asyncio-red-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9bae829c8f9067403a0a95e943e2b06b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.3",
        "size": 15418,
        "upload_time": "2022-01-05T17:07:14",
        "upload_time_iso_8601": "2022-01-05T17:07:14.884118Z",
        "url": "https://files.pythonhosted.org/packages/37/a6/edc9ad414285fee044f225692d6d2e15b189961efd76acc37202b0e8c362/asyncio-red-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b21d89d37616b4f3740be415cce3f529d38cf7c649c682a0a69db84fb889d2d2",
          "md5": "dfb83e12c42feaf5b24c31f0a2fa0323",
          "sha256": "64b586e49b9888c3b9e21b8c21f336da23a945cecd8c2c43731f68dd759a1529"
        },
        "downloads": -1,
        "filename": "asyncio-red-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "dfb83e12c42feaf5b24c31f0a2fa0323",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.3",
        "size": 15290,
        "upload_time": "2022-02-03T12:09:40",
        "upload_time_iso_8601": "2022-02-03T12:09:40.583821Z",
        "url": "https://files.pythonhosted.org/packages/b2/1d/89d37616b4f3740be415cce3f529d38cf7c649c682a0a69db84fb889d2d2/asyncio-red-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3723ededcbe349af70b5e15b3aab62895dc036a566426b74a52c65f5eb4146eb",
          "md5": "c5e29bfff2ca1d8ac19deb8547b9212d",
          "sha256": "e59c19fee66588251db5235fbe3c73fac8309acb5bc7b7d2fbdeb25f7bf8b896"
        },
        "downloads": -1,
        "filename": "asyncio-red-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c5e29bfff2ca1d8ac19deb8547b9212d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.3",
        "size": 15329,
        "upload_time": "2022-02-03T16:46:44",
        "upload_time_iso_8601": "2022-02-03T16:46:44.889656Z",
        "url": "https://files.pythonhosted.org/packages/37/23/ededcbe349af70b5e15b3aab62895dc036a566426b74a52c65f5eb4146eb/asyncio-red-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "801bea929ee8be63370e2ffe138857246ff35c371c96bf9ad9acb298179ddfd3",
          "md5": "838a6fe975811367832d301a98dd36d7",
          "sha256": "f09e0aa357af89f77300c0c9d612ee534d189136b5bdc458a3a36c8385ed3c02"
        },
        "downloads": -1,
        "filename": "asyncio-red-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "838a6fe975811367832d301a98dd36d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.3",
        "size": 15296,
        "upload_time": "2022-02-10T21:13:24",
        "upload_time_iso_8601": "2022-02-10T21:13:24.101121Z",
        "url": "https://files.pythonhosted.org/packages/80/1b/ea929ee8be63370e2ffe138857246ff35c371c96bf9ad9acb298179ddfd3/asyncio-red-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4f9dda85f17ce0855277f885c01bcd549e1875b57a5ff802b70ef6756ad599c",
          "md5": "406fd36a1b2ed494daf0dea172efbb73",
          "sha256": "a1fbce6893cdd36c48d034c653918a2edc285b72f8e7b3189780b18c82f2f856"
        },
        "downloads": -1,
        "filename": "asyncio-red-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "406fd36a1b2ed494daf0dea172efbb73",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.3",
        "size": 15323,
        "upload_time": "2022-02-11T15:03:55",
        "upload_time_iso_8601": "2022-02-11T15:03:55.086745Z",
        "url": "https://files.pythonhosted.org/packages/d4/f9/dda85f17ce0855277f885c01bcd549e1875b57a5ff802b70ef6756ad599c/asyncio-red-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d4f9dda85f17ce0855277f885c01bcd549e1875b57a5ff802b70ef6756ad599c",
        "md5": "406fd36a1b2ed494daf0dea172efbb73",
        "sha256": "a1fbce6893cdd36c48d034c653918a2edc285b72f8e7b3189780b18c82f2f856"
      },
      "downloads": -1,
      "filename": "asyncio-red-0.3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "406fd36a1b2ed494daf0dea172efbb73",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.3",
      "size": 15323,
      "upload_time": "2022-02-11T15:03:55",
      "upload_time_iso_8601": "2022-02-11T15:03:55.086745Z",
      "url": "https://files.pythonhosted.org/packages/d4/f9/dda85f17ce0855277f885c01bcd549e1875b57a5ff802b70ef6756ad599c/asyncio-red-0.3.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}