{
  "info": {
    "author": "windymile.it",
    "author_email": "windymile.it@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# windyquery - A non-blocking Python PostgreSQL query builder\n\nWindyquery is a non-blocking PostgreSQL query builder with Asyncio.\n\n### Installation\n```\n$ pip install windyquery\n```\n\n### Connection\n```python\nimport asyncio\n\nfrom windyquery import DB\n\n# create DB connection for CRUD operatons\ndb = DB()\nasyncio.get_event_loop().run_until_complete(db.connect('db_name', {\n    'host': 'localhost',\n    'port': '5432',\n    'database': 'db_name',\n    'username': 'db_user_name',\n    'password': 'db_user_password'\n}, default=True))\n\nasyncio.get_event_loop().run_until_complete(db.connect('other_db_name', {\n    'host': 'localhost',\n    'port': '5432',\n    'database': 'other_db_name',\n    'username': 'db_user_name',\n    'password': 'db_user_password'\n}, default=False))\n\n# switch connections between different databases\ndb.connection('other_db_name')\n\n# the default connection can also be changed directly\ndb.default = 'other_db_name'\n\n# close DB connection\nasyncio.get_event_loop().run_until_complete(db.stop())\n```\n\n### CRUD examples\nA DB instance can be used to constuct a SQL. The instance is a coroutine object.\nIt can be scheduled to run by all [asyncio](https://docs.python.org/3/library/asyncio-task.html) mechanisms.\n\n#### Build a SQL and execute it\n```python\nasync def main(db):\n    # SELECT id, name FROM users\n    users = await db.table('users').select('id', 'name')\n    print(users[0]['name'])\n\nasyncio.run(main(db))\n```\n\n#### SELECT\n```python\n# SELECT name AS username, address addr FROM users\nawait db.table('users').select('name AS username', 'address addr')\n\n# SELECT * FROM users WHERE id = 1 AND name = 'Tom'\nawait db.table('users').select().where('id', 1).where('name', 'Tom')\n\n# SELECT * FROM users WHERE id = 1 AND name = 'Tom'\nawait db.table('users').select().where('id', '=', 1).where('name', '=', 'Tom')\n\n# SELECT * FROM users WHERE id = 1 AND name = 'Tom'\nawait db.table('users').select().where('id = ? AND name = ?', 1, 'Tom')\n\n# SELECT * FROM users WHERE id IN (1, 2)\nawait db.table('cards').select().where(\"id\", [1, 2])\n\n# SELECT * FROM users WHERE id IN (1, 2)\nawait db.table('cards').select().where(\"id\", 'IN', [1, 2])\n\n# SELECT * FROM users WHERE id IN (1, 2)\nawait db.table('cards').select().where(\"id IN (?, ?)\", 1, 2)\n\n# SELECT * FROM users ORDER BY id, name DESC\nawait db.table('users').select().order_by('id', 'name DESC')\n\n# SELECT * FROM users GROUP BY id, name\nawait db.table('users').select().group_by('id', 'name')\n\n# SELECT * FROM users LIMIT 100 OFFSET 10\nawait db.table('users').select().limit(100).offset(10)\n\n# SELECT users.*, orders.total FROM users\n#   JOIN orders ON orders.user_id = users.id\nawait db.table('users').select('users.*', 'orders.total').\\\n    join('orders', 'orders.user_id', '=', 'users.id')\n\n# SELECT users.*, orders.total FROM users\n#   JOIN orders ON orders.user_id = users.id AND orders.total > 100\nawait db.table('users').select('users.*', 'orders.total').\\\n    join('orders', 'orders.user_id = users.id AND orders.total > ?', 100)\n```\n\n#### INSERT\n```python\n# INSERT INTO users(id, name) VALUES\n#   (1, 'Tom'),\n#   (2, 'Jerry'),\n#   (3, DEFAULT)\nawait db.table('users').insert(\n    {'id': 1, 'name': 'Tom'},\n    {'id': 2, 'name': 'Jerry'},\n    {'id': 3, 'name': 'DEFAULT'}\n)\n\n# INSERT INTO users(id, name) VALUES\n#   (1, 'Tom'),\n#   (2, 'Jerry'),\n#   (3, DEFAULT)\n#   RETRUNING id, name\nawait db.table('users').insert(\n    {'id': 1, 'name': 'Tom'},\n    {'id': 2, 'name': 'Jerry'},\n    {'id': 3, 'name': 'DEFAULT'}\n).returning('id', 'name')\n\n# INSERT INTO users(id, name) VALUES\n#   (1, 'Tom'),\n#   (2, 'Jerry'),\n#   (3, DEFAULT)\n#   RETRUNING *\nawait db.table('users').insert(\n    {'id': 1, 'name': 'Tom'},\n    {'id': 2, 'name': 'Jerry'},\n    {'id': 3, 'name': 'DEFAULT'}\n).returning()\n\n# INSERT INTO users (id, name) VALUES\n#   (1, 'Tom')\n#   ON CONFLICT (id) DO NOTHING\nawait db.table('users').insert(\n    {'id': 1, 'name': 'Tom'},\n).on_conflict('(id)', 'DO NOTHING')\n\n# INSERT INTO users As u (id, name) VALUES\n#   (1, 'Tom')\n#   ON CONFLICT ON CONSTRAINT users_pkey\n#   DO UPDATE SET name = EXCLUDED.name || ' (formerly ' || u.name || ')'\nawait db.table('users AS u').insert(\n    {'id': 1, 'name': 'Tom'},\n).on_conflict(\n    'ON CONSTRAINT users_pkey',\n    \"DO UPDATE SET name = EXCLUDED.name || ' (formerly ' || u.name || ')'\"\n)        \n```\n\n#### UPDATE\n```python\n# UPDATE cards SET name = 'Tom' WHERE id = 9\nawait db.table('cards').where('id', 9).update({'name': 'Tom'})\n\n# UPDATE cards SET total = total + 1 WHERE id = 9\nawait db.table('cards').update('total = total + 1').where('id', 9)\n\n# UPDATE users SET name = 'Tom' WHERE id = 9 RETRUNING *\nawait db.table('users').update({'name': 'Tom'}).where('id', '=', 9).returning()\n\n# UPDATE users SET name = 'Tom' WHERE id = 9 RETRUNING id, name\nawait db.table('users').update({'name': 'Tom'}).where('id', '=', 9).returning('id', 'name')\n\n# UPDATE users SET name = orders.name\n#   FROM orders\n#   WHERE orders.user_id = users.id\nawait db.table('users').update('name = orders.name').\\\n    from_table('orders').\\\n    where('orders.user_id = users.id')\n\n# UPDATE users SET name = products.name, purchase = products.name, is_paid = TRUE\n#   FROM orders\n#   JOIN products ON orders.product_id = products.id\n#   WHERE orders.user_id = users.id\nawait db.table('users').update('name = product.name, purchase = products.name, is_paid = ?', True).\\\n    from_table('orders').\\\n    join('products', 'orders.product_id', '=', 'products.id').\\\n    where('orders.user_id = users.id')\n```\n\n#### DELETE\n```python\n# DELETE FROM users WHERE id = 1\nawait db.table('users').where('id', 1).delete()\n\n# DELETE FROM users WHERE id = 1 RETURNING id, name\nawait db.table('users').where('id', 1).delete().returning('id', 'name')\n```\n\n### Migration examples\nThe DB instance can also be used to migrate database schema.\n\n#### CREATE TABLE\n```python\n# CREATE TABLE users (\n#    id            serial PRIMARY KEY,\n#    group_id      integer references groups (id) ON DELETE CASCADE,\n#    created_at    timestamp not null DEFAULT NOW(),\n#    email         text not null unique,\n#    is_admin      boolean not null default false,\n#    address       jsonb,\n#    payday        integer not null,\n#    CONSTRAINT unique_email UNIQUE(group_id, email)\n#    check(payday > 0 and payday < 8)\n#)\nawait db.schema('TABLE users').create(\n    'id            serial PRIMARY KEY',\n    'group_id      integer references groups (id) ON DELETE CASCADE',\n    'created_at    timestamp not null DEFAULT NOW()',\n    'email         text not null unique',\n    'is_admin      boolean not null default false',\n    'address       jsonb',\n    'payday        integer not null',\n    'CONSTRAINT unique_email UNIQUE(group_id, email)',\n    'check(payday > 0 and payday < 8)',\n)\n\n# CREATE TABLE accounts LIKE users\nawait db.schema('TABLE accounts').create(\n    'like users'\n)\n\n# CREATE TABLE IF NOT EXISTS accounts LIKE users\nawait db.schema('TABLE IF NOT EXISTS accounts').create(\n    'like users'\n)\n```\n\n#### Modify TABLE\n```python\n# ALTER TABLE users\n#   ALTER   id TYPE bigint,\n#   ALTER   name SET DEFAULT 'no_name',\n#   ALTER   COLUMN address DROP DEFAULT,\n#   ALTER   \"user info\" SET NOT NULL,\n#   ALTER   CONSTRAINT check(payday > 1 and payday < 6),\n#   ADD     UNIQUE(name, email) WITH (fillfactor=70),\n#   ADD     FOREIGN KEY (group_id) REFERENCES groups (id) ON DELETE SET NULL,\n#   DROP    CONSTRAINT IF EXISTS idx_email CASCADE\nawait db.schema('TABLE users').alter(\n    'alter  id TYPE bigint',\n    'alter  name SET DEFAULT \\'no_name\\'',\n    'alter  COLUMN address DROP DEFAULT',\n    'alter  \"user info\" SET NOT NULL',\n    'add    CONSTRAINT check(payday > 1 and payday < 6)',\n    'add    UNIQUE(name, email) WITH (fillfactor=70)',\n    'add    FOREIGN KEY (group_id) REFERENCES groups (id) ON DELETE SET NULL',\n    'drop   CONSTRAINT IF EXISTS idx_email CASCADE',\n)\n\n# ALTER TABLE users RENAME TO accounts\nawait db.schema('TABLE users').alter('RENAME TO accounts')\n\n# ALTER TABLE users RENAME email TO email_address\nawait db.schema('TABLE users').alter('RENAME email TO email_address')\n\n# ALTER TABLE users RENAME CONSTRAINT idx_name TO index_name\nawait db.schema('TABLE users').alter('RENAME CONSTRAINT idx_name TO index_name')\n\n# ALTER TABLE users ADD COLUMN address text\nawait db.schema('TABLE users').alter('ADD COLUMN address text')\n\n# ALTER TABLE users DROP address\nawait db.schema('TABLE users').alter('DROP address')\n\n# CREATE INDEX idx_email ON users (name, email)\nawait db.schema('INDEX idx_email ON users').create('name', 'email')\n\n# CREATE UNIQUE INDEX unique_name ON users(name) WHERE soft_deleted = FALSE\nawait db.schema('UNIQUE INDEX unique_name ON users').create('name',).where('soft_deleted', False)\n\n# DROP INDEX idx_email CASCADE\nawait db.schema('INDEX idx_email').drop('CASCADE')\n\n# DROP TABLE users\nawait db.schema('TABLE users').drop()\n```\n\n### Raw\nThe `raw` method can be used to execute any form of SQL. Usually the `raw` method is used to execute complex hard-coded (versus dynamically built) queries. It's also very common to use `raw` method to run migrations.\n\nThe input to `raw` method is not validated, so it is not safe from SQL injection.\n\n#### RAW for complex SQL\n```python\nawait db.raw('SELECT ROUND(AVG(group_id),1) AS avg_id, COUNT(1) AS total_users FROM users WHERE id in ($1, $2, $3)', 4, 5, 6)\n\nawait db.raw(\"SELECT * FROM (VALUES (1, 'one'), (2, 'two'), (3, 'three')) AS t (num, letter)\")\n\nawait db.raw(\"\"\"\n    INSERT INTO user (id, name)\n        SELECT $1, $2 WHERE NOT EXISTS (SELECT id FROM users WHERE id = $1)\n\"\"\", 1, 'Tom')\n```\n\n#### RAW for migration\n```python\nawait db.raw(\"\"\"\n    CREATE TABLE users(\n        id                       INT NOT NULL,\n        created_at               DATE NOT NULL,\n        first_name               VARCHAR(100) NOT NULL,\n        last_name                VARCHAR(100) NOT NULL,\n        birthday_mmddyyyy        CHAR(10) NOT NULL,\n    )\n\"\"\")\n```\n\n### WITH Clause using VALUES Lists\nThe Postgres [VALUES](https://www.postgresql.org/docs/12/queries-values.html) provides a way to generate a \"constant table\" from a list of values. Together with the [WITH](https://www.postgresql.org/docs/12/queries-with.html) clause, a small set of data can be loaded into the DB and queried like a table.\n\n#### SELECT using WITH VALUES\n```python\n# WITH \"my_values\" (\"text_col\", \"bool_col\", \"num_col\", \"dict_col\", \"datetime_col\", \"null_col\", \"null_col2\") AS\n#   (VALUES \n#     ('Tom', TRUE, 2, '{\"id\": 1}'::jsonb, '2021-07-20 10:00:00+00:00'::timestamptz, NULL, NULL)\n#   )\n# SELECT * FROM \"my_values\"\nresult = await db.with_values('my_values', {\n    'text_col': 'Tom',\n    'bool_col': True,\n    'num_col': 2,\n    'dict_col': {'id': 1},\n    'datetime_col': datetime.now(),\n    'null_col': 'null',\n    'null_col2': None\n}).table('my_values').select()\nresult[0]['text_col']      # 'Tom'\nresult[0]['bool_col']      # True\nresult[0]['num_col']       # 2\nresult[0]['dict_col']      # '{\"id\": 1}'\nresult[0]['datetime_col']  # datetime.datetime(2021, 7, 20, 10, 0, tzinfo=datetime.timezone.utc)\nresult[0]['null_col']      # None\nresult[0]['null_col2']     # None\n\n# join other tables\n# WITH \"workers\" (\"task_id\", \"name\") AS \n#   (VALUES \n#     (1, 'Tom'), \n#     (2, 'Jerry')\n#   ) \n# SELECT\n#   \"workers\".\"name\" AS \"worker_name\",\n#   \"tasks\".\"name\" AS \"task_name\"\n# FROM \"workers\"\n# JOIN \"tasks\" ON \"workers\".\"task_id\" = \"tasks\".\"id\"\nawait db.with_values('workers', {\n    'task_id': 1,\n    'name': 'Tom'\n}, {\n    'task_id': 2,\n    'name': 'Jerry'\n}).table('workers').select(\n    'workers.name AS worker_name',\n    'tasks.name AS task_name'\n).join('tasks', 'workers.task_id = tasks.id').order_by('tasks.id')\n\n# multiple WITH VALUES\n# WITH \"workers1\" (\"task_id\", \"name\") AS\n#   (VALUES\n#     (1, 'Tom'),\n#     (2, 'Jerry')\n#   ), \"workers2\" (\"task_id\", \"name\") AS\n#   (VALUES\n#     (1, 'Topsy'), \n#     (2, 'Nibbles')\n#   )\n# SELECT\n#   \"workers1\".\"name\" AS \"primary_worker_name\",\n#   \"workers2\".\"name\" AS \"secondary_worker_name\",\n#   \"tasks\".\"name\" AS \"task_name\"\n# FROM \"tasks\"\n# JOIN \"workers1\" ON \"workers1\".\"task_id\" = \"tasks\".\"id\"\n# JOIN \"workers2\" ON \"workers2\".\"task_id\" = \"tasks\".\"id\"\nawait db.with_values('workers1', {\n    'task_id': 1,\n    'name': 'Tom'\n}, {\n    'task_id': 2,\n    'name': 'Jerry'\n}).with_values('workers2', {\n    'task_id': 1,\n    'name': 'Topsy'\n}, {\n    'task_id': 2,\n    'name': 'Nibbles'\n}).table('tasks').select(\n    'workers1.name AS primary_worker_name',\n    'workers2.name AS secondary_worker_name',\n    'tasks.name AS task_name'\n).join('workers1', 'workers1.task_id = tasks.id').\\\n    join('workers2', 'workers2.task_id = tasks.id')\n```\n\n#### UPDATE using WITH VALUES\n```python\n# WITH \"workers\" (\"task_id\", \"name\") AS\n#   (VALUES\n#     (1, 'Tom'), \n#     (2, 'Jerry')\n#   )\n# UPDATE \"tasks\" \n# SET\n#   \"name\" = \"tasks\".\"name\" || ' (worked by ' || \"workers\".\"name\" || ')'\n# FROM \"workers\"\n# WHERE\n#   \"workers\".\"task_id\" = \"tasks\".\"id\"\n# RETURNING\n#   \"workers\".\"name\" AS \"worker_name\",\n#   \"tasks\".\"name\" AS \"task_name\"\nawait db.with_values('workers', {\n    'task_id': 1,\n    'name': 'Tom'\n}, {\n    'task_id': 2,\n    'name': 'Jerry'\n}).table('tasks').update(\"name = tasks.name || ' (worked by ' || workers.name || ')'\").\\\n    from_table('workers').\\\n    where('workers.task_id = tasks.id').\\\n    returning(\n        'workers.name AS worker_name',\n        'tasks.name AS task_name'\n    )\n```\n\n#### RAW using WITH VALUES\n```python\n# WITH \"workers\" (\"task_id\", \"name\") AS\n#   (VALUES\n#     (1, 'Tom'), \n#     (2, 'Jerry')\n#   )\n# SELECT * FROM tasks WHERE EXISTS(\n#   SELECT 1 FROM workers\n#   JOIN task_results ON workers.task_id = task_results.task_id\n#   WHERE workers.task_id = tasks.id\n# )\nawait db.with_values('workers', {\n    'task_id': 1,\n    'name': 'Tom'\n}, {\n    'task_id': 2,\n    'name': 'Jerry'\n}).raw(\"\"\"\nSELECT * FROM tasks WHERE EXISTS(\n    SELECT 1 FROM workers\n    JOIN task_results ON workers.task_id = task_results.task_id\n    WHERE workers.task_id = tasks.id\n)\n\"\"\")\n```\n\n### JSONB examples\nMethods are created to support jsonb data type for some simple use cases.\n\n#### Create a table with jsonb data type\n```python\n# CREATE TABLE users (\n#    id     serial PRIMARY KEY,\n#    data   jsonb\n#)\nawait db.schema('TABLE users').create(\n    'id     serial PRIMARY KEY',\n    'data   jsonb',\n)\n```\n\n#### Select jsonb field\n```python\n# SELECT data->name AS name, data->>name AS name_text FROM users\nrows = await db.table('users').select('data', 'data->name AS name', 'data->>name AS name_text')\n# rows[0]['data'] == '{\"name\":\"Tom\"}'\n# rows[0]['name'] == '\"Tom\"'\n# rows[0]['name_text'] == 'Tom'\n\n# SELECT data->name AS name FROM users WHERE data->>name LIKE 'Tom%'\nawait db.table('users').select('data->name AS name').where('data->>name', 'LIKE', 'Tom%')\n\n# SELECT data->name AS name FROM users WHERE data->name = '\"Tom\"'\nawait db.table('users').select('data->name AS name').where(\"data->name\", 'Tom')\n```\n\n#### Insert jsonb field\n```python\n# INSERT INTO users (data) VALUES\n#   ('{\"name\": \"Tom\"}'),\n#   ('{\"name\": \"Jerry\"}')\n#   RETURNING *\nawait db.table('users').insert(\n    {'data': {'name': 'Tom'}},\n    {'data': {'name': 'Jerry'}},\n).returning()\n```\n\n#### Update jsonb field\n```python\n# UPDATE SET data = '{\"address\": {\"city\": \"New York\"}}'\nawait db.table('users').update({'data': {'address': {'city': 'New York'}}})\n\n# UPDATE SET data = jsonb_set(data, '{address,city}', '\"Chicago\"')\nawait db.table('users').update({'data->address->city': 'Chicago'})\n```\n\n### Migrations\nWindyquery has a preliminary support for database migrations. The provided command-line script is called `wq`. \n\n#### Generate a migration file\nA migration file can be created by,\n```bash\n# this creates a timestamped migration file, e.g. \"20210705233408_create_my_table.py\"\n$ wq make_migration --name=create_my_table\n```\n\nBy default, the new file is add to `database/migrations/` under the current working directory. If the diretory does not exist, it will be created first. The file contains an empty function to be filled by the user,\n```python\nasync def run(db):\n    # TODO: add code here\n    pass\n```\n\nSome sample migration templates are provided at [here](https://github.com/bluerelay/windyquery/blob/master/windyquery/scripts/migration_templates.py). They can be automatically inserted in the generated file by specifying the `--template` parameter,\n```bash\n# the generated file is pre-filled with some code template,\n# async def run(db):\n#     await db.schema('TABLE my_table').create(\n#         'id      serial PRIMARY KEY',\n#         'name    text not null unique',\n#     )\n$ wq make_migration --name=create_my_table --template=\"create table\"\n\n# create a migration file that contains all avaiable templates\n$ wq make_migration --name=create_my_table --template=all\n```\n\n#### Run migrations\nTo run all of the outstanding migrations, use the `migrate` sub-command,\n```bash\n$ wq migrate --host=localhost --port=5432 --database=my-db --username=my-name --password=my-pass\n\n# alternatively, the DB config can be provided by using environment variables\n$ DB_HOST=localhost DB_PORT=5432 DB_DATABASE=my-db DB_USERNAME=my-name DB_PASSWORD=my-pass wq migrate\n```\n\n#### Use custom directory and database table\nThe `wq` command requires a directory to save the migration files, and a database table to store executed migrations. By default, the migration directory is `database/migrations/` under the current working directroy, and the database table is named `migrations`. They are created automatically if they do not already exist.\nThe directory and table name can be customized by using `--migration_dir` and `--migration_table` parameters,\n```bash\n# creates the migrations file in \"my_db_work/migrations/\" of the current directory\n$ wq make_migration --name=create_my_table --migrations_dir=\"my_db_work/migrations\"\n\n# looks for outstanding migrations in \"my_db_work/migrations/\" and stores finished migrations in my_migrations table in DB\n$ wq migrate --host=localhost --port=5432 --database=my-db --username=my-name --password=my-pass --migrations_dir=\"my_db_work/migrations\" --migrations_table=my_migrations\n```\n\n### Syntax checker\nA very important part of windyquery is to validate the inputs of the various builder methods. It defines a [Validator](https://github.com/bluerelay/windyquery/blob/master/windyquery/validator/__init__.py) class, which is used to reject input strings not following the proper syntax.\nAs a result, it can be used separately as a syntax checker for other DB libraries. For example, it is very common for REST API to support filtering or searching parameters specified by the users,\n```python\n......\n# GET /example-api/users?name=Tom&state=AZ;DROP%20TABLE%20Students\nurl_query = \"name=Tom&state=AZ;DROP TABLE Students\"\nwhere = url_query.replace(\"&\", \" AND \")\n\nfrom windyquery.validator import Validator\nfrom windyquery.validator import ValidationError\nfrom windyquery.ctx import Ctx\n\ntry:\n    ctx = Ctx()\n    validator = Validator()\n    where = validator.validate_where(where, ctx)\nexcept ValidationError:\n    abort(400, f'Invalid query parameters: {url_query}')\n\nconnection = psycopg2.connect(**dbConfig)\ncursor = connection.cursor()\ncursor.execute(f'SELECT * FROM users WHERE {where}')\n......\n```\nPlease note,\n- Except `raw`, all windyquery's own builder methods, such as `select`, `update`, `where`, and so on, already implicitly use these validation functions. They may be useful when used alone, for example, to help other DB libraries validate SQL snippets;\n- These validation functions only cover a very small (though commonly used) subset of SQL grammar of Postgres.\n\n### Listen for a notification\nPostgres implements [LISTEN/NOTIFY](https://www.postgresql.org/docs/12/sql-listen.html) for interprocess communications.\nIn order to listen on a channel, use the DB.listen() method. It returns an awaitable object, which resolves to a dict when a notification fires.\n```python\nfrom windyquery.exceptions import ListenConnectionClosed\n\n# method 1: manually call start() and stop()\nlistener = db.listen('my_table')\nawait listener.start()\ntry:\n    for _ in range(100):\n        result = await listener\n        # or result = await listener.next()\n        print(result) \n        # {\n        #     'channel': 'my_table',\n        #     'payload': 'payload fired by the notifier',\n        #     'listener_pid': 7321,\n        #     'notifier_pid': 7322\n        # }\nexcept ListenConnectionClosed as e:\n    print(e)\nfinally:\n    await listener.stop()\n\n# method 2: use with statement\nasync with db.listen('my_table') as listener:\n    for _ in range(100):\n        result = await listener\n        print(result)\n```\n\n### RRULE\nWindyquery has a rrule function that can \"expand\" a rrule string into it occurrences (a list of datetimes) by using [dateutil](https://github.com/dateutil/dateutil). A values CTE is prepared from the rrule occurrences, which can be further used by other querries.\n\n#### A simple rrule example\n```python\nrruleStr = \"\"\"\nDTSTART:20210303T100000Z\nRRULE:FREQ=DAILY;COUNT=5\n\"\"\"\n\n# WITH my_rrules (\"rrule\") AS \n# (VALUES\n#   ('2021-03-03 10:00:00+00:00'::timestamptz),\n#   ('2021-03-04 10:00:00+00:00'::timestamptz),\n#   ('2021-03-05 10:00:00+00:00'::timestamptz),\n#   ('2021-03-06 10:00:00+00:00'::timestamptz),\n#   ('2021-03-07 10:00:00+00:00'::timestamptz)\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rrule': rruleStr}).table('my_rrules').select()\n```\n\n#### More than one rrules\n```python\nrruleStr1 = \"\"\"\nDTSTART:20210303T100000Z\nRRULE:FREQ=DAILY;COUNT=5\n\"\"\"\n\nrruleStr2 = \"\"\"\nDTSTART:20210303T100000Z\nRRULE:FREQ=DAILY;INTERVAL=10;COUNT=3\nRRULE:FREQ=DAILY;INTERVAL=5;COUNT=3\n\"\"\"\n\n# WITH my_rrules (\"rrule\") AS \n# (VALUES\n#   ('2021-03-03 10:00:00+00:00'::timestamptz),\n#   ('2021-03-04 10:00:00+00:00'::timestamptz),\n#   ('2021-03-05 10:00:00+00:00'::timestamptz),\n#   ('2021-03-06 10:00:00+00:00'::timestamptz),\n#   ('2021-03-07 10:00:00+00:00'::timestamptz),\n#   ('2021-03-03 10:00:00+00:00'::timestamptz),\n#   ('2021-03-08 10:00:00+00:00'::timestamptz),\n#   ('2021-03-13 10:00:00+00:00'::timestamptz),\n#   ('2021-03-23 10:00:00+00:00'::timestamptz)\n# )\n# SELECT * FROM my_rrules\n)\nawait db.rrule('my_rrules', {\n        'rrule': rruleStr1\n    }, {\n        'rrule': rruleStr2\n    }).table('my_rrules').select()\n\n# the rrule field can also take a list of mulitple rrules.\n# the previous example is equivalent to\nawait db.rrule('my_rrules', {\n        'rrule': [rruleStr1, rruleStr2]\n    }).table('my_rrules').select()\n```\n\n#### Use exrule\n```python\nrruleStr = \"\"\"\nDTSTART:20210303T100000Z\nRRULE:FREQ=DAILY;COUNT=5\n\"\"\"\n\nexruleStr = \"\"\"\nDTSTART:20210303T100000Z\nRRULE:FREQ=DAILY;BYWEEKDAY=SA,SU\n\"\"\"\n\n# WITH my_rrules (\"rrule\") AS \n# (VALUES\n#   ('2021-03-03 10:00:00+00:00'::timestamptz),\n#   ('2021-03-04 10:00:00+00:00'::timestamptz),\n#   ('2021-03-05 10:00:00+00:00'::timestamptz)\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rrule': rruleStr, 'exrule': exruleStr}).table('my_rrules').select()\n```\n\n#### Use rdate\n```python\n# WITH my_rrules (\"rrule\") AS \n# (VALUES\n#   ('2021-05-03 10:00:00+00:00'::timestamptz)\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rdate': '20210503T100000Z'}).table('my_rrules').select()\n\nrruleStr = \"\"\"\nDTSTART:20210303T100000Z\nRRULE:FREQ=DAILY;COUNT=5\n\"\"\"\n\n# WITH my_rrules (\"rrule\") AS \n# (VALUES\n#   ('2021-03-03 10:00:00+00:00'::timestamptz),\n#   ('2021-03-04 10:00:00+00:00'::timestamptz),\n#   ('2021-03-05 10:00:00+00:00'::timestamptz),\n#   ('2021-03-06 10:00:00+00:00'::timestamptz),\n#   ('2021-03-07 10:00:00+00:00'::timestamptz),\n#   ('2021-05-03 10:00:00+00:00'::timestamptz)\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rrule': rruleStr, 'rdate': '20210503T100000Z'}).table('my_rrules').select()\n\n# similary to rrule, the rdate field can take a list of date strings\n# WITH my_rrules (\"rrule\") AS \n# (VALUES\n#   ('2021-03-03 10:00:00+00:00'::timestamptz),\n#   ('2021-03-04 10:00:00+00:00'::timestamptz),\n#   ('2021-03-05 10:00:00+00:00'::timestamptz),\n#   ('2021-03-06 10:00:00+00:00'::timestamptz),\n#   ('2021-03-07 10:00:00+00:00'::timestamptz),\n#   ('2021-05-03 10:00:00+00:00'::timestamptz),\n#   ('2021-06-03 10:00:00+00:00'::timestamptz)\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rrule': rruleStr, 'rdate': ['20210503T100000Z','20210603T100000Z']}).table('my_rrules').select()\n```\n\n#### Use exdate\n```python\nrruleStr = \"\"\"\nDTSTART:20210303T100000Z\nRRULE:FREQ=DAILY;COUNT=5\n\"\"\"\n\n# WITH my_rrules (\"rrule\") AS \n# (VALUES\n#   ('2021-03-03 10:00:00+00:00'::timestamptz),\n#   ('2021-03-05 10:00:00+00:00'::timestamptz),\n#   ('2021-03-06 10:00:00+00:00'::timestamptz),\n#   ('2021-03-07 10:00:00+00:00'::timestamptz)\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rrule': rruleStr, 'exdate': '20210304T100000Z'}).table('my_rrules').select()\n\n# similary to rrule, the exdate field can take a list of date strings\n# WITH my_rrules (\"rrule\") AS \n# (VALUES\n#   ('2021-03-03 10:00:00+00:00'::timestamptz),\n#   ('2021-03-05 10:00:00+00:00'::timestamptz),\n#   ('2021-03-07 10:00:00+00:00'::timestamptz)\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rrule': rruleStr, 'exdate': ['20210304T100000Z','20210306T100000Z']}).table('my_rrules').select()\n```\n\n#### Use after, before, and between\n```python\nrruleStr = \"\"\"\nDTSTART:20210715T100000Z\nRRULE:FREQ=DAILY;COUNT=5\n\"\"\"\n\n# rrule_after returns the first recurrence after the given datetime dt.\n# WITH my_rrules (\"rrule\") AS \n# (VALUES\n#   ('2021-07-17 10:00:00+00:00'::timestamptz)\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rrule': rruleStr, 'rrule_after': {'dt': '20210716T100000Z'}}]}).table('my_rrules').select()\n\n# if the inc keyword is True dt is included if it is an occurrence.\n# WITH my_rrules (\"rrule\") AS \n# (VALUES\n#   ('2021-07-16 10:00:00+00:00'::timestamptz)\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rrule': rruleStr, 'rrule_after': {'dt': '20210716T100000Z', 'inc': True}}]}).table('my_rrules').select()\n\n# rrule_before returns the last recurrence before the given datetime dt.\n# WITH my_rrules (\"rrule\") AS \n# (VALUES\n#   ('2021-07-15 10:00:00+00:00'::timestamptz)\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rrule': rruleStr, 'rrule_before': {'dt': '20210716T100000Z'}}]}).table('my_rrules').select()\n\n# if the inc keyword is True dt is included if it is an occurrence.\n# WITH my_rrules (\"rrule\") AS \n# (VALUES\n#   ('2021-07-16 10:00:00+00:00'::timestamptz)\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rrule': rruleStr, 'rrule_before': {'dt': '20210716T100000Z', 'inc': True}}]}).table('my_rrules').select()\n\n# rrule_between returns all the occurrences of the rrule between after and before.\n# WITH my_rrules (\"rrule\") AS \n# (VALUES\n#   ('2021-07-17 10:00:00+00:00'::timestamptz)\n#   ('2021-07-18 10:00:00+00:00'::timestamptz)\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rrule': rruleStr, 'rrule_between': {'after': '20210716T100000Z', 'before': '20210719T100000Z'}}]}).table('my_rrules').select()\n\n# if the inc keyword is True after and/or before are included if they are occurrences.\n# WITH my_rrules (\"rrule\") AS \n# (VALUES\n#   ('2021-07-16 10:00:00+00:00'::timestamptz)\n#   ('2021-07-17 10:00:00+00:00'::timestamptz)\n#   ('2021-07-18 10:00:00+00:00'::timestamptz)\n#   ('2021-07-19 10:00:00+00:00'::timestamptz)\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rrule': rruleStr, 'rrule_between': {'after': '20210716T100000Z', 'before': '20210719T100000Z', 'inc': True}}]}).table('my_rrules').select()\n```\n\n#### Join rrule with other tables\n```python\nimport datetime\n\nrruleStr1 = \"\"\"\nDTSTART:20210303T100000Z\nRRULE:FREQ=DAILY;COUNT=5\n\"\"\"\n\nrruleStr2 = \"\"\"\nDTSTART:20210303T100000Z\nRRULE:FREQ=DAILY;INTERVAL=10;COUNT=3\nRRULE:FREQ=DAILY;INTERVAL=5;COUNT=3\n\"\"\"\n\n# WITH task_rrules (\"task_id\", \"rrule\") AS \n# (VALUES\n#   (1, '2021-03-03 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-04 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-05 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-06 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-07 10:00:00+00:00'::timestamptz),\n#   (2, '2021-03-03 10:00:00+00:00'::timestamptz),\n#   (2, '2021-03-08 10:00:00+00:00'::timestamptz),\n#   (2, '2021-03-13 10:00:00+00:00'::timestamptz),\n#   (2, '2021-03-23 10:00:00+00:00'::timestamptz)\n# )\n# SELECT task_rrules.rrule, tasks.name\n# FROM task_rrules\n# JOIN tasks ON tasks.id = task_rrules.task_id\n# WHERE\n#   rrule > '2021-03-05 10:00:00+00:00' AND\n#   rrule < '2021-03-08 10:00:00+00:00'\nawait db.rrule('task_rrules', {\n        'task_id': 1, 'rrule': rruleStr1\n    }, {\n        'task_id': 2, 'rrule': rruleStr2\n    }).table('task_rrules').\n    join('tasks', 'tasks.id', '=', 'task_rrules.task_id').\n    where('rrule > ? AND rrule < ?',\n        datetime.datetime(2021, 3, 5, 10, 0,\n                tzinfo=datetime.timezone.utc),\n        datetime.datetime(2021, 3, 8, 10, 0,\n                tzinfo=datetime.timezone.utc),\n    ).select('task_rrules.rrule', 'tasks.name')\n```\n\n#### Using rrule in update\n```python\nimport datetime\n\nrruleStr1 = \"\"\"\nDTSTART:20210303T100000Z\nRRULE:FREQ=DAILY;COUNT=5\n\"\"\"\n\nrruleStr2 = \"\"\"\nDTSTART:20210303T100000Z\nRRULE:FREQ=DAILY;INTERVAL=10;COUNT=3\nRRULE:FREQ=DAILY;INTERVAL=5;COUNT=3\n\"\"\"\n\n# WITH task_rrules (\"task_id\", \"rrule\") AS \n# (VALUES\n#   (1, '2021-03-03 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-04 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-05 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-06 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-07 10:00:00+00:00'::timestamptz),\n#   (2, '2021-03-03 10:00:00+00:00'::timestamptz),\n#   (2, '2021-03-08 10:00:00+00:00'::timestamptz),\n#   (2, '2021-03-13 10:00:00+00:00'::timestamptz),\n#   (2, '2021-03-23 10:00:00+00:00'::timestamptz)\n# )\n# UPDATE tasks SET result = 'done'\n# FROM task_rrules\n# WHERE task_rrules.task_id = tasks.id\nawait db.rrule('task_rrules', {\n        'task_id': 1, 'rrule': rruleStr1\n    }, {\n        'task_id': 2, 'rrule': rruleStr2\n    }).table('tasks').update(\"result = 'done'\").\n    from_table('task_rrules').\n    where('task_rrules.task_id = tasks.id')\n```\n\n#### Using rrule with raw method\n```python\nimport datetime\n\nrruleStr1 = \"\"\"\nDTSTART:20210303T100000Z\nRRULE:FREQ=DAILY;COUNT=5\n\"\"\"\n\nrruleStr2 = \"\"\"\nDTSTART:20210303T100000Z\nRRULE:FREQ=DAILY;INTERVAL=10;COUNT=3\nRRULE:FREQ=DAILY;INTERVAL=5;COUNT=3\n\"\"\"\n\n# WITH task_rrules (\"task_id\", \"rrule\") AS \n# (VALUES\n#   (1, '2021-03-03 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-04 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-05 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-06 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-07 10:00:00+00:00'::timestamptz),\n#   (2, '2021-03-03 10:00:00+00:00'::timestamptz),\n#   (2, '2021-03-08 10:00:00+00:00'::timestamptz),\n#   (2, '2021-03-13 10:00:00+00:00'::timestamptz),\n#   (2, '2021-03-23 10:00:00+00:00'::timestamptz)\n# )\n# DELETE FROM tasks\n# WHERE EXISTS(\n#   SELECT 1 FROM task_rrules\n#   WHERE\n#     task_id = tasks.id AND\n#     rrule > '2021-03-20 10:00:00+00:00'\n# )\n# RETURNING id, task_id\nawait db.rrule('task_rrules', {\n        'task_id': 1, 'rrule': rruleStr1\n    }, {\n        'task_id': 3, 'rrule': rruleStr2\n    }).raw(\"\"\"\n        DELETE FROM tasks\n        WHERE EXISTS(\n            SELECT 1 FROM task_rrules\n            WHERE \n                task_id = tasks.id AND\n                rrule > $1\n        )\n        RETURNING id, task_id\n    \"\"\", datetime.datetime(2021, 3, 20, 10, 0,\n                tzinfo=datetime.timezone.utc))\n```\n\n#### Using a slice to limit the occurrences\n```python\nimport datetime\n\nrruleStr = \"\"\"\nDTSTART:20210303T100000Z\nRRULE:FREQ=DAILY\n\"\"\"\n\n# WITH my_rrules (\"task_id\", \"rrule\") AS \n# (VALUES\n#   (1, '2021-03-03 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-04 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-05 10:00:00+00:00'::timestamptz),\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rrule': rruleStr, 'rrule_slice': slice(3)}).table('my_rrules').select()\n\n# WITH my_rrules (\"task_id\", \"rrule\") AS \n# (VALUES\n#   (1, '2021-03-13 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-15 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-17 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-19 10:00:00+00:00'::timestamptz),\n#   (1, '2021-03-21 10:00:00+00:00'::timestamptz),\n# )\n# SELECT * FROM my_rrules\nawait db.rrule('my_rrules', {'rrule': rruleStr, 'rrule_slice': slice(10,20,2)}).table('my_rrules').select()\n```\n\n\n### Tests\nWindyquery includes [tests](https://github.com/bluerelay/windyquery/tree/master/windyquery/tests). These tests are also served as examples on how to use this library.\n\n#### Running tests\nInstall pytest to run the included tests,\n```bash\npip install -U pytest\n```\n\nSet up a postgres server with preloaded data. This can be done by using [docker](https://docs.docker.com/install/) with the [official postgre docker image](https://hub.docker.com/_/postgres),\n```bash\ndocker run --rm --name windyquery-test -p 5432:5432 -v ${PWD}/windyquery/tests/seed_test_data.sql:/docker-entrypoint-initdb.d/seed_test_data.sql -e POSTGRES_USER=windyquery-test -e POSTGRES_PASSWORD=windyquery-test -e POSTGRES_DB=windyquery-test -d postgres:12-alpine\n```\n\nNote: to use existing postgres server, it must be configured to have the correct user, password, and database needed in tests/conftest.py. Data needed by tests is in tests/seed_test_data.sql.\n\nTo run the tests,\n```bash\npytest\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bluerelay/windyquery",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "windyquery",
    "package_url": "https://pypi.org/project/windyquery/",
    "platform": "",
    "project_url": "https://pypi.org/project/windyquery/",
    "project_urls": {
      "Homepage": "https://github.com/bluerelay/windyquery"
    },
    "release_url": "https://pypi.org/project/windyquery/0.0.33/",
    "requires_dist": [
      "asyncpg (==0.23.0)",
      "ply (==3.11)",
      "python-dateutil (==2.8.1)",
      "fire (==0.4.0)"
    ],
    "requires_python": "",
    "summary": "A non-blocking PostgreSQL query builder using Asyncio",
    "version": "0.0.33",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12695097,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8844f14fa7290e062940f1dd098c2d44c77fb5a4ac31b92693f4ca70db7139d",
          "md5": "3cb8f864e62ada6129fd1f50407f55e8",
          "sha256": "01e35461773aff34df808752c0a280b7fcd65ced2d002bf88e1cb6e0d034e96b"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3cb8f864e62ada6129fd1f50407f55e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21398,
        "upload_time": "2019-02-11T01:50:27",
        "upload_time_iso_8601": "2019-02-11T01:50:27.840873Z",
        "url": "https://files.pythonhosted.org/packages/b8/84/4f14fa7290e062940f1dd098c2d44c77fb5a4ac31b92693f4ca70db7139d/windyquery-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "530ae93b283d854615b13b34faf06675ea61b06734ad8c8c908a0dbbc069dc8d",
          "md5": "82471cba679a8c01bb9b264a748df413",
          "sha256": "04a7b48033c061f13dd8757a416b52c995228872278f609d2abeabaaa254146f"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "82471cba679a8c01bb9b264a748df413",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14162,
        "upload_time": "2019-02-11T01:50:29",
        "upload_time_iso_8601": "2019-02-11T01:50:29.686200Z",
        "url": "https://files.pythonhosted.org/packages/53/0a/e93b283d854615b13b34faf06675ea61b06734ad8c8c908a0dbbc069dc8d/windyquery-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e79770493475b80e7f5d396e880a4c7d63ba38eeab7314d4040bd9c654629fd",
          "md5": "3fbae0b4dc46e8c35a6511abc17afdc9",
          "sha256": "9545c41c83a9f695fe20ce256bd3a7357f36643098d47fa15eeb31b2b7c42bc4"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3fbae0b4dc46e8c35a6511abc17afdc9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 86087,
        "upload_time": "2021-02-20T22:49:02",
        "upload_time_iso_8601": "2021-02-20T22:49:02.993463Z",
        "url": "https://files.pythonhosted.org/packages/8e/79/770493475b80e7f5d396e880a4c7d63ba38eeab7314d4040bd9c654629fd/windyquery-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9508f945995762f32e2cb1e37c31643080daf5be7bf7d3ede8581c0f0f53ec5c",
          "md5": "bd1d5c6e76cf3f724f785743c6223ad5",
          "sha256": "26a20edd1415b87b23bae8684236e1bbddc8269518ad7d2085a5dc943f0be5b6"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "bd1d5c6e76cf3f724f785743c6223ad5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46506,
        "upload_time": "2021-02-20T22:49:08",
        "upload_time_iso_8601": "2021-02-20T22:49:08.302787Z",
        "url": "https://files.pythonhosted.org/packages/95/08/f945995762f32e2cb1e37c31643080daf5be7bf7d3ede8581c0f0f53ec5c/windyquery-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "803fdb95995690ee1ce830814e25154e29d819536333e09541cb47ae35909326",
          "md5": "2bbaccd1a5c49380f1656115133aed40",
          "sha256": "ee2cf9fb2a3520ad42a00485a43587054d487edd3646657559facd420b4fc46c"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2bbaccd1a5c49380f1656115133aed40",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 86094,
        "upload_time": "2021-02-28T02:05:08",
        "upload_time_iso_8601": "2021-02-28T02:05:08.053351Z",
        "url": "https://files.pythonhosted.org/packages/80/3f/db95995690ee1ce830814e25154e29d819536333e09541cb47ae35909326/windyquery-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2903908a975e2a9a7c55f2ba5ac0de390bc2c5016e4b5266f61d0c394162f68",
          "md5": "31ebb229a34885c739dde0db83d899b9",
          "sha256": "d7f18a540189f5065c99762aa9385c465525fd4299be226cb1641e25284a0065"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "31ebb229a34885c739dde0db83d899b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46434,
        "upload_time": "2021-02-28T02:05:13",
        "upload_time_iso_8601": "2021-02-28T02:05:13.997515Z",
        "url": "https://files.pythonhosted.org/packages/c2/90/3908a975e2a9a7c55f2ba5ac0de390bc2c5016e4b5266f61d0c394162f68/windyquery-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "974bc7e0f5b720f258dcadcb49719b7c7c21864c034c24fd8cc3798e037cf6b5",
          "md5": "e5500de4fdaaaf16eb243b109c059fa3",
          "sha256": "b9e89fdf542cd6510dc213743eec93be51921f212310473950dbe7592f9beedc"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5500de4fdaaaf16eb243b109c059fa3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 90894,
        "upload_time": "2021-03-04T05:50:15",
        "upload_time_iso_8601": "2021-03-04T05:50:15.384009Z",
        "url": "https://files.pythonhosted.org/packages/97/4b/c7e0f5b720f258dcadcb49719b7c7c21864c034c24fd8cc3798e037cf6b5/windyquery-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5ebfbeca64b5065fa9f7740bcc79e6bc463ae814a5c30807d69dffd0c5c5eba",
          "md5": "8b87826728bbc8289540563c7a644773",
          "sha256": "a4217796c0094ef559d03f84e82c370baf6338de3559e48bb4d38693513c3e1f"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "8b87826728bbc8289540563c7a644773",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50780,
        "upload_time": "2021-03-04T05:50:22",
        "upload_time_iso_8601": "2021-03-04T05:50:22.144277Z",
        "url": "https://files.pythonhosted.org/packages/a5/eb/fbeca64b5065fa9f7740bcc79e6bc463ae814a5c30807d69dffd0c5c5eba/windyquery-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e454a56f5f1c44a736f95c523c3d10009edbe7e9daf419cf85c7b2439af5c784",
          "md5": "3c64e40f3a6d7719b4aca1e255d69c76",
          "sha256": "1fcf094c78046720e5eb9cee49f6c829334a1fd78bb6c07804c40a9d3d2ff5a7"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c64e40f3a6d7719b4aca1e255d69c76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 91138,
        "upload_time": "2021-03-05T05:28:58",
        "upload_time_iso_8601": "2021-03-05T05:28:58.213231Z",
        "url": "https://files.pythonhosted.org/packages/e4/54/a56f5f1c44a736f95c523c3d10009edbe7e9daf419cf85c7b2439af5c784/windyquery-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa8ba81f1ade6740c2445fd3a39ba98e75ec3a1277c53477ccd594e5a3f8963b",
          "md5": "5e7387b60286a0725fa20effa11c04ac",
          "sha256": "479e74e86bc4a69c71e77819865b18a1931eea95649acbeaddf9ce0f0dcd6867"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "5e7387b60286a0725fa20effa11c04ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51156,
        "upload_time": "2021-03-05T05:29:07",
        "upload_time_iso_8601": "2021-03-05T05:29:07.077949Z",
        "url": "https://files.pythonhosted.org/packages/aa/8b/a81f1ade6740c2445fd3a39ba98e75ec3a1277c53477ccd594e5a3f8963b/windyquery-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffe089e81e1940f3e85f3d50d1c4d3bf1f2dd584fbe990da8be3a7d17e134f83",
          "md5": "00ada8d6ca598c90aba4deae036c7e65",
          "sha256": "b0a4bacdbc78a72cb84ab143aaf090630ae809273bfdf504014b715e4c73c5d4"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "00ada8d6ca598c90aba4deae036c7e65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 91525,
        "upload_time": "2021-03-09T06:12:56",
        "upload_time_iso_8601": "2021-03-09T06:12:56.009491Z",
        "url": "https://files.pythonhosted.org/packages/ff/e0/89e81e1940f3e85f3d50d1c4d3bf1f2dd584fbe990da8be3a7d17e134f83/windyquery-0.0.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "848f63376d44e6cdd6de038cf277385bbecd97bb463b9f2d7da14df3d5eb3380",
          "md5": "775f0a3dadfa95a15eb197a45a07e49c",
          "sha256": "100e5e5abfa752c01867f549512c5e3c6cf324185043463b632c57374b1cd308"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "775f0a3dadfa95a15eb197a45a07e49c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51453,
        "upload_time": "2021-03-09T06:13:05",
        "upload_time_iso_8601": "2021-03-09T06:13:05.260915Z",
        "url": "https://files.pythonhosted.org/packages/84/8f/63376d44e6cdd6de038cf277385bbecd97bb463b9f2d7da14df3d5eb3380/windyquery-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "494a8927550a37236b6183898cf393819c538f00aefc7c7f976e7325ae8dc9b5",
          "md5": "2c03495a6b4bc044ed920d41daf76b3d",
          "sha256": "e25898b5962534029bfc7dbc2790c32d042cc4eaf5f7775db7917bd8f6b96d24"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c03495a6b4bc044ed920d41daf76b3d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 91591,
        "upload_time": "2021-03-09T21:03:52",
        "upload_time_iso_8601": "2021-03-09T21:03:52.451241Z",
        "url": "https://files.pythonhosted.org/packages/49/4a/8927550a37236b6183898cf393819c538f00aefc7c7f976e7325ae8dc9b5/windyquery-0.0.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9238dc87847fedc09758f7cdbb41c5029656bf0b59b32d79e136574fc351262a",
          "md5": "54fd6f9c2d3d6ba4269861dfcac73494",
          "sha256": "f997f97a47b5176b7de8afa63a4579edd9e70b7c762bdb68a6f092b0849ae9be"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "54fd6f9c2d3d6ba4269861dfcac73494",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51494,
        "upload_time": "2021-03-09T21:03:54",
        "upload_time_iso_8601": "2021-03-09T21:03:54.672914Z",
        "url": "https://files.pythonhosted.org/packages/92/38/dc87847fedc09758f7cdbb41c5029656bf0b59b32d79e136574fc351262a/windyquery-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e749febedb511697c6e759721919a824aa335509881f07dc4dd0a6bd5ae01df9",
          "md5": "a6cb8918a5a8f3f2a762c630213f067a",
          "sha256": "c2c3c09ef52170047782cf92b0e39317f3feaeb7467098d6d159161fcaa2c0e1"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.16-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6cb8918a5a8f3f2a762c630213f067a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 91749,
        "upload_time": "2021-03-10T03:56:03",
        "upload_time_iso_8601": "2021-03-10T03:56:03.851402Z",
        "url": "https://files.pythonhosted.org/packages/e7/49/febedb511697c6e759721919a824aa335509881f07dc4dd0a6bd5ae01df9/windyquery-0.0.16-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72d5cdafc10c63bccda14ca5fc47a9e0ee09522a0da015c3a250db6a36596411",
          "md5": "2a38d606b9e675bffd70f43b9c5185e8",
          "sha256": "18089a17d8a7a46f5b6206175da7cacdc7cab971b0b06ada9d32af2e35030fe9"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "2a38d606b9e675bffd70f43b9c5185e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51618,
        "upload_time": "2021-03-10T03:56:07",
        "upload_time_iso_8601": "2021-03-10T03:56:07.092761Z",
        "url": "https://files.pythonhosted.org/packages/72/d5/cdafc10c63bccda14ca5fc47a9e0ee09522a0da015c3a250db6a36596411/windyquery-0.0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6e75942a03e9bd3c11a8afd863490b5e23d93f26c3b96491068d966f718c497",
          "md5": "2d7c9b7fa3a24c579f08793c7ed5bca1",
          "sha256": "25d50732c7fbe92432254680e0297d25c417956dd37ecbe11227bf01c7ff49a1"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d7c9b7fa3a24c579f08793c7ed5bca1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 92444,
        "upload_time": "2021-03-11T01:12:20",
        "upload_time_iso_8601": "2021-03-11T01:12:20.849620Z",
        "url": "https://files.pythonhosted.org/packages/b6/e7/5942a03e9bd3c11a8afd863490b5e23d93f26c3b96491068d966f718c497/windyquery-0.0.17-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d01b8c5191213f4181eb5dc1afb2c647962d4fdc5053d709e14af487351be93",
          "md5": "b704aa6fc802e19f03a2a06eecaac4dd",
          "sha256": "0f4756a1aa209079415f17d8082f126f4051eb1cdae48b8224be3e6c78da4f2f"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "b704aa6fc802e19f03a2a06eecaac4dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 52305,
        "upload_time": "2021-03-11T01:12:22",
        "upload_time_iso_8601": "2021-03-11T01:12:22.901342Z",
        "url": "https://files.pythonhosted.org/packages/4d/01/b8c5191213f4181eb5dc1afb2c647962d4fdc5053d709e14af487351be93/windyquery-0.0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9ab7e6db294455002a82c04b3de416f9769c5146de1b82ca7bb22446c4a5f03",
          "md5": "daf00410214a4dbcf648fafb137545fa",
          "sha256": "4e7dd38b5fc6afa2b9c5c06b6b47f81662433cc9820ca43e2e1630331c3b4b25"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.18-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "daf00410214a4dbcf648fafb137545fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 92555,
        "upload_time": "2021-03-21T15:24:59",
        "upload_time_iso_8601": "2021-03-21T15:24:59.402792Z",
        "url": "https://files.pythonhosted.org/packages/a9/ab/7e6db294455002a82c04b3de416f9769c5146de1b82ca7bb22446c4a5f03/windyquery-0.0.18-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6e68f2888bc1dcec46d5c1468aa8013702838b71edb71d7b6195ca205745099",
          "md5": "275880fb956a5c060d6b8985e80b94d5",
          "sha256": "cf772bb682aeb12410ccfcdb9ca90af154cce1c505ad2e42ddd2630e030bfbb2"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.18.tar.gz",
        "has_sig": false,
        "md5_digest": "275880fb956a5c060d6b8985e80b94d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 52433,
        "upload_time": "2021-03-21T15:25:03",
        "upload_time_iso_8601": "2021-03-21T15:25:03.037239Z",
        "url": "https://files.pythonhosted.org/packages/f6/e6/8f2888bc1dcec46d5c1468aa8013702838b71edb71d7b6195ca205745099/windyquery-0.0.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "372e4be47fa690a49928985edc9d5d2c769505cd6e54f4d1440bfd5a28456a9f",
          "md5": "e52ba983bfb358e803d8fea7b377a964",
          "sha256": "cf43c6ec2af423dfa2efc6b378e0abbf275f84bbb2b5532ff539e7a536830636"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.19-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e52ba983bfb358e803d8fea7b377a964",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 92650,
        "upload_time": "2021-04-25T05:03:50",
        "upload_time_iso_8601": "2021-04-25T05:03:50.580778Z",
        "url": "https://files.pythonhosted.org/packages/37/2e/4be47fa690a49928985edc9d5d2c769505cd6e54f4d1440bfd5a28456a9f/windyquery-0.0.19-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df37d3b9dae118c1af0edde357c3e0803cbe600bbb85c9173114bbf2b4728d8b",
          "md5": "d21fc08013e8b4d810444dde915afb52",
          "sha256": "ba1af74385b9361259614fbb062af47f6fa2ae672db90a6a71695bff50903f48"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.19.tar.gz",
        "has_sig": false,
        "md5_digest": "d21fc08013e8b4d810444dde915afb52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 52624,
        "upload_time": "2021-04-25T05:03:55",
        "upload_time_iso_8601": "2021-04-25T05:03:55.593995Z",
        "url": "https://files.pythonhosted.org/packages/df/37/d3b9dae118c1af0edde357c3e0803cbe600bbb85c9173114bbf2b4728d8b/windyquery-0.0.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d1a0d67aaa8d37daa96a5c9f7ecf897a56e2ec6ce9effd73eaa3dc75af502ec",
          "md5": "3f01b687c4d4e97ccf206f775a646e70",
          "sha256": "82719caef4339c3d8c200d7744b784a762f409198a22eabe20679380d6008f74"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f01b687c4d4e97ccf206f775a646e70",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22988,
        "upload_time": "2019-02-11T18:27:51",
        "upload_time_iso_8601": "2019-02-11T18:27:51.121051Z",
        "url": "https://files.pythonhosted.org/packages/6d/1a/0d67aaa8d37daa96a5c9f7ecf897a56e2ec6ce9effd73eaa3dc75af502ec/windyquery-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4adabc1fcbf53a1441cbadf2a075f5ab42c67d03bf224e8511d42018bfa885ed",
          "md5": "b7af791e0bf43de3d40c6a217823afac",
          "sha256": "9449574bb801ba5d53a3f5c4f9928f85e76152b4df53dd58ddf25349879e8a28"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b7af791e0bf43de3d40c6a217823afac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16163,
        "upload_time": "2019-02-11T18:27:52",
        "upload_time_iso_8601": "2019-02-11T18:27:52.549043Z",
        "url": "https://files.pythonhosted.org/packages/4a/da/bc1fcbf53a1441cbadf2a075f5ab42c67d03bf224e8511d42018bfa885ed/windyquery-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7305392776ea57bb49057ff47da011baad885163506c2a2b91e69bf15ab43f99",
          "md5": "29914b371d2822c4ca2e497ccd2e2135",
          "sha256": "e907af603d6283e89846db29e8745491b06a86163a82ad0a73154341c95220c8"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.20-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29914b371d2822c4ca2e497ccd2e2135",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 93606,
        "upload_time": "2021-05-10T01:39:56",
        "upload_time_iso_8601": "2021-05-10T01:39:56.307515Z",
        "url": "https://files.pythonhosted.org/packages/73/05/392776ea57bb49057ff47da011baad885163506c2a2b91e69bf15ab43f99/windyquery-0.0.20-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f4f2610e60de9018ff9bb09fe402b338d992e59e2f01704140d472a103362fb",
          "md5": "ff77a5a144d1c64008564344c1a50df0",
          "sha256": "f85b43deb2b93ed1558ce5b007c5d700edeb63305336256bdf1ac619bd2d0d5f"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.20.tar.gz",
        "has_sig": false,
        "md5_digest": "ff77a5a144d1c64008564344c1a50df0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53850,
        "upload_time": "2021-05-10T01:40:01",
        "upload_time_iso_8601": "2021-05-10T01:40:01.986786Z",
        "url": "https://files.pythonhosted.org/packages/3f/4f/2610e60de9018ff9bb09fe402b338d992e59e2f01704140d472a103362fb/windyquery-0.0.20.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.21": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bde8c3eb8c3921b66a696107ab6fe59675188985061231566c86eb9db875a52",
          "md5": "b971d2a0abab3116316199723449b48a",
          "sha256": "e59c29524793bae88c201dea031cdd3d2fc8a46d9afbb9b61cd6588f564bac6c"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.21-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b971d2a0abab3116316199723449b48a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 93978,
        "upload_time": "2021-06-01T02:01:39",
        "upload_time_iso_8601": "2021-06-01T02:01:39.584339Z",
        "url": "https://files.pythonhosted.org/packages/2b/de/8c3eb8c3921b66a696107ab6fe59675188985061231566c86eb9db875a52/windyquery-0.0.21-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "758c2e5b5210ac5a6ddad47963d1cfa7dfd2ad5ef3762781b2c54f09911aae1c",
          "md5": "10cb27378833ea21cd7ecaf7d46b8285",
          "sha256": "45c4a6db64184a90a9a06a110468a9cefec052e78bfbb06c5f63358b7676d912"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.21.tar.gz",
        "has_sig": false,
        "md5_digest": "10cb27378833ea21cd7ecaf7d46b8285",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54077,
        "upload_time": "2021-06-01T02:01:46",
        "upload_time_iso_8601": "2021-06-01T02:01:46.642258Z",
        "url": "https://files.pythonhosted.org/packages/75/8c/2e5b5210ac5a6ddad47963d1cfa7dfd2ad5ef3762781b2c54f09911aae1c/windyquery-0.0.21.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.22": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "506050e9741e2d36f6e03ba52d265744c4f45c15eaa6d3658d35c1498090f38b",
          "md5": "5bca9a0fbe02ac5fad9aa8fa3d83ae0a",
          "sha256": "1830349b2986b9b58b4ed1bb8ae0e27e7f88d75a9de22f2ed1a15d01e61cb160"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.22-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bca9a0fbe02ac5fad9aa8fa3d83ae0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 94035,
        "upload_time": "2021-06-01T03:40:19",
        "upload_time_iso_8601": "2021-06-01T03:40:19.280926Z",
        "url": "https://files.pythonhosted.org/packages/50/60/50e9741e2d36f6e03ba52d265744c4f45c15eaa6d3658d35c1498090f38b/windyquery-0.0.22-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9017cd946a2d9bb2247427d37b91964ed003fd6f50e346f86ec1f83c601e5b23",
          "md5": "800abc626cff52c2ccf57a04aec4c061",
          "sha256": "dd04333a092b15ba6d789d7bdb6a98be498d44a4ddaf31332ebb115c7378a287"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.22.tar.gz",
        "has_sig": false,
        "md5_digest": "800abc626cff52c2ccf57a04aec4c061",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54124,
        "upload_time": "2021-06-01T03:40:24",
        "upload_time_iso_8601": "2021-06-01T03:40:24.222134Z",
        "url": "https://files.pythonhosted.org/packages/90/17/cd946a2d9bb2247427d37b91964ed003fd6f50e346f86ec1f83c601e5b23/windyquery-0.0.22.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.23": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06e04ba50c827fa0a41430cfc00c7c7f20cc3d5c948fc3fc00b6571c920022e6",
          "md5": "22c4f078ae9a41678027e8b4ae3b4513",
          "sha256": "9239e08b11ff7ca2d5faad40b2e870067b0c7f09bf7c24217686650675e20fb7"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.23-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22c4f078ae9a41678027e8b4ae3b4513",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 94871,
        "upload_time": "2021-06-20T03:25:19",
        "upload_time_iso_8601": "2021-06-20T03:25:19.886755Z",
        "url": "https://files.pythonhosted.org/packages/06/e0/4ba50c827fa0a41430cfc00c7c7f20cc3d5c948fc3fc00b6571c920022e6/windyquery-0.0.23-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64dfe68febc1ca9ebfc971cf8a993107ad58f9881f701c42fcfc9f747aa7f73c",
          "md5": "aaa5a04ec9038e13cd47cbba9bc623c6",
          "sha256": "f590ddf87079cd4dbb6bd5c372a2be75e2223334b83944bafbf6aa5c39687224"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.23.tar.gz",
        "has_sig": false,
        "md5_digest": "aaa5a04ec9038e13cd47cbba9bc623c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 55695,
        "upload_time": "2021-06-20T03:25:26",
        "upload_time_iso_8601": "2021-06-20T03:25:26.616557Z",
        "url": "https://files.pythonhosted.org/packages/64/df/e68febc1ca9ebfc971cf8a993107ad58f9881f701c42fcfc9f747aa7f73c/windyquery-0.0.23.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.24": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b371f30033641664628e338ac662372864aea8ad35708d7a0959f34a7f5903bd",
          "md5": "e9d4657930f984ca803260476800b492",
          "sha256": "8c5fca4cbf0804625d47c4608db0cb69673236b9f8cf2473de69d45e3cd64ab2"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.24-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9d4657930f984ca803260476800b492",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 100681,
        "upload_time": "2021-07-07T00:12:54",
        "upload_time_iso_8601": "2021-07-07T00:12:54.085302Z",
        "url": "https://files.pythonhosted.org/packages/b3/71/f30033641664628e338ac662372864aea8ad35708d7a0959f34a7f5903bd/windyquery-0.0.24-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba9cf9491c36954c4adabe20fa8ab56c19dabc774984f2928bef3fba4c95da28",
          "md5": "737ca7036efdde38f177f29d3ea13913",
          "sha256": "9f6ef3b728800a7f8954fa50bef8be30a67ab8d93c4b397801802d98f34c280d"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.24.tar.gz",
        "has_sig": false,
        "md5_digest": "737ca7036efdde38f177f29d3ea13913",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 62360,
        "upload_time": "2021-07-07T00:13:00",
        "upload_time_iso_8601": "2021-07-07T00:13:00.461767Z",
        "url": "https://files.pythonhosted.org/packages/ba/9c/f9491c36954c4adabe20fa8ab56c19dabc774984f2928bef3fba4c95da28/windyquery-0.0.24.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.25": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c9708f3ea08618748307630446c14efa7e0ed7ae79db2d35be9506a1ec35ef8",
          "md5": "d3f49c1142235bf5ca8697bb41a20751",
          "sha256": "d137086cc3a889ee57f17293754660da7457eaf8f8243bc2c1b9143b50dec2cb"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.25-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3f49c1142235bf5ca8697bb41a20751",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 100849,
        "upload_time": "2021-07-13T04:12:04",
        "upload_time_iso_8601": "2021-07-13T04:12:04.802365Z",
        "url": "https://files.pythonhosted.org/packages/3c/97/08f3ea08618748307630446c14efa7e0ed7ae79db2d35be9506a1ec35ef8/windyquery-0.0.25-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efe7dfed3812d66078f4eae348dc261c6dd3e44f190c2dacc352c3d7f3b07ff5",
          "md5": "8d2a337e36736460848b198e4297d832",
          "sha256": "2bac74678371137176472cf6852a62e873c5abce126d959769a0a5d64ae87569"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.25.tar.gz",
        "has_sig": false,
        "md5_digest": "8d2a337e36736460848b198e4297d832",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 63637,
        "upload_time": "2021-07-13T04:12:13",
        "upload_time_iso_8601": "2021-07-13T04:12:13.922839Z",
        "url": "https://files.pythonhosted.org/packages/ef/e7/dfed3812d66078f4eae348dc261c6dd3e44f190c2dacc352c3d7f3b07ff5/windyquery-0.0.25.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.26": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d15430fa8c35f3f9ae52b337e8ac6d63c9c196552136a5f58a955ee6af207f3",
          "md5": "54c6d38a58d3c0c326ef7b595cc7921a",
          "sha256": "c66d81208294f1646f9517375c478379209303d378cabf610246f5ba86caf341"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.26-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54c6d38a58d3c0c326ef7b595cc7921a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 102637,
        "upload_time": "2021-07-16T04:27:28",
        "upload_time_iso_8601": "2021-07-16T04:27:28.612804Z",
        "url": "https://files.pythonhosted.org/packages/0d/15/430fa8c35f3f9ae52b337e8ac6d63c9c196552136a5f58a955ee6af207f3/windyquery-0.0.26-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5169f1291249827f2d2cdd5614e250a52d4d882e0e9580f538413ce011e705d8",
          "md5": "01543fd249525a0abe37cf2e517b8fb4",
          "sha256": "7f5b88b7d1a854e67800c5dce13d0dbf5cf66efd9991e3969835e689a883b729"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.26.tar.gz",
        "has_sig": false,
        "md5_digest": "01543fd249525a0abe37cf2e517b8fb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 67541,
        "upload_time": "2021-07-16T04:27:31",
        "upload_time_iso_8601": "2021-07-16T04:27:31.282790Z",
        "url": "https://files.pythonhosted.org/packages/51/69/f1291249827f2d2cdd5614e250a52d4d882e0e9580f538413ce011e705d8/windyquery-0.0.26.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.27": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64c803f71dd5aed19960545ff0006c4040c152d04ff7f5123f47af532d5c1507",
          "md5": "9d681ede3a021bf049f377dd4e2f842a",
          "sha256": "6d92a7b0c458224066cfe11ca506f7a2528683a4fcc4879679cbd85808ec8bb7"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.27-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d681ede3a021bf049f377dd4e2f842a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 106530,
        "upload_time": "2021-07-21T05:22:26",
        "upload_time_iso_8601": "2021-07-21T05:22:26.276936Z",
        "url": "https://files.pythonhosted.org/packages/64/c8/03f71dd5aed19960545ff0006c4040c152d04ff7f5123f47af532d5c1507/windyquery-0.0.27-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "745e38f4ac95cd3222f07e0957c4ad748349e1b556dcbf1b7189ccce5a6e8445",
          "md5": "8fe58609c02d19968b00fa4bb425a762",
          "sha256": "098afbbe957c7c406352c5207aee8fe4defcf239d2dc4cc96610b80b77d2f3be"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.27.tar.gz",
        "has_sig": false,
        "md5_digest": "8fe58609c02d19968b00fa4bb425a762",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 71477,
        "upload_time": "2021-07-21T05:22:31",
        "upload_time_iso_8601": "2021-07-21T05:22:31.198779Z",
        "url": "https://files.pythonhosted.org/packages/74/5e/38f4ac95cd3222f07e0957c4ad748349e1b556dcbf1b7189ccce5a6e8445/windyquery-0.0.27.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.28": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9a93c28fe9bd2849995e46f7509e5f6e2689e9dce092e8ddffb8f078eabf4cd",
          "md5": "8007bf440a6feeead17fa1b4a06ac075",
          "sha256": "027bac235edf554ed3486e306649966e084d01d043a06633a97fa30b9abcd007"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.28-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8007bf440a6feeead17fa1b4a06ac075",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 107047,
        "upload_time": "2021-08-27T04:45:45",
        "upload_time_iso_8601": "2021-08-27T04:45:45.929831Z",
        "url": "https://files.pythonhosted.org/packages/b9/a9/3c28fe9bd2849995e46f7509e5f6e2689e9dce092e8ddffb8f078eabf4cd/windyquery-0.0.28-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0f5fd70d756c17adfdbe8b84fa682cc234571d43581b9d6efb34a4261ba44bf",
          "md5": "edb0bca02aff96c2f181e9bd12c6e8d7",
          "sha256": "dcf69bfc27929e4e66a4096c493946e6c84da0ca74b2d43df36986e16502e060"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.28.tar.gz",
        "has_sig": false,
        "md5_digest": "edb0bca02aff96c2f181e9bd12c6e8d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 72674,
        "upload_time": "2021-08-27T04:45:51",
        "upload_time_iso_8601": "2021-08-27T04:45:51.317112Z",
        "url": "https://files.pythonhosted.org/packages/d0/f5/fd70d756c17adfdbe8b84fa682cc234571d43581b9d6efb34a4261ba44bf/windyquery-0.0.28.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.29": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bcf6cd90440a3923d39ffb5c81eef23e820100ecbbe51970a2bdb846011a79c",
          "md5": "6ab332315ea09a8f36ea4b7a8eae4abd",
          "sha256": "44d3c48b339da62412aa0c4e8be29f6ae3a3abb99e0e06c16a2cae391f893f6b"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.29-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ab332315ea09a8f36ea4b7a8eae4abd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 107079,
        "upload_time": "2021-12-16T02:42:36",
        "upload_time_iso_8601": "2021-12-16T02:42:36.555016Z",
        "url": "https://files.pythonhosted.org/packages/8b/cf/6cd90440a3923d39ffb5c81eef23e820100ecbbe51970a2bdb846011a79c/windyquery-0.0.29-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0fa1d4cee75b2632051a37563696aeb40ce73e58909a7614791a26533f729f1",
          "md5": "cf3e0d59d6255938d19d8720139f0572",
          "sha256": "ae98056e43c220b6b58608094efb78326cb8e14e34afcfc5110018e56558c2b5"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.29.tar.gz",
        "has_sig": false,
        "md5_digest": "cf3e0d59d6255938d19d8720139f0572",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 72736,
        "upload_time": "2021-12-16T02:42:43",
        "upload_time_iso_8601": "2021-12-16T02:42:43.882260Z",
        "url": "https://files.pythonhosted.org/packages/b0/fa/1d4cee75b2632051a37563696aeb40ce73e58909a7614791a26533f729f1/windyquery-0.0.29.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44ea510919b3b5a745d9c16495348396aabebeb225cedd34326e8d72c2e77e4d",
          "md5": "a2de0acb274b9bd724a41780d0f23801",
          "sha256": "6f5b92c23fe673a4f4ab7d896baa244cee5cb48b611082eba9eb86ccf29979b6"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2de0acb274b9bd724a41780d0f23801",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23998,
        "upload_time": "2019-11-10T01:07:09",
        "upload_time_iso_8601": "2019-11-10T01:07:09.692753Z",
        "url": "https://files.pythonhosted.org/packages/44/ea/510919b3b5a745d9c16495348396aabebeb225cedd34326e8d72c2e77e4d/windyquery-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87192822cb6c54d6c1440aff8e3374bfa713dcd67eb4f643b173b7160648a7a9",
          "md5": "f8bc83868f79879485420f969e23e503",
          "sha256": "70dae58d530ad63741f4793b4601f4c9b1ac08e942a08c4b92c211a0e2a6b6e1"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f8bc83868f79879485420f969e23e503",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19772,
        "upload_time": "2019-11-10T01:07:11",
        "upload_time_iso_8601": "2019-11-10T01:07:11.822700Z",
        "url": "https://files.pythonhosted.org/packages/87/19/2822cb6c54d6c1440aff8e3374bfa713dcd67eb4f643b173b7160648a7a9/windyquery-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.30": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f47a4a58df605bfbe13318f91b3d17a5c3ecbefe20e0e67b85dc0a45d250da38",
          "md5": "28e54d3f661f946b38793c9337e3dbb0",
          "sha256": "1c371d97c476523d95eb3a8d8e4313ff107e0f5d63db8bd357b19ca22ba9edb9"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.30-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28e54d3f661f946b38793c9337e3dbb0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 107220,
        "upload_time": "2022-01-05T05:29:28",
        "upload_time_iso_8601": "2022-01-05T05:29:28.477657Z",
        "url": "https://files.pythonhosted.org/packages/f4/7a/4a58df605bfbe13318f91b3d17a5c3ecbefe20e0e67b85dc0a45d250da38/windyquery-0.0.30-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4f021f1f336fd738d73fd1e7a62b102bdaa17128109a845e440df90e83915bd",
          "md5": "f1f363e92d918e7c00e0f41a9269c316",
          "sha256": "f503a0274320dbc1ac149c3ebd4cbdf8eb4d1d6b06775919caecb3e7cdab16e1"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.30.tar.gz",
        "has_sig": false,
        "md5_digest": "f1f363e92d918e7c00e0f41a9269c316",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 72860,
        "upload_time": "2022-01-05T05:29:37",
        "upload_time_iso_8601": "2022-01-05T05:29:37.094068Z",
        "url": "https://files.pythonhosted.org/packages/a4/f0/21f1f336fd738d73fd1e7a62b102bdaa17128109a845e440df90e83915bd/windyquery-0.0.30.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.31": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66bd906857c239efd050d4a25b6dc20aea88ad965f3b562a7a5597a9200e3651",
          "md5": "0d2c96bb1b7c92c1c29b2e58e95fe9b0",
          "sha256": "2395b7bc871c93343787aa4ba6ae0a163c3648c08ba854ba36469e82cdc41e49"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.31-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d2c96bb1b7c92c1c29b2e58e95fe9b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 107320,
        "upload_time": "2022-01-08T21:20:31",
        "upload_time_iso_8601": "2022-01-08T21:20:31.949154Z",
        "url": "https://files.pythonhosted.org/packages/66/bd/906857c239efd050d4a25b6dc20aea88ad965f3b562a7a5597a9200e3651/windyquery-0.0.31-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77247e931bda0a55c9dd0e4c469593bbe438626fa21e83a6379e50a087a9e24e",
          "md5": "5496877556476fc2edbad06e42dd3400",
          "sha256": "687104e66de6ff96fe9505041127bffbd3021141af8c567cc05d63a733cc3f2a"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.31.tar.gz",
        "has_sig": false,
        "md5_digest": "5496877556476fc2edbad06e42dd3400",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 72961,
        "upload_time": "2022-01-08T21:20:35",
        "upload_time_iso_8601": "2022-01-08T21:20:35.574664Z",
        "url": "https://files.pythonhosted.org/packages/77/24/7e931bda0a55c9dd0e4c469593bbe438626fa21e83a6379e50a087a9e24e/windyquery-0.0.31.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.32": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c82feff63de0d224017f0fe476728115763a5cf175a01b57b5df9632ec1430e",
          "md5": "458aafc97adce49a5fe33e9ff4d099e3",
          "sha256": "8e1f8ccd452b918bffa441de79fa6fe7437d8c419071c608bd26b9cbac776a3b"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.32-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "458aafc97adce49a5fe33e9ff4d099e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 107471,
        "upload_time": "2022-01-09T01:20:21",
        "upload_time_iso_8601": "2022-01-09T01:20:21.252689Z",
        "url": "https://files.pythonhosted.org/packages/0c/82/feff63de0d224017f0fe476728115763a5cf175a01b57b5df9632ec1430e/windyquery-0.0.32-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "457d3a96f6e19a5d78140a066ad62f7c286b804c7f9276ae7e4177daf2d3d65a",
          "md5": "3aeb9cf1f7da26b556dcc61b167e276d",
          "sha256": "f79524a8a2a2d1eeb272bfb0951ad2e2aca7bdc83bc94a670e3d75ce81d9c5f4"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.32.tar.gz",
        "has_sig": false,
        "md5_digest": "3aeb9cf1f7da26b556dcc61b167e276d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 73101,
        "upload_time": "2022-01-09T01:20:26",
        "upload_time_iso_8601": "2022-01-09T01:20:26.243422Z",
        "url": "https://files.pythonhosted.org/packages/45/7d/3a96f6e19a5d78140a066ad62f7c286b804c7f9276ae7e4177daf2d3d65a/windyquery-0.0.32.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.33": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1ac6e59d9a9a3be6c12eba33dee66a196861f2df5b07c87c329579df555916a",
          "md5": "9a37363c310930082d0419e4ab6f9cad",
          "sha256": "0cb3045bdac435e92add7f7e72d447288273173061ff70a4267c0f2513de2fd1"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.33-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a37363c310930082d0419e4ab6f9cad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 107684,
        "upload_time": "2022-01-26T04:54:05",
        "upload_time_iso_8601": "2022-01-26T04:54:05.542688Z",
        "url": "https://files.pythonhosted.org/packages/c1/ac/6e59d9a9a3be6c12eba33dee66a196861f2df5b07c87c329579df555916a/windyquery-0.0.33-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64c5d146ce3ce39e8081c862faa7843f14f59fb7d5df93df60e723e4de2d35f9",
          "md5": "c69bb5a8bdcefefcd755603104930404",
          "sha256": "1104748b692e9f4513cb9b392a8ca0d6ba8dc0bc08e02a4c7a83f25f92922dac"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.33.tar.gz",
        "has_sig": false,
        "md5_digest": "c69bb5a8bdcefefcd755603104930404",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 73261,
        "upload_time": "2022-01-26T04:54:12",
        "upload_time_iso_8601": "2022-01-26T04:54:12.301537Z",
        "url": "https://files.pythonhosted.org/packages/64/c5/d146ce3ce39e8081c862faa7843f14f59fb7d5df93df60e723e4de2d35f9/windyquery-0.0.33.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cc796403b1c445db01963cc4bc89d171dfa440f9f256f6ef20cc54ccc4a696e",
          "md5": "6ee185891050d8f891eb73c58407a547",
          "sha256": "f0f563aef0677040dbe404dd1e9cc53dcfc9072552cbd11730eac62b28755efd"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ee185891050d8f891eb73c58407a547",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25747,
        "upload_time": "2020-01-16T04:45:01",
        "upload_time_iso_8601": "2020-01-16T04:45:01.030967Z",
        "url": "https://files.pythonhosted.org/packages/9c/c7/96403b1c445db01963cc4bc89d171dfa440f9f256f6ef20cc54ccc4a696e/windyquery-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f89423bc525bb64e7a1a94bf2f171a0f6a76444a2c80848fbc733bcf86e90c17",
          "md5": "ab55009efca5dc67fda03d504f6a9d0c",
          "sha256": "c32e781e2a4fe98a94983fe93beea300fc80068d4c15682718fff88463eb0441"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ab55009efca5dc67fda03d504f6a9d0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21754,
        "upload_time": "2020-01-16T04:45:03",
        "upload_time_iso_8601": "2020-01-16T04:45:03.017335Z",
        "url": "https://files.pythonhosted.org/packages/f8/94/23bc525bb64e7a1a94bf2f171a0f6a76444a2c80848fbc733bcf86e90c17/windyquery-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47019716d74747ce09e8b4015f946038e95faf58192493da5ece9056540eb55f",
          "md5": "703aa5ffb50f7076098980c084e9fe9f",
          "sha256": "6555812f987345d78e5df9cbb08752c16651487205d322c6844c0909991117c2"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "703aa5ffb50f7076098980c084e9fe9f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28012,
        "upload_time": "2020-07-21T04:08:45",
        "upload_time_iso_8601": "2020-07-21T04:08:45.021231Z",
        "url": "https://files.pythonhosted.org/packages/47/01/9716d74747ce09e8b4015f946038e95faf58192493da5ece9056540eb55f/windyquery-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22c92c2210c98058af47c8610ee1175f485a3157ccdc651b3199120a5c494bb3",
          "md5": "2bb56fe3a6e572cdf0c9d6f63828de2b",
          "sha256": "e1dd4834f2a1a492fb4630388f424c2af48144ec55baff35bb4367a8173364d2"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2bb56fe3a6e572cdf0c9d6f63828de2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24297,
        "upload_time": "2020-07-21T04:08:46",
        "upload_time_iso_8601": "2020-07-21T04:08:46.450005Z",
        "url": "https://files.pythonhosted.org/packages/22/c9/2c2210c98058af47c8610ee1175f485a3157ccdc651b3199120a5c494bb3/windyquery-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2882e1f8a404cf3f10133b8dac5390aa347c285291fdf776e7db3d3b42716ec5",
          "md5": "9946436101370ead66e6a0a81e449b1c",
          "sha256": "80f557f4dfc29b5fca7351839e64d8331b4ba3555f30649108cfa6338bb4af32"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9946436101370ead66e6a0a81e449b1c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28018,
        "upload_time": "2020-07-21T04:56:12",
        "upload_time_iso_8601": "2020-07-21T04:56:12.600282Z",
        "url": "https://files.pythonhosted.org/packages/28/82/e1f8a404cf3f10133b8dac5390aa347c285291fdf776e7db3d3b42716ec5/windyquery-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11b1ce205290c1ef8a619ac64b3c4eb7a8cee38ebdac73cfd1f9e6c469ff44f4",
          "md5": "cb53f34859d170386666c49c68de3942",
          "sha256": "8a0adfd726c367928b3985dd597f8200dedbd93c241352daa0c7dfc0e2a2b215"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "cb53f34859d170386666c49c68de3942",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24326,
        "upload_time": "2020-07-21T04:56:14",
        "upload_time_iso_8601": "2020-07-21T04:56:14.188856Z",
        "url": "https://files.pythonhosted.org/packages/11/b1/ce205290c1ef8a619ac64b3c4eb7a8cee38ebdac73cfd1f9e6c469ff44f4/windyquery-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b096104fa09be164a0d82fdf40d35441e2f1e623ef4abf413abae8bb154ca93",
          "md5": "f2f32264643f771fd95e6221cb976ec0",
          "sha256": "ba068f70983d1ff8c334e488f5994f788a21dd26fc112dbc8a6df26311f9037a"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2f32264643f771fd95e6221cb976ec0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 85223,
        "upload_time": "2021-02-19T03:01:56",
        "upload_time_iso_8601": "2021-02-19T03:01:56.639520Z",
        "url": "https://files.pythonhosted.org/packages/1b/09/6104fa09be164a0d82fdf40d35441e2f1e623ef4abf413abae8bb154ca93/windyquery-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c4582b264e839d7d3caa837926005684f11d0b8a556b72fd1fbebb46b9471d8",
          "md5": "5ab56fc1b0a2506f9366665ac1428261",
          "sha256": "cb16a9f7665e13ba21f94f302a3fa4bd4073396f377d5321099be3a04c890914"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "5ab56fc1b0a2506f9366665ac1428261",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49807,
        "upload_time": "2021-02-19T03:01:59",
        "upload_time_iso_8601": "2021-02-19T03:01:59.161244Z",
        "url": "https://files.pythonhosted.org/packages/5c/45/82b264e839d7d3caa837926005684f11d0b8a556b72fd1fbebb46b9471d8/windyquery-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41feeb062df568d0b62a828d35a01d5db738505a01b75a31908d71123fcf7eca",
          "md5": "5e0327b765219f0ba8af38ce2a6c6873",
          "sha256": "dc4d0b827286d28863f4683c73886cfeb59a54e081324d539750cf6f9c84cb11"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e0327b765219f0ba8af38ce2a6c6873",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 89295,
        "upload_time": "2021-02-19T03:20:59",
        "upload_time_iso_8601": "2021-02-19T03:20:59.415612Z",
        "url": "https://files.pythonhosted.org/packages/41/fe/eb062df568d0b62a828d35a01d5db738505a01b75a31908d71123fcf7eca/windyquery-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7746dfe1a2538edf7a72dce985eb5f4a0f8a067bc895e5cc4b276d3f9aca5e5",
          "md5": "179d3aff77cd0233d4d5d5ea57499253",
          "sha256": "0223d777fda28b914f5d3c4d963da475c7c8e83e05269d4ee45ad4cad79d97f8"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "179d3aff77cd0233d4d5d5ea57499253",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51428,
        "upload_time": "2021-02-19T03:21:02",
        "upload_time_iso_8601": "2021-02-19T03:21:02.242576Z",
        "url": "https://files.pythonhosted.org/packages/d7/74/6dfe1a2538edf7a72dce985eb5f4a0f8a067bc895e5cc4b276d3f9aca5e5/windyquery-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0412e2c178959ac573cb9d89dc77708b41fa6bbf03482ac8b49bbe75aca37454",
          "md5": "00b792c27c8bcbd123fc76e8a030c683",
          "sha256": "c2ed9d8ea80c148ce434d0a31e89c3fe9f99e709d732cc9b375e182969cd2bd7"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "00b792c27c8bcbd123fc76e8a030c683",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 85193,
        "upload_time": "2021-02-20T21:20:02",
        "upload_time_iso_8601": "2021-02-20T21:20:02.682784Z",
        "url": "https://files.pythonhosted.org/packages/04/12/e2c178959ac573cb9d89dc77708b41fa6bbf03482ac8b49bbe75aca37454/windyquery-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a56cc301aae7a2a18b1a35e19cb75916bd80c1f0ad781503536ac1c886951712",
          "md5": "ca3efe9fb437aa6659841320b2004728",
          "sha256": "831618b196e7289b6a7426856e5388a2ab48d53d1025843bc278f447351db55c"
        },
        "downloads": -1,
        "filename": "windyquery-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "ca3efe9fb437aa6659841320b2004728",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 45817,
        "upload_time": "2021-02-20T21:20:06",
        "upload_time_iso_8601": "2021-02-20T21:20:06.694293Z",
        "url": "https://files.pythonhosted.org/packages/a5/6c/c301aae7a2a18b1a35e19cb75916bd80c1f0ad781503536ac1c886951712/windyquery-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c1ac6e59d9a9a3be6c12eba33dee66a196861f2df5b07c87c329579df555916a",
        "md5": "9a37363c310930082d0419e4ab6f9cad",
        "sha256": "0cb3045bdac435e92add7f7e72d447288273173061ff70a4267c0f2513de2fd1"
      },
      "downloads": -1,
      "filename": "windyquery-0.0.33-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9a37363c310930082d0419e4ab6f9cad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 107684,
      "upload_time": "2022-01-26T04:54:05",
      "upload_time_iso_8601": "2022-01-26T04:54:05.542688Z",
      "url": "https://files.pythonhosted.org/packages/c1/ac/6e59d9a9a3be6c12eba33dee66a196861f2df5b07c87c329579df555916a/windyquery-0.0.33-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64c5d146ce3ce39e8081c862faa7843f14f59fb7d5df93df60e723e4de2d35f9",
        "md5": "c69bb5a8bdcefefcd755603104930404",
        "sha256": "1104748b692e9f4513cb9b392a8ca0d6ba8dc0bc08e02a4c7a83f25f92922dac"
      },
      "downloads": -1,
      "filename": "windyquery-0.0.33.tar.gz",
      "has_sig": false,
      "md5_digest": "c69bb5a8bdcefefcd755603104930404",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 73261,
      "upload_time": "2022-01-26T04:54:12",
      "upload_time_iso_8601": "2022-01-26T04:54:12.301537Z",
      "url": "https://files.pythonhosted.org/packages/64/c5/d146ce3ce39e8081c862faa7843f14f59fb7d5df93df60e723e4de2d35f9/windyquery-0.0.33.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}