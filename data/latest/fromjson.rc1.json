{
  "info": {
    "author": "Lassi Haasio",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# fromjson\n\nPython library to easily read objects from JSON.\n\nHave you ever had classes, which you want to read from JSON, but didn't want to write the boilerplate `from_json` classmethods to convert JSON to Python objects?\nNow you don't have to!\nfromjson adds a simple decorator for classes, which adds a `from_json` classmethod to the class.\nIt works on all classes, as long as the fields in the class are either Python primitive types (int, float, str, dict, list) or classes with a `from_json` classmethod, and the class has type hints for its constuctor.\nThis means that if you have nested classes which you want to load from JSON, you only need to add a decorator call for each of the classes.\n\nThis library is heavily inspired by the excellent Haskell library [aeson](https://hackage.haskell.org/package/aeson).\n\n## Usage\n\nAll the examples have these imports\n```\n>>> from dataclasses import dataclass\n>>> import json\n>>>\n>>> from fromjson import fromjson, tojson\n\n```\nSuppose we have the following JSON:\n\n```{python}\n>>> foo = \"\"\"\n... {\n...   \"field\": \"a string value\",\n...   \"another_field\": 42\n... }\n... \"\"\"\n\n```\n\nWe want to deserialise it into a class defined by:\n\n```{python}\n>>> @dataclass\n... class Foo:\n...     field: str\n...     another_field: int\n\n```\n\nAdding a `@fromjson` decorator before the class definition adds a `from_json` classmethod to the class, which enables us to load it from a dictionary representation:\n\n```\n>>> @dataclass\n... @fromjson\n... class Foo:\n...     field: str\n...     another_field: int\n...\n>>> Foo.from_json(json.loads(foo))\nFoo(field='a string value', another_field=42)\n\n```\n\n## `tojson`\n\nFor completeness, there's also a `@tojson` decorator, which does the opposite.\nIt is used similarly:\n\n```{python}\n>>> @dataclass\n... @tojson\n... class Foo:\n...     field: str\n...     another_field: int\n...\n>>> json.dumps(Foo(\"asd\", 42).to_json())\n'{\"field\": \"asd\", \"another_field\": 42}'\n\n```\n\n## Nested classes\n\nThe real power of fromjson is in deserialising user made classes, which have other user made classes as fields.\nSuppose we have the following nested JSON data:\n\n```\n>>> bird = \"\"\"\n... {\n...     \"name\": \"Duck\",\n...     \"cry\": \"Quack!\",\n...     \"egg\": {\n...       \"size\": \"Medium\",\n...       \"color\": \"White\"\n...     }\n... }\n... \"\"\"\n\n```\n\nWe can parse it into the following classes, by adding a `@fromjson` call to each class:\n```\n>>> @dataclass\n... @fromjson\n... class Egg:\n...     size: str\n...     color: str\n...\n>>> @dataclass\n... @fromjson\n... class Bird:\n...     name: str\n...     cry: str\n...     egg: Egg\n...\n>>> import json\n>>> Bird.from_json(json.loads(bird))\nBird(name='Duck', cry='Quack!', egg=Egg(size='Medium', color='White'))\n\n```\n\n## Parsing logic\n\nThe json is parsed according to the following logic:\n- The argument for `from_json` has to be a `Mapping` (i.e. an ordinary dictionary is fine)\n- The type hints for the class are read\n- For each type hint, if the type is one of `str`, `int`, `float`, `dict`, or `list`, the corresponding value from the argument mapping is used as-is.\n- If the type is none of the enumerated primitive types, it has to be a class with a `from_json` classmethod, which is then used to parse the object.\n- If the type isn't a primitive, and the class doesn't have a `from_json` classmethod, the parsing fails.\n\nIf your nested class has some really complicated parsing logic, for which `fromjson` is inadequate, you can write a `from_json` classmethod by hand.\nThen the class can be used inside other classes, which have a `@fromjson` decorator call.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.sr.ht/~ilikeavocadoes/fromjson",
    "keywords": "",
    "license": "Zlib",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fromjson",
    "package_url": "https://pypi.org/project/fromjson/",
    "platform": "",
    "project_url": "https://pypi.org/project/fromjson/",
    "project_urls": {
      "Homepage": "https://git.sr.ht/~ilikeavocadoes/fromjson",
      "Repository": "https://git.sr.ht/~ilikeavocadoes/fromjson"
    },
    "release_url": "https://pypi.org/project/fromjson/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.8,<4.0",
    "summary": "Easily read objects from json",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11036775,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e65715c5a0832ac0ab15a56dc7f395f1816878b040cf7057919b682dbe19faf",
          "md5": "8b4e75ab849f9ed4e25886eca97a8ab0",
          "sha256": "8f14b0c482213db8689332b364e34ccdcfdb11fd0db17f2a679b7bb7a859e431"
        },
        "downloads": -1,
        "filename": "fromjson-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b4e75ab849f9ed4e25886eca97a8ab0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 3477,
        "upload_time": "2021-07-29T09:02:52",
        "upload_time_iso_8601": "2021-07-29T09:02:52.727495Z",
        "url": "https://files.pythonhosted.org/packages/2e/65/715c5a0832ac0ab15a56dc7f395f1816878b040cf7057919b682dbe19faf/fromjson-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd78cb06ec0a9599bfb9c35228eb3e8313a54e7129fce1d34aa32ff67637e4af",
          "md5": "a6b042b0b9dd110f8dd79773d62a339c",
          "sha256": "a06dd1e042fefabb0cbbc9eb1663a1fe0ccc9e869addba4c353e0881d3c6d999"
        },
        "downloads": -1,
        "filename": "fromjson-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a6b042b0b9dd110f8dd79773d62a339c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 3656,
        "upload_time": "2021-07-29T09:02:54",
        "upload_time_iso_8601": "2021-07-29T09:02:54.626806Z",
        "url": "https://files.pythonhosted.org/packages/cd/78/cb06ec0a9599bfb9c35228eb3e8313a54e7129fce1d34aa32ff67637e4af/fromjson-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e65715c5a0832ac0ab15a56dc7f395f1816878b040cf7057919b682dbe19faf",
        "md5": "8b4e75ab849f9ed4e25886eca97a8ab0",
        "sha256": "8f14b0c482213db8689332b364e34ccdcfdb11fd0db17f2a679b7bb7a859e431"
      },
      "downloads": -1,
      "filename": "fromjson-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8b4e75ab849f9ed4e25886eca97a8ab0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 3477,
      "upload_time": "2021-07-29T09:02:52",
      "upload_time_iso_8601": "2021-07-29T09:02:52.727495Z",
      "url": "https://files.pythonhosted.org/packages/2e/65/715c5a0832ac0ab15a56dc7f395f1816878b040cf7057919b682dbe19faf/fromjson-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd78cb06ec0a9599bfb9c35228eb3e8313a54e7129fce1d34aa32ff67637e4af",
        "md5": "a6b042b0b9dd110f8dd79773d62a339c",
        "sha256": "a06dd1e042fefabb0cbbc9eb1663a1fe0ccc9e869addba4c353e0881d3c6d999"
      },
      "downloads": -1,
      "filename": "fromjson-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a6b042b0b9dd110f8dd79773d62a339c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 3656,
      "upload_time": "2021-07-29T09:02:54",
      "upload_time_iso_8601": "2021-07-29T09:02:54.626806Z",
      "url": "https://files.pythonhosted.org/packages/cd/78/cb06ec0a9599bfb9c35228eb3e8313a54e7129fce1d34aa32ff67637e4af/fromjson-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}