{
  "info": {
    "author": "Giuseppe De Marco",
    "author_email": "demarcog83@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)",
      "Programming Language :: Python :: 3"
    ],
    "description": "RSTconn\n-------\n\nA TCPKill is a utility that implements a **TCP reset attack**.\nRSTconn works for both IPv4 and IPv6 and is written in python and scapy.\n\nHow RSTconn works\n-------------\n\nRESET is a flag in TCP packets to indicate that the connection is not longer working.\nIf any of the two participants in a TCP connection send a packet\ncontains such a RESET flag, the connection will be closed immediately.\n\nThus it can be use to attack TCP connections once the attacker can forge\nTCP packets from any of the two parties if he or she know their IPs, ports\nand the sequence number of current TCP connection.\n\nThe attack can be used to make certain users to fail to use certain\nnetwork services based on TCP if we know the information above.\n\nIn practice, we should eavesdrop the victimsâ€™ communications to get\ntheir IPs, ports and the sequence number.\n\nWe do it by filtering the TCP packets and find the newest packets that we want to attack.\n\n\nSetup\n-----\n\n````\npip install rstconn\n````\n\nUsage\n-----\n\n````\nrstconn kills network connections.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --iface {lo,enp0s25,lxcbr0,docker0,br-d316e57def52,vethd4f41f0,veth6fa5336, ...}, -i {...}\n                        Interface where to listen to\n  --server-ip SERVER_IP, -sip SERVER_IP\n                        IPv4 or hostname\n  --client-ip CLIENT_IP, -cip CLIENT_IP\n                        IPv4 or hostname\n  --server-port SERVER_PORT, -p SERVER_PORT\n                        Server port\n  --packet-count PACKET_COUNT, -pc PACKET_COUNT\n                        sends N RST packets\n  --seq-jitter SEQ_JITTER, -sj SEQ_JITTER\n                        Set seq_jitter to be non-zero in order to prove to yourself that the\n                        sequence number of a RST segment does indeed need to be exactly equal\n                        to the last sequence number ACK-ed by the receiver\n  --ignore-syn, -is     if a Packet has SYN flag, not sending RST\n  --window-size WINDOW_SIZE, -ws WINDOW_SIZE\n                        Window size\n  -d {CRITICAL,ERROR,WARNING,INFO,DEBUG}, --debug {CRITICAL,ERROR,WARNING,INFO,DEBUG}\n                        Debug level, see python logging; defaults to INFO if omitted\n  -m, --monitor         Just sniff traffic without sendin RST\n  -v, --version         Print version and exit\n\n````\n\nRSTconn listens for the matching connections and than sends a\nnumber of SYN/ACK and RST packets to the client to get the connection be killed.\n\nThe number of packets is configurable by `--packet-count`, `--iface` and\n`--server-ip` and `--server-port` are related to the local server port to be listen on.\n\n````\nrstconn -i lo --server-ip 127.0.0.1 --server-port 8000 --packet-count 50\n````\n\nDemo\n----\n\n````\napt install netcat\n````\n\n- Setup TCP connection. In one terminal window run `nc -nvl 8000` to set up a server\n- In another terminal window run `nc 127.0.0.1 8000` to connect to the server\n- In a third window run `rstconn` to run our sniffing program\n\nYou should see the sniffing program log some output, send a RST packet, and the nc connection should be broken.\n\nIf you want to test rstconn in IPv6, use instead:\n\n- `nc ::1 8000`\n- `nc -nvl ::1 8000`\n- `rstconn -i lo --server-ip \"::1\" --server-port 8000 -pc 33`\n\nUsage examples\n--------------\n\nReset connections to ftp.gnu.org\n````\nrstconn -i enp0s25 --server-ip ftp.gnu.org\n````\n\non the client side we'll see\n````\nftp> ls\n421 Service not available, remote server has closed connection\n````\n\nwithout server/client ip, using only the port\n\n````\nrstconn -i lo --server-port 8000\n````\n\nCredits\n-------\n\n- https://gist.github.com/spinpx/263a2ed86f974a55d35cf6c3a2541dc2\n- https://github.com/robert/how-does-a-tcp-reset-attack-work\n\n\nReferences\n----------\n\n- Watson, P.: Slipping in the Window: TCP Reset attacks. (2004)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/4Securitas/rstconn",
    "keywords": "",
    "license": "License :: OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rstconn",
    "package_url": "https://pypi.org/project/rstconn/",
    "platform": "",
    "project_url": "https://pypi.org/project/rstconn/",
    "project_urls": {
      "Homepage": "https://github.com/4Securitas/rstconn"
    },
    "release_url": "https://pypi.org/project/rstconn/0.5.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A TCPKill utility written in python and scapy",
    "version": "0.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12382876,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f78661f25b2a2c4262f839dfe04ee802e844784c03509ab97e9a6f5ec52ed75",
          "md5": "a7b7a84007a463ad43ad40bb22a6c7f4",
          "sha256": "e1885aea904f1ba05d35c145c3ff9b250445e18ee1018bb023ac878cfc563625"
        },
        "downloads": -1,
        "filename": "rstconn-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7b7a84007a463ad43ad40bb22a6c7f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5455,
        "upload_time": "2021-10-13T21:54:23",
        "upload_time_iso_8601": "2021-10-13T21:54:23.276880Z",
        "url": "https://files.pythonhosted.org/packages/9f/78/661f25b2a2c4262f839dfe04ee802e844784c03509ab97e9a6f5ec52ed75/rstconn-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34fdb980d62f96a9dacf5a7b6aaabfa3625b118806a402b75f2a73761a1cceb8",
          "md5": "9f56dded253ff55ea677a531e169c0da",
          "sha256": "20c2cc121af97fc6475f039d8403678049e453b6468b31260f38d404e46222ce"
        },
        "downloads": -1,
        "filename": "rstconn-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9f56dded253ff55ea677a531e169c0da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17456,
        "upload_time": "2021-10-14T08:01:25",
        "upload_time_iso_8601": "2021-10-14T08:01:25.099243Z",
        "url": "https://files.pythonhosted.org/packages/34/fd/b980d62f96a9dacf5a7b6aaabfa3625b118806a402b75f2a73761a1cceb8/rstconn-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7f0136c90abe1431c83bf9ba56cf535666369b68fb82849ef984317762744dd",
          "md5": "6813f5fda87593cb0b9429565e520cde",
          "sha256": "1039d45c3163815662a3be1a5c5ebaac69a8d070f4feede9fe8aff75c341385d"
        },
        "downloads": -1,
        "filename": "rstconn-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6813f5fda87593cb0b9429565e520cde",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17570,
        "upload_time": "2021-10-14T08:05:52",
        "upload_time_iso_8601": "2021-10-14T08:05:52.429897Z",
        "url": "https://files.pythonhosted.org/packages/f7/f0/136c90abe1431c83bf9ba56cf535666369b68fb82849ef984317762744dd/rstconn-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b19aa77d714a43250919b8b8df5e7233c7725b65cb74e05254e044082d415249",
          "md5": "83188956fb0bdc2db888bb4604fbdf40",
          "sha256": "73f5f65f765527a90217be3c3222ce0020fe5475266538ede08736307d8687bb"
        },
        "downloads": -1,
        "filename": "rstconn-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "83188956fb0bdc2db888bb4604fbdf40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17613,
        "upload_time": "2021-10-14T09:15:30",
        "upload_time_iso_8601": "2021-10-14T09:15:30.754598Z",
        "url": "https://files.pythonhosted.org/packages/b1/9a/a77d714a43250919b8b8df5e7233c7725b65cb74e05254e044082d415249/rstconn-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ce1c3a25ffa97b6e5fef42517ec1b8f7cbc55f0506404d0d851deeeadec1210",
          "md5": "e1309017bb13dfef46261e2fbf84b3ac",
          "sha256": "366a64dfbf449b7d771ede3bdd34275e2947381d4233d9a22a62f45e9e87b805"
        },
        "downloads": -1,
        "filename": "rstconn-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e1309017bb13dfef46261e2fbf84b3ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17549,
        "upload_time": "2021-12-22T15:37:13",
        "upload_time_iso_8601": "2021-12-22T15:37:13.220313Z",
        "url": "https://files.pythonhosted.org/packages/0c/e1/c3a25ffa97b6e5fef42517ec1b8f7cbc55f0506404d0d851deeeadec1210/rstconn-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ec0ae0c1cba3bdfbb7e6aacc29fda4f0f38de283e051e843b40583b89bad8f3",
          "md5": "3dc43847f468acbfb7aba5237cbb7307",
          "sha256": "5822aa58715957311570eaf411e3fc25bf772b073173784a5622fe7e50424b4b"
        },
        "downloads": -1,
        "filename": "rstconn-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3dc43847f468acbfb7aba5237cbb7307",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17569,
        "upload_time": "2021-12-22T16:37:58",
        "upload_time_iso_8601": "2021-12-22T16:37:58.587320Z",
        "url": "https://files.pythonhosted.org/packages/8e/c0/ae0c1cba3bdfbb7e6aacc29fda4f0f38de283e051e843b40583b89bad8f3/rstconn-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ec0ae0c1cba3bdfbb7e6aacc29fda4f0f38de283e051e843b40583b89bad8f3",
        "md5": "3dc43847f468acbfb7aba5237cbb7307",
        "sha256": "5822aa58715957311570eaf411e3fc25bf772b073173784a5622fe7e50424b4b"
      },
      "downloads": -1,
      "filename": "rstconn-0.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3dc43847f468acbfb7aba5237cbb7307",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17569,
      "upload_time": "2021-12-22T16:37:58",
      "upload_time_iso_8601": "2021-12-22T16:37:58.587320Z",
      "url": "https://files.pythonhosted.org/packages/8e/c0/ae0c1cba3bdfbb7e6aacc29fda4f0f38de283e051e843b40583b89bad8f3/rstconn-0.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}