{
  "info": {
    "author": "Kreusada",
    "author_email": "kreusadaprojects@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Diacritics Library\n\n[![Code Style: Black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Imports: isort](https://user-images.githubusercontent.com/6032823/111363465-600fe880-8690-11eb-8377-ec1d4d5ff981.png)](https://github.com/PyCQA/isort)\n[![PRs welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](http://makeapullrequest.com)\n\nThis library is used for adding, and removing diacritics from strings.\n\n### Getting started\n\nStart by importing the module:\n\n```py\nimport dcl\n```\n\nDCL currently supports a multitude of diacritics:\n\n* acute\n* breve\n* caron\n* cedilla\n* grave\n* interpunct\n* macron\n* ogonek\n* ring\n* ring_and_acute\n* slash\n* stroke\n* stroke_and_acute\n* tilde\n* tittle\n* umlaut/diaresis\n* umlaut_and_macron\n\nEach accent has their own attribute which is directly accessible from the dcl module.\n\n```py\ndcl.acute('a')\n>>> 'á'\n```\n\nThese attributes return a Character object, which is essentially just a handy \"wrapper\" \naround our diacritic, which we can use to access various attributes to retrieve further \ninformation about the diacritic we're focusing on.\n\n```py\nchar = dcl.ogonek('a')\n\nrepr(char)\n>>> \"<ogonek 'ą'>\"\n\nchar.character  # the same as str(char)\n>>> 'ą'\n\nchar.diacritic  # some return <unprintable>\n>>> '˛'\n\nchar.diacritic_name\n>>> 'ogonek'\n\nchar.raw  # returns the raw representation of our character\n>>> '\\U00000105'\n\nchar.raw_diacritic \n>>> '\\U000002db'\n```\n\nSome functions can't take certain letters. For example, the letter ``h`` cannot take\na cedilla diacritic. In this case, an exception is raised named ``DiacriticError``.\nYou can access this exception via ``dcl.errors.DiacriticError``.\n\n```py\nfrom dcl.errors import DiacriticError\n\ntry:\n    char = dcl.cedilla('h')\nexcept DiacriticError as e:\n    print(e)\nelse:\n    print(repr(char))\n\n>>> 'Character h cannot take a cedilla diacritic'\n```\n\nIf you want to, you may also use the ``DiacriticApplicant`` object from \n``dcl.objects``. The functions you see above use this object too, and it's virtually\nthe same principle, except from the fact that we use properties to get the \ndiacritic, and the class simply holds the string and it's properties. Alas with the \nfunctions above, this object also returns the same ``Character`` object through it's properties.\n\n```py\nfrom dcl.objects import DiacriticApplicant\n\nda = DiacriticApplicant('a')\nrepr(da.ogonek)\n>>> \"<ogonek 'ą'>\"\n```\n\nThere is also the ``clean_diacritics`` function, accessible straight from the dcl module.\nThis function allows us to completely clean a string from any diacritics.\n\n```py\ndcl.clean_diacritics(\"Krëûšàdå\")\n>>> 'Kreusada'\n\ndcl.clean_diacritics(\"Café\")\n>>> 'Cafe'\n```\n\nAlong with this function, there's also ``count_diacritics``, ``get_diacritics`` and ``has_diacritics``.\n\nThe ``has_diacritics`` function simply checks if the string contains a character\nwith a diacritic.\n\n```py\ndcl.has_diacritics(\"Café\")\n>>> True\n\ndcl.has_diacritics(\"dcl\")\n>>> False\n```\n\nThe ``get_diacritics`` function is used to get all the diacritics in a string.\nIt returns a dictionary. For each diacritic in the string, the key will show\nthe diacritic's index in the string, and the value will show the ``Character``\nrepresentation. \n\n```py\ndcl.get_diacritics(\"Café\")\n>>> {3: <acute 'é'>}\n\ndcl.get_diacritics(\"Krëûšàdå\")\n>>> {2: <umlaut 'ë'>, 3: <circumflex 'û'>, 4: <caron 'š'>, 5: <grave 'à'>, 7: <ring 'å'>}\n```\n\nThe ``count_diacritics`` function counts the number of diacritics in a string. The actual\nimplementation of this simply returns the dictionary length from ``get_diacritics``.\n\n```py\ndcl.count_diacritics(\"Café\")\n>>> 1\n```\n\n### Creating an end user program\n\nCreating a program would be pretty simple for this, and I'd love to be able to help\nyou out with a base idea. Have a look at this for example:\n\n```py\nimport dcl\nimport string\n\nfrom dcl.errors import DiacriticError\n\nchar = str(input(\"Enter a character: \"))\nif not char in string.ascii_letters:\n    print(\"Please enter a letter from a-Z.\")\nelse:\n    accent = str(input(\"Enter an accent, you can choose from the following: \" + \", \".join(dcl.diacritic_list)))\n    if not dcl.isdiacritictype(accent):\n        print(\"That was not a valid accent.\")\n    else:\n        try:\n            function = getattr(dcl, accent)  # or dcl.objects.DiacriticApplicant\n            output = function(char)\n        except DiacriticError as e:\n            print(e)\n        else:\n            print(str(output))\n```\n\nIt's worth checking if the provided accent is a diacritic type. If it is, then you can use ``getattr``. \nWithout checking, the user could provide a default global such as ``__file__``.\n\nYou can also create a program which can remove diacritics from a string. It's made easy!\n\n```py\nimport dcl\n\nstring = str(input(\"Enter the string which you want to be cleared from diacritics: \"))\nprint(\"Here is your cleaned string: \" + dcl.clean_diacritics(string))\n```\n\nOr perhaps your program wants to count the number of diacritics contained\nwithin your string.\n\n```py\nimport dcl\n\nstring = str(input(\"This program will count the number of diacritics contained in your input. Enter a string: \"))\ncount = dcl.count_diacritics(string)\nif count == 1:\n    grammar = \"is\"\nelse:\n    grammar = \"are\"\nprint(f\"There {grammar} {count} diacritics/accent in your string.\")\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Kreusada/python-dcl",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dcl",
    "package_url": "https://pypi.org/project/dcl/",
    "platform": "",
    "project_url": "https://pypi.org/project/dcl/",
    "project_urls": {
      "Homepage": "https://github.com/Kreusada/python-dcl"
    },
    "release_url": "https://pypi.org/project/dcl/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python library used for diacritic manipulation.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11226808,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ddb587a0590af9739b0fe1c41427872cb7dde7c92c7f75d6915435445f54c67",
          "md5": "350f2f140e67a365579f53e39f6a4a1b",
          "sha256": "84fb68d157c2492cde0e5f7addd026b6708ff64f53b511c4509832383b817c3d"
        },
        "downloads": -1,
        "filename": "dcl-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "350f2f140e67a365579f53e39f6a4a1b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8771,
        "upload_time": "2021-08-12T13:25:49",
        "upload_time_iso_8601": "2021-08-12T13:25:49.924348Z",
        "url": "https://files.pythonhosted.org/packages/8d/db/587a0590af9739b0fe1c41427872cb7dde7c92c7f75d6915435445f54c67/dcl-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0673c49bad3a15e59e86e96778a87decde97062c286363b4ada1e8c92b4a1f4",
          "md5": "0a21ad875cdc62925ffacfbf99912c06",
          "sha256": "5b84bde70ba6e37fe649e7cb5af4bb1bf6023124e089b78377b3069a13d5746d"
        },
        "downloads": -1,
        "filename": "dcl-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0a21ad875cdc62925ffacfbf99912c06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10284,
        "upload_time": "2021-08-12T13:25:51",
        "upload_time_iso_8601": "2021-08-12T13:25:51.967391Z",
        "url": "https://files.pythonhosted.org/packages/d0/67/3c49bad3a15e59e86e96778a87decde97062c286363b4ada1e8c92b4a1f4/dcl-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ffb0ffdeb1b06c8239b0cb22b9bdfaa55a91ebc86a58e2f7d3c1d7f871518a3",
          "md5": "5bf500219c7cd1a2444fe9b95b11b660",
          "sha256": "c0697f40a3d1741890059a7d2c04a08f15d79baa1692e6c3a9c2c2760b3b8ae6"
        },
        "downloads": -1,
        "filename": "dcl-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bf500219c7cd1a2444fe9b95b11b660",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8768,
        "upload_time": "2021-08-12T13:29:07",
        "upload_time_iso_8601": "2021-08-12T13:29:07.111675Z",
        "url": "https://files.pythonhosted.org/packages/2f/fb/0ffdeb1b06c8239b0cb22b9bdfaa55a91ebc86a58e2f7d3c1d7f871518a3/dcl-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a768c5f176d5f44789b6c21c2f7a1a8d95f9e95f02b33060a9e699e0f0b75f6",
          "md5": "cc2dede22351cb87e385151607ae9cbc",
          "sha256": "cef8f3d3f37bf8d4a005b647e52ecc867384bf682811265707d595729b9ba7f2"
        },
        "downloads": -1,
        "filename": "dcl-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cc2dede22351cb87e385151607ae9cbc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10291,
        "upload_time": "2021-08-12T13:29:10",
        "upload_time_iso_8601": "2021-08-12T13:29:10.014028Z",
        "url": "https://files.pythonhosted.org/packages/5a/76/8c5f176d5f44789b6c21c2f7a1a8d95f9e95f02b33060a9e699e0f0b75f6/dcl-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9dca1a398a2d59b1d7a983872dce17791a33c8866aae8a9e19130c8ab8a4761c",
          "md5": "1583fe05bfc01fafc035c057ce0336f6",
          "sha256": "7d8d23dea98fe35e66bdb77c50a8a469107905e12aef980517d615780c4edfda"
        },
        "downloads": -1,
        "filename": "dcl-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1583fe05bfc01fafc035c057ce0336f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10495,
        "upload_time": "2021-08-19T21:54:20",
        "upload_time_iso_8601": "2021-08-19T21:54:20.183200Z",
        "url": "https://files.pythonhosted.org/packages/9d/ca/1a398a2d59b1d7a983872dce17791a33c8866aae8a9e19130c8ab8a4761c/dcl-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af8e682f835a67b1c780ff223ac7639d682b38bd9b0e732ad5d9e3c7e986e895",
          "md5": "54d57cabeb1c9b674352a79a72bdb4b7",
          "sha256": "00c26ee0c033a432a1c7f77b3077af5bd2a4600b7e08d37a6ff6709427cacbaf"
        },
        "downloads": -1,
        "filename": "dcl-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "54d57cabeb1c9b674352a79a72bdb4b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10245,
        "upload_time": "2021-08-19T21:54:22",
        "upload_time_iso_8601": "2021-08-19T21:54:22.695632Z",
        "url": "https://files.pythonhosted.org/packages/af/8e/682f835a67b1c780ff223ac7639d682b38bd9b0e732ad5d9e3c7e986e895/dcl-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9dca1a398a2d59b1d7a983872dce17791a33c8866aae8a9e19130c8ab8a4761c",
        "md5": "1583fe05bfc01fafc035c057ce0336f6",
        "sha256": "7d8d23dea98fe35e66bdb77c50a8a469107905e12aef980517d615780c4edfda"
      },
      "downloads": -1,
      "filename": "dcl-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1583fe05bfc01fafc035c057ce0336f6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10495,
      "upload_time": "2021-08-19T21:54:20",
      "upload_time_iso_8601": "2021-08-19T21:54:20.183200Z",
      "url": "https://files.pythonhosted.org/packages/9d/ca/1a398a2d59b1d7a983872dce17791a33c8866aae8a9e19130c8ab8a4761c/dcl-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af8e682f835a67b1c780ff223ac7639d682b38bd9b0e732ad5d9e3c7e986e895",
        "md5": "54d57cabeb1c9b674352a79a72bdb4b7",
        "sha256": "00c26ee0c033a432a1c7f77b3077af5bd2a4600b7e08d37a6ff6709427cacbaf"
      },
      "downloads": -1,
      "filename": "dcl-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "54d57cabeb1c9b674352a79a72bdb4b7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10245,
      "upload_time": "2021-08-19T21:54:22",
      "upload_time_iso_8601": "2021-08-19T21:54:22.695632Z",
      "url": "https://files.pythonhosted.org/packages/af/8e/682f835a67b1c780ff223ac7639d682b38bd9b0e732ad5d9e3c7e986e895/dcl-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}