{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# ihypy\nWIP Python musical analysis module\n\n# Install\n`py -m pip install ihypy` for Windows\n`python3 -m pip install ihypy` otherwise\n\n# Description\nWhere does the name come from? I wanted something musical that rhymed with py, and Ihy apparently is an Egyptian god of music‚Äîmore specifically, the ectasy of playing the sistrum. Whether or not that actually rhymes, I am pronouncing the name of this repository as \"I Hi Py\" as it looks like it should rhyme, and the sistrum's heiroglyph looks cool. ìè£\n\n# Purpose\nMore than anything else, I want to familiarize myself with how to do stuff on Github but keeping it interesting by doing musicology stuff. I want to create a framework that allows for the creation of many different ethnic music background to be explored, while providing just some basic Western classical instances.\n\n# Framework\nI will be trying to use abc.ABC for abstraction and docstring/type annotations. I am honestly still not really used to doing this in Python, but I want to try at least, even if the docstrings are poorly written for now.\n\nThere will only be a few base/abstract classes that really lay out the groundwork as I get started: Note, NotationError, TuningSystem, NotationSystem, and MusicalSystem. MusicalSystem itself is really built out of the combination of a TuningSystem and NotationSystem, and everything else will be derivative from that.\n\nI have not come up with any functional interfaces yet, though they might come if necessary. At the moment, I have not thought of such an example unless I introduce different units of measure in music (e.g. Hz vs. cent or comparing enharmonic pitches), but at the moment, I do not want to tie my hands up in that mess.\n\n# Systems\nMy goal is to first create a couple of simple types of systems. \n\nTuning\n- 12 TET\n- Just intonation\n- Pythagorean intonation\n\nNotation\n- IPN\n- Helmholtz pitch notation\n\nMusical\n- Western classical\n\n# Audio and Transcription\nThere will likely be some audio based stuff too. If I can create a note, it would be nice to hear it. I could turn this into pseudo musical notation if I can define something like a Piece class that describes when and what notes should be played. If nothing else, it would be nice to be able to break down chords. \n\nIf possible, I would also like to be able to transcribe from any of the following sources for analysis:\n- Sheet music\n- MIDI\n- Audio (i.e. actual recordings)\n\nI do not ever plan to create something that write sheet music.\n\n# Testing\nI will also attempt to run tests. I will undoubtedly miss many things, but that is ok. I just want to learn how to write tests and improve at it. I will test stuff along the way, but I will run larger scale tests as well.\n\n# Time Frame\nIn terms of scheduling and timing, I am in no rush. This is a project I am doing for fun, so updates will likely not be regular. However, I hope that I will not stall the project for a long time.\n\nIt would be nice to have at least some of audio/transcription stuff along with tuning, notation, and musical systems done in a month-ish, but who knows? If I get that, I might be able to make a first release of a module, but we shall see.\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "music,python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ihypy",
    "package_url": "https://pypi.org/project/ihypy/",
    "platform": null,
    "project_url": "https://pypi.org/project/ihypy/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/ihypy/0.0.5/",
    "requires_dist": [
      "simpleaudio",
      "pydub"
    ],
    "requires_python": "",
    "summary": "WIP Python musical analysis module",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13714338,
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fe4cb43c84898c63533b8cb73c9baf76241dbe76a7607c994a794f67f3779c3",
          "md5": "1738362677c23de71582e1b25192e8d4",
          "sha256": "dda8c6728c7873e4bec7a7bcbcb1ca9fa4788c58a312e4fd29088c97dfc5c6df"
        },
        "downloads": -1,
        "filename": "ihypy-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1738362677c23de71582e1b25192e8d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14329,
        "upload_time": "2022-05-04T20:22:14",
        "upload_time_iso_8601": "2022-05-04T20:22:14.922822Z",
        "url": "https://files.pythonhosted.org/packages/7f/e4/cb43c84898c63533b8cb73c9baf76241dbe76a7607c994a794f67f3779c3/ihypy-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46c4c89556c6905db6573a0471fb0f53d6a562a66462f0639f153424efc18105",
          "md5": "e585e30c6e74bdfb3a1a5badf6d7a9b8",
          "sha256": "1d9080f3f1bb25821f15c4f70932bc32d623649929392ca78266309fee3b746f"
        },
        "downloads": -1,
        "filename": "ihypy-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e585e30c6e74bdfb3a1a5badf6d7a9b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15073,
        "upload_time": "2022-05-04T20:22:16",
        "upload_time_iso_8601": "2022-05-04T20:22:16.268554Z",
        "url": "https://files.pythonhosted.org/packages/46/c4/c89556c6905db6573a0471fb0f53d6a562a66462f0639f153424efc18105/ihypy-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7fe4cb43c84898c63533b8cb73c9baf76241dbe76a7607c994a794f67f3779c3",
        "md5": "1738362677c23de71582e1b25192e8d4",
        "sha256": "dda8c6728c7873e4bec7a7bcbcb1ca9fa4788c58a312e4fd29088c97dfc5c6df"
      },
      "downloads": -1,
      "filename": "ihypy-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1738362677c23de71582e1b25192e8d4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14329,
      "upload_time": "2022-05-04T20:22:14",
      "upload_time_iso_8601": "2022-05-04T20:22:14.922822Z",
      "url": "https://files.pythonhosted.org/packages/7f/e4/cb43c84898c63533b8cb73c9baf76241dbe76a7607c994a794f67f3779c3/ihypy-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "46c4c89556c6905db6573a0471fb0f53d6a562a66462f0639f153424efc18105",
        "md5": "e585e30c6e74bdfb3a1a5badf6d7a9b8",
        "sha256": "1d9080f3f1bb25821f15c4f70932bc32d623649929392ca78266309fee3b746f"
      },
      "downloads": -1,
      "filename": "ihypy-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "e585e30c6e74bdfb3a1a5badf6d7a9b8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15073,
      "upload_time": "2022-05-04T20:22:16",
      "upload_time_iso_8601": "2022-05-04T20:22:16.268554Z",
      "url": "https://files.pythonhosted.org/packages/46/c4/c89556c6905db6573a0471fb0f53d6a562a66462f0639f153424efc18105/ihypy-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}