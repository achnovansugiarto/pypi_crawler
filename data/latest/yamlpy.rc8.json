{
  "info": {
    "author": "yangjianliang",
    "author_email": "526861348@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# yamlpy  \nyamlpy接口测试框架  \n\n# 工程主页  \nreadthedocs：  \nhttps://yamlpy-docs.readthedocs.io/zh_CN/latest/  \npypi：  \nhttps://pypi.org/project/yamlpy/  \ngithub：  \nhttps://github.com/yjlch1016/yamlpy  \n\nyamlpy即为yaml文件+pytest单元测试框架的缩写  \n可看作是一个脚手架工具  \n可快速生成项目的各个目录与文件   \n支持MySQL、PgSQL与MongoDB等数据库的增删改查  \n支持Jenkins、Docker等CI/CD工具  \n支持飞书、钉钉、企业微信等机器人  \n只需维护一份或者多份yaml（或者json）文件即可  \n\n与[yamlapi接口测试框架](https://github.com/yjlch1016/yamlapi)对比，  \n整体结构仍然保持不变，  \nyaml文件（或者json文件）格式仍然保持不变，  \n可以通用，  \n抛弃了python自带的unittest单元测试框架、ddt数据驱动第三方库、BeautifulReport测试报告第三方库，  \n修改了测试类文件，  \n传参方式由ddt的@ddt.ddt、@ddt.data()改为pytest的@pytest.mark.parametrize()，  \n删掉了tool工具包里面的beautiful_report_run.py文件，  \n其他文件保持不变。  \n\n`pip install yamlpy`  \n安装  \n\n`yamlpy -h（或yamlpy --help）`  \n查看参数信息  \n\n`yamlpy -v（或yamlpy --version）`  \n查看版本号  \n\n`pip install -U yamlpy`  \n安装最新版  \n\n`yamlpy create --p=项目名称`  \n创建项目  \n例如在某个路径下执行命令：  \n`yamlpy create --p=demo_project`  \n\n`yamlpy run --c=环境缩写`  \n运行项目  \n例如在项目的根目录下面执行命令：  \n`yamlpy run --c=test`  \n\n`yamlpy clean`  \n清理测试报告与日志目录下的所有文件  \n类似于`mvn clean`  \n\n`pip uninstall yamlpy`  \n卸载  \n\n***\n# 一、思路         \n1、采用requests+PyMySQL+DBUtils+psycopg2-binary+pymongo+influxdb+demjson+loguru+\nPyYAML+ruamel.yaml+pytest+pytest-html+allure-pytest+pytest-reportlog+pytest-assume+pytest-rerunfailures+pytest-instafail+pytest-sugar+pytest-timeout+pytest-parallel+tablib  \n2、requests是发起HTTP请求的第三方库  \n3、PyMySQL是连接MySQL的第三方库  \n4、DBUtils是数据库连接池的第三方库  \n5、psycopg2-binary是连接PgSQL的第三方库  \n6、pymongo是连接Mongo的第三方库  \n7、influxdb是连接influxDB的第三方库  \n8、demjson是解析非标格式json的第三方库  \n9、loguru是记录日志的第三方库  \n10、PyYAML与ruamel.yaml是读写yaml文件的第三方库  \n11、pytest是单元测试的第三方库  \n12、pytest-html是生成html测试报告的插件  \n13、allure-pytest是生成allure测试报告的插件  \n14、pytest-reportlog是替换--resultlog选项的插件  \n15、pytest-assume是多重断言的插件  \n16、pytest-rerunfailures是失败重跑的插件  \n17、pytest-instafail是实时显示错误信息的插件  \n18、pytest-sugar是显示进度的插件  \n19、pytest-timeout是设置超时时间的插件  \n20、pytest-parallel是多线程的插件  \n21、tablib是导出多种格式数据的第三方库  \n\n***\n# 二、目录结构  \n1、case是测试用例包  \n2、report_log是测试报告和日志的目录  \n3、resource是yaml（或者json文件）文件的目录  \n4、setting是工程的配置文件包  \n5、tool是常用方法的封装包  \n6、.dockerignore是在传递给docker引擎时需要忽略掉的文件  \n7、.gitignore是.ignore插件需要排除的文件  \n8、conftest.py是全局钩子文件  \n9、Dockerfile是构建镜像的文件  \n10、Jenkinsfile是Jenkins Pipeline文件  \n11、pytest.ini是pytest的配置文件  \n12、requirements.txt是第三方依赖库  \n\n***\n# 三、yaml、json文件说明  \nyaml文件  \n```yaml\n- case_name: 用例名称\n  step:\n    - step_name: 步骤名称\n      mysql:\n        -\n        -\n        -\n      pgsql:\n        -\n        -\n        -\n      mongo:\n        -\n        -\n        -\n      request_mode: POST\n      api: /api/test\n      file:\n        -\n        -\n        -\n      body:\n        {\"key_1\":\"value_1\",\"key_2\":\"value_2\"}\n      headers:\n        {\"Content-Type\":\"application/json\"}\n      query_string:\n        {\"key_3\":\"value_3\",\"key_4\":\"value_4\"}\n      expected_time: 3\n      expected_code: 200\n      expected_result:\n        {\"code\":1,\"message\":\"成功\"}\n      regular:\n        variable:\n          - name_1\n          - name_2\n        expression:\n          - '\"response_1\":\"(.+?)\"'\n          - '\"response_2\":\"(.+?)\"'\n```\njson文件  \n```json\n[\n  {\n    \"case_name\": \"用例名称\",\n    \"step\": [\n      {\n        \"step_name\": \"步骤名称\",\n        \"mysql\": [],\n        \"pgsql\": [],\n        \"mongo\": [],\n        \"request_mode\": \"POST\",\n        \"api\": \"/api/test\",\n        \"file\": [],\n        \"body\": \"{\\\"key_1\\\":\\\"value_1\\\",\\\"key_2\\\":\\\"value_2\\\"}\",\n        \"headers\": \"{'Content-Type': 'application/json'}\",\n        \"query_string\": \"{'key_3':'value_3','key_4':'value_4'}\",\n        \"expected_time\": 3,\n        \"expected_code\": 200,\n        \"expected_result\": \"{\\\"code\\\":1,\\\"message\\\":\\\"成功\\\"}\",\n        \"regular\": {\n          \"variable\": [\n            \"name_1\",\n            \"name_2\"\n          ],\n          \"expression\": [\n            \"\\\"response_1\\\":\\\"(.+?)\\\"\",\n            \"\\\"response_2\\\":\\\"(.+?)\\\"\"\n          ]\n        }\n      }\n    ]\n  }\n]\n```\n1、外层有2个字段，内层有16个字段  \n命名和格式不可修改，顺序可以修改  \n\n| 字段 | 中文名称 | 是否必填 | 格式 | 注解 |\n| ---- | ---- | --- | ---- | ---- |\n| case_name | 用例名称 | 是 | | |\n| step | 步骤 | 是 | -列表格式 | 1条用例可以有1个或者N个步骤，全部的步骤通过，本条用例才算通过 |\n| step_name | 步骤名称 | 是 | | |\n| mysql | MySQL语句 | 否 | -列表格式 | 顺序不可修改 |\n| pgsql | PgSQL语句 | 否 | -列表格式 | 顺序不可修改 |\n| mongo | Mongo语句 | 否 | -列表格式 | 顺序不可修改 |\n| request_mode | 请求方式 | 是 | | |\n| api | 接口路径 | 是 | | |\n| file | 文件 | 否 | -列表格式 | 顺序不可修改 |\n| body | 请求体 | 否 | 缩进字典格式或者json格式 | |\n| headers | 请求头 | 否 | 缩进字典格式或者json格式 | |\n| query_string | 请求参数 | 否 | 缩进字典格式或者json格式 | |\n| expected_time | 预期的响应时间 | 否 | | |\n| expected_code | 预期的响应代码 | 是 | | |\n| expected_result  | 预期的响应结果 | 是 | -列表格式、缩进字典格式或者json格式 | |\n| regular | 正则 | 否 | 缩进字典格式 | |\n| variable | 变量名 | 否 | -列表格式 | |\n| expression | 表达式 | 否 | -列表格式 | |\n\n2、mysql字段说明  \nmysql： MySQL语句，-列表格式，顺序不可修改，选填  \n\n| 位置 | 索引 | 作用 | 是否必填 | 格式 | 注解 |\n| ---- | ---- | --- | --- | ---- | ---- |\n| 第一行 | mysql[0] | 增删改 | 否 | 字符串 | 增、删、改语句 |\n| 第二行 | mysql[1] | 查 | 否 | 字符串 | 查语句（动态传参） |\n| 第三行 | mysql[2] | 查 | 否 | 字符串 | 查语句（数据库双重断言）|\n\n第一行：mysql[0]  \n第二行：mysql[1]  \n第三行：mysql[2]  \n第一行为增、删、改语句，第二行为查语句（动态传参），第三行为查语句（数据库双重断言）  \n第一行是发起请求之前的动作，没有返回结果  \n第二行是发起请求之前的动作，有返回结果，是为了动态传参  \n第三行是发起请求之后的动作，有返回结果，但是不可用于动态传参，是为了断言实际的响应结果  \n当不需要增删改查和双重断言时，可以不写mysql字段，或者三行都为空  \n当只需要增删改时，第一行为增删改语句，第二行为空，第三行为空  \n当只需要查时，第一行为空，第二行为查语句，第三行为空  \n当只需要双重断言时，第一行为空，第二行为空，第三行为查语句  \n\n3、pgsql字段说明  \npgsql： PgSQL语句，-列表格式，顺序不可修改，选填  \n\n| 位置 | 索引 | 作用 | 是否必填 | 格式 | 注解 |\n| ---- | ---- | --- | --- | ---- | ---- |\n| 第一行 | pgsql[0] | 增删改 | 否 | 字符串 | 增、删、改语句 |\n| 第二行 | pgsql[1] | 查 | 否 | 字符串 | 查语句（动态传参） |\n| 第三行 | pgsql[2] | 查 | 否 | 字符串 | 查语句（数据库双重断言）|\n\n第一行：pgsql[0]  \n第二行：pgsql[1]  \n第三行：pgsql[2]  \n第一行为增、删、改语句，第二行为查语句（动态传参），第三行为查语句（数据库双重断言）  \n第一行是发起请求之前的动作，没有返回结果  \n第二行是发起请求之前的动作，有返回结果，是为了动态传参  \n第三行是发起请求之后的动作，有返回结果，但是不可用于动态传参，是为了断言实际的响应结果  \n当不需要增删改查和双重断言时，可以不写pgsql字段，或者三行都为空  \n当只需要增删改时，第一行为增删改语句，第二行为空，第三行为空  \n当只需要查时，第一行为空，第二行为查语句，第三行为空  \n当只需要双重断言时，第一行为空，第二行为空，第三行为查语句  \n\n4、mongo字段说明（参考mysql字段）  \nmongo： Mongo语句，-列表格式，顺序不可修改，选填  \n\n| 位置 | 索引 | 作用| 是否必填 | 格式 | 注解 |\n| ---- | ---- | --- | --- | ---- | ---- |\n| 第一行 | mongo[0]  | 增删改 | 否 | -列表格式 | 第一个元素为集合名，第二个元素为增删改，第三个元素为增删改参数 |\n| 第二行 | mongo[1] | 查 | 否 | -列表格式 | 第一个元素为集合名，第二个元素为查参数 |\n| 第三行 | mongo[2] | 查 | 否 | -列表格式 | 第一个元素为集合名，第二个元素为查参数 |\n \n第一行：mongo[0]  \n第二行：mongo[1]  \n第三行：mongo[2]  \n第一行为增、删、改，第二行为查（动态传参），第三行为查（数据库双重断言）  \n第一行是发起请求之前的动作，没有返回结果  \n第二行是发起请求之前的动作，有返回结果，是为了动态传参  \n第三行是发起请求之后的动作，有返回结果，但是不可用于动态传参，是为了断言实际的响应结果  \n当不需要增删改查和双重断言时，可以不写mongo字段，或者三行都为空  \n当只需要增删改时，第一行为增、删、改，第二行为空，第三行为空  \n当只需要查时，第一行为空，第二行为查，第三行为空  \n当只需要双重断言时，第一行为空，第二行为空，第三行为查  \n\n5、file字段说明  \nfile： 文件参数，-列表格式，顺序不可修改，选填  \n\n| 位置 | 类型 | 是否必填 | 格式 | 注解 |\n| ---- | --- | --- | ---- | ---- |\n| 第一行 | 文件类型 | 否 | 字符串 | 例如：file |\n| 第二行 | 文件名称 | 否 | 字符串 | 例如：demo_excel.xlsx |\n| 第三行 | MIME类型 | 否 | 字符串 | 例如：application/octet-stream |\n\n6、函数助手  \n\n| 函数名称 | 写法 | 作用域| 数量限制 |\n| ---- | ---- | --- | --- |\n| 正则表达式提取的结果 | ${变量名}  | 全局 | 不限 |\n| MySQL查询语句返回的结果 | {__SQL索引} | 本条用例 | 不限 |\n| PgSQL查询语句返回的结果 | {__PGSQL索引} | 本条用例 | 不限 |\n| Mongo查询语句返回的结果 | {__MONGO索引} | 本条用例 | 不限 |\n| 随机数字 | {__RN位数} | 本条用例 | 不限 |\n| 随机英文字母 | {__RL位数} | 本条用例 | 不限 |\n| 随机手机号码 | {__MP} | 本条用例 | 不限 |\n| 随机日期时间字符串 | {__RD开始年份,结束年份} | 本条用例 | 不限 |\n\n正则表达式提取的结果用${变量名}匹配，一条用例里面可以有多个  \nMySQL查询语句返回的结果，即第二行mysql[1]返回的结果，用{__SQL索引}匹配  \n即{__SQL0}、{__SQL1}、{__SQL2}、{__SQL3}。。。。。。一条用例里面可以有多个  \nPgSQL查询语句返回的结果，即第二行pgsql[1]返回的结果，用{__PGSQL索引}匹配  \n即{__PGSQL0}、{__PGSQL1}、{__PGSQL2}、{__PGSQL3}。。。。。。一条用例里面可以有多个  \nMongo查询语句返回的结果，即第二行mongo[1]返回的结果，用{__MONGO索引}匹配  \n即{__MONGO0}、{__MONGO1}、{__MONGO2}、{__MONGO3}。。。。。。一条用例里面可以有多个  \n随机数字用{__RN位数}，如{__RN15}，一条用例里面可以有多个  \n随机英文字母用{__RL位数}，如{__RL10}，一条用例里面可以有多个  \n随机手机号码用{__MP}，一条用例里面可以有多个  \n随机日期时间字符串用{__RD开始年份,结束年份}，如{__RD2019,2020}，一条用例里面可以有多个  \n以上8种类型在一条用例里面可以混合使用  \n${变量名}的作用域是全局的，其它7种的作用域仅限该条用例   \n\n***\n# 四、运行  \n1、pytest模式：  \npytest+--cmd=环境缩写  \n`pytest --cmd=dev`  \n开发环境  \n`pytest --cmd=test`  \n测试环境  \n`pytest --cmd=pre`  \n预生产环境  \n`pytest --cmd=formal`  \n生产环境  \n\n2、yamlpy模式：  \nyamlpy+run+--c=环境缩写  \n`yamlpy run --c=dev`  \n开发环境  \n`yamlpy run --c=test`  \n测试环境  \n`yamlpy run --c=pre`  \n预生产环境  \n`yamlpy run --c=formal`  \n生产环境  \n\n3、运行结果：  \n会在report_log目录下生成以下文件  \nallure-report  \nlog年月日.log  \nreport.html  \nreport.xml  \ntest_case.csv  \ntest_case.html  \ntest_case.json  \ntest_case.xlsx  \ntest_case.yaml  \n\n***\n# 五、打包镜像，运行容器  \ndocker pull registry.cn-hangzhou.aliyuncs.com/yangjianliang/yamlapi:0.0.8  \n从阿里云镜像仓库拉取yamlapi镜像  \n\ndocker build -t demo_image .  \ndocker build -t 镜像名称 .  \n本地打包，demo_image为镜像名称，随便取  \n\ndocker run -e cmd=\"环境缩写\" 镜像名称:latest  \ndocker run -e cmd=\"dev\" demo_image:latest  \n开发环境  \ndocker run -e cmd=\"test\" demo_image:latest  \n测试环境  \ndocker run -e cmd=\"pre\" demo_image:latest  \n预生产环境  \ndocker run -e cmd=\"formal\" demo_image:latest  \n生产环境",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yjlch1016/yamlpy",
    "keywords": "Interface test framework",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yamlpy",
    "package_url": "https://pypi.org/project/yamlpy/",
    "platform": "any",
    "project_url": "https://pypi.org/project/yamlpy/",
    "project_urls": {
      "Homepage": "https://github.com/yjlch1016/yamlpy"
    },
    "release_url": "https://pypi.org/project/yamlpy/1.1.8/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "yamlpy接口测试框架",
    "version": "1.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9682561,
  "releases": {
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98ef2642c182ddfe6a33495e50f406957b86db7787478ba868e617cc4a1bc11e",
          "md5": "70b7f3c15eb46d271b9c5dfec12998a3",
          "sha256": "d1f10ad84e6f891c0cb8f95b2c93757a4d3580bf7574a89318557b8886e48344"
        },
        "downloads": -1,
        "filename": "yamlpy-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "70b7f3c15eb46d271b9c5dfec12998a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 18386,
        "upload_time": "2020-06-02T11:59:36",
        "upload_time_iso_8601": "2020-06-02T11:59:36.426324Z",
        "url": "https://files.pythonhosted.org/packages/98/ef/2642c182ddfe6a33495e50f406957b86db7787478ba868e617cc4a1bc11e/yamlpy-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40dff54f615846a8c446e0acfdd567cdd683777a76c41c125a67ffa919cabea4",
          "md5": "3fe18de74a1b4e05e860a760945af2d4",
          "sha256": "be867b4e196d523d0a43c4b56630b8d4705c411999240f076f000382e5e7033c"
        },
        "downloads": -1,
        "filename": "yamlpy-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3fe18de74a1b4e05e860a760945af2d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 20930,
        "upload_time": "2020-06-26T11:00:15",
        "upload_time_iso_8601": "2020-06-26T11:00:15.757417Z",
        "url": "https://files.pythonhosted.org/packages/40/df/f54f615846a8c446e0acfdd567cdd683777a76c41c125a67ffa919cabea4/yamlpy-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "994e8c399bdfebc522802be80f7031032d2095b6ebb3b511c74d81d5e74ed7a8",
          "md5": "710c8609adf042c83c96c7e67e2b4b25",
          "sha256": "db9a0d85d9db1b6f0d9aa9be69121585ab3e3f58cb564a1df39d9ff058af0c0b"
        },
        "downloads": -1,
        "filename": "yamlpy-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "710c8609adf042c83c96c7e67e2b4b25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 22025,
        "upload_time": "2020-08-07T14:25:36",
        "upload_time_iso_8601": "2020-08-07T14:25:36.967670Z",
        "url": "https://files.pythonhosted.org/packages/99/4e/8c399bdfebc522802be80f7031032d2095b6ebb3b511c74d81d5e74ed7a8/yamlpy-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10c17acb50a980cad684e59a72dfb6f568e356e959f073343bf2e8b060e001b9",
          "md5": "8ae865440936ef2edfe6fdacf69ff828",
          "sha256": "063d93fde26668310aaa0880d9633b195c014b087e5c5c49fc630d9ec3126297"
        },
        "downloads": -1,
        "filename": "yamlpy-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8ae865440936ef2edfe6fdacf69ff828",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 22712,
        "upload_time": "2020-08-09T08:13:29",
        "upload_time_iso_8601": "2020-08-09T08:13:29.451915Z",
        "url": "https://files.pythonhosted.org/packages/10/c1/7acb50a980cad684e59a72dfb6f568e356e959f073343bf2e8b060e001b9/yamlpy-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65c77f42abe47ed125a23c852111573ba841fad96d87a4b086c6395841890fe5",
          "md5": "259d9ed18d0575551f20e4a72582b17f",
          "sha256": "5e67a203ec2e89e50358c66deb9ed7f391493b9cb62c58e178301d13ca87c5a1"
        },
        "downloads": -1,
        "filename": "yamlpy-1.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "259d9ed18d0575551f20e4a72582b17f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 27925,
        "upload_time": "2021-01-17T07:13:58",
        "upload_time_iso_8601": "2021-01-17T07:13:58.497685Z",
        "url": "https://files.pythonhosted.org/packages/65/c7/7f42abe47ed125a23c852111573ba841fad96d87a4b086c6395841890fe5/yamlpy-1.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a555b56e75876f4cd295677abb6d0a9b82605f2d26721ac1aa7daf80f227ca0e",
          "md5": "ae132b6558af918c276f3b8ab7a9363b",
          "sha256": "a37ad65e087c32b7bc3e5dba6441ac1d798a4f032be3acb8770d0b0d56a37932"
        },
        "downloads": -1,
        "filename": "yamlpy-1.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ae132b6558af918c276f3b8ab7a9363b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 29507,
        "upload_time": "2021-01-31T08:07:08",
        "upload_time_iso_8601": "2021-01-31T08:07:08.371958Z",
        "url": "https://files.pythonhosted.org/packages/a5/55/b56e75876f4cd295677abb6d0a9b82605f2d26721ac1aa7daf80f227ca0e/yamlpy-1.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7441fff2794f2b89f9c25e768244553221460e5eb762759e1185c9f512458337",
          "md5": "4d712830017d56848551f600f8bc4198",
          "sha256": "99f33b4e37a44d5377eef2b4eb22ac5a67c6a217d559ff0ec35cfdefa22d45f1"
        },
        "downloads": -1,
        "filename": "yamlpy-1.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "4d712830017d56848551f600f8bc4198",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 31293,
        "upload_time": "2021-02-17T06:11:41",
        "upload_time_iso_8601": "2021-02-17T06:11:41.506199Z",
        "url": "https://files.pythonhosted.org/packages/74/41/fff2794f2b89f9c25e768244553221460e5eb762759e1185c9f512458337/yamlpy-1.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d80deff83e9ecc9b5bb066d260d3bac484bd1c66d6ecd053cbafebe42e7003a",
          "md5": "86b734bad3818cba9386335d690dc273",
          "sha256": "fb5402ba09538d0e1bdb6917570a94e3e9acf74e719b6c2bf9ad95b7718aff43"
        },
        "downloads": -1,
        "filename": "yamlpy-1.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "86b734bad3818cba9386335d690dc273",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 31776,
        "upload_time": "2021-03-06T07:29:46",
        "upload_time_iso_8601": "2021-03-06T07:29:46.970485Z",
        "url": "https://files.pythonhosted.org/packages/0d/80/deff83e9ecc9b5bb066d260d3bac484bd1c66d6ecd053cbafebe42e7003a/yamlpy-1.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d80deff83e9ecc9b5bb066d260d3bac484bd1c66d6ecd053cbafebe42e7003a",
        "md5": "86b734bad3818cba9386335d690dc273",
        "sha256": "fb5402ba09538d0e1bdb6917570a94e3e9acf74e719b6c2bf9ad95b7718aff43"
      },
      "downloads": -1,
      "filename": "yamlpy-1.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "86b734bad3818cba9386335d690dc273",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 31776,
      "upload_time": "2021-03-06T07:29:46",
      "upload_time_iso_8601": "2021-03-06T07:29:46.970485Z",
      "url": "https://files.pythonhosted.org/packages/0d/80/deff83e9ecc9b5bb066d260d3bac484bd1c66d6ecd053cbafebe42e7003a/yamlpy-1.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}