{
  "info": {
    "author": "derycck",
    "author_email": "derycck@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "=====\npopro\n=====\n\n\n.. image:: https://img.shields.io/pypi/v/popro.svg\n        :target: https://pypi.python.org/pypi/popro\n\n.. image:: https://github.com/aiboxlab-pne/popro/actions/workflows/python-app.yml/badge.svg\n        :target: https://github.com/aiboxlab-pne/popro/actions/workflows/python-app.yml\n\n.. image:: https://readthedocs.org/projects/popro/badge/?version=latest\n        :target: https://popro.readthedocs.io/en/latest/?version=latest\n        :alt: Documentation Status\n\n\n\n\nA population projection engine\n\n\n* Free software: MIT license\n* Documentation: https://popro.readthedocs.io.\n\nFeatures\n--------\n\n* Calculates population projection segmented by age over the years\n        * Methodology:\n                * Presented by the Special Activities Board of the `Court of Auditors`_ of the State of Santa Catarina (Brazil), in the technical note `Memo. DAE nÂ° 020/2021`_.\n        * Overview:\n                * Inputs:\n                        * Specific year census dataset (place, age, population)\n                        * Dataset of people born over the years (year, place, births)\n                        * Projected population dataset not segmented by age over the years (year, place, population)\n                * Output:\n                        * Population projection segmented by age dataset (year, place, age, population)\n                        * Errors report on combination of \"place, age, year\" unable to forecast (year, place, age, error_msg)\n\n=====\nUsage\n=====\n\nFirst let's generate Input CSV files to serve as a sample.\n\n.. code-block:: python\n\n   import csv\n\n   def write_csv(file_path, list_data):\n      with open(file_path, 'w', encoding='UTF8', newline='') as f:\n         writer = csv.writer(f)\n         for line in list_data:\n               writer.writerow(line)\n\n   data_birth = [['births', 'place', 'year'],\n                 [102,'ny',2011],\n                 [116,'ny',2012],\n                 [94,'ny',2013],\n                 [123,'ny',2014],\n                 [156,'ny',2015]]\n\n   data_census = [['age', 'population', 'place', 'year'],\n                  [0, 100,  'ny', 2010],\n                  [1, 110,  'ny', 2010],\n                  [2, 105,  'ny', 2010],\n                  [3, 102,  'ny', 2010]]\n\n   data_population = [['population', 'place', 'year'],\n                      [2010, 'ny', 2010],\n                      [2100, 'ny', 2011],\n                      [2050, 'ny', 2012],\n                      [2040, 'ny', 2013],\n                      [2090, 'ny', 2014],\n                      [1950, 'ny', 2015]]\n\n   write_csv(file_path='births.csv', list_data=data_birth)\n   write_csv(file_path='census.csv', list_data=data_census)\n   write_csv(file_path='population.csv', list_data=data_population)\n\nNow let's import the lib Popro and generate our projection engine.\n\n.. code-block:: python\n\n   from popro import popro\n\n   dict_input = {'path_census': 'census.csv', 'path_births': 'births.csv', 'path_population': 'population.csv', 'year_census': 2010}\n   engine = popro.Popro(dict_input)\n\nWe are ready! Let's start by doing some punctual projections of year, age and place.\n\nFirst we will try with an age and year whose birth of the group is prior to the census.\n\n.. code-block:: python\n\n   engine.project(year=2012, place='ny', age=3, verbose=True)\n\n\n.. code-block:: text\n\n   pop_ny_2010_age_1 * (pop_ny_2012 / pop_ny_2010)\n   110 * (2050 / 2010)\n\n   112.18905472636816\n\n\nNow let's find out the projection for a group born after the census.\n\n.. code-block:: python\n\n   engine.project(year=2015, place='ny', age=4, verbose=True)\n\n\n.. code-block:: text\n\n   birth_ny_year_2011 * (pop_ny_2015 / pop_ny_2011)\n   102 * (1950 / 2100)\n\n   94.71428571428572\n\nFinally we will generate a report with all possible combinations of year, age and place.\n\n.. code-block:: python\n\n   engine.project_all()\n\n\n.. code-block:: text\n\n   [{'year': 2011, 'place': 'ny', 'age': 0, 'quantity': 102.0},\n    {'year': 2011, 'place': 'ny', 'age': 1, 'quantity': 104.4776119402985},\n    {'year': 2011, 'place': 'ny', 'age': 2, 'quantity': 114.92537313432835},\n    {'year': 2011, 'place': 'ny', 'age': 3, 'quantity': 109.70149253731343},\n    {'year': 2012, 'place': 'ny', 'age': 0, 'quantity': 116.0},\n    {'year': 2012, 'place': 'ny', 'age': 1, 'quantity': 99.57142857142857},\n    {'year': 2012, 'place': 'ny', 'age': 2, 'quantity': 101.99004975124377},\n    {'year': 2012, 'place': 'ny', 'age': 3, 'quantity': 112.18905472636816},\n    {'year': 2013, 'place': 'ny', 'age': 0, 'quantity': 94.0},\n    {'year': 2013, 'place': 'ny', 'age': 1, 'quantity': 115.43414634146342},\n    {'year': 2013, 'place': 'ny', 'age': 2, 'quantity': 99.08571428571429},\n    {'year': 2013, 'place': 'ny', 'age': 3, 'quantity': 101.49253731343283},\n    {'year': 2014, 'place': 'ny', 'age': 0, 'quantity': 123.0},\n    {'year': 2014, 'place': 'ny', 'age': 1, 'quantity': 96.30392156862744},\n    {'year': 2014, 'place': 'ny', 'age': 2, 'quantity': 118.26341463414634},\n    {'year': 2014, 'place': 'ny', 'age': 3, 'quantity': 101.51428571428572},\n    {'year': 2015, 'place': 'ny', 'age': 0, 'quantity': 156.0},\n    {'year': 2015, 'place': 'ny', 'age': 1, 'quantity': 114.76076555023923},\n    {'year': 2015, 'place': 'ny', 'age': 2, 'quantity': 89.8529411764706},\n    {'year': 2015, 'place': 'ny', 'age': 3, 'quantity': 110.34146341463415}]\n\nCool, but it would be better to export to a CSV, wouldn't it?\n\n.. code-block:: python\n\n   engine.project_all(output_report_projection_path='projection_report.csv')\n\nReport generated!\n\nCLI\n-----\n\nIt is also possible to make projections via command line. Let's repeat the same projections:\n\n.. code-block:: text\n\n    $ popro -i path_census,census.csv -i path_births,births.csv -i path_population,population.csv -i year_census,2010 --year 2012 --place ny --age 3\n\n.. code-block:: text\n\n    112.18905472636816\n\n.. code-block:: text\n\n    $ popro -i path_census,census.csv -i path_births,births.csv -i path_population,population.csv -i year_census,2010 --year 2015 --place ny --age 4\n.. code-block:: text\n\n    94.71428571428572\n\n.. code-block:: text\n\n    $ popro -i path_census,census.csv -i path_births,births.csv -i path_population,population.csv -i year_census,2010 --output projection_report.csv\n\n.. _`Court of Auditors`: https://www.tcesc.tc.br/\n.. _`Memo. DAE nÂ° 020/2021`: https://www.tcesc.tc.br/sites/default/files/2021-06/Metodologia%20Estima%C3%A7%C3%A3o%20Populacional.pdf\n\n\n=======\nHistory\n=======\n\n0.1.0 (2022-04-27)\n------------------\n\n* First release on PyPI.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aiboxlab-pne/popro",
    "keywords": "popro",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "popro",
    "package_url": "https://pypi.org/project/popro/",
    "platform": null,
    "project_url": "https://pypi.org/project/popro/",
    "project_urls": {
      "Homepage": "https://github.com/aiboxlab-pne/popro"
    },
    "release_url": "https://pypi.org/project/popro/0.1.1/",
    "requires_dist": [
      "Click (>=7.0)",
      "pandas (>=1.4)"
    ],
    "requires_python": ">=3.6",
    "summary": "A population projection engine",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14023494,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c66d780ccfdbe2a52ca42f742cfec00cec12fd3e6efad431168cdb1ad05f7dd",
          "md5": "76582db63020ad02a7fda3531a6d479f",
          "sha256": "bff36496211fd384d4ed2c5d5c94dff82d772a62f1898a414aa1a89f30ea0427"
        },
        "downloads": -1,
        "filename": "popro-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76582db63020ad02a7fda3531a6d479f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 6279,
        "upload_time": "2022-05-13T15:07:40",
        "upload_time_iso_8601": "2022-05-13T15:07:40.860925Z",
        "url": "https://files.pythonhosted.org/packages/0c/66/d780ccfdbe2a52ca42f742cfec00cec12fd3e6efad431168cdb1ad05f7dd/popro-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74cb62fc512f3b4ba410174c87bffcbfeacab2de0597cdaf86f0fb11fdafbb2e",
          "md5": "17b046d4b7965b0d24f6bf12286b0bdf",
          "sha256": "194e8ca844d211ac78ce43c5a3a5c8189136d563b4ca3873568640046a6f70ca"
        },
        "downloads": -1,
        "filename": "popro-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "17b046d4b7965b0d24f6bf12286b0bdf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1299886,
        "upload_time": "2022-05-13T15:07:43",
        "upload_time_iso_8601": "2022-05-13T15:07:43.203377Z",
        "url": "https://files.pythonhosted.org/packages/74/cb/62fc512f3b4ba410174c87bffcbfeacab2de0597cdaf86f0fb11fdafbb2e/popro-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61760a85e0b079baff32946ebcb901206b45af5cde4236304c098817ca9fb328",
          "md5": "f82440d2c7bebb0125d084402ee3f203",
          "sha256": "66bc49320ba528e7130e69f2826e5171e35e703e6a327f2afb7354d1ee61f27d"
        },
        "downloads": -1,
        "filename": "popro-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f82440d2c7bebb0125d084402ee3f203",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 10178,
        "upload_time": "2022-06-03T12:17:18",
        "upload_time_iso_8601": "2022-06-03T12:17:18.107544Z",
        "url": "https://files.pythonhosted.org/packages/61/76/0a85e0b079baff32946ebcb901206b45af5cde4236304c098817ca9fb328/popro-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e3439160806fbb13911d1c4a01f0134ac80eb528e5f354d255225e77f872486",
          "md5": "cceacad19837f69bb4daa370313052e8",
          "sha256": "09c60e93166aec5b53507da4b00951701572547c7b683c3c498896b61a46c6b4"
        },
        "downloads": -1,
        "filename": "popro-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cceacad19837f69bb4daa370313052e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1313780,
        "upload_time": "2022-06-03T12:17:20",
        "upload_time_iso_8601": "2022-06-03T12:17:20.880408Z",
        "url": "https://files.pythonhosted.org/packages/3e/34/39160806fbb13911d1c4a01f0134ac80eb528e5f354d255225e77f872486/popro-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61760a85e0b079baff32946ebcb901206b45af5cde4236304c098817ca9fb328",
        "md5": "f82440d2c7bebb0125d084402ee3f203",
        "sha256": "66bc49320ba528e7130e69f2826e5171e35e703e6a327f2afb7354d1ee61f27d"
      },
      "downloads": -1,
      "filename": "popro-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f82440d2c7bebb0125d084402ee3f203",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 10178,
      "upload_time": "2022-06-03T12:17:18",
      "upload_time_iso_8601": "2022-06-03T12:17:18.107544Z",
      "url": "https://files.pythonhosted.org/packages/61/76/0a85e0b079baff32946ebcb901206b45af5cde4236304c098817ca9fb328/popro-0.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e3439160806fbb13911d1c4a01f0134ac80eb528e5f354d255225e77f872486",
        "md5": "cceacad19837f69bb4daa370313052e8",
        "sha256": "09c60e93166aec5b53507da4b00951701572547c7b683c3c498896b61a46c6b4"
      },
      "downloads": -1,
      "filename": "popro-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cceacad19837f69bb4daa370313052e8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 1313780,
      "upload_time": "2022-06-03T12:17:20",
      "upload_time_iso_8601": "2022-06-03T12:17:20.880408Z",
      "url": "https://files.pythonhosted.org/packages/3e/34/39160806fbb13911d1c4a01f0134ac80eb528e5f354d255225e77f872486/popro-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}