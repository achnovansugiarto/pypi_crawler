{
  "info": {
    "author": "minibear",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Office/Business"
    ],
    "description": "# 抖店 Python SDK\n\n[![PyPI version](https://badge.fury.io/py/doudian.svg)](https://badge.fury.io/py/doudian)\n[![Download count](https://img.shields.io/pypi/dm/doudian)](https://img.shields.io/pypi/dm/doudian)\n\n## 介绍\n\n抖店 Python SDK。\n\n欢迎抖店相关开发者扫码进 QQ 群(群号：799137292)讨论：\n\n![image](qq.png)\n\n## 适用对象\n\n**抖店 Python SDK**同时支持自用型应用和工具型应用，具体说明详见[官网](https://op.jinritemai.com/docs/guide-docs/127/17)。\n\n## 特性\n\n1. 自动维护 access_token 的更新；\n2. 支持本地缓存 access_token；\n3. 业务参数自动排序，无需预处理；\n4. 消息推送自动验证，自动解析；\n5. 支持沙箱环境[测试店铺](https://op.jinritemai.com/docs/guide-docs/129/209)。\n\n## 源码\n\n[github](https://github.com/minibear2021/doudian)\n\n[gitee](https://gitee.com/minibear2021/doudian)\n\n## 安装\n\n```\n$ pip install doudian\n```\n\n## 使用方法\n\n### 准备\n\n参考抖店官方文档准备好 app key、app secret、shop id 等，具体见官方开发文档。\n\n### 一个最小的后端\n\n[examples.py](examples.py) 演示了一个带有[会员订单列表查询](https://op.jinritemai.com/docs/api-docs/13/366)接口和[消息推送处理](https://op.jinritemai.com/docs/guide-docs/153/99)接口的后端。\n首先，修改 **examplys.py** 里以下几项配置参数：\n\n```python\n# App类型，SELF=自用型应用, TOOL=工具型应用\nAPP_TYPE = AppType.SELF\n\n# 应用key，长度19位数字字符串\nAPP_KEY = '3409409348479354011'\n\n# 应用密钥 字符串\nAPP_SECRET = '2ad2355c-01d0-11f8-91dc-05a8cd1054b1'\n\n# 店铺ID，自用型应用必传。\nSHOP_ID = '323423'\n\n# token缓存文件\nTOKEN_FILE = './323423.token'\n\n# 日志记录器，记录web请求和回调细节\nlogging.basicConfig(filename=os.path.join(os.getcwd(), 'demo.log'), level=logging.DEBUG, filemode='a', format='%(asctime)s - %(process)s - %(levelname)s: %(message)s')\nLOGGER = logging.getLogger(\"demo\")\n\n# 代理设置，None或者{\"https\": \"http://10.10.1.10:1080\"}，详细格式参见https://docs.python-requests.org/zh_CN/latest/user/advanced.html\nPROXY = None\n\n# 沙箱模式测试店铺\nTEST_MODE = False\n```\n\n接下来初始化 DouDian 实例并配置一个合适的接口：\n\n```python\n# 初始化\ndoudian = DouDian(\n    app_key=APP_KEY,\n    app_secret=APP_SECRET,\n    app_type=APP_TYPE,\n    shop_id=SHOP_ID,\n    token_file=TOKEN_FILE,\n    logger=LOGGER,\n    proxy=PROXY,\n    test_mode=TEST_MODE\n)\n\napp = Flask(__name__)\n\n@app.route('/brandList')\ndef brand_list():\n    # 以获取店铺的已授权品牌列表为例，参照官方文档，将path和params拼凑好传入request接口，调用成功后即可获取店铺的已授权品牌列表数据。\n    # https://op.jinritemai.com/docs/api-docs/13/54\n    path = '/shop/brandList'\n    params = {}\n    result = doudian.request(path=path, params=params)\n    return jsonify({'result': result if result else ''})\n\n```\n\n检查一下参数无误，现在就可以用 python 解释器来运行：\n\n```shell\n$ python examples.py\n * Serving Flask app \"examples\" (lazy loading)\n * Environment: production\n   WARNING: This is a development server. Do not use it in a production deployment.\n   Use a production WSGI server instead.\n * Debug mode: off\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n```\n\n现在访问 http://127.0.0.1:5000/orderList ，如果一切正常，你会看到类似下面一串 json 字符串：\n\n```python\n{\n    \"result\":\n    {\n        \"code\":10000,\n        \"data\":[],\n        \"err_no\":0,\n        \"log_id\":\"20211203091350010194059098259B567F\",\n        \"message\":\"success\",\n        \"msg\":\"success\",\n        \"sub_code\":\"\",\n        \"sub_msg\":\"\"\n    }\n}\n```\n\n到这一步一个最小化的后端就完成了。\n\n**以上步骤如果不能正确执行，务必仔细检查各项初始化参数，必要的情况下，登录抖店后台，将所有参数重置。**\n\n下面配置一个消息推送接口，以便接收处理抖店提供的[消息推送服务](https://op.jinritemai.com/docs/guide-docs/153/99)。\n\n```python\n@app.route('/notify', methods=['POST'])\ndef notify():\n    result = doudian.callback(request.headers, request.data)\n    if result:\n        tag = result.get('tag')\n        if tag == '0':  # 抖店推送服务验证消息，需立即返回success\n            return jsonify({'code': 0, 'msg': 'success'})\n        if tag == '100':  # 订单创建消息，更多消息类型查阅官方文档。\n            # TODO: 根据推送的消息参数进行必要的业务处理，5秒内返回success\n            return jsonify({'code': 0, 'msg': 'success'})\n        return jsonify({'code': 0, 'msg': 'success'})\n    else:\n        return jsonify({'code': 40041, 'message': '解析推送数据失败'})\n```\n\n消息推送接口上线后，将 url 地址配置到抖店后台，抖店服务器将自动推送一条 tag 值为'0'的验证消息，验证通过后方能启用消息推送服务。\n\n## 通用接口\n\n### request(path: str, params: dict)\n\n所有抖店的 API 调用都通过**doudian.request()**接口进行。此接口需要传入 path 和 params 两个参数。\n参数值参照官方文档组织，形式类似下面的代码，其中 params 只需要传入请求参数或业务参数，公共参数无需传入，SDK 内部会自行处理：\n![image](param.png)\n\n```python\npath = '/member/searchList'\nparams = {}\nparams.update({'app_id':1})\nparams.update({'start_time': '2021/10/12 00:00:00'})\nparams.update({'end_time': '2021/10/12 00:00:00'})\nparams.update({'page':1})\nparams.update({'size':50})\nresult = doudian.request(path=path, params=params)\n```\n\n### init_token(code: str)\n\n用于初始化或重置 access token，通常情况下无需手工调用，仅当以下场景时才需要：\n\n1. 工具型（AppType.TOOL）应用初始化 DouDian 的时候未传入 code，可在获取到 code 时调用；\n2. 工具型（AppType.TOOL）或自用型（AppType.SELF）应用需要强制重置 access token 时调用;\n3. 捕获到 TokenError 异常时调用。\n\n### callback(headers: dict, body: bytes)\n\n抖店消息推送解析验证接口，将收到的推送 headers 和 body 原样传入，接口内自动解析并验证。\n\n```python\nresult = doudian.callback(request.headers, request.data)\n```\n\n### build_auth_url(service_id: str, state: str)\n\n工具型应用授权 url 构造接口，生成的授权 url 发送给商户完成授权验证以获取 code。获取到的 code 可以调用 init_token(code)接口进行 access token 的初始化或重置。\n\n```python\nservice_id = 'demo service id'\nstate = 'demo state'\nresult = doudian.build_auth_url(service_id=service_id, state=state)\n```\n\n以上接口的调用示例可以参考[examples.py](examples.py)。\n\n### 接口函数参数\n\n参数类型对照参考下表：\n\n| 抖店 API 官方文档声明 | **doudian python sdk** |\n| --------------------- | ---------------------- |\n| String                | str                    |\n| Int64, Number         | int                    |\n| object, Json, Struct  | dict: {}               |\n| List, JsonArray       | list: []               |\n| Bool                  | bool: True, False      |\n\n### 接口函数返回值\n\n每个接口均返回 None 或 json。\n\n## 常见问题\n\n### 消息推送解析失败处理\n\n开发者遇到的难点之一就是消息推送解析失败的问题，由于众多的 python web 框架对回调消息的处理不完全一致，如果出现回调验证失败，请务必确认传入的 headers 和 body 的值和类型。\n通常框架传过来的 headers 类型是 dict，而 body 类型是 bytes。使用以下方法可直接获取到解密后的实际内容。\n\n#### flask 框架\n\n直接传入 request.headers 和 request.data 即可。\n\n```python\nresult = doudian.callback(headers=request.headers, body=request.data)\n```\n\n#### django 框架\n\n由于 django 框架特殊性，会将 headers 做一定的预处理，可以参考以下方式调用。\n\n```python\nheaders = {}\nheaders.update({'app-id': request.META.get('HTTP_APP_ID')})\nheaders.update({'event-sign': request.META.get('HTTP_EVENT_SIGN')})\nresult = doudian.callback(headers=headers, body=request.body)\n```\n\n#### tornado 框架\n\n直接传入 request.headers 和 request.body 即可。\n\n```python\nresult = doudian.callback(headers=request.headers, body=request.body)\n```\n\n#### 其他框架\n\n参考以上处理方法，大原则就是保证传给 callback 的参数值和收到的值一致，不要转换为 dict，也不要转换为 string。\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/minibear2021/doudian",
    "keywords": "python sdk doudian jinritemai 抖店",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "doudian",
    "package_url": "https://pypi.org/project/doudian/",
    "platform": "",
    "project_url": "https://pypi.org/project/doudian/",
    "project_urls": {
      "Homepage": "https://github.com/minibear2021/doudian"
    },
    "release_url": "https://pypi.org/project/doudian/0.6/",
    "requires_dist": [
      "requests (>=2.21.0)",
      "cryptography (>=2.2.2)"
    ],
    "requires_python": "",
    "summary": "抖店 Python SDK(doudian python sdk)",
    "version": "0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12684139,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de15c5306e9848d2ddee05cce71adb90fbd72c84bd625fcbc03a7350b7ded0ec",
          "md5": "1ddd562414911de5dc45d6b2cf27dca9",
          "sha256": "2ed54612653d6da53a522afe66d8d42fdd3c724af30f2ff33766db5ed15a4e8e"
        },
        "downloads": -1,
        "filename": "doudian-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1ddd562414911de5dc45d6b2cf27dca9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8232,
        "upload_time": "2021-12-01T15:56:54",
        "upload_time_iso_8601": "2021-12-01T15:56:54.356946Z",
        "url": "https://files.pythonhosted.org/packages/de/15/c5306e9848d2ddee05cce71adb90fbd72c84bd625fcbc03a7350b7ded0ec/doudian-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "962d64942c35b93a95a07ca3550519fb3f0001c94b2cb1dd9ae8e4ada8ae94ec",
          "md5": "a0276503143e5a74e1257e914b4d4e1e",
          "sha256": "2373df513f2e70c8d463653b9b0ae3820749d2650690cbb93182a33a2e8b3204"
        },
        "downloads": -1,
        "filename": "doudian-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a0276503143e5a74e1257e914b4d4e1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9034,
        "upload_time": "2021-12-02T01:46:33",
        "upload_time_iso_8601": "2021-12-02T01:46:33.490202Z",
        "url": "https://files.pythonhosted.org/packages/96/2d/64942c35b93a95a07ca3550519fb3f0001c94b2cb1dd9ae8e4ada8ae94ec/doudian-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a114901fb17e77a2426b1d9a4b430e87833b959cd65c6825d99121e153876763",
          "md5": "0c95022f698843f20552e7ff62aac4eb",
          "sha256": "cb96e9089eed9b8670ab585b62a7c3d79809747d0662aa97708f227a113b7fe3"
        },
        "downloads": -1,
        "filename": "doudian-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0c95022f698843f20552e7ff62aac4eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9052,
        "upload_time": "2021-12-02T05:19:18",
        "upload_time_iso_8601": "2021-12-02T05:19:18.547543Z",
        "url": "https://files.pythonhosted.org/packages/a1/14/901fb17e77a2426b1d9a4b430e87833b959cd65c6825d99121e153876763/doudian-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0988802b3e66d748e982f2db5a284d9efe1f079ac151233caa6e14a81a5513d1",
          "md5": "4a2e23c5d68b9c232629cd94e1419983",
          "sha256": "7569b1a570f1657c9c9ec62e9e6a8f6ad60fabb8fa2b0cd7681356e11b2c75ed"
        },
        "downloads": -1,
        "filename": "doudian-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4a2e23c5d68b9c232629cd94e1419983",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9097,
        "upload_time": "2021-12-03T04:09:47",
        "upload_time_iso_8601": "2021-12-03T04:09:47.309014Z",
        "url": "https://files.pythonhosted.org/packages/09/88/802b3e66d748e982f2db5a284d9efe1f079ac151233caa6e14a81a5513d1/doudian-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc8cf64538e45d5781277c19b60a939a155246b823ea7ac1360bdd0844fcd992",
          "md5": "8606063f4c0ef1ed4ef867dc1718f46f",
          "sha256": "30b3922712b80050d780c48a9f0d88684ff4ee8f838b22dc7081bf11dc5e65e5"
        },
        "downloads": -1,
        "filename": "doudian-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8606063f4c0ef1ed4ef867dc1718f46f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9112,
        "upload_time": "2021-12-21T09:40:01",
        "upload_time_iso_8601": "2021-12-21T09:40:01.146775Z",
        "url": "https://files.pythonhosted.org/packages/bc/8c/f64538e45d5781277c19b60a939a155246b823ea7ac1360bdd0844fcd992/doudian-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e0c7fe572fd622888affe6dd3d9dadb8c3bda3197e120dd37af8aded0fec66a",
          "md5": "e8f2f91487fa2a919aea5cde8a0bf4a2",
          "sha256": "cf00a8f242338e0421d8f4feaab8d538adb32671840cf7b25879a06f2e4c3095"
        },
        "downloads": -1,
        "filename": "doudian-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8f2f91487fa2a919aea5cde8a0bf4a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9485,
        "upload_time": "2022-01-25T05:48:20",
        "upload_time_iso_8601": "2022-01-25T05:48:20.631305Z",
        "url": "https://files.pythonhosted.org/packages/7e/0c/7fe572fd622888affe6dd3d9dadb8c3bda3197e120dd37af8aded0fec66a/doudian-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a22fc47c2fafdf7b448b68357ea364bad974ce67afc275e966ef1f7720084237",
          "md5": "de48e03441ddae368b9a3bc736dc54ab",
          "sha256": "4b53fa05ee2fb948ba60567384f96c98ef2dfd854653ec70c40f383b21b296b8"
        },
        "downloads": -1,
        "filename": "doudian-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "de48e03441ddae368b9a3bc736dc54ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8691,
        "upload_time": "2022-01-25T05:48:22",
        "upload_time_iso_8601": "2022-01-25T05:48:22.390049Z",
        "url": "https://files.pythonhosted.org/packages/a2/2f/c47c2fafdf7b448b68357ea364bad974ce67afc275e966ef1f7720084237/doudian-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7e0c7fe572fd622888affe6dd3d9dadb8c3bda3197e120dd37af8aded0fec66a",
        "md5": "e8f2f91487fa2a919aea5cde8a0bf4a2",
        "sha256": "cf00a8f242338e0421d8f4feaab8d538adb32671840cf7b25879a06f2e4c3095"
      },
      "downloads": -1,
      "filename": "doudian-0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e8f2f91487fa2a919aea5cde8a0bf4a2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9485,
      "upload_time": "2022-01-25T05:48:20",
      "upload_time_iso_8601": "2022-01-25T05:48:20.631305Z",
      "url": "https://files.pythonhosted.org/packages/7e/0c/7fe572fd622888affe6dd3d9dadb8c3bda3197e120dd37af8aded0fec66a/doudian-0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a22fc47c2fafdf7b448b68357ea364bad974ce67afc275e966ef1f7720084237",
        "md5": "de48e03441ddae368b9a3bc736dc54ab",
        "sha256": "4b53fa05ee2fb948ba60567384f96c98ef2dfd854653ec70c40f383b21b296b8"
      },
      "downloads": -1,
      "filename": "doudian-0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "de48e03441ddae368b9a3bc736dc54ab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8691,
      "upload_time": "2022-01-25T05:48:22",
      "upload_time_iso_8601": "2022-01-25T05:48:22.390049Z",
      "url": "https://files.pythonhosted.org/packages/a2/2f/c47c2fafdf7b448b68357ea364bad974ce67afc275e966ef1f7720084237/doudian-0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}