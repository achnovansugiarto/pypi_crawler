{
  "info": {
    "author": "Felix Walter",
    "author_email": "code@felix-walter.eu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "# dtn-tvg-util\n\nA Python module providing functions for the representation of DTNs based on time-varying network graphs. Supports Python 2.7 and Python 3.4+.\n\n## Requirements\n\n* Python 2.7 or 3.4+\n* a build toolchain for your platform plus the `python-dev` package to install the Python dependencies\n* to place Ring Road ground stations, `libgeos-dev` and `libgdal-dev`\n\n## Getting Started\n\nFor just using this module, install it via `pip`:\n\n```\npip install dtn-tvg-util\n```\n\nFor the development setup, you should first create a virtual environment and install with `pip install -e`\n\n```\npython3 -m venv --without-pip .venv\ncurl -sS https://bootstrap.pypa.io/get-pip.py | .venv/bin/python\nsource .venv/bin/activate\npip install -e .\n```\n\nSome example tools can be found in `tvgutil.tools`. These scripts allow to generate and convert time-varying graph representations of Ring Road [1] scenarios.\n\nFor using the Ring Road scenario generators, you have to install some further dependencies:\n\n```\npip install \"dtn-tvg-util[ring_road]\"\n# OR\npip install -e \".[ring_road]\"\n```\n\nFor ground station placement (via `tvgutil/tools/create_gs_list.py`), also install the `gs_placement` extras by adding `[ring_road,gs_placement]` to the `pip install` command.\n\n## Testing\n\nUnit tests for the core functionality are provided in `test/`. They are based on the Python `unittest` package. Use a test runner of your choice to execute them, e.g. `pytest` or `nose`.\n\n```\npip install nose\npython -m nose test\n```\n\n## License\n\nThis code is licensed under the MIT license. See [LICENSE](LICENSE) for details.\n\n## References\n\n[1] Ring Road Networks (RRN) are Disruption-tolerant Networks (DTN) for communication, based on the deployment of low-cost LEO satellites. For more information, see the following paper: *S. C. Burleigh and E. J. Birrane, “Toward a Communications Satellite Network for Humanitarian Relief,” in International Conference on Wireless Technologies for Humanitarian Relief, Amritapuri, India, 2011.*",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/d3tn/dtn-tvg-util",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dtn-tvg-util",
    "package_url": "https://pypi.org/project/dtn-tvg-util/",
    "platform": "",
    "project_url": "https://pypi.org/project/dtn-tvg-util/",
    "project_urls": {
      "Homepage": "https://gitlab.com/d3tn/dtn-tvg-util"
    },
    "release_url": "https://pypi.org/project/dtn-tvg-util/0.1.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python module providing functions for the representation of DTNs based on time-varying network graphs. Supports Python 2.7 and Python 3.4+.",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9535373,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33cfa60fd0bcd241139f38ec541f6f1d0c054ddaf5a0a942f780cd3dded92d83",
          "md5": "c3952ea8c22a4a7c300dd398239abdf4",
          "sha256": "93aabd0d4577a85532eecc82121589999c23224ab57d531a67c1001df5794b5b"
        },
        "downloads": -1,
        "filename": "dtn-tvg-util-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c3952ea8c22a4a7c300dd398239abdf4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30702,
        "upload_time": "2021-02-26T16:39:31",
        "upload_time_iso_8601": "2021-02-26T16:39:31.040434Z",
        "url": "https://files.pythonhosted.org/packages/33/cf/a60fd0bcd241139f38ec541f6f1d0c054ddaf5a0a942f780cd3dded92d83/dtn-tvg-util-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01feea7817203e0be45ab2f4f62c0e0b4a860723bbea8009f48ab34d7a2e20f5",
          "md5": "7c4389027506db683b8435457ccf3c9d",
          "sha256": "922a56370fdbd28075e7f4b62684bbd6c38b44e424c15eceaed449dc8a81f505"
        },
        "downloads": -1,
        "filename": "dtn-tvg-util-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7c4389027506db683b8435457ccf3c9d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30949,
        "upload_time": "2021-02-26T17:23:11",
        "upload_time_iso_8601": "2021-02-26T17:23:11.879978Z",
        "url": "https://files.pythonhosted.org/packages/01/fe/ea7817203e0be45ab2f4f62c0e0b4a860723bbea8009f48ab34d7a2e20f5/dtn-tvg-util-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "01feea7817203e0be45ab2f4f62c0e0b4a860723bbea8009f48ab34d7a2e20f5",
        "md5": "7c4389027506db683b8435457ccf3c9d",
        "sha256": "922a56370fdbd28075e7f4b62684bbd6c38b44e424c15eceaed449dc8a81f505"
      },
      "downloads": -1,
      "filename": "dtn-tvg-util-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "7c4389027506db683b8435457ccf3c9d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30949,
      "upload_time": "2021-02-26T17:23:11",
      "upload_time_iso_8601": "2021-02-26T17:23:11.879978Z",
      "url": "https://files.pythonhosted.org/packages/01/fe/ea7817203e0be45ab2f4f62c0e0b4a860723bbea8009f48ab34d7a2e20f5/dtn-tvg-util-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}