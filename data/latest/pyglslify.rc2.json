{
  "info": {
    "author": "Anentropic",
    "author_email": "ego@anentropic.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pyglslify\n\nA very thin wrapper for the [glslify](https://github.com/glslify/glslify) nodejs tool, to use [stack.gl](http://stack.gl) shader modules in Python during development.\n\n(after development you're probably best just compiling the shaders with nodejs `glslify` cli tool to a file and using the result)\n\n## Installation\n\nThe whole point is to be able to download and use GLSL shader modules from the WebGL community, which are distributed via `npm`.\n\nSo first you need to install nodejs/npm: https://www.npmjs.com/get-npm\n\nThen install the `glslify` tool globally and verify it is on your path:\n```\nnpm install -g glslify\nglslify --help\n```\n\nThen add `pyglslify` in your Python project virtualenv:\n```\npip install pyglslify\n```\n\n## Usage\n\nWe're still going to use `npm` to install stack.gl shaders. For example:\n\n```\nnpm install glsl-noise\n```\n\nThis will create `package.json` and `package-lock.json` files in your project root, which will track the `npm` dependencies of your project. These should be committed to source control along with the rest of your project. By default the modules will be downloaded to a `node_modules` dir in your project root, that dir should be added to `.gitignore`.\n\nIf you checkout your project repo on a new machine you can just run `npm install` to fetch the modules specified as dependencies in `package.json`.\n\nOn the Python side you can write GLSL shaders which make use of the glslify `require` pragma:\n```glsl\n#pragma glslify: noise = require('glsl-noise/simplex/3d')\n\nprecision mediump float;\nvarying vec3 vpos;\n\nvoid main () {\n    gl_FragColor = vec4(noise(vpos*25.0),1);\n}\n```\n`fshader.glsl`\n\nAnd then in your Python code, when you want to pass the shader to your rendering pipeline, use `pyglslify` to resolve the pragmas:\n```python\nimport moderngl_window as mglw\nfrom pyglslify import glslify\n\n\nclass RenderWindow(mglw.WindowConfig):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        vertex_shader = self.load_text(\"shaders/vshader.glsl\")\n        fragment_shader = self.load_text(\n            glslify(\"shaders/fshader.glsl\")\n        )\n        self.pipeline = self.ctx.program(\n            vertex_shader=vertex_shader,\n            fragment_shader=fragment_shader,\n        )\n```\n\nYou can also use glslify [Source Transforms](https://github.com/glslify/glslify#source-transforms).\n\ne.g. `npm install glslify-hex` allows use of CSS-style hex strings for colors in place of `vec3`s.\n\nSee the glslify docs - they recommend specifying these as configuration in your `package.json`.\n\nYou can also apply local transforms to the shader file at runtime from Python, by passing their module names as args like:\n```python\nfrom pyglslify import glslify\n\nfragment_shader = glslify(\"shaders/fshader.glsl\", \"glslify-hex\", \"glslify-import\")\n```\n\nHappy shading!\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/anentropic/pyglslify",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyglslify",
    "package_url": "https://pypi.org/project/pyglslify/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyglslify/",
    "project_urls": {
      "Homepage": "https://github.com/anentropic/pyglslify"
    },
    "release_url": "https://pypi.org/project/pyglslify/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Thin wrapper for the glslify nodejs tool, use stack.gl shader modules in Python.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10233436,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "040a67a9995d4bac4223fd043518d07913be1a8ada2208597370c2c22fa4ad6e",
          "md5": "5e22e7d0b90e24ad35d524af87451392",
          "sha256": "055705932d24715bfc06d430e7fccf7d140703807cab8026c0712352a4b863f2"
        },
        "downloads": -1,
        "filename": "pyglslify-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e22e7d0b90e24ad35d524af87451392",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2083,
        "upload_time": "2021-05-02T14:25:28",
        "upload_time_iso_8601": "2021-05-02T14:25:28.550062Z",
        "url": "https://files.pythonhosted.org/packages/04/0a/67a9995d4bac4223fd043518d07913be1a8ada2208597370c2c22fa4ad6e/pyglslify-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa9ae5e02b18aa8cf29d8b2b8ae9aa57f330229495b3baaaed8771bfa72b9ca9",
          "md5": "a86253dfb1ad2ac504b8becc240b1271",
          "sha256": "8274f9c0ded7d82309f513ba28f2196e8046d1135387cd40f7c12471eeea8e24"
        },
        "downloads": -1,
        "filename": "pyglslify-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a86253dfb1ad2ac504b8becc240b1271",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1800,
        "upload_time": "2021-05-02T14:25:29",
        "upload_time_iso_8601": "2021-05-02T14:25:29.988649Z",
        "url": "https://files.pythonhosted.org/packages/aa/9a/e5e02b18aa8cf29d8b2b8ae9aa57f330229495b3baaaed8771bfa72b9ca9/pyglslify-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "554abf70ff7238faba760a485f3e84206c2b943243bda075f468aee8d8813024",
          "md5": "9b0a74f219608e6e2ca98d0d9bd25ca4",
          "sha256": "72627b1d6a853df4239b1ebde7d27a6e68bdee2644bb813db60f1e71afb4563a"
        },
        "downloads": -1,
        "filename": "pyglslify-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b0a74f219608e6e2ca98d0d9bd25ca4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3327,
        "upload_time": "2021-05-02T14:32:59",
        "upload_time_iso_8601": "2021-05-02T14:32:59.787856Z",
        "url": "https://files.pythonhosted.org/packages/55/4a/bf70ff7238faba760a485f3e84206c2b943243bda075f468aee8d8813024/pyglslify-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df590c1b7e8962bf8376369f12b011dab0a1ce0c1476f7722628f23ccf538029",
          "md5": "b12f6397b944a43dc840ef6fb9d4cd3b",
          "sha256": "4925d8ecabae79fab2148124f67ed3665404cb09066a3fff3eeebed9e0a3a54d"
        },
        "downloads": -1,
        "filename": "pyglslify-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b12f6397b944a43dc840ef6fb9d4cd3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3441,
        "upload_time": "2021-05-02T14:33:01",
        "upload_time_iso_8601": "2021-05-02T14:33:01.210280Z",
        "url": "https://files.pythonhosted.org/packages/df/59/0c1b7e8962bf8376369f12b011dab0a1ce0c1476f7722628f23ccf538029/pyglslify-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "554abf70ff7238faba760a485f3e84206c2b943243bda075f468aee8d8813024",
        "md5": "9b0a74f219608e6e2ca98d0d9bd25ca4",
        "sha256": "72627b1d6a853df4239b1ebde7d27a6e68bdee2644bb813db60f1e71afb4563a"
      },
      "downloads": -1,
      "filename": "pyglslify-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9b0a74f219608e6e2ca98d0d9bd25ca4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 3327,
      "upload_time": "2021-05-02T14:32:59",
      "upload_time_iso_8601": "2021-05-02T14:32:59.787856Z",
      "url": "https://files.pythonhosted.org/packages/55/4a/bf70ff7238faba760a485f3e84206c2b943243bda075f468aee8d8813024/pyglslify-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df590c1b7e8962bf8376369f12b011dab0a1ce0c1476f7722628f23ccf538029",
        "md5": "b12f6397b944a43dc840ef6fb9d4cd3b",
        "sha256": "4925d8ecabae79fab2148124f67ed3665404cb09066a3fff3eeebed9e0a3a54d"
      },
      "downloads": -1,
      "filename": "pyglslify-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b12f6397b944a43dc840ef6fb9d4cd3b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3441,
      "upload_time": "2021-05-02T14:33:01",
      "upload_time_iso_8601": "2021-05-02T14:33:01.210280Z",
      "url": "https://files.pythonhosted.org/packages/df/59/0c1b7e8962bf8376369f12b011dab0a1ce0c1476f7722628f23ccf538029/pyglslify-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}