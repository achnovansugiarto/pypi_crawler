{
  "info": {
    "author": "Petr Anƒçinec",
    "author_email": "ancinpet@fit.cvut.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: Microsoft",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "WMemPy - WinApi Memory Application\n==================================\nWMempy allows users to quickly manipulate with memory of other processes using WinApi. The application provides CLI as well as Python modules to work with most processes.\n\nFeatures\n--------\nList processes and get process handle\nRetrieve modules and memory pages (called Scannables)\nRead and analyze Scannables\nRun AOB and ASCII scans on Scannables\nList ASCII strings of Scannables\nRead and Write Process Memory (both Scannables and Process is supported)\nView memory blocks in CLI\n\nExamples\n--------\n### bad_code_detection\nShows how to look for good/bad code in running processes\n\n### config_dump\nExample configuration file for CSGO offset dump (using the CLI wmempy --dump)\n\n### cpp_apps\nVery simple applications written in C++ to experiment on with the app. Source code included where possible. To compile the C++ code, you need at least C++14 and Windows compiler (MSVC or MinGW GCC)\n\n### csgo_primitive_wallhack\nShows how to use the tool to read and alter memory of other processes to gain an advantage\n\n### password_grabber\nShows how to use the tool to look for strings that are hardcoded into the app as well as live memory strings\n\nInstall\n-------\nTo install the project, download the package:\n\n<pre>\npython -m pip install wmempy\n</pre>\n\nDocumentation\n-------------\n\nTo check out the sources and documentation, download the source from:\n\n<pre>\nhttps://github.com/fitancinpet/WMemPy\nhttps://pypi.org/project/wmempy/#files\n</pre>\n\nExtract the sources if needed and go into the WMemPy folder (main project folder). From there, to build documentations, just do:\n\n<pre>\ncd docs\n.\\make.bat html\n</pre>\n\nThe HTML pages are in _build/html.\n\nTests\n-----\n\nTo run tests, make sure you are on Windows as the application only supports that and in the project directory run:\n\n<pre>\npython setup.py test\n</pre>\n\nThere are two types of tests, non-live and live. The live tests work with live Windows memory and have _live at the end.\n\nCLI Usage\n---------\n<pre>\nwmempy --help\n\n# List running processes\nwmempy -l\n\n# Show all modules loaded into dwm.exe\nwmempy -n dwm.exe --modules\n\n# Show all valid pages of dwm.exe\nwmempy -n dwm.exe --pages\n\n# Scan dwm.exe for a memory pattern\nwmempy -n dwm.exe --aob 'b0,aa,4a,2f,3d,00,00,00,d0,ac,4a,2f'\n\n# Scan dwm.exe for a memory pattern with wildcards\nwmempy -n dwm.exe --aob 'b0,aa,4a,2f,3d,?,?,?,d0,ac,4a,2f'\nwmempy -n dwm.exe --aob 'b0,aa,4a,2f,3d,*,*,*,d0,ac,4a,2f'\n\n# Scan dwm.exe for a memory pattern different options\nwmempy -n dwm.exe --aob 'b0 aa 4a 2f 3d * * * d0 ac 4a 2f' --separator ' '\nwmempy -n dwm.exe --aob '176:170:74:47:61:?:?:?:208:172:74:47' --separator ':' --base 10\n\n# Scan kernel32 module loaded into dwm.exe for a memory pattern\nwmempy -n dwm.exe --aob '82 9b ? ? ? c6 03' --separator ' ' --where kernel32.dll\n\n# Scan all modules loaded into dwm.exe for a memory pattern\nwmempy -n dwm.exe --aob '82 9b ? ? ? c6 03' --separator ' ' --where modules\n\n# Scan all pages (live memory) of dwm.exe for a memory pattern\nwmempy -n dwm.exe --aob 'b0 aa 4a 2f 3d * * * d0 ac 4a 2f' --separator ' ' --where pages\n\n# Find address of 'Microsoft' in memory of dwm.exe\nwmempy -n dwm.exe --text Microsoft\n\n# Find address of 'padding' according to Microsoft in modules of dwm.exe\nwmempy -n dwm.exe --text PADDINGXXPADDING --where modules\n\n# Find address of 'LoadLibrary' string in kernel32 module loaded into dwm.exe\nwmempy -n dwm.exe --text LoadLibrary --where kernel32.dll\n\n# List all strings in dwm.exe\nwmempy -n dwm.exe --list-text 'all'\n\n# List all strings in dwm.exe that do not contain symbols and are at least 20 chars long\nwmempy -n dwm.exe --list-text 'c20'\n\n# List all strings in dwm.exe that can contain symbols and are at least 40 chars long\nwmempy -n dwm.exe --list-text 's40'\n\n# List all strings in modules of dwm.exe\nwmempy -n dwm.exe --list-text 'all' --where modules\n\n# List all strings in kernel32 module loaded into dwm.exe\nwmempy -n dwm.exe --list-text 'all' --where kernel32.dll\n\n# List strings with symbols longer than 3 chars in dwm.exe that contain the word 'auth'\nwmempy -n dwm.exe --list-text 's3' --hint auth\n\n# List strings with symbols longer than 3 chars in kernel32.dll module of dwm.exe that contain the word 'security'\nwmempy -n dwm.exe --list-text 's3' --hint security --where kernel32.dll\n\n# Dump the entire memory of dwm.exe into console\nwmempy -n dwm.exe --view 'all'\n\n# Dump the memory of dwm.exe's modules into console\nwmempy -n dwm.exe --view 'modules'\n\n# Dump the memory of dwm.exe's kernel32.dll module into console\nwmempy -n dwm.exe --view 'kernel32.dll'\n\n# Dump the memory of dwm.exe's kernel32.dll module into console starting at address 0xa3045 of the module\nwmempy -n dwm.exe --view 'kernel32.dll' --hint 0xa3045\n\n# Check how similar are dwm.exe and explorer.exe (when it comes to long strings)\nwmempy --compare dwm.exe explorer.exe\n\n# Dump CSGO offsets from config file\nwmempy -n csgo.exe --dump 'examples/config_dump/cs.cfg'\n</pre>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fitancinpet/WMemPy",
    "keywords": "click,winapi,openprocess",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wmempy",
    "package_url": "https://pypi.org/project/wmempy/",
    "platform": "",
    "project_url": "https://pypi.org/project/wmempy/",
    "project_urls": {
      "Homepage": "https://github.com/fitancinpet/WMemPy"
    },
    "release_url": "https://pypi.org/project/wmempy/0.1.2/",
    "requires_dist": [
      "pywin32",
      "click (>=6)",
      "numpy (==1.19.3)",
      "Cython",
      "sphinx ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "flexmock ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "WinApi Memory Access Application",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9080168,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48accf7d4d620d69615d5c33652683865ce6af354038efa3b2bf95ee2a8903cb",
          "md5": "f2afbc88fb82c62754d6e5bf7f8dc64d",
          "sha256": "2008f05fcc6b78e0f92613912b6663fd7c01728066d6ab6296b8a3b833e5b47e"
        },
        "downloads": -1,
        "filename": "wmempy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f2afbc88fb82c62754d6e5bf7f8dc64d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2071689,
        "upload_time": "2021-01-01T19:32:16",
        "upload_time_iso_8601": "2021-01-01T19:32:16.511184Z",
        "url": "https://files.pythonhosted.org/packages/48/ac/cf7d4d620d69615d5c33652683865ce6af354038efa3b2bf95ee2a8903cb/wmempy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ff8a9cbfab5bef5535d7c0a993191ce4678a975f9ebfe80df8addd094adbdd4",
          "md5": "491e32b1ed0619284049cc0bec157945",
          "sha256": "bab61ee8db5fbe3990a542fec667badce07c6d5b51ab9587a02f576c73098c86"
        },
        "downloads": -1,
        "filename": "wmempy-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "491e32b1ed0619284049cc0bec157945",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18220,
        "upload_time": "2021-01-07T21:17:49",
        "upload_time_iso_8601": "2021-01-07T21:17:49.178781Z",
        "url": "https://files.pythonhosted.org/packages/7f/f8/a9cbfab5bef5535d7c0a993191ce4678a975f9ebfe80df8addd094adbdd4/wmempy-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2967385bc859a1ad0220a6ce236743d31e1c117530aab3abe26fa943f46f05b6",
          "md5": "203c6e20f652980947a6df42c983261f",
          "sha256": "73de85ab608d11e822cf130341ac67f9b377a1815d19a58cd75fad8b809e61da"
        },
        "downloads": -1,
        "filename": "wmempy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "203c6e20f652980947a6df42c983261f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2072837,
        "upload_time": "2021-01-07T21:17:53",
        "upload_time_iso_8601": "2021-01-07T21:17:53.931253Z",
        "url": "https://files.pythonhosted.org/packages/29/67/385bc859a1ad0220a6ce236743d31e1c117530aab3abe26fa943f46f05b6/wmempy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee17fc180b96d3db604d6c83a3200ea976265934dbdfdd7db16e4c6d417a38fa",
          "md5": "be816533533bee8e294a8ee864d46e6a",
          "sha256": "4f3154a0b583c6306d1aa2c1e32f7346e11ef9316484b030605b3016487ef9a0"
        },
        "downloads": -1,
        "filename": "wmempy-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be816533533bee8e294a8ee864d46e6a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18220,
        "upload_time": "2021-01-07T21:41:31",
        "upload_time_iso_8601": "2021-01-07T21:41:31.814095Z",
        "url": "https://files.pythonhosted.org/packages/ee/17/fc180b96d3db604d6c83a3200ea976265934dbdfdd7db16e4c6d417a38fa/wmempy-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3b28b05f9bacb3478b546facc7dd3b4cf2cf0b2cb9e7b4781f1f07f92b95475",
          "md5": "263a11c8e1f4909332be0b2b0f0f89bb",
          "sha256": "ed150dcf41fbd631d14b38225172f8a312578acaa2c5a41fb0835daff826a198"
        },
        "downloads": -1,
        "filename": "wmempy-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "263a11c8e1f4909332be0b2b0f0f89bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2072881,
        "upload_time": "2021-01-07T21:41:36",
        "upload_time_iso_8601": "2021-01-07T21:41:36.179699Z",
        "url": "https://files.pythonhosted.org/packages/a3/b2/8b05f9bacb3478b546facc7dd3b4cf2cf0b2cb9e7b4781f1f07f92b95475/wmempy-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee17fc180b96d3db604d6c83a3200ea976265934dbdfdd7db16e4c6d417a38fa",
        "md5": "be816533533bee8e294a8ee864d46e6a",
        "sha256": "4f3154a0b583c6306d1aa2c1e32f7346e11ef9316484b030605b3016487ef9a0"
      },
      "downloads": -1,
      "filename": "wmempy-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "be816533533bee8e294a8ee864d46e6a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18220,
      "upload_time": "2021-01-07T21:41:31",
      "upload_time_iso_8601": "2021-01-07T21:41:31.814095Z",
      "url": "https://files.pythonhosted.org/packages/ee/17/fc180b96d3db604d6c83a3200ea976265934dbdfdd7db16e4c6d417a38fa/wmempy-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3b28b05f9bacb3478b546facc7dd3b4cf2cf0b2cb9e7b4781f1f07f92b95475",
        "md5": "263a11c8e1f4909332be0b2b0f0f89bb",
        "sha256": "ed150dcf41fbd631d14b38225172f8a312578acaa2c5a41fb0835daff826a198"
      },
      "downloads": -1,
      "filename": "wmempy-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "263a11c8e1f4909332be0b2b0f0f89bb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 2072881,
      "upload_time": "2021-01-07T21:41:36",
      "upload_time_iso_8601": "2021-01-07T21:41:36.179699Z",
      "url": "https://files.pythonhosted.org/packages/a3/b2/8b05f9bacb3478b546facc7dd3b4cf2cf0b2cb9e7b4781f1f07f92b95475/wmempy-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}