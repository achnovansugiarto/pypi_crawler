{
  "info": {
    "author": "McTorch Team",
    "author_email": "mayankmeghwanshi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# McTorch Lib, a manifold optimization library for deep learning \n\nMcTorch is a Python library that adds manifold optimization functionality to [PyTorch](https://github.com/pytorch/pytorch).  \n\nMcTorch:\n - Leverages tensor computation and GPU acceleration from PyTorch.\n - Enables optimization on manifold constrained tensors to address nonlinear optimization problems.\n - Facilitates constrained weight tensors in deep learning layers.\n\nSections:\n- [More about McTorch](#more-about-mctorch)\n  - [Using McTorch for Optimization](#using-mctorch-for-optimization)\n  - [Using McTorch for Deep Learning](#using-mctorch-for-deep-learning)\n- [Functionality Supported](#functionality-supported)\n- [Installation](#installation)\n- [Release and Contribution](#release-and-contribution)\n- [Team](#team)\n- [Reference](#reference)\n\n## More about McTorch\nMcTorch builds on top of PyTorch and supports all PyTorch functions in addition to Manifold optimization. This is done to ensure researchers and developers using PyTorch can easily experiment with McTorch functions. McTorch's manifold implementations and optimization methods are derived from the Matlab toolbox [Manopt](http://manopt.org/) and the Python toolbox [Pymanopt](https://pymanopt.github.io/).\n\n### Using McTorch for Optimization\n\n1. **Initialize Parameter** - McTorch manifold parameters are same as PyTorch parameters (`mctorch.nn.Parameter`) and requires just addition of one property to parameter initialization to constrain the parameter values. \n2. **Define Cost** - Cost function can be any PyTorch function using the above parameter mixed with non constrained parameters.\n3. **Optimize** - Any optimizer from `mctorch.optim` can be used to optimize the cost function using same functionality as any PyTorch code.\n\n**PCA Example**\n```python\nimport torch\nimport mctorch.nn as mnn\nimport mctorch.optim as moptim\n\n# Random data with high variance in first two dimension\nX = torch.diag(torch.FloatTensor([3,2,1])).matmul(torch.randn(3,200))\n\n# 1. Initialize Parameter\nmanifold_param = mnn.Parameter(manifold=mnn.Stiefel(3,2))\n\n# 2. Define Cost - squared reconstruction error\ndef cost(X, w):\n    wTX = torch.matmul(w.transpose(1,0), X)\n    wwTX = torch.matmul(w, wTX)\n    return torch.sum((X - wwTX)**2)\n\n# 3. Optimize\noptimizer = moptim.rAdagrad(params = [manifold_param], lr=1e-2)\n\nfor epoch in range(30):\n    cost_step = cost(X, manifold_param)\n    print(cost_step)\n    cost_step.backward()\n    optimizer.step()\n    optimizer.zero_grad()\n```\n\n### Using McTorch for Deep Learning\n**Multi Layer Perceptron Example**\n```python\nimport torch\nimport mctorch.nn as mnn\nimport torch.nn.functional as F\n\n# a torch module using constrained linear layers\nclass ManifoldMLP(nn.Module):\n    def __init__(self):\n        super(ManifoldMLP, self).__init__()\n        self.layer1 = mnn.rLinear(in_features=28*28, out_features=100, weight_manifold=mnn.Stiefel)\n        self.layer2 = mnn.rLinear(in_features=100, out_features=100, weight_manifold=mnn.PositiveDefinite)\n        self.output = mnn.rLinear(in_features=100, out_features=10, weight_manifold=mnn.Stiefel)\n\n    def forward(self, x):\n        x = F.relu(self.layer1(x))\n        x = F.relu(self.layer2(x))\n        x = F.log_softmax(self.output(x), dim=0)\n        return x\n\n# create module object and compute cost by applying module on inputs\nmlp_module = ManifoldMLP()\ncost = mlp_module(inputs)\n\n```\n\nMore examples added - [here](examples)\n\n## Functionality Supported\nThis would be an ever increasing list of features. McTorch currently supports:\n\n### Manifolds\n- Stiefel\n- Positive Definite\n\nAll manifolds support k multiplier as well.\n\n### Optimizers\n- SGD\n- Adagrad\n- ConjugateGradient\n\n### Layers\n- Linear\n- Conv1d, Conv2d, Conv3d\n\n\n## Installation\nAfter installing PyTorch can be installed with `python setup.py install`\n\n### Linux\n```bash\nsource activate myenv\nconda install numpy setuptools\n# Add LAPACK support for the GPU if needed\nconda install -c pytorch magma-cuda90 # or [magma-cuda80 | magma-cuda92 | magma-cuda100 ] depending on your cuda version\nconda install pytorch torchvision cudatoolkit=9.0 -c pytorch # or cudatoolkit=10.0 | cudatoolkit=10.1 | .. depending on your cuda version\npip install mctorch-lib\n```\n\n## Release and Contribution\nMcTorch is currently under development and any contributions, suggestions and feature requests are welcome. We'd closely follow PyTorch stable versions to keep the base updated and will have our own versions for other additions.\n\nMcTorch is released under the open source [3-clause BSD License](LICENSE).\n\n## Team \n- [Mayank Meghwanshi](https://github.com/mayank127/)\n- [Bamdev Mishra](https://github.com/bamdevm)\n- [Pratik Jawanpuria](https://pratikjawanpuria.com)\n- [Hiroyuki Kasai](https://github.com/hiroyuki-kasai)\n- [Anoop Kunchukuttan](https://github.com/anoopkunchukuttan)\n\n## Reference\nPlease cite [[1](https://arxiv.org/abs/1810.01811)] if you found this code useful.\n#### McTorch, a manifold optimization library for deep learning\n[1] M. Meghawanshi, P. Jawanpuria, A. Kunchukuttan, H. Kasai, and B. Mishra, [McTorch, a manifold optimization library for deep learning](https://arxiv.org/abs/1810.01811)\n\n```\n@techreport{meghwanshi2018mctorch,\n  title={McTorch, a manifold optimization library for deep learning},\n  author={Meghwanshi, Mayank and Jawanpuria, Pratik and Kunchukuttan, Anoop and Kasai, Hiroyuki and Mishra, Bamdev},\n  institution={arXiv preprint arXiv:1810.01811},\n  year={2018}\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mctorch/mctorch_lib",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mctorch-lib",
    "package_url": "https://pypi.org/project/mctorch-lib/",
    "platform": "",
    "project_url": "https://pypi.org/project/mctorch-lib/",
    "project_urls": {
      "Homepage": "https://github.com/mctorch/mctorch_lib"
    },
    "release_url": "https://pypi.org/project/mctorch-lib/0.1.0/",
    "requires_dist": [
      "torch",
      "numpy"
    ],
    "requires_python": ">=3.6",
    "summary": "McTorch, a manifold optimization library for deep learning",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10116503,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d87e78f240558083d16f69adeb89b92f1cf871aa1ec1eb58bb1cd047e3b9e5d",
          "md5": "f01c6e96a32e887178068515933acb65",
          "sha256": "413750ed561223d4b08bbc97d63832d37bc6ff34fec41548ddd9cc5f393c0d64"
        },
        "downloads": -1,
        "filename": "mctorch_lib-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f01c6e96a32e887178068515933acb65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19503,
        "upload_time": "2021-04-20T08:54:25",
        "upload_time_iso_8601": "2021-04-20T08:54:25.512480Z",
        "url": "https://files.pythonhosted.org/packages/3d/87/e78f240558083d16f69adeb89b92f1cf871aa1ec1eb58bb1cd047e3b9e5d/mctorch_lib-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1a95157f9af38aa4117104a3cbdd10cdc3adbfd2493a13a6efad821f8ff8838",
          "md5": "c4dcdf539cc9a05c9b744ea308b83f44",
          "sha256": "3b8de42cce48ec79183a7b254030f9b9ae569e2cd6e8624ff5f68962422af238"
        },
        "downloads": -1,
        "filename": "mctorch-lib-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c4dcdf539cc9a05c9b744ea308b83f44",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15594,
        "upload_time": "2021-04-20T08:54:26",
        "upload_time_iso_8601": "2021-04-20T08:54:26.641457Z",
        "url": "https://files.pythonhosted.org/packages/a1/a9/5157f9af38aa4117104a3cbdd10cdc3adbfd2493a13a6efad821f8ff8838/mctorch-lib-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d87e78f240558083d16f69adeb89b92f1cf871aa1ec1eb58bb1cd047e3b9e5d",
        "md5": "f01c6e96a32e887178068515933acb65",
        "sha256": "413750ed561223d4b08bbc97d63832d37bc6ff34fec41548ddd9cc5f393c0d64"
      },
      "downloads": -1,
      "filename": "mctorch_lib-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f01c6e96a32e887178068515933acb65",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 19503,
      "upload_time": "2021-04-20T08:54:25",
      "upload_time_iso_8601": "2021-04-20T08:54:25.512480Z",
      "url": "https://files.pythonhosted.org/packages/3d/87/e78f240558083d16f69adeb89b92f1cf871aa1ec1eb58bb1cd047e3b9e5d/mctorch_lib-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1a95157f9af38aa4117104a3cbdd10cdc3adbfd2493a13a6efad821f8ff8838",
        "md5": "c4dcdf539cc9a05c9b744ea308b83f44",
        "sha256": "3b8de42cce48ec79183a7b254030f9b9ae569e2cd6e8624ff5f68962422af238"
      },
      "downloads": -1,
      "filename": "mctorch-lib-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c4dcdf539cc9a05c9b744ea308b83f44",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15594,
      "upload_time": "2021-04-20T08:54:26",
      "upload_time_iso_8601": "2021-04-20T08:54:26.641457Z",
      "url": "https://files.pythonhosted.org/packages/a1/a9/5157f9af38aa4117104a3cbdd10cdc3adbfd2493a13a6efad821f8ff8838/mctorch-lib-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}