{
  "info": {
    "author": "VanL",
    "author_email": "van.lindberg+fragmentsoup@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "FragmentSoup\n############\n\nThis is a thin wrapper for BeautifulSoup4 that restores the ability to work with \nHTML fragments. For example:\n\n.. code-block:: python\n\n    from bs4 import BeautifulSoup\n    from fragmentsoup import FragmentSoup\n    soup = BeautifulSoup('<b class=\"boldest\">Extremely bold</b>', features='html5lib')\n    soup\n    # <html><head></head><body><b class=\"boldest\">Extremely bold</b></body></html>\n    # Note that the fragment is wrapped to make it a valid html document\n\n    soup = FragmentSoup('<b class=\"boldest\">Extremely bold</b>', features='html5lib')\n    soup\n    # <b class=\"boldest\">Extremely bold</b>\n    # FragmentSoup keeps it as a fragment\n\nIn almost all cases, a FragmentSoup instance should work exactly the same as a\nBeautifulSoup instance. The one notable exception is that calling 'wrap' on a Fragment\nitself will wrap the entire Fragment and return itself:\n\n.. code-block:: python\n\n    from fragmentsoup import FragmentSoup\n    soup = FragmentSoup('<b class=\"boldest\">Extremely bold</b>', features='html5lib')\n    soup\n    # <b class=\"boldest\">Extremely bold</b>\n\n    soup.wrap(soup.new_tag('div') \n    # <div><b class=\"boldest\">Extremely bold</b></div>\n\nIf you wrap a subelement, it returns a BeautifulSoup \"Tag\" instance. If you want to use\nthe returned wrapped subelement as a Fragment, you will need to wrap the returned Tag\ninstance to use it as a fragment:\n\n.. code-block:: python\n\n    from fragmentsoup import FragmentSoup\n    soup = FragmentSoup('<div><b class=\"boldest\">Extremely bold</b></div>', features='html5lib')\n    subdocument = soup.b.wrap(soup.new_tag('h1'))\n    subdocument\n    # <h1><b class=\"boldest\">Extremely bold</b></h1>\n    type(subdocument)\n    # <class 'bs4.element.Tag'>\n\n    subdocument = FragmentSoup(subdocument)\n    type(subdocument)\n    # <class 'fragmentsoup.FragmentSoup'>\n\n\nThis also applies to Tags returned as a result of unwrapping a part of the document.\n\nWhat if I pass in a well-formed document?\n=========================================\n\nIf you pass in a full document (which is defined as starting with a <!DOCTYPE> or <html>\ntag), then FragmentSoup assumes that the resulting tree is well-formed and it acts exactly\nas if it were a regular BeautifulSoup instance. It will not allow you to wrap the well-formed\ndocument with a tag - it will raise a ValueError (just as regular BeautifulSoup does).\n\nHow does it work?\n=================\n\nFragmentSoup wraps the incoming snippet in a dummy <fragmentsoup> tag that it removes (along with\nall context outside the <fragmentsoup> tag before rendering. Otherwise, it defers any attribute \naccesses to an internal BeautifulSoup instance.\n\nBugs\n====\n\nAside from the differences noted above, any difference in behavior from regular BeautifulSoup4\nis a bug. Reports and patches welcome.\n\n\n\n.. _change-log-label:\n\nChange Log\n==========\n\nVersion History\n---------------\n\n0.6.0\n    * Initial release to Github and PyPI\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/VanL/FragmentSoup",
    "keywords": "fragmentsoup,beautifulsoup,beautifulsoup4",
    "license": "MIT license",
    "maintainer": "VanL",
    "maintainer_email": "van.lindberg+fragmentsoup@gmail.com",
    "name": "fragmentsoup",
    "package_url": "https://pypi.org/project/fragmentsoup/",
    "platform": "",
    "project_url": "https://pypi.org/project/fragmentsoup/",
    "project_urls": {
      "Homepage": "https://github.com/VanL/FragmentSoup"
    },
    "release_url": "https://pypi.org/project/fragmentsoup/0.6.1/",
    "requires_dist": [
      "beautifulsoup4"
    ],
    "requires_python": "",
    "summary": "A wrapper for BeautifulSoup4 that restores the ability to work with HTML fragments",
    "version": "0.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9813301,
  "releases": {
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20b8d74b4668d5a29ea23102a8a09e8706ae2be59c8df8e9894683cfe6de2d2c",
          "md5": "cffdbbcec2523f70daa135ebe6b133b1",
          "sha256": "2050630992905cb134c51c24b5de62d49e6b1e225099ffcf5e26936ec6b90771"
        },
        "downloads": -1,
        "filename": "fragmentsoup-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cffdbbcec2523f70daa135ebe6b133b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3718,
        "upload_time": "2021-03-18T20:41:44",
        "upload_time_iso_8601": "2021-03-18T20:41:44.286818Z",
        "url": "https://files.pythonhosted.org/packages/20/b8/d74b4668d5a29ea23102a8a09e8706ae2be59c8df8e9894683cfe6de2d2c/fragmentsoup-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8942a5d403475873dafb5ee58d2eedfdb0c6e8262b1537403e2a6ccceaa375f",
          "md5": "4f8cac6707fe8cc840679ad1a9de9644",
          "sha256": "ea894a2b52ce2b8efdb8e2478f948b57629a8ea9f435cd8328272150d94edb6a"
        },
        "downloads": -1,
        "filename": "fragmentsoup-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f8cac6707fe8cc840679ad1a9de9644",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3754,
        "upload_time": "2021-03-18T21:39:07",
        "upload_time_iso_8601": "2021-03-18T21:39:07.427289Z",
        "url": "https://files.pythonhosted.org/packages/f8/94/2a5d403475873dafb5ee58d2eedfdb0c6e8262b1537403e2a6ccceaa375f/fragmentsoup-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f8942a5d403475873dafb5ee58d2eedfdb0c6e8262b1537403e2a6ccceaa375f",
        "md5": "4f8cac6707fe8cc840679ad1a9de9644",
        "sha256": "ea894a2b52ce2b8efdb8e2478f948b57629a8ea9f435cd8328272150d94edb6a"
      },
      "downloads": -1,
      "filename": "fragmentsoup-0.6.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4f8cac6707fe8cc840679ad1a9de9644",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3754,
      "upload_time": "2021-03-18T21:39:07",
      "upload_time_iso_8601": "2021-03-18T21:39:07.427289Z",
      "url": "https://files.pythonhosted.org/packages/f8/94/2a5d403475873dafb5ee58d2eedfdb0c6e8262b1537403e2a6ccceaa375f/fragmentsoup-0.6.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}