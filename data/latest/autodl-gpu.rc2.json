{
  "info": {
    "author": "DeepWisdom",
    "author_email": "autodl@fuzhi.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "English | [简体中文](./README.md)\n\n<p align=\"center\">\n\n[![GitHub issues](https://img.shields.io/github/issues/DeepWisdom/AutoDL)](https://github.com/DeepWisdom/AutoDL/issues)\n[![GitHub forks](https://img.shields.io/github/forks/DeepWisdom/AutoDL)](https://github.com/DeepWisdom/AutoDL/network)\n[![GitHub stars](https://img.shields.io/github/stars/DeepWisdom/AutoDL)](https://github.com/DeepWisdom/AutoDL/stargazers)\n![GitHub release (latest by date)](https://img.shields.io/github/v/release/deepwisdom/AutoDL)\n[![GitHub license](https://img.shields.io/github/license/DeepWisdom/AutoDL)](https://github.com/DeepWisdom/AutoDL/blob/master/LICENSE)\n![img](https://img.shields.io/badge/python-3.5-brightgreen)\n[![img](https://img.shields.io/badge/chat-wechat-green)](https://github.com/DeepWisdom/AutoDL#%E5%8A%A0%E5%85%A5%E7%A4%BE%E5%8C%BA)\n</p>\n\n# 1. NeurIPS AutoDL Challenge 1'st Solution\n\n![img](https://github.com/DeepWisdom/AutoDL/tree/pip/assets/autodl_logo_full.png)\n![img](https://raw.githubusercontent.com/DeepWisdom/AutoDL/pip/assets/autodl_logo_full.png)\n\n\n**1st** solution for [AutoDL Challenge@NeurIPS](https://autodl.chalearn.org/neurips2019), competition rules can be found at [AutoDL Competition](https://autodl.lri.fr/competitions/162).\n\n### 1.0.1. Motivation \nThere exists a series of common and tough problems in the real world, such as limited resources (CPU/ memory), skewed data, hand-craft features, model selection, network architecture details tuning, sensitivity of pre-trained models, sensitivity of hyperparameters and so on. How to solve them wholly and efficiently?\n\n\n### 1.0.2. Solution \nAutoDL concentrates on developing generic algorithms for multi-label classification problems in ANY modalities: image, video, speech, text and tabular data without ANY human intervention.  **Ten seconds** at the soonest, our solution achieved SOTA performances on all the 24 offline datasets and 15 online datasets, beating a number of top players in the world.\n\n\n## 1.1. Table of Contents\n<!-- TOC -->\n\n- [1. NeurIPS AutoDL Challenge 1'st Solution](#1-neurips-autodl-challenge-1st-solution)\n    - [1.0.1. Motivation](#101-motivation)\n    - [1.0.2. Solution](#102-solution)\n  - [1.1. Table of Contents](#11-table-of-contents)\n  - [1.2. Features](#12-features)\n  - [1.3. Evaluation](#13-evaluation)\n  - [1.4. Installation](#14-installation)\n    - [1.4.1. With pip](#141-with-pip)\n  - [1.5. Quick Tour](#15-quick-tour)\n    - [1.5.1. Run local test tour](#151-run-local-test-tour)\n    - [1.5.2. Tour of Image Classification](#152-tour-of-image-classification)\n    - [1.5.3. Tour of Video Classification](#153-tour-of-video-classification)\n    - [1.5.4. Tour of Speech Classification](#154-tour-of-speech-classification)\n    - [1.5.5. Tour of Text Classification](#155-tour-of-text-classification)\n    - [1.5.6. Tour of Tabular Classification](#156-tour-of-tabular-classification)\n  - [1.6. Public Datasets](#16-public-datasets)\n    - [1.6.1. Optional: Download public datasets](#161-optional-download-public-datasets)\n    - [1.6.2. Public datasets sample info](#162-public-datasets-sample-info)\n  - [1.7. Usage for AutoDL local development and testing](#17-usage-for-autodl-local-development-and-testing)\n  - [1.8. Contributing](#18-contributing)\n  - [1.9. Contact us](#19-contact-us)\n  - [1.10. Join the Community](#110-join-the-community)\n  - [1.11. License](#111-license)\n\n<!-- /TOC -->\n\n\n\n## 1.2. Features\n- **Full-AutoML/AutoDL**: Fully automated Deep Learning without ANY human intervention covering the whole pipelines.\n- **Generic & Universal**: Supporting ANY modality(image, video, speech, text, tabular) data, and **ANY** classification problems including binary-class, multi-class and multi-label problems.\n- **SOTA**: Winner solution of AutoDL challenge, involving both tranditional machine learning models and deep learning model backbones. \n- **Out-of-the-Box**: You can use the solution out-of-the-box.\n- **Fast**: You can train your model in **ten seconds** at the soonest to get highly competitive performance.\n- **Real-time**: You can get the performance feedback(AUC score) in real time.\n\n\n\n## 1.3. Evaluation\n\n\n- **Feedback-phase leaderboard: DeepWisdom Top 1, average rank 1.2, won 4 out of 5 datasets.**\n![img](https://raw.githubusercontent.com/DeepWisdom/AutoDL/pip/assets/feedback-lb.png)\n\n- **Final-phase leaderboard visualization: DeepWisdom Top 1, average rank 1.2, won 7 out of 10 datasets.**\n![img](https://raw.githubusercontent.com/DeepWisdom/AutoDL/pip/assets/final-lb-visual.png)\n\n\n## 1.4. Installation\n\nThis repo is tested on Python 3.6+, PyTorch 1.0.0+ and TensorFlow 2.0.\n\nYou should install AutoDL in a [virtual environment](https://docs.python.org/3/library/venv.html). If you're unfamiliar with Python virtual environments, check out the [user guide](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/).\n\nCreate a virtual environment with the version of Python you're going to use and activate it.\n\nNow, if you want to use AutoDL, you can install it with pip.\n\n### 1.4.1. With pip\n\nAutoDL can be installed using pip as follows:\n\n```bash\npip install autodl-gpu \npip install autodl-gpu=1.0.0 \n```\n\n## 1.5. Quick Tour\n### 1.5.1. Run local test tour\nsee [Quick Tour - Run local test tour](https://github.com/DeepWisdom/AutoDL/tree/pip/docs/run_local_test_tutorial_chn.md).\n\n\n### 1.5.2. Tour of Image Classification\nsee [Quick Tour - Image Classification Demo](https://github.com/DeepWisdom/AutoDL/tree/pip/docs/image_classification_tutorial_chn.md).\n\n### 1.5.3. Tour of Video Classification\nsee [Quick Tour - Video Classification Demo](https://github.com/DeepWisdom/AutoDL/pip/docs/video_classification_tutorial_chn.md).\n\n### 1.5.4. Tour of Speech Classification\nsee [Quick Tour - Speech Classification Demo](https://github.com/DeepWisdom/AutoDL/pip/docs/speech_classification_tutorial_chn.md).\n\n### 1.5.5. Tour of Text Classification\nsee [Quick Tour - Text Classification Demo](https://github.com/DeepWisdom/AutoDL/pip/docs/text_classification_tutorial_chn.md).\n\n### 1.5.6. Tour of Tabular Classification\nsee [Quick Tour - Tabular Classification Demo](https://github.com/DeepWisdom/AutoDL/pip/docs/tabular_classification_tutorial_chn.md).\n\n\n## 1.6. Public Datasets\n### 1.6.1. Optional: Download public datasets\n```bash\npython download_public_datasets.py\n```\n\n### 1.6.2. Public datasets sample info \n| #   | Name     | Type    | Domain   | Size   | Source      | Data (w/o test labels) | Test labels       |\n| --- | -------- | ------- | -------- | ------ | ----------- | ---------------------- | ----------------- |\n| 1   | Munster  | Image   | HWR      | 18 MB  | MNIST       | munster.data           | munster.solution  |\n| 2   | City     | Image   | Objects  | 128 MB | Cifar-10    | city.data              | city.solution     |\n| 3   | Chucky   | Image   | Objects  | 128 MB | Cifar-100   | chucky.data            | chucky.solution   |\n| 4   | Pedro    | Image   | People   | 377 MB | PA-100K     | pedro.data             | pedro.solution    |\n| 5   | Decal    | Image   | Aerial   | 73 MB  | NWPU VHR-10 | decal.data             | decal.solution    |\n| 6   | Hammer   | Image   | Medical  | 111 MB | Ham10000    | hammer.data            | hammer.solution   |\n| 7   | Kreatur  | Video   | Action   | 469 MB | KTH         | kreatur.data           | kreatur.solution  |\n| 8   | Kreatur3 | Video   | Action   | 588 MB | KTH         | kreatur3.data          | kreatur3.solution |\n| 9   | Kraut    | Video   | Action   | 1.9 GB | KTH         | kraut.data             | kraut.solution    |\n| 10  | Katze    | Video   | Action   | 1.9 GB | KTH         | katze.data             | katze.solution    |\n| 11  | data01   | Speech  | Speaker  | 1.8 GB | --          | data01.data            | data01.solution   |\n| 12  | data02   | Speech  | Emotion  | 53 MB  | --          | data02.data            | dat02.solution    |\n| 13  | data03   | Speech  | Accent   | 1.8 GB | --          | data03.data            | data03.solution   |\n| 14  | data04   | Speech  | Genre    | 469 MB | --          | data04.data            | data04.solution   |\n| 15  | data05   | Speech  | Language | 208 MB | --          | data05.data            | data05.solution   |\n| 16  | O1       | Text    | Comments | 828 KB | --          | O1.data                | O1.solution       |\n| 17  | O2       | Text    | Emotion  | 25 MB  | --          | O2.data                | O2.solution       |\n| 18  | O3       | Text    | News     | 88 MB  | --          | O3.data                | O3.solution       |\n| 19  | O4       | Text    | Spam     | 87 MB  | --          | O4.data                | O4.solution       |\n| 20  | O5       | Text    | News     | 14 MB  | --          | O5.data                | O5.solution       |\n| 21  | Adult    | Tabular | Census   | 2 MB   | Adult       | adult.data             | adult.solution    |\n| 22  | Dilbert  | Tabular | --       | 162 MB | --          | dilbert.data           | dilbert.solution  |\n| 23  | Digits   | Tabular | HWR      | 137 MB | MNIST       | digits.data            | digits.solution   |\n| 24  | Madeline | Tabular | --       | 2.6 MB | --          | madeline.data          | madeline.solution |\n\n\n\n## 1.7. Usage for AutoDL local development and testing\nw1. Git clone the repo\n```\ncd <path_to_your_directory>\ngit clone https://github.com/DeepWisdom/AutoDL.git\n```\n2. Prepare pretrained models.\nDownload model [speech_model.h5](https://github.com/DeepWisdom/AutoDL/releases/download/opensource/thin_resnet34.h5) and put it to `AutoDL_sample_code_submission/at_speech/pretrained_models/` directory.\n\n3. Optional: run in the exact same environment as on the challenge platform with docker. \n    - CPU\n    ```\n    cd path/to/autodl/\n    docker run -it -v \"$(pwd):/app/codalab\" -p 8888:8888 evariste/autodl:cpu-latest\n    ```\n    - GPU\n    ```\n    nvidia-docker run -it -v \"$(pwd):/app/codalab\" -p 8888:8888 evariste/autodl:gpu-latest\n    ```\n4. Prepare sample datasets, using the toy data in `AutoDL_sample_data` or download new datasets.\n\n5. Run local test\n```\npython run_local_test.py\n```\nThe full usage is\n```\npython run_local_test.py -dataset_dir='AutoDL_sample_data/miniciao' -code_dir='AutoDL_sample_code_submission'\n```\nThen you can view the real-time feedback with a learning curve by opening the\nHTML page in `AutoDL_scoring_output/`.\n\n\nDetails can be seen in [AutoDL Challenge official starting_kit](https://github.com/zhengying-liu/autodl_starting_kit_stable).\n\n\n## 1.8. Contributing\n\nFeel free to dive in! [Open an issue](https://github.com/DeepWisdom/AutoDL/issues/new) or submit PRs.\n\n## 1.9. Contact us\n[![img](https://raw.githubusercontent.com/DeepWisdom/AutoDL/pip/assets/deepwisdom-logo-white.svg \"title\")](http://fuzhi.ai/)\n\n\n## 1.10. Join the Community\nScan QR code and join AutoDL community!\n\n<img src=\"https://raw.githubusercontent.com/DeepWisdom/AutoDL/pip/assets/WechatIMG15.png\" width = \"500\" height = \"200\" alt=\"AutoDL Community\" align=center />\n\n\n## 1.11. License\n[Apache License 2.0](https://github.com/DeepWisdom/AutoDL/blob/master/LICENSE)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/DeepWisdom/AutoDL/archive/v1.0.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DeepWisdom/AutoDL",
    "keywords": "autodl,automl,nas,feature-engineering,model-selection,full-automl,artificial-intelligence,lightgbm,resnet,pytorch,tensorflow,python,autodl-challenge,ai,deeplearning,data-science,machine-learning,big-data,multi-label,automated-machine-learning",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "autodl-gpu",
    "package_url": "https://pypi.org/project/autodl-gpu/",
    "platform": "",
    "project_url": "https://pypi.org/project/autodl-gpu/",
    "project_urls": {
      "Bug Reports": "https://github.com/DeepWisdom/AutoDL/issues",
      "Download": "https://github.com/DeepWisdom/AutoDL/archive/v1.0.0.tar.gz",
      "Homepage": "https://github.com/DeepWisdom/AutoDL",
      "Source": "https://github.com/DeepWisdom/AutoDL"
    },
    "release_url": "https://pypi.org/project/autodl-gpu/0.1.1/",
    "requires_dist": [
      "numpy (==1.16.2)",
      "pandas (==0.24.2)",
      "tensorflow-gpu (==1.15.0)",
      "jupyter (==1.0.0)",
      "seaborn (==0.9.0)",
      "scipy (==1.2.1)",
      "matplotlib (==3.0.3)",
      "scikit-learn (==0.20.3)",
      "pyyaml (==5.1.1)",
      "psutil (==5.6.6)",
      "h5py (==2.9.0)",
      "keras (==2.2.4)",
      "playsound (==1.2.2)",
      "librosa (==0.7.1)",
      "protobuf (==3.7.1)",
      "xgboost (==0.90)",
      "lightgbm (==2.2.3)",
      "torch (==1.3.1)",
      "torchvision (==0.4.2)",
      "jieba (==0.39)",
      "nltk (==3.4.5)",
      "spacy (==2.1.6)",
      "gensim (==3.8.0)",
      "polyglot (==16.7.4)",
      "hyperopt (==0.2.3)",
      "catboost (==0.21)",
      "fastai",
      "kapre (==0.1.4)",
      "keras-radam",
      "pytest (>=4.4.0) ; extra == 'tests'",
      "flake8 ; extra == 'tests'",
      "isort ; extra == 'tests'",
      "pytest-xdist ; extra == 'tests'",
      "pytest-cov ; extra == 'tests'",
      "coverage ; extra == 'tests'",
      "typeguard (<3,>=2) ; extra == 'tests'",
      "typedapi (<0.3,>=0.2) ; extra == 'tests'"
    ],
    "requires_python": ">=3.6",
    "summary": "Automatic Deep Learning, towards fully automated multi-label classification for image, video, text, speech, tabular data.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7270955,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4387ebd346a02f386a20480894d4d6262a85cb276cce3a744ede3598a075b37b",
          "md5": "bdb23ec8032bcb69d978475f3ad51d08",
          "sha256": "85c070185570230beb85b20d6fdfa7068a6a8331d21e1ff2c56601de2e76afe2"
        },
        "downloads": -1,
        "filename": "autodl_gpu-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bdb23ec8032bcb69d978475f3ad51d08",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 235515,
        "upload_time": "2020-05-18T18:11:50",
        "upload_time_iso_8601": "2020-05-18T18:11:50.649983Z",
        "url": "https://files.pythonhosted.org/packages/43/87/ebd346a02f386a20480894d4d6262a85cb276cce3a744ede3598a075b37b/autodl_gpu-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ce8da54ea0a4bd71c1723a3fb72676782a4efd8673fc10f58fc8ebef5f03369",
          "md5": "16ae43dec3655cdb3c11de56fb3eb903",
          "sha256": "200ad2a1da9416d69b45caaf2450feb352a8d1e7bbc412bb754c87355255e2d2"
        },
        "downloads": -1,
        "filename": "autodl-gpu-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "16ae43dec3655cdb3c11de56fb3eb903",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 173304,
        "upload_time": "2020-05-18T18:11:53",
        "upload_time_iso_8601": "2020-05-18T18:11:53.486027Z",
        "url": "https://files.pythonhosted.org/packages/3c/e8/da54ea0a4bd71c1723a3fb72676782a4efd8673fc10f58fc8ebef5f03369/autodl-gpu-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee0deb5fb01a11d88b9b0c4f0973809c0cb032db91cb4d3182ac764e508e5e40",
          "md5": "2a7590c932037752bdb89fd16f1fba8b",
          "sha256": "826d853d7767ecf27a994547430ed82ef7ab79676e196a2dab79152802b9413a"
        },
        "downloads": -1,
        "filename": "autodl_gpu-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a7590c932037752bdb89fd16f1fba8b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 235554,
        "upload_time": "2020-05-18T19:12:57",
        "upload_time_iso_8601": "2020-05-18T19:12:57.931887Z",
        "url": "https://files.pythonhosted.org/packages/ee/0d/eb5fb01a11d88b9b0c4f0973809c0cb032db91cb4d3182ac764e508e5e40/autodl_gpu-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d43de6878d31d0a13c12e4b3bde88b0278ce7680662e4a9081b1c7f4dea0396",
          "md5": "00bd647ac463ef4a7b6d283bc4e75069",
          "sha256": "994a13cb5b2436138bdc37d8b9523582b6c553f77f864e51bffaf59b6abd6866"
        },
        "downloads": -1,
        "filename": "autodl-gpu-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "00bd647ac463ef4a7b6d283bc4e75069",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 173385,
        "upload_time": "2020-05-18T19:12:59",
        "upload_time_iso_8601": "2020-05-18T19:12:59.537347Z",
        "url": "https://files.pythonhosted.org/packages/2d/43/de6878d31d0a13c12e4b3bde88b0278ce7680662e4a9081b1c7f4dea0396/autodl-gpu-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee0deb5fb01a11d88b9b0c4f0973809c0cb032db91cb4d3182ac764e508e5e40",
        "md5": "2a7590c932037752bdb89fd16f1fba8b",
        "sha256": "826d853d7767ecf27a994547430ed82ef7ab79676e196a2dab79152802b9413a"
      },
      "downloads": -1,
      "filename": "autodl_gpu-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2a7590c932037752bdb89fd16f1fba8b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 235554,
      "upload_time": "2020-05-18T19:12:57",
      "upload_time_iso_8601": "2020-05-18T19:12:57.931887Z",
      "url": "https://files.pythonhosted.org/packages/ee/0d/eb5fb01a11d88b9b0c4f0973809c0cb032db91cb4d3182ac764e508e5e40/autodl_gpu-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d43de6878d31d0a13c12e4b3bde88b0278ce7680662e4a9081b1c7f4dea0396",
        "md5": "00bd647ac463ef4a7b6d283bc4e75069",
        "sha256": "994a13cb5b2436138bdc37d8b9523582b6c553f77f864e51bffaf59b6abd6866"
      },
      "downloads": -1,
      "filename": "autodl-gpu-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "00bd647ac463ef4a7b6d283bc4e75069",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 173385,
      "upload_time": "2020-05-18T19:12:59",
      "upload_time_iso_8601": "2020-05-18T19:12:59.537347Z",
      "url": "https://files.pythonhosted.org/packages/2d/43/de6878d31d0a13c12e4b3bde88b0278ce7680662e4a9081b1c7f4dea0396/autodl-gpu-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}