{
  "info": {
    "author": "Richard D. Paul",
    "author_email": "r.paul@fz-juelich.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# docov\n\n[![docov](https://ripaul.github.io/docov/docov.svg)](https://ripaul.github.io/docov/docov.txt)\n\nLight-weight, recursive docstring coverage analysis for python modules. \n\n## Overview\n\n`docov` provides light-weight docstring coverage analysis for python modules. \nIt recursively collects symbols defined by the specified module and checks whether these\nsymbols have docstrings and if they are longer than at least 20 symbols.\n\nThe docstring coverage is computed simply as the fraction of symbols which are deemed\nto have a sufficient docstring and the total number of symbols found.\n\nThe command-line utility will generate a badge indicating the docstring coverage and \na report listing all symbols found in the module, which do not have sufficient\ndocstrings.\n\nIn order to not distort the docstring coverage, symbols and modules (and their symbols)\ncan be ignored in the analysis. \nThis allows for some fine-tuning in really only considering the desired module's symbols.\nBuiltin types are currently always ignored, meaning that e.g. methods of a string object\nin a module will not be assessed.\n\n## Installation\n\n`docov` is available via [PyPI](https://pypi.org/project/docov/):\n```\n$ pip install docov\n```\n\n## Usage\n\nOnce installed, `docov` can be used from the command-line\n```\n$ docov <module-name>\n```\nwhich will produce a badge and a report on symbols, which were deemed to have insufficient docstring.\n\nA short help text on available options can be found with\n\n```\n$ docov -h\nusage: docov [-h] [-o DIR] [-p PREFIX] [-i SYMBOL [SYMBOL ...]] [-d DEPTH] [--no-badge] [--no-report] MODULE\n\nCommand line utility to analyze docstring coverage of python modules.\nWorks by recursively fetching the module's symbol's docstrings and \nchecking that they consist of at least 20 characters.\n\nGenerates a SVG-badge and a report if not specified otherwise, stored in\nDIR/[PREFIX_]docov.svg and DIR/[PREFIX_]docov.txt respectively.\n\npositional arguments:\n  MODULE                The module which is to be analyzed.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o DIR, --output DIR  Output directory.\n  -p PREFIX, --prefix PREFIX\n                        Output file prefix: PREFIX_docov.[txt,svg]\n  -i SYMBOL [SYMBOL ...], --ignore SYMBOL [SYMBOL ...]\n                        Ignore symbols. If the symbol names a module, all its types will be ignored in the recursion.\n  -d DEPTH, --depth DEPTH\n                        Analysis recursion depth.\n  --no-badge            Suppress badge generation.\n  --no-report           Suppress report generation.\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ripaul/docov",
    "keywords": "coverage,development",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "docov",
    "package_url": "https://pypi.org/project/docov/",
    "platform": "",
    "project_url": "https://pypi.org/project/docov/",
    "project_urls": {
      "Bug Reports": "https://github.com/ripaul/docov/issues",
      "Homepage": "https://github.com/ripaul/docov",
      "Source": "https://github.com/ripaul/docov/"
    },
    "release_url": "https://pypi.org/project/docov/0.0.3/",
    "requires_dist": [
      "anybadge",
      "argparse"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "Light-weight docstring coverage analysis for python modules",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12765503,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae16db760dae0579a8e7ebae8ab5575701d5ad40435589669ff8d02c34079d9a",
          "md5": "d228e353c69d7d088a1d092f94286d76",
          "sha256": "86024effc01a1931ada582e7252764402e78e22d5caff885ebff19aa0ccf6981"
        },
        "downloads": -1,
        "filename": "docov-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d228e353c69d7d088a1d092f94286d76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 5589,
        "upload_time": "2022-01-30T19:05:11",
        "upload_time_iso_8601": "2022-01-30T19:05:11.121858Z",
        "url": "https://files.pythonhosted.org/packages/ae/16/db760dae0579a8e7ebae8ab5575701d5ad40435589669ff8d02c34079d9a/docov-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "124914f9e9478b33ae027be5b5f353f78c6cad10e1dc4922185957218dc22986",
          "md5": "d7f2f27562647d13fde276d33eb54251",
          "sha256": "5be4e0a321b4d366c2d1dfad9e48654e89bbfc060797a801a1d7c4b424ce22a5"
        },
        "downloads": -1,
        "filename": "docov-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7f2f27562647d13fde276d33eb54251",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 6727,
        "upload_time": "2022-01-31T14:19:31",
        "upload_time_iso_8601": "2022-01-31T14:19:31.954348Z",
        "url": "https://files.pythonhosted.org/packages/12/49/14f9e9478b33ae027be5b5f353f78c6cad10e1dc4922185957218dc22986/docov-0.0.2-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Wrong upload"
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38c3dafd98f752e260751c155ed7c8c790b047dff6e66c1115f772d2b9db85ed",
          "md5": "be01f697de3cf45f0b1e51f7734eebf8",
          "sha256": "3053311286a4c556ad7b8fbf8d850b95a8c8405491548cae4315e82a56ae1477"
        },
        "downloads": -1,
        "filename": "docov-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be01f697de3cf45f0b1e51f7734eebf8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 6884,
        "upload_time": "2022-02-02T13:55:10",
        "upload_time_iso_8601": "2022-02-02T13:55:10.698945Z",
        "url": "https://files.pythonhosted.org/packages/38/c3/dafd98f752e260751c155ed7c8c790b047dff6e66c1115f772d2b9db85ed/docov-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "38c3dafd98f752e260751c155ed7c8c790b047dff6e66c1115f772d2b9db85ed",
        "md5": "be01f697de3cf45f0b1e51f7734eebf8",
        "sha256": "3053311286a4c556ad7b8fbf8d850b95a8c8405491548cae4315e82a56ae1477"
      },
      "downloads": -1,
      "filename": "docov-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "be01f697de3cf45f0b1e51f7734eebf8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 6884,
      "upload_time": "2022-02-02T13:55:10",
      "upload_time_iso_8601": "2022-02-02T13:55:10.698945Z",
      "url": "https://files.pythonhosted.org/packages/38/c3/dafd98f752e260751c155ed7c8c790b047dff6e66c1115f772d2b9db85ed/docov-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}