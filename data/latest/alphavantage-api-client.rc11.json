{
  "info": {
    "author": "Slashbin, LLC",
    "author_email": "support@slashbin.us",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Alpha Vantage API Client\n\n## API Overview\n\nSimple python wrapper around alpha vantage api. This client implements production readiness\nby storing your api key safely and a consistent data model from the api. You can log your response into splunk or cloud\nwatch to create SRE (site reliability engineering)\ndashboards to help you improve your stock market searches.\n\n- You can find alpha vantage api here: https://www.alphavantage.co/\n- See the alpha vantage api documentation: https://www.alphavantage.co/documentation/\n- Get your free api key here: https://www.alphavantage.co/support/#api-key\n\n**NOTE: Free API keys have a limit of 5 calls per min and max of 500 calls per day.**\n\n## Notable Class Information\n\n#### Base Fields\n\n1. success (true/false) flag into your response. You can log response into splunk or cloudwatch and know when something\n   fails.\n2. limit_reached (true/false) flag into your response. You can know the difference between an error and reaching limit.\n   so you can pause processing until you api key is allowed to make more requests.\n3. error_message (str) is the response message from the api or this client with details on what went wrong and how to\n   fix it.\n\n#### GlobalQuote, Quote\n\n1. data (dictionary) contains the information requested.\n2. meta_data (dictionary) data describing the data requested.\n\n#### AccountingReport\n\n1. annualReports (list) contains the annual earnings or income statement data requested.\n2. quarterlyReports (list) contains the quarterly earnings or income statement data requested.\n\n#### CompanyOverview\n\nAll data from the company overview api\n(example: https://www.alphavantage.co/query?function=OVERVIEW&symbol=IBM&apikey=demo)\nwill yield a strongly typed object to include the based fields mentioned above.\n**_Please Note_** some fields in this class have been renamed for clarity and to be more pythonic.\n\n#### RealGDP\n\n1. name (str)\n2. interval (str)\n3. unit (str)\n4. data (list) GDP data requested\n\n## Install from pip\n\n```\npip install alphavantage_api_client\n```\n\n## Sample Usage Specifying Api Key in Client Builder\n\n```\nfrom alphavantage_api_client import AlphavantageClient\n\nclient = AlphavantageClient().with_api_key(\"[your api key here]\")\nevent = {\n   \"symbol\": \"ibm\",\n   \"interval\": \"5min\"\n}\nglobal_quote = client.get_global_quote(event)\nassert global_quote.success, \"Success field is missing or False\"\nassert not global_quote.limit_reached, \"Limit reached is true but not hitting API\"\nassert global_quote.symbol == event[\"symbol\"], \"Symbol from results don't match event\"\nassert \"meta_data\" not in global_quote, \"Metadata should not be present since it's not in the api\"\nassert len(global_quote.data) > 0, \"Data field is zero or not present\"\n\nprint(f\"Response data {global_quote.json()}\")\n```\n\n## Sample Usage Specifying Api Key in request event\n\n```\nfrom alphavantage_api_client import AlphavantageClient\n\nclient = AlphavantageClient()\nevent = {\n   \"symbol\": \"ibm\",\n   \"interval\": \"5min\",\n   \"apikey\" : \"[your key here]\"\n}\nglobal_quote = client.get_global_quote(event)\nassert global_quote.success, \"Success field is missing or False\"\nassert not global_quote.limit_reached, \"Limit reached is true but not hitting API\"\nassert global_quote.symbol == event[\"symbol\"], \"Symbol from results don't match event\"\nassert \"meta_data\" not in global_quote, \"Metadata should not be present since it's not in the api\"\nassert len(global_quote.data) > 0, \"Data field is zero or not present\"\n\nprint(f\"Response data {global_quote.json()}\")\n```\n\n## Sample Usage Specifying Api Key in ini file\n\n#### On mac/linux based machines run the following command BUT use your own API KEY\n\n```\necho -e \"[access]\\napi_key=[your key here]\" > ~/.alphavantage\n```\n\n#### Now try the below\n\n```\nfrom alphavantage_api_client import AlphavantageClient\n\nclient = AlphavantageClient()\nevent = {\n   \"symbol\": \"ibm\",\n   \"interval\": \"5min\"\n}\nglobal_quote = client.get_global_quote(event)\nassert global_quote.success, \"Success field is missing or False\"\nassert not global_quote.limit_reached, \"Limit reached is true but not hitting API\"\nassert global_quote.symbol == event[\"symbol\"], \"Symbol from results don't match event\"\nassert \"meta_data\" not in global_quote, \"Metadata should not be present since it's not in the api\"\nassert len(global_quote.data) > 0, \"Data field is zero or not present\"\n\nprint(f\"Response data {global_quote.json()}\")\n```\n\n## Sample Usage Specifying API Key in environment variable\n\n#### On mac/linux based machines run the following command BUT use your own API KEY\n\n```\nexport ALPHAVANTAGE_API_KEY=[your key here]\n```\n\n#### Now try the below\n\n```\nfrom alphavantage_api_client import AlphavantageClient\n\nclient = AlphavantageClient()\nevent = {\n   \"symbol\": \"ibm\",\n   \"interval\": \"5min\"\n}\nglobal_quote = client.get_global_quote(event)\nassert global_quote.success, \"Success field is missing or False\"\nassert not global_quote.limit_reached, \"Limit reached is true but not hitting API\"\nassert global_quote.symbol == event[\"symbol\"], \"Symbol from results don't match event\"\nassert \"meta_data\" not in global_quote, \"Metadata should not be present since it's not in the api\"\nassert len(global_quote.data) > 0, \"Data field is zero or not present\"\n\nprint(f\"Response data {global_quote.json()}\")\n```\n\n## Available Data\n\n### Stock Price for Today\n\n```\nfrom alphavantage_api_client import AlphavantageClient\n\n# see section above to specify api key\n#\nclient = AlphavantageClient()\nevent = {\n   \"symbol\": \"ibm\",\n   \"interval\": \"5min\"\n}\nglobal_quote = client.get_global_quote(event)\nassert global_quote.success, \"Success field is missing or False\"\nassert not global_quote.limit_reached, \"Limit reached is true but not hitting API\"\nassert global_quote.symbol == event[\"symbol\"], \"Symbol from results don't match event\"\nassert \"meta_data\" not in global_quote, \"Metadata should not be present since it's not in the api\"\nassert len(global_quote.data) > 0, \"Data field is zero or not present\"\n\nprint(f\"Response data {global_quote.json()}\")\n```\n\n### Stock Price over multiple days\n\n```\nfrom alphavantage_api_client import AlphavantageClient\n\n# see section above to specify api key\n#\nevent = {\n   \"symbol\": \"ibm\",\n   \"interval\": \"5min\"\n}\nclient = AlphavantageClient()\nintraday_quote = client.get_intraday_quote(event)\nassert intraday_quote.success, \"Success field is missing or False\"\nassert not intraday_quote.limit_reached, \"Limit reached is true but not hitting API\"\nassert intraday_quote.symbol == event[\"symbol\"], \"Symbol from results don't match event\"\nassert len(intraday_quote.meta_data) > 0, \"Meta Data field is zero or not present\"\nassert len(intraday_quote.data) > 0, \"Time Series (5min) field is zero or not present\"\nprint(f\"json data{intraday_quote.json()}\")\n```\n\n### Company Overview\n\n```\nfrom alphavantage_api_client import AlphavantageClient\n\n# see section above to specify api key\n#\nevent = {\n   \"symbol\": \"IBM\"\n}\nclient = AlphavantageClient()\ncompany_overview = client.get_company_overview(event)\nassert company_overview.success, \"Success field is missing or False\"\nassert not company_overview.limit_reached, \"Limit reached is true but not hitting API\"\nassert company_overview.symbol == event[\"symbol\"], \"Symbol from results don't match event\"\nassert len(company_overview.ex_dividend_date), \"ExDividendDate is missing or empty or None\"\nassert len(company_overview.analyst_target_price), \"analyst_target_price field is missing or empty or None\"\nprint(f\"json data{company_overview.json()}\")\n```\n\n### Get Economic Indicators\n\n```\nfrom alphavantage_api_client import AlphavantageClient\n\n# see section above to specify api key\n#\nevent = {\n   \"function\": \"REAL_GDP\"\n}\nclient = AlphavantageClient()\nreal_gdp = client.get_real_gdp(event)\nassert real_gdp.success, \"Success field is missing or False\"\nassert not real_gdp.limit_reached, \"Limit reached is true but not hitting API\"\nassert len(real_gdp.unit), \"unit field is missing, empty or None\"\nassert len(real_gdp.data), \"data field is missing, empty or None\"\nprint(f\"json data{real_gdp.json()}\")\n```\n\n### Quote Cryptocurrency\n\n```\nfrom alphavantage_api_client import AlphavantageClient\n\n# see section above to specify api key\n#\nevent = {\n   \"symbol\": \"ETH\",\n   \"function\": \"CRYPTO_INTRADAY\",\n   \"outputsize\": \"full\"\n}\nclient = AlphavantageClient()\nintraday_quote = client.get_crypto_intraday(event)\nassert intraday_quote.success, \"Success field is missing or False\"\nassert not intraday_quote.limit_reached, \"Limit reached is true but not hitting API\"\nassert intraday_quote.symbol == event[\"symbol\"], \"Symbol from results don't match event\"\nassert len(intraday_quote.data), \"data{} is empty but it should contain properties\"\nassert len(intraday_quote.meta_data), \"meta_data{} is empty but it should contain properties\"\nprint(f\"json data{intraday_quote.json()}\")\n```\n\n### Quote Technical Indicators\n\n```\nfrom alphavantage_api_client import AlphavantageClient\n\n# see section above to specify api key\n#\nevent = {\n   \"symbol\": \"ibm\",\n   \"function\": \"SMA\"\n}\nclient = AlphavantageClient()\nquote = client.get_technical_indicator(event)\nassert quote.success, \"Success field is missing or False\"\nassert not quote.limit_reached, \"Limit reached is true but not hitting API\"\nassert quote.symbol == event[\"symbol\"], \"Symbol from results don't match event\"\nassert len(quote.meta_data), \"Meta Data field is missing, empty or None\"\nassert len(quote.data), \"Technical Analysis: SMA field is missing, empty or None\"\nprint(f\"json data{quote.json()}\")\n```\n\n### Any Other Data Available\n\nSee https://www.alphavantage.co/documentation/\nThe event{} dictionary will contain the url parameters exactly as specified in the documentation. The response will include\nthe based fields and the exact response from the API. This is bypassing the normalization process, but might be useful\nfor you.\n\n```\nfrom alphavantage_api_client import AlphavantageClient\nimport json\n\n# see section above to specify api key\n#\nevent = {\n    \"function\": \"EMA\"\n}\nclient = AlphavantageClient()\nresults = client.get_data_from_alpha_vantage(event)\nassert type(results) is dict, \"Results object should be a dictionary\"\nassert len(results) > 0, \"There should be data in the results\"\n\nprint(f\"json data{json.dumps(results)}\")\n```\n\n## Debugging\n\nWe use the built in `import logging` library in python. Obtaining more information from the client behavior\nis as simple as adjusting your log levels.\n\n1. `logging.INFO` - This will get you json log statements (in case you put these into splunk or cloudwatch)\n   that show which method is doing the work, the action, and the value or data is produced (where applicable).\n\n   #### Example log showing where it found your API key\n\n   ```\n   {\n     \"method\": \"__init__\",\n     \"action\": \"/home/[your user name]/.alphavantage config file found\"\n   }\n   ```\n\n   #### Example log during client.global_quote(...) call. The data property is the raw response from alpha vantage api:\n\n   ```\n   {\n     \"method\": \"get_data_from_alpha_vantage\",\n     \"action\": \"response_from_alphavantage\",\n     \"status_code\": 200,\n     \"data\": \"{\\n    \\\"Global Quote\\\": {\\n        \\\"01. symbol\\\": \\\"TSLA\\\",\\n        \\\"02. open\\\": \\\"712.4050\\\",\\n        \\\"03. high\\\": \\\"738.2000\\\",\\n        \\\"04. low\\\": \\\"708.2600\\\",\\n        \\\"05. price\\\": \\\"737.1200\\\",\\n        \\\"06. volume\\\": \\\"31923565\\\",\\n        \\\"07. latest trading day\\\": \\\"2022-06-24\\\",\\n        \\\"08. previous close\\\": \\\"705.2100\\\",\\n        \\\"09. change\\\": \\\"31.9100\\\",\\n        \\\"10. change percent\\\": \\\"4.5249%\\\"\\n    }\\n}\"\n   }\n   ```\n\n   #### Example log after converting response text into dictionary before returning to client:\n\n   ```\n   {\n     \"method\": \"get_data_from_alpha_vantage\",\n     \"action\": \"return_value\",\n     \"data\": {\n       \"success\": true,\n       \"limit_reached\": false,\n       \"status_code\": 200,\n       \"Global Quote\": {\n         \"01. symbol\": \"TSLA\",\n         \"02. open\": \"712.4050\",\n         \"03. high\": \"738.2000\",\n         \"04. low\": \"708.2600\",\n         \"05. price\": \"737.1200\",\n         \"06. volume\": \"31923565\",\n         \"07. latest trading day\": \"2022-06-24\",\n         \"08. previous close\": \"705.2100\",\n         \"09. change\": \"31.9100\",\n         \"10. change percent\": \"4.5249%\"\n       },\n       \"symbol\": \"tsla\"\n     }\n   }\n   ```\n\n2. `logging.DEBUG` - This will get you all of the log statements from #1 and from the dependant libraries.\n   #### Example:\n   ```\n   INFO:root:{\"method\": \"__init__\", \"action\": \"/home/[your username]/.alphavantage config file found\"}\n   DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443\n   DEBUG:urllib3.connectionpool:https://www.alphavantage.co:443 \"GET /query?symbol=tsla&function=GLOBAL_QUOTE&apikey=YRV1XL63GDIFS42A HTTP/1.1\" 200 None\n   INFO:root:{\"method\": \"get_data_from_alpha_vantage\", \"action\": \"response_from_alphavantage\", \"status_code\": 200, \"data\": \"{\\n    \\\"Global Quote\\\": {\\n        \\\"01. symbol\\\": \\\"TSLA\\\",\\n        \\\"02. open\\\": \\\"712.4050\\\",\\n        \\\"03. high\\\": \\\"738.2000\\\",\\n        \\\"04. low\\\": \\\"708.2600\\\",\\n        \\\"05. price\\\": \\\"737.1200\\\",\\n        \\\"06. volume\\\": \\\"31923565\\\",\\n        \\\"07. latest trading day\\\": \\\"2022-06-24\\\",\\n        \\\"08. previous close\\\": \\\"705.2100\\\",\\n        \\\"09. change\\\": \\\"31.9100\\\",\\n        \\\"10. change percent\\\": \\\"4.5249%\\\"\\n    }\\n}\"}\n   INFO:root:{\"method\": \"get_data_from_alpha_vantage\", \"action\": \"return_value\", \"data\": {\"success\": true, \"limit_reached\": false, \"status_code\": 200, \"Global Quote\": {\"01. symbol\": \"TSLA\", \"02. open\": \"712.4050\", \"03. high\": \"738.2000\", \"04. low\": \"708.2600\", \"05. price\": \"737.1200\", \"06. volume\": \"31923565\", \"07. latest trading day\": \"2022-06-24\", \"08. previous close\": \"705.2100\", \"09. change\": \"31.9100\", \"10. change percent\": \"4.5249%\"}, \"symbol\": \"tsla\"}}\n   ```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xrgarcia/alphavantage-api-client",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alphavantage-api-client",
    "package_url": "https://pypi.org/project/alphavantage-api-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/alphavantage-api-client/",
    "project_urls": {
      "Homepage": "https://github.com/xrgarcia/alphavantage-api-client"
    },
    "release_url": "https://pypi.org/project/alphavantage-api-client/2.2.1/",
    "requires_dist": [
      "requests",
      "pydantic"
    ],
    "requires_python": ">=3.9",
    "summary": "Interact with Alphavantage REST API",
    "version": "2.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14982750,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72cba7d07eba811ace09c679d4765ddfa86519843b564c858fd029f17c5f80a7",
          "md5": "0ad90d4735dc8899134c29b7f6fc6df5",
          "sha256": "30f8b16a48ac574d00527934f9d834d2398462637393f6b91e7dc6a5e6ad74a0"
        },
        "downloads": -1,
        "filename": "alphavantage_api_client-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ad90d4735dc8899134c29b7f6fc6df5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6767,
        "upload_time": "2022-05-22T16:27:33",
        "upload_time_iso_8601": "2022-05-22T16:27:33.181173Z",
        "url": "https://files.pythonhosted.org/packages/72/cb/a7d07eba811ace09c679d4765ddfa86519843b564c858fd029f17c5f80a7/alphavantage_api_client-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16caa3f02623ce65923b7135e8cdfd3b56f3df4e9eef359fc628db12abb23cb3",
          "md5": "8f1b4e3ce45febea38e9de265668d201",
          "sha256": "fe12215057ac6ec49922fef13d9b8629131706807049cfe9be95adb10b3aee2e"
        },
        "downloads": -1,
        "filename": "alphavantage_api_client-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f1b4e3ce45febea38e9de265668d201",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6795,
        "upload_time": "2022-05-22T03:05:24",
        "upload_time_iso_8601": "2022-05-22T03:05:24.520892Z",
        "url": "https://files.pythonhosted.org/packages/16/ca/a3f02623ce65923b7135e8cdfd3b56f3df4e9eef359fc628db12abb23cb3/alphavantage_api_client-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4f270dbfc7752aed6540f0a642a524516b11cd2ef5ed0f36e8335b666270244",
          "md5": "c9c0ad8d8b12cfc32cf2dfd563545698",
          "sha256": "8145869ca0e5ec33e46ac2a7a8285a87905b1dbdc3aa7a4a41ef8534efcf9d53"
        },
        "downloads": -1,
        "filename": "alphavantage_api_client-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c9c0ad8d8b12cfc32cf2dfd563545698",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6796,
        "upload_time": "2022-05-22T16:24:25",
        "upload_time_iso_8601": "2022-05-22T16:24:25.401815Z",
        "url": "https://files.pythonhosted.org/packages/a4/f2/70dbfc7752aed6540f0a642a524516b11cd2ef5ed0f36e8335b666270244/alphavantage_api_client-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8aaacff5e02c038eebb2bb7c91bde19fac97e11960f00097ae6b5ae277778ec",
          "md5": "28fa512d5ac54dc8127719c292691942",
          "sha256": "9a80f6600c627290a651bb086c4fdf909447273b3261bbd4481504c6a8a91a3a"
        },
        "downloads": -1,
        "filename": "alphavantage_api_client-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "28fa512d5ac54dc8127719c292691942",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10108,
        "upload_time": "2022-05-22T16:27:34",
        "upload_time_iso_8601": "2022-05-22T16:27:34.453556Z",
        "url": "https://files.pythonhosted.org/packages/e8/aa/acff5e02c038eebb2bb7c91bde19fac97e11960f00097ae6b5ae277778ec/alphavantage_api_client-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "450c5bd2d2844b39b510905d57c861c3543693077a5f61b1a66ea7d3bdf64b7f",
          "md5": "8503e335d540b21c6693dd0dd157f026",
          "sha256": "b5be12ed7617084fb0d16dcf47c202d63ad2e953003261ec225228c9025734b2"
        },
        "downloads": -1,
        "filename": "alphavantage_api_client-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8503e335d540b21c6693dd0dd157f026",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6878,
        "upload_time": "2022-05-22T16:53:55",
        "upload_time_iso_8601": "2022-05-22T16:53:55.530994Z",
        "url": "https://files.pythonhosted.org/packages/45/0c/5bd2d2844b39b510905d57c861c3543693077a5f61b1a66ea7d3bdf64b7f/alphavantage_api_client-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "920cba2bd8bec519cf628a5d3a5403f12586f9d2b5721222fbd0543cec518195",
          "md5": "fec353e899f6e98b3d19aa0eeabb4209",
          "sha256": "af222957a0fabf86d05fbb388d395421eeec8ddbcf1605b8d211f69bf26f00f4"
        },
        "downloads": -1,
        "filename": "alphavantage_api_client-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fec353e899f6e98b3d19aa0eeabb4209",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8888,
        "upload_time": "2022-06-05T19:29:00",
        "upload_time_iso_8601": "2022-06-05T19:29:00.270303Z",
        "url": "https://files.pythonhosted.org/packages/92/0c/ba2bd8bec519cf628a5d3a5403f12586f9d2b5721222fbd0543cec518195/alphavantage_api_client-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ea88539860d6e50993ca38093f2419455497371deb78c654c9ebcf06688be9c",
          "md5": "30e9379d6f660628b8767bf4e8a30d35",
          "sha256": "ba37ef704089b4c7ec6ef596ed55cafa67b44234a651795a8cffeb1e40ef156c"
        },
        "downloads": -1,
        "filename": "alphavantage_api_client-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "30e9379d6f660628b8767bf4e8a30d35",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16119,
        "upload_time": "2022-06-16T13:55:44",
        "upload_time_iso_8601": "2022-06-16T13:55:44.161119Z",
        "url": "https://files.pythonhosted.org/packages/3e/a8/8539860d6e50993ca38093f2419455497371deb78c654c9ebcf06688be9c/alphavantage_api_client-1.0.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "missing dependancies"
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ed9fe329c5d695b8fa0158bcc1cd6c37f13d0621f358d7408e0cb0997ec2523",
          "md5": "404f6346482e3a3c9a695980eac82d0a",
          "sha256": "af7ac2c54a5e8b5c7527819c7940f3d81a84989d60011d1e33bc157e3aff3e39"
        },
        "downloads": -1,
        "filename": "alphavantage_api_client-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "404f6346482e3a3c9a695980eac82d0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16113,
        "upload_time": "2022-06-16T14:02:41",
        "upload_time_iso_8601": "2022-06-16T14:02:41.613714Z",
        "url": "https://files.pythonhosted.org/packages/5e/d9/fe329c5d695b8fa0158bcc1cd6c37f13d0621f358d7408e0cb0997ec2523/alphavantage_api_client-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc8623f41b2ab72b74c2d848ff4afaa360eb480e3c09a279306c6369296b69ef",
          "md5": "fdd81a9a0eadc816fa7d41a6a755a729",
          "sha256": "7d9dbb7aa767e3bb7a2b703cb1b5958251023efabec2e88bef2a5a42e527d741"
        },
        "downloads": -1,
        "filename": "alphavantage_api_client-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fdd81a9a0eadc816fa7d41a6a755a729",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18523,
        "upload_time": "2022-07-02T23:41:41",
        "upload_time_iso_8601": "2022-07-02T23:41:41.389418Z",
        "url": "https://files.pythonhosted.org/packages/bc/86/23f41b2ab72b74c2d848ff4afaa360eb480e3c09a279306c6369296b69ef/alphavantage_api_client-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4108c22e9bcfeeee28cc6be9629b6cb4e368e67f3608deef7255f2c733138bd6",
          "md5": "907eb843e438889a08c95e66d9367ec0",
          "sha256": "68b149f5663a3db0109cafedb2111b747b178d4e5641bf28c8060cd4a2d59547"
        },
        "downloads": -1,
        "filename": "alphavantage_api_client-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "907eb843e438889a08c95e66d9367ec0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25378,
        "upload_time": "2022-07-14T00:03:24",
        "upload_time_iso_8601": "2022-07-14T00:03:24.255338Z",
        "url": "https://files.pythonhosted.org/packages/41/08/c22e9bcfeeee28cc6be9629b6cb4e368e67f3608deef7255f2c733138bd6/alphavantage_api_client-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1a3c9a15a8b33442b01b84f973ebe00b0d93732ecc9324a6e61bd44eb93b965",
          "md5": "325a9963d41480343d6fe248f8bf8006",
          "sha256": "a54a4e5ce7c18f2402efe733d699c0a9996dad0e4983bad8697f3815509e024f"
        },
        "downloads": -1,
        "filename": "alphavantage_api_client-2.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "325a9963d41480343d6fe248f8bf8006",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 25966,
        "upload_time": "2022-07-27T01:48:46",
        "upload_time_iso_8601": "2022-07-27T01:48:46.634646Z",
        "url": "https://files.pythonhosted.org/packages/c1/a3/c9a15a8b33442b01b84f973ebe00b0d93732ecc9324a6e61bd44eb93b965/alphavantage_api_client-2.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5955539545cd0b216f62ef243a5aad67f735043eca200409a14debf9e49c646e",
          "md5": "21776b1d3d09db4144b628ea744ab0cf",
          "sha256": "dad3741a7bc5f4767a9e57f1d133505e778b9b6bfef574c759239cc03d28c7f9"
        },
        "downloads": -1,
        "filename": "alphavantage_api_client-2.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "21776b1d3d09db4144b628ea744ab0cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 26290,
        "upload_time": "2022-09-03T14:45:29",
        "upload_time_iso_8601": "2022-09-03T14:45:29.645442Z",
        "url": "https://files.pythonhosted.org/packages/59/55/539545cd0b216f62ef243a5aad67f735043eca200409a14debf9e49c646e/alphavantage_api_client-2.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5955539545cd0b216f62ef243a5aad67f735043eca200409a14debf9e49c646e",
        "md5": "21776b1d3d09db4144b628ea744ab0cf",
        "sha256": "dad3741a7bc5f4767a9e57f1d133505e778b9b6bfef574c759239cc03d28c7f9"
      },
      "downloads": -1,
      "filename": "alphavantage_api_client-2.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "21776b1d3d09db4144b628ea744ab0cf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 26290,
      "upload_time": "2022-09-03T14:45:29",
      "upload_time_iso_8601": "2022-09-03T14:45:29.645442Z",
      "url": "https://files.pythonhosted.org/packages/59/55/539545cd0b216f62ef243a5aad67f735043eca200409a14debf9e49c646e/alphavantage_api_client-2.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}