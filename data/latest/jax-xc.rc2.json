{
  "info": {
    "author": "Kunhao Zheng, Min Lin",
    "author_email": "zhengkh@sea.com, linmin@sea.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Chemistry"
    ],
    "description": "JAX Exchange Correlation Library\n================================\n\n.. image:: https://github.com/sail-sg/jax_xc/raw/main/figures/logo.png\n   :width: 200\n   :align: center\n   \n\n.. image:: https://img.shields.io/pypi/v/jax-xc.svg\n   :target: https://pypi.org/project/jax-xc/\n\n.. image:: https://readthedocs.org/projects/ansicolortags/badge/?version=latest\n   :target: https://jax-xc.readthedocs.io/en/latest/\n\n\n\nThis library contains direct translations of exchange correlation\nfunctionals in `libxc <https://tddft.org/programs/libxc/>`__ to\n`jax <https://github.com/google/jax>`__. The core calculations in libxc\nare implemented in `maple <https://www.maplesoft.com/>`__. This gives us\nthe opportunity to translate them directly into python with the help of\n`CodeGeneration <https://www.maplesoft.com/support/help/maple/view.aspx?path=CodeGeneration%2fPython>`__.\n\nUsage\n-----\n\nInstallation\n~~~~~~~~~~~~\n\n.. code:: sh\n\n   pip install jax-xc\n\nInvoking the Functionals\n~~~~~~~~~~~~~~~~~~~~~~~~\n\njax_xc's API is functional: it receives $\\\\rho$ a function of ``Callable``\ntype, and returns the $\\\\varepsilon_{xc}$ as a function of ``Callable``\ntype.\n\n.. code:: math\n\n   E_{xc} = \\int \\rho(r) \\varepsilon_{xc}(r) dr\n\nLDA and GGA\n^^^^^^^^^^^\n\nUnlike ``libxc`` which takes pre-computed densities and their derivative\nat certain coordinates. In ``jax_xc``, the API is designed to directly\ntake a density function.\n\n.. code:: python\n\n  import jax\n  import jax.numpy as jnp\n  import jax_xc\n\n\n  def rho(r):\n    \"\"\"Electron number density. We take gaussian as an example.\n\n    A function that takes a real coordinate, and returns a scalar\n    indicating the number density of electron at coordinate r.\n\n    Args:\n    r: a 3D coordinate.\n    Returns:\n    rho: If it is unpolarized, it is a scalar.\n        If it is polarized, it is a array of shape (2,).\n    \"\"\"\n    return jnp.prod(jax.scipy.stats.norm.pdf(r, loc=0, scale=1))\n\n\n  exc = jax_xc.gga_xc_pbe1w(rho=rho, polarized=False)\n\n  # a grid point in 3D\n  r = jnp.array([0.1, 0.2, 0.3])\n\n  # evaluate the exchange correlation energy per particle at this point\n  # corresponding to the 'zk' in libxc\n  print(exc(r))\n\nmGGA\n^^^^\n\nUnlike LDA and GGA that only depends on the density function, mGGA\nfunctionals also depend on the molecular orbitals.\n\n.. code:: python\n\n  import jax\n  import jax.numpy as jnp\n  import jax_xc\n  \n\n  def mo(r):\n    \"\"\"Molecular orbital. We take gaussian as an example.\n\n    A function that takes a real coordinate, and returns the value of\n    molecular orbital at this coordinate.\n\n    Args:\n      r: a 3D coordinate.\n    Returns:\n      mo: If it is unpolarized, it is a array of shape (N,).\n          If it is polarized, it is a array of shape (N, 2).\n    \"\"\"\n    # Assume we have 3 molecular orbitals\n    return jnp.array([\n        jnp.prod(jax.scipy.stats.norm.pdf(r, loc=0, scale=1)),\n        jnp.prod(jax.scipy.stats.norm.pdf(r, loc=0.5, scale=1)),\n        jnp.prod(jax.scipy.stats.norm.pdf(r, loc=-0.5, scale=1))\n    ])\n\n\n  rho = lambda r: jnp.sum(mo(r)**2, axis=0)\n  exc = jax_xc.mgga_xc_cc06(rho=rho, polarized=False, mo=mo)\n\n  # a grid point in 3D\n  r = jnp.array([0.1, 0.2, 0.3])\n\n  # evaluate the exchange correlation energy per particle at this point\n  # corresponding to the 'zk' in libxc\n  print(exc(r))\n\nHybrid Functionals\n^^^^^^^^^^^^^^^^^^\n\nHybrid functionals expose the same API, with extra attributes for the\nusers to access parameters needed outside of libxc/jax_xc (e.g. the\nfraction of exact exchange).\n\n.. code:: python\n\n  import jax\n  import jax.numpy as jnp\n  import jax_xc\n\n\n  def rho(r):\n    \"\"\"Electron number density. We take gaussian as an example.\n\n    A function that takes a real coordinate, and returns a scalar\n    indicating the number density of electron at coordinate r.\n\n    Args:\n      r: a 3D coordinate.\n    Returns:\n      rho: If it is unpolarized, it is a scalar.\n          If it is polarized, it is a array of shape (2,).\n    \"\"\"\n    return jnp.prod(jax.scipy.stats.norm.pdf(r, loc=0, scale=1))\n\n\n  exc = jax_xc.hyb_gga_xc_pbeb0(rho=rho, polarized=False)\n\n  # a grid point in 3D\n  r = jnp.array([0.1, 0.2, 0.3])\n\n  # evaluate the exchange correlation energy per particle at this point\n  # corresponding to the 'zk' in libxc\n  print(exc(r))\n\n  # access to extra attributes\n  cam_alpha = exc.cam_alpha  # fraction of full Hartree-Fock exchange\n\nThe complete list of extra attributes can be found in the class below:\n\n.. code:: python\n\n   class HybridFunctional(Callable):\n     cam_alpha: float\n     cam_beta: float\n     cam_omega: float\n     nlc_b: float\n     nlc_C: float\n\nThe meaning for each attribute is the same as libxc:\n\n-  cam_alpha: fraction of full Hartree-Fock exchange, used both for\n   usual hybrids as well as range-separated ones\n-  cam_beta: fraction of short-range only(!) exchange in range-separated\n   hybrids\n-  cam_omega: range separation constant\n-  nlc_b: non-local correlation, b parameter\n-  nlc_C: non-local correlation, C parameter\n\nSupport Functionals\n-------------------\n\nPlease refer to the `functionals section <https://jax-xc.readthedocs.io/en/latest/sources/jax_xc.html#module-jax_xc.functionals>`_ \nin ``jax_xc``'s documentation\nfor the complete list of supported functionals.\n\nNumerical Correctness\n---------------------\n\nWe test all the functionals that are auto-generated from maple files\nagainst the reference values in ``libxc``. The test is performed by\ncomparing the output of ``libxc`` and ``jax_xc`` and make sure they are\nwithin a certain tolerance, namely ``atol=2e-10`` and ``rtol=2e-10``.\n\nPerformance Benchmark\n---------------------\n\nWe report the performance benchmark of ``jax_xc`` against ``libxc`` on a\n64-core machine with Intel(R) Xeon(R) Silver 4216 CPU @ 2.10GHz.\n\nWe sample the points to evaluate the functionals by varying the number\nof points from 1 to $10^7$. The benchmark is performed by evaluating the\nruntime of the functional. Note that the runtime of ``jax_xc`` is\nmeasured by excluding the time of just-in-time compilation.\n\nWe visualize the mean value (averaged for both polarized and unpolarized)\nof the runtime of ``jax_xc`` and ``libxc`` in the following figure. The\ny-axis is log-scale. \n\n``jax_xc``'s runtime is constantly below ``libxc``'s\nfor all batch sizes. The speed up is ranging from 3x to 10x, and it is\nmore significant for larger batch sizes. \n\nWe hypothesize that the reason\nfor the speed up is that Jax's JIT compiler is able to optimize the\nfunctionals (e.g. vectorization, parallel execution, instruction fusion, \nconstant folding for floating points, etc.) better than\nlibxc.\n\n.. image:: https://raw.githubusercontent.com/sail-sg/jax_xc/main/figures/jax_xc_speed.svg\n\nWe visualize the distribution of the runtime ratio of ``jax_xc`` and\n``libxc`` in the following figure. The ratio is closer to 0.1 for\nlarge batch sizes (~ 10x speed up). The ratio is constantly below 1.0.\n\n.. image:: https://raw.githubusercontent.com/sail-sg/jax_xc/main/figures/jax_xc_ratio.svg\n\nNote that, we exclude one datapoint ``mgga_x_2d_prhg07`` from the\nruntime ratio visualization because it is an outlier due to Jax's lack\nof support of\\ ``lamberw`` function and we use\n``tensorflow_probability.substrates.jax.math.lambertw``.\n\nCaveates\n--------\n\nThe following functionals from ``libxc`` are not available in ``jax_xc``\nbecause some functions are not available in ``jax``.\n\n.. code:: python\n\n   gga_x_fd_lb94          # Becke-Roussel not having an closed-form expression\n   gga_x_fd_revlb94       # Becke-Roussel not having an closed-form expression\n   gga_x_gg99             # Becke-Roussel not having an closed-form expression\n   gga_x_kgg99            # Becke-Roussel not having an closed-form expression\n   hyb_gga_xc_case21      # Becke-Roussel not having an closed-form expression\n   hyb_mgga_xc_b94_hyb    # Becke-Roussel not having an closed-form expression\n   hyb_mgga_xc_br3p86     # Becke-Roussel not having an closed-form expression\n   lda_x_1d_exponential   # Requires explicit 1D integration\n   lda_x_1d_soft          # Requires explicit 1D integration\n   mgga_c_b94             # Becke-Roussel not having an closed-form expression\n   mgga_x_b00             # Becke-Roussel not having an closed-form expression\n   mgga_x_bj06            # Becke-Roussel not having an closed-form expression\n   mgga_x_br89            # Becke-Roussel not having an closed-form expression\n   mgga_x_br89_1          # Becke-Roussel not having an closed-form expression\n   mgga_x_mbr             # Becke-Roussel not having an closed-form expression\n   mgga_x_mbrxc_bg        # Becke-Roussel not having an closed-form expression\n   mgga_x_mbrxh_bg        # Becke-Roussel not having an closed-form expression\n   mgga_x_mggac           # Becke-Roussel not having an closed-form expression\n   mgga_x_rpp09           # Becke-Roussel not having an closed-form expression\n   mgga_x_tb09            # Becke-Roussel not having an closed-form expression\n   gga_x_wpbeh            # jit too long for E1_scaled\n   gga_c_ft97             # jit too long for E1_scaled\n   lda_xc_tih             # vxc functional\n   gga_c_pbe_jrgx         # vxc functional\n   gga_x_lb               # vxc functional\n\nBuilding from Source Code\n-------------------------\n\nModify the ``.env.example`` to fill in your envrionment variables, then\nrename it to ``.env``. Then run ``source .env`` to load them into your\nshell.\n\n-  ``OUTPUT_USER_ROOT``: The path to the bazel cache. This is where the\n   bazel cache will be stored. This is useful if you are building on a\n   shared filesystem.\n\n-  ``MAPLE_PATH``: The path to the maple binary.\n\n-  ``TMP_INSTALL_PATH``: The path to a temporary directory where the\n   wheel will be installed. This is useful if you are building on a\n   shared filesystem.\n\nHow to build.\n\n.. code:: sh\n\n   bazel --output_user_root=$OUTPUT_USER_ROOT build --action_env=PATH=$PATH:$MAPLE_PATH @maple2jax//:jax_xc_wheel\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jax-xc",
    "package_url": "https://pypi.org/project/jax-xc/",
    "platform": null,
    "project_url": "https://pypi.org/project/jax-xc/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/jax-xc/0.0.3/",
    "requires_dist": [
      "jax",
      "numpy",
      "tensorflow-probability"
    ],
    "requires_python": ">=3.7",
    "summary": "",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16371793,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ae1e8cce90b0d2287c85ccbcc3e836ebcb1ab9936b6b0c570db4c195111f62e",
          "md5": "25e0feb86d52e8de919c3eb009a7961a",
          "sha256": "6318ab306b476174b66a01d8b703a44ad876c554abb040b346bdceb1952c54b0"
        },
        "downloads": -1,
        "filename": "jax_xc-0.0.2-cp310-cp310-manylinux_2_17_x86_64.whl",
        "has_sig": false,
        "md5_digest": "25e0feb86d52e8de919c3eb009a7961a",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.7",
        "size": 3673871,
        "upload_time": "2022-12-19T08:36:02",
        "upload_time_iso_8601": "2022-12-19T08:36:02.400438Z",
        "url": "https://files.pythonhosted.org/packages/6a/e1/e8cce90b0d2287c85ccbcc3e836ebcb1ab9936b6b0c570db4c195111f62e/jax_xc-0.0.2-cp310-cp310-manylinux_2_17_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5283df69f032e77f2b0d29b3fe771acf33d6d0ac6c17d47be7bd4e1f26dd77e6",
          "md5": "c9459de07ca2de60b462d0a74a22c0f8",
          "sha256": "b4fae0729faf82a751bd90a697a6ae40038f997e8e2c48017762e298b96cd993"
        },
        "downloads": -1,
        "filename": "jax_xc-0.0.2-cp37-cp37m-manylinux_2_17_x86_64.whl",
        "has_sig": false,
        "md5_digest": "c9459de07ca2de60b462d0a74a22c0f8",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.7",
        "size": 3670907,
        "upload_time": "2022-12-19T08:36:05",
        "upload_time_iso_8601": "2022-12-19T08:36:05.657708Z",
        "url": "https://files.pythonhosted.org/packages/52/83/df69f032e77f2b0d29b3fe771acf33d6d0ac6c17d47be7bd4e1f26dd77e6/jax_xc-0.0.2-cp37-cp37m-manylinux_2_17_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1251a144948490715313ea37bce2df2af7ef672bc049bd50349913044fe0567",
          "md5": "e16c76fce1eb6c6680c8606d8a424486",
          "sha256": "c689c9a7b3c42fc30f9c50672f0089910ac0f5d16b42a4f992e291d0a8b0db9f"
        },
        "downloads": -1,
        "filename": "jax_xc-0.0.2-cp38-cp38-manylinux_2_17_x86_64.whl",
        "has_sig": false,
        "md5_digest": "e16c76fce1eb6c6680c8606d8a424486",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.7",
        "size": 3674695,
        "upload_time": "2022-12-19T08:36:08",
        "upload_time_iso_8601": "2022-12-19T08:36:08.630378Z",
        "url": "https://files.pythonhosted.org/packages/f1/25/1a144948490715313ea37bce2df2af7ef672bc049bd50349913044fe0567/jax_xc-0.0.2-cp38-cp38-manylinux_2_17_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dc471e0f7920b37f4ff3784c2d5bd2c86f7b65b35774eb9781be08d0e624dd1",
          "md5": "e4e38cd08cc7708418b6e6eb85843625",
          "sha256": "f5a29557da915c55458d0097c2c8ce033443651d4ba251bb9d98cb12a06df9ad"
        },
        "downloads": -1,
        "filename": "jax_xc-0.0.2-cp38-cp38-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "e4e38cd08cc7708418b6e6eb85843625",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.7",
        "size": 3621813,
        "upload_time": "2022-12-19T07:50:52",
        "upload_time_iso_8601": "2022-12-19T07:50:52.276041Z",
        "url": "https://files.pythonhosted.org/packages/0d/c4/71e0f7920b37f4ff3784c2d5bd2c86f7b65b35774eb9781be08d0e624dd1/jax_xc-0.0.2-cp38-cp38-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef204a86ba510fd047a850f240b15a6d91c711c6c8ab9db2c91c95262d6c2f14",
          "md5": "59c8f17a0b40f6a82aacc82e907f5ea4",
          "sha256": "8f6f64e595320bebbc768578f841758395895e894715ec3e31a270d555521f8e"
        },
        "downloads": -1,
        "filename": "jax_xc-0.0.2-cp39-cp39-manylinux_2_17_x86_64.whl",
        "has_sig": false,
        "md5_digest": "59c8f17a0b40f6a82aacc82e907f5ea4",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 3675807,
        "upload_time": "2022-12-19T08:36:11",
        "upload_time_iso_8601": "2022-12-19T08:36:11.560495Z",
        "url": "https://files.pythonhosted.org/packages/ef/20/4a86ba510fd047a850f240b15a6d91c711c6c8ab9db2c91c95262d6c2f14/jax_xc-0.0.2-cp39-cp39-manylinux_2_17_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c23bf2c78093c5d7a2dc705e8f167c912b08c3eb9aa57b1bc6b728ec4c4463d",
          "md5": "2325e1af47f7c1b3ffd98b1e224df3c5",
          "sha256": "91f8a87f41dee9379609bd1a39d749e9cd6b97a7f11a5a1010cfa4a175aa387f"
        },
        "downloads": -1,
        "filename": "jax_xc-0.0.3-cp310-cp310-manylinux_2_17_x86_64.whl",
        "has_sig": false,
        "md5_digest": "2325e1af47f7c1b3ffd98b1e224df3c5",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.7",
        "size": 3665441,
        "upload_time": "2023-01-10T07:18:15",
        "upload_time_iso_8601": "2023-01-10T07:18:15.638375Z",
        "url": "https://files.pythonhosted.org/packages/3c/23/bf2c78093c5d7a2dc705e8f167c912b08c3eb9aa57b1bc6b728ec4c4463d/jax_xc-0.0.3-cp310-cp310-manylinux_2_17_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b43000a59b11afc3809c735ddd4bac295f32a6a6b5d94ff67a9c7e32f8dce9ec",
          "md5": "313f52ef51826cb2b35f2efc7e8edf0b",
          "sha256": "fc6aad5c05076e6016a4fa318aa14f2507801dd12d404b6ccdfd2b96b659ef81"
        },
        "downloads": -1,
        "filename": "jax_xc-0.0.3-cp37-cp37m-manylinux_2_17_x86_64.whl",
        "has_sig": false,
        "md5_digest": "313f52ef51826cb2b35f2efc7e8edf0b",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.7",
        "size": 3662241,
        "upload_time": "2023-01-10T07:18:17",
        "upload_time_iso_8601": "2023-01-10T07:18:17.458447Z",
        "url": "https://files.pythonhosted.org/packages/b4/30/00a59b11afc3809c735ddd4bac295f32a6a6b5d94ff67a9c7e32f8dce9ec/jax_xc-0.0.3-cp37-cp37m-manylinux_2_17_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4f3f8659ae1881ad0b820855a7f0e401f41634dccce6179b991a07eecb30ffd",
          "md5": "663737a1b7864dc3f64989f8ce9d8502",
          "sha256": "83d0504a75db63bfd69a5ebda0b76f619416a346fe4759923cb421991d0cf4c4"
        },
        "downloads": -1,
        "filename": "jax_xc-0.0.3-cp38-cp38-manylinux_2_17_x86_64.whl",
        "has_sig": false,
        "md5_digest": "663737a1b7864dc3f64989f8ce9d8502",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.7",
        "size": 3665890,
        "upload_time": "2023-01-10T07:18:19",
        "upload_time_iso_8601": "2023-01-10T07:18:19.347051Z",
        "url": "https://files.pythonhosted.org/packages/e4/f3/f8659ae1881ad0b820855a7f0e401f41634dccce6179b991a07eecb30ffd/jax_xc-0.0.3-cp38-cp38-manylinux_2_17_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64f3ac93a4bbbbce3d97ae076a2452f12c02cee170b476e6f5ce3a7a199a4fd0",
          "md5": "156744b47e326436bb10e7404277e125",
          "sha256": "58d0bb65327aa3726a955ce975ef6c5836156b739bd0765e3c6a4e6c889bae33"
        },
        "downloads": -1,
        "filename": "jax_xc-0.0.3-cp39-cp39-manylinux_2_17_x86_64.whl",
        "has_sig": false,
        "md5_digest": "156744b47e326436bb10e7404277e125",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 3667412,
        "upload_time": "2023-01-10T07:18:21",
        "upload_time_iso_8601": "2023-01-10T07:18:21.368642Z",
        "url": "https://files.pythonhosted.org/packages/64/f3/ac93a4bbbbce3d97ae076a2452f12c02cee170b476e6f5ce3a7a199a4fd0/jax_xc-0.0.3-cp39-cp39-manylinux_2_17_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3c23bf2c78093c5d7a2dc705e8f167c912b08c3eb9aa57b1bc6b728ec4c4463d",
        "md5": "2325e1af47f7c1b3ffd98b1e224df3c5",
        "sha256": "91f8a87f41dee9379609bd1a39d749e9cd6b97a7f11a5a1010cfa4a175aa387f"
      },
      "downloads": -1,
      "filename": "jax_xc-0.0.3-cp310-cp310-manylinux_2_17_x86_64.whl",
      "has_sig": false,
      "md5_digest": "2325e1af47f7c1b3ffd98b1e224df3c5",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.7",
      "size": 3665441,
      "upload_time": "2023-01-10T07:18:15",
      "upload_time_iso_8601": "2023-01-10T07:18:15.638375Z",
      "url": "https://files.pythonhosted.org/packages/3c/23/bf2c78093c5d7a2dc705e8f167c912b08c3eb9aa57b1bc6b728ec4c4463d/jax_xc-0.0.3-cp310-cp310-manylinux_2_17_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b43000a59b11afc3809c735ddd4bac295f32a6a6b5d94ff67a9c7e32f8dce9ec",
        "md5": "313f52ef51826cb2b35f2efc7e8edf0b",
        "sha256": "fc6aad5c05076e6016a4fa318aa14f2507801dd12d404b6ccdfd2b96b659ef81"
      },
      "downloads": -1,
      "filename": "jax_xc-0.0.3-cp37-cp37m-manylinux_2_17_x86_64.whl",
      "has_sig": false,
      "md5_digest": "313f52ef51826cb2b35f2efc7e8edf0b",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.7",
      "size": 3662241,
      "upload_time": "2023-01-10T07:18:17",
      "upload_time_iso_8601": "2023-01-10T07:18:17.458447Z",
      "url": "https://files.pythonhosted.org/packages/b4/30/00a59b11afc3809c735ddd4bac295f32a6a6b5d94ff67a9c7e32f8dce9ec/jax_xc-0.0.3-cp37-cp37m-manylinux_2_17_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4f3f8659ae1881ad0b820855a7f0e401f41634dccce6179b991a07eecb30ffd",
        "md5": "663737a1b7864dc3f64989f8ce9d8502",
        "sha256": "83d0504a75db63bfd69a5ebda0b76f619416a346fe4759923cb421991d0cf4c4"
      },
      "downloads": -1,
      "filename": "jax_xc-0.0.3-cp38-cp38-manylinux_2_17_x86_64.whl",
      "has_sig": false,
      "md5_digest": "663737a1b7864dc3f64989f8ce9d8502",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.7",
      "size": 3665890,
      "upload_time": "2023-01-10T07:18:19",
      "upload_time_iso_8601": "2023-01-10T07:18:19.347051Z",
      "url": "https://files.pythonhosted.org/packages/e4/f3/f8659ae1881ad0b820855a7f0e401f41634dccce6179b991a07eecb30ffd/jax_xc-0.0.3-cp38-cp38-manylinux_2_17_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64f3ac93a4bbbbce3d97ae076a2452f12c02cee170b476e6f5ce3a7a199a4fd0",
        "md5": "156744b47e326436bb10e7404277e125",
        "sha256": "58d0bb65327aa3726a955ce975ef6c5836156b739bd0765e3c6a4e6c889bae33"
      },
      "downloads": -1,
      "filename": "jax_xc-0.0.3-cp39-cp39-manylinux_2_17_x86_64.whl",
      "has_sig": false,
      "md5_digest": "156744b47e326436bb10e7404277e125",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.7",
      "size": 3667412,
      "upload_time": "2023-01-10T07:18:21",
      "upload_time_iso_8601": "2023-01-10T07:18:21.368642Z",
      "url": "https://files.pythonhosted.org/packages/64/f3/ac93a4bbbbce3d97ae076a2452f12c02cee170b476e6f5ce3a7a199a4fd0/jax_xc-0.0.3-cp39-cp39-manylinux_2_17_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}