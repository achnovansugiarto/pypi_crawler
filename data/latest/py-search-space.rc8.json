{
  "info": {
    "author": "",
    "author_email": "Daniel Orlando Ortiz Pacheco <danielorlandoortizpacheco@gmial.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# 🔭 Python Search Space\n\n[![wakatime](https://wakatime.com/badge/github/danielorlando97/search-space.svg)](https://wakatime.com/badge/github/danielorlando97/search-space)\n[![unit and statistic testing](https://github.com/danielorlando97/search-space/actions/workflows/test.yml/badge.svg)](https://github.com/danielorlando97/search-space/actions/workflows/test.yml)\n\n## 🤔 What's it?\n\nA Python library that defines a DSL to describe search spaces. The DSL defines\ndesign patterns with which the user can decorate their Python classes to describe\ntheir space of interest. The resulting descriptions are declarative, expressive,\ncontext sensitive, extensible and scalable. In addition, the system has a sample\ngenerator system that is consistent and coherent with the selected description.\\\n**Principal Skills**: `Python` `Metaprogramming` `DSL` `AST` `Visitor Pattern`\n\n## 🤓 Motivation\n\nAfter a study of the different systems that try to solve search problems,\nparametric optimization or AutoML, it was detected that there were limitations\nto describe in detail the search spaces. As well as the lack of a tool whose\nmain objective is the description and generation of samples of such spaces.\nExcept for the tools with imperative syntax, none of the tools studied can\nexpress constraints with contextual or conditional dependencies or dynamic\ndimension spaces. The list of tools studied include a:\n[`@autogoal`](https://github.com/autogoal/autogoal/),\n[`@optuna`](https://github.com/optuna/optuna),\n[`@hyperopt`](http://hyperopt.github.io/hyperopt),\n[`@auto-sklearn`](https://github.com/automl/auto-sklearn),\n[`@autogluon`](https://github.com/awslabs/autogluon)\n\n## ⭐ Quickstart\n\n### Factory of Search Space\n\nThe `Domain` space factory is the main public interface to the Python Search Space.\nThis factory is generic to the type of space you want to generate. In addition,\nits constructor can use the following parameters to modify the characteristics of the generated space:\n\n- `min` and `max`: with which the limits of a number space can be defined.\n- `options`: list of options to choose from, this parameter transforms any space to a categorical space.\n- `distribute_like`: string that refers to the random distribution with which the samples of the resulting space will be generated.\n  Its default value is uniform distribution.\n\n```python\n# binary space\nB = Domain[bool]()\n# space of real numbers, (-oo, +oo)\nR = Domain[float]()\n# space of natural numbers, [0, +oo)\nN = Domain[int](min=0)\n# space of negative integers plus zero, [-oo, 0]\n_N = Domain[int](max=0)\n# categorical space of the first 100 powers of 10\nten_powers = [pow(10, i) for i in range(100)]\nP = Domain[int](options = ten_powers)\n# space of colors\nC = Domain[str](options = ['Red', 'Blue', 'Black', 'White'])\n```\n\nAny space generated by the Domain factory define the `get_sample`\nmethod generates random samples according to the respective distribution.\n\n```python\nspace = Domain[int](min=0, max=1)\nvalue, sample_context = sample.get_sample()\n# value is 1 or 0\n```\n\nThe `get_sample` method, in addition to the generated sample,\nreturns the sampling context relative to that sample.\nThis context can be used as a parameter to the `get_sample`\nfunction and ensures that whenever an attempt is made to\ngenerate a sample from the same space with the same context,\nthe same sample will be generated.\n\n```python\nspace = Domain[int](min=0, max=1)\nvalue, sample_context = sample.get_sample()\n# Let value = 1, so\nvalue1, _ = sample.get_sample(context = sample_context)\n# value1 = 1\n```\n\n### Tensorial Spaces\n\nWith the `Domain` factory we can also create tensor spaces.\nTo describe each of the dimensions of the tensors that belong\nto the resulting space, the DSL allows to use ints or random spaces\npreviously defined.\n\n```python\n# space of integer lists with size 10\nL10 = Domain[int][10]()\n# space of all integer lists\nrandom_len = Domain[int]()\nLn = Domain[int][random_len]()\n# Space of all square matrices\nMnxn = Domain[float][random_len][random_len]()\n# Space of all lists of tuple with size 2\nMnx2 = Domain[float][random_len][2]()\n```\n\nIn the case of tensor spaces, the parameters of the constructor of the Domain\nfactory are applied to each of the internal spaces of the domain.\n\n### Constraint Function\n\nThe DSL defines a syntax to be able to describe the details of the search\nspaces we are defining. This syntax is inspired by the definition of\nmathematical domains, where a set is described from the particular\ncharacteristics of any element of the set. To describe these characteristics we use\nthe lambda function syntax of Python. And to use these restriction functions we must\nknow the following characteristics.\n\n- The constraint functions can define as many parameters as we need,\n  but the first one always refers to any element of the space we are\n  describing. The rest of the variables, if they do not have a default\n  value declared, will represent dimensions of the space we are describing.\n\n  ```python\n  # x is any element of A space,\n  # So A = {x in Z, x != 10}\n  A = Domain[int] | (lambda x: x != 10)\n  # B is the space of all strictly increasing lists with size 10\n  B = Domain[int][10] | (lambda x, i: x[i] > x[i+1])\n  # C is the space of all symmetric square matrices with size 10\n  C = Domain[int][10][10] | (lambda x, i, j: x[i][j] == x[j][i])\n  ```\n\n- The constraint functions support all Python arithmetic and\n  comparison operations but some settings are not valid.\n  Check these tests for some of the [valid](https://github.com/danielorlando97/search-space/blob/main/tests/constraint/test_syntaxes_valid.py) and [invalid](https://github.com/danielorlando97/search-space/blob/main/tests/constraint/test_syntaxes_invalid.py) combinations\n\n  ```python\n  valid_space = Domain[int] | (lambda x : x / 10 < 0) # OK\n  invalid_space = Domain[int] | (lambda x : 10 / x < 0) # raise UnSupportOpError\n  ```\n\n- If we want to describe more than one constraint within the same function\n  we must write them all between parentheses and separated by commas.\n\n  ```python\n  # So A = {x in Z, x, in (0, 20) x != 10}\n  A = Domain[int] | (lambda x: (x != 10, x > 0, x < 20)),\n  ```\n\n- The `&`(AND) and `|`(OR) operators have a cutting behavior that allows\n  you to define conditional constraints. If either of these operators\n  can know its result only by evaluating the most left expression then\n  the expression on the right will never be evaluated. In cases where\n  the operands would be constraints then the `&` operator works like\n  commas and the `|` operator defines a segmented domain.\n\n  ```python\n  A = Domain[int] | (lambda x: False & (x == 0)) # A = Z (integer domain)\n  A = Domain[int] | (lambda x: True & (x == 0)) # A = { 10 }\n  B = Domain[int] | (lambda x: True | (x == 0)) # B = Z (integer domain)\n  # C is a segmented domain, C = [(-oo, -1), (101, +oo)]\n  # This means that in order to generate samples,\n  # you must first choose between the following segments\n  C = Domain[int] | (lambda x: (x < 0) | (x > 100))\n  ```\n\n### Custom Spaces\n\nAmong the main objectives of the DSL is to define a design pattern\nfor writing a search space using Python's classes. To define a custom\nspace we only have to assign to each of the parameters of the functions\nof the classes a search space as a default value.\n\n```python\nclass Line:\n  \"\"\"\n    We want to find the line that best interpolates our data.\n    And for some reason, we know that the slope is an integer\n    between 50 and 100, but it is not 65. We also know that\n    the intercept of the line is less than 50\n  \"\"\"\n\n  def __init__(\n      self,\n      m: int = Domain[int](min=50, max=100) | (lambda x: x != 65),\n      n: float = Domain[float]() | (lambda x: x < 50)\n  ) -> None:\n      self.m, self.n = m, n\n\n  def get_point(self, x: float = Domain[float](min=0, max=10))\n    return x, self.m * x + self.n\n\n  def contains(self, x, y):\n    return y == self.m * x + self.n\n```\n\nIf we use these decorated classes as a generic type of the Domain\nfactory we can create random spaces where the samples are instances of\nthese classes.\n\n```python\nspace = Domain[Line]()\nline_instance, _ = space.get_sample()\ntype(line_instance) # Line\n\n#If a class method was decorated with the DSL design pattern\n#then its parameters become optional.\n#If no values are specified for those parameters\n#then random ones are generated.\nrandom_point = line_instance.get_point()\nspecific_point = line_instance.get_point(1)\n\nline_instance.contains(0, 0) # OK\nline_instance.contains() # Error\n```\n\n### Contextual Dependencies\n\nTo describe contextual dependencies, a reference to a previously\ndefined search space is needed. This reference will be used as the\ndefault value of one of the parameters of the restriction function\nof the dependent space. In the same way that we describe the\ncharacteristics of a set by means of the particular characteristics\nof any element of it, we will describe the relation between two\nsets by means of the particular relation of any two elements of them.\n\n```python\nclass CenterPoint:\n  \"\"\"\n  We want to find the pointer more centered and with more\n  density around it. For some reason, we know that our data\n  looks like a heavy diagonal 20u thick.\n  All points in the dataset lie between the lines\n  y = x + 10 and y = x - 10.\n  \"\"\"\n\n  Y_Domain = Domain[int]() # previous definition\n\n  def __init__(\n      self,\n      x: float = Domain[float]() | (\n          #Let y be any element of the domain Y_Domain\n          lambda x, y=Y_Domain: (x - 10 < y, y < x + 10)\n      ),\n      y: int = Y_Domain # use the previous definition\n  ) -> None:\n      self.x, self.y = x, y\n```\n\n### Examples of Use Cases\n\n- [Simple Cases, Lines, CenterPoint and LogisticRegression](https://github.com/danielorlando97/search-space/blob/main/tests/examples/basic_class_example_test.py)\n- [Graph Description, Adjacency Matrix and Object Oriented](https://github.com/danielorlando97/search-space/blob/main/tests/examples/graph_examples_test.py) (integration with typing, `Optional` and `Self` spaces)\n- [Transformation of classical problems to search problems, The Bag](https://github.com/danielorlando97/search-space/blob/main/tests/examples/greedy_or_dp_example.py) (hierarchical descriptions, inheritance and reference between classes)\n- [Detailed description of combinatorial spaces, Color Map](https://github.com/danielorlando97/search-space/blob/main/tests/examples/ia_examples_test.py) (Imperative constrains)\n- [AutoML, model selection and parametric description, Semi-supervised Model](https://github.com/danielorlando97/search-space/blob/main/tests/examples/auto_ml_example_test.py)\n\n<!--\n#### Valid Syntaxes\n\n```python\nDomain[int] | (lambda x: x | True)\nDomain[int] | (lambda x: True | x)\nDomain[int] | (lambda x: x & True)\nDomain[int] | (lambda x: True & x)\nDomain[str] | (lambda x: x == 'a') # (lambda x: 'a' == x)\nDomain[int] | (lambda x: x != [1, 2]) # (lambda x: [1, 2] != x)\nDomain[int] | (lambda x: x < 10) # (lambda x: 10 < x)\nDomain[int] | (lambda x: x > 10) # (lambda x: 10 > x)\nDomain[int] | (lambda x: x <= 10) # (lambda x: 10 <= x)\nDomain[int] | (lambda x: x >= 10) # (lambda x: 10 >= x)\nDomain[int] | (lambda x: x + 10) # (lambda x: 10 + x)\nDomain[int] | (lambda x: x - 10) # (lambda x: 10 - x)\nDomain[int] | (lambda x: x * 10) # (lambda x: 10 * x)\nDomain[int] | (lambda x: x / 10) # (lambda x: 10 / x)\nDomain[int] | (lambda x: x % 10)\nDomain[int] | (lambda x: x % 10 % 10)\nDomain[int] | (lambda x: x % 10 + 10)\nDomain[int] | (lambda x: x % 10 - 10)\nDomain[int] | (lambda x: x % 10 * 10)\nDomain[int] | (lambda x: x % 10 / 10)\nDomain[int] | (lambda x: x % 10 == 10)\nDomain[int] | (lambda x: x % 10 != 10)\nDomain[int] | (lambda x: x % 10 < 10)\nDomain[int] | (lambda x: x % 10 <= 10)\nDomain[int] | (lambda x: x % 10 > 10)\nDomain[int] | (lambda x: x % 10 >= 10)\n```\n\n#### Invalid Syntaxes\n\n```python\nDomain[int] | (lambda x: 10 % x)\nDomain[int] | (lambda x: False | x < 3)\nDomain[int] | (lambda x: x > 5 | x < 3)\nDomain[int] | (lambda x: True & x < 3)\nDomain[int] | (lambda x: x > 5 & x < 3)\nDomain[int] | (lambda x: (x == x) < 3)\nDomain[int] | (lambda x: (x == x) + 3)\nDomain[int] | (lambda x: (x != x) > 3)\nDomain[int] | (lambda x: (x != x) - 3)\nDomain[int] | (lambda x: (x < x) == 3)\nDomain[int] | (lambda x: (x < x) * 3)\nDomain[int] | (lambda x: (x > x) <= 3)\nDomain[int] | (lambda x: (x > x) % 3)\nDomain[int] | (lambda x: (x + 3)[3])\nDomain[int] | (lambda x: (x + 3).member)\nDomain[int] | (lambda x: (x % 3 == 1) + 5)\nDomain[int] | (lambda x: (x % 3 == 1) < 5)\nDomain[int][6][6][6]() | (lambda x, i, j: x[i][j] == x[j][i])\n\n```\n-->\n<!--\n#### Imperative Restrictions\n\n## ⚙️ Installation\n\n## 📚 Documentation\n-->\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "describe,problems,space,search",
    "license": "MIT License  Copyright (c) 2022 Daniel Orlando Ortiz Pacheco  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-search-space",
    "package_url": "https://pypi.org/project/py-search-space/",
    "platform": null,
    "project_url": "https://pypi.org/project/py-search-space/",
    "project_urls": {
      "Homepage": "https://github.com/danielorlando97/search-space"
    },
    "release_url": "https://pypi.org/project/py-search-space/1.0.7/",
    "requires_dist": [
      "typing-extensions (==4.4.0)",
      "numpy (==1.23.3)",
      "ipykernel ; extra == 'dev'",
      "autopep8 ; extra == 'dev'",
      "pytest (==7.1.2) ; extra == 'dev'",
      "matplotlib (==3.5.3) ; extra == 'dev'",
      "pandas (==1.5.1) ; extra == 'dev'"
    ],
    "requires_python": ">=3.9",
    "summary": "Python's DSL to describe the search space of search problems",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16252664,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83d4fb452bed599284188e945899b79b156fbd69992a83f5a8242fdc5b71338f",
          "md5": "1152bdb5a58711b03ee0d5cf6a1c5cfc",
          "sha256": "b0d1bf2d975e5c814d3dafa8b54571bccaa1ffb1ec6797b2d12cd64c8fbde8f6"
        },
        "downloads": -1,
        "filename": "py_search_space-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1152bdb5a58711b03ee0d5cf6a1c5cfc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7315,
        "upload_time": "2022-12-29T03:15:15",
        "upload_time_iso_8601": "2022-12-29T03:15:15.752166Z",
        "url": "https://files.pythonhosted.org/packages/83/d4/fb452bed599284188e945899b79b156fbd69992a83f5a8242fdc5b71338f/py_search_space-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8d7bc84515708a114aa6e4509480574af8af80a46af2a83223e36e8647438c5",
          "md5": "7d3406f5b81ff2b432cb9886cbe80f1d",
          "sha256": "6179f50fb047081fe5311c85c538089b7a0696f22ee257f509a4b591c3a5ce63"
        },
        "downloads": -1,
        "filename": "py-search-space-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7d3406f5b81ff2b432cb9886cbe80f1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 7873,
        "upload_time": "2022-12-29T03:15:17",
        "upload_time_iso_8601": "2022-12-29T03:15:17.799474Z",
        "url": "https://files.pythonhosted.org/packages/b8/d7/bc84515708a114aa6e4509480574af8af80a46af2a83223e36e8647438c5/py-search-space-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b758172b8af7bc739dd4e3bde07c8e5df49cb2727dd3c3e1b49b19a28600a01",
          "md5": "7ff130362f25839b37c6180ec647a5e6",
          "sha256": "03151863ef78aeaa24442224676076f2b9edf76131d9ebb9cac926f94351895e"
        },
        "downloads": -1,
        "filename": "py_search_space-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ff130362f25839b37c6180ec647a5e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7302,
        "upload_time": "2022-12-29T03:21:55",
        "upload_time_iso_8601": "2022-12-29T03:21:55.252593Z",
        "url": "https://files.pythonhosted.org/packages/4b/75/8172b8af7bc739dd4e3bde07c8e5df49cb2727dd3c3e1b49b19a28600a01/py_search_space-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b4ce35325deb73487d0ddd0f7f68730bb4f7ae5f289eb502f2bea5e13254868",
          "md5": "edcf1e505bafa84e59d24415843d496d",
          "sha256": "c84d990fc488b7f30f44de5d09d03596b3ea878ff3cf142a8a4f98367decf51c"
        },
        "downloads": -1,
        "filename": "py-search-space-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "edcf1e505bafa84e59d24415843d496d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 6956,
        "upload_time": "2022-12-29T03:22:00",
        "upload_time_iso_8601": "2022-12-29T03:22:00.300528Z",
        "url": "https://files.pythonhosted.org/packages/1b/4c/e35325deb73487d0ddd0f7f68730bb4f7ae5f289eb502f2bea5e13254868/py-search-space-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df3200c1f333e67bd8fc06ad7c294c77163bd5d0528b6ddd9abf588923eae95e",
          "md5": "dfb64546975781d37e936b4c0ef58a7c",
          "sha256": "246f650da8e4ac3dbff82d476ca04b8c4c971529a45344358b059cd264cb9a71"
        },
        "downloads": -1,
        "filename": "py_search_space-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dfb64546975781d37e936b4c0ef58a7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7619,
        "upload_time": "2022-12-29T22:07:05",
        "upload_time_iso_8601": "2022-12-29T22:07:05.868598Z",
        "url": "https://files.pythonhosted.org/packages/df/32/00c1f333e67bd8fc06ad7c294c77163bd5d0528b6ddd9abf588923eae95e/py_search_space-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd1862498ca8a061945166b7524bdaa7a4e9448b65924f5e8cb6ff57052c4c9c",
          "md5": "d8d1c1f99eac6349632c715b237701bc",
          "sha256": "cb7ed115dc3494953250e929417160c9bbf7dc41e7aaaa55d9b42de556830eaf"
        },
        "downloads": -1,
        "filename": "py-search-space-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d8d1c1f99eac6349632c715b237701bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 7189,
        "upload_time": "2022-12-29T22:07:07",
        "upload_time_iso_8601": "2022-12-29T22:07:07.859302Z",
        "url": "https://files.pythonhosted.org/packages/bd/18/62498ca8a061945166b7524bdaa7a4e9448b65924f5e8cb6ff57052c4c9c/py-search-space-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a3993683ab8372d86fb77f2e27561010fbfbc3b2e6da116fbdd8c27ba584b4f",
          "md5": "bbc7a1d50f964cb1d28da6b729b448bd",
          "sha256": "2a18dcbc442e1c84e1f9bcb1b84acf267a067f9d981e201d02d195d1ff4b9656"
        },
        "downloads": -1,
        "filename": "py_search_space-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbc7a1d50f964cb1d28da6b729b448bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7620,
        "upload_time": "2022-12-29T22:11:19",
        "upload_time_iso_8601": "2022-12-29T22:11:19.215574Z",
        "url": "https://files.pythonhosted.org/packages/9a/39/93683ab8372d86fb77f2e27561010fbfbc3b2e6da116fbdd8c27ba584b4f/py_search_space-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3e870f76a499aa83997f231b1899059921164d3f78cd978abab11155ce571cb",
          "md5": "8fe61f99fc1036a85c57e0d787e1348e",
          "sha256": "953598936b33ac3c4c3637de31a59e16cf44e8553d7a6caf865e78b31f130ea6"
        },
        "downloads": -1,
        "filename": "py-search-space-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8fe61f99fc1036a85c57e0d787e1348e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 7192,
        "upload_time": "2022-12-29T22:11:21",
        "upload_time_iso_8601": "2022-12-29T22:11:21.155650Z",
        "url": "https://files.pythonhosted.org/packages/c3/e8/70f76a499aa83997f231b1899059921164d3f78cd978abab11155ce571cb/py-search-space-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f62ccf79138b5bc1e19d9be892652d92a5445a08da1157e390504c38e1113472",
          "md5": "5aed95597ad68c74fb562e86b316df54",
          "sha256": "08c49e2df71b53d80892e82c26fb752a82f3255120471faadbae4d88479636d8"
        },
        "downloads": -1,
        "filename": "py_search_space-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5aed95597ad68c74fb562e86b316df54",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 52280,
        "upload_time": "2022-12-29T22:17:00",
        "upload_time_iso_8601": "2022-12-29T22:17:00.552529Z",
        "url": "https://files.pythonhosted.org/packages/f6/2c/cf79138b5bc1e19d9be892652d92a5445a08da1157e390504c38e1113472/py_search_space-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6dbc844d2fda28753460f3a126f067786f6a0e0819afd0041a37dcc2e591f83d",
          "md5": "7d6ef40f7ff79afaeeaab95ac484e5f8",
          "sha256": "e27a15c46472998a2cba122753223a684d7e7e429c0a3796e33a8001783598c1"
        },
        "downloads": -1,
        "filename": "py-search-space-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7d6ef40f7ff79afaeeaab95ac484e5f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 34141,
        "upload_time": "2022-12-29T22:17:02",
        "upload_time_iso_8601": "2022-12-29T22:17:02.986884Z",
        "url": "https://files.pythonhosted.org/packages/6d/bc/844d2fda28753460f3a126f067786f6a0e0819afd0041a37dcc2e591f83d/py-search-space-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e40f12d8f088c67579ab45fde33f655f3fafff1a3bd27adaa5a45c85f7abeac2",
          "md5": "2d644b526d500abd538802e29778a0b6",
          "sha256": "77b6d51af0f8b2f8adbf976c02a0400ea29dfed96688ddf7ff3e8c2acb9e02f8"
        },
        "downloads": -1,
        "filename": "py_search_space-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d644b526d500abd538802e29778a0b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 62349,
        "upload_time": "2022-12-29T22:28:36",
        "upload_time_iso_8601": "2022-12-29T22:28:36.603361Z",
        "url": "https://files.pythonhosted.org/packages/e4/0f/12d8f088c67579ab45fde33f655f3fafff1a3bd27adaa5a45c85f7abeac2/py_search_space-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62ac9c0cc7bee13a35bd385ded290e6cf75693776a3d4cead30fb7f60a4e19e5",
          "md5": "8bc0ac5c997ed343425e95f314600ce0",
          "sha256": "2288edf894223c15644bc73c07ad74a677eb2d7a53a426bbefe5d740bdd8a9ce"
        },
        "downloads": -1,
        "filename": "py-search-space-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8bc0ac5c997ed343425e95f314600ce0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 39102,
        "upload_time": "2022-12-29T22:28:38",
        "upload_time_iso_8601": "2022-12-29T22:28:38.960418Z",
        "url": "https://files.pythonhosted.org/packages/62/ac/9c0cc7bee13a35bd385ded290e6cf75693776a3d4cead30fb7f60a4e19e5/py-search-space-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0d83f7a1f05c908a1ff9653d3a26da57afb11f0d99907dcd5720a64f38c825f",
          "md5": "e3a5633acff5dab1f4068abc48c98a36",
          "sha256": "489819bbeecdebaabea90da57bb0cb8bf032a035019883289aaff752b0a1aa10"
        },
        "downloads": -1,
        "filename": "py_search_space-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3a5633acff5dab1f4068abc48c98a36",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 62363,
        "upload_time": "2022-12-29T22:34:09",
        "upload_time_iso_8601": "2022-12-29T22:34:09.801076Z",
        "url": "https://files.pythonhosted.org/packages/b0/d8/3f7a1f05c908a1ff9653d3a26da57afb11f0d99907dcd5720a64f38c825f/py_search_space-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a7445bf90c12e4364fce58e0d9d61adb26c1ce1c0c9e2d14b49dd2ac34e410b",
          "md5": "7ada5bfd2fd79dc05a2926cca2d76ef2",
          "sha256": "edc90fddc8336fb9e22a9af194de6425baa867d1afe9c0f1ddf03a81bd05ea69"
        },
        "downloads": -1,
        "filename": "py-search-space-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "7ada5bfd2fd79dc05a2926cca2d76ef2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 39113,
        "upload_time": "2022-12-29T22:34:12",
        "upload_time_iso_8601": "2022-12-29T22:34:12.932088Z",
        "url": "https://files.pythonhosted.org/packages/1a/74/45bf90c12e4364fce58e0d9d61adb26c1ce1c0c9e2d14b49dd2ac34e410b/py-search-space-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bab6f22292cb4296c01648a03e5f625e8f319ef4166a8118d291936acc2bfb0",
          "md5": "0b7f57f368df4552fc9c61d044b6ec92",
          "sha256": "6486a1cd89c5d5f1a586e6ba05eaa686866baf211954f5a087f3568d529fb21e"
        },
        "downloads": -1,
        "filename": "py_search_space-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b7f57f368df4552fc9c61d044b6ec92",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 62385,
        "upload_time": "2022-12-29T23:01:05",
        "upload_time_iso_8601": "2022-12-29T23:01:05.985081Z",
        "url": "https://files.pythonhosted.org/packages/5b/ab/6f22292cb4296c01648a03e5f625e8f319ef4166a8118d291936acc2bfb0/py_search_space-1.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f0fcfff3266d4c7e53801a6712f520a1dec125fb434ed64798c31fdcfd7c63f",
          "md5": "620318e874c4b73c9decddf102e3ecdb",
          "sha256": "38fd8345ac904e58ec09d5791e54824cca5b8d142da4f7624954ea3026babac2"
        },
        "downloads": -1,
        "filename": "py-search-space-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "620318e874c4b73c9decddf102e3ecdb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 39148,
        "upload_time": "2022-12-29T23:01:08",
        "upload_time_iso_8601": "2022-12-29T23:01:08.255785Z",
        "url": "https://files.pythonhosted.org/packages/5f/0f/cfff3266d4c7e53801a6712f520a1dec125fb434ed64798c31fdcfd7c63f/py-search-space-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5bab6f22292cb4296c01648a03e5f625e8f319ef4166a8118d291936acc2bfb0",
        "md5": "0b7f57f368df4552fc9c61d044b6ec92",
        "sha256": "6486a1cd89c5d5f1a586e6ba05eaa686866baf211954f5a087f3568d529fb21e"
      },
      "downloads": -1,
      "filename": "py_search_space-1.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0b7f57f368df4552fc9c61d044b6ec92",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 62385,
      "upload_time": "2022-12-29T23:01:05",
      "upload_time_iso_8601": "2022-12-29T23:01:05.985081Z",
      "url": "https://files.pythonhosted.org/packages/5b/ab/6f22292cb4296c01648a03e5f625e8f319ef4166a8118d291936acc2bfb0/py_search_space-1.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5f0fcfff3266d4c7e53801a6712f520a1dec125fb434ed64798c31fdcfd7c63f",
        "md5": "620318e874c4b73c9decddf102e3ecdb",
        "sha256": "38fd8345ac904e58ec09d5791e54824cca5b8d142da4f7624954ea3026babac2"
      },
      "downloads": -1,
      "filename": "py-search-space-1.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "620318e874c4b73c9decddf102e3ecdb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 39148,
      "upload_time": "2022-12-29T23:01:08",
      "upload_time_iso_8601": "2022-12-29T23:01:08.255785Z",
      "url": "https://files.pythonhosted.org/packages/5f/0f/cfff3266d4c7e53801a6712f520a1dec125fb434ed64798c31fdcfd7c63f/py-search-space-1.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}