{
  "info": {
    "author": "Samuel LÃ³pez Saura",
    "author_email": "samuellopezsaura@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# HoneyCheck - Detect Rogue DHCP Servers in your network\n\n![Honeycheck logo](assets/honeycheck_horizontal.png)\n\nHoneycheck detects rogue DHCP servers and provides a modular and fully\nconfigurable action environment in case they are found.\n\n### Doc Index\n\n- [System requirements](#system-requirements)\n- [Honeycheck installaton](#honeycheck-installation)\n- [Configuring honeycheck](#configuring-honeycheck)\n- [Running honeycheck](#running-honeycheck)\n- [Extending honeycheck](#extending-honeycheck)\n- [Donations and Sponsorships](#donations-and-sponsorships)\n\n\n## System requirements\n\n```bash\napt-get install -y python3 virtualenv bridge-utils tcpdump\n```\n\n## Honeycheck Installation\n\n```bash\npip install honeycheck\n```\n\n## Configuring Honeycheck\n\nHoneycheck requires a configuration file as a parameter.\n\nThe interfaces on which it will work must be indicated in the configuration\nfile.\n\nFor each interface, you must define which control module will be executed when\na malicious `fail_test` server is detected or when it apparently stops being\ndetected pass_test.\n\nControl objects are highly customizable pieces of software. Each module\nreceives parameters that must be configured.\n\nThe control object `honeycheck.modules.script.Script` allows the execution of\nscripts and receives the script to execute as a parameter.\n\nDepending on the check, the parameter will be prefixed with `fail_test`,\n`pass_test` or `final_exec`.\n\n- fail_test will be executed if a rogue DHCP server is detected\n- pass_test will be executed if a rogue DHCP seems to be removed from the network\n> pass_test can through false_negatives if the rogue_dhcp response are not detected\n  in a period of time.\n- final_exec will be executed after each check\n\nThe configuration file must be created before running honeycheck.\n\n### Configuration sample\n\n> Note that honeycheck can work in multiple network interfaces at the same time.\n\n\n```ini\n[wlp0s20f3] # Configuration for wlp0s20f3 network interface\n\t# Less than 30 seconds can give flapping false negatives\n\tdiscover_timeout = 30\n\t\n\t# test syntax: module.ControlClass\n\tfail_test =    honeycheck.modules.script.Script\n\tfail_test_script_path = scripts/zenity_fail.sh\n\n\tpass_test = honeycheck.modules.script.Script\n\tpass_test_script_path = scripts/zenity_pass.sh\n\n\tpass_test = honeycheck.modules.script.Script\n\tpass_test_script_path = /my/custom/script\n\n[eth0]\n\tdiscover_timeout = 30\n\tfail_test =    honeycheck.modules.script.Script\n\tfail_test_script_path = scripts/zenity_fail.sh\n\n```\n\n## Running Honeycheck\n\nOnce Honeycheck is configured it can be started running `python3 -m honeycheck\n-c our_conf_file.cnf`\n\n## Extending Honeycheck\n\nYou can create your own modules to configure the behavior of honeycheck.\n\nTo do this all you have to do is inherit from the BaseControl abstract class located in `honeycheck.modules.base_control`.\n\n### Example of a Custom Control Object\n\n```python\nfrom honeycheck.modules.base_control import BaseControl, ControlConfigurationReq\n\n\nclass MyCustomControlObject(BaseControl):\n    def apply_actions(self, dhcp_watcher, **kwargs):\n        servers = dhcp_watcher.dhcp_servers\n        whitelist = dhcp_watcher.whitelist\n\n        # Retrieve a param value from configuration\n        script_path = self._conf.get_req(\"script_path\")\n\n        # Do your stuff here...\n        # Send an email, open an issue, publish a message to rabbitmq. whatever\n        # you want.\n\n\n    def get_conf_req(self) -> ControlConfigurationReq:\n        # Return a ControlConfigurationReq object with the required\n        # configuration this control object needs\n        return ControlConfigurationReq([\"script_path\"])\n```\n\nOnce you have created your custom control object you will need to add it to\nyour system as a python package.\n\nAfter this you will be able to select it in the honeycheck configuration. \n`fail_test = mycustom_module.MyCustomControlObject`\n\n\n## Donations and Sponsorships\n\n![Donations](assets/donations.png)\n\n### Donations from people/companies\n\nIf this tool is useful to you, please consider making a donation to support my\nwork.\n\nDonations allow me to continue developing open source software to contribute\nand grow our community.\n\nI wish some day I could focus only on creating quality open source with a\nstrong community\nsupporting my projects.\n\nYou support me on https://ko-fi.com/elchicodepython.\n\n### Sponsorships\n\nIf your company uses this tool and would like it to have a specific feature,\nyour company can sponsor its development.\n\nTo sponsor the development of a feature [contact\nme](https://es.linkedin.com/in/sam-sec).\n\n### Product integration advertising\n\nIf you want the integration of this tool with your solution to appear in this\nReadme, [contact me](https://es.linkedin.com/in/sam-sec).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/elchicodepython/HoneyCheck",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "honeycheck",
    "package_url": "https://pypi.org/project/honeycheck/",
    "platform": null,
    "project_url": "https://pypi.org/project/honeycheck/",
    "project_urls": {
      "Homepage": "https://github.com/elchicodepython/HoneyCheck"
    },
    "release_url": "https://pypi.org/project/honeycheck/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Honeycheck detects rogue dhcp servers and provides a modular and fully configurable action environment in case they are found",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14171245,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77f32338a5a3bda3b14ae7cf42e37301acc3133da3b2c16617cc59a06588364d",
          "md5": "93c7bb1c92ca13eb09e0dccebd1c88f3",
          "sha256": "2cb66af2114bf2498f84adafc8b6bab9cead06007c1923a7f89abe9c955f0e03"
        },
        "downloads": -1,
        "filename": "honeycheck-0.2.0-py3.8.egg",
        "has_sig": false,
        "md5_digest": "93c7bb1c92ca13eb09e0dccebd1c88f3",
        "packagetype": "bdist_egg",
        "python_version": "0.2.0",
        "requires_python": null,
        "size": 18362,
        "upload_time": "2022-06-16T22:52:45",
        "upload_time_iso_8601": "2022-06-16T22:52:45.465470Z",
        "url": "https://files.pythonhosted.org/packages/77/f3/2338a5a3bda3b14ae7cf42e37301acc3133da3b2c16617cc59a06588364d/honeycheck-0.2.0-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67d67118a726ca637d50bc448fb5e8924648fe0aed88f66451162ba7bf69e6cb",
          "md5": "b4f18a6a623cb699f1fd8da29669c4e0",
          "sha256": "12b3ccad6f402b2887033484699a4741fbd6730ad4348e5f3a469eab3c6d3564"
        },
        "downloads": -1,
        "filename": "honeycheck-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b4f18a6a623cb699f1fd8da29669c4e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8049,
        "upload_time": "2022-06-16T22:52:47",
        "upload_time_iso_8601": "2022-06-16T22:52:47.355965Z",
        "url": "https://files.pythonhosted.org/packages/67/d6/7118a726ca637d50bc448fb5e8924648fe0aed88f66451162ba7bf69e6cb/honeycheck-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56d8e06a6fd1ab5f3ce9ec4bfcf4ff66d601a45a750c9e6c64f8707bc2e78ce3",
          "md5": "48aa8dd2536e075877e5ce417ff85350",
          "sha256": "a4f1a2b1e0e6bd8aa6a924e86720e9e0096065864b3555d7d7e02d9e9d422ce2"
        },
        "downloads": -1,
        "filename": "honeycheck-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "48aa8dd2536e075877e5ce417ff85350",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9648,
        "upload_time": "2022-06-18T11:50:41",
        "upload_time_iso_8601": "2022-06-18T11:50:41.085338Z",
        "url": "https://files.pythonhosted.org/packages/56/d8/e06a6fd1ab5f3ce9ec4bfcf4ff66d601a45a750c9e6c64f8707bc2e78ce3/honeycheck-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56d8e06a6fd1ab5f3ce9ec4bfcf4ff66d601a45a750c9e6c64f8707bc2e78ce3",
        "md5": "48aa8dd2536e075877e5ce417ff85350",
        "sha256": "a4f1a2b1e0e6bd8aa6a924e86720e9e0096065864b3555d7d7e02d9e9d422ce2"
      },
      "downloads": -1,
      "filename": "honeycheck-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "48aa8dd2536e075877e5ce417ff85350",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9648,
      "upload_time": "2022-06-18T11:50:41",
      "upload_time_iso_8601": "2022-06-18T11:50:41.085338Z",
      "url": "https://files.pythonhosted.org/packages/56/d8/e06a6fd1ab5f3ce9ec4bfcf4ff66d601a45a750c9e6c64f8707bc2e78ce3/honeycheck-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}