{
  "info": {
    "author": "Facundo Batista",
    "author_email": "facundo@taniquetil.com.ar",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Natural Language :: Spanish",
      "Operating System :: MacOS",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development",
      "Topic :: Utilities"
    ],
    "description": "# Log Assertion\n\n![Python package](https://github.com/facundobatista/logassert/workflows/Python%20package/badge.svg)\n\n## What?\n\nA simple log assertion mechanism for Python unittests.\n\n\n## Why?\n\nAs is vox populi, you must also test the logging calls in your programs.\n\nWith `logassert` this is now very easy.\n\n\n# Awesome! How do I use it?\n\nThe same functionality is exposed in two very different ways, one that fits better the *pytest semantics*, the other one more suitable for classic unit tests.\n\n## For pytest\n\nAll you need to do is to declare `logs` in your test arguments, it works\njust like any other fixture.\n\nThen you just check (using `assert`, as usual with *pytest*) if a specific \nline is in the logs for a specific level.\n\nExample:\n\n```python\ndef test_bleh(logs)\n    (...)\n    assert \"The meaning of life is 42\" in logs.debug\n```\n\nActually, the line you write is a regular expression, so you can totally \ndo (in case you're not exactly sure which the meaning of life is):\n\n```python\n    assert \"The meaning of life is \\d+\" in logs.debug\n```\n\nThe indicated string is searched to be inside the log lines, it doesn't \nneed to be exact whole line. If you want that, just indicate it as with\nany regular expression:\n\n```python\n    assert \"^The meaning of life is \\d+$\" in logs.debug\n```\n\nIn a similar way you can also express the desire to check if it's at the \nbeginning or at the end of the log lines.\n\n> **NOTE**: the message checked is the final one, after the logging system \nreplaced all the indicated parameters in the indicated string.\n\nIf you want to verify that a text was logged, no matter at which level,\njust do:\n\n```python\n    assert \"The meaning of life is 42\" in logs.any_level\n```\n\nTo verify that some text was NOT logged, just juse the Python's syntax! \nFor example:\n\n```python\n    assert \"A problem happened\" not in logs.error\n```\n\n### But I don't like regexes, I want the exact string\n\nThen you just import `Exact` from `logassert` and wrap the string \nwith that.\n\nFor example, in this case the `..` means exactly two dots, no regex\nsemantics at all:\n\n```python\n    assert Exact(\"The meaning of life is ..\") in logs.any_level\n```\n\n\n### Anyway, I liked old behaviour of searching multiple strings\n\nThen you may want to import `Multiple` from `logassert` and wrap the\ndifferent strings you had in each call for the classic behaviour.\n\nFor example:\n\n```python\n    assert Multiple(\"life\", \"meaning\", \"42\") in logs.any_level\n```\n\n\n### What if I want to check that nothing was logged?\n\nThe simplest way to do it is to use the `NOTHING` verifier that you can \nimport from `logassert`:\n\n```python\n    assert NOTHING in logs.debug\n```\n\nNote that it doesn't make sense to use it by the negative (`...NOTHING not in logs...`): \nis no really useful at testing level to know that \"something was logged\", you should\nimprove the test to specifically verify *what* was logged.\n\n\n### Breaking the \"per line barrier\"\n\nSometimes it's useful to verify that several lines were logged, and that \nthose lines are logged one after the other, as they build a \"composite \nmessage\".\n\nTo achieve that control on the logged lines you can use the `Sequence`\nhelper, that receives all the lines to verify (regexes by default, but\nyou can use the other helpers there):\n\n```python\n    assert Sequence(\n        \"Got 2 errors and \\d+ warnings:\",\n        Exact(\"  error 1: foo\"),\n        Exact(\"  error 2: bar\"),\n    ) in logs.debug\n```    \n\n\n### Examples\n\nAfter logging...\n\n```python\n    person = \"madam\"\n    item = \"wallet\"\n    logger.debug(\"Excuse me %s, you dropped your %s\", person, item)\n```\n\n...the following test will just pass:\n\n```python\n    assert \"Excuse me .*?, you dropped your wallet\" in logs.debug\n```\n\nHowever, the following will fail (different text!)...\n\n```python\n    assert \"Excuse me .*?, you lost your wallet\" in logs.debug\n```\n\n...producing this message in your tests:\n\n```\nassert for regex 'Excuse me .*?, you lost your wallet' check in DEBUG, failed; logged lines:\n      DEBUG     'Excuse me madam, you dropped your wallet'\n```\n\nThis one will also fail (different level!)...\n\n```python\n    assert \"Excuse me .*?, you dropped your wallet\" in logs.info\n```\n\n...producing this message in your tests:\n\n```\nassert for regex 'Excuse me .*?, you dropped your wallet' check in INFO, failed; logged lines:\n       DEBUG     'Excuse me madam, you dropped your wallet'\n```\n\nA more complex example, with several log lines, and a specific assertion:\n\n```python\n    logger.info(\"Starting system\")\n    places = ['/tmp/', '~/temp']\n    logger.debug(\"Checking for config XYZ in all these places %s\", places)\n    logger.warning(\"bad config XYZ\")\n\n    assert \"bad config XYZ\" in logs.debug\n```\n\nSee how the test failure message is super helpful:\n\n```\nassert for regex 'bad config XYZ' check in DEBUG, failed; logged lines:\n       INFO      'Starting system'\n       DEBUG     \"Checking for config XYZ in all these places ['/tmp/', '~/temp']\"\n       WARNING   'bad config XYZ'\n\n```\n\n### What about repeated verifications?\n\nSometimes it's needed to verify that something if logged only once (e.g.\nwelcoming messages). In this cases it's super useful to use the `reset`\nmethod.\n\nSee the following test sequence:\n\n```python\ndef test_welcoming message(logs):\n    logger.info(\"foo\")  # first log! it should trigger the welcoming message\n    assert \"Welcome\" in logs.info\n\n    logs.reset()\n    logger.info(\"foo\")  # second log! it should NOT trigger the welcoming message\n    assert \"Welcome\" not in logs.info\n```\n\n\n## For classic TestCases\n\nAll you need to do is to call this module's `setup()` passing the test case\ninstance, and the logger you want to supervise.\n\nLike\n\n```python\nclass MyTestCase(unittest.TestCase):\n    \"\"\"Example.\"\"\"\n\n    def setUp(self):\n        logassert.setup(self, 'mylogger')\n```\n\nIn the example, `mylogger` is the name of the logging to supervise. If\ndifferent subsystems of your code log in other loggers, this tester\nwon't notice.\n\nThen, to use it, just call the `assertLogged` method and it's family,\npassing all the strings you want to find. This is the default behaviour for\nbackwards compatibility.\n\nExample:\n\n```python\n    def test_blah(self):\n        (...)\n        self.assertLoggedDebug('secret', 'life', '42')\n```\n\nThat line will check that \"secret\", \"life\" and \"42\" are all logged in the\nsame logging call, in DEBUG level.\n\nSo, if you logged this, the test will pass:\n\n```python\nlogger.debug(\"The secret of life, the universe and everything is %d\", 42)\n```\n\nNote that the message checked is the one with all parameters replaced.\n\nBut if you logged any of the following, the test will fail (the first because\nit misses one of the string, the second because it has the wrong log level)::\n\n```python\nlogger.debug(\"The secret of life, the universe and everything is lost\")\nlogger.info(\"The secret of life, the universe and everything is 42\")\n```\n\n### What can I test?\n\nYou'll have at disposition several assertion methods:\n\n- `self.assertLogged`: will check that the strings \n  were logged, no matter at which level\n\n- `self.assertLoggedLEVEL` (being LEVEL one of Error, \n  Warning, Info, or Debug): will check that the strings were logged at \n  that specific level.\n\n- `self.assertNotLogged`: will check that the \n  strings were NOT logged, no matter at which level\n\n- `self.assertNotLoggedLEVEL` (being LEVEL one of \n  Error, Warning, Info, or Debug): will check that the strings were NOT \n  logged at that specific level.\n\n\n\n# Nice! But...\n\nIf you need help, or have any question, or found any issue, please open a\nticket [here](https://github.com/facundobatista/logassert/issues/new).\n\nThanks in advance for your time.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/facundobatista/logassert",
    "keywords": "",
    "license": "LGPL-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "logassert",
    "package_url": "https://pypi.org/project/logassert/",
    "platform": null,
    "project_url": "https://pypi.org/project/logassert/",
    "project_urls": {
      "Homepage": "https://github.com/facundobatista/logassert"
    },
    "release_url": "https://pypi.org/project/logassert/7/",
    "requires_dist": [
      "setuptools"
    ],
    "requires_python": ">=3.5",
    "summary": "Simple but powerful assertion and verification of logged lines.",
    "version": "7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13879327,
  "releases": {
    "1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84903930b4bb530b24b2834c7d5d08baa4529a17e7d5359aaddabbe8ec889986",
          "md5": "7935b23a0f4a65ea9816fe1b4f7c2750",
          "sha256": "c8ee6a6acc80ffdf82a7101caec3658994dc331f5f9c0c1a2f47e52f921a8f9c"
        },
        "downloads": -1,
        "filename": "logassert-1.tar.gz",
        "has_sig": false,
        "md5_digest": "7935b23a0f4a65ea9816fe1b4f7c2750",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5490,
        "upload_time": "2015-04-30T22:01:56",
        "upload_time_iso_8601": "2015-04-30T22:01:56.377279Z",
        "url": "https://files.pythonhosted.org/packages/84/90/3930b4bb530b24b2834c7d5d08baa4529a17e7d5359aaddabbe8ec889986/logassert-1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e90741932ef3e42a7adf71748dee36b191b3ade3d154c41e66bca8393ea97c5",
          "md5": "0dd6e6370f3455da5cee907a0c6dbfdd",
          "sha256": "a36d029ca69f905caeb00f2da56a4fd5d82b4a6c0d653e2dfa7674102218f232"
        },
        "downloads": -1,
        "filename": "logassert-2.tar.gz",
        "has_sig": false,
        "md5_digest": "0dd6e6370f3455da5cee907a0c6dbfdd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5810,
        "upload_time": "2015-07-03T17:39:31",
        "upload_time_iso_8601": "2015-07-03T17:39:31.091576Z",
        "url": "https://files.pythonhosted.org/packages/2e/90/741932ef3e42a7adf71748dee36b191b3ade3d154c41e66bca8393ea97c5/logassert-2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a72205c817fb21f071fe834268a61a238864c1b9a593016e3e37ccb240310e12",
          "md5": "472bd035cb41bc7e136f3eb0203941ff",
          "sha256": "25dbce5052db84f3fe3505d2d0ae73ee061d78103a3fd08a20c5ebb995e8194f"
        },
        "downloads": -1,
        "filename": "logassert-3.tar.gz",
        "has_sig": false,
        "md5_digest": "472bd035cb41bc7e136f3eb0203941ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5841,
        "upload_time": "2016-09-01T18:39:06",
        "upload_time_iso_8601": "2016-09-01T18:39:06.426243Z",
        "url": "https://files.pythonhosted.org/packages/a7/22/05c817fb21f071fe834268a61a238864c1b9a593016e3e37ccb240310e12/logassert-3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79dd608ac53773a9d82862b83689067c4aab41fc72b6b0008259eb75e0423536",
          "md5": "5011c7750c3a14258f879e3196b916d9",
          "sha256": "90b289ed6869e873f8cf55aa92db66ba8627436ab7d8623b090762ed62a2af4b"
        },
        "downloads": -1,
        "filename": "logassert-4.tar.gz",
        "has_sig": false,
        "md5_digest": "5011c7750c3a14258f879e3196b916d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5838,
        "upload_time": "2016-09-01T19:11:39",
        "upload_time_iso_8601": "2016-09-01T19:11:39.877561Z",
        "url": "https://files.pythonhosted.org/packages/79/dd/608ac53773a9d82862b83689067c4aab41fc72b6b0008259eb75e0423536/logassert-4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14b14ab0b774981e984ee5d06410629849dad16c65af42a7fef591f20cc1bfd2",
          "md5": "b786e91ac30924059e7219d928389fe8",
          "sha256": "b7d047882e48260a227c90d6f15366fd93d13fa927c3f0bf0537ca9d1bce1c9a"
        },
        "downloads": -1,
        "filename": "logassert-5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b786e91ac30924059e7219d928389fe8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 11582,
        "upload_time": "2020-08-05T12:50:28",
        "upload_time_iso_8601": "2020-08-05T12:50:28.367545Z",
        "url": "https://files.pythonhosted.org/packages/14/b1/4ab0b774981e984ee5d06410629849dad16c65af42a7fef591f20cc1bfd2/logassert-5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f7a6bd9cef881dac9cc93b25f1886900eaa50a74a33d38b5d45edd1b928957c",
          "md5": "5293a69e35529f781b4f0d01ff7bbc0e",
          "sha256": "bd7e85af02101d207c1e4718d31fe12237e4fbe410912492ed370bc61b92b2b8"
        },
        "downloads": -1,
        "filename": "logassert-5.tar.gz",
        "has_sig": false,
        "md5_digest": "5293a69e35529f781b4f0d01ff7bbc0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11606,
        "upload_time": "2020-08-05T12:50:29",
        "upload_time_iso_8601": "2020-08-05T12:50:29.807289Z",
        "url": "https://files.pythonhosted.org/packages/4f/7a/6bd9cef881dac9cc93b25f1886900eaa50a74a33d38b5d45edd1b928957c/logassert-5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ebeb35f2f157b3e525dbeb0aef6947033ad3c977f9bc66757ab5065eee27761",
          "md5": "1741920c6c9944b828fa84cdf2cafe80",
          "sha256": "1dc53f4c89673853727c9d72622e4558b4d3461d408006899a8491134a7d1515"
        },
        "downloads": -1,
        "filename": "logassert-6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1741920c6c9944b828fa84cdf2cafe80",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 12460,
        "upload_time": "2020-10-25T22:04:37",
        "upload_time_iso_8601": "2020-10-25T22:04:37.227649Z",
        "url": "https://files.pythonhosted.org/packages/0e/be/b35f2f157b3e525dbeb0aef6947033ad3c977f9bc66757ab5065eee27761/logassert-6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cc4c0738a003ecfc62e8ec97b2a3839fe1b55b96bcce6f77910e7e068c48967",
          "md5": "58187bffd51356251499d9543cd450ef",
          "sha256": "16041bc71f6aab9c5cc2977abd6ba3415b138f73b413e272104e845d12fc5010"
        },
        "downloads": -1,
        "filename": "logassert-6.tar.gz",
        "has_sig": false,
        "md5_digest": "58187bffd51356251499d9543cd450ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 13280,
        "upload_time": "2020-10-25T22:04:38",
        "upload_time_iso_8601": "2020-10-25T22:04:38.862856Z",
        "url": "https://files.pythonhosted.org/packages/7c/c4/c0738a003ecfc62e8ec97b2a3839fe1b55b96bcce6f77910e7e068c48967/logassert-6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f88eb9200795d281bb9e6bd7aa660c4f3f470023b5fc758f251c115965b95d5",
          "md5": "f2e1d00c386e7b14cb349654a1cbb0b6",
          "sha256": "200d25f2e984a2099a07d6c37fde46b96fb8c215375f705914741e4a09ee335c"
        },
        "downloads": -1,
        "filename": "logassert-7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2e1d00c386e7b14cb349654a1cbb0b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 12599,
        "upload_time": "2022-05-20T15:36:48",
        "upload_time_iso_8601": "2022-05-20T15:36:48.736412Z",
        "url": "https://files.pythonhosted.org/packages/7f/88/eb9200795d281bb9e6bd7aa660c4f3f470023b5fc758f251c115965b95d5/logassert-7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88dbc9cf2a615b720a6caf55c60611a72ae8cc9ab907e2c24bfeaffd07c0677a",
          "md5": "817e20d266ff5094111fc37706cd113d",
          "sha256": "bf7598c00c4c17569dded3bcc753a2719f17a426b09622290f2ee3286e2e2060"
        },
        "downloads": -1,
        "filename": "logassert-7.tar.gz",
        "has_sig": false,
        "md5_digest": "817e20d266ff5094111fc37706cd113d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 13861,
        "upload_time": "2022-05-20T15:36:50",
        "upload_time_iso_8601": "2022-05-20T15:36:50.131110Z",
        "url": "https://files.pythonhosted.org/packages/88/db/c9cf2a615b720a6caf55c60611a72ae8cc9ab907e2c24bfeaffd07c0677a/logassert-7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f88eb9200795d281bb9e6bd7aa660c4f3f470023b5fc758f251c115965b95d5",
        "md5": "f2e1d00c386e7b14cb349654a1cbb0b6",
        "sha256": "200d25f2e984a2099a07d6c37fde46b96fb8c215375f705914741e4a09ee335c"
      },
      "downloads": -1,
      "filename": "logassert-7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f2e1d00c386e7b14cb349654a1cbb0b6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 12599,
      "upload_time": "2022-05-20T15:36:48",
      "upload_time_iso_8601": "2022-05-20T15:36:48.736412Z",
      "url": "https://files.pythonhosted.org/packages/7f/88/eb9200795d281bb9e6bd7aa660c4f3f470023b5fc758f251c115965b95d5/logassert-7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88dbc9cf2a615b720a6caf55c60611a72ae8cc9ab907e2c24bfeaffd07c0677a",
        "md5": "817e20d266ff5094111fc37706cd113d",
        "sha256": "bf7598c00c4c17569dded3bcc753a2719f17a426b09622290f2ee3286e2e2060"
      },
      "downloads": -1,
      "filename": "logassert-7.tar.gz",
      "has_sig": false,
      "md5_digest": "817e20d266ff5094111fc37706cd113d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 13861,
      "upload_time": "2022-05-20T15:36:50",
      "upload_time_iso_8601": "2022-05-20T15:36:50.131110Z",
      "url": "https://files.pythonhosted.org/packages/88/db/c9cf2a615b720a6caf55c60611a72ae8cc9ab907e2c24bfeaffd07c0677a/logassert-7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}