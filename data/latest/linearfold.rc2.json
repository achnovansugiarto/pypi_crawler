{
  "info": {
    "author": "Katelyn McNair, Liang Huang*, He Zhang**, Dezhong Deng**, Kai Zhao, Kaibo Liu, David Hendrix, David Mathews",
    "author_email": "deprekate@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "This codebase replaces the now deprecated version: https://github.com/abentu0101/LinearFold.\nThis version fixes many bugs and design problems in the old version.\n\n# LinearFold: Linear-Time Prediction for RNA Secondary Structures\n\nThis repository contains the C++ source code for the LinearFold project, the first linear-time prediction algorithm/software for RNA secondary structures.\n\n[LinearFold: Linear-Time Approximate RNA Folding by 5’-to-3’ Dynamic Programming and Beam Search](https://academic.oup.com/bioinformatics/article/35/14/i295/5529205). Bioinformatics, Volume 35, Issue 14, July 2019, Pages i295–i304. ISMB 2019\n\nLiang Huang*, He Zhang**, Dezhong Deng**, Kai Zhao, Kaibo Liu, David Hendrix, David Mathews\n\n\\* corresponding author\n\n** contributed equally\n\nWeb server: http://linearfold.org\n\n\n## Dependencies\nGCC 4.8.5 or above; \npython2.7\n\n## To Compile\n```\nmake\n```\n\n## To Run\nThe LinearFold parser can be run with:\n```\necho SEQUENCE | ./linearfold [OPTIONS]\n\nOR\n\ncat SEQ_OR_FASTA_FILE | ./linearfold [OPTIONS]\n```\nBoth FASTA format and pure-sequence format are supported for input.\n\n## Run as a python module available through pypi/pip\nTo install:\n```\npip install LinearFold\n```\nTo import and use in other python code:\n```\nimport LinearFold as lf\nprint(lf.fold('UGAGUUCUCGAUCUCUAAAAUCG'))\n```\nAnd the output is a tuple containing the predicted structure and mfe:\n```\n['.(((........)))........', -1.8]\n```\n\nOPTIONS:\n```\n-b BEAM_SIZE\n```\nThe beam size (default 100). Use 0 for infinite beam.\n```\n-V\n```\nSwitches LinearFold-C (by default) to LinearFold-V.\n```\n--verbose\n```\nPrints out energy of each loop in the structure. (default False)\n```\n--sharpturn\n```\nEnable sharpturn in prediction. (default False)\n```\n--eval\n```\nEnable eval mode, which can calculate free energy for a given structure of a sequence. (default False)\n```\n--constraints\n```\nEnable adding specific constraints in prediction (default False). \nThe constraint sequence should have the same length as the RNA sequence. \n\"? . ( )\" indicates a position for which the proper matching is unknown, unpaired, left or right parenthesis respectively. The parentheses must be well-banlanced and non-crossing.\n\n```\n--zuker\n```\noutput Zuker suboptimal structures, (DEFAULT=FALSE)\n\n```\n--delta\n```\ncompute Zuker suboptimal structures with scores or energies(-V, kcal/mol) in a centain range of the optimum, (DEFAULT=5.0)\n\n\n```\n--shape <filename>\n```\nuse SHAPE reactivity data to guide structure predictions  \nPlease refer to this link for the SHAPE data format:\nhttps://rna.urmc.rochester.edu/Text/File_Formats.html#SHAPE\n\n\n## To Visualize \nLinearFold is able to visualize the structure using a circular plot.\n\nTo draw a circular plot, run command:  \n```\ncat TARGET_FILE | ./draw_circular_plot \n```\nTARGET_FILE contains one sequence and its structure; see \"ecoli_tRNA\" file as an example.\n\n\n## Example Run Predict\n```\ncat testseq | ./linearfold\nUGAGUUCUCGAUCUCUAAAAUCG\n....................... (-0.22)\nAAAACGGUCCUUAUCAGGACCAAACA\n.....((((((....))))))..... (4.91)\nAUUCUUGCUUCAACAGUGUUUGAACGGAAU\n.............................. (-0.29)\nUCGGCCACAAACACACAAUCUACUGUUGGUCGA\n(((((((...................))))))) (0.99)\nGUUUUUAUCUUACACACGCUUGUGUAAGAUAGUUA\n.....(((((((((((....))))))))))).... (6.66)\n\necho GGGCUCGUAGAUCAGCGGUAGAUCGCUUCCUUCGCAAGGAAGCCCUGGGUUCAAAUCCCAGCGAGUCCACCA | ./linearfold -V -b 20\nGGGCUCGUAGAUCAGCGGUAGAUCGCUUCCUUCGCAAGGAAGCCCUGGGUUCAAAUCCCAGCGAGUCCACCA\n(((((((..((((.......))))((((((((...)))))))).(((((.......)))))))))))).... (-31.50)\n```\n\n## Example Run Predict with constraints\n```\ncat testcons | ./linearfold --constraints\nAACUCCGCCAGGCCUGGAAGGGAGCAACGGUAGUGACACUCUCUGUGUGCGUAGGUUGCCUAGCUACCAUUU\n??(???(??????)?(????????)???(??????(???????)?)???????????)??.???????????\n..(.(((......)((........))(((......(.......).))).....))..).............. (-27.33)\nGCCUGGUGACCAUAGCGAGUCGGUACCACCCCUUCCCAUCCCGAACAGGACCGUGAAACGACUCCGCGCCGAUGAUAGUGCGGAUUCCCGUGUGAAAGUAGGUCAUCGCCAGGC\n??(??(???(??????)???????????????(????)???(???????????(??(????.)??????????(??????)?)??????)????????????)????????)??\n(((((((..(......).........(((...(....)...((....(((...(..(.....)..........(......).)..))))).))).......))))......))) (-44.00)\n\necho -e \"GAACCCCGUCAGGUCCGGAAGGAAGCAGCGGUAAGU\\n??????????????????(????????????????)\" | ./linearfold --constraints\nGAACCCCGUCAGGUCCGGAAGGAAGCAGCGGUAAGU\n??????????????????(????????????????)\n..................(................) (-8.85)\n\necho -e \"GAACCCCGUCAGGUCCGGAAGGAAGCAGCGGUAAGU\\n??????????????????(????????????????)\" | ./linearfold --constraints -V\nGAACCCCGUCAGGUCCGGAAGGAAGCAGCGGUAAGU\n??????????????????(????????????????)\n.....(((.......)))(.....((....))...) (3.70)\n```\n\n## Example Run Predict and output suboptimal structures\n```\necho GCCUGGUGACCAUAGCGAGUCGGUACCACCCCUUCCCAUCCCGAACAGGACCGUGAAACGACUCCGCGCCGAUGAUAGUGCGGAUUCCCGUGUGAAAGUAGGUCAUCGCCAGGC | ./linearfold -V --zuker --delta 2.0\n(((((((((.....((((((((....(((.(((((.......))..)))...)))...)))))).))(((.........((((....)))).........)))..))))))))) (-35.50)\nZuker suboptimal structures...\n(((((((((.....((((((((....(((.(((((.......))..)))...)))...)))))).))(((.........((((....)))).........)))..))))))))) (-35.50)\n(((((((((.....((((((((....(((.(((((.......))..)))...)))...)))))).))(((.((......((((....))))......)).)))..))))))))) (-35.40)\n(((((((((.....((((((((....(((....(((...........)))..)))...)))))).))(((.........((((....)))).........)))..))))))))) (-34.90)\n(((((((((.....((((((((....(((.(((((.......))..)))...)))...)))))).))(((.((..(..(((((....)))))..)..)).)))..))))))))) (-34.70)\n(((((((((((.....((((((....(((.(((((.......))..)))...)))...))))))(((((........)))))..................))))...))))))) (-34.50)\n(((((((((((.....((((((....(((.(((((.......))..)))...)))...))))))(((((........)))))..(((......)))....))))...))))))) (-34.40)\n(((((((((.......((((((....(((.(((((.......))..)))...)))...))))))(((((........)))))((((..(........)..)))).))))))))) (-34.20)\n(((((((((((...((((((((....(((.(((((.......))..)))...)))...)))))((((((........)))))).....))).........))))...))))))) (-34.00)\n(((((((((((...((((((((....(((.(((((.......))..)))...)))...))))))(((((........)))))...............)).))))...))))))) (-33.90)\n(((((((((.....((((((((.(((..((..(((.......)))..))...)))...)))))).))(((.........((((....)))).........)))..))))))))) (-33.70)\n(((((((((.....((((((((....(((.........(((......)))..)))...)))))).))(((.........((((....)))).........)))..))))))))) (-33.70)\n(((((((((.......((((((....(((.(((((.......))..)))...)))...))))))(((((........))))).....((...........))...))))))))) (-33.60)\n```\n\n## Example Run SHAPE-guided structure prediction\n```\necho GCCUGGUGACCAUAGCGAGUCGGUACCACCCCUUCCCAUCCCGAACAGGACCGUGAAACGACUCCGCGCCGAUGAUAGUGCGGAUUCCCGUGUGAAAGUAGGUCAUCGCCAGGC | ./linearfold -V --shape example.shape\nGCCUGGUGACCAUAGCGAGUCGGUACCACCCCUUCCCAUCCCGAACAGGACCGUGAAACGACUCCGCGCCGAUGAUAGUGCGGAUUCCCGUGUGAAAGUAGGUCAUCGCCAGGC\n((((((........((((((((.(((............(((......)))..)))...))))).)))..(((((((..(((...(((......))).))).))))))))))))) (-66.30)\n```\n\n\n## Example Run Eval\n```\ncat testeval | ./linearfold --eval\nUGAGUUCUCGAUCUCUAAAAUCG\n.(((........)))........ (-1.80)\nAAAACGGUCCUUAUCAGGACCAAACA\n.....((((((....))))))..... (-9.30)\nAUUCUUGCUUCAACAGUGUUUGAACGGAAU\n(((((...(((((......))))).))))) (-6.80)\nUCGGCCACAAACACACAAUCUACUGUUGGUCGA\n(((((((((..............))).)))))) (-7.80)\nGUUUUUAUCUUACACACGCUUGUGUAAGAUAGUUA\n....((((((((((((....))))))))))))... (-13.00)\n\necho -e \"GGGCUCGUAGAUCAGCGGUAGAUCGCUUCCUUCGCAAGGAAGCCCUGGGUUCAAAUCCCAGCGAGUCCACCA\\n(((((((..((((.......))))((((((((...)))))))).(((((.......))))))))))))....\\n\" | ./linearfold --eval --verbose\nHairpin loop ( 13, 21) CG : 4.50\nInterior loop ( 12, 22) UA; ( 13, 21) CG : -2.40\nInterior loop ( 11, 23) AU; ( 12, 22) UA : -1.10\nInterior loop ( 10, 24) GC; ( 11, 23) AU : -2.40\nHairpin loop ( 32, 36) UA : 5.90\nInterior loop ( 31, 37) UA; ( 32, 36) UA : -0.90\nInterior loop ( 30, 38) CG; ( 31, 37) UA : -2.10\nInterior loop ( 29, 39) CG; ( 30, 38) CG : -3.30\nInterior loop ( 28, 40) UA; ( 29, 39) CG : -2.40\nInterior loop ( 27, 41) UA; ( 28, 40) UA : -0.90\nInterior loop ( 26, 42) CG; ( 27, 41) UA : -2.10\nInterior loop ( 25, 43) GC; ( 26, 42) CG : -3.40\nHairpin loop ( 49, 57) GC : 4.40\nInterior loop ( 48, 58) GC; ( 49, 57) GC : -3.30\nInterior loop ( 47, 59) GC; ( 48, 58) GC : -3.30\nInterior loop ( 46, 60) UA; ( 47, 59) GC : -2.10\nInterior loop ( 45, 61) CG; ( 46, 60) UA : -2.10\nMulti loop ( 7, 62) GC : 1.40\nInterior loop ( 6, 63) CG; ( 7, 62) GC : -2.40\nInterior loop ( 5, 64) UA; ( 6, 63) CG : -2.40\nInterior loop ( 4, 65) CG; ( 5, 64) UA : -2.10\nInterior loop ( 3, 66) GU; ( 4, 65) CG : -2.50\nInterior loop ( 2, 67) GC; ( 3, 66) GU : -1.50\nInterior loop ( 1, 68) GC; ( 2, 67) GC : -3.30\nExternal loop : -1.70\nGGGCUCGUAGAUCAGCGGUAGAUCGCUUCCUUCGCAAGGAAGCCCUGGGUUCAAAUCCCAGCGAGUCCACCA\n(((((((..((((.......))))((((((((...)))))))).(((((.......)))))))))))).... (-31.50)\n```\n\n## Example: Draw Circular Plot\n```\ncat ecoli_tRNA | ./draw_circular_plot\n```\n<img src=\"./vis_examples/circular_plot.png\" width=\"400\">\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LinearFold/LinearFold",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "LinearFold",
    "package_url": "https://pypi.org/project/LinearFold/",
    "platform": null,
    "project_url": "https://pypi.org/project/LinearFold/",
    "project_urls": {
      "Homepage": "https://github.com/LinearFold/LinearFold"
    },
    "release_url": "https://pypi.org/project/LinearFold/1.1/",
    "requires_dist": null,
    "requires_python": ">3.5.2",
    "summary": "A a tool to predict RNA secondary structure and minimum free energy",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17325631,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0a048e3487b631621f1c8dc77248420a53260cd38d1749312d52bf03c63f62a",
          "md5": "de4615dfc88d41aeff188a1909bf027c",
          "sha256": "e549d9413eb0df55d38c26ac398403e675cc8c756f8344bd4a75813b7a9a5042"
        },
        "downloads": -1,
        "filename": "LinearFold-1.0-cp36-cp36m-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "de4615dfc88d41aeff188a1909bf027c",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">3.5.2",
        "size": 921830,
        "upload_time": "2021-11-25T00:03:40",
        "upload_time_iso_8601": "2021-11-25T00:03:40.328827Z",
        "url": "https://files.pythonhosted.org/packages/f0/a0/48e3487b631621f1c8dc77248420a53260cd38d1749312d52bf03c63f62a/LinearFold-1.0-cp36-cp36m-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "571cf5fc1b7ab5695d31128955a3e55f7974c3b14fdeb71dc4ec0320274e370e",
          "md5": "5d8b3c2bf294210451e2a597e1ab750c",
          "sha256": "f1366d48924df2d424e0694cbedd0f4d156111632ba6c47ce23a9ebc05cfb7c7"
        },
        "downloads": -1,
        "filename": "LinearFold-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5d8b3c2bf294210451e2a597e1ab750c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5.2",
        "size": 56070,
        "upload_time": "2021-11-25T00:03:42",
        "upload_time_iso_8601": "2021-11-25T00:03:42.354128Z",
        "url": "https://files.pythonhosted.org/packages/57/1c/f5fc1b7ab5695d31128955a3e55f7974c3b14fdeb71dc4ec0320274e370e/LinearFold-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "079001f88547ba2851e4a1b9c921e06ba42455b6707c70e0b6fcbef57970b02b",
          "md5": "2f46ca3ca9987aac26bc0f5ec07a6924",
          "sha256": "03c7d09e9525d4e8da1d42c82c6ac9d0b9e6b9e44b07d1951ccd8401ae266b5c"
        },
        "downloads": -1,
        "filename": "LinearFold-1.1-cp39-cp39-macosx_10_9_universal2.whl",
        "has_sig": false,
        "md5_digest": "2f46ca3ca9987aac26bc0f5ec07a6924",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">3.5.2",
        "size": 187854,
        "upload_time": "2023-03-16T23:15:16",
        "upload_time_iso_8601": "2023-03-16T23:15:16.073305Z",
        "url": "https://files.pythonhosted.org/packages/07/90/01f88547ba2851e4a1b9c921e06ba42455b6707c70e0b6fcbef57970b02b/LinearFold-1.1-cp39-cp39-macosx_10_9_universal2.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60c1ddd3b6d86f5253f49cfc34af1afdf1c818b166b6d7895c9d54cb023771be",
          "md5": "f0428482177447afd9e58d73b4eff3ba",
          "sha256": "023b5b03a7a7d40c89dac809086ad84b53f16007bbe653d1c7dc80c93c8bc52c"
        },
        "downloads": -1,
        "filename": "LinearFold-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f0428482177447afd9e58d73b4eff3ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5.2",
        "size": 54495,
        "upload_time": "2023-03-16T23:15:17",
        "upload_time_iso_8601": "2023-03-16T23:15:17.778996Z",
        "url": "https://files.pythonhosted.org/packages/60/c1/ddd3b6d86f5253f49cfc34af1afdf1c818b166b6d7895c9d54cb023771be/LinearFold-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "079001f88547ba2851e4a1b9c921e06ba42455b6707c70e0b6fcbef57970b02b",
        "md5": "2f46ca3ca9987aac26bc0f5ec07a6924",
        "sha256": "03c7d09e9525d4e8da1d42c82c6ac9d0b9e6b9e44b07d1951ccd8401ae266b5c"
      },
      "downloads": -1,
      "filename": "LinearFold-1.1-cp39-cp39-macosx_10_9_universal2.whl",
      "has_sig": false,
      "md5_digest": "2f46ca3ca9987aac26bc0f5ec07a6924",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">3.5.2",
      "size": 187854,
      "upload_time": "2023-03-16T23:15:16",
      "upload_time_iso_8601": "2023-03-16T23:15:16.073305Z",
      "url": "https://files.pythonhosted.org/packages/07/90/01f88547ba2851e4a1b9c921e06ba42455b6707c70e0b6fcbef57970b02b/LinearFold-1.1-cp39-cp39-macosx_10_9_universal2.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "60c1ddd3b6d86f5253f49cfc34af1afdf1c818b166b6d7895c9d54cb023771be",
        "md5": "f0428482177447afd9e58d73b4eff3ba",
        "sha256": "023b5b03a7a7d40c89dac809086ad84b53f16007bbe653d1c7dc80c93c8bc52c"
      },
      "downloads": -1,
      "filename": "LinearFold-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f0428482177447afd9e58d73b4eff3ba",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.5.2",
      "size": 54495,
      "upload_time": "2023-03-16T23:15:17",
      "upload_time_iso_8601": "2023-03-16T23:15:17.778996Z",
      "url": "https://files.pythonhosted.org/packages/60/c1/ddd3b6d86f5253f49cfc34af1afdf1c818b166b6d7895c9d54cb023771be/LinearFold-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}