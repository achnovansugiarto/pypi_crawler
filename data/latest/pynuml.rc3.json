{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# PyNuML: HDF5 IO and ML processing for neutrino physics\n\nPyNuML is a Python toolkit for processing machine learning (ML) inputs from neutrino physics simulation datasets. It offers efficient MPI parallel processing of datasets, including standardised solutions for generating semantic and instance labels from low-level particle simulation, and constructing PyTorch ML inputs such as pixel maps and graphs. The package uses a modular design to maximise flexibility and extensibility, allowing the user to write custom labelling and/or object formation code in place of the algorithms provided.\n\n## Parallel Event IO\n\nHDF5 files produced using the [NuML standard](https://github.com/vhewes/numl) contain tabular data structures representing events, simulated particles, energy depositions, detector hits and any other information defined by the user. For large datasets, accessing the rows of a table corresponding to a specific event based on event index can become prohibitively slow. PyNuML includes a metadata standard for efficient MPI parallel IO with large-scale physics event data. This approach enables very efficient processing of datasets using MPI parallel processing on HPC nodes, while also providing a simple and effective interface for interactive analysis.\n\n## Semantic and instance labelling\n\nNovel ML techniques developed for particle physics typically conform to one of several standard archetypes: event classification, instance segmentation to cluster of detector hits into particles, or semantic segmentation of hits and/or particles into particle types. These applications typically utilise supervised learning, leveraging the detailed simulation already available to produce truth-labelled ML objects for model training.\n\nMost of these experiments utilise the same primary workflow: primary particles from a generator are passed into Geant4 to simulate true energy depositions, which are in turn passed through detector simulation to produce simulated raw detector output. Generating ML truth labels for detector objects such as hits typically involves backtracking from detector-level information to access the underlying true particle information, and using that information to design some kind of instance label.\n\nMany physicists producing ML inputs develop such a workflow from scratch, unnecessarily re-developing variants on the same basic mechanism over and over again, and often falling into the same pitfalls in the process. For instance, a user producing a CNN pixel map from detector hits will often loop over each hit, query a backtracker to fetch the associated true particle information, and then use that information to categorise that hit according to a user-defined semantic labelling scheme. This approach can become highly inefficient and convoluted as computational cycles are wasted re-categorising hits produced by the same simulated particle, especially if the labelling requires context information from parent or child particles.\n\nPyNuML maximises efficiency by performing a single labelling pass over the true particle table, stepping hierarchically down from primary particles, assigning each particle a semantic and instance label using a standard taxonomy. These labels can then be efficiently propagated to detector objects using Pandas DataFrame merge operations, using the true energy deposition table as an intermediary. This also avoids double-counting errors that can occur when aggregating objects into pixel or voxel maps is necessary.\n\nIf the user's simulation includes custom Geant4 physics processes that necessitate modifications to a standard labelling scheme – or if they simply prefer a different labelling scheme altogether – the user can simply write their own labelling function to use instead. If the user develops a new labelling function that has general appeal, that function can then be added to the standard labelling options included in PyNuML.\n\n## ML object formation\n\nPyNuML also provides standard tools for the production of ML inputs, taking Pandas DataFrames containing event information and using them to construct a single ML input. A function that produces detector hit graphs for GNN training is provided, with 2D and 3D pixel map production in development. This single-event processing function is nested within an MPI parallel IO infrastructure to efficiently preprocess an entire dataset into ML inputs at scale, storing each object in an individual Pytorch `.pt` format or (experimentally) storing all inputs as compound data objects within a single HDF5 file.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "physics,neutrino,gnn,hdf5",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pynuml",
    "package_url": "https://pypi.org/project/pynuml/",
    "platform": null,
    "project_url": "https://pypi.org/project/pynuml/",
    "project_urls": {
      "Bug Tracker": "https://github.com/vhewes/pynuml/issues",
      "Homepage": "https://github.com/vhewes/pynuml"
    },
    "release_url": "https://pypi.org/project/pynuml/0.1.1/",
    "requires_dist": [
      "h5py (>=3.7.0)",
      "mpi4py",
      "pandas",
      "particle",
      "torch (>=1.12.1) ; extra == 'torch'",
      "torch-geometric (>=2.1.0) ; extra == 'torch'"
    ],
    "requires_python": ">=3.7",
    "summary": "Standardised ML input processing for particle physics",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15780055,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca8d66d159c464bac26b6a260925b18a1d043a33e01a2cd1d755a040146fb64f",
          "md5": "93b84a461770e5b45b4c4b357d921059",
          "sha256": "a6d44b32eeef4c15f372b1a8621d2f7a1bc2b00c67273708c2ed3d800697849d"
        },
        "downloads": -1,
        "filename": "pynuml-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93b84a461770e5b45b4c4b357d921059",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23536,
        "upload_time": "2022-10-10T17:13:10",
        "upload_time_iso_8601": "2022-10-10T17:13:10.784077Z",
        "url": "https://files.pythonhosted.org/packages/ca/8d/66d159c464bac26b6a260925b18a1d043a33e01a2cd1d755a040146fb64f/pynuml-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "450cbf643116c68357b60639e20e01ca2d4bf280a837dfed33616eef5aa6491a",
          "md5": "c49b0e62d4ce01e1c0c994abd1bb078a",
          "sha256": "bdb0a56a3bc2bbf527ca0522637d2d3dad0e704ac5f5497764490cdbbbf287ae"
        },
        "downloads": -1,
        "filename": "pynuml-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c49b0e62d4ce01e1c0c994abd1bb078a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 22823,
        "upload_time": "2022-10-10T17:13:13",
        "upload_time_iso_8601": "2022-10-10T17:13:13.982541Z",
        "url": "https://files.pythonhosted.org/packages/45/0c/bf643116c68357b60639e20e01ca2d4bf280a837dfed33616eef5aa6491a/pynuml-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efa6332b1279ff8e3daf02901689032a94169e79673b0fdc13e7f24df2836dc4",
          "md5": "dc0e1ebb859aa5515692d4a7cb9749fd",
          "sha256": "4f5fe24cb0199132c19a446d39c411752a640429b567d6782517005f7ab393b7"
        },
        "downloads": -1,
        "filename": "pynuml-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc0e1ebb859aa5515692d4a7cb9749fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23539,
        "upload_time": "2022-11-15T19:34:35",
        "upload_time_iso_8601": "2022-11-15T19:34:35.051220Z",
        "url": "https://files.pythonhosted.org/packages/ef/a6/332b1279ff8e3daf02901689032a94169e79673b0fdc13e7f24df2836dc4/pynuml-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c455e9df38135f6265a354f32647c8d9f93b6fafb42e516c58404a1f9e69310f",
          "md5": "60e4f8f743f29753ece685eeb54d8820",
          "sha256": "1ced0f56d1b07638634e0c7ad4fb8ac592b76f69e637671639b8e1629052351f"
        },
        "downloads": -1,
        "filename": "pynuml-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "60e4f8f743f29753ece685eeb54d8820",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 22681,
        "upload_time": "2022-11-15T19:34:36",
        "upload_time_iso_8601": "2022-11-15T19:34:36.977578Z",
        "url": "https://files.pythonhosted.org/packages/c4/55/e9df38135f6265a354f32647c8d9f93b6fafb42e516c58404a1f9e69310f/pynuml-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f92af039dece2a42c4aecd9ee5f3553124c8e1cf3137daba983ffdcc7fe3b1ef",
          "md5": "b81d0734a52b064d65b1b1fd9ed9dd1b",
          "sha256": "d1c84bea43e0af55acb66d4e1a1c11dee628df4659ae8c6a86f7b89cb0784e5a"
        },
        "downloads": -1,
        "filename": "pynuml-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b81d0734a52b064d65b1b1fd9ed9dd1b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23531,
        "upload_time": "2022-10-10T17:13:12",
        "upload_time_iso_8601": "2022-10-10T17:13:12.452317Z",
        "url": "https://files.pythonhosted.org/packages/f9/2a/f039dece2a42c4aecd9ee5f3553124c8e1cf3137daba983ffdcc7fe3b1ef/pynuml-0.1.2-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "test release, uploaded by accident"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "019f843db9d917082a6900d82fa7f17ac5207cc8c961885c9deed2aa098ed642",
          "md5": "b38cf6ba306efaa4dcd0e463b549e63c",
          "sha256": "3f6be8a623c78ccb87eb2132b62e8bc799f30cee52f5aafe5d82bc2de317f00f"
        },
        "downloads": -1,
        "filename": "pynuml-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b38cf6ba306efaa4dcd0e463b549e63c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 22800,
        "upload_time": "2022-10-10T17:13:15",
        "upload_time_iso_8601": "2022-10-10T17:13:15.342444Z",
        "url": "https://files.pythonhosted.org/packages/01/9f/843db9d917082a6900d82fa7f17ac5207cc8c961885c9deed2aa098ed642/pynuml-0.1.2.tar.gz",
        "yanked": true,
        "yanked_reason": "test release, uploaded by accident"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "efa6332b1279ff8e3daf02901689032a94169e79673b0fdc13e7f24df2836dc4",
        "md5": "dc0e1ebb859aa5515692d4a7cb9749fd",
        "sha256": "4f5fe24cb0199132c19a446d39c411752a640429b567d6782517005f7ab393b7"
      },
      "downloads": -1,
      "filename": "pynuml-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dc0e1ebb859aa5515692d4a7cb9749fd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 23539,
      "upload_time": "2022-11-15T19:34:35",
      "upload_time_iso_8601": "2022-11-15T19:34:35.051220Z",
      "url": "https://files.pythonhosted.org/packages/ef/a6/332b1279ff8e3daf02901689032a94169e79673b0fdc13e7f24df2836dc4/pynuml-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c455e9df38135f6265a354f32647c8d9f93b6fafb42e516c58404a1f9e69310f",
        "md5": "60e4f8f743f29753ece685eeb54d8820",
        "sha256": "1ced0f56d1b07638634e0c7ad4fb8ac592b76f69e637671639b8e1629052351f"
      },
      "downloads": -1,
      "filename": "pynuml-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "60e4f8f743f29753ece685eeb54d8820",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 22681,
      "upload_time": "2022-11-15T19:34:36",
      "upload_time_iso_8601": "2022-11-15T19:34:36.977578Z",
      "url": "https://files.pythonhosted.org/packages/c4/55/e9df38135f6265a354f32647c8d9f93b6fafb42e516c58404a1f9e69310f/pynuml-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}