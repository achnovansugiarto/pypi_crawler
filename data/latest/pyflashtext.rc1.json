{
  "info": {
    "author": "Francesco Bartoli",
    "author_email": "xbartolone@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "=========\nFlashText\n=========\n\n.. image:: https://travis-ci.org/francbartoli/pyflashtext.svg?branch=master\n    :target: https://travis-ci.org/francbartoli/pyflashtext\n    :alt: Build Status\n\n.. image:: https://readthedocs.org/projects/pyflashtext/badge/?version=latest\n    :target: http://pyflashtext.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://badge.fury.io/py/pyflashtext.svg\n    :target: https://badge.fury.io/py/pyflashtext\n    :alt: Version\n\n.. image:: https://coveralls.io/repos/github/francbartoli/pyflashtext/badge.svg?branch=master\n    :target: https://coveralls.io/github/francbartoli/pyflashtext?branch=master\n    :alt: Test coverage\n\n.. image:: https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000\n    :target: https://github.com/francbartoli/pyflashtext/blob/master/LICENSE\n    :alt: license\n\n\nThis module can be used to replace keywords in sentences or extract keywords from sentences. It is based on the `FlashText algorithm <https://arxiv.org/abs/1711.00046>`_.\n\n\nInstallation\n------------\n::\n\n    $ pip install pyflashtext\n\n\nAPI doc\n-------\n\nDocumentation can be found at `FlashText Read the Docs\n<http://pyflashtext.readthedocs.io/>`_.\n\n\nUsage\n-----\nExtract keywords\n    >>> from pyflashtext import KeywordProcessor\n    >>> keyword_processor = KeywordProcessor()\n    >>> # keyword_processor.add_keyword(<unclean name>, <standardised name>)\n    >>> keyword_processor.add_keyword('Big Apple', 'New York')\n    >>> keyword_processor.add_keyword('Bay Area')\n    >>> keywords_found = keyword_processor.extract_keywords('I love Big Apple and Bay Area.')\n    >>> keywords_found\n    >>> # ['New York', 'Bay Area']\n\nReplace keywords\n    >>> keyword_processor.add_keyword('New Delhi', 'NCR region')\n    >>> new_sentence = keyword_processor.replace_keywords('I love Big Apple and new delhi.')\n    >>> new_sentence\n    >>> # 'I love New York and NCR region.'\n\nCase Sensitive example\n    >>> from pyflashtext import KeywordProcessor\n    >>> keyword_processor = KeywordProcessor(case_sensitive=True)\n    >>> keyword_processor.add_keyword('Big Apple', 'New York')\n    >>> keyword_processor.add_keyword('Bay Area')\n    >>> keywords_found = keyword_processor.extract_keywords('I love big Apple and Bay Area.')\n    >>> keywords_found\n    >>> # ['Bay Area']\n\nSpan of keywords extracted\n    >>> from pyflashtext import KeywordProcessor\n    >>> keyword_processor = KeywordProcessor()\n    >>> keyword_processor.add_keyword('Big Apple', 'New York')\n    >>> keyword_processor.add_keyword('Bay Area')\n    >>> keywords_found = keyword_processor.extract_keywords('I love big Apple and Bay Area.', span_info=True)\n    >>> keywords_found\n    >>> # [('New York', 7, 16), ('Bay Area', 21, 29)]\n\nGet Extra information with keywords extracted\n    >>> from pyflashtext import KeywordProcessor\n    >>> kp = KeywordProcessor()\n    >>> kp.add_keyword('Taj Mahal', ('Monument', 'Taj Mahal'))\n    >>> kp.add_keyword('Delhi', ('Location', 'Delhi'))\n    >>> kp.extract_keywords('Taj Mahal is in Delhi.')\n    >>> # [('Monument', 'Taj Mahal'), ('Location', 'Delhi')]\n    >>> # NOTE: replace_keywords feature won't work with this.\n\nNo clean name for Keywords\n    >>> from pyflashtext import KeywordProcessor\n    >>> keyword_processor = KeywordProcessor()\n    >>> keyword_processor.add_keyword('Big Apple')\n    >>> keyword_processor.add_keyword('Bay Area')\n    >>> keywords_found = keyword_processor.extract_keywords('I love big Apple and Bay Area.')\n    >>> keywords_found\n    >>> # ['Big Apple', 'Bay Area']\n\nAdd Multiple Keywords simultaneously\n    >>> from pyflashtext import KeywordProcessor\n    >>> keyword_processor = KeywordProcessor()\n    >>> keyword_dict = {\n    >>>     \"java\": [\"java_2e\", \"java programing\"],\n    >>>     \"product management\": [\"PM\", \"product manager\"]\n    >>> }\n    >>> # {'clean_name': ['list of unclean names']}\n    >>> keyword_processor.add_keywords_from_dict(keyword_dict)\n    >>> # Or add keywords from a list:\n    >>> keyword_processor.add_keywords_from_list([\"java\", \"python\"])\n    >>> keyword_processor.extract_keywords('I am a product manager for a java_2e platform')\n    >>> # output ['product management', 'java']\n\nTo Remove keywords\n    >>> from pyflashtext import KeywordProcessor\n    >>> keyword_processor = KeywordProcessor()\n    >>> keyword_dict = {\n    >>>     \"java\": [\"java_2e\", \"java programing\"],\n    >>>     \"product management\": [\"PM\", \"product manager\"]\n    >>> }\n    >>> keyword_processor.add_keywords_from_dict(keyword_dict)\n    >>> print(keyword_processor.extract_keywords('I am a product manager for a java_2e platform'))\n    >>> # output ['product management', 'java']\n    >>> keyword_processor.remove_keyword('java_2e')\n    >>> # you can also remove keywords from a list/ dictionary\n    >>> keyword_processor.remove_keywords_from_dict({\"product management\": [\"PM\"]})\n    >>> keyword_processor.remove_keywords_from_list([\"java programing\"])\n    >>> keyword_processor.extract_keywords('I am a product manager for a java_2e platform')\n    >>> # output ['product management']\n\nTo check Number of terms in KeywordProcessor\n    >>> from pyflashtext import KeywordProcessor\n    >>> keyword_processor = KeywordProcessor()\n    >>> keyword_dict = {\n    >>>     \"java\": [\"java_2e\", \"java programing\"],\n    >>>     \"product management\": [\"PM\", \"product manager\"]\n    >>> }\n    >>> keyword_processor.add_keywords_from_dict(keyword_dict)\n    >>> print(len(keyword_processor))\n    >>> # output 4\n\nTo check if term is present in KeywordProcessor\n    >>> from pyflashtext import KeywordProcessor\n    >>> keyword_processor = KeywordProcessor()\n    >>> keyword_processor.add_keyword('j2ee', 'Java')\n    >>> 'j2ee' in keyword_processor\n    >>> # output: True\n    >>> keyword_processor.get_keyword('j2ee')\n    >>> # output: Java\n    >>> keyword_processor['colour'] = 'color'\n    >>> keyword_processor['colour']\n    >>> # output: color\n\nGet all keywords in dictionary\n    >>> from pyflashtext import KeywordProcessor\n    >>> keyword_processor = KeywordProcessor()\n    >>> keyword_processor.add_keyword('j2ee', 'Java')\n    >>> keyword_processor.add_keyword('colour', 'color')\n    >>> keyword_processor.get_all_keywords()\n    >>> # output: {'colour': 'color', 'j2ee': 'Java'}\n\nFor detecting Word Boundary currently any character other than this `\\\\w` `[A-Za-z0-9_]` is considered a word boundary.\n\nTo set or add characters as part of word characters\n    >>> from pyflashtext import KeywordProcessor\n    >>> keyword_processor = KeywordProcessor()\n    >>> keyword_processor.add_keyword('Big Apple')\n    >>> print(keyword_processor.extract_keywords('I love Big Apple/Bay Area.'))\n    >>> # ['Big Apple']\n    >>> keyword_processor.add_non_word_boundary('/')\n    >>> print(keyword_processor.extract_keywords('I love Big Apple/Bay Area.'))\n    >>> # []\n\n\nTest\n----\n::\n\n    $ git clone https://github.com/francbartoli/pyflashtext\n    $ cd pyflashtext\n    $ pip install pytest\n    $ python setup.py test\n\n\nBuild Docs\n----------\n::\n\n    $ git clone https://github.com/francbartoli/pyflashtext\n    $ cd pyflashtext/docs\n    $ pip install sphinx\n    $ make html\n    $ # open _build/html/index.html in browser to view it locally\n\n\nWhy not Regex?\n--------------\n\nIt's a custom algorithm based on `Aho-Corasick algorithm\n<https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_algorithm>`_ and `Trie Dictionary\n<https://en.wikipedia.org/wiki/Trie Dictionary>`_.\n\n.. image:: https://github.com/francbartoli/pyflashtext/raw/master/benchmark.png\n    :target: https://twitter.com/RadimRehurek/status/904989624589803520\n    :alt: Benchmark\n\n\nTime taken by FlashText to find terms in comparison to Regex.\n\n.. image:: https://thepracticaldev.s3.amazonaws.com/i/xruf50n6z1r37ti8rd89.png\n\n\nTime taken by FlashText to replace terms in comparison to Regex.\n\n.. image:: https://thepracticaldev.s3.amazonaws.com/i/k44ghwp8o712dm58debj.png\n\nLink to code for benchmarking the `Find Feature <https://gist.github.com/francbartoli/604eefd92866d081cfa19f862224e4a0>`_ and `Replace Feature <https://gist.github.com/francbartoli/dc3335ee46ab9f650b19885e8ade6c7a>`_.\n\nThe idea for this library came from the following `StackOverflow question\n<https://stackoverflow.com/questions/44178449/regex-replace-is-taking-time-for-millions-of-documents-how-to-make-it-faster>`_.\n\n\nCitation\n----------\n\nThe original paper published on `FlashText algorithm <https://arxiv.org/abs/1711.00046>`_.\n\n::\n\n    @ARTICLE{2017arXiv171100046S,\n       author = {{Singh}, V.},\n        title = \"{Replace or Retrieve Keywords In Documents at Scale}\",\n      journal = {ArXiv e-prints},\n    archivePrefix = \"arXiv\",\n       eprint = {1711.00046},\n     primaryClass = \"cs.DS\",\n     keywords = {Computer Science - Data Structures and Algorithms},\n         year = 2017,\n        month = oct,\n       adsurl = {http://adsabs.harvard.edu/abs/2017arXiv171100046S},\n      adsnote = {Provided by the SAO/NASA Astrophysics Data System}\n    }\n\nThe article published on `Medium freeCodeCamp <https://medium.freecodecamp.org/regex-was-taking-5-days-pyflashtext-does-it-in-15-minutes-55f04411025f>`_.\n\n\nContribute\n----------\n\n- Issue Tracker: https://github.com/francbartoli/pyflashtext/issues\n- Source Code: https://github.com/francbartoli/pyflashtext/\n\n\nLicense\n-------\n\nThe project is licensed under the MIT license.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/francbartoli/pyflashtext",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyflashtext",
    "package_url": "https://pypi.org/project/pyflashtext/",
    "platform": "any",
    "project_url": "https://pypi.org/project/pyflashtext/",
    "project_urls": {
      "Homepage": "http://github.com/francbartoli/pyflashtext"
    },
    "release_url": "https://pypi.org/project/pyflashtext/2.7.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Extract/Replaces keywords in sentences.",
    "version": "2.7.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10009030,
  "releases": {
    "2.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "016f50ececf10d26afdae825d160496844eac59fa3300c4cf0bbaa17f6e0f8ba",
          "md5": "41492038c822cd40f4991c9efd898444",
          "sha256": "b810b99a51179367b702d6262824e96e4a7c25e8bd488089c15899a01856267d"
        },
        "downloads": -1,
        "filename": "pyflashtext-2.7.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41492038c822cd40f4991c9efd898444",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 10565,
        "upload_time": "2021-04-08T14:16:34",
        "upload_time_iso_8601": "2021-04-08T14:16:34.962816Z",
        "url": "https://files.pythonhosted.org/packages/01/6f/50ececf10d26afdae825d160496844eac59fa3300c4cf0bbaa17f6e0f8ba/pyflashtext-2.7.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d819d7e31df46d6ba2a06cddd1868cc62e06684bdf9e49c373fbe23f22dd80b",
          "md5": "faea21a1a3cffb455ec2b61c79456c92",
          "sha256": "a5c19b11f4d17c524e66a273635b7858b581b23ce7478030965d6a3facf4be50"
        },
        "downloads": -1,
        "filename": "pyflashtext-2.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "faea21a1a3cffb455ec2b61c79456c92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18015,
        "upload_time": "2021-04-08T14:16:36",
        "upload_time_iso_8601": "2021-04-08T14:16:36.625882Z",
        "url": "https://files.pythonhosted.org/packages/7d/81/9d7e31df46d6ba2a06cddd1868cc62e06684bdf9e49c373fbe23f22dd80b/pyflashtext-2.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "016f50ececf10d26afdae825d160496844eac59fa3300c4cf0bbaa17f6e0f8ba",
        "md5": "41492038c822cd40f4991c9efd898444",
        "sha256": "b810b99a51179367b702d6262824e96e4a7c25e8bd488089c15899a01856267d"
      },
      "downloads": -1,
      "filename": "pyflashtext-2.7.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "41492038c822cd40f4991c9efd898444",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 10565,
      "upload_time": "2021-04-08T14:16:34",
      "upload_time_iso_8601": "2021-04-08T14:16:34.962816Z",
      "url": "https://files.pythonhosted.org/packages/01/6f/50ececf10d26afdae825d160496844eac59fa3300c4cf0bbaa17f6e0f8ba/pyflashtext-2.7.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d819d7e31df46d6ba2a06cddd1868cc62e06684bdf9e49c373fbe23f22dd80b",
        "md5": "faea21a1a3cffb455ec2b61c79456c92",
        "sha256": "a5c19b11f4d17c524e66a273635b7858b581b23ce7478030965d6a3facf4be50"
      },
      "downloads": -1,
      "filename": "pyflashtext-2.7.1.tar.gz",
      "has_sig": false,
      "md5_digest": "faea21a1a3cffb455ec2b61c79456c92",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18015,
      "upload_time": "2021-04-08T14:16:36",
      "upload_time_iso_8601": "2021-04-08T14:16:36.625882Z",
      "url": "https://files.pythonhosted.org/packages/7d/81/9d7e31df46d6ba2a06cddd1868cc62e06684bdf9e49c373fbe23f22dd80b/pyflashtext-2.7.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}