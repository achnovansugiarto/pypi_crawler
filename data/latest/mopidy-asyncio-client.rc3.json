{
  "info": {
    "author": "Stephan Helma",
    "author_email": "s.p.helma@gmx.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: No Input/Output (Daemon)",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Multimedia :: Sound/Audio :: Players"
    ],
    "description": "# mopidy-asyncio-client\n\nAsync Mopidy client using JSON/RPC Websocket interface.\n\n`mopidy_async_client.MopidyClient()` generates a Python interface\nwhich maps the [Mopidy core API](https://docs.mopidy.com/en/latest/api/core/)\nmethods and events. For the connection it uses the\n[websocket_client](https://pypi.org/project/websocket-client/) package.\nThe major version of `mopidy-asyncio-client` follows the major\nMopidy version number, so `mopidy-asyncio-client v3.y.z` supports\nAPI version 3.x.\n\nBy default, the client tries to connect for a couple of times, if the\nwebsocket connection is lost (the default is 5 times). However this can be\nconfigured and also set to try forever.\n\nCallback functions can be bound to all events sent by Mopidy.\n\nForked from\n- [mopidy-async-client](https://github.com/SvineruS/mopidy-async-client)\n- [mopidy-json-client](https://github.com/ismailof/mopidy-json-client)\n\n\n## Usage\n\n`mopidy-asyncio-client` provides the main class `MopidyClient`,\nwhich manages the connection to and communication with a remote (or local)\nMopidy server. Use the `bind()` method to subscribe to Mopidy events:\n\n```python3\nimport asyncio\nimport logging\n\nfrom mopidy_asyncio_client import MopidyClient\n\n\nlogging.basicConfig()\nlogging.getLogger('mopidy_asyncio_client').setLevel(logging.DEBUG)\n\n\nasync def playback_started_handler(data):\n    \"\"\"Callback function, called when the playback started.\"\"\"\n    print(data)\n\n\nasync def all_events_handler(event, data):\n    \"\"\"Callback function; catch-all function.\"\"\"\n    print(event, data)\n\n\nasync def main_context_manager():\n\n    async with MopidyClient(host='some_ip') as mopidy:\n\n        mopidy.bind('track_playback_started', playback_started_handler)\n        mopidy.bind('*', all_events_handler)\n\n        # Your program's logic:\n        await mopidy.playback.play()\n        while True:\n            await asyncio.sleep(1)\n\n\nasync def main_plain():\n\n    mopidy = await MopidyClient().connect()\n\n    mopidy.bind('track_playback_started', playback_started_handler)\n    mopidy.bind('*', all_events_handler)\n\n    # Your program's logic:\n    await mopidy.playback.play()\n    while True:\n        await asyncio.sleep(1)\n\n    await mopidy.disconnect()  # close connection implicit\n\n\n# Either ...\nasyncio.run(main_context_manager())\n# ... or\nasyncio.run(main_plain())\n```\n\n\n### Parse results\n\nYou can specify `parse_results=True` as a parameter to `MopidyClient()` and\nget Mopidy objects instead of JSON dictionaries returned. To get this to work,\nyou need to install `mopidy` locally, so that `mopidy.models` can be imported.\n\n```python3\n>>> async with MopidyClient() as mopidy:\n...     res = await mopidy.tracklist.get_tracks()\n...     print(res)\n\n[{'__model__': 'Track',\n  'uri': 'file:///home/xxx/Music/audio.ogg',\n  'name': 'audio.ogg',\n  'date': '2021-01-01',\n  'length': 123456}]\n\n>>> async with MopidyClient(parse_results=True) as mopidy:\n...     res = await mopidy.tracklist.get_tracks()\n...     print(res)\n\n[Track(\n    date='2021-01-01',\n    length=123456,\n    name='audio.ogg',\n    uri='file:///home/xxx/Music/audio.ogg')]\n```\n\n\n## Installation\n\n`pip install mopidy-asyncio-client`\n\nand for upgrading an existing installation:\n\n`pip install --upgrade mopidy-asyncio-client`\n\n\n## Change from `mopidy-async-client` to `mopidy-asyncio-client`\n\nHere are the most important changes to help you upgrading from\n`mopidy-async-client`. A list with all changes can be found in\n[CHANGES.md](CHANGES.md).\n\n### Incompatible changes\n\nIf you upgrade from `mopidy-async-client`, please watch out for these\nincompatible changes:\n- The package name changed to `mopidy-asyncio-client`, so the import\n  statements have to be updated.\n- `mopidy-async-client.MopidyClient()` is called with a `url` parameter.\n  This parameter is replaced by the new keyword arguments\n  `hostname='localhost'` and `port=6680`. The uri is then built automatically.\n- `mopidy-async-client.MopidyClient` has a `listener` property. This property\n  was renamed to the (more appropriate) `eventhandler` property, but at the\n  same time `MopidyClient` has gained the following three methods to deal with\n  callback functions:\n    - `bind()`\n    - `unbind()`\n    - `clear()`\n\n  These have the same signatures as the old methods. To update simply replace\n  `MopidyClient().listener.bind|unbind|clear` with\n  `MopidyClient().bind|unbind|clear`.\n- Deprecated method arguments or methods now raise a `DeprecationWarning`. The\n  following functions are effected:\n    - `TracklistController.add(tracks)`: Use the `uris` parameter.\n    - `TracklistController.eot_track()`: Use the `get_eot_tlid()` method.\n    - `TracklistController.next_track()`: Use the `get_next_tlid()` method.\n    - `TracklistController.previous_track()`: Use the `get_previous_track()`\n      method.\n    - `PlaybackController.play(tl_track)`: Use the `tlid` parameter.\n- `MopidyListener` was renamed to (the more appropriate) `MopidyEventHandler`.\n  But since it is not exposed, you should not notice it.\n\n### Important changes\n\n- `MopidyClient()` now understands the `reconnect_attempts=None` keyword\n  parameter; this results in infinite connection attempts.\n- The major version number of `mopidy-asyncio-client` follows the major\n  version number of Mopidy.\n\n### Bugs fixed\n\n- `MopidyListener.clear()` did not reset the `bindings` property to\n  `collections.defaultdict(list)`, but to `{}`. Fixed.\n- When `ResponseMessage` parsed a JSON/RPC message, it did not check, if\n  the parameter `on_msg_result` (property `_on_result`) is set. Fixed.\n- Use module `logger` instead of `logging` (3 stray occurrences) throughout.\n- Downgrade timeout errors, if a request is not answered in time. (It used to\n  log an exception.)\n\n## Project resources\n\n- PyPi: https://pypi.org/project/mopidy-asyncio-client\n- Source code: https://codeberg.org/sph/mopidy-asyncio-client\n- Issue tracker: https://codeberg.org/sph/mopidy-asyncio-client/issues\n\n\n## References\n\n- [Mopidy Core API](https://mopidy.readthedocs.org/en/latest/api/core)\n- [websocket_client](https://github.com/liris/websocket_client)\n- [mopidy-json-client](https://github.com/ismailof/mopidy-json-client)\n- [mopidy-async-client](https://github.com/SvineruS/mopidy-async-client)\n\n\n## Copyright of this file\n\nCopyright (C) 2016,2017  Ismael Asensio (ismailof@github.com)<br/>\nCopyright (C) 2020  svinerus (svinerus@gmail.com)<br/>\nCopyright (C) 2021  Stephan Helma\n\nThis file is part of mopidy-asyncio-client.\n\nmopidy-asyncio-client is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 2 of the License, or\n(at your option) any later version.\n\nmopidy-asyncio-client is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with mopidy-asyncio-client. If not, see <https://www.gnu.org/licenses/>.\n\n\n#### Reasons for this fork\n\nI needed unlimited connection attemps for\n[mopidris](https://codeberg.org/sph/mopidris), a gateway between the\n[MPRIS D-Bus Interface Specification](https://specifications.freedesktop.org/mpris-spec/latest/)\nand a remotely (or locally) running Mopidy instance. `mopidy-async-client` is\nlimited to a set number of connection attempts, after which it bails out, so I\nmade a [pull request](https://github.com/SvineruS/mopidy-async-client/pull/1)\nagainst it, which uses a traditional `while:` loop to get infinite connection\nattempts. Unfortunately this was declined by the author with the argument,\nthat a `while:` loop does not look nice and that he does not like `while:`\nloops. Instead the [author](https://github.com/SvineruS) decided to set the\nmaximum number of attempts to `sys.maxsize`. True, this is as close to\ninfinite as we can get, but why has Guido given us a `while:` loop, if we\ndo not use it? (And frankly, this attitude reminds me remarkably to the\nnonchalant approach leading to the infamous\n[Y2K bug](https://en.wikipedia.org/wiki/Year_2000_problem).) BTW for this\napproach the code needs not be changed, because it was already possible to\ngive a maximum number of attempts to connect.\n\nSince there were other issues, I was not too happy with (see\n[CHANGES.md](CHANGES.md)), I bit the bullet, took the plunge and forked\nit. I am not too happy about it, because I believe that there are already too\nmany (dead) forks of modules with very similar functionality around. I would\nbe happy, if these two forks will be combined in the future.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://codeberg.org/sph/mopidy-asyncio-client",
    "keywords": "",
    "license": "GNU General Public License, Version 2 or later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mopidy-asyncio-client",
    "package_url": "https://pypi.org/project/mopidy-asyncio-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/mopidy-asyncio-client/",
    "project_urls": {
      "Bug Tracker": "https://codeberg.org/sph/mopidy-asyncio-client/issues",
      "Homepage": "https://codeberg.org/sph/mopidy-asyncio-client"
    },
    "release_url": "https://pypi.org/project/mopidy-asyncio-client/3.1.0/",
    "requires_dist": [
      "websockets",
      "setuptools",
      "twine ; extra == 'dev'",
      "wheel ; extra == 'dev'",
      "twine ; extra == 'release'",
      "wheel ; extra == 'release'"
    ],
    "requires_python": ">=3.6",
    "summary": "Async Mopidy client using JSON/RPC Websocket interface",
    "version": "3.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11071870,
  "releases": {
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b00199cc973d13ed268b113148b98b5e283dfc2c21ebb62e129d5a24b13d8d93",
          "md5": "a181c32abc32c3857d0f9b46d66ae53d",
          "sha256": "f01caad0004eab9776da73749fad2c684626b7f5df556090ca17b11a40824610"
        },
        "downloads": -1,
        "filename": "mopidy_asyncio_client-3.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a181c32abc32c3857d0f9b46d66ae53d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31530,
        "upload_time": "2021-04-28T13:21:44",
        "upload_time_iso_8601": "2021-04-28T13:21:44.550760Z",
        "url": "https://files.pythonhosted.org/packages/b0/01/99cc973d13ed268b113148b98b5e283dfc2c21ebb62e129d5a24b13d8d93/mopidy_asyncio_client-3.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fe0163ee624c59e24273215c487de091515391c2651d734e7d7ae4f1bbc2718",
          "md5": "ac033a59e55982e8693440628c6434dc",
          "sha256": "a9912b884b10fe31aa8721e4f9f7e5a878713122d4f1fc700b636efb70a4dec3"
        },
        "downloads": -1,
        "filename": "mopidy-asyncio-client-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ac033a59e55982e8693440628c6434dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32679,
        "upload_time": "2021-04-28T13:21:46",
        "upload_time_iso_8601": "2021-04-28T13:21:46.684734Z",
        "url": "https://files.pythonhosted.org/packages/2f/e0/163ee624c59e24273215c487de091515391c2651d734e7d7ae4f1bbc2718/mopidy-asyncio-client-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f00d16abb25cf562a159ab6179b5a608c50e8b7795e312f630bd113adda36ac8",
          "md5": "095b0b07e9fd5fa2e04f888b8d96d66b",
          "sha256": "fd32f4ff0fb8622ca85a2bb771b11c527f2dee8226d73c5d7e90c9b936bac6a4"
        },
        "downloads": -1,
        "filename": "mopidy_asyncio_client-3.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "095b0b07e9fd5fa2e04f888b8d96d66b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31609,
        "upload_time": "2021-07-26T13:42:33",
        "upload_time_iso_8601": "2021-07-26T13:42:33.788915Z",
        "url": "https://files.pythonhosted.org/packages/f0/0d/16abb25cf562a159ab6179b5a608c50e8b7795e312f630bd113adda36ac8/mopidy_asyncio_client-3.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fb5f03495ed739e285614fc753b878fa0fd3bb137b5be31ab4a0cc56df7ef2f",
          "md5": "d0ec27add97298b170ae9b4ffcd1e5b3",
          "sha256": "7269b75b0a5aa20b631a4fcad8edf8d4b44eb4485dec0c6bf93ff15917194df4"
        },
        "downloads": -1,
        "filename": "mopidy-asyncio-client-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d0ec27add97298b170ae9b4ffcd1e5b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31961,
        "upload_time": "2021-07-26T13:42:35",
        "upload_time_iso_8601": "2021-07-26T13:42:35.562782Z",
        "url": "https://files.pythonhosted.org/packages/8f/b5/f03495ed739e285614fc753b878fa0fd3bb137b5be31ab4a0cc56df7ef2f/mopidy-asyncio-client-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b912f7f4d2d2053e0e6f05ffa99031388fc117ff3c464a82fbd7cabdaebd1bee",
          "md5": "de821420dc19e339a4f0a68017f20e7e",
          "sha256": "37e8dcabcc7293ab36de265e522d3e481d0f3dc2a1683ba38899021f5a58a898"
        },
        "downloads": -1,
        "filename": "mopidy_asyncio_client-3.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de821420dc19e339a4f0a68017f20e7e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 26242,
        "upload_time": "2021-08-02T19:04:53",
        "upload_time_iso_8601": "2021-08-02T19:04:53.996143Z",
        "url": "https://files.pythonhosted.org/packages/b9/12/f7f4d2d2053e0e6f05ffa99031388fc117ff3c464a82fbd7cabdaebd1bee/mopidy_asyncio_client-3.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "677b53fc996e7e64536de82377af348f5b34a39230fa1661bc420902bed01ce0",
          "md5": "46cb23d926dec7673cd94c9dbb474fbf",
          "sha256": "a8b649b1be5683806b987f4534e2a7f64e760af198be688516a775a2266730bd"
        },
        "downloads": -1,
        "filename": "mopidy-asyncio-client-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "46cb23d926dec7673cd94c9dbb474fbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26498,
        "upload_time": "2021-08-02T19:04:55",
        "upload_time_iso_8601": "2021-08-02T19:04:55.456624Z",
        "url": "https://files.pythonhosted.org/packages/67/7b/53fc996e7e64536de82377af348f5b34a39230fa1661bc420902bed01ce0/mopidy-asyncio-client-3.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b912f7f4d2d2053e0e6f05ffa99031388fc117ff3c464a82fbd7cabdaebd1bee",
        "md5": "de821420dc19e339a4f0a68017f20e7e",
        "sha256": "37e8dcabcc7293ab36de265e522d3e481d0f3dc2a1683ba38899021f5a58a898"
      },
      "downloads": -1,
      "filename": "mopidy_asyncio_client-3.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "de821420dc19e339a4f0a68017f20e7e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 26242,
      "upload_time": "2021-08-02T19:04:53",
      "upload_time_iso_8601": "2021-08-02T19:04:53.996143Z",
      "url": "https://files.pythonhosted.org/packages/b9/12/f7f4d2d2053e0e6f05ffa99031388fc117ff3c464a82fbd7cabdaebd1bee/mopidy_asyncio_client-3.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "677b53fc996e7e64536de82377af348f5b34a39230fa1661bc420902bed01ce0",
        "md5": "46cb23d926dec7673cd94c9dbb474fbf",
        "sha256": "a8b649b1be5683806b987f4534e2a7f64e760af198be688516a775a2266730bd"
      },
      "downloads": -1,
      "filename": "mopidy-asyncio-client-3.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "46cb23d926dec7673cd94c9dbb474fbf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 26498,
      "upload_time": "2021-08-02T19:04:55",
      "upload_time_iso_8601": "2021-08-02T19:04:55.456624Z",
      "url": "https://files.pythonhosted.org/packages/67/7b/53fc996e7e64536de82377af348f5b34a39230fa1661bc420902bed01ce0/mopidy-asyncio-client-3.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}