{
  "info": {
    "author": "Gaurav Sood, Suriyan Laohaprapanon, Rajashekar Chintalapati",
    "author_email": "gsood07@gmail.com, suriyant@gmail.com, rajshekar.ch@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "naampy: Infer Sociodemographic Characteristics from Indian Names\n----------------------------------------------------------------\n\n.. image:: https://travis-ci.org/appeler/naampy.svg?branch=master\n    :target: https://travis-ci.org/appeler/naampy\n.. image:: https://ci.appveyor.com/api/projects/status/q4wr4clilf4samlk?svg=true\n    :target: https://ci.appveyor.com/project/soodoku/naampy\n.. image:: https://img.shields.io/pypi/v/naampy.svg\n    :target: https://pypi.python.org/pypi/naampy\n.. image:: https://pepy.tech/badge/naampy\n    :target: https://pepy.tech/project/naampy\n\n\nThe ability to programmatically reliably infer the social attributes of a person from their name can be useful for a broad set of tasks, from estimating bias in coverage of women in the media to estimating bias in lending against certain social groups. But unlike the American Census Bureau, which produces a list of last names and first names, which can (and are) used to infer the gender, race, ethnicity, etc., from names, the Indian government produces no such commensurate datasets. And hence inferring the relationship between gender, ethnicity, language group, etc., and names have generally been done with small datasets constructed in an ad-hoc manner.\n\nWe fill this yawning gap. Using data from the `Indian Electoral Rolls <https://github.com/in-rolls/electoral_rolls>`__ (parsed data `here <https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/MUEGDT>`__), we estimate the proportion female, male, and `third sex` (see `here <https://en.wikipedia.org/wiki/Third_gender>`__) for a particular `first name, year, and state.`\n\nData\n~~~~\n\nIn all, we capitalize on information in the parsed electoral rolls from the following 31 states and union territories: \n\n.. list-table:: States\n   :widths: 30 30 30 30\n    \n   * - Andaman\n     - Delhi\n     - Kerala\n     - Puducherry\n   \n   *  - Andhra Pradesh\n      - Goa\n      - Madhya Pradesh\n      - Punjab\n   *  - Arunachal Pradesh\n      - Gujarat\n      - Maharashtra\n      - Rajasthan \n   *  - Assam\n      - Haryana\n      - Manipur\n      - Sikkim\n   *  - Bihar\n      - Himachal Pradesh\n      - Meghalaya\n      - Tripura \n   *  - Chandigarh\n      - Jammu and Kashmir\n      - Mizoram\n      - Uttar Pradesh   \n   *   - Dadra\n       - Jharkhand\n       - Nagaland\n       - Uttarakhand\n   *  -  Daman\n      - Karnataka\n      - Odisha\n      - \n  \nHow is the underlying data produced?\n====================================\n\nWe split the name into first name and last name (see the python notebook for how we do this) and then aggregate per state and first_name, and tabulate `prop_male, prop_female, prop_third_gender, n_female, n_male, n_third_gender`. We produce native language rolls and english transliterations. (We use `indicate <https://github.com/in-rolls/indicate>`__ to produce transliterations for hindi rolls.)\n\nThis is used to provide the base prediction.\n\nGiven the association between prop_female and first_name may change over time, we exploited the age. Given the data were collected in 2017, we calculated the year each person was born and then did a group by year to create `prop_male, prop_female, prop_third_gender, n_female, n_male, n_third_gender`\n\nIssues with underlying data\n==============================\n\nConcerns:\n\n* Voting registration lists may not be accurate, systematically underrepresenting poor people, minorities, and similar such groups.\n\n* Voting registration lists are, at best, a census of adult citizens. But to the extent there is prejudice against women, etc., that prevents them from reaching adulthood, the data bakes those biases in.\n\n* Indian names are complicated. We do not have good parsers for them yet. We have gone for the default arrangement. Please go through the notebook to look at the judgments we make. We plan to improve the underlying data over time.\n\n* For state electoral rolls that are neither in English and Hindi, we use libindic. The quality of transliterations is consistently bad.\n\nGender Classifier\n~~~~~~~~~~~~~~~~~\n\nWe start by providing a base model for first\\_name that gives the Bayes\noptimal solution---the proportion of people with that name who\nare women. We also provide a series of base models where the state of\nresidence and year of birth is known.\n\nIf the name does not exist in the database, we use `ML model <https://github.com/appeler/naampy/blob/master/naampy/data/ml_model/02_training_model.ipynb>`__ that uses the relationship between\nsequences of characters in the first name and gender to predict gender from the name.\n\nThe model was trained as a regression problem instead of a classification problem because men and women share names. (See the histogram below for the female proportion for the dataset.) The model predicts \nthe female proportion of the name. If it is less than 0.5, we classify it as male; otherwise, we classify it as female.\n\n.. figure:: images/female_prop.png\n   :width: 400px\n   :height: 250px\n   :alt: Female proportion\n   :align: center\n\n**Test data**\n\nMSE no weights - loss: .05, metric: 0.05\n\nRMSE no weights - loss: 0.22, metric: 0.22\n\n**Test data with weights**\n\nMSE with weights - loss: 0.05, metric: 0.04\n\nRMSE with weights - loss: 0.22, metric: 0.22\n\nBelow are the inference results using different models.\n\n.. figure:: images/infer_oos.png\n   :alt: Inference on different models\n   :align: center\n\nInstallation\n~~~~~~~~~~~~~~\n\nWe strongly recommend installing `naampy` inside a Python virtual environment (see `venv documentation <https://docs.python.org/3/library/venv.html#creating-virtual-environments>`__)\n\n::\n\n    pip install naampy\n\n\nUsage\n~~~~~\n\n::\n\n    usage: in_rolls_fn_gender [-h] -f FIRST_NAME\n                            [-s {andaman,andhra,arunachal,assam,bihar,chandigarh,dadra,daman,delhi,goa,gujarat,haryana,himachal,jharkhand,jk,karnataka,kerala,maharashtra,manipur,meghalaya,mizoram,mp,nagaland,odisha,puducherry,punjab,rajasthan,sikkim,tripura,up,uttarakhand}]\n                            [-y YEAR] [-o OUTPUT]\n                            input\n  \n    Appends Electoral roll columns for prop_female, n_female, n_male\n    n_third_gender by first name\n\n    positional arguments:\n    input                 Input file\n\n    optional arguments:\n    -h, --help            show this help message and exit\n    -f FIRST_NAME, --first-name FIRST_NAME\n                            Name or index location of column contains the first\n                            name\n    -s {andaman,andhra,arunachal,assam,bihar,chandigarh,dadra,daman,delhi,goa,gujarat,haryana,himachal,jharkhand,jk,karnataka,kerala,maharashtra,manipur,meghalaya,mizoram,mp,nagaland,odisha,puducherry,punjab,rajasthan,sikkim,tripura,up,uttarakhand},\n    --state {andaman,andhra,arunachal,assam,bihar,chandigarh,dadra,daman,delhi,goa,gujarat,haryana,himachal,jharkhand,jk,karnataka,kerala,maharashtra,manipur,meghalaya,mizoram,mp,nagaland,odisha,puducherry,punjab,rajasthan,sikkim,tripura,up,uttarakhand}\n                            State name of Indian electoral rolls data\n                            (default=all)\n    -y YEAR, --year YEAR  Birth year in Indian electoral rolls data\n                            (default=all)\n    -o OUTPUT, --output OUTPUT\n                            Output file with Indian electoral rolls data columns\n\n        choices=[\"v1\", \"v2\", \"v2_1k\", \"v2_native\", \"v2_en\"],\n\n\nUsing naampy\n~~~~~~~~~~~~\n\n::\n\n    >>> import pandas as pd\n    >>> from naampy import in_rolls_fn_gender\n\n    >>> names = [{'name': 'gaurav'},\n                 {'name': 'nabha'},\n                 {'name': 'yasmin'},\n                 {'name': 'deepti'},\n                 {'name': 'hrithik'},\n                 {'name': 'vivek'}]\n\n\n    >>> df = pd.DataFrame(names)\n\n    >>> in_rolls_fn_gender(df, 'name')\n                name    n_male  n_female  n_third_gender  prop_female  prop_male  prop_third_gender pred_gender  pred_prob\n        0   gaurav   25625.0      47.0             0.0     0.001831   0.998169                0.0         NaN        NaN\n        1    nabha       NaN       NaN             NaN          NaN        NaN                NaN      female   0.755028\n        2   yasmin      58.0    6079.0             0.0     0.990549   0.009451                0.0         NaN        NaN\n        3   deepti      35.0    5784.0             0.0     0.993985   0.006015                0.0         NaN        NaN\n        4  hrithik       NaN       NaN             NaN          NaN        NaN                NaN        male   0.922181\n        5    vivek  233622.0    1655.0             0.0     0.007034   0.992966                0.0         NaN        NaN\n    \n    >>> help(in_rolls_fn_gender)\n    Help on method in_rolls_fn_gender in module naampy.in_rolls_fn:\n\n    in_rolls_fn_gender(df, namecol, state=None, year=None) method of builtins.type instance\n        Appends additional columns from Female ratio data to the input DataFrame\n        based on the first name.\n\n        Removes extra space. Checks if the name is the Indian electoral rolls data.\n        If it is, outputs data from that row.\n\n        Args:\n            df (:obj:`DataFrame`): Pandas DataFrame containing the first name\n                column.\n            namecol (str or int): Column's name or location of the name in\n                DataFrame.\n            state (str): The state name of Indian electoral rolls data to be used.\n                (default is None for all states)\n            year (int): The year of Indian electoral rolls to be used.\n                (default is None for all years)\n\n        Returns:\n            DataFrame: Pandas DataFrame with additional columns:-\n                'n_female', 'n_male', 'n_third_gender',\n                'prop_female', 'prop_male', 'prop_third_gender' by first name\n\n    # If you want to use model prediction use `predict_fn_gender` like below\n    from naampy import predict_fn_gender\n    input = [\n         \"rajinikanth\",\n         \"harvin\",\n         \"Shyamsingha\",\n         \"srihan\",\n         \"thammam\",\n         \"bahubali\",\n         \"rajarajeshwari\",\n         \"shobby\",\n         \"tamannaah bhatia\",\n         \"mehreen\",\n         \"kiara\",\n         \"shivathmika\",\n         \"komalee\",\n         \"nazriya\",\n         \"nabha\",\n         \"taapsee\",\n         \"parineeti\",\n         \"katrina\",\n         \"ileana\",\n         \"vishwaksen\",\n         \"sampoornesh\",\n         \"hrithik\",\n         \"emraan\",\n         \"rajkummar\",\n         \"sharman\",\n         \"ayushmann\",\n         \"irrfan\",\n         \"riteish\"\n    ]\n    print(predict_fn_gender(input))\n\n                        name pred_gender  pred_prob\n    0        rajinikanth        male   0.994747\n    1             harvin        male   0.840713\n    2        shyamsingha        male   0.956903\n    3             srihan        male   0.825542\n    4            thammam      female   0.564286\n    5           bahubali        male   0.901159\n    6     rajarajeshwari      female   0.942478\n    7             shobby        male   0.788314\n    8   tamannaah bhatia      female   0.971478\n    9            mehreen      female   0.659633\n    10             kiara      female   0.614125\n    11       shivathmika      female   0.743240\n    12           komalee      female   0.901051\n    13           nazriya      female   0.854167\n    14             nabha      female   0.755028\n    15           taapsee      female   0.665176\n    16         parineeti      female   0.813237\n    17           katrina      female   0.630126\n    18            ileana      female   0.640331\n    19        vishwaksen        male   0.992237\n    20       sampoornesh        male   0.940307\n    21           hrithik        male   0.922181\n    22            emraan        male   0.795963\n    23         rajkummar        male   0.845139\n    24           sharman        male   0.858538\n    25         ayushmann        male   0.964895\n    26            irrfan        male   0.837053\n    27           riteish        male   0.950755\n\nFunctionality\n~~~~~~~~~~~~~\n\nWhen you first run `in_rolls_fn_gender`, it downloads data from `Harvard Dataverse <https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/WZGJBM>`__ to the local folder. Next time you run the function, it searches for local data and if it finds it, it uses it.\nUse `predict_fn_gender` to get gender predictions based on first name.\n\nAuthors\n~~~~~~~\n\nSuriyan Laohaprapanon, Gaurav Sood, and Rajashekar Chintalapati\n\nLicense\n~~~~~~~\n\nThe package is released under the `MIT\nLicense <https://opensource.org/licenses/MIT>`__.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/appeler/naampy",
    "keywords": "gender names",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "naampy",
    "package_url": "https://pypi.org/project/naampy/",
    "platform": null,
    "project_url": "https://pypi.org/project/naampy/",
    "project_urls": {
      "Homepage": "https://github.com/appeler/naampy"
    },
    "release_url": "https://pypi.org/project/naampy/0.5.0/",
    "requires_dist": [
      "pandas (>=0.19.2)",
      "tensorflow (==2.8.*)",
      "requests",
      "tqdm",
      "check-manifest ; extra == 'dev'",
      "coverage ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Infer Gender from Indian Names",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15144971,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5d716b2f770a6061d3987d9a10f7278008b30be449569c3d83b03584b444776",
          "md5": "f81c182abe57be6afb46e2d05383c7ba",
          "sha256": "e6ff410071cfaf678bdb0791c8d597de706f09b1943e7c5035e60b2f232cefcc"
        },
        "downloads": -1,
        "filename": "naampy-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f81c182abe57be6afb46e2d05383c7ba",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9148267,
        "upload_time": "2020-01-30T08:23:46",
        "upload_time_iso_8601": "2020-01-30T08:23:46.376484Z",
        "url": "https://files.pythonhosted.org/packages/e5/d7/16b2f770a6061d3987d9a10f7278008b30be449569c3d83b03584b444776/naampy-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7dcdbb068a9e951785de0fb64c5d4054ff798908f3c2e74e0509bbacb15b21bd",
          "md5": "8bbaac10a7bd0731b95825fe1ae58ed0",
          "sha256": "7e81141752e76b9c6077ad538a1c6be31ec32acab805a955b92fa023cc5956c1"
        },
        "downloads": -1,
        "filename": "naampy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8bbaac10a7bd0731b95825fe1ae58ed0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9153992,
        "upload_time": "2020-01-30T08:23:54",
        "upload_time_iso_8601": "2020-01-30T08:23:54.417375Z",
        "url": "https://files.pythonhosted.org/packages/7d/cd/bb068a9e951785de0fb64c5d4054ff798908f3c2e74e0509bbacb15b21bd/naampy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8edd933ed3e60beb90d0629fbe5253a619889e39e4584bea5dc7b07f7ad2a6f3",
          "md5": "638052f0914231048578664e8894b5de",
          "sha256": "ab145dce33e1d89869a93df7d80b77596ddcfbec54d5f8aaa2db9ea3e13e2fe0"
        },
        "downloads": -1,
        "filename": "naampy-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "638052f0914231048578664e8894b5de",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9148598,
        "upload_time": "2020-02-04T23:29:46",
        "upload_time_iso_8601": "2020-02-04T23:29:46.307945Z",
        "url": "https://files.pythonhosted.org/packages/8e/dd/933ed3e60beb90d0629fbe5253a619889e39e4584bea5dc7b07f7ad2a6f3/naampy-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4360a01533596e599bb9a43c299b309ab60773c292193319304935a7f55aedb3",
          "md5": "6844ef1e747168debe2f634f36c7a4af",
          "sha256": "749db6276ad37e841c0424e7cf1c3d10529a3322743895f924577436ca509fe3"
        },
        "downloads": -1,
        "filename": "naampy-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6844ef1e747168debe2f634f36c7a4af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9154684,
        "upload_time": "2020-02-04T23:29:49",
        "upload_time_iso_8601": "2020-02-04T23:29:49.378676Z",
        "url": "https://files.pythonhosted.org/packages/43/60/a01533596e599bb9a43c299b309ab60773c292193319304935a7f55aedb3/naampy-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bea8e7ffe98a2172c546af0344644a11899f108fdcec855c6349a1f08d5573d",
          "md5": "900ef919c6b0219aec7082034409cb64",
          "sha256": "007058dcbe534a7e4181a80613163b86a42b14cdf7886a372e0b4466857f0c04"
        },
        "downloads": -1,
        "filename": "naampy-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "900ef919c6b0219aec7082034409cb64",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 10198,
        "upload_time": "2021-08-14T05:25:46",
        "upload_time_iso_8601": "2021-08-14T05:25:46.392321Z",
        "url": "https://files.pythonhosted.org/packages/3b/ea/8e7ffe98a2172c546af0344644a11899f108fdcec855c6349a1f08d5573d/naampy-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11268fa6c0aea2f1f0feefcc4880feebaf96d3b8f09a7639e768cda76274b4ec",
          "md5": "d405726c6e70a8f18af5cddac5b834ef",
          "sha256": "a38678102292b822d3cccd9e5615f0c3ca6b6b3d0fbd6b1ef1a2a9831343a8aa"
        },
        "downloads": -1,
        "filename": "naampy-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d405726c6e70a8f18af5cddac5b834ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13237,
        "upload_time": "2021-08-14T05:25:47",
        "upload_time_iso_8601": "2021-08-14T05:25:47.640812Z",
        "url": "https://files.pythonhosted.org/packages/11/26/8fa6c0aea2f1f0feefcc4880feebaf96d3b8f09a7639e768cda76274b4ec/naampy-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1bb9bdc2718bf7a6bb59424192dab609c35e118222a74a618786b15623e0869",
          "md5": "6989c23d6c4f9990ba8cca8ccaaaaa89",
          "sha256": "457610a2ac13da8efb5f73aaaf2e131dcf180e044f84fea950b85581b4c030ae"
        },
        "downloads": -1,
        "filename": "naampy-0.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6989c23d6c4f9990ba8cca8ccaaaaa89",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11763,
        "upload_time": "2022-05-14T15:10:24",
        "upload_time_iso_8601": "2022-05-14T15:10:24.391000Z",
        "url": "https://files.pythonhosted.org/packages/d1/bb/9bdc2718bf7a6bb59424192dab609c35e118222a74a618786b15623e0869/naampy-0.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "750f11041d0afb10f48422f67aa49c119ede850efd80b3425842c8c0b470de74",
          "md5": "78d6203d81b5112b3aeb9f1d169961a1",
          "sha256": "6713721653ac3e0676dcf863f912ac118da4b2ced652fad682dbdf51a4ff39f2"
        },
        "downloads": -1,
        "filename": "naampy-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "78d6203d81b5112b3aeb9f1d169961a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15756,
        "upload_time": "2022-05-14T15:10:26",
        "upload_time_iso_8601": "2022-05-14T15:10:26.035565Z",
        "url": "https://files.pythonhosted.org/packages/75/0f/11041d0afb10f48422f67aa49c119ede850efd80b3425842c8c0b470de74/naampy-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8130c93f9e6f1bc8f4113059ddba3a4940ecbdc6aebcf27f442b446a8df55d41",
          "md5": "ad7517a20fd380fabd189f232e17ab6c",
          "sha256": "afb8569ff88279fb8c946dece68f07e275a43e5f273f23859f86d981a142e5d5"
        },
        "downloads": -1,
        "filename": "naampy-0.4.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad7517a20fd380fabd189f232e17ab6c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 12914,
        "upload_time": "2022-06-30T19:54:57",
        "upload_time_iso_8601": "2022-06-30T19:54:57.284210Z",
        "url": "https://files.pythonhosted.org/packages/81/30/c93f9e6f1bc8f4113059ddba3a4940ecbdc6aebcf27f442b446a8df55d41/naampy-0.4.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04316c7835e703cf060d40ac2077de3266b3dbd1ea65a36467d2a55b401d27ce",
          "md5": "114f209fb14ab9eb40bed5de2f5891f3",
          "sha256": "ec1068c69b3c9587fe175bebe4520a782b957a76ba60dd74da042c3af383a85b"
        },
        "downloads": -1,
        "filename": "naampy-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "114f209fb14ab9eb40bed5de2f5891f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17247,
        "upload_time": "2022-06-30T19:54:59",
        "upload_time_iso_8601": "2022-06-30T19:54:59.048099Z",
        "url": "https://files.pythonhosted.org/packages/04/31/6c7835e703cf060d40ac2077de3266b3dbd1ea65a36467d2a55b401d27ce/naampy-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa11eccd730bd4a08405eaeec1ea54cc4ec44d19a9bd8af65cdcccc25d54c193",
          "md5": "810f3d4ddedc0315126b87d8920181b5",
          "sha256": "d248f16fbdd0d61e9bec9284be18f5e023afac5b120dbaef31279fe7c0841616"
        },
        "downloads": -1,
        "filename": "naampy-0.4.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "810f3d4ddedc0315126b87d8920181b5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 1947046,
        "upload_time": "2022-07-22T16:18:18",
        "upload_time_iso_8601": "2022-07-22T16:18:18.676467Z",
        "url": "https://files.pythonhosted.org/packages/aa/11/eccd730bd4a08405eaeec1ea54cc4ec44d19a9bd8af65cdcccc25d54c193/naampy-0.4.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38caeb6402b370538ec18aebab940caabda1894568bdad5471d765edf408de60",
          "md5": "517afe5d5b5506283cbe8a282a13b3c4",
          "sha256": "dd56de80ae503333440601977c97dfce072a3a77e7f7d9b6412956aaf9a65d10"
        },
        "downloads": -1,
        "filename": "naampy-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "517afe5d5b5506283cbe8a282a13b3c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1952361,
        "upload_time": "2022-07-22T16:18:20",
        "upload_time_iso_8601": "2022-07-22T16:18:20.994792Z",
        "url": "https://files.pythonhosted.org/packages/38/ca/eb6402b370538ec18aebab940caabda1894568bdad5471d765edf408de60/naampy-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "156982330865abbea542f78fa10e32abbf18058d4478f3f3540d29952c6b19dc",
          "md5": "599573100de6c2e36758c9e4baa8783b",
          "sha256": "8adc1825fbab48c1aad48c6d72fb9177b2ad2ddfb28c916f17714ca7a67a9bd7"
        },
        "downloads": -1,
        "filename": "naampy-0.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "599573100de6c2e36758c9e4baa8783b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 1946995,
        "upload_time": "2022-09-19T16:01:52",
        "upload_time_iso_8601": "2022-09-19T16:01:52.903036Z",
        "url": "https://files.pythonhosted.org/packages/15/69/82330865abbea542f78fa10e32abbf18058d4478f3f3540d29952c6b19dc/naampy-0.5.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c2e78fb0dd446f618f3de5ea160195c2e6e73d764eba1a04950f109b4d9b703",
          "md5": "3f8777743dc803bacaf71e907709ff9e",
          "sha256": "73463852142bf6f2c3a6b2b28d20772a95e38b8118270b672b56927f28bf381d"
        },
        "downloads": -1,
        "filename": "naampy-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3f8777743dc803bacaf71e907709ff9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1952086,
        "upload_time": "2022-09-19T16:01:54",
        "upload_time_iso_8601": "2022-09-19T16:01:54.665087Z",
        "url": "https://files.pythonhosted.org/packages/2c/2e/78fb0dd446f618f3de5ea160195c2e6e73d764eba1a04950f109b4d9b703/naampy-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "156982330865abbea542f78fa10e32abbf18058d4478f3f3540d29952c6b19dc",
        "md5": "599573100de6c2e36758c9e4baa8783b",
        "sha256": "8adc1825fbab48c1aad48c6d72fb9177b2ad2ddfb28c916f17714ca7a67a9bd7"
      },
      "downloads": -1,
      "filename": "naampy-0.5.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "599573100de6c2e36758c9e4baa8783b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 1946995,
      "upload_time": "2022-09-19T16:01:52",
      "upload_time_iso_8601": "2022-09-19T16:01:52.903036Z",
      "url": "https://files.pythonhosted.org/packages/15/69/82330865abbea542f78fa10e32abbf18058d4478f3f3540d29952c6b19dc/naampy-0.5.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c2e78fb0dd446f618f3de5ea160195c2e6e73d764eba1a04950f109b4d9b703",
        "md5": "3f8777743dc803bacaf71e907709ff9e",
        "sha256": "73463852142bf6f2c3a6b2b28d20772a95e38b8118270b672b56927f28bf381d"
      },
      "downloads": -1,
      "filename": "naampy-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3f8777743dc803bacaf71e907709ff9e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1952086,
      "upload_time": "2022-09-19T16:01:54",
      "upload_time_iso_8601": "2022-09-19T16:01:54.665087Z",
      "url": "https://files.pythonhosted.org/packages/2c/2e/78fb0dd446f618f3de5ea160195c2e6e73d764eba1a04950f109b4d9b703/naampy-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}