{
  "info": {
    "author": "Lukas Å alkauskas",
    "author_email": "halfas.online@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "InAppPy\n=======\n|travis| |pypi| |downloads|\n\n.. |travis| image:: https://travis-ci.org/dotpot/InAppPy.svg?branch=master\n    :target: https://travis-ci.org/dotpot/InAppPy\n.. |pypi| image:: https://badge.fury.io/py/inapppy.svg\n    :target: https://badge.fury.io/py/inapppy\n.. |downloads| image:: https://img.shields.io/pypi/dm/inapppy.svg\n    :target: https://pypi.python.org/pypi/inapppy\n\n\nTable of contents\n=================\n\n1. Introduction\n2. Installation\n3. Google Play (`receipt` + `signature`)\n4. Google Play (verification)\n5. Google Play (verification with result)\n6. App Store (`receipt` + using optional `shared-secret`)\n7. App Store Response (`validation_result` / `raw_response`) example\n8. App Store, **asyncio** version (available in the inapppy.asyncio package)\n9. Development\n\n\n1. Introduction\n===============\n\nIn-app purchase validation library for `Apple AppStore` and `GooglePlay` (`App Store` validator have **async** support!).\n\n2. Installation\n===============\n::\n\n    pip install inapppy\n\n\n3. Google Play (validates `receipt` against provided `signature` using RSA)\n===========================================================================\n.. code:: python\n\n    from inapppy import GooglePlayValidator, InAppPyValidationError\n\n\n    bundle_id = 'com.yourcompany.yourapp'\n    api_key = 'API key from the developer console'\n    validator = GooglePlayValidator(bundle_id, api_key)\n\n    try:\n        # receipt means `androidData` in result of purchase\n        # signature means `signatureAndroid` in result of purchase\n        validation_result = validator.validate('receipt', 'signature')\n    except InAppPyValidationError:\n        # handle validation error\n        pass\n\n\n4. Google Play verification\n===========================\n.. code:: python\n\n    from inapppy import GooglePlayVerifier, errors\n\n\n    def google_validator(receipt):\n        \"\"\"\n        Accepts receipt, validates in Google.\n        \"\"\"\n        purchase_token = receipt['purchaseToken']\n        product_sku = receipt['productId']\n        verifier = GooglePlayVerifier(\n            GOOGLE_BUNDLE_ID,\n            GOOGLE_SERVICE_ACCOUNT_KEY_FILE,\n        )\n        response = {'valid': False, 'transactions': []}\n        try:\n            result = verifier.verify(\n                purchase_token,\n                product_sku,\n\t\t\t\tis_subscription=True\n            )\n            response['valid'] = True\n            response['transactions'].append(\n                (result['orderId'], product_sku)\n            )\n        except errors.GoogleError as exc:\n            logging.error('Purchase validation failed {}'.format(exc))\n        return response\n\n\n5. Google Play verification (with result)\n=========================================\nAlternative to `.verify` method, instead of raising an error result class will be returned.\n\n.. code:: python\n\n    from inapppy import GooglePlayVerifier, errors\n\n\n    def google_validator(receipt):\n        \"\"\"\n        Accepts receipt, validates in Google.\n        \"\"\"\n        purchase_token = receipt['purchaseToken']\n        product_sku = receipt['productId']\n        verifier = GooglePlayVerifier(\n            GOOGLE_BUNDLE_ID,\n            GOOGLE_SERVICE_ACCOUNT_KEY_FILE,\n        )\n        response = {'valid': False, 'transactions': []}\n\n        result = verifier.verify_with_result(\n            purchase_token,\n            product_sku,\n            is_subscription=True\n        )\n\n        # result contains data\n        raw_response = result.raw_response\n        is_canceled = result.is_canceled\n        is_expired = result.is_expired\n\n        return result\n\n\n6. App Store (validates `receipt` using optional `shared-secret` against iTunes service)\n========================================================================================\n.. code:: python\n\n    from inapppy import AppStoreValidator, InAppPyValidationError\n\n\n    bundle_id = 'com.yourcompany.yourapp'\n    auto_retry_wrong_env_request=False # if True, automatically query sandbox endpoint if\n                                       # validation fails on production endpoint\n    validator = AppStoreValidator(bundle_id, auto_retry_wrong_env_request=auto_retry_wrong_env_request)\n\n    try:\n        exclude_old_transactions=False # if True, include only the latest renewal transaction\n        validation_result = validator.validate('receipt', 'optional-shared-secret', exclude_old_transactions=exclude_old_transactions)\n    except InAppPyValidationError as ex:\n        # handle validation error\n        response_from_apple = ex.raw_response  # contains actual response from AppStore service.\n        pass\n\n\n\n7. App Store Response (`validation_result` / `raw_response`) example\n====================================================================\n.. code:: json\n\n    {\n        \"latest_receipt\": \"MIIbngYJKoZIhvcNAQcCoIIbj...\",\n        \"status\": 0,\n        \"receipt\": {\n            \"download_id\": 0,\n            \"receipt_creation_date_ms\": \"1486371475000\",\n            \"application_version\": \"2\",\n            \"app_item_id\": 0,\n            \"receipt_creation_date\": \"2017-02-06 08:57:55 Etc/GMT\",\n            \"original_purchase_date\": \"2013-08-01 07:00:00 Etc/GMT\",\n            \"request_date_pst\": \"2017-02-06 04:41:09 America/Los_Angeles\",\n            \"original_application_version\": \"1.0\",\n            \"original_purchase_date_pst\": \"2013-08-01 00:00:00 America/Los_Angeles\",\n            \"request_date_ms\": \"1486384869996\",\n            \"bundle_id\": \"com.yourcompany.yourapp\",\n            \"request_date\": \"2017-02-06 12:41:09 Etc/GMT\",\n            \"original_purchase_date_ms\": \"1375340400000\",\n            \"in_app\": [{\n                \"purchase_date_ms\": \"1486371474000\",\n                \"web_order_line_item_id\": \"1000000034281189\",\n                \"original_purchase_date_ms\": \"1486371475000\",\n                \"original_purchase_date\": \"2017-02-06 08:57:55 Etc/GMT\",\n                \"expires_date_pst\": \"2017-02-06 01:00:54 America/Los_Angeles\",\n                \"original_purchase_date_pst\": \"2017-02-06 00:57:55 America/Los_Angeles\",\n                \"purchase_date_pst\": \"2017-02-06 00:57:54 America/Los_Angeles\",\n                \"expires_date_ms\": \"1486371654000\",\n                \"expires_date\": \"2017-02-06 09:00:54 Etc/GMT\",\n                \"original_transaction_id\": \"1000000271014363\",\n                \"purchase_date\": \"2017-02-06 08:57:54 Etc/GMT\",\n                \"quantity\": \"1\",\n                \"is_trial_period\": \"false\",\n                \"product_id\": \"com.yourcompany.yourapp\",\n                \"transaction_id\": \"1000000271014363\"\n            }],\n            \"version_external_identifier\": 0,\n            \"receipt_creation_date_pst\": \"2017-02-06 00:57:55 America/Los_Angeles\",\n            \"adam_id\": 0,\n            \"receipt_type\": \"ProductionSandbox\"\n        },\n        \"latest_receipt_info\": [{\n                \"purchase_date_ms\": \"1486371474000\",\n                \"web_order_line_item_id\": \"1000000034281189\",\n                \"original_purchase_date_ms\": \"1486371475000\",\n                \"original_purchase_date\": \"2017-02-06 08:57:55 Etc/GMT\",\n                \"expires_date_pst\": \"2017-02-06 01:00:54 America/Los_Angeles\",\n                \"original_purchase_date_pst\": \"2017-02-06 00:57:55 America/Los_Angeles\",\n                \"purchase_date_pst\": \"2017-02-06 00:57:54 America/Los_Angeles\",\n                \"expires_date_ms\": \"1486371654000\",\n                \"expires_date\": \"2017-02-06 09:00:54 Etc/GMT\",\n                \"original_transaction_id\": \"1000000271014363\",\n                \"purchase_date\": \"2017-02-06 08:57:54 Etc/GMT\",\n                \"quantity\": \"1\",\n                \"is_trial_period\": \"true\",\n                \"product_id\": \"com.yourcompany.yourapp\",\n                \"transaction_id\": \"1000000271014363\"\n            }, {\n                \"purchase_date_ms\": \"1486371719000\",\n                \"web_order_line_item_id\": \"1000000034281190\",\n                \"original_purchase_date_ms\": \"1486371720000\",\n                \"original_purchase_date\": \"2017-02-06 09:02:00 Etc/GMT\",\n                \"expires_date_pst\": \"2017-02-06 01:06:59 America/Los_Angeles\",\n                \"original_purchase_date_pst\": \"2017-02-06 01:02:00 America/Los_Angeles\",\n                \"purchase_date_pst\": \"2017-02-06 01:01:59 America/Los_Angeles\",\n                \"expires_date_ms\": \"1486372019000\",\n                \"expires_date\": \"2017-02-06 09:06:59 Etc/GMT\",\n                \"original_transaction_id\": \"1000000271014363\",\n                \"purchase_date\": \"2017-02-06 09:01:59 Etc/GMT\",\n                \"quantity\": \"1\",\n                \"is_trial_period\": \"false\",\n                \"product_id\": \"com.yourcompany.yourapp\",\n                \"transaction_id\": \"1000000271016119\"\n            }],\n        \"environment\": \"Sandbox\"\n    }\n\n\n8. App Store, asyncio version (available in the inapppy.asyncio package)\n========================================================================\n.. code:: python\n\n    from inapppy import InAppPyValidationError\n    from inapppy.asyncio import AppStoreValidator\n\n\n    bundle_id = 'com.yourcompany.yourapp'\n    auto_retry_wrong_env_request=False # if True, automatically query sandbox endpoint if\n                                       # validation fails on production endpoint\n    validator = AppStoreValidator(bundle_id, auto_retry_wrong_env_request=auto_retry_wrong_env_request)\n\n    try:\n        exclude_old_transactions=False # if True, include only the latest renewal transaction\n        validation_result = await validator.validate('receipt', 'optional-shared-secret', exclude_old_transactions=exclude_old_transactions)\n    except InAppPyValidationError as ex:\n        # handle validation error\n        response_from_apple = ex.raw_response  # contains actual response from AppStore service.\n        pass\n\n\n\n9. Development\n==============\n\n.. code:: bash\n\n    # run checks and tests\n    tox\n\n    # setup project\n    make setup\n\n    # check for lint errors\n    make lint\n\n    # run tests\n    make test\n\n    # run black\n    make black\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Nkhinatolla/InAppPy.git",
    "keywords": "in-app store purchase googleplay appstore validation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "inapppy2",
    "package_url": "https://pypi.org/project/inapppy2/",
    "platform": "",
    "project_url": "https://pypi.org/project/inapppy2/",
    "project_urls": {
      "Homepage": "https://github.com/Nkhinatolla/InAppPy.git"
    },
    "release_url": "https://pypi.org/project/inapppy2/2.4.5/",
    "requires_dist": [
      "aiohttp",
      "rsa",
      "requests",
      "google-api-python-client"
    ],
    "requires_python": "",
    "summary": "In-app purchase validation library for Apple AppStore and GooglePlay.",
    "version": "2.4.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7031811,
  "releases": {
    "2.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a852a712be5a584f4c2418aac46c16c72fb6b9252c598208eb016a5817b287b",
          "md5": "b04361211ca3290ba76b79ec03b8b1b9",
          "sha256": "ca1c5bc3528bfdd0c3b298bcde7183244ae6512c93469efecc0db71874eeb893"
        },
        "downloads": -1,
        "filename": "inapppy2-2.4.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b04361211ca3290ba76b79ec03b8b1b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9442,
        "upload_time": "2020-04-16T12:23:04",
        "upload_time_iso_8601": "2020-04-16T12:23:04.305686Z",
        "url": "https://files.pythonhosted.org/packages/6a/85/2a712be5a584f4c2418aac46c16c72fb6b9252c598208eb016a5817b287b/inapppy2-2.4.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e23ad144b6e50da177f831a11bd41dc60479a1436dd2c086eec1733b9510fbea",
          "md5": "6fd5854fdc4899cc43c11c98e8092072",
          "sha256": "7c3404d10140d9b0cc526ebf9496d6709ca6d52d8173c00cd1340ae1974d10a7"
        },
        "downloads": -1,
        "filename": "inapppy2-2.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6fd5854fdc4899cc43c11c98e8092072",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8665,
        "upload_time": "2020-04-16T12:23:07",
        "upload_time_iso_8601": "2020-04-16T12:23:07.008562Z",
        "url": "https://files.pythonhosted.org/packages/e2/3a/d144b6e50da177f831a11bd41dc60479a1436dd2c086eec1733b9510fbea/inapppy2-2.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "160e1a00e2f54111bac920fec1cef4e5ac34ce6c593cc8b709cf86588db9f10d",
          "md5": "36231649bc5b0561106d11980c284760",
          "sha256": "c2f188712d7a7a3deb10cf07a8baded685b05441aaff96fdd9ca143e828f36ff"
        },
        "downloads": -1,
        "filename": "inapppy2-2.4.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36231649bc5b0561106d11980c284760",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9514,
        "upload_time": "2020-04-16T12:25:06",
        "upload_time_iso_8601": "2020-04-16T12:25:06.714228Z",
        "url": "https://files.pythonhosted.org/packages/16/0e/1a00e2f54111bac920fec1cef4e5ac34ce6c593cc8b709cf86588db9f10d/inapppy2-2.4.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cee9f79f47b483dfd5b5ba9e34a1aab91bf140f4b712053511982ff33f4b2eb4",
          "md5": "2fdb2e73e679c02712cd052bfc0ab38e",
          "sha256": "5bcf9ce9c5fdff1158b23d7283165056ec014d32faeda654542229cf3176b793"
        },
        "downloads": -1,
        "filename": "inapppy2-2.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2fdb2e73e679c02712cd052bfc0ab38e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8830,
        "upload_time": "2020-04-16T12:25:08",
        "upload_time_iso_8601": "2020-04-16T12:25:08.187974Z",
        "url": "https://files.pythonhosted.org/packages/ce/e9/f79f47b483dfd5b5ba9e34a1aab91bf140f4b712053511982ff33f4b2eb4/inapppy2-2.4.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "160e1a00e2f54111bac920fec1cef4e5ac34ce6c593cc8b709cf86588db9f10d",
        "md5": "36231649bc5b0561106d11980c284760",
        "sha256": "c2f188712d7a7a3deb10cf07a8baded685b05441aaff96fdd9ca143e828f36ff"
      },
      "downloads": -1,
      "filename": "inapppy2-2.4.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "36231649bc5b0561106d11980c284760",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9514,
      "upload_time": "2020-04-16T12:25:06",
      "upload_time_iso_8601": "2020-04-16T12:25:06.714228Z",
      "url": "https://files.pythonhosted.org/packages/16/0e/1a00e2f54111bac920fec1cef4e5ac34ce6c593cc8b709cf86588db9f10d/inapppy2-2.4.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cee9f79f47b483dfd5b5ba9e34a1aab91bf140f4b712053511982ff33f4b2eb4",
        "md5": "2fdb2e73e679c02712cd052bfc0ab38e",
        "sha256": "5bcf9ce9c5fdff1158b23d7283165056ec014d32faeda654542229cf3176b793"
      },
      "downloads": -1,
      "filename": "inapppy2-2.4.5.tar.gz",
      "has_sig": false,
      "md5_digest": "2fdb2e73e679c02712cd052bfc0ab38e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8830,
      "upload_time": "2020-04-16T12:25:08",
      "upload_time_iso_8601": "2020-04-16T12:25:08.187974Z",
      "url": "https://files.pythonhosted.org/packages/ce/e9/f79f47b483dfd5b5ba9e34a1aab91bf140f4b712053511982ff33f4b2eb4/inapppy2-2.4.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}