{
  "info": {
    "author": "Yun Peng",
    "author_email": "research@yunpeng.work",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# HiTyper\n![](https://img.shields.io/badge/Version-1.0-blue)\n\n\n\nThis is the tool released in the ICSE 2022 paper [\"Static Inference Meets Deep Learning: A Hybrid Type InferenceApproach for Python\"](https://arxiv.org/abs/2105.03595).\n\n## Workflow\n\nHiTyper is a hybrid type inference tool built upon Type Dependency Graph (TDG), the typical workflow of it is as follows:\n\n![](https://github.com/JohnnyPeng18/HiTyper/blob/main/imgs/workflow.png)\n\nFor more details, please refer to the [paper](https://arxiv.org/abs/2105.03595).\n\n## Methdology\n\nThe general methdology of HiTyper is:\n\n1) Static inference is accurate but suffer from coverage problem due to dynamic features\n\n2) Deep learning models are feature-agnostic but they can hardly maintain the type correctness and are unable to predict unseen user-defined types\n\nThe combination of static inference and deep learning shall complement each other and improve the coverage while maintaining the accuracy.\n\n## Install\n\nTo use HiTyper on your own computer, you can simply type:\n\n```sh\npip install hityper\n```\n\nor build from source: (If you need to modify the source code of HiTyper, please use this method and re-run the `pip install .` after modification each time)\n\n```sh\ngit clone https://github.com/JohnnyPeng18/HiTyper.git && cd HiTyper\npip install .\n```\n\n**Requirements:**\n\n- Python>=3.9\n- Linux\n\nHiTyper requires running under Python >= 3.9 because there are a lot of new nodes introduced on AST from Python 3.9. However, HiTyper can analyze most files written under Python 3 since Python's AST is backward compatible.\n\nYou are recommended to use `Anaconda` to create a clean Python 3.9 environment and avoid most dependency conflicts:\n\n````sh\nconda create -n hityper python=3.9\n````\n\n## Usage\n\nCurrently HiTyper has the following command line options: (Some important settings are stored in file `config.py`, you may need to modify it before running HiTyper)\n\n### findusertype\n\n```sh\nhityper findusertype [-h] [-s SOURCE] -p REPO [-v] [-d OUTPUT_DIRECTORY]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SOURCE, --source SOURCE\n                        Path to a Python source file\n  -p REPO, --repo REPO  Path to a Python project\n  -v, --validate        Validate the imported user-defined types by finding their implementations\n  -d OUTPUT_DIRECTORY, --output_directory OUTPUT_DIRECTORY\n                        Path to the store the usertypes\n```\n\n**Example:**\n\n```sh\nhityper findusertype -s python_project_repo/test.py -p python_project_repo -v -d outputs\n```\n\n*This command generates the user-defined types collected by HiTyper and save them as `.json` files under `outputs/` folder.*\n\n### gentdg\n\n```sh\nhityper gentdg [-h] [-s SOURCE] -p REPO [-o] [-l LOCATION] [-a] [-c] [-d OUTPUT_DIRECTORY] [-f {json,pdf}]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SOURCE, --source SOURCE\n                        Path to a Python source file\n  -p REPO, --repo REPO  Path to a Python project\n  -o, --optimize        Remove redundant nodes in TDG\n  -l LOCATION, --location LOCATION\n                        Generate TDG for a specific function\n  -a, --alias_analysis  Generate alias graphs along with TDG\n  -c, --call_analysis   Generate call graphs along with TDG\n  -d OUTPUT_DIRECTORY, --output_directory OUTPUT_DIRECTORY\n                        Path to the generated TDGs\n  -f {json,pdf}, --output_format {json,pdf}\n                        Formats of output TDGs\n```\n\n**Example:**\n\n```\nhityper gentdg -s python_project_repo/test.py -p python_project_repo -d outputs -f json -o\n```\n\n*This command generates the TDG for all functions in file `python_project_repo/test.py` and save them into `outputs` folder.* \n\nNote that if you choose `json` format to save TDG, it will be only ONE `json` file that contains all TDGs in the source file. However, if you choose `pdf` format to save TDG, then there will be multiple `pdf` files and each one correspond to one function in the source file. This is because a pdf file can hardly contain a large TDG for every functions.\n\nHiTyper uses [PyCG](https://github.com/vitsalis/PyCG) to build call graphs in call analysis. Alias analysis and call analysis are temporarily built-in but HiTyper does not use them in inference. Further updates about them will be involved in HiTyper. \n\n### infer\n\n```sh\nhityper infer [-h] [-s SOURCE] -p REPO [-l LOCATION] [-d OUTPUT_DIRECTORY] [-m RECOMMENDATIONS] [-t] [-n TOPN]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SOURCE, --source SOURCE\n                        Path to a Python source file\n  -p REPO, --repo REPO  Path to a Python project\n  -l LOCATION, --location LOCATION\n                        Type inference for a specific function\n  -d OUTPUT_DIRECTORY, --output_directory OUTPUT_DIRECTORY\n                        Path to the generated TDGs\n  -m RECOMMENDATIONS, --recommendations RECOMMENDATIONS\n                        Path to the recommendations generated by a DL model\n  -t, --type4py         Use Type4Py as the recommendation model\n  -n TOPN, --topn TOPN  Indicate the top n predictions from DL models used by HiTyper\n```\n\n**Example:**\n\n```\nhityper infer -s python_project_repo/test.py -p python_project_repo -d outputs -n 1 -t \n```\n\n*This command generates the inferred types for all variables, arguments and return values in the source file and save them into `output` folder.*\n\nIf you do not specify `-m` or `-t` option, then HiTyper will only use the static inference part to infer types. Static inference generally takes several minutes.\n\n**Recommendation Model:**\n\nNote that HiTyper natively supports the recommendations from Type4Py and it invokes the following API provided by Type4Py to get recommendations if you use option `-t`:\n\n```\nhttps://type4py.com/api/predict?tc=0\n```\n\n**This will upload your file to the Type4Py server!** If you do not want to upload your file, you can use the [docker](https://github.com/saltudelft/type4py/wiki/Using-Type4Py-Rest-API) provided by Type4Py and changes the API in `config.py` into:\n\n```\nhttp://localhost:PORT/api/predict?tc=0\n```\n\n**HiTyper's performance deeply depends on the maximum performance of recommendation model (especially the performance to predict argument types)** \n\nIf you want to use another more powerful model, you write code like `__main__.py` to adapt HiTyper to your DL model.\n\n### eval\n\n```sh\nhityper eval [-h] -g GROUNDTRUTH -c CLASSIFIED_GROUNDTRUTH -u USERTYPE [-m RECOMMENDATIONS] [-t] [-n TOPN]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -g GROUNDTRUTH, --groundtruth GROUNDTRUTH\n                        Path to a ground truth dataset\n  -c CLASSIFIED_GROUNDTRUTH, --classified_groundtruth CLASSIFIED_GROUNDTRUTH\n                        Path to a classified ground truth dataset\n  -u USERTYPE, --usertype USERTYPE\n                        Path to a previously collected user-defined type set\n  -m RECOMMENDATIONS, --recommendations RECOMMENDATIONS\n                        Path to the recommendations generated by a DL model\n  -t, --type4py         Use Type4Py as the recommendation model\n  -n TOPN, --topn TOPN  Indicate the top n predictions from DL models used by HiTyper\n```\n\n**Example:**\n\n```sh\nhityper eval -g groundtruth.json -c detailed_groundtruth.json -u usertypes.json -n 1 -t\n```\n\n*This command evaluates the performance of HiTyper on a pre-defined groundtruth dataset. It will output similar results like stated in `Experiment Results` part.*\n\nBefore evaluating Hityper using this command, please use `hityper findusertype` command to generate `usertypes.json`. This typically takes several hours, depending on the number of files.\n\nThis option is designed only for future research evaluation.\n\n## Experiment Results\n\n**Dataset:**\n\nThe following results are evaluated using the [ManyTypes4Py](https://zenodo.org/record/4719447#.YjxcpBNBxb8) dataset. \n\nSince the original dataset does not contain Python source files, to facilitate future research, we here also attached a [link](https://drive.google.com/file/d/1HdZyd3dKAUkiv2Nl0Zynp_YhrqU6HfMx/view?usp=sharing) for the Python source files HiTyper uses to infer types. Attached dataset is not identical with the original one because the original one contains some GitHub repos that do not allow open access or have been deleted.\n\nNote that as stated in the paper, there exists few cases (such as subtypes and same types with different names) that HiTyper should be correct but still counted as wrong in the evaluation process.\n\n**Metrics:**\n\nFor the definition of metrics used here, please also refer to the paper. These metrics can be regarded as a kind of \"recall\", which evaluates the coverage of HiTyper on a specific dataset. We do not show the \"precision\" here as HiTyper only outputs results when it does not observe any violations with current typing rules and TDG.\n\n**Only using the static inference part:**\n\n| Category           | Exact Match | Match to Parametric | Partial Match |\n| ------------------ | ----------- | ------------------- | ------------- |\n| Simple Types       | 59.00%      | 59.47%              | 62.15%        |\n| Generic Types      | 55.50%      | 69.68%              | 71.90%        |\n| User-defined Types | 40.40%      | 40.40%              | 44.30%        |\n| Arguments          | 7.65%       | 8.05%               | 14.39%        |\n| Return Values      | 58.71%      | 64.61%              | 69.06%        |\n| Local Variables    | 61.56%      | 65.66%              | 67.05%        |\n\nYou can use the following command to reproduce the above results:\n\n```sh\nhityper eval -g ManyTypes4Py_gts_test_verified.json -c ManyTypes4Py_gts_test_verified_detailed.json -u ManyTypes4Py_test_usertypes.json \n```\n\n**Using Type4Py's top 1 predictions as recommendations:**\n\n| Category           | Exact Match | Match to Parametric | Partial Match |\n| ------------------ | ----------- | ------------------- | ------------- |\n| Simple Types       | 67.20%      | 68.00%              | 69.80%        |\n| Generic Types      | 56.37%      | 71.05%              | 72.54%        |\n| User-defined Types | 40.42%      | 40.42%              | 43.82%        |\n| Arguments          | 22.36%      | 23.67%              | 27.56%        |\n| Return Values      | 59.11%      | 64.98%              | 69.30%        |\n| Local Variables    | 64.47%      | 68.78%              | 69.72%        |\n\nYou can use the following command to reproduce the above results:\n\n```sh\nhityper eval -g ManyTypes4Py_gts_test_verified.json -c ManyTypes4Py_gts_test_verified_detailed.json -u ManyTypes4Py_test_usertypes.json -t -n 1\n```\n\n**Using Type4Py's top 10 predictions as recommendations:**\n\n| Category           | Exact Match | Match to Parametric | Partial Match |\n| ------------------ | ----------- | ------------------- | ------------- |\n| Simple Types       | 68.94%      | 69.64%              | 71.23%        |\n| Generic Types      | 57.29%      | 72.31%              | 73.68%        |\n| User-defined Types | 40.43%      | 40.43%              | 43.67%        |\n| Arguments          | 25.90%      | 27.30%              | 30.64%        |\n| Return Values      | 59.35%      | 65.25%              | 69.54%        |\n| Local Variables    | 65.21%      | 69.53%              | 70.37%        |\n\nYou can use the following command to reproduce the above results:\n\n```sh\nhityper eval -g ManyTypes4Py_gts_test_verified.json -c ManyTypes4Py_gts_test_verified_detailed.json -u ManyTypes4Py_test_usertypes.json -t -n 10\n```\n\nThe improvement brought by Type4Py currently is not very significant because:\n\n1) Type4Py cannot give recommendations for many hot types given by HiTyper\n\n2) Type4Py maintains low performance on predicting \"rare types\", which are mostly user-defined types\n\nWe are currently working on building a DL model that's more suitable for HiTyper. Stay tuned!\n\n**Other datasets:**\n\nIf you want to evaluate HiTyper on other datasets, please generate files with the same format with `ManyTypes4Py_gts_test_verified.json`, `ManyTypes4Py_gts_test_verified_detailed.json`, or you can modify the code in `__main__.py`. To check a type's category, you can use `hityper.typeobject.TypeObject.checkType()`.\n\nIn any case, you must also prepare the source files for static analysis.\n\n**Old results:**\n\nIf you want the exact experiment results stated in the paper, please download them at this [link](https://drive.google.com/file/d/1zFVStp085bfv8WU7UCk9pIE2HEEf-CUh/view?usp=sharing).\n\n## Todo\n\n- Add supports for inter-procedural analysis\n- Add supports for types from third-party modules\n- Add supports for external function calls\n- Add supports for stub files\n\n## Cite Us\n\nIf you use HiTyper in your research, please cite us:\n\n```latex\n@article{peng2022hityper,\n  author    = {Yun Peng and Cuiyun Gao and Zongjie Li and Bowei Gao and David Lo and Qirun Zhang and Michael R. Lyu},\n  title     = {Static Inference Meets Deep Learning: A Hybrid Type Inference Approach for Python},\n  journal   = {CoRR},\n  volume    = {abs/2105.03595},\n  year      = {2022},\n  url       = {https://arxiv.org/abs/2105.03595}\n}\n```\n\n## Contact\n\nWe actively maintain this project and welcome contributions. \n\nIf you have any question, please contact research@yunpeng.work.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JohnnyPeng18/HiTyper",
    "keywords": "python,type inference,static analysis",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hityper",
    "package_url": "https://pypi.org/project/hityper/",
    "platform": null,
    "project_url": "https://pypi.org/project/hityper/",
    "project_urls": {
      "Homepage": "https://github.com/JohnnyPeng18/HiTyper"
    },
    "release_url": "https://pypi.org/project/hityper/1.0.2/",
    "requires_dist": [
      "astpretty (>=2.1.0)",
      "pycg (>=0.0.4)",
      "graphviz (>=0.19.0)",
      "gensim (>=3.7.0)",
      "regex (>=2022.3.15)",
      "requests (>=2.27.0)",
      "tqdm (>=4.63.0)",
      "transformers (>=4.17.0)",
      "Levenshtein (>=0.18.0)",
      "func-timeout (>=4.3.5)"
    ],
    "requires_python": "",
    "summary": "HiTyper: A hybrid type inference framework for Python",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13325492,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "292195ba35dffc1dca5044ec2dbd0dc062f6cc49bd10a9281bace350126169b2",
          "md5": "9038b291ee80b24a67ab248050d65a09",
          "sha256": "99ea198f3bb75ba0aa3b676dcf954827fa9f03ff0e4fbbf538d912279f89bbd4"
        },
        "downloads": -1,
        "filename": "hityper-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9038b291ee80b24a67ab248050d65a09",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 72497,
        "upload_time": "2022-03-25T11:12:30",
        "upload_time_iso_8601": "2022-03-25T11:12:30.420393Z",
        "url": "https://files.pythonhosted.org/packages/29/21/95ba35dffc1dca5044ec2dbd0dc062f6cc49bd10a9281bace350126169b2/hityper-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bc66e0d02f93dea10c8d55db608951163d5ccdffc2dd9a540e34cf73b209606",
          "md5": "ffb737c0606c96e00cee5a65816cd172",
          "sha256": "6a2d2ae9e64f99bccef8d5cd41b6cb50628b3ff31c602863064a6a43baa94d12"
        },
        "downloads": -1,
        "filename": "hityper-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ffb737c0606c96e00cee5a65816cd172",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 72214,
        "upload_time": "2022-03-25T11:12:32",
        "upload_time_iso_8601": "2022-03-25T11:12:32.948717Z",
        "url": "https://files.pythonhosted.org/packages/7b/c6/6e0d02f93dea10c8d55db608951163d5ccdffc2dd9a540e34cf73b209606/hityper-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7de38404190bc57cf3471f0a6db595e89fe4276f4e386fe1d49dbe7628b33cfd",
          "md5": "3215cdcbf7e14d7ea3c3fea6783f48e7",
          "sha256": "2d8fb5c9fa6bc7346791d2a62f08852054f897e7236e5fef559c3b69f9416619"
        },
        "downloads": -1,
        "filename": "hityper-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3215cdcbf7e14d7ea3c3fea6783f48e7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 72636,
        "upload_time": "2022-03-28T05:16:44",
        "upload_time_iso_8601": "2022-03-28T05:16:44.122874Z",
        "url": "https://files.pythonhosted.org/packages/7d/e3/8404190bc57cf3471f0a6db595e89fe4276f4e386fe1d49dbe7628b33cfd/hityper-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ade3e884c0661925ae4c2f0d8bd5e965b398a415e7b4bb5c6ceaf8e869f285ac",
          "md5": "0353dfdd00f62cc38348a59f2c854b2f",
          "sha256": "efeb3ccc040b0b703d8b165c13e0eb34f9292a4c0a2bd6f148d2179a8e64c65d"
        },
        "downloads": -1,
        "filename": "hityper-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0353dfdd00f62cc38348a59f2c854b2f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 72481,
        "upload_time": "2022-03-28T05:16:46",
        "upload_time_iso_8601": "2022-03-28T05:16:46.527522Z",
        "url": "https://files.pythonhosted.org/packages/ad/e3/e884c0661925ae4c2f0d8bd5e965b398a415e7b4bb5c6ceaf8e869f285ac/hityper-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fca96192ac10a905f805b52c5351bbc69e2be3f33036a1b415613aadeaf7faa0",
          "md5": "9dad622074d1c5c3a54882319ca0e58e",
          "sha256": "32b64cb9b16abe1d9c0b134f3c4dcb5ce7b56cae655b507ec106a8b84890a938"
        },
        "downloads": -1,
        "filename": "hityper-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9dad622074d1c5c3a54882319ca0e58e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 72615,
        "upload_time": "2022-03-28T19:10:47",
        "upload_time_iso_8601": "2022-03-28T19:10:47.706904Z",
        "url": "https://files.pythonhosted.org/packages/fc/a9/6192ac10a905f805b52c5351bbc69e2be3f33036a1b415613aadeaf7faa0/hityper-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc8b308db8688102243eb6de490c28e942303fc03c9cc9c640cffc32698d99a5",
          "md5": "706c154bd69233f5b71631d08d94a6aa",
          "sha256": "45ad2e1e62dca72731c99b0acdb3568100c51e4235a752d348d7a77b69c6c7d5"
        },
        "downloads": -1,
        "filename": "hityper-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "706c154bd69233f5b71631d08d94a6aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 72531,
        "upload_time": "2022-03-28T19:10:49",
        "upload_time_iso_8601": "2022-03-28T19:10:49.867507Z",
        "url": "https://files.pythonhosted.org/packages/dc/8b/308db8688102243eb6de490c28e942303fc03c9cc9c640cffc32698d99a5/hityper-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fca96192ac10a905f805b52c5351bbc69e2be3f33036a1b415613aadeaf7faa0",
        "md5": "9dad622074d1c5c3a54882319ca0e58e",
        "sha256": "32b64cb9b16abe1d9c0b134f3c4dcb5ce7b56cae655b507ec106a8b84890a938"
      },
      "downloads": -1,
      "filename": "hityper-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9dad622074d1c5c3a54882319ca0e58e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 72615,
      "upload_time": "2022-03-28T19:10:47",
      "upload_time_iso_8601": "2022-03-28T19:10:47.706904Z",
      "url": "https://files.pythonhosted.org/packages/fc/a9/6192ac10a905f805b52c5351bbc69e2be3f33036a1b415613aadeaf7faa0/hityper-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc8b308db8688102243eb6de490c28e942303fc03c9cc9c640cffc32698d99a5",
        "md5": "706c154bd69233f5b71631d08d94a6aa",
        "sha256": "45ad2e1e62dca72731c99b0acdb3568100c51e4235a752d348d7a77b69c6c7d5"
      },
      "downloads": -1,
      "filename": "hityper-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "706c154bd69233f5b71631d08d94a6aa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 72531,
      "upload_time": "2022-03-28T19:10:49",
      "upload_time_iso_8601": "2022-03-28T19:10:49.867507Z",
      "url": "https://files.pythonhosted.org/packages/dc/8b/308db8688102243eb6de490c28e942303fc03c9cc9c640cffc32698d99a5/hityper-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}