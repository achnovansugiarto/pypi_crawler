{
  "info": {
    "author": "Alexandre DÃ©fossez",
    "author_email": "defossez@fb.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Topic :: Multimedia :: Sound/Audio",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "\n# Demucs Music Source Separation\n\n## Info \n\nThis repository is fork of [demux](https://github.com/facebookresearch/demucs). The only reason for it to have independent module installed from pip for demucs v3 version.\n\n```\npip install demucs3\n```\n\n## Data\n\nThis is the 3rd release of Demucs (v3), featuring hybrid source separation.\n**For the waveform only Demucs (v2):** [Go this commit][demucs_v2].\nIf you are experiencing issues and want the old Demucs back, please fill an issue, and then you can get back to the v2 with\n`git checkout v2`.\n\nWe provide an implementation of Hybrid Demucs for music source separation, trained\nboth on the [MusDB HQ][musdb] dataset, and with internal extra training data.\nThey can separate drums, bass and vocals from the rest and achieved the first rank\nat the 2021 [Sony Music DemiXing Challenge (MDX)][mdx]\n\nDemucs is based on U-Net convolutional architecture inspired by [Wave-U-Net][waveunet].\nThe most recent version features hybrid spectrogram/waveform separation,\nalong with compressed residual branches, local attention and singular value regularization.\nCheckout our paper [Hybrid Spectrogram and Waveform Source Separation][hybrid_paper]\nfor more details. As far as we know, Demucs is currently the only model supporting true\nend-to-end hybrid model training with shared information between the domains,\nas opposed to post-training model blending.\n\nWhen trained only on MusDB HQ, Hybrid Demucs achieved a SDR of 7.33 on the MDX test set,\nand 8.11 dB with 200 extra training tracks. It is particularly efficient for\ndrums and bass extraction, although [KUIELAB-MDX-Net](kuielab) performs better for\nvocals and other accompaniments.\n\n\n<p align=\"center\">\n<img src=\"./demucs.png\" alt=\"Schema representing the structure of Demucs,\n    with a dual U-Net structure with a shared core, one branch for the temporal domain,\n    and one branch for the spectral domain.\"\nwidth=\"800px\"></p>\n\n\n\n## Important news if you are already using Demucs\n\nSee the [release notes](./docs/release.md) for more details.\n\n- 12/11/2021: Releasing **Demucs v3** with hybrid domain separation. Strong improvements\n\ton all sources. This is the model that won Sony MDX challenge.\n- 11/05/2021: Adding support for MusDB-HQ and arbitrary wav set, for the MDX challenge. For more information\non joining the challenge with Demucs see [the Demucs MDX instructions](docs/mdx.md)\n- 28/04/2021: **Demucs v2**, with extra augmentation and DiffQ based quantization.\n  **EVERYTHING WILL BREAK**, please restart from scratch following the instructions hereafter.\n  This version also adds overlap between prediction frames, with linear transition from one to the next,\n  which should prevent sudden changes at frame boundaries. Also, Demucs is now on PyPI, so for separation\n  only, installation is as easy as `pip install demucs` :)\n- 13/04/2020: **Demucs released under MIT**: We are happy to release Demucs under the MIT licence.\n    We hope that this will broaden the impact of this research to new applications.\n\n\n## Comparison with other models\n\nWe provide hereafter a summary of the different metrics presented in the paper.\nYou can also compare Hybrid Demucs (v3), [KUIELAB-MDX-Net][kuielab], [Spleeter][spleeter], Open-Unmix, Demucs (v1), and Conv-Tasnet on one of my favorite\nsongs on my [soundcloud playlist][soundcloud].\n\n### Comparison of accuracy\n\n`Overall SDR` is the mean of the SDR for each of the 4 sources, `MOS Quality` is a rating from 1 to 5\nof the naturalness and absence of artifacts given by human listeners (5 = no artifacts), `MOS Contamination`\nis a rating from 1 to 5 with 5 being zero contamination by other sources. We refer the reader to our [paper][hybrid_paper],\nfor more details.\n\n| Model                        | Domain      | Extra data? | Overall SDR | MOS Quality | MOS Contamination |\n|------------------------------|-------------|-------------|-------------|-------------|-------------------|\n| [Wave-U-Net][waveunet]       | waveform    | no          | 3.2         | -           | -                 |\n| [Open-Unmix][openunmix]      | spectrogram | no          | 5.3         | -           | -                 |\n| [D3Net][d3net]               | spectrogram | no          | 6.0         | -           | -                 |\n| [Conv-Tasnet][demucs_v2]     | waveform    | no          | 5.7         | -           |                   |\n| [Demucs (v2)][demucs_v2]     | waveform    | no          | 6.3         | 2.37        | 2.36              |\n| [ResUNetDecouple+][decouple] | spectrogram | no          | 6.7         | -           | -                 |\n| [KUIELAB-MDX-Net][kuielab]   | hybrid      | no          | 7.5         | **2.86**    | 2.55              |\n| **Hybrid Demucs (v3)**       | hybrid      | no          | **7.7**     | **2.83**    | **3.04**          |\n| [MMDenseLSTM][mmdenselstm]   | spectrogram | 804 songs   | 6.0         | -           | -                 |\n| [D3Net][d3net]               | spectrogram | 1.5k songs  | 6.7         | -           | -                 |\n| [Spleeter][spleeter]         | spectrogram | 25k songs   | 5.9         | -           | -                 |\n\n\n## Requirements\n\nYou will need at least Python 3.7. See `requirements_minimal.txt` for requirements for separation only,\nand `environment-[cpu|cuda].yml` (or `requirements.txt`) if you want to train a new model.\n\n### For Windows users\n\nEverytime you see `python3`, replace it with `python.exe`. You should always run commands from the\nAnaconda console.\n\n### For musicians\n\nIf you just want to use Demucs to separate tracks, you can install it with\n\n```bash\npython3 -m pip -U install demucs\n```\n\nAdvanced OS support are provided on the following page, **you must read the page for your OS before posting an issues**:\n- **If you are using Windows:** [Windows support](docs/windows.md).\n- **If you are using MAC OS X:** [Mac OS X support](docs/mac.md).\n- **If you are using Linux:** [Linux support](docs/linux.md).\n\n### For machine learning scientists\n\nIf you have anaconda installed, you can run from the root of this repository:\n\n```bash\nconda env update -f environment-cpu.yml  # if you don't have GPUs\nconda env update -f environment-cuda.yml # if you have GPUs\nconda activate demucs\npip install -e .\n```\n\nThis will create a `demucs` environment with all the dependencies installed.\n\nYou will also need to install [soundstretch/soundtouch](https://www.surina.net/soundtouch/soundstretch.html): on Mac OSX you can do `brew install sound-touch`,\nand on Ubuntu `sudo apt-get install soundstretch`. This is used for the\npitch/tempo augmentation.\n\n\n### Running in Docker\n\nThanks to @xserrat, there is now a Docker image definition ready for using Demucs. This can ensure all libraries are correctly installed without interfering with the host OS. See his repo [Docker Facebook Demucs](https://github.com/xserrat/docker-facebook-demucs) for more information.\n\n\n### Running from Colab\n\nI made a Colab to easily separate track with Demucs. Note that\ntransfer speeds with Colab are a bit slow for large media files,\nbut it will allow you to use Demucs without installing anything.\n\n[Demucs on Google Colab](https://colab.research.google.com/drive/1dC9nVxk3V_VPjUADsnFu8EiT-xnU1tGH?usp=sharing)\n\n## Web Demo\n\n(Possibly broken with the update, need to investigate) Integrated to [Huggingface Spaces](https://huggingface.co/spaces) with [Gradio](https://github.com/gradio-app/gradio). See demo: [![Hugging Face Spaces](https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue)](https://huggingface.co/spaces/akhaliq/demucs)\n\n\n## Separating tracks\n\nIn order to try Demucs, you can just run from any folder (as long as you properly installed it)\n\n```bash\ndemucs PATH_TO_AUDIO_FILE_1 [PATH_TO_AUDIO_FILE_2 ...]   # for Demucs\n# If you used `pip install --user` you might need to replace demucs with python3 -m demucs\npython3 -m demucs --mp3 --mp3-bitrate BITRATE PATH_TO_AUDIO_FILE_1  # output files saved as MP3\n# If your filename contain spaces don't forget to quote it !!!\ndemucs \"my music/my favorite track.mp3\"\n# You can select different models with `-n` mdx_q is the quantized model, smaller but maybe a bit less accurate.\ndemucs -n mdx_q myfile.mp3\n```\n\nIf you have a GPU, but you run out of memory, please add `-d cpu` to the command line. See the section hereafter for more details on the memory requirements for GPU acceleration.\n\nSeparated tracks are stored in the `separated/MODEL_NAME/TRACK_NAME` folder. There you will find four stereo wav files sampled at 44.1 kHz: `drums.wav`, `bass.wav`,\n`other.wav`, `vocals.wav` (or `.mp3` if you used the `--mp3` option).\n\nAll audio formats supported by `torchaudio` can be processed (i.e. wav, mp3, flac, ogg/vorbis on Linux/Mac OS X etc.). On Windows, `torchaudio` has limited support, so we rely on `ffmpeg`, which should support pretty much anything.\nAudio is resampled on the fly if necessary.\nThe output will be a wave file, either in int16 format or float32 (if `--float32` is passed).\nYou can pass `--mp3` to save as mp3 instead, and set the bitrate with `--mp3-bitrate` (default is 320kbps).\n\n\nOther pre-trained models can be selected with the `-n` flag.\nThe list of pre-trained models is:\n- `mdx`: trained only on MusDB HQ, winning model on track A at the [MDX][mdx] challenge.\n- `mdx_extra`: trained with extra training data (including MusDB test set), ranked 2nd on the track B\n    of the [MDX][mdx] challenge.\n- `mdx_q`, `mdx_extra_q`: quantized version of the previous models. Smaller download and storage\n    but quality can be slightly worse. `mdx_extra_q` is the default model used.\n- `SIG`: where `SIG` is a single model from the [model zoo](docs/training.md#model-zoo).\n\nThe `--shifts=SHIFTS` performs multiple predictions with random shifts (a.k.a the *shift trick*) of the input and average them. This makes prediction `SHIFTS` times\nslower. Don't use it unless you have a GPU.\n\nThe `--overlap` option controls the amount of overlap between prediction windows (for Demucs one window is 10 seconds).\nDefault is 0.25 (i.e. 25%) which is probably fine.\n\n\n### Memory requirements for GPU acceleration\n\nIf you want to use GPU acceleration, you will need at least 8GB of RAM on your GPU for `demucs`. Sorry, the code for demucs is not super optimized for memory! If you do not have enough memory on your GPU, simply add `-d cpu` to the command line to use the CPU. With Demucs, processing time should be roughly equal to 1.5 times the duration of the track.\n\n\n## Training Demucs\n\nIf you want to train (Hybrid) Demucs, please follow the [training doc](docs/training.md).\n\n## MDX Challenge reproduction\n\nIn order to reproduce the results from the Track A and Track B submissions, checkout the [MDX Hybrid Demucs submission repo][mdx_submission].\n\n\n\n## How to cite\n\n```\n@inproceedings{defossez2021hybrid,\n  title={Hybrid Spectrogram and Waveform Source Separation},\n  author={D{\\'e}fossez, Alexandre},\n  booktitle={Proceedings of the ISMIR 2021 Workshop on Music Source Separation},\n  year={2021}\n}\n```\n\n## License\n\nDemucs is released under the MIT license as found in the [LICENSE](LICENSE) file.\n\n[hybrid_paper]: https://arxiv.org/abs/2111.03600\n[waveunet]: https://github.com/f90/Wave-U-Net\n[musdb]: https://sigsep.github.io/datasets/musdb.html\n[openunmix]: https://github.com/sigsep/open-unmix-pytorch\n[mmdenselstm]: https://arxiv.org/abs/1805.02410\n[demucs_v2]: https://github.com/facebookresearch/demucs/tree/v2\n[spleeter]: https://github.com/deezer/spleeter\n[soundcloud]: https://soundcloud.com/voyageuri/sets/source-separation-in-the-waveform-domain\n[d3net]: https://arxiv.org/abs/2010.01733\n[mdx]: https://www.aicrowd.com/challenges/music-demixing-challenge-ismir-2021\n[kuielab]: https://github.com/kuielab/mdx-net-submission\n[decouple]: https://arxiv.org/abs/2109.05418\n[mdx_submission]: https://github.com/adefossez/mdx21_demucs\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/facebookresearch/demucs",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "demucs3",
    "package_url": "https://pypi.org/project/demucs3/",
    "platform": "",
    "project_url": "https://pypi.org/project/demucs3/",
    "project_urls": {
      "Homepage": "https://github.com/facebookresearch/demucs"
    },
    "release_url": "https://pypi.org/project/demucs3/3.0.1a0/",
    "requires_dist": [
      "dora-search",
      "diffq (>=0.2.1)",
      "julius (>=0.2.3)",
      "lameenc (>=1.2)",
      "openunmix",
      "pyyaml",
      "torch (>=1.8.1)",
      "torchaudio (>=0.8)",
      "tqdm",
      "dora-search ; extra == 'dev'",
      "diffq (>=0.2.1) ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "hydra-colorlog (>=1.1) ; extra == 'dev'",
      "hydra-core (>=1.1) ; extra == 'dev'",
      "julius (>=0.2.3) ; extra == 'dev'",
      "lameenc (>=1.2) ; extra == 'dev'",
      "museval ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "openunmix ; extra == 'dev'",
      "pyyaml ; extra == 'dev'",
      "submitit ; extra == 'dev'",
      "torch (>=1.8.1) ; extra == 'dev'",
      "torchaudio (>=0.8) ; extra == 'dev'",
      "tqdm ; extra == 'dev'",
      "treetable ; extra == 'dev'"
    ],
    "requires_python": ">=3.7.0",
    "summary": "Music source separation in the waveform domain.",
    "version": "3.0.1a0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11998902,
  "releases": {
    "3.0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "513db37ce9105dbc4e067c2dd2f8cf8ed6ff805a8c160fefccd30eab94fb1509",
          "md5": "56cdbe81ed90592e17be2317a79a3f8c",
          "sha256": "792668179b6dc8dfaf5b38d726381bf312084d2c50fbfb61e38666b2909df18e"
        },
        "downloads": -1,
        "filename": "demucs3-3.0.1a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "56cdbe81ed90592e17be2317a79a3f8c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 59109,
        "upload_time": "2021-11-11T20:07:08",
        "upload_time_iso_8601": "2021-11-11T20:07:08.379606Z",
        "url": "https://files.pythonhosted.org/packages/51/3d/b37ce9105dbc4e067c2dd2f8cf8ed6ff805a8c160fefccd30eab94fb1509/demucs3-3.0.1a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b812b283a3fbf3f26b5de4a6464879bc7f95ddd7d54cfc9bf3d89def13160d1",
          "md5": "8ca1666cc779f97b881b45f3472a5ac4",
          "sha256": "d9215346f5d91a13e4620332758723923f0927d9df60aab56c974ef5735ba4ff"
        },
        "downloads": -1,
        "filename": "demucs3-3.0.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "8ca1666cc779f97b881b45f3472a5ac4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 1492094,
        "upload_time": "2021-11-11T20:07:10",
        "upload_time_iso_8601": "2021-11-11T20:07:10.140954Z",
        "url": "https://files.pythonhosted.org/packages/4b/81/2b283a3fbf3f26b5de4a6464879bc7f95ddd7d54cfc9bf3d89def13160d1/demucs3-3.0.1a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "513db37ce9105dbc4e067c2dd2f8cf8ed6ff805a8c160fefccd30eab94fb1509",
        "md5": "56cdbe81ed90592e17be2317a79a3f8c",
        "sha256": "792668179b6dc8dfaf5b38d726381bf312084d2c50fbfb61e38666b2909df18e"
      },
      "downloads": -1,
      "filename": "demucs3-3.0.1a0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "56cdbe81ed90592e17be2317a79a3f8c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.0",
      "size": 59109,
      "upload_time": "2021-11-11T20:07:08",
      "upload_time_iso_8601": "2021-11-11T20:07:08.379606Z",
      "url": "https://files.pythonhosted.org/packages/51/3d/b37ce9105dbc4e067c2dd2f8cf8ed6ff805a8c160fefccd30eab94fb1509/demucs3-3.0.1a0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4b812b283a3fbf3f26b5de4a6464879bc7f95ddd7d54cfc9bf3d89def13160d1",
        "md5": "8ca1666cc779f97b881b45f3472a5ac4",
        "sha256": "d9215346f5d91a13e4620332758723923f0927d9df60aab56c974ef5735ba4ff"
      },
      "downloads": -1,
      "filename": "demucs3-3.0.1a0.tar.gz",
      "has_sig": false,
      "md5_digest": "8ca1666cc779f97b881b45f3472a5ac4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.0",
      "size": 1492094,
      "upload_time": "2021-11-11T20:07:10",
      "upload_time_iso_8601": "2021-11-11T20:07:10.140954Z",
      "url": "https://files.pythonhosted.org/packages/4b/81/2b283a3fbf3f26b5de4a6464879bc7f95ddd7d54cfc9bf3d89def13160d1/demucs3-3.0.1a0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}