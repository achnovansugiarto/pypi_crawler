{
  "info": {
    "author": "Cedric Kulbach",
    "author_email": "cedric.kulbach@googlemail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n<p align=\"center\">\n  <img height=\"150px\" src=\"https://raw.githubusercontent.com/online-ml/deep-river/master/docs/img/logo.png\" alt=\"incremental dl logo\">\n</p>\n<p align=\"center\">\n    <img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/deep-river\">\n    <a href=\"https://codecov.io/gh/online-ml/deep-river\" > \n        <img src=\"https://codecov.io/gh/online-ml/deep-river/branch/master/graph/badge.svg?token=ZKUIISZAYA\"/> \n    </a>\n    <img alt=\"PyPI - Downloads\" src=\"https://img.shields.io/pypi/dm/deep-river\">\n    <img alt=\"GitHub\" src=\"https://img.shields.io/github/license/online-ml/deep-river\">\n</p>\n<p align=\"center\">\n    deep-river is a Python library for online deep learning.\n    deep-river's ambition is to enable <a href=\"https://www.wikiwand.com/en/Online_machine_learning\">online machine learning</a> for neural networks.\n    It combines the <a href=\"https://www.riverml.xyz\">river</a> API with the capabilities of designing neural networks based on <a href=\"https://pytorch.org\">PyTorch</a>.\n</p>\n\n## üìö [Documentation](https://online-ml.github.io/deep-river/)\nThe [documentation](https://online-ml.github.io/deep-river/) contains an overview of all features of this repository as well as the repository's full features list. In each of these, the git repo reference is listed in a section that shows examples of the features and functionality.\n\n## üíà Installation\n\n```shell\npip install deep-river\n```\nor\n```shell\npip install \"river[deep]\"\n```\nYou can install the latest development version from GitHub as so:\n\n```shell\npip install https://github.com/online-ml/deep-river/archive/refs/heads/master.zip\n```\n\n## üç´ Quickstart\n\nWe build the development of neural networks on top of the <a href=\"https://www.riverml.xyz\">river API</a> and refer to the rivers design principles.\nThe following example creates a simple MLP architecture based on PyTorch and incrementally predicts and trains on the website phishing dataset.\nFor further examples check out the <a href=\"https://online-ml.github.io/deep-river\">Documentation</a>.\n\n### Classification\n\n```python\n>>> from river import metrics, datasets, preprocessing, compose\n>>> from deep_river import classification\n>>> from torch import nn\n>>> from torch import optim\n>>> from torch import manual_seed\n\n>>> _ = manual_seed(42)\n\n>>> class MyModule(nn.Module):\n...     def __init__(self, n_features):\n...         super(MyModule, self).__init__()\n...         self.dense0 = nn.Linear(n_features, 5)\n...         self.nonlin = nn.ReLU()\n...         self.dense1 = nn.Linear(5, 2)\n...         self.softmax = nn.Softmax(dim=-1)\n...\n...     def forward(self, X, **kwargs):\n...         X = self.nonlin(self.dense0(X))\n...         X = self.nonlin(self.dense1(X))\n...         X = self.softmax(X)\n...         return X\n\n>>> model_pipeline = compose.Pipeline(\n...     preprocessing.StandardScaler(),\n...     classification.Classifier(module=MyModule, loss_fn='binary_cross_entropy', optimizer_fn='adam')\n... )\n\n>>> dataset = datasets.Phishing()\n>>> metric = metrics.Accuracy()\n\n>>> for x, y in dataset:\n...     y_pred = model_pipeline.predict_one(x)  # make a prediction\n...     metric = metric.update(y, y_pred)  # update the metric\n...     model_pipeline = model_pipeline.learn_one(x, y)  # make the model learn\n>>> print(f\"Accuracy: {metric.get():.4f}\")\nAccuracy: 0.6728\n\n```\n### Multi Target Regression \n```python\n>>> from river import evaluate, compose\n>>> from river import metrics\n>>> from river import preprocessing\n>>> from river import stream\n>>> from sklearn import datasets\n>>> from torch import nn\n>>> from deep_river.regression.multioutput import MultiTargetRegressor\n\n>>> class MyModule(nn.Module):\n...     def __init__(self, n_features):\n...         super(MyModule, self).__init__()\n...         self.dense0 = nn.Linear(n_features, 3)\n...\n...     def forward(self, X, **kwargs):\n...         X = self.dense0(X)\n...         return X\n\n>>> dataset = stream.iter_sklearn_dataset(\n...         dataset=datasets.load_linnerud(),\n...         shuffle=True,\n...         seed=42\n...     )\n>>> model = compose.Pipeline(\n...     preprocessing.StandardScaler(),\n...     MultiTargetRegressor(\n...         module=MyModule,\n...         loss_fn='mse',\n...         lr=0.3,\n...         optimizer_fn='sgd',\n...     ))\n>>> metric = metrics.multioutput.MicroAverage(metrics.MAE())\n>>> ev = evaluate.progressive_val_score(dataset, model, metric)\n>>> print(f\"MicroAverage(MAE): {metric.get():.2f}\")\nMicroAverage(MAE): 28.36\n\n```\n\n### Anomaly Detection\n\n```python\n>>> from deep_river.anomaly import Autoencoder\n>>> from river import metrics\n>>> from river.datasets import CreditCard\n>>> from torch import nn\n>>> import math\n>>> from river.compose import Pipeline\n>>> from river.preprocessing import MinMaxScaler\n\n>>> dataset = CreditCard().take(5000)\n>>> metric = metrics.ROCAUC(n_thresholds=50)\n\n>>> class MyAutoEncoder(nn.Module):\n...     def __init__(self, n_features, latent_dim=3):\n...         super(MyAutoEncoder, self).__init__()\n...         self.linear1 = nn.Linear(n_features, latent_dim)\n...         self.nonlin = nn.LeakyReLU()\n...         self.linear2 = nn.Linear(latent_dim, n_features)\n...         self.sigmoid = nn.Sigmoid()\n...\n...     def forward(self, X, **kwargs):\n...         X = self.linear1(X)\n...         X = self.nonlin(X)\n...         X = self.linear2(X)\n...         return self.sigmoid(X)\n\n>>> ae = Autoencoder(module=MyAutoEncoder, lr=0.005)\n>>> scaler = MinMaxScaler()\n>>> model = Pipeline(scaler, ae)\n\n>>> for x, y in dataset:\n...     score = model.score_one(x)\n...     model = model.learn_one(x=x)\n...     metric = metric.update(y, score)\n...\n>>> print(f\"ROCAUC: {metric.get():.4f}\")\nROCAUC: 0.7447\n\n```\n\n## üè´ Affiliations\n\n<p align=\"center\">\n    <img src=\"https://upload.wikimedia.org/wikipedia/de/thumb/4/44/Fzi_logo.svg/1200px-Fzi_logo.svg.png?raw=true\" alt=\"FZI Logo\" height=\"200\"/>\n</p>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://online-ml.github.io/deep-river/",
    "keywords": "",
    "license": "BSD-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deep-river",
    "package_url": "https://pypi.org/project/deep-river/",
    "platform": null,
    "project_url": "https://pypi.org/project/deep-river/",
    "project_urls": {
      "Homepage": "https://online-ml.github.io/deep-river/"
    },
    "release_url": "https://pypi.org/project/deep-river/0.2.2/",
    "requires_dist": [
      "scikit-learn (~=1.0.2)",
      "torch (~=1.13.0)",
      "pandas (~=1.3.2)",
      "numpy (~=1.24.0)",
      "river (~=0.15.0)",
      "tqdm (~=4.61.2)",
      "ordered-set (~=4.1.0)",
      "torchviz (~=0.0.2)",
      "dataclasses ; python_version == '3.6'",
      "graphviz (>=0.10.1) ; extra == 'all'",
      "matplotlib (>=3.0.2) ; extra == 'all'",
      "mypy (>=0.990) ; extra == 'all'",
      "pre-commit (>=2.20.0) ; extra == 'all'",
      "pytest (>=7.2.0) ; extra == 'all'",
      "pytest-cov (>=4.0.0) ; extra == 'all'",
      "scikit-learn (>=0.22.1) ; extra == 'all'",
      "black (>=22.10.0) ; extra == 'all'",
      "flake8 (>=5.0.4) ; extra == 'all'",
      "isort (>=5.10.1) ; extra == 'all'",
      "jupyter (>=1.0.0) ; extra == 'all'",
      "pyupgrade (==3.2.0) ; extra == 'all'",
      "flask (>=2.0.2) ; extra == 'all'",
      "ipykernel (>=6.9.0) ; extra == 'all'",
      "mike (>=0.5.3) ; extra == 'all'",
      "mkdocs (>=1.2.3) ; extra == 'all'",
      "mkdocs-awesome-pages-plugin (>=2.7.0) ; extra == 'all'",
      "mkdocs-gen-files (>=0.3.5) ; extra == 'all'",
      "mkdocs-charts-plugin (>=0.0.8) ; extra == 'all'",
      "mkdocs-literate-nav (>=0.4.1) ; extra == 'all'",
      "mkdocs-material (>=8.1.11) ; extra == 'all'",
      "mkdocstrings[python] (>=0.19.0) ; extra == 'all'",
      "pytkdocs[numpy-style] (>=0.5.0) ; extra == 'all'",
      "ipython-genutils (>=0.1.0) ; extra == 'all'",
      "mkdocs-jupyter (>=0.20.0) ; extra == 'all'",
      "nbconvert (>=6.4.2) ; extra == 'all'",
      "numpydoc (>=1.2) ; extra == 'all'",
      "spacy (>=3.2.2) ; extra == 'all'",
      "jinja2 (>=3.0.3) ; extra == 'all'",
      "dominate ; extra == 'all'",
      "jupyter-client ; extra == 'all'",
      "mkdocs-charts-plugin ; extra == 'all'",
      "python-slugify ; extra == 'all'",
      "watermark (==2.3.1) ; extra == 'all'",
      "scikit-learn (~=1.0.2) ; extra == 'dev'",
      "torch (~=1.13.0) ; extra == 'dev'",
      "pandas (~=1.3.2) ; extra == 'dev'",
      "numpy (~=1.24.0) ; extra == 'dev'",
      "river (~=0.15.0) ; extra == 'dev'",
      "tqdm (~=4.61.2) ; extra == 'dev'",
      "ordered-set (~=4.1.0) ; extra == 'dev'",
      "torchviz (~=0.0.2) ; extra == 'dev'",
      "graphviz (>=0.10.1) ; extra == 'dev'",
      "matplotlib (>=3.0.2) ; extra == 'dev'",
      "mypy (>=0.990) ; extra == 'dev'",
      "pre-commit (>=2.20.0) ; extra == 'dev'",
      "pytest (>=7.2.0) ; extra == 'dev'",
      "pytest-cov (>=4.0.0) ; extra == 'dev'",
      "scikit-learn (>=0.22.1) ; extra == 'dev'",
      "black (>=22.10.0) ; extra == 'dev'",
      "flake8 (>=5.0.4) ; extra == 'dev'",
      "isort (>=5.10.1) ; extra == 'dev'",
      "jupyter (>=1.0.0) ; extra == 'dev'",
      "pyupgrade (==3.2.0) ; extra == 'dev'",
      "scikit-learn (~=1.0.2) ; extra == 'docs'",
      "torch (~=1.13.0) ; extra == 'docs'",
      "pandas (~=1.3.2) ; extra == 'docs'",
      "numpy (~=1.24.0) ; extra == 'docs'",
      "river (~=0.15.0) ; extra == 'docs'",
      "tqdm (~=4.61.2) ; extra == 'docs'",
      "ordered-set (~=4.1.0) ; extra == 'docs'",
      "torchviz (~=0.0.2) ; extra == 'docs'",
      "flask (>=2.0.2) ; extra == 'docs'",
      "ipykernel (>=6.9.0) ; extra == 'docs'",
      "mike (>=0.5.3) ; extra == 'docs'",
      "mkdocs (>=1.2.3) ; extra == 'docs'",
      "mkdocs-awesome-pages-plugin (>=2.7.0) ; extra == 'docs'",
      "mkdocs-gen-files (>=0.3.5) ; extra == 'docs'",
      "mkdocs-charts-plugin (>=0.0.8) ; extra == 'docs'",
      "mkdocs-literate-nav (>=0.4.1) ; extra == 'docs'",
      "mkdocs-material (>=8.1.11) ; extra == 'docs'",
      "mkdocstrings[python] (>=0.19.0) ; extra == 'docs'",
      "pytkdocs[numpy-style] (>=0.5.0) ; extra == 'docs'",
      "ipython-genutils (>=0.1.0) ; extra == 'docs'",
      "mkdocs-jupyter (>=0.20.0) ; extra == 'docs'",
      "nbconvert (>=6.4.2) ; extra == 'docs'",
      "numpydoc (>=1.2) ; extra == 'docs'",
      "spacy (>=3.2.2) ; extra == 'docs'",
      "jinja2 (>=3.0.3) ; extra == 'docs'",
      "dominate ; extra == 'docs'",
      "jupyter-client ; extra == 'docs'",
      "mkdocs-charts-plugin ; extra == 'docs'",
      "python-slugify ; extra == 'docs'",
      "watermark (==2.3.1) ; extra == 'docs'"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Online Deep Learning for river",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17111115,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e9a7cd4dbdf6d6a4721489b6390895c160cef745c3c919cbb22f46881b1564c",
          "md5": "27451188a8ce1c0fc75e23f5f24f777f",
          "sha256": "b3df3a8d83be619f7924ae10d7c6ed97af0e2ce05709d6df08dcff0f85038395"
        },
        "downloads": -1,
        "filename": "deep_river-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27451188a8ce1c0fc75e23f5f24f777f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 34648,
        "upload_time": "2022-12-23T18:16:40",
        "upload_time_iso_8601": "2022-12-23T18:16:40.224802Z",
        "url": "https://files.pythonhosted.org/packages/2e/9a/7cd4dbdf6d6a4721489b6390895c160cef745c3c919cbb22f46881b1564c/deep_river-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63f10edbcf8d2d79d3411996b9c7889e870803da625ab394bad20873dcc85e0f",
          "md5": "81bdcd315689266ecf2c702ec1c9a19c",
          "sha256": "73f3131ecf65f8ab7ca7505a9a024f598bdc10ac0d16d2f15e98e4ef48ccccb4"
        },
        "downloads": -1,
        "filename": "deep_river-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "81bdcd315689266ecf2c702ec1c9a19c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 23340,
        "upload_time": "2022-12-23T18:16:41",
        "upload_time_iso_8601": "2022-12-23T18:16:41.823055Z",
        "url": "https://files.pythonhosted.org/packages/63/f1/0edbcf8d2d79d3411996b9c7889e870803da625ab394bad20873dcc85e0f/deep_river-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2913869576d874da445f2e0bd254bf1b298959970e8f79df24aba84c2fd36f4d",
          "md5": "3a4e219a27c9e18d9f7cb80f978fa81f",
          "sha256": "00a8fba43eb2ee015b937ef440a2419a0b04b0aa3e146c812efeafe3c8c91021"
        },
        "downloads": -1,
        "filename": "deep_river-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a4e219a27c9e18d9f7cb80f978fa81f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 40956,
        "upload_time": "2023-02-15T09:01:44",
        "upload_time_iso_8601": "2023-02-15T09:01:44.247523Z",
        "url": "https://files.pythonhosted.org/packages/29/13/869576d874da445f2e0bd254bf1b298959970e8f79df24aba84c2fd36f4d/deep_river-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8524f3e2171526521b9804bc714cd9229be9762c9e605d5197a98edcddb6d22c",
          "md5": "a2e14fb41238620d2553e1aa34dfef69",
          "sha256": "a8e91490eb2136f2665eee3aa07fb6c55b888da3b5850d608ee6430823abcb61"
        },
        "downloads": -1,
        "filename": "deep_river-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a2e14fb41238620d2553e1aa34dfef69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 27196,
        "upload_time": "2023-02-15T09:01:46",
        "upload_time_iso_8601": "2023-02-15T09:01:46.097225Z",
        "url": "https://files.pythonhosted.org/packages/85/24/f3e2171526521b9804bc714cd9229be9762c9e605d5197a98edcddb6d22c/deep_river-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "489378761a57e8ed7935c1ae3e5119bcdbaa76d2baac2b6c2bcf2128650cce7f",
          "md5": "93601aeebe456bac9ae501744d8d9f58",
          "sha256": "6bbb16bd76dcd98c90edfc37446df35b011ecfa234a7c3e7f49988e790440f7e"
        },
        "downloads": -1,
        "filename": "deep_river-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93601aeebe456bac9ae501744d8d9f58",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 40955,
        "upload_time": "2023-03-01T12:46:43",
        "upload_time_iso_8601": "2023-03-01T12:46:43.670420Z",
        "url": "https://files.pythonhosted.org/packages/48/93/78761a57e8ed7935c1ae3e5119bcdbaa76d2baac2b6c2bcf2128650cce7f/deep_river-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae7c9ead2d81adfcbb14415ddecc768356fa6c3b5888667a5b383204b0c585fc",
          "md5": "1c3b27735f5fd6f19fff10ce3f14b906",
          "sha256": "51e3a20571023f5c40c4c53a804dbc10a0731d3e023c61a8083329f95e22083f"
        },
        "downloads": -1,
        "filename": "deep_river-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1c3b27735f5fd6f19fff10ce3f14b906",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 27126,
        "upload_time": "2023-03-01T12:46:45",
        "upload_time_iso_8601": "2023-03-01T12:46:45.689828Z",
        "url": "https://files.pythonhosted.org/packages/ae/7c/9ead2d81adfcbb14415ddecc768356fa6c3b5888667a5b383204b0c585fc/deep_river-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "489378761a57e8ed7935c1ae3e5119bcdbaa76d2baac2b6c2bcf2128650cce7f",
        "md5": "93601aeebe456bac9ae501744d8d9f58",
        "sha256": "6bbb16bd76dcd98c90edfc37446df35b011ecfa234a7c3e7f49988e790440f7e"
      },
      "downloads": -1,
      "filename": "deep_river-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "93601aeebe456bac9ae501744d8d9f58",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 40955,
      "upload_time": "2023-03-01T12:46:43",
      "upload_time_iso_8601": "2023-03-01T12:46:43.670420Z",
      "url": "https://files.pythonhosted.org/packages/48/93/78761a57e8ed7935c1ae3e5119bcdbaa76d2baac2b6c2bcf2128650cce7f/deep_river-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae7c9ead2d81adfcbb14415ddecc768356fa6c3b5888667a5b383204b0c585fc",
        "md5": "1c3b27735f5fd6f19fff10ce3f14b906",
        "sha256": "51e3a20571023f5c40c4c53a804dbc10a0731d3e023c61a8083329f95e22083f"
      },
      "downloads": -1,
      "filename": "deep_river-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "1c3b27735f5fd6f19fff10ce3f14b906",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 27126,
      "upload_time": "2023-03-01T12:46:45",
      "upload_time_iso_8601": "2023-03-01T12:46:45.689828Z",
      "url": "https://files.pythonhosted.org/packages/ae/7c/9ead2d81adfcbb14415ddecc768356fa6c3b5888667a5b383204b0c585fc/deep_river-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}