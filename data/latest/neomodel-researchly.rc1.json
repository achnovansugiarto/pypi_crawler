{
  "info": {
    "author": "Robin Edwards",
    "author_email": "robin.ge@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Database",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. image:: https://raw.githubusercontent.com/neo4j-contrib/neomodel/master/doc/source/_static/neomodel-300.png\n   :alt: neomodel\n\nAn Object Graph Mapper (OGM) for the neo4j_ graph database, built on the awesome neo4j_driver_\n\n- Familiar class based model definitions with proper inheritance.\n- Powerful query API.\n- Schema enforcement through cardinality restrictions.\n- Full transaction support.\n- Thread safe.\n- Pre/post save/delete hooks.\n- Django integration via django_neomodel_\n\n.. _django_neomodel: https://github.com/neo4j-contrib/django-neomodel\n.. _neo4j: https://neo4j.com/\n.. _neo4j_driver: https://github.com/neo4j/neo4j-python-driver\n\n.. image:: https://secure.travis-ci.org/neo4j-contrib/neomodel.png\n    :target: https://secure.travis-ci.org/neo4j-contrib/neomodel/\n\n.. image:: https://readthedocs.org/projects/neomodel/badge/?version=latest\n    :alt: Documentation Status\n    :scale: 100%\n    :target: https://neomodel.readthedocs.io/en/latest/?badge=latest\n\n\nDocumentation\n=============\n\nAvailable on readthedocs_.\n\n.. _readthedocs: http://neomodel.readthedocs.org\n\nRequirements\n============\n\n- Python 3.5+ - Neo4j Python Driver 4.1 https://neo4j.com/docs/api/python-driver/current/\n- neo4j 3.5, 4.0, 4.1 - Neo4j Python Driver 4.1 https://neo4j.com/docs/api/python-driver/current/\n\nInstallation\n============\n\nInstall from pypi (recommended)::\n\n    $ pip install neomodel ($ source dev # To install all things needed in a Python3 venv)\n\nTo install from github::\n\n    $ pip install git+git://github.com/neo4j-contrib/neomodel.git@HEAD#egg=neomodel-dev\n\nUpgrading 2.x to 3.x\n====================\n\n * Now utilises neo4j_driver as the backend which uses bolt so neo4j 3 is required\n * Connection now set through config.DATABASE_URL (see getting started docs)\n * The deprecated category() method on StructuredNode has been removed\n * The deprecated index property on StructuredNode has been removed\n * The streaming=True flag is now irrelevant with bolt and produces a deprecation warning\n * Batch operations must now be wrapped in a transaction in order to be atomic\n * Indexing NodeSets returns a single node now as opposed to a list\n\nContributing\n============\n\nIdeas, bugs, tests and pull requests always welcome. \n\nAs of release `3.3.2` we now have a curated list of issues / development targets for\n`neomodel` available on `the Wiki <https://github.com/neo4j-contrib/neomodel/wiki/TODOs-&-Enhancements>`_.\n\nIf you are interested in developing `neomodel` further, pick a subject from the list and open a Pull Request (PR) for \nit. If you are adding a feature that is not captured in that list yet, consider if the work for it could also \ncontribute towards delivering any of the existing todo items too.\n\nRunning the test suite\n----------------------\n\nMake sure you have a Neo4j database version 3 or higher to run the tests on.::\n\n    $ export NEO4J_BOLT_URL=bolt://<username>:<password>@localhost:7687 # check your username and password\n\nEnsure `dbms.security.auth_enabled=true` in your database configuration file.\nSetup a virtual environment, install neomodel for development and run the test suite::\n\n    $ source dev\n    $ pytest\n\nIf you are running a neo4j database for the first time the test suite will set the password to 'test'.\nIf the database is already populated, the test suite will abort with an error message and ask you to re-run it with the\n`--resetdb` switch. This is a safeguard to ensure that the test suite does not accidentally wipe out a database if you happen to not have restarted your Neo4j server to point to a (usually named) `debug.db` database.\n\nIf you have ``docker-compose`` installed, you can run the test suite against all supported Python\ninterpreters and neo4j versions::\n\n    # in the project's root folder:\n    $ ./tests-with-docker-compose.sh\n\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n   :alt: Join the chat at https://gitter.im/neo4j-contrib/neomodel\n   :target: https://gitter.im/neo4j-contrib/neomodel?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/neo4j-contrib/neomodel",
    "keywords": "graph neo4j ORM OGM",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "neomodel-researchly",
    "package_url": "https://pypi.org/project/neomodel-researchly/",
    "platform": "",
    "project_url": "https://pypi.org/project/neomodel-researchly/",
    "project_urls": {
      "Homepage": "http://github.com/neo4j-contrib/neomodel"
    },
    "release_url": "https://pypi.org/project/neomodel-researchly/4.0.1/",
    "requires_dist": [
      "neo4j-driver (==4.1.1)",
      "pytz (>=2016.10)",
      "neobolt (==1.7.17)",
      "pytest (>=6.0.1)",
      "Shapely (==1.7.1)"
    ],
    "requires_python": "",
    "summary": "An object mapper for the neo4j graph database.",
    "version": "4.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9197715,
  "releases": {
    "4.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ce5bda4c9b189ee6fb0b9421f21c0540ce490dfaf6ed0c2afbde726b4f93126",
          "md5": "69369f1b8af927a281865b3bbc35567e",
          "sha256": "e4893735702e77861e49efb8b4fe44964905a1f0c2c22d5a93d452b15b3a35c3"
        },
        "downloads": -1,
        "filename": "neomodel_researchly-4.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69369f1b8af927a281865b3bbc35567e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44901,
        "upload_time": "2021-01-21T21:05:07",
        "upload_time_iso_8601": "2021-01-21T21:05:07.877841Z",
        "url": "https://files.pythonhosted.org/packages/3c/e5/bda4c9b189ee6fb0b9421f21c0540ce490dfaf6ed0c2afbde726b4f93126/neomodel_researchly-4.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4949407bad7dda3a042c6d9f5e56a2e4d6f114e8f85a3d94f5ece681934dbc76",
          "md5": "ecf3ee053a793b5c0f3b121eb0fed9b9",
          "sha256": "0cd5858679a93f81ea9a026de840639ff694da6ffe8835c0a16c6985d76ce899"
        },
        "downloads": -1,
        "filename": "neomodel_researchly-4.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ecf3ee053a793b5c0f3b121eb0fed9b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 60210,
        "upload_time": "2021-01-21T21:05:09",
        "upload_time_iso_8601": "2021-01-21T21:05:09.167784Z",
        "url": "https://files.pythonhosted.org/packages/49/49/407bad7dda3a042c6d9f5e56a2e4d6f114e8f85a3d94f5ece681934dbc76/neomodel_researchly-4.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ce5bda4c9b189ee6fb0b9421f21c0540ce490dfaf6ed0c2afbde726b4f93126",
        "md5": "69369f1b8af927a281865b3bbc35567e",
        "sha256": "e4893735702e77861e49efb8b4fe44964905a1f0c2c22d5a93d452b15b3a35c3"
      },
      "downloads": -1,
      "filename": "neomodel_researchly-4.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "69369f1b8af927a281865b3bbc35567e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 44901,
      "upload_time": "2021-01-21T21:05:07",
      "upload_time_iso_8601": "2021-01-21T21:05:07.877841Z",
      "url": "https://files.pythonhosted.org/packages/3c/e5/bda4c9b189ee6fb0b9421f21c0540ce490dfaf6ed0c2afbde726b4f93126/neomodel_researchly-4.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4949407bad7dda3a042c6d9f5e56a2e4d6f114e8f85a3d94f5ece681934dbc76",
        "md5": "ecf3ee053a793b5c0f3b121eb0fed9b9",
        "sha256": "0cd5858679a93f81ea9a026de840639ff694da6ffe8835c0a16c6985d76ce899"
      },
      "downloads": -1,
      "filename": "neomodel_researchly-4.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ecf3ee053a793b5c0f3b121eb0fed9b9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 60210,
      "upload_time": "2021-01-21T21:05:09",
      "upload_time_iso_8601": "2021-01-21T21:05:09.167784Z",
      "url": "https://files.pythonhosted.org/packages/49/49/407bad7dda3a042c6d9f5e56a2e4d6f114e8f85a3d94f5ece681934dbc76/neomodel_researchly-4.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}