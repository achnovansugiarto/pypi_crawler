{
  "info": {
    "author": "Zan Anderle",
    "author_email": "hello@zanderle.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 2.1",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Django Single File Templates\n============================\n\n[![image](https://badge.fury.io/py/django-sft.svg)](https://badge.fury.io/py/django-sft.svg)\n\n[![Python 3.x](https://img.shields.io/pypi/pyversions/django-sft.svg?logo=python&logoColor=white)](https://pypi.org/project/django-sft/)\n\nDjango Single File Templates \\-- inspired by Vue's Single file\ncomponents\n\nMake your Django templates more organized by holding your HTML and all the related CSS and JavaScript in a sensible way.\n\n`example.sft`\n```html\n<template>\n{% extends 'example/base.sft' %}}\n{% block main %}\n    <h1>This is index page</h1>\n    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugit eaque obcaecati maxime eos inventore tenetur, debitis atque quaerat modi, et illum id error quisquam consequatur reprehenderit, laboriosam exercitationem, provident aut.</p>\n\n    <h2 id=\"time\"></h2>\n{% endblock %}\n</template>\n\n<script>\ndocument.getElementById('time').innerHTML = new Date();\n</script>\n\n<style>\np {\n    width: 50%;\n    background-color: white;\n    margin: auto;\n}\n</style>\n```\n> Disclaimer: This package serves as a proof of concept rather than a production-ready solution!\n\nMotivation\n----------\n\nFrom Vue\\'s documentation:\n\n> One important thing to note is that separation of concerns is not\n> equal to separation of file types. In modern UI development, we have\n> found that instead of dividing the codebase into three huge layers\n> that interweave with one another, it makes much more sense to divide\n> them into loosely-coupled components and compose them. Inside a\n> component, its template, logic and styles are inherently coupled, and\n> collocating them actually makes the component more cohesive and\n> maintainable.\n\nSimilar logic could be applied to Django's templates. HTML, JavaScript\nand CSS are inherently coupled so it makes sense to put them together.\n\nIntroducing **Django Single File Templates (SFT)**.\n\nQuickstart\n----------\n\nInstall Django Single File Templates:\n\n    pip install django-sft\n\nAdd it to your `INSTALLED_APPS`:\n\n```python\nINSTALLED_APPS = (\n    ...\n    'django_sft',\n    ...\n)\n```\n\nAdd SFT Template loader (in your settings.py):\n\n```python\nTEMPLATES = [\n    {\n        ...\n        'OPTIONS': {\n            'loaders': [\n                'django_sft.template.SFTLoader',\n                'django.template.loaders.filesystem.Loader',\n                'django.template.loaders.app_directories.Loader',\n            ],\n            ...\n        }\n    }\n]\n```\n\nYou can now start using Single file templates as your templates.\n\nUsage\n-----\n\nAdd a new SFT by adding a `.sft` file to your `templates` folder (either\nin your apps or root templates folder). SFT should include at least HTML\n(you can use Django\\'s template language), but it can also include\nscript and style tags:\n\n```html\n<template>\n{% load static %}\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Example Website</title>\n    </head>\n    <body>\n        <header>\n            <nav>\n                <a href=\"/\">Home</a>\n                <a href=\"/page\" id=\"page\">Page</a>\n            </nav>\n        </header>\n        {% block main %}\n        <h1>This is where the content will go</h1>\n        {% endblock %}\n    </body>\n</html>\n</template>\n<script>\nconst page = document.getElementById('page');\npage.addEventListener('click', (ev) => {\n  ev.preventDefault();\n  alert('You clicked the page');\n});\n</script>\n\n<style>\nbody {\n  background-color: gray;\n}\n</style>\n```\n\nIn your views you can render this template directly and SFT Template\nloader will get the right template for you.\n\n```python\ndef view(request):\n    return render('my-template.sft')\n```\n\nSingle file templates can also extend other STFs.\n\n```html\n<template>\n{% extends 'example/base.sft' %}}\n{% block main %}\n    <h1>This is index page</h1>\n    <h2>Update</h2>\n    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugit eaque obcaecati maxime eos inventore tenetur, debitis atque quaerat modi, et illum id error quisquam consequatur reprehenderit, laboriosam exercitationem, provident aut.</p>\n\n    <h2 id=\"time\"></h2>\n{% endblock %}\n</template>\n\n<script>\ndocument.getElementById('time').innerHTML = new Date();\n</script>\n\n<style>\np {\n    width: 50%;\n    background-color: white;\n    margin: auto;\n}\n</style>\n```\n\nIt can also include external scripts and styles (bootstrap example):\n\n```html\n<template>\n...\n</template>\n\n<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js\"></script>\n\n<script>\nconst page = document.getElementById('page');\npage.addEventListener('click', (ev) => {\n  ev.preventDefault();\n  alert('You clicked the page');\n});\n</script>\n\n<style src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\"></style>\n\n<style>\nbody {\n  background-color: gray;\n}\n</style>\n```\n\nSingle file templates will automatically be parsed and compiled when you\n`manage.py runserver` if `DEBUG = True`. You can also run\n`manage.py compile_sft` to compile manually.\n\nHow does it work?\n-----------------\n\nWhen SFT is compiled (on `runserver` or manually), django-sft will grab\nthe SFT file and produce appropriate `.js`, `.css` and `.html` files.\nThey will be created in `sft` directory (under `static` and `templates`\ndirectories respectively). The html files will be automatically injected\nwith references to the static files. When a view will try to render\n`.sft` template, the SFT Template Loader will look for resulting `.html`\nfile instead and return that.\n\nThe current implementation is quite simple and serves as a proof of\nconcept rather than a production-ready solution.\n\nLook for a working example under [tests folder](tests).\n\nFeatures\n--------\n\n-   TODO\n\nRunning Tests\n-------------\n\n-   TODO: no tests written yet\n\nDoes the code actually work?\n\n    source <YOURVIRTUALENV>/bin/activate\n    (myenv) $ pip install tox\n    (myenv) $ tox\n\nCredits\n-------\n\nTools used in rendering this package:\n\n-   [Cookiecutter](https://github.com/audreyr/cookiecutter)\n-   [cookiecutter-djangopackage](https://github.com/pydanny/cookiecutter-djangopackage)\n\n\n\n\nHistory\n-------\n\n0.1.2 (2020-11-20)\n++++++++++++++++++\n\n* Enable external scripts and styles\n* Enable multiple scripts and styles per file\n\n0.1.1 (2020-11-16)\n++++++++++++++++++\n\n* Bug fixes\n\n\n0.1.0 (2020-11-12)\n++++++++++++++++++\n\n* First release on PyPI.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zanderle/django-sft",
    "keywords": "django-sft",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-sft",
    "package_url": "https://pypi.org/project/django-sft/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-sft/",
    "project_urls": {
      "Homepage": "https://github.com/zanderle/django-sft"
    },
    "release_url": "https://pypi.org/project/django-sft/0.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django Single File Templates -- inspired by Vue's Single file components",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8710697,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "831789d132558c7e39ad19e89d7c489e6a4de7ec5f3d11e768f0e207f18b0e5a",
          "md5": "95941bb766ecb686d8c95c3813c050f5",
          "sha256": "53a56d4788fb88696da1f435c0ecf2e63da72aaa7175bcc0dc1d8ef4e02b6c87"
        },
        "downloads": -1,
        "filename": "django_sft-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95941bb766ecb686d8c95c3813c050f5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9722,
        "upload_time": "2020-11-16T17:43:33",
        "upload_time_iso_8601": "2020-11-16T17:43:33.614862Z",
        "url": "https://files.pythonhosted.org/packages/83/17/89d132558c7e39ad19e89d7c489e6a4de7ec5f3d11e768f0e207f18b0e5a/django_sft-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3da73c2ba4ef063ed363eca3cc776eb00d3497a690bc2d9eff41211143211075",
          "md5": "68ceb342cadac0b122b0dccf4ee57694",
          "sha256": "2c01463e15f6a44bf168d4510425247e3782ecc1d2c7dcfca8c49371d68a0580"
        },
        "downloads": -1,
        "filename": "django-sft-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "68ceb342cadac0b122b0dccf4ee57694",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12643,
        "upload_time": "2020-11-16T17:43:35",
        "upload_time_iso_8601": "2020-11-16T17:43:35.166536Z",
        "url": "https://files.pythonhosted.org/packages/3d/a7/3c2ba4ef063ed363eca3cc776eb00d3497a690bc2d9eff41211143211075/django-sft-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "453d936f2dc4cf4b9adf84e775e0ef27ce3dfade97ac8d136e563f9ba0e5857c",
          "md5": "e7c98d0311e6db0b5cb6f5f7e2a19dd7",
          "sha256": "43de296aab08197b0b93211e748634e7f9482073569b81aff9ff339085c556a6"
        },
        "downloads": -1,
        "filename": "django_sft-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7c98d0311e6db0b5cb6f5f7e2a19dd7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9809,
        "upload_time": "2020-11-16T22:15:00",
        "upload_time_iso_8601": "2020-11-16T22:15:00.203029Z",
        "url": "https://files.pythonhosted.org/packages/45/3d/936f2dc4cf4b9adf84e775e0ef27ce3dfade97ac8d136e563f9ba0e5857c/django_sft-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6771cfe057ef30dddf3dc079d3f40fc7fc8e9c4aeffe13f192fa500181410974",
          "md5": "a99dfe5665fe65f5b7836db7542f436b",
          "sha256": "27e42d26c444f0175fdcb008be86e344802431e4ca0a6a6c9b7d5fbd17fbb65f"
        },
        "downloads": -1,
        "filename": "django-sft-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a99dfe5665fe65f5b7836db7542f436b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12744,
        "upload_time": "2020-11-16T22:15:01",
        "upload_time_iso_8601": "2020-11-16T22:15:01.642782Z",
        "url": "https://files.pythonhosted.org/packages/67/71/cfe057ef30dddf3dc079d3f40fc7fc8e9c4aeffe13f192fa500181410974/django-sft-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c7d8612b4aa4a355b7942c2ea181700f285d3c1df706e35269a2b15ead438fb",
          "md5": "d9f37139bef8b17d85095a2cefbf601f",
          "sha256": "2c8250bf5fab7233bdab7f3ef001aa30f8978f07b5b91dd4b576e04132dbcdef"
        },
        "downloads": -1,
        "filename": "django_sft-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9f37139bef8b17d85095a2cefbf601f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 10747,
        "upload_time": "2020-11-20T18:10:49",
        "upload_time_iso_8601": "2020-11-20T18:10:49.139903Z",
        "url": "https://files.pythonhosted.org/packages/7c/7d/8612b4aa4a355b7942c2ea181700f285d3c1df706e35269a2b15ead438fb/django_sft-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "902660f6f817b8e36455749b12c7eb2612bef9956b324b175796cc458d0db09a",
          "md5": "88e319698adee185ed5a9ab65a7daa52",
          "sha256": "50ea64f9ed620b09db17578b41bb1f7470c0ef6b1588b72ff151ddd2d19a5970"
        },
        "downloads": -1,
        "filename": "django-sft-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "88e319698adee185ed5a9ab65a7daa52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13998,
        "upload_time": "2020-11-20T18:10:50",
        "upload_time_iso_8601": "2020-11-20T18:10:50.318083Z",
        "url": "https://files.pythonhosted.org/packages/90/26/60f6f817b8e36455749b12c7eb2612bef9956b324b175796cc458d0db09a/django-sft-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7c7d8612b4aa4a355b7942c2ea181700f285d3c1df706e35269a2b15ead438fb",
        "md5": "d9f37139bef8b17d85095a2cefbf601f",
        "sha256": "2c8250bf5fab7233bdab7f3ef001aa30f8978f07b5b91dd4b576e04132dbcdef"
      },
      "downloads": -1,
      "filename": "django_sft-0.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d9f37139bef8b17d85095a2cefbf601f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 10747,
      "upload_time": "2020-11-20T18:10:49",
      "upload_time_iso_8601": "2020-11-20T18:10:49.139903Z",
      "url": "https://files.pythonhosted.org/packages/7c/7d/8612b4aa4a355b7942c2ea181700f285d3c1df706e35269a2b15ead438fb/django_sft-0.1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "902660f6f817b8e36455749b12c7eb2612bef9956b324b175796cc458d0db09a",
        "md5": "88e319698adee185ed5a9ab65a7daa52",
        "sha256": "50ea64f9ed620b09db17578b41bb1f7470c0ef6b1588b72ff151ddd2d19a5970"
      },
      "downloads": -1,
      "filename": "django-sft-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "88e319698adee185ed5a9ab65a7daa52",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13998,
      "upload_time": "2020-11-20T18:10:50",
      "upload_time_iso_8601": "2020-11-20T18:10:50.318083Z",
      "url": "https://files.pythonhosted.org/packages/90/26/60f6f817b8e36455749b12c7eb2612bef9956b324b175796cc458d0db09a/django-sft-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}