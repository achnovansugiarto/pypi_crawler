{
  "info": {
    "author": "Ercin TORUN",
    "author_email": "ercintorun@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# simplefetch\nSimplified Paramiko Library to Fetch Data From MultiVendor Network Devices\n\n# Supports\n\n* Cisco IOS\n* Cisco IOS-XE\n* Cisco NX-OS\n* Cisco IOS-XR\n* Juniper Junos\n* Huawei VRP5/8\n* ZTE ZXROS \n* DELL OS10\n* Ericsson IPOS\n\nScript is based on paramiko and catches device-prompt to understand the output is fetched, thus there is a strong possibility that script could work with many network devices from different vendors, i  only do not have the chance to test.\n\n# Accepted Network Device OS Types\n* huawei-vrp\n* cisco-ios\n* cisco-iosxe\n* cisco-iosxr\n* cisco-nxos\n* junos\n* dell-os10\n* zte-zxros \n* ericsson-ipos\n* nokia-sros\n\nFor the above device type pagination commands (e.g. \"terminal length 0\") send automatically. \n\n# Simple Example\n```\nimport simplefetch\n\ntest_router = simplefetch.SSH(\"192.168.1.1\", port=22,user=\"admin\", passwd=\"secret\", network_os=\"cisco-ios\")\nprint (test_router.fetchdata(\"show version\"))\ntest_router.disconnect()\n```\n\n# Example with Logging \n\n```\nimport simplefetch,logging\nlogging.basicConfig(filename='info.log', filemode='a', level=logging.INFO,\n                    format='%(asctime)s [%(name)s] %(levelname)s (%(threadName)-10s): %(message)s')\n\ntest_router = simplefetch.SSH(\"192.168.1.1\" port=22, user=\"admin\", passwd=\"secret\", network_os=\"cisco-ios\")\nprint (test_router.fetchdata(\"show version\"))\ntest_router.disconnect() \n```\n# Example with Multithreading Python3\n```\n# -*- coding: utf-8 -*-\nimport simplefetch\nimport logging, time\nfrom threading import Thread\ntimestr = time.strftime(\"%Y%m%d-%H%M%S\")\nlog_filename=\"connection_logs\"+str(timestr)+\".txt\"\n\n#================== Logging\nlogging.basicConfig(filename=log_filename, filemode='a', level=logging.INFO,\n                    format='%(asctime)s [%(name)s] %(levelname)s (%(threadName)-10s): %(message)s')\n\n#==================USER, PASS, ROUTER_LIST==============\nusername= \"username\"\npassword=\"password\"\nrouter_list=[\"router_name1\",\"192.168.1.1\"]\n\n#================== MEMORY check function for huawei devices\ndef get_memory_usages(router_name):\n\ttry:\n\t\tconnection = simplefetch.SSH(user=username, passwd=password, network_os=\"huawei-vrp\")\n\t\ttry:\n\t\t\tdisplay_health_raw= connection.fetchdata(\"display startup\")\n\t\t\tprint (router_name)\n\t\t\tprint (display_health_raw)\n\t\texcept:\n\t\t\tlogging.warning (\"could not get output of command from %s\",router_name)\n\t\t\tconnection.disconnect()\n\texcept:\n\t\tlogging.warning (\"connection unsuccessful to %s\",router_name)\n\n#================== multithread part \nimport concurrent.futures \nwith concurrent.futures.ThreadPoolExecutor(max_workers=10) as executor: \n\tfor items in router_list:\n\t\texecutor.submit(get_memory_usages,items) \nexecutor.shutdown(wait=True)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ercintorun/simplefetch",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "simplefetch",
    "package_url": "https://pypi.org/project/simplefetch/",
    "platform": "",
    "project_url": "https://pypi.org/project/simplefetch/",
    "project_urls": {
      "Homepage": "https://github.com/ercintorun/simplefetch"
    },
    "release_url": "https://pypi.org/project/simplefetch/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Simplified Paramiko Library to Fetch Data From MultiVendor Network Devices",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8614442,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "724ec9dbdb540f1250b4e9d01742d05a6d773ba68d2bdf8750a31ab8f6eda88b",
          "md5": "c26498427ad1b8834ea2e2f4527ea8f6",
          "sha256": "76985eb8c40ae297fa2271ee17cb1085e4fd79387272cc65cc54a7f2df1aacf8"
        },
        "downloads": -1,
        "filename": "simplefetch-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c26498427ad1b8834ea2e2f4527ea8f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10287,
        "upload_time": "2020-11-09T14:41:01",
        "upload_time_iso_8601": "2020-11-09T14:41:01.102962Z",
        "url": "https://files.pythonhosted.org/packages/72/4e/c9dbdb540f1250b4e9d01742d05a6d773ba68d2bdf8750a31ab8f6eda88b/simplefetch-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92d6036a5de8812867187888c808e5b630d70c61cccdd410c384b38304479246",
          "md5": "a5e60ec917a0b87513ef098b21fc28bd",
          "sha256": "e2625e033f53c8373cd525551ce115cdb8855cfa759ec1b4f5e73f48c76dd6a1"
        },
        "downloads": -1,
        "filename": "simplefetch-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a5e60ec917a0b87513ef098b21fc28bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4628,
        "upload_time": "2020-11-09T14:41:16",
        "upload_time_iso_8601": "2020-11-09T14:41:16.391069Z",
        "url": "https://files.pythonhosted.org/packages/92/d6/036a5de8812867187888c808e5b630d70c61cccdd410c384b38304479246/simplefetch-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "724ec9dbdb540f1250b4e9d01742d05a6d773ba68d2bdf8750a31ab8f6eda88b",
        "md5": "c26498427ad1b8834ea2e2f4527ea8f6",
        "sha256": "76985eb8c40ae297fa2271ee17cb1085e4fd79387272cc65cc54a7f2df1aacf8"
      },
      "downloads": -1,
      "filename": "simplefetch-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c26498427ad1b8834ea2e2f4527ea8f6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10287,
      "upload_time": "2020-11-09T14:41:01",
      "upload_time_iso_8601": "2020-11-09T14:41:01.102962Z",
      "url": "https://files.pythonhosted.org/packages/72/4e/c9dbdb540f1250b4e9d01742d05a6d773ba68d2bdf8750a31ab8f6eda88b/simplefetch-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92d6036a5de8812867187888c808e5b630d70c61cccdd410c384b38304479246",
        "md5": "a5e60ec917a0b87513ef098b21fc28bd",
        "sha256": "e2625e033f53c8373cd525551ce115cdb8855cfa759ec1b4f5e73f48c76dd6a1"
      },
      "downloads": -1,
      "filename": "simplefetch-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a5e60ec917a0b87513ef098b21fc28bd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4628,
      "upload_time": "2020-11-09T14:41:16",
      "upload_time_iso_8601": "2020-11-09T14:41:16.391069Z",
      "url": "https://files.pythonhosted.org/packages/92/d6/036a5de8812867187888c808e5b630d70c61cccdd410c384b38304479246/simplefetch-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}