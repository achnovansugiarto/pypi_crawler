{
  "info": {
    "author": "\"Webis Group\"",
    "author_email": "\"jan.reimer@student.uni-halle.de\"",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "[![PyPi](https://img.shields.io/pypi/v/ir_axioms?style=flat-square)](https://pypi.org/project/ir_axioms/)\n[![LGTM](https://img.shields.io/lgtm/grade/python/github/webis-de/ir_axioms.svg?style=flat-square)](https://lgtm.com/projects/g/webis-de/ir_axioms)\n[![CI](https://img.shields.io/github/workflow/status/webis-de/ir_axioms/CI?style=flat-square)](https://github.com/webis-de/ir_axioms/actions?query=workflow%3A\"CI\")\n[![Code coverage](https://img.shields.io/codecov/c/github/webis-de/ir_axioms?style=flat-square)](https://codecov.io/github/webis-de/ir_axioms/)\n[![Python](https://img.shields.io/pypi/pyversions/ir_axioms?style=flat-square)](https://pypi.org/project/ir_axioms/)\n[![Issues](https://img.shields.io/github/issues/webis-de/ir_axioms?style=flat-square)](https://github.com/webis-de/ir_axioms/issues)\n[![Commit activity](https://img.shields.io/github/commit-activity/m/webis-de/ir_axioms?style=flat-square)](https://github.com/webis-de/ir_axioms/commits)\n[![Downloads](https://img.shields.io/pypi/dm/ir_axioms?style=flat-square)](https://pypi.org/project/ir_axioms/)\n[![License](https://img.shields.io/github/license/webis-de/ir_axioms?style=flat-square)](LICENSE)\n\n# ↕️ ir_axioms\n\nIntuitive axiomatic retrieval experimentation.\n\n`ir_axioms` is a Python framework for experimenting with axioms in information retrieval in a declarative way. \nIt includes reference implementations of many commonly used retrieval axioms and is well integrated with the [PyTerrier](https://github.com/terrier-org/pyterrier) framework and the [Pyserini](https://github.com/castorini/pyserini) toolkit.\nRe-rank your search results today with `ir_axioms` and understand your retrieval systems better by analyzing\naxiomatic preferences!\n\n## Usage\n\n### Example Notebooks\n\nWe include several example notebooks to demonstrate re-ranking and preference evaluation in [PyTerrier](https://github.com/terrier-org/pyterrier) using `ir_axioms`.\nYou can find all examples in the [`examples/` directory](examples).\n\n- [Re-ranking top-20 results using KwikSort](examples/pyterrier_kwiksort.ipynb)\n  [![Launch Binder](https://img.shields.io/badge/open%20in-colab-informational?style=flat-square)](https://colab.research.google.com/github/webis-de/ir_axioms/blob/main/examples/pyterrier_kwiksort.ipynb)\n- [Re-ranking top-20 results using KwikSort learned from ORACLE preferences](examples/pyterrier_kwiksort_learned.ipynb)\n  [![Launch Binder](https://img.shields.io/badge/open%20in-colab-informational?style=flat-square)](https://colab.research.google.com/github/webis-de/ir_axioms/blob/main/examples/pyterrier_kwiksort_learned.ipynb)\n- [Re-ranking top-20 results using LambdaMART with axiomatic preference features](examples/pyterrier_ltr_features.ipynb)\n  [![Launch Binder](https://img.shields.io/badge/open%20in-colab-informational?style=flat-square)](https://colab.research.google.com/github/webis-de/ir_axioms/blob/main/examples/pyterrier_ltr_features.ipynb)\n- [Post-Hoc Analysis of Rankings and Relevance Judgments](examples/pyterrier_post_hoc_analysis_of_runs_and_qrels.ipynb)\n- [![Launch Binder](https://img.shields.io/badge/open%20in-colab-informational?style=flat-square)](https://colab.research.google.com/github/webis-de/ir_axioms/blob/main/examples/pyterrier_post_hoc_analysis_of_runs_and_qrels.ipynb)\n- [Axiomatic prefernces for TREC Deep Learning 2019 runs (passages)](examples/trec_28_deep_passages_preferences_depth_10.ipynb)\n  [![Launch Binder](https://img.shields.io/badge/open%20in-colab-informational?style=flat-square)](https://colab.research.google.com/github/webis-de/ir_axioms/blob/main/examples/trec_28_deep_passages_preferences_depth_10.ipynb)\n- [Axiomatic prefernces for TREC Deep Learning 2019 runs (documents)](examples/trec_28_deep_documents_preferences_depth_10.ipynb)\n  [![Launch Binder](https://img.shields.io/badge/open%20in-colab-informational?style=flat-square)](https://colab.research.google.com/github/webis-de/ir_axioms/blob/main/examples/trec_28_deep_documents_preferences_depth_10.ipynb)\n- [Axiomatic prefernces for TREC Deep Learning 2020 runs (passages)](examples/trec_29_deep_passages_preferences_depth_10.ipynb)\n  [![Launch Binder](https://img.shields.io/badge/open%20in-colab-informational?style=flat-square)](https://colab.research.google.com/github/webis-de/ir_axioms/blob/main/examples/trec_29_deep_passages_preferences_depth_10.ipynb)\n- [Axiomatic prefernces for TREC Deep Learning 2020 runs (documents)](examples/trec_29_deep_documents_preferences_depth_10.ipynb)\n  [![Launch Binder](https://img.shields.io/badge/open%20in-colab-informational?style=flat-square)](https://colab.research.google.com/github/webis-de/ir_axioms/blob/main/examples/trec_29_deep_documents_preferences_depth_10.ipynb)\n\n### Backends\n\nTODO\n\n### Slurm\n\nIf you want to play around with `ir_axioms` in Jupyter Lab, you can use this command to provision a server via Slurm:\n\n```shell\nscripts/slurm-start-jupyter-lab.sh\n```\n\n## Citation\n\nIf you use this package or its components in your research, please cite the following paper describing the `ir_axioms`\nframework and its use-cases:\n\n> Alexander Bondarenko, Maik Fröbe, Jan Heinrich Reimer, Benno Stein, Michael Völske, and Matthias Hagen. [Axiomatic Retrieval Experimentation with `ir_axioms`](https://webis.de/publications.html?q=ir_axioms#bondarenko_2022d). In _45th International ACM Conference on Research and Development in Information Retrieval (SIGIR 2022)_, July 2022. ACM.\n\nYou can use the following BibTeX entry for citation:\n\n```bibtex\n@InProceedings{bondarenko:2022d,\n  author =                {Alexander Bondarenko and Maik Fr{\\\"o}be and {Jan Heinrich} Reimer and Benno Stein and Michael V{\\\"o}lske and Matthias Hagen},\n  booktitle =             {45th International ACM Conference on Research and Development in Information Retrieval (SIGIR 2022)},\n  month =                 jul,\n  publisher =             {ACM},\n  site =                  {Madrid, Spain},\n  title =                 {{Axiomatic Retrieval Experimentation with ir_axioms}},\n  year =                  2022\n}\n```\n\n## Development\n\nTo build `ir_axioms` and contribute to its development you need to install the `build`, and `setuptools` and `wheel` packages:\n\n```shell\npip install build setuptools wheel\n```\n\n(On most systems, these packages are already pre-installed.)\n\n### Installation\n\nInstall dependencies for developing the `ir_axioms` package:\n\n```shell\npip install -e .\n```\n\nIf you want to develop the [Pyserini](https://github.com/castorini/pyserini) backend, install dependencies like this:\n\n```shell\npip install -e .[pyserini]\n```\n\nIf you want to develop the [PyTerrier](https://github.com/terrier-org/pyterrier) backend, install dependencies like\nthis:\n\n```shell\npip install -e .[pyterrier]\n```\n\n### Testing\n\nInstall test dependencies:\n\n```shell\npip install -e .[test]\n```\n\nVerify your changes against our test suite to verify.\n\n```shell\nflake8 ir_axioms tests\npylint -E ir_axioms tests.unit --ignore-paths=^ir_axioms.backend\npytest ir_axioms/ tests/unit/ --ignore=ir_axioms/backend/\n```\n\nPlease also add tests for the axioms or integrations you've added.\n\n#### Testing backend integrations\n\nInstall test dependencies (replace `<BACKEND>` with either `pyserini` or `pyterrier`):\n\n```shell\npip install -e .[<BACKEND>]\n```\n\nVerify your changes against our test suite to verify.\n\n```shell\npylint -E ir_axioms.backend.<BACKEND> tests.integration.<BACKEND>\npytest tests/integration/<BACKEND>/\n```\n\n### Build wheel\n\nA wheel for this package can be built by running:\n\n```shell\npython -m build\n```\n\n## License\n\nThis repository is released under the [MIT license](LICENSE). If you use `ir_axioms` in your research, we'd be glad if\nyou'd [cite us](#citation).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/webis-de/ir_axioms",
    "keywords": "",
    "license": "",
    "maintainer": "Webis Group",
    "maintainer_email": "",
    "name": "ir-axioms",
    "package_url": "https://pypi.org/project/ir-axioms/",
    "platform": null,
    "project_url": "https://pypi.org/project/ir-axioms/",
    "project_urls": {
      "Bug Tracker": "https://github.com/webis-de/ir_axioms/issues",
      "Homepage": "https://github.com/webis-de/ir_axioms"
    },
    "release_url": "https://pypi.org/project/ir-axioms/0.1.3/",
    "requires_dist": [
      "nltk (==3.*,>=3.6)",
      "pymagnitude (==0.1.*,>=0.1.143)",
      "requests (==2.*,>=2.26)",
      "targer-api (==1.*,>=1.0)",
      "trectools (==0.0.*,>=0.0.44)",
      "class-registry (==2.*,>=2.1)",
      "pandas (==1.*,>=1.3)",
      "tqdm (==4.*,>=4.8)",
      "ir-datasets (==0.*,>=0.4)",
      "numpy (==1.*,>=1.21)",
      "diskcache (==5.*,>=5.4)",
      "scikit-learn (==1.*,>=1.0)",
      "typing-extensions (==4.*,>=4.0)",
      "cached-property (==1.*,>=1.5)",
      "annoy (==1.*,>=1.17)",
      "importlib-metadata (==4.*,>=4.0)",
      "jupyter (==1.*,>=1.0) ; extra == 'examples'",
      "jupyterlab (==3.*,>=3.2) ; extra == 'examples'",
      "lightgbm (==3.*,>=3.3) ; extra == 'examples'",
      "xgboost (==1.*,>=1.5) ; extra == 'examples'",
      "pyserini (==0.14.*,>=0.14.0) ; extra == 'pyserini'",
      "pyjnius (==1.*,>=1.4) ; extra == 'pyserini'",
      "faiss-cpu (==1.*,>=1.7) ; extra == 'pyserini'",
      "python-terrier (==0.*,>=0.8) ; extra == 'pyterrier'",
      "pyjnius (==1.3.*,>=1.3.0) ; extra == 'pyterrier'",
      "flake8 (==4.*,>=4.0) ; extra == 'test'",
      "pylint (==2.*,>=2.12) ; extra == 'test'",
      "pytest (==6.*,>=6.2) ; extra == 'test'",
      "pytest-cov (==3.*,>=3.0) ; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "Intuitive interface to many IR axioms.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13619137,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f13fad1707b097876ae454b67d1ef5fc3c7e13fd22374b6ecaff2b3f4b1b2a28",
          "md5": "f05ba823b413dea4d43a6c54d147e941",
          "sha256": "bb57fe3332852f465bbe60954cc73981c20b93c6b4c340b284c30fb6cfddd85f"
        },
        "downloads": -1,
        "filename": "ir_axioms-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f05ba823b413dea4d43a6c54d147e941",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 59371,
        "upload_time": "2022-02-20T14:03:05",
        "upload_time_iso_8601": "2022-02-20T14:03:05.503535Z",
        "url": "https://files.pythonhosted.org/packages/f1/3f/ad1707b097876ae454b67d1ef5fc3c7e13fd22374b6ecaff2b3f4b1b2a28/ir_axioms-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3e8e9052caabb20125503224248352c9aaebf8c2086bf3177dd1ab2a24f966c",
          "md5": "5b5320d2430cbb20b58de70861fbceb1",
          "sha256": "910a838f6725cae2ff7535f3d3a2360a0ec8d31268014d425aa752088b3b1468"
        },
        "downloads": -1,
        "filename": "ir_axioms-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5b5320d2430cbb20b58de70861fbceb1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 40651,
        "upload_time": "2022-02-20T14:03:07",
        "upload_time_iso_8601": "2022-02-20T14:03:07.288969Z",
        "url": "https://files.pythonhosted.org/packages/d3/e8/e9052caabb20125503224248352c9aaebf8c2086bf3177dd1ab2a24f966c/ir_axioms-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45d44afd30b888c7caac2f3ab3adc6dab00783bf75f820277a9588470d1a205f",
          "md5": "4af1d7a720ec023ef0e268f68e3f925d",
          "sha256": "28b4684b78d8c405af34089e2ae06ee1dc21b3bd02f70ea09db7c4dda1076287"
        },
        "downloads": -1,
        "filename": "ir_axioms-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4af1d7a720ec023ef0e268f68e3f925d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 182723,
        "upload_time": "2022-04-25T20:06:42",
        "upload_time_iso_8601": "2022-04-25T20:06:42.288158Z",
        "url": "https://files.pythonhosted.org/packages/45/d4/4afd30b888c7caac2f3ab3adc6dab00783bf75f820277a9588470d1a205f/ir_axioms-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b110f10559ff09d49c19c043624fe071be47b1a34ebbc17fe4476b5b10ecd82",
          "md5": "927945802e5e08fa5654b45a059a1262",
          "sha256": "e28cad1c139390cbe3979db6658a0ef2a122b67696ac4f8a93bf32de94c178e1"
        },
        "downloads": -1,
        "filename": "ir_axioms-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "927945802e5e08fa5654b45a059a1262",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 152159,
        "upload_time": "2022-04-25T20:06:43",
        "upload_time_iso_8601": "2022-04-25T20:06:43.565361Z",
        "url": "https://files.pythonhosted.org/packages/5b/11/0f10559ff09d49c19c043624fe071be47b1a34ebbc17fe4476b5b10ecd82/ir_axioms-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "45d44afd30b888c7caac2f3ab3adc6dab00783bf75f820277a9588470d1a205f",
        "md5": "4af1d7a720ec023ef0e268f68e3f925d",
        "sha256": "28b4684b78d8c405af34089e2ae06ee1dc21b3bd02f70ea09db7c4dda1076287"
      },
      "downloads": -1,
      "filename": "ir_axioms-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4af1d7a720ec023ef0e268f68e3f925d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 182723,
      "upload_time": "2022-04-25T20:06:42",
      "upload_time_iso_8601": "2022-04-25T20:06:42.288158Z",
      "url": "https://files.pythonhosted.org/packages/45/d4/4afd30b888c7caac2f3ab3adc6dab00783bf75f820277a9588470d1a205f/ir_axioms-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b110f10559ff09d49c19c043624fe071be47b1a34ebbc17fe4476b5b10ecd82",
        "md5": "927945802e5e08fa5654b45a059a1262",
        "sha256": "e28cad1c139390cbe3979db6658a0ef2a122b67696ac4f8a93bf32de94c178e1"
      },
      "downloads": -1,
      "filename": "ir_axioms-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "927945802e5e08fa5654b45a059a1262",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 152159,
      "upload_time": "2022-04-25T20:06:43",
      "upload_time_iso_8601": "2022-04-25T20:06:43.565361Z",
      "url": "https://files.pythonhosted.org/packages/5b/11/0f10559ff09d49c19c043624fe071be47b1a34ebbc17fe4476b5b10ecd82/ir_axioms-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}