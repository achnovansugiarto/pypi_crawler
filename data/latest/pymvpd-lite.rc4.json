{
  "info": {
    "author": "Mengting Fang",
    "author_email": "mtfang0707@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# PyMVPD_LITE\n\nThis is a lite version of [PyMVPD](https://github.com/sccnlab/PyMVPD) to model the multivariate interactions between brain regions using fMRI data. You can find a description of the MVPD method in this [article](https://doi.org/10.1371/journal.pcbi.1005799).\n\n[NEW!] We added a preprint with detailed descriptions about the toolbox and example applications. Check it out [here](https://biorxiv.org/cgi/content/short/2021.10.12.464157v1)!\n\n## MVPD Model Family\n1. Linear Regression (LR) Models\n\nAvailable built-in model components:\n* Dimensionality reduction: principal component analysis ([PCA](https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html)), independent component analysis ([ICA](https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.FastICA.html))\n* Regularization: [Lasso](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Lasso.html) (L1), [Ridge](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Ridge.html) (L2), [RidgeCV](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.RidgeCV.html) (L2 with built-in cross-validation)\n* Cross validation: leave k run out\n\n  Example LR models:\n  * [L2_LR](https://github.com/sccnlab/PyMVPD_LITE/tree/main/exp/run_MVPD_L2_LR.py): linear regression model with L2 regularization\n  * [PCA_LR](https://github.com/sccnlab/PyMVPD_LITE/tree/main/exp/run_MVPD_PCA_LR.py): linear regression model with PCA but no regularization\n\nIn addition to the above built-in functions, you can also customize your own functions by adding scripts under [mvpdlite/custom_func](https://github.com/sccnlab/PyMVPD_LITE/tree/main/mvpdlite/custom_func).\n\n## Workflow\n<img src=\"/PyMVPD_LITE_workflow.png\" width=\"750\"/>\n\n## Installation & Dependencies\nThe easiest way to install the package is to execute (possibly in a [new virtual environment](https://packaging.python.org/tutorials/installing-packages/#creating-and-using-virtual-environments)) the following command:\n```\npip install PyMVPD-LITE\n```\nYou can also install from the GitHub [repository](https://github.com/sccnlab/PyMVPD_LITE) to get the most up-to-date version.\n```\ngit clone https://github.com/sccnlab/PyMVPD_LITE.git\npip install -r requirements.txt\n```\nThe following packages need to be installed to use PyMVPD LITE:\n* python >= 3.6\n* nibabel>=3.2.1\n* numpy>=1.19.3\n* scikit-learn>=0.20.1\n* scipy>=1.1.0\n\n## Tutorial\n### Test Dataset\n[Data](https://github.com/sccnlab/PyMVPD_LITE/tree/main/exp/testdata) of one subject from the [_StudyForrest_](http://studyforrest.org) dataset.\n\nPredictor ROI: FFA - fusiform face area, \n\nTarget ROI: GM - gray matter.\n\n* Raw data were first preprocessed using [fMRIPrep](https://fmriprep.readthedocs.io/en/latest/index.html) and then denoised by using CompCor (see more details in [Fang et al. 2019](https://doi.org/10.31234/osf.io/qbx4m)).\n\n### Example Analyses and Scripts\nTo give a quick try for MVPD analysis, you can directly run our example script [run_MVPD_test.py](https://github.com/sccnlab/PyMVPD_LITE/blob/main/exp/run_MVPD_test.py) or other example MVPD models under [exp/](https://github.com/sccnlab/PyMVPD_LITE/blob/main/exp/) (e.g. run_MVPD_xxx.py):\n```\ncd exp/\npython3 run_MVPD_test.py\n```\n\nWe have also provided a [tutorial](https://github.com/sccnlab/PyMVPD_LITE/blob/main/exp/PyMVPD_LITE_Tutorial.ipynb) in jupyter notebook. Feel free to check it out!\n\n## Customization\nTo customize and run your own MVPD model, please follow the three steps:\n```\nimport os\nfrom mvpdlite import data_loading, model_exec\n```\nStep 1 - Analysis Specification\n```\n# Model Input Info\ninputinfo=data_loading.structtype()\ninputinfo.sub='sub-01' # subject whose data are to be analyzed\nfilepath_func=[] # input functional Data\nfilepath_func+=['path/to/functional/data/run1.nii.gz']\nfilepath_func+=['path/to/functional/data/run2.nii.gz']\n......\n\ninputinfo.filepath_mask1='path/to/predictor/ROI/mask.nii.gz' # predictor ROI mask\ninputinfo.filepath_mask2='path/to/target/ROI/mask.nii.gz' # target ROI mask\n\ninputinfo.roidata_save_dir='path/to/save/roidata/' # output data directory\ninputinfo.results_save_dir='path/to/save/results/' # output model results directory\ninputinfo.save_prediction=False # whether to save predicted timecourses in the target ROI\n\n# MVPD Model Parameters\nparams=data_loading.structtype()\nparams.leave_k=1 # cross validation: leave k run out, default=1\n\n### LR model parameters\n......\n\n```\nStep 2 - Data Loading\n```\ndata_loading.load_data(inputinfo)\n```\nStep 3 - Analysis Execution\n```\nmodel_exec.MVPD_exec(inputinfo, params)\n```\n### Required Input Information \n- **inputinfo.sub**\n  - This variable specifies the subject whose data are to be analyzed.\n- **input.filepath_func**\n  - This variable specifies the list of paths to the directories containing processed functional data.\n- **inputinfo.filepath_mask1**\n  - This variable specifies the path to the directory containing the predictor ROI mask.\n- **inputinfo.filepath_mask2**\n  - This variable specifies the path to the directory containing the target ROI mask.\n- **inputinfo.roidata_save_dir**\n  - This variable specifies the path to the directory where the extracted functional data will be saved.\n- **inputinfo.results_save_dir**\n  - This variable specifies the path to the directory where the results will be saved.\n- **inputinfo.save_prediction** \n  - This variable specifies whether to save predicted timecourses in the target ROI.\n\n### List of Model Parameters\n\nNOTICE: Remember to set the value of the parameter manually if you do not want to use the default value.\n\n- General model parameters\n  - **params.leave_k**\n    - This parameter determines the number of leave out runs in cross-validation.\n    - The default value is 1 (leave-one-run-out procedure).\n\n- LR model parameters\n  - **params.dim_reduction**: \n    - This parameter determines whether dimensionality reduction is applied to the input data.\n    - It is only used if you are using a linear regression model by setting params.mode_class='LR'\n    - The default value is false.\n  - **params.dim_type**: \n    - This parameter determines the type of the dimensionality reduction.\n    - It is only used if you are using a linear regression model and you set \"params.dim_reduction=True\".\n    - The available values are 'pca', 'ica', or the name of your custom dimensionality reduction method.\n    - The default value is 'pca'.\n  - **params.num_dim**:\n    - This parameter determines the number of dimensions to keep after dimensionality reduction.\n    - It is only used if you are using a linear regression model and you set \"params.dim_reduction=True\".\n    - The default value is 3.\n\n  - **params.lin_reg**:\n    - This parameter determines whether to add a regularization term to the linear regression model.\n    - It is only used if you are using a linear regression model by setting params.mode_class='LR'.\n    - The default value is false.\n  - **params.reg_type**\n    - This parameter determines the type of regularization term that you want to add to the linear regression model.\n    - It is only used if you are using a linear regression model with regularization by setting \"params.mode_class='LR', params.lin_reg=True\".\n    - The available values are 'Ridge', 'Lasso', and 'RidgeCV'.\n    - The default value is 'Ridge'.\n  - **params.reg_strength**\n    - This parameter determines the regularization strength of the chosen regularization term.\n    - It is only used if you are using a linear regression model with regularization by setting \"params.mode_class='LR', params.lin_reg=True\".\n    - The default value is '0.001'.\n  - **params.reg_strength_list**\n    - This parameter determines the array of regularization strength values to try in the cross-validation for Ridge regression.\n    - It is only used if you are using a linear RidgeCV regression model by setting \"params.mode_class='LR', params.lin_reg=True, params.reg_type='RidgeCV'\".\n    - The default array is [0.001, 0.01, 0.1].\n\n## Citation\nPyMVPD has been used in:\n\n- PyMVPD: A toolbox for multivariate pattern dependence. [PDF](https://www.biorxiv.org/content/10.1101/2021.10.12.464157v1.full.pdf) <br/>\nFang, M., Poskanzer, C., Anzellotti, S.\n\n- Identifying hubs that integrate responses across multiple category-selective regions.<br/>\nFang, M., Aglinskas, A., Li, Y., Anzellotti, S. \n\nIf you plan to use the toolbox, please consider citing this.\n\n```\n@article{fang2021pymvpd,\n  title={PyMVPD: A toolbox for multivariate pattern dependence},\n  author={Fang, Mengting and Poskanzer, Craig and Anzellotti, Stefano},\n  journal={bioRxiv},\n  year={2021},\n  publisher={Cold Spring Harbor Laboratory}\n}\n```\n\n## Contact\nReach out to Mengting Fang (mtfang0707@gmail.com) for questions, suggestions and feedback!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sccnlab/PyMVPD_LITE",
    "keywords": "fMRI,MVPD,machine learning,connectivity",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyMVPD-LITE",
    "package_url": "https://pypi.org/project/PyMVPD-LITE/",
    "platform": null,
    "project_url": "https://pypi.org/project/PyMVPD-LITE/",
    "project_urls": {
      "Homepage": "https://github.com/sccnlab/PyMVPD_LITE"
    },
    "release_url": "https://pypi.org/project/PyMVPD-LITE/0.0.4/",
    "requires_dist": [
      "nibabel (>=3.2.1)",
      "numpy (>=1.19.3)",
      "scikit-learn (>=0.20.1)",
      "scipy (>=1.1.0)"
    ],
    "requires_python": "",
    "summary": "A python package for multivariate pattern dependence",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13858283,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57561e03568bcdf1b2ed2ce4426acaaa2d7582b6e8ca49cd505342f954628d62",
          "md5": "221a3cf6dc0ee4a0835c9f73dcf1eafe",
          "sha256": "9d6fe9153846aa710a98a9602618272a409706c194ad05d79ef3447ab422bb66"
        },
        "downloads": -1,
        "filename": "PyMVPD_LITE-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "221a3cf6dc0ee4a0835c9f73dcf1eafe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11570,
        "upload_time": "2021-04-06T23:23:05",
        "upload_time_iso_8601": "2021-04-06T23:23:05.006498Z",
        "url": "https://files.pythonhosted.org/packages/57/56/1e03568bcdf1b2ed2ce4426acaaa2d7582b6e8ca49cd505342f954628d62/PyMVPD_LITE-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "094c539790510ab7191d1ce93dc6363432dbdb1bd480b4543e6f0c4fe971ed33",
          "md5": "004b922302cb693f58fde26905a84f2d",
          "sha256": "ecd98cdf9288bc68736a38f2bd5cad64e880b70a02617d60c6b4c40d2331b736"
        },
        "downloads": -1,
        "filename": "PyMVPD_LITE-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "004b922302cb693f58fde26905a84f2d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5942,
        "upload_time": "2021-04-06T23:23:06",
        "upload_time_iso_8601": "2021-04-06T23:23:06.761459Z",
        "url": "https://files.pythonhosted.org/packages/09/4c/539790510ab7191d1ce93dc6363432dbdb1bd480b4543e6f0c4fe971ed33/PyMVPD_LITE-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ee1c797b1b21368cc8fdae3b7b8a4e8dfd38ff06f24e1f22d57795abfab1097",
          "md5": "295e2afe446a5128b1e68b8555d0f31b",
          "sha256": "4e2e9a63630c8e7bcf39774fdc908e8da1d688562b510da9f9928caa4ac4d46b"
        },
        "downloads": -1,
        "filename": "PyMVPD_LITE-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "295e2afe446a5128b1e68b8555d0f31b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12417,
        "upload_time": "2021-04-09T14:34:37",
        "upload_time_iso_8601": "2021-04-09T14:34:37.669877Z",
        "url": "https://files.pythonhosted.org/packages/4e/e1/c797b1b21368cc8fdae3b7b8a4e8dfd38ff06f24e1f22d57795abfab1097/PyMVPD_LITE-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67185a76838f25e7e3f48b3578482c2f30cb7ac3a9aa41ad325b347053ff9270",
          "md5": "5072a04947207d076dfed6936648af6d",
          "sha256": "a08a60381a4b9f6b3109ec59fdb6258bc8262d20b6a1bd214f06952acc0aa00f"
        },
        "downloads": -1,
        "filename": "PyMVPD_LITE-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5072a04947207d076dfed6936648af6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6886,
        "upload_time": "2021-04-09T14:34:38",
        "upload_time_iso_8601": "2021-04-09T14:34:38.957017Z",
        "url": "https://files.pythonhosted.org/packages/67/18/5a76838f25e7e3f48b3578482c2f30cb7ac3a9aa41ad325b347053ff9270/PyMVPD_LITE-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88feb07afe071ee69e3c1d8e90ea7494634c8b1e6394ce2aa0ac9e163fb83a44",
          "md5": "c87a5edafef6bfb472c7fd6038297663",
          "sha256": "469583843c5d0211b63210e4d6659b31fe333b30ef93e3cc20b09725ec460b62"
        },
        "downloads": -1,
        "filename": "PyMVPD_LITE-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c87a5edafef6bfb472c7fd6038297663",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17564,
        "upload_time": "2022-04-29T16:15:08",
        "upload_time_iso_8601": "2022-04-29T16:15:08.963087Z",
        "url": "https://files.pythonhosted.org/packages/88/fe/b07afe071ee69e3c1d8e90ea7494634c8b1e6394ce2aa0ac9e163fb83a44/PyMVPD_LITE-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf26a2fdf68dc8b94de960b720df222b43319249ef3e9d6606509a60caa3d9b2",
          "md5": "3237510a39a4870ed78f7fd602126dee",
          "sha256": "77458576545f4d6b0c2cfb3e8cf34594d6235f19a407bb3375e1049487b444f3"
        },
        "downloads": -1,
        "filename": "PyMVPD_LITE-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3237510a39a4870ed78f7fd602126dee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11146,
        "upload_time": "2022-04-29T16:15:10",
        "upload_time_iso_8601": "2022-04-29T16:15:10.638245Z",
        "url": "https://files.pythonhosted.org/packages/bf/26/a2fdf68dc8b94de960b720df222b43319249ef3e9d6606509a60caa3d9b2/PyMVPD_LITE-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a3f3ce9a9ebd61189e14a384737d4420aeb90aaa6790fb98266e625307210ae",
          "md5": "e36cc79c5484abcf6ef1af6a7addc72e",
          "sha256": "687b7f9c43765beec227a0cca4a4d55a8ed9c6f6b8c738c311601834ae6b9845"
        },
        "downloads": -1,
        "filename": "PyMVPD_LITE-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e36cc79c5484abcf6ef1af6a7addc72e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17720,
        "upload_time": "2022-05-18T23:08:24",
        "upload_time_iso_8601": "2022-05-18T23:08:24.208919Z",
        "url": "https://files.pythonhosted.org/packages/3a/3f/3ce9a9ebd61189e14a384737d4420aeb90aaa6790fb98266e625307210ae/PyMVPD_LITE-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63e92e18c2eb747e900e17b82e70da3af8665114df53e4b050779297cbb3f21e",
          "md5": "1e5ee4fbb25d347d7807801630d404d9",
          "sha256": "086eb77372b6bb29e8562584df178e28d73765beb50e75f8bdfac15773458043"
        },
        "downloads": -1,
        "filename": "PyMVPD_LITE-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1e5ee4fbb25d347d7807801630d404d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11299,
        "upload_time": "2022-05-18T23:08:25",
        "upload_time_iso_8601": "2022-05-18T23:08:25.990303Z",
        "url": "https://files.pythonhosted.org/packages/63/e9/2e18c2eb747e900e17b82e70da3af8665114df53e4b050779297cbb3f21e/PyMVPD_LITE-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a3f3ce9a9ebd61189e14a384737d4420aeb90aaa6790fb98266e625307210ae",
        "md5": "e36cc79c5484abcf6ef1af6a7addc72e",
        "sha256": "687b7f9c43765beec227a0cca4a4d55a8ed9c6f6b8c738c311601834ae6b9845"
      },
      "downloads": -1,
      "filename": "PyMVPD_LITE-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e36cc79c5484abcf6ef1af6a7addc72e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17720,
      "upload_time": "2022-05-18T23:08:24",
      "upload_time_iso_8601": "2022-05-18T23:08:24.208919Z",
      "url": "https://files.pythonhosted.org/packages/3a/3f/3ce9a9ebd61189e14a384737d4420aeb90aaa6790fb98266e625307210ae/PyMVPD_LITE-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "63e92e18c2eb747e900e17b82e70da3af8665114df53e4b050779297cbb3f21e",
        "md5": "1e5ee4fbb25d347d7807801630d404d9",
        "sha256": "086eb77372b6bb29e8562584df178e28d73765beb50e75f8bdfac15773458043"
      },
      "downloads": -1,
      "filename": "PyMVPD_LITE-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "1e5ee4fbb25d347d7807801630d404d9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11299,
      "upload_time": "2022-05-18T23:08:25",
      "upload_time_iso_8601": "2022-05-18T23:08:25.990303Z",
      "url": "https://files.pythonhosted.org/packages/63/e9/2e18c2eb747e900e17b82e70da3af8665114df53e4b050779297cbb3f21e/PyMVPD_LITE-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}