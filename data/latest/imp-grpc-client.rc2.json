{
  "info": {
    "author": "Kornpow",
    "author_email": "test@email.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# impgrpc\nA python grpc client for Impervious Network ⚡⚡⚡\n\nThis is a wrapper around the default grpc interface that handles setting up credentials (including macaroons). An async client is also available to do fun async stuff like listening for invoices in the background. \n\n## Dependencies\n- Python 3.6+\n- Working LND lightning node, take note of its ip address.\n- Copy your admin.macaroon and tls.cert files from your node to a directoy on your machine. \n\n\n## Installation\n```bash\npip install imp-grpc-client\n```\n\n\n\n### Environment Variables\n\nThese environment variables are only used when testing node connectivity and/or correct module installation from the command line. This library is primarily used through Python scripting.\n\n```bash\nexport CRED_PATH=/path/to/macaroon/and/tls/cert\nexport LND_NODE_IP=192.168.1.xx\n```\n\n## Basic Usage\nThe api mirrors the underlying lnd grpc api (http://api.lightning.community/) but methods will be in pep8 style. ie. `.GetInfo()` becomes `.get_info()`.\n\n```python\n```\n\n### Specifying Macaroon/Cert files\nBy default the client will attempt to lookup the `readonly.macaron` and `tls.cert` files in the mainnet directory. \nHowever if you want to specify a different macaroon or different path you can pass in the filepath explicitly.\n\n```python\nlnd = LNDClient(\n    macaroon_filepath='~/.lnd/invoice.macaroon', \n    cert_filepath='path/to/tls.cert'\n)\n```\n\n## Generating LND Proto Files\n```bash\nvirtualenv lnd\nsource lnd/bin/activate\npip install grpcio grpcio-tools googleapis-common-protos sh\ngit clone https://github.com/lightningnetwork/lnd.git\nmkdir genprotos\ngit clone https://github.com/googleapis/googleapis.git\n```\n\n\n```python\nfrom pathlib import Path\nimport shutil\nimport sh\n\nfor proto in list(Path(\"../imp-releases/proto\").rglob(\"*.proto\")):\n    shutil.copy(proto, Path.cwd().joinpath(\"impgrpc/compiled\"))\n\nprotos = list(Path(\".\").joinpath(\"impgrpc/compiled\").glob(\"**/*.proto\"))\n\nargs = [\n    \"-m\",\n    \"grpc_tools.protoc\",\n    # \"--proto_path=../imp-releases/proto/:.\",\n    # \"--proto_path=../imp-releases/proto/google/api:.\",\n    # \"--proto_path=../imp-releases/proto/protoc-gen-openapiv2/options:.\",\n    # \"--proto_path=impgrpc/compiled/:.\",\n    # \"--proto_path=impgrpc/compiled/protoc-gen-openapiv2/:.\",\n    \"--proto_path=impgrpc/compiled/\",\n    # \"--proto_path=.:.\",\n    \"--python_out=impgrpc/compiled\",\n    \"--grpc_python_out=impgrpc/compiled\",\n]\n\nfor protofile in protos:\n        args.append(str(protofile) )\n\n# Generate the compiled protofiles\nsh.python(args)\n```\n\nLast Step:\nIn File: verrpc_pb2_grpc.py\nChange:\nimport verrpc_pb2 as verrpc__pb2\nTo:\nfrom lndgrpc import verrpc_pb2 as verrpc__pb2\n\n## Deploy to Test-PyPi\n```bash\npoetry build\ntwine check dist/*\ntwine upload --repository-url https://test.pypi.org/legacy/ dist/*\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "imp-grpc-client",
    "package_url": "https://pypi.org/project/imp-grpc-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/imp-grpc-client/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/imp-grpc-client/0.0.2/",
    "requires_dist": [
      "aiogrpc (>=1.8,<2.0)",
      "googleapis-common-protos (>=1.53.0,<2.0.0)",
      "grpcio (>=1.37.0,<2.0.0)",
      "grpcio-tools (>=1.37.0,<2.0.0)",
      "protobuf (>=3.15.8,<4.0.0)",
      "protobuf3-to-dict (>=0.1.5,<0.2.0)"
    ],
    "requires_python": ">3.6",
    "summary": "An rpc client for Impervious.AI (lightning network L3)",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11176149,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "857b81c01235f0dc25c18bd20a0e093720706c229fd83d95b52477672bb52b91",
          "md5": "c5f6c814233c8fc92ad384d5fb45fc7d",
          "sha256": "87f380d33cbe5a6f4f9ada048138a9d814625a9d1e7782672a6889f8cb10e00a"
        },
        "downloads": -1,
        "filename": "imp_grpc_client-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c5f6c814233c8fc92ad384d5fb45fc7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 64908,
        "upload_time": "2021-08-14T02:12:01",
        "upload_time_iso_8601": "2021-08-14T02:12:01.001130Z",
        "url": "https://files.pythonhosted.org/packages/85/7b/81c01235f0dc25c18bd20a0e093720706c229fd83d95b52477672bb52b91/imp_grpc_client-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb6cb9b1b53d954976434025a721d03626a5e321e6c2a971567780ad3bedbce4",
          "md5": "e810ba5646b573913e387e28e2fd16e5",
          "sha256": "2d90f15381ae59bc1de67d9ea215480bd7e4e0bbcf360f4367a20bd24bfc1f9e"
        },
        "downloads": -1,
        "filename": "imp_grpc_client-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e810ba5646b573913e387e28e2fd16e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 64848,
        "upload_time": "2021-08-14T02:25:44",
        "upload_time_iso_8601": "2021-08-14T02:25:44.568310Z",
        "url": "https://files.pythonhosted.org/packages/fb/6c/b9b1b53d954976434025a721d03626a5e321e6c2a971567780ad3bedbce4/imp_grpc_client-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb6cb9b1b53d954976434025a721d03626a5e321e6c2a971567780ad3bedbce4",
        "md5": "e810ba5646b573913e387e28e2fd16e5",
        "sha256": "2d90f15381ae59bc1de67d9ea215480bd7e4e0bbcf360f4367a20bd24bfc1f9e"
      },
      "downloads": -1,
      "filename": "imp_grpc_client-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e810ba5646b573913e387e28e2fd16e5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">3.6",
      "size": 64848,
      "upload_time": "2021-08-14T02:25:44",
      "upload_time_iso_8601": "2021-08-14T02:25:44.568310Z",
      "url": "https://files.pythonhosted.org/packages/fb/6c/b9b1b53d954976434025a721d03626a5e321e6c2a971567780ad3bedbce4/imp_grpc_client-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}