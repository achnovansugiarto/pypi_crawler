{
  "info": {
    "author": "Deutsche Telekom Security GmbH",
    "author_email": "cti@t-mobile.cz",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# CVRF-CSAF-Converter\n\n<!-- TOC depthfrom:2 depthto:3 -->\n\n- [Introduction](#introduction)\n- [Getting started](#getting-started)\n- [How to use CVRF-CSAF-converter](#how-to-use-cvrf-csaf-converter)\n    - [Usage as CLI tool](#usage-as-cli-tool)\n    - [Config](#config)\n- [Specifications](#specifications)\n- [Developing CVRF-CSAF-converter](#developing-cvrf-csaf-converter)\n    - [Developer Guide, Architecture and Technical Design](#developer-guide-architecture-and-technical-design)\n    - [Security Considerations](#security-considerations)\n- [Contributing](#contributing)\n- [Project](#project)\n\n<!-- /TOC -->\n\n## Introduction\n\n> CVRF-CSAF-converter is a Python tool for converting [CSAF CVRF 1.2 documents](https://docs.oasis-open.org/csaf/csaf-cvrf/v1.2/cs01/csaf-cvrf-v1.2-cs01.html) in [CSAF 2.0 documents](https://docs.oasis-open.org/csaf/csaf/v2.0/csaf-v2.0.html). It fulfills the conformance target [CVRF CSAF converter](https://docs.oasis-open.org/csaf/csaf/v2.0/csaf-v2.0.html#915-conformance-clause-5-cvrf-csaf-converter).\n\n**Note**: The project is currently still under development. Not all features have been implemented and therefore the conformance goal is not yet fulfilled.\n\n## Getting started\n\nEnsure that you have installed `python3` (version >= 3.6), `python3-pip` and `python3-venv`.\n\nAssume your current directory is also avaliable at the environment variable `$ROOT_DIR`.\n\nCheck out the repository and navigate to the working directory.\n\n```shell script\n   git clone https://github.com/csaf-tools/CVRF-CSAF-Converter.git\n   cd CVRF-CSAF-Converter\n```\n\nAfterwards, create a virtual environment and install the package there:\n\n```shell script\n   python3 -m venv venv\n   . venv/bin/activate\n   pip install .\n```\n\n_Hint: If you would like to get the debugger running, try to install the code as follows: `pip install -e .`_\n\n## How to use CVRF-CSAF-converter\n\n### Usage as CLI tool\n\nTo convert the CVRF CSAF 1.2 document `$ROOT_DIR/CVRF-CSAF-Converter/examples/1.2/cvrf_example_a.xml` use the following command:\n\n```shell script\n   cvrf2csaf --input-file $ROOT_DIR/CVRF-CSAF-Converter/examples/1.2/cvrf_example_a.xml\n```\n\nThe default output directory is `./`, it can be set using `--output-dir`. \n\nThe output filename is derived from the CSAF field `/document/tracking/id`.\n\nIf there is an ERROR during conversion, the output file will not be written unless `--force` option is used.\n\nThe rest of the options can be shown with:\n\n```shell script\n   cvrf2csaf -h\n```\n\n### Config\n\nThe [config file](https://github.com/csaf-tools/CVRF-CSAF-Converter/blob/main/cvrf2csaf/config/config.yaml) is installed inside the Python package.\nFor the installation using `venv`, the config file is located in `$PATH_TO_THE_VENV/lib/python3.X/site-packages/cvrf2csaf/config/config.yaml`.\nWhen installing the PyPI package with pip (--user), the config file is located in `$HOME/.local/lib/python3.X/site-packages/cvrf2csaf/config/config.yaml`\nConverter options can be changed there, or overridden by command line arguments/options.\n\n## Specifications\n\nWe follow the official OASIS specifications in order to provide as much acceptance on the user base as possible.\n\n- [Specification CVRF 1.2](http://docs.oasis-open.org/csaf/csaf-cvrf/v1.2/cs01/csaf-cvrf-v1.2-cs01.html)\n  - [xsd common](http://docs.oasis-open.org/csaf/ns/csaf-cvrf/v1.2/common)\n  - [xsd cvrf](http://docs.oasis-open.org/csaf/ns/csaf-cvrf/v1.2/cvrf)\n  - [xsd prod](http://docs.oasis-open.org/csaf/ns/csaf-cvrf/v1.2/prod)\n  - [xsd vuln](http://docs.oasis-open.org/csaf/ns/csaf-cvrf/v1.2/vuln)\n\n- [Specification CSAF 2.0](https://docs.oasis-open.org/csaf/csaf/v2.0/csaf-v2.0.html)\n  - [JSON spec](https://docs.oasis-open.org/csaf/csaf/v2.0/schemas/csaf_json_schema.json)\n\n## Developing CVRF-CSAF-converter\n\n### Developer Guide, Architecture and Technical Design\n\nThe converter uses lxml.objectify to parse the whole input document.\n\nParsing and conversion of the following [CSAF CVRF 1.2](https://docs.oasis-open.org/csaf/csaf-cvrf/v1.2/cs01/csaf-cvrf-v1.2-cs01.html) XML elements are handled by separate section handlers. These section handlers process the elements recursively (converting also all their sub-elements). These elements are the direct children of the root XML element (`<cvrfdoc>`).\n - DocumentTitle, DocumentType, DocumentDistribution, AggregateSeverity -> [`DocumentLeafElements`](cvrf2csaf/section_handlers/document_leaf_elements.py) handler\n - DocumentPublisher -> [`DocumentPublisher`](cvrf2csaf/section_handlers/document_publisher.py) handler\n - DocumentTracking -> [`DocumentTracking`](cvrf2csaf/section_handlers/document_tracking.py) handler\n - DocumentNotes -> [`Notes`](cvrf2csaf/section_handlers/notes.py) handler\n - DocumentReferences -> [`References`](cvrf2csaf/section_handlers/references.py) handler\n - Acknowledgments -> [`Acknowledgments`](cvrf2csaf/section_handlers/acknowledgments.py) handler\n - ProductTree -> [`ProductTree`](cvrf2csaf/section_handlers/product_tree.py) handler\n - Vulnerability -> [`Vulnerability`](cvrf2csaf/section_handlers/vulnerability.py) handler\n\n`Vulnerability` handler is reusing `Acknowledgments`, `References` and `Notes` handlers for its child elements.\n\nEach of these section handlers is implemented by own class inheriting from `SectionHandler` class.\nThis base class contains `_process_mandatory_elements` and `_process_optional_elements` methods \nwhich are parsing and converting mandatory/optional elements/attributes. Each subclass must implement these methods.\n\n`SectionHandler` class holds `error_occurred` class variable. This variable is overwritten by any children class in case \nsome error resulting in invalid output json happened. Depending on `--force` commandline parameter, the program\neither quits with error log message without producing output or produce invalid output and warning log message.\n\nComplete conversion together with input and output validation against schemata is handled by the `DocumentHandler` class. \n\n\n### Security Considerations\n\nThese are the TOP OWASP categories of vulnerabilities which potentially affect the CVRF-CSAF-Converter.\nWe are omitting those which do not apply (most of them), since it's a plain command-line tool (e.g. authentication failures)\n\n#### [A03:2021 â€“ Injection](https://owasp.org/Top10/A03_2021-Injection/)\nThe XML input for the converter is strictly validated for [CSAF CVRF 1.2](https://docs.oasis-open.org/csaf/csaf-cvrf/v1.2/cs01/csaf-cvrf-v1.2-cs01.html). The converter rejects invalid inputs.\n\nHowever, there is a known issue for inserting HTML with code/script, which could be executed by a CSAF consumer: \n[Encode HTML in JSON output](https://github.com/csaf-tools/CVRF-CSAF-Converter/issues/5)\n\n#### [A06:2021 - Vulnerable and Outdated Components](https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/)\nA [CodeQL action](https://github.com/csaf-tools/CVRF-CSAF-Converter/blob/main/.github/workflows/codeql-analysis.yml) is set in this project to spot vulnerabilities in 3rd party libraries.\nEspecially the `lxml` library can be susceptible.\n\n#### [A4:2017 - XML External Entities (XXE)](https://owasp.org/www-project-top-ten/2017/A4_2017-XML_External_Entities_(XXE))\nXXE vulnerability present in releases <1.0.0rc2 was fixed in [this commit](https://github.com/csaf-tools/CVRF-CSAF-Converter/commit/ff20a6c00245b064ceb6840dab0cd95a82fbec49)\n\nCVE report: https://nvd.nist.gov/vuln/detail/CVE-2022-27193\n\n\n## Contributing\n\nPlease refer to [`CONTRIBUTING.md`](CONTRIBUTING.md) for details about how to contribute to the development of [CVRF-CSAF-converter](https://github.com/csaf-tools/CVRF-CSAF-converter).\n\n## Project\n\nCVRF-CSAF-Converter is a project between Deutsche Telekom Security GmbH and the Federal Office for Information Security. It aims to provide a CVRF 1.x to CSAF 2.0 converter.\n\nRealization is taking place 100% Open Source. The final delivery will be in Q1/2022.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/csaf-tools/CVRF-CSAF-Converter/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cvrf2csaf",
    "package_url": "https://pypi.org/project/cvrf2csaf/",
    "platform": null,
    "project_url": "https://pypi.org/project/cvrf2csaf/",
    "project_urls": {
      "Bug Tracker": "https://github.com/csaf-tools/CVRF-CSAF-Converter/issues",
      "Homepage": "https://github.com/csaf-tools/CVRF-CSAF-Converter/"
    },
    "release_url": "https://pypi.org/project/cvrf2csaf/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Converts CVRF XML documents to CSAF JSON documents",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16715470,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bf419853493c84d0829e15f306b3f2643e430028e27e365caf7377d4a15b1f2",
          "md5": "e4b0453fe4a54844252eb89bdf2c7527",
          "sha256": "40ee32cfeb4b5f403f332f00ab09c7c8ce5ea5e28fc77f382f61c3ff434001e3"
        },
        "downloads": -1,
        "filename": "cvrf2csaf-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e4b0453fe4a54844252eb89bdf2c7527",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 271467,
        "upload_time": "2022-05-02T12:07:22",
        "upload_time_iso_8601": "2022-05-02T12:07:22.737764Z",
        "url": "https://files.pythonhosted.org/packages/2b/f4/19853493c84d0829e15f306b3f2643e430028e27e365caf7377d4a15b1f2/cvrf2csaf-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "798e70530a22f9f9550c28e6e03a03dcabfd10bab701493012fdad7b7e49e1e2",
          "md5": "215e685d529d1327765d8b57e32bfd14",
          "sha256": "6514b1ca3a97e083dbb37a71f5d6afa072d714304341b32ab75bbca510460d3c"
        },
        "downloads": -1,
        "filename": "cvrf2csaf-1.0.0.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "215e685d529d1327765d8b57e32bfd14",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 82355,
        "upload_time": "2022-02-25T15:32:28",
        "upload_time_iso_8601": "2022-02-25T15:32:28.206428Z",
        "url": "https://files.pythonhosted.org/packages/79/8e/70530a22f9f9550c28e6e03a03dcabfd10bab701493012fdad7b7e49e1e2/cvrf2csaf-1.0.0.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0.dev2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b65e0862754e525d6cec06de06e5060e973a01ae0db82e8ae330fbfb7f0bf2dc",
          "md5": "79ff75105a88d9f7cd49881297beab90",
          "sha256": "0362f889c2285b6f9bf763fc493685406e08d3e1b01af39b816566b5b8b03ce9"
        },
        "downloads": -1,
        "filename": "cvrf2csaf-1.0.0.dev2.tar.gz",
        "has_sig": false,
        "md5_digest": "79ff75105a88d9f7cd49881297beab90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 82618,
        "upload_time": "2022-02-28T14:11:50",
        "upload_time_iso_8601": "2022-02-28T14:11:50.261066Z",
        "url": "https://files.pythonhosted.org/packages/b6/5e/0862754e525d6cec06de06e5060e973a01ae0db82e8ae330fbfb7f0bf2dc/cvrf2csaf-1.0.0.dev2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0.dev3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "058fa350e4fa3b4676921f9bb86f2249decad17441c7eca02f1cdc2043a13780",
          "md5": "0ec8f3ed0f744672b38e041d4bb4954b",
          "sha256": "c8b2741560710d59cc6a3885203c69a12ba7fdc79cd3fe88c2fb556300b8b6a3"
        },
        "downloads": -1,
        "filename": "cvrf2csaf-1.0.0.dev3.tar.gz",
        "has_sig": false,
        "md5_digest": "0ec8f3ed0f744672b38e041d4bb4954b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 82883,
        "upload_time": "2022-02-28T15:34:56",
        "upload_time_iso_8601": "2022-02-28T15:34:56.747879Z",
        "url": "https://files.pythonhosted.org/packages/05/8f/a350e4fa3b4676921f9bb86f2249decad17441c7eca02f1cdc2043a13780/cvrf2csaf-1.0.0.dev3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a5377a70648ba83c7662f22133728a36f285563cd0bb3c63a1f45688aeff69a",
          "md5": "aecb5fa906cbd91d59124a686a6cc5ce",
          "sha256": "ed03797695bae57ce1b053d796d9c0fbc9b2cde8e1347a10a9976b9ef79912c7"
        },
        "downloads": -1,
        "filename": "cvrf2csaf-1.0.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "aecb5fa906cbd91d59124a686a6cc5ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 82813,
        "upload_time": "2022-02-28T16:11:07",
        "upload_time_iso_8601": "2022-02-28T16:11:07.748778Z",
        "url": "https://files.pythonhosted.org/packages/5a/53/77a70648ba83c7662f22133728a36f285563cd0bb3c63a1f45688aeff69a/cvrf2csaf-1.0.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de7399284ac1ace14679db0e35ca8a9df18861942ffad156f607b871c58665b6",
          "md5": "f96c4086242722cfe1e9192a834f93a8",
          "sha256": "1c3139faa1bf73fefd9b79ae4ee55d507e7ecadc5279355d7f96fdca4bdafec6"
        },
        "downloads": -1,
        "filename": "cvrf2csaf-1.0.0rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "f96c4086242722cfe1e9192a834f93a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 83131,
        "upload_time": "2022-03-14T12:17:14",
        "upload_time_iso_8601": "2022-03-14T12:17:14.957498Z",
        "url": "https://files.pythonhosted.org/packages/de/73/99284ac1ace14679db0e35ca8a9df18861942ffad156f607b871c58665b6/cvrf2csaf-1.0.0rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2bf419853493c84d0829e15f306b3f2643e430028e27e365caf7377d4a15b1f2",
        "md5": "e4b0453fe4a54844252eb89bdf2c7527",
        "sha256": "40ee32cfeb4b5f403f332f00ab09c7c8ce5ea5e28fc77f382f61c3ff434001e3"
      },
      "downloads": -1,
      "filename": "cvrf2csaf-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e4b0453fe4a54844252eb89bdf2c7527",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 271467,
      "upload_time": "2022-05-02T12:07:22",
      "upload_time_iso_8601": "2022-05-02T12:07:22.737764Z",
      "url": "https://files.pythonhosted.org/packages/2b/f4/19853493c84d0829e15f306b3f2643e430028e27e365caf7377d4a15b1f2/cvrf2csaf-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}