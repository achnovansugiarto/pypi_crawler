{
  "info": {
    "author": "ZhengYu, Xu",
    "author_email": "zen-xu@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Xpattern: Pattern Matching with XObject.\n\n![GitHub](https://img.shields.io/github/license/zen-xu/xpattern)\n![Tests](https://github.com/zen-xu/xpattern/workflows/Tests/badge.svg?branch=master)\n[![PyPI version](https://badge.fury.io/py/xpattern.svg)](https://badge.fury.io/py/xpattern)\n[![Downloads](https://pepy.tech/badge/xpattern/month)](https://pepy.tech/project/xpattern/month)\n\n> `xpattern` is inspired by [hask](https://github.com/billpmurphy/hask), [pipetools](https://github.com/0101/pipetools),\n[pampy](https://github.com/santinic/pampy/), and with `xpattern` your code will be more readable and graceful!\n\n\n## Let's play now\n> Each pattern matchline evaluated in the order they appear.\n\n```python\nfrom xpattern import caseof\nfrom xpattern import m\n\n\n~(caseof(v)\n    | m(pattern_1) >> action_1\n    | m(pattern_2) >> action_2\n)\n```\n\n`caseof` is lazy, so you need to add `~` operator to run it!\n\n`m` is a matcher, if you don't like *circular brackets* style, you can alse use *square brackets* style\n\n```python\nfrom xpattern import caseof\nfrom xpattern import m\n\n\n~(caseof(v)\n    | m[pattern_1] >> action_1\n    | m[pattern_2] >> action_2\n)\n```\n\n### Write a Fibonacci\n\n> The operator `_` means \"match everything\"\n\n```python\nfrom xpattern import _\nfrom xpattern import caseof\nfrom xpattern import m\n\n\ndef fibonacci(n):\n    return ~(caseof(n)\n        | m(1) >> 1\n        | m(2) >> 1\n        | _ >> (lambda x: fibonacci(x - 1) + fibonacci(x - 2))\n    )\n```\n\n### Write a Lisp calculator\n```python\nfrom functools import reduce\n\nfrom xpattern import _\nfrom xpattern import REST\nfrom xpattern import caseof\nfrom xpattern import m\n\n\ndef lisp(exp):\n    return ~(caseof(exp)\n        | m(int)            >> (lambda x: x)\n        | m(callable)       >> (lambda x: x)\n        | m(callable, REST) >> (lambda f, rest: f(*map(lisp, rest)))\n        | m(tuple)          >> (lambda t: list(map(lisp, t)))\n    )\n\nplus = lambda a, b: a + b\nminus = lambda a, b: a - b\nlisp((plus, 1, 2))                  # => 3\nlisp((plus, 1 (minus, 4, 2)))       # => 3\nlisp((reduce, plus, (range, 10)))   # => 45\n```\n\n### You can match so many things!\n```python\n~(caseof(x)\n    | m(3)         >> \"this matches the number 3\"\n    | m(int)       >> \"matches any integer\"\n    | m(str, int)  >> (lambda a, b: \"a tuple (a, b) you can use in a function\")\n    | m(1, 2, _)   >> \"any list of 3 elements that begins with [1, 2]\"\n    | m({\"x\", _})  >> \"any dict with a key 'x' and any value associated\"\n    | _            >> \"anything else\"\n)\n```\n\n### Match dataclass\n\n```python\nfrom dataclasses import dataclass\n\nfrom xpattern import _\nfrom xpattern import caseof\nfrom xpattern import m\n\n\n@dataclass\nclass Point:\n    x: int\n    y: int\n\n@dataclass\nclass Point2:\n    x: int\n    y: int\n\n@dataclass\nclass Line:\n    p1: Point\n    p2: Point\n\n@dataclass\nclass Rect:\n    l1: Line\n    l2: Line\n\n~(caseof(Rect(Point(1, 2), Point(3, 4)))\n    | m(Rect(Point(_, str), Point(_, 4))) >> \"first\"\n    | m(Rect(Point(_, int), Point2(_, 4))) >> \"second\"\n    | m(Rect(Point(_, int), Point(_, 4))) >> (lambda x, y, z: (x, y, z))\n)  # => (1, 2, 3)\n```\n\n### Match [HEAD, TAIL]\n\n```python\nfrom xpattern import _\nfrom xpattern import HEAD\nfrom xpattern import TAIL\nfrom xpattern import caseof\nfrom xpattern import m\n\n\nx = [1, 2, 3]\n\n~(caseof(x)\n    | m(1, TAIL) >> (lambda t: t)             # => [2, 3]\n)\n\n~(caseof(x)\n    | m(HEAD, TAIL) >> (lambda h, t: (h, t))  # => [1, [2, 3]]\n)\n```\n\n### Chain match\n\n```python\nfrom xpattern import _\nfrom xpattern import caseof\nfrom xpattern import m\n\n\npet = {\"type\": \"dog\", \"details\": {\"age\": 3}}\n~(caseof(pet)\n    | m({_: {\"age\": _}}) >> ~(caseof(X)\n        | m(int, int) >> (lambda x, y: x + y)\n        | m(str, int) >> (lambda x, y: y)\n    )\n)  # => 3\n```\n\n### With Bitwise Operators\n\n```python\nfrom xpattern import _\nfrom xpattern import caseof\nfrom xpattern import m\n\n\n~(caseof(1)\n    | (m[2] | m[1]) >> 1\n    | _ >> \"nothing\"\n) # => 1\n\n~(caseof(11)\n    | (m[lambda x: x > 1] & m[lambda x: x < 10]) >> \"1 < x < 10\"\n    | (m[lambda x: x > 1] & m[lambda x: x < 15]) >> \"1 < x < 15\"\n) # => \"1 < x < 15\"\n\n~(caseof(6)\n    | ~m[lambda x: x > 5]  >> \"x <=5\"\n    | ~m[lambda x: x > 10] >> \"x <= 10\"\n) # => \"x <= 10\"\n```\n\n### More pattern cases\n\n> Your can visit repo [pampy](https://github.com/santinic/pampy/) get more pattern cases, `xpattern` is *Syntactic Sugar* of `pampy`\n\n\n### Why name `Xpattern`, what's `X` mean?\n\n> `X` means `XObject` !!!\n>\n> `XObject` is a *Syntactic Sugar* of `lambda` function\n\n```python\nfrom xpattern import X\nfrom xpattern import caseof\nfrom xpattern import m\n\n\n~(caseof(1)\n    | m(1) >> X + 1       # => 2\n)\n\n~(caseof(\"apple\")\n    | m(str) >> X.upper()  # => \"APPLE\"\n)\n\n~(caseof([1, 2, 3])\n    | m(1, 2, 3) >> X[2]   # => 3\n)\n\n~(caseof([1, 2, 3])\n    | m(1, 2, 3) >> X + [4, 5, 6]              # => [1, 2, 3, 4, 5, 6]\n)\n\n~(caseof(9)\n    | m(int) >> X + X ** (X << 2) % 2 / 3 - X  # => 0.333333333\n)\n\n~(caseof(1)\n    | m(int) >> X._in_([1, 2, 3])   # => True\n)\n\n~(caseof(lambda x, y: x + y)\n    | m(callable) >> X(1, 2)        # => 3\n)\n```\n\n| Operation             | Syntax                                     |\n| --------------------- | ------------------------------------------ |\n| Addition              | `X + 1`                                    |\n| Call                  | `X(a, b, c)`                               |\n| Concatenation         | `X + [1, 2, 3]`                            |\n| Containment Test      | `X._in_( [1, 2, 3] )`                      |\n| Contains              | `X._contains_(1)`                          |\n| Division              | `X / 2` or `X // 2`                        |\n| Bitwise And           | `X & 2`                                    |\n| Bitwise Exclusive Or  | `X ^ 2`                                    |\n| Bitwise Inversion     | `~X`                                       |\n| Bitwise Or            | `X \\| 2`                                   |\n| Exponentiation        | `X ** 2`                                   |\n| Identity              | `X._is_(2)`                                |\n| Indexing              | `X[k]`                                     |\n| Left Shift            | `X << 2`                                   |\n| Modulo                | `X % 2`                                    |\n| Multiplication        | `X * 2`                                    |\n| Matrix Multiplication | `X @ matrix`                               |\n| Negation (Arithmetic) | `-X`                                       |\n| Negation (Logical)    | `X._not()`                                 |\n| Positive              | `+X`                                       |\n| Right Shift           | `X >> 2`                                   |\n| Subtraction           | `X - 2`                                    |\n| Ordering              | `X < 2` or `X <= 2` or `X > 2` or `X >= 2` |\n| Equality              | `X == 2`                                   |\n| Difference            | `X != 2`                                   |\n\n\n#### match pattern with XObject\n\n```python\nfrom xpattern import X\nfrom xpattern import caseof\nfrom xpattern import m\n\n\n~(caseof((1, 2, 3))\n    | m(X[2] == 3) >> X[2] + 4  # => 7\n)\n\n# same as\n~(caseof((1, 2, 3))\n    | m(lambda x: x[2] == 3) >> (lambda x: x[2] + 4)  # => 7\n)\n```\n\n#### xfunction\n\n`XObject` only can represent as function like `X(1, 2)`, but can not be as args in function `func(X, X + 2)`\n\nNow you can try to use `xfunction` realizing it!\n\n```python\nfrom xpattern import X\nfrom xpattern import _\nfrom xpattern import caseof\nfrom xpattern import m\nfrom xpattern import xfunction\n\n\n@xfunction\ndef add(a, b):\n    return a + b\n\n# in actions\n~(caseof(1)\n    | m(int) >> add(X, X)                             # => 2\n)\n\n# recursion xfunction\n~(caseof(2)\n    | m(int) >> add(add(X + 1, 4), b=add(X * 9, 7))   # => 32\n)\n\n\n@xfunction\ndef greater_than_4(x):\n    return x > 4\n\n\n# in patterns\n~(caseof(1)\n    | m(greater_than_4(X + 5)) >> \"greater than 4\"\n    | _ >> \"equal or lesser than 4\"\n)  # => \"greater than 4\"\n\n~(caseof(1)\n    | m(greater_than_4(X)) >> \"greater than 4\"\n    | _ >> \"equal or lesser than 4\"\n)  # => \"equal or lesser than 4\"\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zen-xu/xpattern",
    "keywords": "pattern-matching,functional,pipeline",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xpattern",
    "package_url": "https://pypi.org/project/xpattern/",
    "platform": "",
    "project_url": "https://pypi.org/project/xpattern/",
    "project_urls": {
      "Homepage": "https://github.com/zen-xu/xpattern",
      "Repository": "https://github.com/zen-xu/xpattern"
    },
    "release_url": "https://pypi.org/project/xpattern/0.5.0/",
    "requires_dist": [
      "pampy (>=0.3.0,<0.4.0)"
    ],
    "requires_python": ">=3.6.1,<4.0.0",
    "summary": "Pattern Matching with XObject.",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7350093,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6731e66f3f53a0859a75cbf0a926f45cb6769a5c50f2d9840bce51c51bfdc7f",
          "md5": "67ae99b55da0d261ad612feecbf2f9be",
          "sha256": "59c69a3ceaf09c7abf6e7340957d3e76062b39178c68d05cea89c24d3cef07ba"
        },
        "downloads": -1,
        "filename": "xpattern-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "67ae99b55da0d261ad612feecbf2f9be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 1925,
        "upload_time": "2020-05-16T14:39:37",
        "upload_time_iso_8601": "2020-05-16T14:39:37.618233Z",
        "url": "https://files.pythonhosted.org/packages/c6/73/1e66f3f53a0859a75cbf0a926f45cb6769a5c50f2d9840bce51c51bfdc7f/xpattern-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fb4ad8fa7ba049b8c05b7356b1b0bceda55b64beac1508e00290cce3c3ecb56",
          "md5": "5a9ccddf42319e530e48f6954a696b1e",
          "sha256": "c012b79b30154f67498aee108585f08a5b4c58f6e85d964635bce0a6404aa23a"
        },
        "downloads": -1,
        "filename": "xpattern-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5a9ccddf42319e530e48f6954a696b1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 1681,
        "upload_time": "2020-05-16T14:39:39",
        "upload_time_iso_8601": "2020-05-16T14:39:39.798728Z",
        "url": "https://files.pythonhosted.org/packages/7f/b4/ad8fa7ba049b8c05b7356b1b0bceda55b64beac1508e00290cce3c3ecb56/xpattern-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a902e879833b0e06ec6f1147b1e605ac815b9938cf127ae2debea26c66e00730",
          "md5": "de863f964288eac1108980d395b3d2d9",
          "sha256": "9e1b9e7373bc8185bd1baed24ddfd0185afcd709fa57904b4c940bee4006f054"
        },
        "downloads": -1,
        "filename": "xpattern-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de863f964288eac1108980d395b3d2d9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 6228,
        "upload_time": "2020-05-20T05:56:35",
        "upload_time_iso_8601": "2020-05-20T05:56:35.423894Z",
        "url": "https://files.pythonhosted.org/packages/a9/02/e879833b0e06ec6f1147b1e605ac815b9938cf127ae2debea26c66e00730/xpattern-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11255938d3a4f45c5e7850c31e1f8ba20384da53fdd4bad1954cf69749610980",
          "md5": "d80340f15a2298b89acbb485385fedfe",
          "sha256": "146001abd0cad3978b4ec324553597e64aa18354bca68f8c41b89e96dfb8a5b0"
        },
        "downloads": -1,
        "filename": "xpattern-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d80340f15a2298b89acbb485385fedfe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 6858,
        "upload_time": "2020-05-20T05:56:36",
        "upload_time_iso_8601": "2020-05-20T05:56:36.923942Z",
        "url": "https://files.pythonhosted.org/packages/11/25/5938d3a4f45c5e7850c31e1f8ba20384da53fdd4bad1954cf69749610980/xpattern-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2042e466eab1f205a12e17a19635950edb46e70a435cb2ea73e0c2019db2017f",
          "md5": "3c6bc7cf508b4ec07845fb0f3482b1a9",
          "sha256": "e86173316a9f2f1465debd59e42741e282daba3e277ad0a60eb74e2432da1104"
        },
        "downloads": -1,
        "filename": "xpattern-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c6bc7cf508b4ec07845fb0f3482b1a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 7015,
        "upload_time": "2020-05-23T15:52:11",
        "upload_time_iso_8601": "2020-05-23T15:52:11.106794Z",
        "url": "https://files.pythonhosted.org/packages/20/42/e466eab1f205a12e17a19635950edb46e70a435cb2ea73e0c2019db2017f/xpattern-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b58c7be88119122b98f89c1efb22d9a9b69df22ee2cb945135543f10fe71f78",
          "md5": "c267e488f6fd987b3b13660d42bb8091",
          "sha256": "7b20cf461787530a485a2e25729030ef8dcd612159d8e2718e5c786a3ea5248a"
        },
        "downloads": -1,
        "filename": "xpattern-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c267e488f6fd987b3b13660d42bb8091",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 7979,
        "upload_time": "2020-05-23T15:52:12",
        "upload_time_iso_8601": "2020-05-23T15:52:12.982873Z",
        "url": "https://files.pythonhosted.org/packages/7b/58/c7be88119122b98f89c1efb22d9a9b69df22ee2cb945135543f10fe71f78/xpattern-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "152df9dbffe177bbcbeaee083c4d00ef774428e68b4f85c60969db3be4d172b3",
          "md5": "69bfa6ff8b73a4e2e9e900c677685dac",
          "sha256": "52568ba42c2a6620194d5e2ac250326b54759e0c0f9b3a52ff94dac2d9d5e59a"
        },
        "downloads": -1,
        "filename": "xpattern-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69bfa6ff8b73a4e2e9e900c677685dac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 7673,
        "upload_time": "2020-05-28T16:03:40",
        "upload_time_iso_8601": "2020-05-28T16:03:40.774693Z",
        "url": "https://files.pythonhosted.org/packages/15/2d/f9dbffe177bbcbeaee083c4d00ef774428e68b4f85c60969db3be4d172b3/xpattern-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b213c8dbf196dd5cfdcc1703309c6345be8c062fd0367b47651ae920275359d9",
          "md5": "3541cc1fd93a85211de2c3aa05725c62",
          "sha256": "1780eda3739db3463ed122c40ef5fcf1567e83e0e19f4990011284191cb9062e"
        },
        "downloads": -1,
        "filename": "xpattern-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3541cc1fd93a85211de2c3aa05725c62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 8799,
        "upload_time": "2020-05-28T16:03:42",
        "upload_time_iso_8601": "2020-05-28T16:03:42.838515Z",
        "url": "https://files.pythonhosted.org/packages/b2/13/c8dbf196dd5cfdcc1703309c6345be8c062fd0367b47651ae920275359d9/xpattern-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7eafd7ccce15fb1c4b19674ac43d0616f4034ddee6a22248c7be6f820bf7f0be",
          "md5": "acf4590cbe8c9539a2d05e768716f2fe",
          "sha256": "ca7eb9958d7d1b8e3fbe31adc574352f326c833816e1d32715038eb95d792eeb"
        },
        "downloads": -1,
        "filename": "xpattern-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "acf4590cbe8c9539a2d05e768716f2fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 7856,
        "upload_time": "2020-05-29T03:10:55",
        "upload_time_iso_8601": "2020-05-29T03:10:55.873739Z",
        "url": "https://files.pythonhosted.org/packages/7e/af/d7ccce15fb1c4b19674ac43d0616f4034ddee6a22248c7be6f820bf7f0be/xpattern-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02a3e40c381388234a043615396c849ef85d5b5dbe408b63017129ecf0608e2a",
          "md5": "483a41c02f796f54884512ea1731d203",
          "sha256": "6d059c913b0b33674a4928846e871cc40d2c5713f1977fd09811d4de558e5127"
        },
        "downloads": -1,
        "filename": "xpattern-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "483a41c02f796f54884512ea1731d203",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 10494,
        "upload_time": "2020-05-29T03:10:57",
        "upload_time_iso_8601": "2020-05-29T03:10:57.450783Z",
        "url": "https://files.pythonhosted.org/packages/02/a3/e40c381388234a043615396c849ef85d5b5dbe408b63017129ecf0608e2a/xpattern-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7eafd7ccce15fb1c4b19674ac43d0616f4034ddee6a22248c7be6f820bf7f0be",
        "md5": "acf4590cbe8c9539a2d05e768716f2fe",
        "sha256": "ca7eb9958d7d1b8e3fbe31adc574352f326c833816e1d32715038eb95d792eeb"
      },
      "downloads": -1,
      "filename": "xpattern-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "acf4590cbe8c9539a2d05e768716f2fe",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.1,<4.0.0",
      "size": 7856,
      "upload_time": "2020-05-29T03:10:55",
      "upload_time_iso_8601": "2020-05-29T03:10:55.873739Z",
      "url": "https://files.pythonhosted.org/packages/7e/af/d7ccce15fb1c4b19674ac43d0616f4034ddee6a22248c7be6f820bf7f0be/xpattern-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "02a3e40c381388234a043615396c849ef85d5b5dbe408b63017129ecf0608e2a",
        "md5": "483a41c02f796f54884512ea1731d203",
        "sha256": "6d059c913b0b33674a4928846e871cc40d2c5713f1977fd09811d4de558e5127"
      },
      "downloads": -1,
      "filename": "xpattern-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "483a41c02f796f54884512ea1731d203",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.1,<4.0.0",
      "size": 10494,
      "upload_time": "2020-05-29T03:10:57",
      "upload_time_iso_8601": "2020-05-29T03:10:57.450783Z",
      "url": "https://files.pythonhosted.org/packages/02/a3/e40c381388234a043615396c849ef85d5b5dbe408b63017129ecf0608e2a/xpattern-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}