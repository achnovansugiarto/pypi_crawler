{
  "info": {
    "author": "Justin Engel",
    "author_email": "jtengel08@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "=================\nQt Thread Updater\n=================\n\nPython Qt thread updater to update GUI items using a separate thread.\n\nThis library allows you to efficiently update Qt GUI elements from a separate thread. Qt GUI elements are not thread\nsafe. Method calls like `Label.setText` do not work in a separate thread. This library solves that problem.\n\n\nUtilities\n=========\n\nThe ThreadUpdater offers several utilities to help with updating a widget's value.\n\n  * call_latest - Call the given function with the most recent value in the main thread using the timer.\n\n    * It is safe to call this many times with the same function.\n    * If the given function is called multiple times it is only called once with the most recent value.\n\n  * call_in_main - Call the given function in the main thread using the timer.\n\n    * Every time you call this function the given function will be called in the main thread\n    * If the given function is called multiple times it will be called every time in the main thread.\n    * If this function is called too many times it could slow down the main event loop.\n\n  * register_continuous - Register a function to be called every time the `ThreadUpdater.update` method is called.\n\n    * The `timeout` variable (in seconds) indicates how often the registered functions will be called.\n\n  * delay - Call a function after the given number of seconds has passed.\n\n    * This will not be accurate. Accuracy can be improved by lowering the timeout to increase how often the timer runs.\n\nThreadUpdater Examples\n======================\n\nBelow are some examples of how the ThreadUpdater would normally be used.\n\n\nSimple Thread Example\n~~~~~~~~~~~~~~~~~~~~~\n\nThe example below tells the update to run lbl.setText in the main thread with the latest value.\n\n.. code-block:: python\n\n    import time\n    import threading\n    from qtpy import QtWidgets\n    from qt_thread_updater import get_updater\n\n    app = QtWidgets.QApplication.instance() or QtWidgets.QApplication([])\n\n    lbl = QtWidgets.QLabel(\"Latest Count: 0\")\n    lbl.resize(300, 300)\n    lbl.show()\n\n    data = {'counter': 0}\n\n    def run(is_alive):\n        is_alive.set()\n        while is_alive.is_set():\n            text = 'Latest Count: {}'.format(data['counter'])\n            get_updater().call_latest(lbl.setText, text)\n            data['counter'] += 1\n            time.sleep(0.001)  # Not needed (still good to have some delay to release the thread)\n\n    alive = threading.Event()\n    th = threading.Thread(target=run, args=(alive,))\n    th.start()\n\n    app.exec_()\n    alive.clear()\n\n\nContinuous Update Example\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe example below continuously runs the update function every time `ThreadUpdater.update()` is called from the timer.\nThis may be inefficient if there is no new data to update the label with.\n\n.. code-block:: python\n\n    import time\n    import threading\n    from qtpy import QtWidgets\n    import qt_thread_updater\n    # from qt_thread_updater import get_updater\n\n    app = QtWidgets.QApplication.instance() or QtWidgets.QApplication([])\n\n    lbl = QtWidgets.QLabel(\"Continuous Count: 0\")\n    lbl.resize(300, 300)\n    lbl.show()\n\n    data = {'counter': 0}\n\n    qt_thread_updater.set_updater(qt_thread_updater.ThreadUpdater(1/60))\n\n    @qt_thread_updater.register_continuous\n    def update():\n        \"\"\"Update the label with the current value.\"\"\"\n        lbl.setText('Continuous Count: {}'.format(data['counter']))\n\n    # get_updater().register_continuous(update)\n\n    def run(is_alive):\n        is_alive.set()\n        while is_alive.is_set():\n            data['counter'] += 1\n            # time.sleep(0.001)  # Not needed (still good to have some delay to release the thread)\n\n    alive = threading.Event()\n    th = threading.Thread(target=run, args=(alive,))\n    th.start()\n\n    qt_thread_updater.delay(5, app.quit)  # Quit after 5 seconds\n    app.exec_()\n    alive.clear()\n    cleanup_app()\n\n\nCall In Main Example\n~~~~~~~~~~~~~~~~~~~~\n\nThe example below calls the append function every time. It may not be efficient.\n\n.. code-block:: python\n\n    import time\n    import threading\n    from qtpy import QtWidgets\n    from qt_thread_updater import get_updater\n\n    app = QtWidgets.QApplication.instance() or QtWidgets.QApplication([])\n\n    text_edit = QtWidgets.QTextEdit()\n    text_edit.resize(300, 300)\n    text_edit.setReadOnly(True)\n    text_edit.show()\n\n    data = {'counter': 0}\n\n    def run(is_alive):\n        is_alive.set()\n        while is_alive.is_set():\n            text = 'Main Count: {}'.format(data['counter'])\n            get_updater().call_in_main(text_edit.append, text)\n            data['counter'] += 1\n            time.sleep(0.01)  # Some delay/waiting is required\n\n    alive = threading.Event()\n    th = threading.Thread(target=run, args=(alive,))\n    th.start()\n\n    app.exec_()\n    alive.clear()\n\n\nDelay Example\n~~~~~~~~~~~~~\n\nThe example below calls the append function after X number of seconds has passed. The delay function will not be\naccurate, but guarantees that the function is called after X number of seconds. To increase accuracy give the\n`ThreadUpdater` a smaller timeout for it to run at a faster rate.\n\n.. code-block:: python\n\n    import time\n    import threading\n    from qtpy import QtWidgets\n    from qt_thread_updater import get_updater\n\n    app = QtWidgets.QApplication.instance() or QtWidgets.QApplication([])\n\n    text_edit = QtWidgets.QTextEdit()\n    text_edit.resize(300, 300)\n    text_edit.setReadOnly(True)\n    text_edit.show()\n\n    now = time.time()\n\n    def update_text(set_time):\n        text_edit.append('Requested {:.04f} Updated {:.04f}'.format(set_time, time.time() - now))\n\n    # Lower the timeout so it runs at a faster rate.\n    get_updater().timeout = 0  # 0.0001  # Qt runs in milliseconds\n\n    get_updater().delay(0.5, update_text, 0.5)\n    get_updater().delay(1, update_text, 1)\n    get_updater().delay(1.5, update_text, 1.5)\n    get_updater().delay(2, update_text, 2)\n    get_updater().delay(2.5, update_text, 2.5)\n    get_updater().delay(3, update_text, 3)\n\n    app.exec_()\n\n\nWidgets\n=======\n\nI've decdied to include a couple of useful Qt Widgets with this library.\n\n  * QuickPlainTextEdit - Used to display fast streams of data\n  * QuickTextEdit - Display fast streams of data with color.\n\n\nQuickPlainTextEdit\n~~~~~~~~~~~~~~~~~~\n\nQuickly display data from a separate thread.\n\n.. code-block:: python\n\n    import time\n    import threading\n    from qtpy import QtWidgets\n    from qt_thread_updater.widgets.quick_text_edit import QuickPlainTextEdit\n\n    app = QtWidgets.QApplication.instance() or QtWidgets.QApplication([])\n\n    text_edit = QuickPlainTextEdit()\n    text_edit.resize(300, 300)\n    text_edit.show()\n\n    data = {'counter': 0}\n\n    def run(is_alive):\n        is_alive.set()\n        while is_alive.is_set():\n            text = 'Main Count: {}\\n'.format(data['counter'])\n            text_edit.write(text)\n            data['counter'] += 1\n            time.sleep(0.0001)  # Some delay is usually required to let the Qt event loop run (not needed if IO used)\n\n    alive = threading.Event()\n    th = threading.Thread(target=run, args=(alive,))\n    th.start()\n\n    app.exec_()\n    alive.clear()\n\n\nQuickTextEdit\n~~~~~~~~~~~~~\n\nQuickly display data from a separate thread using color.\n\n.. code-block:: python\n\n    import time\n    import threading\n    from qtpy import QtWidgets\n    from qt_thread_updater.widgets.quick_text_edit import QuickTextEdit\n\n    app = QtWidgets.QApplication.instance() or QtWidgets.QApplication([])\n\n    text_edit = QuickTextEdit()\n    text_edit.resize(300, 300)\n    text_edit.show()\n\n    data = {'counter': 0}\n\n    def run(is_alive):\n        is_alive.set()\n        while is_alive.is_set():\n            text = 'Main Count: {}\\n'.format(data['counter'])\n            text_edit.write(text, 'blue')\n            data['counter'] += 1\n            time.sleep(0.0001)  # Some delay is usually required to let the Qt event loop run (not needed if IO used)\n\n    alive = threading.Event()\n    th = threading.Thread(target=run, args=(alive,))\n    th.start()\n\n    app.exec_()\n    alive.clear()\n\nQuickTextEdit Redirect\n~~~~~~~~~~~~~~~~~~~~~~\n\nDisplay print (stdout and stderr) in a QTextEdit with color.\n\n.. code-block:: python\n\n    import sys\n    import time\n    import threading\n    from qtpy import QtWidgets\n    from qt_thread_updater.widgets.quick_text_edit import QuickTextEdit\n\n    app = QtWidgets.QApplication.instance() or QtWidgets.QApplication([])\n\n    text_edit = QuickTextEdit()\n    text_edit.resize(300, 300)\n    text_edit.show()\n\n    sys.stdout = text_edit.redirect(sys.__stdout__, color='blue')\n    sys.stderr = text_edit.redirect(sys.__stderr__, color='red')\n\n    data = {'counter': 0}\n\n    def run(is_alive):\n        is_alive.set()\n        while is_alive.is_set():\n            stdout_text = 'Main Count: {}'.format(data['counter'])  # Print gives \\n automatically\n            error_text = 'Error Count: {}'.format(data['counter'])  # Print gives \\n automatically\n\n            # Print automatically give '\\n' with the \"end\" keyword argument.\n            print(stdout_text)  # Print will write to sys.stdout where the rediect will write to text_edit and stdout\n            print(error_text, file=sys.stderr)  # Print to sys.stderr. Rediect will write to text_edit and stderr\n\n            data['counter'] += 1\n\n            # Some delay is usually desired. print/sys.__stdout__ uses IO which gives time for Qt's event loop.\n            # time.sleep(0.0001)\n\n    alive = threading.Event()\n    th = threading.Thread(target=run, args=(alive,))\n    th.start()\n\n    app.exec_()\n    alive.clear()\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/justengel/qt_thread_updater/archive/v1.1.6.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/justengel/qt_thread_updater",
    "keywords": "PyQt PyQt4 PyQt5 PySide PySide2 QtPy Thread Update GUI",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "qt-thread-updater",
    "package_url": "https://pypi.org/project/qt-thread-updater/",
    "platform": "any",
    "project_url": "https://pypi.org/project/qt-thread-updater/",
    "project_urls": {
      "Download": "https://github.com/justengel/qt_thread_updater/archive/v1.1.6.tar.gz",
      "Homepage": "https://github.com/justengel/qt_thread_updater"
    },
    "release_url": "https://pypi.org/project/qt-thread-updater/1.1.6/",
    "requires_dist": [
      "QtPy (>=1.9.0)"
    ],
    "requires_python": "",
    "summary": "Python Qt thread updater to update GUI items using a separate thread.",
    "version": "1.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10577310,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4263c4b976963249977c879613be4f687e1f0a2375cab9a268a048e7adb7da0",
          "md5": "38a007dab1ce2ce8301a31bd1fb7b7ae",
          "sha256": "ac138c89f9639cc3af256a53e989d5a4e2b249b11d375ebe1ece342c83e93887"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "38a007dab1ce2ce8301a31bd1fb7b7ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6691,
        "upload_time": "2020-04-08T02:34:45",
        "upload_time_iso_8601": "2020-04-08T02:34:45.252678Z",
        "url": "https://files.pythonhosted.org/packages/c4/26/3c4b976963249977c879613be4f687e1f0a2375cab9a268a048e7adb7da0/qt_thread_updater-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f462fe76da6bf06b60da6a585f28abb8ce73053b56e83075fe706036ccc9b71",
          "md5": "26a56e7f9fb58f7dd2899932e3f815ce",
          "sha256": "f6186174dbc202b132fb365860106a9c4e450a8053e71ec73eff8c26120cc3f6"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "26a56e7f9fb58f7dd2899932e3f815ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8605,
        "upload_time": "2020-04-09T20:26:46",
        "upload_time_iso_8601": "2020-04-09T20:26:46.309953Z",
        "url": "https://files.pythonhosted.org/packages/1f/46/2fe76da6bf06b60da6a585f28abb8ce73053b56e83075fe706036ccc9b71/qt_thread_updater-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03a5201dd987ae2ecaaf6fca9b479553c2fa07dca8dc86edc61f9fb69ce7b8a0",
          "md5": "51e0e6393158f818211be42cc7ec9a00",
          "sha256": "440a68f215a1b0f02bc335093899dcc45acf6853ac57eae7f8ed31b11c0490ff"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "51e0e6393158f818211be42cc7ec9a00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13489,
        "upload_time": "2020-04-10T04:26:46",
        "upload_time_iso_8601": "2020-04-10T04:26:46.320319Z",
        "url": "https://files.pythonhosted.org/packages/03/a5/201dd987ae2ecaaf6fca9b479553c2fa07dca8dc86edc61f9fb69ce7b8a0/qt_thread_updater-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8b367c86e511ec16263ce54ceeb9af1dee6094649deca7703c0ba4c480d7826",
          "md5": "37d8f916b7dcfd95f4d47fac07426387",
          "sha256": "3b5b171426c31c88b5a4fcff9c810dd19af891edba4fcc69eb6e8655ec843db8"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37d8f916b7dcfd95f4d47fac07426387",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24983,
        "upload_time": "2020-08-26T19:18:27",
        "upload_time_iso_8601": "2020-08-26T19:18:27.304306Z",
        "url": "https://files.pythonhosted.org/packages/e8/b3/67c86e511ec16263ce54ceeb9af1dee6094649deca7703c0ba4c480d7826/qt_thread_updater-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ebe1419493ba6df363a92548a0d030ebf284598d99226e7781fe4ed3c29c0b5",
          "md5": "fd79e24cb09635e608a8526fdbab5b2a",
          "sha256": "d75cb5cd267c49f83b26d9c42fb61a0d01be1dc94df6908f4fa8997dfce6c24e"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fd79e24cb09635e608a8526fdbab5b2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13918,
        "upload_time": "2020-08-26T19:18:29",
        "upload_time_iso_8601": "2020-08-26T19:18:29.206777Z",
        "url": "https://files.pythonhosted.org/packages/3e/be/1419493ba6df363a92548a0d030ebf284598d99226e7781fe4ed3c29c0b5/qt_thread_updater-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "197f199df5ac8338afe8eddf30211ae34288298ae4ec10f36a226d67c6661342",
          "md5": "8a21d695e9e29251b4661027beb83313",
          "sha256": "5dcf2d558030fafca0e3744665cdf615c755770e231413c49409498a40e8ef45"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a21d695e9e29251b4661027beb83313",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38074,
        "upload_time": "2020-09-11T16:32:23",
        "upload_time_iso_8601": "2020-09-11T16:32:23.138777Z",
        "url": "https://files.pythonhosted.org/packages/19/7f/199df5ac8338afe8eddf30211ae34288298ae4ec10f36a226d67c6661342/qt_thread_updater-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b90dc4aa33873cb8debe4a780fd7f101f61ec41c9f6d208cd38066f0adf925c8",
          "md5": "9f4a3c823fe93f97b155536227b68546",
          "sha256": "d1e39d64a40e98ee19ec5ea26e9988ad7080f60449bc7999a3953f75341a05fb"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9f4a3c823fe93f97b155536227b68546",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14127,
        "upload_time": "2020-09-11T16:32:25",
        "upload_time_iso_8601": "2020-09-11T16:32:25.335073Z",
        "url": "https://files.pythonhosted.org/packages/b9/0d/c4aa33873cb8debe4a780fd7f101f61ec41c9f6d208cd38066f0adf925c8/qt_thread_updater-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bec0e8a3ac13ecd3e8ec9c139500af029d4eb1993212cb8c6b4d105561484da1",
          "md5": "d2773b52ecd6bcc0a49401b8880ef8cc",
          "sha256": "15cb8632aa52d36964ae7f611a3f114a0e0efd3e0c5a48c0bf55c1cd6321248e"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2773b52ecd6bcc0a49401b8880ef8cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38248,
        "upload_time": "2020-09-14T11:05:54",
        "upload_time_iso_8601": "2020-09-14T11:05:54.306095Z",
        "url": "https://files.pythonhosted.org/packages/be/c0/e8a3ac13ecd3e8ec9c139500af029d4eb1993212cb8c6b4d105561484da1/qt_thread_updater-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b52c072bca49689ec2a4d225bb0a14c8d0a626721e0036c2b1ff14aad19da373",
          "md5": "5133203080cd49ab81371f061ced01aa",
          "sha256": "d66d9d501a8a5f90b6aa8ebbdfb83ecfeafe95dff8555d14bdd3bb10200407e3"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5133203080cd49ab81371f061ced01aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14157,
        "upload_time": "2020-09-14T11:05:56",
        "upload_time_iso_8601": "2020-09-14T11:05:56.003266Z",
        "url": "https://files.pythonhosted.org/packages/b5/2c/072bca49689ec2a4d225bb0a14c8d0a626721e0036c2b1ff14aad19da373/qt_thread_updater-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97c733df1595077adaf30f1b023f69c01abec5a0cb0bf89373a520326cd7e627",
          "md5": "0f20a29dced90726d8aab67aff4bd75d",
          "sha256": "3797a7ea21766678bc0e42c53e6f5fb9ce96715368473bc376ce440f9c38a9b8"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-1.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f20a29dced90726d8aab67aff4bd75d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38875,
        "upload_time": "2020-11-05T18:50:06",
        "upload_time_iso_8601": "2020-11-05T18:50:06.578795Z",
        "url": "https://files.pythonhosted.org/packages/97/c7/33df1595077adaf30f1b023f69c01abec5a0cb0bf89373a520326cd7e627/qt_thread_updater-1.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcae83258461d6630a15b90c6a9ba1e051e4a99b168f468de58f5094e37d47a1",
          "md5": "1b837a4fb5c58f8d40c4ac95964cad5a",
          "sha256": "b7ac57136c03140960357976d7164412205fed307c9d4cd01e243d7c5a9b0c50"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1b837a4fb5c58f8d40c4ac95964cad5a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14162,
        "upload_time": "2020-11-05T18:50:08",
        "upload_time_iso_8601": "2020-11-05T18:50:08.047972Z",
        "url": "https://files.pythonhosted.org/packages/bc/ae/83258461d6630a15b90c6a9ba1e051e4a99b168f468de58f5094e37d47a1/qt_thread_updater-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1d3cb10d6b4bfa5cc770a7908d06651a9c090be547aaf5c47e6cfefa835825e",
          "md5": "6fdbbf5bc62f41573521d931f32f2710",
          "sha256": "ae4cecd0e06aa37b1bb597c829ffff6e295b169ea9d155d7d2fa06e2472a4af2"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-1.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6fdbbf5bc62f41573521d931f32f2710",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38958,
        "upload_time": "2021-02-25T13:03:19",
        "upload_time_iso_8601": "2021-02-25T13:03:19.090819Z",
        "url": "https://files.pythonhosted.org/packages/b1/d3/cb10d6b4bfa5cc770a7908d06651a9c090be547aaf5c47e6cfefa835825e/qt_thread_updater-1.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea18ed84afddd3a01c2141cc433e552a1ad5054e0ecc8304b682d75a3efb655f",
          "md5": "e13ea0233d11a85c1bb241d2e382eeb0",
          "sha256": "9dcbea57152dd96840a702907f4f36a299ed55c59d2de3bdbf4d6ea54236890f"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-1.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e13ea0233d11a85c1bb241d2e382eeb0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14286,
        "upload_time": "2021-02-25T13:03:20",
        "upload_time_iso_8601": "2021-02-25T13:03:20.335444Z",
        "url": "https://files.pythonhosted.org/packages/ea/18/ed84afddd3a01c2141cc433e552a1ad5054e0ecc8304b682d75a3efb655f/qt_thread_updater-1.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e561394f954c577a26c564e24ee387a21fd96a222ee4d8d0443c94d79a4a10a9",
          "md5": "c35a3a5d386cff41026dd649ba4ef1fb",
          "sha256": "365aa902928617f8ef5ba7bf9e2299201bab2a271b36808d525bb1cd620fda04"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-1.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c35a3a5d386cff41026dd649ba4ef1fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 40399,
        "upload_time": "2021-06-07T12:35:58",
        "upload_time_iso_8601": "2021-06-07T12:35:58.540724Z",
        "url": "https://files.pythonhosted.org/packages/e5/61/394f954c577a26c564e24ee387a21fd96a222ee4d8d0443c94d79a4a10a9/qt_thread_updater-1.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "823cda9c327ef5eb17f21fb463e46672bbb8c86ceaf3447b584dbaf565a13fdb",
          "md5": "17a4dbf7a594537a8ac10c8e91adef99",
          "sha256": "57870272d1a75b31f34396b433811589feecd8baba152641fabb75ecb6727fb9"
        },
        "downloads": -1,
        "filename": "qt_thread_updater-1.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "17a4dbf7a594537a8ac10c8e91adef99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14739,
        "upload_time": "2021-06-07T12:35:59",
        "upload_time_iso_8601": "2021-06-07T12:35:59.961926Z",
        "url": "https://files.pythonhosted.org/packages/82/3c/da9c327ef5eb17f21fb463e46672bbb8c86ceaf3447b584dbaf565a13fdb/qt_thread_updater-1.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e561394f954c577a26c564e24ee387a21fd96a222ee4d8d0443c94d79a4a10a9",
        "md5": "c35a3a5d386cff41026dd649ba4ef1fb",
        "sha256": "365aa902928617f8ef5ba7bf9e2299201bab2a271b36808d525bb1cd620fda04"
      },
      "downloads": -1,
      "filename": "qt_thread_updater-1.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c35a3a5d386cff41026dd649ba4ef1fb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 40399,
      "upload_time": "2021-06-07T12:35:58",
      "upload_time_iso_8601": "2021-06-07T12:35:58.540724Z",
      "url": "https://files.pythonhosted.org/packages/e5/61/394f954c577a26c564e24ee387a21fd96a222ee4d8d0443c94d79a4a10a9/qt_thread_updater-1.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "823cda9c327ef5eb17f21fb463e46672bbb8c86ceaf3447b584dbaf565a13fdb",
        "md5": "17a4dbf7a594537a8ac10c8e91adef99",
        "sha256": "57870272d1a75b31f34396b433811589feecd8baba152641fabb75ecb6727fb9"
      },
      "downloads": -1,
      "filename": "qt_thread_updater-1.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "17a4dbf7a594537a8ac10c8e91adef99",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14739,
      "upload_time": "2021-06-07T12:35:59",
      "upload_time_iso_8601": "2021-06-07T12:35:59.961926Z",
      "url": "https://files.pythonhosted.org/packages/82/3c/da9c327ef5eb17f21fb463e46672bbb8c86ceaf3447b584dbaf565a13fdb/qt_thread_updater-1.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}