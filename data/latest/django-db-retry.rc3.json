{
  "info": {
    "author": "Dmytro Smyk",
    "author_email": "porovozls@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/django-db-retry.svg)](https://badge.fury.io/py/django-db-retry) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/django-db-retry.svg)\n![GitHub stars](https://img.shields.io/github/stars/parikls/django-db-retry.svg) ![PyPI - Downloads](https://img.shields.io/pypi/dm/django-db-retry.svg) ![GitHub issues](https://img.shields.io/github/issues/parikls/django-db-retry.svg)\n\n## Description\n\nDjango database retries. Main motivation for using this - to deal with network/db issues to avoid data-loss.\n\nUsually when you develop a project locally with a single user - everything works perfectly. Local networks are super-stable, and simultaneous users don't bother you.\nWhen it comes to the real world - your application can (and definitely will) face network issues.\nSecond case - deadlocks, which I personally see too often across different projects.\nAnd the only possible solution here to avoid the data-loss - to do a query retry.\n\n**IMPORTANT:** Right now this works **ONLY WITH MYSQL**. If someone requires postgres/other dbs support - please create an issue\n\n## Usage\n\nInstall: `pip install django-db-retry`\n\nChoose your flow (or use both):\n\n- Monkey-patch django internal methods (**IMPORTANT:** global patching won't handle retries for atomic transactions. `with_query_retry` decorator should be used instead)\n- Use explicit decorator\n\n## Monkey-patch:\n\n\nAdd next code somewhere on the top level of your project\n```python\n\nfrom django_db_retry import install as install_db_retries\ninstall_db_retries()\n```\n\nThat's it =)\nAll the needed underlying django methods will be wrapped with the retry decorator and \nwill do execution retry if your app will face a network issue or deadlock \n\n## Decorator\n\nCan be used on top of any function/view and will do a retry if deadlock/network error will happen.\nDefault number of retries is 5. This value can be configured by using the `QueryRetry` class (see example 2):\n\n```python\nfrom django_db_retry import with_query_retry\nfrom django.db.transaction import atomic\n\n@with_query_retry\ndef some_view():\n    query_0, query_1 = ...\n    with atomic():\n        query_0()\n        query_1()\n    return ...\n```\n \nConfiguring own value of retries \n```python\nfrom django_db_retry import QueryRetry\nfrom django.db.transaction import atomic\n\nmy_retry_decorator = QueryRetry(max_tries=100)\n\n@my_retry_decorator\ndef some_view():\n    query_0, query_1 = ...\n    with atomic():\n        query_0()\n        query_1()\n    return ...\n```\n# Todo\n\n- Deal with atomic transactions during global patching\n- Add possibility to install the package using django `INSTALLED_APPS` settings\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/parikls/django-db-retry",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-db-retry",
    "package_url": "https://pypi.org/project/django-db-retry/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-db-retry/",
    "project_urls": {
      "Homepage": "https://github.com/parikls/django-db-retry"
    },
    "release_url": "https://pypi.org/project/django-db-retry/0.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.5.3",
    "summary": "Adds support for database query retries",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12125265,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f3d1da3c975a489cfa49b6e99c1bb651bc37f5f1427a6b02eaeda28ea621b77",
          "md5": "c352c89f143d57ba29799df0534cb2c7",
          "sha256": "9272f943cf1191020f2ac01991d36ee0eae5eaa9e41c937781e30c1e931086d7"
        },
        "downloads": -1,
        "filename": "django-db-retry-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c352c89f143d57ba29799df0534cb2c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3297,
        "upload_time": "2021-11-24T18:02:32",
        "upload_time_iso_8601": "2021-11-24T18:02:32.067826Z",
        "url": "https://files.pythonhosted.org/packages/4f/3d/1da3c975a489cfa49b6e99c1bb651bc37f5f1427a6b02eaeda28ea621b77/django-db-retry-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc33e5f09e5b913d49dac1e90786f8bf64c67b3a54a6af1aa0c9c9500c534ca8",
          "md5": "0c9908e8d2d9f8a3014da526849b6e36",
          "sha256": "9e809e2db00dad04e0d50d7ed645589584787b02554bb37ff503215fb9233283"
        },
        "downloads": -1,
        "filename": "django-db-retry-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0c9908e8d2d9f8a3014da526849b6e36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.3",
        "size": 5284,
        "upload_time": "2021-11-24T18:23:36",
        "upload_time_iso_8601": "2021-11-24T18:23:36.352702Z",
        "url": "https://files.pythonhosted.org/packages/dc/33/e5f09e5b913d49dac1e90786f8bf64c67b3a54a6af1aa0c9c9500c534ca8/django-db-retry-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e904969567a4d42bac955d135f89f721d3fd69c2d71910652f03f40cccb746f1",
          "md5": "67b2adccee6b136271ac5b44894a389c",
          "sha256": "e273b6769addd556c95bd13f77798aed2f0d59d09843e4dc762d69106cf80bea"
        },
        "downloads": -1,
        "filename": "django-db-retry-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "67b2adccee6b136271ac5b44894a389c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.3",
        "size": 5541,
        "upload_time": "2021-11-25T17:43:32",
        "upload_time_iso_8601": "2021-11-25T17:43:32.045961Z",
        "url": "https://files.pythonhosted.org/packages/e9/04/969567a4d42bac955d135f89f721d3fd69c2d71910652f03f40cccb746f1/django-db-retry-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e904969567a4d42bac955d135f89f721d3fd69c2d71910652f03f40cccb746f1",
        "md5": "67b2adccee6b136271ac5b44894a389c",
        "sha256": "e273b6769addd556c95bd13f77798aed2f0d59d09843e4dc762d69106cf80bea"
      },
      "downloads": -1,
      "filename": "django-db-retry-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "67b2adccee6b136271ac5b44894a389c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.3",
      "size": 5541,
      "upload_time": "2021-11-25T17:43:32",
      "upload_time_iso_8601": "2021-11-25T17:43:32.045961Z",
      "url": "https://files.pythonhosted.org/packages/e9/04/969567a4d42bac955d135f89f721d3fd69c2d71910652f03f40cccb746f1/django-db-retry-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}