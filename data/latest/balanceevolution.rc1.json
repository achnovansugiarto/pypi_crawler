{
  "info": {
    "author": "Optimized Options",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "This package allows the user to estimate the evolution of a trading account after a prescribed \nnumber of trades using a Monte Carlo (MC) algorithm. The input of the algorithm is the winning ratio \nand the risk-reward relation associated with a trading plan, which supposedly has been extensively \ntested by the user.\n\nThe *mc* module implements a single class, *Simulation*, which should be instantiated by the user and \nwhich provides a number of methods and properties, such as the ones for calculating the average balance of the \nMC-generated trading paths, giving an estimate of the long run performance of a trading plan, and, perhaps \nmore importantly, the probability of ruin, which is the probability of zeroing out a trading account when \nthe trader strictly follows a trading plan.\n\n### Basic Usage Example\n\n---\n\n    # Estimate of the probability of ruin of a trading strategy\n\n    # Input variables\n    winratio=0.40     # Winning ratio of the strategy (must be between 0 and 1)\n    capital=1000.0    # Initial capital\n    profit=20.0       # Profit per winning trade (must be a positive number)\n    loss=-10.0        # Loss per losing trade (must be a negative number)\n    npaths=1000       # Number of independent trading paths\n    ntrades=1000      # Maximum number of trades per trading path\n\n    # Run a Monte Carlo simulation\n    from BalanceEvolution import mc\n\n    s=mc.Simulation()\n    s.setparams(winratio,capital,profit,loss,npaths,ntrades)\n    s.run()\n\n    # Plot trading paths\n    s.plottradingpaths()\n\n    # Plot histogram of final account balances\n    s.plothist()\n\n    # Average balance, standard devation, maximum and minimum\n    s.getavgbalance()\n\n    # Avgerage consecutive wins, stdandard deviation, maximum and minimum\n    s.getavgconsecutivewins()\n\n    # Avgerage consecutive losses, stdandard deviation, maximum and minimum\n    s.getavgconsecutivelosses()\n\n    # Probability of ruin\n    print(s.ruinprob)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/optimizedoptions/BalanceEvolution",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "BalanceEvolution",
    "package_url": "https://pypi.org/project/BalanceEvolution/",
    "platform": "",
    "project_url": "https://pypi.org/project/BalanceEvolution/",
    "project_urls": {
      "Homepage": "https://github.com/optimizedoptions/BalanceEvolution"
    },
    "release_url": "https://pypi.org/project/BalanceEvolution/0.11/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Monte Carlo simulations of the trading account evolution based on the winning ratio and risk-reward relation of a trading plan.",
    "version": "0.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11094591,
  "releases": {
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2624e19971194fc4ee5503c4726bd82e81f5757ebc8e0cf499bd00766faf694",
          "md5": "cad4c3817e3918ee244d72d2593e608c",
          "sha256": "5af558fdfdd19aa3996be111dfc8fa45df15ddd55c461e601757276542ebfcb2"
        },
        "downloads": -1,
        "filename": "BalanceEvolution-0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cad4c3817e3918ee244d72d2593e608c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4493,
        "upload_time": "2021-08-04T22:07:25",
        "upload_time_iso_8601": "2021-08-04T22:07:25.006522Z",
        "url": "https://files.pythonhosted.org/packages/f2/62/4e19971194fc4ee5503c4726bd82e81f5757ebc8e0cf499bd00766faf694/BalanceEvolution-0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2624e19971194fc4ee5503c4726bd82e81f5757ebc8e0cf499bd00766faf694",
        "md5": "cad4c3817e3918ee244d72d2593e608c",
        "sha256": "5af558fdfdd19aa3996be111dfc8fa45df15ddd55c461e601757276542ebfcb2"
      },
      "downloads": -1,
      "filename": "BalanceEvolution-0.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cad4c3817e3918ee244d72d2593e608c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4493,
      "upload_time": "2021-08-04T22:07:25",
      "upload_time_iso_8601": "2021-08-04T22:07:25.006522Z",
      "url": "https://files.pythonhosted.org/packages/f2/62/4e19971194fc4ee5503c4726bd82e81f5757ebc8e0cf499bd00766faf694/BalanceEvolution-0.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}