{
  "info": {
    "author": "Miguel Cabrera",
    "author_email": "mfcabrera@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: System :: Monitoring"
    ],
    "description": "===============================\nHooqu - Unit Tests for Data\n===============================\n\n.. image:: https://img.shields.io/pypi/v/hooqu.svg\n        :target: https://pypi.python.org/pypi/hooqu\n.. image:: https://travis-ci.com/mfcabrera/hooqu.svg?token=pq89mpsBBBTg11hAgCHH&branch=master\n        :target: https://travis-ci.com/mfcabrera/hooqu\n.. image:: https://readthedocs.org/projects/hooqu/badge/?version=latest\n        :target: https://hooqu.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n.. image:: https://codecov.io/gh/mfcabrera/hooqu/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/mfcabrera/hooqu\n.. image:: https://pyup.io/repos/github/mfcabrera/hooqu/shield.svg\n     :target: https://pyup.io/repos/github/mfcabrera/hooqu/\n     :alt: Updates\n\n----------\n\n**Documentation**: https://hooqu.readthedocs.io\n\n**Source Code**: https://github.com/mfcabrera/hooqu\n\n----------\n\n\nInstall\n-------\n\nHooqu requires Pandas >= 1.0 and Python >= 3.7. To install via pip use:\n\n::\n\n   pip install hooqu\n\n\nQuick Start\n-----------\n\n\n.. code:: python\n\n   import pandas as pd\n\n   # data to validate\n   df = pd.DataFrame(\n          [\n              (1, \"Thingy A\", \"awesome thing.\", \"high\", 0),\n              (2, \"Thingy B\", \"available at http://thingb.com\", None, 0),\n              (3, None, None, \"low\", 5),\n              (4, \"Thingy D\", \"checkout https://thingd.ca\", \"low\", 10),\n              (5, \"Thingy E\", None, \"high\", 12),\n          ],\n          columns=[\"id\", \"productName\", \"description\", \"priority\", \"numViews\"]\n   )\n\nChecks we want to perform:\n\n- there are 5 rows in total\n- values of the id attribute are never Null/None and unique\n- values of the productName attribute are never null/None\n- the priority attribute can only contain \"high\" or \"low\" as value\n- numViews should not contain negative values\n- at least half of the values in description should contain a url\n- the median of numViews should be less than or equal to 10\n\nIn code this looks as follows:\n\n.. code:: python\n\n    from hooqu.checks import Check, CheckLevel, CheckStatus\n    from hooqu.verification_suite import VerificationSuite\n    from hooqu.constraints import ConstraintStatus\n\n\n    verification_result = (\n          VerificationSuite()\n          .on_data(df)\n          .add_check(\n              Check(CheckLevel.ERROR, \"Basic Check\")\n              .has_size(lambda sz: sz == 5)  # we expect 5 rows\n              .is_complete(\"id\")  # should never be None/Null\n              .is_unique(\"id\")  # should not contain duplicates\n              .is_complete(\"productName\")  # should never be None/Null\n              .is_contained_in(\"priority\", (\"high\", \"low\"))\n              .is_non_negative(\"numViews\")\n              # .contains_url(\"description\", lambda d: d >= 0.5) (NOT YET IMPLEMENTED)\n              .has_quantile(\"numViews\", 0.5, lambda v: v <= 10)\n          )\n          .run()\n    )\n\n\n\nAfter calling ``run``, hooqu will compute some metrics on the data. Afterwards it invokes your assertion functions\n(e.g., ``lambda sz: sz == 5`` for the size check) on these metrics to see if the constraints hold on the data.\n\nWe can inspect the `VerificationResult <https://github.com/mfcabrera/hooqu/blob/b2c522854c674db9496c89d540df3fe4bb30d882/hooqu/verification_suite.py#L17>`_ to see if the test found errors:\n\n.. code:: python\n\n    if verification_result.status == CheckStatus.SUCCESS:\n          print(\"Alles klar: The data passed the test, everything is fine!\")\n    else:\n          print(\"We found errors in the data\")\n\n    for check_result in verification_result.check_results.values():\n          for cr in check_result.constraint_results:\n              if cr.status != ConstraintStatus.SUCCESS:\n                  print(f\"{cr.constraint}: {cr.message}\")\n\n\nIf we run the example, we get the following output:\n\n::\n\n   We found errors in the data\n   CompletenessConstraint(Completeness(productName)): Value 0.8 does not meet the constraint requirement.\n\nThe test found that our assumptions are violated! Only 4 out of 5 (80%) of the values of the productName attribute are non-null.\nFortunately, we ran a test and found the errors, somebody should immediately fix the data :)\n\n\nContributing\n------------\n\nAll contributions, bug reports, bug fixes, documentation improvements,\nenhancements and ideas are welcome.  Please use `GitHub issues\n<https://github.com/mfcabrera/hooqu/issues>`_: for bug reports,\nfeature requests, install issues, RFCs, thoughts, etc.\n\nSee the full `cotributing guide <https://github.com/mfcabrera/hooqu/blob/master/CONTRIBUTING.rst>`_ for more information.\n\n\nWhy Hooqu?\n----------\n\n- Easy to use declarative API to add data verification steps to your\n  data processing pipeline.\n- The ``VerificationResult`` allows you know not only what check fail\n  but the values of the computed metric, allowing for flexible\n  handling of issues with the data.\n- Incremental metric computation capability allows to compare quality\n  metrics change across time (planned).\n- Support for storing and loading computed metrics (planned).\n\n\n\nReferences\n----------\n\nThis project is a \"spiritual\" port of `Apache Deequ <https://github.com/awslabs/deequ/>`_ and thus tries to implement\nthe declarative API described on the paper \"`Automating large-scale data quality verification <http://www.vldb.org/pvldb/vol11/p1781-schelter.pdf>`_\"\nwhile trying to remain pythonic as much as possible. This project does not use (py)Spark but rather\nPandas (and hopefully in the future it will support other compatible dataframe implementations).\n\n\nName\n----\n\nJukumari (pronounced hooqumari) is the Aymara name for the `spectacled bear <https://en.wikipedia.org/wiki/Spectacled_bear>`_ (*Tremarctos ornatus*), also known as the Andean\nbear, Andean short-faced bear, or mountain bear.\n\n\nChangelog\n=========\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on `Keep a\nChangelog <https://keepachangelog.com/en/1.0.0/>`__, and this project\nadheres to `Semantic\nVersioning <https://semver.org/spec/v2.0.0.html>`__.\n\n[0.1.0] - 2020-08-26\n--------------------\n\nInitial release. The following checks are available:\n\n- has_completeness\n- has_max\n- has_mean\n- has_min\n- has_quantile\n- has_size\n- has_standard_deviation\n- has_sum\n- has_uniqueness\n- is_complete\n- is_contained_in\n- is_contained_in_range\n- is_non_negative\n- is_positive\n- is_unique\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mfcabrera/hooqu",
    "keywords": "hooqu",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hooqu",
    "package_url": "https://pypi.org/project/hooqu/",
    "platform": "",
    "project_url": "https://pypi.org/project/hooqu/",
    "project_urls": {
      "Homepage": "https://github.com/mfcabrera/hooqu"
    },
    "release_url": "https://pypi.org/project/hooqu/0.1.0/",
    "requires_dist": [
      "pandas (>=1.0.0)",
      "tryingsnake (>=0.5.0)",
      "more-itertools (>=8.2.0)",
      "pip (==20.1.1) ; extra == 'testing'",
      "punch.py (==2.0.0) ; extra == 'testing'",
      "wheel (==0.34.2) ; extra == 'testing'",
      "watchdog (==0.10.3) ; extra == 'testing'",
      "flake8 (==3.8.3) ; extra == 'testing'",
      "Sphinx (==3.2.1) ; extra == 'testing'",
      "PyYAML (==5.3.1) ; extra == 'testing'",
      "tox (==3.19.0) ; extra == 'testing'",
      "coverage (==5.2) ; extra == 'testing'",
      "pytest (==5.4.3) ; extra == 'testing'",
      "pytest-cov (==2.10.0) ; extra == 'testing'",
      "black (==19.10b0) ; extra == 'testing'",
      "hypothesis (==5.29.0) ; extra == 'testing'",
      "mypy (==0.782) ; extra == 'testing'",
      "mypy-extensions (==0.4.3) ; extra == 'testing'",
      "codecov (==2.1.9) ; extra == 'testing'"
    ],
    "requires_python": ">=3.7",
    "summary": "Data unit testing for your Python DataFrames",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8045053,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7415ddaad5f1007eff18de13ca216faa8830dd76617a0ef6b18e9e79a49a494f",
          "md5": "36a5e413f0dfd34fe53336aa9331b2b9",
          "sha256": "499a61cbb56001c225a59fdbc1ce6e5e057a9b6b7b8439240bb47b9d9c6e44be"
        },
        "downloads": -1,
        "filename": "hooqu-0.1.0-3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36a5e413f0dfd34fe53336aa9331b2b9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 49537,
        "upload_time": "2020-08-26T16:24:33",
        "upload_time_iso_8601": "2020-08-26T16:24:33.009029Z",
        "url": "https://files.pythonhosted.org/packages/74/15/ddaad5f1007eff18de13ca216faa8830dd76617a0ef6b18e9e79a49a494f/hooqu-0.1.0-3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb2c00adb9031fe3bd94b8e412c80b8c113aa01637beb81b6c212599bac35a7a",
          "md5": "ff2c83040bd09e294e0943a087123f96",
          "sha256": "2f026766c46f0b058f3492485b61c3e8b76c55caf9e676a1ce55805571866006"
        },
        "downloads": -1,
        "filename": "hooqu-0.1.0.zip",
        "has_sig": false,
        "md5_digest": "ff2c83040bd09e294e0943a087123f96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 76392,
        "upload_time": "2020-08-26T16:19:53",
        "upload_time_iso_8601": "2020-08-26T16:19:53.474233Z",
        "url": "https://files.pythonhosted.org/packages/cb/2c/00adb9031fe3bd94b8e412c80b8c113aa01637beb81b6c212599bac35a7a/hooqu-0.1.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7415ddaad5f1007eff18de13ca216faa8830dd76617a0ef6b18e9e79a49a494f",
        "md5": "36a5e413f0dfd34fe53336aa9331b2b9",
        "sha256": "499a61cbb56001c225a59fdbc1ce6e5e057a9b6b7b8439240bb47b9d9c6e44be"
      },
      "downloads": -1,
      "filename": "hooqu-0.1.0-3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "36a5e413f0dfd34fe53336aa9331b2b9",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 49537,
      "upload_time": "2020-08-26T16:24:33",
      "upload_time_iso_8601": "2020-08-26T16:24:33.009029Z",
      "url": "https://files.pythonhosted.org/packages/74/15/ddaad5f1007eff18de13ca216faa8830dd76617a0ef6b18e9e79a49a494f/hooqu-0.1.0-3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cb2c00adb9031fe3bd94b8e412c80b8c113aa01637beb81b6c212599bac35a7a",
        "md5": "ff2c83040bd09e294e0943a087123f96",
        "sha256": "2f026766c46f0b058f3492485b61c3e8b76c55caf9e676a1ce55805571866006"
      },
      "downloads": -1,
      "filename": "hooqu-0.1.0.zip",
      "has_sig": false,
      "md5_digest": "ff2c83040bd09e294e0943a087123f96",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 76392,
      "upload_time": "2020-08-26T16:19:53",
      "upload_time_iso_8601": "2020-08-26T16:19:53.474233Z",
      "url": "https://files.pythonhosted.org/packages/cb/2c/00adb9031fe3bd94b8e412c80b8c113aa01637beb81b6c212599bac35a7a/hooqu-0.1.0.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}