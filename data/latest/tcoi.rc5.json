{
  "info": {
    "author": "",
    "author_email": "Husayn al-Qurashi <husayn@dnmx.org>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "## TABLE OF CONTENTS\n- [TCOI: THE CODE OF ISHAQ](#tcoi-the-code-of-ishaq)\n  - [1. HASHERS](#1-hashers)\n  - [2. HASHFILES](#2-hashfiles)\n  - [3. HASHSERVERS](#3-hashservers)\n  - [USAGE](#usage)\n    - [IN PYTHON](#in-python)\n    - [IN RUST](#in-rust)\n    - [IN JAVASCRIPT](#in-javascript)\n  - [CONCLUSION](#conclusion)\n  - [LICENSE](#license)\n\n# TCOI: THE CODE OF ISHAQ\n\n*ABSTRACT:* In this Document, I will go through the structure of a variant of hashing that will introduce Hashfiles, Hashservers and Ishaq Codes, which revolves around generating random codes stored in a file containing key-value pairs, called a Hashfile, linked to their original value, as such will be an HTTP web service called a Hashserver that will host this program, called a Hasher, and users will be able to request Ishaq Codes from the Hashserver, and so will the Hashserver retrieve those codes from the Hashfile and give them back to the user in an HTTP Response.\n\n[[GitHub]](https://github.com/QurashiAkh/tcoi/) - [[PyPI]](https://pypi.org/project/tcoi/) - [[Crates.io]](https://crates.io/crates/tcoi/) - [[npm]](https://www.npmjs.com/package/tcoi/)\n\n## 1. HASHERS\n\nThe Hasher is the main program that receives a string value, called a text, and then validate if the text is already assigned a code in the Hashfile or not. If it was, then the Hasher will return the code (i.e. the Ishaq Code) back to the user.\n\nIf the text wasn’t found in the Hashfile then the Hasher will generate a random 28-letter sequence of characters and insert `Q-` in the beginning. Such will be the new Ishaq Code for that value, which will be returned to the user and appended to the Hashfile.\n\nSuch means that the User will always receive the same Ishaq Code if he has given the same text value.\n\n## 2. HASHFILES\n\nHashfiles are files named `.hashfile` which will contain the hashes generated by the Hasher in a YAML-like format. The Hashfile must be under complete control by the Hasher, and it should be not be tampered with whatsoever. An Example of what a Hashfile contains is the following:\n\n```yaml\nishaq: Q-vN8HH8ZBnjJZaemFGr.B5Z8qlKBI\nrandom text: Q-MsG4Lf0O9zCZgTqmy21UvtAVKUai\nhello: Q-2I6FNiwHvIWuEl2tnW3229N5ZAaY\n```\n\n## 3. HASHSERVERS\n\nA Hashserver is an HTTP web service that hosts a Hasher which performs the functionality explained above. A Hashserver is an implementation of decentralised Ishaq Codes, as the use of a Hasher alone isn't practical in most use cases.\n\nUsers may send `POST` requests to the Hashserver’s home `/` route and the Response will be a JSON-formatted response that consists of an object containing two values, that are `text` which is the original value requested, and `tcoi` which is the Ishaq Code, which would look similar to this:\n\n```json\n{\n    \"text\": \"dummy text\",\n    \"tcoi\": \"Q-dummyishaqcode\"\n}\n```\n\nIf the `/` Route gets a `DELETE` Request, which clears the Hashfile and deletes all codes, the HTTP Request would need an `Authorization` Header which contains a Secret Passphrase that permits him to perform that operation. If the `/` Route gets an authorised `GET` request, it will return a list of all the currently generated codes. If the `/` Route gets a usual `GET` request, it'll respond with text saying:\n\n```\nTCOI Hashserver @ [Hashserver's IP Address or full Domain]\n```\n\nHashservers are conventionally hosted on the subdomain `hs`, as an example:\n```\nhttp://hs.example.com\n```\n\n## USAGE\n\n### IN PYTHON\n\nIn order to use TCOI, you need to [download it](https://pypi.org/project/tcoi/). You can either fork [the Repository](https://github.com/QurashiAkh/tcoi/) or run:\n\n```\npip install tcoi\n```\n\nNow you can import the `tcoi` module in your application and make a `Hasher` Instance, then use it to get `TCOI` codes, clear your hashfile, and more. An Example of a simple TCOI-powered program would be:\n\n```python\nfrom tcoi import Hasher\n\ntext = input(\"Q>>> \").strip()\n\nhasher = Hasher()\n\nresult = hasher.get_tcoi(text)\n\nprint(f\"{result['text']}: {result['tcoi']}\")\n```\n\n### IN RUST\n\nYou can also fork the Repository or add [`tcoi`](https://crates.io/crates/tcoi) to your dependencies:\n\n```\ncargo add tcoi\n```\n\nThen make an Instance of the `Hasher` Struct and use the `get_tcoi` method to retrieve TCOI codes.\n\nSee `rust/examples/main.rs`:\n```rust\nuse std::io::{self, Write};\n\nuse tcoi::Hasher;\n\nfn main() {\n    let mut input_text = String::new();\n\n    print!(\"Q>>> \");\n    io::stdout().flush().unwrap();\n\n    io::stdin()\n        .read_line(&mut input_text)\n        .expect(\"UNEXPECTED INPUT!\");\n\n    let text = input_text.trim().to_string();\n\n    let hasher = Hasher {};\n\n    match hasher.get_tcoi(text.clone()) {\n        Ok(hashmap) => println!(\"{}: {}\", text, hashmap[&text]),\n        Err(_) => println!(\"ERROR: EMPTY TEXT!\"),\n    }\n}\n```\n\n### IN JAVASCRIPT\n\nInstall the [`tcoi` library](https://www.npmjs.com/package/tcoi) from `npm` using:\n\n```\nnpm i tcoi\n```\n\nthen make an instance of the `Hasher` object and make use of its methods to get TCOI codes.\n\nSee `js/example.js`:\n```javascript\nimport { Hasher } from 'tcoi'\n\nconst hasher = new Hasher()\n\nconst result = await hasher.getTcoi(\"nice\")\nconsole.log(result)\n\nconst result2 = await hasher.getTcoi(\"nice\")\nconsole.log(result2)\n\nif (result.tcoi === result2.tcoi) {\n    console.log(\"WORKS!\")\n} else {\n    console.log(\"SOMETHING GOT MESSED UP..\")\n}\n```\n\n## CONCLUSION\n\nThe Code of Ishaq is an alternative form of hashing that aims to implement decentralised hashservers that accomplish the goal needed to validate information.\n\nThe Code of Ishaq, however, ought not to be used for large filesize hashing, as such would be inconvenient considering the inefficiency of reuploading a large file back to the Hashserver after downloading it from the source, merely to verify the assigned TCOI for it. The Code of Ishaq is implemented to be used for hashing text messages generally and what goes by that nature.\n\n## LICENSE\n\nTCOI is licensed under the [GNU GPL 3.0](https://www.gnu.org/licenses/gpl-3.0.txt) License.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tcoi",
    "package_url": "https://pypi.org/project/tcoi/",
    "platform": null,
    "project_url": "https://pypi.org/project/tcoi/",
    "project_urls": {
      "Bug Tracker": "https://github.com/qurashiakh/tcoi/issues",
      "Homepage": "https://qurashiakh.dev/the-code-of-ishaq.html"
    },
    "release_url": "https://pypi.org/project/tcoi/0.2.4/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A New Form of Decentralised Hashing.",
    "version": "0.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16980853,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6bbde51115e8d6976ccf8c9b038e60da9c9362f231bc343e06a180909c59b8b3",
          "md5": "3c42a96648b065b412c6e062c4840527",
          "sha256": "1b314fba1079d1a05c482d639c8b4dba58485c73bb3e44ce1da66c44b8cb2913"
        },
        "downloads": -1,
        "filename": "tcoi-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c42a96648b065b412c6e062c4840527",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15604,
        "upload_time": "2023-02-08T17:09:40",
        "upload_time_iso_8601": "2023-02-08T17:09:40.591574Z",
        "url": "https://files.pythonhosted.org/packages/6b/bd/e51115e8d6976ccf8c9b038e60da9c9362f231bc343e06a180909c59b8b3/tcoi-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39bae858102c0baefb6ebb2aabbf68425f9b82a79405ed618d6d43bbbee7fc7e",
          "md5": "b738156314c7cc4ad54ec041fa7074e9",
          "sha256": "014f59d03ca80bbd2da008ae6794f204c864345ff89fdcfe6aaab911eab1ca95"
        },
        "downloads": -1,
        "filename": "tcoi-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b738156314c7cc4ad54ec041fa7074e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15397,
        "upload_time": "2023-02-08T17:09:42",
        "upload_time_iso_8601": "2023-02-08T17:09:42.773167Z",
        "url": "https://files.pythonhosted.org/packages/39/ba/e858102c0baefb6ebb2aabbf68425f9b82a79405ed618d6d43bbbee7fc7e/tcoi-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59532b1638facb361f6cac1c5eaf53c059e17c0adbc5907a0248c21b923d31d6",
          "md5": "e23933339457696d5f5bf0362ff9b147",
          "sha256": "ed50027e69bf03cbb96f39c09bcc86c12776b3761c858e5e01742565865fee14"
        },
        "downloads": -1,
        "filename": "tcoi-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e23933339457696d5f5bf0362ff9b147",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16104,
        "upload_time": "2023-02-08T19:58:08",
        "upload_time_iso_8601": "2023-02-08T19:58:08.415186Z",
        "url": "https://files.pythonhosted.org/packages/59/53/2b1638facb361f6cac1c5eaf53c059e17c0adbc5907a0248c21b923d31d6/tcoi-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4a2d46f5471d913a75cb25f06b9a623abd9b3bca232606ef7a3937df93c110a",
          "md5": "476f172e03ba4cb72371826eccc404bc",
          "sha256": "d2f703e7a299da736c83f3a9351a3d5dbdb27947fd9976fd867e7efa6f40370e"
        },
        "downloads": -1,
        "filename": "tcoi-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "476f172e03ba4cb72371826eccc404bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15708,
        "upload_time": "2023-02-08T19:58:12",
        "upload_time_iso_8601": "2023-02-08T19:58:12.238338Z",
        "url": "https://files.pythonhosted.org/packages/a4/a2/d46f5471d913a75cb25f06b9a623abd9b3bca232606ef7a3937df93c110a/tcoi-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcdab14e09ed0db42aadf405c5aee7583a5b799638433a6fd16cde6e63d63c87",
          "md5": "83ff6153e38b533529758774f5cc680e",
          "sha256": "1cb254ad5ad61ec08e3390b8d002a578037db0836dbd473b7a3b2acfa533c09a"
        },
        "downloads": -1,
        "filename": "tcoi-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "83ff6153e38b533529758774f5cc680e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16905,
        "upload_time": "2023-02-10T18:00:24",
        "upload_time_iso_8601": "2023-02-10T18:00:24.771952Z",
        "url": "https://files.pythonhosted.org/packages/dc/da/b14e09ed0db42aadf405c5aee7583a5b799638433a6fd16cde6e63d63c87/tcoi-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "050bea96153212714f10dfa7bcbb2eeca3ec444c8969cb02a800bf2b777c433b",
          "md5": "c798dd4d4efc0b9de176390525df01f4",
          "sha256": "76f9d80059a6614b4f4bd33bf35a40ca08e1a62213fbe475d69ad093eac85cd3"
        },
        "downloads": -1,
        "filename": "tcoi-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c798dd4d4efc0b9de176390525df01f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16544,
        "upload_time": "2023-02-10T18:00:28",
        "upload_time_iso_8601": "2023-02-10T18:00:28.882657Z",
        "url": "https://files.pythonhosted.org/packages/05/0b/ea96153212714f10dfa7bcbb2eeca3ec444c8969cb02a800bf2b777c433b/tcoi-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "236682899f2269f62b24ca0b2ce944ac1f93619625a6c8f65e455e5c47806b26",
          "md5": "503b101c913bd81869ef71d9e9f4ac87",
          "sha256": "5b9592e02f13206f70fefc2fac0f872a81876eae130379f176ae29e0226f0b13"
        },
        "downloads": -1,
        "filename": "tcoi-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "503b101c913bd81869ef71d9e9f4ac87",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17224,
        "upload_time": "2023-02-11T16:54:54",
        "upload_time_iso_8601": "2023-02-11T16:54:54.648740Z",
        "url": "https://files.pythonhosted.org/packages/23/66/82899f2269f62b24ca0b2ce944ac1f93619625a6c8f65e455e5c47806b26/tcoi-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b8f4a5c66b80daa3969456a7f79626a3279f6fd0973a1b66d0f0f69aba52b2d",
          "md5": "8d462caf04ef2711beaa893de2a0f973",
          "sha256": "5ffe40076002b397e6334113cc58546f955d80e177d2fe1a572f84de064611df"
        },
        "downloads": -1,
        "filename": "tcoi-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8d462caf04ef2711beaa893de2a0f973",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17009,
        "upload_time": "2023-02-11T16:55:01",
        "upload_time_iso_8601": "2023-02-11T16:55:01.024046Z",
        "url": "https://files.pythonhosted.org/packages/4b/8f/4a5c66b80daa3969456a7f79626a3279f6fd0973a1b66d0f0f69aba52b2d/tcoi-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef985df9ef16f570ab7fbccf2ca97ef1c6b6b302deba4e0b4d78c6ef2787cbe0",
          "md5": "fbcc656d571ed5f4e4d593c72c53314c",
          "sha256": "3e4759891891dfa1e9f9c8e478c483b1ce436e9fcbe3f888474e47f56142648d"
        },
        "downloads": -1,
        "filename": "tcoi-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbcc656d571ed5f4e4d593c72c53314c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17788,
        "upload_time": "2023-02-22T18:26:02",
        "upload_time_iso_8601": "2023-02-22T18:26:02.432514Z",
        "url": "https://files.pythonhosted.org/packages/ef/98/5df9ef16f570ab7fbccf2ca97ef1c6b6b302deba4e0b4d78c6ef2787cbe0/tcoi-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b3f43f86f8e7ea68050d6f1d9a7de6ece6be97ba1d6fcb8bb18ecfae0f13698",
          "md5": "20c68e3054288deddc1599730e92a34b",
          "sha256": "89497c1fb3abea1c4cb2b86f73618e2b509b5ab42e30aa094848a061a83c2e5c"
        },
        "downloads": -1,
        "filename": "tcoi-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "20c68e3054288deddc1599730e92a34b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17500,
        "upload_time": "2023-02-22T18:26:13",
        "upload_time_iso_8601": "2023-02-22T18:26:13.851758Z",
        "url": "https://files.pythonhosted.org/packages/7b/3f/43f86f8e7ea68050d6f1d9a7de6ece6be97ba1d6fcb8bb18ecfae0f13698/tcoi-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef985df9ef16f570ab7fbccf2ca97ef1c6b6b302deba4e0b4d78c6ef2787cbe0",
        "md5": "fbcc656d571ed5f4e4d593c72c53314c",
        "sha256": "3e4759891891dfa1e9f9c8e478c483b1ce436e9fcbe3f888474e47f56142648d"
      },
      "downloads": -1,
      "filename": "tcoi-0.2.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fbcc656d571ed5f4e4d593c72c53314c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 17788,
      "upload_time": "2023-02-22T18:26:02",
      "upload_time_iso_8601": "2023-02-22T18:26:02.432514Z",
      "url": "https://files.pythonhosted.org/packages/ef/98/5df9ef16f570ab7fbccf2ca97ef1c6b6b302deba4e0b4d78c6ef2787cbe0/tcoi-0.2.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b3f43f86f8e7ea68050d6f1d9a7de6ece6be97ba1d6fcb8bb18ecfae0f13698",
        "md5": "20c68e3054288deddc1599730e92a34b",
        "sha256": "89497c1fb3abea1c4cb2b86f73618e2b509b5ab42e30aa094848a061a83c2e5c"
      },
      "downloads": -1,
      "filename": "tcoi-0.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "20c68e3054288deddc1599730e92a34b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 17500,
      "upload_time": "2023-02-22T18:26:13",
      "upload_time_iso_8601": "2023-02-22T18:26:13.851758Z",
      "url": "https://files.pythonhosted.org/packages/7b/3f/43f86f8e7ea68050d6f1d9a7de6ece6be97ba1d6fcb8bb18ecfae0f13698/tcoi-0.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}