{
  "info": {
    "author": null,
    "author_email": "Roman Sadzhenytsia <urchin.dukkee@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Typing :: Typed"
    ],
    "description": "<p align=\"center\">\n  <a href=\"https://filterify.boardpack.org/\"><img src=\"https://filterify.boardpack.org/img/logo-white.png\" alt=\"Filterify\"></a>\n</p>\n<p align=\"center\">\n    <em>filterify is a pydantic-based library to handle filters from the query params.</em>\n</p>\n<p align=\"center\">\n    <a href=\"https://github.com/boardpack/filterify/actions?query=workflow%3ATest\" target=\"_blank\">\n        <img src=\"https://github.com/boardpack/filterify/workflows/Test/badge.svg\" alt=\"Test\">\n    </a>\n    <a href=\"https://codecov.io/gh/boardpack/filterify\" target=\"_blank\">\n        <img src=\"https://img.shields.io/codecov/c/github/boardpack/filterify?color=%2334D058\" alt=\"Coverage\">\n    </a>\n    <a href=\"https://pypi.org/project/filterify\" target=\"_blank\">\n        <img src=\"https://img.shields.io/pypi/v/filterify?color=%2334D058&label=pypi%20package\" alt=\"Package version\">\n    </a>\n    <a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://camo.githubusercontent.com/d91ed7ac7abbd5a6102cbe988dd8e9ac21bde0a73d97be7603b891ad08ce3479/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\" data-canonical-src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" style=\"max-width:100%;\"></a>\n    <a href=\"https://pycqa.github.io/isort/\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/fe4a658dd745f746410f961ae45d44355db1cc0e4c09c7877d265c1380248943/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f253230696d706f7274732d69736f72742d2532333136373462313f7374796c653d666c6174266c6162656c436f6c6f723d656638333336\" alt=\"Imports: isort\" data-canonical-src=\"https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&amp;labelColor=ef8336\" style=\"max-width:100%;\"></a>\n</p>\n\n---\n\n**Documentation**: <a href=\"https://filterify.boardpack.org\" target=\"_blank\">https://filterify.boardpack.org</a>\n\n**Source Code**: <a href=\"https://github.com/boardpack/filterify\" target=\"_blank\">https://github.com/boardpack/filterify</a>\n\n---\n\n## Requirements\n\nPython 3.8+\n\nfilterify has the next dependencies:\n\n* <a href=\"https://pydantic-docs.helpmanual.io/\" class=\"external-link\" target=\"_blank\">Pydantic</a>\n\n## Installation\n\n<div class=\"termy\">\n\n```console\n$ pip install filterify\n\n---> 100%\n```\n\n</div>\n\n## First steps\n\nTo start to work with filterify, you just need to have some Pydantic model you want to have as filters.\n\nLet's define simple `Address` and `Shipment` models. Then just pass the `Shipment` model to the `Filterify` constructor\nand you will get a callable object to parse query params. By default, the parser returns a dictionary structure with\nthe parsing results.\n\n```Python  hl_lines=\"18 20\"\nfrom pydantic import BaseModel\nfrom filterify import Filterify\n\n\nclass Address(BaseModel):\n    street: str\n    city: str\n    country: str\n\n\nclass Shipment(BaseModel):\n    name: str\n    sender: Address\n    recipient: Address\n    weight: float\n\n\nmodel_filter = Filterify(Shipment)\n\nprint(model_filter('name=shoes&sender__country=US&recipient__country__ne=CA'))\n# [\n#     {\n#         'field': [\n#             'name'\n#         ],\n#         'value': 'shoes',\n#         'operation': 'eq'\n#     },\n#     {\n#         'field': [\n#             'sender',\n#             'country'\n#         ],\n#         'value': 'US',\n#         'operation': 'eq'\n#     },\n#     {\n#         'field': [\n#             'recipient',\n#             'country'\n#         ],\n#         'value': 'CA',\n#         'operation': 'ne'\n#     }\n# ]\n\n```\n_(This script is complete, it should run \"as is\")_\n\nFilterify supports nested models and uses `__` as a delimiter for the nested models and operations. If you want to\nchange it, pass the needed `delimiter` to the constructor as it's shown in the next example.\n\n```Python  hl_lines=\"13\"\nfrom pydantic import BaseModel\nfrom filterify import Filterify\n\n\nclass Address(BaseModel):\n    country: str\n\n\nclass Shipment(BaseModel):\n    sender: Address\n\n\nmodel_filter = Filterify(Shipment, delimiter='$')\n\nprint(model_filter('sender$country$ne=US'))\n# [\n#     {\n#         'field': [\n#             'sender',\n#             'country'\n#         ],\n#         'value': 'US',\n#         'operation': 'ne'\n#     }\n# ]\n\n```\n_(This script is complete, it should run \"as is\")_\n\nAlso, by default unknown fields are ignored, but you can change this behavior by passing `False` to the constructor\nparameter `ignore_unknown_name`.\n\n```Python  hl_lines=\"9\"\nfrom pydantic import BaseModel\nfrom filterify import Filterify\n\n\nclass User(BaseModel):\n    name: str\n\n\nmodel_filter = Filterify(User, ignore_unknown_name=False)\n\nprint(model_filter('sender=US'))\n# filterify.exceptions.UnknownFieldError: Filter name is not presented in the model: sender\n\n```\n_(This script is complete, it should run \"as is\")_\n\n## Ordering option\n\nYou can add an `ordering` field that accepts all model field names. Currently, it's used a django-like style when desc\nis passed as `-field_name`.\n\n```Python  hl_lines=\"14\"\nfrom pydantic import BaseModel\nfrom filterify import Filterify\n\n\nclass Address(BaseModel):\n    country: str\n\n\nclass Shipment(BaseModel):\n    name: str\n    sender: Address\n\n\nmodel_filter = Filterify(Shipment, ordering=True)\n\nprint(model_filter('ordering=unknown_field'))\n# raises standard pydantic ValidationError with the next message:\n# unexpected value; permitted: 'name', '-name', 'sender__country', '-sender__country'\n\n```\n_(This script is complete, it should run \"as is\")_\n\nIf you want to change the accepted field name list, you can pass a list instead of the `True` value.\n\n```Python  hl_lines=\"14\"\nfrom pydantic import BaseModel\nfrom filterify import Filterify\n\n\nclass Address(BaseModel):\n    country: str\n\n\nclass Shipment(BaseModel):\n    name: str\n    sender: Address\n\n\nmodel_filter = Filterify(Shipment, ordering=['name'])\n\nprint(model_filter('ordering=unknown_field'))\n# raises standard pydantic ValidationError with the next message:\n# unexpected value; permitted: 'name', '-name'\n\n```\n_(This script is complete, it should run \"as is\")_\n\n## Usage with FastAPI\n\nMost validation work is done by pydantic, so filterify can be easily used with FastAPI.\nThe internal validation model is wrapped by `fastapi.Depends` and exposed by the `as_dependency` method.\n\n```Python  hl_lines=\"29 35\"\nimport uvicorn\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\nfrom filterify import Filterify\n\n\nclass Address(BaseModel):\n    street: str\n    city: str\n    country: str\n\n\nclass Shipment(BaseModel):\n    name: str\n    sender: Address\n    recipient: Address\n    weight: float\n    length: float\n    height: float\n\n\nshipment_filter = Filterify(Shipment)\n\n\napp = FastAPI()\n\n\n@app.get('/shipments', dependencies=[shipment_filter.as_dependency()])\ndef shipments():\n    return []\n\n\n@app.get('/another_shipments')\ndef another_shipments(filters=shipment_filter.as_dependency()):\n    print(filters)\n    return []\n\n\nif __name__ == '__main__':\n    uvicorn.run(app)\n\n```\n_(This script is complete, it should run \"as is\")_\n\n## Acknowledgments\n\nSpecial thanks to [Sebastián Ramírez](https://github.com/tiangolo) and his [FastAPI](https://github.com/tiangolo/fastapi) project,  some scripts and documentation structure and parts were used from there.\n\n## License\n\nThis project is licensed under the terms of the MIT license.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "filterify",
    "package_url": "https://pypi.org/project/filterify/",
    "platform": null,
    "project_url": "https://pypi.org/project/filterify/",
    "project_urls": {
      "Documentation": "https://filterify.boardpack.org",
      "Source": "https://github.com/boardpack/filterify"
    },
    "release_url": "https://pypi.org/project/filterify/0.0.1/",
    "requires_dist": [
      "pydantic >=1.8.2",
      "autoflake ==2.0.0 ; extra == \"dev\"",
      "flake8 ==6.0.0 ; extra == \"dev\"",
      "pre-commit ; extra == \"dev\"",
      "tox >=3.27.1 ; extra == \"dev\"",
      "mkdocs ==1.4.2 ; extra == \"doc\"",
      "mkdocs-material ==8.5.10 ; extra == \"doc\"",
      "markdown ==3.2.1 ; extra == \"doc\"",
      "markdown-include ==0.8.0 ; extra == \"doc\"",
      "mkdocs-markdownextradata-plugin ==0.2.5 ; extra == \"doc\"",
      "typer ==0.7.0 ; extra == \"doc\"",
      "pyyaml ==6.0.0 ; extra == \"doc\"",
      "pytest ==7.2.0 ; extra == \"test\"",
      "pytest-cov ==4.0.0 ; extra == \"test\"",
      "mypy ==0.991 ; extra == \"test\"",
      "flake8 ==6.0.0 ; extra == \"test\"",
      "black ==22.10.0 ; extra == \"test\"",
      "isort ==5.10.1 ; extra == \"test\"",
      "fastapi ; extra == \"test\""
    ],
    "requires_python": ">=3.8.1",
    "summary": "filterify is a pydantic-based library to handle filters from the query params.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15925164,
  "releases": {
    "0.0.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "a768b0b10b41066d82d72f732a41313474ec3c8af7f07a1209b1d24a361164b0",
          "md5": "47809b6515f4b2b3f1c73d0b826795c5",
          "sha256": "7e06fd204d92db0f730dbf3e16662e564dabf8732701a6264048358950319a4d"
        },
        "downloads": -1,
        "filename": "filterify-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47809b6515f4b2b3f1c73d0b826795c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.1",
        "size": 10246,
        "upload_time": "2022-11-29T08:51:25",
        "upload_time_iso_8601": "2022-11-29T08:51:25.206182Z",
        "url": "https://files.pythonhosted.org/packages/a7/68/b0b10b41066d82d72f732a41313474ec3c8af7f07a1209b1d24a361164b0/filterify-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "ed1c7023d51bd771877b8ca48ad84f6678b054bbfe6456d2c804f2b9764bcd5a",
          "md5": "80420ea69fa2e63dfc33aaea3d8fb186",
          "sha256": "c57b4a703975b5787a1581de5b8ff2941319db38c1abd069dec93f39b16ce39c"
        },
        "downloads": -1,
        "filename": "filterify-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "80420ea69fa2e63dfc33aaea3d8fb186",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.1",
        "size": 55272,
        "upload_time": "2022-11-29T08:51:27",
        "upload_time_iso_8601": "2022-11-29T08:51:27.265273Z",
        "url": "https://files.pythonhosted.org/packages/ed/1c/7023d51bd771877b8ca48ad84f6678b054bbfe6456d2c804f2b9764bcd5a/filterify-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "a768b0b10b41066d82d72f732a41313474ec3c8af7f07a1209b1d24a361164b0",
        "md5": "47809b6515f4b2b3f1c73d0b826795c5",
        "sha256": "7e06fd204d92db0f730dbf3e16662e564dabf8732701a6264048358950319a4d"
      },
      "downloads": -1,
      "filename": "filterify-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47809b6515f4b2b3f1c73d0b826795c5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.1",
      "size": 10246,
      "upload_time": "2022-11-29T08:51:25",
      "upload_time_iso_8601": "2022-11-29T08:51:25.206182Z",
      "url": "https://files.pythonhosted.org/packages/a7/68/b0b10b41066d82d72f732a41313474ec3c8af7f07a1209b1d24a361164b0/filterify-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "ed1c7023d51bd771877b8ca48ad84f6678b054bbfe6456d2c804f2b9764bcd5a",
        "md5": "80420ea69fa2e63dfc33aaea3d8fb186",
        "sha256": "c57b4a703975b5787a1581de5b8ff2941319db38c1abd069dec93f39b16ce39c"
      },
      "downloads": -1,
      "filename": "filterify-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "80420ea69fa2e63dfc33aaea3d8fb186",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.1",
      "size": 55272,
      "upload_time": "2022-11-29T08:51:27",
      "upload_time_iso_8601": "2022-11-29T08:51:27.265273Z",
      "url": "https://files.pythonhosted.org/packages/ed/1c/7023d51bd771877b8ca48ad84f6678b054bbfe6456d2c804f2b9764bcd5a/filterify-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}