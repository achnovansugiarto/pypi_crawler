{
  "info": {
    "author": "Giorgio Gonnella",
    "author_email": "gonnella@zbh.uni-hamburg.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: ISC License (ISCL)",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Lexpr: A simple logical expressions parser\n\nLexpr is a simple package containing a\nlogical expressions parser developed using a Lark grammar.\n\nThe expressions may contain:\n- entity identifiers\n- the binary operators ``|`` (or), ``&`` (and)\n- the unary operator ``!`` (not).\n- balanced pairs of round parentheses\n\n## Installation\n\nThe package can be installed using ``pip install lexpr``.\n\n## Usage\n\nA parser is created and used for parsing the text, as in the\nfollowing example:\n```\nimport lexpr\nlp = lexpr.Parser()\nlp.parse(\"(G1 & G2) | !G3\")\n#\n# output:\n#\n#  Tree(\n#    Token('RULE', 'start'),\n#    [Tree(Token('RULE', 'entity'),\n#      [Tree(Token('RULE', 'or_expr'),\n#        [Tree(Token('RULE', 'entity'),\n#          [Tree(Token('RULE', 'enclosed_expr'),\n#            [Tree(Token('RULE', 'entity'),\n#              [Tree(Token('RULE', 'and_expr'),\n#                [Tree(Token('RULE', 'entity'), [Token('IDENTIFIER', 'G1')]),\n#                 Tree(Token('RULE', 'entity'), [Token('IDENTIFIER', 'G2')])])]\n#            )]\n#          )]\n#        ), Tree(Token('RULE', 'entity'),\n#             [Tree(Token('RULE', 'not_expr'),\n#               [Tree(Token('RULE', 'entity'), [Token('IDENTIFIER', 'G3')])]\n#             )]\n#           )]\n#      )]\n#    )]\n#  )\n\n```\n\nIn case of an invalid string is passed to the parser, an\nexception is raised:\n```\nimport lexpr\nlp = lexpr.Parser()\nlp.parse(\"G1 &\")\n# raises LexprParserError, unbalanced expression\nlp.parse(\"G1 & G$\")\n# raises LexprParserError, invalid character in identifier\n```\n\n## Implementation\n\nThe grammar is contained in the file ``lexpr/data/lexpr.g``.\nThe parser is in the module ``lexpr/parser.py``.\nErrors raised by the module are defined in ``lexpr/error.py``\nand are instances of the class ``LexprError`` or its\nsubclasses.\n\n## History\n\nThe package has been developed to support the parsing of the EGC format, for\nexpressing expectations about the contents of prokaryotic genomes. In this\nformat, groups of organisms can be combined using logical expressions of the\nform parsed by this package. The main implementation of the format is based on\nTextFormats, which, however does not support non-regular, indefinetly nested\nexpressions, such as the logical expressions parsed here. Thus the parsing of\nthis expressions has been developed separately in this package.\n\n## Acknowledgements\n\nThis package has been created in context of the DFG project GO 3192/1-1\n“Automated characterization of microbial genomes and metagenomes by collection\nand verification of association rules”. The funders had no role in study\ndesign, data collection and analysis.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ggonnella/lexpr",
    "keywords": "bioinformatics sequence features",
    "license": "ISC",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lexpr",
    "package_url": "https://pypi.org/project/lexpr/",
    "platform": null,
    "project_url": "https://pypi.org/project/lexpr/",
    "project_urls": {
      "Homepage": "https://github.com/ggonnella/lexpr"
    },
    "release_url": "https://pypi.org/project/lexpr/0.1/",
    "requires_dist": [
      "lark"
    ],
    "requires_python": "",
    "summary": "A parser for simple logical expressions of identifiers",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17300690,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d72c90dc3c45c423a20f5af3f6b3415b0d1b087bfc00698c82a96f605ad2754c",
          "md5": "dd23f2e0c603799767a188be2c911501",
          "sha256": "0941a73301fb808b3b41718b4ecd4a9cd258e36766795a26f831e869a189157b"
        },
        "downloads": -1,
        "filename": "lexpr-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd23f2e0c603799767a188be2c911501",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4349,
        "upload_time": "2023-03-15T08:45:53",
        "upload_time_iso_8601": "2023-03-15T08:45:53.525736Z",
        "url": "https://files.pythonhosted.org/packages/d7/2c/90dc3c45c423a20f5af3f6b3415b0d1b087bfc00698c82a96f605ad2754c/lexpr-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e17034a6a0736d5233b164922f8e9f78d11d8b4f433e30c4124bfd849e0dedd7",
          "md5": "dbc5ff383f2b6fa7be83aabba9cdb50d",
          "sha256": "4a2cf447634bd9f27c03b0c45352d132a020854ffa481d3a465f36cfae0717d3"
        },
        "downloads": -1,
        "filename": "lexpr-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dbc5ff383f2b6fa7be83aabba9cdb50d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4050,
        "upload_time": "2023-03-15T08:45:54",
        "upload_time_iso_8601": "2023-03-15T08:45:54.888893Z",
        "url": "https://files.pythonhosted.org/packages/e1/70/34a6a0736d5233b164922f8e9f78d11d8b4f433e30c4124bfd849e0dedd7/lexpr-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d72c90dc3c45c423a20f5af3f6b3415b0d1b087bfc00698c82a96f605ad2754c",
        "md5": "dd23f2e0c603799767a188be2c911501",
        "sha256": "0941a73301fb808b3b41718b4ecd4a9cd258e36766795a26f831e869a189157b"
      },
      "downloads": -1,
      "filename": "lexpr-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dd23f2e0c603799767a188be2c911501",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4349,
      "upload_time": "2023-03-15T08:45:53",
      "upload_time_iso_8601": "2023-03-15T08:45:53.525736Z",
      "url": "https://files.pythonhosted.org/packages/d7/2c/90dc3c45c423a20f5af3f6b3415b0d1b087bfc00698c82a96f605ad2754c/lexpr-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e17034a6a0736d5233b164922f8e9f78d11d8b4f433e30c4124bfd849e0dedd7",
        "md5": "dbc5ff383f2b6fa7be83aabba9cdb50d",
        "sha256": "4a2cf447634bd9f27c03b0c45352d132a020854ffa481d3a465f36cfae0717d3"
      },
      "downloads": -1,
      "filename": "lexpr-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dbc5ff383f2b6fa7be83aabba9cdb50d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4050,
      "upload_time": "2023-03-15T08:45:54",
      "upload_time_iso_8601": "2023-03-15T08:45:54.888893Z",
      "url": "https://files.pythonhosted.org/packages/e1/70/34a6a0736d5233b164922f8e9f78d11d8b4f433e30c4124bfd849e0dedd7/lexpr-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}