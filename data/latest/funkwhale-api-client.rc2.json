{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# funkwhale-api-client\n\nA client library for accessing the Funkwhale API.\n\n> **Note**: This client is under active development and is not considered production-ready.\n\n## Usage\n\n### Endpoint structure\n\nThe Funkwhale API client follows the same structure for each available endpoint.\n\n1. Each API path/method combination is representsd by a Python module with four methods:\n    1. `sync`: A blocking request that returns parsed data (if successful) or `None`\n    2. `sync_detailed`: A blocking request that always returns a `Request`, optionally with `parsed` set if the request was successful.\n    3. `asyncio`: An async request that returns parsed data (if successful) or `None`\n    4. `asyncio_detailed`: An async request that always returns a `Request`, optionally with `parsed` set if the request was successful.\n2. All path/query parameters and bodies are represented by method arguments.\n3. If the endpoint contains tags, the first tag is used as a module name for the function\n4. Any endpoint which doesn't contain a tag is located in `funkwhale_api_client.api.default`\n\n### Use the library in your project\n\nTo get started, create a `Client` in your project.\n\n```python\nfrom funkwhale_api_client import Client\n\nclient = Client(base_url=\"https://api.example.com\")\n```\n\nIf you're interacting with endpoints that require authentication, create an `AuthenticatedClient`.\n\n```python\nfrom funkwhale_api_client import AuthenticatedClient\n\nclient = AuthenticatedClient(base_url=\"https://api.example.com\", token=\"SuperSecretToken\")\n```\n\nNext, call the endpoint using the data model and endpoint method.\n\n```python\nfrom funkwhale_api_client.models import MyDataModel\nfrom funkwhale_api_client.api.my_tag import get_my_data_model\nfrom funkwhale_api_client.types import Response\n\nmy_data: MyDataModel = get_my_data_model.sync(client=client)\n# return more information with the sync_detailed method\nresponse: Response[MyDataModel] = get_my_data_model.sync_detailed(client=client)\n```\n\nCall endpoints asynchronously by using the async methods.\n\n```python\nfrom funkwhale_api_client.models import MyDataModel\nfrom funkwhale_api_client.api.my_tag import get_my_data_model\nfrom funkwhale_api_client.types import Response\n\nmy_data: MyDataModel = await get_my_data_model.asyncio(client=client)\nresponse: Response[MyDataModel] = await get_my_data_model.asyncio_detailed(client=client)\n```\n\n### Certificate validation\n\nThe library attempts to validate TLS on HTTPS endpoints by default. Using certificate verification is highly recommended most of the time, but sometimes you may need to authenticate to a server (especially an internal server) using a custom certificate bundle.\n\n```python\nclient = AuthenticatedClient(\n    base_url=\"https://internal_api.example.com\", \n    token=\"SuperSecretToken\",\n    verify_ssl=\"/path/to/certificate_bundle.pem\",\n)\n```\n\nYou can also disable certificate validation altogether. This is a **security risk** and **is not recommended**.\n\n```python\nclient = AuthenticatedClient(\n    base_url=\"https://internal_api.example.com\", \n    token=\"SuperSecretToken\", \n    verify_ssl=False\n)\n```\n\n## Contribute to development\n\nThe Funkwhale API client is generated from the Funkwhale OpenAPI schema. If you notice an issue with the API itself, consider contributing to [Funkwhale](https://dev.funkwhale.audio/funkwhale/funkwhale).\n\n### Build / publish the client\n\nThis project uses [Poetry](https://python-poetry.org/) to manage dependencies and packaging. Make sure you have it installed before you start.\n\nTo publish a new version of the client:\n\n1. Update the metadata in `pyproject.toml` (e.g. authors, version)\n2. If you're using a private repository, configure it with Poetry\n\n    ```sh\n    poetry config repositories.<your-repository-name> <url-to-your-repository> # Set up your repository\n    poetry config http-basic.<your-repository-name> <username> <password> # Configure your credentials\n    ```\n\n3. Publish the client:\n   1. Publish to PyPI with `poetry publish --build`\n   2. Publish to a private repository with `poetry publish --build -r <your-repository-name>`.\n\nIf you want to install this client into another project without publishing it (e.g. for development) then:\n\n1. If the project **uses Poetry**, add the client using `poetry add <path-to-this-client>`.\n2. If the project doesn't use Poetry:\n    1. Build a wheel with `poetry build -f wheel`\n    2. Install that wheel from the target project `pip install <path-to-wheel>`\n\n### Create tests\n\nTests are split into two types: **integration tests** and **model tests**.\n\n#### Integration tests\n\nYou can test methods by calling them with a `Client` or `AuthenticatedClient` and expecting a specific result. Check `tests/integration/test_albums.py` for an example.\n\n#### Model tests\n\nYou can test models by asserting equality with a response from a Funkwhale server. For example, to test the `/api/v1/albums` endpoint:\n\n1. Find the API call in `api/albums/albums_list.py`\n2. Check which model is used in the `_parse_response()` method. In this case `PaginatedAlbumList`\n3. Fetch data from the `/api/v1/albums` endpoint using [cURL](https://curl.se/) and save the output to `tests/data/paginated_album_list.json`\n4. Create a test to assert equality between the resulting JSON and the `PaginatedAlbumList` model using the model's `from_dict()` method\n\nAn example test can be found in `tests/unit/test_model_paginated_album_list.py`.\n\n### Run tests\n\nYou can run the whole suite of tests with the following command:\n\n```sh\npoetry run pytest\n```\n\n### Making a release\n\nRun `poetry version $new_version` to bump the version number in\n`pyproject.toml`. Commit the changes.\nNow we set a tag using `git tag v$(poetry version -s)` and push everything to\nthe repository with `git push --tags && git push`. CI will take care for\npublishing the new package version to pypi.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "funkwhale-api-client",
    "package_url": "https://pypi.org/project/funkwhale-api-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/funkwhale-api-client/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/funkwhale-api-client/0.1.1/",
    "requires_dist": [
      "httpx (>=0.15.4,<0.24.0)",
      "attrs (>=21.3.0)",
      "python-dateutil (>=2.8.0,<3.0.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "A client library for accessing Funkwhale API",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15255686,
  "releases": {
    "0.1.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d9abe664e777d823c2668123019802775c15f5777ffef3c3de6dc027cf9a621",
          "md5": "2a18f1e244fc7e7d87ca7035986341ce",
          "sha256": "2ad9d20bc74551577bd78d3be616cdc52df8b92ba8723716fd7fd2db61b45121"
        },
        "downloads": -1,
        "filename": "funkwhale_api_client-0.1.0rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a18f1e244fc7e7d87ca7035986341ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 576467,
        "upload_time": "2022-09-29T08:39:41",
        "upload_time_iso_8601": "2022-09-29T08:39:41.878980Z",
        "url": "https://files.pythonhosted.org/packages/4d/9a/be664e777d823c2668123019802775c15f5777ffef3c3de6dc027cf9a621/funkwhale_api_client-0.1.0rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e09370208aa48e9e86cbfa2bcc303cb500dfad317c56541bb4fe010fda694e2",
          "md5": "b65e86d0b152f7a640891ec637540e93",
          "sha256": "1bb01e7980415bc7716c450028f6f1ece9658e1d29d1f65481e2e433e86cd2c6"
        },
        "downloads": -1,
        "filename": "funkwhale-api-client-0.1.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "b65e86d0b152f7a640891ec637540e93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 138038,
        "upload_time": "2022-09-29T08:39:39",
        "upload_time_iso_8601": "2022-09-29T08:39:39.499821Z",
        "url": "https://files.pythonhosted.org/packages/1e/09/370208aa48e9e86cbfa2bcc303cb500dfad317c56541bb4fe010fda694e2/funkwhale-api-client-0.1.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb7458677a70d02bc9d40f30f56a102c2316541ecec8f467ea8a8dc14daaee0e",
          "md5": "f97b37cfafabe711b6552214d4ade93e",
          "sha256": "93fdff187e04910c5018348577b1c3b1c63af19d1b7f8dc31485afe39ac51dfa"
        },
        "downloads": -1,
        "filename": "funkwhale_api_client-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f97b37cfafabe711b6552214d4ade93e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 576904,
        "upload_time": "2022-09-29T13:49:41",
        "upload_time_iso_8601": "2022-09-29T13:49:41.130457Z",
        "url": "https://files.pythonhosted.org/packages/eb/74/58677a70d02bc9d40f30f56a102c2316541ecec8f467ea8a8dc14daaee0e/funkwhale_api_client-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "963723c8cd0fc80918c7b669a7618dda44524fcbc237d221769837b6721ff266",
          "md5": "c3d76b1513748361b2fad15a3f948018",
          "sha256": "6816b42a17b2f16713cd3da4c0255bc7afa92454c91a70340618cb9476b6b41f"
        },
        "downloads": -1,
        "filename": "funkwhale-api-client-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c3d76b1513748361b2fad15a3f948018",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 138851,
        "upload_time": "2022-09-29T13:49:38",
        "upload_time_iso_8601": "2022-09-29T13:49:38.842145Z",
        "url": "https://files.pythonhosted.org/packages/96/37/23c8cd0fc80918c7b669a7618dda44524fcbc237d221769837b6721ff266/funkwhale-api-client-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb7458677a70d02bc9d40f30f56a102c2316541ecec8f467ea8a8dc14daaee0e",
        "md5": "f97b37cfafabe711b6552214d4ade93e",
        "sha256": "93fdff187e04910c5018348577b1c3b1c63af19d1b7f8dc31485afe39ac51dfa"
      },
      "downloads": -1,
      "filename": "funkwhale_api_client-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f97b37cfafabe711b6552214d4ade93e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 576904,
      "upload_time": "2022-09-29T13:49:41",
      "upload_time_iso_8601": "2022-09-29T13:49:41.130457Z",
      "url": "https://files.pythonhosted.org/packages/eb/74/58677a70d02bc9d40f30f56a102c2316541ecec8f467ea8a8dc14daaee0e/funkwhale_api_client-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "963723c8cd0fc80918c7b669a7618dda44524fcbc237d221769837b6721ff266",
        "md5": "c3d76b1513748361b2fad15a3f948018",
        "sha256": "6816b42a17b2f16713cd3da4c0255bc7afa92454c91a70340618cb9476b6b41f"
      },
      "downloads": -1,
      "filename": "funkwhale-api-client-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c3d76b1513748361b2fad15a3f948018",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 138851,
      "upload_time": "2022-09-29T13:49:38",
      "upload_time_iso_8601": "2022-09-29T13:49:38.842145Z",
      "url": "https://files.pythonhosted.org/packages/96/37/23c8cd0fc80918c7b669a7618dda44524fcbc237d221769837b6721ff266/funkwhale-api-client-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}