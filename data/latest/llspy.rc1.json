{
  "info": {
    "author": "Talley Lambert",
    "author_email": "talley.lambert@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Visualization"
    ],
    "description": "##################################################\nLLSpy: Lattice light-sheet post-processing utility\n##################################################\n\n|license_shield| |python_shield| |conda_shield| |travis_shield| |docs_shield| |doi_shield|\n\n.. |doi_shield| image:: https://zenodo.org/badge/96235902.svg\n   :target: https://zenodo.org/badge/latestdoi/96235902\n\n.. |license_shield| image:: https://img.shields.io/badge/License-BSD%203--Clause-brightgreen.svg\n   :target: https://opensource.org/licenses/BSD-3-Clause\n\n.. |python_shield| image:: https://img.shields.io/badge/Python-2.7%2C%203.5%2C%203.6-brightgreen.svg\n\n.. |conda_shield| image:: https://anaconda.org/talley/llspy/badges/installer/conda.svg\n   :target: https://conda.anaconda.org/talley\n\n.. .. |appveyor_shield| image:: https://ci.appveyor.com/api/projects/status/tlambert03/LLSpy\n..    :target: https://ci.appveyor.com/project/tlambert03/llspy\n\n.. |docs_shield| image:: https://readthedocs.org/projects/llspy/badge/?version=latest\n   :target: http://llspy.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n.. |travis_shield| image:: https://img.shields.io/travis/tlambert03/LLSpy/master.svg\n   :target: https://travis-ci.org/tlambert03/LLSpy\n\n\n|\n\n.. image:: https://raw.githubusercontent.com/tlambert03/LLSpy/develop/img/cbmflogo.png\n    :target: https://cbmf.hms.harvard.edu/lattice-light-sheet/\n\n\n\n.. |copy|   unicode:: U+000A9\n\nCopyright |copy| 2019 Talley Lambert, Harvard Medical School.\n\n|\n\nLLSpy is a python library to facilitate lattice light sheet data processing. It extends the cudaDeconv binary created in the Betzig lab at Janelia Research Campus, adding features that auto-detect experimental parameters from the data folder structure and metadata (minimizing user input), auto-choose OTFs, perform image corrections and manipulations, and facilitate file handling.  Full(er) documentation available at http://llspy.readthedocs.io/\n\n**There are three ways to use LLSpy:**\n\n1. Graphical User Interface\n===========================\n\nThe GUI provides access to the majority of functionality in LLSpy. It includes a drag-and drop queue, visual progress indicator, and the ability to preview data processed with the current settings using the (awesome) 4D-viewer, `Spimagine <https://github.com/maweigert/spimagine>`_ developed by Martin Weigert in the `Myers lab <https://www.mpi-cbg.de/research-groups/current-groups/gene-myers/research-focus/>`_ at MPI-CBG.  Support for online-processing with a \"monitored  folder\" or real-time visualization with Spimagine is in development.\n\n.. image:: https://raw.githubusercontent.com/tlambert03/LLSpy/master/img/screenshot.png\n    :alt: LLSpy graphical interface\n    :align: right\n\n\n2. Command Line Interface\n=========================\n\nThe command line interface can be used to process LLS data in a server environment (linux compatible).\n\n.. code:: bash\n\n    $ lls --help\n\n    Usage: lls [OPTIONS] COMMAND [ARGS]...\n\n      LLSpy\n\n      This is the command line interface for the LLSpy library, to facilitate\n      processing of lattice light sheet data using cudaDeconv and other tools.\n\n    Options:\n      --version          Show the version and exit.\n      -c, --config PATH  Config file to use instead of the system config.\n      --debug\n      -h, --help         Show this message and exit.\n\n    Commands:\n      camera    Camera correction calibration\n      clean     Delete LLSpy logs and preferences\n      compress  Compression & decompression of LLSdir\n      config    Manipulate the system configuration for LLSpy\n      decon     Deskew and deconvolve data in LLSDIR.\n      deskew    Deskewing only (no decon) of LLS data\n      gui       Launch LLSpy Graphical User Interface\n      info      Get info on an LLSDIR.\n      install   Install cudaDeconv libraries and binaries\n      reg       Channel registration\n\n    # process a dataset\n    $ lls decon --iters 8 --correctFlash /path/to/dataset\n\n    # change system or user-specific configuration\n    $ lls config --set otfDir path/to/PSF_and_OTFs\n\n    # or launch the gui\n    $ lls gui\n\n\n3. Interactive data processing in a python console\n==================================================\n\n.. code:: python\n\n    >>> import llspy\n\n    # the LLSdir object contains most of the useful attributes and\n    # methods for interacting with a data folder containing LLS tiffs\n    >>> E = llspy.LLSdir('path/to/experiment_directory')\n    # it parses the settings file into a dict:\n    >>> E.settings\n    {'acq_mode': 'Z stack',\n     'basename': 'cell1_Settings.txt',\n     'camera': {'cam2name': '\"Disabled\"',\n                'cycle': '0.01130',\n                'cycleHz': '88.47 Hz',\n                'exp': '0.01002',\n        ...\n    }\n\n    # many important attributes are in the parameters dict\n    >>> E.parameters\n    {'angle': 31.5,\n     'dx': 0.1019,\n     'dz': 0.5,\n     'nc': 2,\n     'nt': 10,\n     'nz': 65,\n     'samplescan': True,\n      ...\n    }\n\n    # and provides methods for processing the data\n    >>> E.autoprocess()\n\n    # the autoprocess method accepts many options as keyword aruguments\n    # a full list with descriptions can be seen here:\n    >>> llspy.printOptions()\n\n                  Name  Default                    Description\n                  ----  -------                    -----------\n          correctFlash  False                      do Flash residual correction\n    flashCorrectTarget  cpu                        {\"cpu\", \"cuda\", \"parallel\"} for FlashCor\n                nIters  10                         deconvolution iters\n             mergeMIPs  True                       do MIP merge into single file (decon)\n                otfDir  None                       directory to look in for PSFs/OTFs\n                tRange  None                       time range to process (None means all)\n                cRange  None                       channel range to process (None means all)\n                   ...  ...                        ...\n\n   # as well as file handling routines\n   >>> E.compress(compression='lbzip2')  # compress the raw data into .tar.(bz2|gz)\n   >>> E.decompress()  # decompress files for re-processing\n   >>> E.freeze()  # delete all processed data and compress raw data for long-term storage.\n\n\n*Note:* The LLSpy API is currently unstable (subject to change).  Look at the ``llspy.llsdir.LLSdir`` class as a starting point for most of the useful methods.  Minimal documentation available in the docs.  Feel free to fork this project on github and suggest changes or additions.\n\n\nRequirements\n============\n\n* Compatible with Windows (tested on 7/10), Mac or Linux (tested on Ubuntu 16.04)\n* Python 3.6 (as of version 0.4.0, support for 2.7 and 3.5 ended)\n* Most functionality assumes a data folder structure as generated by the Lattice Scope LabeView acquisition software written by Dan Milkie in the Betzig lab.  If you are using different acquisition software (such as 3i software), it is likely that you will need to change the data structure and metadata parsing routines in order to make use of this software.\n* Currently, the core deskew/deconvolution processing is based on cudaDeconv, written by Lin Shao and maintained by Dan Milkie.  cudaDeconv is licensed and distributed by HHMI.  It was open-sourced in Feb 2019, and is available here: https://github.com/dmilkie/cudaDecon\n* CudaDeconv requires a CUDA-capable GPU\n* The Spimagine viewer requires a working OpenCL environment\n\nInstallation\n============\n\n**Note**: *As of version 0.4.2 cudaDecon is now included in the LLSpy conda package and requires no additional steps for installation.  Horray for open source!*\n\n\n#. Install `Anaconda <https://www.anaconda.com/download/>`_ or `Miniconda <https://docs.conda.io/en/latest/miniconda.html>`_\n#. Launch a ``terminal`` window (OS X, Linux), or ``Anaconda Prompt`` (Windows)\n#. Add the \"conda-forge\" and \"talley\" channels to your conda config\n\n    .. code:: bash\n\n        $ conda config --add channels conda-forge\n        $ conda config --add channels talley\n\n#. Install LLSpy into a new conda environment\n\n    .. code:: bash\n\n        $ conda create -n llsenv python=3.6 llspy\n        $ conda activate llsenv\n\n    The ``create -n llsenv`` line creates a virtual environment.  This is optional, but recommended as it easier to uninstall cleanly and prevents conflicts with any other python environments.  If installing into a virtual environment, you must source the environment before proceeding, and each time before using llspy.\n\nEach time you use the program, you will need to activate the virtual environment.  The main command line interface is ``lls``, and the gui can be launched with ``lls gui``.  You can create a bash script or batch file to autoload the environment and launch the program if desired.\n\n    .. code:: bash\n\n        # Launch Anaconda Prompt and type...\n        $ conda activate llsenv\n\n        # show the command line interface help menu\n        $ lls -h\n        # process a dataset\n        $ lls decon /path/to/dataset\n        # or launch the gui\n        $ lls gui\n\n\nSee complete usage notes in the `documentation <http://llspy.readthedocs.io/>`_.\n\n\n\nFeatures of LLSpy\n=================\n\n* graphical user interface with persistent/saveable processing settings\n* command line interface for remote/server usage (coming)\n* preview processed image to verify settings prior to processing full experiment\n* *Pre-processing corrections*:\n\n  * correct \"residual electron\" issue on Flash4.0 when using overlap synchronous mode.  Includes CUDA and parallel CPU processing as well as GUI for generation of calibration file.\n  * apply selective median filter to particularly noisy pixels\n  * trim image edges prior to deskewing (helps with CMOS edge row artifacts)\n  * auto-detect background\n\n* Processing:\n\n  * select subset of acquired images (C or T) for processing\n  * automatic parameter detection based on auto-parsing of Settings.txt\n  * automatic OTF generation/selection from folder of raw PSF files, based on date of acquisition, mask used (if entered into SPIMProject.ini), and wavelength.\n  * graphical progress bar and time estimation\n\n* Post-processing:\n\n  * proper voxel-size metadata embedding (newer version of Cimg)\n  * join MIP files into single hyperstack viewable in ImageJ/Fiji\n  * automatic width/shift selection based on image content (\"auto crop to features\")\n  * automatic fiducial-based image registration (provided tetraspeck bead stack)\n  * compress raw data after processing\n\n* Watched-folder autoprocessing (experimental):\n\n  * Server mode: designate a folder to watch for incoming *finished* LLS folders (with Settings.txt file).  When new folders are detected, they are added to the processing queue and the queue is started if not already in progress.\n  * Acquisition mode: designed to be used on the acquisition computer.  Designate folder to watch for new LLS folders, and process new files as they arrive.  Similar to built in GPU processing tab in Lattice Scope software, but with the addition of all the corrections and parameter selection in the GUI.\n\n* easily return LLS folder to original (pre-processed) state\n* compress and decompress folders and subfolders with lbzip2 (not working on windows)\n* concatenate two experiments - renaming files with updated relative timestamps and stack numbers\n* rename files acquired in script-editor mode with ``Iter_`` in the name to match standard naming with positions (work in progress)\n* cross-platform: includes precompiled binaries and shared libraries that should work on all systems.\n\n\nBug Reports, Feature requests, etc...\n=====================================\n\nPull requests are welcome!\n\nTo report a bug or request a feature, please `submit an issue on github <https://github.com/tlambert03/LLSpy/issues>`_\n\nPlease include the following in any bug reports:\n\n- Operating system version\n- GPU model\n- CUDA version (type ``nvcc --version`` at command line prompt)\n- Python version (type ``python --version`` at command line prompt, with ``llsenv`` conda environment active if applicable)\n\nThe most system-dependent component (and the most likely to fail) is the OpenCL dependency for Spimagine.  LLSpy will fall back gracefully to the built-in Qt-based viewer, but the Spimagine option will be will be unavailble and grayed out on the config tab in the GUI.  Submit an `issue on github <https://github.com/tlambert03/LLSpy/issues>`_ for help.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tlambert03/LLSpy",
    "keywords": "",
    "license": "BSD 3-clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "llspy",
    "package_url": "https://pypi.org/project/llspy/",
    "platform": "",
    "project_url": "https://pypi.org/project/llspy/",
    "project_urls": {
      "Homepage": "https://github.com/tlambert03/LLSpy"
    },
    "release_url": "https://pypi.org/project/llspy/0.5.0/",
    "requires_dist": [
      "click",
      "llspy-slm (>=0.2.1)",
      "matplotlib",
      "numpy",
      "parse",
      "qtpy",
      "scipy",
      "sentry-sdk",
      "tifffile",
      "voluptuous",
      "watchdog",
      "numba ; python_version < \"3.10\"",
      "napari ; extra == 'napari'",
      "PyQt5 ; extra == 'pyqt'",
      "PySide2 ; extra == 'pyside'",
      "spimagine ; extra == 'spimagine'",
      "PyQt5 ; extra == 'tests'",
      "pytest ; extra == 'tests'",
      "pytest-cov ; extra == 'tests'",
      "pytest-qt ; extra == 'tests'"
    ],
    "requires_python": ">=3.6",
    "summary": "Lattice Light Sheet Processing Tools",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12203579,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e050d3c3a4f431b2d1b54c7d991d52c45e71be86896d61c1eeb9e4d7c44ba0a",
          "md5": "b8ebcc35b8b42a4e7126c73f4ec2c153",
          "sha256": "1f90c01592286560639426c3b24006a7a001049042f48f0acba6399506b1363b"
        },
        "downloads": -1,
        "filename": "llspy-0.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8ebcc35b8b42a4e7126c73f4ec2c153",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 344709,
        "upload_time": "2021-12-03T17:54:17",
        "upload_time_iso_8601": "2021-12-03T17:54:17.330941Z",
        "url": "https://files.pythonhosted.org/packages/2e/05/0d3c3a4f431b2d1b54c7d991d52c45e71be86896d61c1eeb9e4d7c44ba0a/llspy-0.5.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ca7daf6f63547b34adae9fd2ccc3e4e1e045b3e52f95ac5eacb0b381b839f8f",
          "md5": "32cabffe502c6983579271e56ecc7124",
          "sha256": "4813ee23d66f589cea3f1976bf3eb08f09b843aea3cc5c1b225598a163e3b7a5"
        },
        "downloads": -1,
        "filename": "llspy-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "32cabffe502c6983579271e56ecc7124",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 42388459,
        "upload_time": "2021-12-03T17:54:20",
        "upload_time_iso_8601": "2021-12-03T17:54:20.398394Z",
        "url": "https://files.pythonhosted.org/packages/3c/a7/daf6f63547b34adae9fd2ccc3e4e1e045b3e52f95ac5eacb0b381b839f8f/llspy-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e050d3c3a4f431b2d1b54c7d991d52c45e71be86896d61c1eeb9e4d7c44ba0a",
        "md5": "b8ebcc35b8b42a4e7126c73f4ec2c153",
        "sha256": "1f90c01592286560639426c3b24006a7a001049042f48f0acba6399506b1363b"
      },
      "downloads": -1,
      "filename": "llspy-0.5.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b8ebcc35b8b42a4e7126c73f4ec2c153",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 344709,
      "upload_time": "2021-12-03T17:54:17",
      "upload_time_iso_8601": "2021-12-03T17:54:17.330941Z",
      "url": "https://files.pythonhosted.org/packages/2e/05/0d3c3a4f431b2d1b54c7d991d52c45e71be86896d61c1eeb9e4d7c44ba0a/llspy-0.5.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ca7daf6f63547b34adae9fd2ccc3e4e1e045b3e52f95ac5eacb0b381b839f8f",
        "md5": "32cabffe502c6983579271e56ecc7124",
        "sha256": "4813ee23d66f589cea3f1976bf3eb08f09b843aea3cc5c1b225598a163e3b7a5"
      },
      "downloads": -1,
      "filename": "llspy-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "32cabffe502c6983579271e56ecc7124",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 42388459,
      "upload_time": "2021-12-03T17:54:20",
      "upload_time_iso_8601": "2021-12-03T17:54:20.398394Z",
      "url": "https://files.pythonhosted.org/packages/3c/a7/daf6f63547b34adae9fd2ccc3e4e1e045b3e52f95ac5eacb0b381b839f8f/llspy-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}