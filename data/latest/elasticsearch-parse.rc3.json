{
  "info": {
    "author": "ruifengyun",
    "author_email": "rfyiamcool@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.0",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "#elasticsearch_parse\n=================\n\n首先注明下本项目是由来,学习Elasticsearch本身是有些痛苦的, 我们可以熟练的编写SQL 、 Mongodb语句，但对于Elasticsearch Dsl语法总是蒙头，一个劲的翻找笔记...  \n简单说 Elasticsearch Parse可以让你更容易的上手ES, 他的功能主要是语句映射, 有点ORM的意思... \n\n此项目继承于`elasticsearch-dsl-py`,本来是想fork子项目,开发好后提交pull request, 但是想到我这语法映射的功能, 对于官方来说不是很稀罕,索性直接砍掉了 70% 代码,然后中间又加了一些佐料, 最终只是为了DSL语句映射功能 ! \n\n模块安装方法:\n```\npip install elasticsearch_parse\n```\n\n下面我们来体验下封装后的es语法解释器.\n\n首先用原始的DSL语法操作,一眼望去会有些麻烦, 手写起来会更麻烦.  \n```\nfrom elasticsearch import Elasticsearch\nclient = Elasticsearch()\n\nresponse = client.search(\n    index=\"my-index\",\n    body={\n      \"query\": {\n        \"filtered\": {\n          \"query\": {\n            \"bool\": {\n              \"must\": [{\"match\": {\"title\": \"python\"}}],\n              \"must_not\": [{\"match\": {\"description\": \"beta\"}}]\n            }\n          },\n          \"filter\": {\"term\": {\"category\": \"search\"}}\n        }\n      },\n      \"aggs\" : {\n        \"per_tag\": {\n          \"terms\": {\"field\": \"tags\"},\n          \"aggs\": {\n            \"max_lines\": {\"max\": {\"field\": \"lines\"}}\n          }\n        }\n      }\n    }\n)\n\n```\n\n下面是使用Elasticsearch_parse的用法,要多简单就多简单\n\n```\nfrom elasticsearch_parse import Search, Q\n\ns = Search(index=\"my-index\") \\\n    .filter(\"term\", blog=\"xiaorui.cc\") \\\n    .query(\"match\", author=\"ruifengyun\")   \\\n    .query(~Q(\"match\", face=\"good\"))\n\ns.aggs.bucket('per_tag', 'terms', field='tags')\n\nresponse = s.execute()\n```\n我们得到的结果是:\n```\n{\n    \"query\": {\n        \"filtered\": {\n            \"filter\": {\n                \"term\": {\n                    \"blog\": \"xiaorui.cc\"\n                }\n            },\n            \"query\": {\n                \"bool\": {\n                    \"must_not\": [\n                        {\n                            \"match\": {\n                                \"face\": \"good\"\n                            }\n                        }\n                    ],\n                    \"must\": [\n                        {\n                            \"match\": {\n                                \"author\": \"ruifengyun\"\n                            }\n                        }\n                    ]\n                }\n            }\n        }\n    },\n    \"aggs\": {\n        \"per_tag\": {\n            \"terms\": {\n                \"field\": \"tags\"\n            }\n        }\n    }\n}\n```\n\n我们把语法的用法给过一遍.\n```\ns = search.Search()\n```\n\n通过match查询,f字段值为55的数据\n```\ns.query('match', f=55)\n```\n\n时间范围\n```\ns.query('range', ** {'@timestamp': {'lt': 'now'}})\n```\n\n外围的size的控制  \n```\ns = s.query('match', f=42)\ns[3].to_dict() {'query': {'match_all': {}}, 'from': 3, 'size': 1}\n```\n\n```\nassert s.to_dict(size=10) == {\"query\": {\"match\": {'f': 42}}, \"size\": 10}\n```\n\n嵌入内部size控制\n```\ns = search.Search.from_dict({\"size\": 5})\nassert {\n     \"query\": {\"match_all\": {}},\n     \"size\": 5\n} == s.to_dict()\n```\n\n对于aggs的聚合的使用\n```\ns = s.query('match', f=42)\nassert {\"query\": {\"match\": {'f': 42}}} == s.to_dict()\nassert {\"query\": {\"match\": {'f': 42}}, \"size\": 10} == s.to_dict(size=10)\ns.aggs.bucket('per_tag', 'terms', field='f').metric('max_score', 'max', field='score')\nd = {\n    'aggs': {\n        'per_tag': {\n            'terms': {'field': 'f'},\n            'aggs': {'max_score': {'max': {'field': 'score'}}}\n         }\n    }\n```\n\n\n...",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://xiaorui.cc",
    "keywords": "elasticsearch_parse,fengyun",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "elasticsearch_parse",
    "package_url": "https://pypi.org/project/elasticsearch_parse/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/elasticsearch_parse/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://xiaorui.cc"
    },
    "release_url": "https://pypi.org/project/elasticsearch_parse/2.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "elasticsearch parse",
    "version": "2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1794066,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcd33952c3ebe169b03d37ce31a3134d84449dfcb43e8ac5eae67116d131ffa4",
          "md5": "5cdeba873a02903eff31c42b22d76603",
          "sha256": "4ff63a60744ad01ffaad3c237fb0d64f61aa1754f32a7634857746c39943380c"
        },
        "downloads": -1,
        "filename": "elasticsearch_parse-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5cdeba873a02903eff31c42b22d76603",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17496,
        "upload_time": "2015-10-30T16:59:09",
        "upload_time_iso_8601": "2015-10-30T16:59:09.315976Z",
        "url": "https://files.pythonhosted.org/packages/dc/d3/3952c3ebe169b03d37ce31a3134d84449dfcb43e8ac5eae67116d131ffa4/elasticsearch_parse-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "536b6c8a4aed16f8e2e717ff667cdefcceadd37829411763c55fea6bfa957cb4",
          "md5": "6e75c0c7416e43e0fec636f6408963f1",
          "sha256": "7073d2acf4844862cc6cfc48f46bf60c2cabc573c60de8a2a85ae42ccdb5a92a"
        },
        "downloads": -1,
        "filename": "elasticsearch_parse-1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6e75c0c7416e43e0fec636f6408963f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17612,
        "upload_time": "2015-10-30T17:03:35",
        "upload_time_iso_8601": "2015-10-30T17:03:35.410950Z",
        "url": "https://files.pythonhosted.org/packages/53/6b/6c8a4aed16f8e2e717ff667cdefcceadd37829411763c55fea6bfa957cb4/elasticsearch_parse-1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a4ca7b432b636f14adf57047a24d08db439b053f53685de7d05929db2a55273",
          "md5": "bf5f4c60b582afc362bcfc0c6afa52f3",
          "sha256": "400f747dccff5f18cdd69dc89d4e1554e03eed87b3ba832e1df5b2f4e02d6c98"
        },
        "downloads": -1,
        "filename": "elasticsearch_parse-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bf5f4c60b582afc362bcfc0c6afa52f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18118,
        "upload_time": "2015-10-30T17:29:48",
        "upload_time_iso_8601": "2015-10-30T17:29:48.219317Z",
        "url": "https://files.pythonhosted.org/packages/7a/4c/a7b432b636f14adf57047a24d08db439b053f53685de7d05929db2a55273/elasticsearch_parse-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a4ca7b432b636f14adf57047a24d08db439b053f53685de7d05929db2a55273",
        "md5": "bf5f4c60b582afc362bcfc0c6afa52f3",
        "sha256": "400f747dccff5f18cdd69dc89d4e1554e03eed87b3ba832e1df5b2f4e02d6c98"
      },
      "downloads": -1,
      "filename": "elasticsearch_parse-2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bf5f4c60b582afc362bcfc0c6afa52f3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18118,
      "upload_time": "2015-10-30T17:29:48",
      "upload_time_iso_8601": "2015-10-30T17:29:48.219317Z",
      "url": "https://files.pythonhosted.org/packages/7a/4c/a7b432b636f14adf57047a24d08db439b053f53685de7d05929db2a55273/elasticsearch_parse-2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}