{
  "info": {
    "author": "Josh Hatfield",
    "author_email": "jh@semetrical.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# LeadsRX Python Client\n\nA python client for querying the LeadsRX API. Created in my spare time to help out our analytics team.\n\nhttps://developers.leadsrx.com/reference#conversions\n\n\n#### Written by Josh Hatfield @Semetrical\n\n\n#### About Semetrical\n\nSemetrical are a global top 40 digital agency offering a full suite of services. Bespoke technology forms a key part of what we do.\n\nWe won Best Small SEO Agency at the EU Search Awards in 2019 and Best Small Biddable Agency at the UK Search Awards 2020.\n\nOur website can be found [here](http://bit.ly/3aMWIMd). If you want to chat, get in touch [here](http://bit.ly/3keCf5Y).\n\n## Key Features\n\n\n### Fetch Data From These Endpoints\n\n* Conversions | https://developers.leadsrx.com/reference#conversions\n* Touchpoints | https://developers.leadsrx.com/reference#touchpoints\n* Interactions | https://developers.leadsrx.com/reference#interactions\n* Conversion IDs | https://developers.leadsrx.com/reference#conversion-ids\n* Campaign IDs | https://developers.leadsrx.com/reference#campaign-ids\n* Grouping IDs | https://developers.leadsrx.com/reference#grouping-ids\n* Domains | https://developers.leadsrx.com/reference#domains\n\n### Access Results In These Formats\n\n* Access Results As A Json Object ([{},{},{}])\n* Access Results As A Pandas Dataframe\n\n\n## Getting Started\n\n### Installation\nDownload Files As Zip\n\nInstall These Libraries\n* Requests\n* Pandas\n\n## Code Examples\n\nImport Required Libraries\n```python\nimport LeadsRx\nimport logging\nimport json\n\n#Setup Log Handler\nlogging.basicConfig(level=logging.INFO,\n    format=\"%(asctime)s [%(levelname)s] %(message)s\",\n    handlers=[\n        logging.StreamHandler()\n    ]\n)\n```\nAuthenticate And Create Client\n```python\n#read in client_scret and account tag from a json file \njson_file=open('auth.json')\nauth_dict=json.load(json_file)\n\n##create client -- must pass in secret key and account tag as strings\nsecret_key=auth_dict['secret_key']\naccount_tag=auth_dict['account_tag']\n\nclient = LeadRx.client(secret_key=secret_key, account_tag=account_tag)\n\n\n#You could also just pass the key and tag in directly. Using a file is preferable as this way no sensitive information ends up in our gitrepo\nclient = LeadRx.client(secret_key=\"Your Client Secret\", account_tag=\"Your Account Tag\")\n\n```\n\nAccessing The Conversion ID Endpoint\n```python\n# get contents of conversion ID endpoint for the account tag given to client\nconversion_ids = client.pull_conversion_ids()\n\n# get result as json\nconversion_id_json = conversion_ids.json\n\n# get result as dataframe\nconversion_id_dataframe = conversion_ids.dataframe\n```\nAccessing The Campaign ID Endpoint\n```python\n# get campaign IDs for the account tag given to client\n# campaignIDs are also called touchpoint ids\ncampaign_ids = client.pull_campaign_ids()\n\n# get results as json\ncampaign_ids_json = campaign_ids.json\n\n# get result as dataframe\ncampaign_ids_dataframe = campaign_ids.dataframe\n```\nAccessing The Domains Endpoint\n```python\n# get domains for the account tag given to client\ndomains = client.pull_domains()\n\n# get result as json\ndomains_json = domains.json\n\n# get result as dataframe\ndomains_dataframe = domains.dataframe\n```\n\nAccessing The Groupings ID Endpoint\n```python\n\n# get grouping ids for the account tag given to client\ngroupings = client.pull_grouping_ids()\n\n# get result as json\ngroupings = groupings.json\n```\nAccessing The Touchpoint Endpoint\n```python\n# get contents of touchpoint endpoint for the account tag given to client\n    #Expects a startDateTime and endDateTime in \"YYYY-MM-DD HH-MM-SS\" format\n    #leadType can be set to \"new\",\"repeat\" or \"all\".This filters touchpoint results based on first time,repeat or all conversions for a customer\n    #Function pulls all conversion_ids by default. If you want to fetch conversions for a single conversion then pass it's conversion_id as a string\n\ntouchpoints = client.pull_touchpoints(campaignID=\"554588\", startDateTimeStr=\"2021-01 00:00:00\",\n                                      endDateTimeStr=\"2021-01-01 11:00:00\", conversion_id='13697', lead_type=\"new\")\n# get result for entire time period as json\ntouchpoints_json = touchpoints.total_results_json\n\n# get result for entire time period as dataframe\ntouchpoints_dataframe = touchpoints.total_results_dataframe\n\n# get result for entire period split by day as json\ntouchpoints_json = touchpoints.by_day_results_json\n\n# get result for entire period split by day as dataframe\ntouchpoints_dataframe = touchpoints.by_day_results_dataframe\n```\nAccessing The Interactions Endpoint\n```python\n\n# get contents of interactions endpoing for the account tag given to client\n   #Expects a startDateTime and endDateTime in \"YYYY-MM-DD HH-MM-SS\" format\n   #LeadRX campaignID should be supplied as a string.Campaign ID is the ID of the touchpoint you want to query\n   #Campaign IDS can be found by calling the campaigns ID Endpoint\n\ninteractions = client.pull_interactions(campaignID=\"554588\", startDateTimeStr=\"2021-01 00:00:00\",\n                                        endDateTimeStr=\"2021-01-01 11:00:00\")\n                                        \n#get result for the entire time period split by date as JSON\ninteractions_by_date_json = interactions.by_day_results_json\n\n#get results by hour_of_day for the entire time period as JSON\ninteractions_by_hour_of_day_json = interactions.hour_of_day_json\n\n#get results by day_of_week for the entire time period as JSON\ninteractions_by_day_of_week_json = interactions.day_of_week_json\n\n#get result for the entire time period split by date as a Dataframe\ninteractions_by_date_dataframe = interactions.by_day_results_dataframe\n\n#get results by hour_of_day for the entire time period as Dataframe\ninteractions_by_hour_of_day_dataframe = interactions.hour_of_day_dataframe\n\n#get results by day_of_week for the entire time period as JSON\ninteractions_by_day_of_week_dataframe = interactions.day_of_week_json\n```\nAccessing The Conversions Endpoint\n```python\n\n# get contents of conversions endpoint for the account tag given to client\n    #Expects a startDateTime and endDateTime in \"YYYY-MM-DD HH-MM-SS\" format\n    #landingPage can be set to False to avoid pulling the landingPage field\n    #Function pulls all conversion_ids by default. If you want to fetch conversions for a single conversion then pass it's conversion_id as a string\n    #visitorId can be set to get conversions for a single visitor.To pull data for all visitors do not pass the visitorID parameter to the function\n   \nconversions = client.pull_conversions(startDateTimeStr=\"2021-01-01 00:00:00\", endDateTimeStr=\"2021-01-01 11:00:00\",\n                                      visitorID=\"1522653355\",landingPage=True,conversion_id='13697')\n                                      \n# get result for the entire period split by day as json\nconversions_json = conversions.json\n\n# get result for the entire period split by day as dataframe\nconversions_dataframe = conversions.dataframe\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JoshHatfield/LeadsRx-Python-Client",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "LeadsRx-Python-Client",
    "package_url": "https://pypi.org/project/LeadsRx-Python-Client/",
    "platform": "",
    "project_url": "https://pypi.org/project/LeadsRx-Python-Client/",
    "project_urls": {
      "Bug Tracker": "https://github.com/JoshHatfield/LeadsRx-Python-Client/issues",
      "Homepage": "https://github.com/JoshHatfield/LeadsRx-Python-Client"
    },
    "release_url": "https://pypi.org/project/LeadsRx-Python-Client/0.0.9/",
    "requires_dist": [
      "requests (>=2.25.1)",
      "pandas (>=1.1.5)"
    ],
    "requires_python": ">=3.6",
    "summary": "A python client for querying the LeadsRX API. Created in my spare time to help out Semetricals Analytics Team",
    "version": "0.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11665233,
  "releases": {
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b7b8ef1cb6bb2f4b36d73d37c876f5ab972e62fb59bd254a37713a70d21c0ac",
          "md5": "c0416d6faebd0e239557ba5f102cc89b",
          "sha256": "31282e4031f6e59d91c60166dbf6da72e66b6b890de2707f785a5158dc747883"
        },
        "downloads": -1,
        "filename": "LeadsRx_Python_Client-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0416d6faebd0e239557ba5f102cc89b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19646,
        "upload_time": "2021-10-08T12:11:46",
        "upload_time_iso_8601": "2021-10-08T12:11:46.808880Z",
        "url": "https://files.pythonhosted.org/packages/4b/7b/8ef1cb6bb2f4b36d73d37c876f5ab972e62fb59bd254a37713a70d21c0ac/LeadsRx_Python_Client-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1aaf2426cab945940f4544bcdc47729eb319663a2b473b71d773c61d5b6819c3",
          "md5": "72c4feaf3889ec135831f66907c0df36",
          "sha256": "06c0d0b49d972ecebeb379be6791df8e29c50ec9c5a4b186749205fb543bdf4c"
        },
        "downloads": -1,
        "filename": "LeadsRx_Python_Client-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "72c4feaf3889ec135831f66907c0df36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19173,
        "upload_time": "2021-10-08T12:11:49",
        "upload_time_iso_8601": "2021-10-08T12:11:49.800880Z",
        "url": "https://files.pythonhosted.org/packages/1a/af/2426cab945940f4544bcdc47729eb319663a2b473b71d773c61d5b6819c3/LeadsRx_Python_Client-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f60177ffb38e746c272d7c60487803172d9810db956bd03f3c8255036983ac34",
          "md5": "f9e320e750cdc852701b13cdc14a235a",
          "sha256": "16e3337baa8f4cbd23223608d6f72caba8117e82e08dccbea65506aab3c6920e"
        },
        "downloads": -1,
        "filename": "LeadsRx_Python_Client-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9e320e750cdc852701b13cdc14a235a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19644,
        "upload_time": "2021-10-08T12:13:11",
        "upload_time_iso_8601": "2021-10-08T12:13:11.724888Z",
        "url": "https://files.pythonhosted.org/packages/f6/01/77ffb38e746c272d7c60487803172d9810db956bd03f3c8255036983ac34/LeadsRx_Python_Client-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe437f767429c01906d0570bebd2abcf4c94e649d9f3c34c1e921ee94146cdc4",
          "md5": "cc8dcf42f30bbe1f7aa15d7135791a2a",
          "sha256": "3894ff373836313bdddaeed5025b8cb4b9e5b201d1549504eb2561fd459bd4da"
        },
        "downloads": -1,
        "filename": "LeadsRx_Python_Client-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "cc8dcf42f30bbe1f7aa15d7135791a2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19171,
        "upload_time": "2021-10-08T12:13:13",
        "upload_time_iso_8601": "2021-10-08T12:13:13.533966Z",
        "url": "https://files.pythonhosted.org/packages/fe/43/7f767429c01906d0570bebd2abcf4c94e649d9f3c34c1e921ee94146cdc4/LeadsRx_Python_Client-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f60177ffb38e746c272d7c60487803172d9810db956bd03f3c8255036983ac34",
        "md5": "f9e320e750cdc852701b13cdc14a235a",
        "sha256": "16e3337baa8f4cbd23223608d6f72caba8117e82e08dccbea65506aab3c6920e"
      },
      "downloads": -1,
      "filename": "LeadsRx_Python_Client-0.0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f9e320e750cdc852701b13cdc14a235a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 19644,
      "upload_time": "2021-10-08T12:13:11",
      "upload_time_iso_8601": "2021-10-08T12:13:11.724888Z",
      "url": "https://files.pythonhosted.org/packages/f6/01/77ffb38e746c272d7c60487803172d9810db956bd03f3c8255036983ac34/LeadsRx_Python_Client-0.0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe437f767429c01906d0570bebd2abcf4c94e649d9f3c34c1e921ee94146cdc4",
        "md5": "cc8dcf42f30bbe1f7aa15d7135791a2a",
        "sha256": "3894ff373836313bdddaeed5025b8cb4b9e5b201d1549504eb2561fd459bd4da"
      },
      "downloads": -1,
      "filename": "LeadsRx_Python_Client-0.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "cc8dcf42f30bbe1f7aa15d7135791a2a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19171,
      "upload_time": "2021-10-08T12:13:13",
      "upload_time_iso_8601": "2021-10-08T12:13:13.533966Z",
      "url": "https://files.pythonhosted.org/packages/fe/43/7f767429c01906d0570bebd2abcf4c94e649d9f3c34c1e921ee94146cdc4/LeadsRx_Python_Client-0.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}