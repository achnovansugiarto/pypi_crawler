{
  "info": {
    "author": "",
    "author_email": "Farid <kraalfar@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# BaT CoRe: Baselines and testing framework for code reviewer recommendations\n\n\n\n## Framework\nThis repository provides a framework for testing code review recommendation algorithms.\n\n\n### Model creation\n* **RecommenderBase** is a simple interface for a generic recommender algorithm. It has a `fit` method that trains model on a given data and a `predict` method that predicts reviewers for the given pulls.\n* **BanRecommenderBase** is an in interface derived from RecommenderBase that implements by candidate filtering by their activity and ownership of the pull request\n\n### Dataset creation\n\n* **DatasetBase** is an interface that encapsulates any preprocessing needed for the dataset with a method `preprocess`. \n* **GerritLoader** is a class that deals with the data loader from the PullExtractor tool: loads it, reformats it, and performs some high-level preprocessing (empty data removal, bot removal, alias matching, user encoding)\n* **StandardDataset** an implementation of DatasetBase. Receives GerritLoader object and performs all the preprocessing that can be needed for a specific model\n* **SpecialDatasets** has implementations of datasets that are unique to a specific recommender\n* **get_gerrit_dataset** helping function for dataset creation. Dataset for a specific model can be created as `get_gerrit_dataset(gerritloader_object, model_cls=RecommenderBase_class)`\n\n* **StreamLoaderBase** is an interface that encapsulates iteration over data. The interface views data as a temporal stream of events and \nyields pairs of consecutive segments of the stream - train (any set of events), test (a pull request event)\n\n### Testing of models\n* **TesterBase** is class that has `test_recommender` method. This method takes `RecommenderBase` and `StreamLoaderBase` and iterates over the dataset, retrains model on new train data, and calculates its predictions.\n* **RecTester** an implementation of TesterBase that calculates metrics standard for recommendation systems (mrr, accuracy, etc)\n* **SimulTester**  an implementation of TesterBase that tester for project-based metrics on a simulated history (*Mirsaeedi, Rigby, 2020*). Metrics for the simulated testing can be found in `Counter`.\n\nAn example of usage can be found in `example.py`\n## Baselines\n\nFramework contains implementations of the following models (`baselines\\models`)\n\n* RevFinder, *Who Should Review My Code?, Thongtanunam et al., 2015*\n* Tie, *Who Should Review This Change?, Xin Xia et al., 2015*\n* ACRec, *Who Should Comment on This Pull Request?, Jiang et al. 2017*\n* cHRec, *Automatically Recommending Peer Reviewers in Modern Code Review, Zanjani et al., 2015*\n* CN, *What Can We Learn from Code Review and Bug Assignment?, Yu et al., 2015*\n* RevRec, *Search-Based Peer Reviewers Recommendation in Modern Code Review, Ouni et al., 2016*\n* WRC, *Automatically Recommending Code Reviewers Based on Their Expertise: An Empirical Comparison, Hannebauer et al., 2016*\n* xFinder, *Assigning change requests to software developers, Kagdi et al., 2011*\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "batcore",
    "package_url": "https://pypi.org/project/batcore/",
    "platform": null,
    "project_url": "https://pypi.org/project/batcore/",
    "project_urls": {
      "Bug Tracker": "https://github.com/JetBrains-Research/batcore/issues",
      "Docs": "https://batcore.readthedocs.io/en/latest/index.html#",
      "Homepage": "https://github.com/JetBrains-Research/batcore"
    },
    "release_url": "https://pypi.org/project/batcore/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "BaTCoRe",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16474584,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86b0744922aeedded9c59e3a01ad80a8b0ce6c0e695c6ea5eeb5675aa92a0615",
          "md5": "36350be88b60cb9b9ec1a8376776e176",
          "sha256": "4f6d26f55e13b630370d737e8d25abc2d6e3bf7aae27a36883e036af15fce715"
        },
        "downloads": -1,
        "filename": "batcore-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36350be88b60cb9b9ec1a8376776e176",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 49275,
        "upload_time": "2023-01-18T17:24:24",
        "upload_time_iso_8601": "2023-01-18T17:24:24.675659Z",
        "url": "https://files.pythonhosted.org/packages/86/b0/744922aeedded9c59e3a01ad80a8b0ce6c0e695c6ea5eeb5675aa92a0615/batcore-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5a48d61c1599bb03fb0fa849e0ef7559d561993dd0fe1f857ce999eeac1b623",
          "md5": "621f91d86e93cc4da9407692816337f9",
          "sha256": "312faefd4785ed7cc22140301d38a7ec64961e3585f39e82c393b685c1708f75"
        },
        "downloads": -1,
        "filename": "batcore-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "621f91d86e93cc4da9407692816337f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 36319,
        "upload_time": "2023-01-18T17:24:26",
        "upload_time_iso_8601": "2023-01-18T17:24:26.922228Z",
        "url": "https://files.pythonhosted.org/packages/a5/a4/8d61c1599bb03fb0fa849e0ef7559d561993dd0fe1f857ce999eeac1b623/batcore-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86b0744922aeedded9c59e3a01ad80a8b0ce6c0e695c6ea5eeb5675aa92a0615",
        "md5": "36350be88b60cb9b9ec1a8376776e176",
        "sha256": "4f6d26f55e13b630370d737e8d25abc2d6e3bf7aae27a36883e036af15fce715"
      },
      "downloads": -1,
      "filename": "batcore-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "36350be88b60cb9b9ec1a8376776e176",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 49275,
      "upload_time": "2023-01-18T17:24:24",
      "upload_time_iso_8601": "2023-01-18T17:24:24.675659Z",
      "url": "https://files.pythonhosted.org/packages/86/b0/744922aeedded9c59e3a01ad80a8b0ce6c0e695c6ea5eeb5675aa92a0615/batcore-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5a48d61c1599bb03fb0fa849e0ef7559d561993dd0fe1f857ce999eeac1b623",
        "md5": "621f91d86e93cc4da9407692816337f9",
        "sha256": "312faefd4785ed7cc22140301d38a7ec64961e3585f39e82c393b685c1708f75"
      },
      "downloads": -1,
      "filename": "batcore-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "621f91d86e93cc4da9407692816337f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 36319,
      "upload_time": "2023-01-18T17:24:26",
      "upload_time_iso_8601": "2023-01-18T17:24:26.922228Z",
      "url": "https://files.pythonhosted.org/packages/a5/a4/8d61c1599bb03fb0fa849e0ef7559d561993dd0fe1f857ce999eeac1b623/batcore-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}