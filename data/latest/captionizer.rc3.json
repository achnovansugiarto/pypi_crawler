{
  "info": {
    "author": "",
    "author_email": "Fabio 'MrWHO' Torchetti <fabbari@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Captions from filenames - for Stable Diffusion\n\nThis module creates captions from images in a folder based on\nthe folder names and the name of the image file.\n\n```python\n>>> from captionizer import caption_from_path\n\n```\n\nIn the following examples we assume that:\n\n - Token is 'randoguy'\n - Class for the token is 'person'\n - The base of our test data is `/sd/data`\n\n```py\n>>> class_token = 'person'\n>>> token = 'randoguy'\n>>> base_path = '/sd/data'\n\n```\n\nIn the simplest case - if a file is in the root of the folder -\nit will behave the same way as it does today. So:\n\n```py\n>>> print(caption_from_path('/sd/data/img-001.jpg', base_path, class_token, token))\nrandoguy person\n\n```\n\nNext up - if you have an image file in `/sd/data/joepenna/img-001.jpg` your *token*, if\npassed, will be ignored and *joepenna* is going to be used to create the caption.\n\n```py\n>>> print(caption_from_path('/sd/data/joepenna/img-001.jpg', base_path, class_token, token))\njoepenna person\n\n```\nOne deeper: if you have an image file in `/sd/data/joepenna/person/img-001.jpg` things get\nmore interesting: the first part is used as a token the second as a class, so you get:\n\n```py\n>>> print(caption_from_path('/sd/data/joepenna/man/img-001.jpg', base_path, class_token, token))\njoepenna man\n\n```\nThis allows you to train the same subject under different classes (*man*, *person*, *biped*)\n\nFinally: you can customize the caption by adding an annotation to the filename, so:\n`/sd/data/joepenna/person/img-001@a_picture_of_S.jpg` would look like:\n\n```py\n>>> print(caption_from_path('/sd/data/joepenna/person/img-001@a_picture_of_S.jpg', base_path, class_token, token))\na picture of joepenna\n\n```\n\nYou can see that '*S*' was automatically converted to the subject token. I can hear you scream: 'But what if I\nwant to have an \"S\" in my caption?' - well: *tough luck*! And wait until I tell you that I also eating all your\n*C*s! Yes: if you have a file in `/sd/data/joepenna/dude/img-001@S_the_C_hanging_out_by_the_pool.jpg` then\nyour caption becomes:\n\n```py\n>>> filename = '/sd/data/joepenna/dude/img-001@S_the_C_hanging_out_by_the_pool.jpg'\n>>> print(caption_from_path(filename, base_path, class_token, token))\njoepenna the dude hanging out by the pool\n\n```\n\nBut wait! There is more!\n\nIf you don't want to caption all of your images -- who has the time anyhow, right? -- you can have\nsomething along these lines: `/sd/data/joepenna/dude/a_picture_of_S_being_a_C/img-001@as_a_C_can_be.jpg` to get:\n\n```py\n>>> filename = '/sd/data/joepenna/dude/a_picture_of_S_being_a_C/img-001@as_a_C_can_be.jpg'\n>>> print(caption_from_path(filename, base_path, class_token, token))\na picture of joepenna being a dude as a dude can be\n\n```\n\n### Note\nAll the examples show and underscore - `_` - in the filename instead of a space. You can use\nregular spaces if your operative system supports it. So:\n\n```py\n>>> filename = '/sd/data/joepenna/dude/a picture of S being a C/img-001@as a C can be.jpg'\n>>> print(caption_from_path(filename, base_path, class_token, token))\na picture of joepenna being a dude as a dude can be\n\n```\n\n\n\nIf you used one of the tokens as part of the path to the file, the tokens will not be added to the caption, so\nif you have `/sd/data/joepenna/dude/a_photo_of_S_milling_about/img-001.jpg`, the result will be:\n\n```py\n>>> filename = '/sd/data/joepenna/dude/a_photo_of_S_milling_about/img-001.jpg'\n>>> print(caption_from_path(filename, base_path, class_token, token))\na photo of joepenna milling about\n\n```\n\nFinally - I promise - you can use captions directly in the old fashioned *let's dump all of our\nimages in the same bucket* method, so `/sd/data/img-001@S_being_a_handsome_C.jpg` would spit out:\n\n```py\n>>> filename = '/sd/data/img-001@S_being_a_handsome_C.jpg'\n>>> print(caption_from_path(filename, base_path, class_token, token))\nrandoguy being a handsome person\n\n```\n\n## The finder\n\nNow that we have a more complex structure you can see that listing the files in a folder is no\nlonger enough, we need to be able to recursively find them given a root data folder. Lucky us:\n\n```py\nfrom captionizer import find_images\n\nprint(find_images('/sd/data'))\n```\n\nIf you want to see what all of this sums up to, you can run:\n\n```bash\ncaptionizer <folder with data>\n```\n\nand it will spit out a list of the files it found and the captions generated for them.\n\n## Running this document as a python test\n\nYou what? Really? You don't trust me?? OK:\n\n```bash\npython3 captionizer/run_tests.py\n```\n\n## Captions from filenames - for everyone else\n\nIf you have your own set of tokens to replace - or if you want better tokens than the ones I picked -\nyou can use the `generic_captions_from_path` method. the method allows to setup your own mappings.\n\nThis is an example of usage:\n\n```py\n>>> from captionizer import generic_captions_from_path\n>>> from typing import OrderedDict\n>>> filename = '/sd/data/img-001@X_is_better_than_S.jpg'\n>>> tokens = OrderedDict([('X', 'Mine'), ('S', 'Yours')])\n>>> print(generic_captions_from_path(filename, base_path, tokens))\nMine is better than Yours\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "captions,images,stable diffusion",
    "license": "Apache License Version 2.0, January 2004 http://www.apache.org/licenses/  TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION  1. Definitions.  \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.  \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.  \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.  \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.  \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.  \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.  \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).  \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.  \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"  \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.  2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.  3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.  4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:  (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and  (b) You must cause any modified files to carry prominent notices stating that You changed the files; and  (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and  (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.  You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.  5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.  6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.  7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.  8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.  9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.  END OF TERMS AND CONDITIONS  APPENDIX: How to apply the Apache License to your work.  To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!)  The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives.  Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "captionizer",
    "package_url": "https://pypi.org/project/captionizer/",
    "platform": null,
    "project_url": "https://pypi.org/project/captionizer/",
    "project_urls": {
      "Homepage": "https://github.com/fabbarix/captionizer"
    },
    "release_url": "https://pypi.org/project/captionizer/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.0",
    "summary": "Creates captions from filenames and paths",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16271553,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4de39a36954c0fbb339c6f21d92d4a54a5631b637f9bce2389902246bfac6d6",
          "md5": "2c08e7cd1acb78866f90961c74a8d727",
          "sha256": "f50bbaac3daad4bb7cfb5a1ac7c28a5e530aa11075c5c4691b013e23809d46ed"
        },
        "downloads": -1,
        "filename": "captionizer-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c08e7cd1acb78866f90961c74a8d727",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 13127,
        "upload_time": "2022-10-09T17:59:50",
        "upload_time_iso_8601": "2022-10-09T17:59:50.975473Z",
        "url": "https://files.pythonhosted.org/packages/a4/de/39a36954c0fbb339c6f21d92d4a54a5631b637f9bce2389902246bfac6d6/captionizer-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e9850a5ef6d58f68f2d11376ea8bb1dbf1cb1c7e29576d79bb91545283685ea",
          "md5": "7837445ab81ed70aa8490825a17c5499",
          "sha256": "c6f3868846ab7cc5b15be9a574f9c8a9a513454ccbd68d7acc15656221f835c2"
        },
        "downloads": -1,
        "filename": "captionizer-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7837445ab81ed70aa8490825a17c5499",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 15073,
        "upload_time": "2022-10-09T17:59:52",
        "upload_time_iso_8601": "2022-10-09T17:59:52.709229Z",
        "url": "https://files.pythonhosted.org/packages/3e/98/50a5ef6d58f68f2d11376ea8bb1dbf1cb1c7e29576d79bb91545283685ea/captionizer-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21d96d27c5536442593b5f9e96816aca8570de0045d25ae9a33a6147188bef18",
          "md5": "cc09993f631e63ca80d799bb783f2406",
          "sha256": "834322feddd8a16b7a537cc3bfe5485091bf747a72f79759acc621f7a34edf4c"
        },
        "downloads": -1,
        "filename": "captionizer-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc09993f631e63ca80d799bb783f2406",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 13191,
        "upload_time": "2022-10-09T18:12:05",
        "upload_time_iso_8601": "2022-10-09T18:12:05.708961Z",
        "url": "https://files.pythonhosted.org/packages/21/d9/6d27c5536442593b5f9e96816aca8570de0045d25ae9a33a6147188bef18/captionizer-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "073c657e11f37e3c87f4435b82e0156c68c092ff9d912fafc26dfbcce132cf41",
          "md5": "c51ff78876547b094cea12421e2c03d1",
          "sha256": "facd52c09ac9bf078085a99e170839c35f234988e10702d0a460d0a929ef57b4"
        },
        "downloads": -1,
        "filename": "captionizer-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c51ff78876547b094cea12421e2c03d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 15086,
        "upload_time": "2022-10-09T18:12:08",
        "upload_time_iso_8601": "2022-10-09T18:12:08.682079Z",
        "url": "https://files.pythonhosted.org/packages/07/3c/657e11f37e3c87f4435b82e0156c68c092ff9d912fafc26dfbcce132cf41/captionizer-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "248a42edb51a441208d2da1b1f67bba3e9de4b65ddf32a6e4eb0bdd169bbab69",
          "md5": "0839c37391afaad61e57d69128866d1f",
          "sha256": "4543cb7026ed84a12bfd13e2aa62983cc6cf80f46837ad5fc9cf95e13d35000a"
        },
        "downloads": -1,
        "filename": "captionizer-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0839c37391afaad61e57d69128866d1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 13182,
        "upload_time": "2023-01-01T11:22:03",
        "upload_time_iso_8601": "2023-01-01T11:22:03.071324Z",
        "url": "https://files.pythonhosted.org/packages/24/8a/42edb51a441208d2da1b1f67bba3e9de4b65ddf32a6e4eb0bdd169bbab69/captionizer-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "807241be833d383b5c522340250bc9258c4515ea31d414c4d21398ac9b890c23",
          "md5": "4ba3f9199401ab441a589716d5b070c2",
          "sha256": "07be21353f6ad8ddf77d2a49547933ef17bab7410efc410ee643d0de690624b3"
        },
        "downloads": -1,
        "filename": "captionizer-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4ba3f9199401ab441a589716d5b070c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 15159,
        "upload_time": "2023-01-01T11:22:06",
        "upload_time_iso_8601": "2023-01-01T11:22:06.805428Z",
        "url": "https://files.pythonhosted.org/packages/80/72/41be833d383b5c522340250bc9258c4515ea31d414c4d21398ac9b890c23/captionizer-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "248a42edb51a441208d2da1b1f67bba3e9de4b65ddf32a6e4eb0bdd169bbab69",
        "md5": "0839c37391afaad61e57d69128866d1f",
        "sha256": "4543cb7026ed84a12bfd13e2aa62983cc6cf80f46837ad5fc9cf95e13d35000a"
      },
      "downloads": -1,
      "filename": "captionizer-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0839c37391afaad61e57d69128866d1f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.0",
      "size": 13182,
      "upload_time": "2023-01-01T11:22:03",
      "upload_time_iso_8601": "2023-01-01T11:22:03.071324Z",
      "url": "https://files.pythonhosted.org/packages/24/8a/42edb51a441208d2da1b1f67bba3e9de4b65ddf32a6e4eb0bdd169bbab69/captionizer-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "807241be833d383b5c522340250bc9258c4515ea31d414c4d21398ac9b890c23",
        "md5": "4ba3f9199401ab441a589716d5b070c2",
        "sha256": "07be21353f6ad8ddf77d2a49547933ef17bab7410efc410ee643d0de690624b3"
      },
      "downloads": -1,
      "filename": "captionizer-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4ba3f9199401ab441a589716d5b070c2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0",
      "size": 15159,
      "upload_time": "2023-01-01T11:22:06",
      "upload_time_iso_8601": "2023-01-01T11:22:06.805428Z",
      "url": "https://files.pythonhosted.org/packages/80/72/41be833d383b5c522340250bc9258c4515ea31d414c4d21398ac9b890c23/captionizer-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}