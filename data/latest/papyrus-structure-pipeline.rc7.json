{
  "info": {
    "author": "Olivier J. M. BÃ©quignon",
    "author_email": "\"olivier.bequignon.maintainer@gmail.com\"",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\r\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\r\n\r\n# Papyrus Structure Pipeline\r\n\r\nPapyrus protocols used to standardize molecules. First used in Papyrus 05.6\r\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7377161.svg)](https://doi.org/10.5281/zenodo.7377161).\r\n\r\n## Installation\r\n\r\nFrom source:\r\n\r\n    git clone https://github.com/OlivierBeq/Papyrus_Structure_Pipeline.git\r\n    pip install ./Papyrus_Structure_Pipeline\r\n\r\nwith pip:\r\n\r\n```bash\r\npip install papyrus-structure-pipeline\r\n```\r\n\r\n## Usage\r\n\r\n### Standardize a compound\r\n\r\nComparison to the [ChEMBL Structure Pipeline](https://github.com/chembl/ChEMBL_Structure_Pipeline):\r\n\r\n```python\r\nfrom rdkit import Chem\r\nfrom chembl_structure_pipeline import standardizer as ChEMBL_standardizer\r\nfrom papyrus_structure_pipeline import standardizer as Papyrus_standardizer\r\n\r\n# CHEMBL1560279\r\nsmiles = \"CCN(CC)C(=O)[n+]1ccc(OC)cc1.c1ccc([B-](c2ccccc2)(c2ccccc2)c2ccccc2)cc1\"\r\n\r\nmol = Chem.MolFromSmiles(smiles)\r\nout1 = ChEMBL_standardizer.standardize_mol(mol)\r\nout2 = Papyrus_standardizer.standardize(mol)\r\n\r\n\r\nprint(Chem.MolToSmiles(out1))\r\n# CCN(CC)C(=O)[n+]1ccc(OC)cc1.c1ccc([B-](c2ccccc2)(c2ccccc2)c2ccccc2)cc1\r\n\r\nprint(Chem.MolToSmiles(out2))\r\n# CCN(CC)C(=O)[n+]1ccc(OC)cc1\r\n```\r\n\r\nGet details on the standardization to identify why it fails for some molecules:\r\n\r\n```python\r\nsmiles_list = [\r\n    # erlotinib\r\n    \"n1cnc(c2cc(c(cc12)OCCOC)OCCOC)Nc1cc(ccc1)C#C\",\r\n    # midecamycin\r\n    \"CCC(=O)O[C@@H]1CC(=O)O[C@@H](C/C=C/C=C/[C@@H]([C@@H](C[C@@H]([C@@H]([C@H]1OC)O[C@H]2[C@@H]([C@H]([C@@H]([C@H](O2)C)O[C@H]3C[C@@]([C@H]([C@@H](O3)C)OC(=O)CC)(C)O)N(C)C)O)CC=O)C)O)C\",\r\n    # selenofolate\r\n    \"C1=CC(=CC=C1C(=O)NC(CCC(=O)OCC[Se]C#N)C(=O)O)NCC2=CN=C3C(=N2)C(=O)NC(=N3)N\",\r\n    # cisplatin\r\n    \"N.N.Cl[Pt]Cl\"\r\n]\r\n\r\nfor smiles in smiles_list:\r\n    mol = Chem.MolFromSmiles(smiles)\r\n    print(Papyrus_standardizer.standardize(mol, return_type=True))\r\n\r\n    \r\n# (<rdkit.Chem.rdchem.Mol object at 0x000000946F99B580>, <StandardizationResult.CORRECT_MOLECULE: 1>)\r\n# (None, <StandardizationResult.NON_SMALL_MOLECULE: 2>)\r\n# (None, <StandardizationResult.INORGANIC_MOLECULE: 3>)\r\n# (None, <StandardizationResult.MIXTURE_MOLECULE: 4>)\r\n```\r\n\r\nAllow other atoms to be considered organic:\r\n\r\n```python\r\nsmiles = \"CCN(CC)C(=O)C1=CC=C(S1)C2=C3C=CC(=[N+](C)C)C=C3[Se]C4=C2C=CC(=C4)N(C)C.F[P-](F)(F)(F)(F)F\"\r\nmol = Chem.MolFromSmiles(smiles)\r\n\r\nprint(Papyrus_standardizer.standardize(mol, return_type=True))\r\n# (None, <StandardizationResult.INORGANIC_MOLECULE: 3>)\r\n\r\nPapyrus_standardizer.ORGANIC_ATOMS.append('Se')\r\n\r\nprint(Papyrus_standardizer.standardize(mol, return_type=True))\r\n# (<rdkit.Chem.rdchem.Mol object at 0x0000009F24D15F90>, <StandardizationResult.CORRECT_MOLECULE: 1>)\r\n\r\nPapyrus_standardizer.ORGANIC_ATOMS = Papyrus_standardizer.ORGANIC_ATOMS[:-1]\r\n\r\nprint(Papyrus_standardizer.standardize(mol, return_type=True))\r\n# (None, <StandardizationResult.INORGANIC_MOLECULE: 3>)\r\n```\r\n\r\nAdd custom substructures to be removed as salts:\r\n\r\n```python\r\n# lomitapide\r\nsmiles = \"C1CN(CCC1NC(=O)C2=CC=CC=C2C3=CC=C(C=C3)C(F)(F)F)CCCCC4(C5=CC=CC=C5C6=CC=CC=C64)C(=O)NCC(F)(F)F.c1ccccc1\"\r\nmol = Chem.MolFromSmiles(smiles)\r\n\r\nprint(Papyrus_standardizer.standardize(mol, return_type=True))\r\n# (None, <StandardizationResult.MIXTURE_MOLECULE: 4>)\r\n\r\nPapyrus_standardizer.SALTS.append('c1ccccc1')\r\n\r\nprint(Papyrus_standardizer.standardize(mol, return_type=True))\r\n# (<rdkit.Chem.rdchem.Mol object at 0x0000009F24D15F90>, <StandardizationResult.CORRECT_MOLECULE: 1>)\r\n\r\nPapyrus_standardizer.SALTS = Papyrus_standardizer.SALTS[:-1]\r\n\r\nprint(Papyrus_standardizer.standardize(mol, return_type=True))\r\n# (None, <StandardizationResult.MIXTURE_MOLECULE: 4>)\r\n```\r\n\r\n\r\n## Documentation\r\n\r\n\r\n```python\r\ndef standardize(mol,\r\n                remove_additional_salts=True, remove_additional_metals=True,\r\n                filter_mixtures=True, filter_inorganic=True, filter_non_small_molecule=True,\r\n                canonicalize_tautomer=True, small_molecule_min_mw=200, small_molecule_max_mw=800,\r\n                tautomer_allow_stereo_removal=True, tautomer_max_tautomers=0, return_type=False,\r\n                raise_error=True\r\n                ) -> Chem.Mol:\r\n```\r\n\r\n#### Parameters\r\n\r\n- ***mol  : Chem.Mol***  \r\n    RDKit molecule object to standardize.\r\n- ***remove_additional_salts  : bool***  \r\n    Removes a custom set of fragments if present in the molecule object.\r\n- ***remove_additional_metals  : bool***  \r\n    Removes metal fragments if present in the molecule object.<br/>Ignored if `remove_additional_salts` is set to `False`.\r\n- ***filter_mixtures  : bool***  \r\n    Return `None` if the molecule is a mixture.  \r\n- ***filter_inorganic  : bool***  \r\n    Return `None` if the molecule is inorganic.\r\n- ***filter_non_small_molecule  : bool***  \r\n    Return `None` if the molecule is not a small molecule.\r\n- ***canonicalize_tautomer  : bool***  \r\n    Canonicalize the tautomeric state of the molecule.\r\n- ***small_molecule_min_mw  : float***  \r\n    Molecular weight under which a molecule is considered too small. \r\n- ***small_molecule_max_mw  : float***  \r\n    Molecular weight above which a molecule is considered too big.\r\n- ***tautomer_allow_stereo_removal  : bool***  \r\n    Allow the tautomer search algorithm to remove stereocenters. \r\n- ***tautomer_max_tautomers  : int (< 2 <sup>32</sup>)***  \r\n    Maximum number of tautomers to consider by the tautomer search algorithm.\r\n- ***return_type  : bool***  \r\n    Add a StandardizationResult to the return value.\r\n- ***raise_error  : bool***\r\n    Raise an exception upon failure, otherwise return None\r\n\r\n________________\r\n\r\n```python\r\ndef is_organic(mol, return_type=False) -> bool:\r\n```\r\n\r\nReturn whether the RKDit molecule is organic or not.\r\n - Makes internal use of the variable `ORGANIC_ATOMS` \r\n\r\n#### Parameters\r\n\r\n- ***mol  : Chem.Mol***  \r\n    RDKit molecule object to check the organic nature of.\r\n- ***return_type  : bool***  \r\n    Add a InorganicSubtype to the return value. \r\n\r\n________________\r\n\r\n```python\r\ndef is_small_molecule(mol,\r\n                      min_molwt=200,\r\n                      max_molwt=800\r\n                      ) -> bool:\r\n```\r\n\r\nReturn whether the RKDit molecule has a molecular weight within `min_molwt` and `max_molwt`.\r\n\r\n#### Parameters\r\n\r\n- ***mol  : Chem.Mol***  \r\n    RDKit molecule object to check the organic nature of.\r\n- ***min_molwt  : float***  \r\n    Molecular weight under which a molecule is considered too small. \r\n- ***max_molwt  : float***  \r\n    Molecular weight above which a molecule is considered too big.\r\n\r\n________________\r\n\r\n\r\n```python\r\ndef is_mixture(mol) -> bool:\r\n```\r\n\r\nReturn whether the RKDit molecule is composed of multiple fragments.\r\n\r\n#### Parameters\r\n\r\n- ***mol  : Chem.Mol***  \r\n    RDKit molecule object to check the organic nature of.\r\n\r\n________________\r\n\r\n```python\r\ndef _apply_chembl_standardization(mol) -> Chem.Mol:\r\n``` \r\n\r\nApply the ChEMBL structure standardization pipeline on a RDKit molecule.\r\n- Makes use of both `ChEMBL_standardizer.get_parent_mol` and `ChEMBL_standardizer.standardize_mol`.\r\n- Ensures the obtained SMILES can be parsed by the RDKit.\r\n\r\n#### Parameters\r\n\r\n- ***mol  : Chem.Mol***  \r\n    RDKit molecule object to apply the ChEMBL Structure Pipeline to.\r\n\r\n________________\r\n\r\n```python\r\ndef _canonicalize_tautomer(mol,\r\n                           allow_stereo_removal=True, max_tautomers=2 ** 32 - 1\r\n                           ) -> Chem.Mol:\r\n``` \r\n\r\nObtain the RDKit canonical tautomer of the given RDKit molecule.\r\n- Makes use of both `ChEMBL_standardizer.get_parent_mol` and `ChEMBL_standardizer.standardize_mol`.\r\n- Ensures the obtained SMILES can be parsed by the RDKit.\r\n\r\n#### Parameters\r\n\r\n- ***mol  : Chem.Mol***  \r\n    RDKit molecule object to RDKit canonical tautomer of.\r\n- ***allow_stereo_removal  : bool***  \r\n    Allow the tautomer search algorithm to remove stereocenters.\r\n- ***max_tautomers  : int (<2 <sup>32</sup>)***  \r\n    Maximum number of tautomers to consider by the tautomer search algorithm.\r\n\r\n________________\r\n\r\n```python\r\ndef _remove_supplementary_salts(mol,\r\n                                include_metals=True, return_type=False\r\n                                ) -> Chem.Mol:\r\n``` \r\n\r\nRemove substructures (e.g. salts) not dealt with by the ChEMBL pipeline structure.\r\n\r\nThe additional substructures are defined by the `SALTS` variable.\r\n\r\n#### Parameters\r\n\r\n- ***mol  : Chem.Mol***  \r\n    RDKit molecule object from which to remove additional substructures.\r\n- ***include_metals  : bool***  \r\n    Removes metal fragments if present in the molecule object (defined by the `METALS` variable).\r\n- ***return_type  : bool***  \r\n    Add a SaltStrippingResult to the return value.\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/OlivierBeq/Papyrus_structure_pipeline",
    "keywords": "cheminformatics,molecule,standardization",
    "license": "",
    "maintainer": "Olivier J. M. BÃ©quignon",
    "maintainer_email": "\"olivier.bequignon.maintainer@gmail.com\"",
    "name": "papyrus-structure-pipeline",
    "package_url": "https://pypi.org/project/papyrus-structure-pipeline/",
    "platform": null,
    "project_url": "https://pypi.org/project/papyrus-structure-pipeline/",
    "project_urls": {
      "Homepage": "https://github.com/OlivierBeq/Papyrus_structure_pipeline"
    },
    "release_url": "https://pypi.org/project/papyrus-structure-pipeline/0.0.3/",
    "requires_dist": [
      "rdkit",
      "chembl-structure-pipeline",
      "sphinx ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "sphinx-autodoc-typehints ; extra == 'docs'",
      "pytest ; extra == 'testing'"
    ],
    "requires_python": "",
    "summary": "Papyrus Structure Pipeline",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17171511,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59f7f08e2ca90e4f922790a2add48c860135ea89f6465b6ad5be19d0c4a60c6e",
          "md5": "4dec5c1d09fda2d0d0c4cdcb5f47b056",
          "sha256": "39b6c69ca2f3bb9a27d4f9fd3855f854e52e14e1ff1788b728d8a034e2f5bea0"
        },
        "downloads": -1,
        "filename": "papyrus_structure_pipeline-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4dec5c1d09fda2d0d0c4cdcb5f47b056",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8978,
        "upload_time": "2023-01-16T00:14:28",
        "upload_time_iso_8601": "2023-01-16T00:14:28.335810Z",
        "url": "https://files.pythonhosted.org/packages/59/f7/f08e2ca90e4f922790a2add48c860135ea89f6465b6ad5be19d0c4a60c6e/papyrus_structure_pipeline-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a30602a5be15ec9bbd98e79aca3b69f481cc045ace6e7a972f62b6947e477dc0",
          "md5": "6ac3d7633d213faf1770b9ff11c756e7",
          "sha256": "8717dfa45d06e8fb7c88fff53bb70738ccb36fa507609786325a70f852c21ed5"
        },
        "downloads": -1,
        "filename": "papyrus_structure_pipeline-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6ac3d7633d213faf1770b9ff11c756e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10176,
        "upload_time": "2023-01-16T00:14:30",
        "upload_time_iso_8601": "2023-01-16T00:14:30.298500Z",
        "url": "https://files.pythonhosted.org/packages/a3/06/02a5be15ec9bbd98e79aca3b69f481cc045ace6e7a972f62b6947e477dc0/papyrus_structure_pipeline-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb46dd2b9577aa2c82d0a4ba9a99ae636542fc983c08528d2fea8ccee5350b9d",
          "md5": "fad5d5dcb0f82bbd5144999bfcd33e86",
          "sha256": "d41defb2f20b532ab306724336160bbbaaad118b9d1cb2dd7bc3a6edef3f1896"
        },
        "downloads": -1,
        "filename": "papyrus_structure_pipeline-0.0.1.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fad5d5dcb0f82bbd5144999bfcd33e86",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9032,
        "upload_time": "2023-01-16T00:19:52",
        "upload_time_iso_8601": "2023-01-16T00:19:52.097854Z",
        "url": "https://files.pythonhosted.org/packages/fb/46/dd2b9577aa2c82d0a4ba9a99ae636542fc983c08528d2fea8ccee5350b9d/papyrus_structure_pipeline-0.0.1.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9153e974ccbf1b526100e769f07b765a219ffb81b6d25e4221bbe3359f6add6",
          "md5": "5cfa5d16c73eeaa298d22ba93fd9fe47",
          "sha256": "4da11308869a48b978b2dbf7ef8291e959136d6502286f7e176eab41aa856c88"
        },
        "downloads": -1,
        "filename": "papyrus_structure_pipeline-0.0.1.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "5cfa5d16c73eeaa298d22ba93fd9fe47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10146,
        "upload_time": "2023-01-16T00:19:53",
        "upload_time_iso_8601": "2023-01-16T00:19:53.759641Z",
        "url": "https://files.pythonhosted.org/packages/d9/15/3e974ccbf1b526100e769f07b765a219ffb81b6d25e4221bbe3359f6add6/papyrus_structure_pipeline-0.0.1.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8434e539e05b8b7e50437cff51d4139dd8a96f96dd56872ca7207038ec2f8ad",
          "md5": "7107060877b155b187defd3012f0a90a",
          "sha256": "78b66b33fbb92e36aa9582411530ee80900f011f2f7bd5e0a8719f9d706d5307"
        },
        "downloads": -1,
        "filename": "papyrus_structure_pipeline-0.0.1.post2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7107060877b155b187defd3012f0a90a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9035,
        "upload_time": "2023-01-16T00:24:08",
        "upload_time_iso_8601": "2023-01-16T00:24:08.139713Z",
        "url": "https://files.pythonhosted.org/packages/f8/43/4e539e05b8b7e50437cff51d4139dd8a96f96dd56872ca7207038ec2f8ad/papyrus_structure_pipeline-0.0.1.post2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6647c7ca65b47b127fc1867c8b0ff0236986e32ba33bcf5c7548c75267d28e72",
          "md5": "2112995ba07bf3a6ac804ccdefba1ef0",
          "sha256": "3027d31580a9a24a02fb6f0f63640af864db33f6d96309c18c160b40351519e4"
        },
        "downloads": -1,
        "filename": "papyrus_structure_pipeline-0.0.1.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "2112995ba07bf3a6ac804ccdefba1ef0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10040,
        "upload_time": "2023-01-16T00:24:10",
        "upload_time_iso_8601": "2023-01-16T00:24:10.108741Z",
        "url": "https://files.pythonhosted.org/packages/66/47/c7ca65b47b127fc1867c8b0ff0236986e32ba33bcf5c7548c75267d28e72/papyrus_structure_pipeline-0.0.1.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.post3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63f836a3e7d17013a14918476b5b0a7415d6826daea4afdd7a69799dce0e3c26",
          "md5": "a095c30522b37c52eb7ee6f332e9e2ab",
          "sha256": "ddaef714a255e362b1e579df74f6cab0dd741f7de4b362037edde37e868e3b01"
        },
        "downloads": -1,
        "filename": "papyrus_structure_pipeline-0.0.1.post3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a095c30522b37c52eb7ee6f332e9e2ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9034,
        "upload_time": "2023-01-16T00:26:15",
        "upload_time_iso_8601": "2023-01-16T00:26:15.337011Z",
        "url": "https://files.pythonhosted.org/packages/63/f8/36a3e7d17013a14918476b5b0a7415d6826daea4afdd7a69799dce0e3c26/papyrus_structure_pipeline-0.0.1.post3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74fd2811fd249ebafcff71ce2b781404a64232d5e7c99670926bc8bd7c350197",
          "md5": "8bf7ec12be02b20352f915909eb50a90",
          "sha256": "d1e197bfd472adb912005431b6c43f1f3ef5cf33c527ce20dbf4919e475eec91"
        },
        "downloads": -1,
        "filename": "papyrus_structure_pipeline-0.0.1.post3.tar.gz",
        "has_sig": false,
        "md5_digest": "8bf7ec12be02b20352f915909eb50a90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10012,
        "upload_time": "2023-01-16T00:26:17",
        "upload_time_iso_8601": "2023-01-16T00:26:17.245837Z",
        "url": "https://files.pythonhosted.org/packages/74/fd/2811fd249ebafcff71ce2b781404a64232d5e7c99670926bc8bd7c350197/papyrus_structure_pipeline-0.0.1.post3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.post4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c6232cb4fcb2ed86723bcc26bd8ffa199c145619478dfbf9fc8d64099262e9e",
          "md5": "8501a47a665117ff1985baa421532773",
          "sha256": "d330a1ce765652af5b65e8ed9cb1b8065dfe33c2aa1cd7adf0e2bd3e0ab40404"
        },
        "downloads": -1,
        "filename": "papyrus_structure_pipeline-0.0.1.post4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8501a47a665117ff1985baa421532773",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9036,
        "upload_time": "2023-01-24T12:31:34",
        "upload_time_iso_8601": "2023-01-24T12:31:34.532218Z",
        "url": "https://files.pythonhosted.org/packages/9c/62/32cb4fcb2ed86723bcc26bd8ffa199c145619478dfbf9fc8d64099262e9e/papyrus_structure_pipeline-0.0.1.post4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8083662fec144f323aa9931f4a6b96e34222fd4eacbc45e4f75e06b8fb91fc19",
          "md5": "60b65c970c5dae8f31b61821a134e5d3",
          "sha256": "679cbe3e24230dc0b0454c9dfe8e6392256c3ce0f0b8045d941d054bab485eb3"
        },
        "downloads": -1,
        "filename": "papyrus_structure_pipeline-0.0.1.post4.tar.gz",
        "has_sig": false,
        "md5_digest": "60b65c970c5dae8f31b61821a134e5d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10028,
        "upload_time": "2023-01-24T12:31:37",
        "upload_time_iso_8601": "2023-01-24T12:31:37.239507Z",
        "url": "https://files.pythonhosted.org/packages/80/83/662fec144f323aa9931f4a6b96e34222fd4eacbc45e4f75e06b8fb91fc19/papyrus_structure_pipeline-0.0.1.post4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "401354fbae02f6c553f98ddb54b101968a335e76f8c19a00e486991de053dad5",
          "md5": "3c783fb092f231e5f4a1d36fb61e0650",
          "sha256": "776a066bb58a040f8a33df0109cd2074fd2f8a62172eabea47a80de261377dbf"
        },
        "downloads": -1,
        "filename": "papyrus_structure_pipeline-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c783fb092f231e5f4a1d36fb61e0650",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9150,
        "upload_time": "2023-03-03T10:26:12",
        "upload_time_iso_8601": "2023-03-03T10:26:12.199456Z",
        "url": "https://files.pythonhosted.org/packages/40/13/54fbae02f6c553f98ddb54b101968a335e76f8c19a00e486991de053dad5/papyrus_structure_pipeline-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "049801b1a4cb1df6668a2c73eef6309669d7aafa8bdfcc51c38dba7d95871213",
          "md5": "63d27a73f97cd7a9ffc0b059f68a06f1",
          "sha256": "e52cadbec14d5699a8fbcc792df7a982b0a733d973389f60912a35c1bf181f14"
        },
        "downloads": -1,
        "filename": "papyrus_structure_pipeline-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "63d27a73f97cd7a9ffc0b059f68a06f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10744,
        "upload_time": "2023-03-03T10:26:14",
        "upload_time_iso_8601": "2023-03-03T10:26:14.695920Z",
        "url": "https://files.pythonhosted.org/packages/04/98/01b1a4cb1df6668a2c73eef6309669d7aafa8bdfcc51c38dba7d95871213/papyrus_structure_pipeline-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c091800edcf4c5073a99637d9c4c0a0c14c9fce3b54466ad64bfdf465db6b9ca",
          "md5": "ddc58767d114b6e29ff8fc95bea848ae",
          "sha256": "30b38a90fe1d71a7b092c295f49dcb0ad824adf75ad067b729c7e16e794231a4"
        },
        "downloads": -1,
        "filename": "papyrus_structure_pipeline-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ddc58767d114b6e29ff8fc95bea848ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9182,
        "upload_time": "2023-03-06T08:20:52",
        "upload_time_iso_8601": "2023-03-06T08:20:52.217196Z",
        "url": "https://files.pythonhosted.org/packages/c0/91/800edcf4c5073a99637d9c4c0a0c14c9fce3b54466ad64bfdf465db6b9ca/papyrus_structure_pipeline-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96395d1d47c4562b185cad9087bcc5b8efbc582b680ffe41e4c70b4bd890ba92",
          "md5": "b4f44bc6eb918a2223612dea6a5d4934",
          "sha256": "521811e8d225e610abeb91908e3dab174e9a976f63149fb71a370fdf2ae4a9d0"
        },
        "downloads": -1,
        "filename": "papyrus_structure_pipeline-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b4f44bc6eb918a2223612dea6a5d4934",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10780,
        "upload_time": "2023-03-06T08:20:53",
        "upload_time_iso_8601": "2023-03-06T08:20:53.783384Z",
        "url": "https://files.pythonhosted.org/packages/96/39/5d1d47c4562b185cad9087bcc5b8efbc582b680ffe41e4c70b4bd890ba92/papyrus_structure_pipeline-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c091800edcf4c5073a99637d9c4c0a0c14c9fce3b54466ad64bfdf465db6b9ca",
        "md5": "ddc58767d114b6e29ff8fc95bea848ae",
        "sha256": "30b38a90fe1d71a7b092c295f49dcb0ad824adf75ad067b729c7e16e794231a4"
      },
      "downloads": -1,
      "filename": "papyrus_structure_pipeline-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ddc58767d114b6e29ff8fc95bea848ae",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9182,
      "upload_time": "2023-03-06T08:20:52",
      "upload_time_iso_8601": "2023-03-06T08:20:52.217196Z",
      "url": "https://files.pythonhosted.org/packages/c0/91/800edcf4c5073a99637d9c4c0a0c14c9fce3b54466ad64bfdf465db6b9ca/papyrus_structure_pipeline-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "96395d1d47c4562b185cad9087bcc5b8efbc582b680ffe41e4c70b4bd890ba92",
        "md5": "b4f44bc6eb918a2223612dea6a5d4934",
        "sha256": "521811e8d225e610abeb91908e3dab174e9a976f63149fb71a370fdf2ae4a9d0"
      },
      "downloads": -1,
      "filename": "papyrus_structure_pipeline-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b4f44bc6eb918a2223612dea6a5d4934",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10780,
      "upload_time": "2023-03-06T08:20:53",
      "upload_time_iso_8601": "2023-03-06T08:20:53.783384Z",
      "url": "https://files.pythonhosted.org/packages/96/39/5d1d47c4562b185cad9087bcc5b8efbc582b680ffe41e4c70b4bd890ba92/papyrus_structure_pipeline-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}