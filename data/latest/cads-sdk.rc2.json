{
  "info": {
    "author": "duyvnc",
    "author_email": "duyvnc@fpt.com.vn",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "-----------------\n\n# cads-sdk: Functions to help Data Scientist work more effectively with unstructured data and datalake\n[![PyPI Latest Release](https://img.shields.io/badge/pypi-0.4.20-blue)](https://pypi.org/project/cads-sdk/)\n[![Package Status](https://img.shields.io/badge/status-stable-green)](https://pypi.org/project/cads-sdk/)\n[![Downloads](https://static.pepy.tech/personalized-badge/spark-sdk?period=month&units=international_system&left_color=black&right_color=orange&left_text=PyPI%20downloads%20per%20month)](https://pepy.tech/project/cads-sdk)\n[![Powered by NumFOCUS](https://img.shields.io/badge/powered%20by-CADS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A)](https://blog.cads.live/)\n\n\n\n## What is it?\n\n**cads-sdk** Function to help Data Scientist work more effectively with unstructured data. Include different function work with image, audio\n\n## Main Features\nHere are just a few of the things that cads-sdk does well:\n  - Data pre-processing: Faster upto 25% compare with cv2.imread()\n      - Image pre-processing, convert from Image Folder/Zipfile to Parquet/delta, ready for training\n      - Audio pre-processing, convert from Folder Audio, ready for training\n  - Optimize storage: Does not reduce image quality but optimize memory 12%\n      - Decrease number of small file\n      - Take advantage of compression zstd parquet \n  - View image/audio but not get system down (browser ran out of memory)\n\n# Install\nBinary installers for the latest released version are available at the [Python\nPackage Index (PyPI)](https://pypi.org/project/cads-sdk).\n\n\n```sh\n# with PyPI\npip install cads-sdk\n```\n\n## Dependencies\n- [spark-sdk - PySpark, PyArrow add on function](https://pypi.org/project/spark-sdk/)\n- [opencv-python - Wrapper package for OpenCV python bindings](https://pypi.org/project/opencv-python/)\n- [petastorm - Petastorm is a library enabling the use of Parquet storage from Tensorflow, Pytorch, and other Python-based ML training frameworks](https://pypi.org/project/petastorm/)\n- [pandas - Powerful data structures for data analysis, time series, and statistics](https://pandas.pydata.org/)\n\n\n## Installation from sources\nTo install cads-sdk from source you need [Cython](http://git.bigdata.local/data-engineers/sdk/utilities/-/tree/master/cads_sdk) in addition to the normal\ndependencies above. Cython can be installed from PyPI:\n\n```sh\npip install cython\n```\n\nIn the `cads-sdk` directory (same one where you found this file after\ncloning the git repo), execute:\n\n```sh\npython setup.py install\n```\n\n\n## Documentation\nThe official documentation is hosted on PyData.org: https://pandas.pydata.org/pandas-docs/stable\n\n\n# Image\n### Convert a folder image to parquet\n```python\nfrom cads_sdk.nosql.converter import ConvertFromFolderImage\n\nconverter = ConvertFromFolderImage(\n              input_path=\"/path/to/folder/**/*.jpg\",\n              input_recursive = True,\n\n              #setting output\n              output_path = f\"file:/output/path/image_storage\",\n\n              # setting converter\n              image_type = 'jpg',\n              image_color = 3,\n              resize_mode=None, # |padding|resize\n              size = [(212,212),\n                     (597, 597)],\n             )\n\nconverter.execute()\n\n# convert directly from .zip file to parquet\nfrom cads_sdk.nosql.converter import ConvertFromZipImage\n\nconverter = ConvertFromZipImage(\n              input_path=\"/path/to/image_storage/ETHZ.zip\",\n              input_recursive = True, # will loop through folder to get all pattern\n              #setting output\n              output_path = f\"file:/output/path/img_ethz.parquet\",\n              table_name = 'img_ethz',\n              database = 'default',\n              file_format = 'parquet', # delta|parquet\n              compression = 'zstd', # zstd|snappy\n              # setting converter\n              image_type = 'png',\n              image_color = 3,\n              resize_mode=None, # |padding|resize\n              size = [(1080,1920)],\n              debug = False\n             )\n\nconverter.execute()\n```\n### Convert a Image parquet file back to Image Folder\n```python\nfrom cads_sdk.nosql.converter import ConvertToFolderImage\n\nconverter = ConvertToFolderImage(\n    input_path = '/user/username/image/img_user_device_jpg_212_212.parquet',\n    raw_input_path = \"/home/username/image_storage/device_images/**/*.jpg\",\n    output_path = './abc/'\n)\n\nconverter.execute()\n```\n### Function to read image\n```python\nfrom cads.nosql import display\nimport cads_sdk as ss\n\ndf = ss.sql(\"\"\"select * from parquet.`/user/duyvnc/image/img_images_jpg_212_212.parquet`\"\"\")\npdf = df.toPandasImage(limit=50)\npdf\n\npdf = ss.sql(\"\"\"\nselect *\nfrom parquet.`file:/home/duyvnc/image_storage/img_mot17_1080_1920.parquet`\nlimit 100\n\"\"\").toPandasImage(mode='BGR')\n```\n\n### Pytorch API\n```python\nfrom cads_sdk.nosql import codec\nfrom petastorm import make_reader, TransformSpec\nfrom petastorm.pytorch import DataLoader\nnum_epochs = 10\nwith DataLoader(reader=make_reader('{}/train'.format(dataset_url), reader_pool_type='dummy', num_epochs=num_epochs,\n                            transform_spec=transform), batch_size=32) as train_loader:\n    train(model, device, train_loader, 2000, optimizer, num_epochs)\n```\n\n# Audio\n### Suport pcm, mp3, wav format\n### Convert a folder audio to parquet\n```python\nfrom cads_sdk.nosql.converter import ConvertFromFolderImage\n\nconverter = ConvertFromFolderAudio(\n              input_path='/path/to/audio_wav/*.wav', #(1)\n              input_recursive = False,\n              output_path = f\"file:/output/path/audio_wav.parquet\",\n             )\n\nconverter.execute()\n```\n### Convert a parquet to folder audio\n```python\nconverter = ConvertToFolderAudio(\ninput_path = 'file:/path/to/audio_wav.parquet',\nraw_input_path = '/path/to/audio_wav/*.wav', #(1) # auto replace '/path/to/audio_wav/' to ''\noutput_path = './output/path',\nwrite_mode = \"recovery\"\n)\n\nconverter.execute()\n```\n\n### Listen audio in parquet \n```python\nfrom cads_sdk.nosql.display import Audio\nAudio('file:/path/to/audio_mp3.parquet')\n```\n# Video\n```python\nfrom cads_sdk.nosql.converter import ConvertFromVideo2Image\nconverter = ConvertFromVideo2Image(\n              input_path='/home/username/image_storage/vid/palawan1.mp4',\n              input_recursive = False,\n              output_path = f\"file:/home/username/image_storage/vid_image.parquet\",\n\n             )\n\nconverter.execute()\n```\n### For more information use class instance\n```python\nConvertFromFolderImage.__doc__\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://git.bigdata.local/data-engineers/sdk/utilities",
    "keywords": "",
    "license": "duyvnc",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cads-sdk",
    "package_url": "https://pypi.org/project/cads-sdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/cads-sdk/",
    "project_urls": {
      "Homepage": "http://git.bigdata.local/data-engineers/sdk/utilities"
    },
    "release_url": "https://pypi.org/project/cads-sdk/0.0.5/",
    "requires_dist": [
      "spark-sdk (>=0.4.19)",
      "opencv-python",
      "Pillow",
      "scipy",
      "pydub",
      "ipywidgets",
      "petastorm"
    ],
    "requires_python": ">=3.5",
    "summary": "Function to help Data Scientist work more effectively with DWH",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17520266,
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12736e9a29f1e183cbeeb76ab468ccc8630a9834fac210ced70946cca4ea695e",
          "md5": "e84d62c4478d2204b30e525a2604cac0",
          "sha256": "ced8aa43eb6d4d84c97f5ccfc96890b9a025032ceb6dcd542d99e4f84f1496e9"
        },
        "downloads": -1,
        "filename": "cads_sdk-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e84d62c4478d2204b30e525a2604cac0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 69131,
        "upload_time": "2023-03-31T02:39:26",
        "upload_time_iso_8601": "2023-03-31T02:39:26.740168Z",
        "url": "https://files.pythonhosted.org/packages/12/73/6e9a29f1e183cbeeb76ab468ccc8630a9834fac210ced70946cca4ea695e/cads_sdk-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f326f143e8d33662424e69d415c224e64d38cebe686c7a10fdfb1b06845c05e",
          "md5": "73b32f525060c59e8391f94a174b772c",
          "sha256": "7e79083d74382c3625ab49b010c5a847512237e24c692b87f392ff10fe2736cb"
        },
        "downloads": -1,
        "filename": "cads_sdk-0.0.5rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73b32f525060c59e8391f94a174b772c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 69317,
        "upload_time": "2023-03-30T07:31:48",
        "upload_time_iso_8601": "2023-03-30T07:31:48.254915Z",
        "url": "https://files.pythonhosted.org/packages/3f/32/6f143e8d33662424e69d415c224e64d38cebe686c7a10fdfb1b06845c05e/cads_sdk-0.0.5rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12736e9a29f1e183cbeeb76ab468ccc8630a9834fac210ced70946cca4ea695e",
        "md5": "e84d62c4478d2204b30e525a2604cac0",
        "sha256": "ced8aa43eb6d4d84c97f5ccfc96890b9a025032ceb6dcd542d99e4f84f1496e9"
      },
      "downloads": -1,
      "filename": "cads_sdk-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e84d62c4478d2204b30e525a2604cac0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 69131,
      "upload_time": "2023-03-31T02:39:26",
      "upload_time_iso_8601": "2023-03-31T02:39:26.740168Z",
      "url": "https://files.pythonhosted.org/packages/12/73/6e9a29f1e183cbeeb76ab468ccc8630a9834fac210ced70946cca4ea695e/cads_sdk-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}