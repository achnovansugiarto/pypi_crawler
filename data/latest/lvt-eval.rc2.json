{
  "info": {
    "author": "KeleiJiang,JiajiaLiao",
    "author_email": "18852088031@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n# lvt-eval\n\n#### Installation\n1. python>=3.8, (windows: need c++ env, https://airesources.oss-cn-hangzhou.aliyuncs.com/jkl/%E8%BE%B9%E7%BC%98%E5%8D%A1/VisualStudioSetup.exe)\n\n2. pip install pybind11  -i https://pypi.tuna.tsinghua.edu.cn/simple\n\n3. pip install -e faster_coco_eval/ -i https://pypi.tuna.tsinghua.edu.cn/simple\n\n4. pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple\n\n\n\n\n#### Lvt-eval guideline\n\n* studio aiport \n1. write your config files in \"config/{your config files}.json\". \n\n```\nFor example:\n1) multi-object（studio json） vs. multi-object（interface return label） detection:\n{\n    \"label\":[{\"objectLabel\":[\"烟\"], \"attrLabel\":[], \"id\":0, \"prediction\":\"smoke\"},{\"objectLabel\":[\"火\"], \"attrLabel\":[], \"id\":1, \"prediction\":\"fire\"}],\n    \"aiport\": \"http://192.1.2.238:8893/vql/v1/serving/process\",\n    \"rawdata\": \"data/yh.json\",\n    \"draw\": false,\n    \"download\": false,\n    \"raw_prediction_path\": \"prediction_dirs/raw_predictions_8893.json\",\n    \"save_gt_coco\": \"gt_dirs/coco_groundtruth.json\",\n    \"save_pred_path\": \"prediction_dirs/prediction_results.json\",\n    \"faster_coco_api\": true\n}\n\n2) multi-object（studio json） vs. single-object（interface return label） detection:\n{\n    \"label\":[{\"objectLabel\":[\"人\"], \"attrLabel\":[\"躺\", \"趴\"], \"id\":0, \"prediction\":\"睡岗\"}],\n    \"aiport\": \"http://192.1.2.238:8324/vql/v1/serving/process\",\n    \"rawdata\": \"data/sleep_test_json_0621.json\",\n    \"draw\": false,\n    \"download\": false,\n    \"raw_prediction_path\": \"prediction_dirs/raw_predictions_8324.json\",\n    \"save_gt_coco\": \"gt_dirs/coco_groundtruth.json\",\n    \"save_pred_path\": \"prediction_dirs/prediction_results.json\",\n    \"faster_coco_api\": true\n}\n\n3) single-object（studio json） vs. single-object（interface return label） detection:\n{\n    \"label\":[{\"objectLabel\":[\"person\"], \"attrLabel\":[], \"id\":0, \"prediction\":\"person\"}],\n    \"aiport\": \"http://192.1.2.238:8312/vql/v1/serving/process\",\n    \"rawdata\": \"data/xingren.json\",\n    \"draw\": false,\n    \"download\": false,\n    \"raw_prediction_path\": \"prediction_dirs/raw_predictions_8312.json\",\n    \"save_gt_coco\": \"gt_dirs/coco_groundtruth.json\",\n    \"save_pred_path\": \"prediction_dirs/prediction_results.json\",\n    \"faster_coco_api\": false\n}\n```\n```\n\"label\":\n    \"objectLabel\": enter the obj tags of studio json \n    \"attrLabel\": enter the attr tags of studio json (same the obj tags)\n    \"id\": default is 0. \n    \"prediction\": label of original outputs of interface \n\"aiport\": model interface\n\"rawdata\": studio json format data\n\"draw\": \"true\" means draw GT and Pred bbox\n\"download\": download images, if draw=True, need download=True\n\"raw_prediction_path\": save original outputs of interface, file name \"raw_predictions_{model interface id}.json\"\n\"save_gt_coco\": save studio json format to coco json format\n\"save_pred_path\": save original outputs of interface to coco json format\n\"faster_coco_api\": \"true\" means use faster coco evaluation\n```\n\n2. then run \n```python\npython od_evaluator.py --mode studio_json --config {your config files} \n```\n\n\n* coco json\n\n1. prepare your data (coco json format)\nprepare groundtruth and prediction json.\n\n2. then run \n```python\npython od_evaluator.py --mode coco_json --gt_json {your gt coco format json}  --pred_json {your pred coco format json} \nor\npython od_evaluator.py --mode faster_coco_json --gt_json {your gt coco format json} --pred_json {your pred coco format json} \n```\n\n\n#### How to start (example)\n\n1.  use mode = studio aiport:\npython od_evaluator.py --mode studio_json --config config/config_xingren.json\n2.  use mode = coco json:\npython od_evaluator.py --mode coco_json --gt_json example_data/only_no_glove.json --pred_json example_data/only_no_glove_pred.json\n3.  use mode = faster coco json:\npython od_evaluator.py --mode faster_coco_json --gt_json example_data/only_no_glove.json --pred_json example_data/only_no_glove_pred.json\n\n### update pypi\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lvt-eval",
    "package_url": "https://pypi.org/project/lvt-eval/",
    "platform": null,
    "project_url": "https://pypi.org/project/lvt-eval/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/lvt-eval/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "lvt evaluation of image object detrction and image classification.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15098894,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c31fa6c39fa14cd1207a3722f8e2a72f2f98320c3fa4aaaacc908b2348ffdf1",
          "md5": "2b1119b1e5a7777059ff7bee8f2bc7cb",
          "sha256": "27463439d5b5eb906b6a9e95e652c079f16b83963af27409c4b05b6f37452b20"
        },
        "downloads": -1,
        "filename": "lvt-eval-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2b1119b1e5a7777059ff7bee8f2bc7cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 57541,
        "upload_time": "2022-08-16T10:01:45",
        "upload_time_iso_8601": "2022-08-16T10:01:45.892737Z",
        "url": "https://files.pythonhosted.org/packages/1c/31/fa6c39fa14cd1207a3722f8e2a72f2f98320c3fa4aaaacc908b2348ffdf1/lvt-eval-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1d8d63ea2b66b691348d40f6db6bd6587747fa4cee67a1f26a62f9c3ab1139c",
          "md5": "00b51569fe5a44f95543f49b84535588",
          "sha256": "d645a3e0ab484fcd980526349715fffdd8f695ced22eac86cb10634ac2770a6b"
        },
        "downloads": -1,
        "filename": "lvt-eval-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "00b51569fe5a44f95543f49b84535588",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 45928,
        "upload_time": "2022-09-15T01:38:25",
        "upload_time_iso_8601": "2022-09-15T01:38:25.018490Z",
        "url": "https://files.pythonhosted.org/packages/e1/d8/d63ea2b66b691348d40f6db6bd6587747fa4cee67a1f26a62f9c3ab1139c/lvt-eval-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1d8d63ea2b66b691348d40f6db6bd6587747fa4cee67a1f26a62f9c3ab1139c",
        "md5": "00b51569fe5a44f95543f49b84535588",
        "sha256": "d645a3e0ab484fcd980526349715fffdd8f695ced22eac86cb10634ac2770a6b"
      },
      "downloads": -1,
      "filename": "lvt-eval-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "00b51569fe5a44f95543f49b84535588",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 45928,
      "upload_time": "2022-09-15T01:38:25",
      "upload_time_iso_8601": "2022-09-15T01:38:25.018490Z",
      "url": "https://files.pythonhosted.org/packages/e1/d8/d63ea2b66b691348d40f6db6bd6587747fa4cee67a1f26a62f9c3ab1139c/lvt-eval-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}