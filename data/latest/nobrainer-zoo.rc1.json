{
  "info": {
    "author": "Nobrainer Developers",
    "author_email": "rajaei.hoda@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Healthcare Industry",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Nobrainer-zoo\nNobrainer-zoo is a toolbox with a collection of deep learning neuroimaging models that eases the use of pretrained \nmodels for various applications. Nobrainer-zoo provides the required environment with all the dependencies for \ntraining/inference of models. You need `singularity/apptainer` (>= 3.7.x/1.0.x) or `docker` to run the Nobrainer-zoo.\n\n\n## Installation\nWe highly recommend to create a separate environment for the nobrainer-zoo. You can use conda or python to create the environment.\n\n```\nconda create -n nobrainer-zoo python=3\nconda activate nobrainer-zoo\n```\n\nor\n\n```\npython3 -m venv /path/to/new/virtual/environment/nobrainer-zoo\nsource /path/to/new/virtual/environment/nobrainer-zoo/bin/activate\n```\n\nThen install the nobrainer-zoo:\n\n```\n[Releases]    pip install nobrainer-zoo\n[Dev version] pip install https://github.com/neuronets/nobrainer-zoo/archive/refs/heads/main.zip\n```\n\nAfter installation, Nobrainer-zoo should be initialized. It also needs a cache folder to download some helper files based on your needs. By default, it creates a cache folder in your home directory (`~/.nobrainer`). If you do not want the cache folder in your `home` directory, you can setup a different cache location by setting the environmental variable `NOBRAINER_CACHE`. run below command to set it.\n\n```\nexport NOBRAINER_CACHE=<path_to_your_cache_directory>\n```\n\nsince this environmental variable will be lost when you close your terminal session you need to run it next time or a better solution is, to add it to your `~/.bashrc` file.\nsimply open the file with your text editor and add the above line at the end. Restart your terminal or re-run your `bashrc` file by `.~/bashrc` to make this change effective.\n\nTo initialize the `nobrainer-zoo` run:\n\n```\nnobrainer-zoo init\n```\n\n*<font size=\"1\">Note: You need to initialize the nobrainer-zoo only once.\n\nRun help to see the functions and each function's options.\n\n```\nnobrainer-zoo --help\nnobrainer-zoo ls --help\nnobrainer-zoo predict --help\nnobrainer-zoo fit --help\nnobrainer-zoo register --help\nnobrainer-zoo generate --help\n```\n\n## Available models\n\nTo see the list of available models in the nobrainer-zoo run `nobrainer-zoo ls`\n\nModels are added based on their organization, model name , and version. One model might have different versions. Some models (such as `kwyk` or `SyntSR`) have various types which means there was various training method or dataset that lead to different trained models. You can select the model type with `model_type` option for the train and inference.\n\n\nList of models which will be added in near future can be find [here](https://github.com/Hoda1394/zoo/blob/add/inference_scripts/models_to_add.md). You can suggest a model [here](https://github.com/neuronets/zoo/issues/new/choose).\n\n*<font size=\"1\">Note: models are distributed under their original license.</font>*\n\n## Inference Example\n\nInference with default options,\n\n```\nnobrainer-zoo predict -m neuronets/brainy/0.1.0 <path_to_input> <path_to_save_output>\n\nnobrainer-zoo register -m DDIG/SynthMorph/1.0.0 --model_type brains <path_to_moving> <path_to_fixed> <path_to_moved>\n```\n\npass the model specific options with `--options` argument to the model.\n\n```\nnobrainer-zoo predict -m neuronets/brainy/0.1.0 <path_to_input> <path_to_save_output> --options verbose block_shape=[128,128,128]\n\nnobrainer-zoo predict -m UCL/SynthSeg/0.1 <path_to_input> <path_to_save_output> --options post=<path_to_posteriors>\n```\n\n**Note**: Nobrainer-zoo will use the gpu by default. So, if you want to force it to use the cpu while the gpu is available you need to pass `--cpu` flag. If you are using docker without any gpu passing the `--cpu` flag is a must. Otherwise, you will get an error.\n\n**Note**: If you are using docker make sure to use the absolute path for input and putput files.\n\n## Train Example\n\nFor training with sample dataset you do not need to pass any dataset pattern.\n\n```\nnobrainer-zoo fit -m neuronets/brainy\n```\n\nTo train the network with your own data pass the dataset pattern in the form of tfrecords.\n\n```\nnobrainer-zoo fit -m neuronets/brainy \"<data_train_pattern>\" \"<data_evaluate_pattern>\"\n```\n\nOther parameters can be changed by providing a spec file or changing them with cli command.\n\n```\nnobrainer-zoo fit -m neuronets/brainy --spec_file <path_to_spec_file>\n```\n\n```\nnobrainer-zoo fit -m neuronets/brainy --train epoch=2\n```\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://neuronets.github.io",
    "keywords": "neuroimaging,model-zoo,medical-imaging,deeplearning",
    "license": "Apache License, 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nobrainer-zoo",
    "package_url": "https://pypi.org/project/nobrainer-zoo/",
    "platform": null,
    "project_url": "https://pypi.org/project/nobrainer-zoo/",
    "project_urls": {
      "Homepage": "https://neuronets.github.io",
      "Source Code": "https://github.com/neuronets/nobrainer-zoo"
    },
    "release_url": "https://pypi.org/project/nobrainer-zoo/0.2.0/",
    "requires_dist": [
      "click",
      "pyyaml",
      "nobrainer ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "A framework for inference and re-training of pretrained neuroimaging models",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15726442,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a80721604af961e247b6f829bd2bbe08ef92d89c63823a21f5d0ae00be04cae",
          "md5": "05c83ec57aa54ee6a813bc8a53cb82c7",
          "sha256": "675717ac8324258317b397ea850d93b45459a5b5ddfe284aa2c24e96271f9817"
        },
        "downloads": -1,
        "filename": "nobrainer_zoo-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05c83ec57aa54ee6a813bc8a53cb82c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14028,
        "upload_time": "2022-11-10T16:57:23",
        "upload_time_iso_8601": "2022-11-10T16:57:23.830768Z",
        "url": "https://files.pythonhosted.org/packages/7a/80/721604af961e247b6f829bd2bbe08ef92d89c63823a21f5d0ae00be04cae/nobrainer_zoo-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc1aff92e602a113122e8dfce58e4051af3740e044cdc8d66edab09a27d6a42c",
          "md5": "0db79378b380834807f449187d89f90c",
          "sha256": "61460bed0fed01fcc1b72bb177ffcc5e7056b6131d7e827b35619ee0497a834d"
        },
        "downloads": -1,
        "filename": "nobrainer-zoo-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0db79378b380834807f449187d89f90c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 30647,
        "upload_time": "2022-11-10T16:57:25",
        "upload_time_iso_8601": "2022-11-10T16:57:25.737364Z",
        "url": "https://files.pythonhosted.org/packages/cc/1a/ff92e602a113122e8dfce58e4051af3740e044cdc8d66edab09a27d6a42c/nobrainer-zoo-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a80721604af961e247b6f829bd2bbe08ef92d89c63823a21f5d0ae00be04cae",
        "md5": "05c83ec57aa54ee6a813bc8a53cb82c7",
        "sha256": "675717ac8324258317b397ea850d93b45459a5b5ddfe284aa2c24e96271f9817"
      },
      "downloads": -1,
      "filename": "nobrainer_zoo-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "05c83ec57aa54ee6a813bc8a53cb82c7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 14028,
      "upload_time": "2022-11-10T16:57:23",
      "upload_time_iso_8601": "2022-11-10T16:57:23.830768Z",
      "url": "https://files.pythonhosted.org/packages/7a/80/721604af961e247b6f829bd2bbe08ef92d89c63823a21f5d0ae00be04cae/nobrainer_zoo-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc1aff92e602a113122e8dfce58e4051af3740e044cdc8d66edab09a27d6a42c",
        "md5": "0db79378b380834807f449187d89f90c",
        "sha256": "61460bed0fed01fcc1b72bb177ffcc5e7056b6131d7e827b35619ee0497a834d"
      },
      "downloads": -1,
      "filename": "nobrainer-zoo-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0db79378b380834807f449187d89f90c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 30647,
      "upload_time": "2022-11-10T16:57:25",
      "upload_time_iso_8601": "2022-11-10T16:57:25.737364Z",
      "url": "https://files.pythonhosted.org/packages/cc/1a/ff92e602a113122e8dfce58e4051af3740e044cdc8d66edab09a27d6a42c/nobrainer-zoo-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}