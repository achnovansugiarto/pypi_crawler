{
  "info": {
    "author": "FarmBot, Inc.",
    "author_email": "contact@farmbot.io",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "[:fr: Traduction franÃ§aise disponible ici](README-fr.md)\n\n# Where Is the Latest Documentation?\n\nIf you are reading this document anywhere other than [The official Github page](https://github.com/FarmBot/farmbot-py), you may be reading old documentation. Please visit Github for the latest documentation.\n\n# Requirements\n\nWe tested this package with Python 3.8 and `paho-mqtt` 1.5.\n\nIt may work with earlier versions of Python, but Python 3.8 is the supported version. Please do not report bugs with earlier python versions.\n\n# Installation\n\nFarmBot publishes the latest version of this package to [PyPi](https://pypi.org/project/farmbot/). You can install the newest version with the following command:\n\n```\npip install farmbot\n```\n\n# Unit Testing\n\n```\npip install -e .[dev]\npytest --cov=farmbot --cov-report html\n```\n\n# Usage\n\n```python\nfrom farmbot import Farmbot, FarmbotToken\n\n# Before we begin, we must download an access token from the\n# API. To avoid copy/pasting passwords, it is best to create\n# an access token and then store that token securely:\nraw_token = FarmbotToken.download_token(\"test@example.com\",\n                                        \"password\",\n                                        \"https://my.farm.bot\")\n\n# This token is then passed to the Farmbot constructor:\nfb = Farmbot(raw_token)\n\n# If you are just doing testing, such as local development,\n# it is possible to skip token creation and login with email\n# and password. This is not recommended for production devices:\n# fb = Farmbot.login(email=\"em@i.l\",\n#                    password=\"pass\",\n#                    server=\"https://my.farm.bot\")\n\n# The next step is to call fb.connect(), but we are not ready\n# to do that yet. Before we can call connect(), we must\n# create a \"handler\" object. FarmBot control is event-based\n# and the handler object is responsible for integrating all\n# of those events into a custom application.\n#\n# At a minimum, the handler must respond to the following\n# methods:\n#     on_connect(self, bot: Farmbot, client: Mqtt) -> None\n#     on_change(self, bot: Farmbot, state: Dict[Any, Any]) -> None\n#     on_log(self, _bot: Farmbot, log: Dict[Any, Any]) -> None\n#     on_error(self, _bot: Farmbot, _response: ErrorResponse) -> None\n#     on_response(self, _bot: Farmbot, _response: OkResponse) -> None\n#\n# FarmBotPy will call the appropriate method whenever an event\n# is triggered. For example, the method `on_log` will be\n# called with the last log message every time a new log\n# message is created.\n\n\nclass MyHandler:\n    # The `on_connect` event is called whenever the device\n    # connects to the MQTT server. You can place initialization\n    # logic here.\n    #\n    # The callback is passed a FarmBot instance, plus an MQTT\n    # client object (see Paho MQTT docs to learn more).\n    def on_connect(self, bot, mqtt_client):\n        # Once the bot is connected, we can send RPC commands.\n        # Every RPC command returns a unique, random request\n        # ID. Later on, we can use this ID to track our commands\n        # as they succeed/fail (via `on_response` / `on_error`\n        # callbacks):\n\n        request_id1 = bot.move_absolute(x=10, y=20, z=30)\n        # => \"c580-6c-11-94-130002\"\n        print(\"MOVE_ABS REQUEST ID: \" + request_id1)\n\n        request_id2 = bot.send_message(\"Hello, world!\")\n        # => \"2000-31-49-11-c6085c\"\n        print(\"SEND_MESSAGE REQUEST ID: \" + request_id2)\n\n    def on_change(self, bot, state):\n        # The `on_change` event is most frequently triggered\n        # event. It is called any time the device's internal\n        # state changes. Example: Updating X/Y/Z position as\n        # the device moves across the garden.\n        # The bot maintains all this state in a single JSON\n        # object that is broadcast over MQTT constantly.\n        # It is a very large object, so we are printing it\n        # only as an example.\n        print(\"NEW BOT STATE TREE AVAILABLE:\")\n        print(state)\n        # Since the state tree is very large, we offer\n        # convenience helpers such as `bot.position()`,\n        # which returns an (x, y, z) tuple of the device's\n        # last known position:\n        print(\"Current position: (%.2f, %.2f, %.2f)\" % bot.position())\n        # A less convenient method would be to access the state\n        # tree directly:\n        pos = state[\"location_data\"][\"position\"]\n        xyz = (pos[\"x\"], pos[\"y\"], pos[\"z\"])\n        print(\"Same information as before: \" + str(xyz))\n\n    # The `on_log` event fires every time a new log is created.\n    # The callback receives a FarmBot instance, plus a JSON\n    # log object. The most useful piece of information is the\n    # `message` attribute, though other attributes do exist.\n    def on_log(self, bot, log):\n        print(\"New message from FarmBot: \" + log['message'])\n\n    # When a response succeeds, the `on_response` callback\n    # fires. This callback is passed a FarmBot object, as well\n    # as a `response` object. The most important part of the\n    # `response` is `response.id`. This `id` will match the\n    # original request ID, which is useful for cross-checking\n    # pending operations.\n    def on_response(self, bot, response):\n        print(\"ID of successful request: \" + response.id)\n\n    # If an RPC request fails (example: stalled motors, firmware\n    # timeout, etc..), the `on_error` callback is called.\n    # The callback receives a FarmBot object, plus an\n    # ErrorResponse object.\n    def on_error(self, bot, response):\n        # Remember the unique ID that was returned when we\n        # called `move_absolute()` earlier? We can cross-check\n        # the ID by calling `response.id`:\n        print(\"ID of failed request: \" + response.id)\n        # We can also retrieve a list of error message(s) by\n        # calling response.errors:\n        print(\"Reason(s) for failure: \" + str(response.errors))\n\n\n# Now that we have a handler class to use, let's create an\n# instance of that handler and `connect()` it to the FarmBot:\nhandler = MyHandler()\n\n# Once `connect` is called, execution of all other code will\n# be pause until an event occurs, such as logs, errors,\n# status updates, etc..\n# If you need to run other code while `connect()` is running,\n# consider using tools like system threads or processes.\nfb.connect(handler)\nprint(\"This line will not execute. `connect()` is a blocking call.\")\n```\n\n# Supported Remote Procedure Calls\n\nThe currently supported list of commands is below.\n\nPlease create an issue if you would to request a new command.\n\n * bot.position() -> (x, y, z)\n * bot.emergency_lock()\n * bot.emergency_unlock()\n * bot.factory_reset()\n * bot.find_home()\n * bot.find_length(axis=\"all\")\n * bot.flash_farmduino(package=\"farmduino\") (or \"arduino\", \"express_k10\", \"farmduino_k14\")\n * bot.go_to_home(axis=\"all\", speed=100)\n * bot.move_absolute(x, y, z, speed=100.0)\n * bot.move_relative(x, y, z, speed=100)\n * bot.power_off()\n * bot.read_pin(pin_number, pin_mode=\"digital\") (NOTE: Results appear in state tree)\n * bot.read_status()\n * bot.reboot()\n * bot.reboot_farmduino()\n * bot.send_message(msg, type=\"info\")\n * bot.set_servo_angle(pin_number, angle)\n * bot.sync()\n * bot.take_photo()\n * bot.toggle_pin(pin_number)\n * bot.update_farmbot_os()\n * bot.write_pin(pin_number, pin_value, pin_mode=\"digital\" )\n * bot.lua(lua_string)\n\n# Not Yet Supported\n\n * Ability to execute an existing sequence.\n * REST resource management.\n\n# Building and Publishing the Package (For FarmBot Employees)\n\nWe follow a standard Pip / PyPI workflow. See [this excelent tutorial](https://www.youtube.com/watch?v=GIF3LaRqgXo&t=1527s) for details.\n\n```\npython3 setup.py bdist_wheel sdist\ntwine upload dist/*\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/farmbot-labs/farmbot-py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "farmbot",
    "package_url": "https://pypi.org/project/farmbot/",
    "platform": "",
    "project_url": "https://pypi.org/project/farmbot/",
    "project_urls": {
      "Homepage": "https://github.com/farmbot-labs/farmbot-py"
    },
    "release_url": "https://pypi.org/project/farmbot/1.1.0/",
    "requires_dist": [
      "paho-mqtt (>=1.5)",
      "pytest (>=6.2) ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Official FarmBot RPC wrapper library for Python.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12769688,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cbc705e179f8febfc34ae0a52a0094bb94b0e9023d41cda6be9a030e7b389f7",
          "md5": "8c8a5a790c48863ad95cb4466000819c",
          "sha256": "701b53e539b07f2d92c5dd0ea18264db13a2faae6f7276e74d0698ceaa556af1"
        },
        "downloads": -1,
        "filename": "farmbot-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c8a5a790c48863ad95cb4466000819c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8511,
        "upload_time": "2021-02-17T17:03:48",
        "upload_time_iso_8601": "2021-02-17T17:03:48.802337Z",
        "url": "https://files.pythonhosted.org/packages/4c/bc/705e179f8febfc34ae0a52a0094bb94b0e9023d41cda6be9a030e7b389f7/farmbot-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60b7ded479bae2668320639ccb49f1db6c73c95d183e2ee5f5d7d4c75cc3632d",
          "md5": "52cf9419d4f38a2ff93ba2c14e2f1fbe",
          "sha256": "fa401ae59f18894e271e19abffafd8284724282153d29234ab8e76db8bb67cc3"
        },
        "downloads": -1,
        "filename": "farmbot-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "52cf9419d4f38a2ff93ba2c14e2f1fbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12797,
        "upload_time": "2021-02-17T17:03:50",
        "upload_time_iso_8601": "2021-02-17T17:03:50.310132Z",
        "url": "https://files.pythonhosted.org/packages/60/b7/ded479bae2668320639ccb49f1db6c73c95d183e2ee5f5d7d4c75cc3632d/farmbot-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "053b4453f0c6f4699c4c7bdf6c34a9a6fb1cc23199fa1a1e81f27fb81e62eaba",
          "md5": "e89934298ce6bf49f1af18e93e25b63e",
          "sha256": "44063ba9bac167c13cbb45f260d751e8277a4dc0c59836d688dd21183488f2a5"
        },
        "downloads": -1,
        "filename": "farmbot-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e89934298ce6bf49f1af18e93e25b63e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8610,
        "upload_time": "2021-03-12T21:22:22",
        "upload_time_iso_8601": "2021-03-12T21:22:22.710476Z",
        "url": "https://files.pythonhosted.org/packages/05/3b/4453f0c6f4699c4c7bdf6c34a9a6fb1cc23199fa1a1e81f27fb81e62eaba/farmbot-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0c6efb7d1bdf6db3b8c8dd30d03e1597a95f36c5965475222487073b60cde8d",
          "md5": "f947d52b87576f32a3c137342821a856",
          "sha256": "d1a5ed17cee7dd6f6597124bb12cd67e3b9f6a5bc2bdb08df14f846d3d316e83"
        },
        "downloads": -1,
        "filename": "farmbot-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f947d52b87576f32a3c137342821a856",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13787,
        "upload_time": "2021-03-12T21:22:24",
        "upload_time_iso_8601": "2021-03-12T21:22:24.755052Z",
        "url": "https://files.pythonhosted.org/packages/b0/c6/efb7d1bdf6db3b8c8dd30d03e1597a95f36c5965475222487073b60cde8d/farmbot-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54239f334d4427aa413cba8901a22ffe07e6404f5a209cf866d15b91d687638d",
          "md5": "7d3900abffc99fcc8dc3b4c3947db0f7",
          "sha256": "cc30e73f7bca92d5d4c853cb28b33540670b4592f09d956109e8144e367e2fd6"
        },
        "downloads": -1,
        "filename": "farmbot-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d3900abffc99fcc8dc3b4c3947db0f7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8748,
        "upload_time": "2021-04-16T15:51:02",
        "upload_time_iso_8601": "2021-04-16T15:51:02.213115Z",
        "url": "https://files.pythonhosted.org/packages/54/23/9f334d4427aa413cba8901a22ffe07e6404f5a209cf866d15b91d687638d/farmbot-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb9ff7970bf6e6c2ccdda31a4440511c30e21a90c8f0a0133b190ea20776e6df",
          "md5": "89cb087a7a4ce5a02d254020249eb81d",
          "sha256": "61d1f610c758d91644172379f82e87a2f4fd15dcb79af392d68b1d059f03ac91"
        },
        "downloads": -1,
        "filename": "farmbot-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "89cb087a7a4ce5a02d254020249eb81d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13955,
        "upload_time": "2021-04-16T15:51:07",
        "upload_time_iso_8601": "2021-04-16T15:51:07.077534Z",
        "url": "https://files.pythonhosted.org/packages/bb/9f/f7970bf6e6c2ccdda31a4440511c30e21a90c8f0a0133b190ea20776e6df/farmbot-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34d36d2a788e0f0f8642461f713c193c39227131c96ef850c9f7d346ccbf84dd",
          "md5": "c63f3174ac913debb55c99055c68dba1",
          "sha256": "f76fda3b49dd9fe80f9d50b93dbe72a4691cc4e48d40a21428d6442b4647e307"
        },
        "downloads": -1,
        "filename": "farmbot-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c63f3174ac913debb55c99055c68dba1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8738,
        "upload_time": "2021-04-16T15:52:48",
        "upload_time_iso_8601": "2021-04-16T15:52:48.700735Z",
        "url": "https://files.pythonhosted.org/packages/34/d3/6d2a788e0f0f8642461f713c193c39227131c96ef850c9f7d346ccbf84dd/farmbot-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "691d17c9ec037ba31d5dd98b3ecff164c1028dd15473de6e3062f04b1fe55525",
          "md5": "9f879c26c75511d0e396bd66483d71d8",
          "sha256": "24c818201bda6e6e1fdd9b9ca0c72b54ee0f4431e2552f127ddabb98d0838bc5"
        },
        "downloads": -1,
        "filename": "farmbot-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9f879c26c75511d0e396bd66483d71d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13939,
        "upload_time": "2021-04-16T15:52:58",
        "upload_time_iso_8601": "2021-04-16T15:52:58.946299Z",
        "url": "https://files.pythonhosted.org/packages/69/1d/17c9ec037ba31d5dd98b3ecff164c1028dd15473de6e3062f04b1fe55525/farmbot-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35aaed1604986a9e1493ce5a1dfb57f94aa700dacbb94ee6aeef4cb0239f7448",
          "md5": "2d60529dfba3cc4d85c0ac487db8382f",
          "sha256": "77afe9daa9f4d9994046ae33f8e22ff75f57e8283684e5ba44a90479b326e450"
        },
        "downloads": -1,
        "filename": "farmbot-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d60529dfba3cc4d85c0ac487db8382f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8796,
        "upload_time": "2021-10-12T15:34:50",
        "upload_time_iso_8601": "2021-10-12T15:34:50.772884Z",
        "url": "https://files.pythonhosted.org/packages/35/aa/ed1604986a9e1493ce5a1dfb57f94aa700dacbb94ee6aeef4cb0239f7448/farmbot-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0497253d5e9c18043f9e4b891801b22fb524c19c9eb9d32cafb09ddccf98a688",
          "md5": "05265b90e5916c54bd0eafada04596de",
          "sha256": "c2b3be770f96fccee34dee9d87d2a68210a9b7e52d092a4b938d8c5a43c820cd"
        },
        "downloads": -1,
        "filename": "farmbot-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "05265b90e5916c54bd0eafada04596de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14016,
        "upload_time": "2021-10-12T15:34:56",
        "upload_time_iso_8601": "2021-10-12T15:34:56.424886Z",
        "url": "https://files.pythonhosted.org/packages/04/97/253d5e9c18043f9e4b891801b22fb524c19c9eb9d32cafb09ddccf98a688/farmbot-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35aaed1604986a9e1493ce5a1dfb57f94aa700dacbb94ee6aeef4cb0239f7448",
        "md5": "2d60529dfba3cc4d85c0ac487db8382f",
        "sha256": "77afe9daa9f4d9994046ae33f8e22ff75f57e8283684e5ba44a90479b326e450"
      },
      "downloads": -1,
      "filename": "farmbot-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2d60529dfba3cc4d85c0ac487db8382f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8796,
      "upload_time": "2021-10-12T15:34:50",
      "upload_time_iso_8601": "2021-10-12T15:34:50.772884Z",
      "url": "https://files.pythonhosted.org/packages/35/aa/ed1604986a9e1493ce5a1dfb57f94aa700dacbb94ee6aeef4cb0239f7448/farmbot-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0497253d5e9c18043f9e4b891801b22fb524c19c9eb9d32cafb09ddccf98a688",
        "md5": "05265b90e5916c54bd0eafada04596de",
        "sha256": "c2b3be770f96fccee34dee9d87d2a68210a9b7e52d092a4b938d8c5a43c820cd"
      },
      "downloads": -1,
      "filename": "farmbot-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "05265b90e5916c54bd0eafada04596de",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14016,
      "upload_time": "2021-10-12T15:34:56",
      "upload_time_iso_8601": "2021-10-12T15:34:56.424886Z",
      "url": "https://files.pythonhosted.org/packages/04/97/253d5e9c18043f9e4b891801b22fb524c19c9eb9d32cafb09ddccf98a688/farmbot-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}