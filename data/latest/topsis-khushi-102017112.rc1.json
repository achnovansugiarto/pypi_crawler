{
  "info": {
    "author": "Khushi Goel",
    "author_email": "kgoel_be20@thapar.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# TOPSIS-Python\r\n\r\nSubmitted By: **Khushi Goel** <br>\r\nRoll Number: **102017112** <br>\r\nBatch: **3CS5**\r\n\r\n***\r\npypi: <https://pypi.org/project/Topsis-Khushi-102017112>\r\n<br>\r\ngit: <https://github.com/khushi-0001/Topsis-Khushi-102017112>\r\n***\r\n\r\n## Installation\r\n```pip install Topsis-Khushi-102017112```\r\n\r\n## What is TOPSIS\r\n\r\nTOPSIS or Technique for Order Preference by Similarity to Ideal Solution is a method of compensatory aggregation that compares a set of alternatives by identifying weights for each criterion, normalising scores for each criterion and calculating the geometric distance between each alternative and the ideal alternative, which is the best score in each criterion\r\n\r\n<br>\r\n\r\n## How to use this package:\r\n\r\nTopsis-Khushi-102017112  can be run as in the following example:\r\n\r\n\r\n\r\n### In Command Prompt\r\n```\r\n>> topsis input.csv \"1,1,1,1,1\" \"+,+,-,+,+\" output.csv\r\n```\r\n<br>\r\n\r\n## Process\r\n\r\nFirst we create an evaluation matrix which consists of m alternatives and n criterias, with the intersection of each alternative and criteria. Then we move to the preprocessing phase. We then normalize the matrix using norm. Weighted normalised decision matrix is then calculated. We then determine the best and worst alternatives. After that, we calculate the euclidean distance between the target alternative and the worst condition. Finally, the similarity to the worst condition checked and the alternatives are ranked according to the final performance scores, awarding lower rank to higher performance score.\r\n\r\n<br>\r\n\r\n## Sample dataset\r\n\r\nConsider this sample.csv file  \r\n\r\nFirst column of file is removed by model before processing so follow the following format.  \r\n\r\nAll other columns of file should not contain any categorical values.\r\n\r\n| Model  | P1 | P2 | P3 | P4 | P5 |\r\n| :----: |:--:|:--:|:--:|:--:|:--:|\r\n| M1 |0.85|0.72|4.6|41.5|11.92|\r\n| M2 |0.66|0.44|6.6|49.4|14.28|\r\n| M3 |0.9 |0.81|6.7|66.5|18.73|\r\n| M4 |0.8 |0.64|6.9|69.7|19.51|\r\n| M5 |0.84|0.71|4.7|36.5|10.69|\r\n| M6 |0.91|0.83|3.6|42.3|11.91|\r\n| M7 |0.65|0.42|6.9|38.1|11.52|\r\n| M8 |0.71|0.5 |3.5|60.9|16.4 |\r\n\r\nweights vector = [ 1,2,1,2,1 ]\r\n\r\nimpacts vector = [ +,-,+,+,- ]\r\n\r\n### input:\r\n\r\n```python\r\ntopsis input.csv \"1,2,1,2,1\" \"+,-,+,+,-\" output.csv\r\n```\r\n\r\n### output:\r\n\r\noutput.csv file will contain following data :\r\n\r\n| Model | P1 | P2 | P3 | P4 | P5 | Topsis score | Rank |\r\n| :---: |:--:|:--:|:--:|:--:|:--:| :----------: | :--: |\r\n| M1 |0.85|0.72|4.6|41.5|11.92| 0.3267076760116426 | 6 |\r\n| M2 |0.66|0.44|6.6|49.4|14.28| 0.6230956090525585 | 2 |\r\n| M3 |0.9 |0.81|6.7|66.5|18.73| 0.5006083702087599 | 5 |\r\n| M4 |0.8 |0.64|6.9|69.7|19.51| 0.6275096427934269 | 1 |\r\n| M5 |0.84|0.71|4.7|36.5|10.69| 0.3249142875298663 | 7 |\r\n| M6 |0.91|0.83|3.6|42.3|11.91| 0.2715902624653612 | 8 |\r\n| M7 |0.65|0.42|6.9|38.1|11.52| 0.5439263412940541 | 4 |\r\n| M8 |0.71|0.5 |3.5|60.9|16.4 | 0.6166791918077927 | 3 |\r\n\r\nThe decision matrix (`a`) should be constructed with each row representing a Model alternative, and each column representing a criterion like Accuracy, R<sup>2</sup>, Root Mean Squared Error, Correlation, and many more.\r\n\r\nWeights (`w`) is not already normalised will be normalised later in the code.\r\n\r\nInformation of benefit positive(+) or negative(-) impact criteria should be provided in `I`.\r\n\r\n<br>\r\n\r\nThe rankings are stored in a csv file, with the 1st rank offering us the best decision, and last rank offering the worst decision making, according to TOPSIS method.\r\n\r\n## Debugging and Exception Handling\r\n> The program has several assert statements which raise errors with helpful description in the following cases:\r\n> - Wrong dimensions of decision matrix (*not* 2D), weights (*not* 1D)\r\n> - Length of weights and impacts don't match \r\n> - Weights or impacts don't match number of attributes\r\n> - For command line, number of arguments is less than 3 required\r\n> - File extension must be .csv\r\n\r\n## License\r\nCopyright 2023 Khushi Goel\r\n<br>\r\nThis repository is licensed under the MIT license.\r\n<br>\r\nSee LICENSE for details.\r\n[MIT](https://choosealicense.com/licenses/mit/)\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Topsis-Khushi-102017112",
    "package_url": "https://pypi.org/project/Topsis-Khushi-102017112/",
    "platform": null,
    "project_url": "https://pypi.org/project/Topsis-Khushi-102017112/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/Topsis-Khushi-102017112/0.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A python package to implement TOPSIS on a given dataset",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16520438,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e94722d73289980a74adf45622136cda9c77f7835bf9e91d63f71b73c5c0594a",
          "md5": "e300cdf3a9dec4a50eb01ba628fa315f",
          "sha256": "0808638a5253c829df4d50fece77580370cabbafb4876a34c9dd22f2db8fe0df"
        },
        "downloads": -1,
        "filename": "Topsis_Khushi_102017112-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e300cdf3a9dec4a50eb01ba628fa315f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5100,
        "upload_time": "2023-01-22T12:09:13",
        "upload_time_iso_8601": "2023-01-22T12:09:13.762071Z",
        "url": "https://files.pythonhosted.org/packages/e9/47/22d73289980a74adf45622136cda9c77f7835bf9e91d63f71b73c5c0594a/Topsis_Khushi_102017112-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e94722d73289980a74adf45622136cda9c77f7835bf9e91d63f71b73c5c0594a",
        "md5": "e300cdf3a9dec4a50eb01ba628fa315f",
        "sha256": "0808638a5253c829df4d50fece77580370cabbafb4876a34c9dd22f2db8fe0df"
      },
      "downloads": -1,
      "filename": "Topsis_Khushi_102017112-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e300cdf3a9dec4a50eb01ba628fa315f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5100,
      "upload_time": "2023-01-22T12:09:13",
      "upload_time_iso_8601": "2023-01-22T12:09:13.762071Z",
      "url": "https://files.pythonhosted.org/packages/e9/47/22d73289980a74adf45622136cda9c77f7835bf9e91d63f71b73c5c0594a/Topsis_Khushi_102017112-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}