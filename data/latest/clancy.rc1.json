{
  "info": {
    "author": "Paul Liu",
    "author_email": "paul@ferociouspings.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2 :: Only",
      "Programming Language :: Python :: 2.7",
      "Topic :: System :: Systems Administration"
    ],
    "description": "Clancy\n        ======\n        \n        Clancy is a command line client for `Red October <https://github.com/cloudflare/redoctober>`_.\n        \n        Requirements\n        ------------\n        \n        * Python 2.7.6+\n        \n        Installation and Configuration\n        ------------------------------\n        \n        You can install clancy with pip:\n        \n        .. code:: bash\n        \n          pip install clancy\n        \n        Clancy will look for a YAML file called *config.yaml* in the following locations, in order:\n        \n        * *./config.yaml* (the current directory)\n        * *~/.clancy/config.yaml*\n        \n        You can set default values for the cacert, server and user arguments. This can save a lot of typing time! Here is an example config file:\n        \n        .. code:: yaml\n        \n          ---\n          user: MyRedOctoberUsername\n          cacert: /etc/ssl/certs/my_cacert.pem\n          server: redoctober.mydomain.local\n        \n        Command line arguments override the config file.\n        \n        Using Clancy\n        ------------\n        \n        Here are some sample invocations. For brevity, these examples assume a config file with *server* and *cacert*. Run *clancy --help* for more details.\n        \n        Initialize New Vault\n        ~~~~~~~~~~~~~~~~~~~~\n        \n        .. code:: bash\n        \n          ~$ clancy create\n        \n        Delegate\n        ~~~~~~~~\n        \n        .. code:: bash\n        \n          ~$ clancy delegate --time 1h30m --uses 1\n          \n          # As a different user\n          ~$ clancy delegate --user hsolo --time 1h30m --uses 1\n        \n        Encrypt Data\n        ~~~~~~~~~~~~\n        \n        .. code:: bash\n        \n          ~$ clancy base64-encode\n          String to encode: Why is a raven like a writing desk?\n          \n          Base64\n          ------\n          V2h5IGlzIGEgcmF2ZW4gbGlrZSBhIHdyaXRpbmcgZGVzaz8=\n          \n          ~$ clancy encrypt --owners pliu,hsolo,wantilles --min 2 --str V2h5IGlzIGEgcmF2ZW4gbGlrZSBhIHdyaXRpbmcgZGVzaz8=\n          \n          ... snip ...\n          \n          Server Response\n          ---------------\n          {\n            \"Response\": \"eyJWZXJzaW9uIjoxLCJWYXVsdElkIjoxMzA0MTU0NDExLCJLZXlTZXQiOlt7Ik5hbWUiOlsiYWRtaW4xIiwiYWRtaW4yIl0sIktleSI6IjhCbjI3RElLM2RxQk4vQ2FZVmZ1dHc9PSJ9LHsiTmFtZSI6WyJhZG1pbjEiLCJwbGl1Il0sIktleSI6IkpiaUpTS2Vibnhma1ZpbTRGN1dISVE9PSJ9LHsiTmFtZSI6WyJhZG1pbjIiLCJhZG1pbjEiXSwiS2V5IjoiQ2NjL0FkRkhNTjl5OHV4TmJmMEx2dz09In0seyJOYW1lIjpbImFkbWluMiIsInBsaXUiXSwiS2V5IjoiYm9nRUxkZDFpNkhQRzRDTVYxSHF2Zz09In0seyJOYW1lIjpbInBsaXUiLCJhZG1pbjEiXSwiS2V5IjoibmR4UFdUTk12azdoTW5FRElNSFFDUT09In0seyJOYW1lIjpbInBsaXUiLCJhZG1pbjIiXSwiS2V5IjoiZEdzOVkrcThXOU56eG1XK2RUaTJqdz09In1dLCJLZXlTZXRSU0EiOnsiYWRtaW4xIjp7IktleSI6IlFRUVB0a0RCc1BNWEoxTy96ZDFZT3VQRFpkRDNqejdEWmRlT3BORzdYWDdyTXJFMC8wMFJkcWhSNjFxaExub05MMktvdEdmMEV1a2FnZlJjcXUxVS9MYW0zY2prOTJGU1RiL3JwZGloam5DZG0yVFJRQmE4bXVXWWdzMFZYTzZrWVVPVmJQV3dZNExSTEdPaFpvRXpuc0JqRit1WVY4aXhjZFRMbzBXU25HWHFrdHNXeFNrPSJ9LCJhZG1pbjIiOnsiS2V5IjoiUVFUS3QrYk5wSVkzZ2k1Tm4zb05tS0tmZlQ0MGtOV1NSdlRyQW1KODkvanZFL3gxMGh1Z2tzUDI3dlJBY0txN3RHaEo0SWNMcmxNdmh2REJWZGJnWHlTRHFUOWlqU2E2Z1JnL1dFYWNQd2VidjE0QmFCSnBtekVDQlNxWStHb2tmdkMvbmJ3V09xaHFTWFBjK0tPaVdLb054Y0E3YVVGQWN2NlNleGRpU05ucjdaV3Fxcms9In0sInBsaXUiOnsiS2V5IjoiUVFTb2hpWFhGa0J1S2cvaVFYU2RBWXEzMHVaWm5UUXljQ3NUTmY1TWpNOXNKczEwQmxPTGNYb1NoYTk3ZzR1SGdjcnl1TVRkMmZaYWN2dGFCZk9TLzdKM0g3cGxNOSs4dnlySVFwdnpubVYxQjBnUkRja3M2SnkwVWxKaldLdjRxTGVUcklsRHVuTmlpbHJaVTk4Nk1lQ0xwOTRiZ1BvRTRGNFVDelBNamVyZ0dobTdNOG89In19LCJJViI6IlVieElJTVEzWVBVRUdEUHFhNS9qR1E9PSIsIkRhdGEiOiJuZzRBYm9MdWIrQ2lJeWVvRVNUVmNSaGFCMWh4U0ZZdWRqVEkzSnpRSWh0dGMvenB5ZE1aV2p6cnNBcWU5M2JEIiwiU2lnbmF0dXJlIjoiR29vUmZ3TGljcW1vZEZxZnBaWmpQME1BdGJFPSJ9\", \n            \"Status\": \"ok\"\n          }\n        \n        Decrypt Data\n        ~~~~~~~~~~~~\n        \n        .. code:: bash\n        \n          ~$ echo -n \"eyJWZXJzaW9uIjoxLCJWYXVsdElkIjoxMzA0MTU0NDExLCJLZXlTZXQiOlt7Ik5hbWUiOlsiYWRtaW4xIiwiYWRtaW4yIl0sIktleSI6IjhCbjI3RElLM2RxQk4vQ2FZVmZ1dHc9PSJ9LHsiTmFtZSI6WyJhZG1pbjEiLCJwbGl1Il0sIktleSI6IkpiaUpTS2Vibnhma1ZpbTRGN1dISVE9PSJ9LHsiTmFtZSI6WyJhZG1pbjIiLCJhZG1pbjEiXSwiS2V5IjoiQ2NjL0FkRkhNTjl5OHV4TmJmMEx2dz09In0seyJOYW1lIjpbImFkbWluMiIsInBsaXUiXSwiS2V5IjoiYm9nRUxkZDFpNkhQRzRDTVYxSHF2Zz09In0seyJOYW1lIjpbInBsaXUiLCJhZG1pbjEiXSwiS2V5IjoibmR4UFdUTk12azdoTW5FRElNSFFDUT09In0seyJOYW1lIjpbInBsaXUiLCJhZG1pbjIiXSwiS2V5IjoiZEdzOVkrcThXOU56eG1XK2RUaTJqdz09In1dLCJLZXlTZXRSU0EiOnsiYWRtaW4xIjp7IktleSI6IlFRUVB0a0RCc1BNWEoxTy96ZDFZT3VQRFpkRDNqejdEWmRlT3BORzdYWDdyTXJFMC8wMFJkcWhSNjFxaExub05MMktvdEdmMEV1a2FnZlJjcXUxVS9MYW0zY2prOTJGU1RiL3JwZGloam5DZG0yVFJRQmE4bXVXWWdzMFZYTzZrWVVPVmJQV3dZNExSTEdPaFpvRXpuc0JqRit1WVY4aXhjZFRMbzBXU25HWHFrdHNXeFNrPSJ9LCJhZG1pbjIiOnsiS2V5IjoiUVFUS3QrYk5wSVkzZ2k1Tm4zb05tS0tmZlQ0MGtOV1NSdlRyQW1KODkvanZFL3gxMGh1Z2tzUDI3dlJBY0txN3RHaEo0SWNMcmxNdmh2REJWZGJnWHlTRHFUOWlqU2E2Z1JnL1dFYWNQd2VidjE0QmFCSnBtekVDQlNxWStHb2tmdkMvbmJ3V09xaHFTWFBjK0tPaVdLb054Y0E3YVVGQWN2NlNleGRpU05ucjdaV3Fxcms9In0sInBsaXUiOnsiS2V5IjoiUVFTb2hpWFhGa0J1S2cvaVFYU2RBWXEzMHVaWm5UUXljQ3NUTmY1TWpNOXNKczEwQmxPTGNYb1NoYTk3ZzR1SGdjcnl1TVRkMmZaYWN2dGFCZk9TLzdKM0g3cGxNOSs4dnlySVFwdnpubVYxQjBnUkRja3M2SnkwVWxKaldLdjRxTGVUcklsRHVuTmlpbHJaVTk4Nk1lQ0xwOTRiZ1BvRTRGNFVDelBNamVyZ0dobTdNOG89In19LCJJViI6IlVieElJTVEzWVBVRUdEUHFhNS9qR1E9PSIsIkRhdGEiOiJuZzRBYm9MdWIrQ2lJeWVvRVNUVmNSaGFCMWh4U0ZZdWRqVEkzSnpRSWh0dGMvenB5ZE1aV2p6cnNBcWU5M2JEIiwiU2lnbmF0dXJlIjoiR29vUmZ3TGljcW1vZEZxZnBaWmpQME1BdGJFPSJ9\" > crypted.txt\n          \n          # Encrypt and decrypt can read from files too.\n          ~$ clancy decrypt --file crypted.txt \n          \n          ... snip ...\n          \n          {\n            \"Response\": \"V2h5IGlzIGEgcmF2ZW4gbGlrZSBhIHdyaXRpbmcgZGVzaz8=\", \n            \"Status\": \"ok\"\n          }\n        \n        View Summary, Modify User, Change Password\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n        \n        .. code:: bash\n        \n          ~$ clancy summary\n          ~$ clancy modify --action revoke --target dvader\n          ~$ clancy change-password\n        \n        \n        Release History\n        ===============\n        \n        0.0.2\n        -----\n        \n        - Installable by pip\n        - Complete rewrite\n        - Change to yaml config files\n        - Use schema for input validation\n        \n        0.0.1\n        -----\n        \n        - It works!",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pwyliu/clancy",
    "keywords": "Red October encryption security two man rule",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "clancy",
    "package_url": "https://pypi.org/project/clancy/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/clancy/",
    "project_urls": {
      "Homepage": "https://github.com/pwyliu/clancy"
    },
    "release_url": "https://pypi.org/project/clancy/0.0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A command line client for Red October.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1168816,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6babfdb26fa0c510a8a5b461865e152377ad86f75a0132972fd263c01655a1f9",
          "md5": "2251fca1c301281c8075b83ed5ab7164",
          "sha256": "ec651c40f10d225216075854238dc489ff7d1e016c40051163687cb56de1baa4"
        },
        "downloads": -1,
        "filename": "clancy-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2251fca1c301281c8075b83ed5ab7164",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8384,
        "upload_time": "2014-07-25T05:48:36",
        "upload_time_iso_8601": "2014-07-25T05:48:36.232379Z",
        "url": "https://files.pythonhosted.org/packages/6b/ab/fdb26fa0c510a8a5b461865e152377ad86f75a0132972fd263c01655a1f9/clancy-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6babfdb26fa0c510a8a5b461865e152377ad86f75a0132972fd263c01655a1f9",
        "md5": "2251fca1c301281c8075b83ed5ab7164",
        "sha256": "ec651c40f10d225216075854238dc489ff7d1e016c40051163687cb56de1baa4"
      },
      "downloads": -1,
      "filename": "clancy-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2251fca1c301281c8075b83ed5ab7164",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8384,
      "upload_time": "2014-07-25T05:48:36",
      "upload_time_iso_8601": "2014-07-25T05:48:36.232379Z",
      "url": "https://files.pythonhosted.org/packages/6b/ab/fdb26fa0c510a8a5b461865e152377ad86f75a0132972fd263c01655a1f9/clancy-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}