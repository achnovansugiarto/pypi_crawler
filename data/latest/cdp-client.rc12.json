{
  "info": {
    "author": "CDP Technologies AS",
    "author_email": "info@cdptech.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development"
    ],
    "description": "CDP-Client\n==========\n\nA simple python interface for the CDP Studio development platform that allows Python scripts to interact with CDP Applications - retrieve CDP Application structures and read-write object values. For more information about CDP Studio see https://cdpstudio.com/\n\nThe API makes heavy use of promise library for asynchronous operations. For more information see https://pypi.python.org/pypi/promise\n\nInstallation\n------------\n\n::\n\n    $ pip install cdp-client\n\nUsage\n-----\n\nThe example below shows how you subscribe to CDP signal value changes.\n\n.. code:: python\n\n    from cdp_client import cdp\n\n    def on_value_changed(value, timestamp):\n        print(value)\n\t\n    def subscribe_to_value_changes(node):\n        node.subscribe_to_value_changes(on_value_changed)\n\t\n    client = cdp.Client(host='127.0.0.1')\n    client.find_node('AppName.ComponentName.SignalName').then(subscribe_to_value_changes)\n    client.run_event_loop()\n\nAPI\n---\n\nBefore all examples, you need:\n\n.. code:: python\n\n    from cdp_client import cdp\n\nGlobal API\n~~~~~~~~~~\n\nClient(host, port, auto_reconnect, notification_listener, encryption_parameters)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Arguments\n\n    host - String for hosts ip address\n\n    port - Optional port number to connect to. If not specified default port 7689 is used.\n\n    auto_reconnect - Optional argument to enable/disable automatic reconnect when connection is lost. Defaults to True if not specified.\n\n    notification_listener - NotificationListener object whose methods are called on different connection events (e.g. when server requires credentials)\n\n    encryption_parameters - Optional argument to set encryption and its parameters, TLS certificates verification etc. Parameter is compatible with python websocket client 'sslopt' parameter. For more information see https://pypi.org/project/websocket_client\n\n- Returns\n\n    The connected client object.\n\n- Usage example\n\n    .. code:: python\n\n        client = cdp.Client(host='127.0.0.1')\n\n- Usage example with password authentication\n\n    .. code:: python\n\n        class MyListener(cdp.NotificationListener):\n            def credentials_requested(self, request):\n                if request.user_auth_result().code() == cdp.AuthResultCode.CREDENTIALS_REQUIRED:\n                    # Do something to gather username and password variables (either sync or async way) and then call:\n                    request.accept({'Username': 'test', 'Password': '12345678'});\n\n        client = cdp.Client(host='127.0.0.1', notification_listener=MyListener())\n\n- Usage example with password authentication and encryption in use, without server certificate verification\n\n    .. code:: python\n\n        import ssl\n\n        class MyListener(cdp.NotificationListener):\n            def credentials_requested(self, request):\n                if request.user_auth_result().code() == cdp.AuthResultCode.CREDENTIALS_REQUIRED:\n                    # Do something to gather username and password variables (either sync or async way) and then call:\n                    request.accept({'Username': 'test', 'Password': '12345678'});\n\n        client = cdp.Client(host='127.0.0.1', notification_listener=MyListener(),\n                            encryption_parameters={'use_encryption': True, 'cert_reqs': ssl.CERT_NONE})\n\n\n- Usage example with password authentication and encryption in use, with server certificate verification\n\n    .. code:: python\n\n        import ssl\n\n        class MyListener(cdp.NotificationListener):\n            def credentials_requested(self, request):\n                if request.user_auth_result().code() == cdp.AuthResultCode.CREDENTIALS_REQUIRED:\n                    # Do something to gather username and password variables (either sync or async way) and then call:\n                    request.accept({'Username': 'test', 'Password': '12345678'});\n\n        client = cdp.Client(host='127.0.0.1', notification_listener=MyListener(),\n                            encryption_parameters={'use_encryption': True,\n                                                   'cert_reqs': ssl.CERT_REQUIRED,\n                                                   'ca_certs': 'StudioAPI.crt',\n                                                   'check_hostname': False},\n\nInstance Methods / Client\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nclient.root_node()\n^^^^^^^^^^^^^^^^^^\n\nGets the application Node object of the connected application.\n\n- Returns\n\n    Promise containing root Node object when fulfilled.\n\n- Usage\n\n    .. code:: python\n\n        client.root_node().then(on_success).catch(on_error)\n\nclient.find_node(path)\n^^^^^^^^^^^^^^^^^^^^^^\n\nSearches for the node specified by full dot separated path. **The requested node must reside in the application client was connected to. Root node is not considered part of the path.**\n\n- Arguments\n\n    path - Dot separated string to target node\n\n- Returns\n\n    Promise containing requested Node object when fulfilled. Otherwise NotFoundError when rejected.\n\n- Usage\n\n    .. code:: python\n\n        client.find_node('AppName.ComponentName.SignalName').then(on_success).catch(on_error)\n\nclient.run_event_loop()\n^^^^^^^^^^^^^^^^^^^^^^^\n\nRuns the event loop that serves network communication layer for incoming/outgoing data. **This is a blocking call that must be run for any communication to happen.** The method can be cancelled by calling disconnect.\n\nclient.disconnect()\n^^^^^^^^^^^^^^^^^^^\n\nStops the event loop and closes the connection to connected application. This method also releases the blocking run_event_loop call.\n\nInstance Methods / Node\n~~~~~~~~~~~~~~~~~~~~~~~\n\nnode.name()\n^^^^^^^^^^^\n\n- Returns\n\n    The name of the Node object. Names in a parent node are all unique.\n\nnode.path()\n^^^^^^^^^^^\n\n- Returns\n\n    A dot separated path of the Node object starting with application name.\n\nnode.parent()\n^^^^^^^^^^^^^\n\n- Returns\n\n    The parent Node object.\n\nnode.type()\n^^^^^^^^^^^\n\n- Returns\n\n    The type of the Node object returned as one of the cdp.NodeType values.\n\nnode.last_value()\n^^^^^^^^^^^^^^^^^\n\n- Returns\n\n    The last known value received by the Node object.\n\nnode.set_value(value, timestamp)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSets a new value for the Node object. Timestamp will be ignored in current implementation.\n\n- Arguments\n\n    value - New value\n\n    timestamp - UTC time in nanoseconds since Epoch\n\nnode.is_read_only()\n^^^^^^^^^^^^^^^^^^^\n\n- Returns\n\n    False if nodes value cannot be set, otherwise True.\n\nnode.is_leaf()\n^^^^^^^^^^^^^^\n\n- Returns\n\n    True if node doesn't have any children, otherwise False.\n\nnode.child(name)\n^^^^^^^^^^^^^^^^\n\n- Arguments\n\n    name - Child nodes name to search for\n\n- Returns\n\n    Promise containing requested Node object when fulfilled.\n\n- Usage\n\n    .. code:: python\n\n        node.child('NodeName').then(on_success).catch(on_error)\n\nnode.children()\n^^^^^^^^^^^^^^^\n\n- Returns\n\n    Promise containing all children of this Node object when fulfilled.\n\n- Usage\n\n    .. code:: python\n\n        node.children().then(on_success).catch(on_error)\n\nnode.for_each_child(callback)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nLoops through all children and calls callback function for each of them\n\n- Arguments\n\n    callback - Function(node)\n\n- Returns\n\n    Promise containing all children of this Node object when fulfilled.\n\n- Usage\n\n    .. code:: python\n\n        def on_callback(child):\n            do something\n\n        node.for_each_child(on_callback)\n\nnode.subscribe_to_structure_changes(callback)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nStarts listening structure changes and passes the changes to provided callback funtion\n\n- Arguments\n\n    callback - Function(added_nodes, removed_nodes) where added_nodes and removed_nodes is a list\n\n- Usage\n\n    .. code:: python\n\n        def on_change(added_nodes, removed_nodes):\n            do something\n\n        node.subscribe_to_structure_changes(on_change)\n\nnode.subscribe_to_value_changes(callback, fs=5, sample_rate=0)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nStarts listening value changes and passes the changes to provided callback function\n\n- Arguments\n\n    callback - Function(value, timestamp)\n\n    fs - Maximum frequency that value updates are expected (controls how many changes are sent in a single packet). Defaults to 5 hz.\n    \n    sample_rate - Maximum amount of value updates sent per second (controls the amount of data transferred). Zero means all samples must be provided. Defaults to 0.\n\n- Usage\n\n    .. code:: python\n\n        def on_change(value, timestamp):\n            do something\n\n        node.subscribe_to_value_changes(on_change)\n\n\nnode.unsubscribe_from_structure_changes(callback)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nStops listening previously subscribed structure changes\n\n- Arguments\n\n    callback - Function(added_nodes, removed_nodes) where added_nodes and removed_nodes is a list\n\n- Usage\n\n    .. code:: python\n\n        def on_change(added_nodes, removed_nodes):\n            do something\n\n        node.unsubscribe_from_structure_changes(on_change)\n\nnode.unsubscribe_from_value_changes(callback)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nStops listening previously subscribed value changes\n\n- Arguments\n\n    callback - Function(value, timestamp)\n\n- Usage\n\n    .. code:: python\n\n        def on_change(value, timestamp):\n            do something\n\t\n        node.unsubscribe_from_value_changes(on_change)\n\nNotification Listener\n~~~~~~~~~~~~~~~~~~~~~\n\nTo handle different connection events (like prompt user to accept a system use notification message or request user to enter credentials for authentication or idle lockout re-authentication) a notification_listener parameter must be provided to the Client.\nThe notification_listener parameter must be a object of type class cdp.NotificationListener.\n\nclass NotificationListener\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    .. code:: python\n\n        class NotificationListener:\n            def application_acceptance_requested(self, request=AuthRequest()):\n                request.accept()\n\n            def credentials_requested(self, request=AuthRequest()):\n                raise NotImplementedError(\"NotificationListener credentials_requested() not implemented!\")\n\nNotificationListener.application_acceptance_requested(self, request=AuthRequest())\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nCalled by Client when new application TLS or plain TCP connection is established.\nCan be used to prompt the user a System Use Notification (a message that can be configured in CDP Studio Security settings).\n\n- Arguments\n\n    request - a object that has method accept() that should be called to accept the connection and a reject() to reject the connection.\n\n- Usage\n\n    .. code:: python\n\n        class MyListener(cdp.NotificationListener):\n            def application_acceptance_requested(self, request):\n                if request.system_use_notification():\n                    # Pop up a System Use Notification message and ask for confirmation to continue,\n                    # then based on the user answer call either request.accept() or request.reject()\n                else:\n                    request.accept()\n\n        client = cdp.Client(host='127.0.0.1', port=7689, notification_listener=MyListener())\n\nNotificationListener.credentials_requested(self, request=AuthRequest())\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nCalled by Client when server is requesting credentials (authentication or idle lockout re-authentication).\n\n- Arguments\n\n    request - a object that has method accept(data=dict()) that should be called (with credentials) for authentication try, and also a method reject() to reject the connection.\n\n- Usage\n\n    .. code:: python\n\n        class MyListener(cdp.NotificationListener):\n            def credentials_requested(self, request):\n                if request.user_auth_result().code() == cdp.AuthResultCode.CREDENTIALS_REQUIRED:\n                    # Do something to gather username and password variables (either sync or async way) and then call:\n                    request.accept({'Username': 'test', 'Password': '12345678'});\n                if request.user_auth_result().code() == cdp.AuthResultCode.REAUTHENTICATION_REQUIRED:\n                    # Pop user a message that idle lockout was happened and server requires new authentication to continue:\n                    request.accept({'Username': 'test', 'Password': '12345678'});\n\n        client = cdp.Client(host='127.0.0.1', port=7689, notification_listener=MyListener())\n\nTests\n-----\n\nTo run the test suite execute the following command in package root folder:\n\n.. code:: sh\n\n    $ python setup.py test\n\nLicense\n-------\n\n`MIT\nLicense <https://github.com/CDPTechnologies/PythonCDPClient/blob/master/LICENSE.txt>`__",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CDPTechnologies/PythonCDPClient",
    "keywords": "cdp cdpstudio studio client cdp-client cdp_client",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cdp-client",
    "package_url": "https://pypi.org/project/cdp-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/cdp-client/",
    "project_urls": {
      "Homepage": "https://github.com/CDPTechnologies/PythonCDPClient"
    },
    "release_url": "https://pypi.org/project/cdp-client/2.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Provides an API that allows to interact with CDP applications",
    "version": "2.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17062297,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ae206d6baadb92b04ed17b46675caf2e584aa59f90783e40ea863fcd4618be4",
          "md5": "e96407d29e909f8c6f8a0d270e41b1a0",
          "sha256": "76d9f7006e2edc5bf495e089ff75f04d63006d15e300a06b491304cb00265594"
        },
        "downloads": -1,
        "filename": "cdp_client-1.0.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "e96407d29e909f8c6f8a0d270e41b1a0",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 18308,
        "upload_time": "2018-05-29T07:25:24",
        "upload_time_iso_8601": "2018-05-29T07:25:24.350754Z",
        "url": "https://files.pythonhosted.org/packages/4a/e2/06d6baadb92b04ed17b46675caf2e584aa59f90783e40ea863fcd4618be4/cdp_client-1.0.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcc86f576b85b979d4338b87e777fe09cecf6608104c5659a9b8f92dc606bdaa",
          "md5": "3b27b5efd8c60ebf80400723b4fd7dd2",
          "sha256": "8f6ce5bab5d55c5a6684698168d33527bd0f3e0274a2c2a8f9b5f220a1c1ed7f"
        },
        "downloads": -1,
        "filename": "cdp-client-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3b27b5efd8c60ebf80400723b4fd7dd2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16320,
        "upload_time": "2018-05-29T07:25:25",
        "upload_time_iso_8601": "2018-05-29T07:25:25.532169Z",
        "url": "https://files.pythonhosted.org/packages/dc/c8/6f576b85b979d4338b87e777fe09cecf6608104c5659a9b8f92dc606bdaa/cdp-client-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4e5b8a62946dd3faf6ab706c691e8964359adef9326a66ac9b7b262d98ddf80",
          "md5": "f13bf45ac4faeac4ea0bfca85a832bfd",
          "sha256": "06ebd467abaff465a4aeb6712f1bb72214d0b33525e359d1c0ce5d257013187e"
        },
        "downloads": -1,
        "filename": "cdp_client-1.0.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "f13bf45ac4faeac4ea0bfca85a832bfd",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 18350,
        "upload_time": "2018-06-29T09:51:50",
        "upload_time_iso_8601": "2018-06-29T09:51:50.924685Z",
        "url": "https://files.pythonhosted.org/packages/f4/e5/b8a62946dd3faf6ab706c691e8964359adef9326a66ac9b7b262d98ddf80/cdp_client-1.0.3-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61b68f348caa9d6a715edefc8ef8bb661643dc8e0e40aca33940c1f0369f9e96",
          "md5": "a7111e513ecd8e58dffe832b2055f5b9",
          "sha256": "7b667a808c31d52a488b9d9a1880a3e452f9a6f43f4a4d59b10092faacdc7913"
        },
        "downloads": -1,
        "filename": "cdp-client-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a7111e513ecd8e58dffe832b2055f5b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16369,
        "upload_time": "2018-06-29T09:51:52",
        "upload_time_iso_8601": "2018-06-29T09:51:52.344369Z",
        "url": "https://files.pythonhosted.org/packages/61/b6/8f348caa9d6a715edefc8ef8bb661643dc8e0e40aca33940c1f0369f9e96/cdp-client-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2eb688c9fd8e2660ff5ed0c3a6735d8191502ff2a877837adb90d0cde915bb24",
          "md5": "21b95221f071ff61d743665868740b78",
          "sha256": "62663225c281f69cbc16d9630fe59f6cae6520a17fb618c01721aaa2ea139f7d"
        },
        "downloads": -1,
        "filename": "cdp_client-1.0.4-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "21b95221f071ff61d743665868740b78",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 18305,
        "upload_time": "2018-06-29T15:04:01",
        "upload_time_iso_8601": "2018-06-29T15:04:01.066027Z",
        "url": "https://files.pythonhosted.org/packages/2e/b6/88c9fd8e2660ff5ed0c3a6735d8191502ff2a877837adb90d0cde915bb24/cdp_client-1.0.4-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38e84235e5dad93190f5342029743c896c573fd6b6e727afae79d9363dcbf93d",
          "md5": "1342e744b394da703dcecc0be63349fc",
          "sha256": "506526655914d66b3af0cb35b0a52d70b83b884b150d6515fe58b0798edbd701"
        },
        "downloads": -1,
        "filename": "cdp-client-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1342e744b394da703dcecc0be63349fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16316,
        "upload_time": "2018-06-29T15:04:02",
        "upload_time_iso_8601": "2018-06-29T15:04:02.391763Z",
        "url": "https://files.pythonhosted.org/packages/38/e8/4235e5dad93190f5342029743c896c573fd6b6e727afae79d9363dcbf93d/cdp-client-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "590d64b1f60c972236db709ba262b9971e8ae87474e0c3ea69c14c4bafcd48e6",
          "md5": "e11508fdbb2d41d122671a5a655d4090",
          "sha256": "fe101a5f71b6f16ecf24c5233e753b4d0f225b0f42b127309bd7101070cb5d9d"
        },
        "downloads": -1,
        "filename": "cdp_client-1.1.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "e11508fdbb2d41d122671a5a655d4090",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 19416,
        "upload_time": "2018-08-22T14:50:03",
        "upload_time_iso_8601": "2018-08-22T14:50:03.596721Z",
        "url": "https://files.pythonhosted.org/packages/59/0d/64b1f60c972236db709ba262b9971e8ae87474e0c3ea69c14c4bafcd48e6/cdp_client-1.1.0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a5e086efc87371389d8e0b35f551603f719206820c58422b888d62cf1dd565b",
          "md5": "4293508f8b13d3bd2fa50d585e90a174",
          "sha256": "ae8ba2554c0b29a0a5291193eba53c50cee7b1b5a4e83a5f5a09b70a25af100a"
        },
        "downloads": -1,
        "filename": "cdp-client-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4293508f8b13d3bd2fa50d585e90a174",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17375,
        "upload_time": "2018-08-22T14:50:05",
        "upload_time_iso_8601": "2018-08-22T14:50:05.438208Z",
        "url": "https://files.pythonhosted.org/packages/0a/5e/086efc87371389d8e0b35f551603f719206820c58422b888d62cf1dd565b/cdp-client-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b79357a382071072db7e8274ac1d6ddd5146e1e0a3d58920d8e3aa813736a5c4",
          "md5": "b16d8752b4f86107de1ac4d9c4bb8d9a",
          "sha256": "44cc39b2f62e34f7183aa006fc19efbe9d603886e099f62a7c88725454ebf383"
        },
        "downloads": -1,
        "filename": "cdp_client-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b16d8752b4f86107de1ac4d9c4bb8d9a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20210,
        "upload_time": "2019-05-16T10:25:29",
        "upload_time_iso_8601": "2019-05-16T10:25:29.430854Z",
        "url": "https://files.pythonhosted.org/packages/b7/93/57a382071072db7e8274ac1d6ddd5146e1e0a3d58920d8e3aa813736a5c4/cdp_client-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3c82ac0487b68b5336b097c9c2d8c97e297a93537670f5df6ac9fb8b7b19937",
          "md5": "b11b7b8d81344b6f1aa47ce23681fea3",
          "sha256": "05b0c8c7a8b692d4ee41be3d19168e1852bd23b7a96ac9f549a5a207904d7002"
        },
        "downloads": -1,
        "filename": "cdp-client-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b11b7b8d81344b6f1aa47ce23681fea3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19417,
        "upload_time": "2019-05-16T10:25:31",
        "upload_time_iso_8601": "2019-05-16T10:25:31.357512Z",
        "url": "https://files.pythonhosted.org/packages/b3/c8/2ac0487b68b5336b097c9c2d8c97e297a93537670f5df6ac9fb8b7b19937/cdp-client-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05adc72db4b8239feb8cdcde783cb4f7d71d3adddca157b75313256a84cf6684",
          "md5": "787108f118eff766524e2a8825281d89",
          "sha256": "7e2caf1b71d65a38075c4d08ceb8ee97c6493a87eaeeaba2fba4b3fcc9114591"
        },
        "downloads": -1,
        "filename": "cdp_client-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "787108f118eff766524e2a8825281d89",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22636,
        "upload_time": "2021-02-16T16:57:14",
        "upload_time_iso_8601": "2021-02-16T16:57:14.984197Z",
        "url": "https://files.pythonhosted.org/packages/05/ad/c72db4b8239feb8cdcde783cb4f7d71d3adddca157b75313256a84cf6684/cdp_client-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99f801ef1ccf3335f4560d853f1963b27957379be32672deb1c231087938438c",
          "md5": "34ad44d7cba58e6f5f4b7c44d4e09ff5",
          "sha256": "b7a790bf0622008e93a2afe26858828fd2ef0328c15b0509fc5574d7664cc129"
        },
        "downloads": -1,
        "filename": "cdp-client-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "34ad44d7cba58e6f5f4b7c44d4e09ff5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22637,
        "upload_time": "2021-02-16T16:57:16",
        "upload_time_iso_8601": "2021-02-16T16:57:16.920733Z",
        "url": "https://files.pythonhosted.org/packages/99/f8/01ef1ccf3335f4560d853f1963b27957379be32672deb1c231087938438c/cdp-client-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c131afad1fac8252fb40fbe93d5533e10e92ebfaa8eda068264255d058dd290b",
          "md5": "304504625817bbffc334b1bfa49de3ee",
          "sha256": "2b1fda08bdc66f510c9131cedafcea50c390142d1d5589e8429887c04a810adc"
        },
        "downloads": -1,
        "filename": "cdp_client-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "304504625817bbffc334b1bfa49de3ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22670,
        "upload_time": "2021-02-23T06:54:01",
        "upload_time_iso_8601": "2021-02-23T06:54:01.275989Z",
        "url": "https://files.pythonhosted.org/packages/c1/31/afad1fac8252fb40fbe93d5533e10e92ebfaa8eda068264255d058dd290b/cdp_client-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ed10e6811efbf5a7d5454960a30853396b9a10a4f5575a6b5d9531c7b97cc7a",
          "md5": "a3f7fdd8717fa94ea27c0e97621dd793",
          "sha256": "1a6580ee3071fd23279180b22066ca27b7b2fc2a83d691a00116ec4e80034f6b"
        },
        "downloads": -1,
        "filename": "cdp-client-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a3f7fdd8717fa94ea27c0e97621dd793",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22695,
        "upload_time": "2021-02-23T06:54:04",
        "upload_time_iso_8601": "2021-02-23T06:54:04.810993Z",
        "url": "https://files.pythonhosted.org/packages/9e/d1/0e6811efbf5a7d5454960a30853396b9a10a4f5575a6b5d9531c7b97cc7a/cdp-client-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89f131b3a4a72fdcbb48808e4f054a99aaa6a99934e0d8519ab5a63ffbf4df2c",
          "md5": "b4a239bac23152a76f34f19d70046ad0",
          "sha256": "4941d56fea458fe7f412dda8a604b45d499802f198d2bc626a8b04981ce4b4f9"
        },
        "downloads": -1,
        "filename": "cdp_client-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4a239bac23152a76f34f19d70046ad0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25753,
        "upload_time": "2021-12-21T07:35:16",
        "upload_time_iso_8601": "2021-12-21T07:35:16.424462Z",
        "url": "https://files.pythonhosted.org/packages/89/f1/31b3a4a72fdcbb48808e4f054a99aaa6a99934e0d8519ab5a63ffbf4df2c/cdp_client-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79c8cc7bb49a7fc76c65d65536b1b1ff6d3cc421787d06c9167054cae250d6c1",
          "md5": "fd416c0f198110071f26c2fc70e2b29d",
          "sha256": "f305b99f0bfb7b53e3ed5081886e9a7dba1dba45461099ec08fa47eda5f0e6bd"
        },
        "downloads": -1,
        "filename": "cdp-client-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fd416c0f198110071f26c2fc70e2b29d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25813,
        "upload_time": "2021-12-21T07:35:18",
        "upload_time_iso_8601": "2021-12-21T07:35:18.558483Z",
        "url": "https://files.pythonhosted.org/packages/79/c8/cc7bb49a7fc76c65d65536b1b1ff6d3cc421787d06c9167054cae250d6c1/cdp-client-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e57f38098b9419086f53e29f4c37034f239c720d901c95968449f2ed05b32804",
          "md5": "935b59886d36ecc0bb2e279b8a31f3da",
          "sha256": "60e210a9f0cd603494c9b1d70e0b4e8c09bdd61d5d76f90dda5bd6c43d3ab435"
        },
        "downloads": -1,
        "filename": "cdp_client-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "935b59886d36ecc0bb2e279b8a31f3da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25810,
        "upload_time": "2022-01-20T07:46:18",
        "upload_time_iso_8601": "2022-01-20T07:46:18.516027Z",
        "url": "https://files.pythonhosted.org/packages/e5/7f/38098b9419086f53e29f4c37034f239c720d901c95968449f2ed05b32804/cdp_client-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3fd26b8fab2f2759daa175b199fbc9d1b9cc52c634cb64bbfe44672caf8bc8f",
          "md5": "6339c282bc796360484d35a5b688f05f",
          "sha256": "a26f0ee5d382cc0348da9bd7b189911bfdd28d68ef07497c34e194b2c18e1445"
        },
        "downloads": -1,
        "filename": "cdp-client-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6339c282bc796360484d35a5b688f05f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25861,
        "upload_time": "2022-01-20T07:46:20",
        "upload_time_iso_8601": "2022-01-20T07:46:20.876016Z",
        "url": "https://files.pythonhosted.org/packages/e3/fd/26b8fab2f2759daa175b199fbc9d1b9cc52c634cb64bbfe44672caf8bc8f/cdp-client-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d36eb6b4be1d0aae29e80b67a40a9ef554961420a09970ff7a5101959e117804",
          "md5": "dcd0a3e9001c17ee0df7b045d45a832c",
          "sha256": "463c1525f760b837d0b67115079f65d970e7985b35f86ec2ca71931dd09e929c"
        },
        "downloads": -1,
        "filename": "cdp_client-2.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dcd0a3e9001c17ee0df7b045d45a832c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25792,
        "upload_time": "2022-09-29T06:32:06",
        "upload_time_iso_8601": "2022-09-29T06:32:06.395326Z",
        "url": "https://files.pythonhosted.org/packages/d3/6e/b6b4be1d0aae29e80b67a40a9ef554961420a09970ff7a5101959e117804/cdp_client-2.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8cc6dcff1e43bd8e176cff5e639b4436aca7d6f978a19c22fdb035470abd9f6",
          "md5": "2ffa8135b3c86cb54b21fe31532d356e",
          "sha256": "dabf2ba23f6f9e58661cd0694d126477e2e15cee059a9419911522d39949fb15"
        },
        "downloads": -1,
        "filename": "cdp-client-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2ffa8135b3c86cb54b21fe31532d356e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25864,
        "upload_time": "2022-09-29T06:32:08",
        "upload_time_iso_8601": "2022-09-29T06:32:08.983464Z",
        "url": "https://files.pythonhosted.org/packages/c8/cc/6dcff1e43bd8e176cff5e639b4436aca7d6f978a19c22fdb035470abd9f6/cdp-client-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "027b137e161b30b301c3204b25aa13de4a592afb5b5c5d423c1ab9c99222504f",
          "md5": "9551abe99a2d92b984ac2717bed02d4d",
          "sha256": "47c01b3e54b20e1327462f0deabd2edb5bb4cf589158928af091b538032b5cab"
        },
        "downloads": -1,
        "filename": "cdp-client-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9551abe99a2d92b984ac2717bed02d4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26780,
        "upload_time": "2023-02-27T09:12:02",
        "upload_time_iso_8601": "2023-02-27T09:12:02.490375Z",
        "url": "https://files.pythonhosted.org/packages/02/7b/137e161b30b301c3204b25aa13de4a592afb5b5c5d423c1ab9c99222504f/cdp-client-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95144ec64c2cc6eedf93e3967534bab27da8ba6fc32bb23e0d70cd6e3061aa18",
          "md5": "ce9d5401865bf144480067c5ee1a509a",
          "sha256": "248674536ab2cf54e30d880d5479384c900edaad4cf7ad5b11954d56019ac353"
        },
        "downloads": -1,
        "filename": "cdp-client-2.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ce9d5401865bf144480067c5ee1a509a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26797,
        "upload_time": "2023-02-27T10:14:09",
        "upload_time_iso_8601": "2023-02-27T10:14:09.725573Z",
        "url": "https://files.pythonhosted.org/packages/95/14/4ec64c2cc6eedf93e3967534bab27da8ba6fc32bb23e0d70cd6e3061aa18/cdp-client-2.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95144ec64c2cc6eedf93e3967534bab27da8ba6fc32bb23e0d70cd6e3061aa18",
        "md5": "ce9d5401865bf144480067c5ee1a509a",
        "sha256": "248674536ab2cf54e30d880d5479384c900edaad4cf7ad5b11954d56019ac353"
      },
      "downloads": -1,
      "filename": "cdp-client-2.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "ce9d5401865bf144480067c5ee1a509a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26797,
      "upload_time": "2023-02-27T10:14:09",
      "upload_time_iso_8601": "2023-02-27T10:14:09.725573Z",
      "url": "https://files.pythonhosted.org/packages/95/14/4ec64c2cc6eedf93e3967534bab27da8ba6fc32bb23e0d70cd6e3061aa18/cdp-client-2.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}