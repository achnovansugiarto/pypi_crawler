{
  "info": {
    "author": "Michael Boyle",
    "author_email": "mob22@cornell.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# out_of_core_fft <a href=\"https://travis-ci.org/moble/out_of_core_fft\"><img align=\"right\" hspace=\"3\" alt=\"Status of automatic build and test suite\" src=\"https://travis-ci.org/moble/out_of_core_fft.svg?branch=master\"></a> <a href=\"https://github.com/moble/out_of_core_fft/blob/master/LICENSE\"><img align=\"right\" hspace=\"3\" alt=\"Code distributed under the open-source MIT license\" src=\"http://moble.github.io/spherical_functions/images/MITLicenseBadge.svg\"></a>\n\nFourier transforms are highly nonlocal, which can cause problems when dealing with very large data sets.  In particular,\nstandard algorithms cannot work with data sets too large to fit into memory.  On the other hand, the classic\nCooley-Tukey FFT algorithm shows that discrete Fourier transforms can be split up into smaller sub-problems.  This\nmodule provides functions for FFTs that can work with the data directly on disk, extracting small subsets that fit into\nmemory, working on each individually, and then combining back onto disk to get the final result.  This implementation is\nbased on the algorithm presented by Thomas H. Cormen in \"Algorithms for parallel processing\" (1999).  A nontrivial\npart of the implementation involves transposing the data on disk, for which I created a relatively simple, but fairly\nfast, function included here simply as `transpose`.\n\n## Usage\n\nThese functions assume that the data to be manipulated are stored in `HDF5` files.  The FFT and inverse FFT are called\nwith something like\n\n```python\nimport out_of_core_fft\nout_of_core_fft.fft('input.h5', 'x', 'output.h5', 'X')\nout_of_core_fft.ifft('input2.h5', 'X', 'output2.h5', 'x')\n```\n\nHere, `x` and `X` are names for the datasets within the `HDF5` files.  Note that nothing is returned, because the result\nis stored on disk, as requested.\n\nSee the docstrings for more details.\n\n\n\n## Acknowledgments\n\nThe work of creating this code was supported in part by the Sherman Fairchild\nFoundation and by NSF Grants No. PHY-1306125 and AST-1333129.\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/moble/out_of_core_fft",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "out-of-core-fft",
    "package_url": "https://pypi.org/project/out-of-core-fft/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/out-of-core-fft/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/moble/out_of_core_fft"
    },
    "release_url": "https://pypi.org/project/out-of-core-fft/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Perform FFT on data set that does not fit into memory",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1925534,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa0832015df6f269a90942112502063e75eec946a5300b0bc3c6aef135312b26",
          "md5": "8b9d4409934a8e19dfb231164d153e16",
          "sha256": "0d608954fceb8a65a5d46d66a3f3bad94060127f9b1ea474d70412657247d50f"
        },
        "downloads": -1,
        "filename": "out-of-core-fft-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8b9d4409934a8e19dfb231164d153e16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11530,
        "upload_time": "2016-01-27T13:14:02",
        "upload_time_iso_8601": "2016-01-27T13:14:02.634160Z",
        "url": "https://files.pythonhosted.org/packages/aa/08/32015df6f269a90942112502063e75eec946a5300b0bc3c6aef135312b26/out-of-core-fft-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa0832015df6f269a90942112502063e75eec946a5300b0bc3c6aef135312b26",
        "md5": "8b9d4409934a8e19dfb231164d153e16",
        "sha256": "0d608954fceb8a65a5d46d66a3f3bad94060127f9b1ea474d70412657247d50f"
      },
      "downloads": -1,
      "filename": "out-of-core-fft-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8b9d4409934a8e19dfb231164d153e16",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11530,
      "upload_time": "2016-01-27T13:14:02",
      "upload_time_iso_8601": "2016-01-27T13:14:02.634160Z",
      "url": "https://files.pythonhosted.org/packages/aa/08/32015df6f269a90942112502063e75eec946a5300b0bc3c6aef135312b26/out-of-core-fft-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}