{
  "info": {
    "author": "nullenenenen",
    "author_email": "nullenenenen@gavagai.eu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: The Unlicense (Unlicense)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development"
    ],
    "description": "Module jsonmason\n================\nWhat\n----\n\nA utility for transforming an object into an editable stream, and reconstructing an object from that stream.\nTo be precise:\n\n* Transform an an object of acyclic nested collections into an iterable of assignment operations (deconstruction)\n* Create an object of acyclic nested collections from an iterable of assignment operations (reconstruction)\n\nWhy\n---\nDeconstructing only to reconstruct does not seem very useful in itself. The power is in operating on the intermediary format — the iterable of nodes\nlends itself well to pattern matching, transformations, and other forms of computation.\n\nHow\n---\nIn the shell\n^^^^^^^^^^^^\nIf you've installed this package (eg ``pip install jsonmason``), then you should have two executables on your ``$PATH``. Both accept JSON on standard input, and print the deconstruction of that JSON on standard output.\n\n* ``jsonmason-nodedump`` makes it easy to ``grep`` for patterns - this is a bit like `gron <https://github.com/tomnomnom/gron>`_, but is intended to make it easy to find patterns for creating transformations in your Python code.\n* ``jsonmason-jsdump`` is even more like `gron <https://github.com/tomnomnom/gron>`_, as it prints JS-style assignments that can be pasted straight into a JS console.\n\nIn Python code\n^^^^^^^^^^^^^^\nAny nested container type inheriting from ``Sequence`` or ``Mapping`` is supported for deconstruction.\nHowever, any such sequence or mapping will be squashed to a list or a dict, respectively; those are the only ones supported\nin JSON.\nThus deserialized JSON in particular will survive a roundtrip through deconstruction and reconstruction; the resulting structure\nwill be a semantically identical copy of the original.\n\nThe following deconstruction example shows the intermediary format:\n\n>>> my_deserialized_json = [34, {\"hello\": [[\"a\", \"b\"], [\"c\", \"d\"]], \"world\": 42}]\n>>> node_generator = deconstruct(my_deserialized_json)\n>>> next(node_generator)\nNode(path=(), value=typing.List, is_leaf=False)\n>>> next(node_generator)\nNode(path=(typing.List, 0), value=34, is_leaf=True)\n>>> next(node_generator)\nNode(path=(typing.List, 1), value=typing.Dict, is_leaf=False)\n>>> next(node_generator)\nNode(path=(typing.List, 1, typing.Dict, 'hello'), value=typing.List, is_leaf=False)\n\nand so on.\nA full roundtrip of deserialized JSON results in a semantically identical structure, as promised:\n\n>>> reconstruct(deconstruct(my_deserialized_json))\n[34, {'hello': [['a', 'b'], ['c', 'd']], 'world': 42}]\n\nAdding an inline transformation makes things more interesting:\n\n>>> reconstruct(map(lambda node: Node(node.path, node.value * 2, node.is_leaf) if node.is_leaf else node, deconstruct(my_deserialized_json)))\n[68, {'hello': [['aa', 'bb'], ['cc', 'dd']], 'world': 84}]\n\nFunctions\n---------\n\n    \n`assign_at(container, path, value)`\n:   Assign ``value`` at ``path`` in ``container``\n\n    \n`deconstruct(thejson: Union[Dict, List])`\n:   Yields path nodes through nested container types, depth-first, emitting ``Node`` objects.\n\n    \n`main()`\n:   \n\n    \n`reconstruct(nodes: Iterable[jsonmason.Node])`\n:   Reconstruct an object from its ``Node`` components (as acquired from deconstruct()).\n\n    \n`traverse(container, path)`\n:   Return the node at ``path`` in the nested ``container``\n    \n    >>> traverse([34, {'hello': [['a', 'b'], ['c', 'd']], 'world': 42}], [0])\n    34\n    >>> traverse([34, {'hello': [['a', 'b'], ['c', 'd']], 'world': 42}], [1, 'world'])\n    42\n    >>> traverse([34, {'hello': [['a', 'b'], ['c', 'd']], 'world': 42}], [1, 'hello', 1, 0])\n    'c'\n\nClasses\n-------\n\n`Node(path: Tuple, refpath: Tuple, value: Any, is_leaf: bool)`\n:   Node(path: Tuple, refpath: Tuple, value: Any, is_leaf: bool)\n\n    ### Class variables\n\n    `is_leaf: bool`\n    :   Informational: Whether the value is a leaf value\n\n    `path: Tuple`\n    :   Full logical path to the node\n\n    `refpath: Tuple`\n    :   References to enveloping containers\n\n    `value: Any`\n    :   The value at the path\n\n    ### Instance variables\n\n    `assignment`\n    :   A string expressing the assignment, JS-style\n\n    `container`\n    :   The containing container. Useful for getting sibling items without going through traverse().\n\n    `itempath`\n    :   The path, devoid of container types\n\n    ### Methods\n\n    `clone(self, **kwargs)`\n    :   Return a copy, optionally replacing one or more field values\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/blinkingtwelve/jsonmason",
    "keywords": "json",
    "license": "Unlicense",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jsonmason",
    "package_url": "https://pypi.org/project/jsonmason/",
    "platform": "",
    "project_url": "https://pypi.org/project/jsonmason/",
    "project_urls": {
      "Documentation": "https://github.com/blinkingtwelve/jsonmason/blob/master/README.rst",
      "Homepage": "https://github.com/blinkingtwelve/jsonmason",
      "Source": "https://github.com/blinkingtwelve/jsonmason"
    },
    "release_url": "https://pypi.org/project/jsonmason/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "jsonmason - deconstruct JSON into assignments, mangle them at will, and reconstitute JSON from the assignments.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12077621,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb7ad9881559b06dcac4619bac6f6c31532d0229f33530b493bbe4b1f401c1c5",
          "md5": "14d3fdd52570849e556809d9c65797fa",
          "sha256": "a5332886221db5c1f73c03288b4f4ab5efb556f5484dd781418c9a7df16bfa01"
        },
        "downloads": -1,
        "filename": "jsonmason-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14d3fdd52570849e556809d9c65797fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 6897,
        "upload_time": "2021-09-30T18:20:22",
        "upload_time_iso_8601": "2021-09-30T18:20:22.837744Z",
        "url": "https://files.pythonhosted.org/packages/cb/7a/d9881559b06dcac4619bac6f6c31532d0229f33530b493bbe4b1f401c1c5/jsonmason-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b17c45794c1cdf425cc779997f516ee9e44831e8c91f0ba14a346f16c06b449a",
          "md5": "04b4b0e373cd02d5d140a0b44bd0846c",
          "sha256": "ce2df1038c00700f6e230ff081171d0e4324e275225d995064313fcf90b669e8"
        },
        "downloads": -1,
        "filename": "jsonmason-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "04b4b0e373cd02d5d140a0b44bd0846c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 5224,
        "upload_time": "2021-09-30T18:20:25",
        "upload_time_iso_8601": "2021-09-30T18:20:25.480896Z",
        "url": "https://files.pythonhosted.org/packages/b1/7c/45794c1cdf425cc779997f516ee9e44831e8c91f0ba14a346f16c06b449a/jsonmason-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7538843e2c88aaf204f56c7cea669217bdfc7b7ecdc5b81e9b0b2857347bbb1",
          "md5": "86ddfa16db42ca5ab37e80f072fa7d81",
          "sha256": "37015d6a28160f173f4c3342afcad93711b7d504a14e115dabde071abf354d10"
        },
        "downloads": -1,
        "filename": "jsonmason-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86ddfa16db42ca5ab37e80f072fa7d81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 6906,
        "upload_time": "2021-09-30T18:29:29",
        "upload_time_iso_8601": "2021-09-30T18:29:29.317600Z",
        "url": "https://files.pythonhosted.org/packages/b7/53/8843e2c88aaf204f56c7cea669217bdfc7b7ecdc5b81e9b0b2857347bbb1/jsonmason-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2848b6710018825b8824e826786f53894178220ae24e0b4e988abf6f97410ae8",
          "md5": "ca443b30cceb9a6f910220a23997ac6b",
          "sha256": "409717d3328500156c5f0761d02f4f2fccca16d6d8b5ec8dde758542ed6e6072"
        },
        "downloads": -1,
        "filename": "jsonmason-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ca443b30cceb9a6f910220a23997ac6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 5221,
        "upload_time": "2021-09-30T18:29:31",
        "upload_time_iso_8601": "2021-09-30T18:29:31.273133Z",
        "url": "https://files.pythonhosted.org/packages/28/48/b6710018825b8824e826786f53894178220ae24e0b4e988abf6f97410ae8/jsonmason-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "812367d21b9b0dfa0556c3af39750070c2ee810dd65f47f5b17df94faf1309e2",
          "md5": "23a80a3a073da147852cd1933c7415c1",
          "sha256": "0203f9887d3c586b99060ea37e970e3c2bc4e6bb6295b88acb62cc2fd7904d31"
        },
        "downloads": -1,
        "filename": "jsonmason-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23a80a3a073da147852cd1933c7415c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 7364,
        "upload_time": "2021-11-20T12:31:23",
        "upload_time_iso_8601": "2021-11-20T12:31:23.825958Z",
        "url": "https://files.pythonhosted.org/packages/81/23/67d21b9b0dfa0556c3af39750070c2ee810dd65f47f5b17df94faf1309e2/jsonmason-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7655941a2c6a6adccc7dc9d986a915d50b19c284003630643a1651a262f357d",
          "md5": "d382b770360518f537df26df756c9764",
          "sha256": "ce21154d99527246cc9e48ad2312d5c61d5fd4e8c7278ac0bdfc8f701593cd23"
        },
        "downloads": -1,
        "filename": "jsonmason-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d382b770360518f537df26df756c9764",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 5790,
        "upload_time": "2021-11-20T12:31:24",
        "upload_time_iso_8601": "2021-11-20T12:31:24.791140Z",
        "url": "https://files.pythonhosted.org/packages/f7/65/5941a2c6a6adccc7dc9d986a915d50b19c284003630643a1651a262f357d/jsonmason-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "812367d21b9b0dfa0556c3af39750070c2ee810dd65f47f5b17df94faf1309e2",
        "md5": "23a80a3a073da147852cd1933c7415c1",
        "sha256": "0203f9887d3c586b99060ea37e970e3c2bc4e6bb6295b88acb62cc2fd7904d31"
      },
      "downloads": -1,
      "filename": "jsonmason-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "23a80a3a073da147852cd1933c7415c1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 7364,
      "upload_time": "2021-11-20T12:31:23",
      "upload_time_iso_8601": "2021-11-20T12:31:23.825958Z",
      "url": "https://files.pythonhosted.org/packages/81/23/67d21b9b0dfa0556c3af39750070c2ee810dd65f47f5b17df94faf1309e2/jsonmason-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7655941a2c6a6adccc7dc9d986a915d50b19c284003630643a1651a262f357d",
        "md5": "d382b770360518f537df26df756c9764",
        "sha256": "ce21154d99527246cc9e48ad2312d5c61d5fd4e8c7278ac0bdfc8f701593cd23"
      },
      "downloads": -1,
      "filename": "jsonmason-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d382b770360518f537df26df756c9764",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 5790,
      "upload_time": "2021-11-20T12:31:24",
      "upload_time_iso_8601": "2021-11-20T12:31:24.791140Z",
      "url": "https://files.pythonhosted.org/packages/f7/65/5941a2c6a6adccc7dc9d986a915d50b19c284003630643a1651a262f357d/jsonmason-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}