{
  "info": {
    "author": "spiony",
    "author_email": "glumt@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# econicer\n\nThis tool enables the analysis of transaction data of a bank account.\n\nThe transaction data is analysed for specific keywords and grouped into custom\ncategories. The grouping information is used to created plots and an automated\nreport.\n\n## Installation\n\nInstall econcier with pip (not working yet)\n\n### Requirements\n\nAt first your bank must provide a function to download all your transaction as\na CSV file, otherwise econcier would be of much use. The CSV file should have\nsome header information and a table of your transactions with specific fields,\nsee Section Config Files.\n\nAll requirements for Python are found in the 'requirements.txt' file and should\nbe installed already if you used PyPi.\n\nFurthermore, a Latex installation is needed for the creation of automated\nreports. Econicer uses the 'xelatex' compiler. An installation of Miktex\nshould be sufficient.\n\n### Config Files\n\nEconcier needs 2 separate configuration files for account management. \n* bank.json - describes the structure of the CSV file from your bank\n* grouping.json - defines you indented grouping of transactions by specific \n                  data fields\n\nFirst, the 'bank.json' file contains information of how the file from your bank\nis structured. Econicer expects a certain information and you have to specify\nwhere this information can be found in your file.\n\nThe other file 'grouping.json' specifies all groups, keywords and fields, which\nare searched by econicer.  Single groups are specified by a key, which is follow\nby a list of keywords. Econicer uses those keywords to assign a group to every\nsingle transactions. The groups are prioritized, such as the first groups is\npreferred over the second. The grouping algorithm will only look into fields,\nwhich are set in the \"dbIdentifier\" list. \n\n\n## Tutorial\n\nThe example folder holds all files for the tutorial, but first make sure you\ninstall econicer with pip. The config files are included in the tutorial\nfolder. Download the tutorial files from the git repo folder 'tutorial'. Copy\nall contents from 'tutorial' to a directory, where you want econicer to work.\n\nFirst, the account has to be initialized by running\n```\npy -m econicer -i Tutorial\n```\nThis will create the '.db' folder, where eocnicer stores all information.\n\nIf you have multiple accounts in the database. After initializing, you can\nswitch them with\n```\npy -m econicer -c OtherAccountName\n```\n\nFor quick look at your current settings run\n```\npy -m econicer -ls\n```\n\n### Adding Transaction Files\n\nAfter the initialization you can start with adding transaction data to the account.\nMake sure, that you are on the correct account before adding the data from your bank.\n\nA example file can be added by\n```\npy -m econicer -a files\\firstFile.csv\n```\nEconicer reads the file data and merges the current database content with the file.\nAdd a second file by\n```\npy -m econicer -a files\\secondFile.csv\n```\n\nThere is the option of undoing the last action with\n```\npy -m econicer -u\n```\nbut this only works for one step back yet.\n\n\n### Grouping Transactions\n\nA key feature of econicer is to group your transactions. When you add some data\nto your account, econicer will apply the groups defined in the group settings\nfile. The grouping is used in the later analysis.\n\nThe grouping depends on the keyword lists specified in the 'grouping.json' file.\nLet's check if all transactions got grouped by\n ```\n py -m econicer -n\n```\n\nIn this example no all transactions have a groups. You need to be familiar with\nediting json files. Let's fix this by add a the keywords 'electricity' and\n'supplies' the to 'lining' group in the 'grouping.json' file. Additionally, lets\na new group. The new group can be called 'hobby' with the keyword 'guitar' to\nshow how much money we spend on our lining hobbies.\n\nRun the regroup command to apply the new grouping settings.\n```\npy -m econicer -g\n```\nNow all transactions should have a group assigned.\n\n### Further Analyzing your Transaction History\n\nTo analyse the database by searching for a word in the fields. The default field is the 'usage' field.\nFields can be specified as list with the -k flag. Use\n```\npy -m econicer -s store -k customer usage\n```\nto search for the word \"store\" in the fields 'customer' and 'usage'.\n\n### Automated Report and Plots\n\nFinally, Create an automated report with Latex by\n```\npy -m econicer -r\n```\n\nYou also can create only the plots for the report, if you don't have Latex.\n```\npy -m econicer -p\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Spiony/econicer",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "econicer",
    "package_url": "https://pypi.org/project/econicer/",
    "platform": "",
    "project_url": "https://pypi.org/project/econicer/",
    "project_urls": {
      "Homepage": "https://github.com/Spiony/econicer"
    },
    "release_url": "https://pypi.org/project/econicer/0.23/",
    "requires_dist": [
      "matplotlib (>=3.4.1)",
      "PyLaTeX (>=1.4.1)",
      "pandas (>=1.2.3)"
    ],
    "requires_python": ">=3.8",
    "summary": "A small program to analyse financial transactions",
    "version": "0.23",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10695660,
  "releases": {
    "0.23": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79ea6d363e6b1dd9dd8eeef0a95363b7b189df639cfb69572913c3ad4d8b8c99",
          "md5": "0416ea745a736a81b0e0fdd99ebfb194",
          "sha256": "030c2f7a866e67ea2145acf65fe6f23be8058423caa339fb60ef396964635d47"
        },
        "downloads": -1,
        "filename": "econicer-0.23-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0416ea745a736a81b0e0fdd99ebfb194",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 26701,
        "upload_time": "2021-06-20T18:19:39",
        "upload_time_iso_8601": "2021-06-20T18:19:39.514603Z",
        "url": "https://files.pythonhosted.org/packages/79/ea/6d363e6b1dd9dd8eeef0a95363b7b189df639cfb69572913c3ad4d8b8c99/econicer-0.23-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed9e29c8b1acf0f2db2e2d3a2aef3d7a0fb3164edbe15dc437b0beb3da69a859",
          "md5": "a4f6711b58c06f86ff70a6b1b93263d3",
          "sha256": "c17be651279bbeb002d04c747f108e798960d075eb04c0e41838c975ec8a2dcd"
        },
        "downloads": -1,
        "filename": "econicer-0.23.tar.gz",
        "has_sig": false,
        "md5_digest": "a4f6711b58c06f86ff70a6b1b93263d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 26527,
        "upload_time": "2021-06-20T18:19:41",
        "upload_time_iso_8601": "2021-06-20T18:19:41.067947Z",
        "url": "https://files.pythonhosted.org/packages/ed/9e/29c8b1acf0f2db2e2d3a2aef3d7a0fb3164edbe15dc437b0beb3da69a859/econicer-0.23.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "79ea6d363e6b1dd9dd8eeef0a95363b7b189df639cfb69572913c3ad4d8b8c99",
        "md5": "0416ea745a736a81b0e0fdd99ebfb194",
        "sha256": "030c2f7a866e67ea2145acf65fe6f23be8058423caa339fb60ef396964635d47"
      },
      "downloads": -1,
      "filename": "econicer-0.23-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0416ea745a736a81b0e0fdd99ebfb194",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 26701,
      "upload_time": "2021-06-20T18:19:39",
      "upload_time_iso_8601": "2021-06-20T18:19:39.514603Z",
      "url": "https://files.pythonhosted.org/packages/79/ea/6d363e6b1dd9dd8eeef0a95363b7b189df639cfb69572913c3ad4d8b8c99/econicer-0.23-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed9e29c8b1acf0f2db2e2d3a2aef3d7a0fb3164edbe15dc437b0beb3da69a859",
        "md5": "a4f6711b58c06f86ff70a6b1b93263d3",
        "sha256": "c17be651279bbeb002d04c747f108e798960d075eb04c0e41838c975ec8a2dcd"
      },
      "downloads": -1,
      "filename": "econicer-0.23.tar.gz",
      "has_sig": false,
      "md5_digest": "a4f6711b58c06f86ff70a6b1b93263d3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 26527,
      "upload_time": "2021-06-20T18:19:41",
      "upload_time_iso_8601": "2021-06-20T18:19:41.067947Z",
      "url": "https://files.pythonhosted.org/packages/ed/9e/29c8b1acf0f2db2e2d3a2aef3d7a0fb3164edbe15dc437b0beb3da69a859/econicer-0.23.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}