{
  "info": {
    "author": "Emil",
    "author_email": "emil@tehamalab.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Scientific/Engineering :: GIS",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "This is a `Python <http://python.org>`_ based utility for geocoding csv files\nusing various online geocoding service.\n\n*************\nInstallation\n*************\n\nInstallation using `pip <https://pip.pypa.io>`_\n================================================\n\n::\n\n    pip install giokoda\n\nInstallation from source\n========================\nDownload the source code from github, Example \n\n::\n\n    git clone https://github.com/WorldBank-Transport/giokoda.git\n\nInstall the module and its dependancies\n\n::\n\n    cd giokoda\n    python setup.py install\n\n\n******\nUsage\n******\n\nThis utility can be used as a Python module or as an executable script.\n\nUsing as python module\n=======================\n\nBasic example::\n\n    import giokoda\n    giokoda.geocode_csv('input.csv')\n\nThe above code will try to goecode the provided `'input.csv'` file and write\nits output to `'input.csv-geocoded.csv'`\n\nA `geocode_csv` function can geocode entities from a provided input csv file\nand write results to a csv file.\n\nIt also returns a dictionary containing error, success and total count of\ngeocoded rows.\n\nGeneral syntax::\n\n    geocode_csv('input/file.csv', **kwargs)\n\nRequired parameter\n------------------\n\n    `infile`, *(filepath/str)*\n        path to a csv file to geocode.\n\nOptional keyword arguments (`**kwargs`)\n---------------------------------------\n    `outfile`, (filepath/str)\n        path to file to write output csv\n    \n    `service`, *(str)*, default: `'nominatim'`.\n        Name of a geocoding service to use. This can be a name of any geocoding\n        service that is supported by\n        `geopy <http://geopy.readthedocs.org/en/latest/>`_.\n\n    `query_column`, *(str)*, default: `'name'`\n        Name of a column containg text to geocode.\n\n    `query_columns` *(list)*: default: `[]`. A list of a columns\n    to be combined in order to produce a text to geocode.\n\n    `service_kwargs`, *(dict)*\n        Optional keyword arguments for initialization of geocoding service.\n\n    `delimiter` *(str)*: default: `','`, A one-character string used to\n    separate fields.\n\n    `quotechar` *(str)*: default: `'\"'`, A one-character string used to\n    quote fields containing special characters in a csv file, such as\n    the delimiter or quotechar, or which contain new-line characters.\n\nReturn\n------\n\n`geocode_csv()` returns a dictionary of success, error and total count::\n  \n    {\n        'total': 0,\n        'success': 0,\n        'error': 0\n    }\n\nUsing an executable script\n==========================\n\n* Run `geocode_csv` via command line interface.\n\nExample::\n\n    geocode_csv /input/file.csv\n\nor including a api key::\n\n    geocode_csv --service <SERVICE-NAME> --params '{\"api_key\": \"<YOUR-API-KEY>\"}' /input/file.csv\n\nGeneral usage::\n\n    geocode_csv [-h] [-o OUTPUT] [-s SERVICE] [-c COLUMN] [-p PARAMS] input\n\nRequired argument\n------------------\n    `input`\n        Full path to csv file to geocode\n\n`Optional arguments`\n---------------------\n\n    `-h, --help`\n        show this help message and exit\n\n    `-o OUTPUT, --output OUTPUT`\n        Full path to output file\n\n    `-s SERVICE, --service SERVICE`\n        Geocoding service name, example arcgis, baidu, google, googlev3, geocoderdotus,\n        geonames, yahoo, placefinder, opencage, openmapquest, mapquest, liveaddress,\n        navidata, nominatim, geocodefarm, what3words, yandex and ignfrance\n\n    `-c [COLUMN [COLUMN ...]], --column [COLUMN [COLUMN ...]]`\n        Name(s) for column(s) containing text content to geocode.\n        Multiple column names should be separated by white space.\n\n    `-p PARAMS, --params PARAMS`\n        Keyword arguments for geocoding service initialization presented as\n        json object\n\n    `-d DELIMITER, --delimiter DELIMITER`\n        A one-character string used to separate fields in a csv file\n\n    `-q QUOTECHAR, --quotechar QUOTECHAR`\n        A one-character string used to\n        quote fields containing special characters in a csv file, such as\n        the delimiter or quotechar, or which contain new-line characters.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.python.org/pypi/giokoda",
    "keywords": null,
    "license": "Apache License, Version 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "giokoda",
    "package_url": "https://pypi.org/project/giokoda/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/giokoda/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://pypi.python.org/pypi/giokoda"
    },
    "release_url": "https://pypi.org/project/giokoda/0.1.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A utility for geocoding csv files.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1417518,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "833b542ead8385dfdef764a19d0cd80092f717afaca85b86e0e757fa2f3401ea",
          "md5": "bfbe915c1562c7f44d58ec3014439e37",
          "sha256": "fe1a1f20bc7f328e5c6d5c0f78bf106dafa1cca897c1c2fee9c72335ba0e9911"
        },
        "downloads": -1,
        "filename": "giokoda-0.1.0a.tar.gz",
        "has_sig": false,
        "md5_digest": "bfbe915c1562c7f44d58ec3014439e37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5596,
        "upload_time": "2015-02-10T05:23:56",
        "upload_time_iso_8601": "2015-02-10T05:23:56.806172Z",
        "url": "https://files.pythonhosted.org/packages/83/3b/542ead8385dfdef764a19d0cd80092f717afaca85b86e0e757fa2f3401ea/giokoda-0.1.0a.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39e23b8d8647a192c25fbf46e7589e1811dde57daaeb1d1ce16504e870034623",
          "md5": "393f34665226bf5c654c88ee66fb0820",
          "sha256": "9ad7d3d40be88c0b5fa77278d4b5809116745baddc34827f2d58e81cdcf9271e"
        },
        "downloads": -1,
        "filename": "giokoda-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "393f34665226bf5c654c88ee66fb0820",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5591,
        "upload_time": "2015-02-10T05:40:43",
        "upload_time_iso_8601": "2015-02-10T05:40:43.975373Z",
        "url": "https://files.pythonhosted.org/packages/39/e2/3b8d8647a192c25fbf46e7589e1811dde57daaeb1d1ce16504e870034623/giokoda-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba9d578d7f0153a216c4e4846fb4f5803a03b67626e8e97825128dd9fcf91b0a",
          "md5": "3cd40378e656438d0639b64fdc551973",
          "sha256": "6c4721bb1967983bfde85c1f90d2516fe5d376722b532d2c34382019489eed55"
        },
        "downloads": -1,
        "filename": "giokoda-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3cd40378e656438d0639b64fdc551973",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5635,
        "upload_time": "2015-02-10T10:47:24",
        "upload_time_iso_8601": "2015-02-10T10:47:24.983092Z",
        "url": "https://files.pythonhosted.org/packages/ba/9d/578d7f0153a216c4e4846fb4f5803a03b67626e8e97825128dd9fcf91b0a/giokoda-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba9d578d7f0153a216c4e4846fb4f5803a03b67626e8e97825128dd9fcf91b0a",
        "md5": "3cd40378e656438d0639b64fdc551973",
        "sha256": "6c4721bb1967983bfde85c1f90d2516fe5d376722b532d2c34382019489eed55"
      },
      "downloads": -1,
      "filename": "giokoda-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3cd40378e656438d0639b64fdc551973",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5635,
      "upload_time": "2015-02-10T10:47:24",
      "upload_time_iso_8601": "2015-02-10T10:47:24.983092Z",
      "url": "https://files.pythonhosted.org/packages/ba/9d/578d7f0153a216c4e4846fb4f5803a03b67626e8e97825128dd9fcf91b0a/giokoda-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}