{
  "info": {
    "author": "Essi Kujansuu - Nicolas Gruyer/Economics Games - Philipp Chapkovski",
    "author_email": "chapkovski@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "========================================================================\nCustom waiting page for mTurk experiments with oTree\n========================================================================\n\nInstallation:\n***************\n1. **Either**:\n\n- type ``pip install mturkotreeutils`` in your terminal window.\n\n\n2. **or**:\n\n-  clone exisiting project ``git clone https://github.com/chapkovski/custom-waiting-page-for-mturk`` and copy the ``otree_mturk_utils`` folder into your project folder, next to the apps of your module.\n\n3. After that add \"otree_mturk_utils\" to your INSTALLED_APPS section of ``settings.py`` file like this::\n\n    INSTALLED_APPS = [\n        'otree',\n        'otree_mturk_utils',\n    ]\n\n4. In the ``views.py`` file of your project, import the pages::\n\n    from otree_mturk_utils.views import CustomMturkPage, CustomMturkWaitPage\n\nHow to use it:\n***************\nTo use the custom waiting page, just inherit your WaitPage not from the 'standard' oTree WaitPage, but from CustomMturkWaitPage::\n\n      from otree_mturk_utils.views import CustomMturkPage, CustomMturkWaitPage\n\n      class MyWaitPage(CustomMturkWaitPage):\n           ...\n\nthe CustomMturkWaitPage has in addition to standard properties of oTree WaitPage (such as ``wait_for_all_groups`` or ``group_by_arrival_time``), four additional properties (see details in the section below):\n\n1. ``pay_by_task``: compensation (in points or dollars) for each task correctly submitted at the waiting page. Default value: ``0``.\n\n2. ``pay_by_time``: compensation (in points or dollars) for each minute of waiting at the waiting page. Default value: ``0``.\n\n3. ``startwp_timer``: How fast the participant can quit the study (in seconds). Default value: ``Never``.\n\n4. ``task``: What kind of activity a person can do while waiting. Right now there are two options: filling in a 'Big Five' questionnaire and a real effort task (finding sum of two maximum numbers). In the future we will add games as an option (tic tac toe, snake, hangman etc.) . Possible values now: ``['survey', 'real_effort']``. Default value: ``real_effort`` .\n\n5. ``use_task``: whether the participant will see any kind of tasks while waiting. Default value: ``True``.\n\nWhat does the default custom wait page do?\n******************************************\n\nThe custom wait page was created to allow participants to wait for a group to form,\nto ensure that they remain available and ready to start the experiment while they wait,\nand to let them finish the experiment if the waiting lasts for too long.\n\nThe experimenter can require the participant to do an activity while he waits,\nby setting an attribute of the page (here use_real_effort_task = True ,\nto have a real effort task). The main goal of this activity is to have the participant\nstay focused on the experiment while he waits. But be careful, as soon as a group is formed,\nthe members of the group will be forwarded to the next page, even if they are in the middle of a page.\nThis could create frustration if not anticipated, so you should warn the participants in the instructions.\n(If the task is to answer a survey, they will be offered to complete the survey at the end of the experiment,\ntheir previous answers will be saved.)\n\nYou can decide to pay the participant based on his wait time and on his “score” in the effort\ntask by setting the attributes pay_by_task and pay_by_time in your waitpage (by default, this is 0). At the end of the experiment, you will find this additional payment in participants.vars[‘payment_for_wait’]\n\nThe experimenter can also set a limit of time after which a player is offered to complete the study\nif he wants (by specifying the attribute “time_before_exit_offer”, labelled in minutes, which is by default\nequal to 2 hours). This is hidden if more than 30 minutes. By clicking on “finish the study”, the participant will skip\nall the CustomMturkPage and CustomMturkWaitPage pages in the remaining app sequence (if you want him to complete a survey\nin a final app, just do not inherit the survey pages from CustomMturkPage).\n\nMaybe in a later version, we will offer the option to skip only the current round or the current app,\nand not necessarily all the remaining CustomMturkPage and CustomMturkWaitPage of the session.\nAlso we might offer a feature detecting if the remaining participants are not enough for creating\na new group, to signal the waiting participants that it is not necessary to wait.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/chapkovski/custom-waiting-page-for-mturk",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mturkotreeutils",
    "package_url": "https://pypi.org/project/mturkotreeutils/",
    "platform": "",
    "project_url": "https://pypi.org/project/mturkotreeutils/",
    "project_urls": {
      "Homepage": "https://github.com/chapkovski/custom-waiting-page-for-mturk"
    },
    "release_url": "https://pypi.org/project/mturkotreeutils/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "set of utilities for oTree and mTurk",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3287255,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aafc978b35fd7f0e52040be2c80bac01d6e65eaaab65d536bad6551f08301cf3",
          "md5": "78175dc8ca2440e4ede74b125d5ea375",
          "sha256": "9dba7b76215086a88cfd7174011641352dc75551b7c4d9df3b0a087ff92b7b6a"
        },
        "downloads": -1,
        "filename": "mturkotreeutils-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "78175dc8ca2440e4ede74b125d5ea375",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11638,
        "upload_time": "2017-10-29T03:21:16",
        "upload_time_iso_8601": "2017-10-29T03:21:16.819976Z",
        "url": "https://files.pythonhosted.org/packages/aa/fc/978b35fd7f0e52040be2c80bac01d6e65eaaab65d536bad6551f08301cf3/mturkotreeutils-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b76d3ed59efc4851aefb496cfb886e0a9b79be56c9eb822d598342d8e85cdf56",
          "md5": "607489165e6206c532db6d4b70f81dc4",
          "sha256": "1a3f4a8e9096d2cfa8a1249f15ae537d3a9bb09a30ea1b1fa0fb083dc6770b6a"
        },
        "downloads": -1,
        "filename": "mturkotreeutils-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "607489165e6206c532db6d4b70f81dc4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11631,
        "upload_time": "2017-10-29T03:36:00",
        "upload_time_iso_8601": "2017-10-29T03:36:00.888138Z",
        "url": "https://files.pythonhosted.org/packages/b7/6d/3ed59efc4851aefb496cfb886e0a9b79be56c9eb822d598342d8e85cdf56/mturkotreeutils-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5452469cc01aae4ec7644d97d25b35e19c2bfa0b6ec097be2197bf7e82856998",
          "md5": "35073cbe59043e3b0653a9112d8b885a",
          "sha256": "3d8327b0f9141fffba4738eabaae4fd943ce913e3227a4068b571e4aaf8c4797"
        },
        "downloads": -1,
        "filename": "mturkotreeutils-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "35073cbe59043e3b0653a9112d8b885a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15442,
        "upload_time": "2017-10-29T04:53:20",
        "upload_time_iso_8601": "2017-10-29T04:53:20.489782Z",
        "url": "https://files.pythonhosted.org/packages/54/52/469cc01aae4ec7644d97d25b35e19c2bfa0b6ec097be2197bf7e82856998/mturkotreeutils-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5452469cc01aae4ec7644d97d25b35e19c2bfa0b6ec097be2197bf7e82856998",
        "md5": "35073cbe59043e3b0653a9112d8b885a",
        "sha256": "3d8327b0f9141fffba4738eabaae4fd943ce913e3227a4068b571e4aaf8c4797"
      },
      "downloads": -1,
      "filename": "mturkotreeutils-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "35073cbe59043e3b0653a9112d8b885a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15442,
      "upload_time": "2017-10-29T04:53:20",
      "upload_time_iso_8601": "2017-10-29T04:53:20.489782Z",
      "url": "https://files.pythonhosted.org/packages/54/52/469cc01aae4ec7644d97d25b35e19c2bfa0b6ec097be2197bf7e82856998/mturkotreeutils-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}