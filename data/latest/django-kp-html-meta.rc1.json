{
  "info": {
    "author": "kernel-panik",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "=================\nkp_html_meta\n=================\n\nkp_html_meta is a Django app to generate html meta tags for improve SEO.\n\n\nQuick start\n-----------\n\n1. Install django-kp-html-meta::\n\n    pip install django-kp-html-meta\n\n2. Add \"kp_static_version\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'kp_html_meta',\n    ]\n\n3. Define default values in you settings.py (optional)::\n\n    # Default values\n    KP_META = {\n        'kp_meta_title': \"Test title\",  # ex: <title>Test title</title>\n        'kp_meta_description': \"Test description\",  # ex: <meta name=\"description\" content=\"Test description\"/>\n        'kp_meta_keywords': \"Test keyword\",\n        'kp_meta_graph_type': \"article \",\n        'kp_meta_graph_image': \"https://mywebsite.com/logo.jpg\",\n        'kp_meta_graph_url': \"https://mywebsite.com\",\n        'kp_meta_graph_locale': \"en\",\n        'kp_get_base_url': \"https://mywebsite.com\",\n        'kp_meta_graph_site_name': \"mywebsite\",\n    }\n\n4. Load templatetags into your template::\n\n    {% load kp_meta %}\n    <head>\n        <meta charset=\"UTF-8\">\n        {% kp_meta %}\n    </head>\n\n5. Result::\n\n    <title>Test title</title>\n    <meta name=\"description\" content=\"Test description\"/>\n    <meta name=\"keywords\" content=\"Test keyword\"/>\n    <meta property=\"og:title\" content=\"Test title\">\n    <meta property=\"twitter:title\" content=\"Test title\">\n    <meta property=\"og:url\" content=\"https://mywebsite.com\">\n    <meta property=\"twitter:url\" content=\"https://mywebsite.com\">\n    <meta property=\"og:description\" content=\"Test description\">\n    <meta property=\"og:image\" content=\"https://mywebsite.com/logo.jpg\">\n    <meta property=\"twitter:image\" content=\"https://mywebsite.com/logo.jpg\">\n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:site_name\" content=\"mywebsite\">\n    <meta property=\"twitter:site\" content=\"mywebsite\">\n    <meta property=\"og:locale\" content=\"en\">\n\nCustomization\n-------------\n\nThe values defined in the settings.py file are default values.\nThey are used if no other values exist.\nYou can customize the content of the HTML tags according to your templates. Example::\n\n    from django.db import models\n    from kp_html_meta.models import KPMetaHelper\n\n    class DummyModel(models.Model, KPMetaHelper):\n        # ... some fields\n\n    def get_kp_meta_title(self):\n        # kp_meta_title in settings.py\n        return self.title\n\n    def get_kp_meta_description(self):\n        # kp_meta_description in settings.py\n        return self.text_of_my_article[:200]\n\n    def get_kp_meta_keywords(self):\n        # If None then the value defined in settings.py will be used.\n        # kp_meta_keywords in settings.py\n        return None\n\n    def get_kp_meta_graph_type(self):\n        return None\n\n    def get_kp_meta_graph_image(self):\n        return None\n\n    def get_kp_meta_graph_url(self):\n        return None\n\n    def get_kp_meta_graph_locale(self):\n        return None\n\n    def get_kp_meta_graph_site_name(self):\n        \"\"\"\n        Return site name\n\n        for example:\n\n        return \"mywebsite.tld\"\n\n        or\n\n        from django.conf import settings\n        kp_settings = getattr(settings, 'KP_META')\n        :return kp_settings['kp_meta_graph_site_name']\n\n        or\n\n        from django.contrib.sites.models import Site\n        current_site = Site.objects.get_current()\n        return current_site.domain\n\n        \"\"\"\n\n        return None\n\n    def get_kp_get_base_url(self):\n        \"\"\"\n        Return base url\n\n        for example:\n\n        return \"https://mywebsite.tld\"\n\n        or\n\n        from django.conf import settings\n        kp_settings = getattr(settings, 'KP_META')\n        :return kp_settings['kp_get_base_url']\n\n        or\n\n        from django.contrib.sites.models import Site\n        current_site = Site.objects.get_current()\n        return \"https://%s\" % current_site.domain\n\n        \"\"\"\n        return None\n\nYou can extend your templates with predefined fields::\n\n    from kp_html_meta.models import KPMetaGraphFiler\n\n    # if you use django-filer\n    class DummyModel(KPMetaGraphFiler):\n\n    from kp_html_meta.models import KPMetaGraphFileBrowser\n\n    # if you use django-filebrowser\n    class DummyModel(KPMetaGraphFileBrowser):\n\nIf you customize your models, use the templatetags like this::\n\n    {% load kp_meta %}\n    <head>\n        <meta charset=\"UTF-8\">\n        {% kp_meta myobj %}\n    </head>",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/KernelPan1k/django-kp-html-meta",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-kp-html-meta",
    "package_url": "https://pypi.org/project/django-kp-html-meta/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-kp-html-meta/",
    "project_urls": {
      "Homepage": "https://github.com/KernelPan1k/django-kp-html-meta"
    },
    "release_url": "https://pypi.org/project/django-kp-html-meta/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "kp_html_meta is a Django app to generate html meta tags for improve SEO.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7086597,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f709ad2e4a8df886b5b52a3b62c2685087f34d17423df04d97c3edb7630c1fa2",
          "md5": "af5c8151a4dae55392e6c0bb2e7e1353",
          "sha256": "7ed050f3f6c69cef241fcfc39dc12b2a3a1aad4ef5042f613b723bed74c26138"
        },
        "downloads": -1,
        "filename": "django-kp-html-meta-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "af5c8151a4dae55392e6c0bb2e7e1353",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17453,
        "upload_time": "2020-04-23T18:54:17",
        "upload_time_iso_8601": "2020-04-23T18:54:17.919429Z",
        "url": "https://files.pythonhosted.org/packages/f7/09/ad2e4a8df886b5b52a3b62c2685087f34d17423df04d97c3edb7630c1fa2/django-kp-html-meta-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f709ad2e4a8df886b5b52a3b62c2685087f34d17423df04d97c3edb7630c1fa2",
        "md5": "af5c8151a4dae55392e6c0bb2e7e1353",
        "sha256": "7ed050f3f6c69cef241fcfc39dc12b2a3a1aad4ef5042f613b723bed74c26138"
      },
      "downloads": -1,
      "filename": "django-kp-html-meta-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "af5c8151a4dae55392e6c0bb2e7e1353",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17453,
      "upload_time": "2020-04-23T18:54:17",
      "upload_time_iso_8601": "2020-04-23T18:54:17.919429Z",
      "url": "https://files.pythonhosted.org/packages/f7/09/ad2e4a8df886b5b52a3b62c2685087f34d17423df04d97c3edb7630c1fa2/django-kp-html-meta-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}