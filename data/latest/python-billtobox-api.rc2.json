{
  "info": {
    "author": "Alexander Schillemans",
    "author_email": "alexander.schillemans@lhs.global",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# python-mydhl-api\nWrapper for the Bill-To-Box / BanqUP (UnifiedPost) API - v4\n\n## Limitations\n\nThis package is limited to PurchaseInvoices at this moment.\n\n## Getting started\n\n### Install\n\nInstall with pip\n\n```python\npip install python-billtobox-api\n```\n\n### Import\n\nImport the package and the BillToBoxAPI.\n\n```python\nfrom billtobox.api import BillToBoxAPI\n```\n\n### Setup connection\n\nMake the connection with your created CLIENTID and CLIENTSECRET.\n\n```python\napi = BillToBoxAPI(CLIENTID, CLIENTSECRET)\n```\n\n\nBillToBox authentcation is build on OAuth2. A basic script to obtain your first tokens can be found below.\n\n```python\nfrom billtobox.api import BillToBoxAPI\n\nREDIRECT_URI = 'https://any-url-will-do.com/callback/'\n\napi = BillToBoxAPI(CLIENTID, CLIENTSECRET)\n\nauthUrl = api.authHandler.getAuthURL(REDIRECT_URI)\nprint('visit url: ', authUrl)\n\nresponse = input('paste response: ')\ntoken = api.authHandler.retrieveToken(response, redirectUri=REDIRECT_URI)\n```\n\nWhen using the script above, any REDIRECT_URI will do. Simply copy and paste the response URI so the handler can obtain the right tokens. \n\n### UAT/Test mode\n\nYou can choose to make use of the UAT/Test environment instead of production by specifying an extra parameter demo and setting it to True.\n\n```python\napi = BillToBoxAPI(CLIENTID, CLIENTSECRET, demo=True)\n```\n\nBe aware that the UAT environment uses a different CLIENTID and CLIENTSECRET than the production environment.\n\n## PurchaseInvoices\n\n### Available fields\n\n#### PurchaseInvoice\n\n| Field | Remarks\n|---------|---------|\n| id |\n| purchase_invoice_uuid | UUID\n| purchase_invoice_number |\n| client_creditor_purchase_invoice_number |\n| client_creditor_number |\n| creditor_number |\n| client_number |\n| amount |\n| vat_amount |\n| currency_code |\n| creditor_currency_code |\n| purchase_invoice_date |\n| purchase_invoice_due_date |\n| platform_id |\n| invoice_lines | Contains an InvoiceLineList object\n\n#### InvoiceLine\n\n| Field |\n|---------|\n| id |\n| service_name |\n| service_description |\n| service_quantity |\n| service_price |\n| service_vat |\n\n### List\n\nGet all the purchase invoices. You can limit the size or specify the page. The maximum size is 50, increase the page if you would to see more invoices.\nDefault page is 0 and default size is 50. Optionally you can specify the field to sort. Default field to sort by is client_id.\n\nReturns a PurchaseInvoiceList object.\n\n```python\npurchaseInvoices = api.purchaseInvoices.list(page=0, size=50, sort='client_id')\n# Is the same as\npurchaseInvoices = api.purchaseInvoices.list()\n\nfor invoice in purchaseInvoices.items():\n   print(invoice.id)\n   print(invoice.amount)\n   \n   for line in invoice.invoice_lines.items():\n      print(line.service_name)\n      print(line.service_price)\n\n```\n\n### Get\n\nGet a specific purchase invoice by its ID. Returns a PurchaseInvoice object.\n\n```python\ninvoice = api.purchaseInvoices.get(ID)\nprint(invoice.id)\n```\n\n### Get by UUID\n\nGet a specific purchase invoice by its UUID (different than the ID). Returns a PurchaseInvoice object.\n\nAt this moment there is no built-in function in the API to retrieve an invoice by its UUID.\nThis function will thus loop over all the invoices and returns the invoice with the requested UUID. This is the reason why the function may run slow if you have a lot of invoices in your account.\n\n```python\ninvoice = api.purchaseInvoices.getByUUID(UUID)\nprint(invoice.id)\n```\n\n### Delete\n\nDeletes a specific purchase invoice by its ID.\n\n```python\ninvoice = api.purchaseInvoices.delete(ID)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/alexanderlhsglobal/python-billtobox-api/archive/refs/tags/0.1.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alexanderlhsglobal/python-billtobox-api",
    "keywords": "bill-to-box,api,banqup,unifiedpost,billtobox,bill to box",
    "license": "GPL-3.0-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-billtobox-api",
    "package_url": "https://pypi.org/project/python-billtobox-api/",
    "platform": "",
    "project_url": "https://pypi.org/project/python-billtobox-api/",
    "project_urls": {
      "Download": "https://github.com/alexanderlhsglobal/python-billtobox-api/archive/refs/tags/0.1.1.tar.gz",
      "Homepage": "https://github.com/alexanderlhsglobal/python-billtobox-api"
    },
    "release_url": "https://pypi.org/project/python-billtobox-api/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Wrapper for the Bill-To-Box / BanqUP (UnifiedPost) API - v4",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11605251,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c138912ba79f90e7ae4b1db248e37f67d5bef34b3db5b6224986f8ab89cd6481",
          "md5": "14056430d78f6f9acbba75ff578cc14b",
          "sha256": "b86bb9b53a07cd6cecfc82ebce328441339392acd21c108af3b8272a1f0212c9"
        },
        "downloads": -1,
        "filename": "python-billtobox-api-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "14056430d78f6f9acbba75ff578cc14b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19236,
        "upload_time": "2021-10-01T10:46:14",
        "upload_time_iso_8601": "2021-10-01T10:46:14.882077Z",
        "url": "https://files.pythonhosted.org/packages/c1/38/912ba79f90e7ae4b1db248e37f67d5bef34b3db5b6224986f8ab89cd6481/python-billtobox-api-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7af9dacfc6ade0dbe1122188d5e75f622bd12dade1b807eb097358098fa6ef97",
          "md5": "f650a12cee64c14fe531611466367f52",
          "sha256": "57016ee9c585e5aadfb8d451d7eac2802c28c54084fa2a517090172e57952640"
        },
        "downloads": -1,
        "filename": "python-billtobox-api-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f650a12cee64c14fe531611466367f52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19705,
        "upload_time": "2021-10-01T15:31:38",
        "upload_time_iso_8601": "2021-10-01T15:31:38.186733Z",
        "url": "https://files.pythonhosted.org/packages/7a/f9/dacfc6ade0dbe1122188d5e75f622bd12dade1b807eb097358098fa6ef97/python-billtobox-api-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7af9dacfc6ade0dbe1122188d5e75f622bd12dade1b807eb097358098fa6ef97",
        "md5": "f650a12cee64c14fe531611466367f52",
        "sha256": "57016ee9c585e5aadfb8d451d7eac2802c28c54084fa2a517090172e57952640"
      },
      "downloads": -1,
      "filename": "python-billtobox-api-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f650a12cee64c14fe531611466367f52",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19705,
      "upload_time": "2021-10-01T15:31:38",
      "upload_time_iso_8601": "2021-10-01T15:31:38.186733Z",
      "url": "https://files.pythonhosted.org/packages/7a/f9/dacfc6ade0dbe1122188d5e75f622bd12dade1b807eb097358098fa6ef97/python-billtobox-api-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}