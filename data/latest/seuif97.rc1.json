{
  "info": {
    "author": "Cheng Maohua",
    "author_email": "cmh@seu.edu.cn",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: C",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Chemistry",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. contents::\r\n\r\nWhat is seuif97?\r\n====================\r\n\r\nThe **seuif97** package is the Python API of the high-speed IAPWS-IF97 shared library.\r\n\r\nSEUIF97 is the high-speed shared library of IAPWS-IF97. It is suitable for computation-intensive calculations，such as heat cycle calculations, simulations of non-stationary processes, real-time process monitoring and optimizations.   \r\n \r\nThrough the high-speed library, the results of the IAPWS-IF97 are accurately produced at about 3x speed-up compared to the repeated squaring method for fast computation of integer powers, 10x speed-up compared to  the `math.pow()` of the C standard library.   \r\n\r\nFor Windows and Linux users, the convenient binary library and APIs are provided\r\n\r\n- Windows64/32 dynamic library: libseuif97.dll\r\n\r\n- Linux64 shared library: libseuif97.so\r\n\r\n- APIs: Python, C/C++, Excel VBA, MATLAB, Java, Fortran, C#, Modelica, Rust, Pascal\r\n\r\nYou may visit https://github.com/thermalogic/SEUIF97 for more information about the shared library and APIs\r\n\r\nInstallation\r\n====================\r\n\r\nIf you have an installation of Python with pip, install it with:\r\n\r\n- Windows64/32\r\n\r\n  >python -m pip install seuif97\r\n\r\n- Linux64\r\n\r\n  $sudo -H python3 -m pip install seuif97\r\n\r\nPython API\r\n====================\r\n\r\nFunctions of water and steam properties, thermodynamic process of steam turbine are provided in **seuif97** package\r\n\r\nFunctions of Water and Steam Properties\r\n-----------------------------------------\r\n\r\nUsing seuif97, you can set the state of steam using various pairs of know properties to get any output properties you wish to know,\r\nincluding in the **30** properties (`propertyIDs in seuif97`_)\r\n\r\nThe following input pairs are implemented:\r\n\r\n  (p,t) (p,h) (p,s) (p,v)  (p,x)\r\n\r\n  (t,h) (t,s) (t,v) (t,x)\r\n\r\n  (h,s)\r\n\r\nThe two types of functions are provided in the seuif97 package:\r\n\r\n* ??(in1,in2,propertyID). e.g, h=pt(p,t,4), the propertyID h is 4)\r\n* ??2?(in1,in2). e.g,h=pt2h(p,t)\r\n\r\n??(in1,in2,propertyID)\r\n:::::::::::::::::::::::::::\r\n\r\n- the propertyID of the calculated property(int, 0-29), see `propertyIDs in seuif97`_ for details\r\n\r\n.. code:: python\r\n\r\n  pt(pressure,    temperature, propertyID)\r\n  ph(pressure,    enthalpy,    propertyID)\r\n  ps(pressure,    entropy,     propertyID)\r\n  pv(pressure,    volume,      propertyID)\r\n\r\n  th(temperature, enthalpy,    propertyID)\r\n  ts(temperature, entropy,     propertyID)\r\n  tv(temperature, volume,      propertyID)\r\n\r\n  hs(enthalpy,    entropy,     propertyID)\r\n\r\n  px(pressure,    quality,     propertyID)\r\n  tx(temperature, quality,     propertyID)\r\n\r\n- p (pressure) : MPa ;\r\n\r\n- t (temperature) : °C\r\n\r\n- v (volume)  : m^3/kg\r\n\r\n- h (enthalpy)  : kJ/kg\r\n\r\n- s (entropy)  : kJ/(kg·K)\r\n\r\n- x (quality) :\r\n\r\n??2?(in1,in2)\r\n:::::::::::::::::::::::::::\r\n.. code:: python\r\n\r\n   pt2h(pressure, temperature)\r\n   pt2s(pressure, temperature)\r\n   pt2v(pressure, temperature)\r\n   pt2x(pressure, temperature)\r\n\r\n   ph2t(pressure, enthalpy)\r\n   ph2s(pressure, enthalpy)\r\n   ph2v(pressure, enthalpy)\r\n   ph2x(pressure, enthalpy)\r\n\r\n   ps2t(pressure, entropy)\r\n   ps2h(pressure, entropy)\r\n   ps2v(pressure, entropy)\r\n   ps2x(pressure, entropy)\r\n\r\n   pv2t(pressure, volume)\r\n   pv2h(pressure, volume)\r\n   pv2s(pressure, volume)\r\n   pv2x(pressure, volume)\r\n\r\n   th2p(temperature, enthalpy)\r\n   th2s(temperature, enthalpy)\r\n   th2v(temperature, enthalpy)\r\n   th2x(temperature, enthalpy)\r\n\r\n   ts2p(temperature, entropy)\r\n   ts2h(temperature, entropy)\r\n   ts2v(temperature, entropy)\r\n   ts2x(temperature, entropy)\r\n\r\n   tv2p(temperature,  volume)\r\n   tv2h(temperature,  volume)\r\n   tv2s(temperature,  volume)\r\n   tv2x(temperature,  volume)\r\n\r\n   hs2p(enthalpy,  entropy)\r\n   hs2t(enthalpy,  entropy)\r\n   hs2v(enthalpy,  entropy)\r\n   hs2x(enthalpy,  entropy)\r\n\r\n   px2t(pressure, quality)\r\n   px2h(pressure, quality)\r\n   px2s(pressure, quality)\r\n   px2v(pressure, quality)\r\n  \r\n   tx2p(temperature, quality)\r\n   tx2h(temperature, quality)\r\n   tx2s(temperature, quality)\r\n   tx2v(temperature, quality)\r\n\r\nFunctions for the Thermodynamic Process of Steam Turbine\r\n---------------------------------------------------------------------------------\r\n\r\nIsentropic Enthalpy Drop\r\n:::::::::::::::::::::::::::\r\n\r\n.. code:: python\r\n\r\n   ishd(pi,ti,po)\r\n\r\n- pi：inlet P，MPa；　ti：inlet T，°C\r\n\r\n- po：outlet P，MPa；\r\n\r\nIsentropic Efficiency(0~100)\r\n::::::::::::::::::::::::::::::\r\n\r\n.. code:: python\r\n\r\n  ief(pi,ti,po,to)\r\n\r\n- pi：inlet P，MPa； 　ti：inlet T，°C\r\n- po：outlet P，MPa；　to：outlet T，°C\r\n\r\nExamples\r\n====================\r\n\r\n.. code:: python\r\n\r\n  import seuif97\r\n\r\n  p，t=16.10,535.10\r\n\r\n  # ??2?(in1,in2)\r\n  h=seuif97.pt2h(p,t)\r\n  s=seuif97.pt2s(p,t)\r\n  v=seuif97.pt2v(p,t)\r\n  print(\"(p,t),h,s,v:\",\r\n        \"{:>.2f}\\t {:>.2f}\\t {:>.2f}\\t {:>.3f}\\t {:>.4f}\".format(p, t, h, s, v))\r\n\r\n  # ??(in1,in2,propertyid)\r\n  t = seuif97.ph(p, h, 1)\r\n  s = seuif97.ph(p, h, 5)\r\n  v = seuif97.ph(p, h, 3)\r\n\r\n  print(\"(p,h),t,s,v:\",\r\n       \"{:>.2f}\\t {:>.2f}\\t {:>.2f}\\t {:>.3f}\\t {:>.4f}\".format(p, h, t, s, v))\r\n\r\npropertyIDs in seuif97\r\n================================\r\n\r\n+---------------------------------------+-------------+----------+------------+\r\n|       Properties                      |    Unit     |  symbol  | propertyID |\r\n+=======================================+=============+==========+============+\r\n| Pressure                              |   MPa       |  p       |       0    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Temperature                           |   °C        |  t       |       1    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Density                               | kg/m^3      |  d       |       2    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Specific Volume                       | m^3/kg      |  v       |       3    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Specific enthalpy                     | kJ/kg       |  h       |       4    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Specific entropy                      | kJ/(kg·K)   |  s       |       5    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Specific  exergy                      | kJ/kg       |  e       |       6    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Specific internal energy              | kJ/kg       |   u      |       7    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Specific isobaric heat capacity       | kJ/(kg·K)   |  cp      |       8    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Specific isochoric heat capacity      | kJ/(kg·K)   |  cv      |       9    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Speed of sound                        | m/s         |  w       |      10    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Isentropic exponent                   |             |  ks      |      11    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Specific Helmholtz free energy        |   kJ/kg     |  f       |      12    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Specific Gibbs free energy            |   kJ/kg     |  g       |      13    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Compressibility factor                |             |  z       |      14    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Steam quality                         |             |  x       |      15    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Region                                |             |  r       |      16    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Isobaric volume expansion coefficient |   1/K       |  ec      |      17    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Isothermal compressibility            |   1/MPa     |  kt      |      18    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Partial derivative (dV/dT)p           | m3/(kg·K)   |  dvdt    |      19    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Partial derivative (dV/dP)T           | m3/(kg·MPa) |  dvdp    |      20    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Partial derivative (dP/dT)v           |   MPa/K     | dpdt     |      21    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Isothermal Joule-Thomson coefficient  | kJ/(kg·MPa) | iJTC\t |      22    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Joule-Thomson coefficient             |   K/MPa     | JTC      |      23    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Dynamic viscosity                     |   kg/(m·s)  |  dv      |      24    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Kinematic viscosity                   |   m^2/s     |  kv      |      25    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Thermal conductivity                  |   W/(m.K)   |  tc      |      26    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Thermal diffusivity                   |   um^2/s    |  td      |      27    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Prandtl number                        |             |  pr      |      28    |\r\n+---------------------------------------+-------------+----------+------------+\r\n| Surface tension                       |   mN/m      |  st      |      29    |\r\n+---------------------------------------+-------------+----------+------------+\r\n\r\n\r\n\r\n\r\n\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thermalogic/SEUIF97",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "seuif97",
    "package_url": "https://pypi.org/project/seuif97/",
    "platform": "Windows64/32",
    "project_url": "https://pypi.org/project/seuif97/",
    "project_urls": {
      "Homepage": "https://github.com/thermalogic/SEUIF97"
    },
    "release_url": "https://pypi.org/project/seuif97/1.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "IAPWS-IF97 high-speed shared library(Windows64/32,Linux64),Python API",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10729312,
  "releases": {
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdebddb69c255027f2c7235b1cf24318971efe8b96a471fb09ca1bb06fa929bc",
          "md5": "828423490876eeb2400aac5be4fff9cd",
          "sha256": "67d5ea8ced7a610da7ebd7fea731052586ae2ec358e9b700227756fc56964a86"
        },
        "downloads": -1,
        "filename": "seuif97-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "828423490876eeb2400aac5be4fff9cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 270706,
        "upload_time": "2021-06-24T08:07:26",
        "upload_time_iso_8601": "2021-06-24T08:07:26.486629Z",
        "url": "https://files.pythonhosted.org/packages/bd/eb/ddb69c255027f2c7235b1cf24318971efe8b96a471fb09ca1bb06fa929bc/seuif97-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bdebddb69c255027f2c7235b1cf24318971efe8b96a471fb09ca1bb06fa929bc",
        "md5": "828423490876eeb2400aac5be4fff9cd",
        "sha256": "67d5ea8ced7a610da7ebd7fea731052586ae2ec358e9b700227756fc56964a86"
      },
      "downloads": -1,
      "filename": "seuif97-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "828423490876eeb2400aac5be4fff9cd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 270706,
      "upload_time": "2021-06-24T08:07:26",
      "upload_time_iso_8601": "2021-06-24T08:07:26.486629Z",
      "url": "https://files.pythonhosted.org/packages/bd/eb/ddb69c255027f2c7235b1cf24318971efe8b96a471fb09ca1bb06fa929bc/seuif97-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}