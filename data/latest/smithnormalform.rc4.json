{
  "info": {
    "author": "Corbin McNeill",
    "author_email": "corbin.mc96@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "[![Build Status](https://travis-ci.org/corbinmcneill/SNF.svg?branch=master)](https://travis-ci.org/corbinmcneill/SNF)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/smithnormalform)\n[![PyPI version](https://badge.fury.io/py/smithnormalform.svg)](https://badge.fury.io/py/smithnormalform)\n[![Coverage Status](https://coveralls.io/repos/github/corbinmcneill/SNF/badge.svg)](https://coveralls.io/github/corbinmcneill/SNF)\n\n# Generalized Python Smith Normal Form \n\nThis project is a python package implementing the calculation of smith normal\nforms (SNFs) for matrices defined over arbitrary principal ideal domains.\n\nCurrently, this SNF library can calculate the SNF of matrices over either the\nintegers or the Gaussian integers. Additionally it can be easily extended to\nany principal ideal domain. \n\nWhile there appear to be several open source Smith Normal Form implementations\nin a variety of programming languages, many of these implementations only\noperate on the integers. This is, to our knowledge, the only open source \nSmith Normal Form calculator that operates over the generalized class of \nprincipal ideal domains.\n\n\nWhat are Principal Ideal Domains?\n---------------------------------\n\n[Principal ideal domains](https://en.wikipedia.org/wiki/Principal_ideal_domain)\nare integral domains (rings that behave like the integers) where every ideal is\na principal ideal. Speaking more generally, PIDs are a class of mathematical\nstructures that are more structured than a commutative ring, but not\nnecessarily as structured as a field.  Two items in a PID will always have a\ngreatest common denominator (although this GCD is not always easy to compute)\nand they will always have a unique factorization.  Elements of a PID do not\nnecessarily have inverses, which is why they are considered less structured\nthan a field.\n\nSome examples of PIDs include:\n\n- integers\n- Gaussian integers\n- fields (finite fields, rational numbers, real numbers, complex numbers)\n- single variable polynomials over a field\n\n\nWhat is the Smith Normal Form of a matrix?\n------------------------------------------\n\nThe Smith Normal form of a matrix is canonical way to represent a matrix\ndefined over a PID. The smith normal form of a matrix `A` is a matrix `J` such\nthat:\n\n- all non-diagonal elements of `J` are zero\n- along the diagonal of `J`, every element divides evenly into its predecessor\n  until a zero is encountered and then all future diagonal elements are zero\n- there exists unimodular matrices `S` and `T` such that `S*A*T = J`.\n\nAs an example if the matrix `A` is\n```\nA = [ 1 2 3 ]\n    [ 4 5 6 ],\n```\nthe Smith Normal Form of this matrix would be\n```\nJ = [ 1 0 0 ]\n    [ 0 3 0 ]\n```\nwith complementary matrices\n```\nS = [ 1  0 ]\n    [ 4 -1 ]\n```\nand\n```\nT = [ 1 -1  1 ]\n    [ 0 -1 -2 ]\n    [ 0  1  1 ].\n```\n\n\nExample Usage\n-------------\n\nThe following is an example of how to set up a Smith Normal Form problem over\nthe integers, run the computation, and interpret the results.\n\n```python\n>>> from smithnormalform import matrix, snfproblem, z\n>>> original_matrix = matrix.Matrix(2, 2, [z.Z(1), z.Z(2), z.Z(3), z.Z(4)])\n>>> prob = snfproblem.SNFProblem(original_matrix)\n>>> prob.computeSNF()\n>>> print(prob.isValid())\nTrue\n>>> print(prob.A)\n[ 1 2 ]\n[ 3 4 ]\n>>> print(prob.J)\n[ -2 1 ]\n[ 3 -1 ]\n>>> print(prob.S * prob.A * prob.T == prob.J)\nTrue\n```\n\n\n\nAdding New Principal Ideal Domains\n----------------------------------\n\nThe Smith Normal Form algorithm can be run on any subclass of the principal\nideal domain class `smithnormalform.pid.PID`. In order to subclass `PID`, you\nwill need to define several basic operations that are well defined on PIDs such\nas addition, multiplication, division, negation, and GCD.\n\nSince every PID is a [GCD Domain](https://en.wikipedia.org/wiki/GCD_domain),\ngreatest common divisor is a well defined operation for two elements of PID.\nJust because GCD is well-defined, however, does not mean it is easy (or even\ntractable) to compute. One way to find the GCD of two elements is the\n[Euclidean algorithm](https://en.wikipedia.org/wiki/Euclidean_algorithm);\nhowever, the Euclidean algorithm can only be applied to [Euclidean\ndomains](https://en.wikipedia.org/wiki/Euclidean_domain). While all Euclidean\ndomains are PIDs, not all PIDs are Euclidean domains.\n\nThis leaves us in an unfortunate position. While the Smith Normal Form\nalgorithm implemented here is efficient in-and-of-itself and works for all\nPIDs, it is only efficient if GCD can be computed efficiently, which is not\ngenerally speaking true for all PIDs.\n\nWe resolve this conflict in the following way: We provide an abstract class for\nEuclidean domains (`smithnormalform.ed.ED`) that implements the euclidean\nalgorithm for you. Extending this class requires you define a norm for your\nEuclidean domain; however, once you do so the GCD function required for PIDs\nwill be completed for you without you needing to implement the Euclidean\nalgorithm for yourself.\n\nIf you would like to run this algorithm on a PID that is not a Euclidean\ndomain, you can extend the PID class `smithnormalform.pid.PID` directly,\nbypassing the Euclidean domain class. Doing this will require you to implement\nthe GCD function directly. Please note that GCDs are requested frequently\nduring the Smith Normal Form calculation so if the GCD function isn't efficient\nthe Smith Normal Form computation may be intractable.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/corbinmcneill/snf",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "smithnormalform",
    "package_url": "https://pypi.org/project/smithnormalform/",
    "platform": "",
    "project_url": "https://pypi.org/project/smithnormalform/",
    "project_urls": {
      "Homepage": "https://github.com/corbinmcneill/snf"
    },
    "release_url": "https://pypi.org/project/smithnormalform/0.6.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A tool for computing the Smith Normal Forms over arbitrary Principle Ideal Domains",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9130079,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0b5a382add1f49e51c42b208580588efc97946c3248b47868d1c4f80a22c808",
          "md5": "50caa1c3c612281f18c0ff98d7d8b07c",
          "sha256": "6f9abf90d410aeafc053069c3e77d1659f4ebf9a610cf0c9b569301d34d8f925"
        },
        "downloads": -1,
        "filename": "smithnormalform-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50caa1c3c612281f18c0ff98d7d8b07c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22072,
        "upload_time": "2020-06-25T00:31:12",
        "upload_time_iso_8601": "2020-06-25T00:31:12.194712Z",
        "url": "https://files.pythonhosted.org/packages/b0/b5/a382add1f49e51c42b208580588efc97946c3248b47868d1c4f80a22c808/smithnormalform-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b089db6a0c1b83232d910396e7a2b326ad3f41c893ea81ebe82a87bd7aa3ffd",
          "md5": "c5e5db02802e0acc2b169f3a5570c223",
          "sha256": "bb95fc277fc98fc9c5e848f45aed053f8e660c9264865d19fc68cb34f3e7f80d"
        },
        "downloads": -1,
        "filename": "smithnormalform-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c5e5db02802e0acc2b169f3a5570c223",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8320,
        "upload_time": "2020-06-25T00:31:13",
        "upload_time_iso_8601": "2020-06-25T00:31:13.129657Z",
        "url": "https://files.pythonhosted.org/packages/9b/08/9db6a0c1b83232d910396e7a2b326ad3f41c893ea81ebe82a87bd7aa3ffd/smithnormalform-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52b73f7f9fa9dcf8bffa73f305bfef8e65387b6ce465dbc8b602bf0b4f52e945",
          "md5": "b809f400215d3aad72c62646b090a3f9",
          "sha256": "750b0f5c42c8f7ff2a01de0974a35e15bb7a405bfa34dd0b8403dcb8ae386749"
        },
        "downloads": -1,
        "filename": "smithnormalform-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b809f400215d3aad72c62646b090a3f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24394,
        "upload_time": "2020-06-25T21:02:53",
        "upload_time_iso_8601": "2020-06-25T21:02:53.776916Z",
        "url": "https://files.pythonhosted.org/packages/52/b7/3f7f9fa9dcf8bffa73f305bfef8e65387b6ce465dbc8b602bf0b4f52e945/smithnormalform-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e712bdfbcf0740c501e920ea3eed2638202f44da0b80fb1532d7a52d26a14e2",
          "md5": "6d62974ed9383914baacd4580a37bf01",
          "sha256": "e457e363921c0187de3243b30eb7c295084672546b439eaa3229ad031c826929"
        },
        "downloads": -1,
        "filename": "smithnormalform-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6d62974ed9383914baacd4580a37bf01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11985,
        "upload_time": "2020-06-25T21:02:54",
        "upload_time_iso_8601": "2020-06-25T21:02:54.732499Z",
        "url": "https://files.pythonhosted.org/packages/0e/71/2bdfbcf0740c501e920ea3eed2638202f44da0b80fb1532d7a52d26a14e2/smithnormalform-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1228d86629b008d8768d0df30a5084b8f4103c70235e24d140577e6dff7a11d6",
          "md5": "41da858d191a300a8a7dc39963a96198",
          "sha256": "b82c6c75acbe536d74cb3e5706023a2edf82d06aae31a7b681d7ecf0015df3fb"
        },
        "downloads": -1,
        "filename": "smithnormalform-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41da858d191a300a8a7dc39963a96198",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25210,
        "upload_time": "2020-07-11T08:01:56",
        "upload_time_iso_8601": "2020-07-11T08:01:56.903642Z",
        "url": "https://files.pythonhosted.org/packages/12/28/d86629b008d8768d0df30a5084b8f4103c70235e24d140577e6dff7a11d6/smithnormalform-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1be660f5dd8d76c58d9d654ef6af743e57b154eef08a5a6b129a86a951287d64",
          "md5": "3dcb14b388006027ee9ebb52c9407c6f",
          "sha256": "3523a3542e971d839ec277c80b4c7bf4e440fe694dbb32425bfae8e02d5a04a9"
        },
        "downloads": -1,
        "filename": "smithnormalform-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3dcb14b388006027ee9ebb52c9407c6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12985,
        "upload_time": "2020-07-11T08:01:57",
        "upload_time_iso_8601": "2020-07-11T08:01:57.878789Z",
        "url": "https://files.pythonhosted.org/packages/1b/e6/60f5dd8d76c58d9d654ef6af743e57b154eef08a5a6b129a86a951287d64/smithnormalform-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4c4d46011b9bbad7c943dfeb7eb29243cb3f9b2014b00b7010c9f7455eae985",
          "md5": "731bb732c955bd81e736c9c5256c9961",
          "sha256": "492d05230733002d592b8f66fd54e29c6ae7b135de12005c9d4bec784983b110"
        },
        "downloads": -1,
        "filename": "smithnormalform-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "731bb732c955bd81e736c9c5256c9961",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28671,
        "upload_time": "2021-01-14T05:37:26",
        "upload_time_iso_8601": "2021-01-14T05:37:26.086139Z",
        "url": "https://files.pythonhosted.org/packages/a4/c4/d46011b9bbad7c943dfeb7eb29243cb3f9b2014b00b7010c9f7455eae985/smithnormalform-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c10444df3dd7eedb4f22d36bd71050313f5259786e3570100fa55f8e1d12344a",
          "md5": "9e9ca33ddd9366e6ef6befbbb0e7e50a",
          "sha256": "7cfdcc5e9666394cc5304ef6b712fec3483b9b40afe2d2407f042e50f6792eca"
        },
        "downloads": -1,
        "filename": "smithnormalform-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9e9ca33ddd9366e6ef6befbbb0e7e50a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15466,
        "upload_time": "2021-01-14T05:37:27",
        "upload_time_iso_8601": "2021-01-14T05:37:27.186588Z",
        "url": "https://files.pythonhosted.org/packages/c1/04/44df3dd7eedb4f22d36bd71050313f5259786e3570100fa55f8e1d12344a/smithnormalform-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4c4d46011b9bbad7c943dfeb7eb29243cb3f9b2014b00b7010c9f7455eae985",
        "md5": "731bb732c955bd81e736c9c5256c9961",
        "sha256": "492d05230733002d592b8f66fd54e29c6ae7b135de12005c9d4bec784983b110"
      },
      "downloads": -1,
      "filename": "smithnormalform-0.6.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "731bb732c955bd81e736c9c5256c9961",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 28671,
      "upload_time": "2021-01-14T05:37:26",
      "upload_time_iso_8601": "2021-01-14T05:37:26.086139Z",
      "url": "https://files.pythonhosted.org/packages/a4/c4/d46011b9bbad7c943dfeb7eb29243cb3f9b2014b00b7010c9f7455eae985/smithnormalform-0.6.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c10444df3dd7eedb4f22d36bd71050313f5259786e3570100fa55f8e1d12344a",
        "md5": "9e9ca33ddd9366e6ef6befbbb0e7e50a",
        "sha256": "7cfdcc5e9666394cc5304ef6b712fec3483b9b40afe2d2407f042e50f6792eca"
      },
      "downloads": -1,
      "filename": "smithnormalform-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9e9ca33ddd9366e6ef6befbbb0e7e50a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15466,
      "upload_time": "2021-01-14T05:37:27",
      "upload_time_iso_8601": "2021-01-14T05:37:27.186588Z",
      "url": "https://files.pythonhosted.org/packages/c1/04/44df3dd7eedb4f22d36bd71050313f5259786e3570100fa55f8e1d12344a/smithnormalform-0.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}