{
  "info": {
    "author": "Subhojeet Pramanik",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Pytorch2Jax\n\n[![PyPI version](https://badge.fury.io/py/pytorch2jax.svg)](https://badge.fury.io/py/pytorch2jax)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nPytorch2Jax is a small Python library that provides functions to wrap PyTorch models into Jax functions and Flax modules. It uses `dlpack` to convert between Pytorch and Jax tensors in-memory and executes Pytorch backend inside Jax wrapped functions. The wrapped functions are compaitible Jax backward-mode autodiff (`jax.grad` and `jax.vjp`) via `functorch.vjp`.\n\n## Installation\n\nYou can install the Pytorch2Jax package from PyPI via pip:\n```\npip install pytorch2jax\n```\n\n## Usage\n### Example 1: Wrap a Pytorch function to a function that accepts Jax tensors\n\n```python\nimport torch\nimport jax.numpy as jnp\nfrom pytorch2jax import py_to_jax_wrapper\n\n# Define a PyTorch function that multiples an input tensor with another tensor\n# and wrap it with the py_to_jax_wrapper decorator\n@py_to_jax_wrapper\ndef fn(x):\n    return torch.rand((10,10))*x\n\n\n# Call the wrapped function on a JAX array\nx = jnp.ones((10,10))\noutput = fn(x)\n\n# Print the output\nprint(output)\n\n```\n\n### Example 2: Convert a PyTorch model to a JAX function and differentiate with grad\n\nThe converted Jax function can be used seamlessly with Jax's `grad` function to compute gradients.\n```python\nimport jax.numpy as jnp\nimport jax\n\nimport torch.nn as pnn\n\nfrom pytorch2jax import convert_pytnn_to_jax\n\n# Create a PyTorch model\npyt_model = pnn.Linear(10, 10)\n\n# Convert PyTorch model to a JAX function\njax_fn, params = convert_pytnn_to_jax(pyt_model)\n\n# Define a function that uses the JAX function and returns the sum of its output\ndef fx(x):\n    return jax_fn(params, x).sum()\n\n# Compute the gradient of the function `fx` with respect to `x`\ngrad_fx = jax.grad(fx)\nx = jnp.ones((10,))\nprint(grad_fx(x))  # Prints the gradient of fx at x\n\n```\n\n### Example 3: Convert a PyTorch model to a Flax model class and do forward pass inside another Flax module\n\n```python\nimport jax.numpy as jnp\nimport jax\nimport torch.nn as pnn\nimport flax.linen as jnn\n\nfrom pytorch2jax import convert_pytnn_to_flax\nfrom typing import Any\n\n# Convert the PyTorch model to a Flax model using the 'convert_pytnn_to_flax' function\n# flax_module is the converted Flax model and params are the parameters of the converted Flax model\npyt_model = pnn.Linear(10, 10)\nflax_module, params = convert_pytnn_to_flax(pyt_model)\n\n# Define a new Flax module and define the flax_module attribute as the converted Flax model\n# The __call__ method of this module will call the __call__ method of the flax_module attribute\nclass SampleFlaxModule(jnn.Module):\n    flax_module: Any\n\n    @jnn.compact\n    def __call__(self, x):\n        return self.flax_module()(x)\n\n# Create an instance of the new Flax module\nflax_model = SampleFlaxModule(flax_module)\n\n# Initialize the parameters of the Flax model using random key and a 10x10 array of ones as input\nparams = flax_model.init(jax.random.PRNGKey(0), jnp.ones((10, 10)))\n\n# Apply the Flax model to the input to get the output\nflax_model.apply(params, jnp.ones((10, 10)))\n```\n\n# Contributing\n\nIf you encounter any bugs or issues while using pytorch2jax, or if you have any suggestions for improvements or new features, please open an issue on the GitHub repository at https://github.com/subho406/Pytorch2Jax.\n\n# License\n\nPytorch2Jax is released under the MIT License. See LICENSE for more information.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/subho406/Pytorch2Jax",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytorch2jax",
    "package_url": "https://pypi.org/project/pytorch2jax/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytorch2jax/",
    "project_urls": {
      "Homepage": "https://github.com/subho406/Pytorch2Jax"
    },
    "release_url": "https://pypi.org/project/pytorch2jax/0.1.0/",
    "requires_dist": [
      "torch",
      "jax",
      "jaxlib"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "Convert PyTorch models to Jax functions and Flax models",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16951020,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cd0286ea777109c110f0e53e999adba7c13c9e048768d76dc094fb485fd5521",
          "md5": "9a5543170ddc99d372414ca86a3a3a01",
          "sha256": "93313fe032b8fe5b404dcd7daed6c9b96ff6964a593a0849c70ac29a480f2867"
        },
        "downloads": -1,
        "filename": "pytorch2jax-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a5543170ddc99d372414ca86a3a3a01",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 4723,
        "upload_time": "2023-02-20T21:59:28",
        "upload_time_iso_8601": "2023-02-20T21:59:28.408997Z",
        "url": "https://files.pythonhosted.org/packages/9c/d0/286ea777109c110f0e53e999adba7c13c9e048768d76dc094fb485fd5521/pytorch2jax-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46b2d04b1192e05ec79204eddbaceec90036f4631d26055d4da166ff3376d648",
          "md5": "8022b3a0209059727ca18efc6304a49b",
          "sha256": "c579bbd23e1c7902c5ee636f0d32a24cd065302a30e4365b28b4dcd5f92e9936"
        },
        "downloads": -1,
        "filename": "pytorch2jax-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8022b3a0209059727ca18efc6304a49b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 5295,
        "upload_time": "2023-02-20T21:59:29",
        "upload_time_iso_8601": "2023-02-20T21:59:29.967868Z",
        "url": "https://files.pythonhosted.org/packages/46/b2/d04b1192e05ec79204eddbaceec90036f4631d26055d4da166ff3376d648/pytorch2jax-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9cd0286ea777109c110f0e53e999adba7c13c9e048768d76dc094fb485fd5521",
        "md5": "9a5543170ddc99d372414ca86a3a3a01",
        "sha256": "93313fe032b8fe5b404dcd7daed6c9b96ff6964a593a0849c70ac29a480f2867"
      },
      "downloads": -1,
      "filename": "pytorch2jax-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9a5543170ddc99d372414ca86a3a3a01",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 4723,
      "upload_time": "2023-02-20T21:59:28",
      "upload_time_iso_8601": "2023-02-20T21:59:28.408997Z",
      "url": "https://files.pythonhosted.org/packages/9c/d0/286ea777109c110f0e53e999adba7c13c9e048768d76dc094fb485fd5521/pytorch2jax-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "46b2d04b1192e05ec79204eddbaceec90036f4631d26055d4da166ff3376d648",
        "md5": "8022b3a0209059727ca18efc6304a49b",
        "sha256": "c579bbd23e1c7902c5ee636f0d32a24cd065302a30e4365b28b4dcd5f92e9936"
      },
      "downloads": -1,
      "filename": "pytorch2jax-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8022b3a0209059727ca18efc6304a49b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 5295,
      "upload_time": "2023-02-20T21:59:29",
      "upload_time_iso_8601": "2023-02-20T21:59:29.967868Z",
      "url": "https://files.pythonhosted.org/packages/46/b2/d04b1192e05ec79204eddbaceec90036f4631d26055d4da166ff3376d648/pytorch2jax-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}