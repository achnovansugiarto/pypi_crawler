{
  "info": {
    "author": "Germ√°n Chiocchia",
    "author_email": "germanchiocchia@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "=====\neq-dj-test-back\n=====\n\n'eq-dj-test-back' is a Django reusable app to help you make unit tests easier.\n\nRequirements\n------------\n1. djangorestframework\n\nQuick start\n-----------\n1. pip install eq-dj-test-back==<version>\n2. Add \"eq_dj_test_back\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        'eq_dj_test_back',\n        ...\n    ]\n\n3. Import the module like this:\n\n    from eq_dj_test_back.base_test_view import ViewsTestBase (or whatever TestBase you need)\n\nAnd that's all.\n\nUsage\n-----\n\n1. Testing a model functionality:\n    - Import the module:\n        from eq_dj_test_back.base_test_model import ModelTestBase\n\n    - Make a class for every class you need to test:\n        class TestSomeModel(ModelTestBase):\n            fixtures = ['some_model.json']\n\n            def setUp(self):\n                > Include the objects or what you feel necesary for the tests\n\n            def test_some_method(self):\n                self.base_test_model('method_name', 'maybe an assertion value', kwargs_of_method)\n                > This will make an assertion with the specified data\n\n-----\n2. Testing a serializer functionality:\n    - Import the module:\n        from eq_dj_test_back.base_test_serializer import SerializerTestBase\n    \n    - Make a class for every class you need to test:\n        class TestSomeSerializer(SerializerTestBase):\n            fixtures = ['some_serializer.json']\n\n            def setUp(self):\n                self.data = {required data for feed a serializer class}\n                self.serializer = SerializerClass\n                > Include the objects or what you feel necesary for the tests\n\n            def test_some_method(self):\n                self.assertEqual(\n                                self.base_test_ser('method_name', kwargs_of_method),\n                                'assertion_value or something')\n                > This will make a separated assertion using the instance or whatever the method returns\n\n-----\n3. Testing a view functionality:\n    - Import the module:\n        from eq_dj_test_back.base_test_view import ViewsTestBase\n    \n    - Make a class for every class you need to test:\n        class TestSomeView(ViewsTestBase):\n            fixtures = ['some_view.json']\n\n            def setUp(self):\n                self.user_pk = The pk used to authenticate the request\n                self.to_path = 'identifier to feed the reverse method' for the url path\n                self.data = {required data for generate a request}\n                self.view = SomeView.as_view() the view that you want to test itself\n                super(TestSomeView, self).setUp() used to extends the module's setUp method with the attrs before mentioned\n            \n            def test_some_method(self):\n                self.base_test_view(\n                    'method', data, status_code_to_assert,\n                    self.get_path(self.to_path, kwargs to reverse function), kwargs to view function)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "eq-dj-test-back",
    "package_url": "https://pypi.org/project/eq-dj-test-back/",
    "platform": "",
    "project_url": "https://pypi.org/project/eq-dj-test-back/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/eq-dj-test-back/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A Django app to help you make unit-tests easier",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11698759,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2126666ef60b4fcb6d8ac4972dbe754cb970e7b84759a28bde1240c200a01d8",
          "md5": "360274fb26e771036636a3f63477adf4",
          "sha256": "95d008b77b27e4e6dcf88697c02b3e5447346920e4495c4a861579c5dfdb90ca"
        },
        "downloads": -1,
        "filename": "eq-dj-test-back-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "360274fb26e771036636a3f63477adf4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5514,
        "upload_time": "2021-07-02T04:35:27",
        "upload_time_iso_8601": "2021-07-02T04:35:27.815267Z",
        "url": "https://files.pythonhosted.org/packages/a2/12/6666ef60b4fcb6d8ac4972dbe754cb970e7b84759a28bde1240c200a01d8/eq-dj-test-back-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1992e10407ada5c0eb98f199b5f07ecaffb9e33b85a17fb5b5940b9f1d3a8ba0",
          "md5": "92428aeaca397fb4ce67bec2974fe237",
          "sha256": "0117e4653fb142db9ed693027c818642b2c671b0c5ebdb43beea913ecdcdf19c"
        },
        "downloads": -1,
        "filename": "eq-dj-test-back-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "92428aeaca397fb4ce67bec2974fe237",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5358,
        "upload_time": "2021-09-06T19:44:12",
        "upload_time_iso_8601": "2021-09-06T19:44:12.822954Z",
        "url": "https://files.pythonhosted.org/packages/19/92/e10407ada5c0eb98f199b5f07ecaffb9e33b85a17fb5b5940b9f1d3a8ba0/eq-dj-test-back-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "109bd97f2f32c9f91ca641b68a248d330353e85805ef5e060d458cea0c029a22",
          "md5": "3b138c0106311583577b22a077f74290",
          "sha256": "016172e63179ebb315aa60c6f3c08411ab296dfcb66643f4948e1414284276f8"
        },
        "downloads": -1,
        "filename": "eq-dj-test-back-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3b138c0106311583577b22a077f74290",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5866,
        "upload_time": "2021-10-11T16:28:09",
        "upload_time_iso_8601": "2021-10-11T16:28:09.085952Z",
        "url": "https://files.pythonhosted.org/packages/10/9b/d97f2f32c9f91ca641b68a248d330353e85805ef5e060d458cea0c029a22/eq-dj-test-back-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9bdfa9c394806e3dad5ba3c1db53b2b11be21a5386a02c0a62d9d6236e5f6b1",
          "md5": "6511a50bd250a67d9e93dc2e10ae5777",
          "sha256": "9cb911368987df646c036dcca501d5e2a7a4090d1364dd8205f74de7a67ea7b1"
        },
        "downloads": -1,
        "filename": "eq-dj-test-back-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6511a50bd250a67d9e93dc2e10ae5777",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5718,
        "upload_time": "2021-10-12T12:57:44",
        "upload_time_iso_8601": "2021-10-12T12:57:44.385057Z",
        "url": "https://files.pythonhosted.org/packages/f9/bd/fa9c394806e3dad5ba3c1db53b2b11be21a5386a02c0a62d9d6236e5f6b1/eq-dj-test-back-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f9bdfa9c394806e3dad5ba3c1db53b2b11be21a5386a02c0a62d9d6236e5f6b1",
        "md5": "6511a50bd250a67d9e93dc2e10ae5777",
        "sha256": "9cb911368987df646c036dcca501d5e2a7a4090d1364dd8205f74de7a67ea7b1"
      },
      "downloads": -1,
      "filename": "eq-dj-test-back-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "6511a50bd250a67d9e93dc2e10ae5777",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5718,
      "upload_time": "2021-10-12T12:57:44",
      "upload_time_iso_8601": "2021-10-12T12:57:44.385057Z",
      "url": "https://files.pythonhosted.org/packages/f9/bd/fa9c394806e3dad5ba3c1db53b2b11be21a5386a02c0a62d9d6236e5f6b1/eq-dj-test-back-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}