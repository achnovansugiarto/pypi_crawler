{
  "info": {
    "author": "Asahi Ushio",
    "author_email": "asahi1992ushio@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "[![license](https://img.shields.io/badge/License-MIT-brightgreen.svg)](https://github.com/asahi417/relbert/blob/master/LICENSE)\n[![PyPI version](https://badge.fury.io/py/relbert.svg)](https://badge.fury.io/py/relbert)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/relbert.svg)](https://pypi.python.org/pypi/relbert/)\n[![PyPI status](https://img.shields.io/pypi/status/relbert.svg)](https://pypi.python.org/pypi/relbert/)\n\n# RelBERT\nWe release the package `relbert` that includes the official implementation of\n***Distilling Relation Embeddings from Pre-trained Language Models*** ([https://aclanthology.org/2021.emnlp-main.712/](https://aclanthology.org/2021.emnlp-main.712/))\nthat has been accepted by the [**EMNLP 2021 main conference**](https://2021.emnlp.org/)\n\n### What's RelBERT?\nRelBERT is a state-of-the-art lexical relation embedding model (i.e. model representing any word pair such as \"Paris-France\" as a fixed-length vector) based on large-scale pretrained masked language models. RelBERT also establishes a very strong baseline to solve analogies in a zero-shot transfer fashion and even outperform strong few-shot models such as [GPT-3](https://arxiv.org/abs/2005.14165) and [Analogical Proportion (AP)](https://aclanthology.org/2021.acl-long.280/).\n\n|                    |   SAT (full) |   SAT |   U2 |   U4 |   Google |   BATS |\n|:-------------------|-------------:|------:|-----:|-----:|---------:|-------:|\n| [GloVe](https://nlp.stanford.edu/projects/glove/)              |       48.9 |  47.8 | 46.5 | 39.8 |     96   |   68.7 |\n| [FastText](https://fasttext.cc/)           |       49.7 |  47.8 | 43   | 40.7 |     96.6 |   72   |\n| [RELATIVE](http://josecamachocollados.com/papers/relative_ijcai2019.pdf)           |       24.9 |  24.6 | 32.5 | 27.1 |     62   |   39   |\n| [pair2vec](https://arxiv.org/abs/1810.08854)           |       33.7 |  34.1 | 25.4 | 28.2 |     66.6 |   53.8 |\n| [GPT-2 (AP)](https://aclanthology.org/2021.acl-long.280/)           | 41.4 | 35.9 | 41.2 | 44.9 | 80.4 | 63.5 |\n| [RoBERTa (AP)](https://aclanthology.org/2021.acl-long.280/)         | 49.6 | 42.4 | 49.1 | 49.1 | 90.8 | 69.7 |\n| [GPT-2 (tuned AP)](https://aclanthology.org/2021.acl-long.280/)     | 57.8 | 56.7 | 50.9 | 49.5 | 95.2 | 81.2 |\n| [RoBERTa (tuned AP)](https://aclanthology.org/2021.acl-long.280/)   | 55.8 | 53.4 | 58.3 | 57.4 | 93.6 | 78.4 | \n| [GPT3 (zeroshot)](https://arxiv.org/abs/2005.14165)               |     53.7   |  - | - | - |  - | - |\n| [GPT3 (fewshot)](https://arxiv.org/abs/2005.14165)               |     65.2   |  - | - | - |  - | - |\n| ***RelBERT***          |      ***72.2*** |  ***72.7*** | ***65.8*** | ***65.3*** |     ***94.2*** |   ***79.3*** |\n\n[comment]: <> (| ***RelBERT &#40;triplet&#41;***      |      ***67.9*** |  ***67.7*** | ***68.0*** | ***63.2*** |     ***94.2*** |   ***78.9*** |)\n[comment]: <> (| ***RelBERT &#40;nce&#41;***          |      ***72.2*** |  ***72.7*** | ***65.8*** | ***65.3*** |     ***94.2*** |   ***79.3*** |)\n\nWe also report the performance of RelBERT universal relation embeddings on lexical relation classification datasets, which reinforces the capability of RelBERT to model relations. \nAll datasets are public and available in the following links: [analogy questions](https://github.com/asahi417/AnalogyTools/releases/download/0.0.0/analogy_test_dataset.zip), [lexical relation classification](https://github.com/asahi417/AnalogyTools/releases/download/0.0.0/lexical_relation_dataset.zip).\nPlease have a look our paper to know more about RelBERT and [AnalogyTool](https://github.com/asahi417/AnalogyTools) or [AP paper](https://aclanthology.org/2021.acl-long.280/) for more information about the datasets.\n\n### What can we do with `relbert`?\nIn this repository, we release a python package `relbert` to work around with RelBERT and its checkpoints via [huggingface modelhub](https://huggingface.co/models) and [gensim](https://radimrehurek.com/gensim/).\nIn brief, what you can do with the `relbert` is summarized as below:\n- **Get a high quality embedding vector** given a pair of word\n- **Get similar word pairs (nearest neighbors)**\n- **Reproduce the results** of our EMNLP 2021 paper.\n\n## Get Started\n```shell\npip install relbert\n```\n\n## Play with RelBERT\nRelBERT can give you a high-quality relation embedding vector of a word pair. First, you need to define the model class with a RelBERT checkpoint.\n```python\nfrom relbert import RelBERT\nmodel = RelBERT()\n```\n\nThen you give a word pair to the model to get the embedding.\n```python\n# the vector has (1024,)\nv_tokyo_japan = model.get_embedding(['Tokyo', 'Japan'])\n```\n\nLet's run a quick experiment to check the embedding quality. Given candidate lists `['Paris', 'France']`, `['music', 'pizza']`, and `['London', 'Tokyo']`, the pair which shares\nthe same relation with the `['Tokyo', 'Japan']` is `['Paris', 'France']`. Would the RelBERT embedding be possible to retain it with simple cosine similarity?  \n```python\nfrom relbert import cosine_similarity\nv_paris_france, v_music_pizza, v_london_tokyo = model.get_embedding([['Paris', 'France'], ['music', 'pizza'], ['London', 'Tokyo']])\ncosine_similarity(v_tokyo_japan, v_paris_france)\n>>> 0.999\ncosine_similarity(v_tokyo_japan, v_music_pizza)\n>>> 0.991\ncosine_similarity(v_tokyo_japan, v_london_tokyo)\n>>> 0.996\n```\nBravo! The distance between `['Tokyo', 'Japan']` and `['Paris', 'France']` is the closest among the candidates.\nIn fact, this pipeline is how we evaluate the RelBERT on the analogy question.\n\n### Nearest Neighbours of RelBERT\nTo get the similar word pairs in terms of the RelBERT embedding, we convert the RelBERT embedding to a gensim model file with a fixed vocabulary.\nSpecifically, we take the vocabulary of the [RELATIVE embedding](http://josecamachocollados.com/papers/relative_ijcai2019.pdf) that is released as a part of\n[Analogy Tool](https://github.com/asahi417/AnalogyTools#relative-embedding), and generate the embedding for all the word pairs with RelBERT (`asahi417/relbert-roberta-large`).\nFollowing the original vocabulary representation, words are joined by `__` and multiple token should be combined by `_` such as `New_york__Tokyo`.\n\nThe RelBERT embedding gensim file can be found [here](https://drive.google.com/file/d/1z3UeWALwf6EkujI3oYUCwkrIhMuJFdRA/view?usp=sharing). For example, you can get the nearest neighbours as below.\n```python\nfrom gensim.models import KeyedVectors\nmodel = KeyedVectors.load_word2vec_format('gensim_model.bin', binary=True)\nmodel.most_similar('Tokyo__Japan')\n>>>  [('Moscow__Russia', 0.9997282028198242),\n      ('Cairo__Egypt', 0.9997045993804932),\n      ('Baghdad__Iraq', 0.9997043013572693),\n      ('Helsinki__Finland', 0.9996970891952515),\n      ('Paris__France', 0.999695897102356),\n      ('Damascus__Syria', 0.9996891617774963),\n      ('Bangkok__Thailand', 0.9996803998947144),\n      ('Madrid__Spain', 0.9996673464775085),\n      ('Budapest__Hungary', 0.9996543526649475),\n      ('Beijing__China', 0.9996539354324341)]\n```\n\n\n## Citation\nIf you use any of these resources, please cite the following [paper](https://arxiv.org/abs/2110.15705):\n```\n@inproceedings{ushio-etal-2021-distilling,\n    title = \"Distilling Relation Embeddings from Pretrained Language Models\",\n    author = \"Ushio, Asahi  and\n      Camacho-Collados, Jose  and\n      Schockaert, Steven\",\n    booktitle = \"Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing\",\n    month = nov,\n    year = \"2021\",\n    address = \"Online and Punta Cana, Dominican Republic\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2021.emnlp-main.712\",\n    doi = \"10.18653/v1/2021.emnlp-main.712\",\n    pages = \"9044--9062\",\n    abstract = \"Pre-trained language models have been found to capture a surprisingly rich amount of lexical knowledge, ranging from commonsense properties of everyday concepts to detailed factual knowledge about named entities. Among others, this makes it possible to distill high-quality word vectors from pre-trained language models. However, it is currently unclear to what extent it is possible to distill relation embeddings, i.e. vectors that characterize the relationship between two words. Such relation embeddings are appealing because they can, in principle, encode relational knowledge in a more fine-grained way than is possible with knowledge graphs. To obtain relation embeddings from a pre-trained language model, we encode word pairs using a (manually or automatically generated) prompt, and we fine-tune the language model such that relationally similar word pairs yield similar output vectors. We find that the resulting relation embeddings are highly competitive on analogy (unsupervised) and relation classification (supervised) benchmarks, even without any task-specific fine-tuning. Source code to reproduce our experimental results and the model checkpoints are available in the following repository: https://github.com/asahi417/relbert\",\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/asahi417/relbert/archive/v2.0.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/asahi417/relbert",
    "keywords": "nlp",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "relbert",
    "package_url": "https://pypi.org/project/relbert/",
    "platform": null,
    "project_url": "https://pypi.org/project/relbert/",
    "project_urls": {
      "Download": "https://github.com/asahi417/relbert/archive/v2.0.2.tar.gz",
      "Homepage": "https://github.com/asahi417/relbert"
    },
    "release_url": "https://pypi.org/project/relbert/2.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "RelBERT: the state-of-the-art lexical relation embedding model.",
    "version": "2.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16547878,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33ecca5a41163e1cf6cf4b5ecc61130af7660868c531f008019255079f43ee27",
          "md5": "00587c495a788e31d90937a30e30c9a5",
          "sha256": "209eb5fbbeb4389147f7e88a1b89694a0ea74e3a485fbeca8e26c597a1e28a3f"
        },
        "downloads": -1,
        "filename": "relbert-0.0.0-py3.9.egg",
        "has_sig": false,
        "md5_digest": "00587c495a788e31d90937a30e30c9a5",
        "packagetype": "bdist_egg",
        "python_version": "0.0.0",
        "requires_python": ">=3.6",
        "size": 66593,
        "upload_time": "2021-09-05T21:43:32",
        "upload_time_iso_8601": "2021-09-05T21:43:32.387460Z",
        "url": "https://files.pythonhosted.org/packages/33/ec/ca5a41163e1cf6cf4b5ecc61130af7660868c531f008019255079f43ee27/relbert-0.0.0-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c469accfd7ded8d087f059298d7f54b711b814eaa6ea76de0655cc3f27fff942",
          "md5": "b8076fc5ebce277fd57783fea32186ea",
          "sha256": "4256990269e47962cfbd21213fbc367d65880f2ffe7fe23a01aa99a5ebf86ceb"
        },
        "downloads": -1,
        "filename": "relbert-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b8076fc5ebce277fd57783fea32186ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26323,
        "upload_time": "2021-09-06T21:14:32",
        "upload_time_iso_8601": "2021-09-06T21:14:32.442966Z",
        "url": "https://files.pythonhosted.org/packages/c4/69/accfd7ded8d087f059298d7f54b711b814eaa6ea76de0655cc3f27fff942/relbert-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4da8adce2f74e106242b11eec45b3ee325c29a24c08950808a21f0c22b598c67",
          "md5": "ff17a04c445cdee146c342d7afb16f93",
          "sha256": "2f7b15c5e43c654efe17a1155eb57e143793af63893fec6b8c630adb81346e3a"
        },
        "downloads": -1,
        "filename": "relbert-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ff17a04c445cdee146c342d7afb16f93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28256,
        "upload_time": "2021-09-10T10:08:29",
        "upload_time_iso_8601": "2021-09-10T10:08:29.987916Z",
        "url": "https://files.pythonhosted.org/packages/4d/a8/adce2f74e106242b11eec45b3ee325c29a24c08950808a21f0c22b598c67/relbert-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbc8f2631b9c60dc1c2b434c45cf89235a3fb830318daf9a2bd4bc16789dcb38",
          "md5": "a86c5470c397591425183c6aecee2bff",
          "sha256": "12d90966c884ade5409e046add1b2aca55bcfbc816c2ea9f8f13756d8fa44e94"
        },
        "downloads": -1,
        "filename": "relbert-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a86c5470c397591425183c6aecee2bff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28219,
        "upload_time": "2022-08-12T18:14:37",
        "upload_time_iso_8601": "2022-08-12T18:14:37.492702Z",
        "url": "https://files.pythonhosted.org/packages/db/c8/f2631b9c60dc1c2b434c45cf89235a3fb830318daf9a2bd4bc16789dcb38/relbert-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e21b3e392ce7780d08f36f954ba7095e6465606b42fb47c59ee10ca31762bd6",
          "md5": "cfadd69ac41dbbf199636699f9a7d203",
          "sha256": "ba74f0bafeb8a2adeb880f541488141994f25247e29ca0929a4f2e61d8a3ead3"
        },
        "downloads": -1,
        "filename": "relbert-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cfadd69ac41dbbf199636699f9a7d203",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29127,
        "upload_time": "2023-01-23T19:38:25",
        "upload_time_iso_8601": "2023-01-23T19:38:25.898768Z",
        "url": "https://files.pythonhosted.org/packages/1e/21/b3e392ce7780d08f36f954ba7095e6465606b42fb47c59ee10ca31762bd6/relbert-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a822ec24180279cd080363860d8adc7089cfdbe6e57aac45633ed7dc420ecdb1",
          "md5": "56e8993b3dfd77d61c3f1aaa19fbc71d",
          "sha256": "fa4c109cf54ff317a496426ddaea28659e958a2e0f2d7fff179f62e357d86266"
        },
        "downloads": -1,
        "filename": "relbert-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "56e8993b3dfd77d61c3f1aaa19fbc71d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28637,
        "upload_time": "2023-01-23T19:41:38",
        "upload_time_iso_8601": "2023-01-23T19:41:38.686367Z",
        "url": "https://files.pythonhosted.org/packages/a8/22/ec24180279cd080363860d8adc7089cfdbe6e57aac45633ed7dc420ecdb1/relbert-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7f985d03e6de2f04d3b85a6d8f04471d3ad0d3aa7a5f1aca30b5bd64669f4c9",
          "md5": "799c4ff7a7736e4c5e7ebcd314518d13",
          "sha256": "0bcb1ce2f42f321c51ff117d642f09f08d4ca8a45b1e57e1b53d4d67031d8af1"
        },
        "downloads": -1,
        "filename": "relbert-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "799c4ff7a7736e4c5e7ebcd314518d13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28801,
        "upload_time": "2023-01-24T14:31:40",
        "upload_time_iso_8601": "2023-01-24T14:31:40.728608Z",
        "url": "https://files.pythonhosted.org/packages/a7/f9/85d03e6de2f04d3b85a6d8f04471d3ad0d3aa7a5f1aca30b5bd64669f4c9/relbert-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7f985d03e6de2f04d3b85a6d8f04471d3ad0d3aa7a5f1aca30b5bd64669f4c9",
        "md5": "799c4ff7a7736e4c5e7ebcd314518d13",
        "sha256": "0bcb1ce2f42f321c51ff117d642f09f08d4ca8a45b1e57e1b53d4d67031d8af1"
      },
      "downloads": -1,
      "filename": "relbert-2.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "799c4ff7a7736e4c5e7ebcd314518d13",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 28801,
      "upload_time": "2023-01-24T14:31:40",
      "upload_time_iso_8601": "2023-01-24T14:31:40.728608Z",
      "url": "https://files.pythonhosted.org/packages/a7/f9/85d03e6de2f04d3b85a6d8f04471d3ad0d3aa7a5f1aca30b5bd64669f4c9/relbert-2.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}