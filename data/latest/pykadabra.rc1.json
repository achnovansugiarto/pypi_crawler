{
  "info": {
    "author": "",
    "author_email": "Meinhard <meinhardtestca@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Setup\n\nHow to save your 'GS_SERVICE_ACCOUNT' env-var to use this code\n```\nYour 'GS_SERVICE_ACCOUNT' needs to be the whole json file as a string instead of the path to the file.\nThen, it also needs to be encrypted. To have the correct format, copy the json file contents to your clipboard, then\ngo in the terminal and execute `pbpaste | base64 | pbcopy`. These commands will encrypt the json content and put it back\nto your clipboard. Then just paste the encrypted contents to your local env-var\n```\ni.e.\n\ncopy the content of the `.json` file to your memory and run the  following in terminal:\n```shell\npbpaste | base64 | pbcopy\n```\nthis will give you an encrypted string\n\nsave this sting as a envar called `GS_SERVICE_ACCOUNT`\n\n# Initiate\n\n```python\nfrom pyKadabra import kinesis\n\nsheet_url = 'https://docs.google.com/spreadsheets/d/1Alaj8Pb6sy3_W2oGb9WUoYznFof5W7kigAx/edit?usp=sharing'\nworking_sheet = kinesis.gsheets_handler(gsheet_url=sheet_url)\n```\n\n## Usage examples\n\n##### create sheet\n```python\nworking_sheet.create_sheet(worksheet='Psybeam')\n```\n\n##### delete\n```python\nworking_sheet.delete_sheet(worksheet='Psyshock') # sheet with name\nworking_sheet.delete_sheet(worksheet=1) # sheet with index\n```\n\n##### writ to sheets\n```python\nworking_sheet.write_to_sheet(input_dataframe=df_test, worksheet='Future Sight') # sheet with name\nworking_sheet.write_to_sheet(input_dataframe=df_test, worksheet=2) # sheet with index\n```\n\n##### count rows\n```python\nworking_sheet.count_rows(worksheet='Future Sight')\n```\n##### clear range\n```python\nworking_sheet.clear_range(worksheet='Future Sight') # entire sheet\nworking_sheet.clear_range(worksheet='Future Sight', clear_range_str='B2:D4') # subsection only\n```\n\n##### read from sheets\n```python\ndf_read = working_sheet.read_sheet(worksheet='Future Sight') # sheet with name\ndf_read = working_sheet.read_sheet(worksheet=1) # sheet with index\ndf_read2 = working_sheet.read_sheet(worksheet='Future Sight', target_range_str='B1:C4') # subsection only\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyKadabra",
    "package_url": "https://pypi.org/project/pyKadabra/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyKadabra/",
    "project_urls": {
      "Bug Tracker": "https://gitlab.com/Meinhard1/magic_sheets/-/issues",
      "Homepage": "https://gitlab.com/Meinhard1/magic_sheets"
    },
    "release_url": "https://pypi.org/project/pyKadabra/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A wrapper to use pygsheets",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17435418,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64d391cdb8a9d11b61701585d534bafb1719c7c437a053467d989d060bc71dbb",
          "md5": "eb26c440809d7de7ead5c73d8f865dac",
          "sha256": "713c05f2ea2234e118b0b6e3953cccc79137ed7b8b6df0fd9d21e86b6215c3c3"
        },
        "downloads": -1,
        "filename": "pykadabra-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb26c440809d7de7ead5c73d8f865dac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4732,
        "upload_time": "2023-03-24T19:44:01",
        "upload_time_iso_8601": "2023-03-24T19:44:01.171305Z",
        "url": "https://files.pythonhosted.org/packages/64/d3/91cdb8a9d11b61701585d534bafb1719c7c437a053467d989d060bc71dbb/pykadabra-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43fbcd38cfedb338d2e3d86968384f62391b968364e71bfc4467c504d82cf8c0",
          "md5": "57cffc9a96392ae4fae533a34280979c",
          "sha256": "89f7a3e30c13342ff165354dd8c8eda9e0d9773a13a876756c94e4d7406ab42b"
        },
        "downloads": -1,
        "filename": "pykadabra-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "57cffc9a96392ae4fae533a34280979c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5695773,
        "upload_time": "2023-03-24T19:44:06",
        "upload_time_iso_8601": "2023-03-24T19:44:06.634150Z",
        "url": "https://files.pythonhosted.org/packages/43/fb/cd38cfedb338d2e3d86968384f62391b968364e71bfc4467c504d82cf8c0/pykadabra-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64d391cdb8a9d11b61701585d534bafb1719c7c437a053467d989d060bc71dbb",
        "md5": "eb26c440809d7de7ead5c73d8f865dac",
        "sha256": "713c05f2ea2234e118b0b6e3953cccc79137ed7b8b6df0fd9d21e86b6215c3c3"
      },
      "downloads": -1,
      "filename": "pykadabra-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eb26c440809d7de7ead5c73d8f865dac",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4732,
      "upload_time": "2023-03-24T19:44:01",
      "upload_time_iso_8601": "2023-03-24T19:44:01.171305Z",
      "url": "https://files.pythonhosted.org/packages/64/d3/91cdb8a9d11b61701585d534bafb1719c7c437a053467d989d060bc71dbb/pykadabra-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43fbcd38cfedb338d2e3d86968384f62391b968364e71bfc4467c504d82cf8c0",
        "md5": "57cffc9a96392ae4fae533a34280979c",
        "sha256": "89f7a3e30c13342ff165354dd8c8eda9e0d9773a13a876756c94e4d7406ab42b"
      },
      "downloads": -1,
      "filename": "pykadabra-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "57cffc9a96392ae4fae533a34280979c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 5695773,
      "upload_time": "2023-03-24T19:44:06",
      "upload_time_iso_8601": "2023-03-24T19:44:06.634150Z",
      "url": "https://files.pythonhosted.org/packages/43/fb/cd38cfedb338d2e3d86968384f62391b968364e71bfc4467c504d82cf8c0/pykadabra-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}