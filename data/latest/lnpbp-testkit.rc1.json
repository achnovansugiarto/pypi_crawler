{
  "info": {
    "author": "Martin Habovstiak",
    "author_email": "martin.habovstiak@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Testing"
    ],
    "description": "# LNP/BP Testkit\n\nA framework for writing automated tests of applications built on top of LNP/BP\n\n## About\n\nThis framework allows you to easily test flow in your application involving LNP/BP payments.\nThe usual flow is:\n\n1. Create a payment request (BIP21 or BOLT11) in the application\n2. Pay the request\n3. Check if the application received the payment\n\nThis looks simple, but the step #2 is far from trivial.\nIt involves setting up regtest bitcoind, two LN nodes, opening a sufficiently big channel between the nodes, using the appropriate RPC API...\nThe aim of this project is to make step #2 two lines of Python:\n\n```python\nfrom lnpbp_testkit.cadr import network\nnetwork().auto_pay(request)\n```\n\nAs you can see from `cadr`, this integrates with [Cryptoanarchy Debian Repository](https://github.com/Kixunil/cryptoanarchy-deb-repo-builder) which is recommended but not mandatory.\nRead below for instructions on standalone use.\n\n## Supported and wanted features\n\n- [x] Pay any BIP21 request (with `bitcoin:` scheme)\n- [x] Pay any BOLT11 invoice (with or without `lightning:` scheme)\n- [x] Pay custom amount to chain address\n- [ ] Pay using LNURL-pay\n- [ ] Pay using LNURL-withdraw\n- [ ] Pay using LN keysend\n- [ ] Pay using PayJoin\n- [ ] Withdraw using BIP21 request\n- [ ] Withdraw using chain address\n- [ ] Withdraw using BOLT11\n- [ ] Withdraw using LNURL-withdraw\n- [ ] Withdraw using LNURL-pay\n- [ ] Withdraw using LN keysend\n- [ ] Withdraw using PayJoin\n- [ ] Support more complicated situations involving multiple LN nodes\n- [ ] Support non-LND LN implementations\n\nFeel free to submit PRs for wanted features!\n(If you're confused about LNURL: withdraw using pay and pay using withdraw are useful if you're testing wallets, not services.)\n\n## Usage \n\n### With Cryptoanarchy Debian Repository (recommended)\n\nThe Testkit is in the repository, just `apt install python3-lnpbp-testkit`.\n**Important: do NOT install it outside of apt! Versions different than what's in the repository may not work.**\nIf you don't have passwordless `sudo` you must set the permissions using `sudo usermod -a -G bitcoin-regtest,lnd-system-regtest $USER`.\nThe Testkit assumes your application is integrated with the repository too,\nspecifically with `bitcoin-regtest`/`lnd-system-regtest`.\n\nOnce you have created and obtained the payment request (e.g. using Selenium) you can just call `lnpbp_testkit.cadr.network().auto_pay(request)` to pay it.\n\nYes, it's that simple. :)\n\n### Without Cryptoanarchy Debian Repository\n\n0. Make sure you have `systemd` installed and active (warning: this is not the default in most Docker images!)\n1. Install `lnd` into your `$PATH`\n2. Setup regtest `bitcoind`\n3. Setup regtest `lnd` connected to `bitcoind`\n4. Copy `lnd-testkit-regtest@.service` file from this repository into `/etc/systemd/user/`\n5. Instantiate `Network` by supplying the required parameters:\n\n```python\nnetwork_config = {\n\t\"bitcoind_url\" : \"USERNAME:PASSWORD@HOST:PORT\",\n        \"bitcoind_public_port\": BITCOIN_RPC_PROXY_PORT, # optional, the port from bitcoind_url will be used if not present\n        \"zmq_tx_port\": ZMQPUBRAWTX_PORT,\n        \"zmq_block_port\": ZMQPUBRAWBLOCK_PORT,\n\t\"lnd_host\": \"REST_HOST:REST_PORT\",\n\t\"lnd_macaroon\": \"HEX_ENCODED_MACAROON\",\n\t\"lnd_tls_cert_file\": \"PATH_TO_LND_TLS_CERTIFICATE\",\n}\nnetwork = lnpbp_testkit.Network(network_config)\n```\n\n5. You can now pay the request using `network.auto_pay()`\n\n## FAQ\n\n### How do I pay an arbitrary amount to a chain address?\n\nUse `auto_pay_legacy(address, decimal_amount)` instead of `auto_pay`\n\n### Do I need to generate coins before I can pay the BIP21 request?\n\nNo, it's automatic, ad-hoc.\n\n### How do I setup the channels between the nodes?\n\nDon't, it's automatic, ad-hoc based on the amount in the invoice.\n\n### Do I need to create a Debian package for my application in order to test the integration with Cryptoanarchy Debian Repository?\n\nNo, just configure it with the appropriate settings and launch it before running the test.\nThat being said, it'd be nice if you avoid hard-coding the parameters of your app into the test - it will make writing tests for packaged application easier.\nI plan to support this use case more explicitly in the future.\nIt will be useful in CI to save time by skipping build of the Debian package.\n\n### Why does `auto_pay()` take so long to execute?\n\nOne of the key features of `auto_pay()` is that it generates coins/sets up channels on-demand.\nIt also spawns secondary LN node when needed.\nThis obviously takes some time and LND isn't particularly fast when it comes to initialization.\nIf you want to improve it, consider writing a PR against LND to speed it up, or complaining at their repository.\nAs another optimization, you can call the `warm_up()` method at the beginning of the test.\nThis will start LND asynchronously, so that you can perform other operations (such as setting up a web service using Selenium) in parallel to LND initializing.\n\n### Does this project use semantic versioning?\n\nYes. 0.2.0 will mean breaking change.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Kixunil/lnpbp-testkit",
    "keywords": "bitcoin lightning-network tests",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lnpbp-testkit",
    "package_url": "https://pypi.org/project/lnpbp-testkit/",
    "platform": "",
    "project_url": "https://pypi.org/project/lnpbp-testkit/",
    "project_urls": {
      "Homepage": "https://github.com/Kixunil/lnpbp-testkit"
    },
    "release_url": "https://pypi.org/project/lnpbp-testkit/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7.3",
    "summary": "A framework for writing automated tests of applications using LNP/BP",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8072243,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "383a5c5d8388309d527d52a0b558e7982ffa2c1852c55fa7f7a8a07d26d6f09e",
          "md5": "edf0ecc71723c461bc193a5afc48e61a",
          "sha256": "3a0b15322fa93b1825a603386ec8f2629cf4fda6a11aa48b1aeaa542d9573867"
        },
        "downloads": -1,
        "filename": "lnpbp-testkit-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "edf0ecc71723c461bc193a5afc48e61a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.3",
        "size": 13162,
        "upload_time": "2020-08-30T17:14:33",
        "upload_time_iso_8601": "2020-08-30T17:14:33.781107Z",
        "url": "https://files.pythonhosted.org/packages/38/3a/5c5d8388309d527d52a0b558e7982ffa2c1852c55fa7f7a8a07d26d6f09e/lnpbp-testkit-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "383a5c5d8388309d527d52a0b558e7982ffa2c1852c55fa7f7a8a07d26d6f09e",
        "md5": "edf0ecc71723c461bc193a5afc48e61a",
        "sha256": "3a0b15322fa93b1825a603386ec8f2629cf4fda6a11aa48b1aeaa542d9573867"
      },
      "downloads": -1,
      "filename": "lnpbp-testkit-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "edf0ecc71723c461bc193a5afc48e61a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.3",
      "size": 13162,
      "upload_time": "2020-08-30T17:14:33",
      "upload_time_iso_8601": "2020-08-30T17:14:33.781107Z",
      "url": "https://files.pythonhosted.org/packages/38/3a/5c5d8388309d527d52a0b558e7982ffa2c1852c55fa7f7a8a07d26d6f09e/lnpbp-testkit-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}