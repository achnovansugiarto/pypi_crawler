{
  "info": {
    "author": "Mathieu SERRURIER, Franck MAMALET, Thibaut BOISSIN, Mikaël CAPELLE, Justin PLAKOO",
    "author_email": "mathieu.serrurier@irt-saintexupery.com, franck.mamalet@irt-saintexupery.com, thibaut.boissin@irt-saintexupery.com, justin.plakoo@irt-saintexupery.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "<img src=\"docs/source/logo.svg#gh-light-mode-only\" alt=\"logo deel-torchlip\" style=\"width:500px;\"/>\n<img src=\"docs/source/logo_white.svg#gh-dark-mode-only\" alt=\"logo deel-torchlip\" style=\"width:500px;\"/>\n\n[![PyPI](https://img.shields.io/pypi/v/deel-torchlip.svg)](https://pypi.org/project/deel-torchlip)\n[![Python](https://img.shields.io/pypi/pyversions/deel-torchlip.svg)](https://pypi.org/project/deel-torchlip)\n[![Documentation](https://img.shields.io/badge/doc-url-blue.svg)](https://deel-ai.github.io/deel-torchlip)\n[![arXiv](https://img.shields.io/badge/arXiv-2006.06520-b31b1b.svg)](https://arxiv.org/abs/2006.06520)\n[![Tests](https://github.com/deel-ai/deel-torchlip/actions/workflows/python-tests.yml/badge.svg?branch=master)](https://github.com/deel-ai/deel-torchlip/actions/workflows/python-tests.yml)\n[![Linters](https://github.com/deel-ai/deel-torchlip/actions/workflows/python-lints.yml/badge.svg?branch=master)](https://github.com/deel-ai/deel-torchlip/actions/workflows/python-lints.yml)\n[![License](https://img.shields.io/github/license/deel-ai/deel-torchlip.svg)](https://github.com/deel-ai/deel-torchlip/blob/master/LICENSE)\n\n[deel-torchlip](https://deel-ai.github.io/deel-torchlip) is an open source Python API to\nbuild and train Lipschitz neural networks. It is built on top of PyTorch.\n\ndeel-torchlip provides:\n\n- **Easy-to-use Lipschitz layers** -- deel-torchlip layers are custom PyTorch layers and\n  are very user-friendly. No need to be an expert in Lipschitz networks!\n- **Custom losses for robustness** -- The provided losses help improving adversarial\n  robustness in classification tasks by increasing margins between outputs of the\n  network (see [our paper](https://arxiv.org/abs/2006.06520) for more information).\n- **Certified robustness** -- One main advantage of Lipschitz networks is the costless\n  computation of certificates ensuring that there is no adversarial attacks smaller than\n  these certified radii of robustness.\n\nFor TensorFlow/Keras users, we released the\n[deel-lip](https://deel-lip.readthedocs.io/en/latest/) package offering a similar\nimplementation based on Keras.\n\n## Install\n\nThe latest release can be installed using `pip`. The `torch` package will also be\ninstalled as a dependency. If `torch` is already present, be sure that the version is\ncompatible with the deel-torchlip version.\n\n```shell\n$ pip install deel-torchlip\n```\n\n## Usage\n\nCreating a Lipschitz network is similar to building a PyTorch model: standard layers are\nreplaced with their Lipschitz counterparts from deel-torchlip. PyTorch layers that are\nalready Lipschitz can still be used in Lipschitz networks, such as `torch.nn.ReLU()` or\n`torch.nn.Flatten()`.\n\n```python\nimport torch\nfrom deel import torchlip\n\n# Build a Lipschitz network with 4 layers, that can be used in a training loop,\n# like any torch.nn.Sequential network\nmodel = torchlip.Sequential(\n    torchlip.SpectralConv2d(\n        in_channels=3, out_channels=16, kernel_size=(3, 3), padding=\"same\"\n    ),\n    torchlip.GroupSort2(),\n    torch.nn.Flatten(),\n    torchlip.SpectralLinear(15544, 64)\n)\n```\n\nSee the [full documentation](https://deel-ai.github.io/deel-torchlip) for a complete API\ndescription and for our tutorials to get started.\n\n## Citation\n\nThis library was built to support the work presented in our CVPR 2021 paper\n[_Achieving robustness in classification using optimal transport with Hinge regularization_](https://arxiv.org/abs/2006.06520).\nIf you use our library for your work, please cite our paper :wink:\n\n```latex\n@misc{2006.06520,\nAuthor = {Mathieu Serrurier and Franck Mamalet and Alberto González-Sanz and Thibaut Boissin and Jean-Michel Loubes and Eustasio del Barrio},\nTitle = {Achieving robustness in classification using optimal transport with hinge regularization},\nYear = {2020},\nEprint = {arXiv:2006.06520},\n}\n```\n\n## Contributions\n\nContributions are welcome! You can open an\n[issue](https://github.com/deel-ai/deel-torchlip/issues) or fork this repository and\npropose a [pull-request](https://github.com/deel-ai/deel-torchlip/pulls). The\ndevelopment environment with all required dependencies should be installed by running:\n\n```shell\n$ make prepare-dev\n```\n\nCode formatting and linting are performed with `black` and `flake8`. Tests are run with\n`pytest`. These three commands are gathered in:\n\n```shell\n$ make test\n```\n\nFinally, commits should respect pre-commit hooks. To be sure that your code changes are\naccepted, you can run the following target:\n\n```shell\n$ make check_all\n```\n\n## License\n\nCopyright IRT Antoine de Saint Exupéry et Université Paul Sabatier Toulouse III - All\nrights reserved. DEEL is a research program operated by IVADO, IRT Saint Exupéry, CRIAQ\nand ANITI - https://www.deel.ai/\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this\nsoftware and associated documentation files (the \"Software\"), to deal in the Software\nwithout restriction, including without limitation the rights to use, copy, modify,\nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or\nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\nPURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT\nOR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n## Acknowledgments\n\nThis project received funding from the French \"Investing for the Future – PIA3\" program\nwithin the Artiﬁcial and Natural Intelligence Toulouse Institute (ANITI). The authors\ngratefully acknowledge the support of the [DEEL project](https://www.deel.ai/).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/deel-ai/deel-torchlip",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deel-torchlip",
    "package_url": "https://pypi.org/project/deel-torchlip/",
    "platform": null,
    "project_url": "https://pypi.org/project/deel-torchlip/",
    "project_urls": {
      "Homepage": "https://github.com/deel-ai/deel-torchlip"
    },
    "release_url": "https://pypi.org/project/deel-torchlip/0.1.1/",
    "requires_dist": [
      "numpy",
      "inflection",
      "torch",
      "tox ; extra == 'dev'",
      "black ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "flake8-black ; extra == 'dev'",
      "numpy ; extra == 'dev'",
      "torch-testing ; extra == 'dev'",
      "sphinx (==3.3.1) ; extra == 'doc'",
      "recommonmark ; extra == 'doc'",
      "sphinx-rtd-theme ; extra == 'doc'",
      "sphinx-markdown-builder ; extra == 'doc'",
      "ipython ; extra == 'doc'",
      "nbsphinx ; extra == 'doc'",
      "sphinxcontrib-katex ; extra == 'doc'",
      "pytorch-sphinx-theme ; extra == 'doc'"
    ],
    "requires_python": ">=3.6",
    "summary": "PyTorch implementation for k-Lipschitz layers",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13904574,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d685190ed2f75f481fdc10dc33e49719372098372fdc73ff081418b39c1ad03",
          "md5": "93105173ecac2911024b711282e3c720",
          "sha256": "a96d58907381e8079a4ec9dc9f4355a990ba361f59f40ef4fa590e8c1b39e371"
        },
        "downloads": -1,
        "filename": "deel_torchlip-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93105173ecac2911024b711282e3c720",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42938,
        "upload_time": "2022-03-24T10:53:48",
        "upload_time_iso_8601": "2022-03-24T10:53:48.713759Z",
        "url": "https://files.pythonhosted.org/packages/6d/68/5190ed2f75f481fdc10dc33e49719372098372fdc73ff081418b39c1ad03/deel_torchlip-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ca367acad3647685d345bcf1e24c6d37b5d7a0a16a7c4c0e9f64f5f03c07609",
          "md5": "86ad2a5121a33b182d2b612e5d5abc6a",
          "sha256": "fd3a9eb0fdd9155774ba8bef3345d181341b189173536ac49e019b937eaa17b8"
        },
        "downloads": -1,
        "filename": "deel-torchlip-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "86ad2a5121a33b182d2b612e5d5abc6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23302,
        "upload_time": "2022-03-24T10:53:50",
        "upload_time_iso_8601": "2022-03-24T10:53:50.358480Z",
        "url": "https://files.pythonhosted.org/packages/8c/a3/67acad3647685d345bcf1e24c6d37b5d7a0a16a7c4c0e9f64f5f03c07609/deel-torchlip-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70f26ffbe7d47ca35332c4a5e45f9be9bf3e39d9453cd4c25c8ca294d5c9a51d",
          "md5": "cf381b374f8f82ab63ec7039bcdfe0f1",
          "sha256": "c2f311fc6ceaa53a655ce695ef7ca633212936f81eb6582a392c41ec9bddd6a5"
        },
        "downloads": -1,
        "filename": "deel_torchlip-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf381b374f8f82ab63ec7039bcdfe0f1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42758,
        "upload_time": "2022-05-23T15:31:19",
        "upload_time_iso_8601": "2022-05-23T15:31:19.409227Z",
        "url": "https://files.pythonhosted.org/packages/70/f2/6ffbe7d47ca35332c4a5e45f9be9bf3e39d9453cd4c25c8ca294d5c9a51d/deel_torchlip-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3e5fabca906a894e1e0d8fdfffc39c55a9011b24ef366eb0ad164d05cb3208a",
          "md5": "dcb39ad30d7b94ffcef3504b1f28d330",
          "sha256": "09cd77a56be9f3c18c0949a3bf4232860d04a71865d0e5d7a7b8b2e52ce7738a"
        },
        "downloads": -1,
        "filename": "deel-torchlip-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dcb39ad30d7b94ffcef3504b1f28d330",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23199,
        "upload_time": "2022-05-23T15:31:21",
        "upload_time_iso_8601": "2022-05-23T15:31:21.092095Z",
        "url": "https://files.pythonhosted.org/packages/a3/e5/fabca906a894e1e0d8fdfffc39c55a9011b24ef366eb0ad164d05cb3208a/deel-torchlip-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70f26ffbe7d47ca35332c4a5e45f9be9bf3e39d9453cd4c25c8ca294d5c9a51d",
        "md5": "cf381b374f8f82ab63ec7039bcdfe0f1",
        "sha256": "c2f311fc6ceaa53a655ce695ef7ca633212936f81eb6582a392c41ec9bddd6a5"
      },
      "downloads": -1,
      "filename": "deel_torchlip-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cf381b374f8f82ab63ec7039bcdfe0f1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 42758,
      "upload_time": "2022-05-23T15:31:19",
      "upload_time_iso_8601": "2022-05-23T15:31:19.409227Z",
      "url": "https://files.pythonhosted.org/packages/70/f2/6ffbe7d47ca35332c4a5e45f9be9bf3e39d9453cd4c25c8ca294d5c9a51d/deel_torchlip-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3e5fabca906a894e1e0d8fdfffc39c55a9011b24ef366eb0ad164d05cb3208a",
        "md5": "dcb39ad30d7b94ffcef3504b1f28d330",
        "sha256": "09cd77a56be9f3c18c0949a3bf4232860d04a71865d0e5d7a7b8b2e52ce7738a"
      },
      "downloads": -1,
      "filename": "deel-torchlip-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dcb39ad30d7b94ffcef3504b1f28d330",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 23199,
      "upload_time": "2022-05-23T15:31:21",
      "upload_time_iso_8601": "2022-05-23T15:31:21.092095Z",
      "url": "https://files.pythonhosted.org/packages/a3/e5/fabca906a894e1e0d8fdfffc39c55a9011b24ef366eb0ad164d05cb3208a/deel-torchlip-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}