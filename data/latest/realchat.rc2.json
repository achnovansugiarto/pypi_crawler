{
  "info": {
    "author": "gr1nch3",
    "author_email": "lloydm763@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications :: Chat"
    ],
    "description": "realchat\n==============================\n\n[![MIT License](https://img.shields.io/badge/License-MIT-green.svg)](https://choosealicense.com/licenses/mit/)\n\nFeatures\n\n- One to one chat\n- message encrypted before entering database\n- Less hassle\n\nrealchat is a Django app to conduct web-based chat.\n\nDetailed documentation is in the \"docs\" directory.\n\nQuick start\n------------\n\n1. Add to your settings.py\n\n     INSTALLED_APPS\n\n          ```\n               INSTALLED_APPS = [\n                    'chat',\n               ]\n          ```\n\n     To use the chat app, add it to your INSTALLED_APPS\n\n     Auth_USER_MODEL\n\n          ```\n               AUTH_USER_MODEL = 'app.User' # it can be whatever user model you create\n          ```\n\n     The auth user model will communicate with the chat app and provide the user's name, email and auth status.\n\n     LOGIN_URL\n\n          ```\n               LOGIN_URL = '/login/' # it can be whatever login url you create\n          ```\n\n     The login url provide url redirect from the chat view classes if the user is not logged in.\n\n2. Include the chat URLconf in your project urls.py like this\n\n          ```\n               path('chat/', include('chat.urls')),\n          ```\n\n3. Templating \\\n     The chat app views return the following context variables:\n\nMessageListView\n\ncontext\n\n     ```\n     \"inbox\": # returns a dictionary of users you have chats with, \n               # and the latest message between you both\n               # also including the time and unread message count\n     ```\n\nusage (django html)\n\n     ```\n          # use a for loop\n          {% for key, item in inbox.items %}\n               {{ key }} # to get the user you're chatting with \n               {{ item.message }} # to get the latest message between you two\n               {{ item.date }} # the date the lastest message was sent\n               {{ item.count }} # to get the unread messages count\n\n               # to give access the inbox of the user, make each item template \n               # of the loop clickable and the url should be:\n               {% url 'chat:inbox' key %}\n          {% endfor %}\n          # the url for messagelistview is:\n          {% chat:message_list %}\n\n     ```\n\nInboxView\n\ncontext\n\n     ```\n          \"messages\":     # returns all messages between you and the other user\n          \"other_person\": # returns the user object of the person you're \n                         # chatting with\n          \"inbox\":         # does the same as in the message list view, \n                         # it is passed to make sidepanel work like whatsapp web\n          \"you\": #         # your user object is passed also \n     ```\n\nusage (django html)\n\n     ```\n          # use a for loop\n          {{ other_person.username }} # will get the username to display\n          {% for message in messages%}\n               # you can seperate user message and other user messages by\n               # comparing the message sender and recipient objects\n               # i.e\n               {% if message.sender == other_person %}\n               {{ message.message }}\n               {{ message.date }}\n               {% else %}\n               # this will return messages that are not sent from the other_person\n               {{ message.message }}\n               {{ message.date }}\n               {% endif %} \n\n          # finally, when sending messages to a user, create the following \n          # input tags in your from\n               # hidden\n               <input type=\"hidden\" name=\"recipient\" value=\"{{ other_person.pk }}\">\n               <input type=\"hidden\" name=\"you\" value=\"{{ you.pk }}\">\n          # get the message\n          <input type=text name=\"message\" placeholder=\"...\">\n\n          # the action of the form should be:\n          {% url 'chat:inbox' other_person.username %}\n\n          {% endfor %}\n\n          # to use the inbox context,\n          # extend the messaelist template\n     ```\n\nUserListView\n\ncontext\n\n     ```\n          # usser list view has one context\n          \"users\": # returns all users excluding the user logged in\n     ```\n\nusage\n\n     ```\n          # use a for loop and style your template however\n     ```\n\n4.Run `python manage.py migrate` to create the chat models.\n\n5.Visit <http://127.0.0.1:8000/chat/> to participate in the to see a messages.\n\nContributing\n\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.example.com/",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "realchat",
    "package_url": "https://pypi.org/project/realchat/",
    "platform": null,
    "project_url": "https://pypi.org/project/realchat/",
    "project_urls": {
      "Homepage": "https://www.example.com/"
    },
    "release_url": "https://pypi.org/project/realchat/1.2/",
    "requires_dist": [
      "Django (>=4.0)",
      "django-cryptography (>=1.1)"
    ],
    "requires_python": ">=3.9",
    "summary": "A Django one to one chat application",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15093237,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3473d57f750b649a9825256efd4e6f7f8adf389162a382de8786b7476ecbda8",
          "md5": "dc05d324312dc6014d1a527005c76651",
          "sha256": "19402fd296e82c74255f7c71e0e2bfe112db1250a2fd70a1029285e245c7f0e1"
        },
        "downloads": -1,
        "filename": "realchat-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc05d324312dc6014d1a527005c76651",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7547,
        "upload_time": "2022-09-14T15:06:40",
        "upload_time_iso_8601": "2022-09-14T15:06:40.449290Z",
        "url": "https://files.pythonhosted.org/packages/e3/47/3d57f750b649a9825256efd4e6f7f8adf389162a382de8786b7476ecbda8/realchat-1.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "url reversal error"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08ecdcf07097defffe09cc213ba122d310f5ea4dec5ccc99f784e36e8a6a0751",
          "md5": "89f900b85bf5dfd13dcb17c4d5d61140",
          "sha256": "3d9465a54f32cb7a23c281ce2acc5132f2348b674e74aa6a4286c8b1b542dbea"
        },
        "downloads": -1,
        "filename": "realchat-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "89f900b85bf5dfd13dcb17c4d5d61140",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 8208,
        "upload_time": "2022-09-14T15:06:43",
        "upload_time_iso_8601": "2022-09-14T15:06:43.071464Z",
        "url": "https://files.pythonhosted.org/packages/08/ec/dcf07097defffe09cc213ba122d310f5ea4dec5ccc99f784e36e8a6a0751/realchat-1.1.tar.gz",
        "yanked": true,
        "yanked_reason": "url reversal error"
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89eea7af7cc495196b3c5d3d2a72cf8dc58152219b7066853d95d49f590e0172",
          "md5": "c0bc1f0ab216b2c81079af6b155d8d7d",
          "sha256": "87a56d7f8b933501fe5a62cdd6841256a6bcb67bd7a4dc440086d6dbf3b4e550"
        },
        "downloads": -1,
        "filename": "realchat-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0bc1f0ab216b2c81079af6b155d8d7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7498,
        "upload_time": "2022-09-14T15:42:53",
        "upload_time_iso_8601": "2022-09-14T15:42:53.279013Z",
        "url": "https://files.pythonhosted.org/packages/89/ee/a7af7cc495196b3c5d3d2a72cf8dc58152219b7066853d95d49f590e0172/realchat-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "deb12edf9084360022e7903935b73748e593192fab3de72e58054e8fe7b011d3",
          "md5": "71a3d90dc6845e84e88485d85bf40684",
          "sha256": "7beee3a0dc6cc5f3ef576c61466f350b4099b58a17328441d78e756e850abf16"
        },
        "downloads": -1,
        "filename": "realchat-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "71a3d90dc6845e84e88485d85bf40684",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 8243,
        "upload_time": "2022-09-14T15:42:55",
        "upload_time_iso_8601": "2022-09-14T15:42:55.392421Z",
        "url": "https://files.pythonhosted.org/packages/de/b1/2edf9084360022e7903935b73748e593192fab3de72e58054e8fe7b011d3/realchat-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89eea7af7cc495196b3c5d3d2a72cf8dc58152219b7066853d95d49f590e0172",
        "md5": "c0bc1f0ab216b2c81079af6b155d8d7d",
        "sha256": "87a56d7f8b933501fe5a62cdd6841256a6bcb67bd7a4dc440086d6dbf3b4e550"
      },
      "downloads": -1,
      "filename": "realchat-1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c0bc1f0ab216b2c81079af6b155d8d7d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 7498,
      "upload_time": "2022-09-14T15:42:53",
      "upload_time_iso_8601": "2022-09-14T15:42:53.279013Z",
      "url": "https://files.pythonhosted.org/packages/89/ee/a7af7cc495196b3c5d3d2a72cf8dc58152219b7066853d95d49f590e0172/realchat-1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "deb12edf9084360022e7903935b73748e593192fab3de72e58054e8fe7b011d3",
        "md5": "71a3d90dc6845e84e88485d85bf40684",
        "sha256": "7beee3a0dc6cc5f3ef576c61466f350b4099b58a17328441d78e756e850abf16"
      },
      "downloads": -1,
      "filename": "realchat-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "71a3d90dc6845e84e88485d85bf40684",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 8243,
      "upload_time": "2022-09-14T15:42:55",
      "upload_time_iso_8601": "2022-09-14T15:42:55.392421Z",
      "url": "https://files.pythonhosted.org/packages/de/b1/2edf9084360022e7903935b73748e593192fab3de72e58054e8fe7b011d3/realchat-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}