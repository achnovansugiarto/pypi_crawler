{
  "info": {
    "author": "Daniel Jenson",
    "author_email": "djenson@stanford.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Big Local News Tools for Journalists\n[Harmonizer](#Harmonizer): attempts to standardize data.  \n[Labeler](#Labeler): machine learning assisted data labeling / categorization.  \n[PowerBI](#PowerBI): tools for scraping PowerBI dashboards.  \n\n\n# Harmonizer\nThe harmonizer attempts to standardize data. For instance, a column of data\nlike this:\n\nApple Inc.  \nAPPLE Inc.  \nAPPLE INC  \nAPPLE  \n\nWould be standardized to \"Apple Inc.\", so all four entries would have the same\nvalue. The methodology, usage, and examples are below. Understanding the\nmethodology will help to understand how it is used.\n\n## Methodology:\n- Harmonizing a column consists of two phases:\n  1. __OPTIONAL__: Identify \"stop words.\" Stop words are commonly occurring words\n     that carry little semantic value; in normal language, these are words\n     like \"a\", \"the\", \"of\", etc., but in the context of something like\n     corporate names, they may be words like \"LLC\", \"CO\", \"INTERNATIONAL\",\n     \"GROUP\", \"DBA\", etc. Identifying and removing these reduces the similarity\n     between unrelated companies, i.e. \"ACME INTERNATIONAL\" and \"APPLE\n     INTERNATIONAL\" might be ~50% similar, but once you strip \"INTERNATIONAL\"\n     from the names, they are 0% similar, which is most often what is desired.\n  1. Standardize the names; this consists of several steps:\n    - clean the target column:\n      - uppercase all tokens (words)\n      - remove punctuation\n      - remove stop words (loaded from `stop_words.csv` generated in optional\n        step 1; if this file doesn't exist, it doesn't remove any stop words)\n    - sort the target column (allows this algorithm to run in O(1) time)\n    - compare the current value to the previous value and calculate their\n      similarity (this program uses the harmonic mean of the partial ratio and\n      the sorted token ratio, see the python library\n      [fuzzywuzzy](https://pypi.org/project/fuzzywuzzy/) for the meaning of\n      these)\n    - if the similarity is above the given threshold, it assigns the same\n      `harmonizer_id` to the value, otherwise it creates a new ID\n    - identify the longest cleaned name for each group by ID and assign the\n      original name to that group\n\n## Use:\n1. Create a `stop_words.csv` file: `harmonizer stop_words <csv_name> <csv_column>`\n1. Harmonize the desired field: `harmonizer harmonize <csv_name> <csv_column> -t 0.85`\n  - the `-t 0.85` is optional and specifies a threshold between 0 and 1, with\n    values closer to 1 requiring a stricter match in order to assign the same\n    ID\n\n## Help:\n- General help: `harmonizer -h`\n- Stop words help: `harmonizer stop_words -h`\n- Harmonize help: `harmonizer harmonize -h`\n\n## Examples:\n- `cd <package-dir>/harmonizer/examples # change into examples directory`\n- H1B data:\n  - `harmonizer stop_words h1b_datahubexport-2019.csv Employer`\n    - outputs: `stop_words.csv`\n  - `harmonizer harmonize h1b_datahubexport-2019.csv Employer`\n    - time: requires about ~18s on a normal laptop\n    - uses: `stop_words.csv`\n    - outputs: `h1b_datahubexport-2019_harmonized.csv`\n- WARN data:\n  - `harmonizer stop_words Alaska_warn_raw.csv 'Company Name'`\n    - outputs: `stop_words.csv`\n  - `harmonizer harmonize Alaska_warn_raw.csv 'Company Name'`\n    - time: requires about ~1s on a normal laptop\n    - uses: `stop_words.csv`\n    - outputs: `Alaska_warn_raw_harmonized.csv`\n\n\n## Tuning:\n- This script outputs the original file with the following columns added:\n  - `<column>_harmonizer_cleaned`: contains the cleaned version of the\n    target column\n  - `<column>_harmonizer_score`: contains the similarity score that\n    compares the current row to the previous row\n  - `<column>_harmonizer_id`: contains the assigned harmonizer ID\n  - `<column>_harmonizer_standardized`: contains the standardized value\n- Look at the `<column>_harmonizer_score`, which represents the similarity\n  between the current and previous rows' values; you can raise or lower the\n  threshold with the `-t <value>` argument, i.e. raise it if you think two\n  things shouldn't be a match and lower it if you think two things should be a\n  match\n\n## Caveats:\n- This measure is not perfect; for instance, these companies probably will not\n  be identified as the same (although this doesn't appear to happen often in\n  H1B data):\n    - ACME GROUP / SPECIAL DIVISION X\n    - ACME GROUP / REAL ESTATE\n    - ACME GROUP / AGRICULTURE\n\n## Alternatives:\n- Attempted to use this\n  [approach](https://www.analyticsinsight.net/company-names-standardization-using-a-fuzzy-nlp-approach/),\n  but found that using a similarity matrix and affinity propagation doesn't\n  work, except for very small datasets (i.e. H1B data with ~51,000 rows crashes\n  a pretty decent computer); their algorithm runs in space and time of O(N^2),\n  while the one implemented here runs in O(N)\n\n\n# Labeler\nThis tool helps label free form text. It takes a csv with raw text and a list\nof labels and uses user input to train a model periodically, which then\npredicts labels for unlabeled texts.\n\n## Help\n- `labeler -h`\n\n## Use\n- `labeler start <csv> <text-column-name> <label-1> <label-2>...[OPTIONS]`\n- `labeler resume <checkpoint-pkl-path>`\n\n## Examples\n- `cd <package-dir>/labeler/examples # change into examples directory`\n- `labeler start examples/contraband.csv contraband alcohol drugs other weapons`\n  - runs labeler on `contraband.csv` with labels `alcohol`, `drugs`, `other`, and\n    `weapons`\n- `labeler start examples/contraband.csv contraband alcohol drugs other weapons -xor`\n  - runs labeler on `contraband.csv` with labels `alcohol`, `drugs`, `other`, and\n    `weapons`; however, this time, each record can only have 1 label, i.e. the\n    labels are mutually exclusive\n- follow the menu to label text or use the model to automatically label the\n  remaining texts, and then to save the labeled texts as a csv\n- this program also permits saving checkpoints, so labeling can be resumed at a\n  later point; this option can be accessed from the main menu\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/biglocalnews/tools",
    "keywords": "",
    "license": "GNU GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bln-tools",
    "package_url": "https://pypi.org/project/bln-tools/",
    "platform": "",
    "project_url": "https://pypi.org/project/bln-tools/",
    "project_urls": {
      "Homepage": "https://github.com/biglocalnews/tools"
    },
    "release_url": "https://pypi.org/project/bln-tools/0.0.2/",
    "requires_dist": [
      "fuzzywuzzy",
      "numpy",
      "pandas",
      "python-Levenshtein",
      "questionary",
      "sklearn"
    ],
    "requires_python": ">=3.6",
    "summary": "Big Local News Tools",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10997255,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d68a2ae544fd2fde69e75d8ae70a71021b170121159d57d850e66def2e2b6fbe",
          "md5": "51fbda112551ab591e9303b720560f52",
          "sha256": "f66ead84555b0a4c764b032ffcb33636d900873e696593c5092f80d5b8532b33"
        },
        "downloads": -1,
        "filename": "bln_tools-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "51fbda112551ab591e9303b720560f52",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7963,
        "upload_time": "2021-06-29T20:23:27",
        "upload_time_iso_8601": "2021-06-29T20:23:27.574824Z",
        "url": "https://files.pythonhosted.org/packages/d6/8a/2ae544fd2fde69e75d8ae70a71021b170121159d57d850e66def2e2b6fbe/bln_tools-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6726f49c42a216f2af9a9752605190d9c7077c0e466ceba8ea41f4897dcde7f0",
          "md5": "8ee6e79fb6f746f8f87e91f96e599bba",
          "sha256": "2a6f40dadca357b718e0762966cd3fe404a736b9c0fe4f872ac2ed342e5dabef"
        },
        "downloads": -1,
        "filename": "bln-tools-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8ee6e79fb6f746f8f87e91f96e599bba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5935,
        "upload_time": "2021-06-29T20:23:29",
        "upload_time_iso_8601": "2021-06-29T20:23:29.291658Z",
        "url": "https://files.pythonhosted.org/packages/67/26/f49c42a216f2af9a9752605190d9c7077c0e466ceba8ea41f4897dcde7f0/bln-tools-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3019febc56ae6f688942127b03f11803ec2766a3b0d1a2dfc78a024fe15b61f",
          "md5": "52ca2e3dec516072d00a552e064c5e5e",
          "sha256": "bdb0aa17406c129db08eb36ba3dbe37b84aadd1363282d3e4e2f5efd6ae10b0c"
        },
        "downloads": -1,
        "filename": "bln_tools-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52ca2e3dec516072d00a552e064c5e5e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24042,
        "upload_time": "2021-07-25T06:45:01",
        "upload_time_iso_8601": "2021-07-25T06:45:01.918960Z",
        "url": "https://files.pythonhosted.org/packages/e3/01/9febc56ae6f688942127b03f11803ec2766a3b0d1a2dfc78a024fe15b61f/bln_tools-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd94db2ccffbcb9e22edfb860d3565746b487597bfb847b3503759a962ebc4a9",
          "md5": "d1c4cfbc84aa90c1fbb37a1afeb76e24",
          "sha256": "b50d5d41c3cb54e58835d6954b819af246f81c07d2f38b3ae9ca854ed085c5f7"
        },
        "downloads": -1,
        "filename": "bln-tools-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d1c4cfbc84aa90c1fbb37a1afeb76e24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21263,
        "upload_time": "2021-07-25T06:45:03",
        "upload_time_iso_8601": "2021-07-25T06:45:03.859204Z",
        "url": "https://files.pythonhosted.org/packages/bd/94/db2ccffbcb9e22edfb860d3565746b487597bfb847b3503759a962ebc4a9/bln-tools-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3019febc56ae6f688942127b03f11803ec2766a3b0d1a2dfc78a024fe15b61f",
        "md5": "52ca2e3dec516072d00a552e064c5e5e",
        "sha256": "bdb0aa17406c129db08eb36ba3dbe37b84aadd1363282d3e4e2f5efd6ae10b0c"
      },
      "downloads": -1,
      "filename": "bln_tools-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "52ca2e3dec516072d00a552e064c5e5e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 24042,
      "upload_time": "2021-07-25T06:45:01",
      "upload_time_iso_8601": "2021-07-25T06:45:01.918960Z",
      "url": "https://files.pythonhosted.org/packages/e3/01/9febc56ae6f688942127b03f11803ec2766a3b0d1a2dfc78a024fe15b61f/bln_tools-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd94db2ccffbcb9e22edfb860d3565746b487597bfb847b3503759a962ebc4a9",
        "md5": "d1c4cfbc84aa90c1fbb37a1afeb76e24",
        "sha256": "b50d5d41c3cb54e58835d6954b819af246f81c07d2f38b3ae9ca854ed085c5f7"
      },
      "downloads": -1,
      "filename": "bln-tools-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d1c4cfbc84aa90c1fbb37a1afeb76e24",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 21263,
      "upload_time": "2021-07-25T06:45:03",
      "upload_time_iso_8601": "2021-07-25T06:45:03.859204Z",
      "url": "https://files.pythonhosted.org/packages/bd/94/db2ccffbcb9e22edfb860d3565746b487597bfb847b3503759a962ebc4a9/bln-tools-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}