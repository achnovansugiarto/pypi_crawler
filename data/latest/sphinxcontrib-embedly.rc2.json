{
  "info": {
    "author": "Jannis Leidel",
    "author_email": "jannis@leidel.info",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Documentation",
      "Topic :: Utilities"
    ],
    "description": "embedly extension\n=================\n\nThis is a sphinx extension for using Embedly_.\n\nThis extension enables you to embed anything that is supported by Embedly_ ,\ne.g.::\n\n   .. embedly:: http://www.youtube.com/watch?v=M_eYSuPKP3Y\n\n.. _Embedly: http://embed.ly/\n\n\nInstallation\n------------\n\n::\n\n   pip install sphinxcontrib-embedly\n\nConfiguration\n-------------\n\nSphinx\n^^^^^^\n\nTo enable this extension in Sphinx, add ``sphinxcontrib.embedly`` module to\nthe ``extensions`` option in the ``conf.py`` file.\n\n::\n\n   import os, sys\n\n   # Path to the folder where sphinxcontrib/embedly.py is\n   # NOTE: not needed if the package is installed in traditional way\n   # using setup.py, easy_install or pip\n   sys.path.append(os.path.abspath('/path/to/sphinxcontrib.embedly'))\n\n   # Enabled extensions\n   extensions = ['sphinxcontrib.embedly']\n\nDocutils\n^^^^^^^^\n\nIn case you use pure docutils projects such as Pelican feel free to add\nthe following somewhere to your code::\n\n   from sphinxcontrib.embedly import setup_docutils\n   setup_docutils()\n\n\nembedly_key\n^^^^^^^^^^^\nThen set the **required** configuration variable ``embedly_key`` in your\n``conf.py`` by signing up for for the free account on Embedly for the\nEmbed_ product. E.g.::\n\n   embedly_key = '<api-key-copied-from-your-account-page>'\n\nembedly_timeout\n^^^^^^^^^^^^^^^\n\nThere is also one optional configuration variable, the ``embedly_timeout``\nthat specifies the default timeout used when fetching the embed code from\nEmbedly (defaults to 60 seconds). E.g.::\n\n   embedly_timeout = 120\n\n.. _Embed: http://embed.ly/embed\n\nUsage\n-----\n\nThis directive fetches the embed code for the given URL and adds it into\nthe generated document.\n\nExamples::\n\n   .. embedly:: http://www.youtube.com/watch?v=M_eYSuPKP3Y\n\nYou can specify various options for the embedding as seen above.\n\nExample::\n\n   .. embedly:: http://www.youtube.com/watch?v=M_eYSuPKP3Y\n      :width: 450\n      :autoplay:\n      :frame:\n\nOptions\n^^^^^^^\n\n:maxwidth: the maximum width of the embed in pixels (optional)\n:maxheight: the maximum height of the embed in pixels  (optional)\n:width: the scaled width of rich and video embeds in pixels  (optional)\n:wmode: the \"wmode\" parameter to flash objects, options are\n        \"window\", \"opaque\" and \"transparent\"  (optional)\n:nostyle: boolean when given removes inline style elements from certain\n          embeds to be able to style them yourself (optional)\n:autoplay: boolean when given tells the video and rich embeds to\n           automatically play when the media is loaded (optional)\n:videosrc: boolean when given uses the ``video_src`` meta or Open Graph\n           tag to create a video object to embed (optional, defaults to 50)\n:words: integer value of words to be returned as the description,\n        as the closest sentence to that word count (optional)\n:chars: integer value of characters after which the description is\n        blindly truncated and added \"...\" (optional)\n:frame: boolean when given will wrap all embeds in iframes to help prevent\n        XSS attacks (optional, available in the paid products)\n:secure: boolean when given will serve embeds with a SSL connection\n         (optional, available in the paid products)\n\n\nChangelog\n---------\n\nv0.2 (2014-02-23)\n^^^^^^^^^^^^^^^^^\n\n- Handle embeds of the type \"rich\" such as Slideshare. Thanks to Doug Hellmann.\n\n- Ported over from Bitbucket repo to Github:\n\n    https://github.com/jezdez/sphinxcontrib-embedly\n\nv0.1 (2013-12-30)\n^^^^^^^^^^^^^^^^^\n\n- Initial release.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "http://pypi.python.org/pypi/sphinxcontrib-embedly",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/jezdez/sphinxcontrib-embedly",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "sphinxcontrib-embedly",
    "package_url": "https://pypi.org/project/sphinxcontrib-embedly/",
    "platform": "any",
    "project_url": "https://pypi.org/project/sphinxcontrib-embedly/",
    "project_urls": {
      "Download": "http://pypi.python.org/pypi/sphinxcontrib-embedly",
      "Homepage": "http://github.com/jezdez/sphinxcontrib-embedly"
    },
    "release_url": "https://pypi.org/project/sphinxcontrib-embedly/0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Sphinx \"embedly\" extension",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1009320,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aac9b0001dd190d8cc3e34a044e3710bc7d7ebe302a18681a8bf6260db5fd1f8",
          "md5": "87617531ab0c52742aafeb090acefca9",
          "sha256": "a1546638e81b509efbee3c4d6e4d7a611201382ed1de99e50824fe387f6b015a"
        },
        "downloads": -1,
        "filename": "sphinxcontrib-embedly-0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "87617531ab0c52742aafeb090acefca9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5182,
        "upload_time": "2013-12-30T14:17:41",
        "upload_time_iso_8601": "2013-12-30T14:17:41.144445Z",
        "url": "https://files.pythonhosted.org/packages/aa/c9/b0001dd190d8cc3e34a044e3710bc7d7ebe302a18681a8bf6260db5fd1f8/sphinxcontrib-embedly-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01fe0115bd6c5953de474232b74d9bb432476739333f703d2765c79e3f25cf76",
          "md5": "efbe244a16f268ceec11390a0801cf0e",
          "sha256": "1781b9e8108334acfd9c13e3cc28228510810985ae351e16995a959fc86c9013"
        },
        "downloads": -1,
        "filename": "sphinxcontrib-embedly-0.2.tar.gz",
        "has_sig": true,
        "md5_digest": "efbe244a16f268ceec11390a0801cf0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5718,
        "upload_time": "2014-02-23T18:12:07",
        "upload_time_iso_8601": "2014-02-23T18:12:07.293162Z",
        "url": "https://files.pythonhosted.org/packages/01/fe/0115bd6c5953de474232b74d9bb432476739333f703d2765c79e3f25cf76/sphinxcontrib-embedly-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "01fe0115bd6c5953de474232b74d9bb432476739333f703d2765c79e3f25cf76",
        "md5": "efbe244a16f268ceec11390a0801cf0e",
        "sha256": "1781b9e8108334acfd9c13e3cc28228510810985ae351e16995a959fc86c9013"
      },
      "downloads": -1,
      "filename": "sphinxcontrib-embedly-0.2.tar.gz",
      "has_sig": true,
      "md5_digest": "efbe244a16f268ceec11390a0801cf0e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5718,
      "upload_time": "2014-02-23T18:12:07",
      "upload_time_iso_8601": "2014-02-23T18:12:07.293162Z",
      "url": "https://files.pythonhosted.org/packages/01/fe/0115bd6c5953de474232b74d9bb432476739333f703d2765c79e3f25cf76/sphinxcontrib-embedly-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}