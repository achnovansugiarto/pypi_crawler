{
  "info": {
    "author": "SecNot",
    "author_email": "secnot@secnot.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Leaky Diodes\n\nLeaky diode is a data exfiltration test tool for *smart* data diodes, that is \ndata diodes with support for TCP pass-through with the help of some side channel\nfrom the isolated side. The attacks used are **flow modulation** and/or \n**close delay**:\n\n- **CLOSE DELAY** uses the delay between the request of one the secret's bits and\nthe time the server closes the connection to encode the bit value. (i.e.- 10 seconds\ndelay means a 0, 30 seconds delay a 1)\n\n- **FLOW MODULATION** uses tcp flow control mechanism to encode secret's bits as\na transfer speed. For example if the the bit requested by the client is 1 the server\nthrottles the speed to 300KB/s, if it's 0 to 100KB/s. The advantage of this attack is\nthat using a single connection makes it harder to detect.\n\n\n## Installation\n\nDownload the package or clone the repository, and then install with:\n\n```bash\npython3 setup.py install\n```\n\nor use pypi:\n\n```bash\npip install leaky_diode\n```\n\n## Usage\n\nOn the isolated side launch the server:\n\n```bash\nleaky_server public_ip port 'secret string that needs leaking'\n```\n\nOn the untrusted side launch the client and select one of the attacks,\n\n```bash\nleaky_client server_ip server_port --mode flow --partial\n```\n\nor\n\n```bash\nleaky_client server_ip server_port --mode close --partial\n```\n\nAnd just wait a few minutes to receive the first byte (it's the slowest), if you're not sure\nif it's working add --verbose option so it prints messages on each received bit.\n\n\n## Options\n\n```bash\nusage: leaky_client [-h] [--mode mode] [--low_delay delay] [--high_delay delay] [--low_rate rate] \n\t\t\t\t\t[--high_rate rate] [--sample_time time] [--settle_time time] [--partial]\n                    host port\n\nLeaky Diode is a data exfiltration test tool for data diodes\n\npositional arguments:\n  host                  Remore host address\n  port                  Remote host port\n\noptional arguments:\n  -h, --help            Show this help message and exit\n  --mode mode, -m mode  Attack mode 'flow' or 'close' (default: flow)\n  --low_delay delay     Close delay for low bits (default: 5s) (only Close Mode)\n  --high_delay delay    Close delay for high bits (default: 10s) (only Close Mode)\n  --low_rate rate       Tx rate for low bits (default: 64 KB/s) (only Flow Mode)\n  --high_rate rate      Tx rate for high bits (default: 300 KB/s) (only Flow Mode)\n  --sample_time time    Tx rate sampling interval (default: 3.0s) (only Flow Mode)\n  --settle_time time    Settle time between sending a bit request and the start of \n                        sampling (default: 8.0s) (only Flow Mode)\n  --partial             Show partial results each time another byte from the secret is received\n  --verbose             Show debugging messages\n```\n\n```bash\nusage: leaky_server [-h] host port secret_string\n\nLeaky Diode is a data exfiltration test tool for data diodes\n\npositional arguments:\n  host           Remore host address\n  port           Remote host port\n  secret_string  Attack mode 'flow' or 'close' (default: a secret string)\n\noptional arguments:\n  -h, --help     Show this help message and exit\n  -v, --verbose  Show debugging messages\n```\n\n## Performance\n\nThe attack throughput with the default parameters is around 1 B/min (yes, one byte per minute),\nyou can increase it by lowering the delay times in **close delay** mode, and the settle/sample\ntimes in **flow modulation** (the default values are very conservative)\n\nAn actual exfiltration attempt using this attack could easily leak a few KB per day, too slow\nfor large breachs, but enough for targeted attacks for keys/passwords or selected users data.\n\n\n## API\n\nIt is also possible to use leaky_diode as a package and include a server in your own app:\n\n\n* class LeakyServer(host, port, secret, ticks=100, max_connections=10)\n\n\t* host: (str) Listen interface ip addres ('' for all)\n\t* port: (int) Listen port\n\t* secret: (bytes) Secret to leak (max length 65535)\n\t* ticks: (int) Ticks per second the worker process use to throttle the connections.\n\t* max_connections: (int) Max concurrent connection the server can handle.\n\n\t* **start()**: Initialize and launch server worker processes\n    * **stop()**: Stop server and its workers\n\n\n```python\nfrom leaky_diode import LeakyServer\n\nleaky_server = LeakyServer('192.168.0.10', 9000, b'some secret byte string')\nleaky_server.start()\n\n# Do something else\n......\n\n# Close server before exit\nleaky_server.close()\n``` \n\n\n## TODO\n\n- Harden message parsing input validation (invalid lengths)\n- Use concurrent connection to increase exfiltration speed.\n- Tune flow modulation mode tx speeds .\n- Tune close delay mode delays.\n- Add CRC to the secret and secret length, or even better error correction. \n- Add resume capability so there is no need to get the secret in one go.\n- Add some tests.\n\n\n## References\n\n- Data Diodes [Wikipedia](https://en.wikipedia.org/wiki/Unidirectional_network)\n- Place holder so I remember to publish a post on the attacks\n- And another on transport and streaming protocols for data diodes\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/secnot/leaky_diode",
    "keywords": "data diode,diode,cybersecurity,security,hack,hacking,data,leak,exfiltration,data exfiltration,flow modulation,close delay,attack,pentesting,penetration testing",
    "license": "AGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "leaky-diode",
    "package_url": "https://pypi.org/project/leaky-diode/",
    "platform": "",
    "project_url": "https://pypi.org/project/leaky-diode/",
    "project_urls": {
      "Homepage": "https://github.com/secnot/leaky_diode"
    },
    "release_url": "https://pypi.org/project/leaky-diode/0.1.1/",
    "requires_dist": [
      "pathlib"
    ],
    "requires_python": "",
    "summary": "Leaky Diode is a data exfiltration test tool for data diodes, using flow modulation and close delay attacks",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8350533,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaaf62b0c9c5ac75a0216afe8cd54465fd533ccdcc3a480050186efa17d04b1d",
          "md5": "eac3d1dbfd2ca14daf1e84b8af02b3cf",
          "sha256": "18d3fcaf2c0742300e596ffcfde4c7119775b3010fa255282d9755e52c417a13"
        },
        "downloads": -1,
        "filename": "leaky_diode-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eac3d1dbfd2ca14daf1e84b8af02b3cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28015,
        "upload_time": "2020-10-06T10:42:36",
        "upload_time_iso_8601": "2020-10-06T10:42:36.812606Z",
        "url": "https://files.pythonhosted.org/packages/ea/af/62b0c9c5ac75a0216afe8cd54465fd533ccdcc3a480050186efa17d04b1d/leaky_diode-0.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Missing requirements"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e908295986acaeb22c5eb6a6308a1b52ccc125373931b808666d2495806c734",
          "md5": "d7f23d7e890605feb649cd3b78843ea9",
          "sha256": "661f247bd395840f586163e10a0f7fcadd16736837ff5b811fb6857b4022b63e"
        },
        "downloads": -1,
        "filename": "leaky_diode-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d7f23d7e890605feb649cd3b78843ea9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14778,
        "upload_time": "2020-10-06T10:42:39",
        "upload_time_iso_8601": "2020-10-06T10:42:39.793147Z",
        "url": "https://files.pythonhosted.org/packages/1e/90/8295986acaeb22c5eb6a6308a1b52ccc125373931b808666d2495806c734/leaky_diode-0.1.tar.gz",
        "yanked": true,
        "yanked_reason": "Missing requirements"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5da58e14511e055bebfe436a119ff58baaa7d99d414cf168d3910cf56a2c7bf6",
          "md5": "7b2e22e5cf128a324162de01740e251d",
          "sha256": "a9d68ad1f427e2d65d8d38425313bde04c62f2d071d413df1ccf269fa29691b1"
        },
        "downloads": -1,
        "filename": "leaky_diode-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b2e22e5cf128a324162de01740e251d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28064,
        "upload_time": "2020-10-06T10:58:33",
        "upload_time_iso_8601": "2020-10-06T10:58:33.146381Z",
        "url": "https://files.pythonhosted.org/packages/5d/a5/8e14511e055bebfe436a119ff58baaa7d99d414cf168d3910cf56a2c7bf6/leaky_diode-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "739a48091d597402e228a6de1921651fb979117d12ecdfc572d23a0619852976",
          "md5": "7f6e50db301e4000e6983eecb4b3c19a",
          "sha256": "e60521311bedfc16b17dd22653d788015f95b3f4f7bf0a813bede36e04bd2b8b"
        },
        "downloads": -1,
        "filename": "leaky_diode-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7f6e50db301e4000e6983eecb4b3c19a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14893,
        "upload_time": "2020-10-06T10:58:34",
        "upload_time_iso_8601": "2020-10-06T10:58:34.610467Z",
        "url": "https://files.pythonhosted.org/packages/73/9a/48091d597402e228a6de1921651fb979117d12ecdfc572d23a0619852976/leaky_diode-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5da58e14511e055bebfe436a119ff58baaa7d99d414cf168d3910cf56a2c7bf6",
        "md5": "7b2e22e5cf128a324162de01740e251d",
        "sha256": "a9d68ad1f427e2d65d8d38425313bde04c62f2d071d413df1ccf269fa29691b1"
      },
      "downloads": -1,
      "filename": "leaky_diode-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7b2e22e5cf128a324162de01740e251d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28064,
      "upload_time": "2020-10-06T10:58:33",
      "upload_time_iso_8601": "2020-10-06T10:58:33.146381Z",
      "url": "https://files.pythonhosted.org/packages/5d/a5/8e14511e055bebfe436a119ff58baaa7d99d414cf168d3910cf56a2c7bf6/leaky_diode-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "739a48091d597402e228a6de1921651fb979117d12ecdfc572d23a0619852976",
        "md5": "7f6e50db301e4000e6983eecb4b3c19a",
        "sha256": "e60521311bedfc16b17dd22653d788015f95b3f4f7bf0a813bede36e04bd2b8b"
      },
      "downloads": -1,
      "filename": "leaky_diode-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7f6e50db301e4000e6983eecb4b3c19a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14893,
      "upload_time": "2020-10-06T10:58:34",
      "upload_time_iso_8601": "2020-10-06T10:58:34.610467Z",
      "url": "https://files.pythonhosted.org/packages/73/9a/48091d597402e228a6de1921651fb979117d12ecdfc572d23a0619852976/leaky_diode-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}