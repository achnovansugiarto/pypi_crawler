{
  "info": {
    "author": "",
    "author_email": "\"Ryan J. Miller\" <rjmiller10@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Testing"
    ],
    "description": "===============\npytest-funparam\n===============\n\n``pytest-funparam`` makes it easy to write parametrized tests.\n\nUnlike ``pytest.mark.parametrize``, ``pytest-funparam``:\n\n* includes the failing parameter in pytest tracebacks;\n* enables static type checking of parameters; and\n* keeps parameters and assertions closer together.\n\n.. contents::\n\n\nInstallation\n============\n\nYou can install \"pytest-funparam\" via `pip`_ from `PyPI`_::\n\n    $ pip install pytest-funparam\n\n\nUsage\n=====\n\nInside a test function, decorate a function with the ``funparam`` fixture:\n\n.. code-block:: python\n\n    def test_addition(funparam):\n        @funparam\n        def verify_sum(a, b, expected):\n            assert a + b == expected\n\n        verify_sum(1, 2, 3)\n        verify_sum(2, 2, 5)  # OOPS!\n        verify_sum(4, 2, 6)\n\n\nAnd run pytest::\n\n    $ pytest\n    ============================= test session starts ==============================\n    collected 3 items\n\n    test_readme.py .F.                                                       [100%]\n\n    =================================== FAILURES ===================================\n    _______________________________ test_addition[1] _______________________________\n\n        def test_addition(funparam):\n            @funparam\n            def verify_sum(a, b, expected):\n                assert a + b == expected\n\n            verify_sum(1, 2, 3)\n    >       verify_sum(2, 2, 5)  # OOPS!\n\n    test_readme.py:7: \n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    a = 2, b = 2, expected = 5\n   \n        @funparam\n        def verify_sum(a, b, expected):\n    >       assert a + b == expected\n    E       assert (2 + 2) == 5\n\n    test_readme.py:4: AssertionError\n    ========================= 1 failed, 2 passed in 0.03s ==========================\n\n\nThe ``test_addition`` test case was split into 3 tests, one for each\n``verify_sum`` call.\n\nBecause ``funparam`` is parametrizing the test calls, it even works with\ncommands like ``pytest --last-failed``::\n\n    $ pytest --last-failed\n    ============================= test session starts ==============================\n    collected 1 item\n\n    test_readme.py F                                                         [100%]\n\n    =================================== FAILURES ===================================\n    _______________________________ test_addition[1] _______________________________\n\n        def test_addition(funparam):\n            @funparam\n            def verify_sum(a, b, expected):\n                assert a + b == expected\n\n            verify_sum(1, 2, 3)\n    >       verify_sum(2, 2, 5)  # OOPS!\n\n    test_readme.py:7: \n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    a = 2, b = 2, expected = 5\n   \n        @funparam\n        def verify_sum(a, b, expected):\n    >       assert a + b == expected\n    E       assert (2 + 2) == 5\n\n    test_readme.py:4: AssertionError\n    ============================== 1 failed in 0.01s ===============================\n\n\nMarkers\n-------\n\nMark tests by using the ``.marks()`` method of your funparam function.\n\n.. code-block:: python\n\n    import pytest\n\n    def test_addition(funparam):\n        @funparam\n        def verify_sum(a, b, expected):\n            assert a + b == expected\n\n        verify_sum(1, 2, 3)\n        verify_sum.marks(pytest.mark.skip)(2, 2, 5)\n        verify_sum(4, 2, 6)\n\n::\n\n    $ pytest\n    ============================= test session starts ==============================\n    collected 3 items\n\n    test_readme.py .s.                                                       [100%]\n\n    ========================= 2 passed, 1 skipped in 0.01s =========================\n\n\nTest IDs\n--------\n\nSimilarly, add an ``id`` to a test using the ``.id()`` method of your funparam\nfunction:\n\n.. code-block:: python\n\n    def test_addition(funparam):\n        @funparam\n        def verify_sum(a, b, expected):\n            assert a + b == expected\n\n        verify_sum.id(\"one and two\")(1, 2, 3)\n        verify_sum.id(\"two and two\")(2, 2, 5)\n        verify_sum.id(\"four and two\")(4, 2, 6)\n\n::\n\n    $ pytest --collect-only\n    ============================= test session starts ==============================\n    collected 3 items\n\n    <Module test_readme.py>\n      <Function test_addition[one and two]>\n      <Function test_addition[two and two]>\n      <Function test_addition[four and two]>\n\n    ========================== 3 tests collected in 0.01s ==========================\n\n\nYou can also use the shorthand for assigning an ``id``. (It does the same thing\nas calling ``.id()``.)\n\n.. code-block:: python\n\n    def test_addition(funparam):\n        @funparam\n        def verify_sum(a, b, expected):\n            assert a + b == expected\n\n        verify_sum[\"one and two\"](1, 2, 3)\n        verify_sum[\"two and two\"](2, 2, 5)\n        verify_sum[\"four and two\"](4, 2, 6)\n\n::\n\n    $ pytest --collect-only\n    ============================= test session starts ==============================\n    collected 3 items\n\n    <Module test_readme.py>\n      <Function test_addition[one and two]>\n      <Function test_addition[two and two]>\n      <Function test_addition[four and two]>\n\n    ========================== 3 tests collected in 0.01s ==========================\n\n\nType Annotations\n----------------\n\n``pytest-funparam`` has full type annotations. The ``funparam`` fixture returns\na ``FunparamFixture`` object. You can import it from ``pytest_funparam``:\n\n.. code-block:: python\n\n    import pytest\n    from pytest_funparam import FunparamFixture\n\n    def test_addition(funparam: FunparamFixture):\n\n        @funparam\n        def verify_sum(a: int, b: int , expected: int):\n            assert a + b == expected\n\n        # These are valid\n        verify_sum(1, 2, 3)\n        verify_sum['it accommodates ids'](2, 2, 4)\n        # Marks work too!\n        verify_sum.marks(pytest.mark.xfail)(2, 2, 9)\n\n        # This will be marked as invalid (since it's not an int)\n        verify_sum(1, '2', 3)\n\n        # Using id/marks will still preserve the function's typing.\n        verify_sum['should be an int'](1, 2, '3')\n\n::\n\n    $ mypy\n    test_readme.py:17: error: Argument 2 to \"verify_sum\" has incompatible type \"str\"; expected \"int\"\n    test_readme.py:20: error: Argument 3 to \"verify_sum\" has incompatible type \"str\"; expected \"int\"\n    Found 2 errors in 1 file (checked 1 source file)\n\n\nLicense\n=======\n\nDistributed under the terms of the `MIT`_ license, \"pytest-funparam\" is free and open source software\n\n\nIssues\n======\n\nIf you encounter any problems, please `file an issue`_ along with a detailed description.\n\n.. _`MIT`: http://opensource.org/licenses/MIT\n.. _`file an issue`: https://github.com/rjmill/pytest-funparam/issues\n.. _`pytest`: https://github.com/pytest-dev/pytest\n.. _`tox`: https://tox.readthedocs.io/en/latest/\n.. _`pip`: https://pypi.org/project/pip/\n.. _`PyPI`: https://pypi.org/project\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "\"Ryan J. Miller\" <rjmiller10@gmail.com>",
    "name": "pytest-funparam",
    "package_url": "https://pypi.org/project/pytest-funparam/",
    "platform": "",
    "project_url": "https://pypi.org/project/pytest-funparam/",
    "project_urls": {
      "homepage": "https://github.com/rjmill/pytest-funparam"
    },
    "release_url": "https://pypi.org/project/pytest-funparam/0.3.0/",
    "requires_dist": [
      "pytest >=4.6.0"
    ],
    "requires_python": ">=3.6",
    "summary": "An alternative way to parametrize test cases.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12195004,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3f6dd89f01a723defae52d7c7ad05c0dcddcbf77d13be26b72f7498ef3987d6",
          "md5": "ab5f42eef3352e4e9b8c7098bd408767",
          "sha256": "aeba15572921cf875674ca31be2d9f500d2d5a4d4321e9993a4c532589b86de8"
        },
        "downloads": -1,
        "filename": "pytest_funparam-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab5f42eef3352e4e9b8c7098bd408767",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5714,
        "upload_time": "2021-02-13T03:24:36",
        "upload_time_iso_8601": "2021-02-13T03:24:36.048324Z",
        "url": "https://files.pythonhosted.org/packages/f3/f6/dd89f01a723defae52d7c7ad05c0dcddcbf77d13be26b72f7498ef3987d6/pytest_funparam-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5156c18b3bcbf8ac33fbfa2989ed8920b405524d75a19c5fbcd4d6c9d30dd30e",
          "md5": "b8ae464e13ea18aee8009d384895819e",
          "sha256": "0ae6f22bc64c467b03dce13eeeb52cea0f333cf9e0b972c67efdca21492023e9"
        },
        "downloads": -1,
        "filename": "pytest-funparam-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b8ae464e13ea18aee8009d384895819e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5752,
        "upload_time": "2021-02-13T03:24:37",
        "upload_time_iso_8601": "2021-02-13T03:24:37.237981Z",
        "url": "https://files.pythonhosted.org/packages/51/56/c18b3bcbf8ac33fbfa2989ed8920b405524d75a19c5fbcd4d6c9d30dd30e/pytest-funparam-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5456e03b5a77883e702937779f89a3863b853885ef4dacf9f646af697eb96be4",
          "md5": "b41e47e6057996ef930a1565fd30e114",
          "sha256": "ee3e31dadb7dca4ecc394c3a828a5e704fbbc9ab30fca6ec4e1fc6eb65528a05"
        },
        "downloads": -1,
        "filename": "pytest_funparam-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b41e47e6057996ef930a1565fd30e114",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8286,
        "upload_time": "2021-04-23T22:17:29",
        "upload_time_iso_8601": "2021-04-23T22:17:29.149358Z",
        "url": "https://files.pythonhosted.org/packages/54/56/e03b5a77883e702937779f89a3863b853885ef4dacf9f646af697eb96be4/pytest_funparam-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d42d2b18cbf8f818d60a906fd30f76de9eb05a98c21fafdffd43007b8b21d5c",
          "md5": "fa15661f42a38fb3b9ffa5a848cb4f94",
          "sha256": "8fc31813b2d3edc1216e807a8c51e1fe732b6accf650416b845513d78e2d2939"
        },
        "downloads": -1,
        "filename": "pytest-funparam-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fa15661f42a38fb3b9ffa5a848cb4f94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6137,
        "upload_time": "2021-04-23T22:17:31",
        "upload_time_iso_8601": "2021-04-23T22:17:31.346508Z",
        "url": "https://files.pythonhosted.org/packages/8d/42/d2b18cbf8f818d60a906fd30f76de9eb05a98c21fafdffd43007b8b21d5c/pytest-funparam-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76ce2685cc20555a958c9a9a35746a2de64e9112ac5c719bbd9088f472544680",
          "md5": "3d47c5f5e3d31310e60d4d665d92846d",
          "sha256": "75f18aaf1e1452424a68da4752e3828f37d2242d885151c51e6a036d73ecc383"
        },
        "downloads": -1,
        "filename": "pytest_funparam-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d47c5f5e3d31310e60d4d665d92846d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6948,
        "upload_time": "2021-12-02T22:00:40",
        "upload_time_iso_8601": "2021-12-02T22:00:40.211716Z",
        "url": "https://files.pythonhosted.org/packages/76/ce/2685cc20555a958c9a9a35746a2de64e9112ac5c719bbd9088f472544680/pytest_funparam-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6435642daac19de80bd7b9d33118fa541acaa86b24ad351353b652528697d768",
          "md5": "4a0ad1b6d70b81d5a0c09a1a3d0971af",
          "sha256": "01011c123136b95455915af4a6381447e7127b2c4924574f37d4add1076fbb1c"
        },
        "downloads": -1,
        "filename": "pytest-funparam-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4a0ad1b6d70b81d5a0c09a1a3d0971af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14770,
        "upload_time": "2021-12-02T22:00:41",
        "upload_time_iso_8601": "2021-12-02T22:00:41.775425Z",
        "url": "https://files.pythonhosted.org/packages/64/35/642daac19de80bd7b9d33118fa541acaa86b24ad351353b652528697d768/pytest-funparam-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76ce2685cc20555a958c9a9a35746a2de64e9112ac5c719bbd9088f472544680",
        "md5": "3d47c5f5e3d31310e60d4d665d92846d",
        "sha256": "75f18aaf1e1452424a68da4752e3828f37d2242d885151c51e6a036d73ecc383"
      },
      "downloads": -1,
      "filename": "pytest_funparam-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3d47c5f5e3d31310e60d4d665d92846d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6948,
      "upload_time": "2021-12-02T22:00:40",
      "upload_time_iso_8601": "2021-12-02T22:00:40.211716Z",
      "url": "https://files.pythonhosted.org/packages/76/ce/2685cc20555a958c9a9a35746a2de64e9112ac5c719bbd9088f472544680/pytest_funparam-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6435642daac19de80bd7b9d33118fa541acaa86b24ad351353b652528697d768",
        "md5": "4a0ad1b6d70b81d5a0c09a1a3d0971af",
        "sha256": "01011c123136b95455915af4a6381447e7127b2c4924574f37d4add1076fbb1c"
      },
      "downloads": -1,
      "filename": "pytest-funparam-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4a0ad1b6d70b81d5a0c09a1a3d0971af",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14770,
      "upload_time": "2021-12-02T22:00:41",
      "upload_time_iso_8601": "2021-12-02T22:00:41.775425Z",
      "url": "https://files.pythonhosted.org/packages/64/35/642daac19de80bd7b9d33118fa541acaa86b24ad351353b652528697d768/pytest-funparam-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}