{
  "info": {
    "author": "",
    "author_email": "Nicholas Londowski <nick@phosmic.com>, Francis Salerno <frank@phosmic.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Processing",
      "Topic :: Utilities"
    ],
    "description": "# Regex-Toolkit\n\n[Regex-Toolkit](https://github.com/Phosmic/regex-toolkit): Effortlessly craft efficient [RE](https://docs.python.org/3/library/re.html) and [RE2](https://github.com/google/re2) expressions with user-friendly tools.\n\n## Requirements:\n\n**Regex-Toolkit** requires Python 3.9 or higher, is platform independent, and has no outside dependencies.\n\n## Issue reporting\n\nIf you discover an issue with Regex-Toolkit, please report it at [https://github.com/Phosmic/regex-toolkit/issues](https://github.com/Phosmic/regex-toolkit/issues).\n\n## License\n\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with this program. If not, see https://www.gnu.org/licenses/.\n\n---\n\n## Installing\n\nMost stable version from [**PyPi**](https://pypi.org/project/regex-toolkit/):\n\n```bash\npip install regex-toolkit\n```\n\nDevelopment version from [**GitHub**](https://github.com/Phosmic/regex-toolkit):\n\n```bash\ngit clone git+https://github.com/Phosmic/regex-toolkit.git\ncd regex-toolkit\npip install .\n```\n\n## Usage\n\nImport packages:\n\n```python\nimport re\n# and/or\nimport re2\n```\n\n```python\n# Can import directly if desired\nimport regex_toolkit as rtk\n```\n\n---\n\n## Library\n\n### iter_sort_by_len\n\nFunction to iterate strings sorted by length.\n\n| Function Signature                                |\n| :------------------------------------------------ |\n| iter_sort_by_len(package_name, \\*, reverse=False) |\n\n| Parameters                 |                                                 |\n| :------------------------- | :---------------------------------------------- |\n| **texts**_(Iterable[str])_ | Strings to sort.                                |\n| **reverse**_(int)_         | Sort in descending order (longest to shortest). |\n\nExample (ascending shortest to longest):\n\n```python\nwords = [\"longest\", \"short\", \"longer\"]\nfor word in rtk.iter_sort_by_len(words):\n    print(word)\n```\n\nOutput:\n\n```text\nshort\nlonger\nlongest\n```\n\nExample reversed (descending longest to shortest):\n\n```python\nwords = [\"longest\", \"short\", \"longer\"]\nfor word in rtk.iter_sort_by_len(words, reverse=True):\n    print(word)\n```\n\nOutput:\n\n```text\nlongest\nlonger\nshort\n```\n\n### sort_by_len\n\nFunction to get a tuple of strings sorted by length.\n\n| Function Signature                           |\n| :------------------------------------------- |\n| sort_by_len(package_name, \\*, reverse=False) |\n\n| Parameters                 |                                                 |\n| :------------------------- | :---------------------------------------------- |\n| **texts**_(Iterable[str])_ | Strings to sort.                                |\n| **reverse**_(int)_         | Sort in descending order (longest to shortest). |\n\nExample (ascending shortest to longest):\n\n```python\nrtk.sort_by_len([\"longest\", \"short\", \"longer\"])\n```\n\nResult:\n\n```python\n('short', 'longer', 'longest')\n```\n\nExample reversed (descending longest to shortest):\n\n```python\nrtk.sort_by_len([\"longest\", \"short\", \"longer\"], reverse=True)\n```\n\nResult:\n\n```python\n('longest', 'longer', 'short')\n```\n\n### ord_to_codepoint\n\nFunction to get a character codepoint from a character ordinal.\n\n| Function Signature        |\n| :------------------------ |\n| ord_to_codepoint(ordinal) |\n\n| Parameters         |                    |\n| :----------------- | :----------------- |\n| **ordinal**_(int)_ | Character ordinal. |\n\nExample:\n\n```python\n# ordinal: 127344\nordinal = ord(\"ðŸ…°\")\nrtk.ord_to_codepoint(ordinal)\n```\n\nResult:\n\n```python\n'0001f170'\n```\n\n### codepoint_to_ord\n\nFunction to get a character ordinal from a character codepoint.\n\n| Function Signature          |\n| :-------------------------- |\n| codepoint_to_ord(codepoint) |\n\n| Parameters           |                      |\n| :------------------- | :------------------- |\n| **codepoint**_(str)_ | Character codepoint. |\n\nExample:\n\n```python\n# char: \"ðŸ…°\"\ncodepoint = \"0001f170\"\nrtk.codepoint_to_ord(codepoint)\n```\n\nResult:\n\n```python\n127344\n```\n\n### char_to_codepoint\n\nFunction to get a character codepoint from a character.\n\n| Function Signature      |\n| :---------------------- |\n| char_to_codepoint(char) |\n\n| Parameters      |            |\n| :-------------- | :--------- |\n| **char**_(str)_ | Character. |\n\nExample:\n\n```python\nrtk.char_to_codepoint(\"ðŸ…°\")\n```\n\nResult:\n\n```python\n'0001f170'\n```\n\n### char_as_exp\n\nFunction to create a **RE** expression that exactly matches a character.\n\n| Function Signature |\n| :----------------- |\n| char_as_exp(char)  |\n\n| Parameters      |                     |\n| :-------------- | :------------------ |\n| **char**_(str)_ | Character to match. |\n\nExample:\n\n```python\nrtk.char_as_exp(\"ðŸ…°\")\n```\n\nResult:\n\n```python\nr'\\ðŸ…°'\n```\n\n### char_as_exp2\n\nFunction to create a **RE** expression that exactly matches a character.\n\n| Function Signature |\n| :----------------- |\n| char_as_exp2(char) |\n\n| Parameters      |                     |\n| :-------------- | :------------------ |\n| **char**_(str)_ | Character to match. |\n\nExample:\n\n```python\nrtk.char_as_exp2(\"ðŸ…°\")\n```\n\nResult:\n\n```python\nr'\\x{0001f170}'\n```\n\n### string_as_exp\n\nFunction to create a **RE** expression that exactly matches a string.\n\n| Function Signature  |\n| :------------------ |\n| string_as_exp(text) |\n\n| Parameters      |                  |\n| :-------------- | :--------------- |\n| **text**_(str)_ | String to match. |\n\nExample:\n\n```python\nrtk.string_as_exp(\"ðŸ…°ðŸ…±ðŸ…²\")\n```\n\nResult:\n\n```python\nr'\\ðŸ…°\\ðŸ…±\\ðŸ…²'\n```\n\n### string_as_exp2\n\nFunction to create a **RE** expression that exactly matches a string.\n\n| Function Signature   |\n| :------------------- |\n| string_as_exp2(text) |\n\n| Parameters      |                  |\n| :-------------- | :--------------- |\n| **text**_(str)_ | String to match. |\n\nExample:\n\n```python\nrtk.string_as_exp2(\"ðŸ…°ðŸ…±ðŸ…²\")\n```\n\nResult:\n\n```python\nr'\\x{0001f170}\\x{0001f171}\\x{0001f172}'\n```\n\n### strings_as_exp\n\nFunction to create a **RE** expression that exactly matches any one string.\n\n| Function Signature    |\n| :-------------------- |\n| strings_as_exp(texts) |\n\n| Parameters                 |                   |\n| :------------------------- | :---------------- |\n| **texts**_(Iterable[str])_ | Strings to match. |\n\nExample:\n\n```python\nrtk.strings_as_exp([\n    \"bad.word\",\n    \"another-bad-word\",\n])\n```\n\nResult:\n\n```python\nr'another\\-bad\\-word|bad\\.word'\n```\n\n### strings_as_exp2\n\nFunction to create a **RE** expression that exactly matches any one string.\n\n| Function Signature     |\n| :--------------------- |\n| strings_as_exp2(texts) |\n\n| Parameters                 |                   |\n| :------------------------- | :---------------- |\n| **texts**_(Iterable[str])_ | Strings to match. |\n\nExample:\n\n```python\nrtk.strings_as_exp2([\n    \"bad.word\",\n    \"another-bad-word\",\n])\n```\n\nResult:\n\n```python\nr'another\\-bad\\-word|bad\\.word'\n```\n\n### iter_char_range\n\nFunction to iterate all characters within a range of codepoints (inclusive).\n\n| Function                                           |\n| :------------------------------------------------- |\n| iter_char_range(first_codepoint, second_codepoint) |\n\n| Parameters                 |                             |\n| :------------------------- | :-------------------------- |\n| **first_codepoint**_(int)_ | Starting (first) codepoint. |\n| **last_codepoint**_(int)_  | Ending (last) codepoint.    |\n\nExample:\n\n```python\nfor char in rtk.iter_char_range(\"a\", \"c\"):\n    print(char)\n```\n\nOutput:\n\n```text\na\nb\nc\n```\n\n### char_range\n\nFunction to get a tuple of all characters within a range of codepoints (inclusive).\n\n| Function                                      |\n| :-------------------------------------------- |\n| char_range(first_codepoint, second_codepoint) |\n\n| Parameters                 |                             |\n| :------------------------- | :-------------------------- |\n| **first_codepoint**_(int)_ | Starting (first) codepoint. |\n| **last_codepoint**_(int)_  | Ending (last) codepoint.    |\n\nExample:\n\n```python\nrtk.char_range(\"a\", \"c\")\n```\n\nResult:\n\n```python\n('a', 'b', 'c')\n```\n\n### mask_span\n\nSlice and mask a string using a span.\n\n| Function Signature               |\n| :------------------------------- |\n| mask_span(text, span, mask=None) |\n\n| Parameters                               |                                                 |\n| :--------------------------------------- | :---------------------------------------------- |\n| **text**_(str)_                          | Text to slice.                                  |\n| **span**_(list[int] \\| tuple[int, int])_ | Domain of index positions (start, end) to mask. |\n| **mask**_(str \\| None)_                  | Mask to insert after slicing.                   |\n\nExample:\n\n```python\nrtk.mask_span(\n    \"This is an example\",\n    (8, 8),\n    mask=\"not \",\n)\n```\n\nResult:\n\n```python\n'This is not an example'\n```\n\n### mask_spans\n\nSlice and mask a string using multiple spans.\n\n| Function Signature                  |\n| :---------------------------------- |\n| mask_spans(text, spans, masks=None) |\n\n| Parameters                                          |                                                            |\n| :-------------------------------------------------- | :--------------------------------------------------------- |\n| **text**_(str)_                                     | Text to slice.                                             |\n| **spans**_(Iterable[list[int] \\| tuple[int, int]])_ | Domains of index positions (x1, x2) to mask from the text. |\n| **masks**_(Iterable[str] \\| None)_                  | Masks to insert when slicing.                              |\n\nExample:\n\n```python\nrtk.mask_spans(\n    \"This is an example\",\n    spans=[\n        (9, 10),\n        (11, 18),\n    ],\n    masks=[\n        \" good\",\n        \"sample\",\n    ],\n)\n```\n\n### to_utf8\n\nEncode a unicode string to UTF-8 form.\n\n| Function Signature |\n| :----------------- |\n| to_utf8(text)      |\n\n| Parameters      |                 |\n| :-------------- | :-------------- |\n| **text**_(str)_ | Text to encode. |\n\n### to_nfc\n\n[Normalize](https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize) a Unicode string to NFC form C.\n\n| Function Signature |\n| :----------------- |\n| to_utf8(text)      |\n\n| Parameters      |                    |\n| :-------------- | :----------------- |\n| **text**_(str)_ | Text to normalize. |\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "re,re2,expression,regex,pattern,tool,toolkit",
    "license": "GPL-3.0-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "regex-toolkit",
    "package_url": "https://pypi.org/project/regex-toolkit/",
    "platform": null,
    "project_url": "https://pypi.org/project/regex-toolkit/",
    "project_urls": {
      "Homepage": "https://pypi.org/project/regex-toolkit/",
      "Issues": "https://github.com/Phosmic/regex-toolkit/issues",
      "Repository": "https://github.com/Phosmic/regex-toolkit"
    },
    "release_url": "https://pypi.org/project/regex-toolkit/0.0.3/",
    "requires_dist": null,
    "requires_python": "<4,>=3.9",
    "summary": "Effortlessly craft efficient RE and RE2 expressions with user-friendly tools.",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16437151,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da78c5bef600c414f60cc004c39360317a29480bb27e0a1de3559d099f6d802f",
          "md5": "6054a552f5353a5a4d28a3700093e38c",
          "sha256": "a814b4028ec4c0c5ce45a02c330539623cb363a9f4397dedb41f7edca5d7632d"
        },
        "downloads": -1,
        "filename": "regex_toolkit-0.0.1-py3.10.egg",
        "has_sig": false,
        "md5_digest": "6054a552f5353a5a4d28a3700093e38c",
        "packagetype": "bdist_egg",
        "python_version": "0.0.1",
        "requires_python": ">=3.9, <4",
        "size": 25249,
        "upload_time": "2022-11-29T16:59:49",
        "upload_time_iso_8601": "2022-11-29T16:59:49.241873Z",
        "url": "https://files.pythonhosted.org/packages/da/78/c5bef600c414f60cc004c39360317a29480bb27e0a1de3559d099f6d802f/regex_toolkit-0.0.1-py3.10.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "619d3efb393aa261ff0d848b31951346e2946d8059fccbb423f02d1c5ccf81c8",
          "md5": "0a051293c093bec0e53342dd73380086",
          "sha256": "dd06682cc66612b285bb7f0fed3670183966d0a98560055a38dd9bf6a89fbc40"
        },
        "downloads": -1,
        "filename": "regex_toolkit-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a051293c093bec0e53342dd73380086",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9, <4",
        "size": 18019,
        "upload_time": "2022-11-29T16:59:45",
        "upload_time_iso_8601": "2022-11-29T16:59:45.770874Z",
        "url": "https://files.pythonhosted.org/packages/61/9d/3efb393aa261ff0d848b31951346e2946d8059fccbb423f02d1c5ccf81c8/regex_toolkit-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa3449ab5c9fdc274ba8ba923393090b8078fb2e853b01a030448e8f9c7c94fc",
          "md5": "054df09a581c87d3bd6032a045c0f2ed",
          "sha256": "f8eb6867f9b39150451667b37f1cbbb3f50343a5ff2ec1de2a2450edb553e1db"
        },
        "downloads": -1,
        "filename": "regex-toolkit-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "054df09a581c87d3bd6032a045c0f2ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9, <4",
        "size": 13369,
        "upload_time": "2022-11-29T16:59:47",
        "upload_time_iso_8601": "2022-11-29T16:59:47.986668Z",
        "url": "https://files.pythonhosted.org/packages/aa/34/49ab5c9fdc274ba8ba923393090b8078fb2e853b01a030448e8f9c7c94fc/regex-toolkit-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32faa69e5003df806cc111901d0db39c1dca3c2a21aaca3811f2644ab4c39aee",
          "md5": "72cd8d1df3d41734291590007eed3a87",
          "sha256": "6eb12b889799995ed5fece64f3fbe6061640fd64ef8452a7603817050482bbf6"
        },
        "downloads": -1,
        "filename": "regex_toolkit-0.0.2b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72cd8d1df3d41734291590007eed3a87",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<4,>=3.9",
        "size": 21007,
        "upload_time": "2023-01-15T17:29:23",
        "upload_time_iso_8601": "2023-01-15T17:29:23.531362Z",
        "url": "https://files.pythonhosted.org/packages/32/fa/a69e5003df806cc111901d0db39c1dca3c2a21aaca3811f2644ab4c39aee/regex_toolkit-0.0.2b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0de5b1e7e5efdf30071f5ffc39c7d8f15ed1b66a8cd3db4bd366e39dfd0147ef",
          "md5": "701eebfab2e3976d76a7e51fbf7b847e",
          "sha256": "e9e2f747ea4b233c7d4dc336d91a3be1fa21a2f3e29b167632652ac4beae4d9e"
        },
        "downloads": -1,
        "filename": "regex_toolkit-0.0.2b0.tar.gz",
        "has_sig": false,
        "md5_digest": "701eebfab2e3976d76a7e51fbf7b847e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<4,>=3.9",
        "size": 22728,
        "upload_time": "2023-01-15T17:29:25",
        "upload_time_iso_8601": "2023-01-15T17:29:25.012956Z",
        "url": "https://files.pythonhosted.org/packages/0d/e5/b1e7e5efdf30071f5ffc39c7d8f15ed1b66a8cd3db4bd366e39dfd0147ef/regex_toolkit-0.0.2b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81e7d1b6ddbb3b9fc888d6190b18e451a8e6f0fc0f9a136bf5b635b880076a12",
          "md5": "ff6b13c43f603b21719d80ac993a7f1d",
          "sha256": "479ab9934fa00a41794cc12975083e825a975b550593a893ccdaee8ad2091ffa"
        },
        "downloads": -1,
        "filename": "regex_toolkit-0.0.2b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff6b13c43f603b21719d80ac993a7f1d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<4,>=3.9",
        "size": 21008,
        "upload_time": "2023-01-15T17:53:39",
        "upload_time_iso_8601": "2023-01-15T17:53:39.630473Z",
        "url": "https://files.pythonhosted.org/packages/81/e7/d1b6ddbb3b9fc888d6190b18e451a8e6f0fc0f9a136bf5b635b880076a12/regex_toolkit-0.0.2b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cfa2c0f1c54f9ec979cdd073ca243776ee15bc0764f7789fcf207bd610660ed",
          "md5": "6bf81e8a926ddc52db04818049d019c0",
          "sha256": "aeb7eb374377799dc79cb46a13ae02ca2cb963af8dd57371e09e91f2b47ae233"
        },
        "downloads": -1,
        "filename": "regex_toolkit-0.0.2b2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6bf81e8a926ddc52db04818049d019c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<4,>=3.9",
        "size": 21012,
        "upload_time": "2023-01-15T17:53:41",
        "upload_time_iso_8601": "2023-01-15T17:53:41.002792Z",
        "url": "https://files.pythonhosted.org/packages/2c/fa/2c0f1c54f9ec979cdd073ca243776ee15bc0764f7789fcf207bd610660ed/regex_toolkit-0.0.2b2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d2e6ab7f212f4c5e59235dbd19be47dcfe647c5ae5d953d0d874a966d9d71ce",
          "md5": "0f110c02fbf9c5437670a0683e893b11",
          "sha256": "f8c7c8296159419ac8ffb63e850eda0a7a035957a457c9e662134b5ae6243d97"
        },
        "downloads": -1,
        "filename": "regex_toolkit-0.0.2b2.tar.gz",
        "has_sig": false,
        "md5_digest": "0f110c02fbf9c5437670a0683e893b11",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<4,>=3.9",
        "size": 22783,
        "upload_time": "2023-01-15T17:53:42",
        "upload_time_iso_8601": "2023-01-15T17:53:42.264138Z",
        "url": "https://files.pythonhosted.org/packages/6d/2e/6ab7f212f4c5e59235dbd19be47dcfe647c5ae5d953d0d874a966d9d71ce/regex_toolkit-0.0.2b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2b3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1c4cef1000563ab1a4eb59b5767c44609ab7830986874e2d9bc64ad35daf4e0",
          "md5": "ed2ce12187eb2e4ce6068d9b61e3a76b",
          "sha256": "ec7cdd63d4d55bc1aa4a33f01cbe6dcaac25cabe435dcc702e3aab4a05174cd1"
        },
        "downloads": -1,
        "filename": "regex_toolkit-0.0.2b3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed2ce12187eb2e4ce6068d9b61e3a76b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<4,>=3.9",
        "size": 21010,
        "upload_time": "2023-01-15T18:05:16",
        "upload_time_iso_8601": "2023-01-15T18:05:16.812907Z",
        "url": "https://files.pythonhosted.org/packages/a1/c4/cef1000563ab1a4eb59b5767c44609ab7830986874e2d9bc64ad35daf4e0/regex_toolkit-0.0.2b3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb49df8363ca899938e0eb2d2959ead16983c174bba5189d5d81a65031ac5e8f",
          "md5": "146933e802dfdf577d8e185062622c2c",
          "sha256": "599705d7649ce44926421f11eb43f284616af9f19e9153d71b828475be710f32"
        },
        "downloads": -1,
        "filename": "regex_toolkit-0.0.2b3.tar.gz",
        "has_sig": false,
        "md5_digest": "146933e802dfdf577d8e185062622c2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<4,>=3.9",
        "size": 22771,
        "upload_time": "2023-01-15T18:05:18",
        "upload_time_iso_8601": "2023-01-15T18:05:18.599684Z",
        "url": "https://files.pythonhosted.org/packages/cb/49/df8363ca899938e0eb2d2959ead16983c174bba5189d5d81a65031ac5e8f/regex_toolkit-0.0.2b3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f69a10fed5c604278c5e917107ff47cfb117cb926b9b51817fa542eb14c2428",
          "md5": "a7461c6ccd46bdbab5b97558bbc13a04",
          "sha256": "973a0e9b0f10c5804d0a80905d5f3e7924d248f76c0a8311925e2d4b12e2d4a9"
        },
        "downloads": -1,
        "filename": "regex_toolkit-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7461c6ccd46bdbab5b97558bbc13a04",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<4,>=3.9",
        "size": 20985,
        "upload_time": "2023-01-15T18:06:32",
        "upload_time_iso_8601": "2023-01-15T18:06:32.710481Z",
        "url": "https://files.pythonhosted.org/packages/7f/69/a10fed5c604278c5e917107ff47cfb117cb926b9b51817fa542eb14c2428/regex_toolkit-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa31704d162e2725cbffa4a50fd6faa0a9f184af5bbc35cbe13bee3be93e4ff1",
          "md5": "d9814da75945c91dfdc7dfccce9c58d5",
          "sha256": "65d8ec5028f467beafbfdb77d137c655d384f34591485507d7bf133b3a84c1d4"
        },
        "downloads": -1,
        "filename": "regex_toolkit-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d9814da75945c91dfdc7dfccce9c58d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<4,>=3.9",
        "size": 22772,
        "upload_time": "2023-01-15T18:06:35",
        "upload_time_iso_8601": "2023-01-15T18:06:35.080594Z",
        "url": "https://files.pythonhosted.org/packages/aa/31/704d162e2725cbffa4a50fd6faa0a9f184af5bbc35cbe13bee3be93e4ff1/regex_toolkit-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f69a10fed5c604278c5e917107ff47cfb117cb926b9b51817fa542eb14c2428",
        "md5": "a7461c6ccd46bdbab5b97558bbc13a04",
        "sha256": "973a0e9b0f10c5804d0a80905d5f3e7924d248f76c0a8311925e2d4b12e2d4a9"
      },
      "downloads": -1,
      "filename": "regex_toolkit-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a7461c6ccd46bdbab5b97558bbc13a04",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "<4,>=3.9",
      "size": 20985,
      "upload_time": "2023-01-15T18:06:32",
      "upload_time_iso_8601": "2023-01-15T18:06:32.710481Z",
      "url": "https://files.pythonhosted.org/packages/7f/69/a10fed5c604278c5e917107ff47cfb117cb926b9b51817fa542eb14c2428/regex_toolkit-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa31704d162e2725cbffa4a50fd6faa0a9f184af5bbc35cbe13bee3be93e4ff1",
        "md5": "d9814da75945c91dfdc7dfccce9c58d5",
        "sha256": "65d8ec5028f467beafbfdb77d137c655d384f34591485507d7bf133b3a84c1d4"
      },
      "downloads": -1,
      "filename": "regex_toolkit-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d9814da75945c91dfdc7dfccce9c58d5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<4,>=3.9",
      "size": 22772,
      "upload_time": "2023-01-15T18:06:35",
      "upload_time_iso_8601": "2023-01-15T18:06:35.080594Z",
      "url": "https://files.pythonhosted.org/packages/aa/31/704d162e2725cbffa4a50fd6faa0a9f184af5bbc35cbe13bee3be93e4ff1/regex_toolkit-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}