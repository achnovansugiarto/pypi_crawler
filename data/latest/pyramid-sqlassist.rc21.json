{
  "info": {
    "author": "Jonathan Vanasco",
    "author_email": "jonathan@findmeon.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Pyramid",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "![Python package](https://github.com/jvanasco/pyramid_sqlassist/workflows/Python%20package/badge.svg)\n\npyramid_sqlassist\n=================\n\nSQLAssist offers a streamlined integration for handling multiple\n[SQLAlchemy](https://github.com/sqlalchemy/sqlalchemy) database connections\nunder [Pyramid](https://github.com/pylons/pyramid).  It ships with first-party\nsupport for \"reader\", \"writer\" and \"logger\" concepts - but can be extended to\nsupport any design.\n\nSQLAssist also offers some utility mixin/base classes for SQLAlchemy\napplications that are useful for debugging applications. A debugtoolbar panel\nis included as well, which can be used to further aid in development.\n\nThis package has been working in production environments for many years.\n\nPRs are always appreciated.\n\nRecent changes:\n\nWith `v0.13.0`, SQLAlchemy 1.3.0 and zope.sqlalchemy 1.2.0 are required.\n\nWith `v0.12.0`, there have been some API changes and the introduction of a\n`pyramid_debugtoolbar` panel.\n\n\n# WARNING\n\nThis package uses scoped Sessions by default.\n\n`v0.9.1` introduced a capability to use non-scoped Sessions. \nThis appears to work, but has not been tested as thoroughly as I'd like.\n\nNon-scoped Sessions are not integrated with the `transaction` package, as they\nwere incompatible with Zope's transaction extension when support was last\nattempted.\n\nThere is probably a way to get this to work, or things may have changed.\nPull Requests are welcome.\n\n\n# Overview\n\nThe package facilitates managing multiple SQLAlchemy connections under Pyramid\nthrough a single API.  It has been used in Celery too.\n\nThere are 4 steps to using this package:\n\n1. It is the job of your Pyramid application's `model` to create\n   SQLAlchemy engines.\n2. Each created engine should be passed into\n   `pyramid_sqlassist.initialize_engine`\n3. After initializing all the engines, invoke\n   `pyramid_sqlassist.register_request_method` with the name of the request\n   attribute you wish to use\n4. SQLAlchemy classes in your model must inherit from\n   `pyramid_sqlassist.DeclaredTable` -- which is just an instance of\n   SQLAlchemy's `declarative_base`.\n\nNote: If your Pyramid application connects to the database BEFORE a process\nfork, you must call `pyramid_sqlassist.reinit_engine(/engine/)`.  This can be\nstreamlined with the\n[`pyramid_forksafe`](https://github.com/jvanasco/pyramid_forksafe) plugin. \n\n\n## What does all this accomplish?\n\n`pyramid_sqlassist` maintains a private Python dict in it's\nnamespace: `_ENGINE_REGISTRY`.  \n\nCalling  `initialize_engine` will wrap each SQLAlchemy engine into a SQLAssist\n`EngineWrapper` and then register it into the `_ENGINE_REGISTRY`.  The wrapper\ncontains a SQLAlchemy `sessionmaker` created for each engine, along with some\nconvenience functions.\n\nCalling `register_request_method` will invoke Pyramid's `add_request_method` to\nadd a `DbSessionsContainer` onto the Pyramid Request as a specified attribute\nname.\n\nThe `DbSessionsContainer` automatically register a cleanup function via\nPyramid's `add_finished_callback` if the database is used.\n\nAs a convenience, the active Pyramid request is stashed in each SQLAlchmey\nsession's \"info\" dict.\n\n\n# Example\n\nThis is an example `model.py` for a Pyramid app, which creates a READER and\nWRITER connection.\n\n\n    # model.py\n\timport sqlalchemy\n\timport pyramid_sqlassist\n\n\tfrom . import model_objects\n\n\n    def initialize_database(config, settings):\n\n\t\t# setup the reader\n\t\tengine_reader = sqlalchemy.engine_from_config(settings,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  prefix=\"sqlalchemy_reader.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\tpyramid_sqlassist.initialize_engine('reader',\n\t\t\t\t\t\t\t\t\t\t\tengine_reader,\n\t\t\t\t\t\t\t\t\t\t\tis_default=False,\n\t\t\t\t\t\t\t\t\t\t\tmodel_package=model_objects,\n\t\t\t\t\t\t\t\t\t\t\tuse_zope=False,\n\t\t\t\t\t\t\t\t\t\t\tis_scoped=is_scoped,\n\t\t\t\t\t\t\t\t\t\t\t)\n\n\t\t# setup the writer\n\t\tengine_writer = sqlalchemy.engine_from_config(settings,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  prefix=\"sqlalchemy_writer.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t  echo=sqlalchemy_echo,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\tpyramid_sqlassist.initialize_engine('writer',\n\t\t\t\t\t\t\t\t\t\t\tengine_writer,\n\t\t\t\t\t\t\t\t\t\t\tis_default=False,\n\t\t\t\t\t\t\t\t\t\t\tmodel_package=model_objects,\n\t\t\t\t\t\t\t\t\t\t\tuse_zope=False,\n\t\t\t\t\t\t\t\t\t\t\tis_scoped=is_scoped,\n\t\t\t\t\t\t\t\t\t\t\t)\n\n\t\t# setup the shared interface\n\t\tpyramid_sqlassist.register_request_method(config, 'dbSession')\n\n\n\n# Miscellaneous info\n\nBecause Pyramid will lazily create the request database interaction object, it\nis very lightweight.  On initialization, the container will register a\ncleanup routine via `add_finished_callback`.\n\t\nThe `DbSessionsContainer` exposes some methods:\n\n* `reader` - property. memoized access to \"reader\" connection\n* `writer` - property. memoized access to \"writer\" connection\n* `logger` - property. memoized access to \"logger\" connection\n* `any` - property. invokes `get_any()`\n\n* `get_reader` - method. lazy access to \"reader\" connection\n* `get_writer` - method. lazy access to \"writer\" connection\n* `get_logger` - method. lazy access to \"logger\" connection\n* `get_any` - method. tries to find memoized connections.\n  otherwise will invoke another method.\n\nOn first access of every \"Session\", the container will re-initialize that\nSession by invoking it as a callable, issuing a `.rollback()`, and stashing the\ncurrent Pyramid request in the Session's `info` dict. \n\nWithin your code, the request can be retrieved via `object_session`\n\n\tfrom sqlalchemy.orm.session import object_session\n\t_session = object_session(ExampleObject)\n\trequest = _session.info['request']\n\nThe cleanup function will call `session.remove()` for all Sessions that were\nused within the request.\n\nA postfork hook is available if needed via `reinit_engine`. \nFor all managed engines, `engine.dispose()` will be called.\n\n# Why it works:\n\n`DeclaredTable` is simply an instance of\n`sqlalchemy.ext.declarative.declarative_base`, bound to our own metadata\n\n\t# via Pyramid\n\t# Recommended naming convention used by Alembic, as various different database\n\t# providers will autogenerate vastly different names making migrations more\n\t# difficult. See: http://alembic.zzzcomputing.com/en/latest/naming.html\n\tNAMING_CONVENTION = {\n\t\t\"ix\": 'ix_%(column_0_label)s',\n\t\t\"uq\": \"uq_%(table_name)s_%(column_0_name)s\",\n\t\t\"ck\": \"ck_%(table_name)s_%(constraint_name)s\",\n\t\t\"fk\": \"fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s\",\n\t\t\"pk\": \"pk_%(table_name)s\"\n\t}\n\n\t# store the metadata in the package (GLOBAL)\n\t_metadata = sqlalchemy.MetaData(naming_convention=NAMING_CONVENTION)\n\n\t# this is used for inheritance only\n    DeclaredTable = declarative_base(metadata=_metadata)\n\nSubclassing tables from `DeclaredTable` takes care of all the core ORM setup.\n\nWhen `initialize_engine` is called, by default\n`sqlalchemy.orm.configure_mappers` is triggered (this can be deferred to first\nusage of the ORM, but most people will want to take the performance hit on\nstartup and try to push the mapped tables into shared memory before a fork).\n\n\n# Misc Objects\n\n## `objects.UtilityObject`\n\n* core object with utility methods for quick prototyping of applications\n\n## `.tools`\n\n* this namepace is currently unused;\n  it houses some in-progress code for supporting table reflection\n\n\n# debugtoolbar support\n\nSimply add `pyramid_sqlassist.debugtoolbar` to `debugtoolbar.includes`\nfor your application.\n\nFor example, this is a line from a `.ini` file\n\n\tdebugtoolbar.includes = pyramid_sqlassist.debugtoolbar\n\nThe SQLAssist debugtoolbar panel includes information such as:\n\n* the request attribute the `DbSessionsContainer` has been memoized into\n* the connections which were active for the request\n* the engine status for the active request (initialized, started, ended)\n* the engines configured for the application and available to the request \n\nThe panel is intended to help debug issues with connections - though there\nshould be none. \n\n\n# TODO:\n\n* debugtoolbar: show id information for the underlying connections and\n  connection pool to help troubleshoot potential forking issues\n\n\n# Notes\n\n* `PYTHONOPTIMIZE`. All logging functions are nested under `if __debug__:`\n  statements; they can be compiled away during production\n\n\n# Thanks\n\nSections of this code were originally taken from or inspired by:\n\n* SQLAlchemy docs\n  * [Using Thread-Local Scope with Web Applications](http://docs.sqlalchemy.org/en/rel_0_8/orm/session.html#using-thread-local-scope-with-web-applications)\n  * [Session Frequently Asked Questions](http://docs.sqlalchemy.org/en/rel_0_8/orm/session.html#session-frequently-asked-questions)\n* Mike Bayer's blog post 'Django-style Database Routers in SQLAlchemy'\n* Pyramid's `@reify` decorator and `set_request_property` attribute\n* Mike Orr's package 'sqlahelper'\n* this was originally based on FindMeOn™'s Pylons based library \"opensocialnetwork\"\n\n\n# Example Usage\n\nIn your `env.ini`, specify multiple sqlalchemy urls (which might be to\ndifferent dbs or the same db but with different permissions):\n\n\tsqlalchemy_reader.url = postgres://myapp_reader:myapp@localhost/myapp\n\tsqlalchemy_writer.url = postgres://myapp_writer:myapp@localhost/myapp\n\n/__init__.py:main\n\n\tfrom . import models\n\n    try:\n        import uwsgi\n\n        def post_fork_hook():\n            models.database_postfork()\n\n        uwsgi.post_fork_hook = post_fork_hook\n\n    except ImportError:\n        pass\n\n\tdef main(global_config, **settings):\n\t\t...\n\t\tmodels.initialize_database(settings)\n\t\t...\n\n/models/__init__.py\n\n\timport sqlassist\n\t\n\tENGINES_ENABLED = ['reader', 'writer', ]\n\n\tdef initialize_database(settings):\n\n\t\tengine_reader = sqlalchemy.engine_from_config(settings, prefix=\"sqlalchemy_reader.\")\n\t\tsqlassist.initialize_engine('reader',engine_reader,default=True, reflect=myapp.models, use_zope=False)\n\n\t\tengine_writer = sqlalchemy.engine_from_config(settings, prefix=\"sqlalchemy_writer.\")\n\t\tsqlassist.initialize_engine('writer',engine_writer,default=False, reflect=myapp.models, use_zope=True)\n\n\t\t# custom property: `request.dbSession`\n\t\tconfig.add_request_method(\n\t\t\trequest_setup_dbSession,\n\t\t\t'dbSession',\n\t\t\treify=True,\n\t\t)\n\n\tdef database_postfork():\n\t\tfor i in ENGINES_ENABLED:\n\t\t\tsqlassist.reinit_engine(i)\n\n\tdef request_setup_dbSession(request):\n\t\treturn sqlassist.DbSessionsContainer(request)\n\n/models/actual_models.py\n\n\timport sqlalchemy as sa\n\tfrom sqlassist import DeclaredTable\n\n\tclass TestTable(DeclaredTable):\n\t\t__tablename__ = 'groups'\n\n\t\tid = sa.Column(sa.Integer, primary_key=True)\n\t\tname = sa.Column(sa.Unicode(255), nullable=False)\n\t\tdescription = sa.Column(sa.Text, nullable=False)\n\nin your handlers, you have the following. Note, `sqlalchemy` is only imported\nto grab an exception:\n\n\timport sqlalchemy\n\n\tclass BaseHandler(object):\n\t\tdef __init__(self,request):\n\t\t\tself.request = request\n\n\tclass ViewHandler(BaseHandler):\n\n\t\tdef index(self):\n\n\t\t\tprint self.request.dbSession.reader.query(models.actual_models.TestTable).all()\n\n\t\t\ttry:\n\t\t\t\t#this should fail , assuming reader can't write\n\t\t\t\tdbTestTable = models.actual_models.TestTable()\n\t\t\t\tdbTestTable.name= 'Test Case 1'\n\t\t\t\tself.request.dbSession.reader.add(dbTestTable)\n\t\t\t\tself.request.dbSession.reader.commit()\n\t\n\t\t\texcept sqlalchemy.exc.ProgrammingError:\n\t\t\t\tself.request.dbSession.reader.rollback()\n\t\t\t\traise ValueError(\"Commit Failed!\")\n\n\t\t\t#but this should work , assuming writer can write\n\t\t\tdbTestTable = models.actual_models.TestTable()\n\t\t\tdbTestTable.name = 'Test Case 2'\n\t\t\tself.request.dbSession.writer.add(dbTestTable)\n\t\t\tself.request.dbSession.writer.commit()\n\n\n# UtilityObject\n\nIf you inherit from this class, your SQLAlchemy objects have some convenience\nmethods:\n\n* `get__by__id`( self, dbSession, id , id_column='id' ):\n* `get__by__column__lower`( self, dbSession, column_name , search , allow_many=False ):\n* `get__by__column__similar`( self, dbSession , column_name , seed , prefix_only=True):\n* `get__by__column__exact_then_ilike`( self, dbSession, column_name, seed ):\n* `get__range`( self, dbSession, start=0, limit=None, sort_direction='asc', order_col=None, order_case_sensitive=True, filters=[], debug_query=False):\n* `columns_as_dict`(self):\n\n\n\n# Another important note...\n\n## DbSessionsContainer\n\nThis convenience class ONLY deals with 3 connections right now :\n\n* reader\n* writer\n* logger\n\nIf you have more/different names - subclass (or create a patch to deal with\ndynamic names!)  I didn't have time for that.\n\nThe reader and writer classes will start with an automatic rollback;\nThe logger will not.\n\n\n# `transaction` support\n\nBy default, the package will try to load the following libraries:\n\n    import transaction\n    from zope.sqlalchemy import register as zope_register\n\nThis can be disabled with an environment variable\n\n\texport SQLASSIST_DISABLE_TRANSACTION=1\n\n\n\n# Caveats\n\n## $$COMMIT$$\n\nif you're using \"Zope\" & \"transaction\" modules :\n\n* you need to call `transaction.commit`\n* IMPORTANT remember that `mark_changed` exists!\n\nif you're not using \"Zope\" & \"transaction\" modules :\n\n* you need to call \"dbSession_writer.commit()\"\n\n## Rollbacks\n\nyou want to call `rollback` on the specific database Sessions to control what\nis in each one\n\n\n## catching exceptions if you're trying to support both `transaction.commit()` and `dbsession.commit()`\n\nlet's say you do this:\n\n\ttry:\n\t\tdbSession_writer_1.add(object1)\n\t\tdbSession_writer_1.commit()\n\texcept AssertionError , e:\n\t\tprint \"Should fail because Zope wants this\"\n\n\t# add to writer\n\tdbSession_writer_2.add(object2)\n\n\t# commit\n\ttransaction.commit()\n\nin this event, both object1 and object2 will be committed by `transaction.commit()`\n\nYou must explicitly invoke a `rollback` after the `AssertionError`\n\n\n# Reflected Tables\n\nthis package once supported trying to handle table reflection. \nIt is being removed unless someone wants to do a better job.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jvanasco/pyramid_sqlassist",
    "keywords": "web Pyramid SQLAlchemy",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyramid-sqlassist",
    "package_url": "https://pypi.org/project/pyramid-sqlassist/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyramid-sqlassist/",
    "project_urls": {
      "Homepage": "https://github.com/jvanasco/pyramid_sqlassist"
    },
    "release_url": "https://pypi.org/project/pyramid-sqlassist/0.14.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Efficiently manage multiple SqlAlchemy connections for Pyramid",
    "version": "0.14.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11965839,
  "releases": {
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1623da3370c24f0195a488acc4f92f961de2ee2f4f10b3b90c6700b6ef4fd3b",
          "md5": "22e44c97d09525148bc9c47ef42bae89",
          "sha256": "9129d4f78c6c172111026b1e12538e6da4a2be03b35a83679e6148df1dece02b"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "22e44c97d09525148bc9c47ef42bae89",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6593,
        "upload_time": "2013-01-29T18:50:08",
        "upload_time_iso_8601": "2013-01-29T18:50:08.605472Z",
        "url": "https://files.pythonhosted.org/packages/f1/62/3da3370c24f0195a488acc4f92f961de2ee2f4f10b3b90c6700b6ef4fd3b/pyramid_sqlassist-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97a317a40584b32046a575119a7106e3b69f4b08f2abf46c6c45174428b1405a",
          "md5": "5e3ba2eb9138355e6599dce78536b7c6",
          "sha256": "bf8846f20784c0e1b74c4c91679f39df926e915220bf82392263e86e20910076"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "5e3ba2eb9138355e6599dce78536b7c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7576,
        "upload_time": "2013-03-01T19:29:39",
        "upload_time_iso_8601": "2013-03-01T19:29:39.245030Z",
        "url": "https://files.pythonhosted.org/packages/97/a3/17a40584b32046a575119a7106e3b69f4b08f2abf46c6c45174428b1405a/pyramid_sqlassist-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cca779cd1629332ee166623803570d7d172cc984494cf229ba8058c396bfa5c",
          "md5": "8e7158fd065752d944f4ea7def26f182",
          "sha256": "c239455089f3b966e9b0d30669cabda4e4d6195bdd5dfad2ecc6080755ddfd97"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "8e7158fd065752d944f4ea7def26f182",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5433,
        "upload_time": "2013-06-07T21:00:00",
        "upload_time_iso_8601": "2013-06-07T21:00:00.398201Z",
        "url": "https://files.pythonhosted.org/packages/5c/ca/779cd1629332ee166623803570d7d172cc984494cf229ba8058c396bfa5c/pyramid_sqlassist-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f54dbbca7d61fc72f05087a5eb48e374060f237423b4d5952bff26573538959d",
          "md5": "0fe703af6e8a805a8e72a36a77a3fb38",
          "sha256": "8116f06c51f0f05f2e5665bda9e442f793e5a40f86d6b7c0e87328675e62631e"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0fe703af6e8a805a8e72a36a77a3fb38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8957,
        "upload_time": "2013-08-02T23:15:38",
        "upload_time_iso_8601": "2013-08-02T23:15:38.844887Z",
        "url": "https://files.pythonhosted.org/packages/f5/4d/bbca7d61fc72f05087a5eb48e374060f237423b4d5952bff26573538959d/pyramid_sqlassist-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60b91df7e3b7ddd0ec53e53f1864db425954ceac2d71e7090921fe4b0ba6aa28",
          "md5": "3dfb1bc91e8dd024c857bb743ba977af",
          "sha256": "43cd757f8819ce5ce81c283fee230084476f25dcdca7ae0f82e303f729520a2b"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3dfb1bc91e8dd024c857bb743ba977af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9337,
        "upload_time": "2013-11-20T01:11:08",
        "upload_time_iso_8601": "2013-11-20T01:11:08.900328Z",
        "url": "https://files.pythonhosted.org/packages/60/b9/1df7e3b7ddd0ec53e53f1864db425954ceac2d71e7090921fe4b0ba6aa28/pyramid_sqlassist-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68e0a0e6a128b17048e58a83be9be35b44dc45887384d677e579ad88919afdc6",
          "md5": "be35ecb6e2a1e836161a1778dfd5cf83",
          "sha256": "713bba73e9afb2a46036b9f22510f745a4ae82244a83cd7154d2853ebda42e03"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "be35ecb6e2a1e836161a1778dfd5cf83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9642,
        "upload_time": "2014-06-17T16:31:26",
        "upload_time_iso_8601": "2014-06-17T16:31:26.873782Z",
        "url": "https://files.pythonhosted.org/packages/68/e0/a0e6a128b17048e58a83be9be35b44dc45887384d677e579ad88919afdc6/pyramid_sqlassist-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd661aa508e806f4588f5f7c9a6d38728bed9e5d43041e5cede6169600094404",
          "md5": "9f5159f99786795acbdcf82718e315c5",
          "sha256": "5723bc8491944edc89e2349096f5988412afc02f13688b90790b7e06464675c3"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9f5159f99786795acbdcf82718e315c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9602,
        "upload_time": "2014-09-02T18:33:37",
        "upload_time_iso_8601": "2014-09-02T18:33:37.572694Z",
        "url": "https://files.pythonhosted.org/packages/fd/66/1aa508e806f4588f5f7c9a6d38728bed9e5d43041e5cede6169600094404/pyramid_sqlassist-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7e8aae2c110298c2b631d0e50c136306852c46e35c92cb2fcf974fc43697dc1",
          "md5": "ec793458c625776b3a21527e7de33475",
          "sha256": "e26c6b64b4e00f51dc6f8d1d1ad06304dd102914af90e9a0ca484568085b9545"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "ec793458c625776b3a21527e7de33475",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9641,
        "upload_time": "2015-03-09T17:32:15",
        "upload_time_iso_8601": "2015-03-09T17:32:15.008057Z",
        "url": "https://files.pythonhosted.org/packages/c7/e8/aae2c110298c2b631d0e50c136306852c46e35c92cb2fcf974fc43697dc1/pyramid_sqlassist-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd24fb50e6ea916da4b925c78a0f341423dff304132cda575bd15baf50b397ae",
          "md5": "d59af32e21831845b30931298fae3021",
          "sha256": "6b39968d189dda968fc977c4f573128ae5ff63c8e59b3f71fbe13c520dd87917"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.10.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d59af32e21831845b30931298fae3021",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12673,
        "upload_time": "2018-10-31T16:41:16",
        "upload_time_iso_8601": "2018-10-31T16:41:16.172216Z",
        "url": "https://files.pythonhosted.org/packages/fd/24/fb50e6ea916da4b925c78a0f341423dff304132cda575bd15baf50b397ae/pyramid_sqlassist-0.10.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e3f0e41ce5a5b9920dda508166af04da0d345ba9fda79dc5716f7a7bf3b1060",
          "md5": "3678f02c3fa6a893469adf9bf496936d",
          "sha256": "45bbeb3505c25b2b832bc8e7ad98a438d24f022bd782a99649fafc52234e8ff0"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.10.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3678f02c3fa6a893469adf9bf496936d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12749,
        "upload_time": "2019-03-12T19:31:02",
        "upload_time_iso_8601": "2019-03-12T19:31:02.527095Z",
        "url": "https://files.pythonhosted.org/packages/6e/3f/0e41ce5a5b9920dda508166af04da0d345ba9fda79dc5716f7a7bf3b1060/pyramid_sqlassist-0.10.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec866f41c49c99a785c72d7b679ca11311c511ac0162a7cbc2c9186428b6f01f",
          "md5": "cbe47de6d1d6eac737631a4b37e2ee76",
          "sha256": "92f6b998081759fc1d759c87b99de20029b42837040724247f55fa5efa13d5df"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.11.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cbe47de6d1d6eac737631a4b37e2ee76",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12794,
        "upload_time": "2019-05-01T18:39:23",
        "upload_time_iso_8601": "2019-05-01T18:39:23.178524Z",
        "url": "https://files.pythonhosted.org/packages/ec/86/6f41c49c99a785c72d7b679ca11311c511ac0162a7cbc2c9186428b6f01f/pyramid_sqlassist-0.11.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8ba4b464bc6444dfe41a584ca1841d0d1dd06f719379f26c37d281a31a2fda2",
          "md5": "4e3f2181b46bac43dec6446ffa15620a",
          "sha256": "982abf39c707501b91d09b99a3dab3ab7165501182f452782ab6e00934013f9b"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.12.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4e3f2181b46bac43dec6446ffa15620a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13649,
        "upload_time": "2019-07-23T22:24:37",
        "upload_time_iso_8601": "2019-07-23T22:24:37.020911Z",
        "url": "https://files.pythonhosted.org/packages/e8/ba/4b464bc6444dfe41a584ca1841d0d1dd06f719379f26c37d281a31a2fda2/pyramid_sqlassist-0.12.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.13.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca3a7aedade726296016c36b14995450a5b2ef5d25a2f28c2d95d7b428458953",
          "md5": "1c0e72039cf9a273111c782bfb289562",
          "sha256": "cbf3f25c13b1036dc2e7859dc48db214a3e2c3aba897743ff939b907845c8356"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.13.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1c0e72039cf9a273111c782bfb289562",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19529,
        "upload_time": "2020-10-20T17:04:46",
        "upload_time_iso_8601": "2020-10-20T17:04:46.546969Z",
        "url": "https://files.pythonhosted.org/packages/ca/3a/7aedade726296016c36b14995450a5b2ef5d25a2f28c2d95d7b428458953/pyramid_sqlassist-0.13.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.14.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99a31b3b375e3b84ca448bf977903e47d11f1e53d3ec6457cea345c9be1a9164",
          "md5": "8395c4826e7599c518025a858f8d752e",
          "sha256": "bf0c27dfec9a45260c32173d0ab2bd4fd90b15544e75943f8e2f20b8e5951168"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.14.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8395c4826e7599c518025a858f8d752e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28080,
        "upload_time": "2021-03-25T17:49:16",
        "upload_time_iso_8601": "2021-03-25T17:49:16.144161Z",
        "url": "https://files.pythonhosted.org/packages/99/a3/1b3b375e3b84ca448bf977903e47d11f1e53d3ec6457cea345c9be1a9164/pyramid_sqlassist-0.14.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.14.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d87a5319d2236a8f2d735b66c96654ff835a7b0122419a45cd699e1510c2e93e",
          "md5": "da59147cfcdea6253afb9c4143c8b3d0",
          "sha256": "7ac8971f40cc4e5d862b06ade4f98048cfb97f5cbc72d0ef28bcc33bc078ca81"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.14.1.tar.gz",
        "has_sig": false,
        "md5_digest": "da59147cfcdea6253afb9c4143c8b3d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31085,
        "upload_time": "2021-03-25T19:16:36",
        "upload_time_iso_8601": "2021-03-25T19:16:36.672295Z",
        "url": "https://files.pythonhosted.org/packages/d8/7a/5319d2236a8f2d735b66c96654ff835a7b0122419a45cd699e1510c2e93e/pyramid_sqlassist-0.14.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.14.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cb54eb2c2b3190f751e9a643280c4fa174e59a715d0e965c816d2dd47bf85c2",
          "md5": "8becbc224d59ba625a098104437a5678",
          "sha256": "f2a9557416ebb0352b79f500ab08d56606c1fcd18fca52b5ee40ee8a33311c9b"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.14.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8becbc224d59ba625a098104437a5678",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29601,
        "upload_time": "2021-11-08T22:57:09",
        "upload_time_iso_8601": "2021-11-08T22:57:09.889441Z",
        "url": "https://files.pythonhosted.org/packages/7c/b5/4eb2c2b3190f751e9a643280c4fa174e59a715d0e965c816d2dd47bf85c2/pyramid_sqlassist-0.14.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4878198cbbe814c8d5eac346abb1a343926f3b50e07eabeddfad69bf3f1f495",
          "md5": "761b127a184255c66d31c8a3e976ae0f",
          "sha256": "b005d8475084c76932fd20a1be2ac6a8ff61081805cda5d677d129a69c6dab75"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "761b127a184255c66d31c8a3e976ae0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10057,
        "upload_time": "2016-10-28T20:38:49",
        "upload_time_iso_8601": "2016-10-28T20:38:49.788685Z",
        "url": "https://files.pythonhosted.org/packages/a4/87/8198cbbe814c8d5eac346abb1a343926f3b50e07eabeddfad69bf3f1f495/pyramid_sqlassist-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3acb780bbac183b0d79413806d008c14241a8f8e4e2bd929df27041d9b69eeba",
          "md5": "b4e5c730b4c70722242d35b147418f7d",
          "sha256": "610884bc7a6b61f986ca9db755ab14ffd8d5f215697f6dc26a2abd44ab08a2b3"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b4e5c730b4c70722242d35b147418f7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10905,
        "upload_time": "2016-10-29T19:00:47",
        "upload_time_iso_8601": "2016-10-29T19:00:47.727346Z",
        "url": "https://files.pythonhosted.org/packages/3a/cb/780bbac183b0d79413806d008c14241a8f8e4e2bd929df27041d9b69eeba/pyramid_sqlassist-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e02b723f69e49bafb1667a5a72133924c370dfc3f33479d6cf46920c795856aa",
          "md5": "2662b3659d5907dc335fdfd1b765c12d",
          "sha256": "8442c62e76fc50b83426d36347675eae58b705d0f96f973b530b04d5ced5a122"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2662b3659d5907dc335fdfd1b765c12d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10979,
        "upload_time": "2016-10-31T17:55:27",
        "upload_time_iso_8601": "2016-10-31T17:55:27.081604Z",
        "url": "https://files.pythonhosted.org/packages/e0/2b/723f69e49bafb1667a5a72133924c370dfc3f33479d6cf46920c795856aa/pyramid_sqlassist-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd3a2c3b3792beeb60e6697f485623ea0e1d921024b118cc139c4f8fc3f1ffd0",
          "md5": "47bd37236e208b043e85e9c7a062a6cd",
          "sha256": "caa962511ee710e89a8aadea6ebc0110e192e6cb8031365528699053925dba00"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "47bd37236e208b043e85e9c7a062a6cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11862,
        "upload_time": "2017-09-01T21:48:03",
        "upload_time_iso_8601": "2017-09-01T21:48:03.337503Z",
        "url": "https://files.pythonhosted.org/packages/fd/3a/2c3b3792beeb60e6697f485623ea0e1d921024b118cc139c4f8fc3f1ffd0/pyramid_sqlassist-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e1201408e23bcd76361dde7768dbb3e1b4b263cad3cc5227519c6d3de9fadef",
          "md5": "165f4e3d7cc554ed47c5bf31a244b9b3",
          "sha256": "cbd8a96ac3afc026d29a22ab6f3e885d96076256ca9650acd178824eea90c300"
        },
        "downloads": -1,
        "filename": "pyramid_sqlassist-0.9.4.tar.gz",
        "has_sig": false,
        "md5_digest": "165f4e3d7cc554ed47c5bf31a244b9b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12079,
        "upload_time": "2018-06-08T21:29:19",
        "upload_time_iso_8601": "2018-06-08T21:29:19.480662Z",
        "url": "https://files.pythonhosted.org/packages/7e/12/01408e23bcd76361dde7768dbb3e1b4b263cad3cc5227519c6d3de9fadef/pyramid_sqlassist-0.9.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7cb54eb2c2b3190f751e9a643280c4fa174e59a715d0e965c816d2dd47bf85c2",
        "md5": "8becbc224d59ba625a098104437a5678",
        "sha256": "f2a9557416ebb0352b79f500ab08d56606c1fcd18fca52b5ee40ee8a33311c9b"
      },
      "downloads": -1,
      "filename": "pyramid_sqlassist-0.14.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8becbc224d59ba625a098104437a5678",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 29601,
      "upload_time": "2021-11-08T22:57:09",
      "upload_time_iso_8601": "2021-11-08T22:57:09.889441Z",
      "url": "https://files.pythonhosted.org/packages/7c/b5/4eb2c2b3190f751e9a643280c4fa174e59a715d0e965c816d2dd47bf85c2/pyramid_sqlassist-0.14.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}