{
  "info": {
    "author": "Chris Haumesser",
    "author_email": "chris.haumesser@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django :: 2.1",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "####\nburl\n####\n\n``burl`` (brief url) is a URL shortener written in python with the django framework.\n\nAs of version 2, this application and repo is for the standalone burl service,\nproviding a docker-packaged reference implementation of\n`django-burl <https://gitlab.com/wryfi/django-burl>`__. If you're looking for a\nURL-shortener to include in your own django project, *see*\n`django-burl <https://gitlab.com/wryfi/django-burl>`__.\n\nFeatures include:\n\n* data models and REST API from\n  `django-burl <https://gitlab.com/wryfi/django-burl>`__\n* JWT authentication\n* CORS management via `django-cors-headers <https://github.com/adamchainz/django-cors-headers>`__\n* swagger-ui\n* user model with ``UUIDField`` for its primary key\n* account management pages/templates\n* static assets served via `whitenoise <https://whitenoise.evans.io/en/stable/>`__\n* `gunicorn <https://gunicorn.org/>`__ WSGI server\n* easy configuration with `cfitall <https://github.com/wryfi/cfitall>`__\n\nQuick Start\n===========\n\nFirst, configure a postgres user and database to host ``burl``'s data, then create\na file ``/etc/burl/env`` specifing the environment variables for configuring\n``burl`` (see below).\n\nRun the latest image from docker hub (remember to change 10.0.0.10 to\nthe ip of the postgres server you configured above)::\n\n    docker pull wryfi/burl:latest\n    docker run -dit --name=myburl -p 8000:8000 --env-file /etc/burl/env \\\n        --add-host=dbhost:10.0.0.10 \\\n        --restart unless-stopped wryfi/burl:latest run\n    docker exec -it myburl burl-manager createsuperuser\n    docker exec -it myburl burl-manager set_default_site --name localhost --domain localhost\n\nPoint your browser to http://localhost:8000/admin and create some BURLs!\n\nOr go old school::\n\n    curl \\\n      -X POST -H \"Content-Type: application/json\" \\\n      -d '{\"username\": \"dooper\", \"password\": \"sooperuser\"}' \\\n      http://localhost:8000/api/v2/token/auth\n    ...\n    {\n      \"access\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiY29sZF9zdHVmZiI6IuKYgyIsImV4cCI6MTIzNDU2LCJqdGkiOiJmZDJmOWQ1ZTFhN2M0MmU4OTQ5MzVlMzYyYmNhOGJjYSJ9.NHlztMGER7UADHZJlxNG0WSi22a2KaYSfd1S-AuT7lU\",\n      \"refresh\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImNvbGRfc3R1ZmYiOiLimIMiLCJleHAiOjIzNDU2NywianRpIjoiZGUxMmY0ZTY3MDY4NDI3ODg5ZjE1YWMyNzcwZGEwNTEifQ.aEoAYkSJjoWH1boshQAaTkf8G3yn0kapko6HFRt7Rh4\"\n    }\n\n    curl \\\n      -X POST -H \"Content-Type: application/json\" \\\n      -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiY29sZF9zdHVmZiI6IuKYgyIsImV4cCI6MTIzNDU2LCJqdGkiOiJmZDJmOWQ1ZTFhN2M0MmU4OTQ5MzVlMzYyYmNhOGJjYSJ9.NHlztMGER7UADHZJlxNG0WSi22a2KaYSfd1S-AuT7lU\" \\\n      -d '{\"url\": \"https://archive.org\", \"burl\": \"arc\"}' \\\n      http://localhost:8000/api/v2/burls/\n    ...\n    {\n      \"burl\": \"arc\",\n      \"created\": \"2022-03-14T16:16:09.353538-05:00\",\n      \"description\": \"\",\n      \"enabled\": true,\n      \"updated\": \"2022-03-14T16:16:09.353543-05:00\",\n      \"url\": \"https://archive.org\",\n      \"user\": \"aec88b92-267f-430e-b4e2-0c63f4fc411a\"\n    }\n\n    curl -IL \"http://localhost:8000/arc/\"\n    ...\n    HTTP/1.0 302 Found\n    Content-Type: text/html; charset=utf-8\n    Location: https://archive.org\n    X-Frame-Options: DENY\n    Content-Length: 0\n    X-Content-Type-Options: nosniff\n    Referrer-Policy: same-origin\n    Cross-Origin-Opener-Policy: same-origin\n    Vary: Origin\n    Server: Werkzeug/2.0.3 Python/3.10.2\n    Date: Mon, 14 Mar 2022 21:21:03 GMT\n\n    HTTP/1.1 200 OK\n    Server: nginx/1.18.0 (Ubuntu)\n    Date: Mon, 14 Mar 2022 21:21:04 GMT\n    Content-Type: text/html; charset=utf-8\n    Connection: close\n    vary: Accept-Encoding\n    Strict-Transport-Security: max-age=15724800\n    Cache-Control: no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0\n\nConfiguration\n=============\n\n``burl`` uses `cfitall <https://gitlab.com/wryfi/cfitall>`__ for managing its\nmost commonly configured settings. It will search ``/etc/burl`` and then\n``~/.local/etc/burl`` for a ``burl.yml`` or ``burl.json`` settings file, and/or\nread its configuration from a series of environment variables.\n\nExample yaml file: ::\n\n    admin:\n      rough_count_min: 1000\n    api:\n      page_size: 25\n    app:\n      burl_blacklist:\n      - admin\n      - api\n      - static\n      - media\n      debug: false\n      default_redirect_url: https://www.wikipedia.org/\n      hashid_alphabet: abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ0123456789\n      media_root: /Users/burl/.local/var/burl/media\n      static_root: /Users/burl/.local/share/burl/static\n      time_zone: America/Los_Angeles\n    db:\n      default:\n        engine: django.db.backends.postgresql_psycopg2\n        host: 127.0.0.1\n        name: burl\n        password: burl\n        port: 5432\n        user: burl\n    http:\n      secure_proxy_ssl_header_name: HTTP_X_FORWARDED_PROTO\n      secure_proxy_ssl_header_value: http\n      use_x_forwarded_hosts: true\n    logging:\n      app:\n        level: warn\n      burl:\n        level: info\n      log_dir: /Users/burl/.local/var/log/burl\n    mail:\n      default_from_email: nobody@burl.test\n      sendgrid_api_key: ''\n    security:\n      allowed_hosts:\n      - localhost\n      - 127.0.0.1\n      cors:\n        allow_all_origins: false\n        allowed_origin_regexes: []\n        allowed_origins: []\n      jwt:\n        access_lifetime: 600\n        refresh_lifetime: 86400\n      secret_key: jeirainooyieShaequeeng8av9gah6geiv1ooTh6quoo9meireeRayoo6un7xah\n      sendgrid_api_key: ''\n\nCorresponding environment variables: ::\n\n    BURL__ADMIN__ROUGH_COUNT_MIN\n    BURL__API__PAGE_SIZE\n    BURL__APP__BURL_BLACKLIST\n    BURL__APP__DEBUG\n    BURL__APP__DEFAULT_REDIRECT_URL\n    BURL__APP__HASHID_ALPHABET\n    BURL__APP__MEDIA_ROOT\n    BURL__APP__STATIC_ROOT\n    BURL__APP__TIME_ZONE\n    BURL__DB__DEFAULT__ENGINE\n    BURL__DB__DEFAULT__HOST\n    BURL__DB__DEFAULT__NAME\n    BURL__DB__DEFAULT__PASSWORD\n    BURL__DB__DEFAULT__PORT\n    BURL__DB__DEFAULT__USER\n    BURL__HTTP__SECURE_PROXY_SSL_HEADER_NAME\n    BURL__HTTP__SECURE_PROXY_SSL_HEADER_VALUE\n    BURL__HTTP__USE_X_FORWARDED_HOST\n    BURL__LOGGING__APP__LEVEL\n    BURL__LOGGING__BURL__LEVEL\n    BURL__LOGGING__LOG_DIR\n    BURL__MAIL__DEFAULT_FROM_EMAIL\n    BURL__MAIL__SENDGRID_API_KEY\n    BURL__SECURITY__ALLOWED_HOSTS\n    BURL__SECURITY__CORS__ALLOWED_ORIGINS\n    BURL__SECURITY__CORS__ALLOWED_ORIGIN_REGEXES\n    BURL__SECURITY__CORS__ALLOW_ALL_ORIGINS\n    BURL__SECURITY__JWT__ACCESS_LIFETIME\n    BURL__SECURITY__JWT__REFRESH_LIFETIME\n    BURL__SECURITY__SECRET_KEY\n    BURL__SECURITY__SENDGRID_API_KEY\n\nOf course, per the django convention, you can always set the\n``DJANGO_SETTINGS_MODULE`` environment variable to a python module of your\nchoice, to further extend or bypass all of ``burl``'s settings and configuration\nmechanisms if needed.\n\nConfiguration Notes\n-------------------\n\nEmail\n~~~~~\n\nIf you want working email (e.g. for password resets) the only supported option\nat this time is to use sendgrid.  Set the ``security.sendgrid_api_key`` setting\n(``BURL__SECURITY__SENDGRID_API_KEY`` environment variable) to enable sendgrid\nsupport. Otherwise all email is printed to the console and never sent.\n\n\nDevelopment\n===========\n\nImplementation\n--------------\n\n``burl`` is a reference implementation of\n`django-burl <https://gitlab.com/wryfi/django-burl>`__, which implements most\nof the functionality found in ``burl``. Please review django-burl's documentation\nfor details.\n\n``burl`` adds JWT authentication to django-burl via\n`Simple JWT <https://django-rest-framework-simplejwt.readthedocs.io/en/latest/>`__.\n\nThe current Swagger UI (api documentation) can be found at ``/api/v2/swagger``\nof the running service.\n\nThe django admin can be found as usual at ``/admin``.\n\ncode requirements\n-----------------\n\n``burl`` requires python 3.7 or newer.  Python 2 is not supported.\n\n``burl`` should run anywhere python will run, most easily on a unix-like system.\n\n\ndatabase requirements\n---------------------\n\n``burl`` strongly recommends using a postgresql database via python's\n``psycopg2`` library.\n\nYou will need a C compiler, python header files, and postgres development\nlibraries on your system to build the postgres ``psycopg2`` module needed\nfor postgresql.\n\n\nInstallation\n------------\n\n``burl`` is made to be installed via the standard python installation methods.\nYou can install it as simply as running::\n\n    pip install burl\n\nIt is recommended, however, that you install ``burl`` in a virtualenv or\nDocker container. For development, in particular, the easiest way to set\neverything up is to use ``pipenv`` (see below).\n\nOnce you have installed ``burl``, you will need to create a database for its\nuse. The default configuration expects a database called ``burl``, owned by\na user named ``burl``, with a password of ``burl``. You should alter these\nsettings by using the configuration mechanisms described above.\n\nOnce your database is configured, run the database migrations to create::\n\n    burl-manager migrate\n\nThen create a new superuser::\n\n    burl-manager createsuperuser\n\nNow you should be ready to run ``burl``!  You can run a test/development server\nby running ``burl-manager runserver`` to ensure that everything is working. In\nproduction, you should deploy behind a WSGI server.\n\nDeployment\n----------\n\n``burl`` is a straightforward django app, with nothing fancy.\n\nYou can deploy burl with any WSGI-compliant web server. Running\n`gunicorn <http://gunicorn.org/>`_ as the backend WSGI server, with an nginx\nreverse proxy in front of it, is a common and well-supported configuration.\n\n`Deploying Django <https://docs.djangoproject.com/en/2.0/howto/deployment/>`_\nhas some generic information about deploying django applications that you may\nfind useful if you are new to this stack.\n\nDocker\n------\n\nThe included Dockerfile builds a container that bundles burl with gunicorn and\nexposes gunicorn on port 8000.  It builds with uid ``65432`` by default, which\nyou can change on the ``docker build`` command line, e.g.::\n\n    docker build --build-arg uid=23456 -t burl .\n\nThis container does not include postgres or nginx. You will need postgres to run\nburl, and you will want to put nginx in front of the container.\n\nOnce you have a built container, it can be activated as follows::\n\n    docker run -dit -p 8000:8000 --env-file /etc/burl/env --add-host=dbhost:10.0.0.10 \\\n        --restart unless-stopped burl:latest burl\n\n\nTooling\n-------\n\n``burl`` uses a modern python toolchain, consisting of:\n\n- `pipenv <https://docs.pipenv.org/>`_ for managing dependencies,\n- `pbr <https://docs.openstack.org/pbr/latest/>`_ build system,\n- docker support,\n- semantic version numbers,\n- git flow branching scheme.\n\nTo start coding, first install ``pipenv``, then clone this repo and run\n``pipenv install -d``. This will set up a virtualenv, install all of\nthe dependencies, and install burl in editable mode. You should now be\nable to run commands like ``pipenv shell``, ``pipenv run burl-manager test``,\netc.\n\nWhen using ``pipenv`` you can make use of a ``.env`` file in the source root,\nand set the requisite environment variables (above) there. This file is\nignored in ``.gitignore`` and local to your environment.\n\n*See:*\n\n- `Why Python devs should use Pipenv <https://opensource.com/article/18/2/why-python-devs-should-use-pipenv>`_\n\nTests\n-----\n\n``burl`` was not developed using TDD, but has reasonable test coverage.\nTests are located in the standard places for django applications. New PRs\nshould include relevant tests whenever possible.\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wryfi/burl",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "burl",
    "package_url": "https://pypi.org/project/burl/",
    "platform": null,
    "project_url": "https://pypi.org/project/burl/",
    "project_urls": {
      "Homepage": "https://github.com/wryfi/burl"
    },
    "release_url": "https://pypi.org/project/burl/2.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "a url shortening django app",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13187128,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afaf20aedd400b98c8f5d1f7920548cf9bb442732c04db6e7915a9c4176c0298",
          "md5": "7c59423b1cca938be66cb94ecb390820",
          "sha256": "3c3540d316a7825f6fe4c8ba234720a1640d95258f9210c54aad57ba7aff12d9"
        },
        "downloads": -1,
        "filename": "burl-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c59423b1cca938be66cb94ecb390820",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31638,
        "upload_time": "2019-02-24T04:12:17",
        "upload_time_iso_8601": "2019-02-24T04:12:17.058744Z",
        "url": "https://files.pythonhosted.org/packages/af/af/20aedd400b98c8f5d1f7920548cf9bb442732c04db6e7915a9c4176c0298/burl-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba070dcf5eb8411330c72a01f90a4b49c2274f8d9adbd52fa9d1d1d51bdf3f44",
          "md5": "2b9298c45b17c5e9647531f6ff1468b0",
          "sha256": "82f8fb051c9b6a95bb724e522effad86b14394f33135bef1ccd2841f2e992368"
        },
        "downloads": -1,
        "filename": "burl-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2b9298c45b17c5e9647531f6ff1468b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35074,
        "upload_time": "2019-02-24T04:12:19",
        "upload_time_iso_8601": "2019-02-24T04:12:19.738675Z",
        "url": "https://files.pythonhosted.org/packages/ba/07/0dcf5eb8411330c72a01f90a4b49c2274f8d9adbd52fa9d1d1d51bdf3f44/burl-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a42ad9420a5728708e11549958be125b3d0fca15505a0dd9cc9e96724e9b28df",
          "md5": "b1bed68fac242bc45c9e42b0a255922c",
          "sha256": "1bedcf9665f89d4f21665632f1b38f0000cfbbe623812e76459892f427e4f900"
        },
        "downloads": -1,
        "filename": "burl-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1bed68fac242bc45c9e42b0a255922c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 231207,
        "upload_time": "2022-03-15T22:07:55",
        "upload_time_iso_8601": "2022-03-15T22:07:55.328385Z",
        "url": "https://files.pythonhosted.org/packages/a4/2a/d9420a5728708e11549958be125b3d0fca15505a0dd9cc9e96724e9b28df/burl-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f833835e6dd5631bf0a7af1abcef413b0a9385bc6983320911fbe86507cb8752",
          "md5": "417b92b81cb0b02a72acdfd020fa8e9b",
          "sha256": "2998916b21d49bfa8453e752006ac8d56059936513f0a3db08f39b30532dd869"
        },
        "downloads": -1,
        "filename": "burl-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "417b92b81cb0b02a72acdfd020fa8e9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 247163,
        "upload_time": "2022-03-15T22:07:57",
        "upload_time_iso_8601": "2022-03-15T22:07:57.213389Z",
        "url": "https://files.pythonhosted.org/packages/f8/33/835e6dd5631bf0a7af1abcef413b0a9385bc6983320911fbe86507cb8752/burl-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a42ad9420a5728708e11549958be125b3d0fca15505a0dd9cc9e96724e9b28df",
        "md5": "b1bed68fac242bc45c9e42b0a255922c",
        "sha256": "1bedcf9665f89d4f21665632f1b38f0000cfbbe623812e76459892f427e4f900"
      },
      "downloads": -1,
      "filename": "burl-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1bed68fac242bc45c9e42b0a255922c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 231207,
      "upload_time": "2022-03-15T22:07:55",
      "upload_time_iso_8601": "2022-03-15T22:07:55.328385Z",
      "url": "https://files.pythonhosted.org/packages/a4/2a/d9420a5728708e11549958be125b3d0fca15505a0dd9cc9e96724e9b28df/burl-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f833835e6dd5631bf0a7af1abcef413b0a9385bc6983320911fbe86507cb8752",
        "md5": "417b92b81cb0b02a72acdfd020fa8e9b",
        "sha256": "2998916b21d49bfa8453e752006ac8d56059936513f0a3db08f39b30532dd869"
      },
      "downloads": -1,
      "filename": "burl-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "417b92b81cb0b02a72acdfd020fa8e9b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 247163,
      "upload_time": "2022-03-15T22:07:57",
      "upload_time_iso_8601": "2022-03-15T22:07:57.213389Z",
      "url": "https://files.pythonhosted.org/packages/f8/33/835e6dd5631bf0a7af1abcef413b0a9385bc6983320911fbe86507cb8752/burl-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}