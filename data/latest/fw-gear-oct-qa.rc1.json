{
  "info": {
    "author": "Flywheel",
    "author_email": "support@flywheel.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# OCT QA\nThis gear assesses the quality of OCT volumes and their slices. The criteria to flag a \nslice is being bigger than 1.5 * Interquartile Range (IQR) or smaller than 1.5 * IQR for \neach of the four measurement tests. If any slices are flagged in any of the four tests, \nthe `overall_qc` test will be set to `fail`. All test results are saved in the input \nfile's info dictionary under `\"qc\":\"oct-qa\"`. \n\n1) __dynamic_range__: Dynamic range of the retinal image slice. \n2) __variance_extraretinal__: the variance of the extraretinal/vitreous region. This \n   region gets segmented based on Otsu's thresholding method; it provides an estimate\n   of the base noise of the image. ![extraretinal_region](images/variance_estimate.jpg)\n3) __variance_intraretinal__: the variance of the retinal region. This is similarly\n   derived as extraretinal variance.\n4) __sharpness_slope__: the sharpness of the edges between the black regions of the \n   vitreous and the bright regions of the retinal layers; a higher slope indicates a \n   sharper image. ![sharpness_slope](images/oct_qa_sharpness_slope.jpg)\n   \nThe gear will:\n- Update the metadata of the input file. See example output below.\n- Generate histograms for three indexes so that low-quality slices can be flagged; these \n  histograms will only be generated if `save_figures_if_fail` is `true`.\n- Output a csv with slice QA measurements/indexes for further analysis.\n\n```json\n\"qc\": {\n  \"oct-qa\": {\n    \"job_info\": {\n      \"version\": \"0.0.5-d\",\n      \"job_id\": \"\",\n      \"inputs\": {\n        \"raw_input\": {\n          \"parent\": {\n            \"id\": \"60f71983a7fe04f03224792e\",\n            \"type\": \"acquisition\"\n          },\n          \"file_id\": \"610d9bff9c47094a376b8ddb\",\n          \"version\": 1,\n          \"file_name\": \"oct_volume_test.npy\"\n        }\n      },\n      \"config\": {\n        \"debug\": true,\n        \"save_figures_if_fail\": true\n      }\n    },\n    \"dynamic_range\": {\n      \"state\": \"PASS\",\n      \"data\": {\n        \"Mean Dynamic range\": 1.044,\n        \"Standard deviation Dynamic range\": 0.021,\n        \"Outliers Dynamic range\": \"No slices flagged\"\n      }\n    },\n    \"variance_extraretinal\": {\n      \"state\": \"PASS\",\n      \"data\": {\n        \"Mean Variance Extraretinal region\": 255.445,\n        \"Standard deviation Variance Extraretinal region\": 14.182,\n        \"Outliers Variance Extraretinal\": \"No slices flagged\"\n      }\n    },\n    \"variance_intraretinal\": {\n      \"state\": \"PASS\",\n      \"data\": {\n        \"Mean Variance Intraretinal\": 2050.806,\n        \"Standard deviation Variance Intraretinal\": 134.474,\n        \"Outliers Variance Intraretinal\": \"No slices flagged\"\n      }\n    },\n    \"sharpness_slope\": {\n      \"state\": \"PASS\",\n      \"data\": {\n        \"Mean Sharpness slope\": 19.047,\n        \"Standard deviation Sharpness slope\": 0.487,\n        \"Outliers Sharpness slope\": \"No slices flagged\"\n      }\n    },\n    \"overall_qc\": {\n      \"state\": \"PASS\",\n      \"data\": {\n        \"result\": \"all qc tests passed\"\n      }\n    }\n  }\n}\n\n```\n\n## Usage\n\n### Inputs\n\n* __raw_input__: Raw OCT slices (.npy, .dcm or .dcm.zip)\n\n### Configuration\n* __debug__ (boolean, default False): Include debug statements in output.\n* __save_figures_if_fail__ (boolean, default False): If any of the qa tests fail, save all generated histograms within the parent container.\n\n## Contributing\n\nFor more information about how to get started contributing to that gear, \ncheckout [CONTRIBUTING.md](CONTRIBUTING.md).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/flywheel-io/flywheel-apps/oct-qa",
    "keywords": "Flywheel,Gears",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fw-gear-oct-qa",
    "package_url": "https://pypi.org/project/fw-gear-oct-qa/",
    "platform": null,
    "project_url": "https://pypi.org/project/fw-gear-oct-qa/",
    "project_urls": {
      "Homepage": "https://gitlab.com/flywheel-io/flywheel-apps/oct-qa",
      "Repository": "https://gitlab.com/flywheel-io/flywheel-apps/oct-qa"
    },
    "release_url": "https://pypi.org/project/fw-gear-oct-qa/0.0.1.dev0/",
    "requires_dist": [
      "flywheel-gear-toolkit (>=0.6.5,<0.7.0)",
      "pandas (>=1.3.1,<2.0.0)",
      "numpy (>=1.21.1,<2.0.0)",
      "matplotlib (>=3.4.2,<4.0.0)",
      "scipy (>=1.7.0,<2.0.0); python_version >= \"3.8\" and python_version < \"3.10\"",
      "fw-file[all] (>=1.0,<2.0)",
      "opencv-python (>=4.5.3,<5.0.0)",
      "pre-commit (>=2.13.0,<3.0.0)",
      "regex (>=2021.8.3,<2022.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "OCT Quality Assessment",
    "version": "0.0.1.dev0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14729814,
  "releases": {
    "0.0.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3c1c5cf6e1007948eeccb601250c4ac9d922c613fba851dd2e2f5d574540563",
          "md5": "cfe2b4eaa789f9bdeee96a0044b5acca",
          "sha256": "335067930e10f83db011e530c8a965423c340697eed7a388a72186e35a0a3f38"
        },
        "downloads": -1,
        "filename": "fw_gear_oct_qa-0.0.1.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cfe2b4eaa789f9bdeee96a0044b5acca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 14494,
        "upload_time": "2022-08-11T13:49:02",
        "upload_time_iso_8601": "2022-08-11T13:49:02.914725Z",
        "url": "https://files.pythonhosted.org/packages/a3/c1/c5cf6e1007948eeccb601250c4ac9d922c613fba851dd2e2f5d574540563/fw_gear_oct_qa-0.0.1.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3c1c5cf6e1007948eeccb601250c4ac9d922c613fba851dd2e2f5d574540563",
        "md5": "cfe2b4eaa789f9bdeee96a0044b5acca",
        "sha256": "335067930e10f83db011e530c8a965423c340697eed7a388a72186e35a0a3f38"
      },
      "downloads": -1,
      "filename": "fw_gear_oct_qa-0.0.1.dev0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cfe2b4eaa789f9bdeee96a0044b5acca",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 14494,
      "upload_time": "2022-08-11T13:49:02",
      "upload_time_iso_8601": "2022-08-11T13:49:02.914725Z",
      "url": "https://files.pythonhosted.org/packages/a3/c1/c5cf6e1007948eeccb601250c4ac9d922c613fba851dd2e2f5d574540563/fw_gear_oct_qa-0.0.1.dev0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}