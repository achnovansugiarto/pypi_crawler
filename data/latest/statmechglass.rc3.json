{
  "info": {
    "author": "Mikkel Bødker",
    "author_email": "mikkelboedker@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# 1. Introduction\n\nThis python package uses statistical mechanics-based modeling\nto accurately predict the short-range order structural distribution\nin oxide glasses. To make the predictions, the model requires interaction\nenthalpies obtained by fitting to experimental data (typically obtained with\nNMR spectroscopy techniques).\n\nThe package is designed for building a\nlibrary of enthalpies by providing relevant data to the package.\n\nFor a detailed guide, please refer to \"the article\" (will be filed when published).\nAny bugs or questions, do not hesitate to contact msb@bio.aau.dk or mos@bio.aau.dk\n\n# 2. Package format\n\nThe basic format of the package follows:\n\nStatMechGlass  \n  .  \n  ├── Data  \n  │   ├── SiB  \n  │   │   ├── Na.csv  \n  │   └── SiO2  \n  │       ├── Na.csv  \n  │       ├── Na_Tg.csv  \n  ├── Parameters  \n  │   ├── MF  \n  │   │   ├── BAl.csv  \n  │   │   └── SiB.csv  \n  │   └── SiO2  \n  │       ├── K.csv  \n  │       └── Na.csv  \n  ├── stat_mech_module  \n  │   ├── `__init__`.py  \n  │   ├── stat_mech_borate.py  \n  │   ├── stat_mech_phosphate.py  \n  │   └── stat_mech_silicate.py  \n  ├── `__init__`.py   \n  ├── stat_mech_glass.py  \n\nHere, experimentally obtained data should be placed in the /Data directory.\nThe /parameter directory is where the package will automatically\nstore the enthalpies obtained by fitting the provided data. Some enthalpies are provided already.\n\n# 3. Usage\n\nWhen using the package, either type commands in the stat_mech_glass.py\nfile directly or import the package to a python script. It is advised to write code within `if __name__ == '__main__'`.\nAlternatively, place the package in the working directory and import it with\n\n```python\nimport StatMechGlass.stat_mech_glass as smg\n```\nor import with pip:\n\n```python\npip install StatMechGlass\nfrom StatMechGlass import stat_mech_glass as smg\n```\n\nThe four main functions:\n\n```python\nsmg.smg_binary_par(former, modifier, it=10, path_in=None)  \nsmg.smg_ternary_par(formers, modifier, it=10, path_in=None)  \nsmg.smg_structure(val, Tg, p = None)  \nsmg.smg_plot(comps, free_comp, Tg, plt_save = False)  \n```\n\n## 3.1 Fitting enthalpy parameters on binary oxide glasses\n\nWhen building the enthalpy database, use smg.smg_binary_par:\n\n  1.  Place data in the Data/\"Former\" directory, where \"Former\" corresponds\n      to the network forming species of the glass. Currently supported formers:  \n          \"SiO2\", \"B2O3\", \"P2O5\"  \n      The data file should be named appropriately such as \"Na.csv\" or \"K.csv\"  \n      Refer to Section 4 for data file layout.\n\n  2.  Place T<sub>g</sub> data for the same glass system in the same directory with the name:  \n          \"modifier\"_Tg.csv  \n      Here, \"modifier\" should be the same as in 1. such as \"Na_Tg.csv\" or \"K_Tg.csv\"\n      The T<sub>g</sub> data does not need to be for the same glass compositions as the\n      structural data\n\n  3.  Execute the function\n      ```python  \n      smg.smg_binary_par(former, modifier, it=10)\n      ```  \n      Example:  \n      ```python\n      smg.smg_binary_par(\"Si\", \"Na\", it=500)  \n      ```\n      500 or more iterations are advised for accurate enthalpies (refer to the\n      manuscript for more details)\n\npath_in can be used to change the path for the input data (naming convention must still be followed)\n\n## 3.2 Fitting interaction parameters on ternary oxide glasses\n\nWhen building the former/former interaction database, use smg.smg_ternary_par:\n\n  1.  Place data in the Data/\"Former\"\"Former\" directory, where \"Former\"\n      corresponds to the network forming or intermediate specie of the glass.\n      Currently supported formers and intermediates:  \n          SiO<sub>2</sub>, B<sub>2</sub>O<sub>3</sub>, P<sub>2</sub>O<sub>5</sub>, Al<sub>2</sub>O<sub>5</sub>  \n      Here, the folder must be named according to the naming convention (section 4):  \n          \"SiB\", \"BP\", \"PSi\", \"AlB\"  \n      The data file should be named appropriately such as \"Na.csv\" or \"K.csv\"\n\n  2.  T<sub>g</sub> data should be provided for each glass in the data file.\n      Refer to section 4 for clarification on data file content\n\n  3.  Execute the function  \n      ```python\n      smg.smg_ternary_par(formers, modifier, it=10)  \n      ```\n      Example:  \n      ```python\n      smg.smg_ternary_par([\"Si\", \"B\"], \"Na\", it=100)  \n      ```\n      100 or more iterations are advised for accurate parameter (refer to the\n      manuscript for more details)\n\npath_in can be used to change the path for the input data (naming convention must still be followed)\n\n## 3.3 Predicting the structural distribution in a given composition\n\nThe number of compositions to be predicted by the model increases exponentially\nwhen building the enthalpy database. This is due to the tranferability of the\ninteraction enthalpies. That is, enthalpies established from Na<sub>2</sub>O-SiO<sub>2</sub> and Na<sub>2</sub>O-B<sub>2</sub>O<sub>3</sub>\nglasses may also be used to predict any Na<sub>2</sub>O-B<sub>2</sub>O<sub>3</sub>-SiO<sub>2</sub> composition.  \n\nWhen using the model to predict structural distributions, use smg.smg_structure:\n\n  1.  Define the glass composition using python directory  \n      Example:  \n      ```python\n      glass_comp = {\"Si\": 25, \"B\": 25, \"Na\": 25, \"K\":25}  \n      ```\n  2.  Run the function with a defined T<sub>g</sub>\n      Example:  \n      ```python\n      results = smg.smg_structure(glass_comp, 700)  \n      ```\n\nThis way, users may easily build a database of structures from a large set of\nglass compositions\n\n## 3.4 Simple 2D plotting\n\nAs glass compositions may consist of many different elements, smg.smg_structure\ncan be used to return structures which the user may plot themselves. For simple\nvisualization, the smg.smg_plot function may be used:\n\n  1.  Define the glass composition using python directory  \n      Example:  \n      ```python\n      glass_comp = {\"Si\": 25, \"B\": 25, \"Na\": 0}  \n      ```\n      Alternatively, leave out the free component:  \n      ```python\n      glass_comp = {\"Si\": 25, \"B\": 25}  \n      ```\n  2.  Run the function with a defined T<sub>g</sub> and free component  \n      Example:  \n      ```python\n      smg.smg_plot(glass_comp, \"Na\", 800, plt_save = True)  \n      ```\n      Set plt_save to True for saving the plot as .png file  \n\nThis will make a plot of 25SiO<sub>2</sub>-25B<sub>2</sub>O<sub>3</sub> as a function of Na<sub>2</sub>O content.\n\n# 4. Naming convention  \n\nFor the script to locate files, parameters and functions, a certain naming\nconvention was introduced which must be followed:\n\n## 4.1 Network formers and modifiers\n\nWhen calling network formers in any function these are abbreviated to their\nbasic atom:  \n\"Si\", \"B\", \"Al\", \"P\"  \nExample:  \n25SiO<sub>2</sub>-25B<sub>2</sub>O<sub>3</sub>-50Na<sub>2</sub>O should be {\"Si\": 25, \"B\": 25, \"Na\": 50}. Note that the\nglass contains 2 boron atoms for each silicon atom but in the naming convention\nthey seem to contain the same number of atoms.\n\nWhen using modifiers in the functions, these should be named according to the data\nfiles provided by the user. If the data file is named \"Na.csv\", \"Na\" should be used\nin the functions.\n\n## 4.2 Datafiles\n\nAll data files should consist of numbers only. No letters\n\n### 4.2.1 Binary oxide glass data  \n\nAll binary oxide glass data files must contain the modifier concentration in the\nfirst column and the structure distributions in the following columns:\n\nmodifier_mol%,former_structure1,former_structure2,...former_structureN\n\nExample for Na<sub>2</sub>O-SiO<sub>2</sub> data:  \nNa<sub>2</sub>O%,Si<sup>4</sup>%,Si<sup>3</sup>%,Si<sup>2</sup>%,Si<sup>1</sup>%,Si<sup>0</sup>%  \nExample with numbers:  \n\n20,50,48,2,0,0  \n25,38,61,1,0,0  \n28.6,27,68,5,0,0  \n33.3,11,79,10,0,0  \n\nThe structures reported depend on the network forming species:  \n\nSiO<sub>2</sub>:  \nSi<sup>4</sup>,Si<sup>3</sup>,Si<sup>2</sup>,Si<sup>1</sup>,Si<sup>0</sup>  \n\nB<sub>2</sub>O<sub>3</sub>:  \nB<sup>4</sup>  \n\nP<sub>2</sub>O<sub>5</sub>:  \nP<sup>3</sup>,P<sup>2</sup>,P<sup>1</sup>,P<sup>0</sup>  \n\nAl<sub>2</sub>O<sub>3</sub>:  \nAl<sup>4</sup>,Al<sup>5/6*</sup>  \n\n`*` Note that Al<sup>5</sup> and Al<sup>6</sup> species are combined.\n\nThe T<sub>g</sub> file should contain:  \nmodifier_mol%,T<sub>g</sub>\n\n### 4.2.2 Ternary oxide glass data  \n\nAll ternary oxide glass data files must contain \"modifier concentration, first former concentration,\nsecond former concentration, T<sub>g</sub>\" in columns 1, 2, 3, and 4, respectively:\n\nmodifier_mol%,former1_mol%,former2_mol%,T<sub>g</sub>,former1_structures,former2_structures.  \n\nThe structures provided should follow the convention explained in Section 4.2.1 and be in order of\nnetwork forming species.  \nExample data file for smg.smg_ternary_par([\"Si\", \"B\"], \"Na\", it=100):  \nNa<sub>2</sub>O%,SiO<sub>2</sub>%,B<sub>2</sub>O<sub>3</sub>%,T<sub>g</sub>,Si<sup>4</sup>,Si<sup>3</sup>,Si<sup>2</sup>,Si<sup>1</sup>,Si<sup>0</sup>,B<sup>4</sup>  \n\nExample for smg.smg_ternary_par([\"B\", \"Si\"], \"Na\", it=100):  \nNa<sub>2</sub>O%,B<sub>2</sub>O<sub>3</sub>%,SiO<sub>2</sub>%,T<sub>g</sub>,B<sup>4</sup>,Si<sup>4</sup>,Si<sup>3</sup>,Si<sup>2</sup>,Si<sup>1</sup>,Si<sup>0</sup>  \n\n# 5. Final remarks\n\nThank you for using the software!  \nUpon building on the software or enthalpy database, you are encouraged to make a pull request by first making a seperate branch. Make sure to describe the change in detain and how you tested the change.\nPossible changes could include: adding new data or parameters to the database, building upon the modules to include more glass families, or general bug fixes/improvements.\n\nThanks,  \nMikkel Bødker, msb@bio.aau.dk  \nOxide Glass Chemistry Group, Department of Chemistry and Bioscience, Aalborg University, Denmark\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/OxideGlassGroupAAU/StatMechGlass",
    "keywords": "glass,statistical mechanics",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "StatMechGlass",
    "package_url": "https://pypi.org/project/StatMechGlass/",
    "platform": "",
    "project_url": "https://pypi.org/project/StatMechGlass/",
    "project_urls": {
      "Homepage": "https://github.com/OxideGlassGroupAAU/StatMechGlass"
    },
    "release_url": "https://pypi.org/project/StatMechGlass/0.1.5/",
    "requires_dist": [
      "numpy (>=1.16)",
      "scipy (>=1.2)",
      "matplotlib (>=3.4.2)",
      "sklearn"
    ],
    "requires_python": ">=3.6",
    "summary": "Calculates structure of oxide glasses using statistical mechanics",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11646960,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c478ea2bd694b5eb03e0d7a942e9f0b46d131f3f9ee813c01172341fc220e3b",
          "md5": "0d8c8849ef2a49372f8d93cfda89012b",
          "sha256": "9ba16dd57e029c846797ca987eb442fe555c69ab659a363870deea33bd41e7a4"
        },
        "downloads": -1,
        "filename": "StatMechGlass-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d8c8849ef2a49372f8d93cfda89012b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 48296,
        "upload_time": "2021-07-13T19:27:24",
        "upload_time_iso_8601": "2021-07-13T19:27:24.802970Z",
        "url": "https://files.pythonhosted.org/packages/7c/47/8ea2bd694b5eb03e0d7a942e9f0b46d131f3f9ee813c01172341fc220e3b/StatMechGlass-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4ef18a50baeb20760eb973aec6fc2e222bd670aa5cb1dd579b8bea5c746c37d",
          "md5": "e10915120229b66e3ef2b627c4323933",
          "sha256": "6facc837618fc0585a7562d2d2beb30ecf592c0f588e2b1165a5256d8011d932"
        },
        "downloads": -1,
        "filename": "StatMechGlass-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e10915120229b66e3ef2b627c4323933",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43433,
        "upload_time": "2021-07-13T19:27:26",
        "upload_time_iso_8601": "2021-07-13T19:27:26.591428Z",
        "url": "https://files.pythonhosted.org/packages/b4/ef/18a50baeb20760eb973aec6fc2e222bd670aa5cb1dd579b8bea5c746c37d/StatMechGlass-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90ac1d4a40053758f9a6042ff00b0aea9555bcac57e903a9534b1db4dc07deed",
          "md5": "2ed78cc8e6503da8c3b5f41f458d1bfd",
          "sha256": "1f2f401c0fdbb3201b559bc7d7a8346e563ff1eb1c54eb3b0dfd81ea61acbf4a"
        },
        "downloads": -1,
        "filename": "StatMechGlass-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ed78cc8e6503da8c3b5f41f458d1bfd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 48228,
        "upload_time": "2021-07-13T19:57:00",
        "upload_time_iso_8601": "2021-07-13T19:57:00.817080Z",
        "url": "https://files.pythonhosted.org/packages/90/ac/1d4a40053758f9a6042ff00b0aea9555bcac57e903a9534b1db4dc07deed/StatMechGlass-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "231d2d9aa49c4f5acb2946a4daae676b3df33fa4d0c0d0abbf21f355d483d9ca",
          "md5": "6f7aa478fdad1a9cabfaa71510fbd46d",
          "sha256": "beba5a05855d2b7a0f395d8f8d0c0d7c6d43c8765a9cf65e381f6e48f82617f7"
        },
        "downloads": -1,
        "filename": "StatMechGlass-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6f7aa478fdad1a9cabfaa71510fbd46d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43293,
        "upload_time": "2021-07-13T19:57:02",
        "upload_time_iso_8601": "2021-07-13T19:57:02.795111Z",
        "url": "https://files.pythonhosted.org/packages/23/1d/2d9aa49c4f5acb2946a4daae676b3df33fa4d0c0d0abbf21f355d483d9ca/StatMechGlass-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "661358ef7ae316698dfe06fa983e2274f97d0346bfb2e05507f6819767c3e723",
          "md5": "6659033c8ceae4dc4af01e1ba9de3904",
          "sha256": "f209c140d2d339a42176458bb80d9e55651815dc30d66aff77a9a8c30916b4bd"
        },
        "downloads": -1,
        "filename": "StatMechGlass-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6659033c8ceae4dc4af01e1ba9de3904",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 47976,
        "upload_time": "2021-10-06T18:20:20",
        "upload_time_iso_8601": "2021-10-06T18:20:20.444884Z",
        "url": "https://files.pythonhosted.org/packages/66/13/58ef7ae316698dfe06fa983e2274f97d0346bfb2e05507f6819767c3e723/StatMechGlass-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "756a32c87250b1a5a3c459447e0b03aacb5d89b54fc0405d0eb4e82c69ad7d6e",
          "md5": "d29b8efe9773b2fcd7d9ad9651c82a94",
          "sha256": "fd7e2b252bc80d388320a19364455e3e711615f43e236ca858f256e411055c79"
        },
        "downloads": -1,
        "filename": "StatMechGlass-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d29b8efe9773b2fcd7d9ad9651c82a94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 41111,
        "upload_time": "2021-10-06T18:20:22",
        "upload_time_iso_8601": "2021-10-06T18:20:22.794614Z",
        "url": "https://files.pythonhosted.org/packages/75/6a/32c87250b1a5a3c459447e0b03aacb5d89b54fc0405d0eb4e82c69ad7d6e/StatMechGlass-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "661358ef7ae316698dfe06fa983e2274f97d0346bfb2e05507f6819767c3e723",
        "md5": "6659033c8ceae4dc4af01e1ba9de3904",
        "sha256": "f209c140d2d339a42176458bb80d9e55651815dc30d66aff77a9a8c30916b4bd"
      },
      "downloads": -1,
      "filename": "StatMechGlass-0.1.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6659033c8ceae4dc4af01e1ba9de3904",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 47976,
      "upload_time": "2021-10-06T18:20:20",
      "upload_time_iso_8601": "2021-10-06T18:20:20.444884Z",
      "url": "https://files.pythonhosted.org/packages/66/13/58ef7ae316698dfe06fa983e2274f97d0346bfb2e05507f6819767c3e723/StatMechGlass-0.1.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "756a32c87250b1a5a3c459447e0b03aacb5d89b54fc0405d0eb4e82c69ad7d6e",
        "md5": "d29b8efe9773b2fcd7d9ad9651c82a94",
        "sha256": "fd7e2b252bc80d388320a19364455e3e711615f43e236ca858f256e411055c79"
      },
      "downloads": -1,
      "filename": "StatMechGlass-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "d29b8efe9773b2fcd7d9ad9651c82a94",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 41111,
      "upload_time": "2021-10-06T18:20:22",
      "upload_time_iso_8601": "2021-10-06T18:20:22.794614Z",
      "url": "https://files.pythonhosted.org/packages/75/6a/32c87250b1a5a3c459447e0b03aacb5d89b54fc0405d0eb4e82c69ad7d6e/StatMechGlass-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}