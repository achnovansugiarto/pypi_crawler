{
  "info": {
    "author": "Syrus Akbary",
    "author_email": "me@syrusakbary.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "==============================\nGraphQL WS Apollo - DEPRECATED\n==============================\n\n**This `package is dead\n<https://github.com/graphql-python/graphene-django/issues/1324>`_. `Use\nStrawberry instead <https://strawberry.rocks/>`_**\n\n\nWebsocket backend for GraphQL subscriptions fixed to work with Apollo Client.\n\nSupports the following application servers:\n\nPython 3 application servers, using asyncio:\n\n    * `aiohttp`_\n    * `websockets compatible servers`_ such as Sanic\n      (via `websockets <https://github.com/aaugustin/websockets/>`__ library)\n    * `Django v2+`_\n\nPython 2 application servers (Not Supported):\n\n    * `Gevent compatible servers`_ such as Flask\n    * `Django v1.x`_\n      (via `channels v1.x <https://channels.readthedocs.io/en/1.x/inshort.html>`__)\n\n\nInstallation instructions\n=========================\n\nFor instaling graphql-ws-apollo, just run this command in your shell\n\n.. code:: bash\n\n    pip install graphql-ws-apollo\n\n\nExamples\n========\n\nPython 3 servers\n----------------\n\nCreate a subscribable schema like this:\n\n.. code:: python\n\n    import asyncio\n    import graphene\n\n\n    class Query(graphene.ObjectType):\n        hello = graphene.String()\n\n        @staticmethod\n        def resolve_hello(obj, info, **kwargs):\n            return \"world\"\n\n\n    class Subscription(graphene.ObjectType):\n        count_seconds = graphene.Float(up_to=graphene.Int())\n\n        async def resolve_count_seconds(root, info, up_to):\n            for i in range(up_to):\n                yield i\n                await asyncio.sleep(1.)\n            yield up_to\n\n\n    schema = graphene.Schema(query=Query, subscription=Subscription)\n\naiohttp\n~~~~~~~\n\nThen just plug into your aiohttp server.\n\n.. code:: python\n\n    from graphql_ws_apollo.aiohttp import AiohttpSubscriptionServer\n    from .schema import schema\n\n    subscription_server = AiohttpSubscriptionServer(schema)\n\n\n    async def subscriptions(request):\n        ws = web.WebSocketResponse(protocols=('graphql-ws',))\n        await ws.prepare(request)\n\n        await subscription_server.handle(ws)\n        return ws\n\n\n    app = web.Application()\n    app.router.add_get('/subscriptions', subscriptions)\n\n    web.run_app(app, port=8000)\n\nYou can see a full example here:\nhttps://github.com/davidlemayian/graphql-ws-apollo/tree/master/examples/aiohttp\n\n\nwebsockets compatible servers\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWorks with any framework that uses the websockets library for its websocket\nimplementation. For this example, plug in your Sanic server.\n\n.. code:: python\n\n    from graphql_ws_apollo.websockets_lib import WsLibSubscriptionServer\n    from . import schema\n\n    app = Sanic(__name__)\n\n    subscription_server = WsLibSubscriptionServer(schema)\n\n    @app.websocket('/subscriptions', subprotocols=['graphql-ws'])\n    async def subscriptions(request, ws):\n        await subscription_server.handle(ws)\n        return ws\n\n\n    app.run(host=\"0.0.0.0\", port=8000)\n\n\nDjango v2+\n~~~~~~~~~~\n\n\nDjango Channels 2\n~~~~~~~~~~~~~~~~~\n\nSet up with Django Channels just takes three steps:\n\n1. Install the apps\n2. Set up your schema\n3. Configure the channels router application\n\nFirst ``pip install channels`` and it to your ``INSTALLED_APPS``. If you\nwant graphiQL, install the ``graphql_ws_apollo.django`` app before\n``graphene_django`` to serve a graphiQL template that will work with\nwebsockets:\n\n.. code:: python\n\n    INSTALLED_APPS = [\n        \"channels\",\n        \"graphql_ws_apollo.django\",\n        \"graphene_django\",\n        # ...\n    ]\n\nPoint to your schema in Django settings:\n\n.. code:: python\n\n    GRAPHENE = {\n        'SCHEMA': 'yourproject.schema.schema'\n    }\n\nFinally, you can set up channels routing yourself (maybe using\n``graphql_ws_apollo.django.routing.websocket_urlpatterns`` in your\n``URLRouter``), or you can just use one of the preset channels\napplications:\n\n.. code:: python\n\n    ASGI_APPLICATION = 'graphql_ws_apollo.django.routing.application'\n    # or\n    ASGI_APPLICATION = 'graphql_ws_apollo.django.routing.auth_application'\n\nRun ``./manage.py runserver`` and go to\n`http://localhost:8000/graphql <http://localhost:8000/graphql>`__ to test!\n\n\nPython 2  servers\n-----------------\n\nCreate a subscribable schema like this:\n\n.. code:: python\n\n    import graphene\n    from rx import Observable\n\n\n    class Query(graphene.ObjectType):\n        hello = graphene.String()\n\n        @staticmethod\n        def resolve_hello(obj, info, **kwargs):\n            return \"world\"\n\n\n    class Subscription(graphene.ObjectType):\n        count_seconds = graphene.Float(up_to=graphene.Int())\n\n        async def resolve_count_seconds(root, info, up_to=5):\n            return Observable.interval(1000)\\\n                             .map(lambda i: \"{0}\".format(i))\\\n                             .take_while(lambda i: int(i) <= up_to)\n\n\n    schema = graphene.Schema(query=Query, subscription=Subscription)\n\nGevent compatible servers\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThen just plug into your Gevent server, for example, Flask:\n\n.. code:: python\n\n    from flask_sockets import Sockets\n    from graphql_ws_apollo.gevent import GeventSubscriptionServer\n    from schema import schema\n\n    subscription_server = GeventSubscriptionServer(schema)\n    app.app_protocol = lambda environ_path_info: 'graphql-ws'\n\n\n    @sockets.route('/subscriptions')\n    def echo_socket(ws):\n        subscription_server.handle(ws)\n        return []\n\nYou can see a full example here:\nhttps://github.com/davidlemayian/graphql-ws-apollo/tree/master/examples/flask_gevent\n\nDjango v1.x\n~~~~~~~~~~~\n\nFor Django v1.x and Django Channels v1.x, setup your schema in ``settings.py``\n\n.. code:: python\n\n    GRAPHENE = {\n        'SCHEMA': 'yourproject.schema.schema'\n    }\n\nThen ``pip install \"channels<1\"`` and it to your django apps, adding the\nfollowing to your ``settings.py``\n\n.. code:: python\n\n    CHANNELS_WS_PROTOCOLS = [\"graphql-ws\", ]\n    CHANNEL_LAYERS = {\n        \"default\": {\n            \"BACKEND\": \"asgiref.inmemory.ChannelLayer\",\n            \"ROUTING\": \"django_subscriptions.urls.channel_routing\",\n        },\n    }\n\nAnd finally add the channel routes\n\n.. code:: python\n\n    from channels.routing import route_class\n    from graphql_ws_apollo.django_channels import GraphQLSubscriptionConsumer\n\n    channel_routing = [\n        route_class(GraphQLSubscriptionConsumer, path=r\"^/subscriptions\"),\n    ]\n\nYou can see a full example here:\nhttps://github.com/graphql-python/graphql-ws/tree/master/examples/django_subscriptions\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/davidlemayian/graphql-ws-apollo",
    "keywords": "graphql,subscriptions,graphene,websockets,apollo-graphql",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "graphql-ws-apollo",
    "package_url": "https://pypi.org/project/graphql-ws-apollo/",
    "platform": null,
    "project_url": "https://pypi.org/project/graphql-ws-apollo/",
    "project_urls": {
      "Homepage": "https://github.com/davidlemayian/graphql-ws-apollo"
    },
    "release_url": "https://pypi.org/project/graphql-ws-apollo/0.4.4.4/",
    "requires_dist": [
      "graphql-core (==2.*)",
      "flake8 (<4,>=3.7) ; extra == 'dev'",
      "black ; extra == 'dev'",
      "tox (<4,>=3) ; extra == 'dev'",
      "Sphinx (<2,>=1.8) ; extra == 'dev'",
      "bumpversion (>=0.5.3) ; extra == 'maintainer'",
      "wheel (>=0.33.6) ; extra == 'maintainer'",
      "PyYAML (<6,>=5.3) ; extra == 'maintainer'",
      "pytest-cov ; extra == 'test'",
      "graphene (<3,>=2.0) ; extra == 'test'",
      "gevent ; extra == 'test'",
      "graphene-django ; extra == 'test'",
      "pytest (<5,>=4) ; (python_version < \"3\") and extra == 'test'",
      "mock ; (python_version < \"3\") and extra == 'test'",
      "django (==1.11.*) ; (python_version < \"3\") and extra == 'test'",
      "channels (==1.*) ; (python_version < \"3\") and extra == 'test'",
      "pytest (>5) ; (python_version >= \"3\") and extra == 'test'",
      "django (==3.*) ; (python_version >= \"3\") and extra == 'test'",
      "channels (==3.*) ; (python_version >= \"3\") and extra == 'test'",
      "pytest-asyncio ; (python_version >= \"3.4\") and extra == 'test'",
      "aiohttp ; (python_version >= \"3.5\") and extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Websocket backend for GraphQL subscriptions fixed for apollo client",
    "version": "0.4.4.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15065188,
  "releases": {
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "858b20f1884f5a23fe1c66194145061246393b345b2cd373411f658de136bf73",
          "md5": "c95039c7490a0e01f7215c23ef75b10c",
          "sha256": "63950572a0ce5b89af18024e6c64dec082b1006b0231f3ff7a3a2842a15c852c"
        },
        "downloads": -1,
        "filename": "graphql_ws_apollo-0.4.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c95039c7490a0e01f7215c23ef75b10c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 17931,
        "upload_time": "2022-06-02T22:21:47",
        "upload_time_iso_8601": "2022-06-02T22:21:47.748884Z",
        "url": "https://files.pythonhosted.org/packages/85/8b/20f1884f5a23fe1c66194145061246393b345b2cd373411f658de136bf73/graphql_ws_apollo-0.4.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51ef1cc09e15656d01c20e117a7a1cf702c1f272eb62ade23c4b91d31cba27b7",
          "md5": "c5ee3ec028b41d092196f6705e6e5e4e",
          "sha256": "1ad15ddc7ceb5a1385a5c453195a306b1c087c13837e186ff561185a67d30579"
        },
        "downloads": -1,
        "filename": "graphql-ws-apollo-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c5ee3ec028b41d092196f6705e6e5e4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47771,
        "upload_time": "2022-06-02T22:21:54",
        "upload_time_iso_8601": "2022-06-02T22:21:54.521498Z",
        "url": "https://files.pythonhosted.org/packages/51/ef/1cc09e15656d01c20e117a7a1cf702c1f272eb62ade23c4b91d31cba27b7/graphql-ws-apollo-0.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74e9331606fef34d03fd557f7a86a258d3f404e56563dc9bd531fc4aeffcd084",
          "md5": "4388db24f821ce100f6f528639dbabdc",
          "sha256": "f0c78c2d28bcb54f77e373dae76bd94c274bc4165e3454869bfbd78b1e78a5fe"
        },
        "downloads": -1,
        "filename": "graphql_ws_apollo-0.4.4.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4388db24f821ce100f6f528639dbabdc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 17982,
        "upload_time": "2022-06-10T21:58:47",
        "upload_time_iso_8601": "2022-06-10T21:58:47.984972Z",
        "url": "https://files.pythonhosted.org/packages/74/e9/331606fef34d03fd557f7a86a258d3f404e56563dc9bd531fc4aeffcd084/graphql_ws_apollo-0.4.4.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cf77f73cee4dbd543d4e0573216301cff3c8488a09906d967e78888465a942d",
          "md5": "e2284879645139482258c48b929f9496",
          "sha256": "19a1c83ac54539646ead45e910aeeb5110f82cb4ef0b9f9b7f73f72a6cf849d8"
        },
        "downloads": -1,
        "filename": "graphql-ws-apollo-0.4.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e2284879645139482258c48b929f9496",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47874,
        "upload_time": "2022-06-10T21:58:50",
        "upload_time_iso_8601": "2022-06-10T21:58:50.816696Z",
        "url": "https://files.pythonhosted.org/packages/2c/f7/7f73cee4dbd543d4e0573216301cff3c8488a09906d967e78888465a942d/graphql-ws-apollo-0.4.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdadbb4563b679df0b279267276b5e94eab2b4d9831afb18e7cc029ed4751e83",
          "md5": "7281b63cfe7bc27f84dcbb3e2b0fac9f",
          "sha256": "cb335cce5d948770fcff2c7e2e069dcf53fa0106d86c9482d2074713a52704a5"
        },
        "downloads": -1,
        "filename": "graphql_ws_apollo-0.4.4.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7281b63cfe7bc27f84dcbb3e2b0fac9f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18031,
        "upload_time": "2022-07-26T23:32:09",
        "upload_time_iso_8601": "2022-07-26T23:32:09.251145Z",
        "url": "https://files.pythonhosted.org/packages/fd/ad/bb4563b679df0b279267276b5e94eab2b4d9831afb18e7cc029ed4751e83/graphql_ws_apollo-0.4.4.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "270ec61c322a929a63dab4eeda9ad2b8fe985890617cb4a3d68581925642c9fa",
          "md5": "4df8696d9dd4a655f79a0983101b3a53",
          "sha256": "b84d39605c420ecfef767a70fcd82cdcda393c24fc259c18b444cc5f006bee39"
        },
        "downloads": -1,
        "filename": "graphql-ws-apollo-0.4.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4df8696d9dd4a655f79a0983101b3a53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47931,
        "upload_time": "2022-07-26T23:32:12",
        "upload_time_iso_8601": "2022-07-26T23:32:12.296298Z",
        "url": "https://files.pythonhosted.org/packages/27/0e/c61c322a929a63dab4eeda9ad2b8fe985890617cb4a3d68581925642c9fa/graphql-ws-apollo-0.4.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1372c15777beb38ab1ff70c91c8a5ad1e143258ff299857645f5b3a241d49277",
          "md5": "875f4252437f1474310c65ca0ae949ea",
          "sha256": "7003d0e2582a56d9a118ea7c8b5209213c0845429d0f451aa48b69a0213a8b65"
        },
        "downloads": -1,
        "filename": "graphql_ws_apollo-0.4.4.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "875f4252437f1474310c65ca0ae949ea",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18044,
        "upload_time": "2022-09-08T14:49:14",
        "upload_time_iso_8601": "2022-09-08T14:49:14.384993Z",
        "url": "https://files.pythonhosted.org/packages/13/72/c15777beb38ab1ff70c91c8a5ad1e143258ff299857645f5b3a241d49277/graphql_ws_apollo-0.4.4.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb1216ed283a06011d81d44cce4050611de16338e004e3c31c9a648650034040",
          "md5": "6a185bedf2bbd880d128f47f158fa7dd",
          "sha256": "9974403b770a75f64c0255fbb889fd86778251b923c99337322e7b67cb21e5a4"
        },
        "downloads": -1,
        "filename": "graphql-ws-apollo-0.4.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6a185bedf2bbd880d128f47f158fa7dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47955,
        "upload_time": "2022-09-08T14:49:16",
        "upload_time_iso_8601": "2022-09-08T14:49:16.600223Z",
        "url": "https://files.pythonhosted.org/packages/eb/12/16ed283a06011d81d44cce4050611de16338e004e3c31c9a648650034040/graphql-ws-apollo-0.4.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1421dc2ff7c5e63672956f7a70cc5e70fc8b8c23d57921ab352b64c2446d9708",
          "md5": "48e3a250637bd213469780e5a9a52352",
          "sha256": "b482e8f82bbe50b57ea62dc3246750c4967e94d4d6af2649aab0835f22ef831d"
        },
        "downloads": -1,
        "filename": "graphql_ws_apollo-0.4.4.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "48e3a250637bd213469780e5a9a52352",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18165,
        "upload_time": "2022-09-12T09:43:59",
        "upload_time_iso_8601": "2022-09-12T09:43:59.064924Z",
        "url": "https://files.pythonhosted.org/packages/14/21/dc2ff7c5e63672956f7a70cc5e70fc8b8c23d57921ab352b64c2446d9708/graphql_ws_apollo-0.4.4.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0904d4f8095130d7f9ca89ba653cf22e1d02d88bbe755528249253740dcff122",
          "md5": "75b42194ee27701eba2c2d90db086957",
          "sha256": "f050e1aab0b114343f23e9b437cea89d2e6670ebf52b3892eff9ed9afc706a2f"
        },
        "downloads": -1,
        "filename": "graphql-ws-apollo-0.4.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "75b42194ee27701eba2c2d90db086957",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 48245,
        "upload_time": "2022-09-12T09:44:02",
        "upload_time_iso_8601": "2022-09-12T09:44:02.352736Z",
        "url": "https://files.pythonhosted.org/packages/09/04/d4f8095130d7f9ca89ba653cf22e1d02d88bbe755528249253740dcff122/graphql-ws-apollo-0.4.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1421dc2ff7c5e63672956f7a70cc5e70fc8b8c23d57921ab352b64c2446d9708",
        "md5": "48e3a250637bd213469780e5a9a52352",
        "sha256": "b482e8f82bbe50b57ea62dc3246750c4967e94d4d6af2649aab0835f22ef831d"
      },
      "downloads": -1,
      "filename": "graphql_ws_apollo-0.4.4.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "48e3a250637bd213469780e5a9a52352",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 18165,
      "upload_time": "2022-09-12T09:43:59",
      "upload_time_iso_8601": "2022-09-12T09:43:59.064924Z",
      "url": "https://files.pythonhosted.org/packages/14/21/dc2ff7c5e63672956f7a70cc5e70fc8b8c23d57921ab352b64c2446d9708/graphql_ws_apollo-0.4.4.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0904d4f8095130d7f9ca89ba653cf22e1d02d88bbe755528249253740dcff122",
        "md5": "75b42194ee27701eba2c2d90db086957",
        "sha256": "f050e1aab0b114343f23e9b437cea89d2e6670ebf52b3892eff9ed9afc706a2f"
      },
      "downloads": -1,
      "filename": "graphql-ws-apollo-0.4.4.4.tar.gz",
      "has_sig": false,
      "md5_digest": "75b42194ee27701eba2c2d90db086957",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 48245,
      "upload_time": "2022-09-12T09:44:02",
      "upload_time_iso_8601": "2022-09-12T09:44:02.352736Z",
      "url": "https://files.pythonhosted.org/packages/09/04/d4f8095130d7f9ca89ba653cf22e1d02d88bbe755528249253740dcff122/graphql-ws-apollo-0.4.4.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}