{
  "info": {
    "author": "Michael Lorenzo",
    "author_email": "python@michael-lorenzo.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# twilio-webhooks\n\nA collection of webhooks for [Twilio](https://www.twilio.com/) using [Flask](https://palletsprojects.com/p/flask/).\n\n# Installation\n\n```console\npip install twilio-webhooks\n```\n\n**Availible webhooks:**\n\n- [SMSCommand](#SMSCommand) - When receiving a properly formated SMS runs a user-defined callable.\n- [ReceiveFax](#ReceiveFax) - When receving a fax saves a pdf file to a user-defined path.\n\n# SMSCommand\n\n**Webhook URL format:**\n\n> http://example.com/smscommand\n\nYou set this under \"Phone Numbers / Manage Numbers / Active Numbers\". Click your desired phone number. Look under a section called \"Messaging\", and with the \"CONFIGURE WITH\" drop-down menu select \"Webhooks, TwiML Bins, Functions, Studio or Proxy\". Now under the \"A MESSAGE COMES IN\" drop-down menu select \"Webhook\" and in the adjacent box place your URL.\n\n**Callback format:**\n\nThe callable should accept two arguments.\n\n1. A string containing who the SMS is from in E.164 format.\n2. A string that is either emtpy or the arg (see below) sent in the SMS.\n\nA return value will be sent as a reply.\n\n**SMS Format:**\n\n> `command` [`arg`]\n\n- `command` (**required**) is a case-insensitive string that was assigned to a user-defined callable. \n- `arg` (**optional**) will be passed to the callable as the second argument.\n\n**Deployment:**\n\nDeploy this as you would any other Flask app. See [Deployment Options](https://flask.palletsprojects.com/en/1.1.x/deploying/) for more information.\n\n**Example Code:**\n\n```python\nimport psutil\nimport wakeonlan\nfrom twilio_webhooks import SMSCommand\n\n# Simple example\n\ndef cpu_usage(from_, arg):\n    \"\"\"Check CPU usage\"\"\"\n    return f\"CPU Usage: {psutil.cpu_percent()}%\"\n\n# Complex example\n\ndef wake_on_lan(from_, arg):\n    \"\"\"Use wake-on-lan to wake a computer\"\"\"\n    # make sure the number is mine\n    if from_ != \"+12125551234\":\n        return\n    computers = {\"office\": \"ff.ff.ff.ff.ff.f1\", \"gaming\": \"ff.ff.ff.ff.ff.f2\"}\n    # Clean up arg in case I send a sloppy SMS\n    arg = arg.strip().lower()\n    if arg in computers:\n        wakeonlan.send_magic_packet(computers[arg])\n        return f'Computer \"{arg}\" is waking up.'\n\n\nsc = SMSCommand(\"your_twilio_auth_token\")\nsc.assign(\"cpu\", cpu_usage)\nsc.assign(\"wol\", wake_on_lan)\n\napp = sc.wsgi()\n```\n\nNow if you send an SMS to the twilio number you selected earlier that says this (remember the command part is case-insensitive):\n\n> Cpu\n\nyou should get a reply like this\n\n> CPU Usage: 5.2%\n\nor this:\n\n> Wol office\n\nshould reply:\n\n> Computer \"office\" is waking up.\n\n# ReceiveFax\n\n**Deployment:**\n\nDeploy this as you would any other Flask app. See [Deployment Options](https://flask.palletsprojects.com/en/1.1.x/deploying/) for more information.\n\n**Example:**\n\n```python\nfrom twilio_webhooks import ReceiveFax\n\napp = ReceiveFax(\"your_twilio_auth_token\", '/path/to/save/pdf').wsgi()\n```\n\nIncoming faxes will now be saved to the path of your choice.\n\n# Notes:\n\n* Your twilio auth token can be found under \"Dashboard / Settings / General\". You must click it to view it.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/michael-lorenzo/twilio-webhooks",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "twilio-webhooks",
    "package_url": "https://pypi.org/project/twilio-webhooks/",
    "platform": "",
    "project_url": "https://pypi.org/project/twilio-webhooks/",
    "project_urls": {
      "Homepage": "https://github.com/michael-lorenzo/twilio-webhooks"
    },
    "release_url": "https://pypi.org/project/twilio-webhooks/0.1.0/",
    "requires_dist": [
      "flask",
      "twilio"
    ],
    "requires_python": ">=3.6",
    "summary": "A collection of webhooks for Twilio using Flask.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6982229,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94e5e343df285bae05c36d9759404b45a0ad72f23becb61eda74d0cc215b6792",
          "md5": "2207fadbdc550e2f40235a53f2a8a172",
          "sha256": "70594f050f36629cdbe8d745d3992aaea5ab9644b61aee415b8474a13bf5a465"
        },
        "downloads": -1,
        "filename": "twilio_webhooks-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2207fadbdc550e2f40235a53f2a8a172",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5120,
        "upload_time": "2020-04-08T23:08:52",
        "upload_time_iso_8601": "2020-04-08T23:08:52.389106Z",
        "url": "https://files.pythonhosted.org/packages/94/e5/e343df285bae05c36d9759404b45a0ad72f23becb61eda74d0cc215b6792/twilio_webhooks-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d00cf59e2a7e8859e0f18f5d5e89a45ef8e2fa362d94c54cebcde736f42c794",
          "md5": "be113534746e50143d52bd5eb0237ea4",
          "sha256": "cac20a9ce6c3cfe04703aeb33e8bfadf50bf942eb8e6622125cbcdf9734a691e"
        },
        "downloads": -1,
        "filename": "twilio-webhooks-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "be113534746e50143d52bd5eb0237ea4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4022,
        "upload_time": "2020-04-08T23:08:54",
        "upload_time_iso_8601": "2020-04-08T23:08:54.757241Z",
        "url": "https://files.pythonhosted.org/packages/7d/00/cf59e2a7e8859e0f18f5d5e89a45ef8e2fa362d94c54cebcde736f42c794/twilio-webhooks-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94e5e343df285bae05c36d9759404b45a0ad72f23becb61eda74d0cc215b6792",
        "md5": "2207fadbdc550e2f40235a53f2a8a172",
        "sha256": "70594f050f36629cdbe8d745d3992aaea5ab9644b61aee415b8474a13bf5a465"
      },
      "downloads": -1,
      "filename": "twilio_webhooks-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2207fadbdc550e2f40235a53f2a8a172",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5120,
      "upload_time": "2020-04-08T23:08:52",
      "upload_time_iso_8601": "2020-04-08T23:08:52.389106Z",
      "url": "https://files.pythonhosted.org/packages/94/e5/e343df285bae05c36d9759404b45a0ad72f23becb61eda74d0cc215b6792/twilio_webhooks-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d00cf59e2a7e8859e0f18f5d5e89a45ef8e2fa362d94c54cebcde736f42c794",
        "md5": "be113534746e50143d52bd5eb0237ea4",
        "sha256": "cac20a9ce6c3cfe04703aeb33e8bfadf50bf942eb8e6622125cbcdf9734a691e"
      },
      "downloads": -1,
      "filename": "twilio-webhooks-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "be113534746e50143d52bd5eb0237ea4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4022,
      "upload_time": "2020-04-08T23:08:54",
      "upload_time_iso_8601": "2020-04-08T23:08:54.757241Z",
      "url": "https://files.pythonhosted.org/packages/7d/00/cf59e2a7e8859e0f18f5d5e89a45ef8e2fa362d94c54cebcde736f42c794/twilio-webhooks-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}