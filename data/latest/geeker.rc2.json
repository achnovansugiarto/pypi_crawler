{
  "info": {
    "author": "liuyalong",
    "author_email": "4379711@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "\n# functools\n\n\n##### 一些很有用的工具\n\n------------\n\n\n\n### 使用说明：\n\n------------\n\n> pip install geeker\n\n------------\n\n\n> ~~觉得好用请点个star，分享给更多的人使用~~\n------------\n\n\n## schedule：\n#### 说明:geeker.schedule是schedule的二次开发,修复原作者代码日期不准确等BUG，并解决任务延迟等问题\n    \n        \n        from geeker import schedule\n        import time\n        \n        def abc():\n            print('abc')\n        \n        # 注册任务\n        schedule.every(2).seconds.do(abc)\n        schedule.every().day.at(\"10:00\").do(abc)\n        \n        # 开启任务\n        while True:\n            # thread_pool=False(默认)不会使用线程池,如果上个任务耗时很长,\n            # 在下一次任务启动时间点仍未完成,会造成下次任务延后\n            schedule.run_pending()\n            \n            # 参数max_worker 控制任务的总数,默认是任务数的2倍.\n            # 注意,如果设置一个较大值,请考虑内存是否允许\n           \n            # schedule.run_pending(thread_pool=True, max_worker=5)\n            time.sleep(1)\n            \n------------     \n\n## MyLog:\n#### 说明:将日志分日志等级记录,并自动压缩2019-11-11.info.log.gz\n\n#### 参数:\n            :param dir_path: 日志记录的路径,默认是当前路径下的log文件夹\n            :param logger_name: logger对象的名字\n            :param info_name: 保存info等级的文件名字\n            :param error_name:\n            :param warning_name:\n            :param debug_name:\n            :param interval: 压缩日志的频率,默认是7天\n            :param detail: bool值,记录日志是否为详细记录\n            :param debug: 是否记录debug,默认不记录\n            :param info: 是否记录info,默认记录\n            :param error:\n            :param warning:\n            # 实例方法:\n            get_logger()-->logger\n    \n#### 使用举例:\n            from geeker import MyLog\n            # 记录四种类型的日志\n            logger = MyLog(debug=True).get_logger()\n            logger.info('info')\n            logger.debug('debug')\n            logger.error('error')\n            logger.warning('warning')\n    \n            # # # # # # # # # # # # # # # # # # # # # # # # #\n    \n            # 只记录错误日志\n            logger = MyLog(info=False,warning=False).get_logger()\n            logger.info('info')\n            logger.debug('debug')\n            logger.error('error')\n            logger.warning('warning')\n#### 注意:\n##### MyLog()的实例只会同时存在一个,默认记录首次创建实例的属性.\n#### 例如:\n    \n                mylog = MyLog('./logs/logs/')\n                mylog2 = MyLog()\n                logger = mylog.get_logger()\n                logger2 = mylog2.get_logger()\n                logger.info('info')\n    \n                logger2 = MyLog('./logs/logs2/').get_logger()\n                logger2.info('info2')\n    \n##### 以上两个logger logger2,会以logger(第一次创建实例)的属性为准,日志会存放在./logs/logs/下\n    \n------------   \n\n## Concurrency :\n#### 说明:控制函数执行频率\n\n>(仅用于多线程模型,协程无效)\n\n        from geeker import Concurrency\n\n        # 每4秒执行5次abc()\n\n        @Concurrency(5,4)\n        def abc():\n            pass\n        \n        # 并发量为5\n        @Concurrency(5)\n        def abc():\n            pass\n            \n        class Test:\n            def __init__(self):\n                pass\n    \n            @Concurrency(3)\n            def test(self, a):\n                print(a, self)\n                time.sleep(a)\n\t\t\t\n------------\n\n## run_time:\n#### 说明:此装饰器调控函数运行时间\n        \n        from geeker import runtime\n        \n        @run_time\n        def test(i):\n            # int('asfa')\n            time.sleep(i)\n            print('运行结果:', i)\n            \n        >>>\n            START test(1, {})\n            运行结果: 1\n            test(1, {}) takes <1.0006> seconds\n            STOP test(1, {})\n\n------------\n\n##  Singleton:\n#### 说明:单例模式,建议使用这个\n\n    from geeker import Singleton\n    # 实例的属性为第一次初始化时的属性\n    class Test(Singleton):\n        pass\n\n## SingletonOverride\n#### 说明:单例模式\n\n    from geeker import SingletonOverride\n    # 后面创建的实例属性会覆盖前者的实例属性\n    class Test(SingletonOverride):\n        pass\n\n------------\n\n##  TimeOut:\n#### 说明:超时装饰器\n\n### 注意:\n##### 此装饰器需要额外的线程数量来控制任务执行,\n##### 如在多线程并发情况下使用,请评估机器性能(一般没啥大问题)\n\n        from geeker import TimeOut\n        # 精度为0.1秒\n   \t\t\n        @TimeOut(4)\n        def test(i):\n            time.sleep(i)\n        \n        \n        class AA:\n        \n            @TimeOut(3.0)\n            def test(self, i):\n                time.sleep(i)\n\n\n------------\n\t\n\n##  MyType:\n#### 说明:类属性的类型检查\n\n        from geeker import MyType  \n        \n        class Test:\n            lll = MyType('str_type1', expect_type=str)\n            llll = MyType('str_type2', expect_type=str)\n        \n            def __init__(self, value, ):\n                self.lll = value\n                self.llll = value\n                \n------------\n\n\n##  MyDict:\n### 注意:\n##### 如需要转换成字典,需要使用dict()可直接转换,转换后可直接存MongoDB\n        \n        from geeker import MyDict\n        a=MyDict()\n        a.append_key('key','value')\n        a.o=5\n        a.c='fasf'\n        a.add_key('key0','value0')\n        print(dict(a))\n        使用dict()函数可以直接转换为字典格式\n        \n        >>>{\n            'key': ['value'],\n            'o': 5, \n            'c': 'fasf', \n            'key0': {'value0'}\n            }\n                \n------------\n\n## IdGenerator:\n#### 说明:分布式唯一ID生成器\n    \n    from geeker import IdGenerator\n    \n    id_generator =IdGenerator()\n    _id =id_generator.get_id()\n\n------------\n\n## show_memory_info:\n#### 说明:查看当前python进程占用的内存\n\n    from geeker import show_memory_info\n    \n    show_memory_info()\n\n------------\n\n## retry:\n#### 函数装饰器,捕获某个异常,重新执行,直到设置的最大次数,抛出RuntimeError\n\n    from geeker import retry\n    \n    @retry(5, ValueError)\n    def test():\n        int('asf')\n   \n------------\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/4379711/functools_lyl",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "liuyalong",
    "maintainer_email": "",
    "name": "geeker",
    "package_url": "https://pypi.org/project/geeker/",
    "platform": "all",
    "project_url": "https://pypi.org/project/geeker/",
    "project_urls": {
      "Homepage": "https://github.com/4379711/functools_lyl"
    },
    "release_url": "https://pypi.org/project/geeker/2.1/",
    "requires_dist": [
      "colorama",
      "click",
      "psutil"
    ],
    "requires_python": "",
    "summary": "Some useful functions !",
    "version": "2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10596481,
  "releases": {
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a40d3b688b02f31c9fc164f94c0852905edf86878163c5cffbe07ed45e738a10",
          "md5": "03e1207b874aa84e395ee980f5493713",
          "sha256": "250f5a6670ccefdfd0485f2c2c5cdbc270c60997be78da6f3cfd0817cec90394"
        },
        "downloads": -1,
        "filename": "geeker-2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "03e1207b874aa84e395ee980f5493713",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21550,
        "upload_time": "2021-04-13T02:16:42",
        "upload_time_iso_8601": "2021-04-13T02:16:42.168035Z",
        "url": "https://files.pythonhosted.org/packages/a4/0d/3b688b02f31c9fc164f94c0852905edf86878163c5cffbe07ed45e738a10/geeker-2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f7cc74c2ca860a7b0767841843356274c1e6ce60d4b2a9e5d6ea00e2ef15f95",
          "md5": "fe71bae747fa9c339a6890ac3d3c10b9",
          "sha256": "743a17af5d0f3b5dee7017aed5ab804e5e1455117c5ab9d48bb0337894f1e6ea"
        },
        "downloads": -1,
        "filename": "geeker-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fe71bae747fa9c339a6890ac3d3c10b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17728,
        "upload_time": "2021-04-13T02:16:43",
        "upload_time_iso_8601": "2021-04-13T02:16:43.441654Z",
        "url": "https://files.pythonhosted.org/packages/6f/7c/c74c2ca860a7b0767841843356274c1e6ce60d4b2a9e5d6ea00e2ef15f95/geeker-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37416a9b35070761876cb454b5b9429fb9fd8bf9ab49d78d2efc524283f9c3e1",
          "md5": "13bdaf303e2bb628d236d8a6e2c49935",
          "sha256": "c58c421ae639682ee5c825eb2672dee46e88eb2ee1a4a2307d553ba2ead353ad"
        },
        "downloads": -1,
        "filename": "geeker-2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13bdaf303e2bb628d236d8a6e2c49935",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21516,
        "upload_time": "2021-06-09T03:50:52",
        "upload_time_iso_8601": "2021-06-09T03:50:52.571819Z",
        "url": "https://files.pythonhosted.org/packages/37/41/6a9b35070761876cb454b5b9429fb9fd8bf9ab49d78d2efc524283f9c3e1/geeker-2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "708dfbabade89752ac13741ff5e6db981e6d3690c1531839b7f46915f674ae54",
          "md5": "6ea2da31855282c8aa5cff4af63138c0",
          "sha256": "4815db21aadf9a95e5c2a1c4925552085ecc39f628470eb70e1e93720596156f"
        },
        "downloads": -1,
        "filename": "geeker-2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6ea2da31855282c8aa5cff4af63138c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17729,
        "upload_time": "2021-06-09T03:50:54",
        "upload_time_iso_8601": "2021-06-09T03:50:54.903175Z",
        "url": "https://files.pythonhosted.org/packages/70/8d/fbabade89752ac13741ff5e6db981e6d3690c1531839b7f46915f674ae54/geeker-2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37416a9b35070761876cb454b5b9429fb9fd8bf9ab49d78d2efc524283f9c3e1",
        "md5": "13bdaf303e2bb628d236d8a6e2c49935",
        "sha256": "c58c421ae639682ee5c825eb2672dee46e88eb2ee1a4a2307d553ba2ead353ad"
      },
      "downloads": -1,
      "filename": "geeker-2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "13bdaf303e2bb628d236d8a6e2c49935",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 21516,
      "upload_time": "2021-06-09T03:50:52",
      "upload_time_iso_8601": "2021-06-09T03:50:52.571819Z",
      "url": "https://files.pythonhosted.org/packages/37/41/6a9b35070761876cb454b5b9429fb9fd8bf9ab49d78d2efc524283f9c3e1/geeker-2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "708dfbabade89752ac13741ff5e6db981e6d3690c1531839b7f46915f674ae54",
        "md5": "6ea2da31855282c8aa5cff4af63138c0",
        "sha256": "4815db21aadf9a95e5c2a1c4925552085ecc39f628470eb70e1e93720596156f"
      },
      "downloads": -1,
      "filename": "geeker-2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6ea2da31855282c8aa5cff4af63138c0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17729,
      "upload_time": "2021-06-09T03:50:54",
      "upload_time_iso_8601": "2021-06-09T03:50:54.903175Z",
      "url": "https://files.pythonhosted.org/packages/70/8d/fbabade89752ac13741ff5e6db981e6d3690c1531839b7f46915f674ae54/geeker-2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}