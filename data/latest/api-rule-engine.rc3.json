{
  "info": {
    "author": "Omer London",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# api-rule-engine\nAPI for sending files to Minereye system and find sensitive information\n\n\n## Introduction\nThis repo is meant for sending file to Minereye system and find sensitive information defined by the system\n\n## Technologies\nPython 3.7 or higher\n\n## Instalation\npip install api-rule-engine\n\n\n## Python code example\n``` python\nfrom api_rule_engine.client import send_file\nfile_path = <add local file path>\nfile_metadata = {'file_name': file_path.split('/')[-1], 'file_path': file_path}\nwith open(file_path, 'rb') as f:\n  res = scan_file(f.read(), file_metadata=file_metadata)\n\n>>> res\n{'response_data': {'found_tracking_groups': [{'action_id': '1', 'category_id': '12', 'key': '7',\n    'label_id': 'None', 'status': 'added', 'tg_name': 'risk.doc'}]}, 'response_status': 200}\n\n```\n\n## Sending list of files in threads\n\n``` python\nimport os\nimport time\nimport threading\nfrom api_rule_engine.client import scan_file_callback, get_bytes, \n\n## example of files list\nfile_list = ['../rule_engine/risk.doc', '../rule_engine/1138059831.xls', '../rule_engine/5.xlsx']\n\n## this is short example of metadata\ndef simple_metadata(file_path):\n    return {'file_name': file_path.split('/')[-1], 'file_path': file_path}\n\nd = {}\nthreads = []\nfor file_path in file_list:\n    x = threading.Thread(target=scan_file_callback, args=(os.path.basename(file_path), get_bytes(file_path),\n                                                          simple_metadata(file_path), {}, d))\n    threads.append(x)\nfor x in threads:\n    x.start()\n \n while len(d) < len(file_list):\n    time.sleep(1)\n  \n  print(d)\n {'5.xlsx': {'found_tracking_groups': ''},\n '1138059831.xls': {'found_tracking_groups': ''},\n 'risk.doc': {'found_tracking_groups': [{'action_id': '1',\n    'category_id': '12',\n    'key': '7',\n    'label_id': 'None',\n    'status': 'added',\n    'tg_name': 'risk.doc'}]}}\n```\n\n## getting file_metadata\n``` python\nfrom api_rule_engine.client import send_file\nfile_path = '../rule_engine/risk.doc'\nfile_metadata = {'file_name': file_path.split('/')[-1], 'file_path': file_path}\nwith open(file_path, 'rb') as f:\n    res = scan_file(f.read(), file_metadata=file_metadata, fields=['fi_entities_nested'])\nres\n{'fi_entities_nested': '[{\"display_name\": \"Email\", \"id\": 10, \"values\": [\"sales@symtrex.com\"], \"count\": 1, \"pi_score\": 78.9806835921147}, {\"display_name\": \"Full name\", \"id\": 160, \"values\": [\"Lynne Krekeler\"], \"count\": 1, \"pi_score\": 86.41661304637691}]',\n 'found_tracking_groups': [{'action_id': '1',\n   'category_id': '12',\n   'key': '7',\n   'label_id': 'None',\n   'status': 'added',\n   'tg_name': 'risk.doc'}]}\n```\n\n## Full Python API\n``` python\nscan_file(file_bytes: bytes, file_metadata={}, fields={})\n```\nfile_bytes: files bytes,\n* file_metadata: dictionary of extra information for finding sensitive information on file, for mor details: [full list](doc/input_metadata.md)<br />\n* fields: extra metadata to get by request full list: [full list](doc/extra_field.md)\n``` python\nscan_file_callback(file_name: str, file_bytes: bytes, file_metadata: dict, fields: list, return_dict: dict)\n```\nfile_name - file name, \nreturn_dict - dict for returning answer<br />\nreturn_dict : {file_name : answer}\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/somerl20/api-rule-engine.git",
    "keywords": "",
    "license": "GNU",
    "maintainer": "",
    "maintainer_email": "",
    "name": "api-rule-engine",
    "package_url": "https://pypi.org/project/api-rule-engine/",
    "platform": "",
    "project_url": "https://pypi.org/project/api-rule-engine/",
    "project_urls": {
      "Homepage": "https://github.com/somerl20/api-rule-engine.git"
    },
    "release_url": "https://pypi.org/project/api-rule-engine/0.0.21/",
    "requires_dist": [
      "requests (>=2.25.1)"
    ],
    "requires_python": "",
    "summary": "rule engine API",
    "version": "0.0.21",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13057264,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32526d08f3b7df273f18714aa405e96675bb1a30e4152699feb9d04a02529f92",
          "md5": "e9d0e955e25eb714049a19ddc273ad89",
          "sha256": "e3c519370a5b9a9ff307fbacb155d6fee5c1ef7d273157a846024cf87615314c"
        },
        "downloads": -1,
        "filename": "api_rule_engine-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9d0e955e25eb714049a19ddc273ad89",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13825,
        "upload_time": "2022-03-01T15:51:46",
        "upload_time_iso_8601": "2022-03-01T15:51:46.788785Z",
        "url": "https://files.pythonhosted.org/packages/32/52/6d08f3b7df273f18714aa405e96675bb1a30e4152699feb9d04a02529f92/api_rule_engine-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5815e6064a7f63470c6bc54550997d7c43fde729804feec3ee9e0e63433155a8",
          "md5": "b099085f385426e67e11b101f798b5de",
          "sha256": "670a8856ec9a95e17769d8c1d6eef123ffe722715657e850ead2a06b7e70390d"
        },
        "downloads": -1,
        "filename": "api_rule_engine-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b099085f385426e67e11b101f798b5de",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14864,
        "upload_time": "2022-03-01T16:18:58",
        "upload_time_iso_8601": "2022-03-01T16:18:58.622239Z",
        "url": "https://files.pythonhosted.org/packages/58/15/e6064a7f63470c6bc54550997d7c43fde729804feec3ee9e0e63433155a8/api_rule_engine-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.21": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "653dc92f46550d7e2c9cce5e4c24dce6909343d5a0afde29228ee066fa2b6765",
          "md5": "2152f40a1b78b4dc963f53b1340cb76f",
          "sha256": "92225707eab3f8cebecf96236a9f7f8c65bb4f4b1e69057a67ecde45484a9520"
        },
        "downloads": -1,
        "filename": "api_rule_engine-0.0.21-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2152f40a1b78b4dc963f53b1340cb76f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16049,
        "upload_time": "2022-03-02T12:19:16",
        "upload_time_iso_8601": "2022-03-02T12:19:16.797466Z",
        "url": "https://files.pythonhosted.org/packages/65/3d/c92f46550d7e2c9cce5e4c24dce6909343d5a0afde29228ee066fa2b6765/api_rule_engine-0.0.21-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "653dc92f46550d7e2c9cce5e4c24dce6909343d5a0afde29228ee066fa2b6765",
        "md5": "2152f40a1b78b4dc963f53b1340cb76f",
        "sha256": "92225707eab3f8cebecf96236a9f7f8c65bb4f4b1e69057a67ecde45484a9520"
      },
      "downloads": -1,
      "filename": "api_rule_engine-0.0.21-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2152f40a1b78b4dc963f53b1340cb76f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16049,
      "upload_time": "2022-03-02T12:19:16",
      "upload_time_iso_8601": "2022-03-02T12:19:16.797466Z",
      "url": "https://files.pythonhosted.org/packages/65/3d/c92f46550d7e2c9cce5e4c24dce6909343d5a0afde29228ee066fa2b6765/api_rule_engine-0.0.21-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}