{
  "info": {
    "author": "koga25 <lucasvas100@gmail.com>",
    "author_email": "koga25 <lucasvas100@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<h1 align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/pola-rs/polars-static/master/logos/polars_github_logo_rect_dark_name.svg\">\n  <br>\n</h1>\n\n<div align=\"center\">\n  <a href=\"https://docs.rs/polars/latest/polars/\">\n    <img src=\"https://docs.rs/polars/badge.svg\" alt=\"rust docs\"/>\n  </a>\n  <a href=\"https://github.com/pola-rs/polars/actions\">\n    <img src=\"https://github.com/pola-rs/polars/workflows/Build%20and%20test/badge.svg\" alt=\"Build and test\"/>\n  </a>\n  <a href=\"https://crates.io/crates/polars\">\n    <img src=\"https://img.shields.io/crates/v/polars.svg\"/>\n  </a>\n  <a href=\"https://pypi.org/project/polars/\">\n    <img src=\"https://img.shields.io/pypi/v/polars.svg\" alt=\"PyPi Latest Release\"/>\n  </a>\n  <a href=\"https://www.npmjs.com/package/nodejs-polars\">\n    <img src=\"https://img.shields.io/npm/v/nodejs-polars.svg\" alt=\"NPM Latest Release\"/>\n  </a>\n</div>\n\n<p align=\"center\">\n  <b>Documentation</b>:\n  <a href=\"https://pola-rs.github.io/polars/py-polars/html/reference/index.html\">Python</a>\n  -\n  <a href=\"https://pola-rs.github.io/polars/polars/index.html\">Rust</a>\n  -\n  <a href=\"https://pola-rs.github.io/nodejs-polars/index.html\">Node.js</a>\n  |\n  <b>StackOverflow</b>:\n  <a href=\"https://stackoverflow.com/questions/tagged/python-polars\">Python</a>\n  -\n  <a href=\"https://stackoverflow.com/questions/tagged/rust-polars\">Rust</a>\n  -\n  <a href=\"https://stackoverflow.com/questions/tagged/nodejs-polars\">Node.js</a>\n  |\n  <a href=\"https://pola-rs.github.io/polars-book/\">User Guide</a>\n  |\n  <a href=\"https://discord.gg/4UfP5cfBE7\">Discord</a>\n</p>\n\n## Polars: Blazingly fast DataFrames in Rust, Python & Node.js\n\nPolars is a blazingly fast DataFrames library implemented in Rust using\n[Apache Arrow Columnar Format](https://arrow.apache.org/docs/format/Columnar.html) as the memory model.\n\n- Lazy | eager execution\n- Multi-threaded\n- SIMD\n- Query optimization\n- Powerful expression API\n- Hybrid Streaming (larger than RAM datasets)\n- Rust | Python | NodeJS | ...\n\nTo learn more, read the [User Guide](https://pola-rs.github.io/polars-book/).\n\n```python\n>>> import polars as pl\n>>> df = pl.DataFrame(\n...     {\n...         \"A\": [1, 2, 3, 4, 5],\n...         \"fruits\": [\"banana\", \"banana\", \"apple\", \"apple\", \"banana\"],\n...         \"B\": [5, 4, 3, 2, 1],\n...         \"cars\": [\"beetle\", \"audi\", \"beetle\", \"beetle\", \"beetle\"],\n...     }\n... )\n\n# embarrassingly parallel execution & very expressive query language\n>>> df.sort(\"fruits\").select(\n...     [\n...         \"fruits\",\n...         \"cars\",\n...         pl.lit(\"fruits\").alias(\"literal_string_fruits\"),\n...         pl.col(\"B\").filter(pl.col(\"cars\") == \"beetle\").sum(),\n...         pl.col(\"A\").filter(pl.col(\"B\") > 2).sum().over(\"cars\").alias(\"sum_A_by_cars\"),\n...         pl.col(\"A\").sum().over(\"fruits\").alias(\"sum_A_by_fruits\"),\n...         pl.col(\"A\").reverse().over(\"fruits\").alias(\"rev_A_by_fruits\"),\n...         pl.col(\"A\").sort_by(\"B\").over(\"fruits\").alias(\"sort_A_by_B_by_fruits\"),\n...     ]\n... )\nshape: (5, 8)\n┌──────────┬──────────┬──────────────┬─────┬─────────────┬─────────────┬─────────────┬─────────────┐\n│ fruits   ┆ cars     ┆ literal_stri ┆ B   ┆ sum_A_by_ca ┆ sum_A_by_fr ┆ rev_A_by_fr ┆ sort_A_by_B │\n│ ---      ┆ ---      ┆ ng_fruits    ┆ --- ┆ rs          ┆ uits        ┆ uits        ┆ _by_fruits  │\n│ str      ┆ str      ┆ ---          ┆ i64 ┆ ---         ┆ ---         ┆ ---         ┆ ---         │\n│          ┆          ┆ str          ┆     ┆ i64         ┆ i64         ┆ i64         ┆ i64         │\n╞══════════╪══════════╪══════════════╪═════╪═════════════╪═════════════╪═════════════╪═════════════╡\n│ \"apple\"  ┆ \"beetle\" ┆ \"fruits\"     ┆ 11  ┆ 4           ┆ 7           ┆ 4           ┆ 4           │\n├╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┤\n│ \"apple\"  ┆ \"beetle\" ┆ \"fruits\"     ┆ 11  ┆ 4           ┆ 7           ┆ 3           ┆ 3           │\n├╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┤\n│ \"banana\" ┆ \"beetle\" ┆ \"fruits\"     ┆ 11  ┆ 4           ┆ 8           ┆ 5           ┆ 5           │\n├╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┤\n│ \"banana\" ┆ \"audi\"   ┆ \"fruits\"     ┆ 11  ┆ 2           ┆ 8           ┆ 2           ┆ 2           │\n├╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌┤\n│ \"banana\" ┆ \"beetle\" ┆ \"fruits\"     ┆ 11  ┆ 4           ┆ 8           ┆ 1           ┆ 1           │\n└──────────┴──────────┴──────────────┴─────┴─────────────┴─────────────┴─────────────┴─────────────┘\n```\n\n## Performance 🚀🚀\n\nPolars is very fast. In fact, it is one of the best performing solutions available.\nSee the results in [h2oai's db-benchmark](https://h2oai.github.io/db-benchmark/).\n\nIn the [TPCH benchmarks](https://www.pola.rs/benchmarks.html) polars is orders of magnitudes faster than pandas, dask, modin and vaex\non full queries (including IO).\n\nBesides fast, polars is also very lightweight. It comes with zero required dependencies, and this shows in the import times:\n\n### import time measurements:\n\n- polars: 70ms\n- numpy: 104ms\n- pandas: 520ms\n\n## Python setup\n\nInstall the latest polars version with:\n\n```sh\npip install polars\n```\n\nWe also have a conda package (`conda install polars`), however pip is the preferred way to install Polars.\n\n### Install Polars with all optional dependencies.\n\n```sh\npip install 'polars[all]'\npip install 'polars[numpy,pandas,pyarrow]'  # install a subset of all optional dependencies\n```\n\nYou can also install the dependencies directly.\n\n| Tag        | Description                                                                                                                           |\n| ---------- | ------------------------------------------------------------------------------------------------------------------------------------- |\n| all        | Install all optional dependencies (all of the following)                                                                              |\n| pandas     | Install with Pandas for converting data to and from Pandas Dataframes/Series                                                          |\n| numpy      | Install with numpy for converting data to and from numpy arrays                                                                       |\n| pyarrow    | Reading data formats using PyArrow                                                                                                    |\n| fsspec     | Support for reading from remote file systems                                                                                          |\n| connectorx | Support for reading from SQL databases                                                                                                |\n| xlsx2csv   | Support for reading from Excel files                                                                                                  |\n| timezone   | Timezone support, only needed if 1. you are on Python < 3.9 and/or 2. you are on Windows, otherwise no dependencies will be installed |\n\nReleases happen quite often (weekly / every few days) at the moment, so updating polars regularly to get the latest bugfixes / features might not be a bad idea.\n\n## Rust setup\n\nYou can take latest release from `crates.io`, or if you want to use the latest features / performance improvements\npoint to the `master` branch of this repo.\n\n```toml\npolars = { git = \"https://github.com/pola-rs/polars\", rev = \"<optional git tag>\" }\n```\n\n#### Rust version\n\nRequired Rust version `>=1.58`\n\n## Documentation\n\nWant to know about all the features Polars supports? Read the docs!\n\n## Larger than RAM data\n\nIf you have data that does not fit into memory, polars lazy is able to process your query (or parts of your query) in a\nstreaming fashion, this drastically reduces memory requirements you might be able to process your 250GB dataset on your\nlaptop. Collect with `collect(allow_streaming=True)` to run the query streaming. (This might be a little slower, but\nit is still very fast!)\n\n#### Python\n\n- Installation guide: `pip install polars`\n- [Python documentation](https://pola-rs.github.io/polars/py-polars/html/reference/index.html)\n- [User guide](https://pola-rs.github.io/polars-book/)\n\n#### Rust\n\n- [Rust documentation (master branch)](https://pola-rs.github.io/polars/polars/index.html)\n- [User guide](https://pola-rs.github.io/polars-book/)\n\n#### Node\n\n- Installation guide: `yarn add nodejs-polars`\n- [Node documentation](https://pola-rs.github.io/nodejs-polars/index.html)\n- [User guide](https://pola-rs.github.io/polars-book/)\n- [Github](https://github.com/pola-rs/nodejs-polars)\n\n## Contribution\n\nWant to contribute? Read our [contribution guideline](https://github.com/pola-rs/polars/blob/master/CONTRIBUTING.md).\n\n## \\[Python\\]: compile polars from source\n\nIf you want a bleeding edge release or maximal performance you should compile **polars** from source.\n\nThis can be done by going through the following steps in sequence:\n\n1. Install the latest [Rust compiler](https://www.rust-lang.org/tools/install)\n2. Install [maturin](https://maturin.rs/): `pip install maturin`\n3. Choose any of:\n   - Fastest binary, very long compile times:\n     ```sh\n     $ cd py-polars && maturin develop --release -- -C target-cpu=native\n     ```\n   - Fast binary, Shorter compile times:\n     ```sh\n     $ cd py-polars && maturin develop --release -- -C codegen-units=16 -C lto=thin -C target-cpu=native\n     ```\n\nNote that the Rust crate implementing the Python bindings is called `py-polars` to distinguish from the wrapped\nRust crate `polars` itself. However, both the Python package and the Python module are named `polars`, so you\ncan `pip install polars` and `import polars`.\n\n## Arrow2\n\nPolars has transitioned to [arrow2](https://crates.io/crates/arrow2).\nArrow2 is a faster and safer implementation of the [Apache Arrow Columnar Format](https://arrow.apache.org/docs/format/Columnar.html).\nArrow2 also has a more granular code base, helping to reduce the compiler bloat.\n\n## Use custom Rust function in python?\n\nSee [this example](./examples/python_rust_compiled_function).\n\n# Going big...\n\nDo you expect more than `2^32` ~4,2 billion rows? Compile polars with the `bigidx` feature flag.\n\nOr for python users install `pip install polars-u64-idx`.\n\nDon't use this unless you hit the row boundary as the default polars is faster and consumes less memory.\n\n# Legacy\n\nDo you want polars to run on an old CPU (e.g. dating from before 2011)? Install `pip polars-lts-cpu`. This polars project is\ncompiled without [avx](https://en.wikipedia.org/wiki/Advanced_Vector_Extensions) target features.\n\n## Acknowledgements\n\nDevelopment of Polars is proudly powered by\n\n[![Xomnia](https://raw.githubusercontent.com/pola-rs/polars-static/master/sponsors/xomnia.png)](https://www.xomnia.com/)\n\n## Sponsors\n\n[<img src=\"https://raw.githubusercontent.com/pola-rs/polars-static/master/sponsors/xomnia.png\" height=\"40\" />](https://www.xomnia.com/) &emsp; [<img src=\"https://www.jetbrains.com/company/brand/img/jetbrains_logo.png\" height=\"50\" />](https://www.jetbrains.com)\n\n",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/koga25/polars-private",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "polarscnj",
    "package_url": "https://pypi.org/project/polarscnj/",
    "platform": null,
    "project_url": "https://pypi.org/project/polarscnj/",
    "project_urls": {
      "Homepage": "https://github.com/koga25/polars-private",
      "Source Code": "https://github.com/koga25/polars-private"
    },
    "release_url": "https://pypi.org/project/polarscnj/1.0.4/",
    "requires_dist": [
      "typing_extensions >= 4.0.0; python_version < '3.10'",
      "connectorx; extra == 'connectorx'",
      "backports.zoneinfo; (python_version < '3.9') and extra == 'timezone'",
      "tzdata; (platform_system == 'Windows') and extra == 'timezone'",
      "pyarrow>=4.0.0; extra == 'pyarrow'",
      "matplotlib; extra == 'matplotlib'",
      "polars[pyarrow,pandas,numpy,fsspec,connectorx,xlsx2csv,timezone,matplotlib]; extra == 'all'",
      "pyarrow>=4.0.0; extra == 'pandas'",
      "pandas; extra == 'pandas'",
      "numpy >= 1.16.0; extra == 'numpy'",
      "xlsx2csv >= 0.8.0; extra == 'xlsx2csv'",
      "fsspec; extra == 'fsspec'"
    ],
    "requires_python": ">=3.7",
    "summary": "Fork from polars repository, faster conversions to python. All of this was made possible by the incredible work of ritchie46.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16119029,
  "releases": {
    "1.0.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "4a5097d84b8b690fd5c492ea69250ad7304d79caf4710d793de885e8b81cc1c8",
          "md5": "a092a37a3d71e5b74f1fd82969f877d2",
          "sha256": "3752fa8be9a99e90d9bcb42e8d945f2fa129efd84d2fb57d3afc097201946394"
        },
        "downloads": -1,
        "filename": "polarscnj-1.0.0-cp310-cp310-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "a092a37a3d71e5b74f1fd82969f877d2",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.7",
        "size": 44977380,
        "upload_time": "2022-10-11T22:12:01",
        "upload_time_iso_8601": "2022-10-11T22:12:01.297152Z",
        "url": "https://files.pythonhosted.org/packages/4a/50/97d84b8b690fd5c492ea69250ad7304d79caf4710d793de885e8b81cc1c8/polarscnj-1.0.0-cp310-cp310-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "067f1134e67e241f207c5f9e0104bfe1a9a213eecc4a81a13cfb2ab8cb79604b",
          "md5": "1cd381526665dd8e01b2f0eb1b794981",
          "sha256": "e31c0e8f6959c8901fd3f1c5bf7f372716e6c6eefe9452a01942e313ed7e7855"
        },
        "downloads": -1,
        "filename": "polarscnj-1.0.0-cp38-cp38-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "1cd381526665dd8e01b2f0eb1b794981",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.7",
        "size": 44977756,
        "upload_time": "2022-10-11T21:10:41",
        "upload_time_iso_8601": "2022-10-11T21:10:41.009691Z",
        "url": "https://files.pythonhosted.org/packages/06/7f/1134e67e241f207c5f9e0104bfe1a9a213eecc4a81a13cfb2ab8cb79604b/polarscnj-1.0.0-cp38-cp38-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "676ff8d90f0e5621beea1799fc7611660d533c29d12ff39ae57fb91e9c07b4e7",
          "md5": "fd34123f3b3db6ec9d859da5a9d15f37",
          "sha256": "5f803027d1352b3fec2ab3b05b09d312c9ec3554f77495db1cde9e90c446be18"
        },
        "downloads": -1,
        "filename": "polarscnj-1.0.1-cp310-cp310-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "fd34123f3b3db6ec9d859da5a9d15f37",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.7",
        "size": 44976039,
        "upload_time": "2022-10-11T23:01:11",
        "upload_time_iso_8601": "2022-10-11T23:01:11.182468Z",
        "url": "https://files.pythonhosted.org/packages/67/6f/f8d90f0e5621beea1799fc7611660d533c29d12ff39ae57fb91e9c07b4e7/polarscnj-1.0.1-cp310-cp310-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "d5c98e6a2e2714fa5e03574864c1cdf96ef9e2d806a464d7d8593566e923b5ab",
          "md5": "fe16d0ff75da665fc9b48e42207505b6",
          "sha256": "dd3edc3e84b1510da96bd83128bab13a6f96c876099b9fd4262d4a1e4749a90a"
        },
        "downloads": -1,
        "filename": "polarscnj-1.0.1-cp38-cp38-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "fe16d0ff75da665fc9b48e42207505b6",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.7",
        "size": 44976009,
        "upload_time": "2022-10-11T23:13:26",
        "upload_time_iso_8601": "2022-10-11T23:13:26.810398Z",
        "url": "https://files.pythonhosted.org/packages/d5/c9/8e6a2e2714fa5e03574864c1cdf96ef9e2d806a464d7d8593566e923b5ab/polarscnj-1.0.1-cp38-cp38-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "b6887dc9efd00ecdb96bbd1e631ddbb9e086e2c53244509d2a437e1376c6e773",
          "md5": "bf87948931b9289bf15ff148809451a3",
          "sha256": "35a65d5dc27fc0048d8ab5b3caed85f968730511ed4b733a75a8d713a99fdccb"
        },
        "downloads": -1,
        "filename": "polarscnj-1.0.21-cp310-cp310-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "bf87948931b9289bf15ff148809451a3",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.7",
        "size": 17829274,
        "upload_time": "2022-11-24T16:40:01",
        "upload_time_iso_8601": "2022-11-24T16:40:01.806000Z",
        "url": "https://files.pythonhosted.org/packages/b6/88/7dc9efd00ecdb96bbd1e631ddbb9e086e2c53244509d2a437e1376c6e773/polarscnj-1.0.21-cp310-cp310-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "319d1334911b6683eb57350d31adb973bfedf70fb06f758850fe260a46280b2a",
          "md5": "d9378946efd19efe9bd6c570e0917f7d",
          "sha256": "a217842dd91a5ed9656c6f0e5e1dc4c805ff5150a2dbce4586f1e796890f9c5c"
        },
        "downloads": -1,
        "filename": "polarscnj-1.0.21-cp311-cp311-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "d9378946efd19efe9bd6c570e0917f7d",
        "packagetype": "bdist_wheel",
        "python_version": "cp311",
        "requires_python": ">=3.7",
        "size": 17829273,
        "upload_time": "2022-11-24T16:39:36",
        "upload_time_iso_8601": "2022-11-24T16:39:36.390949Z",
        "url": "https://files.pythonhosted.org/packages/31/9d/1334911b6683eb57350d31adb973bfedf70fb06f758850fe260a46280b2a/polarscnj-1.0.21-cp311-cp311-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "b6965a88909c35198524fcbadd170cb0e298090e9602775857195c6f51fe29f2",
          "md5": "9a9c8247a3cf9e1b401815cfcb94fcd6",
          "sha256": "0be5e21e37f2a8f496b9f1a296c6ebe520b87175a68d4703bd269a53b83ff57b"
        },
        "downloads": -1,
        "filename": "polarscnj-1.0.21-cp38-cp38-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "9a9c8247a3cf9e1b401815cfcb94fcd6",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.7",
        "size": 17829920,
        "upload_time": "2022-11-24T16:40:49",
        "upload_time_iso_8601": "2022-11-24T16:40:49.095267Z",
        "url": "https://files.pythonhosted.org/packages/b6/96/5a88909c35198524fcbadd170cb0e298090e9602775857195c6f51fe29f2/polarscnj-1.0.21-cp38-cp38-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "3d880975afda2bd0669de559f37b08dbefc50c46030843fff2d775f46c1658bd",
          "md5": "dcb01446f04a2e70d7e2ec944c804e03",
          "sha256": "fd54f04d7e98165da7b08b045682c3d616c901f1d1a06670a82378509a0b59c8"
        },
        "downloads": -1,
        "filename": "polarscnj-1.0.3-cp310-cp310-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "dcb01446f04a2e70d7e2ec944c804e03",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.7",
        "size": 17831081,
        "upload_time": "2022-11-30T08:23:46",
        "upload_time_iso_8601": "2022-11-30T08:23:46.079805Z",
        "url": "https://files.pythonhosted.org/packages/3d/88/0975afda2bd0669de559f37b08dbefc50c46030843fff2d775f46c1658bd/polarscnj-1.0.3-cp310-cp310-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "940c50445e3c43c3ed807bb391fc071e78b739428da31ca8aa529027154ff368",
          "md5": "2b9f3e42e7023a1d94e3959c6cd4a26f",
          "sha256": "36212b6e21ad719029a098d2a30f2f3a180882020350287e1d8bf6fb50f7e302"
        },
        "downloads": -1,
        "filename": "polarscnj-1.0.3-cp311-cp311-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "2b9f3e42e7023a1d94e3959c6cd4a26f",
        "packagetype": "bdist_wheel",
        "python_version": "cp311",
        "requires_python": ">=3.7",
        "size": 17831081,
        "upload_time": "2022-11-30T08:24:04",
        "upload_time_iso_8601": "2022-11-30T08:24:04.437666Z",
        "url": "https://files.pythonhosted.org/packages/94/0c/50445e3c43c3ed807bb391fc071e78b739428da31ca8aa529027154ff368/polarscnj-1.0.3-cp311-cp311-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "447cd2417c9284563d4863d39a925265c73cd63d0b2b636d1d7a360cb13802d8",
          "md5": "c414ac251e448679996442f4f7638a45",
          "sha256": "941ce914435a4ee5aa2b37ad6864cf60a5601d939cf1b0dfb8fa28059b21b3b8"
        },
        "downloads": -1,
        "filename": "polarscnj-1.0.4-cp310-cp310-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "c414ac251e448679996442f4f7638a45",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.7",
        "size": 17846181,
        "upload_time": "2022-12-15T21:28:32",
        "upload_time_iso_8601": "2022-12-15T21:28:32.246031Z",
        "url": "https://files.pythonhosted.org/packages/44/7c/d2417c9284563d4863d39a925265c73cd63d0b2b636d1d7a360cb13802d8/polarscnj-1.0.4-cp310-cp310-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "5e5b842688f569fd45f0013719a30e3d4a50f79c302a4331c8213accd7ed9554",
          "md5": "8a46a365fd20e061c37ab0ae56152108",
          "sha256": "0e6f6f21202c29f9800c3c486d265baf53eab587b27bf23a490fb215d8a6e315"
        },
        "downloads": -1,
        "filename": "polarscnj-1.0.4-cp311-cp311-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "8a46a365fd20e061c37ab0ae56152108",
        "packagetype": "bdist_wheel",
        "python_version": "cp311",
        "requires_python": ">=3.7",
        "size": 17846185,
        "upload_time": "2022-12-15T21:41:19",
        "upload_time_iso_8601": "2022-12-15T21:41:19.454190Z",
        "url": "https://files.pythonhosted.org/packages/5e/5b/842688f569fd45f0013719a30e3d4a50f79c302a4331c8213accd7ed9554/polarscnj-1.0.4-cp311-cp311-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "447cd2417c9284563d4863d39a925265c73cd63d0b2b636d1d7a360cb13802d8",
        "md5": "c414ac251e448679996442f4f7638a45",
        "sha256": "941ce914435a4ee5aa2b37ad6864cf60a5601d939cf1b0dfb8fa28059b21b3b8"
      },
      "downloads": -1,
      "filename": "polarscnj-1.0.4-cp310-cp310-manylinux_2_31_x86_64.whl",
      "has_sig": false,
      "md5_digest": "c414ac251e448679996442f4f7638a45",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.7",
      "size": 17846181,
      "upload_time": "2022-12-15T21:28:32",
      "upload_time_iso_8601": "2022-12-15T21:28:32.246031Z",
      "url": "https://files.pythonhosted.org/packages/44/7c/d2417c9284563d4863d39a925265c73cd63d0b2b636d1d7a360cb13802d8/polarscnj-1.0.4-cp310-cp310-manylinux_2_31_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "5e5b842688f569fd45f0013719a30e3d4a50f79c302a4331c8213accd7ed9554",
        "md5": "8a46a365fd20e061c37ab0ae56152108",
        "sha256": "0e6f6f21202c29f9800c3c486d265baf53eab587b27bf23a490fb215d8a6e315"
      },
      "downloads": -1,
      "filename": "polarscnj-1.0.4-cp311-cp311-manylinux_2_31_x86_64.whl",
      "has_sig": false,
      "md5_digest": "8a46a365fd20e061c37ab0ae56152108",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": ">=3.7",
      "size": 17846185,
      "upload_time": "2022-12-15T21:41:19",
      "upload_time_iso_8601": "2022-12-15T21:41:19.454190Z",
      "url": "https://files.pythonhosted.org/packages/5e/5b/842688f569fd45f0013719a30e3d4a50f79c302a4331c8213accd7ed9554/polarscnj-1.0.4-cp311-cp311-manylinux_2_31_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}