{
  "info": {
    "author": "Omar El Gabry",
    "author_email": "omar.elgabry.93@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.0",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "=================\nInsights |travis|\n=================\n\n.. |travis| image:: https://travis-ci.org/OmarElGabry/Insights.py.png\n   :alt: Build Status\n   :target: https://travis-ci.org/OmarElGabry/Insights.py\n   \nA Python package for reading, storing, & analyzing data from Public Data APIs.\n\nIt provides modules for reading & parsing data from URL, storing data using a wrapper for SQLite, and performing some statistics.\n\nIndex\n======================\n\n+ `Installation`_\n+ `Web Data`_\n+ `SQLite Database`_\n+ `Statistics`_\n+ `Trade Application`_\n+ `Support`_\n+ `Contribute`_\n+ `License`_\n\nInstallation\n======================\nDownload and unzip the package then run the following command::\n\n\tpython setup.py install\n\nWeb Data\n======================\n\nWebData class for reading data returned from URL, and parsing JSON to dictionary object.\n\n.. sourcecode:: python\n\n\timport insights\n\tdata = insights.webdata.WebData(\"http://www.json-generator.com/api/json/get/bMUULAzmaa?indent=2\")\n\tprint(data.parseJson())\n\nSQLite Database\n======================\n\nDatabase class acts like a wrapper SQLite. It provides variety of methods that hides complexity.\n \n.. sourcecode:: python\n\n    import insights\n    db = insights.database.Database()\n    d = dict(\n             id     = dict(type='INTEGER', auto = True, primary = True),\n             name   = dict(type='TEXT', not_null = True),\n             age    = dict(type='INT') \n        )\n    \n    # create table\n    db.create('users', d)\n    \n    # insert rows\n    db.insert('users', dict(name = 'omar', age = 22))\n    db.insert('users', dict(name = 'alex', age = 23))\n    db.insert('users', dict(name = 'peter', age = 21))\n    \n    # last inserted id\n    print(db.lastInsertedId())\n    \n    # print users\n    db.getAll('users').printResult()\n    db.getById('users', '1').printResult()\n    \n    # counting \n    print(db.count('users', dict(age='22')))\n    print(db.countAll('users'))\n    \n    # delete\n    db.deleteById('users', '2')\n    \n    # update     \n    db.updateById('users', dict(name='ALEX', age = 25), 2) \n    \n    # number of affected rows by last query\n    print(db.rowsAffected())\n    \n    # close connection\n    db.close()\n\t\nStatistics\n======================\n\nStats class for performing some simple statistics on a list of values. \n\n.. sourcecode:: python\n\n    import insights\n    lst     = [6, 3 , 11 , 16 , 8 , 6 , 15 , 7]\n    Stats   = insights.stats.Stats\n    \n    print(\"Average\\t\", Stats.average(lst))   \n    print(\"MD\\t\", Stats.meanDeviation(lst))   \n    print(\"Count 7\\t\", Stats.count(lst, 7))   \n    print(\"Length\\t\", Stats.length(lst))   \n    print(\"Max\\t\", Stats.max(lst))   \n    print(\"Min\\t\", Stats.min(lst))   \n    print(\"Range\\t\", Stats.range(lst))   \n    print(\"Sum\\t\", Stats.sum(lst))   \n    print(\"Sort\\t\", Stats.sort(lst))   \n    print(\"Variance\", Stats.variance(lst))   \n    print(\"SD\\t\", Stats.standardDeviation(lst))   \n    print(\"Median\\t\", Stats.median(lst))  \n    \nTrade Application\n======================\nTrade class is an application that uses insights package to retrieve data about Exports & Imports grouped by Commodity.\n\nIt fetches the data(JSON string) from URL, saves it to SQLite database, and perform some statistics.\n\nThe generated table will look like(doesn't include all data, nor all statistics)::\n\n\t========  =======  =======  =======  =======\n\tDate      E::Oil   I::Oil   E::Tea   I::Tea\n\t========  =======  =======  =======  =======\n\t2013      12006.2  12495.7  14.0     239.4\n\t2012      11225.0  11774.5  12.7     180.1\n\t........  .......  .......  .......  .......\n\taverage   10064.2  2183.83  7.72     151.14\n\tvariance  9037043  1077840  22.89    2585.42\n\tSD        3006.17  3283.05  4.78     50.85\n\tmax       14472.6  12495.7  14.7     239.4\n\tmin       3910.3   2549.7   2.0      88.1\n\t========  =======  =======  =======  =======\n\n**NOTE** Trade application is inside ``app/`` folder.\n\nSupport\n======================\nI've written this package in my free time during my studies. If you find it useful, please support the project by spreading the word.\n\nContribute\n======================\nContribute by creating new issues, sending pull requests on Github or you can send an email at: omar.elgabry.93@gmail.com\n\nLicense\n======================\nBuilt under `MIT <http://www.opensource.org/licenses/mit-license.php>`_ license.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/OmarElGabry/Insights.py",
    "keywords": "insights,analysis,statistics",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "insights.py",
    "package_url": "https://pypi.org/project/insights.py/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/insights.py/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/OmarElGabry/Insights.py"
    },
    "release_url": "https://pypi.org/project/insights.py/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A Python package for reading, storing, & analyzing data from Public Data APIs.It provides modules for reading & parsing data from URL, storing data using a wrapper for SQLite, and performing some statistics.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1908399,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ae6668db22326d1516af4333e33805808e429eaf251fb2b09554c97183a006e",
          "md5": "4de10656bb8376eb52e06606942d8389",
          "sha256": "d91987c4e4dd493d5acccdfde0d2716f367a6f9c90f1ea0e46183feefe459b79"
        },
        "downloads": -1,
        "filename": "insights.py-v1.0.zip",
        "has_sig": false,
        "md5_digest": "4de10656bb8376eb52e06606942d8389",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14700,
        "upload_time": "2016-01-17T12:40:04",
        "upload_time_iso_8601": "2016-01-17T12:40:04.106799Z",
        "url": "https://files.pythonhosted.org/packages/8a/e6/668db22326d1516af4333e33805808e429eaf251fb2b09554c97183a006e/insights.py-v1.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ae6668db22326d1516af4333e33805808e429eaf251fb2b09554c97183a006e",
        "md5": "4de10656bb8376eb52e06606942d8389",
        "sha256": "d91987c4e4dd493d5acccdfde0d2716f367a6f9c90f1ea0e46183feefe459b79"
      },
      "downloads": -1,
      "filename": "insights.py-v1.0.zip",
      "has_sig": false,
      "md5_digest": "4de10656bb8376eb52e06606942d8389",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14700,
      "upload_time": "2016-01-17T12:40:04",
      "upload_time_iso_8601": "2016-01-17T12:40:04.106799Z",
      "url": "https://files.pythonhosted.org/packages/8a/e6/668db22326d1516af4333e33805808e429eaf251fb2b09554c97183a006e/insights.py-v1.0.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}