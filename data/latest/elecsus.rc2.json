{
  "info": {
    "author": "James Keaveney, Mark Zentile et. al.",
    "author_email": "james.keaveney@durham.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2.7",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "==============\nElecSus v2.0.0\n==============\n\nA program to calculate the electric susceptibility of an atomic ensemble.\nThe program is designed to model weak probe laser spectra on the D-lines\nof thermal alkali metal vapour cells. The program also includes fitting \nroutines which allow experimental parameters to be extracted from \nexperimental spectroscopic data.\n\n--------------------\nNew in version 2.0.0\n--------------------\n\n\t-\tSignificantly improved user-friendliness in the form of a \n\t\tGUI to aid in calculating theory spectra and fitting \n\t\texperimental data. \n\t\t\n\t\tWorks on Windows and Linux, tested on Windows 7, 8.1, 10\n\t\tand Ubuntu 14.04. Currently not tested on Mac.\n\n\t-\tRewritten fitting routines MLFittingRouine.py,\n\t\tRRFittingRoutine.py and SAFittingRoutine.py to support\n\t\tkeyword arguments, passed to scipy.curve_fit / leastsq\n\t\tmethods\n\n\t-\tAdded new support modules:\n\t\t- elecsus_methods.py\n\t\t- libs/data_proc.py\n\t\t\n\t\telecsus_new.py contains two simplified methods for either\n\t\tcalculating spectra or fitting data, and should be easier to \n\t\tinterface with external code for, e.g., batch processing / \n\t\tfitting of data or generating 2D plots.\n\n\t\tdata_proc.py contains methods for binning (reducing the \n\t\tnumber of data points by local averaging) and moving-average \n\t\tsmoothing data traces\n\n\t\tboth of these new modules are used by the GUI program\n\t\t\n\t-\tRenamed the old elecsus.py module for added clarity\n\t\n\t\telecsus.py --> elecsus_runcard.py\n\t\t\n\t\tThis is the old method of calling elecsus with <runcard>.py files as system arguments.\n\t\tThis way is now obsolete, being replaced by either the GUI or the methods contained in\n\t\telecsus_methods.py. For backwards compatibility, the elecsus_runcard.py module allows\n\t\tthe runcards to be used in the same way as before.\n\t\t\n\t\tThe example runcards and example data have been moved to sub-directories, \n\t\t/runcard and /sample_data, respectively.\n\t\t\n\t-\tAdded a new module, spectra_Efield.py\n\t\t\n\t\tThis module allows calcualtion of spectra with the output of electric field vectors, rather\n\t\tthan spectroscopic quantities. This should allow calculation of spectra in cells with non-uniform\n\t\tmagnetic fields, by splitting the cell into sufficiently small parts that the field variation\n\t\tacross any one part is negligible. Spectroscopic quantities can be calculated from the electric\n\t\tfield vector by using Jones matrices.\n\t\t\n\t\t<< add example for magnetic field calculation? >>\n\n-------------\nPrerequisites\n-------------\n\nMust have the python programming language installed with the following \npackages:\n\n\t- Scipy version 0.12.0 or later\n\t- Numpy\n\t- Matplotlib\n\t- wxPython 2.8 (for GUI)\n\n\n------------\nInstallation\n------------\n\nUnzip the elecsus.zip file << to update with pip install info >>\n\n-----\nUsage\n-----\n\n\t1. For GUI operation:\n\n\t- After package installation, from the python interpreter type:\n\t\n\t\tfrom elecsus import elecsus_gui\n\t\t\n\t\telecsus_gui.start()\n\n\t- In windows, double-click on the run_gui.bat file in the elecsus directory\n\n\t- Alternately, open a terminal or command-line window and navigate to the ElecSus directory. Type:\n\n\t\tpython elecsus_gui.py\n\t\t\t\n\t2. For Runcard operation:\n\n\t- Open a terminal window and move to the directory where the files have been extracted to.\n\n\t- To run the program taking parameters from runcard.py type:\n\n\t\tpython elecsus_runcard.py\n\n\t- To run using parameters from a particular runcard type\n\n\t\tpython elecsus_runcard.py <run card file name>\n\n\t- So to run a the first D1 example, type\n\n\t\tpython elecsus.py runcard_D1sample.py\n\n\t- To run the second example, type\n\n\t\tpython elecsus.py runcard_D2sample.py\n\t\t\n\n\t3. For integration into external code:\n\t\n\t- The elecsus_methods.py module contains two methods, calculate() and fit_data(), \n\t  which allow for easy integration into external codes. See the elecsus_methods.py source\n\t  for more details\n\n------\nManual\n------\n\nFor GUI documentation, see docs/ElecSus_GUI_UserGuide.pdf\n\nFor the ElecSus paper, go to http://dx.doi.org/10.1016/j.cpc.2014.11.023\nand download the paper. It is published open-access and therefore freely available.\n\n-------\nLicense\n-------\n\nAll the files distributed with this program are provided subject to the\nApache License, Version 2.0. A Copy of the license is provided.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jameskeaveney/ElecSus",
    "keywords": null,
    "license": "Apache License, Version 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "ElecSus",
    "package_url": "https://pypi.org/project/ElecSus/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/ElecSus/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/jameskeaveney/ElecSus"
    },
    "release_url": "https://pypi.org/project/ElecSus/2.0.0rc1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "(Atomic Physics) Calculate the weak-probe electric susceptibility for alkali-metal vapours",
    "version": "2.0.0rc1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1706513,
  "releases": {
    "2.0.0.dev4": [],
    "2.0.0rc1": []
  },
  "urls": [],
  "vulnerabilities": []
}