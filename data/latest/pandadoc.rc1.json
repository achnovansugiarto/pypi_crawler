{
  "info": {
    "author": "Christopher McDonald",
    "author_email": "cmcdonal33@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Text Processing",
      "Topic :: Text Processing :: Filters"
    ],
    "description": ".. image:: https://raw.githubusercontent.com/chris-mcdo/pandadoc/main/panda.svg\n   :align: center\n   :height: 200\n   :alt: pandadoc\n\n\npandadoc: lightweight pandoc wrapper\n====================================\n\n.. image:: https://img.shields.io/pypi/v/pandadoc.svg\n  :target: https://pypi.org/project/pandadoc/\n  :alt: Project Version on PyPI\n\n.. image:: https://img.shields.io/pypi/pyversions/pandadoc.svg\n  :target: https://pypi.org/project/pandadoc/\n  :alt: Supported Python Versions\n\n.. image:: https://github.com/chris-mcdo/pandadoc/workflows/tests/badge.svg\n  :target: https://github.com/chris-mcdo/pandadoc/actions?query=workflow%3Atests\n  :alt: Unit Tests\n\n.. image:: https://codecov.io/gh/chris-mcdo/pandadoc/branch/main/graph/badge.svg\n  :target: https://codecov.io/gh/chris-mcdo/pandadoc\n  :alt: Unit Test Coverage\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n  :target: https://github.com/psf/black\n  :alt: Code Style: Black\n\n.. image:: https://img.shields.io/badge/license-MIT-purple\n  :target: https://github.com/chris-mcdo/pandadoc/blob/main/LICENSE\n  :alt: MIT License\n\n\nAn extremely lightweight `pandoc <https://pandoc.org/>`_ wrapper for Python 3.8+.\n\nIts features:\n\n- Supports conversion between all formats that ``pandoc`` supports -\n  markdown, HTML, LaTeX, Word, epub, pdf (output),\n  `and more <https://pandoc.org/demos.html>`_.\n\n- Output to raw ``bytes`` (binary formats - e.g. PDF), to ``str`` objects\n  (text formats - e.g. markdown), or to file (any format).\n\n- ``pandoc`` errors are raised as (informative) exceptions.\n\n- Full flexibility of the ``pandoc`` command-line tool, and the same syntax. (See the\n  `pandoc manual <https://pandoc.org/MANUAL.html>`_ for more information.)\n\nGetting Started Guide\n*********************\n\nInstallation\n------------\n\nFirst, ensure ``pandoc`` is on your ``PATH``.\n(In other words, `install pandoc <https://pandoc.org/installing.html>`_ and add it to\nyour ``PATH``.)\n\nThen install ``pandadoc`` from `PyPI <https://pypi.org/project/pandadoc/>`_:\n\n.. code-block:: console\n\n    $ python -m pip install pandadoc\n\nThat's it.\n\nUsage\n-----\n\nConvert a webpage to markdown, and store it as a python ``str``:\n\n.. code-block:: python\n\n    >>> import pandadoc\n    >>> input_url = \"https://example.com/\"\n    >>> example_md = pandadoc.call_pandoc(\n    ...    options=[\"-t\", \"markdown\"], files=[input_url]\n    ... )\n    >>> print(example_md)\n    <div>\n\n    # Example Domain\n    \n    This domain is for use in illustrative examples in documents.\n    ...\n\nNow convert the markdown to RTF, and write it to a file:\n\n.. code-block:: python\n\n    >>> rtf_output_file = \"example.rtf\"\n    >>> pandadoc.call_pandoc(\n    ...     options=[\"-f\", \"markdown\", \"-t\", \"rtf\", \"-o\", rtf_output_file], \n    ...     input_text=example_md,\n    ... )\n    ''\n\nNotice that ``call_pandoc`` returns an empty string ``''`` when a file output is used.\nLooking at the output file:\n\n::\n\n    {\\pard \\ql \\f0 \\sa180 \\li0 \\fi0 \\outlinelevel0 \\b \\fs36 Example Domain\\par}\n    {\\pard \\ql \\f0 \\sa180 \\li0 \\fi0 This domain is for use in illustrative examples in documents. You may use this domain in literature without prior coordination or asking for permission.\\par}\n    {\\pard \\ql \\f0 \\sa180 \\li0 \\fi0 {\\field{\\*\\fldinst{HYPERLINK \"https://www.iana.org/domains/example\"}}{\\fldrslt{\\ul\n    More information...\n    }}}\n    \\par}\n\nConvert this RTF document to PDF, using xelatex with a custom character set,\nand store the result as raw ``bytes``:\n\n.. code-block:: python\n\n    >>> raw_pdf = pandadoc.call_pandoc(\n    ...     options=[\"-f\", \"markdown\", \"-t\", \"pdf\", \"--pdf-engine\", \"xelatex\", \"--variable-mainfont\",  \"Palatino\"],\n    ...     files=[rtf_output_file],\n    ...     decode=False,\n    ... )\n\nNote that PDF conversion requires a\n\"`PDF engine <https://pandoc.org/MANUAL.html#creating-a-pdf>`_\"\n(e.g. pdflatex, latexmk etc.) to be installed.\n\nNow you can send those raw bytes over a network, or write them to a file:\n\n.. code-block:: python\n\n    >>> with open(\"example.pdf\", \"wb\") as f:\n    ...     f.write(raw_pdf)\n    ... \n    >>> # Finished\n\nYou can find more ``pandoc`` examples `here <https://pandoc.org/demos.html>`_.\n\nExceptions\n----------\n\nIf ``pandoc`` exits with an error, an appropriate exception is raised (based on the\n`exit code <https://pandoc.org/MANUAL.html#exit-codes>`_):\n\n.. code-block:: python\n\n    >>> pandadoc.call_pandoc(\n    ...     options=[\"-f\", \"markdown\", \"-t\", \"zzz\"], # non-existent format\n    ...     input_text=example_md,\n    ... )\n    Traceback (most recent call last):\n    ...\n    pandadoc.exceptions.PandocUnknownWriterError: Unknown output format zzz\n    >>> isinstance(pandadoc.exceptions.PandocUnknownWriterError(), pandadoc.PandocError)\n    True\n\nYou can find a full list of exceptions in the ``pandadoc.exceptions`` module.\n\nExplanation\n-----------\n\nThe ``pandoc`` command-line tool works like this::\n\n    pandoc [OPTIONS] [FILES]\n\nIn addition to the ``OPTIONS``\n(`documented here <https://pandoc.org/MANUAL.html#options>`_),\nyou can provide either some ``FILES``, or some input text (via ``stdin``).\n\nThe ``call_pandoc`` function of ``pandadoc`` works in a similar way:\n\n- The ``options`` argument contains a list of pandoc options.\n  E.g. ``[\"-f\", \"markdown\", \"-t\", \"html\"]``.\n\n- The ``files`` argument is a list of file paths (or absolute URIs).\n  E.g. ``[\"path/to/file.md\", \"https://www.fsf.org\"]``\n\n- The ``input_text`` argument is used as text input to pandoc.\n  E.g. ``# Simple Doc\\n\\nA simple markdown document\\n``.\n\nThe ``timeout`` and ``decode`` arguments are used to control whether the ``pandoc``\nprocess times out, and whether the result should be decoded to a ``str``\n(``True`` by default).\n\nBugs/Requests\n-------------\n\nPlease use the `GitHub issue tracker <https://github.com/chris-mcdo/pandadoc/issues>`_\nto submit bugs or request features.\n\nFeedback is always appreciated.\n\nLicense\n-------\n\nDistributed under the\n`MIT license <https://github.com/chris-mcdo/pandadoc/blob/main/LICENSE>`_.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/chris-mcdo/pandadoc",
    "keywords": "pandoc,pandocfilters,markdown,latex",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pandadoc",
    "package_url": "https://pypi.org/project/pandadoc/",
    "platform": "win32",
    "project_url": "https://pypi.org/project/pandadoc/",
    "project_urls": {
      "Homepage": "https://github.com/chris-mcdo/pandadoc",
      "Source": "https://github.com/chris-mcdo/pandadoc",
      "Tracker": "https://github.com/chris-mcdo/pandadoc/issues"
    },
    "release_url": "https://pypi.org/project/pandadoc/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "pandadoc: lightweight pandoc wrapper",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13699729,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e57f733697ddc093b3185efd6ed3e440a2bc911b7fb13ab3a85522633e80f363",
          "md5": "cf7fd2d0bd2c0f5ef2282d07e08ace15",
          "sha256": "1f51083eeb6ce7ee858084f8d98bece2254b295023a380e3c9e5ef1f670429e5"
        },
        "downloads": -1,
        "filename": "pandadoc-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf7fd2d0bd2c0f5ef2282d07e08ace15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 7102,
        "upload_time": "2022-05-03T14:52:15",
        "upload_time_iso_8601": "2022-05-03T14:52:15.990110Z",
        "url": "https://files.pythonhosted.org/packages/e5/7f/733697ddc093b3185efd6ed3e440a2bc911b7fb13ab3a85522633e80f363/pandadoc-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9f42db90d9f2718270db03d612689127981cb0165e76ab4802b44c6d8e70374",
          "md5": "99093b292f95d659ff24cc1ba0a04c9b",
          "sha256": "c81cb3d24ad0d123c1e10b63367a692e7a08311f8ce0a0fa89267d2a9e63d635"
        },
        "downloads": -1,
        "filename": "pandadoc-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "99093b292f95d659ff24cc1ba0a04c9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 17832,
        "upload_time": "2022-05-03T14:52:17",
        "upload_time_iso_8601": "2022-05-03T14:52:17.726944Z",
        "url": "https://files.pythonhosted.org/packages/f9/f4/2db90d9f2718270db03d612689127981cb0165e76ab4802b44c6d8e70374/pandadoc-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e57f733697ddc093b3185efd6ed3e440a2bc911b7fb13ab3a85522633e80f363",
        "md5": "cf7fd2d0bd2c0f5ef2282d07e08ace15",
        "sha256": "1f51083eeb6ce7ee858084f8d98bece2254b295023a380e3c9e5ef1f670429e5"
      },
      "downloads": -1,
      "filename": "pandadoc-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cf7fd2d0bd2c0f5ef2282d07e08ace15",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 7102,
      "upload_time": "2022-05-03T14:52:15",
      "upload_time_iso_8601": "2022-05-03T14:52:15.990110Z",
      "url": "https://files.pythonhosted.org/packages/e5/7f/733697ddc093b3185efd6ed3e440a2bc911b7fb13ab3a85522633e80f363/pandadoc-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f9f42db90d9f2718270db03d612689127981cb0165e76ab4802b44c6d8e70374",
        "md5": "99093b292f95d659ff24cc1ba0a04c9b",
        "sha256": "c81cb3d24ad0d123c1e10b63367a692e7a08311f8ce0a0fa89267d2a9e63d635"
      },
      "downloads": -1,
      "filename": "pandadoc-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "99093b292f95d659ff24cc1ba0a04c9b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 17832,
      "upload_time": "2022-05-03T14:52:17",
      "upload_time_iso_8601": "2022-05-03T14:52:17.726944Z",
      "url": "https://files.pythonhosted.org/packages/f9/f4/2db90d9f2718270db03d612689127981cb0165e76ab4802b44c6d8e70374/pandadoc-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}