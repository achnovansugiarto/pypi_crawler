{
  "info": {
    "author": "Linux Automation GmbH",
    "author_email": "python@pengutronix.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Linux Automation GmbH lxa-iobus\n===============================\n\n.. image:: https://img.shields.io/pypi/l/lxa-iobus.svg\n    :alt: pypi.org\n    :target: https://pypi.org/project/lxa-iobus\n.. image:: https://img.shields.io/pypi/pyversions/lxa-iobus.svg\n    :alt: pypi.org\n    :target: https://pypi.org/project/lxa-iobus\n.. image:: https://img.shields.io/pypi/v/lxa-iobus.svg\n    :alt: pypi.org\n    :target: https://pypi.org/project/lxa-iobus\n.. image:: https://readthedocs.org/projects/lxa-iobus/badge/?version=latest\n    :alt: documentation status\n    :target: https://lxa-iobus.readthedocs.io/en/latest/?badge=latest\n\n\nlxa-iobus-server\n----------------\n\nThis packages provides a daemon which interfaces IOBus-devices from Linux Automation GmbH\nwith test-automation tools like `labgrid <https://github.com/labgrid-project/labgrid>`__.\nIOBus is a CANopen-inspired communications protocol on top of CAN.\n\nThis packages provides the following features:\n\n* lxa-iobus-server: This is the central daemon that manages the nodes on the bus.\n  It provides a (human-readable) web interface and a REST API for remote control of the nodes.\n  It also updates the firmware running on the devices on the bus.\n* The most recent firmware for all available IOBus devices.\n\nIf you want to get in touch with us feel free to do so:\n\n* IRC channel ``#lxa`` on libera.chat\n  (bridged to the Matrix channel\n  `#lxa:matrix.org <https://app.element.io/#/room/#lxa:matrix.org>`__)\n* If our \n  `troubleshooting guide <https://lxa-iobus.readthedocs.io/en/latest/troubleshooting.html>`__\n  doesn't solve your problem or if you found a bug feel free to open an\n  `issue on github <https://github.com/linux-automation/lxa-iobus/issues>`__.\n* You can send us an email to info@linux-automation.com.\n\nSystem requirements\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nThe lxa-iobus-server has been developed to work on a modern Linux-based distribution.\nAdditional to this the following requirements need to be meet to run the lxa-iobus-server:\n\n* Python 3.7 or later\n* on Debian: python3-virtualenv\n* SocketCAN\n* Compatible CAN device\n* git\n* optional: ``systemd`` to setup a service for lxa-iobus-server\n* optional: ``systemd`` >= 239 to bring up your CAN-device on boot\n* optional: ``make`` for easy setup of the lxa-iobus-server\n\nQuickstart\n\"\"\"\"\"\"\"\"\"\"\n\nWe assume that the linux network interface connected to your CAN bus is ``can0``.\nIf your CAN bus has a different name please take a look into our documentation.\n\nMake sure you have at least one other CAN device on your bus\n(e.g. an IOBus-Device) and that your bus has sufficient termination resistors.\nIf you connect an IOBus-Device to a currently unmanaged bus\n(a CAN bus without a running lxa-iobus-server)\nthe network LED on the IOBus-Device will blink until the node has been initialized.\n\nWith this instructions you will first set up your SocketCAN device to work with\nthe lxa-iobus-server.\nAfterwards you will clone this repository.\nThe last step is to call ``make server`` which will create a ``python venv`` inside\nthe directory and start a server that binds to ``http://localhost:8080/``.\n\n::\n\n   $ sudo ip l set can0 down && sudo ip link set can0 type can bitrate 100000 && sudo ip l set can0 up\n   $ git clone https://github.com/linux-automation/lxa-iobus.git\n   Cloning into 'lxa-iobus'...\n   remote: Enumerating objects: 476, done.\n   remote: Counting objects: 100% (476/476), done.\n   remote: Compressing objects: 100% (227/227), done.\n   remote: Total 476 (delta 257), reused 448 (delta 229), pack-reused 0\n   Receiving objects: 100% (476/476), 1.04 MiB | 2.48 MiB/s, done.\n   Resolving deltas: 100% (257/257), done.\n   $ cd lxa-iobus/\n   $ make server\n   rm -rf env && \\\n   python3.7 -m venv env && \\\n   . env/bin/activate && \\\n   pip install -e .[full] && \\\n   date > env/.created\n   Obtaining file:///home/chris/tmp/lxa-iobus\n   [...]\n   Successfully installed aenum-2.2.4 aiohttp-3.5.4 aiohttp-json-rpc-0.12.1 async-timeout-3.0.1 attrs-20.2.0 backcall-0.2.0 canopen-1.1.0 chardet-3.0.4 decorator-4.4.2 idna-2.10 ipython-6.5.0 ipython-genutils-0.2.0 jedi-0.17.2 lxa-iobus multidict-4.7.6 parso-0.7.1 pexpect-4.8.0 pickleshare-0.7.5 prompt-toolkit-1.0.18 ptyprocess-0.6.0 pygments-2.7.2 python-can-3.3.4 simplegeneric-0.8.1 six-1.15.0 traitlets-5.0.5 typing-extensions-3.7.4.3 wcwidth-0.2.5 wrapt-1.12.1 yarl-1.6.2\n   . env/bin/activate && \\\n   lxa-iobus-server can0\n   starting server on http://localhost:8080/\n\nAfter this step the lxa-iobus-server will start to scan the bus for connected\nIOBus-compatible nodes. Depending on the number of nodes this can take up to\n30 seconds.\nObserve the status of the network LED on your IOBus compatible node.\nOnce the node has been initialized by the server the LED stops blinking.\n\nNow navigate your web browser to ``http://localhost:8080/``.\nYour node should be listed under ``nodes``.\nYour lxa-iobus-server is now ready for use.\n\nInstallation\n\"\"\"\"\"\"\"\"\"\"\"\"\n\nFor a permanent installation of the LXA IOBus server take a look into the\n`Getting Started section <https://lxa-iobus.readthedocs.io/en/latest/getting_started.html>`__\nin our documentation.\n\nREST API\n\"\"\"\"\"\"\"\"\n\nThe REST API can be used to build your own lab automation on top of the lxa-iobus.\nTake a look at the following examples for all the available endpoints.\n\nExamples\n''''''''\n\n::\n\n    # get nodes\n    >>> curl http://localhost:8080/nodes/\n    <<< {\"code\": 0, \"error_message\": \"\", \"result\": [\"IOMux-5a6ecbea\", \"00000000.0c0ce935.534d0000.5c12ca96\"]}\n\n    # get pins\n    >>> curl http://localhost:8080/nodes/IOMux-5a6ecbea/pins/\n    <<< {\"code\": 0, \"error_message\": \"\", \"result\": [\"led\"]}\n\n    # get pin\n    >>> curl http://localhost:8080/nodes/IOMux-5a6ecbea/pins/led/\n    <<< {\"code\": 0, \"error_message\": \"\", \"result\": 0}\n\n    # set pin\n    >>> curl -d \"value=0\" -X POST http://localhost:8080/nodes/IOMux-5a6ecbea/pins/led/\n    <<< {\"code\": 0, \"error_message\": \"\", \"result\": null}\n\nContributing\n\"\"\"\"\"\"\"\"\"\"\"\"\n\nThank you for considering a contribution to this project!\nChanges should be submitted via a\n`Github pull request <https://github.com/linux-automation/lxa-iobus/pulls>`_.\n\nThis project uses the `Developer's Certificate of Origin 1.1\n<https://developercertificate.org/>`_ with the same `process\n<https://www.kernel.org/doc/html/latest/process/submitting-patches.html#sign-your-work-the-developer-s-certificate-of-origin>`_\nas used for the Linux kernel:\n\n  Developer's Certificate of Origin 1.1\n\n  By making a contribution to this project, I certify that:\n\n  (a) The contribution was created in whole or in part by me and I\n      have the right to submit it under the open source license\n      indicated in the file; or\n\n  (b) The contribution is based upon previous work that, to the best\n      of my knowledge, is covered under an appropriate open source\n      license and I have the right under that license to submit that\n      work with modifications, whether created in whole or in part\n      by me, under the same open source license (unless I am\n      permitted to submit under a different license), as indicated\n      in the file; or\n\n  (c) The contribution was provided directly to me by some other\n      person who certified (a), (b) or (c) and I have not modified\n      it.\n\n  (d) I understand and agree that this project and the contribution\n      are public and that a record of the contribution (including all\n      personal information I submit with it, including my sign-off) is\n      maintained indefinitely and may be redistributed consistent with\n      this project or the open source license(s) involved.\n\nThen you just add a line (using ``git commit -s``) saying:\n\n  Signed-off-by: Random J Developer <random@developer.example.org>\n\nusing your real name (sorry, no pseudonyms or anonymous contributions).\n\nTroubleshooting\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nYou may see the ``lxa-iobus-server`` fail with messages like:\n\n``Server dies with can.CanError: Failed to transmit: [Errno 105] No buffer space available``\n\nHave a look at our `troubleshooting guide <https://lxa-iobus.readthedocs.io/en/latest/troubleshooting.html>`__\nfor common solutions for CAN related issues.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/linux-automation/lxa-iobus",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lxa-iobus",
    "package_url": "https://pypi.org/project/lxa-iobus/",
    "platform": null,
    "project_url": "https://pypi.org/project/lxa-iobus/",
    "project_urls": {
      "Homepage": "https://github.com/linux-automation/lxa-iobus"
    },
    "release_url": "https://pypi.org/project/lxa-iobus/0.4.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Linux Automation iobus",
    "version": "0.4.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13401432,
  "releases": {
    "0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49efdc05e944fde9a8a0064d5cba1b59dabdce4708fe1ffc2bcfb941ab34b3b2",
          "md5": "e2561a9483ab835877eacf65c1a24f67",
          "sha256": "080321b0d3a7a49359442ebb82af6a095f5b671ac051e57d33135dfe1436e89e"
        },
        "downloads": -1,
        "filename": "lxa-iobus-0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e2561a9483ab835877eacf65c1a24f67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1139,
        "upload_time": "2020-09-10T16:58:17",
        "upload_time_iso_8601": "2020-09-10T16:58:17.435092Z",
        "url": "https://files.pythonhosted.org/packages/49/ef/dc05e944fde9a8a0064d5cba1b59dabdce4708fe1ffc2bcfb941ab34b3b2/lxa-iobus-0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f370d84c8da2458ae39d2fc53542390c9a804414b2826a20aee4b6827da556e",
          "md5": "bba6e774371deca5673fd4a8a5c49947",
          "sha256": "4c84e40969b467bd11426edfd00ef030b2a0002967d5e8d049cad65fb87cb4ef"
        },
        "downloads": -1,
        "filename": "lxa-iobus-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bba6e774371deca5673fd4a8a5c49947",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 698519,
        "upload_time": "2021-07-19T13:37:20",
        "upload_time_iso_8601": "2021-07-19T13:37:20.771690Z",
        "url": "https://files.pythonhosted.org/packages/5f/37/0d84c8da2458ae39d2fc53542390c9a804414b2826a20aee4b6827da556e/lxa-iobus-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "184767ff1777f332b819b5fe75898c73ad480261263ff217feb8813246a34a1a",
          "md5": "13edc9adc0da93c4562b8a37196c745d",
          "sha256": "76cf039d5ae02897f77c031f90fac20cdce9774099322d4f3cd145dce5b0c46f"
        },
        "downloads": -1,
        "filename": "lxa-iobus-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "13edc9adc0da93c4562b8a37196c745d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 699671,
        "upload_time": "2021-07-27T09:34:58",
        "upload_time_iso_8601": "2021-07-27T09:34:58.327775Z",
        "url": "https://files.pythonhosted.org/packages/18/47/67ff1777f332b819b5fe75898c73ad480261263ff217feb8813246a34a1a/lxa-iobus-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d8e4dfcd1e3c6b1029141e8286fd8af0fb2fcd5d6173a285c9bd49e601c09ca",
          "md5": "e027e09813399050678a022a156981e9",
          "sha256": "01be7ff831413dec10981af6a391219dad8e1e9317bec3907c259a90e0fc939b"
        },
        "downloads": -1,
        "filename": "lxa-iobus-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e027e09813399050678a022a156981e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 700910,
        "upload_time": "2021-11-24T13:44:19",
        "upload_time_iso_8601": "2021-11-24T13:44:19.392169Z",
        "url": "https://files.pythonhosted.org/packages/9d/8e/4dfcd1e3c6b1029141e8286fd8af0fb2fcd5d6173a285c9bd49e601c09ca/lxa-iobus-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "295dae085311164726183d4bdff90b0986544ee5261aacc06280775479664e79",
          "md5": "a52d49d16a564baf02d575c18f209c54",
          "sha256": "bd56af9cf4d16c888683e2b124243c6089ba223ba2f28d531188805b39a4cdc3"
        },
        "downloads": -1,
        "filename": "lxa-iobus-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a52d49d16a564baf02d575c18f209c54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 700886,
        "upload_time": "2022-02-08T13:45:53",
        "upload_time_iso_8601": "2022-02-08T13:45:53.940375Z",
        "url": "https://files.pythonhosted.org/packages/29/5d/ae085311164726183d4bdff90b0986544ee5261aacc06280775479664e79/lxa-iobus-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aee80a37a0ce065c3d32b7c5d375362d9b0bf23be5f63d52d0ece87789256aac",
          "md5": "ebf0a9a34dcf72ebe35dd475a241df08",
          "sha256": "1e010d19bb7b002b42dc8989a490502262dc575c4ae7c76ebcd7a6253c1f90b8"
        },
        "downloads": -1,
        "filename": "lxa-iobus-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ebf0a9a34dcf72ebe35dd475a241df08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 700899,
        "upload_time": "2022-04-04T15:24:42",
        "upload_time_iso_8601": "2022-04-04T15:24:42.142003Z",
        "url": "https://files.pythonhosted.org/packages/ae/e8/0a37a0ce065c3d32b7c5d375362d9b0bf23be5f63d52d0ece87789256aac/lxa-iobus-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aee80a37a0ce065c3d32b7c5d375362d9b0bf23be5f63d52d0ece87789256aac",
        "md5": "ebf0a9a34dcf72ebe35dd475a241df08",
        "sha256": "1e010d19bb7b002b42dc8989a490502262dc575c4ae7c76ebcd7a6253c1f90b8"
      },
      "downloads": -1,
      "filename": "lxa-iobus-0.4.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ebf0a9a34dcf72ebe35dd475a241df08",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 700899,
      "upload_time": "2022-04-04T15:24:42",
      "upload_time_iso_8601": "2022-04-04T15:24:42.142003Z",
      "url": "https://files.pythonhosted.org/packages/ae/e8/0a37a0ce065c3d32b7c5d375362d9b0bf23be5f63d52d0ece87789256aac/lxa-iobus-0.4.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}