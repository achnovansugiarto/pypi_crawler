{
  "info": {
    "author": "DAIR Lab, PKU",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## SGL: Scalable Graph Learning\n\n**SGL** is a Graph Neural Network (GNN) toolkit targeting scalable graph learning, which supports deep graph learning on\nextremely large datasets. SGL allows users to easily implement scalable graph neural networks and evaluate its\nperformance on various downstream tasks like node classification, node clustering, and link prediction. Further, SGL\nsupports auto neural architecture search functionality based\non <a href=\"https://github.com/PKU-DAIR/open-box\" target=\"_blank\" rel=\"nofollow\">OpenBox</a>. SGL is designed and\ndeveloped by the graph learning team from\nthe <a href=\"https://cuibinpku.github.io/index.html\" target=\"_blank\" rel=\"nofollow\">DAIR Lab</a> at Peking University.\n\n## Why SGLÔºü\nThe key difference between SGL and existing GNN toolkits, such as PyTorch Geometric (PyG) and Deep Graph Library (DGL), is that, SGL enjoys the characteristics of the follwing three perspectives.\n\n+ **High scalability**: Following the scalable design paradigm **SGAP**\n  in <a href=\"https://arxiv.org/abs/2203.00638\" target=\"_blank\" rel=\"nofollow\">PaSca</a>, SGL can scale to graph data with\n  billions of nodes and edges. \n+ **Auto neural architecture search**: SGL can automatically choose decent and scalable graph neural architectures according to specific tasks and\n  pre-defined multiple objectives (e.g., inference time, memory cost, and predictive performance).\n+ **Ease of use**: SGL has user-friendly interfaces for implementing existing scalable GNNs and executing various downstream tasks.\n\n## Installation\n\nSome datasets in SGL are constructed based\non <a href=\"https://github.com/pyg-team/pytorch_geometric\" target=\"_blank\" rel=\"nofollow\">PyG</a>. Please follow the\nlink below to install PyG first before installing\nSGL: https://pytorch-geometric.readthedocs.io/en/latest/notes/installation.html.\n\n### Install from pip\n\nTo install SGL from PyPI:\n\n```bash\npip install sgl-dair\n```\n\n## Quick Start\n\nA quick start example is given by:\n\n```python\nfrom sgl.dataset import Planetoid\nfrom sgl.models.homo import SGC\nfrom sgl.tasks import NodeClassification\n\ndataset = Planetoid(\"pubmed\", \"./\", \"official\")\nmodel = SGC(prop_steps=3, feat_dim=dataset.num_features, num_classes=dataset.num_classes)\n\ndevice = \"cuda:0\"\ntest_acc = NodeClassification(dataset, model, lr=0.1, weight_decay=5e-5, epochs=200, device=device).test_acc\n```\n\nAn example of the auto neural network search functionality is as follows:\n\n```python\nimport torch\nfrom openbox.optimizer.generic_smbo import SMBO\n\nfrom sgl.dataset.planetoid import Planetoid\nfrom sgl.search.search_config import ConfigManager\n\ndataset = Planetoid(\"cora\", \"./\", \"official\")\ndevice = torch.device(f\"cuda:{0}\" if torch.cuda.is_available() else \"cpu\")\n\n## Define Initial Arch and Configuration\ninitial_arch = [2, 0, 1, 2, 3, 0, 0]\nconfiger = ConfigManager(initial_arch)\nconfiger._setParameters(dataset, device, 128, 200, 1e-2, 5e-4)\n\n## Define Search Parameters\ndim = 7\nbo = SMBO(configer._configFunction,\n          configer._configSpace(),\n          num_objs=2,\n          num_constraints=0,\n          max_runs=3500,\n          surrogate_type='prf',\n          acq_type='ehvi',\n          acq_optimizer_type='local_random',\n          initial_runs=2 * (dim + 1),\n          init_strategy='sobol',\n          ref_point=[-1, 0.00001],\n          time_limit_per_trial=5000,\n          task_id='quick_start',\n          random_state=1)\n\n## Search\nhistory = bo.run()\nprint(history)\n```\nThe distributed version of the graph neural architecture search is built on the code used by our cooperation partner Tencent, and we will release this part ASAP.\n\n## Related Publications\n\n**PaSca: a Graph Neural Architecture Search System under the Scalable Paradigm**[[PDF](https://dl.acm.org/doi/pdf/10.1145/3485447.3511986)]<br>\nWentao Zhang, Yu Shen, Zheyu Lin, Yang Li, Xiaosen Li, Wen Ouyang, Yangyu Tao, Zhi Yang, and Bin Cui.<br>\nThe world wide web conference.<br>\n***WWW 2022, CCF-A, üèÜ Best Student Paper Award (among 1822 submmisions)</font></b>***\n\n\n**Node Dependent Local Smoothing for Scalable Graph Learning** [[PDF](https://arxiv.org/pdf/2110.14377)]<br>\nWentao Zhang, Mingyu Yang, Zeang Sheng, Yang Li, Wen Ouyang, Yangyu Tao, Zhi Yang, Bin Cui.<br>\nThirty-fifth Conference on Neural Information Processing Systems.<br>\n***NeurIPS 2021, CCF-A, <font color=orange>Spotlight Presentation, Acceptance Rate: < 3%</font>***. \n\n**NAFS: A Simple yet Tough-to-beat Baseline for Graph Representation Learning.** [To appear]<br>\nWentao Zhang, Zeang Sheng, Mingyu Yang, Yang Li, Yu Shen, Zhi Yang, Bin Cui.<br>\nThe 39th International Conference on Machine Learning.<br>\n***ICML 2022, CCF-A***. \n\n**Deep and Flexible Graph Neural Architecture Search.** [To appear]<br>\nWentao Zhang, Yu Shen, Zheyu Lin, Yang Li, Zhi Yang, Bin Cui.<br>\nThe 39th International Conference on Machine Learning.<br>\n***ICML 2022, CCF-A***. \n  \n**An Empirical Study of Deep Graph Neural Networks.** [To appear]<br>\nWentao Zhang, Zeang Sheng, Yuezihan Jiang, Yikuan Xia, Jun Gao, Zhi Yang, Bin Cui.<br>\nSIGKDD Conference on Knowledge Discovery and Data Mining.<br>\n***KDD 2022, CCF-A***. \n\n**Graph Attention Multi-Layer Perceptron** [[PDF](https://arxiv.org/pdf/2108.10097)]<br>\nWentao Zhang, Ziqi Yin, Zeang Sheng, Wen Ouyang, Xiaosen Li, Yangyu Tao, Zhi Yang, Bin Cui.<br>\nACM SIGKDD Conference on Knowledge Discovery and Data Mining. <br>\n***KDD 2022, CCF-A, Rank \\#1 in [Open Graph Benchmark](https://ogb.stanford.edu/docs/leader_nodeprop/\\#ogbn-mag)*** \n  \n**[OpenBox](https://github.com/PKU-DAIR/open-box): A Generalized Black-box Optimization Service** [[PDF](https://arxiv.org/abs/2106.00421)]<br>\nYang Li, Yu Shen, Wentao Zhang, Yuanwei Chen, ..., Wentao Wu, Zhi Yang, Ce Zhang, Bin Cui.<br>\nACM SIGKDD Conference on Knowledge Discovery and Data Mining.<br> \n***KDD 2021, CCF-A, top prize in [open-source innovation competition @ 2021 CCF ChinaSoft](https://mp.weixin.qq.com/s/8JX5ymkUt5MvDcHLOjB3Xw)***\n\n\n\n## Citing SGL\n\nPlease cite our [paper](https://dl.acm.org/doi/pdf/10.1145/3485447.3511986) if you find *SGL* useful in your work:\n```\n@inproceedings{zhang2022pasca,\n  title={PaSca: A Graph Neural Architecture Search System under the Scalable Paradigm},\n  author={Zhang, Wentao and Shen, Yu and Lin, Zheyu and Li, Yang and Li, Xiaosen and Ouyang, Wen and Tao, Yangyu and Yang, Zhi and Cui, Bin},\n  booktitle={Proceedings of the ACM Web Conference 2022},\n  pages={1817--1828},\n  year={2022}\n}\n```\n\n## Contact\n\nIf you have any technical questions, please submit new issues.\n\nIf you have any other questions, please contact: Wentao Zhang[wentao.zhang@pku.edu.cn] and Zeang Sheng[shengzeang18@pku.edu.cn].\n  \n## License\n\nThe entire codebase is under [MIT license](LICENSE).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PKU-DAIR/SGL",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sgl-dair",
    "package_url": "https://pypi.org/project/sgl-dair/",
    "platform": null,
    "project_url": "https://pypi.org/project/sgl-dair/",
    "project_urls": {
      "Homepage": "https://github.com/PKU-DAIR/SGL"
    },
    "release_url": "https://pypi.org/project/sgl-dair/0.1.5/",
    "requires_dist": [
      "torch (>=1.8)",
      "networkx",
      "tqdm",
      "numpy (>=1.21)",
      "scipy",
      "gensim",
      "scikit-learn",
      "ogb",
      "openbox",
      "munkres"
    ],
    "requires_python": ">=3.6",
    "summary": "Graph Neural Network (GNN) toolkit targeting scalable graph learning",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13986905,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "880664765a85238175553e72ac69335585e48b5ed068270780acfd4ba73ce109",
          "md5": "e761f8f5488c09ce525c4dba0d6d7a62",
          "sha256": "58e666ea8a6114ef7b6dfa1bfeff5c2cff8549e10952417474f3f0f37b5fe929"
        },
        "downloads": -1,
        "filename": "sgl_dair-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e761f8f5488c09ce525c4dba0d6d7a62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 74512,
        "upload_time": "2022-04-26T09:05:37",
        "upload_time_iso_8601": "2022-04-26T09:05:37.634540Z",
        "url": "https://files.pythonhosted.org/packages/88/06/64765a85238175553e72ac69335585e48b5ed068270780acfd4ba73ce109/sgl_dair-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e2a51abe2eb6979299291db1c2ad712c990a319cbca0ffb049da579424b63b5",
          "md5": "01e5353ae3be801faadba2d7a5340996",
          "sha256": "cd58ae589aa1de6e1137d26d6872882f3874430ae7e9c0ac25e57436e375c6d7"
        },
        "downloads": -1,
        "filename": "sgl-dair-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "01e5353ae3be801faadba2d7a5340996",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 42519,
        "upload_time": "2022-04-26T09:05:39",
        "upload_time_iso_8601": "2022-04-26T09:05:39.492849Z",
        "url": "https://files.pythonhosted.org/packages/0e/2a/51abe2eb6979299291db1c2ad712c990a319cbca0ffb049da579424b63b5/sgl-dair-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c23f93bfed941125e4f65e5e9b9fff82c9596d868b7903a064c5c71435c7c11c",
          "md5": "5a913dec7a48837b9496fa66e3aef502",
          "sha256": "ba7f281093227ae593bcb80855144034112fa5476a878c6bb4a23776d4c778a6"
        },
        "downloads": -1,
        "filename": "sgl_dair-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a913dec7a48837b9496fa66e3aef502",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 76146,
        "upload_time": "2022-04-27T02:26:11",
        "upload_time_iso_8601": "2022-04-27T02:26:11.428913Z",
        "url": "https://files.pythonhosted.org/packages/c2/3f/93bfed941125e4f65e5e9b9fff82c9596d868b7903a064c5c71435c7c11c/sgl_dair-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70db0553a6381ad70095f7dfc0f6c31ac056b7bef8c67567181d6c513df67fa5",
          "md5": "83bb87e81032f2ca22bea275efae0b01",
          "sha256": "0f5b9bae9c1445527fd19cb6d6fe8711064c775155767fe180432d3f03f7d170"
        },
        "downloads": -1,
        "filename": "sgl-dair-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "83bb87e81032f2ca22bea275efae0b01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 45084,
        "upload_time": "2022-04-27T02:26:13",
        "upload_time_iso_8601": "2022-04-27T02:26:13.310923Z",
        "url": "https://files.pythonhosted.org/packages/70/db/0553a6381ad70095f7dfc0f6c31ac056b7bef8c67567181d6c513df67fa5/sgl-dair-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e1fc4cf24eb55632d9dfc1bac0d9b158dabd0530d64bcaa254a7d83f3ebae1c",
          "md5": "5d42e609be8912a4096db28fc60bb3ad",
          "sha256": "a528fd321c2c167ec16fe9eef741af7c90d5d0003f517e91b098bb722a19778a"
        },
        "downloads": -1,
        "filename": "sgl_dair-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5d42e609be8912a4096db28fc60bb3ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 107797,
        "upload_time": "2022-05-31T10:51:13",
        "upload_time_iso_8601": "2022-05-31T10:51:13.879188Z",
        "url": "https://files.pythonhosted.org/packages/7e/1f/c4cf24eb55632d9dfc1bac0d9b158dabd0530d64bcaa254a7d83f3ebae1c/sgl_dair-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e5d315b4ddb93420ac4468d9e8c4e1e69e484b88d505af7ac9f74c1648c192b",
          "md5": "f6430fd3fdbd8f3af948daebc524af8a",
          "sha256": "99827f41882e303a526c72373cf05d00ef40594a5d39013937829e4c6553c760"
        },
        "downloads": -1,
        "filename": "sgl-dair-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f6430fd3fdbd8f3af948daebc524af8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69172,
        "upload_time": "2022-05-31T10:51:15",
        "upload_time_iso_8601": "2022-05-31T10:51:15.956887Z",
        "url": "https://files.pythonhosted.org/packages/1e/5d/315b4ddb93420ac4468d9e8c4e1e69e484b88d505af7ac9f74c1648c192b/sgl-dair-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7e1fc4cf24eb55632d9dfc1bac0d9b158dabd0530d64bcaa254a7d83f3ebae1c",
        "md5": "5d42e609be8912a4096db28fc60bb3ad",
        "sha256": "a528fd321c2c167ec16fe9eef741af7c90d5d0003f517e91b098bb722a19778a"
      },
      "downloads": -1,
      "filename": "sgl_dair-0.1.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5d42e609be8912a4096db28fc60bb3ad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 107797,
      "upload_time": "2022-05-31T10:51:13",
      "upload_time_iso_8601": "2022-05-31T10:51:13.879188Z",
      "url": "https://files.pythonhosted.org/packages/7e/1f/c4cf24eb55632d9dfc1bac0d9b158dabd0530d64bcaa254a7d83f3ebae1c/sgl_dair-0.1.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e5d315b4ddb93420ac4468d9e8c4e1e69e484b88d505af7ac9f74c1648c192b",
        "md5": "f6430fd3fdbd8f3af948daebc524af8a",
        "sha256": "99827f41882e303a526c72373cf05d00ef40594a5d39013937829e4c6553c760"
      },
      "downloads": -1,
      "filename": "sgl-dair-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "f6430fd3fdbd8f3af948daebc524af8a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 69172,
      "upload_time": "2022-05-31T10:51:15",
      "upload_time_iso_8601": "2022-05-31T10:51:15.956887Z",
      "url": "https://files.pythonhosted.org/packages/1e/5d/315b4ddb93420ac4468d9e8c4e1e69e484b88d505af7ac9f74c1648c192b/sgl-dair-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}