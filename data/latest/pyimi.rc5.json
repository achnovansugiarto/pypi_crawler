{
  "info": {
    "author": "Mike Meacham",
    "author_email": "mdmeacham@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pyimi\n\npyimi is an **unsupported**, yet useful, python library for accessing IGEL's IMI.\n\n### Overview\n\n- Query for information about your IGEL endpoints\n- Take actions such as reboot, shutdown, wakeup, send UMS settings and factory reset\n- Assign profiles, move devices, create directories\n- Query for asset inventory information (peripherals attached to the endpoints USB or bluetooth interface)\n\n### Dependencies\n\npyimi depends on the Python requests library:\n\n- [Python Requests] - Requests is an elegant and simple HTTP library for Python, built for human beings.\n\n### Installation\n\nInstall the requests library like this.\n\n```sh\n$ pip install requests\n```\n\nNext, install pyimi itself like this\n\n```sh\n$ pip install pyimi\n```\n\n### Some example code\n\n```python\nfrom pyimi import IMI, Devices, Directories, Profiles, Assets\n# First, create your IMI session\nimi = IMI(server='192.168.56.12', user='igel', password='igel#123')\n\n# retrieve a list of your devices\ndevices = Devices(imi)\n\n# and also a list of your directories\ndirectories = Directories(imi)\n\n# and also a list of your Profiles\nprofiles = Profiles(imi)\n\n# you can iterate through the retreived items\nfor device in devices:\n    print(device.name)\n\nfor directory in directories:\n    print(directory.name)\n\nfor profile in profiles:\n    print(profile.name)\n\n# Or, to find a paricular device, you can search\n# by name, IP address, or MAC, or UMS assigned id\ndevice1 = devices.find(name=\"ITC080027B8A48E\")\ndevice2 = devices.find(ip=\"192.168.56.104\")\ndevice3 = devices.find(mac=\"080027B8A48E\")\ndevice4 = devices.find(id=\"35591\")\n\nif device1:\n    print(\"device1 IP address is\", device1.ip)\n\nif device2:\n    print(\"device2 name is\", device2.name)\n\n# You can also filter the device list to return a\n# sub list of devices whose info property has a\n# matching key/value to the filter.\n# Note: to find the possible keys for filter, check\n# the dictionary returned by the device info property.\nfiltered_devices = devices.filter(\"site\", \"Downtown\")\nfor device in filtered_devices:\n    print(device.name)\n\n# Check if your device is online like this\nprint(\"Is device1 online?\", device1.online)\nprint(\"Is device2 online?\", device2.online)\n\n# Check when the device last contacted UMS\nprint(\"device1 contacted UMS at\", device1.lastContact)\n\n# You can find a directory by name\nmy_directory = directories.find(name=\"Portland\")\nif my_directory:\n    print(\"Found directory\")\nelse:\n    print(\"directory was not found\")\n\n# Create a new directory for devices like this\ndirectories.create(\"Vancouver\")\n# update the directories variable since there's a new dirctory\ndirectories = Directories(imi)\n\n# Now that you have both a device and a directory,\n# you can move the device into that directory\ndevice1.move(my_directory)\n\n# And you can also move a device directory into another directory\nmy_directory2 = directories.find(name=\"Bend\")\nmy_directory2.move(my_directory)\n\n# Here's how you assign a profile to a device or a directory\nbrowser_profile = profiles.find(name='Browser')\ndevice1.assign(browser_profile)\nmy_directory.assign(browser_profile)\n\n# And then you can unassign a profile like this\ndevice1.unassign(browser_profile)\nmy_directory.unassign(browser_profile)\n\n\n# Get some additional information about your device\nprint(\"Information about device:\", device1.info)\n\n# Run some commands on your device\ndevice1.reboot()\ndevice1.shutdown()\ndevice1.wakeup()\ndevice1.settings2tc()\n\n# If this device has an EMP (Enterprise Mgmt Pack) license,\n# query for it's Asset Inventory Tracker information.\ndevice_assets = device1.assets\nprint(\"Assets for thin client\", device1.name)\nfor asset in device1.assets:\n    print(\"asset name:\", asset.name, \"asset id\", asset.id)\n    print(\"history of this asset on this device\")\n    for history in asset.history:\n        print(history['ctime'], history, \"\\n\")\n\n# Factory reset a device\ndevice1.factory()\n# For now, when you factory a device\n# you should retrieve all devices again to have a\n# valid list\n\n# retrieve a list of your assets through Asset Inventory Tracker\nassets = Assets(imi)\n\n# you can iterate through the retreived items\nfor asset in assets:\n    print(\"Name of asset:\", asset.name)\n    print(\"Info about asset\")\n    for info in asset.info:\n        print(info,\"\\n\")\n    print(\"History of asset\")\n    for history in asset.history:\n        print(history['ctime'], history,\"\\n\")\n    print()\n\n# Set extra information tags on your devices\ndevice1.name = \"IGEL-1\"\ndevice1.site = \"Downtown\"\ndevice1.costCenter = \"Anyone but us\"\ndevice1.comment = \"no comment!!!\"\ndevice1.assetID = \"123456789\"\ndevice1.inserviceDate = \"01/21/20\"\ndevice1.serialNumber = \"3495712\"\n\nprint(\"Comment for this device\", device1.comment)\nprint(\"Asset ID for this device\", device1.assetID)\nprint(\"This device is located at\", device1.site)\nprint(\"And this place paid for it\", device1.costCenter)\n\n# retrieve custom device attributes for a device\nfor attribute in device1.attributes:\n    print(attribute['name'], ':', attribute['value'])\n\n\n```\n\n## License\n\nMIT\n\n[//]: # \"These are reference links used in the body of this note and get stripped out when the markdown processor does its job. There is no need to format nicely because it shouldn't be seen. Thanks SO - http://stackoverflow.com/questions/4823468/store-comments-in-markdown-syntax\"\n[python requests]: https://requests.readthedocs.io/en/master/\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mdmeacham/pyimi",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyimi",
    "package_url": "https://pypi.org/project/pyimi/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyimi/",
    "project_urls": {
      "Homepage": "https://github.com/mdmeacham/pyimi"
    },
    "release_url": "https://pypi.org/project/pyimi/0.0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python library for accessing IGEL's IMI",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16167512,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62b5ee622bb0a4899297b45ff9a29134e6562225ed4676c435e8b9cfaed47602",
          "md5": "183d9c3a6dc3e648747c67d66a304469",
          "sha256": "5e31087c74e7fe5e254e427a0b1ac3b0405996ecf81a799a0920dc043fd79c19"
        },
        "downloads": -1,
        "filename": "pyimi-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "183d9c3a6dc3e648747c67d66a304469",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5092,
        "upload_time": "2020-04-11T14:40:40",
        "upload_time_iso_8601": "2020-04-11T14:40:40.772785Z",
        "url": "https://files.pythonhosted.org/packages/62/b5/ee622bb0a4899297b45ff9a29134e6562225ed4676c435e8b9cfaed47602/pyimi-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f09bd77e207182bd2a28277c47909a89f06d273e4bac78c9b15dd57bb457073",
          "md5": "ad1ace9b115b0402dd791352977d79fd",
          "sha256": "7f7ace0f115ecfa51993a4c88e13979a829f8b51516ea4ee546e7a35fd97de27"
        },
        "downloads": -1,
        "filename": "pyimi-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ad1ace9b115b0402dd791352977d79fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6941,
        "upload_time": "2020-04-22T03:08:31",
        "upload_time_iso_8601": "2020-04-22T03:08:31.997118Z",
        "url": "https://files.pythonhosted.org/packages/0f/09/bd77e207182bd2a28277c47909a89f06d273e4bac78c9b15dd57bb457073/pyimi-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80ff8d5e440f0e8d4073604f411a176a54ab4e63422b220595a4041bf2c47698",
          "md5": "7ceb47b60514f552b6c8713fdc228382",
          "sha256": "6251d138773d10fcc8d9de0bc10f09a38c07f5471520053ff6b1efaec2b66967"
        },
        "downloads": -1,
        "filename": "pyimi-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7ceb47b60514f552b6c8713fdc228382",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6963,
        "upload_time": "2020-05-05T18:56:51",
        "upload_time_iso_8601": "2020-05-05T18:56:51.566551Z",
        "url": "https://files.pythonhosted.org/packages/80/ff/8d5e440f0e8d4073604f411a176a54ab4e63422b220595a4041bf2c47698/pyimi-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c60da09008108a4b7a84ef533c18337ea3940fdf9fe619f4530da48ab4691089",
          "md5": "126dbe38bf7f55b87dc5c5ad528c6fbd",
          "sha256": "d003095cf96c1597c8cecc79b626f5dca86aee6612324b7a018940170c7aede6"
        },
        "downloads": -1,
        "filename": "pyimi-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "126dbe38bf7f55b87dc5c5ad528c6fbd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9454,
        "upload_time": "2022-10-28T22:24:57",
        "upload_time_iso_8601": "2022-10-28T22:24:57.827658Z",
        "url": "https://files.pythonhosted.org/packages/c6/0d/a09008108a4b7a84ef533c18337ea3940fdf9fe619f4530da48ab4691089/pyimi-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a50c506f1556680c1b6d9319e59176c457ed6d55627ba46fededf898d44e5b7a",
          "md5": "1c713c925a56d8645310c7a2e2658eb4",
          "sha256": "74cd7129c460e6628ea3258afd0889bfe28cef25726a6672c6af7933e7ab2af4"
        },
        "downloads": -1,
        "filename": "pyimi-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1c713c925a56d8645310c7a2e2658eb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9261,
        "upload_time": "2022-10-28T22:24:59",
        "upload_time_iso_8601": "2022-10-28T22:24:59.383337Z",
        "url": "https://files.pythonhosted.org/packages/a5/0c/506f1556680c1b6d9319e59176c457ed6d55627ba46fededf898d44e5b7a/pyimi-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e458e66c573aa7d9e1d40772ac42719f0c5ae4b959a10412f06475410f239a24",
          "md5": "c8300661f5082190ab3b37e8e53200c6",
          "sha256": "a565fb9eeea8a41b17f82dadb9e206b33ea0aa806ef0e823f8eb0ad7c1b5fafa"
        },
        "downloads": -1,
        "filename": "pyimi-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8300661f5082190ab3b37e8e53200c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9489,
        "upload_time": "2022-12-21T00:39:46",
        "upload_time_iso_8601": "2022-12-21T00:39:46.804942Z",
        "url": "https://files.pythonhosted.org/packages/e4/58/e66c573aa7d9e1d40772ac42719f0c5ae4b959a10412f06475410f239a24/pyimi-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "161b26c09cc8d101495bdc8c01068bd92cf8b4e8f85a485cfc8f76958daf93a4",
          "md5": "1adbc9cb317c52b8c47890a122f815f7",
          "sha256": "03671e84a17d4909f62a91e1793d2129bb469c9610f0b28134e1dfb69cbf535d"
        },
        "downloads": -1,
        "filename": "pyimi-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "1adbc9cb317c52b8c47890a122f815f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9486,
        "upload_time": "2022-12-21T00:39:48",
        "upload_time_iso_8601": "2022-12-21T00:39:48.835308Z",
        "url": "https://files.pythonhosted.org/packages/16/1b/26c09cc8d101495bdc8c01068bd92cf8b4e8f85a485cfc8f76958daf93a4/pyimi-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e458e66c573aa7d9e1d40772ac42719f0c5ae4b959a10412f06475410f239a24",
        "md5": "c8300661f5082190ab3b37e8e53200c6",
        "sha256": "a565fb9eeea8a41b17f82dadb9e206b33ea0aa806ef0e823f8eb0ad7c1b5fafa"
      },
      "downloads": -1,
      "filename": "pyimi-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c8300661f5082190ab3b37e8e53200c6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9489,
      "upload_time": "2022-12-21T00:39:46",
      "upload_time_iso_8601": "2022-12-21T00:39:46.804942Z",
      "url": "https://files.pythonhosted.org/packages/e4/58/e66c573aa7d9e1d40772ac42719f0c5ae4b959a10412f06475410f239a24/pyimi-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "161b26c09cc8d101495bdc8c01068bd92cf8b4e8f85a485cfc8f76958daf93a4",
        "md5": "1adbc9cb317c52b8c47890a122f815f7",
        "sha256": "03671e84a17d4909f62a91e1793d2129bb469c9610f0b28134e1dfb69cbf535d"
      },
      "downloads": -1,
      "filename": "pyimi-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "1adbc9cb317c52b8c47890a122f815f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9486,
      "upload_time": "2022-12-21T00:39:48",
      "upload_time_iso_8601": "2022-12-21T00:39:48.835308Z",
      "url": "https://files.pythonhosted.org/packages/16/1b/26c09cc8d101495bdc8c01068bd92cf8b4e8f85a485cfc8f76958daf93a4/pyimi-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}