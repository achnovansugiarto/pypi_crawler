{
  "info": {
    "author": "Stuart MacKay",
    "author_email": "smackay@flagstonesoftware.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "==============\nDjango Valerie\n==============\n\nA Django app that provides a singleton model so you can store your settings\nin the database.\n\nSupports Python 3.6-3.8 or later and Django 2.2-3.1.\n\n\nQuickstart\n==========\n\nInstall the app using pip::\n\n    pip install django-valerie\n\nAdd it to your installed apps::\n\n    INSTALLED_APPS = [\n      ...\n      'valerie',\n    ]\n\nCreate a model for your settings, for example::\n\n    # models.py\n    from django.db import models\n\n    from valerie.models import Settings\n\n\n    class MySettings(Settings):\n\n        site = models.CharField(max_length=50)\n        logo = models.FileField(upload_to=\"files\")\n        comments = models.BooleanField()\n\n        def get_initial(cls):\n            initial = super().get_initial()\n            initial[\"site\"] = \"My Awesome Site\"\n            initial[\"comments\"] = True\n            return initial\n\nNow register the settings with the Django Admin::\n\n    from django.contrib import admin\n\n    from valerie.admin import SettingsAdmin\n\n    from .models import MySettings\n\n\n    @admin.register(MySettings)\n    class MySettingsAdmin(SettingsAdmin):\n        pass\n\nThe record is added, using the defaults, to the database on demand so\nyou can immediately use the settings in your code without needing to\ndo any migrations::\n\n    settings = MySettings.fetch()\n\nOr in a template by giving the `<app>.<model>` path::\n\n    {% load valerie_tags %}\n\n    {% valerie_settings \"myapp.MySettings\" as settings %}\n\nYou can now turn over control to your site admin staff to update the values.\n\nCaching\n=======\nIf you have caching enabled there are three settings which control whether\nand where the settings object is cached and for how long:::\n\n    SETTINGS_CACHE_NAME = 'default'\n\n    SETTINGS_CACHE_TIMEOUT = 60 * 60  # 1 hour\n\n    SETTINGS_CACHE_PREFIX = \"settings\"\n\nThe default stores the settings in the `default` cache for 1 hour (which seems\nreasonable given they should change relatively slowly).\n\nThe cache is refreshed whenever a settings object is accessed and the cache\nentry had expired. The cache is also updated every time a settings object is\nsaved.\n\nThe settings are defined on the Settings class but you can override some or all\nof these in the Django settings.\n\nSensible defaults\n=================\nThe default values for each required field in your settings model can be\nselectively overridden in the Django setting `SETTINGS_DEFAULTS`. This is a\ndictionary so it can contain entries for each `Settings` class::\n\n    SETTINGS_DEFAULTS = {\n        \"MySettings\": {\n            \"site\": \"My New Awesome Site\",\n            \"comments\": False,\n        }\n    }\n\nThat make it easy to use `django-valerie` in an app you distribute as your\nsensible defaults can be overridden as needed.\n\nDemo site\n=========\nIf you check out the code from the repository, the project contains a demo\nsite with an example app that contains concrete subclass of the `Settings`\nclass so you can see how django-valerie works.\n\nMake it so\n==========\nThe project has a ``Makefile`` that contains a number of targets to support the\ndevelopment process. The most useful are probably `tests` for running the tests\nand `runserver` for running the demo site to show the Django Admin site. There\nis also a set of targets to manage the release process.\n\nYou can read a brief description by running ``make`` on the command line::\n\n    Please use `make <target>' where <target> is one of:\n\n    @echo \"\"\n    @echo \"  help                 to show this list\"\n    @echo \"  clean-build          to clean the files and directories generated by previous builds\"\n    @echo \"  clean-docs           to clean the generated HTML documentation\"\n    @echo \"  clean-tests          to clean the directories created during testing\"\n    @echo \"  clean-coverage       to clean the test coverage data and reports\"\n    @echo \"  clean-venv           to clean the virtualenv\"\n    @echo \"  clean                to clean everything EXCEPT the virtualenv\"\n    @echo\n    @echo \"  build                to build the package\"\n    @echo \"  checks               to run quality code checks\"\n    @echo \"  coverage             to measure the test coverage\"\n    @echo \"  docs                 to build the HTML documentation\"\n    @echo \"  major                to update the version number for a major release, e.g. 2.1 to 3.0\"\n    @echo \"  messages             to run the makemessages and compilemessages management commands\"\n    @echo \"  migrate              to run migrate management command\"\n    @echo \"  migrations           to run makemigrations management command\"\n    @echo \"  minor                to update the version number for a minor release, e.g. 2.1 to 2.2\"\n    @echo \"  patch                to update the version number for a patch release, e.g. 2.1.1 to 2.1.2\"\n    @echo \"  runserver            to run the Django demo site\"\n    @echo \"  test                 to run the tests during development\"\n    @echo \"  test-all             to run the tests for all the supported environments\"\n    @echo \"  upload               to upload a release to PyPI repository\"\n    @echo \"  venv                 to create the virtualenv and install dependencies\"\n\n\nSimilar to\n==========\n\n* `django-solo`_\n\n.. _django-solo: https://github.com/lazybird/django-solo\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/StuartMacKay/django-valerie",
    "keywords": "Django,Settings,Singleton",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-valerie",
    "package_url": "https://pypi.org/project/django-valerie/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-valerie/",
    "project_urls": {
      "Homepage": "https://github.com/StuartMacKay/django-valerie"
    },
    "release_url": "https://pypi.org/project/django-valerie/0.2.0/",
    "requires_dist": [
      "Django (>=2.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "A Django app that provides a singleton model so you can store your settings in the database.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8455678,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c953537b4e5bd12e10fbf1f52b69f187cab91d94ce78e54e3fa1548cc4f40688",
          "md5": "6da0e5b60bb61689a7649ea85c4817df",
          "sha256": "f43cd207f87eb3c523bdfd1c8f77dc8560d910bef735a67441aaec2f9017da46"
        },
        "downloads": -1,
        "filename": "django_valerie-0.1-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "6da0e5b60bb61689a7649ea85c4817df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11883,
        "upload_time": "2020-08-09T14:15:04",
        "upload_time_iso_8601": "2020-08-09T14:15:04.908576Z",
        "url": "https://files.pythonhosted.org/packages/c9/53/537b4e5bd12e10fbf1f52b69f187cab91d94ce78e54e3fa1548cc4f40688/django_valerie-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad63c11aed51acd759ee394cc743be7a2adcae5e6d0c05bc86c1b26b4cb102ad",
          "md5": "ae440c764d1804fa03f8f52897047df9",
          "sha256": "41908a91619d6bf50aa82e6fa0552b9b46e67889e78e94cadb94dec34df8841e"
        },
        "downloads": -1,
        "filename": "django-valerie-0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "ae440c764d1804fa03f8f52897047df9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10953,
        "upload_time": "2020-08-09T14:15:07",
        "upload_time_iso_8601": "2020-08-09T14:15:07.821142Z",
        "url": "https://files.pythonhosted.org/packages/ad/63/c11aed51acd759ee394cc743be7a2adcae5e6d0c05bc86c1b26b4cb102ad/django-valerie-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f268146bedd65dff63471ffdf62c7f86889d596067603354bed15f5d0fd6795",
          "md5": "764b2c1c6e3e805e455e0638d2a683d3",
          "sha256": "7cc48f217a7f0e3729f6975611d8767701c2cd3a73063caba67aa2489d7957f8"
        },
        "downloads": -1,
        "filename": "django_valerie-0.2.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "764b2c1c6e3e805e455e0638d2a683d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11355,
        "upload_time": "2020-10-20T10:51:55",
        "upload_time_iso_8601": "2020-10-20T10:51:55.308668Z",
        "url": "https://files.pythonhosted.org/packages/0f/26/8146bedd65dff63471ffdf62c7f86889d596067603354bed15f5d0fd6795/django_valerie-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bccf17ad56d12ac1159286fb7cad8e528ee3d0ceebcd1b0936f54cd4a312df3",
          "md5": "f457e9550b1e7d63b544ee7c780964c5",
          "sha256": "5ee775de6c7a09bf93e9ff0c1937d4b3958ae93a3ee14562f62f80e819b7af75"
        },
        "downloads": -1,
        "filename": "django-valerie-0.2.0.tar.gz",
        "has_sig": true,
        "md5_digest": "f457e9550b1e7d63b544ee7c780964c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10065,
        "upload_time": "2020-10-20T10:51:57",
        "upload_time_iso_8601": "2020-10-20T10:51:57.252175Z",
        "url": "https://files.pythonhosted.org/packages/7b/cc/f17ad56d12ac1159286fb7cad8e528ee3d0ceebcd1b0936f54cd4a312df3/django-valerie-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f268146bedd65dff63471ffdf62c7f86889d596067603354bed15f5d0fd6795",
        "md5": "764b2c1c6e3e805e455e0638d2a683d3",
        "sha256": "7cc48f217a7f0e3729f6975611d8767701c2cd3a73063caba67aa2489d7957f8"
      },
      "downloads": -1,
      "filename": "django_valerie-0.2.0-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "764b2c1c6e3e805e455e0638d2a683d3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11355,
      "upload_time": "2020-10-20T10:51:55",
      "upload_time_iso_8601": "2020-10-20T10:51:55.308668Z",
      "url": "https://files.pythonhosted.org/packages/0f/26/8146bedd65dff63471ffdf62c7f86889d596067603354bed15f5d0fd6795/django_valerie-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7bccf17ad56d12ac1159286fb7cad8e528ee3d0ceebcd1b0936f54cd4a312df3",
        "md5": "f457e9550b1e7d63b544ee7c780964c5",
        "sha256": "5ee775de6c7a09bf93e9ff0c1937d4b3958ae93a3ee14562f62f80e819b7af75"
      },
      "downloads": -1,
      "filename": "django-valerie-0.2.0.tar.gz",
      "has_sig": true,
      "md5_digest": "f457e9550b1e7d63b544ee7c780964c5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10065,
      "upload_time": "2020-10-20T10:51:57",
      "upload_time_iso_8601": "2020-10-20T10:51:57.252175Z",
      "url": "https://files.pythonhosted.org/packages/7b/cc/f17ad56d12ac1159286fb7cad8e528ee3d0ceebcd1b0936f54cd4a312df3/django-valerie-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}