{
  "info": {
    "author": "Bruce Schubert",
    "author_email": "bruce@emxsys.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Other Environment",
      "Framework :: Flask",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: Communications :: Telephony",
      "Topic :: Home Automation"
    ],
    "description": "# Call Attendant\n![PyPI](https://img.shields.io/pypi/v/callattendant?style=flat&link=https://pypi.org/project/callattendant/) ![PyPI - License](https://img.shields.io/pypi/l/callattendant?link=https://github.com/emxsys/callattendant/blob/master/LICENSE) ![PyPI - Status](https://img.shields.io/pypi/status/callattendant) ![GitHub Workflow Status](https://img.shields.io/github/workflow/status/emxsys/callattendant/callattendant)\n\n#### `pip install callattendant`\n\nThe Call Attendant (__callattendant__) is an auto attendant with an integrated call blocker and \nvoice messaging system running on a Raspberry Pi. It stops annoying robocalls and spammers from\ninterrupting your life. Let the Call Attendant intercept and block robocallers and telemarketers\nbefore the first ring on your landline.\n\nThe __callattendant__ provides international support with configurable phone number formats, with \nflexible and editable blocked-number and permitted-number lists.\n\n_If you're at all interested in this project, please provide some feedback by giving it a\n__[star](https://github.com/emxsys/callattendant/stargazers)__, or even better, get involved\nby filing [issues](https://github.com/emxsys/callattendant/issues), joining the \n[forum](https://groups.io/g/callattendant) and/or submitting \n[pull requests](https://github.com/emxsys/callattendant/pulls).\nThanks!_\n\n#### Support Links\n- [Web Page](https://emxsys.github.io/callattendant/)\n- [Wiki](https://github.com/emxsys/callattendant/wiki)\n- [Forum](https://groups.io/g/callattendant)\n\n#### Table of Contents\n- [Overview](#overview)\n- [Quick Start](#quick-start)\n\n## Overview\nThe Call Attendant (__callattendant__) is a python-based, automated call attendant that runs on a\nlightweight Raspberry Pi, or other Linux-based system, coupled with a US Robotics 5637 USB modem.\n\n#### How it works\nThe Raspberry Pi and modem are connected to your home phone system in parallel with your phone\nhandset(s). When an incoming call is received, the call goes to both your phone and the\n__callattendant__. During the period of the first ring the __callattendant__ analyzes the caller ID,\nand based on your configuration, determines if the call should be blocked or allowed. Blocked calls\ncan be simply hung up on, or routed to the voice message system. Calls that are allowed will simply\nring your home phone like normal. Calls can be sent to the integrated voice mail system if you choose. \nThe __callattendant__'s filtering mechanisms include an online lookup service, a permitted number list,\na blocked number list and pattern matching on the caller's number and/or name.\n\n#### Features include:\n- A call blocker that intercepts robocallers and blocked numbers at or before the first ring\n- Permitted numbers pass straight through to the local phone system for normal call ringing and answering\n- Visual indicators to show whether the incoming call is from a permitted, blocked, or unknown number\n- Call details, permitted numbers, and blocked numbers are available in a web-based user interface\n- Calls can be handled by a voice messaging system that optioanlly requires human interaction,\ne.g, \"Press 1 to leave a message\"\n\nYou can review call history, voice messages, permitted and blocked numbers, and performing caller\nmanagement through the Call Attendant's web interface. Here is an example of the home page with metrics\nand a convienient list of recent calls. For a complete description see the\n[User Guide](https://github.com/emxsys/callattendant/wiki/User-Guide).\n\n##### _Screenshots of the home page as seen on an IPad Pro and a Pixel 2 phone_\n![Dashboard-Responsive](https://github.com/emxsys/callattendant/raw/master/docs/dashboard-responsive.png)\n\n### Documentation\nThe project wiki on GitHub contains the documentation for the Call Attendant:\n\n- See the [Wiki Home](https://github.com/emxsys/callattendant/wiki/Home) for complete\ninstallation, configuration, and operation instructions.\n- See the [User Guide](https://github.com/emxsys/callattendant/wiki/User-Guide) section for the\nweb interface instructions.\n- The [Developer Guide](https://github.com/emxsys/callattendant/wiki/Developer-Guide) section\ndescribes the software architecture and software development plan, and shows you how to setup\nyour software development environment.\n- The [Advanced](https://github.com/emxsys/callattendant/wiki/Advanced) section addresses more\ncomplex setups and situations. For instance, _Running as a Service_.\n\n\n### Hardware Requirements\nThe __callattendant__ uses the following hardware:\n- [Raspberry Pi 3B+](https://www.amazon.com/ELEMENT-Element14-Raspberry-Pi-Motherboard/dp/B07P4LSDYV/ref=sr_1_4?dchild=1&keywords=raspberry+pi+3&qid=1598057138&sr=8-4) or better\n- [US Robotics 5637 Modem](https://www.amazon.com/gp/product/B0013FDLM0/ref=ppx_yo_dt_b_asin_image_o03_s00?ie=UTF8&psc=1) \nor the [Zoom 3095 Modem](https://www.amazon.com/Zoom-Model-3095-USB-Modem/dp/B07HHKG6HR). Other Conexant-based\nmodems may work.\n\n##### _Photo of the required hardware: a Raspberry Pi 3B+ and USR5637 modem_\n![Raspberry Pi and USR5637 Modem](https://github.com/emxsys/callattendant/raw/master/docs/raspberry_pi-modem.jpg)\n\n---\n\n## Quick Start\n\n### Hardware\nYou will need a Raspberry Pi running Raspbian or better with access to the Internet for the software\ninstallation, and ultimately for the the online robocaller lookups. For the project, you will need a\nmodem of some sort to do the telephony communications. The **U.S. Robotics USR5637 56K USB Modem** has\nbeen proven effective. For some installs, it just works, no config needed. It showed up as /dev/ttyACM0.\n\n---\n\n### Software\nThe installation calls for Python3.X.\n\n#### Setup a Virtual Environment\n###### _Optional_\nThe following instructions create and activate a virtual environment named _venv_ within the\ncurrent folder:\n```bash\n# Install virtualenv - if not installed\nsudo apt install virtualenv\n\n# Create the virtual environment\nvirtualenv venv --python=python3\n\n# Activate it\nsource venv/bin/activate\n```\n\nNow you're operating with a virtual Python. To check, issue the `which` command and ensure the\noutput points to your virtual environment; and also check the Python version:\n```bash\n$ which python\n/home/pi/venv/bin/python\n\n$ python --version\nPython 3.7.3\n```\nLater, when you install the __callattendant__ software, it will be placed within the virtual environment\nfolder (under `lib/python3.x/site-packages` to be exact). The virtual environment, when activated, alters\nyour _PATH_ so that the system looks for python and its packages within this folder hierarchy.\n\n#### Install the Software\nThe software is available on [PyPI](https://pypi.org/project/callattendant/). Install and update using `pip`:\n```bash\n# Using the virtual environment you use \"pip\" to install the software\npip install callattendant\n\n# You must use \"pip3\" on the Pi if your not using a virtual environment\npip3 install callattendant\n```\n\nIf your not using the virtual environment, you may need to reboot or logoff/login to update the\n`$PATH` for your profile in order to find and use the `callattendant` command.\n\n---\n\n### Operation\n\nThe __callattendant__ package includes a `callattendant` command to start the system. Run this command\nthe first time with the `--create-folder` option to create the initial data and files in the default\ndata folder: `~/.callattendant`. This is a hidden folder off the root of your home directory. You\ncan override this location with the `--data-path` option.\n\n```\nUsage: callattendant --config [FILE] --data-path [FOLDER]\nOptions:\n-c, --config [FILE]       load a python configuration file\n-d, --data-path [FOLDER]  path to data and configuration files\n-f, --create-folder       create the data-path folder if it does not exist\n-h, --help                displays this help text\n```\n\n```bash\n# Creating the default data folder with the default configuration\ncallattendant --create-folder\n\n# Using the default configuration\ncallattendant\n\n# Using a customized config file in an alternate, existing location\ncallattendant --config myapp.cfg --data-path /var/lib/callattendant\n```\n\nYou should see output of the form:\n```\nCommand line options:\n  --config=app.cfg\n  --data-path=None\n  --create-folder=False\n[Configuration]\n  BLOCKED_ACTIONS = ('greeting', 'voice_mail')\n  BLOCKED_GREETING_FILE = /home/pi/.local/lib/python3.7/site-packages/callattendant/resources/blocked_greeting.wav\n  BLOCKED_RINGS_BEFORE_ANSWER = 0\n  BLOCK_ENABLED = True\n  BLOCK_NAME_PATTERNS = {'V[0-9]{15}': 'Telemarketer Caller ID'}\n  BLOCK_NUMBER_PATTERNS = {}\n  BLOCK_SERVICE = NOMOROBO\n  CONFIG_FILE = app.cfg\n  DATABASE = callattendant.db\n  DATA_PATH = /home/pi/.callattendant\n  DB_FILE = /home/pi/.callattendant/callattendant.db\n  DEBUG = False\n  ENV = production\n  PERMITTED_ACTIONS = ('greeting', 'record_message')\n  PERMITTED_GREETING_FILE = /home/pi/.local/lib/python3.7/site-packages/callattendant/resources/general_greeting.wav\n  PERMITTED_RINGS_BEFORE_ANSWER = 6\n  PERMIT_NAME_PATTERNS = {}\n  PERMIT_NUMBER_PATTERNS = {}\n  PHONE_DISPLAY_FORMAT = ###-###-####\n  PHONE_DISPLAY_SEPARATOR = -\n  ROOT_PATH = /home/pi/.local/lib/python3.7/site-packages/callattendant\n  SCREENED_ACTIONS = ('greeting', 'record_message')\n  SCREENED_GREETING_FILE = /home/pi/.local/lib/python3.7/site-packages/callattendant/resources/general_greeting.wav\n  SCREENED_RINGS_BEFORE_ANSWER = 0\n  SCREENING_MODE = ('whitelist', 'blacklist')\n  TESTING = False\n  VERSION = 1.1.0\n  VOICE_MAIL_GOODBYE_FILE = /home/pi/.local/lib/python3.7/site-packages/callattendant/resources/goodbye.wav\n  VOICE_MAIL_GREETING_FILE = /home/pi/.local/lib/python3.7/site-packages/callattendant/resources/general_greeting.wav\n  VOICE_MAIL_INVALID_RESPONSE_FILE = /home/pi/.local/lib/python3.7/site-packages/callattendant/resources/invalid_response.wav\n  VOICE_MAIL_LEAVE_MESSAGE_FILE = /home/pi/.local/lib/python3.7/site-packages/callattendant/resources/please_leave_message.wav\n  VOICE_MAIL_MENU_FILE = /home/pi/.local/lib/python3.7/site-packages/callattendant/resources/voice_mail_menu.wav\n  VOICE_MAIL_MESSAGE_FOLDER = /home/pi/.callattendant/messages\nInitializing Modem\nOpening serial port\nLooking for modem on /dev/ttyACM0\n******* Conextant-based modem detected **********\nSerial port opened on /dev/ttyACM0\nModem initialized\n{MSG LED OFF}\nStarting the Flask webapp\nRunning the Flask server\nWaiting for call...\n * Serving Flask app \"userinterface.webapp\" (lazy loading)\n * Environment: production\n   WARNING: This is a development server. Do not use it in a production deployment.\n   Use a production WSGI server instead.\n * Debug mode: off\n\n```\n\nMake a few calls to yourself to test the service. The standard output will show the\nprogress of the calls. Then navigate to `http://<pi-address>|<pi-hostname>:5000` in a\nweb browser to checkout the web interface.\n\nPress `ctrl-c` to shutdown the system\n\n---\n\n### Web Interface\n#### URL: `http://<pi-address>|<pi-hostname>:5000`\nTo view the web interface, simply point your web browser to port `5000` on your Raspberry Pi.\nFor example, in your Raspberry Pi's browser, you can use:\n```\nhttp://localhost:5000/\n```\n\nSee the [User Guide](https://github.com/emxsys/callattendant/wiki/User-Guide) for more information.\n\n---\n\n### Configuration\nThe Call Attendant's behavior can be controlled by a configuration file. To override the default\nconfiguration, open the  the `~/.callattenant/app.cfg` and edit its contents.\n\n```bash\nnano ~/.callattendant/app.cfg\n```\n\nThen specify the configuration file and path on the command line, e.g.:\n```\ncallattendant --config app.cfg\n```\nSee the [Configuration](https://github.com/emxsys/callattendant/wiki/Home#configuration)\nsection in the project's wiki for more information.\n\n---\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://emxsys.github.io/callattendant/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "callattendant",
    "package_url": "https://pypi.org/project/callattendant/",
    "platform": "",
    "project_url": "https://pypi.org/project/callattendant/",
    "project_urls": {
      "Homepage": "https://emxsys.github.io/callattendant/"
    },
    "release_url": "https://pypi.org/project/callattendant/1.1.0/",
    "requires_dist": [
      "backports.functools-lru-cache (>=1.6.1)",
      "beautifulsoup4 (>=4.9.1)",
      "bs4 (>=0.0.1)",
      "click (>=7.1.2)",
      "colorzero (>=1.1)",
      "Flask (>=1.1.2)",
      "flask-paginate (>=0.6.0)",
      "future (>=0.18.2)",
      "gpiozero (>=1.5.1)",
      "iso8601 (>=0.1.12)",
      "itsdangerous (>=1.1.0)",
      "Jinja2 (>=2.11.2)",
      "lxml (>=4.5.2)",
      "MarkupSafe (>=1.1.1)",
      "pigpio (>=1.46)",
      "pygments",
      "pyserial (>=3.4)",
      "pytest (>=6.0.1)",
      "pytest-mock (>=3.3.1)",
      "PyYAML (>=5.3.1)",
      "RPi.GPIO (>=0.7.0)",
      "RPIO (>=0.10.0)",
      "soupsieve (>=1.9.6)",
      "Werkzeug (>=1.0.1)"
    ],
    "requires_python": ">=3.5",
    "summary": "An automated call attendant and call blocker using a Raspberry Pi and USR-5637 modem",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8675571,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a90b5816a15f1913dd917494049f72ae5fb167aa4e1edab2f4212fc7940b814",
          "md5": "4d822e75f935cfb3fa1070af5866c352",
          "sha256": "8c6fe319bac0c08cb4c0a6b004b581011dfb7d2d296663088e689341a0ec0c00"
        },
        "downloads": -1,
        "filename": "callattendant-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d822e75f935cfb3fa1070af5866c352",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 205780,
        "upload_time": "2020-08-24T01:53:28",
        "upload_time_iso_8601": "2020-08-24T01:53:28.994470Z",
        "url": "https://files.pythonhosted.org/packages/5a/90/b5816a15f1913dd917494049f72ae5fb167aa4e1edab2f4212fc7940b814/callattendant-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75b6185203eae49080f574f11ce965a77c7d2fe05a9bb9016d966a482dd3b710",
          "md5": "9ad990b004096e957c9f56b488d5337b",
          "sha256": "a1393bb7d62728a8e97ac70bc070f36d21d1a9561e7813ad39b6e525c08a0967"
        },
        "downloads": -1,
        "filename": "callattendant-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9ad990b004096e957c9f56b488d5337b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 141648,
        "upload_time": "2020-08-24T01:53:31",
        "upload_time_iso_8601": "2020-08-24T01:53:31.412124Z",
        "url": "https://files.pythonhosted.org/packages/75/b6/185203eae49080f574f11ce965a77c7d2fe05a9bb9016d966a482dd3b710/callattendant-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4076a7c376a61eb8014c980d10f20b00635938943850ddc42d261ce622ff5d3",
          "md5": "d879a6132c8b20cd8b49ed2c4e8f8c73",
          "sha256": "e7f8a8e2c0eb39997e2d5968a4f6ba138e6bcc508bb8228ca35e6c2b39ec8846"
        },
        "downloads": -1,
        "filename": "callattendant-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d879a6132c8b20cd8b49ed2c4e8f8c73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 209054,
        "upload_time": "2020-09-02T00:56:27",
        "upload_time_iso_8601": "2020-09-02T00:56:27.305893Z",
        "url": "https://files.pythonhosted.org/packages/e4/07/6a7c376a61eb8014c980d10f20b00635938943850ddc42d261ce622ff5d3/callattendant-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c28e7ce26a90fd5bba9032097e08e676b634c217626393f3f0b6c3138673c7a2",
          "md5": "b2b691e7d414a7d650c50f58a8587d67",
          "sha256": "ba2e5273cc20330f2be33f7b4afb97cc5a37c1dd5adf9c5e853dc80f0ec5c613"
        },
        "downloads": -1,
        "filename": "callattendant-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b2b691e7d414a7d650c50f58a8587d67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 144531,
        "upload_time": "2020-09-02T00:56:28",
        "upload_time_iso_8601": "2020-09-02T00:56:28.774798Z",
        "url": "https://files.pythonhosted.org/packages/c2/8e/7ce26a90fd5bba9032097e08e676b634c217626393f3f0b6c3138673c7a2/callattendant-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d501362a3f535167d49f36343c80d825d46598f268a1726e8b1a70517244f420",
          "md5": "abc4a2c7cfdb1edfcb16fd3b1bbb2c54",
          "sha256": "c64a9e3df939c09c7bac225c504f850bcf253dc3a88e03f52faf58f0295d014e"
        },
        "downloads": -1,
        "filename": "callattendant-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "abc4a2c7cfdb1edfcb16fd3b1bbb2c54",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 215192,
        "upload_time": "2020-11-17T01:01:36",
        "upload_time_iso_8601": "2020-11-17T01:01:36.186151Z",
        "url": "https://files.pythonhosted.org/packages/d5/01/362a3f535167d49f36343c80d825d46598f268a1726e8b1a70517244f420/callattendant-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed24f39361be80bf7313530a436311a689cce2eb09c7b5d2eab3feefea4f7eed",
          "md5": "e2091d2c31ee48f32a00e153e8fc02d5",
          "sha256": "efcaa76245aa23290c811a5da14eaa40e5164d8ed9c32580a6ebdc35b22e5692"
        },
        "downloads": -1,
        "filename": "callattendant-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e2091d2c31ee48f32a00e153e8fc02d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 150947,
        "upload_time": "2020-11-17T01:01:38",
        "upload_time_iso_8601": "2020-11-17T01:01:38.918374Z",
        "url": "https://files.pythonhosted.org/packages/ed/24/f39361be80bf7313530a436311a689cce2eb09c7b5d2eab3feefea4f7eed/callattendant-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d501362a3f535167d49f36343c80d825d46598f268a1726e8b1a70517244f420",
        "md5": "abc4a2c7cfdb1edfcb16fd3b1bbb2c54",
        "sha256": "c64a9e3df939c09c7bac225c504f850bcf253dc3a88e03f52faf58f0295d014e"
      },
      "downloads": -1,
      "filename": "callattendant-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "abc4a2c7cfdb1edfcb16fd3b1bbb2c54",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 215192,
      "upload_time": "2020-11-17T01:01:36",
      "upload_time_iso_8601": "2020-11-17T01:01:36.186151Z",
      "url": "https://files.pythonhosted.org/packages/d5/01/362a3f535167d49f36343c80d825d46598f268a1726e8b1a70517244f420/callattendant-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed24f39361be80bf7313530a436311a689cce2eb09c7b5d2eab3feefea4f7eed",
        "md5": "e2091d2c31ee48f32a00e153e8fc02d5",
        "sha256": "efcaa76245aa23290c811a5da14eaa40e5164d8ed9c32580a6ebdc35b22e5692"
      },
      "downloads": -1,
      "filename": "callattendant-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e2091d2c31ee48f32a00e153e8fc02d5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 150947,
      "upload_time": "2020-11-17T01:01:38",
      "upload_time_iso_8601": "2020-11-17T01:01:38.918374Z",
      "url": "https://files.pythonhosted.org/packages/ed/24/f39361be80bf7313530a436311a689cce2eb09c7b5d2eab3feefea4f7eed/callattendant-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}