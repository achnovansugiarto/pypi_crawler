{
  "info": {
    "author": "WANG Ruohan",
    "author_email": "ruohawang2-c@my.cityu.edu.hk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# SCOIT\nSCOIT is an implementation of a probabilistic tensor decomposition framework for single-cell multi-omics data integration. SCOIT accepts the input of datasets from multiple omics, with missing values allowed.\n\n![image](https://github.com/deepomicslab/SCOIT/blob/main/framework.png)\n\n# Getting started\n\n## Prerequisite\n+ numpy\n+ pytorch 1.9.0\n\n## Install\n```\npip install SCOIT\n```\n\n## Examples\nThis is an example of multiple datasets when features have corresponding information.\n```Python\nfrom scoit import sc_multi_omics\n\ndata = np.array([expression_data, methylation_data])\nsc_model = sc_multi_omics()\npredict_data = sc_model.fit(data) # the imputed data\nnp.savetxt(\"global_cell_embeddings.csv\", sc_model.C, delimiter = ',') # global cell embeddings\nnp.savetxt(\"global_gene_embeddings.csv\", sc_model.G, delimiter = ',') # global gene embeddings\nnp.savetxt(\"local_cell_embeddings.csv\", sc_model.C, delimiter = ',') # omics-specific cell embeddings\nnp.savetxt(\"local_gene_embeddings.csv\", sc_model.G, delimiter = ',') # omics-specific gene embeddings\n\n# imputation\nimputed_expression_data = predict_data[0]\nimputed_methylation_data = predict_data[1]\n```\nWhen the features of different omics do not have corresponding information, please use the ```fit_list``` function, which accepts the input as a list of matrices.\n```Python\nfrom scoit import sc_multi_omics\n\ndata = [expression_data, protein_data]\nsc_model = sc_multi_omics()\npredict_data = sc_model.fit_list(data)\n```\nIf the input does not contain missing values (\"NA\"), we provide ```fit_complete``` and ```fit_list_complete``` functions to accelerate the optimization since they take advantage of matrix operations.\n```Python\nfrom scoit import sc_multi_omics\n\ndata = np.array([expression_data, methylation_data])\nsc_model = sc_multi_omics()\npredict_data = sc_model.fit_complete(data) # the imputed data\n```\n```Python\nfrom scoit import sc_multi_omics\n\ndata = [expression_data, protein_data]\nsc_model = sc_multi_omics()\npredict_data = sc_model.fit_list_complete(data)\n```\n\nWe put the complete scripts for the analysis described in the manuscript under ```examples/``` directory for detailed usage examples and reproduction. The example data can be downloaded from [Google Drive](https://drive.google.com/drive/folders/1F_WBwNsHggjTqgFfTm6IugNKpb0xJTje?usp=sharing).\n\n## Parameters\n###  ```sc_multi_omics```\n> + ```K1```: The local element-wise product parameter, see the manuscript for details (default=20).\n> + ```K2```: The local element-wise product parameter (default=20).\n> + ```K3```: The local element-wise product parameter (default=20).\n> + ```random_seed```: The random seed used in optimization (default=111).\n\n###  ```fit```\n> + ```opt```: The optimization algorithm for gradient descent, including SGD, Adam, Adadelta, Adagrad, AdamW, SparseAdam, Adamax, ASGD, LBFGS (default=\"Adam\").\n> + ```dist```:The distribution used for modeling, including gaussian, poisson, negative_bionomial (default=\"gaussian\").\n> + ```lr```: The learning rate for gradient descent (default=1e-2).\n> + ```n_epochs```: The number of optimization epochs (default=1000).\n> + ```lambda_C_regularizer```: The coefficient for the penalty term of global cell embeddings (default=0.01).\n> + ```lambda_G_regularizer```: The coefficient for the penalty term of global gene embeddings (default=0.01).\n> + ```lambda_O_regularizer```: The coefficient list for the penalty term of global omics embeddings; the length of the list should be the same with the number of omics (default=[0.01, 0.01]).\n> + ```lambda_OC_regularizer```: The coefficient list for the penalty term of omics-specific cell embeddings; the length of the list should be the same with the number of omics, not avaiable for complete functions (default=[1, 1]).\n> + ```lambda_OG_regularizer```: The coefficient list for the penalty term of omics-specific gene embeddings, the length of the list should be the same with the number of omics, not avaiable for list functions (default=[1, 1]).\n> + ```batch_size```: The batch size used for gradient descent, not avaiable for complete functions (default=1000).\n> + ```device```: CPU or GPU (default='cuda' if torch.cuda.is_available() else 'cpu').\n> + ```verbose```: Whether to print loss for each epoch (default=True).\n\n### Maintainer\nWANG Ruohan ruohawang2-c@my.cityu.edu.hk\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/deepomicslab/SCOIT",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SCOIT",
    "package_url": "https://pypi.org/project/SCOIT/",
    "platform": null,
    "project_url": "https://pypi.org/project/SCOIT/",
    "project_urls": {
      "Homepage": "https://github.com/deepomicslab/SCOIT"
    },
    "release_url": "https://pypi.org/project/SCOIT/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "SCOIT is an implementation of a probabilistic tensor decomposition framework for single-cell multi-omics data integration.",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15166982,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e01db8024aae7a1bcab6bce70e33cd31ac27cf0afa7dfb97f490d0f91b73b36e",
          "md5": "e98a58bb2379e7c0f67ccb9ebc215e86",
          "sha256": "3f6bdec36ad93154b0b09c7a1ac24daf2872256be1677b090e3388e012539e71"
        },
        "downloads": -1,
        "filename": "SCOIT-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e98a58bb2379e7c0f67ccb9ebc215e86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5935,
        "upload_time": "2022-07-31T03:15:34",
        "upload_time_iso_8601": "2022-07-31T03:15:34.651637Z",
        "url": "https://files.pythonhosted.org/packages/e0/1d/b8024aae7a1bcab6bce70e33cd31ac27cf0afa7dfb97f490d0f91b73b36e/SCOIT-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3beba4fb3b477d7f9c89d1d0fae77d0913b0955e9b3f6553844c488359ac1800",
          "md5": "24bdab2db90ba2dbe3bb2bff53879126",
          "sha256": "c082504c4ee17ac42f213baeec86cfcbe012e86bd8bda48789b4e30b5166eecf"
        },
        "downloads": -1,
        "filename": "SCOIT-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "24bdab2db90ba2dbe3bb2bff53879126",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6503,
        "upload_time": "2022-09-21T15:05:49",
        "upload_time_iso_8601": "2022-09-21T15:05:49.782183Z",
        "url": "https://files.pythonhosted.org/packages/3b/eb/a4fb3b477d7f9c89d1d0fae77d0913b0955e9b3f6553844c488359ac1800/SCOIT-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cd2aa80ac7c492ac2d4f7aee585d535bc61d6fc18a1ccee07ae0050f150f135",
          "md5": "c4c3a5d127a02893a0986eb18ecc4171",
          "sha256": "79a4c1f17888bc8abc1ebecdebff1317fc693db5895b9752e7e0210a8c5ac080"
        },
        "downloads": -1,
        "filename": "SCOIT-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c4c3a5d127a02893a0986eb18ecc4171",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6492,
        "upload_time": "2022-09-21T15:14:11",
        "upload_time_iso_8601": "2022-09-21T15:14:11.486935Z",
        "url": "https://files.pythonhosted.org/packages/8c/d2/aa80ac7c492ac2d4f7aee585d535bc61d6fc18a1ccee07ae0050f150f135/SCOIT-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8cd2aa80ac7c492ac2d4f7aee585d535bc61d6fc18a1ccee07ae0050f150f135",
        "md5": "c4c3a5d127a02893a0986eb18ecc4171",
        "sha256": "79a4c1f17888bc8abc1ebecdebff1317fc693db5895b9752e7e0210a8c5ac080"
      },
      "downloads": -1,
      "filename": "SCOIT-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "c4c3a5d127a02893a0986eb18ecc4171",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6492,
      "upload_time": "2022-09-21T15:14:11",
      "upload_time_iso_8601": "2022-09-21T15:14:11.486935Z",
      "url": "https://files.pythonhosted.org/packages/8c/d2/aa80ac7c492ac2d4f7aee585d535bc61d6fc18a1ccee07ae0050f150f135/SCOIT-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}