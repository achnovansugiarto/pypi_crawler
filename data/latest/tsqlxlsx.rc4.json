{
  "info": {
    "author": "bgovi (Brandon Govindarajoo)",
    "author_email": "<bgovi@umich.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# Overview\nThis package is used to convert data from .csv, .xlsx and .xls into corresponing\ninsert, update, delete commands in a .sql file. This module alos has utility functions\nfor running sql queries and output the data into .csv, .xlsx, and .xls.\n\nThe package can be ran at the command line or the libraries can be imported within\npython. This is mainly a wrapper around pyobc and pandas for connecting local data files\nto a sql server databse.\n\nhelp: will print available command line arguments\n```shell\npython -m tsqlxlsx -h\n```\n\n\n# Print Available Drivers for pyodbc\n```shell\npython -m tsqlxlsx --ld\n```\n\nCommon Sql Drivers:\n1. \"ODBC Driver 13 for SQL Server\"\n2. \"ODBC Driver 17 for SQL Server\"\n\n# Sql Server Drivers\nSQL Drivers can be found at: These are the executables for connecting to sql server and are required to used this module.\nhttps://docs.microsoft.com/en-us/sql/connect/odbc/windows/release-notes-odbc-sql-server-windows?view=sql-server-ver15#previous-releases\n\n# Supported File Extensions \nIf .sql extension is used module assumes it contains commands to run and no further processing is done. other extenisons are used as output\nfiles or used to pull the arguments for the sql commands to be generated.\n\n## -f flag\n1. .xlsx\n2. .xls\n3. .sql\n4. .csv\n## -o flag\n1. .xlsx\n2. .xls\n3. .csv\n\n# Example Commands\n## General:\n```shell\npython -m tsqlxlsx -u username -p password -f /pathToFile/example.xlsx -odir /pathWhereFileDataIsStoredAsSqlCommands/ -ctype i -pyodbc_driver \"ODBC Driver 13 for SQL Server\"\n```\n\n## VPN (Doesnt require username or password):\n```shell\npython -m tsqlxlsx -f /pathToFile/example.xlsx -odir /pathWhereFileDataIsStoredAsSqlCommands/ -ctype d where_fieds id -pyodbc_driver \"ODBC Driver 13 for SQL Server\"\npython -m tsqlxlsx -f /pathToFile/example.xlsx -odir /pathWhereFileDataIsStoredAsSqlCommands/ -ctype u where_fieds id set_fields column_x -pyodbc_driver \"ODBC Driver 13 for SQL Server\"\n\npython -m tsqlxlsx -f /pathToFile/example.sql -o /filePathToOutput/outptut.csv -ctype u where_fieds id set_fields column_x -pyodbc_driver \"ODBC Driver 13 for SQL Server\"\npython -m tsqlxlsx -f /pathToFile/example.sql -o /filePathToOutput/outptut.xlsx -ctype u where_fieds id set_fields column_x -pyodbc_driver \"ODBC Driver 13 for SQL Server\"\n```\n\n## Command Line Query\n```shell\npython -m tsqlxlsx -q \"SELECT 1\" -pyodbc_driver \"ODBC Driver 13 for SQL Server\" -o /filePathOut/output_file.csv\n```\n\n## Driver naming conventions for sql server:\n```shell\npython -m tsqlxlsx --ld\n```\n\n# Windows Command Line\n```bat\npython -m tsqlxlsx -f C:\\pathToFile\\example.sql -o C:\\filePathToOutput\\outptut.csv -ctype u where_fieds id set_fields column_x -pyodbc_driver \"ODBC Driver 13 for SQL Server\"\n```\n\n# ctype\nThis modules can create several sql server crud operations. The ctype command line or crud_type in the python module is used to\ndetermine how to convert the data file into a series of crud operations\n\n1. create_insert (-ctype ci):\n    * default operation. takes all columns from data files and runs a drop and create statement with the specified columns that default to varchar\n    * the values of the columns are added to the sql file as corresponding insert statements\n2. create (-ctype c)\n    * takes all columns from data files and creates an sql drop and create statement\n3. insert (-ctype i)\n    * the values of the columns are added to the sql file as corresponding insert statements. table name defaults to name of the file.\n    * change table name with -table_name new_table_name\n4. delete (-ctype d)\n    * delete rows based on condition. -where_fields col1 col2 col3\n    * the where_fields determine which columns in data file should be used to specify where condition. as where col1 = val1 and col2 = val2 and col3 = val3\n5. update (-ctype u)\n    * update rows based on where and set condition. -where_fields col1 col2 col3 -set_fields col4\n    * set col4 = col4_val where col1 = val1 and col2 = val2 and col3 = val3\n\n## Windows .bat file with Anaconda Distribution of Python:\nInstall anaconda distribution.\n\nRunning python commands in .bat files requires the anaconda enviornment to be imported. First search for anaconda command prompt in windows search bar\nRight click on the anaconda prompt and select \"open file location\"\nRight click on the anaconda prompt icon in folder directory and select properties. In the shortcut section copy and paste the string in target window\nThe target window will have the full path to activate.bat followed by a path to anaconda. Replace the string below with those values and \n\nexample.bat file\n```bat\nREM Command below sets environment for python\ncall C:\\Users\\{username}\\AppData\\Local\\Continuum\\anaconda3\\Scripts\\activate.bat C:\\Users\\{username}\\AppData\\Local\\Continuum\\anaconda3\n\nRem first argument is full path to anaconda python exectuable. this can be found in select properties of anaconda terminal\ncall C:\\Users\\{username}\\AppData\\Local\\Continuum\\anaconda3\\python -q \"SELECT 1\" -pyodbc_driver \"ODBC Driver 13 for SQL Server\"\n```\n\nexample.py\n```python\n#pip install tsqlxlsx\nfrom tsqlxlsx.data_loader import DataLoader\nfrom tsqlxlsx.tsql_connector import TsqlConnect\nfrom tsqlxlsx.sql_ddl import SqlDDL\n\n#Step 1. Fill values\nserver = 'server'\ndatabase ='database'\nusername = 'username'\npassword = \"password\"\nuse_trusted = False #set to true if on a vpn and dont require username/password or on a trusted server\n\n#Step: 2 create sql files\ninput_file_path = './file_path/ExampleData.xlsx' \nx = DataLoader(input_file_path )\ndf = x.LoadFile()\n\n\n\"\"\"\navailable crud_types\ncrud_type: create, create_insert, update, insert, delete\n\"\"\"\n\n#create sql for update\ntable_name  = \"ExampleData\"\ncrud_type = \"update\" #(other options are create, insert, update, delete)\nsql_file = \"./file_path/test/ExampleData\"  #sql file generated from df object SqlDDL will append extensions\nwhere_fields = ['id', 'department']\nset_fields   = ['Billing', 'Collections']\ncsqlx  = SqlDDL(df, table_name, crud_type, sql_file, where_fields = where_fields, set_fields=set_fields) #, column_types={\"id\":\"integer\"})\ncsqlx.CreateFiles()\n\n#create sql statements for create table and insert data\ntable_name  = \"ExampleData\"\nschema_name = \"schema_name\" #should be replaced\ncrud_type = \"create_insert\" #(other options are create, insert, update, delete)\nsql_file = \"./file_path/test/ExampleData2\"  #sql file generated from df object SqlDDL will append extensions\ncolumn_types = {'id': 'int'}\ncsqlx  = SqlDDL(df, schema_name, table_name, crud_type, sql_file,column_types=column_types) #, column_types={\"id\":\"integer\"})\ncsqlx.CreateFiles()\n\n#Step 3\n#loop throough all files created from csqlx.CreateFiles and send data to sql server\nfor sql_file in csqlx.sql_output_file_list:\n    tsqlx = TsqlConnect(server,database,  username = username,password =password, \n        useTrusted=use_trusted, pyodbcDriver =pyodbc_driver)\n    tname = pathlib.Path(sql_file).stem\n    print(sql_file)\n    tsqlx.Run(sql_file, is_file=True,verbose=verbose, output_file=\"\")\n\n\n#Alternative run sql statement direclty\nout_file = \"\" #optional path to output results\ntsqlx = TsqlConnect(server,database,  username = username,password =password, \n    useTrusted=use_trusted, pyodbcDriver =pyodbc_driver)\ntname = pathlib.Path(sql_file).stem\ntsqlx.Run(\"SELECT 1\", is_file=False,verbose=verbose, output_file=out_file)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,tsql,xlsx",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tsqlxlsx",
    "package_url": "https://pypi.org/project/tsqlxlsx/",
    "platform": "",
    "project_url": "https://pypi.org/project/tsqlxlsx/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/tsqlxlsx/1.0.2/",
    "requires_dist": [
      "pandas",
      "pyodbc"
    ],
    "requires_python": "",
    "summary": "Pip package for pushing files csv, xlsx to sql server",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13070190,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df074e2794a64fa98267ffa1129a62c5dc69b1582d48a690fed3e955adba17d5",
          "md5": "d6c50acc56ce44ec2e516d89ffc4172b",
          "sha256": "647af852c63e02414a53ef66b74d64122be663a837fca1d5b36cf7bdc9590654"
        },
        "downloads": -1,
        "filename": "tsqlxlsx-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d6c50acc56ce44ec2e516d89ffc4172b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16458,
        "upload_time": "2022-03-02T13:29:44",
        "upload_time_iso_8601": "2022-03-02T13:29:44.053941Z",
        "url": "https://files.pythonhosted.org/packages/df/07/4e2794a64fa98267ffa1129a62c5dc69b1582d48a690fed3e955adba17d5/tsqlxlsx-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e24c599e642b5a6eb2fde3c66c326067ccf4b63f1b054f82bfc8cf168da4313",
          "md5": "e3bb842c9c94e2486cf593667f11ed8b",
          "sha256": "aa9a1160dc710da4ecf9bfa282ebba57418d9a86bba9c4ae98b7414c19f4ced2"
        },
        "downloads": -1,
        "filename": "tsqlxlsx-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e3bb842c9c94e2486cf593667f11ed8b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15068,
        "upload_time": "2022-03-02T13:29:46",
        "upload_time_iso_8601": "2022-03-02T13:29:46.074774Z",
        "url": "https://files.pythonhosted.org/packages/0e/24/c599e642b5a6eb2fde3c66c326067ccf4b63f1b054f82bfc8cf168da4313/tsqlxlsx-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea35a51a23687c8581d724f94f94d252bdd7dd41a8353512c5b19e930dc594d2",
          "md5": "67c178d3b12c95bf5c560421271258b0",
          "sha256": "71dcafa14be19a43b0699464089535ca40dbe466aaf6935cb1f1c302caa002cd"
        },
        "downloads": -1,
        "filename": "tsqlxlsx-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "67c178d3b12c95bf5c560421271258b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16731,
        "upload_time": "2022-03-02T14:35:47",
        "upload_time_iso_8601": "2022-03-02T14:35:47.547734Z",
        "url": "https://files.pythonhosted.org/packages/ea/35/a51a23687c8581d724f94f94d252bdd7dd41a8353512c5b19e930dc594d2/tsqlxlsx-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d7f2ee1ec887ec07eca63d720f1f2391c90eb91ee8c6a0ef80ca2af9548832b",
          "md5": "15b8383076a449ff6f8ad9b8e7591252",
          "sha256": "6ba596c86395ea85ec27ef3b3f4fdab7c3480e16b0cae4e3ef80e884f3a32a00"
        },
        "downloads": -1,
        "filename": "tsqlxlsx-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "15b8383076a449ff6f8ad9b8e7591252",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15367,
        "upload_time": "2022-03-02T14:35:49",
        "upload_time_iso_8601": "2022-03-02T14:35:49.137812Z",
        "url": "https://files.pythonhosted.org/packages/9d/7f/2ee1ec887ec07eca63d720f1f2391c90eb91ee8c6a0ef80ca2af9548832b/tsqlxlsx-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7a23d332b136b75ec6542f93211659066df9be138bdfa63d3452ca35ed4d2ab",
          "md5": "baba7e951f9662b8ce32af1400590985",
          "sha256": "13a91c43c4eb0049330a1b2913e86695f6eebb2ae757e6c31b3b557d8a74ad0c"
        },
        "downloads": -1,
        "filename": "tsqlxlsx-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "baba7e951f9662b8ce32af1400590985",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18926,
        "upload_time": "2022-03-02T20:59:13",
        "upload_time_iso_8601": "2022-03-02T20:59:13.970349Z",
        "url": "https://files.pythonhosted.org/packages/a7/a2/3d332b136b75ec6542f93211659066df9be138bdfa63d3452ca35ed4d2ab/tsqlxlsx-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26557ead4af90e108f965b46beddd6a3e2713b9dec8afbd093ad8bb1e0ae4f8e",
          "md5": "aaa5db975e30babe1318e20f8422d590",
          "sha256": "1ef6a3918ccd510f67212a91689775705c1a5500f5eade418b782f878ef29b1f"
        },
        "downloads": -1,
        "filename": "tsqlxlsx-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aaa5db975e30babe1318e20f8422d590",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18720,
        "upload_time": "2022-03-02T20:59:15",
        "upload_time_iso_8601": "2022-03-02T20:59:15.997451Z",
        "url": "https://files.pythonhosted.org/packages/26/55/7ead4af90e108f965b46beddd6a3e2713b9dec8afbd093ad8bb1e0ae4f8e/tsqlxlsx-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fadf3cce18c818719358cabccdeee15e0e32b35d5fd4c362ff8357372eaeff14",
          "md5": "09d5e062626e7b5a89e9e0702b6eeb42",
          "sha256": "b5efac53f4a030b5c4448e0f5ae3e97df8c57f190f5cb23c94da25ecfaab2f22"
        },
        "downloads": -1,
        "filename": "tsqlxlsx-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09d5e062626e7b5a89e9e0702b6eeb42",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19341,
        "upload_time": "2022-03-03T15:32:29",
        "upload_time_iso_8601": "2022-03-03T15:32:29.424500Z",
        "url": "https://files.pythonhosted.org/packages/fa/df/3cce18c818719358cabccdeee15e0e32b35d5fd4c362ff8357372eaeff14/tsqlxlsx-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46789b93bb13aad7b09c8f3c32e3fcea8b4d8606ef4c9c99f6d932da07a58811",
          "md5": "5ea209188046f4cdb39e30b4f91ea754",
          "sha256": "8bf7aa8288c229b187b9183b6c673b010a3c2635d2061685c189e3a1487aecbc"
        },
        "downloads": -1,
        "filename": "tsqlxlsx-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5ea209188046f4cdb39e30b4f91ea754",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19448,
        "upload_time": "2022-03-03T15:32:30",
        "upload_time_iso_8601": "2022-03-03T15:32:30.831062Z",
        "url": "https://files.pythonhosted.org/packages/46/78/9b93bb13aad7b09c8f3c32e3fcea8b4d8606ef4c9c99f6d932da07a58811/tsqlxlsx-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fadf3cce18c818719358cabccdeee15e0e32b35d5fd4c362ff8357372eaeff14",
        "md5": "09d5e062626e7b5a89e9e0702b6eeb42",
        "sha256": "b5efac53f4a030b5c4448e0f5ae3e97df8c57f190f5cb23c94da25ecfaab2f22"
      },
      "downloads": -1,
      "filename": "tsqlxlsx-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "09d5e062626e7b5a89e9e0702b6eeb42",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19341,
      "upload_time": "2022-03-03T15:32:29",
      "upload_time_iso_8601": "2022-03-03T15:32:29.424500Z",
      "url": "https://files.pythonhosted.org/packages/fa/df/3cce18c818719358cabccdeee15e0e32b35d5fd4c362ff8357372eaeff14/tsqlxlsx-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "46789b93bb13aad7b09c8f3c32e3fcea8b4d8606ef4c9c99f6d932da07a58811",
        "md5": "5ea209188046f4cdb39e30b4f91ea754",
        "sha256": "8bf7aa8288c229b187b9183b6c673b010a3c2635d2061685c189e3a1487aecbc"
      },
      "downloads": -1,
      "filename": "tsqlxlsx-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5ea209188046f4cdb39e30b4f91ea754",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19448,
      "upload_time": "2022-03-03T15:32:30",
      "upload_time_iso_8601": "2022-03-03T15:32:30.831062Z",
      "url": "https://files.pythonhosted.org/packages/46/78/9b93bb13aad7b09c8f3c32e3fcea8b4d8606ef4c9c99f6d932da07a58811/tsqlxlsx-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}