{
  "info": {
    "author": "Victor Zhong",
    "author_email": "victor@victorzhong.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SILG\n\nThis repository contains source code for the Situated Interactive Language Grounding (SILG) benchmark.\nIf you find this work helpful, please consider citing this work:\n\n```\n@inproceedings{ zhong2021silg,\n  title={ {SILG}: The Multi-environment Symbolic InteractiveLanguage Grounding Benchmark },\n  author={ Victor Zhong and Austin W. Hanjie and Karthik Narasimhan and Luke Zettlemoyer },\n  booktitle={ NeurIPS },\n  year={ 2021 }\n}\n```\n\nPlease also consider citing the individual tasks included in SILG.\nThey are [RTFM](https://arxiv.org/abs/1910.08210), [Messenger](https://arxiv.org/abs/2101.07393), [NetHack Learning Environment](https://arxiv.org/abs/2006.13760), [AlfWorld](https://arxiv.org/abs/2010.03768), and [Touchdown](https://arxiv.org/abs/1811.12354).\n\n\n### RTFM\n\n![RTFM](recordings/rtfm.gif)\n\n### Messenger\n![Messenger](recordings/msgr.gif)\n\n### SILGNethack\n![SILGNethack](recordings/nethack.gif)\n\n### ALFWorld\n![ALFWorld](recordings/alfworld.gif)\n\n### SILGSymTouchdown\n![SILGSymTouchdown](recordings/touchdown.gif)\n\n\n## How to install\n\nYou have to install the individual environments in order for SILG to work.\nThe GitHub repository for each environment are found at\n\n- [RTFM](https://github.com/facebookresearch/RTFM)\n- [Messenger](https://github.com/ahjwang/messenger-emma/) \n- [NetHack](https://github.com/facebookresearch/nle)\n- [Alfworld](https://github.com/alfworld/alfworld)\n- Sym and VisTouchdown are included in this repository\n\nOur dockerfile also provides an example of how to install the environments in Ubuntu.\nYou can also try using our `install_envs.sh`, which has only been tested in Ubuntu and MacOS.\n\n```\nbash install_envs.sh\n```\n\n\nOnce you have installed the individual environments, install SILG as follows\n\n```\npip install -r requirements.txt\npip install -e .\n```\n\nSome environments have (potentially a large quantity of) data files. Please download these via\n\n```\nbash download_env_data.sh  # if you do not want to use VisTouchdown, feel free to comment out its very large feature file\n```\n\nAs a part of this download, we will symlink a `./cache` directory from `./mycache`.\nSILG environments will pull data files from this directory.\nIf you are on NFS, you might want to move `mycache` to local disk and then relink the `cache` directory to avoid hitting NFS.\n\n\n## Docker\n\nWe provide a Docker container for this project.\nYou can build the Docker image via `docker build -t vzhong/silg . -f docker/Dockerfile`.\nAlternatively you can pull my build from `docker pull vzhong/silg`.\nThis contains the environments as well as SILG, but doesn't contain the large data download.\nYou will still have to download the environment data and then mount the cache folder to the container.\nYou may need to specify `--platform linux/amd64` to Docker if you are running a M1 Mac.\n\nBecause some of the environments require that you install them first before downloading their data files, you want to download using the Docker container as well.\nYou can do\n\n```\ndocker run --rm --user \"$(id -u):$(id -g)\" -v $PWD/download_env_data.sh:/opt/silg/download_env_data.sh -v $PWD/mycache:/opt/silg/cache vzhong/silg bash download_env_data.sh\n```\n\nOnce you have downloaded the environment data, you can use the container by doing something like\n\n```\ndocker run --rm --user \"$(id -u):$(id -g)\" -it -v $PWD/mycache:/opt/silg/cache vzhong/silg /bin/bash\n```\n\n\n## Visualizing environments\n\nWe provide a script to play SILG environments in the terminal.\nYou can access it via\n\n```\nsilg_play --env silg:rtfm_train_s1-v0  # use -h to see options\n\n# docker variant\ndocker run --rm -it -v $PWD/mycache:/opt/silg/cache vzhong/silg silg_play --env silg:rtfm_train_s1-v0\n```\n\nThese recordings are shown at the start of this document and are created using [asciinema](https://github.com/asciinema/asciinema).\n\n\n## How to run experiments\n\nThe entrypoint to experiments is `run_exp.py`.\nWe provide a slurm script to run experiments in `launch.py`.\nThese scripts can also run jobs locally (e.g. without slurm).\nFor example, to run RTFM:\n\n```\npython launch.py --local --envs rtfm\n```\n\nYou can also log to WanDB with the `--wandb` option.\nFor more, use the `-h` flag.\n\n\n# How to add a new environment\n\nFirst, create a wrapper class in `silg/envs/<your env>.py`.\nThis wrapper will wrap the real environment and provide APIs used by the baseline models and the training script.\n`silg/envs/rtfm.py` contains an example of how to do this for RTFM.\nOnce you have made the wrapper, don't forget to include its file in `silg/envs/__init__.py`.\n\nThe wrapper class must subclass `silg.envs.base.SILGEnv` and implement:\n\n```\n# return the list of text fields in the observation space\ndef get_text_fields(self):\n    ...\n\n# return max number of actions\ndef get_max_actions(self):\n    ...\n\n# return observation space\ndef get_observation_space(self):\n    ...\n\n# resets the environment\ndef my_reset(self):\n    ...\n\n# take a step in the environment\ndef my_step(self, action):\n    ...\n```\n\nAdditionally, you may want to implemnt rendering functions such as `render_grid`, `parse_user_action`, and `get_user_actions` so that it can be played with `silg_play`.\n\n**Note** There is an implementation detail right now in that the Torchbeast code considers a \"win\" to be equivalent to the environment returning a reward `>0.8`. We hope to change this in the future (likely by adding another tensor field denoting win state) but please keep this in mind when implementing your environment. You likely want to keep the reward between -1 and +1, which high rewards >0.8 reserved for winning if you would like to use the training code as-is.\n\n\n## Changelog\n\n### Version 1.0\n\nInitial release.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vzhong/silg",
    "keywords": "text nlp machine-learning",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "silg",
    "package_url": "https://pypi.org/project/silg/",
    "platform": "",
    "project_url": "https://pypi.org/project/silg/",
    "project_urls": {
      "Homepage": "https://github.com/vzhong/silg"
    },
    "release_url": "https://pypi.org/project/silg/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7.10",
    "summary": "Situated Interative Language Grounding Benchmark.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11775678,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "077d8536e67fb12304d079dbb8fcf149d291fa41c0e939b19b0ead96bcbaea04",
          "md5": "8027fde6974be3fd64df957c24cebe1d",
          "sha256": "cfcd15d4978ca753bd906f2066a2d30b2b0b63388c9347a495f0abaa4c2e6a45"
        },
        "downloads": -1,
        "filename": "silg-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8027fde6974be3fd64df957c24cebe1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.10",
        "size": 7128,
        "upload_time": "2021-10-20T00:36:45",
        "upload_time_iso_8601": "2021-10-20T00:36:45.397012Z",
        "url": "https://files.pythonhosted.org/packages/07/7d/8536e67fb12304d079dbb8fcf149d291fa41c0e939b19b0ead96bcbaea04/silg-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "077d8536e67fb12304d079dbb8fcf149d291fa41c0e939b19b0ead96bcbaea04",
        "md5": "8027fde6974be3fd64df957c24cebe1d",
        "sha256": "cfcd15d4978ca753bd906f2066a2d30b2b0b63388c9347a495f0abaa4c2e6a45"
      },
      "downloads": -1,
      "filename": "silg-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8027fde6974be3fd64df957c24cebe1d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.10",
      "size": 7128,
      "upload_time": "2021-10-20T00:36:45",
      "upload_time_iso_8601": "2021-10-20T00:36:45.397012Z",
      "url": "https://files.pythonhosted.org/packages/07/7d/8536e67fb12304d079dbb8fcf149d291fa41c0e939b19b0ead96bcbaea04/silg-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}