{
  "info": {
    "author": "James Kennington",
    "author_email": "jwkennington@psu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: MacOS",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# General Relativity Symbolic Utilities\n\n[![PyPI version](https://img.shields.io/pypi/v/pystein)](https://pypi.org/project/pystein/)\n[![PyPI downloads](https://img.shields.io/pypi/dm/pystein)](https://pypi.org/project/pystein/)\n[![PyPI versions](https://img.shields.io/pypi/pyversions/pystein)](https://pypi.org/project/pystein/)\n[![Build](https://github.com/JWKennington/pynstein/actions/workflows/build.yml/badge.svg)](https://github.com/JWKennington/pynstein/actions/workflows/build.yml)\n[![CodeFactor](https://www.codefactor.io/repository/github/jwkennington/pystein/badge)](https://www.codefactor.io/repository/github/jwkennington/pystein)\n[![codecov](https://codecov.io/gh/JWKennington/pynstein/branch/main/graph/badge.svg?token=2XRgGH05zb)](https://codecov.io/gh/JWKennington/pynstein)\n[![License](https://img.shields.io/pypi/l/pystein?color=magenta)](https://pypi.org/project/pystein/)\n\n\nThe `pystein` package contains utilities for computing symbolic utilities for computing various \nquantities that arise in general relativity. Presently, this package is essentially a `sympy` extension that computes \ncomponents of tensors directly.\n\n\n## Symbolic Tools\n\nThe `pystein` package makes use of `sympy` to compute symbolic curvature equations (EFE).\n\n### Example Computation: FLRW Cosmology\n\n```python\n# Load the predefined FLRW metric\nfrom pystein import metric, gravity\nfrom pystein import utilities\n\nflrw = metric.flrw().subs({'c': 1})\nflrw\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;-&space;c^{2}&space;\\operatorname{d}t&space;\\otimes&space;\\operatorname{d}t&space;&plus;&space;a^{2}{\\left(t&space;\\right)}&space;\\left(\\operatorname{d}x&space;\\otimes&space;\\operatorname{d}x&space;&plus;&space;\\operatorname{d}y&space;\\otimes&space;\\operatorname{d}y&space;&plus;&space;\\operatorname{d}z&space;\\otimes&space;\\operatorname{d}z\\right)\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;-&space;c^{2}&space;\\operatorname{d}t&space;\\otimes&space;\\operatorname{d}t&space;&plus;&space;a^{2}{\\left(t&space;\\right)}&space;\\left(\\operatorname{d}x&space;\\otimes&space;\\operatorname{d}x&space;&plus;&space;\\operatorname{d}y&space;\\otimes&space;\\operatorname{d}y&space;&plus;&space;\\operatorname{d}z&space;\\otimes&space;\\operatorname{d}z\\right)\" title=\"\\large \\displaystyle - c^{2} \\operatorname{d}t \\otimes \\operatorname{d}t + a^{2}{\\left(t \\right)} \\left(\\operatorname{d}x \\otimes \\operatorname{d}x + \\operatorname{d}y \\otimes \\operatorname{d}y + \\operatorname{d}z \\otimes \\operatorname{d}z\\right)\" /></a>\n<!-- $\\displaystyle - c^{2} \\operatorname{d}t \\otimes \\operatorname{d}t + a^{2}{\\left(t \\right)} \\left(\\operatorname{d}x \\otimes \\operatorname{d}x + \\operatorname{d}y \\otimes \\operatorname{d}y + \\operatorname{d}z \\otimes \\operatorname{d}z\\right)$ -->\n\n```python\nefe_00 = utilities.full_simplify(gravity.einstein_equation(0, 0, flrw))\nefe_00\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;\\frac{3&space;\\left(\\frac{d}{d&space;t}&space;a{\\left(t&space;\\right)}\\right)^{2}}{a^{2}{\\left(t&space;\\right)}}&space;=&space;0\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;\\frac{3&space;\\left(\\frac{d}{d&space;t}&space;a{\\left(t&space;\\right)}\\right)^{2}}{a^{2}{\\left(t&space;\\right)}}&space;=&space;0\" title=\"\\large \\displaystyle \\frac{3 \\left(\\frac{d}{d t} a{\\left(t \\right)}\\right)^{2}}{a^{2}{\\left(t \\right)}} = 0\" /></a>\n<!-- $\\displaystyle \\frac{3 \\left(\\frac{d}{d t} a{\\left(t \\right)}\\right)^{2}}{a^{2}{\\left(t \\right)}} = 0$ -->\n\n```python\n# Can simplify notation using \"dots\"\nmetric.simplify_deriv_notation(efe_00, flrw, use_dots=True)\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;\\frac{3&space;\\dot{a}^{2}{\\left(t&space;\\right)}}{a^{2}{\\left(t&space;\\right)}}&space;=&space;0\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;\\frac{3&space;\\dot{a}^{2}{\\left(t&space;\\right)}}{a^{2}{\\left(t&space;\\right)}}&space;=&space;0\" title=\"\\large \\displaystyle \\frac{3 \\dot{a}^{2}{\\left(t \\right)}}{a^{2}{\\left(t \\right)}} = 0\" /></a>\n<!-- $\\displaystyle \\frac{3 \\dot{a}^{2}{\\left(t \\right)}}{a^{2}{\\left(t \\right)}} = 0$ -->\n\n# Symbolic Tools\n\n## Coordinate Systems\n\n```python\nfrom sympy.diffgeom import Manifold, Patch\nfrom pystein import coords\n```\n\n```python\n# The pystein CoordinateSystem extends the sympy.diffgeom api to make parameters more accessible\nM = Manifold('M', dim=2)\nP = Patch('origin', M)\ncs = coords.CoordSystem('cartesian', P, ['x', 'y'])\ncs\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;\\text{cartesian}^{\\text{origin}}_{\\text{M}}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;\\text{cartesian}^{\\text{origin}}_{\\text{M}}\" title=\"\\large \\displaystyle \\text{cartesian}^{\\text{origin}}_{\\text{M}}\" /></a>\n<!-- $\\displaystyle \\text{cartesian}^{\\text{origin}}_{\\text{M}}$ -->\n\n```python\n# In sympy it is difficult to access underlying parameters, but the new base_symbols function makes it easy:\ncs.base_symbols()\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\left(&space;x,&space;\\&space;y\\right)\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\left(&space;x,&space;\\&space;y\\right)\" title=\"\\large \\left( x, \\ y\\right)\" /></a>\n<!-- $\\left( x, \\  y\\right)$ -->\n\n## Metrics\n\n```python\n# Assembling a metric is easy\nfrom sympy import Array, symbols\nfrom pystein import metric\nfrom pystein.utilities import tensor_pow as tpow\n```\n\n```python\n# Metrics can be created either from a (Matrix, Coords) combo or from a TwoForm Expression\n# Let's create a metric from a twoform expression, using the basis of oneforms from the coordinate system\na, b = symbols('a b')  # some constants to use in the metric\ndx, dy = cs.base_oneforms()\nform = a ** 2 * tpow(dx, 2) + b ** 2 * tpow(dy, 2)\ng1 = metric.Metric(twoform=form)  # Note: don't have to specify coords since implied by basis of one-forms\n```\n\n```python\n# Notice that the Metric class will represent itself as a twoform\ng1\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;a^{2}&space;\\operatorname{d}x&space;\\otimes&space;\\operatorname{d}x&space;&plus;&space;b^{2}&space;\\operatorname{d}y&space;\\otimes&space;\\operatorname{d}y\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;a^{2}&space;\\operatorname{d}x&space;\\otimes&space;\\operatorname{d}x&space;&plus;&space;b^{2}&space;\\operatorname{d}y&space;\\otimes&space;\\operatorname{d}y\" title=\"\\large a^{2} \\operatorname{d}x \\otimes \\operatorname{d}x + b^{2} \\operatorname{d}y \\otimes \\operatorname{d}y\" /></a>\n<!-- $a^{2} \\operatorname{d}x \\otimes \\operatorname{d}x + b^{2} \\operatorname{d}y \\otimes \\operatorname{d}y$ -->\n\n```python\n# Now let's create the same metric from a matrix\n# First let's create a Matrix\nmatrix = Array([[a ** 2, 0], [0, b ** 2]])\nmatrix\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\left[\\begin{matrix}a^{2}&space;&&space;0\\\\0&space;&&space;b^{2}\\end{matrix}\\right]\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\left[\\begin{matrix}a^{2}&space;&&space;0\\\\0&space;&&space;b^{2}\\end{matrix}\\right]\" title=\"\\left[\\begin{matrix}a^{2} & 0\\\\0 & b^{2}\\end{matrix}\\right]\" /></a>\n<!-- $\\left[\\begin{matrix}a^{2} & 0\\\\0 & b^{2}\\end{matrix}\\right]$ -->\n\n```python\n# Creating a Metric from a matrix also requires you to specify the coordinate system (so the axes can be labeled)\ng2 = metric.Metric(matrix=matrix, coord_system=cs)\n```\n\n```python\n# Note that the Metric class automatically computes the two-form and uses it for representation\ng2\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;a^{2}&space;\\operatorname{d}x&space;\\otimes&space;\\operatorname{d}x&space;&plus;&space;b^{2}&space;\\operatorname{d}y&space;\\otimes&space;\\operatorname{d}y\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;a^{2}&space;\\operatorname{d}x&space;\\otimes&space;\\operatorname{d}x&space;&plus;&space;b^{2}&space;\\operatorname{d}y&space;\\otimes&space;\\operatorname{d}y\" title=\"\\large a^{2} \\operatorname{d}x \\otimes \\operatorname{d}x + b^{2} \\operatorname{d}y \\otimes \\operatorname{d}y\" /></a>\n<!-- $a^{2} \\operatorname{d}x \\otimes \\operatorname{d}x + b^{2} \\operatorname{d}y \\otimes \\operatorname{d}y$ -->\n\n```python\n# Metrics can be inverted, and produce other metrics\ng3 = g2.inverse\ng3\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\frac{\\operatorname{d}y&space;\\otimes&space;\\operatorname{d}y}{b^{2}}&space;&plus;&space;\\frac{\\operatorname{d}x&space;\\otimes&space;\\operatorname{d}x}{a^{2}}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\frac{\\operatorname{d}y&space;\\otimes&space;\\operatorname{d}y}{b^{2}}&space;&plus;&space;\\frac{\\operatorname{d}x&space;\\otimes&space;\\operatorname{d}x}{a^{2}}\" title=\"\\large \\frac{\\operatorname{d}y \\otimes \\operatorname{d}y}{b^{2}} + \\frac{\\operatorname{d}x \\otimes \\operatorname{d}x}{a^{2}}\" /></a>\n<!-- $\\frac{\\operatorname{d}y \\otimes \\operatorname{d}y}{b^{2}} + \\frac{\\operatorname{d}x \\otimes \\operatorname{d}x}{a^{2}}$ -->\n\n## Curvature\n\n```python\n# Now let's compute curvature terms\nfrom sympy import Function\nfrom pystein import curvature\n```\n\n```python\n# Let's create a metric with some curvature..\nx, y = cs.base_symbols()  # grab the coordinate parameters\nF = Function('F')(x, y)  # Define an arbitrary function that depends on x and y\ng4 = metric.Metric(twoform=F ** 2 * tpow(dx, 2) + b ** 2 * tpow(dy, 2))\n```\n\n```python\ncurvature.ricci_tensor_component(0, 0, g4).doit()\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;-&space;\\frac{F{\\left(x,y&space;\\right)}&space;\\frac{\\partial^{2}}{\\partial&space;y^{2}}&space;F{\\left(x,y&space;\\right)}}{b^{2}}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;-&space;\\frac{F{\\left(x,y&space;\\right)}&space;\\frac{\\partial^{2}}{\\partial&space;y^{2}}&space;F{\\left(x,y&space;\\right)}}{b^{2}}\" title=\"\\large - \\frac{F{\\left(x,y \\right)} \\frac{\\partial^{2}}{\\partial y^{2}} F{\\left(x,y \\right)}}{b^{2}}\" /></a>\n<!-- $- \\frac{F{\\left(x,y \\right)} \\frac{\\partial^{2}}{\\partial y^{2}} F{\\left(x,y \\right)}}{b^{2}}$ -->\n\n## Matter\n\n```python\n# Let's compute the matter stress energy tensor of a perfect fluid in 1D\nfrom pystein import matter\n```\n\n```python\n# Need to quickly redefine the coordinates to have a temporal coordinate\nt, x, y = symbols('t x y')\nM = Manifold('M', dim=3)\nP = Patch('origin', M)\ncs = coords.CoordSystem('OneDim', P, [t, x, y])\n\ndt, dx, dy = cs.base_oneforms()\nQ = Function('Q')(t, y)  # Define an arbitrary function that depends on x and y\nS = Function('S')(t, x)  # Define an arbitrary function that depends on x and y\ng5 = metric.Metric(twoform=- Q ** 2 * tpow(dt, 2) + b ** 2 * tpow(dx, 2) + S ** 2 * tpow(dy, 2), components=(Q, S, b))\ng5\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;b^{2}&space;\\operatorname{d}x&space;\\otimes&space;\\operatorname{d}x&space;-&space;Q^{2}{\\left(t,y&space;\\right)}&space;\\operatorname{d}t&space;\\otimes&space;\\operatorname{d}t&space;&plus;&space;S^{2}{\\left(t,x&space;\\right)}&space;\\operatorname{d}y&space;\\otimes&space;\\operatorname{d}y\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;b^{2}&space;\\operatorname{d}x&space;\\otimes&space;\\operatorname{d}x&space;-&space;Q^{2}{\\left(t,y&space;\\right)}&space;\\operatorname{d}t&space;\\otimes&space;\\operatorname{d}t&space;&plus;&space;S^{2}{\\left(t,x&space;\\right)}&space;\\operatorname{d}y&space;\\otimes&space;\\operatorname{d}y\" title=\"\\large \\displaystyle b^{2} \\operatorname{d}x \\otimes \\operatorname{d}x - Q^{2}{\\left(t,y \\right)} \\operatorname{d}t \\otimes \\operatorname{d}t + S^{2}{\\left(t,x \\right)} \\operatorname{d}y \\otimes \\operatorname{d}y\" /></a>\n<!-- $\\displaystyle b^{2} \\operatorname{d}x \\otimes \\operatorname{d}x - Q^{2}{\\left(t,y \\right)} \\operatorname{d}t \\otimes \\operatorname{d}t + S^{2}{\\left(t,x \\right)} \\operatorname{d}y \\otimes \\operatorname{d}y$ -->\n\n```python\n# Now use the matter module to create the stress energy tensor for perfect fluid\nT = matter.perfect_fluid(g5)\nT\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;\\left[\\begin{matrix}\\rho&space;-&space;p&space;Q^{2}{\\left(t,y&space;\\right)}&space;&plus;&space;p&space;&&space;0&space;&&space;0\\\\0&space;&&space;b^{2}&space;p&space;&&space;0\\\\0&space;&&space;0&space;&&space;p&space;S^{2}{\\left(t,x&space;\\right)}\\end{matrix}\\right]\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;\\left[\\begin{matrix}\\rho&space;-&space;p&space;Q^{2}{\\left(t,y&space;\\right)}&space;&plus;&space;p&space;&&space;0&space;&&space;0\\\\0&space;&&space;b^{2}&space;p&space;&&space;0\\\\0&space;&&space;0&space;&&space;p&space;S^{2}{\\left(t,x&space;\\right)}\\end{matrix}\\right]\" title=\"\\large \\displaystyle \\left[\\begin{matrix}\\rho - p Q^{2}{\\left(t,y \\right)} + p & 0 & 0\\\\0 & b^{2} p & 0\\\\0 & 0 & p S^{2}{\\left(t,x \\right)}\\end{matrix}\\right]\" /></a>\n<!-- $\\displaystyle \\left[\\begin{matrix}\\rho - p Q^{2}{\\left(t,y \\right)} + p & 0 & 0\\\\0 & b^{2} p & 0\\\\0 & 0 & p S^{2}{\\left(t,x \\right)}\\end{matrix}\\right]$ -->\n\n```python\nutilities.clean_expr(curvature.einstein_tensor_component(0, 0, g5))\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;-&space;\\frac{Q^{2}{\\left(t,y&space;\\right)}&space;\\frac{\\partial^{2}}{\\partial&space;x^{2}}&space;S{\\left(t,x&space;\\right)}}{b^{2}&space;S{\\left(t,x&space;\\right)}}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;-&space;\\frac{Q^{2}{\\left(t,y&space;\\right)}&space;\\frac{\\partial^{2}}{\\partial&space;x^{2}}&space;S{\\left(t,x&space;\\right)}}{b^{2}&space;S{\\left(t,x&space;\\right)}}\" title=\"\\large \\displaystyle - \\frac{Q^{2}{\\left(t,y \\right)} \\frac{\\partial^{2}}{\\partial x^{2}} S{\\left(t,x \\right)}}{b^{2} S{\\left(t,x \\right)}}\" /></a>\n<!-- $\\displaystyle - \\frac{Q^{2}{\\left(t,y \\right)} \\frac{\\partial^{2}}{\\partial x^{2}} S{\\left(t,x \\right)}}{b^{2} S{\\left(t,x \\right)}}$ -->\n\n```python\n# Note that in the limit Q -> 1\ng5_lim = g5.subs({Q: 1})\nT_lim = matter.perfect_fluid(g5_lim)\nT_lim\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;\\left[\\begin{matrix}\\rho&space;&&space;0&space;&&space;0\\\\0&space;&&space;b^{2}&space;p&space;&&space;0\\\\0&space;&&space;0&space;&&space;p&space;S^{2}{\\left(t,x&space;\\right)}\\end{matrix}\\right]\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;\\left[\\begin{matrix}\\rho&space;&&space;0&space;&&space;0\\\\0&space;&&space;b^{2}&space;p&space;&&space;0\\\\0&space;&&space;0&space;&&space;p&space;S^{2}{\\left(t,x&space;\\right)}\\end{matrix}\\right]\" title=\"\\large \\displaystyle \\left[\\begin{matrix}\\rho & 0 & 0\\\\0 & b^{2} p & 0\\\\0 & 0 & p S^{2}{\\left(t,x \\right)}\\end{matrix}\\right]\" /></a>\n<!-- $\\displaystyle \\left[\\begin{matrix}\\rho & 0 & 0\\\\0 & b^{2} p & 0\\\\0 & 0 & p S^{2}{\\left(t,x \\right)}\\end{matrix}\\right]$ -->\n\n```python\nutilities.clean_expr(curvature.einstein_tensor_component(0, 0, g5_lim))\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;-&space;\\frac{\\frac{\\partial^{2}}{\\partial&space;x^{2}}&space;S{\\left(t,x&space;\\right)}}{b^{2}&space;S{\\left(t,x&space;\\right)}}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;-&space;\\frac{\\frac{\\partial^{2}}{\\partial&space;x^{2}}&space;S{\\left(t,x&space;\\right)}}{b^{2}&space;S{\\left(t,x&space;\\right)}}\" title=\"\\large \\displaystyle - \\frac{\\frac{\\partial^{2}}{\\partial x^{2}} S{\\left(t,x \\right)}}{b^{2} S{\\left(t,x \\right)}}\" /></a>\n<!-- $\\displaystyle - \\frac{\\frac{\\partial^{2}}{\\partial x^{2}} S{\\left(t,x \\right)}}{b^{2} S{\\left(t,x \\right)}}$ -->\n\n## Gravity\n\n```python\n# One can also directly compute the Einstein Equations\nfrom pystein import gravity\n```\n\n```python\nutilities.clean_expr(gravity.einstein_equation(0, 0, g5, T))\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;8&space;\\pi&space;\\left(\\rho&space;-&space;p&space;Q^{2}{\\left(t,y&space;\\right)}&space;&plus;&space;p\\right)&space;=&space;-&space;\\frac{Q^{2}{\\left(t,y&space;\\right)}&space;\\frac{\\partial^{2}}{\\partial&space;x^{2}}&space;S{\\left(t,x&space;\\right)}}{b^{2}&space;S{\\left(t,x&space;\\right)}}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;8&space;\\pi&space;\\left(\\rho&space;-&space;p&space;Q^{2}{\\left(t,y&space;\\right)}&space;&plus;&space;p\\right)&space;=&space;-&space;\\frac{Q^{2}{\\left(t,y&space;\\right)}&space;\\frac{\\partial^{2}}{\\partial&space;x^{2}}&space;S{\\left(t,x&space;\\right)}}{b^{2}&space;S{\\left(t,x&space;\\right)}}\" title=\"\\large \\displaystyle 8 \\pi \\left(\\rho - p Q^{2}{\\left(t,y \\right)} + p\\right) = - \\frac{Q^{2}{\\left(t,y \\right)} \\frac{\\partial^{2}}{\\partial x^{2}} S{\\left(t,x \\right)}}{b^{2} S{\\left(t,x \\right)}}\" /></a>\n<!-- $\\displaystyle 8 \\pi \\left(\\rho - p Q^{2}{\\left(t,y \\right)} + p\\right) = - \\frac{Q^{2}{\\left(t,y \\right)} \\frac{\\partial^{2}}{\\partial x^{2}} S{\\left(t,x \\right)}}{b^{2} S{\\left(t,x \\right)}}$ -->\n\n```python\n# Similarly in the limit:\nutilities.clean_expr(gravity.einstein_equation(0, 0, g5_lim, T_lim))\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;8&space;\\pi&space;\\rho&space;=&space;-&space;\\frac{\\frac{\\partial^{2}}{\\partial&space;x^{2}}&space;S{\\left(t,x&space;\\right)}}{b^{2}&space;S{\\left(t,x&space;\\right)}}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;8&space;\\pi&space;\\rho&space;=&space;-&space;\\frac{\\frac{\\partial^{2}}{\\partial&space;x^{2}}&space;S{\\left(t,x&space;\\right)}}{b^{2}&space;S{\\left(t,x&space;\\right)}}\" title=\"\\large \\displaystyle 8 \\pi \\rho = - \\frac{\\frac{\\partial^{2}}{\\partial x^{2}} S{\\left(t,x \\right)}}{b^{2} S{\\left(t,x \\right)}}\" /></a>\n<!-- $\\displaystyle 8 \\pi \\rho = - \\frac{\\frac{\\partial^{2}}{\\partial x^{2}} S{\\left(t,x \\right)}}{b^{2} S{\\left(t,x \\right)}}$ -->\n\n## Full Example: FLRW Cosmology\n\n```python\n# Load the predefined FLRW metric\nflrw = metric.flrw(cartesian=True)\nflrw\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;-&space;c^{2}&space;\\operatorname{d}t&space;\\otimes&space;\\operatorname{d}t&space;&plus;&space;a^{2}{\\left(t&space;\\right)}&space;\\left(\\operatorname{d}x&space;\\otimes&space;\\operatorname{d}x&space;&plus;&space;\\operatorname{d}y&space;\\otimes&space;\\operatorname{d}y&space;&plus;&space;\\operatorname{d}z&space;\\otimes&space;\\operatorname{d}z\\right)\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;-&space;c^{2}&space;\\operatorname{d}t&space;\\otimes&space;\\operatorname{d}t&space;&plus;&space;a^{2}{\\left(t&space;\\right)}&space;\\left(\\operatorname{d}x&space;\\otimes&space;\\operatorname{d}x&space;&plus;&space;\\operatorname{d}y&space;\\otimes&space;\\operatorname{d}y&space;&plus;&space;\\operatorname{d}z&space;\\otimes&space;\\operatorname{d}z\\right)\" title=\"\\large \\displaystyle - c^{2} \\operatorname{d}t \\otimes \\operatorname{d}t + a^{2}{\\left(t \\right)} \\left(\\operatorname{d}x \\otimes \\operatorname{d}x + \\operatorname{d}y \\otimes \\operatorname{d}y + \\operatorname{d}z \\otimes \\operatorname{d}z\\right)\" /></a>\n<!-- $\\displaystyle - c^{2} \\operatorname{d}t \\otimes \\operatorname{d}t + a^{2}{\\left(t \\right)} \\left(\\operatorname{d}x \\otimes \\operatorname{d}x + \\operatorname{d}y \\otimes \\operatorname{d}y + \\operatorname{d}z \\otimes \\operatorname{d}z\\right)$ -->\n\n```python\nT = matter.perfect_fluid(flrw)\nefe_00 = utilities.clean_expr(gravity.einstein_equation(0, 0, flrw, T).doit())\nefe_00\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;8&space;\\pi&space;\\rho&space;=&space;\\frac{3&space;\\left(\\frac{d}{d&space;t}&space;a{\\left(t&space;\\right)}\\right)^{2}}{a^{2}{\\left(t&space;\\right)}}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;8&space;\\pi&space;\\rho&space;=&space;\\frac{3&space;\\left(\\frac{d}{d&space;t}&space;a{\\left(t&space;\\right)}\\right)^{2}}{a^{2}{\\left(t&space;\\right)}}\" title=\"\\large \\displaystyle 8 \\pi \\rho = \\frac{3 \\left(\\frac{d}{d t} a{\\left(t \\right)}\\right)^{2}}{a^{2}{\\left(t \\right)}}\" /></a>\n<!-- $\\displaystyle 8 \\pi \\rho = \\frac{3 \\left(\\frac{d}{d t} a{\\left(t \\right)}\\right)^{2}}{a^{2}{\\left(t \\right)}}$ -->\n\n```python\n# Simplify derivative notation:\nmetric.simplify_deriv_notation(efe_00, flrw)\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;8&space;\\pi&space;\\rho&space;=&space;\\frac{3&space;\\operatorname{a'}^{2}{\\left(t&space;\\right)}}{a^{2}{\\left(t&space;\\right)}}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;8&space;\\pi&space;\\rho&space;=&space;\\frac{3&space;\\operatorname{a'}^{2}{\\left(t&space;\\right)}}{a^{2}{\\left(t&space;\\right)}}\" title=\"\\large \\displaystyle 8 \\pi \\rho = \\frac{3 \\operatorname{a'}^{2}{\\left(t \\right)}}{a^{2}{\\left(t \\right)}}\" /></a>\n<!-- $\\displaystyle 8 \\pi \\rho = \\frac{3 \\operatorname{a'}^{2}{\\left(t \\right)}}{a^{2}{\\left(t \\right)}}$ -->\n\n```python\n# Can also use \"dots\"\nmetric.simplify_deriv_notation(efe_00, flrw, use_dots=True)\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\large&space;\\displaystyle&space;8&space;\\pi&space;\\rho&space;=&space;\\frac{3&space;\\dot{a}^{2}{\\left(t&space;\\right)}}{a^{2}{\\left(t&space;\\right)}}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\large&space;\\displaystyle&space;8&space;\\pi&space;\\rho&space;=&space;\\frac{3&space;\\dot{a}^{2}{\\left(t&space;\\right)}}{a^{2}{\\left(t&space;\\right)}}\" title=\"\\large \\displaystyle 8 \\pi \\rho = \\frac{3 \\dot{a}^{2}{\\left(t \\right)}}{a^{2}{\\left(t \\right)}}\" /></a>\n<!-- $\\displaystyle 8 \\pi \\rho = \\frac{3 \\dot{a}^{2}{\\left(t \\right)}}{a^{2}{\\left(t \\right)}}$ -->\n\n## Numeric Tools\n\nThe `pystein` package contains some limited numerical utilities, including:\n\n- ability to numerically integrate the geodesic equations `geodesic.numerical_geodesic`\n- convenience functions to compute multiple geodesics from a variety of initial conditions (2D)\n\nThese utilities are compatible with the symbolic tools thanks to `sympy.lambdify`, which is used to convert symbolic\nequations into numeric equations.\n\n*Note that the numeric tools in `pystein` are still in beta.\n\n### Example Geodesic Usage\n\nConstruct a metric from a twoform\n\n```python\nM = Manifold('M', dim=2)\nP = Patch('origin', M)\n\nrho, phi, a = sympy.symbols('rho phi a', nonnegative=True)\ncs = coords.CoordSystem('schw', P, [rho, phi])\ndrho, dphi = cs.base_oneforms()\nds2 = a ** 2 * ((1 / (1 - rho ** 2)) * tpow(drho, 2) + rho ** 2 * tpow(dphi, 2))\ng = metric.Metric(twoform=ds2)\ng\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\displaystyle&space;a^{2}&space;\\left(\\rho^{2}&space;\\operatorname{d}\\phi&space;\\otimes&space;\\operatorname{d}\\phi&space;&plus;&space;\\frac{\\operatorname{d}\\rho&space;\\otimes&space;\\operatorname{d}\\rho}{1&space;-&space;\\rho^{2}}\\right)\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\displaystyle&space;a^{2}&space;\\left(\\rho^{2}&space;\\operatorname{d}\\phi&space;\\otimes&space;\\operatorname{d}\\phi&space;&plus;&space;\\frac{\\operatorname{d}\\rho&space;\\otimes&space;\\operatorname{d}\\rho}{1&space;-&space;\\rho^{2}}\\right)\" title=\"\\displaystyle a^{2} \\left(\\rho^{2} \\operatorname{d}\\phi \\otimes \\operatorname{d}\\phi + \\frac{\\operatorname{d}\\rho \\otimes \\operatorname{d}\\rho}{1 - \\rho^{2}}\\right)\" /></a>\n\nCompute the symbolic geodesic equations\n\n```python\nfull_simplify(geodesic.geodesic_equation(0, sympy.symbols('lambda'), g))\n```\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\displaystyle&space;\\frac{\\left(\\rho^{2}{\\left(\\lambda&space;\\right)}&space;-&space;1\\right)&space;\\left(\\rho^{3}{\\left(\\lambda&space;\\right)}&space;\\left(\\frac{d}{d&space;\\lambda}&space;\\phi{\\left(\\lambda&space;\\right)}\\right)^{2}&space;-&space;\\rho{\\left(\\lambda&space;\\right)}&space;\\left(\\frac{d}{d&space;\\lambda}&space;\\phi{\\left(\\lambda&space;\\right)}\\right)^{2}&space;&plus;&space;\\frac{d^{2}}{d&space;\\lambda^{2}}&space;\\rho{\\left(\\lambda&space;\\right)}\\right)&space;-&space;\\rho{\\left(\\lambda&space;\\right)}&space;\\left(\\frac{d}{d&space;\\lambda}&space;\\rho{\\left(\\lambda&space;\\right)}\\right)^{2}}{\\rho^{2}{\\left(\\lambda&space;\\right)}&space;-&space;1}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/svg.latex?\\displaystyle&space;\\frac{\\left(\\rho^{2}{\\left(\\lambda&space;\\right)}&space;-&space;1\\right)&space;\\left(\\rho^{3}{\\left(\\lambda&space;\\right)}&space;\\left(\\frac{d}{d&space;\\lambda}&space;\\phi{\\left(\\lambda&space;\\right)}\\right)^{2}&space;-&space;\\rho{\\left(\\lambda&space;\\right)}&space;\\left(\\frac{d}{d&space;\\lambda}&space;\\phi{\\left(\\lambda&space;\\right)}\\right)^{2}&space;&plus;&space;\\frac{d^{2}}{d&space;\\lambda^{2}}&space;\\rho{\\left(\\lambda&space;\\right)}\\right)&space;-&space;\\rho{\\left(\\lambda&space;\\right)}&space;\\left(\\frac{d}{d&space;\\lambda}&space;\\rho{\\left(\\lambda&space;\\right)}\\right)^{2}}{\\rho^{2}{\\left(\\lambda&space;\\right)}&space;-&space;1}\" title=\"\\displaystyle \\frac{\\left(\\rho^{2}{\\left(\\lambda \\right)} - 1\\right) \\left(\\rho^{3}{\\left(\\lambda \\right)} \\left(\\frac{d}{d \\lambda} \\phi{\\left(\\lambda \\right)}\\right)^{2} - \\rho{\\left(\\lambda \\right)} \\left(\\frac{d}{d \\lambda} \\phi{\\left(\\lambda \\right)}\\right)^{2} + \\frac{d^{2}}{d \\lambda^{2}} \\rho{\\left(\\lambda \\right)}\\right) - \\rho{\\left(\\lambda \\right)} \\left(\\frac{d}{d \\lambda} \\rho{\\left(\\lambda \\right)}\\right)^{2}}{\\rho^{2}{\\left(\\lambda \\right)} - 1}\" /></a>\n\nNumerically integrate the geodesic equations\n\n```python\ninit = (numpy.sin(numpy.pi / 4), 0.0, numpy.cos(numpy.pi / 4), numpy.pi / 4)\nlambdas = numpy.arange(0, 2.1, 0.001)\ndf = geodesic.numerical_geodesic(g, init, lambdas)\ndf.head()\n```\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>rho</th>\n      <th>phi</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.707107</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.707814</td>\n      <td>0.000785</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.708520</td>\n      <td>0.001568</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.709226</td>\n      <td>0.002349</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.709931</td>\n      <td>0.003129</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JWKennington/pystein",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pystein",
    "package_url": "https://pypi.org/project/pystein/",
    "platform": "",
    "project_url": "https://pypi.org/project/pystein/",
    "project_urls": {
      "Homepage": "https://github.com/JWKennington/pystein"
    },
    "release_url": "https://pypi.org/project/pystein/0.5.3/",
    "requires_dist": [
      "matplotlib",
      "numpy",
      "palettable",
      "pytest",
      "scipy",
      "simpy"
    ],
    "requires_python": ">=3.7",
    "summary": "Collapse",
    "version": "0.5.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11573717,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14512d5a67f3dd8e70d130e7e13d31a4456f1d49be84b6a4f5691910383ba1e3",
          "md5": "7cbaa6ea6c22ed11eab98e67493e39fa",
          "sha256": "55f41df34b225405c9e0894e31d0fbeb3d22efbd5dfd70889ff5b0db48a045d9"
        },
        "downloads": -1,
        "filename": "pystein-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7cbaa6ea6c22ed11eab98e67493e39fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "==3.7, ==3.8",
        "size": 28873,
        "upload_time": "2021-09-14T17:08:17",
        "upload_time_iso_8601": "2021-09-14T17:08:17.909164Z",
        "url": "https://files.pythonhosted.org/packages/14/51/2d5a67f3dd8e70d130e7e13d31a4456f1d49be84b6a4f5691910383ba1e3/pystein-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ec98958c251ac1188e676e4f450ba3eeb3ab5c9efa23c951d3da1e453721d84",
          "md5": "9c2ccb79023bbdf6be194a5306e6d033",
          "sha256": "6a431dc4bcbe50ed0266182b690e4ab9bf73b951c1edae786b28a482dcf243e8"
        },
        "downloads": -1,
        "filename": "pystein-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9c2ccb79023bbdf6be194a5306e6d033",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "==3.7, ==3.8",
        "size": 26663,
        "upload_time": "2021-09-14T17:08:19",
        "upload_time_iso_8601": "2021-09-14T17:08:19.362781Z",
        "url": "https://files.pythonhosted.org/packages/1e/c9/8958c251ac1188e676e4f450ba3eeb3ab5c9efa23c951d3da1e453721d84/pystein-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "314fa2ac67073bfb253de8c06f5f5ade061e6ff011ed5e202113afc774633e5d",
          "md5": "b47ea52519ffe9f9db5a3b6a7f1c4563",
          "sha256": "7b626a58b0a6f21e0d12da56365faa6db89e52b6a2e28853e3c829eda3472987"
        },
        "downloads": -1,
        "filename": "pystein-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b47ea52519ffe9f9db5a3b6a7f1c4563",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "==3.7, ==3.8",
        "size": 28870,
        "upload_time": "2021-09-14T18:16:52",
        "upload_time_iso_8601": "2021-09-14T18:16:52.145690Z",
        "url": "https://files.pythonhosted.org/packages/31/4f/a2ac67073bfb253de8c06f5f5ade061e6ff011ed5e202113afc774633e5d/pystein-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0cedcd9f421f9cf0cd1a77200519d4524bc18a176f761b4e8bb1b2418e9b727",
          "md5": "e00a79d6c0f09ebb1c5232fe28256a0b",
          "sha256": "46f8af9b6dbf79a4eeac6895175913406c3895f317f8013dd56f17970c13bf4a"
        },
        "downloads": -1,
        "filename": "pystein-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e00a79d6c0f09ebb1c5232fe28256a0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "==3.7, ==3.8",
        "size": 26695,
        "upload_time": "2021-09-14T18:16:53",
        "upload_time_iso_8601": "2021-09-14T18:16:53.307307Z",
        "url": "https://files.pythonhosted.org/packages/a0/ce/dcd9f421f9cf0cd1a77200519d4524bc18a176f761b4e8bb1b2418e9b727/pystein-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2abab9cf62fae0fa5e57d6ca0b2233257a61e1d1e4b3b6500dd199c0e9059e2c",
          "md5": "eeb05000fc33a9645c56ca43fe3dd9aa",
          "sha256": "bcf2d1e614a6be084e354b6b50038ad02cc18b0d2ba6664cd2f680274b91c6fd"
        },
        "downloads": -1,
        "filename": "pystein-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eeb05000fc33a9645c56ca43fe3dd9aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "==3.7, ==3.8",
        "size": 28879,
        "upload_time": "2021-09-28T16:22:41",
        "upload_time_iso_8601": "2021-09-28T16:22:41.590472Z",
        "url": "https://files.pythonhosted.org/packages/2a/ba/b9cf62fae0fa5e57d6ca0b2233257a61e1d1e4b3b6500dd199c0e9059e2c/pystein-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a623b49fa002155a2410f631657de0e77a762f105be56bc346bf9f0acb9e455",
          "md5": "2544077ea29a62e65a916c9b8a0e713d",
          "sha256": "e2fb28aea36026b98b8aed5f1d5e32f05313ba550a668e9e604e73e0ce203e47"
        },
        "downloads": -1,
        "filename": "pystein-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2544077ea29a62e65a916c9b8a0e713d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "==3.7, ==3.8",
        "size": 25664,
        "upload_time": "2021-09-28T16:22:44",
        "upload_time_iso_8601": "2021-09-28T16:22:44.320272Z",
        "url": "https://files.pythonhosted.org/packages/5a/62/3b49fa002155a2410f631657de0e77a762f105be56bc346bf9f0acb9e455/pystein-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e9bb90259c488330fc45b393fec6dd06dac652af9fdf7ed796c222a04456a27",
          "md5": "9c0d8d638ed3423df1179f27e6bf45c6",
          "sha256": "1d1d3b8849b4c2cf010772ffdf5036241ee4ef7e7d734912d9220989980fa399"
        },
        "downloads": -1,
        "filename": "pystein-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c0d8d638ed3423df1179f27e6bf45c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28917,
        "upload_time": "2021-09-28T17:18:51",
        "upload_time_iso_8601": "2021-09-28T17:18:51.062675Z",
        "url": "https://files.pythonhosted.org/packages/3e/9b/b90259c488330fc45b393fec6dd06dac652af9fdf7ed796c222a04456a27/pystein-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a5952a33552e8a34cec2bc318c224e4fbca2cd5e876c94355c9b4275f1678cf",
          "md5": "8b3c95ffaed591b5084200d4683eccc9",
          "sha256": "e576bfc6e3bd458036d7a079566c42fca30664acd98da9398da21fc0eeb6deb0"
        },
        "downloads": -1,
        "filename": "pystein-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8b3c95ffaed591b5084200d4683eccc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 25731,
        "upload_time": "2021-09-28T17:18:53",
        "upload_time_iso_8601": "2021-09-28T17:18:53.560462Z",
        "url": "https://files.pythonhosted.org/packages/1a/59/52a33552e8a34cec2bc318c224e4fbca2cd5e876c94355c9b4275f1678cf/pystein-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "473a518ed557c0db3b7bc107806c77a8d3afe8ffc69494ffed2212b6787f1bb6",
          "md5": "a92a7c3fef4da0f231c109f6f576ee35",
          "sha256": "f2f0e3b81cf43f8694728c7d4f5d3288d093107547d023846c358ab943ba0f72"
        },
        "downloads": -1,
        "filename": "pystein-0.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a92a7c3fef4da0f231c109f6f576ee35",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28912,
        "upload_time": "2021-09-28T17:25:32",
        "upload_time_iso_8601": "2021-09-28T17:25:32.065752Z",
        "url": "https://files.pythonhosted.org/packages/47/3a/518ed557c0db3b7bc107806c77a8d3afe8ffc69494ffed2212b6787f1bb6/pystein-0.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62c9fb62525efc1495c2a4439ed12572d0f24d678258e96aeeb5211d8c6e8b95",
          "md5": "ccfd785292bb8a995331ba855037c9e0",
          "sha256": "5b4163b0018629be0be54ee37f45a973d40da1dcafbf3ab0826b2a2f9e5588b9"
        },
        "downloads": -1,
        "filename": "pystein-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ccfd785292bb8a995331ba855037c9e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 25717,
        "upload_time": "2021-09-28T17:25:33",
        "upload_time_iso_8601": "2021-09-28T17:25:33.828884Z",
        "url": "https://files.pythonhosted.org/packages/62/c9/fb62525efc1495c2a4439ed12572d0f24d678258e96aeeb5211d8c6e8b95/pystein-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56d61bc07ce54cfba78c7bd1c9e34923881729d7df970b3a147dc94a06a7440d",
          "md5": "887078077e1625f329c10f60871463b7",
          "sha256": "0b72f78ea13137ce89102abaa69a8b1c842e56ed1450135afb25de5d979ab3cd"
        },
        "downloads": -1,
        "filename": "pystein-0.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "887078077e1625f329c10f60871463b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28893,
        "upload_time": "2021-09-28T17:35:17",
        "upload_time_iso_8601": "2021-09-28T17:35:17.281289Z",
        "url": "https://files.pythonhosted.org/packages/56/d6/1bc07ce54cfba78c7bd1c9e34923881729d7df970b3a147dc94a06a7440d/pystein-0.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a48994b805990856bf613cb9febdbf7245074945cab9f1e6ced903ab1b9c4382",
          "md5": "cc70197ccfe17f5ba8c1c1baa63c3951",
          "sha256": "d33d7ad8f061d72ab09b91d2b19cad09e85c462cdb9667466fb989d215abfb6d"
        },
        "downloads": -1,
        "filename": "pystein-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cc70197ccfe17f5ba8c1c1baa63c3951",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26411,
        "upload_time": "2021-09-28T17:35:19",
        "upload_time_iso_8601": "2021-09-28T17:35:19.117605Z",
        "url": "https://files.pythonhosted.org/packages/a4/89/94b805990856bf613cb9febdbf7245074945cab9f1e6ced903ab1b9c4382/pystein-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56d61bc07ce54cfba78c7bd1c9e34923881729d7df970b3a147dc94a06a7440d",
        "md5": "887078077e1625f329c10f60871463b7",
        "sha256": "0b72f78ea13137ce89102abaa69a8b1c842e56ed1450135afb25de5d979ab3cd"
      },
      "downloads": -1,
      "filename": "pystein-0.5.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "887078077e1625f329c10f60871463b7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 28893,
      "upload_time": "2021-09-28T17:35:17",
      "upload_time_iso_8601": "2021-09-28T17:35:17.281289Z",
      "url": "https://files.pythonhosted.org/packages/56/d6/1bc07ce54cfba78c7bd1c9e34923881729d7df970b3a147dc94a06a7440d/pystein-0.5.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a48994b805990856bf613cb9febdbf7245074945cab9f1e6ced903ab1b9c4382",
        "md5": "cc70197ccfe17f5ba8c1c1baa63c3951",
        "sha256": "d33d7ad8f061d72ab09b91d2b19cad09e85c462cdb9667466fb989d215abfb6d"
      },
      "downloads": -1,
      "filename": "pystein-0.5.3.tar.gz",
      "has_sig": false,
      "md5_digest": "cc70197ccfe17f5ba8c1c1baa63c3951",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 26411,
      "upload_time": "2021-09-28T17:35:19",
      "upload_time_iso_8601": "2021-09-28T17:35:19.117605Z",
      "url": "https://files.pythonhosted.org/packages/a4/89/94b805990856bf613cb9febdbf7245074945cab9f1e6ced903ab1b9c4382/pystein-0.5.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}