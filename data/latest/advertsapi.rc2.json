{
  "info": {
    "author": "Ahmed Hamed Aly",
    "author_email": "hamedala@tcd.ie",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# AdvertsAPI\n\nAn unofficial API for the community based Irish marketplace, **adverts.ie**.\n\n## Getting Started\n\n### Prerequisites\n\n* Python 3.6 >=\n\n### Installing\n\n``` shell\npip install AdvertsAPI\n```\n\n### Dependecies\n\n``` shell\npip install requests\npip install beautifulsoup4 \npip install mechanize\n```\n\n### Imports\n\n``` python\nimport AdvertsAPI\nfrom AdvertsAPI.category import Category\nfrom AdvertsAPI.utils import pretty_json\n```\n\n## Available Methods\n\n* Constructor\n* login\n* get_ad_panel\n* place_offer\n* withdraw_offer\n* full_ad_info\n* search_query\n* logout\n\n## Constructor\n\n**Default:** category=None, county=None, min_price=0, max_price=0, view='grid_view', search=None\n\n``` python\nadvert = AdvertsAPI.AdvertsAPI()\n```\n\n**Bike in Dublin:** category=Category.SPORTS_FITNESS__BIKES, county='Dublin', min_price=0, max_price=0, view='grid_view', search=None\n\n``` python\nadvert = AdvertsAPI.AdvertsAPI(category=Category.SPORTS_FITNESS__BIKES, county='Dublin')\n```\n\n**Mountain bike in Dublin:** category=Category.SPORTS_FITNESS__BIKES, county='Dublin', min_price=0, max_price=0, view='grid_view', search='mountain'\n\n``` python\nadvert = AdvertsAPI.AdvertsAPI(category=Category.SPORTS_FITNESS__BIKES, county='Dublin', search='mountain')\n```\n\n**ps4 between 100-300 euro:** category=Category.CONSOLES_GAMES, county=None, min_price=100, max_price=300, view='grid_view', search='ps4'\n\n``` python\nadvert = AdvertsAPI.AdvertsAPI(category=Category.CONSOLES_GAMES, min_price=100, max_price=300, search='ps4')\n```\n\n**free items in Dublin:** category=None, county='Dublin', min_price=0, max_price=0, view='grid_view', search=None\n\n``` python\nadvert = AdvertsAPI.AdvertsAPI(county='Dublin')\n```\n\n## login\n\n``` python\nadverts = AdvertsAPI.AdvertsAPI()\nadverts.login('username', 'password')\n```\n\n## get_ad_panel\n\n**NOTE:** given the contructor details, it will produce the url for the search.\n\n``` python\nads = advert.get_ad_panel()\n```\n\nHowever you could also pass in the url of the search and it will compute for you.\n\n``` python\nads = advert.get_ad_panel('https://www.adverts.ie/for-sale/price_0-0/')\n```\n\nIt will return a list of the top 30 ads for that search. The attributes that can be retreived are: `price`, `title`, `area`, `county`, `category` and `url`\n\n``` python\nfor ad in ads:\n    print(ad.price)\n    print(ad.title)\n    print(ad.area)\n    print(ad.county)\n    print(ad.category)\n    print(ad.url)\n```\n\n## place_offer\n\nThis will place an offer given the url of the ad directly.\n\nBelow is an example given a url that is static.\n\n``` python\nadvert.place_offer('ad_url', 100)   \n```\n\nBelow will place an offer on the first ad of the ads retreieved [above](#get_ad_panel).\n\n``` python\nadvert.place_offer(ads[0].url, 0)\n```\n\n## withdraw_offer\n\nWithdraws an offer to a particular ad, given the url. You must have an active offer to withdraw the ad.\n\n``` python\nadvert.withdraw_offer('ad_url')    \n```\n\n## full_ad_info\n\nThis will return all the information of the ad given the url. The attributes that can be retreived are: `title`, `price`, `seller`, `positive`, `negative`, `location` `date_entered`, `ad_views` and `description`.\n\n``` python\nadvert.full_ad_info('ad_url')\n```\n\n``` python\nads = advert.full_ad_info(ads[0].url)\n```\n\nYou can retreive the data as follows:\n\n``` python\nfor ad in ads:\n    print(ad.title)\n    print(ad.price)\n    print(ad.seller)\n    print(ad.positive)\n    print(ad.negative)\n    print(ad.location)\n    print(ad.date_entered)\n    print(ad.ad_views)\n    print(ad.description)\n```\n\n## search_query\n\nSearch query will use the constructor generated url to search for ads.\n\n``` python\nadvert.search_query()\n```\n\nHowever you can pass a search query to the method and it will return the search results of the query.\n\n``` python\n# search_query (given query)\nads = advert.search_query('mountain bikes')\n```\n\nSimilar to the [get_ad_panel](#get_ad_panel) method, you can retreive the data as below:\n\n``` python\nfor ad in ads:\n    print(ad.title)\n    # ...\n    print(ad.url)\n```\n\n## logout\n\nNot very necessary as it will discard the cookies as the program stops.\n\n``` python\nadverts.logout()\n```\n\n## Usage\n\nFor documented examples see [examples.py](https://github.com/ahmedhamedaly/Adverts-API/blob/master/examples/examples.py)\n\n## Contributing\n\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\n## Roadmap\n\nSee the [open issues](https://github.com/ahmedhamedaly/Adverts-API/issues) for a list of proposed features (and known issues).\n\n## License\n\nDistributed under the [MIT](https://github.com/ahmedhamedaly/Adverts-API/blob/master/LICENSE) License. See `LICENSE` for more information.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ahmedhamedaly/Adverts-API",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "AdvertsAPI",
    "package_url": "https://pypi.org/project/AdvertsAPI/",
    "platform": "",
    "project_url": "https://pypi.org/project/AdvertsAPI/",
    "project_urls": {
      "Homepage": "https://github.com/ahmedhamedaly/Adverts-API"
    },
    "release_url": "https://pypi.org/project/AdvertsAPI/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "An unofficial API for the community based Irish marketplace, adverts.ie",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8988649,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71bdad634c4703f7277f61b1508ee92efbfe6848af9711e0b126ee86a816a1a1",
          "md5": "4d18979acb6ac16ca3d4ded462373acb",
          "sha256": "5b43a4e7144ff7e2d5bba1f5b60e2d64a815aa1bcb884c48f33640a5d630b922"
        },
        "downloads": -1,
        "filename": "AdvertsAPI-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d18979acb6ac16ca3d4ded462373acb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25285,
        "upload_time": "2020-12-26T17:26:44",
        "upload_time_iso_8601": "2020-12-26T17:26:44.109165Z",
        "url": "https://files.pythonhosted.org/packages/71/bd/ad634c4703f7277f61b1508ee92efbfe6848af9711e0b126ee86a816a1a1/AdvertsAPI-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e34602a9918f06db07946a5e138d879708521eb335b9256ec284d3bc7a152d7",
          "md5": "c5a4e1d35f71bdcb4de951df6a640de1",
          "sha256": "d46627291ee780f932e9a9d9573d49a28ded1fc3e3f5d5efbcdbb11e4599630d"
        },
        "downloads": -1,
        "filename": "AdvertsAPI-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c5a4e1d35f71bdcb4de951df6a640de1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23085,
        "upload_time": "2020-12-26T17:26:45",
        "upload_time_iso_8601": "2020-12-26T17:26:45.463834Z",
        "url": "https://files.pythonhosted.org/packages/1e/34/602a9918f06db07946a5e138d879708521eb335b9256ec284d3bc7a152d7/AdvertsAPI-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e203a60e7c3e14d526a6361d2257edee6f06e3dd713c47e238686cb538182b4",
          "md5": "c791fafbd9998b1ff846cd4adf9a77a1",
          "sha256": "3be5ab0f4c7b5deb6fe9354291d1fd489e251294b1540ecc8040795509bf5082"
        },
        "downloads": -1,
        "filename": "AdvertsAPI-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c791fafbd9998b1ff846cd4adf9a77a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25253,
        "upload_time": "2020-12-26T17:26:46",
        "upload_time_iso_8601": "2020-12-26T17:26:46.838973Z",
        "url": "https://files.pythonhosted.org/packages/4e/20/3a60e7c3e14d526a6361d2257edee6f06e3dd713c47e238686cb538182b4/AdvertsAPI-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e203a60e7c3e14d526a6361d2257edee6f06e3dd713c47e238686cb538182b4",
        "md5": "c791fafbd9998b1ff846cd4adf9a77a1",
        "sha256": "3be5ab0f4c7b5deb6fe9354291d1fd489e251294b1540ecc8040795509bf5082"
      },
      "downloads": -1,
      "filename": "AdvertsAPI-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c791fafbd9998b1ff846cd4adf9a77a1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 25253,
      "upload_time": "2020-12-26T17:26:46",
      "upload_time_iso_8601": "2020-12-26T17:26:46.838973Z",
      "url": "https://files.pythonhosted.org/packages/4e/20/3a60e7c3e14d526a6361d2257edee6f06e3dd713c47e238686cb538182b4/AdvertsAPI-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}