{
  "info": {
    "author": "Ali Mostafa Anwar",
    "author_email": "aliali.mostafa99@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "\r\n# BCAWT: Automated tool for codon usage bias analysis for molecular evolution\r\n\r\n[![Build Status](https://travis-ci.org/AliYoussef96/BCAW-Tool.svg?branch=master)](https://travis-ci.org/AliYoussef96/BCAW-Tool)\r\n[![Documentation Status](https://readthedocs.org/projects/bcaw-tools-documentation/badge/?version=latest)](https://bcaw-tools-documentation.readthedocs.io/en/latest/?badge=latest)\r\n[![PyPI version](https://badge.fury.io/py/BCAWT.svg)](https://badge.fury.io/py/BCAWT)\r\n[![status](http://joss.theoj.org/papers/5c17f813c2eca6b9d7c4ecf5d2ea97e9/status.svg)](http://joss.theoj.org/papers/5c17f813c2eca6b9d7c4ecf5d2ea97e9)\r\n\r\n\r\n## BCAW tool Updates\r\n\r\nNow you can run BCAW tool using a GUI software that can work on any operating system. It is very easy to use. For more information and to download it: [BCAWT-GUI](https://github.com/AliYoussef96/BCAWT-GUI).\r\n\r\n## Statement of Need\r\n\r\nThere are no tools available enable users to run a whole automated workflow for codon usage bias analysis. Using python 3.7 BCAW Tool ( Bio Codon Analysis Workflow Tool ) was developed to address this problem.\r\nBCAW Tool manages a complete automated workflow to analyze the codon usage bias for genes and genomes of any organism. With minimum coding skills.\r\n\r\n\r\nFor more details about  codon usage bias , and the equations used in BCAWT [see](https://bcaw-tools-documentation.readthedocs.io/en/latest/intro.html).\r\n\r\n\r\n## Dependencies\r\n\r\n1- Biopython\r\n\r\n2- pandas\r\n\r\n3- CAI\r\n\r\n4- scipy\r\n\r\n5- matplotlib\r\n\r\n6- numpy\r\n\r\n7- prince\r\n\r\n## Installation Instructions\r\n\r\n\r\n**Using pip**\r\n\r\n```python\r\npip install BCAWT\r\n```\r\n\r\n**Note:** Python >=3.7 is required.\r\n\r\n## Contribution Guidelines\r\n\r\n**Contributions to the software are welcome**\r\n\r\nFor bugs and suggestions, the most effective way is by raising an issue on the github issue tracker. \r\nGithub allows you to classify your issues so that we know if it is a bug report, feature request or feedback to the authors.\r\n\r\nIf you wish to contribute some changes to the code then you should submit a [pull request](https://github.com/AliYoussef96/BCAW-Tool/pulls)\r\nHow to create a Pull Request? [documentation on pull requests](https://help.github.com/en/articles/about-pull-requests)\r\n\r\n## Usage\r\n\r\n#### Auto testing\r\n\r\n**Note here we try to test the result of BCAW tool and not the modules, for testing the modules in the package use [test.py](https://github.com/AliYoussef96/BCAW-Tool/blob/master/tests/test.py)**\r\n\r\nFirst download fasta file containing the coding sequence ( you can download any fasta file containing gene sequences to be analyzed from [NCBI](https://www.ncbi.nlm.nih.gov/) database).\r\n\r\nor just download that file [Test file](https://github.com/AliYoussef96/BCAW-Tool/blob/master/tests/Ecoli.fasta)\r\n\r\nthen run ( It will automatically run a test on the results files ):\r\n\r\n```python\r\nfrom BCAWT import BCAWT_auto_test\r\npath = \"Test_folder\" # absolute path to the directory to save the result in\r\ntest_fasta = \"Test_fasta_file\" # absolute path to the fasta file that will be tested \r\nBCAWT_auto_test.auto_test(path, test_fasta)\r\n#processing....\r\nBCAWT_auto_test.auto_check_files(path) # note: this test assumes that in the result folder nothing except the result files form the above function.\r\n```\r\n\r\n#### Main Usage\r\n\r\n```python\r\nfrom BCAWT import BCAWT\r\nBCAWT.BCAW(['Ecoli.fasta'],'save_path',genetic_code_=11,Auto=True)\r\n```\r\n## Input\r\n\r\n```\r\n\r\nmain_fasta_file (list): list of string of the file's path or file-like object\r\n\r\nsave_path (str): absolute path to the directory to save the result in, default = the current directory\r\n\r\nref_fasta_file (list): list of string of the file's path or file-like object, default = None\r\n\r\nAuto (bool): default = False, if ref_fasta_file not None.\r\n\r\ngenetic_code_ (int) : default = 1, The Genetic Codes number described by [NCBI](https://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi)\r\n\r\n```\r\n**Important Note:** BCAW tool expect coding sequences as input and not genes, for more information about what the difference between them you can take a look [here](https://qr.ae/TWt2gE)\r\n\r\n#### To obtain such fasta file for a species of interest\r\n\r\nSay that the species of interest is Escherichia coli str. K-12 substr. MG1655: \r\n\r\n1- Go to the NCBI database.\r\n\r\n2- In the search bar write ( Escherichia coli str. K-12 substr. MG1655, complete genome ).\r\n\r\n3- choose one of the results ( depending on what you want in your analysis ).\r\n\r\n3- On the right of the page, you will find **send to** option. From **sent to** select **Coding Sequences** then **FASTA nucleotides** Finally, press on **Create File**\r\n\r\nFor [NCBI Genomes Download (FTP) FAQ](https://www.ncbi.nlm.nih.gov/genome/doc/ftpfaq/)\r\n\r\n## Output\r\n\r\n#### The expected CSV files output\r\n\r\n|CSV file name|Description|\r\n|------------|-----------|\r\n| ATCG | contains ; gene id, GC, GC1, GC2, GC3, GC12, AT, AT3    A3, T3, C3, G3, GRAVY, AROMO and, Gene Length |\r\n| CA_RSCU | contains ; each RSCU result for each codon in each genes |\r\n| CA_RSCUcodons | contains ; correspondence analysis first 4 axis for each codon |\r\n| CA_RSCUgenes | contains ; correspondence analysis first 4 axis for each gene |\r\n| CAI | contains ; gene id and CAI index |\r\n| ENc | contains ; gene id and ENc index. |\r\n| P2-index | contains ; gene id and P2 index |\r\n| optimal codons | contains; putative optimal codons detected |\r\n\r\n\r\n#### All output plots from BCAW tool analysis for coding sequence from Escherichia coli\r\n\r\n![Fig 1](https://github.com/AliYoussef96/BCAW-Tool/blob/master/Plots/All%20plots.jpg)\r\n\r\n\r\n## Documentations\r\n\r\n1. An intro to the codon usage bias >> [CUB introduction](https://bcaw-tools-documentation.readthedocs.io/en/latest/intro.html)\r\n2. For more information about the equations used to analyze CUB in the BCAW tool >> [Equations](https://bcaw-tools-documentation.readthedocs.io/en/latest/intro.html#equations-used-for-codon-usage-bias-analysis)\r\n3. For more information about the output >> [Output](https://bcaw-tools-documentation.readthedocs.io/en/latest/Table_output.html)\r\n4. For more information about the abbreviations used >> [Abbreviations table](https://github.com/AliYoussef96/BCAW-Tool/blob/master/Abbreviations.md)\r\n\r\n## Citation\r\n\r\nAnwar, (2019). BCAWT: Automated tool for codon usage bias analysis for molecular evolution. Journal of Open Source Software, 4(42), 1500, https://doi.org/10.21105/joss.01500\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AliYoussef96/BCAW-Tool",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "BCAWT",
    "package_url": "https://pypi.org/project/BCAWT/",
    "platform": null,
    "project_url": "https://pypi.org/project/BCAWT/",
    "project_urls": {
      "Homepage": "https://github.com/AliYoussef96/BCAW-Tool"
    },
    "release_url": "https://pypi.org/project/BCAWT/1.0.6/",
    "requires_dist": null,
    "requires_python": ">=3.7.0",
    "summary": "Manages a complete workflow to analysis the codon usage bias",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15993553,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c28f92619f493795805204fd364fb59e9a5097ff67a012ea1d67690ecca94f8",
          "md5": "3c39c331c643d642d4e035fb0b18d6f4",
          "sha256": "d51ef68fe9f9a2bfc44b43d2120373d17a36ab32538b85721fe6a6473deaa993"
        },
        "downloads": -1,
        "filename": "BCAWT-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3c39c331c643d642d4e035fb0b18d6f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 18712,
        "upload_time": "2019-08-05T13:58:49",
        "upload_time_iso_8601": "2019-08-05T13:58:49.438376Z",
        "url": "https://files.pythonhosted.org/packages/3c/28/f92619f493795805204fd364fb59e9a5097ff67a012ea1d67690ecca94f8/BCAWT-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "329a46e16b74cc66a2a4206850ab77ba99f036067f9e9c23410ea39fedefd47c",
          "md5": "124769c3220cbf92d35d610719f33e44",
          "sha256": "259c2e58f0eeb8a1d56ac21e745c6fb1d2ac3bb46c6e5b37803cfe943c0f46b0"
        },
        "downloads": -1,
        "filename": "BCAWT-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "124769c3220cbf92d35d610719f33e44",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 18862,
        "upload_time": "2019-09-15T11:30:52",
        "upload_time_iso_8601": "2019-09-15T11:30:52.496302Z",
        "url": "https://files.pythonhosted.org/packages/32/9a/46e16b74cc66a2a4206850ab77ba99f036067f9e9c23410ea39fedefd47c/BCAWT-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52cf132542e6ecd2c83a126c6288ec7a2b34b3629239c7f84960b6d660d69fa0",
          "md5": "c73547f65106c0193cdf8e87ed2f9a66",
          "sha256": "8ccf26c49c1714637e517eb8519a8c1ee2c49ae3b8f5f150819e46a9fc887e0d"
        },
        "downloads": -1,
        "filename": "BCAWT-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c73547f65106c0193cdf8e87ed2f9a66",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 18789,
        "upload_time": "2019-09-22T19:43:55",
        "upload_time_iso_8601": "2019-09-22T19:43:55.096590Z",
        "url": "https://files.pythonhosted.org/packages/52/cf/132542e6ecd2c83a126c6288ec7a2b34b3629239c7f84960b6d660d69fa0/BCAWT-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77a0d85f7660cec581c71c45b1b239e016873f6d8b874f3eee8105e7a55ed1aa",
          "md5": "5566742574c9c6f34c3d8e929b4d0822",
          "sha256": "87c2faeb1342751113fad192679a9947042f6ea9dcc8f77c8a109744b7a00e53"
        },
        "downloads": -1,
        "filename": "BCAWT-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5566742574c9c6f34c3d8e929b4d0822",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 18865,
        "upload_time": "2019-09-22T19:49:30",
        "upload_time_iso_8601": "2019-09-22T19:49:30.193239Z",
        "url": "https://files.pythonhosted.org/packages/77/a0/d85f7660cec581c71c45b1b239e016873f6d8b874f3eee8105e7a55ed1aa/BCAWT-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42fdea614f995168d59cbcd59325189800825630e685f0af1aecb1442ac39401",
          "md5": "d231a6d65c216eb91a73ed99ff1bd506",
          "sha256": "1c366be192cad19b5e810fe652d1757f04e553961e8636607334f6400689f565"
        },
        "downloads": -1,
        "filename": "BCAWT-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d231a6d65c216eb91a73ed99ff1bd506",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 19551,
        "upload_time": "2020-02-08T08:41:05",
        "upload_time_iso_8601": "2020-02-08T08:41:05.016309Z",
        "url": "https://files.pythonhosted.org/packages/42/fd/ea614f995168d59cbcd59325189800825630e685f0af1aecb1442ac39401/BCAWT-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b1818d8555c17cd605a333cafcd43ac74082aef748ecf00f16b217dfd3fbe04",
          "md5": "6447990a8d424ede50aad9a6b43891b1",
          "sha256": "3d365c2954b55d0a24e29990ca1ec9745606af0fc4912e8902dde91faa32dff6"
        },
        "downloads": -1,
        "filename": "BCAWT-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6447990a8d424ede50aad9a6b43891b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 20134,
        "upload_time": "2022-12-05T10:30:47",
        "upload_time_iso_8601": "2022-12-05T10:30:47.961108Z",
        "url": "https://files.pythonhosted.org/packages/3b/18/18d8555c17cd605a333cafcd43ac74082aef748ecf00f16b217dfd3fbe04/BCAWT-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b1818d8555c17cd605a333cafcd43ac74082aef748ecf00f16b217dfd3fbe04",
        "md5": "6447990a8d424ede50aad9a6b43891b1",
        "sha256": "3d365c2954b55d0a24e29990ca1ec9745606af0fc4912e8902dde91faa32dff6"
      },
      "downloads": -1,
      "filename": "BCAWT-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "6447990a8d424ede50aad9a6b43891b1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.0",
      "size": 20134,
      "upload_time": "2022-12-05T10:30:47",
      "upload_time_iso_8601": "2022-12-05T10:30:47.961108Z",
      "url": "https://files.pythonhosted.org/packages/3b/18/18d8555c17cd605a333cafcd43ac74082aef748ecf00f16b217dfd3fbe04/BCAWT-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}