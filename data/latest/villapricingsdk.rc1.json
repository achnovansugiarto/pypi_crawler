{
  "info": {
    "author": "nic wanavit",
    "author_email": "nwanavit@hatari.cc",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# villaInventorySdk\n\n\n\nfull docs here https://thanakijwanavit.github.io/villa-inventory-sdk/\n\n## Install\n\n`pip install villaInventorySdk`\n\n## How to use\n\nUploading a large amount of data\n\n## sample input\n\n```python\nfrom villaPricingSdk.price import PricingSdk\nfrom random import randrange\nimport boto3, time, json\nfrom dataclasses import dataclass\nfrom dataclasses_json import dataclass_json\nfrom datetime import datetime\nimport pandas as pd\nfrom nicHelper.dictUtil import printDict\n```\n\n```python\nsampleInput =  [\n               {\n                  'cprcode': 9,\n                  'brcode': 1000,\n                  'price': 50\n                },\n               {\n                  'cprcode': 4,\n                  'brcode': 1000,\n                  'price': 35\n               },\n                {\n                  'cprcode': 3,\n                  'brcode': 1003,\n                  'price': 36,\n               }\n              ]\ndef getDf(input_:dict):\n  return pd.DataFrame(input_)\n\ndf = getDf(sampleInput)\ndf\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cprcode</th>\n      <th>brcode</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>9</td>\n      <td>1000</td>\n      <td>50</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>1000</td>\n      <td>35</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1003</td>\n      <td>36</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n## Upload data\n\n## init sdk\n\n## Update price \n\n```python\n%%time\nkey = 'test'\nr = sdk.uploadDf(df, key = key)\nif r.status_code >= 400: raise Exception(r.json())\nsdk.ingestData(key = key)\n```\n\n    signed url is \n    url : https://pr\n    fields\n     key : test\n     AWSAccessKeyId : ASIAVX4Z5T\n     x-amz-security-token : IQoJb3JpZ2\n     policy : eyJleHBpcm\n     signature : kgDRy1etYA\n    CPU times: user 44.1 ms, sys: 4.2 ms, total: 48.3 ms\n    Wall time: 5.47 s\n\n\n\n\n\n    {'body': '{\"cprcode\":{\"0\":9,\"1\":4,\"2\":3},\"brcode\":{\"0\":1000,\"1\":1000,\"2\":1003},\"price\":{\"0\":50,\"1\":35,\"2\":36}}',\n     'statusCode': 200,\n     'headers': {'Access-Control-Allow-Headers': '*',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': '*'}}\n\n\n\n## Query single product\n\n```python\n%%time\nsdk.querySingleProduct2(cprcode=1234)\n```\n\n    succesfully get url, returning pandas\n    CPU times: user 20.5 ms, sys: 0 ns, total: 20.5 ms\n    Wall time: 2.69 s\n\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cprcode</th>\n      <th>brcode</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>4</th>\n      <td>1234.0</td>\n      <td>1000.0</td>\n      <td>123.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n## Query Branch\n\n```python\n%%time\nsdk.branchQuery(1000)\n```\n\n\n    ---------------------------------------------------------------------------\n\n    KeyError                                  Traceback (most recent call last)\n\n    <timed eval> in <module>\n\n\n    ~/SageMaker/.persisted_conda/python38/lib/python3.8/site-packages/nicHelper/wrappers.py in wrapper(self, *args, **kwargs)\n         12         @wraps(func)\n         13         def wrapper(self, *args, **kwargs):\n    ---> 14             return func(self, *args, **kwargs)\n         15         setattr(cls, func.__name__, wrapper)\n         16         # Note we are not binding func, but wrapper which accepts self but does exactly the same as func\n\n\n    ~/SageMaker/stacks/villaMaster/villa-master-dev/price/villa-price-sdk/villaPricingSdk/price.py in branchQuery(self, brcode, cprcodes)\n        151   })\n        152   rawReturn = lambda_.invoke(functionName=self.endpoint.queryBranch(), input = payload)\n    --> 153   parsedReturn = Response.parseBody(rawReturn)\n        154   return pd.read_feather(parsedReturn['url'])\n        155 \n\n\n    ~/SageMaker/.persisted_conda/python38/lib/python3.8/site-packages/awsSchema/apigateway.py in parseBody(cls, dictInput)\n         22   @classmethod\n         23   def parseBody(cls, dictInput:dict):\n    ---> 24     response = cls.fromDict(dictInput)\n         25     return response.body\n         26 \n\n\n    ~/SageMaker/.persisted_conda/python38/lib/python3.8/site-packages/awsSchema/apigateway.py in fromDict(cls, dictInput)\n         31       dictInput should follow apigateway proxy integration\n         32     '''\n    ---> 33     body = dictInput.pop('body')\n         34     return cls(\n         35       body = json.loads(body),\n\n\n    KeyError: 'body'\n\n\n## Query All\n\n```python\n%%time\nsdk.queryAll2()\n```\n\n    succesfully get url, returning pandas\n    CPU times: user 17.1 ms, sys: 137 Âµs, total: 17.2 ms\n    Wall time: 221 ms\n\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cprcode</th>\n      <th>brcode</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>10806.0</td>\n      <td>1010.0</td>\n      <td>513.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>89190.0</td>\n      <td>1028.0</td>\n      <td>869.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>41962.0</td>\n      <td>1021.0</td>\n      <td>920.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>88179.0</td>\n      <td>1004.0</td>\n      <td>725.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1234.0</td>\n      <td>1000.0</td>\n      <td>123.0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>12345.0</td>\n      <td>1000.0</td>\n      <td>345.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>19163.0</td>\n      <td>1027.0</td>\n      <td>745.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>55427.0</td>\n      <td>1022.0</td>\n      <td>561.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>35004.0</td>\n      <td>1002.0</td>\n      <td>625.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>4.0</td>\n      <td>1000.0</td>\n      <td>35.0</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>4.0</td>\n      <td>1000.0</td>\n      <td>35.0</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>4.0</td>\n      <td>1000.0</td>\n      <td>35.0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>4.0</td>\n      <td>1000.0</td>\n      <td>35.0</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>9.0</td>\n      <td>1000.0</td>\n      <td>50.0</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>9.0</td>\n      <td>1000.0</td>\n      <td>50.0</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>9.0</td>\n      <td>1000.0</td>\n      <td>50.0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>9.0</td>\n      <td>1000.0</td>\n      <td>50.0</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>23505.0</td>\n      <td>1000.0</td>\n      <td>187.0</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>3.0</td>\n      <td>1003.0</td>\n      <td>36.0</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>3.0</td>\n      <td>1003.0</td>\n      <td>36.0</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>71386.0</td>\n      <td>1017.0</td>\n      <td>470.0</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>69721.0</td>\n      <td>1006.0</td>\n      <td>843.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thanakijwanavit/villaPricingSdk/tree/master/",
    "keywords": "villa pricing sdk",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "villaPricingSdk",
    "package_url": "https://pypi.org/project/villaPricingSdk/",
    "platform": "",
    "project_url": "https://pypi.org/project/villaPricingSdk/",
    "project_urls": {
      "Homepage": "https://github.com/thanakijwanavit/villaPricingSdk/tree/master/"
    },
    "release_url": "https://pypi.org/project/villaPricingSdk/0.0.2/",
    "requires_dist": [
      "dataclasses-json",
      "boto3",
      "requests",
      "lambdasdk",
      "s3bz",
      "awsSchema"
    ],
    "requires_python": ">=3.6",
    "summary": "A description of your project",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9293225,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94779f3bbca75180049c15aaf4254b0116fb45df8f18e6c51a1fdf8366d95340",
          "md5": "e4d74423a9306645488fc1056c3104e0",
          "sha256": "46720bf13a5c4148e765ec6741eaa6094e47b3d8e218c2a98eb6dc27060cb6f6"
        },
        "downloads": -1,
        "filename": "villaPricingSdk-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4d74423a9306645488fc1056c3104e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18719,
        "upload_time": "2021-02-02T07:01:50",
        "upload_time_iso_8601": "2021-02-02T07:01:50.555963Z",
        "url": "https://files.pythonhosted.org/packages/94/77/9f3bbca75180049c15aaf4254b0116fb45df8f18e6c51a1fdf8366d95340/villaPricingSdk-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "481226b1b07df44e55ad14a86448ca2e3cd3133c50f86d6a66effda20bb2aed2",
          "md5": "9f6c29549792dbac1e6c4b4aa7fa9270",
          "sha256": "68e64da801e436bcffe7c652fbefadd3edd69f0123e7428839bb1894fdd9ca8d"
        },
        "downloads": -1,
        "filename": "villaPricingSdk-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9f6c29549792dbac1e6c4b4aa7fa9270",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17220,
        "upload_time": "2021-02-02T07:01:52",
        "upload_time_iso_8601": "2021-02-02T07:01:52.936714Z",
        "url": "https://files.pythonhosted.org/packages/48/12/26b1b07df44e55ad14a86448ca2e3cd3133c50f86d6a66effda20bb2aed2/villaPricingSdk-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94779f3bbca75180049c15aaf4254b0116fb45df8f18e6c51a1fdf8366d95340",
        "md5": "e4d74423a9306645488fc1056c3104e0",
        "sha256": "46720bf13a5c4148e765ec6741eaa6094e47b3d8e218c2a98eb6dc27060cb6f6"
      },
      "downloads": -1,
      "filename": "villaPricingSdk-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e4d74423a9306645488fc1056c3104e0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18719,
      "upload_time": "2021-02-02T07:01:50",
      "upload_time_iso_8601": "2021-02-02T07:01:50.555963Z",
      "url": "https://files.pythonhosted.org/packages/94/77/9f3bbca75180049c15aaf4254b0116fb45df8f18e6c51a1fdf8366d95340/villaPricingSdk-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "481226b1b07df44e55ad14a86448ca2e3cd3133c50f86d6a66effda20bb2aed2",
        "md5": "9f6c29549792dbac1e6c4b4aa7fa9270",
        "sha256": "68e64da801e436bcffe7c652fbefadd3edd69f0123e7428839bb1894fdd9ca8d"
      },
      "downloads": -1,
      "filename": "villaPricingSdk-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9f6c29549792dbac1e6c4b4aa7fa9270",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17220,
      "upload_time": "2021-02-02T07:01:52",
      "upload_time_iso_8601": "2021-02-02T07:01:52.936714Z",
      "url": "https://files.pythonhosted.org/packages/48/12/26b1b07df44e55ad14a86448ca2e3cd3133c50f86d6a66effda20bb2aed2/villaPricingSdk-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}