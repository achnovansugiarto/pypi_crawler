{
  "info": {
    "author": "AndreiDrang, redV0ID, MaximumQuiet",
    "author_email": "drang.andray@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: AsyncIO",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "\n# python-rucaptcha\n\n[![PyPI version](https://badge.fury.io/py/python-rucaptcha.svg)](https://badge.fury.io/py/python-rucaptcha)\n[![Build Status](https://semaphoreci.com/api/v1/andreidrang/python-rucaptcha-2/branches/master/shields_badge.svg)](https://semaphoreci.com/andreidrang/python-rucaptcha-2)\n[![Maintainability](https://api.codeclimate.com/v1/badges/aec93bb04a277cf0dde9/maintainability)](https://codeclimate.com/github/AndreiDrang/python-rucaptcha/maintainability)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/698b08b078e94e03ab9ba8b098a2b41d)](https://app.codacy.com/app/drang.andray/python-rucaptcha?utm_source=github.com&utm_medium=referral&utm_content=AndreiDrang/python-rucaptcha&utm_campaign=Badge_Grade_Settings)\n![Callback_Server_Status Run](https://img.shields.io/badge/Callback_Server_Status-Run-blue.svg)\n\nБиблиотека предназначена для разрабаотчиков ПО и служит для облегчения работы с API сервиса RuCaptcha.\n\nПрисутствуют [примеры работы с библиотекой](https://github.com/AndreiDrang/python-rucaptcha/tree/master/examples).\n\n**Используется Python версии 3.6+.**\n\n## How to install? Как установить?\n\n### pip\n\n```bash\npip install python-rucaptcha\n```\n\n\n### Source\n```bash\ngit clone https://github.com/AndreiDrang/python-rucaptcha.git\ncd python-rucaptcha\npython setup.py install\n```\n***\nПо всем вопросам можете писать в [Telegram](https://t.me/pythoncaptcha) чат.\n***\n### Последние обновления\n**v.2.0** - Обновление JSON ответа, ключа с информацией об ошибке(создание собственного списка ошибок с уникальными `id`). \nДобавление в `errorBody` двух ключей: `text`(текст ошибки) и `id`(уникальный номер ошибки). [Таблица с ошибками и их номерами](#errors-table).\nЗамена `errorId` и его значений 1/0 на `error` и логические `True`(есть ошибка)/`False`(нет ошибки).\n\n**v.2.2.1** - Вынесение методов для получению решений капчи (как синхронного так и асинхронного) в отдельный файл.\n\n**v.2.3** - Удаление использования временных файлов(для хранения изображений) и замена их на переменную.\n\n**v.2.4** - Добавление `callback`(pingback) параметра для работы со всеми видами капч. Добавление нового модуля для получения результатов решения капчи с сервера - [CallbackClient](https://github.com/AndreiDrang/python-rucaptcha/blob/master/python_rucaptcha/CallbackClient.py). В примеры добавлен [асинхронный сервер(на aiohttp)](https://github.com/AndreiDrang/python-rucaptcha/blob/master/examples/callback_examples/callback_server.py) для обработки POST-запросов от RuCaptcha, а так же [`эмулятор RuCaptcha`](https://github.com/AndreiDrang/python-rucaptcha/blob/master/examples/callback_examples/rucaptcha_server.py), который высылает те же параметры что и настоящий сервер(подойдёт для тестирования обработки решений капчи). \n\n**v.2.5** - Добавление метода для решения `ReCaptcha v3`. Удаление модуля `MediaCaptcha` из библиотеки.\n\n**v.2.5.3** - Добавление `contextmanager` ко всем методам решения капчи.\n\n**v.2.5.4** - Добавление `GeeTest` метода. С синхронным и асинхронным исполнением.\n\n**v.2.6.3** - Добавление `Distil` метода. С синхронным и асинхронным исполнением.\n\n**v.2.6.4** - Добавление `HCaptcha` метода. С синхронным и асинхронным исполнением.\n\n**v.2.6.5** - Добавление `CapyPuzzle` метода. С синхронным и асинхронным исполнением.\n\n**v.3.0** - Удаление кастомных ошибиок и вывода текста о них.\n1. Замена структуры: \n    ```json\n    {\n      \"errorBody\":\n        {\n          \"text\": \"some text\",\n          \"id\": 1\n        }\n    }\n    ```\n1. На структуру: \n    ```json\n    {\n      \"errorBody\": \"ERROR_NAME\"\n    }\n    ```\n***\n### Будущие обновления\nv.4.0 -  Переработка классов и методов. Добавление наследований и переиспользования.\n***\n### Реализованы следующие методы:\n\n0.[Работа через callback(pingback)](https://github.com/AndreiDrang/python-rucaptcha/tree/master/examples/callback_examples).\n\nСтруктура и принцип работы системы подробно [расписан в данной схеме](https://esk.one/p/i7oKYboABXJ/)\n\nКраткий пример:\n\n```python\nimport requests\nfrom python_rucaptcha import ImageCaptcha, RuCaptchaControl, CallbackClient\n# Введите ключ от сервиса RuCaptcha, из своего аккаунта\nRUCAPTCHA_KEY = \"\"\n# Ссылка на изображения для расшифровки\nimage_link = \"\"\n\n# для начала работы нужно зарегистрировать IP/URL(делается с того же IP, который регистрируете):\nRuCaptchaControl.RuCaptchaControl(rucaptcha_key=RUCAPTCHA_KEY).additional_methods(action='add_pingback', addr='http://85.255.8.26/')\n# проверка зарегистрированных адресов\nanswer = RuCaptchaControl.RuCaptchaControl(rucaptcha_key=RUCAPTCHA_KEY).additional_methods(action='get_pingback', json=1)\nprint(answer)\n\n# нужно придумать сложное название очереди(15+ знаков подойдёт) для получения результатов решения капчи\nqueue_name = 'ba86e77f9007_andrei_drang_7436e744_cute_queue'\n# регистрируем очередь на callback сервере\nanswer = requests.post(f'http://85.255.8.26:8001/register_key', json={'key':queue_name, 'vhost': 'rucaptcha_vhost'})\nprint(answer.text)\n\n# создаём задание в сервисе RuCaptcha и указываем `pingback` параметр\ntask_creation_answer = ImageCaptcha.ImageCaptcha(rucaptcha_key=RUCAPTCHA_KEY, \n                                                     pingback=f'85.255.8.26:8001/rucaptcha/image_captcha/{queue_name}', \n                                                    ).captcha_handler(captcha_link=image_link)\n\nprint(task_creation_answer)\n# Два варианта получения решения: кеш(результат хранится 1 час) и  rabbitmq очередь(результат удаляется после первого чтения)\n# подключаемся к серверу и ждём решения капчи из кеша\ncallback_cache_response = CallbackClient.CallbackClient(task_id=task_creation_answer.get('id')).captcha_handler()\n# подключаемся к серверу и ждём решения капчи из RabbitMQ queue\ncallback_queue_response = CallbackClient.CallbackClient(task_id=task_creation_answer.get('id'), queue_name=queue_name, call_type='queue').captcha_handler()\n\nprint(callback_cache_response)\nprint(callback_queue_response)\n```\n\n#### Если вы хотите запустить данный callback сервер у себя:\n\nНебольшая [инструкция-памятка](./examples/callback_examples/readme.txt) по шагам.\n\nУстановить и запустить веб-приложение, которое будет принимать POST-запросы, парсить их, и совершать прочую, нужную вам, магию.\n\n[Пример такого сервера, написанный на aiohttp](./examples/callback_examples/callback_server.py).\n\nВсе тесты можно проводить на локальном сервере, эмулируя POST-запросы от RuCaptcha при помощи [локального клиента](./examples/callback_examples/rucaptcha_server.py).\n\nПримеры создания реальных заданий для callback(pingback) способа вы можете посмотреть в [папке с примерами](./examples), для конкретного метода капчи.\n\n***\n\n#### Работа обычным методом - ожидание решения капчи периодическим опросом сервера.\n\n1.[Решение капчи-изображения(большие и маленькие).](./python_rucaptcha/ImageCaptcha.py)\n\n```python\nfrom python_rucaptcha import ImageCaptcha\n# Введите ключ от сервиса RuCaptcha, из своего аккаунта\nRUCAPTCHA_KEY = \"\"\n# Ссылка на изображения для расшифровки\nimage_link = \"\"\n# Возвращается JSON содержащий информацию для решения капчи\nuser_answer = ImageCaptcha.ImageCaptcha(rucaptcha_key=RUCAPTCHA_KEY).captcha_handler(captcha_link=image_link)\n\nif not user_answer['error']:\n\t# решение капчи\n\tprint(user_answer['captchaSolve'])\n\tprint(user_answer['taskId'])\nelif user_answer['error']:\n\t# Тело ошибки, если есть\n\tprint(user_answer ['errorBody'])\n\tprint(user_answer ['errorBody'])\n```\n\n2.[Решение KeyCaptcha(пазл-капча).](./python_rucaptcha/KeyCaptcha.py)\n\n```python\nfrom python_rucaptcha import KeyCaptcha\n# Введите ключ от сервиса RuCaptcha, из своего аккаунта\nRUCAPTCHA_KEY = ''\n\nanswer = KeyCaptcha.KeyCaptcha(rucaptcha_key=RUCAPTCHA_KEY) \\\n\t.captcha_handler(key_params = {\n\t\t\t\t's_s_c_user_id':15,\n                \t\t's_s_c_session_id':'8f460599bebe02cb0dd096b1fe70b089',\n                \t\t's_s_c_web_server_sign':'edd2c221c05aece19f6db93a36b42272',\n                \t\t's_s_c_web_server_sign2':'15989edaad1b4dc056ec8fa05abc7c9a',\n                \t\t'pageurl':'https://www.keycaptcha.com/signup/'\n\t\t\t}\n\t)\n\n# капча решена верно, ошибка = 0\nif not answer['error']:\n\t# решение капчи\n\tprint(answer['captchaSolve'])\n\tprint(answer['taskId'])\n# во время решения капчи возникли ошибки, ошибка = 1\nelif answer['error']:\n\t# Тело ошибки, если есть\n\tprint(answer['errorBody'])\n``` \n\n3.[Решение ReCaptcha v2.](./python_rucaptcha/ReCaptchaV2.py)\n\n```python\nfrom python_rucaptcha import ReCaptchaV2\n# Введите ключ от сервиса RuCaptcha, из своего аккаунта\nRUCAPTCHA_KEY = \"\"\n# G-ReCaptcha ключ сайта\nSITE_KEY = \"\"\n# Ссылка на страницу с капчёй\nPAGE_URL = \"\"\n# Возвращается JSON содержащий информацию для решения капчи\nuser_answer = ReCaptchaV2.ReCaptchaV2(rucaptcha_key=RUCAPTCHA_KEY).captcha_handler(site_key=SITE_KEY,\n                                                                                   page_url=PAGE_URL)\n\nif not user_answer['error']:\n\t# решение капчи\n\tprint(user_answer['captchaSolve'])\n\tprint(user_answer['taskId'])\nelif user_answer['error']:\n\t# Тело ошибки, если есть\n\tprint(user_answer ['errorBody'])\n\tprint(user_answer ['errorBody'])\n```\n\n4.[Решение ReCaptcha v3.](./python_rucaptcha/ReCaptchaV3.py)\n\n```python\nfrom python_rucaptcha import ReCaptchaV3\n# Введите ключ от сервиса RuCaptcha, из своего аккаунта\nRUCAPTCHA_KEY = \"\"\n# G-ReCaptcha ключ сайта\nSITE_KEY = \"\"\n# Ссылка на страницу с капчёй\nPAGE_URL = \"\"\n# Значение параметра action, которые вы нашли в коде сайта\nACTION = 'verify'\n# Требуемое значение рейтинга (score) работника, от 0.1(робот) до 0.9(человечный человек)\nMIN_SCORE = 0.4\n# Возвращается JSON содержащий информацию для решения капчи\nuser_answer = ReCaptchaV3.ReCaptchaV3(\n                                    rucaptcha_key=RUCAPTCHA_KEY, \n\t\t\t\t                    action = ACTION, \n\t\t\t\t                    min_score = MIN_SCORE).captcha_handler(\n                                                site_key=SITE_KEY,\n\t\t\t\t\t  \t\t\t\t            page_url=PAGE_URL\n                                            )\n\nif not user_answer['error']:\n\t# решение капчи\n\tprint(user_answer['captchaSolve'])\n\tprint(user_answer['taskId'])\n\tprint(user_answer['user_check'])\n\tprint(user_answer['user_score'])\nelif user_answer['error']:\n\t# Тело ошибки, если есть\n\tprint(user_answer ['errorBody'])\n\tprint(user_answer ['errorBody'])\n```\n\n5.[Решение RotateCaptcha(повернуть изображение).](./python_rucaptcha/RotateCaptcha.py)\n\n6.[Решение текстовой капчи.](./python_rucaptcha/TextCaptcha.py)\n\n```python\nfrom python_rucaptcha import TextCaptcha\n# Введите ключ от рукапчи из своего аккаунта\nRUCAPTCHA_KEY = ''\n# Вопрос\ntext_question = 'Если завтра суббота, то какой сегодня день?'\n\nuser_answer = TextCaptcha.TextCaptcha(rucaptcha_key = RUCAPTCHA_KEY).captcha_handler(captcha_text = text_question)\n\nif not user_answer['error']:\n\t# решение капчи\n\tprint(user_answer['captchaSolve'])\n\tprint(user_answer['taskId'])\nelif user_answer['error']:\n\t# Тело ошибки, если есть\n\tprint(user_answer ['errorBody'])\n\tprint(user_answer ['errorBody'])\n```\n\n7.[Решение FunCaptcha.](./python_rucaptcha/FunCaptcha.py)\n\n```python\nfrom python_rucaptcha import FunCaptcha\n# Введите ключ от рукапчи из своего аккаунта\nRUCAPTCHA_KEY = ''\n\n'''\nСтраница на которой находится FunCaptch: \nhttps://www.funcaptcha.com/demo\nДанные взятые из этой страницы о данной капче:\n'''\npublic_key = 'DE0B0BB7-1EE4-4D70-1853-31B835D4506B'\npageurl = 'https://www.funcaptcha.com/demo'\n\nanswer = FunCaptcha.FunCaptcha(rucaptcha_key = RUCAPTCHA_KEY).captcha_handler(public_key=public_key, page_url=pageurl)\n\nif not answer['error']:\n    # решение капчи\n    print(answer['captchaSolve'])\n    print(answer['taskId'])\nelif answer['error']:\n    # Тело ошибки, если есть\n    print(answer ['errorBody'])\n\n```\n8.[Модуль для получения инофрмации о балансе аккаунта и отправке жалоб.](./python_rucaptcha/RuCaptchaControl.py)\n\n```python\nfrom python_rucaptcha.RuCaptchaControl import RuCaptchaControl\n# Введите ключ от рукапчи из своего аккаунта\nRUCAPTCHA_KEY = ''\n\nJsSha1 = \"af2d0557c23ff2d8f40ccf4bec57e480704634e9\"\nJsUri = \"http://www.targetwebsite.com/pvvhnzyazwpzgkhv.js\"\nJsData = \"IWZ1bmN0fewfwefwefwef9905j0g4905jh9046hj3cpCg==\"\n\nanswer = RuCaptchaControl(rucaptcha_key=RUCAPTCHA_KEY).additional_methods(\n            action=\"getbalance\"\n        )\n\nif not answer[\"error\"]:\n    print(\"Your balance is: \", answer[\"serverAnswer\"], \" rub.\")\n\nelif answer[\"error\"]:\n    # Тело ошибки, если есть\n    print(answer[\"errorBody\"])\n\n# Пример отправки жалобы на неправильно решённую капчу под ID \"666\"\nwrong_captcha_id = 666\n\nanswer = RuCaptchaControl(rucaptcha_key=RUCAPTCHA_KEY).additional_methods(\n            action=\"reportbad\", id=wrong_captcha_id\n        )\n\n# Если заявка принята\nif not answer[\"error\"]:\n    print(\"Заявка принята.\")\n\n# Если возникла ошибка\nelif answer[\"error\"]:\n    print(answer[\"errorBody\"])\n```\n9.[Решение HCaptcha.](./python_rucaptcha/HCaptcha.py)\n\n```python\nfrom python_rucaptcha.HCaptcha import HCaptcha\nRUCAPTCHA_KEY = ''\n\nwebsite_link = \"https://secure2.e-konsulat.gov.pl/Uslugi/RejestracjaTerminu.aspx?IDUSLUGI=1&IDPlacowki=94\"\ndata_sitekey = \"39fccce0-e3e3-4f9d-a942-ea415c102beb\"\n\nanswer = HCaptcha(rucaptcha_key=RUCAPTCHA_KEY).captcha_handler(\n    site_key=data_sitekey, page_url=website_link\n)\n\nif not answer['error']:\n    # решение капчи\n    print(answer['captchaSolve'])\n    print(answer['taskId'])\nelif answer['error']:\n    # Тело ошибки, если есть\n    print(answer ['errorBody'])\n\n```\n10.[Решение CapyPuzzle.](./python_rucaptcha/CapyPuzzle.py)\n\n```python\nfrom python_rucaptcha.CapyPuzzle import CapyPuzzle\nRUCAPTCHA_KEY = ''\n\ncaptchakey=\"PUZZLE_Cme4hZLjuZRMYC3uh14C52D3uNms5w\"\npage_url=\"https://www.capy.me/account/register/\"\n\nanswer = CapyPuzzle(rucaptcha_key=RUCAPTCHA_KEY).captcha_handler(\n            captchakey=captchakey, page_url=page_url\n        )\n\nif not answer['error']:\n    # решение капчи\n    print(answer['captchaSolve'])\n    print(answer['taskId'])\nelif answer['error']:\n    # Тело ошибки, если есть\n    print(answer ['errorBody'])\n\n```\n***\nКроме того, для тестирования различных типов капчи предоставляется [специальный сайт](http://85.255.8.26/), на котором собраны все имеющиеся типы капчи, с удобной системой тестирования ваших скриптов.\n***\n### Errors description. Описания ошибок\n**В обоих ссылках находятся валидные описания ошибок**\n1. https://rucaptcha.com/api-rucaptcha#in_errors\n1. https://rucaptcha.docs.apiary.io/#reference/2\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AndreiDrang/python-rucaptcha",
    "keywords": "captcha rucaptcha python3 flask recaptcha captcha security api python-library python-rucaptcha rucaptcha-client",
    "license": "AGPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-rucaptcha-session-patch",
    "package_url": "https://pypi.org/project/python-rucaptcha-session-patch/",
    "platform": "",
    "project_url": "https://pypi.org/project/python-rucaptcha-session-patch/",
    "project_urls": {
      "Homepage": "https://github.com/AndreiDrang/python-rucaptcha"
    },
    "release_url": "https://pypi.org/project/python-rucaptcha-session-patch/3.0/",
    "requires_dist": [
      "requests (==2.23.0)",
      "aiohttp (==3.6.2)",
      "pika (==1.1.0)"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Python 3.6+ RuCaptcha library with AIO module.",
    "version": "3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8101951,
  "releases": {
    "3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb2b36819132ca230bbf3632a318569a45b9acec54c49d009edd2fbedad92e68",
          "md5": "cd705ce2ef5e46d085eae1c8e3cfbaba",
          "sha256": "85448378a5227df108a74371d3a351da33be42df94ad6db54ecdf8a52f6167bc"
        },
        "downloads": -1,
        "filename": "python_rucaptcha_session_patch-3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd705ce2ef5e46d085eae1c8e3cfbaba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 54519,
        "upload_time": "2020-09-03T11:57:00",
        "upload_time_iso_8601": "2020-09-03T11:57:00.767012Z",
        "url": "https://files.pythonhosted.org/packages/cb/2b/36819132ca230bbf3632a318569a45b9acec54c49d009edd2fbedad92e68/python_rucaptcha_session_patch-3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef37c08b2ff638caac04af4894aab3752f22a5c37ee400e66e298d029f4207e1",
          "md5": "a9dd2dee55edb0f4176569c3324fa79d",
          "sha256": "09dec426787b746fa2d6f3dcbfb8e9a5f328fbcec1f2d5cc690db5aa03473569"
        },
        "downloads": -1,
        "filename": "python-rucaptcha-session-patch-3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a9dd2dee55edb0f4176569c3324fa79d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 39938,
        "upload_time": "2020-09-03T11:57:04",
        "upload_time_iso_8601": "2020-09-03T11:57:04.112952Z",
        "url": "https://files.pythonhosted.org/packages/ef/37/c08b2ff638caac04af4894aab3752f22a5c37ee400e66e298d029f4207e1/python-rucaptcha-session-patch-3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cb2b36819132ca230bbf3632a318569a45b9acec54c49d009edd2fbedad92e68",
        "md5": "cd705ce2ef5e46d085eae1c8e3cfbaba",
        "sha256": "85448378a5227df108a74371d3a351da33be42df94ad6db54ecdf8a52f6167bc"
      },
      "downloads": -1,
      "filename": "python_rucaptcha_session_patch-3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cd705ce2ef5e46d085eae1c8e3cfbaba",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 54519,
      "upload_time": "2020-09-03T11:57:00",
      "upload_time_iso_8601": "2020-09-03T11:57:00.767012Z",
      "url": "https://files.pythonhosted.org/packages/cb/2b/36819132ca230bbf3632a318569a45b9acec54c49d009edd2fbedad92e68/python_rucaptcha_session_patch-3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef37c08b2ff638caac04af4894aab3752f22a5c37ee400e66e298d029f4207e1",
        "md5": "a9dd2dee55edb0f4176569c3324fa79d",
        "sha256": "09dec426787b746fa2d6f3dcbfb8e9a5f328fbcec1f2d5cc690db5aa03473569"
      },
      "downloads": -1,
      "filename": "python-rucaptcha-session-patch-3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a9dd2dee55edb0f4176569c3324fa79d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 39938,
      "upload_time": "2020-09-03T11:57:04",
      "upload_time_iso_8601": "2020-09-03T11:57:04.112952Z",
      "url": "https://files.pythonhosted.org/packages/ef/37/c08b2ff638caac04af4894aab3752f22a5c37ee400e66e298d029f4207e1/python-rucaptcha-session-patch-3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}