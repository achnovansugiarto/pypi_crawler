{
  "info": {
    "author": "Mozilla Foundation",
    "author_email": "dev-webdev@lists.mozilla.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment :: Mozilla",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "Redash-Iodide\n=============\n\n`Redash <https://redash.io>`_ extensions for `Iodide <https://iodide.io/>`_.\n\n.. image:: https://circleci.com/gh/iodide-project/redash-iodide.svg?style=svg\n    :target: https://circleci.com/gh/iodide-project/redash-iodide\n\n.. image:: https://codecov.io/gh/iodide-project/redash-iodide/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/iodide-project/redash-iodide\n\n.. image:: https://img.shields.io/badge/calver-YYYY.M.PATCH-22bfda.svg\n   :target: https://calver.org/\n   :alt: CalVer - Timely Software Versioning\n\nOverview\n--------\n\nInherits Redash's Docker setup\n  redash-iodide is using Redash's own Docker image for development to implement\n  a close development/production parity and extends it in various ways, e.g.\n  an own docker-compose configuration, an own docker-entrypoint script.\n\n  Please review the `Redash Docker installation guidelines <https://redash.io/help/open-source/dev-guide/docker>`_ before continuing. It's important to\n  know those basics since many decisions for redash-iodide were derived from\n  it. Thank you.\n\nIs mounted under /extension\n  The current working directory (the directory with this ``README.rst``) is\n  mounted under the path ``/extension`` by docker-compose inside the Docker\n  container.\n\nRuns with Redash in /app\n  Since it reuses the Redash Docker image, you can find all the Redash setup\n  under the ``/app`` directory inside the Docker container.\n\nUses Redash's \"entrypoints\" for discovery\n  The way Redash finds new extensions is by using the so called \"entrypoints\"\n  of Python packages, metadata that is specified and distributed in\n  Python packages, that is read out by Redash at runtime to find the filesystem\n  locations for Redash extensions.\n\n  That's true for three kinds of entrypoints:\n\n  ``redash.extensions``\n    Python callables to be used to extend the Redash Flask app, e.g.\n    ``redash_iodide.explore.extension:extension``.\n\n  ``redash.bundles``\n    Python packages that contain additional front-end files for the\n    webpack build process, e.g. ``redash_iodide.explore``.\n\n  ``redash.periodic_tasks``\n    Python callables that return parameters for periodic Celery tasks.\n\nHooks into Webpack\n  Since Redash extensions like redash-iodide can also provide additional Webpack\n  bundles, the development setup runs Redash's `bundle-extension script <https://github.com/getredash/redash/blob/master/bin/bundle-extensions>`_ periodically\n  to copy the files from redash-iodide to the right place for webpack to pick\n  them up (``/app/client/app/extensions``).\n\n  See the section about the webpack development server below for more\n  information.\n\nDevelopment workflow\n--------------------\n\nWe provide some convenience Make tasks to be run from your host machine\n(not inside the Docker container) to ease this non-trivial application setup:\n\nBuild and update the local Docker image\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nMany of the helpers below will implicitely run docker-compose to start the\nRedash containers and in effect automatically build the local Docker image\nas well if it doesn't exist.\n\nIf you'd like to build the local Docker image separately or if you'd like to\nfetch the latest version of the base Redash Docker image, e.g. in the event\nof a new Redash release or other changes in this project, please run the\nfollowing::\n\n    make build\n\nBehind the scenes\n   This will run ``docker-compose build --pull`` which will pull updates to\n   the Docker images used by the docker-compose setup, including the Redash,\n   Redis and Postgres images.\n\nCreate the database\n~~~~~~~~~~~~~~~~~~~\n\nOn you command line run this **ONCE** to create the database for\nRedash/redash-iodide setup:\n\n::\n\n    make database\n\nThis uses Redash's own ability and redash-iodide is just set up to reuse it.\n\nBehind the scenes\n  This will run docker-compose to create the server container that is\n  running the Redash Python server and in effect the Redis and Postgres\n  containers, too.\n\n  It will then initialize the Postgres tables needed for Redash.\n\nInstall npm modules\n~~~~~~~~~~~~~~~~~~~\n\nThen we'll install the Redash npm modules inside the server container::\n\n    make node_modules\n\nBehind the scenes\n  This will run ``npm install`` inside the server in the ``/app`` directory,\n  which is the directory with Redash's code from the Redash Docker base\n  image.\n\n  NOTE, the redash-iodide development setup mounts the ``/app/node_modules``\n  directory as a separate Docker volume, that will be maintained by Docker\n  and won't show up in or transfer to the host machine where Docker is\n  running.\n\nStart the containers\n~~~~~~~~~~~~~~~~~~~~\n\nTo start the whole set of Docker containers for a working environment\n(Redash server, Celery workers, Redis, Postgres) all you need to run is this::\n\n    make up\n\nBehind the scenes\n  This is pretty simply running ``docker-compose up``, to launch all\n  containers of the redash-iodide Docker setup.\n\n  NOTE: This **requires** first installing npm modules inside the container\n  above and creating the database as well!\n\nRun webpack devserver\n~~~~~~~~~~~~~~~~~~~~~\n\nIf you're developing a Redash extension that includes an additional webpack\nbundle (which will need to be included in Redash's webpack build process\nto be shipped in the client application bundle) you'll want to use the webpack\ndevelopment server.\n\nIt automatically compiles the Redash client application bundle on files\nchanges and proxies requests for the Redash server via a proxy running\non port 8080 (instead of the usual Redash port of 5000).\n\nAfter starting the containers using the description in the above step,\nopen a second terminal and **additionally run**::\n\n    make devserver\n\nBehind the scenes\n  This will run the webpack devserver in another instance of the server\n  container (not the same as when running ``make up``) and runs a script\n  that listens for files changes to ``.js`` and ``.jsx`` files in the\n  ``/extension`` directory.\n\n  When changes are detected, it'll automatically run Redash's\n  ``bundle-extensions`` script that does the heavy lifting of copying\n  the changed extension files into the ``/app/client/app/extensions``\n  directory, which triggers the webpack devserver to recompile the\n  client application bundle.\n\n  NOTE: This **requires** opening the Redash instance via\n  http://localhost:8080/ instead of http://localhost:5000/ to go through\n  the webpack devserver.\n\n\nStart shell\n~~~~~~~~~~~\n\nIn case you need to do any debugging or file system checks inside the\nserver container, you can create a bash shell by running::\n\n    make bash\n\nBehind the scenes\n  Any changes you make here outside the ``/extension`` directory\n  (which is mounted as a Docker volume with the current working directory on\n  the Docker host machine) and the following directores are not persisted.\n\n  List of directories inside the container that are mounted as Docker volumes:\n\n  ``/extension``\n    Maps the current working directory (where this README.rst is located)\n    on the host machine for developing the extension.\n\n  ``/home/redash/.cache``\n    Used by pip and other scripts,\n\n  ``/app/client/dist``\n    Directory to retain webpack build results, so webpack builds don't take\n    as long on consecutive runs.\n\n  ``/home/redash/.local``\n    Directory for \"user-installed\" Python packages. If you'd like you can\n    easily install additonal Python packages with the Docker container user\n    Redash using ``pip install --user <package>``. Installed scripts from\n    those packages will be found under ``/home/redash/.local/bin`` but\n    are also automatically added to ``PATH``.\n\n  ``/app/node_modules``\n    Directory for npm modules, that are installed when running ``npm install``\n    inside of ``/app`` in the container. Retained to make use of native npm\n    caching between consecutive runs.\n\nRun tests\n~~~~~~~~~\n\nRunning the Python based tests requires first creating a separate database\n(implemented by the ``test_database`` Make task) and then running the test\nrunner inside the container. The test database is not the same as the\ndatabse in use for regular development (e.g. to not overwrite development\ndata).\n\nFrontend or integration tests are currently not supported.\n\nTo run the tests (from the host machine) run::\n\n    make test\n\nThis will automatically run the ``test_database`` Make task before running\nthe tests.\n\nBehind the scenes\n  When launching the tests runner it'll the regular server container,\n  but also set the ``REDASH_DATABASE_URL`` environment variable to the\n  test database to prevent overwriting any data that you added to the\n  database the regular Redash interface (e.g. data sources, queries etc).\n\n  By default it uses `pytest <https://docs.pytest.org/>`_ to run\n  the Python tests in ``/extension``, with a number of parameters as\n  defined in the ``pytest.ini``.\n\n  If you'd like to add additional parameters to pytest simply appened the\n  command line arguments in ``pytest.ini``.\n\n  Alternatively, e.g. if you'd like to use `pdb <https://docs.python.org/3/library/pdb.html>`_ to debug a test, do this:\n\n  create the test database from the host machine\n    ``make test_database``\n\n  start a Bash shell in the container\n    ``make bash``\n\n  set the ``REDASH_DATABASE_URL`` env var in the container\n    ``export REDASH_DATABASE_URL=\"postgresql://postgres@postgres/tests\"``\n\n  change direcotry to extensio code\n    ``cd /extension``\n\n  run the tests with whatever parameter\n    ``pytest -vvv --pdb``\n\nIssues & questions\n------------------\n\nSee the `issue tracker on GitHub <https://github.com/iodide-project/redash-iodide/issues>`_\nto open tickets if you have issues or questions about Redash-iodide.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MPL-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "redash-iodide",
    "package_url": "https://pypi.org/project/redash-iodide/",
    "platform": "",
    "project_url": "https://pypi.org/project/redash-iodide/",
    "project_urls": {
      "homepage": "https://github.com/iodide-project/redash-iodide"
    },
    "release_url": "https://pypi.org/project/redash-iodide/2020.1.0/",
    "requires_dist": [
      "requests",
      "six",
      "watchdog ; extra == 'dev'",
      "flake8 (==3.5.0) ; extra == 'test'",
      "mock ; extra == 'test'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "pytest-flake8 (<1.0.1) ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Extensions to Redash for Iodide by Mozilla",
    "version": "2020.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16364117,
  "releases": {
    "2019.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c306ae6429cace8993926fc327c6ba00e3dd861b2f2863f03b0eae0b6c2bda5",
          "md5": "b71d5ce0ee9002e7438cd7fc095da7c5",
          "sha256": "b34c76cdeac5a17560c8a65e8830a871c43d197b67a181d49f9d44df4fe906a7"
        },
        "downloads": -1,
        "filename": "redash_iodide-2019.11.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "b71d5ce0ee9002e7438cd7fc095da7c5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "==2.*,>=2.7.0",
        "size": 16939,
        "upload_time": "2019-11-18T12:32:13",
        "upload_time_iso_8601": "2019-11-18T12:32:13.177297Z",
        "url": "https://files.pythonhosted.org/packages/2c/30/6ae6429cace8993926fc327c6ba00e3dd861b2f2863f03b0eae0b6c2bda5/redash_iodide-2019.11.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52f63ae3701af06ae98b4c8064925dce6acca44836db9fe705e96f797319c71f",
          "md5": "347384e82fb9063370b3d696f127ac59",
          "sha256": "e7bddd0e8ccf0119947efadd3ca2a96ef9eebc9d2195a9ce8b3532ada67163bf"
        },
        "downloads": -1,
        "filename": "redash-iodide-2019.11.0.tar.gz",
        "has_sig": true,
        "md5_digest": "347384e82fb9063370b3d696f127ac59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "==2.*,>=2.7.0",
        "size": 25723,
        "upload_time": "2019-11-18T12:32:14",
        "upload_time_iso_8601": "2019-11-18T12:32:14.911274Z",
        "url": "https://files.pythonhosted.org/packages/52/f6/3ae3701af06ae98b4c8064925dce6acca44836db9fe705e96f797319c71f/redash-iodide-2019.11.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef1972d6a1444615408055d3d58eba971936ad8330fb199d58e0eacfab658664",
          "md5": "12773a9c31b745e58a3197010357f781",
          "sha256": "44ab6e33df2aa0826b6210c391b2c146d6c00d4aaef0e722a50da483abdc20d0"
        },
        "downloads": -1,
        "filename": "redash_iodide-2020.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12773a9c31b745e58a3197010357f781",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 16776,
        "upload_time": "2020-01-16T13:07:38",
        "upload_time_iso_8601": "2020-01-16T13:07:38.347628Z",
        "url": "https://files.pythonhosted.org/packages/ef/19/72d6a1444615408055d3d58eba971936ad8330fb199d58e0eacfab658664/redash_iodide-2020.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d65b20dba842ad6e88960d50b6eeabbc5157721308c6ac977d54d2ba224b25dc",
          "md5": "e464cbce7e822700be2a0343d883e4c4",
          "sha256": "ef2e41cbd3a9fe947578d4dce634f8a1733ccb9a90e96f037f1ab20add4882f3"
        },
        "downloads": -1,
        "filename": "redash-iodide-2020.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e464cbce7e822700be2a0343d883e4c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25016,
        "upload_time": "2020-01-16T13:07:39",
        "upload_time_iso_8601": "2020-01-16T13:07:39.547442Z",
        "url": "https://files.pythonhosted.org/packages/d6/5b/20dba842ad6e88960d50b6eeabbc5157721308c6ac977d54d2ba224b25dc/redash-iodide-2020.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef1972d6a1444615408055d3d58eba971936ad8330fb199d58e0eacfab658664",
        "md5": "12773a9c31b745e58a3197010357f781",
        "sha256": "44ab6e33df2aa0826b6210c391b2c146d6c00d4aaef0e722a50da483abdc20d0"
      },
      "downloads": -1,
      "filename": "redash_iodide-2020.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12773a9c31b745e58a3197010357f781",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 16776,
      "upload_time": "2020-01-16T13:07:38",
      "upload_time_iso_8601": "2020-01-16T13:07:38.347628Z",
      "url": "https://files.pythonhosted.org/packages/ef/19/72d6a1444615408055d3d58eba971936ad8330fb199d58e0eacfab658664/redash_iodide-2020.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d65b20dba842ad6e88960d50b6eeabbc5157721308c6ac977d54d2ba224b25dc",
        "md5": "e464cbce7e822700be2a0343d883e4c4",
        "sha256": "ef2e41cbd3a9fe947578d4dce634f8a1733ccb9a90e96f037f1ab20add4882f3"
      },
      "downloads": -1,
      "filename": "redash-iodide-2020.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e464cbce7e822700be2a0343d883e4c4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 25016,
      "upload_time": "2020-01-16T13:07:39",
      "upload_time_iso_8601": "2020-01-16T13:07:39.547442Z",
      "url": "https://files.pythonhosted.org/packages/d6/5b/20dba842ad6e88960d50b6eeabbc5157721308c6ac977d54d2ba224b25dc/redash-iodide-2020.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}