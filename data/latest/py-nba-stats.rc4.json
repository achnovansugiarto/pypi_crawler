{
  "info": {
    "author": "Kelvin Hu",
    "author_email": "kelvin.hu.1203@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# This is a package to get NBA stats from scraping yahoo.com\n\nThere are 2 main classes in this package\n* DataAttribute\n* Player\n* Team\n\n## DataAttribute\n* this is the return value from most of the Player methods\n* Attributes:\n  * names: list = field(default_factory=list)\n  * num_game: int = 1\n  * fg_made: float = 0.0\n  * fg_attempt: float = 0.0\n  * three_made: float = 0.0\n  * three_attempt: float = 0.0\n  * ft_made: float = 0.0\n  * ft_attempt: float = 0.0\n  * rebound: float = 0.0\n  * assist: float = 0.0\n  * turnover: float = 0.0\n  * steal: float = 0.0\n  * block: float = 0.0\n  * point: float = 0.0\n\n## Player\n* Attributes:\n  * name (string):                              player's full name\n  * player_id (int):                            player 4 digit id\n  * game_raw_data (BeautifulSoup object):       internal data for processing\n  * yearly_raw_data (BeautifulSoup object):     internal data for processing\n  * team (string):                              player's team\n  * number (int):                               player's number\n  * avg_pt (float):                             average point for current season\n  * avg_reb (float):                            average rebound for current season\n  * avg_ast (float):                            average assist for current season\n  * position (string):                          position\n  * college (string):                           college the player attended\n\n* Methods:\n  * get_yearly_data(self, year='current')\n    * return the yearly average represented by DataAttribute dataclass\n\t* required parameters:\n\t  * year (int): a 4 digit formatted year, eg, 2019. If it's \"current\", it'll get the current year\n\n  * get_recent_games_data(self, game_type='all', home_only=False, away_only=False, games=5, year='current')\n    * return a list of DataAttribute objects\n\t* required parameters:\n\t  * game_type (string): accepted types are all, reg, or post, default=all\n      * home_only (bool):   home game only, default=False\n      * away_only (bool):   away game only, default=False\n      * games (int):        the number of games, default=5\n      * year (int):         a 4 digit formatted year, eg, 2019. If it's \"current\", it'll get the current year. default=current\n\n  * get_recent_games_avg_stats(self, game_type='all', home_only=False, away_only=False, games=5, year='current')\n    * return a list of DataAttribute objects\n\t* required parameters:\n\t  * game_type (string): accepted types are all, reg, or post, default=all\n      * home_only (bool):   home game only, default=False\n      * away_only (bool):   away game only, default=False\n      * games (int):        the number of games, default=5\n      * year (int):         a 4 digit formatted year, eg, 2019. If it's \"current\", it'll get the current year. default=current\n\n  * get_data_by_opponentt(self, oppo, game_type='all', year='current')\n    * return a list of DataAttribute objects\n\t* required parameters:\n\t  * game_type (string): accepted types are all, reg, or post, default=all\n      * home_only (bool):   home game only, default=False\n      * away_only (bool):   away game only, default=False\n      * games (int):        the number of games, default=5\n      * year (int):         a 4 digit formatted year, eg, 2019. If it's \"current\", it'll get the current year. default=current\n\n  * get_avg_stats_by_opponent(self, oppo, game_type='all', year='current')\n    * return the average stats against a particular opponent represented by DataAttribute dataclass\n\t* required parameters:\n\t  * oppo (string):      the 3 charater team name, eg, \"BKN\"\n      * game_type (string): accepted types are all, reg, or post, default=all\n      * year (int):         a 4 digit formatted year, eg, 2019. If it's \"current\", it'll get the current year. default=current\n\n  * clear_cache(self)\n    * clear caches\n\t* requred parameters:\n\t  * None\n## Team\n* Attributes:\n  * name (string):                      team name\n  * win (int):                          number of wins for current season\n  * loss (int):                         number of loss for current season\n  * pt (float):                         average point\n  * reb (float):                        average rebound\n  * fg (float):                         average fild goal percentage\n  * percent_3pt (float):                average 3 point percentage\n  * standing (string):                  team standing\n  * raw_data (BeautifulSoup object):    internal data for processing\n  * players (list[Player]):             list of player objects\n\n## Example\n* ```\n  from nba_stats import nba_stats\n  player = nba_stats.Player('Stephen Curry')\n  player.get_yearly_data()\n  DataAttribute(names=['2020-21'], num_game='4', fg_made=8.3, fg_attempt=20.0, three_made=3.5, three_attempt=11.0, ft_made=6.5, ft_attempt=6.5, rebound=3.8, assist=7.0, turnover=4.3, steal=1.8, block=0.5, point=26.5)\n  player.get_avg_stats_by_opponent('CLE', year=2019)\n  DataAttribute(names=['@CLE'], num_game=1, fg_made=6.0, fg_attempt=14.0, three_made=1.0, three_attempt=3.0, ft_made=1.0, ft_attempt=2.0, rebound=6.0, assist=5.0, turnover=2.0, steal=0.0, block=0.0, point=14.0)\n\n  team = nba_stats.Team('Golden State Warriors')\n  team.pt\n  111.0\n  team.win\n  2\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/monootc/nba_stats",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-nba-stats",
    "package_url": "https://pypi.org/project/py-nba-stats/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-nba-stats/",
    "project_urls": {
      "Homepage": "https://github.com/monootc/nba_stats"
    },
    "release_url": "https://pypi.org/project/py-nba-stats/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A package for scraping NBA stats from yahoo",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9035767,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76482c1419129f4e916b0912553dae4d094eb06a57a6fe8f24116dba5aec94f8",
          "md5": "6552273efcb7d42735bad3549bdfa421",
          "sha256": "a309ff7d0f00ef474b7f56b6fee80e48d3eaa244532c94481624bdf350c735a2"
        },
        "downloads": -1,
        "filename": "py_nba_stats-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6552273efcb7d42735bad3549bdfa421",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31179,
        "upload_time": "2021-01-02T07:09:06",
        "upload_time_iso_8601": "2021-01-02T07:09:06.749992Z",
        "url": "https://files.pythonhosted.org/packages/76/48/2c1419129f4e916b0912553dae4d094eb06a57a6fe8f24116dba5aec94f8/py_nba_stats-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf6c36b5a2dda3341647beb323aa6c34788a76b34a26a1b8512b5926864b76d1",
          "md5": "e901cd6f1ed0fd2a3450cd52c3ccfd52",
          "sha256": "2ed4252ced2658c87d8a94e13ee4c382190265617b6ca81f2b40d33c61630f14"
        },
        "downloads": -1,
        "filename": "py-nba-stats-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e901cd6f1ed0fd2a3450cd52c3ccfd52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27487,
        "upload_time": "2021-01-02T07:09:07",
        "upload_time_iso_8601": "2021-01-02T07:09:07.702724Z",
        "url": "https://files.pythonhosted.org/packages/bf/6c/36b5a2dda3341647beb323aa6c34788a76b34a26a1b8512b5926864b76d1/py-nba-stats-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f57c922b51376ff18784d088e0606a221c62fd81e5eb4366a763f24fc93c6af9",
          "md5": "7d23f112decee5e49f6eef2798b4130b",
          "sha256": "20fec6fa32c93b6405ce353fd2cd589d285fa72f6466b1e85f081da9e90d9028"
        },
        "downloads": -1,
        "filename": "py_nba_stats-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d23f112decee5e49f6eef2798b4130b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31181,
        "upload_time": "2021-01-02T07:13:49",
        "upload_time_iso_8601": "2021-01-02T07:13:49.341958Z",
        "url": "https://files.pythonhosted.org/packages/f5/7c/922b51376ff18784d088e0606a221c62fd81e5eb4366a763f24fc93c6af9/py_nba_stats-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37df0a605c741d8f7804a0ea8a0de070cd566226da7124822ba2a8d7a30e69fd",
          "md5": "1088ecef4655390ad70353bba3fec92a",
          "sha256": "88584b73732fe529f3a0b1ae5fd112992771d476208de2051bef5dbaed9f0fa8"
        },
        "downloads": -1,
        "filename": "py-nba-stats-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1088ecef4655390ad70353bba3fec92a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27484,
        "upload_time": "2021-01-02T07:13:50",
        "upload_time_iso_8601": "2021-01-02T07:13:50.443670Z",
        "url": "https://files.pythonhosted.org/packages/37/df/0a605c741d8f7804a0ea8a0de070cd566226da7124822ba2a8d7a30e69fd/py-nba-stats-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80b650f5244e1b79f075359f85d7481a4f84581102f1ae13436215b75f7b2bf9",
          "md5": "e04c429453a0ee827418270e936c7781",
          "sha256": "c9e5faaaa6cf6fb47e41e6444915db46cf43ab3edb60324a074fc1fa688b3e33"
        },
        "downloads": -1,
        "filename": "py_nba_stats-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e04c429453a0ee827418270e936c7781",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31212,
        "upload_time": "2021-01-02T07:33:36",
        "upload_time_iso_8601": "2021-01-02T07:33:36.251004Z",
        "url": "https://files.pythonhosted.org/packages/80/b6/50f5244e1b79f075359f85d7481a4f84581102f1ae13436215b75f7b2bf9/py_nba_stats-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04403ee30e1442dd8d1b9f83e9f19343c14bf293f9a3ea714324c2c54da70142",
          "md5": "026a57ee3142e0238d646d383203d0c5",
          "sha256": "b50639a1f82d6b06a3c2670f34879b5e135b8d3b98959587c28d54032fc0b726"
        },
        "downloads": -1,
        "filename": "py-nba-stats-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "026a57ee3142e0238d646d383203d0c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27517,
        "upload_time": "2021-01-02T07:33:37",
        "upload_time_iso_8601": "2021-01-02T07:33:37.745993Z",
        "url": "https://files.pythonhosted.org/packages/04/40/3ee30e1442dd8d1b9f83e9f19343c14bf293f9a3ea714324c2c54da70142/py-nba-stats-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "138c98f7699855919e5677a9f4de561ffae2f8713b2a8e489862ba06d675f908",
          "md5": "ff13f730bedef2f86af2784049ea2d30",
          "sha256": "89a123659222b21b32bbf9c1bbdc24be08edc50ea98036e42998e4443f74bcd3"
        },
        "downloads": -1,
        "filename": "py_nba_stats-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff13f730bedef2f86af2784049ea2d30",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31486,
        "upload_time": "2021-01-02T07:55:30",
        "upload_time_iso_8601": "2021-01-02T07:55:30.741471Z",
        "url": "https://files.pythonhosted.org/packages/13/8c/98f7699855919e5677a9f4de561ffae2f8713b2a8e489862ba06d675f908/py_nba_stats-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f492919f0116914c587821ffd1f807a1c1ce608343639dbe79ee9669feaf3d1",
          "md5": "8c23dd49746e579c3cd6ed27e9d96d69",
          "sha256": "4a9c59bfd81f878293b0948b050adf9cb3f4885a082a24cf6147d1119ef52233"
        },
        "downloads": -1,
        "filename": "py-nba-stats-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8c23dd49746e579c3cd6ed27e9d96d69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28060,
        "upload_time": "2021-01-02T07:55:32",
        "upload_time_iso_8601": "2021-01-02T07:55:32.144582Z",
        "url": "https://files.pythonhosted.org/packages/4f/49/2919f0116914c587821ffd1f807a1c1ce608343639dbe79ee9669feaf3d1/py-nba-stats-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "138c98f7699855919e5677a9f4de561ffae2f8713b2a8e489862ba06d675f908",
        "md5": "ff13f730bedef2f86af2784049ea2d30",
        "sha256": "89a123659222b21b32bbf9c1bbdc24be08edc50ea98036e42998e4443f74bcd3"
      },
      "downloads": -1,
      "filename": "py_nba_stats-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ff13f730bedef2f86af2784049ea2d30",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 31486,
      "upload_time": "2021-01-02T07:55:30",
      "upload_time_iso_8601": "2021-01-02T07:55:30.741471Z",
      "url": "https://files.pythonhosted.org/packages/13/8c/98f7699855919e5677a9f4de561ffae2f8713b2a8e489862ba06d675f908/py_nba_stats-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4f492919f0116914c587821ffd1f807a1c1ce608343639dbe79ee9669feaf3d1",
        "md5": "8c23dd49746e579c3cd6ed27e9d96d69",
        "sha256": "4a9c59bfd81f878293b0948b050adf9cb3f4885a082a24cf6147d1119ef52233"
      },
      "downloads": -1,
      "filename": "py-nba-stats-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "8c23dd49746e579c3cd6ed27e9d96d69",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 28060,
      "upload_time": "2021-01-02T07:55:32",
      "upload_time_iso_8601": "2021-01-02T07:55:32.144582Z",
      "url": "https://files.pythonhosted.org/packages/4f/49/2919f0116914c587821ffd1f807a1c1ce608343639dbe79ee9669feaf3d1/py-nba-stats-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}