{
  "info": {
    "author": "Peng Li",
    "author_email": "lipengpublic@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# AutoFJ\n\nThe official code for our SIGMOD 2021 paper: [Auto-FuzzyJoin: Auto-Program Fuzzy Similarity Joins Without Labeled Examples](https://arxiv.org/abs/2103.04489). To reproduce the main results in our paper, switch to `reproduce` branch.\n\nAutoFJ automatically produces record pairs that approximately match in two input\ntables without requiring explicit human input such as labeled training data. Using AutoFJ, \nusers only need to provide two input tables, and a desired precision target (say 0.9). \nAutoFJ leverages the fact that one of the input is a reference table to \nautomatically program fuzzy-joins that meet the precision target in expectation, \nwhile maximizing fuzzy-join recall (defined as the number of correctly joined records).\n\nIn AutoFJ, the left table refers to a reference table, which is assumed to be almost \"duplicate-free\". AutoFJ attempts to solve many-to-one join problems, where each record in the right table will be joined with at most one record in the left table, but each record in left table can be joined with multiple records in the right table. \n\nAutoFJ also provides a benchmark that contains [50 diverse datasets](https://github.com/chu-data-lab/AutomaticFuzzyJoin/blob/master/src/autofj/50-single-column-datasets.md) for single-column fuzzy-join tasks constructed from [DBPedia](https://www.dbpedia.org). \n\n## Installation\n\nInstall the package using pip\n\n```\npip install autofj\n```\n\n## Usage\n\nLet `left_table` be the reference table and `right_table` be another input table. The two tables are assumed to have the same schema and have an id column named `id_column`. To join `left_table` and `right_table` with\nprecision target 0.9, run the following code. The result will be a joined table of record pairs that are identified as matches from two input tables.\n```python\nfrom autofj import AutoFJ\nfj = AutoFJ(precision_target=0.9)\nresult = fj.join(left_table, right_table, id_column)\n```\n\nTo load a benchmark dataset named as `dataset_name`, run the following code. Each dataset contains a left table (reference table), a right table and a ground-truth table of matched record pairs. The id column of each dataset is named as \"id\" and the column to be joined is named as \"title\". The names of all benchmark datasets are listed [here](https://github.com/chu-data-lab/AutomaticFuzzyJoin/blob/master/src/autofj/50-single-column-datasets.md).\n```python\nfrom autofj.datasets import load_data\nleft_table, right_table, gt_table = load_data(dataset_name)\n```\n## Example\nRun the following code to join the left and right table of TennisTournament dataset.\n```python\nfrom autofj.datasets import load_data\nfrom autofj import AutoFJ\nleft_table, right_table, gt_table = load_data(\"TennisTournament\")\nfj = AutoFJ(precision_target=0.9)\nresult = fj.join(left_table, right_table, \"id\")\n```\n\n## Documentation\n```python\nclass AutoFJ(object):\n    def __init__(self,\n                 precision_target=0.9,\n                 join_function_space=\"autofj_sm\",\n                 distance_threshold_space=50,\n                 column_weight_space=10,\n                 blocker=None,\n                 n_jobs=-1,\n                 verbose=False):\n```\n\n### Parameters\n* **precision_target: *float*, default=0.9**<br />\n    Precision target. The value is taken from 0-1. The default value is 0.9.\n\n* **join_function_space: *string, dict or list of objects*, default=\"autofj_sm\"**<br />\n    Space of join functions. There are three ways to define the space of join functions:\n    1. Use the name (string) of built-in join function space. There are three\n    options, including \"autofj_lg\", \"autofj_md\" and \"autofj_sm\" that use\n    136, 68 and 14 join functions, respectively. Using less join functions\n    can improve efficiency but may worsen performance.\n    2. Use a dict specifying the options for preprocessing methods,\n    tokenization methods, token weighting methods and distance functions.\n    The space will be the cartesian product of all options in the dict.\n    See [options.py](https://github.com/chu-data-lab/AutomaticFuzzyJoin/blob/master/src/autofj/join_function_space/options.py) for defining join functions using\n    a dict.\n    3. Use a list of customized JoinFunction objects. Define JoinFunction class using prototype in [join_function.py](https://github.com/chu-data-lab/AutomaticFuzzyJoin/blob/master/src/autofj/join_function_space/join_function/join_function.py).\n\n* **distance_threshold_space: *int or list of floats*, default=50**<br />\n    The number of candidate distance thresholds or a list of candidate\n    distance thresholds in the space.  If the number of distance thresholds\n    (integer) is given, distance thresholds are spaced evenly from 0 to 1.\n    Otherwise, it should be a list of floats from 0 to 1. Using fewer candidates\n    can improve efficiency but may worsen performance.\n\n* **column_weight_space: *int or list of floats*, default=10**<br />\n    The number of candidate column weights or a list of candidate\n    column weights in the space. If the number of column weights\n    (integer) is given, column weights are spaced evenly from 0 to 1.\n    Otherwise, it should be a list of floats from 0 to 1. Using fewer candidates\n    can improve efficiency but may worsen performance.\n\n\n* **blocker: *None or a Blocker object*, default None**<br />\n    A Blocker object that performs blocking on two tables. If None, use \n    the built-in blocker. For using customized blocker, define Blocker class using prototype in [blocker.py](https://github.com/chu-data-lab/AutomaticFuzzyJoin/blob/master/src/autofj/blocker/blocker.py).\n\n* **n_jobs : *int*, default=-1**<br />\n    Number of CPU cores used. -1 means using all processors.\n\n* **verbose: *bool*, default=False**<br />\n    Whether to print logging\n\n### Attributes\n* **selected_column_weights: *dict***<br />\n    The columns and column weights selected by the algorithm. The key is the \n    column name, the value is the weight selected for the column.\n\n* **selected_join_configs: *list of tuples***<br />\n    The union of join configurations selected by the algorithm. Each tuple\n    (join_function, threshold) in the list is a join configuration that \n    consists of the name of the join function and its distance threshold.\n  \n### Methods\n```python\njoin(left_table, right_table, id_column, on=None) \n```\n\nJoin left table and right table.\n\n#### Parameters\n* **left_table: *pandas.DataFrame***<br />\n    Reference table. The left table is assumed to be almost duplicate-free, which means it has no or only few duplicates.\n\n* **right_table: *pandas.DataFrame***<br />\n    Another input table.\n\n* **id_column: *string***<br />\n    The name of id column in the two tables. This column will not be \n    used to join two tables.\n\n* **on: *list or None*, default=None**<br />\n    A list of column names (multi-column fuzzy join) that the two tables\n    will be joined on. If None, two tables will be joined on all columns\n    that exist in both tables, excluding the id column.\n  \n#### Return\n* ***pandas.DataFrame***<br />\n    A table of joining pairs. The columns of left table are\n    suffixed with \"_l\" and the columns of right table are suffixed\n    with \"_r\".\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/chu-data-lab/AutomaticFuzzyJoin",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "autofj",
    "package_url": "https://pypi.org/project/autofj/",
    "platform": "",
    "project_url": "https://pypi.org/project/autofj/",
    "project_urls": {
      "Homepage": "https://github.com/chu-data-lab/AutomaticFuzzyJoin"
    },
    "release_url": "https://pypi.org/project/autofj/0.0.6/",
    "requires_dist": [
      "numpy",
      "pandas",
      "nltk",
      "ngram",
      "editdistance",
      "jellyfish",
      "spacy"
    ],
    "requires_python": ">=3.7",
    "summary": "Auto-Program Fuzzy Similarity Joins Without Labeled Examples",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11410521,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa0333fea7ff15c4292eae1b8b2cf750e89641f7f7c00f4d72c524b11dd85355",
          "md5": "de9b83ece55b8514f3c186d60d6e60f5",
          "sha256": "3ff47b20019c4eaa6009206984be6627e0529b89b87a93573ef6fa48e3c4420d"
        },
        "downloads": -1,
        "filename": "autofj-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de9b83ece55b8514f3c186d60d6e60f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 32127,
        "upload_time": "2021-09-09T01:07:25",
        "upload_time_iso_8601": "2021-09-09T01:07:25.074788Z",
        "url": "https://files.pythonhosted.org/packages/aa/03/33fea7ff15c4292eae1b8b2cf750e89641f7f7c00f4d72c524b11dd85355/autofj-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cadf6c35f5bef5cb6a66870eb0e1d7fb31cefb041c4f50e6a77a1c3058318f3",
          "md5": "0ba0cc632cc1a44fcef94100a72ebc61",
          "sha256": "efa21fec80a1de5749c7079c7987e31b7ae359727fa27473f0723534fa9cd298"
        },
        "downloads": -1,
        "filename": "autofj-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0ba0cc632cc1a44fcef94100a72ebc61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27033,
        "upload_time": "2021-09-09T01:07:26",
        "upload_time_iso_8601": "2021-09-09T01:07:26.959874Z",
        "url": "https://files.pythonhosted.org/packages/9c/ad/f6c35f5bef5cb6a66870eb0e1d7fb31cefb041c4f50e6a77a1c3058318f3/autofj-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acf9016c01e2c98b7ed8775d5dbc512e6a6befc09ec460027cc556c01d3a1a72",
          "md5": "cc6df14f110ab21688b3b0724c988a34",
          "sha256": "bf74798542fd0fc9ee84e16b90e133761c1c75269796d87cdbc5b3f6c3cfc2f9"
        },
        "downloads": -1,
        "filename": "autofj-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc6df14f110ab21688b3b0724c988a34",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 2208875,
        "upload_time": "2021-09-09T01:21:18",
        "upload_time_iso_8601": "2021-09-09T01:21:18.176894Z",
        "url": "https://files.pythonhosted.org/packages/ac/f9/016c01e2c98b7ed8775d5dbc512e6a6befc09ec460027cc556c01d3a1a72/autofj-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5faf977eb394336a58d6c2f102e88513371abf2d1fbbfdae011b02dc88e83675",
          "md5": "6020199fc800a79330ccca3698701e56",
          "sha256": "ec569537ac5fd1431e7025cebb67f49c652af4dac7d92ffc33ea6ad918578084"
        },
        "downloads": -1,
        "filename": "autofj-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6020199fc800a79330ccca3698701e56",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2101944,
        "upload_time": "2021-09-09T01:21:19",
        "upload_time_iso_8601": "2021-09-09T01:21:19.830109Z",
        "url": "https://files.pythonhosted.org/packages/5f/af/977eb394336a58d6c2f102e88513371abf2d1fbbfdae011b02dc88e83675/autofj-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b43d70e816755246158c683a60ef766b8f06a7850727c04012c15a6ecbe85a6",
          "md5": "71f6d5d68f7059861d5375d3ceec67aa",
          "sha256": "83eb2119576f83e90929f6723793eb6176325880895c0e4732b582dc39c0ed40"
        },
        "downloads": -1,
        "filename": "autofj-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71f6d5d68f7059861d5375d3ceec67aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 2208865,
        "upload_time": "2021-09-09T18:41:13",
        "upload_time_iso_8601": "2021-09-09T18:41:13.925920Z",
        "url": "https://files.pythonhosted.org/packages/9b/43/d70e816755246158c683a60ef766b8f06a7850727c04012c15a6ecbe85a6/autofj-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25e2efb8d9a3738aac4c65d45ee6322d015f080b026f3970f72da02dc25d046b",
          "md5": "3a1c2e29fa3581b37e1d99bde79c3a01",
          "sha256": "7e3484343991b11cf943b83eed316490a289de7cfea990c6dad6059f8ec33c2a"
        },
        "downloads": -1,
        "filename": "autofj-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3a1c2e29fa3581b37e1d99bde79c3a01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2101998,
        "upload_time": "2021-09-09T18:41:15",
        "upload_time_iso_8601": "2021-09-09T18:41:15.286492Z",
        "url": "https://files.pythonhosted.org/packages/25/e2/efb8d9a3738aac4c65d45ee6322d015f080b026f3970f72da02dc25d046b/autofj-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99c8ca489e92a5979b595f3465c89e38c52a3d8f3db3733a33d689bc959b5a1c",
          "md5": "dae2695aadf89f093e11efd137080ebb",
          "sha256": "b874360ca213f01ec9c1aaefec94165f0beac8987a4130ba15bc1c02f10b3152"
        },
        "downloads": -1,
        "filename": "autofj-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dae2695aadf89f093e11efd137080ebb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 2208929,
        "upload_time": "2021-09-09T20:19:19",
        "upload_time_iso_8601": "2021-09-09T20:19:19.720971Z",
        "url": "https://files.pythonhosted.org/packages/99/c8/ca489e92a5979b595f3465c89e38c52a3d8f3db3733a33d689bc959b5a1c/autofj-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd35648e5bce69c9f3b016ece84735641f0d7ddab7aa405cede8528605dc3b5b",
          "md5": "e5cbf6b781cd13cf6407a09d405e79d9",
          "sha256": "d4f1d5c8f82ae8033c369011e8269456a17928456c1196215b27c3fe9945475c"
        },
        "downloads": -1,
        "filename": "autofj-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e5cbf6b781cd13cf6407a09d405e79d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2102140,
        "upload_time": "2021-09-09T20:19:21",
        "upload_time_iso_8601": "2021-09-09T20:19:21.264829Z",
        "url": "https://files.pythonhosted.org/packages/fd/35/648e5bce69c9f3b016ece84735641f0d7ddab7aa405cede8528605dc3b5b/autofj-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2495fdf9a8f11879cfe5730dc4b6947fd86219384861adaa75c83093eb0eecfe",
          "md5": "84c17b1b9ccde35657725af0cbba638a",
          "sha256": "0055dac69e5f271df333a44c449ac4fc990cfeb221950d5d8f1fc3f00cbf8f45"
        },
        "downloads": -1,
        "filename": "autofj-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84c17b1b9ccde35657725af0cbba638a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 2208930,
        "upload_time": "2021-09-09T21:20:10",
        "upload_time_iso_8601": "2021-09-09T21:20:10.400009Z",
        "url": "https://files.pythonhosted.org/packages/24/95/fdf9a8f11879cfe5730dc4b6947fd86219384861adaa75c83093eb0eecfe/autofj-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82f7f3fe53f849ba08a09e20db51d37cfc7169336f71ba2e8213fbd066baf0ef",
          "md5": "b23bc51b404fd3e97754e0a5c176af0f",
          "sha256": "ac3759aa5906ae829960feba25366dca6ed948af75c708f8b5573c260e45c5fc"
        },
        "downloads": -1,
        "filename": "autofj-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b23bc51b404fd3e97754e0a5c176af0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2102148,
        "upload_time": "2021-09-09T21:20:12",
        "upload_time_iso_8601": "2021-09-09T21:20:12.138802Z",
        "url": "https://files.pythonhosted.org/packages/82/f7/f3fe53f849ba08a09e20db51d37cfc7169336f71ba2e8213fbd066baf0ef/autofj-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20611c00d068ccfeec6767c5fa0905b3c57f8e6b23e6ec1ef88876a5f1f6d69c",
          "md5": "1ff05761dba6098d731c961d8ba0cbae",
          "sha256": "647aac65288a03ef6eed24ece2f11d4e52d6a780fb1e6125dfe1874df6e6597b"
        },
        "downloads": -1,
        "filename": "autofj-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ff05761dba6098d731c961d8ba0cbae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 2208933,
        "upload_time": "2021-09-09T21:33:42",
        "upload_time_iso_8601": "2021-09-09T21:33:42.312938Z",
        "url": "https://files.pythonhosted.org/packages/20/61/1c00d068ccfeec6767c5fa0905b3c57f8e6b23e6ec1ef88876a5f1f6d69c/autofj-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "281557193ba30a251bd51cd7773dade6653fa7c9397b3318ce0a9c6215b19dbb",
          "md5": "ca40bfd821abc3dfa0edaa356f263db5",
          "sha256": "1462586ccbeb6294be0e0c5188940ad338ff9cd0164b944d17d7a53a4a779dbe"
        },
        "downloads": -1,
        "filename": "autofj-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ca40bfd821abc3dfa0edaa356f263db5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2102129,
        "upload_time": "2021-09-09T21:33:44",
        "upload_time_iso_8601": "2021-09-09T21:33:44.130000Z",
        "url": "https://files.pythonhosted.org/packages/28/15/57193ba30a251bd51cd7773dade6653fa7c9397b3318ce0a9c6215b19dbb/autofj-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "20611c00d068ccfeec6767c5fa0905b3c57f8e6b23e6ec1ef88876a5f1f6d69c",
        "md5": "1ff05761dba6098d731c961d8ba0cbae",
        "sha256": "647aac65288a03ef6eed24ece2f11d4e52d6a780fb1e6125dfe1874df6e6597b"
      },
      "downloads": -1,
      "filename": "autofj-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1ff05761dba6098d731c961d8ba0cbae",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 2208933,
      "upload_time": "2021-09-09T21:33:42",
      "upload_time_iso_8601": "2021-09-09T21:33:42.312938Z",
      "url": "https://files.pythonhosted.org/packages/20/61/1c00d068ccfeec6767c5fa0905b3c57f8e6b23e6ec1ef88876a5f1f6d69c/autofj-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "281557193ba30a251bd51cd7773dade6653fa7c9397b3318ce0a9c6215b19dbb",
        "md5": "ca40bfd821abc3dfa0edaa356f263db5",
        "sha256": "1462586ccbeb6294be0e0c5188940ad338ff9cd0164b944d17d7a53a4a779dbe"
      },
      "downloads": -1,
      "filename": "autofj-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "ca40bfd821abc3dfa0edaa356f263db5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 2102129,
      "upload_time": "2021-09-09T21:33:44",
      "upload_time_iso_8601": "2021-09-09T21:33:44.130000Z",
      "url": "https://files.pythonhosted.org/packages/28/15/57193ba30a251bd51cd7773dade6653fa7c9397b3318ce0a9c6215b19dbb/autofj-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}