{
  "info": {
    "author": "Auditree Security and Compliance",
    "author_email": "al.finkelstein@ibm.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![OS Compatibility][platform-badge]](#prerequisites)\n[![Python Compatibility][python-badge]][python-dl]\n[![pre-commit][pre-commit-badge]][pre-commit]\n[![Code validation](https://github.com/ComplianceAsCode/auditree-plant/workflows/format%20%7C%20lint%20%7C%20test/badge.svg)][lint-test]\n[![Upload Python Package](https://github.com/ComplianceAsCode/auditree-plant/workflows/PyPI%20upload/badge.svg)][pypi-upload]\n\n# auditree-plant\n\nThe Auditree tool for adding external evidence.\n\n## Introduction\n\nAuditree `plant` is a command line tool that assists in adding evidence to an\nevidence locker.  It provides a thoughtful way to add evidence to an\nevidence locker by managing the evidence metadata so that checks and dependent fetchers\nexecuted as part of the [Auditree compliance framework][auditree-framework] can apply\nappropriate time to live validations.\n\n## Prerequisites\n\n- Supported for execution on OSX and LINUX.\n- Supported for execution with Python 3.6 and above.\n\nPython 3 must be installed, it can be downloaded from the [Python][python-dl]\nsite or installed using your package manager.\n\nPython version can be checked with:\n\n```sh\npython --version\n```\n\nor\n\n```sh\npython3 --version\n```\n\nThe `plant` tool is available for download from [PyPI](https://pypi.org/).\n\n## Installation\n\nIt is best practice, but not mandatory, to run `plant` from a dedicated Python\nvirtual environment.  Assuming that you have the Python [virtualenv][virtual-env]\npackage already installed, you can create a virtual environment named `venv` by\nexecuting `virtualenv venv` which will create a `venv` folder at the location of\nwhere you executed the command.  Alternatively you can use the python `venv` module\nto do the same.\n\n```sh\npython3 -m venv venv\n```\n\nAssuming that you have a virtual environment and that virtual environment is in\nthe current directory then to install a new instance of `plant`, activate\nyour virtual environment and use `pip` to install `plant` like so:\n\n```sh\n. ./venv/bin/activate\npip install auditree-plant\n```\n\nAs we add new features to `plant` you will want to upgrade your `plant`\npackage.  To upgrade `plant` to the most recent version do:\n\n```sh\n. ./venv/bin/activate\npip install auditree-plant --upgrade\n```\n\nSee [pip documentation][pip-docs] for additional options when using `pip`.\n\n## Configuration\n\nSince Auditree `plant` interacts with Git repositories, it requires Git remote\nhosting service credentials in order to do its thing.  Auditree `plant` will by\ndefault look for a `username` and `token` in a `~/.credentials` file.  You can\noverride the credentials file location by using the `--creds` option on a `plant`\nCLI execution. Valid section headings include `github`, `github_enterprise`, `bitbucket`,\nand `gitlab`.  Below is an example of the expected credentials entry.\n\n```ini\n[github]\nusername=your-gh-username\ntoken=your-gh-token\n```\n\n## Execution\n\nAuditree `plant` is a simple CLI that performs the function of adding evidence\nto an evidence locker.  As such, it has two execution modes; a `push-remote` mode\nand a `dry-run` mode.  Both modes will clone a git repository and place it into the\n`$TMPDIR/plant` folder.  Both modes will also provide handy progress output as\n`plant` processes the new evidence.  However, `push-remote` will push the changes\nto the remote repository before removing the locally cloned copy whereas `dry-run`\nwill not.  When provided an absolute path to a local git repository using the\n`--repo-path` option, `plant` will perform its plant-like duties as described\non the specified local git repository.  This can come in handy when looking to\nchain your `plant` execution after a successful run of the compliance automation\nfetchers and checks.\n\nAs most CLIs, Auditree `plant` comes with a help facility.\n\n```sh\nplant -h\n```\n\n```sh\nplant push-remote -h\n```\n\n```sh\nplant dry-run -h\n```\n\n### push-remote mode\n\nUse the `push-remote` mode when you want your changes to be applied to the remote\nevidence locker.  You can provide as many _evidence path_/_evidence detail_\nkey/value pairs as you need as part of the `--config` or as contents of your\n`--config-file`.\n\n```sh\nplant push-remote https://github.com/org-foo/repo-bar --config '{\"/absolute/path/to/my/evidence.ext\":{\"category\":\"foo\"}}'\n```\n\n```sh\nplant push-remote https://github.com/org-foo/repo-bar --config-file ./path/to/my/config_file.json\n```\n\n```sh\nplant push-remote https://github.com/org-foo/repo-bar --repo-path $TMPDIR\"compliance\" --config-file ./path/to/my/config_file.json\n```\n\n### dry-run mode\n\nUse the `dry-run` mode when you don't want your changes to be applied to the remote\nevidence locker and are just interested in seeing what effect the execution will have\non your evidence locker before you commit to pushing your changes to the remote repository.\nYou can provide as many _evidence path_/_evidence detail_ key/value pairs as you\nneed as part of the `--config` or as contents of your `--config-file`.\n\n```sh\nplant dry-run https://github.com/org-foo/repo-bar --config '{\"/absolute/path/to/my/evidence.ext\":{\"category\":\"foo\"}}'\n```\n\n```sh\nplant dry-run https://github.com/org-foo/repo-bar --config-file ./path/to/my/config_file.json\n```\n\n```sh\nplant dry-run https://github.com/org-foo/repo-bar --repo-path $TMPDIR\"compliance\" --config-file ./path/to/my/config_file.json\n```\n\n\n[platform-badge]: https://img.shields.io/badge/platform-osx%20|%20linux-orange.svg\n[python-badge]: https://img.shields.io/badge/python-v3.6+-blue.svg\n[pre-commit-badge]: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white\n[python-dl]: https://www.python.org/downloads/\n[pre-commit]: https://github.com/pre-commit/pre-commit\n[pip-docs]: https://pip.pypa.io/en/stable/reference/pip/\n[virtual-env]: https://pypi.org/project/virtualenv/\n[auditree-framework]: https://github.com/ComplianceAsCode/auditree-framework\n[lint-test]: https://github.com/ComplianceAsCode/auditree-plant/actions?query=workflow%3A%22Test+python+code+%26+lint%22\n[pypi-upload]: https://github.com/ComplianceAsCode/auditree-plant/actions?query=workflow%3A%22Upload+Python+Package%22\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://auditree.github.io/",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "auditree-plant",
    "package_url": "https://pypi.org/project/auditree-plant/",
    "platform": "",
    "project_url": "https://pypi.org/project/auditree-plant/",
    "project_urls": {
      "Homepage": "https://auditree.github.io/"
    },
    "release_url": "https://pypi.org/project/auditree-plant/1.0.0/",
    "requires_dist": [
      "auditree-framework (>=1.0.0)",
      "pre-commit (>=2.4.0) ; extra == 'dev'",
      "pytest (>=4.4.1) ; extra == 'dev'",
      "pytest-cov (>=2.6.1) ; extra == 'dev'",
      "recommonmark ; extra == 'dev'",
      "Sphinx (>=1.7.2) ; extra == 'dev'",
      "setuptools ; extra == 'dev'",
      "wheel ; extra == 'dev'",
      "twine ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "The Auditree tool for adding external evidence",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7798838,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a59777fc1b227c9677a32be691b0462ff9a1d193fc29e47d3c690a99b232b1e",
          "md5": "949cc6374abfce9a02791b89d2b584d0",
          "sha256": "1289975d8042dc2eeb1fbd95a1edeaaa08312b0ce5677a4de54bb260b5a3698e"
        },
        "downloads": -1,
        "filename": "auditree_plant-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "949cc6374abfce9a02791b89d2b584d0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 12399,
        "upload_time": "2020-07-27T13:55:52",
        "upload_time_iso_8601": "2020-07-27T13:55:52.814794Z",
        "url": "https://files.pythonhosted.org/packages/1a/59/777fc1b227c9677a32be691b0462ff9a1d193fc29e47d3c690a99b232b1e/auditree_plant-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4628f726c2b2a950d3597678c086c45f7888c916b3d20ee40af5d4649fa5a01f",
          "md5": "bbc3ccff5ff4a0300d5dd9dce8910474",
          "sha256": "887194ead385c63ff93f8083f26d517e538ac9516910fae2584d58f3a50e781d"
        },
        "downloads": -1,
        "filename": "auditree-plant-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bbc3ccff5ff4a0300d5dd9dce8910474",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9659,
        "upload_time": "2020-07-27T13:56:02",
        "upload_time_iso_8601": "2020-07-27T13:56:02.902783Z",
        "url": "https://files.pythonhosted.org/packages/46/28/f726c2b2a950d3597678c086c45f7888c916b3d20ee40af5d4649fa5a01f/auditree-plant-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a59777fc1b227c9677a32be691b0462ff9a1d193fc29e47d3c690a99b232b1e",
        "md5": "949cc6374abfce9a02791b89d2b584d0",
        "sha256": "1289975d8042dc2eeb1fbd95a1edeaaa08312b0ce5677a4de54bb260b5a3698e"
      },
      "downloads": -1,
      "filename": "auditree_plant-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "949cc6374abfce9a02791b89d2b584d0",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 12399,
      "upload_time": "2020-07-27T13:55:52",
      "upload_time_iso_8601": "2020-07-27T13:55:52.814794Z",
      "url": "https://files.pythonhosted.org/packages/1a/59/777fc1b227c9677a32be691b0462ff9a1d193fc29e47d3c690a99b232b1e/auditree_plant-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4628f726c2b2a950d3597678c086c45f7888c916b3d20ee40af5d4649fa5a01f",
        "md5": "bbc3ccff5ff4a0300d5dd9dce8910474",
        "sha256": "887194ead385c63ff93f8083f26d517e538ac9516910fae2584d58f3a50e781d"
      },
      "downloads": -1,
      "filename": "auditree-plant-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bbc3ccff5ff4a0300d5dd9dce8910474",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9659,
      "upload_time": "2020-07-27T13:56:02",
      "upload_time_iso_8601": "2020-07-27T13:56:02.902783Z",
      "url": "https://files.pythonhosted.org/packages/46/28/f726c2b2a950d3597678c086c45f7888c916b3d20ee40af5d4649fa5a01f/auditree-plant-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}