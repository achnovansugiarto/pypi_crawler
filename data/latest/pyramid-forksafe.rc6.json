{
  "info": {
    "author": "Jonathan Vanasco",
    "author_email": "jonathan@findmeon.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Pyramid",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "pyramid_forksafe\n================\n\nBuild Status: ![Python package](https://github.com/jvanasco/pyramid_forksafe/workflows/Python%20package/badge.svg)\n\nThis package creates standardized Pyramid events for various forking hooks in popular deployment containers.\n\nUsing `pyramid_forksafe` allows a developer to write generic routines for forking events, allowing them to easily swap containers during deployment or development.\n\nEach event is invoked with the application's `registry`, through which one can access `registry.settings`\n\n## Why?\n\nPyramid is Thread Safe, which is different than Fork Safe.\n\nSeveral popular libraries are not fork-safe:\n\n* SqlAlchemy's connection pool is not fork-safe.  Your deployment *must* call `engine.dispose()` after a fork.\n* PyMongo's connections and locks are not fork-safe.  The entire client must be replaced after a fork.\n* PyCrypto's Random generator will only work correctly if Random.atfork() is called.\n\nIn some situations, a developer may need to access the registry and/or settings during postfork actions. Getting this information into a custom hook can be a hassle, as one will need to write against each container's API instead of Pyramid's. \n\nThis blog posting describes the difference between fork-safe and thread-safe pretty well  http://www.dctrwatson.com/2010/09/python-thread-safe-does-not-mean-fork-safe/\n\n\n## Usage - Generic\n\nDefine a GENERIC hook.  \n\n\tfrom pyramid_forksafe.events import ApplicationPostFork\n\n    def post_fork_hook(event):\n    \t\"\"\"\n    \tThe event has an attribute for the Pyramid Application's `registry`\n    \t\t`event.registry`\n    \t\"\"\"\"\n        cyrpto_atfork()\n        models.engine.dispose()\n\n    config.add_subscriber(post_fork_hook, ApplicationPostFork)\n\nYou can import the generic package in your `environment.ini` file (or main config), and this will try to enable services if possible:\n\n\t# development.ini\n    pyramid.includes = pyramid_forksafe\n\nor you may wish to import a SPECIFIC container package in your `environment.ini` file (or main config)\n\n\t# development.ini\n    pyramid.includes = pyramid_forksafe.containers.uwsgi\n\nCurrently, this approach only works for `uWSGI`.  `gunicorn` requires another approach.\n\n\n## Usage - uWSGI\n\nsimply include the package and uwsgi will be automatically enabled:\n\nin your `__init__.py`:\n\n    config.include('pyramid_forksafe')\n\nor your `{environment}.ini`\n\n    pyramid.includes = pyramid_forksafe\n\nimportant note:\n\nyou MUST run uWSGI with the `--master` argument.\n\n\n## Usage - gunicorn\n\n`gunicorn` will need some hooks imported into it's python configuration file\n\nassuming you invoke gunicorn like this:\n\n\tgunicorn --paste production.ini -c config.py\n\nthen your `config.py` just needs to import the container hooks:\n\n    from pyramid_forksafe.containers.gunicorn import (\n        pre_fork,\n        post_fork,\n        post_worker_init,\n    )\n\nthose hooks are written to the `gunicorn` api, and will invoke the notification\n\nyou can also update the debug tool by running after configuration:\n\n\tfrom pyramid_forksafe.containers.gunicorn import mark_configured\n\tmark_configured(config.registry)\n\n\n## Container Support\n\nCurrently `uwsgi` and `gunicorn` are supported with the hooks outlined below.   Celery integration is planned.  Pull requests are very welcome.\n\n\n| container | pyramid\\_forksafe event      | container hook |\n|-----------|-----------------------------|------|\n| uWSGI     | `ApplicationPostFork`       | [`postfork`](http://uwsgi-docs.readthedocs.io/en/latest/PythonDecorators.html#uwsgidecorators.postfork) |\n| gunicorn  | `ApplicationPostFork`       | [`post_fork`](http://docs.gunicorn.org/en/latest/settings.html#post-fork) |\n| gunicorn  | `ApplicationPreFork`        | [`pre_fork`](http://docs.gunicorn.org/en/latest/settings.html#pre-fork) |\n| gunicorn  | `ApplicationPostWorkerInit` | [`post_worker_init`](http://docs.gunicorn.org/en/latest/settings.html#post-worker-init) |\n\n\n## The Debug Object\n\nincluding this package will put an informative dict into `registry.pyramid_forksafe`\n\nunder waitress, it will look like this:\n\n\t[('status', 'attempting auto-configure'),\n\t ('environment', None),\n\t ('autoconfigure.log', ['uWSGI not available']),\n\t ('executed_hooks', set([]))]\n\nunder uWSGI without master, it will look like this:\n\n\t[('status', 'uWSGI error'),\n\t ('environment', None),\n\t ('autoconfigure.log',\n\t  ['uWSGI error: you have to enable the uWSGI master process to use this module']),\n\t ('executed_hooks', set([]))]\n\nunder uWSGI properly configured, it will look like this:\n\n\t[('status', 'uWSGI hook configured'),\n\t ('environment', 'uWSGI'),\n\t ('autoconfigure.log', ['uWSGI available', 'uWSGI hook configured']),\n\t ('executed_hooks',\n\t  set([('containers.uwsgi.post_fork_hook', 'ApplicationPostFork')]))]\n\n\n## Debugtoolbar support\n\nto enable the debugtoobar support, you can configure your `development.ini` with:\n\n\tdebugtoolbar.includes = pyramid_forksafe.debugtoolbar\n\nThe toolbar just shows the debug object `request.registry.pyramid_forksafe` on the toolbar\n\nThis should always show an error, because the debugtoolbar does not run under forking servers.\n\n\n\n## Status\n2019.05.01 - debugtoolbar\n2019.04.30 - debug object\n2019.04.29 - Python3 Support. This has been production safe for uWSGI for a while now.\n2016.11.09 - this is experimental",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jvanasco/pyramid_forksafe",
    "keywords": "web pyramid fork uwsgi nginx",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyramid-forksafe",
    "package_url": "https://pypi.org/project/pyramid-forksafe/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyramid-forksafe/",
    "project_urls": {
      "Homepage": "https://github.com/jvanasco/pyramid_forksafe"
    },
    "release_url": "https://pypi.org/project/pyramid-forksafe/0.1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Standardizes server `fork` events into Pyrmamid events",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9881586,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ced49518a884d68aa47fe7f8b1272cc5b063f4f4caef7e290005664180959c0",
          "md5": "c7f23d9e0b8128751ab64675e79b7602",
          "sha256": "b78505f8a86aabf9ec23d7199378d94c483e86622853377ebdb283ff0647e793"
        },
        "downloads": -1,
        "filename": "pyramid_forksafe-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c7f23d9e0b8128751ab64675e79b7602",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2418,
        "upload_time": "2016-11-15T19:11:27",
        "upload_time_iso_8601": "2016-11-15T19:11:27.563765Z",
        "url": "https://files.pythonhosted.org/packages/0c/ed/49518a884d68aa47fe7f8b1272cc5b063f4f4caef7e290005664180959c0/pyramid_forksafe-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd2c8b53bd107a815598a1aa1c35655bda1cf93b5590f07b629f2ff3f3615446",
          "md5": "1ae4c5e04ffc7ef0ae9c95ba64a2fc9d",
          "sha256": "ed127c747ce0d396f7761c55f4f51c8ec1560369bcfd8a16d4f7a9440b46406f"
        },
        "downloads": -1,
        "filename": "pyramid_forksafe-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1ae4c5e04ffc7ef0ae9c95ba64a2fc9d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2467,
        "upload_time": "2017-03-02T22:34:50",
        "upload_time_iso_8601": "2017-03-02T22:34:50.547755Z",
        "url": "https://files.pythonhosted.org/packages/fd/2c/8b53bd107a815598a1aa1c35655bda1cf93b5590f07b629f2ff3f3615446/pyramid_forksafe-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5021bf6fa44bfde7f5a8aab47e2088c0ac1b24e56c322637bda7049d49cb2175",
          "md5": "cc906cef3c32cb7d482b574763d45813",
          "sha256": "8cf489e96ce6dd21bece3e2b34d733ab278ab52c0b8aef0b441c7c5ff94f8b48"
        },
        "downloads": -1,
        "filename": "pyramid_forksafe-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cc906cef3c32cb7d482b574763d45813",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4073,
        "upload_time": "2019-04-29T17:08:22",
        "upload_time_iso_8601": "2019-04-29T17:08:22.616162Z",
        "url": "https://files.pythonhosted.org/packages/50/21/bf6fa44bfde7f5a8aab47e2088c0ac1b24e56c322637bda7049d49cb2175/pyramid_forksafe-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a4183576e2348c434568cf43736edface3be33cc67bbba6a6768e7c52e166be",
          "md5": "66a158d44207e39d0e45a616f5064d02",
          "sha256": "98ebd7885c4a1b6cc6da152dfa40bf3883516ab1c8a33c871dfcd579117c82fb"
        },
        "downloads": -1,
        "filename": "pyramid_forksafe-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "66a158d44207e39d0e45a616f5064d02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5509,
        "upload_time": "2019-05-01T18:19:22",
        "upload_time_iso_8601": "2019-05-01T18:19:22.357900Z",
        "url": "https://files.pythonhosted.org/packages/9a/41/83576e2348c434568cf43736edface3be33cc67bbba6a6768e7c52e166be/pyramid_forksafe-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "174ce3beb84f14cbcf69d527b8514e9dd547c219a69183ad330d42f4857d6fed",
          "md5": "80c77886aa22f4fc907f24bba4b0c326",
          "sha256": "9beadf2bf36ed45d02dba8d46ac099bfb9d87bfcb43dfd3f1ae2b2fbec8da7a3"
        },
        "downloads": -1,
        "filename": "pyramid_forksafe-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "80c77886aa22f4fc907f24bba4b0c326",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6441,
        "upload_time": "2020-10-20T22:18:23",
        "upload_time_iso_8601": "2020-10-20T22:18:23.039213Z",
        "url": "https://files.pythonhosted.org/packages/17/4c/e3beb84f14cbcf69d527b8514e9dd547c219a69183ad330d42f4857d6fed/pyramid_forksafe-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6535b3f296c2ffde104f2c659e76a5020cfd667912428346ffe5b2722cb744c1",
          "md5": "9f0f2f1de34500b0578307ba1b30e571",
          "sha256": "dbd22ff66695d5ac04b728e4aa1b3567f3ded565d8103d7498fa6a4daf5c0c1d"
        },
        "downloads": -1,
        "filename": "pyramid_forksafe-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9f0f2f1de34500b0578307ba1b30e571",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10460,
        "upload_time": "2021-03-25T20:31:29",
        "upload_time_iso_8601": "2021-03-25T20:31:29.461719Z",
        "url": "https://files.pythonhosted.org/packages/65/35/b3f296c2ffde104f2c659e76a5020cfd667912428346ffe5b2722cb744c1/pyramid_forksafe-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6535b3f296c2ffde104f2c659e76a5020cfd667912428346ffe5b2722cb744c1",
        "md5": "9f0f2f1de34500b0578307ba1b30e571",
        "sha256": "dbd22ff66695d5ac04b728e4aa1b3567f3ded565d8103d7498fa6a4daf5c0c1d"
      },
      "downloads": -1,
      "filename": "pyramid_forksafe-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "9f0f2f1de34500b0578307ba1b30e571",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10460,
      "upload_time": "2021-03-25T20:31:29",
      "upload_time_iso_8601": "2021-03-25T20:31:29.461719Z",
      "url": "https://files.pythonhosted.org/packages/65/35/b3f296c2ffde104f2c659e76a5020cfd667912428346ffe5b2722cb744c1/pyramid_forksafe-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}