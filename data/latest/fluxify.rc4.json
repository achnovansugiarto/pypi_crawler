{
  "info": {
    "author": "Ibragim Abubakarov",
    "author_email": "ibragim.ai95@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Fluxify\n> A Python package that eases the process of retrieving, organizing and altering data.\n\n####  Required packages\n- **pandas**\n- **imperium**\n- **ijson**\n\n## Installation\n```bash\npip install fluxify\n```\n\n## Main classes\n#####  `fluxify.mapper.Mapper`\nThis class is used read and processing fast files with small amounts of data that can be loaded into memory.\n\n##### `fluxify.lazy_mapper.LazyMapper`\nYou've probable guessed it, this class is used to iterate on large files of data wether it is of format CSV,\nJSON or XML. \n\n## Usage\nRetrieve data from a simple CSV file\n```csv\nid,brand,price,state,published_at\n938,Xaomi,390.90,used,2020-01-03 12:32:29\n04593,iPhone,1299.90,new,2020-01-02 09:48:12\n```\n#### Mapper implementation\n```python\nfrom fluxify.mapper import Mapper\nimport yaml\n\n# Could also be loaded from a file\nyamlmapping = \"\"\"\nbrand:\n    col: 1\nprice:\n    col: 2\nstate:\n    col: 3\npublish_date:\n    col: 4\n    transformations:\n        - { transformer: 'date', in_format: '%Y-%m-%d %H:%M:%S', out_format: '%H:%M %d/%m/%Y' }\nis_new:\n    conditions:\n        -\n            condition: \"subject['state'] == 'new'\"\n            returnOnSuccess: True\n            returnOnFail: False\n\"\"\"\n\nMap = yaml.load(yamlmapping, Loader=yaml.FullLoader)\nmapper = Mapper(_type='csv')\ndata = mapper.map('path/to/csvfile.csv', Map)\nprint(data)\n```\n**Output**\n```bash\n[\n    {\n        'brand': 'Xaomi',\n        'price': '390.90',\n        'state': 'used',\n        'published_date': '12:32 03/01/2020'\n        'is_new': False\n    },\n    {\n        'brand': 'iPhone',\n        'price': '1299.90',\n        'state': 'new',\n        'published_date': '09:48 02/01/2020'\n        'is_new': True\n    }\n]\n```\n\n#### LazyMapper implementation\nThe `LazyMapper` does not return all the mapped data at the end,  \ninstead it maps the data in small sizes that you can specify in order to not max out the memory.\n\n```python\nfrom fluxify.lazy_mapper import LazyMapper\nimport yaml\n\n# Could also be loaded from a file\nyamlmapping = \"\"\"\nbrand:\n    col: 1\nprice:\n    col: 2\nstate:\n    col: 3\npublish_date:\n    col: 4\n    transformations:\n        - { transformer: 'date', in_format: '%Y-%m-%d %H:%M:%S', out_format: '%H:%M %d/%m/%Y' }\nis_new:\n    conditions:\n        -\n            condition: \"subject['state'] == 'new'\"\n            returnOnSuccess: True\n            returnOnFail: False\n\"\"\"\n\nMap = yaml.load(yamlmapping, Loader=yaml.FullLoader)\nmapper = LazyMapper(_type='csv', error_tolerance=True, bulksize=500)\nmapper.map('path/to/csvfile.csv', Map)\n\ndef some_callback(results):\n    for item in results:\n        pass # Perform some action\n\nmapper.set_callback(some_callback)\n\nmapper.map('path/to/csvfile.csv', Map)\n```\nAs you can see, in this example the mapper will call the callback function every time it accumulates 500 mapped items.\n\n### Mapping settings\n`col` key is used to specify the column number or attribute name from where the value must be retrieved.  \nIf you want to specify the input data as the retrieved value use `_all_` as the value of `col`\n\n`transformations` key is used to apply transformations to the retrieved value.  Available transformers are listed below.\n\n`conditions` key is used to apply conditions and alter the retrieved value.  \nThese conditions are in Python syntax, but you may not use all of Python's native functions.  \nAvailable functions are listed below.\n\n`default` is used to define a default value for when a retrieved value is **null**.  \n**Warning**: If the `default` key is defined with a value, it will be applied before applying transformations\nand conditions.\n\n##### Special cases for JSON and XML\n**XML**  \nSet the `multiple` to `true` if you want to retrieve data from multiple XML tags with the same name.  \nUse the `index` key with `multiple: true` if you wish to retrieve only one value from a number of XML tags.  \n\nWhen retrieving a XML value, the default behaviour is to retrieve the `.text` value of the tag.  \nIf you wish to change this, to retrieve a tag containing many other tags, use `raw` key and set it to `false`.  \nThis will return you an object of type `xml.etree.Element`, you could later apply transformations on this object to alter,\n organize and retrieve the data.\n\n**JSON**  \nUse `index` key to retrieve a specific value from an array.  \nOf course, it only works if the retrieved value is of type **array**.\n\n### Supported formats\n\nFormat      | CSV | JSON | XML | TXT\n------------|-----|------|-----|-----\nSupported   | YES | YES  | YES | NO\n\n## Transformers\nFluxify has built-in transformers that can alter/modify the data.\n\nFunction        | Arguments                         | Description\n----------------|-----------------------------------|--------------\n**number**      | stringvalue                       | Parses a string to an **integer** or **float** value\n**split**       | delimiter, index                  | Splits a string into parts with a **delimiter** and returns the splitted result if the **index** argument is not defined.\n**date**        | in_format, out_format             | Let's you format a date string to the desired format.\n**replace**     | search, new                       | Replaces the **search** value with **new** value from string\n**boolean**     | No arguments                      | Parses a string to Boolean if the string contains [true|false|1|0]\n**equipments_from_string** | delimiter              | Custom usage\n**options_from_string**    | delimiter              | Custom usage\n\n## Exceptions\nFluxify has different Exception classes for different reasons\nThey reside in the **exceptions** sub-package ```fluxify.exceptions```\n\nClass                                   | Arguments             | Description\n----------------------------------------|-----------------------|-------------\n**ArgumentNotFoundException**           | message               | This exception is raised whenever a argument is not found.\n**InvalidArgumentException**            | message               | This exception is raised when a passed parameter/argument is invalid.\n**ConditionNotFoundException**          | message               | This exception is raised when the \"condition\" key is not defined in the mapping.\n**UnsupportedTransformerException**     | message               | This exception is raised when a transformer other than the ones defined above, is used.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ibragim64/fluxify",
    "keywords": "",
    "license": "",
    "maintainer": "Ibragim Abubakarov",
    "maintainer_email": "ibragim.ai95@gmail.com",
    "name": "fluxify",
    "package_url": "https://pypi.org/project/fluxify/",
    "platform": "",
    "project_url": "https://pypi.org/project/fluxify/",
    "project_urls": {
      "Homepage": "https://github.com/ibragim64/fluxify"
    },
    "release_url": "https://pypi.org/project/fluxify/0.0.14/",
    "requires_dist": [
      "pandas",
      "PyYAML",
      "imperium",
      "ijson"
    ],
    "requires_python": "",
    "summary": "A Python package that eases the process of retrieving, organizing and altering data.",
    "version": "0.0.14",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8167419,
  "releases": {
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9bb47c853f15fe572510b72bfcf179d4d25913afb9be1dfa4ab3c4cdbed04ac",
          "md5": "0bad5978cd56f1150bc0c8882131de93",
          "sha256": "0e0ab529a250528263954d4c5776af05b20163d524ccfee4cbd0802ab36e7364"
        },
        "downloads": -1,
        "filename": "fluxify-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0bad5978cd56f1150bc0c8882131de93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15260,
        "upload_time": "2020-04-11T10:12:17",
        "upload_time_iso_8601": "2020-04-11T10:12:17.006340Z",
        "url": "https://files.pythonhosted.org/packages/f9/bb/47c853f15fe572510b72bfcf179d4d25913afb9be1dfa4ab3c4cdbed04ac/fluxify-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd18c88e3ecc482dcebd12bc7545cc267d62cf1950cfba8325e11173d88c4c89",
          "md5": "bc256232f526356e795bd176865ae8fa",
          "sha256": "1703f4e8647687e0c1bf18ca908ef8f599c0b62887ca74b1204f507c29e3a3b7"
        },
        "downloads": -1,
        "filename": "fluxify-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc256232f526356e795bd176865ae8fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15288,
        "upload_time": "2020-04-20T15:38:37",
        "upload_time_iso_8601": "2020-04-20T15:38:37.567599Z",
        "url": "https://files.pythonhosted.org/packages/bd/18/c88e3ecc482dcebd12bc7545cc267d62cf1950cfba8325e11173d88c4c89/fluxify-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8858e93f3783c531d5c97ff6498e094be426df4fc565f6baaf1924137c725c2f",
          "md5": "1359c6620ddd9bc595c2bda05946acf4",
          "sha256": "605244a9c69dce360abc16fe3bb364973751993b1d7660a22707f50ff608eb48"
        },
        "downloads": -1,
        "filename": "fluxify-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1359c6620ddd9bc595c2bda05946acf4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15332,
        "upload_time": "2020-04-20T15:43:07",
        "upload_time_iso_8601": "2020-04-20T15:43:07.636973Z",
        "url": "https://files.pythonhosted.org/packages/88/58/e93f3783c531d5c97ff6498e094be426df4fc565f6baaf1924137c725c2f/fluxify-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d3a898b3508b23133892061cb0dfce085b6304a21025b3e12808778f851181a",
          "md5": "7e4dff2bd8921842f7ce7b491cc8c25a",
          "sha256": "4416b9aa9f9454fa4ebee699f1dab0381b4c118b0729f3f3bf65554232ac4663"
        },
        "downloads": -1,
        "filename": "fluxify-0.0.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e4dff2bd8921842f7ce7b491cc8c25a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17194,
        "upload_time": "2020-09-11T20:16:28",
        "upload_time_iso_8601": "2020-09-11T20:16:28.153162Z",
        "url": "https://files.pythonhosted.org/packages/8d/3a/898b3508b23133892061cb0dfce085b6304a21025b3e12808778f851181a/fluxify-0.0.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8d3a898b3508b23133892061cb0dfce085b6304a21025b3e12808778f851181a",
        "md5": "7e4dff2bd8921842f7ce7b491cc8c25a",
        "sha256": "4416b9aa9f9454fa4ebee699f1dab0381b4c118b0729f3f3bf65554232ac4663"
      },
      "downloads": -1,
      "filename": "fluxify-0.0.14-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7e4dff2bd8921842f7ce7b491cc8c25a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17194,
      "upload_time": "2020-09-11T20:16:28",
      "upload_time_iso_8601": "2020-09-11T20:16:28.153162Z",
      "url": "https://files.pythonhosted.org/packages/8d/3a/898b3508b23133892061cb0dfce085b6304a21025b3e12808778f851181a/fluxify-0.0.14-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}