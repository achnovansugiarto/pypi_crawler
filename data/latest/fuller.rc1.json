{
  "info": {
    "author": "['Vincent Stimper', 'R. Patrick Xian']",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3"
    ],
    "description": "# fuller\n![License](https://img.shields.io/github/license/mpes-kit/fuller?color=lightgrey)\n\nIntegrated computational framework for electronic band structure reconstruction and parametrization, powered by probabilistic machine learning\n\n## Introduction\n\nThis Python package comprises a set of tools to reconstruct and parametrize the electronic band structure (EBS) from photoemission spectroscopy data. It implements the Markov Random Field model introduced in\n[Xian & Stimper et al. (2020)](https://arxiv.org/abs/2005.10210) in TensorFlow. \n\n\n## Methods of installation\n\nThe latest version of the package can be installed via pip\n\n```\npip install --upgrade git+https://github.com/mpes-kit/fuller.git\n```\n\nAlternatively, download the repository and run\n\n```\npython setup.py install\n```\n\nInstall directly from PyPI\n\n```\npip install fuller\n```\n\n### Requirements\n\nApart from the packages specified in the `requirements.txt` file, `tensorflow` is needed. Installation instructions can be found at the [official webpage](https://www.tensorflow.org/install). The package works with the CPU only and GPU supported version of the framework. Currently, only version TensorFlow 1 (1.14 onwards) is supported, but we are working on porting it to TensorFlow 2.\n\n## Sample dataset\n\nAs a model system to demonstrate the effectiveness of the methodology we worked on 3D photoemission data of the semiconductor tungsten diselenide (WSe<sub>2</sub>). It resolve the momentum along the x- and y- axis (k<sub>x</sub> and k<sub>y</sub>) and the energy.\n\n### Reconstruction\n\nAll 14 valence band of WSe<sub>2</sub> are visible in the dataset. The optimization was initialized by DFT calculation with [HSE06](https://aip.scitation.org/doi/10.1063/1.1564060) hybrid exchange-correlation functional. The results are shown in the figure below.\n\n![Valence bands of tungsten diselenide reconstructed using MRF model](https://github.com/VincentStimper/fuller/blob/master/images/mrf_rec_init_kx_slices.gif \"Valence bands of tungsten diselenide reconstructed using MRF model\")\n\n\n## Documentation\n\nComplete API documentation is provided [here](https://mpes-kit.github.io/fuller/).\n\n### Preprocessing and Reconstruction\n\n#### Class MrfRec\n\nThe `MrfRec` class is of central importance for reconstruction as well as preprocessing the data. To reconstruct the EBS create a `MrfRec` object and use its methods to perform the algorithms and plot the results. Here, we list a selection of the most important methods of the class. For further illustration on how to use the class check out the `mpes_reconstruction_mrf.ipynb` notebook in the example folder.\n\n##### \\_\\_init\\_\\_\n\n```python\ndef __init__(E, kx=None, ky=None, I=None, E0=None, eta=0.1, includeCurv=False, etaCurv=0.1):\n    ...\n```\n\n* `E`: Energy as 1D numpy array\n* `kx`: Momentum along x axis as 1D numpy array, if `None` it is set to 0\n* `ky`: Momentum along y axis as 1D numpy array, if `None` it is set to 0\n* `I`: Measured intensity wrt momentum (rows) and energy (columns), generated if `None`\n* `E0`: Initial guess for band structure energy values, if `None` the median of `E` is taken\n* `eta`: Standard deviation of neighbor interaction term\n* `includeCurv`: Flag, if true curvature term is included during optimization\n* `etaCurv`: Standard deviation of curvature term\n\n##### iter_para\n\n```python\ndef iter_para(num_epoch=1, updateLogP=False, use_gpu=True, disable_tqdm=False, graph_reset=False):\n    ...\n```\n\nHereby, the parallel optimization of Markov Random Field model can be performed to reconstruct an electronic\nband.\n* `num_epoch`: Number of epochs to perform\n* `updateLogP`: Flag, if true logP is updated every half epoch (requires more computations)\n* `use_gpu`: Flag, if true gpu is used for computations if available\n* `disable_tqdm`: Flag, it true no progress bar is shown during optimization\n* `graph_reset`: Flag, if true Tensorflow graph is reset after computation to reduce memory demand\n\n##### normalizeI\n\n```python\ndef normalizeI(kernel_size=None, n_bins=128, clip_limit=0.01, use_gpu=True, threshold=1e-6):\n    ...\n```\n\nThis performs Multidimensional Contrast Limited Adaptive Histogram Equalization (MCLAHE), introduced in [Stimper et al. 2019](https://ieeexplore.ieee.org/document/8895993). The method is a wrapper for the [TensorFlow implementation of the `mclahe` function](https://github.com/VincentStimper/mclahe).\n* `kernel_size`: Tuple of kernel sizes, 1/8 of dimension lengths of x if `None`\n* `n_bins`: Number of bins to be used in the histogram\n* `clip_limit`: Relative intensity limit to be ignored in the histogram equalization\n* `use_gpu`: Flag, if true gpu is used for computations if available\n* `threshold`: Threshold below which intensity values are set to zero\n\n\n## Citation\n\nIf you are using this package within your own projects, please cite it as\n> R. P. Xian, V. Stimper, M. Zacharias, S. Dong, M. Dendzik, S. Beaulieu, B. SchÃ¶lkopf, M. Wolf, L. Rettig, C. Carbogno, S. Bauer, and R. Ernstorfer, \"A machine learning route between band mapping and band structure,\" arXiv:2005.10210, 2020.\n\nBibtex code\n```\n@article{Xian2020,\n    author={R. P. Xian and V. Stimper and M. Zacharias and S. Dong and M. Dendzik and S. Beaulieu and\n            B. SchÃ¶lkopf and M. Wolf and L. Rettig and C. Carbogno and S. Bauer and R. Ernstorfer},\n    journal={arXiv:2005.10210},\n    title={A machine learning route between band mapping and band structure},\n    year={2020},\n}\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/mpes-kit/fuller/tarball/0.9.9",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mpes-kit/fuller",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fuller",
    "package_url": "https://pypi.org/project/fuller/",
    "platform": "",
    "project_url": "https://pypi.org/project/fuller/",
    "project_urls": {
      "Download": "https://github.com/mpes-kit/fuller/tarball/0.9.9",
      "Homepage": "https://github.com/mpes-kit/fuller"
    },
    "release_url": "https://pypi.org/project/fuller/0.9.9/",
    "requires_dist": [
      "numpy",
      "scipy",
      "matplotlib",
      "poppy",
      "natsort",
      "symmetrize",
      "tqdm",
      "silx"
    ],
    "requires_python": "",
    "summary": "Integrated computational framework for electronic band structure reconstruction and parametrization",
    "version": "0.9.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13584155,
  "releases": {
    "0.9.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f74cb26b1b6e4ed8039078fa759c176a91d3872f2de501ea858949f2989f6429",
          "md5": "2147d5cdf070c899d3372e7e237786bd",
          "sha256": "d13e3f7f75e5e2f4ec44117df7ef9a32306ec3db6310239c8e41c24f4a35e9e3"
        },
        "downloads": -1,
        "filename": "fuller-0.9.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2147d5cdf070c899d3372e7e237786bd",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 31490,
        "upload_time": "2020-10-07T05:32:40",
        "upload_time_iso_8601": "2020-10-07T05:32:40.826779Z",
        "url": "https://files.pythonhosted.org/packages/f7/4c/b26b1b6e4ed8039078fa759c176a91d3872f2de501ea858949f2989f6429/fuller-0.9.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd1c78a92edc336214714862f662afa949a4838352f2cc43d14e2ee932b6270c",
          "md5": "9b19e2e58c25685a29b043af01ee5cd0",
          "sha256": "e1510030826a06492b216849f1a44d09bde2a34ff6f2da62645109f83eca5e7c"
        },
        "downloads": -1,
        "filename": "fuller-0.9.9.tar.gz",
        "has_sig": false,
        "md5_digest": "9b19e2e58c25685a29b043af01ee5cd0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12268616,
        "upload_time": "2020-10-07T05:33:03",
        "upload_time_iso_8601": "2020-10-07T05:33:03.007698Z",
        "url": "https://files.pythonhosted.org/packages/cd/1c/78a92edc336214714862f662afa949a4838352f2cc43d14e2ee932b6270c/fuller-0.9.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f74cb26b1b6e4ed8039078fa759c176a91d3872f2de501ea858949f2989f6429",
        "md5": "2147d5cdf070c899d3372e7e237786bd",
        "sha256": "d13e3f7f75e5e2f4ec44117df7ef9a32306ec3db6310239c8e41c24f4a35e9e3"
      },
      "downloads": -1,
      "filename": "fuller-0.9.9-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2147d5cdf070c899d3372e7e237786bd",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 31490,
      "upload_time": "2020-10-07T05:32:40",
      "upload_time_iso_8601": "2020-10-07T05:32:40.826779Z",
      "url": "https://files.pythonhosted.org/packages/f7/4c/b26b1b6e4ed8039078fa759c176a91d3872f2de501ea858949f2989f6429/fuller-0.9.9-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd1c78a92edc336214714862f662afa949a4838352f2cc43d14e2ee932b6270c",
        "md5": "9b19e2e58c25685a29b043af01ee5cd0",
        "sha256": "e1510030826a06492b216849f1a44d09bde2a34ff6f2da62645109f83eca5e7c"
      },
      "downloads": -1,
      "filename": "fuller-0.9.9.tar.gz",
      "has_sig": false,
      "md5_digest": "9b19e2e58c25685a29b043af01ee5cd0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12268616,
      "upload_time": "2020-10-07T05:33:03",
      "upload_time_iso_8601": "2020-10-07T05:33:03.007698Z",
      "url": "https://files.pythonhosted.org/packages/cd/1c/78a92edc336214714862f662afa949a4838352f2cc43d14e2ee932b6270c/fuller-0.9.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}