{
  "info": {
    "author": "Tanner Burns",
    "author_email": "tjburns102@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Modutils\n\n    Modern python3 utilities\n    A collection of classes and functions\n<br>\n    \n[ Skip to docs ](#docs)\n\n    \n# Most common utilities\n\n### aioloop\n    \nThis function provides an easy way to use another defined function to provide async functionality. \nNamed arguments should be provided in a single dictionary inside the list of arguments.\n    \n```python\nimport requests\nfrom modutils import aioloop\n\n# example w/o named arguments\ndef add(x:int,y:int)->int:return x+y\n\nargs = [[x,y] for x in range(0,5) for y in range(5,10)]\nlist_of_returns = aioloop(add, args)\n\n\n# example w/ named arguments\ndef get_url(url, params:dict=None):\n    return requests.get(url, params=params)\n\nargs = [\n        ['https://www.google.com', {'params':{'q':'Why is the sky blue?'}}],\n        ['https://www.github.com']\n    ]\nlist_of_returns = aioloop(get_url, args)\n```\n<br> \n\n### aiobulk\n\naiobulk is a decorator used to add a bulk attribute to the existing function. This decorator leverages aioloop for async functionality.\n    \n```python\nimport requests\nfrom modutils.decorators import aiobulk\n\n# example w/o named arguments\n@aiobulk\ndef add(x:int,y:int)->int:return x+y\n\nargs = [[x,y] for x in range(0,5) for y in range(5,10)]\nlist_of_returns = add.bulk(args)\n\n\n# example w/ named arguments\n@aiobulk\ndef get_url(url, params:dict=None):\n    return requests.get(url, params=params)\n\nargs = [\n        ['https://www.google.com', {'params':{'q':'Why is the sky blue?'}}],\n        ['https://www.github.com']\n    ]\nlist_of_returns = get_url.bulk(args)\n```\n<br>\n\n### BaseSession\n\nThis class is a modified requests session class that enables logging per request and will persistently attempt to resolve requests with incorrect status codes.\n\n```python\nfrom modutils.http import BaseSession\n```\n<br>\n    \n### BaseAsyncSession\n\nThis class is built with BaseSession and aiobulk to provide a bulk attribute for each request functions: get, put, post, patch, head, and delete\n\n```python\nfrom modutils.http import BaseAsyncSession\nsession = BaseAsyncSession()\nargs = [\n        ['https://www.google.com', {'params':{'q':'Why is the sky blue?'}}],\n        ['https://www.github.com']\n    ]\nlist_of_returns = session.get.bulk(args)\n```\n<br>\n\n### Email\n\nThe Email class allows a simple way to send emails via an non-authenticated or authenticated session\n\n```python\nfrom modutils.http import Email\n```\n<br>\n\n### Urlscraper\n\nThe urlscraper method is an easy way to search web pages for matching content of a given pattern\n\n```python\nfrom modutils.http import urlscraper\n# this example will use a regex pattern to find all the sha256 hashes in a given blog\n# note: the blog is fake and will need to be replaced for example\nsha256hashes = urlscraper('https://fakeblogsite.com', '[A-Fa-f0-9]{64}', regex=True)\n```\n\n\n### echo\n\necho is a fancy print that allows you to easily print objects in their prettiest form, add color, and flush the current line.\n\n```python\nfrom modutils import echo\necho({'hello': 'world'}, color='red')\n```\n <br>\n \n<a name=\"docs\"></a>\n# Documentation \n\n- [ modutils.aio ](#modutils.aio_5229308776497159722)\n\t- [ aioloop ](#aioloop_8885906970529181510)\n- [ modutils.decorators ](#modutils.decorators_980589605870121525)\n\t- [ aiobulk.\\_\\_init\\_\\_ ](#aiobulk.__init___1815237342438632813)\n\t- [ aiobulk.bulk ](#aiobulk.bulk_2652515655308176417)\n- [ modutils.http ](#modutils.http_6860961663441781746)\n    - [ urlscraper ](#urlscraper_5869860748378830970)\n\t- [ modutils.http.BaseAsyncSession ](#modutils.http.BaseAsyncSession_7048839415358285160)\n\t\t- [ BaseAsyncSession.\\_\\_init\\_\\_ ](#BaseAsyncSession.__init___2624241592854672828)\n\t- [ modutils.http.BaseSession ](#modutils.http.BaseSession_7129533737347880003)\n\t\t- [ BaseSession.\\_\\_init\\_\\_ ](#BaseSession.__init___284116210118425907)\n\t- [ modutils.http.Email ](#modutils.http.Email_6219263455091284767)\n\t\t- [ Email.\\_\\_init\\_\\_ ](#Email.__init___5909366176742243457)\n\t\t- [ Email.send ](#Email.send_1264049943792425762)\n- [ modutils ](#modutils_8302506306604331608)\n\t- [ echo ](#echo_6254100437156621322)\n\t- [ globpath ](#globpath_8277747260912108967)\n\t- [ has_package ](#has_package_799630035152214553)\n\t- [ import_from ](#import_from_7798535269709248701)\n\t- [ install_package ](#install_package_7206308496330428784)\n\t- [ list_packages ](#list_packages_1639171450864803932)\n\t- [ nget ](#nget_5476107451956719196)\n\t- [ response_to_str ](#response_to_str_3575013933436391480)\n\t- [ scroll ](#scroll_1683689735572407726)\n\t- [ update_package ](#update_package_8893359438089742518)\n\t- [ modutils.sha256 ](#modutils.sha256_6761098578614895022)\n\n\n<a name=\"modutils.aio_5229308776497159722\"></a>\n## modutils.aio\n\nmodutils.aio defines a new type called Eventloop. This type is created at runtime to specify the type by operating system.\n\n<a name=\"aioloop_8885906970529181510\"></a>\n#### `aioloop(function: Callable, args_list: List[List], loop: Eventloop = None, max_async_pool: int = 16, max_futures: int = 100000, disable_progress_bar: bool = False, progress_bar_color: str = 'green_3a', progress_bar_format: str = None) -> list`\n\ncreate new aioloop, run, and return results\n\n    :param fn {Callable}: function to map to arguments\n    :param args_list {List[List]}: list of arguments to send to function\n    :param loop {Eventloop}: a pre-defined asyncio loop\n    :param max_async_pool {int}: max async pool, this will define the number of processes to run at once\n    :param max_futures {int}: max futures, this will define the number of processes to setup and execute at once.\n        If there is a lot of arguments and futures is very large, can cause memory issues.\n    :param disable_progress_bar {bool}: disable progress bar from printing\n    :param progress_bar_color {str}: color of progress bar; default: green\n    :param progress_bar_format {str}: format for progress bar output; default: None\n\n\n    :return list of results\n    \n<a name=\"modutils.decorators_980589605870121525\"></a>\n## modutils.decorators\n    \n<a name=\"aiobulk.__init___1815237342438632813\"></a>\n#### `aiobulk.__init__(self, function: Callable)`\n\n\ninitialize aiobulk\n        the function being decorated will receive a new attribute for the bulk call\n\n        :param function: function being decorated\n        \n\n<a name=\"aiobulk.bulk_2652515655308176417\"></a>\n#### `aiobulk.bulk(self, args_list: List[list], loop: <function NewType.<locals>.new_type at 0x0000021B97E921F0> = None, max_async_pool: int = 16, max_futures: int = 100000, disable_progress_bar: bool = False, progress_bar_color: str = 'green_3a', progress_bar_format: str = None) -> list`\n\nadd a method called 'bulk' to given function\n\n            :param function {Callable}: function to map to arguments\n            :param loop {Eventloop}: a pre-defined asyncio loop\n            :param max_async_pool {int}: max async pool, this will define the number of processes to run at once\n            :param max_futures {int}: max futures, this will define the number of processes to setup and execute at once.\n                If there is a lot of arguments and futures is very large, can cause memory issues.\n            :param disable_progress_bar {bool}: disable progress bar from printing\n            :param progress_bar_color {str}: color of progress bar; default: green\n            :param progress_bar_format {str}: format for progress bar output; default: None\n\n            :return list of results\n        \n\n<a name=\"modutils.http_6860961663441781746\"></a>\n## modutils.http\n\n<a name=\"urlscraper_5869860748378830970\"></a>\n#### `urlscraper(url: str, pattern: str, regex: bool = False) -> list`\n\nurlscraper is a simple method to scrape information from a url based on a given string pattern\n\n    :param url: the url to run pattern against\n    :param pattern: the string representation of the pattern\n    :param regex: flag for using a pattern as regex or string compare\n\n    :return: list of strings that matched or contained pattern\n\n<a name=\"modutils.http.BaseAsyncSession_7048839415358285160\"></a>\n### modutils.http.BaseAsyncSession(self, *args, **kwargs)\n\nBaseAsyncSession to be used for sessions that need to be able to make asynchronous requests\n\n<a name=\"BaseAsyncSession.__init___2624241592854672828\"></a>\n#### `BaseAsyncSession.__init__(self, *args, **kwargs)`\n\ninitialize BaseAsyncSession\n\n        :param args: list of args\n        :param kwargs: dict of named args\n        \n\n<a name=\"modutils.http.BaseSession_7129533737347880003\"></a>\n### modutils.http.BaseSession(self, max_retries: int = 3, pool_connections: int = 16, pool_maxsize: int = 16, resolve_status_codes: list = None, verbose: bool = False, auth: tuple = None)\n\nBaseSession that will log requests and persist requests to attempt to resolve desired status codes\n\n<a name=\"BaseSession.__init___284116210118425907\"></a>\n#### `BaseSession.__init__(self, max_retries: int = 3, pool_connections: int = 16, pool_maxsize: int = 16, resolve_status_codes: list = None, verbose: bool = False, auth: tuple = None)`\n\ninitialize BaseSession\n\n        :param max_retries: maximum amount of retries if non resolved status code found\n        :param pool_connections: number of pool connection; default 16\n        :param pool_maxsize: max number of connections in pool; default 16\n        :param resolve_status_codes: extra status codes to resolve; default None\n        :param verbose: more verbose logging output if response fails; default False\n        :param auth: basic auth username and password tuple; default None        \n        \n\n<a name=\"modutils.http.Email_6219263455091284767\"></a>\n### modutils.http.Email(self, smtp_server, smtp_port, from_address: str = None, authentication_required: bool = False, auth_username: str = None, auth_password: str = None)\n\nClass to easily send emails\n\n<a name=\"Email.__init___5909366176742243457\"></a>\n#### `Email.__init__(self, smtp_server, smtp_port, from_address: str = None, authentication_required: bool = False, auth_username: str = None, auth_password: str = None)`\n\nCreate a new email session\n\n<a name=\"Email.send_1264049943792425762\"></a>\n#### `Email.send(self, subject: str, body: str, to_address_list: list, cc_address_list: list = None, from_address: str = None, encoding: str = 'html', logo_images: list = None, file_attachments: list = None) -> dict`\n\n\n        :param subject: Subject string for email, required\n        :param body: Message content for email, required\n        :param to_address_list: addresses to send email to, required\n        :param cc_address_list: addresses to cc on email, default: None\n        :param from_address: address to send email from, default: None, will use self.from_address if one was given\n        :param encoding: encoding for body, default: html\n        :param logo_images: list of paths to images to use for logos, default: None\n        :param file_attachments: list of paths to attachments for email, default: None\n\n        :return: dict\n\n<a name=\"modutils_8302506306604331608\"></a>\n## modutils\n\n<a name=\"echo_6254100437156621322\"></a>\n#### `echo(content: Any, list_delimiter: str = '\\n', indent: int = 4, color: str = None, flush: bool = False) -> None`\n\necho - automatically pretty print or resolve to a printable object\n\n    :param content: the object to print\n    :param list_delimiter: delimiter to join list; default: \n\n    :param indent: indent space count; default: 4\n    :param color: change color of text; default: None\n    :param flush: flush will make the current line be overwritten; default: False\n    :return: None\n    \n\n<a name=\"globpath_8277747260912108967\"></a>\n#### `globpath(filepath: str) -> str`\n\nconvert a filepath to a glob path, ['/'|''] to '.'\n\n    filepath {str} -- filepath to glob\n\n    return {str} -- new globpath\n    \n\n<a name=\"has_package_799630035152214553\"></a>\n#### `has_package(name: str, version: Union[str, int, float] = None) -> bool`\n\ncheck if current environment has a package\n\n    name {str} -- name of package to check\n    version {Union[str, int, float]} -- OPTIONAL, will append version for a specific version check of package\n\n    return {bool} -- True if package was found and False if not\n    \n\n<a name=\"import_from_7798535269709248701\"></a>\n#### `import_from(globpath: str, name: str) -> Union[object, NoneType]`\n\nImport module and return instance of given function name\n\n    globpath {str} -- the filepath in glob format\n    name {str} -- the method name to import\n\n    return {Union[object, None]} -- method attribute of import\n    \n\n<a name=\"install_package_7206308496330428784\"></a>\n#### `install_package(name: str, force: bool = False, extra_index: str = None, trusted_host: str = None) -> Tuple[str, str]`\n\ninstall a pip3 package using a subprocess in current environment\n\n    name {str} -- name of package to install\n    force {bool} -- force newest edition\n    extra_index {str} -- extra url to index in package manager\n    trusted_host {str} -- extra url where package is hosted\n\n    return {tuple} -- return the output, and error of subprocess run\n    \n\n<a name=\"list_packages_1639171450864803932\"></a>\n#### `list_packages() -> list`\n\nlist current pip3 packages in environment\n\n    return {list} -- a list of available packages\n    \n\n<a name=\"nget_5476107451956719196\"></a>\n#### `nget(dictionary: dict, keys: Iterable, default: Any = None) -> Any`\n\nnget - nested get call to easily retrieve nested information with a single call and set a default\n    Ex.\n        nget(dict, ['key1', 'key2', ..], default)\n        nget(dict, ('key1', 'key2', ..), default)\n\n        nget use an iterable of keys to retrieve nested information and can set a default if a key is not found\n\n\n<a name=\"modutils.stdutils_1737493875\"></a>\n## modutils.stdutils\n\n<a name=\"scroll_1683689735572407726\"></a>\n#### `scroll(content: list, sleep_timer=1, list_delimiter: str = '\\n', indent: int = 4, color: str = None) -> None`\n\nuse echo and a delay to scroll text over same line\n\n    :param content: the object to print\n    :param list_delimiter: delimiter to join list; default: \n\n    :param indent: indent space count; default: 4\n    :param color: change color of text; default: None\n    :return: None\n    \n\n<a name=\"update_package_8893359438089742518\"></a>\n#### `update_package(name: str, extra_index: str = None, trusted_host: str = None) -> Tuple[str, str]`\n\nupdate a pip3 package by name, leverages install_package with force = True\n\n    name {str} -- name of package to install\n    extra_index {str} -- extra url to index in package manager\n    trusted_host {str} -- extra url where package is hosted\n\n    return {tuple} -- return the output, and error of subprocess run\n    \n\n<a name=\"modutils.sha256_6761098578614895022\"></a>\n### modutils.sha256(self, value)\n\nsha256 type",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.github.com/tannerburns/modutils",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "modutils",
    "package_url": "https://pypi.org/project/modutils/",
    "platform": "",
    "project_url": "https://pypi.org/project/modutils/",
    "project_urls": {
      "Homepage": "https://www.github.com/tannerburns/modutils"
    },
    "release_url": "https://pypi.org/project/modutils/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A library with modern utilities to assist development efficiency",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8285439,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "014d354c67073b0e0a1482b1c0debc8fae22a12f859134dbcb1bd861d3fa216a",
          "md5": "37d07edb72e4b5162f8fc37d7390240e",
          "sha256": "85ca6ae5656a9e112651711a38b45459b841bdbffca529d41e6c9b1934191770"
        },
        "downloads": -1,
        "filename": "modutils-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "37d07edb72e4b5162f8fc37d7390240e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2741,
        "upload_time": "2020-04-28T23:43:14",
        "upload_time_iso_8601": "2020-04-28T23:43:14.916924Z",
        "url": "https://files.pythonhosted.org/packages/01/4d/354c67073b0e0a1482b1c0debc8fae22a12f859134dbcb1bd861d3fa216a/modutils-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f156b5abbc5bb6ce864c1d2d005e0a45ff1b8e451f6b3d6162de11a1ebc3f6c0",
          "md5": "acb80ecdbe5bee5894e358b1b546aba7",
          "sha256": "bb53046cf7110cec03b234102395750c361cad541e7a78861130d68ae59150b8"
        },
        "downloads": -1,
        "filename": "modutils-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "acb80ecdbe5bee5894e358b1b546aba7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3129,
        "upload_time": "2020-04-29T03:35:03",
        "upload_time_iso_8601": "2020-04-29T03:35:03.143905Z",
        "url": "https://files.pythonhosted.org/packages/f1/56/b5abbc5bb6ce864c1d2d005e0a45ff1b8e451f6b3d6162de11a1ebc3f6c0/modutils-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b649b390035345ae5825a435b41b65207186641513d15fe5bb73945fc9ccfc58",
          "md5": "0b28af2ec0aeb9346d46f0d4112f2013",
          "sha256": "63bad65851ac035e8d36509a21424f730168b27dd2a7c4c8b9e074717b90e194"
        },
        "downloads": -1,
        "filename": "modutils-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0b28af2ec0aeb9346d46f0d4112f2013",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7333,
        "upload_time": "2020-04-30T20:32:56",
        "upload_time_iso_8601": "2020-04-30T20:32:56.323958Z",
        "url": "https://files.pythonhosted.org/packages/b6/49/b390035345ae5825a435b41b65207186641513d15fe5bb73945fc9ccfc58/modutils-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6017073db8fa074501a4b7d25eaa165fbadd977aa1ec7518d3c0f353ac0cb78",
          "md5": "9c61f81c66faf6540ff734546ce981d1",
          "sha256": "9a66f2b67b3a611f98ebefcc34562fb6983e4532dbfed0b925c12df2f6f6dbf8"
        },
        "downloads": -1,
        "filename": "modutils-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9c61f81c66faf6540ff734546ce981d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7348,
        "upload_time": "2020-05-04T20:10:04",
        "upload_time_iso_8601": "2020-05-04T20:10:04.973681Z",
        "url": "https://files.pythonhosted.org/packages/a6/01/7073db8fa074501a4b7d25eaa165fbadd977aa1ec7518d3c0f353ac0cb78/modutils-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a30ce47ccc804bdf903b2d2e0fe7b3dc3ba1fc64202f2171455f2bd97d82ecc5",
          "md5": "b695a83e42c72345ac4bb18ae6416cdf",
          "sha256": "4cdb837869dd53d606eb0acfebe00956b2140a6ccd789f4028ec5382e6f89322"
        },
        "downloads": -1,
        "filename": "modutils-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "b695a83e42c72345ac4bb18ae6416cdf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9485,
        "upload_time": "2020-06-10T22:53:38",
        "upload_time_iso_8601": "2020-06-10T22:53:38.951942Z",
        "url": "https://files.pythonhosted.org/packages/a3/0c/e47ccc804bdf903b2d2e0fe7b3dc3ba1fc64202f2171455f2bd97d82ecc5/modutils-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4aa80edf2035d3ee3e688d4227c459229884c0867bed48e40a90a570f5fba60b",
          "md5": "e3aaff80ff9edcb425493a21e3e643b0",
          "sha256": "314fd0789679447c1d7a54dede4b96c9c3f938d134069d816b9d881be8c5f2fa"
        },
        "downloads": -1,
        "filename": "modutils-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "e3aaff80ff9edcb425493a21e3e643b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9964,
        "upload_time": "2020-06-29T02:02:25",
        "upload_time_iso_8601": "2020-06-29T02:02:25.501946Z",
        "url": "https://files.pythonhosted.org/packages/4a/a8/0edf2035d3ee3e688d4227c459229884c0867bed48e40a90a570f5fba60b/modutils-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "155d968be2fb4915a2b9ff0bcb90e965d6d7d6780f280606af8e5a03ca727fa7",
          "md5": "1d1b458637889806b67ab052e03a4837",
          "sha256": "bb7a41e86e8670e1ae9d4e1daa94f39b48b0b52ed49acda74f109263921e0811"
        },
        "downloads": -1,
        "filename": "modutils-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "1d1b458637889806b67ab052e03a4837",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12478,
        "upload_time": "2020-07-04T16:23:04",
        "upload_time_iso_8601": "2020-07-04T16:23:04.938273Z",
        "url": "https://files.pythonhosted.org/packages/15/5d/968be2fb4915a2b9ff0bcb90e965d6d7d6780f280606af8e5a03ca727fa7/modutils-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e53179dd640bce24e3ecc6ec651dc4b8e6668b42b169190f805bcb66eb5a6854",
          "md5": "0ebf77475e28002d4799c360a561ec6a",
          "sha256": "cc0bcc9c461084997500acef07b7d668cd80b5436c4cff3cc78b6bfcecb7928f"
        },
        "downloads": -1,
        "filename": "modutils-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ebf77475e28002d4799c360a561ec6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11087,
        "upload_time": "2020-07-24T23:43:21",
        "upload_time_iso_8601": "2020-07-24T23:43:21.727399Z",
        "url": "https://files.pythonhosted.org/packages/e5/31/79dd640bce24e3ecc6ec651dc4b8e6668b42b169190f805bcb66eb5a6854/modutils-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1365734b5e81a91757522fa0fb00a3c38b78e4c37e8d94ccb5491a81ef5eb746",
          "md5": "3859b77ae0f0734cf81bd1839a90d8bd",
          "sha256": "524ae6adf60f799552176a51259b5418e89c7fc5e7683278ac56a81d0f48497e"
        },
        "downloads": -1,
        "filename": "modutils-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3859b77ae0f0734cf81bd1839a90d8bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11113,
        "upload_time": "2020-07-25T00:02:25",
        "upload_time_iso_8601": "2020-07-25T00:02:25.368762Z",
        "url": "https://files.pythonhosted.org/packages/13/65/734b5e81a91757522fa0fb00a3c38b78e4c37e8d94ccb5491a81ef5eb746/modutils-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76254868e89edd387c8fbfe7ea2604836d72bf475ed1318e19f9cfb51e871308",
          "md5": "e4376cb466e84ef272b399d119ce12fa",
          "sha256": "fba4e6cc8fc4911978be47f78925ac5daccdb6cba63cd48a91ab4ebd373092cd"
        },
        "downloads": -1,
        "filename": "modutils-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e4376cb466e84ef272b399d119ce12fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14616,
        "upload_time": "2020-07-26T18:35:44",
        "upload_time_iso_8601": "2020-07-26T18:35:44.740055Z",
        "url": "https://files.pythonhosted.org/packages/76/25/4868e89edd387c8fbfe7ea2604836d72bf475ed1318e19f9cfb51e871308/modutils-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f03ab7fd9d16a5030dad5b1d21b5ce541d32d44ac6fc4137f4d1b69257e71fc",
          "md5": "e82496a544d938690a22da8cfa19bb32",
          "sha256": "49a3d9b06e73e61828304de1fe317c7e868d5247f87c7e75a98323e8d2c5228b"
        },
        "downloads": -1,
        "filename": "modutils-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e82496a544d938690a22da8cfa19bb32",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14537,
        "upload_time": "2020-07-26T19:02:41",
        "upload_time_iso_8601": "2020-07-26T19:02:41.702778Z",
        "url": "https://files.pythonhosted.org/packages/4f/03/ab7fd9d16a5030dad5b1d21b5ce541d32d44ac6fc4137f4d1b69257e71fc/modutils-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b1395813a9765799a04fdbb05a36d982456f94e06c0ac6d6c7ebb36cdd900e9",
          "md5": "69853ae276ba62bfbb9849a9f761015f",
          "sha256": "ce7aeed8ea5686a1744c5af42673eabaa27d3e7c672adee668f837e1b9fabee4"
        },
        "downloads": -1,
        "filename": "modutils-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "69853ae276ba62bfbb9849a9f761015f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14503,
        "upload_time": "2020-07-27T20:58:40",
        "upload_time_iso_8601": "2020-07-27T20:58:40.953509Z",
        "url": "https://files.pythonhosted.org/packages/9b/13/95813a9765799a04fdbb05a36d982456f94e06c0ac6d6c7ebb36cdd900e9/modutils-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89efd3327c4653867bc854aa46c40ebd0118a733631578f882d92b939fb6ad11",
          "md5": "52ab8964c73a5b25b15153eed7f76592",
          "sha256": "ce80e1297608a5c85526905ffa474d48b1470886a2c63ba476989d5eb8605c50"
        },
        "downloads": -1,
        "filename": "modutils-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "52ab8964c73a5b25b15153eed7f76592",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14843,
        "upload_time": "2020-07-28T15:23:43",
        "upload_time_iso_8601": "2020-07-28T15:23:43.768666Z",
        "url": "https://files.pythonhosted.org/packages/89/ef/d3327c4653867bc854aa46c40ebd0118a733631578f882d92b939fb6ad11/modutils-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52165959b5d55ff43b4fc43ccfb6d5c83f7fa8a0f844e0bdbbd105eb7ea529d5",
          "md5": "125d34e2853f0b5a2da247735bc3a799",
          "sha256": "7f7881ce181f472df454a4e37dd037338cf571e6692d88b66cc70a67a28a21cd"
        },
        "downloads": -1,
        "filename": "modutils-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "125d34e2853f0b5a2da247735bc3a799",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14258,
        "upload_time": "2020-08-02T17:19:05",
        "upload_time_iso_8601": "2020-08-02T17:19:05.357175Z",
        "url": "https://files.pythonhosted.org/packages/52/16/5959b5d55ff43b4fc43ccfb6d5c83f7fa8a0f844e0bdbbd105eb7ea529d5/modutils-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2dd33bd7919b759e8f29021f560118618e6461dbd7ae4df95f8db8b8f59ed5ba",
          "md5": "95ef460896d848383f452569af095619",
          "sha256": "454399c8a68e71abbdb33159733c04b04796b2bd5a267c57640eb82b53d4f25d"
        },
        "downloads": -1,
        "filename": "modutils-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "95ef460896d848383f452569af095619",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14893,
        "upload_time": "2020-08-07T03:40:51",
        "upload_time_iso_8601": "2020-08-07T03:40:51.434241Z",
        "url": "https://files.pythonhosted.org/packages/2d/d3/3bd7919b759e8f29021f560118618e6461dbd7ae4df95f8db8b8f59ed5ba/modutils-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67268b11c8f65e99aa0fae3b0b009fe1d1538487a05239a6f442c1e0282fd4dc",
          "md5": "a3707489232ef20589be0c13bf4f95c4",
          "sha256": "d180f66963ec18c052489d1811c519bbe6aec679e4359e8433ec854125cad409"
        },
        "downloads": -1,
        "filename": "modutils-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "a3707489232ef20589be0c13bf4f95c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14899,
        "upload_time": "2020-08-07T03:53:18",
        "upload_time_iso_8601": "2020-08-07T03:53:18.236619Z",
        "url": "https://files.pythonhosted.org/packages/67/26/8b11c8f65e99aa0fae3b0b009fe1d1538487a05239a6f442c1e0282fd4dc/modutils-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ad7111edc3c5b204d9a18dd89378ab97e767dd1000e3c1e2ad9017a96ca1a4d",
          "md5": "5db30a3bea2956a68dd185563adc83ce",
          "sha256": "cbcf1f6bd49b4d6a1c53585e08cc63172ca396a4d838375652ceba3918b7f5ff"
        },
        "downloads": -1,
        "filename": "modutils-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "5db30a3bea2956a68dd185563adc83ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15164,
        "upload_time": "2020-09-22T15:34:33",
        "upload_time_iso_8601": "2020-09-22T15:34:33.047496Z",
        "url": "https://files.pythonhosted.org/packages/2a/d7/111edc3c5b204d9a18dd89378ab97e767dd1000e3c1e2ad9017a96ca1a4d/modutils-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e5971ff37679dbfb8f9b31927a7e9b3e7db5ddf5a6c24854771b001e97e6abc",
          "md5": "25b8701a83d73db6cbe57f33ca833c0c",
          "sha256": "58db48e561631c1432e53320170fb4112ada80c7aef20457eccaa06a78108ac3"
        },
        "downloads": -1,
        "filename": "modutils-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "25b8701a83d73db6cbe57f33ca833c0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15054,
        "upload_time": "2020-09-28T00:24:43",
        "upload_time_iso_8601": "2020-09-28T00:24:43.432005Z",
        "url": "https://files.pythonhosted.org/packages/1e/59/71ff37679dbfb8f9b31927a7e9b3e7db5ddf5a6c24854771b001e97e6abc/modutils-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e5971ff37679dbfb8f9b31927a7e9b3e7db5ddf5a6c24854771b001e97e6abc",
        "md5": "25b8701a83d73db6cbe57f33ca833c0c",
        "sha256": "58db48e561631c1432e53320170fb4112ada80c7aef20457eccaa06a78108ac3"
      },
      "downloads": -1,
      "filename": "modutils-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "25b8701a83d73db6cbe57f33ca833c0c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15054,
      "upload_time": "2020-09-28T00:24:43",
      "upload_time_iso_8601": "2020-09-28T00:24:43.432005Z",
      "url": "https://files.pythonhosted.org/packages/1e/59/71ff37679dbfb8f9b31927a7e9b3e7db5ddf5a6c24854771b001e97e6abc/modutils-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}