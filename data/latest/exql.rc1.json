{
  "info": {
    "author": "Tabish",
    "author_email": "taabishm2@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# exql\nPersist Excel/CSV sheets to MySQL (and vice versa)\n# Installation\n```pip install exql```\n# How it works\nConvert a directory into a database and the .csv and .xls files in that directory to tables (or vice versa i.e. database/table to director/.csv). Currently, only .csv/.xsl to MySQL conversion is supported.<br>\n```\ndirectory <==> database\nCSV/Excel sheets in directory <==> tables in database \n```\nFor example,\n```\nMyDir           <->     CREATE SCHEMA MyDir;\n|-file1.csv     <->     CREATE TABLE file1 (...);\n|-file2.xlsx    <->     CREATE TABLE file2 (...);\n```\n# Usage\nImport exql and create an Exql object passing your MySQL username, password, etc.\n```python\nfrom exql import exql\nexql_obj = exql.Exql(\"root\", \"mysql@123\", \"localhost\", 3306, False)\n```\nCreate a database by passing path of directory to be converted to a DB. A sample directory is present in the `resources` directory\n```python\nexql_obj.create_db_from_directory(\"/path/demo_university_db\")\n```\nSimilarly, other methds can be used to create individual tables, delete rows, etc.\n\n| Method  | Description |\n| ------------- | ------------- |\n| create_db_from_directory  | Create MySQL DB with name same as the directory name and tables built using .csv/.xlsx files present within the directory  |\n| create_table_from_csv  | Persist data from a .csv/.xslx file to a single MySQL table |\n| insert_in_table|Insert data from .csv into existing table |\n|select_into_csv|Select rows read from a DB using the provided query into a .csv|\n|delete_from_db|Delete rows matching column-value pairs provided in .csv from MySQL table|\n|write_db_to_dir|Create a directory containing all tables of a DB saved as .csv files|\n### Note\n- In the .xsl or .csc files, SQL commands can be provided directly. Thus, the .csv or .xsl can have SQL queries as follows\n\n| student_id  | name | age | added_on |\n| ------------- | ------------- | ------------- |------------- |\n|INT|VARCHAR(100)|INT|DATETIME|\nPRIMARY KEY|NOT NULL|NOT NULL|\n| | |\n100001|(SELECT UPPER('John Keats'))|45|now()\n100002|'William Shakespeare'|23|now()\n  (SELECT COUNT(*) FROM table2)|'Robert Frost'|54|now()\n- Cells containing text must be enclosed in inverted commas or else they would be interpreted as SQL keywords/identifiers\n- Refer to the `resources` folder for .csv/.xsl file templates needed for table creation/insertion/deletion\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/taabishm2/exql",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "exql",
    "package_url": "https://pypi.org/project/exql/",
    "platform": "",
    "project_url": "https://pypi.org/project/exql/",
    "project_urls": {
      "Bug Tracker": "https://github.com/taabishm2/exql/issues",
      "Homepage": "https://github.com/taabishm2/exql"
    },
    "release_url": "https://pypi.org/project/exql/1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Persist Excel/CSV sheets to MySQL (and vice versa)",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10139479,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5af71ec7bd41fe3d3309f0c1425732c2a66b012522e0ae16953e1ff37b1db2b0",
          "md5": "685e682143496d1c002ca14f1900b967",
          "sha256": "396ca05f37723e464ee5e8b974a9925061ecc583294ac40803b6db3d3e01782e"
        },
        "downloads": -1,
        "filename": "exql-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "685e682143496d1c002ca14f1900b967",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13343,
        "upload_time": "2021-04-22T13:52:10",
        "upload_time_iso_8601": "2021-04-22T13:52:10.851286Z",
        "url": "https://files.pythonhosted.org/packages/5a/f7/1ec7bd41fe3d3309f0c1425732c2a66b012522e0ae16953e1ff37b1db2b0/exql-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5af71ec7bd41fe3d3309f0c1425732c2a66b012522e0ae16953e1ff37b1db2b0",
        "md5": "685e682143496d1c002ca14f1900b967",
        "sha256": "396ca05f37723e464ee5e8b974a9925061ecc583294ac40803b6db3d3e01782e"
      },
      "downloads": -1,
      "filename": "exql-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "685e682143496d1c002ca14f1900b967",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13343,
      "upload_time": "2021-04-22T13:52:10",
      "upload_time_iso_8601": "2021-04-22T13:52:10.851286Z",
      "url": "https://files.pythonhosted.org/packages/5a/f7/1ec7bd41fe3d3309f0c1425732c2a66b012522e0ae16953e1ff37b1db2b0/exql-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}