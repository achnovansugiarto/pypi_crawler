{
  "info": {
    "author": "Abunachar Yeahhia",
    "author_email": "abunachar1236@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# UMS\n\nInteract UMS programmatically using a simple Python Library.\nAllows User to View User profile, Annoucement, Messages, Datesheet, grades, marks termwise etc.\n\nDo fork and star ⭐ this repository if you like it.\n\n## Contents\n\n- [ Getting Started ](#getting-started)\n- [ Methods / Functions ](#Methods)\n\n  - [ User Profile ](#user-profile)\n  - [ Announcements ](#announcements)\n  - [ Messages ](#Messages)\n  - [ Grades ](#Grades)\n  - [ Marks ](#Marks)\n  - [ Classes ](#Classes)\n  - [ Datesheet ](#datesheet)\n\n- [ Contribute ](#contribute)\n\n---\n\n## Getting Started\n\nInstall this package from pypi\n\n```\n$ pip install ums\n$ python\n>>> from ums import User\n>>>\n```\n\n---\n\n## Methods\n\n## `See All User Methods/Functions`\n\n### User Profile\n\n- To get User detail\n- function Name : `user_profile()`\n- This function takes no argument\n- This function return a `Dictionary` Object\n  - `data` : user detail\n    - `Name` : Name of the User ( dict object )\n      - `Full Name` : Fullname of User\n      - `First Name` : First name\n      - `Middle Name` : Middle name ( if available )\n      - `Last Name` : Last Name ( if available )\n    - `RegNo` : Registration Number of user\n    - `Rollno` : Roll Number of User\n    - `Term` : Current Term\n    - `Group` : Class Group\n    - `Section` : Class section\n    - `Programme` : User Programme Name\n    - `Book Issued` : Number of Book user issued from University Library\n  - `datetime` : timestamp when data is generated\n\n#### Usage\n\n```python\nfrom ums import User\n\nregno = < REGISTRATION NUMBER >\npassword = < PASSWORD >\nuser = User(registration=regno, password=password)\n\nprofile = user.user_profile()\nprint(profile)\n```\n\n---\n\n### Announcements\n\n- To get all recent annoucements\n- Function name : `announcements()`\n- This function takes no argument\n- This function returns a `Dictionary` object\n  - `data` : list of all announcement\n    - `id` : Annoucement Id\n    - `title` : Title of the announcement\n    - `body` : Main body of the annoucement\n    - `media` : list of media attached to the announcement ( if any )\n  - `datatime` : timestamp when data is generated\n\n#### Usage\n\n```python\nfrom ums import User\n\nregno = < REGISTRATION NUMBER >\npassword = < PASSWORD >\nuser = User(registration=regno, password=password)\n\nannouncements = user.annoucements()\nprint(annoucements)\n```\n\n---\n\n### Messages\n\n- To get all the recent messages\n- Function name : `messages()`\n- This function takes no argument\n- This function return a `Dictionary` object\n  - `data` : list of all messages\n    - `id` : Message Id\n    - `subject` : Subject of message\n    - `body` : Main body of the message\n    - `date` : date of message when published\n  - `datetime` : timestamp when data is generated\n\n#### Usage\n\n```python\nfrom ums import User\n\nregno = < REGISTRATION NUMBER >\npassword = < PASSWORD >\nuser = User(registration=regno, password=password)\n\nmessages = user.messages()\nprint(messages)\n```\n\n---\n\n### Grades\n\n- To get Termwise grade\n- Function name : `grades()`\n- This function takes no argument\n- This function return a `Dictionary` Object\n  - `data` : List of Different term\n    - `term` : term / semester number\n    - `tgpa` : term / semester tgpa\n    - `grades` : List of grades of all subject of that term\n      - `course` : Course name\n      - `grade` : grade in that course\n  - `datetime` : timestamp when data is generated\n\n#### Usage\n\n```python\nfrom ums import User\n\nregno = < REGISTRATION NUMBER >\npassword = < PASSWORD >\nuser = User(registration=regno, password=password)\n\ngrades = user.grades()\nprint(grades)\n```\n\n---\n\n### Marks\n\n- To get Termwise Marks\n- Function name : `marks()`\n- This function takes no argument\n- This functiom return a `Dictionary` Object\n  - `data` : List of different term\n    - `termid` : term id\n    - `courses` : list of diffeent courses of that term\n      - `course` : Name of the course\n      - `marks` : list of different marks of that course\n        - t`ype : type of mark\n        - `marks` : list of marks out of different scheme\n  - `datetime` : timestamp when data is generated\n\n#### Usage\n\n```python\nfrom ums import User\n\nregno = < REGISTRATION NUMBER >\npassword = < PASSWORD >\nuser = User(registration=regno, password=password)\n\nmarks = user.marks()\nprint(marks)\n```\n\n---\n\n### Classes\n\n- To get all classes of current Day\n- Function name : `classes()`\n- This function takes no argument\n- This function return a `Dictionary` Object\n  - `data` : List of different Courses\n    - `course` : Course name\n    - `timing` : class timing\n    - `platform` : Class platform\n    - `status` : current class status of that course\n  - `datetime` : timestamp when data is generated\n\n#### Usage\n\n```python\nfrom ums import User\n\nregno = < REGISTRATION NUMBER >\npassword = < PASSWORD >\nuser = User(registration=regno, password=password)\n\nclasses = user.classes()\nprint(classes)\n```\n\n---\n\n### Datesheet\n\n- To get Upcoming Exam Sheet ( if available )\n- Function name : `datesheet()`\n- This function takes no argument\n- This function return a `Dictionary` Object\n  - `data` : List of different courses\n    - `id` : Id\n    - `c_code` : Course Code\n    - `course` : Course name\n    - `report` : Reporting timing\n    - `date` : Exam date\n    - `timing` : Exam timing\n  - `datetime` : timestamp when data is generated\n\n#### Usage\n\n```python\nfrom ums import User\n\nregno = < REGISTRATION NUMBER >\npassword = < PASSWORD >\nuser = User(registration=regno, password=password)\n\ndatesheet = user.datesheet()\nprint(datesheet)\n```\n\n---\n\n## Contribute\n\n- This Project is open for contibution, feel free to contibute new feature, requests and bug fixes\n- To contibute fork this repository\n- Bug fix / new feature / Optimization :\n  - Create a new branch\n  - Makes changes to that branch, create a new Pull request and describe your fixes or addition of new feature\n- Feature request :\n  - Create a new Issue with tag `new feature` and describe your feature you want in upcoming version\n\n---\n\nMade with 💜 in India\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/knight-byte/Ums/archive/v0.3.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/knight-byte/Ums",
    "keywords": "lpu ums,ums,student,university management system,university,lpu",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ums",
    "package_url": "https://pypi.org/project/ums/",
    "platform": "",
    "project_url": "https://pypi.org/project/ums/",
    "project_urls": {
      "Download": "https://github.com/knight-byte/Ums/archive/v0.3.0.tar.gz",
      "Homepage": "https://github.com/knight-byte/Ums"
    },
    "release_url": "https://pypi.org/project/ums/0.3.0/",
    "requires_dist": [
      "bs4",
      "requests",
      "lxml"
    ],
    "requires_python": "",
    "summary": "LPU UMS api for extracting user data like Profile, annoucement, messages, Timetable, Grades etc.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11820157,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88fc95b142ff88493e5ebb984e8f719a2bd4ba3d36c20ace19518db43d33ebcb",
          "md5": "79f1a58dffe9ae94d1b5fa1a8db9c7d8",
          "sha256": "2f17364c4c803c7224e52c72d9c059d6f3e79201334493ab14872460d165a7ad"
        },
        "downloads": -1,
        "filename": "ums-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "79f1a58dffe9ae94d1b5fa1a8db9c7d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11262,
        "upload_time": "2021-06-10T07:30:15",
        "upload_time_iso_8601": "2021-06-10T07:30:15.942742Z",
        "url": "https://files.pythonhosted.org/packages/88/fc/95b142ff88493e5ebb984e8f719a2bd4ba3d36c20ace19518db43d33ebcb/ums-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f939686a689072795e3802b72106785559c0c9175244530c768f1c8c1f6e620",
          "md5": "ffed6b54bc4b56445176469a0720c3a1",
          "sha256": "cd8346c67388fdde534faeca02677ed440e72e7e0916c639e3171ee629a3175d"
        },
        "downloads": -1,
        "filename": "ums-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ffed6b54bc4b56445176469a0720c3a1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9795,
        "upload_time": "2021-10-25T06:01:32",
        "upload_time_iso_8601": "2021-10-25T06:01:32.275165Z",
        "url": "https://files.pythonhosted.org/packages/0f/93/9686a689072795e3802b72106785559c0c9175244530c768f1c8c1f6e620/ums-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73a428b7443f8f144c14012219364bc1bffce8d8920cdf308c98fb0fa319fd3a",
          "md5": "0fe831dd35d78d177d97e33b1dcc02bd",
          "sha256": "7f900469123cca25918a143d4647428997517ddfc614f60a52ee6eed186ac6bd"
        },
        "downloads": -1,
        "filename": "ums-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0fe831dd35d78d177d97e33b1dcc02bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10773,
        "upload_time": "2021-10-25T06:01:36",
        "upload_time_iso_8601": "2021-10-25T06:01:36.539837Z",
        "url": "https://files.pythonhosted.org/packages/73/a4/28b7443f8f144c14012219364bc1bffce8d8920cdf308c98fb0fa319fd3a/ums-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f939686a689072795e3802b72106785559c0c9175244530c768f1c8c1f6e620",
        "md5": "ffed6b54bc4b56445176469a0720c3a1",
        "sha256": "cd8346c67388fdde534faeca02677ed440e72e7e0916c639e3171ee629a3175d"
      },
      "downloads": -1,
      "filename": "ums-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ffed6b54bc4b56445176469a0720c3a1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9795,
      "upload_time": "2021-10-25T06:01:32",
      "upload_time_iso_8601": "2021-10-25T06:01:32.275165Z",
      "url": "https://files.pythonhosted.org/packages/0f/93/9686a689072795e3802b72106785559c0c9175244530c768f1c8c1f6e620/ums-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "73a428b7443f8f144c14012219364bc1bffce8d8920cdf308c98fb0fa319fd3a",
        "md5": "0fe831dd35d78d177d97e33b1dcc02bd",
        "sha256": "7f900469123cca25918a143d4647428997517ddfc614f60a52ee6eed186ac6bd"
      },
      "downloads": -1,
      "filename": "ums-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0fe831dd35d78d177d97e33b1dcc02bd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10773,
      "upload_time": "2021-10-25T06:01:36",
      "upload_time_iso_8601": "2021-10-25T06:01:36.539837Z",
      "url": "https://files.pythonhosted.org/packages/73/a4/28b7443f8f144c14012219364bc1bffce8d8920cdf308c98fb0fa319fd3a/ums-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}