{
  "info": {
    "author": "XLAB d.o.o.",
    "author_email": "pypi@xlab.si",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Python object store library for different platforms\n\nThis is a python library for different object storages that have common methods.\n\nIt is currently meant to support the following object storage platforms:\n\n- [MinIO](https://min.io/)\n- [Amazon S3](https://aws.amazon.com/s3/)\n- [Azure BLOB Container Storage](https://docs.microsoft.com/en-us/azure/storage/common/storage-introduction)\n\nThe library allows and adheres basic functionalities of object store platforms that are listed below:\n\n* connecting to particular object store\n* storing objects to buckets\n* retrieving object from buckets\n\n\n## Table of Contents\n  - [Prerequisites](#prerequisites)\n  - [Installation](#installation)\n  - [Cleanup](#cleanup)\n  - [Usage](#usage)\n    - [Creating a specific object storage client](#creating-a-specific-object-storage-client)\n        - [MinIO](#minio)\n        - [AWS S3](#aws-s3)\n        - [Azure](#azure)\n    - [Reading from bucket](#reading-from-bucket)\n    - [Writing to bucket](#writing-to-bucket)\n\n## Prerequisites\n\nTo properly build and use the library, you have to install python2 (with pip) or python3 (with pip3) and set up \na virtual environment. You might need to run the following commands for python installation:\n\n```bash\nsudo apt update\nsudo apt install -y python3-venv python3-wheel python-wheel-common\n```\n\n## Installation\n\nThe easiest way to install `object_store` library is to install it into virtual environment:\n\n```bash\n# clone this repository\ngit clone git@github.com:xlab-si/python-object-store-library.git\n\n# setup virtual environment\npython3 -m venv .venv && . .venv/bin/activate\npip install object_store\n\n# python2\npython setup.py bdist_wheel\npip install dist/object_store-0.0.1-py2-none-any.whl\n\n# python3\npython3 setup.py bdist_wheel\npip3 install dist/object_store-0.0.1-py3-none-any.whl\n\n# this will be relevant when the package gets published to PyPi\npip install object_store\n```\n\nAfter this you can import the library in your python files using `import object_store`.\n\n## Cleanup\n\nThe cleanup process is also important. To unistall this library run `pip uninstall object store` for python2 or/and `pip3 uninstall object store` for python3. You\nshould also remove files from your interpreter path (for example `rm -rf ~/.local/lib/python3.7/site-packages/object_store/` and also any wheel files like `rm -rf ~/.local/lib/python3.7/site-packages/object_store-0.1.0.dist-info/`).\nWheel files are also present in `dist` folder of the library. If you want to reinstall the library you should probabaly remove them.\n\n## Usage\n\nThis library provides different functions that are available to be used along with different object stores.\n\nSupported object storages are stored in python Enum type, named `ObjectStorageType`, where three constants representing three object\nstorages are specified: `AWS_S3`, `AZURE_CONTAINERS` and `MINIO`.\n\nCurrently you can use the following methods:\n\n| Method | Purpose\n|:-------------|:-------------|\n| **create_client** | Creates a new objest store client |\n| **retrieve_from_bucket** | Retrieves object from bucket |\n| **store_to_bucket** | Stores object to bucket |\n\nThese methods are further explained in the next sections. \n\n### Creating a specific object storage client\n\nTo create an object storage client you have to use `create_client(self, *args, **kwargs)` method.\n\n#### MinIO\n\nIf you are using MinIO object storage you have to somehow provide the IP of the storage and its access and\nsecret key. You can do this directly by putting keyworded arguments into `create client` method like\nthis: \n\n```python\nfrom object_store.min_io import MinIO\n\nminio = MinIO()\nminio.create_client(ip='192.0.2.1',\n                    access_key='AKIAIOSFODNN7EXAMPLE',\n                    secret_key='wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY')\n```\n\nTo avoid direct contact with different object storages the is a class called `ObjectStorageCreator` that creates\nobject storage objects for us by using `create_storage` function. Be careful pass the proper `ObjectStorageType` to its constructor. So in case of MinIO we will use `ObjectStorageType.MINIO`. The full usage is shown in the example below (for MinIO credentials we use example IPs, access key and secret key):\n\n```python\nfrom object_store.object_storage_creator import ObjectStorageCreator\nfrom object_store.object_storage_type import ObjectStorageType\n\nobject_storage_creator = ObjectStorageCreator(ObjectStorageType.MINIO)\nminio_client = object_storage_creator.create_storage(ip='192.0.2.1',\n                     access_key='AKIAIOSFODNN7EXAMPLE',\n                     secret_key='wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY')\n```\n\n#### AWS S3\n\nFor the AWS S3 bucket storage you have to set the type of storage to `ObjectStorageType.AWS_S3`. From there you can just\nuse `create_storage` function to create your client because this will automatically take you AWS credentials that\nwere set up on your system.\n\n```python\nfrom object_store.object_storage_creator import ObjectStorageCreator\nfrom object_store.object_storage_type import ObjectStorageType\n\nobject_storage_creator = ObjectStorageCreator(ObjectStorageType.AWS_S3)\naws_s3_client = object_storage_creator.create_storage()\n```\n\n#### Azure\n\nFor the Azure Container BLOB storage you have to set the type of storage to `ObjectStorageType.AZURE_CONTAINERS`. From there you can use `create_storage` function to create your client and pass your Azure connection string (you can find it in Azure Portal inder Azure Active Directory Settings).\n\n```python\nfrom object_store.object_storage_creator import ObjectStorageCreator\nfrom object_store.object_storage_type import ObjectStorageType\n\nobject_storage_creator = ObjectStorageCreator(ObjectStorageType.AZURE_CONTAINERS)\nazure_client = object_storage_creator.create_storage(connection_string=\"your-connection-string\")\n```\n\n### Reading from bucket\n\nTo get something from your bucket in your object storage, you can freely use `retrieve_from_bucket(self, source_bucket, file_name)` method where you pass `source_bucket` variable as a name of your bucket and `file_name` which is the name of your element in the bucket that you want to retrieve (the file/element will be also stored in `/tmp` folder under the same name). See\nthe example below:\n\n```python\nfrom object_store.object_storage_creator import ObjectStorageCreator\nfrom object_store.object_storage_type import ObjectStorageType\n\nobject_storage_creator = ObjectStorageCreator(ObjectStorageType.AWS_S3)\naws_s3_client = object_storage_creator.create_storage()\naws_s3_client.retrieve_from_bucket(\"my_bucket\", \"my_picture\")\n```\n\n### Writing to bucket\n\nTo store something into an existing bucket use `store_to_bucket(self, destination_bucket, file_name, img_path)` method, where\nyou pass `destination_bucket` argument as the name of the bucket where you want to store your object. The name of the\nelement in the bucket must be specified with `file_name` argument, whereas `img_path` argument is used fot\nthe absolute/relative path to the element. See the example below:\n\n```python\nfrom object_store.object_storage_creator import ObjectStorageCreator\nfrom object_store.object_storage_type import ObjectStorageType\n\nobject_storage_creator = ObjectStorageCreator(ObjectStorageType.MINIO)\nminio_client = object_storage_creator.create_storage(ip='192.0.2.1',\n                     access_key='AKIAIOSFODNN7EXAMPLE',\n                     secret_key='wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY')\nminio_client.store_to_bucket(\"my_destination_bucket\", \"my_new_picture\", \"/home/pc/image.png\")\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xlab-si/python-object-store-library",
    "keywords": "library,object store,python,aws,s3,azure,minio,bucket,container",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "object-store",
    "package_url": "https://pypi.org/project/object-store/",
    "platform": "",
    "project_url": "https://pypi.org/project/object-store/",
    "project_urls": {
      "Bug Tracker": "https://github.com/xlab-si/python-object-store-library/issues",
      "Homepage": "https://github.com/xlab-si/python-object-store-library",
      "Source Code": "https://github.com/xlab-si/python-object-store-library"
    },
    "release_url": "https://pypi.org/project/object-store/0.1.0/",
    "requires_dist": [
      "minio (==5.0.4)",
      "boto3 (==1.10.9)",
      "azure (==4.0.0)",
      "azure-storage (==0.36.0)"
    ],
    "requires_python": "",
    "summary": "Python library for different object storages that have common methods.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7162607,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c9741df48f162bf3dc1226198c42ae5cbd4e8fe52cda70abe402b1140e3955a",
          "md5": "d7ed85176cbbec58a58eb364b7c41383",
          "sha256": "035848f4ac9b0b47f673d2561a38fc887c1d792a306a2d046e321a2da5dedb6b"
        },
        "downloads": -1,
        "filename": "object_store-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7ed85176cbbec58a58eb364b7c41383",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11340,
        "upload_time": "2020-03-11T13:44:59",
        "upload_time_iso_8601": "2020-03-11T13:44:59.344612Z",
        "url": "https://files.pythonhosted.org/packages/8c/97/41df48f162bf3dc1226198c42ae5cbd4e8fe52cda70abe402b1140e3955a/object_store-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9413ced0bc411a176d338d9748b766acbea43d42e008d05b41f0b08c2eb581e7",
          "md5": "10ae90a044d39ce5c9a8c165cbb71832",
          "sha256": "6d81efa1022d9e0d3782ff454f4d6221f7797f2c10c7c292618d038192e32897"
        },
        "downloads": -1,
        "filename": "object_store-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "10ae90a044d39ce5c9a8c165cbb71832",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9353,
        "upload_time": "2020-03-11T13:45:01",
        "upload_time_iso_8601": "2020-03-11T13:45:01.440287Z",
        "url": "https://files.pythonhosted.org/packages/94/13/ced0bc411a176d338d9748b766acbea43d42e008d05b41f0b08c2eb581e7/object_store-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c9741df48f162bf3dc1226198c42ae5cbd4e8fe52cda70abe402b1140e3955a",
        "md5": "d7ed85176cbbec58a58eb364b7c41383",
        "sha256": "035848f4ac9b0b47f673d2561a38fc887c1d792a306a2d046e321a2da5dedb6b"
      },
      "downloads": -1,
      "filename": "object_store-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d7ed85176cbbec58a58eb364b7c41383",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11340,
      "upload_time": "2020-03-11T13:44:59",
      "upload_time_iso_8601": "2020-03-11T13:44:59.344612Z",
      "url": "https://files.pythonhosted.org/packages/8c/97/41df48f162bf3dc1226198c42ae5cbd4e8fe52cda70abe402b1140e3955a/object_store-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9413ced0bc411a176d338d9748b766acbea43d42e008d05b41f0b08c2eb581e7",
        "md5": "10ae90a044d39ce5c9a8c165cbb71832",
        "sha256": "6d81efa1022d9e0d3782ff454f4d6221f7797f2c10c7c292618d038192e32897"
      },
      "downloads": -1,
      "filename": "object_store-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "10ae90a044d39ce5c9a8c165cbb71832",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9353,
      "upload_time": "2020-03-11T13:45:01",
      "upload_time_iso_8601": "2020-03-11T13:45:01.440287Z",
      "url": "https://files.pythonhosted.org/packages/94/13/ced0bc411a176d338d9748b766acbea43d42e008d05b41f0b08c2eb581e7/object_store-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}