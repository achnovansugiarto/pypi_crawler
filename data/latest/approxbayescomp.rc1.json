{
  "info": {
    "author": "Patrick Laub and Pierre-Olivier Goffard",
    "author_email": "patrick.laub@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# The Python package 'approxbayescomp' for Approximate Bayesian Computation\n\nTo install simply run `pip install approxbayescomp`.\n\nThis package is the result of our paper \"[Approximate Bayesian Computation to fit and compare insurance loss models](https://arxiv.org/abs/2007.03833)\".\nIt implements an efficient ABC algorithm -- the sequential Monte Carlo (SMC) algorithm -- and is targeted towards insurance problems (specifically, fitting loss distributions), though it is easily adapted to other situations.\n\nFor example, imagine we have an i.i.d. sample of random sums of lognormal variables where the number of summands is Poisson distributed.\nThe fit this data we would run:\n\n```python\nimport approxbayescomp as abc\n\n# Load data to fit\nobsData = ...\n\n# Frequency-Loss Model\nfreq = \"poisson\"\nsev = \"lognormal\"\npsi = abc.Psi(\"sum\") # Aggregation process\n\n# Fit the model to the data using ABC\nprior = abc.IndependentUniformPrior([(0, 100), (-5, 5), (0, 3)])\nmodel = abc.Model(freq, sev, psi, prior)\nfit = abc.smc(numIters, popSize, obsData, model)\n```\n\nFor a description of the aims and methodology of ABC check out our paper, it is written with ABC newcomers in mind.\nFor examples of this package in use, check out the Jupyter notebooks in our [online supplement repository](https://github.com/LaGauffre/ABCFitLoMo) for the paper.\n\nThe main design goal for this package was computational speed.\nABC is notoriously computationally demanding, so we spent a long time optimising the code as much as possible.\nThe key functions are JIT-compiled to C with `numba` (we experimented with JIT-compiling the entire SMC algorithm, but `numba`'s random variable generation is surprisingly slower than `numpy`'s implementation).\nEverything that can be `numpy`-vectorised has been.\nAnd we scale to use as many CPU cores available on a machine using `joblib`.\nWe also aimed to have total reproducibility, so for any given seed value the resulting ABC posterior samples will always be identical. \n\nOur main dependencies are joblib, numba, numpy, and scipy.\nThe package also uses psutil, matplotlib, fastprogress, and hilbertcurve, though in most cases these can be commented out if it were necessary.\n\nPatrick has a rough start at a C++ version of this package at the [cppabc](https://github.com/Pat-Laub/cppabc) repository.\nIt only handles the specific Geometric-Exponential random sums case, though if you are interested in collaborating to expand this, let him know!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Pat-Laub/approxbayescomp",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "approxbayescomp",
    "package_url": "https://pypi.org/project/approxbayescomp/",
    "platform": "",
    "project_url": "https://pypi.org/project/approxbayescomp/",
    "project_urls": {
      "Homepage": "https://github.com/Pat-Laub/approxbayescomp"
    },
    "release_url": "https://pypi.org/project/approxbayescomp/0.1.0/",
    "requires_dist": [
      "joblib",
      "numba",
      "numpy (>=1.17)",
      "scipy (>=1.4)",
      "psutil",
      "matplotlib",
      "fastprogress",
      "hilbertcurve (>=2.0)"
    ],
    "requires_python": "",
    "summary": "Approximate Bayesian Computation for actuaries",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10628352,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de163f5e8dd37ae9bf35d9d285d88fcba02c2ae8daae39c6bc7400a9bc31fe0c",
          "md5": "1d246759a5f22134ffbf1cb136041623",
          "sha256": "13a92221dcf7ac04039639f4d0dacae6230bd7ba9e5732eeab4fa64e052d5481"
        },
        "downloads": -1,
        "filename": "approxbayescomp-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d246759a5f22134ffbf1cb136041623",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18048,
        "upload_time": "2021-06-12T00:47:03",
        "upload_time_iso_8601": "2021-06-12T00:47:03.650608Z",
        "url": "https://files.pythonhosted.org/packages/de/16/3f5e8dd37ae9bf35d9d285d88fcba02c2ae8daae39c6bc7400a9bc31fe0c/approxbayescomp-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4384827cd21738574a49ad580697f283e52d37aa8a906eb3205a8f3dfdd68e7",
          "md5": "9e66a2be0a651eb753a05c183fac8975",
          "sha256": "d3c46ccfcddbe649d0571cbe959ab752c611b92fc67c42aa13aa726283112f21"
        },
        "downloads": -1,
        "filename": "approxbayescomp-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9e66a2be0a651eb753a05c183fac8975",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17232,
        "upload_time": "2021-06-12T00:47:05",
        "upload_time_iso_8601": "2021-06-12T00:47:05.564954Z",
        "url": "https://files.pythonhosted.org/packages/a4/38/4827cd21738574a49ad580697f283e52d37aa8a906eb3205a8f3dfdd68e7/approxbayescomp-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de163f5e8dd37ae9bf35d9d285d88fcba02c2ae8daae39c6bc7400a9bc31fe0c",
        "md5": "1d246759a5f22134ffbf1cb136041623",
        "sha256": "13a92221dcf7ac04039639f4d0dacae6230bd7ba9e5732eeab4fa64e052d5481"
      },
      "downloads": -1,
      "filename": "approxbayescomp-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1d246759a5f22134ffbf1cb136041623",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 18048,
      "upload_time": "2021-06-12T00:47:03",
      "upload_time_iso_8601": "2021-06-12T00:47:03.650608Z",
      "url": "https://files.pythonhosted.org/packages/de/16/3f5e8dd37ae9bf35d9d285d88fcba02c2ae8daae39c6bc7400a9bc31fe0c/approxbayescomp-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4384827cd21738574a49ad580697f283e52d37aa8a906eb3205a8f3dfdd68e7",
        "md5": "9e66a2be0a651eb753a05c183fac8975",
        "sha256": "d3c46ccfcddbe649d0571cbe959ab752c611b92fc67c42aa13aa726283112f21"
      },
      "downloads": -1,
      "filename": "approxbayescomp-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9e66a2be0a651eb753a05c183fac8975",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17232,
      "upload_time": "2021-06-12T00:47:05",
      "upload_time_iso_8601": "2021-06-12T00:47:05.564954Z",
      "url": "https://files.pythonhosted.org/packages/a4/38/4827cd21738574a49ad580697f283e52d37aa8a906eb3205a8f3dfdd68e7/approxbayescomp-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}