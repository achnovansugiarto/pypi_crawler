{
  "info": {
    "author": "Jakub Dobies",
    "author_email": "kuba.dobies@onet.pl",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Google image downloader\n=======================\nPython script that lets you search for urls of images from google images using your tags and/or download them automatically onto you computer\n\n\n## Documentation\n-------------\n\n### 1. Installation\n\nDownload simple-image-download.py from my github and use it in your project\nUse command pip install simple_image_download\n\n#### Note on Windows for [python-magic 0.4.18](https://pypi.org/project/python-magic/) which is used for this Project\nYou'll need DLLs for libmagic [Here](https://pypi.python.org/pypi/python-magic-bin/0.4.14)  the includes binaries to PyPI.\n##### **Or Just run:**\n``` pip install python-magic-bin==0.4.14```\n##### Window 64-bit!!!\nIf you are using a 64-bit build of python, you'll need 64-bit libmagic binaries which can be found here: https://github.com/pidydx/libmagicwin64. \nDrop the dlls in C:\\Windows\\System32 and python magic will import correctly.\n-- Newer version can be found here: https://github.com/nscaife/file-windows.\n\n\n---------------------------------------------------------------------------------------------------------------\n\n### 2. Quickstart\n\nThe main class is  Download import it in your project as so:\n```\nfrom simple_image_download import Downloader simp \n```\nThen create a new class instance\n```\nresponse = simp.simple_image_download()\n```\nNext you can use response to activate methods:\n```\nresponse.download(keywords, [limit])\n```\n \n### Downloads Images\n```\nfrom simple_image_download import Downloader simp \n \nresponse = simp.simple_image_download()\nresponse.download(‘bear supermario’, limit=5)\n \n```\n#### Get Only the Pictures URL and Store them in the Class cache:\n\n```\nfrom simple_image_download import Downloader simp \nresponse = simp.simple_image_download()\nresponse.search_urls(‘bear supermario’, limit=15)\n \nfor url in response.cache:\n    print(url)\n \n```\n \n---------------------------------------------------------------------------------------------------------------\n \n### 3. API\n \n#### *class* simple_image_download.Downloader(extensions=None)\n \n**Parameters**:\n* extension -- Type of extension allowed to be downloaded, if left None defaults are:\n {‘.jpg’, ‘.png’, ‘.ico’, ‘.gif’, ‘.jpeg’}\n \n-------------------------------------------------------------\n\n#### Functions\n \n#### search_urls(keywords, limit, verbose=False, cache=True, timer=None)\n \nThis functions returns and Caches URLs of Pictures based on:\n \n1. Keywords for the search\n2. File Extensions based on the class instance you define\n3. How many picture per keyword you need with the limit parameter\n \n* verbose => Output the links in the terminal in real time\n\n* cache => if set to False, the URLs won’t be stored in the class instance, default is True\n\n* timer => Default is set to 100_000 Looks up, defines the number of WebPages's 'chunks' will search. In the function scan_webpage a 100_000 lookkup means that it will loop up to 100_000 before stop.\n\nUsefule in case of a picture that is not been found, so won't allow to loop indefinitely.\n \n#### download(keywords, limit, verbose=False, cache=True, download_cache=False, timer=None)\n\nThis functions downloads pictures into defined class instance’s directory:\n \n1. Keywords for the search\n2. File Extensions based on the class instance you define\n3. How many picture per keyword you need with the limit parameter\n4. The directory is named after the Keyword.\n5. Pictures have a unique ID, so that multiple downloads can persome\n \n* verbose => Output the links in the terminal in real time\n\n* cache => if set to False, the URLs won’t be stored in the class instance, default is True\n\n* download_cache => allows to download all the URLs stored in the Downloader's instance Cache. Remember to clear the cache afterwards with Downloader.flush_cache\n\n* timer => Default is set to 100_000 Looks up, defines the number of WebPages's 'chunks' will search. In the function scan_webpage a 100_000 lookkup means that it will loop up to 100_000 before stop.\n\nUsefule in case of a picture that is not been found, so won't allow to loop indefinitely.\n \n#### flash_cache():\n \nClears the class instance’s cache which is stored in instance.cached_urls\n\n-------------------------------------------------------------\n \n#### Properties\n \n#### directory\n \nThe directory where the Picture are saved, default is in ‘simple_images/’.\nYou can set the default directory like this:\n```\nmy_downloader = simp.simple_image_download()\nmy_downloader.directory = ‘my_dir/bla/’\n\n```\n\n#### get_dirs\n\n\nSet of all sub Direcotories where the picture where saved .\n \n#### cached_urls\n\n \nAll of the cached urls perfomed with the seach of the function Downloader.get_urls()\n\nIs a Dictionary with this schema:\n\n{'file_name': [Dir_path, URL_content]}\n \nUser Downloader.flash_cache() to clear it or run mydownloader.download(download_cache=True)\nto download the whole content.\n\n---------------------------------------------------------------------------------------------------------------\n\n\n### 3. Example\n\n\t\n\tExample are on my [github](https://github.com/Koubae/simple_image_download/tree/master/Example) \n\t\nEnd\n---\n\nIf you have any ideas, try pull request or write to me so i will try to add new things in free time.\nI know my code is pretty basic but i just started working with python and i needed that class for urls and images to pass my semester so i did only\nwhat i needed. \n\nI hope that we will make this class more usefull together, i will try to post updates with yours and mine ideas\n\nPs. Thx to CharlesMogan for adding so many fixes and new features.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/simple_image_download/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RiddlerQ/simple_image_download",
    "keywords": "google images,image downloader",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "simple-image-download",
    "package_url": "https://pypi.org/project/simple-image-download/",
    "platform": null,
    "project_url": "https://pypi.org/project/simple-image-download/",
    "project_urls": {
      "Download": "https://pypi.org/project/simple_image_download/",
      "Homepage": "https://github.com/RiddlerQ/simple_image_download"
    },
    "release_url": "https://pypi.org/project/simple-image-download/0.5/",
    "requires_dist": [
      "requests",
      "python-magic-bin (==0.4.14)",
      "progressbar"
    ],
    "requires_python": "",
    "summary": "Downloads raw page from google images and searches for images that can be downloaded",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13241616,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1001aaae665be538be3486517e8ea425515513850a36b199ba73f9ad1f8c778e",
          "md5": "b7d598222920075a678fd754b1e687c1",
          "sha256": "5d1643b00ab67f66ff2d7aeccc7f1d033abb7566da7f316dcf9a1d4032f89aee"
        },
        "downloads": -1,
        "filename": "simple_image_download-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7d598222920075a678fd754b1e687c1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 3846,
        "upload_time": "2020-03-18T02:04:33",
        "upload_time_iso_8601": "2020-03-18T02:04:33.803878Z",
        "url": "https://files.pythonhosted.org/packages/10/01/aaae665be538be3486517e8ea425515513850a36b199ba73f9ad1f8c778e/simple_image_download-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "161f97ed19ded26d927174a21addc6a09e512c213c5830755f4badcf2da08367",
          "md5": "6592d09398cea728bbff67a5bda88bdc",
          "sha256": "e4203588f348231c25c42ea0b464a84104a5746672f9841604909b20556ae593"
        },
        "downloads": -1,
        "filename": "simple_image_download-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6592d09398cea728bbff67a5bda88bdc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3828,
        "upload_time": "2020-03-17T22:53:38",
        "upload_time_iso_8601": "2020-03-17T22:53:38.300226Z",
        "url": "https://files.pythonhosted.org/packages/16/1f/97ed19ded26d927174a21addc6a09e512c213c5830755f4badcf2da08367/simple_image_download-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba61e672c992faa390bc1285464e2ff46fea59d2ba8f45ac4e7ba8153ea45e9f",
          "md5": "296d6b9c10e13e1e633c1b89932809da",
          "sha256": "2c8c1d970919803039bb0cfdbd4addd6ee694bc124ca86e3316859e3ee5ed32c"
        },
        "downloads": -1,
        "filename": "simple_image_download-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "296d6b9c10e13e1e633c1b89932809da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2295,
        "upload_time": "2020-03-17T22:53:40",
        "upload_time_iso_8601": "2020-03-17T22:53:40.831762Z",
        "url": "https://files.pythonhosted.org/packages/ba/61/e672c992faa390bc1285464e2ff46fea59d2ba8f45ac4e7ba8153ea45e9f/simple_image_download-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5ad3f5ee0bf293c954ec90e3cb3c5aa889a58c529c19f6521cf6800c9d3ac9f",
          "md5": "f164c885ba5a97c36b506576fb2f4da5",
          "sha256": "274400bb23bb6497faf0ccc82c9bba4389d5f9c290ebbc6aef457be4d83b29d0"
        },
        "downloads": -1,
        "filename": "simple_image_download-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f164c885ba5a97c36b506576fb2f4da5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3845,
        "upload_time": "2020-03-18T02:05:59",
        "upload_time_iso_8601": "2020-03-18T02:05:59.087240Z",
        "url": "https://files.pythonhosted.org/packages/d5/ad/3f5ee0bf293c954ec90e3cb3c5aa889a58c529c19f6521cf6800c9d3ac9f/simple_image_download-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1f3b2c548d928bdd41beaf9c5b2d8b9b253f20e271022e00ae243a1d7896bcc",
          "md5": "c613070f7768509901f2615f286d229d",
          "sha256": "d7beccee400db24ec6a15a3a12c57e465d2fff6d680c40f65ece120649df8e5d"
        },
        "downloads": -1,
        "filename": "simple_image_download-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c613070f7768509901f2615f286d229d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4902,
        "upload_time": "2020-08-05T17:10:23",
        "upload_time_iso_8601": "2020-08-05T17:10:23.366634Z",
        "url": "https://files.pythonhosted.org/packages/d1/f3/b2c548d928bdd41beaf9c5b2d8b9b253f20e271022e00ae243a1d7896bcc/simple_image_download-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8f94317510e27bbce7c6d0b287d44400f56ee93cecbe305cf520c3328dac3f7",
          "md5": "2ce422903602aa277051974b8d6ddbe2",
          "sha256": "fac545268efabc76e3db15800ae9ca38df3a512306398977cdba05eb20228204"
        },
        "downloads": -1,
        "filename": "simple_image_download-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ce422903602aa277051974b8d6ddbe2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6988,
        "upload_time": "2022-03-21T18:22:01",
        "upload_time_iso_8601": "2022-03-21T18:22:01.456737Z",
        "url": "https://files.pythonhosted.org/packages/a8/f9/4317510e27bbce7c6d0b287d44400f56ee93cecbe305cf520c3328dac3f7/simple_image_download-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8474e0a4aaefb0692ceb3eaf370bcd609f21f0b71ed43ba48604a385409136bf",
          "md5": "11b429efdc9ac4e4a958db8c8a891467",
          "sha256": "1717170329b63948bbe9b986e2eecb9a7e4f97fe1dc98b0a7f7321985ef6c75e"
        },
        "downloads": -1,
        "filename": "simple_image_download-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "11b429efdc9ac4e4a958db8c8a891467",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6726,
        "upload_time": "2022-03-21T18:22:03",
        "upload_time_iso_8601": "2022-03-21T18:22:03.219365Z",
        "url": "https://files.pythonhosted.org/packages/84/74/e0a4aaefb0692ceb3eaf370bcd609f21f0b71ed43ba48604a385409136bf/simple_image_download-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8f94317510e27bbce7c6d0b287d44400f56ee93cecbe305cf520c3328dac3f7",
        "md5": "2ce422903602aa277051974b8d6ddbe2",
        "sha256": "fac545268efabc76e3db15800ae9ca38df3a512306398977cdba05eb20228204"
      },
      "downloads": -1,
      "filename": "simple_image_download-0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2ce422903602aa277051974b8d6ddbe2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6988,
      "upload_time": "2022-03-21T18:22:01",
      "upload_time_iso_8601": "2022-03-21T18:22:01.456737Z",
      "url": "https://files.pythonhosted.org/packages/a8/f9/4317510e27bbce7c6d0b287d44400f56ee93cecbe305cf520c3328dac3f7/simple_image_download-0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8474e0a4aaefb0692ceb3eaf370bcd609f21f0b71ed43ba48604a385409136bf",
        "md5": "11b429efdc9ac4e4a958db8c8a891467",
        "sha256": "1717170329b63948bbe9b986e2eecb9a7e4f97fe1dc98b0a7f7321985ef6c75e"
      },
      "downloads": -1,
      "filename": "simple_image_download-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "11b429efdc9ac4e4a958db8c8a891467",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6726,
      "upload_time": "2022-03-21T18:22:03",
      "upload_time_iso_8601": "2022-03-21T18:22:03.219365Z",
      "url": "https://files.pythonhosted.org/packages/84/74/e0a4aaefb0692ceb3eaf370bcd609f21f0b71ed43ba48604a385409136bf/simple_image_download-0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}