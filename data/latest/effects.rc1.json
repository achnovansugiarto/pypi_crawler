{
  "info": {
    "author": "sobolevn",
    "author_email": "mail@sobolevn.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# classes\n\n[![classes logo](https://raw.githubusercontent.com/dry-python/brand/master/logo/classes.png)](https://github.com/dry-python/classes)\n\n-----\n\n[![Build Status](https://travis-ci.org/dry-python/classes.svg?branch=master)](https://travis-ci.org/dry-python/classes)\n[![Coverage Status](https://coveralls.io/repos/github/dry-python/classes/badge.svg?branch=master)](https://coveralls.io/github/dry-python/classes?branch=master)\n[![Documentation Status](https://readthedocs.org/projects/classes/badge/?version=latest)](https://classes.readthedocs.io/en/latest/?badge=latest)\n[![Python Version](https://img.shields.io/pypi/pyversions/classes.svg)](https://pypi.org/project/classes/)\n[![wemake-python-styleguide](https://img.shields.io/badge/style-wemake-000000.svg)](https://github.com/wemake-services/wemake-python-styleguide)\n[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n\n-----\n\nSmart, pythonic, ad-hoc, typed polymorphism for Python.\n\n\n## Features\n\n- Provides a bunch of primitives to write declarative business logic\n- Enforces better architecture\n- Fully typed with annotations and checked with `mypy`, [PEP561 compatible](https://www.python.org/dev/peps/pep-0561/)\n- Allows to write a lot of simple code without inheritance or interfaces\n- Pythonic and pleasant to write and to read (!)\n- Easy to start: has lots of docs, tests, and tutorials\n\n\n## Installation\n\n```bash\npip install classes\n```\n\nYou also need to [configure](https://classes.readthedocs.io/en/latest/pages/container.html#type-safety)\n`mypy` correctly and install our plugin\nto fix [this existing issue](https://github.com/python/mypy/issues/3157):\n\n```ini\n# In setup.cfg or mypy.ini:\n[mypy]\nplugins =\n  classes.contrib.mypy.typeclass_plugin\n```\n\n**Without this step**, your project will report type-violations here and there.\n\nWe also recommend to use the same `mypy` settings [we use](https://github.com/wemake-services/wemake-python-styleguide/blob/master/styles/mypy.toml).\n\nMake sure you know how to get started, [check out our docs](https://classes.readthedocs.io/en/latest/)!\n\n\n## Example\n\nImagine, that you want to bound implementation to some particular type.\nLike, strings behave like this, numbers behave like that, and so on.\n\nThe good realworld example is `djangorestframework`.\nIt is build around the idea that different\ndata types should be converted differently to and from `json` format.\n\nWhat is the \"traditional\" (or outdated if you will!) approach?\nTo create tons of classes for different data types and use them.\n\nThat's how we end up with classes like so:\n\n```python\nclass IntField(Field):\n    def from_json(self, value):\n        return value\n\n    def to_json(self, value):\n        return value\n```\n\nIt literally has a lot of problems:\n\n- It is hard to type this code. How can I be sure that my `json` will be parsed by the given schema?\n- It contains a lot of boilerplate\n- It has complex API: there are usually several methods to override, some fields to adjust. Moreover, we use a class, not a callable\n- It is hard to extend the default library for new custom types you will have in your own project\n\nThere should be a better way of solving this problem!\nAnd typeclasses are a better way!\n\nHow would new API look like with this concept?\n\n```python\n>>> from typing import Union\n>>> from classes import typeclass\n>>> @typeclass\n... def to_json(instance) -> str:\n...     \"\"\"This is a typeclass definition to covert things to json.\"\"\"\n...\n>>> @to_json.instance(int)\n... @to_json.instance(float)\n... def _to_json_int(instance: Union[int, float]) -> str:\n...     return str(instance)\n...\n>>> @to_json.instance(bool)\n... def _to_json_bool(instance: bool) -> str:\n...     return 'true' if instance else 'false'\n...\n>>> @to_json.instance(list)\n... def _to_json_list(instance: list) -> str:\n...     return '[{0}]'.format(\n...         ', '.join(to_json(list_item) for list_item in instance),\n...     )\n...\n\n```\n\nSee how easy it is to works with types and implementation?\n\nTypeclass is represented as a regular function, so you can use it like one:\n\n```python\n>>> to_json(True)\n'true'\n>>> to_json(1)\n'1'\n>>> to_json([False, 1, 2])\n'[false, 1, 2]'\n\n```\n\nAnd it easy to extend this typeclass with your own classes as well:\n\n```python\n>>> # Pretending to import the existing library from somewhere:\n>>> # from to_json import to_json\n>>> import datetime as dt\n>>> @to_json.instance(dt.datetime)\n... def _to_json_datetime(instance: dt.datetime) -> str:\n...     return instance.isoformat()\n...\n>>> to_json(dt.datetime(2019, 10, 31, 12, 28, 00))\n'2019-10-31T12:28:00'\n\n```\n\nThat's how simple, safe, and powerful typeclasses are!\nMake sure to [check out our docs](https://github.com/dry-python/classes) to learn more.\n\n\n## License\n\nBSD 2-Clause\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://classes.readthedocs.io",
    "keywords": "functional programming,fp,type class,typeclass,typeclasses,ad-hoc,composition,type-safety,mypy,stubs",
    "license": "BSD-2-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "effects",
    "package_url": "https://pypi.org/project/effects/",
    "platform": "",
    "project_url": "https://pypi.org/project/effects/",
    "project_urls": {
      "Homepage": "https://classes.readthedocs.io",
      "Repository": "https://github.com/dry-python/classes"
    },
    "release_url": "https://pypi.org/project/effects/0.0.1/",
    "requires_dist": [
      "typing_extensions (>=3.7,<4.0)"
    ],
    "requires_python": ">=3.6,<4.0",
    "summary": "Smart, pythonic, ad-hoc, typed polymorphism for Python",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6530902,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0dcbdf1b06c17efa8436c221c5fc6605ad80c351edf7cd759500ffc545d06c9",
          "md5": "176cb80b423f88da8599bc6671d55880",
          "sha256": "c560fe2add5d90494da4172a1c74512aff4ce33cf0587ae3558a5ce6c3cc2970"
        },
        "downloads": -1,
        "filename": "effects-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "176cb80b423f88da8599bc6671d55880",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 9477,
        "upload_time": "2020-01-28T08:58:42",
        "upload_time_iso_8601": "2020-01-28T08:58:42.478768Z",
        "url": "https://files.pythonhosted.org/packages/f0/dc/bdf1b06c17efa8436c221c5fc6605ad80c351edf7cd759500ffc545d06c9/effects-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea1807a9caeb939646827c668783ce9d1f84971776132bd6d9f9be593027cd43",
          "md5": "b89c3d5aea5667e7f5c3c15385a1f96a",
          "sha256": "1351ab247e2b2ebdbaf5cdaf088b255dd23ae6f30ae53c42a1bb367e47b5c59c"
        },
        "downloads": -1,
        "filename": "effects-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b89c3d5aea5667e7f5c3c15385a1f96a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 10800,
        "upload_time": "2020-01-28T08:58:45",
        "upload_time_iso_8601": "2020-01-28T08:58:45.028766Z",
        "url": "https://files.pythonhosted.org/packages/ea/18/07a9caeb939646827c668783ce9d1f84971776132bd6d9f9be593027cd43/effects-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f0dcbdf1b06c17efa8436c221c5fc6605ad80c351edf7cd759500ffc545d06c9",
        "md5": "176cb80b423f88da8599bc6671d55880",
        "sha256": "c560fe2add5d90494da4172a1c74512aff4ce33cf0587ae3558a5ce6c3cc2970"
      },
      "downloads": -1,
      "filename": "effects-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "176cb80b423f88da8599bc6671d55880",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 9477,
      "upload_time": "2020-01-28T08:58:42",
      "upload_time_iso_8601": "2020-01-28T08:58:42.478768Z",
      "url": "https://files.pythonhosted.org/packages/f0/dc/bdf1b06c17efa8436c221c5fc6605ad80c351edf7cd759500ffc545d06c9/effects-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea1807a9caeb939646827c668783ce9d1f84971776132bd6d9f9be593027cd43",
        "md5": "b89c3d5aea5667e7f5c3c15385a1f96a",
        "sha256": "1351ab247e2b2ebdbaf5cdaf088b255dd23ae6f30ae53c42a1bb367e47b5c59c"
      },
      "downloads": -1,
      "filename": "effects-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b89c3d5aea5667e7f5c3c15385a1f96a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 10800,
      "upload_time": "2020-01-28T08:58:45",
      "upload_time_iso_8601": "2020-01-28T08:58:45.028766Z",
      "url": "https://files.pythonhosted.org/packages/ea/18/07a9caeb939646827c668783ce9d1f84971776132bd6d9f9be593027cd43/effects-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}