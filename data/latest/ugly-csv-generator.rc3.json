{
  "info": {
    "author": "LucaCappelletti94",
    "author_email": "cappelletti.luca94@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "ugly_csv_generator\n=========================================================================================\n|travis| |sonar_quality| |sonar_maintainability| |codacy|\n|code_climate_maintainability| |pip| |downloads|\n\nPython package to automatically uglify CSVs. Why?\nTo improve the testing capabilities of pipelines that\nmust be able to support strongly malformed input data.\n\nAll the malformation automated here are non-destructive,\nmeaning they introduce confusion in the data but do not\nany information.\n\n**The inspiration for the automated malformation are\nall from real-life CSVs (sigh)**\n\nHumans will always surprise us with the ever-new\nmalformed input data, but hey, we can try to best\nruining the test CSVs!\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install ugly_csv_generator\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometime\nget slightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\nPython package to generate ugly real-looking csvs.\n\nUsage example\n-----------------------------------\nTo ruin a CSV you can use the following snippet.\nIn the following example we use a tool to generate\na random sanitized csv.\n\n.. code:: Python\n\n    from random_csv_generator import random_csv\n    from ugly_csv_generator import uglify\n\n    csv = random_csv(5) # CSV with 5 lines\n    csv = csv[csv.columns[:3]] # We will use only the first 3 columns for this example\n    ugly = uglify(csv)\n\nThe initial CSV will look something like:\n\n+----------------+---------------+-----------+\n| region         | province      | surname   |\n+================+===============+===========+\n| Puglia         | Lecce         | Righetti  |\n+----------------+---------------+-----------+\n| Campania       | Napoli        | Govoni    |\n+----------------+---------------+-----------+\n| Emilia Romagna | Reggio Emilia | Vichi     |\n+----------------+---------------+-----------+\n| Lombardia      | Lecco         | Costa     |\n+----------------+---------------+-----------+\n| Umbria         | Perugia       | Fabbro    |\n+----------------+---------------+-----------+\n\nThe result uglified CSV will look something like this:\n\n+----------+----------------+----------+---------------+----------+-----+\n| 0        | 1              | 2        | 3             | 4        |   5 |\n+==========+================+==========+===============+==========+=====+\n| nan      | nan            | nan      | nan           | nan      | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| region-1 | region         | region 0 | province      | surname  | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | nan            | nan      | nan           | nan      | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | nan            | nan      | nan           | nan      | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | nan            | nan      | nan           | nan      | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | region         | nan      | province      | surname  | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | region         | nan      | province      | surname  | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | Puglia         | nan      | Lecce         | Righetti | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | Campania       | nan      | Napoli        | Govoni   | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | Emilia Romagna | nan      | Reggio Emilia | Vichi    | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | Lombardia      | nan      | Lecco         | Costa    | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | Umbria         | nan      | Perugia       | Fabbro   | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | nan            | nan      | nan           | nan      | nan |\n+----------+----------------+----------+---------------+----------+-----+\n| nan      | nan            | nan      | nan           | nan      | nan |\n+----------+----------------+----------+---------------+----------+-----+\n\nThe uglify method offers numerous keyword parameters,\nsince the library is currently in quick evolution\nif you are interested in them just check out the\ncode documentation.\n\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/ugly_csv_generator.png\n   :target: https://travis-ci.org/LucaCappelletti94/ugly_csv_generator\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_ugly_csv_generator&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_ugly_csv_generator\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_ugly_csv_generator&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_ugly_csv_generator\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_ugly_csv_generator&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_ugly_csv_generator\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/ugly_csv_generator/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/ugly_csv_generator?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/ugly-csv-generator.svg\n    :target: https://badge.fury.io/py/ugly-csv-generator\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/ugly-csv-generator\n    :target: https://pepy.tech/badge/ugly-csv-generator\n    :alt: Pypi total project downloads\n\n.. |codacy| image:: https://api.codacy.com/project/badge/Grade/8fc44d07742a47c1b77123b532f6f264\n    :target: https://www.codacy.com/manual/LucaCappelletti94/ugly_csv_generator?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/ugly_csv_generator&amp;utm_campaign=Badge_Grade\n    :alt: Codacy Maintainability\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/43f6565c8e36fd609252/maintainability\n    :target: https://codeclimate.com/github/LucaCappelletti94/ugly_csv_generator/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/43f6565c8e36fd609252/test_coverage\n    :target: https://codeclimate.com/github/LucaCappelletti94/ugly_csv_generator/test_coverage\n    :alt: Code Climate Coverate",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LucaCappelletti94/ugly_csv_generator",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ugly-csv-generator",
    "package_url": "https://pypi.org/project/ugly-csv-generator/",
    "platform": "",
    "project_url": "https://pypi.org/project/ugly-csv-generator/",
    "project_urls": {
      "Homepage": "https://github.com/LucaCappelletti94/ugly_csv_generator"
    },
    "release_url": "https://pypi.org/project/ugly-csv-generator/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python package to generate ugly real-looking csvs.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6706298,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2df1c48f935844daeecb0be9b9f822f6cf1eeb4d34bbd3be3f5016c2b2866fe1",
          "md5": "9f0aa7dc14d223aaf747dfd00584b42f",
          "sha256": "07b9c91d0f05a0c22cde99b9f7909bc0fec97f39009697e0acc4d70c03908f8a"
        },
        "downloads": -1,
        "filename": "ugly_csv_generator-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9f0aa7dc14d223aaf747dfd00584b42f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6149,
        "upload_time": "2020-02-26T16:07:49",
        "upload_time_iso_8601": "2020-02-26T16:07:49.696218Z",
        "url": "https://files.pythonhosted.org/packages/2d/f1/c48f935844daeecb0be9b9f822f6cf1eeb4d34bbd3be3f5016c2b2866fe1/ugly_csv_generator-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b19d1597ef2b9600225a673f6eac1e5e0cdf61caba59689347db4568bb89bc2c",
          "md5": "cad2a70f02c7abc52ee177c9427de730",
          "sha256": "2ed32ee16165b384b929425e5a19d6c4092ec8dc3ab86988ebe1c7e3b7a6edcc"
        },
        "downloads": -1,
        "filename": "ugly_csv_generator-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cad2a70f02c7abc52ee177c9427de730",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8233,
        "upload_time": "2020-02-26T21:23:18",
        "upload_time_iso_8601": "2020-02-26T21:23:18.608267Z",
        "url": "https://files.pythonhosted.org/packages/b1/9d/1597ef2b9600225a673f6eac1e5e0cdf61caba59689347db4568bb89bc2c/ugly_csv_generator-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc1a138358fd8207e8af142063717effde7d8df7ce209d8e5e2afb2df5301fcc",
          "md5": "f2d5764e9b95d16511c26df4ae4f6828",
          "sha256": "207a5067dc32774f998b3b643c9ccb6e5f2a74e9ed9a3852b63531b09a7baf7d"
        },
        "downloads": -1,
        "filename": "ugly_csv_generator-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f2d5764e9b95d16511c26df4ae4f6828",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8315,
        "upload_time": "2020-02-26T21:50:29",
        "upload_time_iso_8601": "2020-02-26T21:50:29.329846Z",
        "url": "https://files.pythonhosted.org/packages/cc/1a/138358fd8207e8af142063717effde7d8df7ce209d8e5e2afb2df5301fcc/ugly_csv_generator-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc1a138358fd8207e8af142063717effde7d8df7ce209d8e5e2afb2df5301fcc",
        "md5": "f2d5764e9b95d16511c26df4ae4f6828",
        "sha256": "207a5067dc32774f998b3b643c9ccb6e5f2a74e9ed9a3852b63531b09a7baf7d"
      },
      "downloads": -1,
      "filename": "ugly_csv_generator-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f2d5764e9b95d16511c26df4ae4f6828",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8315,
      "upload_time": "2020-02-26T21:50:29",
      "upload_time_iso_8601": "2020-02-26T21:50:29.329846Z",
      "url": "https://files.pythonhosted.org/packages/cc/1a/138358fd8207e8af142063717effde7d8df7ce209d8e5e2afb2df5301fcc/ugly_csv_generator-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}