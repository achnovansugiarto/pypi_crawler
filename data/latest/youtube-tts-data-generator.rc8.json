{
  "info": {
    "author": "Het Pandya",
    "author_email": "hetpandya6797@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Youtube Speech Data Generator\n\n[![License](https://img.shields.io/badge/License-MIT-blue.svg)](https://en.wikipedia.org/wiki/MIT_License)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nA python library to generate speech dataset. Youtube Speech Data Generator also takes care of almost all your speech data preprocessing needed to build a speech dataset along with their transcriptions making sure it follows a directory structure followed by most of the text-to-speech architectures.\n\n## Installation\nMake sure [ffmpeg](https://ffmpeg.org/download.html#get-packages) is installed and is set to the system path.\n\n```bash\n$ pip install youtube-tts-data-generator\n```\n\n## Minimal start for creating the dataset\n\n```python\nfrom youtube_tts_data_generator import YTSpeechDataGenerator\n\n# First create a YTSpeechDataGenerator instance:\n\ngenerator = YTSpeechDataGenerator(dataset_name='elon')\n\n# Now create a '.txt' file that contains a list of YouTube videos that contains speeches.\n# NOTE - Make sure you choose videos with subtitles.\n\ngenerator.prepare_dataset('links.txt')\n# The above will take care about creating your dataset, creating a metadata file and trimming silence from the audios.\n\n```\n\n## Usage\n<!--ts-->\n- Initializing the generator:\n  ```generator = YTSpeechDataGenerator(dataset_name='your_dataset',lang='en')```\n  - Parameters:\n    - *dataset_name*: \n      - The name of the dataset you'd like to give. \n      - A directory structure like this will be created:\n        ```\n        ├───your_dataset\n        │   ├───txts\n        │   └───wavs\n        └───your_dataset_prep\n            ├───concatenated\n            ├───downloaded\n            └───split\n        ```\n    - *output_type*: \n      - The type of the metadata to be created after the dataset has been generated.\n      - Supported types: csv/json\n      - Default output type is set to *csv*\n      - The csv file follows the format of [LJ Speech Dataset](https://keithito.com/LJ-Speech-Dataset/)\n      - The json file follows this format:\n        ```\n        {\n            \"your_dataset1.wav\": \"This is an example text\",\n            \"your_dataset2.wav\": \"This is an another example text\",\n        }\n        ```\n    - *keep_audio_extension*:\n      - Whether to keep the audio file extension in the metadata file\n      - Default value is set to *False*\n    - *lang*:\n      - The key for the target language in which the subtitles have to be downloaded.\n      - Default value is set to *en*\n      - *Tip* - check list of available languages and their keys using: `generator.get_available_langs()`\n    - *sr*:\n      - Sample Rate to keep of the audios.\n      - Default value is set to *22050*\n \n- Methods:\n  - download():\n    - Downloads video files from YouTube along with their subtitles and saves them as wav files.\n    - Parameters:\n      - *links_txt*:\n        - Path to the '.txt' file that contains the urls for the videos.\n    - Usage of this method is optional. If you do not use this method, make sure to place all the audio and subtitle files in 'your_dataset_prep/downloaded' directory. \n    - Then, create a file called 'files.txt' and again place it under 'your_dataset_prep/downloaded'.\n      'files.txt' should follow the following format:\n      ```\n      filename,subtitle,trim_min_begin,trim_min_end\n      audio.wav,subtitle.srt,0,0\n      audio2.wav,subtitle.vtt,5,6\n      ```\n    - Create a '.txt' file that contains a list of YouTube videos that contains speeches.\n    - Example - ```generator.download('links.txt')```\n  - split_audios():\n    - This method splits all the wav files into smaller chunks according to the duration of the text in the subtitles.\n    - Saves transcriptions as '.txt' file for each of the chunks.\n    - Example - ```generator.split_audios()```\n  - concat_audios():\n    - Since the split audios are based on the duration of their subtitles, they might not be so long. This method joins the split files into recognizable ones.\n    - Parameters:\n      - *max_limit*: \n        - The upper limit of length of the audios that should be concated. The rest will be kept as they are.\n        - The default value is set to *7*\n      - *concat_count*: \n        - The number of consecutive audios that should be concated together. \n        - The default value is set to *2*\n    - Example - ```generator.concat_audios()```\n  - finalize_dataset():\n    - Trims silence the joined audios since the data has been collected from YouTube and generates the final dataset after finishing all the preprocessing.\n    - Parameters:\n      - *min_audio_length*:\n        - The minumum length of the speech that should be kept. The rest will be ignored.\n        - The default value is set set to *5*.\n      - *max_audio_length*:\n        - The maximum length of the speech that should be kept. The rest will be ignored.\n        - The default value is set set to *14*.        \n    - Example - ```generator.finalize_dataset(min_audio_length=6)```\n  - get_available_langs():\n    - Get list of available languages in which the subtitles can be downloaded.\n    - Example - ```generator.get_available_langs()```\n  - get_total_audio_length():\n    - Returns the total amount of preprocessed speech data collected by the generator.\n    - Example - ```generator.get_total_audio_length()```\n  - prepare_dataset():\n    - A wrapper method for *download()*,*split_audios()*,*concat_audios()* and *finalize_dataset()*.\n    - If you do not wish to use the above methods, you can directly call *prepare_dataset()*. It will handle all your data generation.\n    - Parameters:\n      - *links_txt*:\n        - Path to the '.txt' file that contains the urls for the videos.\n      - *sr*:\n        - Sample Rate to keep of the audios.\n        - Default value is set to *22050*  \n      - *download_youtube_data*:\n        - Whether to download audios from YouTube.\n        - Default value is *True*\n      - *max_concat_limit*: \n        - The upper limit of length of the audios that should be concated. The rest will be kept as they are.\n        - The default value is set to *7*\n      - *concat_count*: \n        - The number of consecutive audios that should be concated together. \n        - The default value is set to *2*\n      - *min_audio_length*:\n        - The minumum length of the speech that should be kept. The rest will be ignored.\n        - The default value is set set to *5*.        \n      - *max_audio_length*:\n        - The maximum length of the speech that should be kept. The rest will be ignored.\n        - The default value is set set to *14*.        \n    - Example - ```generator.prepare_dataset(links_txt='links.txt',\n                                             download_youtube_data=True,\n                                             min_audio_length=6)```\n<!--te-->\n\n## Final dataset structure\nOnce the dataset has been created, the structure under 'your_dataset' directory should look like:\n```\nyour_dataset\n├───txts\n│   ├───your_dataset1.txt\n│   └───your_dataset2.txt\n├───wavs\n│    ├───your_dataset1.wav\n│    └───your_dataset2.wav\n└───metadata.csv/alignment.json\n```\n\nNOTE - `audio.py` is highly based on [Real Time Voice Cloning](https://github.com/CorentinJ/Real-Time-Voice-Cloning/blob/master/encoder/audio.py)\n\n## References\n[SRT to JSON](https://github.com/pgrabovets/srt-to-json)\n\n*Read more about the library [here](https://medium.com/@TheHetPandya/creating-your-own-text-to-speech-dataset-from-youtube-f1177845b12e)*\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/thehetpandya/youtube_tts_data_generator",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "youtube-tts-data-generator",
    "package_url": "https://pypi.org/project/youtube-tts-data-generator/",
    "platform": "",
    "project_url": "https://pypi.org/project/youtube-tts-data-generator/",
    "project_urls": {
      "Homepage": "http://github.com/thehetpandya/youtube_tts_data_generator"
    },
    "release_url": "https://pypi.org/project/youtube-tts-data-generator/0.2.1/",
    "requires_dist": [
      "librosa (==0.7.2)",
      "youtube-dl",
      "tqdm",
      "pandas",
      "pydub",
      "scikit-learn (==0.19.2)",
      "webrtcvad",
      "scipy (>=1.0.0)",
      "numba (==0.48)",
      "inflect",
      "numpy (>=1.14.0)",
      "unidecode (==0.4.20)",
      "vtt-to-srt3",
      "youtube-transcript-api (>=0.4.1)"
    ],
    "requires_python": "",
    "summary": "A python library that generates speech data with transcriptions by collecting data from YouTube.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10670533,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f19f4333ae5b7d3458aec7950eefcbab370bd4f7d6aadb86b59e9025dc522c28",
          "md5": "4e4597fb9ada742e75e0e2a629dfc2c4",
          "sha256": "a36d00334a8ed990397170f49ae7a375d55b2dfdfa8c471d2852b043a5bbc21e"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e4597fb9ada742e75e0e2a629dfc2c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9009,
        "upload_time": "2020-10-05T06:19:16",
        "upload_time_iso_8601": "2020-10-05T06:19:16.911831Z",
        "url": "https://files.pythonhosted.org/packages/f1/9f/4333ae5b7d3458aec7950eefcbab370bd4f7d6aadb86b59e9025dc522c28/youtube_tts_data_generator-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b397ea0913f46255a5afb70e8f8ea3c8cb78c0c86b203eb83e903a37d9f9201",
          "md5": "5f906b657729c3c59672c8eace2c0a60",
          "sha256": "3feb7c358a335e82a774e53110e844885c6d9244b9d1dd581fcaab5b231b55fc"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5f906b657729c3c59672c8eace2c0a60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7860,
        "upload_time": "2020-10-05T06:19:19",
        "upload_time_iso_8601": "2020-10-05T06:19:19.670495Z",
        "url": "https://files.pythonhosted.org/packages/0b/39/7ea0913f46255a5afb70e8f8ea3c8cb78c0c86b203eb83e903a37d9f9201/youtube_tts_data_generator-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b3cf028062135dde111be73f9efd603b4cc47fa4b1df62cbee7c932bbbff29e",
          "md5": "2c778da23de3e80a0ec5c71555e7ba68",
          "sha256": "f8453c463516919fc12ce2a1fe26cf57a418a635f7a265530e02267596577c7f"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c778da23de3e80a0ec5c71555e7ba68",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9157,
        "upload_time": "2020-10-05T10:35:31",
        "upload_time_iso_8601": "2020-10-05T10:35:31.794036Z",
        "url": "https://files.pythonhosted.org/packages/3b/3c/f028062135dde111be73f9efd603b4cc47fa4b1df62cbee7c932bbbff29e/youtube_tts_data_generator-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49cd6408a7d64c9702dc005455494f75f30ce4e900fc1bba0ad4382049ff5d93",
          "md5": "12f3d11126c73d5c19922490861f52fd",
          "sha256": "887f37c3db24f8fedab92640d09fd99f851e168c3f2214b1602b89cc9af2d3e8"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "12f3d11126c73d5c19922490861f52fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7984,
        "upload_time": "2020-10-05T10:35:32",
        "upload_time_iso_8601": "2020-10-05T10:35:32.840033Z",
        "url": "https://files.pythonhosted.org/packages/49/cd/6408a7d64c9702dc005455494f75f30ce4e900fc1bba0ad4382049ff5d93/youtube_tts_data_generator-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4f846ba6d1024e3966284e14898b08246e4500793deb30022c49790acc2d5e5",
          "md5": "8cc556764c6a05fff1ac8029045cba5f",
          "sha256": "4fb264c1e6b2268ab4b77d9675d8ba3edd735992d82998cb53c6f13b18181519"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cc556764c6a05fff1ac8029045cba5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10790,
        "upload_time": "2020-10-05T17:34:42",
        "upload_time_iso_8601": "2020-10-05T17:34:42.258780Z",
        "url": "https://files.pythonhosted.org/packages/a4/f8/46ba6d1024e3966284e14898b08246e4500793deb30022c49790acc2d5e5/youtube_tts_data_generator-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64e0769af064f145808d808c2be47d5484c8da413e11dd8ad470203a20738300",
          "md5": "1ae6444b9ee21df0f4b3d434a93c2013",
          "sha256": "c10208efdf2b606f0b1858d2e200a17ba1ed7f8085bf447a5ebb34c9269d4f38"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1ae6444b9ee21df0f4b3d434a93c2013",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9713,
        "upload_time": "2020-10-05T17:34:43",
        "upload_time_iso_8601": "2020-10-05T17:34:43.862780Z",
        "url": "https://files.pythonhosted.org/packages/64/e0/769af064f145808d808c2be47d5484c8da413e11dd8ad470203a20738300/youtube_tts_data_generator-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e8b24cdc8b7515101458feb93415c6816dc471b41f8174264488a1eff8c3bf2",
          "md5": "98cc8f1c21e9d6e3e6929f8e2e5a9455",
          "sha256": "080d8e329fa73175ef1a15806c55a0379c81635b9b6eaa8f5dc2f29c3821b718"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98cc8f1c21e9d6e3e6929f8e2e5a9455",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10910,
        "upload_time": "2020-10-06T11:07:51",
        "upload_time_iso_8601": "2020-10-06T11:07:51.138988Z",
        "url": "https://files.pythonhosted.org/packages/9e/8b/24cdc8b7515101458feb93415c6816dc471b41f8174264488a1eff8c3bf2/youtube_tts_data_generator-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aca76adfa6c03e9d1b93f814cf4dd648e3c65d6e73fe977b9cc0ae9c99710e83",
          "md5": "eeb7770ac08537409d92f1e09745c1b2",
          "sha256": "d122e1a76000d5effa588311b0c67ab62cddfbfdd083a590e2388e447c2048e9"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "eeb7770ac08537409d92f1e09745c1b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9863,
        "upload_time": "2020-10-06T11:07:52",
        "upload_time_iso_8601": "2020-10-06T11:07:52.435167Z",
        "url": "https://files.pythonhosted.org/packages/ac/a7/6adfa6c03e9d1b93f814cf4dd648e3c65d6e73fe977b9cc0ae9c99710e83/youtube_tts_data_generator-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8df7270b27de39b6461c7c5bbce55bf664934bc3a853aaf286e5b7cdc57b63a7",
          "md5": "2b6e70c72c321a0753a010fde6a6b940",
          "sha256": "b5dd43225200dc6e3a4cbff85476bb372a059efc96062532c55355b7e16d628e"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b6e70c72c321a0753a010fde6a6b940",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13046,
        "upload_time": "2020-10-09T17:10:14",
        "upload_time_iso_8601": "2020-10-09T17:10:14.009699Z",
        "url": "https://files.pythonhosted.org/packages/8d/f7/270b27de39b6461c7c5bbce55bf664934bc3a853aaf286e5b7cdc57b63a7/youtube_tts_data_generator-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9b7fe1162723e8ab64231c36320668de5c768bba15e6d1f25967a9690767588",
          "md5": "91560d6c12f418c96fc0c4a26c0f487c",
          "sha256": "f696dbb0e9aa8b14777896bb8ba0821ee1f02f12ba902b6659b99133bd4a454c"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "91560d6c12f418c96fc0c4a26c0f487c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13436,
        "upload_time": "2020-10-09T17:10:15",
        "upload_time_iso_8601": "2020-10-09T17:10:15.715630Z",
        "url": "https://files.pythonhosted.org/packages/d9/b7/fe1162723e8ab64231c36320668de5c768bba15e6d1f25967a9690767588/youtube_tts_data_generator-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cc8347a7ed7fb80e3448bf5aae0a5c3e2e7499ec3d79b82bf2fed7e6ffec1ec",
          "md5": "fac69dc4002f9720d6173aadd0e541eb",
          "sha256": "d4c3b8d9a95fbc020861b705664de1021219e8b5d7ab3b0289b10a85323749dc"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fac69dc4002f9720d6173aadd0e541eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15285,
        "upload_time": "2020-11-07T15:57:41",
        "upload_time_iso_8601": "2020-11-07T15:57:41.468553Z",
        "url": "https://files.pythonhosted.org/packages/1c/c8/347a7ed7fb80e3448bf5aae0a5c3e2e7499ec3d79b82bf2fed7e6ffec1ec/youtube_tts_data_generator-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "701ff0ebfe92d3359435ebacf44a70569fd24ab937e874486ed1998ac7342566",
          "md5": "245ae467b80c6f48db7573cce0c7198c",
          "sha256": "3755e01489155b0e4c86a08cd577f9476a8a350590674d8e4e3155bc2f07fc78"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "245ae467b80c6f48db7573cce0c7198c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15919,
        "upload_time": "2020-11-07T15:57:44",
        "upload_time_iso_8601": "2020-11-07T15:57:44.211364Z",
        "url": "https://files.pythonhosted.org/packages/70/1f/f0ebfe92d3359435ebacf44a70569fd24ab937e874486ed1998ac7342566/youtube_tts_data_generator-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcae2c0a456f08d6e13080bfdf7907ed5ac500e1b857eb1683d7379760517885",
          "md5": "5996a34b511fe34eb140813ed701f070",
          "sha256": "cb0cfc2ba3f263a5d2995ea7b2e3542bc2418b7ff2b7d4d979015baa9573319d"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5996a34b511fe34eb140813ed701f070",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16141,
        "upload_time": "2021-06-14T12:02:40",
        "upload_time_iso_8601": "2021-06-14T12:02:40.308144Z",
        "url": "https://files.pythonhosted.org/packages/dc/ae/2c0a456f08d6e13080bfdf7907ed5ac500e1b857eb1683d7379760517885/youtube_tts_data_generator-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c591b25ae25457f7786dc5335eb5b56ec603065e4f30e5af40793535bde11196",
          "md5": "6d516277f87d3b8ee948c5bbbafebf94",
          "sha256": "8c0a49dcbcb4edfc6d32d43f9dab3cda26c4214600e05d41138185a71f9bb3c9"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6d516277f87d3b8ee948c5bbbafebf94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17035,
        "upload_time": "2021-06-14T12:02:41",
        "upload_time_iso_8601": "2021-06-14T12:02:41.787988Z",
        "url": "https://files.pythonhosted.org/packages/c5/91/b25ae25457f7786dc5335eb5b56ec603065e4f30e5af40793535bde11196/youtube_tts_data_generator-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6654f487cd7ea9898092e4ed714f4d1303816cd90ffecf5645984cb2b182c9f6",
          "md5": "7f43a959fa0cbcaa1ccc964a18c15362",
          "sha256": "b2f2ffaa23489577b6dd67222441ffabacbf751d0bcfc26999acd608333b5e56"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f43a959fa0cbcaa1ccc964a18c15362",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16168,
        "upload_time": "2021-06-17T05:40:26",
        "upload_time_iso_8601": "2021-06-17T05:40:26.786088Z",
        "url": "https://files.pythonhosted.org/packages/66/54/f487cd7ea9898092e4ed714f4d1303816cd90ffecf5645984cb2b182c9f6/youtube_tts_data_generator-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f86246d1970c0e7ca6123a772dbdf55e095d79cea51fd9745c386ac4018ea7c7",
          "md5": "69c3e0339c086acf15bd47858787681f",
          "sha256": "8d7fb4fedf82e048f29bda8674a55f116d07d371d504608ce24267ae28d13b4f"
        },
        "downloads": -1,
        "filename": "youtube_tts_data_generator-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "69c3e0339c086acf15bd47858787681f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17098,
        "upload_time": "2021-06-17T05:40:28",
        "upload_time_iso_8601": "2021-06-17T05:40:28.392177Z",
        "url": "https://files.pythonhosted.org/packages/f8/62/46d1970c0e7ca6123a772dbdf55e095d79cea51fd9745c386ac4018ea7c7/youtube_tts_data_generator-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6654f487cd7ea9898092e4ed714f4d1303816cd90ffecf5645984cb2b182c9f6",
        "md5": "7f43a959fa0cbcaa1ccc964a18c15362",
        "sha256": "b2f2ffaa23489577b6dd67222441ffabacbf751d0bcfc26999acd608333b5e56"
      },
      "downloads": -1,
      "filename": "youtube_tts_data_generator-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7f43a959fa0cbcaa1ccc964a18c15362",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16168,
      "upload_time": "2021-06-17T05:40:26",
      "upload_time_iso_8601": "2021-06-17T05:40:26.786088Z",
      "url": "https://files.pythonhosted.org/packages/66/54/f487cd7ea9898092e4ed714f4d1303816cd90ffecf5645984cb2b182c9f6/youtube_tts_data_generator-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f86246d1970c0e7ca6123a772dbdf55e095d79cea51fd9745c386ac4018ea7c7",
        "md5": "69c3e0339c086acf15bd47858787681f",
        "sha256": "8d7fb4fedf82e048f29bda8674a55f116d07d371d504608ce24267ae28d13b4f"
      },
      "downloads": -1,
      "filename": "youtube_tts_data_generator-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "69c3e0339c086acf15bd47858787681f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17098,
      "upload_time": "2021-06-17T05:40:28",
      "upload_time_iso_8601": "2021-06-17T05:40:28.392177Z",
      "url": "https://files.pythonhosted.org/packages/f8/62/46d1970c0e7ca6123a772dbdf55e095d79cea51fd9745c386ac4018ea7c7/youtube_tts_data_generator-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}