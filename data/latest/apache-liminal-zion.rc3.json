{
  "info": {
    "author": "dev@liminal.apache.org",
    "author_email": "dev@liminal.apache.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<!--\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n-->\n\n# Apache Liminal\n\nApache Liminal is an end-to-end platform for data engineers & scientists, allowing them to build,\ntrain and deploy machine learning models in a robust and agile way.\n\nThe platform provides the abstractions and declarative capabilities for\ndata extraction & feature engineering followed by model training and serving.\nLiminal's goal is to operationalize the machine learning process, allowing data scientists to\nquickly transition from a successful experiment to an automated pipeline of model training,\nvalidation, deployment and inference in production, freeing them from engineering and\nnon-functional tasks, and allowing them to focus on machine learning code and artifacts.\n\n# Basics\n\nUsing simple YAML configuration, create your own schedule data pipelines (a sequence of tasks to\nperform), application servers,  and more.\n\n## Getting Started\nA simple getting stated guide for Liminal can be found [here](docs/getting_started.md)\n\n## Apache Liminal Documentation\nFull documentation of Apache Liminal can be found [here](docs/liminal)\n\n## High Level Architecture\nHigh level architecture documentation can be found [here](docs/architecture.md)\n\n## Example YAML config file\n```yaml\n---\nname: MyLiminalStack\nowner: Bosco Albert Baracus\nvolumes:\n  - volume: myvol1\n    local:\n      path: /Users/me/myvol1\nimages:\n  - image: my_python_task_img\n    type: python\n    source: write_inputs\n  - image: my_parallelized_python_task_img\n    source: write_outputs\n  - image: my_server_image\n    type: python_server\n    source: myserver\n    endpoints:\n      - endpoint: /myendpoint1\n        module: my_server\n        function: myendpoint1func\npipelines:\n  - pipeline: my_pipeline\n    start_date: 1970-01-01\n    timeout_minutes: 45\n    schedule: 0 * 1 * *\n    metrics:\n      namespace: TestNamespace\n      backends: [ 'cloudwatch' ]\n    tasks:\n      - task: my_python_task\n        type: python\n        description: static input task\n        image: my_python_task_img\n        env_vars:\n          NUM_FILES: 10\n          NUM_SPLITS: 3\n        mounts:\n          - mount: mymount\n            volume: myvol1\n            path: /mnt/vol1\n        cmd: python -u write_inputs.py\n      - task: my_parallelized_python_task\n        type: python\n        description: parallelized python task\n        image: my_parallelized_python_task_img\n        env_vars:\n          FOO: BAR\n        executors: 3\n        mounts:\n          - mount: mymount\n            volume: myvol1\n            path: /mnt/vol1\n        cmd: python -u write_inputs.py\nservices:\n  - service: my_python_server\n    description: my python server\n    image: my_server_image\n```\n\n\n# Installation\n1. Install this repository (HEAD)\n```bash\n   pip install git+https://github.com/apache/incubator-liminal.git\n```\n2. Optional: set LIMINAL_HOME to path of your choice (if not set, will default to ~/liminal_home)\n```bash\necho 'export LIMINAL_HOME=</path/to/some/folder>' >> ~/.bash_profile && source ~/.bash_profile\n```\n\n# Authoring pipelines\n\nThis involves at minimum creating a single file called liminal.yml as in the example above.\n\nIf your pipeline requires custom python code to implement tasks, they should be organized \n[like this](https://github.com/apache/incubator-liminal/tree/master/tests/runners/airflow/liminal)\n\nIf your pipeline  introduces imports of external packages which are not already a part \nof the liminal framework (i.e. you had to pip install them yourself), you need to also provide \na requirements.txt in the root of your project.\n\n# Testing the pipeline locally\n\nWhen your pipeline code is ready, you can test it by running it locally on your machine.\n\n1. Ensure you have The Docker engine running locally, and enable a local Kubernetes cluster:\n![Kubernetes configured](https://raw.githubusercontent.com/apache/incubator-liminal/master/images/k8s_running.png)\n\nAnd allocate it at least 3 CPUs (under \"Resources\" in the Docker preference UI).\n\nIf you want to execute your pipeline on a remote kubernetes cluster, make sure the cluster is configured\nusing :\n```bash\nkubectl config set-context <your remote kubernetes cluster>\n``` \n2. Build the docker images used by your pipeline.\n\nIn the example pipeline above, you can see that tasks and services have an \"image\" field - such as \n\"my_static_input_task_image\". This means that the task is executed inside a docker container, and the docker container \nis created from a docker image where various code and libraries are installed.\n\nYou can take a look at what the build process looks like, e.g. \n[here](https://github.com/apache/incubator-liminal/tree/master/liminal/build/image/python)\n\nIn order for the images to be available for your pipeline, you'll need to build them locally:\n\n```bash\ncd </path/to/your/liminal/code>\nliminal build\n```\n\nYou'll see that a number of outputs indicating various docker images built.\n\n3. Create a kubernetes local volume \\\nIn case your Yaml includes working with [volumes](https://github.com/apache/incubator-liminal/blob/6253f8b2c9dc244af032979ec6d462dc3e07e170/docs/getting_started.md#mounted-volumes)\nplease first run the following command:\n```bash\ncd </path/to/your/liminal/code> \nliminal create\n```\n\n4. Deploy the pipeline:\n```bash\ncd </path/to/your/liminal/code> \nliminal deploy\n```\nNote: after upgrading liminal, it's recommended to issue the command \n```bash\nliminal deploy --clean\n``` \n\nThis will rebuild the airlfow docker containers from scratch with a fresh version of liminal, ensuring consistency.\n\n5. Start the server\n```bash\nliminal start\n```\n\n6. Stop the server\n```bash\nliminal stop\n```\n\n7. Display the server logs\n```bash\nliminal logs --follow/--tail\n\nNumber of lines to show from the end of the log:\nliminal logs --tail=10\n\nFollow log output:\nliminal logs --follow\n```\n\n8. Navigate to [http://localhost:8080/admin](http://localhost:8080/admin)\n\n9. You should see your ![pipeline](https://raw.githubusercontent.com/apache/incubator-liminal/master/images/airflow.png)\nThe pipeline is scheduled to run according to the ```json schedule: 0 * 1 * *``` field in the .yml file you provided.\n\n10. To manually activate your pipeline:\nClick your pipeline and then click \"trigger DAG\"\nClick \"Graph view\"\nYou should see the steps in your pipeline getting executed in \"real time\" by clicking \"Refresh\" periodically.\n\n![Pipeline activation](https://raw.githubusercontent.com/apache/incubator-liminal/master/images/airflow_trigger.png)\n\n# Contributing\n\nMore information on contributing can be found [here](CONTRIBUTING.md)\n\n## Running Tests (for contributors)\nWhen doing local development and running Liminal unit-tests, make sure to set LIMINAL_STAND_ALONE_MODE=True\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/apache/incubator-liminal",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "apache-liminal-zion",
    "package_url": "https://pypi.org/project/apache-liminal-zion/",
    "platform": "",
    "project_url": "https://pypi.org/project/apache-liminal-zion/",
    "project_urls": {
      "Homepage": "https://github.com/apache/incubator-liminal"
    },
    "release_url": "https://pypi.org/project/apache-liminal-zion/2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A package for authoring and deploying machine learning workflows",
    "version": "2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12442187,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce5a23314d80447f8f111f2f836ed2e1296d1ed8b732e7cfcab4b58310ffac2b",
          "md5": "a02a81c597a3b69b14934e0e1371d6c2",
          "sha256": "51dcd7d2c2282354109eab7b5008fe9ec236346041383a68db4137f5d8ebbfc7"
        },
        "downloads": -1,
        "filename": "apache_liminal_zion-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a02a81c597a3b69b14934e0e1371d6c2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 199464,
        "upload_time": "2021-12-30T17:53:35",
        "upload_time_iso_8601": "2021-12-30T17:53:35.338159Z",
        "url": "https://files.pythonhosted.org/packages/ce/5a/23314d80447f8f111f2f836ed2e1296d1ed8b732e7cfcab4b58310ffac2b/apache_liminal_zion-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2066a2d51649ef93ac01e7c36119ddac25eba04c055a6d93d5294b45acab9b3a",
          "md5": "840a813d00cd4cfc9c1c769575ab3c3b",
          "sha256": "b885f89b1da9f8024d1bea9ba942e6e7b812c915060af59f8bffbd8379ea6d96"
        },
        "downloads": -1,
        "filename": "apache-liminal-zion-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "840a813d00cd4cfc9c1c769575ab3c3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69282,
        "upload_time": "2021-12-30T17:53:37",
        "upload_time_iso_8601": "2021-12-30T17:53:37.550648Z",
        "url": "https://files.pythonhosted.org/packages/20/66/a2d51649ef93ac01e7c36119ddac25eba04c055a6d93d5294b45acab9b3a/apache-liminal-zion-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9739c422cce4df59443354afddcdffb14382efabf692825b41619e1d282c9e01",
          "md5": "817248fbcea58abe02ba676d7bb2c3f8",
          "sha256": "98645d91e7662029d7bd8ac4ebd7308282f935b043783098f6704a99289dffb2"
        },
        "downloads": -1,
        "filename": "apache_liminal_zion-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "817248fbcea58abe02ba676d7bb2c3f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 199439,
        "upload_time": "2021-12-30T16:34:19",
        "upload_time_iso_8601": "2021-12-30T16:34:19.035622Z",
        "url": "https://files.pythonhosted.org/packages/97/39/c422cce4df59443354afddcdffb14382efabf692825b41619e1d282c9e01/apache_liminal_zion-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b27da6b3b2fd08232aec83c0db5f147429a8633d9da4a644c66f60465a88e9d",
          "md5": "18dda595f44c28a2aff5ac116254560a",
          "sha256": "f21323b3d6d2fe44b2bc1c0b5c2171fa96fc8c58c789662daac115b4e027f46d"
        },
        "downloads": -1,
        "filename": "apache-liminal-zion-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "18dda595f44c28a2aff5ac116254560a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 74572,
        "upload_time": "2021-12-30T16:34:20",
        "upload_time_iso_8601": "2021-12-30T16:34:20.617640Z",
        "url": "https://files.pythonhosted.org/packages/7b/27/da6b3b2fd08232aec83c0db5f147429a8633d9da4a644c66f60465a88e9d/apache-liminal-zion-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0efdfde9489bb45720d8b6653ab1c62179c65040871d3c9d1bc2a057ff8c7ee3",
          "md5": "60a137df055043d07a5d5177a91884ef",
          "sha256": "0546b50bbc9e880cf411cc3a1c08a4d71864782c08c2a7f367f68d081b41023d"
        },
        "downloads": -1,
        "filename": "apache_liminal_zion-2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60a137df055043d07a5d5177a91884ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 199426,
        "upload_time": "2021-12-30T17:58:36",
        "upload_time_iso_8601": "2021-12-30T17:58:36.784059Z",
        "url": "https://files.pythonhosted.org/packages/0e/fd/fde9489bb45720d8b6653ab1c62179c65040871d3c9d1bc2a057ff8c7ee3/apache_liminal_zion-2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bee242a1fb85af4951b6d0168a7918d7cc036fafd4554dc262c4fe4b38c4a90",
          "md5": "5d0d5e74c0c1342fadfd3dfd4e80e6e8",
          "sha256": "44f29a8beb3ffccc78a4d3913acc04538d55cb18f876896cd5196b15ff032714"
        },
        "downloads": -1,
        "filename": "apache-liminal-zion-2.tar.gz",
        "has_sig": false,
        "md5_digest": "5d0d5e74c0c1342fadfd3dfd4e80e6e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 74590,
        "upload_time": "2021-12-30T08:53:18",
        "upload_time_iso_8601": "2021-12-30T08:53:18.305072Z",
        "url": "https://files.pythonhosted.org/packages/8b/ee/242a1fb85af4951b6d0168a7918d7cc036fafd4554dc262c4fe4b38c4a90/apache-liminal-zion-2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0efdfde9489bb45720d8b6653ab1c62179c65040871d3c9d1bc2a057ff8c7ee3",
        "md5": "60a137df055043d07a5d5177a91884ef",
        "sha256": "0546b50bbc9e880cf411cc3a1c08a4d71864782c08c2a7f367f68d081b41023d"
      },
      "downloads": -1,
      "filename": "apache_liminal_zion-2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "60a137df055043d07a5d5177a91884ef",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 199426,
      "upload_time": "2021-12-30T17:58:36",
      "upload_time_iso_8601": "2021-12-30T17:58:36.784059Z",
      "url": "https://files.pythonhosted.org/packages/0e/fd/fde9489bb45720d8b6653ab1c62179c65040871d3c9d1bc2a057ff8c7ee3/apache_liminal_zion-2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8bee242a1fb85af4951b6d0168a7918d7cc036fafd4554dc262c4fe4b38c4a90",
        "md5": "5d0d5e74c0c1342fadfd3dfd4e80e6e8",
        "sha256": "44f29a8beb3ffccc78a4d3913acc04538d55cb18f876896cd5196b15ff032714"
      },
      "downloads": -1,
      "filename": "apache-liminal-zion-2.tar.gz",
      "has_sig": false,
      "md5_digest": "5d0d5e74c0c1342fadfd3dfd4e80e6e8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 74590,
      "upload_time": "2021-12-30T08:53:18",
      "upload_time_iso_8601": "2021-12-30T08:53:18.305072Z",
      "url": "https://files.pythonhosted.org/packages/8b/ee/242a1fb85af4951b6d0168a7918d7cc036fafd4554dc262c4fe4b38c4a90/apache-liminal-zion-2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}