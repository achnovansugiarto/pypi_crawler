{
  "info": {
    "author": "Nicholas Cottrell",
    "author_email": "ncottrellweb@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# BruteSleuth\n\n[![GitHub Version](https://img.shields.io/github/v/release/rad10/BruteSleuth)](https://github.com/rad10/BruteSleuth/releases)\n[![PyPI](https://img.shields.io/pypi/v/BruteSleuth?style=flat)](https://pypi.org/project/BruteSleuth/)\n[![GPL3 License](https://img.shields.io/github/license/rad10/BruteSleuth?style=flat)](https://www.gnu.org/licenses/gpl-3.0.en.html)\n[![Package build status](https://img.shields.io/github/workflow/status/rad10/BruteSleuth/Python%20package?logo=GitHub)](https://github.com/rad10/BruteSleuth/actions/workflows/python-package.yml)\n\nThis program uses string formatting to give a list of strings related to an original string based off regex\n\n## Table of Contents\n\n * [How to install BruteSleuth](#how-to-install-brutesleuth)\n    * [Pip](#pip)\n    * [Debian](#debian)\n    * [RHEL](#rhel)\n    * [Arch](#arch)\n    * [Source](#source)\n * [What is BruteSleuth](#what-is-brutesleuth)\n * [Why use BruteSleuth](#why-use-brutesleuth)\n * [Contributing](#contributing)\n * [Links](#links)\n * [Authoring](#authoring)\n\n\n## How to install BruteSleuth\n\nWith the way that the project is set up, there are multiple ways to install\nBruteSleuth. The main way to install it is through pip, but it can be installed\non Debian, Arch, and RHEL.\n\n### Pip\n\nto install the project from anywhere, the command is simply:\n\n```bash\npython -m pip install BruteSleuth\n```\n\nor\n\n```bash\npip install BruteSleuth\n```\n\nIf you are deciding to use the manual wheel from the releases page, you can\nalways install it directly with pip as well\n\n```bash\npip install ./BruteSleuth-1.4.0-py3-none-any.whl\n```\n\n### Debian\n\nIn the releases, there should be a `.deb` file for debian users. It is not\nbound to any particular distro. The only special difference with it is that it\nrequires the OS to recognize a version of Python 3, which most Distro's already\nhave installed. You can install the deb file with either of these two commands.\n\n```bash\nsudo apt install ./python3-brutesleuth_1.4.0-1_all.deb\n```\n\nor with\n\n```bash\nsudo dpkg -i python3-brutesleuth_1.4.0-1_all.deb\n```\n\n### RHEL\n\nFor you fedora/RHEL users, I also provided an RPM file that can be used with\ndnf. You can install it with:\n\n```bash\nsudo rpm -i BruteSleuth-1.4.0-1.noarch.rpm\n```\nor\n\n```bash\nsudo dnf localinstall BruteSleuth-1.4.0-1.noarch.rpm\n```\n\nor\n\n```bash\nsudo yum localinstall BruteSleuth-1.4.0-1.noarch.rpm\n```\n\n### Arch\n\nI include a `PKGBUILD` file in the root of the repo that can be used to install\nthe package (written by me, so you know that the source is trustworthy.) To\ninstall the package, either clone the repo or just download the `PKGBUILD` file\nthen run the usual commands that you would to install the package.\n\n```bash\nmakepkg -si\n```\n\nOr if you don't want to build it yourself (which I get), I also include a\n`.pkg.tar.zst` file that you can use directly with pacman.\n\n```bash\npacman -U python-brutesleuth-git-1.4.0.r0.?-1-any.pkg.tar.zst\n```\n\n### Source\n\nFor those of you wanting to be a little bit adventurous out there or want to\ndirectly install a modified version of this library, you can easily directly\ninstall the package by going into the cloned folder and running:\n\n```bash\npython setup.py install\n```\n\n## What is BruteSleuth\n\nBruteSleuth is a smart Bruteforce engine. What this means is that it can take\na pattern string and output **every** combination that fits within that\npattern into a wordlist. There are tools that can make every permutation of a\ncharacter for a given length to be used in a wordlist, but what makes\nBruteSleuth smarter is that you as the user can decide what positions a\ncharacter can be and what spots are constants. This means that the number of\nwords that will be used for your wordlist go down the more information that\nyou know, making it a smart Bruteforcer.\n\n## Why use BruteSleuth\n\nStory time:\nI first created this tool to be used in the National Cyber League\n([NCL](https://nationalcyberleague.org/)) to be used in one of their Capture\nThe Flags (CTFs). I specifically made this tool for the hash cracking\nsection. One of the sections is always to find the flag that the hash\nrepresents. The flag would always be SKY, 4 letters, then 4 digits as such:\n`SKY-KVjW-1830`, but then there was another section where all the hashes\nwere a developers name, an animal, then 2 digits. I could make a wordlist by\nmaking a python script that generates each combination. The SKY flags would\nrequire at least 2 nested for loops to get every combo, and the developer\nhashes would require at least 3 nested for loops. Plus the script wasnt easily\nmodifiable to go from one to the other. After doing to many hash cracking\nchallenges where I have to make a new python script to make my wordlist, I\nstarted to get fed up with it and decided that I would make a python script to\n[rule them all](https://static0.gamerantimages.com/wordpress/wp-content/uploads/2021/08/Lord-of-the-Rings-Eye-of-Sauron-Mordor-1.jpg).\nSince then, I have been using this script to make all of my custom wordlists.\n[/story]\n\nWhy would you want to use BruteSleuth? Because making a custom python script\nevery time that you have a unique wordlist is obnoxious. Why do that when you\ncould use this tool to do all the forloops for you in the background. If you\nunderstand how f-strings work, then you can make any custom wordlist that your\nheart desires. You can even use full words in your combinations if you wanted.\n\nFor those of you who are looking at this and asking: How is this better than\nhash masks? For those who do not know, some BruteForce tools, such as\n[John the Ripper](https://www.openwall.com/john/doc/RULES.shtml) and\n[Hashcat](https://hashcat.net/wiki/doku.php?id=mask_attack) both provide a\nruleset to make smart patterns for BruteForcing. The way that this tool is\nbetter than these options is that it isn't. Even if the pattern ruleset is far\nsuperior to hashcat or johns, nothing will beat the unison. When hashcat uses\na mask, the mask gets directly turned into a hash and compared. With this tool,\nyou would have to first output the wordlist to a file (which could go into the\nGB in size), then use that file as input for hashcat. For memory and storage\nsake, hashcat/john is 100% the way to go, but there is still a good reason to\nuse this tool for bruteforcing. There are far more bruteforcing tools besides\nhashcat and john, and most do not support a masking feature. Bruteforcing tools\nsuch as Medusa, Ncrack, aircrack-ng, and hydra (kinda) do not have a way to\nmake a passwordlist based off a pattern or a hash mask. Since there will always\nbe tools like these that will only accept a file with password lines on each\nline, it is a solid option to be able to convert your mask consistently to a\nwordlist that can be used by **any** tool that is designed for some form of\nbruteforcing. In addition to this, BruteSleuth can even take a pattern string\nand convert it into a hash mask for you in case you dont know how to program\none yourself (though it is 100% worth it to learn).\n\nAnother reason to use this tool for those masochistic enough to still want a\npython script for their wordlist generation is that all the major functions\nused in making any permutation wordlist can be used in your own scripts. I\nheavily document every function that I write (seriously, roughly 2/3 of every\nfile is comments or doc strings). These include everything from the custom\nclasses used to permutate combinations, to a proper iter_product function that\nproperly products every iter without using all the memory (itertools, eat your\nheart out), to the functions that convert a pattern string into an iter class\nwith every password available. All that and more by simply adding this to your\nproject:\n\n```python\nimport brutesleuth\n```\n\n## Contributing\n\nsee [CONTRIBUTING.md](docs/CONTRIBUTING.md)\n\n## Links\n[1] https://docs.python.org/3.4/library/string.html#format-string-syntax\n\n## Authoring\nThis program was built by Nicholas Cottrell (Rad10Logic)\nApril 4th, 2020\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/rad10/BruteSleuth/releases",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rad10/BruteSleuth",
    "keywords": "bruteforce,wordlist,permutation,wordlist-generator,wordlists,bruteforce-wordlist,bruteforce-tools",
    "license": "GPL-3.0 License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "BruteSleuth",
    "package_url": "https://pypi.org/project/BruteSleuth/",
    "platform": "any",
    "project_url": "https://pypi.org/project/BruteSleuth/",
    "project_urls": {
      "Bug Tracker": "https://github.com/rad10/BruteSleuth/issues",
      "Download": "https://github.com/rad10/BruteSleuth/releases",
      "Homepage": "https://github.com/rad10/BruteSleuth"
    },
    "release_url": "https://pypi.org/project/BruteSleuth/1.4.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Making bruteforce wordlists smarter, not harder",
    "version": "1.4.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12939565,
  "releases": {
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67b3586b49d7022927a3a20091f010336e196879fa002b41a9017b25113ae50c",
          "md5": "8157434d35dbc087c4ebd77d7201ae65",
          "sha256": "b0c8ac74ee980dbea6b1d24d47d66af8657eff97bab868a19957478301480b7b"
        },
        "downloads": -1,
        "filename": "BruteSleuth-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8157434d35dbc087c4ebd77d7201ae65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23817,
        "upload_time": "2022-01-21T01:38:26",
        "upload_time_iso_8601": "2022-01-21T01:38:26.157409Z",
        "url": "https://files.pythonhosted.org/packages/67/b3/586b49d7022927a3a20091f010336e196879fa002b41a9017b25113ae50c/BruteSleuth-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a73a770d305e1c1c6e663ab0bf89d6fd7f7e5a732129c4931670f336d9cb70c5",
          "md5": "3c3c2574ff0cbcd43bae8b42e626d466",
          "sha256": "8763ce741b8d283b3856d43e9de4dda7fc293e2902f9f6c67cc98ae51ad2eed3"
        },
        "downloads": -1,
        "filename": "BruteSleuth-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3c3c2574ff0cbcd43bae8b42e626d466",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23798,
        "upload_time": "2022-01-21T01:38:27",
        "upload_time_iso_8601": "2022-01-21T01:38:27.804917Z",
        "url": "https://files.pythonhosted.org/packages/a7/3a/770d305e1c1c6e663ab0bf89d6fd7f7e5a732129c4931670f336d9cb70c5/BruteSleuth-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7220e2a337c2dcc6636c4797ad716e406a67333383b6deb02148f458b03d44d",
          "md5": "2e36c21f91751fe938c9bee48f705047",
          "sha256": "fb8086b3ed0f9899ee5c70de13ec3bd833bb08d94e41e768a350f96a4e4acb4b"
        },
        "downloads": -1,
        "filename": "BruteSleuth-1.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e36c21f91751fe938c9bee48f705047",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25819,
        "upload_time": "2022-01-28T03:40:20",
        "upload_time_iso_8601": "2022-01-28T03:40:20.901074Z",
        "url": "https://files.pythonhosted.org/packages/d7/22/0e2a337c2dcc6636c4797ad716e406a67333383b6deb02148f458b03d44d/BruteSleuth-1.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2f8fbeb7d1369e0b9116aa64b304f52fd946f8bf72700ca15ed20a2a9199192",
          "md5": "45196219e7b2e75719cf105baf39b9b4",
          "sha256": "f6dad6a836805b96fc26e6cde52639aceef674bbff461e2c4fa46e710eedf961"
        },
        "downloads": -1,
        "filename": "BruteSleuth-1.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "45196219e7b2e75719cf105baf39b9b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28471,
        "upload_time": "2022-01-28T03:40:22",
        "upload_time_iso_8601": "2022-01-28T03:40:22.419922Z",
        "url": "https://files.pythonhosted.org/packages/b2/f8/fbeb7d1369e0b9116aa64b304f52fd946f8bf72700ca15ed20a2a9199192/BruteSleuth-1.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97fb3f1b017805b900165d36b046706f336b510b8b94d5b871195464cfb9c4ff",
          "md5": "e03ccabd70721232450bba1e52b60f11",
          "sha256": "491a1e4bf39ca6535cbe58831308ecd45d3ce3922c9ab6a5a7a1070c3431466f"
        },
        "downloads": -1,
        "filename": "BruteSleuth-1.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e03ccabd70721232450bba1e52b60f11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25922,
        "upload_time": "2022-02-18T22:58:51",
        "upload_time_iso_8601": "2022-02-18T22:58:51.672368Z",
        "url": "https://files.pythonhosted.org/packages/97/fb/3f1b017805b900165d36b046706f336b510b8b94d5b871195464cfb9c4ff/BruteSleuth-1.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04748a43002849bc23fac6576967e5bb0e87127ba10747c94dbde732880ac0e1",
          "md5": "0874e904699f0f34f7cb6c5d494518a5",
          "sha256": "c7d37082bbf339d70aa14f357c1fe86b242f6f351026fd0f7c8ce41268508670"
        },
        "downloads": -1,
        "filename": "BruteSleuth-1.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0874e904699f0f34f7cb6c5d494518a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30092,
        "upload_time": "2022-02-18T22:58:53",
        "upload_time_iso_8601": "2022-02-18T22:58:53.011504Z",
        "url": "https://files.pythonhosted.org/packages/04/74/8a43002849bc23fac6576967e5bb0e87127ba10747c94dbde732880ac0e1/BruteSleuth-1.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97fb3f1b017805b900165d36b046706f336b510b8b94d5b871195464cfb9c4ff",
        "md5": "e03ccabd70721232450bba1e52b60f11",
        "sha256": "491a1e4bf39ca6535cbe58831308ecd45d3ce3922c9ab6a5a7a1070c3431466f"
      },
      "downloads": -1,
      "filename": "BruteSleuth-1.4.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e03ccabd70721232450bba1e52b60f11",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 25922,
      "upload_time": "2022-02-18T22:58:51",
      "upload_time_iso_8601": "2022-02-18T22:58:51.672368Z",
      "url": "https://files.pythonhosted.org/packages/97/fb/3f1b017805b900165d36b046706f336b510b8b94d5b871195464cfb9c4ff/BruteSleuth-1.4.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "04748a43002849bc23fac6576967e5bb0e87127ba10747c94dbde732880ac0e1",
        "md5": "0874e904699f0f34f7cb6c5d494518a5",
        "sha256": "c7d37082bbf339d70aa14f357c1fe86b242f6f351026fd0f7c8ce41268508670"
      },
      "downloads": -1,
      "filename": "BruteSleuth-1.4.3.tar.gz",
      "has_sig": false,
      "md5_digest": "0874e904699f0f34f7cb6c5d494518a5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 30092,
      "upload_time": "2022-02-18T22:58:53",
      "upload_time_iso_8601": "2022-02-18T22:58:53.011504Z",
      "url": "https://files.pythonhosted.org/packages/04/74/8a43002849bc23fac6576967e5bb0e87127ba10747c94dbde732880ac0e1/BruteSleuth-1.4.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}