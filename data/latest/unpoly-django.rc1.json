{
  "info": {
    "author": "Dave Burkholder",
    "author_email": "dave@thinkwelldesigns.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "django-unpoly\n=============\n\nWhat it does\n------------\n\n``unpoly`` is a reusable app for [Django](https://www.djangoproject.com/) implementing a Django-flavored\n[Unpoly v2 Server Protocol](https://unpoly.com/up.protocol).\n\nIt provides:\n\n1. A middleware which adds `is_unpoly` `unpoly_target`, and `unpoly_validate` methods to the request object. \n\n2. A view mixin classes support both [Django Generic Views](https://docs.djangoproject.com/en/dev/topics/class-based-views/generic-display/) and [Vanilla Views](http://django-vanilla-views.org/). \n\n3. A Form mixin class for [Crispy Forms](https://django-crispy-forms.readthedocs.io).\n\n\nInstallation\n------------\n\n  pip install unpoly_django\n\nConfiguration\n-------------\nYou need to add ``unpoly.middleware.UnpolyMiddleware`` to your ``MIDDLEWARE``.\n\nTo install all the middleware, you want something like:\n\n\n```python\nMIDDLEWARE = (\n    # ...\n    'unpoly.middleware.UnpolyMiddleware',\n    # ...\n)\n```\n\nSettings\n--------\n\nIf using the View mixins following constants to settings.py:\n\n```python\nMAIN_UP_TARGET = '#your_main_up_target'\nMAIN_UP_FAIL_TARGET = '#your_main_upfail_target'\n\nDEFAULT_UP_ERROR_TEMPLATE = 'your-unpoly-error-template.html'\n\n# Default Templates for various Unpoly layers.\n# Override on individual View attributes.\nUNPOLY_MODAL_TEMPLATE = 'your-unpoly-modal-template.html'\nUNPOLY_DRAWER_TEMPLATE = 'your-unpoly-drawer-template.html'\nUNPOLY_POPUP_TEMPLATE = 'your-unpoly-popup-template.html'\nUNPOLY_COVER_TEMPLATE = 'your-unpoly-cover-template.html'\n\n# Routing URL kwarg set when an optimized response is to be sent\nOPTIMIZED_SUCCESS_RESPONSE = 'optimized_success_response'\n\nDEFAULT_ERROR_VIEW = 'appname:error_view_name'\n```\n\nCSRF Token\n----------\n\nEnsure that the `csrf_token` meta tag is included in the head section of your templates\n\n```html\n<meta name=\"csrf-token\" content=\"{{ csrf_token }}\" />\n```\n\nView Mixins\n-----------\n\nView mixin classes add hooks and properties for sending optimized server\nresponses to the frontend.\n\nAdd view mixin classes to Django's Generic views, or Vanilla Views:\n\n```python\nfrom django.views.generic import FormView, TemplateView\nfrom unpoly.views import UnpolyViewMixin, UnpolyFormViewMixin, UnpolyCrispyFormViewMixin\n\n\nclass YourTemplateView(UnpolyViewMixin, TemplateView):\n    pass\n\nclass YourFormView(UnpolyViewMixin, FormView):\n    pass\n\nclass YourCrispyFormView(UnpolyCrispyFormViewMixin, FormView):\n    pass\n```\n\nCrispy Form Mixin\n-----------------\n\nThe Crispy Form mixin can be used when form mixins are used, which enables passing\n`up-target`, `up-layer`, `up-fail-layer` and `up-fail-target` params from views to forms:\n\n```python\nfrom django.forms import ModelForm\nfrom unpoly.forms import UnpolyCrispyFormMixin\n\nclass UnpolyCrispyForm(UnpolyCrispyFormMixin, ModelForm):\n    pass\n```\n\n\nRunning the tests\n-----------------\n\nIf you have a cloned copy, run::\n\n  python3 runtests.py\n\nContributing\n------------\n\nContributions welcome! The project lives in the Github repo at [thinkwelltwd/unpoly_django](https://github.com/thinkwelltwd/unpoly_django/)\nrepository.\n\nBug reports and feature requests can be filed on the repository's [issue tracker](https://github.com/thinkwelltwd/unpoly_django/issues/).\n\n\nLicense\n-------\n\nReleased under the [MIT License](https://mit-license.org/). There's should be a ``LICENSE`` file in the root of the repository.\n\n\n----\n\nThe MIT License (MIT)\nCopyright (c) 2021, Dave Burkholder\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n----\n\nChange history for unpoly_django\n-------------------------------------------------------------\n0.1.0\n^^^^^^\n* Initial release.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thinkwelltwd/unpoly_django",
    "keywords": "django unpoly",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "unpoly-django",
    "package_url": "https://pypi.org/project/unpoly-django/",
    "platform": "",
    "project_url": "https://pypi.org/project/unpoly-django/",
    "project_urls": {
      "Homepage": "https://github.com/thinkwelltwd/unpoly_django"
    },
    "release_url": "https://pypi.org/project/unpoly-django/0.1.0/",
    "requires_dist": [
      "Django (>=3.1)"
    ],
    "requires_python": "",
    "summary": "An app for Django to implement the Unpoly v2 Server Protocol",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10766065,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0247a74f385cc89f745c8c4492e60961949a503fe1a92f6c581984b8a07e7321",
          "md5": "f398b0f929fa06687957e8e9feff7cf2",
          "sha256": "11fbbbce4c39e679001c88c99b4d2e0a16472fef6d83190ac847650f59b9c9db"
        },
        "downloads": -1,
        "filename": "unpoly_django-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f398b0f929fa06687957e8e9feff7cf2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12179,
        "upload_time": "2021-06-28T18:34:01",
        "upload_time_iso_8601": "2021-06-28T18:34:01.700271Z",
        "url": "https://files.pythonhosted.org/packages/02/47/a74f385cc89f745c8c4492e60961949a503fe1a92f6c581984b8a07e7321/unpoly_django-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d85772a3a845737eda4058f0fc940d7139d85b66269f93f1d56bc34919b04f3",
          "md5": "a4c7698f1986abd3af0cccd141990bfe",
          "sha256": "cd41e5f9474e70fd7b7b342955619b4a2e7c2bff2a49a6b369c83fb8cae66087"
        },
        "downloads": -1,
        "filename": "unpoly_django-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a4c7698f1986abd3af0cccd141990bfe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16031,
        "upload_time": "2021-06-28T18:34:03",
        "upload_time_iso_8601": "2021-06-28T18:34:03.627929Z",
        "url": "https://files.pythonhosted.org/packages/3d/85/772a3a845737eda4058f0fc940d7139d85b66269f93f1d56bc34919b04f3/unpoly_django-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0247a74f385cc89f745c8c4492e60961949a503fe1a92f6c581984b8a07e7321",
        "md5": "f398b0f929fa06687957e8e9feff7cf2",
        "sha256": "11fbbbce4c39e679001c88c99b4d2e0a16472fef6d83190ac847650f59b9c9db"
      },
      "downloads": -1,
      "filename": "unpoly_django-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f398b0f929fa06687957e8e9feff7cf2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12179,
      "upload_time": "2021-06-28T18:34:01",
      "upload_time_iso_8601": "2021-06-28T18:34:01.700271Z",
      "url": "https://files.pythonhosted.org/packages/02/47/a74f385cc89f745c8c4492e60961949a503fe1a92f6c581984b8a07e7321/unpoly_django-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d85772a3a845737eda4058f0fc940d7139d85b66269f93f1d56bc34919b04f3",
        "md5": "a4c7698f1986abd3af0cccd141990bfe",
        "sha256": "cd41e5f9474e70fd7b7b342955619b4a2e7c2bff2a49a6b369c83fb8cae66087"
      },
      "downloads": -1,
      "filename": "unpoly_django-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a4c7698f1986abd3af0cccd141990bfe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16031,
      "upload_time": "2021-06-28T18:34:03",
      "upload_time_iso_8601": "2021-06-28T18:34:03.627929Z",
      "url": "https://files.pythonhosted.org/packages/3d/85/772a3a845737eda4058f0fc940d7139d85b66269f93f1d56bc34919b04f3/unpoly_django-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}