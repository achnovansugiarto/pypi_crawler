{
  "info": {
    "author": "Colette L. Kelly",
    "author_email": "clkelly@stanford.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Chemistry"
    ],
    "description": "# pyisotopomer\n\n[![pypi badge](https://img.shields.io/pypi/v/pyisotopomer.svg?style=popout)](https://pypi.org/project/pyisotopomer)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.5031218.svg)](https://doi.org/10.5281/zenodo.5031218)\n[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nHello!!\n\npyisotopomer is a Python toolbox for processing nitrous oxide ($N_2O$) isotopomer data. Its core is a package of scripts to correct for scrambling in the ion source during isotope ratio mass spectrometry. If you're unsure about how to install and run Python on your computer, you can easily run pyisotopomer on your Google Drive using Google Colab - see [Running pyisotopomer in Google Colab](#Running-pyisotopomer-in-Google-Colab) below.\n\n## Intro\n\nWhile the scrambling calibration is an integral part of obtaining high-quality $N_2O$ isotopocule data from isotope ratio mass spectrometry, this calibration is part of a larger data processing pipeline. The scrambling calibration and isotopocule calculation steps can be performed in pyisotopomer. Additional steps are required for $^{15}N$-labeled samples (see the [documentation](https://github.com/ckelly314/pyisotopomer/blob/master/tracerSOP.md)).\n\n![](flowchart_new.jpg)\n\n**Contents:**\n- [pyisotopomer](#pyisotopomer)\n  - [Basic use](#basic-use)\n  - [Running pyisotopomer in Google Colab](#Running-pyisotopomer-in-Google-Colab)\n  - [Pre-processing](#pre-processing)\n  - [Scrambling calibration](#scrambling-calibration)\n  - [Calculating isotopomers](#calculating-isotopomers)\n  - [Calculating concentrations](#calculating-concentrations)\n\n## Basic use\n\nThe import convention for pyisotopomer is:\n\n```Python\nfrom pyisotopomer import Scrambling, Isotopomers\n```\n\nTo calculate scrambling coefficients, the only function you need is:\n\n```Python\nScrambling(inputfile=\"FILENAME.xlsx\", **kwargs)\n```\n\nTo calculate isotopomers, the only function you need is:\n\n```Python\nIsotopomers(inputfile = \"FILENAME.xlsx\", **kwargs)\n```\n\nYou can walk through these steps in this [Colab Notebook](https://drive.google.com/file/d/1hEVvs98ZrpDxzNLJ2D0H6zJjnEs2umiq/view?usp=sharing).\n\n## Running pyisotopomer in Google Colab\n\nYou can install and run pyisotopomer locally on your computer, or you can run it online in Google Colaboratory (Colab). Google Colab is free and allows you to run Python (and pyisotopomer) without installing it on your computer. This [Google Colab notebook](https://drive.google.com/file/d/1hEVvs98ZrpDxzNLJ2D0H6zJjnEs2umiq/view?usp=sharing) contains instructions on how to use the Google Colab environment and example code to run pyisotopomer. Once you click on this link, you should see an option to \"Open with Google Colaboratory\"; click on this to open the notebook. If you have never used Google Colab before, you need to connect Google Colab to your Google Drive. To do that, follow the link above, at the top of the page click on “Connect More Apps” and choose “Colab”. Sometimes, you need to load the webpage a few times before you see Google Colab in the app choices.\n\n## Pre-processing\n\nDownload the data correction [template](https://docs.google.com/spreadsheets/d/1b7aLuZZj5rE5fukQMdZ68gLGAl5GvE9v/edit?usp=sharing&ouid=104573000701514802850&rtpof=true&sd=true).\n\nExport IRMS data in Isodat, with separate export templates for the sample peak and designated reference peak for each sample.\n\nOpen the .xls file containing Isodat output. Note that the spreadsheet contains two tabs: one contains raw data for each sample, and the other contains raw data for the designated reference peak for each sample.\n\nIn the \"sample\" tab, bring all fragment data in line, then delete extra rows. Do the same in the \"standard\" tab.\n\nOpen the data correction template. In the \"size_correction\" tab, copy the raw sample data from columns A-O in the sample tab into columns C-Q in the correction template. Copy the \"rR\" columns from the standards tab (columns M, N, O) into columns S, T, U in the correction template.\n\nReplace the values in row 3, columns W-Y with the appropriate $^{31}R$, $^{45}R$, and $^{46}R$ for your $N_2O$ reference tank (the reference gas used for on-offs/direct injections). The values in the template spreadsheet are specific to the Casciotti Lab's $N_2O$ reference tank. The $^{31}R$ of the direct reference injection can be calculated iteratively with [this template](https://docs.google.com/spreadsheets/d/1_O_XAY46mPgzr14PNBVJNAWj6ulRz8qM/edit?usp=sharing&ouid=104573000701514802850&rtpof=true&sd=true).\n\nReplace the values in row 7, columns W-Y, with your size correction slopes (the values in the template spreadsheet are specific to the linearity of the Casciotti Lab Delta V, as of February-March 2021). Ensure that these size correction slopes are normalized to the m/z 44 peak area. Ensure that they apply to the raw \"ratio of ratios\" 31rR/31rR, 45rR/45rR, and 45rR/45rR in columns AA-AC. For a description of how to calculate a common size correction slope from three reference materials using dummy variables, check out [this jupyter notebook](https://github.com/ckelly314/pyisotopomer/blob/master/linearity_slopes/linearity_slopes.ipynb).\n\nGo to the \"scale_normalization\" tab of the excel template. Columns A-F contain the pre-loaded delta values for a set of reference gases. If your reference gases are not listed, add their calibrated delta values in columns A-F, then copy the calculations in columns G-N. Columns M and N contain the \"known\" 45/44R and 46/44R for each reference material, normalized to the 45/44 and 46/44 of your $N_2O$ reference tank. While only two reference materials are required for this method, it can be helpful to run three or more reference materials to calculate the scale normalization, to ensure that the reference materials bracket the 45/44 and 46/44 of the unknowns.\n\nColumns Q and R are the \"known\" 45rR/45rR and 46rR/46rR for each reference material you've run. CHANGE these values so that they point to the appropriate values in columns M and N. Columns S and T are references to the size corrected 45rR/45rR and 46rR/46rR of each sample in your run. Drag these cells down to include all of the reference materials in your run. Delete #NUM values in columns W and X. Columns Y and Z contain the λ factors and intercepts needed to scale-normalize the measured 45rR/45rR and 46rR/46rR of the data. The lambda factors (row 3) should be close to 1, and the intercepts (row 4) should be close to 0 (if not, check for problem reference materials that are throwing off the calibration).\n\nReturn to the \"size_correction\" tab of the excel template. The values in row 11, columns W-X should be the lambda factors and intercepts calculated in the scale_normalization tab. Columns AI and AJ contain the scale-normalized 45rR/45rR and 46rR/46rR of each sample.\n\nThe 31R, 45R, and 46R for each sample, normalized to the common reference injection, normalized to a m/z 44 peak area of 20 Vs, and scale-normalized (in the case of 45R and 46R), are found in columns AL-AN. If you know the $\\Delta^{17}O$ of your samples, enter them in Column AO; otherwise, leave these values as 0. Save the correction template with a new name into your current working directory, or, if you're using Google Colab, upload it to your data processing folder in your drive.\n\n## Scrambling calibration\n\nHere, two coefficients, $γ$ and $κ$, are used to describe scrambling in the ion source. This is described in further detail in [Frame and Casciotti, 2010](https://www.biogeosciences.net/7/2695/2010/). The ion source chemistry, and thus scrambling behavior, of an IRMS is likely change over time. Because of this, we recommend running the scrambling calibration on a day-to-day basis, then calculating a running average of these daily means to calculate isotopocules. Below is a description of how to perform the scrambling calibration in pyisotopomer.\n\nRun two (or more) reference gases with known $^{15}R^α$ and $^{15}R^β$, prepared in the same format as samples. For the Casciotti lab, this is some amount of $N_2O$ reference gas injected into a bottle of seawater or DI water that has been purged with He or N2 gas.\n\nDownload the data correction [template](https://docs.google.com/spreadsheets/d/1b7aLuZZj5rE5fukQMdZ68gLGAl5GvE9v/edit?usp=sharing&ouid=104573000701514802850&rtpof=true&sd=true). Pre-process the data according to the pyisotopomer [README](https://github.com/ckelly314/pyisotopomer). Save it into your current working directory.\n\nGo to the \"scale_normalization\" tab of the excel template. Make sure it contains all of the reference materials you will use for the scrambling calculation. In column A \"ref_tag\", enter the names of your reference materials — these can be whatever you want, as long as they contain only alphanumeric characters and are short (15 characters or fewer).\n\nGo to the \"size_correction\" tab of the excel template. To mark which rows of the correction template represent reference materials, in column B \"ref_tag\", add the names of the reference materials, as they appear in the \"scale_normalization\" tab. For example, here, atmosphere-equilibrated seawater is named \"ATM\" and is marked as such in the \"ref_tag\" column.\n\nDO NOT MODIFY COLUMN HEADERS IN THE CORRECTION TEMPLATE. Save the correction template into your current working directory.\n\n### Choice of Method\n\nPyisotopomer contains two methods for the calculation of $γ$ and $κ$: a direct calculation of $γ$ and $κ$ based on the algebraic re-arrangement of the equation for $^{31}R$, and a least-squares solver method. Given the right reference materials, it is not necessary to use a numerical algorithm to solve for $γ$ and $κ$; algebraic manipulations can provide exact and unique solutions for each coefficient. This algebraic solution is the default method of calculation of $γ$ and $κ$ in pyisotopomer. It should be noted that this algebraic solution produces consistent results only when the site preferences of the two reference materials used in the calculation are sufficiently distinct — otherwise, it will return values of $γ$ and $κ$ that vary widely and may not fall in the range of plausible values (i.e., they are either negative or greater than one).\n\nIn the event that the user has yet to obtain reference materials that are different enough in their site preferences to produce consistent results with the algebraic method, the least squares approach can be used as a temporary alternative, with the following caveats and modifications:\n - The least squares solver finds a local minimum close to the initial guess for $γ$ and $κ$. As such, if the solver is fed an initial guess other than the absolute minimum calculated from the algebraic solution, it will find the “wrong” scrambling coefficients.\n - Using these “wrong” scrambling coefficients is OK if your unknowns are close in their delta values to those of the reference materials, but will have a deleterious effect as the unknowns diverge in their isotopomer values from the reference materials.\n - If the least squares solver is fed the correct $γ$ and $κ$ as an initial guess, it will converge on that solution — although this is still not as robust as simply running reference materials of sufficiently distinct site preferences and calculating $γ$ and $κ$ algebraically.\n\nThe algebraic method is the default and does not require any modifications to the call to the Scrambling function. To change to the least squares method, specify it with the \"method\" keyword argument. If you have an _a priori_ initial guess for $γ$ and $κ$, enter it using the \"initialguess\" keyword argument.\n\nTo calculate scrambling with the algebraic method, modify the \"inputfile\" keyword to reflect the name of your excel data corrections spreadsheet, then run the following code:\n\n```Python\nScrambling(inputfile=\"00_Python_template_v2.xlsx\", **kwargs)\n```\n\nTo calculate scrambling with the least squares method, modify the \"inputfile\" keyword to reflect the name of your excel data corrections spreadsheet, set the method to \"least_squares\", and enter an initial guess for gamma and kappa (format [gamma, kappa]). Run the following code:\n\n```Python\nScrambling(inputfile=\"00_Python_template_v2.xlsx\", method=\"least_squares\",\n          initialguess=[0.17, 0.08], **kwargs)\n```\n\nThe Scrambling function will create an output file entitled ```{date}_scrambling_output.xlsx``` with scrambling output, similar to this [example spreadsheet](https://docs.google.com/spreadsheets/d/1Z_jMqslWt4LfdaFTM_Ngt3a2VtxXn-mm/edit?usp=sharing&ouid=104573000701514802850&rtpof=true&sd=true). The Scrambling function will also output two .csv files containing intermediate data products: [normalized_ratios.csv](https://drive.google.com/file/d/1baG9H-MQuVRv9crKAKPQlj2wrp3l4qvj/view?usp=sharing) contains the $^{15}R^{bulk}$, $^{17}R$, and $^{18}R$ that pyisotopomer calculated from the normalized $^{45}R$ and $^{46}R$ of each reference material, and [normalized_deltas.csv](https://drive.google.com/file/d/1bx-Mop1dzjX5rhooWN79dgdfTjhWOvUi/view?usp=sharing) contains the equivalent delta values. You can copy these delta values into Columns AT-AV. If the scale normalization was effective, the $\\delta^{15}N^{bulk}$ and $\\delta^{18}O$ of each reference material should be close to their calibrated values; if not, you may need to check for problem reference materials.\n\n### Google Colab notebook for the scrambling calculation\n\nThis [Google Colab notebook](https://drive.google.com/file/d/1hEVvs98ZrpDxzNLJ2D0H6zJjnEs2umiq/view?usp=sharing) contains instructions on how to use the Google Colab environment and example code to run the Scrambling function of pyisotopomer.\n\n### Example Python script for the scrambling calculation\n\nThis [Python script](https://github.com/ckelly314/pyisotopomer/blob/master/tests/run_pyisotopomer.py) contains an example script that runs the code above. Save it into your current working directory. Run the script with:\n\n```bash\ncolette$ python run_pyisotopomer.py\n```\n\n## Calculating isotopomers\n\nSize-correct your data (including all samples and standards), as above. Enter the appropriate $γ$ and $κ$ in columns AP-AQ of the excel template. These should be a running average of $γ$ and $κ$, calculated using a window of \\~10 reference material pairings (see below).\n\nDO NOT MODIFY COLUMN HEADERS IN THE CORRECTION TEMPLATE. Save the correction template into your current working directory.\n\n### How to think about scrambling when calculating isotopomers\n\nYou will need to enter the appropriate scrambling coefficients in the excel template. These scrambling coefficients should represent a running average of $γ$ and $κ$ calculated from at least 10 pairings of reference materials (e.g. a week's worth, if unknowns are bookended by reference materials) run alongside unknowns. This is because a small standard deviation in the scrambling coefficients can lead to a large error in site preference, so it is advisable to run sufficient reference materials to bring down the standard deviation of $γ$ and $κ$. To calculate these running averages, it can be helpful to keep a spreadsheet with a running log of scrambling coefficients.\n\nTo calculate isotopomers, modify the \"inputfile\" keyword to reflect the name of your excel data corrections spreadsheet, then run the following code:\n\n```Python\nIsotopomers(inputfile = \"00_Python_template_v2.xlsx\", **kwargs)\n```\n\nThe Isotopomers function will create an output file entitled ```{date}_isotopeoutput.csv``` with isotopocule delta values, similar to this [example spreadsheet](https://drive.google.com/file/d/1ZWws_32rjzutNkmD4HYebJBWjjIPRwt1/view?usp=sharing). Copy and paste output data back into working (size correction) spreadsheet in olive-highlighted cells (columns AX-BC).\n\n### Google Colab notebook for the isotopomer calculation\n\nThis [Google Colab notebook](https://drive.google.com/file/d/1hEVvs98ZrpDxzNLJ2D0H6zJjnEs2umiq/view?usp=sharing) contains instructions on how to use the Google Colab environment and example code to run the Isotopomers function of pyisotopomer.\n\n### Example Python script for the isotopomer calculation\n\nThis [Python script](https://github.com/ckelly314/pyisotopomer/blob/master/tests/run_pyisotopomer.py) contains an example script that runs the code above. Save it into your current working directory. Run the script with:\n\n```bash\ncolette$ python run_pyisotopomer.py\n```\n\n## Calculating concentrations\n\nTo calculate the concentration of $N_2O$:\n\nGo to the \"concentration_constants\" tab of the excel template. Following the example calibration curve, calculate the ratio of mass 44 peak area to $N_2O$ (nmol/Vs) for your instrument. Update the values in row 2, columns B and D to reflect this calibration.\n\nGo to the \"size_correction\" tab of the excel template. Columns BE-BM contain the concentration calculation for liquid samples — that is, $N_2O$ dissolved in seawater, DI water, or freshwater. Enter the weights of each sample pre- and post- analysis in columns BE-BF. Column BI calculates volume from weight difference using the appropriate density of each sample matrix; ensure that this refers to the correct densities in the \"concentration_constants\" tab. Column BJ contains the $N_2O$ nmol amount in each sample, and column BL contains the concentration.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ckelly314/pyisotopomer",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyisotopomer",
    "package_url": "https://pypi.org/project/pyisotopomer/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyisotopomer/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ckelly314/pyisotopomer/issues",
      "Homepage": "https://github.com/ckelly314/pyisotopomer"
    },
    "release_url": "https://pypi.org/project/pyisotopomer/1.0.4/",
    "requires_dist": [
      "numpy",
      "pandas",
      "scipy",
      "datetime",
      "openpyxl",
      "jupyter"
    ],
    "requires_python": "",
    "summary": "Nitrous oxide isotopocule data corrections in Python",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16322538,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8a8b449af20b89a55fd1b8b6204b01c0ea09a4da3a130c74cf480a6bc603bed",
          "md5": "4c2dd4ce99fbd01ab3f91e884f60e820",
          "sha256": "d9a389675f88320178843944c9575cbbb5ca7899ba5f4ce0febe1fcc3be26eb1"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c2dd4ce99fbd01ab3f91e884f60e820",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22576,
        "upload_time": "2021-06-25T05:35:44",
        "upload_time_iso_8601": "2021-06-25T05:35:44.071655Z",
        "url": "https://files.pythonhosted.org/packages/f8/a8/b449af20b89a55fd1b8b6204b01c0ea09a4da3a130c74cf480a6bc603bed/pyisotopomer-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "895e764cd212a64a1cdff0bf704397f6d6af877719184a1ed0c40faffcb92b03",
          "md5": "b6fda0952b10cecd895c52402a2991bb",
          "sha256": "d91ea1c099922152daf6660c648fe69a89a668d7b415f8988d1423a3e6caff2a"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b6fda0952b10cecd895c52402a2991bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19372,
        "upload_time": "2021-06-25T05:35:45",
        "upload_time_iso_8601": "2021-06-25T05:35:45.874937Z",
        "url": "https://files.pythonhosted.org/packages/89/5e/764cd212a64a1cdff0bf704397f6d6af877719184a1ed0c40faffcb92b03/pyisotopomer-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a52ff3a8e72be2fe26572d822bb55ca5b89d465e8962fe4fe1cb94c85a80dea3",
          "md5": "dc7dc021760a189cbb7692447f47d341",
          "sha256": "bd1cbc5d39a07c465871b3503b47db55774d5902eed3354ee0ec760527786487"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc7dc021760a189cbb7692447f47d341",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22837,
        "upload_time": "2021-07-13T20:00:04",
        "upload_time_iso_8601": "2021-07-13T20:00:04.676548Z",
        "url": "https://files.pythonhosted.org/packages/a5/2f/f3a8e72be2fe26572d822bb55ca5b89d465e8962fe4fe1cb94c85a80dea3/pyisotopomer-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "054799c263d8883adeb8a645fcf0f1470cf8bfbdb82d0de3a238a07ff974663e",
          "md5": "8d826b1216bf09af656e560cfe8027ce",
          "sha256": "cbc37f70282a5e14b207dd8706e27aa1ffa2624aada8776640e84f86bdbb475f"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8d826b1216bf09af656e560cfe8027ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19643,
        "upload_time": "2021-07-13T20:00:06",
        "upload_time_iso_8601": "2021-07-13T20:00:06.819088Z",
        "url": "https://files.pythonhosted.org/packages/05/47/99c263d8883adeb8a645fcf0f1470cf8bfbdb82d0de3a238a07ff974663e/pyisotopomer-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a784480f44671144340a20bd8f5cbe37fdf68cff998d7f8c46f7c82c6ac8610d",
          "md5": "a529ce08703b70cc54089138bbae31f5",
          "sha256": "bf4be94d1a84d86c543922e441a28ab2e10b3102aa569125dd7432d1d1f2e5ca"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a529ce08703b70cc54089138bbae31f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23016,
        "upload_time": "2021-09-29T19:37:26",
        "upload_time_iso_8601": "2021-09-29T19:37:26.137148Z",
        "url": "https://files.pythonhosted.org/packages/a7/84/480f44671144340a20bd8f5cbe37fdf68cff998d7f8c46f7c82c6ac8610d/pyisotopomer-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84acaa0a50c5e47df861d4fd941a35ff510afd67ae76f5443cf1dd3d3d1fb799",
          "md5": "2dbdb3f715557d9d9e926debe48a3858",
          "sha256": "a2b8f88aebadf2b27d9f2146b8d669bc1945dd7422d337315cd077f8668684af"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2dbdb3f715557d9d9e926debe48a3858",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19787,
        "upload_time": "2021-09-29T19:37:29",
        "upload_time_iso_8601": "2021-09-29T19:37:29.312881Z",
        "url": "https://files.pythonhosted.org/packages/84/ac/aa0a50c5e47df861d4fd941a35ff510afd67ae76f5443cf1dd3d3d1fb799/pyisotopomer-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d56ff05bf37a6658539cbe402156a6e2b1cbee0b8dc595662908138d214a5d1e",
          "md5": "aa8571b5b8ba25f52c0a207da132a67d",
          "sha256": "4f867ae6a4b52f4364d5606065ee3c1409f80333538e1b4d3f6713dbecbcb208"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa8571b5b8ba25f52c0a207da132a67d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28055,
        "upload_time": "2022-06-22T00:59:04",
        "upload_time_iso_8601": "2022-06-22T00:59:04.482012Z",
        "url": "https://files.pythonhosted.org/packages/d5/6f/f05bf37a6658539cbe402156a6e2b1cbee0b8dc595662908138d214a5d1e/pyisotopomer-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19b5ac06cffbd60d954928dfa1ef39c6956784479c42076e16ee343fec81607c",
          "md5": "3cc494361f9b6f7e8e102657e2b876da",
          "sha256": "664877a14b389f21ba3b86d16bc3a7e3a90228685c8cd5615849697574d4337d"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3cc494361f9b6f7e8e102657e2b876da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22997,
        "upload_time": "2022-06-22T00:59:09",
        "upload_time_iso_8601": "2022-06-22T00:59:09.926473Z",
        "url": "https://files.pythonhosted.org/packages/19/b5/ac06cffbd60d954928dfa1ef39c6956784479c42076e16ee343fec81607c/pyisotopomer-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8bff61c0e6457a1658be197f42fece7567516c76bb73a4edfbaef76d70b5021",
          "md5": "1e98eb7198896b71da7330f59643f6da",
          "sha256": "fd656c3f539832055073daa977acfcb431f774b6daf20080bc4b7894923aebb2"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e98eb7198896b71da7330f59643f6da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29829,
        "upload_time": "2022-07-06T23:21:34",
        "upload_time_iso_8601": "2022-07-06T23:21:34.281857Z",
        "url": "https://files.pythonhosted.org/packages/f8/bf/f61c0e6457a1658be197f42fece7567516c76bb73a4edfbaef76d70b5021/pyisotopomer-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe97006bd5408458cdd84a513e6548ca3969f34b7ac0418e6f41bded80cc458c",
          "md5": "bbd06ea92a7de5ed8e86a308164dbef4",
          "sha256": "4793e0860f7cd303a1efe2334aef66635135349aecd6fb896f7b24a0d1ea356b"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "bbd06ea92a7de5ed8e86a308164dbef4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25189,
        "upload_time": "2022-07-06T23:21:38",
        "upload_time_iso_8601": "2022-07-06T23:21:38.921554Z",
        "url": "https://files.pythonhosted.org/packages/fe/97/006bd5408458cdd84a513e6548ca3969f34b7ac0418e6f41bded80cc458c/pyisotopomer-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ed801e5c43eaf6c74809c202bdf2537d4f2dcc256119d8e488ffd5b9a3200de",
          "md5": "111820fd699caf28f8cd166f44a8cac3",
          "sha256": "a37d3699c6c117226f421e6d06bb9efa6df1e854a1d51658950f3b0ca846b06c"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "111820fd699caf28f8cd166f44a8cac3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28179,
        "upload_time": "2022-08-08T23:08:49",
        "upload_time_iso_8601": "2022-08-08T23:08:49.227979Z",
        "url": "https://files.pythonhosted.org/packages/4e/d8/01e5c43eaf6c74809c202bdf2537d4f2dcc256119d8e488ffd5b9a3200de/pyisotopomer-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3391c3f260a27f4fa66978043da3c5e608d3d0c236b6d622da5870d6eab5a51",
          "md5": "b56072b582854390d7bab0b4e0da6f1a",
          "sha256": "81a1a531f368a85958afe55a204d640042851b19d919aa264c70b0f04dafb897"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b56072b582854390d7bab0b4e0da6f1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24160,
        "upload_time": "2022-08-08T23:08:53",
        "upload_time_iso_8601": "2022-08-08T23:08:53.315862Z",
        "url": "https://files.pythonhosted.org/packages/f3/39/1c3f260a27f4fa66978043da3c5e608d3d0c236b6d622da5870d6eab5a51/pyisotopomer-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8beae61fd376c6b52622d349b2ebb50167a2076410399bf227ffd150fed19af4",
          "md5": "1bab2e56389036bc6f68093bb53710cb",
          "sha256": "749b46b56384737229f9b2c5312d11d80c1edee875841bb042fc1b74ee70cde0"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1bab2e56389036bc6f68093bb53710cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28410,
        "upload_time": "2022-08-09T03:22:13",
        "upload_time_iso_8601": "2022-08-09T03:22:13.628880Z",
        "url": "https://files.pythonhosted.org/packages/8b/ea/e61fd376c6b52622d349b2ebb50167a2076410399bf227ffd150fed19af4/pyisotopomer-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d99d97e43f776db8ae6a716632cb9b3f88d1a2a91c181314ec04fbf4b0051587",
          "md5": "b59f195d0e0cc3e78468be336b09b8a1",
          "sha256": "228814a0c96b10416557d55b9a65b8d746b63fd630e3f1fb584778c11d4fa6e2"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "b59f195d0e0cc3e78468be336b09b8a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24374,
        "upload_time": "2022-08-09T03:22:18",
        "upload_time_iso_8601": "2022-08-09T03:22:18.282023Z",
        "url": "https://files.pythonhosted.org/packages/d9/9d/97e43f776db8ae6a716632cb9b3f88d1a2a91c181314ec04fbf4b0051587/pyisotopomer-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad913e86e73905bbbf142090437ae08f6c686c336fd510446dc48380914147b3",
          "md5": "ef13e0ec368d8a313154e8b23402e7d9",
          "sha256": "6713736e427e50653531f3ab420c7e397e45c4885d7870671fd07f6c2744165d"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef13e0ec368d8a313154e8b23402e7d9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30301,
        "upload_time": "2022-09-11T21:37:05",
        "upload_time_iso_8601": "2022-09-11T21:37:05.991715Z",
        "url": "https://files.pythonhosted.org/packages/ad/91/3e86e73905bbbf142090437ae08f6c686c336fd510446dc48380914147b3/pyisotopomer-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "416d5d2c4b56c9cfa439ac85e6114fb5499fd767fe392a7b08849fe83afe82b4",
          "md5": "4591a2af80390049faac963b50e69750",
          "sha256": "70087760f7e992d41a6ac85294a0b46ddf18661d1af547ea1745b9e41c7cb181"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "4591a2af80390049faac963b50e69750",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24905,
        "upload_time": "2022-09-11T21:37:11",
        "upload_time_iso_8601": "2022-09-11T21:37:11.888205Z",
        "url": "https://files.pythonhosted.org/packages/41/6d/5d2c4b56c9cfa439ac85e6114fb5499fd767fe392a7b08849fe83afe82b4/pyisotopomer-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "998bf425a0f59ce4b3a863eaf7aeaa2ff8d1daafe84a9bf1a5f6a4a13fe98fd7",
          "md5": "8cf0c6589294474899c5c275ffa3006c",
          "sha256": "c75cc19e409dbf0d34cf86982b6fedd5d8f7c19f260cd794cd6c70e9b0f4a4e5"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cf0c6589294474899c5c275ffa3006c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30452,
        "upload_time": "2022-09-17T20:56:22",
        "upload_time_iso_8601": "2022-09-17T20:56:22.988893Z",
        "url": "https://files.pythonhosted.org/packages/99/8b/f425a0f59ce4b3a863eaf7aeaa2ff8d1daafe84a9bf1a5f6a4a13fe98fd7/pyisotopomer-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7d4cded1beccbed89bad3f92fb8bf9d9a7755b62db84c05548c7bb2a5e011bd",
          "md5": "17ff72ff780c25ad2c02b124219dd1df",
          "sha256": "0fba6f23b617e062268d847986047f3273d844c8014a8453dad1a6e010668a0f"
        },
        "downloads": -1,
        "filename": "pyisotopomer-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "17ff72ff780c25ad2c02b124219dd1df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25069,
        "upload_time": "2022-09-17T20:56:30",
        "upload_time_iso_8601": "2022-09-17T20:56:30.507057Z",
        "url": "https://files.pythonhosted.org/packages/c7/d4/cded1beccbed89bad3f92fb8bf9d9a7755b62db84c05548c7bb2a5e011bd/pyisotopomer-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e610caaef6971459a922d81764affae00107454facdc0ae3fcbe7e41e04c03f7",
          "md5": "371afe944d2834e89be9703e4f076c8d",
          "sha256": "130b482b9323c3793e936f0b01b9c7c47cd3307788b6f08d83714547c05f37f3"
        },
        "downloads": -1,
        "filename": "pyisotopomer-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "371afe944d2834e89be9703e4f076c8d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30973,
        "upload_time": "2022-11-23T04:26:15",
        "upload_time_iso_8601": "2022-11-23T04:26:15.032185Z",
        "url": "https://files.pythonhosted.org/packages/e6/10/caaef6971459a922d81764affae00107454facdc0ae3fcbe7e41e04c03f7/pyisotopomer-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "984915c4014878d812905c75c28bfbd13812086d8c975db3867a4af365fd9aef",
          "md5": "3204251abea4c667fcfbd6963da3435c",
          "sha256": "5453514f30a8c80d1ad3c4737006066b46515245cc7d0ca7f67545cac4decc98"
        },
        "downloads": -1,
        "filename": "pyisotopomer-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3204251abea4c667fcfbd6963da3435c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25783,
        "upload_time": "2022-11-23T04:26:25",
        "upload_time_iso_8601": "2022-11-23T04:26:25.322081Z",
        "url": "https://files.pythonhosted.org/packages/98/49/15c4014878d812905c75c28bfbd13812086d8c975db3867a4af365fd9aef/pyisotopomer-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98a880fee38b4119e04628df5273da6ba89cfcdd7f3082f0b4009649f6956e74",
          "md5": "378bb2c5db739f4f3a5961188f51d439",
          "sha256": "68bc3f66f49e04baeeda9cece4ceff1504513aeff282efcc3bdbc9000811543d"
        },
        "downloads": -1,
        "filename": "pyisotopomer-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "378bb2c5db739f4f3a5961188f51d439",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35000,
        "upload_time": "2022-12-14T02:05:06",
        "upload_time_iso_8601": "2022-12-14T02:05:06.963284Z",
        "url": "https://files.pythonhosted.org/packages/98/a8/80fee38b4119e04628df5273da6ba89cfcdd7f3082f0b4009649f6956e74/pyisotopomer-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f05a347a8307f516c49414fd1add5898ea02670ddd86b5f631e84c19f309bdae",
          "md5": "8f061568307bf2ef4e8164769089038a",
          "sha256": "fc0a83f4621d933f1cc2bda2a7200c1610c543dcf1d3fbb9c78ab21b6ecf7da6"
        },
        "downloads": -1,
        "filename": "pyisotopomer-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8f061568307bf2ef4e8164769089038a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28189,
        "upload_time": "2022-12-14T02:05:16",
        "upload_time_iso_8601": "2022-12-14T02:05:16.157738Z",
        "url": "https://files.pythonhosted.org/packages/f0/5a/347a8307f516c49414fd1add5898ea02670ddd86b5f631e84c19f309bdae/pyisotopomer-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4d0538c4871887582e778d61deb61f90bd1efdcc29a97d185eda2f2269f314a",
          "md5": "cf79f466a52184ae071f3f06cfd186b5",
          "sha256": "20bc870135bc7595dcc8f97b8914224219611850514e1cd462cc9892f04766de"
        },
        "downloads": -1,
        "filename": "pyisotopomer-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf79f466a52184ae071f3f06cfd186b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36554,
        "upload_time": "2023-01-02T16:53:53",
        "upload_time_iso_8601": "2023-01-02T16:53:53.232533Z",
        "url": "https://files.pythonhosted.org/packages/b4/d0/538c4871887582e778d61deb61f90bd1efdcc29a97d185eda2f2269f314a/pyisotopomer-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76b020d11e9eb1cd795dc56b510f1ad9bc3363e80caf52a25e3084afdc8e701a",
          "md5": "cf3e0f70cce09bd932c3ed091f4505ef",
          "sha256": "cb0c02d5a29ddaf1daa3e29e200825b1d8dbb3f40e088050441619300522f6a0"
        },
        "downloads": -1,
        "filename": "pyisotopomer-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cf3e0f70cce09bd932c3ed091f4505ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28934,
        "upload_time": "2023-01-02T16:53:59",
        "upload_time_iso_8601": "2023-01-02T16:53:59.156466Z",
        "url": "https://files.pythonhosted.org/packages/76/b0/20d11e9eb1cd795dc56b510f1ad9bc3363e80caf52a25e3084afdc8e701a/pyisotopomer-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f9413e3b6a9f6d473d193de61ee80bbff3b1a88b281c4e80f35afafa26c6750",
          "md5": "cb9a17aa213d7127eabf77d6661ec721",
          "sha256": "bc2b828fac497b124172b282df01fc05870f5de72f25dc15a2a83bc69ec73d33"
        },
        "downloads": -1,
        "filename": "pyisotopomer-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb9a17aa213d7127eabf77d6661ec721",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36565,
        "upload_time": "2023-01-05T22:00:33",
        "upload_time_iso_8601": "2023-01-05T22:00:33.884547Z",
        "url": "https://files.pythonhosted.org/packages/7f/94/13e3b6a9f6d473d193de61ee80bbff3b1a88b281c4e80f35afafa26c6750/pyisotopomer-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c0f93aa90c3ce6d4a2123fe46012ad2053c1fcfa99686c3670cb8800afe0048",
          "md5": "5233b2270bf39978394ddbb36df6ce62",
          "sha256": "30756d3f94bdc2c0ea96402b22098d8aab96f96383d698a5497d619d54d77442"
        },
        "downloads": -1,
        "filename": "pyisotopomer-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5233b2270bf39978394ddbb36df6ce62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28950,
        "upload_time": "2023-01-05T22:00:41",
        "upload_time_iso_8601": "2023-01-05T22:00:41.255468Z",
        "url": "https://files.pythonhosted.org/packages/1c/0f/93aa90c3ce6d4a2123fe46012ad2053c1fcfa99686c3670cb8800afe0048/pyisotopomer-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "917cdc54fec25250a08a9546cf1364168100cc5e287364e9e0fa8ab5f0c3fd1a",
          "md5": "43f5458c0e23e4ffb96c7ca4fecfd967",
          "sha256": "e4755fef6900f261dc70f7db3411c3824bf64dd658edc1f45ebccf008346560a"
        },
        "downloads": -1,
        "filename": "pyisotopomer-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "43f5458c0e23e4ffb96c7ca4fecfd967",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36558,
        "upload_time": "2023-01-05T22:03:57",
        "upload_time_iso_8601": "2023-01-05T22:03:57.559779Z",
        "url": "https://files.pythonhosted.org/packages/91/7c/dc54fec25250a08a9546cf1364168100cc5e287364e9e0fa8ab5f0c3fd1a/pyisotopomer-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a69603ea91e0ce7c395020bf786f1d8f9455fa8230902e39b016dd6061c35d8",
          "md5": "472d925ad53c4a06a67a6feeb3e657c7",
          "sha256": "ee967c2ceaffcc5b562c2764a7f8e73aa524ff93a1fb4ce0ed13c1a7f4821c1c"
        },
        "downloads": -1,
        "filename": "pyisotopomer-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "472d925ad53c4a06a67a6feeb3e657c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28951,
        "upload_time": "2023-01-05T22:04:04",
        "upload_time_iso_8601": "2023-01-05T22:04:04.631139Z",
        "url": "https://files.pythonhosted.org/packages/4a/69/603ea91e0ce7c395020bf786f1d8f9455fa8230902e39b016dd6061c35d8/pyisotopomer-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "917cdc54fec25250a08a9546cf1364168100cc5e287364e9e0fa8ab5f0c3fd1a",
        "md5": "43f5458c0e23e4ffb96c7ca4fecfd967",
        "sha256": "e4755fef6900f261dc70f7db3411c3824bf64dd658edc1f45ebccf008346560a"
      },
      "downloads": -1,
      "filename": "pyisotopomer-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "43f5458c0e23e4ffb96c7ca4fecfd967",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 36558,
      "upload_time": "2023-01-05T22:03:57",
      "upload_time_iso_8601": "2023-01-05T22:03:57.559779Z",
      "url": "https://files.pythonhosted.org/packages/91/7c/dc54fec25250a08a9546cf1364168100cc5e287364e9e0fa8ab5f0c3fd1a/pyisotopomer-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a69603ea91e0ce7c395020bf786f1d8f9455fa8230902e39b016dd6061c35d8",
        "md5": "472d925ad53c4a06a67a6feeb3e657c7",
        "sha256": "ee967c2ceaffcc5b562c2764a7f8e73aa524ff93a1fb4ce0ed13c1a7f4821c1c"
      },
      "downloads": -1,
      "filename": "pyisotopomer-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "472d925ad53c4a06a67a6feeb3e657c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28951,
      "upload_time": "2023-01-05T22:04:04",
      "upload_time_iso_8601": "2023-01-05T22:04:04.631139Z",
      "url": "https://files.pythonhosted.org/packages/4a/69/603ea91e0ce7c395020bf786f1d8f9455fa8230902e39b016dd6061c35d8/pyisotopomer-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}