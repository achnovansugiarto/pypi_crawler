{
  "info": {
    "author": "asenogles",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# slidePy\n\n[![pypi](https://img.shields.io/pypi/v/slidepy.svg)](https://pypi.python.org/pypi/slidepy)\n[![image](https://img.shields.io/badge/dynamic/json?query=info.requires_python&label=python&url=https%3A%2F%2Fpypi.org%2Fpypi%2Fslidepy%2Fjson )](https://pypi.python.org/pypi/slidepy)\n[![License: LGPL v3](https://img.shields.io/badge/License-LGPL_v3-yellow.svg)](https://www.gnu.org/licenses/lgpl-3.0)\n\n***slidepy*** is a fast multi-threaded python library for performing 3D landslide simulation and modelling using [openMP](https://www.openmp.org/), [SIMD](https://en.wikipedia.org/wiki/Single_instruction,_multiple_data) and [numpy](https://numpy.org/) objects.\n\n - Github repository: https://github.com/asenogles/slidepy\n  - PyPI: https://pypi.org/project/slidepy\n\n## Motivation\n\n***slidepy*** was developed to quickly perform landslide simulations, enabling self-supervised learning for landslide analyses. ***slidepy*** provides a cython wrapper for optimized [openMP](https://www.openmp.org/) *c* code with addtional [SIMD](https://en.wikipedia.org/wiki/Single_instruction,_multiple_data) support for SSE & AVX instruction sets using [Intrinsics](https://www.intel.com/content/www/us/en/docs/intrinsics-guide/index.html). Data objects are handled by [numpy](https://numpy.org/) allowing for straightforward memory management. Currently only conservation of mass modelling has been fully implemented, however this is open to expansion in the future. All code is still in development and thus it is recommended to test fully before use.\n\n## Installation\n\n***slidepy*** has currently been tested on Linux and Microsoft windows operating systems. You will need python>=3.6 installed. If running ***slidepy*** on non-x86 architecture, you will need to modify the SIMD code in order to compile. It is recommended to install ***slidepy*** within a virtual environment.\n### Install using pip\n\nTo install ***slidepy*** from PyPI using pip:\n\n```console\npip install slidepy\n```\n### Install from source\n\nTo build ***slidepy*** from source, download this repository and run:\n```console\npython3 setup.py build_ext --inplace\n```\n**Note**: You will need to have the required build dependencies installed.\n\n## Example\n\n```python\nimport timeit\nimport numpy as np\nimport fasterraster as fr\nimport slidepy as sp\nfrom pathlib import Path\n\nNTESTS = 10\n\n# Load grid files\ndir = Path('./test_data/')\ndem = fr.read(dir / 'dem.bil')\nmask = fr.read(dir / 'mask.bil')\nssem = fr.read(dir / 'ssem.bil')\nvel = fr.Flo(dir / 'vel.flo')\n\n# prep velocity grids\nfr.multiplyFloMask(vel.raster, mask.raster) # 0 velocity values outslide of landslide extent\nu, v = fr.flo_to_u_v(vel.raster)            # split velocity grid into u & v components\n\n# regular python implementation of com function\ndef py_com(dem, u, v, ssem, cell_size, epochs):\n\n    dem_cpy = dem.copy()\n\n    dl = 2. * cell_size\n    rows = dem_cpy.shape[0] - 2\n    cols = dem_cpy.shape[1] - 2\n\n    # calculate depth\n    h = dem_cpy - ssem\n\n    for i in range(epochs):\n        for i in range(1, rows):\n            for j in range(1, cols):\n                dem_cpy[i,j] -= ((h[i,j] * (u[i,j-1] - u[i,j+1]) / dl) + (u[i,j] * (h[i,j-1] - h[i,j+1]) / dl)) + ((h[i,j] * (v[i+1,j] - v[i-1,j]) / dl) + (v[i,j] * (h[i+1,j] - h[i-1,j]) / dl))\n        for i in range(1, rows):\n            for j in range(1, cols):\n                h[i,j] = dem_cpy[i,j] - ssem[i,j]\n    return dem_cpy\n\n# regular numpy implementation of com function\ndef np_com(dem, u, v, ssem, cell_size, epochs):\n    \n    dem_cpy = dem.copy()\n\n    # calculate depth\n    h = dem_cpy - ssem\n\n    # calculate vel gradients\n    du = np.gradient(u, axis=1) / cell_size\n    dv = np.gradient(v, axis=1) / cell_size\n\n    for i in range(epochs):\n        # calculate depth gradient\n        dh_v, dh_u = np.gradient(h)\n        dh_u = -1 * dh_u / cell_size\n        dh_v = dh_v / cell_size\n\n        # calculate dz\n        dz_u = (h * du) + (u * dh_u)\n        dz_v = (h * dv) + (v * dh_v)\n        dz = dz_u + dz_v\n\n        # update dem & depth\n        dem_cpy = dem_cpy - dz\n        h = dem_cpy - ssem\n    \n    return dem_cpy\n\n# Time Conservation of mass simulation using regular python\ntime = timeit.timeit(lambda: py_com(dem.raster, u, v, ssem.raster, dem.XDIM, 1), number=1)\nprint(f'python COM took {time:.3f} seconds')\n\n# Time Conservation of mass simulation using numpy\ntime = timeit.timeit(lambda: np_com(dem.raster, u, v, ssem.raster, dem.XDIM, 1), number=1)\nprint(f'numpy COM took {time:.3f} seconds')\n\n# Time Conservation of mass simulation using open-MP for numt-threads\nnum_threads = [1,2,4,8]\nfor numt in num_threads:\n    time = timeit.timeit(lambda: sp.com_mp(dem.raster, u, v, ssem.raster, dem.XDIM, 1, numt), number=NTESTS)\n    print(f'MP COM averaged {time/NTESTS:.3f} seconds')\n\n# Time Conservation of mass simulation using open-MP and SIMD for numt-threads\nfor numt in num_threads:\n    time = timeit.timeit(lambda: sp.com_sse(dem.raster, u, v, ssem.raster, dem.XDIM, 1, numt), number=NTESTS)\n    print(f'SSE COM averaged {time/NTESTS:.3f} seconds')\n```\nExample output:\n```console\npython COM took 162.632 seconds\nnumpy COM took 7.911 seconds\nMP COM averaged 0.095 seconds\nMP COM averaged 0.092 seconds\nMP COM averaged 0.091 seconds\nMP COM averaged 0.088 seconds\nSSE COM averaged 0.048 seconds\nSSE COM averaged 0.033 seconds\nSSE COM averaged 0.028 seconds\nSSE COM averaged 0.030 seconds\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/asenogles/slidepy",
    "keywords": "",
    "license": "LGPL v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "slidepy",
    "package_url": "https://pypi.org/project/slidepy/",
    "platform": null,
    "project_url": "https://pypi.org/project/slidepy/",
    "project_urls": {
      "Homepage": "https://github.com/asenogles/slidepy"
    },
    "release_url": "https://pypi.org/project/slidepy/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Fast multi-threaded 3D landslide modelling with SIMD support",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13117463,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "668e99ca9b19736dad3b2a41c535087616feb209aa85825102f2ebf7647f6aad",
          "md5": "84be6b4dce085a270023d1b09fe3bbc6",
          "sha256": "2b4a576ce85f1cd825463a9852eafd752ce2888fd6949b069f50c5f40a4d482a"
        },
        "downloads": -1,
        "filename": "slidepy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "84be6b4dce085a270023d1b09fe3bbc6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15062,
        "upload_time": "2022-03-08T21:08:53",
        "upload_time_iso_8601": "2022-03-08T21:08:53.003888Z",
        "url": "https://files.pythonhosted.org/packages/66/8e/99ca9b19736dad3b2a41c535087616feb209aa85825102f2ebf7647f6aad/slidepy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "668e99ca9b19736dad3b2a41c535087616feb209aa85825102f2ebf7647f6aad",
        "md5": "84be6b4dce085a270023d1b09fe3bbc6",
        "sha256": "2b4a576ce85f1cd825463a9852eafd752ce2888fd6949b069f50c5f40a4d482a"
      },
      "downloads": -1,
      "filename": "slidepy-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "84be6b4dce085a270023d1b09fe3bbc6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15062,
      "upload_time": "2022-03-08T21:08:53",
      "upload_time_iso_8601": "2022-03-08T21:08:53.003888Z",
      "url": "https://files.pythonhosted.org/packages/66/8e/99ca9b19736dad3b2a41c535087616feb209aa85825102f2ebf7647f6aad/slidepy-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}