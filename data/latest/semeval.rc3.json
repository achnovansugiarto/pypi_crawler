{
  "info": {
    "author": "Khalid Alnajjar",
    "author_email": "khldalnajjar@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "# Semeval (Semantic Evaluation)\n\nSemeval is a Python package for modelling various aspects of meaning in languages.\n\n# Installation\n\nThe package can be installed via PIP: `pip install -U semeval`\n\n## Download models\n\nThe following command downloads word vector embeddings for English and Finnish\n\n\tpython3 -m semeval.download -l eng fin -m embeddings\n\nWe currently suppor eng, fin, kpv, myv, mdf, rus, liv and sms.\n\nRelatedness models can be downloaded using the command:\n\n    python3 -m semeval.download -l eng fin -m relatedness\n    \nCurrently, only English and Finnish are supported in the relatedness model.\n\n# Usage\n\n## Word embeddings\n\nLoad embeddings of a language by running:\n\n\tfrom semeval import Embeddings\n\te = Embeddings(\"eng\")\n\nAfter this, you can find related words\n\n\te.theme(['shoe', 'clothes']) #outputs a word describing all input words\n\t>> ('clothing', 0.8700831532478333)\n\n\te.neighbours('hi') #outputs the nearest neighbors\n\t>> [('hey', 0.6976003050804138), ('jeez', 0.6230848431587219), ('ya', 0.6213312149047852), ('hello', 0.6144036650657654) ...]\n\n\te.analogy('man', 'king', 'woman') #analogous words\n\t>> [('monarch', 0.6457855105400085), ('regnant', 0.6354122161865234)...]\n\n\te.most_similar(positive=['hello', 'world'], negative=['king'], topn=10)\n\t>> [('Tamana', 1.1119599342346191), ('Ibaraki', 1.087041974067688), ('Makuhari', 1.0793628692626953),... ]\n\nGet vector representations\n\n\te.centroid(['hi', 'hello']) #the centroid vector of the input words\n\t>> [0. 0.10486 -0.23701501 0.1293 0.052645 -0.027155...]\n\n\te.to_vector('this is a great api !'.split(' ')) # a vector representing the sentence\n\t>> [1.1630000e-02 -2.2303334e-02  8.4316663e-02 -2.1063333e-02...]\n\n\te.vector(\"king\")\n\t>> [0.05574 -0.16716 0.10282 -0.10851 0.08783 -0.09499 0.16031...]\n\nGet similar words in another language\n\n\te2 = Embeddings(\"fin\")\n\te.project('king', e2)\n\t>>[('Ahasveros', 0.5551087856292725), ('kuningas', 0.5522325038909912), ('kuninkas', 0.5242758393287659)..]\n\nWord similarity\n\n\te.similarity('hi', 'bye')\n\t>> 0.28805155\n\nVocabulary\n\n\te.vocabulary()\n\t>> {'astrologically': <Vocab object>, 'spinto': <Vocab object>, 'NortelNet': <Vocab object>...}\n\n### Server-mode\nServer-mode is optimal for some cases such debugging or not wanting to wait for multiple models to load. To start word \nembeddings server, run the below command in the terminal: `python -m semeval.server --service embeddings`\n\nOnce the server is loaded, the service is accessible through `EmbeddingsAPI` class. \nNote that the language/s must be passed every call, otherwise the server cannot know which model to use. \nHere is an example of accessing the service from Python.\n\n```python\nfrom semeval import EmbeddingsAPI\n\napi = EmbeddingsAPI()\napi.theme(words=['shoe', 'clothes'], lang='eng')\napi.neighbours(word='hi', threshold=0.4, lang='eng')\napi.analogy('man', 'king', 'woman', topn=10, lang='fin')\napi.centroid(words=['hi', 'hello'], lang='eng')\napi.to_vector(tokens='this is a great api !'.split(' '), lang='eng')\napi.align(word='king', lang1='eng', lang2='fin')\napi.similarity(w1='hi', w2='bye', lang='eng')\napi.most_similar(positive=['hello', 'world'], negative=['king'], topn=10, lang='eng')\napi.vector(word='king', lang='eng')\napi.vocabulary(lang='eng')\n```\n\n## Relatedness\nLoad the relatedness model:\n\n    from semeval import Relatedness\n    m = Relatedness(lang='eng')\n\nGet most 5 related word to the word *car*:\n\n    m.get_sorted_rel('car')[:5]\n    >> [('park', 0.20570222), ('insurance', 0.085593514), ('parking', 0.06783264), ('hire', 0.036158927), ('cheap', 0.028782822)]\n    \nGet relatedness score between two words:\n\n    m.get_rel('car')['insurance']\n    >> 0.085593514\n\nTop 10 interpretations for the metaphor \"*Alcohol* is a *Crutch*\". NOTE: unlike the original paper, there is no filtering (e.g., POS \nfiltering) applied in this function. Read the paper for further details and post-processing steps to improve the results.\n\n    m.interpret('alcohol', 'crutch')[:10]\n    >> [('use', 0), ('cane', 0), ('smoking', 1), ('psychological', 2), ('dependence', 2), ('emotional', 3), ('cigarette', 3), ('drug', 4), ('bandage', 4), ('week', 5)]\n\nMetaphoricity scores for the tenor *computer*, vehicle *creative* and expression 'The algorithm for painting.'\n\n    m.metaphoricity('computer', 'creative', ['the', 'algorithm', 'for', 'painting'], 300) # 0 to select all\n    >> (3.2977940826411467e-07, 0.000510800164192915, 0.00025556497180058955) # (magnitude score, difference score, avg if both positive)\n    \n# Business solutions\n\n<img src=\"https://rootroo.com/cropped-logo-01-png/\" alt=\"Rootroo logo\" width=\"128px\" height=\"128px\">\n\nWhen your NLP needs grow out of what UralicNLP can provide, we have your back! [Rootroo offers consulting related to a variety of NLP tasks](https://rootroo.com/). We have a strong academic background in the state-of-the-art AI solutions for every NLP need. Just contact us, we won't bite.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mokha/semantics",
    "keywords": "NLP,semeval,languages,endangered languages",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "semeval",
    "package_url": "https://pypi.org/project/semeval/",
    "platform": "",
    "project_url": "https://pypi.org/project/semeval/",
    "project_urls": {
      "Bug Reports": "https://github.com/mokha/semantics/issues",
      "Developer": "https://www.khalidalnajjar.com/",
      "Homepage": "https://github.com/mokha/semantics",
      "Wiki": "https://github.com/mokha/semantics/wiki"
    },
    "release_url": "https://pypi.org/project/semeval/1.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A library for working with semantics in multiple languages..",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11087342,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46032ae3310619d1c5d4700a2d91ce929554621997855d9332ada5753d907dee",
          "md5": "c0822af9de5b3c308f43ece857a10871",
          "sha256": "4d2d40294a811276aca0bda4c9ef88b4018088d26ae69f36eb30899b1ac7d77e"
        },
        "downloads": -1,
        "filename": "semeval-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c0822af9de5b3c308f43ece857a10871",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7580,
        "upload_time": "2021-03-24T10:03:37",
        "upload_time_iso_8601": "2021-03-24T10:03:37.202690Z",
        "url": "https://files.pythonhosted.org/packages/46/03/2ae3310619d1c5d4700a2d91ce929554621997855d9332ada5753d907dee/semeval-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3ae9aa8a2818016c078a099a3993d06f228a613fbf86cb38d15e5ae124a4e43",
          "md5": "18fe8543166cd03bd33b9919ea2156b7",
          "sha256": "af24b27e3d4041bae6374f984ece940ea5c3132f6ef4a60d8995a3b0e4070919"
        },
        "downloads": -1,
        "filename": "semeval-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "18fe8543166cd03bd33b9919ea2156b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12316,
        "upload_time": "2021-03-24T14:02:13",
        "upload_time_iso_8601": "2021-03-24T14:02:13.817112Z",
        "url": "https://files.pythonhosted.org/packages/a3/ae/9aa8a2818016c078a099a3993d06f228a613fbf86cb38d15e5ae124a4e43/semeval-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36dbfe5cfcd5904ac575bbe6c1ef5fa1eb6156799fe9a7dcdea659430c0b5b46",
          "md5": "9c6e09665b591e777c701bee4a9ca430",
          "sha256": "b3b9e98ee15d5e1d00f6205e7e81575ca1d42ae7ffbf9d45f3be5d3e4020d7f7"
        },
        "downloads": -1,
        "filename": "semeval-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c6e09665b591e777c701bee4a9ca430",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15506,
        "upload_time": "2021-08-04T06:47:19",
        "upload_time_iso_8601": "2021-08-04T06:47:19.285027Z",
        "url": "https://files.pythonhosted.org/packages/36/db/fe5cfcd5904ac575bbe6c1ef5fa1eb6156799fe9a7dcdea659430c0b5b46/semeval-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c5bc1675e8922f27d28bca0b7f1ba771d109f3810146115640193188969c5ca",
          "md5": "d4586b43bb262416a11c325b00343601",
          "sha256": "417eee133b3ef4ba04e967d2ea65f7776ebd8f24c781d76e1fe95f66a4257b56"
        },
        "downloads": -1,
        "filename": "semeval-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d4586b43bb262416a11c325b00343601",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17007,
        "upload_time": "2021-08-04T06:44:20",
        "upload_time_iso_8601": "2021-08-04T06:44:20.274915Z",
        "url": "https://files.pythonhosted.org/packages/9c/5b/c1675e8922f27d28bca0b7f1ba771d109f3810146115640193188969c5ca/semeval-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "36dbfe5cfcd5904ac575bbe6c1ef5fa1eb6156799fe9a7dcdea659430c0b5b46",
        "md5": "9c6e09665b591e777c701bee4a9ca430",
        "sha256": "b3b9e98ee15d5e1d00f6205e7e81575ca1d42ae7ffbf9d45f3be5d3e4020d7f7"
      },
      "downloads": -1,
      "filename": "semeval-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9c6e09665b591e777c701bee4a9ca430",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15506,
      "upload_time": "2021-08-04T06:47:19",
      "upload_time_iso_8601": "2021-08-04T06:47:19.285027Z",
      "url": "https://files.pythonhosted.org/packages/36/db/fe5cfcd5904ac575bbe6c1ef5fa1eb6156799fe9a7dcdea659430c0b5b46/semeval-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c5bc1675e8922f27d28bca0b7f1ba771d109f3810146115640193188969c5ca",
        "md5": "d4586b43bb262416a11c325b00343601",
        "sha256": "417eee133b3ef4ba04e967d2ea65f7776ebd8f24c781d76e1fe95f66a4257b56"
      },
      "downloads": -1,
      "filename": "semeval-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d4586b43bb262416a11c325b00343601",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17007,
      "upload_time": "2021-08-04T06:44:20",
      "upload_time_iso_8601": "2021-08-04T06:44:20.274915Z",
      "url": "https://files.pythonhosted.org/packages/9c/5b/c1675e8922f27d28bca0b7f1ba771d109f3810146115640193188969c5ca/semeval-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}