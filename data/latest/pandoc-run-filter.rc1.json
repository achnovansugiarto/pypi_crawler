{
  "info": {
    "author": "John L. Whiteman",
    "author_email": "me@johnlwhiteman.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Text Processing :: Filters"
    ],
    "description": "# pandoc-run-filter\n\nA simple pandoc filter that runs an embedded command or script in a markdown document capturing its output as an image or text.\n\nThis tool has two basic use cases:\n\n1. Execute a program or command as specified in the markdown\n2. Execute a script that you embed in the markdown itself\n\nThe tool then captures the output and passes it to *pandoc* as either:\n\n1. Text\n2. Image\n\nSo what could go wrong?\n\n```\n /\\  /\\ !!!!!!!!! /\\  /\\\n|! ||! |!!!!!!!!!|! ||! |\n|! ||! |         |! ||! |\n|! ||! | Warning |! ||! |\n|! ||! |         |! ||! |\n|__||__|!!!!!!!!!|__||__|\n(__)(__)!!!!!!!!!(__)(__)\n```\n\n***Warning: Only run this tool on markdown content that you trust. Don't blindly run it on unverified content since inputs are executed while running pandoc.***\n\n```\n /\\  /\\ !!!!!!!!! /\\  /\\\n|! ||! |!!!!!!!!!|! ||! |\n|! ||! |         |! ||! |\n|! ||! | Warning |! ||! |\n|! ||! |         |! ||! |\n|__||__|!!!!!!!!!|__||__|\n(__)(__)!!!!!!!!!(__)(__)\n```\n\n## Install\n\n```bash\n$ pip install pandoc-run-filter\n```\n\n## Test\n\n```bash\n$ pip install pytest pyfiglet\n$ pytest ./tests/tests.py\n```\n\n## Run\n\n```bash\n$ pandoc --filter pandoc-run-filter myfile.md -o myfile.epub\n```\n\n## Uninstall\n\n```bash\n$ pip uninstall pandoc-run-filter -y\n```\n\n## Markdown Options\n\npandoc-run-filter looks for the following syntax in a markdown file where *.run* is the keyword.\n\n``````\n```{.run cmd=\"?\" in=\"?\" out=\"?\" img=\"?\"}\n?\n```\n``````\n\nSome examples of *cmd* might include:\n\n* echo\n* python\n* dir\n* ls\n* myprogram\n* /home/user/myprogram\n* ../../myprogram\n* ...\n\nNext, the *in* parameter tells us how *cmd* should be executed. We have two options here:\n\nRun as a shell command:\n\n```bash\nin=\"shell\"\n```\n\nRun as an embedded script:\n\n```bash\nin=\"script\"\n```\n\nNext, the *out* parameter tells us how the output should be handled. We have a few options here too:\n\nCapture as text:\n\n```bash\nout=\"text\"\n```\n\nCapture as an image:\n\n```bash\nout=\"image\"\n```\n\nIf *out* is an image and what gets executed generates an image file, then we can use the optional *img* parameter to point to the path of that file. If this option is not provided, then this tool does its best to convert the output to an image.\n\n```bash\nout=\"image\" img=\"<path>\"\n```\n\nThat's about it. Now, it's time for some examples. There were taken from the use cases under the *./tests* directory.\n\n\n## Examples\n\n### [01.md](https://github.com/johnlwhiteman/pandoc-run-filter/blob/master/tests/01.md)\n\n*Run the echo command in a shell and capture the output as text*\n\nMarkdown:\n\n``````\n```{.run cmd=\"echo\" in=\"shell\" out=\"text\"}\n'This is output as text.'\n```\n``````\n\nPandoc:\n\n```bash\npandoc -i 01.md --filter pandoc-run-filter -o 01.epub\n```\n\nOutput:\n\n```bash\n'This is output as text.'\n```\n\n[01.epub](https://github.com/johnlwhiteman/pandoc-run-filter/blob/master/epubs/01.epub)\n\n### [02.md](https://github.com/johnlwhiteman/pandoc-run-filter/blob/master/tests/02.md)\n\n\n*Run the echo command in a shell and convert the output to an image*\n\nMarkdown:\n\n``````\n```{.run cmd=\"echo\" in=\"shell\" out=\"image\"}\n'This is the output but converted to an image.'\n```\n``````\n\nPandoc:\n\n```bash\npandoc -i 02.md --filter pandoc-run-filter -o 02.epub\n```\n\nOutput:\n\n![./images/02.png)](https://github.com/johnlwhiteman/pandoc-run-filter/raw/master/images/02.png)\n\n[02.epub](https://github.com/johnlwhiteman/pandoc-run-filter/blob/master/epubs/02.epub)\n\n\n### [03.md](https://github.com/johnlwhiteman/pandoc-run-filter/blob/master/tests/03.md)\n\n*Run an embedded python script and capture the output as text*\n\nMarkdown:\n\n``````\n```{.run cmd=\"python\" in=\"script\" out=\"text\"}\nimport pyfiglet\nr = pyfiglet.figlet_format('Hi There!', font = 'banner')\nprint(f'''The is an embedded python script that generates ascii art.\\n''')\nprint(r)\n```\n``````\n\nPandoc:\n\n```bash\npandoc -i 03.md --filter pandoc-run-filter -o 03.epub\n```\n\nOutput:\n\n```bash\nThe is an embedded python script that generates ascii art.\n\n#     #      #######                             ###\n#     # #       #    #    # ###### #####  ###### ###\n#     # #       #    #    # #      #    # #      ###\n####### #       #    ###### #####  #    # #####   #\n#     # #       #    #    # #      #####  #\n#     # #       #    #    # #      #   #  #      ###\n#     # #       #    #    # ###### #    # ###### ###\n\n```\n\n[03.epub](https://github.com/johnlwhiteman/pandoc-run-filter/blob/master/epubs/03.epub)\n\n### [04.md](https://github.com/johnlwhiteman/pandoc-run-filter/blob/master/tests/04.md)\n\n*Run embedded python script and capture the output as a path to an image it created*\n\nMarkdown:\n\n``````\n```{.run cmd=\"python\" in=\"script\" out=\"image\" img=\"04.png\"}\nfrom PIL import Image, ImageDraw, ImageFont\nT = 'Hi There!'\nW = 400\nH = 400\nshape = [(50, 50), (W - 10, H - 10)]\nfnt = ImageFont.truetype('arial.ttf', 18)\nimage = Image.new(mode = 'RGB', size = (W, H), color='white')\ndraw = ImageDraw.Draw(image)\nw, h = draw.textsize(T, fnt)\ndraw.rectangle(shape, fill ='#AAAAAA', outline ='#000000')\ndraw.text(((W-w)/2,(H-h)/2), T, font=fnt, fill='black')\nimage.save('04.png')\n```\n``````\n\nPandoc:\n\n```bash\npandoc -i 04.md --filter pandoc-run-filter -o 04.epub\n```\n\nOutput:\n\n![./images/04.png](https://github.com/johnlwhiteman/pandoc-run-filter/raw/master/images/04.png)\n\n\n[04.epub](https://github.com/johnlwhiteman/pandoc-run-filter/blob/master/epubs/04.epub)\n\n\n## Troubleshooting Tips\n\nErrors being generated from embedded scripts:\n\n* If you are seeing errors for embedded scripts, make sure that your script works as a standalone before inserting into the markdown.\n\nRunning *pandoc-run-filter* by itself without pandoc hangs:\n\n* It's normal since it's expecting input from pandoc.\n\nRunning *pandoc-run-filter* keeps throwing exceptions:\n\n* Make sure that your markdown syntax is correct.\n* Also run the tests to see if your environment is correct (see instructions above).\n\nAnother pandoc filter is also using the *run* keyword. What to do?\n\n* Although not recommended, you can modify the variable *MARKDOWN_TAG_NAME = 'run'* in *pandoc_run_filter.py* to something different and unique.\n\nNote: *We are considering adding a new feature to support a configuration file or environment variables in the future where this can be changed without script modification.*",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/johnlwhiteman/pandoc-run-filter/archive/v0.2.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/johnlwhiteman/pandoc-run-filter",
    "keywords": "pandoc,filter",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pandoc-run-filter",
    "package_url": "https://pypi.org/project/pandoc-run-filter/",
    "platform": "",
    "project_url": "https://pypi.org/project/pandoc-run-filter/",
    "project_urls": {
      "Download": "https://github.com/johnlwhiteman/pandoc-run-filter/archive/v0.2.0.tar.gz",
      "Homepage": "https://github.com/johnlwhiteman/pandoc-run-filter"
    },
    "release_url": "https://pypi.org/project/pandoc-run-filter/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A simple filter for pandoc that runs shell commands and scripts and outputs as text and images.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7711353,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcc2f3ea24c451fea4a012a2a33f484843b6bf482d7cc17cf668802c5354cc45",
          "md5": "210f361164ae8ad72261f00183e6f225",
          "sha256": "8457371378c4eb2a44b44785c871c8f267994461a726669b6a40d49be2d1cb5a"
        },
        "downloads": -1,
        "filename": "pandoc-run-filter-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "210f361164ae8ad72261f00183e6f225",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6098,
        "upload_time": "2020-07-16T05:31:24",
        "upload_time_iso_8601": "2020-07-16T05:31:24.901839Z",
        "url": "https://files.pythonhosted.org/packages/dc/c2/f3ea24c451fea4a012a2a33f484843b6bf482d7cc17cf668802c5354cc45/pandoc-run-filter-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dcc2f3ea24c451fea4a012a2a33f484843b6bf482d7cc17cf668802c5354cc45",
        "md5": "210f361164ae8ad72261f00183e6f225",
        "sha256": "8457371378c4eb2a44b44785c871c8f267994461a726669b6a40d49be2d1cb5a"
      },
      "downloads": -1,
      "filename": "pandoc-run-filter-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "210f361164ae8ad72261f00183e6f225",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6098,
      "upload_time": "2020-07-16T05:31:24",
      "upload_time_iso_8601": "2020-07-16T05:31:24.901839Z",
      "url": "https://files.pythonhosted.org/packages/dc/c2/f3ea24c451fea4a012a2a33f484843b6bf482d7cc17cf668802c5354cc45/pandoc-run-filter-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}