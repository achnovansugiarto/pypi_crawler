{
  "info": {
    "author": "Johannes Altmanninger",
    "author_email": "aclopte@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Version Control",
      "Topic :: Software Development :: Version Control :: Git"
    ],
    "description": "# git branchstack\n\n[![PyPi](https://img.shields.io/pypi/v/git-branchstack.svg)](https://pypi.org/project/git-branchstack)\n\n## Motivation\n\nWhen I am working on multiple changes to a [Git] repository, I usually want to\ncombine all of my changes in a single branch, but send them upstream in small,\nreviewable chunks. As stated in [the related articles](#related-articles)\none advantage is that you can base new work on previous changes, and test\nthem in combination.\n\nGit already supports this workflow via [git format-patch] and [git send-email],\nhowever, many projects prefer to receive patches via pull requests.  To make\nproposed changes easy to review, you'll want to submit a separate pull request\nfor each independent change on your worktree's branch.  This means that you\nwant to create branches containing those independent changes and nothing else.\n\n`git branchstack` creates the desired branches without requiring you to switch\nback and forth between branches (and invalidating builds). This allows you\nto submit small pull requests, while enjoying the benefits of a branchless\nworkflow. After making any changes to your worktree's branch you can easily\nupdate the generated branches: just re-run `git branchstack`.\n\n## Installation\n\n### Via pip\n\n```sh\n$ pip install --user git-branchstack\n```\n\nInstead of the last command you can also run [`./git-branchstack`](./git-branchstack) directly, provided you have `git-revise>=0.7.0`.\n\n### Via [pipx](https://pypa.github.io/pipx/)\n\nUse this instead to avoid breakage when your Python installation is upgraded.\n\n```sh\n$ pipx install git-branchstack\n```\n\n## Usage\n\nCreate some commits with commit messages starting with a topic tag `[...]`.\nThe topic name, `<topic>`, inside the square bracket tag markers `[<topic>]`,\nmust be an unused valid branch name.  Then run `git branchstack` to create\nthe branch `<topic>` with the given commits.\n\nFor example, if you have created a commit history like\n\n    $ git log --graph --oneline\n    * 9629a6c (HEAD -> local-branch) [some-unrelated-fix] Unrelated fix\n    * e764f47 [my-awesome-feature] Some more work on feature\n    * a9a811f [my-awesome-feature] Initial support for feature\n    * 28fcf9c Local commit without topic tag\n    * 5fb0776 (master) Initial commit\n\nThen this command will (re)create two branches:\n\n    $ git branchstack\n    $ git log --graph --oneline --all\n    * 9629a6c (HEAD -> local-branch) [some-unrelated-fix] Unrelated fix\n    * e764f47 [my-awesome-feature] Some more work on feature\n    * a9a811f [my-awesome-feature] Initial support for feature\n    * 28fcf9c Local commit without topic tag\n    | * 7d4d166 (my-awesome-feature) Some more work on feature\n    | * fb0941f Initial support for feature\n    |/\n    | * 1a37fd0 (some-unrelated-fix) Unrelated fix\n    |/\n    * 5fb0776 (master) Initial commit\n\nBy default, `git branchstack` looks only at commits in the range\n`@{upstream}..HEAD`.  It ignores commits whose subject does not start with\na topic tag.\n\nCreated branches are based on the common ancestor of your branch and the\nupstream branch, that is, `git merge-base @{upstream} HEAD`.\n\nTo avoid conflicts, you can specify dependencies between branches.\nFor example use `[child:parent1:parent2]` to base `child` off both `parent1`\nand `parent2`. The order of parents does not matter: the one that occurs\nfirst in the commit log will be added first.\n\nPass `--keep-tags` to mark dependency commits by keeping the commits'\ntopic tags. Use `keep-tags=all` to keep all topic tags. To only keep topic\ntags of select dependencies, prefix them with the `+` character (like\n`[child:+parent]`).\n\nIf a commit cannot be applied cleanly, `git branchstack` will show topics\nthat would avoid the conflict if added as dependencies. You can either\nadd the missing dependencies, or resolve the conflict in your editor. You\ncan tell Git to remember your conflict resolution by enabling `git rerere`\n(use `git config rerere.enabled true; git config rerere.autoUpdate true`).\n\nInstead of the default topic tag delimiters (`[` and `]`), you can\nset Git configuration values `branchstack.subjectPrefixPrefix` and\n`branchstack.subjectPrefixSuffix`, respectively.\n\n## Integrating Commits from Other Branches\n\nYou can use [git-branchstack-pick](./git-branchstack-pick) to integrate\nother commit ranges into your branch:\n\n```sh\n$ git branchstack-pick ..some-branch \n```\n\nThis behaves like `git rebase -i` except it prefills the rebase-todo list to\ncherry-pick all missing commits from `some-branch`, prefixing their commit\nsubjects with `[some-branch]`.  Old commits with such a subject are dropped,\nso this allows you to quickly update to the latest upstream version of a\nref that has been force-pushed.\n\nHere's how you would use this to cherry-pick GitHub pull requests:\n\n```sh\n$ git config --add remote.origin.fetch '+refs/pull/*/head:refs/remotes/origin/pr-*'\n$ git fetch origin\n$ git branchstack-pick ..origin/pr-123\n```\n\n## Tips\n\n- You can use [git revise] to efficiently modify your commit messages\n  to contain the `[<topic>]` tags. This command lets you edit all commit\n  messages in `@{upstream}..HEAD`.\n\n  ```sh\n  $ git revise --interactive --edit\n  ```\n\n  Like `git revise`, you can use `git branchstack` during an interactive rebase.\n\n- [`git-autofixup`](https://github.com/torbiak/git-autofixup/) can eliminate\n  some of the busywork involved in creating fixup commits.\n\n## Related Articles\n\n- In [Stacked Diffs Versus Pull Requests], Jackson Gabbard\n  describes the advantages of a patch-based workflow (using [Phabricator])\n  over the one-branch-per-reviewable-change model; `git branchstack` can be used\n  to implement the first workflow, even when you have to use pull-requests.\n\n- In [My unorthodox, branchless git workflow], Drew\n  DeVault explains some advantages of a similar workflow.\n\n## Peer Projects\n\nWhile `git branchstack` only offers one command and relies on standard Git\ntools for everything else, there are some tools that offer a more comprehensive\nset of commands to achieve a similar workflow:\n\n- [Stacked Git](https://stacked-git.github.io/)\n- [git ps](https://github.com/uptech/git-ps)\n- [gh-stack](https://github.com/timothyandrew/gh-stack)\n- [git machete](https://github.com/VirtusLab/git-machete)\n- [git-stack](https://github.com/epage/git-stack)\n- [depot-tools](https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html)\n\nUnlike its peers, `git branchstack` never modifies any worktree files,\nsince it uses `git revise` internally.  This makes it faster, and avoids\ninvalidating builds.\n\n## Contributing\n\nSubmit feedback at <https://github.com/krobelus/git-branchstack/> or to the\n[public mailing list](https://lists.sr.ht/~krobelus/git-branchless) by\nsending email to <mailto:~krobelus/git-branchless@lists.sr.ht>.\n\n[Git]: <https://git-scm.com/>\n[git revise]: <https://github.com/mystor/git-revise/>\n[git format-patch]: <https://git-scm.com/docs/git-format-patch>\n[git send-email]: <https://git-send-email.io/>\n[Stacked Diffs Versus Pull Requests]: <https://jg.gg/2018/09/29/stacked-diffs-versus-pull-requests/>\n[My unorthodox, branchless git workflow]: <https://drewdevault.com/2020/04/06/My-weird-branchless-git-workflow.html>\n[Phabricator]: <https://www.phacility.com/>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/krobelus/git-branchstack/",
    "keywords": "git branch-workflow pull-request patch-stack",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "git-branchstack",
    "package_url": "https://pypi.org/project/git-branchstack/",
    "platform": "",
    "project_url": "https://pypi.org/project/git-branchstack/",
    "project_urls": {
      "Bug Tracker": "https://github.com/krobelus/git-branchstack/issues/",
      "Documentation": "https://git.sr.ht/~krobelus/git-branchstack/",
      "Homepage": "https://github.com/krobelus/git-branchstack/",
      "Source Code": "https://github.com/krobelus/git-branchstack/"
    },
    "release_url": "https://pypi.org/project/git-branchstack/0.2.0/",
    "requires_dist": [
      "git-revise (==0.7.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Efficiently manage Git branches without leaving your local branch",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12521769,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44593b351bf77889fb476f475a6a23e164ab0daa608524c6777e627c879ea11b",
          "md5": "a7787133e80e9da234332347afdde6dc",
          "sha256": "70251018126f7e47469cd650804d228fa7ab6e83e14239c5c15dce1ae9915126"
        },
        "downloads": -1,
        "filename": "git_branchstack-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7787133e80e9da234332347afdde6dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11561,
        "upload_time": "2021-08-29T20:41:56",
        "upload_time_iso_8601": "2021-08-29T20:41:56.913118Z",
        "url": "https://files.pythonhosted.org/packages/44/59/3b351bf77889fb476f475a6a23e164ab0daa608524c6777e627c879ea11b/git_branchstack-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f616aab104cd6ee1cc16cbf5d19311ce9a32944e1caf38af9dc145666b34f645",
          "md5": "4deebfae8c7950b0fa49642d233f8acd",
          "sha256": "63d3fcb938b3f95c85adbc1d62e27bac5ac1233f8db0e98a06136e77ccacf02e"
        },
        "downloads": -1,
        "filename": "git-branchstack-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4deebfae8c7950b0fa49642d233f8acd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11135,
        "upload_time": "2021-08-29T20:41:58",
        "upload_time_iso_8601": "2021-08-29T20:41:58.956262Z",
        "url": "https://files.pythonhosted.org/packages/f6/16/aab104cd6ee1cc16cbf5d19311ce9a32944e1caf38af9dc145666b34f645/git-branchstack-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1219c1ce0fbeae2245c862028999d0cd6adba6aa4fbc34f06687d5eacfbe63bc",
          "md5": "21a0f4f3c4b66528d772a0f3d9b2d501",
          "sha256": "9d09cea8462aaf184e254de3e1b3578132a7c362ae2fe6ab48badb9f64124366"
        },
        "downloads": -1,
        "filename": "git_branchstack-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "21a0f4f3c4b66528d772a0f3d9b2d501",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11903,
        "upload_time": "2022-01-09T20:29:22",
        "upload_time_iso_8601": "2022-01-09T20:29:22.747672Z",
        "url": "https://files.pythonhosted.org/packages/12/19/c1ce0fbeae2245c862028999d0cd6adba6aa4fbc34f06687d5eacfbe63bc/git_branchstack-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67af366f0b72c29432bc3175f78730384fa88091b3f75ee34b6dce6132ff1eac",
          "md5": "e32b290d043c690c00d46d542950ea11",
          "sha256": "8236bddcb39c54243a97e0b282fb26fb7ba89afc6dbd497ab76dc621bfed2b24"
        },
        "downloads": -1,
        "filename": "git-branchstack-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e32b290d043c690c00d46d542950ea11",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11447,
        "upload_time": "2022-01-09T20:29:24",
        "upload_time_iso_8601": "2022-01-09T20:29:24.455540Z",
        "url": "https://files.pythonhosted.org/packages/67/af/366f0b72c29432bc3175f78730384fa88091b3f75ee34b6dce6132ff1eac/git-branchstack-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1219c1ce0fbeae2245c862028999d0cd6adba6aa4fbc34f06687d5eacfbe63bc",
        "md5": "21a0f4f3c4b66528d772a0f3d9b2d501",
        "sha256": "9d09cea8462aaf184e254de3e1b3578132a7c362ae2fe6ab48badb9f64124366"
      },
      "downloads": -1,
      "filename": "git_branchstack-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "21a0f4f3c4b66528d772a0f3d9b2d501",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11903,
      "upload_time": "2022-01-09T20:29:22",
      "upload_time_iso_8601": "2022-01-09T20:29:22.747672Z",
      "url": "https://files.pythonhosted.org/packages/12/19/c1ce0fbeae2245c862028999d0cd6adba6aa4fbc34f06687d5eacfbe63bc/git_branchstack-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "67af366f0b72c29432bc3175f78730384fa88091b3f75ee34b6dce6132ff1eac",
        "md5": "e32b290d043c690c00d46d542950ea11",
        "sha256": "8236bddcb39c54243a97e0b282fb26fb7ba89afc6dbd497ab76dc621bfed2b24"
      },
      "downloads": -1,
      "filename": "git-branchstack-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e32b290d043c690c00d46d542950ea11",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11447,
      "upload_time": "2022-01-09T20:29:24",
      "upload_time_iso_8601": "2022-01-09T20:29:24.455540Z",
      "url": "https://files.pythonhosted.org/packages/67/af/366f0b72c29432bc3175f78730384fa88091b3f75ee34b6dce6132ff1eac/git-branchstack-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}