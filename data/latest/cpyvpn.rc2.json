{
  "info": {
    "author": "Nikolay A. Krylov",
    "author_email": "krylovna@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: System :: Networking"
    ],
    "description": "cpyvpn\n======\n\ncpyvpn is pure python implementation of the Checkpoint VPN client.\n\n# Features\n* SSL Network eXtender based.\n* 'Legacy' and new login mode with realm select and Multi Factor authorization.\n* Certificate-based login, certificate enrollment and renewal.\n* Mobile Access Portal authorization and Native Applications support.\n* Intermediary CAs certificates fetch when gateway certificate does not contain full trust chain.\n* Privileged and root-less VNA (Virtual Network Adapter) modes of operation.\n\n# Description of the executables\n\ncpyvpn contains three scripts: cp_client, cp_server and cpga.pyz.\n\n* **cp_client** is similar to the snx utility from CheckPoint: it establishes\nVPN between client host and private network behind gateway.\n\n* **cpga.pyz** performs Mobile Access Portal (MAP) authorization to get session cookie,\nused during MAP SNX tunnel setup.\n\n**Note 1**: Separate cpga.pyz is not currently available. Refer to the cpga.pyz build instructions to make one if needed.\ncpga script is still installed alongside cp_client.\n\n**Note 2**: Test server script and data files are no longer included in the release wheel. Download the source distribution to run the test server.\n\nAll scripts support a number of different options. Invoke them with -h\nflag to see full help.\n\nCached CA certs is stored in the cache.pem, located in:\n* ~/.cache/cpyvpn - on Unux and the likes\n* ~/Library/Caches/cpyvpn - on Mac OS X\n* C:\\Users\\<username>\\AppData\\Local\\cpyvpn\\cpyvpn\\Cache\n\n# Installation\nDependencies for the current version of the scripts is Python 3.7+ and:\n- TUN/TAP device driver for NM or vpnc-script (see below) modes\n- UTUN device driver on macOS (available starting from 10.6.8 version) with vpnc-script\n- NetworkManager (NM) for cp_server and cp_client in default mode (without -s or -S)\n\nMain package wheel is self-contained and all scripts can be run from\nthe directory containing the wheel like this:\n\n``env PYTHONPATH=cpyvpn-<version>-py3-none-any.whl python -m cpyvpn.client std.server.org``\n\n``env PYTHONPATH=cpyvpn-<version>-py3-none-any.whl python -m cpyvpn.ma ma.server.org``\n\nOr from the source folder:\n\n``python -m cpyvpn.client std.server.org``\n\n``python -m cpyvpn.srv.server localhost:4433``\n\nA regular ``pip install`` is supported as well. In latter case script names\nare **cp_client** and **cpga**.\n\ncpga.pyz - a self-contained version of cpyvpn.ma -  does not require\ninstallation also and intended to be used as a standalone program: ``cpga.pyz ma.server.org`` or\nbe invoked from e.g. [openconnect](https://gitlab.com/openconnect/openconnect.git):\n\n\n# VNA modes\n## Network Manager (linux)\nBy default cp_client and cp_server rely on the NM to do tun device configuration\nand to run without root privileges. Please note, that the user running cp_client/cp_server must be in plugdev group\nand be logged in locally (not ssh!) for the NM to allow required network setup.\n\n## vpnc script (linux/macOS)\nDownload current version from [here](https://gitlab.com/openconnect/vpnc-scripts.git), use with `-s` command line switch. Requires superuser privileges to initialize and configure VNA device.\n\n## vpn proxy (linux/macOS)\ncp_client can use [ocproxy](https://github.com/cernekee/ocproxy) or [tunsocks](https://github.com/russdill/tunsocks), originally written for the openconnect. Such configuration works entirely in the user mode.\n\n## vpnns (linux)\nPart of ocproxy package to use with 'hard-to-proxy' protocols and applications. Refer to the ocproxy documentation for more info. Works in the user mode just like aforementioned proxy programs.\n\n# More usage examples\n\n* Standard (TRAC) login with user name and password using default VNA:\n\n    `cp_client -m l -u testuser vpn.example.org`\n\n* TRAC login with realm and predefined user name:\n\n    `cp_client --realm vpn -u testuser vpn.example.org`\n\n* TRAC login with predefined user name and password from external program:\n\n    `cp_client -u user --passwd-script 'kwallet-query kdewallet' vpn.example.org`\n\n* TRAC login with certificate as a first factor:\n\n    `cp_client -c cert.pem vpn.example.org`\n\n* MAP login:\n\n    `cp_client https://vpn.example.org/sslpvn/`\n\n* MAP login with certificate:\n\n    `cp_client  -c cert.pem https://vpn.example.org/sslpvn/`\n\n* MAP login with cookies from browser:\n\n    `echo 'CPCVPN_SESSION_ID=...; CPCVPN_BASE_HOST=...'| cp_client --cookies-on-stdin ... https://vpn.example.org/sslpvn/Portal/Main`\n\n    Session cookie can be extracted using browser extension [Export Cookies](https://addons.mozilla.org/ru/firefox/addon/export-cookies-txt/), [cookie-editor](https://cookie-editor.cgagnier.ca/), [Get cookies.txt](https://chrome.google.com/webstore/detail/get-cookiestxt/bgaddhkoddajcdgocldbbfleckgcbcid), etc. Builtin browser development tools can to of use here also.\n\n* MAP logout from browser session:\n\n    `echo 'CPCVPN_SESSION_ID=...; CPCVPN_BASE_HOST=...'| cpga --so --cookies-on-stdin https://vpn.example.org/sslpvn/Portal/Main`\n\n* User mode proxy with ssh and rdp forwarding:\n\n    `cp_client -S 'ocproxy -L 2222:<host_ip1>:22 -L 3389:<host_ip2>:3389' vpn.example.org`\n\n    After successful login you may run commands like: `ssh -p2222 localhost` or `xfreerdp /v:localhost`\n\n* vpnc-based VNA configuration(with sudo or root shell):\n\n    `sudo cp_client -s '<vpnc_script_filename>' -u testuser vpn.example.org`\n\n* Certificate enrollment:\n\n    `cp_client --enroll -c ./cert.p12 vpn.example.org`\n\n    After successfull certificate fetch cp_client will try to convert from p12 to pem using openssl. If conversion fails for some reason user should do it manually.\n\n* Certificate renewal:\n\n    `cp_client --rc new_cert.p12 -c ./cert.p12 vpn.example.org`\n\n    Conversion notes applies here likewise.\n\n# Performance\nPython incurs extra overhead and the maximum bitrate will be 2-3 times lower than the bitrate achievable with the native client or openconnect. However it will only be noticable when the link speed is >100MB/s.\n\n# Known Issues\n* Early R81 gateway versions were 'enhanced' in a way affecting user experience. One of the enhancements (or a bug) prevents multiple tunnel initializations from the same Web Portal session. Any client doing second connection attempt just hangs.\nIn this case either logout manually after each cp_client run, use cpga logout or add --force_logout to perform automatic signout after tunnel shutdown to workaround this issue.\n\n* Internal DNS will need additional setup with the vpnc script. Interface priority/ordering must be adjusted manually. E.g. 'interface_order=\"snx* lo* en*\"' in resolvconf.conf file for resolvconf tool.\n\n# Source installation\nDownload sources using git or as an archive (and unzip if necessary).\n\nRun a command in the source directory:\n\n`python -m pip install [-e] .` (Preferred way)\n\nor\n\n`python setup.py install|develop`\n\nAdd --user flag if needed.\n\n# Build cpga.pyz from source\nRun in the top source folder:\n`python setup.py build_cpga`\n\nThe path to the generated file will be: `dist/cpga.pyz`\n\n# License\nCopyright &copy; 2020-2022 Nikolay A. Krylov\nAll rights reserved.\n\nThe cpyvpn is a free software package, distributed under GPLv3 license. See the file LICENSE for more details.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/cpvpn/cpyvpn",
    "keywords": "CheckPoint vpn snx",
    "license": "GPL3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cpyvpn",
    "package_url": "https://pypi.org/project/cpyvpn/",
    "platform": null,
    "project_url": "https://pypi.org/project/cpyvpn/",
    "project_urls": {
      "Homepage": "https://gitlab.com/cpvpn/cpyvpn",
      "PyPI": "https://pypi.org/project/cpyvpn",
      "Source": "https://gitlab.com/cpvpn/cpyvpn",
      "Tracker": "https://gitlab.com/cpvpn/cpyvpn/issues"
    },
    "release_url": "https://pypi.org/project/cpyvpn/1.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Check Point VPN client written in Python.",
    "version": "1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17429696,
  "releases": {
    "1.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7961754c3a3126f4607ef64f7e48c0529bf204c2bbb9de3db57f6577acea91d",
          "md5": "4fcff92e6bf67441b0750cb89e02d44c",
          "sha256": "5ca325c488bbf84ea7bbba2edd76cb8d59e3b08d9583d5185f0f570823c5aaa3"
        },
        "downloads": -1,
        "filename": "cpyvpn-1.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4fcff92e6bf67441b0750cb89e02d44c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 81037,
        "upload_time": "2022-11-21T12:51:51",
        "upload_time_iso_8601": "2022-11-21T12:51:51.686723Z",
        "url": "https://files.pythonhosted.org/packages/d7/96/1754c3a3126f4607ef64f7e48c0529bf204c2bbb9de3db57f6577acea91d/cpyvpn-1.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f80e09d02c576a87aefd38aaa62155dd12018b87c311f7b11f480c91fea4404b",
          "md5": "756262613678d466b43a9e5affe6abc6",
          "sha256": "7b19bda43c8d1a69f024c72af95b8a6cfc000640d11df2b5b9f309d4d05fec5a"
        },
        "downloads": -1,
        "filename": "cpyvpn-1.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "756262613678d466b43a9e5affe6abc6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 70979,
        "upload_time": "2022-11-21T12:51:54",
        "upload_time_iso_8601": "2022-11-21T12:51:54.657564Z",
        "url": "https://files.pythonhosted.org/packages/f8/0e/09d02c576a87aefd38aaa62155dd12018b87c311f7b11f480c91fea4404b/cpyvpn-1.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f393503c5c0fb3f3c35b959dec55dbb075a1a5941deb5d12ed7ed49e24bdc73",
          "md5": "324bd8b046f26c103eb6b3753e9baf56",
          "sha256": "eed6a97730b58f39c50667f6948dedbb57f147185c52c3314f1859d634fc7ccc"
        },
        "downloads": -1,
        "filename": "cpyvpn-1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "324bd8b046f26c103eb6b3753e9baf56",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 58155,
        "upload_time": "2023-03-24T10:31:51",
        "upload_time_iso_8601": "2023-03-24T10:31:51.912290Z",
        "url": "https://files.pythonhosted.org/packages/1f/39/3503c5c0fb3f3c35b959dec55dbb075a1a5941deb5d12ed7ed49e24bdc73/cpyvpn-1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fba574ea601ccf766fd12d6914f352f2d50fe1563b32bb5920bed9ad51f89148",
          "md5": "681bd96265ca9a928382d2d6342f12e4",
          "sha256": "952f8af31604f160ecbfe2049aa69b0b0849b1e1a5d949288c323eb246907732"
        },
        "downloads": -1,
        "filename": "cpyvpn-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "681bd96265ca9a928382d2d6342f12e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 70806,
        "upload_time": "2023-03-24T10:31:53",
        "upload_time_iso_8601": "2023-03-24T10:31:53.680111Z",
        "url": "https://files.pythonhosted.org/packages/fb/a5/74ea601ccf766fd12d6914f352f2d50fe1563b32bb5920bed9ad51f89148/cpyvpn-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f393503c5c0fb3f3c35b959dec55dbb075a1a5941deb5d12ed7ed49e24bdc73",
        "md5": "324bd8b046f26c103eb6b3753e9baf56",
        "sha256": "eed6a97730b58f39c50667f6948dedbb57f147185c52c3314f1859d634fc7ccc"
      },
      "downloads": -1,
      "filename": "cpyvpn-1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "324bd8b046f26c103eb6b3753e9baf56",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 58155,
      "upload_time": "2023-03-24T10:31:51",
      "upload_time_iso_8601": "2023-03-24T10:31:51.912290Z",
      "url": "https://files.pythonhosted.org/packages/1f/39/3503c5c0fb3f3c35b959dec55dbb075a1a5941deb5d12ed7ed49e24bdc73/cpyvpn-1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fba574ea601ccf766fd12d6914f352f2d50fe1563b32bb5920bed9ad51f89148",
        "md5": "681bd96265ca9a928382d2d6342f12e4",
        "sha256": "952f8af31604f160ecbfe2049aa69b0b0849b1e1a5d949288c323eb246907732"
      },
      "downloads": -1,
      "filename": "cpyvpn-1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "681bd96265ca9a928382d2d6342f12e4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 70806,
      "upload_time": "2023-03-24T10:31:53",
      "upload_time_iso_8601": "2023-03-24T10:31:53.680111Z",
      "url": "https://files.pythonhosted.org/packages/fb/a5/74ea601ccf766fd12d6914f352f2d50fe1563b32bb5920bed9ad51f89148/cpyvpn-1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}