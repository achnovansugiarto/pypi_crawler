{
  "info": {
    "author": "Scientiamobile Inc.",
    "author_email": "support@scientiamobile.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "wmclient - WURFL Microservice Client for Python\n===============================================\n\nPython WURFL Microservice Client\n--------------------------------\n\nWURFL Microservice (by ScientiaMobile, Inc.) is a mobile device\ndetection service that can quickly and accurately detect over 500\ncapabilities of visiting devices. It can differentiate between portable\nmobile devices, desktop devices, SmartTVs and any other types of devices\nthat have a web browser.\n\nThis is the Python Client API for accessing the WURFL Microservice. The\nAPI is released under Open-Source and can be integrated with other\nopen-source or proprietary code. In order to operate, it requires access\nto a running instance of the WURFL Microservice product, such as:\n\n-  WURFL Microservice for Docker:\n   https://www.scientiamobile.com/products/wurfl-microservice-docker-detect-device/\n\n-  WURFL Microservice for AWS:\n   https://www.scientiamobile.com/products/wurfl-device-detection-microservice-aws/\n\n-  WURFL Microservice for Azure:\n   https://www.scientiamobile.com/products/wurfl-device-detection-microservice-azure/\n\n| Python implementation of the WM Client api.\n| Requires:\n\n-  Python 2.7 or 3.x\n-  pip\n-  pycurl module (you can install it with ``pip install pycurl``)\n\nThe Example project contains an example of client api usage for a script\n:\n\n.. code:: python\n\n    from wmclient import WmClient, WmClientError\n\n    try:\n        client = WmClient.create(\"http\", \"localhost\", 8080, \"\")\n\n        info = client.get_info()\n        print(\"Printing WM server information\")\n        print(\"WURFL API version: \" + info.wurfl_api_version)\n        print(\"WM server version:  \" + info.wm_version)\n        print(\"Wurfl file info: \" + info.wurfl_info)\n\n        ua = \"Mozilla/5.0 (Linux; Android 7.1.1; ONEPLUS A5000 Build/NMF26X) AppleWebKit/537.36 (KHTML, like Gecko) \" \\\n             \"Chrome/56.0.2924.87 Mobile Safari/537.36 \"\n\n        client.set_requested_static_capabilities([\"brand_name\", \"model_name\"])\n        client.set_requested_virtual_capabilities([\"is_smartphone\", \"form_factor\"])\n        print()\n        print(\"Detecting device for user-agent: \" + ua);\n\n        # Perform a device detection calling WM server API\n        device = client.lookup_useragent(ua)\n\n        if device.error is not None and len(device.error) > 0:\n            print(\"An error occurred: \" + device.error)\n        else:\n            # Let's get the device capabilities and print some of them\n            capabilities = device.capabilities\n            print(\"Detected device WURFL ID: \" + capabilities[\"wurfl_id\"])\n            print(\"Device brand & model: \" + capabilities[\"brand_name\"] + \" \" + capabilities[\"model_name\"])\n            print(\"Detected device form factor: \" + capabilities[\"form_factor\"])\n            if capabilities[\"is_smartphone\"] == \"true\":\n                print(\"This is a smartphone\")\n                # Iterate over all the device capabilities and print them\n                print(\"All received capabilities\");\n                for k in capabilities:\n                    print(k + \": \" + capabilities[k])\n\n                # Get all the device manufacturers, and print the first twenty\n                print()\n                limit = 20\n                deviceMakes = client.get_all_device_makes()\n                print(\"Print the first {} Brand of {} retrieved from server\\n\".format(limit, len(deviceMakes)))\n\n                # Sort the device manufacturer names\n                list.sort(deviceMakes)\n                for i in range(limit):\n                    print(\" - {}\\n\".format(deviceMakes[i]))\n\n                # Now call the WM server to get all device model and marketing names produced by Apple\n                print(\"Print all Model for the Apple Brand\")\n                devNames = client.get_all_devices_for_make(\"Apple\")\n\n                for model_mkt_name in devNames:\n                    print(\" - {} {}\\n\".format(model_mkt_name.brand_name, model_mkt_name.model_name))\n\n                # Now call the WM server to get all operative system names\n                print(\"Print the list of OSes\")\n                oses = client.get_all_OSes()\n                # Sort and print all OS names\n                list.sort(oses)\n                for os in oses:\n                    print(\" - {}\\n\".format(os))\n\n                # Let's call the WM server to get all version of the Android OS\n                print(\"Print all versions for the Android OS\")\n                osVersions = client.get_all_versions_for_OS(\"Android\")\n                # Sort all Android version numbers and print them.\n                list.sort(osVersions)\n                for ver in osVersions:\n                    print(\" - {}\\n\".format(ver))\n\n    except WmClientError as wme:\n        # problems such as network errors  or internal server problems\n        print(\"An error has occurred: \" + wme.message)\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/WURFL/wurfl-microservice-client-python",
    "keywords": "device,mobile,device detection,analytics",
    "license": "apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wmclient",
    "package_url": "https://pypi.org/project/wmclient/",
    "platform": "",
    "project_url": "https://pypi.org/project/wmclient/",
    "project_urls": {
      "Homepage": "https://github.com/WURFL/wurfl-microservice-client-python"
    },
    "release_url": "https://pypi.org/project/wmclient/2.2.0/",
    "requires_dist": [
      "pycurl"
    ],
    "requires_python": "",
    "summary": "WURFL Microservice client for Python",
    "version": "2.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8511807,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d49d3d95af4d296ebd77e3c911e1281234700bf5f86579ca2a11e1e7ad75f935",
          "md5": "5cd731948bab023734e5d04f36f4bc54",
          "sha256": "bb8aff2c3d82578ab336ff258ba54393b9904d4256febd2539eb7e0d2d240528"
        },
        "downloads": -1,
        "filename": "wmclient-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cd731948bab023734e5d04f36f4bc54",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16605,
        "upload_time": "2020-06-11T15:50:23",
        "upload_time_iso_8601": "2020-06-11T15:50:23.366076Z",
        "url": "https://files.pythonhosted.org/packages/d4/9d/3d95af4d296ebd77e3c911e1281234700bf5f86579ca2a11e1e7ad75f935/wmclient-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc257a8a4be88dac9c34f485f7bae67029c7cfb4fde3a9014aae1ebc4bc2cff9",
          "md5": "a0fca980123386fd8299d78916ac17d1",
          "sha256": "67635f3ed434affd6c435e7059e00133296a8c7df6a28fdc2d0a33d8a93d0319"
        },
        "downloads": -1,
        "filename": "wmclient-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a0fca980123386fd8299d78916ac17d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7235,
        "upload_time": "2020-06-11T15:50:25",
        "upload_time_iso_8601": "2020-06-11T15:50:25.606049Z",
        "url": "https://files.pythonhosted.org/packages/cc/25/7a8a4be88dac9c34f485f7bae67029c7cfb4fde3a9014aae1ebc4bc2cff9/wmclient-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "340aa9500a8eba32e58e403c4174662af20878d03e671828e12ae29550d43a4b",
          "md5": "46de83f609479d2850ab850f08bac769",
          "sha256": "364ebe7ba7196f8ea1ded706797f8589e453cdb61769879d3a088f542b992381"
        },
        "downloads": -1,
        "filename": "wmclient-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46de83f609479d2850ab850f08bac769",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17039,
        "upload_time": "2020-09-14T09:48:33",
        "upload_time_iso_8601": "2020-09-14T09:48:33.181848Z",
        "url": "https://files.pythonhosted.org/packages/34/0a/a9500a8eba32e58e403c4174662af20878d03e671828e12ae29550d43a4b/wmclient-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78c1994de3ef5b0157fd355f03a16851e253dcd7924d04afb0c83f8b906c2b7c",
          "md5": "d324b9e83d5a86f76a080b474f884be2",
          "sha256": "6c3075c3ba11e217144a48cf1265f2b5e32e002abc6dd225ba22589028957e57"
        },
        "downloads": -1,
        "filename": "wmclient-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d324b9e83d5a86f76a080b474f884be2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7382,
        "upload_time": "2020-09-14T09:48:34",
        "upload_time_iso_8601": "2020-09-14T09:48:34.555311Z",
        "url": "https://files.pythonhosted.org/packages/78/c1/994de3ef5b0157fd355f03a16851e253dcd7924d04afb0c83f8b906c2b7c/wmclient-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b30bf488916a8c1ba96f89740e55e308d61f382e821e68c5c888b36f328c85c3",
          "md5": "967b90e335e9ea72d934bdbc43b0a220",
          "sha256": "ff436f5dc4d3400c1406db3d411ea755eabd1a257493ffc999c0d07ec09c2c4e"
        },
        "downloads": -1,
        "filename": "wmclient-2.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "967b90e335e9ea72d934bdbc43b0a220",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17728,
        "upload_time": "2020-10-27T11:31:50",
        "upload_time_iso_8601": "2020-10-27T11:31:50.422779Z",
        "url": "https://files.pythonhosted.org/packages/b3/0b/f488916a8c1ba96f89740e55e308d61f382e821e68c5c888b36f328c85c3/wmclient-2.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68bc24aa8f6b4653ac820a10430a063b012a2854855ad0ba5d55f8d623dbfeb1",
          "md5": "610b6bd4603f67009daedc5b9c1694ac",
          "sha256": "23a24ea9e3ada6ee61888f9fba1eb706b6762a37dcfbe64d9dd2e1b149a30d24"
        },
        "downloads": -1,
        "filename": "wmclient-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "610b6bd4603f67009daedc5b9c1694ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7804,
        "upload_time": "2020-10-27T11:31:52",
        "upload_time_iso_8601": "2020-10-27T11:31:52.747751Z",
        "url": "https://files.pythonhosted.org/packages/68/bc/24aa8f6b4653ac820a10430a063b012a2854855ad0ba5d55f8d623dbfeb1/wmclient-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b30bf488916a8c1ba96f89740e55e308d61f382e821e68c5c888b36f328c85c3",
        "md5": "967b90e335e9ea72d934bdbc43b0a220",
        "sha256": "ff436f5dc4d3400c1406db3d411ea755eabd1a257493ffc999c0d07ec09c2c4e"
      },
      "downloads": -1,
      "filename": "wmclient-2.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "967b90e335e9ea72d934bdbc43b0a220",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17728,
      "upload_time": "2020-10-27T11:31:50",
      "upload_time_iso_8601": "2020-10-27T11:31:50.422779Z",
      "url": "https://files.pythonhosted.org/packages/b3/0b/f488916a8c1ba96f89740e55e308d61f382e821e68c5c888b36f328c85c3/wmclient-2.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "68bc24aa8f6b4653ac820a10430a063b012a2854855ad0ba5d55f8d623dbfeb1",
        "md5": "610b6bd4603f67009daedc5b9c1694ac",
        "sha256": "23a24ea9e3ada6ee61888f9fba1eb706b6762a37dcfbe64d9dd2e1b149a30d24"
      },
      "downloads": -1,
      "filename": "wmclient-2.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "610b6bd4603f67009daedc5b9c1694ac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7804,
      "upload_time": "2020-10-27T11:31:52",
      "upload_time_iso_8601": "2020-10-27T11:31:52.747751Z",
      "url": "https://files.pythonhosted.org/packages/68/bc/24aa8f6b4653ac820a10430a063b012a2854855ad0ba5d55f8d623dbfeb1/wmclient-2.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}