{
  "info": {
    "author": "Theron Luhn",
    "author_email": "theron@luhn.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Pyramid",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# pyramid-resource\n\nPyramid's URL traversal is a powerful tool and personally one of my favorite features of the framework.\nUnfortunately, Pyramid doesn't provide any framework or utilities for implementing resource trees.\nThis project aims to reduce the boilerplate necessary for creating feature-full resource trees.\n\n## Prerequisites\n\nTo use this package, you'll first need to be familiar with Pyramid's [URL traversal](https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/traversal.html).\n\nOnce you're ready to get started, install pyramid-resource:  `pip install pyramid-resource`\n\n## Basic Usage\n\nYou can create a new resource by subclassing `pyramid_resource.Resource`.\nFor example, here's a simple application that has a resource tree with only a root resource.\n\n```python\nfrom wsgiref.simple_server import make_server\nfrom pyramid.config import Configurator\nfrom pyramid.response import Response\nfrom pyramid_resource import Resource\n\n\nclass Root(Resource):\n    pass\n\n\ndef hello_world(request):\n    return Response('Hello!\\n')\n\n\nif __name__ == '__main__':\n    with Configurator() as config:\n        config.set_root_factory(Root)\n        config.add_view(hello_world, context=Root)\n        app = config.make_wsgi_app()\n    server = make_server('0.0.0.0', 8080, app)\n    server.serve_forever()\n```\n\nYou can define child resources by setting the `__children__` property to a dictionary.\nThe key corresponds the URL segment and the value should be a resource subclass.\npyramid-resource will automatically make the resources location-aware.\n\n```python\nclass Child(Resource):\n    pass\n\n\nclass Root(Resource):\n    __children__ = {\n        'child': Child,\n    }\n```\n\nYou can see the full example [here](https://github.com/luhn/pyramid-resource/blob/master/examples/child_resources.py).\n\n### Name Resolution\n\nFor convenience, you can reference children as [dotted name](https://docs.pylonsproject.org/projects/pyramid/en/2.0-branch/glossary.html#term-dotted-Python-name) strings.\nThis is useful for putting parent resources above child resources in your code, e.g.:\n\n```python\nclass Root(Resource):\n    __children__ = {\n        'child': '.Child',\n    }\n\n\nclass Child(Resource):\n    pass\n```\n\nFor this to properly function, you will need to run [Configurator.scan](https://docs.pylonsproject.org/projects/pyramid/en/2.0-branch/api/config.html#pyramid.config.Configurator.scan) on the module.\nIf you prefer not to use `scan`, you can also invoke the resolution manually using `Resource.resolve_children`:\n\n```python\ndef includeme(config):\n    Root.resolve_children(config)\n```\n\nThis functionality resolves strings using [Configurator.maybe_dotted](https://docs.pylonsproject.org/projects/pyramid/en/2.0-branch/api/config.html#pyramid.config.Configurator.maybe_dotted) and will behave the same.\nThis means that names *are relative to the configurator,* not necessarily the package that contains the resource.\n\n## Dynamic resource trees\n\nOne of the more interesting features of URL traversal is that trees can be created on the fly.\nThis allows for dynamic resource trees that can mirror the application state, such as objects in a database.\n\nDynamic resource trees can be created by implementing a `get_child` method on a resource class.\nThis method should accept a single argument of a URL segment and will be called if no child is found in the `__children__` property.\nIf the URL segment corresponds to a valid child resource, `get_child` should return a resource class and the child resource will be instanciated from that.\nIf no corresponding child is found, `None` should be returned or `KeyError` raised, and traversal will be halted.\n\n```python\nclass Root(Resource):\n    def get_child(self, key):\n        if exists_in_db(key):\n            return Child\n        else:\n            return None\n\n\nclass Child(Resource):\n    pass\n```\n\nOf course, this isn't particularly useful if you can't attach information to the child resource.\nYou can instantiate a resource with additional data as kwargs and return it from `get_child`:\n\n```python\nclass Root(Resource):\n    def get_child(self, key):\n        if exists_in_db(key):\n            return Child(id=key)\n\n\nclass Child(Resource):\n    pass\n```\n\nThe object ID will now be accessible via `context.id` in views on the child resource.\n**Resources will proxy the attributes of their parent**, so `context.id` will also be accessible in views further down the tree.\n\nIf you need to access the current request in your `get_child` implementations, it's available via `self.request`.\n\n## An Example\n\nHere's an example that demonstrates how a real application might utilize pyramid-resource.\n\n```python\nfrom wsgiref.simple_server import make_server\n\nfrom pyramid.config import Configurator\nfrom pyramid.decorator import reify\nfrom pyramid.view import view_config\n\nfrom pyramid_resource import Resource\n\n\nclass Root(Resource):\n    __children__ = {\n        \"widget\": \".dynamic.WidgetContainer\",\n    }\n\n\nclass WidgetContainer(Resource):\n    \"\"\"\n    A resource containing the Widget resources.\n\n    \"\"\"\n\n    def get_child(self, key):\n        \"\"\"\n        Return a child resource if the widget exists in the database.\n\n        \"\"\"\n        try:\n            id = int(key)\n        except ValueError:\n            raise KeyError\n\n        if self.request.widget_db.exists(id):\n            return Widget(widget_id=id)\n\n\nclass Widget(Resource):\n    \"\"\"\n    A resource representing a widget in the mock database.\n\n    \"\"\"\n\n    @reify\n    def widget(self):\n        \"\"\"\n        Lookup the widget from the database.\n\n        \"\"\"\n        return self.request.widget_db.find(self.widget_id)\n\n\n@view_config(context=WidgetContainer, renderer=\"string\")\ndef list_widgets(context, request):\n    \"\"\"\n    GET /widget/\n\n    List the URLs of all widgets.\n\n    \"\"\"\n    urls = []\n    for widget_id in request.widget_db:\n        urls.append(request.resource_path(context[widget_id]))\n    return \"\\n\".join(urls) + \"\\n\"\n\n\n@view_config(context=Widget, renderer=\"string\")\ndef get_widget(context, request):\n    \"\"\"\n    GET /widget/{id}/\n\n    Greet the current widget.\n\n    \"\"\"\n    return \"Hello {}!\\n\".format(context.widget)\n\n\nclass MockDatabase:\n    \"\"\"\n    An imitation of a widget database.\n\n    \"\"\"\n\n    DATA = {\n        1: \"Widget 1\",\n        2: \"Widget 2\",\n    }\n\n    def exists(self, id):\n        return id in self.DATA\n\n    def find(self, id):\n        return self.DATA[id]\n\n    def __iter__(self):\n        return iter(self.DATA.keys())\n\n\ndef make_app():\n    config = Configurator()\n    config.set_root_factory(Root)\n    config.add_request_method(\n        lambda _: MockDatabase(),\n        \"widget_db\",\n        property=True,\n    )\n    config.scan(\".dynamic\")\n    return config.make_wsgi_app()\n\n\nif __name__ == \"__main__\":\n    app = make_app()\n    server = make_server(\"0.0.0.0\", 8080, app)\n    server.serve_forever()\n```\n\nThe resulting application will behave like this:\n\n```\n>>> curl localhost:8080/widget/\n> /widget/1/\n> /widget/2/\n\n>>> curl localhost:8080/widget/1/\n> Hello Widget 1!\n\n>>> curl localhost:8080/widget/2/\n> Hello Widget 2!\n```\n\n## Prior art\n\nThe [pyramid_traversalwrapper](https://github.com/Pylons/pyramid_traversalwrapper) project proxies a location-ignorant resource tree to make it location-aware.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/luhn/pyramid-resource",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyramid-resource",
    "package_url": "https://pypi.org/project/pyramid-resource/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyramid-resource/",
    "project_urls": {
      "Homepage": "https://github.com/luhn/pyramid-resource"
    },
    "release_url": "https://pypi.org/project/pyramid-resource/0.5.0/",
    "requires_dist": [
      "pyramid (>=1.7)",
      "flake8 (~=5.0.4) ; extra == 'linting'",
      "black (~=22.6.0) ; extra == 'linting'",
      "isort (~=5.10) ; extra == 'linting'",
      "pytest (~=7.1) ; extra == 'testing'",
      "webtest (~=3.0) ; extra == 'testing'"
    ],
    "requires_python": ">=3.7",
    "summary": "A simple base resource class for Pyramid traversal.",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14698719,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f60b4a94ebb1a7ca7b3906c5f70fdc5015f2548debf19f81365fe108b1ee81e",
          "md5": "1ac8cc9ea677e14d195e670c1fb191a3",
          "sha256": "1171146c07384e69533671e8a5cca03736751bb1be2e493b23b2de18c76ede8a"
        },
        "downloads": -1,
        "filename": "pyramid_resource-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ac8cc9ea677e14d195e670c1fb191a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4,<4.0",
        "size": 4325,
        "upload_time": "2018-12-14T21:40:15",
        "upload_time_iso_8601": "2018-12-14T21:40:15.587539Z",
        "url": "https://files.pythonhosted.org/packages/9f/60/b4a94ebb1a7ca7b3906c5f70fdc5015f2548debf19f81365fe108b1ee81e/pyramid_resource-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "040eea02da971d76471c39400677be8b2b190ecbe7d4821e21736aa9699d1ac4",
          "md5": "3d52c3d9c86652fa7590bc182c6db813",
          "sha256": "44c8f534f6c28bc6537a2e22ba99f20fc2015fdb01ef6016aac71a36388c56e9"
        },
        "downloads": -1,
        "filename": "pyramid-resource-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3d52c3d9c86652fa7590bc182c6db813",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4,<4.0",
        "size": 2418,
        "upload_time": "2018-12-14T21:40:13",
        "upload_time_iso_8601": "2018-12-14T21:40:13.707624Z",
        "url": "https://files.pythonhosted.org/packages/04/0e/ea02da971d76471c39400677be8b2b190ecbe7d4821e21736aa9699d1ac4/pyramid-resource-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a0c9288979d351ba668cf6714e824a6693501a9208ed450f9ead8446336a461",
          "md5": "249d30a1b584c93048422fd47c9c9209",
          "sha256": "03f52e578fa58c8ffd4f08478e262ad3ba0574937c60ddbe7f654d160ee32ad2"
        },
        "downloads": -1,
        "filename": "pyramid_resource-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "249d30a1b584c93048422fd47c9c9209",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4,<4.0",
        "size": 6224,
        "upload_time": "2018-12-14T23:52:14",
        "upload_time_iso_8601": "2018-12-14T23:52:14.965304Z",
        "url": "https://files.pythonhosted.org/packages/6a/0c/9288979d351ba668cf6714e824a6693501a9208ed450f9ead8446336a461/pyramid_resource-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f86fdf88580f7c2913e96742f15a540f8fb6c4bbcdd12bb7901c2b1a9fe896d",
          "md5": "649b444ab143a1ae1cea5196f5f08eda",
          "sha256": "74d2f37931db6198be736d7e68aae76909f135d0bf4121c092e959703b9b3915"
        },
        "downloads": -1,
        "filename": "pyramid-resource-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "649b444ab143a1ae1cea5196f5f08eda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4,<4.0",
        "size": 5262,
        "upload_time": "2018-12-14T23:52:13",
        "upload_time_iso_8601": "2018-12-14T23:52:13.517656Z",
        "url": "https://files.pythonhosted.org/packages/0f/86/fdf88580f7c2913e96742f15a540f8fb6c4bbcdd12bb7901c2b1a9fe896d/pyramid-resource-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38210b804bfa820446d2c010a32e31a6006af8e7492e281d82a3758c451c9382",
          "md5": "e8d4180256b21eb0dc18ee161787d1dc",
          "sha256": "8df5c91a26d18ec311e30033918ac0f813d388744edd4d92675d5dc362034720"
        },
        "downloads": -1,
        "filename": "pyramid_resource-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8d4180256b21eb0dc18ee161787d1dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4,<4.0",
        "size": 5356,
        "upload_time": "2019-08-26T18:19:30",
        "upload_time_iso_8601": "2019-08-26T18:19:30.736873Z",
        "url": "https://files.pythonhosted.org/packages/38/21/0b804bfa820446d2c010a32e31a6006af8e7492e281d82a3758c451c9382/pyramid_resource-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c67702ebfa5e97fb2e59ce1fd1d830f92737f49422ac4567131213101ad28fe",
          "md5": "9233b745a1447f121038265dacf375c7",
          "sha256": "ce44e32922f3c832185b4e67a24cf381610baf40cbe5336bd4d522812bf1a557"
        },
        "downloads": -1,
        "filename": "pyramid-resource-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9233b745a1447f121038265dacf375c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4,<4.0",
        "size": 5923,
        "upload_time": "2019-08-26T18:19:28",
        "upload_time_iso_8601": "2019-08-26T18:19:28.289878Z",
        "url": "https://files.pythonhosted.org/packages/1c/67/702ebfa5e97fb2e59ce1fd1d830f92737f49422ac4567131213101ad28fe/pyramid-resource-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d75448b4e6f407f04889fd5ab3de4580a94421fdf7639caa28a53a0a7725f3db",
          "md5": "d29b67bb9386d0317dfca955f2cc6808",
          "sha256": "b3c9a1ea3d7b63786f840d0696f270911472445832b60bba6dff73108cd4ca79"
        },
        "downloads": -1,
        "filename": "pyramid-resource-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d29b67bb9386d0317dfca955f2cc6808",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5616,
        "upload_time": "2021-01-09T21:24:23",
        "upload_time_iso_8601": "2021-01-09T21:24:23.997012Z",
        "url": "https://files.pythonhosted.org/packages/d7/54/48b4e6f407f04889fd5ab3de4580a94421fdf7639caa28a53a0a7725f3db/pyramid-resource-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe97a460982c432ef78ae5bd8ba041dbcc19a07d3928e45444d389113965d079",
          "md5": "7d1c047a63190c861ccba53d7c72efbd",
          "sha256": "df9e9569b552d93dc048f251163957614abbcfc5e64fcec17979aa5004ce22f7"
        },
        "downloads": -1,
        "filename": "pyramid_resource-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d1c047a63190c861ccba53d7c72efbd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5676,
        "upload_time": "2021-05-05T22:43:44",
        "upload_time_iso_8601": "2021-05-05T22:43:44.507167Z",
        "url": "https://files.pythonhosted.org/packages/fe/97/a460982c432ef78ae5bd8ba041dbcc19a07d3928e45444d389113965d079/pyramid_resource-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ae81c4f5a16165265463cb94f9cb0659154c30e5804cd0894ae4ce8f6dcdf73",
          "md5": "45d4f067fb9dd26f4c1a209c5bf7f21c",
          "sha256": "62d04f91f6c73580c63d281b279f2df09a284de3221bb70add7747ac5493c93c"
        },
        "downloads": -1,
        "filename": "pyramid-resource-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "45d4f067fb9dd26f4c1a209c5bf7f21c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6164,
        "upload_time": "2021-05-05T22:43:47",
        "upload_time_iso_8601": "2021-05-05T22:43:47.023086Z",
        "url": "https://files.pythonhosted.org/packages/3a/e8/1c4f5a16165265463cb94f9cb0659154c30e5804cd0894ae4ce8f6dcdf73/pyramid-resource-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "909c4ed301997d6744b532c798fef711e6d9558b7dd887baf29fbd3456a6f631",
          "md5": "75b92b360ac6835dfa1c0bad13abe39e",
          "sha256": "5a12a525e74bab047c0a463f82e9baaa5931ff4092faf75eef60dc851e5547b5"
        },
        "downloads": -1,
        "filename": "pyramid_resource-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75b92b360ac6835dfa1c0bad13abe39e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6926,
        "upload_time": "2022-08-09T05:45:38",
        "upload_time_iso_8601": "2022-08-09T05:45:38.208861Z",
        "url": "https://files.pythonhosted.org/packages/90/9c/4ed301997d6744b532c798fef711e6d9558b7dd887baf29fbd3456a6f631/pyramid_resource-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd319901258b1a90457891845d242db2e87c48a8327b7b2c371329d459d2502f",
          "md5": "04a57b71db18c59cfe01832a13ba1917",
          "sha256": "4b758b413e61075c693501306bebd4729d1b0d6b912774be8a35883166241564"
        },
        "downloads": -1,
        "filename": "pyramid-resource-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "04a57b71db18c59cfe01832a13ba1917",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6658,
        "upload_time": "2022-08-09T05:45:39",
        "upload_time_iso_8601": "2022-08-09T05:45:39.566208Z",
        "url": "https://files.pythonhosted.org/packages/bd/31/9901258b1a90457891845d242db2e87c48a8327b7b2c371329d459d2502f/pyramid-resource-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "909c4ed301997d6744b532c798fef711e6d9558b7dd887baf29fbd3456a6f631",
        "md5": "75b92b360ac6835dfa1c0bad13abe39e",
        "sha256": "5a12a525e74bab047c0a463f82e9baaa5931ff4092faf75eef60dc851e5547b5"
      },
      "downloads": -1,
      "filename": "pyramid_resource-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "75b92b360ac6835dfa1c0bad13abe39e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6926,
      "upload_time": "2022-08-09T05:45:38",
      "upload_time_iso_8601": "2022-08-09T05:45:38.208861Z",
      "url": "https://files.pythonhosted.org/packages/90/9c/4ed301997d6744b532c798fef711e6d9558b7dd887baf29fbd3456a6f631/pyramid_resource-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd319901258b1a90457891845d242db2e87c48a8327b7b2c371329d459d2502f",
        "md5": "04a57b71db18c59cfe01832a13ba1917",
        "sha256": "4b758b413e61075c693501306bebd4729d1b0d6b912774be8a35883166241564"
      },
      "downloads": -1,
      "filename": "pyramid-resource-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "04a57b71db18c59cfe01832a13ba1917",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6658,
      "upload_time": "2022-08-09T05:45:39",
      "upload_time_iso_8601": "2022-08-09T05:45:39.566208Z",
      "url": "https://files.pythonhosted.org/packages/bd/31/9901258b1a90457891845d242db2e87c48a8327b7b2c371329d459d2502f/pyramid-resource-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}