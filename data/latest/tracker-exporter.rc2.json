{
  "info": {
    "author": "Akim Faskhutdinov",
    "author_email": "a.faskhutdinov@yclients.tech",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Yandex.Tracker Exporter\n\nExport issue metadata & agile metrics to OLAP data storage. Metrics based on issue changelog.\n\n## Self-hosted arch example\n\n![](/docs/images/agile_metrics.png)\n\nSo, you can install Clickhouse with Clickhouse Proxy via Ansible role inside project.  \nEdit the inventory file `ansible/inventory/hosts.yml` and just run ansible-playbook.\n\n> **Attention:**\n> For the role to work correctly, docker must be installed on the target server.\n\nExample:\n```bash\n\npip3 install -r requirements-dev.txt\ncd ansible\nansible-playbook -i inventory/hosts.yml playbooks/clickhouse.yml --limit agile\n```\n\n\n## Serverless arch example\n\n![](/docs/images/agile_metrics_cloud.png)\n\n### Create a Managed Clickhouse cluster\n\n> How to: https://cloud.yandex.com/en/docs/managed-clickhouse/operations/cluster-create\n\n* Set user for exporter, example: `agile`\n* Set a database name, example: `agile`\n* Enable `Serverless access` flag\n* For testing enable host public access\n* Enable `Access from the management console` flag\n* Run migration or manual create tables (see migration block [here](#migration), see [sql](/migrations/clickhouse/))\n\n### Create Cloud Function\n\n> How to: https://cloud.yandex.com/en/docs/functions/quickstart/create-function/python-function-quickstart\n\n* Use Python >= 3.7\n* Copy/paste example content from `examples/serverless` ([code](/examples/serverless/))\n* Set entrypoint: `main.handler` (for code from examples)\n* Set function timeout to `600`, because the launch can be long if there are a lot of updated issues during the collection period\n* Set memory to `512MB` or more\n* Add environment variables (see variables block [here](#environment-variables-settings))\n    ```bash\n    EXPORTER_TRACKER_TOKEN=XXXXXXXXXXXXXXXX\n    EXPORTER_TRACKER_ORG_ID=123456\n    EXPORTER_CLICKHOUSE_PROTO=https\n    EXPORTER_CLICKHOUSE_CERT=/etc/ssl/certs/ca-certificates.crt\n    EXPORTER_CLICKHOUSE_HTTP_PORT=8443\n    EXPORTER_CLICKHOUSE_HOST=rc1b-xxxxxx.mdb.yandexcloud.net\n    EXPORTER_CLICKHOUSE_DATABASE=agile\n    EXPORTER_CLICKHOUSE_USER=agile\n    EXPORTER_CLICKHOUSE_PASSWORD=xxxx\n    EXPORTER_ENABLE_UPLOAD=true\n    EXPORTER_ISSUES_SEARCH_INTERVAL=2h\n* Release function\n* Run test\n* See logs\n\n![](/docs/images/logs.png)\n\n\n##### Serverless database connection without public access\nIf you don't want to enable clickhouse public access, use service account with such permissions - `serverless.mdbProxies.user` and set environment variables below:\n```bash\nEXPORTER_CLICKHOUSE_HOST=akfd3bhqk3xxxxxxxxxxx.clickhouse-proxy.serverless.yandexcloud.net\nEXPORTER_CLICKHOUSE_SERVERLESS_PROXY_ID=akfd3bhqk3xxxxxxxxxxxxx\n```\n\n> How to create database connection: https://cloud.yandex.com/en/docs/functions/operations/database-connection\n\nAlso, the `EXPORTER_CLICKHOUSE_PASSWORD` variable with service account must be replaced by IAM-token. Keep this in mind. \nProbably, you should get it in the function code, because the IAM-token works for a limited period of time.\n\n### Create Trigger\n\n> How to: https://cloud.yandex.com/en/docs/functions/quickstart/create-trigger/timer-quickstart\n\n* Create new trigger\n* Choose type `Timer`\n* Set interval every hour: `0 * ? * * *`\n* Select your function\n* Create serverless service account or use an existing one\n* Save trigger\n\n\n# Visualization\n\nYou can use any BI tool for visualization, for example:\n- Yandex DataLens\n- Apache Superset\n- PowerBI\n- Grafana\n\n![](/docs/images/datalens_example.png)\n\n\n# Migration\n\nBased on [go-migrate](https://github.com/golang-migrate/migrate) tool.\n\n## Download and install go-migrate tool\n\n### macOS\n```shell\nwget https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.darwin-amd64.tar.gz -O migrate.tar.gz\n\ntar xvf migrate.tar.gz\nmv migrate ~/bin\n```\n\n### Linux\n```shell\nwget https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-amd64.tar.gz -O migrate.tar.gz\n\ntar -xvf migrate.tar.gz\nmv migrate /usr/local/bin\n```\n\n## Run migration\n\nExample bash script\n\n```bash\n#!/usr/bin/env bash\n\nset -Eeuo pipefail\n\nCLICKHOUSE_HOST=\"localhost\"\nCLICKHOUSE_TCP_PORT=9000\nCLICKHOUSE_HTTP_PORT=8123\nCLICKHOUSE_USER=\"default\"\nCLICKHOUSE_PASSWORD=\"strongpassword\"\n\nMIGRATION_SOURCE_PATH=\"file://${PWD}/../migrations/clickhouse\"\nMIGRATION_HISTORY_TABLE=\"ci_gomigrate_migrations\"\nMIGRATION_DATABASE=\"agile\"\n\nMIGRATION_CLICKHOUSE_DSN=\"clickhouse://${CLICKHOUSE_HOST}:${CLICKHOUSE_TCP_PORT}?username=${CLICKHOUSE_USER}&password=${CLICKHOUSE_PASSWORD}&database=${MIGRATION_DATABASE}&x-multi-statement=true&x-migrations-table=${MIGRATION_HISTORY_TABLE}\"\n\nprepare_migration() {\n    echo \"CREATE DATABASE IF NOT EXISTS ${MIGRATION_DATABASE}\" | \\\n        curl \"http://${CLICKHOUSE_HOST}:${CLICKHOUSE_HTTP_PORT}/?user=${CLICKHOUSE_USER}&password=${CLICKHOUSE_PASSWORD}\" --data-binary @-\n\n}\n\nrun_migration() {\n    migrate -verbose \\\n        -source $MIGRATION_SOURCE_PATH \\\n        -database $MIGRATION_CLICKHOUSE_DSN \\\n        up\n\n}\n\nprepare_migration\nrun_migration\n```\n\n# Environment variables (settings)\n\n| variable | require? | default | description |\n|----------|----------|---------|-------------|\n| `EXPORTER_LOGLEVEL` | ❌ | `info` | One of: `debug`, `info`, `warning`, `error`, `exception` |\n| `EXPORTER_ENABLE_UPLOAD` | ❌ | `false` | Enable/disable upload to Clickhouse storage |\n| `EXPORTER_MONITORING_ENABLED` | ❌ | `false` | Enable send statsd metrics |\n| `EXPORTER_MONITORING_HOST` | ❌ | `localhost` | Monitoring statsd hostname |\n| `EXPORTER_MONITORING_PORT` | ❌ | `8125` | Monitoring statsd UDP port |\n| `EXPORTER_MONITORING_PREFIX` | ❌ | `tracker_exporter` | Prefix for all sent metrics, i.e.: `{prefix}_{metric_name}` |\n| `EXPORTER_SENTRY_ENABLED` | ❌ | `false` | Send exceptions and errors to Sentry |\n| `EXPORTER_SENTRY_DSN` | ❌ | None | Sentry DSN like https://{id}@{sentry_url} |\n| `EXPORTER_TRACKER_TOKEN` | ✅ | None | Yandex.Tracker OAuth token |\n| `EXPORTER_TRACKER_ORG_ID` | ✅ | None | Yandex.Tracker organization ID for Yandex.Tracker |\n| `EXPORTER_TRACKER_ISSUES_SEARCH_RANGE` | ❌ | `4h` | The query search range for recently updated issues, i.e: `Updated >= now() - {VARIABLE}` |\n| `EXPORTER_TRACKER_ISSUES_SEARCH_QUERY` | ❌ | None | The query search string like `Queue: SRE and status: closed` |\n| `EXPORTER_TRACKER_ISSUES_FETCH_INTERVAL` | ❌ | `120` | Exporter job run interval in minutes for issue and metrics |\n| `EXPORTER_CLOSED_ISSUES_STATUSES` | ❌ | `closed,rejected,released,resolved,cancelled` | Lowercase comma-separated status, which will be flagged as `is_closed` |\n| `EXPORTER_CLICKHOUSE_PROTO` | ❌ | `http` | Clickhouse protocol - HTTP or HTTPS |\n| `EXPORTER_CLICKHOUSE_HOST` | ❌ | `localhost` | Clickhouse hostname |\n| `EXPORTER_CLICKHOUSE_HTTP_PORT` | ❌ | `8123` | Clickhouse HTTP(S) port |\n| `EXPORTER_CLICKHOUSE_USER` | ❌ | `default` | Clickhouse read-write username |\n| `EXPORTER_CLICKHOUSE_PASSWORD` | ✅ | None | Clickhouse user password. **If your clickhouse/user can work without password just ignore this variable.** |\n| `EXPORTER_CLICKHOUSE_CACERT_PATH` | ❌ | `None` | Path to CA certificate. Only for HTTPS |\n| `EXPORTER_CLICKHOUSE_SERVERLESS_PROXY_ID` | ❌ | `None` | Database connection ID. Only for serverless |\n| `EXPORTER_CLICKHOUSE_DATABASE` | ❌ | `agile` | Database for exporter CH tables |\n| `EXPORTER_CLICKHOUSE_ISSUES_TABLE` | ❌ | `issues` | Table when store issues metadata |\n| `EXPORTER_CLICKHOUSE_ISSUE_METRICS_TABLE` | ❌ | `issue_metrics` | Table when store issue metrics |\n\n\n# Usage\n\n## Native\n\n### Install from source\n\n```bash\n\npython3 -m venv venv\nsource venv/bin/activate\npython3 setup.py install\n\nexport EXPORTER_TRACKER_TOKEN=\"xxxx\"\nexport EXPORTER_TRACKER_ORG_ID=\"123456\"\n\nexport EXPORTER_TRACKER_ISSUES_SEARCH_RANGE=\"6h\"\nexport EXPORTER_TRACKER_FETCH_INTERVAL=30\n\nexport EXPORTER_CLICKHOUSE_USER=\"default\"\nexport EXPORTER_CLICKHOUSE_PASSWORD=\"strongpassword\"\nexport EXPORTER_CLICKHOUSE_HOST=\"clickhouse01.example.com\"\nexport EXPORTER_CLICKHOUSE_HTTP_PORT=\"8121\"\n\nexport EXPORTER_LOGLEVEL=\"info\"\nexport EXPORTER_ENABLE_UPLOAD=true\n\ntracker-exporter\n```\n\n### Install from pypi\n\n```bash\npip3 install tracker-exporter\ntracker-exporter\n```\n\n### Use .env file\n\n```bash\ntracker-exporter --env-file /home/akimrx/tracker/.settings\n```\n\n\n## Docker\n\n```bash\n\ncd yandex-tracker-exporter\ntouch .env  # prepare the environment variables file (dotenv), like the example above\ndocker-compose up -d --build\ndocker logs tracker-exporter -f\n```\n\n# Monitoring\n\n| Metric name | Metric type | Labels | Description |\n|-------------|-------------|--------|-------------|\n| `tracker_exporter_clickhouse_insert_time_seconds` | `time` | `project` | Insert query time |\n| `tracker_exporter_clickhouse_optimize_time_seconds` | `time` | `project` | Optimize query time |\n| `tracker_exporter_clickhouse_inserted_rows` | `gauge` | `project`, `database`, `table` | Inserted rows to Clickhouse from last update |\n| `tracker_exporter_cycle_time_total_processing_time_seconds` | `time` | `project` | Total issues processing time |\n| `tracker_exporter_issue_transform_time_seconds` | `time` | `project` | Time of transformation of one issue into an object |\n| `tracker_exporter_issues_search_time_seconds` | `time` | `project` | Yandex.Tracker search time |\n| `tracker_exporter_issues_processing_time_seconds` | `time` | `project` | Time of transformation of batch issues into objects |\n| `tracker_exporter_issues_total_processed_count` | `count` | `project`, `source` | Processed issues from Yandex.Tracker |\n| `tracker_exporter_issues_without_metrics` | `gauge` | `project` | Issues with empty metrics |\n| `tracker_exporter_upload_status` | `gauge` | `project` | Status of data upload to storage |\n| `tracker_exporter_last_update_timestamp` | `timestamp gauge` | `project` | Timestamp of the last data upload to the storage |\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/tracker-exporter/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/akimrx/yandex-tracker-exporter",
    "keywords": "yandex tracker exporter,agile,cycle time",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tracker-exporter",
    "package_url": "https://pypi.org/project/tracker-exporter/",
    "platform": "osx",
    "project_url": "https://pypi.org/project/tracker-exporter/",
    "project_urls": {
      "Download": "https://pypi.org/project/tracker-exporter/",
      "Homepage": "https://github.com/akimrx/yandex-tracker-exporter"
    },
    "release_url": "https://pypi.org/project/tracker-exporter/0.1.17/",
    "requires_dist": [
      "yandex-tracker-client (==2.3)",
      "clickhouse-driver (==0.2.*)",
      "datadog (==0.44.*)",
      "apscheduler (==3.9.*)",
      "requests (==2.27.*)",
      "pandas (==1.3.*)",
      "numpy (==1.21.*)",
      "businesstime (==0.3.*)",
      "holidays (==0.14.*)",
      "sentry-sdk (==1.6.*)",
      "python-dotenv (==0.20.*)"
    ],
    "requires_python": ">=3.7",
    "summary": "Yandex.Tracker issue metrics exporter",
    "version": "0.1.17",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15175710,
  "releases": {
    "0.1.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90fb60da5f5ff82a3bf1ab06d61409eeeaf759cd3459c14df000237ac082293a",
          "md5": "4c9cb2e27de07a19f6e7774eefc1969c",
          "sha256": "81d0621fbf84e649235b5d97f1627e7eef24aa6d74b57bd2970a543c5c60f4cf"
        },
        "downloads": -1,
        "filename": "tracker_exporter-0.1.16-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c9cb2e27de07a19f6e7774eefc1969c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20793,
        "upload_time": "2022-08-12T15:05:28",
        "upload_time_iso_8601": "2022-08-12T15:05:28.337154Z",
        "url": "https://files.pythonhosted.org/packages/90/fb/60da5f5ff82a3bf1ab06d61409eeeaf759cd3459c14df000237ac082293a/tracker_exporter-0.1.16-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c06898fde276bca4149403e395d2d136650453f4aee0833f2f81ec048ba26211",
          "md5": "2e56071b2ddeb774206659e1568b0ae1",
          "sha256": "dfe5f6eac33aafb7faa522c662c5b52eae0c3ff5ca92bc52d439c6b06d2068ab"
        },
        "downloads": -1,
        "filename": "tracker-exporter-0.1.16.tar.gz",
        "has_sig": false,
        "md5_digest": "2e56071b2ddeb774206659e1568b0ae1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19077,
        "upload_time": "2022-08-12T15:05:29",
        "upload_time_iso_8601": "2022-08-12T15:05:29.927254Z",
        "url": "https://files.pythonhosted.org/packages/c0/68/98fde276bca4149403e395d2d136650453f4aee0833f2f81ec048ba26211/tracker-exporter-0.1.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a015504166888d6ef3a151916af611566f920bf491c4d6afd0d63cd28ccf0cc",
          "md5": "9c7420916422ba7bacf3cadd2d70bc85",
          "sha256": "f546821a090ec92a3ee5eb3adbabb8ff42121b73d7538a04d66bdda63cb07a32"
        },
        "downloads": -1,
        "filename": "tracker_exporter-0.1.17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c7420916422ba7bacf3cadd2d70bc85",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20905,
        "upload_time": "2022-09-22T07:13:45",
        "upload_time_iso_8601": "2022-09-22T07:13:45.621469Z",
        "url": "https://files.pythonhosted.org/packages/1a/01/5504166888d6ef3a151916af611566f920bf491c4d6afd0d63cd28ccf0cc/tracker_exporter-0.1.17-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17d46d5c2727bbeb0cfefe6e9e0de0baf85889a01f5eab88bda8575b6845abf7",
          "md5": "33e64638fe7fca5a73bf7478674c3d63",
          "sha256": "362482207364a2786509e5bba1b1c106f281afd72e5995b79e9e7070fdf32af4"
        },
        "downloads": -1,
        "filename": "tracker-exporter-0.1.17.tar.gz",
        "has_sig": false,
        "md5_digest": "33e64638fe7fca5a73bf7478674c3d63",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19246,
        "upload_time": "2022-09-22T07:13:47",
        "upload_time_iso_8601": "2022-09-22T07:13:47.282336Z",
        "url": "https://files.pythonhosted.org/packages/17/d4/6d5c2727bbeb0cfefe6e9e0de0baf85889a01f5eab88bda8575b6845abf7/tracker-exporter-0.1.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a015504166888d6ef3a151916af611566f920bf491c4d6afd0d63cd28ccf0cc",
        "md5": "9c7420916422ba7bacf3cadd2d70bc85",
        "sha256": "f546821a090ec92a3ee5eb3adbabb8ff42121b73d7538a04d66bdda63cb07a32"
      },
      "downloads": -1,
      "filename": "tracker_exporter-0.1.17-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9c7420916422ba7bacf3cadd2d70bc85",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 20905,
      "upload_time": "2022-09-22T07:13:45",
      "upload_time_iso_8601": "2022-09-22T07:13:45.621469Z",
      "url": "https://files.pythonhosted.org/packages/1a/01/5504166888d6ef3a151916af611566f920bf491c4d6afd0d63cd28ccf0cc/tracker_exporter-0.1.17-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17d46d5c2727bbeb0cfefe6e9e0de0baf85889a01f5eab88bda8575b6845abf7",
        "md5": "33e64638fe7fca5a73bf7478674c3d63",
        "sha256": "362482207364a2786509e5bba1b1c106f281afd72e5995b79e9e7070fdf32af4"
      },
      "downloads": -1,
      "filename": "tracker-exporter-0.1.17.tar.gz",
      "has_sig": false,
      "md5_digest": "33e64638fe7fca5a73bf7478674c3d63",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 19246,
      "upload_time": "2022-09-22T07:13:47",
      "upload_time_iso_8601": "2022-09-22T07:13:47.282336Z",
      "url": "https://files.pythonhosted.org/packages/17/d4/6d5c2727bbeb0cfefe6e9e0de0baf85889a01f5eab88bda8575b6845abf7/tracker-exporter-0.1.17.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}