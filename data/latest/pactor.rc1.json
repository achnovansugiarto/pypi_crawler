{
  "info": {
    "author": "Todd Carlson",
    "author_email": "none@notset.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Utilities"
    ],
    "description": "========\npactor\n========\n\n\n\nA minimalist actor framework in Python.\n\n* Free software: MIT license\n\nInstallation\n============\n\n::\n\n    pip install pactor\n\n\nRunning the Example\n===================\n\nClone the repo locally, then run the following commands::\n\n    pipenv install\n    pipenv run python -m pactor\n\nTo exit, press q.\n\nDocumentation\n=============\n\nThe actor model is a computational model that is useful for concurrent execution.  See: https://en.wikipedia.org/wiki/Actor_model.\n\npactor is a minimalist implementation of the actor model in Python, using multiprocessing.\n\nThe actor model stipulates that actors only interact with each other through messaging.  pactor implements that\nrestriction by building a proxy around an actor class and converting method calls into messages.\n\nTo wrap a pickleable class as an Actor, simply create an Actor with an instance of the target class, as follows:\n\n.. code-block:: python\n\n    class MyActor:\n        def __init__(self, name):\n            self.name = name\n\n        def some_method(self):\n            ...\n\n    actor_instance = Actor(MyActor())\n\n\nThe Actor class provides a couple of key capabilities:\n    | **.proxy**\n    | A proxy object that has methods that mirror those on the wrapped class.  Calling a method on the proxy will generate a message to the actor process with the provided parameters.\n    |\n    | **.close()**\n    | Signals that the actor process should discontinue processing messages and terminate.\n    |\n    | **.join()**\n    | Blocks the calling thread until the actor process terminates.\n    |\n\nAdditionally, the actor class itself is enhanced with an enqueue method that can be used to send messages to itself.\n\nConsider this simple example of a Monitor:\n\n.. code-block:: python\n\n    class Monitor:\n        def __init__(self, name, aggregator):\n            self.name = name\n            self.aggregator = aggregator\n            self.status = 0\n\n        def read_status(self):\n            self.status = fetch_status()\n            self.aggregator.update_status(self.name, self.status)\n            self.enqueue(self.read_status) # queue up another read\n\n\n\nAnd an Aggregator:\n\n.. code-block:: python\n\n    class Aggregator:\n        def update_status(self, target_name, status):\n            print('Status update for %s: %s' % (target_name, status))\n\nThese could be used as follows:\n\n.. code-block:: python\n\n    def main():\n        aggregator = Actor(Aggregator('aggregator'))\n        primary_mon = Actor(Monitor('primary', aggregator.proxy))\n        secondary_mon = Actor(Monitor('secondary', aggregator.proxy))\n\n        primary_mon.read_status()\n        secondary_mon.read_status()\n\n        aggregator.join()\n\nThis simple example highlights several critical points:\n\n* Each Actor class will actually run in a separate process\n* One Actor can be passed to another Actor using the .proxy member\n* Invoking a method on an Actor proxy does not directly invoke that method on the calling thread, but instead is wrapped as a message and passed to the actor process.\n\nDevelopment\n===========\n\nTo run the all tests run::\n\n    tox\n\n\n\nChangelog\n=========\n\n0.0.1 (2019-12-10)\n------------------\n\n* First release on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rtoddcarlson/pactor",
    "keywords": "actor",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pactor",
    "package_url": "https://pypi.org/project/pactor/",
    "platform": "",
    "project_url": "https://pypi.org/project/pactor/",
    "project_urls": {
      "Documentation": "https://github.com/rtoddcarlson/pactor",
      "Homepage": "https://github.com/rtoddcarlson/pactor",
      "Issue Tracker": "https://github.com/rtoddcarlson/pactor/issues"
    },
    "release_url": "https://pypi.org/project/pactor/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6.*",
    "summary": "A minimalist actor framework in Python.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6274075,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "681f474d22afa0319eaa250d30c68a4d0fc783aa4839f94bf65d4d3d9c6974bb",
          "md5": "42d0a3df913ff39e0e2a31233411c966",
          "sha256": "97db34f4cb564aa2fb20d32b5c9c124da6d4f007f1a87a4fe73f86de741ae53e"
        },
        "downloads": -1,
        "filename": "pactor-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42d0a3df913ff39e0e2a31233411c966",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.*",
        "size": 7716,
        "upload_time": "2019-12-10T17:22:21",
        "upload_time_iso_8601": "2019-12-10T17:22:21.960887Z",
        "url": "https://files.pythonhosted.org/packages/68/1f/474d22afa0319eaa250d30c68a4d0fc783aa4839f94bf65d4d3d9c6974bb/pactor-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e0614be9e063657c53beaed10d77270579b8052fe5be33feb06c3dfa6cf34a4",
          "md5": "35cd11bfa986da330b09465b529e0438",
          "sha256": "a3a9619a1e4916c2b9c0980481573f6284f8a856c340b65dbe7849c71b9172ed"
        },
        "downloads": -1,
        "filename": "pactor-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "35cd11bfa986da330b09465b529e0438",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.*",
        "size": 15671,
        "upload_time": "2019-12-10T17:22:24",
        "upload_time_iso_8601": "2019-12-10T17:22:24.137950Z",
        "url": "https://files.pythonhosted.org/packages/0e/06/14be9e063657c53beaed10d77270579b8052fe5be33feb06c3dfa6cf34a4/pactor-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "681f474d22afa0319eaa250d30c68a4d0fc783aa4839f94bf65d4d3d9c6974bb",
        "md5": "42d0a3df913ff39e0e2a31233411c966",
        "sha256": "97db34f4cb564aa2fb20d32b5c9c124da6d4f007f1a87a4fe73f86de741ae53e"
      },
      "downloads": -1,
      "filename": "pactor-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "42d0a3df913ff39e0e2a31233411c966",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6.*",
      "size": 7716,
      "upload_time": "2019-12-10T17:22:21",
      "upload_time_iso_8601": "2019-12-10T17:22:21.960887Z",
      "url": "https://files.pythonhosted.org/packages/68/1f/474d22afa0319eaa250d30c68a4d0fc783aa4839f94bf65d4d3d9c6974bb/pactor-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e0614be9e063657c53beaed10d77270579b8052fe5be33feb06c3dfa6cf34a4",
        "md5": "35cd11bfa986da330b09465b529e0438",
        "sha256": "a3a9619a1e4916c2b9c0980481573f6284f8a856c340b65dbe7849c71b9172ed"
      },
      "downloads": -1,
      "filename": "pactor-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "35cd11bfa986da330b09465b529e0438",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.*",
      "size": 15671,
      "upload_time": "2019-12-10T17:22:24",
      "upload_time_iso_8601": "2019-12-10T17:22:24.137950Z",
      "url": "https://files.pythonhosted.org/packages/0e/06/14be9e063657c53beaed10d77270579b8052fe5be33feb06c3dfa6cf34a4/pactor-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}