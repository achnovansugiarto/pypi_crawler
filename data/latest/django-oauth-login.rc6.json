{
  "info": {
    "author": "Dave Gaeddert",
    "author_email": "dave.gaeddert@dropseed.dev",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3",
      "Framework :: Django :: 4",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# django-oauth-login\n\n**Add OAuth login support to your Django project.**\n\n[Watch on YouTube (3 mins) â†’](https://youtu.be/UxbxBa6AFsU)\n\nThis library is intentionally minimal.\nIt has no dependencies and a single database model.\nIf you simply want users to log in with GitHub, Google, Twitter, etc. (and maybe use that access token for API calls),\nthen this is the library for you.\n\nThere are three OAuth flows that it makes possible:\n\n1. Signup via OAuth (new user, new OAuth connection)\n2. Login via OAuth (existing user, existing OAuth connection)\n3. Connect/disconnect OAuth accounts to a user (existing user, new OAuth connection)\n\n\n## Usage\n\nInstall the package from PyPi:\n\n```sh\npip install django-oauth-login\n```\n\nAdd `oauthlogin` to your `INSTALLED_APPS` in `settings.py`:\n\n```python\nINSTALLED_APPS = [\n    ...\n    \"oauthlogin\",\n]\n```\n\nIn your `urls.py`, include `oauthlogin.urls`:\n\n```python\nurlpatterns = [\n    path(\"oauth/\", include(\"oauthlogin.urls\")),\n    ...\n]\n```\n\nThen run migrations:\n\n```sh\npython manage.py migrate oauthlogin\n```\n\nCreate a new OAuth provider ([or copy one from our examples](provider_examples)):\n\n```python\n# yourapp/oauth.py\nimport requests\n\nfrom oauthlogin.providers import OAuthProvider, OAuthToken, OAuthUser\n\n\nclass ExampleOAuthProvider(OAuthProvider):\n    authorization_url = \"https://example.com/login/oauth/authorize\"\n\n    def get_oauth_token(self, *, code, request):\n        response = requests.post(\n            \"https://example.com/login/oauth/token\",\n            headers={\n                \"Accept\": \"application/json\",\n            },\n            data={\n                \"client_id\": self.get_client_id(),\n                \"client_secret\": self.get_client_secret(),\n                \"code\": code,\n            },\n        )\n        response.raise_for_status()\n        data = response.json()\n        return OAuthToken(\n            access_token=data[\"access_token\"],\n        )\n\n    def get_oauth_user(self, *, oauth_token):\n        response = requests.get(\n            \"https://example.com/api/user\",\n            headers={\n                \"Accept\": \"application/json\",\n                \"Authorization\": f\"token {oauth_token.access_token}\",\n            },\n        )\n        response.raise_for_status()\n        data = response.json()\n        return OAuthUser(\n            id=data[\"id\"],\n            username=data[\"username\"],\n            email=data[\"email\"],\n        )\n```\n\nCreate your OAuth app/consumer on the provider's site (GitHub, Google, etc.).\nWhen setting it up, you'll likely need to give it a callback URL.\nIn development this can be `http://localhost:8000/oauth/github/callback/` (if you name it `\"github\"` like in the example below).\nAt the end you should get some sort of \"client id\" and \"client secret\" which you can then use in your `settings.py`:\n\n```python\nOAUTH_LOGIN_PROVIDERS = {\n    \"github\": {\n        \"class\": \"yourapp.oauth.GitHubOAuthProvider\",\n        \"kwargs\": {\n            \"client_id\": environ[\"GITHUB_CLIENT_ID\"],\n            \"client_secret\": environ[\"GITHUB_CLIENT_SECRET\"],\n            # \"scope\" is optional, defaults to \"\"\n\n            # You can add other fields if you have additional kwargs in your class __init__\n            # def __init__(self, *args, custom_arg=\"default\", **kwargs):\n            #     self.custom_arg = custom_arg\n            #     super().__init__(*args, **kwargs)\n        },\n    },\n}\n```\n\nThen add a login button (which is a form using POST rather than a basic link, for security purposes):\n\n```html\n<h1>Login</h1>\n<form action=\"{% url 'oauthlogin:login' 'github' %}\" method=\"post\">\n    {% csrf_token %}\n    <button type=\"submit\">Login with GitHub</button>\n</form>\n```\n\nThat's pretty much it!\n\n## Advanced usage\n\n### Email addresses should be unique\n\nWhen you're integrating with an OAuth provider,\nwe think that the user's email address is the best \"primary key\" when linking to your `User` model in your app.\nUnfortunately in Django, by default an email address is not required to be unique!\n**We strongly recommend you require email addresses to be unique in your app.**\n\n[As suggested by the Django docs](https://docs.djangoproject.com/en/4.0/topics/auth/customizing/#using-a-custom-user-model-when-starting-a-project),\none way to do this is to have your own `User` model:\n\n```python\n# In an app named \"users\", for example\nfrom django.contrib.auth.models import AbstractUser\n\nclass User(AbstractUser):\n    email = models.EmailField(unique=True)\n\n\n# In settings.py\nAUTH_USER_MODEL = 'users.User'\n```\n\nYou'll also notice that there are no \"email confirmation\" or \"email verification\" flows in this library.\nThis is also intentional.\nYou can implement something like that yourself if you need to,\nbut the easier solution in our opinion is to use an OAuth provider you *trust to have done that already*.\nIf you look at our [provider examples](provider_examples) you'll notice how we often use provider APIs to get the email address which is \"primary\" and \"verified\" already.\nIf they've already done that work,\nthen we can just use that information.\n\n### Handling OAuth errors\n\nThe most common error you'll run into is if an existing user clicks a login button,\nbut they haven't yet connected that provider to their account.\nFor security reasons,\nthe required flow here is that the user actually logs in with another method (however they signed up) and then *connects* the OAuth provider from a settings page.\n\nFor this error (and a couple others),\nthere is an error template that is rendered.\nYou can customize this by copying `oauthlogin/error.html` to one of your own template directories:\n\n```html\n{% extends \"base.html\" %}\n\n{% block content %}\n<h1>OAuth Error</h1>\n<p>{{ oauth_error }}</p>\n{% endblock %}\n```\n\n![Django OAuth duplicate email address error](https://user-images.githubusercontent.com/649496/159065848-b4ee6e63-9aa0-47b5-94e8-7bee9b509e60.png)\n\n### Connecting and disconnecting OAuth accounts\n\nTo connect and disconnect OAuth accounts,\nyou can add a series of forms to a user/profile settings page.\nHere's an very basic example:\n\n```html\n{% extends \"base.html\" %}\n\n{% block content %}\nHello {{ request.user }}!\n\n<h2>Existing connections</h2>\n<ul>\n    {% for connection in request.user.oauth_connections.all %}\n    <li>\n        {{ connection.provider_key }} [ID: {{ connection.provider_user_id }}]\n        {% if connection.can_be_disconnected %}\n        <form action=\"{% url 'oauthlogin:disconnect' connection.provider_key %}\" method=\"post\">\n            {% csrf_token %}\n            <input type=\"hidden\" name=\"provider_user_id\" value=\"{{ connection.provider_user_id }}\">\n            <button type=\"submit\">Disconnect</button>\n        </form>\n        {% endif %}\n    </li>\n    {% endfor %}\n</ul>\n\n<h2>Add a connection</h2>\n<ul>\n    {% for provider_key in oauth_provider_keys %}\n    <li>\n        {{ provider_key}}\n        <form action=\"{% url 'oauthlogin:connect' provider_key %}\" method=\"post\">\n            {% csrf_token %}\n            <button type=\"submit\">Connect</button>\n        </form>\n    </li>\n    {% endfor %}\n</ul>\n\n{% endblock %}\n```\n\n![Connecting and disconnecting Django OAuth accounts](https://user-images.githubusercontent.com/649496/159065096-30239a1f-62f6-4ee2-a944-45140f45af6f.png)\n\n### Using a saved access token\n\n```python\nimport requests\n\n# Get the OAuth connection for a user\nconnection = user.oauth_connections.get(provider_key=\"github\")\n\n# If the token can expire, check and refresh it\nif connection.access_token_expired():\n    connection.refresh_access_token()\n\n# Use the token in an API call\ntoken = connection.oauth_token\nresponse = requests.get(...)\n```\n\n### Using the Django system check\n\nThis library comes with a Django system check to ensure you don't *remove* a provider from `settings.py` that is still in use in your database.\nYou do need to specify the `--database` for this to run when using the check command by itself:\n\n```sh\npython manage.py check --database default\n```\n\n## FAQs\n\n### How is this different from [other Django OAuth libraries](https://djangopackages.org/grids/g/oauth/)?\n\nThe short answer is that *it does less*.\n\nIn [django-allauth](https://github.com/pennersr/django-allauth)\n(maybe the most popular alternative)\nyou get all kinds of other features like managing multiple email addresses,\nemail verification,\na long list of supported providers,\nand a whole suite of forms/urls/views/templates/signals/tags.\nAnd in my experience,\nit's too much.\nIt often adds more complexity to your app than you actually need (or want) and honestly it can just be a lot to wrap your head around.\nPersonally, I don't like the way that your OAuth settings are stored in the database vs when you use `settings.py`,\nand the implications for doing it one way or another.\n\nThe other popular OAuth libraries have similar issues,\nand I think their *weight* outweighs their usefulness for 80% of the use cases.\n\n### Why aren't providers included in the library itself?\n\nOne thing you'll notice is that we don't have a long list of pre-configured providers in this library.\nInstead, we have some examples (which you can usually just copy, paste, and use) and otherwise encourage you to wire up the provider yourself.\nOften times all this means is finding the two OAuth URLs (\"oauth/authorize\" and \"oauth/token\") in their docs,\nand writing two class methods that do the actual work of getting the user's data (which is often customized anyway).\n\nWe've written examples for the following providers:\n\n- [GitHub](provider_examples/github.py)\n- [GitLab](provider_examples/gitlab.py)\n- [Bitbucket](provider_examples/bitbucket.py)\n\nJust copy that code and paste it in your project.\nTweak as necessary!\n\nThis might sound strange at first.\nBut in the long run we think it's actually *much* more maintainable for both us (as library authors) and you (as app author).\nIf something breaks with a provider, you can fix it immediately!\nYou don't need to try to run changes through us or wait for an upstream update.\nYou're welcome to contribute an example to this repo,\nand there won't be an expectation that it \"works perfectly for every use case until the end of time\".\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dropseed/django-oauth-login",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-oauth-login",
    "package_url": "https://pypi.org/project/django-oauth-login/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-oauth-login/",
    "project_urls": {
      "Documentation": "https://github.com/dropseed/django-oauth-login",
      "Homepage": "https://github.com/dropseed/django-oauth-login",
      "Repository": "https://github.com/dropseed/django-oauth-login"
    },
    "release_url": "https://pypi.org/project/django-oauth-login/0.2.3/",
    "requires_dist": null,
    "requires_python": ">=3.8,<4.0",
    "summary": "",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16637520,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26fc75cc0174d121c175a94e7a0df43a9b45f69354adbe59355dd7723de9362a",
          "md5": "e5183f09ed2974777a5dd259b7f045b1",
          "sha256": "ea13718d2b53fd805119eb36832f2e5bcbbb406e4227631fd558af17c659f28d"
        },
        "downloads": -1,
        "filename": "django_oauth_login-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5183f09ed2974777a5dd259b7f045b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 12444,
        "upload_time": "2022-03-17T20:49:12",
        "upload_time_iso_8601": "2022-03-17T20:49:12.698397Z",
        "url": "https://files.pythonhosted.org/packages/26/fc/75cc0174d121c175a94e7a0df43a9b45f69354adbe59355dd7723de9362a/django_oauth_login-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c08c50ba41c2246cf4ddd5f126f2380f71e7b9a6b77a45f6d6f793b9c9ebdb6",
          "md5": "c100813957d0cb7e98bc0831153aa873",
          "sha256": "7b250daa1ebdd4266c5a9b83060d7e563258aa64e3c86c991770cb239d0ecb1d"
        },
        "downloads": -1,
        "filename": "django-oauth-login-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c100813957d0cb7e98bc0831153aa873",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 13981,
        "upload_time": "2022-03-17T20:49:10",
        "upload_time_iso_8601": "2022-03-17T20:49:10.972520Z",
        "url": "https://files.pythonhosted.org/packages/2c/08/c50ba41c2246cf4ddd5f126f2380f71e7b9a6b77a45f6d6f793b9c9ebdb6/django-oauth-login-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "630c8efe160e1834cd68c524b5daafc4d8d6ded4c50291865a67660a843d459c",
          "md5": "ed2305b4cccb49443e49c669be735f0b",
          "sha256": "e349ac8fd34111238356bbd61575ba5cdeb7fcdeeab4bf6eb4ee5e5ac6548d09"
        },
        "downloads": -1,
        "filename": "django_oauth_login-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed2305b4cccb49443e49c669be735f0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 12454,
        "upload_time": "2022-03-17T21:00:43",
        "upload_time_iso_8601": "2022-03-17T21:00:43.210037Z",
        "url": "https://files.pythonhosted.org/packages/63/0c/8efe160e1834cd68c524b5daafc4d8d6ded4c50291865a67660a843d459c/django_oauth_login-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef00b50d75868384d7f6c5c7ae973627e5def69041cd3e08dc38ad0304a8e304",
          "md5": "b4d28d0993b71a0ab2dabf5a6bb4c3b8",
          "sha256": "3a78bb4bec1c8c378e6321034d16ad61aae8920fea56826626554a340c485a28"
        },
        "downloads": -1,
        "filename": "django-oauth-login-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b4d28d0993b71a0ab2dabf5a6bb4c3b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 13999,
        "upload_time": "2022-03-17T21:00:41",
        "upload_time_iso_8601": "2022-03-17T21:00:41.627270Z",
        "url": "https://files.pythonhosted.org/packages/ef/00/b50d75868384d7f6c5c7ae973627e5def69041cd3e08dc38ad0304a8e304/django-oauth-login-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0fbc2d3fa2bec01f7135252112e35648867c84c04af99e000874409f24a0ccd",
          "md5": "16df03b50388dcb45fac8a5dfb4c5e9c",
          "sha256": "ddf24eb5d1148204e7c08722a4275222578c38b6ad9b53c8f9a27b65403d7697"
        },
        "downloads": -1,
        "filename": "django_oauth_login-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16df03b50388dcb45fac8a5dfb4c5e9c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 13389,
        "upload_time": "2022-03-18T18:35:09",
        "upload_time_iso_8601": "2022-03-18T18:35:09.649778Z",
        "url": "https://files.pythonhosted.org/packages/e0/fb/c2d3fa2bec01f7135252112e35648867c84c04af99e000874409f24a0ccd/django_oauth_login-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0b8526f438c9c84d18409baba60103c39f5cba929f2b2629f9b17fe93fb2414",
          "md5": "c6c350307b636fe9ebaf27714b41559c",
          "sha256": "3f8b8e2cfe5cf5b5722980733ac4b75afadf5feef338acd253f5f113fc956a90"
        },
        "downloads": -1,
        "filename": "django-oauth-login-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c6c350307b636fe9ebaf27714b41559c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 14409,
        "upload_time": "2022-03-18T18:35:08",
        "upload_time_iso_8601": "2022-03-18T18:35:08.087927Z",
        "url": "https://files.pythonhosted.org/packages/d0/b8/526f438c9c84d18409baba60103c39f5cba929f2b2629f9b17fe93fb2414/django-oauth-login-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "117f02b617f4aba7372db469be3a58a79d2b7499b39418d07e850a5431d65327",
          "md5": "001f2b6245f804927a5824a7e47a18e4",
          "sha256": "f0124ac08944c5c4b6263eb8f12471c5147e1449683fb7a7283b26a7fab81f53"
        },
        "downloads": -1,
        "filename": "django_oauth_login-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "001f2b6245f804927a5824a7e47a18e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 13904,
        "upload_time": "2022-03-18T21:23:42",
        "upload_time_iso_8601": "2022-03-18T21:23:42.557816Z",
        "url": "https://files.pythonhosted.org/packages/11/7f/02b617f4aba7372db469be3a58a79d2b7499b39418d07e850a5431d65327/django_oauth_login-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9e8f88da1205d9a697f255c649662e3117a37232b02a2c95995d8e54470ecee",
          "md5": "af10ae9ff944753dbe76db796e361d4f",
          "sha256": "1474d70f69e1f1b53f24ff5b0d86f36b4dcd0908e7668d0df0ca831abdc7b97c"
        },
        "downloads": -1,
        "filename": "django-oauth-login-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "af10ae9ff944753dbe76db796e361d4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 15551,
        "upload_time": "2022-03-18T21:23:41",
        "upload_time_iso_8601": "2022-03-18T21:23:41.030264Z",
        "url": "https://files.pythonhosted.org/packages/d9/e8/f88da1205d9a697f255c649662e3117a37232b02a2c95995d8e54470ecee/django-oauth-login-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "272826e785a3ddd28006f4a8bd6dda18d5ae76946b343c9dd6bbcdec5002df08",
          "md5": "de8110cedb173be2f4d0c1e39ed7ba38",
          "sha256": "f89dd3e3a1030951f3a7dcfdf870cadf065d2685f0180dbe3ad6ab33faed1011"
        },
        "downloads": -1,
        "filename": "django_oauth_login-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de8110cedb173be2f4d0c1e39ed7ba38",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 14179,
        "upload_time": "2022-03-19T19:15:26",
        "upload_time_iso_8601": "2022-03-19T19:15:26.817139Z",
        "url": "https://files.pythonhosted.org/packages/27/28/26e785a3ddd28006f4a8bd6dda18d5ae76946b343c9dd6bbcdec5002df08/django_oauth_login-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01f1ea4b9be72fea09c46298bcde4f84ccc9ebf5e273f1bb5454ffadb8f7fa12",
          "md5": "e89bc06c06eb7203cd91603ee23f4496",
          "sha256": "0ac32366a50c5b647585edd73c893fa282011bbc65dfae4d02002b701a434f7b"
        },
        "downloads": -1,
        "filename": "django-oauth-login-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e89bc06c06eb7203cd91603ee23f4496",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 15826,
        "upload_time": "2022-03-19T19:15:25",
        "upload_time_iso_8601": "2022-03-19T19:15:25.229222Z",
        "url": "https://files.pythonhosted.org/packages/01/f1/ea4b9be72fea09c46298bcde4f84ccc9ebf5e273f1bb5454ffadb8f7fa12/django-oauth-login-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0899d5fa4ce16264c203633a52e145375b80a48d288bbf69e292a44237e366b7",
          "md5": "a8b8bba71d862a1f7bb582129a0157a8",
          "sha256": "a5d04cf2f38de7d0af4911ed80c7e35e1cdc1786981030d33e912060bcd612b1"
        },
        "downloads": -1,
        "filename": "django_oauth_login-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8b8bba71d862a1f7bb582129a0157a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 14272,
        "upload_time": "2023-01-31T17:18:38",
        "upload_time_iso_8601": "2023-01-31T17:18:38.146600Z",
        "url": "https://files.pythonhosted.org/packages/08/99/d5fa4ce16264c203633a52e145375b80a48d288bbf69e292a44237e366b7/django_oauth_login-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5317e7eed6de9e893b1e7f36b17f6743116e80aa1877ad35206d11ce74603e8a",
          "md5": "9f0f96e01bce66021b4e57a38cc39614",
          "sha256": "282675be18ddee1c90884520430d219bd4ed42d6b47a83f8c7a355a33d5a34de"
        },
        "downloads": -1,
        "filename": "django_oauth_login-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9f0f96e01bce66021b4e57a38cc39614",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 15880,
        "upload_time": "2023-01-31T17:18:39",
        "upload_time_iso_8601": "2023-01-31T17:18:39.754473Z",
        "url": "https://files.pythonhosted.org/packages/53/17/e7eed6de9e893b1e7f36b17f6743116e80aa1877ad35206d11ce74603e8a/django_oauth_login-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0899d5fa4ce16264c203633a52e145375b80a48d288bbf69e292a44237e366b7",
        "md5": "a8b8bba71d862a1f7bb582129a0157a8",
        "sha256": "a5d04cf2f38de7d0af4911ed80c7e35e1cdc1786981030d33e912060bcd612b1"
      },
      "downloads": -1,
      "filename": "django_oauth_login-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a8b8bba71d862a1f7bb582129a0157a8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 14272,
      "upload_time": "2023-01-31T17:18:38",
      "upload_time_iso_8601": "2023-01-31T17:18:38.146600Z",
      "url": "https://files.pythonhosted.org/packages/08/99/d5fa4ce16264c203633a52e145375b80a48d288bbf69e292a44237e366b7/django_oauth_login-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5317e7eed6de9e893b1e7f36b17f6743116e80aa1877ad35206d11ce74603e8a",
        "md5": "9f0f96e01bce66021b4e57a38cc39614",
        "sha256": "282675be18ddee1c90884520430d219bd4ed42d6b47a83f8c7a355a33d5a34de"
      },
      "downloads": -1,
      "filename": "django_oauth_login-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "9f0f96e01bce66021b4e57a38cc39614",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 15880,
      "upload_time": "2023-01-31T17:18:39",
      "upload_time_iso_8601": "2023-01-31T17:18:39.754473Z",
      "url": "https://files.pythonhosted.org/packages/53/17/e7eed6de9e893b1e7f36b17f6743116e80aa1877ad35206d11ce74603e8a/django_oauth_login-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}