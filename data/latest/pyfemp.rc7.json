{
  "info": {
    "author": "Sascha F. Maassen",
    "author_email": "sascha.maassen@uni-due.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# **PyFEMP** **Py**thon **F**inite **E**lement **P**rogram\n PyFEMP (Python Finite Element Program) is a simple Finite Element program written in python. Its focus is on simplicity **not** on performance.\n\n![Canti](PyFEMP/assets/canti.png?raw=true \"Dynamic analysis of a cantilever\")\n\n It should be easy to use, to understand and as portable as possible to be used in teaching. We aim to void overhead w.r.t. environmental setup (compiler, libraries, e.t.c. ...) or dealing with complex structures, to focus on the essense of the FEM.\n\n Therefore PyFEMP is written completely in python with the only required modules are *numpy* and *matplotlib*. Furthermore the program provides lsess than 30 commands, including postprocessing and meshing. Python code is really easy to read and write. This holds especially when performance is not critical. In PyFEMP we emprace python loops (easy to read/write but weak in performance), leading to acceptable runtime (<20s) up to ~2000 Elements.\n\n # What it can do:\n * static/dynamic FE analysis\n * 1D, 2D analysis (3D is techniqually possible but visualisation is not supported via matplotlib) \n * implementing user specific elements\n * arbitrary number of nodal degrees of freedom e.g. for coupled FEM\n * nonlinear analysisi via implemented Newton-Raphson\n * visualsiation of element specific postprocessing fields\n * access to all variables e.g. element matrices during the simulation or the linear equation system\n * generation of simple regular meshes in 1D/2D using triangl- and quadrilateral elements (external meshes can be used)\n\n # Install\n\n ## Requirements\n Using PyFEMP requires a python (3.x) installation with *numpy* and *matplotlib*. \n\n We recomend installing *Anaconda*. Its a free python distribution that comes with poth *numpy* and *matplotlib* installed by default and is available for all major computing platforms. \n This should result in the **works out of the box** experience:\n >> https://www.anaconda.com/products/individual\n\n## Installation\nThe package is available to be installed via pip:\n```\npip install --upgrade PyFEMP\n```\n\n# Usage\nOnce succesfully installed you can start by surveying and running the examples, e.g.\n```\npython cook.py\n```\n\n ![Canti](PyFEMP/assets/cook.png?raw=true \"Dynamic analysis of a cantilever\")\n\n## Function Reference\n* functions of `PyFEMP`:\n   + `PyFEMP.FEM_Simulation(ELEMENT)`\n      Used to start a FEM Simlation by returnig the simulation object.\n      The input is an element, providing the nessercary functions.\n\n   + `PyFEMP.msh_line(X0, X1, N, type='U1') -> XI, ELEM`\n      Used to generate a regular mesh in 1D. Returns a list of nodal coordinatex and \n      a matrix of element connectivity.\n\n   + `PyFEMP.msh_rec(X0, X1, N, type='Q1') -> XI, ELEM`\n      Used to generate a regular mesh in 2D for a rectangle, specified\n      by the lower left corner `X0` and upper right `X1`.\n      Returns a list of nodal coordinatex and a matrix of element connectivity.\n\n   + `PyFEMP.msh_conv_quad(X1, X2, X3, X4, N, type='Q1') -> XI, ELEM`\n      Same as `msh_rec` but for an arbitrary convex quadrilateral, specified\n      by vertices `X1, X2, X3, X4`.\n\n## The `PyFEMP.FEM_Simulation` object\nThe `PyFEMP.FEM_Simulation` object represents your FEM Simulation. It provides the\nmethods to e.g. introduce the mesh and boundary conditions i.e the discretized boundary \nvalue problem, but also to perform solution procedures on it.\n\n### FEM_Simulation properties\nPersistant Data provided by the FEM_Simulation object.\n```\nFEM_Simulation.NoElementDim                  # dimensions of this simulation\nFEM_Simulation.NoElementNodes                # number of nodes for each element in the current simulation\nFEM_Simulation.ElementDofNames               # vector with strings of names for nodal degrees of freedom\nFEM_Simulation.NoElementHistory              # length of element history fields in the current simulation\nFEM_Simulation.ElementMaterialNames          # vector with strings of material parameter names           \nFEM_Simulation.ElementPostNames              # vector with strings of postprocessing names\nFEM_Simulation.NoElementMaterial             # number of material parameters for each element\nFEM_Simulation.NoNodeDofs                    # number of degrees of freedom per node in the current simulation\n\n# general program variables\nFEM_Simulation.verbose                        # verbose flag\nFEM_Simulation.verbose_system                 # verbose flag\nFEM_Simulation.state                          # current simulation state identifier\n\n# general discretization variables\nFEM_Simulation.time                          # current time\nFEM_Simulation.dt                            # time increment gone frome last time\nFEM_Simulation.step                          # current step\nFEM_Simulation.lambda_load                   # global load multiplier\nFEM_Simulation.NoElements                    # number of elements\nFEM_Simulation.NoNodes                       # number of nodes\nFEM_Simulation.NoDofs                        # number of degrees of freedom\nFEM_Simulation.XI                            # nodal coordinates\nFEM_Simulation.ELEM                          # element connectivity\nFEM_Simulation.h_n                           # previous history field\nFEM_Simulation.h_t                           # current history field\n\n# initialize fields for boundary conditions\nFEM_Simulation.NBC = []                       # python list to collect natural boundary conditions before analysis\nFEM_Simulation.NBC_Indexes = 0                # vector of indexes to the external load vector where a nbc is present\nFEM_Simulation.NBC_Values = 0                 # vector of values to be placed in the external load vector for each nbc index\nFEM_Simulation.EBC = []                       # python list to collect essential boundary conditions before analysis\nFEM_Simulation.EBC_Indexes = 0                # vector of indexes of constrained degrees of freedom\nFEM_Simulation.EBC_Values = 0                 # vector of values for each constrained degree of freedom\nFEM_Simulation.NoEquations = 0                # number of all unconstrained dofs\n\n# element discretization parameter\nFEM_Simulation.ElementMaterial = []           # list of material parameter\nFEM_Simulation.h_n = 0                        # vector of element history field of t=t   (previous)\nFEM_Simulation.h_t = 0                        # vector of element history field of t=t+1 (current)\nFEM_Simulation.DI = 0                         # vector of degrees of freedom\nFEM_Simulation.R_ext = 0                      # vector of external forces\n```\n\n### FEM_Simulation functions\n\n**CallElementPost**\nCalls the postprocessing routine Elmt_Post for element i with the current Simulation fields.\nReturns first a list of all elment node indexes and next the vector with the requested PostName\ndata, one scalar for each node.\n```\nCallElementPost(self, i, PostName) -> elmt_nodes, r_post_e\n```\n\n**PostProcessing**\nReturns a list of nodes and a list of \none requested scalar for each of these nodes.\nThe requested scalar is computed from the element \nsubroutine \"Elmt_Post\" by PostName.\nBy default, the PostName field is returned for all mesh nodes.\nOptionally, specify arbitrary positions for which to evaluate the PostNames.\nx -> matrix that contains the nodal positions\np -> vector of values for each node\n```\nPostProcessing(\"UX\") -> x, p\nPostProcessing(\"UX\", [0.0, 0.0]) -> [0.0, 0.0], p\nPostProcessing(\"UX\", [[0.0, 0.0],...,[1.0, 0.0]]) -> [[0.0, 0.0],...,[1.0, 0.0]], p\n```\n\n\n## Using external meshes\nExternal meshes can be used. Required is the input to the Add_Mesh command, as schown in the example ```plate.py```.\nFor PyFEMP it does not matter where the data come from,\nonce they are available in python they can be used.\n**Attention**: The element connectivity requires indexing starting with **0**.\nAn example on exporting a T1 mesh from AceFEM/Mathematica is:\n```\n<< AceFEM`;\nSMTInputData[];\nSMTAddDomain[{\"\\[CapitalOmega]\", {\"ML:\", \"SE\", \"PE\", \"T1\", \"DF\", \"LE\",\n     \"T1\", \"D\", \"Hooke\"}, {\"E *\" -> 1000, \"\\[Nu] *\" -> 0.3}}];\nmesh = ToElementMesh[\n   ImplicitRegion[x^2 + y^2 > 0.5, {x, y}], {{-1, 1}, {-1, 1}}, \n   \"MeshOrder\" -> 1, MaxCellMeasure -> 3, AccuracyGoal -> 1];\nSMTAddMesh[mesh, \"\\[CapitalOmega]\"];\nSMTAnalysis[];\nSMTShowMesh[]\nXI = SMTNodeData[All, \"X\"];\nElmt = SMTElements[[;; , 3]];\nExport[\"path/nodes.csv\", XI];\nExport[\"path/elmt.csv\", Elmt - 1];\n```\nNotice the ```-1``` in the export for the element file, which translates to **0** indexing.\n\n## Developer Notes\nHow to build the PyPi package from source, and upload/update it on PyPi to make it available via pip:\n\nA version difference need to be specified in the ```setup.py``` file.\nCurrently, the files included in the package are detected automatically during build, as part of the standard python module structure.\nThe commands to re-build the package are:\n```\npython -m build\n```\nNow the packages are created.\nTo upload the package do:\n```\npython -m twine upload dist/*\n```\nand use the PyPi login as requested.\n\nThe whole process sometimes require deleting previous build folders or de-installation of previous PyFEMP version.\n\nIt is also possible to install the local repository after it has been build via\n```\npython -m pip install .\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.uni-due.de/mechanik/py_femp",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyFEMP",
    "package_url": "https://pypi.org/project/PyFEMP/",
    "platform": "",
    "project_url": "https://pypi.org/project/PyFEMP/",
    "project_urls": {
      "Homepage": "https://git.uni-due.de/mechanik/py_femp",
      "Wiki": "https://git.uni-due.de/mechanik/py_femp/-/wikis/home"
    },
    "release_url": "https://pypi.org/project/PyFEMP/0.0.9/",
    "requires_dist": [
      "numpy",
      "matplotlib"
    ],
    "requires_python": ">=3.6",
    "summary": "A python FEM solver for educational purposes.",
    "version": "0.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11491427,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d41c02ea8ab753487426f32229c0ff4f99dc58747a2eba7078505f0d401b82b",
          "md5": "c79d9f79fe5ad7e16d6d876dac9355ef",
          "sha256": "17e33191b43b0997dd741e8a6cf6bbbc4e05260ebb6fe58febc78a3ccf6e3b25"
        },
        "downloads": -1,
        "filename": "PyFEMP-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c79d9f79fe5ad7e16d6d876dac9355ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9710,
        "upload_time": "2020-09-29T08:55:59",
        "upload_time_iso_8601": "2020-09-29T08:55:59.837807Z",
        "url": "https://files.pythonhosted.org/packages/0d/41/c02ea8ab753487426f32229c0ff4f99dc58747a2eba7078505f0d401b82b/PyFEMP-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe8a01a6b636adcdc2686785ebb15b4e9944ac3dfd6e34a8aa6c366d5ed2edde",
          "md5": "97fdff4eac2c588170d5191442ee25c2",
          "sha256": "ca52f5f8e710a9f5865e41a1cb326efa9d6f9a54e0899be5b2a83c15bee80379"
        },
        "downloads": -1,
        "filename": "PyFEMP-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "97fdff4eac2c588170d5191442ee25c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10095,
        "upload_time": "2020-09-29T08:56:02",
        "upload_time_iso_8601": "2020-09-29T08:56:02.098855Z",
        "url": "https://files.pythonhosted.org/packages/fe/8a/01a6b636adcdc2686785ebb15b4e9944ac3dfd6e34a8aa6c366d5ed2edde/PyFEMP-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a166b4b1d3ac1322c50b7f7dac89f6d832fc9b0984f94ab1d048af11635b1475",
          "md5": "826550e25003e0422344c78901946a81",
          "sha256": "2e3def0b12bf50ca92f5f4f30e037891bfcf8d2c671ac2a019470e1ca327a936"
        },
        "downloads": -1,
        "filename": "PyFEMP-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "826550e25003e0422344c78901946a81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25309,
        "upload_time": "2020-09-29T13:23:55",
        "upload_time_iso_8601": "2020-09-29T13:23:55.053088Z",
        "url": "https://files.pythonhosted.org/packages/a1/66/b4b1d3ac1322c50b7f7dac89f6d832fc9b0984f94ab1d048af11635b1475/PyFEMP-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4428a65539d9e672fdf0fa34e35c586b0c334ec5f2a8c30d0f906b6e464d523",
          "md5": "21e578a8daea870f4fbabf5f35ad57eb",
          "sha256": "8ba7f235b6040fc39dc0f4f281c37421f37f47e851dade3b2a632f9ff6341b0a"
        },
        "downloads": -1,
        "filename": "PyFEMP-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "21e578a8daea870f4fbabf5f35ad57eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16600,
        "upload_time": "2020-09-29T13:23:56",
        "upload_time_iso_8601": "2020-09-29T13:23:56.302779Z",
        "url": "https://files.pythonhosted.org/packages/a4/42/8a65539d9e672fdf0fa34e35c586b0c334ec5f2a8c30d0f906b6e464d523/PyFEMP-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df11954236f44fa52db88f9698a274e4dcfe1f32756c1d2cd0bce4dbdbf277b7",
          "md5": "95935e8649f1884c4a91a57f1b0d0157",
          "sha256": "cd5ffe3d43b2b4a346178c14c8029a4a5d5443f99ed586e21add1dc4858652fe"
        },
        "downloads": -1,
        "filename": "PyFEMP-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95935e8649f1884c4a91a57f1b0d0157",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25758,
        "upload_time": "2021-09-17T07:07:29",
        "upload_time_iso_8601": "2021-09-17T07:07:29.125702Z",
        "url": "https://files.pythonhosted.org/packages/df/11/954236f44fa52db88f9698a274e4dcfe1f32756c1d2cd0bce4dbdbf277b7/PyFEMP-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b03667b1eabf956b397cc9d98844f3e570f8ff76b7d5216ff4c24bae89475cfb",
          "md5": "04315b743dcaea6b8bb6ba7522faab45",
          "sha256": "7adea6e99bea30ebedcfa0404b08d2279997af2e9ad3adbf4d599b63cf1e8054"
        },
        "downloads": -1,
        "filename": "PyFEMP-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "04315b743dcaea6b8bb6ba7522faab45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17485,
        "upload_time": "2021-09-17T06:43:57",
        "upload_time_iso_8601": "2021-09-17T06:43:57.627709Z",
        "url": "https://files.pythonhosted.org/packages/b0/36/67b1eabf956b397cc9d98844f3e570f8ff76b7d5216ff4c24bae89475cfb/PyFEMP-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d67155ed86df5c4ff42035c09262e232abf15a9656ffec2e0827c92dd76a87e",
          "md5": "90d257dc2b66c5c21cf6e2576e2675a6",
          "sha256": "ffd237c22d455e72db0c651afe3750f23c16c7b52ad0894e6f869c9b800aea83"
        },
        "downloads": -1,
        "filename": "PyFEMP-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90d257dc2b66c5c21cf6e2576e2675a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25760,
        "upload_time": "2021-09-17T07:11:51",
        "upload_time_iso_8601": "2021-09-17T07:11:51.992977Z",
        "url": "https://files.pythonhosted.org/packages/0d/67/155ed86df5c4ff42035c09262e232abf15a9656ffec2e0827c92dd76a87e/PyFEMP-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eadf7748e570a11f1627e1771ccbef026dff4d1b4e6977e5ab44a7d277fdd91f",
          "md5": "36341c4c22522f79fbfcb27f13101a21",
          "sha256": "b8fede0d9ec4528a2702af07c65d062e6cac8c8649582959f107e0eba480fa32"
        },
        "downloads": -1,
        "filename": "PyFEMP-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "36341c4c22522f79fbfcb27f13101a21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18186,
        "upload_time": "2021-09-17T07:11:53",
        "upload_time_iso_8601": "2021-09-17T07:11:53.550498Z",
        "url": "https://files.pythonhosted.org/packages/ea/df/7748e570a11f1627e1771ccbef026dff4d1b4e6977e5ab44a7d277fdd91f/PyFEMP-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "313f3fefe6d87960e9bb43481040a816e3a2174353d7abc0a97fc873f7992fe4",
          "md5": "8467b951327cc9c14be70d15bbf8cd1d",
          "sha256": "e459de7c318b78c5173c1dd87f8c76b16b2e23396048cf3ec0a0f31757af1228"
        },
        "downloads": -1,
        "filename": "PyFEMP-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8467b951327cc9c14be70d15bbf8cd1d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49526,
        "upload_time": "2021-09-17T11:43:23",
        "upload_time_iso_8601": "2021-09-17T11:43:23.975384Z",
        "url": "https://files.pythonhosted.org/packages/31/3f/3fefe6d87960e9bb43481040a816e3a2174353d7abc0a97fc873f7992fe4/PyFEMP-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e0db217431e853d35dc376e97b3d448c4ead0fa9236e2b023b5f825e49634da",
          "md5": "91e983c5eb7727f49c7c1f134353c7dd",
          "sha256": "892318daaf3ba762810ae4e17c292b24946ed55da8c55214a7844360085d7682"
        },
        "downloads": -1,
        "filename": "PyFEMP-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "91e983c5eb7727f49c7c1f134353c7dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 984115,
        "upload_time": "2021-09-17T11:43:26",
        "upload_time_iso_8601": "2021-09-17T11:43:26.082801Z",
        "url": "https://files.pythonhosted.org/packages/0e/0d/b217431e853d35dc376e97b3d448c4ead0fa9236e2b023b5f825e49634da/PyFEMP-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1172847621aa136edf02d056fc7aeb45a2c63e321410450639edf90e0d9e529",
          "md5": "f3943e3fe828441a3b5dc76037e489c7",
          "sha256": "4beb9c8b7290e16b21c5e9bbfe39760cd4bec5fb25e0ec106fe4552553bfaa5c"
        },
        "downloads": -1,
        "filename": "PyFEMP-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3943e3fe828441a3b5dc76037e489c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49786,
        "upload_time": "2021-09-17T13:30:15",
        "upload_time_iso_8601": "2021-09-17T13:30:15.666786Z",
        "url": "https://files.pythonhosted.org/packages/f1/17/2847621aa136edf02d056fc7aeb45a2c63e321410450639edf90e0d9e529/PyFEMP-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "046520621681513ca2f374851ae0ae7c5dc3554830d1b0511daae44b5e2c105b",
          "md5": "b04a8bcddf4191f7a7129733340e2d45",
          "sha256": "b192856015bb1ba898653b1f800b0dc979ad66c8e5fc216b6172cc76f24e0aa8"
        },
        "downloads": -1,
        "filename": "PyFEMP-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b04a8bcddf4191f7a7129733340e2d45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43915,
        "upload_time": "2021-09-17T13:30:17",
        "upload_time_iso_8601": "2021-09-17T13:30:17.102789Z",
        "url": "https://files.pythonhosted.org/packages/04/65/20621681513ca2f374851ae0ae7c5dc3554830d1b0511daae44b5e2c105b/PyFEMP-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e19eb1d44693ab77dda45e6d999860f0b643b158d3c4b1c6304f8e4293b35a10",
          "md5": "e4676ca7546ac458ce9f2d2a6a53faa4",
          "sha256": "3f83dc8691ab4d13889adaebd31a56d12212ab1e0ddfbf197484431ad933d3b1"
        },
        "downloads": -1,
        "filename": "PyFEMP-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4676ca7546ac458ce9f2d2a6a53faa4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 53950,
        "upload_time": "2021-09-19T13:04:48",
        "upload_time_iso_8601": "2021-09-19T13:04:48.327903Z",
        "url": "https://files.pythonhosted.org/packages/e1/9e/b1d44693ab77dda45e6d999860f0b643b158d3c4b1c6304f8e4293b35a10/PyFEMP-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eef5ae7a931eaf6c0a13ecca1b670bab06b60c5d5691e8d681bcfb6b0569bc47",
          "md5": "57b60a9a19d30d86037ea29e46c1205d",
          "sha256": "d037f73dd2d98a20fadb8b6513b858f272ccb579d47d8af04b7df1db395d01d6"
        },
        "downloads": -1,
        "filename": "PyFEMP-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "57b60a9a19d30d86037ea29e46c1205d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 46506,
        "upload_time": "2021-09-19T13:04:49",
        "upload_time_iso_8601": "2021-09-19T13:04:49.540269Z",
        "url": "https://files.pythonhosted.org/packages/ee/f5/ae7a931eaf6c0a13ecca1b670bab06b60c5d5691e8d681bcfb6b0569bc47/PyFEMP-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e19eb1d44693ab77dda45e6d999860f0b643b158d3c4b1c6304f8e4293b35a10",
        "md5": "e4676ca7546ac458ce9f2d2a6a53faa4",
        "sha256": "3f83dc8691ab4d13889adaebd31a56d12212ab1e0ddfbf197484431ad933d3b1"
      },
      "downloads": -1,
      "filename": "PyFEMP-0.0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e4676ca7546ac458ce9f2d2a6a53faa4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 53950,
      "upload_time": "2021-09-19T13:04:48",
      "upload_time_iso_8601": "2021-09-19T13:04:48.327903Z",
      "url": "https://files.pythonhosted.org/packages/e1/9e/b1d44693ab77dda45e6d999860f0b643b158d3c4b1c6304f8e4293b35a10/PyFEMP-0.0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eef5ae7a931eaf6c0a13ecca1b670bab06b60c5d5691e8d681bcfb6b0569bc47",
        "md5": "57b60a9a19d30d86037ea29e46c1205d",
        "sha256": "d037f73dd2d98a20fadb8b6513b858f272ccb579d47d8af04b7df1db395d01d6"
      },
      "downloads": -1,
      "filename": "PyFEMP-0.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "57b60a9a19d30d86037ea29e46c1205d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 46506,
      "upload_time": "2021-09-19T13:04:49",
      "upload_time_iso_8601": "2021-09-19T13:04:49.540269Z",
      "url": "https://files.pythonhosted.org/packages/ee/f5/ae7a931eaf6c0a13ecca1b670bab06b60c5d5691e8d681bcfb6b0569bc47/PyFEMP-0.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}