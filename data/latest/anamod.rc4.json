{
  "info": {
    "author": "Akshay Sood",
    "author_email": "sood.iitd@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "========\nanamod\n========\n\n.. image:: https://app.travis-ci.com/cloudbopper/anamod.svg\n        :target: https://app.travis-ci.com/github/cloudbopper/anamod\n        :alt: Build status\n\n.. image:: https://readthedocs.org/projects/anamod/badge/?version=latest\n        :target: https://anamod.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://codecov.io/gh/cloudbopper/anamod/branch/master/graph/badge.svg?token=5XLhbjehGp\n      :target: https://codecov.io/gh/cloudbopper/anamod\n      :alt: Code Coverage\n\n.. image:: https://badge.fury.io/py/anamod.svg\n    :target: https://pypi.org/project/anamod/\n    :alt: PyPI - Package Version\n\n.. image:: https://img.shields.io/pypi/pyversions/anamod\n    :target: https://pypi.org/project/anamod/\n    :alt: PyPI - Python Version\n\n--------\nOverview\n--------\n\n``anamod`` is a python library that implements model-agnostic algorithms for the feature importance analysis of trained black-box models.\nIt is designed to serve the larger goal of interpretable machine learning by using different abstractions over features to interpret\nmodels. At a high level, ``anamod`` implements the following algorithms:\n\n* Given a learned model and a hierarchy over features, (i) it tests feature groups, in addition to base features, and tries to determine\n  the level of resolution at which important features can be determined, (ii) uses hypothesis testing to rigorously assess the effect of\n  each feature on the model's loss, (iii) employs a hierarchical approach to control the false discovery rate when testing feature groups\n  and individual base features for importance, and (iv) uses hypothesis testing to identify important interactions among features and feature\n  groups. More details may be found in the following paper::\n\n    Lee, Kyubin, Akshay Sood, and Mark Craven. 2019. “Understanding Learned Models by\n    Identifying Important Features at the Right Resolution.”\n    In Proceedings of the AAAI Conference on Artificial Intelligence, 33:4155–63.\n    https://doi.org/10.1609/aaai.v33i01.33014155.\n\n* Given a learned temporal or sequence model, it identifies its important features, windows as well as its dependence on temporal ordering.\n  More details may be found in the following paper::\n\n    Sood, Akshay, and Mark Craven. “Feature Importance Explanations for Temporal\n    Black-Box Models.” ArXiv:2102.11934 [Cs, Stat], February 23, 2021.\n    http://arxiv.org/abs/2102.11934.\n\n\n``anamod`` supersedes the library ``mihifepe``, based on the first paper\n(https://github.com/Craven-Biostat-Lab/mihifepe).\n``mihifepe`` is maintained for legacy reasons but will not receive further updates.\n\n``anamod`` uses the library ``synmod`` to generate synthetic data, including time-series data, to test and validate the algorithms\n(https://github.com/cloudbopper/synmod).\n\n\n-----\nUsage\n-----\n\nSee detailed API documentation here_. Here are some examples of how the package may be used:\n\nAnalyzing a scikit-learn binary classification model::\n\n    # Train a model\n    from sklearn.linear_model import LogisticRegression\n    from sklearn import datasets\n    model = LogisticRegression()\n    dataset = datasets.load_breast_cancer()\n    X, y, feature_names = (dataset.data, dataset.target, dataset.feature_names)\n    model.fit(X, y)\n\n    # Analyze the model\n    import anamod\n    output_dir = \"example_sklearn_classifier\"\n    model.predict = lambda X: model.predict_proba(X)[:, 1]  # To return a vector of probabilities when model.predict is called\n    analyzer = anamod.ModelAnalyzer(model, X, y, feature_names=feature_names, output_dir=output_dir)\n    features = analyzer.analyze()\n\n    # Show list of important features sorted in decreasing order of importance score, along with importance score and model coefficient\n    from pprint import pprint\n    important_features = sorted([feature for feature in features if feature.important], key=lambda feature: feature.importance_score, reverse=True)\n    pprint([(feature.name, feature.importance_score, model.coef_[0][feature.idx[0]]) for feature in important_features])\n\nAnalyzing a scikit-learn regression model::\n\n    # Train a model\n    from sklearn.linear_model import Ridge\n    from sklearn import datasets\n    model = Ridge(alpha=1e-2)\n    dataset = datasets.load_diabetes()\n    X, y, feature_names = (dataset.data, dataset.target, dataset.feature_names)\n    model.fit(X, y)\n\n    # Analyze the model\n    import anamod\n    output_dir = \"example_sklearn_regressor\"\n    analyzer = anamod.ModelAnalyzer(model, X, y, feature_names=feature_names, output_dir=output_dir)\n    features = analyzer.analyze()\n\n    # Show list of important features sorted in decreasing order of importance score, along with importance score and model coefficient\n    from pprint import pprint\n    important_features = sorted([feature for feature in features if feature.important], key=lambda feature: feature.importance_score, reverse=True)\n    pprint([(feature.name, feature.importance_score, model.coef_[feature.idx[0]]) for feature in important_features])\n\nThe outputs can be visualized in other ways as well. To show a table indicating feature importance::\n\n    import subprocess\n    subprocess.run([\"open\", f\"{output_dir}/feature_importance.csv\"], check=True)\n\n.. image:: https://github.com/cloudbopper/anamod/blob/master/docs/images/sklearn-table.png?raw=true\n\nTo visualize the feature importance hierarchy (since no hierarchy is provided in this case, a flat hierarchy is automatically created)::\n\n    subprocess.run([\"open\", f\"{output_dir}/feature_importance_hierarchy.png\"], check=True)\n\n.. image:: https://github.com/cloudbopper/anamod/blob/master/docs/images/sklearn-tree.png?raw=true\n\nAnalyzing a synthentic model with a hierarchy generated using hierarchical clustering::\n\n    # Generate synthetic data and model\n    import synmod\n    output_dir = \"example_synthetic_non_temporal\"\n    num_features = 10\n    synthesized_features, X, model = synmod.synthesize(output_dir=output_dir, num_instances=100, seed=100,\n                                                        num_features=num_features, fraction_relevant_features=0.5,\n                                                        synthesis_type=\"static\", model_type=\"regressor\")\n    y = model.predict(X, labels=True)\n\n    # Generate hierarchy using hierarchical clustering\n    from types import SimpleNamespace\n    from anamod.simulation import simulation\n    args = SimpleNamespace(hierarchy_type=\"cluster_from_data\", contiguous_node_names=True, num_features=num_features)\n    feature_hierarchy, _ = simulation.gen_hierarchy(args, X)\n\n    # Analyze the model\n    from anamod import ModelAnalyzer\n    analyzer = ModelAnalyzer(model, X, y, feature_hierarchy=feature_hierarchy, output_dir=output_dir)\n    features = analyzer.analyze()\n\n    # Visualize feature importance hierarchy\n    import subprocess\n    subprocess.run([\"open\", f\"{output_dir}/feature_importance_hierarchy.png\"], check=True)\n\n.. image:: https://github.com/cloudbopper/anamod/blob/master/docs/images/synthetic-tree.png?raw=true\n\nAnalyzing a synthetic temporal model::\n\n    # Generate synthetic data and model\n    import synmod\n    output_dir = \"example_synthetic_temporal\"\n    num_features = 10\n    synthesized_features, X, model = synmod.synthesize(output_dir=output_dir, num_instances=100, seed=100,\n                                                        num_features=num_features, fraction_relevant_features=0.5,\n                                                        synthesis_type=\"temporal\", sequence_length=20, model_type=\"regressor\")\n    y = model.predict(X, labels=True)\n\n    # Analyze the model\n    from anamod import TemporalModelAnalyzer\n    analyzer = TemporalModelAnalyzer(model, X, y, output_dir=output_dir)\n    features = analyzer.analyze()\n\n    # Visualize feature importance for temporal windows\n    import subprocess\n    subprocess.run([\"open\", f\"{output_dir}/feature_importance_windows.png\"], check=True)\n\n.. image:: https://github.com/cloudbopper/anamod/blob/master/docs/images/synthetic-windows.png?raw=true\n\nThe package supports parallelization using HTCondor_, which can significantly improve running time for large models.\nIf HTCondor is available on your system, you can enable it by providing the \"condor\" keyword argument. The python\npackage ``htcondor`` must be installed (see Installation). Additional condor options may be viewed in the API documentation::\n\n    analyzer = anamod.ModelAnalyzer(model, X, y, condor=True)\n\n.. _here: https://anamod.readthedocs.io/en/latest/usage.html\n.. _HTCondor: https://research.cs.wisc.edu/htcondor/\n\n------------\nInstallation\n------------\n\nThe recommended installation method is via `virtual environments`_ and pip_.\nIn addition, you also need graphviz_ installed on your system to visualize feature importance hierarchies.\n\nTo install the latest stable release::\n\n    pip install anamod\n\nOr to install the latest development version from GitHub::\n\n    pip install git+https://github.com/cloudbopper/anamod.git@master#egg=anamod\n\nIf HTCondor is available on your platform, install the ``htcondor`` PyPi package using pip. To enable it, see Usage::\n\n    pip install htcondor\n\n.. _pip: https://pip.pypa.io/\n.. _virtual environments: https://docs.python.org/3/tutorial/venv.html\n.. _graphviz: https://www.graphviz.org/\n\n-----------\nDevelopment\n-----------\n\nCollaborations and contributions are welcome. If you are interested in helping with development,\nplease take a look at https://anamod.readthedocs.io/en/latest/contributing.html.\n\n-------\nLicense\n-------\n\n``anamod`` is free, open source software, released under the MIT license. See LICENSE_ for details.\n\n.. _LICENSE: https://github.com/cloudbopper/anamod/blob/master/LICENSE\n\n-------\nContact\n-------\n\n`Akshay Sood`_\n\n.. _Akshay Sood: https://github.com/cloudbopper\n\n\n=========\nChangelog\n=========\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cloudbopper/anamod",
    "keywords": "anamod",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "anamod",
    "package_url": "https://pypi.org/project/anamod/",
    "platform": null,
    "project_url": "https://pypi.org/project/anamod/",
    "project_urls": {
      "Homepage": "https://github.com/cloudbopper/anamod"
    },
    "release_url": "https://pypi.org/project/anamod/0.1.4/",
    "requires_dist": [
      "anytree",
      "cloudpickle",
      "h5py",
      "matplotlib",
      "numpy (>=1.19.0)",
      "scikit-learn",
      "scipy",
      "seaborn",
      "sympy",
      "synmod",
      "xxhash"
    ],
    "requires_python": ">= 3.6",
    "summary": "Feature Importance Analysis of Models",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13260353,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "072261a3302af83b4615d4ef9c786c912d6fb1cce10a182273490f9d0ebd6cf8",
          "md5": "acfc95c621c023486bc440dd5016fd44",
          "sha256": "7a825f8dff9aabfed9f08eb6831ded4973e20eff12d80f4b5dc08885fa253618"
        },
        "downloads": -1,
        "filename": "anamod-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "acfc95c621c023486bc440dd5016fd44",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">= 3.6",
        "size": 106984,
        "upload_time": "2020-12-09T01:41:57",
        "upload_time_iso_8601": "2020-12-09T01:41:57.012737Z",
        "url": "https://files.pythonhosted.org/packages/07/22/61a3302af83b4615d4ef9c786c912d6fb1cce10a182273490f9d0ebd6cf8/anamod-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f9e12f9ff2a4a50dfee61c94af4afbdfb08333ab8b320858e145ab5809361bc",
          "md5": "2e8b3d0abf8c2c2561f44b87bb399a95",
          "sha256": "1cbe53b476a38f6095de7f7ea4af09dedc686aed3a5168d7d910407140ce29a3"
        },
        "downloads": -1,
        "filename": "anamod-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2e8b3d0abf8c2c2561f44b87bb399a95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 81868,
        "upload_time": "2020-12-09T01:41:58",
        "upload_time_iso_8601": "2020-12-09T01:41:58.556939Z",
        "url": "https://files.pythonhosted.org/packages/2f/9e/12f9ff2a4a50dfee61c94af4afbdfb08333ab8b320858e145ab5809361bc/anamod-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e81a8fc657ee0dec526e14e1214d38093a5c00016fdea55fa41af22e4457eba",
          "md5": "f8af2edb2234a97bff06f509365b57eb",
          "sha256": "8338c6c817b510cc9ae5818df492d4920ee7cbc125920e27f2c8117ffcd94e8c"
        },
        "downloads": -1,
        "filename": "anamod-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8af2edb2234a97bff06f509365b57eb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">= 3.6",
        "size": 93028,
        "upload_time": "2020-12-24T20:10:26",
        "upload_time_iso_8601": "2020-12-24T20:10:26.306148Z",
        "url": "https://files.pythonhosted.org/packages/7e/81/a8fc657ee0dec526e14e1214d38093a5c00016fdea55fa41af22e4457eba/anamod-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83c9ce04aacff9849a22d90b40c6173507d87b99a643dc059a256e525dad88cc",
          "md5": "8e3a13f3770adc8f57695a195eff725b",
          "sha256": "c1875a61bd53251055c068d9c0760175a1c869bba0a637a3ff4ff9864a98c206"
        },
        "downloads": -1,
        "filename": "anamod-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8e3a13f3770adc8f57695a195eff725b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 431860,
        "upload_time": "2020-12-24T20:10:27",
        "upload_time_iso_8601": "2020-12-24T20:10:27.307868Z",
        "url": "https://files.pythonhosted.org/packages/83/c9/ce04aacff9849a22d90b40c6173507d87b99a643dc059a256e525dad88cc/anamod-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "463a8d45476a205a00f80272066f132090fc0e929de67af9328f66cad6bd9d82",
          "md5": "6fbcad8007c4256d110ed4d6a57ac254",
          "sha256": "8de9d5b01a8c63311f08982e9721aba256951a667d738f8dff972c2326c85de3"
        },
        "downloads": -1,
        "filename": "anamod-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6fbcad8007c4256d110ed4d6a57ac254",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">= 3.6",
        "size": 100053,
        "upload_time": "2021-11-04T16:01:15",
        "upload_time_iso_8601": "2021-11-04T16:01:15.351865Z",
        "url": "https://files.pythonhosted.org/packages/46/3a/8d45476a205a00f80272066f132090fc0e929de67af9328f66cad6bd9d82/anamod-0.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdc8c32d416515908a193abd86f9e67fd0d0df4fda8a0cec95bab2df121e7afb",
          "md5": "c03c31aa1fd3f018a292b6bfb8ba1065",
          "sha256": "dd7e53d7f6e1f97a62db81de5d7908b81b8c6665ecd2611953e8042657bc3952"
        },
        "downloads": -1,
        "filename": "anamod-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c03c31aa1fd3f018a292b6bfb8ba1065",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 440633,
        "upload_time": "2021-11-04T16:01:17",
        "upload_time_iso_8601": "2021-11-04T16:01:17.824898Z",
        "url": "https://files.pythonhosted.org/packages/fd/c8/c32d416515908a193abd86f9e67fd0d0df4fda8a0cec95bab2df121e7afb/anamod-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb8bd6330668e023dda2baa7c26c2b48d7fec1e18b684b5398ede49142ab0c49",
          "md5": "ff32d6ac3c1f66c1280b4e812a9e6eaf",
          "sha256": "cfb448387e9b6af6ee6fe2a76f4f43d99319ae718f3c18eeca0582e61d686e63"
        },
        "downloads": -1,
        "filename": "anamod-0.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff32d6ac3c1f66c1280b4e812a9e6eaf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">= 3.6",
        "size": 99831,
        "upload_time": "2022-03-23T01:07:02",
        "upload_time_iso_8601": "2022-03-23T01:07:02.502002Z",
        "url": "https://files.pythonhosted.org/packages/eb/8b/d6330668e023dda2baa7c26c2b48d7fec1e18b684b5398ede49142ab0c49/anamod-0.1.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15a4f1665eeefaa9cf4b44d3fe26b8e16e50dae029c4534a9e447a64f48ab70f",
          "md5": "de6df89f0e75de2570b3a13923bae12f",
          "sha256": "a9f1f5f7b12cff0c6fa65a5a7062d55ca497e130b1841a92271667dc4eda1a03"
        },
        "downloads": -1,
        "filename": "anamod-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "de6df89f0e75de2570b3a13923bae12f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 440115,
        "upload_time": "2022-03-23T01:07:03",
        "upload_time_iso_8601": "2022-03-23T01:07:03.681825Z",
        "url": "https://files.pythonhosted.org/packages/15/a4/f1665eeefaa9cf4b44d3fe26b8e16e50dae029c4534a9e447a64f48ab70f/anamod-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb8bd6330668e023dda2baa7c26c2b48d7fec1e18b684b5398ede49142ab0c49",
        "md5": "ff32d6ac3c1f66c1280b4e812a9e6eaf",
        "sha256": "cfb448387e9b6af6ee6fe2a76f4f43d99319ae718f3c18eeca0582e61d686e63"
      },
      "downloads": -1,
      "filename": "anamod-0.1.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ff32d6ac3c1f66c1280b4e812a9e6eaf",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">= 3.6",
      "size": 99831,
      "upload_time": "2022-03-23T01:07:02",
      "upload_time_iso_8601": "2022-03-23T01:07:02.502002Z",
      "url": "https://files.pythonhosted.org/packages/eb/8b/d6330668e023dda2baa7c26c2b48d7fec1e18b684b5398ede49142ab0c49/anamod-0.1.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15a4f1665eeefaa9cf4b44d3fe26b8e16e50dae029c4534a9e447a64f48ab70f",
        "md5": "de6df89f0e75de2570b3a13923bae12f",
        "sha256": "a9f1f5f7b12cff0c6fa65a5a7062d55ca497e130b1841a92271667dc4eda1a03"
      },
      "downloads": -1,
      "filename": "anamod-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "de6df89f0e75de2570b3a13923bae12f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.6",
      "size": 440115,
      "upload_time": "2022-03-23T01:07:03",
      "upload_time_iso_8601": "2022-03-23T01:07:03.681825Z",
      "url": "https://files.pythonhosted.org/packages/15/a4/f1665eeefaa9cf4b44d3fe26b8e16e50dae029c4534a9e447a64f48ab70f/anamod-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}