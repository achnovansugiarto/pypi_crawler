{
  "info": {
    "author": "henryyang42",
    "author_email": "henryyang42@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Chinese (Traditional)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Text Processing",
      "Topic :: Text Processing :: Indexing",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "Ckip Segmenter\n==============\nA Python client for the Chinese Word Segmentation System (see `ckipsvr.iis.sinica.edu.tw <http://ckipsvr.iis.sinica.edu.tw/>`_) provided by Academia Sinica Chinese Knowledge and Information Processing (CKIP) Group. The core was adapted from `amigcamel/PyCCS <https://github.com/amigcamel/PyCCS>`_.\n\nInstallation\n============\n\nSimply run the following command:\n\n.. code-block:: sh\n\n    pip install ckip-segmenter\n\nIf ``pip`` is not available, you can also `download it manually from PyPI <https://pypi.python.org/pypi/ckip-segmenter>`_.\n\n*Note: Currently only Python 3+ is supported.*\n\nUsage\n=====\n\nSummon a ``CkipSegmenter``\n-----------------------------------------------------------\nIn[1]:\n\n.. code-block:: python\n\n    from ckip import CkipSegmenter\n    segmenter = CkipSegmenter()\n\n    text = '詞是最小有意義且可以自由使用的語言單位。任何語言處理的系統都必須先能分辨文本中的詞才能進行進一步的處理'\n    corpus = [\n        '詞是最小有意義且可以自由使用的語言單位',\n        '任何語言處理的系統都必須先能分辨文本中的詞才能進行進一步的處理',\n        '例如機器翻譯、語言分析、語言了解、資訊抽取',\n        '因此中文自動分詞的工作成了語言處理不可或缺的技術',\n        '基本上自動分詞多利用詞典中收錄的詞和文本做比對',\n        '找出可能包含的詞，由於存在歧義的切分結果',\n        '因此多數的中文分詞程式多討論如何解決分詞歧義的問題',\n        '而較少討論如何處理詞典中未收錄的詞出現的問題（新詞如何辨認）',\n    ]\n\nThe result object contains ``res``, ``tok`` and ``pos``\n-------------------------------------------------------\nIn[2]:\n\n.. code-block:: python\n\n    result = segmenter.seg(text)\n    # result.res is a list of tuples contain a token and its pos-tag.\n    print('result.res: {}\\n'.format(result.res))\n\n    # result.tok and result.pos contains only tokens and pos-tags respectively.\n    print('result.tok: {}\\n'.format(result.tok))\n    print('result.pos: {}\\n'.format(result.pos))\n\n\nOut[2]:\n\n.. parsed-literal::\n\n    result.res: [('詞', 'Na'), ('是', 'SHI'), ('最', 'Dfa'), ('小', 'VH'), ('有', 'V_2'), ('意義', 'Na'), ('且', 'Cbb'), ('可以', 'D'), ('自由', 'VH'), ('使用', 'VC'), ('的', 'DE'), ('語言', 'Na'), ('單位', 'Na'), ('。', 'PERIODCATEGORY'), ('任何', 'Neqa'), ('語言', 'Na'), ('處理', 'VC'), ('的', 'DE'), ('系統', 'Na'), ('都', 'D'), ('必須', 'D'), ('先能', 'Nb'), ('分辨', 'VE'), ('文本', 'Nb'), ('中', 'Ng'), ('的', 'DE'), ('詞', 'Na'), ('才能', 'Na'), ('進行', 'VC'), ('進一步', 'D'), ('的', 'DE'), ('處理', 'VC')]\n\n    result.tok: ['詞', '是', '最', '小', '有', '意義', '且', '可以', '自由', '使用', '的', '語言', '單位', '。', '任何', '語言', '處理', '的', '系統', '都', '必須', '先能', '分辨', '文本', '中', '的', '詞', '才能', '進行', '進一步', '的', '處理']\n\n    result.pos: ['Na', 'SHI', 'Dfa', 'VH', 'V_2', 'Na', 'Cbb', 'D', 'VH', 'VC', 'DE', 'Na', 'Na', 'PERIODCATEGORY', 'Neqa', 'Na', 'VC', 'DE', 'Na', 'D', 'D', 'Nb', 'VE', 'Nb', 'Ng', 'DE', 'Na', 'Na', 'VC', 'D', 'DE', 'VC']\n\n\n\nUsing ``batch_seg`` for a list of text would be slightly faster\n---------------------------------------------------------------\nIn[3]:\n\n.. code-block:: python\n\n    segmenter.batch_seg(corpus)\n\nOut[3]:\n\n.. parsed-literal::\n\n    8/8 collected.\n\n    [<SegResult  詞(Na) 是(SHI) 最(Dfa) 小(VH) 有(V_2) 意義(Na) 且(Cbb) 可以 ...>,\n     <SegResult  任何(Neqa) 語言(Na) 處理(VC) 的(DE) 系統(Na) 都(D) 必須(D) 先能 ...>,\n     <SegResult  例如(P) 機器(Na) 翻譯(VC) 、(PAUSECATEGORY) 語言(Na) 分析(VC ...>,\n     <SegResult  因此(Cbb) 中文(Na) 自動(VH) 分詞(Na) 的(DE) 工作(Na) 成(VG) 了 ...>,\n     <SegResult  基本(Na) 上(Ncd) 自動(VH) 分詞(Na) 多(D) 利用(VC) 詞典(Na) 中( ...>,\n     <SegResult  找出(VC) 可能(D) 包含(VJ) 的(DE) 詞(Na) ，(COMMACATEGORY)  ...>,\n     <SegResult  因此(Cbb) 多數(Neqa) 的(DE) 中文(Na) 分詞(Na) 程式(Na) 多(D)  ...>,\n     <SegResult  而(Cbb) 較少(D) 討論(VE) 如何(D) 處理(VC) 詞典(Na) 中(Ng) 未(D ...>]\n\n\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/henryyang42/ckip-segmenter",
    "keywords": "NLP,tokenizing,Chinese word segementation,part-of-speech tagging",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ckip-segmenter",
    "package_url": "https://pypi.org/project/ckip-segmenter/",
    "platform": "",
    "project_url": "https://pypi.org/project/ckip-segmenter/",
    "project_urls": {
      "Homepage": "https://github.com/henryyang42/ckip-segmenter"
    },
    "release_url": "https://pypi.org/project/ckip-segmenter/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "Ckip Segmenter",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3024719,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84e0e43a294f742000024955d9f68ac72543f03b688fee225a6a0214aa18e51e",
          "md5": "c590dbe74f29e6ecfa9ab16324dc3232",
          "sha256": "2c7a74ceb17c2082d61fa48ad23f6d9e7ef58a65fb9a45ae69389240a8b50845"
        },
        "downloads": -1,
        "filename": "ckip_segmenter-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c590dbe74f29e6ecfa9ab16324dc3232",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 4431,
        "upload_time": "2017-07-15T07:31:05",
        "upload_time_iso_8601": "2017-07-15T07:31:05.148900Z",
        "url": "https://files.pythonhosted.org/packages/84/e0/e43a294f742000024955d9f68ac72543f03b688fee225a6a0214aa18e51e/ckip_segmenter-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c81a81697645bc0c72c63a4795aa21b3d7be172e0cbb3e2937500670b04c8b20",
          "md5": "f691157b9d10dab2307581fe8d10a6d3",
          "sha256": "ec1ce1888af2dde9cfb2487c85031a850d1ea8d8030c13c36ec4f26b54e2cf71"
        },
        "downloads": -1,
        "filename": "ckip_segmenter-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f691157b9d10dab2307581fe8d10a6d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 7830,
        "upload_time": "2017-07-15T08:18:21",
        "upload_time_iso_8601": "2017-07-15T08:18:21.578439Z",
        "url": "https://files.pythonhosted.org/packages/c8/1a/81697645bc0c72c63a4795aa21b3d7be172e0cbb3e2937500670b04c8b20/ckip_segmenter-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6b6f32a83f415581ae6b901bdcef0d9560e6b20f8f4fceb64bec7e1700f370c",
          "md5": "2e8ac3903fc7ed6bacf46fbbd77124ca",
          "sha256": "932f2e297e85e9ddaa5a4510ed574a2da5db20faf58bae2f652169171c13f468"
        },
        "downloads": -1,
        "filename": "ckip_segmenter-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e8ac3903fc7ed6bacf46fbbd77124ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 7848,
        "upload_time": "2017-07-15T08:32:50",
        "upload_time_iso_8601": "2017-07-15T08:32:50.338413Z",
        "url": "https://files.pythonhosted.org/packages/f6/b6/f32a83f415581ae6b901bdcef0d9560e6b20f8f4fceb64bec7e1700f370c/ckip_segmenter-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6b6f32a83f415581ae6b901bdcef0d9560e6b20f8f4fceb64bec7e1700f370c",
        "md5": "2e8ac3903fc7ed6bacf46fbbd77124ca",
        "sha256": "932f2e297e85e9ddaa5a4510ed574a2da5db20faf58bae2f652169171c13f468"
      },
      "downloads": -1,
      "filename": "ckip_segmenter-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2e8ac3903fc7ed6bacf46fbbd77124ca",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 7848,
      "upload_time": "2017-07-15T08:32:50",
      "upload_time_iso_8601": "2017-07-15T08:32:50.338413Z",
      "url": "https://files.pythonhosted.org/packages/f6/b6/f32a83f415581ae6b901bdcef0d9560e6b20f8f4fceb64bec7e1700f370c/ckip_segmenter-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}