{
  "info": {
    "author": "rlaphoenix",
    "author_email": "rlaphoenix@pm.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9",
      "Topic :: Multimedia :: Video",
      "Topic :: Security :: Cryptography"
    ],
    "description": "<p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/17136956/216880837-478f3ec7-6af6-4cca-8eef-5c98ff02104c.png\">\n    <a href=\"https://github.com/devine-dl/devine\">Devine</a>\n    <br/>\n    <sup><em>Open-Source Movie, TV, and Music Downloading Solution</em></sup>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://github.com/devine-dl/devine/actions/workflows/ci.yml\">\n        <img src=\"https://github.com/devine-dl/devine/actions/workflows/ci.yml/badge.svg\" alt=\"Build status\">\n    </a>\n    <a href=\"https://python.org\">\n        <img src=\"https://img.shields.io/badge/python-3.9.0%2B-informational\" alt=\"Python version\">\n    </a>\n    <a href=\"https://deepsource.io/gh/devine-dl/devine/?ref=repository-badge\">\n        <img src=\"https://deepsource.io/gh/devine-dl/devine.svg/?label=active+issues&token=1ADCbjJ3FPiGT_s0Y0rlugGU\" alt=\"DeepSource\">\n    </a>\n</p>\n\n## Features\n\n- 🎥 Supports Movies, TV shows, and Music\n- 🧩 Easy installation via PIP/PyPI\n- 👥 Multi-profile authentication per-service with credentials or cookies\n- 🤖 Automatic P2P filename structure with Group Tag\n- 🛠️ Flexible Service framework system\n- 📦 Portable Installations\n- 🗃️ Local and Remote SQL-based Key Vault database\n- ⚙️ YAML for Configuration\n- 🌍 Local and Remote Widevine CDMs\n- ❤️ Fully Open-Source! Pull Requests Welcome\n\n## Installation\n\n```shell\n$ pip install devine\n```\n\n> __Note__ If you see warnings about a path not being in your PATH environment variable, add it, or `devine` won't run.\n\nVoilà 🎉! You now have the `devine` package installed and a `devine` executable is now available.  \nCheck it out with `devine --help`!\n\n### Dependencies\n\nThe following is a list of programs that need to be installed manually. I recommend installing these with [winget],\n[chocolatey] or such where possible as it automatically adds them to your `PATH` environment variable and will be\neasier to update in the future.\n\n- [aria2(c)] for downloading streams and large manifests.\n- [CCExtractor] for extracting Closed Caption data like EIA-608 from video streams and converting as SRT.\n- [FFmpeg] (and ffprobe) for repacking/remuxing streams on specific services, and evaluating stream data.\n- [MKVToolNix] v54+ for muxing individual streams to an `.mkv` file.\n- [shaka-packager] for decrypting CENC-CTR and CENC-CBCS video and audio streams.\n\nFor portable downloads, make sure you put them in your current working directory, in the installation directory,\nor put the directory path in your `PATH` environment variable. If you do not do this then their binaries will not be\nable to be found.\n\n  [winget]: <https://winget.run>\n  [chocolatey]: <https://chocolatey.org>\n  [aria2(c)]: <https://aria2.github.io>\n  [CCExtractor]: <https://github.com/CCExtractor/ccextractor>\n  [FFmpeg]: <https://fmpeg.org>\n  [MKVToolNix]: <https://mkvtoolnix.download/downloads.html>\n  [shaka-packager]: <https://github.com/google/shaka-packager/releases/latest>\n\n### Portable installation\n\n1. Download a Python Embeddable Package of a supported Python version (the `.zip` download).  \n   (make sure it's either x64/x86 and not ARM unless you're on an ARM device).\n2. Extract the `.zip` and rename the folder, if you wish.\n3. Open Terminal and `cd` to the extracted folder.\n4. Run the following on Windows:\n```\n(Invoke-WebRequest -Uri https://gist.githubusercontent.com/rlaphoenix/5ef250e61ceeb123c6696c05ad4dee8b/raw -UseBasicParsing).Content | .\\python -\n```\nor the following on Linux/macOS:\n```\ncurl -sSL https://gist.githubusercontent.com/rlaphoenix/5ef250e61ceeb123c6696c05ad4dee8b/raw | ./python -\n```\n5. Run `.\\python -m pip install devine`\n\nYou can now call `devine` by,\n\n- running `./python -m devine --help`, or,\n- running `./Scripts/devine.exe --help`, or,\n- symlinking the `/Scripts/devine.exe` binary to the root of the folder, for `./devine --help`, or,\n- zipping the entire folder to `devine.zip`, for `python devine.zip --help`.\n\nThe last method of calling devine, by archiving to a zip file, is incredibly useful for sharing and portability!  \nI urge you to give it a try!\n\n### Services\n\nDevine does not come with any infringing Service code. You must develop your own Service code and place them in\nthe `/devine/services` directory. There are different ways the add services depending on your installation type.\nIn some cases you may use multiple of these methods to have separate copies.\n\nPlease refrain from making or using Service code unless you have full rights to do so. I also recommend ensuring that\nyou keep the Service code private and secure, i.e. a private repository or keeping it offline.\n\nNo matter which method you use, make sure that you install any further dependencies needed by the services. There's\ncurrently no way to have these dependencies automatically install apart from within the Fork method.\n\n> __Warning__ Please be careful with who you trust and what you run. The users you collaborate with on Service\n> code could update it with malicious code that you would run via devine on the next call.\n\n#### via Copy & Paste\n\nIf you have service code already and wish to just install and use it locally, then simply putting it into the Services\ndirectory of your local pip installation will do the job. However, this method is the worst in terms of collaboration.\n\n1. Get the installation directory by running the following in terminal,\n   `python -c 'import os,devine.__main__ as a;print(os.path.dirname(a.__file__))'`\n2. Head to the installation directory and create a `services` folder if one is not yet created.\n3. Within that `services` folder you may install or create service code.\n\n> __Warning__ Uninstalling Python or Devine may result in the Services you installed being deleted. Make sure you back\n> up the services before uninstalling.\n\n#### via a Forked Repository\n\nIf you are collaborating with a team on multiple services then forking the project is the best way to go. I recommend\nforking the project then hard resetting to the latest stable update by tag. Once a new stable update comes out you can\neasily rebase your fork to that commit to update.\n\nHowever, please make sure you look at changes between each version before rebasing and resolve any breaking changes and\ndeprecations when rebasing to a new version.\n\n1. Fork the project with `git` or GitHub [(fork)](https://github.com/devine-dl/devine/fork).\n2. Head inside the root `devine` directory and create a `services` directory.\n3. Within that `services` folder you may install or create service code.\n\nYou may now commit changes or additions within that services folder to your forked repository.  \nOnce committed all your other team members can easily sync and contribute changes.\n\n> __Note__ You may add Service-specific Python dependencies using `poetry` that can install alongside the project.\n> Just do note that this will complicate rebasing when even the `poetry.lock` gets updates in the upstream project.\n\n#### via Cloud storage (symlink)\n\nThis is a great option for those who wish to do something like the forking method, but without the need of constantly\nrebasing their fork to the latest version. Overall less knowledge on git would be required, but each user would need\nto do a bit of symlinking compared to the fork method.\n\nThis also opens up the ways you can host or collaborate on Service code. As long as you can receive a directory that\nupdates with just the services within it, then you're good to go. Options could include an FTP server, Shared Google\nDrive, a non-fork repository with just services, and more.\n\n1. Follow the steps in the [Copy & Paste method](#via-copy--paste) to create the `services` folder.\n2. Use any Cloud Source that gives you a pseudo-directory to access the Service files. E.g., rclone or google drive fs.\n3. Symlink the services directory from your Cloud Source to the new services folder you made.\n   (you may need to delete it first)\n\nOf course, you have to make sure the original folder keeps receiving and downloading/streaming those changes, or that\nyou keep git pulling those changes. You must also make sure that the version of devine you have locally is supported by\nthe Services code.\n\n> __Note__ If you're using a cloud source that downloads the file once it gets opened, you don't have to worry as those\n> will automatically download. Python importing the files triggers the download to begin. However, it may cause a delay\n> on startup.\n\n### Profiles (Cookies & Credentials)\n\nJust like a streaming service, devine associates both a cookie and/or credential as a Profile. You can associate up to\none cookie and one credential per-profile, depending on which (or both) are needed by the Service. This system allows\nyou to configure multiple accounts per-service and choose which to use at any time.\n\nCredentials are stored in the config, and Cookies are stored in the data directory. You can find the location of these\nby running `devine env info`. However, you can manage profiles with `devine auth --help`. E.g. to add a new John\nprofile to Netflix with a Cookie and Credential, take a look at the following CLI call,\n`devine auth add John NF --cookie \"C:\\Users\\John\\Downloads\\netflix.com.txt --credential \"john@gmail.com:pass123\"`\n\nYou can also delete a credential with `devine auth delete`. E.g., to delete the cookie for John that we just added, run\n`devine auth delete John --cookie`. Take a look at `devine auth delete --help` for more information.\n\n> __Note__ Profile names are case-sensitive and unique per-service. They also have no arbitrary character or length\n> limit, but for convenience I don't recommend using any special characters as your terminal may get confused.\n\n#### Cookie file format and Extensions\n\nCookies must be in the standard Netscape cookies file format.  \nRecommended Cookie exporter extensions:\n\n- Firefox: \"[Export Cookies]\" by `Rotem Dan`\n- Chromium: \"[Open Cookies.txt]\" by `Ninh Pham`, ~~or \"Get cookies.txt\" by `Rahul Shaw`~~\n\n  [Export Cookies]: <https://addons.mozilla.org/addon/export-cookies-txt>\n  [Open Cookies.txt]: <https://chrome.google.com/webstore/detail/gdocmgbfkjnnpapoeobnolbbkoibbcif>\n\nAny other extension that exports to the standard Netscape format should theoretically work.\n\n> __Warning__ The Get cookies.txt extension by Rahul Shaw is essentially spyware. Do not use it. There are some safe\n> versions floating around (usually just older versions of the extension), but since there are safe alternatives I'd\n> just avoid it altogether. Source: https://reddit.com/r/youtubedl/comments/10ar7o7\n\n### Widevine Provisions\n\nA Widevine Provision is needed for acquiring licenses containing decryption keys for DRM-protected content.\nThey are not needed if you will be using devine on DRM-free services. Please do not ask for any Widevine Device Files,\nKeys, or Provisions as they cannot be provided.\n\nDevine only supports `.WVD` files (Widevine Device Files). However, if you have the Provision RSA Private Key and\nDevice Client Identification Blob as blob files (e.g., `device_private_key` and `device_client_id_blob`), then you can\nconvert them to a `.WVD` file by running `pywidevine create-device --help`.\n\nOnce you have `.WVD` files, place them in the WVDs directory which can be found by calling `devine env info`.\nYou can then set in your config which WVD (by filename only) to use by default with `devine cfg cdm.default wvd_name`.\nFrom here you can then set which WVD to use for each specific service. It's best to use the lowest security-level\nprovision where possible.\n\nAn alternative would be using a pywidevine Serve-compliant CDM API. Of course, you would need to know someone who is\nserving one, and they would need to give you access. Take a look at the [remote_cdm](CONFIG.md#remotecdm--listdict--)\nconfig option for setup information. For further information on it see the pywidevine repository.\n\n## Usage\n\nFirst, take a look at `devine --help` for a full help document, listing all commands available and giving you more\ninformation on what can be done with Devine.\n\nHere's a checklist on what I recommend getting started with, in no particular order,\n\n- [ ] Add [Services](#services), these will be used in `devine dl`.\n- [ ] Add [Profiles](#profiles--cookies--credentials-), these are your cookies and credentials.\n- [ ] Add [Widevine Provisions](#widevine-provisions), also known as CDMs, these are used for DRM-protected content.\n- [ ] Set your Group Tag, the text at the end of the final filename, e.g., `devine cfg tag NOGRP` for ...-NOGRP.\n- [ ] Set Up a Local Key Vault, take a look at the [Key Vaults Config](CONFIG.md#keyvaults--listdict--).\n\nAnd here's some more advanced things you could take a look at,\n\n- [ ] Setting default Headers that the Request Session uses.\n- [ ] Setting default Profiles and CDM Provisions to use for services.\n- [ ] NordVPN and Hola Proxy Providers for automatic proxies.\n- [ ] Hosting and/or Using Remote Key Vaults.\n- [ ] Serving and/or Using Remote CDM Provisions.\n\nDocumentation on the config is available in the [CONFIG.md](CONFIG.md) file, it has a lot of handy settings.  \nIf you start to get sick of putting something in your CLI call, then I recommend taking a look at it!\n\n## Development\n\nThe following steps are instructions on downloading, preparing, and running the code under a [Poetry] environment.\nYou can skip steps 3-5 with a simple `pip install .` call instead, but you miss out on a wide array of benefits.\n\n1. `git clone https://github.com/devine-dl/devine`\n2. `cd devine`\n3. (optional) `poetry config virtualenvs.in-project true`\n4. `poetry install`\n5. `poetry run devine --help`\n\nAs seen in Step 5, running the `devine` executable is somewhat different to a normal PIP installation.\nSee [Poetry's Docs] on various ways of making calls under the virtual-environment.\n\n  [Poetry]: <https://python-poetry.org>\n  [Poetry's Docs]: <https://python-poetry.org/docs/basic-usage/#using-your-virtual-environment>\n\n## End User License Agreement\n\nDevine and it's community pages should be treated with the same kindness as other projects.\nPlease refrain from spam or asking for questions that infringe upon a Service's End User License Agreement.\n\n1. Do not use Devine for any purposes of which you do not have the rights to do so.\n2. Do not share or request infringing content; this includes Widevine Provision Keys, Content Encryption Keys,\n   or Service API Calls or Code.\n3. The Core codebase is meant to stay Free and Open-Source while the Service code should be kept private.\n4. Do not sell any part of this project, neither alone nor as part of a bundle.\n   If you paid for this software or received it as part of a bundle following payment, you should demand your money\n   back immediately.\n5. Be kind to one another and do not single anyone out.\n\n## Disclaimer\n\n1. This project requires a valid Google-provisioned Private/Public Keypair and a Device-specific Client Identification\n   blob; neither of which are included with this project.\n2. Public testing provisions are available and provided by Google to use for testing projects such as this one.\n3. License Servers have the ability to block requests from any provision, and are likely already blocking test provisions\n   on production endpoints. Therefore, have the ability to block the usage of Devine by themselves.\n4. This project does not condone piracy or any action against the terms of the Service or DRM system.\n5. All efforts in this project have been the result of Reverse-Engineering and Publicly available research.\n\n## Credit\n\n- The awesome community for their shared research and insight into the Widevine Protocol and Key Derivation.\n\n## Contributors\n\n<a href=\"https://github.com/rlaphoenix\"><img src=\"https://images.weserv.nl/?url=avatars.githubusercontent.com/u/17136956?v=4&h=25&w=25&fit=cover&mask=circle&maxage=7d\" alt=\"\"/></a>\n<a href=\"https://github.com/mnmll\"><img src=\"https://images.weserv.nl/?url=avatars.githubusercontent.com/u/22942379?v=4&h=25&w=25&fit=cover&mask=circle&maxage=7d\" alt=\"\"/></a>\n<a href=\"https://github.com/shirt-dev\"><img src=\"https://images.weserv.nl/?url=avatars.githubusercontent.com/u/2660574?v=4&h=25&w=25&fit=cover&mask=circle&maxage=7d\" alt=\"\"/></a>\n<a href=\"https://github.com/nyuszika7h\"><img src=\"https://images.weserv.nl/?url=avatars.githubusercontent.com/u/482367?v=4&h=25&w=25&fit=cover&mask=circle&maxage=7d\" alt=\"\"/></a>\n<a href=\"https://github.com/bccornfo\"><img src=\"https://images.weserv.nl/?url=avatars.githubusercontent.com/u/98013276?v=4&h=25&w=25&fit=cover&mask=circle&maxage=7d\" alt=\"\"/></a>\n<a href=\"https://github.com/Arias800\"><img src=\"https://images.weserv.nl/?url=avatars.githubusercontent.com/u/24809312?v=4&h=25&w=25&fit=cover&mask=circle&maxage=7d\" alt=\"\"/></a>\n<a href=\"https://github.com/varyg1001\"><img src=\"https://images.weserv.nl/?url=avatars.githubusercontent.com/u/88599103?v=4&h=25&w=25&fit=cover&mask=circle&maxage=7d\" alt=\"\"/></a>\n<a href=\"https://github.com/Hollander-1908\"><img src=\"https://images.weserv.nl/?url=avatars.githubusercontent.com/u/93162595?v=4&h=25&w=25&fit=cover&mask=circle&maxage=7d\" alt=\"\"/></a>\n\n## License\n\n© 2019-2023 rlaphoenix — [GNU General Public License, Version 3.0](LICENSE)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/devine-dl/devine",
    "keywords": "widevine,drm,downloader",
    "license": "GPL-3.0-only",
    "maintainer": "",
    "maintainer_email": "",
    "name": "devine",
    "package_url": "https://pypi.org/project/devine/",
    "platform": null,
    "project_url": "https://pypi.org/project/devine/",
    "project_urls": {
      "Homepage": "https://github.com/devine-dl/devine",
      "Repository": "https://github.com/devine-dl/devine"
    },
    "release_url": "https://pypi.org/project/devine/2.1.0/",
    "requires_dist": [
      "appdirs (>=1.4.4,<2.0.0)",
      "Brotli (>=1.0.9,<2.0.0)",
      "click (>=8.1.3,<9.0.0)",
      "construct (>=2.8.8,<3.0.0)",
      "crccheck (>=1.3.0,<2.0.0)",
      "jsonpickle (>=3.0.1,<4.0.0)",
      "langcodes[data] (>=3.3.0,<4.0.0)",
      "lxml (>=4.9.2,<5.0.0)",
      "pproxy (>=2.7.8,<3.0.0)",
      "protobuf (==4.21.6)",
      "pycaption (>=2.1.1,<3.0.0)",
      "pycryptodomex (>=3.17.0,<4.0.0)",
      "pyjwt (>=2.6.0,<3.0.0)",
      "pymediainfo (>=6.0.1,<7.0.0)",
      "pymp4 (>=1.2.0,<2.0.0)",
      "pymysql (>=1.0.2,<2.0.0)",
      "pywidevine[serve] (>=1.6.0,<2.0.0)",
      "PyYAML (>=6.0,<7.0)",
      "requests[socks] (>=2.28.2,<3.0.0)",
      "rich (>=13.3.1,<14.0.0)",
      "rlaphoenix.m3u8 (>=3.4.0,<4.0.0)",
      "ruamel.yaml (>=0.17.21,<0.18.0)",
      "sortedcontainers (>=2.4.0,<3.0.0)",
      "subtitle-filter (>=1.4.4,<2.0.0)",
      "Unidecode (>=1.3.6,<2.0.0)",
      "urllib3 (>=1.26.14,<2.0.0)"
    ],
    "requires_python": ">=3.9.0,<3.12",
    "summary": "Open-Source Movie, TV, and Music Downloading Solution",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17324478,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fce0e160f043648f508d1174fe30dd36021d04af9f77f7f0cbfa91a6c311267",
          "md5": "dc36735c435d49cdd4718c1232b1a301",
          "sha256": "f5b1a423be9fb016491b86a99426e5bb0b66a994978062b5619489f8c99c8269"
        },
        "downloads": -1,
        "filename": "devine-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc36735c435d49cdd4718c1232b1a301",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.6,<3.12",
        "size": 118307,
        "upload_time": "2023-02-06T02:42:59",
        "upload_time_iso_8601": "2023-02-06T02:42:59.215271Z",
        "url": "https://files.pythonhosted.org/packages/1f/ce/0e160f043648f508d1174fe30dd36021d04af9f77f7f0cbfa91a6c311267/devine-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6673642de6b7565ce7429a99fb568fce05a6e73c21ca281d15a17f82bc6c949c",
          "md5": "d48ced8348cb3887178b796f23ade61b",
          "sha256": "4aedc59e4169ae7fdb4865f37b825a655cb36989fa04ecae5c887ed174376f8f"
        },
        "downloads": -1,
        "filename": "devine-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d48ced8348cb3887178b796f23ade61b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.6,<3.12",
        "size": 119375,
        "upload_time": "2023-02-07T21:51:06",
        "upload_time_iso_8601": "2023-02-07T21:51:06.900688Z",
        "url": "https://files.pythonhosted.org/packages/66/73/642de6b7565ce7429a99fb568fce05a6e73c21ca281d15a17f82bc6c949c/devine-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c8c41c5d3f9f57f93385351a75a2552eefd4082aa0942a1be6abf115d3699a0",
          "md5": "0783b5b24682b17034e5c994d20281db",
          "sha256": "f980fb5173cb78a204a3c3e491aed7a1294760364a2c7faad42f21ecc7bcfac1"
        },
        "downloads": -1,
        "filename": "devine-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0783b5b24682b17034e5c994d20281db",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.6,<3.12",
        "size": 120373,
        "upload_time": "2023-02-13T20:14:07",
        "upload_time_iso_8601": "2023-02-13T20:14:07.488005Z",
        "url": "https://files.pythonhosted.org/packages/1c/8c/41c5d3f9f57f93385351a75a2552eefd4082aa0942a1be6abf115d3699a0/devine-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a52f0747dee806610ba2ced865f37a65f3f8255be87a7672664e0b6575ebb88",
          "md5": "7249c9443d19d4f419852615cccf2348",
          "sha256": "f3c860383c99503830cf24685cda2e4df4cdd61c017928aa796c37f007444c10"
        },
        "downloads": -1,
        "filename": "devine-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7249c9443d19d4f419852615cccf2348",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9.0,<3.12",
        "size": 121114,
        "upload_time": "2023-02-22T04:41:11",
        "upload_time_iso_8601": "2023-02-22T04:41:11.790904Z",
        "url": "https://files.pythonhosted.org/packages/4a/52/f0747dee806610ba2ced865f37a65f3f8255be87a7672664e0b6575ebb88/devine-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e42c9bb5c29d326e1a0e83e96e3073a1a0cd6883d846013cdffe08c2189a227",
          "md5": "cde67862f6640b63a32c7d47c529ba95",
          "sha256": "2ac6295ef768d0f5a616abfad02c185528b795100152dca157e46780dc5658a6"
        },
        "downloads": -1,
        "filename": "devine-1.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cde67862f6640b63a32c7d47c529ba95",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9.0,<3.12",
        "size": 121142,
        "upload_time": "2023-02-23T09:27:00",
        "upload_time_iso_8601": "2023-02-23T09:27:00.823670Z",
        "url": "https://files.pythonhosted.org/packages/0e/42/c9bb5c29d326e1a0e83e96e3073a1a0cd6883d846013cdffe08c2189a227/devine-1.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ac54058f4cc83eaaf58ff583701b30540fed24d59ebf287aa33533d36e15aff",
          "md5": "267531bff59c824cc816c891b6c88734",
          "sha256": "cb163012c45707a5f6f7487e81c0403d2e4847052a61b410bc3d1acf46389542"
        },
        "downloads": -1,
        "filename": "devine-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "267531bff59c824cc816c891b6c88734",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9.0,<3.12",
        "size": 121934,
        "upload_time": "2023-02-25T23:07:39",
        "upload_time_iso_8601": "2023-02-25T23:07:39.757337Z",
        "url": "https://files.pythonhosted.org/packages/9a/c5/4058f4cc83eaaf58ff583701b30540fed24d59ebf287aa33533d36e15aff/devine-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5597dc00e23126cc0d94d6d3512bf0b9a0c25b2543c9469c639aa17a77e1f481",
          "md5": "20e624a59798f48ca3dc5af3da535733",
          "sha256": "ea2ce3b32151c36b05a8cf2866bbbbced9c9de70e7b32bb6a51f057b71bf1547"
        },
        "downloads": -1,
        "filename": "devine-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "20e624a59798f48ca3dc5af3da535733",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9.0,<3.12",
        "size": 130795,
        "upload_time": "2023-03-01T22:07:34",
        "upload_time_iso_8601": "2023-03-01T22:07:34.120691Z",
        "url": "https://files.pythonhosted.org/packages/55/97/dc00e23126cc0d94d6d3512bf0b9a0c25b2543c9469c639aa17a77e1f481/devine-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a69b8f3e0f8942088354b4aa065e5b3594939f14a27eee88d4a07f82adc1e4a2",
          "md5": "65f211d0503dce3d0f2301ca4c8c76f9",
          "sha256": "aff7814d5584887dbe835580164186e44a000a0d8145548c6ef2f40a2bd316a6"
        },
        "downloads": -1,
        "filename": "devine-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65f211d0503dce3d0f2301ca4c8c76f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9.0,<3.12",
        "size": 131904,
        "upload_time": "2023-03-07T10:29:44",
        "upload_time_iso_8601": "2023-03-07T10:29:44.375273Z",
        "url": "https://files.pythonhosted.org/packages/a6/9b/8f3e0f8942088354b4aa065e5b3594939f14a27eee88d4a07f82adc1e4a2/devine-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1b166599928477bfa3359fdcfbf986a5664697be7e2a0e37fdea18a393aa306",
          "md5": "04b4fe52fc0f152f43173adb91417073",
          "sha256": "4d6f35df723e77c5c9945d768f624eb4c25633a8969d854eaf25d6a655cd8e2e"
        },
        "downloads": -1,
        "filename": "devine-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04b4fe52fc0f152f43173adb91417073",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9.0,<3.12",
        "size": 133597,
        "upload_time": "2023-03-16T20:53:14",
        "upload_time_iso_8601": "2023-03-16T20:53:14.431262Z",
        "url": "https://files.pythonhosted.org/packages/e1/b1/66599928477bfa3359fdcfbf986a5664697be7e2a0e37fdea18a393aa306/devine-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1b166599928477bfa3359fdcfbf986a5664697be7e2a0e37fdea18a393aa306",
        "md5": "04b4fe52fc0f152f43173adb91417073",
        "sha256": "4d6f35df723e77c5c9945d768f624eb4c25633a8969d854eaf25d6a655cd8e2e"
      },
      "downloads": -1,
      "filename": "devine-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "04b4fe52fc0f152f43173adb91417073",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9.0,<3.12",
      "size": 133597,
      "upload_time": "2023-03-16T20:53:14",
      "upload_time_iso_8601": "2023-03-16T20:53:14.431262Z",
      "url": "https://files.pythonhosted.org/packages/e1/b1/66599928477bfa3359fdcfbf986a5664697be7e2a0e37fdea18a393aa306/devine-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}