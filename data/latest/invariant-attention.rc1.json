{
  "info": {
    "author": "Rishit Dagli",
    "author_email": "rishit.dagli@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Invariant Attention [![Twitter](https://img.shields.io/twitter/url?style=social&url=https%3A%2F%2Fgithub.com%2FRishit-dagli%2FInvariant-Attention)](https://twitter.com/intent/tweet?text=Wow:&url=https%3A%2F%2Fgithub.com%2FRishit-dagli%2FInvariant-Attention)\n\n![PyPI](https://img.shields.io/pypi/v/invariant-attention)\n[![Run Tests](https://github.com/Rishit-dagli/Invariant-Attention/actions/workflows/tests.yml/badge.svg)](https://github.com/Rishit-dagli/Invariant-Attention/actions/workflows/tests.yml)\n[![Upload Python Package](https://github.com/Rishit-dagli/Invariant-Attention/actions/workflows/python-publish.yml/badge.svg)](https://github.com/Rishit-dagli/Invariant-Attention/actions/workflows/python-publish.yml)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/Rishit-dagli/Invariant-Attention/blob/main/example/invariant-attention-example.ipynb)\n\n![GitHub License](https://img.shields.io/github/license/Rishit-dagli/Invariant-Attention)\n[![GitHub stars](https://img.shields.io/github/stars/Rishit-dagli/Invariant-Attention?style=social)](https://github.com/Rishit-dagli/Invariant-Attention/stargazers)\n[![GitHub followers](https://img.shields.io/github/followers/Rishit-dagli?label=Follow&style=social)](https://github.com/Rishit-dagli)\n[![Twitter Follow](https://img.shields.io/twitter/follow/rishit_dagli?style=social)](https://twitter.com/intent/follow?screen_name=rishit_dagli)\n\nInvariant Point Attention which was used in the structure module of Alphafold2 from the paper [Highly accurate protein structure prediction with AlphaFold](https://www.nature.com/articles/s41586-021-03819-2#Abs1) for coordinate refinement. Invariant Point Attention is a form of attention that acts on a set of frames and is invariant under global Euclidean transformations on said frames.\n\nThis repository also includes Invariant Point Attention-based transformer block, which is an Invariant Point Attention followed by a feedforward\n\n![](media/architecture.png)\n\n## Installation\n\nRun the following to install:\n\n```shell\npip install invariant-attention\n```\n\n## Developing invariant-attention\n\nTo install `invariant-attention`, along with tools you need to develop and test, run the following in your virtualenv:\n\n```sh\ngit clone https://github.com/Rishit-dagli/invariant-attention.git\n# or clone your own fork\n\ncd invariant-attention\npip install -e .[dev]\n```\n\nTo run rank and shape tests run any of the following:\n\n```py\npytest invariant_attention --verbose\n```\n\n## Usage\n\nRunning a standalone attention block, we can also use this module without the pairwise representations:\n\n```python\nattn = InvariantPointAttention(\n    dim=64,  # single (and pairwise) representation dimension\n    heads=8,  # number of attention heads\n    scalar_key_dim=16,  # scalar query-key dimension\n    scalar_value_dim=16,  # scalar value dimension\n    point_key_dim=4,  # point query-key dimension\n    point_value_dim=4,  # point value dimension\n)\n\nsingle_repr = tf.random.normal((1, 256, 64))  # (batch x seq x dim)\npairwise_repr = tf.random.normal((1, 256, 256, 64))  # (batch x seq x seq x dim)\nmask = tf.ones((1, 256), dtype=tf.bool)  # # (batch x seq)\n\nrotations = repeat(\n    tf.eye(3), \"... -> b n ...\", b=1, n=256\n)\ntranslations = tf.zeros((1, 256, 3))\n\nattn_out = attn(\n    single_repr,\n    pairwise_repr,\n    rotations=rotations,\n    translations=translations,\n    mask=mask,\n) # (1, 256, 64)\n```\n\nRunning an `IPABlock` (Invariant Point Attention Block) which is an IPA followed by a feedforward and has normalization layers:\n\n```python\nblock = IPABlock(\n    dim=64,\n    heads=8,\n    scalar_key_dim=16,\n    scalar_value_dim=16,\n    point_key_dim=4,\n    point_value_dim=4,\n)\n\nseq = tf.random.normal((1, 256, 64))\npairwise_repr = tf.random.normal((1, 256, 256, 64))\nmask = tf.ones((1, 256), dtype=tf.bool)\n\nrotations = repeat(tf.eye(3), \"... -> b n ...\", b=1, n=256)\ntranslations = tf.zeros((1, 256, 3))\n\nblock_out = block(\n    seq,\n    pairwise_repr=pairwise_repr,\n    rotations=rotations,\n    translations=translations,\n    mask=mask,\n)\n\nupdates = tf.keras.layers.Dense(6)(block_out)\nquaternion_update, translation_update = tf.split(\n    updates, num_or_size_splits=2, axis=-1\n)  # (1, 256, 3), (1, 256, 3)\n```\n\nRunning an `IPATransformer` which is a stack of `IPABlock` and feedforward layers:\n\n```python\nseq = tf.random.normal((1, 256, 32))\npairwise_repr = tf.random.normal((1, 256, 256, 32))\nmask = tf.ones((1, 256), dtype=tf.bool)\ntranslations = tf.zeros((1, 256, 3))\n\nmodel = IPATransformer(\n    dim=32,\n    depth=2,\n    num_tokens=None,\n    predict_points=False,\n    detach_rotations=True,\n)\n\noutputs = model(\n    single_repr=seq,\n    translations=translations,\n    quaternions=tf.random.normal((1, 256, 4)),\n    pairwise_repr=pairwise_repr,\n    mask=mask,\n) # (1, 256, 32), (1, 256, 3), (1, 256, 4)\n```\n\n## Want to Contribute 🙋‍♂️?\n\nAwesome! If you want to contribute to this project, you're always welcome! See [Contributing Guidelines](CONTRIBUTING.md). You can also take a look at [open issues](https://github.com/Rishit-dagli/invariant-attention/issues) for getting more information about current or upcoming tasks.\n\n## Want to discuss? 💬\n\nHave any questions, doubts or want to present your opinions, views? You're always welcome. You can [start discussions](https://github.com/Rishit-dagli/invariant-attention/discussions).\n\n\n## Citation\n\n```bibtex\n@article{jumper2021highly,\n  title={Highly accurate protein structure prediction with AlphaFold},\n  author={Jumper, John and Evans, Richard and Pritzel, Alexander and Green, Tim and Figurnov, Michael and Ronneberger, Olaf and Tunyasuvunakool, Kathryn and Bates, Russ and {\\v{Z}}{\\'\\i}dek, Augustin and Potapenko, Anna and others},\n  journal={Nature},\n  volume={596},\n  number={7873},\n  pages={583--589},\n  year={2021},\n  publisher={Nature Publishing Group}\n}\n```\n\n## License\n\n```\nCopyright 2022 Rishit Dagli\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Rishit-dagli/Invariant-Attention",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Invariant-Attention",
    "package_url": "https://pypi.org/project/Invariant-Attention/",
    "platform": null,
    "project_url": "https://pypi.org/project/Invariant-Attention/",
    "project_urls": {
      "Homepage": "https://github.com/Rishit-dagli/Invariant-Attention"
    },
    "release_url": "https://pypi.org/project/Invariant-Attention/0.1.0/",
    "requires_dist": [
      "tensorflow (>=2.5.0)",
      "einops (~=0.3.0)",
      "check-manifest ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "numpy ; extra == 'dev'",
      "black ; extra == 'dev'",
      "pytest ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "An implementation of Invariant Point Attention from Deepmind's Alphafold 2",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16342560,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77c69dc310f290c22140b577416b42938861f0b8bf095a1811c3676a3065a063",
          "md5": "4a652ac9e67fe78351be9927c11c44d1",
          "sha256": "205e83892231482ebb0bc6d193136338896e3eac42502e30b8ba497dc3d26f28"
        },
        "downloads": -1,
        "filename": "Invariant_Attention-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a652ac9e67fe78351be9927c11c44d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15141,
        "upload_time": "2023-01-07T18:23:43",
        "upload_time_iso_8601": "2023-01-07T18:23:43.780510Z",
        "url": "https://files.pythonhosted.org/packages/77/c6/9dc310f290c22140b577416b42938861f0b8bf095a1811c3676a3065a063/Invariant_Attention-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6822300593fe4e208c91b593ba8f74f7f7c7436df0cc8fb63559ecded66adfcf",
          "md5": "4884cc685ecf4df247e6927475d6f986",
          "sha256": "c16bb0b8a8ef6128ed1a894abc5581b8eb131cef66c2f2463efa64bf37080b35"
        },
        "downloads": -1,
        "filename": "Invariant-Attention-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4884cc685ecf4df247e6927475d6f986",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14667,
        "upload_time": "2023-01-07T18:23:45",
        "upload_time_iso_8601": "2023-01-07T18:23:45.337435Z",
        "url": "https://files.pythonhosted.org/packages/68/22/300593fe4e208c91b593ba8f74f7f7c7436df0cc8fb63559ecded66adfcf/Invariant-Attention-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77c69dc310f290c22140b577416b42938861f0b8bf095a1811c3676a3065a063",
        "md5": "4a652ac9e67fe78351be9927c11c44d1",
        "sha256": "205e83892231482ebb0bc6d193136338896e3eac42502e30b8ba497dc3d26f28"
      },
      "downloads": -1,
      "filename": "Invariant_Attention-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4a652ac9e67fe78351be9927c11c44d1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15141,
      "upload_time": "2023-01-07T18:23:43",
      "upload_time_iso_8601": "2023-01-07T18:23:43.780510Z",
      "url": "https://files.pythonhosted.org/packages/77/c6/9dc310f290c22140b577416b42938861f0b8bf095a1811c3676a3065a063/Invariant_Attention-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6822300593fe4e208c91b593ba8f74f7f7c7436df0cc8fb63559ecded66adfcf",
        "md5": "4884cc685ecf4df247e6927475d6f986",
        "sha256": "c16bb0b8a8ef6128ed1a894abc5581b8eb131cef66c2f2463efa64bf37080b35"
      },
      "downloads": -1,
      "filename": "Invariant-Attention-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4884cc685ecf4df247e6927475d6f986",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14667,
      "upload_time": "2023-01-07T18:23:45",
      "upload_time_iso_8601": "2023-01-07T18:23:45.337435Z",
      "url": "https://files.pythonhosted.org/packages/68/22/300593fe4e208c91b593ba8f74f7f7c7436df0cc8fb63559ecded66adfcf/Invariant-Attention-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}