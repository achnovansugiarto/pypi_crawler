{
  "info": {
    "author": "Aster Taylor",
    "author_email": "astertaylor@uchicago.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# SAMUS\n---\nSimulator of Asteroid Malformation Under Stress, package designed for Taylor et al 2022. Questions on its use should be directed to astertaylor@uchicago.edu.\n\nThis code simulates the deformation of minor bodies, assuming that they are homogenous incompressible fluid masses. They are initialized as ellipsoids and the Navier-Stokes equations are interatively solved to investigate the deformation of the body over time. This package is highly modular, and allows for user-defined output functions, size, and trajectories. \n\nSAMUS is structured as a single large class, which allows for variables to be stored and for arbitrary function calls. A single high-fidelity simulation run can be quite lengthy, and so this allows for ease of debugging and investigation. It utilizes Python3.8 and above, and depends on the `numpy`, `FEniCS`, `DOLFIN`, `UFL`, `SciPy`, `pandas`, `quaternion`, and `mpipy` packages. \n\nFurther description of SAMUS can be found in Taylor et al 2022 (found on the ArXiv here (LINK)) and in the in-line documentation.\n\nExamples of SAMUS's use are given in the **examples** folder. \n\n## Installation\nThere are two primary methods of installing SAMUS:\n1) Install through the Python Package Index (PyPI):\\\n`pip install SAMUS`\n2) Install the developer's version on GitHub:\\\n`git clone https://github.com/astertaylor/SAMUS`\\\n`cd SAMUS`\\\n`python setup.py install` (Note that this command may require a `sudo` instruction.)\n\n\nSAMUS File Tree\n---\n\n**setup.py**: Setup file for the package.\\\n\\\n**LICENSE.txt**: Text file containing the license for use of this code.\\\n\\\n**README.md**: Markdown file with basic documentation.\n\n## build\nFolder containing the build documents. Auto-generated with pip.\n\n## docs\nFolder containing documentation and examples of use.\n\n## SAMUS\nFolder containing package itself. \n>**modelFile.py**: Primary file, containing the SAMUS model class. \n>\\\n>**\\_\\_init\\_\\_.py**: Initializing file for the package. \n>\n> ### meshes\n> Folder containing meshes for use by SAMUS. Users should not have to interact with this. \n>> **\\_\\_init\\_\\_.py**: Initializing file for the subpackage. \n>> \\\n>> **3ball.geo**: GMSH file which contains the simple spherical mesh. Used to create the various improvements.\n>> \\\n>> **3ball?.msh**: GMSH file containing the mesh, which has undergone ? refinements by splitting. \n>> \\\n>> **3ball?.xml**: xml file containing the mesh, which has undergone ? refinements by splitting. \n>> \n> ### testing\n> Folder containing scripts for testing `SAMUS` and the discretizations it uses.\n>> **\\_\\_init\\_\\_.py**: Initializing file for the subpackage. \\\n>> \\\n>> **example\\_traj.csv**: csv file with simple, short trajectory information, for use in validations. \\\n>> **example\\_traj.txt**: txt file with simple, short trajectory information, for use in validations. \\\n>> \\\n>> **hyperbolic\\_traj.csv**: csv file with hyperbolic trajectory information, for use in validations. \\\n>> **hyperbolic\\_traj.txt**: txt file with hyperbolic trajectory information, for use in validations. \\\n>> \\\n>> **mesh_validation.py**: Python script which runs simulations, validating the use of the lowest-refined mesh via doubling test.\\\n>> \\\n>> **modularity_example.py**: Python script which runs simulations and demonstrates the modular use of SAMUS.\\\n>> \\\n>> **trajectory_jump_validation.py**: Python script which validates the use of the trajectory jump method via doubling test.\\\n>> \\\n>> **euler_step_validation.py**: Python script which validates the use of Euler finite-difference time steps via a doubling test.\n>>\n>> ### logs\n>> Folder containing the outputs from these testing simulations. \n>>> **coarse\\_mesh\\_7.txt**: Running log from a coarse-mesh run, run by mesh_validation.py.\\\n>>> **Outputs\\_coarse\\_mesh\\_7.csv**: Output log from from a coarse-mesh run, run by mesh_validation.py.\\\n>>> \\\n>>> **finer\\_mesh\\_7.txt**: Running log from a finer-mesh run, run by mesh_validation.py.\\\n>>> **Outputs\\_finer\\_mesh\\_7.csv**: Output log from from a finer-mesh run, run by mesh_validation.py. Compare this file to Outputs_coarse_mesh_7.csv to demonstrate that the mesh usage is validated.\\\n>>> \\\n>>> **standard\\_tolerance\\_7.txt**: Running log from a standard-tolerance run, run by trajectory\\_jump\\_validation.py.\\\n>>> **Outputs\\_standard\\_tolerance\\_7.csv**: Output log from from a standard-tolerance run, run by trajectory\\_jump\\_validation.py.\\\n>>> \\\n>>> **halved\\_tolerance\\_7.txt**: Running log from a halved-tolerance run, run by trajectory\\_jump\\_validation.py.\\\n>>> **Outputs\\_halved\\_tolerance\\_7.csv**: Output log from from a halved-tolerance run, run by trajectory\\_jump\\_validation.py. Compare this file to Outputs\\_standard\\_tolerance\\_7.csv to demonstrate that the trajectory jump usage is validated.\\\n>>> \\\n>>> **standard\\_timestep\\_7.txt**: Running log from a standard-timestep run, run by euler\\_step\\_validation.py.\\\n>>> **Outputs\\_standard\\_timestep\\_7.csv**: Output log from from a standard-tolerance run, run by euler\\_step\\_validation.py.\\\n>>> \\\n>>> **doubled\\_timestep\\_7.txt**: Running log from a double-timestep run, run by euler\\_step\\_validation.py.\\\n>>> **Outputs\\_doubled\\_timestep\\_7.csv**: Output log from from a double-timestep run, run by euler\\_step\\_validation.py. Compare this file to Outputs\\_standard\\_timestep\\_7.csv to demonstrate that the usage of a Euler finite-difference timestep is validated.\n> \\\n> ### examples\n> Folder containing examples of `SAMUS`'s use. There are .ipynb and .py files for both examples. The .ipynb files have greater documentation, and the `.py` files are more efficient to run. \n>> **\\_\\_init\\_\\_.py**: Initializing file for the subpackage. \\\n>> \\\n>> **example\\_traj.csv**: .csv file with simple, short trajectory information, for use in validations. \\\n>> **example\\_traj.txt**: .txt file with simple, short trajectory information, for use in validations. \\\n>> \\\n>> **Basic\\_Usage\\_Example.ipynb**: A Jupyter Notebook file with a very basic example of `SAMUS`'s use. This file has relatively extensive documentation, and should be used to gain greater understanding of how `SAMUS` works. \\\n>> **basic\\_usage\\_example.py**: A Python script with a very basic example of `SAMUS`'s use. This file should be run by the learner, as it is capable of being run with `mpirun` and runs significantly faster than the corresponding .ipynb file. \\\n>> \\\n>> **Modularity\\_Example.ipynb**: A Jupyter Notebook file with an example of `SAMUS`'s modular functionalities. This file has relatively extensive documentation, and should be used to gain greater understanding of how `SAMUS` works. \\\n>> **modularity\\_example.py**: A Python script with an example of `SAMUS`'s modular functionalities. This file should be run by the learner, as it is capable of being run with `mpirun` and runs significantly faster than the corresponding .ipynb file. \n>>\\\n>> ### logs\n>> Folder containing the outputs from these example simulations. \n>>> **basic\\_example\\_6.txt**: Running log from the basic example, run by basic\\_usage\\_example.py.\\\n>>> **Outputs\\_basic\\_example\\_6.csv**: Output log from from the basic example, run by basic\\_usage\\_example.py.\\\n>>> \\\n>>> **modularity\\_example\\_6.txt**: Running log from the basic example, run by modularity\\_example.py.\\\n>>> **Outputs\\_modularity\\_example\\_6.csv**: Output log from from the basic example, run by modularity\\_example.py.\\\n\n---\nAster Taylor\\\nastertaylor@uchicago.edu | aster.taylor8587@gmail.com\\\nUniversity of Chicago, Department of Astrophysics\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/astertaylor/SAMUS",
    "keywords": "minor bodies,fluid dynamics,numerics,asteroid,comet,tides,tidal forces,tidal deformation",
    "license": "LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SAMUS",
    "package_url": "https://pypi.org/project/SAMUS/",
    "platform": null,
    "project_url": "https://pypi.org/project/SAMUS/",
    "project_urls": {
      "Homepage": "https://github.com/astertaylor/SAMUS"
    },
    "release_url": "https://pypi.org/project/SAMUS/1.0.0/",
    "requires_dist": [
      "numpy",
      "numpy-quaternion",
      "pandas",
      "scipy",
      "mpi4py"
    ],
    "requires_python": "",
    "summary": "SAMUS package",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15129842,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4203d4ffac48bd59d49eb6865d4002e1a9540768ead2cd147cee0ceb83433835",
          "md5": "664e359d3cdbe19da7f481b5d2bbb4ae",
          "sha256": "09e96ccae7222b6648e6b144e4ec32f83c82c09065f0efe7913914c8a00b9401"
        },
        "downloads": -1,
        "filename": "SAMUS-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "664e359d3cdbe19da7f481b5d2bbb4ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12313303,
        "upload_time": "2022-09-17T21:46:20",
        "upload_time_iso_8601": "2022-09-17T21:46:20.970964Z",
        "url": "https://files.pythonhosted.org/packages/42/03/d4ffac48bd59d49eb6865d4002e1a9540768ead2cd147cee0ceb83433835/SAMUS-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35a1115fd48959de1d5138321256e4186d9a65893746d85c26ebe3e1ed5cbce1",
          "md5": "c9ab638bc81dc16373b7ba8c18894e43",
          "sha256": "7467de8ff96dbb4602431e0256388bf848fb97122282329f800f53b4dc58fce5"
        },
        "downloads": -1,
        "filename": "SAMUS-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c9ab638bc81dc16373b7ba8c18894e43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12060054,
        "upload_time": "2022-09-17T21:46:28",
        "upload_time_iso_8601": "2022-09-17T21:46:28.726284Z",
        "url": "https://files.pythonhosted.org/packages/35/a1/115fd48959de1d5138321256e4186d9a65893746d85c26ebe3e1ed5cbce1/SAMUS-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4203d4ffac48bd59d49eb6865d4002e1a9540768ead2cd147cee0ceb83433835",
        "md5": "664e359d3cdbe19da7f481b5d2bbb4ae",
        "sha256": "09e96ccae7222b6648e6b144e4ec32f83c82c09065f0efe7913914c8a00b9401"
      },
      "downloads": -1,
      "filename": "SAMUS-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "664e359d3cdbe19da7f481b5d2bbb4ae",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12313303,
      "upload_time": "2022-09-17T21:46:20",
      "upload_time_iso_8601": "2022-09-17T21:46:20.970964Z",
      "url": "https://files.pythonhosted.org/packages/42/03/d4ffac48bd59d49eb6865d4002e1a9540768ead2cd147cee0ceb83433835/SAMUS-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35a1115fd48959de1d5138321256e4186d9a65893746d85c26ebe3e1ed5cbce1",
        "md5": "c9ab638bc81dc16373b7ba8c18894e43",
        "sha256": "7467de8ff96dbb4602431e0256388bf848fb97122282329f800f53b4dc58fce5"
      },
      "downloads": -1,
      "filename": "SAMUS-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c9ab638bc81dc16373b7ba8c18894e43",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12060054,
      "upload_time": "2022-09-17T21:46:28",
      "upload_time_iso_8601": "2022-09-17T21:46:28.726284Z",
      "url": "https://files.pythonhosted.org/packages/35/a1/115fd48959de1d5138321256e4186d9a65893746d85c26ebe3e1ed5cbce1/SAMUS-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}