{
  "info": {
    "author": "Nelson Gonzabato",
    "author_email": "gonzabato@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# (Semi) Automated Image Processing with pyautocv\n\n[![PyPI version fury.io](https://badge.fury.io/py/pyautocv.svg)](https://pypi.python.org/pypi/pyautocv/)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3766956.svg)](https://doi.org/10.5281/zenodo.3766956)\n![Stage](https://www.repostatus.org/badges/latest/active.svg) \n![Actions](https://github.com/Nelson-Gon/pyautocv/workflows/Test-Package/badge.svg)\n[![Codecov](https://codecov.io/gh/Nelson-Gon/pyautocv/branch/master/graph/badge.svg)](https://codecov.io/gh/Nelson-Gon/pyautocv?branch=master)\n![Travis Build](https://travis-ci.com/Nelson-Gon/pyautocv.svg?branch=master)\n[![license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/Nelson-Gon/pyautocv/blob/master/LICENSE)\n[![Documentation Status](https://readthedocs.org/projects/pyautocv/badge/?version=latest)](https://pyautocv.readthedocs.io/en/latest/?badge=latest)\n[![PyPI license](https://img.shields.io/pypi/l/pyautocv.svg)](https://pypi.python.org/pypi/pyautocv/)\n[![Total Downloads](https://pepy.tech/badge/pyautocv)](https://pepy.tech/project/pyautocv)\n[![Monthly Downloads](https://pepy.tech/badge/pyautocv/month)](https://pepy.tech/project/pyautocv)\n[![Weekly Downloads](https://pepy.tech/badge/pyautocv/week)](https://pepy.tech/project/pyautocv)\n[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://GitHub.com/Nelson-Gon/pyautocv/graphs/commit-activity)\n[![GitHub last commit](https://img.shields.io/github/last-commit/Nelson-Gon/pyautocv.svg)](https://github.com/Nelson-Gon/pyautocv/commits/master)\n[![GitHub issues](https://img.shields.io/github/issues/Nelson-Gon/pyautocv.svg)](https://GitHub.com/Nelson-Gon/pyautocv/issues/)\n[![GitHub issues-closed](https://img.shields.io/github/issues-closed/Nelson-Gon/pyautocv.svg)](https://GitHub.com/Nelson-Gon/pyautocv/issues?q=is%3Aissue+is%3Aclosed)\n\n\n**Project Aims**\n\nThe goal of `pyautocv` is to provide a simple computer vision(cv) workflow that enables one to automate \nor at least reduce the time spent in image (pre)-processing. \n\n**Installing the package**\n\nFrom PyPI\n\n```shell\n\npip install pyautocv\n\n```\nFrom GitHub\n\n```shell\npip install git+https://github.com/Nelson-Gon/pyautocv.git\n#or\n# clone the repo\ngit clone https://www.github.com/Nelson-Gon/pyautocv.git\ncd pyautocv\npython3 setup.py install\n\n```\n\n\n\n**Example Usage**\n\n**Note**: Although these methods can be run via this script, the script is less flexible and might be useful for quick\nexploration but not extended analysis. \n\n\nTo run the script at the  commandline, we can do the following\n\n```shell\n\npython -m pyautocv -d \"images/cats\" -s \"png\" -m \"thresh_to_zero\" -o \"threshold\" -mt 200 -t 100\n\n```\n\nSample Result\n\n![Command Line Script](https://github.com/Nelson-Gon/pyautocv/blob/master/sample_results/sample_script.png?raw=true)\n\n\nTo perform edge detection\n\n```shell\n\npython -m pyautocv -d \"images/biology\" -s \"jpg\" -o \"detect_edges\" -m \"sobel_vertical\" -k 3\n```\n\n![Bio Script](https://github.com/Nelson-Gon/pyautocv/blob/master/sample_results/bioscript.png?raw=true)\n\n\nTo smooth images\n\n```shell\npython -m pyautocv -d \"images/houses\" -s \"jpg\" -o \"smooth\" -m \"gaussian\" -k 5 5 --sigma 0.7\n```\n\n![Houses Smooth](https://github.com/Nelson-Gon/pyautocv/blob/master/sample_results/houses_smooth.png?raw=true)\n\nTo get help\n\n```shell\n\npython -m pyautocv -h \n\n\n\n```\n\nFurther exploration is left to the user.\n\n---\n\nThe following section shows how to use the more flexible class/methods approach\n\n* Image Gra(e)ying\n\nTo grey an image directory\n\n```python\nfrom pyautocv.segmentation import Segmentation, gray_images, show_images\n\nimages_list=Segmentation(\"images/cats\")\nshow_images(gray_images(images_list.read_images()), images_list.read_images(), number=2)\n\n```\n![Grayed](https://github.com/Nelson-Gon/pyautocv/blob/master/sample_results/cats_gray.png?raw=true)\n\n* Smoothing\n\nTo smooth a directory of images, we can use `EdgeDetection`'s `smooth` method as\nfollows\n\n```python\n\nimages_list=Segmentation(\"images/cats\")\nshow_images(images_list.smooth(), images_list.read_images(),number=2)\n\n```\n\nThis will give us\n\n![Smooth](https://github.com/Nelson-Gon/pyautocv/blob/master/sample_results/cats_smooth.png?raw=true)\n\nThe above uses default parameters including an `rgb` color mode. For biological images which are often in \ngrayscale, one can set `color_mode` to gray as shown below. All other operations will remain the same.\n\n```python\nimages_list_gray_mode=Segmentation(\"images/dic\", image_suffix =\"tif\", color_mode = \"gray\")\nshow_images(images_list_gray_mode.read_images(), images_list_gray_mode.threshold_images(), number = 4)\n```\n\nResult\n\n![Sample Gray](https://github.com/Nelson-Gon/pyautocv/blob/master/sample_results/gray_mode.png?raw=true)\n\n\nTo use a different filter\n\n```python\n\nimages_list = Segmentation(\"images/cats\")\nshow_images(images_list.read_images(), images_list.smooth(mask=\"median\", kernel_shape=(7, 7)))\n\n```\n\n![Cats-Median-Smooth](https://github.com/Nelson-Gon/pyautocv/blob/master/sample_results/cat_median_smooth.png?raw=true)\n\n\n* Edge Detection \n\nTo detect edges in a directory of images, we can use `Segmentation`'s `detect_edges`. \n\n```python\n\nshow_images(images_list.read_images(), images_list.detect_edges(operator=\"roberts\", mask=\"gaussian\", sigma=0.8))\n\n```\n\nThe above will give us the following result\n\n\n![Sample_colored](https://github.com/Nelson-Gon/pyautocv/blob/master/sample_results/cats_gauss_edge.png?raw=true)\n\n\nTo use a different filter e.g Laplace,\n\n```python\n\nshow_images(images_list.read_images(), images_list.detect_edges(operator=\"laplace\", mask=\"gaussian\", sigma=0))\n\n```\n\nThis results in\n\n![Laplace](https://github.com/Nelson-Gon/pyautocv/blob/master/sample_results/cats_laplace_gaussian.png?raw=true)\n\n\n\n* Thresholding\n\nTo perform thresholding, we can use the method `threshold_images`.\n\n\n\n```python\nto_threshold = Segmentation(\"images/biology\")\nshow_images(to_threshold.read_images(),to_threshold.threshold_images())\n\n```\n\n![Threshold](https://github.com/Nelson-Gon/pyautocv/blob/master/sample_results/bio_thresh.png?raw=true)\n\nTo use a different thresholding method.\n\n```python\n\nshow_images(to_threshold.read_images(),to_threshold.threshold_images(threshold_method=\"otsu\"))\n\n```\n\nThe above gives us:\n\n![otsu](https://github.com/Nelson-Gon/pyautocv/blob/master/sample_results/bio_thresh_otsu.png?raw=true)\n\nFor cat lovers, here's thresholding with inverse binary.\n\n```python\n\nshow_images(images_list.read_images(),images_list.threshold_images(threshold_method=\"binary_inverse\"))\n\n```\n\nResult:\n\n![Cats](https://github.com/Nelson-Gon/pyautocv/blob/master/sample_results/cats_bin_inverse.png?raw=true)\n\n\n\nThresholding applied to images of houses.\n\n```python\nimages_list=Segmentation(\"images/houses\")\nshow_images(images_list.read_images(), images_list.threshold_images(threshold_method=\"thresh_to_zero\"))\n```\n\n![Threshold-Houses](https://github.com/Nelson-Gon/pyautocv/blob/master/sample_results/houses_thresh.png?raw=true)\n\n```python\nimages_list=Segmentation(\"images/potholes\")\nshow_images(images_list.read_images(), images_list.threshold_images(\"binary\"))\n```\n\n![Potholes](https://github.com/Nelson-Gon/pyautocv/blob/master/sample_results/potholes.png?raw=true)\n\n\nThese and more examples are available in [example.py](https://github.com/Nelson-Gon/pyautocv/blob/1bc67af448ea0bab00ea7223354619f7e9a5d42c/examples/example.py). Image sources are\nshown in `sources.md`. If you feel attribution was not made, please file an issue and cite the violating image.\n\n\n\n\n**Citation**\n\nNelson Gonzabato(2021) pyautocv: (Semi) Automated Image Processing, https://github.com/Nelson-Gon/pyautocv.\n\n\n```shell\n@misc {Gonzabato2021,\nauthor = {Gonzabato, N},\ntitle = {pyautocv: (Semi) Automated Image Processing},\nyear = {2021},\npublisher = {GitHub},\njournal = {GitHub repository},\nhowpublished = {\\url{https://github.com/Nelson-Gon/pyautocv}},\ncommit = {7fe2e0f7894e8be4588a22758e8097c247cd1cd9}\n\n```\n\n>Thank you very much\n\n> “A language that doesn't affect the way you think about programming is not worth knowing.”\n― Alan J. Perlis\n\n\n---\n\n**References**\n\n* [Bebis](https://www.cse.unr.edu/~bebis/CS791E/Notes/EdgeDetection.pdf)\n\n* [Standford, author unknown](https://ai.stanford.edu/~syyeung/cvweb/tutorial3.html)\n\n* [Funkhouser et al.,2013](https://www.cs.princeton.edu/courses/archive/fall13/cos429/lectures/05-segmentation1)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Nelson-Gon/pyautocv/archive/refs/tags/v0.3.1.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.github.com/Nelson-Gon/pyautocv",
    "keywords": "image-data image-analysis computer-vision image-processing",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyautocv",
    "package_url": "https://pypi.org/project/pyautocv/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyautocv/",
    "project_urls": {
      "Download": "https://github.com/Nelson-Gon/pyautocv/archive/refs/tags/v0.3.1.zip",
      "Homepage": "http://www.github.com/Nelson-Gon/pyautocv"
    },
    "release_url": "https://pypi.org/project/pyautocv/0.3.1/",
    "requires_dist": [
      "scikit-image",
      "scipy",
      "matplotlib",
      "opencv-python"
    ],
    "requires_python": ">=3.6",
    "summary": "(Semi) Automated Image Processing",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10545033,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41755df90143eee2327cad0977a1487156570eaa935d7fb7b357e3887fcb3b7a",
          "md5": "2110a610505d7f01d7599cfcb61d8f04",
          "sha256": "a2edbdc364fd92d22a1e63567c2483bcdd4d56445650754b5b26c9fac3a1f23f"
        },
        "downloads": -1,
        "filename": "pyautocv-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2110a610505d7f01d7599cfcb61d8f04",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5810840,
        "upload_time": "2020-04-26T17:36:00",
        "upload_time_iso_8601": "2020-04-26T17:36:00.822702Z",
        "url": "https://files.pythonhosted.org/packages/41/75/5df90143eee2327cad0977a1487156570eaa935d7fb7b357e3887fcb3b7a/pyautocv-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d410ce892781efea82de15a2f6ac745d9d3da1fcc7bc5810623cdabc2572454",
          "md5": "05019732a8b3f7a7d86d230f34fa8af9",
          "sha256": "e7ce5920b0b526651818afebe46c3cee9e81a552e888e3dd66e24fc093d910fe"
        },
        "downloads": -1,
        "filename": "pyautocv-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "05019732a8b3f7a7d86d230f34fa8af9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9297395,
        "upload_time": "2020-05-27T09:49:58",
        "upload_time_iso_8601": "2020-05-27T09:49:58.408122Z",
        "url": "https://files.pythonhosted.org/packages/0d/41/0ce892781efea82de15a2f6ac745d9d3da1fcc7bc5810623cdabc2572454/pyautocv-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81ca1628d3d9ddf09c831108477865c9289961a9b3519f3d464e35a277a0eafe",
          "md5": "d84ac28d4c4dc9978e36eb5168d71fc6",
          "sha256": "cf6b4ca57854f94f7512e117ece00ff9d623800a3f02a271d8254c2e22553b28"
        },
        "downloads": -1,
        "filename": "pyautocv-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d84ac28d4c4dc9978e36eb5168d71fc6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16558221,
        "upload_time": "2021-01-29T10:01:55",
        "upload_time_iso_8601": "2021-01-29T10:01:55.713542Z",
        "url": "https://files.pythonhosted.org/packages/81/ca/1628d3d9ddf09c831108477865c9289961a9b3519f3d464e35a277a0eafe/pyautocv-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22312ba62379bcc976d2642e200a5c2390586fe5f3384e0e0f7790d200eaf681",
          "md5": "c327bd3484b8e52b68199dffbc7c828c",
          "sha256": "26e2330d1b6ebaefa894a611eef37dd08a94d59171bb458f34658234ba41a786"
        },
        "downloads": -1,
        "filename": "pyautocv-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c327bd3484b8e52b68199dffbc7c828c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10059,
        "upload_time": "2021-06-03T02:51:28",
        "upload_time_iso_8601": "2021-06-03T02:51:28.031790Z",
        "url": "https://files.pythonhosted.org/packages/22/31/2ba62379bcc976d2642e200a5c2390586fe5f3384e0e0f7790d200eaf681/pyautocv-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ec012ec72c04e299f89385b82df29f991a74aad5cdecf540d57d8325c693602",
          "md5": "0b59f443e40dd6c65e588f8f77904901",
          "sha256": "ab2234a569fc4d150ca34e162c830c788577eb2a9705962b206d5a906ed32748"
        },
        "downloads": -1,
        "filename": "pyautocv-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0b59f443e40dd6c65e588f8f77904901",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17023232,
        "upload_time": "2021-06-03T02:51:29",
        "upload_time_iso_8601": "2021-06-03T02:51:29.803428Z",
        "url": "https://files.pythonhosted.org/packages/5e/c0/12ec72c04e299f89385b82df29f991a74aad5cdecf540d57d8325c693602/pyautocv-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22312ba62379bcc976d2642e200a5c2390586fe5f3384e0e0f7790d200eaf681",
        "md5": "c327bd3484b8e52b68199dffbc7c828c",
        "sha256": "26e2330d1b6ebaefa894a611eef37dd08a94d59171bb458f34658234ba41a786"
      },
      "downloads": -1,
      "filename": "pyautocv-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c327bd3484b8e52b68199dffbc7c828c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10059,
      "upload_time": "2021-06-03T02:51:28",
      "upload_time_iso_8601": "2021-06-03T02:51:28.031790Z",
      "url": "https://files.pythonhosted.org/packages/22/31/2ba62379bcc976d2642e200a5c2390586fe5f3384e0e0f7790d200eaf681/pyautocv-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ec012ec72c04e299f89385b82df29f991a74aad5cdecf540d57d8325c693602",
        "md5": "0b59f443e40dd6c65e588f8f77904901",
        "sha256": "ab2234a569fc4d150ca34e162c830c788577eb2a9705962b206d5a906ed32748"
      },
      "downloads": -1,
      "filename": "pyautocv-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0b59f443e40dd6c65e588f8f77904901",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17023232,
      "upload_time": "2021-06-03T02:51:29",
      "upload_time_iso_8601": "2021-06-03T02:51:29.803428Z",
      "url": "https://files.pythonhosted.org/packages/5e/c0/12ec72c04e299f89385b82df29f991a74aad5cdecf540d57d8325c693602/pyautocv-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}