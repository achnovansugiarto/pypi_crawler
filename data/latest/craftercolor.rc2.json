{
  "info": {
    "author": "Alawi Hussein Adnan Al Sayegh",
    "author_email": "programming.laboratorys@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Programming Language :: Python :: 3"
    ],
    "description": "# installation\n\nRun the following to install:\n```cmd\npip install CrafterColor\n```\n### or\n```cmd\npython -m pip install CrafterColor\n```\nif that didn't try replacing `pip` with `pip3`\nneed help? my discord: `i am me#3889`\n\n# Color\nprint and menaged colors in Python!\n```python\n>>> from CrafterColor import Color\n>>> from CrafterColor import activeColor\n>>> activeColor()\n>>> Color((0,140,140),type='rgb') # rgb type default \"hex\"\n<Color(color=35980,hex='008c8c')> # md doesn't support coloring\n>>> Color('00cfff') # hex type\n<Color(color=53247,hex='00cfff')> # md doesn't support coloring\n>>>\n>>> from CrafterColor import Colors\n>>> dir(Colors)\n[..., 'hex2rgb', 'hsl2rgb', 'int2hex', 'random', 'rgb', 'rgb2hex', 'terminalColors']\n>>> dir(Colors.rgb)\n[..., 'black', 'blue', 'brown', 'cyan', 'darkgreen', 'deeppink', 'deepskyblue', 'drakgray', 'gold', 'gray', 'green', 'hotpink', 'lime', 'orange', 'pink', 'purple', 'red', 'silver', 'skyblue', 'teal', 'violet', 'white', 'yellow']\n>>> Color(Colors.random().color,type='rgb') # random color from the Colors.rgb class return basic ColorObj\n<Color(color=32896,hex='008080')> # md doesn't support coloring\n>>> print(\"logging color\")\nlogging color # md doesn't support coloring\n>>> print(\"FAIL color\",color=\"FAIL\")\nFAIL color # md doesn't support coloring\n>>> print(\"warn the color is here\",color=\"WARNING\")\nwarn the color is here # md doesn't support coloring\n>>> print(\"[OK] color text is here\",color=\"OKBLUE\")\n[OK] color text is here # md doesn't support coloring\n```\n## let's try Hello, World! program\n```py\nfrom CrafterColor import *\nprint(\"Hello, World!\")\n```\n\n> **Warning**\n> importing everything replace the bult-in print function.\n> to replace it again add this block `print = __builtins__.print`\n\n## examples Color/Colors class\n### this is a test program\n```py\nfrom CrafterColor import __test__\n```\n\n![cmder.png colors](https://raw.githubusercontent.com/programminglaboratorys/Colorit/main/CrafterColor/IMGS/cmder.png)\n\n### active Colors\n```python\nfrom CrafterColor import * #import Everything\nactiveColor() #trun on the Colors\nprint(\"normal COLOR\",color=\"normal\") # 'normal' means no colors or you can replace it with None\n```\n\n> **Important**\n> if your using cmd or powershell make sure to call the activeColor function\n### print Colors logs\n```python\nfrom CrafterColor.Print import printColors\nfrom CrafterColor.Print import print\n# the a available keywards Colors\nfor LOF in printColors:\n\tprint(\"Hello, World\",LOF,sep=\": \",color=LOF)\n```\n### don't like printColors? then take a look at this\n```py\nfrom CrafterColor.Color import Color\nprint(\"green Color:\", repr(Color((0,200,25),type='rgb')), color=normal)\n# output : green Color: <Color(color=51225,hex='00c819')>\n```\n### change print color\n```py\n# contrell print color\nprint(\"Hello User, i am Blue!\", color=Color((0,144,250),type='rgb'))\n\n```\n\n## random Colors\n\n### random Color\n```py\nprint(\"random Color:\",repr(Color(type='random')), color=normal)\n```\n\n### random color from Color class\n```py\nfrom CrafterColor.Color import Color\n# contrell print color\n# random Color rgb(0>=255,0>=255,0>=255)\nprint(\"Hello User, i am Random Color!\", color=Color((type='random'))\n```\n### random from Colors.rgb class\n\n```py\nfrom CrafterColor.Color import Colors\nfrom CrafterColor.Color import Color\nrandom = Colors.random()\n# random color from the Colors.rgb class. return basic ColorObj\nprint(\"Hello, i am Random!\", color=Color(random.color,type='rgb',name=random.name))\n\"\"\"\n>> random = Colors.random()\n>> Color(random.color,type='rgb',name=random.name)\n<Color(color=16753920,hex='ffa500',name='orange')>\n\"\"\"\n```\n> **Note**\n> you must pass the color type. call the bultin help function to know more\n## example ColorArray\n### random Colors Array\n```py\n>>> from CrafterColor import ColorArray\n>>> ColorArray(range(0,10))\n<Array([<Color(color=16197168,hex='f72630')>, <Color(color=3654320,hex='37c2b0')>, <Color(color=16176321,hex='f6d4c1')>, <Color(color=15026181,hex='e54805')>, <Color(color=16720637,hex='ff22fd')>, <Color(color=15261965,hex='e8e10d')>, <Color(color=15084580,hex='e62c24')>, <Color(color=8171351,hex='7caf57')>, <Color(color=13859068,hex='d378fc')>, <Color(color=285121,hex='0459c1')>])>\n```\n### random rgbs colors\n```py\n>>> colors = ColorArray(range(0,10),dum=\"null\")\n>>> colors\n<Array([<Color(color=6908265,hex='696969',name='gray')>, <Color(color=16776960,hex='ffff00',name='yellow')>, <Color(color=16716947,hex='ff1493',name='deeppink')>, <Color(color=16716947,hex='ff1493',name='deeppink')>, <Color(color=8388736,hex='800080',name='purple')>, <Color(color=0,hex='000000',name='black')>, <Color(color=65280,hex='00ff00',name='lime')>, <Color(color=16738740,hex='ff69b4',name='hotpink')>, <Color(color=9055202,hex='8a2be2',name='violet')>, <Color(color=6908265,hex='696969',name='gray')>])>\n```\n### blank array\n```python\n>>> ColorArray(range(0,10),dum=\"blank::white\")\n<Array([<Color(color=16777215,hex='ffffff',name='white')>, <Color(color=16777215,hex='ffffff',name='white')>, <Color(color=16777215,hex='ffffff',name='white')>, <Color(color=16777215,hex='ffffff',name='white')>, <Color(color=16777215,hex='ffffff',name='white')>, <Color(color=16777215,hex='ffffff',name='white')>, <Color(color=16777215,hex='ffffff',name='white')>, <Color(color=16777215,hex='ffffff',name='white')>, <Color(color=16777215,hex='ffffff',name='white')>, <Color(color=16777215,hex='ffffff',name='white')>])>\n```\n> **Warning**\n> make sure to write the right value for dum\n# Features\n## ColorArray class Features\n```python\n>>> colors = ColorArray([Color('ffd700',name=\"gold\"),Color('00aeff',name='blue'),Color(\"ee0000\",name=\"red\")],dum=\"blank::red\")\n>>> colors\n<Array([<Color(color=16766720,hex='ffd700',name='gold')>, <Color(color=44799,hex='00aeff',name='blue')>, <Color(color=15597568,hex='ee0000',name='red')>])>\n>>> colors[0]\n<Color(color=16766720,hex='ffd700',name='gold')>\n>>> colors[1]\n<Color(color=44799,hex='00aeff',name='blue')>\n>>> colors.append(\"6aa84f\")\n>>> colors[len(colors)-1]\n<Color(color=6989903,hex='6aa84f')>\n>>> colors.display()\nColor Object                                      | Color\n------------------------------------------------------------\n<Color(color=16766720,hex='ffd700',name='gold')>  | â–ˆ\n<Color(color=44799,hex='00aeff',name='blue')>     | â–ˆ\n<Color(color=15597568,hex='ee0000',name='red')>   | â–ˆ\n<Color(color=6989903,hex='6aa84f')>               | â–ˆ\n# md doesn't support coloring\n```\n## Color class Features\n```python\n>>> myColor = colors[0]\n>>> myColor.print(\"Hello World\")\nHello World\n>>> myColor.print\n<bound method Color.print of <Color(color=16766720,hex='ffd700',name='gold')>>\n>>> myColor.colorize\n<bound method Color.colorize of <Color(color=16766720,hex='ffd700',name='gold')>>\n>>> myColor.colorize(\"Hello i am a color text\")\n'\\x1b[38;2;255;215;0mHello i am a color text\\x1b[0m'\n>>> print(myColor.colorize(\"Hello i am a color text\"))\nHello i am a color text\n>>> str(myColor)\n'#ffd700'\n>>> int(myColor)\n16766720\n>>> hex(int(myColor))\n'0xffd700'\n>>> myColor.print()\nâ–ˆ\n```\n## Colors class Features\n```python\n>>> Colors.random_rgb()\n(226, 137, 27)\n>>> Colors.random_rgb()\n(132, 188, 185)\n>>> Colors.random()\n<ColorObject(color=(192, 192, 192),name='silver')>\n>>> Colors.random()\n<ColorObject(color=(255, 20, 147),name='deeppink')>\n>>> Colors.hex2rgb(\"00e0ff\")\n(0, 224, 255)\n>>> Colors.hex2rgb(\"00efaa\")\n(0, 239, 170)\n>>> Colors.rgb2hex(Colors.hex2rgb(\"00efaa\"))\n'00efaa'\n>>> Colors.rgb2hex(Colors.hex2rgb(\"0aea0f\"))\n'0aea0f'\n>>> Colors.rgb.brown\n(139, 69, 19)\n>>> Colors.rgb.white\n(255, 255, 255)\n>>> Colors.rgb.skyblue\n(135, 206, 235)\n>>> Colors.rgb2hex(Colors.rgb.skyblue)\n'87ceeb'\n```\n\n## print Features\n```python\n>>> from CrafterColor import *\n>>> activeColor()\n>>>\n>>> myColor = Color((250,250,0),type=\"rgb\")\n>>> print(\"Hello, World!\",color=myColor)\nHello, World!\n>>>\n>>> bg_ = Color((0,200,200),type=\"rgb\")\n>>> print(\"Hello, World!\",color=myColor,bg=bg_)\nHello, World!\n>>> print(\"test\",color=\"logb\",bg=\"logc\")\ntest\n>>>\n>>> print(\"test\",color=\"logb\",bg=\"bf0f00\")\ntest\n>>> print(\"test\",color=\"c0c0c0\",bg=\"bf0f00\")\ntest\n>>>\n>>> from CrafterColor.Print import printColors,logs\n>>> from CrafterColor import TColor\n>>> dir(TColor),logs,printColors\n(['BOLD', 'ENDC', 'FAIL', 'HEADER', 'LOG', 'LOGB', 'LOGC', 'NORMAL', 'OKBLUE', 'OKCYAN', 'OKGREEN', 'UNDERLINE', 'WARNING', ...], {'LOG': '16C60C', 'LOGB': '3B78FF', 'LOGC': '61D6D6', 'NORMAL': None}, ['FAIL', 'HEADER', 'OKBLUE', 'OKCYAN', 'OKGREEN', 'WARNING'])\n```\n\n# Change Log\n\n0.2.0 (2022/06/30)\n-------------------\n- First Release\n\n\nChange Log\n==========\n\n0.2.0 (2022/06/30)\n-------------------\n- First Release\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "CrafterColor",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "CrafterColor",
    "package_url": "https://pypi.org/project/CrafterColor/",
    "platform": null,
    "project_url": "https://pypi.org/project/CrafterColor/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/CrafterColor/0.2.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "simplest and coolest color Library. print and menaged colors in Python!",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14309169,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "373cb4e9f663b2d3c309bdf99f7736c252b8cd4c30db387c5bb767e3e6a37f15",
          "md5": "ccb3b3366ab08c9448d6eeb1cac00e4e",
          "sha256": "717fedb3858ebc72e96090023a1168071b99ba12fc74607c15c3c13527df3cc5"
        },
        "downloads": -1,
        "filename": "CrafterColor-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ccb3b3366ab08c9448d6eeb1cac00e4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9021,
        "upload_time": "2022-07-01T13:10:30",
        "upload_time_iso_8601": "2022-07-01T13:10:30.802357Z",
        "url": "https://files.pythonhosted.org/packages/37/3c/b4e9f663b2d3c309bdf99f7736c252b8cd4c30db387c5bb767e3e6a37f15/CrafterColor-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "911813a6e278bb7c01d0424c37049e370d00cc06abed907a2739bce3014e4bae",
          "md5": "235912930bba37c0f023866b9b1ff8fd",
          "sha256": "f70e6a5696df50900c4a54139cea244aeb2eb9ef193e366574f9d0d56507cb06"
        },
        "downloads": -1,
        "filename": "CrafterColor-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "235912930bba37c0f023866b9b1ff8fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7929,
        "upload_time": "2022-07-01T13:10:34",
        "upload_time_iso_8601": "2022-07-01T13:10:34.894436Z",
        "url": "https://files.pythonhosted.org/packages/91/18/13a6e278bb7c01d0424c37049e370d00cc06abed907a2739bce3014e4bae/CrafterColor-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f947c0fed12281311fb01a32dda0f7895325a6da1d466b7405d91217927c9a6c",
          "md5": "54c5f7299161f8294fed9745f6300cee",
          "sha256": "3b9675f83ed6ba6faea37b2ae3893c6bc3d1c755542152a04b8c84f6c2b52d60"
        },
        "downloads": -1,
        "filename": "CrafterColor-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54c5f7299161f8294fed9745f6300cee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11568,
        "upload_time": "2022-07-01T14:19:43",
        "upload_time_iso_8601": "2022-07-01T14:19:43.623851Z",
        "url": "https://files.pythonhosted.org/packages/f9/47/c0fed12281311fb01a32dda0f7895325a6da1d466b7405d91217927c9a6c/CrafterColor-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "deb42f1ff278502f828a06b6e129e56c029d28ec35bfe39b1a8d36a548ffbf92",
          "md5": "d6b461798be3eb5e91b5e4015f441eb6",
          "sha256": "cef17aec7cf0ecca6b3eeb2231d565e24b83efb8f3a29288b953ce28ba9e7e12"
        },
        "downloads": -1,
        "filename": "CrafterColor-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d6b461798be3eb5e91b5e4015f441eb6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10222,
        "upload_time": "2022-07-01T14:19:45",
        "upload_time_iso_8601": "2022-07-01T14:19:45.356234Z",
        "url": "https://files.pythonhosted.org/packages/de/b4/2f1ff278502f828a06b6e129e56c029d28ec35bfe39b1a8d36a548ffbf92/CrafterColor-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f947c0fed12281311fb01a32dda0f7895325a6da1d466b7405d91217927c9a6c",
        "md5": "54c5f7299161f8294fed9745f6300cee",
        "sha256": "3b9675f83ed6ba6faea37b2ae3893c6bc3d1c755542152a04b8c84f6c2b52d60"
      },
      "downloads": -1,
      "filename": "CrafterColor-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "54c5f7299161f8294fed9745f6300cee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11568,
      "upload_time": "2022-07-01T14:19:43",
      "upload_time_iso_8601": "2022-07-01T14:19:43.623851Z",
      "url": "https://files.pythonhosted.org/packages/f9/47/c0fed12281311fb01a32dda0f7895325a6da1d466b7405d91217927c9a6c/CrafterColor-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "deb42f1ff278502f828a06b6e129e56c029d28ec35bfe39b1a8d36a548ffbf92",
        "md5": "d6b461798be3eb5e91b5e4015f441eb6",
        "sha256": "cef17aec7cf0ecca6b3eeb2231d565e24b83efb8f3a29288b953ce28ba9e7e12"
      },
      "downloads": -1,
      "filename": "CrafterColor-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d6b461798be3eb5e91b5e4015f441eb6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10222,
      "upload_time": "2022-07-01T14:19:45",
      "upload_time_iso_8601": "2022-07-01T14:19:45.356234Z",
      "url": "https://files.pythonhosted.org/packages/de/b4/2f1ff278502f828a06b6e129e56c029d28ec35bfe39b1a8d36a548ffbf92/CrafterColor-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}