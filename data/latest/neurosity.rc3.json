{
  "info": {
    "author": "Alex Castillo",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Neurosity Python SDK ðŸ¤¯\n\nWelcome to the official Neurosity Python SDK. This library is compatible with Python 3.\n\n## Documentation\n\n- [Getting Started](#getting-started)\n- [Authentication](#authentication)\n- [Brainwaves](#brainwaves)\n- [Signal Quality](#signal-quality)\n- [Accelerometer](#accelerometer)\n- [Calm](#calm)\n- [Focus](#focus)\n- [Kinesis](#kinesis)\n- [Device Info](#device-info)\n- [Device Status](#device-status)\n- [Device Settings](#device-settings)\n\n## Getting Started\n\nTo get started with the Neurosity SDK, you'll need:\n\n- Your device ID\n- Your Neurosity account email\n- Your Neurosity account password\n\nTo get your 32-character Neurosity device ID, use the Neurosity mobile app available for iOS and Android. Go to `Settings -> Device Info`.\n\n> ðŸ’¡ Never hardcode your email and password directly in your Python code. Instead, create a `.env` file in the root of your project and add:\n\n```bash\nNEUROSITY_EMAIL=your email here\nNEUROSITY_PASSWORD=your password here\nNEUROSITY_DEVICE_ID=your device id here\n\n```\n\n## Authentication\n\nWe take data privacy very seriously at Neurosity. This is why we have designed the Neurosity OS to require authentication and authorization for streaming data.\n\nWhen you sign up for an account on the Neurosity mobile app or console.neurosity.co and claim a device you have three new important items: deviceId, email, and password. If your device is not added to your Neurosity account, you will not be able to authenticate with it.\n\n```python\nfrom neurosity import neurosity_sdk\nfrom dotenv import load_dotenv\nimport os\n\nload_dotenv()\n\nneurosity = neurosity_sdk({\n    \"device_id\": os.getenv(\"NEUROSITY_DEVICE_ID\"),\n})\n\nneurosity.login({\n    \"email\": os.getenv(\"NEUROSITY_EMAIL\"),\n    \"password\": os.getenv(\"NEUROSITY_PASSWORD\")\n})\n```\n\n## Brainwaves\n\nThe brainwaves API is what we always wished for when it came to inventing the future: an easy way to get lossless brainwaves. Sometimes we wanted to manipulate the raw data and other times we wanted to analyze the power in each frequency bin. With brainwaves, our goal is to enable new APIs and powerful programs to be built. We expect that someone working with the brainwaves API has a bit of experience working with EEG data or a strong desire to learn.\n\n### Sampling Rate\n\nThe sampling rate will vary depending on the model of your device.\n\n- Crown -> 256Hz\n- Notion 2 -> 250Hz\n- Notion 1 -> 250Hz\n\nA sampling rate of 250Hz means the data contains 250 samples per second.\n\n### Metrics\n\nThere are four brainwaves metrics:\n\n- raw\n- rawUnfiltered\n- psd\n- powerByBand\n\n### Raw\n\nThe `raw` brainwaves parameter emits events of 16 samples for Crown and 25 for Notion 1 and 2. We call these groups of samples Epochs.\n\n```python\nfrom neurosity import neurosity_sdk\nfrom dotenv import load_dotenv\nimport os\n\nload_dotenv()\n\nneurosity = neurosity_sdk({\n    \"device_id\": os.getenv(\"NEUROSITY_DEVICE_ID\"),\n})\n\nneurosity.login({\n    \"email\": os.getenv(\"NEUROSITY_EMAIL\"),\n    \"password\": os.getenv(\"NEUROSITY_PASSWORD\")\n})\n\ndef callback(data):\n    print(\"data\", data)\n\nunsubscribe = neurosity.brainwaves_raw(callback)\n```\n\nThe code above will output new epochs of 16 samples approximately every 62.5ms (see the `data` property). Here's an example of 1 event:\n\n```\n{\n  label: 'raw',\n  data: [\n    [\n        4.457080580994754,   4.851055413759571,\n       2.7564288713972513, -0.5027899221971044,\n       -2.738312652550817, -1.4222768509324195,\n       3.7224881424127774,  10.026623768677425,\n       13.387940036943913,   10.26958811063134,\n      0.40214439930276313,  -10.90689891807639,\n       -16.32031531728357,  -13.21110292437311,\n       -4.346339152926361,   5.098462672115731\n    ],\n    [\n       1.5414324608328491,   1.352550875105505,\n       0.6428681224481866,  0.3647622839064659,\n        1.106405158893898,    3.33535030106603,\n        6.439447624257519,   8.453867322080404,\n        7.755719477492251,  3.8854840128526726,\n       -2.468418708869076,  -8.666576946507902,\n      -11.279063910921169,   -9.32163910159064,\n      -4.6549399985975555, 0.22830321396497988\n    ],\n    [\n       6.2342484244030345,   5.845156697083605,\n       3.8819440822537112,   1.452431055127227,\n      -0.5878084105038387, -0.7746780077287738,\n       1.8154316196085094,   6.074662974618359,\n        9.322430831260775,   8.910160063433407,\n       3.5874046672323043,  -4.554187036159066,\n        -10.5813322711113, -11.267696723897789,\n       -6.818338145262863,  0.6177864457464617\n    ],\n    [\n      -0.03815349843983071, -0.3068494494059635,\n       -2.2075671327003255,  -3.776991642244289,\n        -3.708252867923816, -1.2505125622236009,\n        3.2487010722502587,   7.931368090269462,\n        10.511652358411597,   9.297157466389192,\n         4.118487064147775,  -2.970255165231891,\n        -8.603434324519576, -10.495401970387743,\n        -8.913968355428027,  -5.576315727924461\n    ],\n    [\n      0.4087987173450871, 1.9781686568610883,\n      2.4009012312957907, 2.3444623435812657,\n       2.017191526524595,  2.021880260660721,\n       2.982232584662937,  4.815498699074363,\n      6.7093290202119835,  7.201157697368587,\n       5.116090777276677, 0.6675802498302112,\n      -4.274751517565271, -7.425134286013973,\n      -7.838523284654038, -5.779233789541195\n    ],\n    [\n       5.2762700288652935,   6.831919893235682,\n        6.468141714172544,   5.147606136919876,\n        4.117592132996127,   4.788874365858218,\n        7.116782027901927,    9.33554991116211,\n        9.233167024756574,   5.130966403760715,\n      -2.8162586562506586,  -11.22160733448037,\n      -15.538132012307846, -13.939535958562475,\n        -7.83032193319038, -0.5139467086717411\n    ],\n    [\n      -1.0706877843314648,  1.6368537502872518,\n        2.022946637839514,   0.940183871324582,\n      -0.2837858448921892,  0.3170369574339986,\n        3.778225479624427,   8.805770181583913,\n       12.446309024446833,  11.648691354684154,\n        5.113617281379798,  -4.345975093596486,\n       -11.05811376487729, -11.719256256733335,\n       -7.336025188705039,  -1.276174494743728\n    ],\n    [\n        7.286685329938873,    8.201842402616839,\n        5.517128178717949,   1.2864058791627557,\n      -1.5101995538838966, -0.19819079250913285,\n        5.195437241439434,   11.512563735679437,\n       14.388370410845482,   10.711863367882668,\n       0.8428177428317678,  -10.126402143316568,\n       -15.75585412249734,  -13.887360795976967,\n       -6.836657125920971,   1.1706118773123455\n    ]\n  ],\n  info: {\n    channelNames: [\n      'CP3', 'C3',\n      'F5',  'PO3',\n      'PO4', 'F6',\n      'C4',  'CP4'\n    ],\n    notchFrequency: '60Hz',\n    samplingRate: 256,\n    startTime: 1628194299499\n  }\n}\n```\n\nEpochs are pre-filtered on the device's Operating System to give you the cleanest data possible with maximum performance. These filters include:\n\n- Notch of `50Hz` or `60Hz` and a bandwidth of `1`.\n- Band Pass with cutoff between `2Hz` and `45Hz`.\n\nThe order of these filters is set to `2`, and the characteristic used is `butterworth`.\n\nTo apply your own filters, you can use the `brainwaves_raw_unfiltered` SDK method (see next section) and use a library like MNE or Brainflow for fine-grained filter customization.\n\n#### Unsubscribe from brainwaves\n\nTo unsubscribe from brainwaves and stop the emission of data events, you can do the following:\n\n```python\nunsubscribe = neurosity.brainwaves_raw(callback)\n\ntimer.sleep(5)\n\nunsubscribe()\n```\n\nThis last example will emit data for 5 seconds.\n\n### Raw Unfiltered\n\nThe unfiltered raw data follows the same shape as `brainwaves_raw` data shape, just without signal filters applied. This data comes directly from the analog to digital converter, and does not include any processing. We only recommend using the unfiltered data for advanced scenarios.\n\nNote that unfiltered raw data will include environmental noise in the signal, as well as DC drift, which is expected when working with EEG.\n\n```python\nfrom neurosity import neurosity_sdk\nfrom dotenv import load_dotenv\nimport os\n\nload_dotenv()\n\nneurosity = neurosity_sdk({\n    \"device_id\": os.getenv(\"NEUROSITY_DEVICE_ID\"),\n})\n\nneurosity.login({\n    \"email\": os.getenv(\"NEUROSITY_EMAIL\"),\n    \"password\": os.getenv(\"NEUROSITY_PASSWORD\")\n})\n\ndef callback(data):\n    print(\"data\", data)\n\nunsubscribe = neurosity.brainwaves_raw_unfiltered(callback)\n```\n\nThe code above will output new epochs of 16 samples approximately every 62.5ms (see the `data` property).. Here's an example of 1 event:\n\n```\n{\n  label: 'rawUnfiltered',\n  data: [\n    [\n       1385.227003,   861.056247,\n      -1835.167617, -1321.189256,\n        999.860579,  1414.597195,\n      -1246.623837, -1840.934367,\n        406.757043,  1596.652153,\n       -476.360375, -2080.790935,\n       -222.556318,  1579.754234,\n        355.660956, -2065.368232\n    ],\n    [\n        774.21972,    286.25879,\n      -951.714922,  -427.812387,\n       650.368705,   611.744891,\n      -746.391799,    -732.3102,\n       398.039863,   770.732848,\n       -412.99318,  -923.417614,\n       122.174635,   823.840593,\n         7.040799, -1004.286225\n    ],\n    [\n       797.085555,   234.693316,\n       -1099.4376,  -499.427375,\n       669.613557,   598.870286,\n      -859.916308,  -839.665628,\n       420.369256,    765.63665,\n      -515.185355,  -1057.66219,\n       114.195062,   849.388636,\n       -42.177742, -1155.495775\n    ],\n    [\n       192.783795, -156.909245,\n      -538.654687, -173.673053,\n       210.084045,   13.008715,\n      -496.208724, -314.354932,\n       130.355373,  111.244632,\n      -422.783244, -437.267174,\n        43.116515,  179.573914,\n      -267.952711, -512.234925\n    ],\n    [\n       228.256013, -147.253292,\n      -549.249414, -160.731394,\n       234.961536,   16.093256,\n      -506.803451, -304.162537,\n       164.553542,   135.31746,\n      -437.870671, -440.217605,\n        71.212657,  207.267725,\n       -272.04308, -523.634314\n    ],\n    [\n        654.66024,   123.64985,\n      -906.720861, -336.013773,\n       578.217274,  426.337171,\n      -751.487996, -629.246306,\n       371.821267,  573.791629,\n      -480.853076,  -827.26041,\n       143.028812,  673.435705,\n      -121.839358, -934.682893\n    ],\n    [\n       764.362601,   258.095592,\n      -996.172541,  -464.826875,\n       639.975144,   603.094766,\n      -765.368429,  -772.208063,\n       384.829982,   745.453025,\n       -437.46834,  -963.851919,\n        93.139719,   807.747337,\n       -22.865834, -1044.519364\n    ],\n    [\n       1454.293893,   821.493659,\n      -1599.334362,  -991.813951,\n       1131.892333,  1364.506936,\n      -1098.431772, -1494.459978,\n        603.228876,  1578.815461,\n        -421.71036, -1753.024956,\n         21.860006,  1608.252708,\n        343.859235, -1787.089015\n    ]\n  ],\n  info: {\n    channelNames: [\n      'CP3', 'C3',\n      'F5',  'PO3',\n      'PO4', 'F6',\n      'C4',  'CP4'\n    ],\n    samplingRate: 256,\n    startTime: 1628194299499\n  }\n}\n```\n\n### Power Spectral Density (PSD)\n\n```python\ndef callback(data):\n    print(\"data\", data)\n\nunsubscribe = neurosity.brainwaves_psd(callback)\n```\n\nThe code above will output new epochs 4 times a second. Every frequency label (e.g. alpha) contains the computed FFT (Fast Fourier transform) value per channel (see the `psd` property), as well as the frequency ranges (see the `freqs` property).\n\nHere's an example of 1 event:\n\n```\n{\n  label: 'psd',\n  freqs: [\n      0,   2,   4,   6,   8,  10,  12,  14,  16,  18,  20,  22,\n     24,  26,  28,  30,  32,  34,  36,  38,  40,  42,  44,  46,\n     48,  50,  52,  54,  56,  58,  60,  62,  64,  66,  68,  70,\n     72,  74,  76,  78,  80,  82,  84,  86,  88,  90,  92,  94,\n     96,  98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118,\n    120, 122, 124, 126\n  ],\n  info: {\n    notchFrequency: '60Hz',\n    samplingRate: 256,\n    startTime: 1628197298732\n  },\n  psd: [\n    [\n       98.63572869924877,  278.0499119981597,  396.9075453246308,\n      330.93307599602673,  154.4437300666471,   127.381718447909,\n      156.28589064508202,  90.27952532968459,  74.02596881179568,\n      102.68745491461037,  77.40464372151173,  65.97947493071318,\n       93.61333998578448,  70.03755439407374, 47.965913961348285,\n       72.11457749610696,  60.14793608854482,  36.43407809513316,\n        52.5321191045999, 45.400500672083176, 24.168757651016627,\n        37.1839936941784, 35.105296424441036, 14.991272333196237,\n      17.013079679743214, 22.931615422127962,   9.64319909169338,\n        6.95610789706202,  10.48806813349181,   8.77101666889275,\n        8.08687117576467,   7.88454615426007,   7.00857990702008,\n       9.129752553805993,  7.500414008219254, 6.4966183674128635,\n       7.833399187762861,  7.283708613586358,  5.616493707372124,\n       7.336663052350952,  6.859592851990316,  6.153804860755752,\n       6.618696201331677,  6.837180878389385, 5.7838083130648945,\n       6.562155335152424,  6.093398492507891,  6.073406841367065,\n      5.9593899491763205,   6.14611107916922,  5.674535238756583,\n      6.0774035077156645,  5.656938723201682,  5.892346415487732,\n        5.61605742554047,  5.842031463718972,  5.514410378848478,\n       5.803658958523979,   5.47172273287992,  5.745739449800702,\n       5.452574435173335,  5.724439426371041, 5.4273919360609035,\n       5.707772456903569\n    ],\n    [\n       705.0449351206108, 1355.4773207863375, 1795.4768676020658,\n      1480.8269991044856,  879.7073135412625,  734.4677613113015,\n       691.6145778964477,  482.9726329188916,  463.9458627254311,\n       448.9185196251005,  325.3989179173811,  356.7357077059943,\n      366.94089924861487, 288.75232488327777,  304.2605284381872,\n       301.8930577524112,  237.4042509842181,   248.189270828571,\n      244.01379638689255,  177.6237336667693, 172.43627544841166,\n      176.69895192953885, 125.52722189861495, 105.15448954029884,\n      106.56146701054848, 63.477588704077554, 33.251603187541896,\n       42.84498288204394, 23.928294234593277,  9.767390485089537,\n       15.03794181419898, 13.965161093202841, 20.844294981525614,\n      12.007423569211078, 11.126393885153014, 20.104729878667776,\n      12.319226156469027, 10.486815016962693, 17.143209506256614,\n      11.132954923524995,  10.62728760663002, 14.463591856614492,\n      10.925935011739528, 10.576245202399233, 12.869498809209984,\n      10.551373735436435,  10.90154409382562, 11.496161902596342,\n       10.59771747532043, 10.626533456022605, 10.982565808529692,\n      10.292226858572462, 10.587506870484761, 10.420838952336604,\n       10.33846013622055, 10.228524593265222, 10.333151489515492,\n      10.081149399888313,  10.23400481786508, 10.046416371678554,\n       10.14064797386651,  9.979626942208188, 10.115418833026341,\n       9.962197147976129\n    ],\n    [\n       929.0377610383296, 1793.6811181430987, 2377.6119679334947,\n      1958.9102655269323, 1162.3055283149445,  979.7382233236812,\n        921.065883147485,  640.2289218688652,  619.3532710184182,\n       597.9752360209405, 433.84218492741303, 480.63827859906377,\n       494.8759497888118,  388.5592867189369, 408.72806358233913,\n       403.8696475504568,  318.0820897599802,  335.6971387951459,\n       330.1749076377176,  240.2816149573954,  234.1828700249589,\n       238.8172342465352, 168.40453177012395, 141.41297208524767,\n       143.3763643586936,  84.85781325822384, 44.693260335642535,\n       57.99822015732011,  32.12541610045182, 13.475265334606835,\n      20.599681672533375,  19.01837044906831, 28.246044041267428,\n      16.189180127175323,  15.41587209212851,  27.05517471975363,\n      16.903913745426895,  14.33546383874818, 23.026090510272617,\n       14.87036823280212,   14.6068129622348, 19.471383549994453,\n       14.96633838574153, 14.387933483886725, 17.466586501671532,\n      14.355984995364704, 14.919336874633427, 15.536030663642576,\n      14.543171342633388, 14.399423945911408,  15.00275665739408,\n      13.982397994287624, 14.474361692225106, 14.126311107434065,\n      14.160828645624179,  13.86227555141294, 14.139642435285486,\n      13.674442534649062, 14.000882290360456, 13.623523705584073,\n      13.881719450096554, 13.533315732597867,  13.84382520692153,\n      13.508775392377734\n    ],\n    [\n       461.1411944745596,   865.879891899699, 1150.3297939965412,\n       967.6717977233337,  599.5067484775997,  487.7449557189379,\n       449.7148527252277, 324.75340665195546,  307.3960653823736,\n      289.99356448521917,  218.9307327550319,   241.757776766985,\n      249.28709256762335, 206.95217758165205,  213.8552238566172,\n      208.04287443336904, 172.16085191285578,  177.8042520513104,\n      170.76433578042244,  131.2290615556113, 127.75140879293434,\n       125.8563352501824,  94.44550500099892,  81.32600662751962,\n       76.33377477822643,  47.53219019300205, 29.403234515228505,\n      29.734512582314988,  14.48430634759893,  4.338569856695335,\n       7.956256668786119,  7.925904164095972, 12.763456529014546,\n       5.823156703304557,  7.213304914646235,  12.53665043042392,\n       6.064277734596193, 6.0142267398677225, 10.591216540020291,\n       5.491335175417487,  5.995538415704912,   8.41366666249266,\n       5.354337464315892,  5.684078918046329,  7.289586947844527,\n       5.258040775750918,  5.927892633808341,  6.209024439918837,\n      5.5308778688068525,  5.658218846438647,  5.937393602233365,\n       5.337787715362042,  5.723456582324143,  5.491309810378187,\n       5.517788579034077, 5.3995359451843115,  5.544753793342432,\n       5.291402564159946,  5.499716204904763,  5.281561955171903,\n      5.4342620388212115,  5.243854533655554,  5.426831995465968,\n        5.23668469315059\n    ],\n    [\n      485.28953220351815,  913.8215446531855, 1212.6893063853145,\n      1017.6653954348992,  629.0590135927589,  513.8401411331691,\n      473.94607162953474,  340.7794194629709,  323.4068209463424,\n       304.6140613386581,  227.9530765749002, 253.44275369319936,\n      261.96382482250846, 215.95821471824453,  223.2060790303756,\n       217.5887331092368, 180.05264499052626,  186.6722683242584,\n      178.86415942933493, 135.75616983861607,  132.7145908145038,\n       131.7205674261096,  98.13621951582651,  84.22587059556682,\n       79.69348482329639,  49.27415323250583, 29.885948066276374,\n      31.018207012950032, 15.464201551787149,  4.696597650070098,\n       8.680077668220271,  8.409519490488169, 13.587393841532371,\n       6.264695355862866,  7.572139679407593,  13.17605643990251,\n       6.652754348269858, 6.3465028991975325, 11.306345734652368,\n       5.926439990819285,  6.470051702062516,  8.904949649675096,\n        5.90150761172456,  6.060485555618185,  7.854198979433359,\n       5.663406547398727, 6.4306283909466435,  6.623721018560318,\n       6.041438452881903, 6.0442294631002795,  6.444444318919457,\n       5.721040377425073,  6.213246144964029, 5.8753004744243755,\n       6.002696003640614,  5.774903831465746,  6.026353504659674,\n       5.663944879598529,  5.975725903093066,  5.652394044025673,\n       5.907643067149823,  5.612177778683849,  5.898257253854689,\n       5.604260960707902\n    ],\n    [\n       703.9620591951088, 1348.1617601998341,  1787.817378338989,\n      1480.9682977349662,  887.8732586924484,  741.7489045127593,\n       696.4862482257432, 486.69267953812624, 464.30488178918847,\n      448.10745320129496,  329.6131727268781,  364.1234842222161,\n      375.17667115955084, 296.30580382389024,  307.6916385785675,\n       303.4585158601969,  241.4840430193035,  253.3373457325428,\n      248.14875370587004,  181.8456760420915, 176.16078095306457,\n      178.58969714768043,  126.8938114163353,  106.7131960446341,\n      106.86715498126117, 63.565099293832944,  33.94124074989405,\n       42.78261882478681, 23.418093057211088,  9.598376452708248,\n        14.8564635663729,  13.73158527388318, 20.632309203759725,\n      11.571312623082235,  11.16199944105178,  19.71697966916169,\n      12.151289348370563,  10.27332116826051,  16.93453042721219,\n      10.734196078665759, 10.578983816474802,  14.17031151713728,\n      10.741999390916682, 10.370828224990875, 12.669038407738478,\n      10.290437631963869, 10.794986602960588, 11.204752776686476,\n      10.481500894235385, 10.373479646590457, 10.845762801813153,\n       10.04623630410688, 10.466118545780976,  10.16324823810254,\n      10.225788013632457,  9.975974411529377,  10.21577779934349,\n       9.834755780463283, 10.117741157508208,  9.799067226573825,\n      10.029038431063377,  9.733625015451048, 10.002552468346979,\n        9.71630020598175\n    ],\n    [\n       753.3573854351718, 1451.3463711535637, 1925.4394750722938,\n      1592.2479396735228,  950.1320711729846,  793.4163539564408,\n        744.990261771651,  519.4611344925438,  498.6282329256233,\n       480.4651411728872,  349.9224396629356, 388.08464608248545,\n      400.41433150212987, 314.28699618071386,  328.3871848882801,\n      325.21671199729667, 257.08898576447365,  270.0756790958063,\n      265.56055695000117, 193.58422699465976,  187.3975181698473,\n       190.5723885919431,  134.7850068920377, 113.55417235960783,\n      114.65352872167782,  67.97249319078067,  36.07066166066659,\n      46.193455592634194, 25.446519462818365, 10.645647869461468,\n       16.33292205396577, 15.082694752225358, 22.479081487850554,\n      12.660457753439347, 12.331655605615103, 21.469122245638992,\n      13.259611882976637, 11.366093905761021,   18.4614508154199,\n      11.778790555694387, 11.710458297806564, 15.485077358432786,\n      11.805213571500564, 11.446226210170733, 13.887884653568616,\n      11.334007371207884, 11.881804314077982,  12.30654501069072,\n      11.528873716721828, 11.419099102496702, 11.910897138255397,\n      11.059631088502826, 11.505557872713792, 11.178885987141047,\n      11.242816922347224,  10.97697117415906, 11.227884136208706,\n      10.822693801769324, 11.121177549665633, 10.782078947654583,\n      11.024368739435461, 10.711151846144949, 10.995151378799578,\n      10.691866595209362\n    ],\n    [\n       367.4136193009799,  826.7329948628463, 1118.3539023221265,\n        890.162220791093,  436.1682590608995,  391.4382314784865,\n      417.04217210936963, 251.56740893464422,  238.5284921292077,\n       267.6000138141995,   168.617128049186, 165.98870799455165,\n      200.56943140232212, 129.37112302840023, 126.00839013852573,\n      162.39587433692205, 109.20332945126022,  87.00867663058928,\n      117.95711115144483,  83.29961985396704,  58.57022651921219,\n       86.68284556964056,  63.23057486573713, 22.615043247176825,\n       45.79353231282386,  39.94573246684187,  6.411920387449734,\n      21.964845928081306, 21.959370088243116, 16.277025835788837,\n      16.547064843486048, 15.715335138181468, 16.607457789253704,\n      17.537478155658583, 13.336615276197591, 15.835823046176726,\n      15.461292461652397, 13.730332854951738,  13.27865408978899,\n      14.709605078820157,   12.9045807988706, 13.692853045756497,\n      13.258453124525246, 13.287331440282053, 12.481768554519784,\n      13.223425784019863, 12.187280042833416, 12.738723198131671,\n      12.048047848217715,  12.49122466572343, 11.744286244430379,\n      12.342663893673903, 11.552471648965968, 12.117055516659004,\n      11.432033986591367, 11.965037193629023, 11.288502743059457,\n      11.863912386218576, 11.190384199321217, 11.771734261131785,\n      11.131137815008097,  11.71660417394918,  11.08761147894627,\n      11.686948260719255\n    ]\n  ]\n}\n```\n\nPlease note this data is pre-filtered using the same filters describe under the `raw` data parameter: notch and band pass.\n\n### Power By Band\n\n```python\ndef callback(data):\n    print(\"data\", data)\n\nunsubscribe = neurosity.brainwaves_power_by_band(callback)\n```\n\nThe code above will output new epochs 4 times a second. Every frequency label (e.g. beta) contains an average power value per channel.\n\nHere's an example of 1 event:\n\n```\n{\n  label: 'powerByBand',\n  data: {\n    alpha: [\n      0.4326838933650053,\n      0.7011913998347046,\n      1.3717684682104212,\n      0.4043711439234614,\n      0.4276277910286375,\n      0.7343967679911133,\n      0.4643529443786634,\n      0.5012185195340365\n    ],\n    beta: [\n      1.0473270376446968,\n      0.6565360935142369,\n      0.9905849734272257,\n      0.4167252084581245,\n      0.5812834985846604,\n      0.9092642713573444,\n      0.9963075404421067,\n      1.0495665446734443\n    ],\n    delta: [\n      0.46131690566460004,\n      1.0030278320362798,\n      0.8563781797682917,\n      0.2911634678359473,\n      0.5829804845703581,\n      0.6714666592936025,\n      0.37730719195446316,\n      1.0851178080710937\n    ],\n    gamma: [\n      0.22648773160183822,\n      0.2171827127990081,\n      0.2626969784220435,\n      0.16349594919353772,\n      0.17327387900192714,\n      0.18990085940799623,\n      0.22908540295491436,\n      0.2537584109981627\n    ],\n    theta: [\n      0.6434504807739541,\n      0.936240328507981,\n      0.8679595766147628,\n      0.23662065697316603,\n      0.6048174207817718,\n      0.816112075629094,\n      0.3367745804938397,\n      1.1043745310136739\n    ]\n  }\n}\n```\n\nPlease note this data is pre-filtered using the same filters describe under the `brainwaves_raw` method: notch and band pass.\n\n### Adding Markers\n\n```python\ndef callback(data):\n    print(\"data\", data)\n\nunsubscribe = neurosity.brainwaves_raw(callback)\ntime.sleep(2)\nneurosity.add_marker(\"eyes-closed\")\ntime.sleep(2)\nunsubscribe()\n```\n\n## Signal Quality\n\nStandard deviation based signal quality metrics. Great signal happens when the standard deviation is between 1.5 and 10.\n\n```python\ndef callback(data):\n    print(\"data\", data)\n\nunsubscribe = neurosity.signal_quality(callback)\n```\n\n## Accelerometer\n\n```python\ndef callback(data):\n    print(\"data\", data)\n\nunsubscribe = neurosity.accelerometer(callback)\n```\n\n## Calm\n\nConstantly fires and predicts user's calm level from passive cognitive state. Calm is a probability from 0.0 to 1.0. To get calm over 0.3 is significant. Calm will take up to 16 seconds to initialize. We normally take a longer rolling average of calm to produce brain processes over time, see how we do it in our flow walk through.\n\nThings that can help increase the calm score are:\n\n- Closing your eyes for 30 seconds or more\n- Seating or standing still\n- Breathing exercises\n- Meditating\n\n```python\ndef callback(data):\n    print(\"data\", data)\n\n    # { probability: 0.34, metric: \"awareness\", label: \"calm\", timestamp:  1569961321101 }\n    # { probability: 0.41, metric: \"awareness\", label: \"calm\", timestamp:  1569961321105 }\n    # { probability: 0.45, metric: \"awareness\", label: \"calm\", timestamp:  1569961321110 }\n\nunsubscribe = neurosity.calm(callback)\n```\n\n## Focus\n\nConstantly fires and predicts user's focus level from passive cognitive state based on the gamma brainwave between 30 and 44 Hz. Focus is a probability from 0.0 to 1.0. To get focus over 0.3 is significant. Focus will take up to 16 seconds to fully initialize.\n\n```python\ndef callback(data):\n    print(\"data\", data)\n\n    # { probability: 0.51, metric: \"awareness\", label: \"focus\", timestamp:  1569961321102 }\n    # { probability: 0.56, metric: \"awareness\", label: \"focus\", timestamp:  1569961321106 }\n    # { probability: 0.62, metric: \"awareness\", label: \"focus\", timestamp:  1569961321111 }\n\nunsubscribe = neurosity.focus(callback)\n```\n\n## Kinesis\n\nThe Kinesis API is based on the Motor Imagery BCI method. Fires when a user attempts to trigger a side effect from defined thoughts. E.g. motor imagery, etc.\n\nKinesis implements a spike detection algorithm over the predictions stream.\n\nTo train a Kinesis command, use [console.neurosity.co](https://console.neurosity.co) and use the corresponding label for the Active classifier. Learn how to train a new command [here](https://support.neurosity.co/hc/en-us/articles/360036344012-Imagined-thought-training).\n\n```python\ndef callback(data):\n    print(\"data\", data)\n    # Switch light off/on\n    light.togglePower()\n\n    # { probability: 0.93, label: \"rightArm\", timestamp: 1569961321174, metric: \"kinesis\" }\n\n\nunsubscribe = neurosity.kinesis(\"rightArm\", callback)\n```\n\nOr:\n\n```python\ndef callback(data):\n    print(\"data\", data)\n    # Launch drone\n    drone.launch()\n\n    # { probability: 0.92, label: \"leftArm\", timestamp: 1569961321191, type: \"kinesis\"  }\n\nunsubscribe = neurosity.kinesis(\"leftArm\", callback)\n```\n\n## Device Info\n\n```python\ninfo = neurosity.get_info()\nprint(info)\n\n# { apiVersion: string,  channelNames: string[], channels: number,\n#  deviceId: string, deviceNickname: string, manufacturer: string, model: string,\n#  modelName: string, modelVersion: string, osVersion: string, samplingRate: number }\n```\n\n## Device Status\n\n### Metrics:\n\n- state: \"online\" | \"offline\" | \"shuttingOff\" | \"updating\" | \"booting\"\n- sleepMode: boolean\n- sleepModeReason: \"updating\" | \"charging\" | null\n- charging: boolean\n- battery: number\n- lastHeartbeat: number\n- ssid: string\n- claimedBy: string\n\n### Get Status Once\n\n```python\nstatus = neurosity.status_once()\nprint(status)\n\n# { state: \"online\", charging: true, battery: 93, ... }\n```\n\n### Stream Status\n\n```python\ndef callback(data):\n    print(\"data\", data)\n    # { state: \"online\", charging: true, battery: 93, ... }\n\n\nunsubscribe = neurosity.status(callback)\n```\n\n## Device Settings\n\n```python\ndef callback(data):\n    print(\"data\", data)\n    # { lsl: false, osc: false }\n\nunsubscribe = neurosity.settings(callback)\n```\n\n## Code of Conduct\n\nThis project has adopted a [Code of Conduct](CODE_OF_CONDUCT.md). Contact [opensource@neurosity.co](mailto:opensource@neurosity.co) with any additional questions or comments.\n\n## License\n\nCopyright (c) Neurosity, Inc. All rights reserved.\n\nLicensed under the [MIT license](LICENSE).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/neurosity/neurosity-python-sdk",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "neurosity",
    "package_url": "https://pypi.org/project/neurosity/",
    "platform": null,
    "project_url": "https://pypi.org/project/neurosity/",
    "project_urls": {
      "Homepage": "https://github.com/neurosity/neurosity-python-sdk"
    },
    "release_url": "https://pypi.org/project/neurosity/1.0.2/",
    "requires_dist": [
      "pyrebase"
    ],
    "requires_python": ">=3.8",
    "summary": "Official Neurosity Python SDK",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17274750,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e69219e122f622f59081f6f7a4337b82363ea77ab10f0fdd20b60e88b70a8031",
          "md5": "33d97981ea53cceff23f8be64ddaab41",
          "sha256": "5902d30c0e29ab2dacd4adb70e8f3a66b8c5984c7eff478d7ac40b935660877a"
        },
        "downloads": -1,
        "filename": "neurosity-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33d97981ea53cceff23f8be64ddaab41",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 17607,
        "upload_time": "2022-03-10T21:01:57",
        "upload_time_iso_8601": "2022-03-10T21:01:57.867409Z",
        "url": "https://files.pythonhosted.org/packages/e6/92/19e122f622f59081f6f7a4337b82363ea77ab10f0fdd20b60e88b70a8031/neurosity-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fc6260ee815daab3c565a2f0f719a36a5164698d8223b6fd4c8a53d2770ab65",
          "md5": "ceebbb5b7f67159d67ad3af0f8e54106",
          "sha256": "cc4440dc521a3ba7615f5154ce4dc67791abd731784b1541057ab33d96792174"
        },
        "downloads": -1,
        "filename": "neurosity-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ceebbb5b7f67159d67ad3af0f8e54106",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 40864,
        "upload_time": "2022-03-10T21:02:01",
        "upload_time_iso_8601": "2022-03-10T21:02:01.936499Z",
        "url": "https://files.pythonhosted.org/packages/8f/c6/260ee815daab3c565a2f0f719a36a5164698d8223b6fd4c8a53d2770ab65/neurosity-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb6135903e7cb8cb59981616025635a5da2c19b1080460a512e2fc47ca840218",
          "md5": "2f7f4a59528f891ba7d80fe03489a650",
          "sha256": "1b7a61ff4825fcc2c10d364ab96faf18205c9a0b91298e21d14c2fa4e9589008"
        },
        "downloads": -1,
        "filename": "neurosity-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f7f4a59528f891ba7d80fe03489a650",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 17606,
        "upload_time": "2022-03-10T21:01:59",
        "upload_time_iso_8601": "2022-03-10T21:01:59.974951Z",
        "url": "https://files.pythonhosted.org/packages/cb/61/35903e7cb8cb59981616025635a5da2c19b1080460a512e2fc47ca840218/neurosity-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60894e3da83ec98966de4627bb9850f74be682fd9774daa0fcf6af1e70833fda",
          "md5": "fd298fb60cdfd925ceed71a4315aaef6",
          "sha256": "a69a0fd5566a7d3c5f825913e1f6310a0ac459b4964a3a2b91a5c4f15b8d3db3"
        },
        "downloads": -1,
        "filename": "neurosity-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fd298fb60cdfd925ceed71a4315aaef6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 40859,
        "upload_time": "2022-03-10T21:02:04",
        "upload_time_iso_8601": "2022-03-10T21:02:04.200487Z",
        "url": "https://files.pythonhosted.org/packages/60/89/4e3da83ec98966de4627bb9850f74be682fd9774daa0fcf6af1e70833fda/neurosity-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0c194779e50ebba6e4a5d1b5140b698df06250247a40fffdcf154cf66818818",
          "md5": "d3bbc9a850161e8e44c879665002467c",
          "sha256": "09aa66de07a2aff6b7af79d5036253ddc86178e2d0cf28908f7ea3c090b3189b"
        },
        "downloads": -1,
        "filename": "neurosity-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3bbc9a850161e8e44c879665002467c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 17661,
        "upload_time": "2022-03-18T15:35:47",
        "upload_time_iso_8601": "2022-03-18T15:35:47.518712Z",
        "url": "https://files.pythonhosted.org/packages/a0/c1/94779e50ebba6e4a5d1b5140b698df06250247a40fffdcf154cf66818818/neurosity-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ced56a649489db5c5ecf9e5d91b7e122b7ad7171565b361c8d62941ea7e1a2e",
          "md5": "4e2ce221cd07f85606ffe2169e9f07a4",
          "sha256": "4fe1b434101b62557b2ac92f52fe4ddf201108e1fbe97b96318932a6c59435b8"
        },
        "downloads": -1,
        "filename": "neurosity-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4e2ce221cd07f85606ffe2169e9f07a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 40884,
        "upload_time": "2022-03-18T15:35:49",
        "upload_time_iso_8601": "2022-03-18T15:35:49.549095Z",
        "url": "https://files.pythonhosted.org/packages/0c/ed/56a649489db5c5ecf9e5d91b7e122b7ad7171565b361c8d62941ea7e1a2e/neurosity-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a0c194779e50ebba6e4a5d1b5140b698df06250247a40fffdcf154cf66818818",
        "md5": "d3bbc9a850161e8e44c879665002467c",
        "sha256": "09aa66de07a2aff6b7af79d5036253ddc86178e2d0cf28908f7ea3c090b3189b"
      },
      "downloads": -1,
      "filename": "neurosity-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d3bbc9a850161e8e44c879665002467c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 17661,
      "upload_time": "2022-03-18T15:35:47",
      "upload_time_iso_8601": "2022-03-18T15:35:47.518712Z",
      "url": "https://files.pythonhosted.org/packages/a0/c1/94779e50ebba6e4a5d1b5140b698df06250247a40fffdcf154cf66818818/neurosity-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ced56a649489db5c5ecf9e5d91b7e122b7ad7171565b361c8d62941ea7e1a2e",
        "md5": "4e2ce221cd07f85606ffe2169e9f07a4",
        "sha256": "4fe1b434101b62557b2ac92f52fe4ddf201108e1fbe97b96318932a6c59435b8"
      },
      "downloads": -1,
      "filename": "neurosity-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4e2ce221cd07f85606ffe2169e9f07a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 40884,
      "upload_time": "2022-03-18T15:35:49",
      "upload_time_iso_8601": "2022-03-18T15:35:49.549095Z",
      "url": "https://files.pythonhosted.org/packages/0c/ed/56a649489db5c5ecf9e5d91b7e122b7ad7171565b361c8d62941ea7e1a2e/neurosity-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}