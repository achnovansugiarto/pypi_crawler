{
  "info": {
    "author": "",
    "author_email": "Ilya Chechetkin <illaech@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: Russian",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Topic :: Utilities"
    ],
    "description": "# Elma Web-API Connector (ElmaWebAPI)\n\n[![Project version](https://img.shields.io/pypi/v/elmawebapi.svg)](https://pypi.python.org/pypi/elmawebapi)\n![Test coverage](assets/coverage.svg)\n\nБиблиотека, предоставляющая упрощенный способ взаимодействия с\n[Web API Elma3](https://www.elma-bpm.ru/KB/article-5613.html) из python.\n\n\n## Установка и использование\n\nДля работы библиотеки необходим python версии 3.10 или выше.\n\n```bash\npip install elmawebapi\n```\n\nДля доступа к серверу неоходимо при создании инстанса `ElmaAPI` указать ссылку на хост сервера Elma, имя и пароль\nпользователя, от лица которого будут запрашиваться и отправляться данные, а также создать токен внешнего приложения.\n\nСтоит учитывать, что ограничения на пользователя влияют и на получаемые через API данные, т.е. если пользователь\nне имеет доступ к какому-либо объекту или процессу, то через API он так же не будет иметь к ним доступ.\n\nПример обновления наименования контрагента с Id равному 1:\n\n```python\nfrom elmawebapi import ElmaAPI\n\nAPI = ElmaAPI(HOST, USERNAME, PASSWORD, APP_TOKEN)\nAPI.EntityService.Update({\"Name\": \"Тестовый контрагент\"}, \"1fb7545c-b103-44b1-9b01-dacb986db75d\", 1)\n```\n\nгде `HOST` — ссылка на сервер Elma, `USERNAME` — имя пользователя, `PASSWORD` — пароль пользователя,\n`APP_TOKEN` — токен приложения, а `1fb7545c-b103-44b1-9b01-dacb986db75d` — UID типа объекта \"Контрагент\".\n\nПоскольку постоянно копировать UIDы не очень удобно, можно воспользоваться хранилищем данных `Library`, скормив ему\nссылку на таблицу с типами данных (обычно она находится по адресу `‹Хост›/API/Help/Types`). Тогда этот же пример можно\nпереписать следующим образом:\n\n```python\nfrom elmawebapi import ElmaAPI, Library\n\nLibrary.load_from_help(HOST)  # по умолчанию второй параметр равен \"/API/Help/Types\", т.е. ссылка на страницу\nAPI = ElmaAPI(HOST, USERNAME, PASSWORD, APP_TOKEN)\nAPI.EntityService.Update({\"Name\": \"Тестовый контрагент\"}, Library.uuids.Contractor, 1)\n```\n\nТаким образом, UIDы и кастомных объектов окажутся доступными из `Library`, и не надо будет вспоминать какой тип\nпредставляет тот или иной uuid. Помимо этого, `Library` создается синглтоном при подключении библиотеки, т.е. единожды\nдобавив в него данные, они будут доступны в любой части проекта (технически — не синглтон, это инстанс класса\n`LibraryClass`, подробнее можно почитать в [документации](docs/library.md#libraryclass)).\n\nДля запуска процессов необходимо передать или _ProcessHeaderId_ процесса, или же его токен запуска:\n```python\nfrom elmawebapi import ElmaAPI\n\nAPI = ElmaAPI(HOST, USERNAME, PASSWORD, APP_TOKEN)\nAPI.WorkflowService.StartProcess(process_header=PHEADER, process_token=PTOKEN, process_name=PNAME, context=PCTX)\n```\n\nгде `PHEADER` — _ProcessHeaderId_ процесса, `PTOKEN` — токен запуска процесса, `PNAME` — имя созданного экземпляра\nпроцесса, `PCTX` — контекстные переменные. Для запуска необходимо передать _либо_ `process_header`, _либо_\n`process_token`, но не оба сразу. Имя экземпляра процесса указывать необязательно, особенно если оно создается по\nшаблону. `context` принимает в себя словарь вида `{\"имя контекстной переменной\": \"значение\"}`.\n\nОпять же, вручную вести `ProcessHeaderId` и токены запуска не очень удобно, поэтому для этих целей тоже можно\nиспользовать `Library`:\n```python\nfrom elmawebapi import ElmaAPI, Library\n\nLibrary.register_process(\"MyProcess\", header=PHEADER, token=PTOKEN)\nAPI = ElmaAPI(HOST, USERNAME, PASSWORD, APP_TOKEN)\nAPI.WorkflowService.StartProcess(\n    process_header=Library.processes.MyProcess.header,\n    process_token=Library.processes.MyProcess.token,\n    process_name=PNAME,\n    context=PCTX\n)\n```\n\nДля хранения процесса необязательно указывать и токен, и id заголовка, можно указать что-то одно, тогда значение\nвторого будет равно `None`.\n\nПоскольку Elma оперирует данными в формате `CLR: WebData`, то для их упрощения можно использовать `Parser`:\n\n```python\nfrom elmawebapi import ElmaAPI, Library, Parser\n\nAPI = ElmaAPI(HOST, USERNAME, PASSWORD, APP_TOKEN)\n# на самом деле Load возвращает уже нормализованный вариант, так что пример чисто для показа работы Parser\ndata = API.EntityService.Load(params={\"type\": Library.uuids.Contractor, \"id\": 1})\nprint(data)\n# {\"Items\": [\n#     {\"Name\": \"Id\", \"Value\": \"1\", \"Data\": None, \"DataArray\": []},\n#     {\"Name\": \"Name\", \"Value\": \"Тестовый контрагент\", \"Data\": None, \"DataArray\": []},\n#     ...\n# ], \"Value\": \"\"}\ndata = Parser.normalize(data)\nprint(data)\n# {\"Id\": \"1\", \"Name\": \"Тестовый контрагент\", ...}\n```\n\nБолее детальное описание всех сервисов и вспомогательных утилит можно почитать в [документации](docs).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD 3-Clause License  Copyright (c) 2022, СоветникПРОФ All rights reserved.  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ElmaWebAPI",
    "package_url": "https://pypi.org/project/ElmaWebAPI/",
    "platform": null,
    "project_url": "https://pypi.org/project/ElmaWebAPI/",
    "project_urls": {
      "Bug Tracker": "https://github.com/SovetnikProf/ElmaWebAPI/issues/",
      "Homepage": "https://github.com/SovetnikProf/ElmaWebAPI/"
    },
    "release_url": "https://pypi.org/project/ElmaWebAPI/0.1.3/",
    "requires_dist": [
      "requests (~=2.28)",
      "ipython (~=8.4) ; extra == 'dev'",
      "black (~=22.8) ; extra == 'dev'",
      "isort (~=5.10) ; extra == 'dev'",
      "pytest (~=7.1) ; extra == 'tests'",
      "pytest-cov (~=3.0) ; extra == 'tests'",
      "pylint (~=2.15) ; extra == 'tests'",
      "coverage-badge (~=1.1.0) ; extra == 'tests'"
    ],
    "requires_python": ">=3.10",
    "summary": "Using Elma3 Web API from python",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15226930,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35e9fde1bc307cd221037e53df9e4cdc136c9378c3d068b293278f8ee39822db",
          "md5": "a38e3dbce8bf735c764aed52f5d56767",
          "sha256": "febada253866f3c505694285da3da43ff7e23dc480a9a3704c9abdcfba634f6c"
        },
        "downloads": -1,
        "filename": "ElmaWebAPI-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a38e3dbce8bf735c764aed52f5d56767",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 20259,
        "upload_time": "2022-09-27T12:25:30",
        "upload_time_iso_8601": "2022-09-27T12:25:30.477921Z",
        "url": "https://files.pythonhosted.org/packages/35/e9/fde1bc307cd221037e53df9e4cdc136c9378c3d068b293278f8ee39822db/ElmaWebAPI-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f7948bf18c952fcb9356f68bfaada9bc9c07416e929815ab7d34a391a6e2314",
          "md5": "a92b411a036e626785defb8bdfd4f80b",
          "sha256": "2048e14a30bea6b0fcc3c92193c6811c3b10fe57b1d8dbfe908c4d638a3cd116"
        },
        "downloads": -1,
        "filename": "ElmaWebAPI-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a92b411a036e626785defb8bdfd4f80b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 15428,
        "upload_time": "2022-09-27T12:25:31",
        "upload_time_iso_8601": "2022-09-27T12:25:31.982270Z",
        "url": "https://files.pythonhosted.org/packages/9f/79/48bf18c952fcb9356f68bfaada9bc9c07416e929815ab7d34a391a6e2314/ElmaWebAPI-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35e9fde1bc307cd221037e53df9e4cdc136c9378c3d068b293278f8ee39822db",
        "md5": "a38e3dbce8bf735c764aed52f5d56767",
        "sha256": "febada253866f3c505694285da3da43ff7e23dc480a9a3704c9abdcfba634f6c"
      },
      "downloads": -1,
      "filename": "ElmaWebAPI-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a38e3dbce8bf735c764aed52f5d56767",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 20259,
      "upload_time": "2022-09-27T12:25:30",
      "upload_time_iso_8601": "2022-09-27T12:25:30.477921Z",
      "url": "https://files.pythonhosted.org/packages/35/e9/fde1bc307cd221037e53df9e4cdc136c9378c3d068b293278f8ee39822db/ElmaWebAPI-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f7948bf18c952fcb9356f68bfaada9bc9c07416e929815ab7d34a391a6e2314",
        "md5": "a92b411a036e626785defb8bdfd4f80b",
        "sha256": "2048e14a30bea6b0fcc3c92193c6811c3b10fe57b1d8dbfe908c4d638a3cd116"
      },
      "downloads": -1,
      "filename": "ElmaWebAPI-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a92b411a036e626785defb8bdfd4f80b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 15428,
      "upload_time": "2022-09-27T12:25:31",
      "upload_time_iso_8601": "2022-09-27T12:25:31.982270Z",
      "url": "https://files.pythonhosted.org/packages/9f/79/48bf18c952fcb9356f68bfaada9bc9c07416e929815ab7d34a391a6e2314/ElmaWebAPI-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}