{
  "info": {
    "author": "",
    "author_email": "info@configtree.co",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# ct-python\nConfigTree API definitions\n\nThis Python package is automatically generated by the [Swagger Codegen](https://github.com/swagger-api/swagger-codegen) project:\n\n- API version: v1\n- Package version: 1.0.3\n- Build package: io.swagger.codegen.v3.generators.python.PythonClientCodegen\n\n## Requirements.\n\nPython 2.7 and 3.4+\n\n## Installation & Usage\n### pip install\nIt's recommended to install the SDK from PyPI useing:\n\n```sh\npip install ct-python\n```\n\nYou can also install it directly from Github\n\n```sh\npip install git+https://github.com/configtree/ct-python-sdk\n```\n\n(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/configtree/ct-python-sdk`)\n\nThen import the package:\n\n```python\nimport ct_python \n```\n\n### Setuptools\n\nInstall via [Setuptools](http://pypi.python.org/pypi/setuptools).\n\n```sh\npython setup.py install --user\n```\n(or `sudo python setup.py install` to install the package for all users)\n\nThen import the package:\n```python\nimport ct_python\n```\n\n## Getting Started\n\nPlease follow the [installation procedure](#installation--usage) and then you can use the SDK. A sample usage:\n\n```python\nfrom __future__ import print_function\nimport time\nimport ct_python\nfrom ct_python.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.Application() # Application | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.create_application(body, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->create_application: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.Configuration() # Configuration | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.create_configuration(body, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->create_configuration: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.Environment() # Environment | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.create_environment(body, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->create_environment: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.Version() # Version | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.create_version(body, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->create_version: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_instance.delete_application(id, organization_slug)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->delete_application: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_instance.delete_configuration(id, organization_slug)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->delete_configuration: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_instance.delete_environment(id, organization_slug)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->delete_environment: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_instance.delete_version(id, organization_slug)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->delete_version: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.Version() # Version | \nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.duplicate_version(body, id, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->duplicate_version: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.get_all_applications(organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->get_all_applications: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.get_application_by_id(id, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->get_application_by_id: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.get_configuration_by_id(id, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->get_configuration_by_id: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.get_environment_by_id(id, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->get_environment_by_id: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.get_environment_live_version(id, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->get_environment_live_version: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\norganization_slug = 'organization_slug_example' # str | The name in all lowercase, suitable for URL identification\n\ntry:\n    api_response = api_instance.get_organization_by_slug(organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->get_organization_by_slug: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\norganization_slug = 'organization_slug_example' # str | \napplication_name = 'application_name_example' # str | Application Name (optional)\nenvironment_name = 'environment_name_example' # str | Environment Name (optional)\nversion_name = 'version_name_example' # str | Version Name (optional)\n\ntry:\n    api_response = api_instance.get_version(organization_slug, application_name=application_name, environment_name=environment_name, version_name=version_name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->get_version: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.get_version_by_id(id, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->get_version_by_id: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.CustomTokenObtainPair() # CustomTokenObtainPair | \n\ntry:\n    api_response = api_instance.login(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->login: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.Application() # Application | \nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.partial_update_application(body, id, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->partial_update_application: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.Configuration() # Configuration | \nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.partial_update_configuration(body, id, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->partial_update_configuration: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.Environment() # Environment | \nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.partial_update_environment(body, id, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->partial_update_environment: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.Version() # Version | \nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.partial_update_version(body, id, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->partial_update_version: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.TokenRefresh() # TokenRefresh | \n\ntry:\n    api_response = api_instance.refresh_token(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->refresh_token: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.Application() # Application | \nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.update_application(body, id, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->update_application: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.Configuration() # Configuration | \nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.update_configuration(body, id, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->update_configuration: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.Environment() # Environment | \nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.update_environment(body, id, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->update_environment: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nbody = ct_python.Version() # Version | \nid = 'id_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.update_version(body, id, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->update_version: %s\\n\" % e)\n\n# Configure API key authorization: Bearer\nconfiguration = ct_python.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = ct_python.CTApi(ct_python.ApiClient(configuration))\nfile = 'file_example' # file | \next = 'ext_example' # str | \norganization_slug = 'organization_slug_example' # str | \n\ntry:\n    api_response = api_instance.upload_configuration_file(file, ext, organization_slug)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CTApi->upload_configuration_file: %s\\n\" % e)\n```\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *https://api.configtree.co/*\n\nMethod | HTTP request | Description\n------------ | ------------- | -------------\n[**create_application**](docs/CTApi.md#create_application) | **POST** /v1/{organizationSlug}/applications/ | \n[**create_configuration**](docs/CTApi.md#create_configuration) | **POST** /v1/{organizationSlug}/configurations/ | \n[**create_environment**](docs/CTApi.md#create_environment) | **POST** /v1/{organizationSlug}/environments/ | \n[**create_version**](docs/CTApi.md#create_version) | **POST** /v1/{organizationSlug}/versions/ | \n[**delete_application**](docs/CTApi.md#delete_application) | **DELETE** /v1/{organizationSlug}/applications/{id}/ | \n[**delete_configuration**](docs/CTApi.md#delete_configuration) | **DELETE** /v1/{organizationSlug}/configurations/{id}/ | \n[**delete_environment**](docs/CTApi.md#delete_environment) | **DELETE** /v1/{organizationSlug}/environments/{id}/ | \n[**delete_version**](docs/CTApi.md#delete_version) | **DELETE** /v1/{organizationSlug}/versions/{id}/ | \n[**duplicate_version**](docs/CTApi.md#duplicate_version) | **POST** /v1/{organizationSlug}/versions/{id}/duplicate/ | \n[**get_all_applications**](docs/CTApi.md#get_all_applications) | **GET** /v1/{organizationSlug}/applications/ | \n[**get_application_by_id**](docs/CTApi.md#get_application_by_id) | **GET** /v1/{organizationSlug}/applications/{id}/ | \n[**get_configuration_by_id**](docs/CTApi.md#get_configuration_by_id) | **GET** /v1/{organizationSlug}/configurations/{id}/ | \n[**get_environment_by_id**](docs/CTApi.md#get_environment_by_id) | **GET** /v1/{organizationSlug}/environments/{id}/ | \n[**get_environment_live_version**](docs/CTApi.md#get_environment_live_version) | **GET** /v1/{organizationSlug}/environments/{id}/liveVersion/ | \n[**get_organization_by_slug**](docs/CTApi.md#get_organization_by_slug) | **GET** /v1/{organizationSlug}/ | \n[**get_version**](docs/CTApi.md#get_version) | **GET** /v1/{organizationSlug}/versions/ | \n[**get_version_by_id**](docs/CTApi.md#get_version_by_id) | **GET** /v1/{organizationSlug}/versions/{id}/ | \n[**login**](docs/CTApi.md#login) | **POST** /v1/login/ | \n[**partial_update_application**](docs/CTApi.md#partial_update_application) | **PATCH** /v1/{organizationSlug}/applications/{id}/ | \n[**partial_update_configuration**](docs/CTApi.md#partial_update_configuration) | **PATCH** /v1/{organizationSlug}/configurations/{id}/ | \n[**partial_update_environment**](docs/CTApi.md#partial_update_environment) | **PATCH** /v1/{organizationSlug}/environments/{id}/ | \n[**partial_update_version**](docs/CTApi.md#partial_update_version) | **PATCH** /v1/{organizationSlug}/versions/{id}/ | \n[**refresh_token**](docs/CTApi.md#refresh_token) | **POST** /v1/login/refresh/ | \n[**update_application**](docs/CTApi.md#update_application) | **PUT** /v1/{organizationSlug}/applications/{id}/ | \n[**update_configuration**](docs/CTApi.md#update_configuration) | **PUT** /v1/{organizationSlug}/configurations/{id}/ | \n[**update_environment**](docs/CTApi.md#update_environment) | **PUT** /v1/{organizationSlug}/environments/{id}/ | \n[**update_version**](docs/CTApi.md#update_version) | **PUT** /v1/{organizationSlug}/versions/{id}/ | \n[**upload_configuration_file**](docs/CTApi.md#upload_configuration_file) | **POST** /v1/{organizationSlug}/configurations/upload_config/ | \n\n## Documentation For Models\n\n - [Application](docs/Application.md)\n - [Configuration](docs/Configuration.md)\n - [ConfigurationFile](docs/ConfigurationFile.md)\n - [CustomTokenObtainPair](docs/CustomTokenObtainPair.md)\n - [CustomTokenObtainPairResponse](docs/CustomTokenObtainPairResponse.md)\n - [Environment](docs/Environment.md)\n - [Organization](docs/Organization.md)\n - [OrganizationGroup](docs/OrganizationGroup.md)\n - [TokenRefresh](docs/TokenRefresh.md)\n - [TokenUserResponse](docs/TokenUserResponse.md)\n - [Version](docs/Version.md)\n\n## Documentation For Authorization\n\n\n## Bearer\n\n- **Type**: API key\n- **API key parameter name**: Authorization\n- **Location**: HTTP header\n\n\n## Author\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://configtree.co/",
    "keywords": "Swagger,ConfigTree API",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ct-python",
    "package_url": "https://pypi.org/project/ct-python/",
    "platform": "",
    "project_url": "https://pypi.org/project/ct-python/",
    "project_urls": {
      "Homepage": "https://configtree.co/"
    },
    "release_url": "https://pypi.org/project/ct-python/1.0.3/",
    "requires_dist": [
      "certifi (==2019.6.16)",
      "chardet (==3.0.4)",
      "idna (==2.8)",
      "nose (==1.3.7)",
      "numpy (==1.17.0)",
      "python-dateutil (==2.8.0)",
      "requests (==2.22.0)",
      "six (==1.12.0)",
      "urllib3 (==1.25.3)"
    ],
    "requires_python": "",
    "summary": "ConfigTree API",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5968363,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ff2aef045abdd8cec5a0744f6263a8133b5f59a4e14e70360dab55d4066bbe1",
          "md5": "34877fc60b108066b6b081a68c1e3e6b",
          "sha256": "6d8ad4a86aeac8454cdd52b5f9ade87d715567541c940326a6b854bae8d16f29"
        },
        "downloads": -1,
        "filename": "ct_python-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34877fc60b108066b6b081a68c1e3e6b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 39716,
        "upload_time": "2019-09-19T23:41:30",
        "upload_time_iso_8601": "2019-09-19T23:41:30.726441Z",
        "url": "https://files.pythonhosted.org/packages/2f/f2/aef045abdd8cec5a0744f6263a8133b5f59a4e14e70360dab55d4066bbe1/ct_python-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a40ecebe07a737b049dd6ff32304cae67132508bcb8050bda54595e5782eaddb",
          "md5": "7d3263e1d9e741bfde7137dc7299205a",
          "sha256": "8e83504fd2785c60643117c170f133d565cd4864c278c51b551b064ad77b639e"
        },
        "downloads": -1,
        "filename": "ct-python-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7d3263e1d9e741bfde7137dc7299205a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26587,
        "upload_time": "2019-09-19T23:41:33",
        "upload_time_iso_8601": "2019-09-19T23:41:33.856060Z",
        "url": "https://files.pythonhosted.org/packages/a4/0e/cebe07a737b049dd6ff32304cae67132508bcb8050bda54595e5782eaddb/ct-python-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d3be53943584a154a115174a93f26639b43f75f36751589759f64312ba4b36a",
          "md5": "31c026719b8e078f93ba14cc743e9a98",
          "sha256": "159e423cc1bce83c62f4941bb081f362f0e0c1bd9d4f41a47a2ed72e6acec93a"
        },
        "downloads": -1,
        "filename": "ct_python-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "31c026719b8e078f93ba14cc743e9a98",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42553,
        "upload_time": "2019-10-10T22:36:12",
        "upload_time_iso_8601": "2019-10-10T22:36:12.799438Z",
        "url": "https://files.pythonhosted.org/packages/1d/3b/e53943584a154a115174a93f26639b43f75f36751589759f64312ba4b36a/ct_python-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccf3f3892fe9e74b529aa1b7490a1574ad62b7a88cd9218ff8f3df67e9876542",
          "md5": "0b1b2856ede7b058d7323700dd98a47d",
          "sha256": "419f6612a39f036d459d2531b3495c9fe38b5b69ae46cbab33713a55cfabd1ca"
        },
        "downloads": -1,
        "filename": "ct-python-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0b1b2856ede7b058d7323700dd98a47d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26609,
        "upload_time": "2019-10-10T22:36:14",
        "upload_time_iso_8601": "2019-10-10T22:36:14.969920Z",
        "url": "https://files.pythonhosted.org/packages/cc/f3/f3892fe9e74b529aa1b7490a1574ad62b7a88cd9218ff8f3df67e9876542/ct-python-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1dfe85e936f2c0c3569e38157a7ef824d5e08fe0ea3d0a81c25f67c701c470c7",
          "md5": "b96827875778b1c7bef85080440a133b",
          "sha256": "c4bf34fc49c4cf41cde76ebf0352fabe588563ff60a07e48f2d96ceec73d3f1a"
        },
        "downloads": -1,
        "filename": "ct_python-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b96827875778b1c7bef85080440a133b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42558,
        "upload_time": "2019-10-13T18:50:54",
        "upload_time_iso_8601": "2019-10-13T18:50:54.598310Z",
        "url": "https://files.pythonhosted.org/packages/1d/fe/85e936f2c0c3569e38157a7ef824d5e08fe0ea3d0a81c25f67c701c470c7/ct_python-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9afedf30b7df611932f3e0b9fcb4890cadfe990f81125abfd006272cc19e0e17",
          "md5": "d782b7e68a450de545421bbc43cc3295",
          "sha256": "ba6e7e1ef4a96acb5a003555ab46d7ec28f11c4ee27af11e6d42fc27e4535c42"
        },
        "downloads": -1,
        "filename": "ct-python-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d782b7e68a450de545421bbc43cc3295",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26633,
        "upload_time": "2019-10-13T18:50:57",
        "upload_time_iso_8601": "2019-10-13T18:50:57.120286Z",
        "url": "https://files.pythonhosted.org/packages/9a/fe/df30b7df611932f3e0b9fcb4890cadfe990f81125abfd006272cc19e0e17/ct-python-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1dfe85e936f2c0c3569e38157a7ef824d5e08fe0ea3d0a81c25f67c701c470c7",
        "md5": "b96827875778b1c7bef85080440a133b",
        "sha256": "c4bf34fc49c4cf41cde76ebf0352fabe588563ff60a07e48f2d96ceec73d3f1a"
      },
      "downloads": -1,
      "filename": "ct_python-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b96827875778b1c7bef85080440a133b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 42558,
      "upload_time": "2019-10-13T18:50:54",
      "upload_time_iso_8601": "2019-10-13T18:50:54.598310Z",
      "url": "https://files.pythonhosted.org/packages/1d/fe/85e936f2c0c3569e38157a7ef824d5e08fe0ea3d0a81c25f67c701c470c7/ct_python-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9afedf30b7df611932f3e0b9fcb4890cadfe990f81125abfd006272cc19e0e17",
        "md5": "d782b7e68a450de545421bbc43cc3295",
        "sha256": "ba6e7e1ef4a96acb5a003555ab46d7ec28f11c4ee27af11e6d42fc27e4535c42"
      },
      "downloads": -1,
      "filename": "ct-python-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d782b7e68a450de545421bbc43cc3295",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26633,
      "upload_time": "2019-10-13T18:50:57",
      "upload_time_iso_8601": "2019-10-13T18:50:57.120286Z",
      "url": "https://files.pythonhosted.org/packages/9a/fe/df30b7df611932f3e0b9fcb4890cadfe990f81125abfd006272cc19e0e17/ct-python-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}