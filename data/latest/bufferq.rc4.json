{
  "info": {
    "author": "Aaron Gibson",
    "author_email": "eulersidcrisis@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# bufferq\n\nBetter Queue Interface for Python\n\nPython's `queue` interface is quite clunky and really not that good.\n\n`bufferq` is a separate queue implementation with a more intuitive interface.\n\n## Sample Usage\n\nQueues from `bufferq` are simple to use with a simple interface:\n```python\nimport threading\nimport bufferq\n\nq = bufferq.Queue()\n\ndef consumer(q):\n    for item in q.consume_one_generator():\n        print(f\"Working on item: {item}\")\n\nthd = threading.Thread(target=consumer, args=(q,))\nthd.daemon = True\nthd.start()\n\nq.put('a')\nq.put('b')\ntime.sleep(1)\nq.put_multi(list(range(5)))\n\nq.stop()\nthd.join()\n```\n\n## What's Wrong with `queue`?\n\nHere are a few issues:\n\n### Design Issues\n\nPython's queue does not provide much help for common tasks that queues are\nused for, such as a list of work for _Producer/Consumer_ design patterns.\nPython's own `queue` documentation shows the following\n[example](https://docs.python.org/3/library/queue.html#queue.Queue.join):\n```python\nimport threading, queue\n\nq = queue.Queue()\n\ndef worker():\n    while True:\n        item = q.get()\n        print(f'Working on {item}')\n        print(f'Finished {item}')\n        q.task_done()\n\n# turn-on the worker thread\nthreading.Thread(target=worker, daemon=True).start()\n\n# send thirty task requests to the worker\nfor item in range(30):\n    q.put(item)\nprint('All task requests sent\\n', end='')\n\n# block until all tasks are done\nq.join()\nprint('All work completed')\n```\nEven here in the official docs, there are problems. They've omitted the\nnecessary exception handling; if the worker were to raise an exception between\n`q.get()` and `q.task_done()`, the call to `q.join()` might block indefinitely.\n(Yes, `print()` is not likely to raise an exception, but real work done by such\na queue _is_...)\nThis can be fixed by adding try/finally, but the semantics are subtle and as\nthis example shows, error-prone.\n\nThe example also does not actually terminate the consumer thread correctly and\ninstead just lets it die as a daemon thread. This might be okay for an example,\nbut this is not good for realistic uses of the queue where resources need\nstricter management. This is doubly ironic, because the point of `q.join()` is\nto (presumably) support _draining_ the queue and block until the queue is\nempty. However, any logic to handle basic draining requires more tooling that\nis outside of the queue (i.e. checking some `threading.Event` instead of\n`while True`), thus (in my opinion) defeating the point. This situation is\nfurther complicated by the situation below:\n```python\nimport queue\n\nq = queue.Queue()\nq.put('a')\n\ndef consumer():\n    q.get()\n    # Uh-oh. No timeout argument passed, so this blocks indefinitely.\n    # Ctrl+C to get out of this, or worse (!) since some versions of python\n    # did not even support Ctrl+C in this setting...\n    q.get()\n\nconsumer()\n```\nThe consumer might be blocked waiting for an element before it has a chance to\ncheck whether the stop event was set.\n\n### Basic Operations\n\nPython's `queue` interface is also a little sloppy for common operations,\nlike adding/pushing items to the queue. `queue.Queue.put()` has three\ndifferent arguments:\n 1. The item\n 2. blocking (why?)\n 3. timeout\n(Options 2 and 3 are set so the operation blocks indefinitely until the\nitem can be added.)\n\nThis is annoying; why have `blocking` and `timeout` as separate arguments,\ninstead of simply letting `timeout=0` (or maybe even some placeholder-style\nobject if you are really, _REALLY_ concerned about blocking)? A `timeout=0`\nshould imply a single lookup that fails with `queue.Empty` if nothing is in\nthe queue without any additional arguments.\nYes, there is an added \"convenience\" call of `queue.Queue.put_nowait()`,\nbut this can just as easily be a proxy call to: `put(item, timeout=0)` which\ncan be added directly for clarity, but without muddying the rest of the\ninterface.\n\nThis same problem exists (and is more relevant) for the `get()` calls for\nthe queue.\n\n### Better Design\n\nThe necessary variables to handle the draining should already implicitly be\navailable in the queue object, with improved calls. The queue should have some\n`stop()` call that stops the queue and wakes up anyone waiting indefinitely to\ninsert/remove an item with a `QueueStopped()` exception or similar to avoid\ndeadlock.\n\nAdding pythonic generators to remove items from the queue can also help with\nthese common cases; the consumer can simply iterate to obtain the next item\ninstead of handling the complicated `pop/get` logic that might otherwise be\nrequired.\n\nThis is all provided by `bufferq.Queue` like below:\n```python\nimport threading\nimport bufferq\n\nq = bufferq.Queue()\ndef worker():\n    for item in q.consume_one_generator():\n        print(f'Working on {item}')\n        print(f'Finished {item}')\n\n# turn-on the worker thread\nthd = threading.Thread(target=worker, daemon=True).start()\n\n# send thirty task requests to the worker\nfor item in range(30):\n    q.put(item)\nprint('All task requests sent, signal to stop and drain.')\n# Request that the queue stop, since everything has been added.\nq.stop()\n\nthd.join()\nprint('All work completed and workers joined!')\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/eulersIDcrisis/bufferq",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bufferq",
    "package_url": "https://pypi.org/project/bufferq/",
    "platform": null,
    "project_url": "https://pypi.org/project/bufferq/",
    "project_urls": {
      "Bug Tracker": "https://github.com/eulersIDcrisis/bufferq/issues",
      "Homepage": "https://github.com/eulersIDcrisis/bufferq",
      "Repository": "https://github.com/eulersIDcrisis/bufferq"
    },
    "release_url": "https://pypi.org/project/bufferq/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.8,<4.0",
    "summary": "Queue Library with an improved interface.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14525934,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce1e2970a9e67ff6544fbc2f86bb33b44135bdee095ba58400c31aeb93223232",
          "md5": "1a873b3a504a3b485cbc865ac8b2945d",
          "sha256": "054e65524be0a762ad76abda1f7d05684e53b8f59cdddeb6339ddda247733e30"
        },
        "downloads": -1,
        "filename": "bufferq-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a873b3a504a3b485cbc865ac8b2945d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.3",
        "size": 13380,
        "upload_time": "2022-02-13T04:40:40",
        "upload_time_iso_8601": "2022-02-13T04:40:40.698451Z",
        "url": "https://files.pythonhosted.org/packages/ce/1e/2970a9e67ff6544fbc2f86bb33b44135bdee095ba58400c31aeb93223232/bufferq-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "531a59428fa0f7b0a60d74438d534d0d4441fde73b2744c00f8c6930c8b23211",
          "md5": "9135e111070d8fe5a175338259d7eeee",
          "sha256": "ec345d930065935d8e4f0639894d39ae3dd70f7a82c151c47b2edc3a3a3be2d3"
        },
        "downloads": -1,
        "filename": "bufferq-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9135e111070d8fe5a175338259d7eeee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 13822,
        "upload_time": "2022-02-13T04:40:41",
        "upload_time_iso_8601": "2022-02-13T04:40:41.878168Z",
        "url": "https://files.pythonhosted.org/packages/53/1a/59428fa0f7b0a60d74438d534d0d4441fde73b2744c00f8c6930c8b23211/bufferq-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44eca04d749e087ca7d462b8071e5f4f44076bf1a4d8d85365769b7068370201",
          "md5": "745985f7d686cc817ebca05389749f22",
          "sha256": "07cc1cd2c26860467d05fcd0f8f774aa78fa782077e23196b5749ec8500735c8"
        },
        "downloads": -1,
        "filename": "bufferq-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "745985f7d686cc817ebca05389749f22",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 13372,
        "upload_time": "2022-03-19T19:33:46",
        "upload_time_iso_8601": "2022-03-19T19:33:46.892099Z",
        "url": "https://files.pythonhosted.org/packages/44/ec/a04d749e087ca7d462b8071e5f4f44076bf1a4d8d85365769b7068370201/bufferq-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66dc500bc2bf15f7742656fe42771ef47def8f00ad904da7fd94c1c28a9314b6",
          "md5": "27e571f81f04325d25e7dd92601be60a",
          "sha256": "417db0c5aead1d78a4fd5b78b9c09e977c5e1da7c87ad962d65c59e31fbd41e0"
        },
        "downloads": -1,
        "filename": "bufferq-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "27e571f81f04325d25e7dd92601be60a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 13891,
        "upload_time": "2022-03-19T19:33:48",
        "upload_time_iso_8601": "2022-03-19T19:33:48.423624Z",
        "url": "https://files.pythonhosted.org/packages/66/dc/500bc2bf15f7742656fe42771ef47def8f00ad904da7fd94c1c28a9314b6/bufferq-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8163ea6cd7196a79484eeaa4b9727a019c77f80f76c28f0e8cf20745a3b0985",
          "md5": "54b5f5f4b3833ff904b5f90bae03c4b6",
          "sha256": "244f3a4e0b0b290be45fcafc035ed8273a9c5264902345ffb5c3ee4bf5bce540"
        },
        "downloads": -1,
        "filename": "bufferq-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54b5f5f4b3833ff904b5f90bae03c4b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 16404,
        "upload_time": "2022-06-18T05:16:13",
        "upload_time_iso_8601": "2022-06-18T05:16:13.845293Z",
        "url": "https://files.pythonhosted.org/packages/d8/16/3ea6cd7196a79484eeaa4b9727a019c77f80f76c28f0e8cf20745a3b0985/bufferq-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0be4f80196489aec302a3e5a248eb4dac92579cd2a52c6e1f8aea26c63b6bbd2",
          "md5": "bdd906c36e3ea1086c0348370e1df98f",
          "sha256": "ae027952a40b9815c632f0e9a4c08619358d4fbad3d513dd6654c9f713fc5189"
        },
        "downloads": -1,
        "filename": "bufferq-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bdd906c36e3ea1086c0348370e1df98f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 15287,
        "upload_time": "2022-06-18T05:16:15",
        "upload_time_iso_8601": "2022-06-18T05:16:15.689686Z",
        "url": "https://files.pythonhosted.org/packages/0b/e4/f80196489aec302a3e5a248eb4dac92579cd2a52c6e1f8aea26c63b6bbd2/bufferq-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f7d8f024fe2ab91163bfb9708f39f659e07ab52a379fb73dc8538901d548e93",
          "md5": "ffeafda18a9e39958c6ceb23b41a9bbd",
          "sha256": "27b733acad2681ba8f6f91a948ab0fa162e49488b44bcba11eb6966c945418da"
        },
        "downloads": -1,
        "filename": "bufferq-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ffeafda18a9e39958c6ceb23b41a9bbd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 16613,
        "upload_time": "2022-07-23T19:25:19",
        "upload_time_iso_8601": "2022-07-23T19:25:19.035090Z",
        "url": "https://files.pythonhosted.org/packages/7f/7d/8f024fe2ab91163bfb9708f39f659e07ab52a379fb73dc8538901d548e93/bufferq-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bafea2b905693f42b541ea55b5ee5a6731687974bd1762480756c0095c2ccf71",
          "md5": "d2f7393601a823ca0c447035eb50a062",
          "sha256": "3f13578555377567e5e1382b633a008a2498a94e1d59a974a2b47508ffd6042a"
        },
        "downloads": -1,
        "filename": "bufferq-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d2f7393601a823ca0c447035eb50a062",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 15437,
        "upload_time": "2022-07-23T19:25:20",
        "upload_time_iso_8601": "2022-07-23T19:25:20.894368Z",
        "url": "https://files.pythonhosted.org/packages/ba/fe/a2b905693f42b541ea55b5ee5a6731687974bd1762480756c0095c2ccf71/bufferq-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f7d8f024fe2ab91163bfb9708f39f659e07ab52a379fb73dc8538901d548e93",
        "md5": "ffeafda18a9e39958c6ceb23b41a9bbd",
        "sha256": "27b733acad2681ba8f6f91a948ab0fa162e49488b44bcba11eb6966c945418da"
      },
      "downloads": -1,
      "filename": "bufferq-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ffeafda18a9e39958c6ceb23b41a9bbd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 16613,
      "upload_time": "2022-07-23T19:25:19",
      "upload_time_iso_8601": "2022-07-23T19:25:19.035090Z",
      "url": "https://files.pythonhosted.org/packages/7f/7d/8f024fe2ab91163bfb9708f39f659e07ab52a379fb73dc8538901d548e93/bufferq-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bafea2b905693f42b541ea55b5ee5a6731687974bd1762480756c0095c2ccf71",
        "md5": "d2f7393601a823ca0c447035eb50a062",
        "sha256": "3f13578555377567e5e1382b633a008a2498a94e1d59a974a2b47508ffd6042a"
      },
      "downloads": -1,
      "filename": "bufferq-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d2f7393601a823ca0c447035eb50a062",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 15437,
      "upload_time": "2022-07-23T19:25:20",
      "upload_time_iso_8601": "2022-07-23T19:25:20.894368Z",
      "url": "https://files.pythonhosted.org/packages/ba/fe/a2b905693f42b541ea55b5ee5a6731687974bd1762480756c0095c2ccf71/bufferq-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}