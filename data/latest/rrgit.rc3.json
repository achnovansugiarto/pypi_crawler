{
  "info": {
    "author": "Adam Haile",
    "author_email": "adammhaile@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# rrgit\n\n`rrgit` is a command line utility to aid in the process of editing RepRapFirmware / Duet controller configuration files over a network connection. It is designed to be as git-like as possible in order to provide a familiar interface. Of course, however, the RepRapFirmware interface is far less extensive compared to git, so `rrgit` handles just the basics. It will allow you to clone, pull, push, and diff between the controller and local copies of the files.\n\n## Installation\n\nThe simplest way to install is:\n\n`pip install rrgit`\n\nAlternatively:\n\n```\ngit clone https://github.com/adammhaile/rrgit.git\ncd rrgit\npython setup.py install\n```\n\nThis will install the necessary packages and make available the `rrgit` and `rrg` (simply an alias) commands.\n\n## Usage\n\nThe following base commands are available. With the exception of `clone` all commands must be called from the root of the `rrgit` cloned directory.\n\n### Clone\n\n`rrgit clone HOSTNAME [DIRECTORY]`\n\nClone the config from `HOSTNAME` to `DIRECTORY`\n\nThe intent is to use `rrgit` much like you would `git` by starting from an existing set of configuration files, already on a remote machine. \n\n`HOSTNAME` can be an IP address or local network hostname and can include http/https but it is not required. The base network address is the important item here.\n\n`DIRECTORY` is optional if you simply want to clone down to the current working directy. Note that this is only an option if the current directory is completely empty. Otherwise provide an absolute or relative directory path. That directory need not exist as it will be created.\n\nOne cloned, the directory specified will be populated with all non-ignored (see more below on `.rrgitignore`) files from the specified remote machine.\n\nNote that RepRapFirmware has very specific directories (such as `sys`, `gcodes`, and `macros`) that it uses. Anything other than the official directory names (which are pulled from the remote system at connection time) will be ignored. Therefore you could add any other files or directories into your `rrgit` directory and they will be ignored by `rrgit`.\n\n### Status\n\n`rrgit status`\n\nQuery both the remote machine and the local directory to automatically discover and report on any differences between the two. Note that, unlike `git`, this is only able to detect if files have a different timestamp or are a different size. The report will be broken down into the following categories:\n\n- Remote only: files that only exist on remote\n- Remote newer: files that are newer on remote than local\n- Local only: files that only exist on local\n- Local newer: files that are newer on local than remote\n- Different size: files that have the same timestamp but differ in size. This is extremely unlikely. Typically all change detection is timestamp based.\n\n### Pull\n\n`rrgit pull [--force/-f] [--yes/-y] [file_patterns ...]`\n\nPulls remote files to local. Must be run from the root of the `rrgit` clone directory. With no options specified, it will only pull remote files that differ from local. Note that since there is no concept of history or commits as with actual git, this acts a little different. If you have made changes on both remote and local and then choose to pull, it will overwrite local with remote. There is no automatic conflict resolution.\n\nHowever, it will ask you to confirm the overwrite if the local files are newer than remote or if they only exist on local (in which case they would be deleted locally). You can use the `--yes` option to suppress this confirmation request.\n\nUsing the `--force` option is effectively like re-cloning the configuration files. It will pull down all remote files to local, regardless of local state. This includes deletions locally.\n\nFinally, you can optionally provide any number of relative file paths or [git pathspec](https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec) style file patterns. It will then only act upon files that match those patterns.\n\nBe aware that on Linux or Mac systems bash will provide file path expansion on any wildcard file patterns provided. This is fine when acting upon local files but with pull, the pattern matching is purely for remote files. If you let bash do the path expansion for you it will *only* match files that are also local. To get around this, it is recommended to wrap all file patterns in single quotes like this:\n\n`rrgit pull 'sys/*.g'`\n\nWhich would pull all `.g` files from the `sys` directory on the remote system.\n\nThere is no need to use the single quote wrapping on Windows systems as `rrgit` will always handle wildcard file patterns internally.\n\n### Push\n\n`rrgit push [--force/-f] [--yes/-y] [file_patterns ...]`\n\nThe `push` command functions identically to the `pull` command, just in the other direction, local to remote.\n\n\n### Diff\n\n`rrgit diff [file_patterns ...]`\n\nShow a diff report of all files that do not match between remote and local, if called with no file patterns. It will, by default, diff any files that would be shown in the `status` command report.\n\nIf file patterns are provided (which follow the same rules as described in the `pull` command) it will only show diffs for those files specified.\n\nIt will always show the diff output in a format with remote as file A and local as file B.\n\n### Watch\n\n`rrgit watch`\n\n**NOTE:** Currently the `watch` command is disabled under Windows. I cannot get the `watchdog` python package to work reliably for Windows at this time.\n\nWatch the local `rrgit` directory tree and automatically push all changes to the remote machine. This is useful if you will be making many changes and runnings tests after each. Instead of running the `push` command each time the files will be pushed as soon as they are saved locally.\n\n## `.rrgitignore` file\n\n`rrgit` will automatically create a file called `.rrgitignore` in the root of the cloned directory which can be used to filter out what is pulled and pushed. The format is identical to the [`.gitignore` file format](https://git-scm.com/docs/gitignore).\n\nBy default this file includes the following lines:\n\n```\n/www/\n/gcodes/\n/scans/\n/menu/\n*.uf2\n*.bin\n```\n\n- `www` is the location of the DuetWebControl files and are unlikely that you will ever need to pull/push changes to those files.\n- `gcodes` is the location of uploaded job files. These files can be quite large.\n- `scans` is used for depth probe scanning in RepRapFirmware which is infrequently used.\n- `menu` provides configuration files for older-style monochrome LCD displays.\n- `*.uf2` and `*.bin` files are the binary firmware files for your controller and are often large files which really don't need to be synced in most cases.\n\nThese are simply defaults which make the initial clone fast and likely to include everything most people will want. If you would like these files, simple edit the file to remove those lines and call `rrg pull` to pull down the files that were filtered out during the itial clone.\n\n## Usage with git\n\nThe entire intent of `rrgit` is to use it as a companion to `git` itself to provide backups and history for your RepRapFirmware / Duet configs. You can do this in a couple ways:\n\n- Create an empty remote git repo, clone it down locally, and then use `rrgit clone` to pull the configuration files into the local git repo directory. \n- Use `rrgit clone` to create a local `rrgit` directory, then use `git init` and `git remote add` inside of that directory to associate it with a remote git repo.\n\nOnce one of those options is done, you will be able to use all your normal `add`, `commit`, `push`, etc. commands with `git` to backup your configuration files. You basically will always want to use the opposite pull/push command in `rrgit` that you used with `git`. If you pull from the git back, use `rrgit push` to send that update to the remote machine, and vice versa.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adammhaile/rrgit",
    "keywords": "",
    "license": "GNU General Public License v3 (GPLv3)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rrgit",
    "package_url": "https://pypi.org/project/rrgit/",
    "platform": "",
    "project_url": "https://pypi.org/project/rrgit/",
    "project_urls": {
      "Homepage": "https://github.com/adammhaile/rrgit"
    },
    "release_url": "https://pypi.org/project/rrgit/1.0.1/",
    "requires_dist": [
      "duetwebapi",
      "pyyaml",
      "colorama",
      "pathspec",
      "watchdog"
    ],
    "requires_python": "",
    "summary": "CLI tool for syncing files to and from RepRapFirmware 3 via the web API",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9678287,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70df744700d9664db20665d9a72af5168f41ddf506d03ec7021b37b965455985",
          "md5": "475f36a8fd778c1f63f8c7f14b65d771",
          "sha256": "41da3a43dc95329415fe2e9901b72bc91e3d776cfea614d4dda1722ae15bf03b"
        },
        "downloads": -1,
        "filename": "rrgit-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "475f36a8fd778c1f63f8c7f14b65d771",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30863,
        "upload_time": "2021-03-05T19:42:04",
        "upload_time_iso_8601": "2021-03-05T19:42:04.456570Z",
        "url": "https://files.pythonhosted.org/packages/70/df/744700d9664db20665d9a72af5168f41ddf506d03ec7021b37b965455985/rrgit-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9aed74d41087701293eeacfb2689d0ec435be9e87083499c91f918e09e688f7d",
          "md5": "a48a06eeb95fea0e81cf3af83c388ef0",
          "sha256": "7f54dce9ed6d1afa1b65389bfba25ed33db513e38d05d3685b332782b3495aa9"
        },
        "downloads": -1,
        "filename": "rrgit-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a48a06eeb95fea0e81cf3af83c388ef0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16620,
        "upload_time": "2021-03-05T19:42:05",
        "upload_time_iso_8601": "2021-03-05T19:42:05.292489Z",
        "url": "https://files.pythonhosted.org/packages/9a/ed/74d41087701293eeacfb2689d0ec435be9e87083499c91f918e09e688f7d/rrgit-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f511301515957a4d96e3c6c8fb4b631f73028f26053bc04e18c5ce4da48f8d9c",
          "md5": "7240264379d678ecc3fbebbbc4c807e4",
          "sha256": "68cf47989570fe4af155343555797e69dd312965c7537f4c0966aa1bc2f18472"
        },
        "downloads": -1,
        "filename": "rrgit-1.0.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7240264379d678ecc3fbebbbc4c807e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30894,
        "upload_time": "2021-03-05T04:47:06",
        "upload_time_iso_8601": "2021-03-05T04:47:06.553136Z",
        "url": "https://files.pythonhosted.org/packages/f5/11/301515957a4d96e3c6c8fb4b631f73028f26053bc04e18c5ce4da48f8d9c/rrgit-1.0.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fd7747bf620d2c849e4ae4a5131471ff327c476e0ce002e4616d5695f7fd0fd",
          "md5": "8ed800210b42fc8aa780274a9e7ac876",
          "sha256": "b1f0db0caa4c9ac422a8cf38a8d564a18859e89f7e6bd9beb850503138c7217d"
        },
        "downloads": -1,
        "filename": "rrgit-1.0.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "8ed800210b42fc8aa780274a9e7ac876",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16628,
        "upload_time": "2021-03-05T04:47:07",
        "upload_time_iso_8601": "2021-03-05T04:47:07.455560Z",
        "url": "https://files.pythonhosted.org/packages/8f/d7/747bf620d2c849e4ae4a5131471ff327c476e0ce002e4616d5695f7fd0fd/rrgit-1.0.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b42bddee952a6e268efa8ab21d48918e3cf3fce08c2fea175bc53457d0fb7ef6",
          "md5": "4a361493ee20719d7864008ac4754a62",
          "sha256": "037547ebf4cc67320e85dafba7ec533d105e5441da87abfa42caa9162603d7fa"
        },
        "downloads": -1,
        "filename": "rrgit-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a361493ee20719d7864008ac4754a62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30940,
        "upload_time": "2021-03-05T20:30:03",
        "upload_time_iso_8601": "2021-03-05T20:30:03.898358Z",
        "url": "https://files.pythonhosted.org/packages/b4/2b/ddee952a6e268efa8ab21d48918e3cf3fce08c2fea175bc53457d0fb7ef6/rrgit-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26b5e15d98b31962630cf6e9da6f21a65e5fc271740a709908131545b0a53c6c",
          "md5": "91b13b236dcc6a7533ad23dc726c94d9",
          "sha256": "2a87506a30f0b794c5e9b10ffc6ae5d78417f4ce1346fecc9b1a25bf9807a862"
        },
        "downloads": -1,
        "filename": "rrgit-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "91b13b236dcc6a7533ad23dc726c94d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16738,
        "upload_time": "2021-03-05T20:30:04",
        "upload_time_iso_8601": "2021-03-05T20:30:04.964337Z",
        "url": "https://files.pythonhosted.org/packages/26/b5/e15d98b31962630cf6e9da6f21a65e5fc271740a709908131545b0a53c6c/rrgit-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b42bddee952a6e268efa8ab21d48918e3cf3fce08c2fea175bc53457d0fb7ef6",
        "md5": "4a361493ee20719d7864008ac4754a62",
        "sha256": "037547ebf4cc67320e85dafba7ec533d105e5441da87abfa42caa9162603d7fa"
      },
      "downloads": -1,
      "filename": "rrgit-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4a361493ee20719d7864008ac4754a62",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 30940,
      "upload_time": "2021-03-05T20:30:03",
      "upload_time_iso_8601": "2021-03-05T20:30:03.898358Z",
      "url": "https://files.pythonhosted.org/packages/b4/2b/ddee952a6e268efa8ab21d48918e3cf3fce08c2fea175bc53457d0fb7ef6/rrgit-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "26b5e15d98b31962630cf6e9da6f21a65e5fc271740a709908131545b0a53c6c",
        "md5": "91b13b236dcc6a7533ad23dc726c94d9",
        "sha256": "2a87506a30f0b794c5e9b10ffc6ae5d78417f4ce1346fecc9b1a25bf9807a862"
      },
      "downloads": -1,
      "filename": "rrgit-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "91b13b236dcc6a7533ad23dc726c94d9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16738,
      "upload_time": "2021-03-05T20:30:04",
      "upload_time_iso_8601": "2021-03-05T20:30:04.964337Z",
      "url": "https://files.pythonhosted.org/packages/26/b5/e15d98b31962630cf6e9da6f21a65e5fc271740a709908131545b0a53c6c/rrgit-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}