{
  "info": {
    "author": "Emerson Andrade",
    "author_email": "mrson@oceanica.ufrj.br",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: GIS"
    ],
    "description": "# pyswarming\n[![Tests](https://github.com/mrsonandrade/pyswarming/actions/workflows/tests_package.yml/badge.svg)](https://github.com/mrsonandrade/pyswarming/actions/workflows/tests_package.yml)\n[![Project Status: Active – The project has reached a stable, usable state and is being actively developed.](https://www.repostatus.org/badges/latest/active.svg)](https://www.repostatus.org/#active)\n[![Documentation Status](https://readthedocs.org/projects/pyswarming/badge/?version=latest)](https://pyswarming.readthedocs.io/en/latest/?badge=latest)\n![version](https://img.shields.io/badge/version-1.0.0-blue)\n\n<img align=\"left\" src=\"docs/readme_pics/logo.png\">\n\n`pyswarming` is a research toolkit for Swarm Robotics.\n\n\n## Installation\nYou can install ``pyswarming`` from PyPI using pip (**Recommended**):\n```\npip install pyswarming\n```\n\n## Dependencies\n\n`pyswarming`'s dependencies are: `numpy`.\n\n\n## Documentation\nThe official documentation is hosted on **[ReadTheDocs](https://pyswarming.readthedocs.io)**.\n\n## Algorithms covered\nThis library includes the following algorithms to be used in swarm robotics:\n\n- **Leaderless Coordination**: the collective performs heading consensus [^1];\n- **Leader Following**: the collective performs heading consensus with a leader [^2];\n- **Collision Avoidance**: the robot stays away from neighbors in the vicinity [^3];\n- **Attraction and Alignment**: the robot becomes attracted and aligned [^3];\n- **Preferred Direction**: the robot has a preference to move toward a preset direction [^3];\n- **Modified Attraction and Alignment**: the robot becomes attracted and aligned by considering a “social importance” factor [^4];\n- **Heading Consensus**: the collective performs heading consensus [^5];\n- **Perimeter Defense**: the robots maximize the perimeter covered in an unknown environment [^5];\n- **Aggregation**: makes all the individuals aggregate collectively [^6];\n- **Alignment**: the collective performs heading consensus [^6];\n- **Geofencing**: attract the robots towards area A [^6];\n- **Repulsion**: makes all the individuals repulse collectively [^6];\n- **Target**: the robot goes to an specific target location [^6];\n\n[^1]: Vicsek T, Czirók A, Ben-Jacob E, Cohen I, Shochet O. Novel Type of Phase Transition in a System of Self-Driven Particles. Phys Rev Lett 1995;75:1226–9. https://doi.org/10.1103/PhysRevLett.75.1226.\n\n[^2]: Jadbabaie A, Jie Lin, Morse AS. Coordination of groups of mobile autonomous agents using nearest neighbor rules. IEEE Trans Automat Contr 2003;48:988–1001. https://doi.org/10.1109/TAC.2003.812781.\n\n[^3]: Couzin ID, Krause J, Franks NR, Levin SA. Effective leadership and decision-making in animal groups on the move. Nature 2005;433:513–6. https://doi.org/10.1038/nature03236.\n\n[^4]: Freeman R, Biro D. Modelling Group Navigation: Dominance and Democracy in Homing Pigeons. J Navigation 2009;62:33–40. https://doi.org/10.1017/S0373463308005080.\n\n[^5]: Chamanbaz M, Mateo D, Zoss BM, Tokić G, Wilhelm E, Bouffanais R, et al. Swarm-Enabling Technology for Multi-Robot Systems. Front Robot AI 2017;4. https://doi.org/10.3389/frobt.2017.00012.\n\n[^6]: Zoss BM, Mateo D, Kuan YK, Tokić G, Chamanbaz M, Goh L, et al. Distributed system of autonomous buoys for scalable deployment and monitoring of large waterbodies. Auton Robot 2018;42:1669–89. https://doi.org/10.1007/s10514-018-9702-0.\n\n## Examples\nConsidering a swarm of robots, they can show different behaviors by using ``pyswarming``. The following codes are simplified implementations, for detailed ones, see the [Examples](https://github.com/mrsonandrade/pyswarming/tree/main/Examples) folder.\n```python\n# importing the swarming behaviors\nimport pyswarming.behaviors as ps\n\n# importing numpy to work with arrays\nimport numpy as np\n```\n\n\n### Target \nTo simplify, considering just one robot.\n```python\n# define the robot (x, y, z) position\nr_i = np.asarray([0., 0., 0.])\n\n# set the robot linear velocity\ns_i = 1.0\n\n# define a target (x, y, z) position\nT = np.asarray([8., 8., 0.])\n\nfor t in range(15):\n\n    # print the robot (x, y, z) position\n    print(r_i)\n\n    # update the robot (x, y, z) position\n    r_i += s_i*ps.target(r_i, T)\n```\n![Target](Examples/pics/Target.gif)\n\n\n### Aggregation \nConsidering four robots.\n```python\n# define each robot (x, y, z) position\nr = np.asarray([[8., 8., 0.],\n                [-8., 8., 0.],\n                [8., -8., 0.],\n                [-8., -8., 0.]])\n\n# set the robot linear velocity\ns_i = 1.0\n\nfor t in range(15):\n\n    # print the robot (x, y, z) positions\n    print(r)\n\n    # update the robot (x, y, z) positions\n    for r_ind in range(len(r)):\n        r_i = r[r_ind]\n        r_j = np.delete(r, np.array([r_ind]), axis=0)\n        r[r_ind] += s_i*ps.aggregation(r_i, r_j)\n```\n![Aggregation](Examples/pics/Aggregation.gif)\n\n\n### Repulsion \nConsidering four robots.\n```python\n# define each robot (x, y, z) position\nr = np.asarray([[1., 1., 0.],\n                [-1., 1., 0.],\n                [1., -1., 0.],\n                [-1., -1., 0.]])\n\n# set the robot linear velocity\ns_i = 1.0\n\nfor t in range(15):\n\n    # print the robot (x, y, z) positions\n    print(r)\n\n    # update the robot (x, y, z) positions\n    for r_ind in range(len(r)):\n        r_i = r[r_ind]\n        r_j = np.delete(r, np.array([r_ind]), axis=0)\n        r[r_ind] += s_i*ps.repulsion(r_i, r_j, 3.0)\n```\n![Repulsion](Examples/pics/Repulsion.gif)\n\n### Aggregation + Repulsion \nConsidering four robots.\n```python\n# define each robot (x, y, z) position\nr = np.asarray([[8., 8., 0.],\n                [-8., 8., 0.],\n                [8., -8., 0.],\n                [-8., -8., 0.]])\n\n# set the robot linear velocity\ns_i = 1.0\n\nfor t in range(15):\n\n    # print the robot (x, y, z) positions\n    print(r)\n\n    # update the robot (x, y, z) positions\n    for r_ind in range(len(r)):\n        r_i = r[r_ind]\n        r_j = np.delete(r, np.array([r_ind]), axis=0)\n        r[r_ind] += s_i*(ps.aggregation(r_i, r_j) + ps.repulsion(r_i, r_j, 5.0))\n```\n![AggregationRepulsion](Examples/pics/AggregationRepulsion.gif)\n\n## Contributing to pyswarming\nAll kind of contributions are welcome: \n* Improvement of code with new features, bug fixes, and  bug reports\n* Improvement of documentation\n* Additional tests\n\nFollow the instructions [here](https://pyswarming.readthedocs.io/en/latest/Contribution.html)\nfor submitting a PR.\n\nIf you have any ideas or questions, feel free to open an issue.\n\n\n## Acknowledgements\nThis research is supported by CAPES (Coordination of Improvement of Higher Education Personnel), [LOC/COPPE/UFRJ](https://www.loc.ufrj.br/index.php/en/) ([Laboratory of Waves and Current](https://www.loc.ufrj.br/index.php/en/) - [Federal University of Rio de Janeiro](https://ufrj.br/en/)) and CNPq (Brazilian National Council for Scientific and Technological Development), which are gratefully acknowledged.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mrsonandrade/pyswarming",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyswarming",
    "package_url": "https://pypi.org/project/pyswarming/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyswarming/",
    "project_urls": {
      "Homepage": "https://github.com/mrsonandrade/pyswarming"
    },
    "release_url": "https://pypi.org/project/pyswarming/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A research toolkit for Swarm Robotics",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15181950,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a9aa809d952cbd72730b9f0a72057ecbf58960724ccc8f9b0cdf31254bf46a1",
          "md5": "756e0e81a229c64124ed35008d00eb3c",
          "sha256": "fef3cd2a9b561c1dc7fc5b90c039794645616b4b9d90d8e80d1944ecdba6515a"
        },
        "downloads": -1,
        "filename": "pyswarming-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "756e0e81a229c64124ed35008d00eb3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3122375,
        "upload_time": "2022-09-22T17:43:52",
        "upload_time_iso_8601": "2022-09-22T17:43:52.495489Z",
        "url": "https://files.pythonhosted.org/packages/2a/9a/a809d952cbd72730b9f0a72057ecbf58960724ccc8f9b0cdf31254bf46a1/pyswarming-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a9aa809d952cbd72730b9f0a72057ecbf58960724ccc8f9b0cdf31254bf46a1",
        "md5": "756e0e81a229c64124ed35008d00eb3c",
        "sha256": "fef3cd2a9b561c1dc7fc5b90c039794645616b4b9d90d8e80d1944ecdba6515a"
      },
      "downloads": -1,
      "filename": "pyswarming-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "756e0e81a229c64124ed35008d00eb3c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 3122375,
      "upload_time": "2022-09-22T17:43:52",
      "upload_time_iso_8601": "2022-09-22T17:43:52.495489Z",
      "url": "https://files.pythonhosted.org/packages/2a/9a/a809d952cbd72730b9f0a72057ecbf58960724ccc8f9b0cdf31254bf46a1/pyswarming-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}