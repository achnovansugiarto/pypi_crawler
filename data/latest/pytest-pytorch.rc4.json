{
  "info": {
    "author": "Philip Meier",
    "author_email": "pmeier@quansight.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Testing"
    ],
    "description": "# `pytest-pytorch`\n\n[![license](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause) [![repo status](https://www.repostatus.org/badges/latest/wip.svg)](https://www.repostatus.org/#wip) [![isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336)](https://pycqa.github.io/isort/) [![black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) [![tests status](https://github.com/Quansight/pytest-pytorch/workflows/tests/badge.svg?branch=master)](https://github.com/Quansight/pytest-pytorch/actions?query=workflow%3Atests+branch%3Amaster)\n\n## What is it?\n\n`pytest-pytorch` is a lightweight [`pytest`](https://docs.pytest.org/en/stable/)-plugin that enhances the developer experience when working with the PyTorch test suite if you come from a `pytest` background.\n\n## Why do I need it?\n\nSome testcases in the PyTorch test suite are automatically generated when a module is loaded in order to parametrize them. Trying to collect them with their names as written, e.g. `pytest test_foo.py::TestFoo` or `pytest test_foo.py::TestFoo::test_bar`, is unfortunately not possible. If you are used to this syntax or your IDE relies on it ([PyCharm](https://www.jetbrains.com/help/pycharm/pytest.html#run-pytest-test), [VSCode](https://code.visualstudio.com/docs/python/testing#_run-tests)), you can install `pytest-pytorch` to make it work.\n\n## How do I install it?\n\nYou can install `pytest-pytorch` with `pip`\n\n```shell\n$ pip install pytest-pytorch\n```\n\nor with `conda`:\n\n```shell\n$ conda install -c conda-forge pytest-pytorch\n```\n\n## How do I use it?\n\nWith `pytest-pytorch` installed you can select test cases and tests as if the instantiation for different devices was performed by [`@pytest.mark.parametrize`](https://docs.pytest.org/en/stable/example/parametrize.html#different-options-for-test-ids):\n\n| Use case                            | Command                                              |\n|-------------------------------------|------------------------------------------------------|\n| Run a test case against all devices | `pytest test_foo.py::TestBar`                        |\n| Run a test case against one device  | `pytest test_foo.py::TestBar -k \"$DEVICE\"`           |\n| Run a test against all devices      | `pytest test_foo.py::TestBar::test_baz`              |\n| Run a test against one device       | `pytest test_foo.py::TestBar::test_baz -k \"$DEVICE\"` |\n\n## Can I have a little more background?\n\nPyTorch uses its own method for generating tests that is for the most part compatible with [`unittest`](https://docs.python.org/3/library/unittest.html) and pytest. Its custom test generation allows test templates to be written and instantiated for different device types, data types, and operators. Consider the following module `test_foo.py`:\n\n```python\nfrom torch.testing._internal.common_utils import TestCase\nfrom torch.testing._internal.common_device_type import instantiate_device_type_tests\n\nclass TestFoo(TestCase):\n    def test_bar(self, device):\n        pass\n    \n    def test_baz(self, device):\n        pass\n\ninstantiate_device_type_tests(TestFoo, globals())\n```\n\nAssuming we `\"cpu\"` and `\"cuda\"` are available as devices, we can collect four tests:\n\n1. `test_foo.py::TestFooCPU::test_bar_cpu`,\n2. `test_foo.py::TestFooCPU::test_baz_cpu`,\n3. `test_foo.py::TestFooCUDA::test_bar_cuda`, and\n4. `test_foo.py::TestFooCUDA::test_baz_cuda`.\n\nFrom a `pytest` perspective this is similar to decorating `TestFoo` with `@pytest.mark.parametrize(\"device\", (\"cpu\", \"cuda\")))` which would result in\n\n1. `test_foo.py::TestFoo:test_bar[cpu]`,\n2. `test_foo.py::TestFoo:test_bar[cuda]`,\n3. `test_foo.py::TestFoo:test_baz[cpu]`, and\n4. `test_foo.py::TestFoo:test_baz[cuda]`.\n\nSince the PyTorch test framework renames testcases and tests, naively running `pytest test_foo.py::TestFoo` or `pytest test_foo.py::TestFoo::test_bar` fails, because it can't find anything matching these names. Of course you can get around it by using the regular expression matching ([`-k` command line flag](https://docs.pytest.org/en/stable/reference.html#command-line-flags)) that `pytest` offers. \n\n`pytest-pytorch` performs this matching so you can keep your familiar workflow and your IDE is happy out of the box.\n\n## How do I contribute?\n\nFirst and foremost: Thank you for your interest in development of `pytest-pytorch`'s! We appreciate all contributions be it code or something else. Check out our [contribution guide lines](CONTRIBUTING.md) for details.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Quansight/pytest-pytorch",
    "keywords": "pytest,plugin,pytorch,torch",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-pytorch",
    "package_url": "https://pypi.org/project/pytest-pytorch/",
    "platform": "any",
    "project_url": "https://pypi.org/project/pytest-pytorch/",
    "project_urls": {
      "Documentation": "https://github.com/Quansight/pytest-pytorch",
      "Homepage": "https://github.com/Quansight/pytest-pytorch",
      "Source": "https://github.com/Quansight/pytest-pytorch",
      "Tracker": "https://github.com/Quansight/pytest-pytorch/issues"
    },
    "release_url": "https://pypi.org/project/pytest-pytorch/0.2.1/",
    "requires_dist": [
      "pytest"
    ],
    "requires_python": ">=3.6",
    "summary": "pytest plugin for a better developer experience when working with the PyTorch test suite",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10461772,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4da5e3b284ad0738572c01233ca21e9ffa7e7624cea08fd4c67a823df48a469",
          "md5": "5bebbc72435c8d29b35dcaddf1bd6f5b",
          "sha256": "405bda392d3ab26df8745ca60a7a6c1d36b33098264bc4a776bf1975fa79615d"
        },
        "downloads": -1,
        "filename": "pytest_pytorch-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bebbc72435c8d29b35dcaddf1bd6f5b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5618,
        "upload_time": "2021-04-14T21:07:34",
        "upload_time_iso_8601": "2021-04-14T21:07:34.854789Z",
        "url": "https://files.pythonhosted.org/packages/c4/da/5e3b284ad0738572c01233ca21e9ffa7e7624cea08fd4c67a823df48a469/pytest_pytorch-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f28893a519da933bcf11288cb193b8cd9bcb10e9a74546ecbc15f5b6e90c1aa",
          "md5": "c2ff38bf597845797ab153d8680077b0",
          "sha256": "c7b6b41a41df6ca2a9753b7d5bebf3cdcd06b81667852e5b017e918134b664c2"
        },
        "downloads": -1,
        "filename": "pytest_pytorch-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c2ff38bf597845797ab153d8680077b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7215,
        "upload_time": "2021-04-14T21:07:36",
        "upload_time_iso_8601": "2021-04-14T21:07:36.933274Z",
        "url": "https://files.pythonhosted.org/packages/0f/28/893a519da933bcf11288cb193b8cd9bcb10e9a74546ecbc15f5b6e90c1aa/pytest_pytorch-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5460fe7add59ed7de20485f6f0ecdad0d45104f1552ce9697924d12cf2677aa8",
          "md5": "cab76b73f8b632a68d473b2e6961f20c",
          "sha256": "0cc4426f8892616b3b5a1c327f03ff5de8799ebadf08ce4ae2329402acf92b2b"
        },
        "downloads": -1,
        "filename": "pytest_pytorch-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cab76b73f8b632a68d473b2e6961f20c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6256,
        "upload_time": "2021-04-20T06:20:09",
        "upload_time_iso_8601": "2021-04-20T06:20:09.925931Z",
        "url": "https://files.pythonhosted.org/packages/54/60/fe7add59ed7de20485f6f0ecdad0d45104f1552ce9697924d12cf2677aa8/pytest_pytorch-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "401e3a749a1ef867a71521071ad9b5da02483a73156ca464049832ed010de55e",
          "md5": "065bc3482dea3a5c075c97c7c95012fe",
          "sha256": "da39eb5d5bf4c424d4c0a79ebd55b5ce93b288b148383c48c06a61ad803e6413"
        },
        "downloads": -1,
        "filename": "pytest_pytorch-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "065bc3482dea3a5c075c97c7c95012fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7802,
        "upload_time": "2021-04-20T06:20:11",
        "upload_time_iso_8601": "2021-04-20T06:20:11.256662Z",
        "url": "https://files.pythonhosted.org/packages/40/1e/3a749a1ef867a71521071ad9b5da02483a73156ca464049832ed010de55e/pytest_pytorch-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd11488b238bd56ac68bbc0ded6e70d209782bbcd327ac195e27f43269e9c739",
          "md5": "e63c6ae0bbc19148f593046144ad6778",
          "sha256": "534658e094402e8dfa7a9e3ea0f986b153db950410c9a418437324ec9d13e2f0"
        },
        "downloads": -1,
        "filename": "pytest_pytorch-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e63c6ae0bbc19148f593046144ad6778",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6019,
        "upload_time": "2021-04-21T12:35:16",
        "upload_time_iso_8601": "2021-04-21T12:35:16.858989Z",
        "url": "https://files.pythonhosted.org/packages/bd/11/488b238bd56ac68bbc0ded6e70d209782bbcd327ac195e27f43269e9c739/pytest_pytorch-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7d5062afeb8e8a7b8d1fdae8f44d3b7abad991092ed1a171755850b3a82e2be",
          "md5": "157a841ff7e6dfb8efe77e1a60c6dab8",
          "sha256": "8274a67f7ac569abe361c18ecaf3e16b67713716792c579eab25002ae1467ce5"
        },
        "downloads": -1,
        "filename": "pytest_pytorch-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "157a841ff7e6dfb8efe77e1a60c6dab8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7626,
        "upload_time": "2021-04-21T12:35:18",
        "upload_time_iso_8601": "2021-04-21T12:35:18.482210Z",
        "url": "https://files.pythonhosted.org/packages/c7/d5/062afeb8e8a7b8d1fdae8f44d3b7abad991092ed1a171755850b3a82e2be/pytest_pytorch-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f41ed0c59aec5ed549a54caa0b8b467aea4b8ee9c37b2bdda6837543adc0887f",
          "md5": "3529836fbf123061ec906e62309821ba",
          "sha256": "1c9f154b0640fca5ed14c33f16df1b4d95c57e8f44e9a2559596ec77a213ab58"
        },
        "downloads": -1,
        "filename": "pytest_pytorch-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3529836fbf123061ec906e62309821ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6127,
        "upload_time": "2021-05-25T08:29:35",
        "upload_time_iso_8601": "2021-05-25T08:29:35.160146Z",
        "url": "https://files.pythonhosted.org/packages/f4/1e/d0c59aec5ed549a54caa0b8b467aea4b8ee9c37b2bdda6837543adc0887f/pytest_pytorch-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd773de74fcf2ef2be75fbfca13b23a51c81f305e235c5b460599e460ec2547f",
          "md5": "0a0cac7760a961295867bbaa634cb4b2",
          "sha256": "bf0d4d7a5e618dba1a8503aa626a9711606b0f4733c0df1170fdaac9b3b25724"
        },
        "downloads": -1,
        "filename": "pytest_pytorch-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0a0cac7760a961295867bbaa634cb4b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7500,
        "upload_time": "2021-05-25T08:29:36",
        "upload_time_iso_8601": "2021-05-25T08:29:36.570130Z",
        "url": "https://files.pythonhosted.org/packages/fd/77/3de74fcf2ef2be75fbfca13b23a51c81f305e235c5b460599e460ec2547f/pytest_pytorch-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f41ed0c59aec5ed549a54caa0b8b467aea4b8ee9c37b2bdda6837543adc0887f",
        "md5": "3529836fbf123061ec906e62309821ba",
        "sha256": "1c9f154b0640fca5ed14c33f16df1b4d95c57e8f44e9a2559596ec77a213ab58"
      },
      "downloads": -1,
      "filename": "pytest_pytorch-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3529836fbf123061ec906e62309821ba",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6127,
      "upload_time": "2021-05-25T08:29:35",
      "upload_time_iso_8601": "2021-05-25T08:29:35.160146Z",
      "url": "https://files.pythonhosted.org/packages/f4/1e/d0c59aec5ed549a54caa0b8b467aea4b8ee9c37b2bdda6837543adc0887f/pytest_pytorch-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd773de74fcf2ef2be75fbfca13b23a51c81f305e235c5b460599e460ec2547f",
        "md5": "0a0cac7760a961295867bbaa634cb4b2",
        "sha256": "bf0d4d7a5e618dba1a8503aa626a9711606b0f4733c0df1170fdaac9b3b25724"
      },
      "downloads": -1,
      "filename": "pytest_pytorch-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0a0cac7760a961295867bbaa634cb4b2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7500,
      "upload_time": "2021-05-25T08:29:36",
      "upload_time_iso_8601": "2021-05-25T08:29:36.570130Z",
      "url": "https://files.pythonhosted.org/packages/fd/77/3de74fcf2ef2be75fbfca13b23a51c81f305e235c5b460599e460ec2547f/pytest_pytorch-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}