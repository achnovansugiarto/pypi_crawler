{
  "info": {
    "author": "Taha Zerrouki",
    "author_email": "taha.zerrouki@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: End Users/Desktop",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "Maskouk-pysqlite مكتبة مسكوك\n============================\n\nArabic collocations library and data for Python +SQLite API |maskouk\nlogo|\n\n|downloads| |downloads2|\n\nDeveloppers: Taha Zerrouki: http://tahadz.com taha dot zerrouki at gmail\ndot com\n\n+---------+------------------------------------------------------------------+\n| Feature | value                                                            |\n| s       |                                                                  |\n+=========+==================================================================+\n| Authors | `Authors.md <https://github.com/linuxscout/maskouk-pysqlite/mast |\n|         | er/AUTHORS.md>`__                                                |\n+---------+------------------------------------------------------------------+\n| Release | 0.1                                                              |\n+---------+------------------------------------------------------------------+\n| License | `GPL <https://github.com/linuxscout/maskouk-pysqlite/master/LICE |\n|         | NSE>`__                                                          |\n+---------+------------------------------------------------------------------+\n| Tracker | `linuxscout/maskouk/Issues <https://github.com/linuxscout/maskou |\n|         | k-pysqlite/issues>`__                                            |\n+---------+------------------------------------------------------------------+\n| Website | `http://maskouk.sourceforge.net <http://maskouk-pysqlite.sourcef |\n|         | orge.net>`__                                                     |\n+---------+------------------------------------------------------------------+\n| Source  | `Github <http://github.com/linuxscout/maskouk-pysqlite>`__       |\n+---------+------------------------------------------------------------------+\n| Downloa | `sourceforge <http://maskouk.sourceforge.net>`__                 |\n| d       |                                                                  |\n+---------+------------------------------------------------------------------+\n| Feedbac | `Comments <https://github.com/linuxscout/maskouk-pysqlite/>`__   |\n| ks      |                                                                  |\n+---------+------------------------------------------------------------------+\n| Account | [@Twitter](https://twitter.com/linuxscout)                       |\n| s       | [@Sourceforge](http://sourceforge.net/projects/maskouk/)         |\n+---------+------------------------------------------------------------------+\n\nDescription\n-----------\n\nMaskouk is a database of arab ic collocations extracted from Wikipedia.\n\nArabic wikipedia data base 2011-Jun-21.\n\ninstall\n~~~~~~~\n\n.. code:: shell\n\n    pip install maskouk-pysqlite\n\nUsage\n~~~~~\n\nimport\n^^^^^^\n\n.. code:: python\n\n    >>> import pyarabic.araby as araby\n    >>> import maskouk.collocations as msk\n    >>> mydict = msk.CollocationClass()\n\nTest if collocation exists in database\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> wlist = [u\"كرة\", u\"القدم\"]\n    >>> # test if collocation exists\n    >>> results = mydict.is_collocated(wlist)\n    >>> print(\"inuput:\", wlist)\n    >>> print(\"output:\",results)\n    inuput: ['كرة', 'القدم']\n    output: كرة القدم\n    >>> wlist = [u\"شمس\", u\"النهار\"]\n    >>> results = mydict.is_collocated(wlist)\n    >>> print(\"inuput:\", wlist)\n    >>> print(\"output:\",results)\n    inuput: ['شمس', 'النهار']\n    output: False\n\nTest if a word has collocations in database\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> # get all collocations for a specific word\n    >>> word1 = u\"كرة\"\n    >>> results  = mydict.is_collocated_word(word1)\n    >>> print(\"inuput:\", word1)\n    >>> print(\"output:\",results)\n    inuput: كرة\n    output: {'القدم': 'كُرَة الْقَدَمِ'}\n    >>>\n    >>> word = u\"بيت\"\n    >>> # get all collocations for a specific word\n    >>> results  = mydict.is_collocated_word(word)\n    >>> print(\"inuput:\", word)\n    >>> print(\"output:\",results)\n    inuput: بيت\n    output: {'العدة': 'بَيْت الْعِدَّةِ', 'المستأجر': 'بَيْت الْمُسْتَأْجِرِ', 'المشتري': 'بَيْتِ الْمُشْتَرِي', 'الرجل': 'بَيْت الرَّجُلِ', 'البناء': 'بَيْت الْبِنَاءِ', 'الزوج': 'بَيْت الزَّوْجِ', 'المال': 'بيت المال', 'المقدس': 'بَيْت الْمَقْدِسِ', 'البائع': 'بَيْت الْبَائِعِ', 'الخلاء': 'بَيْت الْخَلَاءِ', 'الأب': 'بَيْت الْأَبِ', 'الله': 'بَيْت اللّهِ'}\n\nDetect collocation in a phrase\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIt can be presented asseparated lists or tagged forms\n\n.. code:: python\n\n    >>> # detect collocations in phrase    \n    >>> text = u\"لعبنا مباراة كرة القدم في بيت المقدس\"\n    >>> wordlist = araby.tokenize(text)\n    >>> results  = mydict.ngramfinder(2, wordlist)\n    >>> print(\"inuput:\", text)\n    >>> print(\"output:\",results)\n    inuput: لعبنا مباراة كرة القدم في بيت المقدس\n    output: ['لعبنا', 'مباراة', 'كرة القدم', 'في', 'بيت المقدس']\n    >>> # detect collocations in phrase    \n    >>> text = u\"لعبنا مباراة كرة القدم في بيت المقدس\"\n    >>> wordlist = araby.tokenize(text)\n    >>> results   = mydict.lookup(wordlist)\n    >>> print(\"inuput:\", text)\n    >>> print(\"output:\",results)\n    inuput: لعبنا مباراة كرة القدم في بيت المقدس\n    output: (['لعبنا', 'مباراة', 'كُرَة', 'الْقَدَمِ', 'في', 'بَيْت', 'الْمَقْدِسِ'], ['CO', 'CO', 'CB', 'CI', 'CO', 'CB', 'CI'])\n    >>> \n\ndetect long collocations in a phrase\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSome collocations are too long to be used in a bigrams database like\n\"بسم الله الرحمن الرحيم\" \"السلام عليكم ورحمة الله وبركاته\" \"أهلا وسهلا\nبكم\"\n\n.. code:: python\n\n    >>> # get Long collocations\n    ... text = u\" قلت لهم السلام عليكم ورحمة الله تعالى وبركاته ثم رجعت\"\n    >>> results  = mydict.lookup4long_collocations(text)\n    >>> print(\"inuput:\", text)\n    inuput:  قلت لهم السلام عليكم ورحمة الله تعالى وبركاته ثم رجعت\n    >>> print(\"output:\",results)   \n    output:  قلت لهم السّلامُ عَلَيكُمْ وَرَحْمَةُ اللهِ تَعَالَى وبركاته ثم رجعت\n\nDetect candidate collocations in phrase\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe candidate collocation doesn't exists in the database, this feature\nis used to extract collocations based on rules. It returns a rule code,\n100 as default (no collocation)\n\n.. code:: python\n\n    >>> text = u\"ظهر رئيس الوزراء السيد عبد الملك بن عامر ومعه أمير دولة غرناطة ونهر النيل انطلاق السباق\"\n    >>> wordlist = araby.tokenize(text)\n    >>> previous = \"__\"\n    >>> for wrd in wordlist:\n    ...     wlist = [previous, wrd]\n    ...     results  = mydict.is_possible_collocation(wlist, lenght = 2)\n    ...     print(\"inuput:\", wlist)\n    ...     print(\"output:\", results)   \n    ...     previous  = wrd\n    ... \n    inuput: ['__', 'ظهر']\n    output: 100\n    inuput: ['ظهر', 'رئيس']\n    output: 100\n    inuput: ['رئيس', 'الوزراء']\n    output: 100\n    inuput: ['الوزراء', 'السيد']\n    output: 20\n    inuput: ['السيد', 'عبد']\n    output: 100\n    inuput: ['عبد', 'الملك']\n    output: 15\n    inuput: ['الملك', 'بن']\n    output: 100\n    inuput: ['بن', 'عامر']\n    output: 15\n    inuput: ['عامر', 'ومعه']\n    output: 100\n    inuput: ['ومعه', 'أمير']\n    output: 100\n    inuput: ['أمير', 'دولة']\n    output: 100\n    inuput: ['دولة', 'غرناطة']\n    output: 10\n    inuput: ['غرناطة', 'ونهر']\n    output: 100\n    inuput: ['ونهر', 'النيل']\n    output: 100\n    inuput: ['النيل', 'انطلاق']\n    output: 100\n    inuput: ['انطلاق', 'السباق']\n    output: 100\n    >>> \n\n[requirement]\n^^^^^^^^^^^^^\n\n::\n\n    1- pyarabic \n    2. sqlite\n\nData Structure:\n---------------\n\nColocations database\n~~~~~~~~~~~~~~~~~~~~\n\n.. code:: sql\n\n    CREATE TABLE \"collocations\" (\n        \"id\" INTEGER PRIMARY KEY  NOT NULL , \n        \"vocalized\" VARCHAR,\n        \"unvocalized\" VARCHAR,\n        \"rule\" VARCHAR, \n        \"category\" VARCHAR, \n        \"note\" VARCHAR,\n        \"first\" VARCHAR,\n        \"second\" VARCHAR\n        );\n\nCSV Structure:\n\n1. id : id unique in the database\n2. vocalized : vocalized collocation\n3. unvocalized : unvocalized collocation\n4. rule : the extraction rule number\n5. category : collocation category\n6. note :\n7. first: first word\n8. second: second word\n\n\n\n.. |maskouk logo| image:: doc/maskouk_header.png\n.. |downloads| image:: https://img.shields.io/sourceforge/dt/maskouk.svg\n   :target: http://sourceforge.org/projects/maskouk\n.. |downloads2| image:: https://img.shields.io/sourceforge/dm/maskouk.svg\n   :target: http://sourceforge.org/projects/maskouk",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://maskouk.sourceforge.net/",
    "keywords": "",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "maskouk-pysqlite",
    "package_url": "https://pypi.org/project/maskouk-pysqlite/",
    "platform": "",
    "project_url": "https://pypi.org/project/maskouk-pysqlite/",
    "project_urls": {
      "Homepage": "http://maskouk.sourceforge.net/"
    },
    "release_url": "https://pypi.org/project/maskouk-pysqlite/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "maskouk: Arabic Dictionary for Collocations - python + sqlite",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7900121,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97d1896f37e714221390542b7c657ad7aea9243df79853dcc5e98f0d153d2bb6",
          "md5": "7d34eefad039bc09552798a0a01bd4bc",
          "sha256": "f6f933285e3f36991eec729312240b50d52627b1659d09b1d4cce124c4f77ae9"
        },
        "downloads": -1,
        "filename": "maskouk_pysqlite-0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d34eefad039bc09552798a0a01bd4bc",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 6028672,
        "upload_time": "2020-08-06T17:17:56",
        "upload_time_iso_8601": "2020-08-06T17:17:56.215332Z",
        "url": "https://files.pythonhosted.org/packages/97/d1/896f37e714221390542b7c657ad7aea9243df79853dcc5e98f0d153d2bb6/maskouk_pysqlite-0.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7695ee0c9c682e3b03433e3e6afd19bfb47817f5181ba7aac47ec7e8fcdfd343",
          "md5": "c5672e9aaee724d77fba90a73b94c63c",
          "sha256": "362aad9ba1fdecd8463d135e0a9d26b2ffe4c51f443e5b2c730ad59e0f2b0eeb"
        },
        "downloads": -1,
        "filename": "maskouk_pysqlite-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c5672e9aaee724d77fba90a73b94c63c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6032014,
        "upload_time": "2020-08-06T17:19:58",
        "upload_time_iso_8601": "2020-08-06T17:19:58.492635Z",
        "url": "https://files.pythonhosted.org/packages/76/95/ee0c9c682e3b03433e3e6afd19bfb47817f5181ba7aac47ec7e8fcdfd343/maskouk_pysqlite-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "441883609798b9c94b25bb98a347d6c7b0dde6f3de62a08db5908a755cc387e6",
          "md5": "e93dba80f824bf762cd41365fe4a3eae",
          "sha256": "993dc1ff61aeb81628f8cbb85571cdb18821747e9945f0f7e569553450bfcfbd"
        },
        "downloads": -1,
        "filename": "maskouk_pysqlite-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e93dba80f824bf762cd41365fe4a3eae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2548787,
        "upload_time": "2020-08-06T17:14:50",
        "upload_time_iso_8601": "2020-08-06T17:14:50.078823Z",
        "url": "https://files.pythonhosted.org/packages/44/18/83609798b9c94b25bb98a347d6c7b0dde6f3de62a08db5908a755cc387e6/maskouk_pysqlite-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97d1896f37e714221390542b7c657ad7aea9243df79853dcc5e98f0d153d2bb6",
        "md5": "7d34eefad039bc09552798a0a01bd4bc",
        "sha256": "f6f933285e3f36991eec729312240b50d52627b1659d09b1d4cce124c4f77ae9"
      },
      "downloads": -1,
      "filename": "maskouk_pysqlite-0.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "7d34eefad039bc09552798a0a01bd4bc",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 6028672,
      "upload_time": "2020-08-06T17:17:56",
      "upload_time_iso_8601": "2020-08-06T17:17:56.215332Z",
      "url": "https://files.pythonhosted.org/packages/97/d1/896f37e714221390542b7c657ad7aea9243df79853dcc5e98f0d153d2bb6/maskouk_pysqlite-0.1-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7695ee0c9c682e3b03433e3e6afd19bfb47817f5181ba7aac47ec7e8fcdfd343",
        "md5": "c5672e9aaee724d77fba90a73b94c63c",
        "sha256": "362aad9ba1fdecd8463d135e0a9d26b2ffe4c51f443e5b2c730ad59e0f2b0eeb"
      },
      "downloads": -1,
      "filename": "maskouk_pysqlite-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c5672e9aaee724d77fba90a73b94c63c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6032014,
      "upload_time": "2020-08-06T17:19:58",
      "upload_time_iso_8601": "2020-08-06T17:19:58.492635Z",
      "url": "https://files.pythonhosted.org/packages/76/95/ee0c9c682e3b03433e3e6afd19bfb47817f5181ba7aac47ec7e8fcdfd343/maskouk_pysqlite-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "441883609798b9c94b25bb98a347d6c7b0dde6f3de62a08db5908a755cc387e6",
        "md5": "e93dba80f824bf762cd41365fe4a3eae",
        "sha256": "993dc1ff61aeb81628f8cbb85571cdb18821747e9945f0f7e569553450bfcfbd"
      },
      "downloads": -1,
      "filename": "maskouk_pysqlite-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e93dba80f824bf762cd41365fe4a3eae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2548787,
      "upload_time": "2020-08-06T17:14:50",
      "upload_time_iso_8601": "2020-08-06T17:14:50.078823Z",
      "url": "https://files.pythonhosted.org/packages/44/18/83609798b9c94b25bb98a347d6c7b0dde6f3de62a08db5908a755cc387e6/maskouk_pysqlite-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}