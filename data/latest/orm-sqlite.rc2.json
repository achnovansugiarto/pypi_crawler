{
  "info": {
    "author": "Yi Zhang",
    "author_email": "yizhang.dev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# ORM-SQLite\n\nORM-SQLite is\n\n* a lightweight ORM for SQLite\n* written in [Python (3.7+) Standard Library](https://docs.python.org/3.7/library/)\n\n\n\n## Quickstart\n\n1. Define a `Pomodoro` model\n\n   ```python\n   import orm_sqlite  \n\n   class Pomodoro(orm_sqlite.Model):  \n\n       id = orm_sqlite.IntegerField(primary_key=True) # auto-increment\n       task = orm_sqlite.StringField()\n       interval = orm_sqlite.IntegerField()\n   ```\n\n2. Create a `Database` instance\n\n   ```python\n   db = orm_sqlite.Database('example.db')\n   ```\n\n3. Set it as backend of `Pomodoro` model objects, CRUD operations thus can be performed later\n\n   ```python\n   Pomodoro.objects.backend = db\n   ```\n\n4. **Create** a Pomodoro timer record (primary key is auto-increment) and **insert** it to backend (**auto-commited**)\n\n   ```python\n   pomodoro = Pomodoro({'task': 'do something', 'interval': 25})\n   pomodoro.save()\n   ```\n\n   which is equivalent to\n\n   ```python\n   pomodoro = Pomodoro({'task': 'do something', 'interval': 25})\n   Pomodoro.objects.add(pomodoro)   \n   ```\n\n5. **Retrieve** all the records in the backend\n\n   ```Python\n   Pomodoro.objects.all()\n   ```\n\n6. **Retrieve** single record by its primary key and **update** it (**auto-commited**)\n\n   ```python\n   obj = Pomodoro.objects.get(pk=1)\n   obj['task'] = 'do something else'\n   obj.update()\n   ```\n\n   which is equivalent to\n\n   ```python\n   obj = Pomodoro.objects.get(pk=1)\n   obj['task'] = 'do something else'\n   Pomodoro.objects.update(obj)\n   ```\n\n7. **Retrieve** single record by its primary key and **delete** it (**auto-commited**)\n\n   ```python\n   Pomodoro.objects.get(pk=1).delete()\n   ```\n\n   which is equivalent to\n\n   ```python\n   obj = Pomodoro.objects.get(pk=1)\n   Pomodoro.objects.remove(obj)\n   ```\n\n8. Disconnect the backend\n\n   ```python\n   Pomodoro.objects.backend.close()\n   ```\n\n\n\n### Install ORM-SQLite\n\n```bash\n$ pip install orm-sqlite\n```\n\n\n\n## Documentation\n\n### Module `Database`\n\n```python\nclass orm_sqlite.Database(database[, timeout, detect_types, isolation_level, check_same_thread, factory, cached_statements, uri])\n```\n\n* `connected`\n\n  **Instance attribute**: Whether or not the SQLite database is connected.\n\n* `connection`\n\n  **Instance attribute**: `sqlite3.Connection` object\n\n* `cursor`\n\n  **Instance attribute**: `sqlite3.Cursor` object\n\n* `connect()`\n\n  **Instance method**: Connects the SQLite database if disconnected.\n\n* `close()`\n\n  **Instance method**: Disconnects the SQLite database if connected.\n\n* `select(sql, *args, size=None)`\n\n  **Instance method**: Returns query results, a list of `sqlite3.Row` objects.\n\n* `execute(sql, *args, autocommit=True)`\n\n  **Instance method**: Executes an SQL statement and returns rows affected.\n\n* `commit()`\n\n  **Instance method**: Commits the staged transaction.\n\n\n\n### Module `StringField`\n\n```python\nclass orm_sqlite.StringField(name=None, default='')\n```\n\n* `name`\n\n  **Instance attribute**: Column name. Default: `None`.\n\n* `type`\n\n  **Instance attribute**: Column type. Default: `TEXT`.\n\n* `default`\n\n  **Instance attribute**: Column default value. Default: `''`.\n\n* `primary_key`\n\n  **Instance attribute**: Whether or not it is the primary key. Default: `False`.\n\n\n\n### Module `IntegerField`\n\n```python\nclass orm_sqlite.IntegerField(name=None, default=0, primary_key=False)\n```\n\n* `name`\n\n  **Instance attribute**: Column name. Default: `None`.\n\n* `type`\n\n  **Instance attribute**: Column type. Default: `INTEGER`.\n\n* `default`\n\n  **Instance attribute**: Column default value. Default: `0`.\n\n* `primary_key`\n\n  **Instance attribute**: Whether or not it is the primary key. Default: `False`.\n\n\n\n### Module `FloatField`\n\n```python\nclass orm_sqlite.StringField(name=None, default=0.0)\n```\n\n* `name`\n\n  **Instance attribute**: Column name. Default: `None`.\n\n* `type`\n\n  **Instance attribute**: Column type. Default: `REAL`.\n\n* `default`\n\n  **Instance attribute**: Column default value. Default: `0.0`.\n\n* `primary_key`\n\n  **Instance attribute**: Whether or not it is the primary key. Default: `False`.\n\n\n\n### Module `Model`\n\n```python\nclass orm_sqlite.Model(*args, **kwargs)\n```\n\n* `__table__`\n\n  **Class attribute**: Table.\n\n* `__mappings__`\n\n  **Class attribute**: Object Relational Mappings (ORMs).\n\n* `__primary_key__`\n\n  **Class attribute**: Primary key.\n\n* `__fields__`\n\n  **Class attribute**: Fields except primary key.\n\n* `objects`\n\n  **Class-only attribute**: `orm_sqlite.Manager` object used to manage corresponding `Model` objects.\n\n* `exists()`\n\n  **Class-only method**: Whether or not the table exists in the connected database.\n\n* `create()`\n\n  **Class-only method**: Create the table if not exists in the connected database.\n\n* `drop()`\n\n  **Class-only method**: Drop the table if exists in the connected database, `objects.backend.commit()` needed to confirm. ***Extremely Dangerous***.\n\n* `save()`\n\n  **Instance method**: Inserts `Model` object to table in the connected database and returns rows affected (1 or -1).\n\n* `update()`\n\n  **Instance method**: Updates `Model` object from table in the connected database and returns rows affected (1 or -1). ***Dangerous***.\n\n* `delete()`\n\n  **Instance method**: Deletes `Model` object from table in the connected database and returns rows affected (1 or -1). ***Dangerous***.\n\n* `keys()`, `values()`, `items()`,  `copy()`, etc. methods inherited from standard `dict`.\n\n\n\n**Practical template for customized model**:\n\n```python\nimport orm_sqlite\n\nclass MyModel(orm_sqlite.Model):\n\n    id = orm_sqlite.IntegerField(primary_key=True) # auto-increment\n    # TODO:   \n```\n\n\n\n### Module `Manager`\n\n```python\nclass orm_sqlite.Manager()\n```\n\n* `backend`\n\n  **Instance attribute**: `orm_sqlite.Database` object serving as backend of  `Model` objects.\n\n* `all()`\n\n  **Instance method**: Returns all `Model` objects from table in the connected database.\n\n* `find(filter=None, order_by=None, **extra)`\n\n  **Instance method**: Returns all `Model` objects satified the conditions from table in the connected database.\n\n* `get(pk)`\n\n  **Instance method**: Returns single `Model` object by its primary key from table in the connected database.\n\n* `exists(pk)`\n\n  **Instance method**: Whether or not a primary key exists in the table from the connected database.\n\n* `aggregate(self, expression, filter=None)`\n\n  **Instance method**: Returns the result of an aggregate function performed on table in the connected database.\n\n* `add(obj)`\n\n  **Instance method**: Inserts `Model` object to table in the connected database and returns rows affected (1 or -1).\n\n* `update(obj)`\n\n  **Instance method**: Updates `Model` object from table in the connected database and returns rows affected (1 or -1). ***Dangerous***.\n\n* `remove(obj)`\n\n  **Instance method**: Deletes `Model` object from table in the connected database and returns rows affected (1 or -1). ***Dangerous***.\n\n* `clear()`\n\n  **Instance method**: Deletes **all** `Model` objects from table in the connected database and returns rows affected (1 or -1), `backend.commit()` needed  to confirm. ***Extremely Dangerous***.\n\n\n\n### Helper Function\n\n* `root_logger(log_dir='.')`\n\n  Returns root logger, a `logging.logger` object, logging in main module.\n\n* `child_logger(child)`\n\n  Returns child logger, a `logging.logger` object, logging in auxiliary module.\n\n\n\n## Related Projects\n\n* Inspired by [Django](https://www.djangoproject.com/) ORM\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/yzhang-dev/ORM-SQLite",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yzhang-dev/ORM-SQLite",
    "keywords": "orm,sqlite3",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ORM-SQLite",
    "package_url": "https://pypi.org/project/ORM-SQLite/",
    "platform": "",
    "project_url": "https://pypi.org/project/ORM-SQLite/",
    "project_urls": {
      "Download": "https://github.com/yzhang-dev/ORM-SQLite",
      "Homepage": "https://github.com/yzhang-dev/ORM-SQLite"
    },
    "release_url": "https://pypi.org/project/ORM-SQLite/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A lightweight ORM for SQLite",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10489028,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc23a6880b19594e4f1381e7c5c7f5dfc0e361814c8d29abea3fd54e1e1b6466",
          "md5": "8203c93cc32269e7510d04054afbbab4",
          "sha256": "b7f3aa24a7a47fa5a0df3617a75b1550e03e8fb3640f867b8eec65dec3c51975"
        },
        "downloads": -1,
        "filename": "ORM_SQLite-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8203c93cc32269e7510d04054afbbab4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8261,
        "upload_time": "2021-05-27T14:18:04",
        "upload_time_iso_8601": "2021-05-27T14:18:04.029975Z",
        "url": "https://files.pythonhosted.org/packages/bc/23/a6880b19594e4f1381e7c5c7f5dfc0e361814c8d29abea3fd54e1e1b6466/ORM_SQLite-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22f9b2f675c2651fa0587b5451007ead132437c651e1dfb27fe37d18e4b60638",
          "md5": "a496f613fd94c5ffa793e5070ca31118",
          "sha256": "64b97e33d8ef47d6dfda546daa0576fc9e6dc0c92055e6c17b2647bdc5240846"
        },
        "downloads": -1,
        "filename": "ORM-SQLite-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a496f613fd94c5ffa793e5070ca31118",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7272,
        "upload_time": "2021-05-27T14:18:05",
        "upload_time_iso_8601": "2021-05-27T14:18:05.693145Z",
        "url": "https://files.pythonhosted.org/packages/22/f9/b2f675c2651fa0587b5451007ead132437c651e1dfb27fe37d18e4b60638/ORM-SQLite-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be56bba152268a16f25ec97c7b3d58f72be779dd5c35166940a228401b952cd5",
          "md5": "c604a5c155709be52db904b14a138601",
          "sha256": "dffe9ec45fddad3eba141b0699f7fed13e40426577778ec35aa1dc002308adb3"
        },
        "downloads": -1,
        "filename": "ORM_SQLite-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c604a5c155709be52db904b14a138601",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8259,
        "upload_time": "2021-05-27T14:47:30",
        "upload_time_iso_8601": "2021-05-27T14:47:30.824223Z",
        "url": "https://files.pythonhosted.org/packages/be/56/bba152268a16f25ec97c7b3d58f72be779dd5c35166940a228401b952cd5/ORM_SQLite-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1799f9ca7f9db65ca303cf0bc20f7d60ff0afb47c381e02dc8b37b3f328c824",
          "md5": "5fd33ba6f3e0a74cc5f1ef3751fdb5c1",
          "sha256": "16601b25e8d4504df3c149ef842f953347d148922defa26eb50ae5a882d96354"
        },
        "downloads": -1,
        "filename": "ORM-SQLite-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5fd33ba6f3e0a74cc5f1ef3751fdb5c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7253,
        "upload_time": "2021-05-27T14:47:32",
        "upload_time_iso_8601": "2021-05-27T14:47:32.074064Z",
        "url": "https://files.pythonhosted.org/packages/d1/79/9f9ca7f9db65ca303cf0bc20f7d60ff0afb47c381e02dc8b37b3f328c824/ORM-SQLite-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be56bba152268a16f25ec97c7b3d58f72be779dd5c35166940a228401b952cd5",
        "md5": "c604a5c155709be52db904b14a138601",
        "sha256": "dffe9ec45fddad3eba141b0699f7fed13e40426577778ec35aa1dc002308adb3"
      },
      "downloads": -1,
      "filename": "ORM_SQLite-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c604a5c155709be52db904b14a138601",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8259,
      "upload_time": "2021-05-27T14:47:30",
      "upload_time_iso_8601": "2021-05-27T14:47:30.824223Z",
      "url": "https://files.pythonhosted.org/packages/be/56/bba152268a16f25ec97c7b3d58f72be779dd5c35166940a228401b952cd5/ORM_SQLite-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1799f9ca7f9db65ca303cf0bc20f7d60ff0afb47c381e02dc8b37b3f328c824",
        "md5": "5fd33ba6f3e0a74cc5f1ef3751fdb5c1",
        "sha256": "16601b25e8d4504df3c149ef842f953347d148922defa26eb50ae5a882d96354"
      },
      "downloads": -1,
      "filename": "ORM-SQLite-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5fd33ba6f3e0a74cc5f1ef3751fdb5c1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7253,
      "upload_time": "2021-05-27T14:47:32",
      "upload_time_iso_8601": "2021-05-27T14:47:32.074064Z",
      "url": "https://files.pythonhosted.org/packages/d1/79/9f9ca7f9db65ca303cf0bc20f7d60ff0afb47c381e02dc8b37b3f328c824/ORM-SQLite-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}