{
  "info": {
    "author": "Hartmut Goebel",
    "author_email": "h.goebel@crazy-compilers.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Printing",
      "Topic :: Utilities"
    ],
    "description": "``pdfjoin`` can be used to join PDF documents. It supports a simple\r\n``droplet`` mode. It will join all files passed as argument into a new\r\nfile.\r\n\r\n``pdfjoin`` has three modes of operation:\r\n\r\n1) With no output path given: The droplet mode.\r\n\r\n   If no output path is passed to ``pdfjoin``, will look for a file\r\n   matching ``pdfjoin-*.pdf`` in the current directory, which has been\r\n   modified within the last 60 minutes. (More precise, the filename\r\n   must match the scheme as described in the next paragraph.)q If such\r\n   a file exists, all documents passed as arguments will be joined to\r\n   this one.\r\n\r\n   If such a file does not exist, it will be created first. The\r\n   filename will be ``pdfjoin-yyyddmm-hhmm.pdf`` with ``yyyddmm``\r\n   being the current date and ``hhmm`` being the current time.\r\n\r\n   This allows dropping one file after each other onto the droplet and\r\n   join them into the same output file -- assuming you are not waiting\r\n   more then 60 Minutes between each drop.\r\n\r\n2) With an existing directory name is given as output path\r\n\r\n   This case works exactly like the droplet mode, except that the file\r\n   is searched for and created in the given directory.\r\n\r\n3) With any other path given as output path:\r\n\r\n   In this case the given path is the filename searched for and\r\n   created if not existing yet.\r\n\r\nUnfortunatly the old project homepage at origo.ethz.ch has been shut down\r\ntogether with origo. For now the source is hosted at\r\nhttps://gitlab.com/pdftools/pdfjoin.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/pdftools/pdfjoin",
    "keywords": "pdf,join,merge",
    "license": "GPL 3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pdftools.pdfjoin",
    "package_url": "https://pypi.org/project/pdftools.pdfjoin/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pdftools.pdfjoin/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://gitlab.com/pdftools/pdfjoin"
    },
    "release_url": "https://pypi.org/project/pdftools.pdfjoin/0.1dev/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Join PDF documents into a single document.",
    "version": "0.1dev",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1480722,
  "releases": {
    "0.1dev": []
  },
  "urls": [],
  "vulnerabilities": []
}