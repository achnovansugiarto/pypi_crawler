{
  "info": {
    "author": "Conceptual Vision Consulting LLC",
    "author_email": "seroukhov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# <img src=\"https://uploads-ssl.webflow.com/5ea5d3315186cf5ec60c3ee4/5edf1c94ce4c859f2b188094_logo.svg\" alt=\"Pip.Services Logo\" width=\"200\"> <br/> PostgreSQL components for Python\n\nThis module is a part of the [Pip.Services](http://pipservices.org) polyglot microservices toolkit. It provides a set of components to implement PostgreSQL persistence.\n\nThe module contains the following packages:\n- **Build** - Factory to create PostreSQL persistence components.\n- **Connect** - Connection component to configure PostgreSQL connection to database.\n- **Persistence** - abstract persistence components to perform basic CRUD operations.\n\n<a name=\"links\"></a> Quick links:\n\n* [Configuration](https://www.pipservices.org/recipies/configuration)\n* [API Reference](https://pip-services3-python.github.io/pip-services3-postgres-python/)\n* [Change Log](CHANGELOG.md)\n* [Get Help](https://www.pipservices.org/community/help)\n* [Contribute](https://www.pipservices.org/community/contribute)\n\n## Use\n\nInstall the Python package as\n```bash\npip install pip-services3-postgres\n```\n\nAs an example, lets create persistence for the following data object.\n\n```python\n\nclass MyObject(IStringIdentifiable):\n    def __init__(self, id=None, key=None, content=None):\n        self.id = id\n        self.key = key\n        self.content = content\n```\n\nThe persistence component shall implement the following interface with a basic set of CRUD operations.\n\n```python\nfrom abc import ABC\nfrom typing import Union, List\n\nfrom pip_services3_commons.data import IIdentifiable, PagingParams, FilterParams, DataPage\n\nclass IMyPersistence(ABC):\n    def get_page_by_filter(self, correlation_id: Union[str, None], filter: Union[FilterParams, None],\n                           paging: Union[PagingParams, None]) -> DataPage:\n        raise NotImplemented()\n\n    def get_one_by_id(self, correlation_id: Union[str, None], id: str) -> MyObject:\n        raise NotImplemented()\n\n    def get_one_by_key(self, correlation_id: Union[str, None], key: List[str]) -> MyObject:\n        raise NotImplemented()\n\n    def create(self, correlation_id: Union[str, None], item: MyObject) -> MyObject:\n        raise NotImplemented()\n\n    def update(self, correlation_id: Union[str, None], item: MyObject) -> MyObject:\n        raise NotImplemented()\n\n    def delete_by_id(self, correlation_id: Union[str, None], id: str):\n        raise NotImplemented()\n```\n\nTo implement postgresql persistence component you shall inherit `IdentifiablePostgresPersistence`. \nMost CRUD operations will come from the base class. You only need to override `get_page_by_filter` method with a custom filter function.\nAnd implement a `get_one_by_key` custom persistence method that doesn't exist in the base class.\n\n```python\nclass MyPostgresPersistence(IdentifablePostgresPersistence):\n    def __init__(self):\n        super(MyPostgresPersistence, self).__init__('myobjects')\n        self._auto_create_object(\"CREATE TABLE myobjects (id VARCHAR(32) PRIMARY KEY, key VARCHAR(50), value VARCH(255)\")\n        self._ensure_index(\"myobjects_key\", { 'key': 1 }, { 'unique': True })\n\n    def __compose_filter(self, filter):\n        filter = filter or FilterParams()\n\n        criteria = []\n\n        id = filter.get_as_nullable_string('id')\n        if id is not None:\n            criteria.append(\"id='\" + id + \"'\")\n\n        temp_ids = filter.get_as_nullable_string('ids')\n        if temp_ids is not None:\n            ids = temp_ids.split(',')\n            criteria.append(\"id IN ('\" + \"','\".join(ids) + \"')\")\n\n        key = filter.get_as_nullable_string('key')\n        if key is not None:\n            criteria.append(\"key='\" + key + \"'\")\n\n        return \" AND \".join(criteria) if len(criteria) > 0 else None\n\n    def get_page_by_filter(self, correlation_id, filter, paging, sort, select):\n        return super().get_page_by_filter(correlation_id, self.__compose_filter(filter), paging, 'id', None)\n\n    def get_one_by_key(self, correlation_id, key):\n        query = \"SELECT * FROM \" + self._quoted_table_name() + \" WHERE \\\"key\\\"=%s\"\n        params = [key]\n\n        result = self._request(query, params)\n        item = result[0] or None if result and result[0] else None\n\n        if item is None:\n            self._logger.trace(correlation_id, \"Nothing found from %s with key = %s\", self._table_name, key)\n        else:\n            self._logger.trace(correlation_id, \"Retrieved from %s with key = %s\", self._table_name, key)\n\n        item = self._convert_to_public(item)\n\n        return item\n```\n\nAlternatively you can store data in non-relational format using `IdentificableJsonPostgresPersistence`.\nIt stores data in tables with two columns - `id` with unique object id and `data` with object data serialized as JSON.\nTo access data fields you shall use `data->'field'` expression or `data->>'field'` expression for string values.\n\n```python\nfrom pip_services3_postgres.persistence.IdentifiableJsonPostgresPersistence import IdentifiableJsonPostgresPersistence\n\n\nclass MyPostgresPersistence(IdentifableJsonPostgresPersistence):\n    def __init__(self):\n        super(MyPostgresPersistence, self).__init__('myobjects')\n        self._ensure_table(\"VARCHAR(32)\", \"JSONB\")\n        self._ensure_index(\"myobjects_key\", { \"data->>'key'\": 1 }, { 'unique': True })\n\n    def __compose_filter(self, filter):\n        filter = filter or FilterParams()\n\n        criteria = []\n\n        id = filter.get_as_nullable_string('id')\n        if id is not None:\n            criteria.append(\"data->>'id'='\" + id + \"'\")\n\n        temp_ids = filter.get_as_nullable_string('ids')\n        if temp_ids is not None:\n            ids = temp_ids.split(',')\n            criteria.append(\"data->>'id' IN ('\" + \"','\".join(ids) + \"')\")\n\n        key = filter.get_as_nullable_string('key')\n        if key is not None:\n            criteria.append(\"data->>'key'='\" + key + \"'\")\n\n        return \" AND \".join(criteria) if len(criteria) > 0 else None\n\n    def get_page_by_filter(self, correlation_id, filter, paging, sort, select):\n        return super().get_page_by_filter(correlation_id, self.__compose_filter(filter), paging, 'id', None)\n\n    def get_one_by_key(self, correlation_id, key):\n        query = \"SELECT * FROM \" + self._quoted_table_name() + \" WHERE data->>'key'=%s\"\n        params = [key]\n\n        result = self._request(query, params)\n        item = result[0] or None if result and result[0] else None\n\n        if item is None:\n            self._logger.trace(correlation_id, \"Nothing found from %s with key = %s\", self._table_name, key)\n        else:\n            self._logger.trace(correlation_id, \"Retrieved from %s with key = %s\", self._table_name, key)\n\n        item = self._convert_to_public(item)\n\n        return item\n```\n\nConfiguration for your microservice that includes postgresql persistence may look the following way.\n\n```yaml\n...\n{{#if POSTGRES_ENABLED}}\n- descriptor: pip-services:connection:postgres:con1:1.0\n  connection:\n    uri: {{{POSTGRES_SERVICE_URI}}}\n    host: {{{POSTGRES_SERVICE_HOST}}}{{#unless POSTGRES_SERVICE_HOST}}localhost{{/unless}}\n    port: {{POSTGRES_SERVICE_PORT}}{{#unless POSTGRES_SERVICE_PORT}}5432{{/unless}}\n    database: {{POSTGRES_DB}}{{#unless POSTGRES_DB}}app{{/unless}}\n  credential:\n    username: {{POSTGRES_USER}}\n    password: {{POSTGRES_PASS}}\n    \n- descriptor: myservice:persistence:postgres:default:1.0\n  dependencies:\n    connection: pip-services:connection:postgres:con1:1.0\n  table: {{POSTGRES_TABLE}}{{#unless POSTGRES_TABLE}}myobjects{{/unless}}\n{{/if}}\n...\n```\n\n## Develop\n\nFor development you shall install the following prerequisites:\n* Python 3.7+\n* Visual Studio Code or another IDE of your choice\n* Docker\n\nInstall dependencies:\n```bash\npip install -r requirements.txt\n```\n\nRun automated tests:\n```bash\npython test.py\n```\n\nGenerate API documentation:\n```bash\n./docgen.ps1\n```\n\nBefore committing changes run dockerized build and test as:\n```bash\n./build.ps1\n./test.ps1\n./clear.ps1\n```\n\n## Contacts\n\nThe library is created and maintained by:\n- **Sergey Seroukhov**\n- **Danil Prisiazhnyi**\n\nThe documentation is written by **Mark Makarychev**.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/pip-services3-python/pip-services3-postgres-python",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pip-services3-postgres",
    "package_url": "https://pypi.org/project/pip-services3-postgres/",
    "platform": "any",
    "project_url": "https://pypi.org/project/pip-services3-postgres/",
    "project_urls": {
      "Homepage": "http://github.com/pip-services3-python/pip-services3-postgres-python"
    },
    "release_url": "https://pypi.org/project/pip-services3-postgres/3.2.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Postgres persistence components for Pip.Services in Python",
    "version": "3.2.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14837710,
  "releases": {
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee6d67dc47d1b511ac552c6b3d4bd49f50618167bf10716cd6eb64fb1edae7f8",
          "md5": "f3e462dc308054640b1b615897a86ea4",
          "sha256": "c00ead5cf11dec854b8fbebb41994b2acb7461ab708cc32ec22df8892e630eed"
        },
        "downloads": -1,
        "filename": "pip_services3_postgres-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f3e462dc308054640b1b615897a86ea4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20114,
        "upload_time": "2021-03-12T10:04:09",
        "upload_time_iso_8601": "2021-03-12T10:04:09.591665Z",
        "url": "https://files.pythonhosted.org/packages/ee/6d/67dc47d1b511ac552c6b3d4bd49f50618167bf10716cd6eb64fb1edae7f8/pip_services3_postgres-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db1c621cc4dbb3a14bab0a4f626414dcf805d9e490c29b25cebc9d06b346630d",
          "md5": "03288cbcf4df7eb71f894d2d76dbcf28",
          "sha256": "a15e6385422d02882984acc76a4ebf06ba92bbe6bd43234982242024ce9da167"
        },
        "downloads": -1,
        "filename": "pip_services3_postgres-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "03288cbcf4df7eb71f894d2d76dbcf28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20653,
        "upload_time": "2021-06-10T12:46:33",
        "upload_time_iso_8601": "2021-06-10T12:46:33.176700Z",
        "url": "https://files.pythonhosted.org/packages/db/1c/621cc4dbb3a14bab0a4f626414dcf805d9e490c29b25cebc9d06b346630d/pip_services3_postgres-3.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a88695eca864b40ea541e91b2f92adee99380e5b0b9a83365bbe1722afcc961b",
          "md5": "4b1d8c496ed2159ae66a10b22a17b6f7",
          "sha256": "2d86970248bfc470e79b27d875ed593f4d148f7e2c053487a7d1f1d3d5d880c5"
        },
        "downloads": -1,
        "filename": "pip_services3_postgres-3.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4b1d8c496ed2159ae66a10b22a17b6f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21081,
        "upload_time": "2021-08-25T08:47:10",
        "upload_time_iso_8601": "2021-08-25T08:47:10.183161Z",
        "url": "https://files.pythonhosted.org/packages/a8/86/95eca864b40ea541e91b2f92adee99380e5b0b9a83365bbe1722afcc961b/pip_services3_postgres-3.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e70f96cf82f06d281ab01d3e35792781e02590180f409c6e87f26380889264d",
          "md5": "2b719164430062cf4e7712c2faa62bbe",
          "sha256": "e9f7036cee4a4f84c2b08754b80a4c65f5b16b2c3323ada2859666560538668f"
        },
        "downloads": -1,
        "filename": "pip_services3_postgres-3.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2b719164430062cf4e7712c2faa62bbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20920,
        "upload_time": "2021-09-02T13:31:11",
        "upload_time_iso_8601": "2021-09-02T13:31:11.060933Z",
        "url": "https://files.pythonhosted.org/packages/2e/70/f96cf82f06d281ab01d3e35792781e02590180f409c6e87f26380889264d/pip_services3_postgres-3.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85b50e496979a4d4fcdfd12b569ab50f9c16c57f86f70f6e01f992b31013d31d",
          "md5": "7e1b25c47de7a2a7af76e11b793d9e0f",
          "sha256": "0d5e8cb19fac2063cf19ab13c09bfe589c9d9211050f8b61fecb1104d0c8283a"
        },
        "downloads": -1,
        "filename": "pip_services3_postgres-3.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7e1b25c47de7a2a7af76e11b793d9e0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21008,
        "upload_time": "2021-10-28T18:19:33",
        "upload_time_iso_8601": "2021-10-28T18:19:33.166466Z",
        "url": "https://files.pythonhosted.org/packages/85/b5/0e496979a4d4fcdfd12b569ab50f9c16c57f86f70f6e01f992b31013d31d/pip_services3_postgres-3.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80e1286852996343d203921ba68c97f708d4755e4cbde7dc8e0b201cad79e939",
          "md5": "c4f6d376f45ec8b0dddf0df91dbb96b3",
          "sha256": "05cb75994e5e907062b95694bbfeb9ebca5d2305fd9060906c6edb71035fec75"
        },
        "downloads": -1,
        "filename": "pip_services3_postgres-3.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c4f6d376f45ec8b0dddf0df91dbb96b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21048,
        "upload_time": "2021-10-29T00:51:13",
        "upload_time_iso_8601": "2021-10-29T00:51:13.092895Z",
        "url": "https://files.pythonhosted.org/packages/80/e1/286852996343d203921ba68c97f708d4755e4cbde7dc8e0b201cad79e939/pip_services3_postgres-3.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "506f7075122882e41c6cb8e32391d9c35d0c50eaac13fe0f2d0d0a990c8ea567",
          "md5": "2941251bd518e68e5389ec8e0700dad6",
          "sha256": "4df4d9f29f03690aa77ae5e2f769f85e1c5af1e867494ce1923b4de0dccf8981"
        },
        "downloads": -1,
        "filename": "pip_services3_postgres-3.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2941251bd518e68e5389ec8e0700dad6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21092,
        "upload_time": "2021-11-25T21:03:29",
        "upload_time_iso_8601": "2021-11-25T21:03:29.342978Z",
        "url": "https://files.pythonhosted.org/packages/50/6f/7075122882e41c6cb8e32391d9c35d0c50eaac13fe0f2d0d0a990c8ea567/pip_services3_postgres-3.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5267d62c6d48a22ef7dff8c9fbaba36561cbdbf1ddba1efd15b476765e8dc164",
          "md5": "114368e07caa157f2199869c7561d5d7",
          "sha256": "50ace617137ede897f156de0b61a37dff6d59817d51e9b9b2c34b03294e7d742"
        },
        "downloads": -1,
        "filename": "pip_services3_postgres-3.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "114368e07caa157f2199869c7561d5d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21402,
        "upload_time": "2022-07-21T16:48:05",
        "upload_time_iso_8601": "2022-07-21T16:48:05.869092Z",
        "url": "https://files.pythonhosted.org/packages/52/67/d62c6d48a22ef7dff8c9fbaba36561cbdbf1ddba1efd15b476765e8dc164/pip_services3_postgres-3.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5267d62c6d48a22ef7dff8c9fbaba36561cbdbf1ddba1efd15b476765e8dc164",
        "md5": "114368e07caa157f2199869c7561d5d7",
        "sha256": "50ace617137ede897f156de0b61a37dff6d59817d51e9b9b2c34b03294e7d742"
      },
      "downloads": -1,
      "filename": "pip_services3_postgres-3.2.6.tar.gz",
      "has_sig": false,
      "md5_digest": "114368e07caa157f2199869c7561d5d7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21402,
      "upload_time": "2022-07-21T16:48:05",
      "upload_time_iso_8601": "2022-07-21T16:48:05.869092Z",
      "url": "https://files.pythonhosted.org/packages/52/67/d62c6d48a22ef7dff8c9fbaba36561cbdbf1ddba1efd15b476765e8dc164/pip_services3_postgres-3.2.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}