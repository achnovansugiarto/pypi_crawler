{
  "info": {
    "author": "Mauro Amico",
    "author_email": "mauro.amico@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Plone",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "collective.purgebyid\n====================\n\n.. image:: https://img.shields.io/pypi/v/collective.purgebyid.svg\n    :target: https://pypi.python.org/pypi/collective.purgebyid/\n    :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/pyversions/collective.purgebyid.svg?style=plastic\n    :target: https://pypi.python.org/pypi/collective.purgebyid/\n    :alt: Supported - Python Versions\n\n.. image:: https://img.shields.io/pypi/dm/collective.purgebyid.svg\n    :target: https://pypi.python.org/pypi/collective.purgebyid/\n    :alt: Number of PyPI downloads\n    \n.. image:: https://img.shields.io/pypi/l/collective.purgebyid.svg\n    :target: https://pypi.python.org/pypi/collective.purgebyid/\n    :alt: License\n\n.. image:: https://github.com/collective/collective.purgebyid/actions/workflows/tests.yml/badge.svg\n    :target: https://github.com/collective/collective.purgebyid/actions\n    :alt: Tests\n\n.. image:: https://coveralls.io/repos/github/collective/collective.purgebyid/badge.svg?branch=master\n    :target: https://coveralls.io/github/collective/collective.purgebyid?branch=master\n    :alt: Coverage\n\ncollective.purgbyid is a new method for cache invalidation of Plone\nbased web sites. It uses the idea of adding an extra header, called\nX-Ids-Involved, which contains the uuids of the objects involved in the\nconstruction of the resources. For example, an image contains just its\nuuid::\n\n    % wget -S http://localhost:8080/Plone/image01\n    ...\n      X-Ids-Involved: #c8d7c0bc2b794325b916d990de91d7ee#\n\nOther pages may be more complicated. Then a new purge rewrite rule adds\na custom URL to the set of URLs to purge: the \"purge by id\" custom URL\nis in the form /@@purgebyid/<UUID> where UUID is the object's uuid to be\npurged.\n\nLast, Varnish is configured so that, when an URL /@@purgebyid/<UUID> is\npurged, it will ban all the objects that match an X-Ids-Involved header\nof the right type (i.e. containing the uuid of the resource to purge).\nThis means that when a resources is purged, it is enough to purge also\nit /@@purgebyid/<UUID> URL because it will be Varnish responsibily to\nalso catch all of the occurrencies of the resources whenever the URL\nwhich is used to access it.\n\nVarnish without xkey varnish module\n-----------------------------------\n\nWithout the xkey module, the way to purge a resource is to ban all objects\nwhich have the X-Ids-Involved header with the id of the resource to be purged.\n\nFor a better understanding of the differences between the two approaches (ban vs. purge), please read:\nhttps://varnish-cache.org/docs/trunk/users-guide/purging.html\n\nConfig example::\n\n    sub vcl_recv {\n      if (req.method == \"PURGE\") {\n         if (!client.ip ~ purge) {\n            return (synth(405, \"This IP is not allowed to send PURGE requests.\"));\n         }\n         if (req.url ~ \"^/@@purgebyid/\") {\n            ban(\"obj.http.x-ids-involved ~ #\" + regsub(req.url, \"^/@@purgebyid/\", \"\") + \"#\");\n            return(synth(200, \"Ban added\"));\n        }\n        return(purge);\n      }\n    }\n\n    sub vcl_deliver {\n        unset resp.http.x-ids-involved;\n    }\n\n\nVarnish with xkey varnish module\n--------------------------------\n\nBy default, Varnish uses the URL as the hash key for purging, but with\nthe xkey module (https://github.com/varnish/varnish-modules/blob/master/src/vmod_xkey.vcc)\nthere comes a secondary hash for doing so. Cached objects\nbeing tagged can be specifically purged for a more targeted cache control.\n\nTo have xkey working, it is mandatory to provide a special HTTP header called\n\"Xkey\" which contains all the tags (separated by white-space). Few additional codes in\nthe `vcl_backend_response` transforms the X-Ids-Involved header into an XKey.\n\nConfig example::\n\n    import xkey;\n\n    sub vcl_recv {\n        if (req.method == \"PURGE\") {\n            if (!client.ip ~ purge) {\n                return (synth(405, \"This IP is not allowed to send PURGE requests.\"));\n            }\n            if (req.url ~ \"^/@@purgebyid/\") {\n                set req.http.n-gone = xkey.purge(regsub(req.url, \"^/@@purgebyid/\", \"\"));\n                # or: set req.http.n-gone = xkey.softpurge(regsub(req.url, \"^/@@purgebyid/\", \"\"));\n                return (synth(200, \"Invalidated \"+req.http.n-gone+\" objects\"));\n            }\n        }\n        return(purge);\n    }\n\n    sub vcl_backend_response {\n        if (beresp.http.x-ids-involved) {\n            set beresp.http.xkey = regsuball(beresp.http.x-ids-involved, \"#\", \" \");\n        }\n    }\n\n    sub vcl_deliver {\n        unset resp.http.x-ids-involved;\n        unset resp.http.xkey;\n    }\n\n\nA softpurge differs from a regular purge in that it resets an\nobject's TTL but keeps it available for grace mode and conditional\nrequests for the remainder of its configured grace and keep time.\n\nHow does it work? How to extend it?\n-----------------------------------\n\nDuring the publishing process all involved IDs (UUIDs and custom IDs) are collected\n(by subscribing to IPubAfterTraversal).\n\nImportant are the adapters for IInvolvedID, which are responsible for collecting IDs for their given context.\nThe base implementation looks for the UUIDs, but may be specialized for your custom content types.\n\nApart from the adapter approach, there is the inline approach. You may call the following methods\nfrom collective.purgebyid.api:\n\n* mark_involved_objects(request, objs, stoponfirst=False)\n* mark_involved(request, single_id)\n\nWhereas the first method uses internally the adapters for IInvolvedIDs for the given objects,\nthe second one allows setting any arbitrary IDs.\nThese methods combined might be used in your views, whenever a certain object or part is being rendered.\n\nAdditionally, there is a utility browser view \"purgebyid\", that can be used in your template as follows:\n\n.. code-block:: xml\n\n    <body tal:define=\"purgeutils nocall:context/@@purgebyid\">\n    ...\n        <tal:image tal:define=\"image python:context.get_image()\" tal:condition=\"python: image\">\n\n            <tal:mark-involved tal:define=\"dummy python:purgeutils.mark(image)\" />\n            <!-- put image rendering here -->\n            ...\n\n        </tal:image>\n    ...\n    </body>\n\nAlternatively, you can again set arbitrary IDs:\n\n.. code-block:: xml\n\n    <tal:mark-involved tal:define=\"dummy python:purgeutils.mark('my_custom_id')\" />\n\nAfter having collected all IDs a ITransform adapter puts the expected `X-Ids-Involved` header in\nthe HTTP response header.\n\nWhen Plone sends a purge request to the configured Cache Proxy, it sends additionally a specialized\nrequest for handling objects with tags.\n\n\nReferences\n----------\n\n* Blog post https://www.biodec.com/it/blog/migliorare-la-gestione-del-purge-caching-in-plone-collective-purgebyid (italian language)\n\nContributors\n============\n\nMauro Amico, Author\n\nChangelog\n=========\n\n1.2.1 (2022-12-08)\n------------------\n\n- plone 6.0 / python 3.10 support\n  [mamico]\n\n- avoid marking requests with the UUID of the plonesite\n  [mamico]\n\n1.2.0 (2022-08-04)\n------------------\n\n- collective.xkey backports. Add utility browser view.\n  [pgrunewald, mamico]\n\n- fix p.a.multilingual IUUID adapter inconsistency\n  [mamico]\n\n1.1.2 (2021-11-22)\n------------------\n\n- Remove unused importDependencies (for pip install compatibility).\n  [cekk]\n\n1.1.1 (2019-06-05)\n------------------\n\n- Python 3 support \n  [mamico]\n\n\n1.1.0 (2018-05-14)\n------------------\n\n- moved headers mutator from PubSuccess event to plone.transformchain.\n  fix missing header using p.a.caching's ramcache operations #2\n  [mamico]\n- added IIDinvolved adapter for easy implements \"involved id\" extractors\n  [mamico]\n- manage resourcedirectory, because previously all resources were marked as \"involved\" by\n  navigation root\n  [mamico]\n- fix issue where IUUID-adaptation did not have default value\n  [datakurre]\n\n\n1.0.0 (2016-01-14)\n------------------\n\n- use zope.annotation on request\n  [mamico]\n- unused generic setup profile removed\n  [mamico]\n\n1.0.0a1 (2013-09-11)\n--------------------\n\n- Package created using templer\n  [Mauro Amico]\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/collective/collective.purgebyid",
    "keywords": "plone caching",
    "license": "gpl",
    "maintainer": "",
    "maintainer_email": "",
    "name": "collective.purgebyid",
    "package_url": "https://pypi.org/project/collective.purgebyid/",
    "platform": null,
    "project_url": "https://pypi.org/project/collective.purgebyid/",
    "project_urls": {
      "Homepage": "https://github.com/collective/collective.purgebyid"
    },
    "release_url": "https://pypi.org/project/collective.purgebyid/1.2.1/",
    "requires_dist": [
      "setuptools",
      "plone.uuid",
      "plone.app.testing ; extra == 'test'",
      "plone.api ; extra == 'test'",
      "plone.app.contenttypes ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "p.a.caching add-on for a better purging policy",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16028437,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98687260a3e780fdc569080b4117059ae2af23b03453f5fc477f3a23d4d83731",
          "md5": "fd13721f52e74a2f1035dd097418be2e",
          "sha256": "3bfd63b702b78efedb26c401abef50ce5015e84153de3e62c1fb67fc1e9c65d2"
        },
        "downloads": -1,
        "filename": "collective.purgebyid-1.0.0.zip",
        "has_sig": false,
        "md5_digest": "fd13721f52e74a2f1035dd097418be2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19575,
        "upload_time": "2016-01-14T15:18:58",
        "upload_time_iso_8601": "2016-01-14T15:18:58.877098Z",
        "url": "https://files.pythonhosted.org/packages/98/68/7260a3e780fdc569080b4117059ae2af23b03453f5fc477f3a23d4d83731/collective.purgebyid-1.0.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54eb57ed51b1167f7f416009f4c8b41cb1ac49eb9253a10fe7d08306f187e87f",
          "md5": "4bc06d6a2bab71c30f8800f1446ba4aa",
          "sha256": "99de16520de7d111985878acf2838f2f036aa3de816d27475f4bd02f8377d228"
        },
        "downloads": -1,
        "filename": "collective.purgebyid-1.0.0a1.zip",
        "has_sig": false,
        "md5_digest": "4bc06d6a2bab71c30f8800f1446ba4aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20967,
        "upload_time": "2013-09-11T18:33:04",
        "upload_time_iso_8601": "2013-09-11T18:33:04.886876Z",
        "url": "https://files.pythonhosted.org/packages/54/eb/57ed51b1167f7f416009f4c8b41cb1ac49eb9253a10fe7d08306f187e87f/collective.purgebyid-1.0.0a1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92ef24cd7940dde8c643f4fe1ff9966387e4c8afdf659824ca6d676fdb3c28bf",
          "md5": "ed78b6d4be2c6ef25006aa13d1da5c9b",
          "sha256": "29f0cbaf773cbf7b154c234e58decc2b7ef0fc402fedd5364d7679a3b8c7c503"
        },
        "downloads": -1,
        "filename": "collective.purgebyid-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ed78b6d4be2c6ef25006aa13d1da5c9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13097,
        "upload_time": "2018-05-13T23:46:41",
        "upload_time_iso_8601": "2018-05-13T23:46:41.090495Z",
        "url": "https://files.pythonhosted.org/packages/92/ef/24cd7940dde8c643f4fe1ff9966387e4c8afdf659824ca6d676fdb3c28bf/collective.purgebyid-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09d6e795900e92d9ff7635c18f1062a4ef50bf29073669bab285c56827626e7c",
          "md5": "6f22976a757696cada9b496c9cf0ca6d",
          "sha256": "3c159f2ca266ec95d5546a8d5289cca007b87e6751aaf64112e8f9925db3fd32"
        },
        "downloads": -1,
        "filename": "collective.purgebyid-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6f22976a757696cada9b496c9cf0ca6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15581,
        "upload_time": "2019-06-05T01:14:16",
        "upload_time_iso_8601": "2019-06-05T01:14:16.907448Z",
        "url": "https://files.pythonhosted.org/packages/09/d6/e795900e92d9ff7635c18f1062a4ef50bf29073669bab285c56827626e7c/collective.purgebyid-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76026860654e8a3d7ab70b685ef7ed654b064f84be23317808620f5807e46a03",
          "md5": "a3a9d68eba8efa5e443dd69ba1de8a3b",
          "sha256": "c9e35a37e6253253ed7fdeb35544fdf2f866ec9ead5b498a251300d985903235"
        },
        "downloads": -1,
        "filename": "collective.purgebyid-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a3a9d68eba8efa5e443dd69ba1de8a3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16951,
        "upload_time": "2021-11-22T10:47:12",
        "upload_time_iso_8601": "2021-11-22T10:47:12.220288Z",
        "url": "https://files.pythonhosted.org/packages/76/02/6860654e8a3d7ab70b685ef7ed654b064f84be23317808620f5807e46a03/collective.purgebyid-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "904e23a8d525b53a049348bba27cb3ee9eed8ebf863848d3df4630d93be55a24",
          "md5": "fee71c8094b1ac3611e3177ed5117707",
          "sha256": "68f907ee3d9be77373fc93ac7e0a56530c038e815c2fb325c53031e007668f2e"
        },
        "downloads": -1,
        "filename": "collective.purgebyid-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fee71c8094b1ac3611e3177ed5117707",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13738,
        "upload_time": "2022-08-04T20:25:31",
        "upload_time_iso_8601": "2022-08-04T20:25:31.967867Z",
        "url": "https://files.pythonhosted.org/packages/90/4e/23a8d525b53a049348bba27cb3ee9eed8ebf863848d3df4630d93be55a24/collective.purgebyid-1.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db035026f578b0f618814b27bf1be1d78b70e554c40316dbcba6c8e1ed823490",
          "md5": "2abf34a7cb29ddd06e3b64df05937d0f",
          "sha256": "26628e84e661cd1a3f5ffb66a66c9c981681348d1f9c748310f29ef62b9007e7"
        },
        "downloads": -1,
        "filename": "collective.purgebyid-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2abf34a7cb29ddd06e3b64df05937d0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21731,
        "upload_time": "2022-08-04T20:25:34",
        "upload_time_iso_8601": "2022-08-04T20:25:34.291243Z",
        "url": "https://files.pythonhosted.org/packages/db/03/5026f578b0f618814b27bf1be1d78b70e554c40316dbcba6c8e1ed823490/collective.purgebyid-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "684e38e842c6c37bcea652fcdeab4cd34cb0cd1720a167ce7bb5996bc63870b2",
          "md5": "42e283438a0810dcf24b50e8f077d2d1",
          "sha256": "2b8f4ed089046a41c1f2174dbd5f7554b35bad9dbc88f65e4383c44a719e5d49"
        },
        "downloads": -1,
        "filename": "collective.purgebyid-1.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42e283438a0810dcf24b50e8f077d2d1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21530,
        "upload_time": "2022-12-08T01:21:12",
        "upload_time_iso_8601": "2022-12-08T01:21:12.670322Z",
        "url": "https://files.pythonhosted.org/packages/68/4e/38e842c6c37bcea652fcdeab4cd34cb0cd1720a167ce7bb5996bc63870b2/collective.purgebyid-1.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c18c5f0851b7b397c936517f1fddfe4fd135bde21958bd51311123c6b695fbd0",
          "md5": "e4b90c6fdf2da20dc3013d05cab7b1d5",
          "sha256": "805906fafd14a2e77ea6c27d19f5e5e42387dcea9b5d7fa6a0567e0c104b98f4"
        },
        "downloads": -1,
        "filename": "collective.purgebyid-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e4b90c6fdf2da20dc3013d05cab7b1d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24961,
        "upload_time": "2022-12-08T01:21:14",
        "upload_time_iso_8601": "2022-12-08T01:21:14.237152Z",
        "url": "https://files.pythonhosted.org/packages/c1/8c/5f0851b7b397c936517f1fddfe4fd135bde21958bd51311123c6b695fbd0/collective.purgebyid-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "684e38e842c6c37bcea652fcdeab4cd34cb0cd1720a167ce7bb5996bc63870b2",
        "md5": "42e283438a0810dcf24b50e8f077d2d1",
        "sha256": "2b8f4ed089046a41c1f2174dbd5f7554b35bad9dbc88f65e4383c44a719e5d49"
      },
      "downloads": -1,
      "filename": "collective.purgebyid-1.2.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "42e283438a0810dcf24b50e8f077d2d1",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 21530,
      "upload_time": "2022-12-08T01:21:12",
      "upload_time_iso_8601": "2022-12-08T01:21:12.670322Z",
      "url": "https://files.pythonhosted.org/packages/68/4e/38e842c6c37bcea652fcdeab4cd34cb0cd1720a167ce7bb5996bc63870b2/collective.purgebyid-1.2.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c18c5f0851b7b397c936517f1fddfe4fd135bde21958bd51311123c6b695fbd0",
        "md5": "e4b90c6fdf2da20dc3013d05cab7b1d5",
        "sha256": "805906fafd14a2e77ea6c27d19f5e5e42387dcea9b5d7fa6a0567e0c104b98f4"
      },
      "downloads": -1,
      "filename": "collective.purgebyid-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e4b90c6fdf2da20dc3013d05cab7b1d5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24961,
      "upload_time": "2022-12-08T01:21:14",
      "upload_time_iso_8601": "2022-12-08T01:21:14.237152Z",
      "url": "https://files.pythonhosted.org/packages/c1/8c/5f0851b7b397c936517f1fddfe4fd135bde21958bd51311123c6b695fbd0/collective.purgebyid-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}