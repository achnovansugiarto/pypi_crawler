{
  "info": {
    "author": "Thomas Spielauer",
    "author_email": "pypipackages01@tspi.at",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SDG1032X Python library\n\nThis (unofficial) library allows one to control __some__ functions of the\nSDG1032X arbitrary waveform generator using Python in a simple way via\nEthernet.\n\nExposed functionality:\n\n| Functionality        | Function                                                           | Implemented | Tested | Comments                                      |\n| -------------------- | ------------------------------------------------------------------ | ----------- | ------ | --------------------------------------------- |\n| Identify             | ```identify()```                                                   | y           | y      | Queries the output of IDN, raw binary output  |\n| Factory defaults     | ```factoryDefaults()```                                            | y           |        | Resets all device state to factory defaults   |\n| Enable output        | ```outputEnable(channel=1, polarity=POLARITY_NORMAL, load=\"HZ\")``` | y           | y      | Enabled the output of the function generator  |\n| Disable output       | ```outputDisable(channel=1)```                                     | y           | y      | Disables the output of the function generator |\n| Set duty cycle       | ```setDutyCycle(dutycycle, channel=1)```                           | y           | y      | Sets duty cycle                               |\n| Enabling burst mode  | ```setBurstModeEnable(channel=1)```                                | y           | y      |                                               |\n| Disabling burst mode | ```setBurstModeDisable(channel=1)```                               | y           | y      |                                               |\n| Setting burst period | ```setBurstPeriod(period, channel=1)```                            | y           | y      | Burst period                                  |\n| Setting burst delay  | ```setBurstDelay(delay, channel=1)```                              | y           | y      |                                               |\n| Setting burst tigger | ```setBurstTriggerSource(triggerSource, channel=1)```              | y           | y      | Sets internal, external or manual trigger     |\n| Setting burst mode   | ```setBurstMode(burstMode, channel=1)```                           | y           | y      |                                               |\n| Triggering burst     | ```triggerBurst(channel=1)```                                      | y           |        |                                               |\n| Set waveform         | ```setWaveType(waveform, channel=1)```                             | y           | y      | Sets the waveform of the signal               |\n| Set frequency        | ```setWaveFrequency(frequency, channel=1)```                       | y           | y      | Sets the waves frequency                      |\n| Set period           | ```setWavePeriod(period, channel=1)```                             | y           | y      | Sets the waves period                         |\n| Set wave amplitude   | ```setWaveAmplitude(vpp, channel=1)```                             | y           |        | Sets the amplitude of the wave in Vpp         |\n| Set wave offset      | ```setWaveOffset(offsetV, channel=1)```                            | y           |        | Sets the offset of the wave in V              |\n\n## Usage example\n\n```\nwith SDG1032X(\"10.0.0.14\") as sdg:\n    print(\"Identify returns: {}\".format(sdg.identify()))\n\n    sdg.setWaveType(sdg.WAVEFORM_SINE)\n\n    for f in range(100, 1100, 100):\n        sdg.setWavePeriod(f)\n```\n\n## Installation\n\nThere are two ways of simply installing the library. One can install\nif via ```pip``` from PyPi:\n\n```\npip install pysdg1032x-tspspi\n```\n\nOr one can install it from the downloaded ZIP file from the [Releases section](https://github.com/tspspi/pysdg1032x/releases)\nby using pip (substituting ```X.Y.Z``` by the desired version number):\n\n```\npip install pysdg1032x-tspspi-X.Y.Z.tar.gz\n```\n\n## The CLI utility\n\nThere is a simple CLI utility that allows one to control the function generator\nfrom the commandline or via scripts. This tool is called ```sdg1032x```:\n\n```\nSDG1032X signal generator remote control utility\n\nNote: This tool is an inofficial tool and in no way associated\nwith Siglent\n\nUsage:\n\tsdg1032x [settings] <commands>\n\nSettings:\n\t--host ADDRESS\t\tSets the remote hostname or IP\n\nCommands:\n\tid\t\t\tAsks the SDG for it's identity\n\tdefaults\t\tResets the SDG to it's factory defaults\n\nSimple channel commands:\n\ton N\t\t\tEnabled the channel N\n\toff N\t\t\tDisabled the channel N\n\nWaveform commands:\n\twavetype N WTYPE\tSets the selected wave type. Valid options are:\n\t\t\t\tsine\tSinusoidal waveform\n\t\t\t\tsquare\tSquare wave\n\t\t\t\tramp\tRamping\n\t\t\t\tpulse\tPulsing\n\t\t\t\tnoise\tNoise generator\n\t\t\t\tarbitrary\tArbitrary waveform from WAV\n\t\t\t\tdc\tDiscrete current\n\t\t\t\tprbs\tPseudo random binary sequence\n\tfrq N FREQ\t\tSet frequency of channel N to FREQ Hz\n\tperiod N PERIOD\t\tSet period of channel N to PERIOD seconds\n\tamp N AMP\t\tSet amplitude of wave for channel N to AMP Vpp\n\toffset N OFF\t\tSet offset of channel N to OFF V\n\nBurst mode commands (per channel):\n\tduty N CYCLE\t\tSets the burst duty cycle for channel N to CYCLE percent\n\tburston N\t\tEnables burst mode for channel N\n\tburstoff N\t\tDisables burst mode for channel N\n\tburstperiod N PERIOD\tSets the burst period for channel N to PERIOD seconds\n\tburstdelay N DELAY\tSets the burst delay for channel N to DELAY seconds\n\tbursttrigsource N SRC\tSets the given trigger source. Valid options are:\n\t\t\t\tint\tinternal trigger source\n\t\t\t\text\texternal trigger source\n\t\t\t\tman\tmanual trigger source\n\tburstmode N MODE\tSets the burst mode. Valid modes are:\n\t\t\t\tgate\tGated burst mode\n\t\t\t\tncyc\tNumber of cycles burst mode\n\tburst N\t\t\tTrigger burst on channel N\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tspspi/pysdg1032x",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sdg1032x-tspspi",
    "package_url": "https://pypi.org/project/sdg1032x-tspspi/",
    "platform": null,
    "project_url": "https://pypi.org/project/sdg1032x-tspspi/",
    "project_urls": {
      "Homepage": "https://github.com/tspspi/pysdg1032x"
    },
    "release_url": "https://pypi.org/project/sdg1032x-tspspi/0.0.1a1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Unofficial library to control SDG1032X arbitrary waveform generators",
    "version": "0.0.1a1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13591287,
  "releases": {
    "0.0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bccf32c1a3020ca6b8a95da2b827f7caabf1751f5b4400dd0273959ed7d767eb",
          "md5": "b34490c3ea62d5e3f745dd413658ac03",
          "sha256": "6712061fce79a70655a8d3432027bac39e4480dbc3ded242ac28b43a4ccefe24"
        },
        "downloads": -1,
        "filename": "sdg1032x_tspspi-0.0.1a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b34490c3ea62d5e3f745dd413658ac03",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9185,
        "upload_time": "2022-04-22T13:21:45",
        "upload_time_iso_8601": "2022-04-22T13:21:45.821168Z",
        "url": "https://files.pythonhosted.org/packages/bc/cf/32c1a3020ca6b8a95da2b827f7caabf1751f5b4400dd0273959ed7d767eb/sdg1032x_tspspi-0.0.1a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23c1a1e54e00cfe2b15b4fbec57b5985c1b218c9d9cfe31460a650335f1fb3c3",
          "md5": "55bf4ce835cffcab20cca42c905f2c0a",
          "sha256": "648126134b461afe27d8aafcea654d33f54dd17ba232339bf8ae3d088102b378"
        },
        "downloads": -1,
        "filename": "sdg1032x-tspspi-0.0.1a1.tar.gz",
        "has_sig": false,
        "md5_digest": "55bf4ce835cffcab20cca42c905f2c0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9328,
        "upload_time": "2022-04-22T13:21:47",
        "upload_time_iso_8601": "2022-04-22T13:21:47.771415Z",
        "url": "https://files.pythonhosted.org/packages/23/c1/a1e54e00cfe2b15b4fbec57b5985c1b218c9d9cfe31460a650335f1fb3c3/sdg1032x-tspspi-0.0.1a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bccf32c1a3020ca6b8a95da2b827f7caabf1751f5b4400dd0273959ed7d767eb",
        "md5": "b34490c3ea62d5e3f745dd413658ac03",
        "sha256": "6712061fce79a70655a8d3432027bac39e4480dbc3ded242ac28b43a4ccefe24"
      },
      "downloads": -1,
      "filename": "sdg1032x_tspspi-0.0.1a1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b34490c3ea62d5e3f745dd413658ac03",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9185,
      "upload_time": "2022-04-22T13:21:45",
      "upload_time_iso_8601": "2022-04-22T13:21:45.821168Z",
      "url": "https://files.pythonhosted.org/packages/bc/cf/32c1a3020ca6b8a95da2b827f7caabf1751f5b4400dd0273959ed7d767eb/sdg1032x_tspspi-0.0.1a1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23c1a1e54e00cfe2b15b4fbec57b5985c1b218c9d9cfe31460a650335f1fb3c3",
        "md5": "55bf4ce835cffcab20cca42c905f2c0a",
        "sha256": "648126134b461afe27d8aafcea654d33f54dd17ba232339bf8ae3d088102b378"
      },
      "downloads": -1,
      "filename": "sdg1032x-tspspi-0.0.1a1.tar.gz",
      "has_sig": false,
      "md5_digest": "55bf4ce835cffcab20cca42c905f2c0a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9328,
      "upload_time": "2022-04-22T13:21:47",
      "upload_time_iso_8601": "2022-04-22T13:21:47.771415Z",
      "url": "https://files.pythonhosted.org/packages/23/c1/a1e54e00cfe2b15b4fbec57b5985c1b218c9d9cfe31460a650335f1fb3c3/sdg1032x-tspspi-0.0.1a1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}