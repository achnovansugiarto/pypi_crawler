{
  "info": {
    "author": "Michael Davidsaver",
    "author_email": "mdavidsaver@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "C Code Spell Correction\n=======================\n\nContext aware spelling check of comments and string literals in C/C++ source code files.\nOperation is non-interactive to facilitate operations on an existing large code base.\n\n1. First pass to collect terms from source code and propose corrections to comments.\n\n```sh\n$ ./cspell --out-dict code.dic --out-corrections fix.json code.c ...\n```\n\n2. Edit candiate corrections in fix.json.\n\n3. Apply corrections\n\n```sh\n$ ./cspell --add-dict code.dic --corrections fix.json --modify code.c ...\n```\n\nThe argument `-f`/`--inputs` reads a list of source files from a file.\n\nOperation\n---------\n\n`cspell` separates string literals and C/C++ comments from code.\nTokens/terms found in code are automatically excluding from spell check.\n\nSo in the following, `myfunc()`, `thearg`, and `retval` will not\nbe flagged as spelling errors.\n\n```c\n/** Copyright 2021 Michael Davidsaver\n*  Who can't spelll rite\n*/\n#include <stdio.h>\n/** @brief special\n * @param thearg is the argument\n */\nvoid myfunc(int thearg) {\n    // myfunc() is a functon on thearg and retval\n    int retval = thearg;\n    if(thearg==42)\n        printf(\"thearg is amagic value\\n\");\n    /* another commment */\n    return retval;\n}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mdavidsaver/cspell",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cspell",
    "package_url": "https://pypi.org/project/cspell/",
    "platform": "",
    "project_url": "https://pypi.org/project/cspell/",
    "project_urls": {
      "Homepage": "https://github.com/mdavidsaver/cspell"
    },
    "release_url": "https://pypi.org/project/cspell/0.0.1a1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Context aware spelling check for C/C++ source code files.",
    "version": "0.0.1a1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11175119,
  "releases": {
    "0.0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d2d3ab66db6acaddbe275e67892660fbc52e89d2cff1308deea01dde3471a17",
          "md5": "68ef3f490a0d7c10440cbe39691ae235",
          "sha256": "8ac6ea3b878e1261ddcd34dd04066f4ff0a23503996aabcecb8ecfb69c4c691e"
        },
        "downloads": -1,
        "filename": "cspell-0.0.1a1.tar.gz",
        "has_sig": false,
        "md5_digest": "68ef3f490a0d7c10440cbe39691ae235",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6281,
        "upload_time": "2021-08-13T21:09:10",
        "upload_time_iso_8601": "2021-08-13T21:09:10.931652Z",
        "url": "https://files.pythonhosted.org/packages/5d/2d/3ab66db6acaddbe275e67892660fbc52e89d2cff1308deea01dde3471a17/cspell-0.0.1a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5d2d3ab66db6acaddbe275e67892660fbc52e89d2cff1308deea01dde3471a17",
        "md5": "68ef3f490a0d7c10440cbe39691ae235",
        "sha256": "8ac6ea3b878e1261ddcd34dd04066f4ff0a23503996aabcecb8ecfb69c4c691e"
      },
      "downloads": -1,
      "filename": "cspell-0.0.1a1.tar.gz",
      "has_sig": false,
      "md5_digest": "68ef3f490a0d7c10440cbe39691ae235",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6281,
      "upload_time": "2021-08-13T21:09:10",
      "upload_time_iso_8601": "2021-08-13T21:09:10.931652Z",
      "url": "https://files.pythonhosted.org/packages/5d/2d/3ab66db6acaddbe275e67892660fbc52e89d2cff1308deea01dde3471a17/cspell-0.0.1a1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}