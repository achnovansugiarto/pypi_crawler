{
  "info": {
    "author": "bzdvdn",
    "author_email": "bzdv.dn@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# wrapper for yandex webmaster api\n\n## Install\n\nInstall using `pip`...\n\n    pip install yandex-webmaster-api\n\n## Usage\n\n=======\n\n```python\nfrom yandex_webmaster import YandexWebmaster\nclient = YandexWebmaster('<access_token>')\n```\n\n### get hosts\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/hosts.html\n\n```python\nhosts = client.get_hosts()\n```\n\n### get popular search queries\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-search-queries-popular.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | date_from | datetime | required |\n  | date_to | datetime | required |\n  | query_indicator | str | required |\n  | order_by | Optional[str] | TOTAL_SHOWS |\n  | device_type_indicator | Optional[str] | None |\n  | limit | int | 500 |\n  | offset | int | 0 |\n\n```python\nfrom datetime import datetime, timedelta\ndate_from = datetime.now() - timedelta(days=4)\ndate_to = datetime.now()\nresult = client.get_popular_search_queries('<host_id>', date_from, date_to, query_indicator='TOTAL_SHOWS')\n```\n\n### get search query all history\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-search-queries-history-all.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | date_from | datetime | required |\n  | date_to | datetime | required |\n  | query_indicator | str | required |\n  | order_by | Optional[str] | TOTAL_SHOWS |\n  | device_type_indicator | Optional[str] | None |\n\n```python\nfrom datetime import datetime, timedelta\ndate_from = datetime.now() - timedelta(days=4)\ndate_to = datetime.now()\nresult = client.get_search_query_all_history('<host_id>', date_from, date_to, query_indicator='TOTAL_SHOWS', device_type_indicator='DESKTOP')\n```\n\n### get single search query history\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-search-queries-history.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | query_id | str | required |\n  | date_from | datetime | required |\n  | date_to | datetime | required |\n  | query_indicator | str | required |\n  | device_type_indicator | Optional[str] | None |\n\n```python\nfrom datetime import datetime, timedelta\ndate_from = datetime.now() - timedelta(days=4)\ndate_to = datetime.now()\nresult = client.get_single_search_query_history('<host_id>', '<query_id>', date_from, date_to, query_indicator='TOTAL_SHOWS', device_type_indicator='DESKTOP')\n```\n\n### get host info\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/hosts-id.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n\n```python\nresult = client.get_host('<host_id>')\n```\n\n### get sqi history\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/sqi-history.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | date_from | datetime | required |\n  | date_to | datetime | required |\n\n```python\nfrom datetime import datetime, timedelta\ndate_from = datetime.now() - timedelta(days=4)\ndate_to = datetime.now()\nresult = client.get_sqi_history('<host_id>', '<query_id>', date_from, date_to)\n```\n\n### add host\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/hosts-add-site.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_url | str | required |\n\n```python\nresult = client.add_host(host_url='<host_url>')\n```\n\n### delete host\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/hosts-delete.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n\n```python\nresult = client.delete_host(host_id='<host_id>')\n```\n\n### get sitemaps\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-sitemaps-get.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n\n```python\nresult = client.get_sitemaps(host_id='<host_id>')\n```\n\n### get_sitemap\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-sitemaps-get.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | sitemap_id | str | required |\n\n```python\nresult = client.get_sitemap(host_id='<host_id>', sitemap_id='<sitemap_id>')\n```\n\n### add sitemap\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-user-added-sitemaps-post.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | host_url | str | required |\n\n```python\nresult = client.add_sitemap(host_id='<host_id>', host_url='<host_url>')\n```\n\n### delete sitemap\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-user-added-sitemaps-post.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | sitemap_id | str | required |\n\n```python\nresult = client.delete_sitemap(host_id='<host_id>', sitemap_id='<sitemap_id>')\n```\n\n### get indexing stats\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-id-summary.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n\n```python\nresult = client.get_indexing_stats(host_id='<host_id>')\n```\n\n### get indexing history\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-id-summary.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | date_from | str | required |\n  | date_to | str | required |\n\n```python\nfrom datetime import datetime, timedelta\ndate_from = datetime.now() - timedelta(days=4)\ndate_to = datetime.now()\nresult = client.get_indexing_history(host_id='<host_id>', date_from=date_from, date_to=date_to)\n```\n\n### get indexing samples\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/hosts-indexing-samples.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | limit | int | 100 |\n  | offest | int | 0 |\n\n```python\nresult = client.get_indexing_samples(host_id='<host_id>')\n```\n\n### get monitoring important urls\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-id-important-urls.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n\n```python\nresult = client.get_monitoring_important_urls(host_id='<host_id>')\n```\n\n### get important url history\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-id-important-urls.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | url | str | required |\n\n```python\nresult = client.get_important_url_history(host_id='<host_id>', url='<url>')\n```\n\n### get insearch url history\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/hosts-indexing-insearch-history.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | date_from | str | required |\n  | date_to | str | required |\n\n```python\nfrom datetime import datetime, timedelta\ndate_from = datetime.now() - timedelta(days=4)\ndate_to = datetime.now()\nresult = client.get_important_url_history(host_id='<host_id>', date_from=date_from, date_to=date_to)\n```\n\n### get insearch url samples\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/hosts-indexing-insearch-history.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | limit | int | 100 |\n  | offest | int | 0 |\n\n```python\nresult = client.get_insearch_url_samples(host_id='<host_id>', limit=limit, offset=offset)\n```\n\n### get insearch url events history\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/hosts-search-events-history.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | date_from | str | required |\n  | date_to | str | required |\n\n```python\nfrom datetime import datetime, timedelta\ndate_from = datetime.now() - timedelta(days=4)\ndate_to = datetime.now()\nresult = client.get_insearch_url_events_history(host_id='<host_id>', date_from=date_from, date_to=date_to)\n```\n\n### get insearch url events samples\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/hosts-search-events-samples.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | limit | int | 100 |\n  | offest | int | 0 |\n\n```python\nresult = client.get_insearch_url_events_samples(host_id='<host_id>', limit=limit, offset=offset)\n```\n\n### recrawl url\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-recrawl-post.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | url | str | required |\n\n```python\nresult = client.recrawl_url(host_id='<host_id>', url='<recrawl_url>')\n```\n\n### get recrawl task\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-recrawl-task-get.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | task_id | str | required |\n\n```python\nresult = client.get_recrawl_task(host_id='<host_id>', task_id='<task_id>')\n```\n\n### get recrawl tasks\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-recrawl-get.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | date_from | datetime | required |\n  | date_to | datetime | required |\n  | limit | int | 100 |\n  | offset | int | 0 |\n\n```python\nfrom datetime import datetime, timedelta\ndate_from = datetime.now() - timedelta(days=4)\ndate_to = datetime.now()\nresult = client.get_recrawl_tasks(\n    host_id='<host_id>',\n    date_from=date_from,\n    date_to=date_to,\n    limit=10,\n    offset=10\n)\n```\n\n### get recrawl quota\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-recrawl-quota-get.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n\n```python\nresult = client.get_recrawl_quota(host_id='<host_id>')\n```\n\n### diagnostic site\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-diagnostics-get.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n\n```python\nresult = client.diagnostic_site(host_id='<host_id>')\n```\n\n### get broken internal links samples\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-diagnostics-get.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | indicator | str | required |\n  | limit | int | 100 |\n  | offset | int | 0 |\n\n```python\nresult = client.get_broken_internal_links_samples(host_id='<host_id>', indicator='SITE_ERROR')\n```\n\n### get broken internal links history\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-links-internal-history.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | date_from | datetime | required |\n  | date_to | datetime | required |\n\n```python\nfrom datetime import datetime, timedelta\ndate_from = datetime.now() - timedelta(days=4)\ndate_to = datetime.now()\nresult = client.get_broken_internal_links_samples(host_id='<host_id>', date_from=date_from, date_to=date_to)\n```\n\n### get external links samples\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-links-external-samples.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n  | limit | int | 100 |\n  | offset | int | 0 |\n\n```python\nresult = client.get_external_links_samples(host_id='<host_id>')\n```\n\n### get external links history\n\n- doc - https://yandex.ru/dev/webmaster/doc/dg/reference/host-links-external-history.html\n- params\n  | name | type | default value |\n  | :--------------------: | :--: | :-----------: |\n  | host_id | str | required |\n\n```python\nresult = client.get_external_links_history(host_id='<host_id>')\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bzdvdn/yandex-webmaster-api",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yandex-webmaster-api",
    "package_url": "https://pypi.org/project/yandex-webmaster-api/",
    "platform": "",
    "project_url": "https://pypi.org/project/yandex-webmaster-api/",
    "project_urls": {
      "Homepage": "https://github.com/bzdvdn/yandex-webmaster-api"
    },
    "release_url": "https://pypi.org/project/yandex-webmaster-api/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "wrapper for yandex webmaster api",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10218843,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59ce7552f5dd08051b229e907c5d2b44fc08476685a24b2e7ce2263143c74d4a",
          "md5": "abfc6f2cbb4e7ae6c29ca539299f3ef8",
          "sha256": "24ddbd9aa4c5adfbf584061e1b2bb88bc4d9378f4aab3937ddaffdce7809e85f"
        },
        "downloads": -1,
        "filename": "yandex-webmaster-api-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "abfc6f2cbb4e7ae6c29ca539299f3ef8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8167,
        "upload_time": "2021-04-30T12:06:13",
        "upload_time_iso_8601": "2021-04-30T12:06:13.152069Z",
        "url": "https://files.pythonhosted.org/packages/59/ce/7552f5dd08051b229e907c5d2b44fc08476685a24b2e7ce2263143c74d4a/yandex-webmaster-api-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "59ce7552f5dd08051b229e907c5d2b44fc08476685a24b2e7ce2263143c74d4a",
        "md5": "abfc6f2cbb4e7ae6c29ca539299f3ef8",
        "sha256": "24ddbd9aa4c5adfbf584061e1b2bb88bc4d9378f4aab3937ddaffdce7809e85f"
      },
      "downloads": -1,
      "filename": "yandex-webmaster-api-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "abfc6f2cbb4e7ae6c29ca539299f3ef8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 8167,
      "upload_time": "2021-04-30T12:06:13",
      "upload_time_iso_8601": "2021-04-30T12:06:13.152069Z",
      "url": "https://files.pythonhosted.org/packages/59/ce/7552f5dd08051b229e907c5d2b44fc08476685a24b2e7ce2263143c74d4a/yandex-webmaster-api-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}