{
  "info": {
    "author": "RIKEN AIP-FUJITSU Collaboration Center (RAFCC)",
    "author_email": "hmkz@s101.xrea.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pytorch-bsf\n[![CodeQL](https://github.com/rafcc/pytorch-bsf/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/rafcc/pytorch-bsf/actions/workflows/codeql-analysis.yml)\n[![PyTest](https://github.com/rafcc/pytorch-bsf/actions/workflows/python-package.yml/badge.svg)](https://github.com/rafcc/pytorch-bsf/actions/workflows/python-package.yml)\n[![PyPI](https://github.com/rafcc/pytorch-bsf/actions/workflows/python-publish.yml/badge.svg)](https://github.com/rafcc/pytorch-bsf/actions/workflows/python-publish.yml)\n[![Conda](https://github.com/rafcc/pytorch-bsf/actions/workflows/python-package-conda.yml/badge.svg)](https://github.com/rafcc/pytorch-bsf/actions/workflows/python-package-conda.yml)\n[![GHPages](https://github.com/rafcc/pytorch-bsf/actions/workflows/sphinx-pages.yml/badge.svg)](https://github.com/rafcc/pytorch-bsf/actions/workflows/sphinx-pages.yml)\n\nPyTorch implementation of Bezier simplex fitting.\n\nThe Bezier simplex is a high-dimensional generalization of the Bezier curve.\nIt enables us to model a complex-shaped point cloud as a parametric hyper-surface in high-dimensional spaces.\nThis package provides an algorithm to fit a Bezier simplex to given data points.\nTo process terabyte-scale data, this package supports distributed training, realtime progress reporting, and checkpointing on top of [PyTorch Lightning](https://www.pytorchlightning.ai/) and [MLflow](https://mlflow.org/).\n\n<img src=\"https://rafcc.github.io/pytorch-bsf/_images/bezier-simplex.png\" width=\"49%\"><img src=\"https://rafcc.github.io/pytorch-bsf/_images/bezier-simplex-fitting.png\" width=\"49%\">\n\nSee the following papers for technical details.\n- Kobayashi, K., Hamada, N., Sannai, A., Tanaka, A., Bannai, K., & Sugiyama, M. (2019). Bézier Simplex Fitting: Describing Pareto Fronts of´ Simplicial Problems with Small Samples in Multi-Objective Optimization. Proceedings of the AAAI Conference on Artificial Intelligence, 33(01), 2304-2313. https://doi.org/10.1609/aaai.v33i01.33012304\n- Tanaka, A., Sannai, A., Kobayashi, K., & Hamada, N. (2020). Asymptotic Risk of Bézier Simplex Fitting. Proceedings of the AAAI Conference on Artificial Intelligence, 34(03), 2416-2424. https://doi.org/10.1609/aaai.v34i03.5622\n\n\n## Requirements\n\nPython >=3.8, <3.11.\n\n\n## Quickstart\n\nDownload the latest [Miniconda](https://docs.conda.io/en/latest/miniconda.html) and install it.\nThen, install MLflow on your conda environment:\n```\nconda install -c conda-forge mlflow\n```\n\nPrepare data:\n```\ncat <<EOS > data.tsv\n1 0\n0.75 0.25\n0.5 0.5\n0.25 0.75\n0 1\nEOS\ncat <<EOS > label.tsv\n0 1\n3 2\n4 5\n7 6\n8 9\nEOS\n```\n\nRun the following command:\n```\nmlflow run https://github.com/rafcc/pytorch-bsf \\\n  -P data=data.tsv \\\n  -P label=label.tsv \\\n  -P degree=3\n```\nwhich automatically sets up the environment and runs an experiment:\n1. Download the latest pytorch-bsf into a temporary directory.\n2. Create a new conda environment and install dependencies in it.\n3. Run an experiment on the temporary directory and environment.\n\n|Parameter|Type|Default|Description|\n|-|-|-|-|\n|data|path|required|The data file. The file should contain a numerical matrix in the TSV format: each row represents a record that consists of features separated by Tabs or spaces.|\n|label|path|required|The label file. The file should contain a numerical matrix in the TSV format: each row represents a record that consists of outcomes separated by Tabs or spaces.|\n|degree|int $(x \\ge 1)$|required|The degree of the Bezier simplex.|\n|header|int $(x \\ge 0)$|`0`|The number of header lines in data/label files.|\n|delimiter|str|`\" \"`|The delimiter of values in data/label files.|\n|normalize|`\"max\"`, `\"std\"`, `\"quantile\"`|`None`|The data normalization: `\"max\"` scales each feature as the minimum is 0 and the maximum is 1, suitable for uniformly distributed data; `\"std\"` does as the mean is 0 and the standard deviation is 1, suitable for nonuniformly distributed data; `\"quantile\"` does as 5%-quantile is 0 and 95%-quantile is 1, suitable for data containing outliers; `None` does not perform any scaling, suitable for pre-normalized data.|\n|split_ratio|float $(0 < x < 1)$|`0.5`|The ratio of training data against validation data.|\n|batch_size|int $(x \\ge 0)$|`0`|The size of minibatch. The default uses all records in a single batch.|\n|max_epochs|int $(x \\ge 1)$|`1000`|The number of epochs to stop training.|\n|accelerator|`\"auto\"`, `\"cpu\"`, `\"gpu\"`, etc.|`\"auto\"`|Accelerator to use. See [PyTorch Lightning documentation](https://pytorch-lightning.readthedocs.io/en/latest/extensions/accelerator.html).|\n|devices|int $(x \\ge -1)$|`None`|The number of accelerators to use. By default, use all available devices. See [PyTorch Lightning documentation](https://pytorch-lightning.readthedocs.io/en/latest/accelerators/gpu_basic.html).|\n|num_nodes|int $(x \\ge 1)$|`1`|The number of compute nodes to use. See [PyTorch Lightning documentation](https://pytorch-lightning.readthedocs.io/en/latest/guides/speed.html).|\n|strategy|`\"dp\"`, `\"ddp\"`, `\"ddp_spawn\"`, etc.|`None`|Distributed strategy. See [PyTorch Lightning documentation](https://pytorch-lightning.readthedocs.io/en/latest/extensions/strategy.html).|\n|loglevel|int $(0 \\le x \\le 2)$|`2`|What objects to be logged. `0`: nothing; `1`: metrics; `2`: metrics and models.|\n\n\n## Installation\n\n```\npip install pytorch-bsf\n```\n\n\n## Fitting via CLI\n\nThis package provides a command line interface to train a Bezier simplex with a dataset file.\n\nExecute the `torch_bsf` module:\n```\npython -m torch_bsf \\\n  --data=data.tsv \\\n  --label=label.tsv \\\n  --degree=3\n```\n\n\n## Fitting via Script\n\nTrain a model by `fit()`, and call the model to predict.\n```python\nimport torch\nimport torch_bsf\n\n# Prepare training data\nts = torch.tensor(  # parameters on a simplex\n    [\n        [3/3, 0/3, 0/3],\n        [2/3, 1/3, 0/3],\n        [2/3, 0/3, 1/3],\n        [1/3, 2/3, 0/3],\n        [1/3, 1/3, 1/3],\n        [1/3, 0/3, 2/3],\n        [0/3, 3/3, 0/3],\n        [0/3, 2/3, 1/3],\n        [0/3, 1/3, 2/3],\n        [0/3, 0/3, 3/3],\n    ]\n)\nxs = 1 - ts * ts  # values corresponding to the parameters\n\n# Train a model\nbs = torch_bsf.fit(params=ts, values=xs, degree=3)\n\n# Predict by the trained model\nt = [[0.2, 0.3, 0.5]]\nx = bs(t)\nprint(f\"{t} -> {x}\")\n```\n\n\n## Documents\n\nSee documents for more details.\nhttps://rafcc.github.io/pytorch-bsf/\n\n\n## Author\n\nRIKEN AIP-FUJITSU Collaboration Center (RAFCC)\n\n\n## License\n\nMIT\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rafcc/pytorch-bsf",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytorch-bsf",
    "package_url": "https://pypi.org/project/pytorch-bsf/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytorch-bsf/",
    "project_urls": {
      "Homepage": "https://github.com/rafcc/pytorch-bsf"
    },
    "release_url": "https://pypi.org/project/pytorch-bsf/0.0.2/",
    "requires_dist": [
      "setuptools (>=21.0.0)",
      "torch",
      "pytorch-lightning",
      "torchvision",
      "protobuf (<=3.19)",
      "mlflow",
      "tox ; extra == 'develop'"
    ],
    "requires_python": ">=3.8",
    "summary": "PyTorch implementation of Bezier simplex fitting",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16246209,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "479f90fc75f531053408c15db7d859898143a632697d238a1b044e3b61d7c91a",
          "md5": "dab6bdb50e2dc71a0eb76af2901ed06a",
          "sha256": "7e23b3e0eb84738e4a5466e0bc7cd95d3c57e50d26738f7b308a3792c0ba7b68"
        },
        "downloads": -1,
        "filename": "pytorch_bsf-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dab6bdb50e2dc71a0eb76af2901ed06a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9565,
        "upload_time": "2022-08-29T09:57:35",
        "upload_time_iso_8601": "2022-08-29T09:57:35.417011Z",
        "url": "https://files.pythonhosted.org/packages/47/9f/90fc75f531053408c15db7d859898143a632697d238a1b044e3b61d7c91a/pytorch_bsf-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a30ef3d4240f883422ee74b67986d65667f7ceb5682b093f9e6583b9ecea6d0",
          "md5": "7abce72ab00d38d9292f525afaf0a67a",
          "sha256": "aae5c033b94c418b4e5ee1b96a8d9a5354f6772f6f9c53af5cb2257738e862aa"
        },
        "downloads": -1,
        "filename": "pytorch-bsf-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7abce72ab00d38d9292f525afaf0a67a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 8629,
        "upload_time": "2022-08-29T09:57:37",
        "upload_time_iso_8601": "2022-08-29T09:57:37.508892Z",
        "url": "https://files.pythonhosted.org/packages/7a/30/ef3d4240f883422ee74b67986d65667f7ceb5682b093f9e6583b9ecea6d0/pytorch-bsf-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "764ac73606035d364fdfadaa895fed203f8eae9d139d9b7b65ae9568f8446608",
          "md5": "3faa9ff14bf148f98c2ba12b73a799a0",
          "sha256": "66fa70b1fd662a39646f30a6b3d011fcaef3c5829b65a812dd090ccbee032385"
        },
        "downloads": -1,
        "filename": "pytorch_bsf-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3faa9ff14bf148f98c2ba12b73a799a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9800,
        "upload_time": "2022-12-29T06:59:17",
        "upload_time_iso_8601": "2022-12-29T06:59:17.267325Z",
        "url": "https://files.pythonhosted.org/packages/76/4a/c73606035d364fdfadaa895fed203f8eae9d139d9b7b65ae9568f8446608/pytorch_bsf-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f93b786b91c2eabd7d506e7dbf1043596970aaffc012a7905e9725cc49df8bb",
          "md5": "b0c91102515539008108d874f7419298",
          "sha256": "52d400d0fec58926da68f26c6029a2b6452eef811267c000d48e21a9ca320f9c"
        },
        "downloads": -1,
        "filename": "pytorch-bsf-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b0c91102515539008108d874f7419298",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 8838,
        "upload_time": "2022-12-29T06:59:18",
        "upload_time_iso_8601": "2022-12-29T06:59:18.558420Z",
        "url": "https://files.pythonhosted.org/packages/2f/93/b786b91c2eabd7d506e7dbf1043596970aaffc012a7905e9725cc49df8bb/pytorch-bsf-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "764ac73606035d364fdfadaa895fed203f8eae9d139d9b7b65ae9568f8446608",
        "md5": "3faa9ff14bf148f98c2ba12b73a799a0",
        "sha256": "66fa70b1fd662a39646f30a6b3d011fcaef3c5829b65a812dd090ccbee032385"
      },
      "downloads": -1,
      "filename": "pytorch_bsf-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3faa9ff14bf148f98c2ba12b73a799a0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 9800,
      "upload_time": "2022-12-29T06:59:17",
      "upload_time_iso_8601": "2022-12-29T06:59:17.267325Z",
      "url": "https://files.pythonhosted.org/packages/76/4a/c73606035d364fdfadaa895fed203f8eae9d139d9b7b65ae9568f8446608/pytorch_bsf-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f93b786b91c2eabd7d506e7dbf1043596970aaffc012a7905e9725cc49df8bb",
        "md5": "b0c91102515539008108d874f7419298",
        "sha256": "52d400d0fec58926da68f26c6029a2b6452eef811267c000d48e21a9ca320f9c"
      },
      "downloads": -1,
      "filename": "pytorch-bsf-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b0c91102515539008108d874f7419298",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 8838,
      "upload_time": "2022-12-29T06:59:18",
      "upload_time_iso_8601": "2022-12-29T06:59:18.558420Z",
      "url": "https://files.pythonhosted.org/packages/2f/93/b786b91c2eabd7d506e7dbf1043596970aaffc012a7905e9725cc49df8bb/pytorch-bsf-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}