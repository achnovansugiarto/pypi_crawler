{
  "info": {
    "author": "The dynod project",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# grpc-helper\n\n<!-- NMK-BADGES-BEGIN -->\n[![License: MPL](https://img.shields.io/github/license/dynod/grpc-helper?color=green)](https://github.com/dynod/grpc-helper/blob/main/LICENSE)\n[![Checks](https://img.shields.io/github/actions/workflow/status/dynod/grpc-helper/build.yml?branch=main&label=build%20%26%20u.t.)](https://github.com/dynod/grpc-helper/actions?query=branch%3Amain)\n[![Issues](https://img.shields.io/github/issues-search/dynod/grpc-helper?label=issues&query=is%3Aopen+is%3Aissue)](https://github.com/dynod/grpc-helper/issues?q=is%3Aopen+is%3Aissue)\n[![Supported python versions](https://img.shields.io/badge/python-3.8%20--%203.11-blue)](https://www.python.org/)\n[![PyPI](https://img.shields.io/pypi/v/grpc-helper)](https://pypi.org/project/grpc-helper/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Flake8 analysis result](https://img.shields.io/badge/flake8-0-green)](https://flake8.pycqa.org/)\n[![Code coverage](https://img.shields.io/codecov/c/github/dynod/grpc-helper)](https://app.codecov.io/gh/dynod/grpc-helper)\n[![Code generated for GRPC framework](https://img.shields.io/badge/code%20generation-proto-blue)](https://protobuf.dev/)\n<!-- NMK-BADGES-END -->\n\nMiscellaneous GRPC helpers (API versioning, retry, config, etc...)\n\n## Python API\n\nProvided classes in this module API help to deal with RPC servers/clients handling.\n\n---\n### RPC Server\n\nThe **`RpcServer`** class handles the lifecycle of a GRPC server. To initialize, it basically needs:\n* a port on which to server RPC requests\n* a list of **`RpcServiceDescriptor`** objects\n* an optional **`Folders`** instance (usually provided by the **`RpcCliParser`** CLI parsing)\n* an optional dict of string:string, providing config items defaults initialized from CLI (usually provided by the **`RpcCliParser`** CLI parsing)\n* an optional list of **`Config`** or **`ConfigHolder`** instances, which will be this server's *static* config items\n* an optional list of **`Config`** or **`ConfigHolder`** instances, which will be this server's *user* config items\n* a boolean flag stating if the events service has to be started in this server instance (default: **`False`**)\n* a boolean flag stating if the debug signal has to be listened (see below; default: **`True`**)\n\nThe **`Folders`** class handle the different folders used by the server:\n* a *system* folder, used to store config shared by multiple users and applications. This folder doesn't need to be writable by the server running user.\n* a *user* folder, used to store config shared by multiple applications for the server running user.\n* a *workspace* folder, used to store config and other persistent information by the current server.\n\nThe **`RpcServiceDescriptor`** class describes a given service to be hooked in a server instance. Its attributes are:\n* a Python module (from which name and version will be used for the RpcServerService items registration)\n* a service name (used for service identification in RpcServerService items, and for auto-client setup)\n* a version enum:\n   * lowest value in the enum will be considered to be the minimum supported version for this service API\n   * highest value in the enum will be considered to be the current version for this service API\n* a manager instance, to which all RPC calls will be delegated. When registering a proxied service, this has to be a simple instance of the generated servicer.\n* the GRPC generated hooking method for this service\n* the GRPC generated client stub class\n* a boolean stating if this service is a proxied service or not\n\n\nThe manager class must:\n* inherit from the GRPC generated servicer class, in order to use the default implementation if any of the service method is not implemented by this manager\n* for each implemented service method:\n   * declare a single input parameter, which will be the input request\n   * declare the return type\n\nA manager class can also inherit from **`RpcManager`** class, which provides some usefull features:\n* a **`_load`** method, called by the server once all services are alive (typically to perform some internal initializations)\n* a **`_shutdown`** method, called by the server once it is shutdown (typically to perform some internal finalization operations + interrupt long-running ones)\n* a **`logger`** instance, to be used for all logging inside this manager and dependencies\n* a **`lock`** instance, to be used to protect manager inner fields against reentrance\n* a **`client`** instance, initialized to the server own auto-client (see below)\n* a **`folders`** instance, initialized to the server **`Folders`** (see above)\n\n#### Lifecycle\n\nThe RPC server will live its life in its own thread. When the application is about to terminate, it is advised to call the **`shutdown`** method\nin order to turn off the RPC server properly. This method can also be called remotely as a **RpcServerService** servive method.\n\nWhen the shutdown method is called:\n* the server will stop accepting new requests\n* it will notify all managers through their own **`_shutdown`** method\n* then it will wait for pending operations to terminate (within the **`rpc-shutdown-grace`** configured timeout)method.\n* if called through RPC, if will wait for the required timeout (using by default the **`rpc-shutdown-timeout`** value), if this one is >0\n* then the shutdown will be finalized (all non-daemon threads terminated)\n\nNote that the code which created the server instance may use the **`wait_shutdown`** method to block until the RPC server is shutdown.\n\n#### Default services\n\nNote that the RPC server instance will automatically serve:\n* the [server handling service](https://github.com/dynod/grpc-helper-api/blob/main/doc/server.md),\nfor basic RPC server operations handling.\n* the [config service](https://github.com/dynod/grpc-helper-api/blob/main/doc/config.md),\nallowing to remotely get/update/reset user configuration items.\n* the [logger service](https://github.com/dynod/grpc-helper-api/blob/main/doc/logger.md),\nallowing to remotely get/update/reset loggers configuration.\n\n#### API version checks\n\nFor requests received from the **`RpcClient`** implementation on a given service, the client api version is checked against the server \"supported - current\" \nrange for this service:\n* if the client version is older than the server supported version, the request will raise a **`ResultCode.ERROR_API_CLIENT_TOO_OLD`** error\n* if the client version is newer than the server current version, the request will raise a **`ResultCode.ERROR_API_SERVER_TOO_OLD`** error\n\n#### Debug\n\nThe RPC server will hook to the USR2 signal for debug purpose (if required). When receiving this signal, following debug information will be dumped in a file\nname **RpcServerDump-YYYYMMDDhhmmss.txt** (with dump timestamp) in the logging folder (see below):\n* all the live threads call stacks\n* all the pending RPC requests\n\n#### Auto-client\n\nAn initialized RPC server instance provides an **`auto_client`** attribute, providing an **`RpcClient`** instance pointing on everything\nserved by this server. Note that the timeout for this client can be configured through the **`rpc-client-timeout`** config item.\n\n#### Proxied services\n\nServices declared as proxied ones (see **`RpcServiceDescriptor`** above) will be forwarded to the required server/port as soon as this server calls the \n**`proxy_register`** method of the proxying server. Note that if this method is not called within the **`rpc-client-timeout`** time, the method call will\nend with an **`ERROR_PROXY_UNREGISTERED`** error.\n\nConfiguration of proxied services is persisted in the workspace, in order to restore them when the proxying server restarts.\n\nAn **`RpcProxiedManager`** abstract class is available for managers who are designed to be proxied. Such managers will automatically register in main proxy\nserver, with following details:\n* registered services names list has to be returned by **`_proxied_services`** method\n* registered services version string has to be returned by **`_proxied_version`** method\n* extra stubs available in the **`self.proxy_client`** attribute can be provided by **`_proxy_stubs`** method\n* if current host IP needs excpilicitely to be used for registration, **`_proxy_use_current_host`** method needs to return **`True`**\n\nWhen handling proxy servers, if the proxying server is started with events service enabled, it will send:\n* an **`RPC_PROXY_REGISTER`** event on each **`proxy_register`** method successful call\n* an **`RPC_PROXY_FORGET`** event on each **`proxy_forget`** method successful call\n\nProperties of the events will be inherited from the method input message.\n\n#### Rolling logs\n\nEach manager of the RPC server through its **`logger`** attribute, will have his logs persisted in a **\\<name\\>/\\<name\\>.log** rolling file (relative to the \nlogging folder). The complete logs will also be persisted in the **root** folder.\nBoth logging folder and rollover cadency can be configured -- see **Configuration** chapter below.\n\n#### Configuration\n\nThe RPC server behavior can be configured through the following static configuration items:\nName | Description | Type | Default\n---- | ----------- | ---- | -------\n**rpc-max-workers**             | Maximum parallel RPC worker threads                                   | Positive integer | **`30`**\n**rpc-shutdown-grace**          | Grace period for pending calls to be terminated on shutdown (seconds) | Positive float   | **`30`**\n**rpc-shutdown-timeout**        | Final timeout before real shutdown (i.e. end of process; seconds)     | Positive float   | **`60`**\n**rpc-logs-folder**             | Folder (absolute or workspace-relative) where to store rolling logs   | String           | **`\"logs\"`**\n**rpc-logs-backup**             | Backup log files to be persisted for each manager on rollover         | Integer          | **`10`**\n**rpc-logs-interval-unit**      | Logs rollover interval unit (see [TimedRotatingFileHandler documentation](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.TimedRotatingFileHandler))      | Custom (see [doc](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.TimedRotatingFileHandler)) | **`H`**\n**rpc-logs-interval**           | Logs rollover interval (see [TimedRotatingFileHandler documentation](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.TimedRotatingFileHandler)) | Positive integer | **`1`**\n**rpc-main-host**               | Main RPC server host (to be used by proxied services)                 | String           | **`\"localhost\"`**\n**rpc-main-port**               | Main RPC server port (to be used by proxied services)                 | Positive integer | **`54321`**\n**rpc-client-timeout**          | Timeout for RPC client when server is unreachable or proxy not registered yet (seconds) | Positive float   | **`60`**\n**rpc-event-retain-timeout**    | Retain timeout for event queues on interruption (seconds)             | Positive integer | **`300`**\n**rpc-event-keepalive-timeout** | Timeout for sending keep alive empty events (seconds)                 | Positive integer | **`60`**\n\n#### Usage example\n\n```python\nimport my_package\nfrom my_package.api import MyStatus, MyConfig, MyApiVersion\nfrom my_package.api.my_pb2_grpc import add_MyServiceServicer_to_server, MyServiceServicer, MyServiceStub\nfrom grpc_helper import RpcServer, RpcServiceDescriptor, RpcManager\n\nclass MySampleManager(MyServiceServicer, RpcManager):\n    # Custom implementation for sample service\n\n    def update(self, request: MyConfig) -> MyStatus:\n        # Note that return message *MUST* be explicitely annoted for each implemented method!\n        return MyStatus()\n\ndef start():\n    # Create an RPC server on port 12345\n    srv = RpcServer(12345, [RpcServiceDescriptor(my_package, \"my\", MyApiVersion, MySampleManager(), add_MyServiceServicer_to_server, MyServiceStub)])\n\n    # Server is running in its own thread; we need to wait it for shutdown (on Ctrl-C or remote shutdown call)\n    srv.wait_shutdown()\n```\n\n---\n### RPC Client\n\nThe **`RpcClient`** class provides an access to client side of a GRPC service. To initialize, it basically needs:\n* a host name or IP address for the RPC server to connect to\n* a port for the RPC server\n* a map of service stubs to access:\n   * keys are used to define fields names on the generated client object, holding the client stubs\n   * values are tuple providing:\n      * the GRPC generated stub name\n      * the client current API version (coming from the version enum)\n\nOptional inputs can also be provided:\n* a timeout if RPC server is unreachable (default: **60s**)\n* a name allowing to identify the client on the server side\n* a boolean flag stating if the client shall raise exceptions when receiving non-OK **`ResultCode`** status (default: **true**)\n* an exception type to be raised (instead of **`RpcException`**) when receiving non-OK **`ResultCode`** status\n\nOnce created, a client instance provide as many stubs as configured in the service map. Each of this stubs expose the generated methods of the \ncorresponding service. These methods take the following arguments:\n* the method input request message (see corresponding proto file)\n* a timeout parameter (in seconds) for this particular request. If set to None (default), there is no timeout\n\n#### Usage example\n\n```python\nfrom my_package.api import MyStatus, MyApiVersion, Empty\nfrom my_package.api.my_pb2_grpc import MyServiceStub\nfrom grpc_helper import RpcClient\n\ndef start():\n    # Get a client access to my service\n    c = RpcClient(\"127.0.0.1\", 12345, {\"my\": (MyServiceStub, MyApiVersion.MY_API_CURRENT)}, name=\"myclient\")\n\n    # Use API\n    s: MyStatus = c.my.list(Empty())\n```\n\n---\n### Configuration items\n\nInstances of the **`Config`** class can be provided to initialize list of static and user configuration items known to a RPC server:\n* *static* items are immutable, and are only initialized once when the RPC server instance is created\n* *user* items can be modified remotely through the [config service](https://github.com/dynod/grpc-helper-api/blob/main/doc/config.md)\n\nThe **`Config`** constructor arguments are the same than the public API **`ConfigItem`** ones (see [config service](https://github.com/dynod/grpc-helper-api/blob/main/doc/config.md)).\nIt also supports an additional **`custom_validator`** one, allowing to provide a validation method when **`validator`** argument is set to **`CONFIG_VALID_CUSTOM`**.\nThis method takes two arguments:\n* a **`name`** string: may be useful to raise meaningful validation errors\n* a **`value`** string: value to be validated. The method shall raise an **`RpcException`** if the value is invalid.\n\n#### Default value\n\nConfiguration items default value are loaded in the following order:\n1. hard-coded value (the one provided in the item constructor)\n2. system folder **config.json** file value (if system folder is configured)\n3. user folder **config.json** file value (if user folder is configured)\n4. environment provided value. Environment variable name for a given item is obtained by capitalizing it and replacing hyphens (\"-\") by underscores (\"_\").\nE.g. the environment variable name for a **my-own-setting** config item will be **MY_OWN_SETTING**.\n5. **-c / --config** command-line option provided value\n\nNote that if the default value fails to be validated with a given item validator (or if it is empty while not allowed), the server will refuse to launch with a\nthrown relevant exception.\n\n#### Current value\n\nStatic items current value will be initialized with the default value. User items are initialized to either the default value, or to the user configured value\n(thanks to the [config service](https://github.com/dynod/grpc-helper-api/blob/main/doc/config.md)) if it was ever modified. User modified values are\npersisted in the workspace folder **config.json** file.\n\nCurrent value may be programmatically accessed through one of the following property accessors:\n* **`item.str_val`**: raw string value\n* **`item.int_val`**: value converted as an integer\n\n#### Config holders\n\nConfiguration items may be defined as attributes of a class inheriting from the **`ConfigHolder`** one. Such classes can be provided directly to **`RpcServer`**\nconstructor to initialize configuration items (which is more convenient that referencing items one by one).\n\n---\n### Command-line options\n\nA ready-to-use CLI parser is provided through the **`RpcCliParser`** class, allowing to rapidly instantiate an RPC server from CLI options.\nConstructor arguments are:\n* a **`description`** string, which will be displayed when using the **-h / --help** option\n* an optional **`version`** string, which will be displayed when using the **-V / --version** option\n\n#### Options\n\nThe options defined by this parser are:\nName | Description\n---- | -----------\n**--help** | displays the program help and exit\n**-V / --version** | displays the program version and exit\n**--system PATH** | overrides the default system folder\n**--user PATH** | overrides the default user folder\n**-w / --workspace PATH** | defines the workspace folder\n**-p / --port PORT** | overrides the RPC server default listening port\n**-c / --config NAME=VALUE** | overrides the default value of a given configuration item\n\nAfter parsing:\n* the system/user/workspace folders are used to initialize a **`Folders`** object (see above), available in the **`folders`** argument of the namespace.\n* the configuration items default values are gathered in a dict, available in the **`config`** argument of the namespace.\n\n#### Usage\n\nThe following methods are available to tune the parser behavior:\n* **`with_rpc_args`**: adds the options listed above, and returns the **`RpcCliParser`** instance (for fluent API usage). Arguments are:\n  * **`default_port`**: default RPC listening port\n  * **`default_sys`**: default system folder\n  * **`default_usr`**: default user folder\n  * **`default_wks`**: default workspace folder\n* **`parse`**: will parse input arguments, and return the namespace. Arguments are program command-line ones by default, or may be provided as a string list\n(e.g. for testing purpose)\n\nFollowing example shows how to use this parser to create an **`RpcServer`** instance:\n```python\nfrom grpc_helper import RpcCliParser, RpcServer\n\ndef start():\n    # Parse arguments to create RPC server instance\n    args = RpcCliParser(\"My custom RPC server\", \"1.0.0\").with_rpc_args(12345, \"/etc/my_srv\", \"~/.local/my_srv\", \"my_srv_wks\").parse()\n    srv = RpcServer(args.port, [], args.folders, args.config)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dynod/grpc-helper",
    "keywords": "",
    "license": "Mozilla Public License Version 2.0",
    "maintainer": "The dynod project",
    "maintainer_email": "",
    "name": "grpc-helper",
    "package_url": "https://pypi.org/project/grpc-helper/",
    "platform": null,
    "project_url": "https://pypi.org/project/grpc-helper/",
    "project_urls": {
      "Homepage": "https://github.com/dynod/grpc-helper"
    },
    "release_url": "https://pypi.org/project/grpc-helper/2.3.1/",
    "requires_dist": [
      "grpcio",
      "protobuf",
      "grpc-helper-api",
      "argcomplete"
    ],
    "requires_python": "",
    "summary": "Helpers supercharging grpc features (API versioning, retry, etc...)",
    "version": "2.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16609638,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f14fca750a7c64b1df42f63412975b1f3cd5c857847e126e93e361212299845",
          "md5": "8b78af841c35a58a3a5fc6492e037e8b",
          "sha256": "18ecf6be361809a3bd77513d8f82d16f142302603da21581498224931c829665"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8b78af841c35a58a3a5fc6492e037e8b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35433,
        "upload_time": "2021-04-27T06:49:10",
        "upload_time_iso_8601": "2021-04-27T06:49:10.344534Z",
        "url": "https://files.pythonhosted.org/packages/0f/14/fca750a7c64b1df42f63412975b1f3cd5c857847e126e93e361212299845/grpc-helper-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0061749b26cd575c9d4dad2e5a3b49b3371ddaf632773b94f55ffd7336a1a4e2",
          "md5": "e3d786f5492f8a04c8fb2c670a8ff2f5",
          "sha256": "3d9e6559e55091c866b19c4ed6323f34264eba734250fefa6c49b50f42ae007d"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e3d786f5492f8a04c8fb2c670a8ff2f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36535,
        "upload_time": "2021-05-05T06:01:11",
        "upload_time_iso_8601": "2021-05-05T06:01:11.488338Z",
        "url": "https://files.pythonhosted.org/packages/00/61/749b26cd575c9d4dad2e5a3b49b3371ddaf632773b94f55ffd7336a1a4e2/grpc-helper-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6bdbf94bc05ce542a0fe8a7795876a164e414dc4c0544ca9ecca9e7e57fdab33",
          "md5": "c999ddbf47dc514ef4eee22175dd3272",
          "sha256": "cd50ed5737f9b78960b73ee8dcd58f02b7cbdc8992dd41a756f69a31dd464446"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c999ddbf47dc514ef4eee22175dd3272",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38312,
        "upload_time": "2021-05-09T15:30:20",
        "upload_time_iso_8601": "2021-05-09T15:30:20.642793Z",
        "url": "https://files.pythonhosted.org/packages/6b/db/f94bc05ce542a0fe8a7795876a164e414dc4c0544ca9ecca9e7e57fdab33/grpc-helper-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56f2e0062767e456676a7d63ce29082f646062d8e46b436560597d7e998181c1",
          "md5": "47d68dfa8500dccc6b7c0fc1d1c744a7",
          "sha256": "3e258887947244b0123ac5ae46998960238b828ecca98e84fe2113f9a94f7320"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "47d68dfa8500dccc6b7c0fc1d1c744a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38981,
        "upload_time": "2021-05-21T09:58:48",
        "upload_time_iso_8601": "2021-05-21T09:58:48.633708Z",
        "url": "https://files.pythonhosted.org/packages/56/f2/e0062767e456676a7d63ce29082f646062d8e46b436560597d7e998181c1/grpc-helper-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63582b064bb96e6220cd535c07705e43e40147f2c0842f4eff867ddd3175f12f",
          "md5": "1ea5e73cb1a83c2162565a55f64e7851",
          "sha256": "5bcd90596f984643fe84816f769336e441fdd5441600c8da9f3c9264030a2fd0"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1ea5e73cb1a83c2162565a55f64e7851",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41492,
        "upload_time": "2021-05-23T15:33:21",
        "upload_time_iso_8601": "2021-05-23T15:33:21.102102Z",
        "url": "https://files.pythonhosted.org/packages/63/58/2b064bb96e6220cd535c07705e43e40147f2c0842f4eff867ddd3175f12f/grpc-helper-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eacf82d60b744c9415904bd8adc0620686768e6cf388a05ded82ed3585d7ff12",
          "md5": "9fd4f8a0ebaf497aea9ec1ef4eddddf1",
          "sha256": "2bb66292777dc9f83a4feba66b7f5364ea3b351e046902b8424db337a1dd5387"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9fd4f8a0ebaf497aea9ec1ef4eddddf1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41752,
        "upload_time": "2021-05-27T14:30:07",
        "upload_time_iso_8601": "2021-05-27T14:30:07.171121Z",
        "url": "https://files.pythonhosted.org/packages/ea/cf/82d60b744c9415904bd8adc0620686768e6cf388a05ded82ed3585d7ff12/grpc-helper-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7019b131b5cad812b60b3a2e1cdb1bc1b1589207f6912bae4c2fc317721205e2",
          "md5": "bef8c91e1aa5a29e481a4fa8190d33f3",
          "sha256": "a9329dc75a9e9d618e222f1c7d1241011049afbcd3b6006e94f3987ffccb6953"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bef8c91e1aa5a29e481a4fa8190d33f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41789,
        "upload_time": "2021-05-28T11:04:19",
        "upload_time_iso_8601": "2021-05-28T11:04:19.285621Z",
        "url": "https://files.pythonhosted.org/packages/70/19/b131b5cad812b60b3a2e1cdb1bc1b1589207f6912bae4c2fc317721205e2/grpc-helper-1.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "215a867b418382b957a04cf03a3aa0c0469fe5b162beef29bb3f5f0c5e685208",
          "md5": "4fc7063f66a7e01c44c3d272e2be61ea",
          "sha256": "2b23a878b5484c4326648d17d48ab996aff56a698d86de044b56efdd95e6a908"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4fc7063f66a7e01c44c3d272e2be61ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41907,
        "upload_time": "2021-06-04T15:41:00",
        "upload_time_iso_8601": "2021-06-04T15:41:00.985793Z",
        "url": "https://files.pythonhosted.org/packages/21/5a/867b418382b957a04cf03a3aa0c0469fe5b162beef29bb3f5f0c5e685208/grpc-helper-1.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b04fb3da98aca03f5631f8e7b830069126466b117a59fd9cb6a3dcedefecd44",
          "md5": "e023a75ed9c0a9e4b7545ac1ab030d29",
          "sha256": "000f47305058324fbf118c4c0072b867ab453c456afa09332bf6492f72a2231e"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e023a75ed9c0a9e4b7545ac1ab030d29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41790,
        "upload_time": "2021-06-10T15:31:39",
        "upload_time_iso_8601": "2021-06-10T15:31:39.153604Z",
        "url": "https://files.pythonhosted.org/packages/5b/04/fb3da98aca03f5631f8e7b830069126466b117a59fd9cb6a3dcedefecd44/grpc-helper-1.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b77ab4e1aa07458696da269c81b041e375406703ad9f683241dcb07f083f6d4c",
          "md5": "8e0ee5bd52df4c4e647bcc7696c312a0",
          "sha256": "12783aaa734e614087c6133e61242402addfe9b8003c359b40cb9f7504669f81"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8e0ee5bd52df4c4e647bcc7696c312a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41818,
        "upload_time": "2021-06-10T15:49:13",
        "upload_time_iso_8601": "2021-06-10T15:49:13.159047Z",
        "url": "https://files.pythonhosted.org/packages/b7/7a/b4e1aa07458696da269c81b041e375406703ad9f683241dcb07f083f6d4c/grpc-helper-1.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cbfb710806e698997e430f64e0e13263f50f981586d309455c8c20f3a772c8a",
          "md5": "1b3270b139f3abcab951284de5faf146",
          "sha256": "ea6441945cec1986beabfab3c423e2f36f70bc90271457aa1ffb9abe4054e2e1"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.5.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1b3270b139f3abcab951284de5faf146",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41967,
        "upload_time": "2021-06-11T15:28:10",
        "upload_time_iso_8601": "2021-06-11T15:28:10.197080Z",
        "url": "https://files.pythonhosted.org/packages/9c/bf/b710806e698997e430f64e0e13263f50f981586d309455c8c20f3a772c8a/grpc-helper-1.5.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdfd471dc0476cb10581df01d0979cd48569eab0897ae2a897eaf565dfce594f",
          "md5": "02936f958641f5888b2d9dd56dba73d0",
          "sha256": "ce7481eb25bddc1f949bbbeba35750c16705d9e017f0b25b03d0fe5babae15ce"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.5.6.tar.gz",
        "has_sig": false,
        "md5_digest": "02936f958641f5888b2d9dd56dba73d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41970,
        "upload_time": "2021-06-14T13:16:28",
        "upload_time_iso_8601": "2021-06-14T13:16:28.562013Z",
        "url": "https://files.pythonhosted.org/packages/cd/fd/471dc0476cb10581df01d0979cd48569eab0897ae2a897eaf565dfce594f/grpc-helper-1.5.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "845eb2eb00095b3fec5ef41c8b47129985e2b540553402fa8835734714847745",
          "md5": "b336ad001d789381936b35f16dcde1a1",
          "sha256": "69014331664cf79acb503544f5dbe946ffaae74ffb3397f295fba678e82e8005"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.5.7.tar.gz",
        "has_sig": false,
        "md5_digest": "b336ad001d789381936b35f16dcde1a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41973,
        "upload_time": "2021-06-25T12:29:05",
        "upload_time_iso_8601": "2021-06-25T12:29:05.387197Z",
        "url": "https://files.pythonhosted.org/packages/84/5e/b2eb00095b3fec5ef41c8b47129985e2b540553402fa8835734714847745/grpc-helper-1.5.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4ce6651489ac5dabdbd20fe74ee1657870ed114c683ae63a5f7e432d831f2f8",
          "md5": "287b44cdaf6619aff05908ba1e05d685",
          "sha256": "d65a64b0aaa6cbff56362da5da2fb211db002af3968aa3ccc9a63d963e749405"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.5.8.tar.gz",
        "has_sig": false,
        "md5_digest": "287b44cdaf6619aff05908ba1e05d685",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42517,
        "upload_time": "2021-08-12T15:27:18",
        "upload_time_iso_8601": "2021-08-12T15:27:18.307504Z",
        "url": "https://files.pythonhosted.org/packages/f4/ce/6651489ac5dabdbd20fe74ee1657870ed114c683ae63a5f7e432d831f2f8/grpc-helper-1.5.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "830e31591a397a631a6078bc762c363d31f56ea04a202a5a925d89f79a4aa96c",
          "md5": "c4be6a28e7cfc4886e4f0ef4472a207a",
          "sha256": "c3199f0441e3f3e90bb4dfc31345ae2358d518a1b81e0588f6deddc328beb05d"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c4be6a28e7cfc4886e4f0ef4472a207a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43402,
        "upload_time": "2021-09-26T14:55:42",
        "upload_time_iso_8601": "2021-09-26T14:55:42.551362Z",
        "url": "https://files.pythonhosted.org/packages/83/0e/31591a397a631a6078bc762c363d31f56ea04a202a5a925d89f79a4aa96c/grpc-helper-1.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb725d60473fbefef1ff1ebd8bb5b7c2c7fc7c45f5c596e28411cf64b8ab33b9",
          "md5": "e3bfd4d89035141d80f117c8302a2982",
          "sha256": "b1d5d12ce14f1a69e01f9c2a1a30f39c48b98bbda92935295ec478b40d2ec5f5"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e3bfd4d89035141d80f117c8302a2982",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44934,
        "upload_time": "2021-09-27T11:44:27",
        "upload_time_iso_8601": "2021-09-27T11:44:27.747183Z",
        "url": "https://files.pythonhosted.org/packages/fb/72/5d60473fbefef1ff1ebd8bb5b7c2c7fc7c45f5c596e28411cf64b8ab33b9/grpc-helper-1.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4555ea01f5086fdd3b29d3e956719a11e865b3cb234019d0cdce489dff9ca30",
          "md5": "a9418fd1b4a3ad1a9322e5be348718e2",
          "sha256": "7dc570bb6ef3c74dfaa3cdd01a250839407d31d7e8d77f0a0e5461ea315a0b66"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a9418fd1b4a3ad1a9322e5be348718e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44906,
        "upload_time": "2021-09-28T12:07:08",
        "upload_time_iso_8601": "2021-09-28T12:07:08.568399Z",
        "url": "https://files.pythonhosted.org/packages/a4/55/5ea01f5086fdd3b29d3e956719a11e865b3cb234019d0cdce489dff9ca30/grpc-helper-1.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e934631e8f15e91f4182610659d6cffc703c4c520cd25ab943a6bcce34c90bf",
          "md5": "927f1c2700551d4b69a68348222a3358",
          "sha256": "cac986ab597af094e5bcb208cc68a9f98ec0d6635401beaa4ee77499bf45b3e1"
        },
        "downloads": -1,
        "filename": "grpc-helper-1.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "927f1c2700551d4b69a68348222a3358",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 45134,
        "upload_time": "2021-11-26T14:33:29",
        "upload_time_iso_8601": "2021-11-26T14:33:29.883883Z",
        "url": "https://files.pythonhosted.org/packages/3e/93/4631e8f15e91f4182610659d6cffc703c4c520cd25ab943a6bcce34c90bf/grpc-helper-1.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5adf44e59aa00e8ab5ff5e017e6418bc3db82a2082f24fbaf8b91d010a2cd18e",
          "md5": "9bb3ce4a1ebee51a3b00d3921ec73161",
          "sha256": "f645400e1bd3a916f72889422b8c82daaf03f23cd22f5c44bab1b0a116cb90c7"
        },
        "downloads": -1,
        "filename": "grpc_helper-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9bb3ce4a1ebee51a3b00d3921ec73161",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42566,
        "upload_time": "2022-11-20T16:58:24",
        "upload_time_iso_8601": "2022-11-20T16:58:24.961764Z",
        "url": "https://files.pythonhosted.org/packages/5a/df/44e59aa00e8ab5ff5e017e6418bc3db82a2082f24fbaf8b91d010a2cd18e/grpc_helper-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a59687fa472ad93e912dc33da37a9c6962edc71b1214287577ea0adb48e994ba",
          "md5": "386dbe22d83523170b5545d820bd6849",
          "sha256": "1d6ab8b5504be31fbcd372403a50cd120fde30b645e35b52594e43c19ccb0ce1"
        },
        "downloads": -1,
        "filename": "grpc-helper-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "386dbe22d83523170b5545d820bd6849",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41558,
        "upload_time": "2022-11-20T16:58:26",
        "upload_time_iso_8601": "2022-11-20T16:58:26.865072Z",
        "url": "https://files.pythonhosted.org/packages/a5/96/87fa472ad93e912dc33da37a9c6962edc71b1214287577ea0adb48e994ba/grpc-helper-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8212c45ada8c1a05d1a1df5ca86f79018fbada2cb711aa47c6ba16cb9baae934",
          "md5": "c68af9fe214c97c994f92bf412b825ee",
          "sha256": "4809e4456fd59126e69e5ad558ec00bc919b4d2b3d9c7925a61f22518aafba89"
        },
        "downloads": -1,
        "filename": "grpc_helper-2.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c68af9fe214c97c994f92bf412b825ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42945,
        "upload_time": "2023-01-08T16:53:02",
        "upload_time_iso_8601": "2023-01-08T16:53:02.819318Z",
        "url": "https://files.pythonhosted.org/packages/82/12/c45ada8c1a05d1a1df5ca86f79018fbada2cb711aa47c6ba16cb9baae934/grpc_helper-2.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab48a4c2c1cb17ad6e08ead91fee078f1537cc0787c456bc0588dae6ae9c4e47",
          "md5": "2fc52634ba643f141a9e4d9884d3b7dd",
          "sha256": "f1b1e4a67566353d9a98a0fd7ec729965d35cd3e5469e85467d70011e1dee3ab"
        },
        "downloads": -1,
        "filename": "grpc-helper-2.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2fc52634ba643f141a9e4d9884d3b7dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42056,
        "upload_time": "2023-01-08T16:53:04",
        "upload_time_iso_8601": "2023-01-08T16:53:04.200450Z",
        "url": "https://files.pythonhosted.org/packages/ab/48/a4c2c1cb17ad6e08ead91fee078f1537cc0787c456bc0588dae6ae9c4e47/grpc-helper-2.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69d01c501fd7fb73b17a3c3be7f525548ebaedf34cd06e15b62a21c0f91c81ad",
          "md5": "e24bcc7a430c4c2e8c7ef8a594d25e5a",
          "sha256": "47e6117cb4c1fd09aa53c4668231ad1c80dfddff50b8c0b4b9d153ee7d78f6df"
        },
        "downloads": -1,
        "filename": "grpc_helper-2.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e24bcc7a430c4c2e8c7ef8a594d25e5a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43134,
        "upload_time": "2023-01-29T16:14:17",
        "upload_time_iso_8601": "2023-01-29T16:14:17.369536Z",
        "url": "https://files.pythonhosted.org/packages/69/d0/1c501fd7fb73b17a3c3be7f525548ebaedf34cd06e15b62a21c0f91c81ad/grpc_helper-2.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c034c773884ea2f6b8c27dcb480b5254531be0788343235d25c9ef197ddc7a1",
          "md5": "c279e3633280f1fb138148bf0dd33df5",
          "sha256": "8cef9838c90e0f8875ea307d7b9525fe0b23fe03b2dccfa4ed9596ef3406eb2d"
        },
        "downloads": -1,
        "filename": "grpc-helper-2.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c279e3633280f1fb138148bf0dd33df5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42451,
        "upload_time": "2023-01-29T16:14:18",
        "upload_time_iso_8601": "2023-01-29T16:14:18.595948Z",
        "url": "https://files.pythonhosted.org/packages/0c/03/4c773884ea2f6b8c27dcb480b5254531be0788343235d25c9ef197ddc7a1/grpc-helper-2.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "69d01c501fd7fb73b17a3c3be7f525548ebaedf34cd06e15b62a21c0f91c81ad",
        "md5": "e24bcc7a430c4c2e8c7ef8a594d25e5a",
        "sha256": "47e6117cb4c1fd09aa53c4668231ad1c80dfddff50b8c0b4b9d153ee7d78f6df"
      },
      "downloads": -1,
      "filename": "grpc_helper-2.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e24bcc7a430c4c2e8c7ef8a594d25e5a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 43134,
      "upload_time": "2023-01-29T16:14:17",
      "upload_time_iso_8601": "2023-01-29T16:14:17.369536Z",
      "url": "https://files.pythonhosted.org/packages/69/d0/1c501fd7fb73b17a3c3be7f525548ebaedf34cd06e15b62a21c0f91c81ad/grpc_helper-2.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c034c773884ea2f6b8c27dcb480b5254531be0788343235d25c9ef197ddc7a1",
        "md5": "c279e3633280f1fb138148bf0dd33df5",
        "sha256": "8cef9838c90e0f8875ea307d7b9525fe0b23fe03b2dccfa4ed9596ef3406eb2d"
      },
      "downloads": -1,
      "filename": "grpc-helper-2.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c279e3633280f1fb138148bf0dd33df5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 42451,
      "upload_time": "2023-01-29T16:14:18",
      "upload_time_iso_8601": "2023-01-29T16:14:18.595948Z",
      "url": "https://files.pythonhosted.org/packages/0c/03/4c773884ea2f6b8c27dcb480b5254531be0788343235d25c9ef197ddc7a1/grpc-helper-2.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}