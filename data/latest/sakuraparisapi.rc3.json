{
  "info": {
    "author": "Anson Xu",
    "author_email": "AXu2@scu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# The Unofficial Sakura Paris Python API (TUSPPAPI)\n✨ *Because one dictionary is never enough* ✨\n\n### Table of Contents\n* [More than just a wrapper (Intro)](https://github.com/shur1m/sakuraParisPythonAPI#more-than-just-a-wrapper)\n* [Install the Package](https://github.com/shur1m/sakuraParisPythonAPI#install-the-package)\n* [Documentation](https://github.com/shur1m/sakuraParisPythonAPI#documentation)\n\n## More than just a wrapper\nHave you ever wanted to search 40 different Japanese dictionaries at the same time? Well now you can anyways!\n\nIntroducing the wrapper that queries the [sakura-paris](https://sakura-paris.org/About/%E5%BA%83%E8%BE%9E%E8%8B%91%E7%84%A1%E6%96%99%E6%A4%9C%E7%B4%A2)'s free Koujien search API（広辞苑無料検索） for a lot of dictionaries. This includes Daijirin, Koujien, Daijisen, and even oddballs like a dictionary for psychological terms（心理学辞典）.\n\nIf that wasn't enough, this wrapper allows you to query selected dictionaries at the same time, and also allows searches over the 40 entry limit on sakura-paris! If you've ever been at a loss for which dictionary to pick, you're at the right place!\n\nThat's enough talk. Here's an example of how easy it is to use.\n\n```python\n#import the package!\nfrom sakuraParisAPI.sakura import JpDict\n\n#create JpDict object\na = JpDict()\n\n#each dictionary will return at most 10 entries (default value is already 10)\na.setMax(10)\n\n#add dictionary to be queries (\"広辞苑\" is added by default, so this will query 2 dictionaries)\na.addDict(\"大辞林\")\n\n#returns a dictionary where [key = dictionary_name, value = list of Entry]\nresults = a.search(\"元気\")\n\n#for every dictionary queried\nfor key in results:\n    print(\"______\", key, \"______\")\n    \n    #for every entry found in dictionary\n    for entry in results[key]:\n    \n        #print out the word and its definition\n        print(entry.getHeading())\n        print(entry.getDefinition())\n        \n    print()\n\n#print out all dictionaries used in this query\nprint(a.getDict())\n```\n\nAlso, by adding a single line before calling `search(word)`, we can query all dictionaries at the same time.\n\n```python\na.addAllDict()\n```\nand ***voila***. 40 dictionaries at your fingertips. Minus a couple cause the API returns empty jsons for them. :')\n\n## Install the Package\nThis package can be downloaded using PIP! <br>\nHere is the command for the latest version: `pip install sakuraParisAPI==0.1.0` <br>\nSPPAPI has two dependencies: bs4 and requests, and both will also be installed by the above command\n\n## Documentation\nAll public methods of the JpDict and Entry class are listed below. <br>\nPlease note that the API does not work with a few dictionaries (e.g. 学研古語辞典, NHK日本語発音アクセント辞典). I will be using bs4 or something similar to implement these features later. Especially for the NHK accent dictionary, I hope to return the links to the .wav files for each entry.\n\n<br>\n\n| JpDict Method | Parameter Types | Return Type | Description | \n|-|-|-|-|\n| `search(word, searchType = 0)` | str, int (0 - 2) | dict[str, list[Entry]] | queries active dictionaries for `word` with search type `searchType`. `searchtype = 0` by default and searches for dictionary entries with prefixes matching `word`. `searchtype = 1` searches for suffixes matching `word` and `searchtype = 2` searches for exact matches only. <br> Returns a dictionary where keys are the name of the dictionary queried and value is a list of `Entry`|\n| `startsWith(word)` | str | dict[str, list[Entry]] | Queries dictionary for entries that start with `word`. Same return type as `search`.|\n| `endsWith(word)` | str | dict[str, list[Entry]] | Queries dictionary for entries that end with `word`. Same return type as `search`.|\n| `completeMatch(word)` | str | dict[str, list[Entry]] | Queries dictionary for entries that are exact matches for `word`. Same return type as `search`.|\n| `setMax(maxEntries)` | int | void | Sets the max number of entries (for each dictionary) returned by any of the above functions to `maxEntries` |\n| `addDict(dictionaryName)` | str | void | adds `dictionaryName` to set of dictionaries to be queried if it exists. |\n| `addAllDict()` | | void | adds all possible dictionaries to set of dictionaries to be queried.|\n| `enableTags()` | | void | prevents markdown tags from being removed from the `heading` and `definition` fields of `Entry`s returned in searches. |\n| `disableTags()` | | void | ensures markdown tags are removed from the `heading` and `definition` fields of `Entry`s returned in searches. |\n\n|Entry Method| Parameter Types | Return Type | Description |\n|-|-|-|-|\n|`getHeading()` | | str | returns heading listed in dictionary entry. |\n|`getDefinition()` | | str | returns the definition listed in dictionary entry. |\n|`getPage()` | | str | returns page number of dictionary entry |\n|`getOffset()` | | str | returns the offset of the dictionary entry |\n\nNote: `getPage()` and `getOffset()` do not currently have any use.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shur1m/sakuraParisPythonAPI",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sakuraParisAPI",
    "package_url": "https://pypi.org/project/sakuraParisAPI/",
    "platform": null,
    "project_url": "https://pypi.org/project/sakuraParisAPI/",
    "project_urls": {
      "Homepage": "https://github.com/shur1m/sakuraParisPythonAPI"
    },
    "release_url": "https://pypi.org/project/sakuraParisAPI/0.1.1/",
    "requires_dist": [
      "requests",
      "bs4"
    ],
    "requires_python": ">=3.7",
    "summary": "for accessing the Sakura Paris dictionary API",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14965993,
  "releases": {
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "996fdf96797415939367ac0a0cb952225416b3fa84b7b2988674c0343dd0eb6f",
          "md5": "fb31a9ea29c194df4421ca52a3b96a3c",
          "sha256": "9236e2f754be09ef6e5889d9d29b9ecdf97f4b028fe4c811b74003d4c917437e"
        },
        "downloads": -1,
        "filename": "sakuraParisAPI-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb31a9ea29c194df4421ca52a3b96a3c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5230,
        "upload_time": "2022-09-01T04:13:40",
        "upload_time_iso_8601": "2022-09-01T04:13:40.960729Z",
        "url": "https://files.pythonhosted.org/packages/99/6f/df96797415939367ac0a0cb952225416b3fa84b7b2988674c0343dd0eb6f/sakuraParisAPI-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d32d72ab99c0feebb24cf107ff312a050938e7c0839ea7f0a0cf0f117fe4c815",
          "md5": "56fd88fc3ec243d4c1e0951b2cbd25a4",
          "sha256": "de5267ca506b26ea22da636470756d2b69483c56be18d7466cb93894d94ca78d"
        },
        "downloads": -1,
        "filename": "sakuraParisAPI-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "56fd88fc3ec243d4c1e0951b2cbd25a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4384,
        "upload_time": "2022-09-01T04:13:42",
        "upload_time_iso_8601": "2022-09-01T04:13:42.658185Z",
        "url": "https://files.pythonhosted.org/packages/d3/2d/72ab99c0feebb24cf107ff312a050938e7c0839ea7f0a0cf0f117fe4c815/sakuraParisAPI-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbc1df45541a40fba73b8792dbe16b2cd7402850627e42e3bbf8c42d1036a1cf",
          "md5": "8b590b8cbed8d6516118f735cfba8c66",
          "sha256": "998b114550eed2490519230f9f21b095570ebdcd8530e9c99192fb70ffae3f44"
        },
        "downloads": -1,
        "filename": "sakuraParisAPI-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b590b8cbed8d6516118f735cfba8c66",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7189,
        "upload_time": "2022-09-01T05:45:52",
        "upload_time_iso_8601": "2022-09-01T05:45:52.366493Z",
        "url": "https://files.pythonhosted.org/packages/bb/c1/df45541a40fba73b8792dbe16b2cd7402850627e42e3bbf8c42d1036a1cf/sakuraParisAPI-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f58eb26d6f705c062d42345e4bb978265a2a7e40c4819cc5cbd531a170f86d6",
          "md5": "e59ec64227c6c9c4e6a4395168c38770",
          "sha256": "04eae9e8ca98505cf1bced986ddd0d9ba85554c5eff754e4687f30713fc67109"
        },
        "downloads": -1,
        "filename": "sakuraParisAPI-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e59ec64227c6c9c4e6a4395168c38770",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6540,
        "upload_time": "2022-09-01T05:45:54",
        "upload_time_iso_8601": "2022-09-01T05:45:54.144569Z",
        "url": "https://files.pythonhosted.org/packages/1f/58/eb26d6f705c062d42345e4bb978265a2a7e40c4819cc5cbd531a170f86d6/sakuraParisAPI-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee55d07523369c4087ef82c908d9dad29eb6792d5b7dc1180581fdb06d2d1492",
          "md5": "fee82b932cf258ebb7d9466845745309",
          "sha256": "6b0daab1ff69bb5a3b676af92a37932161bc6a5c2b274c4734f7cff4f6f601d1"
        },
        "downloads": -1,
        "filename": "sakuraParisAPI-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fee82b932cf258ebb7d9466845745309",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7268,
        "upload_time": "2022-09-01T17:43:57",
        "upload_time_iso_8601": "2022-09-01T17:43:57.918954Z",
        "url": "https://files.pythonhosted.org/packages/ee/55/d07523369c4087ef82c908d9dad29eb6792d5b7dc1180581fdb06d2d1492/sakuraParisAPI-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d80ca3d49c0b6d6e39ced7862bf9e67ca1636609fc11fa1ffcbc673dcd66bae",
          "md5": "66df9262ad122ef1e2af210a7c8c1544",
          "sha256": "d984fee6cdae78cb73cd182b178d455da1a93b77f9ea6c10daba631c6f352a0a"
        },
        "downloads": -1,
        "filename": "sakuraParisAPI-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "66df9262ad122ef1e2af210a7c8c1544",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6581,
        "upload_time": "2022-09-01T17:43:59",
        "upload_time_iso_8601": "2022-09-01T17:43:59.667918Z",
        "url": "https://files.pythonhosted.org/packages/8d/80/ca3d49c0b6d6e39ced7862bf9e67ca1636609fc11fa1ffcbc673dcd66bae/sakuraParisAPI-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee55d07523369c4087ef82c908d9dad29eb6792d5b7dc1180581fdb06d2d1492",
        "md5": "fee82b932cf258ebb7d9466845745309",
        "sha256": "6b0daab1ff69bb5a3b676af92a37932161bc6a5c2b274c4734f7cff4f6f601d1"
      },
      "downloads": -1,
      "filename": "sakuraParisAPI-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fee82b932cf258ebb7d9466845745309",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7268,
      "upload_time": "2022-09-01T17:43:57",
      "upload_time_iso_8601": "2022-09-01T17:43:57.918954Z",
      "url": "https://files.pythonhosted.org/packages/ee/55/d07523369c4087ef82c908d9dad29eb6792d5b7dc1180581fdb06d2d1492/sakuraParisAPI-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8d80ca3d49c0b6d6e39ced7862bf9e67ca1636609fc11fa1ffcbc673dcd66bae",
        "md5": "66df9262ad122ef1e2af210a7c8c1544",
        "sha256": "d984fee6cdae78cb73cd182b178d455da1a93b77f9ea6c10daba631c6f352a0a"
      },
      "downloads": -1,
      "filename": "sakuraParisAPI-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "66df9262ad122ef1e2af210a7c8c1544",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6581,
      "upload_time": "2022-09-01T17:43:59",
      "upload_time_iso_8601": "2022-09-01T17:43:59.667918Z",
      "url": "https://files.pythonhosted.org/packages/8d/80/ca3d49c0b6d6e39ced7862bf9e67ca1636609fc11fa1ffcbc673dcd66bae/sakuraParisAPI-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}