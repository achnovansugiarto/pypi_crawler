{
  "info": {
    "author": "Danush Kumar Venkatesh",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<!--\nSPDX-FileCopyrightText: 2022 Venkatesh Danush Kumar <Danush-Kumar.Venkatesh@student.tu-freiberg.de>, Peter Steinbach <p.steinbach@hzdr.de>\n\nSPDX-License-Identifier: BSD-3-Clause-Attribution\n-->\n\n# Shape generate\n\nThe file ```shape_generate.py``` has multiple functionality to create synthetic dataset\nof symmetrical objects. The methods creates two folders, namely, ```images``` and ```masks```. The images are constructed from the Gaussain distribution.\n\n# Installation\n\nThis repo is managed with `poetry`. To try out this package, do:\n\n```\n$ poetry install\n$ poetry run symmsyn --help\n```\n\n# Examples\n\nThe following examples show the method to create the dataset\n\n1. Create a dataset of `200` images of size=256 x 256 with circle objects of radius=`10` and density=`20`\n```bash\npoetry run symmsyn --job_type \"single\" --n_image 200 --folder_name \"circle_data\" --object_type \"circle\" --image_dims 256 --circle_radius 10 --start_count 45 --end_count 50\n```\n\n2. Create a dataset of `100` images of size=512 x 512 with square objects of side=`10`, density=`35`\n```bash\npoetry run symmsyn --job_type \"single\" --n_image 100 --folder_name \"square_data\" --object_type \"square\" --image_dims 512 --start_count 34 --end_count 35 --square_size 10 10\n```\n\n3. Create a dataset of `100` images of size=512 x 512 with triangle objects of varying size, density=`35`\n```bash\npoetry run symmsyn --job_type \"single\" --n_image 100 --folder_name \"triangle_data\" --object_type \"triangle\" --image_dims 512 --start_count 34 --end_count 35 --size_vary True\n```\n\n4. Create a dataset of `500` images of size=256 x 256 with circle+ellipse objects of radius=`10`, minor_radius=`5`, major_radius=`10`, circle density=`35`, ellipse density=`10`\n\nThe elliptical objects will be equally divided into horizontal and angular objects. Specify ```angle``` parameter if needed. \n```bash\npoetry run symmsyn --job_type \"multi\" --n_image 100 --folder_name \"circle_ellipse_data\" --image_dims 256 --circle_radius 10 --circle_start 34 --circle_end 35 --add_ellipse True --ell_count 10 --m_radius 10 --n_radius 5 --ell_angle 45\n```\n\n5. Create a dataset of `500` images of size=256 x 256 with circle+ellipse+triangle objects of varying sizes and circle density=`10`, ellipse density=`10`, triangle density=`40`\n\nThe elliptical objects will be equally divided into horizontal and angular objects. Specify ```angle``` parameter if needed. \n```bash\npoetry run symmsyn --job_type \"multi\" --n_image 500 --folder_name \"circle_ellipse_tri_data\" --image_dims 256 --circle_start 9 --circle_end 10 --add_tri True --add_ellipse True --tri_count 40 --ell_count 10 --size_vary True\n```\n\n6. Create a dataset of `500` images of size=256 x 256 with circle+square+triangle objects of radius=`10`, side=`10`, size=`12` and circle density=`10`, square density=`10`, triangle density=`15` and change the intensity of objects to `0.5*std.` of the background\n\nTo change from square to rectangle objects vary the values in the parameter ```size```, a good starting value (-8,12) \n```bash\npoetry run symmsyn --job_type \"multi\" --n_image 500 --folder_name \"circle_square_tri_data\" --image_dims 256 --circle_radius 10 --circle_start 9 --circle_end 10 --add_square True --add_tri True --square_size 10 10 --tri_size 12 12 --sq_count 10 --tri_count 15 --intensity_vary True --intensity_ratio 0.5\n```\n\n7. Create only an image and mask size=256 x 256 with circle+square+triangle objects of radius=10,side=10, size=12 and circle density=10, square density=10, triangle density=15 \n\nThe image and mask are saved as a file \"multi.png\"\n\nTo change from square to rectangle objects vary the values in the parameter ```size```, a good starting value (-8,12) \n```bash\npoetry run symmsyn --job_type \"multi\" --image_dims 256 --circle_radius 10 --circle_start 9 --circle_end 10 --add_square True --add_tri True --square_size 10 10 --tri_size 12 12 --sq_count 10 --tri_count 15 --save_file False\n```\n=================================================================================================================================================================\n\nSome **example images** are shown here.\n\n\n![alt text](https://github.com/danushv07/symmetric_synthetic/blob/main/images/initial_dataset.png)\n\nThe datasets in the order from left to right: circle objects, circle and ellipse, circle and square, circle, ellipse and triangle objects.\n\nAn example of circle, ellipse and triangle object dataset with the variation of signal to noise.\n\n![alt text](https://github.com/danushv07/symmetric_synthetic/blob/main/images/noisy_dataset.png)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/danushv07/symmetric_synthetic",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "symmetric-synthetic",
    "package_url": "https://pypi.org/project/symmetric-synthetic/",
    "platform": null,
    "project_url": "https://pypi.org/project/symmetric-synthetic/",
    "project_urls": {
      "Homepage": "https://github.com/danushv07/symmetric_synthetic",
      "Repository": "https://github.com/danushv07/symmetric_synthetic"
    },
    "release_url": "https://pypi.org/project/symmetric-synthetic/0.1.0/",
    "requires_dist": [
      "click",
      "numpy (>=1.21.0,<2.0.0)",
      "pillow (>=9.1.0,<10.0.0)",
      "scikit-image (>=0.17.2,<0.18.0)",
      "scipy (>=1.4.1,<2.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "create symmetrical objects in synthetic images and their corresponding mask",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15487333,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df478829d89e670435c3483569d9fc2e257631d421dee0b6b4ef89eddf8b8233",
          "md5": "ec90da01ed02000b96f398e476fbcd7e",
          "sha256": "47d567f9d34d981f1ccb90fb651060e175ba9b8e4dd761345ac965103a20fb1b"
        },
        "downloads": -1,
        "filename": "symmetric_synthetic-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec90da01ed02000b96f398e476fbcd7e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 10466,
        "upload_time": "2022-10-21T14:08:57",
        "upload_time_iso_8601": "2022-10-21T14:08:57.587686Z",
        "url": "https://files.pythonhosted.org/packages/df/47/8829d89e670435c3483569d9fc2e257631d421dee0b6b4ef89eddf8b8233/symmetric_synthetic-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f87459673ebc6bc3c08e03f35095a0854e46016bafd8942dcfe043568c18e95",
          "md5": "5d16f8c6ffb504d61d78602778bfc6dc",
          "sha256": "e669d882ffabfa7fc641f9464611f61191416e674a22605b70fde9412d5fb645"
        },
        "downloads": -1,
        "filename": "symmetric_synthetic-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5d16f8c6ffb504d61d78602778bfc6dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 10250,
        "upload_time": "2022-10-21T14:08:59",
        "upload_time_iso_8601": "2022-10-21T14:08:59.859664Z",
        "url": "https://files.pythonhosted.org/packages/8f/87/459673ebc6bc3c08e03f35095a0854e46016bafd8942dcfe043568c18e95/symmetric_synthetic-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df478829d89e670435c3483569d9fc2e257631d421dee0b6b4ef89eddf8b8233",
        "md5": "ec90da01ed02000b96f398e476fbcd7e",
        "sha256": "47d567f9d34d981f1ccb90fb651060e175ba9b8e4dd761345ac965103a20fb1b"
      },
      "downloads": -1,
      "filename": "symmetric_synthetic-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ec90da01ed02000b96f398e476fbcd7e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 10466,
      "upload_time": "2022-10-21T14:08:57",
      "upload_time_iso_8601": "2022-10-21T14:08:57.587686Z",
      "url": "https://files.pythonhosted.org/packages/df/47/8829d89e670435c3483569d9fc2e257631d421dee0b6b4ef89eddf8b8233/symmetric_synthetic-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f87459673ebc6bc3c08e03f35095a0854e46016bafd8942dcfe043568c18e95",
        "md5": "5d16f8c6ffb504d61d78602778bfc6dc",
        "sha256": "e669d882ffabfa7fc641f9464611f61191416e674a22605b70fde9412d5fb645"
      },
      "downloads": -1,
      "filename": "symmetric_synthetic-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5d16f8c6ffb504d61d78602778bfc6dc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 10250,
      "upload_time": "2022-10-21T14:08:59",
      "upload_time_iso_8601": "2022-10-21T14:08:59.859664Z",
      "url": "https://files.pythonhosted.org/packages/8f/87/459673ebc6bc3c08e03f35095a0854e46016bafd8942dcfe043568c18e95/symmetric_synthetic-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}