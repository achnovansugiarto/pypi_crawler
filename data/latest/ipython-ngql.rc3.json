{
  "info": {
    "author": "Wey Gu",
    "author_email": "weyl.gu@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "> Note, this is an pre-release version. Becuase the tabular return resut is not yet fully supported in some queries.\n>\n> Still you can use it with `%config IPythonNGQL.ngql_result_style=\"raw\"`, after which line being executed, the result will be raw ResultSet.\n>\n> If you like to use it, please let me know, I may put more time into this project to make the tabular work.\n\n\n\n`ipython-ngql` is a python package to extend the ability to connect Nebula Graph from your Jupyter Notebook or iPython. It's easier for data scientists to create, debug and share reusable and all-in-one Jupyter Notebooks with Nebula Graph interaction embedded.\n\n`ipython-ngql`  is inspired by [ipython-sql](https://github.com/catherinedevlin/ipython-sql) created by [Catherine Devlin](https://catherinedevlin.blogspot.com/)\n\n![get_started](https://github.com/wey-gu/ipython-ngql/blob/main/examples/get_started.png?raw=true)\n\n## Get Started\n\n### Installation\n\n`ipython-ngql` could be installed either via pip or from this git repo itself.\n\n> Install via pip\n\n```bash\npip install ipython-ngql\n```\n\n> Install inside the repo\n\n```bash\ngit clone git@github.com:wey-gu/ipython-ngql.git\ncd ipython-ngql\npython setup.py install\n```\n\n### Load it in Jupyter Notebook or iPython\n\n```python\n%load_ext ngql\n```\n\n### Connect to Nebula Graph\n\nArguments as below are needed to connect a Nebula Graph DB instance:\n\n| Argument               | Description                              |\n| ---------------------- | ---------------------------------------- |\n| `--address` or `-addr` | IP address of the Nebula Graph Instance  |\n| `--port` or `-P`       | Port number of the Nebula Graph Instance |\n| `--user` or `-u`       | User name                                |\n| `--password` or `-p`   | Password                                 |\n\nBelow is an exmple on connecting to `127.0.0.1:9669` with username: \"user\" and password: \"password\".\n\n```python\n%ngql --address 127.0.0.1 --port 9669 --user user --password password\n```\n\n### Make Queries\n\nNow two kind of iPtython Magics are supported:\n\nOption 1: The one line stype with `%ngql`:\n\n```python\n%ngql GO FROM \"Tom\" OVER owns_pokemon YIELD owns_pokemon._dst as pokemon_id;\n```\n\nOption 2: The multiple lines stype with `%%ngql `\n\n```python\n%%ngql\nUSE pokemon_club;\nSHOW TAGS;\nSHOW HOSTS;\n```\n\n> There will be other options in future, i.e. from a `.ngql` file.\n\n### Query String with Variables\n\n`ipython-ngql` supports taking variables from the local namespace, with the help of [Jinja2](https://jinja.palletsprojects.com/) template framework, it's supported to have queries like the below example.\n\nThe actual query string should be `GO FROM \"Sue\" OVER owns_pokemon ...`, and `\"{{ trainer }}\"` was renderred as `\"Sue\"` by consuming the local variable `trainer`:\n\n```python\nIn [8]: trainer = \"Sue\"\n\nIn [9]: %%ngql\n   ...: GO FROM \"{{ trainer }}\" OVER owns_pokemon YIELD owns_pokemon._dst as pokemon_id | GO FROM $-.pokemon_id OVER owns_pokemon REVERSELY YIELD owns_pokemon._dst AS Trainer_Name;\n   ...:\n\nOut[9]:\n  Trainer_Name\n0        Jerry\n1          Sue\n2          Tom\n3          Wey\n```\n\n### Configure `ngql_result_style`\n\nBy default, `ipython-ngql` will use pandas dataframe as output style to enable more human readable output, while it's supported to use the raw thrift data format comes from the `nebula2-python` itself.\n\nThis can be done ad-hoc with below one line:\n\n```python\n%config IPythonNGQL.ngql_result_style=\"raw\"\n```\n\nAfter above line being executed, the output will be like:\n\n```python\nResultSet(ExecutionResponse(\n    error_code=0,\n    latency_in_us=2844,\n    data=DataSet(\n        column_names=[b'Trainer_Name'],\n        rows=[Row(\n            values=[Value(\n                sVal=b'Tom')]),\n        Row(\n            values=[Value(\n                sVal=b'Jerry')]),\n        Row(\n            values=[Value(\n                sVal=b'Sue')]),\n        Row(\n            values=[Value(\n                sVal=b'Tom')]),\n        Row(\n            values=[Value(\n                sVal=b'Wey')])]),\n    space_name=b'pokemon_club'))\n```\n\nThe result are always stored in variable `_` in Jupyter Notebook, thus, to tweak the result, just refer a new var to it like:\n\n```python\nIn [10]: %config IPythonNGQL.ngql_result_style=\"raw\"\n\nIn [11]: %%ngql USE pokemon_club;\n    ...: GO FROM \"Tom\" OVER owns_pokemon YIELD owns_pokemon._dst as pokemon_id\n    ...: | GO FROM $-.pokemon_id OVER owns_pokemon REVERSELY YIELD owns_pokemon._dst AS Trainer_Name;\n    ...:\n    ...:\nOut[11]:\nResultSet(ExecutionResponse(\n    error_code=0,\n    latency_in_us=3270,\n    data=DataSet(\n        column_names=[b'Trainer_Name'],\n        rows=[Row(\n            values=[Value(\n                sVal=b'Tom')]),\n        Row(\n            values=[Value(\n                sVal=b'Jerry')]),\n        Row(\n            values=[Value(\n                sVal=b'Sue')]),\n        Row(\n            values=[Value(\n                sVal=b'Tom')]),\n        Row(\n            values=[Value(\n                sVal=b'Wey')])]),\n    space_name=b'pokemon_club'))\n\nIn [12]: r = _\n\nIn [13]: r.column_values(key='Trainer_Name')[0]._value.value\nOut[13]: b'Tom'\n```\n\n### Get Help\n\nDon't remember anything or even relying on the cheatsheet here, oen takeaway for you: the help!\n\n```python\nIn [7]: %ngql help\n\n\n        Supported Configurations:\n        ------------------------\n\n        > How to config ngql_result_style in \"raw\", \"pandas\"\n        %config IPythonNGQL.ngql_result_style=\"raw\"\n        %config IPythonNGQL.ngql_result_style=\"pandas\"\n\n        > How to config ngql_verbose in True, False\n        %config IPythonNGQL.ngql_verbose=True\n\n        > How to config max_connection_pool_size\n        %config IPythonNGQL.max_connection_pool_size=10\n\n        Quick Start:\n        -----------\n\n        > Connect to Neubla Graph\n        %ngql --address 127.0.0.1 --port 9669 --user user --password password\n\n        > Use Space\n        %ngql USE nba\n\n        > Query\n        %ngql SHOW TAGS;\n\n        > Multile Queries\n        %%ngql\n        SHOW TAGS;\n        SHOW HOSTS;\n\n        Reload ngql Magic\n        %reload_ext ngql\n\n        > Variables in query, we are using Jinja2 here\n        name = \"nba\"\n        %ngql USE \"{{ name }}\"\n```\n\n\n\n### Examples\n\n#### Jupyter Notebook\n\nPlease refer here:https://github.com/wey-gu/ipython-ngql/blob/main/examples/get_started.ipynb\n\n#### iPython\n\n```python\nvenv ❯ ipython\n\nIn [1]: %load_ext ngql\n\nIn [2]: %ngql --address 127.0.0.1 --port 9669 --user user --password password\nConnection Pool Created\nOut[2]:\n           Name\n0  pokemon_club\n\nIn [3]: %ngql GO FROM \"Tom\" OVER owns_pokemon YIELD owns_pokemon._dst as pokemon_id | GO FROM $-.pokemon_id OVER owns_pokemon REVERSELY YIELD owns_pokemon._dst AS Trainer_Name\nOut[3]:\n  Trainer_Name\n0          Tom\n1        Jerry\n2          Sue\n3          Tom\n4          Wey\n\nIn [4]: %%ngql\n   ...: SHOW TAGS;\n   ...: SHOW HOSTS;\n   ...:\n   ...:\nOut[4]:\n        Host    Port  Status  Leader count Leader distribution Partition distribution\n0  storaged0  9779.0  ONLINE             0  No valid partition     No valid partition\n1  storaged1  9779.0  ONLINE             1      pokemon_club:1         pokemon_club:1\n2  storaged2  9779.0  ONLINE             0  No valid partition     No valid partition\n3      Total     NaN    None             1      pokemon_club:1         pokemon_club:1\n\nIn [5]: trainer = \"Sue\"\n\nIn [6]: %%ngql\n   ...: GO FROM \"{{ trainer }}\" OVER owns_pokemon YIELD owns_pokemon._dst as pokemon_id | GO FROM $-.pokemon_id OVER owns_pokemon REVERSELY YIELD owns_pokemon._dst AS Trainer_Name;\n   ...:\nOut[6]:\n  Trainer_Name\n0        Jerry\n1          Sue\n2          Tom\n3          Wey\n\nIn [7]: %ngql help\n\n\n        Supported Configurations:\n        ------------------------\n\n        > How to config ngql_result_style in \"raw\", \"pandas\"\n        %config IPythonNGQL.ngql_result_style=\"raw\"\n        %config IPythonNGQL.ngql_result_style=\"pandas\"\n\n        > How to config ngql_verbose in True, False\n        %config IPythonNGQL.ngql_verbose=True\n\n        > How to config max_connection_pool_size\n        %config IPythonNGQL.max_connection_pool_size=10\n\n        Quick Start:\n        -----------\n\n        > Connect to Neubla Graph\n        %ngql --address 127.0.0.1 --port 9669 --user user --password password\n\n        > Use Space\n        %ngql USE nba\n\n        > Query\n        %ngql SHOW TAGS;\n\n        > Multile Queries\n        %%ngql\n        SHOW TAGS;\n        SHOW HOSTS;\n\n        Reload ngql Magic\n        %reload_ext ngql\n\n        > Variables in query, we are using Jinja2 here\n        name = \"nba\"\n        %ngql USE \"{{ name }}\"\n\nIn [8]: trainer = \"Sue\"\n\nIn [9]: %%ngql\n   ...: GO FROM \"{{ trainer }}\" OVER owns_pokemon YIELD owns_pokemon._dst as pokemon_id | GO FROM $-.pokemon_id OVER owns_pokemon REVERSELY YIELD owns_pokemon._dst AS Trainer_Name;\n   ...:\n   ...:\nOut[9]:\n  Trainer_Name\n0        Jerry\n1          Sue\n2          Tom\n3          Wey\n\nIn [10]: %config IPythonNGQL.ngql_result_style=\"raw\"\n\nIn [11]: %%ngql USE pokemon_club;\n    ...: GO FROM \"Tom\" OVER owns_pokemon YIELD owns_pokemon._dst as pokemon_id\n    ...: | GO FROM $-.pokemon_id OVER owns_pokemon REVERSELY YIELD owns_pokemon._dst AS Trainer_Name;\n    ...:\n    ...:\nOut[11]:\nResultSet(ExecutionResponse(\n    error_code=0,\n    latency_in_us=3270,\n    data=DataSet(\n        column_names=[b'Trainer_Name'],\n        rows=[Row(\n            values=[Value(\n                sVal=b'Tom')]),\n        Row(\n            values=[Value(\n                sVal=b'Jerry')]),\n        Row(\n            values=[Value(\n                sVal=b'Sue')]),\n        Row(\n            values=[Value(\n                sVal=b'Tom')]),\n        Row(\n            values=[Value(\n                sVal=b'Wey')])]),\n    space_name=b'pokemon_club'))\n\nIn [12]: r = _\n\nIn [13]: r.column_values(key='Trainer_Name')[0]._value.value\nOut[13]: b'Tom'\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wey-gu/ipython-ngql",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ipython-ngql",
    "package_url": "https://pypi.org/project/ipython-ngql/",
    "platform": "",
    "project_url": "https://pypi.org/project/ipython-ngql/",
    "project_urls": {
      "Bug Tracker": "https://github.com/wey-gu/ipython-ngql/issues",
      "Homepage": "https://github.com/wey-gu/ipython-ngql"
    },
    "release_url": "https://pypi.org/project/ipython-ngql/0.4/",
    "requires_dist": [
      "Jinja2",
      "nebula2-python (==2.0.0)",
      "pandas"
    ],
    "requires_python": ">=3.6",
    "summary": "iPython and Jupyter Plugin for Nebula Graph",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10487720,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7389d21586f21f0054521f9e6cedeeba13df723ab73f111e8961372e6fd0b5d6",
          "md5": "12951e930a7293aa1fc82f94ad4d5cfc",
          "sha256": "469baf231a7eb15b9cf537f8c963879e4480768bad9fcab0f3531c8812537850"
        },
        "downloads": -1,
        "filename": "ipython_ngql-0.2-py3.9.egg",
        "has_sig": false,
        "md5_digest": "12951e930a7293aa1fc82f94ad4d5cfc",
        "packagetype": "bdist_egg",
        "python_version": "3.9",
        "requires_python": ">=3.6",
        "size": 11221,
        "upload_time": "2021-03-07T10:51:49",
        "upload_time_iso_8601": "2021-03-07T10:51:49.034783Z",
        "url": "https://files.pythonhosted.org/packages/73/89/d21586f21f0054521f9e6cedeeba13df723ab73f111e8961372e6fd0b5d6/ipython_ngql-0.2-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d719a5ea4ff9fd7680c4490f666d75d2c956bf6e70f8dd7e9a9d220fa1c45d85",
          "md5": "9148c87cc0ae3787d88fdb38e268d691",
          "sha256": "25da342f1769e7d4d7db4da2616896bb62480a3399fc51dcbf32a136cc0fd3ca"
        },
        "downloads": -1,
        "filename": "ipython_ngql-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9148c87cc0ae3787d88fdb38e268d691",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7230,
        "upload_time": "2021-03-07T10:51:46",
        "upload_time_iso_8601": "2021-03-07T10:51:46.060478Z",
        "url": "https://files.pythonhosted.org/packages/d7/19/a5ea4ff9fd7680c4490f666d75d2c956bf6e70f8dd7e9a9d220fa1c45d85/ipython_ngql-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9242406fccfc07f59e2b37d5ae4ff18b2165c2e8d14da15f0dcb3444dc8dcd36",
          "md5": "7147cb7e5bcbfbf90f9d2a8eb9f8c848",
          "sha256": "5b5fa0029e13c8dd85bd9d561b3ed0755278cbb4e14e6424fec5a8c069250eb3"
        },
        "downloads": -1,
        "filename": "ipython-ngql-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7147cb7e5bcbfbf90f9d2a8eb9f8c848",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7096,
        "upload_time": "2021-03-07T10:51:47",
        "upload_time_iso_8601": "2021-03-07T10:51:47.535003Z",
        "url": "https://files.pythonhosted.org/packages/92/42/406fccfc07f59e2b37d5ae4ff18b2165c2e8d14da15f0dcb3444dc8dcd36/ipython-ngql-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c190328d5e75f20a1d26ee9c3c26654a89187927b31a441ec622cc9ef6a7263",
          "md5": "78589d9f5dda8f9f37c3f395259ad1dc",
          "sha256": "375adc2ff1e491c414e5fff09f5c27843f1ff9a483d1afd16f50ab7c073ebe03"
        },
        "downloads": -1,
        "filename": "ipython_ngql-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78589d9f5dda8f9f37c3f395259ad1dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7234,
        "upload_time": "2021-03-07T11:00:31",
        "upload_time_iso_8601": "2021-03-07T11:00:31.990280Z",
        "url": "https://files.pythonhosted.org/packages/0c/19/0328d5e75f20a1d26ee9c3c26654a89187927b31a441ec622cc9ef6a7263/ipython_ngql-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daa26fcfc1b8335f2b5c4e641c83e6257bf8d03be2874abb66f7d363f95932c4",
          "md5": "3186afaa813974440fbf807246725f5c",
          "sha256": "a2976d5418bf7e9b43761798df34adddd77e7a3b8113781c522fe3625259c2dc"
        },
        "downloads": -1,
        "filename": "ipython-ngql-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3186afaa813974440fbf807246725f5c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7111,
        "upload_time": "2021-03-07T11:00:33",
        "upload_time_iso_8601": "2021-03-07T11:00:33.513014Z",
        "url": "https://files.pythonhosted.org/packages/da/a2/6fcfc1b8335f2b5c4e641c83e6257bf8d03be2874abb66f7d363f95932c4/ipython-ngql-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d3c0ec2424c92f50d1e6cdde8ef21690c8a72cdfaa5380d51050f2e6a5cad7b",
          "md5": "7c537d8ac147574093303dce4026b74b",
          "sha256": "e0f92df905b58bb2cc1e99d9646d07fb81f94f06bfbd7efd133103514aada0b3"
        },
        "downloads": -1,
        "filename": "ipython_ngql-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c537d8ac147574093303dce4026b74b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7416,
        "upload_time": "2021-05-27T12:30:03",
        "upload_time_iso_8601": "2021-05-27T12:30:03.608463Z",
        "url": "https://files.pythonhosted.org/packages/4d/3c/0ec2424c92f50d1e6cdde8ef21690c8a72cdfaa5380d51050f2e6a5cad7b/ipython_ngql-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1efb106e173f5b5339251e00027d6fd1c99f6f9b4abdef6dd4fec88d5a902172",
          "md5": "1b2c1679660fc327add4351cd6340823",
          "sha256": "7df69fe44dddfef8ace5f0429d776f399270e8a2a9d127f79e2123916505ddc6"
        },
        "downloads": -1,
        "filename": "ipython-ngql-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1b2c1679660fc327add4351cd6340823",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6952,
        "upload_time": "2021-05-27T12:30:05",
        "upload_time_iso_8601": "2021-05-27T12:30:05.509369Z",
        "url": "https://files.pythonhosted.org/packages/1e/fb/106e173f5b5339251e00027d6fd1c99f6f9b4abdef6dd4fec88d5a902172/ipython-ngql-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d3c0ec2424c92f50d1e6cdde8ef21690c8a72cdfaa5380d51050f2e6a5cad7b",
        "md5": "7c537d8ac147574093303dce4026b74b",
        "sha256": "e0f92df905b58bb2cc1e99d9646d07fb81f94f06bfbd7efd133103514aada0b3"
      },
      "downloads": -1,
      "filename": "ipython_ngql-0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7c537d8ac147574093303dce4026b74b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7416,
      "upload_time": "2021-05-27T12:30:03",
      "upload_time_iso_8601": "2021-05-27T12:30:03.608463Z",
      "url": "https://files.pythonhosted.org/packages/4d/3c/0ec2424c92f50d1e6cdde8ef21690c8a72cdfaa5380d51050f2e6a5cad7b/ipython_ngql-0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1efb106e173f5b5339251e00027d6fd1c99f6f9b4abdef6dd4fec88d5a902172",
        "md5": "1b2c1679660fc327add4351cd6340823",
        "sha256": "7df69fe44dddfef8ace5f0429d776f399270e8a2a9d127f79e2123916505ddc6"
      },
      "downloads": -1,
      "filename": "ipython-ngql-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "1b2c1679660fc327add4351cd6340823",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6952,
      "upload_time": "2021-05-27T12:30:05",
      "upload_time_iso_8601": "2021-05-27T12:30:05.509369Z",
      "url": "https://files.pythonhosted.org/packages/1e/fb/106e173f5b5339251e00027d6fd1c99f6f9b4abdef6dd4fec88d5a902172/ipython-ngql-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}