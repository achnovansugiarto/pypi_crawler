{
  "info": {
    "author": "Illia Martyniuk",
    "author_email": "illymartynyk@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# XML Serializer\n\nAllows you to convert XML to python dict (with python objects) using a schema.\n\n## Examples\n\nWe have next xml data (profiles.xml)\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<payload>\n    <MyProfile>\n        <record id=\"1\" nickname=\"eff1c\" admin=\"true\">\n            <posts topic=\"something\">\n                <post name=\"test post\" description=\"It's my test post.\" />\n                <post name=\"python xml_serializer\" description=\"It's very useful module!\" />\n            </posts>\n        </record>\n    </MyProfile>\n</payload>\n```\n\nAnd we want to turn it into\n\n```python\n{\n    \"payload\": {\n        \"my_profile\": {\n            \"record\": {\n                \"id\": 1,\n                \"nickname\": \"eff1c\",\n                \"admin\": True,\n                \"posts\": {\n                    \"topic\": \"something\",\n                    \"post\": [\n                        {\"name\": \"test post\", \"description\": \"It's my test post.\"},\n                        {\n                            \"name\": \"python xml_serializer\",\n                            \"description\": \"It's very useful module!\",\n                        },\n                    ],\n                },\n            }\n        }\n    }\n}\n```\n\nWe will write next schema\n\n```python\nfrom xml_serializer import Tag, TagAttr\nfrom xml_serializer.converter_types import Integer, String, Boolean\n\nprofiles_schema = {\n    Tag(\"payload\"): {\n        Tag(\"MyProfile\", \"my_profile\"): {\n            Tag(\"record\"): {\n                TagAttr(\"id\"): Integer(nullable=False),\n                TagAttr(\"nickname\"): String(nullable=False),\n                TagAttr(\"admin\"): Boolean(),\n                Tag(\"posts\"): {\n                    TagAttr(\"topic\"): String(nullable=False),\n                    Tag(\"post\"): [\n                        {\n                            TagAttr(\"name\"): String(),\n                            TagAttr(\"description\"): String()\n                        }\n                    ]\n                }\n            }\n        }\n    }\n```\n\nGet etree element (tag)\n\n```python\nfrom xml.etree import ElementTree as etree\n\ntree = etree.parse(\"profiles.xml\")\nroot = tree.getroot()\n\n# you can use root tag or find any else\nmain_tag = root.find(\"payload\")\n```\n\nAnd call the method to pass them to\n\n```python\nfrom xml_serializer import xml_serialize\n\nresponse = xml_serialize(profiles_schema, main_tag)\n```\n\n## Schema\n\n### Tag/TagAttr\nIn order to serialize data, you need to describe the scheme of its structure.  \nTo do this, we create a python dict with Tag/TagAttr object keys.  \nThe value for Tag is a set of TagAttr-s or Tag.\nI think it's clear that TagAttr is an attribute of the current tag, and Tag is actually a nested tag.\n\n```python\nfrom xml_serializer import Tag, TagAttr\nfrom xml_serializer.converter_types import String\n\nschema = {\n    Tag(\"posts\"): {\n        TagAttr(\"topic\"): String(nullable=False),\n        Tag(\"post\"): [\n            {\n                TagAttr(\"name\"): String(),\n                TagAttr(\"description\"): String()\n            }\n        ]\n    }\n}\n```\n\nBoth Tag and TagAttr have 2 parameters: field_name and name.  \n`field_name` - it is name in xml.  \n`name` - it is our custom name with which the object will return to us after serialization (**by default** - field_name).\n\n### Field data types\n\nTo convert TagAttr values, we use data types: **String**, **Integer**, **Float**, **Boolean**, **NestedType**.  \n\n**String**, **Integer**, **Float**, **Boolean** are similar to common data types (as in python).\nAll of them have the `nullable` parameter (**True** by default).  \nWhen set to **False**, if the tag does not have this attribute in the input data, an error will be raised\n\n#### NestedType\n\nIt is a data type that allows you to intercept serialization in the middle of a schema and\nprocess the resulting data according to your needs.\n\nIn order to use it, we have to describe the nested schema separately\nand create a function that will process the data received from it.  \nNestedType has 2 attributes for it: `schema` and `data_handling_function`\n\n```python\nfrom xml_serializer import Tag, TagAttr\nfrom xml_serializer.converter_types import Boolean, String, NestedType\n\n\nposts_schema = {\n    Tag(\"post\", \"posts\"): [\n        {\n            TagAttr(\"name\"): String(),\n            TagAttr(\"description\"): String()\n        }\n    ]\n}\n\n\ndef get_post_names(data):\n    posts = data[\"posts\"]\n\n    return [post[\"name\"] for post in posts]\n\n\nschema_with_nesting = {\n    Tag(\"record\"): {\n        TagAttr(\"admin\"): Boolean(),\n        Tag(\"posts\", \"post_names\"): NestedType(posts_schema, get_post_names)\n    }\n}\n```\n\nIn this example, we return only a list of post-s names to the posts tag, discarding all the information we don't need.\nThis way, NestedType allows you to modify the output data schema without unnecessary iterations.\n\n#### Custom type\n\nYou can create your own field data types. Use `AbstractType` for it.\n\n```python\nfrom xml_serializer.abstract_type import AbstractType\n\nclass Boolean(AbstractType):\n    def convert_method(self, value):\n        return True if value.lower() == \"true\" else False\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Eff1c/xml_serializer",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xml-serializer",
    "package_url": "https://pypi.org/project/xml-serializer/",
    "platform": null,
    "project_url": "https://pypi.org/project/xml-serializer/",
    "project_urls": {
      "Homepage": "https://github.com/Eff1c/xml_serializer"
    },
    "release_url": "https://pypi.org/project/xml-serializer/1.0.5/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Module for serialize (convert) xml to Python dict (with Python objects)",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17158432,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4571be196ff93f366c78cee7415bdb1d0e52f9e69bead28812b368ec7c2a38ed",
          "md5": "0071442ae8a84dbb65458bbd1eed82b0",
          "sha256": "d1bf014269d0f648b220f4a1ef95ee42465d1c80ffa9cf8531af010632a3fa8d"
        },
        "downloads": -1,
        "filename": "xml_serializer-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0071442ae8a84dbb65458bbd1eed82b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5473,
        "upload_time": "2023-02-22T23:31:40",
        "upload_time_iso_8601": "2023-02-22T23:31:40.857942Z",
        "url": "https://files.pythonhosted.org/packages/45/71/be196ff93f366c78cee7415bdb1d0e52f9e69bead28812b368ec7c2a38ed/xml_serializer-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66551b6e4ae685981c94957db4d18ddd0e193983531df1324f2e9e94e27c4055",
          "md5": "17147f438da73de206321e3e7008b2f6",
          "sha256": "616c8f55a8e2784dc53d100b3488be80de674194353d25bf7375a500d3e00d1c"
        },
        "downloads": -1,
        "filename": "xml_serializer-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "17147f438da73de206321e3e7008b2f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4919,
        "upload_time": "2023-02-22T23:31:42",
        "upload_time_iso_8601": "2023-02-22T23:31:42.530195Z",
        "url": "https://files.pythonhosted.org/packages/66/55/1b6e4ae685981c94957db4d18ddd0e193983531df1324f2e9e94e27c4055/xml_serializer-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5d32ad7c47a9cf6d20ee9e862b8a3b5b4dfd6a8ddeec3c33e274edcbf980564",
          "md5": "c301499c70b0e51f16ba4709359c5396",
          "sha256": "9cd1801d8f5ac85e8a1bd003f7fa2f56738c82003cf844b475853da54e2bc960"
        },
        "downloads": -1,
        "filename": "xml_serializer-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c301499c70b0e51f16ba4709359c5396",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5480,
        "upload_time": "2023-02-22T23:49:01",
        "upload_time_iso_8601": "2023-02-22T23:49:01.266628Z",
        "url": "https://files.pythonhosted.org/packages/b5/d3/2ad7c47a9cf6d20ee9e862b8a3b5b4dfd6a8ddeec3c33e274edcbf980564/xml_serializer-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73227c85279fadc4c722ad58f0dabf494f4919c05ba2683b350e202d279021f3",
          "md5": "fccfa1339d9b8f1459210df9bdef0a2a",
          "sha256": "30f71ca33d16d389893a8a05827669b296f912011acd875ff05612431b73e425"
        },
        "downloads": -1,
        "filename": "xml_serializer-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fccfa1339d9b8f1459210df9bdef0a2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4921,
        "upload_time": "2023-02-22T23:49:02",
        "upload_time_iso_8601": "2023-02-22T23:49:02.714344Z",
        "url": "https://files.pythonhosted.org/packages/73/22/7c85279fadc4c722ad58f0dabf494f4919c05ba2683b350e202d279021f3/xml_serializer-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f83ae924ab7995785b2b90796fcd8de88d2eee664493827111a6716d9a35eb18",
          "md5": "507b2bcfa5bb78f73f5cd24d0e4bb217",
          "sha256": "9b9a86d0e73856a24a60f109b467db24445b40865cc4852eca1060a9e5c00ee0"
        },
        "downloads": -1,
        "filename": "xml_serializer-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "507b2bcfa5bb78f73f5cd24d0e4bb217",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6459,
        "upload_time": "2023-02-23T19:14:47",
        "upload_time_iso_8601": "2023-02-23T19:14:47.565581Z",
        "url": "https://files.pythonhosted.org/packages/f8/3a/e924ab7995785b2b90796fcd8de88d2eee664493827111a6716d9a35eb18/xml_serializer-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9cfba0884cf29906a1a7463525f543de46af7f6c853a6018256146f005b9802",
          "md5": "dec13c708a99ea1a69a03c92a4ad6e85",
          "sha256": "fb7a74345bf915e4ac7373f814cb7c426d319a338545f02e08bc9b487bad0e44"
        },
        "downloads": -1,
        "filename": "xml_serializer-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "dec13c708a99ea1a69a03c92a4ad6e85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7266,
        "upload_time": "2023-02-23T19:14:49",
        "upload_time_iso_8601": "2023-02-23T19:14:49.111630Z",
        "url": "https://files.pythonhosted.org/packages/b9/cf/ba0884cf29906a1a7463525f543de46af7f6c853a6018256146f005b9802/xml_serializer-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7c774cf056e38e16aa1d03d6c8abecc7a1cc72a1e854b6d593379c62da4e880",
          "md5": "175230fbb435e4c01cea7e3073515d92",
          "sha256": "e2f49e2cdc3c82f7cd927cd51604e0563b22f3dabce0ed0d50e0a0a13c0596f7"
        },
        "downloads": -1,
        "filename": "xml_serializer-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "175230fbb435e4c01cea7e3073515d92",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6824,
        "upload_time": "2023-03-04T18:48:10",
        "upload_time_iso_8601": "2023-03-04T18:48:10.477418Z",
        "url": "https://files.pythonhosted.org/packages/a7/c7/74cf056e38e16aa1d03d6c8abecc7a1cc72a1e854b6d593379c62da4e880/xml_serializer-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "455dc1cd9e9897649d837a150df6911918ee5a4a078c3ada41a7a3cf57760364",
          "md5": "b66010ca4079f8e6670767fe8ba26dab",
          "sha256": "a7299a181ee02cdf4519e0df895d0afd7bfaa3fde906c220bd05e635ea6581a1"
        },
        "downloads": -1,
        "filename": "xml_serializer-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b66010ca4079f8e6670767fe8ba26dab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8158,
        "upload_time": "2023-03-04T18:48:12",
        "upload_time_iso_8601": "2023-03-04T18:48:12.907464Z",
        "url": "https://files.pythonhosted.org/packages/45/5d/c1cd9e9897649d837a150df6911918ee5a4a078c3ada41a7a3cf57760364/xml_serializer-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7c774cf056e38e16aa1d03d6c8abecc7a1cc72a1e854b6d593379c62da4e880",
        "md5": "175230fbb435e4c01cea7e3073515d92",
        "sha256": "e2f49e2cdc3c82f7cd927cd51604e0563b22f3dabce0ed0d50e0a0a13c0596f7"
      },
      "downloads": -1,
      "filename": "xml_serializer-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "175230fbb435e4c01cea7e3073515d92",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6824,
      "upload_time": "2023-03-04T18:48:10",
      "upload_time_iso_8601": "2023-03-04T18:48:10.477418Z",
      "url": "https://files.pythonhosted.org/packages/a7/c7/74cf056e38e16aa1d03d6c8abecc7a1cc72a1e854b6d593379c62da4e880/xml_serializer-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "455dc1cd9e9897649d837a150df6911918ee5a4a078c3ada41a7a3cf57760364",
        "md5": "b66010ca4079f8e6670767fe8ba26dab",
        "sha256": "a7299a181ee02cdf4519e0df895d0afd7bfaa3fde906c220bd05e635ea6581a1"
      },
      "downloads": -1,
      "filename": "xml_serializer-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "b66010ca4079f8e6670767fe8ba26dab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8158,
      "upload_time": "2023-03-04T18:48:12",
      "upload_time_iso_8601": "2023-03-04T18:48:12.907464Z",
      "url": "https://files.pythonhosted.org/packages/45/5d/c1cd9e9897649d837a150df6911918ee5a4a078c3ada41a7a3cf57760364/xml_serializer-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}