{
  "info": {
    "author": "Steve KÃ¼ng",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SimpleMDMpy\n\nA python library for simpleMDM API.\n\n[SimpleMDM API Documentation](https://simplemdm.com/docs/api)\n\n## Contributing\n\n- [Contributing.md](./CONTRIBUTING.md)\n\n## Install\n\nYour SimpleMDM API key will need to be set as an environmental variable `api_key`.\n\nHelp available via `help(SimpleMDMpy)`\n\n## Sample Projects\n\n* [Making SimpleMDM Complicated](https://github.com/lucasjhall/CONF-2021_MDO_YVR-Making_SimpleMDM_Complicated)\n* [SimpleCLI](https://github.com/MagerValp/SimpleCLI)\n\n## Available Modules\n\n### Account\n\n```python\nclass Account(SimpleMDMpy.SimpleMDM.Connection)\n |  account class provides auth and basic account details\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  get_account_details(self)\n |      returns account details as dict\n |\n |  set_account_details(self, name=None, country_code=None)\n |      set account detail\n```\n\n### App Groups\n\n```python\nclass AppGroups(SimpleMDMpy.SimpleMDM.Connection)\n |  App Groups class provides interaction with Application Groups\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  assign_app(self, app_group_id, app_id)\n |      remove app group from group\n |\n |  assign_device(self, app_group_id, device_id)\n |      assign device to app group\n |\n |  assign_device_group(self, app_group_id, device_group_id)\n |      assign device group from app group\n |\n |  create_app_group(self, name, auto_deploy='true')\n |      create app group\n |\n |  delete_app_group(self, app_group_id)\n |      remove app group\n |\n |  get_app_group(self, app_group_id='all')\n |      Get an app group, defaults to 'all' if 'app_group_id' is not present\n |\n |  push_apps(self, app_group_id)\n |      push apps in app group\n |\n |  un_assign_app(self, app_group_id, app_id)\n |      unassign app from app group\n |\n |  un_assign_device(self, app_group_id, device_id)\n |      unassign apps in app group\n |\n |  un_assign_device_group(self, app_group_id, device_group_id)\n |      remove device group from app group\n |\n |  update_app_group(self, app_group_id, name=None, auto_deploy='true')\n |      update app group\n |\n |  update_apps(self, app_group_id)\n |      update apps\n |\n\n```\n\n### Apps\n\n```python\nclass Apps(SimpleMDMpy.SimpleMDM.Connection)\n |  apps module for SimpleMDMpy\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  create_app(self, name=None, app_store_id=None, bundle_id=None, binary=None)\n |      upload an app binary\n |\n |  delete_app(self, app_id)\n |      delete an app\n |\n |  get_app(self, app_id='all')\n |      list app, if none specified all return\n |\n |  update_app(self, app_id, binary=None, name=None)\n |      update an apps info binary etc\n |\n```\n\n### Assignment Groups\n\n```python\nclass AssignmentGroups(SimpleMDMpy.SimpleMDM.Connection)\n |  assignment groups module for SimpleMDMpy\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  assign_app(self, assignment_group_id, app_id)\n |      assign app to an assignment group\n |\n |  assign_device(self, assignment_group_id, device_id)\n |      assign device to an assignment group\n |\n |  assign_device_group(self, assignment_group_id, device_group_id)\n |      assigns a device group\n |\n |  create_assignment_group(self, name, auto_deploy)\n |      creates an assignment group\n |\n |  delete_assignment_group(self, assignment_group_id)\n |      delete an app to an assignment group\n |\n |  get_assignment_groups(self, assignment_group_id='all')\n |      returns assignment group(s), defaults to all if none specified\n |\n |  push_apps(self, assignment_group_id)\n |      push apps in an assignment group\n |\n |  unassign_app(self, assignment_group_id, app_id)\n |      unassign app to an assignment group\n |\n |  unassign_device(self, assignment_group_id, device_id)\n |      unassign device to an assignment group\n |\n |  unassign_device_group(self, assignment_group_id, device_group_id)\n |      delete a device group assignment\n |\n |  update_apps(self, assignment_group_id)\n |      update apps in an assignment group\n |\n |  update_assignment_group(self, assignment_group_id, name, auto_deploy)\n |      updates an assignment group\n |\n\n```\n\n### Custom Attributes\n\n```python\nclass CustomAttributes(SimpleMDMpy.SimpleMDM.Connection)\n |  work with custom attributes\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  create_custom_attribute(self, name)\n |      create custom attribute\n |\n |  delete_custom_attribute(self, custom_attribute_id)\n |      deletes custom attribute\n |\n |  get_custom_attributes(self)\n |      lists all custom attributes\n |\n```\n\n<!-- TODO: Custom Configuration -->\n\n### Custom Configuration Profiles\n```python\nclass CustomConfigurationProfiles(SimpleMDMpy.SimpleMDM.Connection)\n |  work with custom profiles\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  assign_to_device_group(self, profile_id, device_group_id)\n |      assigns custom profile to group\n |\n |  create_profile(self, name, mobileconfig, user_scope=None, attribute_support=False)\n |      upload a config file\n |\n |  delete_profile(self, profile_id)\n |      deletes custom profile\n |\n |  download_profile(self, profile_id)\n |      downloads custom profile\n |\n |  get_profiles(self)\n |      returns profiles\n |\n |  unassign_from_device_group(self, profile_id, device_group_id)\n |      deletes profile from device group\n |\n |  update_profile(self, profile_id, name=None, mobileconfig=None, user_scope=None, attribute_support=None)\n |      update a config file\n |\n```\n\n### DEP Servers\n\n```python\nclass DepServers(SimpleMDMpy.SimpleMDM.Connection)\n |  module for interacting with dep server configurations\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  get_dep_devices(self, dep_server_id, dep_device_id='all')\n |      return a DEP device via an ID, defaults to all if none specified\n |\n |  get_dep_servers(self, dep_server_id='all')\n |      returns dep servers, defaults to all if none specified\n |\n |  sync_dep_servers(self, dep_server_id)\n |      syncs specified server with Apple DEP\n |\n```\n\n### Devices\n\n```python\nclass Devices(SimpleMDMpy.SimpleMDM.Connection)\n |  devices module for SimpleMDMpy\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  clear_firmware_password(self, device_id)\n |      You can use this method to remove the firmware password from a device.\n |      The firmware password must have been originally set using SimpleMDM for\n |      this to complete successfully.\n |\n |  clear_passcode_device(self, device_id)\n |      You can use this method to unlock and remove the passcode of a device.\n |\n |  create_device(self, name, group_id)\n |      Creates a new device object in SimpleMDM. The response\n |      body includes an enrollment URL that can be used once to\n |      enroll a physical device.\n |\n |  delete_device(self, device_id)\n |      Unenroll a device and remove it from the account.\n |\n |  get_custom_attribute(self, device_id, custom_attribute_name)\n |      get a devices custom attributes\n |\n |  get_device(self, device_id='all', search=None, include_awaiting_enrollment=False)\n |      Returns a device specified by id. If no ID or search is\n |      specified all devices will be returned. Default does not include devices\n |      waiting for enrollment\n |\n |  list_installed_apps(self, device_id)\n |      Returns a listing of the apps installed on a device.\n |\n |  lock_device(self, device_id, message, phone_number, pin=None)\n |      You can use this method to lock a device and optionally display\n |      a message and phone number. The device can be unlocked with the\n |      existing passcode of the device.\n |\n |  push_apps_device(self, device_id)\n |      You can use this method to push all assigned apps\n |      to a device that are not already installed.\n |\n |  refresh_device(self, device_id)\n |      Request a refresh of the device information and app inventory.\n |      SimpleMDM will update the inventory information when the device responds\n |      to the request.\n |\n |  restart_device(self, device_id)\n |      This command sends a restart command to the device.\n |\n |  set_custom_attribute(self, value, device_id, custom_attribute_name)\n |      set a devices custom attribute to a specific value\n |\n |  shutdown_device(self, device_id)\n |      This command sends a shutdown command to the device.\n |\n |  update_device(self, device_id, name=None, device_name=None)\n |      Update the SimpleMDM name or device name of a device object.\n |\n |  update_os(self, device_id)\n |      You can use this method to update a device to the latest OS version.\n |      Currently supported by iOS devices only.\n |\n |  wipe_device(self, device_id)\n |      You can use this method to erase all content and settings stored on a\n |      device. The device will be unenrolled from SimpleMDM and returned to a\n |      factory default configuration.\n |\n```\n\n### Device Groups\n\n```python\nclass DeviceGroups(SimpleMDMpy.SimpleMDM.Connection)\n |  device groups module for SimpleMDMpy\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  assign_device(self, device_id, device_group_id)\n |      assign device to a group\n |\n |  get_device_group(self, device_group_id='all')\n |      get a devices group\n |\n```\n\n### Enrollments\n\n```python\nclass Enrollments(SimpleMDMpy.SimpleMDM.Connection)\n |  enrollments module for SimpleMDMpy\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  delete_enrollment(self, enrollment_id)\n |      delete enrollment\n |\n |  get_enrollments(self, enrollment_id='all')\n |      get a devices group\n |\n |  send_invitation(self, enrollment_id, contact)\n |      Send an enrollment invitation to an email address or phone number.\n |\n```\n\n### Installed Apps\n\n```python\nclass InstalledApps(SimpleMDMpy.SimpleMDM.Connection)\n |  Installed apps represent apps that are installed and exist on devices.\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  delete_app(self, installed_app_id)\n |      This submits a request to the device to uninstall the specified app.\n |      The app must be managed for this request to succeed.\n |\n |  get_app(self, installed_app_id)\n |      retrieve an installed app\n |\n |  update(self, installed_app_id)\n |      This submits a request to the device to update the specified app to\n |      the latest version. The app must be managed for this request to succeed.\n |\n```\n\n### Logs\n\n```python\nclass Logs(SimpleMDMpy.SimpleMDM.Connection)\n |  GET all the LOGS\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  get_logs(self, starting_after=None, limit=None)\n |      And I mean all the LOGS, before pagination\n |\n\n```\n\n### Lost Mode\n\n```python\nclass LostMode(SimpleMDMpy.SimpleMDM.Connection)\n |  Interact with lost mode on a device.\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  disable(self, device_id)\n |      Disable lost mode on a device.\n |\n |  enable(self, device_id)\n |      Activate lost mode on a device.\n |\n |  play_sound(self, device_id)\n |      Request that the device play a sound to assist\n |      with locating it.\n |\n |  update_location(self, device_id)\n |      Request that the device provide its current,\n |      up-to-date location. Location data can be viewed\n |      using the devices endpoint.\n |\n\n```\n\n### Managed App Configs\n\n```python\nclass ManagedAppConfigs(SimpleMDMpy.SimpleMDM.Connection)\n |  Create, modify, and remove the managed app configuration\n |  associated with an app.\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  delete_config(self, app_id, managed_config_id)\n |      Delete managed config from an app by ID.\n |\n |  get_managed_configs(self, app_id)\n |      \"Retrieve the managed configs for an app.\n |\n |  push_updates(self, app_id)\n |      Push any updates to the managed configurations\n |      for an app to all devices. This is not necessary\n |      when making managed config changes through the UI.\n |      This is necessary after making changes through the API.\n |\n```\n\n### Push Certificate\n\n```python\nclass PushCertificate(SimpleMDMpy.SimpleMDM.Connection)\n |  Push cert module actions\n |\n |  Methods defined here:\n |\n |  __init__(self, api_key)\n |\n |  get_signed_csr(self)\n |      Download a signed CSR file. This file is\n |      provided to Apple when creating and renewing a\n |      push certificate. The API returns a base64\n |      encoded plist for upload to the Apple Push\n |      Certificates Portal. The value of the data\n |      key can be uploaded to Apple as is\n |\n |  getpush_certificate(self)\n |      Show details related to the current push\n |      certificate being used.\n |\n |  update_certificate(self, file, apple_id)\n |      Upload a new certificate and replace the\n |      existing certificate for your account.\n |\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/macadmins/simpleMDMpy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "MacAdmins",
    "maintainer_email": "",
    "name": "SimpleMDMpy",
    "package_url": "https://pypi.org/project/SimpleMDMpy/",
    "platform": null,
    "project_url": "https://pypi.org/project/SimpleMDMpy/",
    "project_urls": {
      "Homepage": "https://github.com/macadmins/simpleMDMpy"
    },
    "release_url": "https://pypi.org/project/SimpleMDMpy/3.0.7/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "A Python Library for SimpleMDM.",
    "version": "3.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16194450,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "199bd8df8a04ebec449fa308cea4f804628ffb51c3fa4eb4713449e7aaccc390",
          "md5": "57d4c196cde60ff305a6c3056bcf5fe3",
          "sha256": "6624bc1531a0f251d63258bcc0cfa03781ea4146e74b5712b31830fd410dade0"
        },
        "downloads": -1,
        "filename": "simpleMDMpy-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "57d4c196cde60ff305a6c3056bcf5fe3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2640,
        "upload_time": "2017-09-10T13:34:38",
        "upload_time_iso_8601": "2017-09-10T13:34:38.949891Z",
        "url": "https://files.pythonhosted.org/packages/19/9b/d8df8a04ebec449fa308cea4f804628ffb51c3fa4eb4713449e7aaccc390/simpleMDMpy-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2d14a610a9c5240fb9ba9f2da3a6ac1fe392413b705804aa2dc49b5b2c60171",
          "md5": "1df84a83ef200ccad31d3c213c9846dd",
          "sha256": "2b45459fecf60ecce2fe8ea052a8d58ba7f77029d241bc379f2dff8d768f85b6"
        },
        "downloads": -1,
        "filename": "simpleMDMpy-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1df84a83ef200ccad31d3c213c9846dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2698,
        "upload_time": "2017-10-18T08:53:26",
        "upload_time_iso_8601": "2017-10-18T08:53:26.444596Z",
        "url": "https://files.pythonhosted.org/packages/c2/d1/4a610a9c5240fb9ba9f2da3a6ac1fe392413b705804aa2dc49b5b2c60171/simpleMDMpy-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d08607bb660d9da949a50e814884c7f2b4993d2d992a4332d7cf2755caaf192",
          "md5": "4b3ce208c368eaad9ae19e86291377b1",
          "sha256": "a04eb21fe4117feaa4156c8561757778b874a45fe232a6c9048297ca5c2a9908"
        },
        "downloads": -1,
        "filename": "simpleMDMpy-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4b3ce208c368eaad9ae19e86291377b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2747,
        "upload_time": "2017-10-26T08:26:21",
        "upload_time_iso_8601": "2017-10-26T08:26:21.441079Z",
        "url": "https://files.pythonhosted.org/packages/7d/08/607bb660d9da949a50e814884c7f2b4993d2d992a4332d7cf2755caaf192/simpleMDMpy-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eac50bc9dc741581bb6e6268bdf35910adfd05a60156ce69d19514ae91a6f19d",
          "md5": "7375fa57beaa1e051667ec157e11a645",
          "sha256": "cfd02fc207e593f032ed759b00d9d7ce18d57e5e575489f3eda91dcab154b98f"
        },
        "downloads": -1,
        "filename": "simpleMDMpy-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7375fa57beaa1e051667ec157e11a645",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2760,
        "upload_time": "2017-11-01T12:24:48",
        "upload_time_iso_8601": "2017-11-01T12:24:48.254978Z",
        "url": "https://files.pythonhosted.org/packages/ea/c5/0bc9dc741581bb6e6268bdf35910adfd05a60156ce69d19514ae91a6f19d/simpleMDMpy-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9430624ac9c03bbea48ce0a14c82f9e8922abd89f7dc794a2d0fb044bd1d205f",
          "md5": "36e04dac00cc9fc3d7664f9c8db01bfe",
          "sha256": "1be11d2b8edbdee8662d32a964076638486756710f72685c1b25310dbbf2fa65"
        },
        "downloads": -1,
        "filename": "simpleMDMpy-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "36e04dac00cc9fc3d7664f9c8db01bfe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2677,
        "upload_time": "2017-11-01T12:56:52",
        "upload_time_iso_8601": "2017-11-01T12:56:52.411588Z",
        "url": "https://files.pythonhosted.org/packages/94/30/624ac9c03bbea48ce0a14c82f9e8922abd89f7dc794a2d0fb044bd1d205f/simpleMDMpy-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69f53a0e674b57df32bf56627cc50da8843b5a66ef5a98266a23ba0fef7b12e3",
          "md5": "d929ffd4ce5f540f66c08b41153dce2c",
          "sha256": "e2829bef27f878af8c7782d8d1c2e5f7adb945ab498cc7d1336ca3a03754e8e4"
        },
        "downloads": -1,
        "filename": "simpleMDMpy-1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d929ffd4ce5f540f66c08b41153dce2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2676,
        "upload_time": "2017-11-01T13:17:06",
        "upload_time_iso_8601": "2017-11-01T13:17:06.727758Z",
        "url": "https://files.pythonhosted.org/packages/69/f5/3a0e674b57df32bf56627cc50da8843b5a66ef5a98266a23ba0fef7b12e3/simpleMDMpy-1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a55319be68e639c2d5b469a5f7b3753c97000e8b2547de97fb04cb629deae8f1",
          "md5": "5181f1b30a92369be1e3bcba46eadcbb",
          "sha256": "2cc8c5dc36a04e7d5f49bdc7c8874e99104c17d85eab11806ecc8742cb214f3c"
        },
        "downloads": -1,
        "filename": "simpleMDMpy-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "5181f1b30a92369be1e3bcba46eadcbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2697,
        "upload_time": "2018-03-14T08:42:15",
        "upload_time_iso_8601": "2018-03-14T08:42:15.354820Z",
        "url": "https://files.pythonhosted.org/packages/a5/53/19be68e639c2d5b469a5f7b3753c97000e8b2547de97fb04cb629deae8f1/simpleMDMpy-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b83350e9bf581d1f5bdb32ad592f04fd4c5256e22fbee32024bffe390b743a51",
          "md5": "f3323553c66eef6c8e3c1e68a5c759e9",
          "sha256": "3f1bbba779f85dc9b9682d37bf247768f1db8b2a37f03b6c5fe746cfe90e9ee7"
        },
        "downloads": -1,
        "filename": "simpleMDMpy-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f3323553c66eef6c8e3c1e68a5c759e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2842,
        "upload_time": "2018-09-20T13:08:34",
        "upload_time_iso_8601": "2018-09-20T13:08:34.951094Z",
        "url": "https://files.pythonhosted.org/packages/b8/33/50e9bf581d1f5bdb32ad592f04fd4c5256e22fbee32024bffe390b743a51/simpleMDMpy-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "092c80908874ce6ce25d54b8f0234a4c3a533a4218b6e07dd1487a702e5eed6d",
          "md5": "6957b1af69ba6628ea5ff5b637938086",
          "sha256": "6456aafa119933f298fa3de73a02b743cd799ba018bfae81e276e429f3941008"
        },
        "downloads": -1,
        "filename": "simpleMDMpy-2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6957b1af69ba6628ea5ff5b637938086",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2861,
        "upload_time": "2018-09-21T08:31:22",
        "upload_time_iso_8601": "2018-09-21T08:31:22.345632Z",
        "url": "https://files.pythonhosted.org/packages/09/2c/80908874ce6ce25d54b8f0234a4c3a533a4218b6e07dd1487a702e5eed6d/simpleMDMpy-2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04d91bca9eb735d0c337e313c655082b1c4743b5788de263290263c3983774e7",
          "md5": "2b80e6a4ac01e4409e7f2c08f943c5e4",
          "sha256": "73bdec690c65d67a0f8298f2a26e3179598a30e7a0025e40b003cd4b70a5be96"
        },
        "downloads": -1,
        "filename": "simpleMDMpy-2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2b80e6a4ac01e4409e7f2c08f943c5e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2860,
        "upload_time": "2018-09-21T08:41:57",
        "upload_time_iso_8601": "2018-09-21T08:41:57.692665Z",
        "url": "https://files.pythonhosted.org/packages/04/d9/1bca9eb735d0c337e313c655082b1c4743b5788de263290263c3983774e7/simpleMDMpy-2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c65f067ef5707451228927b67649ab95354ec8bab45f08645c6b4d621f773de",
          "md5": "271f64a62570bb8bfd9a07b4fe52c91c",
          "sha256": "8e875b60749a6b083c3c9ce43f614b318563462d822fecf2433e1951dcce0277"
        },
        "downloads": -1,
        "filename": "simpleMDMpy-2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "271f64a62570bb8bfd9a07b4fe52c91c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2859,
        "upload_time": "2018-09-21T11:16:30",
        "upload_time_iso_8601": "2018-09-21T11:16:30.199114Z",
        "url": "https://files.pythonhosted.org/packages/8c/65/f067ef5707451228927b67649ab95354ec8bab45f08645c6b4d621f773de/simpleMDMpy-2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "010a396f15bb6e678f11b3e723f33666e0631b711a8cf7efc2bcb6b04faf91b5",
          "md5": "7ff846303435c3e5bddc07066ff18688",
          "sha256": "1b753d77fb5f7ca9da980cfe5147f653f1ef43d0ec1a96abcc052a5196551a10"
        },
        "downloads": -1,
        "filename": "simpleMDMpy-2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7ff846303435c3e5bddc07066ff18688",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2864,
        "upload_time": "2018-09-21T11:58:00",
        "upload_time_iso_8601": "2018-09-21T11:58:00.892222Z",
        "url": "https://files.pythonhosted.org/packages/01/0a/396f15bb6e678f11b3e723f33666e0631b711a8cf7efc2bcb6b04faf91b5/simpleMDMpy-2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f8ac4094817d35a74e872cae8ae4d2344931496f8c2515cf4b731c1ee88cb18",
          "md5": "5f83fb017283c6b9e0dc2bd51ccff83f",
          "sha256": "fdeec26e85a85cc26d5ea463beb947a4ae60fe4f0add87ddb7a7d0dc461cea3b"
        },
        "downloads": -1,
        "filename": "SimpleMDMpy-3.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f83fb017283c6b9e0dc2bd51ccff83f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20429,
        "upload_time": "2022-12-23T05:24:29",
        "upload_time_iso_8601": "2022-12-23T05:24:29.854882Z",
        "url": "https://files.pythonhosted.org/packages/7f/8a/c4094817d35a74e872cae8ae4d2344931496f8c2515cf4b731c1ee88cb18/SimpleMDMpy-3.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79344207fe4f4ca95cc3f7df69d9fa5b7fa17075572c343d1de7821b8eea054a",
          "md5": "a3d067c3d3e94de2a01b6bb461ae4f58",
          "sha256": "f1f60e5f4dd4fa077b72a6fd8b628084a83438075ec2719da48b0719770f17ee"
        },
        "downloads": -1,
        "filename": "SimpleMDMpy-3.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "a3d067c3d3e94de2a01b6bb461ae4f58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15887,
        "upload_time": "2022-12-23T05:24:31",
        "upload_time_iso_8601": "2022-12-23T05:24:31.612431Z",
        "url": "https://files.pythonhosted.org/packages/79/34/4207fe4f4ca95cc3f7df69d9fa5b7fa17075572c343d1de7821b8eea054a/SimpleMDMpy-3.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f8ac4094817d35a74e872cae8ae4d2344931496f8c2515cf4b731c1ee88cb18",
        "md5": "5f83fb017283c6b9e0dc2bd51ccff83f",
        "sha256": "fdeec26e85a85cc26d5ea463beb947a4ae60fe4f0add87ddb7a7d0dc461cea3b"
      },
      "downloads": -1,
      "filename": "SimpleMDMpy-3.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5f83fb017283c6b9e0dc2bd51ccff83f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20429,
      "upload_time": "2022-12-23T05:24:29",
      "upload_time_iso_8601": "2022-12-23T05:24:29.854882Z",
      "url": "https://files.pythonhosted.org/packages/7f/8a/c4094817d35a74e872cae8ae4d2344931496f8c2515cf4b731c1ee88cb18/SimpleMDMpy-3.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "79344207fe4f4ca95cc3f7df69d9fa5b7fa17075572c343d1de7821b8eea054a",
        "md5": "a3d067c3d3e94de2a01b6bb461ae4f58",
        "sha256": "f1f60e5f4dd4fa077b72a6fd8b628084a83438075ec2719da48b0719770f17ee"
      },
      "downloads": -1,
      "filename": "SimpleMDMpy-3.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "a3d067c3d3e94de2a01b6bb461ae4f58",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15887,
      "upload_time": "2022-12-23T05:24:31",
      "upload_time_iso_8601": "2022-12-23T05:24:31.612431Z",
      "url": "https://files.pythonhosted.org/packages/79/34/4207fe4f4ca95cc3f7df69d9fa5b7fa17075572c343d1de7821b8eea054a/SimpleMDMpy-3.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}