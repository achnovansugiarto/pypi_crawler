{
  "info": {
    "author": "seanlab",
    "author_email": "seanlabcoding33@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/algorithms.svg)](https://badge.fury.io/py/algorithms)\n[![Open Source Helpers](https://www.codetriage.com/keon/algorithms/badges/users.svg)](https://www.codetriage.com/keon/algorithms)\n[![Build Status](https://travis-ci.org/keon/algorithms.svg?branch=master)](https://travis-ci.org/keon/algorithms)\n[![Coverage Status](https://coveralls.io/repos/github/keon/algorithms/badge.svg?branch=master)](https://coveralls.io/github/keon/algorithms?branch=master)\n\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/seanlab3/algorithms/master/wimg/2048_seanlab_trans.png\"></p>\n\nSEANLAB Algorithms\nPythonic Data Structures and Algorithms\n=========================================\n\nMinimal and clean example implementations of data structures and algorithms in Python 3.\n\n## Contributing\nThanks for your interest in contributing! There are many ways to contribute to this project. [Get started here](CONTRIBUTING.md)\n\n## Tests\n\n### Use unittest\nFor running all tests write down:\n\n    $ python3 -m unittest discover tests\n\nFor running some specific tests you can do this as following (Ex: sort):\n\n    $ python3 -m unittest tests.test_sort\n\n### Use pytest\nFor running all tests write down:\n\n    $ python3 -m pytest tests\n\n## Install\nIf you want to use the API algorithms in your code, it is as simple as:\n\n    $ pip3 install seanalgorithms\n\nYou can test by creating a python file: (Ex: use `merge_sort` in `sort`)\n\n```python3\nfrom seanalgorithms.sort import merge_sort\n\nif __name__ == \"__main__\":\n    my_list = [1, 8, 3, 5, 6]\n    my_list = merge_sort(my_list)\n    print(my_list)\n```\n\n## Uninstall\nIf you want to uninstall seanalgorithms, it is as simple as:\n\n    $ pip3 uninstall -y seanalgorithms\n\n## List of Implementations\n  \n  - [algorithms_practice](algorithms_practice/arrays)\n    \n  - [arrays](arrays)\n    - [delete_nth](arrays/delete_nth.py)\n    - [flatten](arrays/flatten.py)\n    - [garage](arrays/garage.py)\n    - [josephus_problem](arrays/josephus.py)\n    - [limit](arrays/limit.py)\n    - [longest_non_repeat](arrays/longest_non_repeat.py/)\n    - [max_ones_index](arrays/max_ones_index.py)\n    - [merge_intervals](arrays/merge_intervals.py)\n    - [missing_ranges](arrays/missing_ranges.py)\n    - [plus_one](arrays/plus_one.py)\n    - [rotate](arrays/rotate.py)\n    - [summarize_ranges](arrays/summarize_ranges.py)\n    - [three_sum](arrays/three_sum.py)\n    - [trimmean](arrays/trimmean.py)\n    - [top_1](arrays/top_1.py)\n    - [two_sum](arrays/two_sum.py)\n    - [move_zeros](arrays/move_zeros.py)\n    - [n_sum](arrays/n_sum.py)\n- [automata](automata)\n    - [DFA](automata/dfa.py)\n- [backtrack](backtrack)\n    - [general_solution.md](backtrack/)\n    - [add_operators](backtrack/add_operators.py)\n    - [anagram](backtrack/anagram.py)\n    - [array_sum_combinations](backtrack/array_sum_combinations.py)\n    - [combination_sum](backtrack/combination_sum.py)\n    - [factor_combinations](backtrack/factor_combinations.py)\n    - [generate_abbreviations](backtrack/generate_abbreviations.py)\n    - [generate_parenthesis](backtrack/generate_parenthesis.py)\n    - [letter_combination](backtrack/letter_combination.py)\n    - [palindrome_partitioning](backtrack/palindrome_partitioning.py)\n    - [pattern_match](backtrack/pattern_match.py)\n    - [permute](backtrack/permute.py)\n    - [permute_unique](backtrack/permute_unique.py)\n    - [subsets](backtrack/subsets.py)\n    - [subsets_unique](backtrack/subsets_unique.py)\n- [bfs](bfs)\n    - [maze_search](bfs/maze_search.py)\n    - [shortest_distance_from_all_buildings](bfs/shortest_distance_from_all_buildings.py)\n    - [word_ladder](bfs/word_ladder.py)\n- [bit](bit)\n    - [add_bitwise_operator](bit/add_bitwise_operator.py)\n    - [bit_operation](bit/bit_operation.py)\n    - [bytes_int_conversion](bit/bytes_int_conversion.py)\n    - [count_flips_to_convert](bit/count_flips_to_convert.py)\n    - [count_ones](bit/count_ones.py)\n    - [find_difference](bit/find_difference.py)\n    - [find_missing_number](bit/find_missing_number.py)\n    - [flip_bit_longest_sequence](bit/flip_bit_longest_sequence.py)\n    - [power_of_two](bit/power_of_two.py)\n    - [reverse_bits](bit/reverse_bits.py)\n    - [single_number](bit/single_number.py)\n    - [single_number2](bit/single_number2.py)\n    - [single_number3](bit/single_number3.py)\n    - [subsets](bit/subsets.py)\n    - [swap_pair](bit/swap_pair.py)\n    - [has_alternative_bit](bit/has_alternative_bit.py)\n    - [insert_bit](bit/insert_bit.py)\n    - [remove_bit](bit/remove_bit.py)\n    - [binary_gap](bit/binary_gap.py)\n- [compression](compression)\n    - [huffman_coding](compression/huffman_coding.py)\n    - [rle_compression](compression/rle_compression.py)\n    - [elias](compression/elias.py)\n- [dfs](dfs)\n    - [all_factors](dfs/all_factors.py)\n    - [count_islands](dfs/count_islands.py)\n    - [pacific_atlantic](dfs/pacific_atlantic.py)\n    - [sudoku_solver](dfs/sudoku_solver.py)\n    - [walls_and_gates](dfs/walls_and_gates.py)\n- [distribution](distribution)\n    - [histogram](distribution/histogram.py)\n- [dp](dp)\n    - [buy_sell_stock](dp/buy_sell_stock.py)\n    - [climbing_stairs](dp/climbing_stairs.py)\n    - [coin_change](dp/coin_change.py)\n    - [combination_sum](dp/combination_sum.py)\n    - [egg_drop](dp/egg_drop.py)\n    - [house_robber](dp/house_robber.py)\n    - [int_divide](dp/int_divide.py)\n    - [job_scheduling](dp/job_scheduling.py)\n    - [knapsack](dp/knapsack.py)\n    - [longest_increasing](dp/longest_increasing.py)\n    - [matrix_chain_order](dp/matrix_chain_order.py)\n    - [max_product_subarray](dp/max_product_subarray.py)\n    - [max_subarray](dp/max_subarray.py)\n    - [min_cost_path](dp/min_cost_path.py)\n    - [num_decodings](dp/num_decodings.py)\n    - [regex_matching](dp/regex_matching.py)\n    - [rod_cut](dp/rod_cut.py)\n    - [word_break](dp/word_break.py)\n    - [fibonacci](dp/fib.py)\n\t- [hosoya triangle](dp/hosoya_triangle.py)\n- [graph](graph)\n    - [check_bipartite](graph/check_bipartite.py)\n    - [strongly_connected](graph/check_digraph_strongly_connected.py)\n    - [clone_graph](graph/clone_graph.py)\n    - [cycle_detection](graph/cycle_detection.py)\n    - [find_all_cliques](graph/find_all_cliques.py)\n    - [find_path](graph/find_path.py)\n    - [graph](graph/graph.py)\n    - [dijkstra](graph/dijkstra.py)\n    - [markov_chain](graph/markov_chain.py)\n    - [minimum_spanning_tree](graph/minimum_spanning_tree.py)\n    - [satisfiability](graph/satisfiability.py)\n    - [minimum_spanning_tree_prims](graph/prims_minimum_spanning.py)\n    - [tarjan](graph/tarjan.py)\n    - [traversal](graph/traversal.py)\n    - [maximum_flow](graph/maximum_flow.py)\n    - [maximum_flow_bfs](graph/maximum_flow_bfs.py)\n    - [maximum_flow_dfs](graph/maximum_flow_dfs.py)\n    - [all_pairs_shortest_path](graph/all_pairs_shortest_path.py)\n    - [bellman_ford](graph/bellman_ford.py)\n    - [Count Connected Components](graph/count_connected_number_of_component.py)\n- [heap](heap)\n    - [merge_sorted_k_lists](heap/merge_sorted_k_lists.py)\n    - [skyline](heap/skyline.py)\n    - [sliding_window_max](heap/sliding_window_max.py)\n    - [binary_heap](heap/binary_heap.py)\n    - [k_closest_points](heap/k_closest_points.py)\n    - [linkedlist](linkedlist)\n    - [add_two_numbers](linkedlist/add_two_numbers.py)\n    - [copy_random_pointer](linkedlist/copy_random_pointer.py)\n    - [delete_node](linkedlist/delete_node.py)\n    - [first_cyclic_node](linkedlist/first_cyclic_node.py)\n    - [is_cyclic](linkedlist/is_cyclic.py)\n    - [is_palindrome](linkedlist/is_palindrome.py)\n    - [kth_to_last](linkedlist/kth_to_last.py)\n    - [linkedlist](linkedlist/linkedlist.py)\n    - [remove_duplicates](linkedlist/remove_duplicates.py)\n    - [reverse](linkedlist/reverse.py)\n    - [rotate_list](linkedlist/rotate_list.py)\n    - [swap_in_pairs](linkedlist/swap_in_pairs.py)\n    - [is_sorted](linkedlist/is_sorted.py)\n    - [remove_range](linkedlist/remove_range.py)\n- [map](map)\n    - [hashtable](map/hashtable.py)\n    - [separate_chaining_hashtable](map/separate_chaining_hashtable.py)\n    - [longest_common_subsequence](map/longest_common_subsequence.py)\n    - [randomized_set](map/randomized_set.py)\n    - [valid_sudoku](map/valid_sudoku.py)\n    - [word_pattern](map/word_pattern.py)\n    - [is_isomorphic](map/is_isomorphic.py)\n    - [is_anagram](map/is_anagram.py)\n- [maths](maths)\n    - [power](maths/power.py)\n    - [base_conversion](maths/base_conversion.py)\n    - [combination](maths/combination.py)\n    - [cosine_similarity](maths/cosine_similarity.py)\n    - [decimal_to_binary_ip](maths/decimal_to_binary_ip.py)\n    - [euler_totient](maths/euler_totient.py)\n    - [extended_gcd](maths/extended_gcd.py)\n    - [factorial](maths/factorial.py)\n    - [gcd/lcm](maths/gcd.py)\n    - [generate_strobogrammtic](maths/generate_strobogrammtic.py)\n    - [is_strobogrammatic](maths/is_strobogrammatic.py)\n    - [modular_exponential](maths/modular_exponential.py)\n    - [next_bigger](maths/next_bigger.py)\n    - [next_perfect_square](maths/next_perfect_square.py)\n    - [nth_digit](maths/nth_digit.py)\n    - [prime_check](maths/prime_check.py)\n    - [primes_sieve_of_eratosthenes](maths/primes_sieve_of_eratosthenes.py)\n    - [pythagoras](maths/pythagoras.py)\n    - [rabin_miller](maths/rabin_miller.py)\n    - [rsa](maths/rsa.py)\n    - [sqrt_precision_factor](maths/sqrt_precision_factor.py)\n    - [summing_digits](maths/summing_digits.py)\n    - [hailstone](maths/hailstone.py)\n    - [recursive_binomial_coefficient](maths/recursive_binomial_coefficient.py)\n    - [find_order](maths/find_order_simple.py)\n\t- [find_primitive_root](maths/find_primitive_root_simple.py)\n\t- [diffie_hellman_key_exchange](maths/diffie_hellman_key_exchange.py)\n- [matrix](matrix)\n    - [sudoku_validator](matrix/sudoku_validator.py)\n    - [bomb_enemy](matrix/bomb_enemy.py)\n    - [copy_transform](matrix/copy_transform.py)\n    - [count_paths](matrix/count_paths.py)\n    - [matrix_exponentiation](matrix/matrix_exponentiation.py)\n    - [matrix_inversion](matrix/matrix_inversion.py)\n    - [matrix_multiplication](matrix/multiply.py)\n    - [rotate_image](matrix/rotate_image.py)\n    - [search_in_sorted_matrix](matrix/search_in_sorted_matrix.py)\n    - [sparse_dot_vector](matrix/sparse_dot_vector.py)\n    - [sparse_mul](matrix/sparse_mul.py)\n    - [spiral_traversal](matrix/spiral_traversal.py)\n\t- [crout_matrix_decomposition](matrix/crout_matrix_decomposition.py)\n\t- [cholesky_matrix_decomposition](matrix/cholesky_matrix_decomposition.py)\n    - [sum_sub_squares](matrix/sum_sub_squares.py)\n- [queues](queues)\n    - [max_sliding_window](queues/max_sliding_window.py)\n    - [moving_average](queues/moving_average.py)\n    - [queue](queues/queue.py)\n    - [reconstruct_queue](queues/reconstruct_queue.py)\n    - [zigzagiterator](queues/zigzagiterator.py)\n- [search](search)\n    - [binary_search](search/binary_search.py)\n    - [first_occurrence](search/first_occurrence.py)\n    - [last_occurrence]( search/last_occurrence.py)\n    - [linear_search](search/linear_search.py)\n    - [search_insert](search/search_insert.py)\n    - [two_sum](search/two_sum.py)\n    - [search_range](search/search_range.py)\n    - [find_min_rotate](search/find_min_rotate.py)\n    - [search_rotate](search/search_rotate.py)\n    - [jump_search](search/jump_search.py)\n    - [next_greatest_letter](search/next_greatest_letter.py)\n    - [interpolation_search](search/interpolation_search.py)\n- [set](set)\n    - [randomized_set](set/randomized_set.py)\n    - [set_covering](set/set_covering.py)\n    - [find_keyboard_row](set/find_keyboard_row.py)\n- [sort](sort)\n    - [bitonic_sort](sort/bitonic_sort.py)\n    - [bogo_sort](sort/bogo_sort.py)\n    - [bubble_sort](sort/bubble_sort.py)\n    - [bucket_sort](sort/bucket_sort.py)\n    - [cocktail_shaker_sort](sort/cocktail_shaker_sort.py)\n    - [comb_sort](sort/comb_sort.py)\n    - [counting_sort](sort/counting_sort.py)\n    - [cycle_sort](sort/cycle_sort.py)\n    - [gnome_sort](sort/gnome_sort.py)\n    - [heap_sort](sort/heap_sort.py)\n    - [insertion_sort](sort/insertion_sort.py)\n    - [meeting_rooms](sort/meeting_rooms.py)\n    - [merge_sort](sort/merge_sort.py)\n    - [pancake_sort](sort/pancake_sort.py)\n    - [pigeonhole_sort](sort/pigeonhole_sort.py)\n    - [quick_sort](sort/quick_sort.py)\n    - [radix_sort](sort/radix_sort.py)\n    - [selection_sort](sort/selection_sort.py)\n    - [shell_sort](sort/shell_sort.py)\n    - [sort_colors](sort/sort_colors.py)\n    - [stooge_sort](sort/stooge_sort.py)\n    - [top_sort](sort/top_sort.py)\n    - [wiggle_sort](sort/wiggle_sort.py)\n- [stack](stack)\n    - [longest_abs_path](stack/longest_abs_path.py)\n    - [simplify_path](stack/simplify_path.py)\n    - [stack](stack/stack.py)\n    - [valid_parenthesis](stack/valid_parenthesis.py)\n    - [stutter](stack/stutter.py)\n    - [switch_pairs](stack/switch_pairs.py)\n    - [is_consecutive](stack/is_consecutive.py)\n    - [remove_min](stack/remove_min.py)\n    - [is_sorted](stack/is_sorted.py)\n- [strings](strings)\n    - [fizzbuzz](strings/fizzbuzz.py)\n    - [delete_reoccurring](strings/delete_reoccurring.py)\n    - [strip_url_params](strings/strip_url_params.py)\n    - [validate_coordinates](strings/validate_coordinates.py)\n    - [domain_extractor](strings/domain_extractor.py)\n    - [merge_string_checker](strings/merge_string_checker.py)\n    - [add_binary](strings/add_binary.py)\n    - [breaking_bad](strings/breaking_bad.py)\n    - [decode_string](strings/decode_string.py)\n    - [encode_decode](strings/encode_decode.py)\n    - [group_anagrams](strings/group_anagrams.py)\n    - [int_to_roman](strings/int_to_roman.py)\n    - [is_palindrome](strings/is_palindrome.py)\n    - [license_number](strings/license_number.py)\n    - [make_sentence](strings/make_sentence.py)\n    - [multiply_strings](strings/multiply_strings.py)\n    - [one_edit_distance](strings/one_edit_distance.py)\n    - [rabin_karp](strings/rabin_karp.py)\n    - [reverse_string](strings/reverse_string.py)\n    - [reverse_vowel](strings/reverse_vowel.py)\n    - [reverse_words](strings/reverse_words.py)\n    - [roman_to_int](strings/roman_to_int.py)\n    - [word_squares](strings/word_squares.py)\n    - [unique_morse](strings/unique_morse.py)\n    - [judge_circle](strings/judge_circle.py)\n    - [strong_password](strings/strong_password.py)\n    - [caesar_cipher](strings/caesar_cipher.py)\n    - [check_pangram](strings/check_pangram.py)\n    - [contain_string](strings/contain_string.py)\n    - [count_binary_substring](strings/count_binary_substring.py)\n    - [repeat_string](strings/repeat_string.py)\n    - [min_distance](strings/min_distance.py)\n    - [longest_common_prefix](strings/longest_common_prefix.py)\n    - [rotate](strings/rotate.py)\n    - [first_unique_char](strings/first_unique_char.py)\n    - [repeat_substring](strings/repeat_substring.py)\n\t  - [atbash_cipher](strings/atbash_cipher.py)\n    - [longest_palindromic_substring](strings/longest_palindromic_substring.py)\n  \t- [knuth_morris_pratt](strings/knuth_morris_pratt.py)\n- [tree](tree)\n    - [bst](tree/bst)\n        - [array_to_bst](tree/bst/array_to_bst.py)\n        - [bst_closest_value](tree/bst/bst_closest_value.py)\n        - [BSTIterator](tree/bst/BSTIterator.py)\n        - [delete_node](tree/bst/delete_node.py)\n        - [is_bst](tree/bst/is_bst.py)\n        - [kth_smallest](tree/bst/kth_smallest.py)\n        - [lowest_common_ancestor](tree/bst/lowest_common_ancestor.py)\n        - [predecessor](tree/bst/predecessor.py)\n        - [serialize_deserialize](tree/bst/serialize_deserialize.py)\n        - [successor](tree/bst/successor.py)\n        - [unique_bst](tree/bst/unique_bst.py)\n        - [depth_sum](tree/bst/depth_sum.py)\n        - [count_left_node](tree/bst/count_left_node.py)\n        - [num_empty](tree/bst/num_empty.py)\n        - [height](tree/bst/height.py)\n    - [red_black_tree](tree/red_black_tree)\n        - [red_black_tree](tree/red_black_tree/red_black_tree.py)\n    - [segment_tree](tree/segment_tree)\n        - [segment_tree](tree/segment_tree/segment_tree.py)\n        - [iterative_segment_tree](tree/segment_tree/iterative_segment_tree.py)\n    - [traversal](tree/traversal)\n        - [inorder](tree/traversal/inorder.py)\n        - [level_order](tree/traversal/level_order.py)\n        - [postorder](tree/traversal/postorder.py)\n        - [preorder](tree/traversal/preorder.py)\n        - [zigzag](tree/traversal/zigzag.py)\n    - [trie](tree/trie)\n        - [add_and_search](tree/trie/add_and_search.py)\n        - [trie](tree/trie/trie.py)\n    - [b_tree](tree/b_tree.py)\n    - [binary_tree_paths](tree/binary_tree_paths.py)\n    - [bin_tree_to_list](tree/bin_tree_to_list.py)\n    - [deepest_left](tree/deepest_left.py)\n    - [invert_tree](tree/invert_tree.py)\n    - [is_balanced](tree/is_balanced.py)\n    - [is_subtree](tree/is_subtree.py)\n    - [is_symmetric](tree/is_symmetric.py)\n    - [longest_consecutive](tree/longest_consecutive.py)\n    - [lowest_common_ancestor](tree/lowest_common_ancestor.py)\n    - [max_height](tree/max_height.py)\n    - [max_path_sum](tree/max_path_sum.py)\n    - [min_height](tree/min_height.py)\n    - [path_sum](tree/path_sum.py)\n    - [path_sum2](tree/path_sum2.py)\n    - [pretty_print](tree/pretty_print.py)\n    - [same_tree](tree/same_tree.py)\n    - [tree](tree/tree.py)\n- [unix](unix)\n    - [path](unix/path/)\n        - [join_with_slash](unix/path/join_with_slash.py)\n        - [full_path](unix/path/full_path.py)\n        - [split](unix/path/split.py)\n        - [simplify_path](unix/path/simplify_path.py)\n- [unionfind](unionfind)\n    - [count_islands](unionfind/count_islands.py)\n\n\n## Contributors\n seanlab1, seanlab3\n email: newstein33@gmail.com\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/seanlab3/algorithms",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "seanalgorithms",
    "package_url": "https://pypi.org/project/seanalgorithms/",
    "platform": "",
    "project_url": "https://pypi.org/project/seanalgorithms/",
    "project_urls": {
      "Homepage": "https://github.com/seanlab3/algorithms"
    },
    "release_url": "https://pypi.org/project/seanalgorithms/0.8/",
    "requires_dist": [
      "cython"
    ],
    "requires_python": "",
    "summary": "Python algorithms",
    "version": "0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11055939,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a2e09a866741c4960629e49211d033914130516b309b14abc910a2fca60a77b",
          "md5": "8bad9b107aa535258c6bf9b5343d5d02",
          "sha256": "bf863334ae3e75e07de0fb41ad0c69b8c66f6e709027c3bbfc43bae7ec6ba828"
        },
        "downloads": -1,
        "filename": "seanalgorithms-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8bad9b107aa535258c6bf9b5343d5d02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 193108,
        "upload_time": "2021-05-05T04:14:24",
        "upload_time_iso_8601": "2021-05-05T04:14:24.349607Z",
        "url": "https://files.pythonhosted.org/packages/9a/2e/09a866741c4960629e49211d033914130516b309b14abc910a2fca60a77b/seanalgorithms-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6604c231464573c6e3851d85deaee87aa0c4060c1435c8b51fb14318f5093517",
          "md5": "4208e0e43085cc853c7e9b6d844e8f67",
          "sha256": "815a47729254a23c2333c8ec6c3ec585cc5f98bc1159f3bd170791786b293d7c"
        },
        "downloads": -1,
        "filename": "seanalgorithms-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4208e0e43085cc853c7e9b6d844e8f67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 120483,
        "upload_time": "2021-05-05T04:14:26",
        "upload_time_iso_8601": "2021-05-05T04:14:26.706779Z",
        "url": "https://files.pythonhosted.org/packages/66/04/c231464573c6e3851d85deaee87aa0c4060c1435c8b51fb14318f5093517/seanalgorithms-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60bcf3f1241a55b6b2f2369672001c53837037b5b2ead5602767e35c8ee9c12c",
          "md5": "8a42034e5fce2a014dbcf146e5f8d838",
          "sha256": "2f78952994fd56e6140b5c4c5047cd40abcbeea0b4abb5a68161497d1d228cad"
        },
        "downloads": -1,
        "filename": "seanalgorithms-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a42034e5fce2a014dbcf146e5f8d838",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 192723,
        "upload_time": "2021-05-06T00:40:15",
        "upload_time_iso_8601": "2021-05-06T00:40:15.870782Z",
        "url": "https://files.pythonhosted.org/packages/60/bc/f3f1241a55b6b2f2369672001c53837037b5b2ead5602767e35c8ee9c12c/seanalgorithms-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08db6cefc8e8a16c98ddfe92605b8bda945631ffc196d28e24cb25774d2f4a7a",
          "md5": "b4599b8fa882a638a6c3b6343e4c939c",
          "sha256": "73b210f546a396839477384991790dd0c1b2f2da66d4b6333291b1321fe8f549"
        },
        "downloads": -1,
        "filename": "seanalgorithms-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b4599b8fa882a638a6c3b6343e4c939c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 120180,
        "upload_time": "2021-05-06T00:40:18",
        "upload_time_iso_8601": "2021-05-06T00:40:18.290780Z",
        "url": "https://files.pythonhosted.org/packages/08/db/6cefc8e8a16c98ddfe92605b8bda945631ffc196d28e24cb25774d2f4a7a/seanalgorithms-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1439c4fe6bcfb7adfd5e3dd7705ea465250d18d251c9fc55910a4315b5a6c912",
          "md5": "faf7a2412a726110b16bfdcb97f7883c",
          "sha256": "6f29abac82fa1e9e97f45186943cb54fe2d673bc367c5124c03db5cd13df5cbe"
        },
        "downloads": -1,
        "filename": "seanalgorithms-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "faf7a2412a726110b16bfdcb97f7883c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 192730,
        "upload_time": "2021-05-06T00:50:21",
        "upload_time_iso_8601": "2021-05-06T00:50:21.317791Z",
        "url": "https://files.pythonhosted.org/packages/14/39/c4fe6bcfb7adfd5e3dd7705ea465250d18d251c9fc55910a4315b5a6c912/seanalgorithms-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "513ddcbab28b4e2b93210bb3971c2e249a4cd09e81dfde6181d06bb9a25c7aa1",
          "md5": "903d60fd6feadc34f9bc992960363730",
          "sha256": "2e0dcc74c003d20ee237d0c14f9136d665d22a23650dc7bc60a1ff47d01e6470"
        },
        "downloads": -1,
        "filename": "seanalgorithms-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "903d60fd6feadc34f9bc992960363730",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 120208,
        "upload_time": "2021-05-06T00:50:23",
        "upload_time_iso_8601": "2021-05-06T00:50:23.758784Z",
        "url": "https://files.pythonhosted.org/packages/51/3d/dcbab28b4e2b93210bb3971c2e249a4cd09e81dfde6181d06bb9a25c7aa1/seanalgorithms-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8663246852792eb62f0f37cc5cbeff9ad86c841810bc2622dd33c45470f12e2",
          "md5": "2a5c96f36fe8efc02ad996259a83a465",
          "sha256": "f5c61324f0d445af42b6a36cd2139b63aa63cb0c710f745a96290e57c37758c2"
        },
        "downloads": -1,
        "filename": "seanalgorithms-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a5c96f36fe8efc02ad996259a83a465",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 192647,
        "upload_time": "2021-07-20T05:03:47",
        "upload_time_iso_8601": "2021-07-20T05:03:47.126842Z",
        "url": "https://files.pythonhosted.org/packages/f8/66/3246852792eb62f0f37cc5cbeff9ad86c841810bc2622dd33c45470f12e2/seanalgorithms-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd30e51db5323cd7a73f2476d12afaa2848930356e578a81d57fbd26c8ca4f04",
          "md5": "38b99d12dbd2cce29a4a0b35562ba9e4",
          "sha256": "474fb96fd9ba20624bc90e7443fe998a975e4979bd796c140a4fb1a360e1cb91"
        },
        "downloads": -1,
        "filename": "seanalgorithms-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "38b99d12dbd2cce29a4a0b35562ba9e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 126982,
        "upload_time": "2021-07-20T05:03:48",
        "upload_time_iso_8601": "2021-07-20T05:03:48.661747Z",
        "url": "https://files.pythonhosted.org/packages/dd/30/e51db5323cd7a73f2476d12afaa2848930356e578a81d57fbd26c8ca4f04/seanalgorithms-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ec90022754fa722755700d992657fad76f8c0a093ea776f22c2c92a4e8c8d32",
          "md5": "13328720576110de7003aecb526a1661",
          "sha256": "bae22c8b613f32231819fee38d390e54ed2c0fec3449d95c688c445a1c0132ee"
        },
        "downloads": -1,
        "filename": "seanalgorithms-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13328720576110de7003aecb526a1661",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 192707,
        "upload_time": "2021-07-25T01:52:58",
        "upload_time_iso_8601": "2021-07-25T01:52:58.575818Z",
        "url": "https://files.pythonhosted.org/packages/9e/c9/0022754fa722755700d992657fad76f8c0a093ea776f22c2c92a4e8c8d32/seanalgorithms-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "197afb80ea715fbb336156d1a6dea0de4e5e835317e375f6966ecf06b9d7c88c",
          "md5": "93964f9f7ab007f14733fe546848cd57",
          "sha256": "c01629312f027722eff7d8746cf16ab70a5e196d92c72f8415c3c75ad2dc112b"
        },
        "downloads": -1,
        "filename": "seanalgorithms-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "93964f9f7ab007f14733fe546848cd57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 127073,
        "upload_time": "2021-07-25T01:53:00",
        "upload_time_iso_8601": "2021-07-25T01:53:00.580131Z",
        "url": "https://files.pythonhosted.org/packages/19/7a/fb80ea715fbb336156d1a6dea0de4e5e835317e375f6966ecf06b9d7c88c/seanalgorithms-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5aa2a88a53e5ff8702b4f5293cd9570784d7880789c6084b5a62d8f8aebfc441",
          "md5": "bee9d80bf381bba113662fcbe2310307",
          "sha256": "4a572144f4089c3d790157e46826f85e946be40aa00e5253f5439908f87e4e37"
        },
        "downloads": -1,
        "filename": "seanalgorithms-0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bee9d80bf381bba113662fcbe2310307",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 192691,
        "upload_time": "2021-07-31T02:23:21",
        "upload_time_iso_8601": "2021-07-31T02:23:21.351711Z",
        "url": "https://files.pythonhosted.org/packages/5a/a2/a88a53e5ff8702b4f5293cd9570784d7880789c6084b5a62d8f8aebfc441/seanalgorithms-0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb7954db4c9e82d49475582e0191f05df1ee0426486c7a6cb8d3b1789ba863ae",
          "md5": "9e538ddd0a8255d0e71705083f4c557b",
          "sha256": "171fbf0f8faeba90906004be3a7bd0de5cf2091f200d851171e4c7fa3a84c8ac"
        },
        "downloads": -1,
        "filename": "seanalgorithms-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "9e538ddd0a8255d0e71705083f4c557b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 119240,
        "upload_time": "2021-07-31T02:23:23",
        "upload_time_iso_8601": "2021-07-31T02:23:23.572215Z",
        "url": "https://files.pythonhosted.org/packages/eb/79/54db4c9e82d49475582e0191f05df1ee0426486c7a6cb8d3b1789ba863ae/seanalgorithms-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "153fb0183dacd6b4b85be457953f886fb3e1100b6effc4a60a2d80d5ffa72072",
          "md5": "81f74e01628b0bbbdff66c31cdf57c0d",
          "sha256": "c27a57baf1e0a51970df059a82ea9ce72207838a51c69e9fbd63b07af4f51a1d"
        },
        "downloads": -1,
        "filename": "seanalgorithms-0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81f74e01628b0bbbdff66c31cdf57c0d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 192698,
        "upload_time": "2021-07-31T02:37:29",
        "upload_time_iso_8601": "2021-07-31T02:37:29.767690Z",
        "url": "https://files.pythonhosted.org/packages/15/3f/b0183dacd6b4b85be457953f886fb3e1100b6effc4a60a2d80d5ffa72072/seanalgorithms-0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c79e0003e5baafbfadb49f568ab80bb5eeb79d8245d8c6fb3f7aa18545181fcc",
          "md5": "15b0736d587f27001c9780ed61a1ece1",
          "sha256": "f88b9ed1f51e90a6302156985bf66557d91e1ca7365f78c8e21198efba0279f5"
        },
        "downloads": -1,
        "filename": "seanalgorithms-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "15b0736d587f27001c9780ed61a1ece1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 119266,
        "upload_time": "2021-07-31T02:37:31",
        "upload_time_iso_8601": "2021-07-31T02:37:31.970869Z",
        "url": "https://files.pythonhosted.org/packages/c7/9e/0003e5baafbfadb49f568ab80bb5eeb79d8245d8c6fb3f7aa18545181fcc/seanalgorithms-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "153fb0183dacd6b4b85be457953f886fb3e1100b6effc4a60a2d80d5ffa72072",
        "md5": "81f74e01628b0bbbdff66c31cdf57c0d",
        "sha256": "c27a57baf1e0a51970df059a82ea9ce72207838a51c69e9fbd63b07af4f51a1d"
      },
      "downloads": -1,
      "filename": "seanalgorithms-0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "81f74e01628b0bbbdff66c31cdf57c0d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 192698,
      "upload_time": "2021-07-31T02:37:29",
      "upload_time_iso_8601": "2021-07-31T02:37:29.767690Z",
      "url": "https://files.pythonhosted.org/packages/15/3f/b0183dacd6b4b85be457953f886fb3e1100b6effc4a60a2d80d5ffa72072/seanalgorithms-0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c79e0003e5baafbfadb49f568ab80bb5eeb79d8245d8c6fb3f7aa18545181fcc",
        "md5": "15b0736d587f27001c9780ed61a1ece1",
        "sha256": "f88b9ed1f51e90a6302156985bf66557d91e1ca7365f78c8e21198efba0279f5"
      },
      "downloads": -1,
      "filename": "seanalgorithms-0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "15b0736d587f27001c9780ed61a1ece1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 119266,
      "upload_time": "2021-07-31T02:37:31",
      "upload_time_iso_8601": "2021-07-31T02:37:31.970869Z",
      "url": "https://files.pythonhosted.org/packages/c7/9e/0003e5baafbfadb49f568ab80bb5eeb79d8245d8c6fb3f7aa18545181fcc/seanalgorithms-0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}