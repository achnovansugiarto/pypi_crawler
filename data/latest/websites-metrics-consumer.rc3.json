{
  "info": {
    "author": "Antonio Di Mariano",
    "author_email": "antonio.dimariano@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![CircleCI](https://circleci.com/gh/antoniodimariano/metrics_consumer/tree/master.svg?style=svg&circle-token=f7da2eeb3c4a1dbbe2705fda45fdffe02e8ef1ce)](https://circleci.com/gh/antoniodimariano/metrics_consumer/tree/master)\n# Websites Metrics Consumer\n\n#### Author: Antonio Di Mariano - antonio.dimariano@gmail.com\n\n## Description\n\nThis service is part of the Websites Monitoring Application, a small distributed application \nthat aims to produce and collect metrics about the availability of one or more websites. \nThis service is responsible for consuming messages about metrics being produced to an Apache Kafka Avro Topic by a different service.\nThe main action of this service is to store the incoming message into a PostgreSQL database.\n\n\n## Overview of the Websites Monitoring Application\n\nThe application is made of three services that can run in different systems.\n\nThere are main two services. \n\nThe first one https://github.com/antoniodimariano/websites_metrics_collector is responsible for fetching and collecting the information from a list of URLs. The information collected is\n\nHTTP Status returned HTTP response time regexp pattern that is expected to be found on the HTML content.\nFor each record, a message is produced to an Apache Kafka Topic. This service exposes a REST API Service with a POST method to accept a list of URLs to fetch and process.\n\nThe second service is https://github.com/antoniodimariano/metrics_consumer that is responsible for consuming messages about metrics being produced to an Apache Kafka Avro Topic by a different service. The main action of this service is to store the incoming message into a PostgreSQL database.\n\nThe last one is a Celery Beat based service https://github.com/antoniodimariano/crontab_request that periodically send a POST request with a list of URLS to the `websites_metrics_collector`\n\nSo, to run all the whole application,  you don't need to clone the three repos,  You can use these two public python packages\n\n1. https://pypi.org/project/websites-metrics-consumer/ \n2. https://pypi.org/project/websites-metrics-collector/\n\nCreate two `python` applications. One will consume messages \n\n`pip3 install websites-metrics-consumer`\n\nThe other will produce metrics \n\n`pip3 install websites-metrics-collector`\n\nIn order to produce metrics, the https://github.com/antoniodimariano/websites_metrics_collector runs a REST Server with a `POST` `/api/v1/websites_metrics` endpoint that accepts a list of URLs to fetch. \nFor the complete documentation go here https://github.com/antoniodimariano/websites_metrics_collector/blob/master/README.md\n\nThe last application (https://github.com/antoniodimariano/crontab_request) uses Celery Beat to periodically run the task of reading a list or URLs from a local `json` file and will send it to as payload.\nof the `POST` request to `/api/v1/websites_metrics`\nIt requires `Redis` as broker.\n\nYou can decide not to use https://github.com/antoniodimariano/crontab_request and implements your own way of requesting a list or URLs to monitor. \nAs long as you send a POST Request to the endpoint `/api/v1/websites_metrics` metrics will be collected, messages will be produced and data will be stored. \nI decided to use Celery and not, for instance, a simple timer implemented with Thread or 3-party libs because Celery is robust, scalable and production ready.\nI know it comes at the price of having a broker, but I prefer to pay a small price for a significant advance. Not to mention, I am a big fan of Celery!\n\n\n# How to Run this service\n\nIf you want to run from the source code, go to the directory `websites_metrics_consumer` and run `python main`\n\nIf you want to use it as package (suggested method) install  `pip3 install websites_metrics_consumer`\n\nThen\n\n1. Set the ENV variables as show in this README.md\n2. Then use it this way\n\n```python\ndef consume_message():\n    from websites_metrics_consumer.main import start_consumer\n    start_consumer()\n    \n\n\n```\n\n# Requirements\n\n* Python >=3.8\n\n\n# Dependencies\n\n* confluent_kafka==1.7.0\n* psycopg2==2.9.1\n\n# Run test\n\n**NOTE**: for simplicity I am assuming you have a running local instance of PostgreSQL with the following information\n\n* database='test'\n* user='postgresql'\n* password='test123'\n* host='localhost'\n\n`python -m unittest tests/test_db_operations.py`\n`python -m unittest test/test_events_handler_class.py`\n\n\n# Service ENV configuration \n\nIf you are using a Broker that uses `SSL`, like Aiven.com, you need to download the following certificates files and copy them to a folder\n * Access Key\n * Access Certificate\n * CA Certificate\n\nfor more information about SSL and Kafka please read https://docs.confluent.io/3.0.0/kafka/ssl.html\n\n\nExample of your project folder \n\n```text\nmyprojectname/\n|------configuration/\n            __init__.py\n            ca.pem\n            service.cert\n            service.key\n|------venv\n|main.py\n|requirements.txt            \n\n```\n\n| ENV Variable  | VALUE | DESCRIPTION                                                                       |\n|---------------|------|------------------------------------------------------------------------------------|\n| brokers    | string   | Required. The FQDN of the Apache Kafka Brokers.|\n| schema_registry    | string   | Required. The FQDN of the Service Registry.|\n| ssl_ca_location    | string   | Required. he relative path to your ca.pem|\n| ssl_certificate_location    | string   | Required. The relative path to your service.cert|\n| ssl_key_location    | string   | Required. The relative path to your service.key |\n| security_protocol    | string   | Required. SSL.|\n| persistence_conf    | string   | Required. The full string for connecting to your PostgreSQL database.|\n| group_id    | string   | Optional. The consumer group id to assign to the consumer(s) . The default value is `metrics_consumer`|\n| consumer_topics    | string or list  | Optional. The Kafka Avro Topic where to consume messages from. The defaul value is `websites_metrics` |\n| logging_level    | string   | Optional. The level of logging to use for the built-in `logging` package. The default is `logging.INFO`  |\n\n\n**Example of mandatory ENV variables to use** \n\n* brokers=kafka-xxx-yyy-abc.com:12026\n* schema_registry=https://user:password@kafka-xxx-yyy-abc.com:12029\n* ssl_ca_location=configuration/ca.pem\n* ssl_certificate_location=configuration/service.cert\n* ssl_key_location=configuration/service.key\n* security_protocol=SSL\n* persistence_conf=postgres://user:password@mydbhost.com:12024/metrics?sslmode=require\n\n\n\nIf your broker requires SASL authentication, like Confluent Cloud, these are the ENV variables to include\n\n| ENV Variable  | VALUE | DESCRIPTION                                                                       |\n|---------------|------|------------------------------------------------------------------------------------|\n| brokers    | string   | Required. The FQDN of the Apache Kafka Brokers.|\n| schema_registry    | string   | Required. The FQDN of the Service Registry.|\n| sasl_username    | string   | Required. YOUR USERNAME HERE|\n| sasl_password    | string   | Required. YOUR PASSWORD HERE|\n| schema_registry_basic_auth_user_info    | string   | Required. AUTH HERE |\n| schema_registry_basic_auth_credentials_source    | string   | Required. USER_INFO.|\n| sasl_mechanisms    | string   | Required. PLAIN.|\n| security_protocol    | string   | Required. SASL_SSL.|\n| persistence_conf    | string   | Required. The full string for connecting to your PostgreSQL database.|\n| group_id    | string   | Optional. The consumer group id to assign to the consumer(s) . The default value is `metrics_consumer`|\n| consumer_topics    | string or list  | Optional. The Kafka Avro Topic where to consume messages from. The defaul value is `websites_metrics` |\n| logging_level    | string   | Optional. The level of logging to use for the built-in `logging` package. The default is `logging.INFO`  |\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/antoniodimariano/metrics_consumer",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "websites-metrics-consumer",
    "package_url": "https://pypi.org/project/websites-metrics-consumer/",
    "platform": "",
    "project_url": "https://pypi.org/project/websites-metrics-consumer/",
    "project_urls": {
      "Homepage": "https://github.com/antoniodimariano/metrics_consumer"
    },
    "release_url": "https://pypi.org/project/websites-metrics-consumer/0.0.3/",
    "requires_dist": [
      "psycopg2",
      "confluent-kafka",
      "avro-python3",
      "requests"
    ],
    "requires_python": ">=3.6",
    "summary": "An application that consumes metrics from Kafka messages and store the results into ta postgres db",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11659994,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fad81f9ee4b0ad34e76fbca5bca122fc3498fa06b04d4cbb3da1759c18b18d2f",
          "md5": "f0fcb3fb929d24d0905444c1f3a89bb1",
          "sha256": "a1581ec7bc94d35cd8aa8b4bbc0bde68d378798c3cc10fa846a8569494687e7f"
        },
        "downloads": -1,
        "filename": "websites_metrics_consumer-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0fcb3fb929d24d0905444c1f3a89bb1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17937,
        "upload_time": "2021-10-07T20:30:23",
        "upload_time_iso_8601": "2021-10-07T20:30:23.397930Z",
        "url": "https://files.pythonhosted.org/packages/fa/d8/1f9ee4b0ad34e76fbca5bca122fc3498fa06b04d4cbb3da1759c18b18d2f/websites_metrics_consumer-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "388dd43b9e5fa2b599e3ac6d6e8412ed41c0c5cd50c8bd55877ff533fa09d312",
          "md5": "d320d926d632b4d0395305d0b81d1395",
          "sha256": "7bcff1958b9a6a7f11c34c8303c3e376741e50a5adf94dbda185ef01aa3bad3d"
        },
        "downloads": -1,
        "filename": "websites_metrics_consumer-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d320d926d632b4d0395305d0b81d1395",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16854,
        "upload_time": "2021-10-07T20:30:24",
        "upload_time_iso_8601": "2021-10-07T20:30:24.804890Z",
        "url": "https://files.pythonhosted.org/packages/38/8d/d43b9e5fa2b599e3ac6d6e8412ed41c0c5cd50c8bd55877ff533fa09d312/websites_metrics_consumer-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea823d2c7ea20dedf0564712c774d9cc8349cf952b2243fa88850c7f65a524bb",
          "md5": "ef1b4f377656645ea5f8d6f9169ae2f6",
          "sha256": "95435c9b5a36372de15d7d8f4f035f8c6328ca5e8888148f604155e6ca82bd87"
        },
        "downloads": -1,
        "filename": "websites_metrics_consumer-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef1b4f377656645ea5f8d6f9169ae2f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18018,
        "upload_time": "2021-10-07T21:27:45",
        "upload_time_iso_8601": "2021-10-07T21:27:45.768844Z",
        "url": "https://files.pythonhosted.org/packages/ea/82/3d2c7ea20dedf0564712c774d9cc8349cf952b2243fa88850c7f65a524bb/websites_metrics_consumer-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4617055d5552dec74da1b8cf651f678f220afa02a89cb5387fed0ae3e30e9ae9",
          "md5": "1ef6bf5705d6ae93135c9ad3db817c95",
          "sha256": "e1117b0f9b3668dd53f84b813a2ab035e994074590df3d488fb724a3dfd464a8"
        },
        "downloads": -1,
        "filename": "websites_metrics_consumer-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1ef6bf5705d6ae93135c9ad3db817c95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16995,
        "upload_time": "2021-10-07T21:27:46",
        "upload_time_iso_8601": "2021-10-07T21:27:46.968975Z",
        "url": "https://files.pythonhosted.org/packages/46/17/055d5552dec74da1b8cf651f678f220afa02a89cb5387fed0ae3e30e9ae9/websites_metrics_consumer-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66fd00537f609dd41ff5342dcda43875e7bd18d9722844bd2e4e101f899ebb72",
          "md5": "8ec396a5a115d505eaa97961ca4b560e",
          "sha256": "8556e3d2ded0c5666140d0937dd218c3904b90d3b99de901c10d42d9e9b6dae3"
        },
        "downloads": -1,
        "filename": "websites_metrics_consumer-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ec396a5a115d505eaa97961ca4b560e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18876,
        "upload_time": "2021-10-07T22:19:17",
        "upload_time_iso_8601": "2021-10-07T22:19:17.332886Z",
        "url": "https://files.pythonhosted.org/packages/66/fd/00537f609dd41ff5342dcda43875e7bd18d9722844bd2e4e101f899ebb72/websites_metrics_consumer-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dec4db74fef696906d336b4d4fafa4a32c6721c1cf723fb66fd3fe9c91af191c",
          "md5": "d0e6a6845d7bcd1c37421a0fba6325b3",
          "sha256": "aa5470fdcc687b04deab0db3c5936974f5a56dee28b9f2b9dcf592fb4f52eb52"
        },
        "downloads": -1,
        "filename": "websites_metrics_consumer-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d0e6a6845d7bcd1c37421a0fba6325b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18704,
        "upload_time": "2021-10-07T22:19:18",
        "upload_time_iso_8601": "2021-10-07T22:19:18.965884Z",
        "url": "https://files.pythonhosted.org/packages/de/c4/db74fef696906d336b4d4fafa4a32c6721c1cf723fb66fd3fe9c91af191c/websites_metrics_consumer-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66fd00537f609dd41ff5342dcda43875e7bd18d9722844bd2e4e101f899ebb72",
        "md5": "8ec396a5a115d505eaa97961ca4b560e",
        "sha256": "8556e3d2ded0c5666140d0937dd218c3904b90d3b99de901c10d42d9e9b6dae3"
      },
      "downloads": -1,
      "filename": "websites_metrics_consumer-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8ec396a5a115d505eaa97961ca4b560e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18876,
      "upload_time": "2021-10-07T22:19:17",
      "upload_time_iso_8601": "2021-10-07T22:19:17.332886Z",
      "url": "https://files.pythonhosted.org/packages/66/fd/00537f609dd41ff5342dcda43875e7bd18d9722844bd2e4e101f899ebb72/websites_metrics_consumer-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dec4db74fef696906d336b4d4fafa4a32c6721c1cf723fb66fd3fe9c91af191c",
        "md5": "d0e6a6845d7bcd1c37421a0fba6325b3",
        "sha256": "aa5470fdcc687b04deab0db3c5936974f5a56dee28b9f2b9dcf592fb4f52eb52"
      },
      "downloads": -1,
      "filename": "websites_metrics_consumer-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d0e6a6845d7bcd1c37421a0fba6325b3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 18704,
      "upload_time": "2021-10-07T22:19:18",
      "upload_time_iso_8601": "2021-10-07T22:19:18.965884Z",
      "url": "https://files.pythonhosted.org/packages/de/c4/db74fef696906d336b4d4fafa4a32c6721c1cf723fb66fd3fe9c91af191c/websites_metrics_consumer-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}