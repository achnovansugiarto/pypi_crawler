{
  "info": {
    "author": "coder-amogh (Amogh Datar)",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# Traff Monetizer API\n\nUNOFFICIAL Python bindings for Traff Monetizer Dashboard API\n\n## Installation\n\n```BASH\npip install pyTraffMonetizer\n```\n\n## Usage\n\n---\n\n### Login with email and password:\n\n```PYTHON\nfrom pyTraffMonetizer import TraffMonetizer\n\n# Your TraffMonetizer login email and password\nEMAIL = \"\"\nPASSWORD = \"\"\ng_captcha_response = \"\" # I haven't figured out how to use this (so this function is actually unusable)\n\n# Initialise the TraffMonetizer object\nuser = TraffMonetizer()\n\n# Optionally, when instantiating you can pass in the following attributes to the TraffMonetizer class:\n```\n\n| Attribute      | Description        | Default Value                   |\n|----------------|--------------------|---------------------------------|\n| API_BASE_URL | The API BASE URL | https://data.traffmonetizer.com                            |\n| API_PREFIX | The API PREFIX | /api                            |\n| API_VERSION | The API VERSION | \"\"                            |\n\n```PYTHON\n# Call the complete_login_flow method to login and set the JWT in self.jwt\nuser.complete_login_flow(USERNAME, PASSWORD, g_captcha_response)\n```\n\n---\n\n### Add proxies for future requests:\n\n```PYTHON\nfrom pyTraffMonetizer import TraffMonetizer\n\n# With authentication & protocol\nuser.set_proxy(\"ip:port:username:password\", \"socks5\")\n\n# Without authentication & protocol\nuser.set_proxy(\"ip:port\", \"socks5\")\n\n# Alternative way\nuser.set_socks5_proxy(\"ip:port\")\nuser.set_socks5_proxy(\"ip:port:username:password\")\nuser.set_https_proxy(\"ip:port\")\nuser.set_https_proxy(\"ip:port:username:password\")\n```\n\n## Functions\n\n---\n\n1. Get user balance\n\n    ```PYTHON\n    # Get balance and traffic sold as shown on the dashboard.\n    user.get_balance()\n    ```\n---\n\n2. Remove a proxy\n\n    ```PYTHON\n    # Removes a proxy for future requests.\n    user.remove_proxy()\n    ```\n---\n\n3. Get all the devices\n\n    ```PYTHON\n    # Get all the devices (with earnings)\n    user.get_earnings_by_devices()\n    ```\n---\n\n4. Payout history\n\n    ```PYTHON\n    # Get payout history\n    user.get_payout_history()\n    ```\n---\n\n5. Is Logged In\n\n    ```PYTHON\n    # Check if you're logged in\n    user.is_logged_in()\n    ```\n---\n\n6. Logout\n\n    ```PYTHON\n    # Logged out\n    user.logout()\n    ```\n---\n\n7. Set JWT Token\n\n    ```PYTHON\n    # Set JWT Token if you have one (otherwise use the login())\n    user.set_jwt_token(TOKEN)\n    ```\n---\n\n## Exceptions\n\n- The following exceptions are defined.\n    Exception | Reason\n    --- | ---\n    `NotLoggedInError` | Raised when you try to access protected routes (dashboard, payout history, etc).\n---\n\n## Liked my work?\n\n---\n\nConsider donating:\n\n- BTC: bc1qu98aj9etma5l64lcfldweua7w8gnjzets05v6p\n\n- LTC: LiTzM41bD1ewPAjFxcGyNDZXFYXqUS9fXK\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/coder-amogh/pyTraffMonetizer",
    "keywords": "python,traffmonetizer,traff,passive income,traffmonetizer api,traffmonetizer dashboard,python traffmonetizer,traff mon",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyTraffMonetizer",
    "package_url": "https://pypi.org/project/pyTraffMonetizer/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyTraffMonetizer/",
    "project_urls": {
      "Bug Tracker": "https://github.com/coder-amogh/pyTraffMonetizer/issues",
      "Homepage": "https://github.com/coder-amogh/pyTraffMonetizer"
    },
    "release_url": "https://pypi.org/project/pyTraffMonetizer/0.0.1/",
    "requires_dist": [
      "requests",
      "pySocks"
    ],
    "requires_python": "",
    "summary": "UNOFFICIAL Python bindings for TraffMonetizer Dashboard API",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16741305,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1306c2853f4b0e8bc9877662c20a82c7ce72aa4c6372e1d04eef623b4f1f9a1",
          "md5": "df5ab7a3aa20f4ddf4bbb43ad9a23c64",
          "sha256": "4c232be1caa139e93198b85c7671b0852015916667c6f6a0ab0e594484c3f847"
        },
        "downloads": -1,
        "filename": "pyTraffMonetizer-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df5ab7a3aa20f4ddf4bbb43ad9a23c64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5819,
        "upload_time": "2023-02-08T02:39:13",
        "upload_time_iso_8601": "2023-02-08T02:39:13.476822Z",
        "url": "https://files.pythonhosted.org/packages/c1/30/6c2853f4b0e8bc9877662c20a82c7ce72aa4c6372e1d04eef623b4f1f9a1/pyTraffMonetizer-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "473185ff913ce193c4e6a8643108dd968d4c30f83777f6604e1b471555f2ae31",
          "md5": "947eda2e2be6efbc9ea75fb563ad5064",
          "sha256": "0615fcc28f06ef8c365f9efa04b6d5493fa73bf7f6c87513a6f4085fd3afbf28"
        },
        "downloads": -1,
        "filename": "pyTraffMonetizer-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "947eda2e2be6efbc9ea75fb563ad5064",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4598,
        "upload_time": "2023-02-08T02:39:16",
        "upload_time_iso_8601": "2023-02-08T02:39:16.037019Z",
        "url": "https://files.pythonhosted.org/packages/47/31/85ff913ce193c4e6a8643108dd968d4c30f83777f6604e1b471555f2ae31/pyTraffMonetizer-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c1306c2853f4b0e8bc9877662c20a82c7ce72aa4c6372e1d04eef623b4f1f9a1",
        "md5": "df5ab7a3aa20f4ddf4bbb43ad9a23c64",
        "sha256": "4c232be1caa139e93198b85c7671b0852015916667c6f6a0ab0e594484c3f847"
      },
      "downloads": -1,
      "filename": "pyTraffMonetizer-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "df5ab7a3aa20f4ddf4bbb43ad9a23c64",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5819,
      "upload_time": "2023-02-08T02:39:13",
      "upload_time_iso_8601": "2023-02-08T02:39:13.476822Z",
      "url": "https://files.pythonhosted.org/packages/c1/30/6c2853f4b0e8bc9877662c20a82c7ce72aa4c6372e1d04eef623b4f1f9a1/pyTraffMonetizer-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "473185ff913ce193c4e6a8643108dd968d4c30f83777f6604e1b471555f2ae31",
        "md5": "947eda2e2be6efbc9ea75fb563ad5064",
        "sha256": "0615fcc28f06ef8c365f9efa04b6d5493fa73bf7f6c87513a6f4085fd3afbf28"
      },
      "downloads": -1,
      "filename": "pyTraffMonetizer-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "947eda2e2be6efbc9ea75fb563ad5064",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4598,
      "upload_time": "2023-02-08T02:39:16",
      "upload_time_iso_8601": "2023-02-08T02:39:16.037019Z",
      "url": "https://files.pythonhosted.org/packages/47/31/85ff913ce193c4e6a8643108dd968d4c30f83777f6604e1b471555f2ae31/pyTraffMonetizer-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}