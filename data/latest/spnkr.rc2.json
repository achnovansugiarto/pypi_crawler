{
  "info": {
    "author": "Andy Curtis",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# [SPNKr](https://www.halopedia.org/M41_SPNKr) Halo Infinite API (Python)\r\n\r\nThis project provides a Python API for requesting multiplayer data from Halo Infinite servers.\r\n\r\nAuthentication requires some preliminary work:\r\n\r\n1. Sign up for a Microsoft Azure account.\r\n1. Register a new application in [Azure AD](https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade).\r\n1. Add \"http://localhost\" as a redirect URI of type \"web\".\r\n1. Go to \"Certificates & secrets\" for your app to create a client secret.\r\n1. Save your app's client id, client secret, and redirect URI information.\r\n\r\n\r\n## Dependencies\r\n\r\n- Python >= 3.10\r\n- Libraries:\r\n    - requests for making HTTP requests\r\n    - ms_cv for including a correlation vector header for requests to Microsoft\r\n    - dataclass-wizard for mapping JSON responses to dataclasses\r\n    - orjson for speedy JSON deserialization\r\n    - pytest for unit testing\r\n    - python-dateutil for parsing isoformat datetime strings\r\n\r\n\r\n## Getting Started\r\n\r\nInstall\r\n```\r\npip install spnkr\r\n```\r\n\r\nExample Usage\r\n```python\r\n\"\"\"Example usage of the library.\"\"\"\r\n\r\nimport pathlib\r\nimport requests\r\n\r\nfrom spnkr.api.client import Client\r\nfrom spnkr.api.enums import PlayerType\r\nfrom spnkr.authentication.manager import AuthenticationManager\r\nfrom spnkr.authentication.models import OAuth2TokenResponse\r\n\r\n\r\ndef main():\r\n    # Where the OAuth token should be/is saved\r\n    oauth_token_file = pathlib.Path('path/to/token.json')\r\n\r\n    # Azure AD app information\r\n    client_id = 'YOUR CLIENT ID'\r\n    client_secret = 'YOUR CLIENT SECRET'\r\n    redirect_uri = 'http://localhost'\r\n\r\n    with requests.session() as sess:\r\n        auth_mgr = AuthenticationManager(sess, client_id, client_secret, redirect_uri)\r\n        client = Client(auth_mgr)\r\n\r\n        if oauth_token_file.exists():\r\n            print('Refreshing tokens')\r\n            auth_mgr.oauth = OAuth2TokenResponse.parse_json(oauth_token_file.read_text())\r\n            auth_mgr.refresh_tokens()\r\n        else:\r\n            print('Requesting tokens')\r\n            auth_url = auth_mgr.generate_authorization_url()\r\n            print(auth_url)\r\n            print('Navigate to the above URL and copy the \"code\" parameter from the query string.')\r\n            code = input('Enter the code...')\r\n            auth_mgr.request_tokens(code)\r\n            oauth_token_file.mkdir(parents=True)\r\n\r\n        # Save the token for later\r\n        with oauth_token_file.open('w') as fp:\r\n            fp.write(auth_mgr.oauth.to_json())\r\n\r\n        # Get your Xbox Live ID (xuid)\r\n        your_xbox_live_id = auth_mgr.xsts_token.xuid\r\n\r\n        # Get your most recent 25 match summaries\r\n        matches = client.stats.get_match_history(your_xbox_live_id)\r\n        match = matches.results[0]  # most recent\r\n\r\n        # Get match map/playlist/game variant\r\n        map_variant = client.ugc_discovery.get_map(match.match_info.map_variant.asset_id,\r\n                                                   match.match_info.map_variant.version_id)\r\n        playlist = client.ugc_discovery.get_playlist(match.match_info.playlist.asset_id,\r\n                                                     match.match_info.playlist.version_id)\r\n        game_variant = client.ugc_discovery.get_ugc_game_variant(\r\n            match.match_info.ugc_game_variant.asset_id,\r\n            match.match_info.ugc_game_variant.version_id\r\n        )\r\n        print('Map | Game Type | Playlist')\r\n        print(map_variant.public_name, '|', game_variant.public_name, '|', playlist.public_name)\r\n\r\n        # Get match stats\r\n        stats = client.stats.get_match_stats(match.match_id)\r\n        print('Player | Kills | Deaths')\r\n        for player in stats.players:\r\n            core_stats = player.player_team_stats[0].stats.core_stats\r\n            print(player.player_id, '|', core_stats.kills, '|', core_stats.deaths)\r\n\r\n        # Get all the human players from the match\r\n        player_ids = [p.player_id for p in stats.players if p.player_type == PlayerType.Human]\r\n\r\n        # Get skill info (if applicable)\r\n        try:\r\n            skill = client.skill.get_match_result(match.match_id, player_ids)\r\n        except requests.HTTPError:\r\n            print(f'No skill info available for match {match.match_id}')\r\n            exit()\r\n\r\n        # Print out CSRs\r\n        print('Player | Pre-Match CSR | Post-Match CSR')\r\n        for entry in skill.value:\r\n            print(entry.id, '|', entry.result.rank_recap.pre_match_csr, '|',\r\n                  entry.result.rank_recap.post_match_csr)\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\n\r\n## Contribute\r\n\r\n- Implement/update authorities/endpoints\r\n    - [Source (no auth needed)](https://settings.svc.halowaypoint.com/settings/hipc/e2a0a7c6-6efe-42af-9283-c2ab73250c48)\r\n    - [Endpoints (JSON)](https://github.com/acurtis166/spnkr/blob/master/api_examples/json/endpoints.json)\r\n    - [Endpoints (XML)](https://github.com/acurtis166/spnkr/blob/master/api_examples/xml/endpoints.xml)\r\n    - [Script-generated code files](https://github.com/acurtis166/spnkr/tree/master/unused_authorities)\r\n- Documentation\r\n- Enumerated data type completion/confirmation\r\n\r\n\r\n## Credits\r\n\r\n- Xbox authentication, profile endpoints: [OpenXbox/xbox-webapi-python](https://github.com/OpenXbox/xbox-webapi-python)\r\n- Halo Infinite authentication [Den Delimarsky](https://den.dev/blog/halo-api-authentication)\r\n- Halo Infinite endpoints, schema, enumerated data types [OpenSpartan/grunt](https://github.com/OpenSpartan/grunt)\r\n- Microsoft/343 Industries\r\n\r\n\r\n## Disclaimer\r\n\r\nThis software is not endorsed or supported by Microsoft or 343 Industries. It is a personal project with a goal of analyzing Halo Infinite match data.\r\n\r\nAs the authentication process requires usage of personal credentials, **use at your own risk** of action by Microsoft or 343 Industries.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "halo,infinite,api",
    "license": "Copyright 2022 Andy Curtis Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spnkr",
    "package_url": "https://pypi.org/project/spnkr/",
    "platform": null,
    "project_url": "https://pypi.org/project/spnkr/",
    "project_urls": {
      "Homepage": "https://github.com/acurtis166/spnkr"
    },
    "release_url": "https://pypi.org/project/spnkr/0.0.2/",
    "requires_dist": [
      "ms-cv",
      "orjson",
      "requests",
      "dataclass-wizard",
      "python-dateutil",
      "pytest ; extra == 'dev'"
    ],
    "requires_python": ">=3.10",
    "summary": "Python API for requesting Halo Infinite multiplayer data.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15715980,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc236b8f53a6a48c24349004bc7cde0e21e4ec15473070c75ab6d39b48af2ba2",
          "md5": "37c0522743a95bc8dc1c45bb0d1e70e6",
          "sha256": "2f3eb8133ee9525982ddc39c9b0bc8c0947cc1fbe1146e5a62e53a9318f0ba13"
        },
        "downloads": -1,
        "filename": "spnkr-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37c0522743a95bc8dc1c45bb0d1e70e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 21270,
        "upload_time": "2022-10-13T04:22:08",
        "upload_time_iso_8601": "2022-10-13T04:22:08.949708Z",
        "url": "https://files.pythonhosted.org/packages/bc/23/6b8f53a6a48c24349004bc7cde0e21e4ec15473070c75ab6d39b48af2ba2/spnkr-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "929e5d27382cf63cbf213b1de1bbfbb385fa69ff745162d8a7aa4aa15d7bc389",
          "md5": "f7030921be44aab0c2996782a1560f9c",
          "sha256": "5797b98dc73358796d6e6fd56a46ab04eab4c10ea2f69cd00cc872ee69699cb8"
        },
        "downloads": -1,
        "filename": "spnkr-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f7030921be44aab0c2996782a1560f9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 18571,
        "upload_time": "2022-10-13T04:22:10",
        "upload_time_iso_8601": "2022-10-13T04:22:10.826203Z",
        "url": "https://files.pythonhosted.org/packages/92/9e/5d27382cf63cbf213b1de1bbfbb385fa69ff745162d8a7aa4aa15d7bc389/spnkr-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a2b8a196236ec39e73770340ca8cc018cdb500b3a7bdf7f40518e851d8fb3e5",
          "md5": "62e36b035760221fec6b6334c3fdef23",
          "sha256": "4a521baa81eb35fc5dbc248a01b5d890164ae2af9b80eaee436023575389393f"
        },
        "downloads": -1,
        "filename": "spnkr-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "62e36b035760221fec6b6334c3fdef23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 21313,
        "upload_time": "2022-11-09T19:35:44",
        "upload_time_iso_8601": "2022-11-09T19:35:44.233751Z",
        "url": "https://files.pythonhosted.org/packages/2a/2b/8a196236ec39e73770340ca8cc018cdb500b3a7bdf7f40518e851d8fb3e5/spnkr-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f45957f55b4ed04e4a0a4a96f891c18b9964fd9480eec7996e7136acf5c767a",
          "md5": "eca2a94852a978c76db1616922ad9b7f",
          "sha256": "320293cd1c3384cfbc925c55b45e71906d7d04f3d442641be14200199969c280"
        },
        "downloads": -1,
        "filename": "spnkr-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eca2a94852a978c76db1616922ad9b7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 18666,
        "upload_time": "2022-11-09T19:35:47",
        "upload_time_iso_8601": "2022-11-09T19:35:47.053844Z",
        "url": "https://files.pythonhosted.org/packages/6f/45/957f55b4ed04e4a0a4a96f891c18b9964fd9480eec7996e7136acf5c767a/spnkr-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a2b8a196236ec39e73770340ca8cc018cdb500b3a7bdf7f40518e851d8fb3e5",
        "md5": "62e36b035760221fec6b6334c3fdef23",
        "sha256": "4a521baa81eb35fc5dbc248a01b5d890164ae2af9b80eaee436023575389393f"
      },
      "downloads": -1,
      "filename": "spnkr-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "62e36b035760221fec6b6334c3fdef23",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 21313,
      "upload_time": "2022-11-09T19:35:44",
      "upload_time_iso_8601": "2022-11-09T19:35:44.233751Z",
      "url": "https://files.pythonhosted.org/packages/2a/2b/8a196236ec39e73770340ca8cc018cdb500b3a7bdf7f40518e851d8fb3e5/spnkr-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f45957f55b4ed04e4a0a4a96f891c18b9964fd9480eec7996e7136acf5c767a",
        "md5": "eca2a94852a978c76db1616922ad9b7f",
        "sha256": "320293cd1c3384cfbc925c55b45e71906d7d04f3d442641be14200199969c280"
      },
      "downloads": -1,
      "filename": "spnkr-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "eca2a94852a978c76db1616922ad9b7f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 18666,
      "upload_time": "2022-11-09T19:35:47",
      "upload_time_iso_8601": "2022-11-09T19:35:47.053844Z",
      "url": "https://files.pythonhosted.org/packages/6f/45/957f55b4ed04e4a0a4a96f891c18b9964fd9480eec7996e7136acf5c767a/spnkr-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}