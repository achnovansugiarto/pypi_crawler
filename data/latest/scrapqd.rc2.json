{
  "info": {
    "author": "Durai Pandian",
    "author_email": "dduraipandian@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "\nScrapQD - Scraper Query Definition (beta)\n=========================================\n\n.. inclusion-marker-do-not-remove-start\n\nScrapQD consists of query definition created for scraping web data using `GraphQL-Core <https://github.com/graphql-python/graphql-core>`_\nwhich is port of `GraphQL.js <https://github.com/graphql/graphql-js>`_.\n\nLibrary intends to focus on how to locate data from website and eliminate backend process of crawling. So people can just have xpath and get data right away.\n\nIt supports scraping using `requests <https://github.com/psf/request>`_ for traditional websites and\n`selenium <https://github.com/baijum/selenium-python>`_ for modern websites (js rendering).\nUnder selenium it supports Google Chrome and FireFox drivers.\n\nScrapQD library only uses `lxml <https://lxml.de/parsing.html>`_ parser and `xpath <https://www.w3schools.com/xml/xpath_syntax.asp>`_ used to locate elements.\n\n.. inclusion-marker-do-not-remove-end\n\n|\n\n.. image:: https://github.com/dduraipandian/scrapqd/actions/workflows/test.yml/badge.svg?branch=main\n    :target: https://github.com/dduraipandian/scrapqd/\n    :alt: Test GA\n\n.. image:: https://codecov.io/gh/dduraipandian/scrapqd/branch/development/graph/badge.svg\n  :target: https://codecov.io/gh/dduraipandian/scrapqd\n  :alt: codecov test coverage\n\n.. image:: https://img.shields.io/badge/License-MIT-blue.svg\n  :target: https://opensource.org/licenses/MIT\n  :alt: MIT License\n\n.. image:: https://readthedocs.org/projects/scrapqd/badge/?version=latest\n    :target: https://scrapqd.readthedocs.io/en/latest/\n    :alt: Documentation Status\n\n|\n\n- `Explore the docs » <https://scrapqd.readthedocs.io/en/latest>`_\n- `Source Code » <https://github.com/dduraipandian/scrapqd/>`_\n- `Report Bug » <https://github.com/dduraipandian/scrapqd/issues>`_\n- `Request Feature » <https://github.com/dduraipandian/scrapqd/issues/>`_\n\n|\n\n.. image:: https://github.com/dduraipandian/scrapqd/raw/main/docs/_static/scrapqd_ui.png\n  :width: 100%\n  :alt: scrapqd ui\n\n.. inclusion-marker-do-not-remove-start-1\n\nGetting Started\n===============\n\n.. topic:: **How to install**\n\n    .. code-block:: shell\n\n        pip install scrapqd\n\n\n.. topic:: **How to run the server standalone**\n\n    You can run scrapqd graphql server standalone without any additional code with below command.\n    `Flask <https://github.com/pallets/flask/>`_ is used as server and `localhost <http://127.0.0.1:5000/scrapqd>`_.\n\n    .. code-block:: shell\n\n        python -m scrapqd\n\n    Flask uses 5000 as default port. You can change the port and host with below options.\n\n    .. code-block:: shell\n\n        python -m scrapqd --port 5001 --host x.x.x.x\n\n.. inclusion-marker-do-not-remove-end-1\n\nQuery\n======\n\nSample query is loaded to GraphQL UI and `sample page <https://scrapqd.readthedocs.io/en/latest/sample.html>`_ is available within the server to practice.\n\n.. code-block:: graphql\n\n    query test_query($url: String!, $name: GenericScalar!) {\n      result: fetch(url: $url) {\n        name: constant(value: $name)\n        summary: group {\n          total_emp_expenses: text(xpath: \"//*[@id='emp-exp-total']\", data_type: INT)\n          total_shown_expenses: text(xpath: \"//*[@id='exp-total']/span[2]\", data_type: INT)\n          total_approved_expenses: text(xpath: \"//*[@id='emp-exp-approved']/span[2]\", data_type: INT)\n        }\n        exp_details: list(xpath: \"//div[@class='card']\") {\n          name: text(xpath: \"//div[contains(@class,'expense-emp-name')]\")\n          amount: group {\n            money: text(xpath: \"//h6[contains(@class,'expense-amount')]/span[1]\", data_type: INT)\n            name: text(xpath: \"//h6[contains(@class,'expense-amount')]/span[2]\")\n          }\n        }\n      }\n    }\n\n\n**query variable**\n\n.. code-block:: javascript\n\n    // url will be used in the above query\n    query_variables = {\n        \"url\": \"http://localhost:5000/scrapqd/sample_page/\",\n        \"name\": \"local-testing\"\n    }\n\n**Result**\n\n.. code-block:: javascript\n\n    {\n      \"data\": {\n        \"result\": {\n          \"name\": \"local-testing\",\n          \"summary\": {\n            \"total_emp_expenses\": 309,\n            \"total_shown_expenses\": 40,\n            \"total_approved_expenses\": 4\n          },\n          \"exp_details\": [\n            {\n              \"name\": \"Friedrich-Wilhelm, Langern\",\n              \"amount\": {\n                \"money\": 8800,\n                \"name\": \"egp\"\n              }\n            },\n            {\n              \"name\": \"Sebastian, Bien\",\n              \"amount\": {\n                \"money\": 3365,\n                \"name\": \"mkd\"\n              }\n            },\n            {\n              \"name\": \"Rosa, Becker\",\n              \"amount\": {\n                \"money\": 6700,\n                \"name\": \"xof\"\n              }\n            },\n            {\n              \"name\": \"Ines, Gröttner\",\n              \"amount\": {\n                \"money\": 8427,\n                \"name\": \"npr\"\n              }\n            }\n          ]\n        }\n      }\n    }\n\n.. inclusion-marker-do-not-remove-start-2\n\nExecuting with client\n=====================\n\n.. code-block:: python\n\n    from scrapqd.client import execute_sync\n\n    query = r\"\"\"\n            query test_query($url: String!, $name: GenericScalar!) {\n              result: fetch(url: $url) {\n                name: constant(value: $name)\n                summary: group {\n                  total_shown_expenses: regex(xpath: \"//*[@id='exp-total']\", pattern: \"(\\\\d+)\")\n                }\n              }\n            }\"\"\"\n\n    query_variables = {\n        \"url\": \"http://localhost:5000/scrapqd/sample_page/\",\n        \"name\": \"local-testing\"\n    }\n    result = execute_sync(self.query, query_variables)\n\nIntegrating with existing Flask app\n===================================\n\nSample Flask app\n-----------------\n\n.. code-block:: python\n\n    from flask import Flask\n\n    name = __name__\n    app = Flask(name)\n\n    @app.route(\"/\")\n    def hello_world():\n        return \"<p>Hello, World!</p>\"\n\n\nIntegrating scrapqd with existing app\n-------------------------------------\n\n.. code-block:: python\n\n    from scrapqd.app import register_scrapqd\n    register_scrapqd(app,\n                     register_sample_url=True,\n                     redirect_root=True)\n\n**app:** Flask application\n\n**register_sample_url:** ``False`` will not register sample page url to Flask application. Default is ``True``\n\n**redirect_root:** Redirect root url to graphql ui if this is set to ``True``. This will not reflect, if there is already root route defined as above example.\n\nTest (for development)\n======================\n\n- Clone the github repository\n\n    .. code-block:: shell\n\n        git clone https://github.com/dduraipandian/scrapqd.git\n\n- create virtual environment to work\n\n    .. code-block:: shell\n\n        pip3 install virtualenv\n        virtualenv scrapqd_venv\n        source scrapqd_venv/bin/activate\n\n- install tox\n\n    .. code-block:: shell\n\n        pip install tox\n\n- run tox from the project root directory\n\n    - current tox have four python version - py37,py38,py39,py310\n    - check your python version\n\n        .. code-block:: shell\n\n            python3 --version\n\n            # Python 3.9.10\n\n    - once you get your version (example: use py39 for 3.9) to run tox\n\n        .. code-block:: shell\n\n            tox -e py39\n\n\nFAQs\n====\n\n- How to copy query from graphql ui to python code.\n\n    - you can normally copy code from ui to python code to execute using client.\n    - if you hav ``regex`` query, patterns needs to escaped in the python code. In such, use python `raw strings <https://docs.python.org/3/library/re.html#raw-string-notation>`_, where backslashes are treated as literal characters, as above example.\n\n- How to suppress webdriver logs\n\n    - If you see webdriver logs like below, set ``WDM_LOG_LEVEL=0`` as environment variable and run\n\n        ..  code-block:: shell\n\n            [INFO] [97002] [2022-03-14T02:18:26+0530] [SCRAPQD] [/webdriver_manager/logger.py:log():26] [WDM] [Driver [/99.0.4844.51/chromedriver] ...]\n\n- How to change log level for scrapqd library\n\n    - ``ERROR`` level is default logging. You can change this with ``SCRAPQD_LOG_LEVEL`` environment variable.\n\n.. inclusion-marker-do-not-remove-end-2\n\nLicense\n=======\n\nThis project is licensed under the MIT License - see the `LICENSE <LICENSE>`_ file for details\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dduraipandian/scapqd",
    "keywords": "web scraping,selenium,harvester,harvest,spider,crawler,requests",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scrapqd",
    "package_url": "https://pypi.org/project/scrapqd/",
    "platform": null,
    "project_url": "https://pypi.org/project/scrapqd/",
    "project_urls": {
      "Homepage": "https://github.com/dduraipandian/scapqd"
    },
    "release_url": "https://pypi.org/project/scrapqd/1.0.1b0/",
    "requires_dist": [
      "lxml (==4.8.0)",
      "flask (==2.0.3)",
      "graphql-server (==3.0.0b5)",
      "requests (==2.27.1)",
      "graphql-core (==3.2.0)",
      "selenium (==4.1.3)",
      "immutable-config (==1.0)",
      "webdriver-manager (==3.5.3)"
    ],
    "requires_python": ">=3.7",
    "summary": "Scrape query definition intends to eliminate backend process of crawling and focus on xpath needed to get data. Library queries are developed using graphql-core library.",
    "version": "1.0.1b0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13186787,
  "releases": {
    "1.0.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "607682f1b5168f4831e1463efb5b80f34eeaeb9b4302db06e3e1b6f1b76b55ba",
          "md5": "90080d3c855e9c8b3a3d3319ff84f631",
          "sha256": "237940791b1315be13c6b466895a65695ab2c843491affb4a70a18f58f100cc1"
        },
        "downloads": -1,
        "filename": "scrapqd-1.0.0b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90080d3c855e9c8b3a3d3319ff84f631",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 62450,
        "upload_time": "2022-03-14T01:02:25",
        "upload_time_iso_8601": "2022-03-14T01:02:25.998570Z",
        "url": "https://files.pythonhosted.org/packages/60/76/82f1b5168f4831e1463efb5b80f34eeaeb9b4302db06e3e1b6f1b76b55ba/scrapqd-1.0.0b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a8595245a16d46fa797cbc7ee3436078c3fa30799214a941d46dd7b2cabd53c",
          "md5": "fec4734104234f17e55f94a0c5311192",
          "sha256": "423f82c04d2898a0f3c3709bd10ce153af9c0974b31ab09151c03923c93ce792"
        },
        "downloads": -1,
        "filename": "scrapqd-1.0.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "fec4734104234f17e55f94a0c5311192",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 61367,
        "upload_time": "2022-03-14T01:02:28",
        "upload_time_iso_8601": "2022-03-14T01:02:28.760847Z",
        "url": "https://files.pythonhosted.org/packages/1a/85/95245a16d46fa797cbc7ee3436078c3fa30799214a941d46dd7b2cabd53c/scrapqd-1.0.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d25fd22d5b1630f6da653a1cff2ebe1879a29f06c077f83ab1cf3edb14209ca",
          "md5": "206397d312432520733a6935713d7700",
          "sha256": "ca2a535a88705eff034432ab7acc4ccca6c5813225546d4a0ed5ac9dd0279037"
        },
        "downloads": -1,
        "filename": "scrapqd-1.0.1b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "206397d312432520733a6935713d7700",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 62649,
        "upload_time": "2022-03-15T21:22:34",
        "upload_time_iso_8601": "2022-03-15T21:22:34.039830Z",
        "url": "https://files.pythonhosted.org/packages/8d/25/fd22d5b1630f6da653a1cff2ebe1879a29f06c077f83ab1cf3edb14209ca/scrapqd-1.0.1b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92453766e6b7b471d4d545934419ec7c6fb5e033c3aa286e184f0cc177e252f6",
          "md5": "d38fc8bf571e2f53df4c6c3b823d361c",
          "sha256": "bb929aa9d2155f15b187460ce7d629c7bf94a8be907781d5f8991f431ac62ef4"
        },
        "downloads": -1,
        "filename": "scrapqd-1.0.1b0.tar.gz",
        "has_sig": false,
        "md5_digest": "d38fc8bf571e2f53df4c6c3b823d361c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 61856,
        "upload_time": "2022-03-15T21:22:36",
        "upload_time_iso_8601": "2022-03-15T21:22:36.763774Z",
        "url": "https://files.pythonhosted.org/packages/92/45/3766e6b7b471d4d545934419ec7c6fb5e033c3aa286e184f0cc177e252f6/scrapqd-1.0.1b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8d25fd22d5b1630f6da653a1cff2ebe1879a29f06c077f83ab1cf3edb14209ca",
        "md5": "206397d312432520733a6935713d7700",
        "sha256": "ca2a535a88705eff034432ab7acc4ccca6c5813225546d4a0ed5ac9dd0279037"
      },
      "downloads": -1,
      "filename": "scrapqd-1.0.1b0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "206397d312432520733a6935713d7700",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 62649,
      "upload_time": "2022-03-15T21:22:34",
      "upload_time_iso_8601": "2022-03-15T21:22:34.039830Z",
      "url": "https://files.pythonhosted.org/packages/8d/25/fd22d5b1630f6da653a1cff2ebe1879a29f06c077f83ab1cf3edb14209ca/scrapqd-1.0.1b0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92453766e6b7b471d4d545934419ec7c6fb5e033c3aa286e184f0cc177e252f6",
        "md5": "d38fc8bf571e2f53df4c6c3b823d361c",
        "sha256": "bb929aa9d2155f15b187460ce7d629c7bf94a8be907781d5f8991f431ac62ef4"
      },
      "downloads": -1,
      "filename": "scrapqd-1.0.1b0.tar.gz",
      "has_sig": false,
      "md5_digest": "d38fc8bf571e2f53df4c6c3b823d361c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 61856,
      "upload_time": "2022-03-15T21:22:36",
      "upload_time_iso_8601": "2022-03-15T21:22:36.763774Z",
      "url": "https://files.pythonhosted.org/packages/92/45/3766e6b7b471d4d545934419ec7c6fb5e033c3aa286e184f0cc177e252f6/scrapqd-1.0.1b0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}