{
  "info": {
    "author": "Yuval Herziger",
    "author_email": "yuvalhrz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# aiohttp-catcher\n\n<div align=\"left\">\n  <a href=\"https://github.com/yuvalherziger/aiohttp-catcher/actions?query=workflow%3ACI\"><img alt=\"CI Job\"  height=\"20\" src=\"https://github.com/yuvalherziger/aiohttp-catcher/workflows/CI/badge.svg\"></a>\n  <a href=\"https://pypi.org/project/aiohttp-catcher\"><img src=\"https://badge.fury.io/py/aiohttp-catcher.svg\" alt=\"PyPI version\" height=\"20\"></a>\n  <a href=\"https://github.com/yuvalherziger/aiohttp-catcher/actions\"><img src=\"https://gist.githubusercontent.com/yuvalherziger/14417a5617e959df89a524f327f86c92/raw/395fe027d00c73a612a117cc81c882d9ad012abc/aiohttp-catcher-cov.svg\" height=\"20\"></a>\n    <a href=\"https://github.com/yuvalherziger/aiohttp-catcher/blob/main/LiCENSE\"><img src=\"https://img.shields.io/pypi/l/aiohttp-catcher?color=%233383FF\" height=\"20\"></a>\n    <a href=\"https://github.com/yuvalherziger/aiohttp-catcher\"><img src=\"https://img.shields.io/pypi/dm/aiohttp-catcher?color=%23784212\" height=\"20\"></a>\n</div>\n\n***\n\naiohttp-catcher is a centralized error handler for [aiohttp servers](https://docs.aiohttp.org/en/stable/web.html).\nIt enables consistent error handling across your web server or API, so your code can raise Python exceptions that\nwill be mapped to consistent, user-friendly error messages.\n\n***\n\n- [Quickstart](#quickstart)\n- [What's New in 0.3.0?](#what-s-new-in-030-)\n- [Key Features](#key-features)\n  * [Return a Constant](#return-a-constant)\n  * [Stringify the Exception](#stringify-the-exception)\n  * [Canned HTTP 4xx and 5xx Errors (aiohttp Exceptions)](#canned-http-4xx-and-5xx-errors--aiohttp-exceptions-)\n  * [Callables and Awaitables](#callables-and-awaitables)\n  * [Handle Several Exceptions Similarly](#handle-several-exceptions-similarly)\n  * [Scenarios as Dictionaries](#scenarios-as-dictionaries)\n  * [Additional Fields](#additional-fields)\n  * [Default for Unhandled Exceptions](#default-for-unhandled-exceptions)\n- [Development](#development)\n\n***\n\nTL;DR:\n\n![aiohttp-catcher-diagram](img/aiohttp-catcher-diagram.png)\n\n***\n\n## Quickstart\n\nInstall aiohttp-catcher:\n\n```shell\npip install aiohttp-catcher\n```\n\nStart catching errors in your aiohttp-based web server:\n\n```python\nfrom aiohttp import web\nfrom aiohttp_catcher import catch, Catcher\n\nasync def divide(request):\n  quotient = 1 / 0\n  return web.Response(text=f\"1 / 0 = {quotient}\")\n\n\nasync def main():\n  # Add a catcher:\n  catcher = Catcher()\n\n  # Register error-handling scenarios:\n  await catcher.add_scenario(\n    catch(ZeroDivisionError).with_status_code(400).and_return(\"Zero division makes zero sense\")\n  )\n\n  # Register your catcher as an aiohttp middleware:\n  app = web.Application(middlewares=[catcher.middleware])\n  app.add_routes([web.get(\"/divide-by-zero\", divide)])\n  web.run_app(app)\n```\n\nMaking a request to `/divide-by-zero` will return a 400 status code with the following body:\n```json\n{\"code\": 400, \"message\": \"Zero division makes zero sense\"}\n```\n\n<div>\n<h3>\n  <span style=\"color:#ff6500\">IMPORTANT NOTE:</span>\n  <span>aiohttp's order of middleware matters</span>\n</h3>\n</div>\n\nMiddlewares that are appended further in the list of your app's middlewares act\nearlier. Consider the following example:\n```python\napp = web.Application(middlewares=[middleware1, middleware2])\n```\n\nIn the above case, `middleware2` will be triggered first, and only then\nwill `middleware1` be triggered.  This means two things:\n\n1. If you register another middleware that catches exceptions but doesn't raise them\n   when it's done, you will need to add it **before** your _aiohttp-catcher_ middleware\n   or the other middleware will shadow _aiohttp-catcher_.\n2. If you register another middleware that relies on exceptions being raised, you want\n   to make sure it's added **after** your _aiohttp-catcher_ middleware, to avoid having\n   your _aiohttp-catcher_ middleware shadow the other middleware. One good example is\n   [aiohttp-debugtoolbar](https://github.com/aio-libs/aiohttp-debugtoolbar), which, like\n   _aiohttp-catcher_, expects exceptions to be thrown and raises them when its middleware's\n   execution is done. In this case, you want to set up _aiohttp-debugtoolbar_ after appending\n   your _aiohttp-catcher_ middleware.\n\n***\n\n## What's New in 0.3.0?\n\n* **Canned Scenarios:** You can now use a [canned list of scenarios](#canned-http-4xx-and-5xx-errors--aiohttp-exceptions-),\n  capturing all of [aiohttp's web exceptions](https://docs.aiohttp.org/en/latest/web_exceptions.html) out of the box.\n* **More flexible Callables and Awaitables:** Callables and Awaitables are now invoked with a second argument,  \n  the aiohttp `Request` instance, to add more flexibility to custom messages.\n\n***\n\n## Key Features\n\n### Return a Constant\n\nIn case you want some exceptions to return a constant message across your application, you can do\nso by using the `and_return(\"some value\")` method:\n\n```python\nawait catcher.add_scenario(\n  catch(ZeroDivisionError).with_status_code(400).and_return(\"Zero division makes zero sense\")\n)\n```\n\n***\n\n### Stringify the Exception\n\nIn some cases, you would want to return a stringified version of your exception, should it entail\nuser-friendly information.\n\n```python\nclass EntityNotFound(Exception):\n  def __init__(self, entity_id, *args, **kwargs):\n    super(EntityNotFound, self).__init__(*args, **kwargs)\n    self.entity_id = entity_id\n\n  def __str__(self):\n    return f\"Entity {self.entity_id} could not be found\"\n\n\n@routes.get(\"/user/{user_id}\")\nasync def get_user(request):\n  user_id = request.match_info.get(\"user_id\")\n  if user_id not in user_db:\n    raise EntityNotFound(entity_id=user_id)\n  return user_db[user_id]\n\n# Your catcher can be directed to stringify particular exceptions:\n\nawait catcher.add_scenario(\n  catch(EntityNotFound).with_status_code(404).and_stringify()\n)\n```\n\n***\n\n### Canned HTTP 4xx and 5xx Errors (aiohttp Exceptions)\n\nAs of version [0.3.0](https://github.com/yuvalherziger/aiohttp-catcher/releases/tag/0.3.0), you\ncan register [all of aiohttp's web exceptions](https://docs.aiohttp.org/en/latest/web_exceptions.html).\nThis is particularly useful when you want to ensure all possible HTTP errors are handled consistently.\n\nRegister the canned HTTP errors in the following way:\n\n```python\nfrom aiohttp import web\nfrom aiohttp_catcher import Catcher\nfrom aiohttp_catcher.canned import AIOHTTP_SCENARIOS\n\n\nasync def main():\n  # Add a catcher:\n  catcher = Catcher()\n  # Register aiohttp web errors:\n  await catcher.add_scenario(*AIOHTTP_SCENARIOS)\n  # Register your catcher as an aiohttp middleware:\n  app = web.Application(middlewares=[catcher.middleware])\n  web.run_app(app)\n```\n\nOnce you've registered the canned errors, you can rely on aiohttp-catcher to convert errors raised by aiohttp\nto user-friendly error messages.  For example, `curl`ing a non-existent route in your server will return the\nfollowing error out of the box:\n\n```json\n{\"code\": 404, \"message\": \"HTTPNotFound\"}\n```\n\n***\n\n### Callables and Awaitables\n\nIn some cases, you'd want the message returned by your server for some exceptions to call a custom\nfunction.  This function can either be a synchronous function or an awaitable one.  Your function should expect\ntwo arguments:\n\n1. The exception being raised by handlers.\n2. The request object - an instance of `aiohttp.web.Request`.\n\n```python\nfrom aiohttp.web import Request\nfrom aiohttp_catcher import catch, Catcher\n\n# Can be a synchronous function:\nasync def write_message(exc: Exception, request: Request):\n  return \"Whoops\"\n\ncatcher = Catcher()\nawait catcher.add_scenarios(\n  catch(MyCustomException2).with_status_code(401).and_call(write_message),\n  catch(MyCustomException2).with_status_code(403).and_call(lambda exc: str(exc))\n)\n\n```\n\n***\n\n### Handle Several Exceptions Similarly\n\nYou can handle several exceptions in the same manner by adding them to the same scenario:\n\n```python\nawait catcher.add_scenario(\n  catch(\n    MyCustomException1,\n    MyCustomException2,\n    MyCustomException3\n  ).with_status_code(418).and_return(\"User-friendly error message\")\n)\n```\n\n***\n\n### Scenarios as Dictionaries\n\nYou can register your scenarios as dictionaries as well:\n\n```python\nawait catcher.add_scenarios(\n  {\n    \"exceptions\": [ZeroDivisionError],\n    \"constant\": \"Zero division makes zero sense\",\n    \"status_code\": 400,\n  },\n  {\n    \"exceptions\": [EntityNotFound],\n    \"stringify_exception\": True,\n    \"status_code\": 404,\n  },\n  {\n    \"exceptions\": [IndexError],\n    \"func\": lambda exc: f\"Out of bound: {str(exc)}\",\n    \"status_code\": 418,\n  },\n)\n```\n\n***\n\n### Additional Fields\n\nYou can enrich your error responses with additional fields. You can provide additional fields using\nliteral dictionaries or with callables.  Your function should expect two arguments:\n\n1. The exception being raised by handlers.\n2. The request object - an instance of `aiohttp.web.Request`.\n\n```python\n# Using a literal dictionary:\nawait catcher.add_scenario(\n  catch(EntityNotFound).with_status_code(404).and_stringify().with_additional_fields({\"error_code\": \"ENTITY_NOT_FOUND\"})\n)\n\n# Using a function (or an async function):\nawait catcher.add_scenario(\n  catch(EntityNotFound).with_status_code(404).and_stringify().with_additional_fields(\n    lambda exc, req: {\"error_code\": e.error_code, \"method\": req.method}\n  )\n)\n```\n\n***\n\n### Default for Unhandled Exceptions\n\nExceptions that aren't registered with scenarios in your `Catcher` will default to 500, with a payload similar to\nthe following:\n\n```json\n{\"code\": 500, \"message\": \"Internal server error\"}\n```\n\n***\n\n## Development\n\nContributions are warmly welcomed.  Before submitting your PR, please run the tests using the following Make target:\n\n```bash\nmake ci\n```\n\nAlternatively, you can run each test separately:\n\nUnit tests:\n\n```bash\nmake test/py\n```\n\nLinting with pylint:\n\n```bash\nmake pylint\n```\n\nStatic security checks with bandit:\n\n```bash\nmake pybandit\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yuvalherziger/aiohttp-catcher",
    "keywords": "python,python3,aiohttp,error-handling",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiohttp-catcher",
    "package_url": "https://pypi.org/project/aiohttp-catcher/",
    "platform": null,
    "project_url": "https://pypi.org/project/aiohttp-catcher/",
    "project_urls": {
      "Homepage": "https://github.com/yuvalherziger/aiohttp-catcher",
      "Repository": "https://github.com/yuvalherziger/aiohttp-catcher"
    },
    "release_url": "https://pypi.org/project/aiohttp-catcher/0.3.2/",
    "requires_dist": [
      "aiohttp (>=3.8.1,<4.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "A centralized error handler for aiohttp servers",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14638159,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de502b08f2a50801b6dcfdd224645bf643d92d260a50fe5bc7330ab727f6aa7c",
          "md5": "40453c1bbeb004becf0b62a28037513a",
          "sha256": "317ea467924709e5226bd5627a2e27e5643a76db90f81bd6106d28870b86d078"
        },
        "downloads": -1,
        "filename": "aiohttp_catcher-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40453c1bbeb004becf0b62a28037513a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 4690,
        "upload_time": "2021-12-31T11:06:14",
        "upload_time_iso_8601": "2021-12-31T11:06:14.472102Z",
        "url": "https://files.pythonhosted.org/packages/de/50/2b08f2a50801b6dcfdd224645bf643d92d260a50fe5bc7330ab727f6aa7c/aiohttp_catcher-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59718b3c43e3ea17985252638a0ba39fc291dc3fe2ee1642d5c08229fa0d15c0",
          "md5": "9361c6a7403b92485e89ff3ce5debe8b",
          "sha256": "107dc696942dcbbdce9f1619ee5b8c922896113cf162c4d630ee9fa7485380e9"
        },
        "downloads": -1,
        "filename": "aiohttp-catcher-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9361c6a7403b92485e89ff3ce5debe8b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 4873,
        "upload_time": "2021-12-31T11:06:12",
        "upload_time_iso_8601": "2021-12-31T11:06:12.655437Z",
        "url": "https://files.pythonhosted.org/packages/59/71/8b3c43e3ea17985252638a0ba39fc291dc3fe2ee1642d5c08229fa0d15c0/aiohttp-catcher-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5ce9d749a49fb41f5c9a76c2c8c1b7a3d283260c889489a8c4065cf2d2435c4",
          "md5": "3bbf12ec7498ae109626be2f3a091d84",
          "sha256": "8f8700fc0c07292ce26dd9ac3220328c828da4522b5e4b79848144cc38431874"
        },
        "downloads": -1,
        "filename": "aiohttp_catcher-0.1.0rc0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3bbf12ec7498ae109626be2f3a091d84",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 2836,
        "upload_time": "2021-12-31T09:29:26",
        "upload_time_iso_8601": "2021-12-31T09:29:26.033783Z",
        "url": "https://files.pythonhosted.org/packages/a5/ce/9d749a49fb41f5c9a76c2c8c1b7a3d283260c889489a8c4065cf2d2435c4/aiohttp_catcher-0.1.0rc0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30146d069056a16c61c2b67add685dd050309969a31235bb32fb5fd40d14e465",
          "md5": "9266026fb5311684a9e0ee853fd3db66",
          "sha256": "08fa9ab73b7a2505acc83bb236663a78ae262115f00e6fa21fd65d518dd65f76"
        },
        "downloads": -1,
        "filename": "aiohttp-catcher-0.1.0rc0.tar.gz",
        "has_sig": false,
        "md5_digest": "9266026fb5311684a9e0ee853fd3db66",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 2326,
        "upload_time": "2021-12-31T09:29:24",
        "upload_time_iso_8601": "2021-12-31T09:29:24.125059Z",
        "url": "https://files.pythonhosted.org/packages/30/14/6d069056a16c61c2b67add685dd050309969a31235bb32fb5fd40d14e465/aiohttp-catcher-0.1.0rc0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da681ac96412859476936d74c7c885f900ce96bfa989a4a97fc6962801253647",
          "md5": "5f3a45f0c8a1c1e317209d9c18cf241f",
          "sha256": "07af6021fda8176c86bd4cf8a961a43bd611e0403e0c016fce3df32d2ba183be"
        },
        "downloads": -1,
        "filename": "aiohttp_catcher-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f3a45f0c8a1c1e317209d9c18cf241f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 5171,
        "upload_time": "2021-12-31T16:41:16",
        "upload_time_iso_8601": "2021-12-31T16:41:16.491300Z",
        "url": "https://files.pythonhosted.org/packages/da/68/1ac96412859476936d74c7c885f900ce96bfa989a4a97fc6962801253647/aiohttp_catcher-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "541c98d4e79462b69cd2da59b4ab03daf89b5cefa38947c45f74893d4fa05a67",
          "md5": "a811da00dd6758c97e5bc972ce053b21",
          "sha256": "95c224081e2e26c444a30b07e966247458d9d535ca19b2d6318bee41ea5c2b91"
        },
        "downloads": -1,
        "filename": "aiohttp-catcher-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a811da00dd6758c97e5bc972ce053b21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5390,
        "upload_time": "2021-12-31T16:41:14",
        "upload_time_iso_8601": "2021-12-31T16:41:14.439281Z",
        "url": "https://files.pythonhosted.org/packages/54/1c/98d4e79462b69cd2da59b4ab03daf89b5cefa38947c45f74893d4fa05a67/aiohttp-catcher-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d421d041bdff426b6027f7a61f9f7d31ed7f2a281f0f31c799dfe90f81e295cf",
          "md5": "af6dc11bbab566791f2a84f6dfe97a27",
          "sha256": "5a2e29413ff255c50e1b4743e308a48b19e129b08b1480280321dbabee391f68"
        },
        "downloads": -1,
        "filename": "aiohttp_catcher-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af6dc11bbab566791f2a84f6dfe97a27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 7163,
        "upload_time": "2022-01-06T12:23:24",
        "upload_time_iso_8601": "2022-01-06T12:23:24.030518Z",
        "url": "https://files.pythonhosted.org/packages/d4/21/d041bdff426b6027f7a61f9f7d31ed7f2a281f0f31c799dfe90f81e295cf/aiohttp_catcher-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71cfd09866e5c34320f8293f6517e8aca28315b6c97788d917aa9603c5f9e9ff",
          "md5": "d5cffa260f5388baadf46a54d58a5aeb",
          "sha256": "7678932ae161f27adbe6ebba6d401fe7a9845c4ce71f16c746180ad982bdecdf"
        },
        "downloads": -1,
        "filename": "aiohttp-catcher-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d5cffa260f5388baadf46a54d58a5aeb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 7637,
        "upload_time": "2022-01-06T12:23:22",
        "upload_time_iso_8601": "2022-01-06T12:23:22.276893Z",
        "url": "https://files.pythonhosted.org/packages/71/cf/d09866e5c34320f8293f6517e8aca28315b6c97788d917aa9603c5f9e9ff/aiohttp-catcher-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a5acb347f1d08d8ef2801d9e7edf192ca2b4f815f2dc825f8afd1f6b29b4ea0",
          "md5": "11b90a29cf3da0dca0dfd256a3a98579",
          "sha256": "02e2f7fced10190986f7383c87ed3d65c82bdc28692f6fd95647f82e8b067994"
        },
        "downloads": -1,
        "filename": "aiohttp_catcher-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11b90a29cf3da0dca0dfd256a3a98579",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 7372,
        "upload_time": "2022-01-11T09:13:53",
        "upload_time_iso_8601": "2022-01-11T09:13:53.658442Z",
        "url": "https://files.pythonhosted.org/packages/7a/5a/cb347f1d08d8ef2801d9e7edf192ca2b4f815f2dc825f8afd1f6b29b4ea0/aiohttp_catcher-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e39d139e445e600573be619fad1c001e8e60aad3aa1a7d576dc95597bc5a925",
          "md5": "1374ed62fefa414f7c20c295b407c0cf",
          "sha256": "f9c00df556cc260a616008cbb1ac273f5e5e7758fdb4d78cc797d9576371b684"
        },
        "downloads": -1,
        "filename": "aiohttp-catcher-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1374ed62fefa414f7c20c295b407c0cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 7894,
        "upload_time": "2022-01-11T09:13:52",
        "upload_time_iso_8601": "2022-01-11T09:13:52.217326Z",
        "url": "https://files.pythonhosted.org/packages/3e/39/d139e445e600573be619fad1c001e8e60aad3aa1a7d576dc95597bc5a925/aiohttp-catcher-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64f104dfb55b2056bbae59c29f50da03374041239364217e0f2778ffe7c06983",
          "md5": "9ccb2b80de4181acd1ab34e36f4a94e9",
          "sha256": "9f857981834640cb9ec88e701432e35583e049b413acfe0eb315e695c8c0e5b2"
        },
        "downloads": -1,
        "filename": "aiohttp_catcher-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ccb2b80de4181acd1ab34e36f4a94e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 7831,
        "upload_time": "2022-08-03T07:30:08",
        "upload_time_iso_8601": "2022-08-03T07:30:08.609942Z",
        "url": "https://files.pythonhosted.org/packages/64/f1/04dfb55b2056bbae59c29f50da03374041239364217e0f2778ffe7c06983/aiohttp_catcher-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "424a67618b6f3a58f43dc69bb248d60b17550b7cb67c2bc43bc70b4dd819d6c9",
          "md5": "26858f024db376b3b4e83ee525eab3eb",
          "sha256": "17a6e15c933ce8434b06a5574ecf6c3b5209955e299205ce9eafac504e202955"
        },
        "downloads": -1,
        "filename": "aiohttp-catcher-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "26858f024db376b3b4e83ee525eab3eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 10437,
        "upload_time": "2022-08-03T07:30:06",
        "upload_time_iso_8601": "2022-08-03T07:30:06.218662Z",
        "url": "https://files.pythonhosted.org/packages/42/4a/67618b6f3a58f43dc69bb248d60b17550b7cb67c2bc43bc70b4dd819d6c9/aiohttp-catcher-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64f104dfb55b2056bbae59c29f50da03374041239364217e0f2778ffe7c06983",
        "md5": "9ccb2b80de4181acd1ab34e36f4a94e9",
        "sha256": "9f857981834640cb9ec88e701432e35583e049b413acfe0eb315e695c8c0e5b2"
      },
      "downloads": -1,
      "filename": "aiohttp_catcher-0.3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9ccb2b80de4181acd1ab34e36f4a94e9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 7831,
      "upload_time": "2022-08-03T07:30:08",
      "upload_time_iso_8601": "2022-08-03T07:30:08.609942Z",
      "url": "https://files.pythonhosted.org/packages/64/f1/04dfb55b2056bbae59c29f50da03374041239364217e0f2778ffe7c06983/aiohttp_catcher-0.3.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "424a67618b6f3a58f43dc69bb248d60b17550b7cb67c2bc43bc70b4dd819d6c9",
        "md5": "26858f024db376b3b4e83ee525eab3eb",
        "sha256": "17a6e15c933ce8434b06a5574ecf6c3b5209955e299205ce9eafac504e202955"
      },
      "downloads": -1,
      "filename": "aiohttp-catcher-0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "26858f024db376b3b4e83ee525eab3eb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 10437,
      "upload_time": "2022-08-03T07:30:06",
      "upload_time_iso_8601": "2022-08-03T07:30:06.218662Z",
      "url": "https://files.pythonhosted.org/packages/42/4a/67618b6f3a58f43dc69bb248d60b17550b7cb67c2bc43bc70b4dd819d6c9/aiohttp-catcher-0.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}