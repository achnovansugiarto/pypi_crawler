{
  "info": {
    "author": "Henrik Palmlund Wahlgren @ Palmlund Wahlgren Innovative Technology AB",
    "author_email": "henrik@pwit.se",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# iflag\n\nA Python library for the Itron / Actaris IFLAG and Corus protocol\n\n## Installing\n\nInstall via pip, python 3.6+ only\n\n```pip install iflag```\n\n## About\n\niflag is a library focused on reading and writing data to devices using the IFLAG or \nCorus protocol. Mainly Itron / Actaris gas volume converters. Communication is done over \nTCP/IP\n\n## Features\n\nThe library is now only focused on using Single Address Mode (SAM) of the Corus protocol\nto access data. SEVC-D parameters of I-FLAG is not supported.\n\n* Read parameters\n* Write parameters\n* Read databases (logs), event log not yet implemented\n\n## Usage\n\n- Different firmware versions have different ID for each parameter. But the \n  parameter_id_map is always on id `0x5e`. \n  So the mapping should be known beforehand or it should be read from the device before \n  reading more values.\n\n- Different firmware versions also have different database record layout. You will need \n  to supply a mapping of how the databases looks like for the meters you want to read.\n  A default mapping is not supplied since it would infer opinionated interpretation of \n  some values.\n\n  You should create a mapping like: `Dict[str, Dict[int, List[DatabaseRecordParameter]]]`\n  `interval` is the database and `52` is the length of the database record. A list of\n   `DatabaseRecordParameter` in the order they are appearing in the data base record \n   will make it possible to convert the bytes into python values.\n\n  Ex:\n```python\n  {\n    \"interval\": {\n        52: [\n            DatabaseRecordParameter(name=\"record_duration\", data_class=data.Byte),\n            DatabaseRecordParameter(name=\"status\", data_class=data.Byte),\n            DatabaseRecordParameter(name=\"end_date\", data_class=data.Date),\n            DatabaseRecordParameter(\n                name=\"consumption_interval_unconverted\",\n                data_class=data.Word,\n                affected_by_pulse_input=True,\n            ),\n            DatabaseRecordParameter(\n                name=\"consumption_interval_converted\",\n                data_class=data.ULong,\n                affected_by_pulse_input=True,\n            ),\n            DatabaseRecordParameter(\n                name=\"counter_interval_unconverted\",\n                data_class=data.Word,\n                affected_by_pulse_input=True,\n            ),\n            DatabaseRecordParameter(\n                name=\"counter_interval_converted\",\n                data_class=data.ULong,\n                affected_by_pulse_input=True,\n            ),\n            DatabaseRecordParameter(\n                name=\"temperature_interval_minimum\", data_class=data.Float1\n            ),\n            DatabaseRecordParameter(\n                name=\"temperature_interval_maximum\", data_class=data.Float1\n            ),\n            DatabaseRecordParameter(\n                name=\"temperature_interval_average\", data_class=data.Float1\n            ),\n            DatabaseRecordParameter(\n                name=\"pressure_interval_minimum\", data_class=data.Float2\n            ),\n            DatabaseRecordParameter(\n                name=\"pressure_interval_maximum\", data_class=data.Float2\n            ),\n            DatabaseRecordParameter(\n                name=\"pressure_interval_average\", data_class=data.Float2\n            ),\n            DatabaseRecordParameter(\n                name=\"flowrate_unconverted_interval_minimum\",\n                data_class=data.Float3,\n                affected_by_pulse_input=True,\n            ),\n            DatabaseRecordParameter(\n                name=\"flowrate_unconverted_interval_maximum\",\n                data_class=data.Float3,\n                affected_by_pulse_input=True,\n            ),\n            DatabaseRecordParameter(\n                name=\"flowrate_converted_interval_minimum\",\n                data_class=data.Float3,\n                affected_by_pulse_input=True,\n            ),\n            DatabaseRecordParameter(\n                name=\"flowrate_converted_interval_maximum\",\n                data_class=data.Float3,\n                affected_by_pulse_input=True,\n            ),\n            DatabaseRecordParameter(name=\"none_data_1\", data_class=data.Null4),\n            DatabaseRecordParameter(\n                name=\"flowrate_unconverted_interval_average\",\n                data_class=data.Float3,\n                affected_by_pulse_input=True,\n            ),\n            DatabaseRecordParameter(\n                name=\"flowrate_converted_interval_average\",\n                data_class=data.Float3,\n                affected_by_pulse_input=True,\n            ),\n            DatabaseRecordParameter(name=\"start_date\", data_class=data.Date),\n            DatabaseRecordParameter(name=\"none_data_2\", data_class=data.Null2),\n        ]\n    }\n} \n```\n\n- Good to know: There are several different float formats due to memory constraints in\n    the protocol and device. All floats are handled as `decimal.Decimal` in Python to \n    not have float rounding errors.\n\n### Read parameters:\n\n``python\n\nfrom iflag import CorusClient\nfrom iflag.data import CorusString, Index\nfrom iflag.parse import IFlagParameter\nfrom decimal import Decimal\n\nclient = CorusClient.with_tcp_transport(address=(\"localhost\", 4000))\n# Read single value\nclient.read_parameters([IFlagParameter(id=0x5e, data_class=CorusString)])\n>> {0x5e: \"FL_b0040\"}\n# Read multiple values\nclient.read_parameters(\n    [\n        IFlagParameter(id=0x5e, data_class=CorusString), \n        IFlagParameter(id=48, data_class=Index),\n        IFlagParameter(id=49, data_class=Index)\n    ]\n)\n>> {0x5e: \"FL_b0040\", 48: Decimal(\"234567.982\"), 49: Decimal(\"222222.982\")}\n\n```\n\n### Write parameters\n\n```python\nfrom iflag import CorusClient, TcpTransport\nfrom iflag.data import Date\nfrom iflag.parse import IFlagParameter\nfrom datetime import datetime\n\ntransport = TcpTransport(address=('localhost', 4000))\nclient = CorusClient(transport=transport)\nclient.write_parameters([(IFlagParameter(id=106, data_class=Date), datetime.now())])\n\n```\n\n### Read database\n\n```python\nfrom iflag import CorusClient\nfrom datetime import datetime, timedelta\nclient = CorusClient.with_tcp_transport(address=('localhost', 4000), database_layout=MY_DATABASE_LAYOUT)\nclient.read_database(database='interval', start=datetime.now(), stop=(datetime.now() - timedelta(hours=4)))\n````\n\n - When reading databases you will need to know the `input_pulse_weight`. If it is not \n set on the client at initiation or on the `read_database` call the client will read it \n from the meter automatically.\n\n\n# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n### Added \n### Changed\n### Deprecated\n### Removed\n### Fixed\n### Security\n\n## [1.0.1] - 2020-10-07\n\n### Fixed\n- Index9 was not parsed correctly due to misinterpretation of documentation.\n\n## [1.0.0] - 2020-10-07\n\n### Changed\n - Since different Corus firmware version have different parameter ids and different \n   data database layouts the library is rewritten to be less opinionated and work with \n   all firmwares. This means the user needs to know what ID represents what data and \n   how it is interpreted and how databases the they will read are structured.\n\n## [0.2.0] - 2020-01-14\n\n### Removed\n- Removed internal session handling as it was in the way of optimizing running several actions\ndirectly after each other. Instead now you need to call `client.startup()` in the\nbeginning and `client.shutdown()` when you are done. \n\n## [0.1.2] - 2020-01-14\n\n### Changed\n-  Separated value identification in parsing config for the different databases so that \nit is possible to know if for example an average value is the monthly or hourly average.  \n\n## [0.1.1] - 2020-01-08\n\n### Fixed\n- Fixed error in setup.py that listed the wrong dependency. (attr instead of attrs)\n\n## [0.1.0] - 2020-01-08 [YANKED]\n\n### Added\n- Initial implementation of reading and writing data to Corus device.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pwitab/iflag",
    "keywords": "",
    "license": "BSD-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "iflag",
    "package_url": "https://pypi.org/project/iflag/",
    "platform": "",
    "project_url": "https://pypi.org/project/iflag/",
    "project_urls": {
      "Homepage": "https://github.com/pwitab/iflag"
    },
    "release_url": "https://pypi.org/project/iflag/1.0.1/",
    "requires_dist": [
      "attrs"
    ],
    "requires_python": ">=3.6",
    "summary": "A Python library for the Itron / Actaris IFLAG and Corus protocol",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8362063,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "894b549fd50aa9fc895756599483e0e7b22d6dc79d6876c2c48f269f66ff0a53",
          "md5": "3272802e15a1bf98f0afc0fb9e9f208c",
          "sha256": "7ad9c2ba0762829aba730441658408e0b0f695c3ec714a537a0741a563ca0775"
        },
        "downloads": -1,
        "filename": "iflag-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3272802e15a1bf98f0afc0fb9e9f208c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15154,
        "upload_time": "2020-01-08T13:38:27",
        "upload_time_iso_8601": "2020-01-08T13:38:27.422669Z",
        "url": "https://files.pythonhosted.org/packages/89/4b/549fd50aa9fc895756599483e0e7b22d6dc79d6876c2c48f269f66ff0a53/iflag-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd68d05b7c4aa9479dba6f08edaa986bdd5e3779973ba08b4f711698defe9993",
          "md5": "bfbe15179762b60d8414f55774a1b3ff",
          "sha256": "11b3e4a3095f43867f090719b5e27830c15506b77c2d2d534a6096656a19c153"
        },
        "downloads": -1,
        "filename": "iflag-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bfbe15179762b60d8414f55774a1b3ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14808,
        "upload_time": "2020-01-08T13:38:29",
        "upload_time_iso_8601": "2020-01-08T13:38:29.320366Z",
        "url": "https://files.pythonhosted.org/packages/fd/68/d05b7c4aa9479dba6f08edaa986bdd5e3779973ba08b4f711698defe9993/iflag-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92591e7d63187453311c90e9b897f8ec346293f4c96999361903c610ba6214d5",
          "md5": "f2d0d866a8bc092fec026cfa04a833db",
          "sha256": "91cbbcd74a2f33da95d33ac7c2154fd65f75344b796dcadbd256e2ba71bd4871"
        },
        "downloads": -1,
        "filename": "iflag-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2d0d866a8bc092fec026cfa04a833db",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15419,
        "upload_time": "2020-01-14T10:17:33",
        "upload_time_iso_8601": "2020-01-14T10:17:33.857535Z",
        "url": "https://files.pythonhosted.org/packages/92/59/1e7d63187453311c90e9b897f8ec346293f4c96999361903c610ba6214d5/iflag-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a077a39bdce93d06f7eed21968605f5d652853e1f6c9b68632ef1c7d0364cce",
          "md5": "6656ab1fa534f0fa7f3946650761b08e",
          "sha256": "6e00ae8c39765309633107cff86ba26e31e23fd5e2981f428baab81eccf85614"
        },
        "downloads": -1,
        "filename": "iflag-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6656ab1fa534f0fa7f3946650761b08e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15169,
        "upload_time": "2020-01-14T10:17:35",
        "upload_time_iso_8601": "2020-01-14T10:17:35.561670Z",
        "url": "https://files.pythonhosted.org/packages/9a/07/7a39bdce93d06f7eed21968605f5d652853e1f6c9b68632ef1c7d0364cce/iflag-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "904a4ea225f3d6ec458cb2e8443418d5f202b60ba28f23bb494b6915fc81d37f",
          "md5": "57882bd4b73a21da43de7f1c71a7f160",
          "sha256": "470aecc9f7644dbbb5b773f556542115356279f1a51332cec315727d63a86eb9"
        },
        "downloads": -1,
        "filename": "iflag-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57882bd4b73a21da43de7f1c71a7f160",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15394,
        "upload_time": "2020-01-14T15:46:58",
        "upload_time_iso_8601": "2020-01-14T15:46:58.402338Z",
        "url": "https://files.pythonhosted.org/packages/90/4a/4ea225f3d6ec458cb2e8443418d5f202b60ba28f23bb494b6915fc81d37f/iflag-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e22363fe7e0c194a4cc463f0e8be6e2ab1800e799659b51787672fa54f1e9a48",
          "md5": "01239373b8f555e3fef12d63767b7d42",
          "sha256": "81bb1383f0a7fa0d8febe20c0f26120fe844bfda450354724db4ea9d6aab0c0d"
        },
        "downloads": -1,
        "filename": "iflag-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "01239373b8f555e3fef12d63767b7d42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15294,
        "upload_time": "2020-01-14T15:47:00",
        "upload_time_iso_8601": "2020-01-14T15:47:00.080601Z",
        "url": "https://files.pythonhosted.org/packages/e2/23/63fe7e0c194a4cc463f0e8be6e2ab1800e799659b51787672fa54f1e9a48/iflag-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbda2e8618889368d08ba5eb6499e156e58292610f323d8fbd36dbddee407b32",
          "md5": "f289021e44179caad96db52a2bb6c223",
          "sha256": "f204a5721d8970b4e3439493d5c3a26a4530ad93da0071478ed90c5266f0a570"
        },
        "downloads": -1,
        "filename": "iflag-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f289021e44179caad96db52a2bb6c223",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 39320,
        "upload_time": "2020-10-07T11:46:07",
        "upload_time_iso_8601": "2020-10-07T11:46:07.117314Z",
        "url": "https://files.pythonhosted.org/packages/fb/da/2e8618889368d08ba5eb6499e156e58292610f323d8fbd36dbddee407b32/iflag-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5446d6d02e6e41d27cb3beaec7fcd77b14cdb06babd2be7ca6c039574ecb25c",
          "md5": "9261483aaa6d693757b3767b36689d43",
          "sha256": "47aa93c5c2149ecc7f7d009c9d11964c2d963f8902b230b66810d371ccd74d0f"
        },
        "downloads": -1,
        "filename": "iflag-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9261483aaa6d693757b3767b36689d43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20708,
        "upload_time": "2020-10-07T11:46:09",
        "upload_time_iso_8601": "2020-10-07T11:46:09.558778Z",
        "url": "https://files.pythonhosted.org/packages/d5/44/6d6d02e6e41d27cb3beaec7fcd77b14cdb06babd2be7ca6c039574ecb25c/iflag-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "523120382bc418ffbd27a00d0290c71562f92ede20bfe531cfa77c4aa75006d3",
          "md5": "cf7c20e8fef248cdb3c36c2c8751e212",
          "sha256": "c82a00e58d0f95865e2ce1946d41f7973fb6854114119c0a2b4ed84c1b469004"
        },
        "downloads": -1,
        "filename": "iflag-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf7c20e8fef248cdb3c36c2c8751e212",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 39376,
        "upload_time": "2020-10-07T20:12:18",
        "upload_time_iso_8601": "2020-10-07T20:12:18.054529Z",
        "url": "https://files.pythonhosted.org/packages/52/31/20382bc418ffbd27a00d0290c71562f92ede20bfe531cfa77c4aa75006d3/iflag-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a01b920b6cb5e9dc19f9a4822c86795725857f5ea5df95a65390e9b708d2f58b",
          "md5": "8530420f3880b11117709e81e293bd1c",
          "sha256": "4c551892d97079d72485932de04746013f916da83d3ce915b7d406e945802081"
        },
        "downloads": -1,
        "filename": "iflag-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8530420f3880b11117709e81e293bd1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20793,
        "upload_time": "2020-10-07T20:12:20",
        "upload_time_iso_8601": "2020-10-07T20:12:20.001287Z",
        "url": "https://files.pythonhosted.org/packages/a0/1b/920b6cb5e9dc19f9a4822c86795725857f5ea5df95a65390e9b708d2f58b/iflag-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "523120382bc418ffbd27a00d0290c71562f92ede20bfe531cfa77c4aa75006d3",
        "md5": "cf7c20e8fef248cdb3c36c2c8751e212",
        "sha256": "c82a00e58d0f95865e2ce1946d41f7973fb6854114119c0a2b4ed84c1b469004"
      },
      "downloads": -1,
      "filename": "iflag-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cf7c20e8fef248cdb3c36c2c8751e212",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 39376,
      "upload_time": "2020-10-07T20:12:18",
      "upload_time_iso_8601": "2020-10-07T20:12:18.054529Z",
      "url": "https://files.pythonhosted.org/packages/52/31/20382bc418ffbd27a00d0290c71562f92ede20bfe531cfa77c4aa75006d3/iflag-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a01b920b6cb5e9dc19f9a4822c86795725857f5ea5df95a65390e9b708d2f58b",
        "md5": "8530420f3880b11117709e81e293bd1c",
        "sha256": "4c551892d97079d72485932de04746013f916da83d3ce915b7d406e945802081"
      },
      "downloads": -1,
      "filename": "iflag-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8530420f3880b11117709e81e293bd1c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 20793,
      "upload_time": "2020-10-07T20:12:20",
      "upload_time_iso_8601": "2020-10-07T20:12:20.001287Z",
      "url": "https://files.pythonhosted.org/packages/a0/1b/920b6cb5e9dc19f9a4822c86795725857f5ea5df95a65390e9b708d2f58b/iflag-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}