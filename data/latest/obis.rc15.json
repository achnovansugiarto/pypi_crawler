{
  "info": {
    "author": "ID SIS • ETH Zürich",
    "author_email": "openbis-support@id.ethz.ch",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# openBIS Command Line Tool (oBIS)\n\noBIS is a command-line tool that makes it possible to handle data sets tracked by OpenBIS,\nwhere users have complete freedom to structure and manipulate the data as they wish, while retaining\nthe benefits of openBIS.\n\nWith oBIS, it is possible not only to handle datasets stored in OpenBIS but also available to keep\nonly metadata send to openBIS, while the data itself is managed externally, by the user. In this\ncase, OpenBIS is aware of its existence and the data can be used for provenance tracking.\n\n# Table of contents\n\n1. [Prerequisites and installation](#1-prerequisites)\n2. [Installation](#2-installation)\n3. [Quick start guide](#3-quick-start-guide)\n4. [Usage](#4-usage)\n5. [Work modes](#5-work-modes)\n    1. [Standard Data Store](#51-standard-data-store)\n        1. [Commands](#511-commands)\n        2. [Examples](#512-examples)\n    2. [External Data Store](#52-external-data-store)\n        1. [Settings](#521-settings)\n        2. [Commands](#522-commands)\n        3. [Examples](#523-examples)\n6. [Big Data Link Services](#6-big-data-link-services)\n7. [Rationale for obis](#7-rationale-for-obis)\n8. [Literature](#8-literature)\n\n## 1. Prerequisites\n\n- python 3.6 or higher\n- git 2.11 or higher\n- git-annex 6 or higher [Installation guide](https://git-annex.branchable.com/install/)\n\n## 2. Installation\n\n```\npip3 install obis\n```\n\nSince `obis` is based on `pybis`, the pip command will also install pybis and all its dependencies.\n\n## 3. Quick start guide\n\n**Configure your openBIS Instance**\n```\n# global settings to be use for all obis repositories\nobis config -g set openbis_url=https://localhost:8888\nobis config -g set user=admin\n```\n**Download Physical Dataset**\n```\n# create a physical (-p) obis repository with a folder name\nobis init -p data1\ncd data1\n# check configuration\nobis config get is_physical\n# download dataset giving a single permId\nobis download 20230228091119011-58\n```\n**Upload Physical Dataset**\n```\n# create a physical (-p) obis repository with a folder name\nobis init -p data1\ncd data1\n# check configuration\nobis config get is_physical\n# upload as many files or folder as you want (-f) to an existing object as type RAW_DATA\nobis upload 20230228133001314-59 RAW_DATA -f your_file_a -f your_file_b\n```\n\n## 4. Usage\n\n### 4.1 Help is your friend!\n\n$ obis --help\n\n```\nUsage: obis [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --version                Show the version and exit.\n  -q, --quiet              Suppress status reporting.\n  -s, --skip_verification  Do not verify cerficiates\n  -d, --debug              Show stack trace on error.\n  --help                   Show this message and exit.\n\nCommands:\n  addref         Add the given repository as a reference to openBIS.\n  clone          Clone the repository found in the given data set id.\n  collection     Get/set settings related to the collection.\n  commit         Commit the repository to git and inform openBIS.\n  config         Get/set configurations.\n  data_set       Get/set settings related to the data set.\n  download       Download files of a data set.\n  init           Initialize the folder as a data repository.\n  init_analysis  Initialize the folder as an analysis folder.\n  move           Move the repository found in the given data set id.\n  object         Get/set settings related to the object.\n  removeref      Remove the reference to the given repository from openBIS.\n  repository     Get/set settings related to the repository.\n  settings       Get all settings.\n  status         Show the state of the obis repository.\n  sync           Sync the repository with openBIS.\n  token          create/show a openBIS token\n  upload         Upload files to form a data set.\n```\n\nTo show detailed help for a specific command, type `obis <command> --help` :\n\n```\n$ obis commit --help\nUsage: obis commit [OPTIONS] [REPOSITORY]\n\nOptions:\n  -m, --msg TEXT               A message explaining what was done.\n  -a, --auto_add               Automatically add all untracked files.\n  -i, --ignore_missing_parent  If parent data set is missing, ignore it.\n  --help                       Show this message and exit.\n```\n\n## 5. Work modes\n\noBIS command line tool can work in two modes depending on how data is stored:\n\n1. Standard Data Store mode\n2. External Data Store mode\n\n**Warning:** Each repository can work in a single mode only! Mixing modes is not supported.\n\nDepending on the mode, some commands may be unavailable or behave differently. Please read details\nin the adequate section.\n\nHere is a short summary of which commands are available in given modes:\n\n| Command          | Standard Data Store | External Data Store |\n|------------------|:-------------------:|:-------------------:|\n| addref           |          ❌          |          ✅          |\n| clone            |          ❌          |          ✅          |\n| collection get   |          ✅          |          ✅          |\n| collection set   |          ✅          |          ✅          |\n| collection clear |          ❌          |          ✅          |\n| commit           |          ❌          |          ✅          |\n| config get       |          ✅          |          ✅          |\n| config set       |          ✅          |          ✅          |\n| config clear     |          ❌          |          ✅          |\n| data_set get     |          ❌          |          ✅          |\n| data_set set     |          ❌          |          ✅          |\n| data_set clear   |          ❌          |          ✅          |\n| data_set search  |          ✅          |          ❌          |\n| download         |          ✅          |          ❌          |\n| init             |          ❌          |          ✅          |\n| init -p          |          ✅          |          ❌          |\n| init_analysis    |          ❌          |          ✅          |\n| move             |          ❌          |          ✅          |\n| object get       |          ✅          |          ✅          |\n| object set       |          ✅          |          ✅          |\n| object clear     |          ❌          |          ✅          |\n| object search    |          ✅          |          ❌          |\n| removeref        |          ❌          |          ✅          |\n| repository get   |          ❌          |          ✅          |\n| repository set   |          ❌          |          ✅          |\n| repository clear |          ❌          |          ✅          |\n| settings get     |          ❌          |          ✅          |\n| settings set     |          ❌          |          ✅          |\n| settings clear   |          ❌          |          ✅          |\n| status           |          ❌          |          ✅          |\n| sync             |          ❌          |          ✅          |\n| token            |          ❌          |          ✅          |\n| upload           |          ✅          |          ❌          |\n\n**Login**\n\nSome commands like `download` or `upload` will connect to OpenBIS instance. At that time, oBIS will\nuse username configured in `.obis/config.json` and will ask for password whenever session expires or\nusername changes.\n\n## 5.1 Standard Data Store\n\nStandard Data Store mode depicts a workflow where datasets are stored directly in the OpenBIS\ninstance. In this mode user can download/upload files to OpenBIS, search for objects/datasets\nfulfilling filtering criteria\nand get/set properties of objects/collections represented by datasets in current repository.\n\n## 5.1.1 Commands\n\n**collection**\n\n```\nobis collection get [key1] [key2] ...\nobis collection set [key1]=[value1], [key2]=[value2] ...\n```\n\nWith `collection` command, obis crawls through current repository and gathers all data set ids and\nthen - if\ndata set is connected directly to a collection - gets or sets given properties to it in OpenBIS\n\n*Note some property names may require to be encapsulated in '', e.g. '$name'*\n\n**config**\n\n```\nobis config get [key]\nobis config set [key]=[value]\n```\n\nWith `config` command, obis can get/set config of a local repository, e.g. when setting access link\nto OpenBIS instance\n\nThe settings are saved within the obis repository, in the `.obis` folder, as JSON files, or\nin `~/.obis` for the global settings. They can be added/edited manually, which might be useful when\nit comes to integration with other tools.\n\n**Example `.obis/config.json`**\n\n```\n{\n    \"fileservice_url\": null,\n    \"git_annex_hash_as_checksum\": true,\n    \"hostname\": \"bsse-bs-dock-5-160.ethz.ch\",\n    \"is_physical\": true,\n    \"openbis_url\": \"http://localhost:8888\"\n}\n```\n\n**data_set**\n\n```\nobis data_set search [OPTIONS]\n\nOptions:\n  -object_type, --object_type TEXT              \n                                  Object type code to filter by\n  -space, --space TEXT            Space code\n  -project, --project TEXT        Full project identification code\n  -experiment, --experiment TEXT  Full experiment code\n  -type, --type TEXT              Type code\n  -registration-date, --registration-date TEXT\n                                  Registration date, it can be in the format\n                                  \"oYYYY-MM-DD\" (e.g. \">2023-01-31\", \"=2023-01-31\", \"<2023-01-31\")\n  -modification-date, --modification-date TEXT\n                                  Modification date, it can be in the format\n                                  \"oYYYY-MM-DD\" (e.g. \">2023-01-31\", \"=2023-01-31\", \"<2023-01-31\")\n  -property TEXT                  Property code\n  -property-value TEXT            Property value\n  -save, --save TEXT              Directory name to save results\n```\n\nWith `data_set search` command, obis connects to a configured OpenBIS instance and searches for all\ndata sets that fulfill given filtering criteria.\nAt least one filtering criteria must be specified. Search results can be downloaded by\nusing `save` option.\n\n*Note: Filtering by `-project` may not work when `Project Samples` are disabled in OpenBIS\nconfiguration.*\n\n**download**\n\n```\nobis download [options] [data_set_id]\n\nOptions:\n  -from-file, --from-file TEXT  An output .CSV file from `obis data_set search`\n                                command with the list of objects to download\n                                data sets from\n  -f, --file TEXT               File in the data set to download - downloading\n                                all if not given.\n  -s, --skip_integrity_check    Flag to skip file integrity check with\n                                checksums\n```\n\nThe `download` command downloads, the files of a given data set from the OpenBIS instance specified\nin `config`. This command requires the DownloadHandler / FileInfoHandler microservices to be running\nand the `fileservice_url` needs to be configured.\n\n**init**\n\n```\nobis init -p [folder]\n```\n\nIf a folder is given, obis will initialize that folder as an obis repository that works in the\nStandard Data Store mode.\nIf not, it will use the current folder.\n\n**object get / set**\n\n```\nobis collection get [key1] [key2] ...\nobis collection set [key1]=[value1], [key2]=[value2] ...\n```\n\nWith `get` and `set` commands, obis crawls through current repository and gathers all data set ids\nand then - if\ndata set is connected directly to an object - gets or sets given properties to it in OpenBIS\n\n*Note some property names may require to be encapsulated in '', e.g. '$name'*\n\n**object search**\n\n```\nobis object search [OPTIONS]\n\nOptions:\n  -type, --type TEXT              Type code to filter by\n  -space, --space TEXT            Space code\n  -project, --project TEXT        Full project identification code\n  -experiment, --experiment TEXT  Full experiment \n  -registration-date, --registration-date TEXT\n                                  Registration date, it can be in the format\n                                  \"oYYYY-MM-DD\" (e.g. \">2023-01-31\", \"=2023-01-31\", \"<2023-01-31\")\n  -modification-date, --modification-date TEXT\n                                  Modification date, it can be in the format\n                                  \"oYYYY-MM-DD\" (e.g. \">2023-01-31\", \"=2023-01-31\", \"<2023-01-31\")\n  -property TEXT                  Property code\n  -property-value TEXT            Property value\n  -save, --save TEXT              File name to save results in csv format\n```\n\nWith `object search` command, obis connects to a configured OpenBIS instance and searches for all\nobjects/samples that fulfill given filtering criteria.\nAt least one filtering criteria must be specified. Search results can be downloaded int a file by\nusing `-save` option.\n\n*Note: Filtering by `-project` may not work when `Project Samples` are disabled in OpenBIS\nconfiguration.*\n\n**upload**\n\n```\nobis upload [sample_id] [data_set_type] [OPTIONS]\n```\n\nWith `upload` command, a new data set of type `data_set_type` will be created under\nobject `sample_id`. Files and folders specified with `-f` flag will be uploaded to a newly created\ndata set.\n\n### 5.1.2 Examples\n\n**Create an obis repository to work in Standard Data Store mode**\n\n```\n# global settings to be use for all obis repositories\nobis config -g set openbis_url=https://localhost:8888\nobis config -g set user=admin\n# create an obis repository with a folder name\nobis init -p data1\ncd data1\n# check configuration\nobis config get is_physical\n# search for objects of type BACTERIA in sapce TESTID  in OpenBIS\nobis object search -space TESTID -type BACTERIA\n# save search results in a files\nobis object search -space TESTID -type BACTERIA -save results.csv\nobis object search -space TESTID -save results_space.csv\n# upload files to an existing object as type RAW_DATA\nobis upload 20230228133001314-59 RAW_DATA -f results.csv -f results_space.csv\n```\n\n**download datasets of an object and check properties**\n\n```\n# assuming we are in a configured obis repository\nobis download 20230228091119011-58\n# set object name to XYZ\nobis object set '$name'=XYZ\n# set children of an object to /TESTID/PROJECT_101/PROJECT_101_EXP_3\nobis object set children=/TESTID/PROJECT_101/PROJECT_101_EXP_3\n```\n\n## 5.2 External Data Store\n\nExternal Data Store mode allows for orderly management of data in\nconditions that require great flexibility. oBIS makes it possible to track data on a file system,\nwhere users have complete freedom to structure and manipulate the data as they wish, while retaining\nthe benefits of openBIS. With oBIS, only metadata is actually stored and managed by openBIS. The\ndata itself is managed externally, by the user, but openBIS is aware of its existence and the data\ncan be used for provenance tracking.\n\nUnder the covers, obis takes advantage of publicly available and tested tools to manage data on the\nfile system. In particular, it uses git and git-annex to track the content of a dataset. Using\ngit-annex, even large binary artifacts can be tracked efficiently. For communication with openBIS,\nobis uses the openBIS API, which offers the power to register and track all metadata supported by\nopenBIS.\n\n### 5.2.1 Settings\n\nWith `get` you retrieve one or more settings. If the `key` is omitted, you retrieve all settings of\nthe `type`:\n\n```\nobis [type] [options] get [key]\n```\n\nWith `set` you set one or more settings:\n\n```\nobis [type] [options] set [key1]=[value1], [key2]=[value2], ...\n```\n\nWith `clear` you unset one or more settings:\n\n```\nobis [type] [options] clear [key1]\n```\n\nWith the type `settings` you can get all settings at once:\n\n```\nobis settings [options] get\n```\n\nThe option `-g` can be used to interact with the global settings. The global settings are stored\nin `~/.obis` and are copied to an obis repository when that is created.\n\nFollowing settings exist:\n\n| type       | setting                      | description                                                                                                                                                                                                                                                                             |\n|------------|------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| collection |  `id`                        | Identifier of the collection the created data set is attached to. Use either this or the object id.                                                                                                                                                                                     |\n| config     | `allow_only_https`           | Default is true. If false, http can be used to connect to openBIS.                                                                                                                                                                                                                      |\n| config     | `fileservice_url`            | URL for downloading files. See DownloadHandler / FileInfoHandler services.                                                                                                                                                                                                              |\n| config     | `git_annex_backend`          | Git annex backend to be used to calculate file hashes. Supported backends are SHA256E (default), MD5 and WORM.                                                                                                                                                                          |\n| config     | `git_annex_hash_as_checksum` | Default is true. If false, a CRC32 checksum will be calculated for openBIS. Otherwise, the hash calculated by git-annex will be used.                                                                                                                                                   |\n| config     | `hostname`                   | Hostname to be used when cloning / moving a data set to connect to the machine where the original copy is located.                                                                                                                                                                      |\n| config     | `openbis_url`                | URL for connecting to openBIS (only protocol://host:port, without a path).                                                                                                                                                                                                              |\n| config     | `openbis_token`              | Token to use when connecting to openBIS. Can be either a session token or a personal access token. Alternatively, it can be a path to a file containing the token.                                                                                                                      |\n| config     | `session_name`               | The name every personal access token is associated with.                                                                                                                                                                                                                                |\n| config     | `obis_metadata_folder`       | Absolute path to the folder which obis will use to store its metadata. If not set, the metadata will be stored in the same location as the data. This setting can be useful when dealing with read-only access to the data. The clone and move commands will not work when this is set. |\n| config     | `user`                       | User for connecting to openBIS.                                                                                                                                                                                                                                                         |\n| data_set   | `type`                       | Data set type of data sets created by obis.                                                                                                                                                                                                                                             |\n| data_set   | `properties`                 | Data set properties of data sets created by obis.                                                                                                                                                                                                                                       |\n| object     | `id`                         | Identifier of the object the created data set is attached to. Use either this or the collection id.                                                                                                                                                                                     |\n| repository | `data_set_id`                | This is set by obis. Is is the id of the most recent data set created by obis and will be used as the parent of the next one.                                                                                                                                                           |\n| repository | `external_dms_id`            | This is set by obis. Id of the external dms in openBIS.                                                                                                                                                                                                                                 |\n| repository | `id`                         | This is set by obis. Id of the obis repository.                                                                                                                                                                                                                                         |\n\nThe settings are saved within the obis repository, in the `.obis` folder, as JSON files, or\nin `~/.obis` for the global settings. They can be added/edited manually, which might be useful when\nit comes to integration with other tools.\n\n**Example `.obis/config.json`**\n\n```\n{\n    \"fileservice_url\": null,\n    \"git_annex_hash_as_checksum\": true,\n    \"hostname\": \"bsse-bs-dock-5-160.ethz.ch\",\n    \"openbis_url\": \"http://localhost:8888\"\n}\n```\n\n**Example `.obis/data_set.json`**\n\n```\n{\n    \"properties\": {\n        \"K1\": \"v1\",\n        \"K2\": \"v2\"\n    },\n    \"type\": \"UNKNOWN\"\n}\n```\n\n## 5.2.2 Commands\n\n**init**\n\n```\nobis init [folder]\n```\n\nIf a folder is given, obis will initialize that folder as an obis in the External Data Store mode.\nIf not, it will use the current folder.\n\n**init_analysis**\n\n```\nobis init_analysis [options] [folder]\n```\n\nWith init_analysis, a repository can be created which is derived from a parent repository. If it is\ncalled from within a repository, that will be used as a parent. If not, the parent has to be given\nwith the `-p` option.\n\n**commit**\n\n```\nobis commit [options]\n```\n\nThe `commit` command adds files to a new data set in openBIS. If the `-m` option is not used to\ndefine a commit message, the user will be asked to provide one.\n\n**sync**\n\n```\nobis sync\n```\n\nWhen git commits have been done manually, the `sync` command creates the corresponding data set in\nopenBIS. Note that, when interacting with git directly, use the git annex commands whenever\napplicable, e.g. use \"git annex add\" instead of \"git add\".\n\n**status**\n\n```\nobis status [folder]\n```\n\nThis shows the status of the repository folder from which it is invoked, or the one given as a\nparameter. It shows file changes and whether the repository needs to be synchronized with openBIS.\n\n**clone**\n\n```\nobis clone [options] [data_set_id]\n```\n\nThe `clone` command copies a repository associated with a data set and registers the new copy in\nopenBIS. In case there are already multiple copied of the repository, obis will ask from which copy\nto clone.\n\n- To avoid user interaction, the copy index can be chosen with the option `-c`\n- With the option `-u` a user can be defined for copying the files from a remote system\n- By default, the file integrity is checked by calculating the checksum. This can be skipped\n  with `-s`.\n\n_Note_: This command does not work when `obis_metadata_folder` is set.\n\n**move**\n\n```\nobis move [options] [data_set_id]\n```\n\nThe `move` command works the same as `clone`, except that the old repository will be removed.\n\nNote: This command does not work when `obis_metadata_folder` is set.\n\n**addref / removeref**\n\n```\nobis addref\nobis removeref\n```\n\nObis repository folders can be added or removed from openBIS. This can be useful when a repository\nwas moved or copied without using the `move` or `copy` commands.\n\n**token**\n\n```\nobis token get <session_name> [--validity-days] [--validity-weeks] [--validity-months]\n```\n\nGets or creates a new personal access token (PAT) and stores it in the obis configuration. If\nno `session_name` is provided or is not stored in the configuration, you'll be asked interactively.\nIf no validity period is provided, the maximum (configured by the server) is used. If a PAT with\nthis `session_name` already exists and it is going to expire soon (according to server\nsetting `personal_access_tokens_validity_warning_period`), a new PAT will be created, stored in the\nobis configuration and used for every subsequent request.\n\n### 5.2.3 Examples\n\n**Create an obis repository and commit to openBIS**\n\n```\n# global settings to be use for all obis repositories\nobis config -g set openbis_url=https://localhost:8888\nobis config -g set user=admin\n# create an obis repository with a file\nobis init data1\ncd data1\necho content >> example_file\n# configure the repository\nobis data_set set type=UNKNOWN\nobis object set id=/DEFAULT/DEFAULT\n# commit to openBIS\nobis commit -m 'message'\n```\n\n**Commit to git and sync manually**\n\n```\n# assuming we are in a configured obis repository\necho content >> example_file\ngit annex add example_file\ngit commit -m 'message'\nobis sync\n```\n\n**Create an analysis repository**\n\n```\n# assuming we have a repository 'data1'\nobis init_analysis -p data1 analysis1\ncd analysis1\nobis data_set set type=UNKNOWN\nobis object set id=/DEFAULT/DEFAULT\necho content >> example_file\nobis commit -m 'message'\n```\n\n## 6. Big Data Link Services\n\nThe Big Data Link Services can be used to download files which are contained in an obis repository.\nThe services are included in the installation folder of openBIS,\nunder `servers/big_data_link_services`. For how to configure and run them, consult\nthe [README.md](https://sissource.ethz.ch/sispub/openbis/blob/master/big_data_link_server/README.md)\nfile.\n\n## 7. Rationale for obis\n\nData-provenance tracking tools like openBIS make it possible to understand and follow the research\nprocess. What was studied, what data was acquired and how, how was data analyzed to arrive at final\nresults for publication -- this is information that is captured in openBIS. In the standard usage\nscenario, openBIS stores and manages data directly. This has the advantage that openBIS acts as a\ngatekeeper to the data, making it easy to keep backups or enforce access restrictions, etc. However,\nthis way of working is not a good solution for all situations.\n\nSome research groups work with large amounts of data (e.g., multiple TB), which makes it inefficient\nand impractical to give openBIS control of the data. Other research groups require that data be\nstored on a shared file system under a well-defined directory structure, be it for historical\nreasons or because of the tools they use. In this case as well, it is difficult to give openBIS full\ncontrol of the data.\n\nFor situations like these, we have developed `obis`, a tool for orderly management of data in\nconditions that require great flexibility. `obis` makes it possible to track data on a file system,\nwhere users have complete freedom to structure and manipulate the data as they wish, while retaining\nthe benefits of openBIS. With `obis`, only metadata is actually stored and managed by openBIS. The\ndata itself is managed externally, by the user, but openBIS is aware of its existence and the data\ncan be used for provenance tracking. `obis` is packaged as a stand-alone utility, which, to be\navailable, only needs to be added to the `PATH` variable in a UNIX or UNIX-like environment.\n\nUnder the covers, `obis` takes advantage of publicly available and tested tools to manage data on\nthe file system. In particular, it uses `git` and `git-annex` to track the content of a dataset.\nUsing `git-annex`, even large binary artifacts can be tracked efficiently. For communication with\nopenBIS, `obis` uses the openBIS API, which offers the power to register and track all metadata\nsupported by openBIS.\n\n## 8. Literature\n\nV. Korolev, A. Joshi, V. Korolev, M.A. Grasso, A. Joshi, M.A. Grasso, et al., \"PROB: A tool for\ntracking provenance and reproducibility of big data experiments\", Reproduce '14. HPCA 2014, vol. 11,\npp. 264-286, 2014.\nhttp://ebiquity.umbc.edu/_file_directory_/papers/693.pdf\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://sissource.ethz.ch/sispub/openbis/tree/master/app-openbis-command-line",
    "keywords": "",
    "license": "Apache Software License Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "obis",
    "package_url": "https://pypi.org/project/obis/",
    "platform": null,
    "project_url": "https://pypi.org/project/obis/",
    "project_urls": {
      "Homepage": "https://sissource.ethz.ch/sispub/openbis/tree/master/app-openbis-command-line"
    },
    "release_url": "https://pypi.org/project/obis/0.4.1/",
    "requires_dist": null,
    "requires_python": ">=3.3",
    "summary": "Local data management with assistance from OpenBIS.",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17526654,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad18dbd2da7db26986362f73e790eff52e0e8690c484e4ffe2b91b41b62f50e9",
          "md5": "b1339a61e3ce117f84f0311d5cee87ad",
          "sha256": "5680dee984802e714baab7f8af4d78c8b9c0953f035308556947d3dad67a7af1"
        },
        "downloads": -1,
        "filename": "obis-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b1339a61e3ce117f84f0311d5cee87ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 246742,
        "upload_time": "2019-06-24T09:37:54",
        "upload_time_iso_8601": "2019-06-24T09:37:54.827204Z",
        "url": "https://files.pythonhosted.org/packages/ad/18/dbd2da7db26986362f73e790eff52e0e8690c484e4ffe2b91b41b62f50e9/obis-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bf006dd5153897cb933e571b714300e23e3789c0ab54677d714d68ac35bbeda",
          "md5": "8789d41ff44761f344d098472c0d9811",
          "sha256": "96f627aa7cf7e4ab8a1a782d1944668846ee9226fef64f0a275d4da628d9c4de"
        },
        "downloads": -1,
        "filename": "obis-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8789d41ff44761f344d098472c0d9811",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 245908,
        "upload_time": "2021-02-23T10:43:49",
        "upload_time_iso_8601": "2021-02-23T10:43:49.876052Z",
        "url": "https://files.pythonhosted.org/packages/4b/f0/06dd5153897cb933e571b714300e23e3789c0ab54677d714d68ac35bbeda/obis-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e88132abf19419de91a1d7509eee21a30f8084ed176e90ce5064f6554d56de7a",
          "md5": "96b0953a7facce22a222a284ee0cdec1",
          "sha256": "3b242807dd68f8debcfd13a54e9ade0d1b3a2750218cd4f62862c243ad03e237"
        },
        "downloads": -1,
        "filename": "obis-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "96b0953a7facce22a222a284ee0cdec1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 266094,
        "upload_time": "2021-06-09T06:23:58",
        "upload_time_iso_8601": "2021-06-09T06:23:58.829418Z",
        "url": "https://files.pythonhosted.org/packages/e8/81/32abf19419de91a1d7509eee21a30f8084ed176e90ce5064f6554d56de7a/obis-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "089f00861dadd5b62a6c247c0f9640feb36e7df5f6ded594a8b797d7d730a2f5",
          "md5": "6da3dba854c049ab5b9384ff93596e10",
          "sha256": "35ee668148ba33ef8e3b5adf1b98369ae1901c7488333b386ba8c858221d1cb6"
        },
        "downloads": -1,
        "filename": "obis-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6da3dba854c049ab5b9384ff93596e10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 274949,
        "upload_time": "2022-10-06T11:17:04",
        "upload_time_iso_8601": "2022-10-06T11:17:04.864276Z",
        "url": "https://files.pythonhosted.org/packages/08/9f/00861dadd5b62a6c247c0f9640feb36e7df5f6ded594a8b797d7d730a2f5/obis-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adb8a88780cab0feeff40d92ba35ef6c4598fbf46783a15a9efa4388ee74c2a8",
          "md5": "2de139616c6b923b305f72fc5af6fe63",
          "sha256": "bfb87644356845fd75326012e3f1f036beccc09ab068ee4047f0f463b6b21229"
        },
        "downloads": -1,
        "filename": "obis-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2de139616c6b923b305f72fc5af6fe63",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 211412,
        "upload_time": "2022-10-13T12:45:21",
        "upload_time_iso_8601": "2022-10-13T12:45:21.958675Z",
        "url": "https://files.pythonhosted.org/packages/ad/b8/a88780cab0feeff40d92ba35ef6c4598fbf46783a15a9efa4388ee74c2a8/obis-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75ced1724bb790d575e6eebd8ee087c815dbca5cf8c14718ad003a06bc67e69b",
          "md5": "7c382e9f74419e63eba1d36efedf7613",
          "sha256": "26509c9d60004d32c04aa90ec53dc0c0e210be2f9d57c584bde6141fbecdaa35"
        },
        "downloads": -1,
        "filename": "obis-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7c382e9f74419e63eba1d36efedf7613",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 283318,
        "upload_time": "2023-03-07T09:15:50",
        "upload_time_iso_8601": "2023-03-07T09:15:50.562260Z",
        "url": "https://files.pythonhosted.org/packages/75/ce/d1724bb790d575e6eebd8ee087c815dbca5cf8c14718ad003a06bc67e69b/obis-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4fa93268f90c15848dcf746db990c08c7c6f1953e1d4f8a769ffd3307624336",
          "md5": "4761215243c39f74377d2affd04d2701",
          "sha256": "923c2aba1a7b6d905da8cf8dbf5ae87bfde71367ad94f4174c65df6820c5814b"
        },
        "downloads": -1,
        "filename": "obis-0.4.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4761215243c39f74377d2affd04d2701",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 283479,
        "upload_time": "2023-03-07T14:14:06",
        "upload_time_iso_8601": "2023-03-07T14:14:06.723001Z",
        "url": "https://files.pythonhosted.org/packages/a4/fa/93268f90c15848dcf746db990c08c7c6f1953e1d4f8a769ffd3307624336/obis-0.4.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3475c3f95739775e7bf2393e0ef8173769e51f721a2dcef2a4e9192e9d69cbd3",
          "md5": "78fb0de1aac0463d15440ee39df18a90",
          "sha256": "739b755c4096085463650a5ebfaa9d3e373351474583c172582b13ba4f06c481"
        },
        "downloads": -1,
        "filename": "obis-0.4.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "78fb0de1aac0463d15440ee39df18a90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 281403,
        "upload_time": "2023-02-28T14:36:20",
        "upload_time_iso_8601": "2023-02-28T14:36:20.316054Z",
        "url": "https://files.pythonhosted.org/packages/34/75/c3f95739775e7bf2393e0ef8173769e51f721a2dcef2a4e9192e9d69cbd3/obis-0.4.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fde715e2aa7bcd87ba99ae0efa5ada208734a5a5121173e1666187216f5ed83f",
          "md5": "eb1c81041bd64a86f356345428c80020",
          "sha256": "1ba084f9a5af1c4f3384075d7a27d29d271c55d1aebe4ce70f454a6a9ea7f4ad"
        },
        "downloads": -1,
        "filename": "obis-0.4.0rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "eb1c81041bd64a86f356345428c80020",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 281925,
        "upload_time": "2023-03-01T09:38:16",
        "upload_time_iso_8601": "2023-03-01T09:38:16.761896Z",
        "url": "https://files.pythonhosted.org/packages/fd/e7/15e2aa7bcd87ba99ae0efa5ada208734a5a5121173e1666187216f5ed83f/obis-0.4.0rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0rc3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10c9216ec8899646ad8d74ddea628e1bb03a9d0ad10711bc55674b16441f634d",
          "md5": "d0a4838aa1dce6c50adfd4ca0896cb9c",
          "sha256": "fcf9f343d72edf108ba3b1edcfa326465a5b1626b9fc64a83acb0a5e816f2e2e"
        },
        "downloads": -1,
        "filename": "obis-0.4.0rc3.tar.gz",
        "has_sig": false,
        "md5_digest": "d0a4838aa1dce6c50adfd4ca0896cb9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 283002,
        "upload_time": "2023-03-02T11:28:19",
        "upload_time_iso_8601": "2023-03-02T11:28:19.127592Z",
        "url": "https://files.pythonhosted.org/packages/10/c9/216ec8899646ad8d74ddea628e1bb03a9d0ad10711bc55674b16441f634d/obis-0.4.0rc3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0rc4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2855bc7f45439a83a6658239a56c7818be162800bf73564d05e3d31f251386fa",
          "md5": "315534d79e37e0d7b9e8a9f58e11c6bb",
          "sha256": "041c3d8e39546581fe2c7ff56db97c3065924f8f382d59ed8e0fa800a53418c8"
        },
        "downloads": -1,
        "filename": "obis-0.4.0rc4.tar.gz",
        "has_sig": false,
        "md5_digest": "315534d79e37e0d7b9e8a9f58e11c6bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 283156,
        "upload_time": "2023-03-03T11:17:59",
        "upload_time_iso_8601": "2023-03-03T11:17:59.482241Z",
        "url": "https://files.pythonhosted.org/packages/28/55/bc7f45439a83a6658239a56c7818be162800bf73564d05e3d31f251386fa/obis-0.4.0rc4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0rc5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eefa7e6b69e71a341947203c5e4fc6a347d84555de6ffe36ea94a77ad3366321",
          "md5": "957c522f3143d2bc1a63df5ce8cf6374",
          "sha256": "0fadf7d083e09703f49754a85ae2d98558853ca49823ff001dfa5aba441120fc"
        },
        "downloads": -1,
        "filename": "obis-0.4.0rc5.tar.gz",
        "has_sig": false,
        "md5_digest": "957c522f3143d2bc1a63df5ce8cf6374",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 283118,
        "upload_time": "2023-03-03T14:41:47",
        "upload_time_iso_8601": "2023-03-03T14:41:47.494481Z",
        "url": "https://files.pythonhosted.org/packages/ee/fa/7e6b69e71a341947203c5e4fc6a347d84555de6ffe36ea94a77ad3366321/obis-0.4.0rc5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0rc6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ca60c036d99386746db152a0e940485910162b0b38420b307a22e7db7b81324",
          "md5": "86f438071d82a463fd88909b8e8a44c2",
          "sha256": "65600b59f3c28793bf3303ff0d897c78b863cdbe708c1f2b577c3df88d50c38f"
        },
        "downloads": -1,
        "filename": "obis-0.4.0rc6.tar.gz",
        "has_sig": false,
        "md5_digest": "86f438071d82a463fd88909b8e8a44c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 283327,
        "upload_time": "2023-03-07T08:45:59",
        "upload_time_iso_8601": "2023-03-07T08:45:59.894826Z",
        "url": "https://files.pythonhosted.org/packages/3c/a6/0c036d99386746db152a0e940485910162b0b38420b307a22e7db7b81324/obis-0.4.0rc6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7238c6786c41ae01375d4d29cca1e2779ed1900dd4b4d02e9235f88997086e77",
          "md5": "dbf6b3937c55c47951eadfb3c2b81f12",
          "sha256": "91f3d25dbf696dd84a9e01d4ba3bf1fa93ec338af7b74e1b0235802601921b35"
        },
        "downloads": -1,
        "filename": "obis-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dbf6b3937c55c47951eadfb3c2b81f12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 283768,
        "upload_time": "2023-03-29T13:54:08",
        "upload_time_iso_8601": "2023-03-29T13:54:08.348058Z",
        "url": "https://files.pythonhosted.org/packages/72/38/c6786c41ae01375d4d29cca1e2779ed1900dd4b4d02e9235f88997086e77/obis-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "915dca684f006f12f14e26acab571fff0e7bbfbad11f7798fe68eec4f0e7a648",
          "md5": "491faf5efeef528ce6aa6ede75718a05",
          "sha256": "f4f5be8d9110d64706f404496e4fde79a8abf77281926d253a6277c2b8c31c9e"
        },
        "downloads": -1,
        "filename": "obis-0.4.2rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "491faf5efeef528ce6aa6ede75718a05",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 287774,
        "upload_time": "2023-03-31T13:10:06",
        "upload_time_iso_8601": "2023-03-31T13:10:06.560741Z",
        "url": "https://files.pythonhosted.org/packages/91/5d/ca684f006f12f14e26acab571fff0e7bbfbad11f7798fe68eec4f0e7a648/obis-0.4.2rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7238c6786c41ae01375d4d29cca1e2779ed1900dd4b4d02e9235f88997086e77",
        "md5": "dbf6b3937c55c47951eadfb3c2b81f12",
        "sha256": "91f3d25dbf696dd84a9e01d4ba3bf1fa93ec338af7b74e1b0235802601921b35"
      },
      "downloads": -1,
      "filename": "obis-0.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dbf6b3937c55c47951eadfb3c2b81f12",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.3",
      "size": 283768,
      "upload_time": "2023-03-29T13:54:08",
      "upload_time_iso_8601": "2023-03-29T13:54:08.348058Z",
      "url": "https://files.pythonhosted.org/packages/72/38/c6786c41ae01375d4d29cca1e2779ed1900dd4b4d02e9235f88997086e77/obis-0.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}