{
  "info": {
    "author": "柒意",
    "author_email": "396667207@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![Downloads](https://pepy.tech/badge/graphql-schema-parse)](https://pepy.tech/project/graphql-schema-parse)\n# graphql_schema_parse\n> 解析GraphQL文档，并提供将其转成**.gql**(前端查询可用的query字符串)，**.json**(requests可用的json关键字参数接收数据)，**.txt**(sqlmap可用的扫描文件 --to sqlamp 支持的是 sqlmap -r 单接口, --to burp 支持的是sqlmap -l 多接口扫描)\n\n## [GraphQL](https://graphql.cn/)\n> GraphQL 既是一种用于 API 的查询语言也是一个满足你数据查询的运行时，详细内容点击标题访问官网\n在实际工作种，最常用的是 query(查询), mutation(更改/新增), subscription\n\n当发起一个GraphQL请求之后，通过抓包能够发现，最终和RESTFul发送请求没多大区别，它指定了JSON格式传参数，大致如下\n![](images/发送graphq.png)\n![](images/graphql请求数据.png)\n```json\n{\n  \"query\": \" query users {\\n        users{\\n                  id\\n                  username\\n                 }\\n             \\n        }\\n        \",\n  \"variables\": {},\n  \"operationName\": \"users\"\n}\n```\n```json\n{\n  \"query\": \"mutation addUser($username: String!, $password: String!) {\\n  addUser(username: $username, password: $password) {\\n    id\\n    username\\n  }\\n}\\n\",\n  \"variables\": {\n    \"username\": \"gql\",\n    \"password\": \"gql1\"\n  },\n  \"operationName\": \"addUser\"\n}\n```\n```json\n{\n  \"query\": \"mutation addUserInput($user: AddUserInput!) {\\n  addUserInput(user: $user) {\\n    id\\n    username\\n  }\\n}\\n\",\n  \"variables\": {\n    \"user\": {\n      \"username\": \"haha\",\n      \"password\": \"gg\"\n    }\n  },\n  \"operationName\": \"addUserInput\"\n}\n```\n\n- query: 其实就是生成的查询部分语句，前端传字段后端定义有返回\n- variables: 使用query语句中的变量名\n- operationName: 则是后端在实现时指定的接口名称(暂时这么理解吧)\n![](images/介绍.png)\n**这里用的Python语言，实际 `_` 会被转换成 `驼峰写法`**\n\n## GraphQL示例应用\n> 提供的GraphQL示例应用源码地址：https://gitee.com/zy7y/starlette-example\n### 源码使用\n1. 克隆\n```shell\ngit clone https://gitee.com/zy7y/starlette-example\n```\n2. 安装依赖\n```shell\npip install -r requirements.txt \npip install strawberry-graphql[debug-server]\n```\n![](images/依赖安装.png)\n3. 启动\n```shell\ncd injection_service\\graphql\nstrawberry server schema \n```\n![](images/微信截图_20220126162625.png)\n**访问：http://127.0.0.1:8000**\n![](images/微信截图_20220126163024.png)\n### 通过url获取接口文档\n``` shell\n# 转JSON\ngql parse http://127.0.0.1:8000 目录地址\n\n# 转GQL\ngql parse http://127.0.0.1:8000 --to gql 目录地址\n\n# 转sqlmap(-r HTTP请求信息.txt)\n# 带json\ngql parse http://127.0.0.1:8000 --headers .\\examples\\headers.json --to sqlmap .\\examples\\sqlmap（json）示例\n# 不带json\ngql parse http://127.0.0.1:8000 --to sqlmap .\\examples\\sqlmap示例\n```\n**需要Token认证**\n```json5\n// 新建headers.json 如下\n{\n\"Authorization\": \"Bearer token\"\n}\n```\n```shell\ngql parse http://127.0.0.1:8000 --headers headers.json 目录地址\n```\n![url获取示例](images/urlheaders.png)\n## 使用graphql-schema-parse\n### 安装\n```shell\npip install graphql-schema-parse\n```\n\n### 通过SDL获取接口文档\n1. 前置条件\n```shell\n# 在执行启动服务相同目录下执行, 得到SDL\nstrawberry export-schema schema > schema.graphql\n```\n![](images/sdl.png)\n2. 通过graphql文件转换成gql\n**sdl文件必须是utf-8编码，不是则自行修改**\n```shell\ngql parse examples\\schema.graphql --to gql 目录地址\n```\n![](images/togql.png)\n\n## 测试\n1. gql文件(查询-query)\n**将生成的users.gql 文件内容复制到127.0.0.1:8000当中**\n![](images/query.png)\n2. gql文件(突变-mutation)\n**将生成的addUser.gql 文件内容复制到127.0.0.1:8000当中**\n![](images/add_user.png)\n3. json文件(查询-query)\n**将生成的users.json 文件内容赋值给`data`，使用requests包发送请求，代码如下**\n```python\nfrom requests import post\n\nurl = \"http://127.0.0.1:8000/graphql\"\ndata = {\n    \"query\": \" query users {\\n        users{\\n                  id\\n                  username\\n                 }\\n             \\n        }\\n        \",\n    \"variables\": {}, \"operationName\": \"users\"}\nprint(post(url, json=data).json())\n```\n![](images/gql-restful.png)\n4. json文件(突变-mutation)\n**将生成的addUsers.json 文件内容赋值给`data`，使用requests包发送请求，代码如下**\n```python\nfrom requests import post\n\nurl = \"http://127.0.0.1:8000/graphql\"\ndata = {\n    \"query\": \" mutation addUserInput ($user: AddUserInput!){\\n        addUserInput (user: $user){\\n                  id\\n                  username\\n                 }\\n             \\n        }\\n        \",\n    \"variables\": {\"user\": {\"username\": \"\", \"password\": \"\"}}, \"operationName\": \"addUserInput\"}\nprint(post(url, json=data).json())\n\n```\n![](images/json-restful.png)\n5. txt文件(sqlmap -r httpinfo.txt， 可用于sqlmap sql注入扫描)\n**addUserInput.txt文件内容**\n```text\nPOST /graphql HTTP/1.1\nHOST: 127.0.0.1:8000\nAuthorization: Bearer token\nContent-Type: application/json\n\n{\"query\": \" mutation addUserInput ($user: AddUserInput!){\\n        addUserInput (user: $user){\\n                  id\\n                  username\\n                 }\\n             \\n        }\\n        \", \"variables\": {\"user\": {\"username\": \"*\", \"password\": \"*\"}}, \"operationName\": \"addUserInput\"}\n```\n```shell\n# 安装sqlmap\npip install sqlmap\n\n# 进行SQL注入扫描， sqlmap详细用法前往sqlmap官网学习\nsqlmap -r addUserInput.txt --level 5 --risk 3\n```\n**扫描过程中**\n![](images/sqlmap执行过程.png)\n![](images/执行时服务被不断请求.png)\n![](images/入库数据.png)\n**扫描结果（获取到了我的数据库为SQLlite）**\n![](images/注入结果.png)\n6. txt文件(sqlmap -l 可用的批量扫描文件)\n```shell\ngql  parse http://127.0.0.1:8000 --headers examples\\headers.json --to burp demo1\n```\n```shell\n# output demo1/burp.txt\n==================================================================\n\n==================================================================\nPOST /graphql HTTP/1.1\nHOST: 127.0.0.1:8000\nAuthorization: Bearer token\nContent-Type: application/json\n\n{\"query\": \" query users {\\n        users{\\n                  id\\n                  username\\n                 }\\n             \\n        }\\n        \", \"variables\": {}, \"operationName\": \"users\"}\n==================================================================\n\n==================================================================\n\n==================================================================\nPOST /graphql HTTP/1.1\nHOST: 127.0.0.1:8000\nAuthorization: Bearer token\nContent-Type: application/json\n\n{\"query\": \" mutation addUser ($username: String!, $password: String!){\\n        addUser (username: $username, password: $password){\\n                  id\\n                  username\\n                 }\\n             \\n        }\\n        \", \"variables\": {\"username\": \"*\", \"password\": \"*\"}, \"operationName\": \"addUser\"}\n==================================================================\n\n==================================================================\n\n==================================================================\nPOST /graphql HTTP/1.1\nHOST: 127.0.0.1:8000\nAuthorization: Bearer token\nContent-Type: application/json\n\n{\"query\": \" mutation addUserInput ($user: AddUserInput!){\\n        addUserInput (user: $user){\\n                  id\\n                  username\\n                 }\\n             \\n        }\\n        \", \"variables\": {\"user\": {\"username\": \"*\", \"password\": \"*\"}}, \"operationName\": \"addUserInput\"}\n==================================================================\n\n==================================================================\n\n==================================================================\nPOST /graphql HTTP/1.1\nHOST: 127.0.0.1:8000\nAuthorization: Bearer token\nContent-Type: application/json\n\n{\"query\": \" mutation delUser ($id: Int!){\\n        delUser (id: $id){\\n                  errmsg\\n                 }\\n             \\n        }\\n        \", \"variables\": {\"id\": 0}, \"operationName\": \"delUser\"}\n==================================================================\n\n```\n**扫描结果**\n```shell\n# 扫描命令\nsqlmap -l demo1\\burp.txt  \n```\n![burp](images/burp.png)\n![result](images/burpresult.png)\n![csv](images/csv.png)\n\n# 参数详情\n```shell\ngql parse --help \n```\noutput:\n```shell\nUsage: cli.py parse [OPTIONS] FROM_PATH TO_DIRECTORY\n\n  将Graphql接口文档转成gql文件/Json文件 :param from_path: 接口文档地址, 本地JSON文件地址(.json) 或者 本地\n  SDL文件(.schema ), 或者 服务器URL填入(服务器的IP:PORT) :param to: 转换之后的文件类型, 可选\n  to_json(.json) / to_gql(.gql) / to_sqlmap(.txt)/ to_burp(.txt) :param\n  headers: from_type 为url时可选项，请求头文件地址(.json) :param depth: query语句体中可用查询字段递归深度\n  :param to_directory: 转换之后文件，保存目录 :return:\n\nArguments:\n  FROM_PATH     接口文档地址, 本地JSON文件地址(.json) 或者 本地 SDL文件(.graphql ), 或者\n                服务器URL填入(服务器的IP:PORT)  [required]\n  TO_DIRECTORY  生成文件保存目录，不存在时，自动创建  [required]\n\nOptions:\n  --headers TEXT               url方式获取接口文档时，可选项传入请求头json文件地址\n  --to [json|gql|sqlmap|burp]  [default: ToType.to_json]\n  --depth INTEGER              query语句体中可用查询字段递归深度  [default: 1]\n  --help                       Show this message and exit.\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zy7y/graphql-schema-parse.git",
    "keywords": "graphql,restful,parse,gql,test,sqlmap",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "graphql-schema-parse",
    "package_url": "https://pypi.org/project/graphql-schema-parse/",
    "platform": "",
    "project_url": "https://pypi.org/project/graphql-schema-parse/",
    "project_urls": {
      "Homepage": "https://github.com/zy7y/graphql-schema-parse.git",
      "Repository": "https://github.com/zy7y/graphql-schema-parse.git"
    },
    "release_url": "https://pypi.org/project/graphql-schema-parse/0.2.2/",
    "requires_dist": [
      "graphql-core (>=3.2.0,<4.0.0)",
      "Jinja2 (>=3.0.3,<4.0.0)",
      "typer (>=0.4.0,<0.5.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Graphql文档解析工具，提供解析成前端Postman可用的query语句(.gql) / RESTFul可使用的(.json)文件能力 / sqlmap可用的(.txt)扫描文件能力",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12896697,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3ca214dfbb940c1d89a27bcfe81c4b77c1ad2fe82c19d8290ff4104e0d4cb83",
          "md5": "5230d576b17e201b98868edaf260c49e",
          "sha256": "b78fe007e574f9d256ac15d502ef51e959be899c93155069bcd5ea1fbca3a849"
        },
        "downloads": -1,
        "filename": "graphql_schema_parse-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5230d576b17e201b98868edaf260c49e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 11013,
        "upload_time": "2022-01-27T16:33:33",
        "upload_time_iso_8601": "2022-01-27T16:33:33.633618Z",
        "url": "https://files.pythonhosted.org/packages/b3/ca/214dfbb940c1d89a27bcfe81c4b77c1ad2fe82c19d8290ff4104e0d4cb83/graphql_schema_parse-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3305f26b12b528b64ffa7521cbc5dc52fde6a152f7581b010a1071812ffcbee9",
          "md5": "21e56905564f49f0e64c9fb94884ba0d",
          "sha256": "5f46b01f8b714786fa8d79366832bb4f8dc726096ae984fbcf81100dc2f5b0e4"
        },
        "downloads": -1,
        "filename": "graphql-schema-parse-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "21e56905564f49f0e64c9fb94884ba0d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 10861,
        "upload_time": "2022-01-27T16:33:31",
        "upload_time_iso_8601": "2022-01-27T16:33:31.707730Z",
        "url": "https://files.pythonhosted.org/packages/33/05/f26b12b528b64ffa7521cbc5dc52fde6a152f7581b010a1071812ffcbee9/graphql-schema-parse-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c55cd51cbb9bd28d5b0f0a0e3ad5adc88cf4e872981763d70884f0b39e42bac",
          "md5": "fd8a11108ed49802519c2bc524e098ec",
          "sha256": "390dd5935285aee3259233f913db27b354c9e8c0629e4a944d7e95e8fdff7b53"
        },
        "downloads": -1,
        "filename": "graphql_schema_parse-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd8a11108ed49802519c2bc524e098ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 11738,
        "upload_time": "2022-02-14T02:51:07",
        "upload_time_iso_8601": "2022-02-14T02:51:07.730194Z",
        "url": "https://files.pythonhosted.org/packages/4c/55/cd51cbb9bd28d5b0f0a0e3ad5adc88cf4e872981763d70884f0b39e42bac/graphql_schema_parse-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46505504dc3ebbf3c02163ae58bb79089a92d80912ab5ab2c0d8164f7f440e65",
          "md5": "231f0624505e01770c91303f868a3464",
          "sha256": "e8cb4e8f9eb24ef21a539d5e42d67133cf170d1a5ef83748570e519a9ce5d91e"
        },
        "downloads": -1,
        "filename": "graphql-schema-parse-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "231f0624505e01770c91303f868a3464",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 11986,
        "upload_time": "2022-02-14T02:51:05",
        "upload_time_iso_8601": "2022-02-14T02:51:05.647826Z",
        "url": "https://files.pythonhosted.org/packages/46/50/5504dc3ebbf3c02163ae58bb79089a92d80912ab5ab2c0d8164f7f440e65/graphql-schema-parse-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe754b27d15f2af518c64d85c4765748e7f0460336be92f58f4250dcf5ae1852",
          "md5": "23d4e83afa2c9c91e415765f627ff1fb",
          "sha256": "e99e7332c36b575e947cc62611157b48f9ab481b9f27e78fdada05490c2cd85f"
        },
        "downloads": -1,
        "filename": "graphql_schema_parse-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23d4e83afa2c9c91e415765f627ff1fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 11789,
        "upload_time": "2022-02-15T11:50:42",
        "upload_time_iso_8601": "2022-02-15T11:50:42.829833Z",
        "url": "https://files.pythonhosted.org/packages/fe/75/4b27d15f2af518c64d85c4765748e7f0460336be92f58f4250dcf5ae1852/graphql_schema_parse-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d79660e15e1e4291327431e2bac83af897f051e91d33555f00f363b65b830354",
          "md5": "365c079fbf229dd1698c6b2079a47c40",
          "sha256": "1f9902cf3dff4375078d0bf6c6e525e6bd1a7df313a8e717dfdec46a68d06420"
        },
        "downloads": -1,
        "filename": "graphql-schema-parse-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "365c079fbf229dd1698c6b2079a47c40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 12023,
        "upload_time": "2022-02-15T11:50:41",
        "upload_time_iso_8601": "2022-02-15T11:50:41.381938Z",
        "url": "https://files.pythonhosted.org/packages/d7/96/60e15e1e4291327431e2bac83af897f051e91d33555f00f363b65b830354/graphql-schema-parse-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe754b27d15f2af518c64d85c4765748e7f0460336be92f58f4250dcf5ae1852",
        "md5": "23d4e83afa2c9c91e415765f627ff1fb",
        "sha256": "e99e7332c36b575e947cc62611157b48f9ab481b9f27e78fdada05490c2cd85f"
      },
      "downloads": -1,
      "filename": "graphql_schema_parse-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "23d4e83afa2c9c91e415765f627ff1fb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 11789,
      "upload_time": "2022-02-15T11:50:42",
      "upload_time_iso_8601": "2022-02-15T11:50:42.829833Z",
      "url": "https://files.pythonhosted.org/packages/fe/75/4b27d15f2af518c64d85c4765748e7f0460336be92f58f4250dcf5ae1852/graphql_schema_parse-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d79660e15e1e4291327431e2bac83af897f051e91d33555f00f363b65b830354",
        "md5": "365c079fbf229dd1698c6b2079a47c40",
        "sha256": "1f9902cf3dff4375078d0bf6c6e525e6bd1a7df313a8e717dfdec46a68d06420"
      },
      "downloads": -1,
      "filename": "graphql-schema-parse-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "365c079fbf229dd1698c6b2079a47c40",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 12023,
      "upload_time": "2022-02-15T11:50:41",
      "upload_time_iso_8601": "2022-02-15T11:50:41.381938Z",
      "url": "https://files.pythonhosted.org/packages/d7/96/60e15e1e4291327431e2bac83af897f051e91d33555f00f363b65b830354/graphql-schema-parse-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}