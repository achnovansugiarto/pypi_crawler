{
  "info": {
    "author": "aachn3",
    "author_email": "n45t31@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# STATEFUL\n\n## Maintainer: aachn3 <n45t31@protonmail.com>\n## Site: <https://gitlab.com/pyutil/stateful>\n## Version: 3.0.1\n\n### About\n\nThis package provides a property-like class exposing two additional methods:\n**refresh** and **commit**. Both are hooked into the GET/SET descriptors to constantly\nmonitor for changes made on object fields and either persist or reload the values\nmanually or on a per-call basis.\n\n### Table of Contents\n\n- [structure](#project-structure)\n- [usage](#usage)\n  - [examples](#code-samples)\n- [tests](#testing-library-functionality)\n  - [unit](#unit-tests)\n  - [integration](#integration-tests)\n  \n\n### Project Structure\n\n```\n+core\n  +state\n    -PropertyState\n      *expired(property): bool\n      *changed(property): bool\n      *lock(property): threading.RLock\n    -ObjectState\n      *auto_commit: bool\n      *atomic(property): bool\n      *invalidate < - > -\n      *register < obj_property: property, aliases: list<str> > -\n      *unregister < obj_property: property > -\n      *operator[] < key: [str, property] > .PropertyState\n      *get < key: [str, property] > [.PropertyState, null]\n      *keys < - > list<property>\n      *values < - > list<.PropertyState>\n      *items < - > list<property, .PropertyState>\n      *aliases < - > list<str, .PropertyState>\n  +property\n    *FALLBACK_METHOD: object\n    -stateful_property\n      *state_class: class<.state.PropertyState>\n      *fget < owner: * > *\n      *fset < owner: *, value: * > -\n      *fdel < owner: * > -\n      *frefresh < owner: * > -\n      *fcommit < owner: * > -\n      *auto_commit: bool\n      *raw: bool\n      *getter < fget ... > -\n      *setter < fset ... > -\n      *deleter < fdel ... > -\n      *refresher < frefresh ... > -\n      *committer < fcommit ... > -\n      *GET descriptor < owner: *, cls: * > *\n      *SET descriptor < owner: *, value: * > -\n      *DEL descriptor < owner: * > -\n      *NAME descriptor < owner: * > -\n      *touch < owner: * > -\n      *refresh < owner: * > -\n      *commit < owner: * > -\n      *fallback_refresher < owner: * > -\n      *fallback_committer < owner: * > -\n    -StatefulPropertyWrapper\n      *expired: bool\n      *changed: bool\n      *value: *\n  +object\n    -StatefulObject\n      *state(property): .state.ObjectState\n      *expired(property): list<str>\n      *get_properties < property_spec: [str, list<str>, null] > list<.property.stateful_property>\n      *refresh < property_spec: [str, list<str>, null], force: bool > -\n      *commit < property_spec: [str, list<str>, null], force: bool > -\n+util\n  +environ\n    -EnvironmentVariableState(..core.state.PropertyState)\n    -environment_variable(..core.property.stateful_property)\n      *varname: str\n      *decoder < env_var: str > value: *\n      *encoder < value: * > env_var: str\n      *value(property): *\n      *fallback_getter < owner: * > *\n      *fallback_setter < owner: * > -\n      *fallback_deleter < owner: * > -\n      *fallback_refresher < owner: * > -\n      *fallback_committer < owner: * > -\n  +timer\n    -Timer\n      *period: datetime.timedelta\n      *iterator < - > list<datetime.datetime>\n    -TimedPropertyState(..core.state.PropertyState)\n      *timer(property): .Timer\n      *expired(property): bool\n    -timed_property(..core.property.stateful_property)\n      *timespec(property): dict<str, [int, float]>\n    -TimedStatefulObject(..core.object.StatefulObject)\n      *timespec(property): dict<str, [int, float]>\n```\n\n### Usage\n\n#### Code samples\n\nManually load REST API data, change data subset and re-send to API\n\n```python3\nimport json\n\nfrom stateful import StatefulObject, stateful_property\nfrom requests import request\n\nfrom .config import URI, auth\n\nclass ApiConnector(StatefulObject): \n    @stateful_property\n    def data(self)->dict:\n        return self._json\n\n    @data.refresh\n    def data(self):\n        self._json = request(\"get\", URI, auth=auth).json()\n\n    @data.commit\n    def data(self):\n        request(\"put\", URI, auth=auth, body_data=json.dumps(self._json))\n\napi = ApiConnector()\napi.invalidate()\n\ndel response.data[\"_auth\"]        \nfor entry in response.data[\"form\"]:\n    del entry[\"_auth\"]\n\napi.commit()\n```\n\nContinuously fetch current system workload with polling time set to 30s. \n\n```python3\nfrom stateful import TimedStatefulObject, timed_property\nimport psutil\n\nclass Workload(TimedStatefulObject):\n    def __init__(self):\n        super().__init__(timespec={\"seconds\": 30})\n\n    @timed_property\n    def _data(self):\n        return self._payload\n\n    @_data.refresh\n    def _data(self):\n        self._payload = {\n            \"mem\": psutil.virtual_memory(),\n            \"cpu\": psutil.cpu_percent(5),\n        }\n\n    @property\n    def memory(self):\n        return self._data[\"mem\"]\n\n    @property\n    def cpu(self):\n        return self._data[\"cpu\"]\n``` \n\n#### Testing library functionality\n\n##### Unit tests\n\nFormat: None\n\n##### Integration tests\n\nFormat: None\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stat3ful",
    "package_url": "https://pypi.org/project/stat3ful/",
    "platform": null,
    "project_url": "https://pypi.org/project/stat3ful/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/stat3ful/3.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6.5",
    "summary": "Property-like classes with expiration/change monitoring",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16699086,
  "releases": {
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b579fdba0f1c0cc798fedf90264ae5c98e280a2a58d09c37a4e62ad837c3200c",
          "md5": "44b8f06a93f7f74742fd6cae08c2e59f",
          "sha256": "b9bd03e0baf4169a6478b0c55b118ac33e7cef4c038510c6c2aab81169ee300d"
        },
        "downloads": -1,
        "filename": "stat3ful-3.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "44b8f06a93f7f74742fd6cae08c2e59f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.5",
        "size": 15604,
        "upload_time": "2023-02-05T08:25:40",
        "upload_time_iso_8601": "2023-02-05T08:25:40.064168Z",
        "url": "https://files.pythonhosted.org/packages/b5/79/fdba0f1c0cc798fedf90264ae5c98e280a2a58d09c37a4e62ad837c3200c/stat3ful-3.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "421ec24faedc2de57eebb1f0df4941b9e6f42988e3e914e8b9e3735e5bdc91f1",
          "md5": "67674c65d055ad0ac083d02d6bea2ef0",
          "sha256": "9c9cbdacb5cd1f163982dae4036829374e859c709404d3876710d1b7b2ba5328"
        },
        "downloads": -1,
        "filename": "stat3ful-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "67674c65d055ad0ac083d02d6bea2ef0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.5",
        "size": 10887,
        "upload_time": "2023-02-05T08:25:42",
        "upload_time_iso_8601": "2023-02-05T08:25:42.620395Z",
        "url": "https://files.pythonhosted.org/packages/42/1e/c24faedc2de57eebb1f0df4941b9e6f42988e3e914e8b9e3735e5bdc91f1/stat3ful-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b579fdba0f1c0cc798fedf90264ae5c98e280a2a58d09c37a4e62ad837c3200c",
        "md5": "44b8f06a93f7f74742fd6cae08c2e59f",
        "sha256": "b9bd03e0baf4169a6478b0c55b118ac33e7cef4c038510c6c2aab81169ee300d"
      },
      "downloads": -1,
      "filename": "stat3ful-3.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "44b8f06a93f7f74742fd6cae08c2e59f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.5",
      "size": 15604,
      "upload_time": "2023-02-05T08:25:40",
      "upload_time_iso_8601": "2023-02-05T08:25:40.064168Z",
      "url": "https://files.pythonhosted.org/packages/b5/79/fdba0f1c0cc798fedf90264ae5c98e280a2a58d09c37a4e62ad837c3200c/stat3ful-3.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "421ec24faedc2de57eebb1f0df4941b9e6f42988e3e914e8b9e3735e5bdc91f1",
        "md5": "67674c65d055ad0ac083d02d6bea2ef0",
        "sha256": "9c9cbdacb5cd1f163982dae4036829374e859c709404d3876710d1b7b2ba5328"
      },
      "downloads": -1,
      "filename": "stat3ful-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "67674c65d055ad0ac083d02d6bea2ef0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.5",
      "size": 10887,
      "upload_time": "2023-02-05T08:25:42",
      "upload_time_iso_8601": "2023-02-05T08:25:42.620395Z",
      "url": "https://files.pythonhosted.org/packages/42/1e/c24faedc2de57eebb1f0df4941b9e6f42988e3e914e8b9e3735e5bdc91f1/stat3ful-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}