{
  "info": {
    "author": "Deci AI",
    "author_email": "rnd@deci.ai",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<div align=\"center\">\n  <img src=\"docs/assets/SG_img/SG - Horizontal Glow 2.png\" width=\"600\"/>\n <br/><br/>\n\n**Build, train, and fine-tune production-ready deep learning  SOTA vision models**\n[![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Easily%20train%20or%20fine-tune%20SOTA%20computer%20vision%20models%20from%20one%20training%20repository&url=https://github.com/Deci-AI/super-gradients&via=deci_ai&hashtags=AI,deeplearning,computervision,training,opensource)\n\n#### Version 3 is out! Notebooks have been updated!\n______________________________________________________________________\n\n  <p align=\"center\">\n  <a href=\"https://www.supergradients.com/\">Website</a> ‚Ä¢\n  <a href=\"https://deci-ai.github.io/super-gradients/welcome.html\">Docs</a> ‚Ä¢\n  <a href=\"#getting-started\">Getting Started</a> ‚Ä¢\n  <a href=\"#implemented-model-architectures\">Pretrained Models</a> ‚Ä¢\n  <a href=\"#community\">Community</a> ‚Ä¢\n  <a href=\"#license\">License</a> ‚Ä¢\n  <a href=\"#deci-platform\">Deci Platform</a>\n</p>\n<p align=\"center\">\n  <a href=\"https://github.com/Deci-AI/super-gradients#prerequisites\"><img src=\"https://img.shields.io/badge/python-3.7%20%7C%203.8%20%7C%203.9-blue\" />\n  <a href=\"https://github.com/Deci-AI/super-gradients#prerequisites\"><img src=\"https://img.shields.io/badge/pytorch-1.9%20%7C%201.10-blue\" />\n  <a href=\"https://pypi.org/project/super-gradients/\"><img src=\"https://img.shields.io/pypi/v/super-gradients\" />\n  <a href=\"https://github.com/Deci-AI/super-gradients#computer-vision-models-pretrained-checkpoints\" ><img src=\"https://img.shields.io/badge/pre--trained%20models-34-brightgreen\" />\n  <a href=\"https://github.com/Deci-AI/super-gradients/releases\"><img src=\"https://img.shields.io/github/v/release/Deci-AI/super-gradients\" />\n  <a href=\"https://join.slack.com/t/supergradients-comm52/shared_invite/zt-10vz6o1ia-b_0W5jEPEnuHXm087K~t8Q\"><img src=\"https://img.shields.io/badge/slack-community-blueviolet\" />\n  <a href=\"https://github.com/Deci-AI/super-gradients/blob/master/LICENSE.md\"><img src=\"https://img.shields.io/badge/license-Apache%202.0-blue\" />\n  <a href=\"https://deci-ai.github.io/super-gradients/welcome.html\"><img src=\"https://img.shields.io/badge/docs-sphinx-brightgreen\" />\n</p>    \n</div>\n\n## Build with SuperGradients\n__________________________________________________________________________________________________________\n\n### Support various computer vision tasks\n<div align=\"center\">\n<img src=\"https://github.com/Deci-AI/super-gradients/raw/master/docs/assets/SG_img/Segmentation 1500x900 .png\" width=\"250px\">\n<img src=\"https://github.com/Deci-AI/super-gradients/raw/master/docs/assets/SG_img/Object detection 1500X900.png\" width=\"250px\">\n<img src=\"https://github.com/Deci-AI/super-gradients/raw/master/docs/assets/SG_img/Classification 1500x900.png\" width=\"250px\">\n</div>\n\n\n### Ready to deploy pre-trained SOTA models\n```python\n# Load model with pretrained weights\nfrom super_gradients.training import models\nfrom super_gradients.common.object_names import Models\n\nmodel = models.get(Models.YOLOX_S, pretrained_weights=\"coco\")\n```\n#### All Computer Vision Models - Pretrained Checkpoints can be found in the [Model Zoo](http://bit.ly/3EGfKD4)\n\n#### Classification\n<div align=\"center\">\n<img src=\"./docs/assets/SG_img/Classification@2xDark.png\" width=\"800px\">\n</div>\n\n#### Semantic Segmentation\n<div align=\"center\">\n<img src=\"./docs/assets/SG_img/Semantic Segmentation@2xDark.png\" width=\"800px\">\n</div>\n\n#### Object Detection \n<div align=\"center\">\n<img src=\"./docs/assets/SG_img/Object Detection@2xDark.png\" width=\"800px\">\n</div>\n\n\n### Easy to train SOTA Models\n\nEasily load and fine-tune production-ready, pre-trained SOTA models that incorporate best practices and validated hyper-parameters for achieving best-in-class accuracy. \nFor more information on how to do it go to [Getting Started](#getting-started)\n\n\n#### Plug and play recipes\n```python\npython -m super_gradients.examples.train_from_recipe_example.train_from_recipe architecture=regnetY800 dataset_interface.data_dir=<YOUR_Imagenet_LOCAL_PATH> ckpt_root_dir=<CHEKPOINT_DIRECTORY>\n```\nMore example on how and why to use recipes can be found in [Recipes](#recipes)\n\n\n### Production readiness\nAll SuperGradients models‚Äô are production ready in the sense that they are compatible with deployment tools such as TensorRT (Nvidia) and OpenVINO (Intel) and can be easily taken into production. With a few lines of code you can easily integrate the models into your codebase.\n```python\n# Load model with pretrained weights\nfrom super_gradients.training import models\nfrom super_gradients.common.object_names import Models\n\nmodel = models.get(Models.YOLOX_S, pretrained_weights=\"coco\")\n\n# Prepare model for conversion\n# Input size is in format of [Batch x Channels x Width x Height] where 640 is the standart COCO dataset dimensions\nmodel.eval()\nmodel.prep_model_for_conversion(input_size=[1, 3, 640, 640])\n\n# Create dummy_input\n\n# Convert model to onnx\ntorch.onnx.export(model, dummy_input,  \"yolox_s.onnx\")\n```\nMore information on how to take your model to production can be found in [Getting Started](#getting-started) notebooks\n\n## Quick Installation\n\n__________________________________________________________________________________________________________\n\n\n```bash\npip install super-gradients\n```\n\n## What's New\n__________________________________________________________________________________________________________\n* „Äê17/11/2022„Äë Integration with ClearML\n* „Äê06/9/2022„Äë PP-LiteSeg - new pre-trained [checkpoints](http://bit.ly/3EGfKD4) and [recipes](http://bit.ly/3gfLw07) for Cityscapes with SOTA mIoU scores (~1.5% above paper)üéØ\n* „Äê07/08/2022„ÄëDDRNet23 -  new pre-trained [checkpoints](http://bit.ly/3EGfKD4) and [recipes](http://bit.ly/3gfLw07) for Cityscapes with SOTA mIoU scores (~1% above paper)üéØ\n* „Äê27/07/2022„ÄëYOLOX models (object detection) - recipes and pre-trained checkpoints.\n* „Äê07/07/2022„ÄëSSD Lite MobileNet V2,V1 - Training [recipes](http://bit.ly/3gfLw07) and pre-trained [checkpoints](http://bit.ly/3EGfKD4) on COCO - Tailored for edge devices! üì±\n* „Äê07/07/2022„Äë STDC  - new pre-trained [checkpoints](http://bit.ly/3EGfKD4) and [recipes](http://bit.ly/3gfLw07) for Cityscapes with super SOTA mIoU scores (~2.5% above paper)üéØ\n\nCheck out SG full [release notes](https://github.com/Deci-AI/super-gradients/releases).\n\n## Coming soon\n__________________________________________________________________________________________________________\n- [ ] PP-Yolo-E implementation\n- [ ] Quantization aware training (QAT)\n- [ ] Tools for faster training \n- [ ] Integration with more professional tools.\n\n\n## Table of Content\n__________________________________________________________________________________________________________\n<!-- toc -->\n\n- [Getting Started](#getting-started)\n- [Advanced Features](#advanced-features)\n- [Installation Methods](#installation-methods)\n    - [Prerequisites](#prerequisites)\n    - [Quick Installation](#quick-installation)\n- [Implemented Model Architectures](#implemented-model-architectures)\n- [Contributing](#contributing)\n- [Citation](#citation)\n- [Community](#community)\n- [License](#license)\n- [Deci Platform](#deci-platform)\n\n<!-- tocstop -->\n\n## Getting Started\n__________________________________________________________________________________________________________\n\n### Start Training with Just 1 Command Line\nThe most simple and straightforward way to start training SOTA performance models with SuperGradients reproducible recipes. Just define your dataset path and where you want your checkpoints to be saved and you are good to go from your terminal!\n\nJust make sure that you [setup your dataset](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/datasets/Dataset_Setup_Instructions.md) according to the data dir specified in the recipe.\n\n```bash\npython -m super_gradients.examples.train_from_recipe_example.train_from_recipe --config-name=imagenet_regnetY architecture=regnetY800 dataset_interface.data_dir=<YOUR_Imagenet_LOCAL_PATH> ckpt_root_dir=<CHEKPOINT_DIRECTORY>\n```\n### Quickly Load Pre-Trained Weights for Your Desired Model with SOTA Performance\nWant to try our pre-trained models on your machine? Import SuperGradients, initialize your Trainer, and load your desired architecture and pre-trained weights from our [SOTA model zoo](http://bit.ly/3EGfKD4)\n\n```python\n# The pretrained_weights argument will load a pre-trained architecture on the provided dataset\n\nimport super_gradients\n\nmodel = models.get(\"model-name\", pretrained_weights=\"pretrained-model-name\")\n\n```   \n###  Classification\n\n#### Transfer Learning \n  <table class=\"tfo-notebook-buttons\" align=\"left\">\n <td width=\"500\">  \n  <a target=\"_blank\" href=\"https://bit.ly/3xzIutb\"><img src=\"./docs/assets/SG_img/colab_logo.png\" /> Classification Transfer Learning</a>\n  </td>\n <td width=\"200\">    \n <a target=\"_blank\" href=\"https://bit.ly/3xwYEn1\"><img src=\"./docs/assets/SG_img/GitHub_logo.png\" /> GitHub source</a>\n </td>\n</table>\n </br></br>\n\n\n###  Semantic Segmentation\n\n####  Quick Start \n<table class=\"tfo-notebook-buttons\" align=\"left\">\n <td width=\"500\">\n<a target=\"_blank\" href=\"https://bit.ly/3qKx9m8\"><img src=\"./docs/assets/SG_img/colab_logo.png\" /> Segmentation Quick Start</a>\n </td>\n <td width=\"200\">\n<a target=\"_blank\" href=\"https://bit.ly/3qJjxYq\"><img src=\"./docs/assets/SG_img/GitHub_logo.png\" /> GitHub source </a>\n </td>\n</table>\n </br></br>\n\n\n\n ####  Transfer Learning \n<table class=\"tfo-notebook-buttons\" align=\"left\">\n <td width=\"500\">\n<a target=\"_blank\" href=\"https://bit.ly/3qKwMbe\"><img src=\"./docs/assets/SG_img/colab_logo.png\" /> Segmentation Transfer Learning</a>\n </td>\n <td width=\"200\">\n<a target=\"_blank\" href=\"https://bit.ly/3ShJlXn\"><img src=\"./docs/assets/SG_img/GitHub_logo.png\" /> GitHub source</a>\n </td>\n</table>\n </br></br>\n\n\n\n####  How to Connect Custom Dataset \n  <table class=\"tfo-notebook-buttons\" align=\"left\">\n <td width=\"500\"> \n<a target=\"_blank\" href=\"https://bit.ly/3QQBVJp\"><img src=\"./docs/assets/SG_img/colab_logo.png\" /> Segmentation How to Connect Custom Dataset</a>\n   </td>\n <td width=\"200\">\n <a target=\"_blank\" href=\"https://bit.ly/3Us2WGi\"><img src=\"./docs/assets/SG_img/GitHub_logo.png\" /> GitHub source</a>\n </td>\n</table>\n </br></br>\n\n\n\n###  Object Detection\n\n\n#### Transfer Learning\n  <table class=\"tfo-notebook-buttons\" align=\"left\">\n <td width=\"500\">   \n<a target=\"_blank\" href=\"https://bit.ly/3SkMohx\"><img src=\"./docs/assets/SG_img/colab_logo.png\" /> Detection Transfer Learning</a>\n   </td>\n <td width=\"200\">   \n<a target=\"_blank\" href=\"https://bit.ly/3DF8siG\"><img src=\"./docs/assets/SG_img/GitHub_logo.png\" /> GitHub source</a>\n </td>\n</table>\n </br></br>\n\n#### How to Connect Custom Dataset \n  <table class=\"tfo-notebook-buttons\" align=\"left\">\n <td width=\"500\">  \n  <a target=\"_blank\" href=\"https://bit.ly/3dqDlg3\"><img src=\"./docs/assets/SG_img/colab_logo.png\" /> Detection How to Connect Custom Dataset</a>\n  </td>\n <td width=\"200\">      \n<a target=\"_blank\" href=\"https://bit.ly/3xBlcmq\"><img src=\"./docs/assets/SG_img/GitHub_logo.png\" /> GitHub source</a>\n </td>\n</table>\n </br></br>\n\n\n\n### How to Predict Using Pre-trained Model\n\n#### Segmentation, Detection and Classification Prediction \n  <table class=\"tfo-notebook-buttons\" align=\"left\">\n <td width=\"500\">    \n<a target=\"_blank\" href=\"https://bit.ly/3f4mssd\"><img src=\"./docs/assets/SG_img/colab_logo.png\" /> How to Predict Using Pre-trained Model</a>\n  </td>\n <td width=\"200\">   \n<a target=\"_blank\" href=\"https://bit.ly/3Sf59Tr\"><img src=\"./docs/assets/SG_img/GitHub_logo.png\" /> GitHub source</a>\n </td>\n</table>\n </br></br>\n\n\n## Advanced Features\n__________________________________________________________________________________________________________\n### Knowledge Distillation Training\nKnowledge Distillation is a training technique that uses a large model, teacher model, to improve the performance of a smaller model, the student model.\nLearn more about SuperGradients knowledge distillation training with our pre-trained BEiT base teacher model and Resnet18 student model on CIFAR10 example notebook on Google Colab for an easy to use tutorial using free GPU hardware\n  <table class=\"tfo-notebook-buttons\" align=\"left\">\n <td width=\"500\">   \n   <a target=\"_blank\" href=\"https://bit.ly/3BLA5oR\"><img src=\"./docs/assets/SG_img/colab_logo.png\" /> Knowledge Distillation Training</a>\n  </td>\n <td width=\"200\">   \n<a target=\"_blank\" href=\"https://bit.ly/3S9UlG4\"><img src=\"./docs/assets/SG_img/GitHub_logo.png\" /> GitHub source</a>\n </td>\n</table>\n </br></br>\n\n### Recipes\nTo train a model, it is necessary to configure 4 main components. These components are aggregated into a single \"main\" recipe `.yaml` file that inherits the aforementioned dataset, architecture, raining and checkpoint params. It is also possible (and recomended for flexibility) to override default settings with custom ones.\nAll recipes can be found [here](http://bit.ly/3gfLw07)\n</br>\nRecipes support out of the box every model, metric or loss that is implemented in SuperGradients, but you can easily extend this to any custom object that you need by \"registering it\". Check out [this](http://bit.ly/3TQ4iZB) tutorial for more information.\n\n  <table class=\"tfo-notebook-buttons\" align=\"left\">\n <td width=\"500\">   \n   <a target=\"_blank\" href=\"https://bit.ly/3UiY5ab\"><img src=\"./docs/assets/SG_img/colab_logo.png\" /> How to Use Recipes</a>\n  </td>\n <td width=\"200\">  \n<a target=\"_blank\" href=\"https://bit.ly/3QSrHbm\"><img src=\"./docs/assets/SG_img/GitHub_logo.png\" /> GitHub source</a>\n </td>\n</table>\n </br></br>\n\n </br>\n<details>\n  <summary><h3>Using Distributed Data Parallel (DDP) </h3></summary>\n\n#### Why use DDP ?\n\nRecent Deep Learning models are growing larger and larger to an extent that training on a single GPU can take weeks.\nIn order to train models in a timely fashion, it is necessary to train them with multiple GPUs.\nUsing 100s GPUs can reduce training time of a model from a week to less than an hour.\n\n#### How does it work ?\nEach GPU has its own process, which controls a copy of the model and which loads its own mini-batch from disk and sends\nit to its GPU during training. After the forward pass is completed on every GPU, the gradient is reduced across all\nGPUs, yielding to all the GPUs having the same gradient locally. This leads to the model weights to stay synchronized\nacross all GPUs after the backward pass.\n\n#### How to use it ?\nYou can use SuperGradients to train your model with DDP in just a few lines.\n\n\n*main.py*\n```python\nfrom super_gradients import init_trainer, Trainer\nfrom super_gradients.common import MultiGPUMode\nfrom super_gradients.training.utils.distributed_training_utils import setup_device\n\n# Initialize the environment\ninit_trainer()\n\n# Launch DDP on 4 GPUs'\nsetup_device(multi_gpu=MultiGPUMode.DISTRIBUTED_DATA_PARALLEL, num_gpus=4)\n\n# Call the trainer\nTrainer(expriment_name=...)\n\n# Everything you do below will run on 4 gpus\n\n...\n\nTrainer.train(...)\n\n```\n\nFinally, you can launch your distributed training with a simple python call.\n```bash\npython main.py\n```\n\n\nPlease note that if you work with `torch<1.9.0` (deprecated), you will have to launch your training with either \n`torch.distributed.launch` or `torchrun`, in which case `nproc_per_node` will overwrite the value  set with `gpu_mode`:\n```bash\npython -m torch.distributed.launch --nproc_per_node=4 main.py\n```\n```bash\ntorchrun --nproc_per_node=4 main.py\n```\n\n#### Calling functions on a single node\n\nIt is often in DDP training that we want to execute code on the master rank (i.e rank 0).\nIn SG, users usually execute their own code by triggering \"Phase Callbacks\" (see \"Using phase callbacks\" section below).\nOne can make sure the desired code will only be ran on rank 0, using ddp_silent_mode or the multi_process_safe decorator.\nFor example, consider the simple phase callback below, that uploads the first 3 images of every batch during training to\nthe Tensorboard:\n\n```python\nfrom super_gradients.training.utils.callbacks import PhaseCallback, PhaseContext, Phase\nfrom super_gradients.common.environment.env_helpers import multi_process_safe\n\nclass Upload3TrainImagesCalbback(PhaseCallback):\n    def __init__(\n        self,\n    ):\n        super().__init__(phase=Phase.TRAIN_BATCH_END)\n\n    @multi_process_safe\n    def __call__(self, context: PhaseContext):\n        batch_imgs = context.inputs.cpu().detach().numpy()\n        tag = \"batch_\" + str(context.batch_idx) + \"_images\"\n        context.sg_logger.add_images(tag=tag, images=batch_imgs[: 3], global_step=context.epoch)\n\n```\nThe @multi_process_safe decorator ensures that the callback will only be triggered by rank 0. Alternatively, this can also\nbe done by the SG trainer boolean attribute (which the phase context has access to), ddp_silent_mode, which is set to False\niff the current process rank is zero (even after the process group has been killed):\n```python\nfrom super_gradients.training.utils.callbacks import PhaseCallback, PhaseContext, Phase\n\nclass Upload3TrainImagesCalbback(PhaseCallback):\n    def __init__(\n        self,\n    ):\n        super().__init__(phase=Phase.TRAIN_BATCH_END)\n\n    def __call__(self, context: PhaseContext):\n        if not context.ddp_silent_mode:\n            batch_imgs = context.inputs.cpu().detach().numpy()\n            tag = \"batch_\" + str(context.batch_idx) + \"_images\"\n            context.sg_logger.add_images(tag=tag, images=batch_imgs[: 3], global_step=context.epoch)\n\n```\n\nNote that ddp_silent_mode can be accessed through SgTrainer.ddp_silent_mode. Hence, it can be used in scripts after calling\nSgTrainer.train() when some part of it should be ran on rank 0 only.\n\n#### Good to know\nYour total batch size will be (number of gpus x batch size), so you might want to increase your learning rate.\nThere is no clear rule, but a rule of thumb seems to be to [linearly increase the learning rate with the number of gpus](https://arxiv.org/pdf/1706.02677.pdf) \n\n</details>\n\n<details>\n<summary><h3> Easily change architectures parameters </h3></summary>\n\n```python\nfrom super_gradients.training import models\n\n# instantiate default pretrained resnet18\ndefault_resnet18 = models.get(model_name=\"resnet18\", num_classes=100, pretrained_weights=\"imagenet\")\n\n# instantiate pretrained resnet18, turning DropPath on with probability 0.5\ndroppath_resnet18 = models.get(model_name=\"resnet18\", arch_params={\"droppath_prob\": 0.5}, num_classes=100, pretrained_weights=\"imagenet\")\n\n# instantiate pretrained resnet18, without classifier head. Output will be from the last stage before global pooling\nbackbone_resnet18 = models.get(model_name=\"resnet18\", arch_params={\"backbone_mode\": True}, pretrained_weights=\"imagenet\")\n```\n\n</details>\n\n<details>\n\n<summary><h3> Using phase callbacks </h3></summary>  \n\n```python\nfrom super_gradients import Trainer\nfrom torch.optim.lr_scheduler import ReduceLROnPlateau\nfrom super_gradients.training.utils.callbacks import Phase, LRSchedulerCallback\nfrom super_gradients.training.metrics.classification_metrics import Accuracy\n\n# define PyTorch train and validation loaders and optimizer\n\n# define what to be called in the callback\nrop_lr_scheduler = ReduceLROnPlateau(optimizer, mode=\"max\", patience=10, verbose=True)\n\n# define phase callbacks, they will fire as defined in Phase\nphase_callbacks = [LRSchedulerCallback(scheduler=rop_lr_scheduler,\n                                       phase=Phase.VALIDATION_EPOCH_END,\n                                       metric_name=\"Accuracy\")]\n\n# create a trainer object, look the declaration for more parameters\ntrainer = Trainer(\"experiment_name\")\n\n# define phase_callbacks as part of the training parameters\ntrain_params = {\"phase_callbacks\": phase_callbacks}\n```\n\n</details>\n\n<details>\n\n<summary><h3> Integration to Weights and Biases </h3></summary>    \n\n\n```python\nfrom super_gradients import Trainer\n\n# create a trainer object, look the declaration for more parameters\ntrainer = Trainer(\"experiment_name\")\n\ntrain_params = { ... # training parameters\n                \"sg_logger\": \"wandb_sg_logger\", # Weights&Biases Logger, see class WandBSGLogger for details\n                \"sg_logger_params\": # paramenters that will be passes to __init__ of the logger \n                  {\n                    \"project_name\": \"project_name\", # W&B project name\n                    \"save_checkpoints_remote\": True\n                    \"save_tensorboard_remote\": True\n                    \"save_logs_remote\": True\n                  } \n               }\n```\n\n</details>\n\n<details>\n\n<summary><h3> Integration to ClearML </h3></summary>    \n\n```python\nfrom super_gradients import Trainer\n\n# create a trainer object, look the declaration for more parameters\ntrainer = Trainer(\"experiment_name\")\n\ntrain_params = { ... # training parameters\n                \"sg_logger\": \"clearml_sg_logger\", # ClearML Logger, see class ClearMLSGLogger for details\n                \"sg_logger_params\": # paramenters that will be passes to __init__ of the logger \n                  {\n                    \"project_name\": \"project_name\", # ClearML project name\n                    \"save_checkpoints_remote\": True,\n                    \"save_tensorboard_remote\": True,\n                    \"save_logs_remote\": True,\n                  } \n               }\n```\n\n  </details>\n\n\n## Installation Methods\n__________________________________________________________________________________________________________\n### Prerequisites\n<details>\n\n<summary>General requirements</summary>\n\n- Python 3.7, 3.8 or 3.9 installed.\n- 1.9.0 <= torch < 1.14 \n  - https://pytorch.org/get-started/locally/\n- The python packages that are specified in requirements.txt;\n\n</details>\n\n<details>\n\n<summary>To train on nvidia GPUs</summary>\n\n- [Nvidia CUDA Toolkit >= 11.2](https://developer.nvidia.com/cuda-11.2.0-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu)\n- CuDNN >= 8.1.x\n- Nvidia Driver with CUDA >= 11.2 support (‚â•460.x)\n\n</details>\n\n### Quick Installation\n\n<details>\n\n<summary>Install stable version using PyPi</summary>\n\nSee in [PyPi](https://pypi.org/project/super-gradients/)\n```bash\npip install super-gradients\n```\n\nThat's it !\n\n</details>\n\n<details>\n\n<summary>Install using GitHub</summary>\n\n\n```bash\npip install git+https://github.com/Deci-AI/super-gradients.git@stable\n```\n\n</details> \n\n\n## Implemented Model Architectures \n__________________________________________________________________________________________________________\n\nAll Computer Vision Models - Pretrained Checkpoints can be found in the [Model Zoo](http://bit.ly/3EGfKD4)\n\nDetailed list can be found [here](http://bit.ly/3GnJwgZ) \n\n### Image Classification\n\n- [DensNet (Densely Connected Convolutional Networks)](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/densenet.py) \n- [DPN](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/dpn.py) \n- [EfficientNet](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/efficientnet.py)\n- [LeNet](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/lenet.py) \n- [MobileNet](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/mobilenet.py)\n- [MobileNet v2](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/mobilenetv2.py)  \n- [MobileNet v3](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/mobilenetv3.py) \n- [PNASNet](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/pnasnet.py) \n- [Pre-activation ResNet](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/preact_resnet.py)  \n- [RegNet](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/regnet.py)\n- [RepVGG](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/repvgg.py)  \n- [ResNet](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/resnet.py)\n- [ResNeXt](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/resnext.py) \n- [SENet ](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/senet.py)\n- [ShuffleNet](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/shufflenet.py)\n- [ShuffleNet v2](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/shufflenetv2.py)\n- [VGG](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/classification_models/vgg.py)\n\n### Semantic Segmentation \n\n- [PP-LiteSeg](https://bit.ly/3RrtMMO)\n- [DDRNet (Deep Dual-resolution Networks)](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/segmentation_models/ddrnet.py) \n- [LadderNet](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/segmentation_models/laddernet.py)\n- [RegSeg](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/segmentation_models/regseg.py)\n- [ShelfNet](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/segmentation_models/shelfnet.py) \n- [STDC](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/segmentation_models/stdc.py)\n\n\n### Object Detection\n\n- [CSP DarkNet](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/detection_models/csp_darknet53.py)\n- [DarkNet-53](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/detection_models/darknet53.py)\n- [SSD (Single Shot Detector)](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/detection_models/ssd.py) \n- [YOLOX](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/models/detection_models/yolox.py)\n\n\n\n__________________________________________________________________________________________________________\n\n## Implemented Datasets \n__________________________________________________________________________________________________________\n\nDeci provides implementation for various datasets. If you need to download any of the dataset, you can \n[find instructions](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/datasets/Dataset_Setup_Instructions.md). \n\n### Image Classification\n\n- [Cifar10](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/datasets/classification_datasets/cifar.py) \n- [ImageNet](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/datasets/classification_datasets/imagenet_dataset.py) \n\n### Semantic Segmentation \n\n- [Cityscapes](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/datasets/segmentation_datasets/cityscape_segmentation.py)\n- [Coco](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/datasets/segmentation_datasets/coco_segmentation.py) \n- [PascalVOC 2012 / PascalAUG 2012](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/datasets/segmentation_datasets/pascal_voc_segmentation.py)\n- [SuperviselyPersons](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/datasets/segmentation_datasets/supervisely_persons_segmentation.py)\n\n\n### Object Detection\n\n- [Coco](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/datasets/detection_datasets/coco_detection.py)\n- [PascalVOC 2007 & 2012](https://github.com/Deci-AI/super-gradients/blob/master/src/super_gradients/training/datasets/detection_datasets/pascal_voc_detection.py)\n\n\n\n__________________________________________________________________________________________________________\n\n\n## Documentation\n\nCheck SuperGradients [Docs](https://deci-ai.github.io/super-gradients/welcome.html) for full documentation, user guide, and examples.\n\n## Contributing\n\nTo learn about making a contribution to SuperGradients, please see our [Contribution page](CONTRIBUTING.md).\n\nOur awesome contributors:\n\n<a href=\"https://github.com/Deci-AI/super-gradients/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=Deci-AI/super-gradients\" />\n</a>\n\n\n<br/>Made with [contrib.rocks](https://contrib.rocks).\n\n## Citation\n\nIf you are using SuperGradients library or benchmarks in your research, please cite SuperGradients deep learning training library.\n\n## Community\n\nIf you want to be a part of SuperGradients growing community, hear about all the exciting news and updates, need help, request for advanced features,\n    or want to file a bug or issue report, we would love to welcome you aboard!\n\n* Slack is the place to be and ask questions about SuperGradients and get support. [Click here to join our Slack](\n  https://join.slack.com/t/supergradients-comm52/shared_invite/zt-10vz6o1ia-b_0W5jEPEnuHXm087K~t8Q)\n\n* To report a bug, [file an issue](https://github.com/Deci-AI/super-gradients/issues) on GitHub.\n\n* Join the [SG Newsletter](https://www.supergradients.com/#Newsletter)\n  for staying up to date with new features and models, important announcements, and upcoming events.\n\n* For a short meeting with us, use this [link](https://calendly.com/ofer-baratz-deci/15min) and choose your preferred time.\n\n## License\n\nThis project is released under the [Apache 2.0 license](LICENSE).\n\n\n\n__________________________________________________________________________________________________________\n\n\n## Deci Platform\n\nDeci Platform is our end to end platform for building, optimizing and deploying deep learning models to production.\n\n[Request free trial](https://bit.ly/3qO3icq) to enjoy immediate improvement in throughput, latency, memory footprint and model size.\n\nFeatures:\n- Automatically compile and quantize your models with just a few clicks (TensorRT, OpenVINO).\n- Gain up to 10X improvement in throughput, latency, memory and model size. \n- Easily benchmark your models‚Äô performance on different hardware and batch sizes.\n- Invite co-workers to collaborate on models and communicate your progress.\n- Deci supports all common frameworks and Hardware, from Intel CPUs to Nvidia's GPUs and Jetsons.\n÷ø\n\nRequest free trial [here](https://bit.ly/3qO3icq) \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://deci-ai.github.io/super-gradients/welcome.html",
    "keywords": "Deci,AI,Training,Deep Learning,Computer Vision,PyTorch,SOTA,Recipes,Pre Trained,Models",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "super-gradients",
    "package_url": "https://pypi.org/project/super-gradients/",
    "platform": null,
    "project_url": "https://pypi.org/project/super-gradients/",
    "project_urls": {
      "Homepage": "https://deci-ai.github.io/super-gradients/welcome.html"
    },
    "release_url": "https://pypi.org/project/super-gradients/3.0.7/",
    "requires_dist": [
      "torch (<1.14,>=1.9.0)",
      "tqdm (>=4.57.0)",
      "boto3 (>=1.17.15)",
      "jsonschema (>=3.2.0)",
      "Deprecated (>=1.2.11)",
      "opencv-python (>=4.5.1)",
      "scipy (>=1.6.1)",
      "matplotlib (>=3.3.4)",
      "psutil (>=5.8.0)",
      "tensorboard (>=2.4.1)",
      "setuptools (>=21.0.0)",
      "coverage (~=5.3.1)",
      "torchvision (>=0.10.0)",
      "sphinx (~=4.0.2)",
      "sphinx-rtd-theme",
      "torchmetrics (==0.8)",
      "pillow (>=9.2.0)",
      "hydra-core (>=1.2.0)",
      "omegaconf",
      "onnxruntime",
      "onnx (>=1.10.1)",
      "pip-tools (>=6.12.1)",
      "pyparsing (==2.4.5)",
      "einops (==0.3.2)",
      "pycocotools (==2.0.4)",
      "protobuf (~=3.19.0)",
      "treelib (==1.6.1)",
      "termcolor (==1.1.0)",
      "packaging (>=20.4)",
      "wheel (>=0.38.0)",
      "pygments (>=2.7.4)",
      "stringcase (>=1.2.0)",
      "numpy (<=1.23)",
      "rapidfuzz",
      "deci-lab-client (==4.8.0) ; extra == 'pro'",
      "deci-common (==3.15.0) ; extra == 'pro'"
    ],
    "requires_python": "",
    "summary": "SuperGradients",
    "version": "3.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16657030,
  "releases": {
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b42071cd5efd2f7ad8002778f87643a5b6c6ce931ccf516b3934033186a7db36",
          "md5": "f9ab0af227e2a9a4b10458a931964160",
          "sha256": "c7819e2ae0ee3bb51d2bec30da3778ef6a8e53210e076ca680bc198f824a9650"
        },
        "downloads": -1,
        "filename": "super_gradients-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9ab0af227e2a9a4b10458a931964160",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 415049,
        "upload_time": "2022-01-05T08:57:58",
        "upload_time_iso_8601": "2022-01-05T08:57:58.006892Z",
        "url": "https://files.pythonhosted.org/packages/b4/20/71cd5efd2f7ad8002778f87643a5b6c6ce931ccf516b3934033186a7db36/super_gradients-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "378fedab76e4f2cbd8b8a2094dfaf8f14ba3977f8e2a9a606716c20b168431b3",
          "md5": "ef5973c70f754a55450e7ec0b2ac0f7c",
          "sha256": "57e17fd4eaa3b11ccf5acf2c1f883376166031ace281cfdd364dc9acc4a7f73f"
        },
        "downloads": -1,
        "filename": "super_gradients-1.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef5973c70f754a55450e7ec0b2ac0f7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 416383,
        "upload_time": "2022-01-06T17:10:20",
        "upload_time_iso_8601": "2022-01-06T17:10:20.207576Z",
        "url": "https://files.pythonhosted.org/packages/37/8f/edab76e4f2cbd8b8a2094dfaf8f14ba3977f8e2a9a606716c20b168431b3/super_gradients-1.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b7bbbfc05c9d5bd70d2d491b63b039edc301991acf76a74d37d243b74ba05ee",
          "md5": "964fe0ad7c93c7e0d56ba4e4512785ea",
          "sha256": "dbe0d4015f619d0d359f84e94a50005c75f9f11e9c8e321e96389cbb199c327d"
        },
        "downloads": -1,
        "filename": "super_gradients-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "964fe0ad7c93c7e0d56ba4e4512785ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 419465,
        "upload_time": "2022-01-16T09:45:10",
        "upload_time_iso_8601": "2022-01-16T09:45:10.234297Z",
        "url": "https://files.pythonhosted.org/packages/2b/7b/bbfc05c9d5bd70d2d491b63b039edc301991acf76a74d37d243b74ba05ee/super_gradients-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43f8d0bdf0a993768a34232315085bb8cc5f4ef2b6297b57a365dc302ef0749c",
          "md5": "23e73c4fff0ad422356404b6e5b79069",
          "sha256": "56714694ef6699a08e47394f32923a1c26c9abef532f78327f88119384cef2a0"
        },
        "downloads": -1,
        "filename": "super_gradients-1.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23e73c4fff0ad422356404b6e5b79069",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 497835,
        "upload_time": "2022-01-20T17:28:05",
        "upload_time_iso_8601": "2022-01-20T17:28:05.189647Z",
        "url": "https://files.pythonhosted.org/packages/43/f8/d0bdf0a993768a34232315085bb8cc5f4ef2b6297b57a365dc302ef0749c/super_gradients-1.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d38ba4998f665493cfcf7b85c63646887e26d70f2e587145b9b9f0dcb99ab3b",
          "md5": "cbeb2855bc967cb71f57cd2e07a9e72b",
          "sha256": "91b34eaafc9bdec560f23f2aedc0f6e1c94ce2eebf0d74f0f3dfe67b3550223f"
        },
        "downloads": -1,
        "filename": "super_gradients-1.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cbeb2855bc967cb71f57cd2e07a9e72b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 540899,
        "upload_time": "2022-01-25T19:00:21",
        "upload_time_iso_8601": "2022-01-25T19:00:21.639821Z",
        "url": "https://files.pythonhosted.org/packages/2d/38/ba4998f665493cfcf7b85c63646887e26d70f2e587145b9b9f0dcb99ab3b/super_gradients-1.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5b92c679117008e58349493e957572c6eb23ed69d1ffac6d27acc961abb68a9",
          "md5": "353baacc3d8f759e059bd0d4f2685c34",
          "sha256": "b512e22172323f0715e0601b36481154733bbdebd202bdaf0d1a78ee1afebd0e"
        },
        "downloads": -1,
        "filename": "super_gradients-1.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "353baacc3d8f759e059bd0d4f2685c34",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 540946,
        "upload_time": "2022-01-26T16:58:34",
        "upload_time_iso_8601": "2022-01-26T16:58:34.257898Z",
        "url": "https://files.pythonhosted.org/packages/d5/b9/2c679117008e58349493e957572c6eb23ed69d1ffac6d27acc961abb68a9/super_gradients-1.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bd3007c42ff7063e8abdd3e7787b9df5efab90b4237d6e3ecec49828f694fe3",
          "md5": "7a7b70e08504e6e49e399c6a6ddeb164",
          "sha256": "d3e9feed6131ded02c5620ad3287c42ce39551be364cbe6b58bec5a3259477a2"
        },
        "downloads": -1,
        "filename": "super_gradients-1.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a7b70e08504e6e49e399c6a6ddeb164",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 547300,
        "upload_time": "2022-02-08T08:38:21",
        "upload_time_iso_8601": "2022-02-08T08:38:21.397528Z",
        "url": "https://files.pythonhosted.org/packages/1b/d3/007c42ff7063e8abdd3e7787b9df5efab90b4237d6e3ecec49828f694fe3/super_gradients-1.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf1d784732f44535c7a7504f7ff1d8a437564645569c21933c51613e5f812e0d",
          "md5": "0284e2256fc6da3333783872dcda59c6",
          "sha256": "1790cc5c28853453cb1136ccc5c2c5683d405cdf417aa6920d47c99c118a9c35"
        },
        "downloads": -1,
        "filename": "super_gradients-1.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0284e2256fc6da3333783872dcda59c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15147522,
        "upload_time": "2022-03-10T13:37:42",
        "upload_time_iso_8601": "2022-03-10T13:37:42.713547Z",
        "url": "https://files.pythonhosted.org/packages/cf/1d/784732f44535c7a7504f7ff1d8a437564645569c21933c51613e5f812e0d/super_gradients-1.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b79c3505b2e3c124ec6f7e587cd8412a6b6dfa3196f0fae7cfca3ce544156607",
          "md5": "22b8de1f92a048b7d977296ff3e7d812",
          "sha256": "935ead2bba612216fdf5a2a44ddc738a1e73e3ab62100f6a071538d43ceb4680"
        },
        "downloads": -1,
        "filename": "super_gradients-1.7.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22b8de1f92a048b7d977296ff3e7d812",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19333243,
        "upload_time": "2022-04-05T08:38:08",
        "upload_time_iso_8601": "2022-04-05T08:38:08.382637Z",
        "url": "https://files.pythonhosted.org/packages/b7/9c/3505b2e3c124ec6f7e587cd8412a6b6dfa3196f0fae7cfca3ce544156607/super_gradients-1.7.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acb3563a38bc658d2099b72a68e3f1ac12ec440d981bbf8f50b7a0613c317b1a",
          "md5": "8d86e526f7d47dd3f3c707051eb52e93",
          "sha256": "2215645b64472c61aa866a40a732b8d79d0844f74b7251a78d877c59e09b0d6c"
        },
        "downloads": -1,
        "filename": "super_gradients-1.7.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d86e526f7d47dd3f3c707051eb52e93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19333235,
        "upload_time": "2022-04-06T13:30:48",
        "upload_time_iso_8601": "2022-04-06T13:30:48.419689Z",
        "url": "https://files.pythonhosted.org/packages/ac/b3/563a38bc658d2099b72a68e3f1ac12ec440d981bbf8f50b7a0613c317b1a/super_gradients-1.7.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0069c6ebacd1ba70013cd0527308e2b2a8d57d2ff10539deb6e3537c2ff146f5",
          "md5": "35dc0be96bd7d77652ea2136d99ce43b",
          "sha256": "820da3d8c9d4eb1dfc0907dce4dcb3637abf67acaaf442ba5723bdd1c00c1c35"
        },
        "downloads": -1,
        "filename": "super_gradients-1.7.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35dc0be96bd7d77652ea2136d99ce43b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19333238,
        "upload_time": "2022-04-17T12:51:29",
        "upload_time_iso_8601": "2022-04-17T12:51:29.210029Z",
        "url": "https://files.pythonhosted.org/packages/00/69/c6ebacd1ba70013cd0527308e2b2a8d57d2ff10539deb6e3537c2ff146f5/super_gradients-1.7.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47f13f7d82b7558ff6676cdcbcaf7df1a04ba22d1181b544badb7cf422865ce5",
          "md5": "2ddb1fc1ecd0b57fa72bceda602de1b6",
          "sha256": "9c85d3470c6dbc9f7171a1920d610df872fc36a4c8733d336380c6adb633997e"
        },
        "downloads": -1,
        "filename": "super_gradients-1.7.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ddb1fc1ecd0b57fa72bceda602de1b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19334319,
        "upload_time": "2022-04-19T11:43:16",
        "upload_time_iso_8601": "2022-04-19T11:43:16.304165Z",
        "url": "https://files.pythonhosted.org/packages/47/f1/3f7d82b7558ff6676cdcbcaf7df1a04ba22d1181b544badb7cf422865ce5/super_gradients-1.7.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54a6653fe37ab2f2c1c6f35c9cc3a02d60573945ac88f69ce234e5e17cdb7dba",
          "md5": "6cce752b06af1c17a25d7d302d4cdb7a",
          "sha256": "7bfd4ca34afffb1c3714866446746daea230293063dee62932efd7909f6c59e4"
        },
        "downloads": -1,
        "filename": "super_gradients-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6cce752b06af1c17a25d7d302d4cdb7a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19406047,
        "upload_time": "2022-06-09T08:09:52",
        "upload_time_iso_8601": "2022-06-09T08:09:52.229294Z",
        "url": "https://files.pythonhosted.org/packages/54/a6/653fe37ab2f2c1c6f35c9cc3a02d60573945ac88f69ce234e5e17cdb7dba/super_gradients-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cafdf98684dd7e583be934742c11c5b98a288f0caf7eead1d62bb7f2292187d8",
          "md5": "150a551696a2613d6abb3401f6bd9002",
          "sha256": "87cf00f7663f0f02d3e4ceea4cd9e657f1da50a9fc2ea33b3a256c82467d7c34"
        },
        "downloads": -1,
        "filename": "super_gradients-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "150a551696a2613d6abb3401f6bd9002",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19406052,
        "upload_time": "2022-06-12T07:42:55",
        "upload_time_iso_8601": "2022-06-12T07:42:55.429659Z",
        "url": "https://files.pythonhosted.org/packages/ca/fd/f98684dd7e583be934742c11c5b98a288f0caf7eead1d62bb7f2292187d8/super_gradients-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a2791ddfc9f72aa173630a4120ea8a65a1f57bed3ae34d214495d9ddc8f51f6",
          "md5": "8097c08104dec8aee6584dac747ad7e4",
          "sha256": "206db0e5b506aef63d146e1e08ca6040c8eec74fc04dfbf06699f87dbf6d6c6e"
        },
        "downloads": -1,
        "filename": "super_gradients-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8097c08104dec8aee6584dac747ad7e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22976559,
        "upload_time": "2022-07-19T15:09:45",
        "upload_time_iso_8601": "2022-07-19T15:09:45.725265Z",
        "url": "https://files.pythonhosted.org/packages/4a/27/91ddfc9f72aa173630a4120ea8a65a1f57bed3ae34d214495d9ddc8f51f6/super_gradients-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55c807b4c19ff06e7740369f3e1b92141e302acc83b1de70f22197f4eb80c90c",
          "md5": "3ad46e1e7b292aa83d5c5e07b69fcf1e",
          "sha256": "d392bb6fa5bcfcdbba325be2b9746a559dd4517a4c94d1a8b838b3a9a9cc4b38"
        },
        "downloads": -1,
        "filename": "super_gradients-2.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ad46e1e7b292aa83d5c5e07b69fcf1e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10944955,
        "upload_time": "2022-08-14T11:33:29",
        "upload_time_iso_8601": "2022-08-14T11:33:29.796520Z",
        "url": "https://files.pythonhosted.org/packages/55/c8/07b4c19ff06e7740369f3e1b92141e302acc83b1de70f22197f4eb80c90c/super_gradients-2.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a153d0d433c921bf2996c541760bf7dd10ed5d0c4ebbfcca6f50ae41dccd8f4a",
          "md5": "4a052e53577acb65799c1d33bde3494e",
          "sha256": "ca8002bf07e030f7c6b1f07f5b0de7e60de2c55b1bc021b78d381eec1ee5391f"
        },
        "downloads": -1,
        "filename": "super_gradients-2.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a052e53577acb65799c1d33bde3494e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10957910,
        "upload_time": "2022-09-12T06:53:28",
        "upload_time_iso_8601": "2022-09-12T06:53:28.623785Z",
        "url": "https://files.pythonhosted.org/packages/a1/53/d0d433c921bf2996c541760bf7dd10ed5d0c4ebbfcca6f50ae41dccd8f4a/super_gradients-2.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "544a916dc806922bca4f2f528c5c6694276210491ffb2ba12e7818caf6ce412f",
          "md5": "3734b404cb6c8d0bb43c82a8fdfd5905",
          "sha256": "b8013516b1ae5805135ca26aeb905ec20628b028df372466dca3084c698400b3"
        },
        "downloads": -1,
        "filename": "super_gradients-2.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3734b404cb6c8d0bb43c82a8fdfd5905",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10958952,
        "upload_time": "2022-09-12T06:57:57",
        "upload_time_iso_8601": "2022-09-12T06:57:57.763042Z",
        "url": "https://files.pythonhosted.org/packages/54/4a/916dc806922bca4f2f528c5c6694276210491ffb2ba12e7818caf6ce412f/super_gradients-2.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd18ad38148489b579ff982fe5a10821dbedd02163955e6175c805c06fb98245",
          "md5": "4337d046770befb5242750157e91f4eb",
          "sha256": "6a79585ea47cdd02eb7e0967aee0d0af8f560fec1abf4a3194a9a67d91bb9553"
        },
        "downloads": -1,
        "filename": "super_gradients-3.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4337d046770befb5242750157e91f4eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 615902,
        "upload_time": "2022-09-20T13:56:40",
        "upload_time_iso_8601": "2022-09-20T13:56:40.344593Z",
        "url": "https://files.pythonhosted.org/packages/dd/18/ad38148489b579ff982fe5a10821dbedd02163955e6175c805c06fb98245/super_gradients-3.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92978cedd92408d12fc085809fa32fb1ff5becf0b25015bf7b2c5b5c32c34a23",
          "md5": "aafe82d3271965769394581515aeea28",
          "sha256": "f3d148aa5c80d3c8aa68f8140cb01fe33d2ae5711be7c0bf518e3f73aed1e1f5"
        },
        "downloads": -1,
        "filename": "super_gradients-3.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aafe82d3271965769394581515aeea28",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 635931,
        "upload_time": "2022-10-11T12:33:24",
        "upload_time_iso_8601": "2022-10-11T12:33:24.275519Z",
        "url": "https://files.pythonhosted.org/packages/92/97/8cedd92408d12fc085809fa32fb1ff5becf0b25015bf7b2c5b5c32c34a23/super_gradients-3.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "867cf50a8bae96ef5158c4bf8fadc4b4a7c4f79be21bc6cdf6ff42d18acb4e4b",
          "md5": "4a2d149ed8405325832f68047d6a16bd",
          "sha256": "b7377e2750b828facc7906c108c48848775b55b2e490b3b76791d6e16b6d4b0b"
        },
        "downloads": -1,
        "filename": "super_gradients-3.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a2d149ed8405325832f68047d6a16bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 664788,
        "upload_time": "2022-11-13T12:18:19",
        "upload_time_iso_8601": "2022-11-13T12:18:19.450555Z",
        "url": "https://files.pythonhosted.org/packages/86/7c/f50a8bae96ef5158c4bf8fadc4b4a7c4f79be21bc6cdf6ff42d18acb4e4b/super_gradients-3.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63a23531cdee9948971dc6dd2865971dc65911bba2d34464d1840732e5f02a23",
          "md5": "9fbd28e7e07d2d81b8c1ce2b48ebc8fd",
          "sha256": "be7ab38643494c7ea771c97a0dc1e28cb42ca28e9188118744c98949201ebdbe"
        },
        "downloads": -1,
        "filename": "super_gradients-3.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9fbd28e7e07d2d81b8c1ce2b48ebc8fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 732489,
        "upload_time": "2022-11-28T13:48:30",
        "upload_time_iso_8601": "2022-11-28T13:48:30.678305Z",
        "url": "https://files.pythonhosted.org/packages/63/a2/3531cdee9948971dc6dd2865971dc65911bba2d34464d1840732e5f02a23/super_gradients-3.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80eacbc8e97fad2e5babcb63d1353cab31ac664b9037b481c9ff80767ddf433d",
          "md5": "22432d66a83dd9d519bc2c8227902b06",
          "sha256": "653510d4068f5930ebd4d233acc8eb677896927d071318f2e9f4a8214735934e"
        },
        "downloads": -1,
        "filename": "super_gradients-3.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22432d66a83dd9d519bc2c8227902b06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 748008,
        "upload_time": "2022-12-21T12:13:31",
        "upload_time_iso_8601": "2022-12-21T12:13:31.702897Z",
        "url": "https://files.pythonhosted.org/packages/80/ea/cbc8e97fad2e5babcb63d1353cab31ac664b9037b481c9ff80767ddf433d/super_gradients-3.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35f2cd36eb571f1080997153e29c84662cb5a423aab9a47f8f027b30578aba30",
          "md5": "88db551d66fe71ba3aa591ea9438c3d3",
          "sha256": "bb27385c41c1e716d0703616295cee655d6342b75b9d6dbf8d2ccc036f662e5c"
        },
        "downloads": -1,
        "filename": "super_gradients-3.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "88db551d66fe71ba3aa591ea9438c3d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 748996,
        "upload_time": "2022-12-28T16:33:19",
        "upload_time_iso_8601": "2022-12-28T16:33:19.165067Z",
        "url": "https://files.pythonhosted.org/packages/35/f2/cd36eb571f1080997153e29c84662cb5a423aab9a47f8f027b30578aba30/super_gradients-3.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d1c166d05c1d4a55c126d459f28079adafbe0f19b91ab2c2c21634feb134ac4",
          "md5": "9f083aee8283005a57b5ed0948215b12",
          "sha256": "327badd00543366b86572153bf97edaf4287a89e0c633d6f8648d28ee004fc37"
        },
        "downloads": -1,
        "filename": "super_gradients-3.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f083aee8283005a57b5ed0948215b12",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 762360,
        "upload_time": "2023-01-11T11:21:34",
        "upload_time_iso_8601": "2023-01-11T11:21:34.675464Z",
        "url": "https://files.pythonhosted.org/packages/8d/1c/166d05c1d4a55c126d459f28079adafbe0f19b91ab2c2c21634feb134ac4/super_gradients-3.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "581c137d2b009bb8a6ec4e1e7ca79750e66b60799f5a1cdde6ca75ecb75291a5",
          "md5": "f427ce1b09669cc2bfc971d53c42c452",
          "sha256": "c1f34bfe8c3a25586bb673d6f268e9f0c075858dd38b80ddc7557147d004af89"
        },
        "downloads": -1,
        "filename": "super_gradients-3.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f427ce1b09669cc2bfc971d53c42c452",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 794068,
        "upload_time": "2023-02-01T23:10:03",
        "upload_time_iso_8601": "2023-02-01T23:10:03.906042Z",
        "url": "https://files.pythonhosted.org/packages/58/1c/137d2b009bb8a6ec4e1e7ca79750e66b60799f5a1cdde6ca75ecb75291a5/super_gradients-3.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "581c137d2b009bb8a6ec4e1e7ca79750e66b60799f5a1cdde6ca75ecb75291a5",
        "md5": "f427ce1b09669cc2bfc971d53c42c452",
        "sha256": "c1f34bfe8c3a25586bb673d6f268e9f0c075858dd38b80ddc7557147d004af89"
      },
      "downloads": -1,
      "filename": "super_gradients-3.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f427ce1b09669cc2bfc971d53c42c452",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 794068,
      "upload_time": "2023-02-01T23:10:03",
      "upload_time_iso_8601": "2023-02-01T23:10:03.906042Z",
      "url": "https://files.pythonhosted.org/packages/58/1c/137d2b009bb8a6ec4e1e7ca79750e66b60799f5a1cdde6ca75ecb75291a5/super_gradients-3.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}