{
  "info": {
    "author": "Hailin Fu",
    "author_email": "hailinfufu@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "**DeePray** (`深度祈祷`): A new Modular, Scalable, Configurable, Easy-to-Use and Extend infrastructure for Deep Learning based Recommendation.\n\n[![Documentation Status](https://readthedocs.org/projects/deepray/badge/?version=latest)](https://deepray.readthedocs.io/en/latest/?badge=latest)\n[![PyPI version](https://badge.fury.io/py/deepray.svg)](https://badge.fury.io/py/deepray)\n[![GitHub version](https://badge.fury.io/gh/fuhailin%2Fdeepray.svg)](https://badge.fury.io/gh/fuhailin%2Fdeepray)\n\n\n## Introduction\nThe DeePray library offers state-of-the-art algorithms for [deep learning recommendation].\nDeePray is built on latest [TensorFlow 2][(https://tensorflow.org/)] and designed with modular structure，\nmaking it easy to discover patterns and answer questions about tabular-structed data.\n\nThe main goals of DeePray:\n\n- Easy to use, newbies can get hands dirty with deep learning quickly\n- Good performance with web-scale data\n- Easy to extend, Modular architecture let you build your Neural network like playing LEGO!\n\nLet's Get Started! Please refer to the official docs at https://deepray.readthedocs.io/en/latest/.\n\n## Installation\n\n\n#### Install DeePray using PyPI:\n\nTo install DeePray library from [PyPI](https://pypi.org/) using `pip`, execute the following command:\n\n```\npip install deepray\n```\n\n#### Install DeePray from Github source:\n\nFirst, clone the DeePray repository using `git`:\n\n```\ngit clone https://github.com/fuhailin/deepray.git\n```\n\nThen, `cd` to the deepray folder, and install the library by executing the following commands:\n\n```\ncd deepray\npip install .\n```\n## Tutorial\n\n### Census Adult Data Set\n#### Data preparation\n\nIn your tabular data, specify **NUMERICAL** for your continue features,  **CATEGORY** for categorical features, **VARIABLE** for variable length features, and obviously **LABEL** for label column. Then process them to  to [TFRecord](https://www.tensorflow.org/tutorials/load_data/tfrecord) format into order to get good performance with large-scale dataset.\n\n```python\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler, LabelEncoder\n\nfrom deepray.utils.converter import CSV2TFRecord\n\n\n# http://archive.ics.uci.edu/ml/datasets/Adult\ntrain_data = 'DeePray/examples/census/data/raw_data/adult_data.csv'\ndf = pd.read_csv(train_data)\ndf['income_label'] = (df[\"income_bracket\"].apply(lambda x: \">50K\" in x)).astype(int)\ndf.pop('income_bracket')\n\nNUMERICAL_FEATURES = ['age', 'fnlwgt', 'hours_per_week', 'capital_gain', 'capital_loss', 'education_num']\nCATEGORY_FEATURES = [col for col in df.columns if col != LABEL and col not in NUMERICAL_FEATURES]\nLABEL = ['income_label']\n\nfor feat in CATEGORY_FEATURES:\n    lbe = LabelEncoder()\n    df[feat] = lbe.fit_transform(df[feat])\n# Feature normilization\nmms = MinMaxScaler(feature_range=(0, 1))\ndf[NUMERICAL_FEATURES] = mms.fit_transform(df[NUMERICAL_FEATURES])\n\n\nprebatch = 1  # flags.prebatch\nconverter = CSV2TFRecord(LABEL, NUMERICAL_FEATURES, CATEGORY_FEATURES, VARIABLE_FEATURES=[], gzip=False)\nconverter.write_feature_map(df, './data/feature_map.csv')\n\ntrain_df, valid_df = train_test_split(df, test_size=0.2)\nconverter(train_df, out_file='./data/train.tfrecord', prebatch=prebatch)\nconverter(valid_df, out_file='./data/valid.tfrecord', prebatch=prebatch)\n```\n\nYou will get a feature map file like that:\n\n```\n9,workclass,CATEGORICAL\n16,education,CATEGORICAL\n7,marital_status,CATEGORICAL\n15,occupation,CATEGORICAL\n6,relationship,CATEGORICAL\n5,race,CATEGORICAL\n2,gender,CATEGORICAL\n42,native_country,CATEGORICAL\n1,hours_per_week,NUMERICAL\n1,capital_gain,NUMERICAL\n1,age,NUMERICAL\n1,fnlwgt,NUMERICAL\n1,capital_loss,NUMERICAL\n1,education_num,NUMERICAL\n2,income_label,LABEL\n```\nAnd then create two txt file `train`and `valid` separately to record train set TFRecords and valid set TFRecords file path.\n\n\n### Choose your model, Training and evaluation\n\n```python\n\"\"\"\nbuild and train model\n\"\"\"\n\nimport sys\n\nfrom absl import app, flags\n\nimport deepray as dp\nfrom deepray.base.trainer import train\nfrom deepray.model.build_model import BuildModel\n\nFLAGS = flags.FLAGS\n\n\ndef main(flags=None):\n    FLAGS(flags, known_only=True)\n    flags = FLAGS\n    model = BuildModel(flags)\n    history = train(model)\n    print(history)\n\n\nargv = [\n    sys.argv[0],\n    '--model=lr',\n    '--train_data=/Users/vincent/Projects/DeePray/examples/census/data/train',\n    '--valid_data=/Users/vincent/Projects/DeePray/examples/census/data/valid',\n    '--feature_map=/Users/vincent/Projects/DeePray/examples/census/data/feature_map.csv',\n    '--learning_rate=0.01',\n    '--epochs=10',\n    '--batch_size=64',\n]\nmain(flags=argv)\n```\n\n\n## Models List\n\n| Titile                                                       |  Booktitle  | Resources                                                    |\n| ------------------------------------------------------------ | :---------: | ------------------------------------------------------------ |\n| **FM**: Factorization Machines                               |  ICDM'2010  | [[pdf]](https://www.csie.ntu.edu.tw/~b97053/paper/Rendle2010FM.pdf) [[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_fm.py) |\n| **FFM**: Field-aware Factorization Machines for CTR Prediction | RecSys'2016 | [[pdf]](https://www.csie.ntu.edu.tw/~cjlin/papers/ffm.pdf) [[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_ffm.py) |\n| **FNN**: Deep Learning over Multi-field Categorical Data: A Case Study on User Response Prediction |  ECIR'2016  | [[pdf]](https://arxiv.org/abs/1601.02376)[[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_fnn.py) |\n| **PNN**: Product-based Neural Networks for User Response Prediction |  ICDM'2016  | [[pdf]](https://arxiv.org/abs/1611.00144)[[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_pnn.py) |\n| **Wide&Deep**: Wide & Deep Learning for Recommender Systems  |  DLRS'2016  | [[pdf]](https://arxiv.org/pdf/1606.07792)[[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_wdl.py) |\n| **AFM**: Attentional Factorization Machines: Learning the Weight of Feature Interactions via Attention Networks | IJCAI'2017  | [[pdf]](https://arxiv.org/abs/1708.04617)[[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_afm.py) |\n| **NFM**: Neural Factorization Machines for Sparse Predictive Analytics | SIGIR'2017  | [[pdf]](https://arxiv.org/abs/1708.05027)[[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_nfm.py) |\n| **DeepFM**: DeepFM: A Factorization-Machine based Neural Network for CTR Prediction[C] | IJCAI'2017  | [[pdf]](https://arxiv.org/abs/1703.04247) [[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_deepfm.py) |\n| **DCN**: Deep & Cross Network for Ad Click Predictions       | ADKDD'2017  | [[pdf]](https://arxiv.org/abs/1708.05123) [[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_dcn.py) |\n| **xDeepFM**: xDeepFM: Combining Explicit and Implicit Feature Interactions for Recommender Systems |  KDD'2018   | [[pdf]](https://arxiv.org/abs/1803.05170) [[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_xdeepfm.py) |\n| **DIN**: DIN: Deep Interest Network for Click-Through Rate Prediction |  KDD'2018   | [[pdf]](https://arxiv.org/abs/1706.06978) [[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_dien.py) |\n| **DIEN**: DIEN: Deep Interest Evolution Network for Click-Through Rate Prediction |  AAAI'2019  | [[pdf]](https://arxiv.org/abs/1809.03672) [[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_dien.py) |\n| **DSIN**: Deep Session Interest Network for Click-Through Rate Prediction | IJCAI'2019  | [[pdf]](https://arxiv.org/abs/1905.06482)[[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_dsin.py) |\n| **AutoInt**: Automatic Feature Interaction Learning via Self-Attentive Neural Networks |  CIKM'2019  | [[pdf]](https://arxiv.org/abs/1810.11921)[[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_autoint.py) |\n| **FLEN**: Leveraging Field for Scalable CTR Prediction       |  AAAI'2020  | [[pdf]](https://arxiv.org/pdf/1911.04690.pdf)[[code]](https://github.com/fuhailin/DeePray/blob/master/deepray/model/model_flen.py) |\n| **DFN**: Deep Feedback Network for Recommendation            | IJCAI'2020  | [[pdf]]()[[code]](TODO)                                      |\n\n# How to build your own model with DeePray\n\nInheriting   `BaseCTRModel` class from `from deepray.model.model_ctr`, and implement your own `build_network()` method!\n\n\n# Contribution\n\nDeePray is still under development, and call for contributions!\n\n```\n* Hailin Fu (`Hailin <https://github.com/fuhailin>`)\n* Call for contributions!\n```\n让DeePray成为推荐算法新基建需要你的贡献\n\n# Citing\nDeePray is designed, developed and supported by [Hailin](https://github.com/fuhailin/).\nIf you use any part of this library in your research, please cite it using the following BibTex entry\n```latex\n@misc{DeePray,\n  author = {Hailin Fu},\n  title = {DeePray: A new Modular, Scalable, Configurable, Easy-to-Use and Extend infrastructure for Deep Learning based Recommendation},\n  year = {2020},\n  publisher = {GitHub},\n  journal = {GitHub Repository},\n  howpublished = {\\url{https://github.com/fuhailin/deepray}},\n}\n```\n\n# License\n\nCopyright (c) Copyright © 2020 The DeePray Authors<Hailin Fu>. All Rights Reserved.\n\nLicensed under the [Apach](LICENSE) License.\n\n# Reference\n\nhttps://github.com/shenweichen/DeepCTR\n\nhttps://github.com/aimetrics/jarvis\n\nhttps://github.com/shichence/AutoInt\n\n# Contact\nIf you want cooperation or have any questions, please follow my wechat offical account:\n\n公众微信号ID：【StateOfTheArt】\n\n![StateOfTheArt](https://gitee.com/fuhailin/Object-Storage-Service/raw/master/wechat_channel.png)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fuhailin/deepray",
    "keywords": "recommendation,deep learning,tensorflow2,keras",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deepray",
    "package_url": "https://pypi.org/project/deepray/",
    "platform": "",
    "project_url": "https://pypi.org/project/deepray/",
    "project_urls": {
      "Homepage": "https://github.com/fuhailin/deepray"
    },
    "release_url": "https://pypi.org/project/deepray/0.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A new Modular, Scalable, Configurable, Easy-to-Use and Extend infrastructure for Deep Learning based classification.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7432207,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d972866f2c7ca242e0fbe28f00070678b9c1506050426457ec418327f9a343c",
          "md5": "1bb93e8d4e97e4b1d6b8cad5fc4336a5",
          "sha256": "f6d6d9ed940909b09b6b6337d84b18ca69ecd925961d571701d2d95ee375e70d"
        },
        "downloads": -1,
        "filename": "deepray-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1bb93e8d4e97e4b1d6b8cad5fc4336a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 47937,
        "upload_time": "2020-05-31T17:39:20",
        "upload_time_iso_8601": "2020-05-31T17:39:20.610368Z",
        "url": "https://files.pythonhosted.org/packages/2d/97/2866f2c7ca242e0fbe28f00070678b9c1506050426457ec418327f9a343c/deepray-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0ba415d1ecf31011aaed94eb82ff3e31db5f9aff81d019b884502fe7e57d992",
          "md5": "8822908b69208e33558348cdede9ec1b",
          "sha256": "9d57cfda76f6aed225082908f738d4a3b5f62051bcdb3d042cd81893e5327dfb"
        },
        "downloads": -1,
        "filename": "deepray-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8822908b69208e33558348cdede9ec1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27056,
        "upload_time": "2020-05-31T17:39:23",
        "upload_time_iso_8601": "2020-05-31T17:39:23.923062Z",
        "url": "https://files.pythonhosted.org/packages/b0/ba/415d1ecf31011aaed94eb82ff3e31db5f9aff81d019b884502fe7e57d992/deepray-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a19ea6fe7686463bdc4ffbc787aac66c1f124c791ebc039981d1cba388cd104",
          "md5": "047fc349c566076bb67680e71ab8c86b",
          "sha256": "be84249010b57b0471bb2149d368ec6de68df07ce109db51beb9066a4c1302e6"
        },
        "downloads": -1,
        "filename": "deepray-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "047fc349c566076bb67680e71ab8c86b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 59071,
        "upload_time": "2020-06-03T16:06:48",
        "upload_time_iso_8601": "2020-06-03T16:06:48.294179Z",
        "url": "https://files.pythonhosted.org/packages/0a/19/ea6fe7686463bdc4ffbc787aac66c1f124c791ebc039981d1cba388cd104/deepray-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be3d3ac53153925341f0dfaaf479d3a3d062b01b47c1d2bd1ab5bc4468471744",
          "md5": "cbc345a9681e95d64381702002bc940f",
          "sha256": "dbee16937294e082ad1123f6399ed222ab1a41d7569a238c8a11d18827d9a05c"
        },
        "downloads": -1,
        "filename": "deepray-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cbc345a9681e95d64381702002bc940f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32662,
        "upload_time": "2020-06-03T16:06:50",
        "upload_time_iso_8601": "2020-06-03T16:06:50.442983Z",
        "url": "https://files.pythonhosted.org/packages/be/3d/3ac53153925341f0dfaaf479d3a3d062b01b47c1d2bd1ab5bc4468471744/deepray-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25435c735cb57614230fa7701d97bbf65bebc0acfeae6f937a8f8e49d035a717",
          "md5": "71fa55a85f8510bd9f19224e9c7bd348",
          "sha256": "eaf3bafaac419e27696e4ff5d2999d0b692486a0badc77a238cff3f021331ba5"
        },
        "downloads": -1,
        "filename": "deepray-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71fa55a85f8510bd9f19224e9c7bd348",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 64797,
        "upload_time": "2020-06-09T15:16:02",
        "upload_time_iso_8601": "2020-06-09T15:16:02.989396Z",
        "url": "https://files.pythonhosted.org/packages/25/43/5c735cb57614230fa7701d97bbf65bebc0acfeae6f937a8f8e49d035a717/deepray-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "217f305669f09b69b1d0868af25e7f8eeb3d542026234b65b608851b1edb7adc",
          "md5": "346e354be35cbdefdc21c65aa43aa56c",
          "sha256": "b9ebdf0ff1d349d4a6e963a16caa0154211c11c6dd02c69a3ae4ecfdba7e03f6"
        },
        "downloads": -1,
        "filename": "deepray-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "346e354be35cbdefdc21c65aa43aa56c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33515,
        "upload_time": "2020-06-09T15:16:04",
        "upload_time_iso_8601": "2020-06-09T15:16:04.729786Z",
        "url": "https://files.pythonhosted.org/packages/21/7f/305669f09b69b1d0868af25e7f8eeb3d542026234b65b608851b1edb7adc/deepray-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25435c735cb57614230fa7701d97bbf65bebc0acfeae6f937a8f8e49d035a717",
        "md5": "71fa55a85f8510bd9f19224e9c7bd348",
        "sha256": "eaf3bafaac419e27696e4ff5d2999d0b692486a0badc77a238cff3f021331ba5"
      },
      "downloads": -1,
      "filename": "deepray-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "71fa55a85f8510bd9f19224e9c7bd348",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 64797,
      "upload_time": "2020-06-09T15:16:02",
      "upload_time_iso_8601": "2020-06-09T15:16:02.989396Z",
      "url": "https://files.pythonhosted.org/packages/25/43/5c735cb57614230fa7701d97bbf65bebc0acfeae6f937a8f8e49d035a717/deepray-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "217f305669f09b69b1d0868af25e7f8eeb3d542026234b65b608851b1edb7adc",
        "md5": "346e354be35cbdefdc21c65aa43aa56c",
        "sha256": "b9ebdf0ff1d349d4a6e963a16caa0154211c11c6dd02c69a3ae4ecfdba7e03f6"
      },
      "downloads": -1,
      "filename": "deepray-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "346e354be35cbdefdc21c65aa43aa56c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 33515,
      "upload_time": "2020-06-09T15:16:04",
      "upload_time_iso_8601": "2020-06-09T15:16:04.729786Z",
      "url": "https://files.pythonhosted.org/packages/21/7f/305669f09b69b1d0868af25e7f8eeb3d542026234b65b608851b1edb7adc/deepray-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}