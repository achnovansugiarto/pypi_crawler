{
  "info": {
    "author": "Miles Butler",
    "author_email": "miles@milesbutler.dev",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Text Processing"
    ],
    "description": "# Stenciler\n\nstenciler is a CLI tool for building plaintext artifacts by populating Jinja\ntemplates from YAML files. You can use it in any case where you need to create\none or more different plaintext formats with the same data, e.g. a resume in\n`.txt` and `.tex` formats.\n\n## Installation\n\n```shell\npipx install stenciler\n```\n\n## Example Usage\n\nHere is an example use case. These files can also be found in the `sample`\ndirectory.\n\nSay you need to build a sample resume in `.txt` and `.tex` formats. First, set up\nyour data:\n\n```yaml\n# resume.yaml\nname: Marie Curie\nsummary: |\n    Physicist, chemist, two-time Nobel Prize winner, enjoys long bicycle trips.\nawards:\n- name: Nobel Prize in Chemistry\n  year: 1911\n- name: Albert Medal\n  year: 1910\n- name: Davy Medal\n  year: 1903\n- name: Nobel Prize in Physics\n  year: 1903\n```\n\nNow, set up your stencil. This yaml file should have a simple dictionary structure\nwhere the keys are file extensions (e.g. `txt`, `tex`) and the values are Jinja\ntemplates.\n\n```yaml\n# stencil.yaml\ntxt: |\n  Name:       {{ name }}\n\n  SUMMARY\n  ----------------------------------------------------------------------------------\n  {{ summary | replace('\\n', ' ') | wordwrap(80) }}\n\n  AWARDS\n  ----------------------------------------------------------------------------------\n  {% for award in awards %}{{ award.name }}{{ \" \" * (78 - award.name.__len__()) }}{{ award.year}}\n  {% endfor %}\ntex: |\n  \\documentclass{article}\n  \\begin{document}\n  {\\huge\\centering {{ name }}\\\\[-0.7\\baselineskip]\\hrulefill\\par}\n\n  \\subsection*{Summary}\n  {{ summary | replace('\\n', ' ') | wordwrap(80) }}\n\n  \\subsection*{Education}\n  {% for award in awards %}\n  \\noindent {{ award.name }} \\hfill {{ award.year }}\n  {% endfor %}\n\n  \\end{document}\n```\n\nLast, run `stenciler` to generate the output files:\n\n```shell\nstenciler --stencil stencil.yaml --data resume.yaml\n```\n\nResults:\n\n```\n# outputs/resume.txt\nName:       Marie Curie\n\nSUMMARY\n----------------------------------------------------------------------------------\nPhysicist, chemist, two-time Nobel Prize winner, enjoys long bicycle trips.\n\nAWARDS\n----------------------------------------------------------------------------------\nNobel Prize in Chemistry                                                      1911\nAlbert Medal                                                                  1910\nDavy Medal                                                                    1903\nNobel Prize in Physics                                                        1903\n```\n\n```tex\n# outputs/resume.tex\n\\documentclass{article}\n\\begin{document}\n{\\huge\\centering Marie Curie\\\\[-0.7\\baselineskip]\\hrulefill\\par}\n\n\\subsection*{Summary}\nPhysicist, chemist, two-time Nobel Prize winner, enjoys long bicycle trips.\n\n\\subsection*{Education}\n\n\\noindent Nobel Prize in Chemistry \\hfill 1911\n\n\\noindent Albert Medal \\hfill 1910\n\n\\noindent Davy Medal \\hfill 1903\n\n\\noindent Nobel Prize in Physics \\hfill 1903\n\n\n\\end{document}\n```\n\n![Screenshot of compiled resume.pdf](sample/outputs/resume_pdf.png \"Screenshot\")\n\n## Developer Setup\n\nSet up your virtual environment:\n\n```shell\npython3 -m venv .venv\n```\n\nAssuming `direnv`, set up your `.envrc`:\n\n```shell\n# .envrc\nPATH_add .venv/bin\nPATH_add bin\n\nchmod -R +x bin\n```\n\nAllow your env file and install requirements:\n\n```shell\ndirenv allow\npip install -r dev-requirements.txt\n```\n\nRun the test script:\n\n```shell\nchecks\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mtmbutler/stenciler",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stenciler",
    "package_url": "https://pypi.org/project/stenciler/",
    "platform": null,
    "project_url": "https://pypi.org/project/stenciler/",
    "project_urls": {
      "Homepage": "https://github.com/mtmbutler/stenciler"
    },
    "release_url": "https://pypi.org/project/stenciler/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A CLI tool for building plaintext artifacts by populating Jinja templates from YAML files.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13558987,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83cd4e2a39e3e6daca59a1d06db1bc607ca6c77b2a7c55d93589ea8b5143c865",
          "md5": "c7ca7af01ef9cfaa780fc7cd7252d36c",
          "sha256": "c4f76deaa6181f6e48ee648e00f6e68daac665e5b361b13dcc122951a0488151"
        },
        "downloads": -1,
        "filename": "stenciler-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c7ca7af01ef9cfaa780fc7cd7252d36c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3972,
        "upload_time": "2022-04-19T16:52:51",
        "upload_time_iso_8601": "2022-04-19T16:52:51.288728Z",
        "url": "https://files.pythonhosted.org/packages/83/cd/4e2a39e3e6daca59a1d06db1bc607ca6c77b2a7c55d93589ea8b5143c865/stenciler-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f200cbc0060d847fae5a3af435ec29fb3d01b27c4ff6077a97171171cc5e5d6d",
          "md5": "f442720dd60ab888fc9823fbe00024ca",
          "sha256": "9395b552410008c147194b2417df5c23443043d9e3f1fab7a5d8c403ff48e8b8"
        },
        "downloads": -1,
        "filename": "stenciler-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f442720dd60ab888fc9823fbe00024ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4149,
        "upload_time": "2022-04-19T17:05:34",
        "upload_time_iso_8601": "2022-04-19T17:05:34.806615Z",
        "url": "https://files.pythonhosted.org/packages/f2/00/cbc0060d847fae5a3af435ec29fb3d01b27c4ff6077a97171171cc5e5d6d/stenciler-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f200cbc0060d847fae5a3af435ec29fb3d01b27c4ff6077a97171171cc5e5d6d",
        "md5": "f442720dd60ab888fc9823fbe00024ca",
        "sha256": "9395b552410008c147194b2417df5c23443043d9e3f1fab7a5d8c403ff48e8b8"
      },
      "downloads": -1,
      "filename": "stenciler-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f442720dd60ab888fc9823fbe00024ca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4149,
      "upload_time": "2022-04-19T17:05:34",
      "upload_time_iso_8601": "2022-04-19T17:05:34.806615Z",
      "url": "https://files.pythonhosted.org/packages/f2/00/cbc0060d847fae5a3af435ec29fb3d01b27c4ff6077a97171171cc5e5d6d/stenciler-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}