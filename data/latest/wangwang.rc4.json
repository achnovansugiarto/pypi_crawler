{
  "info": {
    "author": "ZERONE",
    "author_email": "zerone40@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "自定义机器人开发\n\n更新时间：2020-10-15 17:40:42\n\n## 获取自定义机器人webhook\n\n步骤一，打开机器人管理页面。以PC端为例，打开PC端钉钉，点击头像，选择“机器人管理”。\n\n![image.png](https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/3824199951/p131222.png)\n\n\n\n步骤二，在机器人管理页面选择“自定义”机器人，输入机器人名字并选择要发送消息的群，同时可以为机器人设置机器人头像。\n\n\n\n\n\n![屏幕快照 2019-10-25 下午1.50.45.png](https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/4824199951/p131223.png)\n\n\n\n步骤三，完成必要的安全设置（至少选择一种），勾选 我已阅读并同意《自定义机器人服务及免责条款》，点击“完成”。安全设置目前有3种方式，设置说明见下文介绍。\n\n![image.png](https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/4824199951/p131224.png)\n\n\n\n步骤四，完成安全设置后，复制出机器人的Webhook地址，可用于向这个群发送消息，格式如下：\n\n\n\n```javascript\nhttps://oapi.dingtalk.com/robot/send?access_token=XXXXXX\n```\n\n\n\n**注意：请保管好此Webhook 地址，不要公布在外部网站上，泄露后有安全风险。**\n\n## 安全设置\n\n安全设置目前有3种方式：\n\n**（1）方式一，自定义关键词**\n\n最多可以设置10个关键词，消息中至少包含其中1个关键词才可以发送成功。\n\n例如：添加了一个自定义关键词：监控报警\n\n则这个机器人所发送的消息，必须包含 监控报警 这个词，才能发送成功。\n\n\n\n**（2）方****式二，加签**\n\n第一步，把timestamp+\"\\n\"+密钥当做签名字符串，使用HmacSHA256算法计算签名，然后进行Base64 encode，最后再把签名参数再进行urlEncode，得到最终的签名（需要使用UTF-8字符集）。\n\n\n\n| **参数**  | **说明**                                                    |\n| --------- | ----------------------------------------------------------- |\n| timestamp | 当前时间戳，单位是毫秒，与请求调用时间误差不能超过1小时     |\n| secret    | 密钥，机器人安全设置页面，加签一栏下面显示的SEC开头的字符串 |\n\n\n\n签名计算代码示例（Java）\n\n```javascript\nimport javax.crypto.Mac;\nimport javax.crypto.spec.SecretKeySpec;\nimport org.apache.commons.codec.binary.Base64;\nimport java.net.URLEncoder;\n\npublic class Test {\n    public static void main(String[] args) throws Exception {\n        Long timestamp = System.currentTimeMillis();\n        String secret = \"this is secret\";\n\n        String stringToSign = timestamp + \"\\n\" + secret;\n        Mac mac = Mac.getInstance(\"HmacSHA256\");\n        mac.init(new SecretKeySpec(secret.getBytes(\"UTF-8\"), \"HmacSHA256\"));\n        byte[] signData = mac.doFinal(stringToSign.getBytes(\"UTF-8\"));\n        String sign = URLEncoder.encode(new String(Base64.encodeBase64(signData)),\"UTF-8\");\n        System.out.println(sign);\n    }\n\n}\n```\n\n\n\n\n\n签名计算代码示例（Python）\n\n\n\n```javascript\n#python 3.8 \nimport time\nimport hmac\nimport hashlib\nimport base64\nimport urllib.parse\n\ntimestamp = str(round(time.time() * 1000))\nsecret = 'this is secret'\nsecret_enc = secret.encode('utf-8')\nstring_to_sign = '{}\\n{}'.format(timestamp, secret)\nstring_to_sign_enc = string_to_sign.encode('utf-8')\nhmac_code = hmac.new(secret_enc, string_to_sign_enc, digestmod=hashlib.sha256).digest()\nsign = urllib.parse.quote_plus(base64.b64encode(hmac_code))\nprint(timestamp)\nprint(sign)\n```\n\n\n\n```javascript\n#python 2.7\nimport time\nimport hmac\nimport hashlib\nimport base64\nimport urllib\n\ntimestamp = long(round(time.time() * 1000))\nsecret = 'this is secret'\nsecret_enc = bytes(secret).encode('utf-8')\nstring_to_sign = '{}\\n{}'.format(timestamp, secret)\nstring_to_sign_enc = bytes(string_to_sign).encode('utf-8')\nhmac_code = hmac.new(secret_enc, string_to_sign_enc, digestmod=hashlib.sha256).digest()\nsign = urllib.quote_plus(base64.b64encode(hmac_code))\nprint(timestamp)\nprint(sign)\n```\n\n\n\n第二步，把 timestamp和第一步得到的签名值拼接到URL中。\n\n| **参数**  | **说明**             |\n| --------- | -------------------- |\n| timestamp | 第一步使用到的时间戳 |\n| sign      | 第一步得到的签名值   |\n\n\n\n```javascript\nhttps://oapi.dingtalk.com/robot/send?access_token=XXXXXX&timestamp=XXX&sign=XXX\n```\n\n\n\n**（3）方****式三，IP地址（段）**\n\n设定后，只有来自IP地址范围内的请求才会被正常处理。支持两种设置方式：IP、IP段，暂不支持IPv6地址白名单，格式如下:\n\n![image.png](https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/4824199951/p131225.png)\n\n\n\n**注意：安全设置的上述三种方式，需要****至少****设置其中一种，以进行安全保护**。校验不通过的消息将会发送失败，错误如下：\n\n```javascript\n// 消息内容中不包含任何关键词\n{\n  \"errcode\":310000,\n  \"errmsg\":\"keywords not in content\"\n}\n\n// timestamp 无效\n{\n  \"errcode\":310000,\n  \"errmsg\":\"invalid timestamp\"\n}\n\n// 签名不匹配\n{\n  \"errcode\":310000,\n  \"errmsg\":\"sign not match\"\n}\n\n// IP地址不在白名单\n{\n  \"errcode\":310000,\n  \"errmsg\":\"ip X.X.X.X not in whitelist\"\n}\n```\n\n\n\n## 使用自定义机器人\n\n（1）获取到Webhook地址后，用户可以向这个地址发起HTTP POST 请求，即可实现给该钉钉群发送消息。注意，发起POST请求时，必须将字符集编码设置成UTF-8。\n\n**（2）当前自定义机器人支持文本 (text)、链接 (link)、markdown(****markdown)、ActionCard、FeedCard消息类型**，大家可以根据自己的使用场景选择合适的消息类型，达到最好的展示样式。\n\n（3）自定义机器人发送消息时，可以通过手机号码指定“被@人列表”。在“被@人列表”里面的人员收到该消息时，会有@消息提醒(免打扰会话仍然通知提醒，首屏出现“有人@你”)。\n\n**（4）当前机器人尚不支持应答机制** (该机制指的是群里成员在聊天@机器人的时候，钉钉回调指定的服务地址，即Outgoing机器人)。\n\n\n\n**SDK ：**\n\n可以下载[SDK](https://open-doc.dingtalk.com/microapp/faquestions/vzbp02)，简化调用方式。\n\n\n\n**消息发送频率限制：**\n\n每个机器人每分钟最多发送20条。消息发送太频繁会严重影响群成员的使用体验，大量发消息的场景 (譬如系统监控报警) 可以将这些信息进行整合，通过markdown消息以摘要的形式发送到群里。\n\n\n\n## 测试自定义机器人\n\n> 通过下面方法，可以快速验证自定义机器人是否可以正常工作：\n\n使用命令行工具curl。\n\n为避免出错，将以下命令逐行复制到命令行，需要将xxxxxxxx替换为真实access_token；若测试出错，请检查复制的命令是否和测试命令一致，多特殊字符会报错。\n\n```javascript\ncurl 'https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxx' \\\n   -H 'Content-Type: application/json' \\\n   -d '{\"msgtype\": \"text\",\"text\": {\"content\": \"我就是我, 是不一样的烟火\"}}'\n```\n\n**SDK请求示例（JAVA）：**\n\n```javascript\nDingTalkClient client = new DefaultDingTalkClient(\"https://oapi.dingtalk.com/robot/send?access_token=566cc69da782ec******\");\nOapiRobotSendRequest request = new OapiRobotSendRequest();\nrequest.setMsgtype(\"text\");\nOapiRobotSendRequest.Text text = new OapiRobotSendRequest.Text();\ntext.setContent(\"测试文本消息\");\nrequest.setText(text);\nOapiRobotSendRequest.At at = new OapiRobotSendRequest.At();\nat.setAtMobiles(Arrays.asList(\"132xxxxxxxx\"));\n// isAtAll类型如果不为Boolean，请升级至最新SDK\nat.setIsAtAll(true);\nrequest.setAt(at);\n\nrequest.setMsgtype(\"link\");\nOapiRobotSendRequest.Link link = new OapiRobotSendRequest.Link();\nlink.setMessageUrl(\"https://www.dingtalk.com/\");\nlink.setPicUrl(\"\");\nlink.setTitle(\"时代的火车向前开\");\nlink.setText(\"这个即将发布的新版本，创始人xx称它为红树林。而在此之前，每当面临重大升级，产品经理们都会取一个应景的代号，这一次，为什么是红树林\");\nrequest.setLink(link);\n\nrequest.setMsgtype(\"markdown\");\nOapiRobotSendRequest.Markdown markdown = new OapiRobotSendRequest.Markdown();\nmarkdown.setTitle(\"杭州天气\");\nmarkdown.setText(\"#### 杭州天气 @156xxxx8827\\n\" +\n        \"> 9度，西北风1级，空气良89，相对温度73%\\n\\n\" +\n        \"> ![screenshot](https://gw.alicdn.com/tfs/TB1ut3xxbsrBKNjSZFpXXcXhFXa-846-786.png)\\n\"  +\n        \"> ###### 10点20分发布 [天气](http://www.thinkpage.cn/) \\n\");\nrequest.setMarkdown(markdown);\nOapiRobotSendResponse response = client.execute(request);\n```\n\n**PHP程序测试：**\n\n```javascript\n<?php  \nfunction request_by_curl($remote_server, $post_string) {  \n    $ch = curl_init();  \n    curl_setopt($ch, CURLOPT_URL, $remote_server);\n    curl_setopt($ch, CURLOPT_POST, 1); \n    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 5); \n    curl_setopt($ch, CURLOPT_HTTPHEADER, array ('Content-Type: application/json;charset=utf-8'));\n    curl_setopt($ch, CURLOPT_POSTFIELDS, $post_string);  \n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);  \n    // 线下环境不用开启curl证书验证, 未调通情况可尝试添加该代码\n    // curl_setopt ($ch, CURLOPT_SSL_VERIFYHOST, 0); \n    // curl_setopt ($ch, CURLOPT_SSL_VERIFYPEER, 0);\n    $data = curl_exec($ch);\n    curl_close($ch);                \n    return $data;  \n}  \n\n$webhook = \"https://oapi.dingtalk.com/robot/send?access_token=xxxxxx\";\n$message=\"我就是我, 是不一样的烟火\";\n$data = array ('msgtype' => 'text','text' => array ('content' => $message));\n$data_string = json_encode($data);\n\n$result = request_by_curl($webhook, $data_string);  \necho $result;\n?>\n```\n\n## 消息类型及数据格式\n\n## text类型\n\n```javascript\n{\n    \"msgtype\": \"text\", \n    \"text\": {\n        \"content\": \"我就是我, 是不一样的烟火@156xxxx8827\"\n    }, \n    \"at\": {\n        \"atMobiles\": [\n            \"156xxxx8827\", \n            \"189xxxx8325\"\n        ], \n        \"isAtAll\": false\n    }\n}\n```\n\n\n\n| **参数**  | **参数类型** | **必须** | **说明**                                    |\n| --------- | ------------ | -------- | ------------------------------------------- |\n| msgtype   | String       | 是       | 消息类型，此时固定为：text                  |\n| content   | String       | 是       | 消息内容                                    |\n| atMobiles | Array        | 否       | 被@人的手机号（在content里添加@人的手机号） |\n| isAtAll   | Boolean      | 否       | 是否@所有人                                 |\n\n\n\n![img](https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/4824199951/p131226.png)\n\n## link类型\n\n```javascript\n{\n    \"msgtype\": \"link\", \n    \"link\": {\n        \"text\": \"这个即将发布的新版本，创始人xx称它为红树林。而在此之前，每当面临重大升级，产品经理们都会取一个应景的代号，这一次，为什么是红树林\", \n        \"title\": \"时代的火车向前开\", \n        \"picUrl\": \"\", \n        \"messageUrl\": \"https://www.dingtalk.com/s?__biz=MzA4NjMwMTA2Ng==&mid=2650316842&idx=1&sn=60da3ea2b29f1dcc43a7c8e4a7c97a16&scene=2&srcid=09189AnRJEdIiWVaKltFzNTw&from=timeline&isappinstalled=0&key=&ascene=2&uin=&devicetype=android-23&version=26031933&nettype=WIFI\"\n    }\n}\n```\n\n\n\n| **参数**   | **参数类型** | **必须** | **说明**                       |\n| ---------- | ------------ | -------- | ------------------------------ |\n| msgtype    | String       | 是       | 消息类型，此时固定为：link     |\n| title      | String       | 是       | 消息标题                       |\n| text       | String       | 是       | 消息内容。如果太长只会部分展示 |\n| messageUrl | String       | 是       | 点击消息跳转的URL              |\n| picUrl     | String       | 否       | 图片URL                        |\n\n\n\n![image.png](https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/4824199951/p131227.png)\n\n## markdown类型\n\n```javascript\n{\n     \"msgtype\": \"markdown\",\n     \"markdown\": {\n         \"title\":\"杭州天气\",\n         \"text\": \"#### 杭州天气 @150XXXXXXXX \\n> 9度，西北风1级，空气良89，相对温度73%\\n> ![screenshot](https://img.alicdn.com/tfs/TB1NwmBEL9TBuNjy1zbXXXpepXa-2400-1218.png)\\n> ###### 10点20分发布 [天气](https://www.dingtalk.com) \\n\"\n     },\n      \"at\": {\n          \"atMobiles\": [\n              \"150XXXXXXXX\"\n          ],\n          \"isAtAll\": false\n      }\n }\n```\n\n\n\n| **参数**  | **类型** | **必选** | **说明**                                 |\n| --------- | -------- | -------- | ---------------------------------------- |\n| msgtype   | String   | 是       | 此消息类型为固定markdown                 |\n| title     | String   | 是       | 首屏会话透出的展示内容                   |\n| text      | String   | 是       | markdown格式的消息                       |\n| atMobiles | Array    | 否       | 被@人的手机号（在text内容里要有@手机号） |\n| isAtAll   | Boolean  | 否       | 是否@所有人                              |\n\n![img](https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/4824199951/p131228.png)\n\n\n\n说明：目前只支持md语法的子集，具体支持的元素如下：\n\n```javascript\n标题\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n引用\n> A man who stands for nothing will fall for anything.\n\n文字加粗、斜体\n**bold**\n*italic*\n\n链接\n[this is a link](http://name.com)\n\n图片\n![](http://name.com/pic.jpg)\n\n无序列表\n- item1\n- item2\n\n有序列表\n1. item1\n2. item2\n```\n\n## 整体跳转ActionCard类型\n\n```javascript\n{\n    \"actionCard\": {\n        \"title\": \"乔布斯 20 年前想打造一间苹果咖啡厅，而它正是 Apple Store 的前身\", \n        \"text\": \"![screenshot](https://gw.alicdn.com/tfs/TB1ut3xxbsrBKNjSZFpXXcXhFXa-846-786.png) \n ### 乔布斯 20 年前想打造的苹果咖啡厅 \n Apple Store 的设计正从原来满满的科技感走向生活化，而其生活化的走向其实可以追溯到 20 年前苹果一个建立咖啡馆的计划\", \n        \"btnOrientation\": \"0\", \n        \"singleTitle\" : \"阅读全文\",\n        \"singleURL\" : \"https://www.dingtalk.com/\"\n    }, \n    \"msgtype\": \"actionCard\"\n}\n```\n\n\n\n| **参数**       | **类型** | **必须** | **说明**                                        |\n| -------------- | -------- | -------- | ----------------------------------------------- |\n| msgtype        | String   | 是       | 此消息类型为固定actionCard                      |\n| title          | String   | 是       | 首屏会话透出的展示内容                          |\n| text           | String   | 是       | markdown格式的消息                              |\n| singleTitle    | String   | 是       | 单个按钮的标题。(设置此项和singleURL后btns无效) |\n| singleURL      | String   | 是       | 点击singleTitle按钮触发的URL                    |\n| btnOrientation | String   | 否       | 0-按钮竖直排列，1-按钮横向排列                  |\n\n通过整体跳转ActionCard类型消息发出的消息样式如下：\n\n![img](https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/4824199951/p131229.png)![img](https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/5824199951/p131230.png)\n\n## 独立跳转ActionCard类型\n\n```javascript\n{\n    \"actionCard\": {\n        \"title\": \"乔布斯 20 年前想打造一间苹果咖啡厅，而它正是 Apple Store 的前身\", \n        \"text\": \"![screenshot](https://gw.alicdn.com/tfs/TB1ut3xxbsrBKNjSZFpXXcXhFXa-846-786.png) \n ### 乔布斯 20 年前想打造的苹果咖啡厅 \n Apple Store 的设计正从原来满满的科技感走向生活化，而其生活化的走向其实可以追溯到 20 年前苹果一个建立咖啡馆的计划\", \n        \"btnOrientation\": \"0\", \n        \"btns\": [\n            {\n                \"title\": \"内容不错\", \n                \"actionURL\": \"https://www.dingtalk.com/\"\n            }, \n            {\n                \"title\": \"不感兴趣\", \n                \"actionURL\": \"https://www.dingtalk.com/\"\n            }\n        ]\n    }, \n    \"msgtype\": \"actionCard\"\n}\n```\n\n\n\n| **参数**       | **类型** | **必须** | **说明**                       |\n| -------------- | -------- | -------- | ------------------------------ |\n| msgtype        | String   | 是       | 此消息类型为固定actionCard     |\n| title          | String   | 是       | 首屏会话透出的展示内容         |\n| text           | String   | 是       | markdown格式的消息             |\n| btns           | Array    | 是       | 按钮                           |\n| └title         | String   | 是       | 按钮标题                       |\n| └actionURL     | String   | 是       | 点击按钮触发的URL              |\n| btnOrientation | String   | 否       | 0-按钮竖直排列，1-按钮横向排列 |\n\n通过独立跳转ActionCard类型消息发出的消息样式如下：\n\n![image.png](https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/5824199951/p131231.png)\n\n## FeedCard类型\n\n```javascript\n{\n    \"feedCard\": {\n        \"links\": [\n            {\n                \"title\": \"时代的火车向前开\", \n                \"messageURL\": \"https://www.dingtalk.com/s?__biz=MzA4NjMwMTA2Ng==&mid=2650316842&idx=1&sn=60da3ea2b29f1dcc43a7c8e4a7c97a16&scene=2&srcid=09189AnRJEdIiWVaKltFzNTw&from=timeline&isappinstalled=0&key=&ascene=2&uin=&devicetype=android-23&version=26031933&nettype=WIFI\", \n                \"picURL\": \"https://gw.alicdn.com/tfs/TB1ayl9mpYqK1RjSZLeXXbXppXa-170-62.png\"\n            },\n            {\n                \"title\": \"时代的火车向前开2\", \n                \"messageURL\": \"https://www.dingtalk.com/s?__biz=MzA4NjMwMTA2Ng==&mid=2650316842&idx=1&sn=60da3ea2b29f1dcc43a7c8e4a7c97a16&scene=2&srcid=09189AnRJEdIiWVaKltFzNTw&from=timeline&isappinstalled=0&key=&ascene=2&uin=&devicetype=android-23&version=26031933&nettype=WIFI\", \n                \"picURL\": \"https://gw.alicdn.com/tfs/TB1ayl9mpYqK1RjSZLeXXbXppXa-170-62.png\"\n            }\n        ]\n    }, \n    \"msgtype\": \"feedCard\"\n}\n```\n\n\n\n| **参数**   | **类型** | **必须** | **说明**                 |\n| ---------- | -------- | -------- | ------------------------ |\n| msgtype    | String   | 是       | 此消息类型为固定feedCard |\n| title      | String   | 是       | 单条信息文本             |\n| messageURL | String   | 是       | 点击单条信息到跳转链接   |\n| picURL     | String   | 是       | 单条信息后面图片的URL    |\n\n通过FeedCard类型消息发出的消息样式如下：\n\n![img](https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/5824199951/p131232.png)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "wangwang dingding",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wangwang",
    "package_url": "https://pypi.org/project/wangwang/",
    "platform": "",
    "project_url": "https://pypi.org/project/wangwang/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/wangwang/0.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "钉钉群消息推送",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8585684,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f894ed86256f53b82f3e615305f4063fe350fd1bcde7539b4177b3704e920e1",
          "md5": "da682959bb02a21f10ab9a8ed7b4dff4",
          "sha256": "39b4b444fe96362c9693ba48a17b978f329008e2414d065f2caed96a6352ddc1"
        },
        "downloads": -1,
        "filename": "wangwang-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da682959bb02a21f10ab9a8ed7b4dff4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10092,
        "upload_time": "2020-11-05T06:02:32",
        "upload_time_iso_8601": "2020-11-05T06:02:32.761850Z",
        "url": "https://files.pythonhosted.org/packages/0f/89/4ed86256f53b82f3e615305f4063fe350fd1bcde7539b4177b3704e920e1/wangwang-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "840240ddb7c8eb9bc8c4b982d07e2e89d39d6fbe83b3cfc817cdcd0efc74a2a2",
          "md5": "3ff77a25d778ca532ee682851a250a01",
          "sha256": "4069be052958238bf7a530b8db85fed23f0602bca132c6ec0cc51688b1fbaa31"
        },
        "downloads": -1,
        "filename": "wangwang-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3ff77a25d778ca532ee682851a250a01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14891,
        "upload_time": "2020-11-05T06:02:35",
        "upload_time_iso_8601": "2020-11-05T06:02:35.879935Z",
        "url": "https://files.pythonhosted.org/packages/84/02/40ddb7c8eb9bc8c4b982d07e2e89d39d6fbe83b3cfc817cdcd0efc74a2a2/wangwang-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b50bba9014c91b88c0475143cbb57aa71b37e2f1c5c4c64997a56dfbb736ca2",
          "md5": "60f34a2b6dc05ee856f6245fc0b51a31",
          "sha256": "761eb6c9ac140b52a768da879f70b535e27dfc60bbc3afae615090c94a5059ee"
        },
        "downloads": -1,
        "filename": "wangwang-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60f34a2b6dc05ee856f6245fc0b51a31",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10070,
        "upload_time": "2020-11-05T06:32:00",
        "upload_time_iso_8601": "2020-11-05T06:32:00.611722Z",
        "url": "https://files.pythonhosted.org/packages/6b/50/bba9014c91b88c0475143cbb57aa71b37e2f1c5c4c64997a56dfbb736ca2/wangwang-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61403dc948a693fafaee8aa846da45cbbcabc254bcd7b99035d24729d4641e98",
          "md5": "18ed03cabd6ed50e70a0b566d6f4fa49",
          "sha256": "ccacdf74dfb969285f363de759c6d510748869f187d0ac30143d3beb01becf5a"
        },
        "downloads": -1,
        "filename": "wangwang-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "18ed03cabd6ed50e70a0b566d6f4fa49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14841,
        "upload_time": "2020-11-05T06:32:03",
        "upload_time_iso_8601": "2020-11-05T06:32:03.798509Z",
        "url": "https://files.pythonhosted.org/packages/61/40/3dc948a693fafaee8aa846da45cbbcabc254bcd7b99035d24729d4641e98/wangwang-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "398d8317697b6dd982cd618947985fc1bbadbd474c1bbf0e27e25f2bf7bc7483",
          "md5": "ff3e496fc0fd927daeb2f9f93d8470f3",
          "sha256": "9d2afbdbdf3e7edc7e2e6eeca258c063121fad97d0225565c951f479bb7fc0ab"
        },
        "downloads": -1,
        "filename": "wangwang-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff3e496fc0fd927daeb2f9f93d8470f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10122,
        "upload_time": "2020-11-05T06:52:06",
        "upload_time_iso_8601": "2020-11-05T06:52:06.810440Z",
        "url": "https://files.pythonhosted.org/packages/39/8d/8317697b6dd982cd618947985fc1bbadbd474c1bbf0e27e25f2bf7bc7483/wangwang-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6329cae7ce8448131138b76cadfb62bed2968cfe01e3b37c9468b704831eea62",
          "md5": "fe79be6d0cf11b031e91f73e367e988c",
          "sha256": "76d54f4595edccaa06a61304e270a1c97aa3c0131eff475208e2b900b05e55de"
        },
        "downloads": -1,
        "filename": "wangwang-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fe79be6d0cf11b031e91f73e367e988c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14896,
        "upload_time": "2020-11-05T06:52:08",
        "upload_time_iso_8601": "2020-11-05T06:52:08.510484Z",
        "url": "https://files.pythonhosted.org/packages/63/29/cae7ce8448131138b76cadfb62bed2968cfe01e3b37c9468b704831eea62/wangwang-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "547666bc93f8dcf7e9d34d86f9d62f38fa31895fb1622417e03691176d34210f",
          "md5": "b80607a3304e98465a5a68f21b502445",
          "sha256": "b6a403954156798163f0d1b70caafc0001fc4b2a723cad9a5b3330eee412d1f6"
        },
        "downloads": -1,
        "filename": "wangwang-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b80607a3304e98465a5a68f21b502445",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10141,
        "upload_time": "2020-11-05T07:30:09",
        "upload_time_iso_8601": "2020-11-05T07:30:09.030783Z",
        "url": "https://files.pythonhosted.org/packages/54/76/66bc93f8dcf7e9d34d86f9d62f38fa31895fb1622417e03691176d34210f/wangwang-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbbbf2439010fce20355708b8a7ec1f0596975a44bfa49c5c6d47ecd7f1ddde1",
          "md5": "96d8c027ff2f24734529cc347da2b139",
          "sha256": "d5d5c35a8fa4aa8dd31a5576aead12e6943c4c1043a306beb720d8494ccbd63b"
        },
        "downloads": -1,
        "filename": "wangwang-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "96d8c027ff2f24734529cc347da2b139",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14903,
        "upload_time": "2020-11-05T07:30:10",
        "upload_time_iso_8601": "2020-11-05T07:30:10.621540Z",
        "url": "https://files.pythonhosted.org/packages/cb/bb/f2439010fce20355708b8a7ec1f0596975a44bfa49c5c6d47ecd7f1ddde1/wangwang-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "547666bc93f8dcf7e9d34d86f9d62f38fa31895fb1622417e03691176d34210f",
        "md5": "b80607a3304e98465a5a68f21b502445",
        "sha256": "b6a403954156798163f0d1b70caafc0001fc4b2a723cad9a5b3330eee412d1f6"
      },
      "downloads": -1,
      "filename": "wangwang-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b80607a3304e98465a5a68f21b502445",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10141,
      "upload_time": "2020-11-05T07:30:09",
      "upload_time_iso_8601": "2020-11-05T07:30:09.030783Z",
      "url": "https://files.pythonhosted.org/packages/54/76/66bc93f8dcf7e9d34d86f9d62f38fa31895fb1622417e03691176d34210f/wangwang-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cbbbf2439010fce20355708b8a7ec1f0596975a44bfa49c5c6d47ecd7f1ddde1",
        "md5": "96d8c027ff2f24734529cc347da2b139",
        "sha256": "d5d5c35a8fa4aa8dd31a5576aead12e6943c4c1043a306beb720d8494ccbd63b"
      },
      "downloads": -1,
      "filename": "wangwang-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "96d8c027ff2f24734529cc347da2b139",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14903,
      "upload_time": "2020-11-05T07:30:10",
      "upload_time_iso_8601": "2020-11-05T07:30:10.621540Z",
      "url": "https://files.pythonhosted.org/packages/cb/bb/f2439010fce20355708b8a7ec1f0596975a44bfa49c5c6d47ecd7f1ddde1/wangwang-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}