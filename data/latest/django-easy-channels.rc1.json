{
  "info": {
    "author": "Breno Gomes",
    "author_email": "brenodega28@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Easy Channels\n\nLightweight framework for quickly making socket consumers using Django and DjangoChannels.\n\n## Installing\n\n```bash\npip install django-easy-channels\n```\n\n## Socket Example\n\n### Backend\n\n```python\nfrom easy_channels import JSONConsumer\n\n\nclass ChatConsumer(JSONConsumer):\n    # Socket connects\n    def on_connect(self):\n        # gets name from url\n        self.name = self.scope['url_route']['kwargs']['name']\n\n        # Adds socket and consumer to group chatroom\n        self.group_add('chatroom')\n\n        # Accepts socket connection\n        self.accept()\n\n    # Called when consumer receives a message with the event broadcast_message\n    def on_broadcast_message(self, event):\n        payload = {\n            'message': event['message'],\n            'from': self.name\n        }\n\n        # Sends this message to all connected sockets in the 'chatroom' group (not consumers)\n        await self.group_send(\n            'chatroom', # group\n            'message', # event name\n            payload # data\n        )\n```\n\n### Frontend\n\n```js\nconst messages = [];\nconst socket = new WebSocket(\"wss://YOUR_URL/chat/joselito\");\n\n// Called when socket receives a message\nsocket.onmessage = function (message) {\n  switch (message.event) {\n    case \"message\":\n      messages.push({\n        message: message.message,\n        from: message.from,\n      });\n  }\n};\n\nsocket.send(\n  JSON.stringify({\n    event: \"broadcast_message\", // Calls \"on_broadcast()\" function in consumer\n    message: \"Hello World!\", // Can be acessed in bachend using event['message']\n  })\n);\n```\n\n## Adding to Route\n\nThis JSONConsumer can be added to Django Channels route in the same way of the original consumers.\n\n```python\nfrom django.urls import re_path\n\nfrom .consumers import ChatConsumer\n\nwebsocket_urlpatterns = [\n    re_path(r'^ws/chat/(?P<name>\\w+)/', consumers.ChatConsumer),\n]\n\n```\n\n## Communicating Between Consumers\n\nSometimes you want your consumers to talk with each other without sending data to the front end.\n\nFor example, we can make a consumer A notify a consumer B that it needs to update its frontend information without this confidental data passing through consumer A.\n\n```python\nclass ConsumerA(JSONConsumer):\n    def on_connect(self):\n        self.group_add('groupA')\n\n    def on_notify(self):\n        sensitive_data = get_some_data()\n        self.group_send(\n            'groupA',\n            'notify',\n            sensitive_data\n        )\n\nclass ConsumerB(JSONConsumer):\n    def on_connect(self):\n        self.group_add('groupB')\n\n    def on_some_event(self):\n        # Calls 'on_notify()' in all consumers added to groupA\n        self.group_call_event(\n            'groupA',\n            'notify'\n        )\n```\n\n## Middleware Example\n\nYou can create custom middlewares that will be run before the on_connect function or whenever a message is received.\n\nThe code below will automatically gather the chat user name from url.\n\n```python\nfrom easy_channels.middleware import ConsumerMiddleware\n\nclass UserGatherMiddleware(ConsumerMiddleware):\n\n    # Called before the consumer's 'on_connect()'\n    def on_connect(self):\n        # This middleware has complete access to the consumer in the self.consumer attribute\n        self.consumer.name = self.scope['url_route']['kwargs']['name']\n```\n\nTo the middleware to work with the consumer we must pass it.\n\n```python\nclass ChatConsumer(JSONConsumer):\n    middlewares = [UserGatherMiddleware]\n\n    def on_connect(self):\n        print(self.name) # Will print the user name\n    ...\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brenodega28/django_easy_channels",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-easy-channels",
    "package_url": "https://pypi.org/project/django-easy-channels/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-easy-channels/",
    "project_urls": {
      "Homepage": "https://github.com/brenodega28/django_easy_channels"
    },
    "release_url": "https://pypi.org/project/django-easy-channels/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Lightweight framework for quickly making socket consumers using Django and DjangoChannels.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8405385,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81c7eac40463a0a9f87f598bb0f1de81eb4496efbfd1edfa69dff07656088cf3",
          "md5": "058b2d5f0e051d6fcfaa975666a0246f",
          "sha256": "654134b4c4f91238fff76dcc0d0a3b3449533adc286312a0bd8bc713dc8568d0"
        },
        "downloads": -1,
        "filename": "django_easy_channels-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "058b2d5f0e051d6fcfaa975666a0246f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4171,
        "upload_time": "2020-10-13T22:03:02",
        "upload_time_iso_8601": "2020-10-13T22:03:02.477206Z",
        "url": "https://files.pythonhosted.org/packages/81/c7/eac40463a0a9f87f598bb0f1de81eb4496efbfd1edfa69dff07656088cf3/django_easy_channels-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46c48c920e5dc6ed85442e6acf11f96d53baf856489e8f160214e634f2445a41",
          "md5": "7940eac11e8a9210782703f9b7a47cec",
          "sha256": "d1a11e75ec0eda49cfac9def347b63236283238fcf3a5a690d0dcd10daf34def"
        },
        "downloads": -1,
        "filename": "django-easy-channels-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7940eac11e8a9210782703f9b7a47cec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3918,
        "upload_time": "2020-10-13T22:03:05",
        "upload_time_iso_8601": "2020-10-13T22:03:05.406783Z",
        "url": "https://files.pythonhosted.org/packages/46/c4/8c920e5dc6ed85442e6acf11f96d53baf856489e8f160214e634f2445a41/django-easy-channels-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "81c7eac40463a0a9f87f598bb0f1de81eb4496efbfd1edfa69dff07656088cf3",
        "md5": "058b2d5f0e051d6fcfaa975666a0246f",
        "sha256": "654134b4c4f91238fff76dcc0d0a3b3449533adc286312a0bd8bc713dc8568d0"
      },
      "downloads": -1,
      "filename": "django_easy_channels-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "058b2d5f0e051d6fcfaa975666a0246f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4171,
      "upload_time": "2020-10-13T22:03:02",
      "upload_time_iso_8601": "2020-10-13T22:03:02.477206Z",
      "url": "https://files.pythonhosted.org/packages/81/c7/eac40463a0a9f87f598bb0f1de81eb4496efbfd1edfa69dff07656088cf3/django_easy_channels-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "46c48c920e5dc6ed85442e6acf11f96d53baf856489e8f160214e634f2445a41",
        "md5": "7940eac11e8a9210782703f9b7a47cec",
        "sha256": "d1a11e75ec0eda49cfac9def347b63236283238fcf3a5a690d0dcd10daf34def"
      },
      "downloads": -1,
      "filename": "django-easy-channels-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7940eac11e8a9210782703f9b7a47cec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3918,
      "upload_time": "2020-10-13T22:03:05",
      "upload_time_iso_8601": "2020-10-13T22:03:05.406783Z",
      "url": "https://files.pythonhosted.org/packages/46/c4/8c920e5dc6ed85442e6acf11f96d53baf856489e8f160214e634f2445a41/django-easy-channels-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}