{
  "info": {
    "author": "Robin Lin",
    "author_email": "wuhulinyi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Topic :: Education"
    ],
    "description": "\nMulti Translate Tool in Python\n==============================\n\n|PyPI latest| |PyPI Version| |PyPI License| |Docs|\n\nTranslate is a simple but powerful translation tool written in python\nwith support for multiple translation providers. By now we offer\nintegration with Baidu, Bing, Deepl, Google, MyMemory, Tencent, Youdao\ntranslation APIs.\n\nIt is forked from `translate <https://pypi.org/project/translate/>`__,\nand it is compatible with this pack.\n\nWhy Should I Use This?\n----------------------\n\nThe biggest reason to use translate is to make translations in wox and\nalfred quickly, and I would like to see the translation results of\nvarious platforms and choose the best one. I want to share with you, and\nit supports concurrent request for multiple platform translation\nresults.\n\nInstallation\n------------\n\n.. code:: bash\n\n   $ pip install multi-translate\n\nOr, you can download the source and\n\n.. code:: bash\n\n   $ python setup.py install\n\nPrefix 'sudo' if you encounter a problem.\n\nFeatures\n--------\n\n-  Translate text in real time and support concurrent request for\n   multiple platform translation results\n-  Do translation in your terminal using the command line\n-  Default Youdao Translator, and it has built-in Youdao Translator\n   APP_KEY, so you can use Youdao Translator directly.\n\nUsage\n-----\n\nUse As A Python Module\n~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n   In [1]: from translate import Translator\n   In [2]: translator = Translator(to_lang=\"zh\")\n   In [3]: translation = translator.translate(\"This is a pen.\")\n   Out [3]: 这是一支笔\n\nThe result is usually a unicode string.\n\nUse a different translation provider\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n   In [1]: from translate import Translator\n   In [2]: to_lang = 'zh'\n   In [3]: secret = '<your secret from Microsoft or DeepL>'\n   In [4]: translator = Translator(provider='<the name of the provider, eg. bing or deepl>', to_lang=to_lang, secret_key=secret)\n   In [5]: translator.translate('the book is on the table')\n   Out [5]: '碗是在桌子上。'\n\nUse multi translation provider\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n   from translate import Translator\n   baidu = {\n       'appid': 'xxx',\n       'secret_key': 'xxx'\n   }\n   tencent = {\n       'secret_id': 'xxx',\n       'secret_key': 'xxx'\n   }\n   bing = {\n       'location': 'eastus',\n       'secret_key': 'xxx'\n   }\n   youdao = {\n       'app_key': 'xxx',\n       'app_secret': 'xxx'\n   }\n   translator = Translator(to_lang='zh', provider='baidu,tencent,youdao,bing',\n                           baidu=baidu, tencent=tencent, bing=bing, youdao=youdao)\n   translation = translator.translate('hello world', return_str=False)\n   print(translation)\n\n   # output: {'youdao': '你好世界', 'tencent': '你好世界', 'bing': '世界您好', 'baidu': '你好，世界'}\n\nThe DeepL Provider\n^^^^^^^^^^^^^^^^^^\n\nTo use DeepL's pro API, pass an additional parameter named pro to the\nTranslator object and set it to True and use your pro authentication key\nas the secret_key\n\n.. code:: python\n\n   In: translator = Translator(provider='microsoft', to_lang=to_lang, secret_key=secret, pro=True)\n\nUse As A Command Line\n~~~~~~~~~~~~~~~~~~~~~\n\nIn your command-line:\n\n.. code:: bash\n\n   $ translate-cli -t zh \"This is a pen.\"\n\n   Translation: 这是一支钢笔。\n   -------------------------\n   Translated by: youdao\n\nOr\n\n.. code:: bash\n\n   $ translate-cli -t zh \"This is a pen.\" -o\n   这是一支钢笔。\n\nOptions\n^^^^^^^\n\n.. code:: bash\n\n   $ translate-cli --help\n   Usage: __main__.py [OPTIONS] TEXT...\n\n     Python command line tool to make online translations\n\n     Example:\n\n          $ translate-cli -t zh the book is on the table\n          碗是在桌子上。\n\n     Available languages:\n\n          https://en.wikipedia.org/wiki/ISO_639-1\n          Examples: (e.g. en, ja, ko, pt, zh, zh-TW, ...)\n\n   Options:\n     --version                 Show the version and exit.\n     --generate-config-file    Generate the config file using a Wizard and exit.\n     -f, --from TEXT           Sets the language of the text being translated.\n                               The default value is 'auto'.\n     -t, --to TEXT             Set the language you want to translate.\n     -p, --provider TEXT       Set the provider you want to use. The default value is 'youdao'.\n     --appid TEXT              appid, needed by baidu translator\n     --secret_id TEXT          Set the secret id used to get provider oAuth token.\n     --secret_key TEXT         Set the secret access key used to get provider oAuth token.\n     -o, --output_only         Set to display the translation only.\n     --help                    Show this message and exit.\n\nChange Default Languages\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn ~/.python-translate.cfg:\n\n.. code:: bash\n\n   [DEFAULT]\n   from_lang = autodetect\n   to_lang = de\n   provider = youdao\n   secret_key =\n\nThe cfg is not for use as a Python module. or run the command line and\nfollow the steps:\n\n.. code:: bash\n\n   $ translate-cli --generate-config-file\n   Translate from [autodetect]:\n   Translate to: <language you want to translate>\n   Provider [youdao]:\n   Secret Access Key []:\n\nDocumentation\n-------------\n\nCheck out the latest ``translate`` documentation at `Read the\nDocs <http://translate-python.readthedocs.io/en/latest/>`__\n\n   It's document of `translate <https://pypi.org/project/translate/>`__,\n   but it's still available, although no new features.\n\nContributing\n------------\n\nPlease send pull requests, very much appreciated.\n\n1. Fork the\n   `repository <https://github.com/Lyndon1994/multi-translate>`__ on\n   GitHub.\n2. Make a branch off of main and commit your changes to it.\n3. (Optional) if you want an isolated environment, you can install nixOS\n   (`https://nixos.org <https://nixos.org>`__) and run\n   ``nix-shell --pure`` under the project folder\n4. Install requirements. ``pip install -r requirements-dev.txt``\n5. Install pre-commit. ``pre-commit install``\n6. Run the tests with ``py.test -vv -s``\n7. Create a Pull Request with your contribution.\n\n.. |PyPI latest| image:: https://img.shields.io/pypi/v/translate.svg?maxAge=360\n   :target: https://pypi.python.org/pypi/multi-translate\n.. |PyPI Version| image:: https://img.shields.io/pypi/pyversions/translate.svg?maxAge=2592000\n   :target: https://pypi.python.org/pypi/multi-translate\n.. |PyPI License| image:: https://img.shields.io/pypi/l/translate.svg?maxAge=2592000\n   :target: https://github.com/Lyndon1994/multi-translate/blob/main/LICENSE\n.. |Docs| image:: https://readthedocs.org/projects/translate-python/badge/?version=latest\n   :target: http://translate-python.readthedocs.org/en/latest/?badge=latest\n\n\nChangelog\n---------\n\n1.0.0\n------------------\n\n* initial release using changes file\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Lyndon1994/multi-translate",
    "keywords": "translate translation command line multi youdao tencent baidu",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "multi-translate",
    "package_url": "https://pypi.org/project/multi-translate/",
    "platform": null,
    "project_url": "https://pypi.org/project/multi-translate/",
    "project_urls": {
      "Homepage": "https://github.com/Lyndon1994/multi-translate"
    },
    "release_url": "https://pypi.org/project/multi-translate/1.0.0/",
    "requires_dist": [
      "click",
      "lxml",
      "requests",
      "requests-async"
    ],
    "requires_python": "",
    "summary": "Concurrently request multiple translation platforms. Support Baidu, Bing, Deepl, Google, MyMemory, Tencent, Youdao.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14022436,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cb4262ecdff2588cb254b448bd8abf4e45ac8495dffde68c1036acffa52c2fa",
          "md5": "8d17e112a9ec5c5c5fd26eabd0874fea",
          "sha256": "a48dfc8f53a7427bb27193e1956519cabca74a4070f697b03ec87c3f3fecaa6d"
        },
        "downloads": -1,
        "filename": "multi_translate-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d17e112a9ec5c5c5fd26eabd0874fea",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 16753,
        "upload_time": "2022-06-03T09:29:06",
        "upload_time_iso_8601": "2022-06-03T09:29:06.114447Z",
        "url": "https://files.pythonhosted.org/packages/8c/b4/262ecdff2588cb254b448bd8abf4e45ac8495dffde68c1036acffa52c2fa/multi_translate-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af4e5067f03174250c78ce9862026e1accb1f74d4b351825e54086906d21f81f",
          "md5": "24a0da9190e2fcc2a044e7544a256553",
          "sha256": "8cb05a67f39c4642b20daa98677da4d5080e7ec67c051c50ee681de002217675"
        },
        "downloads": -1,
        "filename": "multi-translate-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "24a0da9190e2fcc2a044e7544a256553",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20678,
        "upload_time": "2022-06-03T09:29:07",
        "upload_time_iso_8601": "2022-06-03T09:29:07.991754Z",
        "url": "https://files.pythonhosted.org/packages/af/4e/5067f03174250c78ce9862026e1accb1f74d4b351825e54086906d21f81f/multi-translate-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8cb4262ecdff2588cb254b448bd8abf4e45ac8495dffde68c1036acffa52c2fa",
        "md5": "8d17e112a9ec5c5c5fd26eabd0874fea",
        "sha256": "a48dfc8f53a7427bb27193e1956519cabca74a4070f697b03ec87c3f3fecaa6d"
      },
      "downloads": -1,
      "filename": "multi_translate-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8d17e112a9ec5c5c5fd26eabd0874fea",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 16753,
      "upload_time": "2022-06-03T09:29:06",
      "upload_time_iso_8601": "2022-06-03T09:29:06.114447Z",
      "url": "https://files.pythonhosted.org/packages/8c/b4/262ecdff2588cb254b448bd8abf4e45ac8495dffde68c1036acffa52c2fa/multi_translate-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af4e5067f03174250c78ce9862026e1accb1f74d4b351825e54086906d21f81f",
        "md5": "24a0da9190e2fcc2a044e7544a256553",
        "sha256": "8cb05a67f39c4642b20daa98677da4d5080e7ec67c051c50ee681de002217675"
      },
      "downloads": -1,
      "filename": "multi-translate-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "24a0da9190e2fcc2a044e7544a256553",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20678,
      "upload_time": "2022-06-03T09:29:07",
      "upload_time_iso_8601": "2022-06-03T09:29:07.991754Z",
      "url": "https://files.pythonhosted.org/packages/af/4e/5067f03174250c78ce9862026e1accb1f74d4b351825e54086906d21f81f/multi-translate-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}