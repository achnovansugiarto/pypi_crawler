{
  "info": {
    "author": "tassaron",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Games/Entertainment",
      "Topic :: Software Development :: Interpreters",
      "Topic :: System :: Shells",
      "Topic :: Terminals"
    ],
    "description": "# Batchfile.py\nA Python library to execute simple batch files (.bat) that would normally only work on Windows. After installing, you can get a REPL (live commandline) to test by running `python3 -m batchfile`\n\nWhen I was in high school I used to write text adventure games using Windows batch files. In October 2020 I wrote a Python script to interpret the batch files. This is a fun experiment to see if I can get unaltered original batch file games to play on Ubuntu using Python without introducing too much complexity.\n\nSee my [bat2web](https://github.com/tassaron2/bat2web) repo for an example of how you can use this library to turn a batch file into a website. Something you've always wanted to do, surely :)\n\n# How to play\n* Install library by running `pip install .` in the same folder as the `setup.py` file.\n* Go in the `/games` directory for python scripts that will launch games.\n* So far the only supported game is one I wrote when I was 16, which you can play by running `funtimes.py` using Python 3.6+ on Linux, Windows, or MacOS.\n* On Windows you can also play the original game without Python using `FUNTIMES.bat` inside the funtimes directory\n* The original game actually works using `wineconsole` in Ubuntu as well, except for rare math problems\n* Funtimes can also be played [in a web browser](http://bat.tassaron.com)\n\n# Running other batch files\nI definitely don't intend to support every batch file, but it would be nice if similar batch-file-games worked without introducing too much complexity. Another game I wrote in 2010 called \"Recruitment\" is included as an example, but it doesn't yet work. Ultimately it would be really cool if this library supported [Time Streamer](https://everything2.com/title/Time+Streamer).\n\nThe main obstacle to most games working is the lack of support for parentheses and quotation marks. Some hacky solutions are included to deal with the simple cases in Funtimes, but eventually I have to write a tokenizer/lexer to correctly deal with these complex structures. This should greatly increase compatibility once I do that!\n\nAnother obstacle is that a lot of batch files use weird .EXE or .COM files that do various tasks, but when I discover these cases I'll try to include them as standard functions. My primary goal is supporting batch file games, so I'm not worried about if something is a \"pure\" batch file.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tassaron2/batchfile.py",
    "keywords": "batchfile batch",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "batchfile.py",
    "package_url": "https://pypi.org/project/batchfile.py/",
    "platform": "",
    "project_url": "https://pypi.org/project/batchfile.py/",
    "project_urls": {
      "Homepage": "https://github.com/tassaron2/batchfile.py"
    },
    "release_url": "https://pypi.org/project/batchfile.py/0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Run Windows batch files (.bat) using Python",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8529145,
  "releases": {
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbd5b6195af39f691875026cdd65233daf88ffffd05120a626706eb2de4b162b",
          "md5": "13143b815cc66fa6b16e70551f994094",
          "sha256": "257516fdfb79875b2b3d970d10da48e7c9e15d11b2facd331694e4817bf29a14"
        },
        "downloads": -1,
        "filename": "batchfile.py-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13143b815cc66fa6b16e70551f994094",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10823,
        "upload_time": "2020-10-29T03:51:08",
        "upload_time_iso_8601": "2020-10-29T03:51:08.981082Z",
        "url": "https://files.pythonhosted.org/packages/db/d5/b6195af39f691875026cdd65233daf88ffffd05120a626706eb2de4b162b/batchfile.py-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbf213334e4477dad19d14a6a311fe2dd4ab59e5d2e5411d93c74f005f7b5a04",
          "md5": "1c8e3bfa757ff42962c2fac52260a2d4",
          "sha256": "df4042902840057ecc9c3c98cd0fb75b5399e460c05bc08dffcaee684d4ed19a"
        },
        "downloads": -1,
        "filename": "batchfile.py-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1c8e3bfa757ff42962c2fac52260a2d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10155,
        "upload_time": "2020-10-29T03:51:11",
        "upload_time_iso_8601": "2020-10-29T03:51:11.232403Z",
        "url": "https://files.pythonhosted.org/packages/db/f2/13334e4477dad19d14a6a311fe2dd4ab59e5d2e5411d93c74f005f7b5a04/batchfile.py-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dbd5b6195af39f691875026cdd65233daf88ffffd05120a626706eb2de4b162b",
        "md5": "13143b815cc66fa6b16e70551f994094",
        "sha256": "257516fdfb79875b2b3d970d10da48e7c9e15d11b2facd331694e4817bf29a14"
      },
      "downloads": -1,
      "filename": "batchfile.py-0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "13143b815cc66fa6b16e70551f994094",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10823,
      "upload_time": "2020-10-29T03:51:08",
      "upload_time_iso_8601": "2020-10-29T03:51:08.981082Z",
      "url": "https://files.pythonhosted.org/packages/db/d5/b6195af39f691875026cdd65233daf88ffffd05120a626706eb2de4b162b/batchfile.py-0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dbf213334e4477dad19d14a6a311fe2dd4ab59e5d2e5411d93c74f005f7b5a04",
        "md5": "1c8e3bfa757ff42962c2fac52260a2d4",
        "sha256": "df4042902840057ecc9c3c98cd0fb75b5399e460c05bc08dffcaee684d4ed19a"
      },
      "downloads": -1,
      "filename": "batchfile.py-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "1c8e3bfa757ff42962c2fac52260a2d4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10155,
      "upload_time": "2020-10-29T03:51:11",
      "upload_time_iso_8601": "2020-10-29T03:51:11.232403Z",
      "url": "https://files.pythonhosted.org/packages/db/f2/13334e4477dad19d14a6a311fe2dd4ab59e5d2e5411d93c74f005f7b5a04/batchfile.py-0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}