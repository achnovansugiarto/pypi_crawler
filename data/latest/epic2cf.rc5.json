{
  "info": {
    "author": "Kyle Wilcox",
    "author_email": "kyle@axiomdatascience.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# epic2cf\n\n#### A simple python library to find the CF standard name equivalent of an EPIC code.\n\n[EPIC codes](http://www.epic.noaa.gov/epic/document/epickey.htm)\n[CF standard names](http://cfconventions.org/Data/cf-standard-names/28/build/cf-standard-name-table.html)\n\n\n## Installation\n\n##### Stable\n\n    pip install epic2cf\n\n##### Development\n\n    pip install git+https://github.com/axiom-data-science/epic2cf.git\n\n\n## Usage\n\n\n##### Return contents\n\nA `dict` like object is returned from a call to `get` and contains the following:\n```python\n{\n    'cell_methods': None,   # If there are any cell_methods associated with this variable\n    'cf_units': None,       # The units of the CF standard name\n    'convert': None,        # A function to convert values from EPIC to CF\n    'long_name': None,      # A description of the variable\n    'standard_name': None,  # The CF standard_name\n    'units': None           # The EPIC units\n}\n```\n\n##### Get a CF mapping from an EPIC code\n\n```python\nfrom epic2cf import mapping\n\nmapping.get(18)\n{\n    'cell_methods': None,\n    'cf_units': 'm',\n    'convert': <function epic2cf.data.<lambda>>,\n    'long_name': 'Sea Surface Height',\n    'standard_name': 'sea_surface_height',\n    'units': 'm'\n}\n\nmapping.get(26)\n{\n    'cell_methods': 'time: minimum',\n    'cf_units': 'K',\n    'convert': <function epic2cf.data.<lambda>>,\n    'long_name': 'Water Temperature',\n    'standard_name': 'sea_water_temperature',\n    'units': 'degree_Celsius'\n}\n```\n\n##### Convert existing EPIC values into CF values\n\n###### Pass in a numpy array to the convert function\n\n```python\nimport numpy as np\nfrom epic2cf import mapping\n\nepic = mapping.get(9)\nprint epic\n{\n    'cell_methods': None,\n    'cf_units': 'dbar',\n    'convert': <function epic2cf.data.<lambda>>,\n    'long_name': 'Sea Water Pressure',\n    'standard_name': 'sea_water_pressure',\n    'units': 'mbar'\n}\n\nvalues = np.random.random(6)\nprint values  # EPIC values in 'mbar'\narray([ 0.57136167,  0.98046873,  0.64963954,  0.39981203,  0.72433581, 0.16820297])\n\ncf_values = epic.convert(values)\nprint cf_values  # CF values in 'dbar'\narray([ 0.00571362,  0.00980469,  0.0064964 ,  0.00399812,  0.00724336, 0.00168203])\n```\n\n## Contributing\n\nNot all EPIC codes have been mapped to CF standard names.  If you require\na mappnig that has not been done you can do one of the following:\n\n1.  Create an issue with the EPIC code number you would like mapped and as much\ninformation about the variable as possible (how it is used, the units, etc).\nIt may take some time for these to be included in `epic2cf`, especially if we\ncan not verify a correct mapping to CF.\n\n2. Fork the repository and add the mapping yourself into `epic2cf/data.py`.\nI will accept pull requests for updated mapping very quickly.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/axiom-data-science/epic2cf",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "epic2cf",
    "package_url": "https://pypi.org/project/epic2cf/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/epic2cf/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/axiom-data-science/epic2cf"
    },
    "release_url": "https://pypi.org/project/epic2cf/0.0.4/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A simple python library to find the CF standard name equivalent of an EPIC code.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1643812,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ab13b8861b26fcc9eacf88c607c0de91a57ef91c838172fec63c4aaf0e8a99b",
          "md5": "0b77a721a7dd46d51c70920be77cca29",
          "sha256": "390b66dfe46f2f08a43d51bffc74970eeeadd3135251b3679410533bf2e45cae"
        },
        "downloads": -1,
        "filename": "epic2cf-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0b77a721a7dd46d51c70920be77cca29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24775,
        "upload_time": "2015-01-12T20:32:22",
        "upload_time_iso_8601": "2015-01-12T20:32:22.476997Z",
        "url": "https://files.pythonhosted.org/packages/0a/b1/3b8861b26fcc9eacf88c607c0de91a57ef91c838172fec63c4aaf0e8a99b/epic2cf-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1-dev": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b11ee8ba1a2ac5263d0e453e613e3dc3ce4b9a4aa62dd457d067978bed2c6951",
          "md5": "fd655fcae41ef010b5396cd64ec68d55",
          "sha256": "e1135d7d7b4d7deae37979c1558170810b68f417a005d734cdc9eec2833b40ee"
        },
        "downloads": -1,
        "filename": "epic2cf-0.0.1-dev.tar.gz",
        "has_sig": false,
        "md5_digest": "fd655fcae41ef010b5396cd64ec68d55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24781,
        "upload_time": "2015-01-12T20:29:33",
        "upload_time_iso_8601": "2015-01-12T20:29:33.937332Z",
        "url": "https://files.pythonhosted.org/packages/b1/1e/e8ba1a2ac5263d0e453e613e3dc3ce4b9a4aa62dd457d067978bed2c6951/epic2cf-0.0.1-dev.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4353a947b87c32951275de07f7b84733f186cdf37e10c0d48630087131abd0e6",
          "md5": "c486e03460f2db2ff67d79c9d0b39d95",
          "sha256": "01ce45577875ef09a1562edf0dcb43b36657ec211e0f7a7b4bf134624c266b1e"
        },
        "downloads": -1,
        "filename": "epic2cf-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c486e03460f2db2ff67d79c9d0b39d95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24804,
        "upload_time": "2015-04-13T18:14:30",
        "upload_time_iso_8601": "2015-04-13T18:14:30.499040Z",
        "url": "https://files.pythonhosted.org/packages/43/53/a947b87c32951275de07f7b84733f186cdf37e10c0d48630087131abd0e6/epic2cf-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c607c067928c02df4ec9bff1d846c24e00a6f462759393bd2cc0244ba5926c1c",
          "md5": "bab6230373f4a423a23e94ffb91f4f24",
          "sha256": "b56c7f7c00e6db2d16c3a531b86e11d4a25aa5fd1b50236c7c56f0698650a308"
        },
        "downloads": -1,
        "filename": "epic2cf-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bab6230373f4a423a23e94ffb91f4f24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24803,
        "upload_time": "2015-05-13T21:44:27",
        "upload_time_iso_8601": "2015-05-13T21:44:27.376059Z",
        "url": "https://files.pythonhosted.org/packages/c6/07/c067928c02df4ec9bff1d846c24e00a6f462759393bd2cc0244ba5926c1c/epic2cf-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d04cf2ca1eefc41ec2a24f3c9e6fa64c0ecf52cd233c630dafcb82d90c4a5b30",
          "md5": "f57f118b217f4aece9b6fdbe78784b45",
          "sha256": "8c1c023f05eb67e9fef5cb4edc1e4974ece19897aed3a58911e5c07f1db8b7b5"
        },
        "downloads": -1,
        "filename": "epic2cf-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f57f118b217f4aece9b6fdbe78784b45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24791,
        "upload_time": "2015-07-21T20:16:48",
        "upload_time_iso_8601": "2015-07-21T20:16:48.433348Z",
        "url": "https://files.pythonhosted.org/packages/d0/4c/f2ca1eefc41ec2a24f3c9e6fa64c0ecf52cd233c630dafcb82d90c4a5b30/epic2cf-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d04cf2ca1eefc41ec2a24f3c9e6fa64c0ecf52cd233c630dafcb82d90c4a5b30",
        "md5": "f57f118b217f4aece9b6fdbe78784b45",
        "sha256": "8c1c023f05eb67e9fef5cb4edc1e4974ece19897aed3a58911e5c07f1db8b7b5"
      },
      "downloads": -1,
      "filename": "epic2cf-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "f57f118b217f4aece9b6fdbe78784b45",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24791,
      "upload_time": "2015-07-21T20:16:48",
      "upload_time_iso_8601": "2015-07-21T20:16:48.433348Z",
      "url": "https://files.pythonhosted.org/packages/d0/4c/f2ca1eefc41ec2a24f3c9e6fa64c0ecf52cd233c630dafcb82d90c4a5b30/epic2cf-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}