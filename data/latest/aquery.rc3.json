{
  "info": {
    "author": "Peng Shiyu",
    "author_email": "pengshiyuyx@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.7"
    ],
    "description": "\nAQuery 一个注解方式操作数据库的便捷库 \n\n安装\n```bash\npip install AQuery\n```\n\n1、IQuery负责数据查询操作\n\n    不同的操作仅代表不同类型的返回值，参数都是一样 也更加语义化\n\n         操作          | 装饰器方式   | data参数    |       返回值\n    ===========================================================\n    query_insert      | insert      | dict       | lastrowid {int}\n    query_insert_many | insert_many | list[dict] | rowcount {int}\n    query_select      | select      | dict       | fetchall {list[dict]}\n    query_select_one  | select_one  | dict       | fetchone {dict}\n    query_update      | update      | dict       | rowcount {int}\n    query_delete      | delete      | dict       | rowcount {int}\n\n    2、关键字使用\n    #{key}  变量参数 预编译为 %(key)s\n    ${key}  原样替换 ${key} -> value, 如果携带的data中不存在，会尝试从 class_object 参数中获取\n    @{key}  自动参数 已实现特殊参数：fields，values, data\n    ({key}) 列表参数  ({key}) -> (1, 2, 3)\n\n    参考 https://www.bbsmax.com/A/n2d9P9gY5D/\n\n    4、kwargs 参数\n        class_object  传递一个类对象，用于从类中获取原样数据\n        ignore_errors 执行SQL 时忽略的异常\n\n    5、函数方式查询\n    当使用query_* 查询是，第一个参数sql，第二个参数data是dict类型\n\n    6、装饰器方式查询\n    当使用装饰器方式时，sql通过装饰器传递，而data通过被装饰的函数返回值传递，\n    如果函数没有返回值，则取被装饰函数的第一个参数，或取全部关键字参数\n\n    应用场景：\n        1、如果函数传入一个dict 或list，不需要携带额外参数，可以简写\n\n        @query.select(\"insert into student(name, age) values (#{name}, #{age})\")\n        def insert(data):\n            pass\n\n        insert({'name': \"Tom\", 'age': 23})\n\n        2、如果需要有原样替换的字符串，需要data 返回\n        @query.select(\"insert into student ${field} values ${value}\")\n        def insert(data):\n            data.update({\n                'field': '(name, age)',\n                'value': '(#{name}, #{age})'\n            })\n            return data\n\n        insert({'name': \"Tom\", 'age': 23})\n\n ## Demo\n ```python\n # -*- coding: utf-8 -*-\nimport mysql\n\nfrom aquery.query import Query\n\n\nclass MysqlQuery(Query):\n    DATABASE_CONFIG = {\n        \"database\": \"data\",\n        \"user\": \"root\",\n        \"password\": \"aBc@123456\",\n        \"host\": \"127.0.0.1\",\n        \"port\": 3306,\n        \"autocommit\": True,\n        \"pool_name\": \"mypool\",  # 使用连接池\n        \"pool_size\": 1,\n    }\n\n    # 忽略的异常\n    IGNORE_ERRORS = (\n        mysql.connector.errors.IntegrityError,\n    )\n\n    # mysql-connector-python 连接操作mysql\n    # http://www.zhangdongshengtech.com/article-detials/269\n\n\n# 装饰器方式使用\n\n# 函数参数默认为data, 数据类型是一个dict，或者是None\n# 当使用insert_many时 也可以是一个list\n@MysqlQuery.select(\"select * from student where name=#{name}\")\ndef get_student_by_name(name):\n    pass\n\n\n# print(get_student_by_name(name=\"Tom\"))\n\n\n# 可以自定义函数参数，不过需要返回一个dict 类型的数据，传递给sql 执行器\n@MysqlQuery.select(\"select * from student where id=#{uid}\")\ndef get_student_by_id(uid):\n    pass\n\n\n# print(get_student_by_id(uid=12))\n\n# 可以自定义函数参数，不过需要返回一个dict 类型的数据，传递给sql 执行器\n@MysqlQuery.select(\"select * from student where id in ({uids})\")\ndef get_student_by_ids(uids):\n    pass\n\n\n# print(get_student_by_ids(uids=[13, 23, 33]))\n\n@MysqlQuery.insert(\"insert into student @{fields} values @{values}\")\ndef insert_student(data):\n    pass\n\n\n# data = {\"name\": \"Tom\", 'age': 23}\n# print(insert_student(data))\n\n@MysqlQuery.update(\"update student set @{data} where id = #{uid}\")\ndef update_student(uid, name):\n    pass\n\n\n# print(update_student(uid=12, name=12))\n\n\n@MysqlQuery.delete(\"delete from student where id = #{uid}\")\ndef delete_student(uid):\n    pass\n\n\n# print(delete_student(uid=12))\n\nif __name__ == '__main__':\n    sql = \"select * from student limit 10\"\n    # print(MysqlQuery.query(sql))\n\n    sql2 = \"INSERT INTO student @{fields} VALUES @{values}\"\n    MysqlQuery.query_insert_many(sql2, [{\"name\": \"Tom\", \"age\": 12}, {\"name\": \"Tom\", \"age\": 12}])\n\n``` \n\n ```python\n# -*- coding: utf-8 -*-\n\nfrom demo.query_demo import MysqlQuery\nfrom aquery.query_model import IQueryModel\n\n\nclass BaseQueryModel(IQueryModel):\n    query = MysqlQuery\n\n\nclass StudentModel(BaseQueryModel):\n    table = \"student\"\n\n    select_fields = \"name, age\"\n\n    @classmethod\n    @MysqlQuery.select('select ${select_fields} from ${table} where name = #{name}')\n    def select_by_name(cls, name):\n        pass\n\n\nif __name__ == '__main__':\n    pass\n\n    # print(StudentModel.insert_many([{\"name\": \"Tom\", \"age\": 12}]))\n\n    # print(StudentModel.insert({\"name\": \"Tom\", \"age\": 12}))\n\n    # print(StudentModel.select_by_id(27))\n\n    # print(StudentModel.delete_by_id(27))\n\n    # print(StudentModel.select_by_ids([27, 25]))\n\n    # print(StudentModel.update_by_id(27, {'id': 26, \"name\": \"--T'om\", \"age\": 13}))\n\n    print(StudentModel.select_by_name(name='Jack'))\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mouday/AQuery",
    "keywords": "aquery mysql",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "AQuery",
    "package_url": "https://pypi.org/project/AQuery/",
    "platform": "",
    "project_url": "https://pypi.org/project/AQuery/",
    "project_urls": {
      "Homepage": "https://github.com/mouday/AQuery"
    },
    "release_url": "https://pypi.org/project/AQuery/0.0.3/",
    "requires_dist": [
      "mysql-connector-python (==8.0.17)"
    ],
    "requires_python": "",
    "summary": "一个MySQL注解操作方式",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6265432,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66c326c74d52a05c9d4f1b274c1eac7fe80045928726bfa389c8bfeccc1cd8b7",
          "md5": "3ff3bf891dad138baa75c3845913d527",
          "sha256": "b775f2a325592b18bbdeff87c5f2ccb2f67ca0b99d25422afe2989cc467e5265"
        },
        "downloads": -1,
        "filename": "AQuery-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ff3bf891dad138baa75c3845913d527",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7202,
        "upload_time": "2019-12-07T12:04:09",
        "upload_time_iso_8601": "2019-12-07T12:04:09.192348Z",
        "url": "https://files.pythonhosted.org/packages/66/c3/26c74d52a05c9d4f1b274c1eac7fe80045928726bfa389c8bfeccc1cd8b7/AQuery-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31d2f91029211fb165498fd5b3328ad4db76ca0c18c55b460aa6f61b85a6ebbd",
          "md5": "8f5591598b46cd169c5c52d41699418b",
          "sha256": "375dedaa78e7145d8acf4015f9f682418825a4cd81df0296c9ab035a8aa56f0d"
        },
        "downloads": -1,
        "filename": "AQuery-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8f5591598b46cd169c5c52d41699418b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5379,
        "upload_time": "2019-12-07T12:04:12",
        "upload_time_iso_8601": "2019-12-07T12:04:12.147498Z",
        "url": "https://files.pythonhosted.org/packages/31/d2/f91029211fb165498fd5b3328ad4db76ca0c18c55b460aa6f61b85a6ebbd/AQuery-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82dfa14f28376c2dd1b3dddf3a27494111040be672c2dddecc1a8acd871bb287",
          "md5": "0726254d419bc0efe50ef6292ae70abc",
          "sha256": "428c5c8ccba4d31a5e213ce5a115636829b66f227d08601bf35447795ecf8617"
        },
        "downloads": -1,
        "filename": "AQuery-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0726254d419bc0efe50ef6292ae70abc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11887,
        "upload_time": "2019-12-09T08:32:55",
        "upload_time_iso_8601": "2019-12-09T08:32:55.511770Z",
        "url": "https://files.pythonhosted.org/packages/82/df/a14f28376c2dd1b3dddf3a27494111040be672c2dddecc1a8acd871bb287/AQuery-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa89b12b5e2ee7bb979e220a1216d7dbca6e425f4786d49a12f0dd37de3a129e",
          "md5": "96224e6b365fd8c4a08f4eb480b907a9",
          "sha256": "9fac697ff7173a805fc4e21fc982c4681edeee9bd5b212468ab6a9d551ea4942"
        },
        "downloads": -1,
        "filename": "AQuery-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "96224e6b365fd8c4a08f4eb480b907a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8617,
        "upload_time": "2019-12-09T08:32:57",
        "upload_time_iso_8601": "2019-12-09T08:32:57.322782Z",
        "url": "https://files.pythonhosted.org/packages/fa/89/b12b5e2ee7bb979e220a1216d7dbca6e425f4786d49a12f0dd37de3a129e/AQuery-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db7c3376f3f73fe545ae5014f772fa77e5daa2de98941d5de56194eabe34aebb",
          "md5": "d00ea03df402bc51d1baf03ab0541215",
          "sha256": "17eaef25cc8a0764e1e85fee4e35b65c04c8b32e46a8877eb57e757a55e421c7"
        },
        "downloads": -1,
        "filename": "AQuery-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d00ea03df402bc51d1baf03ab0541215",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11905,
        "upload_time": "2019-12-09T09:10:42",
        "upload_time_iso_8601": "2019-12-09T09:10:42.297344Z",
        "url": "https://files.pythonhosted.org/packages/db/7c/3376f3f73fe545ae5014f772fa77e5daa2de98941d5de56194eabe34aebb/AQuery-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "675525d33936bb32c621f5992cd562e0e66f204f96ed60bd45128bae913804ab",
          "md5": "5fe92aed9399d976a790e6e6368d15ea",
          "sha256": "476db427e705d0061aa4a44770326617e977eef16c66426312b77b8f5d12a521"
        },
        "downloads": -1,
        "filename": "AQuery-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5fe92aed9399d976a790e6e6368d15ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8639,
        "upload_time": "2019-12-09T09:10:43",
        "upload_time_iso_8601": "2019-12-09T09:10:43.987775Z",
        "url": "https://files.pythonhosted.org/packages/67/55/25d33936bb32c621f5992cd562e0e66f204f96ed60bd45128bae913804ab/AQuery-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db7c3376f3f73fe545ae5014f772fa77e5daa2de98941d5de56194eabe34aebb",
        "md5": "d00ea03df402bc51d1baf03ab0541215",
        "sha256": "17eaef25cc8a0764e1e85fee4e35b65c04c8b32e46a8877eb57e757a55e421c7"
      },
      "downloads": -1,
      "filename": "AQuery-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d00ea03df402bc51d1baf03ab0541215",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11905,
      "upload_time": "2019-12-09T09:10:42",
      "upload_time_iso_8601": "2019-12-09T09:10:42.297344Z",
      "url": "https://files.pythonhosted.org/packages/db/7c/3376f3f73fe545ae5014f772fa77e5daa2de98941d5de56194eabe34aebb/AQuery-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "675525d33936bb32c621f5992cd562e0e66f204f96ed60bd45128bae913804ab",
        "md5": "5fe92aed9399d976a790e6e6368d15ea",
        "sha256": "476db427e705d0061aa4a44770326617e977eef16c66426312b77b8f5d12a521"
      },
      "downloads": -1,
      "filename": "AQuery-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "5fe92aed9399d976a790e6e6368d15ea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8639,
      "upload_time": "2019-12-09T09:10:43",
      "upload_time_iso_8601": "2019-12-09T09:10:43.987775Z",
      "url": "https://files.pythonhosted.org/packages/67/55/25d33936bb32c621f5992cd562e0e66f204f96ed60bd45128bae913804ab/AQuery-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}