{
  "info": {
    "author": "H Fisher",
    "author_email": "hugo.fisher@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# Full of Eels\n\n\nFullOfEels is an assistant program to generate the skeleton code for\na handcrafted artisanal Python module to be implemented in native C.\n\nIt is not a replacement for SWIG or SIP. If you have an existing C/C++\nlibrary and want to create a Python wrapper with the same API, either\nof those will do just fine. Nor is it a replacement for ctypes.\n\nFullOfEels works in the opposite direction. You start by specifying\nthe Python API that you want: module, classes, methods, and functions.\nThis program will create the initial .h/.c files for you, generating\nempty C functions with argument parsing code, struct definitions for\nthe object and type, module init function ... all the the boring but\nnecessary bits. You then fill them out with working C code.\n\nHow do you specify the Python API you want? By writing it in Python.\nYou create a module that defines _what_ the functions and classes will\nbe, with all the arguments and methods, but none of the code that\ndefines _how_ it works - methods and functions should all just `pass`.\nFullOfEels keeps docstrings and some globals, but actual statements\nare discarded.\n\nWhy might you prefer this? Because you can design a more Pythonic API.\nThe great advantage of SWIG/SIP is that the API is already known and\n(ideally) documentation exists. The disadvantage is that you're just\nrecreating a C/C++ API in Python, and that programmers will have to\nbe able to understand C/C++ to understand the documentation. There are\ntimes when this is the best solution. Fullofeels is for when it isn't.\n\nWritten by Hugh(Hugo) Fisher, Canberra Australia, 2016-now. <br>\nReleased under MIT license <br>\nAll feedback welcome: hugo.fisher@gmail.com (Yes, hugo not hugh)\n\n\n### Example\n\nThe Python \"Extending Python with C or C++\" web pages\nstart by creating a spam module with a single `system()` function.\nWith fullOfEels you start this by writing `spam.py` which is just\n\n    def system(command):\n        \"\"\"Execute a shell command.\"\"\"\n        pass\n\nThen you run\n\n    python -m fullofeels -print spam.py\n\nwhich will create\n\n    spam.h\n    spam.c\n    setup.py\n\nLook inside and you'll see all the skeleton code needed for the complete\nPython extension module. Run\n\n    python setup.py build_ext --inplace\n\nand you will have a valid module. From your Python interpreter you can\nimport it and invoke the `spam.system(\"hello\")` function, which will just\nprint out the function name and arguments (specified by the -print CLI option).\n\nBecause fullOfEeels is an assistant, not an automated solution, you still\nneed to fill in the function body yourself to make it do anything useful.\n\n\nFor the \"Defining New Types\" web example you would write custom.py:\n\n    class Custom(object):\n        \"\"\"Custom objects\"\"\"\n\n        def __new__(cls):\n            pass\n\n        def __init__(self, first, last, number: int):\n            pass\n\n        def __del__(self):\n            pass\n\n        def name(self) -> str:\n            \"\"\"Return the name, combining the first and last name\"\"\"\n            pass\n\nand again run fullOfEels on it. The generated C code will have the all\nthe code necessary to declare and initialize the Custom type structure.\nAs before you could build this module, import it, and even create Custom\nobjects. But without additional code they won't do anything and won't\nhave any attributes or properties.\n\n\n### TODO\n\nHeap allocated types\n\nLook at new Python C API for 3.10+\n\n\n### Tested on\n\n    Python 2.7  Fedora Core 24, MacOS 10.14 XCode 11\n    Python 3.5  Fedora Core 24\n    Python 3.6  Windows 8.1 MSVC 2017\n    Python 3.7  Fedora Core 31, Windows 10 MSVC 2019\n    Python 3.9  Fedora Core 31\n\n\n### Versions\n\n1.7 Mar 2021        Type annotations recognised for parameters\n\n1.6 Feb 2021        Automate testing on Windows, cleanup for PyPI release\n\n1.5 Jan 2019        Replace separate program with -m fullofeels package\n\n1.4 Nov 2017        Generate setup.py for module\n\n1.3 Oct 2017        Properties on class become C fields in object struct\n\n1.2 Feb 2017        Can specify argument types for PyArg_ParseTuple\n\n1.1 Nov 2016        Special slots for collections, numbers, buffer interface\n\n1.0 Apr 2016        Modules, objects, classes, methods\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://hg.sr.ht/~hfisher/fullofeels",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fullofeels",
    "package_url": "https://pypi.org/project/fullofeels/",
    "platform": "",
    "project_url": "https://pypi.org/project/fullofeels/",
    "project_urls": {
      "Homepage": "https://hg.sr.ht/~hfisher/fullofeels"
    },
    "release_url": "https://pypi.org/project/fullofeels/1.7.0/",
    "requires_dist": null,
    "requires_python": ">=2.7",
    "summary": "Creates C code skeleton for handcrafted Python extension modules",
    "version": "1.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9692219,
  "releases": {
    "1.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4038b40c51e3a3aada93e852a99581e387771636d55688a9339eb4199d6e6ca",
          "md5": "5634cdf83a08864c9ad20db4714c9303",
          "sha256": "e2dbfff7b25831ef2322ef3eeb2c4dceed4dd0911f4761f1c19dd33138892e5f"
        },
        "downloads": -1,
        "filename": "fullofeels-1.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5634cdf83a08864c9ad20db4714c9303",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 35112,
        "upload_time": "2021-02-08T21:48:03",
        "upload_time_iso_8601": "2021-02-08T21:48:03.433476Z",
        "url": "https://files.pythonhosted.org/packages/a4/03/8b40c51e3a3aada93e852a99581e387771636d55688a9339eb4199d6e6ca/fullofeels-1.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aec940cc5cdd7226b57fef917d3c33b87c8c827e740d9b0dc3e6cbdfad898382",
          "md5": "163e15f9d9035a4ef825185a8c2bcfe8",
          "sha256": "cd138116262bcc1fe1a7e961c547ac9241e5b468a2e76881f8afdb344737eb9d"
        },
        "downloads": -1,
        "filename": "fullofeels-1.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "163e15f9d9035a4ef825185a8c2bcfe8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 29094,
        "upload_time": "2021-02-08T21:48:30",
        "upload_time_iso_8601": "2021-02-08T21:48:30.434824Z",
        "url": "https://files.pythonhosted.org/packages/ae/c9/40cc5cdd7226b57fef917d3c33b87c8c827e740d9b0dc3e6cbdfad898382/fullofeels-1.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca0f3e5a8f64cb2931d03ce6b919e8262af4d43d2f55713001b0bd0660d34860",
          "md5": "cfc187aa578014af3817c52b8c1efe1b",
          "sha256": "5adc9e3885d24bc10340f55e1646f8ff3aac211f5bed8cfd8dac9723e94e3813"
        },
        "downloads": -1,
        "filename": "fullofeels-1.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cfc187aa578014af3817c52b8c1efe1b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 34997,
        "upload_time": "2021-03-07T02:46:19",
        "upload_time_iso_8601": "2021-03-07T02:46:19.506878Z",
        "url": "https://files.pythonhosted.org/packages/ca/0f/3e5a8f64cb2931d03ce6b919e8262af4d43d2f55713001b0bd0660d34860/fullofeels-1.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56a77b271e573739e90a74c1d130c1115597ee298ee17283ef16ecc64b2d4ab8",
          "md5": "50dfb0a2c57f8513dbbe47abe8a7e75a",
          "sha256": "3b3e8d7b5099d9dbe480e6ec0a0cf19de900299c323a7f42bd9c4eee1b4a102e"
        },
        "downloads": -1,
        "filename": "fullofeels-1.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "50dfb0a2c57f8513dbbe47abe8a7e75a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 28980,
        "upload_time": "2021-03-07T02:46:21",
        "upload_time_iso_8601": "2021-03-07T02:46:21.008229Z",
        "url": "https://files.pythonhosted.org/packages/56/a7/7b271e573739e90a74c1d130c1115597ee298ee17283ef16ecc64b2d4ab8/fullofeels-1.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca0f3e5a8f64cb2931d03ce6b919e8262af4d43d2f55713001b0bd0660d34860",
        "md5": "cfc187aa578014af3817c52b8c1efe1b",
        "sha256": "5adc9e3885d24bc10340f55e1646f8ff3aac211f5bed8cfd8dac9723e94e3813"
      },
      "downloads": -1,
      "filename": "fullofeels-1.7.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cfc187aa578014af3817c52b8c1efe1b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 34997,
      "upload_time": "2021-03-07T02:46:19",
      "upload_time_iso_8601": "2021-03-07T02:46:19.506878Z",
      "url": "https://files.pythonhosted.org/packages/ca/0f/3e5a8f64cb2931d03ce6b919e8262af4d43d2f55713001b0bd0660d34860/fullofeels-1.7.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56a77b271e573739e90a74c1d130c1115597ee298ee17283ef16ecc64b2d4ab8",
        "md5": "50dfb0a2c57f8513dbbe47abe8a7e75a",
        "sha256": "3b3e8d7b5099d9dbe480e6ec0a0cf19de900299c323a7f42bd9c4eee1b4a102e"
      },
      "downloads": -1,
      "filename": "fullofeels-1.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "50dfb0a2c57f8513dbbe47abe8a7e75a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 28980,
      "upload_time": "2021-03-07T02:46:21",
      "upload_time_iso_8601": "2021-03-07T02:46:21.008229Z",
      "url": "https://files.pythonhosted.org/packages/56/a7/7b271e573739e90a74c1d130c1115597ee298ee17283ef16ecc64b2d4ab8/fullofeels-1.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}