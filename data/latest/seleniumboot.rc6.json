{
  "info": {
    "author": "shigebeyond",
    "author_email": "772910474@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing"
    ],
    "description": "[GitHub](https://github.com/shigebeyond/SeleniumBoot) | [Gitee](https://gitee.com/shigebeyond/SeleniumBoot)\n\n# SeleniumBoot - yaml驱动Selenium测试\n\n## 概述\nSelenium是基于浏览器的自动化测试工具，但是要写python代码；\n\n考虑到部分测试伙伴python能力不足，因此扩展Selenium，支持通过yaml配置测试步骤;\n\n框架通过编写简单的yaml, 就可以执行一系列复杂的浏览器操作步骤, 如填充表单/提交表单/上传文件/下载文件/识别验证码/校验响应/提取变量/打印变量等，极大的简化了伙伴编写自动化测试脚本的工作量与工作难度，大幅提高人效；\n\n框架通过提供类似python`for`/`if`/`break`语义的步骤动作，赋予伙伴极大的开发能力与灵活性，能适用于广泛的测试场景。\n\n框架提供`include`机制，用来加载并执行其他的步骤yaml，一方面是功能解耦，方便分工，一方面是功能复用，提高效率与质量，从而推进测试整体的工程化。\n\n## 特性\n1. 基于 selenium 的webdriver\n2. 使用 selenium-requests 扩展来处理post请求与上传请求\n3. 支持通过yaml来配置执行的步骤，简化了自动化测试开发:\n每个步骤可以有多个动作，但单个步骤中动作名不能相同（yaml语法要求）;\n动作代表webdriver上的一种操作，如goto/get/post/upload/submit_form等等;\n4. 支持提取器\n5. 支持校验器\n6. 支持识别验证码(使用有道ocr)\n7. 支持类似python`for`/`if`/`break`语义的步骤动作，灵活适应各种场景\n8. 支持`include`引用其他的yaml配置文件，以便解耦与复用\n\n## todo\n1. 支持更多的动作\n\n## 安装\n```\npip3 install SeleniumBoot\n```\n\n安装后会生成命令`SeleniumBoot`;\n\n注： 对于深度deepin-linux系统，生成的命令放在目录`~/.local/bin`，建议将该目录添加到环境变量`PATH`中，如\n```\nexport PATH=\"$PATH:/home/shi/.local/bin\"\n```\n\n## 使用\n```\n# 1 执行单个文件\nSeleniumBoot 步骤配置文件.yml\n\n# 2 执行多个文件\nSeleniumBoot 步骤配置文件1.yml 步骤配置文件2.yml ...\n\n# 3 执行单个目录, 即执行该目录下所有的yml文件\nSeleniumBoot 步骤配置目录\n\n# 4 执行单个目录下的指定模式的文件\nSeleniumBoot 步骤配置目录/step-*.yml\n```\n\n如执行 `SeleniumBoot example/step-mn52.yml`，输出如下\n```\nLoad and run step file: /ohome/shi/code/python/SeleniumBoot/example/step-mn52.yml\nhandle action: goto={'url': 'https://www.mn52.com/'}\nhandle action: download_img_elements_by={'xpath': '//img[@class=\"img-responsive\"]'}\n下载文件: url为https://www.mn52.com/img/allimg/2021-04-27/0a3abe80-4616-4740-9968-8d961fe1ab7c_5f9f95f226fb2.jpg, 另存为/ohome/shi/code/python/SeleniumBoot/downloads/0a3abe80-4616-4740-9968-8d961fe1ab7c_5ffb2.jpg\n下载文件: url为https://www.mn52.com/img/allimg/2021-04-27/11cc4156-6e93-4526-9d0d-d911df8d8492_5fa0e85d40cfa.jpg, 另存为/ohome/shi/code/python/SeleniumBoot/downloads/11cc4156-6e93-4526-9d0d-d911df8d8492_5fcfa.jpg\n下载文件: url为https://www.mn52.com/img/allimg/2021-04-27/213fbbec-22f2-4ae4-9f90-15126d980d56_5f895f29a9d5a.jpg, 另存为/ohome/shi/code/python/SeleniumBoot/downloads/213fbbec-22f2-4ae4-9f90-15126d980d56_5fd5a.jpg\n......\n```\n命令会自动打开浏览器，自动跳转，自动下载图片\n\n## 步骤配置文件及demo\n用于指定多个步骤, 示例见源码 [example](https://github.com/shigebeyond/SeleniumBoot/tree/main/example) 目录下的文件;\n\n顶级的元素是步骤;\n\n每个步骤里有多个动作(如goto/sleep/submit_form)，如果动作有重名，就另外新开一个步骤写动作，这是由yaml语法限制导致的，但不影响步骤执行。\n\n简单贴出2个demo\n1. 下载图片: 详见 [example/step-netbian.yml](https://github.com/shigebeyond/SeleniumBoot/blob/main/example/step-netbian.yml), [演示视频](https://www.zhihu.com/zvideo/1542455008884322304)\n```yaml\n# 下载美女图\n- # 首页\n  goto:\n    url: https://pic.netbian.com/4kmeinv/index.html\n  # 下载多个图片\n  download_img_elements_by:\n    xpath: '//ul[@class=\"clearfix\"]/li/a/img'\n    #save_dir: downloads # 默认downloads，可不填\n```\n\n2. 内部项目测试: 详见 [example/step-jym.yml](https://github.com/shigebeyond/SeleniumBoot/blob/main/example/step-jym.yml), [演示视频](https://www.zhihu.com/zvideo/1542453686449471488)\n```yaml\n- # 登录\n  goto:\n    url: http://admin.jym1.com/login\n  sleep: 5 # 人工介入，浏览器F12打开开发者模式，切network，打开Preserve log，来监听提交登录验证的请求，以便检查识别的验证码参数是否有问题\n  # 识别验证码, 验证码会写到变量captcha\n  recognize_captcha:\n    url: http://admin.jym1.com/login/verify_image\n  # 提交表单\n  submit_form:\n    account: '18877310999'\n    passwd: '123456'\n    verify_text: $captcha # 验证码\n- # 商品列表\n  goto:\n    url: http://admin.jym1.com/goods/goods_service_list\n    # 网页中html的提取变量\n    extract_by_xpath:\n      goods_id: //table/tbody/tr[1]/td[1] # 第一行第一列\n  #  extract_by_css:\n  #    goods_id: table>tbody>tr:nth-child(1)>td:nth-child(1) # 第一行第一列\n- # 商品详情\n  goto:\n    url: http://admin.jym1.com/goods/goods_info?id=$goods_id&type=1\n  download_img_element_by:\n    xpath: //img[@class=\"layui-upload-img\"] # 过滤<img>标签的xpath路径， 与css属性只能二选一\n    #css: img.layui-upload-img # 过滤<img>标签的css selector模式， 与xpath属性只能二选一\n- # 新建门店\n  goto:\n    url: http://admin.jym1.com/store/add_store\n  upload: # 上传文件/图片\n    url: http://admin.jym1.com/upload/common_upload_img/store_img\n    files: # 上传的多个文件\n      # 参数名:文件本地路径\n      file: /home/shi/fruit.jpeg\n    extract_by_jsonpath:\n      img: $.data.url\n  # 提交新建门店，不要用 submit_form，ui中太麻烦了太复杂了（如三级地址要逐级动态加载）\n  post:\n    url: http://admin.jym1.com/store/add_store\n    is_ajax: true\n    data: # post的参数\n      # 参数名:参数值\n      store_name: teststore-${random_str(6)}\n      store_logo_url: '$img'\n      store_img_urls: '[\"$img\"]'\n      province: 450000\n      city: 450100\n      district: 450102\n      address: testadd\n      phone: 1347115${random_int(4)}\n      business_day_from: 1\n      business_day_to: 1\n      work_start_time: 09:00:00 - 20:00:00\n      store_type: 0\n      licence_url: '$img'\n      license_code: 91450100788439413D\n      card_true_name: shi\n      bank_name: 中国工商银行\n      bank_card_num: 6222024100018669328\n      store_work_time: '[\"{\\\"date_from\\\":\\\"1\\\",\\\"date_to\\\":\\\"1\\\",\\\"work_start_time\\\":\\\"09:00:00\\\",\\\"work_end_time\\\":\\\"20:00:00\\\"}\"]'\n- # 门店列表,查看新建门店\n  goto:\n    url: http://admin.jym1.com/store/store_list\n  sleep: 2\n```\n\n## 查找元素的方法\n1. id: 根据 name 属性值来查找, 对应`By.ID`\n2. name: 根据 name 属性值来查找, 对应`By.NAME`\n3. css: 根据 css selector 来查找, 对应`By.CSS_SELECTOR` \n4. xpath: 根据 xpath 来查找, 对应`By.XPATH`\n\n## 配置详解\n支持通过yaml来配置执行的步骤;\n\n每个步骤可以有多个动作，但单个步骤中动作名不能相同（yaml语法要求）;\n\n动作代表webdriver上的一种操作，如goto/get/post/upload/submit_form等等;\n\n下面详细介绍每个动作:\n\n1. auto_close: 设置自动关闭浏览器的选项\n```yaml\nauto_close:\n    on_finish: true # 完成时关闭浏览器, 默认为false\n    on_exception: true # 异常时关闭浏览器, 默认为false\n```\n\n2. close_driver: 关闭浏览器\n```yaml\nclose_driver:\n```\n\n3. sleep: 线程睡眠; \n```yaml\nsleep: 2 # 线程睡眠2秒\n```\n\n4. print: 打印, 支持输出变量/函数; \n```yaml\n# 调试打印\nprint: \"总申请数=${dyn_data.total_apply}, 剩余份数=${dyn_data.quantity_remain}\"\n```\n\n变量格式:\n```\n$msg 一级变量, 以$为前缀\n${data.msg} 多级变量, 用 ${ 与 } 包含\n```\n\n函数格式:\n```\n${random_str(6)} 支持调用函数，目前仅支持以下几个函数: random_str/random_int/random_element/incr\n```\n\n函数罗列:\n```\nrandom_str(n): 随机字符串，参数n是字符个数\nrandom_int(n): 随机数字，参数n是数字个数\nrandom_element(var): 从list中随机挑选一个元素，参数var是list类型的变量名\nincr(key): 自增值，从1开始，参数key表示不同的自增值，不同key会独立自增\n```\n\n5. base_url: 设置基础url\n```yaml\nbase_url: https://www.taobao.com/\n```\n\n6. goto: 浏览器跳转; \n```yaml\ngoto:\n    url: http://admin.jym1.com/goods/goods_service_list # url,支持写变量\n    extract_by_xpath: # 网页中html的提取变量\n      goods_id: //table/tbody/tr[1]/td[1] # 第一行第一列\n```\n\n7. get: 发get请求, 但无跳转; \n```yaml\nget:\n    url: $dyn_data_url # url,支持写变量\n    extract_by_eval:\n      dyn_data: \"json.loads(response.text[16:-1])\" # 变量response是响应对象\n```\n\n8. post: 发post请求, 但无跳转; \n```yaml\npost:\n    url: http://admin.jym1.com/store/add_store # url,支持写变量\n    is_ajax: true\n    data: # post的参数\n      # 参数名:参数值\n      store_name: teststore-${random_str(6)}\n      store_logo_url: '$img'\n```\n\n9. upload: 上传文件; \n```yaml\nupload: # 上传文件/图片\n    url: http://admin.jym1.com/upload/common_upload_img/store_img\n    files: # 上传的多个文件\n      # 参数名:文件本地路径\n      file: /home/shi/fruit.jpeg\n    extract_by_jsonpath:\n      img: $.data.url\n```\n\n10. submit_form: 提交表单; \n是 `input_by_name` 与 `click_by({'css':'[type=submit]'})` 的结合\n```yaml\nsubmit_form:\n  # 输入框name: 填充的值(支持写变量)\n  account: '18877310999'\n  passwd: '123456'\n```\n\n11. input_by_name: 填充 name 指定的输入框; \n```yaml\ninput_by_name:\n  # 输入框name: 填充的值(支持写变量)\n  account: '18877310999'\n```\n\n12. input_by_css: 填充 css selector 指定的输入框; \n```yaml\ninput_by_css:\n  # 输入框css selector模式: 填充的值(支持写变量)\n  '#account': '18877310999'\n```\n\n13. input_by_xpath: 填充 xpath 指定的输入框; \n```yaml\ninput_by_xpath:\n  # 输入框xpath路径: 填充的值(支持写变量)\n  \"//input[@id='account']\": '18877310999'\n```\n\n14. download: 下载文件; \n变量`download_file`记录最新下载的单个文件\n```yaml\ndownload:\n    url: https://img.alicdn.com/tfscom/TB1t84NPuL2gK0jSZPhXXahvXXa.jpg_q90.jpg\n    save_dir: downloads # 保存的目录，默认为 downloads\n    save_file: test.jpg # 保存的文件名，默认为url中最后一级的文件名\n```\n\n15. download_img_element_by: 下载单个`<img>`标签中加载的图片; \n变量`download_file`记录最新下载的单个图片\n```yaml\ndownload_img_element_by:\n    xpath: //img[@class=\"pro-img\"] # 过滤<img>标签的xpath路径，与css属性只能二选一\n    #css: img.pro-img # 过滤<img>标签的css selector模式，与xpath属性只能二选一\n    save_dir: downloads # 保存的目录，默认为 downloads\n    #save_file: test.jpg # 保存的文件名，默认为url中最后一级的文件名\n```\n\n16. download_img_elements_by: 下载多个`<img>`标签中加载的图片; \n变量`download_files`记录最新下载的多个图片\n```yaml\ndownload_img_elements_by:\n    xpath: '//a[@class=\"pic J_ImgLoad\"]/img'\n    save_dir: downloads\n```\n\n17. recognize_captcha: 识别验证码; \n参数同 `download` 动作， 因为内部就是调用 `download`;\n而变量`captcha`记录识别出来的验证码\n```\nrecognize_captcha:\n    url: http://admin.jym1.com/login/verify_image\n    # save_dir: downloads # 保存的目录，默认为 downloads\n    # save_file: test.jpg # 保存的文件名，默认为url中最后一级的文件名\n```\n\n18. recognize_captcha_element: 识别验证码标签中的验证码; \n参数同 `download_img_element_by` 动作， 因为内部就是调用 `download_img_element_by`;\n而变量`captcha`记录识别出来的验证码\n```\nrecognize_captcha_element:\n    xpath: //img[@class=\"pro-img\"] # 过滤<img>标签的xpath路径， 与css属性只能二选一\n    #css: img.pro-img # 过滤<img>标签的css selector模式， 与xpath属性只能二选一\n    #save_dir: downloads # 保存的目录，默认为 downloads\n    #save_file: test.jpg # 保存的文件名，默认为url中最后一级的文件名\n```\n\n19. click_by/click_by_if_exist: 点击指定的元素; \n```yaml\nclick_by:\n  css: 'button[type=submit]' # 元素的css selector模式，与xpath属性只能二选一\n  #xpath: '//button[@type=\"submit\"]' # 元素的xpath路径，与css属性只能二选一\n```\n如果点击之前要先判断元素是否存在，则换用 click_by_if_exist\n\n20. right_click_by: 右击指定的元素; \n```yaml\nright_click_by:\n  css: 'button[type=submit]' # 元素的css selector模式，与xpath属性只能二选一\n  #xpath: '//button[@type=\"submit\"]' # 元素的xpath路径，与css属性只能二选一\n```\n\n21. double_click_by: 双击指定的元素; \n```yaml\ndouble_click_by:\n  css: 'button[type=submit]' # 元素的css selector模式，与xpath属性只能二选一\n  #xpath: '//button[@type=\"submit\"]' # 元素的xpath路径，与css属性只能二选一\n```\n\n22. alert_accept: 点击弹框的确定按钮; \n```yaml\nalert_accept: \n```\n\n23. alert_dismiss: 取消弹框; \n```yaml\nalert_dismiss: \n```\n\n24. max_window: 最大化窗口; \n```yaml\nmax_window: \n```\n\n25. resize_window: 调整窗口大小; \n```yaml\nresize_window: 100,200 # 宽,高\n```\n\n26. switch_to_frame_by: 切换进入iframe; \n```yaml\nswitch_to_frame_by:\n  css: 'iframe#main' # iframe的css selector模式，与xpath属性只能二选一\n  #xpath: '//iframe[@id=\"main\"]' # iframe的xpath路径，与css属性只能二选一\nswitch_to_frame_by: # 参数可省, 默认是进入最后一个iframe \n```\n\n27. switch_to_frame_out: 跳回到主框架页; \n```yaml\nswitch_to_frame_out: \n```\n\n28. switch_to_window: 切到第几个窗口(页签), 从0开始, 支持负数; \n```yaml\nswitch_to_window: 1 # 切到第2个窗口(页签)\nswitch_to_window: -1 # 切到最后一个窗口(页签)\n```\n\n29. screenshot: 整个窗口截图存为png; \n```yaml\nscreenshot:\n    save_dir: downloads # 保存的目录，默认为 downloads\n    save_file: test.png # 保存的文件名，默认为:时间戳.png\n```\n\n30. screenshot_element_by: 对某个标签截图存为png; \n```yaml\nscreenshot_element_by\n    css: 'iframe#main' # iframe的css selector模式，与xpath属性只能二选一\n    #xpath: '//iframe[id=\"main\"]' # iframe的xpath路径，与css属性只能二选一\n    save_dir: downloads # 保存的目录，默认为 downloads\n    save_file: test.png # 保存的文件名，默认为:时间戳.png\n```\n\n31. execute_js: 执行js; \n```yaml\nexecute_js: alert('hello world')\n```\n\n32. scroll: 滚动到指定位置; \n```yaml\nscroll: 100,200\n```\n\n33. scroll_top: 滚动到顶部; \n```yaml\nscroll_top: \n```\n\n34. scroll_bottom: 滚动到底部; \n```yaml\nscroll_bottom: \n```\n\n35. scroll_to_by: 滚动到指定元素; \n```yaml\nscroll_to_by: \n    css: 'button[type=submit]'\n```\n\n36. move_to_by: 鼠标移动到指定元素; \n```yaml\nmove_to_by: \n    css: 'button[type=submit]'\n```\n\n37. refresh: 刷新网页; \n```yaml\nrefresh: \n```\n\n38. forward: 前进; \n```yaml\nforward: \n```\n\n39. back: 后退; \n```yaml\nback: \n```\n\n40. select_all_by: 全选 ctrl + a\n```\nselect_all_by:\n    css: '#name'\n```\n    \n41. copy_by: 复制 ctrl + c\n```\ncopy_by:\n    css: '#name'\n```\n    \n42. clip_by: 剪切 ctrl + x\n```\nclip_by:\n    css: '#name'\n```\n    \n43. paste_by: 粘贴 ctrl + v\n```\npaste_by:\n    css: '#name'\n```\n\n44. for: 循环; \nfor动作下包含一系列子步骤，表示循环执行这系列子步骤；变量`for_i`记录是第几次迭代（从1开始）,变量`for_v`记录是每次迭代的元素值（仅当是list类型的变量迭代时有效）\n```yaml\n# 循环3次\nfor(3) :\n  # 每次迭代要执行的子步骤\n  - scroll_bottom:\n    sleep: 2\n\n# 循环list类型的变量urls\nfor(urls) :\n  # 每次迭代要执行的子步骤\n  - goto:\n      url: $for_v\n    sleep: 2\n\n# 无限循环，直到遇到跳出动作\n# 有变量for_i记录是第几次迭代（从1开始）\nfor:\n  # 每次迭代要执行的子步骤\n  - break_if: for_i>2 # 满足条件则跳出循环\n    scroll_bottom:\n    sleep: 2\n```\n\n45. once: 只执行一次，等价于 `for(1)`; \nonce 结合 moveon_if，可以模拟 python 的 `if` 语法效果\n```yaml\nonce:\n  # 每次迭代要执行的子步骤\n  - moveon_if: for_i<=2 # 满足条件则往下走，否则跳出循环\n    scroll_bottom:\n    sleep: 2\n```\n\n46. break_if: 满足条件则跳出循环; \n只能定义在for/once循环的子步骤中\n```yaml\nbreak_if: for_i>2 # 条件表达式，python语法\n```\n\n47. moveon_if: 满足条件则往下走，否则跳出循环; \n只能定义在for/once循环的子步骤中\n```yaml\nmoveon_if: for_i<=2 # 条件表达式，python语法\n```\n\n48. moveon_if_exist_by: 如果检查元素存在 则往下走，否则跳出循环; \n只能定义在for/once循环的子步骤中\n```yaml\nmoveon_if_exist_by:\n    css: 'button[type=submit]'\n```\n\n49. break_if_exist_by: 如果检查元素存在 则跳出循环，否则往下走; \n只能定义在for/once循环的子步骤中\n```yaml\nbreak_if_exist_by:\n    id: button1\n```\n\n50. include: 包含其他步骤文件，如记录公共的步骤，或记录配置数据(如用户名密码); \n```yaml\ninclude: part-common.yml\n```\n\n51. set_vars: 设置变量; \n```yaml\nset_vars:\n  name: shi\n  password: 123456\n  birthday: 5-27\n```\n\n52. print_vars: 打印所有变量; \n```yaml\nprint_vars:\n```\n\n53. base_url: 设置基础url\n```yaml\nbase_url: https://www.taobao.com/\n```\n\n54. exec: 执行命令, 可用于执行 HttpBoot/SeleniumBoot/AppiumBoot/MiniumBoot 等命令，以便打通多端的用例流程\n```yaml\nexec: ls\nexec: SeleniumBoot test.yml\n```\n\n## 校验器\n主要是为了校验页面或响应的内容, 根据不同场景有2种写法\n```\n1. 针对当前页面, 那么校验器作为普通动作来写\n2. 针对 goto/get/post/upload 有发送http请求的动作, 那么校验器在动作内作为普通属性来写\n```\n\n1. validate_by_xpath: \n从html的响应中校验 xpath 路径对应的元素的值\n```yaml\nvalidate_by_xpath:\n  \"//div[@id='goods_id']\": # 元素的xpath路径\n    '>': 0 # 校验符号或函数: 校验的值, 即 id 元素的值>0\n  \"//div[@id='goods_title']\":\n    contains: 衬衫 # 即 title 元素的值包含'衬衫'\n```\n\n2. validate_by_css: \n从html的响应中校验 css selector 模式对应的元素的值\n```yaml\nvalidate_by_css:\n  '#id': # 元素的css selector 模式\n    '>': 0 # 校验符号或函数: 校验的值, 即 id 元素的值>0\n  '#goods_title':\n    contains: 衬衫 # 即 title 元素的值包含'衬衫'\n```\n\n3. validate_by_jsonpath: \n从json响应中校验 多层属性 的值\n```yaml\nvalidate_by_jsonpath:\n  '$.data.goods_id':\n     '>': 0 # 校验符号或函数: 校验的值, 即 id 元素的值>0\n  '$.data.goods_title':\n    contains: 衬衫 # 即 title 元素的值包含'衬衫'\n```\n\n#### 校验符号或函数\n1. `=`: 相同\n2. `>`: 大于\n3. `<`: 小于\n4. `>=`: 大于等于\n5. `<=`: 小于等于\n6. `contains`: 包含子串\n7. `startswith`: 以子串开头\n8. `endswith`: 以子串结尾\n9. `regex_match`: 正则匹配\n10. `exist`: 元素存在\n11. `not_exist`: 元素不存在\n\n## 提取器\n主要是为了从页面或响应中提取变量, 根据不同场景有2种写法\n```\n1. 针对当前页面, 那么提取器作为普通动作来写\n2. 针对 goto/get/post/upload 有发送http请求的动作, 那么提取器在动作内作为普通属性来写\n```\n\n1. extract_by_xpath:\n从html的响应中解析 xpath 路径指定的元素的值\n```yaml\nextract_by_xpath:\n  # 变量名: xpath路径\n  goods_id: //table/tbody/tr[1]/td[1] # 第一行第一列\n  url: //*[@id=\"1\"]/div/div/h3/a/@href # 获得<a>的href属性 \n```\n\n2. extract_by_css:\n从html的响应中解析 css selector 模式指定的元素的值\n```yaml\nextract_by_css:\n  # 变量名: css selector 模式\n  goods_id: table>tbody>tr:nth-child(1)>td:nth-child(1) # 第一行第一列\n  url: '#\\31  > div > div > h3 > a::attr(href)' # 获得<a>的href属性\n```\n\n3. extract_by_jsonpath:\n从json响应中解析 多层属性 的值\n```yaml\nextract_by_jsonpath:\n  # 变量名: json响应的多层属性\n  img: $.data.url\n```\n\n4. extract_by_eval:\n使用 `eval(表达式)` 执行表达式, 并将执行结果记录到变量中\n```yaml\nextract_by_eval:\n    # 变量名: 表达式（python语法）\n    dyn_data: \"json.loads(response.text[16:-1])\" # 变量response是响应对象\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shigebeyond/SeleniumBoot",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SeleniumBoot",
    "package_url": "https://pypi.org/project/SeleniumBoot/",
    "platform": null,
    "project_url": "https://pypi.org/project/SeleniumBoot/",
    "project_urls": {
      "Homepage": "https://github.com/shigebeyond/SeleniumBoot"
    },
    "release_url": "https://pypi.org/project/SeleniumBoot/1.0.5/",
    "requires_dist": [
      "selenium (==4.1.5)",
      "selenium-requests (==1.4.1)",
      "pyutilb (>=1.0.5)"
    ],
    "requires_python": ">=3.6",
    "summary": "SeleniumBoot: make an easy way (yaml) to web automation testing",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16973154,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e60d6277d82e170e6be01817e044b7106f20afbae019239da1f943796d7ee0f",
          "md5": "e3f5be951459b80df8dbd1fbe1686d15",
          "sha256": "a22e78b857a06fbbdfdc69e95bf990f99779072a35692c2c2f3421565b7a8345"
        },
        "downloads": -1,
        "filename": "SeleniumBoot-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3f5be951459b80df8dbd1fbe1686d15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19962,
        "upload_time": "2022-06-02T07:14:53",
        "upload_time_iso_8601": "2022-06-02T07:14:53.076627Z",
        "url": "https://files.pythonhosted.org/packages/7e/60/d6277d82e170e6be01817e044b7106f20afbae019239da1f943796d7ee0f/SeleniumBoot-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea5ca345833332267e313b9888df83924ddc75b018239187c5e77dd2362eaa9e",
          "md5": "8eba751ba8480c452f024cb81885b365",
          "sha256": "f67d515c2687be7672b9d1f7b77108c7f7754c539704ab248224fa0007aeb6f1"
        },
        "downloads": -1,
        "filename": "SeleniumBoot-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8eba751ba8480c452f024cb81885b365",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21486,
        "upload_time": "2022-06-02T07:14:55",
        "upload_time_iso_8601": "2022-06-02T07:14:55.292571Z",
        "url": "https://files.pythonhosted.org/packages/ea/5c/a345833332267e313b9888df83924ddc75b018239187c5e77dd2362eaa9e/SeleniumBoot-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9622680a2de4fad8e7af0396d6f8e64079db51acf4e69a6bfee88572b555f7e0",
          "md5": "f6df40c4192b6ccc1fdf5f86f1013118",
          "sha256": "66993d74312fe64bd66e26d8ee149a417bb75de7263985c073c506fda8afed09"
        },
        "downloads": -1,
        "filename": "SeleniumBoot-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6df40c4192b6ccc1fdf5f86f1013118",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22980,
        "upload_time": "2022-07-18T03:12:31",
        "upload_time_iso_8601": "2022-07-18T03:12:31.442140Z",
        "url": "https://files.pythonhosted.org/packages/96/22/680a2de4fad8e7af0396d6f8e64079db51acf4e69a6bfee88572b555f7e0/SeleniumBoot-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "271f61e2ff9c7322b88cbeebf42673884fe8bc7dcb19ba2aa51fe3dad4eb9481",
          "md5": "c103c600ede884c07f02d5a70313ddd0",
          "sha256": "d2de60c518d215d5f81530161eab38d7e6851050bb2aae5bbb031e3c382c351f"
        },
        "downloads": -1,
        "filename": "SeleniumBoot-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c103c600ede884c07f02d5a70313ddd0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24943,
        "upload_time": "2022-07-18T03:12:33",
        "upload_time_iso_8601": "2022-07-18T03:12:33.684992Z",
        "url": "https://files.pythonhosted.org/packages/27/1f/61e2ff9c7322b88cbeebf42673884fe8bc7dcb19ba2aa51fe3dad4eb9481/SeleniumBoot-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54c1abfb438c7a35fcd0a214f4f3466971f2789a86c98f074455c40911e3448c",
          "md5": "de0a1760be9a7efbd7080a71b4754649",
          "sha256": "720071884df92a8eb369e3d70315e65394b270ad78573ec124abedb71082d230"
        },
        "downloads": -1,
        "filename": "SeleniumBoot-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de0a1760be9a7efbd7080a71b4754649",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17923,
        "upload_time": "2022-07-29T09:58:20",
        "upload_time_iso_8601": "2022-07-29T09:58:20.343156Z",
        "url": "https://files.pythonhosted.org/packages/54/c1/abfb438c7a35fcd0a214f4f3466971f2789a86c98f074455c40911e3448c/SeleniumBoot-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebe42ac02bc29a6f2e566e7343aa51f9b2a6dafa2132969b12aeb1a8041d9056",
          "md5": "5969c0df2a35f342735862ac3c7c1679",
          "sha256": "f57a61b5213a9530a4602dfab679efc783af7f5ad5c23e7bf8ba987acdc0db27"
        },
        "downloads": -1,
        "filename": "SeleniumBoot-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5969c0df2a35f342735862ac3c7c1679",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21501,
        "upload_time": "2022-07-29T09:58:22",
        "upload_time_iso_8601": "2022-07-29T09:58:22.812066Z",
        "url": "https://files.pythonhosted.org/packages/eb/e4/2ac02bc29a6f2e566e7343aa51f9b2a6dafa2132969b12aeb1a8041d9056/SeleniumBoot-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69ab167aa5a62b6cc2556f431832fb28f8de861c97acf359c37fb92ca4bf2768",
          "md5": "af9248ad08a35da94d2df558e2b0eecf",
          "sha256": "bc22fedecae44f9ebf0f461f5df893d46656fd395177da17b3aa1161c084fd50"
        },
        "downloads": -1,
        "filename": "SeleniumBoot-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af9248ad08a35da94d2df558e2b0eecf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17956,
        "upload_time": "2022-07-30T07:08:14",
        "upload_time_iso_8601": "2022-07-30T07:08:14.464883Z",
        "url": "https://files.pythonhosted.org/packages/69/ab/167aa5a62b6cc2556f431832fb28f8de861c97acf359c37fb92ca4bf2768/SeleniumBoot-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c40b45dd6702cee6a6dfd44fcdd2e722dcfcee6820c95e6e393b1bc52015095",
          "md5": "856ae686b813a20950920c1e70ff7849",
          "sha256": "ccf8a13da2b3e6a4c2d503619efc9dd0e1db429341c2fbf055d671c1ce43d62e"
        },
        "downloads": -1,
        "filename": "SeleniumBoot-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "856ae686b813a20950920c1e70ff7849",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21535,
        "upload_time": "2022-07-30T07:08:16",
        "upload_time_iso_8601": "2022-07-30T07:08:16.713882Z",
        "url": "https://files.pythonhosted.org/packages/0c/40/b45dd6702cee6a6dfd44fcdd2e722dcfcee6820c95e6e393b1bc52015095/SeleniumBoot-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe621480543a785f2ae93023a7144ba144d44d73853374cba8aa644e6a1df282",
          "md5": "15be4280757de6a680050f67e7770e02",
          "sha256": "ede7442cbf23ecd1798c0ea9387d9cb8213a51315b3c88ef2195e2e5250012f7"
        },
        "downloads": -1,
        "filename": "SeleniumBoot-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15be4280757de6a680050f67e7770e02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17861,
        "upload_time": "2022-08-15T07:13:45",
        "upload_time_iso_8601": "2022-08-15T07:13:45.660772Z",
        "url": "https://files.pythonhosted.org/packages/fe/62/1480543a785f2ae93023a7144ba144d44d73853374cba8aa644e6a1df282/SeleniumBoot-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "633ba867489a7be961680bc780c40844463dcc8cb37bdaf9814ec9068d82cdf5",
          "md5": "8a4fbccd32ed0d6efe08f78bfedda5f0",
          "sha256": "0a7131a11571f0a8cb714a23ff96ffba673653e8f87f48dc66f39b6576681d19"
        },
        "downloads": -1,
        "filename": "SeleniumBoot-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8a4fbccd32ed0d6efe08f78bfedda5f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21459,
        "upload_time": "2022-08-15T07:13:48",
        "upload_time_iso_8601": "2022-08-15T07:13:48.422953Z",
        "url": "https://files.pythonhosted.org/packages/63/3b/a867489a7be961680bc780c40844463dcc8cb37bdaf9814ec9068d82cdf5/SeleniumBoot-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a04398870822b383c3c19ae8623d83b2ba97b2969ebfc8504e4af4c1d2255136",
          "md5": "db1fcd32d1fcd355ef0980bd8415f4a0",
          "sha256": "f700d0bcb0a3c701dab96021c53dbb6f626de060a7b3258025232e857c5611a4"
        },
        "downloads": -1,
        "filename": "SeleniumBoot-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db1fcd32d1fcd355ef0980bd8415f4a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18099,
        "upload_time": "2023-02-22T08:44:02",
        "upload_time_iso_8601": "2023-02-22T08:44:02.119721Z",
        "url": "https://files.pythonhosted.org/packages/a0/43/98870822b383c3c19ae8623d83b2ba97b2969ebfc8504e4af4c1d2255136/SeleniumBoot-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "078d6eff59c45a0920bbb91aa791f82aeb1bbaaa886412ffc3a86034fc699486",
          "md5": "f949ebd66f07965a95ea13b3ba0afb15",
          "sha256": "0fcbb382ede1b688a3eb3a9298d3641f39cafb26833c173f0ce7c5a72fbaa1e3"
        },
        "downloads": -1,
        "filename": "SeleniumBoot-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f949ebd66f07965a95ea13b3ba0afb15",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22496,
        "upload_time": "2023-02-22T08:44:04",
        "upload_time_iso_8601": "2023-02-22T08:44:04.632869Z",
        "url": "https://files.pythonhosted.org/packages/07/8d/6eff59c45a0920bbb91aa791f82aeb1bbaaa886412ffc3a86034fc699486/SeleniumBoot-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a04398870822b383c3c19ae8623d83b2ba97b2969ebfc8504e4af4c1d2255136",
        "md5": "db1fcd32d1fcd355ef0980bd8415f4a0",
        "sha256": "f700d0bcb0a3c701dab96021c53dbb6f626de060a7b3258025232e857c5611a4"
      },
      "downloads": -1,
      "filename": "SeleniumBoot-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "db1fcd32d1fcd355ef0980bd8415f4a0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18099,
      "upload_time": "2023-02-22T08:44:02",
      "upload_time_iso_8601": "2023-02-22T08:44:02.119721Z",
      "url": "https://files.pythonhosted.org/packages/a0/43/98870822b383c3c19ae8623d83b2ba97b2969ebfc8504e4af4c1d2255136/SeleniumBoot-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "078d6eff59c45a0920bbb91aa791f82aeb1bbaaa886412ffc3a86034fc699486",
        "md5": "f949ebd66f07965a95ea13b3ba0afb15",
        "sha256": "0fcbb382ede1b688a3eb3a9298d3641f39cafb26833c173f0ce7c5a72fbaa1e3"
      },
      "downloads": -1,
      "filename": "SeleniumBoot-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "f949ebd66f07965a95ea13b3ba0afb15",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 22496,
      "upload_time": "2023-02-22T08:44:04",
      "upload_time_iso_8601": "2023-02-22T08:44:04.632869Z",
      "url": "https://files.pythonhosted.org/packages/07/8d/6eff59c45a0920bbb91aa791f82aeb1bbaaa886412ffc3a86034fc699486/SeleniumBoot-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}