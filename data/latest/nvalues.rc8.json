{
  "info": {
    "author": "Cariad Eccleston",
    "author_email": "cariad@cariad.earth",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9",
      "Typing :: Typed"
    ],
    "description": "# NValues\n\n[![codecov](https://codecov.io/gh/cariad/nvalues/branch/main/graph/badge.svg?token=Qj6KxDEoVA)](https://codecov.io/gh/cariad/nvalues)\n\n**NValues** is a Python package for working with _n_-dimensional volumes of data.\n\nFull documentation is online at **[nvalues.dev](https://nvalues.dev)**.\n\n## Installation\n\n**NValues** requires Python 3.9 or later and can be installed via [PyPI](https://pypi.org/project/nvalues/):\n\n```console\npip install nvalues\n```\n\n## The `Volume` class\n\nThe [`Volume` class](https://nvalues.dev/volume) represents a strongly-typed _n_-dimensional volume of values.\n\n### Construction\n\nYou must pass two generic types on construction:\n\n1. Tuple of any number of key types\n2. Value type\n\n```python\nfrom nvalues import Volume\n\n# A spreadsheet-like grid of floats with string x and integer y keys:\nvolume = Volume[tuple[str, int], float]()\n\n# A cube of booleans with integer x, string y and float z keys:\nvolume = Volume[tuple[int, str, float], bool]()\n```\n\n### Default values\n\nBy default, volumes will raise `nvalues.exceptions.NKeyError` if you try to read a key that doesn't exist.\n\nTo return a default value instead, you can either:\n\n- Pass the default value as the `default` argument:\n\n    ```python\n    from nvalues import Volume\n\n    volume = Volume[tuple[int, int], str](default=\"default\")\n    print(volume[0, 0])\n    # \"default\"\n    ```\n\n- Pass a function that generates a default value as the `default_maker` argument:\n\n    ```python\n    from nvalues import Volume\n\n    def make_default(key: tuple[int, int]) -> str:\n        return f\"default for {key}\"\n\n    volume = Volume[tuple[int, int], str](default_maker=make_default)\n    print(volume[0, 0])\n    # \"default for (0, 0)\"\n    ```\n\nDefault values generated at runtime will be added to the volume, while static defaults will not.\n\n### Reading, setting and deleting values\n\nValues are read, set and deleted via their keys.\n\n```python\nfrom nvalues import Volume\n\nvolume = Volume[tuple[str, int], float](default=0)\n\nvolume[\"A\", 0] = 1.2\nprint(volume[\"A\", 0])\n# 1.2\n\ndel volume[\"A\", 0]\nprint(volume[\"A\", 0])\n# 0\n```\n\n### Key validation\n\nA `Volume` can be configured to reject invalid keys if a validator is passed in the initialiser or set on the `key_validator` property.\n\nIf set, the key validator is a function that examines the key and raises any exception if it's invalid. Any attempts to access an invalid key will result in `InvalidKey` being raised.\n\n```python\nfrom nvalues import Volume\nfrom nvalues.exceptions import InvalidKey\n\nmax_x = 3\nmax_y = 4\n\ndef check_key_range(key: tuple[int, int]) -> None:\n    x = key[0]\n    if x < 0 or x > max_x:\n        raise ValueError(f\"x {x} must be 0-{max_x} inclusive\")\n\n    y = key[1]\n    if y < 0 or y > max_y:\n        raise ValueError(f\"y {y} must be 0-{max_y} inclusive\")\n\nvolume = Volume[tuple[int, int], str](key_validator=check_key_range)\n\ntry:\n    volume[0, 17] = \"foo\"\nexcept InvalidKey as ex:\n    print(ex)\n\n# Key (0, 17) failed validation (y 17 must be 0-4 inclusive)\n```\n\n### Iterating values\n\nNative iteration yields the key and value for each item in the volume.\n\n```python\nfrom nvalues import Volume\n\nvolume = Volume[tuple[int, int], str]()\n\nvolume[0, 0] = \"zero-zero\"\nvolume[4, 0] = \"four-zero\"\nvolume[0, 4] = \"zero-four\"\n\nfor item in volume:\n    print(f\"Found {item.value} at {item.key}\")\n\n# Found zero-zero at (0, 0)\n# Found zero-four at (0, 4)\n# Found four-zero at (4, 0)\n```\n\n## Other classes\n\nThe [`Line`](https://nvalues.dev/line/), [`Grid`](https://nvalues.dev/grid/), [`Cube`](https://nvalues.dev/cube/), [`Tesseract`](https://nvalues.dev/tesseract/) and [`Penteract`](https://nvalues.dev/penteract/) classes wrap and simplify the `Volume` class if you don't need more than five dimensions.\n\n## Support\n\nPlease raise bugs, feature requests and ask questions at [cariad/nvalues/issues](https://github.com/cariad/nvalues/issues).\n\n## The Project\n\n**NValues** is &copy; 2022 Cariad Eccleston and released under the [MIT License](https://github.com/cariad/nvalues/blob/main/LICENSE) at [cariad/nvalues](https://github.com/cariad/nvalues).\n\n## The Author\n\nHello! ðŸ‘‹ I'm **Cariad Eccleston** and I'm a freelance backend and infrastructure engineer in the United Kingdom. You can find me at [cariad.earth](https://cariad.earth), [github/cariad](https://github.com/cariad), [linkedin/cariad](https://linkedin.com/in/cariad) and on Mastodon at [@cariad@tech.lgbt](https://tech.lgbt/@cariad).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cariad/nvalues",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nvalues",
    "package_url": "https://pypi.org/project/nvalues/",
    "platform": null,
    "project_url": "https://pypi.org/project/nvalues/",
    "project_urls": {
      "Homepage": "https://github.com/cariad/nvalues"
    },
    "release_url": "https://pypi.org/project/nvalues/1.0.0b6/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "Manages n-dimensional volumes of data",
    "version": "1.0.0b6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15879778,
  "releases": {
    "1.0.0a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "494ddf6ab4df045405af5224bc321cfedca8a1ba9806c60660be57c74fd7a132",
          "md5": "a09e0ea766f75a6ccb19feee3d1a0e94",
          "sha256": "286280d67fb5fa002be84953b7e340fccc3635c71f579de0adaf8964afc43cdc"
        },
        "downloads": -1,
        "filename": "nvalues-1.0.0a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a09e0ea766f75a6ccb19feee3d1a0e94",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 3392,
        "upload_time": "2022-11-22T16:09:14",
        "upload_time_iso_8601": "2022-11-22T16:09:14.932856Z",
        "url": "https://files.pythonhosted.org/packages/49/4d/df6ab4df045405af5224bc321cfedca8a1ba9806c60660be57c74fd7a132/nvalues-1.0.0a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c76e802b4cec06105dfaca87e361b1fbda834409641177109c93c0b0c2fb7e1",
          "md5": "5e45bb0098f34b094ebeea06eebf21e5",
          "sha256": "7c9f8b5ab7ce49bdac56d77ad74cd84577504b052b983c72376c3338e912ca1f"
        },
        "downloads": -1,
        "filename": "nvalues-1.0.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e45bb0098f34b094ebeea06eebf21e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 9170,
        "upload_time": "2022-11-23T12:54:19",
        "upload_time_iso_8601": "2022-11-23T12:54:19.321525Z",
        "url": "https://files.pythonhosted.org/packages/8c/76/e802b4cec06105dfaca87e361b1fbda834409641177109c93c0b0c2fb7e1/nvalues-1.0.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd343e5d854e2d7a816a4b7892a48e56eb72c253f041d47baf76bc06c68e4e29",
          "md5": "60d14281e5f91249fe586ee66e118d9e",
          "sha256": "ee1845e2fc9fb4319e17ee16e2946d6286855ce1df300f7d19dff1928eb6aa8d"
        },
        "downloads": -1,
        "filename": "nvalues-1.0.0b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60d14281e5f91249fe586ee66e118d9e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 9171,
        "upload_time": "2022-11-23T13:32:22",
        "upload_time_iso_8601": "2022-11-23T13:32:22.749911Z",
        "url": "https://files.pythonhosted.org/packages/dd/34/3e5d854e2d7a816a4b7892a48e56eb72c253f041d47baf76bc06c68e4e29/nvalues-1.0.0b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "241af345e2ace98be9486aa1de195bac75d583093dda35bbe5d324c73e2aad7c",
          "md5": "b2ecd6f940740bcd3e4a659529d4cc17",
          "sha256": "54d97d3568c45e3584c29b9a21f70c54544e85119aae8db052851379da55d8a4"
        },
        "downloads": -1,
        "filename": "nvalues-1.0.0b2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2ecd6f940740bcd3e4a659529d4cc17",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 10799,
        "upload_time": "2022-11-23T16:23:22",
        "upload_time_iso_8601": "2022-11-23T16:23:22.722884Z",
        "url": "https://files.pythonhosted.org/packages/24/1a/f345e2ace98be9486aa1de195bac75d583093dda35bbe5d324c73e2aad7c/nvalues-1.0.0b2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0b3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "478d8eb1abcc25007b788c3f74c273c1627fe7a4daff21e68c613ab092228f26",
          "md5": "3333fd4d778c6a615da608950dc7eff7",
          "sha256": "1f7592bb71e84393f75c87427400c54b61879acab67a6fd8bc236ad9a2a2fb2a"
        },
        "downloads": -1,
        "filename": "nvalues-1.0.0b3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3333fd4d778c6a615da608950dc7eff7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 10959,
        "upload_time": "2022-11-23T16:44:37",
        "upload_time_iso_8601": "2022-11-23T16:44:37.879347Z",
        "url": "https://files.pythonhosted.org/packages/47/8d/8eb1abcc25007b788c3f74c273c1627fe7a4daff21e68c613ab092228f26/nvalues-1.0.0b3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0b4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00fe1ea4f62b9dbe7539b22290bd05c6a220b0443e6538d9fa3ae490d501f7fa",
          "md5": "43efce1830db816d79c978cd0d06e1a6",
          "sha256": "16081ac975694ac431bc59ffee0abb5c3c743e9b85c373e00babecab35fc4692"
        },
        "downloads": -1,
        "filename": "nvalues-1.0.0b4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "43efce1830db816d79c978cd0d06e1a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 10663,
        "upload_time": "2022-11-24T08:04:22",
        "upload_time_iso_8601": "2022-11-24T08:04:22.757367Z",
        "url": "https://files.pythonhosted.org/packages/00/fe/1ea4f62b9dbe7539b22290bd05c6a220b0443e6538d9fa3ae490d501f7fa/nvalues-1.0.0b4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0b5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "829e3434ba74198f38ae08e407fc6e36c8051b185f638086debbd69d08362929",
          "md5": "73db904daffbee1f18b35879dff24cc0",
          "sha256": "1714f3824657fd16de706f30042250c0e1fbbe03af34327c831816ce58dc2480"
        },
        "downloads": -1,
        "filename": "nvalues-1.0.0b5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73db904daffbee1f18b35879dff24cc0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 11676,
        "upload_time": "2022-11-24T11:58:32",
        "upload_time_iso_8601": "2022-11-24T11:58:32.904509Z",
        "url": "https://files.pythonhosted.org/packages/82/9e/3434ba74198f38ae08e407fc6e36c8051b185f638086debbd69d08362929/nvalues-1.0.0b5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0b6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d64090e9891d768c06d6f0197e8c0883334ecbea1e54adff39988a5b0f5f341",
          "md5": "b98ec9cfd3c8831b2a930b7873de3147",
          "sha256": "a3f466697488c9c453102a92f4fa0e1adea4877ffedf7650f2fc5dc73d831028"
        },
        "downloads": -1,
        "filename": "nvalues-1.0.0b6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b98ec9cfd3c8831b2a930b7873de3147",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 12165,
        "upload_time": "2022-11-24T14:38:28",
        "upload_time_iso_8601": "2022-11-24T14:38:28.958781Z",
        "url": "https://files.pythonhosted.org/packages/1d/64/090e9891d768c06d6f0197e8c0883334ecbea1e54adff39988a5b0f5f341/nvalues-1.0.0b6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d64090e9891d768c06d6f0197e8c0883334ecbea1e54adff39988a5b0f5f341",
        "md5": "b98ec9cfd3c8831b2a930b7873de3147",
        "sha256": "a3f466697488c9c453102a92f4fa0e1adea4877ffedf7650f2fc5dc73d831028"
      },
      "downloads": -1,
      "filename": "nvalues-1.0.0b6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b98ec9cfd3c8831b2a930b7873de3147",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 12165,
      "upload_time": "2022-11-24T14:38:28",
      "upload_time_iso_8601": "2022-11-24T14:38:28.958781Z",
      "url": "https://files.pythonhosted.org/packages/1d/64/090e9891d768c06d6f0197e8c0883334ecbea1e54adff39988a5b0f5f341/nvalues-1.0.0b6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}