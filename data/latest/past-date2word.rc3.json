{
  "info": {
    "author": "Awiteb",
    "author_email": "Awiteb@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# past_date2word\n\n<p align=\"center\">\n  <a href=\"https://pypi.org/project/past_date2word/\">\n    <img alt=\"PyPI - Python Version\" src=\"https://img.shields.io/pypi/pyversions/past_date2word?color=9cf\">\n  </a>\n  <a href=\"https://pypi.org/project/past_date2word/\">\n    <img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/past_date2word?color=9cf\">\n  </a>\n  <a href=\"https://www.gnu.org/licenses/gpl-3.0.html\">\n    <img src=\"https://img.shields.io/pypi/l/quran-suras?color=9cf&label=License\" alt=\"License\">\n  </a>\n  <a href=\"https://github.com/psf/black\">\n    <img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\">\n  </a>\n  <a href=\"https://github.com/TheAwiteb/past_date2word/actions/workflows/python-app.yml\">\n    <img alt=\"past_date2word-test\" src=\"https://github.com/TheAwiteb/past_date2word/actions/workflows/python-app.yml/badge.svg\">\n  </a>\n</p>\n\npast_date2word is library helps you to convert the past date to text\n\n* [Requirements](#Requirements)\n* [Installation](#Installation)\n* [Examples](#Examples)\n\n  * [English](#English)\n    * [Seconds](#Seconds-EN)\n    * [Minutes](#Minutes-EN)\n    * [Hours](#Hours-EN)\n    * [Days](#Days-EN)\n    * [Weeks](#Weeks-EN)\n    * [Months](#Months-EN)\n    * [Years](#Years-EN)\n  * [Arabic](#Arabic)\n    * [Seconds](#Seconds-AR)\n    * [Minutes](#Minutes-AR)\n    * [Hours](#Hours-AR)\n    * [Days](#Days-AR)\n    * [Weeks](#Weeks-AR)\n    * [Months](#Months-AR)\n    * [Years](#Years-AR)\n\n* [License](#License)\n\n***\n## Requirements\n\n* **[python3.8](https://www.python.org/downloads/) +**\n* **[git](https://git-scm.com/)**\n* **[pip3](https://pip.pypa.io/en/stable/installation/)**\n\n***\n\n## Installation\n\nUse [PyPi](https://pypi.org) to install past_date2word.\n\n```bash\npip3 install past_date2word\n```\n\n***\n## Example\n\n> NOTE: Not all cases will be written because they are many, do not worry, you can see the [tests file](tests/test_past_date2word.py) that contains all the possible cases (**if you think otherwise, add the test and do a PR, we will be happy with that**)\n\n> NOTE: `with_ago` parameter will add `\"ago\"` to the end of the sentence if its `True`, and if not, he will not add it\n\n> NOTE: `long_sentence` parameter will add the hours, minutes and seconds to the sentence if its `True`, and if not, he will not add it\n\n### English\n\n#### Seconds EN\n```python\ntime = datetime.now() - timedelta(seconds=1)\n\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=False, long_sentence=True)\n    == \"1 second\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=True, long_sentence=False)\n    == \"1 second ago\" # Output of past_date2word\n)\n```\n**[[Back To Top 🔝]](#past_date2word)**\n\n#### Minutes EN\n```python\ntime = datetime.now() - timedelta(minutes=9, seconds=34)\n\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=True, long_sentence=True)\n    == \"9 minutes and 34 seconds ago\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=False, long_sentence=True)\n    == \"9 minutes and 34 seconds\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=True, long_sentence=False)\n    == \"9 minutes ago\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=False, long_sentence=False)\n    == \"9 minutes\" # Output of past_date2word\n)\n```\n\n**[[Back To Top 🔝]](#past_date2word)**\n\n#### Hours EN\n```python\ntime = datetime.now() - timedelta(hours=12, minutes=44)\n\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=True, long_sentence=True)\n    == \"12 hours and 44 minutes ago\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=False, long_sentence=True)\n    == \"12 hours and 44 minutes\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=True, long_sentence=False)\n    == \"12 hours ago\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=False, long_sentence=False)\n    == \"12 hours\" # Output of past_date2word\n)\n```\n\n**[[Back To Top 🔝]](#past_date2word)**\n\n#### Days EN\n```python\ntime = datetime.now() - timedelta(days=5, hours=15)\n\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=True, long_sentence=True)\n    == \"5 days and 15 hours ago\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=False, long_sentence=True)\n    == \"5 days and 15 hours\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=True, long_sentence=False)\n    == \"5 days ago\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=False, long_sentence=False)\n    == \"5 days\" # Output of past_date2word\n)\n```\n\n**[[Back To Top 🔝]](#past_date2word)**\n\n#### Weeks EN\n```python\ntime = datetime.now() - timedelta(weeks=2, days=4)\n\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=True, long_sentence=True)\n    == \"2 weeks and 4 days ago\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=False, long_sentence=True)\n    == \"2 weeks and 4 days\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=True, long_sentence=False)\n    == \"2 weeks and 4 days ago\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=False, long_sentence=False)\n    == \"2 weeks and 4 days\" # Output of past_date2word\n)\n```\n\n**[[Back To Top 🔝]](#past_date2word)**\n\n#### Months EN\n```python\n# 4 weeks == 1 month\none_month_to_week = 4 * 1\n\ntime = datetime.now() - timedelta(weeks=(one_month_to_week * 3) + 2)\n\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=True, long_sentence=True)\n    == \"3 months and 2 weeks ago\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=False, long_sentence=True)\n    == \"3 months and 2 weeks\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=True, long_sentence=False)\n    == \"3 months and 2 weeks ago\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=False, long_sentence=False)\n    == \"3 months and 2 weeks\" # Output of past_date2word\n)\n```\n\n**[[Back To Top 🔝]](#past_date2word)**\n\n#### Years EN\n```python\n# 12 month == 1 year\n# 4 weeks == 1 month\none_month_to_week = 4 * 1\none_year_to_week = one_month_to_week * 12\n\ntime = datetime.now() - timedelta(\n    weeks=(one_year_to_week * 12) + (one_month_to_week * 5)\n)\n\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=True, long_sentence=True)\n    == \"12 years and 5 months ago\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=False, long_sentence=True)\n    == \"12 years and 5 months\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=True, long_sentence=False)\n    == \"12 years and 5 months ago\" # Output of past_date2word\n)\nassert (\n    past_date2word(date=time, language=\"en\", with_ago=False, long_sentence=False)\n    == \"12 years and 5 months\" # Output of past_date2word\n)\n```\n\n**[[Back To Top 🔝]](#past_date2word)**\n\n### Arabic\n\n#### Seconds AR\n```python\ntime = datetime.now() - timedelta(seconds=13)\n\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=True, long_sentence=True)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=False, long_sentence=True)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=True, long_sentence=False)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=False, long_sentence=False)\n)\n```\n<div dir=\"rtl\">\nالمخرجات\n\n```\n\"منذ 13 ثانية\"\n\"13 ثانية\"\n\"منذ 13 ثانية\"\n\"13 ثانية\"\n```\n\n</div>\n\n**[[Back To Top 🔝]](#past_date2word)**\n\n#### Minutes AR\n```python\ntime = datetime.now() - timedelta(minutes=13, seconds=13)\n\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=True, long_sentence=True)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=False, long_sentence=True)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=True, long_sentence=False)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=False, long_sentence=False)\n)\n```\n<div dir=\"rtl\">\nالمخرجات\n\n```\n\"منذ 13 دقيقة و 13 ثانية\"\n\"13 دقيقة و 13 ثانية\"\n\"منذ 13 دقيقة\"\n\"13 دقيقة\"\n```\n\n</div>\n\n**[[Back To Top 🔝]](#past_date2word)**\n\n#### Hours AR\n```python\ntime = datetime.now() - timedelta(hours=13, minutes=13)\n\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=True, long_sentence=True)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=False, long_sentence=True)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=True, long_sentence=False)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=False, long_sentence=False)\n)\n```\n<div dir=\"rtl\">\nالمخرجات\n\n```\n\"منذ 13 ساعة و 13 دقيقة\"\n\"13 ساعة و 13 دقيقة\"\n\"منذ 13 ساعة\"\n\"13 ساعة\"\n```\n\n</div>\n\n**[[Back To Top 🔝]](#past_date2word)**\n\n#### Days AR\n```python\ntime = datetime.now() - timedelta(days=6, hours=15)\n\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=True, long_sentence=True)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=False, long_sentence=True)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=True, long_sentence=False)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=False, long_sentence=False)\n)\n```\n<div dir=\"rtl\">\nالمخرجات\n\n```\n\"منذ 6 ايام و 15 ساعة\"\n\"6 ايام و 15 ساعة\"\n\"منذ 6 ايام\"\n\"6 ايام\"\n```\n\n</div>\n\n**[[Back To Top 🔝]](#past_date2word)**\n\n#### Weeks AR\n```python\ntime = datetime.now() - timedelta(weeks=3, days=4)\n\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=True, long_sentence=True)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=False, long_sentence=True)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=True, long_sentence=False)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=False, long_sentence=False)\n)\n```\n<div dir=\"rtl\">\nالمخرجات\n\n```\n\"منذ 3 اسابيع و 4 ايام\"\n\"3 اسابيع و 4 ايام\"\n\"منذ 3 اسابيع و 4 ايام\"\n\"3 اسابيع و 4 ايام\"\n```\n\n</div>\n\n**[[Back To Top 🔝]](#past_date2word)**\n\n#### Months AR\n```python\none_month_to_week = 4 * 1\n\n\ntime = datetime.now() - timedelta(weeks=(one_month_to_week * 11) + 3)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=True, long_sentence=True)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=False, long_sentence=True)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=True, long_sentence=False)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=False, long_sentence=False)\n)\n```\n<div dir=\"rtl\">\nالمخرجات\n\n```\n\"منذ 11 شهر و 3 اسابيع\"\n\"11 شهر و 3 اسابيع\"\n\"منذ 11 شهر و 3 اسابيع\"\n\"11 شهر و 3 اسابيع\"\n```\n\n</div>\n\n**[[Back To Top 🔝]](#past_date2word)**\n\n#### Years AR\n```python\n# 12 month == 1 year\n# 4 weeks == 1 month\none_month_to_week = 4 * 1\none_year_to_week = one_month_to_week * 12\n\ntime = datetime.now() - timedelta(\n    weeks=(one_year_to_week * 12) + (one_month_to_week * 5)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=True, long_sentence=True)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=False, long_sentence=True)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=True, long_sentence=False)\n)\nprint(\n    past_date2word(date=time, language=\"ar\", with_ago=False, long_sentence=False)\n)\n```\n<div dir=\"rtl\">\nالمخرجات\n\n```\n\"منذ 12 سنة و 5 اشهر\"\n\"12 سنة و 5 اشهر\"\n\"منذ 12 سنة و 5 اشهر\"\n\"12 سنة و 5 اشهر\"\n```\n\n</div>\n\n***\n## License\n\n[GPLv3](https://www.gnu.org/licenses/gpl-3.0.html)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TheAwiteb/past_date2word",
    "keywords": "date to text,date to word,to word,to text",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "past-date2word",
    "package_url": "https://pypi.org/project/past-date2word/",
    "platform": "",
    "project_url": "https://pypi.org/project/past-date2word/",
    "project_urls": {
      "Homepage": "https://github.com/TheAwiteb/past_date2word"
    },
    "release_url": "https://pypi.org/project/past-date2word/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "past_date2word is library helps you to convert the past date to text",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12545307,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43d60cfb4e2f0a47ae6eed54c74b868ab24238fbc18f2f589e1e766db9971b61",
          "md5": "da5c580e436b7e24d35bad4e10939927",
          "sha256": "bb3a80f0b6358296ba4db9db3359cbd8f685347535b02189860fec5a61adfcbb"
        },
        "downloads": -1,
        "filename": "past_date2word-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "da5c580e436b7e24d35bad4e10939927",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2609,
        "upload_time": "2021-09-29T15:52:37",
        "upload_time_iso_8601": "2021-09-29T15:52:37.730238Z",
        "url": "https://files.pythonhosted.org/packages/43/d6/0cfb4e2f0a47ae6eed54c74b868ab24238fbc18f2f589e1e766db9971b61/past_date2word-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e62c485e20260593a114053ff5cb85d48a0154ae529fbb73fa7ff8acb50dd7ee",
          "md5": "b17b9622c7a05518e82a738fabe3621a",
          "sha256": "b44d1026d1f2a7eae577f134e55b6d4cbf011b0d1886c2089245759815ac0672"
        },
        "downloads": -1,
        "filename": "past_date2word-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b17b9622c7a05518e82a738fabe3621a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2836,
        "upload_time": "2021-09-29T19:55:25",
        "upload_time_iso_8601": "2021-09-29T19:55:25.491638Z",
        "url": "https://files.pythonhosted.org/packages/e6/2c/485e20260593a114053ff5cb85d48a0154ae529fbb73fa7ff8acb50dd7ee/past_date2word-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccba989e7f537e6b7915d394a289c3180ec97209d97adde567b1754e763da18a",
          "md5": "fdb9a463fe40918991744debaf702c75",
          "sha256": "52d0b08224f5579f0502475e43b6f677eee9cae93848cae9033a5ec94b2cd40f"
        },
        "downloads": -1,
        "filename": "past_date2word-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fdb9a463fe40918991744debaf702c75",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 17097,
        "upload_time": "2022-01-11T23:43:27",
        "upload_time_iso_8601": "2022-01-11T23:43:27.987551Z",
        "url": "https://files.pythonhosted.org/packages/cc/ba/989e7f537e6b7915d394a289c3180ec97209d97adde567b1754e763da18a/past_date2word-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce89ed263a4d9696d6618f6e0cf8452dde5e827a370acea2ef948f03d4fde119",
          "md5": "76a7ec77f7f5c206320ba26540bf01e1",
          "sha256": "65ac13296615d2c0cd5859a427b7cbeaea8e630984023fbdff68fb76beac2788"
        },
        "downloads": -1,
        "filename": "past_date2word-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "76a7ec77f7f5c206320ba26540bf01e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 6297,
        "upload_time": "2022-01-11T23:43:29",
        "upload_time_iso_8601": "2022-01-11T23:43:29.827590Z",
        "url": "https://files.pythonhosted.org/packages/ce/89/ed263a4d9696d6618f6e0cf8452dde5e827a370acea2ef948f03d4fde119/past_date2word-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ccba989e7f537e6b7915d394a289c3180ec97209d97adde567b1754e763da18a",
        "md5": "fdb9a463fe40918991744debaf702c75",
        "sha256": "52d0b08224f5579f0502475e43b6f677eee9cae93848cae9033a5ec94b2cd40f"
      },
      "downloads": -1,
      "filename": "past_date2word-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fdb9a463fe40918991744debaf702c75",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 17097,
      "upload_time": "2022-01-11T23:43:27",
      "upload_time_iso_8601": "2022-01-11T23:43:27.987551Z",
      "url": "https://files.pythonhosted.org/packages/cc/ba/989e7f537e6b7915d394a289c3180ec97209d97adde567b1754e763da18a/past_date2word-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce89ed263a4d9696d6618f6e0cf8452dde5e827a370acea2ef948f03d4fde119",
        "md5": "76a7ec77f7f5c206320ba26540bf01e1",
        "sha256": "65ac13296615d2c0cd5859a427b7cbeaea8e630984023fbdff68fb76beac2788"
      },
      "downloads": -1,
      "filename": "past_date2word-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "76a7ec77f7f5c206320ba26540bf01e1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 6297,
      "upload_time": "2022-01-11T23:43:29",
      "upload_time_iso_8601": "2022-01-11T23:43:29.827590Z",
      "url": "https://files.pythonhosted.org/packages/ce/89/ed263a4d9696d6618f6e0cf8452dde5e827a370acea2ef948f03d4fde119/past_date2word-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}