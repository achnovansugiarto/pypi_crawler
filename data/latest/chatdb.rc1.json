{
  "info": {
    "author": "Aki",
    "author_email": "a03ki04@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# ChatDB for NLP\n\nChatDB is a toolkit to easily store the conversation such as chat messages in a database. You can use ChatDB as a way of storing text in a stage of collecting data for NLP.\n\nDBMS: [Neo4j](https://neo4j.com)\n\n## Installation\n\nYou can choose either A or B.\n\n### A. The case to use Neo4j Desktop\nIf you will work on a host OS and use Neo4j Desktop, it is recommended to install ChatDB from the PyPI:\n\n```bash\npip install chatdb\n```\n\nDownload Neo4j Desktop from the following: [https://neo4j.com/download/](https://neo4j.com/download/)\n\n### B. The case to use Neo4j on a Docker container\n\nYou can use Git to clone the repository from GitHub:\n\n```bash\ngit clone https://github.com/A03ki/chatdb.git\ncd chatdb\n```\n\n\n#### If you will work on a host OS:\n\n```bash\npip install -e .\ndocker-compose up -d db\n```\n\n#### If you will work on a docker container:\n\n```bash\ndocker-compose up -d\ndocker-compose exec app /bin/sh -c \"[ -e /bin/bash ] && /bin/bash || /bin/sh\"\n```\n\n## Usage\n\nFirst, store the text data in a database.\n\n```python\nfrom chatdb import Graph, Status\n\n# Create Status\ns1 = Status(text=\"How are you today?\")\ns2 = Status(text=\"I’m okay, thanks. And you?\")\ns3 = Status(text=\"I’m awesome.\")\n\n# Construct a relationship between Statuses\ns1.reply_from(s2)  # s2.reply_to(s1)\ns2.reply_from(s3)  # s3.reply_to(s2)\n\n# Create the handler for Neo4j\n# Work on a docker container\ngraph = Graph(\"bolt://db:7687\", password=\"your_password\")\n\n# Work on a host OS\n# graph = Graph(\"bolt://localhost:7687\", password=\"your_password\")\n\n# Store data\ngraph.merge(s2)\n```\n\nNext, extract the text from a database.\n\n```python\nfrom chatdb import Graph, TextOutputer, Status\n\ngraph = Graph(\"bolt://db:7687\", password=\"your_password\")\n# graph = Graph(\"bolt://localhost:7687\", password=\"your_password\")\n\noutputer = TextOutputer(graph)\n\nprint(outputer.match([Status]).extract_text())\n\nprint(outputer.match([Status]*2).extract_text())\n\nprint(outputer.match([Status]*3).extract_text())\n```\n\nOutput:\n\n```\n[['I’m okay, thanks. And you?'], ['How are you today?'], ['I’m awesome.']]\n[['I’m okay, thanks. And you?', 'I’m awesome.'], ['How are you today?', 'I’m okay, thanks. And you?']]\n[['How are you today?', 'I’m okay, thanks. And you?', 'I’m awesome.']]\n```\n\nYou can also use the Neo4j Browser to check data.\n\nTry to go to `http://localhost:7474` in your web browser and run the query which is `MATCH (n:Status) RETURN n`.\n\n\n![Check data at http://localhost:7474](https://raw.githubusercontent.com/A03ki/chatdb/main/docs/images/readme_usage_data_in_neo4j_browser.png)\n\nhttps://raw.githubusercontent.com/optuna/optuna/master/\n\nHow to delete all data: `MATCH (n:Status) DETACH DELETE n`\n\nFor more information on how to use Neo4j Browser, see [https://neo4j.com/developer/neo4j-browser/](https://neo4j.com/developer/neo4j-browser/).\n\n\n\n## Support for collecting Tweet data\n\n\n```bash\npip install tweepy\n```\n\nThis example will store the timeline of Twitter, Inc and the tweet which this account are replying to.\n\n```python\nimport tweepy\nfrom chatdb import Graph, SimpleTweetStatus\nfrom chatdb.tools import TweetArchiver\n\nauth = tweepy.OAuthHandler(consumer_key, consumer_secret)\nauth.set_access_token(access_token, access_token_secret)\napi = tweepy.API(auth, wait_on_rate_limit=True,\n                 wait_on_rate_limit_notify=True)\n\ngraph = Graph(\"bolt://db:7687\", password=\"your_password\")\n# graph = Graph(\"bolt://localhost:7687\", password=\"your_password\")\n\narchiver = TweetArchiver(graph, SimpleTweetStatus)\n\nstatuses = api.user_timeline(screen_name=\"Twitter\")\nfor status in statuses:\n    in_reply_to_status_id_str = status.in_reply_to_status_id_str\n    if in_reply_to_status_id_str:\n        in_reply_to_status = api.get_status(in_reply_to_status_id_str)\n        archiver.add_status(**in_reply_to_status._json)\n    archiver.add_status(**status._json)\n```\n\nFor more information on how to use Tweepy, see [Tweepy Documentation](http://docs.tweepy.org/en/latest/).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/A03ki/chatdb",
    "keywords": "DB Neo4j NLP",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chatdb",
    "package_url": "https://pypi.org/project/chatdb/",
    "platform": "",
    "project_url": "https://pypi.org/project/chatdb/",
    "project_urls": {
      "Homepage": "https://github.com/A03ki/chatdb"
    },
    "release_url": "https://pypi.org/project/chatdb/0.1.0/",
    "requires_dist": [
      "py2neo"
    ],
    "requires_python": ">=3.6, <3.9",
    "summary": "ChatDB is a toolkit to easily store chat messages in DB.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8462844,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "465a2c5ce71b3b41e363ccc4980f38e1d13aecd9f7bffdfb3cb636515680124a",
          "md5": "a9817e28604cb6d1523c74536f4b11d4",
          "sha256": "c29f9ebc52f72271b160b67432390b7ff7858faf0e22fa41203ca39157596468"
        },
        "downloads": -1,
        "filename": "chatdb-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9817e28604cb6d1523c74536f4b11d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <3.9",
        "size": 7489,
        "upload_time": "2020-10-21T03:37:16",
        "upload_time_iso_8601": "2020-10-21T03:37:16.621266Z",
        "url": "https://files.pythonhosted.org/packages/46/5a/2c5ce71b3b41e363ccc4980f38e1d13aecd9f7bffdfb3cb636515680124a/chatdb-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5358a20685f69f27c941a075535d27328a950f0bb8a2f78b2937c0df04cc9f19",
          "md5": "4566cca746447a63580462255647c5a5",
          "sha256": "48dcf53cb6a4d32f5bf44518502b67a8345e868d1a55b98d998586119252b99d"
        },
        "downloads": -1,
        "filename": "chatdb-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4566cca746447a63580462255647c5a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <3.9",
        "size": 6465,
        "upload_time": "2020-10-21T03:37:19",
        "upload_time_iso_8601": "2020-10-21T03:37:19.383554Z",
        "url": "https://files.pythonhosted.org/packages/53/58/a20685f69f27c941a075535d27328a950f0bb8a2f78b2937c0df04cc9f19/chatdb-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "465a2c5ce71b3b41e363ccc4980f38e1d13aecd9f7bffdfb3cb636515680124a",
        "md5": "a9817e28604cb6d1523c74536f4b11d4",
        "sha256": "c29f9ebc52f72271b160b67432390b7ff7858faf0e22fa41203ca39157596468"
      },
      "downloads": -1,
      "filename": "chatdb-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a9817e28604cb6d1523c74536f4b11d4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <3.9",
      "size": 7489,
      "upload_time": "2020-10-21T03:37:16",
      "upload_time_iso_8601": "2020-10-21T03:37:16.621266Z",
      "url": "https://files.pythonhosted.org/packages/46/5a/2c5ce71b3b41e363ccc4980f38e1d13aecd9f7bffdfb3cb636515680124a/chatdb-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5358a20685f69f27c941a075535d27328a950f0bb8a2f78b2937c0df04cc9f19",
        "md5": "4566cca746447a63580462255647c5a5",
        "sha256": "48dcf53cb6a4d32f5bf44518502b67a8345e868d1a55b98d998586119252b99d"
      },
      "downloads": -1,
      "filename": "chatdb-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4566cca746447a63580462255647c5a5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <3.9",
      "size": 6465,
      "upload_time": "2020-10-21T03:37:19",
      "upload_time_iso_8601": "2020-10-21T03:37:19.383554Z",
      "url": "https://files.pythonhosted.org/packages/53/58/a20685f69f27c941a075535d27328a950f0bb8a2f78b2937c0df04cc9f19/chatdb-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}