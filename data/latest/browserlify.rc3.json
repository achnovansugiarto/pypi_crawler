{
  "info": {
    "author": "browserlify",
    "author_email": "hello@browserlify.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Internet :: WWW/HTTP :: Browsers",
      "Topic :: Scientific/Engineering :: Image Processing",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Browserlify Python SDK\n\n![GitHub](https://img.shields.io/github/license/browserlify/python-sdk)\n\nThe [Browserlify API](https://browserlify.com/docs/apis/token.html) Python Library\n\n## Usage\n\n### Requirements\nYou should be signed up as a developer on the [browserlify.com](https://browserlify.com) so that you can create and manage your API token, It's free Sign up.\n\n### Installation\nTo easily install or upgrade to the latest release, use [pip](http://www.pip-installer.org/).\n\n```shell\npip install --upgrade browserlify\n```\n\n### Table of Contents\n- [Getting Started](#getting-started)\n- [PDF generation](#pdf-generation)\n- [Screenshot](#Screenshot)\n- [Web Scraping](#web-scraping)\n- [cli](#cli)\n\n### Getting Started\n1. First create a new api key in the [Dashboard](https://browserlify.com/app/), and retrieve your API Token.\n1. We then need to supply these keys to the browserlify `Option` class so that it knows how to authenticate.\n```python\nfrom browserlify import pdf, Option\n\nopt = Option(YOUR_TOKEN)\n```\n### PDF generation\n```python\nfrom browserlify import pdf, Option\n\nopt = Option(YOUR_TOKEN)\nopt.paper = 'A4'\nopt.full_page = True\nopt.wait_load = 5000 # Wait document loaded <= 5,000 ms\n\ntry:\n    content = pdf('https://example.org', opt)\n    open('example.org.pdf','wb+').write(content)\nexcept Exception as bre:\n    print('pdf fail', bre)\n```\n### Screenshot\n```python\nfrom browserlify import screenshot, Option\n\nopt = Option(YOUR_TOKEN)\nopt.full_page = True\nopt.wait_load = 5000 # Wait document loaded <= 5,000 ms\n\ntry:\n    content = screenshot('https://example.org', opt)\n    open('example.org.png','wb+').write(content)\nexcept Exception as bre:\n    print('screenshot fail', bre)\n```\n\n### Web Scraping\n```python\nfrom browserlify import scrape, Option,Flow\n\nopt = Option(YOUR_TOKEN)\nopt.flows = [\n    Flow(action=\"waitload\", timeout=5000), # Wait document loaded <= 5,000 ms\n    Flow(name=\"title\", action=\"text\", selector=\"h1\")\n]\n\ntry:\n    content = scrape('https://example.org', opt)\n    print(content)\n    # output:\n    # {\"page\":1,\"data\":{\"title\":\"Example Domain\"}}\nexcept Exception as bre:\n    print('scrape fail', bre)\n```\n### cli\n`scripts/browserlify`:  The `cli` tool has a free token: `cli_oss_free_token`\n - `pdf` pdf generation\n - `screenshot` take screenshot\n - `content` get website content\n - `scrape` get website content\n\n```shell\nbrowserlify cli tool\n\npositional arguments:\n  {pdf,screenshot,content,scrape}\n                        commands help\n    pdf                 pdf generation help\n    screenshot          take screenshot help\n    content             get content help\n    scrape              web scrape help\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version, -v         show program's version number and exit\n```\n#### Convert Url To PDF\n```shell\nbrowserlify pdf -t YOUR_TOKEN -o browserlify.com.pdf -w 5000 --paper A3 https://example.org\n```\n\n#### Take Screenshot\n```shell\nbrowserlify screenshot -t YOUR_TOKEN -o browserlify.com.png -w 5000  --fullpage  https://example.org\n```\n#### Get Page Content\n```shell\nbrowserlify content -t YOUR_TOKEN -o browserlify.com.json -w 5000 https://example.org\n```\n\n####  Scrape Page\n`flows.json` is written in browserlify's IDE, and you can get web page content without code\n```json\n[\n    {\n        \"action\": \"waitload\",\n        \"timeout\": 5000\n    },\n    {\n        \"action\": \"text\",\n        \"name\": \"title\",\n        \"selector\": \"title\"\n    }\n]\n```\n\n```shell\nbrowserlify scrape -t YOUR_TOKEN -o example.com.json  -f flows.json https://example.org\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/browserlify/python-sdk",
    "keywords": "",
    "license": "Apache Software License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "browserlify",
    "package_url": "https://pypi.org/project/browserlify/",
    "platform": null,
    "project_url": "https://pypi.org/project/browserlify/",
    "project_urls": {
      "Homepage": "https://github.com/browserlify/python-sdk"
    },
    "release_url": "https://pypi.org/project/browserlify/1.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "PDF generation, Web Scraping with headless chrome from browserlify.com",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13919648,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc41242e7506f54bce1144f13343a1a9b8f34ee1bf365dbe696f62d2271df904",
          "md5": "2d758c8e13dd97f1a788eda09e363e69",
          "sha256": "f407902d21c9b66d6ea2ba0e8d1dcb16e27e7ae3e992999cfa267c9dc2239286"
        },
        "downloads": -1,
        "filename": "browserlify-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2d758c8e13dd97f1a788eda09e363e69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9435,
        "upload_time": "2022-05-07T11:17:54",
        "upload_time_iso_8601": "2022-05-07T11:17:54.197881Z",
        "url": "https://files.pythonhosted.org/packages/dc/41/242e7506f54bce1144f13343a1a9b8f34ee1bf365dbe696f62d2271df904/browserlify-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "925f8ee29ce37eaf4d83de8b7d1aba49b0e7e37f05cd1cdbb9d66e8ce8e461d6",
          "md5": "b09210751a43769a3f34ba28c44dd55b",
          "sha256": "46decc31682e83b03a3853e387418939c2576baeb1e05d10879975ccbf6e984d"
        },
        "downloads": -1,
        "filename": "browserlify-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b09210751a43769a3f34ba28c44dd55b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10430,
        "upload_time": "2022-05-24T07:16:05",
        "upload_time_iso_8601": "2022-05-24T07:16:05.660911Z",
        "url": "https://files.pythonhosted.org/packages/92/5f/8ee29ce37eaf4d83de8b7d1aba49b0e7e37f05cd1cdbb9d66e8ce8e461d6/browserlify-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7cfeedaf38bccaaa4defdfbd9b50a1234472c1709c5d50357cb5f24b0eede0b",
          "md5": "89b1041000487299828530e4574d886e",
          "sha256": "5b8510cea7885854efbc72f52593d9ac59fca8ab2b0692131119a9d16aa7b7ae"
        },
        "downloads": -1,
        "filename": "browserlify-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "89b1041000487299828530e4574d886e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9459,
        "upload_time": "2022-05-24T07:16:07",
        "upload_time_iso_8601": "2022-05-24T07:16:07.907656Z",
        "url": "https://files.pythonhosted.org/packages/e7/cf/eedaf38bccaaa4defdfbd9b50a1234472c1709c5d50357cb5f24b0eede0b/browserlify-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70d9b3ae43283dce1897da8cd61ae9793d52b3ce8d64d9bd93309e6801c3b860",
          "md5": "bc153ee5a2ff29012a2eb60156f1094e",
          "sha256": "0b86abbc79f31b43be47ddae9f9d57fd3c800eb3c4ddfcd5baf84374089a0e3d"
        },
        "downloads": -1,
        "filename": "browserlify-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc153ee5a2ff29012a2eb60156f1094e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10530,
        "upload_time": "2022-05-24T10:44:56",
        "upload_time_iso_8601": "2022-05-24T10:44:56.526839Z",
        "url": "https://files.pythonhosted.org/packages/70/d9/b3ae43283dce1897da8cd61ae9793d52b3ce8d64d9bd93309e6801c3b860/browserlify-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "190415834d7bda2d007a51e8e7464f2ad4c558c6f2ab6d3f8965b7e6f9cbea7b",
          "md5": "715504f2f29a061da10be17ade558fbf",
          "sha256": "b9f0deb281993117b31eba87a7ed7e2c656f36306d5ff82635f4a70295d23673"
        },
        "downloads": -1,
        "filename": "browserlify-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "715504f2f29a061da10be17ade558fbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9564,
        "upload_time": "2022-05-24T10:44:58",
        "upload_time_iso_8601": "2022-05-24T10:44:58.310902Z",
        "url": "https://files.pythonhosted.org/packages/19/04/15834d7bda2d007a51e8e7464f2ad4c558c6f2ab6d3f8965b7e6f9cbea7b/browserlify-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70d9b3ae43283dce1897da8cd61ae9793d52b3ce8d64d9bd93309e6801c3b860",
        "md5": "bc153ee5a2ff29012a2eb60156f1094e",
        "sha256": "0b86abbc79f31b43be47ddae9f9d57fd3c800eb3c4ddfcd5baf84374089a0e3d"
      },
      "downloads": -1,
      "filename": "browserlify-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bc153ee5a2ff29012a2eb60156f1094e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10530,
      "upload_time": "2022-05-24T10:44:56",
      "upload_time_iso_8601": "2022-05-24T10:44:56.526839Z",
      "url": "https://files.pythonhosted.org/packages/70/d9/b3ae43283dce1897da8cd61ae9793d52b3ce8d64d9bd93309e6801c3b860/browserlify-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "190415834d7bda2d007a51e8e7464f2ad4c558c6f2ab6d3f8965b7e6f9cbea7b",
        "md5": "715504f2f29a061da10be17ade558fbf",
        "sha256": "b9f0deb281993117b31eba87a7ed7e2c656f36306d5ff82635f4a70295d23673"
      },
      "downloads": -1,
      "filename": "browserlify-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "715504f2f29a061da10be17ade558fbf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9564,
      "upload_time": "2022-05-24T10:44:58",
      "upload_time_iso_8601": "2022-05-24T10:44:58.310902Z",
      "url": "https://files.pythonhosted.org/packages/19/04/15834d7bda2d007a51e8e7464f2ad4c558c6f2ab6d3f8965b7e6f9cbea7b/browserlify-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}