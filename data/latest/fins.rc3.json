{
  "info": {
    "author": "Joseph Ryan",
    "author_email": "jr@aphyt.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Omron FINS Driver in Python 3\n\nThis project is a Python 3 library for communicating with Omron PLC's that use the FINS (Factory Intelligent Network\nServices) protocol. This library will allow the programmer to write a platform independent computer program to supervise\nand modify memory areas in the PLC for reporting or providing user input into the PLC. This project has been tested on\nan extremely limited amount of hardware, so please confirm that it works with your system. Omron has been pretty\nconsistent with how they implement FINS across PLC platforms, so I'm optimistic that it will work for most systems using\nEthernet based CP/CS/CJ processors, but as stated in the license, this code is provided \"as-is\" with the user being\nresponsible for determining suitability.\n\nIf you're interested in trying it out, or just taking a look at it to see how the FINS protocol works, you can download\nit from my [Bitbucket Page](https://bitbucket.org/jryan/finsgit).\n\n### Examples\n\nThe following program demonstrates the most common application, which is reading and writing to memory areas. The\nprogram below will set the five low bits of CIO 100 (write 0x1f) , read them back, and then reset the five low bits (\nwrite 0x00) and read them back. For the CP1 PLC that I am using, those five bits correspond to the relay outputs, so if\nyou have a similar system, you would hear the relays click on and off.\n\n    import fins.udp\n    import time\n\n    fins_instance = fins.udp.UDPFinsConnection()\n    fins_instance.connect('192.168.250.1')\n    fins_instance.dest_node_add=1\n    fins_instance.srce_node_add=25\n\n    for i in range(2):\n        fins_instance.memory_area_write(fins.FinsPLCMemoryAreas().CIO_WORD,b'\\x00\\x64\\x00',b'\\x00\\x1f',1)\n        mem_area = fins_instance.memory_area_read(fins.FinsPLCMemoryAreas().CIO_WORD,b'\\x00\\x64\\x00')\n        print(mem_area)\n        time.sleep(1)\n        fins_instance.memory_area_write(fins.FinsPLCMemoryAreas().CIO_WORD,b'\\x00\\x64\\x00',b'\\x00\\x00',1)\n        mem_area = fins_instance.memory_area_read(fins.FinsPLCMemoryAreas().CIO_WORD,b'\\x00\\x64\\x00')\n        print(mem_area)\n        time.sleep(1)\n\nAnother useful application would be to transfer the program from the PLC into a hex file so that it could be transferred\ninto another PLC of the same model. This might be necessary if you wanted to send an updated program to a customer PLC\nthat does not have Omron's CX-One programming suite. The code below will connect to the PLC and transfer the program and\nstore it in a file named \"plcprogram.hex\".\n\n    import fins.udp\n    import time\n\n    fins_instance = fins.udp.UDPFinsConnection()\n    fins_instance.connect('192.168.250.1')\n    fins_instance.dest_node_add=1\n    fins_instance.srce_node_add=25\n\n    fins_instance.plc_program_to_file('plcprogram.hex')\n\nIf you want to turn around and download that program to the same model of PLC you could use the follow code (assuming\nyour \"plcprogram.hex\" file is in the same directory as where you execute the Python code, otherwise use relative or\nabsolute paths appropriate for your operating system):\n\n    import fins.udp\n    import time\n\n    fins_instance = fins.udp.UDPFinsConnection()\n    fins_instance.connect('192.168.250.1')\n    fins_instance.dest_node_add=1\n    fins_instance.srce_node_add=25\n\n    fins_instance.file_to_plc_program('plcprogram.hex')\n\n### Notes\n\nThe source code also contains a fins.usb connection, but it does not work (nor was it intended to work) with the driver\nthat Omron ships with their CX-One suite. It requires the user to generate their own USB driver with a package like\nLibUSBK, and use Omron's Vendor ID and Product ID. I would not recommend it unless you have a very good idea what you\nare doing.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/jryan/finsgit/src/master/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fins",
    "package_url": "https://pypi.org/project/fins/",
    "platform": null,
    "project_url": "https://pypi.org/project/fins/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/jryan/finsgit/src/master/"
    },
    "release_url": "https://pypi.org/project/fins/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A library to communicate with Omron controllers using Factory Intelligent Network Service (FINS)",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14174675,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "515ca9cfdd63f00d65d1387282dc3572530cf45ef9608fe2c58d9b4032d5feed",
          "md5": "ff9778de85bde249e94f52a5f5952bd2",
          "sha256": "4119c03116870f4d2cbf62d445daf57e5500be3d26288c605eb63d36c0a09c02"
        },
        "downloads": -1,
        "filename": "fins-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff9778de85bde249e94f52a5f5952bd2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14994,
        "upload_time": "2020-01-12T18:59:36",
        "upload_time_iso_8601": "2020-01-12T18:59:36.138870Z",
        "url": "https://files.pythonhosted.org/packages/51/5c/a9cfdd63f00d65d1387282dc3572530cf45ef9608fe2c58d9b4032d5feed/fins-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf7d953e989317443ee842ed07d25c6db4d19d78bd0e98782a4e16871f55048c",
          "md5": "5ed5f6dde14a4b545d776db16c7d9339",
          "sha256": "96a589e31ab6db1a85d46ee83d32ae513276580aeba86b634d67357f69d7431a"
        },
        "downloads": -1,
        "filename": "fins-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5ed5f6dde14a4b545d776db16c7d9339",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2047,
        "upload_time": "2020-01-12T18:59:38",
        "upload_time_iso_8601": "2020-01-12T18:59:38.486567Z",
        "url": "https://files.pythonhosted.org/packages/cf/7d/953e989317443ee842ed07d25c6db4d19d78bd0e98782a4e16871f55048c/fins-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f047a176e22eb50a6583ccb699cf2f32f261bbf760f6bc52c49c2f78a8d6e2d",
          "md5": "63102927e0204620043162ef3738a003",
          "sha256": "38fbea9ce3a446d6c674ee1cfb6f3fd9549f7883d64a14cb59f6c58519cbeacc"
        },
        "downloads": -1,
        "filename": "fins-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "63102927e0204620043162ef3738a003",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2057,
        "upload_time": "2020-01-14T11:51:25",
        "upload_time_iso_8601": "2020-01-14T11:51:25.524799Z",
        "url": "https://files.pythonhosted.org/packages/7f/04/7a176e22eb50a6583ccb699cf2f32f261bbf760f6bc52c49c2f78a8d6e2d/fins-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ae0b5743d2c1d72d9f0bcf8ac02ed05acd9258e9430c5dbb2f066a870554ca2",
          "md5": "e6590515a3a94fcac3e52c75cbcdf98f",
          "sha256": "a3c6057d6410a0e87d7b87f6edc5022a60c889153c72d85167b50537ddde9715"
        },
        "downloads": -1,
        "filename": "fins-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6590515a3a94fcac3e52c75cbcdf98f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14178,
        "upload_time": "2022-06-19T01:54:24",
        "upload_time_iso_8601": "2022-06-19T01:54:24.993029Z",
        "url": "https://files.pythonhosted.org/packages/2a/e0/b5743d2c1d72d9f0bcf8ac02ed05acd9258e9430c5dbb2f066a870554ca2/fins-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3d747c3b5a0694e59e165596753d0c27dde579adec48cd7cffea3f9d2c48dbc",
          "md5": "9127c3f0c1e7f1c14c86b96f466dffc2",
          "sha256": "8b7b64c3ed15b235487c8f34c8f449611f77ffc0785a60cf65c07efb3dd87a69"
        },
        "downloads": -1,
        "filename": "fins-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9127c3f0c1e7f1c14c86b96f466dffc2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13695,
        "upload_time": "2022-06-19T01:54:26",
        "upload_time_iso_8601": "2022-06-19T01:54:26.609058Z",
        "url": "https://files.pythonhosted.org/packages/b3/d7/47c3b5a0694e59e165596753d0c27dde579adec48cd7cffea3f9d2c48dbc/fins-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ae0b5743d2c1d72d9f0bcf8ac02ed05acd9258e9430c5dbb2f066a870554ca2",
        "md5": "e6590515a3a94fcac3e52c75cbcdf98f",
        "sha256": "a3c6057d6410a0e87d7b87f6edc5022a60c889153c72d85167b50537ddde9715"
      },
      "downloads": -1,
      "filename": "fins-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e6590515a3a94fcac3e52c75cbcdf98f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 14178,
      "upload_time": "2022-06-19T01:54:24",
      "upload_time_iso_8601": "2022-06-19T01:54:24.993029Z",
      "url": "https://files.pythonhosted.org/packages/2a/e0/b5743d2c1d72d9f0bcf8ac02ed05acd9258e9430c5dbb2f066a870554ca2/fins-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3d747c3b5a0694e59e165596753d0c27dde579adec48cd7cffea3f9d2c48dbc",
        "md5": "9127c3f0c1e7f1c14c86b96f466dffc2",
        "sha256": "8b7b64c3ed15b235487c8f34c8f449611f77ffc0785a60cf65c07efb3dd87a69"
      },
      "downloads": -1,
      "filename": "fins-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9127c3f0c1e7f1c14c86b96f466dffc2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13695,
      "upload_time": "2022-06-19T01:54:26",
      "upload_time_iso_8601": "2022-06-19T01:54:26.609058Z",
      "url": "https://files.pythonhosted.org/packages/b3/d7/47c3b5a0694e59e165596753d0c27dde579adec48cd7cffea3f9d2c48dbc/fins-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}