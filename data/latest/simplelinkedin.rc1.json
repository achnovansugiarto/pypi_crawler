{
  "info": {
    "author": "Vishal Kumar Mishra",
    "author_email": "vishal.k.mishra2@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# LinkedIn\n\nPython script to automate some usual tasks performed on social-networking site LinkedIn. The script has been tested on\nmacOS and is expected to work on Linux environment as well. Raise an issue/PR if you encounter any issue while running\nthe scripts.\n\nBefore you proceed:\n\n- Download appropriate chrome driver from https://chromedriver.chromium.org/downloads for the version of the Chrome you\n  have installed in your machine.\n- Allow the script to execute the chrome-driver file downloaded above\n\nThe best way to run and test the package for your needs is to use `sample_script.py` like below:\n\n```python\nfrom simplelinkedin import LinkedIn\n\nsettings = {\n  \"LINKEDIN_USER\": \"<username>\",\n  \"LINKEDIN_PASSWORD\": \"<password>\",\n  \"LINKEDIN_BROWSER\": \"Chrome\",\n  \"LINKEDIN_BROWSER_DRIVER\": \"/path/to/chromedriver\",\n  \"LINKEDIN_BROWSER_HEADLESS\": 0,\n  \"LINKEDIN_BROWSER_CRON\": 0,\n  \"LINKEDIN_CRON_USER\": \"<root_user>\",\n  \"LINKEDIN_PREFERRED_USER\": \"/path/to/preferred/user/text_doc.text\",\n  \"LINKEDIN_NOT_PREFERRED_USER\": \"/path/to/not/preferred/user/text_doc.text\",\n}\n\nwith LinkedIn(\n        username=settings.get(\"LINKEDIN_USER\"),\n        password=settings.get(\"LINKEDIN_PASSWORD\"),\n        browser=settings.get(\"LINKEDIN_BROWSER\"),\n        driver_path=settings.get(\"LINKEDIN_BROWSER_DRIVER\"),\n        headless=bool(settings.get(\"LINKEDIN_BROWSER_HEADLESS\")),\n) as ln:\n  # do all the steps manually\n  ln.login()\n  ln.remove_sent_invitations(older_than_days=14)\n\n  ln.send_invitations(\n    max_invitation=max(ln.WEEKLY_MAX_INVITATION - ln.invitations_sent_last_week, 0),\n    min_mutual=10,\n    max_mutual=450,\n    preferred_users=[\"Quant\"],  # file_path or list of features\n    not_preferred_users=[\"Sportsman\"],  # file_path or list of features\n    view_profile=True,  # (recommended) view profile of users you sent connection request to\n  )\n\n  ln.accept_invitations()\n\n  # OR\n  # run smart follow-unfollow method (without setting cron jobs) which essentially does the same thing as\n  # all the above steps\n  ln.smart_follow_unfollow(\n    users_preferred=settings.get(\"LINKEDIN_PREFERRED_USER\") or [],\n    users_not_preferred=settings.get(\"LINKEDIN_NOT_PREFERRED_USER\") or [],\n  )\n\n  # setting and un-setting cron\n  # Use sudo in case you are setting/un-setting cron.\n\n  # set cron on your machine\n  ln.set_smart_cron(settings)\n\n  # remove existing cron jobs\n  ln.remove_cron_jobs(settings=settings)\n```\n\nAlternatively, you can go the command line way, like below.\n\n    usage: linkedin.py [-h] [--env ENV] [--email EMAIL] [--password PASSWORD] [--browser BROWSER] [--driver DRIVER] [--headless] [--cron] [--cronuser CRONUSER]\n                       [--preferred PREFERRED] [--notpreferred NOTPREFERRED]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --env ENV             Linkedin environment file\n      --email EMAIL         Email of linkedin user\n      --password PASSWORD   Password of linkedin user\n      --browser BROWSER     Browser used for linkedin\n      --driver DRIVER       Path to Chrome/Firefox driver\n      --headless            Whether to run headless\n      --cron                Whether to create a cron job\n      --cronuser CRONUSER   Run cron jobs as this user\n      --rmcron              Whether to remove existing cron\n      --preferred PREFERRED\n                            Path to file containing preferred users characteristics\n      --notpreferred NOTPREFERRED\n                            Path to file containing characteristics of not preferred users\n\nStart with following commands. Use `example.env` file as reference while setting values. Prepend `sudo` if\nsetting/un-setting cron in the commands below.\n\n    python linkedin.py --env .env\n    python linkedin.py --email abc@gmail.com --password $3cRET --browser Chrome --driver /path/to/chromedriver --cronuser john --preferred data/users_preferred.txt --notpreferred data/users_not_preferred.txt\n\nIf the above command works, you can change `.env` file and set `LINKEDIN_BROWSER_CRON=1` or pass `--cron` in the second\ncommand.\n\n`example.env`\n\n    LINKEDIN_USER=\n    LINKEDIN_PASSWORD=\n    LINKEDIN_BROWSER=Chrome\n    LINKEDIN_BROWSER_DRIVER=\n    LINKEDIN_BROWSER_HEADLESS=0\n    LINKEDIN_BROWSER_CRON=0\n    LINKEDIN_CRON_USER=\n    LINKEDIN_PREFERRED_USER=data/users_preferred.txt\n    LINKEDIN_NOT_PREFERRED_USER=data/users_not_preferred.txt\n\nTODOS:\n\n- improve documentation\n- Include Tests\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TheConfused/LinkedIn",
    "keywords": "linkedin,simplelinkedin,selenium,linkedin automation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "simplelinkedin",
    "package_url": "https://pypi.org/project/simplelinkedin/",
    "platform": "",
    "project_url": "https://pypi.org/project/simplelinkedin/",
    "project_urls": {
      "Homepage": "https://github.com/TheConfused/LinkedIn",
      "Repository": "https://github.com/TheConfused/LinkedIn"
    },
    "release_url": "https://pypi.org/project/simplelinkedin/0.2.0/",
    "requires_dist": [
      "selenium (==3.141.0)",
      "python-dotenv (==0.18.0)",
      "toml (==0.10.2)",
      "python-crontab (==2.5.1)",
      "pytest-env (>=0.6.2,<0.7.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Python package to work with LinkedIn",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11838795,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fb8d11674af7f462cffe619db4a43865c34f6966ec2ac6e897cbd7852441514",
          "md5": "ef9afabd4cb5062760225341317e289b",
          "sha256": "35c30cced48a3d417820c31d1dc3a18229299cb696470ec7d29762501fb132d8"
        },
        "downloads": -1,
        "filename": "simplelinkedin-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef9afabd4cb5062760225341317e289b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 12693,
        "upload_time": "2021-10-26T19:13:00",
        "upload_time_iso_8601": "2021-10-26T19:13:00.244886Z",
        "url": "https://files.pythonhosted.org/packages/8f/b8/d11674af7f462cffe619db4a43865c34f6966ec2ac6e897cbd7852441514/simplelinkedin-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e55766560518fb1bc2431a5091c7870f47787d129535d6f7cde7e606bf930f75",
          "md5": "651dcd2107ede1d360488ccb2aa65945",
          "sha256": "cade8aaf1836b3953510b6e6c68f44ae1d9c9a03855315205515500ec511533d"
        },
        "downloads": -1,
        "filename": "simplelinkedin-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "651dcd2107ede1d360488ccb2aa65945",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 12817,
        "upload_time": "2021-10-26T19:13:02",
        "upload_time_iso_8601": "2021-10-26T19:13:02.824885Z",
        "url": "https://files.pythonhosted.org/packages/e5/57/66560518fb1bc2431a5091c7870f47787d129535d6f7cde7e606bf930f75/simplelinkedin-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8fb8d11674af7f462cffe619db4a43865c34f6966ec2ac6e897cbd7852441514",
        "md5": "ef9afabd4cb5062760225341317e289b",
        "sha256": "35c30cced48a3d417820c31d1dc3a18229299cb696470ec7d29762501fb132d8"
      },
      "downloads": -1,
      "filename": "simplelinkedin-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ef9afabd4cb5062760225341317e289b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 12693,
      "upload_time": "2021-10-26T19:13:00",
      "upload_time_iso_8601": "2021-10-26T19:13:00.244886Z",
      "url": "https://files.pythonhosted.org/packages/8f/b8/d11674af7f462cffe619db4a43865c34f6966ec2ac6e897cbd7852441514/simplelinkedin-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e55766560518fb1bc2431a5091c7870f47787d129535d6f7cde7e606bf930f75",
        "md5": "651dcd2107ede1d360488ccb2aa65945",
        "sha256": "cade8aaf1836b3953510b6e6c68f44ae1d9c9a03855315205515500ec511533d"
      },
      "downloads": -1,
      "filename": "simplelinkedin-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "651dcd2107ede1d360488ccb2aa65945",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 12817,
      "upload_time": "2021-10-26T19:13:02",
      "upload_time_iso_8601": "2021-10-26T19:13:02.824885Z",
      "url": "https://files.pythonhosted.org/packages/e5/57/66560518fb1bc2431a5091c7870f47787d129535d6f7cde7e606bf930f75/simplelinkedin-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}