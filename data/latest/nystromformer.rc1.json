{
  "info": {
    "author": "Rishit Dagli",
    "author_email": "rishit.dagli@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Nystromformer [![Twitter](https://img.shields.io/twitter/url?style=social&url=https%3A%2F%2Fgithub.com%2FRishit-dagli%2FNystromformer)](https://twitter.com/intent/tweet?text=Wow:&url=https%3A%2F%2Fgithub.com%2FRishit-dagli%2FNystromformer)\n\n![PyPI](https://img.shields.io/pypi/v/Nystromformer)\n[![Run Tests](https://github.com/Rishit-dagli/Nystromformer/actions/workflows/tests.yml/badge.svg)](https://github.com/Rishit-dagli/Nystromformer/actions/workflows/tests.yml)\n[![Upload Python Package](https://github.com/Rishit-dagli/Nystromformer/actions/workflows/python-publish.yml/badge.svg)](https://github.com/Rishit-dagli/Nystromformer/actions/workflows/python-publish.yml)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![codecov](https://codecov.io/gh/Rishit-dagli/Nystromformer/branch/main/graph/badge.svg?token=CTXN1T8P2Q)](https://codecov.io/gh/Rishit-dagli/Nystromformer)\n\n\n![GitHub License](https://img.shields.io/github/license/Rishit-dagli/Nystromformer)\n[![GitHub stars](https://img.shields.io/github/stars/Rishit-dagli/Nystromformer?style=social)](https://github.com/Rishit-dagli/Nystromformer/stargazers)\n[![GitHub followers](https://img.shields.io/github/followers/Rishit-dagli?label=Follow&style=social)](https://github.com/Rishit-dagli)\n[![Twitter Follow](https://img.shields.io/twitter/follow/rishit_dagli?style=social)](https://twitter.com/intent/follow?screen_name=rishit_dagli)\n\nAn implementation of the [Nystr√∂mformer: A Nystr√∂m-Based Algorithm for Approximating Self-Attention](https://arxiv.org/abs/2102.03902) paper by Xiong et al. The self-attention mechanism that encodes the influence or dependence of other tokens on each specific token is a key component of the performance of Transformers. This uses the Nystr√∂m method to approximate standard self-attention with O(n) complexity allowing to exhibit scalability as a function of sequence length.\n\n![](media/nystromformer.png)\n\n## Installation\n\nRun the following to install:\n\n```sh\npip install nystromformer\n```\n\n## Developing nystromformer\n\nTo install `nystromformer`, along with tools you need to develop and test, run the following in your virtualenv:\n\n```sh\ngit clone https://github.com/Rishit-dagli/Nystromformer.git\n# or clone your own fork\n\ncd Nystromformer\npip install -e .[dev]\n```\n\nTo run rank and shape tests run the following:\n\n```\npytest -v --disable-warnings --cov\n```\n\n## Usage\n\n### Nystrom Attention\n\n```py\nimport tensorflow as tf\nfrom nystromformer import NystromAttention\n\nattn = NystromAttention(\n    dim = 512,\n    dim_head = 64,\n    heads = 8,\n    num_landmarks = 256,    # number of landmarks\n    pinv_iterations = 6,    # number of moore-penrose iterations for approximating pinverse. 6 was recommended by the paper\n    residual = True         # whether to do an extra residual with the value or not. supposedly faster convergence if turned on\n)\n\nx = tf.random.normal((1, 16384, 512))\nmask = tf.ones((1, 16384), dtype=tf.bool)\n\nattn(x, mask = mask) # (1, 16384, 512)\n```\n\n### Nystromformer\n\n```py\nimport tensorflow as tf\nfrom nystromformer import Nystromformer\n\nmodel = Nystromformer(\n    dim = 512,\n    dim_head = 64,\n    heads = 8,\n    depth = 6,\n    num_landmarks = 256,\n    pinv_iterations = 6\n)\n\nx = tf.random.normal((1, 16384, 512))\nmask = tf.ones((1, 16384), dtype=tf.bool)\n\nmodel(x, mask = mask) # (1, 16384, 512)\n```\n\n## Want to Contribute üôã‚Äç‚ôÇÔ∏è?\n\nAwesome! If you want to contribute to this project, you're always welcome! See [Contributing Guidelines](CONTRIBUTING.md). You can also take a look at [open issues](https://github.com/Rishit-dagli/Nystromformer/issues) for getting more information about current or upcoming tasks.\n\n## Want to discuss? üí¨\n\nHave any questions, doubts or want to present your opinions, views? You're always welcome. You can [start discussions](https://github.com/Rishit-dagli/Nystromformer/discussions).\n\n## Citation\n\n```bibtex\n@misc{xiong2021nystromformer,\n    title   = {Nystr√∂mformer: A Nystr√∂m-Based Algorithm for Approximating Self-Attention},\n    author  = {Yunyang Xiong and Zhanpeng Zeng and Rudrasis Chakraborty and Mingxing Tan and Glenn Fung and Yin Li and Vikas Singh},\n    year    = {2021},\n    eprint  = {2102.03902},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CL}\n}\n```\n\n[Yannic Kilcher's Video](https://www.youtube.com/watch?v=m-zrcmRd7E4)\n[PyTorch Implementation](https://github.com/mlpen/Nystromformer)\n[PyTorch Implementation](https://github.com/lucidrains/nystrom-attention)\n\n## License\n\n```\nCopyright 2020 Rishit Dagli\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Rishit-dagli/Nystromformer",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nystromformer",
    "package_url": "https://pypi.org/project/nystromformer/",
    "platform": null,
    "project_url": "https://pypi.org/project/nystromformer/",
    "project_urls": {
      "Homepage": "https://github.com/Rishit-dagli/Nystromformer"
    },
    "release_url": "https://pypi.org/project/nystromformer/0.1.0/",
    "requires_dist": [
      "tensorflow (>=2.8.0)",
      "einops (~=0.3.0)",
      "check-manifest ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "numpy ; extra == 'dev'",
      "black ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "parameterized ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "An Implementation of Nystromformer, Nystr√∂m based algorithm to approximate standard self-attention.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14822666,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9b08fa9ad7a379bd161802222b2edef19728ed7c36be57a8d4e7c66eb103600",
          "md5": "5ff5d293574d021a13cd6e0bda7e8588",
          "sha256": "40fa2541131847b5cbf22e38d6b6aeac19e9071fe9a3a17f47f0461db65b5d74"
        },
        "downloads": -1,
        "filename": "nystromformer-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ff5d293574d021a13cd6e0bda7e8588",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12306,
        "upload_time": "2022-08-20T18:12:32",
        "upload_time_iso_8601": "2022-08-20T18:12:32.695782Z",
        "url": "https://files.pythonhosted.org/packages/c9/b0/8fa9ad7a379bd161802222b2edef19728ed7c36be57a8d4e7c66eb103600/nystromformer-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a500c4d98c4e0d32fcacbf32409e22bd12b827d8e4f297c3018de0f3234fdb8c",
          "md5": "383a438aa0d8b286fbb5c2025593500f",
          "sha256": "e873e39fe263947f7eed7acde14835291991f33b7ba98bc5fa2e31fdb0d50bf2"
        },
        "downloads": -1,
        "filename": "nystromformer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "383a438aa0d8b286fbb5c2025593500f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12447,
        "upload_time": "2022-08-20T18:12:34",
        "upload_time_iso_8601": "2022-08-20T18:12:34.415244Z",
        "url": "https://files.pythonhosted.org/packages/a5/00/c4d98c4e0d32fcacbf32409e22bd12b827d8e4f297c3018de0f3234fdb8c/nystromformer-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c9b08fa9ad7a379bd161802222b2edef19728ed7c36be57a8d4e7c66eb103600",
        "md5": "5ff5d293574d021a13cd6e0bda7e8588",
        "sha256": "40fa2541131847b5cbf22e38d6b6aeac19e9071fe9a3a17f47f0461db65b5d74"
      },
      "downloads": -1,
      "filename": "nystromformer-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5ff5d293574d021a13cd6e0bda7e8588",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12306,
      "upload_time": "2022-08-20T18:12:32",
      "upload_time_iso_8601": "2022-08-20T18:12:32.695782Z",
      "url": "https://files.pythonhosted.org/packages/c9/b0/8fa9ad7a379bd161802222b2edef19728ed7c36be57a8d4e7c66eb103600/nystromformer-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a500c4d98c4e0d32fcacbf32409e22bd12b827d8e4f297c3018de0f3234fdb8c",
        "md5": "383a438aa0d8b286fbb5c2025593500f",
        "sha256": "e873e39fe263947f7eed7acde14835291991f33b7ba98bc5fa2e31fdb0d50bf2"
      },
      "downloads": -1,
      "filename": "nystromformer-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "383a438aa0d8b286fbb5c2025593500f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12447,
      "upload_time": "2022-08-20T18:12:34",
      "upload_time_iso_8601": "2022-08-20T18:12:34.415244Z",
      "url": "https://files.pythonhosted.org/packages/a5/00/c4d98c4e0d32fcacbf32409e22bd12b827d8e4f297c3018de0f3234fdb8c/nystromformer-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}