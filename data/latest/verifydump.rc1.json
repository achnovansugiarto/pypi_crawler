{
  "info": {
    "author": "j68k",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Topic :: Games/Entertainment",
      "Topic :: System :: Archiving :: Compression",
      "Topic :: Utilities"
    ],
    "description": "# verifydump\n\nverifydump is a command-line tool for verifying that compressed disc images in .chd or .rvz format correctly match those in the [Datfiles produced by the Redump disc preservation project](http://redump.org/downloads/).\n\nThe reason it's useful is that the Redump Datfiles describe the uncompressed disc image files (usually in .bin/.cue or .iso format) but it's generally more pleasant for users to store their disc images in .chd/.rvz format because those formats offer excellent compression while still being directly usable in many emulators without the need to decompress the whole file first.\n\nverifydump works by converting the compressed .chd/.rvz file into the original format used by Redump, tweaking the converted dump to match the Redump conventions, and then verifying that it matches the Datfile.\n\n## Required Tools\n\nTo convert the disc images between formats verifydump uses third-party tools.\n\nTo verify .chd files you need both of:\n- chdman, which is made by and [distributed with MAME](https://www.mamedev.org/release.html)\n- [binmerge](https://github.com/putnam/binmerge/releases)\n\nTo verify .rvz files you need:\n- DolphinTool, which is made by and [distributed with Dolphin](https://dolphin-emu.org/download/)\n\nThe tools must be available in your system's PATH so that verifydump can find them.\n\n## Installation\n\nYou can download a .exe of verifydump for Windows on the [releases](https://github.com/j68k/verifydump/releases) page. The program is written in Python so on Linux or macOS you can install it using [pipx](https://pypa.github.io/pipx/) with:\n```Shell\npipx install verifydump\n```\nor using any other method you like for installing Python packages.\n\n## Usage\n\nTo verify your dumps you need to supply verifydump with the Datfile and the compressed files that it should verify. The Datfile (which can be zipped) should be specified first, followed by one or more compressed dump files or folders that contain the dump files:\n```Shell\nverifydump \"Example - SystemName - Datfile (3902) (2022-01-01 01-02-03).zip\" \"C:\\Games\\SystemName\"\n```\n\nIf everything is successful, after a little while you'll see output like this:\n```\nDatfile loaded successfully with 3902 games\nDump verified correct and complete: \"Some Game (Disc 1)\"\nDump verified correct and complete: \"Some Game (Disc 2)\"\nDump verified correct and complete: \"Other Game\"\nDump verified correct and complete: \"Best Game\"\nSuccessfully verified 4 dumps\n```\n\nIf any dump can't be successfully verified then you'll see output about what failed after all the other dumps have been checked. The program stops checking a dump after it finds an error, so the error reported might just be the first problem in a file. verifydump never modifies your files, so fixing problems like wrong filenames is up to you.\n\nThere are a few options you can use, which can see documentation about by running `verifydump --help`. The `--verbose` option can be helpful if you get an unexpected result, because it makes the program show much more detailed output about exactly what it is doing. Another important option is `--extra-cue-source`, which is described in the following section.\n\n## The problem with .cue files\n\nAs mentioned above, verifydump works by converting your compressed disc images into the original format used by Redump. For CD images, that will be .bin/.cue format. There can be a problem, however, which is that the original Redump .cue files sometimes contain extra metadata about the disc that isn't representable in the .chd format. That means that when verifydump converts the .chd, the converted .cue is missing that metadata. It therefore doesn't match the .cue file described in the Datfile and can't be verified. If that happens, you'll see output like this:\n```\n\"Some Game (Disc 1)\" .bin files verified and complete, but .cue does not match Datfile\nYou can either supply the original .cue file yourself using the '--extra-cue-source' option so that we can check that the generated .cue file's essential structure is correct, or ignore .cue file errors with the '--allow-cue-file-mismatches' option\n```\n\nAs mentioned in that output, the solution to this problem is that you can provide the original .cue file. verifydump can then check that the provided .cue does match the Datfile, and then it can check the converted .cue against the provided one, while ignoring any metadata that isn't supported in the .chd format. That way, it can verify that the essential parts of the converted .cue are correct.\n\nThe good news is that Redump makes the .cue files for all systems easily available on [their downloads page](http://redump.org/downloads/) in the Cuesheets column. So if you do encounter this issue, you just need to download the Cuesheets .zip for the system you're verifying, and tell verifydump where to find that file using the `--extra-cue-source` option. You'll then see output like this:\n```\nDump .bin files verified correct and complete, and .cue essential structure matches: \"Some Game (Disc 1)\"\n```\nwhich is a slightly long-winded way of saying everything is great.\n\n## Avoiding SSD wear from temporary files\n\nBecause verifydump uses external tools to do its conversions, it necessarily creates temporary files for the converted files, and then promptly deletes them after verification. That's a bit unfortunate, because the lifetime of an SSD is limited by the amount of data that's written to it, so it's somewhat wasteful to write big files and then delete them again immediately.\n\n**It's probably not worth worrying about this if you're just going to verify your game collection occasionally**, but if you'll be verifying it very frequently, or if you have a huge collection then it might be worth using a [RAM drive](https://en.wikipedia.org/wiki/RAM_drive) to store the temporary files, so that they don't need to be written to your SSD.\n\nOn Windows I've had success using [OSFMount](https://www.osforensics.com/tools/mount-disk-images.html) to mount a new RAM drive with the drive letter T:, and then in the PowerShell terminal that I run verifydump in, setting the TEMP environment variable with `$Env:TEMP=\"T:\\\"`. The RAM drive needs to be large enough to fit double the uncompressed size of the largest dump that you will verify, so ~1.5GB is good for CD images, or ~20GB for DVD images.\n\n## Bugs/questions\n\nPlease report any bugs or ask any questions by opening an [issue on the project's GitHub](https://github.com/j68k/verifydump/issues). Please assign an appropriate label to your issue to keep things organized.\n\n## Contributing/future work\n\nPull requests for bug fixes are very welcome, of course. If you're thinking of doing substantial work on a new feature then please open a new issue to discuss it first so we can make sure that we're on the same page about the proposed feature/design.\n\nThere may be some [open issues for proposed new features](https://github.com/j68k/verifydump/labels/enhancement) already, and please feel free to star those issues to indicate which ones should be prioritized.\n\nOne feature that probably won't be added is support for other compressed image formats, unless they have clear advantages over the ones that are supported now. I'd prefer to nudge users towards whatever the best format is for a given system rather supporting every format just because it's possible.\n\nThank you very much for reading everything, and I hope you like the tool!\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/j68k/verifydump",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "verifydump",
    "package_url": "https://pypi.org/project/verifydump/",
    "platform": null,
    "project_url": "https://pypi.org/project/verifydump/",
    "project_urls": {
      "Homepage": "https://github.com/j68k/verifydump",
      "Repository": "https://github.com/j68k/verifydump.git"
    },
    "release_url": "https://pypi.org/project/verifydump/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.10,<3.11",
    "summary": "A tool for verifying compressed (.chd/.rvz) disc dumps against a Datfile",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13890352,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82dee8a95e9dd2273775b9e384933dc5bae733629dfdeb9fec6d6eefdc98ddbb",
          "md5": "012fc503f874bf9332d073d6c977366d",
          "sha256": "0d4fa5a6a830d00e0350d1b1b78cd964f570dcf5330444ca1277a7b5a445d3b6"
        },
        "downloads": -1,
        "filename": "verifydump-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "012fc503f874bf9332d073d6c977366d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<3.11",
        "size": 14911,
        "upload_time": "2022-05-22T04:57:28",
        "upload_time_iso_8601": "2022-05-22T04:57:28.377752Z",
        "url": "https://files.pythonhosted.org/packages/82/de/e8a95e9dd2273775b9e384933dc5bae733629dfdeb9fec6d6eefdc98ddbb/verifydump-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e9c6fcfd72da09a382def6d3a23fe87c13937a505ec490233d2540340105746",
          "md5": "a26dad2f0f851323800b0eb771209629",
          "sha256": "fc0596831620a85c11912d10ad935de9684b5bd9d2541b6d83b452429d31dd36"
        },
        "downloads": -1,
        "filename": "verifydump-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a26dad2f0f851323800b0eb771209629",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<3.11",
        "size": 16487,
        "upload_time": "2022-05-22T04:57:30",
        "upload_time_iso_8601": "2022-05-22T04:57:30.116086Z",
        "url": "https://files.pythonhosted.org/packages/3e/9c/6fcfd72da09a382def6d3a23fe87c13937a505ec490233d2540340105746/verifydump-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82dee8a95e9dd2273775b9e384933dc5bae733629dfdeb9fec6d6eefdc98ddbb",
        "md5": "012fc503f874bf9332d073d6c977366d",
        "sha256": "0d4fa5a6a830d00e0350d1b1b78cd964f570dcf5330444ca1277a7b5a445d3b6"
      },
      "downloads": -1,
      "filename": "verifydump-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "012fc503f874bf9332d073d6c977366d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<3.11",
      "size": 14911,
      "upload_time": "2022-05-22T04:57:28",
      "upload_time_iso_8601": "2022-05-22T04:57:28.377752Z",
      "url": "https://files.pythonhosted.org/packages/82/de/e8a95e9dd2273775b9e384933dc5bae733629dfdeb9fec6d6eefdc98ddbb/verifydump-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e9c6fcfd72da09a382def6d3a23fe87c13937a505ec490233d2540340105746",
        "md5": "a26dad2f0f851323800b0eb771209629",
        "sha256": "fc0596831620a85c11912d10ad935de9684b5bd9d2541b6d83b452429d31dd36"
      },
      "downloads": -1,
      "filename": "verifydump-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a26dad2f0f851323800b0eb771209629",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<3.11",
      "size": 16487,
      "upload_time": "2022-05-22T04:57:30",
      "upload_time_iso_8601": "2022-05-22T04:57:30.116086Z",
      "url": "https://files.pythonhosted.org/packages/3e/9c/6fcfd72da09a382def6d3a23fe87c13937a505ec490233d2540340105746/verifydump-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}