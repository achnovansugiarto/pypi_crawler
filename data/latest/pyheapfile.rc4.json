{
  "info": {
    "author": "k.r. goger",
    "author_email": "k.r.goger+pyheapfile@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n\n# pyheapfile - heap file storage\n\n`pyheapfile` implements a file persistent \n[`heap structure`](https://en.wikipedia.org/wiki/Heap_(data_structure)) \nas single linked list\n\n# What's new ?\n\nCheck\n[`CHANGELOG`](https://github.com/kr-g/pyheapfile/blob/main/CHANGELOG.MD)\nfor latest ongoing, or upcoming news\n\n\n# memory / file layout\n\n## general node layout\n\n| name | size / value | description |\n| --- | --- | --- | \n| magik | 4 byte 0x_2_bad_dead | header magic number byte sequence for node structure |\n| aloc | 6 byte | length of heap node |\n| used | 6 byte | length of data in heap node |\n| data | x bytes | data area |\n\nthe internal structure is a calculated single linked list. \nthere are no absolute file positions stored. \nall is relative.\nnavigation is just possible in one direction the method `read_next()`.\n\nwhen reading continuesly with `read_next()` the not persited values `prev`, \nand `succ` are calculated and available in the `Node` instance. \nthese are only \"values\"; no linking of `Node` objects at this place.\n\nbecause of this the `free()` method merges only (continuesly read) nodes properly.\n\n`Node` objects are not cached at any place.\ncalling `read_node()` multiple time creates multiple Node objects.\nin case one of them change the others are unaware of the change.\n\na heap node is marked as free when `used` is set to 0. \nwhen requesting memory with `alloc()` search begins from the file head \nuntil a fiting node (requested_size <= `aloc`, and `used` == 0) is found.\nif no fitting node is found `alloc()` calls `alloc_appened()` whats adds \na new node at the end of the file. \n\nbecause of this behaviour of `alloc()` its not possible to \nallocate (or preserve) empty nodes for whatever reason.\n\n\n## limitation\n\nthe internal structure allows a maximum node data area of \n2^48 = 281.474.976.710.656 bytes \n= 268.435.456 MB\n= 262.144 GB\n= 256 TB (all of them calc on 2^10 base)\n(remark: initially that size was not intended, it came in because of a calc error in MB/GB/TB ranges)\n\nthe max size is per node / block in the heap file.\n\nthe total number of nodes is limited only by the used filesystem \n(on the server running this software module).\n\n\n## continuesly node layout\n\nthe following shows an example layout inside a file. \ndescribed as tuple values\n\n(0x2baddead,aloc=16,used=5,\"hello\"),(0x2baddead,aloc=10,used=5,\"world\"),(0x2baddead,aloc=10,used=1,\"!\"),\n\n\n## hexdump of sample heap file \n\nthe test case `test_realloc_append` creates following heap file (as of release v0.0.1).\n\nthe first node is reallocated and marked as free. \nthe content of the data block is copied by `realloc()` to the new node.\nthe data section of the free node is not wiped with 0.\nonly the `used` value is set to 0 to indicate that the node contains no data.\nthe marker 0x55 is created by `alloc_append()` only when the used data area size\nis less than the `aloc` (allocated) range. \n\n\n    00000000  2b ad de ad 00 00 00 00  00 0a 00 00 00 00 00 00  |+...............|\n    00000010  68 65 6c 6c 6f 00 00 00  00 55 2b ad de ad 00 00  |hello....U+.....|\n    00000020  00 00 00 0a 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    00000030  00 00 00 55 2b ad de ad  00 00 00 00 00 14 00 00  |...U+...........|\n    00000040  00 00 00 05 77 6f 72 6c  64 00 00 00 00 00 00 00  |....world.......|\n    00000050  00 00 00 00 00 00 00 55  2b ad de ad 00 00 00 00  |.......U+.......|\n    00000060  00 14 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    00000070  00 00 00 00 00 00 00 00  00 00 00 55 2b ad de ad  |...........U+...|\n    00000080  00 00 00 00 00 32 00 00  00 00 00 01 21 00 00 00  |.....2......!...|\n    00000090  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    000000a0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    000000b0  00 00 00 00 00 00 00 00  00 00 00 00 00 55 2b ad  |.............U+.|\n    000000c0  de ad 00 00 00 00 00 c8  00 00 00 00 00 05 68 65  |..............he|\n    000000d0  6c 6c 6f 00 00 00 00 00  00 00 00 00 00 00 00 00  |llo.............|\n    000000e0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    000000f0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    00000100  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    00000110  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    00000120  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    00000130  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    00000140  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    00000150  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    00000160  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    00000170  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    00000180  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n    00000190  00 00 00 00 00 55                                 |.....U|\n    00000196\n\n\n## remark on bash tooling\n\nunder linux you can use `hexdump -Cv filename.hpf` from bash\nto explore the content of a heap file.\n\n## remark on hexdump tool\n\nhexdump tool raise error when configured not properly. use valid hex address for node.\nthe internal hexdump tool for dumping single nodes from the heapfile can be called with:\n\n\n    usage: python3 -m pyheapfile.hexdump [options]\n\n    dump heapfile nodes\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -v, --version         show version info and exit\n      -V, --verbose         show more info\n      -f FILE_NAME, --file FILE_NAME\n                            input file\n      -n NODE_NO, --node NODE_NO\n                            hex address of node. blanks in a quoted string are ignored. (default: 000000)\n      -aw ADDESS_WIDTH, --addess_width ADDESS_WIDTH\n                            hex address width. (default: 6)\n      -r REL_NO, --relative REL_NO\n                            relative position of node. can be combined with -n option when positive. when negative it reads from the end of the heap. keep in mind that -n\n                            is an address and -r is a position. (default: 0)\n      -w WIDTH, --width WIDTH\n                            with of data output (default: 16)\n      -g GROUP, --group GROUP\n                            group bytes in data output (default: 1)\n      -ho, --header_only    prints only header, no data.\n\n\n\n# how to use\n\nthe heap file class offers various methods to manipulate the heap. \ne.g. such as:\n- alloc\n- free\n- realloc\n\nrefer to [`sample.py`](https://github.com/kr-g/pyheapfile/blob/main/sample.py)\n\nrefer also to test cases in [`tests`](https://github.com/kr-g/pyheapfile/blob/main/tests)\n\n\n# Platform\n\nTested on Python3, and Linux.\n\n\n# development status\n\nalpha state.\nthe API or logical call flow might change without prior notice.\n\nread [`CHANGELOG`](https://github.com/kr-g/pyheapfile/blob/main/CHANGELOG.MD)\nfor latest, or upcoming news.\n\n\n# installation\n    \navailable on pypi. install with:\n\n    python3 -m pip install pyheapfile",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kr-g/pyheapfile",
    "keywords": "heap file storage memory management",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyheapfile",
    "package_url": "https://pypi.org/project/pyheapfile/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyheapfile/",
    "project_urls": {
      "Homepage": "https://github.com/kr-g/pyheapfile"
    },
    "release_url": "https://pypi.org/project/pyheapfile/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "pyheapfile - python heap file storage memory management",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9955263,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d02f208caccf05cf3759594a2d9a65636e7a36fc71f990c633aecdf1a428799d",
          "md5": "b4e42a4fd08a22baf71e3c8649a1f5a8",
          "sha256": "0e378437d1ca14afc5974cfe48bb3d0d9c7f6a3906304d0f7fb5c1620a575339"
        },
        "downloads": -1,
        "filename": "pyheapfile-0.0.1.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "b4e42a4fd08a22baf71e3c8649a1f5a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8490,
        "upload_time": "2021-01-08T08:52:36",
        "upload_time_iso_8601": "2021-01-08T08:52:36.989759Z",
        "url": "https://files.pythonhosted.org/packages/d0/2f/208caccf05cf3759594a2d9a65636e7a36fc71f990c633aecdf1a428799d/pyheapfile-0.0.1.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a71dfad9e9d5ebc32ff2e2f3fdd40a6a5ff07619d631030dd1c1aabf9871a2f",
          "md5": "71cc3451812cf84e3fc673aa35faee87",
          "sha256": "4295d44b88c8970012288673cf220498b8cf45b42969dcc1e35efae3548fc35a"
        },
        "downloads": -1,
        "filename": "pyheapfile-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71cc3451812cf84e3fc673aa35faee87",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17183,
        "upload_time": "2021-01-08T08:52:35",
        "upload_time_iso_8601": "2021-01-08T08:52:35.266960Z",
        "url": "https://files.pythonhosted.org/packages/9a/71/dfad9e9d5ebc32ff2e2f3fdd40a6a5ff07619d631030dd1c1aabf9871a2f/pyheapfile-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35c867c981628b44311cd88a984389fdcd08fd0937f62c87225befafecdbf9e6",
          "md5": "77522910ef93387b470c4a9239040e0f",
          "sha256": "a1bf0fd9895dff2bb78a03c5a70e76aa06c3a84f6079260387069549a559540e"
        },
        "downloads": -1,
        "filename": "pyheapfile-0.0.2.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "77522910ef93387b470c4a9239040e0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8770,
        "upload_time": "2021-02-26T07:06:56",
        "upload_time_iso_8601": "2021-02-26T07:06:56.589723Z",
        "url": "https://files.pythonhosted.org/packages/35/c8/67c981628b44311cd88a984389fdcd08fd0937f62c87225befafecdbf9e6/pyheapfile-0.0.2.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49640a44f10d45a91587a4a1622f2aaaf30110c556f606926dfde575eb54f917",
          "md5": "7fa41a699b0f305f711d5c9f017d7051",
          "sha256": "de853668869849f5254efdcf61f0d485172483193a728d3c9e98ec2a8884b24e"
        },
        "downloads": -1,
        "filename": "pyheapfile-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7fa41a699b0f305f711d5c9f017d7051",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17429,
        "upload_time": "2021-02-26T07:06:55",
        "upload_time_iso_8601": "2021-02-26T07:06:55.431962Z",
        "url": "https://files.pythonhosted.org/packages/49/64/0a44f10d45a91587a4a1622f2aaaf30110c556f606926dfde575eb54f917/pyheapfile-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68b25a54c5d7b27be300005c2724a4910631abcfaf11061af59ce176edada4bd",
          "md5": "ce516f95937bb06b9ed2d79dd51ad7dd",
          "sha256": "4e38aa979e57eff5bbd512ebf99cc16b3556d0d3d00cd302290ac95faa457d3f"
        },
        "downloads": -1,
        "filename": "pyheapfile-0.0.3.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "ce516f95937bb06b9ed2d79dd51ad7dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11905,
        "upload_time": "2021-03-11T10:33:12",
        "upload_time_iso_8601": "2021-03-11T10:33:12.716024Z",
        "url": "https://files.pythonhosted.org/packages/68/b2/5a54c5d7b27be300005c2724a4910631abcfaf11061af59ce176edada4bd/pyheapfile-0.0.3.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dce5006728c3198a0043092e906d883605e988fb3286f21919f9b166d64113ff",
          "md5": "5fb1982dabe4847256377d4527d4f6ca",
          "sha256": "2ab2be114cc1d42e2f228056756fbbc4d45edee85a773d24c99ac6cbd49b847e"
        },
        "downloads": -1,
        "filename": "pyheapfile-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5fb1982dabe4847256377d4527d4f6ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19332,
        "upload_time": "2021-03-11T10:33:11",
        "upload_time_iso_8601": "2021-03-11T10:33:11.569850Z",
        "url": "https://files.pythonhosted.org/packages/dc/e5/006728c3198a0043092e906d883605e988fb3286f21919f9b166d64113ff/pyheapfile-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "576b53226f69c48fbf009fbbaaa6078c2828213898566886509466e444a5bf4f",
          "md5": "64ad4586ecff99be26d685d36992e248",
          "sha256": "92b9b75d4ccc1cdc6f88093b419bffe30a2e141b0143aaa9e078c56f17389484"
        },
        "downloads": -1,
        "filename": "pyheapfile-0.0.4.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "64ad4586ecff99be26d685d36992e248",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12309,
        "upload_time": "2021-04-02T07:01:21",
        "upload_time_iso_8601": "2021-04-02T07:01:21.615942Z",
        "url": "https://files.pythonhosted.org/packages/57/6b/53226f69c48fbf009fbbaaa6078c2828213898566886509466e444a5bf4f/pyheapfile-0.0.4.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "576b53226f69c48fbf009fbbaaa6078c2828213898566886509466e444a5bf4f",
        "md5": "64ad4586ecff99be26d685d36992e248",
        "sha256": "92b9b75d4ccc1cdc6f88093b419bffe30a2e141b0143aaa9e078c56f17389484"
      },
      "downloads": -1,
      "filename": "pyheapfile-0.0.4.linux-x86_64.tar.gz",
      "has_sig": false,
      "md5_digest": "64ad4586ecff99be26d685d36992e248",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12309,
      "upload_time": "2021-04-02T07:01:21",
      "upload_time_iso_8601": "2021-04-02T07:01:21.615942Z",
      "url": "https://files.pythonhosted.org/packages/57/6b/53226f69c48fbf009fbbaaa6078c2828213898566886509466e444a5bf4f/pyheapfile-0.0.4.linux-x86_64.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}