{
  "info": {
    "author": "上海-悠悠",
    "author_email": "283340479@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Pytest",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Testing"
    ],
    "description": "pypi_seed\r\n=========\r\n基于 httprunner 框架的用例结构，我自己开发了一个pytest + yaml 的框架，那么是不是重复造轮子呢？\r\n不可否认 httprunner 框架设计非常优秀，但是也有缺点，httprunner3.x的版本虽然也是基于pytest框架设计，结合yaml执行用例，但是会生成一个py文件去执行。\r\n在辅助函数的引用也很局限，只能获取函数的返回值，不能在yaml中对返回值重新二次取值。\r\n那么我的这个框架，就是为了解决这些痛点。。。。\r\n\r\n本插件可以实现以下优势：\r\n\r\n- 1、基于 pytest 框架安装插件即可使用，环境非常简单\r\n- 2、只需要写 yaml 文件用例即可运行，使用 pytest 运行的命令\r\n- 3、extract 功能实现多个接口步骤的参数关联\r\n- 4、全局仅登录一次，在用例中自动在请求头部添加 Authentication token认证\r\n- 5、用例参数化 parameters 功能实现\r\n- 6、yaml 中调用 fixture 功能实现\r\n- 7、yaml 中调用辅助函数功能使用\r\n- 8、yaml 中调用 hooks 功能\r\n- 9、用例分层机制：API和用例层\r\n- 10、支持 logging 日志\r\n- 11、支持 allure 报告\r\n- 12、支持mysql 数据库增删改查\r\n- 13、支持钉钉机器人通知\r\n\r\n联系我们\r\n--------------------------\r\n\r\n作者-上海悠悠 微信/QQ交流:283340479\r\nblog地址 https://www.cnblogs.com/yoyoketang/\r\n\r\n\r\n版本变更记录\r\n--------------------------\r\n\r\nv1.0.0\r\n发布的第一个版本（已删除)\r\n\r\nv1.0.1  发布时间 2022.11.23\r\n可以安装的第一个版本\r\n\r\n- 1.实现基础的 pytest 命令 执行yaml 文件用例功能\r\n\r\nv1.0.2 发布时间 2022.11.24\r\n\r\n- 1.新增extract 关键字，在接口中提取返回结果\r\n- 2.参数关联，上一个接口的返回值可以作为下个接口的入参\r\n\r\n详细功能参阅 extract 关键字文档\r\n\r\nv1.0.3 发布时间 2022.11.28\r\n\r\n- 1.config 新增 fixtures 关键字，在yaml 用例中传fixture功能和参数化功能\r\n- 2.config 新增 parameters，用例参数化实现\r\n\r\n详细功能参阅 parameters参数化 关键字文档\r\n\r\nv1.0.4 发布时间 2022.11.30\r\nhooks 钩子功能实现\r\n\r\n- 1.request 钩子对请求参数预处理\r\n- 2.response 钩子对返回结果处理\r\n\r\n详细功能参阅 hooks 钩子 关键字文档\r\n\r\nv1.0.5 发布时间 2022.12.05\r\n用例分层机制\r\n\r\n- 1.API 层对接口的描述，可以复用\r\n- 2.Test case 用例层引用API层\r\n\r\nv1.0.6 发布时间 2022.12.06\r\n\r\n一个yaml 中写多个用例，用例步骤可以不是list 类型\r\n\r\n- 1.config 和 teststeps 不是必须了\r\n- 2.可以自定义用例名称，用例可以是一个步骤也可以是多个步骤\r\n\r\nv1.0.7 发布时间 2022.12.08\r\n\r\n新增日志\r\n\r\n- 1.日志默认按日期时间保存到logs目录\r\n- 2.console 日志开启在 pytest.ini 配置，或命令行参数\r\n\r\nv1.0.8 发布时间 2022.12.09\r\n\r\n结合 allure 生成报告\r\nv1.0.9 发布时间 2022.12.09\r\n\r\n全局base_url 配置\r\n\r\n- 1.pytest.ini 新增 `base_url` 配置\r\n- 2.命令行新增 `--base-url` 参数\r\n\r\nv1.1.0 发布时间 2022.12.13\r\n\r\n多环境配置切换\r\n\r\n- 1.config.py 实现多环境配置\r\n- 2.支持mysql 数据库操作\r\n\r\nv1.1.1 发布时间 2022.12.14\r\n\r\n钉钉机器人通知测试结果\r\n- 1.config.py 配置钉钉机器人\r\n- 2.支持mysql requests_function和requests_module 内置fixture功能\r\n\r\nInstallation / 安装\r\n--------------------------\r\n最近环境体验\r\n\r\n- Python 3.8 版本\r\n- Pytest 7.2.0 最新版\r\n\r\npip 安装插件\r\n\r\n::\r\n\r\n    pip install pytest-yaml-yoyo\r\n\r\n\r\n\r\nUsage / 第一个 hello world\r\n--------------------------\r\n\r\nyaml 用例编写规则，跟pytest识别默认规则一样，必须是test 开头的，以`.yml` 结尾的文件才会被识别\r\n\r\n新建一个`test_hello.yml`文件\r\n\r\n::\r\n\r\n    config:\r\n      name: yy\r\n\r\n    teststeps:\r\n    -\r\n      name: demo\r\n      print: hello world\r\n\r\n用例整体结构延续了 httprunner 框架的用例结果，主要是为了大家快速上手，减少新的规则学习\r\n\r\n- config  是必须的里面必须有 name 用例名称，base_url 和 variables 是可选的\r\n- teststeps 用例的步骤，用例步骤是一个array 数组类型，可以有多个步骤\r\n\r\n从上面的运行可以看出，request 不是必须的，我们可以直接调用python内置函数print 去打印一些内容了。\r\n\r\n一个简单的 http 请求\r\n--------------------------\r\n\r\n以`http://www.example.com/` get 请求示例\r\ntest_get_demo.yml\r\n\r\n::\r\n\r\n    config:\r\n      name: get\r\n\r\n    teststeps:\r\n    -\r\n      name: get\r\n      request:\r\n        method: GET\r\n        url: http://httpbin.org/get\r\n      validate:\r\n        - eq: [status_code, 200]\r\n\r\n命令行输入 pytest 后直接运行\r\n\r\n::\r\n\r\n    >pytest\r\n    ======================= test session starts =======================\r\n    platform win32 -- Python 3.8.5, pytest-7.2.0, pluggy-1.0.0\r\n    rootdir: D:\\demo\\yaml_yoyo\r\n    plugins: yaml-yoyo-1.0.1\r\n    collected 2 items\r\n\r\n    test_get_demo.yml .                                          [ 50%]\r\n    test_hello.yml .                                             [100%]\r\n\r\n    ======================== 2 passed in 0.49s ========================\r\n\r\n再来一个post请求\r\n--------------------------\r\n\r\ntest_post_demo.yml\r\n::\r\n\r\n    config:\r\n      name: post示例\r\n\r\n    teststeps:\r\n    -\r\n      name: post\r\n      request:\r\n        method: POST\r\n        url: http://httpbin.org/post\r\n        json:\r\n          username: test\r\n          password: \"123456\"\r\n      validate:\r\n        - eq: [status_code, 200]\r\n        - eq: [headers.Server, gunicorn/19.9.0]\r\n        - eq: [$..username, test]\r\n        - eq: [body.json.username, test]\r\n\r\nvalidate校验\r\n--------------------------\r\n\r\n比如返回的response内容\r\n\r\n::\r\n\r\n    HTTP/1.1 200 OK\r\n    Date: Wed, 23 Nov 2022 06:26:25 GMT\r\n    Content-Type: application/json\r\n    Content-Length: 483\r\n    Connection: keep-alive\r\n    Server: gunicorn/19.9.0\r\n    Access-Control-Allow-Origin: *\r\n    Access-Control-Allow-Credentials: true\r\n\r\n    {\r\n      \"args\": {},\r\n      \"data\": \"{\\r\\n    \\\"username\\\": \\\"test\\\",\\r\\n    \\\"password\\\": \\\"123456\\\"\\r\\n}\",\r\n      \"files\": {},\r\n      \"form\": {},\r\n      \"headers\": {\r\n        \"Content-Length\": \"55\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Host\": \"httpbin.org\",\r\n        \"User-Agent\": \"Fiddler\",\r\n        \"X-Amzn-Trace-Id\": \"Root=1-637dbd11-7d9943ba1fb93a9331f6cf8d\"\r\n      },\r\n      \"json\": {\r\n        \"password\": \"123456\",\r\n        \"username\": \"test\"\r\n      },\r\n      \"origin\": \"198.187.30.113\",\r\n      \"url\": \"http://httpbin.org/post\"\r\n    }\r\n\r\n校验方式延续了httprunner的校验语法，可以支持response取值对象：status_code, url, ok, headers, cookies, text, json, encoding\r\n其中返回的是json格式，那么可以支持\r\n\r\n- jmespath 取值语法: `body.json.username`\r\n- jsonpath 语法: `$..username`\r\n- re 正则语法\r\n\r\n如果返回的不是json格式，那么可以用正则取值\r\n\r\n变量的声明与引用\r\n--------------------------\r\n\r\n变量的声明，只支持在 config 声明整个yml文件的全局变量（不支持单个step的变量，减少学习成本）\r\n在 httprunner 里面变量引用语法是 `$user`, 引用函数是`${function()}`\r\n我这里统一改成了一个语法变量引用 `${var}` 和 引用函数`${function()}`\r\n（表面上没多大变量，实际上功能强大了很多，使用了强大的 jinja2 模板引擎)\r\n\r\n::\r\n\r\n    config:\r\n      name: post示例\r\n      variables:\r\n        username: test\r\n        password: \"123456\"\r\n\r\n    teststeps:\r\n    -\r\n      name: post\r\n      request:\r\n        method: POST\r\n        url: http://httpbin.org/post\r\n        json:\r\n          username: ${username}\r\n          password: ${password}\r\n      validate:\r\n        - eq: [status_code, 200]\r\n        - eq: [headers.Server, gunicorn/19.9.0]\r\n        - eq: [$..username, test]\r\n        - eq: [body.json.username, test]\r\n\r\nextract 提取接口返回参数关联\r\n--------------------------------\r\n\r\n在自动化用例中，我们经常会看到有人提问，上一个接口的返回的结果，如何取出来给到下个接口的入参。\r\n我们用 extract 关键字提取接口的返回结果（需要更新v1.0.2版本）。\r\n\r\n\r\n举个例子\r\n用个post请求`http://httpbin.org/post`\r\n\r\n::\r\n\r\n    POST http://httpbin.org/post HTTP/1.1\r\n    User-Agent: Fiddler\r\n    Host: httpbin.org\r\n    Content-Length: 0\r\n\r\n    HTTP/1.1 200 OK\r\n    Date: Thu, 24 Nov 2022 06:18:03 GMT\r\n    Content-Type: application/json\r\n    Content-Length: 320\r\n    Connection: keep-alive\r\n    Server: gunicorn/19.9.0\r\n    Access-Control-Allow-Origin: *\r\n    Access-Control-Allow-Credentials: true\r\n\r\n    {\r\n      \"args\": {},\r\n      \"data\": \"\",\r\n      \"files\": {},\r\n      \"form\": {},\r\n      \"headers\": {\r\n        \"Content-Length\": \"0\",\r\n        \"Host\": \"httpbin.org\",\r\n        \"User-Agent\": \"Fiddler\",\r\n        \"X-Amzn-Trace-Id\": \"Root=1-637f0c9a-23b419f4180f6b843ba941af\"\r\n      },\r\n      \"json\": null,\r\n      \"origin\": \"66.112.216.24\",\r\n      \"url\": \"http://httpbin.org/post\"\r\n    }\r\n\r\n比如我需要提取返回接口里面的url参数，那么我们用extract 关键字\r\n\r\ntest_demo.yml 文件示例\r\n\r\n::\r\n\r\n    config:\r\n      name: post示例\r\n\r\n    teststeps:\r\n    -\r\n      name: post\r\n      request:\r\n        method: POST\r\n        url: http://httpbin.org/post\r\n        json:\r\n          username: test\r\n          password: \"123456\"\r\n      extract:\r\n          url:  body.url\r\n      validate:\r\n        - eq: [status_code, 200]\r\n        - eq: [headers.Server, gunicorn/19.9.0]\r\n        - eq: [$..username, test]\r\n        - eq: [body.json.username, test]\r\n\r\n参数关联\r\n--------------------------\r\n\r\n\r\n上一个接口提取到了url 变量，接下来在下个接口中引用`${url}`\r\n\r\n::\r\n\r\n    config:\r\n      name: post示例\r\n\r\n    teststeps:\r\n    -\r\n      name: post\r\n      request:\r\n        method: POST\r\n        url: http://httpbin.org/post\r\n        json:\r\n          username: test\r\n          password: \"123456\"\r\n      extract:\r\n          url:  body.url\r\n      validate:\r\n        - eq: [status_code, 200]\r\n        - eq: [headers.Server, gunicorn/19.9.0]\r\n        - eq: [$..username, test]\r\n        - eq: [body.json.username, test]\r\n\r\n    -\r\n      name: post\r\n      request:\r\n        method: GET\r\n        url: http://httpbin.org/get\r\n        headers:\r\n          url: ${url}\r\n      validate:\r\n        - eq: [status_code, 200]\r\n\r\n于是看到请求报文中引用成功\r\n\r\n::\r\n\r\n    GET http://httpbin.org/get HTTP/1.1\r\n    Host: httpbin.org\r\n    User-Agent: python-requests/2.28.1\r\n    Accept-Encoding: gzip, deflate, br\r\n    Accept: */*\r\n    Connection: keep-alive\r\n    url: http://httpbin.org/post\r\n\r\nextract 提取结果二次取值\r\n--------------------------\r\n\r\n我们在前面提到不能在yaml中对返回值重新二次取值。,\r\n这也是一些同学提到的问题，对于提取的结果，我想继续取值，比如他是一个字符串，在python中可以用切片取值\r\n那么，在 yaml 中如何实现？\r\n\r\n我重新设计的这个框架中，就可以支持python语法，直接用切片取值\r\n\r\n::\r\n\r\n    headers:\r\n          url: ${url[:4]}\r\n\r\n\r\n用例分层\r\n--------------------------\r\n\r\n当我们测试流程类的接口，需反复去调用同一个接口，就会想到复用API，在代码里面可以写成函数去调用。\r\n那么在yaml 文件中，我们可以把单个API写到一个yaml 文件，测试用例去调用导入API。\r\n\r\n我这里只分2层：API 层 和 Test case 用例层\r\n\r\n- API 层: 描述接口request请求，可以带上validate 基本的校验\r\n- Test case 用例层: 用例层多个步骤按顺序引用API\r\n\r\nAPI 层示例\r\n--------------------------\r\nAPI 层只做接口的描述，一般放到项目根目录api目录下\r\n\r\napi/login.yaml 示例\r\n\r\n::\r\n\r\n    name: post\r\n    request:\r\n        method: POST\r\n        url: http://httpbin.org/post\r\n        json:\r\n            username: ${username}\r\n            password: \"123456\"\r\n    validate:\r\n        - eq: [status_code, 200]\r\n\r\n\r\n如果有需要用到变量，比如登录用户名在不同用例中会用到不同的账号，那么可以使用变量 `${username}`\r\n需注意的是，API 层不支持单独运行，因为它只是用例的一个部分，不能当成用例去执行，用例执行需使用 `test_*.yml` 命名\r\n\r\nTestCase 层\r\n--------------------------\r\n用例层通过api 关键字导入需要的API，导入的路径是相对路径，需根据项目的根目录去导入。\r\n比如我的项目结构是这样的\r\n\r\n::\r\n\r\n    ├─api\r\n       └─ login.yml\r\n    ├─testcase\r\n       └─ test_login.yml\r\n    └─conftest.py\r\n    └─pytest.ini\r\n\r\n\r\n那么不管用例文件`test_*.yml`在哪个目录，都是以项目根目录去导入API 的yaml文件\r\n\r\n::\r\n\r\n    config:\r\n        name: login case\r\n        base_url: http://127.0.0.1:8000\r\n        variables:\r\n            username: \"test123\"\r\n            password: \"123456\"\r\n\r\n\r\n    teststeps:\r\n    -\r\n        name: step login1\r\n        api: api/login.yml\r\n        extract:\r\n            url:  body.url\r\n        validate:\r\n            - eq: [status_code, 200]\r\n            - eq: [ok, true]\r\n    -\r\n        name: step login2\r\n        api: api/login.yml\r\n\r\n\r\n运行用例也是在项目根目录去执行 pytest 运行\r\n\r\n::\r\n\r\n    pytest testcase\r\n\r\n\r\n重新定义 yaml 用例格式\r\n--------------------------\r\n\r\n一个yaml 文件中可以写多个用例，每个用例相当于 pytest 的一个函数，\r\n用例名称最好是test开头，如果不是test开头，也会自动拼接成test开头的\r\n\r\n示例\r\n\r\n::\r\n\r\n    test1:\r\n        name: 用例1\r\n        print: hello 11111\r\n\r\n    test2:\r\n        name: 用例2\r\n        print: hello 22222\r\n\r\n    test3:\r\n        name: 用例3\r\n        print: hello 3333\r\n\r\n为了框架的可扩展性，config 和 teststeps 都不是必须的了，当然以前的格式还是会兼容\r\n\r\n::\r\n\r\n    config:\r\n        name: demo\r\n\r\n    teststeps:\r\n    -\r\n      name: GET请求示例\r\n      request:\r\n        method: GET\r\n        url: http://httpbin.org/get\r\n      validate:\r\n        - eq: [status_code, 200]\r\n\r\n    test1:\r\n        name: 用例1\r\n        print: hello 11111\r\n\r\n    test2:\r\n        name: 用例2\r\n        print: hello 22222\r\n\r\n用例部分支持2种格式，可以是一个键值对格式\r\n\r\n::\r\n\r\n    test1:\r\n        name: 用例1\r\n        print: hello 11111\r\n\r\n\r\n也可以是一个list\r\n\r\n\r\n::\r\n\r\n    test1:\r\n     -\r\n        name: 用例1\r\n        print: hello 11111\r\n\r\n如果用多个步骤步骤需要执行，那么用例应该是一个list，会按顺序去执行\r\n\r\n::\r\n\r\n    config:\r\n        name: demo\r\n\r\n\r\n    test1:\r\n        name: 用例1\r\n        print: hello 11111\r\n\r\n    test2:\r\n    -\r\n        name: get\r\n        request:\r\n            method: GET\r\n            url: http://httpbin.org/get\r\n        validate:\r\n          - eq: [status_code, 200]\r\n\r\n    -\r\n        name: post\r\n        request:\r\n            method: POST\r\n            url: http://httpbin.org/post\r\n            json:\r\n              username: test\r\n              password: \"123456\"\r\n        validate:\r\n          - eq: [status_code, 200]\r\n\r\nlogging 日志\r\n--------------------------\r\n\r\npytest 的日志分2个部分：\r\n\r\n- console 控制台输出的日志\r\n- log_file  保存到本地文件的日志\r\n\r\n本插件默认情况下会记录运行日志保存在项目根目录logs下，以当前时间保存txt文本日志内容。\r\n日志默认保存info级别。\r\nconsole 控制台默认不输出日志\r\n\r\n开启 console 控制台日志\r\n\r\n控制台直接运行 pytest 是不会用日志输出的，因为默认仅输出 warning 以上的级别日志\r\n有3种方式启动 console 日志\r\n\r\n方法1：命令行带上`--log-cli-level`参数，设置日志级别\r\n\r\n::\r\n\r\n  >pytest --log-cli-level=info\r\n\r\n方法2： pytest.ini 配置开启日志，并且设置日志级别\r\n\r\n::\r\n\r\n    [pytest]\r\n\r\n    log_cli = true\r\n    log_cli_level = info\r\n\r\n方法3： pytest -o方式重写（即覆盖ini文件中的log相关的命令行参数）\r\n\r\n::\r\n\r\n    pytest -o log_cli=true -o log_cli_level=INFO\r\n\r\n\r\n即可在控制台看到日志\r\n\r\n::\r\n\r\n    -------------------------------------------- live log call --------------------------------------------\r\n    2022-12-08 08:30:34 [INFO]: 执行文件-> test_demo.yml\r\n    2022-12-08 08:30:34 [INFO]: base_url-> None\r\n    2022-12-08 08:30:34 [INFO]: variables-> {}\r\n    2022-12-08 08:30:34 [INFO]: 运行 teststeps\r\n    2022-12-08 08:30:34 [INFO]: --------  request info ----------\r\n    POST http://httpbin.org/post\r\n    {\r\n      \"method\": \"POST\",\r\n      \"url\": \"http://httpbin.org/post\",\r\n      \"json\": {\r\n        \"username\": \"test\",\r\n        \"password\": \"123456\"\r\n      }\r\n    }\r\n    2022-12-08 08:30:35 [INFO]: ------  response info  200 OK  0.495961s------\r\n\r\n\r\n自定义 console 控制台日志\r\n\r\n日志的格式和时间格式也可以自定义设置\r\n\r\n::\r\n\r\n    [pytest]\r\n\r\n    log_cli = true\r\n    log_cli_level = info\r\n    log_cli_format = %(asctime)s %(filename)s:%(lineno)s [%(levelname)s]: %(message)s\r\n    log_cli_date_format = %Y-%m-%d %H:%M:%S\r\n\r\n\r\n自定义保存日志文件\r\n\r\n本插件默认情况下会记录运行日志保存在项目根目录logs下，以当前时间保存txt文本日志内容。\r\n日志默认保存info级别。\r\n\r\n如果你想改变这些默认的行为，自定义日志文件目录和名称，可以在pytest.ini 配置日志文件\r\n(log_file 相关的结果是保存日志文件到本地)\r\n\r\n::\r\n\r\n    [pytest]\r\n\r\n    log_cli = true\r\n    log_cli_level = info\r\n    log_cli_format = %(asctime)s %(filename)s:%(lineno)s [%(levelname)s]: %(message)s\r\n    log_cli_date_format = %Y-%m-%d %H:%M:%S\r\n\r\n    log_file = ./yoyo.log\r\n    log_file_level = debug\r\n    log_file_format = %(asctime)s %(filename)s:%(lineno)s [%(levelname)s]: %(message)s\r\n    log_file_date_format = %Y-%m-%d %H:%M:%S\r\n\r\n\r\n命令行参数配置\r\n\r\nlog日志的配置也可以用命令行参数配置(pytest -h可以查看)\r\n\r\n::\r\n\r\n     --no-print-logs       　　　　　　 disable printing caught logs on failed tests.\r\n     --log-level=LOG_LEVEL     　　　　logging level used by the logging module\r\n     --log-format=LOG_FORMAT　　　　　　log format as used by the logging module.\r\n     --log-date-format=LOG_DATE_FORMAT　　　　　　log date format as used by the logging module.\r\n     --log-cli-level=LOG_CLI_LEVEL　　　　　　　　cli logging level.\r\n     --log-cli-format=LOG_CLI_FORMAT　　　　　　　　log format as used by the logging module.\r\n     --log-cli-date-format=LOG_CLI_DATE_FORMAT　　　　　　log date format as used by the logging module.\r\n     --log-file=LOG_FILE   　　　　　　　　　　　　path to a file when logging will be written to.\r\n     --log-file-level=LOG_FILE_LEVEL　　　　　　log file logging level.\r\n     --log-file-format=LOG_FILE_FORMAT　　　　　　log format as used by the logging module.\r\n     --log-file-date-format=LOG_FILE_DATE_FORMAT　　　　　　log date format as used by the logging module.\r\n\r\n\r\n还可以使用 `pytest -o` 方式重写（即覆盖 ini 文件中的 log 相关的命令行参数）\r\n\r\n::\r\n\r\n  pytest pytest  test_log.py -o log_cli=true -o log_cli_level=INFO\r\n\r\n\r\nallure  报告\r\n-----------------------\r\n\r\n本插件是基于pytest框架开发的，所以pytest 的插件都能使用，生成报告可以用到 allure 报告\r\nallure 报告功能在 v1.0.8 版本上实现\r\n\r\nallure 命令行工具\r\n\r\n- allure 是一个命令行工具，需要去github上下载最新版[https://github.com/allure-framework/allure2/releases](https://github.com/allure-framework/allure2/releases)\r\n- allure  命令行工具是需要依赖jdk 环境，环境内容自己去搭建了\r\n\r\n生成 allure 报告\r\n\r\n在用例所在的目录执行命令, `--alluredir` 是指定报告生成的目录\r\n\r\n::\r\n\r\n    pytest --alluredir ./report\r\n\r\n\r\n打开allure 报告执行命令\r\n::\r\n\r\n    allure serve ./report\r\n\r\n全局 base_url\r\n---------------------\r\n\r\n一个完整的url 地址由环境地址和接口地址拼接而成，环境地址是可变的，可以部署到测试环境，uat联调环境等不同的环境。\r\n不管部署到哪个环境，接口的地址是不可变的，通常需要一个全局base_url 地址做到环境可切换。\r\npip 安装插件\r\n\r\n::\r\n\r\n    pip install pytest-yaml-yoyo\r\n\r\n\r\nbase_url 全局配置功能在 v1.0.9 版本上实现\r\n\r\n在接口测试中，通常会把环境 base_url 地址独立出来\r\n比如一个完整的请求`http://httpbin.org/get` 那么可以分成环境地址`http://httpbin.org` 和 接口地址 `/get`\r\n\r\n在 yaml 用例中，可以把 base_url 单独拿出来放到 config 下\r\n\r\n::\r\n\r\n    config:\r\n      base_url: http://httpbin.org\r\n\r\n    get示例:\r\n      name: get demo\r\n      request:\r\n        method: GET\r\n        url: /get\r\n      validate:\r\n        - eq: [status_code, 200]\r\n\r\n    post示例:\r\n      name: get demo\r\n      request:\r\n        method: POST\r\n        url: /post\r\n      validate:\r\n        - eq: [status_code, 200]\r\n\r\n\r\n全局 base_url 配置\r\n\r\n从项目的角度讲，测试项目接口的 base_url 都是一样的，所以我们只需全局设置一个就行了，不需要每个yaml 文件中重复去写。\r\n于是可以在 pytest.ini 里面配置全局base_url\r\n\r\n::\r\n\r\n    [pytest]\r\n\r\n    base_url = http://httpbin.org\r\n\r\n\r\n那么yaml用例就不需要写 base_url 了，默认会引用 pytest.ini 的全局配置\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yoyoketang/pytest-yaml-yoyo",
    "keywords": "pytest,py.test,pytest-yaml,pytest-yaml-yoyo",
    "license": "proprietary",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-yaml-yoyo",
    "package_url": "https://pypi.org/project/pytest-yaml-yoyo/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytest-yaml-yoyo/",
    "project_urls": {
      "Homepage": "https://github.com/yoyoketang/pytest-yaml-yoyo"
    },
    "release_url": "https://pypi.org/project/pytest-yaml-yoyo/1.1.9/",
    "requires_dist": [
      "Jinja2 (>=3.1.2)",
      "jmespath (>=0.9.5)",
      "jsonpath (>=0.82)",
      "pytest (>=7.2.0)",
      "PyYAML (>=6.0)",
      "requests (==2.18.4)",
      "allure-pytest (>=2.12.0)",
      "pymysql (>=1.0.2)",
      "DingtalkChatbot (>=1.5.7)",
      "Faker (>=15.3.4)",
      "requests-toolbelt (>=0.10.1)"
    ],
    "requires_python": ">=3.8",
    "summary": "http/https API run by yaml",
    "version": "1.1.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17377816,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc6ffc5fbf026eb6b17e5198570bf68dab1f312ba81ac72dc758ba3cb9194a32",
          "md5": "175594c9d262d0af4fbf38d58d0aa6c6",
          "sha256": "e3fa725c9e9a71494a9ea11f65f97a40fbb5e3c20116932fb7b7fe985dff2ed8"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "175594c9d262d0af4fbf38d58d0aa6c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 7156,
        "upload_time": "2022-11-23T06:19:32",
        "upload_time_iso_8601": "2022-11-23T06:19:32.844855Z",
        "url": "https://files.pythonhosted.org/packages/cc/6f/fc5fbf026eb6b17e5198570bf68dab1f312ba81ac72dc758ba3cb9194a32/pytest-yaml-yoyo-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b07d03437879fe789711cf93cba343a7071b234278c01abbf4e731e163819362",
          "md5": "831bfc2fec2fa45a7f16061ef454c540",
          "sha256": "48f90e9c1143d46cf0387a09bd9091f0f512d441aaaaa46466cca64f81f19f6d"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "831bfc2fec2fa45a7f16061ef454c540",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10232,
        "upload_time": "2022-11-24T06:00:09",
        "upload_time_iso_8601": "2022-11-24T06:00:09.641569Z",
        "url": "https://files.pythonhosted.org/packages/b0/7d/03437879fe789711cf93cba343a7071b234278c01abbf4e731e163819362/pytest-yaml-yoyo-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73ed2987bc55ce3d744a34920e0c6c1423b9402559bbfd20e895087d21b506c4",
          "md5": "a9bb3e62db63e74fc153b4502598e456",
          "sha256": "6f2c062e6804960acd00fcd9f81f041a03a0dbc5f46b0f0610d259d56a208f05"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a9bb3e62db63e74fc153b4502598e456",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11787,
        "upload_time": "2022-11-28T06:53:11",
        "upload_time_iso_8601": "2022-11-28T06:53:11.702401Z",
        "url": "https://files.pythonhosted.org/packages/73/ed/2987bc55ce3d744a34920e0c6c1423b9402559bbfd20e895087d21b506c4/pytest-yaml-yoyo-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e482226cb19ee2bc0d2b729b07cf62e142bd6d6922fc744827d012d03530bb0",
          "md5": "9a8139461cee23f1169f3b1c653760a3",
          "sha256": "6b10672269109ba1f1c4f2777c9b0378a4cf0ad4e32f6ce904f73963d16a9ac8"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9a8139461cee23f1169f3b1c653760a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12822,
        "upload_time": "2022-11-30T06:21:51",
        "upload_time_iso_8601": "2022-11-30T06:21:51.543740Z",
        "url": "https://files.pythonhosted.org/packages/7e/48/2226cb19ee2bc0d2b729b07cf62e142bd6d6922fc744827d012d03530bb0/pytest-yaml-yoyo-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0da4ae8af74f6a740f81de42e2e0343558e18efc9e93aca0ff7115ee01954ad9",
          "md5": "7fd834df36961e6d994ffc4b1049dbe8",
          "sha256": "f11525cc3873f0229ae5af0acb1cbe649e927cd5430d0a522ee6002b27ab6ea2"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7fd834df36961e6d994ffc4b1049dbe8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 17772,
        "upload_time": "2022-12-05T02:49:48",
        "upload_time_iso_8601": "2022-12-05T02:49:48.253765Z",
        "url": "https://files.pythonhosted.org/packages/0d/a4/ae8af74f6a740f81de42e2e0343558e18efc9e93aca0ff7115ee01954ad9/pytest-yaml-yoyo-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a8f16198a3eae599d7b940b020f7ce3ec17b00097d870ee1cd39573c47a7b9f",
          "md5": "c5bb0860d671ae2c74ed18d8eb87e041",
          "sha256": "f2fd7e732b31d4b784925b122e536978615159d283bca1efeaf8ff627335d794"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c5bb0860d671ae2c74ed18d8eb87e041",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 19028,
        "upload_time": "2022-12-06T05:23:38",
        "upload_time_iso_8601": "2022-12-06T05:23:38.651809Z",
        "url": "https://files.pythonhosted.org/packages/9a/8f/16198a3eae599d7b940b020f7ce3ec17b00097d870ee1cd39573c47a7b9f/pytest-yaml-yoyo-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ef7d1b9e17732debb4c1cf59c6038b28dba7388e062431fda7503d2913c6b89",
          "md5": "d936ff53b8cd2360f79cc6c7d03d6309",
          "sha256": "56cb8544216179e6aeaeef9091339f3c4b7f4ea4b344d81c912a61137bdb8278"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "d936ff53b8cd2360f79cc6c7d03d6309",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 19756,
        "upload_time": "2022-12-08T01:17:04",
        "upload_time_iso_8601": "2022-12-08T01:17:04.308440Z",
        "url": "https://files.pythonhosted.org/packages/7e/f7/d1b9e17732debb4c1cf59c6038b28dba7388e062431fda7503d2913c6b89/pytest-yaml-yoyo-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4832f82ba68f68e020fb0ada0cc28e72173c349c8a6ad3c43c73be8df18cbcb",
          "md5": "bbd8ae4cb190bf311fc8adf3de49fbcf",
          "sha256": "47686fbee051b7de81d026bce4e0cf762d93eb5dd29a77bd009bfe0fcfadfc1b"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "bbd8ae4cb190bf311fc8adf3de49fbcf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 22915,
        "upload_time": "2022-12-09T01:13:18",
        "upload_time_iso_8601": "2022-12-09T01:13:18.946809Z",
        "url": "https://files.pythonhosted.org/packages/b4/83/2f82ba68f68e020fb0ada0cc28e72173c349c8a6ad3c43c73be8df18cbcb/pytest-yaml-yoyo-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5480cdc5220d480359614bad7f15eff8d1c6f12352f029b2d4d79df427b0ac2",
          "md5": "3f1e0074d8efa4f2aa08f167faf5e237",
          "sha256": "de719d92b998942b88c1f1e7478ddeb4b7a51e2e28133f23d3ed13bc4a529736"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "3f1e0074d8efa4f2aa08f167faf5e237",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 24158,
        "upload_time": "2022-12-12T01:35:38",
        "upload_time_iso_8601": "2022-12-12T01:35:38.537849Z",
        "url": "https://files.pythonhosted.org/packages/f5/48/0cdc5220d480359614bad7f15eff8d1c6f12352f029b2d4d79df427b0ac2/pytest-yaml-yoyo-1.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b32e22635b4efd389f7b9847cda326f5efb5ec0b119947d18354651ad99598c",
          "md5": "b48f9487017a50f271822889c169e385",
          "sha256": "a193ee6000ebee781f03c642232c72483d5583f5ce57f6db4c21e93fe1616004"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b48f9487017a50f271822889c169e385",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 25388,
        "upload_time": "2022-12-13T03:06:02",
        "upload_time_iso_8601": "2022-12-13T03:06:02.916503Z",
        "url": "https://files.pythonhosted.org/packages/0b/32/e22635b4efd389f7b9847cda326f5efb5ec0b119947d18354651ad99598c/pytest-yaml-yoyo-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fc782405da8b4aeeedc87b72f8bc5a8e88f4951e57e4c452d472371fe0c1bdf",
          "md5": "61a134a4559b030476ab01a2659132dd",
          "sha256": "c4dae57fc9052a3645dcf20fd6bfb86951b2b1a0ab283c170008661f6374a51e"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "61a134a4559b030476ab01a2659132dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27100,
        "upload_time": "2022-12-14T00:33:49",
        "upload_time_iso_8601": "2022-12-14T00:33:49.925848Z",
        "url": "https://files.pythonhosted.org/packages/0f/c7/82405da8b4aeeedc87b72f8bc5a8e88f4951e57e4c452d472371fe0c1bdf/pytest-yaml-yoyo-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8963551378ef63228426da25c3c2a4a036a49380b389dd5d4d4b49141c0c33ef",
          "md5": "64845e33cebf4704073243fe134f577f",
          "sha256": "1b9871ea711ff4e7804436c8ca8f65eef6b206d35fc008ace15049d3205254fd"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "64845e33cebf4704073243fe134f577f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27515,
        "upload_time": "2022-12-16T14:52:59",
        "upload_time_iso_8601": "2022-12-16T14:52:59.347516Z",
        "url": "https://files.pythonhosted.org/packages/89/63/551378ef63228426da25c3c2a4a036a49380b389dd5d4d4b49141c0c33ef/pytest-yaml-yoyo-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9557e17304c767a01dc16cfaa96d12b5b145f2475912605a0621756c07bf1f7a",
          "md5": "fc81422ec0be989daa95bc90e1ac106f",
          "sha256": "b3c3f0798bd6c56cd5b53a3724b42919f40458715b55ed527f88f4ba38612069"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fc81422ec0be989daa95bc90e1ac106f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 28032,
        "upload_time": "2022-12-17T07:56:56",
        "upload_time_iso_8601": "2022-12-17T07:56:56.662986Z",
        "url": "https://files.pythonhosted.org/packages/95/57/e17304c767a01dc16cfaa96d12b5b145f2475912605a0621756c07bf1f7a/pytest-yaml-yoyo-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a808dc2c66651d72684361e3e164ef64776ded8d4df5216d041fd83c70fe505",
          "md5": "9f9742cd0c8f70f75e3e904e6d260796",
          "sha256": "398c079f5f2bdd6ec85faee26f8d6974139341e9ec611d91f051cd48cac7c420"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9f9742cd0c8f70f75e3e904e6d260796",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 28264,
        "upload_time": "2023-02-13T04:53:58",
        "upload_time_iso_8601": "2023-02-13T04:53:58.617571Z",
        "url": "https://files.pythonhosted.org/packages/1a/80/8dc2c66651d72684361e3e164ef64776ded8d4df5216d041fd83c70fe505/pytest-yaml-yoyo-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4589cb4e2297dd520deeb7138e0a8942a3e65339ca24ae73ccdde6c66c40afd7",
          "md5": "af5615d72a637c58cf21bf5ec139204c",
          "sha256": "3afcb67d1e8abffb54c36b759f69c1f0aecd3d18802be53b810e8592c91785e2"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "af5615d72a637c58cf21bf5ec139204c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 30308,
        "upload_time": "2023-02-15T14:43:59",
        "upload_time_iso_8601": "2023-02-15T14:43:59.055542Z",
        "url": "https://files.pythonhosted.org/packages/45/89/cb4e2297dd520deeb7138e0a8942a3e65339ca24ae73ccdde6c66c40afd7/pytest-yaml-yoyo-1.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb194138d25326bcb7c9befeeadde4ada7f62813287cb4d7fbe4d5fbf5770522",
          "md5": "28998ea8779aab6c8c68c8e799eb27bd",
          "sha256": "0fb0912ca63826826311a0e2fc201074ed0713435ac9c38a9e7596e1eac55fd8"
        },
        "downloads": -1,
        "filename": "pytest_yaml_yoyo-1.1.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28998ea8779aab6c8c68c8e799eb27bd",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 28349,
        "upload_time": "2023-02-17T01:20:05",
        "upload_time_iso_8601": "2023-02-17T01:20:05.524307Z",
        "url": "https://files.pythonhosted.org/packages/bb/19/4138d25326bcb7c9befeeadde4ada7f62813287cb4d7fbe4d5fbf5770522/pytest_yaml_yoyo-1.1.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49131b39b989d482fa7b67c3e097c338e1d1504272860da07b8cfe68ae5b14be",
          "md5": "13de034e00fa5e2bd9526b1091781d0f",
          "sha256": "e282365da7302346f08aa4b069450582a3a2fda2d23bcf0845c98c05abcfbd3e"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "13de034e00fa5e2bd9526b1091781d0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 30441,
        "upload_time": "2023-02-17T01:20:09",
        "upload_time_iso_8601": "2023-02-17T01:20:09.932462Z",
        "url": "https://files.pythonhosted.org/packages/49/13/1b39b989d482fa7b67c3e097c338e1d1504272860da07b8cfe68ae5b14be/pytest-yaml-yoyo-1.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6af93d910ca47a51b8707fcea2507a9592240a1cf33d5aeb83a88f1cb08167f",
          "md5": "9d9886f0c1f270ba50a9805e25fadd7b",
          "sha256": "67b29ba46e2861f7d4da1dee5b00a7ec2d8df6e8863c9efc025b1e4bf38f9dae"
        },
        "downloads": -1,
        "filename": "pytest_yaml_yoyo-1.1.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d9886f0c1f270ba50a9805e25fadd7b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 28478,
        "upload_time": "2023-03-13T07:25:02",
        "upload_time_iso_8601": "2023-03-13T07:25:02.583540Z",
        "url": "https://files.pythonhosted.org/packages/d6/af/93d910ca47a51b8707fcea2507a9592240a1cf33d5aeb83a88f1cb08167f/pytest_yaml_yoyo-1.1.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce2cde449b73f0bdf9ac6994d488ed8675f84caf5619c3d93cdf085a17515b3c",
          "md5": "ab74b1abc629803f04b3554d0c921813",
          "sha256": "ef7aebba05814d8c7b6cc6490aed0c6ef9cf0670434818fb98b8fcfcc4219557"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "ab74b1abc629803f04b3554d0c921813",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 30520,
        "upload_time": "2023-03-13T07:25:05",
        "upload_time_iso_8601": "2023-03-13T07:25:05.483876Z",
        "url": "https://files.pythonhosted.org/packages/ce/2c/de449b73f0bdf9ac6994d488ed8675f84caf5619c3d93cdf085a17515b3c/pytest-yaml-yoyo-1.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9841a7f9898ca4357465c4ae812e8d8f27083def8758c700d14cfdd265a2523d",
          "md5": "e19459974db06bec51a0dc8a9b6083b5",
          "sha256": "c1a771ecd0218e3d980fbbd56a5284e16f22264f114897f2dd822a926b39b5cd"
        },
        "downloads": -1,
        "filename": "pytest_yaml_yoyo-1.1.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e19459974db06bec51a0dc8a9b6083b5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 28995,
        "upload_time": "2023-03-17T11:32:12",
        "upload_time_iso_8601": "2023-03-17T11:32:12.464117Z",
        "url": "https://files.pythonhosted.org/packages/98/41/a7f9898ca4357465c4ae812e8d8f27083def8758c700d14cfdd265a2523d/pytest_yaml_yoyo-1.1.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9bd9825206e0af8c7a5ea0f141fac78f343c6d4a15a4889509a5b0309ebd50b",
          "md5": "f2e0c2aa65038abcb500073fb3185c45",
          "sha256": "67b9b6d4548f695fcf55e0ad4535e2660631373b910d2d4c249121b006ffcb20"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "f2e0c2aa65038abcb500073fb3185c45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 30903,
        "upload_time": "2023-03-17T11:32:14",
        "upload_time_iso_8601": "2023-03-17T11:32:14.781396Z",
        "url": "https://files.pythonhosted.org/packages/f9/bd/9825206e0af8c7a5ea0f141fac78f343c6d4a15a4889509a5b0309ebd50b/pytest-yaml-yoyo-1.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ada1d346021fdfb7d7123a82bf3e98a93b443a9f93567fa62e7e6a791f3111d",
          "md5": "ee86c51be8e5895462a0f2a26a97c3eb",
          "sha256": "83f1ac6ab7721b1661b9ad2fc07a4c87788f3c36edb476a6dd0a3cb78970c8f8"
        },
        "downloads": -1,
        "filename": "pytest_yaml_yoyo-1.1.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee86c51be8e5895462a0f2a26a97c3eb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 29552,
        "upload_time": "2023-03-21T11:01:15",
        "upload_time_iso_8601": "2023-03-21T11:01:15.118723Z",
        "url": "https://files.pythonhosted.org/packages/4a/da/1d346021fdfb7d7123a82bf3e98a93b443a9f93567fa62e7e6a791f3111d/pytest_yaml_yoyo-1.1.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f4e53eace1032e054a0e45e3ad0b6f2ca40cd9df5dce97c976710e72fc58ccb",
          "md5": "0aaaa7b81f9e501fd73838e2358eaf84",
          "sha256": "be264e1eeadebd4caa8100f29e82017183c4fc72492fe38b2ba4ee5e52e19813"
        },
        "downloads": -1,
        "filename": "pytest-yaml-yoyo-1.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "0aaaa7b81f9e501fd73838e2358eaf84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 31406,
        "upload_time": "2023-03-21T11:01:22",
        "upload_time_iso_8601": "2023-03-21T11:01:22.868852Z",
        "url": "https://files.pythonhosted.org/packages/0f/4e/53eace1032e054a0e45e3ad0b6f2ca40cd9df5dce97c976710e72fc58ccb/pytest-yaml-yoyo-1.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4ada1d346021fdfb7d7123a82bf3e98a93b443a9f93567fa62e7e6a791f3111d",
        "md5": "ee86c51be8e5895462a0f2a26a97c3eb",
        "sha256": "83f1ac6ab7721b1661b9ad2fc07a4c87788f3c36edb476a6dd0a3cb78970c8f8"
      },
      "downloads": -1,
      "filename": "pytest_yaml_yoyo-1.1.9-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ee86c51be8e5895462a0f2a26a97c3eb",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.8",
      "size": 29552,
      "upload_time": "2023-03-21T11:01:15",
      "upload_time_iso_8601": "2023-03-21T11:01:15.118723Z",
      "url": "https://files.pythonhosted.org/packages/4a/da/1d346021fdfb7d7123a82bf3e98a93b443a9f93567fa62e7e6a791f3111d/pytest_yaml_yoyo-1.1.9-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f4e53eace1032e054a0e45e3ad0b6f2ca40cd9df5dce97c976710e72fc58ccb",
        "md5": "0aaaa7b81f9e501fd73838e2358eaf84",
        "sha256": "be264e1eeadebd4caa8100f29e82017183c4fc72492fe38b2ba4ee5e52e19813"
      },
      "downloads": -1,
      "filename": "pytest-yaml-yoyo-1.1.9.tar.gz",
      "has_sig": false,
      "md5_digest": "0aaaa7b81f9e501fd73838e2358eaf84",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 31406,
      "upload_time": "2023-03-21T11:01:22",
      "upload_time_iso_8601": "2023-03-21T11:01:22.868852Z",
      "url": "https://files.pythonhosted.org/packages/0f/4e/53eace1032e054a0e45e3ad0b6f2ca40cd9df5dce97c976710e72fc58ccb/pytest-yaml-yoyo-1.1.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}