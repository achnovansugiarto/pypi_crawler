{
  "info": {
    "author": "Evgenii Pishchik",
    "author_email": "evgeniipishchik@mail.ru",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\n<div align=\"center\">\n\n**Open Neural Networks library for image classification.**\n\n[![PyPI](https://img.shields.io/pypi/v/opennn_pytorch?color=blue&style=for-the-badge&logo=pypi&logoColor=white)](https://pypi.org/project/opennn-pytorch/) \n[![Generic badge](https://img.shields.io/badge/License-MIT-<COLOR>.svg?style=for-the-badge)](https://github.com/Pe4enIks/OpenNN/blob/main/LICENSE)\n<br>\n[![Docker](https://img.shields.io/badge/docker-%230db7ed.svg?style=for-the-badge&logo=docker&logoColor=white)](https://github.com/Pe4enIks/OpenNN/blob/main/docker/Dockerfile)\n[![PyTorch](https://img.shields.io/badge/PyTorch-%23EE4C2C.svg?style=for-the-badge&logo=PyTorch&logoColor=white)](https://pytorch.org)\n\n</div>\n\n### Table of content\n  1. [Quick start](#start)\n  2. [Warnings](#warnings)\n  3. [Encoders](#encoders)\n  4. [Decoders](#decoders)\n  5. [Pretrained](#pretrained)\n  6. [Pretrained old configs fixes](#pretrained_old)\n  7. [Datasets](#datasets)\n  8. [Losses](#losses)\n  9. [Metrics](#metrics)\n  10. [Optimizers](#optimizers)\n  11. [Schedulers](#schedulers)\n  12. [Examples](#examples)\n  13. [Wandb](#wandb)\n\n### Quick start <a name=\"start\"></a>\n#### 1. Straight install.\n##### 1.1 Install torch with cuda.\n```bash\npip install -U torch --extra-index-url https://download.pytorch.org/whl/cu113\n```\n##### 1.2 Install opennn_pytorch.\n```bash\npip install -U opennn_pytorch\n```\n#### 2. Dockerfile.\n```bash\ncd docker/\ndocker build -t opennn:latest .\n```\n\n### Warnings <a name=\"warnings\"></a>\n1. Cuda is only supported for nvidia graphics cards.\n2. Alexnet decoder doesn't support bce losses family.\n3. Sometimes combination of dataset/encoder/decoder/loss will give bad results, try to combine others.\n4. Custom cross-entropy support only mode when preds have (n, c) shape and labels have (n) shape.\n5. Not all options in transform.yaml and config.yaml are required.\n6. Mean and std in datasets section must be used in transform.yaml, for example [mean=[0.2859], std=[0.3530]] -> normalize: [[0.2859], [0.3530]]\n\n### Encoders <a name=\"encoders\"></a>\n- LeNet [[paper](http://vision.stanford.edu/cs598_spring07/papers/Lecun98.pdf)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/encoders/lenet.py)]\n- AlexNet [[paper](https://proceedings.neurips.cc/paper/2012/file/c399862d3b9d6b76c8436e924a68c45b-Paper.pdf)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/encoders/alexnet.py)]\n- GoogleNet [[paper](https://arxiv.org/pdf/1409.4842.pdf)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/encoders/googlenet.py)]\n- ResNet18 [[paper](https://arxiv.org/pdf/1512.03385.pdf)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/encoders/resnet.py)]\n- ResNet34 [[paper](https://arxiv.org/pdf/1512.03385.pdf)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/encoders/resnet.py)]\n- ResNet50 [[paper](https://arxiv.org/pdf/1512.03385.pdf)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/encoders/resnet.py)]\n- ResNet101 [[paper](https://arxiv.org/pdf/1512.03385.pdf)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/encoders/resnet.py)]\n- ResNet152 [[paper](https://arxiv.org/pdf/1512.03385.pdf)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/encoders/resnet.py)]\n- MobileNet [[paper](https://arxiv.org/pdf/1704.04861.pdf)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/encoders/mobilenet.py)]\n- VGG-11 [[paper](https://arxiv.org/pdf/1409.1556.pdf)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/encoders/vgg.py)]\n- VGG-16 [[paper](https://arxiv.org/pdf/1409.1556.pdf)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/encoders/vgg.py)]\n- VGG-19 [[paper](https://arxiv.org/pdf/1409.1556.pdf)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/encoders/vgg.py)]\n  \n### Decoders <a name=\"decoders\"></a>\n- LeNet [[paper](http://vision.stanford.edu/cs598_spring07/papers/Lecun98.pdf)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/decoders/lenet.py)]\n- AlexNet [[paper](https://proceedings.neurips.cc/paper/2012/file/c399862d3b9d6b76c8436e924a68c45b-Paper.pdf)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/decoders/alexnet.py)]\n- Linear [[docs](https://pytorch.org/docs/stable/generated/torch.nn.Linear.html)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/decoders/linear.py)]\n\n### Pretrained <a name=\"pretrained\"></a>\n<details>\n<summary style=\"margin-left: 25px;\">LeNet</summary>\n<div style=\"margin-left: 25px;\">\n\n|Encoder             |Decoder             |Dataset             |Weights           |Configs           |Logs              |\n|--------------------|--------------------|--------------------|------------------|------------------|------------------|\n|LeNet               |LeNet               |MNIST               |[BEST](https://cloud.mail.ru/public/Xr5z/42Mx6gC7p), [PLAN](https://cloud.mail.ru/public/eAgN/iPFm2v4UG)          |[CONFIG](https://cloud.mail.ru/public/sCvP/UWXwUJxeb), [TRANSFORM](https://cloud.mail.ru/public/L8tj/kKEf5bKiA)               |[TRAINVAL](https://cloud.mail.ru/public/c2BY/6BnctFNWd)               |\n|LeNet               |LeNet               |FASHION-MNIST       |[BEST](https://cloud.mail.ru/public/TDuA/86rXD6yNV), [PLAN](https://cloud.mail.ru/public/RtcL/81CTm8doR)          |[CONFIG](https://cloud.mail.ru/public/fZgh/FMzWYiDGS), [TRANSFORM](https://cloud.mail.ru/public/H2ic/j8gnpMGKV)               |[TRAINVAL](https://cloud.mail.ru/public/5c1r/GsRgkFBsX)               |\n|LeNet               |Linear              |MNIST               |[BEST](https://cloud.mail.ru/public/REu7/za1tGB6qb), [PLAN](https://cloud.mail.ru/public/8Kfc/51kRbBdau)          |[CONFIG](https://cloud.mail.ru/public/5Ztd/vFESYuv81), [TRANSFORM](https://cloud.mail.ru/public/xuwr/665RBtYTM)               |[TRAINVAL](https://cloud.mail.ru/public/EHHp/mr4FzmiTX)               |\n|LeNet               |Linear              |FASHION-MNIST       |[BEST](https://cloud.mail.ru/public/5oFr/YgrEuCjwY), [PLAN](https://cloud.mail.ru/public/cau1/17FS5Ab8L)          |[CONFIG](https://cloud.mail.ru/public/iNrh/oLbWHydYW), [TRANSFORM](https://cloud.mail.ru/public/5mAj/fPWjDGZjb)               |[TRAINVAL](https://cloud.mail.ru/public/2WUX/VZXsvBs8Z)               |\n|LeNet               |AlexNet             |MNIST               |[BEST](https://cloud.mail.ru/public/oX7D/YkvXxgftt), [PLAN](https://cloud.mail.ru/public/wjSw/woE5Zh2NS)          |[CONFIG](https://cloud.mail.ru/public/vo77/xiGPwELZu), [TRANSFORM](https://cloud.mail.ru/public/k12g/UoHHx3iBJ)               |[TRAINVAL](https://cloud.mail.ru/public/5nQ3/FfnmxPZws)               |\n|LeNet               |AlexNet             |FASHION-MNIST       |[BEST](https://cloud.mail.ru/public/MUeQ/yFo7Rsrgo), [PLAN](https://cloud.mail.ru/public/BSG8/xtMqCR6mt)          |[CONFIG](https://cloud.mail.ru/public/TCDL/SiXjmaDSV), [TRANSFORM](https://cloud.mail.ru/public/y3iw/5choydKkM)               |[TRAINVAL](https://cloud.mail.ru/public/f9k3/ZMpjAgStT)               |\n\n</div>\n</details>\n\n<details>\n<summary style=\"margin-left: 25px;\">AlexNet</summary>\n<div style=\"margin-left: 25px;\">\n\n|Encoder             |Decoder             |Dataset             |Weights           |Configs           |Logs              |\n|--------------------|--------------------|--------------------|------------------|------------------|------------------|\n|AlexNet             |LeNet               |MNIST               |[BEST](https://cloud.mail.ru/public/KiVr/TAe8EV3yf), [PLAN](https://cloud.mail.ru/public/PHRA/jZtdVdWPP)          |[CONFIG](https://cloud.mail.ru/public/np4t/A43jgb1oY), [TRANSFORM](https://cloud.mail.ru/public/FJ6x/SniuHZfEK)               |[TRAINVAL](https://cloud.mail.ru/public/nq7F/kBV9NeVEq)               |\n|AlexNet             |LeNet               |FASHION-MNIST       |[BEST](https://cloud.mail.ru/public/nieg/s5Nf7Pmnq), [PLAN](https://cloud.mail.ru/public/ZrgH/joJn5xhsn)          |[CONFIG](https://cloud.mail.ru/public/bpFo/Vjmm7Dd4e), [TRANSFORM](https://cloud.mail.ru/public/Uqjw/P4BnF1xeQ)               |[TRAINVAL](https://cloud.mail.ru/public/7DAu/ygnrhn5X7)               |\n|AlexNet             |Linear              |MNIST               |[BEST](https://cloud.mail.ru/public/N9nj/VeYTWXoyK), [PLAN](https://cloud.mail.ru/public/FyGQ/oLXxQDhYw)          |[CONFIG](https://cloud.mail.ru/public/ReTm/oMmkKVkmS), [TRANSFORM](https://cloud.mail.ru/public/fksy/B4tHCfQQf)               |[TRAINVAL](https://cloud.mail.ru/public/PvUP/Q3yubZu15)               |\n|AlexNet             |Linear              |FASHION-MNIST        |[BEST](https://cloud.mail.ru/public/ZJPa/MtxqWu69p), [PLAN](https://cloud.mail.ru/public/uF4S/78sLapHdZ)          |[CONFIG](https://cloud.mail.ru/public/ReDL/9ya4e56vu), [TRANSFORM](https://cloud.mail.ru/public/qpZm/kM2jfk13a)               |[TRAINVAL](https://cloud.mail.ru/public/3hwi/EuKnoHiUw)               |\n|AlexNet             |AlexNet             |MNIST               |[BEST](https://cloud.mail.ru/public/RUsN/dHia5LgKP), [PLAN](https://cloud.mail.ru/public/bKjQ/Jot1gWoLu)          |[CONFIG](https://cloud.mail.ru/public/iPJX/rtcFg7c8n), [TRANSFORM](https://cloud.mail.ru/public/HUxD/jkdVQ8gt4)               |[TRAINVAL](https://cloud.mail.ru/public/7Y5x/92fZTtd1A)               |\n|AlexNet             |AlexNet             |FASHION-MNIST       |[BEST](https://cloud.mail.ru/public/q93Z/RRbNEXJrk), [PLAN](https://cloud.mail.ru/public/KXoT/wNxScRaBm)          |[CONFIG](https://cloud.mail.ru/public/vxwb/VivRXsEud), [TRANSFORM](https://cloud.mail.ru/public/Df9p/vd82CP8h1)               |[TRAINVAL](https://cloud.mail.ru/public/sVvz/CDoCkgt8f)               |\n\n</div>\n</details>\n\n<details>\n<summary style=\"margin-left: 25px;\">GoogleNet</summary>\n<div style=\"margin-left: 25px;\">\n\n|Encoder             |Decoder             |Dataset             |Weights           |Configs           |Logs              |\n|--------------------|--------------------|--------------------|------------------|------------------|------------------|\n|GoogleNet           |Linear              |MNIST               |[BEST](https://cloud.mail.ru/public/oTD1/xRa26UVaG), [PLAN](https://cloud.mail.ru/public/ByvC/y1oZ2icei)          |[CONFIG](https://cloud.mail.ru/public/Lt9M/WxiehNMwL), [TRANSFORM](https://cloud.mail.ru/public/hGb4/BanKp7YrQ)               |[TRAINVAL](https://cloud.mail.ru/public/5W22/SFLgwsVqu)               |\n|GoogleNet           |Linear              |FASHION-MNIST       |[BEST](https://cloud.mail.ru/public/rhKv/ATwGUW3bQ), [PLAN](https://cloud.mail.ru/public/TDCf/Txpg8HY3c)          |[CONFIG](https://cloud.mail.ru/public/zkaJ/WB8Zp2c7E), [TRANSFORM](https://cloud.mail.ru/public/Y1GU/5KzEgDdug)               |[TRAINVAL](https://cloud.mail.ru/public/q9PD/7Sk3rHVp8)               |\n\n</div>\n</details>\n  \n<details>\n<summary style=\"margin-left: 25px;\">ResNet</summary>\n<div style=\"margin-left: 25px;\">\n\n|Encoder             |Decoder             |Dataset             |Weights           |Configs           |Logs              |\n|--------------------|--------------------|--------------------|------------------|------------------|------------------|\n|ResNet18            |Linear              |MNIST               |[BEST](https://cloud.mail.ru/public/HNQe/GrQTYVR4D), [PLAN](https://cloud.mail.ru/public/np89/1ZKoTVruk)          |[CONFIG](https://cloud.mail.ru/public/bW8W/Xxmpk9r2a), [TRANSFORM](https://cloud.mail.ru/public/WxRb/YgwRkWjkA)               |[TRAINVAL](https://cloud.mail.ru/public/8zXr/6z4gY4Gsp)               |\n|ResNet34            |Linear              |MNIST               |[BEST](https://cloud.mail.ru/public/eJZ9/15V8dgGKg), [PLAN](https://cloud.mail.ru/public/SoxA/gcWABVppm)          |[CONFIG](https://cloud.mail.ru/public/9bp6/G6q7ZPamn), [TRANSFORM](https://cloud.mail.ru/public/hG4D/xF9mTFF6P)               |[TRAINVAL](https://cloud.mail.ru/public/A97j/EKN2WKseA)               |\n|ResNet50            |Linear              |MNIST               |[BEST](https://cloud.mail.ru/public/m6dS/dEphhQGq7), [PLAN](https://cloud.mail.ru/public/Uu4W/3fEtherM7)          |[CONFIG](https://cloud.mail.ru/public/Bzzg/igi13GBuD), [TRANSFORM](https://cloud.mail.ru/public/LMRU/Tuo1Abc9j)               |[TRAINVAL](https://cloud.mail.ru/public/ednt/o5MTGJQxX)               |\n|ResNet101           |Linear              |MNIST               |[BEST](https://cloud.mail.ru/public/GFT9/METVBdbLG), [PLAN](https://cloud.mail.ru/public/o2sL/CvKQw9Dde)          |[CONFIG](https://cloud.mail.ru/public/dgCC/Ead9DPqiq), [TRANSFORM](https://cloud.mail.ru/public/CRzw/1oWVSkjEt)               |[TRAINVAL](https://cloud.mail.ru/public/1drh/eonZo69jx)               |\n|ResNet152           |Linear              |MNIST               |[BEST](https://cloud.mail.ru/public/cp6D/YGM7rqFQk), [PLAN](https://cloud.mail.ru/public/BJsM/yi34akeYU)          |[CONFIG](https://cloud.mail.ru/public/c9iD/b2U9TTU54), [TRANSFORM](https://cloud.mail.ru/public/kYvR/y2EscgW3d)               |[TRAINVAL](https://cloud.mail.ru/public/XCNJ/f9Z1F8D8C)               |\n\n</div>\n</details>\n\n<details>\n<summary style=\"margin-left: 25px;\">MobileNet</summary>\n<div style=\"margin-left: 25px;\">\n\n|Encoder             |Decoder             |Dataset             |Weights           |Configs           |Logs              |\n|--------------------|--------------------|--------------------|------------------|------------------|------------------|\n|MobileNet           |Linear              |MNIST               |[BEST](https://cloud.mail.ru/public/1N8q/a7W615oHq), [PLAN](https://cloud.mail.ru/public/rje5/L4fdJr9BE)          |[CONFIG](https://cloud.mail.ru/public/whgD/ntaS6BebM), [TRANSFORM](https://cloud.mail.ru/public/h2Tm/mLaD4bYeN)               |[TRAINVAL](https://cloud.mail.ru/public/F6X1/jhDRPYoGb)               |\n\n</div>\n</details>\n\n<details>\n<summary style=\"margin-left: 25px;\">VGG</summary>\n<div style=\"margin-left: 25px;\">\n\n|Encoder             |Decoder             |Dataset             |Weights           |Configs           |Logs              |\n|--------------------|--------------------|--------------------|------------------|------------------|------------------|\n|VGG-11              |Linear              |MNIST               |[BEST](https://cloud.mail.ru/public/6wUm/vKJxLiHtJ), [PLAN](https://cloud.mail.ru/public/3rEd/MXwrSKPRE)          |[CONFIG](https://cloud.mail.ru/public/hTe5/jA8PrYgdN), [TRANSFORM](https://cloud.mail.ru/public/nUjx/PLKuqkNU4)               |[TRAINVAL](https://cloud.mail.ru/public/SceV/Mk4PHzg6n)               |\n|VGG-16              |Linear              |MNIST               |[BEST](https://cloud.mail.ru/public/mGsd/SY83ovV1R), [PLAN](https://cloud.mail.ru/public/fStQ/Xn5eRRgXo)          |[CONFIG](https://cloud.mail.ru/public/F4q4/Qc7FWLHeq), [TRANSFORM](https://cloud.mail.ru/public/tDAy/K1E3Gix3B)               |[TRAINVAL](https://cloud.mail.ru/public/w3ed/HLSCjA9NU)               |\n|VGG-19              |Linear              |MNIST               |[BEST](https://cloud.mail.ru/public/mMUk/a5VWw8PN1), [PLAN](https://cloud.mail.ru/public/BfZb/ps46dKYgy)          |[CONFIG](https://cloud.mail.ru/public/2ZQJ/6BeeqB1rj), [TRANSFORM](https://cloud.mail.ru/public/Nhya/QFxGiRdvG)               |[TRAINVAL](https://cloud.mail.ru/public/urow/wbKkV6uyv)               |\n\n</div>\n</details>\n\n### Pretrained configs issues <a name=\"pretrained_old\"></a>\nConfig file changed, check configs folder!!!\n1. Config must include test_part value, (train_part + valid_part + test_part) value can be < 1.0.\n2. You will able to add wandb structure for logging in wandb.\n3. Full restructure into branches structure.\n\n### Datasets <a name=\"datasets\"></a>\n- MNIST [[files](http://yann.lecun.com/exdb/mnist/)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/datasets/mnist.py)] [classes=10] [mean=[0.1307], std=[0.3801]]\n- FASHION-MNIST [[files](https://github.com/zalandoresearch/fashion-mnist)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/datasets/mnist.py)] [classes=10] [mean=[0.2859], std=[0.3530]]\n- CIFAR-10 [[files](https://www.cs.toronto.edu/~kriz/cifar.html)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/datasets/cifar.py)] [classes=10] [mean=[0.491, 0.482, 0.446], std=[0.247, 0.243, 0.261]]\n- CIFAR-100 [[files](https://www.cs.toronto.edu/~kriz/cifar.html)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/datasets/cifar.py)] [classes=100] [mean=[0.5071, 0.4867, 0.4408], std=[0.2675, 0.2565, 0.2761]]\n- GTSRB [[files](https://benchmark.ini.rub.de/gtsrb_news.html)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/datasets/gtsrb.py)] [classes=43] [mean=unknown, std=unknown]\n- CUSTOM [[docs](https://pytorch.org/tutorials/beginner/data_loading_tutorial.html)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/datasets/custom.py)] [[example](https://cloud.mail.ru/public/PyuH/sNiZrFGK4)] [classes=nc] [mean=unknown, std=unknown]\n\n### Losses <a name=\"losses\"></a>\n- Cross-Entropy [[pytorch](https://pytorch.org), [custom](https://github.com/Pe4enIks/OpenNN/tree/main/opennn_pytorch/losses)] [[docs](https://pytorch.org/docs/stable/generated/torch.nn.CrossEntropyLoss.html)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/losses/celoss.py)]\n- Binary-Cross-Entropy [[pytorch](https://pytorch.org), [custom](https://github.com/Pe4enIks/OpenNN/tree/main/opennn_pytorch/losses)] [[docs](https://pytorch.org/docs/stable/generated/torch.nn.BCELoss.html)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/losses/bceloss.py)]\n- Binary-Cross-Entropy-With-Logits [[pytorch](https://pytorch.org), [custom](https://github.com/Pe4enIks/OpenNN/tree/main/opennn_pytorch/losses)] [[docs](https://pytorch.org/docs/stable/generated/torch.nn.BCEWithLogitsLoss.html)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/losses/bceloss.py)]\n- Mean-Squared-Error [[pytorch](https://pytorch.org), [custom](https://github.com/Pe4enIks/OpenNN/tree/main/opennn_pytorch/losses)] [[docs](https://pytorch.org/docs/stable/generated/torch.nn.MSELoss.html)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/losses/meanloss.py)]\n- Mean-Absolute-Error [[pytorch](https://pytorch.org), [custom](https://github.com/Pe4enIks/OpenNN/tree/main/opennn_pytorch/losses)] [[docs](https://pytorch.org/docs/stable/generated/torch.nn.L1Loss.html)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/losses/meanloss.py)]\n\n### Metrics <a name=\"metrics\"></a>\n- Accuracy [[sklearn](https://scikit-learn.org/stable/)] [[docs](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.accuracy_score.html)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/metrics/accuracy.py)]\n- Precision [[sklearn](https://scikit-learn.org/stable/)] [[docs](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.precision_score.html#sklearn.metrics.precision_score)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/metrics/precision.py)]\n- Recall [[sklearn](https://scikit-learn.org/stable/)] [[docs](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.recall_score.html#sklearn.metrics.recall_score)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/metrics/recall.py)]\n- F1 [[sklearn](https://scikit-learn.org/stable/)] [[docs](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.f1_score.html#sklearn.metrics.f1_score)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/metrics/f1_score.py)]\n\n### Optimizers <a name=\"optimizers\"></a>\n- Adam [[pytorch](https://pytorch.org)] [[docs](https://pytorch.org/docs/stable/generated/torch.optim.Adam.html#torch.optim.Adam)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/optimizers/adam.py)]\n- AdamW [[pytorch](https://pytorch.org)] [[docs](https://pytorch.org/docs/stable/generated/torch.optim.AdamW.html#torch.optim.AdamW)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/optimizers/adam.py)]\n- Adamax [[pytorch](https://pytorch.org)] [[docs](https://pytorch.org/docs/stable/generated/torch.optim.Adamax.html#torch.optim.Adamax)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/optimizers/adam.py)]\n- RAdam [[pytorch](https://pytorch.org)] [[docs](https://pytorch.org/docs/stable/generated/torch.optim.RAdam.html#torch.optim.RAdam)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/optimizers/adam.py)]\n- NAdam [[pytorch](https://pytorch.org)] [[docs](https://pytorch.org/docs/stable/generated/torch.optim.NAdam.html#torch.optim.NAdam)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/optimizers/adam.py)]\n\n### Schedulers <a name=\"schedulers\"></a>\n- StepLR [[pytorch](https://pytorch.org)] [[docs](https://pytorch.org/docs/stable/generated/torch.optim.lr_scheduler.StepLR.html)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/schedulers/steplr.py)]\n- MultiStepLR [[pytorch](https://pytorch.org)] [[docs](https://pytorch.org/docs/stable/generated/torch.optim.lr_scheduler.MultiStepLR.html#torch.optim.lr_scheduler.MultiStepLR)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/schedulers/steplr.py)]\n- PolynomialLRDecay [[custom](https://github.com/Pe4enIks/OpenNN/tree/main/opennn_pytorch/schedulers)] [[docs](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/schedulers/custom.py)] [[code](https://github.com/Pe4enIks/OpenNN/blob/main/opennn_pytorch/schedulers/custom.py)]\n\n### Examples <a name=\"examples\"></a>\n\n1. Run from yaml config.\n```python\nfrom opennn_pytorch import run\n\nconfig = 'path to yaml config'  # check configs folder\nrun(config)\n```\n\n2. Get encoder and decoder.\n```python\nfrom opennn_pytorch.encoders import get_encoder\nfrom opennn_pytorch.decoders import get_decoder\n  \nencoder_name = 'resnet18'\ndecoder_name = 'alexnet'\ndecoder_mode = 'decoder'\ninput_channels = 1\nnumber_classes = 10\ndevice = 'cuda'\n\nencoder = get_encoder(encoder_name, \n                       input_channels).to(device)\n\nmodel = get_decoder(decoder_name, \n                    encoder, \n                    number_classes, \n                    decoder_mode, \n                    device).to(device)\n```\n\n3.1 Get dataset.\n```python\nfrom opennn_pytorch.datasets import get_dataset\nfrom torchvision import transforms\n\ntransform_config = 'path to transform yaml config'\ndataset_name = 'mnist'\ndatafiles = None\ntrain_part = 0.7\nvalid_part = 0.2\ntest_part = 0.05\n\ntransform_lst = opennn_pytorch.transforms_lst(transform_config)\ntransform = transforms.Compose(transform_lst)\n\ntrain_data, valid_data, test_data = get_dataset(dataset_name,\n                                                train_part, \n                                                valid_part, \n                                                test_part, \n                                                transform, \n                                                datafiles)\n```\n\n3.2 Get custom dataset.\n```python\nfrom opennn_pytorch.datasets import get_dataset\nfrom torchvision import transforms\n\ntransform_config = 'path to transform yaml config'\ndataset_name = 'custom'\nimages = 'path to folder with images'\nannotation = 'path to annotation yaml file with image: class structure'\ndatafiles = (images, annotation)\ntrain_part = 0.7\nvalid_part = 0.2\ntest_part = 0.05\n\ntransform_lst = opennn_pytorch.transforms_lst(transform_config)\ntransform = transforms.Compose(transform_lst)\n\ntrain_data, valid_data, test_data = get_dataset(dataset_name,\n                                                train_part, \n                                                valid_part, \n                                                test_part, \n                                                transform, \n                                                datafiles)\n```\n\n4. Get optimizer.\n```python\nfrom opennn_pytorch.optimizers import get_optimizer\n\noptim_name = 'adam'\nlr = 1e-3\nbetas = (0.9, 0.999)\neps = 1e-8\nweight_decay = 1e-6\n\noptimizer = get_optimizer(optim_name, \n                          model, \n                          lr=lr, \n                          betas=betas, \n                          eps=opt_eps, \n                          weight_decay=weight_decay)\n```\n\n5. Get scheduler.\n```python\nfrom opennn_pytorch.schedulers import get_scheduler\n\nscheduler_name = 'steplr'\nstep = 10\ngamma = 0.5\nmilestones = None\nmax_decay_steps = None\nend_lr = None\npower = None\n\nscheduler = get_scheduler(scheduler_name,\n                          optimizer,\n                          step=step,\n                          gamma=gamma,\n                          milestones=milestones,\n                          max_decay_steps=mdsteps,\n                          end_lr=end_lr,\n                          power=power)\n```\n\n6. Get loss function.\n```python\nfrom opennn_pytorch.losses import get_loss\n\nloss_fn = 'custom_mse'\nloss_fn, one_hot = get_loss(loss_fn)\n```\n\n7. Get metrics functions.\n```python\nfrom opennn_pytorch.metrics import get_metrics\n\nmetrics_names = ['accuracy', 'precision', 'recall', 'f1_score']\nnumber_classes = 10\nmetrics_fn = get_metrics(metrics_names, \n                         nc=number_classes)\n```\n\n8. Train/Test.\n```python\nfrom opennn_pytorch.algo import train, test, prediction\nimport random\n\nalgorithm = 'train'\nbatch_size = 16\nclass_names = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\nnumber_classes = 10\nsave_every = 5\nepochs = 20\nwandb_flag = True\nwandb_metrics = ['accuracy', 'f1_score']\n\ntrain_dataloader = torch.utils.data.DataLoader(train_data, \n                                               batch_size=batch_size, \n                                               shuffle=True)\n\nvalid_dataloader = torch.utils.data.DataLoader(valid_data, \n                                               batch_size=batch_size, \n                                               shuffle=False)\n\ntest_dataloader = torch.utils.data.DataLoader(test_data, \n                                              batch_size=1, \n                                              shuffle=False)\n\nif algorithm == 'train':\n  train(train_dataloader, \n        valid_dataloader, \n        model, \n        optimizer, \n        scheduler, \n        loss_fn, \n        metrics_fn, \n        epochs, \n        checkpoints, \n        logs, \n        device, \n        save_every, \n        one_hot, \n        number_classes,\n        wandb_flag,\n        wandb_metrics)\nelif algorithm == 'test':\n  test_logs = test(test_dataloader, \n                   model, \n                   loss_fn, \n                   metrics_fn, \n                   logs, \n                   device, \n                   one_hot, \n                   number_classes,\n                   wandb_flag,\n                   wandb_metrics)\n  if pred:\n    indices = random.sample(range(0, len(test_data)), 10)\n    os.mkdir(test_logs + '/prediction', 0o777)\n    for i in range(10):\n      tmp_range = range(number_classes)\n      tmp_dct = {i: names[i] for i in tmp_range}\n      prediction(test_data,\n                 model,\n                 device,\n                 tmp_dct,\n                 test_logs + f'/prediction/{i}',\n                 indices[i])\n```\n\n### Wandb <a name=\"wandb\"></a>\n\n[Wandb](https://wandb.ai/) is very powerful logging tool, you will able to log metrics, hyperparamets, model hooks etc.\n\n```bash\nwandb login\n<your api token from wandb.ai>\n```\n\n![Workspace](images/wandb1.png)\n\n![Table](images/wandb2.png)\n\n### Citation <a name=\"citing\"></a>\nProject [citation](https://github.com/Pe4enIks/OpenNN/blob/main/CITATION.cff).\n\n### License <a name=\"license\"></a>\nProject is distributed under [MIT License](https://github.com/Pe4enIks/OpenNN/blob/main/LICENSE).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Pe4enIks/OpenNN/archive/refs/tags/v1.1.3.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Pe4enIks/OpenNN",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "opennn-pytorch",
    "package_url": "https://pypi.org/project/opennn-pytorch/",
    "platform": null,
    "project_url": "https://pypi.org/project/opennn-pytorch/",
    "project_urls": {
      "Download": "https://github.com/Pe4enIks/OpenNN/archive/refs/tags/v1.1.3.tar.gz",
      "Homepage": "https://github.com/Pe4enIks/OpenNN"
    },
    "release_url": "https://pypi.org/project/opennn-pytorch/1.1.3/",
    "requires_dist": [
      "torchvision (>=0.5.0)",
      "matplotlib (>=3.0.0)",
      "numpy (>=1.16.0)",
      "tqdm (>=4.20.0)",
      "pillow",
      "sklearn",
      "wandb"
    ],
    "requires_python": ">=3.9.0",
    "summary": "Neural Networks library for image classification task.",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15963704,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "984d1ecac69bde0cc39757a7a039343fdf175b195a44499d82f8bd6facc11566",
          "md5": "ce456e098ebd38fba0eb208742685dfc",
          "sha256": "b3e5245db2b489336e6dec92fb31bf8db86d14dd8327037ccffee649847d91da"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce456e098ebd38fba0eb208742685dfc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 34514,
        "upload_time": "2022-04-04T20:26:58",
        "upload_time_iso_8601": "2022-04-04T20:26:58.393867Z",
        "url": "https://files.pythonhosted.org/packages/98/4d/1ecac69bde0cc39757a7a039343fdf175b195a44499d82f8bd6facc11566/opennn_pytorch-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95a15786ae697814cb54de45d7cc0a4139ffd09fbac7fb14411f8cf6a33aa042",
          "md5": "567574023090c26493eb3ae33dfe57d2",
          "sha256": "cb6234bdaf816255291e17cdce3f333a533697c42004550c04d311e9fe6ce3b7"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "567574023090c26493eb3ae33dfe57d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 22829,
        "upload_time": "2022-04-04T20:27:00",
        "upload_time_iso_8601": "2022-04-04T20:27:00.279637Z",
        "url": "https://files.pythonhosted.org/packages/95/a1/5786ae697814cb54de45d7cc0a4139ffd09fbac7fb14411f8cf6a33aa042/opennn_pytorch-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdbac84f54496b4f75ac1c211860730f07317b5bbc57ff4cd80637643cd4346e",
          "md5": "fc1976db4a9d98364e5d541009020f8d",
          "sha256": "bae4bc281a880f07b36e80e2702f937a1f18581986a94e9fa9689ac3fce97aea"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc1976db4a9d98364e5d541009020f8d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 35365,
        "upload_time": "2022-04-04T22:35:52",
        "upload_time_iso_8601": "2022-04-04T22:35:52.004650Z",
        "url": "https://files.pythonhosted.org/packages/cd/ba/c84f54496b4f75ac1c211860730f07317b5bbc57ff4cd80637643cd4346e/opennn_pytorch-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cba04dabb5cdda65568110e5559c578758677c8664152066f8ef1eab686c15c",
          "md5": "628423ae33a0efed3b2e3bb7b6c52509",
          "sha256": "07c60ac396896503c0425bb7351bde8433b9022fe1298d61db18406524013949"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "628423ae33a0efed3b2e3bb7b6c52509",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 23488,
        "upload_time": "2022-04-04T22:35:54",
        "upload_time_iso_8601": "2022-04-04T22:35:54.007656Z",
        "url": "https://files.pythonhosted.org/packages/1c/ba/04dabb5cdda65568110e5559c578758677c8664152066f8ef1eab686c15c/opennn_pytorch-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed7b29cd0e05484efb1b210e3e2dd4808a194d2dee32a591d42853377325d838",
          "md5": "25fb9bb1681ca68d77c75ed4cb0f5516",
          "sha256": "5410e1eace4c701a310a8522f8a7216705c63856e6d9ad8b65f45bcc20968986"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25fb9bb1681ca68d77c75ed4cb0f5516",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 36038,
        "upload_time": "2022-04-05T12:22:46",
        "upload_time_iso_8601": "2022-04-05T12:22:46.387522Z",
        "url": "https://files.pythonhosted.org/packages/ed/7b/29cd0e05484efb1b210e3e2dd4808a194d2dee32a591d42853377325d838/opennn_pytorch-1.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1ef02e4ef9bf0bc03731d92e11b942d86dd1742118df226e47047146de0b5e7",
          "md5": "6f83680f590bf47efe7946bf2f7ef4ad",
          "sha256": "2686912550c573e7fb4bee4e24983dcaef778b7c0c7af146f76ab3b36e2d4c03"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6f83680f590bf47efe7946bf2f7ef4ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 23822,
        "upload_time": "2022-04-05T12:22:48",
        "upload_time_iso_8601": "2022-04-05T12:22:48.556564Z",
        "url": "https://files.pythonhosted.org/packages/a1/ef/02e4ef9bf0bc03731d92e11b942d86dd1742118df226e47047146de0b5e7/opennn_pytorch-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e4bb34de9de7f62a61031f4b0a121293826ef2704ee80f8e1fd55f62766626d",
          "md5": "6143aeab6758bf9f641a05bd1322177c",
          "sha256": "010a8a07c29fab819b727fdc33e0289cc9c6db6afca4df62dba908d3bb38d356"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6143aeab6758bf9f641a05bd1322177c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 37227,
        "upload_time": "2022-04-06T15:46:36",
        "upload_time_iso_8601": "2022-04-06T15:46:36.745593Z",
        "url": "https://files.pythonhosted.org/packages/1e/4b/b34de9de7f62a61031f4b0a121293826ef2704ee80f8e1fd55f62766626d/opennn_pytorch-1.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51b1f85ac1c224ced2c1780bc8625982c1cb049b0af5377d97bd33f0130a73f3",
          "md5": "6f38d625e4b13bf7cdadbe4b0fdaf205",
          "sha256": "88a5119a72f66691ee3bb16a35870db647384eb6a3b673fc4fa1b6fa1f7d626c"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6f38d625e4b13bf7cdadbe4b0fdaf205",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 26406,
        "upload_time": "2022-04-06T15:46:40",
        "upload_time_iso_8601": "2022-04-06T15:46:40.418291Z",
        "url": "https://files.pythonhosted.org/packages/51/b1/f85ac1c224ced2c1780bc8625982c1cb049b0af5377d97bd33f0130a73f3/opennn_pytorch-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee1f95df1ac34395f89a5a9faa8ceef584a0886d7ae7da0f70ab9f8fe1e2bac0",
          "md5": "d8a19cbcb1f6b670b88524d08649a22a",
          "sha256": "08dd7c4f5ed893b6a9a1f6fe9b3d0626526481dbc31199391b38a5fb9b865e91"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d8a19cbcb1f6b670b88524d08649a22a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 37494,
        "upload_time": "2022-04-06T21:40:57",
        "upload_time_iso_8601": "2022-04-06T21:40:57.456907Z",
        "url": "https://files.pythonhosted.org/packages/ee/1f/95df1ac34395f89a5a9faa8ceef584a0886d7ae7da0f70ab9f8fe1e2bac0/opennn_pytorch-1.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4284dc3cda095b16ed867c00310779707e2a22d0e5bbfcb37a46fb798bfe23e8",
          "md5": "366b2539ff5b42f78ccd729895b54c48",
          "sha256": "1577c4c443aac2b9ff4c2534d2453ca9c0a6359c17b2b98cfd67bc6d352841b3"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "366b2539ff5b42f78ccd729895b54c48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 27191,
        "upload_time": "2022-04-06T21:40:59",
        "upload_time_iso_8601": "2022-04-06T21:40:59.043236Z",
        "url": "https://files.pythonhosted.org/packages/42/84/dc3cda095b16ed867c00310779707e2a22d0e5bbfcb37a46fb798bfe23e8/opennn_pytorch-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e28b4a72acee580ed282eabb2332af6a52753b0cb081c20a7a0e177d4fb0c0f",
          "md5": "90a614033f5a92faf94ce3aaf5bbd35e",
          "sha256": "5b5c472d3e2b8ce79ad10dfa7245deeb642ae3c09fd1b1a8242ff4b7ade4b59a"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90a614033f5a92faf94ce3aaf5bbd35e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9.0",
        "size": 38396,
        "upload_time": "2022-07-17T00:40:15",
        "upload_time_iso_8601": "2022-07-17T00:40:15.341708Z",
        "url": "https://files.pythonhosted.org/packages/8e/28/b4a72acee580ed282eabb2332af6a52753b0cb081c20a7a0e177d4fb0c0f/opennn_pytorch-1.0.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e15e7884271a18c3f8eed040d71ee22ce0788ef487c3c19bd4ff71d9583f8b44",
          "md5": "6183e6292aa2a857560de6d7a8a124d6",
          "sha256": "d3fb7d22470207b25f07dc766249728e516f81718673b6a54c6f1029869301bd"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "6183e6292aa2a857560de6d7a8a124d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9.0",
        "size": 29330,
        "upload_time": "2022-07-17T00:40:18",
        "upload_time_iso_8601": "2022-07-17T00:40:18.025230Z",
        "url": "https://files.pythonhosted.org/packages/e1/5e/7884271a18c3f8eed040d71ee22ce0788ef487c3c19bd4ff71d9583f8b44/opennn_pytorch-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ed0af6b1beddabd45e136a6bbc9c7cca7c660a8fda889400d467681c6e64dc3",
          "md5": "0f71381be0dc2424f8c462a62c82c85c",
          "sha256": "bf26a407959eeeb0558bafe5c7d799d21d3c5e4535ffcf84599f6205b10717bd"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.0.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f71381be0dc2424f8c462a62c82c85c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9.0",
        "size": 40712,
        "upload_time": "2022-08-31T00:27:57",
        "upload_time_iso_8601": "2022-08-31T00:27:57.334043Z",
        "url": "https://files.pythonhosted.org/packages/6e/d0/af6b1beddabd45e136a6bbc9c7cca7c660a8fda889400d467681c6e64dc3/opennn_pytorch-1.0.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15df93ba3ac29252d42914fe6217f7c8e2426b9a31fdb093ad9eb8e4d164d2b4",
          "md5": "a298a2f65e3e4b0b8dcf91af9fd240c9",
          "sha256": "e726fe7091b757f8aa803be2eace90b0d5733c5fe3545a2c84533d578f63f059"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "a298a2f65e3e4b0b8dcf91af9fd240c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9.0",
        "size": 30579,
        "upload_time": "2022-08-31T00:28:00",
        "upload_time_iso_8601": "2022-08-31T00:28:00.383182Z",
        "url": "https://files.pythonhosted.org/packages/15/df/93ba3ac29252d42914fe6217f7c8e2426b9a31fdb093ad9eb8e4d164d2b4/opennn_pytorch-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbba575254bb649766d74a2600aaa464c57a116de815e16b1187c1eaf2c6ead0",
          "md5": "87019d2dfb832275697162c2cc1065f0",
          "sha256": "3925e120c33f31e8012a73726f4ec49e040a0c89e87ba09f180408e87a718583"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "87019d2dfb832275697162c2cc1065f0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9.0",
        "size": 41584,
        "upload_time": "2022-10-22T15:57:07",
        "upload_time_iso_8601": "2022-10-22T15:57:07.386448Z",
        "url": "https://files.pythonhosted.org/packages/db/ba/575254bb649766d74a2600aaa464c57a116de815e16b1187c1eaf2c6ead0/opennn_pytorch-1.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c57036855bf12a631f6ab2a54f0d4be536ffbd635d9e7988b27289bc0c2d8eef",
          "md5": "ea7970683b45342a5eecdbc699bce7a8",
          "sha256": "9104623b5da3b14d053dac5ac86e3bf156ac92e4f40d2a57db3caa2e04961538"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ea7970683b45342a5eecdbc699bce7a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9.0",
        "size": 31238,
        "upload_time": "2022-10-22T15:57:09",
        "upload_time_iso_8601": "2022-10-22T15:57:09.772642Z",
        "url": "https://files.pythonhosted.org/packages/c5/70/36855bf12a631f6ab2a54f0d4be536ffbd635d9e7988b27289bc0c2d8eef/opennn_pytorch-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de267af36bdeaf0d707b075940dbf315ad412895ca107763251d6b79f8eba200",
          "md5": "11c69a574768213e96bca3834bea9ec0",
          "sha256": "25f9471eed60bb3697eb2348c0b39b7117dc1db5a6f21450424c17eb87c410d3"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11c69a574768213e96bca3834bea9ec0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9.0",
        "size": 42786,
        "upload_time": "2022-10-27T01:19:51",
        "upload_time_iso_8601": "2022-10-27T01:19:51.688130Z",
        "url": "https://files.pythonhosted.org/packages/de/26/7af36bdeaf0d707b075940dbf315ad412895ca107763251d6b79f8eba200/opennn_pytorch-1.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f84809f3006f06f94c8a6e3f29f510c1cfee492a94159e444ca2d7aae35fc5a",
          "md5": "c12fa485dafc78f896feab01759a7738",
          "sha256": "1f2ff9b679b0029c75172136115fba8875b2bc637d6f8842a36887c92e26d633"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c12fa485dafc78f896feab01759a7738",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9.0",
        "size": 32979,
        "upload_time": "2022-10-27T01:19:53",
        "upload_time_iso_8601": "2022-10-27T01:19:53.772020Z",
        "url": "https://files.pythonhosted.org/packages/3f/84/809f3006f06f94c8a6e3f29f510c1cfee492a94159e444ca2d7aae35fc5a/opennn_pytorch-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e14444330d578810fe8fd32ed826e570eace4d842c2daa8fe4e745527cda1951",
          "md5": "8fa8e89229c57df3ac151e0d48848ad4",
          "sha256": "b5d01f6c3bdfb937d30757c5ef684c8b27adb9ac0adc7a9451af6c91395c89b0"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fa8e89229c57df3ac151e0d48848ad4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9.0",
        "size": 42882,
        "upload_time": "2022-11-05T01:54:14",
        "upload_time_iso_8601": "2022-11-05T01:54:14.190461Z",
        "url": "https://files.pythonhosted.org/packages/e1/44/44330d578810fe8fd32ed826e570eace4d842c2daa8fe4e745527cda1951/opennn_pytorch-1.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2a8347e4f5ef936274dfbd34802e244bf1d5e350fe4d314a2371bbfa31668e7",
          "md5": "5ed6054993014f31a8c9973b18273a62",
          "sha256": "2a47fd4792416666e2bff4ab63b8320789fd235fe4bc87bc5f192fafd15d756d"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5ed6054993014f31a8c9973b18273a62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9.0",
        "size": 33130,
        "upload_time": "2022-11-05T01:54:16",
        "upload_time_iso_8601": "2022-11-05T01:54:16.979152Z",
        "url": "https://files.pythonhosted.org/packages/b2/a8/347e4f5ef936274dfbd34802e244bf1d5e350fe4d314a2371bbfa31668e7/opennn_pytorch-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9c0c9e153df19c71955a7022c93fbedf582dc1d30fcb8734feb8fb35a2096db",
          "md5": "79bc15b0b7965ffa1a5963663bae5f93",
          "sha256": "8ef8006ae561e0b19fa7d3b70070e4274fb9f2d52bc7fcfccece24061ca07b12"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79bc15b0b7965ffa1a5963663bae5f93",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9.0",
        "size": 26688,
        "upload_time": "2022-12-02T00:48:20",
        "upload_time_iso_8601": "2022-12-02T00:48:20.230771Z",
        "url": "https://files.pythonhosted.org/packages/e9/c0/c9e153df19c71955a7022c93fbedf582dc1d30fcb8734feb8fb35a2096db/opennn_pytorch-1.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c7badfe6de44f0082dc446fce4b1f740cfa83cad5185b3bbc24437d9d7790af",
          "md5": "a3b8539e8886c76d48219af31bdb4e7f",
          "sha256": "10822a70188a390073b0a21df7aeb8c32300d8ce88e1e024515fd749fd688dc2"
        },
        "downloads": -1,
        "filename": "opennn_pytorch-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a3b8539e8886c76d48219af31bdb4e7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9.0",
        "size": 26453,
        "upload_time": "2022-12-02T00:48:23",
        "upload_time_iso_8601": "2022-12-02T00:48:23.225767Z",
        "url": "https://files.pythonhosted.org/packages/0c/7b/adfe6de44f0082dc446fce4b1f740cfa83cad5185b3bbc24437d9d7790af/opennn_pytorch-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9c0c9e153df19c71955a7022c93fbedf582dc1d30fcb8734feb8fb35a2096db",
        "md5": "79bc15b0b7965ffa1a5963663bae5f93",
        "sha256": "8ef8006ae561e0b19fa7d3b70070e4274fb9f2d52bc7fcfccece24061ca07b12"
      },
      "downloads": -1,
      "filename": "opennn_pytorch-1.1.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "79bc15b0b7965ffa1a5963663bae5f93",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.9.0",
      "size": 26688,
      "upload_time": "2022-12-02T00:48:20",
      "upload_time_iso_8601": "2022-12-02T00:48:20.230771Z",
      "url": "https://files.pythonhosted.org/packages/e9/c0/c9e153df19c71955a7022c93fbedf582dc1d30fcb8734feb8fb35a2096db/opennn_pytorch-1.1.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c7badfe6de44f0082dc446fce4b1f740cfa83cad5185b3bbc24437d9d7790af",
        "md5": "a3b8539e8886c76d48219af31bdb4e7f",
        "sha256": "10822a70188a390073b0a21df7aeb8c32300d8ce88e1e024515fd749fd688dc2"
      },
      "downloads": -1,
      "filename": "opennn_pytorch-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a3b8539e8886c76d48219af31bdb4e7f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9.0",
      "size": 26453,
      "upload_time": "2022-12-02T00:48:23",
      "upload_time_iso_8601": "2022-12-02T00:48:23.225767Z",
      "url": "https://files.pythonhosted.org/packages/0c/7b/adfe6de44f0082dc446fce4b1f740cfa83cad5185b3bbc24437d9d7790af/opennn_pytorch-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}