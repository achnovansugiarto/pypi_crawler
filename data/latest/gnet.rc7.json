{
  "info": {
    "author": "Mehmet Gökçay Kabataş",
    "author_email": "mgokcaykdev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# gNet\n\n[![GitHub release](https://img.shields.io/github/v/release/MGokcayK/gNet)](https://github.com/MGokcayK/gNet/releases/)\n[![PyPI version shields.io](https://img.shields.io/pypi/v/gNet)](https://pypi.python.org/pypi/gNet/)\n[![PyPI license](https://img.shields.io/pypi/l/gNet.svg)](https://pypi.python.org/pypi/gNet/)\n[![Docs](https://img.shields.io/badge/Docs-readible-green.svg)](https://github.com/MGokcayK/gNet/blob/master/docs/)\n\ngNet is a mini Deep Learning(DL) library. It is written to understand how DL\nworks. It is running on CPU. It is written on Python language and used :\n\n    * Numpy for linear algebra calculations\n    * Matplotlib for plottings\n    * Texttable for proper printing of model summary in cmd\n    * wget for download MNIST data\n    * idx2numpy for load MNIST data\n\nsome 3rd party libraries.\n\nDuring devolopment, Tensorflow, Keras, Pytorch and some other libraries examined.\nKeras end-user approach is used. Therefore, if you are familiar with Keras,\nyou can use gNet easily.\n\ngNet has not a lot functions and methods for now, because subject is written when\nthey needed to learn. Also, gNet is personal project. Thus, its development process\ndepends on author learning process.\n\n## Installation\n\nInstallation can be done with pip or clone the git and use in local file of your workspace.\n\nTo install with [pip](https://pypi.org).\n\n```bash\npip install gNet\n```\n\n## Example - MNIST\n\n### Sequential Model\n```python\n\nfrom gNet import utils\nfrom gNet import neuralnetwork as NN\nfrom gNet import model\nfrom gNet import layer\nfrom gNet import optimizer\nfrom gNet import loss_functions as LF\n\n# download and load MNIST Dataset\nmnist = utils.MNIST_Downloader()\nx_train, y_train = mnist.load_train()\nx_test, y_test = mnist.load_test()\n\n# normalize\nx_train, x_test = x_train / 255.0, x_test / 255.0\n\n# make one-hot vector to label\nnum_classes = 10\ny_train = utils.make_one_hot(y_train, num_classes)\ny_test = utils.make_one_hot(y_test, num_classes)\n\n# create model\nmodel = model.Model()\n\n# add layers \nmodel.add(layer.Flatten(input_shape=x_train[0].shape))\nmodel.add(layer.Dense(128, 'relu'))\nmodel.add(layer.Dense(10, 'softmax'))\n\n# create NN structure\nnet = NN.NeuralNetwork(model)\n\n# print model summary firstly\nnet.get_model_summary()\n\n# setup structure\nnet.setup(loss_function='cce', optimizer='adam')\n\n# train \nnet.train(x_train, y_train, batch_size=32, epochs=10)\n\n# evaluate\nnet.evaluate(x_test, y_test)\n\n# get loss and accuracy plot\nnet.get_loss_plot(show=True)\nnet.get_accuracy_plot(show=True)\n\n```\n\nResult will be like :\n```\nModel created and initializing parameters..\n\n+--------------------+--------------+-----------------+\n|       Layer        | Output Shape | # of Parameters |\n+====================+==============+=================+\n| 0: flatten         | 784          | 0               |\n+--------------------+--------------+-----------------+\n| 1: Dense : relu    | 128          | 100480          |\n+--------------------+--------------+-----------------+\n| 2: Dense : softmax | 10           | 1290            |\n+--------------------+--------------+-----------------+\n| Total              |              | 101,770         |\n+--------------------+--------------+-----------------+\n\nTrain starting..\n\nEpoch : 1 / 10   100.00 %  Loss : 0.2640  Accuracy : 0.9241\nEpoch : 2 / 10   100.00 %  Loss : 0.1164  Accuracy : 0.9657\nEpoch : 3 / 10   100.00 %  Loss : 0.0802  Accuracy : 0.9761\nEpoch : 4 / 10   100.00 %  Loss : 0.0598  Accuracy : 0.9816\nEpoch : 5 / 10   100.00 %  Loss : 0.0469  Accuracy : 0.9856\nEpoch : 6 / 10   100.00 %  Loss : 0.0373  Accuracy : 0.9884\nEpoch : 7 / 10   100.00 %  Loss : 0.0301  Accuracy : 0.9908\nEpoch : 8 / 10   100.00 %  Loss : 0.0234  Accuracy : 0.9931\nEpoch : 9 / 10   100.00 %  Loss : 0.0213  Accuracy : 0.9933\nEpoch : 10 / 10   100.00 %  Loss : 0.0164  Accuracy : 0.9949\nPassed Training Time :  0:01:04.485637\nTest Loss : 0.0969, Accuracy : 0.9747\nPassed Evaluate Time :  0:00:00.140604\n```\n### Functional Connection Layer Model\n\n```python\n\nclass MnistTrainer():\n    def __init__(self) -> None:\n        self.batchSize = 32\n        self.epoch = 10\n        self.createModel()\n        self.loss = LF.CategoricalCrossEntropy()\n        self.acc = self.loss.get_metric()\n        self.layers = self.output.get_layers() # get all connectec layer from input layer.\n        self._optimizer = optimizer.Adam()\n        self.output.get_model_summary() # get model summary\n\n    def createModel(self):\n        self.flatten = layer.Flatten(input_shape=x_train[0].shape)\n        self.flatten() # calculate layer properties as input layer.\n        self.h1 = layer.Dense(128,'relu')\n        self.h1(self.flatten) # connect the hidden layer to flatten layer as previous layer.\n        self.output = layer.Dense(10, 'softmax')\n        self.output(self.h1)\n\n    # compute model layer by layer\n    def compute(self, inputs, train=True):\n        x = self.flatten.compute(inputs, train)\n        x = self.h1.compute(x, train)\n        return self.output.compute(x, train)\n\n    def train(self):\n        for e in range(self.epoch):\n            self._ite = 0\n            self.acc.reset()\n            self._starts = np.arange(0, x_train.shape[0], self.batchSize)\n            self._epoch_loss = 0\n            for _start in self._starts:\n                self._ite += 1\n                _end = _start + self.batchSize\n                _x_batch = T.make_tensor(x_train[_start:_end])\n                _y_batch = T.make_tensor(y_train[_start:_end])\n\n                self.output.zero_grad() # zeroing all layers' grad by calling `zero_grad`\n\n                _pred = self.compute(_x_batch, True)\n                _loss = self.loss.loss(_y_batch, _pred, self.output)\n                _loss.backward()\n                self._epoch_loss += np.mean(_loss.value)           \n                self._accVal = self.acc.accuracy(_y_batch,_pred)    \n\n                self._optimizer.step(self.layers)\n\n                printing = 'Epoch : %d / %d ' % (e + 1, self.epoch)\n                printing += ' Loss : %.4f ' % (np.round(self._epoch_loss / self._ite, 4))\n                printing += ' Accuracy : %.4f ' % (np.round(self._accVal, 4))\n                print(printing, end='\\r')\n            print(\"\")\n\nnet = MnistTrainer()\nnet.train()\n```\n\nResult will be like :\n```\nModel created and initializing parameters..\n+-----------------------------------+--------------+-----------------+\n| Layer No (Previous Layer) | Layer | Output Shape | # of Parameters |\n+===================================+==============+=================+\n| 0: flatten                        | 784          | 0               |\n+-----------------------------------+--------------+-----------------+\n| 1(0) | Dense : relu               | 128          | 100480          |\n+-----------------------------------+--------------+-----------------+\n| 2(1) | Dense : softmax            | 10           | 1290            |\n+-----------------------------------+--------------+-----------------+\n| Total                             |              | 101,770         |\n+-----------------------------------+--------------+-----------------+\nEpoch : 1 / 10  Loss : 0.2720  Accuracy : 0.9221\nEpoch : 2 / 10  Loss : 0.1200  Accuracy : 0.9649\nEpoch : 3 / 10  Loss : 0.0806  Accuracy : 0.9762\nEpoch : 4 / 10  Loss : 0.0588  Accuracy : 0.9829\nEpoch : 5 / 10  Loss : 0.0442  Accuracy : 0.9875\nEpoch : 6 / 10  Loss : 0.0330  Accuracy : 0.9912\nEpoch : 7 / 10  Loss : 0.0249  Accuracy : 0.9937\nEpoch : 8 / 10  Loss : 0.0197  Accuracy : 0.9950\nEpoch : 9 / 10  Loss : 0.0172  Accuracy : 0.9951\nEpoch : 10 / 10  Loss : 0.0144  Accuracy : 0.9959\n```\n\n\n## Details\n\nDetails can be found in [mini docs](../master/docs/gNet-v0.1.pdf).\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MGokcayK/gNet",
    "keywords": "mini,deep learning",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gNet",
    "package_url": "https://pypi.org/project/gNet/",
    "platform": "",
    "project_url": "https://pypi.org/project/gNet/",
    "project_urls": {
      "Homepage": "https://github.com/MGokcayK/gNet"
    },
    "release_url": "https://pypi.org/project/gNet/0.2.1.1/",
    "requires_dist": [
      "numpy (>=1.18.1)",
      "matplotlib (>=3.1.2)",
      "texttable (>=1.6.2)",
      "wget (>=3.2)",
      "idx2numpy (>=1.2.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "A mini Deep Learning Library",
    "version": "0.2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9174844,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d658b1f9ca8325ef4a412e37ea8004bd9557b193deec43e2770ff54b2692550",
          "md5": "ca7ac76ded05a67f1f69797828f16ef5",
          "sha256": "975ba53cebd18dae2576fe085c0b4d399fcccfd92bae0bfcede6c1c19ae8dd91"
        },
        "downloads": -1,
        "filename": "gNet-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca7ac76ded05a67f1f69797828f16ef5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 38928,
        "upload_time": "2020-07-09T13:43:01",
        "upload_time_iso_8601": "2020-07-09T13:43:01.530897Z",
        "url": "https://files.pythonhosted.org/packages/4d/65/8b1f9ca8325ef4a412e37ea8004bd9557b193deec43e2770ff54b2692550/gNet-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9040403f649964c902bfb74a8f2e2279279142cff71119e866d50e26681bb4c6",
          "md5": "6a4f3759136692c05ac362ad36f748f7",
          "sha256": "8e1a3bd066f1b24f69d9f25ae0160e2b65ff4f0f6ba1f27a2e8c46f2df72215c"
        },
        "downloads": -1,
        "filename": "gNet-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6a4f3759136692c05ac362ad36f748f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32881,
        "upload_time": "2020-07-09T13:43:04",
        "upload_time_iso_8601": "2020-07-09T13:43:04.382789Z",
        "url": "https://files.pythonhosted.org/packages/90/40/403f649964c902bfb74a8f2e2279279142cff71119e866d50e26681bb4c6/gNet-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43647040fa994bafd414e1d8da7d14d5586e4ad40230db2f84472b42e644633f",
          "md5": "604e3c603bf2a4efcd5ade6143e9dd86",
          "sha256": "ee861710e37f6575accb7e80b8a8f7476e9e25d591224502c2b7039a3d820160"
        },
        "downloads": -1,
        "filename": "gNet-0.1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "604e3c603bf2a4efcd5ade6143e9dd86",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42755,
        "upload_time": "2020-08-29T12:19:15",
        "upload_time_iso_8601": "2020-08-29T12:19:15.100869Z",
        "url": "https://files.pythonhosted.org/packages/43/64/7040fa994bafd414e1d8da7d14d5586e4ad40230db2f84472b42e644633f/gNet-0.1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a39f46244b43f00e8f22c478c04f62dde0aa23c13fded43c69137ae873fd36e",
          "md5": "bcbc4e0088447c7f3c870170bc088d2e",
          "sha256": "f3459a2a4bcdf7d49518e044a9c85dd05f37d26cea51440035d14c7434bde7a7"
        },
        "downloads": -1,
        "filename": "gNet-0.1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bcbc4e0088447c7f3c870170bc088d2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36559,
        "upload_time": "2020-08-29T12:19:16",
        "upload_time_iso_8601": "2020-08-29T12:19:16.762780Z",
        "url": "https://files.pythonhosted.org/packages/7a/39/f46244b43f00e8f22c478c04f62dde0aa23c13fded43c69137ae873fd36e/gNet-0.1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "376938c48f4e3f1ea240a19325381802c363796bebd5bda5c21c367e4bc0dc16",
          "md5": "ebee1b75eddc9165c862917aadeba9cf",
          "sha256": "c7b9ac0d0c1327e8d7f24558eb356bebc31afe2b61ac37a2e963e4085ad63933"
        },
        "downloads": -1,
        "filename": "gNet-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ebee1b75eddc9165c862917aadeba9cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42735,
        "upload_time": "2020-08-29T12:20:37",
        "upload_time_iso_8601": "2020-08-29T12:20:37.332722Z",
        "url": "https://files.pythonhosted.org/packages/37/69/38c48f4e3f1ea240a19325381802c363796bebd5bda5c21c367e4bc0dc16/gNet-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91d6722cb0dd11dd2bf8a9814921add50bc283f3781c8e5dd51733d1e073c48e",
          "md5": "e5c810e925bc2b663ee309e175a1767c",
          "sha256": "856452c9f67004f010365c403cd27d12fad43f00670fd704d61ddbf5e6b97e35"
        },
        "downloads": -1,
        "filename": "gNet-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e5c810e925bc2b663ee309e175a1767c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36569,
        "upload_time": "2020-08-29T12:20:38",
        "upload_time_iso_8601": "2020-08-29T12:20:38.838929Z",
        "url": "https://files.pythonhosted.org/packages/91/d6/722cb0dd11dd2bf8a9814921add50bc283f3781c8e5dd51733d1e073c48e/gNet-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ce6a312266cdd0708c4483cbbb5d903d757df85b23fe7bc06052bfc909cef93",
          "md5": "ea720e46bd90ffbf0c7db8099c896a11",
          "sha256": "2b293d6b04e8d3fb07b086933bde99af7a55cf05c5a4fa21d60621b7701d0e54"
        },
        "downloads": -1,
        "filename": "gNet-0.1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea720e46bd90ffbf0c7db8099c896a11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42716,
        "upload_time": "2020-09-01T14:49:04",
        "upload_time_iso_8601": "2020-09-01T14:49:04.773168Z",
        "url": "https://files.pythonhosted.org/packages/1c/e6/a312266cdd0708c4483cbbb5d903d757df85b23fe7bc06052bfc909cef93/gNet-0.1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed8e4ffffe468b62f5507e0c92b8df425be19bdd5a766695a03dcbda8fb07a21",
          "md5": "24360add7f3c6987a71ecbdcb6bc7392",
          "sha256": "69bbfa33bc7c6fddad11e373b71acdb686336ef103685b40ea8bfa93b28466a4"
        },
        "downloads": -1,
        "filename": "gNet-0.1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "24360add7f3c6987a71ecbdcb6bc7392",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36532,
        "upload_time": "2020-09-01T14:49:06",
        "upload_time_iso_8601": "2020-09-01T14:49:06.247511Z",
        "url": "https://files.pythonhosted.org/packages/ed/8e/4ffffe468b62f5507e0c92b8df425be19bdd5a766695a03dcbda8fb07a21/gNet-0.1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b088ad5300bd08168d84415afa58514e55a2f00fc7d7427587e8c6fc8906ae14",
          "md5": "d7aa696ca30ca69760fd7b131982c901",
          "sha256": "aa99748b6449f63a137278116b58e11f7ae86bbb7da42d02a0573c4e1cc6dc2a"
        },
        "downloads": -1,
        "filename": "gNet-0.1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7aa696ca30ca69760fd7b131982c901",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46571,
        "upload_time": "2020-09-22T10:38:52",
        "upload_time_iso_8601": "2020-09-22T10:38:52.729569Z",
        "url": "https://files.pythonhosted.org/packages/b0/88/ad5300bd08168d84415afa58514e55a2f00fc7d7427587e8c6fc8906ae14/gNet-0.1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54aaff45c5d34c5d2fa090b727b299d3dba4ee7ef4f4bc33db94cc52c8fe0b6b",
          "md5": "12dfb775a724cabd7db03e2f47a6805f",
          "sha256": "7c17e0f73c96d1cf193bc212c895c25d9fa5a6e1678aedbfff5677886cc5501f"
        },
        "downloads": -1,
        "filename": "gNet-0.1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "12dfb775a724cabd7db03e2f47a6805f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 40540,
        "upload_time": "2020-09-22T10:38:54",
        "upload_time_iso_8601": "2020-09-22T10:38:54.125193Z",
        "url": "https://files.pythonhosted.org/packages/54/aa/ff45c5d34c5d2fa090b727b299d3dba4ee7ef4f4bc33db94cc52c8fe0b6b/gNet-0.1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c776c763ca143cbc3b4eb417392eb6540e79d511ab0407d526860560cc38423",
          "md5": "519d35e7b4e37e54fb6c5b23b5b17dd3",
          "sha256": "6f7ece8a8ae819120b3d367d650bca02210303fe0225c551e0451131664368da"
        },
        "downloads": -1,
        "filename": "gNet-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "519d35e7b4e37e54fb6c5b23b5b17dd3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46541,
        "upload_time": "2020-09-22T10:58:24",
        "upload_time_iso_8601": "2020-09-22T10:58:24.033362Z",
        "url": "https://files.pythonhosted.org/packages/3c/77/6c763ca143cbc3b4eb417392eb6540e79d511ab0407d526860560cc38423/gNet-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20050d62384f17c7e7f95b35d4647f3330cfa0aa2444ecfa05b8ccff0877f301",
          "md5": "640329ad727fdc55afb85af93ecd10dd",
          "sha256": "6486f519567840e788d95afac64da8f754a5bffc78af3fc938e58b74205da490"
        },
        "downloads": -1,
        "filename": "gNet-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "640329ad727fdc55afb85af93ecd10dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 40549,
        "upload_time": "2020-09-22T10:58:25",
        "upload_time_iso_8601": "2020-09-22T10:58:25.642789Z",
        "url": "https://files.pythonhosted.org/packages/20/05/0d62384f17c7e7f95b35d4647f3330cfa0aa2444ecfa05b8ccff0877f301/gNet-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49f83fcf1cbebf3176b5ff77e8df92a0525b4029dad4948f940a79f8a57a6ea6",
          "md5": "84136255d5ec81078dbbdf9b50e00829",
          "sha256": "895b031716d4396a2d4f061f490ab77245008e510ed97c1c11c2d30e2e10ccd1"
        },
        "downloads": -1,
        "filename": "gNet-0.2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84136255d5ec81078dbbdf9b50e00829",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49108,
        "upload_time": "2021-01-19T19:11:17",
        "upload_time_iso_8601": "2021-01-19T19:11:17.466540Z",
        "url": "https://files.pythonhosted.org/packages/49/f8/3fcf1cbebf3176b5ff77e8df92a0525b4029dad4948f940a79f8a57a6ea6/gNet-0.2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "998c0bb0216bea390c2f6087e3cf18614af80d0df906864ee3a49c7ce46b1a1f",
          "md5": "e6f7ab540d121c9b254c3172daa66a3d",
          "sha256": "417f549bd02bf81d1c6b7f4f2586f3a359771a37d85beaf7641d41dcb95d0608"
        },
        "downloads": -1,
        "filename": "gNet-0.2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e6f7ab540d121c9b254c3172daa66a3d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43451,
        "upload_time": "2021-01-19T19:11:18",
        "upload_time_iso_8601": "2021-01-19T19:11:18.905295Z",
        "url": "https://files.pythonhosted.org/packages/99/8c/0bb0216bea390c2f6087e3cf18614af80d0df906864ee3a49c7ce46b1a1f/gNet-0.2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49f83fcf1cbebf3176b5ff77e8df92a0525b4029dad4948f940a79f8a57a6ea6",
        "md5": "84136255d5ec81078dbbdf9b50e00829",
        "sha256": "895b031716d4396a2d4f061f490ab77245008e510ed97c1c11c2d30e2e10ccd1"
      },
      "downloads": -1,
      "filename": "gNet-0.2.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "84136255d5ec81078dbbdf9b50e00829",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 49108,
      "upload_time": "2021-01-19T19:11:17",
      "upload_time_iso_8601": "2021-01-19T19:11:17.466540Z",
      "url": "https://files.pythonhosted.org/packages/49/f8/3fcf1cbebf3176b5ff77e8df92a0525b4029dad4948f940a79f8a57a6ea6/gNet-0.2.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "998c0bb0216bea390c2f6087e3cf18614af80d0df906864ee3a49c7ce46b1a1f",
        "md5": "e6f7ab540d121c9b254c3172daa66a3d",
        "sha256": "417f549bd02bf81d1c6b7f4f2586f3a359771a37d85beaf7641d41dcb95d0608"
      },
      "downloads": -1,
      "filename": "gNet-0.2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e6f7ab540d121c9b254c3172daa66a3d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 43451,
      "upload_time": "2021-01-19T19:11:18",
      "upload_time_iso_8601": "2021-01-19T19:11:18.905295Z",
      "url": "https://files.pythonhosted.org/packages/99/8c/0bb0216bea390c2f6087e3cf18614af80d0df906864ee3a49c7ce46b1a1f/gNet-0.2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}