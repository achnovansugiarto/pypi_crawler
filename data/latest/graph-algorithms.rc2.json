{
  "info": {
    "author": "David McDougall <dam1784[at]rit.edu>",
    "author_email": "dam1784@rit.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Copyright (c) 2016 David McDougall\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\nDescription: Common Graph Algorithms Library\n        \n        Library of graph algorithms which operate directly on python data structures.\n        \n        This library uses a novel API for representing graphs.  Graph vertexes can be \n        any hashable python value and the connectivity between vertexes is\n        represented with a callback function.  This callback is named the 'adjacent' \n        function.  The adjacent function has the following form:\n        \n        def adjacent(vertex):\n            '''\n            This function returns all vertexes which the given vertex is connected to.\n            '''\n            return iterable-of-neighboring-vertexes\n        \n        \n        \n        Contents:\n        \n        depth_first_traversal()\n            A lazy depth first traversal\n        \n        depth_first_search()\n            A depth first search\n        \n        iterative_deepening_depth_first_search()\n            Searching infinite graphs\n        \n        a_star()\n            Fast optimal pathfinding\n        \n        topological_sort()\n            Dependency resolution.\n        \n        strongly_connected_components()\n            Determines which areas of the graph can reach which other areas.\n        \n        In the future I would like to implement more algorithms:\n        - Minimum Spanning Tree\n        - Min-cut/Max-flow\n        - Substructure Search\n        \n        \n        Installation note:\n        This package optionally uses numpy.\n        Numpy is used by some unit tests.\n        Numpy is used to calculate A-stars effective branching factor (EBF).\n        If numpy is not available then EBF is not reported.\n        \n        \n        Comments and feedback are welcome\n        Send to David McDougall  email: dam1784[at]rit.edu\n        \nKeywords: development,graph\nPlatform: UNKNOWN\nClassifier: Development Status :: 3 - Alpha\nClassifier: License :: OSI Approved :: MIT License\nClassifier: Operating System :: OS Independent\nClassifier: Intended Audience :: Developers\nClassifier: Topic :: Software Development\nClassifier: Topic :: Software Development :: Libraries\nClassifier: Topic :: Software Development :: Libraries :: Python Modules\nClassifier: Topic :: Utilities\nClassifier: Programming Language :: Python :: 3\nClassifier: Programming Language :: Python :: 3.5\nProvides-Extra: debug\nProvides-Extra: test\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.python.org/pypi/common_algorithms",
    "keywords": "",
    "license": "The MIT License (MIT)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "graph-algorithms",
    "package_url": "https://pypi.org/project/graph-algorithms/",
    "platform": "",
    "project_url": "https://pypi.org/project/graph-algorithms/",
    "project_urls": {
      "Homepage": "https://pypi.python.org/pypi/common_algorithms"
    },
    "release_url": "https://pypi.org/project/graph-algorithms/0.1.1/",
    "requires_dist": [
      "numpy ; extra == 'debug'",
      "numpy ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Common Graph Algorithms Library",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9248373,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fe30860a018ef1dfc549d415088d2dcbb7dc01b65a62dd77bda4bf4fcc347bc",
          "md5": "827bc201d123ef79cf8911f752328f1f",
          "sha256": "cc76c5cf183c3697298295ebe57e4f9235a4a133528e9cd240db9b2018afbcc2"
        },
        "downloads": -1,
        "filename": "graph_algorithms-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "827bc201d123ef79cf8911f752328f1f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19566,
        "upload_time": "2017-02-04T14:22:57",
        "upload_time_iso_8601": "2017-02-04T14:22:57.420998Z",
        "url": "https://files.pythonhosted.org/packages/8f/e3/0860a018ef1dfc549d415088d2dcbb7dc01b65a62dd77bda4bf4fcc347bc/graph_algorithms-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c1f40c481e43cfa15c708015ed6cb518033a16a7d0ddd81a59d1ec26ba9ce49",
          "md5": "b0b6751a74bab4b668c760a6edffb80d",
          "sha256": "76fa77f3c5c76746ef079b758b3f12e62c229d76a595a0b7ef4b1ce22c5627d5"
        },
        "downloads": -1,
        "filename": "graph_algorithms-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0b6751a74bab4b668c760a6edffb80d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20089,
        "upload_time": "2021-01-27T22:16:46",
        "upload_time_iso_8601": "2021-01-27T22:16:46.915493Z",
        "url": "https://files.pythonhosted.org/packages/2c/1f/40c481e43cfa15c708015ed6cb518033a16a7d0ddd81a59d1ec26ba9ce49/graph_algorithms-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c1f40c481e43cfa15c708015ed6cb518033a16a7d0ddd81a59d1ec26ba9ce49",
        "md5": "b0b6751a74bab4b668c760a6edffb80d",
        "sha256": "76fa77f3c5c76746ef079b758b3f12e62c229d76a595a0b7ef4b1ce22c5627d5"
      },
      "downloads": -1,
      "filename": "graph_algorithms-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b0b6751a74bab4b668c760a6edffb80d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20089,
      "upload_time": "2021-01-27T22:16:46",
      "upload_time_iso_8601": "2021-01-27T22:16:46.915493Z",
      "url": "https://files.pythonhosted.org/packages/2c/1f/40c481e43cfa15c708015ed6cb518033a16a7d0ddd81a59d1ec26ba9ce49/graph_algorithms-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}