{
  "info": {
    "author": "Sean Redmond",
    "author_email": "github-smr@sneakemail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# eparkhontos\n\nConversion between calendar years (mostly BCE but also CE),\nastronomical dates, and the convention used for most ancient Greek\ndates, a span of two Julian years (for example, “431/430”).\n\nThe name comes from the ancient Greek formula for refering to years as\n_ep' arkhontos_ ... (ἐπ᾽ ἄρχοντος ...) “when so-and-so was arkhon.”\n\n## Installation\n\n    pip install eparkhontos\n    \n## Usage\n\n### Parsing Arkhon Years\n\n`eparkhontos` can parse strings like “431/430”, “431/30”, “431/30\nBCE”, “431-430 b.c.”, all of which will return an [“astronomical\nyear”](https://en.wikipedia.org/wiki/Astronomical_year_numbering)—an\ninteger which, for years BCE is negative and offset by 1 because 1 BCE\nis numbered as 0. The astronomical year is assigned to the year in the\nancient Greek year begins, so \"431/430\" becomes -430 (meaning 431\nBCE):\n\n    >>> import eparkhontos as epi\n    >>> epi.parse_arkhon(\"431/430\")\n    -430\n    >>> epi.parse_arkhon(\"431/430 B.C.\")\n    -430\n    >>> epi.parse_arkhon(\"431/430 BCE\")\n    -430\n    >>> epi.parse_arkhon(\"431-30\")\n    -430\n\t\nIf the string contains any form of “CE” or “AD” the year will be treated accordingly:\n\n    >>> epi.parse_arkhon(\"100/101 CE\")\n    100\n\n### Formatting Astronomical Years\n\nYou can get a formatted arkhon year from an astronomical year,\nincluding BCE/CE appended if you want, or prepended if you want:\n\n    >>> epi.to_arkhon(-430)\n    '431/430'\n    >>> epi.to_arkhon(-430, with_era=True)\n    '431/430 BCE'\n    >>> epi.to_arkhon(-430, with_era=True, prefix_era=True)\n    'BCE 431/430'\n    >>> epi.to_arkhon(-430, True)\n    '431/430 BCE'\n    >>> epi.to_arkhon(-430, True, True)\n    'BCE 431/430'\n    >>> epi.to_arkhon(430, True)\n    '430/431  CE'\n\t\nNote that “CE” is padded with leading space to align with “BCE.”\n\t\n### Getting an Astronomical Year\n\nSo you don’t have to remember how to correctly offset for an\nastronomical year, you can convert an `int` or `str`. For instance, if\nyou want “431” to be interpreted as “431 BCE”:\n\n    >>> epi.to_astronomical(431)\n    -430\n    >>> epi.to_astronomical(\"431\")\n    -430\n\nIf it is, in fact, a year CE:\n\n    >>> epi.to_astronomical(\"431\", is_bce=False)\n    431\n    >>> epi.to_astronomical(\"431\", False)\n    431\n\n## Contributing\n\nBug reports and pull requests are welcome on GitHub at\nhttps://github.com/seanredmond/eparkhontos\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/seanredmond/eparkhontos",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "eparkhontos",
    "package_url": "https://pypi.org/project/eparkhontos/",
    "platform": null,
    "project_url": "https://pypi.org/project/eparkhontos/",
    "project_urls": {
      "Bug Tracker": "https://github.com/seanredmond/eparkhontos/issues",
      "Homepage": "https://github.com/seanredmond/eparkhontos"
    },
    "release_url": "https://pypi.org/project/eparkhontos/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Parse and convert ancient Greek archon dates",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16881267,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d7a5398478e12255b029e0392cfd18be724ba18b5eba36be15ec725e46af7d2",
          "md5": "c92d36cfb5460f2d4ad962f2c5dd8162",
          "sha256": "f39f54eb919ffdc3019e1f52c1796c6e404d2d5c8a29f1c73183d9581b11cd37"
        },
        "downloads": -1,
        "filename": "eparkhontos-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c92d36cfb5460f2d4ad962f2c5dd8162",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 17378,
        "upload_time": "2023-02-16T01:04:29",
        "upload_time_iso_8601": "2023-02-16T01:04:29.036661Z",
        "url": "https://files.pythonhosted.org/packages/0d/7a/5398478e12255b029e0392cfd18be724ba18b5eba36be15ec725e46af7d2/eparkhontos-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a84dde96454c7fc721ddf3b3729df536f5cf60a554fd88b7c50c8e0f38902863",
          "md5": "46a42a0faca3de0f7309eeac963915b5",
          "sha256": "a2ee17e784f3affe15e97aba2ba88b78e858a82d912f2ede18cacc7a7456587b"
        },
        "downloads": -1,
        "filename": "eparkhontos-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "46a42a0faca3de0f7309eeac963915b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16161,
        "upload_time": "2023-02-16T01:04:31",
        "upload_time_iso_8601": "2023-02-16T01:04:31.056384Z",
        "url": "https://files.pythonhosted.org/packages/a8/4d/de96454c7fc721ddf3b3729df536f5cf60a554fd88b7c50c8e0f38902863/eparkhontos-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d7a5398478e12255b029e0392cfd18be724ba18b5eba36be15ec725e46af7d2",
        "md5": "c92d36cfb5460f2d4ad962f2c5dd8162",
        "sha256": "f39f54eb919ffdc3019e1f52c1796c6e404d2d5c8a29f1c73183d9581b11cd37"
      },
      "downloads": -1,
      "filename": "eparkhontos-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c92d36cfb5460f2d4ad962f2c5dd8162",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 17378,
      "upload_time": "2023-02-16T01:04:29",
      "upload_time_iso_8601": "2023-02-16T01:04:29.036661Z",
      "url": "https://files.pythonhosted.org/packages/0d/7a/5398478e12255b029e0392cfd18be724ba18b5eba36be15ec725e46af7d2/eparkhontos-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a84dde96454c7fc721ddf3b3729df536f5cf60a554fd88b7c50c8e0f38902863",
        "md5": "46a42a0faca3de0f7309eeac963915b5",
        "sha256": "a2ee17e784f3affe15e97aba2ba88b78e858a82d912f2ede18cacc7a7456587b"
      },
      "downloads": -1,
      "filename": "eparkhontos-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "46a42a0faca3de0f7309eeac963915b5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 16161,
      "upload_time": "2023-02-16T01:04:31",
      "upload_time_iso_8601": "2023-02-16T01:04:31.056384Z",
      "url": "https://files.pythonhosted.org/packages/a8/4d/de96454c7fc721ddf3b3729df536f5cf60a554fd88b7c50c8e0f38902863/eparkhontos-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}