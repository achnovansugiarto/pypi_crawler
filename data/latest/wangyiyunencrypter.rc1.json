{
  "info": {
    "author": "flyingdream",
    "author_email": "1519657825@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "1. Requirements: execjs \n \n        pip install pyexecjs\n\n2. Call function:\n\n    (1) Import:\n\n        from wangyiyunEncrypter.encrypter import WangyiyunEncrypter\n        \n    (2) Construct keywords' data to search songs:\n     \n        encrypted_search_data = WangyiyunEncrypter().construct_search_data(keywords=keywords, limit=limit)\n\n    (3) Construct song's data to get its real url:\n        \n        encrypted_song_data = WangyiyunEncrypter().construct_song_data(song_id=song_id)\n        \n    (4) Construct lyric's data to get lyric:\n    \n        encrypted_lyric_data = WangyiyunEncrypter().construct_lyric_data(song_id=song_id)\n\n    (5) Construct comments' data to get the comments:\n    \n        encrypted_comments_data = WangyiyunEncrypter().construct_comments_data(pageNo=pageNo, pageSize=pageSize, song_id=song_id)\n        \n    (6) Params:\n        \n     - keywords: the song's name or artist's name you want to search for\n     - limit: the amounts of the search results you want\n     - song_id: the music id\n     - pageNo: the order number of the pages of comments\n     - pageSize: comments amounts in per page",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wangyiyunEncrypter",
    "package_url": "https://pypi.org/project/wangyiyunEncrypter/",
    "platform": "",
    "project_url": "https://pypi.org/project/wangyiyunEncrypter/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/wangyiyunEncrypter/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "the encrypt functions of 163 music",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10158311,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6dd2bd89315cef70edd628f6135d9cbda3dd253510ecb2dec8fc5b10901e5bc",
          "md5": "78c2e71546748adfb25daee04ea41378",
          "sha256": "b20a899840103f2f3b1c50c8883271ba111f26a0aac87bd322d59de0960c9840"
        },
        "downloads": -1,
        "filename": "wangyiyunEncrypter-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "78c2e71546748adfb25daee04ea41378",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12869,
        "upload_time": "2021-04-24T08:03:15",
        "upload_time_iso_8601": "2021-04-24T08:03:15.270441Z",
        "url": "https://files.pythonhosted.org/packages/f6/dd/2bd89315cef70edd628f6135d9cbda3dd253510ecb2dec8fc5b10901e5bc/wangyiyunEncrypter-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6dd2bd89315cef70edd628f6135d9cbda3dd253510ecb2dec8fc5b10901e5bc",
        "md5": "78c2e71546748adfb25daee04ea41378",
        "sha256": "b20a899840103f2f3b1c50c8883271ba111f26a0aac87bd322d59de0960c9840"
      },
      "downloads": -1,
      "filename": "wangyiyunEncrypter-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "78c2e71546748adfb25daee04ea41378",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12869,
      "upload_time": "2021-04-24T08:03:15",
      "upload_time_iso_8601": "2021-04-24T08:03:15.270441Z",
      "url": "https://files.pythonhosted.org/packages/f6/dd/2bd89315cef70edd628f6135d9cbda3dd253510ecb2dec8fc5b10901e5bc/wangyiyunEncrypter-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}