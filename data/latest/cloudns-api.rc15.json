{
  "info": {
    "author": "Harold Bradley III | Prestix Studio, LLC",
    "author_email": "harold@prestix.studio",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "cloudns_api\n###########\n\nA Python 3 interface to the ClouDNS.net API\n===========================================\n\nPlease note that this is still in Beta. Use at your own risk.\n\nThis project is an independent project not developed by\n`CloudNS.net <https://cloudns.net>`__.\n\nThe interface is designed to be simple and intuitive. Entities are represented\nas modules. Each has a list, create, update, and delete function (when\nappropriate, ie, you cannot delete an SOA record). Some entities have functions\nspecific to them, but whenever possible, the arguments are consistent. One of\nthe major goals of this project is code readability.\n\nAnother major goal is for the code to have 90%+ test coverage.\n\nFor documentation on the `CloudNS.net <https://cloudns.net>`__ API see `here\n<https://www.cloudns.net/wiki/article/41/>`__.\n\nPlease submit any bug reports and bug fixes on github `here\n<https://github.com/prestix-studio/>`__.\n\n\n\nInstalling and including in projects\n====================================\n\n\nInstalling cloudns_api\n----------------------\n\n.. code:: bash\n\n    $ pip install cloudns_api\n\n\nIn order to authenticate, you must first generate a CloudNS auth user or sub\nuser and password combination. (See `here\n<https://www.cloudns.net/wiki/article/42/>`__ for instructions.) Then you must\nset the appropriate username and password values as environment variables as\nfollows:\n\n.. code:: bash\n\n    # USERNAME:\n    export CLOUDNS_API_AUTH_ID=my_user\n    #      - or -\n    export CLOUDNS_API_SUB_AUTH_ID=my_user\n    #      - or -\n    export CLOUDNS_API_SUB_AUTH_USER=my_user\n\n    # PASSWORD:\n    # This should be the password that corresponds to the above user or sub\n    # user.\n    export CLOUDNS_API_AUTH_PASSWORD=my_password\n\n\nWhen you are debugging, you can set the environment variable\n`CLOUDNS_API_DEBUG` to True:\n\n.. code:: bash\n\n    export CLOUDNS_API_DEBUG=True\n\n\nTo make things easier, you could put these in your python virtual environment\nor use a package like\n`python-dotenv <https://github.com/theskumar/python-dotenv>`__ to automatically\nload your environment variables. Be sure to *not* include your private username\nand password in your public repositories.\n\n\nRunning Tests\n-------------\n\n.. code:: bash\n\n    $ cd <cloudns_api directory>\n    $ py.test\n\n    $ py.test -x                    # Stop on failures\n    $ py.test tests/test_record.py  # Specific test\n    $ py.test -k validate           # Run tests with 'validate' in the name\n\n\nImporting and Basic Usage\n-------------------------\n\n.. code:: python\n\n    >>> import cloudns_api\n\n    >>> response = cloudns_api.zone.list(search='example')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      [\n                {\n                    \"name\":     \"example.com\",\n                    \"type\":     \"master\",\n                    \"zone\":     \"domain\",\n                    \"status\":   \"1\"\n                },\n                {\n                    \"name\":     \"example.net\",\n                    \"type\":     \"master\",\n                    \"zone\":     \"domain\",\n                    \"status\":   \"1\"\n                },\n                {\n                    \"name\":     \"example.org\",\n                    \"type\":     \"master\",\n                    \"zone\":     \"domain\",\n                    \"status\":   \"1\"\n                }\n            ]\n        }\n\n\n\nAPI Reference\n=============\n\nIntroduction\n------------\n\nWe have created the API to be consistent and predictable. API calls usually\ninclude `list`, `create`, `get`, and `update` functions that do exactly what\nthey say. Arguments are passed in a consistent manner across all functions.\nWhen an argument accepts an integer, it can be passed as an integer or a string\nof that integer.\n\nAll arguments are passed to the API functions as keyword arguments. Each API\nfunction turns these arguments into a `Parameters` instance. The construction\nof the `Parameters` instance can also include information for validating the\narguments. This validation happens by default when the object is instantiated.\nIf a validation error occurs, the exception is thrown and handled in the api\ndecorator. A parameter is required unless the optional flag is set to `True`.\nThe name of the parameter is matched to a validation function unless the\n`validate_as` option is set on that particular parameter. The `Parameters`\nobject has a to_dict() method that returns the parameters as a key-value dict\nto be passed on to the CloudNS API using requests.\n\nThe CloudNS API sometimes uses camel case and sometimes uses dashes in its\nparameters. In our API, we convert both of these to snake case for consistency\nand in order to be \"pythonic\".\n\nAPI `update` functions require all required parameters to be passed. This can\nbe inconvenient at times, so cloudns_api includes an argument `patch` that when\nset to `True` allows you to pass only arguments you wish to change. Behind the\nscenes, the API will get the existing data and merge it with the new data for\nthe update call. We've also included the convenient `patch` function as a\nwrapper around `update` with the `patch` argument set to `True`.\n\nThe cloudns_api includes these two helpful functions for checking your login\ncredentials and retrieving your CloudNS nameservers:\n\n.. code:: python\n\n    >>> print(cloudns_api.api.get_login())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"status\":             \"Success\",\n                \"status_description\": \"Success login.\"\n            }\n        }\n\n    >>> print(cloudns_api.api.get_nameservers())\n\n\nApiResponse\n^^^^^^^^^^^\n\nAll API calls return an `ApiResponse` instance. The `ApiResponse` object is a\nwrapper around the basic response object from the `requests\n<https://github.com/kennethreitz/requests>`__ library. We've added a few\nproperties and functions specific to our needs here.\n\n.. code:: python\n\n    >>> print(response.success)      # See if a response succeeded\n\n    >>> print(response.status_code)  # Get the status of a response\n\n    >>> print(response.payload)      # The payload of the response\n                                     # Note that the parameters are converted\n                                     # to camel case here.\n\n    >>> print(response.json())       # Get the response as json object\n\n    >>> print(response.string())     # Get the response as json string\n\n\nApiParameter\n^^^^^^^^^^^^\n\nThe `ApiParameter` object is responsible for describing the kinds of parameters\nto pass to the api function and how these parameters should be validated.\nUnderstanding the ApiParameter object is not necessary for using the API, but\ncan be helpful to see what is going on under the hood.\n\nBy default, an ApiParameter validates its parameters upon initialization. But\nif the `validate` parameter is set to false, this can be deferred until later.\nYou can then call the `validate()` method to manually validate the parameters.\n\n.. code:: python\n\n    >>> print(parameters.validate())  # Validates the parameters according to\n                                      # their definitions\n\n    >>> print(response.to_dict())  # Returns the parameters as a dict. Used\n                                   # when passing the parameters to requests.\n\nA full discription of how an ApiParameter object and its parameter definition\nworks can be found in the `cloudns_api/parameters.py` file. You may also need\nto reference the `cloudns_api/validation.py` module to see how validation\nworks.\n\n\nDNS ZONE\n--------\n\nParameters:\n\n+ page - int/string (optional) Page number to show.\n+ rows_per_page - int/string (optional) Number of rows per page to show.\n+ search - string (optional) Optional string to filter results by.\n+ group_id - int/string (optional) Optional group id to filter results by.\n\nResponse Parameters:\n\n+ name - Domain name.\n+ type - Zone type (Master, Slave, Parked, GeoDNS)\n+ zone -\n+ status - active (1) or inactive(0)\n\n\nListing DNS Zones\n^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.zone.list(search='example')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      [\n                {\n                    \"name\":     \"example.com\",\n                    \"type\":     \"master\",\n                    \"zone\":     \"domain\",\n                    \"status\":   \"1\"\n                },\n                {\n                    \"name\":     \"example.net\",\n                    \"type\":     \"master\",\n                    \"zone\":     \"domain\",\n                    \"status\":   \"1\"\n                },\n                {\n                    \"name\":     \"example.org\",\n                    \"type\":     \"master\",\n                    \"zone\":     \"domain\",\n                    \"status\":   \"1\"\n                }\n            ]\n        }\n\n    >>> print(cloudns_api.zone.get_page_count(rows_per_page=10))  # Get page count\n\n\nCreating DNS Zones\n^^^^^^^^^^^^^^^^^^\n\nNOTE: The nameserver argument doesn't seem to currently work on ClouDNS's\nservers.\n\n.. code:: python\n\n    >>> response = cloudns_api.zone.create(domain_name='example.com',\n                                           zone_type='master')\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"status\": \"Success\",\n                \"status_description\":\n                    \"Domain zone example.com was created successfully.\"\n            }\n        }\n\n\nGetting a DNS Zone\n^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.zone.get(domain_name='example.com')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"name\":     \"example.com\",\n                \"type\":     \"master\",\n                \"zone\":     \"domain\",\n                \"status\":   \"1\"\n            }\n        }\n\n\nUpdating a DNS Zone Serial Number\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.zone.update(domain_name='example.com')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"status\": \"Success\",\n                \"status_description\":\n                    \"Domain zone example.com was updated successfully.\"\n            }\n        }\n\n\nActivating/Deactivating a DNS Zone\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.zone.activate(domain_name='example.com')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"status\": \"Success\",\n                \"status_description\":\n                    \"The zone was activated!\"\n            }\n        }\n\n    >>> cloudns_api.zone.deactivate(domain_name='example.com')\n\n    >>> cloudns_api.zone.toggle_activation(domain_name='example.com')\n\n\nDeleting a DNS Zone\n^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.zone.delete(domain_name='example.com')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"status\": \"Success\",\n                \"status_description\":\n                    \"Domain zone example.com was deleted successfully.\"\n            }\n        }\n\n\nGetting ClouDNS Zone Stats\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.zone.get_stats()\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"count\": \"25\",  # Number of zones used\n                \"limit\": \"40\"   # Number of zones allowed by your plan\n            }\n        }\n\n\nCheck if DNSSEC is available for a zone\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.zone.dnssec_available(domain_name='example.com')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      1,\n        }\n\n\nActivating/Deactivating a DNSSEC\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.zone.dnssec_activate(domain_name='example.com')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"status\": \"Success\",\n                \"status_description\":\n                    \"The DNSSEC is activated for your zone. The keys will be generated soon.\"\n            }\n        }\n\n    >>> cloudns_api.zone.deactivate(domain_name='example.com')\n\n\nGetting DNSSEC DS Records\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.zone.dnssec_ds_records(domain_name='example.com')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n             \"payload\": {\n                \"status\": \"1\",\n                \"ds\": [\n                    \"example.com. 3600 IN DS 9813 13 2 613FDE9D90DB360EE4DDC1E18170D3306147A95E4F77177017C83E31057B9141\"\n                ],\n                \"ds_records\": [\n                    {\n                        \"digest\": \"613FDE9D90DB360EE4DDC1E18170D3306147A95E4F77177017C83E31057B9141\",\n                        \"key_tag\": \"9813\",\n                        \"algorithm\": \"13\",\n                        \"algorithm_name\": \"ECDSA SHA-256\",\n                        \"digest_type\": \"2\",\n                        \"digest_type_name\": \"SHA-256\"\n                    }\n                ],\n                \"dnskey\": [\n                    \"example.com. 3600 IN DNSKEY 257 3 13 tDYgHxnS3cbLb9B2B2l+SsawWiG4jOzoFmnjy7PVL0NK5qiil/254sZLxEhXs0LNiL6YxcRVzYdHLkWi074SuQ==\",\n                    \"example.com. 3600 IN DNSKEY 256 3 13 Nr9P1PdBNRCI7mpF7Nrx72rNZ7EQcHlVggUBJR0E9l+W0j37WlpluKM4qv/WVn/QsZxQOU1eSMPPyIXlT3sCvw==\"\n                ]\n            }\n        }\n\n\nChecking if a DNS Zone Has Been Updated on all Servers\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.zone.is_updated(domain_name='example.com')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      True\n        }\n\n\nSOA Record\n----------\n\nEvery domain zone contains one SOA record that contains the current version of\nthe data in the zone, the administrator of the zone record, and TTL information\nfor the zone.\n\nThese functions only work for master zones.\n\nSOA Parameters:\n\n+ domain_name - string (required) Domain name or reverse zone name whose SOA\n  details you want to modify.\n+ primary_ns - string (required) Hostname of primary nameserver.\n+ admin_mail - string (required) DNS zone administrator's e-mail.\n+ refresh - integer (required) The time in seconds that a secondary DNS server\n  waits before querying the primary DNS server's SOA record to check for\n  changes. Rate can be any integer from 1200 to 43200 seconds.\n+ retry - integer (required) The time in seconds that a secondary server waits\n  before retrying a failed zone transfer. Usually, the retry rate is less than\n  the refresh rate. Rate can be any integer from 180 to 2419200 seconds.\n+ expire - integer (required) The time in seconds that a secondary server will\n  keep trying to complete a zone transfer. If this time expires before a\n  successful zone transfer, the secondary server will expire its zone file. The\n  secondary will stop answering queries, as it considers its data too old to be\n  reliable. Time can be any integer from 1209600 to 2419200 seconds.\n+ default_ttl - integer (required) The minimum time-to-live value applies to\n  all resource records in the zone file. TTL can be any integer from 60 to\n  2419200 seconds.\n\nNote that ClouDNS automatically increments the serial number when the zone is\nupdated or changed.\n\n\nGetting the SOA for a domain\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.soa.get('example.com')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"admin_mail\":     \"admin@example.com\",\n                \"default_ttl\":    \"3600\",\n                \"expire\":         \"1209600\",\n                \"primary_ns\":     \"ns1.example.com\",\n                \"refresh\":        \"7200\",\n                \"retry\":          \"1800\",\n                \"serial_number\":  \"2019060601\"\n            }\n        }\n\n\nUpdating the SOA for a domain\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.soa.update(\n            'example.com',  # The domain to patch\n            admin_mail='admin@example.com',\n            default_ttl=3600,\n            expire=1209600,\n            primary_ns='ns1.example.com',\n            refresh=7200,\n            retry=1800,\n        )\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"status\": \"Success\",\n                \"status_description\":\n                    \"The SOA record was modified successfully.\"\n            }\n        }\n\n\nPatch Updating the SOA for a domain\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA patch update allows you to specify only the parameters you wish to change.\n\n.. code:: python\n\n    >>> response = cloudns_api.soa.patch(\n            'example.com',  # The domain to patch\n            admin_mail='admin@example.com',\n            primary_ns='ns1.example.com',\n        )\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"status\": \"Success\",\n                \"status_description\":\n                    \"The SOA record was modified successfully.\"\n            }\n        }\n\n\nDNS Records\n-----------\n\nBesides the SOA record, a domain can have a number of other records.\n\n+ A record - points a hostname to an IPv4 address.\n\n  * host - subdomain to optionally add to main domain\n\n  * record - an IPv4\n\n  * ttl - time to keep record in cache\n\n\n+ AAAA record - points a hostname to an IPv6 address.\n\n  * host - subdomain to optionally add to main domain\n\n  * record - an IPv6\n\n  * ttl - time to keep record in cache\n\n\n+ MX record - server responsible for accepting e-mail messages.\n\n  * host - subdomain to optionally add to main domain\n\n  * record - hostname of the server that will handle the email messages\n\n  * priority - priority index, prioritize the lowest indexed server\n\n  * ttl - time to keep record in cache\n\n\n+ CNAME record - canonical name record used for specifying host alisases.\n\n  * host - subdomain to optionally add to main domain\n\n  * record - the host this is an alias for\n\n  * ttl - time to keep record in cache\n\n\n+ TXT record - used to provide information for a wide variety of sources.\n\n  * host - subdomain to optionally add to main domain\n\n  * record - any text is valid\n\n  * ttl - time to keep record in cache\n\n\n+ SPF record - used to identify which servers are permitted to send emails for\n  your host. This record type is deprecated in favor of using a TXT record.\n\n  * host - subdomain to optionally add to main domain\n\n  * record - a specific format is required for this record\n\n  * ttl - time to keep record in cache\n\n\n+ NS record - used to identify the name servers responsible for your domain.\n  This must be the same as what your domain provider has configured.\n\n  * host - subdomain to optionally add to main domain\n\n  * record - the hostname of the nameserver\n\n  * ttl - time to keep record in cache\n\n\n+ SRV record - used to identify the host and port of specific services.\n\n  * host - subdomain to optionally add to main domain\n\n  * record - the hostname of the server\n\n  * port - the port the service answers on\n\n  * priority - priority index, prioritize the lowest indexed server\n\n  * weight - a relative weight for services with the same index\n\n  * ttl - time to keep record in cache\n\n\n+ WR record - web redirect record. Points web requests from one server to\n  another. This is not an official DNS record type.\n\n  * host - subdomain to optionally add to main domain\n\n  * record - the url to redirect\n\n  * redirect-type - use a 301 (permanent) or 302 (temporary) redirect code\n\n  * ttl - time to keep record in cache\n\n  * frame - redirect the url in a frame so it is \"transparent\" to the user. Use\n    '1' to enable and '0' to disable.\n\n  * frame-title - Title of the frame\n\n  * frame-keywords - Keywords used in the frame\n\n  * frame-description - Description used in the frame\n\n\n+ ALIAS record - a special ClouDNS record type similar to CNAME records that\n  allow you to take advantage of Round-robbin DNS.\n\n  * host - subdomain to optionally add to main domain\n\n  * record - the host this is an alias for\n\n  * ttl - time to keep record in cache\n\n\n+ RP record - specifies the email address of the user responsible for the\n  hostname.\n\n  * host - subdomain to optionally add to main domain\n\n  * record - an email address\n\n  * ttl - time to keep record in cache\n\n\n+ SSHFP record - contains the fingerprints for public keys used in SSH servers.\n\n  * host - subdomain to optionally add to main domain\n\n  * record - the fingerprint\n\n  * algorithm - algorithm type to use (RSA, DSA, ECDSA, or Ed25159)\n\n  * fptype - fingerprint type (SHA-1 or SHA-256)\n\n  * ttl - time to keep record in cache\n\n\n+ PTR record - used for reverse DNS lookups. For every PTR record, there must\n  be a corresponding A record. Must be created on a reverse DNS zone.\n\n  * host - subdomain to optionally add to main domain\n\n  * record - the PTR record\n\n  * ttl - time to keep record in cache\n\n\n+ NAPTR record - used to map servers and user addresses in the Session\n  Initiation Protocol (SIP)\n\n  * host - subdomain to optionally add to main domain\n\n  * record - the NAPTR record\n\n  * ttl - time to keep record in cache\n\n\n+ CAA record - allows a DNS domain name holder to specify one or more\n  Certification Authorities (CAs) authorized to issue certificates for that\n  domain\n\n  * host - subdomain to optionally add to main domain\n\n  * ttl - time to keep record in cache\n\n  * caa-flag - 0 for non-critical, 128 for critical\n\n  * caa-type - issue, issuewild, iodef\n\n  * caa-value - the record value\n\n\n+ TLSA record - asociates a TLS certificate or public key with the domain name\n\n  * host - the RFC TLSA format: _port._protocol.host.domain.com. (example:\n    _80._tcp.host.example.com)\n\n  * tlsa_usage - an integer with one of the following values:\n\n    - 0 - PKIX-TA: Certificate Authority Constraint\n\n    - 1 - PKIX-EE: Service Certificate Constraint\n\n    - 2 - DANE-TA: Trust Anchor Assertion\n\n    - 3 - DANE-EE: Domain Issued Certificate\n\n  * tlsa_selector - an integer with one of the following values:\n\n    - 0 - Cert: Use full certificates\n\n    - 1 - SPKI: Use subject public key\n\n  * tlsa_matching_type - an integer with one of the following values:\n\n    - 0 - Full: No Hash\n\n    - 1 - SHA-256: SHA-256 Hash\n\n    - 2 - SHA-512: SHA-512 hash\n\n  * record - the certificate association data in hexedecimal format\n\n  * ttl - time to keep record in cache\n\n\nA wildcard ('*') can be added for domains and subdomains that do not exist in\nthe DNS record for these types: A (or AAAA), MX, TXT, CNAME, ALIAS and Web\nRedirect.\n\nClouDNS supports the following values for TTLs:\n\n+ 1 Minute\n+ 5 Minutes\n+ 15 Minutes\n+ 30 Minutes\n+ 1 Hours\n+ 6 Hours\n+ 12 Hours\n+ 1 Day\n+ 2 Days\n+ 3 Days\n+ 1 Week\n+ 2 Weeks\n+ 1 Month\n\nClouDNS uses round-robbin DNS when multiple A, AAAA, or Alias records are\nprovided with different values.\n\n\nGetting available record types for a zone\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.record \\\n            .get_available_record_types(zone_type='domain')\n\n    >>> print(response.json())\n\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      [\n                \"A\", \"AAAA\", \"MX\", \"CNAME\", \"TXT\", \"SPF\", \"NS\", \"SRV\", \"WR\",\n                \"ALIAS\", \"RP\", \"SSHFP\", \"NAPTR\", \"CAA\"\n            ]\n        }\n\n\nGetting available TTLs for Records\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.record.get_available_ttls()\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      [\n                60, 300, 900, 1800, 3600, 21600, 43200, 86400, 172800, 259200,\n                604800, 1209600, 2592000\n            ]\n        }\n\n\nListing DNS Records\n^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.record.list(domain_name='example.com',\n                                           host='ns1')  # Host is optional\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"1234567\": {\n                    \"id\":                \"1234567\",\n                    \"type\":              \"A\",\n                    \"host\":              \"ns1\",\n                    \"record\":            \"10.0.0.1\",\n                    \"dynamicurl_status\": 0,\n                    \"failover\":          \"0\",\n                    \"ttl\":               \"86400\",\n                    \"status\":            1\n                },\n                \"2345678\": {\n                    \"id\":                \"2345678\",\n                    \"type\":              \"A\",\n                    \"host\":              \"ns1\",\n                    \"record\":            \"10.0.0.2\",\n                    \"dynamicurl_status\": 0,\n                    \"failover\":          \"0\",\n                    \"ttl\":               \"86400\",\n                    \"status\":            1\n                }\n            }\n        }\n\n\nCreating DNS Records\n^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.record.create(domain_name='example.com',\n                                             host='', record_type='A',\n                                             record='10.10.10.10', ttl=3600)\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"status\": \"Success\",\n                \"status_description\": \"The record was added successfully.\",\n                \"data\": {\"id\": 123456789}\n            }\n        }\n\n\nTransferring DNS Records\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nNOTE: This currently doesn't work as expected. For every domain, I seem to be\ngetting 'The zone transfers are not allowed from this server!'\n\n.. code:: python\n\n    >>> response = cloudns_api.record.transfer(domain_name='example.com',\n                                               server='1.1.1.1')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {}\n        }\n\n\nCopying DNS Records\n^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.record.copy(domain_name='example.com',\n                                           from_domain='example.net',\n                                           delete_current_records=False)\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"status\": \"Success\",\n                \"status_description\": \"8 records were copied\",\n            }\n        }\n\n\nGetting a specific DNS Record\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.record.get(domain_name='example.com',\n                                          record_id=1234567)\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"id\":                \"1234567\",\n                \"type\":              \"A\",\n                \"host\":              \"ns1\",\n                \"record\":            \"10.0.0.1\",\n                \"dynamicurl_status\": 0,\n                \"failover\":          \"0\",\n                \"ttl\":               \"86400\",\n                \"status\":            1\n            }\n        }\n\n\nExporting a DNS Record to BIND\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.record.export(domain_name='example.com')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"status\": \"Success\",\n                \"zone\": \"$ORIGIN example.com.\\n@\\t3600\\tIN\\tSOA\\tns1.example.com. ....\"\n            }\n        }\n\n\nGetting the Dynamic URL for a DNS Record\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.record.get_dynamic_url(\n            domain_name='example.com', record_id='12345')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"host\":              \"example.com\",\n                \"url\":               \"https://ipv4.cloudns.net/api/dynamicURL/?q=ABC123\",\n            }\n        }\n\n        # This will set 'example.com' to the IP address of the machine that\n        # runs the code:\n    >>> requests.get('https://ipv4.cloudns.net/api/dynamicURL/?q=ABC123')\n\n        OK\n\n\nUpdating a specific DNS Record\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.record.get(domain_name='example.com',\n                                          record_id=1234567)\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\": {\n                \"id\":                \"1234567\",\n                \"type\":              \"A\",\n                \"host\":              \"\",\n                \"record\":            \"10.0.0.1\",\n                \"dynamicurl_status\": 0,\n                \"failover\":          \"0\",\n                \"ttl\":               \"86400\",\n                \"status\":            1\n            }\n        }\n\n\nActivating/Deactivating a DNS Record\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.record.activate(domain_name='example.com')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"status\": \"Success\",\n                \"status_description\":\n                    \"Record activated\"\n            }\n        }\n\n    >>> cloudns_api.record.deactivate(domain_name='example.com')\n\n    >>> cloudns_api.record.toggle_activation(domain_name='example.com')\n\n\nDeleting a specific DNS Record\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    >>> response = cloudns_api.record.delete(domain_name='example.com',\n                                             record_id='123456789')\n\n    >>> print(response.json())\n\n        {\n            \"success\":      True,\n            \"status_code\":  200,\n            \"payload\":      {\n                \"status\": \"Success\",\n                \"status_description\": \"The record was deleted successfully.\",\n            }\n        }\n\nSoli Deo gloria.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/prestix-studio/cloudns_api/archive/v0.9.6.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/prestix-studio/cloudns_api",
    "keywords": "dns,dns api,domain name system,cloudns,server development",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cloudns-api",
    "package_url": "https://pypi.org/project/cloudns-api/",
    "platform": "",
    "project_url": "https://pypi.org/project/cloudns-api/",
    "project_urls": {
      "Download": "https://github.com/prestix-studio/cloudns_api/archive/v0.9.6.tar.gz",
      "Homepage": "https://github.com/prestix-studio/cloudns_api"
    },
    "release_url": "https://pypi.org/project/cloudns-api/0.9.6/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">3.5",
    "summary": "A python interface to the ClouDNS.net API",
    "version": "0.9.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10909966,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ca3ec769c0af40b48f29f4b04f3776df9f78e3af187a7e0b81f2fe0bfef109e",
          "md5": "1a4689a128bbfe3883b0cb7a0547af68",
          "sha256": "4fd2fdeb2c36829c56c08ec63656e1090d5a08db0f8cb692c332d8e516885d0e"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a4689a128bbfe3883b0cb7a0547af68",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3763,
        "upload_time": "2018-09-16T18:48:10",
        "upload_time_iso_8601": "2018-09-16T18:48:10.733046Z",
        "url": "https://files.pythonhosted.org/packages/4c/a3/ec769c0af40b48f29f4b04f3776df9f78e3af187a7e0b81f2fe0bfef109e/cloudns_api-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ef3b910a47667ea3d058b83381a7799b186d674a9ab8972faa65d9c3c5aa202",
          "md5": "68f61d4b112e89ae8b099b2ed981d768",
          "sha256": "8ebdfcb05a13cb9d90cc43f936fd6c93da7b014dd93135033be1d165406b9fcc"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "68f61d4b112e89ae8b099b2ed981d768",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2258,
        "upload_time": "2018-09-16T18:48:11",
        "upload_time_iso_8601": "2018-09-16T18:48:11.877124Z",
        "url": "https://files.pythonhosted.org/packages/3e/f3/b910a47667ea3d058b83381a7799b186d674a9ab8972faa65d9c3c5aa202/cloudns_api-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "baf79430d7aced8d93a9d7e587480c3a9b12a4120a654e3af3fccfe341c3c72a",
          "md5": "861bf155735a9c4337146d45325c04a4",
          "sha256": "b2a7b1aa8895a5045e063495a0823465411d7c06901a948820023de94b7e8877"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "861bf155735a9c4337146d45325c04a4",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 11709,
        "upload_time": "2018-09-20T01:03:42",
        "upload_time_iso_8601": "2018-09-20T01:03:42.938908Z",
        "url": "https://files.pythonhosted.org/packages/ba/f7/9430d7aced8d93a9d7e587480c3a9b12a4120a654e3af3fccfe341c3c72a/cloudns_api-0.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ea6805350b2ebb83290e3eed2720acc3f0d16fb976dbbd612966995921da183",
          "md5": "aeecf6b4c118bef77170a84e87d23894",
          "sha256": "504c469726bd2ce15c8107c0ca552515da816ced7694906933001c2e4b07b071"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "aeecf6b4c118bef77170a84e87d23894",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7789,
        "upload_time": "2018-09-20T01:03:44",
        "upload_time_iso_8601": "2018-09-20T01:03:44.673642Z",
        "url": "https://files.pythonhosted.org/packages/6e/a6/805350b2ebb83290e3eed2720acc3f0d16fb976dbbd612966995921da183/cloudns_api-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1fe38757a8266505f3633b17fcd48dad95c0e27d0143a98953984b73e6d0829",
          "md5": "7403ae5105645060ee9f7508408cf6ae",
          "sha256": "f6137988b51c5bae83bf6de03b696fd84fd695d6f85dc3552f3b8f2a57dcacc2"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7403ae5105645060ee9f7508408cf6ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23631,
        "upload_time": "2019-06-06T03:02:00",
        "upload_time_iso_8601": "2019-06-06T03:02:00.941400Z",
        "url": "https://files.pythonhosted.org/packages/a1/fe/38757a8266505f3633b17fcd48dad95c0e27d0143a98953984b73e6d0829/cloudns_api-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d1c9cb5420cf041882b5047df9686a0fa7d563b843c93ac705b0e87a7043421",
          "md5": "5e9c0c7b3ddb3a00e0d6892216b0ac6d",
          "sha256": "c29da3ac4cd4b95e9cb19a64025378760f2f5e620c5fb18beba57361b4e97be2"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5e9c0c7b3ddb3a00e0d6892216b0ac6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14672,
        "upload_time": "2019-06-06T03:02:03",
        "upload_time_iso_8601": "2019-06-06T03:02:03.153980Z",
        "url": "https://files.pythonhosted.org/packages/5d/1c/9cb5420cf041882b5047df9686a0fa7d563b843c93ac705b0e87a7043421/cloudns_api-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "940e0e4e5902f75d5764010a9527619da22919ad7ae44a5b88e9176eab555f80",
          "md5": "e37c3e56a3bd75cea6dd4d9a1c4bd4ec",
          "sha256": "b1efca920bf23163750dba8a33cd9334f67d062e05ae0437dc25ff6576029a92"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e37c3e56a3bd75cea6dd4d9a1c4bd4ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35888,
        "upload_time": "2019-07-07T21:26:57",
        "upload_time_iso_8601": "2019-07-07T21:26:57.491406Z",
        "url": "https://files.pythonhosted.org/packages/94/0e/0e4e5902f75d5764010a9527619da22919ad7ae44a5b88e9176eab555f80/cloudns_api-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fac4c00daf6c706c428ffd056578ca65e0808e9ea30c63099917cdab18f7ad16",
          "md5": "aa19ecf347ca6eb439819e9b3a9d4b32",
          "sha256": "f78d3770199bea53bf41b30c38c9ce785d9c6b8f18899184e2d9b207c692b52c"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "aa19ecf347ca6eb439819e9b3a9d4b32",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38982,
        "upload_time": "2019-07-07T21:27:00",
        "upload_time_iso_8601": "2019-07-07T21:27:00.688519Z",
        "url": "https://files.pythonhosted.org/packages/fa/c4/c00daf6c706c428ffd056578ca65e0808e9ea30c63099917cdab18f7ad16/cloudns_api-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80fd3d5051dfe9b02a116f864c2d543f4c44b0d0e87c8db93de3a071350dc878",
          "md5": "4f93198530a8cf45a65ff4f2755120c8",
          "sha256": "0fb07f54cd8fbad504b471e4cdb147825ec6ef83853715ead379d293a5118df9"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f93198530a8cf45a65ff4f2755120c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35878,
        "upload_time": "2019-07-13T19:59:49",
        "upload_time_iso_8601": "2019-07-13T19:59:49.700865Z",
        "url": "https://files.pythonhosted.org/packages/80/fd/3d5051dfe9b02a116f864c2d543f4c44b0d0e87c8db93de3a071350dc878/cloudns_api-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df2564251b03b62b00400cb1044e243a269caa74296e393a2e6c8a726da52f31",
          "md5": "46e86403baae0e379a3c942e879698bc",
          "sha256": "4a61667971fef76beca5a6367812cb1bc2186c472328716426c0bf3b3455e8d5"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "46e86403baae0e379a3c942e879698bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38778,
        "upload_time": "2019-07-13T19:59:51",
        "upload_time_iso_8601": "2019-07-13T19:59:51.585485Z",
        "url": "https://files.pythonhosted.org/packages/df/25/64251b03b62b00400cb1044e243a269caa74296e393a2e6c8a726da52f31/cloudns_api-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b7cd41326be7755ac29dbfb01e509dfc26b4cfac4c2106744b21d81e128c482",
          "md5": "34735b627e45f0340da278bb74fb8e75",
          "sha256": "8db9a526cc615155df43b4021feeee7236005a2f77f7277e7ad7127cda327a4b"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34735b627e45f0340da278bb74fb8e75",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35864,
        "upload_time": "2019-09-15T01:58:56",
        "upload_time_iso_8601": "2019-09-15T01:58:56.114304Z",
        "url": "https://files.pythonhosted.org/packages/5b/7c/d41326be7755ac29dbfb01e509dfc26b4cfac4c2106744b21d81e128c482/cloudns_api-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fcb61c83e5561050a846df37bf48051130429217b350e1bfa870a814e7c432e",
          "md5": "e49e417c97793d8ecf33673374a8fa76",
          "sha256": "15f288a1412ddcfab04ce4e5688803dea4c81e6ab6ba91e7e7d5121078656296"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "e49e417c97793d8ecf33673374a8fa76",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38822,
        "upload_time": "2019-09-15T01:58:58",
        "upload_time_iso_8601": "2019-09-15T01:58:58.624658Z",
        "url": "https://files.pythonhosted.org/packages/7f/cb/61c83e5561050a846df37bf48051130429217b350e1bfa870a814e7c432e/cloudns_api-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8817aa8700e464a9ea715660b29989aecb7e3f576cc2ccc97608e765384e1fc7",
          "md5": "22c232a4ba74fab211ed61be6fdf9d10",
          "sha256": "835d74ab87ef153828fd077ef32636deb6c7cd64bd01c9001b59b0438916c7da"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22c232a4ba74fab211ed61be6fdf9d10",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36957,
        "upload_time": "2019-11-16T21:18:44",
        "upload_time_iso_8601": "2019-11-16T21:18:44.609983Z",
        "url": "https://files.pythonhosted.org/packages/88/17/aa8700e464a9ea715660b29989aecb7e3f576cc2ccc97608e765384e1fc7/cloudns_api-0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78e372cc6f8644b050197eef13d529c5b9a2729e917ad03a31260f503d18cc17",
          "md5": "b375693ab2b091f40a433b5860dcb39b",
          "sha256": "1d71847fd30720253f2dc8700201baf2b1bb5e13683cf69d12c4f9974ed8b062"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "b375693ab2b091f40a433b5860dcb39b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41305,
        "upload_time": "2019-11-16T21:18:46",
        "upload_time_iso_8601": "2019-11-16T21:18:46.991510Z",
        "url": "https://files.pythonhosted.org/packages/78/e3/72cc6f8644b050197eef13d529c5b9a2729e917ad03a31260f503d18cc17/cloudns_api-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b06efe65b0f5410587bbb0e51ea49d4a1b3e59ab72ab65ddc04705b42b27da0c",
          "md5": "eb0910c13fcffe24ab194b247320d7f0",
          "sha256": "f9a260f91ee94272d9ea4a227da50a0e45d3ddf56b9f5b66d4b4fc933f76e1b0"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb0910c13fcffe24ab194b247320d7f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36957,
        "upload_time": "2020-04-03T02:16:49",
        "upload_time_iso_8601": "2020-04-03T02:16:49.906466Z",
        "url": "https://files.pythonhosted.org/packages/b0/6e/fe65b0f5410587bbb0e51ea49d4a1b3e59ab72ab65ddc04705b42b27da0c/cloudns_api-0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6eba931f9ea47259289255cbed42eff74ad992d1e26a328367e0c7662640b1a5",
          "md5": "965a2aa713f9b7ca2417731bcba89d31",
          "sha256": "2d98d6def2c39062790b421e3f64dd2ad0399dc739c4332287f839a6a55db9e4"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "965a2aa713f9b7ca2417731bcba89d31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41291,
        "upload_time": "2020-04-03T02:16:52",
        "upload_time_iso_8601": "2020-04-03T02:16:52.187705Z",
        "url": "https://files.pythonhosted.org/packages/6e/ba/931f9ea47259289255cbed42eff74ad992d1e26a328367e0c7662640b1a5/cloudns_api-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b45586dc4be0e9a8705a4e68c5dc8d2c42e9ce9abbff71afe98c88df61d518d7",
          "md5": "1eaaa818b972bdf9caff3c37db6d8800",
          "sha256": "49715ff97297f7dae4b82b87b401486a4042c6eff623c7e0c910926ca04f7f24"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1eaaa818b972bdf9caff3c37db6d8800",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38505,
        "upload_time": "2020-05-06T00:25:35",
        "upload_time_iso_8601": "2020-05-06T00:25:35.243157Z",
        "url": "https://files.pythonhosted.org/packages/b4/55/86dc4be0e9a8705a4e68c5dc8d2c42e9ce9abbff71afe98c88df61d518d7/cloudns_api-0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bf7196036db70ce179ea137dd8e8b6c5f21bae133d9c67809dcd4b3c16f9c41",
          "md5": "d6ab0cdac9aee306bb1c32d2c0433ab8",
          "sha256": "5fd3de27b062c637aa8b54370d83c5574684760c33e22eb74a7d385d96cad8b4"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "d6ab0cdac9aee306bb1c32d2c0433ab8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44258,
        "upload_time": "2020-05-06T00:25:37",
        "upload_time_iso_8601": "2020-05-06T00:25:37.579896Z",
        "url": "https://files.pythonhosted.org/packages/2b/f7/196036db70ce179ea137dd8e8b6c5f21bae133d9c67809dcd4b3c16f9c41/cloudns_api-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93b020f54c3e0cefc14b5f9698382601136b9f993158e2cc2556780abffbf882",
          "md5": "b1584796ab3c215551001d82f7e0b3e1",
          "sha256": "dd456601f05b36b7d53ccb647a167c796ab37d65abc0082295f77f63e8c46b1f"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1584796ab3c215551001d82f7e0b3e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.5",
        "size": 38526,
        "upload_time": "2020-06-17T00:05:23",
        "upload_time_iso_8601": "2020-06-17T00:05:23.630100Z",
        "url": "https://files.pythonhosted.org/packages/93/b0/20f54c3e0cefc14b5f9698382601136b9f993158e2cc2556780abffbf882/cloudns_api-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "097029b4f37e63dc055bbae3b04127a839602509b8a6d8dfabf29e5ac81851e6",
          "md5": "aff0d8f943c9112f7afffcd3c7f31d34",
          "sha256": "af01364fb01563ce8041f5a2ad21187164fef9d2ef3c4d33948e70454c9cc01b"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aff0d8f943c9112f7afffcd3c7f31d34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 44295,
        "upload_time": "2020-06-17T00:05:25",
        "upload_time_iso_8601": "2020-06-17T00:05:25.978786Z",
        "url": "https://files.pythonhosted.org/packages/09/70/29b4f37e63dc055bbae3b04127a839602509b8a6d8dfabf29e5ac81851e6/cloudns_api-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f77cd530ef0b524224d935a29b1e5a130fd76a6c5e6e3dd218e066e6564ea488",
          "md5": "d57e818c220e6eac29384885571a2afb",
          "sha256": "5bf6ffc091e4850d8e6f7c021a086a41f182e1853c3d1974756a2ab76ed3fff8"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d57e818c220e6eac29384885571a2afb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38525,
        "upload_time": "2020-06-17T00:34:54",
        "upload_time_iso_8601": "2020-06-17T00:34:54.893759Z",
        "url": "https://files.pythonhosted.org/packages/f7/7c/d530ef0b524224d935a29b1e5a130fd76a6c5e6e3dd218e066e6564ea488/cloudns_api-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbd25c7927fa2ebf71f672a8dcb02cde59d04c495ee2b7d0a220bf7e37973180",
          "md5": "1e3c9779fadcaab4dfafa7db8e43b7e6",
          "sha256": "b8d828eb0989bc359b7e309745bcd143aca351605848438ef8764669034b0693"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1e3c9779fadcaab4dfafa7db8e43b7e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44318,
        "upload_time": "2020-06-17T00:34:57",
        "upload_time_iso_8601": "2020-06-17T00:34:57.158266Z",
        "url": "https://files.pythonhosted.org/packages/fb/d2/5c7927fa2ebf71f672a8dcb02cde59d04c495ee2b7d0a220bf7e37973180/cloudns_api-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5794158de95b11095ff96e1a05d364e86bd3f11bb66020086b17879c5e8c01a7",
          "md5": "674930a272345e0e720e9b40cca8dd8f",
          "sha256": "0be157365c997d8a4162065867f07702398882cd3481bc7936637d8a807eb58f"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.9.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "674930a272345e0e720e9b40cca8dd8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.5",
        "size": 38532,
        "upload_time": "2020-06-17T01:00:53",
        "upload_time_iso_8601": "2020-06-17T01:00:53.855946Z",
        "url": "https://files.pythonhosted.org/packages/57/94/158de95b11095ff96e1a05d364e86bd3f11bb66020086b17879c5e8c01a7/cloudns_api-0.9.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32a1bb8d15b0cf8375557850bb614270e04cb77430509be121c4e98699e169de",
          "md5": "ca204885a04808d6000590b981d40198",
          "sha256": "ee3ce5e02fa9748e3376640f17daa4ef2b77d211130354d70b0b9de529a0a41e"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ca204885a04808d6000590b981d40198",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 44300,
        "upload_time": "2020-06-17T01:00:55",
        "upload_time_iso_8601": "2020-06-17T01:00:55.943109Z",
        "url": "https://files.pythonhosted.org/packages/32/a1/bb8d15b0cf8375557850bb614270e04cb77430509be121c4e98699e169de/cloudns_api-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "604e0c26565a064adf618d828b26c503f5168c68726e7fee9636fd4d4338a840",
          "md5": "b769fde00c52ac67c2b948dfc2f246d2",
          "sha256": "914d49f776fdd49c3aa555680beff721b0f3e0af38429be0ad8c65c9e1a49d77"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.9.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b769fde00c52ac67c2b948dfc2f246d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.5",
        "size": 38535,
        "upload_time": "2021-05-17T23:19:13",
        "upload_time_iso_8601": "2021-05-17T23:19:13.022780Z",
        "url": "https://files.pythonhosted.org/packages/60/4e/0c26565a064adf618d828b26c503f5168c68726e7fee9636fd4d4338a840/cloudns_api-0.9.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d34feb0a5e413ea89b366b15561e96bc34437530baf8ba33b7283e731b9e077",
          "md5": "e74f68a6a08ab0afa72c468864b599ad",
          "sha256": "d3696d971b7f4a8f52eecb630b9bfad6c746e24ff1d4a43718c3032aa6e35389"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.9.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e74f68a6a08ab0afa72c468864b599ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 45881,
        "upload_time": "2021-05-17T23:19:16",
        "upload_time_iso_8601": "2021-05-17T23:19:16.140001Z",
        "url": "https://files.pythonhosted.org/packages/6d/34/feb0a5e413ea89b366b15561e96bc34437530baf8ba33b7283e731b9e077/cloudns_api-0.9.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c1d288606c4a15632e6b4aa5fbac4cdba40c1ddb19467696bfec94c6d7f7ffd",
          "md5": "53cef8949df1194cae31148eb9b58a5d",
          "sha256": "8619b40d89ed53f71307d2a946d894ebf4d3c9c5f5fe21bd0151526062a86263"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.9.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53cef8949df1194cae31148eb9b58a5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.5",
        "size": 38536,
        "upload_time": "2021-05-18T00:07:11",
        "upload_time_iso_8601": "2021-05-18T00:07:11.365120Z",
        "url": "https://files.pythonhosted.org/packages/3c/1d/288606c4a15632e6b4aa5fbac4cdba40c1ddb19467696bfec94c6d7f7ffd/cloudns_api-0.9.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d6077845276145545cc4fd4ecd0bb48325206cff4756edea38496c9ca007bfc",
          "md5": "5fc906dbce8682bddc635678fd3c6e8e",
          "sha256": "8598525ff81cd9c9bd9e484edaceaa26453d65370e8468fd7332763551c0137c"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.9.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5fc906dbce8682bddc635678fd3c6e8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 46086,
        "upload_time": "2021-05-18T00:07:14",
        "upload_time_iso_8601": "2021-05-18T00:07:14.877730Z",
        "url": "https://files.pythonhosted.org/packages/5d/60/77845276145545cc4fd4ecd0bb48325206cff4756edea38496c9ca007bfc/cloudns_api-0.9.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d0aa60c890b6151d8205069f524fc9dacfba3b1fe4fc80c3369d78bee409d4d",
          "md5": "716b4072e15090a7d34587ae544d0966",
          "sha256": "392f22821439c28b3c7eeb0b0b8afe85555904241204250de33240d6f640bcbb"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.9.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "716b4072e15090a7d34587ae544d0966",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.5",
        "size": 38523,
        "upload_time": "2021-07-14T17:55:14",
        "upload_time_iso_8601": "2021-07-14T17:55:14.659051Z",
        "url": "https://files.pythonhosted.org/packages/2d/0a/a60c890b6151d8205069f524fc9dacfba3b1fe4fc80c3369d78bee409d4d/cloudns_api-0.9.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00f0588cd52ef711394271026411d03e661575d3f8ebc41c61893a13b0fe0722",
          "md5": "5e6093b7d384d7f6b95a3cdb69d753df",
          "sha256": "152b7120fe139289b2961f0f289590a9b62d637d3fb3d66ec530e9e3e38c3d90"
        },
        "downloads": -1,
        "filename": "cloudns_api-0.9.6.tar.gz",
        "has_sig": false,
        "md5_digest": "5e6093b7d384d7f6b95a3cdb69d753df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 46064,
        "upload_time": "2021-07-14T17:55:18",
        "upload_time_iso_8601": "2021-07-14T17:55:18.394518Z",
        "url": "https://files.pythonhosted.org/packages/00/f0/588cd52ef711394271026411d03e661575d3f8ebc41c61893a13b0fe0722/cloudns_api-0.9.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d0aa60c890b6151d8205069f524fc9dacfba3b1fe4fc80c3369d78bee409d4d",
        "md5": "716b4072e15090a7d34587ae544d0966",
        "sha256": "392f22821439c28b3c7eeb0b0b8afe85555904241204250de33240d6f640bcbb"
      },
      "downloads": -1,
      "filename": "cloudns_api-0.9.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "716b4072e15090a7d34587ae544d0966",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">3.5",
      "size": 38523,
      "upload_time": "2021-07-14T17:55:14",
      "upload_time_iso_8601": "2021-07-14T17:55:14.659051Z",
      "url": "https://files.pythonhosted.org/packages/2d/0a/a60c890b6151d8205069f524fc9dacfba3b1fe4fc80c3369d78bee409d4d/cloudns_api-0.9.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00f0588cd52ef711394271026411d03e661575d3f8ebc41c61893a13b0fe0722",
        "md5": "5e6093b7d384d7f6b95a3cdb69d753df",
        "sha256": "152b7120fe139289b2961f0f289590a9b62d637d3fb3d66ec530e9e3e38c3d90"
      },
      "downloads": -1,
      "filename": "cloudns_api-0.9.6.tar.gz",
      "has_sig": false,
      "md5_digest": "5e6093b7d384d7f6b95a3cdb69d753df",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.5",
      "size": 46064,
      "upload_time": "2021-07-14T17:55:18",
      "upload_time_iso_8601": "2021-07-14T17:55:18.394518Z",
      "url": "https://files.pythonhosted.org/packages/00/f0/588cd52ef711394271026411d03e661575d3f8ebc41c61893a13b0fe0722/cloudns_api-0.9.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}