{
  "info": {
    "author": "Sho Yoshida",
    "author_email": "yoshiso@alpaca.ai",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# alexflow\nALEXFlow is a python workflow library built for reproducible complex workflow, mainly for machine learning training.\n\n\n## Get Started\n\nFor the installation from pypi, simply install via pip.\n\n`pip install alexflow` \n\n\n## Remarks\n\n##### Support of type hints with `dataclasses`\n\nluigi does not work well with type hints, which makes it difficult to build workflow when it is complex. With use of dataclasses, we'd like to gain benefit of type hints.\n\n##### Build workflow by composition, rather than parameter bucket relies.\n\nParameter bucket rely finally build a huge global state at the entrypoint of workflow, which is pretty difficult to maintain in general as it is works similarly with global variables... Instead, we've decided to compose workflow with compositions. With this architecture we can gain the benefit of divide and conquer strategy.\n\n##### Focus of reproducibility with immutability tasks\n\nTask class is designed to be a immutable dataclass object, for distributed execution, strong consistency, and reproducibility. And also those `Task` objects can be serialized as json object, and you can easily trace the exact parameters used to generate the `Output`. \n\n##### Dependency via Outputs, rather than Tasks\n\nDescription of workflow dependency by `Output` makes it easy to run partially graph.\n\n## A exmaple of Task construction\n\nAlso you can see the example workflow at `examples/workflow.py`.\n\n```python\nfrom typing import Tuple\nfrom sklearn import linear_model\nfrom dataclasses import dataclass, field\nfrom alexflow import Task, no_default, NoDefaultVar, Output, BinaryOutput\n\n\n@dataclass(frozen=True)\nclass Train(Task):\n    # Here you can write parameter of task as dataclass fields. Task's unique id will be \n    # generated from given parameters' and each task is executed at once while the entire\n    # graph computation.\n    X: NoDefaultVar[Output] = no_default\n    y: NoDefaultVar[Output] = no_default\n    model_type: NoDefaultVar[str] = no_default\n    # Here you can describe in-significant parameter with compare=False, with following\n    # dataclass' object equality. Even you changed those variables, Task's unique id is\n    # consistent.\n    verbose: bool = field(default=True, compare=False)\n\n    def input(self):\n        \"\"\"Here describes the dependent output of your task\"\"\"\n        return self.X, self.y\n\n    def output(self):\n        \"\"\"Here describes the dependent output of your task\"\"\"\n        return self.build_output(BinaryOutput, key=\"model.pkl\")\n\n    def run(self, input: Tuple[BinaryOutput, BinaryOutput], output: BinaryOutput):\n        # Dependent output you defined in `input()` method is available as input variable.\n        X = input[0].load()\n        y = input[1].load()\n\n        model_class = getattr(linear_model, self.model_type)\n\n        cls = model_class().fit(X, y)\n\n        # And you can store what you want to output in following manner.\n        output.store(cls)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AlpacaDB/alexflow.git",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alexflow",
    "package_url": "https://pypi.org/project/alexflow/",
    "platform": "",
    "project_url": "https://pypi.org/project/alexflow/",
    "project_urls": {
      "Homepage": "https://github.com/AlpacaDB/alexflow.git"
    },
    "release_url": "https://pypi.org/project/alexflow/1.1.4/",
    "requires_dist": [
      "pandas",
      "numpy",
      "dataclass-serializer (>=1.3.1)",
      "multiprocess",
      "joblib",
      "cached-property"
    ],
    "requires_python": ">=3.7",
    "summary": "ALEXFlow is a python workflow library built for reproducible complex workflow",
    "version": "1.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8529819,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c73208363ed3a41fc5149ec8e810bde510f8681b62f284fe6ff81783ebc377b",
          "md5": "a410afc188d35d93bd716c079f81dda0",
          "sha256": "df2977fbd0234993af99a6955735730c1794a8077275cc50301eb9ec7e419bd1"
        },
        "downloads": -1,
        "filename": "alexflow-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a410afc188d35d93bd716c079f81dda0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16456,
        "upload_time": "2020-08-17T01:59:22",
        "upload_time_iso_8601": "2020-08-17T01:59:22.705396Z",
        "url": "https://files.pythonhosted.org/packages/6c/73/208363ed3a41fc5149ec8e810bde510f8681b62f284fe6ff81783ebc377b/alexflow-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cd86f999459b0a17b9dbc42639b4d55f71f1c7aec456a0738588f8c2db0dafc",
          "md5": "d1b977b9b4c08fb355fdcd938c3f0e34",
          "sha256": "8805f5d0ea15ae514917c5720cd04e4b82db4dc332afd2bbf9f3f0efb19e39eb"
        },
        "downloads": -1,
        "filename": "alexflow-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1b977b9b4c08fb355fdcd938c3f0e34",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16520,
        "upload_time": "2020-08-18T01:32:34",
        "upload_time_iso_8601": "2020-08-18T01:32:34.815333Z",
        "url": "https://files.pythonhosted.org/packages/8c/d8/6f999459b0a17b9dbc42639b4d55f71f1c7aec456a0738588f8c2db0dafc/alexflow-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "021ba9574f4c1fd6c29f2471a18a449c612519322577df2d6302373fa7464adc",
          "md5": "af4ad415fd36d8075bbb02c991c06378",
          "sha256": "ed53b3ba53d6dc0c6b9d6ac3371bf4cbb31be6db7256d54ffac077356be1d82b"
        },
        "downloads": -1,
        "filename": "alexflow-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af4ad415fd36d8075bbb02c991c06378",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19695,
        "upload_time": "2020-08-20T06:16:37",
        "upload_time_iso_8601": "2020-08-20T06:16:37.645231Z",
        "url": "https://files.pythonhosted.org/packages/02/1b/a9574f4c1fd6c29f2471a18a449c612519322577df2d6302373fa7464adc/alexflow-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb6af2cdb7a81d0ad067c801b1b6564dbe2ab2191d4baa3b0eb59426e8859245",
          "md5": "a5f5ab447ac9ffe81c4630e53f2a7009",
          "sha256": "f031d2c0f98b64fa62e57ce023d1bc1f7cbe99e72863e7d333a23deebc256f17"
        },
        "downloads": -1,
        "filename": "alexflow-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5f5ab447ac9ffe81c4630e53f2a7009",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19998,
        "upload_time": "2020-08-31T03:20:22",
        "upload_time_iso_8601": "2020-08-31T03:20:22.239085Z",
        "url": "https://files.pythonhosted.org/packages/eb/6a/f2cdb7a81d0ad067c801b1b6564dbe2ab2191d4baa3b0eb59426e8859245/alexflow-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "432d0a0d52f28caaa834a7acbda6788e60da4f6066571ea3cfff13bdb85f3bd2",
          "md5": "4107d52376c92a8cca48e3ea1e91bb3d",
          "sha256": "e0338aff3bb7e22da02d92a89590524937e535e97652368b6ac241831ad34385"
        },
        "downloads": -1,
        "filename": "alexflow-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4107d52376c92a8cca48e3ea1e91bb3d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 21587,
        "upload_time": "2020-10-08T04:14:05",
        "upload_time_iso_8601": "2020-10-08T04:14:05.702536Z",
        "url": "https://files.pythonhosted.org/packages/43/2d/0a0d52f28caaa834a7acbda6788e60da4f6066571ea3cfff13bdb85f3bd2/alexflow-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ba7c851641e6eabdd2094f8c25ee27d333d42b29072104a3dc6165a876f4edc",
          "md5": "b3a52a9e6d2530e8104b2eee00510d5c",
          "sha256": "88c5096c3dff61e368b5dda61dcedb6a7e57857dd6ab1a8f1ab43db725c68af7"
        },
        "downloads": -1,
        "filename": "alexflow-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3a52a9e6d2530e8104b2eee00510d5c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 21759,
        "upload_time": "2020-10-09T06:22:35",
        "upload_time_iso_8601": "2020-10-09T06:22:35.179196Z",
        "url": "https://files.pythonhosted.org/packages/8b/a7/c851641e6eabdd2094f8c25ee27d333d42b29072104a3dc6165a876f4edc/alexflow-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67dab1d5504fb73b833d938107a2a2a17850d2cf3af2def0fc2a351a980e8748",
          "md5": "fd50a1acd11b543bc9f438470004434e",
          "sha256": "3bd171e1f4ff70ce8981bf2744271590b310417d005e73d9c3ece45dae294d34"
        },
        "downloads": -1,
        "filename": "alexflow-1.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd50a1acd11b543bc9f438470004434e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 22014,
        "upload_time": "2020-10-29T06:24:30",
        "upload_time_iso_8601": "2020-10-29T06:24:30.643085Z",
        "url": "https://files.pythonhosted.org/packages/67/da/b1d5504fb73b833d938107a2a2a17850d2cf3af2def0fc2a351a980e8748/alexflow-1.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "67dab1d5504fb73b833d938107a2a2a17850d2cf3af2def0fc2a351a980e8748",
        "md5": "fd50a1acd11b543bc9f438470004434e",
        "sha256": "3bd171e1f4ff70ce8981bf2744271590b310417d005e73d9c3ece45dae294d34"
      },
      "downloads": -1,
      "filename": "alexflow-1.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fd50a1acd11b543bc9f438470004434e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 22014,
      "upload_time": "2020-10-29T06:24:30",
      "upload_time_iso_8601": "2020-10-29T06:24:30.643085Z",
      "url": "https://files.pythonhosted.org/packages/67/da/b1d5504fb73b833d938107a2a2a17850d2cf3af2def0fc2a351a980e8748/alexflow-1.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}