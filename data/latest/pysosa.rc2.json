{
  "info": {
    "author": "Badisa Mosesane",
    "author_email": "landrs@nd.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Introduction - PySOSA\n\n\nA python module for building SOSA  based RDF graphs\n\n\nThe LANDRS (Linked And Networked DRoneS) project amongst other things works to create an ontology and building an OpenAPI specification for creating a Restful API\nfor building linked data native drone data applications. LANDRS is a Sloan Foundation\nfunded project to build open source APIs for managing scientific data on drones through the\nuse of web standards and linked data technologies.\n\nUpdated PySOSA Design diagram is [here](https://github.com/landrs-toolkit/PySOSA/blob/master/PySOSA_Design.png)\n\n\nThe project endeavors to implement PySOSA: A python module for building SOSA  based RDF graphs.\nSensor, Observation, Sample, and Actuator (SOSA) ontology, provides a lightweight core for Semantic Sensor Network (SSN).\nSOSA aims at broadening the target audience and application areas that can make use of Semantic Web ontologies.\nTo find out more about SOSA and SSN check out https://www.w3.org/TR/vocab-ssn/#SOSAPlatform  and https://www.w3.org/TR/vocab-ssn/ \n\n# Getting started\n\nPySOSA is A python module for building RDF graphs using the W3C SOSA (Sensors, Observations, Samples,\nand Actuators) ontology. For more see https://github.com/landrs-toolkit/PySOSA. In short PySOSA implements\na python-based Linked-Data API for Networked Drones.\n\nVisit www.landrs.org or www.ld.landrs.org\n\n# Requirements\n\nWe recommend Pycharm IDE, but this should work in any other IDE of choice.  To run this module successfully, ensure you have the pre-requisites correctly installed. You can install all the requirements by running\n    \n    $ pip install -r requirements.txt\n    \nSee list of required libs here https://github.com/landrs-toolkit/PySOSA/blob/master/requirements.txt\n\nThe best way to install rdflib is to use pip. If the above install fails, install using pip as follows:\n   \n    $ pip install rdflib\n    $ pip install PyLD\n    $ pip install pytz\n    $ pip -U install pylint\n    $ install pyreverse\n    \n\n\n# How to install from Pypi\n\n1. Pre Requisites. Before using, you must have the following: \n2. Installation. Install using pip: pip install pysosa [Link to pysosa pypi](https://github.com/landrs-toolkit/PySOSA)\n3. Configuration. Configure all connection parameters on the IDE\n4. Downloading the code! Run Your function\n5. Checking your recently installed package.\n\n\n\n# Generating Docs\n\nHow to generate the UML using Pycharm as a recommended IDE.\n\n* cd into the directory of where the project resides\n* Make sure pylint3 and graphviz are installed\n* Run the command: $ pyreverse -S <modulename> to generate the dot files in the current folder\n*       $ pyreverse -S <modulename>\n* Once the dot files are generated use the following command to generate the output in one of the formats available\n *      $ dot -Tpdf <dotfilename> -o output\n*     $ dot -Txxx shows all the available output formats\n\nInstall pylint3 from Install. If you have anaconda already installed use pip -U install pylint to update the pylint\nso that pyreverse is added to the scripts folder.\n\nInstall Pyreverse\n\nYou need to install graphViz as the pyreverse generates the UML diagrams in dot format and needs the dot.exe\nprovided by Graphviz. Once GraphViz is installed make sure the bin folder is added to the PATH variable so that\npyreverse can find it at run time.\n\nInstall sphinx\n\n\n\n# Running the Tests\n\nThe instructions for getting the project up and running on your local machine and testing purposes\n\n\nE.g you can run tests for the platform class on the terminal as shown.\n\n    $ python -m unittest test_Platform.py\n\nExample for testing Sensor class:\n*       $ python -m unittest test_Sensor.py\n    \n\n\n## Contributing\n\nPull requests and issue submissions are highly welcomed. This is an open project, published openly under Apache 2.0. We are\nexcited to have you contribute to this project!\nSee instructions on how you can contribute on this guide: https://github.com/landrs-toolkit/PySOSA/blob/master/CONTRIBUTING.md\n\n    \n\n# Issues\nNavigate the git repo to find active issues. Some of the known issues include:\n- Order of sensors and platform on the graph output to be fixed \n- The output of the graph needs to be formatted\n- More tests needs to be done to cover all test cases\n- Need to check if the function for adding objects to the graph does add and check duplicate\n- Need a function that queries unit testing and code coverage\nmore unit testing needed\n\n# License\nThis project is and always will be published openly under [Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0)\n\n\n## Contacts\n \n* Get in touch with us on the [landrs website](https://www.landrs.org/)\n* Email us at landrs@nd.edu\n* Twitter Handle https://twitter.com/DroneData4Good",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/landrs-toolkit/PySOSA/archive/release.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/landrs-toolkit/PySOSA",
    "keywords": "building SOSA based graphs,RDF graphs,Python SOSA ontology,PySOSA",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PySOSA",
    "package_url": "https://pypi.org/project/PySOSA/",
    "platform": "",
    "project_url": "https://pypi.org/project/PySOSA/",
    "project_urls": {
      "Download": "https://github.com/landrs-toolkit/PySOSA/archive/release.tar.gz",
      "Homepage": "https://github.com/landrs-toolkit/PySOSA"
    },
    "release_url": "https://pypi.org/project/PySOSA/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python module for building SOSA based RDF graphs",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7698851,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b45cd04a72996f2b8dc3c5cb06d68a08885652a21fe81bf5af3ff608fa718ad0",
          "md5": "cce48cb2b6655dabdf99cef288d9f612",
          "sha256": "2f3a66d2c7ed829f0dcc18f185f623a7ae9829ed9f5cc8e18b337de4d82c31fb"
        },
        "downloads": -1,
        "filename": "PySOSA-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cce48cb2b6655dabdf99cef288d9f612",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 85312,
        "upload_time": "2020-07-14T14:28:01",
        "upload_time_iso_8601": "2020-07-14T14:28:01.748723Z",
        "url": "https://files.pythonhosted.org/packages/b4/5c/d04a72996f2b8dc3c5cb06d68a08885652a21fe81bf5af3ff608fa718ad0/PySOSA-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7a6269b6d8cd8ab6c615c4850daeeb7913802a1ad0b9ca20f75321088a73ea7",
          "md5": "d32306c237107fea4369597c1b642729",
          "sha256": "3dd44276b7d3d13a64a619d5b8602ff488221c63f17cd86741e03d6b4a5a4fa6"
        },
        "downloads": -1,
        "filename": "PySOSA-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d32306c237107fea4369597c1b642729",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 90255,
        "upload_time": "2020-07-14T15:48:43",
        "upload_time_iso_8601": "2020-07-14T15:48:43.730877Z",
        "url": "https://files.pythonhosted.org/packages/a7/a6/269b6d8cd8ab6c615c4850daeeb7913802a1ad0b9ca20f75321088a73ea7/PySOSA-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7a6269b6d8cd8ab6c615c4850daeeb7913802a1ad0b9ca20f75321088a73ea7",
        "md5": "d32306c237107fea4369597c1b642729",
        "sha256": "3dd44276b7d3d13a64a619d5b8602ff488221c63f17cd86741e03d6b4a5a4fa6"
      },
      "downloads": -1,
      "filename": "PySOSA-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d32306c237107fea4369597c1b642729",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 90255,
      "upload_time": "2020-07-14T15:48:43",
      "upload_time_iso_8601": "2020-07-14T15:48:43.730877Z",
      "url": "https://files.pythonhosted.org/packages/a7/a6/269b6d8cd8ab6c615c4850daeeb7913802a1ad0b9ca20f75321088a73ea7/PySOSA-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}