{
  "info": {
    "author": "Kez Cleal",
    "author_email": "clealk@cardiff.ac.uk",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "================\nsorted-intersect\n================\n\nsortedintersect can be used for searching a set of reference intervals for intersecting points or intervals.\n\nA common task in bioinformatics is to check if an interval or point overlaps a set of reference intervals.\nAn interval tree is often used for this purpose although if both the reference intervals and query intervals are sorted ahead of time, then a simple plane-sweep algorithm can be used.\nThis situation arises when processing a sorted alignment or vcf file and checking against a sorted reference interval set, for example.\n\n\nInstallation\n------------\nDownload from pypi::\n\n    pip install sortedintersect\n\nTo build from source::\n\n    git clone https://github.com/kcleal/sortedintersect\n    cd sortedintersect\n    pip install .\n\nOverview\n--------\n\nCommon usage is to check if a point overlaps a reference set:\n\n.. code-block:: python\n\n    from sortedintersect import IntervalSet\n\n    # intervals without data\n    itv = IntervalSet(False)\n    itv.add(0, 10)\n    itv.search_point(1)\n    # >>> True\n\n    # intervals with python object as data\n    itv = IntervalSet(True)\n    itv.add(0, 10, 'interval1')\n    itv.add(20, 30, {'a': 1})\n    itv.search_point(1)\n    # >>> 'interval1'\n    itv.search_point(20)\n    # >>> {'a': 1}\n\nNote, both reference and query intervals must be added and queried in sorted order otherwise a ValueError will be raised:\n\n.. code-block:: python\n\n    # intervals without data\n    itv = IntervalSet(False)\n    itv.add(10, 11)\n    itv.add(0, 1)\n    # >>> ValueError\n    itv.search_point(10)  # True\n    itv.search_point(9)\n    # >>> ValueError\n\n\nIntervals can also be queried:\n\n.. code-block:: python\n\n    # intervals without data\n    itv = IntervalSet(False)\n    itv.add(10, 11)\n    itv.add(50, 60)\n    itv.search_interval(9, 10)   # True\n    itv.search_interval(20, 30)  # False\n    itv.search_interval(50, 51)  # True\n\nBenchmarks\n----------\n\nsortedintersect was compared to popular python implementations based on interval trees, see tests folder.\nA major advantage of comparison tools is that queries can be performed in non-sorted order,\nwhich is not the case for sortedintersect:\n\n.. list-table::\n   :widths: 25 25 25 25 25\n   :header-rows: 1\n\n   * - N intersections\n     - sortedintersect (s)\n     - quicksect (s)\n     - ncls (s)\n     - ailist (s)\n   * - 100 k\n     - 0.006469\n     - 0.033503\n     - 0.123314\n     - 0.053892\n   * - 1 million\n     - 0.064078\n     - 0.334860\n     - 1.230206\n     - 0.570837\n   * - 10 million\n     - 0.630569\n     - 3.962883\n     - 12.819762\n     - 5.696887\n   * - 100 million\n     - 6.407564\n     - 40.743349\n     - 127.128570\n     - 56.149942\n\n.. image:: https://github.com/kcleal/sortedintersect/blob/master/tests/benchmark.png\n\n\nLimitations\n-----------\n\n- Both reference and queries must be assessed in sorted order\n- Only the first overlapping interval is currently returned",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sortedintersect",
    "package_url": "https://pypi.org/project/sortedintersect/",
    "platform": "",
    "project_url": "https://pypi.org/project/sortedintersect/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/sortedintersect/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Interval intersection for sorted query and target intervals",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12850395,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c747b0dc037b808bbc47e29fcde155586484511d6474f123c0f7523c53883b1d",
          "md5": "661c1e0b06e39130caa3b9506da3a145",
          "sha256": "2c4cac477ba594f3c11a8ad4ed7f264092ac9383e80a21615dc46a3ecfcbc7cf"
        },
        "downloads": -1,
        "filename": "sortedintersect-0.1.0-py3.8-macosx-10.9-x86_64.egg",
        "has_sig": false,
        "md5_digest": "661c1e0b06e39130caa3b9506da3a145",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": null,
        "size": 114691,
        "upload_time": "2022-02-10T13:24:52",
        "upload_time_iso_8601": "2022-02-10T13:24:52.854774Z",
        "url": "https://files.pythonhosted.org/packages/c7/47/b0dc037b808bbc47e29fcde155586484511d6474f123c0f7523c53883b1d/sortedintersect-0.1.0-py3.8-macosx-10.9-x86_64.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "331b369fcdb714c532c0137e1f4ec3baf858ec9e2919f40acc4e7dfeb021687a",
          "md5": "d4e7d2dc6005dc74c4ace7c002e3f216",
          "sha256": "158c1c7f494209e1eb587a8889c1e7242371ba346c1b186e853cfcc36eddbbd3"
        },
        "downloads": -1,
        "filename": "sortedintersect-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d4e7d2dc6005dc74c4ace7c002e3f216",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 95011,
        "upload_time": "2022-02-10T13:24:54",
        "upload_time_iso_8601": "2022-02-10T13:24:54.769094Z",
        "url": "https://files.pythonhosted.org/packages/33/1b/369fcdb714c532c0137e1f4ec3baf858ec9e2919f40acc4e7dfeb021687a/sortedintersect-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "243bf92bd03f2f587bf6492baad5acbaa21c123742eb4981d8d52cb60ec48294",
          "md5": "872ff445b9e4809878e8af2bf435536f",
          "sha256": "3ff92f97bd4215e9b710f44f23e6920136a76e13704c56ed8fa0a84a1b80a520"
        },
        "downloads": -1,
        "filename": "sortedintersect-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "872ff445b9e4809878e8af2bf435536f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 95035,
        "upload_time": "2022-02-10T13:30:44",
        "upload_time_iso_8601": "2022-02-10T13:30:44.133225Z",
        "url": "https://files.pythonhosted.org/packages/24/3b/f92bd03f2f587bf6492baad5acbaa21c123742eb4981d8d52cb60ec48294/sortedintersect-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "243bf92bd03f2f587bf6492baad5acbaa21c123742eb4981d8d52cb60ec48294",
        "md5": "872ff445b9e4809878e8af2bf435536f",
        "sha256": "3ff92f97bd4215e9b710f44f23e6920136a76e13704c56ed8fa0a84a1b80a520"
      },
      "downloads": -1,
      "filename": "sortedintersect-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "872ff445b9e4809878e8af2bf435536f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 95035,
      "upload_time": "2022-02-10T13:30:44",
      "upload_time_iso_8601": "2022-02-10T13:30:44.133225Z",
      "url": "https://files.pythonhosted.org/packages/24/3b/f92bd03f2f587bf6492baad5acbaa21c123742eb4981d8d52cb60ec48294/sortedintersect-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}