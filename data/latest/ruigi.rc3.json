{
  "info": {
    "author": "Datails",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Ruigi\n\nRuiji in japanese means similar: Ruigi ~ Luigi\n\nThe name encapsulates the essence of this package, being very similar to Luigi, but not exactly.\n\nA pipeline that is:\n1. Very easy to start with\n2. Easy to configure and reuse recipes\n3. Makes every programmer a Data Pipeline pro\n\nJust like keras was made for tensorflow, ruigi was made for luigi. (if you don't know what that is, never mind, keep scrolling)\n\n## Installation\n\n```\npip install ruigi\n```\n\n## Quickstart\n\nPipelines are made of tasks that must be executed in a specific order.\n\n1. Create your first Task\n```\nfrom ruigi import Task\n\nclass MyFirstAwesomeTask(Task):\n    def easy_run(self, inputs):\n        return \"First Hello World!\"\n```\n\n2. Create a Task with a dependency of another Task\n```\n@inherit_list(MyFirstAwesomeTask)\nclass MySecondAwesomeTask(Task):\n    def easy_run(self, inputs):\n        print(f'I got the {inputs[0]}')\n        return \"Hello World, again!\"\n```\n\n3. Build and run your pipeline\n```\nMySecondAwesomeTask().buildme()\n```\n\n4. Add some parameters\n```\nfrom ruigi import Parameter\n\nclass MyTaskWithParameters(Task):\n    a = Parameter(default='nothing')\n\n    def easy_run(self, inputs):\n        return f\"My Task now prints {self.a}\"\n```\n\n5. Create some dynamic pipelines\n```\n@inherit_list((MyTaskWithParameters, dict(a='SOMETHING')),\n              (MyTaskWithParameters, dict(a='SOMETHINGS')),\n              (MyTaskWithParameters, dict(a='A LOT OF SOMETHINGS'))\n)\nclass InterestingPipeline(Task):\n    def easy_run(self, inputs):\n        for i in inputs:\n            print(i)\n        return 'Done!'\n```\n\n6. Stop playing around and start working with data\n```\nfrom ruigi.targets import ParquetTarget\nimport pandas as pd\n\nclass InterestingDataTask(Task):\n    target_type = ParquetTarget # Wow, is that easy to change how the return from easy_run should be saved and loaded?\n\n    def easy_run(self, inputs):\n        df = pd.DataFrame()\n        # Do Data stuff here\n        return df\n```\n\nRead our [docs]() for a lot of examples of more interesting things you can do.\n\n### Summary: \nWith ruigi's Task, you can create tasks of a pipeline.  \nWith ruigi's Target, you can define how the outputs of these tasks are saved (and loaded later).  \nWith ruigi's Parameter, you can make your pipeline dynamic.\n\n## Become a PRO\n\nNever think again of pipelines, learn how to program them naturally with ruigi.\n\n1. Understand the building blocks (read our [docs](), it is very cool)\n2. Get familiar with his father Luigi (read their [docs](https://luigi.readthedocs.io/en/stable/), it is very friendly)\n3. Create and share pipelines, or targets. Also, share the good news to the world and let us know.*\n\n* If your post reaches a lot of people, we'll give you some small gift. If it doesn't, we might give as well.\nCreate a pull request with the name \"I_DID_IT\" with your post and how we can contact you (like a linkedin profile or st.).\n\n## Why not use Airflow or other pipeline tool?\n\nThere are only two types of people in the world: those who create pipelines with ruigi\nand those that don't. We know who have fun programming pipelines.\n\nJust kidding, we don't believe in bulletproofs tools, there are always pros and cons,\nbut at least give it a try yourself using ruigi in one of your projects. There are some\ncases where Airflow + Ruigi makes sense as well.\n\n\n## Why not use pure Luigi?\nNo one developing with keras will say not to use tensorflow. We are built on top of luigi, so you can\nalways use luigi when you feel to. It's just easier with ruigi.\n\n\n## Contributing\nLife is not always rainbows and butterflies. Help us deal with this fact.\nPull Requests are more than welcome. Just get familiar with [standards]() before doing so,\nit will help A LOT. Let's build this together :)\n\n\nRelease process\n----------------\n1. Open a PR with your change for `main` branch;\n2. Once approved, merge into `main`;\n3. Locally, checkout to `main` branch;\n4. make bump_patch/bump_minor depending on the type of version. THis will create a commit with the new version.;\n5. Push your commit and tag; i.e. `git push` and `git push --tag`\n6. A gitHub action will create the pypi release.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/datails/ruigi",
    "keywords": "luigi,scheduling",
    "license": "Datails",
    "maintainer": "Datails",
    "maintainer_email": "",
    "name": "ruigi",
    "package_url": "https://pypi.org/project/ruigi/",
    "platform": "",
    "project_url": "https://pypi.org/project/ruigi/",
    "project_urls": {
      "Homepage": "https://github.com/datails/ruigi"
    },
    "release_url": "https://pypi.org/project/ruigi/0.0.4/",
    "requires_dist": [
      "luigi",
      "retry",
      "joblib",
      "pandas",
      "pyarrow",
      "azure-datalake-store ; extra == 'azure'",
      "adlfs ; extra == 'azure'",
      "adlfs ; extra == 'complete'",
      "azure-datalake-store ; extra == 'complete'",
      "bumpversion ; extra == 'complete'",
      "pytest ; extra == 'complete'",
      "sphinx ; extra == 'complete'",
      "sphinx-rtd-theme ; extra == 'complete'",
      "pytest ; extra == 'dev'",
      "bumpversion ; extra == 'dev'",
      "sphinx-rtd-theme ; extra == 'dev'",
      "sphinx ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Manage your pipelines easily.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11073898,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cea6a61d29e8c0b27bcc1f71c4987e73b6a36b5037983e5655b30c62e1865cc2",
          "md5": "7a0e72b76b112f852052a85f9e7249de",
          "sha256": "0002b5e2007db59de0ecc5cc4fba2a19bda6764945cb8e8f3577b8197ab472f2"
        },
        "downloads": -1,
        "filename": "ruigi-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a0e72b76b112f852052a85f9e7249de",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36309,
        "upload_time": "2021-05-15T11:56:07",
        "upload_time_iso_8601": "2021-05-15T11:56:07.865682Z",
        "url": "https://files.pythonhosted.org/packages/ce/a6/a61d29e8c0b27bcc1f71c4987e73b6a36b5037983e5655b30c62e1865cc2/ruigi-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b08495e80a4de08602ed6fa60a3938183b3693a699f4670e16628e0824d73631",
          "md5": "055c403f491d5a2ca5f9fd81c19725af",
          "sha256": "4baad9c432ee822be2abe770f35cf32f685d8e7d2e28755669ae80c7548b1574"
        },
        "downloads": -1,
        "filename": "ruigi-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "055c403f491d5a2ca5f9fd81c19725af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30090,
        "upload_time": "2021-05-15T11:56:09",
        "upload_time_iso_8601": "2021-05-15T11:56:09.039928Z",
        "url": "https://files.pythonhosted.org/packages/b0/84/95e80a4de08602ed6fa60a3938183b3693a699f4670e16628e0824d73631/ruigi-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0af765e175871639384d14ca8c842256123ba0f7aa3608ca3f38e7ce06f3b538",
          "md5": "4f3a24494e70df1dcceb3aaab224374a",
          "sha256": "09aab8c470a292105712f5f550315649ebdae5d0fea9f2814fae012bb2d944d4"
        },
        "downloads": -1,
        "filename": "ruigi-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f3a24494e70df1dcceb3aaab224374a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38110,
        "upload_time": "2021-05-16T12:39:23",
        "upload_time_iso_8601": "2021-05-16T12:39:23.158351Z",
        "url": "https://files.pythonhosted.org/packages/0a/f7/65e175871639384d14ca8c842256123ba0f7aa3608ca3f38e7ce06f3b538/ruigi-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6fb779bcbe7e298e1f45d0ba579f24b19e9e26aad5576e5fd153b889098bcf4",
          "md5": "7f6b410dc86767e16331b99881ebfe3d",
          "sha256": "c0eede414c0d2442d489da55eeefb4710b0f6cea11398f124dd42eb378772fb5"
        },
        "downloads": -1,
        "filename": "ruigi-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7f6b410dc86767e16331b99881ebfe3d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30630,
        "upload_time": "2021-05-16T12:39:24",
        "upload_time_iso_8601": "2021-05-16T12:39:24.316673Z",
        "url": "https://files.pythonhosted.org/packages/a6/fb/779bcbe7e298e1f45d0ba579f24b19e9e26aad5576e5fd153b889098bcf4/ruigi-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c41706d6a3753915d25959315717b8a9faf0829ef205bc60b83796a43a55d0c5",
          "md5": "bf88a1878fc7ae2430d97b116335c73d",
          "sha256": "49bcbb0aa6bbfc54cd8891d85e70e960d1e7c7e64e2dabf74431924799cc100c"
        },
        "downloads": -1,
        "filename": "ruigi-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf88a1878fc7ae2430d97b116335c73d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 41037,
        "upload_time": "2021-08-02T22:23:28",
        "upload_time_iso_8601": "2021-08-02T22:23:28.286431Z",
        "url": "https://files.pythonhosted.org/packages/c4/17/06d6a3753915d25959315717b8a9faf0829ef205bc60b83796a43a55d0c5/ruigi-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88fd0db8ee7c72a8588167ba73029708a14992def5e1cc2ce09553a19b7bf066",
          "md5": "192d6943f1d8de087772495190c8a52b",
          "sha256": "6213b9fe3e5c913856cfdc10705dc803182b9274fa68d61717347af8e3966999"
        },
        "downloads": -1,
        "filename": "ruigi-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "192d6943f1d8de087772495190c8a52b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31963,
        "upload_time": "2021-08-02T22:23:29",
        "upload_time_iso_8601": "2021-08-02T22:23:29.602789Z",
        "url": "https://files.pythonhosted.org/packages/88/fd/0db8ee7c72a8588167ba73029708a14992def5e1cc2ce09553a19b7bf066/ruigi-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c41706d6a3753915d25959315717b8a9faf0829ef205bc60b83796a43a55d0c5",
        "md5": "bf88a1878fc7ae2430d97b116335c73d",
        "sha256": "49bcbb0aa6bbfc54cd8891d85e70e960d1e7c7e64e2dabf74431924799cc100c"
      },
      "downloads": -1,
      "filename": "ruigi-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bf88a1878fc7ae2430d97b116335c73d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 41037,
      "upload_time": "2021-08-02T22:23:28",
      "upload_time_iso_8601": "2021-08-02T22:23:28.286431Z",
      "url": "https://files.pythonhosted.org/packages/c4/17/06d6a3753915d25959315717b8a9faf0829ef205bc60b83796a43a55d0c5/ruigi-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88fd0db8ee7c72a8588167ba73029708a14992def5e1cc2ce09553a19b7bf066",
        "md5": "192d6943f1d8de087772495190c8a52b",
        "sha256": "6213b9fe3e5c913856cfdc10705dc803182b9274fa68d61717347af8e3966999"
      },
      "downloads": -1,
      "filename": "ruigi-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "192d6943f1d8de087772495190c8a52b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 31963,
      "upload_time": "2021-08-02T22:23:29",
      "upload_time_iso_8601": "2021-08-02T22:23:29.602789Z",
      "url": "https://files.pythonhosted.org/packages/88/fd/0db8ee7c72a8588167ba73029708a14992def5e1cc2ce09553a19b7bf066/ruigi-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}