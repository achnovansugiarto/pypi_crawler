{
  "info": {
    "author": "Brandon Veber",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "sports: A free sports API written for python\n###############################################\n**Development Status: This project is no longer undergoing active development. Please consider\nopening a pull request for any new features or bug fixes to be reviewed and\nmerged.**\n\n.. image:: https://github.com/bveber/pysports-stats/actions/workflows/build.yml/badge.svg\n    :target: https://github.com/bveber/sports/actions\n.. image:: https://readthedocs.org/projects/pysports-stats/badge/?version=latest\n    :target: https://pysports-stats.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n.. image:: https://img.shields.io/pypi/v/pysports-stats.svg\n    :target: https://pypi.org/project/pysports-stats\n\n.. contents::\n\nsports is a free python API that pulls the stats from\nwww.sports-reference.com and allows them to be easily be used in python-based\napplications, especially ones involving data analytics and machine learning.\n\nsports exposes a plethora of sports information from major sports\nleagues in North America, such as the MLB, NBA, College Football and Basketball,\nNFL, and NHL. sports also now supports Professional Football (or\nSoccer) for thousands of teams from leagues around the world. Every sport has\nits own set of valid API queries ranging from the list of teams in a league, to\nthe date and time of a game, to the total number of wins a team has secured\nduring the season, and many, many more metrics that paint a more detailed\npicture of how a team has performed during a game or throughout a season.\n\nNOTE (2022-11-23): The source website has implemented traffic restrictions that \nwill result in your IP being temporarily blacklisted if you exceed 20 requests \nper minute. Therefore all outgoing requests are now passed through a utility function\nthat ensures you will not surpass the rate limit threshold. This runtime slowdown\nis most noticeable for sports with many teams. If you are trying to bulk gather data\nyou will need to schedule a long running job, and its recommended that you cache any \nhistorical data you intend to reuse.\n\n\nInstallation\n============\n\nTODO: This has not been released to Pypi yet, so standard pip install will not work.\nBut I'm keepin the documentation as a template for now. \n\nThe easiest way to install `pysports-stats` is by downloading the latest\nreleased binary from PyPI using PIP. For instructions on installing PIP, visit\n`PyPA.io <https://pip.pypa.io/en/stable/installing/>`_ for detailed steps on\ninstalling the package manager for your local environment.\n\nNext, run::\n\n    pip install pysports-stats\n\nto download and install the latest official release of `pysports-stats` on\nyour machine. You now have the latest stable version of `pysports-stats`\ninstalled and can begin using it following the examples below!\n\nIf the bleeding-edge version of `pysports-stats` is desired, clone this\nrepository using git and install all of the package requirements with PIP::\n\n    git clone https://github.com/bveber/pysports-stats\n    cd pysports-stats\n    poetry install\n\nOnce complete, create a Python wheel for your default version of Python by\nrunning the following command::\n\n    poetry build\n\nThis will create a `.whl` file in the `dist` directory which can be installed\nwith the following command::\n\n    pip install dist/*.whl\n\nExamples\n========\n\nThe following are a few examples showcasing how easy it can be to collect\nan abundance of metrics and information from all of the tracked leagues. The\nexamples below are only a miniscule subset of the total number of statistics\nthat can be pulled using pysports-stats. TODO: Create documentation \n\nGet instances of all NHL teams for the 2018 season\n--------------------------------------------------\n\n.. code-block:: python\n\n    from sports.nhl.teams import Teams\n\n    teams = Teams(2018)\n\nPrint every NBA team's name and abbreviation\n--------------------------------------------\n\n.. code-block:: python\n\n    from sports.nba.teams import Teams\n\n    teams = Teams()\n    for team in teams:\n        print(team.name, team.abbreviation)\n\nGet a specific NFL team's season information\n--------------------------------------------\n\n.. code-block:: python\n\n    from sports.nfl.teams import Teams\n\n    teams = Teams()\n    lions = teams('DET')\n\nPrint the date of every game for a NCAA Men's Basketball team\n-------------------------------------------------------------\n\n.. code-block:: python\n\n    from sports.ncaab.schedule import Schedule\n\n    purdue_schedule = Schedule('purdue')\n    for game in purdue_schedule:\n        print(game.date)\n\nPrint the number of interceptions by the away team in a NCAA Football game\n--------------------------------------------------------------------------\n\n.. code-block:: python\n\n    from sports.ncaaf.boxscore import Boxscore\n\n    championship_game = Boxscore('2018-01-08-georgia')\n    print(championship_game.away_interceptions)\n\nGet a Pandas DataFrame of all stats for a MLB game\n--------------------------------------------------\n\n.. code-block:: python\n\n    from sports.mlb.boxscore import Boxscore\n\n    game = Boxscore('BOS201806070')\n    df = game.dataframe\n\nFind the number of goals a football team has scored\n---------------------------------------------------\n\n.. code-block:: python\n\n    from sports.fb.team import Team\n\n    tottenham = Team('Tottenham Hotspur')\n    print(tottenham.goals_scored)\n\nDocumentation\n=============\n\nThis repository is based on `sportsipy`. I am incredibly grateful for\nthe work done by Robert Clark in creating this code base. Some internal components\nhave been changed, but the basic interface remains the same.\nTwo blog posts detailing the creation and basic usage of `sportsipy` can\nbe found on The Medium at the following links:\n\n- `Part 1: Creating a public sports API <https://medium.com/clarktech-sports/python-sports-analytics-made-simple-part-1-14569d6e9a86>`_\n- `Part 2: Pull any sports metric in 10 lines of Python <https://medium.com/clarktech-sports/python-sports-analytics-made-simple-part-2-40e591a7f3db>`_\n\nThe second post in particular is a great guide for getting started with\n`pysports-stats` and is highly recommended for anyone who is new to the\npackage. \n\nTesting\n=======\n\nPysports-stats contains a testing suite which aims to test all major portions\nof code for proper functionality. To run the test suite against your\nenvironment, ensure all of the requirements are installed by running::\n\n    pip install -r requirements.txt\n    pip install coverage flexmock mock pycodestyle pytest pytest-cov pytest-xdist\n\nNext, start the tests by running py.test while optionally including coverage\nflags which identify the amount of production code covered by the testing\nframework::\n\n    py.test --cov=sports --cov-report term-missing tests/\n\nIf the tests were successful, it will return a green line will show a message at\nthe end of the output similar to the following::\n\n    ======================= 752 passed in 158.03s (0:02:38) =======================\n\nIf a test failed, it will show the number of failed and what went wrong within\nthe test output. If that's the case, ensure you have the latest version of code\nand are in a supported environment. Otherwise, create an issue on GitHub to\nattempt to get the issue resolved.\n\nNOTE (2022-11-23): Due to traffic restriction on the source webpage the exhaustive\nare unusable. They have been commented out for now, but should be replaced with a more \nsensible set of tests to validate connectivity.",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pysports-stats",
    "package_url": "https://pypi.org/project/pysports-stats/",
    "platform": null,
    "project_url": "https://pypi.org/project/pysports-stats/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pysports-stats/0.2.1/",
    "requires_dist": [
      "numpy (>=1.21.3,<2.0.0)",
      "pandas (>=0.24.1)",
      "pyquery (>=1.4.0)",
      "requests (>=2.18.4)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "A free sports API written for python",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15922845,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3def93dd839572b426230c4c1c057559b8e8ff7348b37d3196db5a86b1f6f4a7",
          "md5": "e11db0d182108d90a515755f320bb85e",
          "sha256": "49c80459323ce7f918ac71b7db623414e6aecd0e1b3ad4ab2017ba63c64974fa"
        },
        "downloads": -1,
        "filename": "pysports_stats-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e11db0d182108d90a515755f320bb85e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 351564,
        "upload_time": "2022-11-25T21:41:51",
        "upload_time_iso_8601": "2022-11-25T21:41:51.196685Z",
        "url": "https://files.pythonhosted.org/packages/3d/ef/93dd839572b426230c4c1c057559b8e8ff7348b37d3196db5a86b1f6f4a7/pysports_stats-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f541b17e27f51fd2c0d3d45324030408f7dec9bd736a7a2c0b741d3949157134",
          "md5": "fca781baacbe698d6f7d15d9f3ef7b0e",
          "sha256": "ac051e73694c494d042df1a398b6efa700c662645d35e16e6dbff76bfc196833"
        },
        "downloads": -1,
        "filename": "pysports_stats-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fca781baacbe698d6f7d15d9f3ef7b0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 320081,
        "upload_time": "2022-11-25T21:41:53",
        "upload_time_iso_8601": "2022-11-25T21:41:53.205145Z",
        "url": "https://files.pythonhosted.org/packages/f5/41/b17e27f51fd2c0d3d45324030408f7dec9bd736a7a2c0b741d3949157134/pysports_stats-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9edec8284e19b5af70ae1b99b47fed692f44caafadd4b6bb82db8019cdf52aa3",
          "md5": "1af182fe0702011c73dcb7d29ef76905",
          "sha256": "6f74af45564d3002a4e2eda7d682a55def0c17e5ae2a9e6cf602964ce5233bf5"
        },
        "downloads": -1,
        "filename": "pysports_stats-0.1.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1af182fe0702011c73dcb7d29ef76905",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 351617,
        "upload_time": "2022-11-25T21:49:00",
        "upload_time_iso_8601": "2022-11-25T21:49:00.729896Z",
        "url": "https://files.pythonhosted.org/packages/9e/de/c8284e19b5af70ae1b99b47fed692f44caafadd4b6bb82db8019cdf52aa3/pysports_stats-0.1.0.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58b5540dea37728b75c2a4bee98d4abb67d268cfe45826dee8e32dcc35be1909",
          "md5": "69549e9ff48b9430d5f5d7679d254e0a",
          "sha256": "ebd4dfa19cdc31998c9e151d4d0363c8a42830ac5c52a314e9096569fffea982"
        },
        "downloads": -1,
        "filename": "pysports_stats-0.1.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "69549e9ff48b9430d5f5d7679d254e0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 320213,
        "upload_time": "2022-11-25T21:49:02",
        "upload_time_iso_8601": "2022-11-25T21:49:02.781791Z",
        "url": "https://files.pythonhosted.org/packages/58/b5/540dea37728b75c2a4bee98d4abb67d268cfe45826dee8e32dcc35be1909/pysports_stats-0.1.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d6dce97f25a9447244b23da8c909f62087cc36832a410000e29984cfbd82ca8",
          "md5": "eeb36e5660feba952ec526dcd2ae8072",
          "sha256": "acbfb0f1cdb60e1112e84a659b285deb46e8dfaf52ead5104990eb7995545e49"
        },
        "downloads": -1,
        "filename": "pysports_stats-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eeb36e5660feba952ec526dcd2ae8072",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 349268,
        "upload_time": "2022-11-26T21:25:08",
        "upload_time_iso_8601": "2022-11-26T21:25:08.264021Z",
        "url": "https://files.pythonhosted.org/packages/8d/6d/ce97f25a9447244b23da8c909f62087cc36832a410000e29984cfbd82ca8/pysports_stats-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9071b5f416d8b725ee4089800cff7785868575807781f306131ef35dec86929",
          "md5": "fb2262d5cc4a0bb32a2beabb0096b63c",
          "sha256": "b442235c920f3298a928e63b998c25e2811a9cacae18d984c8853e5a208b9822"
        },
        "downloads": -1,
        "filename": "pysports_stats-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fb2262d5cc4a0bb32a2beabb0096b63c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 317013,
        "upload_time": "2022-11-26T21:25:09",
        "upload_time_iso_8601": "2022-11-26T21:25:09.941067Z",
        "url": "https://files.pythonhosted.org/packages/b9/07/1b5f416d8b725ee4089800cff7785868575807781f306131ef35dec86929/pysports_stats-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8cb0dadcf3424329f260fa946ba848e20f5a5940d88a96dac8c16aec272f355",
          "md5": "8fd18ebbd9f5ff8c368a937fa4ae62a0",
          "sha256": "b6ad85d3b5ae7922aa85458b4dd7376fc2abe3d41ba8d796d891607abc5ee427"
        },
        "downloads": -1,
        "filename": "pysports_stats-0.2.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fd18ebbd9f5ff8c368a937fa4ae62a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 349327,
        "upload_time": "2022-11-26T21:53:00",
        "upload_time_iso_8601": "2022-11-26T21:53:00.583057Z",
        "url": "https://files.pythonhosted.org/packages/a8/cb/0dadcf3424329f260fa946ba848e20f5a5940d88a96dac8c16aec272f355/pysports_stats-0.2.0.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e53ef981b464ce036d812677834f0dded6a7dd67867865e86ce3df81c29cb3fd",
          "md5": "d5112916c09cb1ff779e61688b03a996",
          "sha256": "3c5805d65ec72dec36b92d1cb365773837fcd647cbd5e9b4bc47e38f4e5de2c2"
        },
        "downloads": -1,
        "filename": "pysports_stats-0.2.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "d5112916c09cb1ff779e61688b03a996",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 317079,
        "upload_time": "2022-11-26T21:53:02",
        "upload_time_iso_8601": "2022-11-26T21:53:02.105600Z",
        "url": "https://files.pythonhosted.org/packages/e5/3e/f981b464ce036d812677834f0dded6a7dd67867865e86ce3df81c29cb3fd/pysports_stats-0.2.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2aea6972e28860455b79a80bef2b2eab22f7450f15aac7fa70df9cb42c837965",
          "md5": "ffe6f4f9347e13843b52d65d7b1ffb4d",
          "sha256": "a3fa42214491ad340d9c0fa339cfc3726adfb172cb319287f00d5a5cb87f9f8e"
        },
        "downloads": -1,
        "filename": "pysports_stats-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ffe6f4f9347e13843b52d65d7b1ffb4d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 349406,
        "upload_time": "2022-11-29T04:55:26",
        "upload_time_iso_8601": "2022-11-29T04:55:26.917983Z",
        "url": "https://files.pythonhosted.org/packages/2a/ea/6972e28860455b79a80bef2b2eab22f7450f15aac7fa70df9cb42c837965/pysports_stats-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92e11c6a7d71f40e275de8a0cf6444b6574fb2bcb5b11bdda7c5075a13ce477f",
          "md5": "0a164df48f5070dcecd068fba56c4070",
          "sha256": "b50268a96f4a24320c567bff025e3d013455f629d4693be2079cdf69756b05d8"
        },
        "downloads": -1,
        "filename": "pysports_stats-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0a164df48f5070dcecd068fba56c4070",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 317142,
        "upload_time": "2022-11-29T04:55:28",
        "upload_time_iso_8601": "2022-11-29T04:55:28.476652Z",
        "url": "https://files.pythonhosted.org/packages/92/e1/1c6a7d71f40e275de8a0cf6444b6574fb2bcb5b11bdda7c5075a13ce477f/pysports_stats-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2aea6972e28860455b79a80bef2b2eab22f7450f15aac7fa70df9cb42c837965",
        "md5": "ffe6f4f9347e13843b52d65d7b1ffb4d",
        "sha256": "a3fa42214491ad340d9c0fa339cfc3726adfb172cb319287f00d5a5cb87f9f8e"
      },
      "downloads": -1,
      "filename": "pysports_stats-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ffe6f4f9347e13843b52d65d7b1ffb4d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 349406,
      "upload_time": "2022-11-29T04:55:26",
      "upload_time_iso_8601": "2022-11-29T04:55:26.917983Z",
      "url": "https://files.pythonhosted.org/packages/2a/ea/6972e28860455b79a80bef2b2eab22f7450f15aac7fa70df9cb42c837965/pysports_stats-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92e11c6a7d71f40e275de8a0cf6444b6574fb2bcb5b11bdda7c5075a13ce477f",
        "md5": "0a164df48f5070dcecd068fba56c4070",
        "sha256": "b50268a96f4a24320c567bff025e3d013455f629d4693be2079cdf69756b05d8"
      },
      "downloads": -1,
      "filename": "pysports_stats-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0a164df48f5070dcecd068fba56c4070",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 317142,
      "upload_time": "2022-11-29T04:55:28",
      "upload_time_iso_8601": "2022-11-29T04:55:28.476652Z",
      "url": "https://files.pythonhosted.org/packages/92/e1/1c6a7d71f40e275de8a0cf6444b6574fb2bcb5b11bdda7c5075a13ce477f/pysports_stats-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}