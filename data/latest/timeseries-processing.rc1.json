{
  "info": {
    "author": "Enrico Pittini",
    "author_email": "pittinienrico@hotmail.it",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# timeSeries-processing\nLibrary for processing time series datasets.\n\nThis library is part of my bachelor thesis, check out the other works.\n- [model-selection](https://github.com/EnricoPittini/model-selection)\n- [EEA-datasets-handler](https://github.com/EnricoPittini/EEA-datasets-handler)\n- [ILMETEO-datasets-handler](https://github.com/EnricoPittini/ILMETEO-datasets-handler)\n- [Air-quality-prediction](https://github.com/EnricoPittini/Air-quality-prediction)\n\n## Description\nThe supported time series are daily time series, which means that the dates are always days.\n\n### Purpose\nThis library is a tool for time series modeling. In particular, it is an auxiliary utility for helping building machine learning models for time series forecasting.\n\nIn fact, the main application of this library is to, given a time series dataset, add some useful and interesting time-related features to it.\nIn other words, it allows the user to extract and build some important time-related explanatory features.\n\nThese new features are obtained from a specific and already existing feature of the dataset, by selecting, grouping and processing the days which are somehow related to the ones in the given dataset.\nAs a result, each of these new computed features is an indicator of the behaviour of the specific feature but in other related days.\n\nFor example, given a time series dataset and specifying a certain feature, it is possible to add some new features representing the specified feature but in the previous days.\nEach new feature indicates the value of the specified feature in a certain previous day.\n\nThe interfaces of the functionalities of the library are simple and intuitive, but they are also rich. In this way, the user is able to personalize the time series operations in a powerful and flexible way.\n\n### Functionalities\nThere are three groups of functionalities.\n\nThe first group is able to manipulate dates (i.e. days). There are several different operations.\nFor example, one of them is able to split a collection of days by a certain criterion, which can either be year, month or season.\nThese functionalities are mainly built in order to be some auxiliary utilities for the other functionalities.\n\nThe second group is able to plot time series values.\nThe user can specify several different options, in order to change the visualization and the division of the values. This can be particularly useful for understanding some time-related patterns, like seasonal behaviours.\n\nThe third group of functionalities is the most important. These are the processing functionalities, i.e. the ones which actually process the time series datasets.\nAs described above, the main purpose of these functionalities is to extract and build interesting time-related explanatory features.\n\n### Implementation details\nThis library is built on top of the pandas library.\nThe pandas built-in data types are indeed used.\n- The dates are represented with the pd.Timestamp type.\n- Vectors of dates are represented with the pd.DatetimeIndex type.\n- The time series datasets are represented as pd.DataFrame indexed by dates (i.e. the index is a  pd.DatetimeIndex).\nIn addition, several pandas utilities and methods are used.\n\nEach processing functionality of timeSeries-processing adds the new extracted features to the given dataset by producing a new dataset, i.e. the given dataset is not modified.\nIn addition, each processing functionality also returns two NumPy arrays: the first is X, which contains the explanatory features of the returned dataset; the second is y, which contains the response feature of the returned dataset.\nIn other words, each of these functionalities automatically splits the obtained dataset into the features used to make the predictions and the feature which is the target of the prediction.\nThis can be particularly useful to easily build and evaluate different machine learning models in a compact way.\n\nTo conclude, the time series plotting is built on top of the Matplotlib library.\n\n## Installation\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install timeSeries-processing.\n\n```bash\npip install timeSeries-processing\n```\n\n## Main usage\n\n```python\nimport timeSeries_processing as tsp\n\n# Add, to the time series DataFrame ts_df, features containing values of the specified column \"col\" but related to the 7\n# previous days.\nts_df_new, X, y = tsp.add_k_previous_days(ts_df, col_name=\"col\", k=7)\n\n# Add, to the time series DataFrame ts_df, statistics computed on the other given time series DataFrame ts_df_last_year, but\n# with respect to the days of the previous year.\nts_df_new, X, y = tsp.add_k_years_ago_statistics(ts_df, ts_df_last_year, k=1)\n\n# Add, to the time series DataFrame ts_df, statistics computed on the other given time series DataFrame ts_df_curr_year, with\n# respect to the preceding days of the same year.\nts_df_new, X, y = tsp.add_current_year_statistics(ts_df, ts_df_curr_year)\n\n# Add, to the time series DataFrame ts_df, statistics computed on the other given time series DataFrame ts_df_3_years_ago,\n# but with respect to the days of up to 3 years ago.\nts_df_new, X, y = tsp.add_upTo_k_years_ago_statistics(ts_df, ts_df_3_years_ago, k=3)\n```\n\n## References\n- [matplotlib](https://matplotlib.org/stable/index.html) is a comprehensive library for creating static, animated, and interactive visualizations in Python.\n- [pandas](https://pandas.pydata.org/) is a fast, powerful, flexible and easy to use open source data analysis and manipulation tool,\nbuilt on top of the Python programming language.\n- [sklearn](https://scikit-learn.org/stable/index.html), machine Learning in Python.\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/EnricoPittini/timeSeries-processing",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "timeSeries-processing",
    "package_url": "https://pypi.org/project/timeSeries-processing/",
    "platform": "",
    "project_url": "https://pypi.org/project/timeSeries-processing/",
    "project_urls": {
      "Homepage": "https://github.com/EnricoPittini/timeSeries-processing"
    },
    "release_url": "https://pypi.org/project/timeSeries-processing/1.0.0/",
    "requires_dist": [
      "matplotlib",
      "pandas",
      "sklearn"
    ],
    "requires_python": "",
    "summary": "Library which processes time series datasets",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11825383,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66a35eca44221ef92bcbae37f2c55c4e51e882f792aeb2726744b9a053d0dd75",
          "md5": "240db8c1d114b3210618b86e2e93bb4c",
          "sha256": "31e991cb6f51c8bf2e479fdfa1f22564a706dae8b4bde2fd2b4f45c6b39122dc"
        },
        "downloads": -1,
        "filename": "timeSeries_processing-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "240db8c1d114b3210618b86e2e93bb4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14492,
        "upload_time": "2021-10-25T17:06:28",
        "upload_time_iso_8601": "2021-10-25T17:06:28.908399Z",
        "url": "https://files.pythonhosted.org/packages/66/a3/5eca44221ef92bcbae37f2c55c4e51e882f792aeb2726744b9a053d0dd75/timeSeries_processing-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66a35eca44221ef92bcbae37f2c55c4e51e882f792aeb2726744b9a053d0dd75",
        "md5": "240db8c1d114b3210618b86e2e93bb4c",
        "sha256": "31e991cb6f51c8bf2e479fdfa1f22564a706dae8b4bde2fd2b4f45c6b39122dc"
      },
      "downloads": -1,
      "filename": "timeSeries_processing-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "240db8c1d114b3210618b86e2e93bb4c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14492,
      "upload_time": "2021-10-25T17:06:28",
      "upload_time_iso_8601": "2021-10-25T17:06:28.908399Z",
      "url": "https://files.pythonhosted.org/packages/66/a3/5eca44221ef92bcbae37f2c55c4e51e882f792aeb2726744b9a053d0dd75/timeSeries_processing-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}