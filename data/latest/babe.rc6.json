{
  "info": {
    "author": "Thor Whalen",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# babe\n\nNote that the first time you import name, you need to have access to the Internet, and it will take a few seconds (depending on bandwidth) to download the required data.\n\nBut this data is automatically saved in a local file so things are faster the next time around.\n\nTo install:\n\n```pip install babe```\n\nThen in a python console or notebook...\n\n\n```python\nfrom babe import UsNames\n\nd = UsNames()\n```\n\n# Intro to the data\n\nThe fundamental data provides a popularity score (number of babies recorded) associated to a `(state, gender, name, year)` tuple (that has data -- for names of babies born in the US between 1910 and 2019).\n\n\n```python\nd.data\n```\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>gender</th>\n      <th>year</th>\n      <th>name</th>\n      <th>popularity</th>\n      <th>name_g</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>AK</td>\n      <td>F</td>\n      <td>1910</td>\n      <td>Mary</td>\n      <td>14</td>\n      <td>Mary_F</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>AK</td>\n      <td>F</td>\n      <td>1910</td>\n      <td>Annie</td>\n      <td>12</td>\n      <td>Annie_F</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>AK</td>\n      <td>F</td>\n      <td>1910</td>\n      <td>Anna</td>\n      <td>10</td>\n      <td>Anna_F</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>AK</td>\n      <td>F</td>\n      <td>1910</td>\n      <td>Margaret</td>\n      <td>8</td>\n      <td>Margaret_F</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>AK</td>\n      <td>F</td>\n      <td>1910</td>\n      <td>Helen</td>\n      <td>7</td>\n      <td>Helen_F</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>28277</th>\n      <td>WY</td>\n      <td>M</td>\n      <td>2019</td>\n      <td>Theo</td>\n      <td>5</td>\n      <td>Theo_M</td>\n    </tr>\n    <tr>\n      <th>28278</th>\n      <td>WY</td>\n      <td>M</td>\n      <td>2019</td>\n      <td>Tristan</td>\n      <td>5</td>\n      <td>Tristan_M</td>\n    </tr>\n    <tr>\n      <th>28279</th>\n      <td>WY</td>\n      <td>M</td>\n      <td>2019</td>\n      <td>Vincent</td>\n      <td>5</td>\n      <td>Vincent_M</td>\n    </tr>\n    <tr>\n      <th>28280</th>\n      <td>WY</td>\n      <td>M</td>\n      <td>2019</td>\n      <td>Warren</td>\n      <td>5</td>\n      <td>Warren_M</td>\n    </tr>\n    <tr>\n      <th>28281</th>\n      <td>WY</td>\n      <td>M</td>\n      <td>2019</td>\n      <td>Waylon</td>\n      <td>5</td>\n      <td>Waylon_M</td>\n    </tr>\n  </tbody>\n</table>\n<p>6122890 rows Ã— 6 columns</p>\n</div>\n\n\n\n\n```python\nprint(f\"{len(d.names)} unique names\")\n```\n\n    31862 unique names\n\n\nBut some names can be used for both genders, so most of the internals will use `name_g`, the name concatenated with the gender (`_F` or `_M`):\n\n\n```python\nprint(f\"{len(d.name_gs)} unique names_g (gendered names)\")\n```\n\n    34952 unique names_g (gendered names)\n\n\nYou can use `resolve_name_g` to get the `name_g` corresponding to a name as long as the name isn't used for more than one gender.\n\n\n```python\nd.resolve_name_g('Cora')\n```\n\n\n\n\n    'Cora_F'\n\n\n\n\n```python\ntry:\n    d.resolve_name_g('Vanessa')\nexcept AssertionError as e:\n    print(e)\n```\n\n    The Vanessa can be used for both genders. Specify Vanessa_F or Vanessa_M\n\n\n## by_state data\n\nIn some cases, it's more convenient to have a view indexed by `(state, name_g, year)`. \nThe `by_state` attribute provides that.\n\n\n```python\nd.by_state\n```\n\n\n\n\n    state  name_g      year\n    AK     Mary_F      1910    14\n           Annie_F     1910    12\n           Anna_F      1910    10\n           Margaret_F  1910     8\n           Helen_F     1910     7\n                               ..\n    WY     Theo_M      2019     5\n           Tristan_M   2019     5\n           Vincent_M   2019     5\n           Warren_M    2019     5\n           Waylon_M    2019     5\n    Name: popularity, Length: 6122890, dtype: int64\n\n\n\nThis allows one to do things like getting the data for a given state only:\n\n\n```python\nd.by_state['CA']\n```\n\n\n\n\n    name_g      year\n    Mary_F      1910    295\n    Helen_F     1910    239\n    Dorothy_F   1910    220\n    Margaret_F  1910    163\n    Frances_F   1910    134\n                       ... \n    Zayvion_M   2019      5\n    Zeek_M      2019      5\n    Zhaire_M    2019      5\n    Zian_M      2019      5\n    Ziyad_M     2019      5\n    Name: popularity, Length: 387781, dtype: int64\n\n\n\n... within a state, getting the 'by year popularity' for a given name:\n\n\n```python\nd.by_state['CA']['Cora_F']  # or d.by_state['CA', 'Cora_F']\n```\n\n\n\n\n    year\n    1911      8\n    1912      9\n    1913     15\n    1914     15\n    1915     17\n           ... \n    2015    269\n    2016    244\n    2017    284\n    2018    282\n    2019    256\n    Name: popularity, Length: 109, dtype: int64\n\n\n\n... if you wanted to get the data for a given name (really `name_g`), for all states, you can do it using \"slicing\". \n\nFor example, if you're wondering how many little boys were called \"Vanessa\", and more specifically, when and where?...\n\n\n```python\nd.by_state[:, 'Vanessa_M'] \n```\n\n\n\n\n    state  year\n    AZ     1988     8\n    CA     1980     7\n           1981     5\n           1982    20\n           1983    19\n           1984    14\n           1985    12\n           1986    13\n           1987    13\n           1988    26\n           1989    17\n           1990    16\n           1991    18\n           1992    17\n           1993    17\n           1994    10\n           1995     9\n           1996    10\n           1997    11\n           1998     7\n    DC     1989    11\n    NY     1982     5\n           1983     9\n           1986     6\n           1988     6\n           1989     6\n    TX     1981     5\n           1982     7\n           1983    12\n           1984     9\n           1985    10\n           1986     8\n           1987     9\n           1988     8\n           1989     5\n           1990     6\n           1991     5\n           1992     5\n           1994     5\n    Name: popularity, dtype: int64\n\n\n\n## national data\n\nA national aggregation is available through the `national` attribute\n\n\n```python\nd.national\n```\n\n\n\n\n    name_g      year\n    Aaban_M     2013     6\n                2014     6\n    Aadam_M     2019     6\n    Aadan_M     2008    12\n                2009     6\n                        ..\n    Zyriah_F    2013     7\n                2014     6\n                2016     5\n    Zyron_M     2015     5\n    Zyshonne_M  1998     5\n    Name: popularity, Length: 633239, dtype: int64\n\n\n\nThe interface is as with the `by_state` attribute, but without the state specification.\n\n\n```python\nd.national.loc['Vanessa_F']\n```\n\n\n\n\n    year\n    1935       5\n    1947      24\n    1948      32\n    1949      16\n    1950      41\n            ... \n    2015    1687\n    2016    1633\n    2017    1486\n    2018    1345\n    2019    1188\n    Name: popularity, Length: 74, dtype: int64\n\n\n\n# Plotting stuff\n\n\n```python\nd.plot_popularity('Cora');\n```\n\n\n\n![png](img/output_29_0.png)\n\n\n\n\n```python\nd.plot_popularity('Cora', 'GA');\n```\n\n\n\n![png](img/output_30_0.png)\n\n\n\n\n```python\nd.plot_popularity(['Cora', 'Vanessa_F']);\n```\n\n\n\n![png](img/output_31_0.png)\n\n\n\n\n```python\nd.plot_popularity('Cora', ['CA', 'GA']);\n```\n\n\n\n![png](img/output_32_0.png)\n\n\n\n\n```python\nd.plot_popularity(['Cora', 'Vanessa_F'], ['CA', 'GA']);\n```\n\n\n\n![png](img/output_33_0.png)\n\n\n\n# Misc\n\n## gender-ambiguous names\n\nWe'll call the \"femininity\" of a name be the proportion of times it was used (all states, all time) to name a girl, \nand the \"masculinity\" of a name be defined accordingly. \n\n\n```python\nd.femininity_of_name.iloc[12000:12010]\n```\n\n\n\n\n    Lemmie      0.161290\n    Kashmere    0.161290\n    Clary       0.162162\n    Sung        0.162393\n    Kyrie       0.163527\n    Cedar       0.163686\n    Masyn       0.163895\n    Naveen      0.165605\n    Chai        0.166667\n    Atlee       0.167382\n    dtype: float64\n\n\n\n\n```python\nd.femininity_of_name.plot(figsize=(17, 5), ylabel='femininity');\n```\n\n\n\n![png](img/output_38_0.png)\n\n\n\n\n```python\nd.masculinity_of_name.iloc[19000:19010]\n```\n\n\n\n\n    Berkley     0.108889\n    Dasani      0.110092\n    Sharone     0.111111\n    Ifeoluwa    0.111111\n    Rama        0.111111\n    Scout       0.111486\n    Brownie     0.111732\n    Lashon      0.113158\n    Indigo      0.113364\n    Argie       0.113636\n    dtype: float64\n\n\n\n\n```python\nd.masculinity_of_name.plot(figsize=(17, 5), ylabel='masculinity');\n```\n\n\n\n![png](img/output_40_0.png)\n\n\n\nThe (gender-)\"ambiguity\" of a name can thus be defined as twice the minimum of it's femininity and masculinity. \n\nBy defining the ambiguity thusly, we have a score that is between 0 and 1. It is maximal (1) when an equal proportion of boys and girls were named with the name. It is minimal (0) when only one gender was named with it.\n\nNote that this score is raw (or \"un-smoothed\"). It's computed with the raw counts, so the extreme scores will usually be for names with very low counts. \n\n\n```python\nd.ambiguity_of_name\n```\n\n\n\n\n    Munachiso    1.0\n    Addis        1.0\n    Deshone      1.0\n    Gal          1.0\n    Rajdeep      1.0\n                ... \n    Sharelle     0.0\n    Analy        0.0\n    Sharayah     0.0\n    Sharaya      0.0\n    Aaban        0.0\n    Length: 31862, dtype: float64\n\n\n\n\n```python\nt = d.ambiguity_of_name\nprint(f\"There are {len(t[t > 0])} (gender-)ambiguous names\")\n```\n\n    There are 3090 (gender-)ambiguous names\n\n\n\n```python\nt = d.ambiguity_of_name\nt[t > 0].plot(figsize=(17, 5), ylabel='gender-ambiguity');\n```\n\n\n\n![png](img/output_44_0.png)\n\n\n\n\n```python\nt = list(d.ambiguous_names)\nprint(f\"{len(t)} (gender-)ambiguous names:\")\nprint(*t[:9], '...', sep=', ')\n```\n\n    3090 (gender-)ambiguous names:\n    Nolie, Tyrese, Linn, Savannah, Bryn, Rei, Abby, Shilo, Tracy, ...\n\n\n\n```python\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thorwhalen/babe",
    "keywords": "",
    "license": "mit",
    "maintainer": "",
    "maintainer_email": "",
    "name": "babe",
    "package_url": "https://pypi.org/project/babe/",
    "platform": "any",
    "project_url": "https://pypi.org/project/babe/",
    "project_urls": {
      "Homepage": "https://github.com/thorwhalen/babe"
    },
    "release_url": "https://pypi.org/project/babe/0.0.7/",
    "requires_dist": [
      "pandas",
      "py2store",
      "graze"
    ],
    "requires_python": "",
    "summary": "Data access and analysis of baby names statistics",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8628827,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf2a4bcb3f120909050394fbb8ef1b21e20ab016450cf58a004f3a2c7e3ff703",
          "md5": "f5dbde46b55c1df229ba7e0c5bb52ceb",
          "sha256": "e6bb3ff671b100df22cad141f76630bfcc182653fb33b49982ad7f037f951a31"
        },
        "downloads": -1,
        "filename": "babe-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5dbde46b55c1df229ba7e0c5bb52ceb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3921,
        "upload_time": "2020-11-10T18:32:47",
        "upload_time_iso_8601": "2020-11-10T18:32:47.181433Z",
        "url": "https://files.pythonhosted.org/packages/bf/2a/4bcb3f120909050394fbb8ef1b21e20ab016450cf58a004f3a2c7e3ff703/babe-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "251960f74ab6d12e805fedfb42e4e738e22db2d002af58ac36aa02ec39198ff2",
          "md5": "8b8f7d0317a3d40f9c16c1dac80a0c15",
          "sha256": "f4b07f9778090d29059cedf9003359d3cb323ef5f7a5d5f3080c12b560cdae89"
        },
        "downloads": -1,
        "filename": "babe-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8b8f7d0317a3d40f9c16c1dac80a0c15",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3802,
        "upload_time": "2020-11-10T18:32:49",
        "upload_time_iso_8601": "2020-11-10T18:32:49.988098Z",
        "url": "https://files.pythonhosted.org/packages/25/19/60f74ab6d12e805fedfb42e4e738e22db2d002af58ac36aa02ec39198ff2/babe-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bae059f9cfc5a874a9046d287cb16cec922b1630767e33f3279731c3e7f0380",
          "md5": "735dd91f4492f84ad738d285fbe253cc",
          "sha256": "3267671fc0d7133061e44970f4aa096453b1cac7067270a22ef33fe15aa47840"
        },
        "downloads": -1,
        "filename": "babe-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "735dd91f4492f84ad738d285fbe253cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3899,
        "upload_time": "2020-11-10T19:18:23",
        "upload_time_iso_8601": "2020-11-10T19:18:23.859450Z",
        "url": "https://files.pythonhosted.org/packages/7b/ae/059f9cfc5a874a9046d287cb16cec922b1630767e33f3279731c3e7f0380/babe-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13c1177a5ef60d8270411bdffd247abc85c800f8692b1cec8456cc8a069e13dc",
          "md5": "ac664bb5cc1f261f4aaff2f066927457",
          "sha256": "77183a346a888f90595349ace1e1ee8d76b85c2609a52a6aaba2e88b22cc338b"
        },
        "downloads": -1,
        "filename": "babe-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ac664bb5cc1f261f4aaff2f066927457",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3775,
        "upload_time": "2020-11-10T19:18:25",
        "upload_time_iso_8601": "2020-11-10T19:18:25.116421Z",
        "url": "https://files.pythonhosted.org/packages/13/c1/177a5ef60d8270411bdffd247abc85c800f8692b1cec8456cc8a069e13dc/babe-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39a59451e1910ed84f2334b0422aa556a1fbfd2fef14f4a1b646ac3c8f65f187",
          "md5": "16f5e240f1cfcb066620890ebd90c264",
          "sha256": "5e3327f9a0d4b13c80223382fdb04e81847de1c3fee62dd75e3c6fcdbdeb316a"
        },
        "downloads": -1,
        "filename": "babe-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16f5e240f1cfcb066620890ebd90c264",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4177,
        "upload_time": "2020-11-10T19:29:42",
        "upload_time_iso_8601": "2020-11-10T19:29:42.738524Z",
        "url": "https://files.pythonhosted.org/packages/39/a5/9451e1910ed84f2334b0422aa556a1fbfd2fef14f4a1b646ac3c8f65f187/babe-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0520ca07c75682b4de1f7dc1b8acd8adec7ad713c38ad9a1ad311e39f4381b2",
          "md5": "46b0011b69a78d5c449c32a1bb19e991",
          "sha256": "8539dca7aa08fcd642205082b965d6df57bce4d35197c3c1a82303b98775e075"
        },
        "downloads": -1,
        "filename": "babe-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "46b0011b69a78d5c449c32a1bb19e991",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3614,
        "upload_time": "2020-11-10T19:29:43",
        "upload_time_iso_8601": "2020-11-10T19:29:43.704886Z",
        "url": "https://files.pythonhosted.org/packages/f0/52/0ca07c75682b4de1f7dc1b8acd8adec7ad713c38ad9a1ad311e39f4381b2/babe-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3da3bb0e8398d9a93ff2fc8e7ad7cffb786838eaed382d2eafba0891d7dd7b71",
          "md5": "bae01c198c4d3eaab28a1c55f71a733a",
          "sha256": "7cdbb257fbe3fa5d3e6acd5b50c10b0218116ffc5fe6d7912dedd2c16a1a745d"
        },
        "downloads": -1,
        "filename": "babe-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bae01c198c4d3eaab28a1c55f71a733a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4248,
        "upload_time": "2020-11-10T19:53:47",
        "upload_time_iso_8601": "2020-11-10T19:53:47.389481Z",
        "url": "https://files.pythonhosted.org/packages/3d/a3/bb0e8398d9a93ff2fc8e7ad7cffb786838eaed382d2eafba0891d7dd7b71/babe-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f08f24fd0a1086c3b537c84ac254a60424713b408d053b1eccfb3cc1bc33489",
          "md5": "a333c581f6c9072a89182977ae21b059",
          "sha256": "c2b5e62438e0f0ef90509ae32d56bd1b2af842a271abcb84132be96c61435153"
        },
        "downloads": -1,
        "filename": "babe-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a333c581f6c9072a89182977ae21b059",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3769,
        "upload_time": "2020-11-10T19:53:50",
        "upload_time_iso_8601": "2020-11-10T19:53:50.351406Z",
        "url": "https://files.pythonhosted.org/packages/5f/08/f24fd0a1086c3b537c84ac254a60424713b408d053b1eccfb3cc1bc33489/babe-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10b101d9ca17a6066ea439af54e39311dc4952359c489b601929b673a8dd3eeb",
          "md5": "163e5670095b51d27167d721c33f7eef",
          "sha256": "14ff109cd95965cb6cc7fbf8ea04031a711a7e74d85070fd899a2a8e4b566a95"
        },
        "downloads": -1,
        "filename": "babe-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "163e5670095b51d27167d721c33f7eef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3731,
        "upload_time": "2020-11-10T21:47:33",
        "upload_time_iso_8601": "2020-11-10T21:47:33.000977Z",
        "url": "https://files.pythonhosted.org/packages/10/b1/01d9ca17a6066ea439af54e39311dc4952359c489b601929b673a8dd3eeb/babe-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "597579aa91cf21b655db4d5b7e37e8de9c798a1ad1614f363e84edd05a3f76a1",
          "md5": "e0f974da066870dda746f44ef82e9d1d",
          "sha256": "f0ff2866cc62f10b269abe19f4194f00712683ef6e0d75c0491f0b38a8fec316"
        },
        "downloads": -1,
        "filename": "babe-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "e0f974da066870dda746f44ef82e9d1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3768,
        "upload_time": "2020-11-10T21:47:34",
        "upload_time_iso_8601": "2020-11-10T21:47:34.361484Z",
        "url": "https://files.pythonhosted.org/packages/59/75/79aa91cf21b655db4d5b7e37e8de9c798a1ad1614f363e84edd05a3f76a1/babe-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8544a4f6454ad1a91de0757232c182d1ac0314f6b41827b25ed461dc02c84bb5",
          "md5": "2d0cb064ebc8fc29310cae6e8fdc1f55",
          "sha256": "660b6f1647012e517e1cfdfe362d52949a451fd8ba220d620513f912a04e2c77"
        },
        "downloads": -1,
        "filename": "babe-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d0cb064ebc8fc29310cae6e8fdc1f55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6871,
        "upload_time": "2020-11-11T01:36:40",
        "upload_time_iso_8601": "2020-11-11T01:36:40.505612Z",
        "url": "https://files.pythonhosted.org/packages/85/44/a4f6454ad1a91de0757232c182d1ac0314f6b41827b25ed461dc02c84bb5/babe-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bf17b5c9e20222fa33a29d471b710f6641582e1a0d16a2ca16e44914511b640",
          "md5": "792b3efb56dffc967bb97238182483cf",
          "sha256": "746bf5184236d682de6f0a2b9b26d5dfc1d44a031eb12f30b6fc2451976b0ded"
        },
        "downloads": -1,
        "filename": "babe-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "792b3efb56dffc967bb97238182483cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8785,
        "upload_time": "2020-11-11T01:36:41",
        "upload_time_iso_8601": "2020-11-11T01:36:41.933492Z",
        "url": "https://files.pythonhosted.org/packages/1b/f1/7b5c9e20222fa33a29d471b710f6641582e1a0d16a2ca16e44914511b640/babe-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8544a4f6454ad1a91de0757232c182d1ac0314f6b41827b25ed461dc02c84bb5",
        "md5": "2d0cb064ebc8fc29310cae6e8fdc1f55",
        "sha256": "660b6f1647012e517e1cfdfe362d52949a451fd8ba220d620513f912a04e2c77"
      },
      "downloads": -1,
      "filename": "babe-0.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2d0cb064ebc8fc29310cae6e8fdc1f55",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6871,
      "upload_time": "2020-11-11T01:36:40",
      "upload_time_iso_8601": "2020-11-11T01:36:40.505612Z",
      "url": "https://files.pythonhosted.org/packages/85/44/a4f6454ad1a91de0757232c182d1ac0314f6b41827b25ed461dc02c84bb5/babe-0.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1bf17b5c9e20222fa33a29d471b710f6641582e1a0d16a2ca16e44914511b640",
        "md5": "792b3efb56dffc967bb97238182483cf",
        "sha256": "746bf5184236d682de6f0a2b9b26d5dfc1d44a031eb12f30b6fc2451976b0ded"
      },
      "downloads": -1,
      "filename": "babe-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "792b3efb56dffc967bb97238182483cf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8785,
      "upload_time": "2020-11-11T01:36:41",
      "upload_time_iso_8601": "2020-11-11T01:36:41.933492Z",
      "url": "https://files.pythonhosted.org/packages/1b/f1/7b5c9e20222fa33a29d471b710f6641582e1a0d16a2ca16e44914511b640/babe-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}