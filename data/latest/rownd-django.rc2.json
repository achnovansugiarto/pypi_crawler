{
  "info": {
    "author": "Rownd, Inc.",
    "author_email": "support@rownd.io",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Internet :: WWW/HTTP :: Session"
    ],
    "description": "# Rownd bindings for Django\nEasily add Rownd instant accounts to your Django-backed apps.\n\n## Installation\n\nBegin by adding the `rownd_django` package to your dependencies. In `requirements.txt`, this would look like:\n```\nrownd_django>=1.0.0\n```\n\n> NOTE: This plugin only works with Django v3 and above. We strongly recommend upgrading if you're\n> using something older. If you can't for some reason, please [get in touch](mailto:support@rownd.io?subject=Django%soSDK:%20Request%20for%20older%20version%20support).\n\nNext, add the Rownd app and authentication backend to your Django `settings.py` file.\n\n```python\n\nINSTALLED_APPS = [\n    ...\n    'rownd_django',\n]\n\nAUTHENTICATION_BACKENDS = [\n    'rownd_django.auth.backend.RowndAuthenticationBackend',\n    'django.contrib.auth.backends.ModelBackend'\n]\n```\n\nIf you're using Django REST Framework, then add the Rownd authentication class to your `REST_FRAMEWORK` settings.\n\n```python\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'rownd_django.auth.backend.RowndApiAuthentication',\n    ]\n}\n```\n\nFinally, add your Rownd app credentials to your Django `settings.py` file. You can obtain these from the [Rownd dashboard](https://app.rownd.io).\nThese credentials enable the Rownd authentication backend to communicate with the Rownd API.\n\n```python\nROWND = {\n    'APP_KEY': '<your app key>',\n    'APP_SECRET': '<your app secret>',\n}\n```\n\n### Configure the Rownd Hub (required)\nRownd authentication requires a small code snippet to be embedded within your app, present on all HTML pages.\nSetup for the Hub/snippet itself is outside the scope of this document, but you can find the relevant setup\nguides for either [single page apps](https://docs.rownd.io/rownd/sdk-reference/web/react-next.js) \nor [traditional web apps via vanilla js](https://docs.rownd.io/rownd/sdk-reference/web/javascript-browser).\n\nUse our SDKs to embed the Hub/snippet in your SPA or use the vanilla JS SDK to add the snippet in your main Django template HTML.\n\nNow that everything is set up, you can add Rownd authentication to your APIs or views.\n\n## Usage\nThe Rownd Django SDK provides support for both \"traditional\" Django apps where you have an authentication\nsession that follows a user across page loads, as well as \"single-page\" (SPA) Django apps using frameworks\nlike React, Vue, etc.\n\n### Single-page apps (SPA) / API-based\nWhen using an SPA framework like React, Vue, or similar, you'll likely want to leverage the specific Rownd SDK\nfor those frameworks. You can find a list of supported frameworks in [our documentation](https://docs.rownd.io/rownd/sdk-reference/web).\n\nTypically, an SPA will use an API-driven request/response flow which makes typical sessions unnecessary (though Rownd supports them if you\nneed them). We highly recommend the [Django REST framework](https://www.django-rest-framework.org/) for this purpose. Rownd provides plug-and-play\nsupport for the REST framework's authentication API.\n\nHere's an example of how you might configure an API to leverage Rownd's authenticator, given the installation instructions above:\n\n```python\nfrom rownd_django.auth.backend import RowndApiAuthentication\nfrom rest_framework.permissions import IsAuthenticated\nfrom rest_framework.response import Response\nfrom rest_framework.views import APIView\n\nclass ExampleView(APIView):\n    authentication_classes = [RowndApiAuthentication]\n    permission_classes = [IsAuthenticated]\n\n    def get(self, request, format=None):\n        content = {\n            'user': str(request.user),  # `django.contrib.auth.User` instance.\n            'auth': str(request.auth),  # None\n        }\n        return Response(content)\n```\n\n### Traditional (non-SPA) apps / session-based\nIn this flow, once a user has been authenticated with the Rownd Hub, the Hub will make a request to your\napp's backend to set up a session for the user.\n\nFirst, ensure your project has session middleware enabled.\n\n```python\nMIDDLEWARE = [\n    ...\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    ...\n]\n```\n\nNext, include the Rownd `session_authenticator` in your `urls.py` file.\n\n```python\nurlpatterns = [\n    ...\n    path('rownd/', include('rownd_django.auth.urls', namespace='rownd')),\n    ...\n]\n```\n\nFinally, update your Rownd Hub code snippet to fire a post-authenticate API request to the session authenticator we just enabled.\n\n```html\n<script type=\"text/javascript\">\n(function () {\n    // Rownd Hub snippet\n})();\n</script>\n<script type=\"text/javascript\">\n    function getCookie(name) {\n        let cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n\n    _rphConfig.push(['setAppKey', '<rownd app key>']);\n    _rphConfig.push(['setPostAuthenticationApi', {\n        method: 'post',\n        url: '/rownd/session_authenticate',\n        extra_headers: {\n            'X-CSRFToken': getCookie('csrftoken')\n        }\n    }]);\n</script>\n```\n\nThe session authenticator will establish an authenticated session if one doesn't already exist and will return a response\nindicating that the Rownd Hub should trigger a page refresh. This is usually necessary for your app views to display\nthe desired authenticated context. In the event that an authenticated session already exists, the Hub will not trigger\nfurther page refreshes.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://rownd.io",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rownd-django",
    "package_url": "https://pypi.org/project/rownd-django/",
    "platform": null,
    "project_url": "https://pypi.org/project/rownd-django/",
    "project_urls": {
      "Documentation": "https://docs.rownd.io/rownd/sdk-reference/web/django",
      "Homepage": "https://rownd.io",
      "Source": "https://github.com/rownd/django"
    },
    "release_url": "https://pypi.org/project/rownd-django/1.0.1/",
    "requires_dist": [
      "Django (>=3.0)",
      "PyJWT (>=2.3)",
      "cryptography (>=36.0)",
      "requests (>=2.27)"
    ],
    "requires_python": ">=3.8",
    "summary": "Rownd bindings for Django",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13547620,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30f78924f8204a3750e412bfd3d4f6432245a6e3fb5941194a0b259438f17271",
          "md5": "f91ad80ac49f2784f80df9fd0f6db82a",
          "sha256": "7978c7bccf5429a0324c11256c042d22d6b92b86892565b81716aca858d1da78"
        },
        "downloads": -1,
        "filename": "rownd_django-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f91ad80ac49f2784f80df9fd0f6db82a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10992,
        "upload_time": "2022-04-18T16:13:43",
        "upload_time_iso_8601": "2022-04-18T16:13:43.871554Z",
        "url": "https://files.pythonhosted.org/packages/30/f7/8924f8204a3750e412bfd3d4f6432245a6e3fb5941194a0b259438f17271/rownd_django-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "881d6d27aa5ff299008bf07b255b739740f3f6d31f0a1e7b612c091defcdca9f",
          "md5": "e0794b93dab17b62eb972c1dd6aaf14a",
          "sha256": "8cc3501b22b26d14b73a930a9c0a04162cd46946053778965a7cb36fcbda8362"
        },
        "downloads": -1,
        "filename": "rownd_django-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e0794b93dab17b62eb972c1dd6aaf14a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12272,
        "upload_time": "2022-04-18T16:13:45",
        "upload_time_iso_8601": "2022-04-18T16:13:45.724288Z",
        "url": "https://files.pythonhosted.org/packages/88/1d/6d27aa5ff299008bf07b255b739740f3f6d31f0a1e7b612c091defcdca9f/rownd_django-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8fdcbbbe5980488efffd9b2110d1629c42dac345fff7c7fe405e95e1b0d1bde",
          "md5": "9d91c1a2c5bae2504a17a08072c808d3",
          "sha256": "efb01c0426ad295da1affb09d901fad56b2cba9802daf809aa33603183c1ad27"
        },
        "downloads": -1,
        "filename": "rownd_django-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d91c1a2c5bae2504a17a08072c808d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11032,
        "upload_time": "2022-04-18T16:39:31",
        "upload_time_iso_8601": "2022-04-18T16:39:31.067272Z",
        "url": "https://files.pythonhosted.org/packages/b8/fd/cbbbe5980488efffd9b2110d1629c42dac345fff7c7fe405e95e1b0d1bde/rownd_django-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78a7dcca8e53917407f6cd7c47274eae4dc777fbdadd3ff5705fb399d9f3bac3",
          "md5": "a59c98e612ca7f5c3ee675f722629c4e",
          "sha256": "02e84c7a65a4fd3e75a7886536f5d4cdf805325d3583803a6463bac09937ed28"
        },
        "downloads": -1,
        "filename": "rownd_django-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a59c98e612ca7f5c3ee675f722629c4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12328,
        "upload_time": "2022-04-18T16:39:32",
        "upload_time_iso_8601": "2022-04-18T16:39:32.511681Z",
        "url": "https://files.pythonhosted.org/packages/78/a7/dcca8e53917407f6cd7c47274eae4dc777fbdadd3ff5705fb399d9f3bac3/rownd_django-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8fdcbbbe5980488efffd9b2110d1629c42dac345fff7c7fe405e95e1b0d1bde",
        "md5": "9d91c1a2c5bae2504a17a08072c808d3",
        "sha256": "efb01c0426ad295da1affb09d901fad56b2cba9802daf809aa33603183c1ad27"
      },
      "downloads": -1,
      "filename": "rownd_django-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9d91c1a2c5bae2504a17a08072c808d3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 11032,
      "upload_time": "2022-04-18T16:39:31",
      "upload_time_iso_8601": "2022-04-18T16:39:31.067272Z",
      "url": "https://files.pythonhosted.org/packages/b8/fd/cbbbe5980488efffd9b2110d1629c42dac345fff7c7fe405e95e1b0d1bde/rownd_django-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "78a7dcca8e53917407f6cd7c47274eae4dc777fbdadd3ff5705fb399d9f3bac3",
        "md5": "a59c98e612ca7f5c3ee675f722629c4e",
        "sha256": "02e84c7a65a4fd3e75a7886536f5d4cdf805325d3583803a6463bac09937ed28"
      },
      "downloads": -1,
      "filename": "rownd_django-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a59c98e612ca7f5c3ee675f722629c4e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 12328,
      "upload_time": "2022-04-18T16:39:32",
      "upload_time_iso_8601": "2022-04-18T16:39:32.511681Z",
      "url": "https://files.pythonhosted.org/packages/78/a7/dcca8e53917407f6cd7c47274eae4dc777fbdadd3ff5705fb399d9f3bac3/rownd_django-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}