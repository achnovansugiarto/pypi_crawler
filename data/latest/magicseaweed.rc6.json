{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "python-magicseaweed\n==============================================================================================================================================================================================\n\nProvides basic API to [Magic Seaweed](https://magicseaweed.com/developer/api). \n\nNote: As of 7/8/2022, it was reported that Magicseaweed is not distributing new API keys. This package still works for those who have an API key. Magicseaweed has not stated when or if they will start distributing API keys again. Reference the [\"Obtain an API Key\"](https://github.com/jcconnell/python-magicseaweed/edit/master/README.md#obtain-an-api-key) section below if you'd like to contact them for more information.\n\n## Install\n\n`pip install magicseaweed`\n\n## Requirements\n\n- You need an API key to use it. Check the notes section for signup info.\n\n## Usage\n\n###### Basic Use\n\nNo familiarity with the Magic Seaweed API is required to use this package. For reference, you can find their API documentation here: [Magic Seaweed Docs](https://magicseaweed.com/developer/forecast-api). This package provides some default API interactions based on time.\n\nTo use the wrapper:\n\n```python\nimport magicseaweed\n\napi_key = os.environ.get('MSW_API_KEY')\nponce_id = 348\nbethune_id = 371\n\nponce_forecast = MSW_Forecast(api_key, ponce_id)\nponce_now = ponce_forecast.get_current()\nprint(ponce_now.attrs)\n\nbethune_forecast = MSW_Forecast(api_key, bethune_id)\nbethune_future = bethune_forecast.get_future()\nprint(bethune_future.summary)\n\nfor forecast in bethune_future.data:\n    print(forecast.attrs)\n    print(forecast.get_chart_url('swell'))\n```\n\n\nThe ``MSW_forecast()`` class has a few optional parameters. Your API key, and a spot id are the only required parameters.\n\nUse the ``forecast.DataBlockType()`` eg. ``current()``, ``future()``, ``all()``, ``manual()``, methods to load the data you are after.\n\n``current()`` Returns a single forecast. All other methods return a block of forecasts.\n- ``future()``\n- ``all()``\n- ``manual()``\n\nThe .data attributes for each DataBlock is a list of Forecast objects.\n\n```python\nponce_future = ponce_forecast.get_future()\nfor forecast in ponce_future.data:\n    print(forecast.summary)\n```\n\nExample API Response:\n```json5\n[{\ntimestamp: 1366902000,\nlocalTimestamp: 1366902000,\nissueTimestamp: 1366848000,\nfadedRating: 0,\nsolidRating: 0,\nswell: {\n    minBreakingHeight: 1,\n    absMinBreakingHeight: 1.06,\n    maxBreakingHeight: 2,\n    absMaxBreakingHeight: 1.66,\n    unit: \"ft\",\n    components: {\n         combined: {\n         height: 1.1,\n         period: 14,\n         direction: 93.25,\n         compassDirection: \"W\"\n    },\n    primary: {\n         height: 1,\n         period: 7,\n         direction: 83.37,\n         compassDirection: \"W\"\n    },\n    secondary: {\n         height: 0.4,\n         period: 9,\n         direction: 92.32,\n         compassDirection: \"W\"\n    },\n    tertiary: {\n         height: 0.3,\n         period: 13,\n         direction: 94.47,\n         compassDirection: \"W\"\n     }\n     }\n},\nwind: {\n     speed: 10,\n     direction: 85,\n     compassDirection: \"W\",\n     chill: 15,\n     gusts: 13,\n     unit: \"mph\"\n},\ncondition: {\n     pressure: 1020,\n     temperature: 18,\n     unitPressure: \"mb\",\n     unit: \"c\"\n},\ncharts: {\n    swell: \"http://cdn.magicseaweed.com/wave/750/1-1366902000-1.gif\",\n    period: \"http://cdn.magicseaweed.com/wave/750/1-1366902000-2.gif\",\n    wind: \"http://cdn.magicseaweed.com/gfs/750/1-1366902000-4.gif\",\n    pressure: \"http://cdn.magicseaweed.com/gfs/750/1-1366902000-3.gif\",\n    sst: \"http://cdn.magicseaweed.com/sst/750/1-1366902000-10.gif\"\n}\n}]\n```\n\n##### Advanced\n\n----------------------------------------------------\n\n*class* MSW_Forecast(api_key, spot_id, fields, units)\n------------------------------------\n\nThis class is for interacting with the MSW API. You can use it's functions to get points or series of data for different time periods.\n\n**Parameters**:\n  * **api_key** - Your API key from https://magicseaweed.com/developer/forecast-api\n  * **spot_id** - The ID of a location, available from the URL when visiting the corresponding spot on the Magic Seaweed website. IE '616' in http://magicseaweed.com/Pipeline-Backdoor-Surf-Report/616/\n  * **fields** - (optional) Comma separated list of fields to include in the request URL. Defaults to none, which returns all information. Specifying fields may reduce response time. Example: ['timestamp','wind.*','condition.temperature']\n  * **units** - (optional) A string of the preferred unit of measurement. Defaults to unit at location of spot_id. eu, uk, us are available\n\n**Methods**\n  * **get_current()**\n        - This fucntion returns a single datapoint representing the forecast providedd by MSW if you called the API with ``start=dt.now().timestamp()`` and ``end=dt.now().timestamp()``. Returns a **ForecastDataPoint**.\n  * **get_future()**\n        - This fucntion returns a group of datapoints, beginning with the current forecast and each representing the forecast for a 3 hour period over a 96 hour series (4 days). Returns a **ForecastDataBlock**.\n  * **get_all()**\n        - This function returns the default MSW response if no time parameters are added. This is usually 5 days of forecasts in 3 hour intervals. You may receive some forecasts for expired times. Returns a **ForecastDataBlock**.\n  * **get_manual(start, end)**\n        - This fucntion allows requests for manually selected periods of time using the start and end parameters. Returns a **ForecastDataBlock**.\n    - **start** - A local timestamp from which the forecast should being. Example: ``datetime.now().timestamp()``\n    - **end** - A local timestamp from which the forecast should end. Example: ``datetime.now().timestamp()``\n\n----------------------------------------------------\n\n\n*class* ForecastDataBlock\n---------------------------------------------\n\nContains data about a forecast over time and the HTTP response from Magicseaweed.\n\n**Attributes**\n  - **http_headers**\n    - A dictionary of response headers.\n  - **response**\n    - The Response object returned from requests request.get() method. See https://requests.readthedocs.org/en/latest/api/#requests.Response\n  - **summary**\n    - A human-readable text summary of this data block.\n  - **data**\n    - An array of **ForecastioDataPoint** objects (see below), ordered by time.\n\n----------------------------------------------------\n\n\n*class* ForecastDataPoint\n---------------------------------------------\n\nContains data about a forecast at a particular time and the HTTP response from Magicseaweed.\n\nData points have many attributes, but **not all of them are always available**. Some commonly used ones are:\n  - **localTimestamp**\n    - The time at which the forecast begins, adjusted for the spot's timezone.\n  - **swell_maxBreakingHeight**\n    - A numerical value representing the height of the maxmimum wave for this forecast.\n\n**Attributes**\n  - **http_headers**\n    - A dictionary of response headers.\n  - **response**\n    - The Response object returned from requests request.get() method. See https://requests.readthedocs.org/en/latest/api/#requests.Response\n  - **summary**\n\t- A human-readable text summary of this data point.\n  - **d**\n\t- A dictionary of the JSON response from the MSW API.\n  - **f_d**\n\t- A flattened dictionary of the the JSON response from the MSW API. Keys are compressed using the '_' character.\n  - **attrs**\n\t- A human-readable form of the attributes from this forecast.\n\n**Methods**\n  - **get_swell_url()**\n    - This fucntion returns a URL formatted for the swell direction of this forecast.\n  - **get_wind_url()**\n    - This fucntion returns a URL formatted for wind swell direction of this forecast.\n\nFor a full list of ForecastDataPoint attributes and attribute descriptions, take a look at the table from the Magicseaweed [documentation](https://magicseaweed.com/developer/forecast-api). NOTE: While the MSW API accepts fields in dot.notation, use snake_case to access these attributes in a ForecastDataPoint.\n\n----------------------------------------------------\n\n\n## Development\n\nPull requests welcome.\n\n## Disclaimer\n\nNot affiliated with magicseaweed.com. Use at your own risk.\n\n## TODO:\n- [ ] Compile chart into animated GIFs for the ForecastDataBlocks\n\n## Obtain an API Key:\n\nThe Magic Seaweed API is currently in beta. To obtain an API key, please follow the instructions available here [Sign Up](https://magicseaweed.com/docs/api/60/)\n- Email [general@magicseaweed.com](mailto:general@magicseaweed.com) with the following information\n- Mention that you’ve read and agree our Terms and Conditions. We’ll be unable to offer access unless this is the case.\n- A URL for your application if web based\n- Your business or personal name\n- A name for your application and some very basic details\n\n## References:\n- https://magicseaweed.com/developer/forecast-api\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jcconnell/python-magicseaweed",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "magicseaweed",
    "package_url": "https://pypi.org/project/magicseaweed/",
    "platform": null,
    "project_url": "https://pypi.org/project/magicseaweed/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jcconnell/python-magicseaweed/issues",
      "Changelog": "https://github.com/jcconnell/python-magicseaweed/releases",
      "Homepage": "https://github.com/jcconnell/python-magicseaweed"
    },
    "release_url": "https://pypi.org/project/magicseaweed/1.0.6/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Simple, Python based API wrapper for the magicseaweed.com API.",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15076021,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1eb49d740669fc0dccb814a5e887ac56da2cb77e7486f8fde8a94c6627f0a3c",
          "md5": "cfdcbbaca40b92ced194058492b0f7d2",
          "sha256": "79e090c5c2ee2bebecd231227f5c82303b82eef6ad808e6b98bb784bc1b3c872"
        },
        "downloads": -1,
        "filename": "magicseaweed-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cfdcbbaca40b92ced194058492b0f7d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5053,
        "upload_time": "2022-09-13T06:48:52",
        "upload_time_iso_8601": "2022-09-13T06:48:52.827539Z",
        "url": "https://files.pythonhosted.org/packages/c1/eb/49d740669fc0dccb814a5e887ac56da2cb77e7486f8fde8a94c6627f0a3c/magicseaweed-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a32d371709a1cb0e6f7f6d6b3fcdbb1398c305ca448bef40bde7d1ebd9527eaa",
          "md5": "c5d9ea5db127f2ba261fb58c90ad4331",
          "sha256": "019ccd6103e3d30eee18b571a8a44e8022227eba4317a72864e6235ab81ac653"
        },
        "downloads": -1,
        "filename": "magicseaweed-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c5d9ea5db127f2ba261fb58c90ad4331",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17260,
        "upload_time": "2022-09-13T06:48:54",
        "upload_time_iso_8601": "2022-09-13T06:48:54.668049Z",
        "url": "https://files.pythonhosted.org/packages/a3/2d/371709a1cb0e6f7f6d6b3fcdbb1398c305ca448bef40bde7d1ebd9527eaa/magicseaweed-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b4853baf16e9b312406cba788b57ccbfcf447ad692014365d15ff5e62050410",
          "md5": "bb43de85ad8a593b81eb5ff0790495c4",
          "sha256": "69ba0ce5076d4bb6b87f2a6461b9021b9077ea502b387061c94f225bb5167347"
        },
        "downloads": -1,
        "filename": "magicseaweed-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bb43de85ad8a593b81eb5ff0790495c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6484,
        "upload_time": "2018-07-08T00:13:45",
        "upload_time_iso_8601": "2018-07-08T00:13:45.800298Z",
        "url": "https://files.pythonhosted.org/packages/6b/48/53baf16e9b312406cba788b57ccbfcf447ad692014365d15ff5e62050410/magicseaweed-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb9c458265c4cf2e567f2edc264869e61b8100f62e47dd0d353c7f676c48aee3",
          "md5": "c5efecf69d32081c0938fa50f1cf4f8e",
          "sha256": "11a99af51f497b96088ac51e1346db4cb135eb63d322b0910cba5aad7547eaf8"
        },
        "downloads": -1,
        "filename": "magicseaweed-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c5efecf69d32081c0938fa50f1cf4f8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6423,
        "upload_time": "2018-07-08T17:33:25",
        "upload_time_iso_8601": "2018-07-08T17:33:25.287561Z",
        "url": "https://files.pythonhosted.org/packages/eb/9c/458265c4cf2e567f2edc264869e61b8100f62e47dd0d353c7f676c48aee3/magicseaweed-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "708154fcda895a1164b13aabe773600b1b415cfdd36ecc842c8555dc6c1be392",
          "md5": "a418a3befe793fca45d29a014dd23378",
          "sha256": "1838d5b5f45c99d82013ee4aa73976e0bca02c506b21aaebd2cb9dd3e6c6abbe"
        },
        "downloads": -1,
        "filename": "magicseaweed-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a418a3befe793fca45d29a014dd23378",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6427,
        "upload_time": "2018-10-30T19:58:39",
        "upload_time_iso_8601": "2018-10-30T19:58:39.816110Z",
        "url": "https://files.pythonhosted.org/packages/70/81/54fcda895a1164b13aabe773600b1b415cfdd36ecc842c8555dc6c1be392/magicseaweed-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7354da0d50b1810245c7596e43efe1aa7394fbb81342438f808642289a444447",
          "md5": "03ad5d2e3938b6d482e7b5ee9dc2e8aa",
          "sha256": "4232e9cd9670f163b7800d1ba7b31eef44c63b37be32d681f1daddefd4c86874"
        },
        "downloads": -1,
        "filename": "magicseaweed-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "03ad5d2e3938b6d482e7b5ee9dc2e8aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6448,
        "upload_time": "2018-11-13T19:48:52",
        "upload_time_iso_8601": "2018-11-13T19:48:52.795854Z",
        "url": "https://files.pythonhosted.org/packages/73/54/da0d50b1810245c7596e43efe1aa7394fbb81342438f808642289a444447/magicseaweed-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ffa5db1ec5b0f8db55eac9bc8e9fa2e8a3f991f74946814903a02e75a83e127",
          "md5": "ea0c52860b034f01e49475aabc6fa8e9",
          "sha256": "d9704e6ab60e960769afde0319a8f119d5a97c9de141c0dfb25fd972d9840b58"
        },
        "downloads": -1,
        "filename": "magicseaweed-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea0c52860b034f01e49475aabc6fa8e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5051,
        "upload_time": "2022-09-13T07:32:28",
        "upload_time_iso_8601": "2022-09-13T07:32:28.731033Z",
        "url": "https://files.pythonhosted.org/packages/9f/fa/5db1ec5b0f8db55eac9bc8e9fa2e8a3f991f74946814903a02e75a83e127/magicseaweed-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd18233c09df256f35eb8a68021ce7946a7e943ac433dd4d61cebb26781bef56",
          "md5": "62fa99aa70f76b07fa120530168a09ff",
          "sha256": "71964c18453d154dfd83b44ff4f7136fe655c7f09273689996e637758799e702"
        },
        "downloads": -1,
        "filename": "magicseaweed-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "62fa99aa70f76b07fa120530168a09ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1087051,
        "upload_time": "2022-09-13T07:32:30",
        "upload_time_iso_8601": "2022-09-13T07:32:30.502142Z",
        "url": "https://files.pythonhosted.org/packages/bd/18/233c09df256f35eb8a68021ce7946a7e943ac433dd4d61cebb26781bef56/magicseaweed-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ffa5db1ec5b0f8db55eac9bc8e9fa2e8a3f991f74946814903a02e75a83e127",
        "md5": "ea0c52860b034f01e49475aabc6fa8e9",
        "sha256": "d9704e6ab60e960769afde0319a8f119d5a97c9de141c0dfb25fd972d9840b58"
      },
      "downloads": -1,
      "filename": "magicseaweed-1.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ea0c52860b034f01e49475aabc6fa8e9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5051,
      "upload_time": "2022-09-13T07:32:28",
      "upload_time_iso_8601": "2022-09-13T07:32:28.731033Z",
      "url": "https://files.pythonhosted.org/packages/9f/fa/5db1ec5b0f8db55eac9bc8e9fa2e8a3f991f74946814903a02e75a83e127/magicseaweed-1.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd18233c09df256f35eb8a68021ce7946a7e943ac433dd4d61cebb26781bef56",
        "md5": "62fa99aa70f76b07fa120530168a09ff",
        "sha256": "71964c18453d154dfd83b44ff4f7136fe655c7f09273689996e637758799e702"
      },
      "downloads": -1,
      "filename": "magicseaweed-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "62fa99aa70f76b07fa120530168a09ff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 1087051,
      "upload_time": "2022-09-13T07:32:30",
      "upload_time_iso_8601": "2022-09-13T07:32:30.502142Z",
      "url": "https://files.pythonhosted.org/packages/bd/18/233c09df256f35eb8a68021ce7946a7e943ac433dd4d61cebb26781bef56/magicseaweed-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}