{
  "info": {
    "author": "Chris Cornutt",
    "author_email": "enygma@github.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11"
    ],
    "description": "# ProjectV2 Client\n\nThis is an in-progress client to use the ProjectV2 functionality through the GitHub GraphQL API.\n\n## Setup\n\n1. Install the `projectv2` module: `pip3 install github-projectv2`\n2. Create a `.env` file in the root containing a value for `GITHUB_API_TOKEN` (this will be loaded using `python-dotenv`)\n3. Use the `requirements.txt` file to ensure you have all of the dependencies you need.\n4. Enjoy!\n\n**NOTE:** You can use an actual environment variable instead of the `.env` approach, setting the same `GITHUB_API_TOKEN` value\n\n## Example Usage\n\n```python\nfrom projectv2.project import Project\n\nproject = Project()\nproject.get('myorg', '1234')\nprint(project.title)\n\n# Find the field with the name \"Test Field 1\"\nfound = None\nfor field in project.fields:\n    if field.name == \"Test Field 1\":\n        found = field\n\nif found is None:\n    raise Exception(\"Field not found\")\n\nitems = project.get_items('myorg')\nprint(items)\n\n# Look on the project fields and find the one with the name \"Test Field 1\" and get its options\n# Then, find the option with the name \"Option 1\" and get its id\n\nfor option in found.options:\n    if option.name == \"test3\":\n        newOption = option\n\nfor item in items:\n    result = item.update_field_value(project, field, newOption)\n    print(result)\n```\n\n## Modules\n\n### Project\nThe `Project` module is used to get the information about a project. It results in an instance with the following properties:\n\n- `title` (string)\n- `description` (string)\n- `id` (string): internal ID of project record\n- `number` (integer): public-facing ID number of project\n- `fields` (list): Set of fields in the project, default and custom\n- `items` (list): Set of \"items\" in the project, usually issue instances\n- `org` (string): Name of the organization the project belongs to\n- `createdAt` (datetime): Date/time of project creation\n- `closedAt` (datetime): Date/time when project was closed\n- `closed` (boolean): The open/closed state of the project\n- `shortDescription` (string): Short description of the project\n- `public` (boolean): Visibility for the project (public=`True`, private=`False`)\n- `readme` (string): Full readme for the project\n- `url` (string): Full public-facing URL location of the project\n\n**NOTE:** When the `get` method is called on the `Project`, the `get_fields` method will automatically be called to populate the `fields` property with instances of the `Field` class.\n\n#### Methods\n\n`get(org, projectNumber)`: Get a project by organization name and public-facing project number\nWhere:\n- `org` (string): the name of the organization\n- `projectNumber` (string): the public-facing ID for the project\n\n`get_fields(org)`: Get the fields for a project given the organization name and public-facing project number\nWhere:\n- `org` is the name of the organization (optional)\n\n`get_items(org)`: Get the items currently in the project (issues)\nWhere:\n- `org` is the name of the organization\nReturns:\n- A set of `Item` object types\n\n`get_views(org)`: Get the current list of views for the project\nWhere:\n- `org` (string): optional name of the organization\nReturns:\n- A set of `View` object types\n\n`create(data)`: Create a new project\nWhere:\n- `data` (list): Data to use in the creation of the project (required values: `title`, `ownerId`)\nReturns:\n- A `Project` instance with the new data set\n\n`remove_item(item)`: Removes an item from a project\nWhere:\n- `item` must be a record as fetched by `get_items`, not from a call to `Item.get`\nReturns:\n- The internal ID of the deleted item\n\n`add_item(item)`: Adds an item/issue to a project\nWhere:\n- `item` is a record as fetched by `Item.get` or from the list from `Project.get_items`\nReturns:\n- The internal ID of the item that was added\n\n`save()`: Saves the current state of the project record (fields saved are title, shortDescription, readme, closed)\nReturns:\n- The current instance, a `Project` with the updated information\n\n**NOTE:** the `get_fields` and `get_items` require that the project is fetched using `get` first and will throw an error otherwise.\n\n### Item\nThe `Item` module is used to represent an item in a project (an issue record). It results in an instance with the following properties:\n\n- `id` (string): internal ID of the item record\n- `type` (string): type of item (ex: `ISSUE`)\n- `created` (string): A date/time of when the item was created\n- `assignees` (list): A set of `User` instances\n- `title` (string): Title of the item (issue)\n- `number` (string): The public-facing number of the item\n- `updatedAt` (string): A date/time of when the item was last updated\n- `url` (string): The public-facing URL\n- `body` (string): Unrendered body content\n- `closed` (boolean): Closed/not closed state\n- `closedAt` (string): A date/time of when the issue was closed\n- `author` (list): A set of `User` instances\n- `labels` (list): A set of `Label` instances\n- `projectNodeId` (string): The internal ID of the item (used when relating to a project, otherwise `None`)\n- `trackedIssues` (list): A set of `Item` instances\n- `trackedInIssues` (list): A set of `Item` instances\n\n#### Methods\n\n`update_field_value(project, field, option)`: Update a single select field to a new value\nWhere:\n- `project` = a `Project` instance\n- `field` = a `Field` instance representing the field to update the value on\n- `option` = an `Option` instance representing the new value\n\n`get(org, repo, itemId)`\nWhere:\n- `org` (string): the name of the organization\n- `repo` (string): the name of the repository\n- `itemId` (string): the ID number of the item\n\n`clear_field_value(project, field)`\nWhere:\n- `project`: a `Project` instance\n- `field`: a `Field` instance for the field to clear (a result of the objects loaded from a `Project.get_fields()` method call)\n\n`create(repository, data)`\nWhere:\n- `repository`: a `Repository` instance\n- `data`: a data set containing: `assigneeIds`, `body`, `title` (optional: `labelIds`, `milestoneId`)\n\n### Option\nThe `Option` module is used to represent an option on a single-select field. It results in an instance with the following properties:\n\n- `id` (string): internal ID of the option record\n- `name` (string): the name of the option (this is the option's value)\n\n### Field\nThe `Field` module is used to represent a field in the project. It results in an instance with the following properties:\n\n- `id` (string): internal ID of the field record\n- `name` (string): name of the field\n- `dataType` (string): type of field (Ex: `TEXT` or `SINGLE_SELECT`)\n- `options` (list): when the `dataType` is `SINGLE_SELECT` the options array will be populated with the options records as instances of `Option`\n\n### Label\nThe `Label` module is used to represent a label on an item. It results in an instance with the following properties:\n\n- `id` (string): internal ID of the label record\n- `name` (string): name of the label\n- `description` (string): description of the label\n\n### User\nThe `User` module is used to represent a user in the system. It results in an instance with the following properties:\n\n- `id` (string): internal ID of the user record\n- `email` (string): email address of the user\n- `login` (string): login/username of the user\n- `name` (string): user's name\n\n### Milestone\nThe `Milestone` module is used to represent a milestone in the system. It results in an instance with the following properties:\n\n- `id` (string): internal ID of the milestone record\n- `description` (string): description of the milestone\n- `number` (integer): public-facing ID\n- `title` (string): title of the milestone\n- `state` (string): open/closed status\n- `dueOn` (string): datetime string of when the milestone is\n\n#### Methods\n\n`get(org)`\nWhere:\n- `org` (string): the name of the organization\n\n### Repository\nThe `Repository` module is used to represent a repository in the system. It results in an instance with the following properties:\n\n- `id` (string): internal ID of the repository record\n- `name` (string): name of the repository\n- `description` (string): repository description\n- `isPrivate` (boolean): public/private status\n- `isArchived` (boolean): archived/not archived\n- `isDisabled` (boolean): disabled/not disabled\n- `isFork` (boolean): is a fork/not a fork\n- `isLocked` (boolean): is locked/not locked\n- `isMirror` (boolean): is a mirror/not a mirror\n- `isTemplate` (boolean): is a template/not a template\n\n#### Methods\n\n`get(org, name)`\nWhere:\n- `org` (string): organization name\n- `name` (string): repository name\n\n`get_milestones()`\n\n**NOTE:** `get_milestones` requires that `get()` is called first\n\n### Organization\nThe `Organization` module is used to represent an organization in the system. It results in an instance with the following properties:\n\n- `id` (string): internal ID of the organization record\n- `name` (string): name of the organization (ex: `GitHub`)\n- `login` (string): the login of the organization (ex: `github`)\n- `description` (string): the description of the organization\n- `createdAt` (string): datetime string\n- `location` (string): location value of the organization\n- `url` (string): external URL location\n- `repositories` (list): a list of all repositories in the organization (loads as `Repository objects`)\n\n**NOTE:** Repositories are not loaded by default. `get_repositories` must be called to load them. The method will also return the repository list.\n\n#### Methods\n`get(login)`\nWhere:\n- `login` (string) the name of the organization\nReturns:\n- A single object of type `Organization`\n\n`get_repositories(login)`\nWhere:\n- `login` (string): the name of the organization (`name` is optional, but if not set `get` must be called first)\nReturns:\n- A set of `Repository` class objects populated with repository data\n\n### Search\nThe `Search` module is used to make searches using the `search()` method on the GraphQL API using a format similar to those used in the search on the website.\n\n- No properties defined\n\n#### Methods\n`issues`\nWhere:\n- `filter` (string): the search filter string\nReturns:\n- Set of `Item` class objects populated with matching issue data\n\n### View\nThe `View` module represents a view in the project (a tab). It results in an instance with the following properties:\n\n- `id` (string): internal ID of the view\n- `number` (string): the public ID of the view\n- `sortBy` (array): populated when a view is sorted (contains: `field.name`, `field.id` (internal), `field.dataType`, `direction`)\n- `groupBy` (array): populated when a view is grouped (contains: `id` (internal), `name`)\n- `layout` (string): Layout of the view (ex: `TABLE_LAYOUT` or `BOARD_LAYOUT`)\n\nResource: [https://mathspp.com/blog/how-to-create-a-python-package-in-2022](https://mathspp.com/blog/how-to-create-a-python-package-in-2022)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "github-projectv2",
    "package_url": "https://pypi.org/project/github-projectv2/",
    "platform": null,
    "project_url": "https://pypi.org/project/github-projectv2/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/github-projectv2/0.1.7/",
    "requires_dist": null,
    "requires_python": ">=3.10,<4.0",
    "summary": "",
    "version": "0.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17228615,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ece8fc0400a7a7b4f4c7705198f21480509d260b676780537158150046c19ec",
          "md5": "5e06ae88e1cab8e1aed98be5796ce1a8",
          "sha256": "fefb0735c12051031b6e0218db7d0d39c84459f62d1bd4b162c3585d9abaca4a"
        },
        "downloads": -1,
        "filename": "github_projectv2-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e06ae88e1cab8e1aed98be5796ce1a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 14705,
        "upload_time": "2023-03-03T19:52:05",
        "upload_time_iso_8601": "2023-03-03T19:52:05.089466Z",
        "url": "https://files.pythonhosted.org/packages/7e/ce/8fc0400a7a7b4f4c7705198f21480509d260b676780537158150046c19ec/github_projectv2-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbe6c9c75b0f42c942577afacabfb3275cb28bde258d238370ee7252199a26c3",
          "md5": "83f3d24c2f5a92bee13345e4b116e67b",
          "sha256": "56fbf7fc1dd60db0532b8edc9a26a54022e646d92b4bb17de8f55e385200419a"
        },
        "downloads": -1,
        "filename": "github_projectv2-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "83f3d24c2f5a92bee13345e4b116e67b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 13043,
        "upload_time": "2023-03-03T19:52:06",
        "upload_time_iso_8601": "2023-03-03T19:52:06.891091Z",
        "url": "https://files.pythonhosted.org/packages/fb/e6/c9c75b0f42c942577afacabfb3275cb28bde258d238370ee7252199a26c3/github_projectv2-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a352f35b03b3b7bec7e4386ee72dd026b3a999200dc9859a312fd941b15e28e4",
          "md5": "b7ae5221421dc52f53831c5405c211b0",
          "sha256": "82aea92ef1a0846c73f5c6c79b0a5845f4042edf50229dc588c9ecaced74cca9"
        },
        "downloads": -1,
        "filename": "github_projectv2-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7ae5221421dc52f53831c5405c211b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 14011,
        "upload_time": "2023-02-24T14:49:27",
        "upload_time_iso_8601": "2023-02-24T14:49:27.593346Z",
        "url": "https://files.pythonhosted.org/packages/a3/52/f35b03b3b7bec7e4386ee72dd026b3a999200dc9859a312fd941b15e28e4/github_projectv2-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "971fbf94f524dcfa2885451585d293044c63c2193e814aff0a4d0639493a6e78",
          "md5": "ceea8e4c5f1b0874716c1d510deee4de",
          "sha256": "e4917729b1efe845aea9029d0a598be34e4ef7347eb94c66d3a12d6b54698771"
        },
        "downloads": -1,
        "filename": "github_projectv2-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ceea8e4c5f1b0874716c1d510deee4de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 12750,
        "upload_time": "2023-02-24T14:49:28",
        "upload_time_iso_8601": "2023-02-24T14:49:28.847676Z",
        "url": "https://files.pythonhosted.org/packages/97/1f/bf94f524dcfa2885451585d293044c63c2193e814aff0a4d0639493a6e78/github_projectv2-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "800ea40062826809a0c272fbb11c9706c14109843b1f3bb5bed5ba8d340b1357",
          "md5": "1cf95b395949c33f4484063bf9510782",
          "sha256": "7635cd24b787510478336f7a955ae09b3d32a7237443686b28da25b480a5089c"
        },
        "downloads": -1,
        "filename": "github_projectv2-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1cf95b395949c33f4484063bf9510782",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 14857,
        "upload_time": "2023-03-09T14:49:32",
        "upload_time_iso_8601": "2023-03-09T14:49:32.411058Z",
        "url": "https://files.pythonhosted.org/packages/80/0e/a40062826809a0c272fbb11c9706c14109843b1f3bb5bed5ba8d340b1357/github_projectv2-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2793cbd63e318e05c353c93a96f55650088d2de0c7da088f6003d1deb23420ac",
          "md5": "016c6308f2d84119f70b1a7a40bd9c43",
          "sha256": "eb8952c9234a94e22a7aeb4c065b8f5d15041fb97611a8ace727593a03176072"
        },
        "downloads": -1,
        "filename": "github_projectv2-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "016c6308f2d84119f70b1a7a40bd9c43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 13439,
        "upload_time": "2023-03-09T14:49:33",
        "upload_time_iso_8601": "2023-03-09T14:49:33.841556Z",
        "url": "https://files.pythonhosted.org/packages/27/93/cbd63e318e05c353c93a96f55650088d2de0c7da088f6003d1deb23420ac/github_projectv2-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f55829f996d0af4bf705449b35d45248395637ef36cb4c0875cde994afe39a56",
          "md5": "b0383c8f88a7c0d63a18fceab21d2972",
          "sha256": "c82b95d1d91cc9a03effcde43b5f2298e7ae45ee968581f1122854d0e96234b9"
        },
        "downloads": -1,
        "filename": "github_projectv2-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0383c8f88a7c0d63a18fceab21d2972",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 15820,
        "upload_time": "2023-03-09T19:51:49",
        "upload_time_iso_8601": "2023-03-09T19:51:49.195497Z",
        "url": "https://files.pythonhosted.org/packages/f5/58/29f996d0af4bf705449b35d45248395637ef36cb4c0875cde994afe39a56/github_projectv2-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b9ea9eebeeac7613c9870b103ed4d4c775b1c3922a459d627eb4af1836e4715",
          "md5": "16703dc596704267f603a9a1a728134a",
          "sha256": "af3c9e95e4026b43d788a90d3d141e687d0c2e9d26b0abedd47ad1074764f5c2"
        },
        "downloads": -1,
        "filename": "github_projectv2-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "16703dc596704267f603a9a1a728134a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 14375,
        "upload_time": "2023-03-09T19:51:50",
        "upload_time_iso_8601": "2023-03-09T19:51:50.461952Z",
        "url": "https://files.pythonhosted.org/packages/5b/9e/a9eebeeac7613c9870b103ed4d4c775b1c3922a459d627eb4af1836e4715/github_projectv2-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f55829f996d0af4bf705449b35d45248395637ef36cb4c0875cde994afe39a56",
        "md5": "b0383c8f88a7c0d63a18fceab21d2972",
        "sha256": "c82b95d1d91cc9a03effcde43b5f2298e7ae45ee968581f1122854d0e96234b9"
      },
      "downloads": -1,
      "filename": "github_projectv2-0.1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b0383c8f88a7c0d63a18fceab21d2972",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 15820,
      "upload_time": "2023-03-09T19:51:49",
      "upload_time_iso_8601": "2023-03-09T19:51:49.195497Z",
      "url": "https://files.pythonhosted.org/packages/f5/58/29f996d0af4bf705449b35d45248395637ef36cb4c0875cde994afe39a56/github_projectv2-0.1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b9ea9eebeeac7613c9870b103ed4d4c775b1c3922a459d627eb4af1836e4715",
        "md5": "16703dc596704267f603a9a1a728134a",
        "sha256": "af3c9e95e4026b43d788a90d3d141e687d0c2e9d26b0abedd47ad1074764f5c2"
      },
      "downloads": -1,
      "filename": "github_projectv2-0.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "16703dc596704267f603a9a1a728134a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 14375,
      "upload_time": "2023-03-09T19:51:50",
      "upload_time_iso_8601": "2023-03-09T19:51:50.461952Z",
      "url": "https://files.pythonhosted.org/packages/5b/9e/a9eebeeac7613c9870b103ed4d4c775b1c3922a459d627eb4af1836e4715/github_projectv2-0.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}