{
  "info": {
    "author": "",
    "author_email": "Marc-Olivier Derouin <marcolivier.derouin@poulet-frit.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Python Student Testing Framework\n\n## Contents\n\n- [Introduction](#introduction)\n- [Features](#features)\n- [Installation](#installation)\n- [Contributing](#contributing)\n- [License](#license)\n- [Contact](#contact)\n- [How to use](#how-to-use)\n- [Extension for Visual Studio Code](#extension-for-visual-studio-code)\n\n## Introduction\n\nWelcome to the Python Student Testing Framework! This README provides a brief overview of what the framework is and how to use it. The framework is designed for instructors and TAs to easily test and grade students Python code.\n\n## Features\n\n- Automated testing of students' code against a set of test cases\n- Support for multiple test cases and multiple functions\n- Ability to define custom tests and assertions\n- Clear and detailed feedback for students on test results\n- Display HTML report\n- Visual Studio Code extension\n\n## Installation\n\nTo use the Python Student Testing Framework, you will need to have Python installed on your machine. Then, simply clone the repository or install with `pip install school-grader`\n\n\n## Contributing\n\nThe Python Student Testing Framework is an open-source project and contributions are welcome. \n\n## License\n\nThe Python Student Testing Framework is released under the MIT license. See the LICENSE file for more information.\n\n## Contact\n\nIf you have any questions or issues, please create a GitHub issue or reach out to the project maintainers at marcolivier.derouin@poulet-frit.com\n\n\n## How to use\nLet's say you have given an assignment to your students.\n\n### assignment1.py\n```\nwords = input(\"Please enter a list of words separated by spaces: \").split(\" \")\n\npalindrome_words = []\nnon_palindrome_words = []\n\nfor word in words:\n    lowercase_word = word.lower()\n    if lowercase_word == lowercase_word[::-1]:\n        palindrome_words.append(word)\n    else:\n        non_palindrome_words.append(word)\n\nprint(\"Palindrome words:\" + \" \".join(palindrome_words))\nprint(\"Non-palindrome words:\" + \" \".join(non_palindrome_words))\n```\nYou can write test case for this assignment using the following code.\n```\nfrom school_grader import FileTestCase, Equal, run_test\nFileTestCase('Test #1',\n             'assignment1',\n             ['kayak hi bonjour'],\n             ['Palindrome words:kayak',\n              'Non-palindrome words:hi bonjour']\n             )\n\nFileTestCase('Test #2',\n             'assignment1',\n             ['level racecar madam level'],\n             ['Palindrome words:level racecar madam level',\n              'Non-palindrome words:']\n             )\n\nFileTestCase('Test #3',\n             'assignment1',\n             ['hello world goodbye'],\n             ['Palindrome words:',\n              'Non-palindrome words:hello world goodbye']\n             )\n\nrun_tests()\n```\n\nThis will generate an HTML report that will automatically open in the browser.\n\n![HTML report](https://github.com/school-grader/school-grader/blob/main/assets/html_report1.PNG?raw=true)\n\nIf there is an error in the student code, the report will look like this.\n\n![HTML report](https://github.com/school-grader/school-grader/blob/main/assets/html_report2.PNG?raw=true)\n\nYou can also test for float variables.\n\nThe second parameter in AlmostEqualNumber define the number of decimal places to check in order to perform the comparison\n### assignment2.py\n```\nimport math\n# Start your softmax here\nnumbers = [int(number) for number in input(\"Please enter a list of numbers: \").split(\" \")]\ndenominator = sum([math.exp(number) for number in numbers])\nresult = [str(math.exp(number)/denominator) for number in numbers]\nprint(\" \".join(result))\n```\nYou can write test case for this assignment using the following code.\n```\nfrom school_grader import FileTestCase, AlmostEqualNumber, run_test\nfile=\"assignment2\"\n\nFileTestCase(\n    test_name=\"Exemple1\", \n    filename=file, \n    mock_input=[\"1 2 3 4 1 2 3\"], \n    expected_output=[AlmostEqualNumber(\"0.023640543021591385 0.06426165851049616 0.17468129859572226 0.4748329997443803 0.023640543021591385 0.06426165851049616 0.17468129859572226\", [5 for _ in range(7)])]\n)\n\nFileTestCase(\n    test_name=\"Exemple2\", \n    filename=file, \n    mock_input=[\"-4 0 4\"], \n    expected_output=[AlmostEqualNumber(\"0.0003293204389638929 0.017980286735531547 0.9816903928255045\", [5 for _ in range(3)])]\n)\n\nFileTestCase(\n    test_name=\"Exemple3\", \n    filename=file, \n    mock_input=[\"0 0 0\"], \n    expected_output=[AlmostEqualNumber(\"0.3333333333333333 0.3333333333333333 0.3333333333333333\", [5 for _ in range(3)])]\n)\n\nFileTestCase(\n    test_name=\"Exemple4\", \n    filename=file, \n    mock_input=[\"1 0 1 0 1 0 1\"], \n    expected_output=[AlmostEqualNumber(\"0.19593864937345473 0.0720818008353937 0.19593864937345473 0.0720818008353937 0.19593864937345473 0.0720818008353937 0.19593864937345473\", [5 for _ in range(7)])]\n)\n\nrun_tests()\n```\n## Extension for Visual Studio Code\n\nYou can download a Visual Studio Code extension that will provide coloring when running tests.\n### assignment3.py\n```\nprint('Hi')\n```\nYou can run the tests with these buttons.\n![Buttons](https://github.com/school-grader/school-grader/blob/main/assets/extension2.PNG?raw=true)\n\n\nThe result will look like this. When you hover on a test, you will see the Stack trace.\n![Result](https://github.com/school-grader/school-grader/blob/main/assets/extension1.PNG?raw=true)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "education,framework,python,python3,python3.7,python3.8,python3.9,school,students,test,testing",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "school-grader",
    "package_url": "https://pypi.org/project/school-grader/",
    "platform": null,
    "project_url": "https://pypi.org/project/school-grader/",
    "project_urls": {
      "Bug Tracker": "https://github.com/school-grader/school-grader/issues",
      "Homepage": "https://github.com/school-grader/school-grader"
    },
    "release_url": "https://pypi.org/project/school-grader/2.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Testing framework for Python students code.",
    "version": "2.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16850394,
  "releases": {
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a3b272dada6b5db844243f0791345c0fe02a30941f5d9edb74e8fba68e22065",
          "md5": "dd575b0b8735abded1a26b3e7215d58a",
          "sha256": "50b9e331f7f8ab9787f1b21b71c7b79fc916b110d60acdba31a90e212ac8fe91"
        },
        "downloads": -1,
        "filename": "school_grader-2.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd575b0b8735abded1a26b3e7215d58a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9392,
        "upload_time": "2023-02-14T02:20:11",
        "upload_time_iso_8601": "2023-02-14T02:20:11.516810Z",
        "url": "https://files.pythonhosted.org/packages/2a/3b/272dada6b5db844243f0791345c0fe02a30941f5d9edb74e8fba68e22065/school_grader-2.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dac23f72c384b82ab9fed2777caa719d2ea2262d32455b01f3b903b5c429ab09",
          "md5": "f9384c48a5fd70491bce60f6af9fd710",
          "sha256": "5cddd35a1aef360b5f95ee0a2a2bbb6bf24767069c583a462fdced397454816e"
        },
        "downloads": -1,
        "filename": "school_grader-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f9384c48a5fd70491bce60f6af9fd710",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55829,
        "upload_time": "2023-02-14T02:20:13",
        "upload_time_iso_8601": "2023-02-14T02:20:13.069685Z",
        "url": "https://files.pythonhosted.org/packages/da/c2/3f72c384b82ab9fed2777caa719d2ea2262d32455b01f3b903b5c429ab09/school_grader-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a3b272dada6b5db844243f0791345c0fe02a30941f5d9edb74e8fba68e22065",
        "md5": "dd575b0b8735abded1a26b3e7215d58a",
        "sha256": "50b9e331f7f8ab9787f1b21b71c7b79fc916b110d60acdba31a90e212ac8fe91"
      },
      "downloads": -1,
      "filename": "school_grader-2.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dd575b0b8735abded1a26b3e7215d58a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9392,
      "upload_time": "2023-02-14T02:20:11",
      "upload_time_iso_8601": "2023-02-14T02:20:11.516810Z",
      "url": "https://files.pythonhosted.org/packages/2a/3b/272dada6b5db844243f0791345c0fe02a30941f5d9edb74e8fba68e22065/school_grader-2.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dac23f72c384b82ab9fed2777caa719d2ea2262d32455b01f3b903b5c429ab09",
        "md5": "f9384c48a5fd70491bce60f6af9fd710",
        "sha256": "5cddd35a1aef360b5f95ee0a2a2bbb6bf24767069c583a462fdced397454816e"
      },
      "downloads": -1,
      "filename": "school_grader-2.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f9384c48a5fd70491bce60f6af9fd710",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 55829,
      "upload_time": "2023-02-14T02:20:13",
      "upload_time_iso_8601": "2023-02-14T02:20:13.069685Z",
      "url": "https://files.pythonhosted.org/packages/da/c2/3f72c384b82ab9fed2777caa719d2ea2262d32455b01f3b903b5c429ab09/school_grader-2.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}