{
  "info": {
    "author": "OverLordGoldDragon",
    "author_email": "16495490+OverLordGoldDragon@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# Keras AdamW\n\n[![Build Status](https://travis-ci.com/OverLordGoldDragon/keras-adamw.svg?token=dGKzzAxzJjaRLzddNsCd&branch=master)](https://travis-ci.com/OverLordGoldDragon/keras-adamw)\n[![Coverage Status](https://coveralls.io/repos/github/OverLordGoldDragon/keras-adamw/badge.svg?branch=master&service=github)](https://coveralls.io/github/OverLordGoldDragon/keras-adamw)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/1215c1605ad545cba419ee6e5cc870f5)](https://www.codacy.com?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=OverLordGoldDragon/keras-adamw&amp;utm_campaign=Badge_Grade)\n[![PyPI version](https://badge.fury.io/py/keras-adamw.svg)](https://badge.fury.io/py/keras-adamw)\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)\n\n![](https://img.shields.io/badge/keras-tensorflow-blue.svg)\n![](https://img.shields.io/badge/keras-tf.keras-blue.svg)\n![](https://img.shields.io/badge/keras-tf.keras/eager-blue.svg)\n![](https://img.shields.io/badge/keras-tf.keras/2.0-blue.svg)\n\nKeras/TF implementation of **AdamW**, **SGDW**, **NadamW**, and **Warm Restarts**, based on paper [Decoupled Weight Decay Regularization](https://arxiv.org/abs/1711.05101) - plus **Learning Rate Multipliers**\n\n<img src=\"https://user-images.githubusercontent.com/16495490/65381086-233f7d00-dcb7-11e9-8c83-d0aec7b3663a.png\" width=\"850\">\n\n## Features\n - **Weight decay fix**: decoupling L2 penalty from gradient. _Why use?_ \n   - Weight decay via L2 penalty yields _worse generalization_, due to decay not working properly\n   - Weight decay via L2 penalty leads to a _hyperparameter coupling_ with `lr`, complicating search\n - **Warm restarts (WR)**: cosine annealing learning rate schedule. _Why use?_\n   - _Better generalization_ and _faster convergence_ was shown by authors for various data and model sizes\n - **LR multipliers**: _per-layer_ learning rate multipliers. _Why use?_\n   - _Pretraining_; if adding new layers to pretrained layers, using a global `lr` is prone to overfitting\n\n\n## Installation\n\n`pip install keras-adamw` or clone repository\n\n## Usage\n\nIf using tensorflow.keras imports, set `import os; os.environ[\"TF_KERAS\"]='1'`.\n\n### Weight decay\n\n`AdamW(model=model)`<br>\nThree methods to set `weight_decays = {<weight matrix name>:<weight decay value>,}`:\n\n```python\n# 1. Automatically\nJust pass in `model` (`AdamW(model=model)`), and decays will be automatically extracted.\nLoss-based penalties (l1, l2, l1_l2) will be zeroed by default, but can be kept via\n`zero_penalties=False` (NOT recommended, see Use guidelines).\n```\n```python\n# 2. Use keras_adamw.utils.py\nDense(.., kernel_regularizer=l2(0)) # set weight decays in layers as usual, but to ZERO\nwd_dict = get_weight_decays(model)\n# print(wd_dict) to see returned matrix names, note their order\n# specify values as (l1, l2) tuples, both for l1_l2 decay\nordered_values = [(0, 1e-3), (1e-4, 2e-4), ..]\nweight_decays = fill_dict_in_order(wd_dict, ordered_values)\n```\n```python\n# 3. Fill manually\nmodel.layers[1].kernel.name # get name of kernel weight matrix of layer indexed 1\nweight_decays.update({'conv1d_0/kernel:0': (1e-4, 0)}) # example\n```\n\n### Warm restarts\n`AdamW(.., use_cosine_annealing=True, total_iterations=200)` - refer to _Use guidelines_ below\n\n### LR multipliers\n`AdamW(.., lr_multipliers=lr_multipliers)` - to get, `{<layer name>:<multiplier value>,}`:\n\n 1. (a) Name every layer to be modified _(recommended)_, e.g. `Dense(.., name='dense_1')` - OR<br>\n (b) Get every layer name, note which to modify: `[print(idx,layer.name) for idx,layer in enumerate(model.layers)]`\n 2. (a) `lr_multipliers = {'conv1d_0':0.1} # target layer by full name` - OR<br>\n (b) `lr_multipliers = {'conv1d':0.1}   # target all layers w/ name substring 'conv1d'`\n\n ## Example\n```python\nimport numpy as np\nfrom keras.layers import Input, Dense, LSTM\nfrom keras.models import Model\nfrom keras.regularizers import l1, l2, l1_l2\nfrom keras_adamw import AdamW\n\nipt   = Input(shape=(120, 4))\nx     = LSTM(60, activation='relu', name='lstm_1',\n             kernel_regularizer=l1(1e-4), recurrent_regularizer=l2(2e-4))(ipt)\nout   = Dense(1, activation='sigmoid', kernel_regularizer=l1_l2(1e-4, 2e-4))(x)\nmodel = Model(ipt, out)\n```\n```python\nlr_multipliers = {'lstm_1': 0.5}\n\noptimizer = AdamW(lr=1e-4, model=model, lr_multipliers=lr_multipliers,\n                  use_cosine_annealing=True, total_iterations=24)\nmodel.compile(optimizer, loss='binary_crossentropy')\n```\n```python\nfor epoch in range(3):\n    for iteration in range(24):\n        x = np.random.rand(10, 120, 4) # dummy data\n        y = np.random.randint(0, 2, (10, 1)) # dummy labels\n        loss = model.train_on_batch(x, y)\n        print(\"Iter {} loss: {}\".format(iteration + 1, \"%.3f\" % loss))\n    print(\"EPOCH {} COMPLETED\\n\".format(epoch + 1))\n```\n<img src=\"https://user-images.githubusercontent.com/16495490/83707138-51d56c00-a62a-11ea-9eba-60284490992b.png\" width=\"470\">\n\n(Full example + plot code, and explanation of `lr_t` vs. `lr`: [example.py](https://github.com/OverLordGoldDragon/keras-adamw/blob/master/example.py))\n\n## Use guidelines\n### Weight decay\n - **Set L2 penalty to ZERO** if regularizing a weight via `weight_decays` - else the purpose of the 'fix' is largely defeated, and weights will be over-decayed --_My recommendation_\n - `lambda = lambda_norm * sqrt(1/total_iterations)` --> _can be changed_; the intent is to scale Î» to _decouple_ it from other hyperparams - including (but _not limited to_), # of epochs & batch size. --_Authors_ (Appendix, pg.1) (A-1)\n - `total_iterations_wd` --> set to normalize over _all epochs_ (or other interval `!= total_iterations`) instead of per-WR when using WR; may _sometimes_ yield better results --_My note_\n\n### Warm restarts\n - Done automatically with `autorestart=True`, which is the default if `use_cosine_annealing=True`; internally sets `t_cur=0` after `total_iterations` iterations.\n - Manually: set `t_cur = -1` to restart schedule multiplier (see _Example_). Can be done at compilation or during training. Non-`-1` is also valid, and will start `eta_t` at another point on the cosine curve. Details in A-2,3\n - `t_cur` should be set at `iter == total_iterations - 2`; explanation [here](https://github.com/OverLordGoldDragon/keras-adamw/blob/v1.35/tests/test_optimizers.py#L52)\n - Set `total_iterations` to the # of expected weight updates _for the given restart_ --_Authors_ (A-1,2)\n - `eta_min=0, eta_max=1` are tunable hyperparameters; e.g., an exponential schedule can be used for `eta_max`. If unsure, the defaults were shown to work well in the paper. --_Authors_\n - **[Save/load](https://keras.io/getting-started/faq/#how-can-i-save-a-keras-model) optimizer state**; WR relies on using the optimizer's update history for effective transitions --_Authors_ (A-2)\n```python\n# 'total_iterations' general purpose example\ndef get_total_iterations(restart_idx, num_epochs, iterations_per_epoch):\n    return num_epochs[restart_idx] * iterations_per_epoch[restart_idx]\nget_total_iterations(0, num_epochs=[1,3,5,8], iterations_per_epoch=[240,120,60,30])\n```\n### Learning rate multipliers\n - Best used for pretrained layers - e.g. greedy layer-wise pretraining, or pretraining a feature extractor to a classifier network. Can be a better alternative to freezing layer weights. --_My recommendation_\n - It's often best not to pretrain layers fully (till convergence, or even best obtainable validation score) - as it may inhibit their ability to adapt to newly-added layers.  --_My recommendation_\n - The more the layers are pretrained, the lower their fraction of new layers' `lr` should be. --_My recommendation_\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/OverLordGoldDragon/keras-adamw",
    "keywords": "tensorflow keras optimizers adamw adamwr nadam sgd learning-rate-multipliers warm-restarts",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "keras-adamw",
    "package_url": "https://pypi.org/project/keras-adamw/",
    "platform": "",
    "project_url": "https://pypi.org/project/keras-adamw/",
    "project_urls": {
      "Homepage": "https://github.com/OverLordGoldDragon/keras-adamw"
    },
    "release_url": "https://pypi.org/project/keras-adamw/1.38/",
    "requires_dist": [
      "numpy",
      "tensorflow"
    ],
    "requires_python": "",
    "summary": "Keras implementation of AdamW, SGDW, NadamW, Warm Restarts, and Learning Rate multipliers",
    "version": "1.38",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8503752,
  "releases": {
    "1.23": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "221f92c68a3af6833cc34d4cb0daa86ef234739703604fa213271549cd756ddf",
          "md5": "73fe0873bb729c12c166f4276ea0f924",
          "sha256": "d89d2574a4db7a9871fcc2e24e773a2574d2584eceed0fce4bf61efb7dbaf931"
        },
        "downloads": -1,
        "filename": "keras_adamw-1.23-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73fe0873bb729c12c166f4276ea0f924",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 50941,
        "upload_time": "2020-05-07T14:30:03",
        "upload_time_iso_8601": "2020-05-07T14:30:03.622791Z",
        "url": "https://files.pythonhosted.org/packages/22/1f/92c68a3af6833cc34d4cb0daa86ef234739703604fa213271549cd756ddf/keras_adamw-1.23-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f139fcbb10a3486b12544003851967e24081aa360ed8642b5fb8b27cda95a120",
          "md5": "878e338abe1666b0fef03c4addd775f2",
          "sha256": "7c91a8ba4fcfbcefc7a0f2d95ea6ffa6ea2db05c35d619519bde5f9d654978b3"
        },
        "downloads": -1,
        "filename": "keras-adamw-1.23.tar.gz",
        "has_sig": false,
        "md5_digest": "878e338abe1666b0fef03c4addd775f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29983,
        "upload_time": "2020-05-07T14:30:04",
        "upload_time_iso_8601": "2020-05-07T14:30:04.684759Z",
        "url": "https://files.pythonhosted.org/packages/f1/39/fcbb10a3486b12544003851967e24081aa360ed8642b5fb8b27cda95a120/keras-adamw-1.23.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.30": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66a37e5aeba6d307920226098c31b401581136f446646ecc9ae5c445572a5d11",
          "md5": "68517fbcde1d4787d745340d5c3cdb34",
          "sha256": "afa450d02833326ad905f93ac41767f41410196d5d0a26957a637e9630e8969f"
        },
        "downloads": -1,
        "filename": "keras_adamw-1.30-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68517fbcde1d4787d745340d5c3cdb34",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28746,
        "upload_time": "2020-05-25T18:47:51",
        "upload_time_iso_8601": "2020-05-25T18:47:51.887029Z",
        "url": "https://files.pythonhosted.org/packages/66/a3/7e5aeba6d307920226098c31b401581136f446646ecc9ae5c445572a5d11/keras_adamw-1.30-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13a61fc26fb39e508621df53e44d0fbc10c7852b09e9f3eed9b748388635b63b",
          "md5": "6aaedcb26b03399d6537bccd712bb3d9",
          "sha256": "b48e2a96adbef646db5b73f84a079753df8ba4509a46b4b4ffd6ef34ddc7e30d"
        },
        "downloads": -1,
        "filename": "keras-adamw-1.30.tar.gz",
        "has_sig": false,
        "md5_digest": "6aaedcb26b03399d6537bccd712bb3d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22947,
        "upload_time": "2020-05-25T18:47:52",
        "upload_time_iso_8601": "2020-05-25T18:47:52.924850Z",
        "url": "https://files.pythonhosted.org/packages/13/a6/1fc26fb39e508621df53e44d0fbc10c7852b09e9f3eed9b748388635b63b/keras-adamw-1.30.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.31": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c6557dc4fdbf28d0dd52bf6b6dfa1996d71c4a8e209a0669d09a11e720c83ff",
          "md5": "3a4f137c34882818ff3ab0bfa0db02cc",
          "sha256": "1dff47973fc5cc8e6d788e4d61db6f8349a51958345ae8d48fdb85921e06aae7"
        },
        "downloads": -1,
        "filename": "keras_adamw-1.31-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a4f137c34882818ff3ab0bfa0db02cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28764,
        "upload_time": "2020-05-30T17:32:45",
        "upload_time_iso_8601": "2020-05-30T17:32:45.966539Z",
        "url": "https://files.pythonhosted.org/packages/1c/65/57dc4fdbf28d0dd52bf6b6dfa1996d71c4a8e209a0669d09a11e720c83ff/keras_adamw-1.31-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42dbd02cd276cc61363e3422d3ae72d2406e53927a553496983b07416bfe421a",
          "md5": "9c328f12e5449e82864d8f14f1ca17c9",
          "sha256": "ac2d44e05755458504c2e397a3149d54db2645495bba71093a1c57b024d58f7c"
        },
        "downloads": -1,
        "filename": "keras-adamw-1.31.tar.gz",
        "has_sig": false,
        "md5_digest": "9c328f12e5449e82864d8f14f1ca17c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22967,
        "upload_time": "2020-05-30T17:32:47",
        "upload_time_iso_8601": "2020-05-30T17:32:47.152139Z",
        "url": "https://files.pythonhosted.org/packages/42/db/d02cd276cc61363e3422d3ae72d2406e53927a553496983b07416bfe421a/keras-adamw-1.31.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.32": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f99697d504c7149ff1b6679e2e816e8c933e9e5b1e5eae3d45892a5355aed14",
          "md5": "0069f39d2e9e0ba8333f030cddd83cec",
          "sha256": "f37b7cb0e7cc2e22823bb0c46d9b8677d0c358eb4906d4c6b32838d6cdb0f28b"
        },
        "downloads": -1,
        "filename": "keras_adamw-1.32-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0069f39d2e9e0ba8333f030cddd83cec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28811,
        "upload_time": "2020-06-04T02:20:47",
        "upload_time_iso_8601": "2020-06-04T02:20:47.682911Z",
        "url": "https://files.pythonhosted.org/packages/3f/99/697d504c7149ff1b6679e2e816e8c933e9e5b1e5eae3d45892a5355aed14/keras_adamw-1.32-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bda819540ea5ed52af478ad01c1db2b12403ffa0f9b6c2e43814317e87a63641",
          "md5": "97820d8eff9735b4d7cf3c974e3f5a4f",
          "sha256": "1129059f9abe24522d5253f2020c669c5344a3245084ae575175bc70ac0c370c"
        },
        "downloads": -1,
        "filename": "keras-adamw-1.32.tar.gz",
        "has_sig": false,
        "md5_digest": "97820d8eff9735b4d7cf3c974e3f5a4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23025,
        "upload_time": "2020-06-04T02:20:48",
        "upload_time_iso_8601": "2020-06-04T02:20:48.839229Z",
        "url": "https://files.pythonhosted.org/packages/bd/a8/19540ea5ed52af478ad01c1db2b12403ffa0f9b6c2e43814317e87a63641/keras-adamw-1.32.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.35": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95b52c11b84065dba379ed555387206ef551f429074f8b5e367f1dc3a7e3e787",
          "md5": "807dc4d288a6cd05074be807777ea874",
          "sha256": "cfcc38d6b5f6e90c139d1f001755ea788c23a0991bb40f59f0aee55480e5f9db"
        },
        "downloads": -1,
        "filename": "keras_adamw-1.35-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "807dc4d288a6cd05074be807777ea874",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29721,
        "upload_time": "2020-07-08T00:36:10",
        "upload_time_iso_8601": "2020-07-08T00:36:10.404104Z",
        "url": "https://files.pythonhosted.org/packages/95/b5/2c11b84065dba379ed555387206ef551f429074f8b5e367f1dc3a7e3e787/keras_adamw-1.35-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "717974b6ad5d031748b16d116fb9c5421c4e6bf1578446091bfe08e1767fd9ed",
          "md5": "a11bf23f3ecb21453feb1a388aae0b8a",
          "sha256": "52d958223b86cac1895ea6bbed7719a2289b59db64eaefe61d946d9501a904b1"
        },
        "downloads": -1,
        "filename": "keras-adamw-1.35.tar.gz",
        "has_sig": false,
        "md5_digest": "a11bf23f3ecb21453feb1a388aae0b8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23771,
        "upload_time": "2020-07-08T00:36:11",
        "upload_time_iso_8601": "2020-07-08T00:36:11.640144Z",
        "url": "https://files.pythonhosted.org/packages/71/79/74b6ad5d031748b16d116fb9c5421c4e6bf1578446091bfe08e1767fd9ed/keras-adamw-1.35.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.36": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "984175ae3ea8319aabd3c9b969abde09fb27909728059f27616e3dd7613071b2",
          "md5": "1df916ef6b8156e148f511c07ef34d3a",
          "sha256": "2a16470365833729d6eb90e462fe2b15a0290470c8ed3deb7e645c149257424e"
        },
        "downloads": -1,
        "filename": "keras_adamw-1.36-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1df916ef6b8156e148f511c07ef34d3a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29432,
        "upload_time": "2020-07-13T18:55:02",
        "upload_time_iso_8601": "2020-07-13T18:55:02.382970Z",
        "url": "https://files.pythonhosted.org/packages/98/41/75ae3ea8319aabd3c9b969abde09fb27909728059f27616e3dd7613071b2/keras_adamw-1.36-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c48955f72c0b058af0e5c555ff18206314d13da98a7ca8471c33153725be9540",
          "md5": "a9f1bf9cee2b9b8f4563ef81a4ad600b",
          "sha256": "f74ce04584e580cf93ce2b8d6ae28e8ac2a0698ac17e4c8e0c7ff33ab9c4ea93"
        },
        "downloads": -1,
        "filename": "keras-adamw-1.36.tar.gz",
        "has_sig": false,
        "md5_digest": "a9f1bf9cee2b9b8f4563ef81a4ad600b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23460,
        "upload_time": "2020-07-13T18:55:03",
        "upload_time_iso_8601": "2020-07-13T18:55:03.747204Z",
        "url": "https://files.pythonhosted.org/packages/c4/89/55f72c0b058af0e5c555ff18206314d13da98a7ca8471c33153725be9540/keras-adamw-1.36.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.37": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47954551a4b4d17fb38a63c85030377dc4f8a76fed4b750b46daa4a0e4f3806d",
          "md5": "5dbe60da6352fcd63ccb299ac6ab8f66",
          "sha256": "9527d4edf100598eb92ffc3fdb6fb0ffba9c32c9637345cf484cce91d318e541"
        },
        "downloads": -1,
        "filename": "keras_adamw-1.37-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5dbe60da6352fcd63ccb299ac6ab8f66",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29426,
        "upload_time": "2020-09-11T19:05:54",
        "upload_time_iso_8601": "2020-09-11T19:05:54.226556Z",
        "url": "https://files.pythonhosted.org/packages/47/95/4551a4b4d17fb38a63c85030377dc4f8a76fed4b750b46daa4a0e4f3806d/keras_adamw-1.37-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61e0271352ef406f31d121def3cd501cf1797be0afabac45e2c3e39f7d0ba71a",
          "md5": "e7f2bbd5c58004688cb96a943f6bf298",
          "sha256": "7b7d160ff2b7827165a4f4b61bdf47e0b9c7bdcc72638e3d62157bf9d992bf5b"
        },
        "downloads": -1,
        "filename": "keras-adamw-1.37.tar.gz",
        "has_sig": false,
        "md5_digest": "e7f2bbd5c58004688cb96a943f6bf298",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23471,
        "upload_time": "2020-09-11T19:05:55",
        "upload_time_iso_8601": "2020-09-11T19:05:55.562804Z",
        "url": "https://files.pythonhosted.org/packages/61/e0/271352ef406f31d121def3cd501cf1797be0afabac45e2c3e39f7d0ba71a/keras-adamw-1.37.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.38": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c77724f7f2897b6d176ed81409c6dae24901cc2b2fa50c433c85a9280732516d",
          "md5": "944b0a2ad0b395d2fe6fab286d1ca622",
          "sha256": "cdf0603ed39daaec3695b6f8c3ae1016e7ef4b1782238bbb623a1dd1019fad4c"
        },
        "downloads": -1,
        "filename": "keras_adamw-1.38-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "944b0a2ad0b395d2fe6fab286d1ca622",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29469,
        "upload_time": "2020-10-26T16:01:20",
        "upload_time_iso_8601": "2020-10-26T16:01:20.612463Z",
        "url": "https://files.pythonhosted.org/packages/c7/77/24f7f2897b6d176ed81409c6dae24901cc2b2fa50c433c85a9280732516d/keras_adamw-1.38-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9d37514c0aeb7f0a19aae1b21b431d89a6eb4de7fc4842c7d0531703a2955b0",
          "md5": "47dce8c4d7e1bcf9a6bdcadad26a077c",
          "sha256": "d7d66dd47ec08fb8d5e80e958fde11209f29da9f2dc8953c3cccd679cc15d5ad"
        },
        "downloads": -1,
        "filename": "keras-adamw-1.38.tar.gz",
        "has_sig": false,
        "md5_digest": "47dce8c4d7e1bcf9a6bdcadad26a077c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23522,
        "upload_time": "2020-10-26T16:01:22",
        "upload_time_iso_8601": "2020-10-26T16:01:22.246783Z",
        "url": "https://files.pythonhosted.org/packages/d9/d3/7514c0aeb7f0a19aae1b21b431d89a6eb4de7fc4842c7d0531703a2955b0/keras-adamw-1.38.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c77724f7f2897b6d176ed81409c6dae24901cc2b2fa50c433c85a9280732516d",
        "md5": "944b0a2ad0b395d2fe6fab286d1ca622",
        "sha256": "cdf0603ed39daaec3695b6f8c3ae1016e7ef4b1782238bbb623a1dd1019fad4c"
      },
      "downloads": -1,
      "filename": "keras_adamw-1.38-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "944b0a2ad0b395d2fe6fab286d1ca622",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 29469,
      "upload_time": "2020-10-26T16:01:20",
      "upload_time_iso_8601": "2020-10-26T16:01:20.612463Z",
      "url": "https://files.pythonhosted.org/packages/c7/77/24f7f2897b6d176ed81409c6dae24901cc2b2fa50c433c85a9280732516d/keras_adamw-1.38-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d9d37514c0aeb7f0a19aae1b21b431d89a6eb4de7fc4842c7d0531703a2955b0",
        "md5": "47dce8c4d7e1bcf9a6bdcadad26a077c",
        "sha256": "d7d66dd47ec08fb8d5e80e958fde11209f29da9f2dc8953c3cccd679cc15d5ad"
      },
      "downloads": -1,
      "filename": "keras-adamw-1.38.tar.gz",
      "has_sig": false,
      "md5_digest": "47dce8c4d7e1bcf9a6bdcadad26a077c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23522,
      "upload_time": "2020-10-26T16:01:22",
      "upload_time_iso_8601": "2020-10-26T16:01:22.246783Z",
      "url": "https://files.pythonhosted.org/packages/d9/d3/7514c0aeb7f0a19aae1b21b431d89a6eb4de7fc4842c7d0531703a2955b0/keras-adamw-1.38.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}