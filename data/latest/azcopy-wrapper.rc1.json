{
  "info": {
    "author": "Kurien Zacharia, Yash Marathe",
    "author_email": "yashmarathe21@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# AzCopy Python Wrapper\n\nThis package allows you to invoke [AzCopy v10](https://github.com/Azure/azure-storage-azcopy) from python.\n\nIts design has been inspired by the NodeJS version of Azcopy Wrapper which can be found here [NodeJS Azcopy](https://www.npmjs.com/package/@azure-tools/azcopy-node)\n\n# Requirements\n\n1. Azcopy\n- For Linux installation,(recommended with admin privileges) you can run \n```\n# Download AzCopy\nwget https://aka.ms/downloadazcopy-v10-linux\n \n# Expand Archive\ntar -xvf downloadazcopy-v10-linux\n \n# Move AzCopy to the destination you want to store it\nsudo cp ./azcopy_linux_amd64_*/azcopy /usr/bin/\n\n# Change permissions of Azcopy\nsudo chmod 777 /usr/bin/azcopy\n```\n\n- For windows installation, you can run\n```\n# Download and extract\nInvoke-WebRequest -Uri \"https://aka.ms/downloadazcopy-v10-windows\" -OutFile AzCopy.zip -UseBasicParsing\nExpand-Archive ./AzCopy.zip ./AzCopy -Force\n\n# Move AzCopy\nmkdir ~\\AppData\\Local\\Programs\\AZCopy\nGet-ChildItem ./AzCopy/*/azcopy.exe | Move-Item -Destination ~\\AppData\\Local\\Programs\\AZCopy\\\n\n# Add AzCopy to PATH\n$userenv = (Get-ItemProperty -Path 'HKCU:\\Environment' -Name Path).path\n$newPath = \"$userenv;%USERPROFILE%\\AppData\\Local\\Programs\\AZCopy;\"\nNew-ItemProperty -Path 'HKCU:\\Environment' -Name Path -Value $newPath -Force\n\n# Clean the kitchen\ndel -Force AzCopy.zip\ndel -Force -Recurse .\\AzCopy\\\n```\n\nPlease ensure that the path to the AzCopy executable file is specified in the System variables for the AzClient to work properly. Otherwise, you will have to specify the path to the executable file while iniating the AzClient. Refer the examples and common issues portion to know more about this.\n\n- For detailed installation steps, you can refer the following links\n1. [AzCopy official Documentation](https://learn.microsoft.com/en-us/azure/storage/common/storage-use-azcopy-v10)\n2. [AzCopy Installation Scripts Option 1](https://www.thomasmaurer.ch/2019/05/how-to-install-azcopy-for-azure-storage/)\n3. [AzCopy Installation Scripts Option 2](https://adamtheautomator.com/azcopy-download/)\n\n\n## Basic Usage\n\n### NOTE: If you want to specify the AzCopy binary/executable to be used according to the OS, you can do it while initiating the AzClient object.\n\n#### For Linux based systems (Please  ensure the file specified here has the required permissions)\n```\naz_client = AzClient(exe_to_use=\"/usr/bin/azcopy\")\n```\n\n#### For Windows\n```\naz_client = AzClient(exe_to_use=\"C:\\\\Users\\\\DELL\\\\AppData\\\\Local\\\\Programs\\\\AZCopy\\\\azcopy.exe\")\n```\n\n### 1. Upload Directory to Remote Location\n\n```\nfrom azcopy_wrapper.azcopy_client import AzClient\nfrom azcopy_wrapper.azcopy_utilities import (\n    AzRemoteSASLocation,\n    AzLocalLocation,\n    AzCopyOptions,\n    AzSyncOptions,\n)\n\nlocal_location = AzLocalLocation(\n    path=\"./test_data/\",\n    use_wildcard=True,\n)\n\nremote_location = AzRemoteSASLocation(\n    storage_account=storage_account,\n    container=container,\n    path=\"test4\",\n    sas_token=sas_token,\n)\n\ntransfer_options = AzCopyOptions(\n    overwrite_existing=True,\n    recursive=True,\n    exclude_path=f\"test2.jpg;test_data_4;test_data_3/test3.jpg\",\n)\n\naz_client = AzClient()\n\njob_info = az_client.upload_data_to_remote_location(\n    src=local_location, dest=remote_location, transfer_options=transfer_options\n)\n\nprint(job_info.__dict__)\n```\n\n\n### 2. Download a remote file to local path\n\n```\nremote_location = AzRemoteSASLocation(\n    storage_account=storage_account,\n    container=container,\n    path=\"test1.jpg\",\n    sas_token=sas_token,\n)\n\nlocal_location = AzLocalLocation(\n    path=\"./test_data/test4.jpg\",\n)\n\ntransfer_options = AzCopyOptions(\n    overwrite_existing=True,\n)\n\naz_client = AzClient()\n\njob_info = az_client.download_data_to_local_location(\n    src=remote_location, dest=local_location, transfer_options=transfer_options\n)\n\nprint(job_info.__dict__)\n```\n\n### 3. Transfer files from one container to container\n\n```\nremote_location_src = AzRemoteSASLocation(\n    storage_account=storage_account1,\n    container=container1,\n    path=\"test1/\",\n    sas_token=sas_token_cont1,\n    use_wildcard=True,\n)\n\nremote_location_dest = AzRemoteSASLocation(\n    storage_account=storage_account2,\n    container=container2,\n    path=\"test_dest5/\",\n    sas_token=sas_token_cont2,\n)\n\ntransfer_options = AzCopyOptions(\n    overwrite_existing=True,\n    recursive=True,\n    put_md5=True,\n)\n\naz_client = AzClient()\n\njob_info = az_client.copy_remote_data_from_container_to_container(\n    src=remote_location_src, dest=remote_location_dest, transfer_options=transfer_options\n)\n\nprint(job_info.__dict__)\n```\n\n### 4. Sync a local directory to remote location\n\n```\nsrc = AzLocalLocation(\n    path=\"./test_data/test_data3/\",\n)\n\ndest = AzRemoteSASLocation(\n    storage_account=storage_account,\n    container=container,\n    path=\"test7/\",\n    sas_token=sas_token,\n)\n\ntransfer_options = AzSyncOptions(\n    recursive=True,\n    exclude_path=\"test_data_2;test_data_5\"\n)\n\naz_client = AzClient()\n\njob_info = az_client.sync_to_remote_location(\n    src=src, dest=dest, transfer_options=transfer_options\n)\n\nprint(job_info.__dict__)\n```\n\nFor more examples, you can refer [AzCopy Wrapper Examples Notebook](https://github.com/yashmarathe21/py-azcopy-wrapper/blob/master/examples.ipynb)\n\n## Common Issues\n\n1. For Windows operating system, if there is an error \"FileNotFoundError: [WinError 2] The system cannot find the file specified\", please ensure that the path to AzCopy exectable file is set in System Environment Variables. <br>\nIf the error persists even after setting the path, you can specify the path to the executable while creating the AzClient object. <br>\n```\naz_client = AzClient(exe_to_use=\"C:\\\\Users\\\\DELL\\\\AppData\\\\Local\\\\Programs\\\\AZCopy\\\\azcopy.exe\")\n```\n\n## v1.0.0\n\n- First version of this python azcopy wrapper!\n- Validated against AzCopy 10.17.0.\n- Copy and Sync commands\n- Tested on Ubuntu 20.04 and Windows 10.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yashmarathe21/py-azcopy-wrapper",
    "keywords": "azcopy wrapper python azure storage bulk upload blob sync copy",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "azcopy-wrapper",
    "package_url": "https://pypi.org/project/azcopy-wrapper/",
    "platform": null,
    "project_url": "https://pypi.org/project/azcopy-wrapper/",
    "project_urls": {
      "Homepage": "https://github.com/yashmarathe21/py-azcopy-wrapper"
    },
    "release_url": "https://pypi.org/project/azcopy-wrapper/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A simple AzCopy wrapper to transfer data",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17061992,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "479a60fd07dd12ddf098ea7cde97e222093bff3c246d14e925fe50486a9b6ff2",
          "md5": "7290b812aa65174870083a216701849d",
          "sha256": "b0ba329c18ad12225318ee571c54babd0c39562bff40d20be7f6e567ad4a30b2"
        },
        "downloads": -1,
        "filename": "azcopy_wrapper-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7290b812aa65174870083a216701849d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11248,
        "upload_time": "2023-02-27T08:53:52",
        "upload_time_iso_8601": "2023-02-27T08:53:52.071733Z",
        "url": "https://files.pythonhosted.org/packages/47/9a/60fd07dd12ddf098ea7cde97e222093bff3c246d14e925fe50486a9b6ff2/azcopy_wrapper-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6046569e9d17baade072ffb3a3a19b47276a3d073bd899edaa630e787ad9635",
          "md5": "7993b9489310c0904aaf6e3f090ce5f7",
          "sha256": "a18bc0f1e48c05737e0c70f243cb4ff454c70530ef30a722785eb17137162272"
        },
        "downloads": -1,
        "filename": "azcopy_wrapper-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7993b9489310c0904aaf6e3f090ce5f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11225,
        "upload_time": "2023-02-27T08:53:54",
        "upload_time_iso_8601": "2023-02-27T08:53:54.359478Z",
        "url": "https://files.pythonhosted.org/packages/f6/04/6569e9d17baade072ffb3a3a19b47276a3d073bd899edaa630e787ad9635/azcopy_wrapper-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "479a60fd07dd12ddf098ea7cde97e222093bff3c246d14e925fe50486a9b6ff2",
        "md5": "7290b812aa65174870083a216701849d",
        "sha256": "b0ba329c18ad12225318ee571c54babd0c39562bff40d20be7f6e567ad4a30b2"
      },
      "downloads": -1,
      "filename": "azcopy_wrapper-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7290b812aa65174870083a216701849d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11248,
      "upload_time": "2023-02-27T08:53:52",
      "upload_time_iso_8601": "2023-02-27T08:53:52.071733Z",
      "url": "https://files.pythonhosted.org/packages/47/9a/60fd07dd12ddf098ea7cde97e222093bff3c246d14e925fe50486a9b6ff2/azcopy_wrapper-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6046569e9d17baade072ffb3a3a19b47276a3d073bd899edaa630e787ad9635",
        "md5": "7993b9489310c0904aaf6e3f090ce5f7",
        "sha256": "a18bc0f1e48c05737e0c70f243cb4ff454c70530ef30a722785eb17137162272"
      },
      "downloads": -1,
      "filename": "azcopy_wrapper-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7993b9489310c0904aaf6e3f090ce5f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11225,
      "upload_time": "2023-02-27T08:53:54",
      "upload_time_iso_8601": "2023-02-27T08:53:54.359478Z",
      "url": "https://files.pythonhosted.org/packages/f6/04/6569e9d17baade072ffb3a3a19b47276a3d073bd899edaa630e787ad9635/azcopy_wrapper-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}