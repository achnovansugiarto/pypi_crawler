{
  "info": {
    "author": "Thomas-Otavio Peulen",
    "author_email": "thomas.otavio.peulen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Other Environment",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "AvTraj\n======\n\nAvTraj is tool to calculate FRET observables from MD-trajectories. Read, write and analyze accessible volumes (AVs) \nusing MD trajectories as an input with only a few lines of Python code. By the use of LabelLib AvTraj provides\nprogrammatic access to latest developments in implicit dye models for FRET experiments [![DOI for Citing COSB](https://img.shields.io/badge/DOI-10.1016/j.sbi.2016.11.012-blue.svg)](https://doi.org/10.1016/j.sbi.2016.11.012). \n\nAvTraj is a python library that allows users to perform simulations of accessible volumes for molecular\ndynamics (MD) trajectories. AvTraj serves as a high-level interface for the development of new methodologies\nfor structure-based fluorescence spectroscopy.\n\nFeatures include:\n\n        A wide support of diverse MD formats by the use of MDTraj. Extremely fast calculation of AVs by the\n        use of LabelLib (e.g. xxxx the speed of yyyy). Extensive analysis functions including those that compute\n        inter-dye distances, FRET-efficiencies, fluorescence decays, distance distributions, and an Pythonic API.\n\nAVTraj includes a command-line application, avana, for screening and analyzing structural models.\n\n\nRelation of other software and libraries\n----------------------------------------\n\nLabelLib serves as core low-level library for the software Olga and the higher-level Python library AvTraj. The\ndeprecated software FPS is independent of LabelLib.\n\n![LabelLib and other software/libraries][3]\n\n[Olga](https://github.com/Fluorescence-Tools/Olga) is a software dedicated towards experimentalists. Olga provides a graphical user interface for the calculation of accessible volumes (AVs), screen a set of structural models against experimental observables, rigid-body docking, \nand the optimal design of new FRET experiments. \n\n[AvTraj](https://github.com/Fluorescence-Tools/avtraj)\nAvTraj is a Python library for the calculation of accessible volumes (AVs), screening. AvTraj facilitates the development of new analytical approaches for FRET-based structural models. Avtraj facilitates processing of \nMD-simulations and the development of Python scripts handling FRET-based structural models. \n\n[FPS](http://www.mpc.hhu.de/software/fps.html) is a software with a graphical user interface for the FRET-based structural modeling. FPS can calculate accessible volumes (AVs), screen a set of structural models against experimental observables, and can generate new structural \nmodels by rigid-body docking using experimental FRET data.\n\n\nInstallation\n============\n\nAnaconda\n--------\n\n```commandline\nconda --add channels tpeulen\nconda install avtraj\n```\n\n\nCode Example\n============\n\n```python\nimport mdtraj as md\nimport avtraj as avt\n\n# First load an MD trajectory by mdtraj\ntraj = md.load('./examples/hGBP1_out_3.h5')\n\n# Pass a trajectory to fps.AVTrajectory. This creates an object, which can be \n# accessed as a list. The objects within the \"list\" are accessible volumes  \nav_traj = avt.AVTrajectory(traj, '18D', attachment_atom_selection='resSeq 7 and name CB')\n# These accessible volumes can be saved as xyz-file\nav_traj[0].save_xyz('test_344.xyz')\n\n# The dye parameters can either be passed explicitly on creation of the object\nav_traj = avt.AVTrajectory(traj, '18D', attachment_atom_selection='resSeq 7 and name CB', linker_length=25., linker_width=1.5, radius_1=6.0)\n\n# or they can be selected from a predefined set of parameters found in the JSON file dye_definition.json located within\n# the package directory \nav_traj = avt.AVTrajectory(traj, '18D', attachment_atom_selection='resSeq 7 and name CB', dye_parameter_set='D3Alexa488')\n\n# To calculate a trajectory of distances and distance distributions first a labeling file and a \"distance file\" \n# needs to be specified. The distance file contains a set of labeling positions and distances and should be compatible\n# to the labeling files used by the software \"Olga\". By default the \nav_dist = avt.AvDistanceTrajectory(traj, './examples/hGBP1_distance.json')\n\n```\n\n\nCitations \n=========\n\n* MDTraj - [![DOI for Citing MDTraj](https://img.shields.io/badge/DOI-10.1016%2Fj.bpj.2015.08.015-blue.svg)](http://doi.org/10.1016/j.bpj.2015.08.015)\n* FPS - [![DOI for Citing FPS](https://img.shields.io/badge/DOI-10.1038/nmeth.2222-blue.svg)](http://doi.org/10.1038/nmeth.2222)\n\n\nLicense\n=======\n\nGNU LGPL version 2.1, or at your option a later version of the license.\nVarious sub-portions of this library may be independently distributed under\ndifferent licenses. See those files for their specific terms.\n\n[3]: doc/img/software_overview.svg \"LabelLib and other software/libraries\"",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Fluorescence-Tools/avtraj",
    "keywords": "",
    "license": "LGPLv2.1",
    "maintainer": "",
    "maintainer_email": "",
    "name": "avtraj",
    "package_url": "https://pypi.org/project/avtraj/",
    "platform": "",
    "project_url": "https://pypi.org/project/avtraj/",
    "project_urls": {
      "Homepage": "https://github.com/Fluorescence-Tools/avtraj"
    },
    "release_url": "https://pypi.org/project/avtraj/0.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A library to calculate FRET observables for MD trajectories by accessible volume (AV) simulations.In the AV simulations the sterically allowed conformation space of the labels is approximated the conformational space of flexible attached ellipsoids.",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4356334,
  "releases": {
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8dd6fb18ca48a813a00463d6a3d9358b01109f1ac80615f95f178e9eb3ff2b47",
          "md5": "ea46166be56a1efcd9662acfce84c77e",
          "sha256": "0e8316ed178196db9351fe57df42a8398c4b1067710d698887bc901dc891e10d"
        },
        "downloads": -1,
        "filename": "avtraj-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ea46166be56a1efcd9662acfce84c77e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 265570,
        "upload_time": "2018-05-23T21:08:00",
        "upload_time_iso_8601": "2018-05-23T21:08:00.371513Z",
        "url": "https://files.pythonhosted.org/packages/8d/d6/fb18ca48a813a00463d6a3d9358b01109f1ac80615f95f178e9eb3ff2b47/avtraj-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ca31c4f51356b02efdfd1cab73e310f86e4e704cc31801991a6625bd6e7d751",
          "md5": "5d528152c9683f203da85d3e334ae041",
          "sha256": "120bca8af49644632e35c3d97e0363c6b24f21b54d983a5f5317697300332e44"
        },
        "downloads": -1,
        "filename": "avtraj-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "5d528152c9683f203da85d3e334ae041",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 66134,
        "upload_time": "2018-10-09T15:26:31",
        "upload_time_iso_8601": "2018-10-09T15:26:31.298033Z",
        "url": "https://files.pythonhosted.org/packages/7c/a3/1c4f51356b02efdfd1cab73e310f86e4e704cc31801991a6625bd6e7d751/avtraj-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ca31c4f51356b02efdfd1cab73e310f86e4e704cc31801991a6625bd6e7d751",
        "md5": "5d528152c9683f203da85d3e334ae041",
        "sha256": "120bca8af49644632e35c3d97e0363c6b24f21b54d983a5f5317697300332e44"
      },
      "downloads": -1,
      "filename": "avtraj-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "5d528152c9683f203da85d3e334ae041",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 66134,
      "upload_time": "2018-10-09T15:26:31",
      "upload_time_iso_8601": "2018-10-09T15:26:31.298033Z",
      "url": "https://files.pythonhosted.org/packages/7c/a3/1c4f51356b02efdfd1cab73e310f86e4e704cc31801991a6625bd6e7d751/avtraj-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}