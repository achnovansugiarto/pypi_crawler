{
  "info": {
    "author": "John Pendenque",
    "author_email": "pendenquejohn@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "# Py Aviation\n\nThe \"aviation\" project regroups a set of formulas and general principles for aviation for Python.\n\n\n# Getting started\n\nTo start using the module, you can start by creating a aircraft model from one of the base aircraft manufacturers.\n\n```\nfrom pyaviation.aircraft import Cessna\n\nairplane = Cessna()\n```\n\nThis creates a blank airplane model on which you can call a variety of functions.\n\nPython aviation comes however with a set of built in aircraft models that you can use.\n\n```\nfrom pyaviation.models  import A320\n\naircraft = A320()\n```\n\n## The flight mixin and basic calculations\n\nThe flight mixin regroups all the main definitions for calculating items related to flight.\n\nProvided you've constructed an airplane like above, you can do the following.\n\n### Calculating basic speed\n\n```\nairplane.calculate_speed(50, 2)\n\n>> \n```\n\n### Calculting distance\n\n```\nairplane.calculate_distance( , )\n\n>> \n```\n\n### Calculate duration\n\n```\nairplane.calculate_duration( , )\n\n>> \n```\n\n### Calculate arrival time\n\n```\nairplane.calculate_arrival_time( , )\n\n>> \n```\n\n### Calculate ground speed\n\n```\nairplane.ground_speed( , )\n\n>> \n```\n\n### True air speed\n\n```\nairplane.true_air_speed( , )\n\n>> \n```\n\n### Calculate density altitute\n\n```\nairplane.density_altitude( , )\n\n>> \n```\n\n### Calculate fuel\n\nCalculates the fuel consumed during a flight of x hours and minutes and eventually the remaining minutes left to fly with the fuel left.\n\n```\nairplane.fuel( , )\n\n>> \n```\n\n### Calculate consumption rate\n\n```\nairplane.fuel_consumption_rate( , )\n\n>>\n```\n\n\n### Calculate ground gradient\n\n```\nairplane.ground_gradient( , )\n\n>>\n```\n\n### Calculate obstacle clearance\n\n```\nairplane.calculate_obstacle_clearance( , )\n\n>>\n```\n\n\n### Calculate distance to horizon\n\n```\nairplane.distance_to_horizon( , )\n\n>>\n```\n\n### Calculate Needed fuel\n\n```\nairplane.needed_fuel( , )\n\n>>\n```\n\n## Specific aircraft calculations\n\nConsidering that each new class you create using the `BaseAircraft` class (exactly like we did in the above examples), each newly created class will provide additional definitions that will take into consideration the specific characteristics of each aircraft.\n\n### Safety factor\n\n```\nairplane.safety_factor( , )\n\n>>\n```\n\n### Net performance\n\n```\nairplane.net_performance( , )\n\n>>\n```\n\n### Gross performance\n\n```\nairplane.gross_performance( , )\n\n>>\n```\n\n### Gradient of climb\n\n```\nairplane.gradient_of_climb( , )\n\n>>\n```\n\n### Ground gradient\n\n```\nairplane.ground_gradient( , )\n\n>>\n```\n\n### Maximum payload\n\n```\nairplane.maximum_payload( , )\n\n>>\n```\n\n## Creating a new aircraft model\n\nCreating a new model is very simple. Just subclass the `Airplane` class in order to create a new manufacturer for example.\n\n```\nfrom pyaviation.aircraft import Aircraft\n\nclass CustomManufacturer(Aircraft):\n    manufacturer = \"Custom\"\n\nclass MyAircraft(CustomManufacturer):\n    version = \"eco-xxx\"\n    speed = {\n        \"cruise\": 456,\n        \"max\": 567\n    }\n    max_rang = 5678\n    weight = {\n        \"taxi\": 73900,\n        \"takeoff\": 73500,\n        \"landing\": 64500\n    }\n    fuel = {\n        \"max\": 23859\n    }\n    passengers = 150\n    ceiling = {\n        \"range\": [39100, 41000]\n    }\n\naircraft = MyAircraft()\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Zadigo/pyaviation/releases/tag/0.0.1-pre-alpha",
    "keywords": "python,aviation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyaviation",
    "package_url": "https://pypi.org/project/pyaviation/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyaviation/",
    "project_urls": {
      "Homepage": "https://github.com/Zadigo/pyaviation/releases/tag/0.0.1-pre-alpha"
    },
    "release_url": "https://pypi.org/project/pyaviation/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "This package provides functionnalities for aviation",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9157642,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b960246b1efe0578d5a8309ced9c16289cdfd74bf676b45b4b2dc1518d86b4ca",
          "md5": "e783d460f60834a6fe4029246f95e6b1",
          "sha256": "25ef7ab34afea3c131832caf2ed5dc4c42f7df633c9dd9e53f650f05282df9bc"
        },
        "downloads": -1,
        "filename": "pyaviation-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e783d460f60834a6fe4029246f95e6b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 3220,
        "upload_time": "2021-01-17T17:52:12",
        "upload_time_iso_8601": "2021-01-17T17:52:12.347885Z",
        "url": "https://files.pythonhosted.org/packages/b9/60/246b1efe0578d5a8309ced9c16289cdfd74bf676b45b4b2dc1518d86b4ca/pyaviation-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b960246b1efe0578d5a8309ced9c16289cdfd74bf676b45b4b2dc1518d86b4ca",
        "md5": "e783d460f60834a6fe4029246f95e6b1",
        "sha256": "25ef7ab34afea3c131832caf2ed5dc4c42f7df633c9dd9e53f650f05282df9bc"
      },
      "downloads": -1,
      "filename": "pyaviation-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e783d460f60834a6fe4029246f95e6b1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 3220,
      "upload_time": "2021-01-17T17:52:12",
      "upload_time_iso_8601": "2021-01-17T17:52:12.347885Z",
      "url": "https://files.pythonhosted.org/packages/b9/60/246b1efe0578d5a8309ced9c16289cdfd74bf676b45b4b2dc1518d86b4ca/pyaviation-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}